head	1.118;
access;
symbols;
locks; strict;
comment	@# @;


1.118
date	2016.02.25.23.00.54;	author tj;	state dead;
branches;
next	1.117;
commitid	22vlNC2N6wwejCAr;

1.117
date	2015.12.18.21.21.05;	author deraadt;	state Exp;
branches;
next	1.116;
commitid	djgiSDWjXlsT4w8X;

1.116
date	2015.07.02.05.49.05;	author bentley;	state Exp;
branches;
next	1.115;
commitid	AP3UllesavMDEUhQ;

1.115
date	2015.06.26.01.25.10;	author bentley;	state Exp;
branches;
next	1.114;
commitid	OiRDPuXVOD6SXXqb;

1.114
date	2015.02.07.06.54.38;	author bentley;	state Exp;
branches;
next	1.113;
commitid	qDdTs8s77HQyToTf;

1.113
date	2012.04.21.12.12.22;	author dtucker;	state Exp;
branches;
next	1.112;

1.112
date	2010.09.15.02.41.42;	author nick;	state Exp;
branches;
next	1.111;

1.111
date	2010.03.21.09.33.30;	author dtucker;	state Exp;
branches;
next	1.110;

1.110
date	2009.11.23.23.38.17;	author dtucker;	state Exp;
branches;
next	1.109;

1.109
date	2009.04.05.22.47.15;	author dtucker;	state Exp;
branches;
next	1.108;

1.108
date	2008.07.05.04.44.31;	author djm;	state Exp;
branches;
next	1.107;

1.107
date	2007.06.20.18.14.15;	author miod;	state Exp;
branches;
next	1.106;

1.106
date	2006.04.18.09.01.52;	author dtucker;	state Exp;
branches;
next	1.105;

1.105
date	2006.01.19.03.41.37;	author dtucker;	state Exp;
branches;
next	1.104;

1.104
date	2006.01.19.03.37.36;	author dtucker;	state Exp;
branches;
next	1.103;

1.103
date	2005.09.20.11.24.58;	author dtucker;	state Exp;
branches;
next	1.102;

1.102
date	2005.09.20.08.04.42;	author dtucker;	state Exp;
branches;
next	1.101;

1.101
date	2005.05.20.14.09.27;	author dtucker;	state Exp;
branches;
next	1.100;

1.100
date	2005.05.12.12.31.37;	author dtucker;	state Exp;
branches;
next	1.99;

1.99
date	2005.04.19.10.55.59;	author dtucker;	state Exp;
branches;
next	1.98;

1.98
date	2005.02.25.13.55.52;	author dtucker;	state Exp;
branches;
next	1.97;

1.97
date	2005.01.25.22.46.11;	author dtucker;	state Exp;
branches;
next	1.96;

1.96
date	2005.01.25.10.58.59;	author dtucker;	state Exp;
branches;
next	1.95;

1.95
date	2005.01.25.05.19.00;	author dtucker;	state Exp;
branches;
next	1.94;

1.94
date	2005.01.25.05.15.41;	author dtucker;	state Exp;
branches;
next	1.93;

1.93
date	2005.01.25.05.10.09;	author dtucker;	state Exp;
branches;
next	1.92;

1.92
date	2005.01.25.04.58.21;	author dtucker;	state Exp;
branches;
next	1.91;

1.91
date	2004.12.22.02.06.00;	author david;	state Exp;
branches;
next	1.90;

1.90
date	2004.09.11.03.40.48;	author jaredy;	state Exp;
branches;
next	1.89;

1.89
date	2004.09.09.01.19.30;	author djm;	state Exp;
branches;
next	1.88;

1.88
date	2004.05.15.07.39.42;	author dtucker;	state Exp;
branches;
next	1.87;

1.87
date	2004.05.15.06.30.00;	author dtucker;	state Exp;
branches;
next	1.86;

1.86
date	2004.05.05.01.15.43;	author dtucker;	state Exp;
branches;
next	1.85;

1.85
date	2004.04.27.06.04.25;	author saad;	state Exp;
branches;
next	1.84;

1.84
date	2004.04.22.22.27.07;	author saad;	state Exp;
branches;
next	1.83;

1.83
date	2004.04.22.17.48.14;	author saad;	state Exp;
branches;
next	1.82;

1.82
date	2004.04.22.13.40.19;	author dtucker;	state Exp;
branches;
next	1.81;

1.81
date	2004.04.13.04.12.14;	author dtucker;	state Exp;
branches;
next	1.80;

1.80
date	2004.04.13.04.05.46;	author dtucker;	state Exp;
branches;
next	1.79;

1.79
date	2004.04.13.03.54.15;	author dtucker;	state Exp;
branches;
next	1.78;

1.78
date	2004.04.11.08.06.01;	author dtucker;	state Exp;
branches;
next	1.77;

1.77
date	2004.04.10.02.47.48;	author dtucker;	state Exp;
branches;
next	1.76;

1.76
date	2004.04.09.12.33.27;	author dtucker;	state Exp;
branches;
next	1.75;

1.75
date	2004.04.09.12.30.38;	author dtucker;	state Exp;
branches;
next	1.74;

1.74
date	2004.04.09.12.12.51;	author dtucker;	state Exp;
branches;
next	1.73;

1.73
date	2004.04.09.12.05.37;	author dtucker;	state Exp;
branches;
next	1.72;

1.72
date	2004.04.09.12.01.05;	author dtucker;	state Exp;
branches;
next	1.71;

1.71
date	2004.04.06.08.06.13;	author dtucker;	state Exp;
branches;
next	1.70;

1.70
date	2004.04.05.22.31.46;	author dtucker;	state Exp;
branches;
next	1.69;

1.69
date	2004.03.22.13.14.48;	author saad;	state Exp;
branches;
next	1.68;

1.68
date	2004.03.17.23.08.03;	author dtucker;	state Exp;
branches;
next	1.67;

1.67
date	2004.03.13.23.40.37;	author saad;	state Exp;
branches;
next	1.66;

1.66
date	2004.03.13.00.22.43;	author saad;	state Exp;
branches;
next	1.65;

1.65
date	2004.03.09.12.42.20;	author dtucker;	state Exp;
branches;
next	1.64;

1.64
date	2004.03.09.12.04.07;	author dtucker;	state Exp;
branches;
next	1.63;

1.63
date	2004.03.09.11.33.39;	author dtucker;	state Exp;
branches;
next	1.62;

1.62
date	2004.03.09.11.29.35;	author dtucker;	state Exp;
branches;
next	1.61;

1.61
date	2004.03.01.19.54.59;	author saad;	state Exp;
branches;
next	1.60;

1.60
date	2004.03.01.19.44.15;	author saad;	state Exp;
branches;
next	1.59;

1.59
date	2004.02.27.01.20.07;	author dtucker;	state Exp;
branches;
next	1.58;

1.58
date	2004.02.26.23.46.49;	author dtucker;	state Exp;
branches;
next	1.57;

1.57
date	2004.01.25.05.01.47;	author dtucker;	state Exp;
branches;
next	1.56;

1.56
date	2004.01.25.03.14.53;	author nick;	state Exp;
branches;
next	1.55;

1.55
date	2003.10.06.04.22.44;	author david;	state Exp;
branches;
next	1.54;

1.54
date	2003.10.06.00.19.41;	author david;	state Exp;
branches;
next	1.53;

1.53
date	2003.02.26.21.23.48;	author david;	state Exp;
branches;
next	1.52;

1.52
date	2002.10.28.08.57.59;	author markus;	state Exp;
branches;
next	1.51;

1.51
date	2002.08.06.13.58.04;	author fgsch;	state Exp;
branches;
next	1.50;

1.50
date	2002.06.23.10.38.31;	author jufi;	state Exp;
branches;
next	1.49;

1.49
date	2002.05.19.10.58.18;	author jufi;	state Exp;
branches;
next	1.48;

1.48
date	2002.04.15.19.26.28;	author jufi;	state Exp;
branches;
next	1.47;

1.47
date	2002.04.12.14.52.29;	author provos;	state Exp;
branches;
next	1.46;

1.46
date	2002.04.03.21.29.25;	author stevesk;	state Exp;
branches;
next	1.45;

1.45
date	2002.03.26.16.48.27;	author markus;	state Exp;
branches;
next	1.44;

1.44
date	2002.01.20.11.19.05;	author jufi;	state Exp;
branches;
next	1.43;

1.43
date	2001.12.07.16.59.54;	author markus;	state Exp;
branches;
next	1.42;

1.42
date	2001.10.08.15.29.46;	author markus;	state Exp;
branches;
next	1.41;

1.41
date	2001.09.10.19.26.33;	author jufi;	state Exp;
branches;
next	1.40;

1.40
date	2001.07.13.15.46.53;	author markus;	state Exp;
branches;
next	1.39;

1.39
date	2001.06.09.16.39.05;	author pvalchev;	state Exp;
branches;
next	1.38;

1.38
date	2001.06.07.04.10.05;	author pvalchev;	state Exp;
branches;
next	1.37;

1.37
date	2001.05.22.08.03.24;	author kevlo;	state Exp;
branches;
next	1.36;

1.36
date	2001.05.05.22.57.07;	author markus;	state Exp;
branches;
next	1.35;

1.35
date	2001.03.22.13.10.23;	author horacio;	state Exp;
branches;
next	1.34;

1.34
date	2001.03.14.01.01.45;	author djm;	state Exp;
branches;
next	1.33;

1.33
date	2001.02.28.19.35.59;	author wvdputte;	state Exp;
branches;
next	1.32;

1.32
date	2001.02.26.16.54.28;	author stevesk;	state Exp;
branches;
next	1.31;

1.31
date	2001.02.26.16.47.22;	author stevesk;	state Exp;
branches;
next	1.30;

1.30
date	2001.02.25.07.13.14;	author ericj;	state Exp;
branches;
next	1.29;

1.29
date	2001.02.22.22.08.12;	author horacio;	state Exp;
branches;
next	1.28;

1.28
date	2001.02.16.13.28.11;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	2001.02.15.15.01.43;	author naddy;	state Exp;
branches;
next	1.26;

1.26
date	2001.02.12.21.16.51;	author naddy;	state Exp;
branches;
next	1.25;

1.25
date	2001.02.07.22.12.04;	author ericj;	state Exp;
branches;
next	1.24;

1.24
date	2001.01.27.19.18.38;	author markus;	state Exp;
branches;
next	1.23;

1.23
date	2001.01.27.16.34.26;	author markus;	state Exp;
branches;
next	1.22;

1.22
date	2001.01.04.22.35.22;	author markus;	state Exp;
branches;
next	1.21;

1.21
date	2000.12.26.09.48.51;	author jufi;	state Exp;
branches;
next	1.20;

1.20
date	2000.12.14.12.09.53;	author djm;	state Exp;
branches;
next	1.19;

1.19
date	2000.11.30.05.14.27;	author djm;	state Exp;
branches;
next	1.18;

1.18
date	2000.11.15.22.57.54;	author markus;	state Exp;
branches;
next	1.17;

1.17
date	2000.10.15.00.36.29;	author djm;	state Exp;
branches;
next	1.16;

1.16
date	2000.10.14.12.17.22;	author djm;	state Exp;
branches;
next	1.15;

1.15
date	2000.10.09.07.40.46;	author reinhard;	state Exp;
branches;
next	1.14;

1.14
date	2000.09.25.20.07.41;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2000.09.01.15.44.19;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2000.08.04.06.54.15;	author jufi;	state Exp;
branches;
next	1.11;

1.11
date	2000.07.31.23.38.02;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2000.07.29.17.10.01;	author markus;	state Exp;
branches;
next	1.9;

1.9
date	2000.07.23.21.34.44;	author jufi;	state Exp;
branches;
next	1.8;

1.8
date	2000.07.21.19.27.07;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.10.03.43.31;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.09.22.49.33;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2000.05.31.13.49.51;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.25.07.47.59;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.25.07.12.11;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.08.01.43.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.08.01.39.04;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.118
log
@remove ancient openssh faq, which featured questions like "why is the ssh
client setuid root?" and "why does ssh 2.3 have problems interoperating
with openssh 2.1.1?"

no objection from djm
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>OpenSSH FAQ</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name= "description"   content= "the OpenSSH FAQ page">
<meta name= "copyright"     content= "This document copyright 1999-2010 OpenBSD.">
</head>

<body bgcolor= "#ffffff" text= "#000000" link= "#23238E">
<a href="index.html"><img alt="[OpenSSH]" height="30" width="141" src="images/smalltitle.gif" border="0"></a>
<p>

<h1>OpenSSH FAQ (Frequently Asked Questions)</h1>

<hr>

<blockquote>
<h3><a href= "#1.0">1.0 - What is OpenSSH and how do I get it?</a></h3>
<ul>
<li><a href= "#1.1">1.1 - What is OpenSSH and where can I download it?</a>
<li><a href= "#1.2">1.2 - Why should it be used?</a>
<li><a href= "#1.3">1.3 - What operating systems are supported?</a>
<li><a href= "#1.4">1.4 - What about copyright, usage and patents?</a>
<li><a href= "#1.5">1.5 - Where should I ask for help?</a>
<li><a href= "#1.6">1.6 - Where do I report bugs?</a>
</ul>

<h3><a href= "#2.0">2.0 - General Questions</a></h3>
<ul>
<li><a href= "#2.1">2.1 - Why does ssh/scp make connections from low-numbered ports. My firewall blocks these.</a>
<li><a href= "#2.2">2.2 - Why is the ssh client setuid root?</a>
<li><a href= "#2.3">2.3 - Why does SSH 2.3 have problems interoperating with OpenSSH 2.1.1?</a>
<li><a href= "#2.4">2.4 - Why does OpenSSH print: Dispatch protocol error: type 20</a>
<li><a href= "#2.5">2.5 - Old versions of commercial SSH encrypt host keys with IDEA.</a>
<li><a href= "#2.6">2.6 - What are these warning messages about key lengths?</a>
<li><a href= "#2.7">2.7 - X11 and/or agent forwarding does not work.</a>
<li><a href= "#2.8">2.8 - After upgrading OpenSSH I lost SSH2 support.</a>
<li><a href= "#2.9">2.9 - sftp/scp fails at connection, but ssh is OK.</a>
<li><a href= "#2.10">2.10 - Will you add [foo] to scp?</a>
<li><a href= "#2.11">2.11 - How do I use port forwarding?</a>
<li><a href= "#2.12">2.12 - My ssh connection freezes or drops out after N minutes of inactivity.</a>
<li><a href= "#2.13">2.13 - How do I use scp to copy a file with a colon in it?</a>
<li><a href= "#2.14">2.14 - Why does OpenSSH report its version to clients?</a>
</ul>

<h3><a href= "#3.0">3.0 - Portable OpenSSH Questions</a></h3>
<ul>
<li><a href= "#3.1">3.1 - Spurious PAM authentication messages in logfiles.</a>
<li><a href= "#3.2">3.2 - Empty passwords not allowed with PAM authentication.</a>
<li><a href= "#3.3">3.3 - ssh(1) takes a long time to connect or log in</a>
<li><a href= "#3.4">3.4 - "Can't locate module net-pf-10" messages in log under Linux.</a>
<li><a href= "#3.5">3.5 - Password authentication doesn't work (eg on Slackware 7.0 or Red Hat Linux 6.x)</a>
<li><a href= "#3.6">3.6 - Configure or sshd(8) complain about lack of RSA support</a>
<li><a href= "#3.7">3.7 - "scp: command not found" errors</a>
<li><a href= "#3.8">3.8 - Unable to read passphrase</a>
<li><a href= "#3.9">3.9 - 'configure' missing or make fails</a>
<li><a href= "#3.10">3.10 - Hangs when exiting ssh</a>
<li><a href= "#3.11">3.11 - Why does ssh hang on exit?</a>
<li><a href= "#3.12">3.12 - I upgraded to OpenSSH 3.1 and X11 forwarding stopped working.</a>
<li><a href= "#3.13">3.13 - I upgraded to OpenSSH 3.8 and some X11 programs stopped working.</a>
<li><a href= "#3.14">3.14 - I copied my public key to authorized_keys but public-key authentication still doesn't work.</a>
<li><a href= "#3.15">3.15 - OpenSSH versions and PAM behaviour.</a>
<li><a href= "#3.16">3.16 - Why doesn't "w" or "who" on AIX 5.x show users logged in via ssh?</a>
</ul>

</blockquote>

<hr>

<h2><u><a name= "1.0">1.0 - What Is OpenSSH and how do I get it?</a></u></h2>

<h2><a name= "1.1">1.1 - What is OpenSSH and where can I download it?</a></h2>

OpenSSH provides end-to-end encrypted replacement of applications such as
telnet, rlogin, and ftp.
Unlike these legacy applications, OpenSSH never passes anything
(including username and password) over the wire in unencrypted form, and
provides host authentication, to verify that you really are talking to
the system that you think you are and that no one else can take over
that session.

<p>
The OpenSSH suite includes the 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> 
program which replaces rlogin and telnet, and 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> 
which replaces 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&amp;sektion=1">rcp(1)</a> and 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a>. 
OpenSSH has also added 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> and 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> 
which implement an easier solution for file-transfer. This is based upon the 
<a href="txt/draft-ietf-secsh-filexfer-02.txt">secsh-filexfer</a> IETF draft.


<p><strong>OpenSSH consists of a number of programs.</strong>

<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> - Server program run on the server machine. This listens for connections from client machines, and whenever it receives a connection, it performs authentication and starts serving the client.
Its behaviour is controlled by the config file <i><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config&amp;sektion=5">
sshd_config(5)</a></i>.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> - This is the client program used to log into another machine or to execute commands on the other machine. <i>slogin</i> is another name for this program.
Its behaviour is controlled by the global config file <i><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh_config&amp;sektion=5">
ssh_config(5)</a></i> and individual users' <i>$HOME/.ssh/config</i> files.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> - Securely copies files from one machine to another.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> - Used to create Pubkey Authentication (RSA or DSA) keys (host keys and user authentication keys).
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-agent&amp;sektion=1">ssh-agent(1)</a> - Authentication agent.  This can be used to hold RSA keys for authentication.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-add&amp;sektion=1">ssh-add(1)</a> - Used to register new keys with the agent.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> - SFTP server subsystem.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> - Secure file transfer program.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keyscan&amp;sektion=1">ssh-keyscan(1)</a> - gather ssh public keys.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign&amp;sektion=8">ssh-keysign(8)</a> - ssh helper program for hostbased authentication.
</ul>

<h3>Downloading</h3>

<p>
The most recent version of OpenSSH is included with the current
distribution of <a href="http://www.openbsd.org/">OpenBSD</a>, and
installed as part of a basic install.

<p>
Today, most other operating systems include some version of OpenSSH
(often re-badged or privately labeled), so most users can immediately
use it.
However, sometimes the included versions are quite old, and missing
features of the current release of OpenSSH, and you may wish to install
the current version, or install it on one of the few OSs that lacked it,
and where the OS publisher does not make a modern version available.
You may also wish to use OpenSSH on your embedded application.

<p>
Non-OpenBSD users will want to download, compile and install the
multi-platform <a href="portable.html">Portable</a> distribution from a
<a href="portable.html#mirrors">mirror</a> near you.


<h2><a name= "1.2">1.2 - Why should it be used?</a></h2>

<p>
OpenSSH is a suite of tools to help secure your network 
connections. Here is a list of features:


<ul>
	<li>Strong authentication.  Closes several security holes (e.g., IP, routing, and DNS spoofing).
	<li>Improved privacy.  All communications are automatically and transparently encrypted.
	<li>Secure X11 sessions.  The program automatically sets DISPLAY on the server machine, and forwards any X11 connections over the secure channel.
	<li>Arbitrary TCP/IP ports can be redirected through the encrypted channel in both directions (e.g., for e-cash transactions).
	<li>No retraining needed for normal users.
	<li>Never trusts the network. Minimal trust on the remote side of the connection. Minimal trust on domain name servers. Pure RSA authentication never trusts anything but the private key.
	<li>Client RSA-authenticates the server machine in the beginning of every connection to prevent trojan horses (by routing or DNS spoofing) and man-in-the-middle attacks, and the server RSA-authenticates the client machine before accepting <i>.rhosts</i> or <i>/etc/hosts.equiv</i> authentication (to prevent DNS, routing, or IP-spoofing).
	<li>Host authentication key distribution can be centrally by the administration, automatically when the first connection is made to a machine.
	<li>Any user can create any number of user authentication RSA keys for his/her own use.
	<li>The server program has its own server RSA key which is automatically regenerated every hour.
	<li>An authentication agent, running in the user's laptop or local workstation, can be used to hold the user's RSA authentication keys.
	<li>The software can be installed and used (with restricted functionality) even without root privileges.
	<li>The client is customizable in system-wide and per-user configuration files.
	<li>Optional compression of all data with gzip (including forwarded X11 and TCP/IP port data), which may result in significant speedups on slow connections.
	<li>Complete replacement for rlogin, rsh, and rcp.
</ul>

<p>
Currently, almost all communications in computer networks are done
without encryption.  As a consequence, anyone who has access to any
machine connected to the network can listen in on any communication.
This is being done by hackers, curious administrators, employers,
criminals, industrial spies, and governments.  Some networks leak off
enough electromagnetic radiation that data may be captured even from a
distance.


<p>
When you log in, your password goes in the network in plain
text.  Thus, any listener can then use your account to do any evil he
likes.  Many incidents have been encountered worldwide where crackers
have started programs on workstations without the owner's knowledge
just to listen to the network and collect passwords.  Programs for
doing this are available on the Internet, or can be built by a
competent programmer in a few hours.


<p>
Businesses have trade secrets, patent applications in preparation,
pricing information, subcontractor information, client data, personnel
data, financial information, etc.  Currently, anyone with access to
the network (any machine on the network) can listen to anything that
goes in the network, without any regard to normal access restrictions.


<p>
Many companies are not aware that information can so easily be
recovered from the network.  They trust that their data is safe
since nobody is supposed to know that there is sensitive information
in the network, or because so much other data is transferred in the
network.  This is not a safe policy.


<h2><a name= "1.3">1.3 - What operating systems are supported?</a></h2>

<p>
Even though OpenSSH is developed on 
<a href="http://www.openbsd.org/">OpenBSD</a> a wide variety of 
ports to other operating systems exist. The portable version of OpenSSH 
is headed by <a href="mailto:djm@@openbsd.org">Damien Miller</a>. 
For a quick overview of the portable version of OpenSSH see 
<a href="portable.html">OpenSSH Portable Release</a>.
Currently, the supported operating systems are:


<ul>
	<li>OpenBSD
	<li>NetBSD
	<li>FreeBSD
	<li>AIX 
	<li>HP-UX 
	<li>IRIX 
	<li>Linux 
	<li>NeXT 
	<li>SCO 
	<li>SNI/Reliant Unix 
	<li>Solaris 
	<li>Digital Unix/Tru64/OSF 
	<li>Mac OS X 
	<li>Cygwin
</ul>

<p>
A list of vendors that include OpenSSH in their distributions 
is located in the <a href="users.html">OpenSSH Users page</a>.

<h2><a name= "1.4">1.4 - What about copyrights, usage and patents?</a></h2>
<p>
The OpenSSH developers have tried very hard to keep OpenSSH free of any 
patent or copyright problems. To do this, some options had to be 
stripped from OpenSSH. Namely support for patented algorithms.

<p>
OpenSSH does not support any patented transport algorithms. In SSH1 mode, 
only 3DES and Blowfish are available options. In SSH2 mode, only 3DES, 
Blowfish, CAST128, Arcfour and AES can be selected. 
The patented IDEA algorithm is not supported.

<p>
OpenSSH provides support for both SSH1 and SSH2 protocols. 

<p>
Since the RSA patent has expired, there are no restrictions on the use 
of RSA algorithm using software, including OpenBSD.

<h2><a name= "1.5">1.5 - Where should I ask for help?</a></h2>
<p>
There are many places to turn to for help. In addition to the main
<a href="index.html">OpenSSH website</a>, 
there are many mailing lists to try. Before trying any mailing lists, 
please search through all mailing list archives to see if your question 
has already been answered. The OpenSSH Mailing List has been archived and 
put in searchable form and can be found at 
<a href="http://marc.info/?l=openssh-unix-dev&amp;r=1&amp;w=2">marc.info</a>.

<p>
For more information on subscribing to OpenSSH related mailing lists, 
please see <a href="list.html">OpenSSH Mailing lists</a>.

<h2><a name= "1.6">1.6 - Where do I report bugs?</a></h2>
<p>
Information about submitting bug reports can be found at the OpenSSH
<a href="report.html">Reporting bugs</a> page.
<p>
If you wish to report a security bug, please contact the private developers
list &lt;<a href="mailto:openssh@@openssh.com">openssh@@openssh.com</a>&gt;.

<h2><u><a name= "2.0">2.0 - General Questions</a></u></h2>

<h2><a name= "2.1">2.1 - Why does ssh/scp make connections from low-numbered ports.</a></h2>
<p>
The OpenSSH client uses low numbered ports for rhosts and rhosts-rsa 
authentication because the server needs to trust the username provided by 
the client. To get around this, you can add the below example to your 
<i>ssh_config</i> or <i>~/.ssh/config</i> file.


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>UsePrivilegedPort no</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
Or you can specify this option on the command line, using the <b>-o</b> 
option to 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> command.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>ssh -o "UsePrivilegedPort no" host.com</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.2">2.2 - Why is the ssh client setuid root?</a></h2>

<p>
In conjunction with the previous question, (<a href="#2.1">2.1</a>)
OpenSSH needs root authority to be able to bind to low-numbered ports to 
facilitate <i>rhosts authentication</i>.
A privileged port is also required for rhosts-rsa authentication to older
SSH releases.

<p>
Additionally, for both <i>rhosts-rsa authentication</i> (in protocol 
version 1) and <i>hostbased authentication</i> (in protocol version 2) 
the ssh client needs to access the <i>private host key</i> in order to 
authenticate the client machine to the server.
OpenSSH versions prior to 3.3 required the <code>ssh</code> binary to be
setuid root to enable this, and you may safely remove it if you don't
want to use these authentication methods.

<p>
Starting in OpenSSH 3.3, <code>ssh</code> is not setuid by default.  <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign">ssh-keysign</a>,
is used for access to the private hosts keys, and ssh does not use privileged
source ports by default.  If you wish to use a privileged source port, you must
manually set the setuid bit on <code>ssh</code>.

<h2><a name= "2.3">2.3 - Why does SSH 2.3 have problems interoperating with OpenSSH 2.1.1?</a></h2>

<p>
SSH 2.3 and earlier versions contain a flaw in their HMAC implementation. 
Their code was not supplying the full data block output from the digest, 
and instead always provided 128 bits. For longer digests, this caused 
SSH 2.3 to not interoperate with OpenSSH.

<p>
OpenSSH 2.2.0 detects that SSH 2.3 has this flaw. Recent versions of SSH 
will have this bug fixed. Or you can add the following to 
SSH 2.3 <i>sshd2_config</i>.


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>Mac hmac-md5</b>
               </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.4">2.4 - Why does OpenSSH print: Dispatch protocol error: type 20</a></h2>

<p>
Problems in interoperation have been seen because older versions of 
OpenSSH did not support session rekeying. However the commercial SSH 2.3 
tries to negotiate this feature, and you might experience connection 
freezes or see the error message &quot;<b>Dispatch protocol error: 
type 20 </b>&quot;. 
To solve this problem, either upgrade to a recent OpenSSH release or 
disable rekeying by adding the following to your commercial SSH 2.3's
<i>ssh2_config</i> or <i>sshd2_config</i>.


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>RekeyIntervalSeconds 0</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.5">2.5 - Old versions of commercial SSH encrypt host keys with IDEA.</a></h2>

<p>
The old versions of SSH used a patented algorithm to encrypt their 
<i>/etc/ssh/ssh_host_key</i>. This problem will manifest as 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> 
not being able to read its host key. To solve this, use the command below 
to convert your ssh_host_key to use 3DES. 
<b>NOTE:</b> Use the 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> 
program from the Commercial SSH product, *NOT* OpenSSH for the example 
below.


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
# <b>ssh-keygen -u -f /etc/ssh/ssh_host_key</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.6">2.6 - What are these warning messages about key lengths</a></h2>

<p>
Commercial SSH's 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> 
program contained a bug which caused it to occasionally generate Pubkey 
Authentication (RSA or DSA) keys which had their Most Significant Bit 
(MSB) unset. Such keys were advertised as being full-length, but are 
actually, half the time, smaller than advertised.

<p>
OpenSSH will print warning messages when it encounters such keys. To rid 
yourself of these message, edit your <i>known_hosts</i> files and replace the 
incorrect key length (usually "1024") with the correct key length 
(usually "1023").

<h2><a name= "2.7">2.7 - X11 and/or agent forwarding does not work.</a></h2>

<p>
Check your <i>ssh_config</i> and <i>sshd_config</i>. The default 
configuration files disable authentication agent and X11 forwarding. To 
enable it, put the line below in <i>sshd_config</i>:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>X11Forwarding yes</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
and put the following lines in <i>ssh_config</i>:

<blockquote>
<table border=0 width="800">
	<tr>
		<td nowrap bgcolor="#EEEEEE">
<b>ForwardAgent yes</b><br>
<b>ForwardX11 yes</b>
		</td>
	</tr>
</table>
</blockquote>

<p>
X11 forwarding requires a working <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=xauth&amp;sektion=1"
>xauth(1)</a> binary.  On OpenBSD this is in the <i>xbase</i> file
set but will probably be different on other platforms.  For OpenSSH
Portable, xauth must be either found at configure time or specified
via <b>XAuthLocation</b> in sshd_config(5) and ssh_config(5).

<p>
Note on agent interoperability: There are two different and
incompatible agent forwarding mechanisms within the SSH2 protocol.
OpenSSH has always used an extension of the original SSH1 agent
requests, however some commercial products use a different, non-free
agent forwarding protocol.  This means that agent forwarding cannot
be used between OpenSSH and those products.

<p>
<b>NOTE:</b> For users of Linux Mandrake 7.2, Mandrake modifies the 
<i>XAUTHORITY</i> environment variable in <i>/etc/skel/.bashrc</i>, 
and thus any bash user's home directory. This variable is set by OpenSSH 
and for either of the above options to work, you need to comment out 
the line:


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b># export XAUTHORITY=$HOME/.Xauthority</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.8">2.8 - After upgrading OpenSSH I lost SSH2 support.</a></h2>

<p>
Between versions changes can be made to <i>sshd_config</i> or 
<i>ssh_config</i>. You should always check on these changes when upgrading 
versions of OpenSSH. After OpenSSH Version 2.3.0 you need to add the 
following to your <i>sshd_config</i>:


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>HostKey /etc/ssh_host_dsa_key</b><br>
<b>HostKey /etc/ssh_host_rsa_key</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.9">2.9 - sftp/scp fails at connection, but ssh is OK.</a></h2>

<p>
sftp and/or scp may fail at connection time if you have shell 
initialization (.profile, .bashrc, .cshrc, etc) which produces output 
for non-interactive sessions. This output confuses the sftp/scp client.  
You can verify if your shell is doing this by executing:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>ssh yourhost /usr/bin/true</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
If the above command produces any output, then you need to modify your 
shell initialization.

<h2><a name= "2.10">2.10 - Will you add [foo] to scp?</a></h2>

<p>
Short Answer: no.

<p>
Long Answer: scp is not standardized. The closest thing it has to a
specification is "what rcp does".  Since the same command is used on both ends
of the connection, adding features or options risks breaking interoperability with other
implementations.

<p>
New features are more likely in sftp, since the protocol is standardized
(well, a <a href="http://www.ietf.org/html.charters/OLD/secsh-charter.html">
draft standard</a>), extensible, and the client and server are decoupled.

<h2><a name= "2.11">2.11 - How do I use port forwarding?</a></h2>

<p>
If the remote server is running sshd(8), it may be possible to
``tunnel'' certain services via ssh.  This may be desirable, for
example, to encrypt POP or SMTP connections, even though the software
does not directly support encrypted communications.  Tunnelling uses
port forwarding to create a connection between the client and server.
The client software must be able to specify a non-standard port to
connect to for this to work.

<p>
The idea is that the user connects to the remote host using ssh,
and specifies which port on the client's machine should be used to
forward connections to the remote server.  After that it is possible
to start the service which is to be encrypted (e.g. fetchmail, irc)
on the client machine, specifying the same local port passed to
ssh, and the connection will be tunnelled through ssh.  By default,
the system running the forward will only accept connections from
itself.

<p>
The options most relevant to tunnelling are the -L and -R options,
which allow the user to forward connections, the -D option, which
permits dynamic port forwarding, the -g option, which permits other
hosts to use port forwards, and the -f option, which instructs ssh
to put itself in the background after authentication.  See the <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1"
>ssh(1)</a> man page for further details.

<p>
This is an example of tunnelling an IRC session from client machine
``127.0.0.1'' (localhost) to remote server ``server.example.com'':

<blockquote>
<table border=0 width="800">
	<tr>
		<td nowrap bgcolor="#EEEEEE">
<b>ssh -f -L 1234:server.example.com:6667 server.example.com sleep 10<br>
irc -c '#users' -p 1234 pinky 127.0.0.1</b>
	</td>
	</tr>
</table>
</blockquote>

<p>
This tunnels a connection to IRC server server.example.com, joining
channel ``#users'', using the nickname ``pinky''.  The local port used
in this example is 1234.  It does not matter which port is used, as
long as it's greater than 1023 (remember, only root can open sockets on
privileged ports) and doesn't conflict with any ports already in use.
The connection is forwarded to port 6667 on the remote server, since
that's the standard port for IRC services.

<p>
The remote command ``sleep 10'' was specified to allow an amount
of time (10 seconds, in the example) to start the service which is to
be tunnelled.  If no connections are made within the time specified,
ssh will exit.  If more time is required, the sleep(1) value can be
increased appropriately or, alternatively, the example above could
be added as a function to the user's shell.  See ksh(1) and csh(1)
for more details about user-defined functions.

<p>
ssh also has an -N option, convenient for use with port forwarding:
if -N is specified, it is not necessary to specify a remote command
(``sleep 10'' in the example above).  However, use of this option
causes ssh to wait around for ever (as opposed to exiting after a
remote command has completed), and the user must take care to manually
kill(1) the process afterwards.

<h2><a name= "2.12">2.12 - My ssh connection freezes or drops out after N minutes of inactivity.</a></h2>

<p>
This is usually the result of a packet filter or NAT device
timing out your TCP connection due to inactivity.  You can enable
<b>ClientAliveInterval</b> in the server's <i><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config&amp;sektion=5">
sshd_config</a></i>, or enable <b>ServerAliveInterval</b> in the
client's <i><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh_config&amp;sektion=5">
ssh_config</a></i> (the latter is available in OpenSSH 3.8 and newer).

<p>
Enabling either option and setting the interval for less than the time
it takes to time out your session will ensure that the connection is
kept "fresh" in the device's connection table.

<h2><a name= "2.13">2.13 - How do I use scp to copy a file with a colon in it?</a></h2>

<b><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">
scp</a></b> will interpret the component before the colon to be a remote
server name and attempt to connect to it.  To prevent this, refer to
the file by a relative or absolute path, eg:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ scp ./source:file sshserver:
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.14">2.14 - Why does OpenSSH report its version to clients?</a></h2>

<p>
OpenSSH, like most SSH implementations, reports its name and version to clients
when they connect, e.g.
</p>

<blockquote>
SSH-2.0-OpenSSH_3.9
</blockquote>

<p>
This information is used by clients and servers to enable protocol 
compatibility tweaks to work around changed, buggy or missing features in 
the implementation they are talking to. This protocol feature checking is 
still required at present because versions with incompatibilities are still
in wide use.
</p>

<h2><u><a name= "3.0">3.0 - Portable OpenSSH Questions</a></u></h2>

<h2><a name= "3.1">3.1 - Spurious PAM authentication messages in logfiles.</a></h2>

<p>
The portable version of OpenSSH will generate spurious authentication 
failures at every login, similar to:


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
&quot;<b>authentication failure; (uid=0) -&gt; root for sshd service</b>&quot;
                </td>
        </tr>
</table>
</blockquote>

<p>
These are generated because OpenSSH first tries to determine whether a 
user needs authentication to login (e.g. empty password). Unfortunately 
PAM likes to log all authentication events, this one included.

<p>
If it annoys you too much, set &quot;<b>PermitEmptyPasswords no</b>&quot; 
in <i>sshd_config</i>. This will quiet the error message at the expense 
of disabling logins to accounts with no password set. 
This is the default if you use the supplied <i>sshd_config</i> file.

<h2><a name= "3.2">3.2 - Empty passwords not allowed with PAM authentication.</a></h2>

<p>
To enable empty passwords with a version of OpenSSH built with PAM you 
must add the flag nullok to the end of the password checking module 
in the <i>/etc/pam.d/sshd</i> file. For example:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
auth required/lib/security/pam_unix.so shadow nodelay nullok
                </td>
        </tr>
</table>
</blockquote>

<p>
This must be done in addition to setting &quot;<b>PermitEmptyPasswords 
yes</b>&quot; in the <i>sshd_config</i> file. 

<p>
There is one caveat when using empty passwords with PAM authentication: 
PAM will allow any password when authenticating an account with an empty 
password. This breaks the check that 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> 
uses to determine whether an account has no password set and grant 
users access to the account regardless of the policy specified by 
<b>PermitEmptyPasswords</b>. For this reason, it is recommended that you 
do not add the <b>nullok</b> directive to your PAM configuration file 
unless you specifically wish to allow empty passwords.


<h2><a name= "3.3">3.3 - ssh(1) takes a long time to connect or log
in</a></h2>

<p>
Large delays (more than 10 seconds) are typically caused by a problem with
name resolution:
<ul>
<li>Some versions of glibc (notably glibc 2.1 shipped with Red Hat 6.1)
can take a long time to resolve "IPv6 or IPv4" addresses from domain
names. This can be worked around with by specifying <b>AddressFamily
inet</b> option in <i>ssh_config</i>.</li>

<li>There may be a DNS lookup problem, either at the client or server.
You can use the <code>nslookup</code> command to check this on both client
and server by looking up the other end's name and IP address.  In
addition, on the server look up the name returned by the client's
IP-name lookup.  You can disable most of the server-side lookups by
setting <b>UseDNS no</b> in <i>sshd_config</i>.</li>
</ul>

<p>
Delays less than 10 seconds can have other causes.

<ul>

<li>OpenSSH releases prior to 3.8 had an <i>moduli</i> file with
moduli that were just smaller than what sshd would look for, and
as a result, sshd would end up using moduli significantly larger
than requested, which resulted in a speed penalty.  Replacing the
<i>moduli</i> file will resolve this (note that in most cases this
file will not be replaced during an upgrade and must be replaced
manually).</li>

<li>OpenSSH releases prior to 3.8 had a flaw in <code>ssh</code> that
would cause it to request moduli larger than intended (which when
combined with the above resulted in significant slowdowns).
Upgrading the client to 3.8 or higher will resolve this issue.</li>

<li>If either the client or server lack a kernel-based random number
device (eg Solaris &lt; 9, AIX &lt; 5.2, HP-UX &lt; 11.11) and no
substitute is available (eg <a href=
"ftp://ftp.ayamura.org/pub/prngd/">prngd</a>) it's possible that
one of the programs called by <code>ssh-rand-helper</code> to
generate entropy is hanging.  This can be investigated by running
it in debug mode:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
/usr/local/libexec/ssh-rand-helper -vvv
                </td>
        </tr>
</table>
</blockquote>

Any significant delays should be investigated and rectified, or the
corresponding commands should be removed from <i>ssh_prng_cmds</i>.
</li>

</ul>

<h3>How slow is "slow"?</h3>
Under normal conditions, the speed of SSH logins is dependant on
CPU speed of client and server.  For comparison the following are
typical connect times for <code>time ssh localhost true</code>
with a 1024-bit RSA key on otherwise unloaded hosts.  OpenSSH and
OpenSSL were compiled with gcc 3.3.x.

<p>
<table>
<tr><th>CPU</th><th>Time (SSHv1)<a href="#3.3fn1">[1]</a></th>
	<th>Time (SSHv2)</th></tr>
<tr><td>170MHz SPARC/sun4m</td><td>0.74 sec</td><td>1.25 sec</td></tr>
<tr><td>236MHz HPPA/8200<a href="#3.3fn2">[2]</a></td><td>0.44 sec</td>
	<td>0.79 sec</td></tr>
<tr><td>375MHz PowerPC/604e</td><td>0.38 sec</td><td>0.51 sec</td></tr>
<tr><td>933MHz VIA Ezra</td><td>0.34 sec</td><td>0.44 sec</td></tr>
<tr><td>2.1GHz Athlon XP 2600+</td><td>0.14 sec</td><td>0.22 sec</td></tr>
</table>

<br>

<a name="3.3fn1">[1]</a> The SSHv1 protocol is faster but is
cryptographically weaker than SSHv2.<br>

<a name="3.3fn2">[2]</a> At the time of writing, gcc generates
relatively slow code on HPPA for RSA and Diffie-Hellman operations
(see <a href= "http://gcc.gnu.org/bugzilla/show_bug.cgi?id=7625">gcc
bug #7625</a> and <a
href="http://marc.info/?l=openssh-unix-dev&amp;m=102646106016694">
discussion on openssh-unix-dev</a>).

<h2><a name= "3.4">3.4 - "Can't locate module net-pf-10" messages in log under Linux.</a></h2>

<p>
The Linux kernel is looking (via modprobe) for protocol family 10 (IPv6). 
Either load the appropriate kernel module, enter the correct alias in 
<i>/etc/modules.conf</i> or disable IPv6 in <i>/etc/modules.conf</i>.


<p>
For some silly reason <i>/etc/modules.conf</i> may also be named 
<i>/etc/conf.modules</i>.


<h2><a name= "3.5">3.5 - Password authentication doesn't work (eg on Slackware 7.0 or Red Hat 6.x)</a></h2>

<p>
If the password is correct password the login is still denied, the
usual cause is that the system is configured to use MD5-type passwords
but the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crypt&amp;sektion=3"
>crypt(3)</a> function used by sshd doesn't understand them.

<p>
Affected accounts will have password strings in <i>/etc/passwd</i>
or <i>/etc/shadow</i> that start with <b>$1$</b>.
If password authentication fails for new accounts or accounts with
recently changed passwords, but works for old accounts, this is the
likely culprit.

<p>
The underlying cause is that some versions of OpenSSL have a crypt(3)
function that does not understand MD5 passwords, and the link order of
sshd means that OpenSSL's crypt(3) is used instead of the system's.
OpensSSH's configure attempts to correct for this but is not always
successful.

<p>
There are several possible solutions:

<ul>
<li>
<p>
Enable sshd's built-in support for MD5 passwords at build time.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
./configure --with-md5-passwords [options]
                </td>
        </tr>
</table>
</blockquote>

This is safe even if you have both types of encryption as sshd will
select the correct algorithm for each account automatically.

<li>
<p>
If your system has a separate libcrypt library (eg Slackware 7) then you
can manually add -lcrypt to the LIBS list so it's used instead of
OpenSSL's:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
LIBS=-lcrypt ./configure [options]
                </td>
        </tr>
</table>
</blockquote>

<li>
<p>
If your platforms supports PAM, you may configure sshd to use it
(see <a href= "#3.15" >section 3.15</a>).  This will mean that sshd will
not verify passwords itself but will defer to the configured PAM modules.
</ul>

<h2><a name= "3.6">3.6 - Configure or sshd(8) complain about lack of RSA or DSA support</a></h2>

<p>
Ensure that your OpenSSL libraries have been built to include RSA or DSA 
support either internally or through RSAref.


<h2><a name= "3.7">3.7 - "scp: command not found" errors</a></h2>

<p>
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> 
must be in the default PATH on both the client and the server. You may 
need to use the <b>--with-default-path</b> option to specify a custom 
path to search on the server. This option replaces the default path, 
so you need to specify all the current directories on your path as well 
as where you have installed scp. For example:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>./configure --with-default-path=/bin:/usr/bin:/usr/local/bin:/path/to/scp</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
Note that configuration by the server's admin will take precedence over the
setting of <b>--with-default-path</b>.  This includes resetting PATH in
<i>/etc/profile</i>, PATH in <i>/etc/environment</i> on AIX, or (for 3.7p1 and
above) setting PATH or SUPATH in <i>/etc/default/login</i> on Solaris or
Reliant Unix.

<h2><a name= "3.8">3.8 - Unable to read passphrase</a></h2>

<p>
Some operating systems set <i>/dev/tty</i> with incorrect modes, causing 
the reading of passwords to fail with the following error:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
You have no controlling tty.  Cannot read passphrase.
                </td>
        </tr>
</table>
</blockquote>

<p>
The solution to this is to reset the permissions on <i>/dev/tty</i> 
to mode 0666 and report the error as a bug to your OS vendor. 


<h2><a name= "3.9">3.9 - 'configure' missing or make fails</a></h2>

<p>
If there is no 'configure' file in the tar.gz file that you downloaded 
or make fails with "missing separator" errors, you have probably 
downloaded the OpenBSD distribution of OpenSSH and are attempting to 
compile it on another platform. Please refer to the information on the 
<a href="portable.html">portable version</a>.


<h2><a name= "3.10">3.10 - Hangs when exiting ssh</a></h2>

<p>
OpenSSH may hang when exiting.  This can occur when there is an active 
background process.  This is known to occur on Linux and HP-UX.  
The problem can be verified by doing the following:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>sleep 20 &amp; exit</b>
                </td>
        </tr>
</table>
</blockquote>

Try to use this instead:
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>sleep 20 &lt; /dev/null &gt; /dev/null 2&gt;&amp;1 &amp;</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
A work around for bash users is to place <b>"shopt -s huponexit"</b> 
in either /etc/bashrc  or ~/.bashrc.  Otherwise, consult your shell's 
man page for an option to enable it to send a HUP signal to active 
jobs when exiting.  See <a
href="http://bugzilla.mindrot.org/show_bug.cgi?id=52">bug #52</a>
for other workarounds.

<h2><a name= "3.11">3.11 - Why does ssh hang on exit?</a></h2>

<p>
When executing
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>ssh host command</b>
                </td>
        </tr>
</table>
</blockquote>
ssh <b>needs</b> to hang, because it needs to wait:
<ul>
<li>
until it can be sure that <code>command</code> does not need
more input.
<li>
until it can be sure that <code>command</code> does not produce
more output. 
<li>
until <code>command</code> exits because sshd needs to tell
the exit status from <code>command</code> to ssh.
</ul>
<p>

<h2><a name= "3.12">3.12 - I upgraded to OpenSSH 3.1 and X11
forwarding stopped working.</a></h2>

Starting with OpenSSH 3.1, the sshd x11 forwarding server listens on
localhost by default; see the sshd <b>X11UseLocalhost</b> option to
revert to prior behaviour if your older X11 clients do not function
with this configuration.<p>

In general, X11 clients using X11 R6 should work with the default
setting.  Some vendors, including HP, ship X11 clients with R6
and R5 libs, so some clients will work, and others will not work.
This is true for HP-UX 11.X.<p>

<h2><a name= "3.13">3.13 - I upgraded to OpenSSH 3.8 and some
X11 programs stopped working.</a></h2>

<p>
As documented in the <a href="txt/release-3.8">3.8 release notes</a>,
<code>ssh</code> will now use untrusted X11 cookies by 
default.  The previous behaviour can be restored by setting
<b>ForwardX11Trusted yes</b> in <i>ssh_config</i>.

<p>
Possible symptoms include:<br>
<code>BadWindow (invalid Window parameter)<br>
BadAccess (attempt to access private resource denied)<br>
X Error of failed request:  BadAtom (invalid Atom parameter)<br>
Major opcode of failed request:  20 (X_GetProperty)<br></code>

<h2><a name= "3.14">3.14 - I copied my public key to authorized_keys
but public-key authentication still doesn't work.</a></h2>

<p>
Typically this is caused by the file permissions on $HOME, $HOME/.ssh or
$HOME/.ssh/authorized_keys being more permissive than sshd allows by default.

<p>
In this case, it can be solved by executing the following on the server.
<blockquote>
<table border=0 width="800">
<tr>
  <td nowrap bgcolor="#EEEEEE">
$ <b>chmod go-w $HOME $HOME/.ssh</b><br>
$ <b>chmod 600 $HOME/.ssh/authorized_keys</b><br>
$ <b>chown `whoami` $HOME/.ssh/authorized_keys</b><br>
  </td>
</tr>
</table>
</blockquote>

<p>
If this is not possible for some reason, an alternative is to set
<b>StrictModes no</b> in <i>sshd_config</i>, however this is not
recommended.

<h2><a name= "3.15">3.15 - OpenSSH versions and PAM behaviour.</a></h2>

Portable OpenSSH has a configure-time option to enable sshd's use of the
<a href="http://www.opengroup.org/onlinepubs/008329799/">PAM</a>
(Pluggable Authentication Modules) interface.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
./configure --with-pam [options]
                </td>
        </tr>
</table>
</blockquote>

To use PAM at all, this option must be provided at build time.
The run-time behaviour when PAM is built in varies with the version of
Portable OpenSSH, and on later versions it must also be enabled by setting
<b>UsePAM</b> to <b>yes</b> in <i>sshd_config</i>.

<p>
The behaviour of the relevant authentications options when PAM support is built
in is summarised by the following table.

<p>
<table border="1">
  <tr> <th>Version</th> <th>UsePAM</th> <th>PasswordAuthentication</th> <th>ChallengeResponseAuthentication</th> </tr>
  <tr>
    <td>&lt;=3.6.1p2</td>
    <td>Not applicable</td>
    <td>Uses PAM</td>
    <td>Uses PAM if <b>PAMAuthenticationViaKbdInt</b> is enabled</td>
  </tr>
  <tr>
    <td>3.7p1 - 3.7.1p1</td>
    <td>Defaults to <b>yes</b></td>
    <td>Does not use PAM</td>
    <td>Uses PAM if <b>UsePAM</b> is enabled</td>
  </tr>
  <tr>
    <td>3.7.1p2 - 3.8.1p1</td>
    <td>Defaults to <b>no</b></td>
    <td>Does not use PAM <a href="#3.15fn1">[1]</a></td>
    <td>Uses PAM if <b>UsePAM</b> is enabled</td>
  </tr>
  <tr>
    <td>3.9p1</td>
    <td>Defaults to <b>no</b></td>
    <td>Uses PAM if <b>UsePAM</b> is enabled</td>
    <td>Uses PAM if <b>UsePAM</b> is enabled</td>
  </tr>
</table>
<p>

<a name= "3.15fn1">[1]</a> Some vendors, notably Redhat/Fedora, have
backported the PasswordAuthentication from 3.9p1 to their 3.8x based
packages.  If you're using a vendor-supplied package then consult their
documentation.

<p>
OpenSSH Portable's PAM interface still has problems with a few modules,
however we hope that this number will reduce in the future.  As at the
3.9p1 release, the known problems are:

<ul>
  <li>Modules relying on module-private data (eg pam_dhkeys, pam_krb5, AFS)
  may fail to correctly establish credentials (bug <a
  href="http://bugzilla.mindrot.org/show_bug.cgi?id=688">#688</a>) when
  authenticating via <b>ChallengeResponseAuthentication</b>.
  <b>PasswordAuthentication</b> with 3.9p1 and above should work.
</ul>

You can also check <a
href="http://bugzilla.mindrot.org/buglist.cgi?product=Portable+OpenSSH&amp;bug_status=RESOLVED&amp;bug_status=NEW&amp;bug_status=ACCEPTED&amp;component=PAM+support"
>bugzilla for current PAM issues</a>.

<h2><a name= "3.16">3.16 - Why doesn't "w" or "who" on AIX 5.x show users
logged in via ssh?</a></h2>

Between AIX 4.3.3 and AIX 5.x, the format of the wtmp struct changed.  This
means that sshd binaries built on AIX 4.x will not correctly write wtmp
entries when run on AIX 5.x.  This can be fixed by simply recompiling 
sshd on an AIX 5.x system and using that.
@


1.117
log
@some modernization from TJ
@
text
@@


1.116
log
@Clean up meta tags.

name=distribution, name=keywords, and name=resource-type have no effect
in modern search engines and just clutter up the page source.

From Pavel Plamenov.
@
text
@d14 1
a14 1
<h1>OpenSSH FAQ (Frequently asked questions)</h1>
d19 1
a19 1
<h3><a href= "#1.0">1.0 - What Is OpenSSH and Where Can I Get It?</a></h3>
d23 1
a23 1
<li><a href= "#1.3">1.3 - What Operating Systems are supported?</a>
d26 1
a26 1
<li><a href= "#1.6">1.6 - I have found a bug. Where do I report it?</a>
d71 1
a71 1
<h2><u><a name= "1.0">1.0 - What Is OpenSSH and Where Can I Get It?</a></u></h2>
d269 1
a269 1
<h2><a name= "1.6">1.6 - I have found a bug. Where do I report it?</a></h2>
@


1.115
log
@Remove leftover links to defunct www@@.

From Pavel Plamenov on tech@@.
@
text
@a4 1
<meta name= "resource-type" content= "document">
a6 2
<meta name= "keywords"      content= "OpenSSH,SSH,Secure Shell,faq">
<meta name= "distribution"  content= "global">
@


1.114
log
@Remove old footer from OpenSSH pages, as was done to OpenBSD last year.
@
text
@a4 1
<link rev= "made" href= "mailto:www@@openbsd.org">
@


1.113
log
@missing separator between commands, from Regid Ichira via Colin Watson
@
text
@a1178 9

<hr>
<a href="index.html"><img height=24 width=24 src="back.gif" border=0 alt=OpenSSH></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>$OpenBSD: faq.html,v 1.112 2010/09/15 02:41:42 nick Exp $</small>

</body>
</html>
@


1.112
log
@
It's 2010.  OpenSSH is THE version of ssh that most people use, and
probably the ONLY version many people have used, it isn't the "Free
Alternative" anymore.  Start of a rework of this FAQ to bring it
up-to-date and refocus it as the authoritative introduction to "the"
version of ssh that most people will use.
Just 1.1 for now.  Simpler explaination for those who have never
used alternatives to OpenSSH, OpenBSD users: just run recent versions
of OpenBSD, non-OpenBSD users start with your OS vendor.
After waiting for formal oks, agreement to a
"commit now and djm@@ and dtucker@@ will beat the snot out of me if I
screw up" from djm@@.
@
text
@d1083 1
a1083 1
$ <b>chmod 600 $HOME/.ssh/authorized_keys</b>
d1184 1
a1184 1
<small>$OpenBSD: faq.html,v 1.111 2010/03/21 09:33:30 dtucker Exp $</small>
@


1.111
log
@fix 2 typos; from Rod Whitworth and Todd Alan Smith
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1999-2005 OpenBSD.">
a19 2
<strong>Date: 2005/09/20</strong>

d79 7
a85 8
<p>
OpenSSH is a <b>FREE</b> version of the SSH suite of network connectivity 
tools that increasing numbers of people on the Internet are coming to 
rely on. Many users of telnet, rlogin, ftp, and other such programs might 
not realize that their password is transmitted across the Internet 
unencrypted, but it is. OpenSSH encrypts all traffic (including passwords)
to effectively eliminate eavesdropping, connection hijacking, 
and other network-level attacks.
d126 18
a143 7
OpenSSH comes in two downloadable distributions: the native <a
href="openbsd.html">OpenBSD</a> distribution and the multi-platform
<a href="portable.html">Portable</a> distribution.  If you want
OpenSSH for a recent OpenBSD or integration into a product, you
probably want the <a href="openbsd.html">OpenBSD</a> distribution.
If you want OpenSSH for another platform, or an older OpenBSD, you
probably want the <a href="portable.html">Portable</a> distribution.
a144 3
<p>
When downloading, please use a <a href="portable.html#mirrors">mirror</a>
near you.
d1184 1
a1184 1
<small>$OpenBSD: faq.html,v 1.110 2009/11/23 23:38:17 dtucker Exp $</small>
@


1.110
log
@add a chown to the authorized_keys perms example
@
text
@d738 1
a738 1
Large delays (more that 10 seconds) are typically caused a problem with
d1179 1
a1179 1
<small>$OpenBSD: faq.html,v 1.109 2009/04/05 22:47:15 dtucker Exp $</small>
@


1.109
log
@update link for IETF working group, patch from Benoit Lecocq
@
text
@d1079 1
d1179 1
a1179 1
<small>$OpenBSD: faq.html,v 1.108 2008/07/05 04:44:31 djm Exp $</small>
@


1.108
log
@split bug reporting into separate section, reinforce security contact here too

update reason for including implementation version in protocol banner
@
text
@d543 1
a543 1
(well, a <a href="http://www.ietf.org/html.charters/secsh-charter.html">
d1178 1
a1178 1
<small>$OpenBSD: faq.html,v 1.107 2007/06/20 18:14:15 miod Exp $</small>
@


1.107
log
@marc.theaimsgroup.com is now marc.info; reminded by Hank Leininger.
@
text
@d32 1
d268 1
d272 3
d667 2
a668 2
still required at present because the SSH protocol has not been yet published 
as a RFC and more incompatible changes may be made before this happens.
d1178 1
a1178 1
<small>$OpenBSD: faq.html,v 1.106 2006/04/18 09:01:52 dtucker Exp $</small>
@


1.106
log
@Note that X11Forwarding requires xauth(1).
@
text
@d261 1
a261 1
<a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;r=1&amp;w=2">theaimsgroup.com</a>.
d819 1
a819 1
href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;m=102646106016694">
d1173 1
a1173 1
<small>$OpenBSD: faq.html,v 1.105 2006/01/19 03:41:37 dtucker Exp $</small>
@


1.105
log
@oops, previous FAQ update was not ready yet; back it out
@
text
@d450 8
d1173 1
a1173 1
<small>$OpenBSD: faq.html,v 1.103 2005/09/20 11:24:58 dtucker Exp $</small>
@


1.104
log
@Appears that mirror.widexs.nl is no longer mirroring OpenSSH
@
text
@a69 1
<li><a href= "#3.17">3.17 - I upgraded to OpenSSH 4.2 and my third-party client stopped working.</a>
a1159 26

<h2><a name= "3.17">3.17 - I upgraded to OpenSSH 4.2 and my third-party client stopped working.</a></h2>

Starting with OpenSSH 4.2, the default sizes for keys, including the SSH host
keys, has been increased from 1024 bits to 2048 bits.
<p>

Some clients do not support host keys of that length.  This is reported to
affect at least SecureCRT version 3.2 for Protocol 2 connections.
<p>

If compatibility with these clients is required, you may generate new 1024
bit host keys.  Assuming the default locations for the files, the relevant
commands are:
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
# <b>/usr/local/bin/ssh-keygen -t dsa -b 1024 -f
   /usr/local/etc/ssh_host_dsa_key -N ""</b><br>
# <b>/usr/local/bin/ssh-keygen -t rsa -b 1024 -f
  /usr/local/etc/ssh_host_rsa_key -N ""</b>
                </td>
        </tr>
</table>
</blockquote>
@


1.103
log
@Bump faq date
@
text
@d70 1
d1162 26
d1192 1
a1192 1
<small>$OpenBSD: faq.html,v 1.102 2005/09/20 08:04:42 dtucker Exp $</small>
@


1.102
log
@Mention ssh -g for forwarding, add reference to ssh(1) for details.
Suggestion from tguettler at tbz-pariv.de
@
text
@d20 1
a20 1
<strong>Date: 2005/01/25</strong>
d1165 1
a1165 1
<small>$OpenBSD: faq.html,v 1.101 2005/05/20 14:09:27 dtucker Exp $</small>
@


1.101
log
@& -> &amp; Tobias Stoeckman
@
text
@d549 4
a552 2
on the client machine, specifying the same local port passed to ssh,
and the connection will be tunnelled through ssh.
d557 5
a561 2
permits dynamic port forwarding, and the -f option, which instructs ssh
to background itself.  See below for further details on these options.
d1165 1
a1165 1
<small>$OpenBSD: faq.html,v 1.100 2005/05/12 12:31:37 dtucker Exp $</small>
@


1.100
log
@Fix broken link; from Martin Samuelsson
@
text
@d806 1
a806 1
href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&m=102646106016694">
d1160 1
a1160 1
<small>$OpenBSD: faq.html,v 1.99 2005/04/19 10:55:59 dtucker Exp $</small>
@


1.99
log
@New Portable FAQ: 'who' on AIX 5.x
@
text
@d530 2
a531 2
(well, a <a href="http://www.ietf.org/internet-drafts/draft-ietf-secsh-filexfer-05.txt">
draft standard</a>), and the client and server are decoupled.
d1160 1
a1160 1
<small>$OpenBSD: faq.html,v 1.98 2005/02/25 13:55:52 dtucker Exp $</small>
@


1.98
log
@Add note about agent interoperability
@
text
@d69 1
d1148 7
d1160 1
a1160 1
<small>$OpenBSD: faq.html,v 1.97 2005/01/25 22:46:11 dtucker Exp $</small>
@


1.97
log
@Correct version info for UsePAM
@
text
@d449 8
d1152 1
a1152 1
<small>$OpenBSD: faq.html,v 1.96 2005/01/25 10:58:59 dtucker Exp $</small>
@


1.96
log
@Corrections to #3.5 (md5 passwords) from per at hedeland.org
@
text
@d1097 1
a1097 1
    <td>3.7p1 - 3.7.1p2</td>
d1103 1
a1103 1
    <td>3.8p1 - 3.8.1p1</td>
d1144 1
a1144 1
<small>$OpenBSD: faq.html,v 1.95 2005/01/25 05:19:00 dtucker Exp $</small>
@


1.95
log
@typo
@
text
@d818 5
a822 1
but the system library's crypt(3) function doesn't understand them.
d825 3
d830 5
a834 3
If password authentication fails for new accounts or accounts with
recently changed passwords, but works for old accounts, this is the
likely cause.
d859 3
a861 1
For Slackware 7.0, you can link OpenSSH with libcrypt.
d876 2
a877 1
(see <a href= "#3.15" >section 3.15</a>).
d1144 1
a1144 1
<small>$OpenBSD: faq.html,v 1.94 2005/01/25 05:15:41 dtucker Exp $</small>
@


1.94
log
@Clarify PAM module-private data and PasswordAuthentication
@
text
@d818 1
a818 1
byt the system library's crypt(3) function doesn't understand them.
d1132 1
a1132 1
<small>$OpenBSD: faq.html,v 1.93 2005/01/25 05:10:09 dtucker Exp $</small>
@


1.93
log
@New FAQ: OpenSSH versions and PAM behaviour
@
text
@d1117 1
a1117 1
  may fail to correctly establish credentials ((bug <a
d1120 1
a1120 1
  <b>PasswordAuthentication</b> should work.
d1132 1
a1132 1
<small>$OpenBSD: faq.html,v 1.92 2005/01/25 04:58:21 dtucker Exp $</small>
@


1.92
log
@Make the options for #3.5 (password auth won't work) clearer
@
text
@d68 1
a68 1
<li><a href= "#3.15">3.15 - What's the deal with OpenSSH and PAM?</a>
d864 2
a865 1
If your platforms supports PAM, you may configure sshd to use it.
d1050 78
d1132 1
a1132 1
<small>$OpenBSD: faq.html,v 1.91 2004/12/22 02:06:00 david Exp $</small>
@


1.91
log
@make small title logo a link back to main page (like all the other web sites)
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1999-2004 OpenBSD.">
d20 1
a20 1
<strong>Date: 2004/04/12</strong>
d58 1
a58 1
<li><a href= "#3.5">3.5 - Password authentication doesn't work on Slackware 7.0 or Red Hat Linux 6.x</a>
d68 1
d813 1
a813 1
<h2><a name= "3.5">3.5 - Password authentication doesn't work on Slackware 7.0 or Red Hat 6.x</a></h2>
d816 18
a833 1
For Slackware 7.0, you need to link OpenSSH with libcrypt.
d839 1
a839 1
LIBS=-lcrypt ./configure [options]
d845 2
a846 6
<p> Some versions of Red Hat have password tools that will create
MD5-style passwords, but the system crypt() function does not
understand them.  If password authentication fails for new accounts
or accounts with recently changed passwords, but works for old
accounts, this is the likely cause.  (Affected accounts will have
password strings in <i>/etc/shadow</i> that start with <code>$1$</code>.)
d848 1
d850 1
a850 1
To resolve this, enable MD5 support in sshd at build time:
d856 1
a856 1
./configure --with-md5-passwords [options]
d862 5
d1053 1
a1053 1
<small>$OpenBSD: faq.html,v 1.90 2004/09/11 03:40:48 jaredy Exp $</small>
@


1.90
log
@entitize some special chars (<, &, etc.)
fix some punctuation and typos
refer to "Athlon" properly
use i tags around some pathnames

mostly from Tobias Stoeckmann
@
text
@d15 1
a15 1
<img alt="[OpenSSH]" height=30 width=141 src="images/smalltitle.gif">
d1033 1
a1033 1
<small>$OpenBSD: faq.html,v 1.89 2004/09/09 01:19:30 djm Exp $</small>
@


1.89
log
@Another FAQ: Why does OpenSSH report its version to clients?
@
text
@d263 1
a263 1
+please see <a href="list.html">OpenSSH Mailing lists</a>.
d412 1
a412 1
yourself of these message, edit you known_hosts files and replace the 
d471 1
a471 1
following to your <i>sshd_config</i>
d567 1
a567 1
long as it's greater that 1023 (remember, only root can open sockets on
d602 1
a602 1
Enabling either option and setting the interval for less that the time
d727 1
a727 1
Delays less that 10 seconds can have other causes.
d737 1
a737 1
manually.</li>
d784 1
a784 1
<tr><td>2.1GHz Althon 2600</td><td>0.14 sec</td><td>0.22 sec</td></tr>
d832 1
a832 1
password strings in <i>/etc/shadow</i> that start with <code>$1$</code>).
d877 1
a877 1
/etc/profile, PATH in <i>/etc/environment</i> on AIX, or (for 3.7p1 and
d923 1
a923 1
$ <b>sleep 20 & exit</b>
d934 1
a934 1
$ <b>sleep 20 < /dev/null > /dev/null 2>&1 &</b>
d1033 1
a1033 1
<small>$OpenBSD: faq.html,v 1.88 2004/05/15 07:39:42 dtucker Exp $</small>
@


1.88
log
@Add explicit download info
@
text
@d49 1
d624 19
d1033 1
a1033 1
<small>$OpenBSD: faq.html,v 1.87 2004/05/15 06:30:00 dtucker Exp $</small>
@


1.87
log
@Add Cygwin to list of supported platforms
@
text
@d27 1
a27 1
<li><a href= "#1.1">1.1 - What is OpenSSH?</a>
d75 1
a75 1
<h2><a name= "1.1">1.1 - What is OpenSSH?</a></h2>
d122 15
d1013 1
a1013 1
<small>$OpenBSD: faq.html,v 1.86 2004/05/05 01:15:43 dtucker Exp $</small>
@


1.86
log
@New FAQ: using scp on files with colons in the name
@
text
@d209 1
d998 1
a998 1
<small>$OpenBSD: faq.html,v 1.85 2004/04/27 06:04:25 saad Exp $</small>
@


1.85
log
@more Redhat -> Red Hat fixes.
@
text
@d48 1
d589 18
d997 1
a997 1
<small>$OpenBSD: faq.html,v 1.84 2004/04/22 22:27:07 saad Exp $</small>
@


1.84
log
@typos and html cleanup. ok dtucker@@
@
text
@d658 1
a658 1
<li>Some versions of glibc (notably glibc 2.1 shipped with Redhat 6.1)
d757 1
a757 1
<h2><a name= "3.5">3.5 - Password authentication doesn't work on Slackware 7.0 or Redhat 6.x</a></h2>
d772 1
a772 1
<p> Some versions of Redhat have password tools that will create
d978 1
a978 1
<small>$OpenBSD: faq.html,v 1.83 2004/04/22 17:48:14 saad Exp $</small>
@


1.83
log
@Redhat -> Red Hat Linux, plus link cleanups. ok dtucker@@
@
text
@a500 1

d507 2
a508 1
<p> If the remote server is running sshd(8), it may be possible to
d516 2
a517 1
<p> The idea is that the user connects to the remote host using ssh,
d524 2
a525 1
<p> The options most relevant to tunnelling are the -L and -R options,
d528 1
a528 1
to background itself.  See above for further details of these options.
d530 2
a531 1
<p> This is an example of tunnelling an IRC session from client machine
d545 2
a546 1
<p> This tunnels a connection to IRC server server.example.com, joining
d549 1
a549 1
long as it's greater that 1024 (remember, only root can open sockets on
d552 1
a552 1
hat's the standard port for IRC services.
d554 2
a555 1
<p> The remote command ``sleep 10'' was specified to allow an amount
d563 2
a564 1
<p> ssh also has an -N option, convenient for use with port forwarding:
d978 1
a978 1
<small>$OpenBSD: faq.html,v 1.82 2004/04/22 13:40:19 dtucker Exp $</small>
@


1.82
log
@More possible errors
@
text
@d56 1
a56 1
<li><a href= "#3.5">3.5 - Password authentication doesn't work on Slackware 7.0 or Redhat 6.x</a>
d189 2
a190 2
For a quick overview of the portable version of OpenSSH see: 
<a href="./portable.html">http://www.openssh.com/portable.html</a>. 
d212 1
a212 1
is located at <a href="./users.html">www.openssh.com/users.html</a>.
d235 2
a236 2
There are many places to turn to for help. In addition to the main OpenSSH
website: <a href="http://www.openssh.com/">http://www.openssh.com</a>, 
d245 1
a245 1
please see: <a href="./list.html">www.openssh.com/list.html</a>.
d249 1
a249 1
<a href="./report.html">Reporting bugs</a> page.
d972 1
a972 1
<small>$OpenBSD: faq.html,v 1.81 2004/04/13 04:12:14 dtucker Exp $</small>
@


1.81
log
@sftp has been around for a while now
@
text
@d937 5
a941 3
Symptoms include <code>BadWindow (invalid Window parameter)</code>
and <code>BadAccess (attempt to access private resource denied)</code>
errors.
d972 1
a972 1
<small>$OpenBSD: faq.html,v 1.80 2004/04/13 04:05:46 dtucker Exp $</small>
@


1.80
log
@Add links to ssh_config and sshd_config man pages
@
text
@d93 1
a93 1
OpenSSH has also, recently, added 
d970 1
a970 1
<small>$OpenBSD: faq.html,v 1.79 2004/04/13 03:54:15 dtucker Exp $</small>
@


1.79
log
@New FAQ: My ssh connection freezes or drops out after N minutes of inactivity
@
text
@d104 3
d108 3
d571 1
a571 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config&sektion=5">
d574 1
a574 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh_config&sektion=5">
d970 1
a970 1
<small>$OpenBSD: faq.html,v 1.78 2004/04/11 08:06:01 dtucker Exp $</small>
@


1.78
log
@Add link to hang-on-exit bug #52
@
text
@d20 1
a20 1
<strong>Date: 2004/04/09</strong>
d47 1
d559 17
d964 1
a964 1
<small>$OpenBSD: faq.html,v 1.77 2004/04/10 02:47:48 dtucker Exp $</small>
@


1.77
log
@Add link to 'reporting bugs' page
@
text
@d859 3
a861 2
jobs when exiting.

d946 1
a946 1
<small>$OpenBSD: faq.html,v 1.76 2004/04/09 12:33:27 dtucker Exp $</small>
@


1.76
log
@Clarify re: password strings
@
text
@d230 1
a230 1
there are many mailing lists to try. But before trying any mailing lists, 
d240 4
d945 1
a945 1
<small>$OpenBSD: faq.html,v 1.75 2004/04/09 12:30:38 dtucker Exp $</small>
@


1.75
log
@Add info about md5 passwords on some Redhats
@
text
@d738 6
a743 7
<p>
Some versions of Redhat have password tools that will create MD5-style
passwords, but the system crypt() function does not understand them.
If password authentication fails for new accounts or accounts with
recently changed passwords, but works for old accounts, this is the
likely cause.  (Affected accounts will have passwords that start with
<code>$1$</code>).
d941 1
a941 1
<small>$OpenBSD: faq.html,v 1.74 2004/04/09 12:12:51 dtucker Exp $</small>
@


1.74
log
@Correction: DSA->DH
@
text
@d55 1
a55 1
<li><a href= "#3.5">3.5 - Password authentication doesn't work on Slackware 7.0</a>
d723 1
a723 1
<h2><a name= "3.5">3.5 - Password authentication doesn't work on Slackware 7.0</a></h2>
d728 20
d753 1
a753 1
LIBS=-lcrypt ./configure [options]
d942 1
a942 1
<small>$OpenBSD: faq.html,v 1.73 2004/04/09 12:05:37 dtucker Exp $</small>
@


1.73
log
@Make tags for config files consistent with rest of document
@
text
@d704 3
a706 3
relatively slow code on HPPA for RSA and DSA authentications (see
<a href= "http://gcc.gnu.org/bugzilla/show_bug.cgi?id=7625">gcc bug
#7625</a> and <a
d922 1
a922 1
<small>$OpenBSD: faq.html,v 1.72 2004/04/09 12:01:05 dtucker Exp $</small>
@


1.72
log
@Add more potential causes of slow logins
@
text
@d642 1
a642 1
<li>OpenSSH releases prior to 3.8 had an <b>moduli</b> file with
d646 3
a648 3
<b>moduli</b> file will resolve this (note that in most cases, the
moduli file will not be replaced during an upgrade and must be
replaced manually.</li>
d674 1
a674 1
corresponding commands should be removed from <b>ssh_prng_cmds</b>.
d922 1
a922 1
<small>$OpenBSD: faq.html,v 1.71 2004/04/06 08:06:13 dtucker Exp $</small>
@


1.71
log
@Add an example of how to use port forwarding.  Text from jmc@@ with suggestions
from markus@@.  Bad HTMLification by me.
@
text
@d20 1
a20 1
<strong>Date: 2004/04/06</strong>
d53 1
a53 1
<li><a href= "#3.3">3.3 - ssh(1) takes a long time to connect</a>
d617 2
a618 1
<h2><a name= "3.3">3.3 - ssh(1) takes a long time to connect</a></h2>
d621 2
a622 2
This is typically a problem with name resolution and can have several
causes:
d635 41
d679 31
d922 1
a922 1
<small>$OpenBSD: faq.html,v 1.70 2004/04/05 22:31:46 dtucker Exp $</small>
@


1.70
log
@Add example error messages, update keywords
@
text
@d20 1
a20 1
<strong>Date: 2004/03/09</strong>
d46 1
d495 59
d849 1
a849 1
<small>$OpenBSD: faq.html,v 1.69 2004/03/22 13:14:48 saad Exp $</small>
@


1.69
log
@typo, indentation, and line wrapping fixes. ok dtucker@@
@
text
@d9 1
a9 1
<meta name= "keywords"      content= "openbsd,faq">
d755 5
d789 1
a789 1
<small>$OpenBSD: faq.html,v 1.68 2004/03/17 23:08:03 dtucker Exp $</small>
@


1.68
log
@Add pubkey auth and file perms/StrictModes interaction
@
text
@d758 1
d760 1
a760 1
$HOME/.ssh/authorized keys being more permissive than sshd allows by default.
d766 2
a767 2
        <tr>
                <td nowrap bgcolor="#EEEEEE">
d770 2
a771 2
                </td>
        </tr>
d776 3
a778 2
If this is not possible for some reason, an alternative is to set <b>StrictModes
no</b> in <i>sshd_config</i>, however this is not recommended.
d784 1
a784 1
<small>$OpenBSD: faq.html,v 1.67 2004/03/13 23:40:37 saad Exp $</small>
@


1.67
log
@typo and consistency fix. ok dtucker@@
@
text
@d63 1
d755 23
d782 1
a782 1
<small>$OpenBSD: faq.html,v 1.66 2004/03/13 00:22:43 saad Exp $</small>
@


1.66
log
@fix indentation to be consistent with OpenBSD's FAQ index. ok dtucker@@
@
text
@d568 1
a568 1
You can use the <code>nslookup</code> to check this on both client
d748 2
a749 1
<p>As documented in the <a href="txt/release-3.8">3.8 release notes</a>,
d752 1
a752 1
<b>ForwardX11Trusted yes</b> in <i>ssh_config</i>.</p>
d758 1
a758 1
<small>$OpenBSD: faq.html,v 1.65 2004/03/09 12:42:20 dtucker Exp $</small>
@


1.65
log
@Specify that /etc/default/login is only in 3.7p1 and up, fix spacing.
@
text
@d26 8
a33 7
	<ul>
	<li><a href= "#1.1">1.1 - What is OpenSSH?</a>
	<li><a href= "#1.2">1.2 - Why should it be used?</a>
	<li><a href= "#1.3">1.3 - What Operating Systems are supported?</a>
	<li><a href= "#1.4">1.4 - What about copyright, usage and patents?</a>
	<li><a href= "#1.5">1.5 - Where should I ask for help?</a>
	</ul>
d35 13
a47 12
	<ul>
	<li><a href= "#2.1">2.1 - Why does ssh/scp make connections from low-numbered ports. My firewall blocks these.</a>
	<li><a href= "#2.2">2.2 - Why is the ssh client setuid root?</a>
	<li><a href= "#2.3">2.3 - Why does SSH 2.3 have problems interoperating with OpenSSH 2.1.1?</a>
	<li><a href= "#2.4">2.4 - Why does OpenSSH print: Dispatch protocol error: type 20</a>
	<li><a href= "#2.5">2.5 - Old versions of commercial SSH encrypt host keys with IDEA.</a>
	<li><a href= "#2.6">2.6 - What are these warning messages about key lengths?</a>
	<li><a href= "#2.7">2.7 - X11 and/or agent forwarding does not work.</a>
	<li><a href= "#2.8">2.8 - After upgrading OpenSSH I lost SSH2 support.</a>
	<li><a href= "#2.9">2.9 - sftp/scp fails at connection, but ssh is OK.</a>
	<li><a href= "#2.10">2.10 - Will you add [foo] to scp?</a>
	</ul>
d49 16
a64 15
	<ul>
	<li><a href= "#3.1">3.1 - Spurious PAM authentication messages in logfiles.</a>
	<li><a href= "#3.2">3.2 - Empty passwords not allowed with PAM authentication.</a>
	<li><a href= "#3.3">3.3 - ssh(1) takes a long time to connect</a>
	<li><a href= "#3.4">3.4 - "Can't locate module net-pf-10" messages in log under Linux.</a>
	<li><a href= "#3.5">3.5 - Password authentication doesn't work on Slackware 7.0</a>
	<li><a href= "#3.6">3.6 - Configure or sshd(8) complain about lack of RSA support</a>
	<li><a href= "#3.7">3.7 - "scp: command not found" errors</a>
	<li><a href= "#3.8">3.8 - Unable to read passphrase</a>
	<li><a href= "#3.9">3.9 - 'configure' missing or make fails</a>
	<li><a href= "#3.10">3.10 - Hangs when exiting ssh</a>
	<li><a href= "#3.11">3.11 - Why does ssh hang on exit?</a>
	<li><a href= "#3.12">3.12 - I upgraded to OpenSSH 3.1 and X11 forwarding stopped working.</a>
	<li><a href= "#3.13">3.13 - I upgraded to OpenSSH 3.8 and some X11 programs stopped working.</a>
	</ul>
d757 1
a757 1
<small>$OpenBSD: faq.html,v 1.64 2004/03/09 12:04:07 dtucker Exp $</small>
@


1.64
log
@Add detail about /etc/default/login and /etc/environment and their
interaction with scp paths.
@
text
@d632 3
a634 2
/etc/profile, setting PATH or SUPATH in <i>/etc/default/login</i> (on Solaris or
Reliant Unix) or PATH in <i>/etc/environment</i> (on AIX).
d745 2
a746 2
<p>As documented in the <a href="txt/release-3.8">3.8 release notes
</a>, <code>ssh</code> will now use untrusted X11 cookies by 
d754 1
a754 1
<small>$OpenBSD: faq.html,v 1.63 2004/03/09 11:33:39 dtucker Exp $</small>
@


1.63
log
@Update for AddressFamily and add info about DNS-related delays
@
text
@d20 1
a20 1
<strong>Date: 2004/02/27</strong>
d629 6
d753 1
a753 1
<small>$OpenBSD: faq.html,v 1.62 2004/03/09 11:29:35 dtucker Exp $</small>
@


1.62
log
@Add ForwardX11Trusted
@
text
@d50 1
a50 1
	<li><a href= "#3.3">3.3 - ssh(1) takes a long time to connect with Linux/glibc 2.1</a>
d553 1
a553 1
<h2><a name= "3.3">3.3 - ssh(1) takes a long time to connect with Linux/glibc 2.1</a></h2>
d556 14
a569 5
The glibc shipped with Redhat 6.1 appears to take a long time to resolve 
"IPv6 or IPv4" addresses from domain names. This can be kludged around 
with the --with-ipv4-default configure option. This instructs OpenSSH 
to use IPv4-only address resolution. (IPv6 lookups may still be made 
by specifying the -6 option).
d571 1
d747 1
a747 1
<small>$OpenBSD: faq.html,v 1.61 2004/03/01 19:54:59 saad Exp $</small>
@


1.61
log
@more better wording. initial hint from xsa@@. ok dtucker@@.
@
text
@d60 1
d725 8
d737 1
a737 1
<small>$OpenBSD: faq.html,v 1.60 2004/03/01 19:44:15 saad Exp $</small>
@


1.60
log
@better wording, missing word. ok dtucker@@ and nick@@
@
text
@d178 1
a178 1
A quick view of other OS's that are supported is below.
d728 1
a728 1
<small>$OpenBSD: faq.html,v 1.59 2004/02/27 01:20:07 dtucker Exp $</small>
@


1.59
log
@Link to sftp IETF draft
@
text
@d478 1
a478 1
Long Answer: scp is a non-standard.  The closest thing it has to a
d480 1
a480 1
of the connection, adding features or options risks interoperability with other
d728 1
a728 1
<small>$OpenBSD: faq.html,v 1.58 2004/02/26 23:46:49 dtucker Exp $</small>
@


1.58
log
@Adding options to scp is a FAQ.  ok djm@@
@
text
@d486 2
a487 1
(well, a draft standard), and the client and server are decoupled.
d728 1
a728 1
<small>$OpenBSD: faq.html,v 1.57 2004/01/25 05:01:47 dtucker Exp $</small>
@


1.57
log
@Update FAQ entry for why ssh is setuid, add reference to ssh-keysign.
ok deraadt@@
@
text
@d20 1
a20 1
<strong>Date: 2002/04/03</strong>
d44 1
d472 16
d727 1
a727 1
<small>$OpenBSD: faq.html,v 1.56 2004/01/25 03:14:53 nick Exp $</small>
@


1.56
log
@
Copyright bump.  Most from Saad Kadhi, thanks!
@
text
@d276 1
d282 3
a284 1
So the setuid root bit is needed for these authentication methods, too.
d286 6
a291 2
You can safely remove the setuid bit from the ssh executable if you 
don't want to use these authentication methods.
d710 1
a710 1
<small>$OpenBSD: faq.html,v 1.55 2003/10/06 04:22:44 david Exp $</small>
@


1.55
log
@remove stray ":" noted by Saad Kadhi
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1999-2002 OpenBSD.">
d703 1
a703 1
<small>$OpenBSD: faq.html,v 1.54 2003/10/06 00:19:41 david Exp $</small>
@


1.54
log
@spell 'Mac OS X' with a space; from <xavier at santolaria dot net>
@
text
@d199 1
a199 1
:
d703 1
a703 1
<small>$OpenBSD: faq.html,v 1.53 2003/02/26 21:23:48 david Exp $</small>
@


1.53
log
@owner's posessive
ok markus@@
@
text
@d193 1
a193 1
	<li>MacOS X 
d703 1
a703 1
<small>$OpenBSD: faq.html,v 1.52 2002/10/28 08:57:59 markus Exp $</small>
@


1.52
log
@no fallback to rsh; leonardo@@cefetpr.br
@
text
@d146 1
a146 1
have started programs on workstations without the owners knowledge
d703 1
a703 1
<small>$OpenBSD: faq.html,v 1.51 2002/08/06 13:58:04 fgsch Exp $</small>
@


1.51
log
@add href for ssh-keysign; from Margarida Sequeira <niness@@devilness.org>.
markus@@ ok.
@
text
@a127 1
	<li>Automatically executes conventional rsh (after displaying a warning) if the server machine is not running sshd.
d703 1
a703 1
<small>$OpenBSD: faq.html,v 1.50 2002/06/23 10:38:31 jufi Exp $</small>
@


1.50
log
@
remove </li> and </p>
wrap lines
@
text
@d104 1
d704 1
a704 1
<small>$OpenBSD: faq.html,v 1.49 2002/05/19 10:58:18 jufi Exp $</small>
@


1.49
log
@
small HTML cleanups
@
text
@a63 1

d69 21
a89 2
OpenSSH is a <b>FREE</b> version of the SSH suite of network connectivity tools that increasing numbers of people on the Internet are coming to rely on. Many users of telnet, rlogin, ftp, and other such programs might not realize that their password is transmitted across the Internet unencrypted, but it is. OpenSSH encrypts all traffic (including passwords) to effectively eliminate eavesdropping, connection hijacking, and other network-level attacks.
</p>
a90 3
<p>
The OpenSSH suite includes the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> program which replaces rlogin and telnet, and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> which replaces <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&amp;sektion=1">rcp(1)</a> and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a>. OpenSSH has also, recently, added <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> which implement an easier solution for file-transfer. This is based upon the <a href="txt/draft-ietf-secsh-filexfer-02.txt">secsh-filexfer</a> IETF draft.
</p>
d92 1
a92 1
<p><strong>OpenSSH consists of a number of programs.</strong></p>
d109 3
a111 2
OpenSSH is a suite of tools to help secure your network connections. Here is a list of features:
</p>
d140 1
a140 1
</p>
d150 1
a150 1
</p>
d158 1
a158 1
</p>
d166 1
a166 1
</p>
d171 8
a178 2
Even though OpenSSH is developed on <a href="http://www.openbsd.org/">OpenBSD</a> a wide variety of ports to other operating systems exist. The portable version of OpenSSH is headed by <a href="mailto:djm@@openbsd.org">Damien Miller</a>. For a quick overview of the portable version of OpenSSH see: <a href="./portable.html">http://www.openssh.com/portable.html</a>. A quick view of other OS's that are supported is below.
</p>
d197 3
a199 4
A list of vendors that include OpenSSH in their distributions is located at <a href="./users.html">www.openssh.com/users.html</a>.
</p>


a200 1

d202 3
a204 2
The OpenSSH developers have tried very hard to keep OpenSSH free of any patent or copyright problems. To do this, some options had to be stripped from OpenSSH. Namely support for patented algorithms.
</p>
d207 4
a210 2
OpenSSH does not support any patented transport algorithms. In SSH1 mode, only 3DES and Blowfish are available options. In SSH2 mode, only 3DES, Blowfish, CAST128, Arcfour and AES can be selected. The patented IDEA algorithm is not supported.
</p>
a213 1
</p>
d216 2
a217 2
Since the RSA patent has expired, there are no restrictions on the use of RSA algorithm using software, including OpenBSD.
</p>
a219 1

d221 7
a227 2
There are many places to turn to for help. In addition to the main OpenSSH website: <a href="http://www.openssh.com/">http://www.openssh.com</a>, there are many mailing lists to try. But before trying any mailing lists, please search through all mailing list archives to see if your question has already been answered. The OpenSSH Mailing List has been archived and put in searchable form and can be found at <a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;r=1&amp;w=2">theaimsgroup.com</a>.
</p>
d230 2
a231 2
For more information on subscribing to OpenSSH related mailing lists, please see: <a href="./list.html">www.openssh.com/list.html</a>.
</p>
d236 5
a241 3
<p>
The OpenSSH client uses low numbered ports for rhosts and rhosts-rsa authentication because the server needs to trust the username provided by the client. To get around this, you can add the below example to your <i>ssh_config</i> or <i>~/.ssh/config</i> file.
</p>
d254 3
a256 2
Or you can specify this option on the command line, using the <b>-o</b> option to <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> command.
</p>
d272 9
a280 9
OpenSSH needs root authority to be able to bind to low-numbered
ports to facilitate <i>rhosts authentication</i>.
A privileged port is also required for rhosts-rsa authentication
to older SSH releases.
<p>
Additionally, for both <i>rhosts-rsa authentication</i> (in protocol version 1)
and <i>hostbased authentication</i> (in protocol version 2) the ssh client
needs to access the <i>private host key</i> in order to authenticate the
client machine to the server.
d282 2
a283 2
</p>
You can safely remove the setuid bit from the ssh executable if you
d289 4
a292 2
SSH 2.3 and earlier versions contain a flaw in their HMAC implementation. Their code was not supplying the full data block output from the digest, and instead always provided 128 bits. For longer digests, this caused SSH 2.3 to not interoperate with OpenSSH.
</p>
d295 4
a298 2
OpenSSH 2.2.0 detects that SSH 2.3 has this flaw. Recent versions of SSH will have this bug fixed. Or you can add the following to SSH 2.3 <i>sshd2_config</i>.
</p>
d313 6
a318 6
Problems in interoperation have been seen because older versions
of OpenSSH did not support session rekeying. However the commercial SSH
2.3 tries to negotiate this feature, and you might experience
connection freezes or see the error message
&quot;<b>Dispatch protocol error: type 20 </b>&quot;.
To solve this problem, either upgrade to a recent OpenSSH release or
d321 1
a321 1
</p>
d336 10
a345 2
The old versions of SSH used a patented algorithm to encrypt their <i>/etc/ssh/ssh_host_key</i>. This problem will manifest as <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> not being able to read its host key. To solve this, use the command below to convert your ssh_host_key to use 3DES. <b>NOTE:</b> Use the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> program from the Commercial SSH product, *NOT* OpenSSH for the example below.
</p>
d360 6
a365 2
Commercial SSH's <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> program contained a bug which caused it to occasionally generate Pubkey Authentication (RSA or DSA) keys which had their Most Significant Bit (MSB) unset. Such keys were advertised as being full-length, but are actually, half the time, smaller than advertised.
</p>
d368 4
a371 2
OpenSSH will print warning messages when it encounters such keys. To rid yourself of these message, edit you known_hosts files and replace the incorrect key length (usually "1024") with the correct key length (usually "1023").
</p>
d376 3
a378 2
Check your <i>ssh_config</i> and <i>sshd_config</i>. The default configuration files disable authentication agent and X11 forwarding. To enable it, put the line below in <i>sshd_config</i>:
</p>
a391 1
</p>
d405 6
a410 2
<b>NOTE:</b> For users of Linux Mandrake 7.2, Mandrake modifies the <i>XAUTHORITY</i> environment variable in <i>/etc/skel/.bashrc</i>, and thus any bash user's home directory. This variable is set by OpenSSH and for either of the above options to work, you need to comment out the line:
</p>
d425 5
a429 2
Between versions changes can be made to <i>sshd_config</i> or <i>ssh_config</i>. You should always check on these changes when upgrading versions of OpenSSH. After OpenSSH Version 2.3.0 you need to add the following to your <i>sshd_config</i>
</p>
d445 4
a448 2
sftp and/or scp may fail at connection time if you have shell initialization (.profile, .bashrc, .cshrc, etc) which produces output for non-interactive sessions. This output confuses the sftp/scp client.  You can verify if your shell is doing this by executing:
</p>
d461 2
a462 2
If the above command produces any output, then you need to modify your shell initialization.
</p>
d469 3
a471 2
The portable version of OpenSSH will generate spurious authentication failures at every login, similar to:
</p>
d484 3
a486 2
These are generated because OpenSSH first tries to determine whether a user needs authentication to login (e.g. empty password). Unfortunately PAM likes to log all authentication events, this one included.
</p>
d489 4
a492 2
If it annoys you too much, set &quot;<b>PermitEmptyPasswords no</b>&quot; in <i>sshd_config</i>. This will quiet the error message at the expense of disabling logins to accounts with no password set. This is the default if you use the supplied <i>sshd_config</i> file.
</p>
d497 3
a499 2
To enable empty passwords with a version of OpenSSH built with PAM you must add the flag nullok to the end of the password checking module in the <i>/etc/pam.d/sshd</i> file. For example:
</p>
d512 2
a513 1
This must be done in addition to setting &quot;<b>PermitEmptyPasswords yes</b>&quot; in the <i>sshd_config</i> file. 
d516 10
a525 2
There is one caveat when using empty passwords with PAM authentication: PAM will allow any password when authenticating an account with an empty password. This breaks the check that <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> uses to determine whether an account has no password set and grant users access to the account regardless of the policy specified by <b>PermitEmptyPasswords</b>. For this reason, it is recommended that you do not add the <b>nullok</b> directive to your PAM configuration file unless you specifically wish to allow empty passwords.
</p>
d530 6
a535 2
The glibc shipped with Redhat 6.1 appears to take a long time to resolve "IPv6 or IPv4" addresses from domain names. This can be kludged around with the --with-ipv4-default configure option. This instructs OpenSSH to use IPv4-only address resolution. (IPv6 lookups may still be made by specifying the -6 option).
</p>
d540 4
a543 2
The Linux kernel is looking (via modprobe) for protocol family 10 (IPv6). Either load the appropriate kernel module, enter the correct alias in <i>/etc/modules.conf</i> or disable IPv6 in <i>/etc/modules.conf</i>.
</p>
d546 3
a548 2
For some silly reason <i>/etc/modules.conf</i> may also be named <i>/etc/conf.modules</i>.
</p>
d554 1
a554 1
</p>
d569 3
a571 2
Ensure that your OpenSSL libraries have been built to include RSA or DSA support either internally or through RSAref.
</p>
d576 6
a581 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> must be in the default PATH on both the client and the server. You may need to use the <b>--with-default-path</b> option to specify a custom path to search on the server. This option replaces the default path, so you need to specify all the current directories on your path as well as where you have installed scp. For example:
</p>
d596 2
a597 2
Some operating systems set <i>/dev/tty</i> with incorrect modes, causing the reading of passwords to fail with the following error:
</p>
d610 3
a612 2
The solution to this is to reset the permissions on <i>/dev/tty</i> to mode 0666 and report the error as a bug to your OS vendor. 
</p>
d617 6
a622 2
If there is no 'configure' file in the tar.gz file that you downloaded or make fails with "missing separator" errors, you have probably downloaded the OpenBSD distribution of OpenSSH and are attempting to compile it on another platform. Please refer to the information on the <a href="./portable.html">portable version</a>.
</p>
d627 4
a630 2
OpenSSH may hang when exiting.  This can occur when there is an active background process.  This is known to occur on Linux and HP-UX.  The problem can be verified by doing the following:
</p>
d653 5
a657 2
A work around for bash users is to place <b>"shopt -s huponexit"</b> in either /etc/bashrc  or ~/.bashrc.  Otherwise, consult your shell's man page for an option to enable it to send a HUP signal to active jobs when exiting.
</p>
d703 1
a703 1
<small>$OpenBSD: faq.html,v 1.48 2002/04/15 19:26:28 jufi Exp $</small>
@


1.48
log
@
broken link
@
text
@d7 1
d592 1
a592 1
</p>
d608 1
a608 1
<a href=index.html><img height=24 width=24 src=back.gif border=0 alt=OpenSSH></a>
d611 1
a611 1
<small>$OpenBSD: faq.html,v 1.47 2002/04/12 14:52:29 provos Exp $</small>
@


1.47
log
@call public keys that are smaller than advertised "smaller" everything else
seems to confuse people. okay markus@@
@
text
@d73 1
a73 1
The OpenSSH suite includes the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> program which replaces rlogin and telnet, and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> which replaces <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&amp;sektion=1">rcp(1)</a> and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a>. OpenSSH has also, recently, added <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> which implement an easier solution for file-transfer. This is based upon the <a href="txt/draft-ietf-secsh-filexfer-00.txt">secsh-filexfer</a> IETF draft.
d610 1
a610 1
<small>$OpenBSD: faq.html,v 1.46 2002/04/03 21:29:25 stevesk Exp $</small>
@


1.46
log
@I upgraded to OpenSSH 3.1 and X11 forwarding stopped working.
@
text
@d318 1
a318 1
Commercial SSH's <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> program contained a bug which caused it to occasionally generate Pubkey Authentication (RSA or DSA) keys which had their Most Significant Bit (MSB) unset. Such keys were advertised as being full-length, but are actually, half the time, half as long as advertised.
d322 1
a322 1
OpenSSH will print warning messages when it encounters such keys. To rid yourself of these message, edit you known_hosts files and replace the incorrect key length (usually "1024") with the correct key length (usually "1023"). However, as previously stated, these keys are usually less secure, so it is best to just make new ones.
d610 1
a610 1
<small>$OpenBSD: faq.html,v 1.45 2002/03/26 16:48:27 markus Exp $</small>
@


1.45
log
@hang on exit; ok deraadt@@
@
text
@d19 1
a19 1
<strong>Date: 2001/07/12</strong>
d57 1
d593 13
d610 1
a610 1
<small>$OpenBSD: faq.html,v 1.44 2002/01/20 11:19:05 jufi Exp $</small>
@


1.44
log
@
copyright extended to 2002
@
text
@d56 1
d538 1
a538 1
Current versions of OpenSSH may hang when exiting.  This can occur when there is an active background process.  This is known to occur on Linux and HP-UX.  The problem can be verified by doing the following:
d565 27
d596 1
a596 1
<small>$OpenBSD: faq.html,v 1.43 2001/12/07 16:59:54 markus Exp $</small>
@


1.43
log
@update 2.8: After upgrading OpenSSH I lost SSH2 support.
@
text
@d10 1
a10 1
<meta name= "copyright"     content= "This document copyright 1999-2001 OpenBSD.">
d568 1
a568 1
<small>$OpenBSD: faq.html,v 1.42 2001/10/08 15:29:46 markus Exp $</small>
@


1.42
log
@better docu for "why setuid?"
@
text
@d41 1
a41 1
	<li><a href= "#2.8">2.8 - After upgrading to OpenSSH 2.5.1 I lost SSH2 support.</a>
d368 1
a368 1
<h2><a name= "2.8">2.8 - After upgrading to OpenSSH 2.5.1 I lost SSH2 support.</a></h2>
d371 1
a371 1
Between versions changes can be made to <i>sshd_config</i> or <i>ssh_config</i>. You should always check on these changes when upgrading versions of OpenSSH. Between OpenSSH 2.3.0 and 2.5.1 you need to add the following to your <i>sshd_config</i>
d378 2
a379 1
<b>HostKey /etc/ssh_host_dsa_key</b>
d568 1
a568 1
<small>$OpenBSD: faq.html,v 1.41 2001/09/10 19:26:33 jufi Exp $</small>
@


1.41
log
@
powerpc.html -> macppc.html
copyright notices cleaned up.
All work by David Krause <openbsd@@davidkrause.com>
@
text
@d239 11
a249 2
In conjunction with the previous question, (<a href="#2.1">2.1</a>) OpenSSH needs root authority to be able to bind to low-numbered ports to facilitate rhosts authentication. You can safely remove the setuid bit from the ssh executable if you don't want to use these authentication methods.
The setuid bit is also required for rhosts-rsa authentication to older SSH releases.
d251 2
d553 1
a553 1
$ <b> command < /dev/null > /dev/null 2>&1</b>
d567 1
a567 1
<small>$OpenBSD: faq.html,v 1.40 2001/07/13 15:46:53 markus Exp $</small>
@


1.40
log
@update rekeying and minor cleanups
@
text
@d10 1
a10 1
<meta name= "copyright"     content= "This document copyright (C) 1999-2001 OpenBSD">
d556 1
a556 1
<small>$OpenBSD: faq.html,v 1.39 2001/06/09 16:39:05 pvalchev Exp $</small>
@


1.39
log
@typos, spelling and link fixes; dstoikov@@biosgroup.com
@
text
@d19 1
a19 1
<strong>Date: 2001/02/26</strong>
d37 6
a42 5
	<li><a href= "#2.4">2.4 - Old versions of commercial SSH encrypt host keys with IDEA.</a>
	<li><a href= "#2.5">2.5 - What are these warning messages about key lengths?</a>
	<li><a href= "#2.6">2.6 - X11 and/or agent forwarding does not work.</a>
	<li><a href= "#2.7">2.7 - After upgrading to OpenSSH 2.5.1 I lost SSH2 support.</a>
	<li><a href= "#2.8">2.8 - sftp/scp fails at connection, but ssh is OK.</a>
d239 2
a240 1
In conjunction with the previous question, (<a href="#2.1">2.1</a>) OpenSSH needs root authority to be able to bind to low-numbered ports to facilitate rhosts and rhosts-rsa authentication. You can safely remove the setuid bit from the ssh executable if you don't want to use these authentication methods.
d250 1
a250 1
OpenSSH 2.2.0 detects that SSH 2.3 has this flaw. Recent versions of SSH will have this bug fixed. Or you can add the following to ssh 2.3's <i>/etc/sshd2_config</i>.
d263 2
d266 8
a273 1
In addition to the flawed HMAC implementation, problems in interoperation have been seen due to OpenSSH not yet supporting the option of rekeying. However SSH 2.3 tries to negotiate this feature, and you might experience connection freezes or see the error message &quot;<b>Dispatch protocol error: type 20</b>&quot;. To solve this problem, either upgrade to SSH 2.4 or disable rekeying by adding the following to your commercial SSH 2.3's <i>sshd_config</i>.
d286 1
a286 1
<h2><a name= "2.4">2.4 - Old versions of commercial SSH encrypt host keys with IDEA.</a></h2>
d302 1
a302 1
<h2><a name= "2.5">2.5 - What are these warning messages about key lengths</a></h2>
d312 1
a312 1
<h2><a name= "2.6">2.6 - X11 and/or agent forwarding does not work.</a></h2>
d357 1
a357 1
<h2><a name= "2.7">2.7 After upgrading to OpenSSH 2.5.1 I lost SSH2 support.</a></h2>
d373 1
a373 1
<h2><a name= "2.8">sftp/scp fails at connection, but ssh is OK.</a></h2>
d525 1
a525 1
Current versions of OpenSSH may hang when exiting.  This can occur when there is an active background process.  This is known to occur on Linux and HP-UX.  The problem can be verified by doing the following: <I>sleep 20&exit</I>.
d527 20
d556 1
a556 1
<small>$OpenBSD: faq.html,v 1.38 2001/06/07 04:10:05 pvalchev Exp $</small>
@


1.38
log
@typos and spelling fixes; dstoikov@@biosgroup.com
@
text
@d365 1
a365 1
sftp and/or scp may fail at connection time if you have shell initialisation (.profile, .bashrc, .cshrc, etc) which produces output for non-interactive sessions. This output confuses the sftp/scp client.  You can verify if your shell is doing this by executing:
d379 1
a379 1
If the above command produces any output, then you need to modify your shell initialisation.
d525 1
a525 1
<small>$OpenBSD: faq.html,v 1.37 2001/05/22 08:03:24 kevlo Exp $</small>
@


1.37
log
@- mention "ForwardX11 yes" in ssh_config
- reformat this entry(2.6)
--
Ok'd by: markus@@
@
text
@d365 1
a365 1
sftp and/or scp may fail at connection time if you have shell initialisation (.profile, .bashrc, .chsrc, etc) which produces output for non-interactive sessions. This output confuses the sftp/scp client.  You can verify if your shell is doing this by executing:
d525 1
a525 1
<small>$OpenBSD: faq.html,v 1.36 2001/05/05 22:57:07 markus Exp $</small>
@


1.36
log
@ssh.com uses sshd2_config
@
text
@d304 1
a304 1
Check your <i>ssh_config</i> and <i>sshd_config</i>. The default configuration files disable authentication agent and X11 forwarding. To enable it, put the lines below in your configuration.
d311 1
a311 2
<b>X11Forwarding yes</b><br>
<b>ForwardAgent yes</b>
d318 15
d525 1
a525 1
<small>$OpenBSD: faq.html,v 1.35 2001/03/22 13:10:23 horacio Exp $</small>
@


1.35
log
@/bin/true -> /usr/bin/true
@
text
@d248 1
a248 1
OpenSSH 2.2.0 detects that SSH 2.3 has this flaw. Future versions of SSH will have this bug fixed. Or you can add the following to ssh 2.3's <i>/etc/sshd_config</i>.
d511 1
a511 1
<small>$OpenBSD: faq.html,v 1.34 2001/03/14 01:01:45 djm Exp $</small>
@


1.34
log
@add FAQ about broken shell init breakin sftp
@
text
@d358 1
a358 1
<b>ssh yourhost /bin/true</b>
d511 1
a511 1
<small>$OpenBSD: faq.html,v 1.33 2001/02/28 19:35:59 wvdputte Exp $</small>
@


1.33
log
@Fix /absolute link to /images
@
text
@d41 1
d348 20
d511 1
a511 1
<small>$OpenBSD: faq.html,v 1.32 2001/02/26 16:54:28 stevesk Exp $</small>
@


1.32
log
@typos.
@
text
@d14 1
a14 1
<img alt="[OpenSSH]" height=30 width=141 src="/images/smalltitle.gif">
d490 1
a490 1
<small>$OpenBSD: faq.html,v 1.31 2001/02/26 16:47:22 stevesk Exp $</small>
@


1.31
log
@add "Hangs when exiting ssh"; mouring@@etoh.eviladmin.org and me.
@
text
@d158 1
a158 1
	<li>HP/UX 
d331 1
a331 1
<h2><a name= "2.7">After upgrading to OpenSSH 2.5.1 I lost SSH2 support.</a></h2>
d490 1
a490 1
<small>$OpenBSD: faq.html,v 1.30 2001/02/25 07:13:14 ericj Exp $</small>
@


1.30
log
@add faq mentioning HostKey option
@
text
@d19 1
a19 1
<strong>Date: 2001/06/02</strong>
d53 1
d476 10
d490 1
a490 1
<small>$OpenBSD: faq.html,v 1.29 2001/02/22 22:08:12 horacio Exp $</small>
@


1.29
log
@Open*SSH* faq, -2001, typos
@
text
@d40 1
d330 16
d479 1
a479 1
<small>$OpenBSD: faq.html,v 1.28 2001/02/16 13:28:11 deraadt Exp $</small>
@


1.28
log
@remove a sentence about patents that does nothing except confuse
@
text
@d7 1
a7 1
<meta name= "description"   content= "the OpenBSD FAQ page">
d10 1
a10 1
<meta name= "copyright"     content= "This document copyright (C) 1999 OpenBSD">
d67 1
a67 1
The OpenSSH suite includes the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> program which replaces rlogin and telnet, and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> which replaces <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&amp;sektion=1">rcp(1)</a> and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a>. OpenSSH has also, recently, added <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> which give implement an easier solution for file-transfer. This is based upon the <a href="txt/draft-ietf-secsh-filexfer-00.txt">secsh-filexfer</a> IETF draft.
d148 1
a148 1
Even though OpenSSH is developed on <a href="http://www.openbsd.org">OpenBSD</a> a wide variety of ports to other operating systems exist. The portable version of OpenSSH is headed by <a href="mailto:djm@@openbsd.org">Damien Miller</a>. For a quick overview of the portable version of OpenSSH see: <a href="./portable.html">http://www.openssh.com/portable.html</a>. A quick view of other OS's that are supported is below.
d193 1
a193 1
There are many places to turn to for help. In addition to the main OpenSSH website: <a href="http://www.openssh.com">http://www.openssh.com</a>, there are many mailing lists to try. But before trying any mailing lists, please search through all mailing list archives to see if your question has already been answered. The OpenSSH Mailing List has been archived and put in searchable form and can be found at <a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;r=1&amp;w=2">theaimsgroup.com</a>.
d219 1
a219 1
Or you can specify this option on the command line, using the <b>-o</b> option to <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)A</a> command.
d375 1
a375 1
There is one caveat when using empty passwords with PAM authentication: PAM will allow any password when authenticating an account with an empty password. This breaks the check that <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> uses to determined whether an account has no password set and grant users access to the account regardless of the policy specified by <b>PermitEmptyPasswords</b>. For this reason, it is recommended that you do not add the <b>nullok</b> directive to your PAM configuration file unless you specifically wish to allow empty passwords.
d462 1
a462 1
<small>$OpenBSD: faq.html,v 1.27 2001/02/15 15:01:43 naddy Exp $</small>
@


1.27
log
@- Fix spelling and markup; from Chris Pepper <pepper@@mail.reppep.com>.
- Escape ampersands.
@
text
@a183 2
The SSH2 protocol uses DH and DSA, two other algorithms which have no nasty patent issues. If you avoid use of the SSH1 protocol, and use only the SSH2
protocol, you have nothing to worry about. However, you will need to find SSH2-compatible clients and servers for your other machines. 
d462 1
a462 1
<small>$OpenBSD: faq.html,v 1.26 2001/02/12 21:16:51 naddy Exp $</small>
@


1.26
log
@typos
@
text
@d1 1
d23 2
a24 2
<ul>
<h3><a href= "#1.0">1.0 - What is OpenSSH and Where Can i get it?</a></h3>
d53 1
a53 1
</ul>
d55 1
a56 1
<hr>
d58 1
a58 4
<p>
<a name= "1.0"></a>
<h2><u>1.0 - What is OpenSSH and Where Can i get it?</u></h2>
</p>
d60 1
a60 4
<p>
<a name= "1.1"></a>
<h2>1.1 - What is OpenSSH?</h2>
</p>
d67 1
a67 1
The OpenSSH suite includes the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&sektion=1">ssh(1)</a> program which replaces rlogin and telnet, and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&sektion=1">scp(1)</a> which replaces <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&sektion=1">rcp(1)</a> and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&sektion=1">ftp(1)</a>. OpenSSH has also, recently, added <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&sektion=1">sftp(1)</a> and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&sektion=8">sftp-server(8)</a> which give implement an easier solution for file-transfer. This is based upon the <a href="txt/draft-ietf-secsh-filexfer-00.txt">secsh-filexfer</a> IETF draft.
d70 2
d73 9
a81 10
<strong>OpenSSH consists of a number of programs.</strong>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&sektion=8">sshd(8)</a> - Server program run on the server machine. This listens for connections from client machines, and whenever it receives a connection, it performs authentication and starts serving the client.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&sektion=1">ssh(1)</a> - This is the client program used to log into another machine or to execute commands on the other machine. <i>slogin</i> is another name for this program.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&sektion=1">scp(1)</a> - Securely copies files from one machine to another.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&sektion=1">ssh-keygen(1)</a> - Used to create Pubkey Authentication (RSA or DSA) keys (host keys and user authentication keys).
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-agent&sektion=1">ssh-agent(1)</a> - Authentication agent.  This can be used to hold RSA keys for authentication.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-add&sektion=1">ssh-add(1)</a> - Used to register new keys with the agent.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&sektion=8">sftp-server(8)</a> - SFTP server subsystem.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&sektion=1">sftp(1)</a> - Secure file tranfer program.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keyscan&sektion=1">ssh-keyscan(1)</a> - gather ssh public keys.
d84 1
a84 4
<p>
<a name= "1.2"></a>
<h2>1.2 - Why should it be used?</h2>
</p>
d145 1
a145 4
<p>
<a name= "1.3"></a>
<h2>1.3 - What operating systems are supported?</h2>
</p>
d157 1
a157 1
	<li>Irix 
a168 3
<p>
<a name= "1.4"></a>
<h2>1.4 - What about copyrights, usage and patents?</h2>
d171 3
d192 1
a192 4
<p>
<a name= "1.5"></a>
<h2>1.5 - Where should I ask for help?</h2>
</p>
d195 1
a195 1
There are many places to turn to for help. In addition to the main OpenSSH website: <a href="http://www.openssh.com">http://www.openssh.com</a>, there are many mailing lists to try. But before trying any mailing lists, please search through all mailing list archives to see if your question has already been answered. The OpenSSH Mailing List has been archived and put in searchable form and can be found at <a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&r=1&w=2">theaimsgroup.com</a>.
d202 1
a202 4
<p>
<a name= "2.0"></a>
<h2><u>2.0 - General Questions</u></h2>
</p>
d204 1
a204 4
<p>
<a name= "2.1"></a>
<h2>2.1 - Why does ssh/scp make connections from low-numbered ports.</a></h2>
</p>
d210 1
a210 1
<ul>
d218 1
a218 1
</ul>
d221 1
a221 1
Or you can specify this option on the command line, using the <b>-o</b> option to <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&sektion=1">ssh(1)</i> command.
d224 1
a224 1
<ul>
d232 1
a232 1
</ul>
d234 1
a234 4
<p>
<a name= "2.2"></a>
<h2>2.2 - Why is the ssh client setuid root?</h2>
</p>
d240 1
a240 4
<p>
<a name= "2.3"></a>
<h2>2.3 - Why does SSH 2.3 have problems interoperating with OpenSSH 2.1.1?</h2>
</p>
d250 1
a250 1
<ul>
d258 1
a258 1
</ul>
d261 1
a261 1
In addition to the flawed HMAC implementation, problems in interoperation have been seen dut to OpenSSH not yet supporting the option of rekeying. However SSH 2.3 tries to negotiate this feature, and you might experience connection freezes or see the error message &quot;<b>Dispatch protocol error: type 20</b>&quot;. To solve this problem, either disable rekeying by adding the below statement to your commercial SSH 2.3's <i>sshd_config</i>.
d264 1
a264 1
<ul>
d272 1
a272 5
</ul>

<p>
Upgrading to SSH 2.4 will also eliminate the problem.
</p>
d274 1
a274 4
<p>
<a name= "2.4"></a>
<h2>2.4 - Old versions of commercial SSH encrypt host keys with IDEA.</h2>
</p>
d277 1
a277 1
The old versions of SSH used a patented algorithm to encrypt their <i>/etc/ssh/ssh_host_key</i>. This problem will manifest as <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&sektion=8">sshd(8)</a> not being able to read its host key. To solve this, use the command below to convert your ssh_host_key to use 3DES. <b>NOTE:</b> Use the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&sektion=1">ssh-keygen(1)</a> program from the Commercial SSH product, *NOT* OpenSSH for the example below.
d280 1
a280 1
<ul>
d284 1
a284 1
# <b>ssh-keygen -u -f /etc/ssh/ssh_host_key<b>
d288 1
a288 1
</ul>
d290 1
a290 4
<p>
<a name= "2.5"></a>
<h2>2.5 - What are these warning messages about key lengths</h2>
</p>
d293 1
a293 1
Commercial SSH's <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&sektion=1">ssh-keygen(1)</a> program contained a bug which caused it to occasionally generate Pubkey Authentication (RSA or DSA) keys which had their Most Significant Bit (MSB) unset. Such keys were advertised as being full-length, but are actually, half the time, half as long as advertised.
d300 1
a300 4
<p>
<a name= "2.6"></a>
<h2>2.6 - X11 and/or agent forwarding does not work.</h2>
</p>
d306 1
a306 1
<ul>
d315 1
a315 1
</ul>
d321 1
a321 1
<ul>
d329 1
a329 1
</ul>
d331 1
a331 4
<p>
<a name= "3.0"></a>
<h2><u>3.0 - Portable OpenSSH Questions</u></h2>
</p>
d333 1
a333 4
<p>
<a name= "3.1"></a>
<h2>3.1 - Spurious PAM authentication messages in logfiles.</h2>
</p>
d339 1
a339 1
<ul>
d343 1
a343 1
&quot;<b>authentication failure; (uid=0) -> root for sshd service</b>&quot;
d347 1
a347 1
</ul>
d350 1
a350 1
These are generated because OpenSSH first tries to determine whether a user needs authentication to login (e.g. empty password). Unfortunatly PAM likes to log all authentication events, this one included.
d357 1
a357 4
<p>
<a name= "3.2"></a>
<h2>3.2 - Empty passwords not allowed with PAM authentication.</h2>
</p>
d363 1
a363 1
<ul>
d371 1
a371 1
</ul>
d374 1
a374 1
This must be done in addtion to setting &quot;<b>PermitEmptyPasswords yes</b>&quot; in the <i>sshd_config</i> file. 
d377 1
a377 1
There is one caveat when using empty passwords with PAM authentication: PAM will allow any password when authenticating an account with an empty password. This breaks the check that <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&sektion=8">sshd(8)</a> uses to determined whether an account has no password set and grant users access to the account regardless of the policy specified by <b>PermitEmptyPasswords</b>. For this reason, it is recommended that you do not add the <b>nullok</b> directive to your PAM configuration file unless you specifically wish to allow empty passwords.
d380 1
a380 4
<p>
<a name= "3.3"></a>
<h2>3.3 - ssh(1) takes a long time to connect with Linux/glibc 2.1</h2>
</p>
d386 1
a386 4
<p>
<a name= "3.4"></a>
<h2>3.4 - "Can't locate module net-pf-10" messages in log under Linux.</h2>
</p>
d396 1
a396 4
<p>
<a name= "3.5"></a>
<h2>3.5 - Password authentication doesn't work on Slackware 7.0</h2>
</p>
d402 1
a402 1
<ul>
d410 1
a410 1
</ul>
d412 1
a412 4
<p>
<a name= "3.6"></a>
<h2>3.6 - Configure or sshd(8) complain about lack of RSA or DSA support</h2>
</p>
d418 1
a418 4
<p>
<a name= "3.7"></a>
<h2>3.7 - "scp: command not found" errors</h2>
</p>
d421 1
a421 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&sektion=1">scp(1)</a> must be in the default PATH on both the client and the server. You may need to use the <b>--with-default-path</b> option to specify a custom path to search on the server. This option replaces the default path, so you need to specify all the current directories on your path as well as where you have installed scp. For example:
d424 1
a424 1
<ul>
d432 1
a432 1
</ul>
d434 1
a434 4
<p>
<a name= "3.8"></a>
<h2>3.8 - Unable to read passphrase</h2>
</p>
d440 1
a440 1
<ul>
d448 1
a448 1
</ul>
d454 1
a454 4
<p>
<a name= "3.9"></a>
<h2>3.9 - 'configure' missing or make fails</h2>
</p>
d462 1
a462 1
<a href=mailto:www@@openbsd.org>www@@openbsd.org</a>
d464 1
a464 1
<small>$OpenBSD: faq.html,v 1.25 2001/02/07 22:12:04 ericj Exp $</small>
@


1.25
log
@
New format for the OpenSSH faq. markus@@ ok
@
text
@d178 1
a178 1
A list of vendors that include OpenSSH in thier distributions is located at <a href="./users.html">www.openssh.com/users.html</a>.
d185 1
a185 1
The OpenSSH developers have tried very hard to keep OpenSSH free of any, patent, or copyright problems. To do this, some options had to be stripped from OpenSSH. Namely support for patented algorithms.
d259 1
a259 1
In conjunction with the previous question, (<a href="#2.1">2.1</a>) OpenSSH needs root authority to be able to bind to low-numbered ports to facilitate rhosts and rhosts-rsa authentication.You can safely remove the setuid bit from the ssh executable if you don't want to use these authentication methods.
d474 1
a474 1
nsure that your OpenSSL libraries have been built to include RSA or DSA support either internally or through RSAref.
d532 1
a532 1
<small>$OpenBSD: faq.html,v 1.24 2001/01/27 19:18:38 markus Exp $</small>
@


1.24
log
@html markup
@
text
@a0 1
<!DOCTYPE HTML PUBLIC  "-//IETF//DTD HTML Strict//EN">
d4 6
a9 6
<link rev=made href=mailto:www@@openbsd.org>
<meta name="resource-type" content="document">
<meta name="description" content="the OpenSSH project portable version upgrading issues page">
<meta name="keywords" content="openbsd,portable version,upgrading">
<meta name="distribution" content="global">
<meta name="copyright" content="This document copyright 1999 by OpenBSD.">
d12 272
a283 1
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#23238E">
a284 1
<img alt="[OpenSSH]" height=30 width=141 SRC="images/smalltitle.gif">
d286 2
a287 1
<h2><font color=#e00000>OpenSSH FAQ</font><hr></h2>
d289 234
a522 281
<P>
OpenSSH is almost completely compatible with the commercial SSH 1.2.x.
There are, however, a few exceptions that you will need to bear in
mind while upgrading from the commercial version, or trying to add
OpenSSH to a system that does not ship with it by default.

<ol>
<li><strong>Why does ssh/scp make connections from low-numbered ports. My
	firewall blocks these.
	</strong><p>

	The OpenSSH client uses low numbered ports for rhosts and rhosts-rsa 
	authentication because the server needs to trust the username 
	provided by the client. 
	<p>
	To prevent ssh from using low-numbered ports, add 
	<pre>UsePrivilegedPort no</pre> to your <i>ssh_config</I> or 
	<i>~/.ssh/config</i> files, remove the setuid bit from the ssh 
	executable or use add <pre>-o "UsePrivilegedPort no"</pre> to your
	ssh or scp commandline.
	<p>

<li><strong>Why is the ssh client setuid root?
	</strong><p>

	The ssh client need to bind to a low-numbered port for rhosts and
	rhosts-rsa authentication. You can safely remove the setuid bit from
	the ssh executable if you don't want to use these authentication 
	methods.
	<p>
	
<li><strong>Does OpenSSH implement SFTP?
	</strong><p>
        In OpenSSH 2.3.0 Markus Friedl added support for a SFTP
        server that implements the SFTP protocol used by serveral
        commercial SSH clients.  For more information see
	<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd">sshd</a>
	manpage for the <b>Subsystem</b> option.
	SFTP is documented in the 
	<a href="txt/draft-ietf-secsh-filexfer-00.txt">secsh-filexfer</a>
	IETF draft.
	<p>

<li><strong>Why does SSH 2.3 have problems interoperating with OpenSSH 2.1.1?
	</strong><p>
	SSH 2.3 and earlier versions contain a flaw in their HMAC implementation.
	Their code was not supplying the full data block output from the digest,
	and instead always provided 128 bits.  For longer digests, this caused
	SSH 2.3 to not interoperate with OpenSSH.
	<p>
	OpenSSH 2.2.0 detects that SSH 2.3 has this flaw.  Future versions of
	SSH will have this bug fixed.
	<p>

<li><strong>Why does my connection freeze when I use SSH 2.3?
	</strong><p>
	OpenSSH does not yet support rekeying, but SSH 2.3 tries
	to negotiate this feature.
	<p>
	<b><i>Solution:</i></b>
	Upgrade your commercial SSH version to SSH 2.4 or disable
	rekeying by adding <b>RekeyIntervalSeconds 0</b> to the
	configuration file of SSH 2.3.
	<p>

<li><strong>Why does OpenSSH print "Dispatch protocol error: type 20"
	</strong><p>
	See the previous question.
	<p>

<li><strong>OpenSSH does not support any patented transport algorithms.
	</strong><p>
	In SSH1 mode, only 3DES and Blowfish can be selected.
	In SSH2 mode, only 3DES, Blowfish, CAST128 or Arcfour can be selected
	at the current time.  The patented and dated IDEA algorithm is
	not supported.
	<p>
	This difference may manifest
	itself in the
	<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh">ssh</a>
	command refusing to read configuration files left over from a previous
	installation of commercial SSH.
	<p>

	<b><i>Solution:</i></b>
	Edit <i>/etc/ssh/ssh_config</i> and select a different 
	<b>Cipher</b> option ("3des" or "blowfish").
	<p>

<li><strong>Old versions of commercial SSH encrypt host keys with IDEA.
	</strong><p>
	The old versions of SSH used a patented algorithm to encrypt their
	<i>/etc/ssh/ssh_host_key</i>.  This problem will manifest as
	<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd">sshd</a>
	not being able to read its host key.
	<p>

	<b><i>Solution:</i></b>
	You will need to run the <u>commercial</u> version of
	ssh-keygen on the host's private key:
	<p>

	<pre>
	# ssh-keygen -u -f /etc/ssh/ssh_host_key
	</pre>
	This will "upgrade" the key to 3DES.
	<p>

<li><strong>Incompatible changes to <i>/etc/sshd_config</i> format.
	</strong><p>
	OpenSSH extends the <I>sshd_config</I> file format in a number of 
	ways.
	Currently, one change is incompatible with commercial SSH.
	<p>

	Commercial SSH controlled logging using the <b>QuietMode</b> and
	<b>FascistLogging</b> directives. OpenSSH introduces a more 
	general set of logging options <b>SyslogFacility</b> and 
	<b>LogLevel</b>. See the
	<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd">sshd</a>
	manual page for details.

<p>
<li><strong>Warning messages about key lengths.</strong><p>
	Commercial SSH's ssh-keygen program contained a bug which caused it 
	to occasionally generate RSA keys which had their Most Significant 
	Bit (MSB) unset. Such keys were advertised as being full-length, 
	but are actually, half the time, half as long as advertised.
	<p>

	OpenSSH will print warning messages when it encounters such keys. To
	rid yourself of these message, edit you known_hosts files and replace
	the incorrect key length (usually "1024") with the correct key length
	(usually "1023").  However, as previously stated, these keys are usually
	less secure, so it is best to just make new ones.

<p>
<li><strong>Portable OpenSSH: Spurious PAM authentication messages in logfiles.</strong><p>

	The portable version of OpenSSH will generate spurious authentication
	failures at every login, similar to:

	<pre>"authentication failure; (uid=0) -> root for sshd service"</pre>

	These are generated because OpenSSH first tries to determine whether a
	user needs authentication to login (e.g. empty password). Unfortunatly
	PAM likes to log all authentication events, this one included.
	<p>

	If it annoys you too much, set <b>PermitEmptyPasswords</b> to "no" in 
	<i>sshd_config</i>. This will quiet the error message at the expense of
	disabling logins to accounts with no password set. This is the 
	default if you use the supplied <i>sshd_config</i> file.

<p>
<li><strong>Portable OpenSSH: Empty passwords not allowed with PAM authentication</strong><p>

	To enable empty passwords with a version of OpenSSH built with PAM you
	must add the flag <B>nullok</B> to the end of the password checking 
	module in the <I>/etc/pam.d/sshd</I> file. For example:

	<PRE>auth required/lib/security/pam_unix.so shadow nodelay nullok</PRE>

	This must be done in addtion to setting <B>PermitEmptyPasswords</B> to 
	"yes" in the <I>sshd_config</I> file.
	<P>

	There is one caveat when using empty passwords with PAM
	authentication: PAM will allow <U>any</U> password when authenticating
	an account with an empty password. This breaks the check that sshd
	uses to determined whether an account has no password set and grant
	users access to the account regardless of the policy specified by
	<B>PermitEmptyPasswords</B>. For this reason, it is recommended that
	you do not add the <B>nullok</B> directive to your PAM configuration 
	file unless you specifically wish to allow empty passwords.

<p>
<li><strong>X11 and/or agent forwarding does not work</strong><p>
	Check your <I>ssh_config</I> and <I>sshd_config</I>. The default 
	configuration files disable authentication agent and X11 forwarding.

	<p>
	Mandrake Linux 7.2 also modifies the XAUTHORITY environment variable
	in /etc/skel/.bashrc, and thus any bash user's home directory. 
	This will break X11 forwarding unless the following line is 
	commented out: "export XAUTHORITY=$HOME/.Xauthority"

<p>
<li><strong><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh">ssh</a>
    takes a long time to connect with Linux/glibc 2.1</strong><p>

	The glibc shipped with Redhat 6.1 appears to take a long time to 
	resolve "IPv6 or IPv4" addresses from domain names. This can be 
	kludged around with the <B>--with-ipv4-default</B> configure option. 
	This instructs OpenSSH to use IPv4-only address resolution. (IPv6
	lookups may still be made by specifying the -6 option).

<p>
<li><strong>Logins from commercial ssh generate the error:
	<pre>Selected cipher type idea not supported by server</pre>
	</strong><p>

	This error is generated when a commercial ssh which has been 
	configured to use the 'idea' cipher attempts to connect to an 
	OpenSSH server. To rectify this, select a different cipher in
	<I>ssh_config</I> or <I>~/.ssh/config</I> (3des for security or
	blowfish for speed).

<p>
<li><strong>Portable OpenSSH: "Can't locate module net-pf-10" messages in log under Linux</strong><p>
	The Linux kernel is looking (via modprobe) for protocol family 10
	(IPv6). Either load the appropriate kernel module, enter the correct
	alias in <I>/etc/modules.conf</I> or disable IPv6 in 
	<I>/etc/modules.conf</I>.
	<p>

	For some silly reason <I>/etc/modules.conf</I> may also be named
	<I>/etc/conf.modules</I>

<p>
<li><strong>Portable OpenSSH: Password authentication doesn't work on Slackware 7.0</strong><p>

	Link OpenSSH with libcrypt:

	<pre>LIBS=-lcrypt ./configure [options]</pre>

<p>
<li><strong>Portable OpenSSH: Configure or sshd complain about lack of RSA support</strong><p>

	Ensure that your OpenSSL libraries have been built to include RSA
	support either internally or through RSAref.<p>

<p>
<li><strong>Portable OpenSSH: "scp: command not found" errors</strong><p>

	scp must be in the default PATH on both the client and the server. 
	You may need to use the <B>--with-default-path</B> option to specify a 
	custom path to search on the server. This option replaces the 
	default path, so you need to specify all the current directories on
	your path as well as where you have installed scp. For example: 

	<pre>./configure --with-default-path=/bin:/usr/bin:/usr/local/bin:/path/to/scp</pre>

<p>
<li><strong>Portable OpenSSH: Unable to read passphrase</strong><p>

   Some operating systems set /dev/tty with incorrect modes, causing 
   the reading of passwords to fail with the following error:

   <pre>You have no controlling tty.  Cannot read passphrase.</pre>

   The solution to this is to reset the permissions on /dev/tty to 
   mode 0666 and report the error as a bug to your OS vendor.

<p>
<li><strong>Portable OpenSSH: 'configure' missing or make fails</strong><p>

	If there is no 'configure' file in the tar.gz file that you downloaded
	or <em>make</em> fails with "missing separator" errors, you have 
	probably downloaded the OpenBSD distribution of OpenSSH and are 
	attempting to compile it on another platform. Please refer to the 
	information on the <a href="portable.html">portable</a> version.

<p>
<li><strong>As an American, I am very confused about the patent issues.
	</strong><p>

	OpenSSH provides support for both SSH1 and SSH2 protocols.
	<p>
	SSH1 protocol uses the RSA algorithm, which was under patent till
	September 21, 2000 inside the USA.  Outside the USA, none of these
	issues ever applied.
	<p>
	The SSH2 protocol uses DH and DSA, two other algorithms which
	have no nasty patent issues.  If you avoid use of the SSH1 protocol,
	and use only the SSH2 protocol, you have nothing to worry about.
	However, you will need to find SSH2-compatible clients and servers
	for your other machines.
	<p>
	Since the RSA patent has expired, there are no restrictions on the
	use of RSA algorithm using software, including OpenBSD.
a523 1
</ol>
d525 2
d532 1
a532 1
<small>$OpenBSD: faq.html,v 1.23 2001/01/27 16:34:26 markus Exp $</small>
@


1.23
log
@update drafts, add info about rekeying bug
@
text
@d77 2
d80 1
a80 1
	rekeying by adding 'RekeyIntervalSeconds 0' to the
d308 1
a308 1
<small>$OpenBSD: faq.html,v 1.22 2001/01/04 22:35:22 markus Exp $</small>
@


1.22
log
@there is a free SSH2 windows client (PuTTY); report from farid@@worldexpert.com
@
text
@d57 3
d73 14
d306 1
a306 1
<small>$OpenBSD: faq.html,v 1.21 2000/12/26 09:48:51 jufi Exp $</small>
@


1.21
log
@
small syntax corrections
proposed by Mike Pechkin <mpech@@prosoft.org.lv>
@
text
@d277 1
a277 2
	for your other machines.  For some users, this can be a small problem,
	since at this point in time we know of no free SSH2 Windows clients.
d289 1
a289 1
<small>$OpenBSD: faq.html,v 1.20 2000/12/14 12:09:53 djm Exp $</small>
@


1.20
log
@faq from people who try to compile the OpenBSD version on other platforms
@
text
@d84 1
a84 1
	<b><i>Solution:</b></i>
d97 1
a97 1
	<b><i>Solution:</b></i>
d290 1
a290 1
<small>$OpenBSD: faq.html,v 1.19 2000/11/30 05:14:27 djm Exp $</small>
@


1.19
log
@Document Linux Mandrake's XAUTHORITY breakage
@
text
@d255 9
d290 1
a290 1
<small>$OpenBSD: faq.html,v 1.18 2000/11/15 22:57:54 markus Exp $</small>
@


1.18
log
@update SFTP entry, move RSA to the end
@
text
@d181 6
d281 1
a281 1
<small>$OpenBSD: faq.html,v 1.17 2000/10/15 00:36:29 djm Exp $</small>
@


1.17
log
@Mention -o "PriviligedPort no" option too
@
text
@a48 20

<li><strong>As an American, I am very confused about the patent issues.
	</strong><p>

	OpenSSH provides support for both SSH1 and SSH2 protocols.
	<p>
	SSH1 protocol uses the RSA algorithm, which was under patent till
	September 21, 2000 inside the USA.  Outside the USA, none of these
	issues ever applied.
	<p>
	The SSH2 protocol uses DH and DSA, two other algorithms which
	have no nasty patent issues.  If you avoid use of the SSH1 protocol,
	and use only the SSH2 protocol, you have nothing to worry about.
	However, you will need to find SSH2-compatible clients and servers
	for your other machines.  For some users, this can be a small problem,
	since at this point in time we know of no free SSH2 Windows clients.
	<p>
	Since the RSA patent has expired, there are no restrictions on the
	use of RSA algorithm using software, including OpenBSD.
	<p>
d50 1
a50 1
<li><strong>OpenSSH does not implement the SFTP subsystem.
d52 5
a56 11
	While the SSH protocol is specified in the IETF SECSH drafts, the SFTP
	subsystem found in some commercial SSH implementations is not part of
	these official
	SSH protocol specifications.  It is a proprietary protocol invented
	by SSH Communications Security Corp.
	It could be reverse engineered, but we have not yet
	invested efforts to do so.
	<p>
	<strong>UPDATE</strong>: Markus Friedl has spent some time and
	reverse engineered the protocol.  The next release after 2.2.0 will
	contain an sftp-server implementation.
d248 20
d275 1
a275 1
<small>$OpenBSD: faq.html,v 1.16 2000/10/14 12:17:22 djm Exp $</small>
@


1.16
log
@Some FAQs
@
text
@d36 3
a38 2
	<i>~/.ssh/config</i> files or remove the setuid bit from the ssh 
	executable.
d281 1
a281 1
<small>$OpenBSD: faq.html,v 1.15 2000/10/09 07:40:46 reinhard Exp $</small>
@


1.15
log
@typo
@
text
@d26 23
d280 1
a280 1
<small>$OpenBSD: faq.html,v 1.14 2000/09/25 20:07:41 deraadt Exp $</small>
@


1.14
log
@deal with patent expiry
@
text
@d58 1
a58 1
	contain an sftp-server implimentation.
d257 1
a257 1
<small>$OpenBSD: faq.html,v 1.13 2000/09/01 15:44:19 deraadt Exp $</small>
@


1.13
log
@doc 2.3 interop problem
@
text
@d31 3
a33 3
	SSH1 protocol uses the RSA algorithm, which is under patent till
	September 21 inside the USA.  Outside the USA, none of these issues
	apply.
d42 2
a43 54
	There is an implementation of the RSA algorithm from RSA Inc,
	which comes with a
	<a href="http://www.spinnaker.com/crypt/rsaref/license.txt">
	non-commercial use license</a>.  Although this is not a very good
	implementation of the RSA algorithm, it is the only one which
	may be used without cost inside the USA.  The relevant sections
	from the licence -- describing the conditions of use -- are quoted
	below.
	<p>
	<pre>
    b.   The Program may not be used directly for revenue-generating
          purposes. You may not:

          (i)  use the Program to provide services to others for which
               you are compensated in any manner;

          (ii) license or otherwise distribute any Application Program
               in any manner that generates income to you, including
               without limitation any income on account of license
               fees, royalties, maintenance fees and upgrade fees; and

          (iii) license or otherwise distribute any Application
               Program without the express written acknowledgment of
               the end user that the Program will not be used in
               connection with any revenue-generating activity of the
               end user.

          Nothing in this paragraph prohibits you from using the
          Program or any Application Program solely for internal
          purposes on the premises of a business which is engaged in
          revenue-generating activities.
	</pre>
	<p>

	<p>
	Thus, if you are using OpenBSD in the USA as a non-commercial user,
	use the <b>sslUSA27</b> package instead of the <b>ssl27</b> package.
	Then you can use both SSH1 and SSH2 protocols.  The <b>sslUSA27</b>
	package contains an OpenSSL implementation linked with the RSAREF2
	source, written by RSA Labs, with the above licence. Without the ssl
	package, note that SSH is not useless, since SSH2 protocol still works.
	You will need an ssh2-compatible ssh client (VanDyke Technologies sells
	SecureCRT, and ssh.com has a client [but it's not very draft
	compliant]), I don't know of any free ssh2 clients for Windows.
	The SSH2 protocol was rewritten to not require RSA, so there are
	no patent problems there (the relevant patents expired in 1997).
	<p>
	The same basic rules apply to the portable OpenSSH releases.  Once
	again, a careful read of the above licence will make it clear that
	having an SSH1 implementation (or an RSA implementation) on your
	premises is not a patent violation; it requires specific use in
	violation of those terms to be of consequence.  In our mind, that
	is largely irrelevant, considering that the entire problem goes
	away in September.
d257 1
a257 1
<small>$OpenBSD: faq.html,v 1.12 2000/08/04 06:54:15 jufi Exp $</small>
@


1.12
log
@
Typo : wiht -> with
@
text
@d108 15
d309 1
a309 1
<small>$OpenBSD: faq.html,v 1.11 2000/07/31 23:38:02 deraadt Exp $</small>
@


1.11
log
@grammer
@
text
@d80 1
a80 1
	package contains an OpenSSL implementation linked wiht the RSAREF2
d294 1
a294 1
<small>$OpenBSD: faq.html,v 1.10 2000/07/29 17:10:01 markus Exp $</small>
@


1.10
log
@SSH is *not* an official IETF protocol; bellovin
@
text
@d151 1
a151 1
	Currently, one change which is incompatible with commercial SSH. 
d294 1
a294 1
<small>$OpenBSD: faq.html,v 1.9 2000/07/23 21:34:44 jufi Exp $</small>
@


1.9
log
@
Some typos corrected.
okay deraadt@@
@
text
@d100 3
a102 2
	While the SSH protocol is an official IETF specification, the SFTP
	subsystem found in commercial SSH is not part of these official
d294 1
a294 1
<small>$OpenBSD: faq.html,v 1.8 2000/07/21 19:27:07 deraadt Exp $</small>
@


1.8
log
@say more about patents, because americans keep whining
@
text
@d42 1
a42 1
	There is an implimentation of the RSA algorithm from RSA Inc,
d45 2
a46 2
	non-commercial use license</a>.  Althrough this is not a very good
	implimentation of the RSA algorithm, it is the only one which
d80 1
a80 1
	package contains an OpenSSL implimentation linked wiht the RSAREF2
d293 1
a293 1
<small>$OpenBSD: faq.html,v 1.7 2000/06/10 03:43:31 deraadt Exp $</small>
@


1.7
log
@isakmpd errata
@
text
@d26 72
d293 1
a293 1
<small>$OpenBSD: faq.html,v 1.6 2000/06/09 22:49:33 djm Exp $</small>
@


1.6
log
@Added blurb about busted /dev/tty modes
@
text
@d38 6
a43 1
	Only 3DES and Blowfish can be selected. This difference may manifest
d221 1
a221 1
<small>$OpenBSD: faq.html,v 1.5 2000/05/31 13:49:51 markus Exp $</small>
@


1.5
log
@1023 vs 1024 fixes; angelos@@
@
text
@d188 1
a188 1
<li><strong>"scp: command not found" errors</strong><p>
d198 11
d216 1
a216 1
<small>$OpenBSD: faq.html,v 1.4 2000/05/25 07:47:59 markus Exp $</small>
@


1.4
log
@subsystem vs. sub-protocol, SSH vs. SSH Corp
@
text
@d88 1
a88 1
	but are actually only half as secure.
d94 2
a95 2
	(usually "1023").  However, as previously stated, these keys are half
	as secure, so it is best to just make new ones.
d205 1
a205 1
<small>$OpenBSD: faq.html,v 1.3 2000/05/25 07:12:11 deraadt Exp $</small>
@


1.3
log
@talk about SFTP
@
text
@d26 1
a26 1
<li><strong>OpenSSH does not implement the SFTP sub-protocol.
d30 3
a32 2
	SSH protocol specifications.  It is a proprietary subsystem invented
	by SSH.  It could be reverse engineered, but we have not yet
d205 1
a205 1
<small>$OpenBSD: faq.html,v 1.2 2000/05/08 01:43:12 deraadt Exp $</small>
@


1.2
log
@bad advice
@
text
@d26 11
a36 1
<li>OpenSSH does not support any patented transport algorithms.<p>
d40 3
a42 1
	command refusing to read its config files.
d47 1
d49 2
a50 2
<p>
<li>Old versions of commercial SSH encrypt host keys with IDEA<p>
d52 2
a53 4
	<i>/etc/ssh/ssh_host_key</i><p>

	This problem will manifest as
	<<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd">sshd</a>
d62 5
a66 1
	<pre>ssh-keygen -u -f /etc/ssh/ssh_host_key</pre>
d68 2
a69 3
	This will "upgrade" the key to 3DES.
<p>
<li>Incompatible changes to <i>sshd_config</i> format.<p>
d71 2
a72 1
	ways. There is currently one change which is incompatible with the old.
d83 1
a83 1
<li>Warning messages about key lengths<p>
d97 1
a97 1
<li>Portable OpenSSH: Spurious PAM authentication messages in logfiles<p>
d115 1
a115 1
<li>Portable OpenSSH: Empty passwords not allowed with PAM authentication<p>
d137 1
a137 1
<li>X11 and/or agent forwarding does not work<p>
d142 2
a143 2
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh">ssh</a>
    takes a long time to connect with Linux/glibc 2.1<p>
d152 1
a152 1
<li>Logins from commercial ssh generate the error:
d154 1
a154 1
	<p>
d163 1
a163 1
<li>Portable OpenSSH: "Can't locate module net-pf-10" messages in log under Linux<p>
d174 1
a174 1
<li>Portable OpenSSH: Password authentication doesn't work on Slackware 7.0<p>
d181 1
a181 1
<li>Portable OpenSSH: Configure or sshd complain about lack of RSA support<p>
d187 1
a187 1
<li>"scp: command not found" errors<P>
d204 1
a204 1
<small>$OpenBSD: faq.html,v 1.1 2000/05/08 01:39:04 deraadt Exp $</small>
@


1.1
log
@convert portable-upgrading to a FAQ that is nicely split up
@
text
@d78 2
a79 1
	(usually "1023").
d189 1
a189 1
<small>$OpenBSD: portable-upgrading.html,v 1.1 2000/05/07 07:42:40 djm Exp $</small>
@

