head	1.1;
branch	1.1.1;
access;
symbols
	niallo_20051130:1.1.1.1 niallo:1.1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2005.11.30.19.53.23;	author niallo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.11.30.19.53.23;	author niallo;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@
Reasons for supporting many platforms


For example, the C standards say that it is up to the compiler whether "char" is "signed char" or "unsigned char"

Consider this program:

    #include <stdio.h>
    int
    main()
    {
            char c = -1;
            printf("%d\n", (int)c);
            return 0;
    }
            char c = -1;
            printf("%d\n", (int)c);
            return 0;
    }

On ARM based platforms "char" is usually unsigned and a conversion of
(unsigned char)-1 to (int)-1 yields 255, not -1 as on other platforms


@


1.1.1.1
log
@- slides from eurobsdcon2005
@
text
@@
