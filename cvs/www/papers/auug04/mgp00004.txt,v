head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2004.09.02.02.06.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auug04 presentation
@
text
@
The stack-based buffer overflow


The mechanics of a stack-based buffer overflow





Attacker overflows buffer on stack
Note: Buffer is ALWAYS at the
same place

Overflow overwrites function return
address -- fixed value pointer into
overflow buffer - execution starts

Key point: The pointer points
into the buffer (where the
attack code is placed)

Solution:  a random-sized gap at
top of stack (8-byte aligned)


@
