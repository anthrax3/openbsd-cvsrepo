head	1.1;
access;
symbols;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2013.12.15.10.57.16;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.1
log
@my talk in moscow..
@
text
@
ASLR: mmap / malloc demo


  (lots of details skipped, ie. PIE, shared libraries, etc)




tiny allocations done with
malloc() are randomly allocated
within a "bucket" page

allocations with malloc() over
pagesize are simply allocated
using mmap() 

mmap() gives us "gap pages"
(more on that later..)



mmap()-allocated memory

malloc()-allocated memory
(page size or greater)

malloc()-allocated memory
(objects < page in size)



@
