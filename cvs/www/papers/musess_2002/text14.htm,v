head	1.1;
access;
symbols;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2016.08.14.20.06.03;	author tj;	state Exp;
branches;
next	;
commitid	pGvpvGIuBB4161Z9;


desc
@@


1.1
log
@move the two presentations in www/slides to www/papers where they belong.
@
text
@<html>
<head>
<title>strlcpy()</title>
</head>
<body text=#E6E6E6 bgcolor=#000000 link=#000080 vlink=#800000 alink=#000080>
<center>
<a href="text0.htm">First page</a> <a href="text13.htm">Back</a> <a href="text15.htm">Continue</a> <a href="text24.htm">Last page</a> <a href="index.html">Summary</a> <a href="img14.htm">Graphics</a></center><br>
<h1>Safer: strlcpy() and strlcat()</h1><p>
<ul><li><h2><font color=#FFFFCC>  size_t strlcpy(buf, input, sizeof(buf));</font></h2>
<li><h2><font color=#FFFFCC>  size_t strlcat(buf, suffix, sizeof(buf));</font></h2>
<ul><li><font color=#FFFFCC>Consistent meaning for count parameter</font>
<li><font color=#FFFFCC>Garanteed to null-terminate destination buffer</font>
</ul><li><h2><font color=#FFFFCC>More intuitive API</font></h2>
<ul><li><font color=#FFFFCC>Helps beginners move from strcpy() to strlcpy()</font>
<li><font color=#FFFFCC>More obvious to code readers</font>
</ul><li><h2><font color=#FFFFCC>Not a cure-all</font></h2>
<ul><li><font color=#FFFFCC>Only suitable to handle fixed length buffers</font>
<li><font color=#FFFFCC>May truncate input, leading to other problems</font>
<li><font color=#FFFFCC>Need to understand code being audited</font>
</ul></ul><li><h2><font color=#FFFFCC>Adopted in NetBSD, FreeBSD and Solaris (others?)</font></h2>
</ul></body>
</html>@
