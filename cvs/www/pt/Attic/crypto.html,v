head	1.33;
access;
symbols;
locks; strict;
comment	@# @;


1.33
date	2014.04.01.16.33.22;	author deraadt;	state dead;
branches;
next	1.32;

1.32
date	2014.02.22.10.47.58;	author ajacoutot;	state Exp;
branches;
next	1.31;

1.31
date	2013.03.27.18.37.05;	author ajacoutot;	state Exp;
branches;
next	1.30;

1.30
date	2011.03.15.17.30.25;	author ajacoutot;	state Exp;
branches;
next	1.29;

1.29
date	2009.11.04.18.08.58;	author ajacoutot;	state Exp;
branches;
next	1.28;

1.28
date	2009.10.17.15.58.26;	author ajacoutot;	state Exp;
branches;
next	1.27;

1.27
date	2009.08.27.07.24.17;	author ajacoutot;	state Exp;
branches;
next	1.26;

1.26
date	2009.05.26.21.30.40;	author ajacoutot;	state Exp;
branches;
next	1.25;

1.25
date	2009.05.16.08.59.13;	author ajacoutot;	state Exp;
branches;
next	1.24;

1.24
date	2006.12.29.12.56.48;	author jufi;	state Exp;
branches;
next	1.23;

1.23
date	2006.06.26.18.32.13;	author jufi;	state Exp;
branches;
next	1.22;

1.22
date	2006.05.11.14.20.51;	author jufi;	state Exp;
branches;
next	1.21;

1.21
date	2006.01.20.20.05.21;	author jufi;	state Exp;
branches;
next	1.20;

1.20
date	2005.12.24.10.04.34;	author saad;	state Exp;
branches;
next	1.19;

1.19
date	2005.07.15.04.26.13;	author saad;	state Exp;
branches;
next	1.18;

1.18
date	2005.05.19.18.23.09;	author jufi;	state Exp;
branches;
next	1.17;

1.17
date	2005.05.04.17.52.27;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2005.01.11.18.58.03;	author jufi;	state Exp;
branches;
next	1.15;

1.15
date	2005.01.09.12.02.53;	author jufi;	state Exp;
branches;
next	1.14;

1.14
date	2005.01.06.19.17.21;	author jufi;	state Exp;
branches;
next	1.13;

1.13
date	2004.12.11.17.17.54;	author jufi;	state Exp;
branches;
next	1.12;

1.12
date	2004.03.26.08.43.55;	author jufi;	state Exp;
branches;
next	1.11;

1.11
date	2004.02.29.09.02.27;	author jufi;	state Exp;
branches;
next	1.10;

1.10
date	2003.11.14.22.45.50;	author horacio;	state Exp;
branches;
next	1.9;

1.9
date	2003.10.02.12.07.05;	author horacio;	state Exp;
branches;
next	1.8;

1.8
date	2003.09.10.08.47.03;	author horacio;	state Exp;
branches;
next	1.7;

1.7
date	2003.09.07.20.27.26;	author horacio;	state Exp;
branches;
next	1.6;

1.6
date	2003.07.19.12.25.21;	author jufi;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.22.14.13.37;	author jufi;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.21.11.38.39;	author jufi;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.17.21.17.41;	author jufi;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.17.18.42.05;	author jufi;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.15.06.56.19;	author jufi;	state Exp;
branches;
next	;


desc
@@


1.33
log
@abandon translations; ajacoutot and team are done
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<link rev="made" href="mailto:www@@openbsd.org">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="resource-type" content="document">
<meta name="description" content="OpenBSD cryptography">
<meta name="keywords" content="openbsd,cryptography,openssh,openssl,kerberos">
<meta name="keywords" content="ipsec,isakmp,ike,blowfish,des,rsa,dsa">
<meta name="distribution" content="global">
<meta name="copyright" content="This document copyright 1997-2006 by OpenBSD.">
<title>Criptografia no OpenBSD</title>
</head>

<body bgcolor="#ffffff" text="#000000" link="#23238e">
<a href="index.html"><img alt="[OpenBSD]" height="30" width="141" src="images/smalltitle.gif" border="0"></a>
<p>
<h2><font color="#e00000">Criptografia</font></h2>
<hr>

<img align="left" alt="[OpenBSD]" height="166" width="197" src="../images/blowfish-notext.jpg">
<br>
<br>
<br>
"The mantra of any good security engineer is: "Security is not a
product, but a process." It's more than designing strong cryptography
into a system; it's designing the entire system such that all security
measures, including cryptography, work together."<br>
<br>
-- Bruce Schneier, autor de "Applied Cryptography".
<br clear="all">
<hr>

<strong>Índice</strong><br>
<a href="#why">Por que nós embutimos criptografia?</a>.<br>
<a href="#ssh">OpenSSH</a>.<br>
<a href="#prng">Gerador de números pseudo-aleatórios</a> (PRNG): ARC4, ...<br>
<a href="#hash">Funções de hash criptográficas</a>: MD5, SHA1, ...<br>
<a href="#trans">Transformadores criptográficos</a>: DES, Blowfish, ...<br>
<a href="#hardware">Suporte a hardware criptográfico</a><br>
<a href="#people">Procura-se criptógrafos internacionais</a><br>
<a href="#papers">Leitura adicional</a><br>
<p>
<hr>

<a name="why"></a>
<h3><font color="#e00000">Por que nós embutimos criptografia?</font></h3><p>

Em três palavras: <strong>porque nós podemos</strong>.<p>

O projeto OpenBSD é concentrado no Canadá.<p>

A <a href="../ECL.html">Lista de Controle de Exportações do Canadá</a>
não impõe nenhuma restrição significante quanto à exportação de software
criptográfico, e é ainda mais explícita quanto à livre exportação de
softwares criptográficos. Marc Plumb realizou
<a href="http://www.efc.ca/pages/doc/crypto-export.html">
algumas pesquisas quanto às leis criptográficas</a>.
<p>

Por esse fato, o projeto OpenBSD embutiu criptografia em numerosos
lugares do sistema operacional. Temos a necessidade de que os softwares
criptográficos que utilizamos estejam <a href="../policy.html">
disponíveis livremente e com uma boa licença</a>.
Nós não utilizamos criptografia com patentes indecentes.
Nós também exigimos que tal software seja proveniente de países que
possuam leis de exportação compatíveis, pois não queremos infringir lei
alguma. Os componentes criptográficos que utilizamos atualmente foram
escritos na Argentina, Austrália, Canadá, Alemanha, Grécia, Noruega e
Suécia.
<p>

Quando criamos versões ou "snapshots" do OpenBSD, nós compilamos nossos
arquivos em países livres para nos assegurarmos de que o código fonte
e os binários que disponibilizamos estão livres de qualquer corrupção.
No passado, nossas compilações eram realizadas no Canadá, Suécia e
Alemanha.<p>

O OpenBSD é fornecido com suporte a Kerberos V.
A base de código que utilizamos é a base exportável Heimdal da Suécia.
Nosso código fonte do X11 foi estendido para utilizar o Kerberos.<p>


<img align="right" src="../images/vpnc-test-partner.gif" alt="VPNC TEST PARTNER">
O OpenBSD foi o primeiro sistema operacional a incorporar a pilha IPsec.
Temos incluído o IPsec desde a versão 2.1 do OpenBSD, lançado em 1997.
Nossa pilha IPsec, totalmente integrada ao kernel, com aceleração por
hardware em uma grande quantidade de placas, e nosso próprio daemon
ISAKMP livre. Ele é utilizado como uma das máquinas do teste de
conformidade IPsec, organizado pelo
<a href="http://www.vpnc.org">VPNC</a>.
<br clear="all">
<p>

Hoje a criptografia é um importante meio de se melhorar
a <a href="../security.html">segurança</a> de um sistema operacional.
A criptografia usada no OpenBSD pode ser classificada em vários
aspectos, descritos abaixo:<p>

<a name="ssh"></a>
<h3><font color="#e00000">OpenSSH</font></h3><p>

Depois da versão 2.6, o OpenBSD contém o
<a href="http://www.openssh.com/">OpenSSH</a>, uma
versão do ssh absolutamente livre de patentes.
O <a href="http://www.openssh.com/">OpenSSH</a> interopera com a
versão 1 do protocolo, e possui várias características adicionais:
<ul>
<li>
    todos os componentes de natureza restritiva (ou seja, patentes; veja
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&amp;sektion=8">ssl(8)</a>)
    foram removidos do código fonte; qualquer componente licenciado ou
    patenteado utilizava bibliotecas externas.
<li>
    foi atualizado para suportar o protocolo ssh 1.5.
<li>
    contém a adição do suporte para autenticação Kerberos e passagem
    de tíquete.
<li>
    suporte à autenticação com senha de uso único com
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=skey&amp;sektion=1">skey(1)</a>.
</ul>
<p>

A grosso modo, nós pegamos uma versão livre do ssh e convertemos para o
estilo OpenBSD. Cerca de um ano depois, estendemos o OpenSSH para
suportar o protocolo 2. O resultado foi o suporte aos 3 maiores
protocolos SSH: 1.3, 1.5 e 2.0.

<a name="prng"></a>
<h3><font color="#e00000">Gerador de números pseudo-aleatórios</font></h3><p>

Um gerador de números pseudo-aleatórios (PRNG - "Pseudo Random Number
Generator") disponibiliza aos aplicativos uma sequência de números
aleatórios que possuem certa importância para a segurança do sistema:
<p>

<ul>
<li>Deve ser impossível adivinhar a saída do gerador de números
    aleatórios, mesmo tendo conhecimento de sua saída anterior.
<li>Os números gerados não devem possuir padrões repetitivos, o que
    significa que o PRNG deve ter um ciclo muito longo.
</ul>
<p>

O PRNG é normalmente um algoritmo onde os mesmos valores iniciais irão
produzir a mesma sequência de saída.
Em um sistema operacional multiusuário existem muitas fontes que
permitem alimentar o PRNG com dados aleatórios.
O kernel do OpenBSD utiliza as informações de temporização de
interrupção do mouse, a latência de dados de interrupção da rede,
temporização do pressionamento de teclas e informações de E/S de disco
para preencher a lista de entropia. Números aleatórios estão disponíveis
para as rotinas do kernel e são exportados através de dispositivos para
programas no espaço do usuário. Os números aleatórios são utilizados
nos seguintes lugares:<p>

<ul>
<li>Alocação dinâmica sin_port no bind(2).
<li>PIDs de processos.
<li>IDs de datagramas IP.
<li>IDs de transação RPC (XID).
<li>IDs de transação NFS RPC (XID).
<li>IDs de requisições DNS.
<li>Números de geração de nó-i, veja getfh(2) e fsirand(8).
<li>Perturbação temporal no traceroute(8).
<li>Melhores nomes temporários para mktemp(3) e mkstem(3)
<li>Randomização adicionada ao valor ISS do TCP para proteção contra
    ataques de "spoof".
<li>Preenchimento aleatório nos pacotes IPsec esp_old.
<li>Gerar "salts" para vários algoritmos de senha.
<li>Gerar falsos "challenges" S/Key.
<li>Verificação automática de trocas de chaves no
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8">isakmpd(8)</a>.
</ul>

<p>
<a name="hash"></a>
<h3><font color="#e00000">Funções de hash criptográficas</font></h3><p>

Uma função de hash comprime os dados recebidos em uma string de tamanho
constante. Em uma função de hash criptográfica é impossível encontrar:

<ul>
<li>duas entradas que possuam a mesma saída (imune à colisões),
<li>uma entrada diferente para uma entrada já disponível com a mesma
    saída (resistência secundária de colisões).
</ul>
<p>

No OpenBSD, MD5, SHA1 e RIPEMD-160 são utilizados como funções
de hash criptográficas:<p>
<ul>
<li>No <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=skey&amp;sektion=1">S/Key(1)</a>
    para gerar senhas que podem ser utilizadas somente uma vez.
<li>No <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec&amp;sektion=4">IPsec(4)</a>
    e no
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8">isakmpd(8)</a>
    para autenticar a origem de dados dos pacotes e para garantir
    sua integridade.
<li>Para senhas MD5 no estilo FreeBSD (não-ativado, por padrão), veja
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=login.conf&amp;sektion=5">
    login.conf(5)</a>
<li>Na libssl para assinatura digital de mensagens.
</ul>
<p>

<p>
<a name="trans"></a>
<h3><font color="#e00000">Transformadores criptográficos</font></h3><p>

Os transformadores criptográficos são utilizados para cifrar e decifrar
dados. Eles normalmente são utilizados com chaves de cifragem e de
decifragem. A segurança de um transformador deve se basear somente no
material relacionado às chaves.<p>

O OpenBSD possui mecanismos como DES, 3DES, Blowfish e Cast disponíveis
para o kernel e programas no espaço do usuário, que são utilizados em
diversos locais:<p>
<ul>
<li>Na libc para criar senhas no formato
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=blf_key&amp;sektion=3">Blowfish</a>.
    Veja também o <a href="../papers/bcrypt-paper.ps">documento da USENIX</a>
    sobre este tópico.
<li>No
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec&amp;sektion=4">IPsec(4)</a>
    para fornecer confidencialidade para a camada de rede.
<li>No <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8">isakmpd(8)</a>
    para proteger as transações onde as chaves IPsec são negociadas.
<li>Na libssl para permitir que os aplicativos se comuniquem através do
    protocolo SSL (que é um padrão de facto).
</ul>

<p>
<a name="hardware"></a>
<h3><font color="#e00000">Suporte a hardware criptográfico</font></h3><p>

O OpenBSD, a partir da versão 2.7, começou a suportar alguns hardwares
criptográficos como aceleradores e geradores de números aleatórios.
<ul>
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crypto&amp;sektion=9">
    Desenfileiramento criptográfico do IPsec</a></b><br>
    Nossa pilha IPsec foi modificada para que funções criptográficas
    sejam feitas fora de linha. A maioria das pilhas IPsec precisam
    realizar a criptografia no processamento de cada pacote, resultando
    em um desempenho síncrono. Para utilizar o hardware de forma
    correta e acelerar a operação era preciso separar esses dois
    componentes, assim como fizémos. Por sinal, essa operação resultou
    em um ganho de desempenho até no caso do software.
<p>
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hifn&amp;sektion=4">
    Hifn 7751</a></b><br>
    Placas Hifn 7751 podem ser utilizadas como aceleradores
    criptográficos simétricos, ou seja, o
    <a href="http://www.soekris.com/vpn1201.htm">Soekris VPN1201 ou VPN1211</a>
    (<a href="http://www.soekris.com/how_to_buy.htm">como comprar</a>)
    ou
    <a href="http://www.powercrypt.com">PowerCrypt</a>.
    O desempenho atual usando uma única placa Hifn 7751 em cada ponta
    do túnel é de 64Mbit/sec para 3DES/SHA1/ESP, aproximadamente 600%
    de aumento comparando-se a uma CPU P3/550. Desenvolvimentos à parte
    estão corrigindo alguns problemas, porém o código é considerado
    estável desde 13 de abril de 2000. Nós escrevemos nosso próprio
    driver em vez de usar o driver da
    <a href="http://www.powercrypt.com">PowerCrypt</a> (escrito nos
    EUA), o que permite a integração perfeita com a nossa pilha IPsec.
    A 7751 é considerada lenta para os padrões da indústria de hoje, e
    muitos fornecedores já possuem chips mais rápidos (até a Hifn possui
    hoje um chip mais veloz, porém mais caro). O desempenho máximo
    utilizando-se 3DES SHA1 ESP é de aproximadamente 64Mbit/seg.
    <p>
    Após o lançamento da versão 2.9, foi adicionado o suporte ao chip
    Hifn 7951, uma versão simplificada do 7751 que adiciona um
    acelerador de chaves públicas (não-suportado) e um gerador de
    números aleatórios (suportado). As placas foram doadas pela
    <a href="http://www.soekris.com/">Soekris Engineering</a>.
    <p>
    Após o lançamento da versão 3.0, foi adicionado o suporte ao chip
    Hifh 7811, uma versão mais rápida do 7751 (em torno de 130Mbit/s)
    com um gerador de números aleatórios. A placa foi doada pela
    <a href="http://www.gtgi.com/">GTGI</a>.
    <p>
    Após o lançamento da versão 3.2, foi adicionado suporte ao algoritmo
    de compressão LZS, utilizado pelo
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipcomp&amp;sektion=4">ipcomp(4)</a>.
    <p>
    Após o lançamento da versão 3.4, foi adicionado o suporte aos chips
    7955 e 7956. Com as mesmas funcionalidades do chip anterior 7951,
    estes adicionam a funcionalidade AES.
    <p>
    A Hifn foi no início uma empresa difícil de se lidar (eles tentaram
    nos convencer a mudar de ideia sobre o nosso algoritmo de
    destravamento criptográfico de engenharia reversa não-americano),
    porém recentemente eles têm sido muito prestativos, disponibilizando
    placas e suporte.
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lofn&amp;sektion=4">
    Hifn 6500</a></b><br>
    Este dispositivo é uma unidade de criptografia assimétrica. Ele
    possui suporte aos algoritmos RSA, DSA e DH, além de outras funções
    relacionadas à grandes números. Ele também contém um gerador de
    números aleatórios de alto desempenho.
    Possuímos um desses, documentação completa e código de exemplo.
    A partir da versão 3.1 do OpenBSD, tanto o gerador de números quanto
    a unidade de grandes números estão funcionando no sistema.
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nofn&amp;sektion=4">
    Hifn 7814/7851/7854</a></b><br>
    Esse dispositivo é uma unidade de criptografia assimétrica e um
    processador de pacotes. Ele possui suporte aos algoritmos RSA,
    DSA e DH, além de outras funções relacionadas à grandes números, e
    também possui um gerador de números aleatórios.
    Atualmente, somente o mecanismo de grandes números e o gerador de
    números aleatórios são suportados (sem transformadores de
    pacotes).
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ubsec&amp;sektion=4">
    Broadcom BCM5801/BCM5802/BCM5805/BCM5820/BCM5821/BCM5822/5823/5825/5860/5861/5862
    (ou chip beta Bluesteelnet 5501/5601)</a></b><br>
    Logo após o lançamento do OpenBSD 2.7, nós conseguimos adicionar
    suporte preliminar a essas placas disponibilizadas a nós diretamente
    pelo distribuidor, especificamente com o chip de teste 5501.
    Esses dispositivos fornecem o melhor desempenho em criptografia
    assimétrica que nós já vimos.
    <p>
    A Bluesteelnet foi adquirida pela Broadcom e começou a fazer outras
    partes.
    O seu novo chip BCM5805 é similar ao Bluesteelnet, exceto pelo
    fato da placa também suportar um mecanismo assimétrico para DSA, RSA
    e outros algoritmos. Com um desempenho quase quatro vezes mais
    rápido que as Hifn, esperamos que esse chip se torne mais comum em
    breve.
    <p>
    O pessoal da Broadcom/Bluesteelnet foram ótimas pessoas de se
    lidar. Eles nos forneceram a documentação completa, código de
    exemplo para seus chips e um número suficiente de placas para
    podermos testar.
    <p>
    Após a versão 2.8, este driver foi modificado para gerar números
    aleatórios no BCM5805 e versões similares, e alimentar a fila de
    entropia do kernel com esses dados.
    <p>
    Após a versão 2.9, foi adicionado suporte ao chip BCM5820, que é
    basicamente uma versão mais rápida (64 bits, velocidade de "clock"
    maior) do modelo BCM5805. Suporte não-testado ao modelo BCM5821
    também foi adicionado após a versão 3.0.
    <p>
    Na versão 3.1, o mecanismo de grandes números foi suportado, e as
    operações de RSA/DH/DSA puderam ser aceleradas.
    <p>
    O suporte aos chips BCM5801, BCM5802, BCM5821 e BCM5822 foi
    adicionado na versão 3.2 (o suporte não-testado ao BCM5821 na versão
    3.1 foi quebrado por causa de alguns requerimentos de controle de
    interrupção não-documentados).
    <p>
    Suporte parcial ao BCM5823 foi adicionado na versão 3.4.
    <p>
    O suporte ao BCM5825, BCM5860, BCM5861 e BCM5862, incluindo o
    suporte a AES no BCM5823 ou mais novo, foi adicionado depois da
    versão 4.5.
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ises&amp;sektion=4">
    Securealink PCC-ISES</a></b><br>
    O <a href="http://www.safenet-inc.com/technology/chips/safexcel_ises.asp">
    PCC-ISES</a> é um novo chipset da Holanda. Nós recebemos hardware de
    exemplo e documentação, e o driver já está sendo desenvolvido. No
    momento, o driver já é capaz de alimentar a fila de entropia do
    kernel com números aleatórios.
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=safe&amp;sektion=4">
    SafeNet SafeXcel 1141/1741</a></b><br>
    Depois do lançamento da versão 3.4, foi adicionado suporte
    para esses dois chips (encontrados em várias placas criptográficas
    <a href="http://www.safenet-inc.com/products/accCards/">SafeNet</a>).
    Suportam DES, Triple-DES, AES, MD5 e criptografia simétrica SHA-1,
    RNG, operações de chave pública e processamento de pacotes IPsec
    completo.
    <p>

<li><b>SafeNet SafeXcel 1840</b><br>
    Nós recebemos documentação e hardware para o chip de criptografia
    <a href="http://www.safenet-inc.com/products/chips/safeXcel1840.asp">SafeNet 1840</a>.
    O trabalho para suportar pelo menos a criptografia simétrica desses
    dispositivos já foi iniciado.
    <p>

<li><b>SafeNet SafeXcel 2141</b><br>
    Nós recebemos documentação e hardware para o chip de criptografia
    <a href="http://www.safenet-inc.com/products/chips/safeXcel2141.asp">SafeNet 2141</a>.
    O trabalho para suportar pelo menos a criptografia assimétrica
    desses dispositivos já foi iniciado.
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=txp&amp;sektion=4">
    3com 3cr990</a></b><br>
    A 3Com nos forneceu um driver para suportar o componente "ethernet"
    desse chipset, e baseado nisso nós escrevemos nosso próprio driver.
    Esse driver foi agora integrado, uma vez que conseguimos uma licença
    livre para o microcódigo. Pelo fato da pouca documentação e falta de
    cooperação (parcialmente por causa das reviravoltas da 3Com), as
    funções de IPsec do chip não são suportadas... por consequência,
    isso se tornou um exercício inútil.
    <p>

<li><b>IPsec Intel</b><br>
    Assim como a divisão de componentes de rede da Intel sempre faz,
    a documentação necessária nos foi recusada. Nós conversamos com
    cinco pessoas da Intel tecnicamente envolvidas com o desenvolvimento
    destes produtos.
    Todos eles gostariam que nós tivéssemos acesso à documentação, e nos
    apoiaram pelo que nós tínhamos feito. Porém suas mãos estavam atadas
    a uma administração que não percebia o benefício trazido a eles
    próprios ao se disponibilizar a documentação. Esqueça a Intel.
    (Se você quiser comprar hardware ethernet gigabit, nós recomendamos
    qualquer outra coisa... pela mesma razão: a maioria dos drivers da
    Intel que temos suporte foram escritos sem documentação).
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pchb&amp;sektion=4">
    Intel 82802AB/82802AC Firmware Hub RNG</a></b><br>
    O chip 82802 FWH (encontrado nas placas-mãe i810, i820, i840,
    i850 e i860) contém um gerador de números aleatórios (RNG).
    IPsec de alto desempenho requer uma entropia de números mais
    aleatória. A partir de 10 de Abril de 2000, nós passamos a suportar
    o RNG. Iremos adicionar suporte a outros RNGs encontrados em outros
    chipsets.
    <p>

<li><b>VIA C3 RNG</b><br>
    A nova CPU VIA C3 contém um gerador de números aleatórios. A partir
    da versão <a href="../33.html">3.3</a>, esse item é utilizado pelo
    kernel para preencher a lista de entropia.
    <p>

<li><b>Instruções AES do VIA C3</b><br>
    CPUs VIA C3 com um núcleo Nehemiah step 8 ou posterior, contém uma
    implementação AES acessível através de instruções simples.
    Na versão <a href="../34.html">3.4</a>,
    o kernel suportava isso para utilização em um contexto IPsec e
    exportação através de <tt>/dev/crypto</tt>.
    Na versão <a href="../35.html">3.5</a>, o desempenho foi
    significantemente ampliado e o OpenSSL agora utiliza a nova
    instrução diretamente, quando disponível, sem a necessidade de
    entrada no kernel, resultando em um grande aumento de velocidade
    para aplicativos que utilizam OpenSSL para efetuar criptografia AES
    (AES-128 medido a 780Mbyte/seg).
<p>

<li><b>OpenSSL</b><br>
    Há anos, tínhamos um grande esquema para suportar placas de
    criptografia que podiam fazer RSA/DH/DSA automaticamente através
    de chamadas do OpenSSL. Com o lançamento do OpenBSD 3.2, este
    suporte passou a funcionar e qualquer placa que é suportada com tal
    funcionalidade será automaticamente utilizada por softwares de
    criptografia, incluindo o OpenSSH e o httpd em modo SSL. Nenhuma
    alteração nos aplicativos é necessária.
</ul>

<p>
<b>Caso queira ajudar a escrever drivers,
<a href="#people">venha e nos ajude</a>.</b>

<p>
<a name="people"></a>
<h3><font color="#e00000">Procura-se criptógrafos internacionais</font></h3><p>

Nosso projeto precisa de pessoas para trabalhar nesses sistemas.
Se algum criptógrafo não-Americano que preencha os pré-requisitos
estabelecidos anteriormente está interessado em ajudar com a
criptografia integrada do OpenBSD, por favor entre em contato conosco.<p>

<p>
<a name="papers"></a>
<h3><font color="#e00000">Leitura adicional</font></h3><p>

Alguns documentos sobre as alterações efetuadas no OpenBSD foram
escritos pelos membros da equipe do OpenBSD. As versões postscript
destes documentos estão disponíveis abaixo.<p>

<ul>
<li>A Future-Adaptable Password Scheme.<br>
    <a href="../events.html#usenix99">Usenix 1999</a>,
    por <a href="mailto:provos@@openbsd.org">Niels Provos</a>,
    <a href="mailto:dm@@openbsd.org">David Mazieres</a>.<br>
    <a href="../papers/bcrypt-paper.ps">paper</a> e
    <a href="../papers/bcrypt-slides.ps">slides</a>.
<p>
<li>Cryptography in OpenBSD: An Overview.<br>
    <a href="../events.html#usenix99">Usenix 1999</a>,
    por <a href="mailto:deraadt@@openbsd.org">Theo de Raadt</a>,
    <a href="mailto:niklas@@openbsd.org">Niklas Hallqvist</a>,
    <a href="mailto:art@@openbsd.org">Artur Grabowski</a>,
    <a href="mailto:angelos@@openbsd.org">Angelos D. Keromytis</a>,
    <a href="mailto:provos@@openbsd.org">Niels Provos</a>.<br>
    <a href="../papers/crypt-paper.ps">paper</a> e
    <a href="../papers/crypt-slides.ps">slides</a>.
<p>
<li>Implementing Internet Key Exchange (IKE).<br>
    <a href="../events.html#usenix2000">Usenix 2000</a>,
    por <a href="mailto:niklas@@openbsd.org">Niklas Hallqvist</a> e
    <a href="mailto:angelos@@openbsd.org">Angelos D. Keromytis</a>.<br>
    <a href="../papers/ikepaper.ps">paper</a> e
    <a href="../papers/ikeslides.ps">slides</a>.
<p>
<li>Encrypting Virtual Memory.<br>
    <a href="../events.html#sec2000">Usenix Security 2000</a>,
    <a href="mailto:provos@@openbsd.org">Niels Provos</a>.<br>
    <a href="../papers/swapencrypt.ps">paper</a> e
    <a href="../papers/swapencrypt-slides.ps">slides</a>.
<p>
<li>The Design of the OpenBSD Cryptographic Framework.<br>
    <a href="../events.html#usenix2003">Usenix 2003</a>, por
    <a href="mailto:angelos@@openbsd.org">Angelos D. Keromytis</a>,
    <a href="mailto:jason@@openbsd.org">Jason L. Wright</a> e
    <a href="mailto:deraadt@@openbsd.org">Theo de Raadt</a>.<br>
    <a href="../papers/ocf.pdf">paper</a>.
<p>
<li>Cryptography As an Operating System Service: A Case Study.<br>
    <a href="http://www.acm.org/tocs/">ACM Transactions on Computer Systems</a>,
    Fevereiro de 2006, por
    <a href="mailto:angelos@@openbsd.org">Angelos D. Keromytis</a>,
    <a href="mailto:jason@@openbsd.org">Jason L. Wright</a> e
    <a href="mailto:deraadt@@openbsd.org">Theo de Raadt</a>.<br>
    <a href="../papers/crypt-service.pdf">paper</a>.
</ul>

<p>
<hr>
<a href="index.html"><img height="24" width="24" src="../back.gif" border="0" alt="OpenBSD"></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: crypto.html,v 1.138 ]<br>
$Translation: crypto.html,v 1.33 2014/02/19 00:18:47 renato Exp $<br>
-->
$OpenBSD: crypto.html,v 1.32 2014/02/22 10:47:58 ajacoutot Exp $
</small>
</body>
</html>
@


1.32
log
@Sync with Steelix CVS
@
text
@d542 1
a542 1
$OpenBSD$
@


1.31
log
@Sync with Steelix CVS
@
text
@d16 5
a31 1
<h2><font color="#e00000">Criptografia</font></h2>
d539 2
a540 2
Originally [OpenBSD: crypto.html,v 1.137 ]<br>
$Translation: crypto.html,v 1.32 2013/03/26 16:05:34 renato Exp $<br>
@


1.30
log
@Sync with Steelix CVS
@
text
@a225 2
<li>No AFS para proteger as mensagens que passam pela rede, fornecendo
    confidencialidade em acessos à sistemas de arquivos remotos.
d535 2
a536 2
Originally [OpenBSD: crypto.html,v 1.136 ]<br>
$Translation: crypto.html,v 1.31 2011/03/14 12:33:27 renato Exp $<br>
@


1.29
log
@Sync with Steelix CVS
@
text
@d198 2
a199 2
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=passwd.conf&amp;sektion=5">
    passwd.conf(5)</a>
d537 2
a538 2
Originally [OpenBSD: crypto.html,v 1.135 ]<br>
$Translation: crypto.html,v 1.30 2009/10/31 09:50:03 alan Exp $<br>
@


1.28
log
@Sync with Steelix CVS
@
text
@d113 2
a114 2
    contém a adição do suporte para autenticação Kerberos e "ticket
    passing".
d538 1
a538 1
$Translation: crypto.html,v 1.29 2009/10/13 19:22:39 alan Exp $<br>
@


1.27
log
@Sync with Steelix CVS
@
text
@d116 1
a116 1
    suporta a autenticação "one-time password" com
d161 1
a161 1
<li>Números de geração de inode, veja getfh(2) e fsirand(8).
d538 1
a538 1
$Translation: crypto.html,v 1.28 2009/08/26 13:02:35 alan Exp $<br>
@


1.26
log
@Sync with Steelix CVS
@
text
@d69 1
a69 1
Quando criamos versões ou snapshots do OpenBSD, nós compilamos nossos
d130 1
a130 1
Generator") disponibiliza às aplicações uma sequência de números
d144 2
a145 2
Em um sistema operacional multi-usuário existem muitas fontes que
permitirão alimentar o PRNG com dados aleatórios.
d228 1
a228 1
<li>Na libssl para permitir que as aplicações se comuniquem através do
d261 1
a261 1
    estável desde 13 de Abril de 2000. Nós escrevemos nosso próprio
d264 2
a265 2
    EUA), e que permite a integração perfeita com a nossa pilha IPsec.
    A 7751 é considerada lenta para os padrões da indústria de hoje e
d302 1
a302 1
    Possuímos um desses, documentaçãoo completa e código de exemplo.
d311 1
a311 1
    DSA e DH, além de outras funções relacionadas à grandes números e
d345 1
a345 1
    basicamente uma versão mais rápida (64bit, velocidade de clock
d448 1
a448 1
    para aplicações que utilizam OpenSSL para efetuar criptografia AES
d455 2
a456 2
    de chamadas OpenSSL. Com o lançamento do OpenBSD 3.2, este suporte
    passou a funcionar e qualquer placa que é suportada com tal
d459 1
a459 1
    alteração nas aplicações é necessária.
d538 1
a538 1
$Translation: crypto.html,v 1.27 2009/05/22 06:53:27 alan Exp $<br>
@


1.25
log
@Sync with Steelix CVS
@
text
@d20 4
a23 5
"O mantra de qualquer bom engenheiro de segurança é: "Segurança não é um
produto, mas um processo."
É mais do que desenvolver uma criptografia forte em um sistema; é
desenvolver um sistema inteiro em que todos os itens de
segurança, incluindo a criptografia, trabalhem juntos."<br>
d25 1
a25 1
-- Bruce Schneier, autor de "Criptografia Aplicada".
d33 5
a37 5
<a href="#prng">Gerador de Números Pseudo-Aleatórios</a> (PRNG): ARC4, ...<br>
<a href="#hash">Funções Criptográficas de Hash</a>: MD5, SHA1, ...<br>
<a href="#trans">Transformadores Criptográficos</a>: DES, Blowfish, ...<br>
<a href="#hardware">Suporte a Hardware Criptográfico</a><br>
<a href="#people">Procura-se Criptógrafos Internacionais</a><br>
d43 1
a43 1
<h3><font color="#e00000">Por que nós embutimos criptografia</font></h3><p>
d45 1
a45 1
Em três palavras:  <strong>porque nós podemos</strong>.<p>
d49 3
a51 3
A <a href="../ECL.html">Lista de Controle de Exportação do Canadá</a>
não impõe nenhuma restrição significante quanto a exportação de software
criptográfico, e é ainda mais explícita quanto a livre exportação de
d70 3
a72 3
arquivos em países livres para nos assegurarmos de que os códigos fonte
e binários que disponibilizamos estão livres de qualquer corrupção.
No passado nossas compilações eram realizadas no Canadá, Suécia e
d75 2
a76 2
O OpenBSD é lançado com suporte a Kerberos V.
A base de códigos que utilizamos é a base exportável Heimdal da Suécia.
d82 1
a82 1
Temos incluído o IPsec desde a versão 2.1 do OpenBSD de 1997.
d84 3
a86 3
hardware suportando uma grande quantidade de placas, e nosso próprio
daemon ISAKMP. Ele é utilizado como uma das máquinas do teste de
conformidade IPsec organizado pelo
d92 3
a94 3
a <a href="../security.html">segurança</a> de um sistema
operacional. A criptografia usada no OpenBSD pode ser classificada em
vários aspectos descritos abaixo:<p>
d99 2
a100 2
Com o lançamento da versão 2.6, o OpenBSD incorporou em sua árvore de
códigos fonte o <a href="http://www.openssh.com/">OpenSSH</a>, uma
d103 1
a103 1
versão 1 do protocolo, e sofreu várias modificações e melhorias:
d106 4
a109 4
todos os componentes de natureza restritiva (ou seja, patentes; veja
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&amp;sektion=8">ssl(8)</a>)
foram removidos do código fonte; qualquer componente licenciado ou
patenteado utilizava bibliotecas externas.
d111 1
a111 1
foi atualizado para suportar o protocolo ssh 1.5.
d113 2
a114 2
contém a adição de suporte para autenticação Kerberos e sua "passagem de
ticket".
d116 2
a117 2
suportada a autenticação one-time com
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=skey&amp;sektion=1">skey(1)</a>.
d122 3
a124 3
estilo OpenBSD. Após um ano, estendemos o OpenSSH para suportar o
protocolo 2. O resultado foi o suporte aos 3 maiores protocolos SSH:
1.3, 1.5 e 2.0.
d127 1
a127 1
<h3><font color="#e00000">Gerador de Números Pseudo-Aleatórios</font></h3><p>
d129 3
a131 3
O Gerador de Números Pseudo-Aleatórios (PRNG) disponibiliza às
aplicações uma sequência de números aleatórios que possuem certa
importância para a segurança do sistema:
d136 1
a136 1
	aleatórios mesmo tendo conhecimento de sua saída anterior.
d138 1
a138 1
	significa que o PRNG deve ter um ciclo muito longo.
d144 2
a145 2
Em um sistema operacional multi-usuário existem muitas fontes
que permitirão alimentar o PRNG com dados aleatórios.
d148 5
a152 5
temporização do pressionamento de teclas e I/O de disco para preencher a
lista de entropia. Números aleatórios estão disponíveis para as rotinas
do kernel e são exportados através de dispositivos para programas no
espaço do usuário. Os números aleatórios são utilizados nos seguintes
lugares:<p>
d161 1
a161 1
<li>Números de geração de Inode, veja getfh(2) e fsirand(8).
d164 2
a165 2
<li>Randomização adicionada ao valor do TCP ISS para proteção contra
	ataques de "spoof".
d175 1
a175 1
<h3><font color="#e00000">Funções Criptográficas de Hash</font></h3><p>
d177 2
a178 3
Uma função de hash comprime os dados recebidos para uma string de
tamanho constante. Em uma função criptográfica de hash é impossível
encontrar:
d181 1
a181 1
<li>duas entradas que possuam a mesma saída (imune a colisões),
d183 1
a183 1
	saída (resistência secundária de colisões).
d188 1
a188 1
criptográficas de hash:<p>
d191 1
a191 1
    para gerar senhas one-time.
d197 1
a197 1
<li>Para senhas MD5 estilo FreeBSD (não ativadas por padrão), veja o
d206 1
a206 1
<h3><font color="#e00000">Transformadores Criptográficos</font></h3><p>
d208 2
a209 2
Os transformadores criptográficos são usados para cifrar e decifrar
dados. Eles são normalmente usados com chaves de cifragem e de
d220 1
a220 1
    neste tópico.
d223 1
a223 1
    para disponibilizar confidencialidade para a camada de rede.
d226 2
a227 2
<li>No AFS para proteger as mensagens que passam pela rede,
    fornecendo confidencialidade para sistemas de arquivos remotos.
d234 1
a234 1
<h3><font color="#e00000">Suporte a Hardware Criptográfico</font></h3><p>
d237 1
a237 1
aceleradores criptográficos e geradores de números aleatórios.
d246 1
a246 1
    componentes, assim como fizemos. Por sinal, essa operação resultou
d259 1
a259 1
    de aumento comparando-se a uma CPU P3/550. Desenvolvimentos a parte
d262 1
a262 1
    driver ao invés de usar o driver da
d267 1
a267 1
    hoje um chip mais veloz porém mais caro). O desempenho máximo
d270 4
a273 4
    Após o lançamento do 2.9, foi adicionado o suporte ao chip Hifn
    7951, uma versão simplificada do 7751 que adiciona um acelerador de
    chaves públicas (não suportado) e um gerador de números aleatórios
    (suportado). As placas foram doadas pela
d276 3
a278 3
    Após o lançamento do 3.0, foi adicionado o suporte ao chip Hifh
    7811, uma versão mais rápida do 7751 (em torno de 130Mbit/s) com um
    gerador de números aleatórios. A placa foi doada pela
d281 2
a282 2
    Após o lançamento do 3.2, foi adicionado suporte ao algoritmo de
    compressão LZS, utilizado pelo
d285 3
a287 3
    Após o lançamento do 3.4. foi adicionado o suporte aos chips 7955 e
    7956. Com as mesmas funcionalidades do chip anterior 7951, estes
    adicionam a funcionalidade AES.
d290 3
a292 3
    nos convencer a mudar de idéia sobre o nosso algoritmo de
    destravamento criptográfico de engenharia reversa não-EUA), porém
    recentemente eles têm sido muito prestativos, disponibilizando
d300 1
a300 1
    relacionadas a grandes números. Ele também contém um gerador de
d302 1
a302 1
    Possuímos um desses, documentaçãoo completa e códigos de exemplo.
d311 1
a311 1
    DSA e DH, além de outras funções relacionadas a grandes números e
d314 2
a315 1
    números aleatórios são suportados.
d327 2
a328 1
    A Bluesteelnet foi adquirida pela Broadcom.
d336 1
a336 1
    lidar. Eles nos forneceram a documentação completa, códigos de
d340 1
a340 1
    Na versão 2.8, este driver era modificado para gerar números
d342 1
a342 1
    entropia do kernel com estes dados.
d344 1
a344 1
    Na versão 2.9, foi adicionado suporte ao chip BCM5820, que é
d346 2
a347 2
    maior) do modelo BCM5805. Suporte ao modelo BCM5821 também foi
    adicionado na versão 3.0.
d353 3
a355 3
    adicionado na versão 3.2 (o suporte não testado ao BCM5821 no 3.1,
    foi quebrado por causa de alguns requerimentos de controle de
    interrupção não documentados).
d357 1
a357 1
    Suporte parcial ao BCM5823 foi adicionado ao 3.4.
d400 1
a400 1
    desse chipset e baseado nisso nós escrevemos nosso próprio driver.
d402 1
a402 1
    livre para o "microcode". Pelo fato da pouca documentação e falta de
d413 1
a413 1
    Todos eles gostariam que nós tivéssemos acesso a documentação, e nos
d425 1
a425 1
    i850, e i860) contém um gerador de números aleatórios (RNG).
d434 1
a434 1
    da versão <a href="../33.html">3.3</a> esse item é utilizado pelo
d439 3
a441 3
    CPUs VIA C3 com um núcleo Nehemiah de 8 níveis ou um núcleo Nehemiah
    posterior, contém uma implementação AES acessível via instruções
    simples. Com o <a href="../34.html">3.4</a>,
d443 2
a444 2
    exportação via <tt>/dev/crypto</tt>.
    Com o <a href="../35.html">3.5</a>, o desempenho foi
d446 3
a448 3
    instrução diretamente quando disponível sem a necessidade de entrada
    no kernel, resultando em um grande aumento de velocidade para
    aplicações que utilizam OpenSSL para efetuar criptografia AES
d468 1
a468 1
<h3><font color="#e00000">Procura-se Criptógrafos Internacionais</font></h3><p>
d477 1
a477 1
<h3><font color="#e00000">Leitura Adicional</font></h3><p>
d480 2
a481 2
escritos pelos membros do time OpenBSD. As versões postscript destes
documentos estão disponíveis abaixo.<p>
d517 1
a517 1
    <a href="mailto:jason@@openbsd.org">Jason L. Wright</a>, e
d538 1
a538 1
$Translation: crypto.html,v 1.26 2009/05/12 00:31:16 alan Exp $<br>
@


1.24
log
@sync with steelix translation CVS
@
text
@d20 5
a24 5
"O mantra de qualquer bom engenheiro de seguran&ccedil;a &eacute;: 
"Seguran&ccedil;a n&atilde;o &eacute; um produto, mas um processo." 
&Eacute; mais do que desenvolver uma criptografia forte em um sistema; 
&eacute; desenvolver um sistema inteiro em que todos os itens de 
seguran&ccedil;a, incluindo a criptografia, trabalhem juntos."<br>
d31 8
a38 8
<strong>&Iacute;ndice</strong><br>
<a href="#why">Por que n&oacute;s embutimos criptografia?</a>.<br> 
<a href="#ssh">OpenSSH</a>.<br> 
<a href="#prng">Pseudo Gerador de N&uacute;meros Aleat&oacute;rios</a> (PRNG): ARC4, ...<br>
<a href="#hash">Fun&ccedil;&otilde;es Criptogr&aacute;ficas de Hash</a>: MD5, SHA1, ...<br>
<a href="#trans">Transformadores Criptogr&aacute;ficos</a>: DES, Blowfish, ...<br>
<a href="#hardware">Suporte a Hardware Criptogr&aacute;fico</a><br>
<a href="#people">Cript&oacute;grafos Internacionais requeridos</a><br>
d44 1
a44 1
<h3><font color="#e00000">Por que n&oacute;s embutimos criptografia</font></h3><p>
d46 1
a46 1
Em tr&ecirc;s palavras:  <strong>porque n&oacute;s podemos</strong>.<p>
d48 1
a48 1
O projeto OpenBSD &eacute; concentrado no Canad&aacute;.<p>
d50 4
a53 6
A <a href="../ECL.html">Lista de Controle de Exporta&ccedil;&atilde;o
do Canad&aacute;</a> n&atilde;o imp&otilde;e nenhuma 
restri&ccedil;&atilde;o significante quanto a exporta&ccedil;&atilde;o 
de software criptogr&aacute;fico, e &eacute; ainda mais 
expl&iacute;cita quanto a livre exporta&ccedil;&atilde;o de softwares 
criptogr&aacute;ficos. Marc Plumb realizou
d55 1
a55 1
algumas pesquisas quanto &agrave;s leis criptogr&aacute;ficas</a>.
d58 22
a79 24
Por esse fato, o projeto OpenBSD embutiu criptografia em
numerosos lugares do sistema operacional. Temos a necessidade de que
os softwares criptogr&aacute;ficos que utilizamos sejam
<a href="../policy.html">dispon&iacute;veis livremente e com uma boa
licen&ccedil;a</a>. N&oacute;s n&atilde;o utilizamos criptografia com 
patentes indecentes. N&oacute;s tamb&eacute;m exigimos que tal 
software seja proveniente de pa&iacute;ses que possuam leis de 
exporta&ccedil;&atilde;o compat&iacute;veis pois n&atilde;o queremos 
infringir lei alguma. Os componentes criptogr&aacute;ficos que 
utilizamos atualmente foram escritos na Argentina, Austr&aacute;lia, 
Canad&aacute;, Alemanha, Gr&eacute;cia, Noruega e Su&eacute;cia.
<p>

Quando criamos vers&otilde;es ou snapshots do OpenBSD, n&oacute;s 
compilamos nossos arquivos em pa&iacute;ses livres para nos 
assegurarmos de que os c&oacute;digos fonte e bin&aacute;rios que 
disponibilizamos est&atilde;o livres de qualquer 
corrup&ccedil;&atilde;o. No passado nossas compila&ccedil;&otilde;es 
eram realizadas no Canad&aacute;, Su&eacute;cia e Alemanha.<p>

O OpenBSD &eacute; lan&ccedil;ado com suporte a Kerberos V. 
A base de c&oacute;digos que utilizamos &eacute; base export&aacute;vel 
Heimdal da Su&eacute;cia. Nosso c&oacute;digo fonte do X11 foi 
estendido para utilizar o Kerberos.<p>
d83 5
a87 5
Temos inclu&iacute;do o IPsec desde a vers&atilde;o do OpenBSD 2.1 de 1997.
Nossa pilha IPsec, totalmente integrada ao kernel, com 
acelera&ccedil;&atilde;o por hardware suportando uma grande quantidade 
de placas, e nosso pr&oacute;prio daemon ISAKMP, &eacute; utilizada em 
uma das m&aacute;quinas padronizadoras do projeto 
d92 4
a95 4
Hoje a criptografia &eacute; um importante meio de se melhorar
a <a href="../security.html">seguran&ccedil;a</a> de um sistema 
operacional. A criptografia usada no OpenBSD pode ser classificada em 
v&aacute;rios aspectos descritos baixo:<p>
d100 5
a104 8
Com o lan&ccedil;amento da vers&atilde;o 2.6, o OpenBSD incorporou 
em sua &aacute;rvore de c&oacute;digos fonte o
<a href="http://www.openssh.com/">OpenSSH</a>, uma vers&atilde;o do ssh 
absolutamente livre de patentes. O 
<a href="http://www.openssh.com/">OpenSSH</a>, utilizando a 
vers&atilde;o 1 do protocolo, sofreu v&aacute;rias 
modifica&ccedil;&otilde;es e melhorias:

d107 1
a107 1
todos os componentes de natureza restritiva (ex.: patentes, veja	
d109 2
a110 2
foram removidos do c&oacute;digo fonte; qualquer componente 
licenciado ou patenteado utiliza bibliotecas externas.
d114 2
a115 2
cont&eacute;m suporte adicionado a autentica&ccedil;&atilde;o 
e passagem de ticket Kerberos.
d117 1
a117 1
suportada autentica&ccedil;&atilde;o one-time com 
d122 4
a125 4
A grosso modo, n&oacute;s pegamos uma vers&atilde;o livre do ssh 
e convertemos para o estilo OpenBSD. Ap&oacute;s um ano, estendemos 
o OpenSSH para suportar o protocolo 2. O resultado foi o suporte aos 
3 maiores protocolos SSH: 1.3, 1.5 e 2.0.
d128 1
a128 1
<h3><font color="#e00000">Gerador de N&uacute;meros Pseudo-Aleat&oacute;rios</font></h3><p>
d130 4
a133 4
O Gerador de N&uacute;meros Pseudo-Aleat&oacute;rios (PRNG) 
disponibiliza &agrave;s aplica&ccedil;&otilde;es que possuem certa 
import&acirc;ncia para a seguran&ccedil;a do sistema uma 
seq&uuml;&ecirc;ncia de n&uacute;meros aleat&oacute;rios:<p>
d136 4
a139 6
<li>Deve ser imposs&iacute;vel adivinhar a sa&iacute;da do 
	gerador de n&uacute;meros aleat&oacute;rios mesmo tendo 
	conhecimento de sua sa&iacute;da anterior.
<li>Os n&uacute;meros gerados n&atilde;o devem possuir padr&otilde;es 
	repetitivos, o que significa que o PRNG deve ter um ciclo muito 
	longo.
d143 11
a153 13
O PRNG &eacute; normalmente um algoritmo onde os mesmos valores iniciais
ir&atilde;o produzir a mesma seq&uuml;&ecirc;ncia de sa&iacute;da. 
Em um sistema operacional multi-usu&aacute;rio existem muitas fontes 
que permitir&atilde;o alimentar o PRNG com dados aleat&oacute;rios. 
O kernel do OpenBSD utiliza as informa&ccedil;&otilde;es de 
temporiza&ccedil;&atilde;o de interrup&ccedil;&atilde;o do mouse, 
a lat&ecirc;ncia de dados de interrup&ccedil;&atilde;o da rede, 
temporiza&ccedil;&atilde;o do pressionamento de teclas e I/O de disco 
para preencher a lista de entropia. N&uacute;meros aleat&oacute;rios
est&atilde;o dispon&iacute;veis para as rotinas do kernel e s&atilde;o 
exportados atrav&eacute;s de dispositivos para programas no ambiente 
de usu&aacute;rio. Os n&uacute;meros aleat&oacute;rios s&atilde;o 
utilizados nos seguintes lugares:<p>
d156 1
a156 1
<li>Aloca&ccedil;&atilde;o din&acirc;mica sin_port no bind(2).
d159 13
a171 16
<li>IDs de transa&ccedil;&atilde;o RPC (XID).
<li>IDs de transa&ccedil;&atilde;o NFS RPC (XID).
<li>IDs de requisi&ccedil;&otilde;es DNS.
<li>N&uacute;meros de gera&ccedil;&atilde;o de Inode, 
	veja getfh(2) e fsirand(8).
<li>Perturba&ccedil;&atilde;o temporal no traceroute(8).
<li>Melhores nomes tempor&aacute;rios para mktemp(3) e mkstem(3)
<li>Randomiza&ccedil;&atilde;o adicionada ao valor do 
	TCP ISS para prote&ccedil;&atilde;o contra ataques de spoof.
<li>Preenchimento aleat&oacute;rio nos pacotes IPsec esp_old.
<li>Gerar salts para v&aacute;rios algoritmos de senha.
<li>Gerar disputas S/Key falsas.
<li>Verifica&ccedil;&atilde;o autom&aacute;tica de trocas 
	de chaves no 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8">
	isakmpd(8)</a>.
d176 1
a176 1
<h3><font color="#e00000">Fun&ccedil;&otilde;es Criptogr&aacute;ficas de Hash</font></h3><p>
d178 3
a180 4
Uma fun&ccedil;&atilde;o de hash comprime os dados recebidos 
para uma string de tamanho constante. Em uma 
fun&ccedil;&atilde;o criptogr&aacute;fica de hash &eacute; 
imposs&iacute;vel encontrar:
d183 3
a185 5
<li>duas entradas que possuam a mesma sa&iacute;da 
	(imune a colis&otilde;es),	
<li>uma entrada diferente para uma entrada j&aacute; 
	dispon&iacute;vel com a mesma sa&iacute;da 
	(resist&ecirc;ncia secund&aacute;ria de colis&otilde;es).
d189 3
a191 3
No OpenBSD, MD5, SHA1 e RIPEMD-160 s&atilde;o utilizados como
fun&ccedil;&otilde;es criptogr&aacute;ficas de hash:<p>
<ul> 
d197 1
a197 1
    para autenticar a origem de dados dos pacotes e para garantir 
d199 1
a199 2
<li>Para senhas MD5 estilo FreeBSD (n&atilde;o ativadas por 
    padr&atilde;o), veja o
d208 1
a208 1
<h3><font color="#e00000">Transformadores Criptogr&aacute;ficos</font></h3><p>
d210 8
a217 8
Os transformadores criptogr&aacute;ficos s&atilde;o usados para
cifrar e decifrar dados. Eles s&atilde;o normalmente usados com chaves 
de cifragem e de decifragem. A seguran&ccedil;a de um transformador 
deve se basear somente no material relacionado &agrave;s chaves.<p>

O OpenBSD possui mecanismos como DES, 3DES, Blowfish e Cast 
dispon&iacute;veis para o kernel e programas do ambiente de 
usu&aacute;rio, que s&atilde;o utilizados em diversos locais:<p>
d219 1
a219 1
<li>Na libc para criar senhas no formato 
d221 2
a222 2
    Veja tamb&eacute;m o <a href="papers/bcrypt-paper.ps">documento da USENIX</a> 
	neste t&oacute;pico.
d227 2
a228 3
    para proteger as transa&ccedil;&otilde;es e negocia&ccedil;&otilde;es 
    do IPsec.
<li>No AFS para proteger as mensagens que passam pela rede, 
d230 2
a231 2
<li>Na libssl para fornecer &agrave;s aplica&ccedil;&otilde;es 
    comunica&ccedil;&atilde;o sobre o protocolo SSL. 
d236 1
a236 1
<h3><font color="#e00000">Suporte a Hardware Criptogr&aacute;fico</font></h3><p>
d238 2
a239 3
O OpenBSD, a partir da vers&atilde;o 2.7, come&ccedil;ou a 
suportar alguns hardwares aceleradores criptogr&aacute;ficos e 
geradores de n&uacute;meros aleat&oacute;rios.
d242 8
a249 9
    Desenfileiramento criptogr&aacute;fico do IPsec</a></b><br>
    Nossa pilha IPsec foi modificada para que fun&ccedil;&otilde;es 
    criptogr&aacute;ficas sejam feitas fora de linha. A maioria das 
    pilhas IPsec precisam realizar criptografia no processamento de 
    cada pacote resultando em uma performance s&iacute;ncrona. Para 
    utilizar o hardware de forma correta e acelerar a 
    opera&ccedil;&atilde;o era preciso separar estes dois componentes, 
    assim como fizemos. Por sinal, esta opera&ccedil;&atilde;o 
    resultou em um ganho de performance at&eacute; no caso do software.
d253 2
a254 2
    Placas Hifn 7751 pode ser utilizadas como aceleradores 
    criptogr&aacute;ficos sim&eacute;tricos, ex.:, o 
d259 23
a281 25
    A performance atual usando uma &uacute;nica placa Hifn 7751 em 
    cada ponta do t&uacute;nel &eacute; de 64Mbit/sec para 
    3DES/SHA1/ESP, aproximadamente 600% de aumento comparando-se a um 
    CPU P3/550. Desenvolvimentos a parte est&atilde;o corrigindo alguns 
    problemas, por&eacute;m o c&oacute;digo &eacute; considerado 
    est&aacute;vel desde 13 de Abril de 2000. N&oacute;s escrevemos 
    nosso pr&oacute;prio driver ao inv&eacute;s de usar o driver da
    <a href="http://www.powercrypt.com">PowerCrypt</a> (escrito nos 
    EUA), este hoje interagindo perfeitamente com a pilha IPsec.
    A 7751 &eacute; considerada lenta para os padr&otilde;es da 
    ind&uacute;stria de hoje e muitos fornecedores j&aacute; possuem 
    chips mais r&aacute;pidos (at&eacute; a Hifn possui hoje um chip 
    mais veloz por&eacute;m mais caro). A m&aacute;xima performance 
    utilizando-se 3DES SHA1 ESP &eacute; de aproximadamente 64Mbit/seg.
    <p>
    Ap&oacute;s o lan&ccedil;amento do 2.9, foi adicionado o suporte ao 
    chip Hifn 7951, uma vers&atilde;o simplificada do 7751 que adiciona 
    um acelerador de chaves p&uacute;blicas (n&atilde;o suportado) e um 
    gerador de n&uacute;meros aleat&oacute;rios (suportado). As placas 
    foram doadas pela <a href="http://www.soekris.com/">Soekris Engineering</a>.
    <p>
    Ap&oacute;s o lan&ccedil;amento do 3.0, foi adicionado o suporte ao 
    chip Hifh 7811, uma vers&atilde;o mais r&aacute;pida da 7751 (em 
    torno de 130Mbit/s) com um gerador de n&uacute;meros 
    aleat&oacute;rios. A placa foi doada pela <a href="http://www.gtgi.com/">GTGI</a>.
d283 2
a284 2
    Ap&oacute;s o lan&ccedil;amento do 3.2, foi adicionado suporte ao 
    algoritmo de compress&atilde;o LZS, utilizado pelo
d287 9
a295 9
    Ap&oacute;s o lan&ccedil;amento do 3.4. foi adicionado o suporte 
    aos chips 7955 e 7956. Com as mesmas funcionalidades do chip anterior 
    7951, estes adicionam suporte a AES.
    <p>
    A Hifn foi no in&iacute;cio uma empresa dif&iacute;cil de se lidar 
    (eles tentaram nos convencer a mudar de id&eacute;ia sobre o nosso 
    algoritmo de destravamento criptogr&aacute;fico de engenharia 
    reversa n&atilde;o-EUA), por&eacute;m recentemente eles t&ecirc;m 
    sido muito prestativos disponibilizando placas e suporte.
d300 7
a306 10
    Este dispositivo &eacute; uma unidade de criptografia 
    assim&eacute;trica. Ele possui suporte aos algoritmos RSA, DSA e 
    DH, al&eacute;m de outras fun&ccedil;&otilde;es relacionadas a 
    grandes n&uacute;meros. Ele tamb&eacute;m cont&eacute;m um gerador 
    de n&uacute;meros aleat&oacute;rios de alta performance. 
    Possu&iacute;mos um desses, documenta&ccedil;&atilde;o completa e 
    c&oacute;digos de exemplo. A partir da vers&atilde;o do OpenBSD 
    3.1, ambos gerador de n&uacute;meros aleat&oacute;rios e unidade 
    de grandes n&uacute;meros tiveram seu suporte inclu&iacute;do no 
    sistema.
d311 6
a316 7
    Este dispositivo &eacute; uma unidade de criptografia assim&eacute;trica
    e um processador de pacotes. Ele possui suporte aos algoritmos RSA, 
    DSA e DH, al&eacute;m de outras fun&ccedil;&otilde;es relacionadas a 
    grandes n&uacute;meros e tamb&eacute;m possui um gerador de n&uacute;meros 
    aleat&oacute;rios. Atualmente, somente o mecanismo de grandes 
    n&uacute;meros e o gerador de n&uacute;meros aleat&oacute;rios 
    s&atilde;o suportados.
d320 1
a320 1
    Broadcom BCM5801/BCM5802/BCM5805/BCM5820/BCM5821/BCM5822/5823
d322 5
a326 6
    Logo ap&oacute;s o lan&ccedil;amento do OpenBSD 2.7, n&oacute;s 
    conseguimos adicionar suporte preliminar a estas placas 
    disponibilizadas a n&oacute;s diretamente pelo distribuidor, 
    especificamente com o chip de teste 5501. Estes dispositivos fornecem 
    a melhor performance em criptografia assim&eacute;trica que 
    n&oacute;s j&aacute; vimos.
d329 19
a347 19
    O seu novo chip BCM5805 &eacute; similar ao Bluesteelnet, exceto pelo
    fato da placa tamb&eacute;m suportar um mecanismo assim&eacute;trico para 
    DSA, RSA e outros algoritmos. Com uma performance quase 
    quatro vezes mais r&aacute;pida que as Hifn, esperamos que esse chip 
    se torne mais comum em breve.
    <p>
    O pessoal da Broadcom/Bluesteelnet foram &oacute;timas pessoas de se 
    lidar. Eles nos forneceram a documenta&ccedil;&atilde;o completa, 
    c&oacute;digos de exemplo para seus chips e um n&uacute;mero 
    suficiente de placas para podermos testar.
    <p>
    Na vers&atilde;o 2.8, este driver era modificado para gerar 
    n&uacute;meros aleat&oacute;rios no BCM5805 e vers&otilde;es 
    similares, e alimentar a fila de entropia do kernel com estes dados.
    <p>
    Na vers&atilde;o 2.9, foi adicionado suporte ao chip BCM5820, que &eacute;
    basicamente uma vers&atilde;o mais r&aacute;pida (64bit, velocidade de 
    clock maior) do modelo BCM5805. Suporte ao modelo BCM5821 tamb&eacute;m
    foi adicionado na vers&atilde;o 3.0.
d349 2
a350 2
    Na vers&atilde;o 3.1, o mecanismo de grandes n&uacute;meros foi suportado,
    e as opera&ccedil;&otilde;es de RSA/DH/DSA puderam ser aceleradas.
d353 9
a361 4
    adicionado na vers&atilde;o 3.2.
    <p>
    Suporte parcial ao BCM5823 foi adicionado ao 3.4.  O chip suporta AES, por&eacute;m
    o driver n&atilde;o.
d367 4
a370 5
    PCC-ISES</a> &eacute; um novo chipset da Holanda. N&oacute;s recebemos 
    hardware de exemplo e documenta&ccedil;&atilde;o, e o driver 
    j&aacute; est&aacute; sendo desenvolvido. No momento, o driver j&aacute;
    &eacute; capaz de alimentar a fila de entropia do kernel com 
    n&uacute;meros aleat&oacute;rios.
d373 4
a376 5
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=safe&amp;sektion=4
    ">SafeNet SafeXcel 1141/1741</a></b><br>
    Depois do lan&ccedil;amento da vers&atilde;o 3.4, foi adicionado suporte
    para estes dois chips (encontrados em v&aacute;rias placas 
    criptogr&aacute;ficas
d378 3
a380 3
    Suportam DES, Triple-DES, AES, MD5 e criptografia sim&eacute;trica SHA-1,
    RNG, opera&ccedil;&otilde;es de chave p&uacute;blica e processamento
    de pacotes IPsec completo.
d384 4
a387 5
    N&oacute;s recebemos documenta&ccedil;&atilde;o e hardware para o chip de
    criptografia <a
    href="http://www.safenet-inc.com/products/chips/safeXcel1840.asp">SafeNet
    1840</a>.  O trabalho para suportar pelo menos RNG a criptografia 
    sim&eacute;trica destes dispositivos j&aacute; foi iniciado.
d391 4
a394 7
    N&oacute;s recebemos documenta&ccedil;&atilde;o e hardware  
    para o chip de criptografia
    <a
    href="http://www.safenet-inc.com/products/chips/safeXcel2141.asp">SafeNet
    2141</a>.
    O trabalho para suportar pelo menos a criptografia 
    assim&eacute;trica destes dispositivos j&aacute; foi iniciado.
d399 7
a405 8
    A 3Com nos forneceu um driver para suportar o componente ethernet deste
    chipset e baseados nisso n&oacute;s escrevemos nosso pr&oacute;prio driver.
    Este driver foi agora integrado uma vez que conseguimos uma licen&ccedil;a
    livre para o microcode. Pelo fato da pouca documenta&ccedil;&atilde;o e falta de
    coopera&ccedil;&atilde;o (parcialmente por causa das reviravoltas da 3Com), as
    fun&ccedil;&otilde;es de IPsec do chip n&atilde;o s&atilde;o 
    suportadas... por conseq&uuml;&ecirc;ncia, isso se tornou um exerc&iacute;cio 
    in&uacute;til.
d409 11
a419 13
    Assim como a divis&atilde;o de componentes de rede da Intel sempre faz,
    a documenta&ccedil;&atilde;o necess&aacute;ria nos foi recusada. N&oacute;s 
    conversamos com cinco pessoas da Intel 
    tecnicamente envolvidas com o desenvolvimento destes produtos. 
    Todos eles gostariam que n&oacute;s tiv&eacute;ssemos acesso a
    documenta&ccedil;&atilde;o, e nos apoiaram pelo que n&oacute;s t&iacute;nhamos 
    feito. Por&eacute;m suas 
    m&atilde;os estavam atadas a uma administra&ccedil;&atilde;o que n&atilde;o 
    percebia o benef&iacute;cio trazido a eles pr&oacute;prios ao se
    disponibilizar a documenta&ccedil;&atilde;o. Esque&ccedil;a a Intel. (Se voc&ecirc; 
    quiser comprar hardware ethernet gigabit, n&oacute;s recomendamos qualquer 
    outra coisa... pela mesma raz&atilde;o: a maioria dos drivers da Intel 
    que temos suporte foram escritos sem documenta&ccedil;&atilde;o).
d424 6
a429 6
    O chip 82802 FWH (encontrado nas placas-m&atilde;e i810, i820, i840, 
    i850, e i860) cont&eacute;m um gerador de n&uacute;meros 
    aleat&oacute;rios (RNG). IPsec de alta performance requer uma entropia de 
    n&uacute;meros mais aleat&oacute;ria. A partir de 10 de Abril de 2000,
    n&oacute;s passamos a suportar o RNG. Iremos adicionar suporte a 
    outros RNGs encontrados em outros chipsets.
d433 17
a449 18
    O novo CPU VIA C3 cont&eacute;m um gerador de n&uacute;meros 
    aleat&oacute;rios. A partir da vers&atilde;o <a href="../33.html">3.3</a> 
    este item &eacute; utilizado pelo kernel para preencher a lista de 
    entropia.
    <p>

<li><b>Instru&ccedil;&otilde;es VIA C3 AES</b><br>
    CPUs VIA com um n&uacute;cleo Nehemiah de 8 n&iacute;veis ou maior 
    cont&eacute;m uma implementa&ccedil;&atilde;o AES acess&iacute;vel 
    via instru&ccedil;&otilde;es simples. Com o <a href="../34.html">3.4</a>
    o kernel suportava isso para utiliza&ccedil;&atilde;o em um 
    contexto IPsec e exporta&ccedil;&atilde;o via <tt>/dev/crypto</tt>. 
    Com o <a href="../35.html">3.5</a>, a performance foi 
    significantemente ampliada e o OpenSSL agora utiliza a nova 
    instru&ccedil;&atilde;o diretamente quando dispon&iacute;vel sem a 
    necessidade de entrada no kernel, resultando em um grande aumento 
    de velocidade para aplica&ccedil;&otilde;es que utilizam OpenSSL 
    para efetuar criptografia AES (AES-128 medido a 780Mbyte/seg).	
d453 7
a459 8
    H&aacute; anos, t&iacute;nhamos um grande esquema para suportar 
    placas de criptografia que podiam fazer RSA/DH/DSA automaticamente 
    atrav&eacute;s de chamadas via OpenSSL. Com o lan&ccedil;amento do 
    OpenBSD 3.2, este suporte passou a funcionar e qualquer placa que 
    &eacute; suportada com tal funcionalidade ser&aacute; 
    automaticamente utilizada por softwares de criptografia, incluindo 
    o OpenSSH e o httpd em modo SSL. Nenhuma altera&ccedil;&atilde;o 
    nas aplica&ccedil;&otilde;es &eacute; necess&aacute;ria.
d468 1
a468 2
<h3><font color="#e00000">Cript&oacute;grafos Internacionais 
 requeridos</font></h3><p>
d471 3
a473 4
Se algum cript&oacute;grafo n&atilde;o-Americano que preencha os 
pr&eacute;-requisitos estabelecidos anteriormente est&aacute; 
interessado em ajudar com a criptografia integrada do OpenBSD, 
por favor entre em contato conosco.<p>
d479 3
a481 3
Alguns documentos sobre as altera&ccedil;&otilde;es efetuadas no OpenBSD
foram escritos pelos membros do time OpenBSD. As vers&otilde;es
postscript destes documentos est&atilde;o dispon&iacute;veis abaixo.<p>
d511 1
a511 1
    <a href="../papers/swapencrypt.ps">paper</a> e 
d522 2
a523 3
    <a href="http://www.acm.org/tocs/">ACM Transactions on Computer
Systems</a>,
    Fevereiro de 2006, por 
d525 1
a525 1
    <a href="mailto:jason@@openbsd.org">Jason L. Wright</a> e  
d537 2
a538 2
Originally [OpenBSD: crypto.html,v 1.133 ]<br>
$Translation: crypto.html,v 1.23 2006/12/28 18:29:29 dsantos Exp $<br>
@


1.23
log
@sync with steelix translation CVS
@
text
@d20 5
a24 5
"O mantra de qualquer bom engenheiro de seguran&ccedil;a &eacute;: "Seguran&ccedil;a
n&atilde;o &eacute; um produto, mas um processo." &Eacute; mais do que desenvolver
uma criptografia forte em um sistema; &eacute; desenvolver um sistema
inteiro em que todos os itens de seguran&ccedil;a, incluindo a criptografia,
trabalhem juntos."<br>
d51 5
a55 4
do Canad&aacute;</a> n&atilde;o imp&otilde;e nenhuma restri&ccedil;&atilde;o 
significante quanto a exporta&ccedil;&atilde;o de software criptogr&aacute;fico,
e &eacute; ainda mais expl&iacute;cita quanto a livre exporta&ccedil;&atilde;o 
de softwares criptogr&aacute;ficos. Marc Plumb realizou
d65 6
a70 6
patentes indecentes. N&oacute;s tamb&eacute;m exigimos que tal software seja 
proveniente de pa&iacute;ses que possuam leis de exporta&ccedil;&atilde;o 
compat&iacute;veis pois n&atilde;o queremos infringir lei alguma. Os 
componentes criptogr&aacute;ficos que utilizamos atualmente foram 
escritos na Argentina, Austr&aacute;lia, Canad&aacute;, Alemanha, 
Gr&eacute;cia, Noruega e Su&eacute;cia.
d74 5
a78 5
compilamos nossos arquivos em pa&iacute;ses livres para nos assegurarmos 
de que os c&oacute;digos fonte e bin&aacute;rios que disponibilizamos 
est&atilde;o livres de qualquer corrup&ccedil;&atilde;o. No passado 
nossas compila&ccedil;&otilde;es eram realizadas no Canad&aacute;, 
Su&eacute;cia e Alemanha.<p>
d82 2
a83 2
Heimdal da Su&eacute;cia. Nosso c&oacute;digo fonte do X11 foi estendido 
para utilizar o Kerberos.<p>
d90 2
a91 2
de placas, e nosso pr&oacute;prio daemon ISAKMP, &eacute; utilizada em uma 
das m&aacute;quinas padronizadoras do projeto 
d139 2
a140 2
import&acirc;ncia para a seguran&ccedil;a do sistema uma seq&uuml;&ecirc;ncia
de n&uacute;meros aleat&oacute;rios:<p>
d147 2
a148 1
	repetitivos, o que significa que o PRNG deve ter um ciclo muito longo.
d229 3
a231 3
cifrar e decifrar dados. Eles s&atilde;o normalmente usados com chaves de
cifragem e de decifragem. A seguran&ccedil;a de um transformador deve se basear
somente no material relacionado &agrave;s chaves.<p>
d239 2
a240 1
    Veja tamb&eacute;m o <a href="papers/bcrypt-paper.ps">documento da USENIX</a> neste t&oacute;pico.
d265 6
a270 6
    pilhas IPsec precisam realizar criptografia no processamento de cada 
    pacote resultando em uma performance s&iacute;ncrona. Para utilizar o 
    hardware de forma correta e acelerar a opera&ccedil;&atilde;o era 
    preciso separar estes dois componentes, assim como fizemos. Por sinal, 
    esta opera&ccedil;&atilde;o resultou em um ganho de performance 
    at&eacute; no caso do software.
d274 2
a275 2
    Placas Hifn 7751 pode ser utilizadas como aceleradores criptogr&aacute;ficos
    sim&eacute;tricos, ex.:, o 
d281 8
a288 9
    cada ponta do t&uacute;nel &eacute; de 64Mbit/sec para 3DES/SHA1/ESP, 
    aproximadamente 600% de aumento comparando-se a um CPU P3/550. 
    Desenvolvimentos a parte est&atilde;o corrigindo alguns problemas, 
    por&eacute;m o c&oacute;digo &eacute; considerado est&aacute;vel
    desde 13 de Abril de 2000. N&oacute;s escrevemos nosso pr&oacute;prio 
    driver ao inv&eacute;s de usar o driver da
    <a href="http://www.powercrypt.com">PowerCrypt</a> (escrito nos EUA), 
    este hoje interagindo perfeitamente com a pilha IPsec.

d290 3
a292 3
    ind&uacute;stria de hoje e muitos fornecedores j&aacute; possuem chips 
    mais r&aacute;pidos (at&eacute; a Hifn possui hoje um chip mais veloz 
    por&eacute;m mais caro). A m&aacute;xima performance 
d295 10
a304 10
    Ap&oacute;s o lan&ccedil;amento do 2.9, foi adicionado o suporte ao chip
    Hifn 7951, uma vers&atilde;o simplificada do 7751 que adiciona um
    acelerador de chaves p&uacute;blicas (n&atilde;o suportado) e um gerador
    de n&uacute;meros aleat&oacute;rios (suportado). As placas foram doadas
    pela <a href="http://www.soekris.com/">Soekris Engineering</a>.
    <p>
    Ap&oacute;s o lan&ccedil;amento do 3.0, foi adicionado o suporte ao chip
    Hifh 7811, uma vers&atilde;o mais r&aacute;pida da 7751 (em torno de 130Mbit/s)
    com um gerador de n&uacute;meros aleat&oacute;rios. A placa foi doada pela
    <a href="http://www.gtgi.com/">GTGI</a>.
d306 2
a307 2
    Ap&oacute;s o lan&ccedil;amento do 3.2, foi adicionado suporte ao algoritmo
    de compress&atilde;o LZS, utilizado pelo
d310 3
a312 3
    Ap&oacute;s o lan&ccedil;amento do 3.4. foi adicionado o suporte aos chips 
    7955 e 7956. Com as mesmas funcionalidades do chip anterior 7951, estes 
    adicionam suporte a AES.
d316 3
a318 3
    algoritmo de destravamento criptogr&aacute;fico de engenharia reversa 
    n&atilde;o-EUA), por&eacute;m recentemente eles t&ecirc;m sido muito 
    prestativos disponibilizando placas e suporte.
d323 10
a332 9
    Este dispositivo &eacute; uma unidade de criptografia assim&eacute;trica.
    Ele possui suporte aos algoritmos RSA, DSA e DH, al&eacute;m de 
    outras fun&ccedil;&otilde;es relacionadas a grandes n&uacute;meros. 
    Ele tamb&eacute;m cont&eacute;m um gerador de n&uacute;meros 
    aleat&oacute;rios de alta performance. Possu&iacute;mos um desses, 
    documenta&ccedil;&atilde;o completa e c&oacute;digos de exemplo. 
    A partir da vers&atilde;o do OpenBSD 3.1, ambos gerador de 
    n&uacute;meros aleat&oacute;rios e unidade de grandes n&uacute;meros 
    tiveram seu suporte inclu&iacute;do no sistema.
d467 2
a468 1
    este item &eacute; utilizado pelo kernel para preencher a lista de entropia.
d472 11
a482 7
    CPUs VIA com um n&uacute;cleo Nehemiah de 8 n&iacute;veis ou maior cont&eacute;m uma implementa&ccedil;&atilde;o
    AES acess&iacute;vel via instru&ccedil;&otilde;es simples. Com o <a href="../34.html">3.4</a>
    o kernel suportava isso para utiliza&ccedil;&atilde;o em um contexto IPsec e exporta&ccedil;&atilde;o
    via <tt>/dev/crypto</tt>. Com o <a href="../35.html">3.5</a>, a performance
    foi significantemente ampliada e o OpenSSL agora utiliza a nova instru&ccedil;&atilde;o
    diretamente quando dispon&iacute;vel sem a necessidade de entrada no kernel, resultando
    em um grande aumento de velocidade para aplica&ccedil;&otilde;es que utilizam OpenSSL para     efetuar criptografia AES (AES-128 medido a 780Mbyte/seg).	
d486 8
a493 8
    H&aacute; anos, t&iacute;nhamos um grande esquema para suportar placas de 
    criptografia que podiam fazer RSA/DH/DSA automaticamente atrav&eacute;s
    de chamadas via OpenSSL. Com o lan&ccedil;amento do OpenBSD 3.2, este
    suporte passou a funcionar e qualquer placa que &eacute; suportada com
    tal funcionalidade ser&aacute; automaticamente utilizada por softwares de
    criptografia, incluindo o OpenSSH e o httpd em modo SSL. Nenhuma
    altera&ccedil;&atilde;o nas aplica&ccedil;&otilde;es &eacute; 
    necess&aacute;ria.
d555 10
a564 1
    <a href="papers/ocf.pdf">paper</a>.
d574 2
a575 2
Originally [OpenBSD: crypto.html,v 1.131 ]<br>
$Translation: crypto.html,v 1.22 2006/06/23 14:29:53 dsantos Exp $<br>
@


1.22
log
@sync with steelix translation CVS
@
text
@d395 1
a395 1
">SafeNet SafeXcel 1141/1741</a></b><br>
d543 1
a543 1
    <a href="events.html#usenix2003">Usenix 2003</a>, por
d558 1
a558 1
$Translation: crypto.html,v 1.21 2006/05/10 22:22:16 dsantos Exp $<br>
@


1.21
log
@sync with steelix translation CVS
@
text
@d11 1
a11 1
<meta name="copyright" content="This document copyright 1997-2004 by OpenBSD.">
d393 20
a412 1
	
d414 5
a418 3
    N&oacute;s recebemos documenta&ccedil;&atilde;o e hardware de exemplo 
    para as placas de criptografia
    <a href="http://www.safenet-inc.com/technology/chips/safexcel_2141.asp">SafeNet</a>.
d557 2
a558 2
Originally [OpenBSD: crypto.html,v 1.129 ]<br>
$Translation: crypto.html,v 1.20 2006/01/18 18:00:45 dsantos Exp $<br>
@


1.20
log
@sync with Steelix CVS
@
text
@d443 1
a443 1
    este &eacute;tem &eacute; utilizado pelo kernel para preencher a lista de entropia.
d537 1
a537 1
$Translation: crypto.html,v 1.19 2005/12/22 20:49:14 dsantos Exp $<br>
@


1.19
log
@sync with Steelix CVS
@
text
@d454 1
d511 1
a511 1
    <a href="../mailto:angelos@@openbsd.org">Angelos D. Keromytis</a>.<br>
d535 1
d537 2
a538 1
$Translation: crypto.html,v 1.18 2005/06/28 14:44:35 dsantos Exp $<br>
@


1.18
log
@sync with steelxi translation CVS
@
text
@d534 2
a535 2
Originally [OpenBSD: crypto.html,v 1.128 ]<br>
$Translation: crypto.html,v 1.17 2005/04/23 13:55:03 dsantos Exp $<br>
@


1.17
log
@huge sync from the translators
@
text
@@


1.16
log
@Sync with Steelix CVS
@
text
@d227 2
a228 3
encriptar e desencriptar dados. Eles s&atilde;o normalmente usados com chaves de
encripta&ccedil;&atilde;o e de desencripta&ccedil;&atilde;o. A 
seguran&ccedil;a de um transformador deve se basear
d535 1
a535 1
$Translation: crypto.html,v 1.16 2005/01/11 12:47:01 dsantos Exp $<br>
@


1.15
log
@Sync with Steelix CVS
@
text
@d218 1
a218 1
<li>No libssl para assinatura digital de mensagens.
d417 1
a417 1
    a documenta&ccedil;&atilde;o necess&acuteria nos foi recusada. N&oacute;s 
d424 1
a424 1
    percebia o benef&iacute;cio trazido a eles pr&ocute;prios ao se
d457 1
a457 1
    H&acute; anos atr&aacute;s, t&iacute;nhamos um grande esquema para suportar placas de 
d536 1
a536 1
$Translation: crypto.html,v 1.15 2005/01/04 16:21:51 dsantos Exp $<br>
@


1.14
log
@Sync with Steelix CVS
@
text
@@


1.13
log
@Sync with Steelix CVS
@
text
@d16 1
a16 1
<img align="left" alt="[OpenBSD]" height="166" width="197" SRC="../images/blowfish-notext.jpg">
d535 2
a536 2
Originally [OpenBSD: crypto.html,v 1.127 ]<br>
$Translation: crypto.html,v 1.14 2004/12/11 15:49:47 dsantos Exp $<br>
@


1.12
log
@Sync with Steelix CVS
@
text
@d11 1
a11 1
<meta name="copyright" content="This document copyright 1997-20044444444444444444444444444444444444444444444 by OpenBSD.">
d36 1
a36 1
<a href="#trans">Criptografadores</a>: DES, Blowfish, ...<br>
d38 1
a38 1
<a href="#people">Criptografadores Internacionais requeridos</a><br>
d79 1
a79 1
O OpenBSD &eacute; lan&ccedil;ado com suporte a Kerberos V inclu&iacute;do. 
d134 1
a134 1
<h3><font color="#e00000">Pseudo Gerador de N&uacute;meros Aleat&oacute;rios</font></h3><p>
d136 1
a136 1
O Pseudo Gerador de N&uacute;meros Aleat&oacute;rios (PRNG) 
d150 1
a150 1
O PRNG &eacute; normalmente um algoritmo aonde os mesmo valores iniciais
d224 1
a224 1
<h3><font color="#e00000">Criptografadores</font></h3><p>
d226 2
a227 2
Os criptografadores s&atilde;o usados para encriptar de desencriptar
dados. Eles s&atilde;o normalmente usados com chaves de 
d229 1
a229 1
seguran&ccedil;a de um criptografador deve se basear
d255 1
a255 1
O OpenBSD a partir da vers&atilde;o 2.7, come&ccedil;ou a 
d406 1
a406 1
    chipset e baseando-nos nisso n&oacute;s escrevemos nosso pr&oacute;prio driver.
d417 2
a418 2
    ela simplesmente se recusa a fornecer-nos documenta&ccedil;&atilde;o 
    adequada. N&oacute;s conversamos com cinco pessoas da Intel 
d420 3
a422 2
    Todos eles gostariam que n&oacute;s tiv&eacute;ssemos documenta&ccedil;&atilde;o.
    Eles nos apoiaram pelo que n&oacute;s t&iacute;nhamos feito. Por&eacute;m suas 
d424 2
a425 2
    percebia o benef&iacute;cio a eles mesmos disponibilizando a 
    documenta&ccedil;&atilde;o. Esque&ccedil;a a Intel. (Se voc&ecirc; 
d444 1
a444 1
    este item &eacute; utilizado pelo kernel para preencher a lista de entropia.
d454 1
a454 2
    em um grande aumento de velocidade para aplica&ccedil;&otilde;es que utilizam OpenSSL para 
    efetuar encripta&ccedil;&atilde;o AES (AES-128 medido a 780Mbyte/seg).
d457 1
a457 1
    A anos atr&aacute;s, t&iacute;nhamos um grande esquema para suportar placas de
d473 2
a474 2
<h3><font color="#e00000">Criptografadores Internacionais 
requeridos</font></h3><p>
d477 1
a477 1
Se algum criptografador n&atilde;o-Americano que preencha os 
d536 1
a536 1
$Translation: crypto.html,v 1.13 2004/03/25 19:10:50 eduardo Exp $<br>
@


1.11
log
@Sync with Steelix CVS
@
text
@d446 10
d535 2
a536 2
Originally [OpenBSD: crypto.html,v 1.126 ]<br>
$Translation: crypto.html,v 1.12 2004/02/28 18:17:46 eduardo Exp $<br>
@


1.10
log
@Sync with Steelix CVS
@
text
@d11 1
a11 1
<meta name="copyright" content="This document copyright 1997-2002 by OpenBSD.">
d525 2
a526 2
Originally [OpenBSD: crypto.html,v 1.125 ]<br>
$Translation: crypto.html,v 1.11 2003/11/13 15:11:24 eduardo Exp $<br>
@


1.9
log
@sync with steelix cvs
@
text
@a102 6
Qual &eacute; a primeira coisa que a maioria das pessoas fazem ap&oacute;s
instalar o OpenBSD? Elas instalam o Shell Seguro 
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a>)
da &aacute;rvore de ports ou pacotes dispon&iacute;veis em 
servidores FTP.<p>

d106 1
a106 2
absolutamente livre de patentes. Ap&oacute;s o lan&ccedil;amento 
da vers&atilde;o 2.6, o 
d525 2
a526 2
Originally [OpenBSD: crypto.html,v 1.124 ]<br>
$Translation: crypto.html,v 1.10 2003/09/29 11:02:26 eduardo Exp $<br>
@


1.8
log
@sync with steelix cvs
@
text
@d79 4
a82 4
O OpenBSD &eacute; lan&ccedil;ado com Kerberos IV e Kerberos V 
inclu&iacute;dos. As duas bases de c&oacute;digos s&atilde;o baseadas 
na base KTH da Su&eacute;cia. Nosso c&oacute;digo fonte
do X11 foi estendido para utilizar o Kerberos.<p>
d127 2
a128 3
adicionado suporte a autentica&ccedil;&atilde;o via 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kerberos&amp;sektion=1">kerberos(1)</a>
e passagem de ticket.
a248 7
<li>No Kerberos e v&aacute;rias aplica&ccedil;&otilde;es "kerberizadas", como o
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=telnet&amp;sektion=1">telnet(1)</a>,
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&amp;sektion=1">cvs(1)</a>,
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rsh&amp;sektion=1">rsh(1)</a>,
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&amp;sektion=1">rcp(1)</a>,
    e 
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rlogin&amp;sektion=1&amp;manpath=OpenBSD+3.1">rlogin(1)</a>.
d316 4
d532 2
a533 2
Originally [OpenBSD: crypto.html,v 1.122 ]<br>
$Translation: crypto.html,v 1.9 2003/09/09 14:35:57 eduardo Exp $<br>
@


1.7
log
@sync with steelix cvs
@
text
@d146 1
a146 1
importância para a seguran&ccedil;a do sistema uma seq&uuml;&ecirc;ncia
d173 1
a173 1
<li>Aloca&ccedil;&atilde;o dinâmica sin_port no bind(2).
d537 1
a537 1
$Translation: crypto.html,v 1.8 2003/09/03 17:36:36 eduardo Exp $<br>
@


1.6
log
@sync with steelix translation CVS
@
text
@d356 1
a356 1
    Broadcom BCM5801/BCM5802/BCM5805/BCM5820/BCM5821/BCM5822
d392 3
d536 2
a537 2
Originally [OpenBSD: crypto.html,v 1.121 ]<br>
$Translation: crypto.html,v 1.7 2003/07/19 00:34:29 dsantos Exp $<br>
@


1.5
log
@sync with steelix translation CVS
@
text
@d21 1
a21 1
n&atilde;o &eacute; um produto, mas um processo." É mais do que desenvolver
d31 1
a31 1
<strong>Índice</strong><br>
d534 1
a534 1
$Translation: crypto.html,v 1.6 2003/06/21 20:59:40 eduardo Exp $<br>
@


1.4
log
@sync with steelix translation CVS
@
text
@d534 1
a534 1
$Translation: crypto.html,v 1.5 2003/06/17 17:34:22 eduardo Exp $<br>
@


1.3
log
@
sync with steelix translation CVS
@
text
@d518 7
d533 2
a534 2
Originally [OpenBSD: crypto.html,v 1.120 ]<br>
$Translation: crypto.html,v 1.4 2003/05/17 19:10:01 eduardo Exp $<br>
@


1.2
log
@
sync with steelix translation CVS
@
text
@d44 1
a44 1
<h3><font color="#e00000">Por que n&oacute;s embutimos criptografia<font></h3><p>
d527 1
a527 1
$Translation: crypto.html,v 1.3 2003/05/15 19:45:45 dsantos Exp $<br>
@


1.1
log
@
sync with steelix translation CVS
@
text
@d82 1
a82 1
do X11 foi extendido para utilizar o Kerberos.<p>
d137 1
a137 1
e convertemos para o estilo OpenBSD. Ap&oacute;s um ano, extendemos 
d163 2
a164 2
temporiza&ccedil;&atilde;o de interrupa&ccedil;&atilde;o do mouse, 
a lant&ecirc;ncia de dados de interrup&ccedil;&atilde;o da rede, 
d168 1
a168 1
exportados atrav&eacute;z de dispositivos para programas no ambiente 
d205 1
a205 1
	(imune &agrave; colis&otilde;es),	
d260 1
a260 1
<li>No AFS para proteger as mensagem que passam pela rede, 
d299 1
a299 1
    driver ao inv&eacute;z de usar o driver da
d310 1
a310 1
    Hifn 7951, uma vers&atilde;o simplicadada do 7751 que adiciona um
d425 1
a425 1
    ela simplismente se recusa a fornecer-nos documenta&ccedil;&atilde;o 
d427 1
a427 1
    t&eacute;cnicamente envolvidas com o desenvolvimento destes produtos. 
d429 1
a429 1
    Eles nos apoiaram pelo que n&oacute;s tinhamos feito. Por&eacute;m suas 
d442 1
a442 1
    aleat&oacute;rios (RNG). IPsec de alta performance requer um entropia de 
d455 2
a456 2
    A anos atr&aacute;s, tinhamos um grande esquema para suportar placas de
    criptografia que podiam fazer RSA/DH/DSA automaticamente atrav&eacute;z
d527 1
a527 1
$Translation: crypto.html,v 1.2 2003/05/13 22:16:43 eduardo Exp $<br>
@

