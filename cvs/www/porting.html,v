head	1.63;
access;
symbols;
locks; strict;
comment	@# @;


1.63
date	2016.04.01.05.03.46;	author tb;	state Exp;
branches;
next	1.62;
commitid	5Y4mjkujcKMvSejY;

1.62
date	2016.03.29.15.36.20;	author tb;	state Exp;
branches;
next	1.61;
commitid	RYd69wU6YWxREtPc;

1.61
date	2014.03.11.07.02.07;	author deraadt;	state Exp;
branches;
next	1.60;

1.60
date	2013.12.11.12.09.27;	author sthen;	state Exp;
branches;
next	1.59;

1.59
date	2011.01.17.16.28.24;	author jasper;	state Exp;
branches;
next	1.58;

1.58
date	2009.01.27.13.19.14;	author sthen;	state Exp;
branches;
next	1.57;

1.57
date	2007.06.18.15.27.16;	author espie;	state Exp;
branches;
next	1.56;

1.56
date	2006.11.04.10.53.37;	author espie;	state Exp;
branches;
next	1.55;

1.55
date	2006.05.02.17.31.32;	author jolan;	state Exp;
branches;
next	1.54;

1.54
date	2006.05.02.04.14.11;	author ray;	state Exp;
branches;
next	1.53;

1.53
date	2005.09.26.08.52.11;	author grunk;	state Exp;
branches;
next	1.52;

1.52
date	2005.01.02.21.25.08;	author msf;	state Exp;
branches;
next	1.51;

1.51
date	2004.11.27.15.14.18;	author espie;	state Exp;
branches;
next	1.50;

1.50
date	2004.11.26.15.26.10;	author alek;	state Exp;
branches;
next	1.49;

1.49
date	2004.08.10.13.44.23;	author espie;	state Exp;
branches;
next	1.48;

1.48
date	2004.07.15.16.18.22;	author xsa;	state Exp;
branches;
next	1.47;

1.47
date	2004.02.19.03.30.52;	author nick;	state Exp;
branches;
next	1.46;

1.46
date	2003.06.22.13.24.32;	author sturm;	state Exp;
branches;
next	1.45;

1.45
date	2003.01.09.22.18.45;	author miod;	state Exp;
branches;
next	1.44;

1.44
date	2002.07.06.09.32.08;	author pvalchev;	state Exp;
branches;
next	1.43;

1.43
date	2002.06.18.01.44.06;	author jsyn;	state Exp;
branches;
next	1.42;

1.42
date	2002.05.12.17.34.30;	author pvalchev;	state Exp;
branches;
next	1.41;

1.41
date	2002.02.18.23.40.18;	author rohee;	state Exp;
branches;
next	1.40;

1.40
date	2002.01.13.14.55.37;	author jufi;	state Exp;
branches;
next	1.39;

1.39
date	2001.11.19.17.26.57;	author horacio;	state Exp;
branches;
next	1.38;

1.38
date	2001.11.16.13.34.12;	author espie;	state Exp;
branches;
next	1.37;

1.37
date	2001.09.10.19.26.32;	author jufi;	state Exp;
branches;
next	1.36;

1.36
date	2001.08.29.00.04.03;	author horacio;	state Exp;
branches;
next	1.35;

1.35
date	2001.07.27.23.42.52;	author naddy;	state Exp;
branches;
next	1.34;

1.34
date	2001.05.13.20.16.52;	author jufi;	state Exp;
branches;
next	1.33;

1.33
date	2001.05.12.12.36.21;	author naddy;	state Exp;
branches;
next	1.32;

1.32
date	2000.09.12.00.16.17;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2000.07.10.19.35.43;	author jufi;	state Exp;
branches;
next	1.30;

1.30
date	2000.06.30.21.51.02;	author espie;	state Exp;
branches;
next	1.29;

1.29
date	2000.04.07.22.09.28;	author espie;	state Exp;
branches;
next	1.28;

1.28
date	2000.03.25.02.29.50;	author wvdputte;	state Exp;
branches;
next	1.27;

1.27
date	2000.02.23.10.54.29;	author espie;	state Exp;
branches;
next	1.26;

1.26
date	2000.02.21.20.33.49;	author espie;	state Exp;
branches;
next	1.25;

1.25
date	2000.02.15.15.41.57;	author espie;	state Exp;
branches;
next	1.24;

1.24
date	99.12.22.00.58.19;	author rohee;	state Exp;
branches;
next	1.23;

1.23
date	99.12.20.23.05.46;	author rohee;	state Exp;
branches;
next	1.22;

1.22
date	99.04.09.19.41.01;	author rohee;	state Exp;
branches;
next	1.21;

1.21
date	99.03.13.18.15.43;	author rohee;	state Exp;
branches;
next	1.20;

1.20
date	99.02.27.16.49.44;	author rohee;	state Exp;
branches;
next	1.19;

1.19
date	99.02.27.16.37.29;	author rohee;	state Exp;
branches;
next	1.18;

1.18
date	99.02.08.13.59.20;	author rohee;	state Exp;
branches;
next	1.17;

1.17
date	99.01.31.23.29.28;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	98.12.21.21.48.41;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	98.12.20.17.08.45;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	98.12.07.23.06.48;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	98.11.08.16.42.26;	author art;	state Exp;
branches;
next	1.12;

1.12
date	98.08.18.02.53.36;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	98.08.18.02.49.25;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	98.08.13.23.11.18;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	98.08.12.22.13.02;	author marc;	state Exp;
branches;
next	1.8;

1.8
date	98.07.30.23.04.47;	author marc;	state Exp;
branches;
next	1.7;

1.7
date	98.07.30.14.58.43;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	98.06.19.15.06.56;	author pauls;	state Exp;
branches;
next	1.5;

1.5
date	98.03.05.22.47.53;	author marc;	state Exp;
branches;
next	1.4;

1.4
date	98.02.15.08.27.53;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	98.02.15.08.04.24;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	98.02.15.06.46.41;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	98.02.15.06.02.57;	author marc;	state Exp;
branches;
next	;


desc
@@


1.63
log
@daniel prefers this version
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
 <head>
  <meta http-equiv="Content-Type"
        content="text/html; charset=iso-8859-1">
  <meta http-equiv="refresh"
        content="8; url=faq/ports">
  <script type="text/javascript">
  <!--
        window.location.href="faq/ports"
  -->
  </script>
  <title>OpenBSD Porter's Handbook</title>
 </head>
 <body text="#000000" bgcolor="#FFFFFF" link="#23238E">
<a href="index.html"><img alt="[OpenBSD]" height="30" width="141" src="images/smalltitle.gif" border="0"></a>

  <p>
   If you are not redirected automatically, follow the link
   to <a href='faq/ports'>http://www.openbsd.org/faq/ports</a>

</body>
</html>
@


1.62
log
@use http-equiv instead of javascript for the redirect
@
text
@d9 5
a13 1
  <meta http-equiv="refresh" content="0; url=faq/ports/index.html" />
@


1.61
log
@start to get rid of annoying tail at the bottom of each page; browser
back buttons do that fine, and the rest of the text is not very relevant.
@
text
@d9 1
a9 5
  <script type="text/javascript">
  <!--
        window.location.href="faq/ports"
  -->
  </script>
@


1.60
log
@remove duplicate content by replacing old porting pages with redirects
to the maintained pages in faq/ports, from Daniel Dickman
@
text
@a14 1
  <link rev="made" HREF="mailto:www@@openbsd.org">
d23 1
a23 5
  <hr>
  <a href="index.html"><img height=24 width=24 src=back.gif border=0 alt=OpenBSD></a> 
  <a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br><small>$OpenBSD: porting.html,v 1.59 2011/01/17 16:28:24 jasper Exp $</small>
 </body>
@


1.59
log
@move porting related pages to a common directory, instead of having it everywhere
and nowhere.
@
text
@d1 2
a2 1
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
d7 8
a14 11
  <meta name="resource-type"
        content="document">
  <meta name="description"
        CONTENT="How to make an OpenBSD port">
  <meta name="keywords"
        content="openbsd,ports">
  <meta name="distribution"
        content="global">
  <meta name="copyright"
        content="This document copyright 1997-2009 by OpenBSD.">
  <title>Building an OpenBSD port</title>
a19 33
  <h2><font color="#e00000">Building an OpenBSD port</font></h2>

   So you've just compiled your favorite software package on your
   OpenBSD machine and you want to share your effort by turning
   it into a standard port.  What to do?
  <p>
   The most important thing to do is to <strong>communicate</strong>.
   Ask people on <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>
   if they are working on the same port. <em>Tell the original software
   author about it</em>, including problems you may find. If licensing
   information appears incorrect tell him.  If you had to jump through
   loops to make the port build, tell him what he can fix.  If they are
   only developing on Linux and feel like ignoring the rest of the Unix
   world, try to make them change their view.
  <p>
   <strong>COMMUNICATION</strong> makes the difference between a successful
   port and a port that will slowly be abandoned by everyone.
  <p>
   First look at the porting information on this page.  Then check
   out the referenced documents, especially the OpenBSD porting
   <a href="porting/checklist.html">checklist</a>.
  <p>
   <a href="porting/porttest.html">Test</a>, then re-test, and finally test again!
  <p>
   OpenBSD now fully supports updates. This means that 
   <a href="porting/update.html">quite a few issues</a>
   must be taken into account.
  <p>
   Submit the port.  Create a gzipped tarball of the port directory.
   You can then either place it on a public FTP or HTTP server, sending
   its address to <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>
   or send the port mime encoded to the same address.  Pick whichever
   method works best for you.
d21 2
a22 296
   Porting some new software takes time. Maintaining it over time is harder.
   It is quite okay to port software, and let other people handle it 
   afterwards. It is also okay to help other people update and maintain
   other ports, as long as you communicate to avoid doing the same things
   twice.
  <p>
   In the OpenBSD culture, <code>MAINTAINER</code>ship is not a status item,
   but a responsibility.  We have CVS and comments to give credit to the
   person who did the work.  A port <code>MAINTAINER</code> is something else:
   a person who assumes responsibility for the working of the port, and is
   willing to spend some time ensuring it works as best as can be.

<h3><font color="#0000e0">Index of Porting Documentation</font></h3>
<ul>
<li><a href="#Avail">Available Porting Information</a></li>
<li><a href="#Policy">OpenBSD Porting Policy</a></li>
<li><a href="#Security">Security Recommendations</a></li>
<li><a href="#Generic">Generic Porting Hints</a></li>
<li><a href="#Other">Other Helpful Hints</a></li>
</ul>

  <h3><font color="#0000e0"><a name="Avail">Available Porting Information</a></font></h3>
  <ul>
   <li>OpenBSD porting <a href="porting/checklist.html">checklist</a>.
   <li>OpenBSD ports <a href="porting/update.html">update guidelines</a>.
   <li>The man page 
   <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bsd.port.mk&amp;sektion=5">bsd.port.mk(5)</a>.
       This documents the ports infrastructure makefile that is
       included at the end of each individual port makefile.  
       There are still a few comments at the start of
       the file itself, but most of the useful information is now
       documented.
   <li>Some differences from other BSD port systems, mostly a summary
   of <a href="porting/diffs.html">infrastructure differences</a>.
   <li><a href="porting/libraries.html">Using shared libraries
   in OpenBSD Ports</a>. The rules there are <strong>very
   important</strong> as soon as you use shared libraries.
   <li><a href="porting/autoconf.html">GNU autoconf specificities</a>,
   how to deal with it in the context of OpenBSD ports.
   <li><a href="porting/config.html">Configuration files</a>,
   one frequent stumbling block for new developers, and the unique
   tools the OpenBSD ports tree has to deal with these.
   <li><a href="porting/audio-port.html">Porting audio applications to OpenBSD</a>.
   <li>The
       <a href="http://www.netbsd.org/Documentation/software/packages.html">
       NetBSD Package System</a> documentation.  This document describes
       NetBSD's version of the FreeBSD ports system and is quite helpful.
   <li>The
       <a href="http://www.freebsd.org/doc/en_US.ISO8859-1/books/porters-handbook/index.html">FreeBSD
       Porter's Handbook</a>.  This is the FreeBSD porting bible.
   <li>The OpenBSD ports mailing list,
       <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>.
  </ul>
  <h3><font color="#0000e0"><a name="Policy">OpenBSD Porting Policy</a></font></h3>
  <ul>
   <li>OpenBSD does NOT use <code>/usr/local/etc/rc.d</code>.<br>
       <code>/usr/local</code> is often shared between several machines 
         thanks to NFS.  For this reason, configuration files that are specific
         to a given machine can't be stored under <code>/usr/local</code>,
         <code>/etc</code> is the central repository for per machine
         configuration files.  Moreover, OpenBSD policy is to never update 
         files under <code>/etc</code> automatically.  Ports that need some
         specific boot setup should advise the administrator about what to do
         instead of blindly installing files.
   <li>OpenBSD does NOT compress man pages.
   <li>OpenBSD does NOT require <code>-lcrypt</code>.<br>
       DES encryption is part of the standard <code>libc</code>.
   <li>OpenBSD has a separate namespace for users and groups created by ports.
       See <code>/usr/ports/infrastructure/db/user.list</code> for details.
   <li>OpenBSD is strongly security-oriented. You should read and understand
       this page's <a href="#Security">security section</a>.
   <li>Be sure to add the <code>&#36;OpenBSD&#36;</code> CVS tag to
       the Makefile.  If importing a port from another system be sure to
       leave their tag in the Makefile, too.
   <li>The goal is to get all ported applications to support OpenBSD.  To
       achieve this goal you <strong>must</strong> feed any OpenBSD patches 
       back to the application maintainer.
  </ul>
  <h3><font color="#0000e0"><a name="Security">Security Recommendations</a></font></h3>
  There are many security problems to worry about. If
       you are not absolutely sure of what you are doing please request
       help from the <a href="mailto:ports@@openbsd.org">ports</a> mailing
       list.

  <ul>
   <li>Do <em>not</em> use alpha or beta code when preparing a port.  Use the
       latest regular or patch release.

   <li>Any software to be installed as a server should be scanned
       for buffer overflows, especially unsafe use of
       <code>strcat/strcpy/strcmp/sprintf</code>.  In general,
       <code>sprintf</code> should be replaced with <code>snprintf</code>.

   <li>Never use filenames instead of true security. There are numerous race
       conditions where you don't have proper control. For instance, an attacker
       who already has user privileges on your machines may replace files in 
       <code>/tmp</code> with symbolic links to more strategic files, such as
       <code>/etc/master.passwd</code>.  

   <li>For instance, both <code>fopen</code> and <code>freopen</code>
       <strong>create a new file or open an existing file</strong> for
       writing. An attacker may create a symbolic link from
       <code>/etc/master.passwd</code> to <code>/tmp/addrpool_dump</code>. The
       instant you open it, your password file is hosed. Yes, even with
       an <code>unlink</code> right before. You only narrow the window
       of opportunity.  Use <code>open</code> with
       <code>O_CREAT|O_EXCL</code> and <code>fdopen</code> instead.
                 
   <li>Another very common problem is the <code>mktemp</code>
       function. Heed the warnings of the bsd linker about its uses.  
       <strong>These must be fixed</strong>.
       This is not quite as simple as <code>s/mktemp/mkstemp/g</code>.  <br>
       Refer to
       <a href="http://www.openbsd.org/cgi-bin/man.cgi?sektion=3&amp;query=mktemp"
       ><code>mktemp(3)</code></a> for more information.
       Correct code using <code>mkstemp</code> includes the source to
       <code>ed</code> or <code>mail</code>.
       A rare instance of code that uses <code>mktemp</code> correctly 
       can be found in the <code>rsync</code> port.

   <li>Just because you can read it doesn't mean you should. A well-known hole
       of this nature was the <code>startx</code> problem.  As a setuid program,
       you could launch startx with any file as a script. If the file was not
       a valid shell script, a syntax error message would follow, along with the
       first line of the offending file, without any further permission check.
       Pretty handy to grab the first line of a shadow passwd file, considering
       these often start with root entry.   Do not open your file, and then do
       an <code>fstat</code> on the open descriptor to check if you should have
       been able to open it (or the attacker will play with /dev/rst0 and rewind
       your tape) -- open it with the correct uid/gid/grouplist set.

   <li>Don't use anything that forks a shell in setuid programs before dropping
       your privileges. This includes <code>popen</code> and 
       <code>system</code>.  
       Use <code>fork</code>, <code>pipe</code> and <code>execve</code> instead.

   <li>Pass open descriptors instead of filenames to other programs to 
       avoid race conditions.  Even if a program does not accept file 
       descriptors, you can still use <code>/dev/fd/0</code>.

   <li>Access rights are attached to file descriptors. If you need setuid rights
       to open a file, open that file, then drop your privileges. You can still
       access the open descriptor, but you have less to worry about. This is
       double-edged: even after dropping privileges, you should still watch out
       for those descriptors.

   <li>Avoid root setuid as much as you can. Basically, root can do anything,
       but root rights are very rarely needed, except maybe to create 
       socket ports with a number under 1024.  It is arguably better to 
       keep that under <code>inetd</code>
       control and just add the relevant entries to <code>inetd.conf</code>.  
       You must know the appropriate magic for writing daemons to achieve that.
       It could be argued that you have no business writing setuid programs 
       if you don't know how to do that.

   <li>Use setgid instead of setuid.  Apart from those specific files needed 
       by setgid programs, most files are not group-writable. Hence, a 
       security problem in a setgid program won't compromise your system as 
       much: with only group rights, the worst an intruder will be able to 
       do is hack a games score table or some such.
       See the <code>xkobo</code> port for an instance of such a change.

   <li>Don't trust group-writable files.  Even though they are audited, 
       setgid programs are not perceived as important potential security 
       holes. Hence stuff they can tamper with shouldn't be considered 
       sensitive information.

   <li>Don't trust your environment ! This involves simple things such as 
       your <code>PATH</code> (never use <code>system</code> with an 
       unqualified name, avoid <code>execvp</code>), but also more subtle 
       items such as your locale, timezone, termcap, and so on.  
       Be aware of transitivity: even though you're taking full precautions, 
       programs you call directly won't necessarily. <strong>Never</strong>
       use <code>system</code> in privileged programs, build your command 
       line, a controlled environment, and call <code>execve</code> directly. 
       The <code>perlsec</code> man page is a good tutorial on such problems.

   <li>Never use setuid shell-scripts.  These are inherently insecure. 
       Wrap them into some C code that ensures a proper environment.  
       On the other hand, OpenBSD features secure perl scripts.

   <li>Beware the dynamic loader. If you are running setuid, it will only 
       use trusted libraries that were scanned with ldconfig.  
       Setgid is not enough.

   <li>Dynamic libraries are tricky. C++ code sets a similar problem. 
       Basically, libraries may take some action based upon your environment 
       before your main program even gets to check its setuid status.   
       OpenBSD <code>issetugid</code> addresses this problem, from the 
       library writer point of view.  Don't try to port libraries unless you 
       understand this issue thoroughly.
  </ul>
  <h3><font color="#0000e0"><a name="Generic">Generic Porting Hints</a></font></h3>
  <ul>
   <li><code>__OpenBSD__</code> should be used sparingly, if at all.
       Constructs that look like
       <pre>
            #if defined(__NetBSD__) || defined(__FreeBSD__)
       </pre>
       are often inappropriate. Don't add blindly <code>__OpenBSD__</code>
       to it. Instead, try to figure out what's going on, and what actual
       feature is needed.   Manual pages are often useful, as they include
       historic comments, stating when a particular feature was incorporated
       into BSD.  Checking the numeric value of <code>BSD</code> against known
       releases is often the right way. See 
       <a href="http://www.netbsd.org/Documentation/pkgsrc/">The NetBSD pkgsrc guide</a>
       for more information.
   <li>Defining <code>BSD</code> is a bad idea. Try to include <code>sys/param.h</code>.
       This not only defines <code>BSD</code>, it also gives it a proper value.
       The right code fragment should look like:
       <pre>
           #if (defined(__unix__) || defined(unix)) &amp;&amp; !defined(USG)
           #include &lt;sys/param.h&gt;
           #endif
       </pre>
   <li>Test for features, not for specific OSes. In the long run, it is much
       better to test whether <code>tcgetattr</code> works than whether 
       you're running under BSD 4.3 or later, or SystemVR4.  These kind of 
       tests just confuse the issue. The way to go about it is, for instance, 
       to test for one particular system, set up a slew of 
       <code>HAVE_TCGETATTR</code> defines, then proceed to the next system.  
       This technique separates features tests from specific OSes.
       In a hurry, another porter can just add the whole set of 
       <code>-DHAVE_XXX</code> defines to the Makefile.  One may also write 
       or add to a configure script to check for that feature and add it 
       automatically.  As an example not to follow, check nethack 3.2.2
       source: it assumes loads of things based on the system type.  Most 
       of these assumptions are obsolete and no longer reflect reality: 
       POSIX functions are more useful than older BSD versus SystemV 
       differences, to the point that some traditional bsd functions are
       now only supported through compatibility libraries.

   <li>Avoid include files that include other includes that... First, because
       this is inefficient. Your project will end up including a file that 
       includes everything.  Also, because it makes some problems difficult 
       to fix. It becomes harder to <em>not</em> include one particular file 
       at a given point.

   <li>Avoid bizarre macro tricks.  Undefining a macro that was defined by a
       header file is a bad idea.  Defining macros to get some specific behavior
       from an include file is also a bad idea: compilation modes should be 
       global.  If you want POSIX behavior, say so, and 
       <code>#define POSIX_C_SOURCE</code>
       throughout the whole project, not when you feel like it.

   <li>Don't ever write system function prototypes.  All modern systems, 
       OpenBSD included, have a standard location for these prototypes. Likely
       places include <code>unistd.h</code>, <code>fcntl.h</code> or 
       <code>termios.h</code>.
       The man page frequently states where the prototype can be found.  
       You might need another slew of <code>HAVE_XXX</code> macros to 
       procure the right file.  Don't worry about including the same file 
       twice, include files have guards that prevent all kinds of nastiness.<br>
       If some broken system needs you to write the prototype, don't impose 
       on all other systems. Roll-your-own prototypes will break because they 
       may use types that are equivalent on your system, but are not portable 
       to other systems (<code>unsigned long</code> instead of 
       <code>size_t</code>), or get some <code>const</code> status wrong. 
       Also, some compilers, such as OpenBSD's own gcc, 
       are able to do a better job with some very frequent functions such as 
       <code>strlen</code> if you include the right header file.

   <li>Carefully check the build log for any compiler warnings.
       <ul><li>
           <code>implicit declaration of function foo()</code>
           indicates that a function prototype is missing.
           This means that the compiler will assume the return type
           to be an integer.
           Where the function actually returns a pointer, on 64-bit
           platforms it will be truncated, usually causing a segmentation
           fault.
       </ul>

   <li>Don't use the name of a standard system function for anything else.
       If you want to write your own function, give it its own name, and 
       call that function everywhere.  If you wish to revert to the 
       default system function, you just need to comment your code out, 
       and define your own name to the system function. Don't do it the 
       other way round. Code should look like this
<pre>
       /* prototype part */
       #ifdef USE_OWN_GCVT
       char *foo_gcvt(double number, size_t ndigit, char *buf);
       #else
       /* include correct file */
       #include &lt;stdlib.h&gt;
       /* use system function */
       #define foo_gcvt  gcvt
       #endif

       /* definition part */
       #ifdef USE_OWN_GCVT
       char *foo_gcvt(double number, size_t ndigit, char *buf)
          {
          /* proper definition */
          }
a23 64
       /* typical use */
       s = foo_gcvt(n, 15, b);
       </pre>
  </ul>
  <h3><font color="#0000e0"><a name="Other">Other Helpful Hints</a></font></h3>
  <ul>
   <li>Recent versions of <code>bsd.port.mk</code> set the installers
       path. Specifically, they set <code>/usr/bin</code> and
       <code>/bin</code> to be searched <em>before</em>
       <code>/usr/local/bin</code> and <code>/usr/X11R6/bin</code>.
   <li>Do <em>NOT</em> generate shared libraries if
       <code>${NO_SHARED_LIBS}</code> is set to yes (beware, it can be defined
       only after inclusion of <code>bsd.port.mk</code>). If your port has
       a GNU configure simply add the line
       <code>CONFIGURE_ARGS += ${CONFIGURE_SHARED}</code> to the Makefile.
   <li>It is OK to rely on a feature that appeared in a recent version of
       <code>bsd.port.mk</code>, as people are supposed to update their
       whole ports tree, including <code>bsd.port.mk</code>.
       NEED_VERSION is now obsolete.
   <li>Prefer using <code>update-plist</code> to generate and update 
       packing-lists instead of doing things manually.
       You can comment unwanted lines out.  
       <code>update-plist</code> can detect most file types and copy most
       extra annotations correctly.
   <li>Add <code>USE_SYSTRACE=Yes</code> to <code>/etc/mk.conf</code> to
       detect misbehaving scripts, makefiles, etc.
   <li>In OpenBSD <code>curses.h/libcurses/libtermlib</code> are the
       ``new curses''.  Change:<br>
       <code>ncurses.h ==&gt; curses.h</code><br>
       ``old (BSD) curses'' is available by defining 
       <code>_USE_OLD_CURSES_</code>
       before including <code>curses.h</code> (usually in a Makefile) and
       linking with <code>-locurses</code>.
   <li>In OpenBSD, terminal discipline has been upgraded from the older BSD
       <code>sgtty</code> to the newer POSIX <code>tcgetattr</code> family.
       Avoid the older style in new code.  Some code may define 
       <code>tcgetattr</code> to be a synonym for the older 
       <code>sgtty</code>, but this is at best a stopgap measure on OpenBSD.  
       The <code>xterm</code> source code is a very good example of
       what not to do.  Try to get your system functionality right: you 
       want a type that remembers the state of your terminal 
       (possible typedef), you want a function that extracts the current 
       state, and a function that sets the new state.
       Functions that modify this state are more difficult, as they tend 
       to vary depending upon the system.  Also, don't forget that you will 
       have to handle cases where you are not connected to a terminal, 
       and that you need to handle signals: not only termination, but 
       also background (<code>SIGTSTP</code>). You should always leave 
       the terminal in a sane state.  Do your tests under an older shell, 
       such as sh, which does not reset the terminal in any way at
       program's termination.
   <li>The newer termcap/terminfo and curses, as included with OpenBSD, 
       include standard sequences for controlling color terminals.  You 
       should use these if possible, reverting to standard ANSI color 
       sequences on other systems.  However, some terminal descriptions
       have not been updated yet, and you may need to be able to specify 
       these sequences manually.  This is the way vim handles it.  This is 
       not strictly necessary. Except for privileged programs, it is 
       generally possible to override a termcap definition through the 
       <code>TERMCAP</code> variable and get it to work properly.
   <li>Signal semantics are tricky, and vary from one system to another. 
       Use <code>sigaction</code> to ensure a specific semantics, along 
       with other system calls referenced in the corresponding  manpage.
  </ul>
d27 1
a27 1
<br><small>$OpenBSD: porting.html,v 1.58 2009/01/27 13:19:14 sthen Exp $</small>
@


1.58
log
@Ask people to check for compiler warnings and start a sub-list
giving examples of things that can cause problems and why (starting
with "implicit declaration of function").

Joint work with jasper.
@
text
@d42 1
a42 1
   <a href="checklist.html">checklist</a>.
d44 1
a44 1
   Test, then re-test, and finally test again!
d79 1
a79 1
   <li>OpenBSD porting <a href="checklist.html">checklist</a>.
d98 1
a98 1
   <li><a href="audio-port.html">Porting audio applications to OpenBSD</a>.
d420 1
a420 1
<br><small>$OpenBSD: porting.html,v 1.57 2007/06/18 15:27:16 espie Exp $</small>
@


1.57
log
@prompted by some email over on tech-pkg@@netbsd: explain what the role
of a MAINTAINER is supposed to be.
@
text
@d15 1
a15 1
        content="This document copyright 1997-2006 by OpenBSD.">
d318 11
d420 1
a420 1
<br><small>$OpenBSD: porting.html,v 1.56 2006/11/04 10:53:37 espie Exp $</small>
@


1.56
log
@add placeholders linking to porting/update.html, to be fleshed out a bit
later.
document the libtool changes with respect to shared libraries.
@
text
@d55 12
d409 1
a409 1
<br><small>$OpenBSD: porting.html,v 1.55 2006/05/02 17:31:32 jolan Exp $</small>
@


1.55
log
@pr/5097, grammar
@
text
@d46 4
d68 1
d397 1
a397 1
<br><small>$OpenBSD: porting.html,v 1.54 2006/05/02 04:14:11 ray Exp $</small>
@


1.54
log
@Simplify and clarify mktemp(3) by removing words and adding a link
to the online manuals.

Update copyright year.

``This is a good thing.'' nick@@
@
text
@d28 1
a28 1
   The most important thing you can is to <strong>communicate</strong>.
d392 1
a392 1
<br><small>$OpenBSD: porting.html,v 1.53 2005/09/26 08:52:11 grunk Exp $</small>
@


1.53
log
@correct broken link to NetBSD porting guide, via www@@ from David JL
<izi at izimobil dot org>, thanks
@
text
@d15 1
a15 1
        content="This document copyright 1997-2004 by OpenBSD.">
d151 3
a153 2
       Refer to the <code>mktemp(3)</code> man page of OpenBSD current 
       for more indications.
d392 1
a392 1
<br><small>$OpenBSD: porting.html,v 1.52 2005/01/02 21:25:08 msf Exp $</small>
@


1.52
log
@- add blurb about using USE_SYSTRACE to detect misbehaving build systems.
  Suggested by Matthias Killian

  ok me pval@@ mbalmer@@
@
text
@d243 1
a243 1
       <a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/Packages.txt">the NetBSD package guide</a>
d391 1
a391 1
<br><small>$OpenBSD: porting.html,v 1.51 2004/11/27 15:14:18 espie Exp $</small>
@


1.51
log
@link in new documents
@
text
@d348 2
d391 1
a391 1
<br><small>$OpenBSD: porting.html,v 1.50 2004/11/26 15:26:10 alek Exp $</small>
@


1.50
log
@ports@@OpenBSD.ORG -> ports@@openbsd.org

do it nick@@
@
text
@d75 6
a80 2
   important</strong> as soon as you use shared libraries, especially if
   pkg_update is to work one day...
d389 1
a389 1
<br><small>$OpenBSD: porting.html,v 1.49 2004/08/10 13:44:23 espie Exp $</small>
@


1.49
log
@strongly recommend update-plist.
@
text
@d86 1
a86 1
       <a href="mailto:ports@@openbsd.org">ports@@OpenBSD.ORG</a>.
d385 1
a385 1
<br><small>$OpenBSD: porting.html,v 1.48 2004/07/15 16:18:22 xsa Exp $</small>
@


1.48
log
@
FreeBSD uses the $FreeBSD$ tag, not the $Id$ one anymore;
ok naddy@@.
@
text
@d331 1
a331 1
       <code>${NO_SHARED_LIBS}</code> is defined (beware, it can be defined
d339 5
d385 1
a385 1
<br><small>$OpenBSD: porting.html,v 1.47 2004/02/19 03:30:52 nick Exp $</small>
@


1.47
log
@
bump copyrights to 2004 on actively maintained pages.
@
text
@d108 1
a108 3
       leave their tag in the Makefile, too.  However, replace the FreeBSD
       <code>&#36;Id&#36;</code> tag with the
       <code>&#36;FreeBSD&#36;</code> tag.
d380 1
a380 1
<br><small>$OpenBSD: porting.html,v 1.46 2003/06/22 13:24:32 sturm Exp $</small>
@


1.46
log
@when creating ports users/groups, check db/user.list

espie@@ ok
@
text
@d15 1
a15 1
        content="This document copyright 1997-2002 by OpenBSD.">
d382 1
a382 1
<br><small>$OpenBSD: porting.html,v 1.45 2003/01/09 22:18:45 miod Exp $</small>
@


1.45
log
@Since there is a libncurses now, there is no need to patch ports to link
against -lcurses instead of -lncurses.
@
text
@d102 2
d382 1
a382 1
<br><small>$OpenBSD: porting.html,v 1.44 2002/07/06 09:32:08 pvalchev Exp $</small>
@


1.44
log
@Put notes that NEED_VERSION is now obsolete with brief notes on why.
@
text
@a341 1
       <code>-lncurses ==&gt; -lcurses</code><br>
d380 1
a380 1
<br><small>$OpenBSD: porting.html,v 1.43 2002/06/18 01:44:06 jsyn Exp $</small>
@


1.43
log
@make the OpenBSD logo on each page a link back to index.html; from
s@@smith.net, ok deraadt@@
@
text
@d335 4
a338 3
   <li>If you rely on a feature that appeared in a recent version of
       <code>bsd.port.mk</code> don't forget to add a line
       <code>NEED_VERSION = x.yy</code> in the Makefile.
d381 1
a381 1
<br><small>$OpenBSD: porting.html,v 1.42 2002/05/12 17:34:30 pvalchev Exp $</small>
@


1.42
log
@repair bad links; from moritz@@jodeit.org
@
text
@d20 1
a20 1
  <img height=30 width=141 src=images/smalltitle.gif alt="[OpenBSD]" >
d380 1
a380 1
<br><small>$OpenBSD: porting.html,v 1.41 2002/02/18 23:40:18 rohee Exp $</small>
@


1.41
log
@&amp; police again. This should validate now.
@
text
@d83 1
a83 1
       <a href="http://www.freebsd.org/porters-handbook/index.html">FreeBSD
d103 1
a103 1
       this page's <a href="#security">security section</a>.
d380 1
a380 1
<br><small>$OpenBSD: porting.html,v 1.40 2002/01/13 14:55:37 jufi Exp $</small>
@


1.40
log
@
copyright extended to 2002
@
text
@d65 1
a65 1
   <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bsd.port.mk&sektion=5">bsd.port.mk(5)</a>.
d380 1
a380 1
<br><small>$OpenBSD: porting.html,v 1.39 2001/11/19 17:26:57 horacio Exp $</small>
@


1.39
log
@-2001
-typo
@
text
@d15 1
a15 1
        content="This document copyright 1997-2001 by OpenBSD.">
d380 1
a380 1
<br><small>$OpenBSD: porting.html,v 1.38 2001/11/16 13:34:12 espie Exp $</small>
@


1.38
log
@link in library stuff. Reorder available porting info.
Discourage looking at bsd.port.mk directly, read the manpage first.
@
text
@d15 1
a15 1
        content="This document copyright 1997-1999 by OpenBSD.">
d69 1
a69 1
       the file itself, but must of the useful information is now
d380 1
a380 1
<br><small>$OpenBSD: porting.html,v 1.37 2001/09/10 19:26:32 jufi Exp $</small>
@


1.37
log
@
powerpc.html -> macppc.html
copyright notices cleaned up.
All work by David Krause <openbsd@@davidkrause.com>
@
text
@d63 15
a77 4
   <li>The file <code>/usr/share/mk/bsd.port.mk</code>.  This is the
       system ports makefile included at the end of each individual
       port makefile.  Read the comments at the start of the makefile.
       They do a good job of describing the available make options.
a84 4
   <li>OpenBSD porting <a href="checklist.html">checklist</a>.
   <li>Some differences from other BSD port systems, mostly a summary
   of <a href="porting/diffs.html">infrastructure differences</a>.
   <li><a href="audio-port.html">Porting audio applications to OpenBSD</a>.
d380 1
a380 1
<br><small>$OpenBSD: porting.html,v 1.36 2001/08/29 00:04:03 horacio Exp $</small>
@


1.36
log
@redundant link
@
text
@d15 1
a15 1
        content="This document copyright 1997-1999 by the OpenBSD project">
d373 1
a373 1
<br><small>$OpenBSD: porting.html,v 1.35 2001/07/27 23:42:52 naddy Exp $</small>
@


1.35
log
@- add indices; submitted by William C. Allen <allenwc@@infomatrix.ca>
- fix capitalization in headers
- XFree -> XFree86
@
text
@a105 1
  <a name=security></a>
d373 1
a373 1
<br><small>$OpenBSD: porting.html,v 1.34 2001/05/13 20:16:52 jufi Exp $</small>
@


1.34
log
@
Typos found by mpech@@prosoft.org.lv
@
text
@d51 11
a61 2
  <p>
  <h3><font color="#0000e0">Available Porting Information</font></h3>
d81 1
a81 1
  <h3><font color="#0000e0">OpenBSD Porting Policy</font></h3>
d107 1
a107 1
  <h3><font color="#0000e0">Security recommendations</font></h3>
d220 1
a220 1
  <h3><font color="#0000e0">Generic porting hints</font></h3>
d318 1
a318 1
  <h3><font color="#0000e0">Other Helpful Hints</font></h3>
d374 1
a374 1
<br><small>$OpenBSD: porting.html,v 1.33 2001/05/12 12:36:21 naddy Exp $</small>
@


1.33
log
@Fix references to the FreeBSD Porter's Handbook.
@
text
@d38 1
a38 1
   port and a port that will slowly be abandonned by everyone.
d365 1
a365 1
<br><small>$OpenBSD: porting.html,v 1.32 2000/09/12 00:16:17 deraadt Exp $</small>
@


1.32
log
@spelling
@
text
@d62 1
a62 1
   <li>Section 19.2.5 of the
d64 1
a64 1
       Handbook</a>.  This is the FreeBSD porting bible.
d365 1
a365 1
<br><small>$OpenBSD: porting.html,v 1.31 2000/07/10 19:35:43 jufi Exp $</small>
@


1.31
log
@
ports: pre-order -> order, minor typos in the rest.
@
text
@d34 1
a34 1
   only developping on Linux and feel like ignoring the rest of the Unix
d365 1
a365 1
<br><small>$OpenBSD: porting.html,v 1.30 2000/06/30 21:51:02 espie Exp $</small>
@


1.30
log
@Fix bad link. Reported by Horacio MG (and I forgot to credit William
Yodlowsky for the comment fix in bsd.port.mk, oops)
@
text
@d196 1
a196 1
   <li>Never used setuid shell-scripts.  These are inherently insecure. 
d365 1
a365 1
<br><small>$OpenBSD: porting.html,v 1.29 2000/04/07 22:09:28 espie Exp $</small>
@


1.29
log
@Link porting/diffs.html in.
@
text
@d63 1
a63 1
       <a href="http://www.freebsd.org/handbook/porting.html">FreeBSD
d365 1
a365 1
<br><small>$OpenBSD: porting.html,v 1.28 2000/03/25 02:29:50 wvdputte Exp $</small>
@


1.28
log
@Small fixups on $OpenBSD$ tag on bottom of page, make it look more uniform
@
text
@d66 3
a68 1
        <li><a href="audio-port.html">Porting audio applications to OpenBSD</a>.
d365 1
a365 1
<br><small>$OpenBSD: porting.html,v 1.27 2000/02/23 10:54:29 espie Exp $</small>
@


1.27
log
@Repair repairs.
Thanks to rohee@@
@
text
@d363 1
a363 1
  <br><small>$OpenBSD: porting.html,v 1.26 2000/02/21 20:33:49 espie Exp $</small>
@


1.26
log
@Revert unintended change.
@
text
@d66 1
a66 1
        <li><a href="audio.html">Porting audio applications to OpenBSD</a>.
d363 1
a363 1
  <br><small>$OpenBSD: porting.html,v 1.25 2000/02/15 15:41:57 espie Exp $</small>
@


1.25
log
@Hammer down the single, most important item in ports creation:
*communicate*.

A port doesn't exist in vacuum.

*People* wrote that software. Very often,
*they can help*.
@
text
@d42 1
a42 1
   <a href="porting/checklist.html">checklist</a>.
d65 2
a66 2
   <li>OpenBSD porting <a href="porting/checklist.html">checklist</a>.
        <li><a href="porting/audio.html">Porting audio applications to OpenBSD</a>.
d363 1
a363 1
  <br><small>$OpenBSD: porting.html,v 1.24 1999/12/22 00:58:19 rohee Exp $</small>
@


1.24
log
@small HTML cleanup
@
text
@d28 12
d42 1
a42 1
   <a href="checklist.html">checklist</a>.
d65 2
a66 2
   <li>OpenBSD porting <a href="checklist.html">checklist</a>.
        <li><a href="audio-port.html">Porting audio applications to OpenBSD</a>.
d363 1
a363 1
  <br><small>$OpenBSD: porting.html,v 1.23 1999/12/20 23:05:46 rohee Exp $</small>
@


1.23
log
@& is spelled &amp; in HTML...

tidy (http://www.w3.org/People/Ragget/tidy/) found it, port
coming next week
@
text
@d60 1
a60 1
   <li>OpenBSD does NOT use /usr/local/etc/rc.d.<br>
d74 1
a74 1
   <li>Be sure to add the <code>$</code><code>OpenBSD$</code> CVS tag to
d77 2
a78 2
       <code>$</code><code>Id$</code> tag with the
       <code>$</code><code>FreeBSD$</code> tag.
d351 1
a351 1
  <br><small>$OpenBSD: porting.html,v 1.22 1999/04/09 19:41:01 rohee Exp $</small>
@


1.22
log
@O_EXCL and not O_EXCLUDE garath@@ntplx.net
@
text
@d216 1
a216 1
           #if (defined(__unix__) || defined(unix)) && !defined(USG)
d351 1
a351 1
  <br><small>$OpenBSD: porting.html,v 1.21 1999/03/13 18:15:43 rohee Exp $</small>
@


1.21
log
@More on shared libs
@
text
@d112 1
a112 1
       <code>O_CREAT|O_EXCLUDE</code> and <code>fdopen</code> instead.
d351 1
a351 1
  <br><small>$OpenBSD: porting.html,v 1.20 1999/02/27 16:49:44 rohee Exp $</small>
@


1.20
log
@HTML cleanup, now passes http://validator.w3.org
@
text
@d302 4
a305 1
       <code>${NO_SHARED_LIBS}</code> is defined.
d351 1
a351 1
  <br><small>$OpenBSD: porting.html,v 1.19 1999/02/27 16:37:29 rohee Exp $</small>
@


1.19
log
@Some precisions and updates
@
text
@d1 1
d15 1
a15 1
        content="This document copyright 1997 by the OpenBSD project">
d22 1
a22 1
  <h2><font color=#e00000>Building an OpenBSD port</font></h2>
d36 1
a36 1
   its address to <a href=mailto:ports@@openbsd.org>ports@@openbsd.org</a>
d40 1
a40 1
  <h3><font color=#0000e0>Available Porting Information</font></h3>
d58 1
a58 1
  <h3><font color=#0000e0>OpenBSD Porting Policy</font></h3>
d83 2
a84 2
  <a name=security>
  <h3><font color=#0000e0>Security recommendations</font></h3>
d91 1
a91 1
   <li>Do <emph>not</emph> use alpha or beta code when preparing a port.  Use the
d197 1
a197 1
  <h3><font color=#0000e0>Generic porting hints</font></h3>
d295 1
a295 1
  <h3><font color=#0000e0>Other Helpful Hints</font></h3>
d347 2
a348 2
  <a href=mailto:www@@openbsd.org>www@@openbsd.org</a>
  <br><small>$OpenBSD: porting.html,v 1.18 1999/02/08 13:59:20 rohee Exp $</small>
@


1.18
log
@typo
@
text
@d102 1
a102 1
       <code>/etc/passwd</code>.  
d107 1
a107 1
       <code>/etc/passwd</code> to <code>/tmp/addrpool_dump</code>. The
d300 5
a304 2
   <li>Do <em>NOT</em> generate shared libraries for <code>${MACHINE_ARCH} ==
       alpha</code>
d347 1
a347 1
  <br><small>$OpenBSD: porting.html,v 1.17 1999/01/31 23:29:28 espie Exp $</small>
@


1.17
log
@Fix my typos, update url.
Noticed by krw@@tcn.net
@
text
@d107 1
a107 1
       <code>/etc/paswd</code> to <code>/tmp/addrpool_dump</code>. The
d344 1
a344 1
  <br><small>$OpenBSD: porting.html,v 1.16 1998/12/21 21:48:41 espie Exp $</small>
@


1.16
log
@Specific caveat: fopen/freopen for writing.
@
text
@d98 1
a98 1
   <li>Never use filenames insteaad of true security. There are numerous race
d114 1
a114 1
       function. Head the warnings of the bsd linker about its uses.  
d209 1
a209 1
       <a href="http://www.netbsd.org/Documentation/netbsd/Packages.txt">the NetBSD package guide</a>
d344 1
a344 1
  <br><small>$OpenBSD: porting.html,v 1.15 1998/12/20 17:08:45 espie Exp $</small>
@


1.15
log
@comment some more about mktemp/mkstemp
reformat a few lines
rephrase a few details for more clarity
@
text
@d98 1
a98 1
   <li>Never use filenames when you need security.   There are numerous race
d103 9
d113 1
a113 1
   <li>For instance, one very common problem is the <code>mktemp</code>
d344 1
a344 1
  <br><small>$OpenBSD: porting.html,v 1.14 1998/12/07 23:06:48 espie Exp $</small>
@


1.14
log
@Specific info about hw dependencies and audio applications.
@
text
@d4 1
a4 1
	content="text/html; charset=iso-8859-1">
d6 1
a6 1
	content="document">
d8 1
a8 1
	CONTENT="How to make an OpenBSD port">
d10 1
a10 1
	content="openbsd,ports">
d12 1
a12 1
	content="global">
d14 1
a14 1
	content="This document copyright 1997 by the OpenBSD project">
d53 1
a53 1
	<li><a href="audio-port.html">Porting audio applications to OpenBSD</a>.
d61 7
a67 7
	 thanks to NFS.  For this reason, configuration files that are specific
	 to a given machine can't be stored under <code>/usr/local</code>,
	 <code>/etc</code> is the central repository for per machine
	 configuration files.  Moreover, OpenBSD policy is to never update 
	 files under <code>/etc</code> automatically.  Ports that need some
	 specific boot setup should advise the administrator about what to do
	 instead of blindly installing files.
d102 12
a113 3
       <code>/etc/passwd</code>.  For instance, the bsd linker warns about
       <code>mktemp</code> uses.  <strong>These must be fixed</strong>.
       This is not quite as simple as <code>s/mktemp/mkstemp/g</code>.  
d123 1
a123 1
       been able to open it (or the attacked will play with /dev/rst0 and rewind
d127 2
a128 1
       your privileges. This includes <code>popen</code> and <code>system</code>.
d131 3
a133 3
   <li>Pass open descriptors instead of filenames to other programs to avoid race
       conditions.  Even if a program does not accept file descriptors, you can 
       still use <code>/dev/fd/0</code>.
d135 1
a135 1
   <li>Access rights are attached to file descriptors.  If you need setuid rights
d142 3
a144 2
       but root rights are very rarely needed, except maybe to create socket ports with 
       a number under 1024.  It is arguably better to keep that under <code>inetd</code>
d147 2
a148 2
       It could be argued that you have no business writing setuid programs if you don't
       know how to do that.
d150 5
a154 4
   <li>Use setgid instead of setuid.  Apart from those specific files needed by setgid
       programs, most files are not group-writable. Hence, a security problem in a setgid
       program won't compromise your system as much: with only group rights, the worst
       an intruder will be able to do is hack a games score table or some such.
d157 29
a185 22
   <li>Don't trust group-writable files.  Even though they are audited, setgid programs
       are not perceived as important potential security holes. Hence stuff they can tamper
       with shouldn't be considered sensitive information.

   <li>Don't trust your environment ! This involves simple things such as your <code>PATH</code>
       (never use <code>system</code> with an unqualified name), but also more subtle items
       such as your locale, timezone, termcap, and so on.  Be aware of transitivity: even though you're
       taking full precautions, programs you call directly won't necessarily. <strong>Never</strong>
       use <code>system</code> in privileged programs, build your command line, a controlled environment,
       and call <code>execvp</code> directly. The <code>perlsec</code> man page is a good tutorial on
       such problems.

   <li>Never used setuid shell-scripts.  These are inherently insecure. Wrap them into some C code
       that ensures a proper environment.   On the other hand, OpenBSD features secure perl scripts.

   <li>Beware the dynamic loader. If you are running setuid, it will only use trusted libraries
       that were scanned with ldconfig.  Setgid is not enough.

   <li>Dynamic libraries are tricky. C++ code sets a similar problem. Basically, libraries may take
       some action based upon your environment before your main program even gets to check its setuid
       status.   OpenBSD <code>issetugid</code> addresses this problem, from the library writer point
       of view.  Don't try to port libraries unless you understand this issue thoroughly.
d211 14
a224 11
       better to test whether <code>tcgetattr</code> works than whether you're running
       under BSD 4.3 or later, or SystemVR4.  These kind of tests just confuse the
       issue. The way to go about it is, for instance, to test for one particular
       system, set up a slew of <code>HAVE_TCGETATTR</code> defines, then proceed to
       the next system.  This technique separates features tests from specific OSes.
       In a hurry, another porter can just add the whole set of <code>-DHAVE_XXX</code> 
       defines to the Makefile.  One may also write or add to a configure script to check for
       that feature and add it automatically.  As an example not to follow, check nethack 3.2.2
       source: it assumes loads of things based on the system type.  Most of these assumptions
       are obsolete and no longer reflect reality: POSIX functions are more useful than older
       BSD versus SystemV differences, to the point that some traditional bsd functions are
d228 4
a231 3
       this is inefficient. Your project will end up including a file that includes
       everything.  Also, because it makes some problems difficult to correct. It
       becomes harder to <em>not</em> include one particular file at a given point.
d235 3
a237 2
       from an include file is also a bad idea: compilation modes should be global.
       If you want POSIX behavior, say so, and <code>#define POSIX_C_SOURCE</code>
d242 6
a247 5
       places include <code>unistd.h</code>, <code>fcntl.h</code> or <code>termios.h</code>.
       The man page frequently states where the prototype lies.  You might need
       another slew of <code>HAVE_XXX</code> macros to procure the right file.
       Don't worry about including the same file twice, include files have guards
       that prevent all kinds of nastiness.<br>
d249 5
a253 4
       on all other systems. Roll-your-own prototypes will break because they may 
       use types that are equivalent on your system, but are not portable to other 
       systems (<code>unsigned long</code> instead of <code>size_t</code>), or get some
       <code>const</code> status wrong. Also, some compilers, such as OpenBSD's own gcc, 
d258 5
a262 4
       If you want to write your own function, give it its own name, and call that
       function everywhere.  If you wish to revert to the default system function,
       you just need to comment your code out, and define your own name to the 
       system function. Don't do it the other way round. Code should look like this
d278 2
a279 2
	  /* proper definition */
	  }
d287 5
a291 6
   <li>Do not assume <code>/usr/local/bin</code> or
       <code>/usr/X11R6/bin</code> is in the installers path.  A good
       way to verify this is to create and install your port while
       running as <code>root</code> with only <code>/bin</code> and
       <code>/usr/bin</code> in your path.
   <li>Do NOT generate shared libraries for <code>${MACHINE_ARCH} ==
d295 4
a298 3
       <code>ncurses.h ==> curses.h</code><br>
       <code>-lncurses ==> -lcurses</code><br>
       ``old (BSD) curses'' is available by defining <code>_USE_OLD_CURSES_</code>
d300 1
a300 1
       linking with <code>-lcurses</code>.
d303 15
a317 13
       Avoid the older style in new code.  Some code may define <code>tcgetattr</code> 
       to be a synonym for the older <code>sgtty</code>, but this is at best a stopgap
       measure on OpenBSD.  The <code>xterm</code> source code is a very good example of
       what not to do.
       Try to get your system functionality right: you want a type that remembers
       the state of your terminal (possible typedef), you want a function that 
       extracts the current state, and a function that sets the new state.
       Functions that modify this state are more difficult, as they tend to vary
       depending upon the system.  Also, don't forget that you will have to handle
       cases where you are not connected to the terminal, and that you need to
       handle signals: not only termination, but also getting put in the background
       you should leave your terminal in a sane state.  Do your tests under an
       older shell, such as sh, which does not reset the terminal in any way at
d319 8
a326 6
   <li>The newer termcap/terminfo and curses, as included with OpenBSD, include standard sequences
       for controlling color terminals.  You should use these if possible, reverting
       to standard ANSI color sequences on other systems.  However, some terminal descriptions
       have not been updated yet, and you may need to be able to specify these sequences manually.
       This is the way vim5.1 handles it.  This is not strictly necessary. Except for privileged
       programs, it is generally possible to override a termcap definition through the 
d328 3
a330 2
   <li>Signal semantics are tricky, and vary from one system to another. Use <code>sigaction</code>
       to ensure a specific semantics, along with other system calls referenced in its manpage.
d335 1
a335 1
  <br><small>$OpenBSD: porting.html,v 1.13 1998/11/08 16:42:26 art Exp $</small>
@


1.13
log
@correct link to the NetBSD package docs. From <naddy@@mips.rhein-neckar.de>
@
text
@d29 1
a29 1
   checklist.
d53 1
d303 1
a303 1
  <br><small>$OpenBSD: porting.html,v 1.12 1998/08/18 02:53:36 deraadt Exp $</small>
@


1.12
log
@correct file open thing
@
text
@d46 3
a48 3
       <a href="http://www.netbsd.org/Documentation/netbsd/Packages.txt">NetBSD
       Package System</a> documentation.  This document describes NetBSD's
       version of the FreeBSD ports system and is quite helpful.
d302 1
a302 1
  <br><small>$OpenBSD: porting.html,v 1.11 1998/08/18 02:49:25 millert Exp $</small>
@


1.11
log
@correct some ncurses/ocurses and sgtty niggles
@
text
@d111 4
a114 3
       these often start with root entry.   Once again, don't trust filenames:
       open your file, and do an <code>fstat</code> on the open descriptor to 
       check the actual rights.
d302 1
a302 1
  <br><small>$OpenBSD: porting.html,v 1.10 1998/08/13 23:11:18 espie Exp $</small>
@


1.10
log
@Add numerous porting hints, including security concerns.

There are probably some blatant inaccuracies or mistakes, especially where
security is concerned, so please review this file.
@
text
@d269 5
a273 3
       ``Old curses'' is available as <code>ocurses.h/libocurses</code>.
   <li>In OpenBSD, terminal discipline has been upgraded from the older <code>sgtty</code>
       standard BSD <code>fcntl</code> to the newer POSIX <code>tcgetattr</code> family.
d275 1
a275 1
       to be a synonym for the older <code>fcntl</code>, but this is at best a stopgap
d288 1
a288 1
   <li>The newer termcap and curses, as included with OpenBSD, include standard sequences
d301 1
a301 1
  <br><small>$OpenBSD: porting.html,v 1.9 1998/08/12 22:13:02 marc Exp $</small>
@


1.9
log
@update porting page: how to submit a port; update port status
@
text
@d70 14
a83 2
   <li>OpenBSD requests all <code>mktemp</code> warnings to be fixed.
       This is not as simple as <code>s/mktemp/mkstemp/g</code>.  If
d87 5
d96 159
a254 10
   <li>Be sure to add the <code>$</code><code>OpenBSD$</code> CVS tag to
       the Makefile.  If importing a port from another system be sure to
       leave their tag in the Makefile, too.  However, replace the FreeBSD
       <code>$</code><code>Id$</code> tag with the
       <code>$</code><code>FreeBSD$</code> tag.
   <li>Do NOT use alpha or beta code when preparing a port.  Use the
       latest regular or patch release.
   <li>The goal is to get all ported applications to support OpenBSD.  To
       achieve this goal you MUST feed any OpenBSD patches back to the
       application maintainer.
d270 25
d299 1
a299 1
  <br><small>$OpenBSD: porting.html,v 1.8 1998/07/30 23:04:47 marc Exp $</small>
@


1.8
log
@Fix pr 555; update port status; add a porting checklist page
@
text
@d27 3
a29 4
   This page will, when completed, provide the necessary guidance.
   Until then, however, please look at the available porting information,
   the OpenBSD porting policy, and the other helpful hints provided
   on this page.
d31 7
a37 3
   If you are not capable of doing all the steps in a port, please do as
   much as you can before submitting it.  When you do submit the port,
   make sure you point out which parts you didn't do.
d52 1
a52 1
   <li>Marc's porting <a href="checklist.html">checklist</a>.
d108 1
a108 1
  <br><small>$OpenBSD: porting.html,v 1.7 1998/07/30 14:58:43 espie Exp $</small>
@


1.7
log
@
More detailed explanation of /usr/local/etc vs. /etc
@
text
@d46 1
a46 1
   <li>Section 17.2.5 of the
d49 1
d57 7
a63 7
		 thanks to NFS.  For this reason, configuration files that are specific
		 to a given machine can't be stored under <code>/usr/local</code>,
		 <code>/etc</code> is the central repository for per machine
		 configuration files.  Moreover, OpenBSD policy is to never update 
		 files under <code>/etc</code> automatically.  Ports that need some
		 specific boot setup should advise the administrator about what to do
		 instead of blindly installing files.
d105 1
a105 1
  <br><small>$OpenBSD: porting.html,v 1.6 1998/06/19 15:06:56 pauls Exp $</small>
@


1.6
log
@Much work on image size tags.
@
text
@d55 8
a62 3
       <code>/usr/local</code> is often NFS mounted; shared between
       machines in a cluster.  For this reason per machine configuration
       files are places in <code>/etc</code>.
d104 1
a104 1
  <br><small>$OpenBSD: porting.html,v 1.5 1998/03/05 22:47:53 marc Exp $</small>
@


1.5
log
@note ports should not use alpha/beta code;
note requirement to feed back port patches to app maintainer;
update minicom status
@
text
@d19 1
a19 1
  <img src=images/smalltitle.gif alt="[OpenBSD]" >
d97 1
a97 1
  <a href="index.html"><img src=back.gif border=0 alt=OpenBSD></a> 
d99 1
a99 1
  <br><small>$OpenBSD: porting.html,v 1.4 1998/02/15 08:27:53 marc Exp $</small>
@


1.4
log
@Niklas suggests I note the OpenBSD cvs tag
@
text
@d75 5
d99 1
a99 1
  <br><small>$OpenBSD: porting.html,v 1.3 1998/02/15 08:04:24 marc Exp $</small>
@


1.3
log
@general clean-up, reference porting.html and the ports mailing list.
@
text
@d70 5
d94 1
a94 1
  <br><small>$OpenBSD: porting.html,v 1.2 1998/02/15 06:46:41 marc Exp $</small>
@


1.2
log
@spell-check, fix typos.
@
text
@d21 1
a21 1
  <h2><font color=#0000e0>Building an OpenBSD port</font></h2>
d89 1
a89 1
  <br><small>$OpenBSD: porting.html,v 1.1 1998/02/15 06:02:57 marc Exp $</small>
@


1.1
log
@place holder for porting instructions.  This page is mentioned in the
porting README, so I thought I'd better add it.
@
text
@d46 1
a46 1
   <li>ChapterSection 17.2.5 of the
d63 1
a63 1
       you are not absulutly sure of what you are doing please request
d89 1
a89 1
  <br><small>$OpenBSD: porting.html,v 1.17 1998/01/25 05:44:48 joey Exp $</small>
@

