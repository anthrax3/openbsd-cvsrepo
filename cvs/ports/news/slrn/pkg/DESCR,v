head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.56
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.54
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.52
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.48
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.50
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.46
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.44
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.42
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.40
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.38
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.36
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.34
	OPENBSD_5_0:1.4.0.32
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.30
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.28
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.26
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.24
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.22
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.20
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.18
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.16
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.14
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.12
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.10
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.12
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_TRACKING_SWITCH:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.1.1.1.0.12
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.10
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	slrn0_9_4_2:1.1.1.1
	slrn:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2003.12.15.21.55.15;	author naddy;	state Exp;
branches;
next	1.3;

1.3
date	2001.04.10.14.59.16;	author lebel;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.01.18.45.56;	author jakob;	state Exp;
branches;
next	1.1;

1.1
date	97.12.20.02.46.05;	author joey;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.12.20.02.46.05;	author joey;	state Exp;
branches
	1.1.1.1.12.1;
next	;

1.1.1.1.12.1
date	2001.04.10.17.44.49;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove WWW lines
@
text
@slrn (``s-lang read news'') is a newsreader, i.e. a program that
accesses a newsserver to read messages from the Internet News service
(also known as ``Usenet''). It runs in console mode on various
Unix-like systems (including Linux), 32-bit Windows, OS/2, BeOS and
VMS.

Beside the usual features of a newsreader, slrn supports scoring
rules to highlight, sort or kill articles based on information from
their header. It is highly customizable, allows free key-bindings
and can easily be extended using the sophisticated s-lang macro
language. Offline reading is possible by using either slrnpull
(shipped with slrn) or a local newsserver (like leafnode or INN).
@


1.3
log
@update Makefile (integrate COMMENT), change the MASTER_SITES,
takeover MAINTAINERSHIP, clean the patches, update the DESCR and finally,
upgrade to 0.9.7.0a.  espie@@ OK.
@
text
@a12 2

WWW: ${HOMEPAGE}
@


1.2
log
@update to v0.9.6.3
add HOMEPAGE
@
text
@d1 12
a12 2
slrn (not to be confused with slnr) is a SLang-based NNTP newsreader with a 
nice interface.
@


1.1
log
@Initial revision
@
text
@d3 2
@


1.1.1.1
log
@
@
text
@@


1.1.1.1.12.1
log
@MFC:
Update to 0.9.7.0a, maintained by David Level <lebel@@openbsd.org>.
SECURITY: Fixes buffer overflow.
@
text
@d1 2
a2 14
slrn (``s-lang read news'') is a newsreader, i.e. a program that
accesses a newsserver to read messages from the Internet News service
(also known as ``Usenet''). It runs in console mode on various
Unix-like systems (including Linux), 32-bit Windows, OS/2, BeOS and
VMS.

Beside the usual features of a newsreader, slrn supports scoring
rules to highlight, sort or kill articles based on information from
their header. It is highly customizable, allows free key-bindings
and can easily be extended using the sophisticated s-lang macro
language. Offline reading is possible by using either slrnpull
(shipped with slrn) or a local newsserver (like leafnode or INN).

WWW: ${HOMEPAGE}
@

