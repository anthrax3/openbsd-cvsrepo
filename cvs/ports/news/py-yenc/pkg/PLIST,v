head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.36
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.32
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.30
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.28
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.26
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.24
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.22
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.20
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.18
	OPENBSD_5_0:1.1.1.1.0.16
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.12
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.10
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.8
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	wcmaier_20071216:1.1.1.1
	wcmaier:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2007.12.17.00.57.35;	author merdely;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.12.17.00.57.35;	author merdely;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@@@comment $OpenBSD$
lib/python${MODPY_VERSION}/site-packages/_yenc.so
lib/python${MODPY_VERSION}/site-packages/yenc-0.3-py${MODPY_VERSION}.egg-info
lib/python${MODPY_VERSION}/site-packages/yenc.py
lib/python${MODPY_VERSION}/site-packages/yenc.pyc
share/doc/py-yenc/
share/doc/py-yenc/README
share/doc/py-yenc/yenc-draft.1.3.txt
share/examples/py-yenc/
share/examples/py-yenc/logo.ync
share/examples/py-yenc/ydecode.py
share/examples/py-yenc/ydecode_Decoder.py
share/examples/py-yenc/yencode.py
share/examples/py-yenc/yencode_Encoder.py
@


1.1.1.1
log
@Initial import of py-yenc-0.3
The yEnc module provide a simple API for doing raw encoding/decoding of
yencoded binaries, mainly for retrieving or posting to the usenet.  This
implementation is really simple and intended mainly as an exercise to
the author but is also significantly faster than any possible pure
Python implementation and it's being actually used by some Python nntp
clients out there.

From Mikko Tolmunen (MAINTAINER) with tweaks by Will Maier
ok simon@@
@
text
@@
