head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.68
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.66
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.64
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.60
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.62
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.58
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.56
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.54
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.52
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.50
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.48
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.46
	OPENBSD_5_0:1.2.0.44
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.42
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.40
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.38
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.36
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.34
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.32
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.30
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.28
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.26
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.24
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.22
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.20
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.18
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.16
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.14
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.12
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.10
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.8
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.6
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.1.1.0.12
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.10
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	aub2_0_5:1.1.1.1
	aub:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2001.04.07.21.45.10;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	97.12.02.02.04.45;	author angelos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.12.02.02.04.45;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- fix extract
- make a proper patch
- integrate COMMENT
- clean-up
@
text
@More and more people are posting binary files to usenet these days.
Because of limitations in the type data that usenet can accommodate,
binaries must be encoded into text, and because binary files are
commonly very large relative to text files usenet was designed to
handle, they frequently must be broken up into pieces.

aub, which stands for "assemble usenet binaries", automates the
reassembly process for you.  aub determines whether or not any new
binaries have appeared in selected newsgroups since the last time it was
run, and if so, retrieves, organizes and decodes them, depositing them
in a configurable location.  This process requires no human intervention
once aub has been configured.  aub also keeps track of binaries which it
has seen some, but not all, of the pieces of.  It remembers how to find
these old pieces, so that when new, previously missing pieces arrive at
your site, it will build the entire binary the next time it is run.  It
also remembers which binaries it has already seen all of the pieces of
already, so that it does not waste time rebuilding the same binaries
over and over again.

run:   "aub -M | more" for the long form documentation, or
       "aub -m | more" for the short form.
@


1.1
log
@Initial revision
@
text
@d20 2
a21 4
run:   ``aub -M | more'' for the long form documentation, or
       ``aub -m | more'' for the short form.

-- David (obrien@@NUXI.com)
@


1.1.1.1
log
@Add aub port.
@
text
@@
