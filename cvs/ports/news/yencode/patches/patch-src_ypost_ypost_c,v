head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.48
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.44
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.46
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.42
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.40
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.38
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.36
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.34
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.32
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.30
	OPENBSD_5_0:1.1.1.1.0.28
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.26
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.24
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.22
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.20
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.18
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.16
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.14
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.12
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.10
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.8
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.6
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	fgsch_2005-01-25:1.1.1.1
	fgsch:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.01.25.23.32.22;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.25.23.32.22;	author fgsch;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- src/ypost/ypost.c.orig	Sat Jan 22 21:54:17 2005
+++ src/ypost/ypost.c	Sat Jan 22 21:59:11 2005
@@@@ -733,7 +733,7 @@@@ output_file_info(void)
 		}
 		printf("       support data: %s\n", y->support_data ? "yes" : "no");
 		for (part = 0; part < y->totalparts; part++)
-			printf("           part %03d: begin=%lu end=%lu size=%u\n", part + 1, y->part[part]->begin,
+			printf("           part %03d: begin=%lu end=%lu size=%zu\n", part + 1, y->part[part]->begin,
 					 y->part[part]->end, y->part[part]->size);
 	}
 	charline('-');
@@@@ -818,10 +818,10 @@@@ post_file(YENCFILE *y)
 		**  Write the yEnc "=ybegin" line
 		*/
 		if (y->totalparts == 1)
-			sock_printf("=ybegin line=%d size=%u name=%s\n",
+			sock_printf("=ybegin line=%d size=%zu name=%s\n",
 							opt_line_length, y->filesize, STRIP_PATH(y->input_filename));
 		else
-			sock_printf("=ybegin part=%d total=%d line=%d size=%u name=%s\n",
+			sock_printf("=ybegin part=%d total=%zd line=%d size=%zu name=%s\n",
 							part_current, y->totalparts, opt_line_length, y->filesize, STRIP_PATH(y->input_filename));
 
 		/*
@@@@ -924,13 +924,13 @@@@ post_file(YENCFILE *y)
 		**  Write the yEnc "=yend" line
 		*/
 		if (y->totalparts == 1)
-			sock_printf("=yend size=%u crc32=%08X\n", y->filesize, y->crc);
+			sock_printf("=yend size=%zu crc32=%08X\n", y->filesize, y->crc);
 		else
 		{
 			if (part_current == y->totalparts)
-				sock_printf("=yend size=%u part=%d pcrc32=%08X crc32=%08X\n", y->part[part_current-1]->size, part_current, pcrc, y->crc);
+				sock_printf("=yend size=%zu part=%d pcrc32=%08X crc32=%08X\n", y->part[part_current-1]->size, part_current, pcrc, y->crc);
 			else
-				sock_printf("=yend size=%u part=%d pcrc32=%08X\n", y->part[part_current-1]->size, part_current, pcrc);
+				sock_printf("=yend size=%zu part=%d pcrc32=%08X\n", y->part[part_current-1]->size, part_current, pcrc);
 		}
 
 		/*
@


1.1.1.1
log
@encoder/decoder tool for the Usenet yEnc encoding format; input and ok
from jolan@@
@
text
@@
