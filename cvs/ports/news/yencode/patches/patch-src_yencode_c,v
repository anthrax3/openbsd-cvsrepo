head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.48
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.44
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.46
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.42
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.40
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.38
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.36
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.34
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.32
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.30
	OPENBSD_5_0:1.1.1.1.0.28
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.26
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.24
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.22
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.20
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.18
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.16
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.14
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.12
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.10
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.8
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.6
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	fgsch_2005-01-25:1.1.1.1
	fgsch:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.01.25.23.32.22;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.25.23.32.22;	author fgsch;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- src/yencode.c.orig	Sat Jan 22 21:53:50 2005
+++ src/yencode.c	Sat Jan 22 22:01:09 2005
@@@@ -370,7 +370,7 @@@@ yencode_file(YENCFILE *f, FILE *in, size
 		/* Write headers */
 		if (opt_multipart_size)
 		{
-			headers = fprintf(out, "=ybegin part=%d total=%d line=%d size=%u name=%s\r\n",
+			headers = fprintf(out, "=ybegin part=%d total=%d line=%d size=%zu name=%s\r\n",
 					  part, totalparts, opt_line_length, insize, STRIP_PATH(f->input_filename));
 			{
 				size_t remaining = insize - decsize;
@@@@ -386,7 +386,7 @@@@ yencode_file(YENCFILE *f, FILE *in, size
 		}
 		else
 		{
-			headers = fprintf(out, "=ybegin line=%d size=%u name=%s\r\n",
+			headers = fprintf(out, "=ybegin line=%d size=%zu name=%s\r\n",
 										 opt_line_length, insize, STRIP_PATH(f->input_filename));
 		}
 
@@@@ -400,13 +400,13 @@@@ yencode_file(YENCFILE *f, FILE *in, size
 		/* Write footers */
 		if (opt_multipart_size)
 		{
-			headers += fprintf(out, "=yend part=%d total=%d size=%u pcrc32=%08X",
+			headers += fprintf(out, "=yend part=%d total=%d size=%zu pcrc32=%08X",
 										  part, totalparts, decpart, pcrc32);
 		}
 		else
 		{
 			CRC_FINISH(crc32);
-			headers += fprintf(out, "=yend size=%u crc32=%08X\r\n", insize, crc32);
+			headers += fprintf(out, "=yend size=%zu crc32=%08X\r\n", insize, crc32);
 			f->ok = 1;
 			f->crc = crc32;
 		}
@


1.1.1.1
log
@encoder/decoder tool for the Usenet yEnc encoding format; input and ok
from jolan@@
@
text
@@
