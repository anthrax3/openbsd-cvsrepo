head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.22
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.20
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.18
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.14
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.16
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.12
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_4_2:1.2.0.20
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.18
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.16
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.14
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.12
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_4:1.2.0.2;
locks; strict;
comment	@# @;


1.5
date	2012.07.19.15.05.30;	author giovanni;	state Exp;
branches;
next	1.4;

1.4
date	2012.04.14.15.13.30;	author naddy;	state Exp;
branches;
next	1.3;

1.3
date	2008.02.08.23.10.45;	author okan;	state dead;
branches;
next	1.2;

1.2
date	2003.11.11.22.30.34;	author todd;	state Exp;
branches
	1.2.2.1
	1.2.4.1;
next	1.1;

1.1
date	2003.11.11.22.24.19;	author todd;	state Exp;
branches;
next	;

1.2.2.1
date	2003.11.12.17.30.16;	author margarida;	state Exp;
branches;
next	;

1.2.4.1
date	2003.11.12.17.31.19;	author margarida;	state Exp;
branches;
next	;


desc
@@


1.5
log
@
Update to 6.0.6
hfaxd.conf has moved from lib/fax to libdata/hylafax/etc
@
text
@$OpenBSD: patch-hfaxd_FileTransfer_c++,v 1.4 2012/04/14 15:13:30 naddy Exp $

Fix for TIFF 4.0 API.

--- hfaxd/FileTransfer.c++.orig	Wed Jun  6 02:58:38 2012
+++ hfaxd/FileTransfer.c++	Mon Jul  9 15:06:31 2012
@@@@ -80,11 +80,31 @@@@ static 	const char* typenames[] =  { "ASCII", "EBCDIC"
 static 	const char* strunames[] =  { "File", "Record", "Page", "TIFF" };
 static 	const char* modenames[] =  { "Stream", "Block", "Compressed", "ZIP" };
 
+extern "C" {
+/*
+ * TIFF Image File Directories are comprised of a table of field
+ * descriptors of the form shown below.  The table is sorted in
+ * ascending order by tag.  The values associated with each entry are
+ * disjoint and may appear anywhere in the file (so long as they are
+ * placed on a word boundary).
+ *
+ * If the value is 4 bytes or less, then it is placed in the offset
+ * field to save space.  If the value is less than 4 bytes, it is
+ * left-justified in the offset field.
+ */
+typedef struct {
+        uint16          tdir_tag;       /* see below */
+        uint16          tdir_type;      /* data type; see below */
+        uint32          tdir_count;     /* number of items; length in spec */
+        uint32          tdir_offset;    /* byte offset to field data */
+} TIFFDirEntry;
+}
+
 #define	N(a)	(sizeof (a) / sizeof (a[0]))
 
 
 static bool
-isTIFF(const TIFFHeader& h)
+isTIFF(const TIFFHeaderClassic& h)
 {
     if (h.tiff_magic != TIFF_BIGENDIAN && h.tiff_magic != TIFF_LITTLEENDIAN)
 	return (false);
@@@@ -97,7 +117,7 @@@@ isTIFF(const TIFFHeader& h)
     // byte swap version stamp if opposite byte order
     if ((u.c[0] == 0) ^ (h.tiff_magic == TIFF_BIGENDIAN))
 	TIFFSwabShort(&version);
-    return (version == TIFF_VERSION);
+    return (version == TIFF_VERSION_CLASSIC);
 }
 
 
@@@@ -244,7 +264,7 @@@@ HylaFAXServer::retrievePageCmd(const char* name)
 		tiff_bytecount_t* sb;
 		TIFFGetField(tif, TIFFTAG_STRIPBYTECOUNTS, &sb);
 		file_size = sizeof (DirTemplate) +
-		    sizeof (TIFFHeader) + sizeof (uint16);
+		    sizeof (TIFFHeaderClassic) + sizeof (uint16);
 		for (tstrip_t s = 0, ns = TIFFNumberOfStrips(tif); s < ns; s++)
 		    file_size += sb[s];
 		reply(code, "%s for %s (%lu bytes).",
@@@@ -276,10 +296,10 @@@@ HylaFAXServer::openTIFF(const char* name)
 	if (fd >= 0) {
 	    union {
 		char buf[512];
-		TIFFHeader h;
+		TIFFHeaderClassic h;
 	    } b;
 	    ssize_t cc = Sys::read(fd, (char*) &b, sizeof (b));
-	    if (cc > (ssize_t)sizeof (b.h) && b.h.tiff_version == TIFF_VERSION &&
+	    if (cc > (ssize_t)sizeof (b.h) && b.h.tiff_version == TIFF_VERSION_CLASSIC &&
 	      (b.h.tiff_magic == TIFF_BIGENDIAN ||
 	       b.h.tiff_magic == TIFF_LITTLEENDIAN)) {
 		(void) lseek(fd, 0L, SEEK_SET);		// rewind
@@@@ -358,7 +378,7 @@@@ HylaFAXServer::sendTIFFHeader(TIFF* tif, int fdout)
 {
     static DirTemplate templ = {
 #define	TIFFdiroff(v) \
-    (uint32) (sizeof (TIFFHeader) + sizeof (uint16) + \
+    (uint32) (sizeof (TIFFHeaderClassic) + sizeof (uint16) + \
       (intptr_t) &(((DirTemplate*) 0)->v))
 	{ TIFFTAG_SUBFILETYPE,		TIFF_LONG,	1 },
 	{ TIFFTAG_IMAGEWIDTH,		TIFF_LONG,	1 },
@@@@ -392,14 +412,14 @@@@ HylaFAXServer::sendTIFFHeader(TIFF* tif, int fdout)
      * of things about the contents of the TIFF file.
      */
     struct {
-	TIFFHeader h;
+	TIFFHeaderClassic h;
 	uint16	dircount;
 	u_char	dirstuff[sizeof (templ)];
     } buf;
     union { int32 i; char c[4]; } u; u.i = 1;
     buf.h.tiff_magic = (u.c[0] == 0 ? TIFF_BIGENDIAN : TIFF_LITTLEENDIAN);
-    buf.h.tiff_version = TIFF_VERSION;
-    buf.h.tiff_diroff = sizeof (TIFFHeader);
+    buf.h.tiff_version = TIFF_VERSION_CLASSIC;
+    buf.h.tiff_diroff = sizeof (TIFFHeaderClassic);
     buf.dircount = (uint16) NTAGS;
     getLong(tif, templ.SubFileType);
     getLong(tif, templ.ImageWidth);
@@@@ -972,7 +992,7 @@@@ HylaFAXServer::docType(const char* docname, FaxSendOp&
 	if (FileCache::lookup(docname, sb) && S_ISREG(sb.st_mode)) {
 	    union {
 		char buf[512];
-		TIFFHeader h;
+		TIFFHeaderClassic h;
 	    } b;
 	    ssize_t cc = Sys::read(fd, (char*) &b, sizeof (b));
 	    if (cc > 2 && b.buf[0] == '%' && b.buf[1] == '!')
@


1.4
log
@fixes for tiff 4.0 API changes; from FreeBSD
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- hfaxd/FileTransfer.c++.orig	Wed Sep 15 16:42:36 2010
+++ hfaxd/FileTransfer.c++	Fri Apr 13 16:15:22 2012
@@@@ -65,11 +65,31 @@@@ static 	const char* typenames[] =  { "ASCII", "EBCDIC"
d40 1
a40 1
@@@@ -82,7 +102,7 @@@@ isTIFF(const TIFFHeader& h)
d49 2
a50 2
@@@@ -229,7 +249,7 @@@@ HylaFAXServer::retrievePageCmd(const char* name)
 		uint32* sb;
d58 1
a58 1
@@@@ -261,10 +281,10 @@@@ HylaFAXServer::openTIFF(const char* name)
d71 1
a71 1
@@@@ -343,7 +363,7 @@@@ HylaFAXServer::sendTIFFHeader(TIFF* tif, int fdout)
d80 1
a80 1
@@@@ -377,14 +397,14 @@@@ HylaFAXServer::sendTIFFHeader(TIFF* tif, int fdout)
d98 1
a98 1
@@@@ -957,7 +977,7 @@@@ HylaFAXServer::docType(const char* docname, FaxSendOp&
@


1.3
log
@- update to 4.4.4 from Giovanni Bechis, new MAINTAINER

ok merdely@@
@
text
@d1 45
a45 9
$OpenBSD: patch-hfaxd_FileTransfer_c++,v 1.2 2003/11/11 22:30:34 todd Exp $
--- hfaxd/FileTransfer.c++.orig	1999-11-18 06:18:57.000000000 -0600
+++ hfaxd/FileTransfer.c++	2003-11-11 16:26:23.000000000 -0600
@@@@ -556,7 +556,7 @@@@ HylaFAXServer::storeUniqueCmd(bool isTem
 	} else
 	    perror_reply(553, filename, errno);
     } else
-	reply(553, emsg);
+	reply(553, "%s", (const char*)emsg);
d48 59
a106 1
 /*
@


1.2
log
@Security fix:
Format string bug in hfaxd. pointed out by margarida from securityfocus.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2.4.1
log
@Security fix:
Hylafax server (hfaxd) has a remotely exploitable format string
vulnerability.
URL: http://www.securityfocus.com/archive/1/344134
@
text
@d2 2
a3 2
--- hfaxd/FileTransfer.c++.orig	Thu Nov 18 12:18:57 1999
+++ hfaxd/FileTransfer.c++	Wed Nov 12 13:00:41 2003
@


1.2.2.1
log
@Security fix:
Hylafax server (hfaxd) has a remotely exploitable format string
vulnerability.
URL: http://www.securityfocus.com/archive/1/344134
@
text
@d2 2
a3 2
--- hfaxd/FileTransfer.c++.orig	1999-11-18 07:18:57.000000000 -0500
+++ hfaxd/FileTransfer.c++	2003-11-11 14:22:05.000000000 -0500
@


1.1
log
@Security fix:
Format string bug in hfaxd.
@
text
@d3 1
a3 1
+++ hfaxd/FileTransfer.c++	2003-11-11 16:07:19.000000000 -0600
@

