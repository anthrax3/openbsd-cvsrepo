head	1.2;
access;
symbols
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2000.05.18.04.41.32;	author form;	state dead;
branches;
next	1.1;

1.1
date	98.12.20.12.09.48;	author form;	state Exp;
branches
	1.1.6.1;
next	;

1.1.6.1
date	2000.09.15.04.47.04;	author marc;	state dead;
branches;
next	;


desc
@@


1.2
log
@Upgrade to 1.83.0.
Use INSTALL/DEINSTALL.
Fake.
@
text
@--- util.c.orig	Sat May 16 14:13:12 1998
+++ util.c	Mon Dec 21 00:20:31 1998
@@@@ -165,7 +165,7 @@@@
 /* Drop all priviliges (irreversable). */
 void drop_all_privs()
 {
-#ifdef HAS_REUID
+#if defined(HAS_REUID) && !defined(__OpenBSD__)
   /* Regain privs needed to drop privs :) */
   setregid(real_gid, eff_gid);
   setreuid(real_uid, eff_uid);
@@@@ -183,9 +183,15 @@@@
 void drop_privs()
 {
 #ifdef HAS_REUID
+# ifndef __OpenBSD__
   setregid(eff_gid, real_gid);
   if (setreuid(eff_uid, real_uid) < 0)
 	fprintf(stderr, "minicom: cannot setreuid(%d, %d)\n", eff_uid, real_uid);
+# else
+  setegid(real_gid);
+  if (seteuid(real_uid) < 0)
+        fprintf(stderr, "minicom: cannot seteuid(%d)\n", real_uid);
+# endif
   not_suid = 1;
 #endif
 }
@@@@ -194,9 +200,15 @@@@
 void set_privs()
 {
 #ifdef HAS_REUID
+# ifndef __OpenBSD__
   setregid(real_gid, eff_gid);
   if (setreuid(real_uid, eff_uid) < 0)
 	fprintf(stderr, "minicom: cannot setreuid(%d, %d)\n", real_uid, eff_uid);
+# else
+  setegid(eff_gid);
+  if (seteuid(eff_uid) < 0)
+	fprintf(stderr, "minicom: cannot setreuid(%d)\n", eff_uid);
+# endif
   not_suid = 0;
 #endif
 }
@


1.1
log
@Do not use setreuid()/setregid() under OpenBSD,
use seteuid()/setegid() to set eff uid/gid,
use setuid()/setgid() to drop privs instead.
@
text
@@


1.1.6.1
log
@bring comms as of cut-over date into 2.7 branch
@
text
@@


