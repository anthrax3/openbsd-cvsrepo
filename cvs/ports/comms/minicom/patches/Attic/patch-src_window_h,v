head	1.2;
access;
symbols
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.03.19.22.17.43;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2011.04.22.11.21.46;	author stsp;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to minicom 2.5
- rolls in a huge bunch of wprintf patches, also fixes conflict with getline()
- note that the setuid support has been removed from the code
@
text
@$OpenBSD: patch-src_window_h,v 1.1 2011/04/22 11:21:46 stsp Exp $
--- src/window.h.orig	Thu Apr 21 23:37:49 2011
+++ src/window.h	Thu Apr 21 23:37:58 2011
@@@@ -151,7 +151,7 @@@@ void wlocate(WIN *win, int x, int y);
 void wputc(WIN *win, wchar_t c);
 void wdrawelm(WIN *win, int y, ELM *e);
 void wputs(WIN *win, const char *s);
-int wprintf(WIN *, const char *, ...)
+int mc_wprintf(WIN *, const char *, ...)
         __attribute__((format(printf, 2, 3)));
 void wbell(void);
 void wcursor(WIN *win, int type);
@


1.1
log
@minicom contains a function called wprintf() (print to a window) which
collides with the standard C wprintf() (print a wide character string).
Upstream already realised this was a bad idea and changed the function's
name to mc_wprintf(). Do the same for our port.
ok ajacoutot landry dcoppa
@
text
@d1 1
a1 1
$OpenBSD$
@

