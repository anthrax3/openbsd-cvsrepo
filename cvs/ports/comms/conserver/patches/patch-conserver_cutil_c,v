head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.12
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.10
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.3.0.26
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.24
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.22
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.20
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.18
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.16
	OPENBSD_5_0:1.3.0.14
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.12
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.10
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.8
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2014.10.07.22.14.17;	author sthen;	state Exp;
branches;
next	1.4;
commitid	a1IT1kguOal23Uj8;

1.4
date	2014.09.08.16.12.11;	author sthen;	state Exp;
branches;
next	1.3;
commitid	e1jNM87A2LcUOgkW;

1.3
date	2008.06.21.11.29.25;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.15.11.53.39;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.02.07.25.48;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update conserver to 8.2.0, and make some port changes ...

- Switch to using unix domain sockets instead of network sockets for
comms between "console" client and "conserver" server. This is a compile-
time toggle and disables network sockets. Uses SO_PEERCRED for access
control so it's possible to do per-user acls in conserver without
the need to re-enter user passwords.

- Add a flavour to use network sockets for those that need it (i.e.
running the client on a different machine to the server).

- Tweaks to pkg-readme explaining the above.
@
text
@$OpenBSD: patch-conserver_cutil_c,v 1.4 2014/09/08 16:12:11 sthen Exp $
--- conserver/cutil.c.orig	Sun Apr 20 08:17:56 2014
+++ conserver/cutil.c	Tue Oct  7 17:25:07 2014
@@@@ -1845,7 +1845,7 @@@@ ProbeInterfaces(in_addr_t bindAddr)
 {
 # ifdef SIOCGIFCONF
     struct ifconf ifc;
-    struct ifreq *ifr;
+    struct ifreq ifr;
 #  ifdef SIOCGIFFLAGS
     struct ifreq ifrcopy;
 #  endif
@@@@ -1914,7 +1914,7 @@@@ ProbeInterfaces(in_addr_t bindAddr)
      * than loop through looking for valid interfaces that are up
      * twice, huh?
      */
-    count = ifc.ifc_len / sizeof(*ifr);
+    count = ifc.ifc_len / sizeof(ifr);
     CONDDEBUG((1, "ProbeInterfaces(): ifc_len==%d max_count==%d",
 	       ifc.ifc_len, count));
 
@@@@ -1933,17 +1933,17 @@@@ ProbeInterfaces(in_addr_t bindAddr)
 
     for (m = r = 0; r < ifc.ifc_len;) {
 	struct sockaddr *sa;
-	ifr = (struct ifreq *)&ifc.ifc_buf[r];
-	sa = (struct sockaddr *)&ifr->ifr_addr;
+	memcpy(&ifr, &ifc.ifc_buf[r], sizeof(ifr));
+	sa = (struct sockaddr *)&ifr.ifr_addr;
 	/* don't use less than a ifreq sized chunk */
-	if ((ifc.ifc_len - r) < sizeof(*ifr))
+	if ((ifc.ifc_len - r) < sizeof(ifr))
 	    break;
 #  ifdef HAVE_SA_LEN
-	if (sa->sa_len > sizeof(ifr->ifr_ifru))
-	    r += sizeof(ifr->ifr_name) + sa->sa_len;
+	if (sa->sa_len > sizeof(ifr.ifr_ifru))
+	    r += sizeof(ifr.ifr_name) + sa->sa_len;
 	else
 #  endif
-	    r += sizeof(*ifr);
+	    r += sizeof(ifr);
 
 	if (sa->sa_family == AF_INET) {
 	    struct sockaddr_in *sin = (struct sockaddr_in *)sa;
@@@@ -1964,14 +1964,14 @@@@ ProbeInterfaces(in_addr_t bindAddr)
 
 #  ifdef SIOCGIFFLAGS
 	    /* make sure the interface is up */
-	    ifrcopy = *ifr;
+	    memcpy(&ifrcopy, &ifr, sizeof(ifrcopy));
 	    if ((ioctl(sock, SIOCGIFFLAGS, &ifrcopy) == 0) &&
 		((ifrcopy.ifr_flags & IFF_UP) == 0))
 		continue;
 #  endif
 
 	    CONDDEBUG((1, "ProbeInterfaces(): name=%s addr=%s",
-		       ifr->ifr_name, inet_ntoa(sin->sin_addr)));
+		       ifr.ifr_name, inet_ntoa(sin->sin_addr)));
 
 #  if HAVE_MEMCPY
 	    memcpy(&myAddrs[m], &(sin->sin_addr), sizeof(struct in_addr));
@@@@ -1980,7 +1980,7 @@@@ ProbeInterfaces(in_addr_t bindAddr)
 #  endif
 
 	    Verbose("interface address %s (%s)", inet_ntoa(myAddrs[m]),
-		    ifr->ifr_name);
+		    ifr.ifr_name);
 	    m++;
 	}
     }
@


1.4
log
@update to conserver 8.1.20, add more notes for upgrading users on how to
unbreak things following the uid change
@
text
@d1 4
a4 4
$OpenBSD: patch-conserver_cutil_c,v 1.3 2008/06/21 11:29:25 sthen Exp $
--- conserver/cutil.c.orig	Fri Apr  4 17:17:10 2014
+++ conserver/cutil.c	Tue Sep  2 20:27:36 2014
@@@@ -2198,7 +2198,7 @@@@ ProbeInterfaces(bindAddr)
d6 1
a6 1
 #ifdef SIOCGIFCONF
d10 1
a10 1
 #ifdef SIOCGIFFLAGS
d12 2
a13 2
 #endif
@@@@ -2267,7 +2267,7 @@@@ ProbeInterfaces(bindAddr)
d22 1
a22 1
@@@@ -2286,17 +2286,18 @@@@ ProbeInterfaces(bindAddr)
a29 1
+
d34 1
a34 1
 #ifdef HAVE_SA_LEN
d40 1
a40 1
 #endif
d46 1
a46 1
@@@@ -2317,14 +2318,14 @@@@ ProbeInterfaces(bindAddr)
d48 1
a48 1
 #ifdef SIOCGIFFLAGS
d55 1
a55 1
 #endif
d61 1
a61 1
 #if HAVE_MEMCPY
d63 2
a64 2
@@@@ -2333,7 +2334,7 @@@@ ProbeInterfaces(bindAddr)
 #endif
@


1.3
log
@Update conserver to 8.1.16, which fixes some bugs, rolls in
pvalchev's strcpy->strlcpy diffs, and adds some new functionality
(see http://www.conserver.com/CHANGES for more details).
Our /etc/services now includes a definition for conserver,
so no need to mention it in the package installation message.

ok pvalchev (maintainer).
@
text
@d1 4
a4 4
$OpenBSD: patch-conserver_cutil_c,v 1.2 2007/06/15 11:53:39 sturm Exp $
--- conserver/cutil.c.orig	Tue Dec 26 07:27:34 2006
+++ conserver/cutil.c	Fri Oct 12 11:45:03 2007
@@@@ -2189,7 +2189,7 @@@@ ProbeInterfaces(bindAddr)
d13 1
a13 1
@@@@ -2258,7 +2258,7 @@@@ ProbeInterfaces(bindAddr)
d22 1
a22 1
@@@@ -2277,17 +2277,18 @@@@ ProbeInterfaces(bindAddr)
a27 1
+
d30 1
d36 1
a36 1
-	if (sa->sa_len > sizeof(ifr->ifr_addr))
d38 1
a38 1
+	if (sa->sa_len > sizeof(ifr.ifr_addr))
d47 1
a47 1
@@@@ -2308,14 +2309,14 @@@@ ProbeInterfaces(bindAddr)
d64 1
a64 1
@@@@ -2324,7 +2325,7 @@@@ ProbeInterfaces(bindAddr)
@


1.2
log
@fix unaligned access on sparc64

ok pval
@
text
@d1 4
a4 22
$OpenBSD: patch-conserver_cutil_c,v 1.1 2005/08/02 07:25:48 pvalchev Exp $
--- conserver/cutil.c.orig	Tue Nov  9 09:37:05 2004
+++ conserver/cutil.c	Thu May 31 14:11:55 2007
@@@@ -84,7 +84,7 @@@@ StrTime(ltime)
     time_t tyme;
 
     tyme = time((time_t *)0);
-    strcpy(curtime, ctime(&tyme));
+    strlcpy(curtime, ctime(&tyme), sizeof(curtime));
     curtime[24] = '\000';	/* might need to adjust this at some point */
     if (ltime != NULL)
 	*ltime = tyme;
@@@@ -424,7 +424,7 @@@@ ReadLine(fp, save, iLine)
 	   || peek) {
 	/* If we have a previously saved line, use it instead */
 	if (save->used) {
-	    strcpy(buf, save->string);
+	    strlcpy(buf, save->string, sizeof(buf));
 	    BuildString((char *)0, save);
 	}
 
@@@@ -2138,7 +2138,7 @@@@ ProbeInterfaces(bindAddr)
d13 1
a13 1
@@@@ -2198,7 +2198,7 @@@@ ProbeInterfaces(bindAddr)
d22 1
a22 1
@@@@ -2217,36 +2217,37 @@@@ ProbeInterfaces(bindAddr)
d47 2
d57 1
d61 1
d64 1
a64 2
 #else
 	    bcopy(&(sin->sin_addr), &myAddrs[m], sizeof(struct in_addr));
d66 1
@


1.1
log
@update to conserver-8.1.11 with help from aanriot
@
text
@d1 3
a3 3
$OpenBSD$
--- conserver/cutil.c.orig	Tue Nov  9 01:37:05 2004
+++ conserver/cutil.c	Tue Aug  2 01:22:33 2005
d22 65
@

