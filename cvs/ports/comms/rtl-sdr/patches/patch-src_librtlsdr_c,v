head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.16
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.14
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	sthen_20130421:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.04.21.11.45.08;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.04.21.11.45.08;	author sthen;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- src/librtlsdr.c.orig	Sat Apr 13 15:00:44 2013
+++ src/librtlsdr.c	Sat Apr 13 15:00:50 2013
@@@@ -1340,10 +1340,12 @@@@ int rtlsdr_open(rtlsdr_dev_t **out_dev, uint32_t index
 	r = libusb_open(device, &dev->devh);
 	if (r < 0) {
 		libusb_free_device_list(list, 1);
-		fprintf(stderr, "usb_open error %d\n", r);
+		fprintf(stderr, "libusb_open error %s (%d)\n", libusb_error_name(r), r);
 		if(r == LIBUSB_ERROR_ACCESS)
-			fprintf(stderr, "Please fix the device permissions, e.g. "
-			"by installing the udev rules file rtl-sdr.rules\n");
+			fprintf(stderr, "No permission to access the relevant /dev/ugen devices.\n");
+		else if(r == LIBUSB_ERROR_NO_DEVICE)
+			fprintf(stderr, "Check that you have sufficient /dev/ugen nodes for your device.\n"
+			    "You may need to run sh MAKEDEV ugen[number].\n");
 		goto err;
 	}
 
@


1.1.1.1
log
@import ports/comms/rtl-sdr, help+ok mpi@@

DVB-T dongles based on the Realtek RTL2832U can be used as a cheap SDR
(software defined radio), since the chip allows transferring the raw I/Q
samples to the host, which is officially used for DAB/DAB+/FM demodulation.

RTL-SDR provides some tools to work with these devices:

rtl_eeprom:	EEPROM programming tool
rtl_sdr:	tunes the device and captures raw data to a file
rtl_test:	check the possible tuning range

Asynchronous mode is NOT currently supported on OpenBSD. rtl_sdr and rtl_test
have been modified to force synchronous mode, and the following are not yet
available:

rtl_adsb:	simple ADS-B decoder (aircraft tracking)
rtl_fm:		general purpose analogue demodulator
		(narrow band FM, wide band FM, AM and SSB)
rtl_tcp:	provides a network server for remote access to an SDR
@
text
@@
