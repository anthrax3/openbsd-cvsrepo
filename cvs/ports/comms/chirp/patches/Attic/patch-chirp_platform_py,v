head	1.3;
access;
symbols
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	sthen_20130613:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.05.07.14.02.53;	author sthen;	state dead;
branches;
next	1.2;
commitid	Cd1wAVRLRVt8EPu9;

1.2
date	2014.06.12.21.54.30;	author abieber;	state Exp;
branches;
next	1.1;
commitid	6Lwq1i5eJvgj8Xnu;

1.1
date	2013.06.13.11.42.43;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.06.13.11.42.43;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to chirp daily 20160507, from Ted Roby, small tweaks from me
@
text
@$OpenBSD: patch-chirp_platform_py,v 1.2 2014/06/12 21:54:30 abieber Exp $
--- chirp/platform.py.orig	Tue Apr  9 01:01:35 2013
+++ chirp/platform.py	Thu Jun 12 14:14:18 2014
@@@@ -283,7 +283,9 @@@@ class UnixPlatform(Platform):
         os.system("firefox '%s'" % path)
 
     def list_serial_ports(self):
-        ports = ["/dev/ttyS*",
+        ports = ["/dev/cuaU*",
+                 "/dev/cua0*",
+                 "/dev/ttyS*",
                  "/dev/ttyUSB*",
                  "/dev/ttyAMA*",
                  "/dev/cu.*",
@


1.2
log
@Update chirp to 0.4.0

OK sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-chirp_platform_py,v 1.1.1.1 2013/06/13 11:42:43 sthen Exp $
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- chirp/platform.py.orig	Thu May 30 13:12:52 2013
+++ chirp/platform.py	Thu May 30 13:13:35 2013
@@@@ -277,7 +277,9 @@@@ class UnixPlatform(Platform):
d8 7
a14 7
-        return sorted(glob.glob("/dev/ttyS*") +
+        return sorted(glob.glob("/dev/cuaU*") +
+                      glob.glob("/dev/cua0*") +
+                      glob.glob("/dev/ttyS*") +
                       glob.glob("/dev/ttyUSB*") +
                       glob.glob("/dev/cu.*") +
                       glob.glob("/dev/term/*") +
@


1.1.1.1
log
@import ports/comms/chirp, ok benoit@@

CHIRP is a free, open-source tool for programming amateur radios.
It supports a large number of manufacturers and models, as well as
provides a way to interface with multiple data sources and formats.

CHIRP's focus is to support reading and writing the memory channels
of as many radio models as possible. This provides the ability to
exchange your programming information between dissimilar radios.
It does not focus on supporting every single knob and setting that
each radio supports.
@
text
@@
