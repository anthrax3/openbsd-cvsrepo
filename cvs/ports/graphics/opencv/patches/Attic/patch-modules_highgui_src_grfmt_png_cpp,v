head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.0.10
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.10.21.22.46.28;	author zhuk;	state dead;
branches;
next	1.1;

1.1
date	2011.07.08.20.36.09;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to 2.4.6.1. Sat in my tree until sthen@@ helped me to realize that.
Key notes:

  * OpenCV now has separate "opencv_nonfree" module, which contains all of
    the patented algorithms. It was decided on ports@@ to not create "nonfree"
    FLAVOR but just set PERMIT_PACKAGE_CDROM=No, while allowing FTP
    distribution.

  * OpenCV now have its own Java bindings. You could avoid building them by
    using the "no_java" PSEUDO_FLAVOR.

  * Documentation placement was cleaned up, too.

Input from sthen@@ and naddy@@. Tested on i386 and amd64 with Digikam from WIP.

Okay sthen@@ and Rafael Sadowski (MAINTAINER)
@
text
@$OpenBSD: patch-modules_highgui_src_grfmt_png_cpp,v 1.1 2011/07/08 20:36:09 naddy Exp $

Fix build with png-1.5.

--- modules/highgui/src/grfmt_png.cpp.orig	Sat Dec  4 20:35:25 2010
+++ modules/highgui/src/grfmt_png.cpp	Mon Jul  4 22:32:04 2011
@@@@ -56,6 +56,7 @@@@
 #else
 #include <png.h>
 #endif
+#include <zlib.h>
 #include "grfmt_png.hpp"
 
 namespace cv
@@@@ -107,7 +108,7 @@@@ void  PngDecoder::close()
 void  PngDecoder::readDataFromBuf( void* _png_ptr, uchar* dst, size_t size )
 {
     png_structp png_ptr = (png_structp)_png_ptr;
-    PngDecoder* decoder = (PngDecoder*)(png_ptr->io_ptr);
+    PngDecoder* decoder = (PngDecoder*)(png_get_io_ptr(png_ptr));
     CV_Assert( decoder );
     const Mat& buf = decoder->m_buf;
     if( decoder->m_buf_pos + size > buf.cols*buf.rows*buf.elemSize() )
@@@@ -138,7 +139,7 @@@@ bool  PngDecoder::readHeader()
 
         if( info_ptr && end_info )
         {
-            if( setjmp( png_ptr->jmpbuf ) == 0 )
+            if( setjmp( png_jmpbuf( png_ptr ) ) == 0 )
             {
                 if( !m_buf.empty() )
                     png_set_read_fn(png_ptr, this, (png_rw_ptr)readDataFromBuf );
@@@@ -200,7 +201,7 @@@@ bool  PngDecoder::readData( Mat& img )
         png_infop info_ptr = (png_infop)m_info_ptr;
         png_infop end_info = (png_infop)m_end_info;
 
-        if( setjmp(png_ptr->jmpbuf) == 0 )
+        if( setjmp( png_jmpbuf ( png_ptr ) ) == 0 )
         {
             int y;
 
@@@@ -280,7 +281,7 @@@@ void PngEncoder::writeDataToBuf(void* _png_ptr, uchar*
     if( size == 0 )
         return;
     png_structp png_ptr = (png_structp)_png_ptr;
-    PngEncoder* encoder = (PngEncoder*)(png_ptr->io_ptr);
+    PngEncoder* encoder = (PngEncoder*)(png_get_io_ptr(png_ptr));
     CV_Assert( encoder && encoder->m_buf );
     size_t cursz = encoder->m_buf->size();
     encoder->m_buf->resize(cursz + size);
@@@@ -322,7 +323,7 @@@@ bool  PngEncoder::write( const Mat& img, const vector<
 
         if( info_ptr )
         {
-            if( setjmp( png_ptr->jmpbuf ) == 0 )
+            if( setjmp( png_jmpbuf ( png_ptr ) ) == 0 )
             {
                 if( m_buf )
                 {
@


1.1
log
@Fix build with png-1.5.
All fixes from/via NetBSD pkgsrc.  The people there did a lot of
heavy lifting.
@
text
@d1 1
a1 1
$OpenBSD$
@

