head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2014.04.29.14.40.20;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2014.04.15.13.02.21;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.05.08.05.35;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2011.05.23.14.03.06;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
Update to feh-2.11
@
text
@$OpenBSD: patch-src_filelist_c,v 1.3 2014/04/15 13:02:21 dcoppa Exp $

commit 5f210b5b2b0b150acf8f4b5890c9811cd65e2aa9
Author: Michael Vorburger <mike@@vorburger.ch>
Date:   Sun Dec 29 22:34:11 2013 +0100

Fix for segfault due to erroneous free() in case of scandir failed
to scan directory

--- src/filelist.c.orig	Fri Feb 28 18:23:20 2014
+++ src/filelist.c	Tue Apr 15 14:40:39 2014
@@@@ -263,27 +263,27 @@@@ void add_file_to_filelist_recursively(char *origpath, 
 			default:
 				weprintf("Failed to scan directory %s:", path);
 			}
-		}
+		} else {
+			for (cnt = 0; cnt < n; cnt++) {
+				if (strcmp(de[cnt]->d_name, ".")
+						&& strcmp(de[cnt]->d_name, "..")) {
+					char *newfile;
 
-		for (cnt = 0; cnt < n; cnt++) {
-			if (strcmp(de[cnt]->d_name, ".")
-					&& strcmp(de[cnt]->d_name, "..")) {
-				char *newfile;
+					newfile = estrjoin("", path, "/", de[cnt]->d_name, NULL);
 
-				newfile = estrjoin("", path, "/", de[cnt]->d_name, NULL);
+					/* This ensures we go down one level even if not fully recursive
+					   - this way "feh some_dir" expands to some_dir's contents */
+					if (opt.recursive)
+						add_file_to_filelist_recursively(newfile, FILELIST_CONTINUE);
+					else
+						add_file_to_filelist_recursively(newfile, FILELIST_LAST);
 
-				/* This ensures we go down one level even if not fully recursive
-				   - this way "feh some_dir" expands to some_dir's contents */
-				if (opt.recursive)
-					add_file_to_filelist_recursively(newfile, FILELIST_CONTINUE);
-				else
-					add_file_to_filelist_recursively(newfile, FILELIST_LAST);
-
-				free(newfile);
+					free(newfile);
+				}
+				free(de[cnt]);
 			}
-			free(de[cnt]);
+			free(de);
 		}
-		free(de);
 		closedir(dir);
 	} else if (S_ISREG(st.st_mode)) {
 		D(("Adding regular file %s to filelist\n", path));
@


1.3
log
@
A couple of bugfixes from upstream:

Fix for segfault due to erroneous free() in case of scandir failed
to scan directory (git commit 5f210b5b2b0b150acf8f4b5890c9811cd65e2aa9)

re-randomize after list is through
(upstream git commit a0ddc0dcff5d43871f8c0e87dfb5d2c49671ac30)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Bugfixing update to feh-1.14.2
@
text
@d1 1
a1 1
$OpenBSD: patch-src_filelist_c,v 1.1 2011/05/23 14:03:06 dcoppa Exp $
d3 3
a5 2
Fix memleak in add_file_to_filelist_recursively scandir call
(commit f2be037b77015dc9eba66620d49928ef1f0ef3aa)
d7 29
a35 4
--- src/filelist.c.orig	Mon May 23 15:56:24 2011
+++ src/filelist.c	Mon May 23 15:57:13 2011
@@@@ -221,8 +221,8 @@@@ void add_file_to_filelist_recursively(char *origpath, 
 					add_file_to_filelist_recursively(newfile, FILELIST_LAST);
d37 11
a47 2
 				free(newfile);
-				free(de[cnt]);
d49 2
a50 1
+			free(de[cnt]);
d52 1
a52 1
 		free(de);
d54 2
@


1.1
log
@Fix memleak in add_file_to_filelist_recursively scandir call
(upstream commit f2be037b77015dc9eba66620d49928ef1f0ef3aa)
@
text
@d1 1
a1 1
$OpenBSD$
@

