head	1.10;
access;
symbols
	OPENBSD_4_7:1.1.0.18
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.16
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.14
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.12
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.10
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.8
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.6
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.10
date	2014.04.29.14.40.20;	author dcoppa;	state dead;
branches;
next	1.9;

1.9
date	2014.04.15.13.02.21;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2013.06.17.13.40.53;	author dcoppa;	state dead;
branches;
next	1.7;

1.7
date	2013.05.20.07.56.48;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2012.03.26.12.53.24;	author dcoppa;	state dead;
branches;
next	1.5;

1.5
date	2012.03.14.10.15.00;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.15.13.27.09;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2011.09.09.09.51.43;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.11.14.46.13;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2005.12.20.06.08.17;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.10
log
@
Update to feh-2.11
@
text
@$OpenBSD: patch-src_slideshow_c,v 1.9 2014/04/15 13:02:21 dcoppa Exp $

commit a0ddc0dcff5d43871f8c0e87dfb5d2c49671ac30
Author: Roland Angerer <dev@@rangerer.at>
Date:   Thu Apr 10 10:32:07 2014 +0200

re-randomize after list is through

--- src/slideshow.c.orig	Fri Feb 28 18:23:21 2014
+++ src/slideshow.c	Tue Apr 15 14:45:03 2014
@@@@ -692,7 +692,13 @@@@ gib_list *feh_list_jump(gib_list * root, gib_list * l,
 				if (opt.cycle_once) {
 					exit(0);
 				}
-				ret = root;
+				if (opt.randomize) {
+					/* Randomize the filename order */
+					filelist = gib_list_randomize(filelist);
+					ret = filelist;
+				} else {
+					ret = root;
+				}
 			}
 		} else {
 			if (ret->prev)
@


1.9
log
@
A couple of bugfixes from upstream:

Fix for segfault due to erroneous free() in case of scandir failed
to scan directory (git commit 5f210b5b2b0b150acf8f4b5890c9811cd65e2aa9)

re-randomize after list is through
(upstream git commit a0ddc0dcff5d43871f8c0e87dfb5d2c49671ac30)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.8
log
@Update to feh-2.9.3.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_slideshow_c,v 1.7 2013/05/20 07:56:48 dcoppa Exp $
d3 3
a5 3
commit 27a1fb87555b40e0ad4d0f24640801dd527ed4a4
Author: Daniel Friesel <derf@@finalrewind.org>
Date:   Thu May 9 20:59:02 2013 +0200
d7 1
a7 1
Fix feh_printf buffer overflows
d9 14
a22 134
--- src/slideshow.c.orig	Mon May 20 09:30:12 2013
+++ src/slideshow.c	Mon May 20 09:39:04 2013
@@@@ -476,107 +476,107 @@@@ char *feh_printf(char *str, feh_file * file, winwidget
 			switch (*c) {
 			case 'f':
 				if (file)
-					strcat(ret, file->filename);
+					strncat(ret, file->filename, sizeof(ret) - strlen(ret));
 				break;
 			case 'F':
 				if (file)
-					strcat(ret, shell_escape(file->filename));
+					strncat(ret, shell_escape(file->filename), sizeof(ret) - strlen(ret));
 				break;
 			case 'h':
 				if (file && (file->info || !feh_file_info_load(file, NULL))) {
 					snprintf(buf, sizeof(buf), "%d", file->info->height);
-					strcat(ret, buf);
+					strncat(ret, buf, sizeof(ret) - strlen(ret));
 				}
 				break;
 			case 'l':
 				snprintf(buf, sizeof(buf), "%d", gib_list_length(filelist));
-				strcat(ret, buf);
+				strncat(ret, buf, sizeof(ret) - strlen(ret));
 				break;
 			case 'm':
-				strcat(ret, mode);
+				strncat(ret, mode, sizeof(ret) - strlen(ret));
 				break;
 			case 'n':
 				if (file)
-					strcat(ret, file->name);
+					strncat(ret, file->name, sizeof(ret) - strlen(ret));
 				break;
 			case 'N':
 				if (file)
-					strcat(ret, shell_escape(file->name));
+					strncat(ret, shell_escape(file->name), sizeof(ret) - strlen(ret));
 				break;
 			case 'o':
 				if (winwid) {
 					snprintf(buf, sizeof(buf), "%d,%d", winwid->im_x,
 						winwid->im_y);
-					strcat(ret, buf);
+					strncat(ret, buf, sizeof(ret) - strlen(ret));
 				}
 				break;
 			case 'p':
 				if (file && (file->info || !feh_file_info_load(file, NULL))) {
 					snprintf(buf, sizeof(buf), "%d", file->info->pixels);
-					strcat(ret, buf);
+					strncat(ret, buf, sizeof(ret) - strlen(ret));
 				}
 				break;
 			case 'P':
 				if (file && (file->info || !feh_file_info_load(file, NULL))) {
-					strcat(ret, format_size(file->info->pixels));
+					strncat(ret, format_size(file->info->pixels), sizeof(ret) - strlen(ret));
 				}
 				break;
 			case 'r':
 				if (winwid) {
 					snprintf(buf, sizeof(buf), "%.1f", winwid->im_angle);
-					strcat(ret, buf);
+					strncat(ret, buf, sizeof(ret) - strlen(ret));
 				}
 				break;
 			case 's':
 				if (file && (file->info || !feh_file_info_load(file, NULL))) {
 					snprintf(buf, sizeof(buf), "%d", file->info->size);
-					strcat(ret, buf);
+					strncat(ret, buf, sizeof(ret) - strlen(ret));
 				}
 				break;
 			case 'S':
 				if (file && (file->info || !feh_file_info_load(file, NULL))) {
-					strcat(ret, format_size(file->info->size));
+					strncat(ret, format_size(file->info->size), sizeof(ret) - strlen(ret));
 				}
 				break;
 			case 't':
 				if (file && (file->info || !feh_file_info_load(file, NULL))) {
-					strcat(ret, file->info->format);
+					strncat(ret, file->info->format, sizeof(ret) - strlen(ret));
 				}
 				break;
 			case 'u':
 				snprintf(buf, sizeof(buf), "%d",
 					 current_file != NULL ? gib_list_num(filelist, current_file)
 					 + 1 : 0);
-				strcat(ret, buf);
+				strncat(ret, buf, sizeof(ret) - strlen(ret));
 				break;
 			case 'v':
-				strcat(ret, VERSION);
+				strncat(ret, VERSION, sizeof(ret) - strlen(ret));
 				break;
 			case 'V':
 				snprintf(buf, sizeof(buf), "%d", getpid());
-				strcat(ret, buf);
+				strncat(ret, buf, sizeof(ret) - strlen(ret));
 				break;
 			case 'w':
 				if (file && (file->info || !feh_file_info_load(file, NULL))) {
 					snprintf(buf, sizeof(buf), "%d", file->info->width);
-					strcat(ret, buf);
+					strncat(ret, buf, sizeof(ret) - strlen(ret));
 				}
 				break;
 			case 'z':
 				if (winwid) {
 					snprintf(buf, sizeof(buf), "%.2f", winwid->zoom);
-					strcat(ret, buf);
+					strncat(ret, buf, sizeof(ret) - strlen(ret));
 				}
 				break;
 			case '%':
-				strcat(ret, "%");
+				strncat(ret, "%", sizeof(ret) - strlen(ret));
 				break;
 			default:
 				weprintf("Unrecognized format specifier %%%c", *c);
 				strncat(ret, c - 1, 2);
 				break;
 			}
-		} else if ((*c == '\\') && (*(c+1) != '\0')) {
+		} else if ((*c == '\\') && (*(c+1) != '\0') && ((strlen(ret) + 3) < sizeof(ret))) {
 			c++;
 			switch (*c) {
 			case 'n':
@@@@ -586,7 +586,7 @@@@ char *feh_printf(char *str, feh_file * file, winwidget
 				strncat(ret, c - 1, 2);
 				break;
d24 2
a25 5
-		} else
+		} else if ((strlen(ret) + 2) < sizeof(ret))
 			strncat(ret, c, 1);
 	}
 	return(ret);
@


1.7
log
@Update to feh-2.9.2
@
text
@d1 1
a1 1
$OpenBSD$
@


1.6
log
@Update to feh-2.5
@
text
@d1 1
a1 1
$OpenBSD: patch-src_slideshow_c,v 1.5 2012/03/14 10:15:00 dcoppa Exp $
d3 3
a5 2
do not jump to current image on random jump
(upstream git commit 57e2af2763ee87bafb368390fd18382c957fd27e)
d7 142
a148 16
--- src/slideshow.c.orig	Tue Mar  6 13:15:59 2012
+++ src/slideshow.c	Wed Mar 14 11:10:50 2012
@@@@ -266,8 +266,11 @@@@ void slideshow_change_image(winwidget winwid, int chan
 			current_file = feh_list_jump(filelist, current_file, BACK, 1);
 			break;
 		case SLIDE_RAND:
-			current_file = feh_list_jump(filelist, current_file, FORWARD, rand() % filelist_len);
-			change = SLIDE_NEXT;
+			if (filelist_len > 1) {
+				current_file = feh_list_jump(filelist, current_file, FORWARD,
+					(rand() % (filelist_len - 1)) + 1);
+				change = SLIDE_NEXT;
+			}
 			break;
 		case SLIDE_JUMP_FWD:
 			if (filelist_len < 5)
@


1.5
log
@slideshow_change_image: do not jump to current image on random jump
(upstream git commit 57e2af2763ee87bafb368390fd18382c957fd27e)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@feh-1.16.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_slideshow_c,v 1.3 2011/09/09 09:51:43 dcoppa Exp $
d3 2
a4 2
feh_reload_image: fix regression of old caching issue
(upstream git commit 04690171c47c99e584fe1ae9d5ebed913ac5ba99)
d6 16
a21 36
--- src/slideshow.c.orig	Mon Sep  5 11:00:25 2011
+++ src/slideshow.c	Fri Sep  9 11:30:03 2011
@@@@ -171,11 +171,19 @@@@ void feh_reload_image(winwidget w, int resize, int for
 	old_w = gib_imlib_image_get_width(w->im);
 	old_h = gib_imlib_image_get_height(w->im);
 
-	/* if the image has changed in dimensions - we gotta resize */
+	/*
+	 * If we don't free the old image before loading the new one, Imlib2's
+	 * caching will get in our way.
+	 * However, if --reload is used (force_new == 0), we want to continue if
+	 * the new image cannot be loaded, so we must not free the old image yet.
+	 */
+	if (force_new)
+		winwidget_free_image(w);
+
 	if ((feh_load_image(&tmp, FEH_FILE(w->file->data))) == 0) {
-		if (force_new) {
+		if (force_new)
 			eprintf("failed to reload image\n");
-		} else {
+		else {
 			im_weprintf(w, "Couldn't reload image. Is it still there?");
 			winwidget_render_image(w, 0, 0);
 		}
@@@@ -189,8 +197,8 @@@@ void feh_reload_image(winwidget w, int resize, int for
 			(old_h != gib_imlib_image_get_height(tmp))))
 		resize = 1;
 
-	/* force imlib2 not to cache */
-	winwidget_free_image(w);
+	if (!force_new)
+		winwidget_free_image(w);
 
 	w->im = tmp;
 	winwidget_reset_image(w);
@


1.3
log
@Update to feh-1.16 (plus a bugfix from upstream git).
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to feh-1.8.
Use ftp from base instead of wget for remote images support.

OK sthen@@
Maintainer timeout...
@
text
@d1 10
a10 11
$OpenBSD: patch-src_slideshow_c,v 1.1 2005/12/20 06:08:17 pvalchev Exp $
--- src/slideshow.c.orig	Mon Dec 19 22:28:52 2005
+++ src/slideshow.c	Mon Dec 19 22:29:04 2005
@@@@ -353,8 +353,8 @@@@ feh_action_run(feh_file * file, char *ac
   D_ENTER(4);
   if (action)
   {
-    D(3, ("Running action %s\n", action));
     char *sys;
+    D(3, ("Running action %s\n", action));
     sys = feh_printf(action, file);
d12 30
a41 1
     if (opt.verbose && !opt.list && !opt.customlist)
@


1.1
log
@gcc2 fixes: declare variables in beginning of block
@
text
@d1 1
a1 1
$OpenBSD$
@

