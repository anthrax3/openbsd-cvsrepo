head	1.16;
access;
symbols
	OPENBSD_5_5:1.15.0.2
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_2:1.9.0.2
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.16
date	2014.03.12.11.41.43;	author dcoppa;	state dead;
branches;
next	1.15;

1.15
date	2013.12.12.09.20.52;	author dcoppa;	state Exp;
branches;
next	1.14;

1.14
date	2013.05.20.07.56.48;	author dcoppa;	state dead;
branches;
next	1.13;

1.13
date	2013.04.22.20.38.43;	author dcoppa;	state Exp;
branches;
next	1.12;

1.12
date	2012.12.31.12.03.09;	author dcoppa;	state dead;
branches;
next	1.11;

1.11
date	2012.12.05.13.44.35;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2012.09.18.12.51.17;	author dcoppa;	state dead;
branches;
next	1.9;

1.9
date	2012.03.29.12.29.10;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2011.09.09.09.51.43;	author dcoppa;	state dead;
branches;
next	1.7;

1.7
date	2011.07.22.08.04.31;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.05.08.05.35;	author dcoppa;	state dead;
branches;
next	1.5;

1.5
date	2011.06.28.07.40.08;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.20.10.57.57;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2011.05.04.11.43.31;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.05.02.21.22.58;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2011.01.05.13.13.05;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Update to feh-2.10
@
text
@$OpenBSD: patch-src_winwidget_c,v 1.15 2013/12/12 09:20:52 dcoppa Exp $

Fix '--borderless' not working on 64bit systems
(upstream git commit b5a719d0dc475066eafc5810c2bdc49bca18713a)

--- src/winwidget.c.orig	Tue Jun 11 08:28:26 2013
+++ src/winwidget.c	Thu Dec 12 09:59:49 2013
@@@@ -228,6 +228,7 @@@@ void winwidget_create_window(winwidget ret, int w, int
 	    KeyPressMask | KeyReleaseMask | ButtonMotionMask | ExposureMask
 	    | FocusChangeMask | PropertyChangeMask | VisibilityChangeMask;
 
+	memset(&mwmhints, 0, sizeof(mwmhints));
 	if (opt.borderless || ret->full_screen) {
 		prop = XInternAtom(disp, "_MOTIF_WM_HINTS", True);
 		if (prop == None) {
@@@@ -240,8 +241,7 @@@@ void winwidget_create_window(winwidget ret, int w, int
 			mwmhints.flags = MWM_HINTS_DECORATIONS;
 			mwmhints.decorations = 0;
 		}
-	} else
-		mwmhints.flags = 0;
+	}
 
 	ret->win =
 	    XCreateWindow(disp, DefaultRootWindow(disp), x, y, w, h, 0,
@


1.15
log
@Fix '--borderless' not working on 64bit systems
(upstream git commit b5a719d0dc475066eafc5810c2bdc49bca18713a)

Use '%F' since feh supports multiple files
(upstream git commit 865a78510ff53db952ec5de98c934b60bfc664c8)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.14
log
@Update to feh-2.9.2
@
text
@d1 1
a1 1
$OpenBSD: patch-src_winwidget_c,v 1.13 2013/04/22 20:38:43 dcoppa Exp $
d3 2
a4 2
Fix -F --zoom 100 not working when compiling feh with gcc and enabled
optimizations (git commit cc7cb9f381e2687933b960da3599097beb727554)
d6 5
a10 4
--- src/winwidget.c.orig	Mon Apr 22 21:51:47 2013
+++ src/winwidget.c	Mon Apr 22 22:08:58 2013
@@@@ -477,7 +477,7 @@@@ void winwidget_render_image(winwidget winwid, int resi
 				double old_zoom = winwid->zoom;
d12 14
a25 6
 				winwid->zoom = 0.01 * opt.default_zoom;
-				if (winwid->zoom != 1.0) {
+				if (opt.default_zoom != 100) {
 					if ((winwid->im_h * winwid->zoom) > max_h)
 						winwid->zoom = old_zoom;
 					else if ((winwid->im_w * winwid->zoom) > max_w)
@


1.13
log
@Fix -F --zoom 100 not working when compiling feh with gcc and enabled
optimizations (git commit cc7cb9f381e2687933b960da3599097beb727554)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.12
log
@Update to feh-2.8
@
text
@d1 1
a1 1
$OpenBSD: patch-src_winwidget_c,v 1.11 2012/12/05 13:44:35 dcoppa Exp $
d3 2
a4 2
Do not apply --scale-down to a thumbnail window
(upstream git commit 7c00adf853acc76520d43a12eb63ec151924d5ab)
d6 4
a9 3
--- src/winwidget.c.orig	Tue Oct 16 06:31:41 2012
+++ src/winwidget.c	Wed Dec  5 15:26:34 2012
@@@@ -402,6 +402,7 @@@@ void winwidget_render_image(winwidget winwid, int resi
d11 6
a16 16
 	if (!winwid->full_screen && opt.scale_down && ((winwid->w < winwid->im_w)
 						       || (winwid->h < winwid->im_h)) &&
+							  (winwid->type != WIN_TYPE_THUMBNAIL) &&
 							  (winwid->old_zoom == 1.0)) {
 		D(("scaling down image %dx%d\n", winwid->w, winwid->h));
 
@@@@ -512,7 +513,8 @@@@ void winwidget_render_image(winwidget winwid, int resi
 			winwid->im_y = (int) (max_h - (winwid->im_h * winwid->zoom)) >> 1;
 		}
 	}
-	else if (need_center && !winwid->full_screen && opt.scale_down) {
+	else if (need_center && !winwid->full_screen && opt.scale_down
+			&& (winwid->type != WIN_TYPE_THUMBNAIL)) {
 		winwid->im_x = (int) (winwid->w - (winwid->im_w * winwid->zoom)) >> 1;
 		winwid->im_y = (int) (winwid->h - (winwid->im_h * winwid->zoom)) >> 1;
 	}
@


1.11
log
@Do not apply --scale-down to a thumbnail window
(upstream git commit 7c00adf853acc76520d43a12eb63ec151924d5ab)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.10
log
@Update to feh-2.6.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_winwidget_c,v 1.9 2012/03/29 12:29:10 dcoppa Exp $
d3 2
a4 2
winwidget_allocate: memset winwid to zero
(upstream git commit 82a976e0909e02ba8c25e4fd10d0e56a3e5c13ca)
d6 3
a8 4
--- src/winwidget.c.orig	Thu Mar 29 14:20:29 2012
+++ src/winwidget.c	Thu Mar 29 14:21:00 2012
@@@@ -42,6 +42,7 @@@@ static winwidget winwidget_allocate(void)
 	winwidget ret = NULL;
d10 5
a14 2
 	ret = emalloc(sizeof(_winwidget));
+	memset(ret, 0, sizeof(_winwidget));
d16 10
a25 2
 	ret->win = 0;
 	ret->w = 0;
@


1.9
log
@feh_magick_load_image: fix memory leak when encountering unloadable file
(upstream git commit 8c8c1d5d52096a24e751f07d94972253a0e5054c)

winwidget_allocate: memset winwid to zero
(upstream git commit 82a976e0909e02ba8c25e4fd10d0e56a3e5c13ca)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.8
log
@Update to feh-1.16 (plus a bugfix from upstream git).
@
text
@d1 1
a1 1
$OpenBSD: patch-src_winwidget_c,v 1.7 2011/07/22 08:04:31 dcoppa Exp $
d3 2
a4 2
Respect --image-bg option in full-screen mode
(upstream git commit 0379af967bddd6e90e4c7dadee6d96be1cb82f1d)
d6 4
a9 5
--- src/winwidget.c.orig	Mon Jul  4 14:49:17 2011
+++ src/winwidget.c	Fri Jul 22 09:59:28 2011
@@@@ -350,7 +350,10 @@@@ void winwidget_setup_pixmaps(winwidget winwid)
 			if (winwid->gc == None) {
 				XGCValues gcval;
d11 5
a15 8
-				gcval.foreground = BlackPixel(disp, DefaultScreen(disp));
+				if (!strcmp(opt.image_bg, "white"))
+					gcval.foreground = WhitePixel(disp, DefaultScreen(disp));
+				else
+					gcval.foreground = BlackPixel(disp, DefaultScreen(disp));
 				winwid->gc = XCreateGC(disp, winwid->win, GCForeground, &gcval);
 			}
 			winwid->bg_pmap = XCreatePixmap(disp, winwid->win, scr->width, scr->height, depth);
@


1.7
log
@Respect --image-bg option in full-screen mode
(upstream git commit 0379af967bddd6e90e4c7dadee6d96be1cb82f1d)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.6
log
@Bugfixing update to feh-1.14.2
@
text
@d1 10
a10 5
$OpenBSD: patch-src_winwidget_c,v 1.5 2011/06/28 07:40:08 dcoppa Exp $
--- src/winwidget.c.orig	Thu May 19 22:36:13 2011
+++ src/winwidget.c	Tue Jun 28 09:33:26 2011
@@@@ -464,10 +464,12 @@@@ void winwidget_render_image(winwidget winwid, int resi
 				double old_zoom = winwid->zoom;
d12 8
a19 14
 				winwid->zoom = 0.01 * opt.default_zoom;
-				if ((winwid->im_h * winwid->zoom) > max_h)
-					winwid->zoom = old_zoom;
-				if ((winwid->im_w * winwid->zoom) > max_w)
-					winwid->zoom = old_zoom;
+				if (winwid->zoom != 1.0) {
+					if ((winwid->im_h * winwid->zoom) > max_h)
+						winwid->zoom = old_zoom;
+					else if ((winwid->im_w * winwid->zoom) > max_w)
+						winwid->zoom = old_zoom;
+				}
 
 				winwid->im_x = ((int)
 						(max_w - (winwid->im_w * winwid->zoom))) >> 1;
@


1.5
log
@Latest round of fixes from upstream:

* fix --draw-filename "x of y" being cut off by short filenames
* respect --zoom 100 in --fullscreen mode
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@Update to feh-1.14.1
@
text
@d1 5
a5 31
$OpenBSD: patch-src_winwidget_c,v 1.3 2011/05/04 11:43:31 dcoppa Exp $

Use NETWM for fullscreen windows only
(commit bce956523f56b88ec04c074cd55041c5b9a81c90)

--- src/winwidget.c.orig	Wed May  4 13:20:06 2011
+++ src/winwidget.c	Wed May  4 13:20:06 2011
@@@@ -774,15 +774,17 @@@@ void winwidget_resize(winwidget winwid, int w, int h)
 			winwid->w = (w > scr->width) ? scr->width : w;
 			winwid->h = (h > scr->height) ? scr->height : h;
 		}
-		/* XResizeWindow(disp, winwid->win, winwid->w, winwid->h); */
-		XGetWindowAttributes(disp, winwid->win, &attributes);
-		XTranslateCoordinates(disp, winwid->win, attributes.root,
-				      -attributes.border_width -
-				      attributes.x,
-				      -attributes.border_width - attributes.y, &tc_x, &tc_y, &ignored_window);
-		winwid->x = tc_x;
-		winwid->y = tc_y;
-		XMoveResizeWindow(disp, winwid->win, tc_x, tc_y, winwid->w, winwid->h);
+		if (winwid->full_screen) {
+			XGetWindowAttributes(disp, winwid->win, &attributes);
+			XTranslateCoordinates(disp, winwid->win, attributes.root,
+						-attributes.border_width -
+						attributes.x,
+						-attributes.border_width - attributes.y, &tc_x, &tc_y, &ignored_window);
+			winwid->x = tc_x;
+			winwid->y = tc_y;
+			XMoveResizeWindow(disp, winwid->win, tc_x, tc_y, winwid->w, winwid->h);
+		} else
+			XResizeWindow(disp, winwid->win, winwid->w, winwid->h);
d7 14
a20 2
 		winwid->had_resize = 1;
 		XFlush(disp);
@


1.3
log
@Three cherry-picked fixes from upstream git:

Zap a use-after-free.
Use NETWM for fullscreen windows only.
feh(1) manpage fix.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to feh-1.13.
I take maintainership too, cause old maintainer is M.I.A.

OK sthen@@
@
text
@d1 31
a31 5
$OpenBSD: patch-src_winwidget_c,v 1.1 2011/01/05 13:13:05 dcoppa Exp $
--- src/winwidget.c.orig	Fri Dec  3 19:42:44 2010
+++ src/winwidget.c	Wed Jan  5 14:07:03 2011
@@@@ -383,7 +383,8 @@@@ void winwidget_render_image(winwidget winwid, int resi
 	winwidget_setup_pixmaps(winwid);
d33 2
a34 15
 	if (!winwid->full_screen && opt.scale_down && ((winwid->w < winwid->im_w)
-						       || (winwid->h < winwid->im_h))) {
+						       || (winwid->h < winwid->im_h)) &&
+							  (winwid->old_zoom == 1.0)) {
 		D(("scaling down image %dx%d\n", winwid->w, winwid->h));
 
 		feh_calc_needed_zoom(&(winwid->zoom), winwid->im_w, winwid->im_h, winwid->w, winwid->h);
@@@@ -908,6 +909,7 @@@@ void feh_debug_print_winwid(winwidget w)
 void winwidget_reset_image(winwidget winwid)
 {
 	winwid->zoom = 1.0;
+	winwid->old_zoom = 1.0;
 	winwid->im_x = 0;
 	winwid->im_y = 0;
 	winwid->im_angle = 0.0;
@


1.1
log
@Fix zooming with --scale-down.

From upstream git
@
text
@d1 1
a1 1
$OpenBSD$
@

