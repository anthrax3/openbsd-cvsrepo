head	1.2;
access;
symbols
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.10
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.8
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.6
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.4
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.2
	OPENBSD_2_5_BASE:1.1.1.1
	brad_1999-03-18:1.1.1.1
	brad:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2001.10.03.03.09.31;	author brad;	state dead;
branches;
next	1.1;

1.1
date	99.03.19.01.32.04;	author brad;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.03.19.01.32.04;	author brad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@upgrade to netpbm 9.19
@
text
@--- pnm/tifftopnm.c.orig	Mon Oct  4 10:12:01 1993
+++ pnm/tifftopnm.c	Sun Jan 10 23:48:40 1999
@@@@ -54,7 +54,7 @@@@
     int headerdump;
     register u_char sample;
     register int bitsleft;
-    unsigned short bps, spp, photomet;
+    unsigned short bps, spp, photomet, planarconfig;
     unsigned short* redcolormap;
     unsigned short* greencolormap;
     unsigned short* bluecolormap;
@@@@ -101,6 +101,13 @@@@
 	spp = 1;
     if ( ! TIFFGetField( tif, TIFFTAG_PHOTOMETRIC, &photomet ) )
 	pm_error( "error getting photometric" );
+    if( spp > 1 ){
+	if ( ! TIFFGetField( tif, TIFFTAG_PLANARCONFIG, &planarconfig ) )
+	    pm_error( "error getting planarconfig" );
+    }else{
+	planarconfig = PLANARCONFIG_CONTIG;
+    }
+
 
     switch ( spp )
 	{
@@@@ -114,6 +121,18 @@@@
 	    "can only handle 1-channel gray scale or 1- or 3-channel color" );
 	}
 
+    switch( planarconfig )
+	{
+	case PLANARCONFIG_CONTIG:
+	    break;
+	case PLANARCONFIG_SEPARATE:
+	    if( photomet != PHOTOMETRIC_RGB )
+		pm_error( "can only handle separate planes with RGB data" );
+	    break;
+	default:
+	    pm_error("Unrecongnized PLANARCONFIG tag!\n");
+	}
+
     (void) TIFFGetField( tif, TIFFTAG_IMAGEWIDTH, &cols );
     (void) TIFFGetField( tif, TIFFTAG_IMAGELENGTH, &rows );
 
@@@@ -259,20 +278,54 @@@@
 	    break;
 
 	    case PHOTOMETRIC_RGB:
-	    for ( col = 0; col < cols; ++col, ++xP )
-		{
-		register xelval r, g, b;
-
-		NEXTSAMPLE
-		r = sample;
-		NEXTSAMPLE
-		g = sample;
-		NEXTSAMPLE
-		b = sample;
-		if ( spp == 4 )
-		    NEXTSAMPLE		/* skip alpha channel */
-		PPM_ASSIGN( *xP, r, g, b );
-		}
+	    if( planarconfig == PLANARCONFIG_CONTIG ){
+		for ( col = 0; col < cols; ++col, ++xP )
+		    {
+		    register xelval r, g, b;
+
+		    NEXTSAMPLE
+		    r = sample;
+		    NEXTSAMPLE
+		    g = sample;
+		    NEXTSAMPLE
+		    b = sample;
+		    if ( spp == 4 )
+		        NEXTSAMPLE /* skip alpha channel */
+		    PPM_ASSIGN( *xP, r, g, b );
+		    }
+	    }else{
+		/* First clear the value and assign the reds */
+		for ( col = 0; col < cols; ++col, ++xP )
+		    {
+			NEXTSAMPLE
+			PPM_ASSIGN( *xP, 0, 0, 0 );
+			PPM_PUTR( *xP, sample );
+		    }
+
+		/* Next the greens */
+		if ( TIFFReadScanline( tif, buf, row, 1 ) < 0 )
+		    pm_error( "bad data read on green line %d", row );
+		xP = xelrow;
+		inP = buf;
+		bitsleft = 8;
+		for ( col = 0; col < cols; ++col, ++xP )
+		    {
+			NEXTSAMPLE
+			PPM_PUTG( *xP, sample );
+		    }
+
+		/* And finally the blues */
+		if ( TIFFReadScanline( tif, buf, row, 2 ) < 0 )
+		    pm_error( "bad data read on green line %d", row );
+		xP = xelrow;
+		inP = buf;
+		bitsleft = 8;
+		for ( col = 0; col < cols; ++col, ++xP )
+		    {
+			NEXTSAMPLE
+			PPM_PUTB( *xP, sample );
+		    }
+	    }		
 	    break;
 
 	    default:
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@add netpbm port
@
text
@@
