head	1.5;
access;
symbols
	OPENBSD_2_9_TRACKING_SWITCH:1.4
	OPENBSD_2_9:1.4.0.8
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	brad_1999-03-18:1.1.1.2
	brad:1.1.1
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	form_980514:1.1.1.1
	form:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2001.10.03.03.09.31;	author brad;	state dead;
branches;
next	1.4;

1.4
date	99.06.01.14.28.46;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	99.03.19.01.57.41;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	98.07.04.03.40.38;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	98.05.14.05.41.13;	author form;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.05.14.05.41.13;	author form;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.03.19.01.31.46;	author brad;	state Exp;
branches;
next	;


desc
@@


1.5
log
@upgrade to netpbm 9.19
@
text
@--- Makefile.orig	Wed Jan 26 06:47:35 1994
+++ Makefile	Tue Jun  1 09:25:33 1999
@@@@ -16,12 +16,12 @@@@
 # gcc can't compile pnmconvol - dunno why.  And on some systems you can't
 # use the -ansi flag, it gives compilation errors in <math.h>.
 #CC =		cc
-CC =		gcc
+#CC =		gcc
 #CC =		gcc -fcombine-regs -fpcc-struct-return
 #CC =		gcc -ansi -pedantic -fcombine-regs -fpcc-struct-return
 
 # CONFIGURE: cc flags go here.
-CFLAGS =	-O
+#CFLAGS =	-O2
 #CFLAGS =	-g
 #CFLAGS =	-g -O
 
@@@@ -48,33 +48,36 @@@@
 # By the way, you must have at least version 2.4 of libtiff.  Earlier
 # versions will not work.
 TIFFDEF =	-DLIBTIFF
-TIFFINC =	-I../libtiff
-TIFFLIB =	../libtiff/libtiff.a
+TIFFINC =	-I$(PREFIX)/include
+TIFFLIB =	-L$(PREFIX)/lib -ltiff -ljpeg
 TIFFBINARIES =	tifftopnm pnmtotiff
 TIFFOBJECTS =	tifftopnm.o pnmtotiff.o
 
 # CONFIGURE: Define the directory that you want the binaries copied to.
 # If you need scripts and binaries to be in different directories, you
 # can set that up too.
-INSTALLBINARIES =	/usr/local/netpbm
+INSTALLBINARIES =	$(PREFIX)/bin
 INSTALLSCRIPTS =	$(INSTALLBINARIES)
 
 # CONFIGURE: Define the directories that you want the manual sources copied to,
 # plus the suffix you want them to have.
-INSTALLMANUALS1 =	/usr/local/man/man1
+INSTALLMANUALS1 =	$(PREFIX)/man/man1
 SUFFIXMANUALS1 =	1
-INSTALLMANUALS3 =	/usr/local/man/man3
+INSTALLMANUALS3 =	$(PREFIX)/man/man3
 SUFFIXMANUALS3 =	3
-INSTALLMANUALS5 =	/usr/local/man/man5
+INSTALLMANUALS5 =	$(PREFIX)/man/man5
 SUFFIXMANUALS5 =	5
 
 # CONFIGURE: Normally the man pages are installed using "cp".  By changing
 # this define you can use something else, for example a script that calls
 # compress or pack. The ../mantocat is used on systems which use man pages
 # in the "cat" format.
-MANCP =			cp
+MANCP =			install -c -m 0644
 #MANCP =		../mantocat
 
+INSTALLLIBS =		$(PREFIX)/lib
+INSTALLDEFS =		$(PREFIX)/include
+
 # CONFIGURE: Normally the Makefiles build and install separate binaries for
 # each program.  However, on some systems (especially those without shared
 # libraries) this can mean a lot of space.  In this case you might try
@@@@ -87,10 +90,10 @@@@
 #
 # Note that if you make a "merge", the executables don't get created
 # until you do the install.
-#all:		binaries
-#install:	install.bin install.man
-all:		merge
-install:	install.merge install.man
+all:		binaries
+install:	install.bin install.man
+#all:		merge
+#install:	install.merge install.man
 
 # End of configurable definitions.
 
@@@@ -99,10 +102,10 @@@@
 SUBDIRS =	pbm pgm ppm pnm
 
 binaries:
-	./stamp-date
-	( echo "libtiff" ; cd libtiff ; make )
+#	./stamp-date
+#	( echo "libtiff" ; cd libtiff ; make )
 	for i in $(SUBDIRS) ; do \
-	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' binaries ); \
+	    ( echo "===> $$i" ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' binaries ); \
 	done
 
 merge:
@@@@ -113,15 +116,19 @@@@
 	done
 
 install.bin:
-	-mkdir $(INSTALLBINARIES)
+#	-mkdir $(INSTALLBINARIES)
+#	-mkdir $(INSTALLLIBS)
+#	-mkdir $(INSTALLDEFS)
 	for i in $(SUBDIRS) ; do \
-	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' 'INSTALLBINARIES=$(INSTALLBINARIES)' 'INSTALLSCRIPTS=$(INSTALLSCRIPTS)' install.bin ); \
+	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' 'INSTALLBINARIES=$(INSTALLBINARIES)' 'INSTALLSCRIPTS=$(INSTALLSCRIPTS)' 'INSTALLLIBS=$(INSTALLLIBS)' 'INSTALLDEFS=$(INSTALLDEFS)' install.bin ); \
 	done
 
 install.merge:
-	-mkdir $(INSTALLBINARIES)
+#	-mkdir $(INSTALLBINARIES)
+#	-mkdir $(INSTALLLIBS)
+#	-mkdir $(INSTALLDEFS)
 	for i in $(SUBDIRS) ; do \
-	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' 'INSTALLBINARIES=$(INSTALLBINARIES)' 'INSTALLSCRIPTS=$(INSTALLSCRIPTS)' install.merge ); \
+	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' 'INSTALLBINARIES=$(INSTALLBINARIES)' 'INSTALLSCRIPTS=$(INSTALLSCRIPTS)' 'INSTALLLIBS=$(INSTALLLIBS)' 'INSTALLDEFS=$(INSTALLDEFS)' install.merge ); \
 	done
 
 install.man:
@@@@ -131,7 +138,7 @@@@
 
 clean:
 	rm -f *.shar *.shar? art.* *~
-	echo "" > compile.h
-	for i in $(SUBDIRS) libtiff ; do \
+	rm -f compile.h ; echo "" > compile.h
+	for i in $(SUBDIRS) ; do \
 	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) clean ); \
 	done
@


1.4
log
@- Fix handling of comments in rgb.txt
- Add support for more xbm files
- Make this port respect CC and CFLAGS
@
text
@@


1.3
log
@fix conflicts
@
text
@d1 9
a9 3
--- Makefile.orig	Wed Jan 26 12:47:35 1994
+++ Makefile	Mon Jan 11 00:17:07 1999
@@@@ -21,7 +21,7 @@@@
d14 1
a14 1
+CFLAGS =	-O2
@


1.2
log
@remove patches no longer needed for tiff34
@
text
@d1 118
a118 109
*** Makefile.orig	Wed Jan 26 18:47:35 1994
--- Makefile	Thu May 14 12:22:10 1998
***************
*** 48,78 ****
  # By the way, you must have at least version 2.4 of libtiff.  Earlier
  # versions will not work.
  TIFFDEF =	-DLIBTIFF
! TIFFINC =	-I../libtiff
! TIFFLIB =	../libtiff/libtiff.a
  TIFFBINARIES =	tifftopnm pnmtotiff
  TIFFOBJECTS =	tifftopnm.o pnmtotiff.o
  
  # CONFIGURE: Define the directory that you want the binaries copied to.
  # If you need scripts and binaries to be in different directories, you
  # can set that up too.
! INSTALLBINARIES =	/usr/local/netpbm
  INSTALLSCRIPTS =	$(INSTALLBINARIES)
  
  # CONFIGURE: Define the directories that you want the manual sources copied to,
  # plus the suffix you want them to have.
! INSTALLMANUALS1 =	/usr/local/man/man1
  SUFFIXMANUALS1 =	1
! INSTALLMANUALS3 =	/usr/local/man/man3
  SUFFIXMANUALS3 =	3
! INSTALLMANUALS5 =	/usr/local/man/man5
  SUFFIXMANUALS5 =	5
  
  # CONFIGURE: Normally the man pages are installed using "cp".  By changing
  # this define you can use something else, for example a script that calls
  # compress or pack. The ../mantocat is used on systems which use man pages
  # in the "cat" format.
! MANCP =			cp
  #MANCP =		../mantocat
  
  # CONFIGURE: Normally the Makefiles build and install separate binaries for
--- 48,78 ----
  # By the way, you must have at least version 2.4 of libtiff.  Earlier
  # versions will not work.
  TIFFDEF =	-DLIBTIFF
! TIFFINC =	-I$(PREFIX)/include
! TIFFLIB =	-L$(PREFIX)/lib -ltiff -ljpeg
  TIFFBINARIES =	tifftopnm pnmtotiff
  TIFFOBJECTS =	tifftopnm.o pnmtotiff.o
  
  # CONFIGURE: Define the directory that you want the binaries copied to.
  # If you need scripts and binaries to be in different directories, you
  # can set that up too.
! INSTALLBINARIES =	$(PREFIX)/bin
  INSTALLSCRIPTS =	$(INSTALLBINARIES)
  
  # CONFIGURE: Define the directories that you want the manual sources copied to,
  # plus the suffix you want them to have.
! INSTALLMANUALS1 =	$(PREFIX)/man/man1
  SUFFIXMANUALS1 =	1
! INSTALLMANUALS3 =	$(PREFIX)/man/man3
  SUFFIXMANUALS3 =	3
! INSTALLMANUALS5 =	$(PREFIX)/man/man5
  SUFFIXMANUALS5 =	5
  
  # CONFIGURE: Normally the man pages are installed using "cp".  By changing
  # this define you can use something else, for example a script that calls
  # compress or pack. The ../mantocat is used on systems which use man pages
  # in the "cat" format.
! MANCP =			${INSTALL_MAN}
  #MANCP =		../mantocat
  
  # CONFIGURE: Normally the Makefiles build and install separate binaries for
***************
*** 87,96 ****
  #
  # Note that if you make a "merge", the executables don't get created
  # until you do the install.
! #all:		binaries
! #install:	install.bin install.man
! all:		merge
! install:	install.merge install.man
  
  # End of configurable definitions.
  
--- 87,96 ----
  #
  # Note that if you make a "merge", the executables don't get created
  # until you do the install.
! all:		binaries
! install:	install.bin install.man
! #all:		merge
! #install:	install.merge install.man
  
  # End of configurable definitions.
  
***************
*** 99,106 ****
  SUBDIRS =	pbm pgm ppm pnm
  
  binaries:
! 	./stamp-date
! 	( echo "libtiff" ; cd libtiff ; make )
  	for i in $(SUBDIRS) ; do \
  	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' binaries ); \
  	done
--- 99,106 ----
  SUBDIRS =	pbm pgm ppm pnm
  
  binaries:
! #	./stamp-date
! #	( echo "libtiff" ; cd libtiff ; make )
  	for i in $(SUBDIRS) ; do \
  	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' binaries ); \
  	done
@


1.1
log
@Initial revision
@
text
@d41 1
a41 1
! TIFFLIB =	-L$(PREFIX)/lib -ltiff34 -ljpeg
@


1.1.1.1
log
@netpbm-94.3.1, image converter of many formats
@
text
@@


1.1.1.2
log
@add netpbm port
@
text
@d1 109
a109 118
--- Makefile.orig	Wed Jan 26 12:47:35 1994
+++ Makefile	Mon Jan 11 00:17:07 1999
@@@@ -21,7 +21,7 @@@@
 #CC =		gcc -ansi -pedantic -fcombine-regs -fpcc-struct-return
 
 # CONFIGURE: cc flags go here.
-CFLAGS =	-O
+CFLAGS =	-O2
 #CFLAGS =	-g
 #CFLAGS =	-g -O
 
@@@@ -48,33 +48,36 @@@@
 # By the way, you must have at least version 2.4 of libtiff.  Earlier
 # versions will not work.
 TIFFDEF =	-DLIBTIFF
-TIFFINC =	-I../libtiff
-TIFFLIB =	../libtiff/libtiff.a
+TIFFINC =	-I$(PREFIX)/include
+TIFFLIB =	-L$(PREFIX)/lib -ltiff -ljpeg
 TIFFBINARIES =	tifftopnm pnmtotiff
 TIFFOBJECTS =	tifftopnm.o pnmtotiff.o
 
 # CONFIGURE: Define the directory that you want the binaries copied to.
 # If you need scripts and binaries to be in different directories, you
 # can set that up too.
-INSTALLBINARIES =	/usr/local/netpbm
+INSTALLBINARIES =	$(PREFIX)/bin
 INSTALLSCRIPTS =	$(INSTALLBINARIES)
 
 # CONFIGURE: Define the directories that you want the manual sources copied to,
 # plus the suffix you want them to have.
-INSTALLMANUALS1 =	/usr/local/man/man1
+INSTALLMANUALS1 =	$(PREFIX)/man/man1
 SUFFIXMANUALS1 =	1
-INSTALLMANUALS3 =	/usr/local/man/man3
+INSTALLMANUALS3 =	$(PREFIX)/man/man3
 SUFFIXMANUALS3 =	3
-INSTALLMANUALS5 =	/usr/local/man/man5
+INSTALLMANUALS5 =	$(PREFIX)/man/man5
 SUFFIXMANUALS5 =	5
 
 # CONFIGURE: Normally the man pages are installed using "cp".  By changing
 # this define you can use something else, for example a script that calls
 # compress or pack. The ../mantocat is used on systems which use man pages
 # in the "cat" format.
-MANCP =			cp
+MANCP =			install -c -m 0644
 #MANCP =		../mantocat
 
+INSTALLLIBS =		$(PREFIX)/lib
+INSTALLDEFS =		$(PREFIX)/include
+
 # CONFIGURE: Normally the Makefiles build and install separate binaries for
 # each program.  However, on some systems (especially those without shared
 # libraries) this can mean a lot of space.  In this case you might try
@@@@ -87,10 +90,10 @@@@
 #
 # Note that if you make a "merge", the executables don't get created
 # until you do the install.
-#all:		binaries
-#install:	install.bin install.man
-all:		merge
-install:	install.merge install.man
+all:		binaries
+install:	install.bin install.man
+#all:		merge
+#install:	install.merge install.man
 
 # End of configurable definitions.
 
@@@@ -99,10 +102,10 @@@@
 SUBDIRS =	pbm pgm ppm pnm
 
 binaries:
-	./stamp-date
-	( echo "libtiff" ; cd libtiff ; make )
+#	./stamp-date
+#	( echo "libtiff" ; cd libtiff ; make )
 	for i in $(SUBDIRS) ; do \
-	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' binaries ); \
+	    ( echo "===> $$i" ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' binaries ); \
 	done
 
 merge:
@@@@ -113,15 +116,19 @@@@
 	done
 
 install.bin:
-	-mkdir $(INSTALLBINARIES)
+#	-mkdir $(INSTALLBINARIES)
+#	-mkdir $(INSTALLLIBS)
+#	-mkdir $(INSTALLDEFS)
 	for i in $(SUBDIRS) ; do \
-	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' 'INSTALLBINARIES=$(INSTALLBINARIES)' 'INSTALLSCRIPTS=$(INSTALLSCRIPTS)' install.bin ); \
+	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' 'INSTALLBINARIES=$(INSTALLBINARIES)' 'INSTALLSCRIPTS=$(INSTALLSCRIPTS)' 'INSTALLLIBS=$(INSTALLLIBS)' 'INSTALLDEFS=$(INSTALLDEFS)' install.bin ); \
 	done
 
 install.merge:
-	-mkdir $(INSTALLBINARIES)
+#	-mkdir $(INSTALLBINARIES)
+#	-mkdir $(INSTALLLIBS)
+#	-mkdir $(INSTALLDEFS)
 	for i in $(SUBDIRS) ; do \
-	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' 'INSTALLBINARIES=$(INSTALLBINARIES)' 'INSTALLSCRIPTS=$(INSTALLSCRIPTS)' install.merge ); \
+	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'TIFFDEF=$(TIFFDEF)' 'TIFFINC=$(TIFFINC)' 'TIFFLIB=$(TIFFLIB)' 'TIFFBINARIES=$(TIFFBINARIES)' 'TIFFOBJECTS=$(TIFFOBJECTS)' 'LDFLAGS=$(LDFLAGS)' 'INSTALLBINARIES=$(INSTALLBINARIES)' 'INSTALLSCRIPTS=$(INSTALLSCRIPTS)' 'INSTALLLIBS=$(INSTALLLIBS)' 'INSTALLDEFS=$(INSTALLDEFS)' install.merge ); \
 	done
 
 install.man:
@@@@ -131,7 +138,7 @@@@
 
 clean:
 	rm -f *.shar *.shar? art.* *~
-	echo "" > compile.h
-	for i in $(SUBDIRS) libtiff ; do \
+	rm -f compile.h ; echo "" > compile.h
+	for i in $(SUBDIRS) ; do \
 	    ( echo $$i ; cd $$i ; $(MAKE) $(MFLAGS) clean ); \
 	done
@

