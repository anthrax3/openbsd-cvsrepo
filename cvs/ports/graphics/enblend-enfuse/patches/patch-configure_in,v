head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.14
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.10
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.8
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	sthen_20090419:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.03.08.01.30.37;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.11.20.09.00;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2009.04.19.11.14.37;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.04.19.11.14.37;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update for newer Boost.

From Amit Kulkarni.

ok sthen@@
@
text
@$OpenBSD$

adapt patch from http://enblend.hg.sourceforge.net/hgweb/enblend/enblend/diff/57db56afb9a9/configure.in

--- configure.in.orig	Sat Nov 24 14:57:20 2012
+++ configure.in	Sat Nov 24 15:01:33 2012
@@@@ -196,8 +196,26 @@@@ AC_CHECK_HEADER(boost/random/mersenne_twister.hpp, [],
                 AC_MSG_ERROR([Boost "mersenne_twister" header file is required to compile Enblend.]))
 AC_CHECK_HEADER(boost/scoped_ptr.hpp, [],
                 AC_MSG_ERROR([Boost "scoped_ptr" header file is required to compile Enblend.]))
+AC_CHECK_HEADER(boost/system/error_code.hpp, [],
+                AC_MSG_ERROR([Boost "error code" header file is required to compile Enblend.]))
 AC_CHECK_HEADER(boost/static_assert.hpp, [],
                 AC_MSG_ERROR([Boost "static_assert" header file is required to compile Enblend.]))
+
+
+LIBS="-lboost_system $LIBS"
+AC_MSG_CHECKING([for new Boost system library])
+AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include "boost/system/error_code.hpp"]],
+                                [[boost::system::generic_category();
+                                  boost::system::system_category()]])],
+               [AC_MSG_RESULT(yes)],
+               [AC_MSG_RESULT(no)
+                AC_MSG_CHECKING([for old Boost system library])
+                AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include "boost/system/error_code.hpp"]],
+                                [[boost::system::get_generic_category();
+                                  boost::system::get_system_category()]])],
+                               [AC_MSG_RESULT(yes)],
+                               [AC_MSG_RESULT(no)
+                                AC_MSG_ERROR([Boost "system" library is required to compile Enblend.])])])
 
 AC_ARG_WITH([boost-filesystem],
             [AS_HELP_STRING([--with-boost-filesystem],
@


1.2
log
@update enblend-enfuse to 4.0, with a patch to allow documentation to
built with in-tree texinfo (it wanted the textdegree macro which wasn't
added until texinfo-4.11).
@
text
@d1 30
a30 11
$OpenBSD: patch-configure_in,v 1.1 2009/04/19 11:14:37 sthen Exp $
--- configure.in.orig	Fri Jul 25 00:52:20 2008
+++ configure.in	Fri Jul 25 00:52:27 2008
@@@@ -119,7 +119,7 @@@@ if test "x$enable_debug" = "xyes"; then
   CXXFLAGS="$CXXFLAGS -g -DDEBUG -Wall"
   AC_MSG_RESULT(yes)
 else
-  CXXFLAGS="$CXXFLAGS -O3 -ffast-math -DNDEBUG -Wall"
+  CXXFLAGS="$CXXFLAGS -ffast-math -DNDEBUG -Wall"
   AC_MSG_RESULT(no)
 fi
d32 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import graphics/enblend-enfuse:

Enblend combines images that partially overlap into a single large
image with no seams (panorama generation). This is a command-line
tool which performs the actual composition; another tool is required
to line up the images ready for input (e.g. Hugin).

Enfuse combines images that overlap into a single image with good
focus and exposure (exposure stacking for high dynamic range, focus
stacking for extended depth-of-field).

will be hooked to the build after tests on additional arch.
big thanks to Emmanuel Viaud for rewriting some C++ to build with GCC 3.
@
text
@@
