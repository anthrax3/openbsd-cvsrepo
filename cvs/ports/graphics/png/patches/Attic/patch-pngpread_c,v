head	1.2;
access;
symbols
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_5:1.2.0.4
	OPENBSD_4_7:1.2.0.2
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_5:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2004.09.20.01.24.11;	author brad;	state dead;
branches
	1.2.2.1
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	2004.08.05.19.17.14;	author brad;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2004.08.05.19.32.37;	author brad;	state Exp;
branches;
next	;

1.1.4.1
date	2004.08.05.19.53.27;	author brad;	state Exp;
branches;
next	;

1.2.2.1
date	2010.07.22.02.31.07;	author william;	state Exp;
branches;
next	;

1.2.4.1
date	2014.04.18.10.19.31;	author brad;	state Exp;
branches;
next	;

1.2.6.1
date	2014.04.18.10.19.59;	author brad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@upgrade to png 1.2.7
@
text
@$OpenBSD: patch-pngpread_c,v 1.1 2004/08/05 19:17:14 brad Exp $
--- pngpread.c.orig	Thu Oct  3 07:32:28 2002
+++ pngpread.c	Thu Aug  5 14:29:45 2004
@@@@ -208,7 +208,7 @@@@ png_push_read_chunk(png_structp png_ptr,
       }
 
       png_push_fill_buffer(png_ptr, chunk_length, 4);
-      png_ptr->push_length = png_get_uint_32(chunk_length);
+      png_ptr->push_length = png_get_uint_31(png_ptr,chunk_length);
       png_reset_crc(png_ptr);
       png_crc_read(png_ptr, png_ptr->chunk_name, 4);
       png_ptr->mode |= PNG_HAVE_CHUNK_HEADER;
@@@@ -591,6 +591,11 @@@@ png_push_save_buffer(png_structp png_ptr
       png_size_t new_max;
       png_bytep old_buffer;
 
+      if (png_ptr->save_buffer_size > PNG_SIZE_MAX - 
+         (png_ptr->current_buffer_size + 256))
+      {
+        png_error(png_ptr, "Potential overflow of save_buffer");
+      }
       new_max = png_ptr->save_buffer_size + png_ptr->current_buffer_size + 256;
       old_buffer = png_ptr->save_buffer;
       png_ptr->save_buffer = (png_bytep)png_malloc(png_ptr,
@@@@ -637,8 +642,7 @@@@ png_push_read_IDAT(png_structp png_ptr)
       }
 
       png_push_fill_buffer(png_ptr, chunk_length, 4);
-      png_ptr->push_length = png_get_uint_32(chunk_length);
-
+      png_ptr->push_length = png_get_uint_31(png_ptr,chunk_length);
       png_reset_crc(png_ptr);
       png_crc_read(png_ptr, png_ptr->chunk_name, 4);
       png_ptr->mode |= PNG_HAVE_CHUNK_HEADER;
@


1.2.6.1
log
@libpng will hang when reading images that have zero-length IDAT chunks with
the progressive (streaming) reader; a malicious web site could use this bug
to cause a (minor) denial of service. (CVE-2014-0333)

ok sthen@@
@
text
@d1 5
a5 10
$OpenBSD$

libpng will hang when reading images that have zero-length IDAT chunks with
the progressive (streaming) reader; a malicious web site could use this bug
to cause a (minor) denial of service. CVE-2014-0333

--- pngpread.c.orig	Fri Apr 18 03:47:14 2014
+++ pngpread.c	Fri Apr 18 03:47:45 2014
@@@@ -234,6 +234,7 @@@@ png_push_read_chunk(png_structrp png_ptr, png_inforp i
          png_error(png_ptr, "Missing PLTE before IDAT");
d7 9
a15 2
       png_ptr->mode |= PNG_HAVE_IDAT;
+      png_ptr->process_mode = PNG_READ_IDAT_MODE;
d17 18
a34 2
       if (!(png_ptr->mode & PNG_HAVE_CHUNK_AFTER_IDAT))
          if (png_ptr->push_length == 0)
@


1.2.4.1
log
@libpng will hang when reading images that have zero-length IDAT chunks with
the progressive (streaming) reader; a malicious web site could use this bug
to cause a (minor) denial of service. (CVE-2014-0333)

ok sthen@@
@
text
@d1 5
a5 10
$OpenBSD$

libpng will hang when reading images that have zero-length IDAT chunks with
the progressive (streaming) reader; a malicious web site could use this bug
to cause a (minor) denial of service. CVE-2014-0333

--- pngpread.c.orig	Fri Apr 18 03:39:17 2014
+++ pngpread.c	Fri Apr 18 03:39:59 2014
@@@@ -234,6 +234,7 @@@@ png_push_read_chunk(png_structrp png_ptr, png_inforp i
          png_error(png_ptr, "Missing PLTE before IDAT");
d7 9
a15 2
       png_ptr->mode |= PNG_HAVE_IDAT;
+      png_ptr->process_mode = PNG_READ_IDAT_MODE;
d17 18
a34 2
       if (!(png_ptr->mode & PNG_HAVE_CHUNK_AFTER_IDAT))
          if (png_ptr->push_length == 0)
@


1.2.2.1
log
@SECURITY FIX

Resolves CVE-2010-0205, CVE-2010-1205, and CVE-2010-2249

patches from upstream

started by stephan@@ and reads fine to kili@@ (thanks)
@
text
@d1 34
a34 23
$OpenBSD$

SECURITY FIX

Resolves CVE-2010-1205
from upstream commit 188eb6b42602bf7d7ae708a21897923b6a83fe7c


--- pngpread.c.orig	Wed Dec  2 20:46:00 2009
+++ pngpread.c	Thu Jul 15 19:58:01 2010
@@@@ -885,6 +885,12 @@@@ png_process_IDAT_data(png_structp png_ptr, png_bytep b
 void /* PRIVATE */
 png_push_process_row(png_structp png_ptr)
 {
+   if (png_ptr->row_number >= png_ptr->num_rows)
+   {
+      png_benign_error(png_ptr, "Extra row in image");
+      return;
+   }
+
    png_ptr->row_info.color_type = png_ptr->color_type;
    png_ptr->row_info.width = png_ptr->iwidth;
    png_ptr->row_info.channels = png_ptr->channels;
@


1.1
log
@Add pieces of the libpng jumbo security patch not already in the port.

http://www.us-cert.gov/cas/techalerts/TA04-217A.html
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.4.1
log
@Add pieces of the libpng jumbo security patch not already in the port.

http://www.us-cert.gov/cas/techalerts/TA04-217A.html
@
text
@d1 1
a1 1
$OpenBSD: patch-pngpread_c,v 1.1 2004/08/05 19:17:14 brad Exp $
@


1.1.2.1
log
@Add pieces of the libpng jumbo security patch not already in the port.

http://www.us-cert.gov/cas/techalerts/TA04-217A.html
@
text
@d1 1
a1 1
$OpenBSD: patch-pngpread_c,v 1.1 2004/08/05 19:17:14 brad Exp $
@

