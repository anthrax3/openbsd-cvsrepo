head	1.2;
access;
symbols
	OPENBSD_5_4:1.2.0.4
	OPENBSD_4_5:1.2.0.2
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_5:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2004.09.20.01.24.11;	author brad;	state dead;
branches
	1.2.2.1
	1.2.4.1;
next	1.1;

1.1
date	2004.07.06.22.17.49;	author brad;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2004.07.10.23.31.22;	author brad;	state Exp;
branches;
next	;

1.1.4.1
date	2004.07.10.23.41.49;	author brad;	state Exp;
branches;
next	;

1.2.2.1
date	2009.06.12.01.59.58;	author william;	state Exp;
branches;
next	;

1.2.4.1
date	2014.01.10.22.02.33;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@upgrade to png 1.2.7
@
text
@$OpenBSD: patch-pngrtran_c,v 1.1 2004/07/06 22:17:49 brad Exp $
--- pngrtran.c.orig	Tue Jul  6 17:44:30 2004
+++ pngrtran.c	Tue Jul  6 17:46:22 2004
@@@@ -1889,8 +1889,8 @@@@ png_do_read_filler(png_row_infop row_inf
          /* This changes the data from GG to GGXX */
          if (flags & PNG_FLAG_FILLER_AFTER)
          {
-            png_bytep sp = row + (png_size_t)row_width;
-            png_bytep dp = sp  + (png_size_t)row_width;
+            png_bytep sp = row + (png_size_t)row_width * 2;
+            png_bytep dp = sp  + (png_size_t)row_width * 2;
             for (i = 1; i < row_width; i++)
             {
                *(--dp) = hi_filler;
@@@@ -1907,8 +1907,8 @@@@ png_do_read_filler(png_row_infop row_inf
          /* This changes the data from GG to XXGG */
          else
          {
-            png_bytep sp = row + (png_size_t)row_width;
-            png_bytep dp = sp  + (png_size_t)row_width;
+            png_bytep sp = row + (png_size_t)row_width * 2;
+            png_bytep dp = sp  + (png_size_t)row_width * 2;
             for (i = 0; i < row_width; i++)
             {
                *(--dp) = *(--sp);
@@@@ -1965,8 +1965,8 @@@@ png_do_read_filler(png_row_infop row_inf
          /* This changes the data from RRGGBB to RRGGBBXX */
          if (flags & PNG_FLAG_FILLER_AFTER)
          {
-            png_bytep sp = row + (png_size_t)row_width * 3;
-            png_bytep dp = sp  + (png_size_t)row_width;
+            png_bytep sp = row + (png_size_t)row_width * 6;
+            png_bytep dp = sp  + (png_size_t)row_width * 2;
             for (i = 1; i < row_width; i++)
             {
                *(--dp) = hi_filler;
@@@@ -1987,8 +1987,8 @@@@ png_do_read_filler(png_row_infop row_inf
          /* This changes the data from RRGGBB to XXRRGGBB */
          else
          {
-            png_bytep sp = row + (png_size_t)row_width * 3;
-            png_bytep dp = sp  + (png_size_t)row_width;
+            png_bytep sp = row + (png_size_t)row_width * 6;
+            png_bytep dp = sp  + (png_size_t)row_width * 2;
             for (i = 0; i < row_width; i++)
             {
                *(--dp) = *(--sp);
@


1.2.4.1
log
@Fix a null pointer dereference (CVE-2013-6954).
@
text
@d1 47
a47 16
$OpenBSD$

CVE-2013-6954

--- pngrtran.c.orig	Thu Apr 25 14:24:44 2013
+++ pngrtran.c	Fri Jan  3 14:21:08 2014
@@@@ -1933,6 +1933,9 @@@@ png_read_transform_info(png_structrp png_ptr, png_info
 
          info_ptr->bit_depth = 8;
          info_ptr->num_trans = 0;
+
+         if (png_ptr->palette == NULL)
+            png_error (png_ptr, "Palette is NULL in indexed image");
       }
       else
       {
@


1.2.2.1
log
@security update to png-1.3.33p0; patches from debian
resolves CVE-2008-5907 and CVE-2009-0040
@
text
@d1 47
a47 42
$OpenBSD$
--- pngrtran.c.orig	Fri Oct 31 09:42:01 2008
+++ pngrtran.c	Thu Jun  4 16:28:15 2009
@@@@ -309,9 +309,7 @@@@ png_set_dither(png_structp png_ptr, png_colorp palette
 
          hash = (png_dsortpp)png_malloc(png_ptr, (png_uint_32)(769 *
             png_sizeof(png_dsortp)));
-         for (i = 0; i < 769; i++)
-            hash[i] = NULL;
-/*         png_memset(hash, 0, 769 * png_sizeof(png_dsortp)); */
+         png_memset(hash, 0, 769 * png_sizeof(png_dsortp));
 
          num_new_palette = num_palette;
 
@@@@ -4128,6 +4126,8 @@@@ png_build_gamma_table(png_structp png_ptr)
      png_ptr->gamma_16_table = (png_uint_16pp)png_malloc(png_ptr,
         (png_uint_32)(num * png_sizeof(png_uint_16p)));
 
+     png_memset(png_ptr->gamma_16_table, 0, num * png_sizeof(png_uint_16p)); 
+
      if (png_ptr->transformations & (PNG_16_TO_8 | PNG_BACKGROUND))
      {
         double fin, fout;
@@@@ -4188,6 +4188,8 @@@@ png_build_gamma_table(png_structp png_ptr)
         png_ptr->gamma_16_to_1 = (png_uint_16pp)png_malloc(png_ptr,
            (png_uint_32)(num * png_sizeof(png_uint_16p )));
 
+        png_memset(png_ptr->gamma_16_to_1, 0, num * png_sizeof(png_uint_16p)); 
+
         for (i = 0; i < num; i++)
         {
            png_ptr->gamma_16_to_1[i] = (png_uint_16p)png_malloc(png_ptr,
@@@@ -4210,6 +4212,9 @@@@ png_build_gamma_table(png_structp png_ptr)
 
         png_ptr->gamma_16_from_1 = (png_uint_16pp)png_malloc(png_ptr,
            (png_uint_32)(num * png_sizeof(png_uint_16p)));
+
+        png_memset(png_ptr->gamma_16_from_1, 0,
+           num * png_sizeof(png_uint_16p)); 
 
         for (i = 0; i < num; i++)
         {
@


1.1
log
@fix buffer overflows with 16-bit and greyscale samples.

CAN-2002-1363

http://www.openpkg.org/security/OpenPKG-SA-2003.001-png.html
http://www.openpkg.org/security/OpenPKG-SA-2004.030-png.html
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.4.1
log
@MFC:
- fix buffer overflows with 16-bit and greyscale samples, CAN-2002-1363.
- use upstream patch for older CAN-2004-0421 issue.

http://www.openpkg.org/security/OpenPKG-SA-2003.001-png.html
http://www.openpkg.org/security/OpenPKG-SA-2004.030-png.html
@
text
@d1 1
a1 1
$OpenBSD: patch-pngrtran_c,v 1.1 2004/07/06 22:17:49 brad Exp $
@


1.1.2.1
log
@MFC:
- fix buffer overflows with 16-bit and greyscale samples, CAN-2002-1363.
- use upstream patch for older CAN-2004-0421 issue.

http://www.openpkg.org/security/OpenPKG-SA-2003.001-png.html
http://www.openpkg.org/security/OpenPKG-SA-2004.030-png.html
@
text
@d1 1
a1 1
$OpenBSD: patch-pngrtran_c,v 1.1 2004/07/06 22:17:49 brad Exp $
@

