head	1.3;
access;
symbols
	OPENBSD_6_0:1.2.0.16
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.12
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.14
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.10
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.36
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.34
	OPENBSD_5_0:1.1.0.32
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.30
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.28
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.26
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.24
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.22
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.20
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.18
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.16
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.14
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.12.30.23.14.37;	author jca;	state Exp;
branches;
next	1.2;
commitid	H1dtW8AzauQnVyaj;

1.2
date	2012.08.21.08.25.03;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.03.09.01.29;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Use endian.h instead of a list of architectures, unbreaks arm.

ok markus@@ (maintainer)
@
text
@$OpenBSD: patch-bytesex_h,v 1.2 2012/08/21 08:25:03 landry Exp $

Use endian.h instead of whitelisting platforms.

--- bytesex.h.orig	Tue Mar 13 14:46:18 2001
+++ bytesex.h	Fri Dec 30 19:05:26 2016
@@@@ -3,15 +3,10 @@@@
 #ifndef S10SH_BYTESEX_H
 #define S10SH_BYTESEX_H
 
-#if 	defined(__i386__) \
-	|| defined(__alpha__) \
-	|| (defined(__mips__) && (defined(MIPSEL) || defined (__MIPSEL__)))
+#include <endian.h>
+#if BYTE_ORDER == LITTLE_ENDIAN
 #define BYTE_ORDER_LITTLE_ENDIAN
-#elif 	defined(__mc68000__) \
-	|| defined (__sparc__) \
-	|| defined (__sparc) \
-	|| defined (__PPC__) \
-	|| (defined(__mips__) && (defined(MIPSEB) || defined (__MIPSEB__)))
+#elif BYTE_ORDER == BIG_ENDIAN
 #define BYTE_ORDER_BIG_ENDIAN
 #else
 # error can not find the byte order for this architecture, fix bytesex.h
@


1.2
log
@Define bytesex to give this a chance to build on hppa.
@
text
@d1 8
a8 4
$OpenBSD: patch-bytesex_h,v 1.1 2004/03/03 09:01:29 pvalchev Exp $
--- bytesex.h.orig	Tue Mar 13 06:46:18 2001
+++ bytesex.h	Tue Aug 21 02:24:11 2012
@@@@ -4,10 +4,12 @@@@
d11 5
a15 4
 #if 	defined(__i386__) \
+	|| defined(__amd64__) \
 	|| defined(__alpha__) \
 	|| (defined(__mips__) && (defined(MIPSEL) || defined (__MIPSEL__)))
d17 9
a25 5
 #elif 	defined(__mc68000__) \
+	|| defined (__hppa__) \
 	|| defined (__sparc__) \
 	|| defined (__sparc) \
 	|| defined (__PPC__) \
@


1.1
log
@define amd64 byte order
@
text
@d1 4
a4 4
$OpenBSD$
--- bytesex.h.orig	2001-03-13 06:46:18.000000000 -0700
+++ bytesex.h	2004-03-03 01:56:33.000000000 -0700
@@@@ -4,6 +4,7 @@@@
d12 5
@

