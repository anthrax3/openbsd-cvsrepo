head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.1.0.32
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.28
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.26
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.24
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.22
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.20
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.18
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.16
	OPENBSD_5_0:1.1.0.14
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.12
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.03.09.15.16.05;	author jasper;	state Exp;
branches;
next	1.2;
commitid	dGDmyQEYtGmVbiSR;

1.2
date	2015.11.06.22.28.29;	author sthen;	state Exp;
branches;
next	1.1;
commitid	4ni4D6u36mcuFV1W;

1.1
date	2008.05.17.09.32.16;	author espie;	state Exp;
branches
	1.1.32.1;
next	;

1.1.32.1
date	2015.11.12.13.06.48;	author jasper;	state Exp;
branches;
next	1.1.32.2;
commitid	dUxoBTuucapicQcU;

1.1.32.2
date	2016.03.09.15.34.26;	author jasper;	state Exp;
branches;
next	;
commitid	dX6Ka1FF4Ag9KVov;


desc
@@


1.3
log
@security fixes for CVE-2016-1577 CVE-2016-2116
@
text
@$OpenBSD: patch-src_libjasper_base_jas_icc_c,v 1.2 2015/11/06 22:28:29 sthen Exp $

Security fix for CVE-2016-1577: Prevent double-free in jas_iccattrval_destroy()
from https://launchpad.net/bugs/1547865

Security fix for CVE-2016-2116: Prevent jas_stream_t memory leak in jas_iccprof_createfrombuf()

Security fix for CVE-2014-8137: double-free
from slackware

--- src/libjasper/base/jas_icc.c.orig	Fri Jan 19 22:43:05 2007
+++ src/libjasper/base/jas_icc.c	Wed Mar  9 16:11:14 2016
@@@@ -300,6 +300,7 @@@@ jas_iccprof_t *jas_iccprof_load(jas_stream_t *in)
 				if (jas_iccprof_setattr(prof, tagtabent->tag, attrval))
 					goto error;
 				jas_iccattrval_destroy(attrval);
+				attrval = 0;
 			} else {
 #if 0
 				jas_eprintf("warning: skipping unknown tag type\n");
@@@@ -373,7 +374,7 @@@@ int jas_iccprof_save(jas_iccprof_t *prof, jas_stream_t
 	jas_icctagtab_t *tagtab;
 
 	tagtab = &prof->tagtab;
-	if (!(tagtab->ents = jas_malloc(prof->attrtab->numattrs *
+	if (!(tagtab->ents = jas_alloc2(prof->attrtab->numattrs,
 	  sizeof(jas_icctagtabent_t))))
 		goto error;
 	tagtab->numents = prof->attrtab->numattrs;
@@@@ -522,7 +523,7 @@@@ static int jas_iccprof_gettagtab(jas_stream_t *in, jas
 	}
 	if (jas_iccgetuint32(in, &tagtab->numents))
 		goto error;
-	if (!(tagtab->ents = jas_malloc(tagtab->numents *
+	if (!(tagtab->ents = jas_alloc2(tagtab->numents,
 	  sizeof(jas_icctagtabent_t))))
 		goto error;
 	tagtabent = tagtab->ents;
@@@@ -743,8 +744,7 @@@@ static int jas_iccattrtab_resize(jas_iccattrtab_t *tab
 {
 	jas_iccattr_t *newattrs;
 	assert(maxents >= tab->numattrs);
-	newattrs = tab->attrs ? jas_realloc(tab->attrs, maxents *
-	  sizeof(jas_iccattr_t)) : jas_malloc(maxents * sizeof(jas_iccattr_t));
+	newattrs = jas_realloc2(tab->attrs, maxents, sizeof(jas_iccattr_t));
 	if (!newattrs)
 		return -1;
 	tab->attrs = newattrs;
@@@@ -999,7 +999,7 @@@@ static int jas_icccurv_input(jas_iccattrval_t *attrval
 
 	if (jas_iccgetuint32(in, &curv->numents))
 		goto error;
-	if (!(curv->ents = jas_malloc(curv->numents * sizeof(jas_iccuint16_t))))
+	if (!(curv->ents = jas_alloc2(curv->numents, sizeof(jas_iccuint16_t))))
 		goto error;
 	for (i = 0; i < curv->numents; ++i) {
 		if (jas_iccgetuint16(in, &curv->ents[i]))
@@@@ -1011,7 +1011,6 @@@@ static int jas_icccurv_input(jas_iccattrval_t *attrval
 	return 0;
 
 error:
-	jas_icccurv_destroy(attrval);
 	return -1;
 }
 
@@@@ -1100,7 +1099,7 @@@@ static int jas_icctxtdesc_input(jas_iccattrval_t *attr
 	if (jas_iccgetuint32(in, &txtdesc->uclangcode) ||
 	  jas_iccgetuint32(in, &txtdesc->uclen))
 		goto error;
-	if (!(txtdesc->ucdata = jas_malloc(txtdesc->uclen * 2)))
+	if (!(txtdesc->ucdata = jas_alloc2(txtdesc->uclen, 2)))
 		goto error;
 	if (jas_stream_read(in, txtdesc->ucdata, txtdesc->uclen * 2) !=
 	  JAS_CAST(int, txtdesc->uclen * 2))
@@@@ -1129,7 +1128,6 @@@@ static int jas_icctxtdesc_input(jas_iccattrval_t *attr
 #endif
 	return 0;
 error:
-	jas_icctxtdesc_destroy(attrval);
 	return -1;
 }
 
@@@@ -1208,8 +1206,6 @@@@ static int jas_icctxt_input(jas_iccattrval_t *attrval,
 		goto error;
 	return 0;
 error:
-	if (txt->string)
-		jas_free(txt->string);
 	return -1;
 }
 
@@@@ -1292,17 +1288,17 @@@@ static int jas_icclut8_input(jas_iccattrval_t *attrval
 	  jas_iccgetuint16(in, &lut8->numouttabents))
 		goto error;
 	clutsize = jas_iccpowi(lut8->clutlen, lut8->numinchans) * lut8->numoutchans;
-	if (!(lut8->clut = jas_malloc(clutsize * sizeof(jas_iccuint8_t))) ||
-	  !(lut8->intabsbuf = jas_malloc(lut8->numinchans *
-	  lut8->numintabents * sizeof(jas_iccuint8_t))) ||
-	  !(lut8->intabs = jas_malloc(lut8->numinchans *
+	if (!(lut8->clut = jas_alloc2(clutsize, sizeof(jas_iccuint8_t))) ||
+	  !(lut8->intabsbuf = jas_alloc3(lut8->numinchans,
+	  lut8->numintabents, sizeof(jas_iccuint8_t))) ||
+	  !(lut8->intabs = jas_alloc2(lut8->numinchans,
 	  sizeof(jas_iccuint8_t *))))
 		goto error;
 	for (i = 0; i < lut8->numinchans; ++i)
 		lut8->intabs[i] = &lut8->intabsbuf[i * lut8->numintabents];
-	if (!(lut8->outtabsbuf = jas_malloc(lut8->numoutchans *
-	  lut8->numouttabents * sizeof(jas_iccuint8_t))) ||
-	  !(lut8->outtabs = jas_malloc(lut8->numoutchans *
+	if (!(lut8->outtabsbuf = jas_alloc3(lut8->numoutchans,
+	  lut8->numouttabents, sizeof(jas_iccuint8_t))) ||
+	  !(lut8->outtabs = jas_alloc2(lut8->numoutchans,
 	  sizeof(jas_iccuint8_t *))))
 		goto error;
 	for (i = 0; i < lut8->numoutchans; ++i)
@@@@ -1330,7 +1326,6 @@@@ static int jas_icclut8_input(jas_iccattrval_t *attrval
 		goto error;
 	return 0;
 error:
-	jas_icclut8_destroy(attrval);
 	return -1;
 }
 
@@@@ -1461,17 +1456,17 @@@@ static int jas_icclut16_input(jas_iccattrval_t *attrva
 	  jas_iccgetuint16(in, &lut16->numouttabents))
 		goto error;
 	clutsize = jas_iccpowi(lut16->clutlen, lut16->numinchans) * lut16->numoutchans;
-	if (!(lut16->clut = jas_malloc(clutsize * sizeof(jas_iccuint16_t))) ||
+	if (!(lut16->clut = jas_alloc2(clutsize, sizeof(jas_iccuint16_t))) ||
 	  !(lut16->intabsbuf = jas_malloc(lut16->numinchans *
 	  lut16->numintabents * sizeof(jas_iccuint16_t))) ||
-	  !(lut16->intabs = jas_malloc(lut16->numinchans *
+	  !(lut16->intabs = jas_alloc2(lut16->numinchans,
 	  sizeof(jas_iccuint16_t *))))
 		goto error;
 	for (i = 0; i < lut16->numinchans; ++i)
 		lut16->intabs[i] = &lut16->intabsbuf[i * lut16->numintabents];
-	if (!(lut16->outtabsbuf = jas_malloc(lut16->numoutchans *
-	  lut16->numouttabents * sizeof(jas_iccuint16_t))) ||
-	  !(lut16->outtabs = jas_malloc(lut16->numoutchans *
+	if (!(lut16->outtabsbuf = jas_alloc3(lut16->numoutchans,
+	  lut16->numouttabents, sizeof(jas_iccuint16_t))) ||
+	  !(lut16->outtabs = jas_alloc2(lut16->numoutchans,
 	  sizeof(jas_iccuint16_t *))))
 		goto error;
 	for (i = 0; i < lut16->numoutchans; ++i)
@@@@ -1499,7 +1494,6 @@@@ static int jas_icclut16_input(jas_iccattrval_t *attrva
 		goto error;
 	return 0;
 error:
-	jas_icclut16_destroy(attrval);
 	return -1;
 }
 
@@@@ -1699,6 +1693,9 @@@@ jas_iccprof_t *jas_iccprof_createfrombuf(uchar *buf, i
 	jas_stream_close(in);
 	return prof;
 error:
+	if (in)
+		jas_stream_close(in);
+
 	return 0;
 }
 
@


1.2
log
@add security fixes to graphics/jasper, from Slackware via patrick keshishian

CVE-2014-8137: double-free
CVE-2014-8138: heap-based buffer overflow
CVE-2014-8157: off-by-one
CVE-2014-8158: multiple stack-based buffer overflows
CVE-2014-9029: multiple off-by-one
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libjasper_base_jas_icc_c,v 1.1 2008/05/17 09:32:16 espie Exp $
d3 2
a4 2
Security fix from Slackware:
	CVE-2014-8137: double-free
d6 16
a21 3
--- src/libjasper/base/jas_icc.c.orig	Fri Jan 19 13:43:05 2007
+++ src/libjasper/base/jas_icc.c	Thu Oct 29 22:03:25 2015
@@@@ -373,7 +373,7 @@@@ int jas_iccprof_save(jas_iccprof_t *prof, jas_stream_t
d30 1
a30 1
@@@@ -522,7 +522,7 @@@@ static int jas_iccprof_gettagtab(jas_stream_t *in, jas
d39 1
a39 1
@@@@ -743,8 +743,7 @@@@ static int jas_iccattrtab_resize(jas_iccattrtab_t *tab
d49 1
a49 1
@@@@ -999,7 +998,7 @@@@ static int jas_icccurv_input(jas_iccattrval_t *attrval
d58 1
a58 1
@@@@ -1011,7 +1010,6 @@@@ static int jas_icccurv_input(jas_iccattrval_t *attrval
d66 1
a66 1
@@@@ -1100,7 +1098,7 @@@@ static int jas_icctxtdesc_input(jas_iccattrval_t *attr
d75 1
a75 1
@@@@ -1129,7 +1127,6 @@@@ static int jas_icctxtdesc_input(jas_iccattrval_t *attr
d83 1
a83 1
@@@@ -1208,8 +1205,6 @@@@ static int jas_icctxt_input(jas_iccattrval_t *attrval,
d92 1
a92 1
@@@@ -1292,17 +1287,17 @@@@ static int jas_icclut8_input(jas_iccattrval_t *attrval
d117 1
a117 1
@@@@ -1330,7 +1325,6 @@@@ static int jas_icclut8_input(jas_iccattrval_t *attrval
d125 1
a125 1
@@@@ -1461,17 +1455,17 @@@@ static int jas_icclut16_input(jas_iccattrval_t *attrva
d148 1
a148 1
@@@@ -1499,7 +1493,6 @@@@ static int jas_icclut16_input(jas_iccattrval_t *attrva
d154 10
@


1.1
log
@tidy up a few warnings.
with help from naddy@@
@
text
@d1 7
a7 3
$OpenBSD$
--- src/libjasper/base/jas_icc.c.orig	Fri Jan 19 22:43:05 2007
+++ src/libjasper/base/jas_icc.c	Fri May 16 21:38:46 2008
d45 9
a53 1
@@@@ -1100,7 +1099,7 @@@@ static int jas_icctxtdesc_input(jas_iccattrval_t *attr
d62 18
a79 1
@@@@ -1292,17 +1291,17 @@@@ static int jas_icclut8_input(jas_iccattrval_t *attrval
d104 9
a112 1
@@@@ -1461,17 +1460,17 @@@@ static int jas_icclut16_input(jas_iccattrval_t *attrva
d135 8
@


1.1.32.1
log
@add security fixes to graphics/jasper, from Slackware via patrick keshishian

CVE-2014-8137: double-free
CVE-2014-8138: heap-based buffer overflow
CVE-2014-8157: off-by-one
CVE-2014-8158: multiple stack-based buffer overflows
CVE-2014-9029: multiple off-by-one
@
text
@d1 3
a3 7
$OpenBSD: patch-src_libjasper_base_jas_icc_c,v 1.2 2015/11/06 22:28:29 sthen Exp $

Security fix from Slackware:
	CVE-2014-8137: double-free

--- src/libjasper/base/jas_icc.c.orig	Fri Jan 19 13:43:05 2007
+++ src/libjasper/base/jas_icc.c	Thu Oct 29 22:03:25 2015
d41 1
a41 9
@@@@ -1011,7 +1010,6 @@@@ static int jas_icccurv_input(jas_iccattrval_t *attrval
 	return 0;
 
 error:
-	jas_icccurv_destroy(attrval);
 	return -1;
 }
 
@@@@ -1100,7 +1098,7 @@@@ static int jas_icctxtdesc_input(jas_iccattrval_t *attr
d50 1
a50 18
@@@@ -1129,7 +1127,6 @@@@ static int jas_icctxtdesc_input(jas_iccattrval_t *attr
 #endif
 	return 0;
 error:
-	jas_icctxtdesc_destroy(attrval);
 	return -1;
 }
 
@@@@ -1208,8 +1205,6 @@@@ static int jas_icctxt_input(jas_iccattrval_t *attrval,
 		goto error;
 	return 0;
 error:
-	if (txt->string)
-		jas_free(txt->string);
 	return -1;
 }
 
@@@@ -1292,17 +1287,17 @@@@ static int jas_icclut8_input(jas_iccattrval_t *attrval
d75 1
a75 9
@@@@ -1330,7 +1325,6 @@@@ static int jas_icclut8_input(jas_iccattrval_t *attrval
 		goto error;
 	return 0;
 error:
-	jas_icclut8_destroy(attrval);
 	return -1;
 }
 
@@@@ -1461,17 +1455,17 @@@@ static int jas_icclut16_input(jas_iccattrval_t *attrva
a97 8
@@@@ -1499,7 +1493,6 @@@@ static int jas_icclut16_input(jas_iccattrval_t *attrva
 		goto error;
 	return 0;
 error:
-	jas_icclut16_destroy(attrval);
 	return -1;
 }
 
@


1.1.32.2
log
@security fixes for CVE-2016-1577 CVE-2016-2116
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libjasper_base_jas_icc_c,v 1.3 2016/03/09 15:16:05 jasper Exp $
d3 2
a4 2
Security fix for CVE-2016-1577: Prevent double-free in jas_iccattrval_destroy()
from https://launchpad.net/bugs/1547865
d6 3
a8 16
Security fix for CVE-2016-2116: Prevent jas_stream_t memory leak in jas_iccprof_createfrombuf()

Security fix for CVE-2014-8137: double-free
from slackware

--- src/libjasper/base/jas_icc.c.orig	Fri Jan 19 22:43:05 2007
+++ src/libjasper/base/jas_icc.c	Wed Mar  9 16:11:14 2016
@@@@ -300,6 +300,7 @@@@ jas_iccprof_t *jas_iccprof_load(jas_stream_t *in)
 				if (jas_iccprof_setattr(prof, tagtabent->tag, attrval))
 					goto error;
 				jas_iccattrval_destroy(attrval);
+				attrval = 0;
 			} else {
 #if 0
 				jas_eprintf("warning: skipping unknown tag type\n");
@@@@ -373,7 +374,7 @@@@ int jas_iccprof_save(jas_iccprof_t *prof, jas_stream_t
d17 1
a17 1
@@@@ -522,7 +523,7 @@@@ static int jas_iccprof_gettagtab(jas_stream_t *in, jas
d26 1
a26 1
@@@@ -743,8 +744,7 @@@@ static int jas_iccattrtab_resize(jas_iccattrtab_t *tab
d36 1
a36 1
@@@@ -999,7 +999,7 @@@@ static int jas_icccurv_input(jas_iccattrval_t *attrval
d45 1
a45 1
@@@@ -1011,7 +1011,6 @@@@ static int jas_icccurv_input(jas_iccattrval_t *attrval
d53 1
a53 1
@@@@ -1100,7 +1099,7 @@@@ static int jas_icctxtdesc_input(jas_iccattrval_t *attr
d62 1
a62 1
@@@@ -1129,7 +1128,6 @@@@ static int jas_icctxtdesc_input(jas_iccattrval_t *attr
d70 1
a70 1
@@@@ -1208,8 +1206,6 @@@@ static int jas_icctxt_input(jas_iccattrval_t *attrval,
d79 1
a79 1
@@@@ -1292,17 +1288,17 @@@@ static int jas_icclut8_input(jas_iccattrval_t *attrval
d104 1
a104 1
@@@@ -1330,7 +1326,6 @@@@ static int jas_icclut8_input(jas_iccattrval_t *attrval
d112 1
a112 1
@@@@ -1461,17 +1456,17 @@@@ static int jas_icclut16_input(jas_iccattrval_t *attrva
d135 1
a135 1
@@@@ -1499,7 +1494,6 @@@@ static int jas_icclut16_input(jas_iccattrval_t *attrva
a140 10
 }
 
@@@@ -1699,6 +1693,9 @@@@ jas_iccprof_t *jas_iccprof_createfrombuf(uchar *buf, i
 	jas_stream_close(in);
 	return prof;
 error:
+	if (in)
+		jas_stream_close(in);
+
 	return 0;
@


