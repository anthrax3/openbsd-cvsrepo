head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.38
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.36
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.34
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.30
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.32
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.28
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.26
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.24
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.22
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.20
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.18
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.16
	OPENBSD_5_0:1.1.0.14
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.12
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2008.05.17.09.32.16;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@tidy up a few warnings.
with help from naddy@@
@
text
@$OpenBSD$
--- src/libjasper/jpc/jpc_enc.c.orig	Fri Jan 19 22:43:07 2007
+++ src/libjasper/jpc/jpc_enc.c	Fri May 16 21:40:21 2008
@@@@ -403,7 +403,7 @@@@ static jpc_enc_cp_t *cp_create(char *optstr, jas_image
 		vsteplcm *= jas_image_cmptvstep(image, cmptno);
 	}
 
-	if (!(cp->ccps = jas_malloc(cp->numcmpts * sizeof(jpc_enc_ccp_t)))) {
+	if (!(cp->ccps = jas_alloc2(cp->numcmpts, sizeof(jpc_enc_ccp_t)))) {
 		goto error;
 	}
 	for (cmptno = 0, ccp = cp->ccps; cmptno < JAS_CAST(int, cp->numcmpts); ++cmptno,
@@@@ -656,7 +656,7 @@@@ static jpc_enc_cp_t *cp_create(char *optstr, jas_image
 
 	if (ilyrrates && numilyrrates > 0) {
 		tcp->numlyrs = numilyrrates + 1;
-		if (!(tcp->ilyrrates = jas_malloc((tcp->numlyrs - 1) *
+		if (!(tcp->ilyrrates = jas_alloc2((tcp->numlyrs - 1),
 		  sizeof(jpc_fix_t)))) {
 			goto error;
 		}
@@@@ -940,7 +940,7 @@@@ startoff = jas_stream_getrwcount(enc->out);
 	siz->tilewidth = cp->tilewidth;
 	siz->tileheight = cp->tileheight;
 	siz->numcomps = cp->numcmpts;
-	siz->comps = jas_malloc(siz->numcomps * sizeof(jpc_sizcomp_t));
+	siz->comps = jas_alloc2(siz->numcomps, sizeof(jpc_sizcomp_t));
 	assert(siz->comps);
 	for (i = 0; i < JAS_CAST(int, cp->numcmpts); ++i) {
 		siz->comps[i].prec = cp->ccps[i].prec;
@@@@ -958,7 +958,8 @@@@ startoff = jas_stream_getrwcount(enc->out);
 	if (!(enc->mrk = jpc_ms_create(JPC_MS_COM))) {
 		return -1;
 	}
-	sprintf(buf, "Creator: JasPer Version %s", jas_getversion());
+	snprintf(buf, sizeof buf, "Creator: JasPer Version %s", 
+	    jas_getversion());
 	com = &enc->mrk->parms.com;
 	com->len = strlen(buf);
 	com->regid = JPC_COM_LATIN;
@@@@ -977,7 +978,7 @@@@ startoff = jas_stream_getrwcount(enc->out);
 		return -1;
 	}
 	crg = &enc->mrk->parms.crg;
-	crg->comps = jas_malloc(crg->numcomps * sizeof(jpc_crgcomp_t));
+	crg->comps = jas_alloc2(crg->numcomps, sizeof(jpc_crgcomp_t));
 	if (jpc_putms(enc->out, enc->cstate, enc->mrk)) {
 		jas_eprintf("cannot write CRG marker\n");
 		return -1;
@@@@ -1955,7 +1956,7 @@@@ jpc_enc_tile_t *jpc_enc_tile_create(jpc_enc_cp_t *cp, 
 	tile->mctid = cp->tcp.mctid;
 
 	tile->numlyrs = cp->tcp.numlyrs;
-	if (!(tile->lyrsizes = jas_malloc(tile->numlyrs *
+	if (!(tile->lyrsizes = jas_alloc2(tile->numlyrs,
 	  sizeof(uint_fast32_t)))) {
 		goto error;
 	}
@@@@ -1964,7 +1965,7 @@@@ jpc_enc_tile_t *jpc_enc_tile_create(jpc_enc_cp_t *cp, 
 	}
 
 	/* Allocate an array for the per-tile-component information. */
-	if (!(tile->tcmpts = jas_malloc(cp->numcmpts * sizeof(jpc_enc_tcmpt_t)))) {
+	if (!(tile->tcmpts = jas_alloc2(cp->numcmpts, sizeof(jpc_enc_tcmpt_t)))) {
 		goto error;
 	}
 	/* Initialize a few members critical for error recovery. */
@@@@ -2110,7 +2111,7 @@@@ static jpc_enc_tcmpt_t *tcmpt_create(jpc_enc_tcmpt_t *
 	  jas_seq2d_ystart(tcmpt->data), jas_seq2d_xend(tcmpt->data),
 	  jas_seq2d_yend(tcmpt->data), bandinfos);
 
-	if (!(tcmpt->rlvls = jas_malloc(tcmpt->numrlvls * sizeof(jpc_enc_rlvl_t)))) {
+	if (!(tcmpt->rlvls = jas_alloc2(tcmpt->numrlvls, sizeof(jpc_enc_rlvl_t)))) {
 		goto error;
 	}
 	for (rlvlno = 0, rlvl = tcmpt->rlvls; rlvlno < tcmpt->numrlvls;
@@@@ -2213,7 +2214,7 @@@@ static jpc_enc_rlvl_t *rlvl_create(jpc_enc_rlvl_t *rlv
 	rlvl->numvprcs = JPC_FLOORDIVPOW2(brprcbry - tlprctly, rlvl->prcheightexpn);
 	rlvl->numprcs = rlvl->numhprcs * rlvl->numvprcs;
 
-	if (!(rlvl->bands = jas_malloc(rlvl->numbands * sizeof(jpc_enc_band_t)))) {
+	if (!(rlvl->bands = jas_alloc2(rlvl->numbands, sizeof(jpc_enc_band_t)))) {
 		goto error;
 	}
 	for (bandno = 0, band = rlvl->bands; bandno < rlvl->numbands;
@@@@ -2290,7 +2291,7 @@@@ if (bandinfo->xstart != bandinfo->xend && bandinfo->ys
 	band->synweight = bandinfo->synenergywt;
 
 if (band->data) {
-	if (!(band->prcs = jas_malloc(rlvl->numprcs * sizeof(jpc_enc_prc_t)))) {
+	if (!(band->prcs = jas_alloc2(rlvl->numprcs, sizeof(jpc_enc_prc_t)))) {
 		goto error;
 	}
 	for (prcno = 0, prc = band->prcs; prcno < rlvl->numprcs; ++prcno,
@@@@ -2422,7 +2423,7 @@@@ if (!rlvlno) {
 			goto error;
 		}
 
-		if (!(prc->cblks = jas_malloc(prc->numcblks * sizeof(jpc_enc_cblk_t)))) {
+		if (!(prc->cblks = jas_alloc2(prc->numcblks, sizeof(jpc_enc_cblk_t)))) {
 			goto error;
 		}
 		for (cblkno = 0, cblk = prc->cblks; cblkno < prc->numcblks;
@
