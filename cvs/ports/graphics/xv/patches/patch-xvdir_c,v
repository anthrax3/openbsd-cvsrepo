head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.12
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.10
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.10.29.16.45.09;	author espie;	state Exp;
branches;
next	1.2;
commitid	BnUv7vNiltKHEjOJ;

1.2
date	2005.04.12.17.28.04;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2004.09.21.18.46.04;	author sturm;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.05.23.20.23.54;	author robert;	state dead;
branches;
next	;


desc
@@


1.3
log
@fix problems with Nikon D7100 pictures, they don't create correct exif
information (multiple APP1 chunks). xv reads them all, but libjpeg frowns
about writing multiple APP1.

So,
- ignore subsequent chunks (like exiv2 does)
- add a small framework to report error messages from libjpeg
(might be adaptable to other gfx formats).

okay sthen@@
@
text
@$OpenBSD$
--- xvdir.c.orig	Tue Oct 28 14:28:11 2014
+++ xvdir.c	Tue Oct 28 14:29:57 2014
@@@@ -1874,18 +1874,23 @@@@ FILE *OpenOutFile(filename)
 
 
 /***************************************/
-int CloseOutFile(fp, filename, failed)
+int CloseOutFileWhy(fp, filename, failed, why)
      FILE *fp;
      const char *filename;
      int   failed;
+     const char *why;
 {
   char buf[64];
 
   /* close output file, and if piping, deal... Returns '0' if everything OK */
 
   if (failed) {    /* failure during format-specific output routine */
-    char  str[512];
-    sprintf(str,"Couldn't write file '%s'.", outFName);
+    char  str[2048];
+    if (why)
+	    snprintf(str, 2048, "Couldn't write file '%s' (%s).", outFName, 
+		why);
+    else
+	    snprintf(str, 2048, "Couldn't write file '%s'.", outFName);
     ErrPopUp(str, "\nBummer!");
     unlink(outFName);   /* couldn't properly write file:  delete it */
     return 1;
@


1.2
log
@SECURITY:
Fixes for multiple vulnerabilities.  Switch to centralized jumbo patch.
From rohee@@
@
text
@d1 4
a4 10
$OpenBSD: patch-xvdir_c,v 1.1 2004/09/21 18:46:04 sturm Exp $
--- xvdir.c.orig	Tue Sep 21 06:49:17 2004
+++ xvdir.c	Tue Sep 21 06:50:28 2004
@@@@ -1213,6 +1213,7 @@@@ void SetDirFName(st)
      char *st;
 {
   strncpy(deffname, st, (size_t) MAXFNLEN-1);
+  deffname[MAXFNLEN-1] = '\0';
   setFName(st);
 }
a5 8
@@@@ -1620,13 +1621,14 @@@@ FILE *OpenOutFile(filename)
 #else
     strcpy(outFName, "[]xvXXXXXX.lis");
 #endif
-    mktemp(outFName);
+    fp = fdopen(mkstemp(outFName), "w");
     dopipe = 1;
   }
d7 9
d17 1
a17 9
   /* see if file exists (ie, we're overwriting) */
-  if (stat(outFName, &st)==0) {   /* stat succeeded, file must exist */
+  if (dopipe == 0 &&
+      stat(outFName, &st)==0) {   /* stat succeeded, file must exist */
     static char *foo[] = { "\nOk", "\033Cancel" };
     char str[512];
 
@@@@ -1636,7 +1638,8 @@@@ FILE *OpenOutFile(filename)
     
d19 12
a30 7
   /* Open file */
-  fp = fopen(outFName, "w");
+  if (dopipe == 0)
+    fp = fopen(outFName, "w");
   if (!fp) {
     char  str[512];
     sprintf(str,"Can't write file '%s'\n\n  %s.",outFName, ERRSTR(errno));
@


1.1
log
@Add some sanity checking in XV. Patches from Marcus Meissner
adapted by rohee@@ by way of millert@@

while here, adapt patches to regular naming scheme
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@SECURITY:
Fixes for multiple vulnerabilities. Switch to centralized jumbo patch.
bump PKGNAME
http://www.vuxml.org/openbsd/e9b45990-abff-11d9-a42d-080020f8e4df.html

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-xvdir_c,v 1.1 2004/09/21 18:46:04 sturm Exp $
@


