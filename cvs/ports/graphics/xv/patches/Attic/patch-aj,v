head	1.3;
access;
symbols
	OPENBSD_3_6:1.2.0.22
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.20
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.18
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.16
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.14
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.12
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.09.21.18.46.04;	author sturm;	state dead;
branches;
next	1.2;

1.2
date	99.04.22.19.05.11;	author rohee;	state Exp;
branches
	1.2.20.1
	1.2.22.1;
next	1.1;

1.1
date	98.04.26.00.24.30;	author angelos;	state Exp;
branches;
next	;

1.2.20.1
date	2005.04.16.21.18.34;	author sturm;	state dead;
branches;
next	;

1.2.22.1
date	2005.04.16.21.22.07;	author sturm;	state dead;
branches;
next	;


desc
@@


1.3
log
@Add some sanity checking in XV. Patches from Marcus Meissner
adapted by rohee@@ by way of millert@@

while here, adapt patches to regular naming scheme
@
text
@$OpenBSD: patch-aj,v 1.2 1999/04/22 19:05:11 rohee Exp $

This patch contains the original patch replacing insecure mktemp()
usage by secure mkstemp() usage in xvdir.c, as well as the Michael
Rausch's patch fixing a string buffer where the program failed to
append '\0'.

See ftp://ftp.trilon.com/pub/xv/patches/longname.patch for the original
patch.

It was less annoying to remake the patch than using his one, since it
isn't ${WRKSRC} relative, and it collides with the original OpenBSD
patch.

--- xvdir.c.reference	Wed Apr 21 22:35:43 1999
+++ xvdir.c	Wed Apr 21 22:38:14 1999
@@@@ -1213,6 +1213,7 @@@@
      char *st;
 {
   strncpy(deffname, st, (size_t) MAXFNLEN-1);
+  deffname[MAXFNLEN-1] = '\0';
   setFName(st);
 }
 
@@@@ -1620,13 +1621,14 @@@@
 #else
     strcpy(outFName, "[]xvXXXXXX.lis");
 #endif
-    mktemp(outFName);
+    fp = fdopen(mkstemp(outFName), "w");
     dopipe = 1;
   }
 
 
   /* see if file exists (ie, we're overwriting) */
-  if (stat(outFName, &st)==0) {   /* stat succeeded, file must exist */
+  if (dopipe == 0 &&
+      stat(outFName, &st)==0) {   /* stat succeeded, file must exist */
     static char *foo[] = { "\nOk", "\033Cancel" };
     char str[512];
 
@@@@ -1636,7 +1638,8 @@@@
     
 
   /* Open file */
-  fp = fopen(outFName, "w");
+  if (dopipe == 0)
+    fp = fopen(outFName, "w");
   if (!fp) {
     char  str[512];
     sprintf(str,"Can't write file '%s'\n\n  %s.",outFName, ERRSTR(errno));

--- /tmp/xv-3.10a.orig/xvbrowse.c       Thu Jan 19 18:49:17 1995
+++ xvbrowse.c Mon Feb  5 23:46:28 1996
@@@@ -956,6 +956,7 @@@@
      char *str;
 {
   strncpy(br->dispstr, str, (size_t) 256);
+  br->dispstr[255] = '\0';
   drawBrowStr(br);
   XFlush(theDisp);
 }
@@@@ -1490,6 +1491,7 @@@@
   if (StringWidth(str) > ISPACE_WIDE-6) {
     int dotpos; 
     strncpy(tmpstr, str, (size_t) 56);
+    tmpstr[56] = '\0'; /* MR: otherwise it dies on long file names */
     dotpos = strlen(tmpstr);
     strcat(tmpstr,"...");

--- /tmp/xv-3.10a.orig/xvpopup.c        Thu Jan 19 19:09:31 1995
+++ xvpopup.c  Mon Feb  5 21:50:13 1996
@@@@ -560,6 +560,7 @@@@
	nams[*lenp] = (char *) malloc((size_t) 32);
	if (!nams[*lenp]) { free(vals[*lenp]); continue; }
	strncpy(nams[*lenp], vals[*lenp], (size_t) 31);
+	nams[*lenp][31] = '\0';
       }
       
       if (strlen(nams[*lenp]) > (size_t) 20) {   /* fix long names */

--- /tmp/xv-3.10a.orig/xvtext.c Sat Jan 14 00:46:28 1995
+++ xvtext.c   Mon Feb  5 21:50:54 1996
@@@@ -293,6 +293,7 @@@@
   tv->textlen     = len;
   tv->freeonclose = freeonclose;
   strncpy(tv->title, title, (size_t) TITLELEN-1);
+  tv->title[TITLELEN-1] = '\0';

   computeText(tv);      /* compute # lines and linestarts array */


@


1.2
log
@use the latest patches form the authors website
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2.22.1
log
@MFC:

SECURITY:
Fixes for multiple vulnerabilities. Switch to centralized jumbo patch.

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-aj,v 1.2 1999/04/22 19:05:11 rohee Exp $
@


1.2.20.1
log
@MFC:

SECURITY:
Fixes for multiple vulnerabilities.  Switch to centralized jumbo patch.

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-aj,v 1.2 1999/04/22 19:05:11 rohee Exp $
@


1.1
log
@mktemp->mkstemp
@
text
@d1 92
a92 50
*** xvdir.c.orig	Tue Jan  3 16:21:39 1995
--- xvdir.c	Sat Apr 25 20:13:32 1998
***************
*** 1596,1608 ****
  #else
      strcpy(outFName, "[]xvXXXXXX.lis");
  #endif
!     mktemp(outFName);
      dopipe = 1;
    }
  
  
    /* see if file exists (ie, we're overwriting) */
!   if (stat(outFName, &st)==0) {   /* stat succeeded, file must exist */
      static char *foo[] = { "\nOk", "\033Cancel" };
      char str[512];
  
--- 1620,1633 ----
  #else
      strcpy(outFName, "[]xvXXXXXX.lis");
  #endif
!     fp = fdopen(mkstemp(outFName), "w");
      dopipe = 1;
    }
  
  
    /* see if file exists (ie, we're overwriting) */
!   if (dopipe == 0 &&
!       stat(outFName, &st)==0) {   /* stat succeeded, file must exist */
      static char *foo[] = { "\nOk", "\033Cancel" };
      char str[512];
  
***************
*** 1612,1618 ****
      
  
    /* Open file */
!   fp = fopen(outFName, "w");
    if (!fp) {
      char  str[512];
      sprintf(str,"Can't write file '%s'\n\n  %s.",outFName, ERRSTR(errno));
--- 1637,1644 ----
      
  
    /* Open file */
!   if (dopipe == 0)
!     fp = fopen(outFName, "w");
    if (!fp) {
      char  str[512];
      sprintf(str,"Can't write file '%s'\n\n  %s.",outFName, ERRSTR(errno));
@

