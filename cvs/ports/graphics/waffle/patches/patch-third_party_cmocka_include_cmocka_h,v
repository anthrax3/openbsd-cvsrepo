head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.8
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.6
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2015.12.28.17.20.18;	author jca;	state Exp;
branches;
next	;
commitid	jA4vYfNnCF29Kj0V;


desc
@@


1.1
log
@Fix build of the bundled cmocka on 32 bits archs, taken from devel/cmocka.

Spotted by sthen@@, ok jsg@@
@
text
@$OpenBSD$

Avoid a conflicting typedef on 32-bit arch.

--- third_party/cmocka/include/cmocka.h.orig	Tue Aug 25 23:05:10 2015
+++ third_party/cmocka/include/cmocka.h	Mon Dec 28 18:15:45 2015
@@@@ -81,6 +81,9 @@@@ int __stdcall IsDebuggerPresent();
 #define cast_to_largest_integral_type(value) \
     ((LargestIntegralType)((size_t)(value)))
 
+#if defined(__OpenBSD__)
+#include <stdint.h>
+#else
 /* Smallest integral type capable of holding a pointer. */
 #if !defined(_UINTPTR_T) && !defined(_UINTPTR_T_DEFINED)
 # if defined(_WIN32)
@@@@ -109,6 +112,7 @@@@ int __stdcall IsDebuggerPresent();
 # define _UINTPTR_T
 # define _UINTPTR_T_DEFINED
 #endif /* !defined(_UINTPTR_T) || !defined(_UINTPTR_T_DEFINED) */
+#endif /* !defined(__OpenBSD__) */
 
 /* Perform an unsigned cast to uintptr_t. */
 #define cast_to_pointer_integral_type(value) \
@
