head	1.2;
access;
symbols
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	brad_1999-06-20:1.1.1.1
	brad:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2000.07.26.23.54.37;	author brad;	state dead;
branches;
next	1.1;

1.1
date	99.06.20.23.33.11;	author brad;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.06.20.23.33.11;	author brad;	state Exp;
branches
	1.1.1.1.4.1;
next	;

1.1.1.1.4.1
date	2000.09.15.04.53.03;	author marc;	state dead;
branches;
next	;


desc
@@


1.2
log
@upgrade to Mesa 3.2.1
@
text
@--- src/teximage.c.orig	Sun Mar  7 19:15:47 1999
+++ src/teximage.c	Sun Mar  7 19:15:52 1999
@@@@ -279,6 +282,16 @@@@
 
 
 
+/* Need this to prevent an out-of-bounds memory access when using
+ * X86 optimized code.
+ */
+#ifdef USE_X86_ASM
+#  define EXTRA_BYTE 1
+#else
+#  define EXTRA_BYTE 0
+#endif
+
+
 /*
  * Given a gl_image, apply the pixel transfer scale, bias, and mapping
  * to produce a gl_texture_image.  Convert image data to GLubytes.
@@@@ -328,7 +341,7 @@@@
    texImage->Height2 = 1 << texImage->HeightLog2;
    texImage->Depth2 = 1 << texImage->DepthLog2;
    texImage->MaxLog2 = MAX2( texImage->WidthLog2, texImage->HeightLog2 );
-   texImage->Data = (GLubyte *) malloc( numPixels * components );
+   texImage->Data = (GLubyte *) malloc( numPixels * components + EXTRA_BYTE );
 
    if (!texImage->Data) {
       /* out of memory */
@@@@ -775,7 +788,7 @@@@
    /* XXX should we really allocate memory for the image or let it be NULL? */
    /*texImage->Data = NULL;*/
 
-   texImage->Data = (GLubyte *) malloc( numPixels * components );
+   texImage->Data = (GLubyte *) malloc( numPixels * components + EXTRA_BYTE );
 
    /*
     * Let's see if anyone finds this.  If glTexImage2D() is called with
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@moving the MesaGL port to just Mesa for legal reasons
@
text
@@


1.1.1.1.4.1
log
@bring graphics as of cut-over date into 2.7 branch
@
text
@@

