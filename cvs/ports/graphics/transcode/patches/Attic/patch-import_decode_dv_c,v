head	1.2;
access;
symbols
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	sturm_2004-Jun-18:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2005.01.25.22.00.35;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2004.06.18.18.56.46;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.06.18.18.56.46;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Complete move graphics/transcode -> multimedia/transcode.
@
text
@$OpenBSD: patch-import_decode_dv_c,v 1.1 2004/06/18 18:56:46 sturm Exp $
--- import/decode_dv.c.orig	2003-12-20 03:48:51.000000000 -0800
+++ import/decode_dv.c	2004-04-28 10:26:58.000000000 -0700
@@@@ -253,7 +253,7 @@@@ void decode_dv(decode_t *decode)
 	pitches[1]  = 0;
 	pitches[2]  = 0;
 	  
-	dv_decode_full_frame(dv_decoder, buf, e_dv_color_rgb, (unsigned char **) video, pitches);
+	dv_decode_full_frame(dv_decoder, buf, e_dv_color_rgb, (unsigned char **) video, (int *)pitches);
 	dv_decoder->prev_frame_decoded = 1;
 	  
 	bytes = 3 * dv_decoder->width * dv_decoder->height;
@@@@ -270,7 +270,7 @@@@ void decode_dv(decode_t *decode)
 	pitches[1]  = 0;
 	pitches[2]  = 0;
 	  
-	dv_decode_full_frame(dv_decoder, buf, e_dv_color_yuv, (unsigned char **) video, pitches);
+	dv_decode_full_frame(dv_decoder, buf, e_dv_color_yuv, (unsigned char **) video, (int *)pitches);
 	dv_decoder->prev_frame_decoded = 1;
 	  
 	bytes = 2 * dv_decoder->width * dv_decoder->height;
@@@@ -295,7 +295,7 @@@@ void decode_dv(decode_t *decode)
 	    pitches[1]  = pitches[0]/2;
 	    pitches[2]  = pitches[0]/2;
 	    
-	    dv_decode_full_frame(dv_decoder, buf, e_dv_color_yuv, (unsigned char **) video, pitches);
+	    dv_decode_full_frame(dv_decoder, buf, e_dv_color_yuv, (unsigned char **) video, (int *)pitches);
 	  
 	  } else {
 	    
@@@@ -303,7 +303,7 @@@@ void decode_dv(decode_t *decode)
 	    pitches[1]  = 0;
 	    pitches[2]  = 0;
 	    
-	    dv_decode_full_frame(dv_decoder, buf, e_dv_color_yuv, (unsigned char **) video, pitches);
+	    dv_decode_full_frame(dv_decoder, buf, e_dv_color_yuv, (unsigned char **) video, (int *)pitches);
 	    
 	    //downsample to YV12:	  
 	    yuy2toyv12(video[3], video[2], video[1], video[0], dv_decoder->width, dv_decoder->height);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Initial import of transcode 0.6.12

transcode is a text console video-stream processing tool. 
It supports elementary video and audio frame transformations. 
Some example modules are included to enable import of MPEG-1/2, 
Digital Video, and other formats. It also includes export 
modules for writing to AVI files with DivX, OpenDivX, XviD,
Digital Video or other codecs. Direct DVD transcoding is also 
supported. A set of tools is available to extract and decode 
the sources into raw video/audio streams for import and to 
enable post-processing of AVI files.

from Waldemar Brodkorb and Jacob Meuser, maintained by
Waldemar Brodkorb <wbx at openbsd.de>
@
text
@@
