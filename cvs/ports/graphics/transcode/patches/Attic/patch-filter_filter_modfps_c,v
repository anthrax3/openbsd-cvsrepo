head	1.2;
access;
symbols
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	sturm_2004-Jun-18:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2005.01.25.22.00.35;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2004.06.18.18.56.46;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.06.18.18.56.46;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Complete move graphics/transcode -> multimedia/transcode.
@
text
@$OpenBSD: patch-filter_filter_modfps_c,v 1.1 2004/06/18 18:56:46 sturm Exp $
--- filter/filter_modfps.c.orig	2003-08-18 09:08:35.000000000 -0700
+++ filter/filter_modfps.c	2004-04-27 19:16:19.000000000 -0700
@@@@ -120,7 +120,7 @@@@ static void help_optstr()
     printf ("  For most users, modfps will need either no options, or just mode=1\n");
     printf ("* Options\n");
     printf ("\tmode : (0=unbuffered, 1=buffered [%d]\n", mode);
-    printf ("\tinfps : original fps (override what transcode supplies) [%lf]\n",infps);
+    printf ("\tinfps : original fps (override what transcode supplies) [%f]\n",infps);
     printf ("\tinfrc : original frc (overwrite infps) [%d]\n",infrc);
     printf ("\tbuffer : number of frames to buffer [%d]\n",numSample);
     printf ("\tsubsample : number of pixels to subsample when examining buffers [%d]\n",offset);
@@@@ -212,9 +212,15 @@@@ static void clone_phosphor_average(unsig
     //ptr->video_buf[i] = (unsigned char)lrint(pow( ( pow((double)clone[i], 3.0) +
     //					      pow((double)next[i],  3.0) ) / 2.0,
     //					      1.0/3.0));
+#ifdef HAVE_LIBM_LRINT
     ptr->video_buf[i] = (unsigned char)lrint(pow((double) (( clone[i]*clone[i]*clone[i] +
     					      next[i]*next[i]*next[i]) >> 1),
 					      1.0/3.0));
+#else
+    ptr->video_buf[i] = (unsigned char)(long)rint(pow((double) (( clone[i]*clone[i]*clone[i] +
+    					      next[i]*next[i]*next[i]) >> 1),
+					      1.0/3.0));
+#endif
   }
   for(; i<ptr->video_size; i++){
     ptr->video_buf[i] = (unsigned char)( ((short int)clone[i] + (short int)next[i]) >> 1);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Initial import of transcode 0.6.12

transcode is a text console video-stream processing tool. 
It supports elementary video and audio frame transformations. 
Some example modules are included to enable import of MPEG-1/2, 
Digital Video, and other formats. It also includes export 
modules for writing to AVI files with DivX, OpenDivX, XviD,
Digital Video or other codecs. Direct DVD transcoding is also 
supported. A set of tools is available to extract and decode 
the sources into raw video/audio streams for import and to 
enable post-processing of AVI files.

from Waldemar Brodkorb and Jacob Meuser, maintained by
Waldemar Brodkorb <wbx at openbsd.de>
@
text
@@
