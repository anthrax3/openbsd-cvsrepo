head	1.2;
access;
symbols
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	sturm_2004-Jun-18:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2005.01.25.22.00.35;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2004.06.18.18.56.46;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.06.18.18.56.46;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Complete move graphics/transcode -> multimedia/transcode.
@
text
@$OpenBSD: patch-export_af6_aux_cpp,v 1.1 2004/06/18 18:56:46 sturm Exp $
--- export/af6_aux.cpp.orig	2003-08-11 08:27:41.000000000 -0700
+++ export/af6_aux.cpp	2004-04-27 19:15:44.000000000 -0700
@@@@ -36,13 +36,13 @@@@
 #include <avifile-0.7/videoencoder.h>
 #include <avifile-0.7/audioencoder.h>
 #include <avifile-0.7/avm_fourcc.h>
-#include <avifile-0.7/creators.h>
+#include <avifile-0.7/avm_creators.h>
 #include <avifile-0.7/avm_default.h>
 #elif HAVE_AVIFILE_INCLUDES == 0
 #include <avifile/videoencoder.h>
 #include <avifile/audioencoder.h>
 #include <avifile/avm_fourcc.h>
-#include <avifile/creators.h>
+#include <avifile/avm_creators.h>
 #include <avifile/avm_default.h>
 #endif
 
@@@@ -62,9 +62,6 @@@@ struct codec_attr {
 
 int attr_count = 0;
 
-#ifndef __FreeBSD__ /* Does it work on other systems? */
-  //static 
-#endif 
 void long2str(unsigned char *dst, int n)
 {
    dst[0] = (n    )&0xff;
@@@@ -134,6 +131,10 @@@@ void list_attributes(const CodecInfo *in
   	GetCodecAttr(*info, it->GetName(), &def_str);
   	fprintf(stderr, "\tType: string (default value: %s)\n", def_str);
   	break;
+
+      case AttributeInfo::Float:
+  	fprintf(stderr, "\tType: float XXX FIX ME");
+        break;
     }
   }  
   fprintf(stderr, "\n");
@@@@ -248,15 +249,16 @@@@ short set_attribute(const CodecInfo *inf
 		{
 		case AttributeInfo::Integer:
 		  SetCodecAttr(*info, it->GetName(), atoi(val));
-		  
 		  break;
 		case AttributeInfo::String:
 		  SetCodecAttr(*info, it->GetName(), val);
-		  
 		  break;
 		case AttributeInfo::Select:
 		  SetCodecAttr(*info, it->GetName(), val);
 		  break;
+		case AttributeInfo::Float:
+		  // SetCodecAttr(*info, it->GetName(), atoi(val));
+		  break;
 		}
 		retval = 1;
 		break;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Initial import of transcode 0.6.12

transcode is a text console video-stream processing tool. 
It supports elementary video and audio frame transformations. 
Some example modules are included to enable import of MPEG-1/2, 
Digital Video, and other formats. It also includes export 
modules for writing to AVI files with DivX, OpenDivX, XviD,
Digital Video or other codecs. Direct DVD transcoding is also 
supported. A set of tools is available to extract and decode 
the sources into raw video/audio streams for import and to 
enable post-processing of AVI files.

from Waldemar Brodkorb and Jacob Meuser, maintained by
Waldemar Brodkorb <wbx at openbsd.de>
@
text
@@
