head	1.3;
access;
symbols
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	sturm_2004-Jun-18:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2005.01.25.22.00.35;	author naddy;	state dead;
branches;
next	1.2;

1.2
date	2004.06.24.19.27.00;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.18.18.56.43;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.06.18.18.56.43;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Complete move graphics/transcode -> multimedia/transcode.
@
text
@$OpenBSD: patch-configure_in,v 1.2 2004/06/24 19:27:00 sturm Exp $
--- configure.in.orig	2004-01-06 12:38:03.000000000 -0800
+++ configure.in	2004-05-20 20:07:20.000000000 -0700
@@@@ -64,6 +64,7 @@@@ case "x${target_cpu}" in
   ;;
 esac
 
+no_opt_cflags="$CFLAGS"
 
 AM_CONDITIONAL([SYSTEM_DARWIN], test x"$is_osx" = x"true")
  
@@@@ -141,13 +142,23 @@@@ AC_FUNC_STAT
 AC_FUNC_STRCOLL
 AC_TYPE_SIGNAL
 AC_CHECK_FUNCS([strtol memalign ftruncate gettimeofday memset strerror strncasecmp stat floor atexit getpagesize memmove mkfifo vsscanf strptime])
+AC_CHECK_LIB(m, lrint, AC_DEFINE(HAVE_LIBM_LRINT, 1, [Define if the lrint() function is in libm on your system]))
+
+case "$host_os" in
+  freebsd*|openbsd*|netbsd*|bsdi*|darwin*|rhapsody*)
+     AC_DEFINE([SYS_BSD], 1, [Define if your system is modern BSD])
+     ;;
+  *)
+     ;;
+esac
+
 
 dnl for libavcodec
 AC_CHECK_LIB(m, lrintf, AC_DEFINE([HAVE_LRINTF], 1, [define if you have the lrintf function]))
 
 dnl Replace `main' with a function in pthread libs:
  case "$host" in
-   *-*-freebsd*)
+   *-*-freebsd*|*-*-openbsd*)
     pthread_cflags="-D_REENTRANT -D_THREAD_SAFE"
     pthread_lib="-pthread"
     ;;
@@@@ -188,7 +199,7 @@@@ dnl       code, not whether the host can
 dnl       at run time with the exception of the SSE code.
 dnl
 dnl 
-have_asm_mmx=false
+dnl have_asm_mmx=false this is later checked with AC_CACHE_CHECK()
 have_asm_sse=false
 have_asm_3dnow=false
 have_asm_nasm=false
@@@@ -350,7 +361,7 @@@@ if test x$have_x86cpu = xtrue ; then
  AC_MSG_CHECKING(for CMOV support)
  if test "$enable_cmov_extension" != "no" ; then
  case "$host" in
- *-*-freebsd*)
+ *-*-freebsd*|*-*-openbsd*)
   cpu_features=`grep -l CMOV /var/run/dmesg.boot`
   if test X"$cpu_features" = X"/var/run/dmesg.boot" ; then
     have_cmov=true
@@@@ -479,6 +490,9 @@@@ if test x"$enable_warnings" = x"yes" -a 
     AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
 fi
 
+
+CFLAGS="$no_opt_cflags"
+
 AC_SUBST(CFLAGS)
 
 LTLIBOBJS=`echo "$AC_LIBOBJ" | sed 's,.o ,.lo ,g;s,.o$,.lo,'`
@@@@ -938,13 +952,17 @@@@ AM_CONDITIONAL(HAVE_GTK, test x"$have_gt
 dnl
 dnl LIBFAME support
 dnl
-
+AC_ARG_WITH(libfame,
+		AC_HELP_STRING([--with-libfame][use libfame (default is yes)]),
+		[], with_libfame=yes)
 have_libfame=no
+if test x$with_libfame = "x"yes ; then
 AM_PATH_LIBFAME(,
 [
 	AC_DEFINE([HAVE_LIBFAME], 1, [Have libfame support]) 
 	have_libfame=yes	
 ])
+fi
 AM_CONDITIONAL(HAVE_LIBFAME, test x"$have_libfame" = "xyes")
 
 dnl
@


1.2
log
@improve port, from Jacob Meuser <jakemsr at jakemsr.com>
maintainer ok
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d2 11
a12 4
--- configure.in.orig	2004-01-06 21:38:03.000000000 +0100
+++ configure.in	2004-06-10 14:18:55.000000000 +0200
@@@@ -140,14 +140,24 @@@@ AC_FUNC_VPRINTF
 AC_FUNC_STAT
d15 1
a15 2
-AC_CHECK_FUNCS([strtol memalign ftruncate gettimeofday memset strerror strncasecmp stat floor atexit getpagesize memmove mkfifo vsscanf strptime])
+AC_CHECK_FUNCS([strtol memalign ftruncate gettimeofday memset strerror strncasecmp stat floor atexit getpagesize memmove mkfifo vsscanf strptime strlcat])
d37 20
a56 51
@@@@ -214,7 +224,6 @@@@ if test "$enable_mmx_accel" != "no"; the
 		   have_asm_mmx=yes, have_asm_mmx=no)])
    if test "x${have_asm_mmx}" != "xno"; then
       AC_DEFINE([HAVE_ASM_MMX], 1, [Define if your CPU understands ASM MMX instructions])
-      AC_DEFINE([HAVE_MMX], 1, [Define if your CPU understands MMX instructions])
       have_asm_mmx=true
       AC_MSG_RESULT([yes])
    else
@@@@ -416,16 +425,16 @@@@ if test x"$GCC" = x"yes"; then
     dnl changequote([,])
     OPT_CFLAGS=""
     if test x${USE_MAINTAINER_MODE} != xno; then
-       OPT_CFLAGS="$OPT_CFLAGS -O2 $CFLAGS"
+       OPT_CFLAGS="$OPT_CFLAGS $CFLAGS"
     else
-       OPT_CFLAGS="$OPT_CFLAGS -O3 $CFLAGS"
+       OPT_CFLAGS="$OPT_CFLAGS $CFLAGS"
     fi
-    AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
+    dnl AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
 
     dnl -fomit-frame-pointer
     if test x${USE_MAINTAINER_MODE} = xno; then
        OPT_CFLAGS="-fomit-frame-pointer $CFLAGS"
-       AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
+       dnl AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
     fi
 
 
@@@@ -446,11 +455,11 @@@@ dnl
 	i686-*) OPT_CFLAGS="$CFLAGS -mcpu=pentiumpro";;
 	k6-*)   OPT_CFLAGS="$CFLAGS -mcpu=k6";;
 	esac ;;
-     esac
-	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
+     esac ;;
+	dnl AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
     sparc-*)
-	OPT_CFLAGS="$CFLAGS -mcpu=ultrasparc -mvis"
-	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
+	OPT_CFLAGS="$CFLAGS -mcpu=ultrasparc -mvis";;
+	dnl AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
     mips-sgi-irix6.*)	dnl do we need to be that specific ?
 	OPT_CFLAGS="$CFLAGS -mabi=64"
 	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
@@@@ -476,7 +485,7 @@@@ AC_ARG_ENABLE([warnings],
 if test x"$enable_warnings" = x"yes" -a x"$GCC" = x"yes"; then
     dnl compiler warnings
     OPT_CFLAGS="-Wall -Werror $CFLAGS"
-    AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
+    dnl AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
d59 3
a62 14
@@@@ -486,12 +495,12 @@@@ AC_SUBST(LTLIBOBJS)
 
 
 OPT_CFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 $CFLAGS"
-AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
-AC_SUBST(CFLAGS)
+dnl AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
+dnl AC_SUBST(CFLAGS)
 
 OPT_CXXFLAGS="$CXXFLAGS -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
-AC_TRY_CXXFLAGS([$OPT_CXXFLAGS],[CXXFLAGS=$OPT_CXXFLAGS])
-AC_SUBST(CXXFLAGS)
+dnl AC_TRY_CXXFLAGS([$OPT_CXXFLAGS],[CXXFLAGS=$OPT_CXXFLAGS])
+dnl AC_SUBST(CXXFLAGS)
d64 2
a66 2
 dnl fast integers
@@@@ -939,12 +948,28 @@@@ dnl
d69 4
a72 15
 
+# Check whether --with-libfame or --without-libfame was given.
+if test "${with_libfame+set}" = set; then
+  withval="$with_libfame"
+  case "${withval}" in
+  yes) ;;
+  no)  ;;
+  *) { { echo "$as_me:$LINENO: error: bad value ${withval} for --with-libfame" >&5
+echo "$as_me: error: bad value ${withval} for --with-libfame" >&2;}
+   { (exit 1); exit 1; }; } ;;
+esac
+else
+  with_libfame=yes
+fi;
+
@


1.1.1.1
log
@Initial import of transcode 0.6.12

transcode is a text console video-stream processing tool. 
It supports elementary video and audio frame transformations. 
Some example modules are included to enable import of MPEG-1/2, 
Digital Video, and other formats. It also includes export 
modules for writing to AVI files with DivX, OpenDivX, XviD,
Digital Video or other codecs. Direct DVD transcoding is also 
supported. A set of tools is available to extract and decode 
the sources into raw video/audio streams for import and to 
enable post-processing of AVI files.

from Waldemar Brodkorb and Jacob Meuser, maintained by
Waldemar Brodkorb <wbx at openbsd.de>
@
text
@@
