head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.64
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.60
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.62
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.58
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.56
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.54
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.52
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.50
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.48
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.46
	OPENBSD_5_0:1.1.1.1.0.44
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.42
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.40
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.38
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.36
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.34
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.32
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.30
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.28
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.26
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.24
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.22
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.20
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.18
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.16
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.14
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.12
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.10
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.8
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	naddy_20010116:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2001.01.16.22.44.43;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.01.16.22.44.43;	author naddy;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD: $
--- wmphoto/wmphoto.c.orig	Sun Oct  3 07:11:37 1999
+++ wmphoto/wmphoto.c	Tue Jan 16 18:05:55 2001
@@@@ -34,7 +34,6 @@@@ char current[1024];
 
 char home[1024];
 
-
 int main(int argc, char **argv)
   {
 	init_stuff(argc, argv);
@@@@ -49,7 +48,7 @@@@ int main(int argc, char **argv)
 void init_stuff(int argc, char **argv)
   {
 	/* get the user's home */
-	sprintf(home,"%s/.wmphoto",getenv("HOME"));
+	snprintf(home,sizeof(home),"%s/.wmphoto",getenv("HOME"));
 	
 	if (argc == 2)
 	  {	show_usage();  }
@@@@ -194,7 +193,7 @@@@ void get_next_photo(char *current)
 
 
 
-int myselect(const struct dirent *d)
+int myselect(struct dirent *d)
   {	char *name = d->d_name;
 	static int lenght;
 	static char *defExt = ".xpm.gz";
@@@@ -223,7 +222,7 @@@@ void load_photo(char *name)
 
 	mylenght = strlen(defExt);
 
-	sprintf(current, "%s/%s", home, name);
+	snprintf(current, sizeof(current), "%s/%s", home, name);
 
 	lenght = strlen(current);
 	current[lenght - mylenght] = 0;
@@@@ -252,7 +251,7 @@@@ void load_photo(char *name)
 
 	status = XpmReadFileToPixmap(display, wmgen.pixmap, current, &mypixmap,
 		0, &xpmAttributes);
-	strcpy(current, name);
+	strlcpy(current, name, sizeof(current));
 	if (status != XpmSuccess)
 	  {	fprintf(stderr, "wmphoto (XpmError): %s\n",
 			XpmGetErrorString(status));
@@@@ -298,7 +297,8 @@@@ void add_photo(char *filename)
 		  }
 		printf("good.\n\n");
 	  }
-	closedir(mydir);
+	else
+	  closedir(mydir);
 
 	
 
@@@@ -315,7 +315,7 @@@@ void add_photo(char *filename)
 	printf("Command to run for button2? (ex: xterm -e talk amartoq@@cec.uchile.cl)\n");
 	fgets(command2, 1024, stdin);
 
-	sprintf(current, "%s/%s", home, profile);
+	snprintf(current, sizeof(current), "%s/%s", home, profile);
 	printf("Creating %s... ", current);
 
 	myfile = fopen(current, "w");
@@@@ -329,7 +329,7 @@@@ void add_photo(char *filename)
 	fclose(myfile);
 
 	printf("good.\nExecuting convert, this may take a while...\n");
-	sprintf(current, "convert -colors 255 -dither -geometry 48x52! %s xpm:%s/%s.xpm.gz", filename, home, profile);
+	snprintf(current, sizeof(current), "convert -colors 255 -dither -geometry 48x52! %s xpm:%s/%s.xpm.gz", filename, home, profile);
 	printf("%s ", current);
 	fflush(stdout);
 
@@@@ -345,7 +345,7 @@@@ void show_usage()
   {
 	printf("[wmphoto %s] Copyright(C) 1999, by Aldrin Martoq A. (amartoq@@cec.uchile.cl)\n", WMPHOTO_VERSION);
 
-	printf("ussage:\nwmphoto\n\t Starts the wmphoto as dock app.\n\nwmphoto add <an_image_file>\n\t Add the photo <an_image_file> to your ~/.wmphoto directory interactivaly\n\t(Imagemagick's `convert` program needed).\n\n");
+	printf("usage:\nwmphoto\n\t Starts the wmphoto as dock app.\n\nwmphoto add <an_image_file>\n\t Add the photo <an_image_file> to your ~/.wmphoto directory interactivaly\n\t(Imagemagick's `convert` program needed).\n\n");
 
 	exit(0);
   }
@


1.1.1.1
log
@Import wmphoto 0.3a.
Submitted by Peter Stromberg <home@@wilfried.net>.

It's a dock-app that can show you a photo and execute a command
related to that photo.  You can have many photos.
@
text
@@
