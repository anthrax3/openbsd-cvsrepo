head	1.29;
access;
symbols
	OPENBSD_6_1:1.27.0.2
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.24.0.4
	OPENBSD_6_0_BASE:1.24
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.20.0.4
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.18.0.4
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.2
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.17.0.2
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	landry_20101025:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.29
date	2017.07.16.19.18.57;	author espie;	state Exp;
branches;
next	1.28;
commitid	tt0GhWK5c4uf9ILG;

1.28
date	2017.05.31.08.08.16;	author espie;	state Exp;
branches;
next	1.27;
commitid	ij92FtFXiSiT1ani;

1.27
date	2016.09.23.09.16.55;	author sthen;	state Exp;
branches;
next	1.26;
commitid	XLnI6AbHAmyVU5mO;

1.26
date	2016.09.22.14.27.23;	author naddy;	state Exp;
branches;
next	1.25;
commitid	O6jydwWappmsUTPk;

1.25
date	2016.09.04.16.46.57;	author landry;	state Exp;
branches;
next	1.24;
commitid	VoBhkVHsLvgbgjrq;

1.24
date	2015.12.01.07.05.41;	author ajacoutot;	state Exp;
branches;
next	1.23;
commitid	rjNEIeKEhJsubFcD;

1.23
date	2015.11.24.08.23.08;	author landry;	state Exp;
branches;
next	1.22;
commitid	DIfc5xTJaOgTf6T8;

1.22
date	2015.09.22.09.52.43;	author sthen;	state Exp;
branches;
next	1.21;
commitid	9ycNtkeNwYtX31An;

1.21
date	2015.09.18.20.07.09;	author landry;	state Exp;
branches;
next	1.20;
commitid	N263cXg5vtZIzI4i;

1.20
date	2015.07.01.08.45.19;	author jasper;	state Exp;
branches;
next	1.19;
commitid	sYFQHaeB2APMqCQ6;

1.19
date	2015.05.05.17.00.18;	author sthen;	state Exp;
branches;
next	1.18;
commitid	ukCYGVBlglFzny8e;

1.18
date	2014.03.31.07.33.12;	author ajacoutot;	state Exp;
branches;
next	1.17;

1.17
date	2014.01.10.19.36.18;	author landry;	state Exp;
branches;
next	1.16;

1.16
date	2013.12.01.12.30.56;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2013.11.25.14.16.23;	author sthen;	state Exp;
branches;
next	1.14;

1.14
date	2013.07.15.17.09.16;	author landry;	state Exp;
branches;
next	1.13;

1.13
date	2013.07.06.11.19.48;	author landry;	state Exp;
branches;
next	1.12;

1.12
date	2013.06.04.18.41.49;	author naddy;	state Exp;
branches;
next	1.11;

1.11
date	2013.05.20.14.51.42;	author rpe;	state Exp;
branches;
next	1.10;

1.10
date	2013.05.16.17.20.12;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2013.03.11.11.10.54;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2013.01.11.13.44.24;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2012.05.05.07.05.16;	author landry;	state Exp;
branches;
next	1.6;

1.6
date	2012.05.05.01.16.44;	author naddy;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.03.08.48.26;	author landry;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.16.10.02.37;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2011.06.08.17.35.28;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2010.11.17.08.05.15;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.24.22.40.54;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.10.24.22.40.54;	author landry;	state Exp;
branches;
next	;


desc
@@


1.29
log
@use COMPILER_LIBCXX where applicable
@
text
@# $OpenBSD: Makefile,v 1.28 2017/05/31 08:08:16 espie Exp $

BROKEN =	undefined reference to '_ZN6icu_5613UnicodeStringC1EOS0_'

# out of memory, renderer_common/process_group_symbolizer.cpp
# powerpc &sparc64 OOM's on expression_grammar.cpp
ONLY_FOR_ARCHS =	amd64

COMMENT =	toolkit for developing mapping applications

DISTNAME =	mapnik-v3.0.10
PKGNAME =	${DISTNAME:S/v//}
EXTRACT_SUFX =	.tar.bz2
REVISION =	0

SHARED_LIBS =	mapnik 3.0 #3.0
CATEGORIES =	graphics geo

HOMEPAGE =	http://mapnik.org/
MAINTAINER =	Landry Breuil <landry@@openbsd.org>
DPB_PROPERTIES = nojunk

# LGPLv2.1
PERMIT_PACKAGE_CDROM =	Yes

WANTLIB += X11 Xau Xdmcp Xext Xrender boost_filesystem-mt
WANTLIB += boost_program_options-mt boost_regex-mt harfbuzz webp
WANTLIB += boost_system-mt c cairo expat fontconfig
WANTLIB += freetype gdal glib-2.0 gobject-2.0 icuuc jpeg m pcre pixman-1
WANTLIB += png>=17.0 pq proj pthread pthread-stubs sqlite3 tiff
WANTLIB += xcb xcb-render xcb-shm z ${COMPILER_LIBCXX}

MASTER_SITES =	http://mapnik.s3.amazonaws.com/dist/v3.0.10/
MODULES =	devel/gettext \
		devel/scons \
		lang/python

# clang doesnt ship cstdint ?
COMPILER =	gcc
MODGCC4_ARCHS =	amd64 i386 powerpc sparc64

TEST_DEPENDS =	shells/bash \
		${BUILD_PKGPATH}

LIB_DEPENDS =	devel/boost>=1.58 \
		databases/sqlite3 \
		graphics/cairo \
		graphics/libwebp \
		devel/proj \
		devel/harfbuzz \
		geo/gdal \
		textproc/icu4c

# Scons sucks. Use WARNING_CXXFLAGS as a way to pass freetype2 includes
MODSCONS_FLAGS =	PREFIX="${TRUEPREFIX}" \
			DESTDIR="${WRKINST}" \
			ICU_INCLUDES=${LOCALBASE}/include \
			ICU_LIBS=${LOCALBASE}/lib \
			HB_INCLUDES=${LOCALBASE}/include \
			HB_LIBS=${LOCALBASE}/lib \
			WARNING_CXXFLAGS="-I${X11BASE}/include/freetype2" \
			SYSTEM_FONTS=${X11BASE}/lib/X11/fonts/TTF/ \
			FAST=yes \
			INPUT_PLUGINS=raster,postgis,shape,gdal,ogr,sqlite

pre-configure:
	# subst shlib version
	${SUBST_CMD} ${WRKSRC}/src/build.py

do-test:
	# warning: some tests may swap your machine to death
	# python_tests.datasource_test.test_hit_grid may stall gobbling all cpu
	# python_tests.geometry_io_test.test_wkb_parsing may segfault
	# tests involving unicode/utf fail
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${LOCALBASE}/bin/bash test/run

.include <bsd.port.mk>
@


1.28
log
@switch everything to new COMPILER idiom, even stuff that won't build with clang
yet, but at least that part is done.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2016/09/23 09:16:55 sthen Exp $
d31 1
a31 1
WANTLIB += xcb xcb-render xcb-shm z ${LIBECXX}
@


1.27
log
@Cope with moving sqlite3 back to ports.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2016/09/22 14:27:23 naddy Exp $
d3 1
a3 1
BROKEN =	undefined reference to `_ZN6icu_5613UnicodeStringC1EOS0_'
d31 1
a31 1
WANTLIB += xcb xcb-render xcb-shm z
a35 1
		gcc4 \
d39 2
a40 2
MODGCC4_ARCHS =		amd64 i386 powerpc sparc64
MODGCC4_LANGS =		c c++
@


1.26
log
@Mark as BROKEN again.  The problem refuses to go away on its own.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2016/09/04 16:46:57 landry Exp $
d14 1
d47 1
@


1.25
log
@Update to 3.0.10, still BROKEN because of missing symbol for
_ZN6icu_5713UnicodeStringC1EPKciEOS0_. Maybe switching icu to build with
a decent compiler would help, but that's not planned for now...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2015/12/01 07:05:41 ajacoutot Exp $
d3 1
a3 1
#BROKEN =		undefined reference to `_ZN6icu_5613UnicodeStringC1EOS0_'
@


1.24
log
@BROKEN.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2015/11/24 08:23:08 landry Exp $
d3 1
a3 1
BROKEN =		undefined reference to `_ZN6icu_5613UnicodeStringC1EOS0_'
d11 1
a11 1
DISTNAME =	mapnik-v3.0.5
d32 1
a32 1
MASTER_SITES =	http://mapnik.s3.amazonaws.com/dist/v3.0.5/
@


1.23
log
@Mark as ONLY_FOR_ARCHS=amd64, gcc OOM's on i386/powerpc/sparc64 anyway,
and there's no point in wasting bazillions of cpu cycles on this c++11
monster there.

Makes sense to sthen@@
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.22 2015/09/22 09:52:43 sthen Exp $
@


1.22
log
@can't build mapnik on i386, not enough memory
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2015/09/18 20:07:09 landry Exp $
d4 2
a5 1
NOT_FOR_ARCHS =	i386
@


1.21
log
@Update to mapnik 3.0.5.

Switch to use gcc 4.9 since it now requires c++11. Thx ajacoutot for
the build-testing - note that it requires more than 4gb of memory to
build, and might not build on i386.
@
text
@d1 4
a4 1
# $OpenBSD: Makefile,v 1.20 2015/07/01 08:45:19 jasper Exp $
@


1.20
log
@- lots of fixes from upstream to build with new boost/phoenix v3 (from upstream)
- bump boost dependency

ok landry@@ (MAINTAINER)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2015/05/05 17:00:18 sthen Exp $
d5 1
a5 1
DISTNAME =	mapnik-v2.2.0
a7 1
REVISION =	3
d9 1
a9 1
SHARED_LIBS =	mapnik 2.0 #2.0
d20 2
a21 2
WANTLIB += boost_program_options-mt boost_python-mt boost_regex-mt
WANTLIB += boost_system-mt boost_thread-mt c cairo curl expat fontconfig
d23 2
a24 2
WANTLIB += png>=17.0 pq proj pthread pthread-stubs sqlite3 stdc++ tiff
WANTLIB += xcb xcb-render xcb-shm xml2 z
d26 1
a26 1
MASTER_SITES =	http://mapnik.s3.amazonaws.com/dist/v2.2.0/
d29 1
d32 5
a36 1
TEST_DEPENDS =	devel/py-nose \
a38 3
BUILD_DEPENDS =	graphics/py-cairo \
		devel/scons>=2.3.0

d41 1
d43 1
d47 1
d50 6
a55 3
			PNG_INCLUDES="${LOCALBASE}/include ${X11BASE}/include/freetype2" \
			PNG_LIBS="${LOCALBASE}/lib" \
			SYSTEM_FONTS="${X11BASE}/lib/X11/fonts/TTF/" \
d57 1
a57 1
			INPUT_PLUGINS=raster,postgis,shape,gdal,ogr,osm,sqlite
d68 1
a68 1
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${MODPY_BIN} tests/run_tests.py 
@


1.19
log
@sync WANTLIB
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2014/03/31 07:33:12 ajacoutot Exp $
d8 1
a8 1
REVISION =	2
d38 1
a38 1
LIB_DEPENDS =	devel/boost>=1.47 \
@


1.18
log
@Use the devel/gettext module.

ok landry@@ (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2014/01/10 19:36:18 landry Exp $
d8 1
a8 1
REVISION =	1
d20 7
a42 9

WANTLIB =	cairo icuuc png>=17.0 pq proj jpeg \
		boost_filesystem-mt tiff sqlite3 \
		boost_program_options-mt boost_python-mt \
		boost_regex-mt boost_system-mt boost_thread-mt \
		c freetype m stdc++ xml2 z curl gdal \
		X11 Xau Xdmcp Xext Xrender fontconfig glib-2.0 \
		gobject-2.0 pcre pixman-1 pthread-stubs \
		xcb xcb-render xcb-shm pthread
@


1.17
log
@Pass ${X11BASE}/include/freetype2 via PNG_INCLUDES, because scons is too
scary. Fixes build with newer freetype.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2013/12/01 12:30:56 espie Exp $
d8 1
a8 1
REVISION =	0
d21 2
a22 1
MODULES =	devel/scons \
d43 1
a43 1
		gobject-2.0 intl pcre pixman-1 pthread-stubs \
@


1.16
log
@something picks up ansidecl.h and won't let go.

scons: *** [src/libxml2_loader.os] Implicit dependency `/usr/local/include/ansidecl.h' not found, needed by target `src/libxml2_loader.os'.
scons: building terminated because of errors.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2013/11/25 14:16:23 sthen Exp $
d47 1
a47 1
			PNG_INCLUDES="${LOCALBASE}/include" \
@


1.15
log
@kill VMEM_WARNING
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2013/07/15 17:09:16 landry Exp $
d15 1
@


1.14
log
@Fix build on 32-bits archs. One of the python tests still does an abort
trap, but at least this packages now, tested on i386 & powerpc. To be
refined...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2013/07/06 11:19:48 landry Exp $
a22 1
VMEM_WARNING =	Yes
@


1.13
log
@Update to mapnik 2.2.0.

Fix depends, remove cairomm/libtool,-ltdl & agg. Mapnik uses its own
internal agg fork now. Fix WANTLIB while here, and ensure dependency on
png 1.6, otherwise build breaks horribly.
Force the dependency on scons 2.3.0, newer mapnik switched from CXXFLAGS
to CPPDEFINES, and with previous scons this produces broken build flags like
-DHAVE_JPEG-DMAPNIK_USE_PROJ4-DHAVE_PNG-DHAVE_TIFF-DBIGINT-DOPENBSD-DMAPNIK_THREADSAFE
in turn producing broken builds.
Add a warning about the 'dangerous' regress tests.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2013/06/04 18:41:49 naddy Exp $
d8 1
@


1.12
log
@the png headers are now directly under include/
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2013/05/20 14:51:42 rpe Exp $
d5 1
a5 1
DISTNAME =	mapnik-v2.0.1
a7 1
REVISION=	1
d9 1
a9 1
SHARED_LIBS =	mapnik 1.0 #2.0
d18 2
a19 3
MASTER_SITES =	https://github.com/downloads/mapnik/mapnik/
MODULES =	devel/gettext \
		devel/scons \
d23 2
a24 2
TEST_DEPENDS =	devel/py-nose
BUILD_DEPENDS =	graphics/py-cairo
d26 5
a30 3
LIB_DEPENDS =	devel/boost \
		graphics/cairomm \
		graphics/agg \
a31 1
		devel/libtool,-ltdl \
d35 1
a35 1
WANTLIB =	cairomm-1.0 cairo icuuc ltdl png pq proj jpeg \
d39 4
a42 6
		c freetype m stdc++ xml2 z curl gdal agg

WANTLIB += X11 Xau Xdmcp Xext Xrender fontconfig glib-2.0 gobject-2.0
WANTLIB += pcre pixman-1 pthread pthread-stubs sigc-2.0 xcb xcb-render
WANTLIB += xcb-shm

d47 1
a47 1
			INTERNAL_LIBAGG=no \
d57 4
@


1.11
log
@bump REVISION and regen WANTLIB after switching to gettext MODULE

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2013/05/16 17:20:12 sthen Exp $
d49 1
a49 1
			PNG_INCLUDES="${LOCALBASE}/include/libpng/" \
@


1.10
log
@use gettext MODULE
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2013/03/11 11:10:54 espie Exp $
d8 1
a8 1
REVISION=	0
d42 3
a44 3
WANTLIB += GL X11 Xau Xdamage Xdmcp Xext Xfixes Xrender Xxf86vm
WANTLIB += drm expat fontconfig glib-2.0 gobject-2.0 pcre
WANTLIB += pixman-1 pthread-stubs sigc-2.0 xcb xcb-render xcb-shm
@


1.9
log
@PERMIT_* / REGRESS -> TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2013/01/11 13:44:24 ajacoutot Exp $
d20 3
a22 1
MODULES =	devel/scons lang/python
d43 1
a43 1
WANTLIB += drm expat fontconfig glib-2.0 gobject-2.0 intl pcre
@


1.8
log
@Bump after libsigc++-2 -docs => -main merge.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2012/05/05 07:05:16 landry Exp $
a17 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM =Yes
PERMIT_DISTFILES_FTP =	Yes
d23 1
a23 1
REGRESS_DEPENDS =	devel/py-nose
d57 1
a57 1
do-regress:
@


1.7
log
@Unbreak by not calling ldconfig during fake (whooo, oneliner fix!)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2012/05/05 01:16:44 naddy Exp $
d8 1
@


1.6
log
@mark as BROKEN; it resets the ld.so search path in fake
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.5 2012/05/03 08:48:26 landry Exp $

BROKEN =	resets ld.so search path
@


1.5
log
@Update to mapnik 2.0.1

- enable sqlite input plugin
- enable regress tests
- fix WANTLIB
- now scons doesn't rebuild mapnik during make fake ! Hint :
http://wiki.gentoo.org/wiki/SCons#Why_you_should_NOT_use_SCons_in_your_project
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.4 2011/09/16 10:02:37 espie Exp $
@


1.4
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2011/06/08 17:35:28 jasper Exp $
d5 2
a6 2
DISTNAME =	mapnik-0.7.1
REVISION =	1
d9 1
a9 1
SHARED_LIBS =	mapnik 0.0 #0.7
d13 1
a13 1
MAINTAINER =	Landry Breuil <gaston@@gcu.info>
d21 1
a21 2
MASTER_SITES =	${MASTER_SITE_BERLIOS:=mapnik/}

d25 1
a25 1

d37 1
a37 1
		boost_filesystem-mt boost_iostreams-mt tiff \
d40 6
a45 1
		c freetype m stdc++ xml2 z curl gdal agg pthread
d48 2
a51 1
			USE_CONFIG=no \
d53 1
a53 1
			INPUT_PLUGINS=raster,postgis,shape,gdal,ogr,osm
d56 5
a60 1
	${SUBST_CMD} ${WRKSRC}/src/SConscript
@


1.3
log
@bump after default python version switch
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2010/11/17 08:05:15 espie Exp $
d6 1
a6 1
REVISION =	0
@


1.2
log
@new depends
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2010/10/24 22:40:54 landry Exp $
d6 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2009/09/04 21:38:41 landry Exp $
d26 1
a26 1
BUILD_DEPENDS =	::graphics/py-cairo
d28 7
a34 7
LIB_DEPENDS =	::devel/boost \
		::graphics/cairomm \
		::graphics/agg \
		::devel/proj \
		::devel/libtool,-ltdl \
		::geo/gdal \
		::textproc/icu4c
@


1.1.1.1
log
@Import mapnik 0.7.1:

Mapnik is an OpenSource C++/Python toolkit for developing GIS
(Geographic Information Systems) applications. At the core is a C++
shared library providing algorithms/patterns for spatial data access
and visualization.
Essentially a collection of geographic objects (map, layer,
datasource, feature, geometry), the library doesn't rely on
"windowing systems" and can be deployed in any server environment.
It is intended to play fair in a multi-threaded environment and is
aimed primarily, but not exclusively, at web-based development.

ok ajacoutot@@
@
text
@@
