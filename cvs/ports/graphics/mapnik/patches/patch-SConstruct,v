head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.4
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.2
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	landry_20101025:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2016.09.04.16.46.57;	author landry;	state Exp;
branches;
next	1.6;
commitid	VoBhkVHsLvgbgjrq;

1.6
date	2015.09.18.20.07.09;	author landry;	state Exp;
branches;
next	1.5;
commitid	N263cXg5vtZIzI4i;

1.5
date	2015.07.01.08.45.19;	author jasper;	state Exp;
branches;
next	1.4;
commitid	sYFQHaeB2APMqCQ6;

1.4
date	2013.07.15.17.09.16;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2013.07.06.11.19.48;	author landry;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.03.08.48.26;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.24.22.41.09;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.10.24.22.41.09;	author landry;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to 3.0.10, still BROKEN because of missing symbol for
_ZN6icu_5713UnicodeStringC1EPKciEOS0_. Maybe switching icu to build with
a decent compiler would help, but that's not planned for now...
@
text
@$OpenBSD: patch-SConstruct,v 1.6 2015/09/18 20:07:09 landry Exp $
2nd chunk is needed for proper boost_thread detection
--- SConstruct.orig	Fri Feb 26 03:02:05 2016
+++ SConstruct	Sun Sep  4 17:29:08 2016
@@@@ -290,7 +290,7 @@@@ opts.AddVariables(
     ('CUSTOM_LDFLAGS', 'Custom linker flags, e.g. -L<lib dir> if you have libraries in a nonstandard directory <lib dir>', ''),
     EnumVariable('LINKING', "Set library format for libmapnik",'shared', ['shared','static']),
     EnumVariable('RUNTIME_LINK', "Set preference for linking dependencies",'shared', ['shared','static']),
-    EnumVariable('OPTIMIZATION','Set compiler optimization level','3', ['0','1','2','3','4','s']),
+    EnumVariable('OPTIMIZATION','Set compiler optimization level','2', ['0','1','2','3','4','s']),
     # Note: setting DEBUG=True will override any custom OPTIMIZATION level
     BoolVariable('DEBUG', 'Compile a debug version of Mapnik', 'False'),
     BoolVariable('DEBUG_UNDEFINED', 'Compile a version of Mapnik using clang/llvm undefined behavior asserts', 'False'),
@@@@ -1415,6 +1415,9 @@@@ if not preconfigured:
             # of attaching to cxxflags after configure
             if env['PLATFORM'] == 'SunOS':
                 env.Append(CXXFLAGS = '-pthreads')
+            if env['PLATFORM'] == 'OpenBSD':
+                env.Append(CXXFLAGS = '-pthread')
+
 
         # if requested, sort LIBPATH and CPPPATH before running CheckLibWithHeader tests
         if env['PRIORITIZE_LINKING']:
@


1.6
log
@Update to mapnik 3.0.5.

Switch to use gcc 4.9 since it now requires c++11. Thx ajacoutot for
the build-testing - note that it requires more than 4gb of memory to
build, and might not build on i386.
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 2
--- SConstruct.orig	Thu Sep 17 09:32:46 2015
+++ SConstruct	Fri Sep 18 11:57:29 2015
d14 1
a14 1
@@@@ -1398,6 +1398,9 @@@@ if not preconfigured:
@


1.5
log
@- lots of fixes from upstream to build with new boost/phoenix v3 (from upstream)
- bump boost dependency

ok landry@@ (MAINTAINER)
@
text
@d1 5
a5 4
$OpenBSD: patch-SConstruct,v 1.4 2013/07/15 17:09:16 landry Exp $
--- SConstruct.orig	Tue Jun  4 03:35:26 2013
+++ SConstruct	Mon Jun 29 09:15:50 2015
@@@@ -273,7 +273,7 @@@@ opts.AddVariables(
d14 1
a14 14
@@@@ -1122,6 +1122,12 @@@@ if not preconfigured:
         thread_suffix = ''
         env.Append(LIBS = 'pthread')
 
+    if env['PLATFORM'] == 'OpenBSD':
+        thread_suffix = '-mt'
+        env.Append(LIBS = 'pthread')
+        env.Append(LINKFLAGS = ['-lstdc++'])
+        env.Append(CPPDEFINES = '-DBOOST_SPIRIT_USE_PHOENIX_V3=1')
+
     # Solaris & Sun Studio settings (the `SUNCC` flag will only be
     # set if the `CXX` option begins with `CC`)
     SOLARIS = env['PLATFORM'] == 'SunOS'
@@@@ -1277,6 +1283,9 @@@@ if not preconfigured:
@


1.4
log
@Fix build on 32-bits archs. One of the python tests still does an abort
trap, but at least this packages now, tested on i386 & powerpc. To be
refined...
@
text
@d1 1
a1 1
$OpenBSD: patch-SConstruct,v 1.3 2013/07/06 11:19:48 landry Exp $
d3 1
a3 1
+++ SConstruct	Sat Jul 13 14:30:01 2013
d13 1
a13 1
@@@@ -1122,6 +1122,11 @@@@ if not preconfigured:
d21 1
d26 1
a26 1
@@@@ -1277,6 +1282,9 @@@@ if not preconfigured:
@


1.3
log
@Update to mapnik 2.2.0.

Fix depends, remove cairomm/libtool,-ltdl & agg. Mapnik uses its own
internal agg fork now. Fix WANTLIB while here, and ensure dependency on
png 1.6, otherwise build breaks horribly.
Force the dependency on scons 2.3.0, newer mapnik switched from CXXFLAGS
to CPPDEFINES, and with previous scons this produces broken build flags like
-DHAVE_JPEG-DMAPNIK_USE_PROJ4-DHAVE_PNG-DHAVE_TIFF-DBIGINT-DOPENBSD-DMAPNIK_THREADSAFE
in turn producing broken builds.
Add a warning about the 'dangerous' regress tests.
@
text
@d1 1
a1 1
$OpenBSD: patch-SConstruct,v 1.2 2012/05/03 08:48:26 landry Exp $
d3 10
a12 1
+++ SConstruct	Sun Jun 23 22:58:43 2013
@


1.2
log
@Update to mapnik 2.0.1

- enable sqlite input plugin
- enable regress tests
- fix WANTLIB
- now scons doesn't rebuild mapnik during make fake ! Hint :
http://wiki.gentoo.org/wiki/SCons#Why_you_should_NOT_use_SCons_in_your_project
@
text
@d1 4
a4 4
$OpenBSD$
--- SConstruct.orig	Tue Apr 10 00:56:48 2012
+++ SConstruct	Wed May  2 22:39:34 2012
@@@@ -1028,6 +1028,11 @@@@ if not preconfigured:
d16 7
a22 6
@@@@ -1145,6 +1150,8 @@@@ if not preconfigured:
         # of attaching to cxxflags after configure
         if env['PLATFORM'] == 'SunOS':
             env.Append(CXXFLAGS = '-pthreads')
+        if env['PLATFORM'] == 'OpenBSD':
+            env.Append(CXXFLAGS = '-pthread')
d24 2
a25 2
     # if requested, sort LIBPATH and CPPPATH before running CheckLibWithHeader tests
     if env['PRIORITIZE_LINKING']:
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
--- SConstruct.orig	Mon Mar 22 17:40:47 2010
+++ SConstruct	Sun Oct 24 12:14:27 2010
@@@@ -725,6 +726,11 @@@@ if not preconfigured:
d7 1
a7 1
     
d13 12
a24 3
     if env['SYSTEM_FONTS']:
         if not os.path.isdir(env['SYSTEM_FONTS']):
             color_print(1,'Warning: Directory specified for SYSTEM_FONTS does not exist!')
@


1.1.1.1
log
@Import mapnik 0.7.1:

Mapnik is an OpenSource C++/Python toolkit for developing GIS
(Geographic Information Systems) applications. At the core is a C++
shared library providing algorithms/patterns for spatial data access
and visualization.
Essentially a collection of geographic objects (map, layer,
datasource, feature, geometry), the library doesn't rely on
"windowing systems" and can be deployed in any server environment.
It is intended to play fair in a multi-threaded environment and is
aimed primarily, but not exclusively, at web-based development.

ok ajacoutot@@
@
text
@@
