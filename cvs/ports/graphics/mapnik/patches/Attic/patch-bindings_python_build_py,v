head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.07.06.11.19.48;	author landry;	state dead;
branches;
next	1.1;

1.1
date	2012.05.03.08.48.26;	author landry;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to mapnik 2.2.0.

Fix depends, remove cairomm/libtool,-ltdl & agg. Mapnik uses its own
internal agg fork now. Fix WANTLIB while here, and ensure dependency on
png 1.6, otherwise build breaks horribly.
Force the dependency on scons 2.3.0, newer mapnik switched from CXXFLAGS
to CPPDEFINES, and with previous scons this produces broken build flags like
-DHAVE_JPEG-DMAPNIK_USE_PROJ4-DHAVE_PNG-DHAVE_TIFF-DBIGINT-DOPENBSD-DMAPNIK_THREADSAFE
in turn producing broken builds.
Add a warning about the 'dangerous' regress tests.
@
text
@$OpenBSD: patch-bindings_python_build_py,v 1.1 2012/05/03 08:48:26 landry Exp $
paths.py ends up with an insane ../../../ garbage pointing to /local otherwise
--- bindings/python/build.py.orig	Thu May  3 00:00:31 2012
+++ bindings/python/build.py	Thu May  3 00:03:21 2012
@@@@ -143,10 +143,7 @@@@ paths += "__all__ = [mapniklibpath,inputpluginspath,fo
 if not os.path.exists('mapnik'):
     os.mkdir('mapnik')
 
-if hasattr(os.path,'relpath'): # python 2.6 and above
-    file('mapnik/paths.py','w').write(paths % (os.path.relpath(env['MAPNIK_LIB_DIR'],target_path)))
-else:
-    file('mapnik/paths.py','w').write(paths % (env['MAPNIK_LIB_DIR']))
+file('mapnik/paths.py','w').write(paths % (env['MAPNIK_LIB_DIR']))
 
 # force open perms temporarily so that `sudo scons install`
 # does not later break simple non-install non-sudo rebuild
@


1.1
log
@Update to mapnik 2.0.1

- enable sqlite input plugin
- enable regress tests
- fix WANTLIB
- now scons doesn't rebuild mapnik during make fake ! Hint :
http://wiki.gentoo.org/wiki/SCons#Why_you_should_NOT_use_SCons_in_your_project
@
text
@d1 1
a1 1
$OpenBSD$
@

