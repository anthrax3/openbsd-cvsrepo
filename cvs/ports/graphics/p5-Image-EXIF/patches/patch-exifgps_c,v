head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.1.1.0.40
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.38
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.36
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.34
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.32
	OPENBSD_5_0:1.1.1.1.0.30
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.28
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.26
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.24
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.22
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.20
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.18
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.16
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.14
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.12
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.10
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.8
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.6
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.4
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	robert_20040517:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.07.12.18.36.53;	author giovanni;	state Exp;
branches;
next	1.1;
commitid	eNuRJSBt7UFQwcER;

1.1
date	2004.05.17.05.09.52;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.17.05.09.52;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
Major update to 2.01
remove maintainer, his email bounces
@
text
@$OpenBSD: patch-exifgps_c,v 1.1.1.1 2004/05/17 05:09:52 robert Exp $
--- exifgps.c.orig	Fri May 11 19:03:30 2012
+++ exifgps.c	Sat Jul 12 19:34:34 2014
@@@@ -253,7 +253,7 @@@@ gpsprop(struct exifprop *prop, struct exiftags *t)
 
 		free(prop->str);
 		prop->str = NULL;
-		exifstralloc(&prop->str, 32);
+		exifstralloc(&prop->str, PROPSTR_SIZE);
 
 		/* Figure out the reference prefix. */
 
@@@@ -280,13 +280,13 @@@@ gpsprop(struct exifprop *prop, struct exiftags *t)
 		n = exif4byte(t->md.btiff + prop->value + i * 8, o);
 		d = exif4byte(t->md.btiff + prop->value + 4 + i * 8, o);
 
-		strcpy(fmt, "%s %.f%s ");
+		strlcpy(fmt, "%s %.f%s ", sizeof(fmt));
 		if (!n || !d)			/* Punt. */
 			deg = 0.0;
 		else {
 			deg = (double)n / (double)d;
 			if (d != 1)
-				sprintf(fmt, "%%s %%.%df%%s ",
+				snprintf(fmt, sizeof(fmt), "%%s %%.%df%%s ",
 				    (int)log10((double)d));
 		}
 
@@@@ -298,14 +298,14 @@@@ gpsprop(struct exifprop *prop, struct exiftags *t)
 
 		if (!n || !d) {			/* Punt. */
 			min = 0.0;
-			strcat(fmt, "%.f'");
+			strlcat(fmt, "%.f'", sizeof(fmt));
 		} else {
 			min = (double)n / (double)d;
 			if (d != 1) {
-				sprintf(buf, "%%.%df'", (int)log10((double)d));
-				strcat(fmt, buf);
+				snprintf(buf, sizeof(buf), "%%.%df'", (int)log10((double)d));
+				strlcat(fmt, buf, sizeof(fmt));
 			} else
-				strcat(fmt, "%.f'");
+				strlcat(fmt, "%.f'", sizeof(fmt));
 		}
 
 		/*
@@@@ -318,18 +318,18 @@@@ gpsprop(struct exifprop *prop, struct exiftags *t)
 		d = exif4byte(t->md.btiff + prop->value + 4 + i * 8, o);
 
 		if (!n || !d) {			/* Assume no seconds. */
-			snprintf(prop->str, 31, fmt, tmpprop && tmpprop->str ?
+			snprintf(prop->str, PROPSTR_SIZE, fmt, tmpprop && tmpprop->str ?
 			    tmpprop->str : "", deg, DEGREE, min);
 			break;
 		} else {
 			sec = (double)n / (double)d;
 			if (d != 1) {
-				sprintf(buf, " %%.%df", (int)log10((double)d));
-				strcat(fmt, buf);
+				snprintf(buf, sizeof(buf), " %%.%df", (int)log10((double)d));
+				strlcat(fmt, buf, sizeof(fmt));
 			} else
-				strcat(fmt, " %.f");
+				strlcat(fmt, " %.f", sizeof(fmt));
 		}
-		snprintf(prop->str, 31, fmt, tmpprop && tmpprop->str ?
+		snprintf(prop->str, PROPSTR_SIZE, fmt, tmpprop && tmpprop->str ?
 		    tmpprop->str : "", deg, DEGREE, min, sec);
 		break;
 
@@@@ -352,8 +352,7 @@@@ gpsprop(struct exifprop *prop, struct exiftags *t)
 
 		/* Should already have a 32-byte buffer from parsetag(). */
 
-		snprintf(prop->str, 31, "%.2f m", alt);
-		prop->str[31] = '\0';
+		snprintf(prop->str, PROPSTR_SIZE, "%.2f m", alt);
 		break;
 
 	/* Time. */
@@@@ -369,13 +368,13 @@@@ gpsprop(struct exifprop *prop, struct exiftags *t)
 			if (!d) break;
 
 			if (!i)
-				sprintf(fmt, "%%02.%df", (int)log10((double)d));
+				snprintf(fmt, sizeof(fmt), "%%02.%df", (int)log10((double)d));
 			else
-				sprintf(fmt, ":%%02.%df",
+				snprintf(fmt, sizeof(fmt), ":%%02.%df",
 				    (int)log10((double)d));
 
 			snprintf(buf, 8, fmt, (double)n / (double)d);
-			strcat(prop->str, buf);
+			strlcat(prop->str, buf, PROPSTR_SIZE);
 		}
 		break;
 	}
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- exifgps.c.orig	2004-05-03 11:15:53.000000000 -0700
+++ exifgps.c	2004-05-03 11:46:31.000000000 -0700
@@@@ -252,7 +252,7 @@@@ gpsprop(struct exifprop *prop, struct ex
d13 1
a13 1
@@@@ -279,13 +279,13 @@@@ gpsprop(struct exifprop *prop, struct ex
d29 1
a29 1
@@@@ -297,14 +297,14 @@@@ gpsprop(struct exifprop *prop, struct ex
d48 1
a48 1
@@@@ -317,18 +317,18 @@@@ gpsprop(struct exifprop *prop, struct ex
d72 1
a72 1
@@@@ -351,8 +351,7 @@@@ gpsprop(struct exifprop *prop, struct ex
d82 1
a82 1
@@@@ -368,13 +367,13 @@@@ gpsprop(struct exifprop *prop, struct ex
@


1.1.1.1
log
@Import of p5-Image-EXIF-0.98.6; from Dan Weeks <dan@@danimal.org>

The Image::Exif Perl extension allows the user to use the
libexif library to extract EXIF information from JPEG
files created by digital cameras.

ok naddy@@
@
text
@@
