head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.12
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.34
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.32
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.30
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.28
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.26
	OPENBSD_5_0:1.2.0.24
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.22
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.20
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.18
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.14
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.12
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.10
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.8
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.1.1.0.6
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.4
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	robert_20040517:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.07.12.18.36.53;	author giovanni;	state Exp;
branches;
next	1.2;
commitid	eNuRJSBt7UFQwcER;

1.2
date	2005.11.14.17.39.03;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.17.05.09.53;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.17.05.09.53;	author robert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
Major update to 2.01
remove maintainer, his email bounces
@
text
@$OpenBSD: patch-minolta_c,v 1.2 2005/11/14 17:39:03 pvalchev Exp $
--- minolta.c.orig	Fri May 11 19:03:30 2012
+++ minolta.c	Sat Jul 12 19:40:37 2014
@@@@ -484,10 +484,10 @@@@ minolta_cprop(struct exifprop *prop, unsigned char *of
 			aprop->str = valbuf;
 			valbuf = NULL;
 			if (aprop->value != 6)
-				snprintf(aprop->str, 15, "%+0.1f EV",
+				snprintf(aprop->str, 16, "%+0.1f EV",
 				    ((double)aprop->value - 6) / 3);
 			else
-				snprintf(aprop->str, 15, "Normal");
+				snprintf(aprop->str, 16, "Normal");
 			break;
 
 		/* Camera model (saved for 7Hi stupidity). */
@@@@ -501,7 +501,7 @@@@ minolta_cprop(struct exifprop *prop, unsigned char *of
 		case 18:
 			aprop->str = valbuf;
 			valbuf = NULL;
-			snprintf(aprop->str, 15, "%02f",
+			snprintf(aprop->str, 16, "%02f",
 			    (double)aprop->value / 256);
 			break;
 
@@@@ -512,7 +512,7 @@@@ minolta_cprop(struct exifprop *prop, unsigned char *of
 		case 30:
 			aprop->str = valbuf;
 			valbuf = NULL;
-			snprintf(aprop->str, 15, "%0.6f",
+			snprintf(aprop->str, 16, "%0.6f",
 			    (double)aprop->value / 256);
 			break;
 
@@@@ -523,7 +523,7 @@@@ minolta_cprop(struct exifprop *prop, unsigned char *of
 			valbuf = NULL;
 			v = (u_int16_t)(pow(2, ((double)aprop->value / 8) -
 			    1) * (double)3.125);
-			snprintf(aprop->str, 15, "%d", v);
+			snprintf(aprop->str, 16, "%d", v);
 			break;
 
 		/* Aperture and max aperture. */
@@@@ -533,7 +533,7 @@@@ minolta_cprop(struct exifprop *prop, unsigned char *of
 			aprop->str = valbuf;
 			valbuf = NULL;
 			d = pow(2, ((double)aprop->value / 16) - 0.5);
-			snprintf(aprop->str, 15, "%0.1f", d);
+			snprintf(aprop->str, 16, "%0.1f", d);
 			break;
 
 		/* Exposure time. */
@@@@ -546,9 +546,9 @@@@ minolta_cprop(struct exifprop *prop, unsigned char *of
 
 			/* 1 sec limit. */
 			if (aprop->value < 56)
-				snprintf(aprop->str, 15, "%0.1f", d);
+				snprintf(aprop->str, 16, "%0.1f", d);
 			else
-				snprintf(aprop->str, 15, "1/%d",
+				snprintf(aprop->str, 16, "1/%d",
 				    (unsigned int)d);
 #if 0
 			/*
@@@@ -568,9 +568,9 @@@@ minolta_cprop(struct exifprop *prop, unsigned char *of
 			aprop->str = valbuf;
 			valbuf = NULL;
 			if (!aprop->value)
-				strcpy(aprop->str, "Infinite");
+				strlcpy(aprop->str, "Infinite", 16);
 			else
-				snprintf(aprop->str, 15, "%.1f",
+				snprintf(aprop->str, 16, "%.1f",
 				    (float)(aprop->value / (float)1000));
 			aprop->value /= 100;
 			break;
@@@@ -587,7 +587,7 @@@@ minolta_cprop(struct exifprop *prop, unsigned char *of
 			aprop->str = valbuf;
 			valbuf = NULL;
 			byte4exif(aprop->value, buf, LITTLE);
-			snprintf(aprop->str, 15, "%02d/%02d/%04d",
+			snprintf(aprop->str, 16, "%02d/%02d/%04d",
 			    buf[0], buf[1], buf[3] << 8 | buf[2]);
 			break;
 
@@@@ -597,7 +597,7 @@@@ minolta_cprop(struct exifprop *prop, unsigned char *of
 			aprop->str = valbuf;
 			valbuf = NULL;
 			byte4exif(aprop->value, buf, LITTLE);
-			snprintf(aprop->str, 9, "%02d:%02d:%02d",
+			snprintf(aprop->str, 16, "%02d:%02d:%02d",
 			    buf[2], buf[1], buf[0]);
 			break;
 
@@@@ -631,9 +631,9 @@@@ minolta_cprop(struct exifprop *prop, unsigned char *of
 			valbuf = NULL;
 			aprop->value -= 3;
 			if (aprop->value)
-				snprintf(aprop->str, 15, "%+d", aprop->value);
+				snprintf(aprop->str, 16, "%+d", aprop->value);
 			else
-				strcpy(aprop->str, "Normal");
+				strlcpy(aprop->str, "Normal", 16);
 			break;
 
 		/* Scene. */
@@@@ -663,7 +663,7 @@@@ minolta_naval(struct exifprop *props, struct exiftag *
 	free(prop->str);
 	prop->str = NULL;
 	exifstralloc(&prop->str, strlen(na) + 1);
-	strcpy(prop->str, na);
+	strlcpy(prop->str, na, (strlen(na) + 1));
 	if (!(prop->lvl & ED_UNK))
 		prop->lvl = ED_VRB;
 }
@


1.2
log
@remove pointless strncmp pointed out by patrick <sidsrr@@yahoo.com>
@
text
@d1 4
a4 4
$OpenBSD: patch-minolta_c,v 1.1.1.1 2004/05/17 05:09:53 robert Exp $
--- minolta.c.orig	2004-05-03 11:35:20.000000000 -0700
+++ minolta.c	2004-05-03 11:56:00.000000000 -0700
@@@@ -484,10 +484,10 @@@@ minolta_cprop(struct exifprop *prop, uns
d17 1
a17 1
@@@@ -501,7 +501,7 @@@@ minolta_cprop(struct exifprop *prop, uns
d26 1
a26 1
@@@@ -512,7 +512,7 @@@@ minolta_cprop(struct exifprop *prop, uns
d35 1
a35 1
@@@@ -523,7 +523,7 @@@@ minolta_cprop(struct exifprop *prop, uns
d44 1
a44 1
@@@@ -533,7 +533,7 @@@@ minolta_cprop(struct exifprop *prop, uns
d53 1
a53 1
@@@@ -546,9 +546,9 @@@@ minolta_cprop(struct exifprop *prop, uns
d65 1
a65 1
@@@@ -568,9 +568,9 @@@@ minolta_cprop(struct exifprop *prop, uns
d77 1
a77 1
@@@@ -587,7 +587,7 @@@@ minolta_cprop(struct exifprop *prop, uns
d86 1
a86 1
@@@@ -597,7 +597,7 @@@@ minolta_cprop(struct exifprop *prop, uns
d95 1
a95 1
@@@@ -631,9 +631,9 @@@@ minolta_cprop(struct exifprop *prop, uns
d107 1
a107 1
@@@@ -663,7 +663,7 @@@@ minolta_naval(struct exifprop *props, st
d113 2
a114 1
 	prop->lvl = ED_BAD;
a115 1
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
a115 18
@@@@ -699,7 +699,7 @@@@ minolta_prop(struct exifprop *prop, stru
 
 		/* We recognize two types: MLT0 and mlt0. */
 
-		if (strcmp(prop->str, "MLT0") && strcmp(prop->str, "mlt0"))
+		if (strncmp(prop->str, "MLT0", 4) && strncmp(prop->str, "mlt0", 4))
 			exifwarn2("Minolta maker note version not supported",
 			    prop->str);
 		break;
@@@@ -793,7 +793,7 @@@@ minolta_ifd(u_int32_t offset, struct tif
 
 	/* DiMAGE E201. */
 
-	if (!strcmp((const char *)(md->btiff + offset), "+M")) {
+	if (!strncmp((const char *)(md->btiff + offset), "+M", 2)) {
 		exifwarn("Minolta maker note version not supported");
 		return (NULL);
 	}
@


1.1.1.1
log
@Import of p5-Image-EXIF-0.98.6; from Dan Weeks <dan@@danimal.org>

The Image::Exif Perl extension allows the user to use the
libexif library to extract EXIF information from JPEG
files created by digital cameras.

ok naddy@@
@
text
@@
