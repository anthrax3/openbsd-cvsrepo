head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.12
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.34
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.32
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.30
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.28
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.26
	OPENBSD_5_0:1.2.0.24
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.22
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.20
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.18
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.14
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.12
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.10
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.8
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.1.1.0.6
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.4
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	robert_20040517:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.07.12.18.36.53;	author giovanni;	state Exp;
branches;
next	1.2;
commitid	eNuRJSBt7UFQwcER;

1.2
date	2005.11.14.17.39.03;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.17.05.09.52;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.17.05.09.52;	author robert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
Major update to 2.01
remove maintainer, his email bounces
@
text
@$OpenBSD: patch-canon_c,v 1.2 2005/11/14 17:39:03 pvalchev Exp $
--- canon.c.orig	Fri May 11 19:03:30 2012
+++ canon.c	Sat Jul 12 19:43:53 2014
@@@@ -943,14 +943,14 @@@@ canon_prop01(struct exifprop *aprop, struct exifprop *
 	switch (aprop->tag) {
 	case 2:
 		aprop->lvl = v ? ED_IMG : ED_VRB;
-		exifstralloc(&aprop->str, 32);
-		snprintf(aprop->str, 31, "%d sec", v / 10);
+		exifstralloc(&aprop->str, PROPSTR_SIZE);
+		snprintf(aprop->str, PROPSTR_SIZE, "%d sec", v / 10);
 		break;
 	case 5:
 		/* Change "Single" to "Timed" if #2 > 0. */
 
 		if (!v && exif2byte(off + 2 * 2, t->mkrmd.order))
-			strcpy(aprop->str, "Timed");
+			strlcpy(aprop->str, "Timed", PROPSTR_SIZE);
 		break;
 	case 12:
 		aprop->lvl = v ? ED_IMG : ED_VRB;
@@@@ -961,8 +961,8 @@@@ canon_prop01(struct exifprop *aprop, struct exifprop *
 		 */
 
 		if (v == 3 && prop->count >= 37) {
-			exifstralloc(&aprop->str, 32);
-			snprintf(aprop->str, 31, "x%.1f", 2 *
+			exifstralloc(&aprop->str, PROPSTR_SIZE);
+			snprintf(aprop->str, PROPSTR_SIZE, "x%.1f", 2 *
 			    (float)exif2byte(off + 37 * 2, t->mkrmd.order) /
 			    (float)exif2byte(off + 36 * 2, t->mkrmd.order));
 		} else
@@@@ -1010,8 +1010,8 @@@@ canon_prop04(struct exifprop *aprop, struct exifprop *
 	switch (aprop->tag) {
 	case 6:
 		/* Calculate sensor speed (ISO units). */
-		exifstralloc(&aprop->str, 32);
-		snprintf(aprop->str, 31, "%d", (int)(exp(calcev(NULL, 0, v) *
+		exifstralloc(&aprop->str, PROPSTR_SIZE);
+		snprintf(aprop->str, PROPSTR_SIZE, "%d", (int)(exp(calcev(NULL, 0, v) *
 		    log(2)) * 100.0 / 32.0 + 0.5));
 		break;
 		
@@@@ -1087,8 +1087,8 @@@@ canon_propA0(struct exifprop *aprop, struct exifprop *
 
 	switch (aprop->tag) {
 	case 9:
-		exifstralloc(&aprop->str, 32);
-		snprintf(aprop->str, 31, "%d K", aprop->value);
+		exifstralloc(&aprop->str, PROPSTR_SIZE);
+		snprintf(aprop->str, PROPSTR_SIZE, "%d K", aprop->value);
 		break;
 	default:
 		return (FALSE);
@@@@ -1147,8 +1147,8 @@@@ canon_subval(struct exifprop *prop, struct exiftags *t
 		if (valfun && !valfun(aprop, prop, off, t)) {
 			if (aprop->lvl != ED_UNK)
 				continue;
-			exifstralloc(&aprop->str, 32);
-			snprintf(aprop->str, 31, "num %02d, val 0x%04X", i, v);
+			exifstralloc(&aprop->str, PROPSTR_SIZE);
+			snprintf(aprop->str, PROPSTR_SIZE, "num %02d, val 0x%04X", i, v);
 		}
 	}
 
@@@@ -1271,14 +1271,14 @@@@ canon_prop(struct exifprop *prop, struct exiftags *t)
 			tmpprop = childprop(prop);
 			tmpprop->name = "CanonLensSz";
 			tmpprop->descr = "Lens Size";
-			exifstralloc(&tmpprop->str, 32);
+			exifstralloc(&tmpprop->str, PROPSTR_SIZE);
 
 			if (flmin == flmax) {
-				snprintf(tmpprop->str, 31, "%.2f mm",
+				snprintf(tmpprop->str, PROPSTR_SIZE, "%.2f mm",
 			    	(float)flmax / (float)flunit);
 				tmpprop->lvl = ED_VRB;
 			} else {
-				snprintf(tmpprop->str, 31, "%.2f - %.2f mm",
+				snprintf(tmpprop->str, PROPSTR_SIZE, "%.2f - %.2f mm",
 				    (float)flmin / (float)flunit,
 				    (float)flmax / (float)flunit);
 				tmpprop->lvl = ED_PAS;
@


1.2
log
@remove pointless strncmp pointed out by patrick <sidsrr@@yahoo.com>
@
text
@d1 4
a4 4
$OpenBSD: patch-canon_c,v 1.1.1.1 2004/05/17 05:09:52 robert Exp $
--- canon.c.orig	2004-05-03 11:31:28.000000000 -0700
+++ canon.c	2004-05-03 11:56:30.000000000 -0700
@@@@ -775,14 +775,14 @@@@ canon_prop01(struct exifprop *aprop, str
d16 1
a16 1
 		if (!v && exif2byte(off + 2 * 2, o))
d22 1
a22 1
@@@@ -793,8 +793,8 @@@@ canon_prop01(struct exifprop *aprop, str
d30 2
a31 2
 			    (float)exif2byte(off + 37 * 2, o) /
 			    (float)exif2byte(off + 36 * 2, o));
d33 12
a44 1
@@@@ -857,8 +857,8 @@@@ canon_propA0(struct exifprop *aprop, str
d55 1
a55 1
@@@@ -917,8 +917,8 @@@@ canon_subval(struct exifprop *prop, stru
d66 1
a66 1
@@@@ -1040,14 +1040,14 @@@@ canon_prop(struct exifprop *prop, struct
a83 11
@@@@ -1075,8 +1075,8 @@@@ canon_prop(struct exifprop *prop, struct
 	/* Image number. */
 
 	case 0x0008:
-		exifstralloc(&prop->str, 32);
-		snprintf(prop->str, 31, "%03d-%04d", prop->value / 10000,
+		exifstralloc(&prop->str, PROPSTR_SIZE);
+		snprintf(prop->str, PROPSTR_SIZE, "%03d-%04d", prop->value / 10000,
 		    prop->value % 10000);
 		break;
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
a32 18
@@@@ -802,7 +802,7 @@@@ canon_prop01(struct exifprop *aprop, str
 		break;
 	case 16:
 		/* ISO overrides standard one if known. */
-		if (!strcmp(aprop->str, "Unknown")) {
+		if (!strncmp(aprop->str, "Unknown", 7)) {
 			aprop->lvl = ED_VRB;
 			break;
 		}
@@@@ -810,7 +810,7 @@@@ canon_prop01(struct exifprop *aprop, str
 		break;
 	case 17:
 		/* Maker meter mode overrides standard one if known. */
-		if (!strcmp(aprop->str, "Unknown")) {
+		if (!strncmp(aprop->str, "Unknown", 7)) {
 			aprop->lvl = ED_VRB;
 			break;
 		}
@


1.1.1.1
log
@Import of p5-Image-EXIF-0.98.6; from Dan Weeks <dan@@danimal.org>

The Image::Exif Perl extension allows the user to use the
libexif library to extract EXIF information from JPEG
files created by digital cameras.

ok naddy@@
@
text
@@
