head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	kili_20130718:1.1.1.1
	kili:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.12.20.11.11.30;	author kili;	state Exp;
branches;
next	1.3;
commitid	PKPgEkntxqwzof4x;

1.3
date	2015.09.19.08.17.55;	author kili;	state Exp;
branches;
next	1.2;
commitid	IXsSOXnhDDEUbL1b;

1.2
date	2014.11.22.20.54.41;	author kili;	state Exp;
branches;
next	1.1;
commitid	ytjxdfsW4WRxoIpf;

1.1
date	2013.07.18.21.03.01;	author kili;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.07.18.21.03.01;	author kili;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to hs-OpenGLRaw-2.6.0.0.
@
text
@SHA256 (ghc/OpenGLRaw-2.6.0.0.tar.gz) = 6WLBjrQNbh73wsOod7C+FMNdv1M2EtMwdNUBG9JmzA0=
SIZE (ghc/OpenGLRaw-2.6.0.0.tar.gz) = 789067
@


1.3
log
@Update to hs-OpenGLRaw-2.5.1.0.
@
text
@d1 2
a2 2
SHA256 (ghc/OpenGLRaw-2.5.1.0.tar.gz) = M6QQC9icdiZYJj3G5XJd0hR2HRbV1zkHrUKk1ysR2M0=
SIZE (ghc/OpenGLRaw-2.5.1.0.tar.gz) = 733570
@


1.2
log
@Update to OpenGLRaw-1.5.0.0.
@
text
@d1 2
a2 2
SHA256 (ghc/OpenGLRaw-1.5.0.0.tar.gz) = hSqlIpciJp1w2u08BLlence3AT79YuvE8oc6gXaLmhI=
SIZE (ghc/OpenGLRaw-1.5.0.0.tar.gz) = 102276
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
SHA256 (ghc/OpenGLRaw-1.3.0.0.tar.gz) = YijKmslnNQ/LarrCW4AnZgrYWZkUpg7w/RCRmm0s10U=
SIZE (ghc/OpenGLRaw-1.3.0.0.tar.gz) = 75328
@


1.1.1.1
log
@Import hs-OpenGLRaw-1.3.0.0:

OpenGLRaw is a raw Haskell binding for the OpenGL 3.2 graphics
system and lots of OpenGL extensions. It is basically a 1:1 mapping
of OpenGL's C API, intended as a basis for a nicer interface.
OpenGLRaw offers access to all necessary functions, tokens and types
plus a general facility for loading extension entries. The module
hierarchy closely mirrors the naming structure of the OpenGL
extensions, making it easy to find the right module to import.  All
API entries are loaded dynamically, so no special C header files
are needed for building this package. If an API entry is not found
at runtime, a userError is thrown.

ok sthen@@

(will be hooked to the build during the ghc update)

@
text
@@
