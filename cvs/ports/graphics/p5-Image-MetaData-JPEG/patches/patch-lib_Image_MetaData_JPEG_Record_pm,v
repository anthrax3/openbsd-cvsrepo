head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.12
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.10
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.6
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.07.12.19.20.06;	author giovanni;	state Exp;
branches;
next	;
commitid	K8uaPCOS5MM8QmBL;


desc
@@


1.1
log
@
Shut up a warning of an undefined var
@
text
@$OpenBSD$
--- lib/Image/MetaData/JPEG/Record.pm.orig	Sat Jul 12 20:49:37 2014
+++ lib/Image/MetaData/JPEG/Record.pm	Sat Jul 12 20:51:05 2014
@@@@ -100,8 +100,10 @@@@ sub new {
     # is set to $current and the length test will never fail).
     $expected = $count ? $count : $current if $expected == 0;
     # Throw an error if the supplied memory area is incorrectly sized
-    $this->die("Incorrect size (expected $expected, found $current)")
-	if ($current != $expected);
+    if (defined $current && defined $expected) {
+    	$this->die("Incorrect size (expected $expected, found $current)")
+		if ($current != $expected);
+    }
     # get a reference to the internal value list
     my $tokens = $this->{values};
     # read the type length (used only for integers and rationals)
@
