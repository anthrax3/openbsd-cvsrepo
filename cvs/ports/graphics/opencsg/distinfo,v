head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.18
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.16
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.1.1.0.8
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.6
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.4
	OPENBSD_5_0:1.1.1.1.0.2
	OPENBSD_5_0_BASE:1.1.1.1
	matthew_2011-Apr-29:1.1.1.1
	matthew:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.03.08.01.34.19;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.29.18.00.03;	author matthew;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.04.29.18.00.03;	author matthew;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update opencsg to 1.3.2.

From Amit Kulkarni.

ok sthen@@
@
text
@SHA256 (OpenCSG-1.3.2.tar.gz) = x5DJKZj3ETyzXN6CX4HFUydVkIoKP0PDw8jfIyazuSU=
SIZE (OpenCSG-1.3.2.tar.gz) = 744712
@


1.1
log
@Initial revision
@
text
@d1 2
a2 5
MD5 (OpenCSG-1.3.1.tar.gz) = bS+R5y68CvVeoqYGBZsaeQ==
RMD160 (OpenCSG-1.3.1.tar.gz) = PhIfdJKcVEby7+r4HyfW8mukZg8=
SHA1 (OpenCSG-1.3.1.tar.gz) = 2Uwi1OgkxrXmmpenJrUU7K+eRZY=
SHA256 (OpenCSG-1.3.1.tar.gz) = 0eTyQEFY4aQIRFAoiCbpT1KG+zV2aInPioT2vjsnoNk=
SIZE (OpenCSG-1.3.1.tar.gz) = 661106
@


1.1.1.1
log
@Add OpenCSG 1.3.1.

ok landry@@

OpenCSG is a library that does image-based CSG rendering using OpenGL.
OpenCSG is written in C++ and supports most modern graphics hardware.

CSG is short for Constructive Solid Geometry and denotes an approach
to model complex 3D-shapes using simpler ones. I.e., two shapes can be
combined by taking the union of them, by intersecting them, or by
subtracting one shape of the other. The most basic shapes, which are
not result of such a CSG operation, are called primitives. Primitives
must be solid, i.e., they must have a clearly defined interior and
exterior. By construction, a CSG shape is also solid then.

Image-based CSG rendering (also z-buffer CSG rendering) is a term that
denotes algorithms for rendering CSG shapes without an explicit
calculation of the geometric boundary of a CSG shape. Such algorithms
use frame-buffer settings of the graphics hardware, e.g., the depth
and stencil buffer, to compose CSG shapes. OpenCSG implements a
variety of those algorithms, namely the Goldfeather algorithm and the
SCS algorithm, both of them in several variants.

@
text
@@
