head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.2
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.7.0.4
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.4.0.10
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.12
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.1.1.0.2
	OPENBSD_5_0_BASE:1.1.1.1
	matthew_2011-Apr-29:1.1.1.1
	matthew:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2017.07.26.22.45.24;	author sthen;	state Exp;
branches;
next	1.9;
commitid	tD4MFrpYYDDL2UFT;

1.9
date	2017.07.16.19.18.57;	author espie;	state Exp;
branches;
next	1.8;
commitid	tt0GhWK5c4uf9ILG;

1.8
date	2017.04.10.11.46.21;	author sthen;	state Exp;
branches;
next	1.7;
commitid	BLsh88fJB8thZTwY;

1.7
date	2016.03.26.20.37.35;	author zhuk;	state Exp;
branches;
next	1.6;
commitid	OEdThNVtQpfieDxV;

1.6
date	2016.03.18.23.12.17;	author naddy;	state Exp;
branches;
next	1.5;
commitid	KZAl4KEiw6a3Jixw;

1.5
date	2016.03.07.11.57.55;	author zhuk;	state Exp;
branches;
next	1.4;
commitid	qdnahvNkVK8G9nvH;

1.4
date	2013.03.11.11.10.54;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2013.03.08.01.34.19;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2011.09.16.10.02.37;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.29.18.00.03;	author matthew;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.04.29.18.00.03;	author matthew;	state Exp;
branches;
next	;


desc
@@


1.10
log
@bump LIBCXX/LIBECXX/COMPILER_LIBCXX ports.
@
text
@# $OpenBSD: Makefile,v 1.9 2017/07/16 19:18:57 espie Exp $

COMMENT =		constructive solid geometry rendering library

V =			1.3.2
DISTNAME =		OpenCSG-${V}
PKGNAME =		opencsg-${V}
REVISION =		0

SHARED_LIBS =		opencsg		0.0

CATEGORIES =		graphics

HOMEPAGE =		http://www.opencsg.org/

# GPLv2 with CGAL exception
PERMIT_PACKAGE_CDROM =	Yes

WANTLIB +=		GL GLEW lib/qt4/QtGui m ${COMPILER_LIBCXX} pthread
WANTLIB +=		ICE SM X11 Xext Xi Xinerama Xrender fontconfig freetype

MODULES =		devel/qmake x11/qt4
SEPARATE_BUILD =	No

LIB_DEPENDS =		graphics/glew

MASTER_SITES =		http://www.opencsg.org/

WRKSRC =		${WRKDIST}/src

pre-configure:
	${SUBST_CMD} ${WRKSRC}/src.pro

do-install:
	${INSTALL_DATA} ${WRKDIST}/lib/libopencsg.so.${LIBopencsg_VERSION} \
		${PREFIX}/lib
	${INSTALL_DATA} ${WRKDIST}/include/opencsg.h ${PREFIX}/include

.include <bsd.port.mk>
@


1.9
log
@use COMPILER_LIBCXX where applicable
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2017/04/10 11:46:21 sthen Exp $
d8 1
@


1.8
log
@use LIBCXX
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2016/03/26 20:37:35 zhuk Exp $
d18 1
a18 1
WANTLIB +=		GL GLEW lib/qt4/QtGui m ${LIBCXX} pthread
@


1.7
log
@Zap more lines from qmake-based ports by moving them from
the "MODULES=x11/qtX + CONFIGURE_STYLE=qmake" logic to
the "MODULES=devel/qmake x11/qtX" logic.

Discussed with espie@@ a few weeks ago.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2016/03/18 23:12:17 naddy Exp $
d18 1
a18 1
WANTLIB +=		GL GLEW lib/qt4/QtGui m stdc++ pthread
@


1.6
log
@remove SHARED_ONLY from ports that only use modules that neither set nor
read this variable
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2016/03/07 11:57:55 zhuk Exp $
d21 1
a21 2
MODULES =		x11/qt4
CONFIGURE_STYLE =	qmake
@


1.5
log
@Convert to MODQMAKE, +2 Makefile lines due to need to keep SUBST_CMD call.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/03/11 11:10:54 espie Exp $
a8 1
SHARED_ONLY =		Yes
@


1.4
log
@PERMIT_* / REGRESS -> TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/03/08 01:34:19 brad Exp $
d23 3
d32 1
a32 1
do-configure:
a33 1
	cd ${WRKSRC} && qmake4 src.pro
@


1.3
log
@Update opencsg to 1.3.2.

From Amit Kulkarni.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2011/09/16 10:02:37 espie Exp $
a17 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM =Yes
PERMIT_DISTFILES_FTP =	Yes
@


1.2
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2011/04/29 18:00:03 matthew Exp $
d3 1
a3 1
COMMENT =		Constructive Solid Geometry rendering library
d5 1
a5 1
V =			1.3.1
a6 1
REVISION=		0
d22 2
a23 1
WANTLIB =		GL GLEW GLU lib/qt4/QtGui m stdc++
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d7 1
@


1.1.1.1
log
@Add OpenCSG 1.3.1.

ok landry@@

OpenCSG is a library that does image-based CSG rendering using OpenGL.
OpenCSG is written in C++ and supports most modern graphics hardware.

CSG is short for Constructive Solid Geometry and denotes an approach
to model complex 3D-shapes using simpler ones. I.e., two shapes can be
combined by taking the union of them, by intersecting them, or by
subtracting one shape of the other. The most basic shapes, which are
not result of such a CSG operation, are called primitives. Primitives
must be solid, i.e., they must have a clearly defined interior and
exterior. By construction, a CSG shape is also solid then.

Image-based CSG rendering (also z-buffer CSG rendering) is a term that
denotes algorithms for rendering CSG shapes without an explicit
calculation of the geometric boundary of a CSG shape. Such algorithms
use frame-buffer settings of the graphics hardware, e.g., the depth
and stencil buffer, to compose CSG shapes. OpenCSG implements a
variety of those algorithms, namely the Goldfeather algorithm and the
SCS algorithm, both of them in several variants.

@
text
@@
