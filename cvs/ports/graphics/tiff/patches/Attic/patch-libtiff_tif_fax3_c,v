head	1.8;
access;
symbols
	OPENBSD_4_7:1.7.0.6
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_4:1.1.0.8
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2010.06.30.17.10.08;	author naddy;	state dead;
branches;
next	1.7;

1.7
date	2008.10.25.09.39.29;	author naddy;	state Exp;
branches
	1.7.6.1;
next	1.6;

1.6
date	2005.06.18.21.24.40;	author naddy;	state dead;
branches;
next	1.5;

1.5
date	2005.03.27.03.57.26;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.20.20.37.48;	author brad;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2004.05.18.23.35.35;	author brad;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2003.12.23.23.45.41;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2002.01.19.09.34.42;	author brad;	state Exp;
branches;
next	;

1.3.2.1
date	2004.05.18.23.38.50;	author brad;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2005.03.31.22.02.44;	author sturm;	state Exp;
branches;
next	;

1.3.4.1
date	2005.03.31.22.08.46;	author sturm;	state Exp;
branches;
next	;

1.4.2.1
date	2005.05.25.05.37.32;	author robert;	state Exp;
branches;
next	;

1.7.6.1
date	2010.07.26.00.01.33;	author william;	state Exp;
branches;
next	;


desc
@@


1.8
log
@SECURITY:
Update to 3.9.4, which includes fixes for CVE-2009-2347 and CVE-2010-1411.
@
text
@$OpenBSD: patch-libtiff_tif_fax3_c,v 1.7 2008/10/25 09:39:29 naddy Exp $

CVE-2006-3464,3465

--- libtiff/tif_fax3.c.orig	Tue Mar 21 17:42:50 2006
+++ libtiff/tif_fax3.c	Fri Oct 24 18:54:16 2008
@@@@ -1136,6 +1136,7 @@@@ static int
 Fax3VSetField(TIFF* tif, ttag_t tag, va_list ap)
 {
 	Fax3BaseState* sp = Fax3State(tif);
+	const TIFFFieldInfo* fip;
 
 	assert(sp != 0);
 	assert(sp->vsetparent != 0);
@@@@ -1181,7 +1182,13 @@@@ Fax3VSetField(TIFF* tif, ttag_t tag, va_list ap)
 	default:
 		return (*sp->vsetparent)(tif, tag, ap);
 	}
-	TIFFSetFieldBit(tif, _TIFFFieldWithTag(tif, tag)->field_bit);
+	
+	if ((fip = _TIFFFieldWithTag(tif, tag))) {
+		TIFFSetFieldBit(tif, fip->field_bit);
+	} else {
+		return (0);
+	}
+
 	tif->tif_flags |= TIFF_DIRTYDIRECT;
 	return (1);
 }
@


1.7
log
@SECURITY fixes for CVE-2006-2656 and CVE-2006-3459 through 3465.
Man page fixes.

Mostly via FreeBSD.  Approving noises from bernd@@ and jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.7.6.1
log
@SECURITY FIX

Resolves CVE-2010-1411
merged from upstream via redhat

reads ok to stephan@@, ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-libtiff_tif_fax3_c,v 1.7 2008/10/25 09:39:29 naddy Exp $
a3 1
CVE-2010-1411
d5 7
a11 5
--- libtiff/tif_fax3.c.orig	Thu Jul 22 22:24:18 2010
+++ libtiff/tif_fax3.c	Thu Jul 22 23:54:16 2010
@@@@ -491,10 +491,26 @@@@ Fax3SetupState(TIFF* tif)
 	    td->td_compression == COMPRESSION_CCITTFAX4
 	);
d13 12
a24 13
-	nruns = needsRefLine ? 2*TIFFroundup(rowpixels,32) : rowpixels;
-
-	dsp->runs = (uint32*) _TIFFCheckMalloc(tif, 2*nruns+3, sizeof (uint32),
-					  "for Group 3/4 run arrays");
+	/*
+	  Assure that allocation computations do not overflow.
+  
+	  TIFFroundup and TIFFSafeMultiply return zero on integer overflow
+	*/
+	dsp->runs=(uint32*) NULL;
+	nruns = TIFFroundup(rowpixels,32);
+	if (needsRefLine) {
+		nruns = TIFFSafeMultiply(uint32,nruns,2);
d26 4
a29 13
+	if ((nruns == 0) || (TIFFSafeMultiply(uint32,nruns,2) == 0)) {
+		TIFFErrorExt(tif->tif_clientdata, tif->tif_name,
+			     "Row pixels integer overflow (rowpixels %u)",
+			     rowpixels);
+               return (0);
+	}
+	dsp->runs = (uint32*) _TIFFCheckMalloc(tif,
+					       TIFFSafeMultiply(uint32,nruns,2),
+					       sizeof (uint32),
+					       "for Group 3/4 run arrays");
 	if (dsp->runs == NULL)
 		return (0);
 	dsp->curruns = dsp->runs;
@


1.6
log
@update to 3.7.2 which integrates the numerous security patches
brad@@ drops maintainership
@
text
@d1 11
a11 6
$OpenBSD: patch-libtiff_tif_fax3_c,v 1.5 2005/03/27 03:57:26 brad Exp $
--- libtiff/tif_fax3.c.orig	Thu Nov  6 03:22:13 2003
+++ libtiff/tif_fax3.c	Sat Mar 26 22:46:19 2005
@@@@ -437,6 +437,21 @@@@ _TIFFFax3fillruns(u_char* buf, uint32* r
 #undef	ZERO
 #undef	FILL
d13 7
a19 11
+static char *
+CheckMalloc(TIFF* tif, size_t nmemb, size_t elem_size, const char* what)
+{
+	char	*cp = NULL;
+	tsize_t	bytes = nmemb * elem_size;
+
+	if (nmemb && elem_size && bytes / elem_size == nmemb)
+		cp = (char*) _TIFFmalloc(bytes);
+
+	if (cp == NULL)
+		TIFFError(tif->tif_name, "No space %s", what);
d21 5
a25 2
+	return (cp);
+}
d27 3
a29 39
 /*
  * Setup G3/G4-related compression/decompression state
  * before data is processed.  This routine is called once
@@@@ -451,7 +466,7 @@@@ Fax3SetupState(TIFF* tif)
 	Fax3BaseState* sp = Fax3State(tif);
 	long rowbytes, rowpixels;
 	int needsRefLine;
-	Fax3CodecState* dsp = DecoderState(tif);
+	Fax3CodecState* dsp = (Fax3CodecState*) DecoderState(tif);
 	uint32 nruns;
 
 	if (td->td_bitspersample != 1) {
@@@@ -481,13 +496,10 @@@@ Fax3SetupState(TIFF* tif)
 
 	nruns = needsRefLine ? 2*TIFFroundup(rowpixels,32) : rowpixels;
 
-	dsp->runs = (uint32*) _TIFFmalloc((2*nruns+3)*sizeof (uint32));
-	if (dsp->runs == NULL) {
-		TIFFError("Fax3SetupState",
-		    "%s: No space for Group 3/4 run arrays",
-		    tif->tif_name);
+	dsp->runs = (uint32*) CheckMalloc(tif, 2*nruns+3, sizeof (uint32),
+					  "for Group 3/4 run arrays");
+	if (dsp->runs == NULL)
 		return (0);
-	}
 	dsp->curruns = dsp->runs;
 	if (needsRefLine)
 		dsp->refruns = dsp->runs + (nruns>>1);
@@@@ -1284,7 +1296,8 @@@@ InitCCITTFax3(TIFF* tif)
 	sp->recvparams = 0;
 	sp->subaddress = NULL;
 
-	tif->tif_flags |= TIFF_NOBITREV;	/* decoder does bit reversal */
+	if (sp->rw_mode == O_RDONLY) /* FIXME: improve for in place update */
+		tif->tif_flags |= TIFF_NOBITREV; /* decoder does bit reversal */
 	DecoderState(tif)->runs = NULL;
 	TIFFSetField(tif, TIFFTAG_FAXFILLFUNC, _TIFFFax3fillruns);
 	EncoderState(tif)->refline = NULL;
@


1.5
log
@Integer overflow in tif_dirread.c and tif_fax3.c for libtiff allows remote
attackers to execute arbitrary code via a TIFF file containing a TIFF_ASCII
or TIFF_UNDEFINED directory entry with a -1 entry count, which leads to a
heap-based buffer overflow.

CAN-2004-1308
@
text
@d1 1
a1 1
$OpenBSD: patch-libtiff_tif_fax3_c,v 1.4 2004/10/20 20:37:48 brad Exp $
@


1.4
log
@Fix memory allocation problems and numerous integer overflows.

CAN-2004-0803, CAN-2004-0804, CAN-2004-0886
@
text
@d1 1
a1 1
$OpenBSD: patch-libtiff_tif_fax3_c,v 1.3 2004/05/18 23:35:35 brad Exp $
d3 1
a3 1
+++ libtiff/tif_fax3.c	Wed Oct 20 15:05:53 2004
d14 1
a14 1
+	if (elem_size && bytes / elem_size == nmemb)
@


1.4.2.1
log
@SECURITY:
fix multiple vulnerabilities; bump PKGNAME
http://www.vuxml.org/openbsd/d045aeb6-9ea6-11d9-9623-00065bd5b0b6.html

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ libtiff/tif_fax3.c	Sat Mar 26 22:46:19 2005
d14 1
a14 1
+	if (nmemb && elem_size && bytes / elem_size == nmemb)
@


1.3
log
@Add a patch to fix libtiff 3.6.1 with HylaFAX.

http://bugs.hylafax.org/bugzilla/show_bug.cgi?id=500
http://bugzilla.remotesensing.org/show_bug.cgi?id=483

Thanks to Uwe Dippel <udippel at uniten dot edu dot my> for
bringing this to my attention.
@
text
@d1 26
a26 4
$OpenBSD$
--- libtiff/tif_fax3.c.orig	2004-05-18 18:32:41.000000000 -0400
+++ libtiff/tif_fax3.c	2004-05-18 18:41:06.000000000 -0400
@@@@ -451,7 +451,7 @@@@ Fax3SetupState(TIFF* tif)
d35 18
a52 1
@@@@ -1284,7 +1284,8 @@@@ InitCCITTFax3(TIFF* tif)
@


1.3.4.1
log
@cumulative update with patches of recent months

MFC:
fix an issue with not being able to open some valid TIFF files.

http://www.sigmasoft.com/~openbsd/archive/openbsd-ports/200503/msg00090.html

From: Bernd Ahlers <b dot ahlers at ba-net dot org>
---
Integer overflow in tif_dirread.c and tif_fax3.c for libtiff allows remote
attackers to execute arbitrary code via a TIFF file containing a TIFF_ASCII
or TIFF_UNDEFINED directory entry with a -1 entry count, which leads to a
heap-based buffer overflow.

CAN-2004-1308
---
fix an issue with alpha channels.

http://bugzilla.remotesensing.org/show_bug.cgi?id=718
---
fix MASTER_SITES; From: Bernd Ahlers <b dot ahlers at ba-net dot org>
---
Fix memory allocation problems and numerous integer overflows.

CAN-2004-0803, CAN-2004-0804, CAN-2004-0886

ok brad@@
@
text
@d1 4
a4 26
$OpenBSD: patch-libtiff_tif_fax3_c,v 1.5 2005/03/27 03:57:26 brad Exp $
--- libtiff/tif_fax3.c.orig	Thu Nov  6 03:22:13 2003
+++ libtiff/tif_fax3.c	Sat Mar 26 22:46:19 2005
@@@@ -437,6 +437,21 @@@@ _TIFFFax3fillruns(u_char* buf, uint32* r
 #undef	ZERO
 #undef	FILL
 
+static char *
+CheckMalloc(TIFF* tif, size_t nmemb, size_t elem_size, const char* what)
+{
+	char	*cp = NULL;
+	tsize_t	bytes = nmemb * elem_size;
+
+	if (nmemb && elem_size && bytes / elem_size == nmemb)
+		cp = (char*) _TIFFmalloc(bytes);
+
+	if (cp == NULL)
+		TIFFError(tif->tif_name, "No space %s", what);
+	
+	return (cp);
+}
+
 /*
  * Setup G3/G4-related compression/decompression state
  * before data is processed.  This routine is called once
@@@@ -451,7 +466,7 @@@@ Fax3SetupState(TIFF* tif)
d13 1
a13 18
@@@@ -481,13 +496,10 @@@@ Fax3SetupState(TIFF* tif)
 
 	nruns = needsRefLine ? 2*TIFFroundup(rowpixels,32) : rowpixels;
 
-	dsp->runs = (uint32*) _TIFFmalloc((2*nruns+3)*sizeof (uint32));
-	if (dsp->runs == NULL) {
-		TIFFError("Fax3SetupState",
-		    "%s: No space for Group 3/4 run arrays",
-		    tif->tif_name);
+	dsp->runs = (uint32*) CheckMalloc(tif, 2*nruns+3, sizeof (uint32),
+					  "for Group 3/4 run arrays");
+	if (dsp->runs == NULL)
 		return (0);
-	}
 	dsp->curruns = dsp->runs;
 	if (needsRefLine)
 		dsp->refruns = dsp->runs + (nruns>>1);
@@@@ -1284,7 +1296,8 @@@@ InitCCITTFax3(TIFF* tif)
@


1.3.2.1
log
@Add a patch to fix libtiff 3.6.1 with HylaFAX.

http://bugs.hylafax.org/bugzilla/show_bug.cgi?id=500
http://bugzilla.remotesensing.org/show_bug.cgi?id=483

Thanks to Uwe Dippel <udippel at uniten dot edu dot my> for
bringing this to my attention.
@
text
@d1 1
a1 1
$OpenBSD: patch-libtiff_tif_fax3_c,v 1.3 2004/05/18 23:35:35 brad Exp $
@


1.3.2.2
log
@cumulative update with patches of recent months

MFC:
fix an issue with not being able to open some valid TIFF files.

http://www.sigmasoft.com/~openbsd/archive/openbsd-ports/200503/msg00090.html

From: Bernd Ahlers <b dot ahlers at ba-net dot org>
---
Integer overflow in tif_dirread.c and tif_fax3.c for libtiff allows remote
attackers to execute arbitrary code via a TIFF file containing a TIFF_ASCII
or TIFF_UNDEFINED directory entry with a -1 entry count, which leads to a
heap-based buffer overflow.

CAN-2004-1308
---
fix an issue with alpha channels.

http://bugzilla.remotesensing.org/show_bug.cgi?id=718
---
fix MASTER_SITES; From: Bernd Ahlers <b dot ahlers at ba-net dot org>
---
Fix memory allocation problems and numerous integer overflows.

CAN-2004-0803, CAN-2004-0804, CAN-2004-0886

ok brad@@
@
text
@d1 4
a4 26
$OpenBSD: patch-libtiff_tif_fax3_c,v 1.5 2005/03/27 03:57:26 brad Exp $
--- libtiff/tif_fax3.c.orig	Thu Nov  6 03:22:13 2003
+++ libtiff/tif_fax3.c	Sat Mar 26 22:46:19 2005
@@@@ -437,6 +437,21 @@@@ _TIFFFax3fillruns(u_char* buf, uint32* r
 #undef	ZERO
 #undef	FILL
 
+static char *
+CheckMalloc(TIFF* tif, size_t nmemb, size_t elem_size, const char* what)
+{
+	char	*cp = NULL;
+	tsize_t	bytes = nmemb * elem_size;
+
+	if (nmemb && elem_size && bytes / elem_size == nmemb)
+		cp = (char*) _TIFFmalloc(bytes);
+
+	if (cp == NULL)
+		TIFFError(tif->tif_name, "No space %s", what);
+	
+	return (cp);
+}
+
 /*
  * Setup G3/G4-related compression/decompression state
  * before data is processed.  This routine is called once
@@@@ -451,7 +466,7 @@@@ Fax3SetupState(TIFF* tif)
d13 1
a13 18
@@@@ -481,13 +496,10 @@@@ Fax3SetupState(TIFF* tif)
 
 	nruns = needsRefLine ? 2*TIFFroundup(rowpixels,32) : rowpixels;
 
-	dsp->runs = (uint32*) _TIFFmalloc((2*nruns+3)*sizeof (uint32));
-	if (dsp->runs == NULL) {
-		TIFFError("Fax3SetupState",
-		    "%s: No space for Group 3/4 run arrays",
-		    tif->tif_name);
+	dsp->runs = (uint32*) CheckMalloc(tif, 2*nruns+3, sizeof (uint32),
+					  "for Group 3/4 run arrays");
+	if (dsp->runs == NULL)
 		return (0);
-	}
 	dsp->curruns = dsp->runs;
 	if (needsRefLine)
 		dsp->refruns = dsp->runs + (nruns>>1);
@@@@ -1284,7 +1296,8 @@@@ InitCCITTFax3(TIFF* tif)
@


1.2
log
@upgrade to libtiff 3.6.0
@
text
@d1 22
a22 12
$OpenBSD: patch-libtiff_tif_fax3_c,v 1.1 2002/01/19 09:34:42 brad Exp $
--- libtiff/tif_fax3.c.orig	Tue Dec  4 10:20:46 2001
+++ libtiff/tif_fax3.c	Tue Dec  4 10:21:16 2001
@@@@ -315,7 +315,7 @@@@ Fax3Decode2D(TIFF* tif, tidata_t buf, ts
  * this is <8 bytes.  We optimize the code here to reflect the
  * machine characteristics.
  */
-#if defined(__alpha) || _MIPS_SZLONG == 64 || defined(__LP64__)
+#if defined(__alpha) || _MIPS_SZLONG == 64 || defined(__LP64__) || defined(__arch64__)
 #define FILL(n, cp)							    \
     switch (n) {							    \
     case 15:(cp)[14] = 0xff; case 14:(cp)[13] = 0xff; case 13: (cp)[12] = 0xff;\
@


1.1
log
@upgrade to libtiff 3.5.7
@
text
@d1 1
a1 1
$OpenBSD$
@

