head	1.5;
access;
symbols
	OPENBSD_5_1:1.3.0.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2012.06.27.14.27.02;	author jasper;	state dead;
branches;
next	1.4;

1.4
date	2012.04.14.15.09.56;	author naddy;	state Exp;
branches;
next	1.3;

1.3
date	2012.04.09.17.35.38;	author naddy;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.06.18.21.24.40;	author naddy;	state dead;
branches
	1.2.2.1;
next	1.1;

1.1
date	2004.10.20.20.37.48;	author brad;	state Exp;
branches
	1.1.2.1
	1.1.4.1
	1.1.6.1;
next	;

1.1.2.1
date	2005.05.25.05.37.32;	author robert;	state Exp;
branches;
next	;

1.1.4.1
date	2005.03.31.22.02.44;	author sturm;	state Exp;
branches;
next	;

1.1.6.1
date	2005.03.31.22.08.47;	author sturm;	state Exp;
branches;
next	;

1.2.2.1
date	2010.07.26.00.01.33;	author william;	state Exp;
branches;
next	;

1.3.2.1
date	2012.04.13.07.18.06;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update tiff to 4.0.2, includes a fix for CVE-2012-2113,
LibTIFF "tiff2pdf" Integer Overflow Vulnerability
@
text
@$OpenBSD: patch-libtiff_tiffiop_h,v 1.4 2012/04/14 15:09:56 naddy Exp $

CVE-2012-1173: integer overflow

--- libtiff/tiffiop.h.orig	Wed Apr 11 18:56:30 2012
+++ libtiff/tiffiop.h	Wed Apr 11 18:56:58 2012
@@@@ -250,7 +250,7 @@@@ struct tiff {
 #define TIFFroundup_64(x, y) (TIFFhowmany_64(x,y)*(y))
 
 /* Safe multiply which returns zero if there is an integer overflow */
-#define TIFFSafeMultiply(t,v,m) ((((t)m != (t)0) && (((t)((v*m)/m)) == (t)v)) ? (t)(v*m) : (t)0)
+#define TIFFSafeMultiply(t,v,m) ((((t)(m) != (t)0) && (((t)(((v)*(m))/(m))) == (t)(v))) ? (t)((v)*(m)) : (t)0)
 
 #define TIFFmax(A,B) ((A)>(B)?(A):(B))
 #define TIFFmin(A,B) ((A)<(B)?(A):(B))
@


1.4
log
@Major update to 4.0.1, which adds BigTIFF support and includes some API
changes.  Also include upstream fix for CVE-2012-1173.
@
text
@d1 1
a1 1
$OpenBSD: patch-libtiff_tiffiop_h,v 1.3 2012/04/09 17:35:38 naddy Exp $
@


1.3
log
@SECURITY fix for CVE-2012-1173 (integer overflow).
From upstream, via Sebastien Marie.
http://bugzilla.maptools.org/show_bug.cgi?id=2369
@
text
@d1 1
a1 1
$OpenBSD$
d5 4
a8 4
--- libtiff/tiffiop.h.orig	Mon Mar 28 15:43:43 2011
+++ libtiff/tiffiop.h	Mon Apr  9 19:26:57 2012
@@@@ -246,7 +246,7 @@@@ struct tiff {
 #define	TIFFroundup(x, y) (TIFFhowmany(x,y)*(y))
@


1.3.2.1
log
@Security fix for CVE-2012-1173
@
text
@d1 1
a1 1
$OpenBSD: patch-libtiff_tiffiop_h,v 1.3 2012/04/09 17:35:38 naddy Exp $
d6 1
a6 1
+++ libtiff/tiffiop.h	Fri Apr 13 09:15:30 2012
@


1.2
log
@update to 3.7.2 which integrates the numerous security patches
brad@@ drops maintainership
@
text
@d1 8
a8 5
$OpenBSD: patch-libtiff_tiffiop_h,v 1.1 2004/10/20 20:37:48 brad Exp $
--- libtiff/tiffiop.h.orig	Fri Dec 26 06:56:25 2003
+++ libtiff/tiffiop.h	Wed Oct 20 14:38:11 2004
@@@@ -198,8 +198,9 @@@@ struct tiff {
 #endif
d10 3
a12 6
 /* NB: the uint32 casts are to silence certain ANSI-C compilers */
-#define	TIFFhowmany(x, y) ((((uint32)(x))+(((uint32)(y))-1))/((uint32)(y)))
-#define	TIFFroundup(x, y) (TIFFhowmany(x,y)*((uint32)(y)))
+#define TIFFhowmany(x, y) ((((uint32)(x))+(((uint32)(y))-1))/((uint32)(y)))
+#define TIFFhowmany8(x) (((x)&0x07)?((uint32)(x)>>3)+1:(uint32)(x)>>3)
+#define	TIFFroundup(x, y) (TIFFhowmany(x,y)*(y))
@


1.2.2.1
log
@SECURITY FIX

Resolves CVE-2010-1411
merged from upstream via redhat

reads ok to stephan@@, ok naddy@@
@
text
@d1 4
a4 8
$OpenBSD$

CVE-2010-1411


--- libtiff/tiffiop.h.orig	Tue Mar 21 11:42:50 2006
+++ libtiff/tiffiop.h	Thu Jul 22 23:50:10 2010
@@@@ -222,9 +222,14 @@@@ struct tiff {
d8 5
a12 9
-#define TIFFhowmany(x, y) ((((uint32)(x))+(((uint32)(y))-1))/((uint32)(y)))
+#define TIFFhowmany(x, y) (((uint32)x < (0xffffffff - (uint32)(y-1))) ?	\
+			   ((((uint32)(x))+(((uint32)(y))-1))/((uint32)(y))) : \
+			   0U)
 #define TIFFhowmany8(x) (((x)&0x07)?((uint32)(x)>>3)+1:(uint32)(x)>>3)
 #define	TIFFroundup(x, y) (TIFFhowmany(x,y)*(y))
+
+/* Safe multiply which returns zero if there is an integer overflow */
+#define TIFFSafeMultiply(t,v,m) ((((t)m != (t)0) && (((t)v*m)/(t)m == (t)v)) ? (t)v*m : (t)0)
@


1.1
log
@Fix memory allocation problems and numerous integer overflows.

CAN-2004-0803, CAN-2004-0804, CAN-2004-0886
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@SECURITY:
fix multiple vulnerabilities; bump PKGNAME
http://www.vuxml.org/openbsd/d045aeb6-9ea6-11d9-9623-00065bd5b0b6.html

ok brad@@
@
text
@@


1.1.6.1
log
@cumulative update with patches of recent months

MFC:
fix an issue with not being able to open some valid TIFF files.

http://www.sigmasoft.com/~openbsd/archive/openbsd-ports/200503/msg00090.html

From: Bernd Ahlers <b dot ahlers at ba-net dot org>
---
Integer overflow in tif_dirread.c and tif_fax3.c for libtiff allows remote
attackers to execute arbitrary code via a TIFF file containing a TIFF_ASCII
or TIFF_UNDEFINED directory entry with a -1 entry count, which leads to a
heap-based buffer overflow.

CAN-2004-1308
---
fix an issue with alpha channels.

http://bugzilla.remotesensing.org/show_bug.cgi?id=718
---
fix MASTER_SITES; From: Bernd Ahlers <b dot ahlers at ba-net dot org>
---
Fix memory allocation problems and numerous integer overflows.

CAN-2004-0803, CAN-2004-0804, CAN-2004-0886

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-libtiff_tiffiop_h,v 1.1 2004/10/20 20:37:48 brad Exp $
@


1.1.4.1
log
@cumulative update with patches of recent months

MFC:
fix an issue with not being able to open some valid TIFF files.

http://www.sigmasoft.com/~openbsd/archive/openbsd-ports/200503/msg00090.html

From: Bernd Ahlers <b dot ahlers at ba-net dot org>
---
Integer overflow in tif_dirread.c and tif_fax3.c for libtiff allows remote
attackers to execute arbitrary code via a TIFF file containing a TIFF_ASCII
or TIFF_UNDEFINED directory entry with a -1 entry count, which leads to a
heap-based buffer overflow.

CAN-2004-1308
---
fix an issue with alpha channels.

http://bugzilla.remotesensing.org/show_bug.cgi?id=718
---
fix MASTER_SITES; From: Bernd Ahlers <b dot ahlers at ba-net dot org>
---
Fix memory allocation problems and numerous integer overflows.

CAN-2004-0803, CAN-2004-0804, CAN-2004-0886

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-libtiff_tiffiop_h,v 1.1 2004/10/20 20:37:48 brad Exp $
@

