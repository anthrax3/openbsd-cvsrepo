head	1.3;
access;
symbols
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2010.06.30.17.10.08;	author naddy;	state dead;
branches;
next	1.2;

1.2
date	2009.06.23.07.49.31;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2008.08.27.18.09.36;	author jasper;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2009.08.22.17.24.29;	author william;	state Exp;
branches;
next	;


desc
@@


1.3
log
@SECURITY:
Update to 3.9.4, which includes fixes for CVE-2009-2347 and CVE-2010-1411.
@
text
@$OpenBSD: patch-libtiff_tif_lzw_c,v 1.2 2009/06/23 07:49:31 jasper Exp $

First three chunks:
Security fix for SA31610
http://secunia.com/advisories/31610
LibTIFF LZW Decoder Buffer Underflow Vulnerability   	
Patch extracted from Debian's tiff_3.8.2-7+etch1

Last two chunks:
Security fix for SA35515
http://secunia.com/advisories/35515/
LibTIFF "LZWDecodeCompat()" Buffer Underflow Vulnerability
Patch from upstream bugreport #2065 (committed to CVS).

--- libtiff/tif_lzw.c.orig	Tue Mar 21 17:42:50 2006
+++ libtiff/tif_lzw.c	Mon Jun 22 23:58:21 2009
@@@@ -237,6 +237,11 @@@@ LZWSetupDecode(TIFF* tif)
                     sp->dec_codetab[code].length = 1;
                     sp->dec_codetab[code].next = NULL;
                 } while (code--);
+		/*
+		 * Zero-out the unused entries
+		 */
+		_TIFFmemset(&sp->dec_codetab[CODE_CLEAR], 0,
+		(CODE_FIRST-CODE_CLEAR)*sizeof (code_t));
 	}
 	return (1);
 }
@@@@ -408,12 +413,19 @@@@ LZWDecode(TIFF* tif, tidata_t op0, tsize_t occ0, tsamp
 			break;
 		if (code == CODE_CLEAR) {
 			free_entp = sp->dec_codetab + CODE_FIRST;
+			_TIFFmemset(free_entp, 0, (CSIZE-CODE_FIRST)*sizeof (code_t));
 			nbits = BITS_MIN;
 			nbitsmask = MAXCODE(BITS_MIN);
 			maxcodep = sp->dec_codetab + nbitsmask-1;
 			NextCode(tif, sp, bp, code, GetNextCode);
 			if (code == CODE_EOI)
 				break;
+			if (code == CODE_CLEAR) {
+				TIFFErrorExt(tif->tif_clientdata, tif->tif_name,
+				"LZWDecode: Corrupted LZW table at scanline %d",
+				tif->tif_row);
+				return (0);
+			}
 			*op++ = (char)code, occ--;
 			oldcodep = sp->dec_codetab + code;
 			continue;
@@@@ -604,12 +616,19 @@@@ LZWDecodeCompat(TIFF* tif, tidata_t op0, tsize_t occ0,
 			break;
 		if (code == CODE_CLEAR) {
 			free_entp = sp->dec_codetab + CODE_FIRST;
+			_TIFFmemset(free_entp, 0, (CSIZE-CODE_FIRST)*sizeof (code_t));
 			nbits = BITS_MIN;
 			nbitsmask = MAXCODE(BITS_MIN);
 			maxcodep = sp->dec_codetab + nbitsmask;
 			NextCode(tif, sp, bp, code, GetNextCodeCompat);
 			if (code == CODE_EOI)
 				break;
+			if (code == CODE_CLEAR) {
+				TIFFErrorExt(tif->tif_clientdata, tif->tif_name,
+				"LZWDecode: Corrupted LZW table at scanline %d",
+				tif->tif_row);
+				return (0);
+			}
 			*op++ = code, occ--;
 			oldcodep = sp->dec_codetab + code;
 			continue;
@@@@ -647,6 +666,7 @@@@ LZWDecodeCompat(TIFF* tif, tidata_t op0, tsize_t occ0,
 		}
 		oldcodep = codep;
 		if (code >= 256) {
+			char *op_orig = op;
 			/*
 		 	 * Code maps to a string, copy string
 			 * value to output (written in reverse).
@@@@ -681,7 +701,7 @@@@ LZWDecodeCompat(TIFF* tif, tidata_t op0, tsize_t occ0,
 			tp = op;
 			do {
 				*--tp = codep->value;
-			} while( (codep = codep->next) != NULL);
+			} while( (codep = codep->next) != NULL && tp > op_orig);
 		} else
 			*op++ = code, occ--;
 	}
@


1.2
log
@SECURITY FIX for for SA35515,
LibTIFF "LZWDecodeCompat()" Buffer Underflow Vulnerability

Patch from upstream bugreport #2065 (committed to CVS).
@
text
@d1 1
a1 1
$OpenBSD: patch-libtiff_tif_lzw_c,v 1.1 2008/08/27 18:09:36 jasper Exp $
@


1.1
log
@Security fix for SA31610
http://secunia.com/advisories/31610
LibTIFF LZW Decoder Buffer Underflow Vulnerability

Patch extracted from Debian's tiff_3.8.2-7+etch1

"looks fine" ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
d7 1
d9 5
a13 1
Patch extracted from Debian's tiff_3.8.2-7+etch1
d15 2
a16 2
--- libtiff/tif_lzw.c.orig	Wed Aug 27 15:02:14 2008
+++ libtiff/tif_lzw.c	Wed Aug 27 15:06:01 2008
d69 17
@


1.1.2.1
log
@MFC:

SECURITY FIX

Resolves:

SA35515:
LibTIFF "LZWDecodeCompat()" Buffer Underflow Vulnerability

CVE-2009-2347:
Fix several places in tiff2rgba and rgb2ycbcr that were being careless about
possible integer overflow in calculation of buffer sizes.
@
text
@d1 1
a1 1
$OpenBSD: patch-libtiff_tif_lzw_c,v 1.2 2009/06/23 07:49:31 jasper Exp $
a2 1
First three chunks:
d6 1
d9 2
a10 8
Last two chunks:
Security fix for SA35515
http://secunia.com/advisories/35515/
LibTIFF "LZWDecodeCompat()" Buffer Underflow Vulnerability
Patch from upstream bugreport #2065 (committed to CVS).

--- libtiff/tif_lzw.c.orig	Tue Mar 21 17:42:50 2006
+++ libtiff/tif_lzw.c	Mon Jun 22 23:58:21 2009
a62 17
@@@@ -647,6 +666,7 @@@@ LZWDecodeCompat(TIFF* tif, tidata_t op0, tsize_t occ0,
 		}
 		oldcodep = codep;
 		if (code >= 256) {
+			char *op_orig = op;
 			/*
 		 	 * Code maps to a string, copy string
 			 * value to output (written in reverse).
@@@@ -681,7 +701,7 @@@@ LZWDecodeCompat(TIFF* tif, tidata_t op0, tsize_t occ0,
 			tp = op;
 			do {
 				*--tp = codep->value;
-			} while( (codep = codep->next) != NULL);
+			} while( (codep = codep->next) != NULL && tp > op_orig);
 		} else
 			*op++ = code, occ--;
 	}
@


