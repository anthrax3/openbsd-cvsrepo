head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.0.14
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.10.31.18.57.09;	author ajacoutot;	state dead;
branches;
next	1.1;
commitid	DHDmzHO5X6SKYs4E;

1.1
date	2012.09.23.13.25.25;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@I forgot to remove this patch in previous.
@
text
@$OpenBSD: patch-src_image_load_tiff_c,v 1.1 2012/09/23 13:25:25 jasper Exp $

Unbreak on big endian architectures
From upstream git:
https://gitorious.org/geeqie/geeqie/commit/e8cd71d6f52967d7dd63efcb186834aa9e6e53e5

--- src/image_load_tiff.c.orig	Sun Sep 23 15:10:18 2012
+++ src/image_load_tiff.c	Sun Sep 23 15:10:22 2012
@@@@ -326,17 +326,18 @@@@ static gboolean image_loader_tiff_load (gpointer loade
 		/* Turns out that the packing used by TIFFRGBAImage depends on 
         	 * the host byte order... 
 	         */ 
-		while (pixels < pixbuf->pixels + bytes) 
+		guchar *ptr = pixels;
+		while (ptr < pixels + bytes) 
 			{
-			uint32 pixel = *(uint32 *)pixels;
+			uint32 pixel = *(uint32 *)ptr;
 			int r = TIFFGetR(pixel);
 			int g = TIFFGetG(pixel);
 			int b = TIFFGetB(pixel);
 			int a = TIFFGetA(pixel);
-			*pixels++ = r;
-			*pixels++ = g;
-			*pixels++ = b;
-			*pixels++ = a;
+			*ptr++ = r;
+			*ptr++ = g;
+			*ptr++ = b;
+			*ptr++ = a;
 			}
 #endif
 
@@@@ -419,4 +420,4 @@@@ void image_loader_backend_set_tiff(ImageLoaderBackend 
 
 
 
-#endif
\ No newline at end of file
+#endif
@


1.1
log
@unbreak on big endian arches
@
text
@d1 1
a1 1
$OpenBSD$
@

