head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2010.05.26.21.38.52;	author jakemsr;	state dead;
branches;
next	1.1;

1.1
date	2009.01.29.11.30.27;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to ffmpeg subversion snapshot from 2010-05-12

update needed for newer x264 and for gcc4.  this causes yet more
fallout as some libav* functions other ports were using have been
fully deprecated.  commits coming rsn ...

mostly from new MAINTAINER
@
text
@$OpenBSD: patch-libavformat_4xm_c,v 1.1 2009/01/29 11:30:27 sthen Exp $
--- libavformat/4xm.c.orig	Wed Jan 28 23:23:35 2009
+++ libavformat/4xm.c	Wed Jan 28 23:27:23 2009
@@@@ -163,10 +163,12 @@@@ static int fourxm_read_header(AVFormatContext *s,
                 return AVERROR_INVALIDDATA;
             }
             current_track = AV_RL32(&header[i + 8]);
+            if((unsigned)current_track >= UINT_MAX / sizeof(AudioTrack) - 1){
+                av_log(s, AV_LOG_ERROR, "current_track too large\n");
+                return -1;
+            }
             if (current_track + 1 > fourxm->track_count) {
                 fourxm->track_count = current_track + 1;
-                if((unsigned)fourxm->track_count >= UINT_MAX / sizeof(AudioTrack))
-                    return -1;
                 fourxm->tracks = av_realloc(fourxm->tracks,
                     fourxm->track_count * sizeof(AudioTrack));
                 if (!fourxm->tracks) {
@


1.1
log
@SECURITY; fix http://www.trapkit.de/advisories/TKADV2009-004.txt
From Brad.

FFmpeg contains a type conversion vulnerability while parsing malformed 4X
movie files. The vulnerability may be exploited by a (remote) attacker to
execute arbitrary code in the context of FFmpeg or an application using
the FFmpeg library.
@
text
@d1 1
a1 1
$OpenBSD$
@

