head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.2
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.2.0.6
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	sthen_20130319:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2017.07.27.09.55.45;	author sthen;	state Exp;
branches;
next	1.6;
commitid	B5vWYrki33kPVNK6;

1.6
date	2017.06.16.09.34.36;	author czarkoff;	state Exp;
branches;
next	1.5;
commitid	33AyLJ15uymBJl21;

1.5
date	2017.06.15.18.02.17;	author rsadowski;	state Exp;
branches;
next	1.4;
commitid	QR5VC8NvGSsLst05;

1.4
date	2017.05.31.08.08.16;	author espie;	state Exp;
branches;
next	1.3;
commitid	ij92FtFXiSiT1ani;

1.3
date	2017.05.27.04.54.31;	author espie;	state Exp;
branches;
next	1.2;
commitid	oA9cQ9pQa6A0Atbr;

1.2
date	2015.12.28.18.57.29;	author jasper;	state Exp;
branches;
next	1.1;
commitid	Cws248wDXG4cgiEI;

1.1
date	2013.03.19.15.47.41;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.19.15.47.41;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.7
log
@add COMPILER_LIBCXX to WANTLIB and bump
@
text
@# $OpenBSD: Makefile,v 1.6 2017/06/16 09:34:36 czarkoff Exp $

COMMENT=	C++ mathematics header-only library for OpenGL software

GH_TAGNAME=	0.9.8.4
GH_PROJECT=	glm
GH_ACCOUNT=	g-truc
DISTNAME=	${GH_PROJECT}-${GH_TAGNAME}
REVISION=	0

CATEGORIES=	graphics math

HOMEPAGE=	http://glm.g-truc.net/

# MIT
PERMIT_PACKAGE_CDROM=	Yes

MODULES=	devel/cmake

COMPILER =	gcc
WANTLIB += ${COMPILER_LIBCXX}

# it's kind-of a NO_BUILD port, but doing so means you can't
# run the tests.
CONFIGURE_ARGS+=-DGLM_TEST_ENABLE=BOOLEAN=ON

CXXFLAGS+=	-Wno-long-long

PKG_ARCH=	*

.include <bsd.port.mk>
@


1.6
log
@fix typo
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2017/06/15 18:02:17 rsadowski Exp $
d9 1
d21 1
@


1.5
log
@update glm to 0.9.8.4

CXXFLAGS tweak and ok czarkoff@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2017/05/31 08:08:16 espie Exp $
d25 1
a25 1
CXXFLAGS+=	Wno-long-long
@


1.4
log
@switch everything to new COMPILER idiom, even stuff that won't build with clang
yet, but at least that part is done.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2017/05/27 04:54:31 espie Exp $
d5 1
a5 1
GH_TAGNAME=	0.9.7.1
d17 1
a17 1
MODULES=	devel/cmake 
d19 1
a19 1
COMPILER = 	gcc
d23 3
a25 1
CONFIGURE_ARGS+=	-DGLM_TEST_ENABLE=BOOLEAN=ON
@


1.3
log
@WANT_CXX
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2015/12/28 18:57:29 jasper Exp $
d19 1
a19 1
WANT_CXX =	base gcc
@


1.2
log
@- update to glm-0.9.7.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/03/19 15:47:41 sthen Exp $
d17 1
a17 2
MODULES=	devel/cmake \
		gcc4
d19 1
a19 2
MODGCC4_ARCHS=	*
MODGCC4_LANGS=	c++
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d5 4
a8 5
DISTNAME=	glm-0.9.4.2
EXTRACT_SUFX=	.zip
# broken zip; DOS line-endings everywhere but not marked as ascii in .zip
# -aa breaks the png files in the docs, but we don't install them anyway
UNZIP=		unzip -aa
d17 2
a18 1
MASTER_SITES=	${MASTER_SITE_SOURCEFORGE:=ogl-math/}
d20 2
a21 1
MODULES=	devel/cmake
@


1.1.1.1
log
@import ports/graphics/glm, ok gonzalo@@

OpenGL Mathematics (GLM) is a header only C++ mathematics library for
graphics software based on the OpenGL Shading Language (GLSL) specification.

GLM provides classes and functions designed and implemented with the same
naming conventions and functionalities as GLSL so that when a programmer
knows GLSL, he knows GLM as well, which makes it really easy to use.

This project isn't limited to GLSL features. An extension system, based
on the GLSL extension conventions, provides extended capabilities:
matrix transformations, quaternions, half-based types, random numbers,
procedural noise functions, etc...

This library works perfectly with OpenGL but it also ensures interoperability
with third party libraries and SDKs. It is a good candidate for software
rendering (Raytracing / Rasterisation), image processing, physic simulations
and any context that requires a simple and convenient mathematics library.

GLM is written in C++98 but can take advantage of C++11 when supported
by the compiler.
@
text
@@
