head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.2
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	landry_20160124:1.1.1.1
	rsadowski:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.03.25.08.39.51;	author landry;	state Exp;
branches;
next	1.3;
commitid	omZLTpyzPSDVJHgP;

1.3
date	2016.09.13.08.21.36;	author kirby;	state Exp;
branches;
next	1.2;
commitid	SDJ8wIHiLXIDSJod;

1.2
date	2016.06.27.05.25.40;	author landry;	state Exp;
branches;
next	1.1;
commitid	tIz4cAbUkL7x7pqM;

1.1
date	2016.01.24.10.06.15;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	nE5VVrRYGDtTU2bF;

1.1.1.1
date	2016.01.24.10.06.15;	author landry;	state Exp;
branches;
next	;
commitid	nE5VVrRYGDtTU2bF;


desc
@@


1.4
log
@Update to nomacs 3.6.0, from Rafael Sadowski
@
text
@$OpenBSD: patch-cmake_UnixBuildTarget_cmake,v 1.3 2016/09/13 08:21:36 kirby Exp $
--- cmake/UnixBuildTarget.cmake.orig	Thu Mar 23 16:18:04 2017
+++ cmake/UnixBuildTarget.cmake	Fri Mar 24 07:19:31 2017
@@@@ -78,7 +78,11 @@@@ install(FILES src/img/nomacs.svg DESTINATION share/pix
 #  translations
 install(FILES ${NOMACS_QM} DESTINATION share/nomacs/translations)
 #  manpage
-install(FILES Readme/nomacs.1 DESTINATION share/man/man1)
+if(${CMAKE_SYSTEM_NAME} MATCHES "OpenBSD")
+    install(FILES Readme/nomacs.1 DESTINATION man/man1)
+else()
+    install(FILES Readme/nomacs.1 DESTINATION share/man/man1)
+endif()
 #  appdata
 install(FILES nomacs.appdata.xml DESTINATION /usr/share/appdata/)
 
@


1.3
log
@update to nomacs-3.4
from maintainer Rafael Sadowski, thanks!
with some input from sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-cmake_UnixBuildTarget_cmake,v 1.2 2016/06/27 05:25:40 landry Exp $
--- cmake/UnixBuildTarget.cmake.orig	Fri Jul 22 13:43:37 2016
+++ cmake/UnixBuildTarget.cmake	Mon Jul 25 17:55:33 2016
@@@@ -83,7 +83,11 @@@@ install(FILES src/img/nomacs.svg DESTINATION share/pix
@


1.2
log
@Update to nomacs 3.2.0, from maintainer Rafael Sadowski
@
text
@d1 4
a4 4
$OpenBSD: patch-cmake_UnixBuildTarget_cmake,v 1.1.1.1 2016/01/24 10:06:15 landry Exp $
--- cmake/UnixBuildTarget.cmake.orig	Mon May  2 22:13:12 2016
+++ cmake/UnixBuildTarget.cmake	Mon May  2 22:15:52 2016
@@@@ -93,7 +93,11 @@@@ install(FILES src/img/nomacs.svg DESTINATION share/pix
@


1.1
log
@Initial revision
@
text
@d1 15
a15 24
$OpenBSD$
--- cmake/UnixBuildTarget.cmake.orig	Thu Dec 17 10:57:09 2015
+++ cmake/UnixBuildTarget.cmake	Tue Jan 19 20:29:11 2016
@@@@ -93,7 +93,7 @@@@ else()
 		  
   add_library(${DLL_NAME} SHARED ${NOMACS_SOURCES} ${NOMACS_UI} ${NOMACS_HEADERS} ${NOMACS_RC} ${LIBQPSD_SOURCES} ${LIBQPSD_HEADERS} ${WEBP_SOURCE}  ${QUAZIP_SOURCES} ${NOMACS_RESOURCES} ${NOMACS_RCC})
   target_include_directories(${DLL_NAME} PRIVATE  ${OpenCV_INCLUDE_DIRS})
-  target_link_libraries(${DLL_NAME} ${QT_LIBRARIES} ${EXIV2_LIBRARIES} ${LIBRAW_LIBRARIES} ${OpenCV_LIBRARIES} ${VERSION_LIB} ${TIFF_LIBRARIES} ${HUPNP_LIBS} ${HUPNPAV_LIBS} ${WEBP_LIBRARIES} ${WEBP_STATIC_LIBRARIES})
+  target_link_libraries(${DLL_NAME} ${QT_LIBRARIES} ${EXIV2_LIBRARIES} ${LIBRAW_LIBRARIES} ${OpenCV_LIBRARIES} ${VERSION_LIB} ${TIFF_LIBRARIES} ${HUPNP_LIBS} ${HUPNPAV_LIBS}  ${QUAZIP_LIBRARIES} ${WEBP_LIBRARIES} ${WEBP_STATIC_LIBRARIES})
   add_dependencies(${BINARY_NAME} ${DLL_NAME})
   set_target_properties(${DLL_NAME} PROPERTIES PREFIX "")
 
@@@@ -118,7 +118,11 @@@@ else()
   #  translations
   install(FILES ${NOMACS_QM} DESTINATION share/nomacs/translations)
   #  manpage
-  install(FILES Readme/nomacs.1 DESTINATION share/man/man1)
+  if(${CMAKE_SYSTEM_NAME} MATCHES "OpenBSD")
+         install(FILES Readme/nomacs.1 DESTINATION man/man1)
+  else()
+         install(FILES Readme/nomacs.1 DESTINATION share/man/man1)
+  endif()
   #  appdata
   install(FILES nomacs.appdata.xml DESTINATION /usr/share/appdata/)
@


1.1.1.1
log
@Import nomacs 3.0.0, from Rafael Sadowski.

nomacs is small, fast and able to handle the most common image
formats. Additionally it is possible to synchronize multiple
viewers. A synchronization of viewers running on the same computer
or via LAN is possible. It allows to compare images and spot the
differences (e.g. schemes of architects to show the progress).

ok zhuk@@
@
text
@@
