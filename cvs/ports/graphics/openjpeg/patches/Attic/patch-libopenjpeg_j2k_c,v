head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1:1.2.0.2;
locks; strict;
comment	@# @;


1.4
date	2013.12.10.12.26.47;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2012.09.17.12.31.35;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2012.07.11.08.46.46;	author jasper;	state Exp;
branches
	1.2.2.1
	1.2.4.1;
next	1.1;

1.1
date	2012.07.11.08.31.28;	author sthen;	state Exp;
branches;
next	;

1.2.2.1
date	2012.07.11.08.58.39;	author sthen;	state Exp;
branches;
next	;

1.2.4.1
date	2012.09.17.12.33.35;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to OpenJPEG 1.5.1, note that there are still some known security
bugs (as pointed out by jca), but this is a better base from which to update.
Rolls in previous security fixes we had as patches.
Merge PFRAG.shared while there.
@
text
@$OpenBSD: patch-libopenjpeg_j2k_c,v 1.3 2012/09/17 12:31:35 jasper Exp $

http://code.google.com/p/openjpeg/source/detail?r=1727 (CVE-2012-3358)
http://code.google.com/p/openjpeg/source/detail?r=1919 (CVE-2012-3535)

--- libopenjpeg/j2k.c.orig	Tue Feb  7 11:49:55 2012
+++ libopenjpeg/j2k.c	Mon Sep 17 13:56:12 2012
@@@@ -685,6 +685,13 @@@@ static void j2k_read_cox(opj_j2k_t *j2k, int compno) {
 		j2k->state |= J2K_STATE_ERR;
 	}
 
+	if( tccp->numresolutions > J2K_MAXRLVLS ) {
+	    opj_event_msg(j2k->cinfo, EVT_ERROR, "Error decoding component %d.\nThe number of resolutions is too big: %d vs max= %d. Truncating.\n\n",
+	      compno, tccp->numresolutions, J2K_MAXRLVLS);
+			j2k->state |= J2K_STATE_ERR;
+	    tccp->numresolutions = J2K_MAXRLVLS;
+	 }
+
 	tccp->cblkw = cio_read(cio, 1) + 2;	/* SPcox (E) */
 	tccp->cblkh = cio_read(cio, 1) + 2;	/* SPcox (F) */
 	tccp->cblksty = cio_read(cio, 1);	/* SPcox (G) */
@@@@ -1269,7 +1276,7 @@@@ static void j2k_read_sot(opj_j2k_t *j2k) {
 		static int backup_tileno = 0;
 
 		/* tileno is negative or larger than the number of tiles!!! */
-		if ((tileno < 0) || (tileno > (cp->tw * cp->th))) {
+		if ((tileno < 0) || (tileno >= (cp->tw * cp->th))) {
 			opj_event_msg(j2k->cinfo, EVT_ERROR,
 				"JPWL: bad tile number (%d out of a maximum of %d)\n",
 				tileno, (cp->tw * cp->th));
@@@@ -1286,8 +1293,18 @@@@ static void j2k_read_sot(opj_j2k_t *j2k) {
 
 		/* keep your private count of tiles */
 		backup_tileno++;
-	};
+	}
+else
 #endif /* USE_JPWL */
+  {
+    /* tileno is negative or larger than the number of tiles!!! */
+    if ((tileno < 0) || (tileno >= (cp->tw * cp->th))) {
+      opj_event_msg(j2k->cinfo, EVT_ERROR,
+        "JPWL: bad tile number (%d out of a maximum of %d)\n",
+        tileno, (cp->tw * cp->th));
+      return;
+    }
+  }
 	
 	if (cp->tileno_size == 0) {
 		cp->tileno[cp->tileno_size] = tileno;
@


1.3
log
@security fix for
CVE-2012-3535 openjpeg: heap-based buffer overflow when decoding jpeg2000 file

ok sthen@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-libopenjpeg_j2k_c,v 1.2 2012/07/11 08:46:46 jasper Exp $
@


1.2
log
@reference CVE number
@
text
@d1 1
a1 1
$OpenBSD: patch-libopenjpeg_j2k_c,v 1.1 2012/07/11 08:31:28 sthen Exp $
d4 1
d6 17
a22 3
--- libopenjpeg/j2k.c.orig	Wed Jul 11 10:17:02 2012
+++ libopenjpeg/j2k.c	Wed Jul 11 10:19:48 2012
@@@@ -1269,7 +1269,7 @@@@ static void j2k_read_sot(opj_j2k_t *j2k) {
d31 1
a31 1
@@@@ -1286,8 +1286,18 @@@@ static void j2k_read_sot(opj_j2k_t *j2k) {
@


1.2.4.1
log
@security fix for
CVE-2012-3535 openjpeg: heap-based buffer overflow when decoding jpeg2000 file

ok sthen@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-libopenjpeg_j2k_c,v 1.3 2012/09/17 12:31:35 jasper Exp $
a3 1
http://code.google.com/p/openjpeg/source/detail?r=1919 (CVE-2012-3535)
d5 3
a7 17
--- libopenjpeg/j2k.c.orig	Tue Feb  7 11:49:55 2012
+++ libopenjpeg/j2k.c	Mon Sep 17 13:56:12 2012
@@@@ -685,6 +685,13 @@@@ static void j2k_read_cox(opj_j2k_t *j2k, int compno) {
 		j2k->state |= J2K_STATE_ERR;
 	}
 
+	if( tccp->numresolutions > J2K_MAXRLVLS ) {
+	    opj_event_msg(j2k->cinfo, EVT_ERROR, "Error decoding component %d.\nThe number of resolutions is too big: %d vs max= %d. Truncating.\n\n",
+	      compno, tccp->numresolutions, J2K_MAXRLVLS);
+			j2k->state |= J2K_STATE_ERR;
+	    tccp->numresolutions = J2K_MAXRLVLS;
+	 }
+
 	tccp->cblkw = cio_read(cio, 1) + 2;	/* SPcox (E) */
 	tccp->cblkh = cio_read(cio, 1) + 2;	/* SPcox (F) */
 	tccp->cblksty = cio_read(cio, 1);	/* SPcox (G) */
@@@@ -1269,7 +1276,7 @@@@ static void j2k_read_sot(opj_j2k_t *j2k) {
d16 1
a16 1
@@@@ -1286,8 +1293,18 @@@@ static void j2k_read_sot(opj_j2k_t *j2k) {
@


1.2.2.1
log
@MFC, SECURITY fix for CVE-2012-3358, heap buffer overflow when handling a
crafted JPEG2000 file.
@
text
@d1 1
a1 1
$OpenBSD: patch-libopenjpeg_j2k_c,v 1.2 2012/07/11 08:46:46 jasper Exp $
d5 3
a7 3
--- libopenjpeg/j2k.c.orig	Wed Jul 11 10:56:46 2012
+++ libopenjpeg/j2k.c	Wed Jul 11 10:56:47 2012
@@@@ -1282,7 +1282,7 @@@@ static void j2k_read_sot(opj_j2k_t *j2k) {
d16 1
a16 1
@@@@ -1299,8 +1299,18 @@@@ static void j2k_read_sot(opj_j2k_t *j2k) {
@


1.1
log
@SECURITY fix for CVE-2012-3358, heap buffer overflow when handling a
crafted JPEG2000 file.
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
http://code.google.com/p/openjpeg/source/detail?r=1727
@

