head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.16
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.14
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.12
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.8
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.10
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.12.10.12.26.47;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2012.03.30.07.09.26;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2012.03.29.15.45.43;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2009.07.14.15.35.24;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to OpenJPEG 1.5.1, note that there are still some known security
bugs (as pointed out by jca), but this is a better base from which to update.
Rolls in previous security fixes we had as patches.
Merge PFRAG.shared while there.
@
text
@$OpenBSD$

Required for !amd64. We could use posix_memalign() instead, but no point
as our malloc() already aligns to 16 bytes.

--- libopenjpeg/opj_malloc.h.orig	Fri Dec  6 14:56:48 2013
+++ libopenjpeg/opj_malloc.h	Fri Dec  6 14:57:45 2013
@@@@ -86,7 +86,7 @@@@ Allocate memory aligned to a 16 byte boundry
   #elif defined(__FreeBSD__)
     #define HAVE_POSIX_MEMALIGN
 	/* Linux x86_64 and OSX always align allocations to 16 bytes */
-	#elif !defined(__amd64__) && !defined(__APPLE__) && !defined(_AIX)
+	#elif !defined(__amd64__) && !defined(__APPLE__) && !defined(_AIX) && !defined(__OpenBSD__)
 		#define HAVE_MEMALIGN
 		#include <malloc.h>
 	#endif
@


1.3
log
@Add back the diff to not use memalign(), fixing !amd64. Add a proper comment
so it doesn't get lost in future. Build failure pointed out by naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-libopenjpeg_opj_malloc_h,v 1.1 2009/07/14 15:35:24 sthen Exp $
d6 8
a13 10
--- libopenjpeg/opj_malloc.h.orig	Fri Mar 30 08:01:51 2012
+++ libopenjpeg/opj_malloc.h	Fri Mar 30 08:02:32 2012
@@@@ -83,8 +83,8 @@@@ Allocate memory aligned to a 16 byte boundry
 #else /* Not _WIN32 */
 	#if defined(__sun)
 		#define HAVE_MEMALIGN
-	/* Linux x86_64 and OSX always align allocations to 16 bytes */
-	#elif !defined(__amd64__) && !defined(__APPLE__)
+	/* Linux x86_64, OSX, OpenBSD always align allocations to 16 bytes */
+	#elif !defined(__amd64__) && !defined(__APPLE__) && !defined(__OpenBSD__)
@


1.2
log
@update to OpenJPEG 1.5.0, take maintainership. ok todd@@
@
text
@d2 8
a9 4
--- libopenjpeg/opj_malloc.h.orig	Tue Jul 14 13:59:21 2009
+++ libopenjpeg/opj_malloc.h	Tue Jul 14 16:16:08 2009
@@@@ -75,11 +75,11 @@@@ Allocate memory aligned to a 16 byte boundry
 #else /* Not WIN32 */
d11 7
a17 10
 			#define HAVE_MEMALIGN
-		#elif defined(__GNUC__)
+		#elif defined(__GNUC__) && !defined(__OpenBSD__)
 			#define HAVE_MEMALIGN
 			#include <malloc.h>		
 		/* Linux x86_64 and OSX always align allocations to 16 bytes */
-		#elif !defined(__amd64__) && !defined(__APPLE__)	
+		#elif !defined(__amd64__) && !defined(__APPLE__) && !defined(__OpenBSD__)
 			/* FIXME: Yes, this is a big assumption */
 			#define HAVE_POSIX_MEMALIGN
@


1.1
log
@- don't strip the library.  ok todd@@
- update to 1.3, fixing LP64 arch in the process. "even better indeed" todd@@
@
text
@d1 1
a1 1
$OpenBSD$
@

