head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.42
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.34
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.36
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.16
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.14
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	jasper_20070521:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2007.05.21.14.24.06;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.05.21.14.24.06;	author jasper;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- src/animation.c.orig	Fri May 18 22:57:11 2007
+++ src/animation.c	Fri May 18 22:57:16 2007
@@@@ -312,6 +312,7 @@@@ void animation_store_chunk(AnimChunkState *state,
     gchar *tempstring;
     Spline *spline;
     GdkPixdata pixdata;
+    guint64 word;
 
     switch (type) {
 
@@@@ -350,9 +351,11 @@@@ void animation_store_chunk(AnimChunkState *state,
 
     case CHUNK_DURATION:
 	/* The transition duration, as a double */
+	word = *(guint64*)(data);
+	word = GUINT64_FROM_LE(word);
 	if (length == sizeof(gdouble)) {
 	    gtk_list_store_set(state->self->model, &state->iter,
-			       ANIMATION_MODEL_DURATION, *(gdouble*)data,
+			       ANIMATION_MODEL_DURATION, *(gdouble*)&word,
 			       -1);
 	}
 	else {
@


1.1.1.1
log
@import fyre 1.0.1

Fyre is a tool for producing computational artwork based on histograms
of iterated chaotic functions. At the moment, it implements the Peter de
Jong map in a fixed-function pipeline with an interactive GTK+ frontend
and a command line interface for easy and efficient rendering of
high-resolution, high quality images.

help and ok steven@@
@
text
@@
