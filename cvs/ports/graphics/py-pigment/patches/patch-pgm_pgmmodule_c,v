head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.28
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.24
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.26
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.22
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.20
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.18
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.16
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.14
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.12
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.10
	OPENBSD_5_0:1.1.1.1.0.8
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	landry_20091013:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2009.10.13.19.39.12;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.13.19.39.12;	author landry;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
Needed for python to correctly view gl syms, has to be dlopened w/ RTLD_GLOBAL.
--- pgm/pgmmodule.c.orig	Wed May 20 19:08:27 2009
+++ pgm/pgmmodule.c	Tue Oct 13 13:05:29 2009
@@@@ -30,6 +30,7 @@@@
 #include <pygobject.h>
 #include <Python.h>
 #include <pgm/pgm.h>
+#include <dlfcn.h>
 
 void pypgm_register_classes (PyObject *d);
 void pypgm_add_constants (PyObject *module, const gchar *strip_prefix);
@@@@ -57,6 +58,13 @@@@ init_pgm (void)
       argv = g_new (char *, argc);
       for (i = 0; i < argc; i++)
         argv[i] = g_strdup (PyString_AsString (PyList_GetItem (av, i)));
+    }
+
+  /* for an unknown reason python doesn't load libGL, so force it */
+  if (!dlopen ("libGL.so", RTLD_GLOBAL|RTLD_NOW))
+    {
+      perror(dlerror());
+       return;
     }
 
   if (!pgm_init_check (&argc, &argv))
@


1.1.1.1
log
@Import py-pigment 0.3.12:
Pigment-python contains modules that allow you to use Pigment in Python
programs. At present, it is a fairly complete set of bindings.
Thanks to kurt@@, guenther@@ & oga@@ for hints on how to correctly link/use
libGL. For now, there's an evil patch for that.
ok ajacoutot@@
@
text
@@
