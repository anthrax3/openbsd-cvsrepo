head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2017.09.25.09.16.13;	author robert;	state Exp;
branches;
next	1.2;
commitid	xOeDnABBxynvFYIF;

1.2
date	2017.08.19.18.40.03;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	J2DpO2jxkJq8F7GG;

1.1
date	2017.08.17.11.40.09;	author ajacoutot;	state Exp;
branches;
next	;
commitid	LtCXD2DWufidu2q1;


desc
@@


1.3
log
@Unbreak autoconf checks with clang by not using nested functions
in the checks.

Someone clearly did not read the autoconf documentation because
using the following functions with a function declaration inside
the body will end up declaring a function inside a function.

- AC_TRY_COMPILE( [], [ int main() { return 0; } ],
- AC_LANG_PROGRAM([[]], [[int main (void) { return 0; }]])],
- AC_TRY_LINK([], [int main (void) { return 0; }],

Result:

int
main ()
{
int main (void) { return 0; }
  ;
  return 0;
}

nested functions is a gcc extension which is not supported by
clang.

test.c:4:17: error: function definition is not allowed here
int main (void) { return 0; }
                ^
1 error generated.

This causes tests to fail in the configure scripts resulting in
missing compile and link time flags from the builds.

This resulted in weird behaviour of several software, like gnome
hanging completely due to gtk+3 not being built properly.

This change intrudces the following fixes:

- remove int main() declaration from AC_TRY_COMPILE, AC_LANG_PROGRAM, AC_TRY_LINK
  as it comes with a declaration already, and people misused them

- change to use AC_LANG_SOURCE when needed in case a complete source block is specified

Most of the changes are in configure.(ac|in), however there were some cases
where autoconf is either broken or the build failed because of an autoconf
generated configure script. Everytihng else is switched to autoconf, so
the maintainers can go ahead and upstream these diffs.

There are more to come, we are continously checking the tree for these issues
and in the future the infrastructure will error if such a case is found.
@
text
@$OpenBSD: patch-configure_ac,v 1.2 2017/08/19 18:40:03 ajacoutot Exp $

REVERT:
From 0927eb3e278e998248f3022c096b4f93685c6a9d Mon Sep 17 00:00:00 2001
From: Bastien Nocera <hadess@@hadess.net>
Date: Tue, 1 Aug 2017 11:37:20 +0100
Subject: build: Check for libtiff using pkg-config
(see https://src.fedoraproject.org/rpms/gdk-pixbuf2/c/ce26fe7648baf28217b7aad9f84cefec9f978b21?branch=master)

Fix AC_TRY_LINK.
 
Index: configure.ac
--- configure.ac.orig
+++ configure.ac
@@@@ -453,14 +453,24 @@@@ AC_ARG_WITH(gdiplus,
 AM_CONDITIONAL(BUILD_GDIPLUS_LOADERS, [ test x$os_win32 = xyes && test x$with_gdiplus != xno ])
 
 dnl Test for libtiff
-libtiff_found=no
 if test x$os_win32 = xno || test x$with_gdiplus = xno; then
-  if test x$with_libtiff != xno; then
-    PKG_CHECK_MODULES(TIFF, libtiff-4)
-    libtiff_found=yes
+  if test x$with_libtiff != xno && test -z "$LIBTIFF"; then
+    AC_CHECK_LIB(tiff, TIFFReadRGBAImageOriented,
+      [AC_CHECK_HEADER(tiffio.h,
+        TIFF='tiff'; LIBTIFF='-ltiff',
+        AC_MSG_WARN(*** TIFF loader will not be built (TIFF header files not found) ***))],
+      [AC_CHECK_LIB(tiff, TIFFWriteScanline,
+        [AC_CHECK_HEADER(tiffio.h,
+          TIFF='tiff'; LIBTIFF='-ltiff -ljpeg -lz',
+          AC_MSG_WARN(*** TIFF loader will not be built (TIFF header files not found) ***))],
+        [AC_CHECK_LIB(tiff34, TIFFFlushData,
+          [AC_CHECK_HEADER(tiffio.h,
+            TIFF='tiff'; LIBTIFF='-ltiff34 -ljpeg -lz',
+            AC_MSG_WARN(*** TIFF loader will not be built (TIFF header files not found) ***))],
+        AC_MSG_WARN(*** TIFF loader will not be built (TIFF library not found) ***), -ljpeg -lz -lm)], -ljpeg -lz -lm)], -lm)
   fi
 
-  if test x$with_libtiff != xno && test x$libtiff_found = xno; then
+  if test x$with_libtiff != xno && test -z "$LIBTIFF"; then
      AC_MSG_ERROR([
 *** Checks for TIFF loader failed. You can build without it by passing
 *** --without-libtiff to configure but some programs using GTK+ may
@@@@ -904,7 +914,7 @@@@ AC_ARG_ENABLE(Bsymbolic,
               [SAVED_LDFLAGS="${LDFLAGS}"
                AC_MSG_CHECKING([for -Bsymbolic-functions linker flag])
                LDFLAGS=-Wl,-Bsymbolic-functions
-               AC_TRY_LINK([], [int main (void) { return 0; }],
+               AC_TRY_LINK([], [],
                            AC_MSG_RESULT(yes)
                            enable_Bsymbolic=yes,
                            AC_MSG_RESULT(no)
@


1.2
log
@Update to gdk-pixbuf-2.36.9.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_ac,v 1.1 2017/08/17 11:40:09 ajacoutot Exp $
d10 2
d45 9
@


1.1
log
@Update to gdk-pixbuf-2.36.8.
@
text
@d1 1
a1 1
$OpenBSD$
d13 1
a13 1
@@@@ -450,14 +450,24 @@@@ AC_ARG_WITH(gdiplus,
@

