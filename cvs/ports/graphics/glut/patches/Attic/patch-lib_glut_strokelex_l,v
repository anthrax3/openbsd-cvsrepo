head	1.3;
access;
symbols
	OPENBSD_3_8:1.1.1.1.0.18
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.16
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.14
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.12
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.10
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.8
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.6
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.4
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	lebel_2001-Jun-20:1.1.1.1
	lebel:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2005.11.20.18.17.15;	author naddy;	state dead;
branches;
next	1.2;

1.2
date	2005.11.20.18.03.25;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.20.18.55.24;	author lebel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.06.20.18.55.24;	author lebel;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove bad strncmp() conversion
@
text
@$OpenBSD: patch-lib_glut_strokelex_l,v 1.2 2005/11/20 18:03:25 naddy Exp $
--- lib/glut/strokelex.l.orig	Sun Nov 20 18:53:41 2005
+++ lib/glut/strokelex.l	Sun Nov 20 18:52:58 2005
@@@@ -103,7 +103,7 @@@@ char	str[];
 			reserved = res_table;
 
 			do
-				if (!strcmp(str, reserved->word))
+				if (!strncmp(str, reserved->word, sizeof(str)))
 					break;
 			while ((++reserved)->word != 0);
 			return reserved->token;
@


1.2
log
@regen patches, do not replace whole files
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_glut_strokelex_l,v 1.1.1.1 2001/06/20 18:55:24 lebel Exp $
@


1.1
log
@Initial revision
@
text
@d1 8
a8 240
$OpenBSD$
--- lib/glut/strokelex.l.orig	Fri Aug  7 20:09:09 1998
+++ lib/glut/strokelex.l	Wed Jun 20 12:11:38 2001
@@@@ -1,131 +1,131 @@@@
-%{
-/* $XConsortium: lex.l,v 5.4 91/08/26 10:55:26 gildea Exp $ */
-
-/*****************************************************************
-Copyright (c) 1989,1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
-
-                        All Rights Reserved
-
-Permission to use, copy, modify, and distribute this software and its 
-documentation for any purpose and without fee is hereby granted, 
-provided that the above copyright notice appear in all copies and that
-both that copyright notice and this permission notice appear in 
-supporting documentation, and that the names of Sun Microsystems,
-the X Consortium, and MIT not be used in advertising or publicity 
-pertaining to distribution of the software without specific, written 
-prior permission.  
-
-SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
-INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
-SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
-DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
-WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
-ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
-SOFTWARE.
-
-******************************************************************/
-
-
-#include <stdlib.h>
-#include <ctype.h>
-#include <math.h>
-#include "strokegen.h"
-
-#if defined(ISC) && defined(SYSV) && defined(SYSV386) && __STDC__
-extern double atof(char *);
-#endif
-
-#ifdef FLEX_SCANNER
-int yylineno;
-#endif
-
-%}
-%%
-\'[^']*\' |
-\"[^"]*\"		return string(yytext, yyleng);
-#.*			;
-[ ,;\t\n]*              /* natural dilimters */ ;
-
-[a-zA-Z][a-zA-Z0-9_.]*	{
-				int	token;
-				if (token = res_words(yytext))
-					return token;
-				return string(yytext, yyleng);
-		 	}
-
-[+-]?[0-9]+\.?[0-9]*[eE][+-]?[0-9]+ |
-[+-]?[0-9]+\.[0-9]*     |
-\.[0-9]+		{
-                                yylval.dval = atof(yytext);
-				return REAL;
-                        }
-[+-]?[0-9]+#[0-9]+	{
-				return INTEGER;
-			}
-[+-]?[0-9]+		{
-				yylval.ival = atoi(yytext);
-				return INTEGER;
-			}
-[()]			;
-%%
-
-int
-res_words(str)
-char	str[];
-{
-	static	struct	res_strct {
-		char	*word;
-		int	token;
-		} res_table[] = {
-		{"BOTTOM",		BOTTOM},
-		{"CENTER",		CENTER},
-                {"PROPERTIES",          PROPERTIES},
-		{"CLOSE",		CLOSE},
-		{"FONTNAME",		FONTNAME},
-		{"INDEX",		INDEX},
-		{"MAGIC",		MAGIC},
-		{"OPEN",		OPEN},
-		{"RIGHT",		RIGHT},
-		{"STROKE",		STROKE},
-		{"TOP",			TOP},
-		{"VERTICES",		VERTICES},
-		{"BEARING",		BEARING},
-		{"L_SPACE",		L_SPACE},
-		{"WIDTH",		WIDTH},
-		{"R_SPACE",		R_SPACE},
-		{"NUM_CH",		NUM_CH},
-		{0, 0}
-		};
-
-		{
-			register struct res_strct *reserved;
-
-			reserved = res_table;
-
-			do
-				if (!strcmp(str, reserved->word))
-					break;
-			while ((++reserved)->word != 0);
-			return reserved->token;
-		}
-}
-
-int
-string(str, n)
-char	*str;
-int	n;
-{
-	if (*str == '\"' || *str == '\'')
-	{
-		str++;
-		n -= 2;	/* one for EOL, one for end quote */
-	}
-	if ((yylval.cval = (char *)malloc(n+1)) != NULL)
-	{
-		strncpy(yylval.cval, str, n);
-		yylval.cval[n] = '\0';
-		return STRING;
-	}
-	else
-		return 0;
-}
+%{
+/* $XConsortium: lex.l,v 5.4 91/08/26 10:55:26 gildea Exp $ */
+
+/*****************************************************************
+Copyright (c) 1989,1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
+
+                        All Rights Reserved
+
+Permission to use, copy, modify, and distribute this software and its 
+documentation for any purpose and without fee is hereby granted, 
+provided that the above copyright notice appear in all copies and that
+both that copyright notice and this permission notice appear in 
+supporting documentation, and that the names of Sun Microsystems,
+the X Consortium, and MIT not be used in advertising or publicity 
+pertaining to distribution of the software without specific, written 
+prior permission.  
+
+SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
+INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
+SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
+DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
+ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+SOFTWARE.
+
+******************************************************************/
+
+
+#include <stdlib.h>
+#include <ctype.h>
+#include <math.h>
+#include "strokegen.h"
+
+#if defined(ISC) && defined(SYSV) && defined(SYSV386) && __STDC__
+extern double atof(char *);
+#endif
+
+#ifdef FLEX_SCANNER
+int yylineno;
+#endif
+
+%}
+%%
+\'[^']*\' |
+\"[^"]*\"		return string(yytext, yyleng);
+#.*			;
+[ ,;\t\n]*              /* natural dilimters */ ;
+
+[a-zA-Z][a-zA-Z0-9_.]*	{
+				int	token;
+				if (token = res_words(yytext))
+					return token;
+				return string(yytext, yyleng);
+		 	}
+
+[+-]?[0-9]+\.?[0-9]*[eE][+-]?[0-9]+ |
+[+-]?[0-9]+\.[0-9]*     |
+\.[0-9]+		{
+                                yylval.dval = atof(yytext);
+				return REAL;
+                        }
+[+-]?[0-9]+#[0-9]+	{
+				return INTEGER;
+			}
+[+-]?[0-9]+		{
+				yylval.ival = atoi(yytext);
+				return INTEGER;
+			}
+[()]			;
+%%
+
+int
+res_words(str)
+char	str[];
+{
+	static	struct	res_strct {
+		char	*word;
+		int	token;
+		} res_table[] = {
+		{"BOTTOM",		BOTTOM},
+		{"CENTER",		CENTER},
+                {"PROPERTIES",          PROPERTIES},
+		{"CLOSE",		CLOSE},
+		{"FONTNAME",		FONTNAME},
+		{"INDEX",		INDEX},
+		{"MAGIC",		MAGIC},
+		{"OPEN",		OPEN},
+		{"RIGHT",		RIGHT},
+		{"STROKE",		STROKE},
+		{"TOP",			TOP},
+		{"VERTICES",		VERTICES},
+		{"BEARING",		BEARING},
+		{"L_SPACE",		L_SPACE},
+		{"WIDTH",		WIDTH},
+		{"R_SPACE",		R_SPACE},
+		{"NUM_CH",		NUM_CH},
+		{0, 0}
+		};
+
+		{
+			register struct res_strct *reserved;
+
+			reserved = res_table;
+
+			do
d10 3
a12 25
+					break;
+			while ((++reserved)->word != 0);
+			return reserved->token;
+		}
+}
+
+int
+string(str, n)
+char	*str;
+int	n;
+{
+	if (*str == '\"' || *str == '\'')
+	{
+		str++;
+		n -= 2;	/* one for EOL, one for end quote */
+	}
+	if ((yylval.cval = (char *)malloc(n+1)) != NULL)
+	{
+		strncpy(yylval.cval, str, n);
+		yylval.cval[n] = '\0';
+		return STRING;
+	}
+	else
+		return 0;
+}
@


1.1.1.1
log
@initial import of glut-3.7:
--
The OpenGL Utility Toolkit, a window system independent toolkit for
writing OpenGL programs. It implements a simple windowing application
programming interface (API) for OpenGL.  GLUT is designed for
constructing small to medium sized OpenGL programs. While GLUT is
well-suited to learning OpenGL and developing simple OpenGL
applications, GLUT is not a full-featured toolkit so large applications
requiring sophisticated user interfaces are better off using native
window system toolkits like Motif.
 
WWW: http://reality.sgi.com/opengl/glut3/glut3.html

Submitted by Dan Weeks <danimal@@danimal.org>
@
text
@@
