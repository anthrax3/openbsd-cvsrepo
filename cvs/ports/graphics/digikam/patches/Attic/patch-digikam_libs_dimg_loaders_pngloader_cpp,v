head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.0.18
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.20
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.16
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.14
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.12
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.10
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.04.29.21.10.21;	author zhuk;	state dead;
branches;
next	1.1;
commitid	u9TvebbKy1wgQMr9;

1.1
date	2011.07.08.20.47.26;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove KDE3 applications that have well-working KDE4+ counterparts.
@
text
@$OpenBSD: patch-digikam_libs_dimg_loaders_pngloader_cpp,v 1.1 2011/07/08 20:47:26 naddy Exp $

Fix build with png-1.5.

--- digikam/libs/dimg/loaders/pngloader.cpp.orig	Tue Jul  5 15:40:16 2011
+++ digikam/libs/dimg/loaders/pngloader.cpp	Tue Jul  5 15:44:42 2011
@@@@ -120,7 +120,7 @@@@ bool PNGLoader::load(const QString& filePath, DImgLoad
     // PNG error handling. If an error occurs during reading, libpng
     // will jump here
 
-    if (setjmp(png_ptr->jmpbuf))
+    if (setjmp(png_jmpbuf(png_ptr)))
     {
         DDebug() << k_funcinfo << "Internal libPNG error during reading file. Process aborted!" << endl;
         png_destroy_read_struct(&png_ptr, &info_ptr, NULL);
@@@@ -252,7 +252,7 @@@@ bool PNGLoader::load(const QString& filePath, DImgLoad
 #ifdef ENABLE_DEBUG_MESSAGES
                 DDebug() << "PNG in PNG_COLOR_TYPE_GRAY" << endl;
 #endif
-                png_set_gray_1_2_4_to_8(png_ptr);
+                png_set_expand_gray_1_2_4_to_8(png_ptr);
                 png_set_gray_to_rgb(png_ptr);
 
                 if (QImage::systemByteOrder() == QImage::LittleEndian)       // Intel
@@@@ -403,7 +403,8 @@@@ bool PNGLoader::load(const QString& filePath, DImgLoad
 
     QMap<int, QByteArray>& metaData = imageMetaData();
 
-    png_charp   profile_name, profile_data=NULL;
+    png_charp   profile_name;
+    png_bytep   profile_data=NULL;
     png_uint_32 profile_size;
     int         compression_type;
 
@@@@ -526,7 +527,7 @@@@ bool PNGLoader::save(const QString& filePath, DImgLoad
     // PNG error handling. If an error occurs during writing, libpng
     // will jump here
 
-    if (setjmp(png_ptr->jmpbuf))
+    if (setjmp(png_jmpbuf(png_ptr)))
     {
         DDebug() << k_funcinfo << "Internal libPNG error during writing file. Process aborted!" << endl;
         fclose(f);
@@@@ -599,7 +600,7 @@@@ bool PNGLoader::save(const QString& filePath, DImgLoad
 
     if (!profile_rawdata.isEmpty())
     {
-        png_set_iCCP(png_ptr, info_ptr, (png_charp)"icc", PNG_COMPRESSION_TYPE_BASE, profile_rawdata.data(), profile_rawdata.size());
+        png_set_iCCP(png_ptr, info_ptr, (png_charp)"icc", PNG_COMPRESSION_TYPE_BASE, (png_bytep)profile_rawdata.data(), profile_rawdata.size());
     }
 
     // -------------------------------------------------------------------
@


1.1
log
@Fix build with png-1.5.
@
text
@d1 1
a1 1
$OpenBSD$
@

