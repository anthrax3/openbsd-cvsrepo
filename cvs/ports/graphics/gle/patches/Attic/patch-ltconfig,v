head	1.3;
access;
symbols
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	lebel_2001-Jun-20:1.1.1.1
	lebel:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2001.10.08.16.29.46;	author lebel;	state dead;
branches;
next	1.2;

1.2
date	2001.08.07.14.03.03;	author lebel;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.20.18.57.28;	author lebel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.06.20.18.57.28;	author lebel;	state Exp;
branches;
next	;


desc
@@


1.3
log
@use in-tree libtool patches
@
text
@$OpenBSD: patch-ltconfig,v 1.2 2001/08/07 14:03:03 lebel Exp $
--- ltconfig.orig	Mon Jun 25 11:06:20 2001
+++ ltconfig	Mon Aug  6 23:41:56 2001
@@@@ -1105,6 +1105,9 @@@@ cygwin* | mingw*)
     with_gnu_ld=no
   fi
   ;;
+openbsd*)
+  with_gnu_ld=no
+  ;;
 
 esac
 
@@@@ -1402,10 +1405,21 @@@@ else
     ;;
 
   openbsd*)
-    archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linkopts'
-    hardcode_libdir_flag_spec='-R$libdir'
     hardcode_direct=yes
     hardcode_shlibpath_var=no
+    case "$host_os" in
+      openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)
+	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linkopts'
+	hardcode_libdir_flag_spec='-R$libdir'
+      ;;
+      *)
+	archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $linkopts'
+	hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+	if test "`echo __ELF__ | $CC -E - | grep __ELF__`" = "" -o "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	  export_dynamic_flag_spec='${wl}-E'
+	fi
+      ;;
+    esac
     ;;
 
   os2*)
@@@@ -2021,9 +2035,16 @@@@ netbsd*)
 
 openbsd*)
   version_type=sunos
-  if test "$with_gnu_ld" = yes; then
-    need_lib_prefix=no
-    need_version=no
+  need_lib_prefix=no
+  need_version=no
+  file_magic_cmd=/usr/bin/file
+  file_magic_test_file=`echo /usr/lib/libc.so.*`
+  if test "`echo __ELF__ | $CC -E - | grep __ELF__`" = "" -o "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB shared object'
+    shlibpath_overrides_runpath=no
+  else
+    deplibs_check_method='file_magic OpenBSD.* shared library'
+    shlibpath_overrides_runpath=yes
   fi
   library_names_spec='${libname}${release}.so$versuffix ${libname}.so$versuffix'
   finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
@


1.2
log
@sync libtool patches
@
text
@d1 1
a1 1
$OpenBSD: patch-ltconfig,v 1.2 2001/08/07 06:41:01 pvalchev Exp $
@


1.1
log
@Initial revision
@
text
@d1 14
a14 4
$OpenBSD$
--- ltconfig.orig	Sun Jun 11 14:04:25 2000
+++ ltconfig	Wed Jun 20 14:15:13 2001
@@@@ -1396,11 +1396,21 @@@@ else
a21 1
-    ;;
d23 1
a23 1
+      openbsd2.[01234567])
d30 1
a30 1
+	if [ "`/usr/bin/file /usr/lib/libc.so.* | grep ELF`" != "" ]; then
d34 2
a35 1
+    esac    ;;
d38 1
a38 2
     hardcode_libdir_flag_spec='-L$libdir'
@@@@ -1997,13 +2007,10 @@@@ netbsd*)
d45 11
a55 1
-  fi
a57 5
   shlibpath_var=LD_LIBRARY_PATH
+  deplibs_check_method='pass_all'
   ;;
 
 os2*)
@


1.1.1.1
log
@initial import of gle-3.0.4:
--
The GLE Tubing and Extrusion Library is a graphics application
programming interface (API). The library consists of a number of
"C" language subroutines for drawing tubing and extrusions. It is
a very fast implementation of these shapes, outperforming all other
implementations, most by orders of magnitude.  The library is
distributed in source code form, in a package that includes
documentation, a VRML proposal, Makefiles, and full source code and
header files. It uses the OpenGL (TM) programming API to perform
the actual drawing of the tubing and extrusions.
 
GLE is designed for and maintained on the Linux operating system,
and is known to run on other Unix operating systems such as AIX,
IRIX, Ultrix and HPUX with OpenGL or Mesa. GLE is also known to run
on IBM OS/2 Warp, Apple Macintosh OS9, and Microsoft Windows NT and
has been used to develop screen-savers for some of these popular
PC operating systems.
 
WWW: http://www.linas.org/gle/
@
text
@@
