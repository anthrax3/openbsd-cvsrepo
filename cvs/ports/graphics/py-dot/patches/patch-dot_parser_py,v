head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.03.13.08.12.14;	author shadchin;	state Exp;
branches;
next	;
commitid	Gbce6pXkc5Xftnty;


desc
@@


1.1
log
@Unbreak with py-parsing 2.1.0.
@
text
@$OpenBSD$
--- dot_parser.py.orig	Tue Jan  3 05:23:26 2012
+++ dot_parser.py	Wed Mar  2 15:52:33 2016
@@@@ -19,13 +19,17 @@@@ import glob
 import pydot
 import re
 import codecs
+import string
 
 from pyparsing import __version__ as pyparsing_version
 
-from pyparsing import ( nestedExpr, Literal, CaselessLiteral, Word, Upcase, OneOrMore, ZeroOrMore,
+from pyparsing import ( nestedExpr, Literal, CaselessLiteral, Word, OneOrMore, ZeroOrMore,
     Forward, NotAny, delimitedList, oneOf, Group, Optional, Combine, alphas, nums,
     restOfLine, cStyleComment, nums, alphanums, printables, empty, quotedString,
-    ParseException, ParseResults, CharsNotIn, _noncomma, dblQuotedString, QuotedString, ParserElement )
+    ParseException, ParseResults, CharsNotIn, dblQuotedString, QuotedString, ParserElement )
+
+printables = "".join( [ c for c in string.printable if c not in string.whitespace ] )
+_noncomma = "".join( [ c for c in printables if c != "," ] )
 
 
 class P_AttrList:
@
