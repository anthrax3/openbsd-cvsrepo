head	1.5;
access;
symbols
	OPENBSD_4_6:1.4.0.10
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.8
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2009.10.25.22.41.25;	author steven;	state dead;
branches;
next	1.4;

1.4
date	2007.05.25.12.19.14;	author steven;	state Exp;
branches;
next	1.3;

1.3
date	2006.07.26.06.45.27;	author steven;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.06.12.36.49;	author steven;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.24.22.22.57;	author steven;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to 2.49b (done at p2k9)
@
text
@$OpenBSD: patch-source_blender_blenkernel_intern_subsurf_ccg_c,v 1.4 2007/05/25 12:19:14 steven Exp $
--- source/blender/blenkernel/intern/subsurf_ccg.c.orig	Wed Dec 13 16:39:25 2006
+++ source/blender/blenkernel/intern/subsurf_ccg.c	Sun May 20 14:53:10 2007
@@@@ -700,7 +700,7 @@@@ DerivedMesh *ss_to_cdderivedmesh(CCGSubSurf *ss, int s
 	for(index = 0; index < totedge; index++) {
 		CCGEdge *e = edgeMap2[index];
 		unsigned int flags = 0;
-		int edgeIdx = (int)ccgSubSurf_getEdgeEdgeHandle(ss, e);
+		long edgeIdx = (long)ccgSubSurf_getEdgeEdgeHandle(ss, e);
 
 		if(!ccgSubSurf_getEdgeNumFaces(ss, e)) flags |= ME_LOOSEEDGE;
 
@@@@ -1110,7 +1110,7 @@@@ static void ccgDM_getFinalEdge(DerivedMesh *dm, int ed
 		med->v2 = getEdgeIndex(ss, e, x+1, edgeSize);
 
 		if(ccgdm->me) {
-			int edgeIdx = (int) ccgSubSurf_getEdgeEdgeHandle(ss, e);
+			long edgeIdx = (long) ccgSubSurf_getEdgeEdgeHandle(ss, e);
 
 			if(edgeIdx!=-1) {
 				MEdge *medge = ccgdm->me->medge;
@@@@ -1288,7 +1288,7 @@@@ static void ccgDM_copyFinalEdgeArray(DerivedMesh *dm, 
 		CCGEdge *e = ccgdm->edgeMap[index].edge;
 		unsigned int flags = 0;
 		int x;
-		int edgeIdx = (int)ccgSubSurf_getEdgeEdgeHandle(ss, e);
+		long edgeIdx = (long)ccgSubSurf_getEdgeEdgeHandle(ss, e);
 
 		if(!ccgSubSurf_getEdgeNumFaces(ss, e)) flags |= ME_LOOSEEDGE;
 
@@@@ -1341,7 +1341,7 @@@@ static void ccgDM_copyFinalFaceArray(DerivedMesh *dm, 
 
 		if(!faceFlags) {
 			if(origFaces) {
-				int origIdx = (int) ccgSubSurf_getFaceFaceHandle(ss, f);
+				long origIdx = (long) ccgSubSurf_getFaceFaceHandle(ss, f);
 				MFace *origMFace = &origFaces[origIdx];
 
 				mat_nr = origMFace->mat_nr;
@@@@ -2300,7 +2300,7 @@@@ static CCGDerivedMesh *getCCGDerivedMesh(CCGSubSurf *s
 		int mapIndex = ccgDM_getEdgeMapIndex(ccgdm, ss, e);
 		int x;
 		int vertIdx[2];
-		int edgeIdx = (int)ccgSubSurf_getEdgeEdgeHandle(ss, e);
+		long edgeIdx = (long)ccgSubSurf_getEdgeEdgeHandle(ss, e);
 
 		CCGVert *v;
 		v = ccgSubSurf_getEdgeVert0(ss, e);
@@@@ -2456,7 +2456,7 @@@@ void subsurf_calculate_limit_positions(Mesh *me, float
 	vi = ccgSubSurf_getVertIterator(ss);
 	for (; !ccgVertIterator_isStopped(vi); ccgVertIterator_next(vi)) {
 		CCGVert *v = ccgVertIterator_getCurrent(vi);
-		int idx = (int) ccgSubSurf_getVertVertHandle(ss, v);
+		long idx = (long) ccgSubSurf_getVertVertHandle(ss, v);
 		int N = ccgSubSurf_getVertNumEdges(ss, v);
 		int numFaces = ccgSubSurf_getVertNumFaces(ss, v);
 		float *co;
@


1.4
log
@update to 2.44
@
text
@d1 1
a1 1
$OpenBSD: patch-source_blender_blenkernel_intern_subsurf_ccg_c,v 1.3 2006/07/26 06:45:27 steven Exp $
@


1.3
log
@update to blender 2.42
@
text
@d1 16
a16 7
$OpenBSD: patch-source_blender_blenkernel_intern_subsurf_ccg_c,v 1.2 2006/06/06 12:36:49 steven Exp $
--- source/blender/blenkernel/intern/subsurf_ccg.c.orig	Sat Mar 11 17:13:09 2006
+++ source/blender/blenkernel/intern/subsurf_ccg.c	Fri Jul 21 16:51:10 2006
@@@@ -608,7 +608,7 @@@@ static DispListMesh *ss_to_displistmesh(
 				flags |= ME_SEAM;
 			}
 		} else {
d20 18
a37 18
 			if (edgeIdx!=-1) {
 				MEdge *origMed = &medge[edgeIdx];
@@@@ -652,7 +652,7 @@@@ static DispListMesh *ss_to_displistmesh(
 		int mapIndex = ccgDM_getFaceMapIndex(ccgdm, ss, f);
 
 		if (!ssFromEditmesh) {
-			int origIdx = (int) ccgSubSurf_getFaceFaceHandle(ss, f);
+			long origIdx = (long) ccgSubSurf_getFaceFaceHandle(ss, f);
 			MFace *origMFace = &mface[origIdx];
 			
 			if (tface) {
@@@@ -804,7 +804,8 @@@@ static void ss_sync_from_mesh(CCGSubSurf
 	int totvert = dlm?dlm->totvert:me->totvert;
 	int totedge = dlm?dlm->totedge:me->totedge;
 	int totface = dlm?dlm->totface:me->totface;
-	int i, index;
+	int index;
+	long i;
d39 7
a45 1
 	ccgSubSurf_initFullSync(ss);
d47 3
a49 1
@@@@ -1793,7 +1794,7 @@@@ void subsurf_calculate_limit_positions(M
@


1.2
log
@update to blender 2.41

from Matthias Kilian <kili at outback.escape.de>
@
text
@d1 3
a3 3
$OpenBSD$
--- source/blender/blenkernel/intern/subsurf_ccg.c.orig	Fri Jan 13 07:56:32 2006
+++ source/blender/blenkernel/intern/subsurf_ccg.c	Sun Jun  4 21:36:56 2006
d28 1
a28 1
+		long i;
d32 1
a32 1
@@@@ -1783,7 +1784,7 @@@@ void subsurf_calculate_limit_positions(M
@


1.1
log
@update to 2.37a; native build

help and ok naddy@@, "looks good" aanriot@@
@
text
@d2 8
a9 8
--- source/blender/blenkernel/intern/subsurf_ccg.c.orig	Mon Nov 21 22:43:17 2005
+++ source/blender/blenkernel/intern/subsurf_ccg.c	Mon Nov 21 22:46:27 2005
@@@@ -313,7 +313,7 @@@@ static DispListMesh *subSurf_createDispL
 					med->flag|= ME_SEAM;
 				}
 			} else {
-				int edgeIdx = (int) ccgSubSurf_getEdgeEdgeHandle(ss, e);
+				long edgeIdx = (long) ccgSubSurf_getEdgeEdgeHandle(ss, e);
d11 4
a14 4
 					/* Edges created by lib have handle of -1 */
 				if (edgeIdx!=-1 && ssm->me->medge) {
@@@@ -377,7 +377,7 @@@@ static DispListMesh *subSurf_createDispL
 		int flag;
d16 1
a16 1
 		if (ssm->controlType==SUBSURF_CONTROLTYPE_MESH) {
d19 10
a28 4
 			MFace *origMFace = &((MFace*) ssm->me->mface)[origIdx];
 			if (ssm->me->tface)
 				origTFace = &((TFace*)ssm->me->tface)[origIdx];
@@@@ -501,7 +501,7 @@@@ static void subSurf_sync(SubSurf *ss, in
d30 1
a30 4
 	if (ss->controlType==SUBSURF_CONTROLTYPE_MESH) {
 		CCGVertHDL fVerts[4];
-		int i;
+		long i;
d32 2
a33 4
 		for (i=0; i<ss->me->totvert; i++) {
 			ccgSubSurf_syncVert(ss->subSurf, (CCGVertHDL) i, ss->me->mvert[i].co);
@@@@ -981,7 +981,7 @@@@ void subsurf_calculate_limit_positions(M
 	vi = ccgSubSurf_getVertIterator(ss->subSurf);
d36 4
a39 4
-		int idx = (int) ccgSubSurf_getVertVertHandle(ss->subSurf, v);
+		long idx = (long) ccgSubSurf_getVertVertHandle(ss->subSurf, v);
 		int N = ccgSubSurf_getVertNumEdges(ss->subSurf, v);
 		int numFaces = ccgSubSurf_getVertNumFaces(ss->subSurf, v);
@

