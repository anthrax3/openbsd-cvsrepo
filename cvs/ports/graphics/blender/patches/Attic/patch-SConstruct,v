head	1.8;
access;
symbols
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.6
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2012.02.26.20.37.26;	author pascal;	state dead;
branches;
next	1.7;

1.7
date	2011.07.20.12.56.54;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2009.10.25.22.41.25;	author steven;	state Exp;
branches;
next	1.5;

1.5
date	2007.09.20.19.58.49;	author steven;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.25.12.19.14;	author steven;	state Exp;
branches;
next	1.3;

1.3
date	2006.07.26.06.45.27;	author steven;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.06.12.36.49;	author steven;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.24.22.22.57;	author steven;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update blender to 2.62.

tested by armani@@

minor tweaks and ok ajacoutot@@
@
text
@$OpenBSD: patch-SConstruct,v 1.7 2011/07/20 12:56:54 sthen Exp $
--- SConstruct.orig	Tue Sep  1 16:23:49 2009
+++ SConstruct	Wed Jul 20 13:39:38 2011
@@@@ -143,6 +143,8 @@@@ env.SConscriptChdir(0)
 crossbuild = B.arguments.get('BF_CROSS', None)
 if crossbuild and platform!='win32':
 	platform = 'linuxcross'
+if platform.find('openbsd') != -1:
+	platform = 'openbsd'
 
 env['OURPLATFORM'] = platform
 
@@@@ -596,7 +598,7 @@@@ if env['WITH_BF_PLAYER']:
 
 if not env['WITH_BF_GAMEENGINE']:
 	blendernogame = env.Alias('blendernogame', B.program_list)
-	Depends(blendernogame,installtarget)
+#	Depends(blendernogame,installtarget)
 
 if 'blenderlite' in B.targets:
 	blenderlite = env.Alias('blenderlite', B.program_list)
@


1.7
log
@fix with openbsd!=4.x
@
text
@d1 1
a1 1
$OpenBSD: patch-SConstruct,v 1.6 2009/10/25 22:41:25 steven Exp $
@


1.6
log
@update to 2.49b (done at p2k9)
@
text
@d1 13
a13 4
$OpenBSD: patch-SConstruct,v 1.4 2007/05/25 12:19:14 steven Exp $
--- SConstruct.orig	Tue Sep  1 17:23:49 2009
+++ SConstruct	Sat Oct 10 19:25:41 2009
@@@@ -596,7 +596,7 @@@@ if env['WITH_BF_PLAYER']:
@


1.5
log
@update to 2.45
add an icon

partly from Vlad Glagolev
@
text
@d2 3
a4 3
--- SConstruct.orig	Tue Sep 18 06:59:24 2007
+++ SConstruct	Tue Sep 18 19:14:05 2007
@@@@ -424,7 +424,7 @@@@ if env['WITH_BF_PLAYER']:
d7 3
a9 5
     blendernogame = env.Alias('blendernogame', B.program_list)
-    Depends(blendernogame,installtarget)
+#    Depends(blendernogame,installtarget)
 
 Depends(nsiscmd, allinstall)
d11 2
@


1.4
log
@update to 2.44
@
text
@d1 4
a4 4
$OpenBSD: patch-SConstruct,v 1.3 2006/07/26 06:45:27 steven Exp $
--- SConstruct.orig	Mon May  7 18:09:40 2007
+++ SConstruct	Sun May 20 14:53:08 2007
@@@@ -607,7 +607,7 @@@@ if env['WITH_BF_PLAYER']:
d11 2
a12 2
 Default(B.program_list)
 Default(installtarget)
@


1.3
log
@update to blender 2.42
@
text
@d1 4
a4 4
$OpenBSD$
--- SConstruct.orig	Sat Jul 22 09:29:10 2006
+++ SConstruct	Sat Jul 22 09:29:15 2006
@@@@ -373,7 +373,7 @@@@ if env['WITH_BF_PLAYER']:
a10 1
 
d12 1
@


1.2
log
@update to blender 2.41

from Matthias Kilian <kili at outback.escape.de>
@
text
@d1 4
a4 72
$OpenBSD: patch-SConstruct,v 1.1 2005/11/24 22:22:57 steven Exp $
--- SConstruct.orig	Tue Dec 20 16:56:12 2005
+++ SConstruct	Tue Jan  3 16:05:47 2006
@@@@ -666,9 +666,9 @@@@ elif sys.platform=='openbsd3':
 	build_blender_static = 'false'
 	build_blender_player = 'false'
 	build_blender_plugin = 'false'
-	release_flags = ['-O2']
-	debug_flags = ['-O2', '-g']
-	extra_flags = ['-pipe', '-fPIC', '-funsigned-char']
+	release_flags = []
+	debug_flags = ['-g']
+	extra_flags = ['-fPIC', '-funsigned-char']
 	cxxflags = []
 	defines = []
 	warn_flags = ['-Wall','-W']
@@@@ -682,17 +682,21 @@@@ elif sys.platform=='openbsd3':
 	z_include = ['/usr/include']
 	# png library information
 	png_lib = ['png']
-	png_libpath = ['/usr/local/lib']
-	png_include = ['/usr/local/include/libpng']
+	png_libpath = ['!!LOCALBASE!!/lib']
+	png_include = ['!!LOCALBASE!!/include/libpng']
 	# jpeg library information
 	jpeg_lib = ['jpeg']
-	jpeg_libpath = ['/usr/local/lib']
-	jpeg_include = ['/usr/local/include']
+	jpeg_libpath = ['!!LOCALBASE!!/lib']
+	jpeg_include = ['!!LOCALBASE!!/include']
+	# tiff library information
+	tiff_lib = ['tiff']
+	tiff_libpath = ['!!LOCALBASE!!/lib']
+	tiff_include = ['!!LOCALBASE!!/include']
 	# OpenGL library information
 	opengl_lib = ['GL', 'GLU']
-	opengl_static = ['/usr/lib/libGL.a', '/usr/lib/libGLU.a']
-	opengl_libpath = ['/usr/lib', '/usr/X11R6/lib']
-	opengl_include = ['/usr/X11R6/include/']
+	opengl_static = ['!!X11BASE!!/lib/libGL.a', '!!X11BASE!!/lib/libGLU.a']
+	opengl_libpath = ['!!X11BASE!!/lib']
+	opengl_include = ['!!X11BASE!!/include/']
 	# SDL library information
 	sdl_env.ParseConfig ('sdl-config --cflags --libs')
 	sdl_cflags = sdl_env.Dictionary()['CCFLAGS']
@@@@ -723,13 +727,13 @@@@ elif sys.platform=='openbsd3':
         ftgl_lib = []
         ftgl_libpath = []
         ftgl_include = ['#extern/bFTGL/include']
-	freetype_env.ParseConfig('pkg-config --cflags --libs freetype2')
+	freetype_env.ParseConfig('freetype-config --cflags --libs 2>/dev/null')
 	freetype_lib = freetype_env.Dictionary()['LIBS']
 	freetype_libpath = freetype_env.Dictionary()['LIBPATH']
 	freetype_include = freetype_env.Dictionary()['CPPPATH']
-	gettext_lib = []
-	gettext_libpath = []
-	gettext_include = []
+	gettext_lib = ['intl', 'iconv']
+	gettext_libpath = ['!!LOCALBASE!!/lib']
+	gettext_include = ['!!LOCALBASE!!/include']
 	# OpenAL library information
 	openal_lib = ['openal']
 	openal_libpath = ['/usr/lib']
@@@@ -855,8 +859,8 @@@@ else:
 	
 	config.write ("\n# Extra compiler flags can be defined here.\n")
 	config.write ("DEFINES = %s\n"%(my_defines))
-	config.write ("CCFLAGS = %s\n"%(my_ccflags))
-	config.write ("CXXFLAGS = %s\n"%(my_cxxflags))
+	config.write ("CCFLAGS = %s\n"%(env['ENV']['CFLAGS'].split()))
+	config.write ("CXXFLAGS = %s\n"%(env['ENV']['CXXFLAGS'].split()))
 	config.write ("LDFLAGS = %s\n"%(my_ldflags))
d6 7
a12 16
 	config.write ("USE_INTERNATIONAL = %r\n"%(use_international))
@@@@ -872,10 +876,10 @@@@ else:
 	config.write ("USE_QUICKTIME = %r\n"%(use_quicktime))
 	config.write ("USE_FLUIDSIM = %r\n"%(use_fluidsim))
 	config.write ("\n# Compiler information.\n")
-	config.write ("HOST_CC = %r\n"%(env_dict['CC']))
-	config.write ("HOST_CXX = %r\n"%(env_dict['CXX']))
-	config.write ("TARGET_CC = %r\n"%(env_dict['CC']))
-	config.write ("TARGET_CXX = %r\n"%(env_dict['CXX']))
+	config.write ("HOST_CC = %r\n"%(env['ENV']['CC']))
+	config.write ("HOST_CXX = %r\n"%(env['ENV']['CXX']))
+	config.write ("TARGET_CC = %r\n"%(env['ENV']['CC']))
+	config.write ("TARGET_CXX = %r\n"%(env['ENV']['CXX']))
 	config.write ("TARGET_AR = %r\n"%(env_dict['AR']))
 	config.write ("PATH = %r\n"%(os.environ['PATH']))
 	config.write ("\n# External library information.\n")
@


1.1
log
@update to 2.37a; native build

help and ok naddy@@, "looks good" aanriot@@
@
text
@d1 4
a4 4
$OpenBSD$
--- SConstruct.orig	Mon Jun 13 22:56:19 2005
+++ SConstruct	Mon Nov 21 10:27:22 2005
@@@@ -607,9 +607,9 @@@@ elif sys.platform=='openbsd3':
d17 1
a17 1
@@@@ -623,17 +623,17 @@@@ elif sys.platform=='openbsd3':
d31 4
d46 1
a46 1
@@@@ -660,13 +660,13 @@@@ elif sys.platform=='openbsd3':
d64 1
a64 1
@@@@ -786,8 +786,8 @@@@ else:
d75 1
a75 2
@@@@ -800,10 +800,10 @@@@ else:
 	config.write ("USE_FMOD = %r\n"%(use_fmod))
d77 1
@

