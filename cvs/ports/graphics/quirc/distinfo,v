head	1.2;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	czarkoff_20160826:1.1.1.1
	czarkoff:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.05.06.15.10.17;	author espie;	state Exp;
branches;
next	1.1;
commitid	TS4ZnGLh74iv7EUM;

1.1
date	2016.08.26.10.14.14;	author czarkoff;	state Exp;
branches
	1.1.1.1;
next	;
commitid	6gaXqdwGwqxkuMVw;

1.1.1.1
date	2016.08.26.10.14.14;	author czarkoff;	state Exp;
branches;
next	;
commitid	6gaXqdwGwqxkuMVw;


desc
@@


1.2
log
@adjust distinfo post DISTFILES change
@
text
@SHA256 (libquirc-0.0.20160815-5b262480.tar.gz) = JoGCNA4EPULfDycL4F8LRbf8XuiOP4TocE6DKNumNNY=
SIZE (libquirc-0.0.20160815-5b262480.tar.gz) = 37188
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
SHA256 (libquirc-0.0.20160815.tar.gz) = JoGCNA4EPULfDycL4F8LRbf8XuiOP4TocE6DKNumNNY=
SIZE (libquirc-0.0.20160815.tar.gz) = 37188
@


1.1.1.1
log
@Quirc is a library for extracting and decoding QR codes from images. It has
several features which make it a good choice for this purpose:

  * It is fast enough to be used with realtime video: extracting and decoding
    from VGA frame takes about 50 ms on a modern x86 core.

  * It has a robust and tolerant recognition algorithm. It can correctly
    recognise and decode QR codes which are rotated and/or oblique to the
    camera. It can also distinguish and decode multiple codes within the same
    image.

  * It is easy to use, with a simple API described in a single commented header
    file (see below for an overview).

  * It is small and easily embeddable, with no dependencies other than standard
    C functions.

  * It has a very small memory footprint: one byte per image pixel, plus a few
    kB per decoder object.

  * It uses no global mutable state, and is safe to use in a multithreaded
    application.

  * BSD-licensed, with almost no restrictions regarding use and/or modification.

OK sthen@@
@
text
@@
