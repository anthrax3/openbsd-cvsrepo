head	1.3;
access;
symbols
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.1.0.16
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.14
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2008.06.18.11.44.28;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2007.10.22.20.36.15;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.23.05.58.53;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.3
log
@- update to gtkam-0.1.15 following the libgphoto2 update
@
text
@$OpenBSD: patch-src_gtkam-save_c,v 1.2 2007/10/22 20:36:15 ajacoutot Exp $
--- src/gtkam-save.c.orig	Thu Dec 14 19:38:12 2006
+++ src/gtkam-save.c	Sun Oct 21 15:13:25 2007
@@@@ -167,9 +167,11 @@@@ default_numbering_start(const GtkamSave *save)
 	gchar *tail,*prefix;
 	int max = 1;
 	int plen, current;
+	gchar *filename ;
 
-	if (!(dir = g_dir_open (gtk_file_chooser_get_filename (
-		GTK_FILE_CHOOSER (save)) , 0, NULL))) return 1;
+	filename = gtk_file_chooser_get_filename (GTK_FILE_CHOOSER (save));
+	if (filename == NULL) return 1;
+	if (!(dir = g_dir_open (filename , 0, NULL))) return 1;
 	prefix = g_strdup (gtk_entry_get_text
 					(GTK_ENTRY (save->priv->prefix_entry)));
 	plen = strlen (prefix);
@


1.2
log
@- update to gtkam-0.1.14 (libgphoto-2.4.0 compatible)
- take maintainership (former maintainer timeout)

ok espie@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@cast NULL to (void *) in execl call to make sure it is 64 bit
@
text
@d2 16
a17 11
--- src/gtkam-save.c.orig	2003-10-22 20:18:55.000000000 -0600
+++ src/gtkam-save.c	2003-10-22 20:19:09.000000000 -0600
@@@@ -351,7 +351,7 @@@@ save_file (GtkamSave *save, CameraFile *
 	} else {
 		progname = gtk_entry_get_text (save->priv->program);
 		if (progname && fork ()) {
-			execlp (progname, progname, full_path, NULL);
+			execlp (progname, progname, full_path, (void *)NULL);
 			_exit (0);
 		} 
 	}
@

