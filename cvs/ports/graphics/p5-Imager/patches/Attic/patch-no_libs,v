head	1.4;
access;
symbols
	OPENBSD_4_1:1.3.0.22
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.20
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.18
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2007.07.31.15.40.56;	author simon;	state dead;
branches;
next	1.3;

1.3
date	2001.11.17.08.16.53;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.22.00.31.55;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2001.04.17.10.07.13;	author reinhard;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to version 0.59, cpanify, fix LIB_DEPENDS for FLAVOR=libs, use
CONFIGURE_ARGS instead of patches and remove quotes around COMMENT

ok pvalchev@@ (MAINTAINER)
@
text
@--- Makefile.PL.orig	Tue Oct 30 01:32:44 2001
+++ Makefile.PL	Thu Nov 15 23:32:02 2001
@@@@ -151,9 +151,9 @@@@ bugs.  Imager can crash or display other
 reading or writing gif images.  Some of the gif tests can even fail
 since they stress some parts of the buggy code.
 
-Do you want to remove gif support? [Y/n]
+I am deleting gif/ungif support.
 EOFF
-    my $resp = <STDIN>;
+    my $resp = "y";
     chomp($resp);
     if ($resp ne "n") {
       delete $formats{'gif'};
@@@@ -263,7 +263,7 @@@@ sub pathcheck {
 sub init {
 
   @@definc{'/usr/include'}=();
-  @@incs=(qw(/usr/include/freetype2 /usr/local/include/freetype2 /usr/include /usr/local/include /usr/include/freetype /usr/local/include/freetype), split /:/, $INCPATH );
+  @@incs=(qw(/usr/include), split /:/, $INCPATH );
   @@libs=(split(/ /, $Config{'libpth'}), split(/:/, $LIBPATH) );
   if ($^O =~ /win32/i && $Config{cc} =~ /\bcl\b/i) {
     push(@@incs, split /;/, $ENV{INCLUDE}) if exists $ENV{INCLUDE};
@@@@ -274,126 +274,6 @@@@ sub init {
     push(@@incs, '/usr/include/w32api') if -d '/usr/lib/w32api';
   }
 
-  $formats{'jpeg'}={
-		    order=>'21',
-		    def=>'HAVE_LIBJPEG',
-		    inccheck=>sub { $_[0] eq 'jpeglib.h' },
-		    libcheck=>sub { $_[0] eq "libjpeg$aext" or $_ eq "libjpeg.$lext" },
-		    libfiles=>'-ljpeg',
-		    objfiles=>'jpeg.o',
-		    docs=>q{
-			    In order to use jpeg with this module you need to have libjpeg
-			    installed on your computer}
-		   };
-
-  $formats{'tiff'}={
-		    order=>'23',
-		    def=>'HAVE_LIBTIFF',
-		    inccheck=>sub { $_[0] eq 'tiffio.h' },
-		    libcheck=>sub { $_[0] eq "libtiff$aext" or $_ eq "libtiff.$lext" },
-		    libfiles=>'-ltiff',
-		    objfiles=>'tiff.o',
-		    docs=>q{
-			    In order to use tiff with this module you need to have libtiff
-			    installed on your computer}
-		   };
-
-  $formats{'png'}={
-		   order=>'22',
-		   def=>'HAVE_LIBPNG',
-		   inccheck=>sub { $_[0] eq 'png.h' },
-		   libcheck=>sub { $_[0] eq "libpng$aext" or $_[0] eq "libpng.$lext" },
-		   libfiles=>'-lpng -lz',
-		   objfiles=>'png.o',
-		   docs=>q{
-			   Png stands for Portable Network Graphics and is intended as
-			   a replacement for gif on the web. It is patent free and
-			   is recommended by the w3c, you need libpng to use these formats}
-		  };
-
-  $formats{'gif'}={
-		   order=>'20',
-		   def=>'HAVE_LIBGIF',
-		   inccheck=>sub { $_[0] eq 'gif_lib.h' },
-		   libcheck=>sub { $_[0] eq "libgif$aext" or $_[0] eq "libgif.$lext" },
-		   libfiles=>'-lgif',
-		   objfiles=>'gif.o',
-		   docs=>q{
-			   gif is the de facto standard for webgraphics at the moment,
-			   it does have some patent problems. If you have giflib and
-			   are not in violation with the unisys patent you should use
-			   this instead of the 'ungif' option.  Note that they cannot
-			   be in use at the same time}
-		  };
-
-  $formats{'ungif'}={
-		     order=>'21',
-		     def=>'HAVE_LIBGIF',
-		     inccheck=>sub { $_[0] eq 'gif_lib.h' },
-		     libcheck=>sub { $_[0] eq "libungif$aext" or $_[0] eq "libungif.$lext" },
-		     libfiles=>'-lungif',
-		     objfiles=>'gif.o',
-		     docs=>q{
-			     gif is the de facto standard for webgraphics at the moment,
-			     it does have some patent problems. If you have libungif and
-			     want to create images free from LZW patented compression you
-			     should use this option instead of the 'gif' option}
-		    };
-
-  $formats{'T1-fonts'}={
-			order=>'30',
-			def=>'HAVE_LIBT1',
-			inccheck=>sub { $_[0] eq 't1lib.h' },
-			libcheck=>sub { $_[0] eq "libt1$aext" or $_[0] eq "libt1.$lext" },
-			libfiles=>'-lt1',
-			objfiles=>'',
-			docs=>q{
-				postscript t1 fonts are scalable fonts. They can include 
-				ligatures and kerning information and generally yield good
-				visual quality. We depend on libt1 to rasterize the fonts
-				for use in images.}
-		       };
-
-  $formats{'TT-fonts'}={
-			order=>'31',
-			def=>'HAVE_LIBTT',
-			inccheck=>sub { $_[0] eq 'freetype.h' },
-			libcheck=>sub { $_[0] eq "libttf$aext" or $_[0] eq "libttf.$lext" },
-			libfiles=>'-lttf',
-			objfiles=>'',
-			docs=>q{
-				Truetype fonts are scalable fonts. They can include 
-				kerning and hinting information and generally yield good
-				visual quality esp on low resultions. The freetype library is
-				used to rasterize for us. The only drawback is that there
-				are alot of badly designed fonts out there.}
-		       };
-  $formats{'w32'} = {
-		     order=>40,
-		     def=>'HAVE_WIN32',
-		     inccheck=>sub { lc $_[0] eq 'windows.h' },
-		     libcheck=>sub { lc $_[0] eq 'gdi32.lib' 
-				       || lc $_[0] eq 'libgdi32.a' },
-		     libfiles=>$^O eq 'cygwin' ? '-lgdi32' : '',
-		     objfiles=>'win32.o',
-		     docs => <<DOCS
-Uses the Win32 GDI for rendering text.
-
-This currently only works on under normal Win32 and cygwin.
-DOCS
-		    };
-  $formats{'freetype2'} = {
-                           order=>'29',
-                           def=>'HAVE_FT2',
-                           inccheck=>sub { lc $_[0] eq 'ft2build.h' },
-                           libcheck=>sub { $_[0] eq "libfreetype$aext" or $_[0] eq "libfreetype.$lext" },
-                           libfiles=>'-lfreetype',
-                           objfiles=>'freetyp2.o',
-                           docs=><<DOCS
-Freetype 2 supports both Truetype and Type 1 fonts, both of which are
-scalable.
-DOCS
-                          };
   # Make fix indent
   for (keys %formats) { $formats{$_}->{docs} =~ s/^\s+/  /mg; }
 }
@


1.3
log
@Update to p5-Imager-0.39
@
text
@@


1.2
log
@Update to v0.38.
- Do not depend on libgif - there are bugs which cause Imager to
crash or behave strangely after reading or writing gif images.
Assume that we do not want to link with gif to avoid port
interactiveness in the "libs" flavor.
@
text
@d1 15
a15 4
$OpenBSD: patch-no_libs,v 1.1 2001/04/17 10:07:13 reinhard Exp $
--- Makefile.PL.orig	Mon May 21 17:15:55 2001
+++ Makefile.PL	Mon May 21 17:16:48 2001
@@@@ -261,107 +261,13 @@@@ sub pathcheck {
d19 2
a20 2
-  @@incs=(qw(/usr/include /usr/local/include /usr/include/freetype /usr/local/include/freetype), split /:/, $INCPATH );
+  @@incs=(qw(/usr/include /usr/local/include/freetype), split /:/, $INCPATH );
d24 2
a25 1
     push(@@libs, split /;/, $ENV{LIB}) if exists $ENV{LIB};
d98 1
a98 1
-			libcheck=>sub { $_[0] eq 'libt1.a' or $_[0] eq "libt1.$lext" },
d112 1
a112 1
-			libcheck=>sub { $_[0] eq 'libttf.a' or $_[0] eq "libttf.$lext" },
d122 26
@


1.1
log
@- Switch MASTER_SITES to CPAN.
- Add a patch when no FLAVOR is specified to make sure we don't build             with any libraries even if they are installed.

from maintainer
@
text
@d1 4
a4 4
$OpenBSD: update-patches,v 1.4 2001/03/31 22:54:41 espie Exp $
--- Makefile.PL.orig	Thu Apr  5 22:14:10 2001
+++ Makefile.PL	Thu Apr  5 22:15:05 2001
@@@@ -194,103 +194,9 @@@@ sub pathcheck {
d9 1
a9 1
+  @@incs=(qw(/usr/include /usr/local/include), split /:/, $INCPATH );
d11 4
d20 1
a20 1
-		    libcheck=>sub { $_[0] eq 'libjpeg.a' or $_ eq "libjpeg.$lext" },
d32 1
a32 1
-		    libcheck=>sub { $_[0] eq 'libtiff.a' or $_ eq "libtiff.$lext" },
d44 1
a44 1
-		   libcheck=>sub { $_[0] eq 'libpng.a' or $_[0] eq "libpng.$lext" },
d57 1
a57 1
-		   libcheck=>sub { $_[0] eq 'libgif.a' or $_[0] eq "libgif.$lext" },
d72 1
a72 1
-		     libcheck=>sub { $_[0] eq 'libungif.a' or $_[0] eq "libungif.$lext" },
@

