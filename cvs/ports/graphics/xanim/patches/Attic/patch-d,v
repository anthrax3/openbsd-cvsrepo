head	1.4;
access;
symbols
	OPENBSD_5_7:1.3.0.66
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.64
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.62
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.60
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.58
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.56
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.54
	OPENBSD_5_0:1.3.0.52
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.50
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.48
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.46
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.44
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.42
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.40
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.38
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.36
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.34
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.32
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.30
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.28
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.26
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.24
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.22
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.20
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.18
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.16
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.14
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.12
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_TRACKING_SWITCH:1.3
	OPENBSD_2_9:1.3.0.10
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.8
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.6
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	sound-fixed:1.1.1.1
	xanim-2_70_7_0:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.06.29.22.38.59;	author ratchov;	state dead;
branches;
next	1.3;
commitid	azHGSY14OZ25LlqE;

1.3
date	99.03.22.17.34.45;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	99.03.19.01.20.48;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	98.12.02.02.27.02;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.12.02.02.27.02;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Regen patches. No md5 change in patched files. Suggested by sthen.
@
text
@--- xa_acodec.c.orig	Sun Mar 21 23:36:25 1999
+++ xa_acodec.c	Mon Mar 22 18:03:48 1999
@@@@ -198,7 +198,17 @@@@
   {
     if (inc_cnt < (1<<24))
     {	/*** Decode Sample ***/
-      dataL = (spec & 4)?(ibuf[1]):(*ibuf);	
+	   if (snd_hdr->volume_boost)
+			{
+			unsigned c = snd_hdr->volume_boost;
+			unsigned d = 8 - c;
+			if (spec & 4)
+				dataL = (ibuf[1]<<c) | (ibuf[0]>>d);
+			else
+				dataL = (ibuf[0]<<c) | (ibuf[1]>>d);
+			}
+		else
+			dataL = (spec & 4)?(ibuf[1]):(*ibuf);	
       ibuf += bps;	byte_cnt += bps;	samp_cnt--;
       inc_cnt += inc;
     }
@@@@ -1884,6 +1894,19 @@@@
   new_snd->inc = inc = (xaULONG)( finc * (double)(1<<24) );
   new_snd->inc_cnt = 0;
 
+  if (vaudiof->amp_scale < 2.0)
+  	new_snd->volume_boost = 0;
+  else if (vaudiof->amp_scale < 4.0)
+  	new_snd->volume_boost = 1;
+  else if (vaudiof->amp_scale < 8.0)
+  	new_snd->volume_boost = 2;
+  else if (vaudiof->amp_scale < 16.0)
+  	new_snd->volume_boost = 3;
+  else if (vaudiof->amp_scale < 32.0)
+  	new_snd->volume_boost = 4;
+  else 
+  	new_snd->volume_boost = 5;
+
   /* Determine Chunk Time */
   ftime = ((double)(xa_vaudio_hard_buff) * 1000.0) / (double)(hfreq);
   new_snd->ch_time = (xaLONG)ftime;
@@@@ -2167,6 +2190,7 @@@@
       break;
 
     case XA_AUDIO_LINEAR_1M:
+    case XA_AUDIO_SIGNED_1M:
       {
 	switch(itype)
 	{
@@@@ -2183,7 +2207,8 @@@@
 	  case XA_AUDIO_LINEAR_2SL:
 	  case XA_AUDIO_LINEAR_2SB:
 		new_snd->spec = 
-		    ((itype & XA_AUDIO_TYPE_MASK)==XA_AUDIO_LINEAR)?(0):(1);
+		    ((itype & XA_AUDIO_TYPE_MASK)==
+			 	(xa_audio_hard_type & XA_AUDIO_TYPE_MASK))?(0):(1);
 		if (itype & XA_AUDIO_BPS_2_MSK)
 		  new_snd->spec |= (itype & XA_AUDIO_BIGEND_MSK)?(2):(4);
 		if (itype & XA_AUDIO_STEREO_MSK)
@@@@ -2195,12 +2220,16 @@@@
 		if (xa_audio_hard_type & XA_AUDIO_BIGEND_MSK)
 			new_snd->spec = 0 | 4 | 8;
 		else	new_snd->spec = 1 | 4 | 8;
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
 		new_snd->delta = XA_ADecode_ULAWx_PCMxM;
 		break;
 	  case XA_AUDIO_ULAW:
 		if (xa_audio_hard_type & XA_AUDIO_BIGEND_MSK)
 			new_snd->spec = 0 | 4;
 		else	new_snd->spec = 1 | 4;
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
 		new_snd->delta = XA_ADecode_ULAWx_PCMxM;
 		break;
 	  case XA_AUDIO_ALAWS:
@@@@ -2218,6 +2247,8 @@@@
 	  case XA_AUDIO_ARMLAWS:
 		if (xa_audio_hard_type & XA_AUDIO_BIGEND_MSK)
 			new_snd->spec = 0 | 4 | 8;
+ 		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+ 			new_snd->spec |= 2;
 		else	new_snd->spec = 1 | 4 | 8;
 		new_snd->delta = XA_ADecode_ARMLAWx_PCMxM;
 		break;
@@@@ -2226,41 +2257,59 @@@@
 			new_snd->spec = 0 | 4;
 		else	new_snd->spec = 1 | 4;
 		new_snd->delta = XA_ADecode_ARMLAWx_PCMxM;
+ 		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+ 			new_snd->spec |= 2;
 		break;
 	  case XA_AUDIO_ADPCM_M:
-		new_snd->spec = 2 | 4;  /* 1 byte output */
+ 		new_snd->spec = 4;  /* 1 byte output */
+ 		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+ 			new_snd->spec |= 2;
 		new_snd->delta = XA_ADecode_ADPCMM_PCM2M;
 		break;
 	  case XA_AUDIO_ADPCM_S:
-		new_snd->spec = 2 | 4;  /* 1 byte output */
+ 		new_snd->spec = 4;  /* 1 byte output */
+ 		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+ 			new_snd->spec |= 2;
 		new_snd->delta = XA_ADecode_ADPCMS_PCM2M;
 		break;
 	  case XA_AUDIO_DVI_M:
-		new_snd->spec = 2 | 4;  /* 1 byte output */
+ 		new_snd->spec = 4;  /* 1 byte output */
+ 		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+ 			new_snd->spec |= 2;
 		new_snd->delta = XA_ADecode_DVIM_PCMxM;
 		break;
 	  case XA_AUDIO_DVI_S:
-		new_snd->spec = 2 | 4;  /* 1 byte output */
+ 		new_snd->spec = 4;  /* 1 byte output */
+ 		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+ 			new_snd->spec |= 2;
 		new_snd->delta = XA_ADecode_DVIS_PCMxM;
 		break;
 	  case XA_AUDIO_IMA4_M:
-		new_snd->spec = 2 | 4;  /* 1 byte output */
+ 		new_snd->spec = 4;  /* 1 byte output */
+ 		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+ 			new_snd->spec |= 2;
 		new_snd->delta = XA_ADecode_IMA4M_PCMxM;
 		break;
 	  case XA_AUDIO_IMA4_S:
-		new_snd->spec = 2 | 4;  /* 1 byte output */
+ 		new_snd->spec = 4;  /* 1 byte output */
+ 		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+ 			new_snd->spec |= 2;
 		new_snd->delta = XA_ADecode_IMA4S_PCMxM;
 		break;
 #ifdef XA_GSM
 	  case XA_AUDIO_GSM:
 	  case XA_AUDIO_MSGSM:
-		new_snd->spec = 2 | 4;  /* 1 byte output */
+ 		new_snd->spec = 4;  /* 1 byte output */
+ 		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+ 			new_snd->spec |= 2;
 		if (itype == XA_AUDIO_MSGSM_M) new_snd->spec |= 0x80;
 		new_snd->delta = XA_ADecode_GSMM_PCMxM;
 		break;
 #endif
 	  case XA_AUDIO_NOP:
-		new_snd->spec = 2 | 4;  /* 1 byte output */
+ 		new_snd->spec = 4;  /* 1 byte output */
+ 		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+ 			new_snd->spec |= 2;
 		new_snd->delta = XA_ADecode_NOP_PCMXM;
 		break;
 	  default:
@


1.3
log
@Minor upgrade: 2.80.1. A few patches to tweak, xanim.man is back.
The program itself does NOT have any new version number.
@
text
@@


1.2
log
@- Upgrade to xanim 2.80.0.
- cleaned up audio support, with less AUDIO_SETINFO, no more waiting
  forever on wss.
@
text
@d1 2
a2 2
--- xa_acodec.c.orig	Thu Mar 18 22:13:16 1999
+++ xa_acodec.c	Thu Mar 18 22:24:09 1999
d77 2
a78 1
@@@@ -2219,48 +2248,68 @@@@
d81 2
a83 2
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
d86 1
a86 2
 	  case XA_AUDIO_ARMLAW:
 		if (xa_audio_hard_type & XA_AUDIO_BIGEND_MSK)
a88 2
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
d90 2
d95 3
a97 3
+		new_snd->spec = 4;  /* 1 byte output */
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
d102 3
a104 3
+		new_snd->spec = 4;  /* 1 byte output */
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
d109 3
a111 3
+		new_snd->spec = 4;  /* 1 byte output */
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
d116 3
a118 3
+		new_snd->spec = 4;  /* 1 byte output */
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
d123 3
a125 3
+		new_snd->spec = 4;  /* 1 byte output */
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
d130 3
a132 3
+		new_snd->spec = 4;  /* 1 byte output */
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
d135 1
a135 1
 #ifdef GSM
d139 3
a141 3
+		new_snd->spec = 4;  /* 1 byte output */
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
d148 3
a150 3
+		new_snd->spec = 4;  /* 1 byte output */
+		if (xa_audio_hard_type == XA_AUDIO_LINEAR_1M)
+			new_snd->spec |= 2;
@


1.1
log
@Initial revision
@
text
@d1 24
a24 30
--- Imakefile.orig	Tue Mar 24 00:55:08 1998
+++ Imakefile	Tue Dec  1 17:37:03 1998
@@@@ -165,7 +165,7 @@@@
 XCOMM XA_AUDIO_DEFS =
 XCOMM
 XCOMM -- Sun Sparcs -----------------------------------------------------------
-XA_AUDIO_DEFS = -DXA_SPARC_AUDIO
+XCOMM XA_AUDIO_DEFS = -DXA_SPARC_AUDIO
 XCOMM
 XCOMM NOTE: Imakefile should add the -DSVR4 to Sun Solaris machines, if not
 XCOMM       use the following:
@@@@ -195,7 +195,7 @@@@
 XCOMM XA_AUDIO_DEFS = -DXA_SONY_AUDIO
 XCOMM
 XCOMM -- NetBSD-current (as of 30/April 1995)----------------------------------
-XCOMM XA_AUDIO_DEFS = -DXA_NetBSD_AUDIO
+XA_AUDIO_DEFS = -DXA_NetBSD_AUDIO
 XCOMM
 XCOMM -- QNX 4.2 PC's ---------------------------------------------------------
 XCOMM XA_AUDIO_DEFS = -DXA_LINUX_AUDIO -DXA_LINUX_NEWER_SND -DXA_SELECT
@@@@ -325,7 +325,7 @@@@
 XCOMM   -- following symbols(XmbufDisplayBuffers, XmbufQueryExtension,
 XCOMM   --  XmbufCreateBuffers).
 XCOMM   -- NOTE_7: HP-UX machines need to comment this out.
-XCOMM XA_MULTIBUF = -DXMBUF
+XA_MULTIBUF = -DXMBUF
 XCOMM
 XCOMM ********************
  
@@@@ -345,7 +345,7 @@@@
d26 18
a43 1
 PROGRAMS = xanim
d45 109
a153 5
-INCLUDES = -I$(INCDIR) $(XA_INCS)
+INCLUDES = -I$(INCDIR)/X11 $(XA_INCS)
 
 
    LIBS1 = $(XA_LIBS) $(EXTENSIONLIB) $(XTOOLLIB) $(XLIB) -lm
@


1.1.1.1
log
@Sound support, including 8 bit, with crossed fingers.
@
text
@@
