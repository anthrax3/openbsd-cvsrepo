head	1.6;
access;
symbols
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2016.05.06.21.47.59;	author sthen;	state dead;
branches;
next	1.5;
commitid	TbSId0w8wIo5a4Sw;

1.5
date	2016.04.12.09.40.59;	author sthen;	state Exp;
branches;
next	1.4;
commitid	UJpyUtUIGAe6tfCY;

1.4
date	2013.03.09.11.18.14;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2012.09.14.09.50.19;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2011.12.09.20.11.00;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2011.01.31.23.20.23;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.6
log
@update to darktable-2.0.4
@
text
@$OpenBSD: patch-src_common_darktable_h,v 1.5 2016/04/12 09:40:59 sthen Exp $

https://github.com/darktable-org/darktable/pull/1193

--- src/common/darktable.h.orig	Tue Apr 12 10:25:53 2016
+++ src/common/darktable.h	Tue Apr 12 10:26:21 2016
@@@@ -464,6 +464,8 @@@@ static inline size_t dt_get_total_memory()
     || defined(__OpenBSD__)
 #if defined(__APPLE__)
   int mib[2] = { CTL_HW, HW_MEMSIZE };
+#elif defined(HW_PHYSMEM64)
+  int mib[2] = { CTL_HW, HW_PHYSMEM64 };
 #else
   int mib[2] = { CTL_HW, HW_PHYSMEM };
 #endif
@


1.5
log
@fix darktable's memory detection on machines with >4GB RAM (HW_PHYSMEM64,
pull req 1193), reported by Jan Johansson.

while there, stop using devel/gettext MODULES.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@update darktable to 1.13 but mark it BROKEN for now as it frequently
triggers the strict mutex_unlock checks from rthread_sync 1.34, causing it
to abort.

rolls in some patches applied upstream thanks to Pascal de Bruijn.
@
text
@d1 14
a14 13
$OpenBSD: patch-src_common_darktable_h,v 1.3 2012/09/14 09:50:19 sthen Exp $
--- src/common/darktable.h.orig	Sat Jul 21 04:44:08 2012
+++ src/common/darktable.h	Tue Aug 21 10:06:41 2012
@@@@ -19,6 +19,10 @@@@
 #define DARKTABLE_H
 
 // just to be sure. the build system should set this for us already:
+#if defined(__NetBSD__) || defined(__OpenBSD__)
+#include <sys/param.h>
+#include <sys/sysctl.h>
+#endif
 #ifndef _XOPEN_SOURCE
   #define _XOPEN_SOURCE 700 // for localtime_r and dprintf
a15 11
@@@@ -46,10 +50,6 @@@@
 #if defined(__DragonFly__) || defined(__FreeBSD__)
 typedef	unsigned int	u_int;
 #include <sys/types.h>
-#include <sys/sysctl.h>
-#endif
-#if defined(__NetBSD__) || defined(__OpenBSD__)
-#include <sys/param.h>
 #include <sys/sysctl.h>
 #endif
 
@


1.3
log
@update to darktable 1.0.5
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@slightly overdue update of darktable to 0.9.3 - lots of improvements
and fixes since the previous version in ports
@
text
@d1 23
a23 18
$OpenBSD: patch-src_common_darktable_h,v 1.1 2011/01/31 23:20:23 sthen Exp $

XXX wrong on most i386, broken on !i386, hack it away for now.

--- src/common/darktable.h.orig	Mon Jan 31 22:30:10 2011
+++ src/common/darktable.h	Mon Jan 31 22:31:11 2011
@@@@ -142,10 +142,14 @@@@ static inline double dt_get_wtime()
 #ifdef _OPENMP
   return omp_get_wtime();
 #else
+ #if defined(__i386__)
   // FIXME: this assumes 2.4 GHz
   uint64_t val;
   __asm__ __volatile__("rdtsc": "=A"(val));
   return val/2400000000.0f;
+ #else
+  return 0;
+ #endif
a24 1
 }
@


1.1
log
@Don't try and unconditionally use asm instructions to read the TSC
for performance-debugging printf()s. (post-unlock, updating darktable
to a newer version should fix this in a better way).

Build failure on macppc reported by ajacoutot@@ (though it affects
other arch too). ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
@

