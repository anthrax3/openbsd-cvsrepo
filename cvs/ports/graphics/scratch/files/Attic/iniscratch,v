head	1.3;
access;
symbols
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.16
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.14
	OPENBSD_5_0:1.1.1.1.0.12
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.10
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.6
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.4
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	sthen_20090203:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.05.14.09.42.47;	author sthen;	state dead;
branches;
next	1.2;

1.2
date	2013.01.08.15.23.15;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2009.02.03.14.56.56;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.02.03.14.56.56;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to Scratch 1.4.0.7, from stu@@ (maintainer), tested by Lars Engblom.
"I'll do the update today" stu@@, 18 April. it's been a while, so committing
for him ;) additional tweak: build dep on squeak, to avoid wasting time on
!squeak arches.
@
text
@SCRATCH_DIR=${HOME}/Scratch
mkdir ${SCRATCH_DIR}
gunzip < ${TRUEPREFIX}/lib/scratch/Scratch.image.gz > ${SCRATCH_DIR}/Scratch.image
for i in Help locale ; do ln -s ${TRUEPREFIX}/lib/scratch/$i ${SCRATCH_DIR}; done
for i in Media Projects ; do ln -s ${TRUEPREFIX}/share/scratch/$i ${SCRATCH_DIR}; done
@


1.2
log
@fix paths in iniscratch; pointed out by "Beni" and Lars Engblom
(there still a problem apparently with the squeak vm in -current, so this
port doesn't actually work at present..).
@
text
@@


1.1
log
@Initial revision
@
text
@d3 3
a5 3
gunzip < ${PREFIX}/lib/scratch/Scratch.image.gz > ${SCRATCH_DIR}/Scratch.image
for i in Help locale ; do ln -s ${PREFIX}/lib/scratch/$i ${SCRATCH_DIR}; done
for i in Media Projects ; do ln -s ${PREFIX}/share/scratch/$i ${SCRATCH_DIR}; done
@


1.1.1.1
log
@import graphics/scratch:

A new programming language that makes it easy to create your own
interactive stories, animations, games, music, and art - and share your
creations on the web. Designed to help young people (ages 8 and up)
develop 21st century learning skills. As they create Scratch projects,
young people learn important mathematical and computational ideas, while
also gaining a deeper understanding of the process of design.

from maintainer Stuart Cassoff, with tweaks by me and input from
ajacoutot@@.
@
text
@@
