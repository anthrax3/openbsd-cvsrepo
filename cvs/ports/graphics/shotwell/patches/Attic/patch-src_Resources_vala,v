head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2017.03.20.15.09.53;	author ajacoutot;	state dead;
branches;
next	1.2;
commitid	9ya8FhOqSayeOIpw;

1.2
date	2017.03.15.10.37.44;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	rRW2kCi0VjFfBdsN;

1.1
date	2017.03.14.09.38.10;	author ajacoutot;	state Exp;
branches;
next	;
commitid	6zgV75jcfwoe74zw;


desc
@@


1.3
log
@Update to shotwell-0.26.0.
@
text
@$OpenBSD: patch-src_Resources_vala,v 1.2 2017/03/15 10:37:44 ajacoutot Exp $

From b11f1b0fe626f50c5c715018d97bf7e438777fd7 Mon Sep 17 00:00:00 2001
From: Jens Georg <mail@@jensge.org>
Date: Tue, 14 Mar 2017 20:44:44 +0100
Subject: Check for LC_MEASUREMENT in a more portable way

--- src/Resources.vala.orig	Mon Mar 13 19:34:49 2017
+++ src/Resources.vala	Wed Mar 15 11:18:41 2017
@@@@ -768,11 +768,6 @@@@ along with Shotwell; if not, write to the Free Softwar
 
     }
 
-    [CCode (cname = "int", cprefix = "LC_", cheader_filename = "locale.h", has_type_id = false)]
-    private enum Lc {
-        MEASUREMENT
-    }
-
     public enum UnitSystem {
         IMPERIAL,
         METRIC,
@@@@ -788,7 +783,7 @@@@ along with Shotwell; if not, write to the Free Softwar
             return unit_system;
         }
 
-        lc_measurement = Intl.setlocale((LocaleCategory) Lc.MEASUREMENT, null);
+        lc_measurement = Environment.get_variable("LC_MEASUREMENT");
         if (lc_measurement == null) {
             lc_measurement = Intl.get_language_names()[0];
         }
@


1.2
log
@Check for LC_MEASUREMENT in a more portable way (upstream).
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Update to shotwell-0.25.92.
@
text
@d3 1
a3 2
REVERT: LC_MEASUREMENT is a GNU extension
From eaf7e88240369f87defe0f7f8ba9fe9f468a256e Mon Sep 17 00:00:00 2001
d5 2
a6 2
Date: Mon, 13 Mar 2017 19:33:07 +0100
Subject: printing: Use inch/cm depending on locale settings
d9 5
a13 8
+++ src/Resources.vala	Tue Mar 14 10:27:46 2017
@@@@ -765,45 +765,6 @@@@ along with Shotwell; if not, write to the Free Softwar
         if (old_language != null) {
             Environment.set_variable("LANGUAGE", old_language, true);
         }
-
-    }
-
d19 7
a25 15
-    public enum UnitSystem {
-        IMPERIAL,
-        METRIC,
-        UNKNOWN
-    }
-
-    private string lc_measurement = null;
-    private UnitSystem unit_system = UnitSystem.UNKNOWN;
-    private const string IMPERIAL_COUNTRIES[] = {"unm_US", "es_US", "en_US", "yi_US" };
-
-    public UnitSystem get_default_measurement_unit() {
-        if (unit_system != UnitSystem.UNKNOWN) {
-            return unit_system;
-        }
-
d27 4
a30 18
-        if (lc_measurement == null) {
-            lc_measurement = Intl.get_language_names()[0];
-        }
-
-        var index = lc_measurement.last_index_of_char('.');
-        if (index > 0) {
-            lc_measurement = lc_measurement.substring(0, index);
-        }
-
-        unit_system = UnitSystem.METRIC;
-        if (lc_measurement in IMPERIAL_COUNTRIES) {
-            unit_system = UnitSystem.IMPERIAL;
-        }
-
-        return unit_system;
     }
     
     /**
@

