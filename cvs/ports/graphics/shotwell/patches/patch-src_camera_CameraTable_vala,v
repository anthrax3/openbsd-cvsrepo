head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.4
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.6.0.6
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.2
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.8
date	2016.06.21.12.38.07;	author ajacoutot;	state Exp;
branches;
next	1.7;
commitid	RMrv4sjYb4eKelhQ;

1.7
date	2015.03.24.08.03.55;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	tHjVybWUFSKm0KZ8;

1.6
date	2013.10.10.15.40.40;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2013.09.09.14.19.33;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2013.01.13.15.42.10;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2012.09.24.20.32.49;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.27.19.41.55;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.09.12.18.22.19;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to shotwell-0.23.2.
@
text
@$OpenBSD: patch-src_camera_CameraTable_vala,v 1.7 2015/03/24 08:03:55 ajacoutot Exp $

remove gudev requirement

--- src/camera/CameraTable.vala.orig	Wed May 25 22:34:48 2016
+++ src/camera/CameraTable.vala	Tue Jun 21 14:28:59 2016
@@@@ -26,7 +26,6 @@@@ public class CameraTable {
     
     private static CameraTable instance = null;
     
-    private GUdev.Client client = new GUdev.Client(SUBSYSTEMS);
     private OneShotScheduler camera_update_scheduler = null;
     private GPhoto.Context null_context = new GPhoto.Context();
     private GPhoto.CameraAbilitiesList abilities_list;
@@@@ -42,8 +41,6 @@@@ public class CameraTable {
         camera_update_scheduler = new OneShotScheduler("CameraTable update scheduler",
             on_update_cameras);
         
-        // listen for interesting events on the specified subsystems
-        client.uevent.connect(on_udev_event);
         volume_monitor = VolumeMonitor.get();
         volume_monitor.volume_changed.connect(on_volume_changed);
         volume_monitor.volume_added.connect(on_volume_changed);
@@@@ -111,30 +108,6 @@@@ public class CameraTable {
     private string[] get_all_usb_cameras() {
         string[] cameras = new string[0];
         
-        GLib.List<GUdev.Device> device_list = client.query_by_subsystem(null);
-        foreach (GUdev.Device device in device_list) {
-            string device_file = device.get_device_file();
-            if(
-                // only keep devices that have a non-null device file and that
-                // have both the ID_GPHOTO2 and GPHOTO2_DRIVER properties set
-                (device_file != null) &&
-                (device.has_property("ID_GPHOTO2")) &&
-                (device.has_property("GPHOTO2_DRIVER"))
-            ) {
-                int camera_bus, camera_device;
-                // extract the bus and device IDs from the device file string
-                // TODO: is it safe to parse the absolute path or should we be
-                // smarter and use a regex to only pick up the end of the path?
-                if (device_file.scanf("/dev/bus/usb/%d/%d", out camera_bus, out camera_device) < 2) {
-                    critical("get_all_usb_cameras: Failed to scanf device file %s", device_file);
-                    
-                    continue;
-                }
-                string camera = "usb:%.3d,%.3d".printf(camera_bus, camera_device);
-                debug("USB camera detected at %s", camera);
-                cameras += camera;
-            }
-        }
         
         return cameras;
     }
@@@@ -212,24 +185,6 @@@@ public class CameraTable {
             "/dev/bus/usb/%s".printf(port.substring(4).replace(",", "/")) : null;
     }
     
-    private string? get_name_for_uuid(string uuid) {
-        foreach (Volume volume in volume_monitor.get_volumes()) {
-            if (volume.get_identifier(VolumeIdentifier.UUID) == uuid) {
-                return volume.get_name();
-            }
-        }
-        return null;
-    }
-    
-    private string? get_icon_for_uuid(string uuid) {
-        foreach (Volume volume in volume_monitor.get_volumes()) {
-            if (volume.get_identifier(VolumeIdentifier.UUID) == uuid) {
-                return volume.get_icon().to_string();
-            }
-        }
-        return null;
-    }
-
     private void update_camera_table() throws GPhotoError {
         // need to do this because virtual ports come and go in the USB world (and probably others)
         GPhoto.PortInfoList port_info_list;
@@@@ -325,23 +280,6 @@@@ public class CameraTable {
                 continue;
             }
             
-            // Get display name for camera.
-            string path = get_port_path(port);
-            if (null != path) {
-                GUdev.Device device = client.query_by_device_file(path);
-                string serial = device.get_property("ID_SERIAL_SHORT");
-                if (null != serial) {
-                    // Try to get the name and icon.
-                    display_name = get_name_for_uuid(serial);
-                    icon = get_icon_for_uuid(serial);
-                }
-                if (null == display_name) {
-                    display_name = device.get_sysfs_attr("product");
-                } 
-                if (null == display_name) {
-                    display_name = device.get_property("ID_MODEL");
-                }
-            }
             if (null == display_name) {
                 // Default to GPhoto detected name.
                 display_name = name;
@@@@ -382,13 +320,7 @@@@ public class CameraTable {
         }
     }
     
-    private void on_udev_event(string action, GUdev.Device device) {
-        debug("udev event: %s on %s", action, device.get_name());
-        
-        // Device add/removes often arrive in pairs; this allows for a single
-        // update to occur when they come in all at once
-        camera_update_scheduler.after_timeout(UPDATE_DELAY_MSEC, true);
-    }
+
     
     public void on_volume_changed(Volume volume) {
         camera_update_scheduler.after_timeout(UPDATE_DELAY_MSEC, true);
@


1.7
log
@Update to shotwell-0.22.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_camera_CameraTable_vala,v 1.6 2013/10/10 15:40:40 ajacoutot Exp $
d5 2
a6 2
--- src/camera/CameraTable.vala.orig	Sat Feb 14 01:50:15 2015
+++ src/camera/CameraTable.vala	Tue Mar 24 08:44:48 2015
d80 1
a80 1
@@@@ -333,23 +288,6 @@@@ public class CameraTable {
d104 1
a104 1
@@@@ -394,13 +332,7 @@@@ public class CameraTable {
@


1.6
log
@Update to shotwell-0.15.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_camera_CameraTable_vala,v 1.5 2013/09/09 14:19:33 ajacoutot Exp $
d5 2
a6 2
--- src/camera/CameraTable.vala.orig	Fri Sep  6 21:13:45 2013
+++ src/camera/CameraTable.vala	Thu Oct 10 17:30:34 2013
d68 1
a68 1
-    private GLib.Icon? get_icon_for_uuid(string uuid) {
d71 1
a71 1
-                return volume.get_icon();
@


1.5
log
@Add vala to MODGNOME_TOOLS instead of BUILD_DEPENDS.
Add comment to patch.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_camera_CameraTable_vala,v 1.4 2013/01/13 15:42:10 ajacoutot Exp $
d5 2
a6 2
--- src/camera/CameraTable.vala.orig	Wed Sep 19 21:08:59 2012
+++ src/camera/CameraTable.vala	Mon Sep 24 21:30:15 2012
d15 1
a15 1
@@@@ -43,8 +42,6 @@@@ public class CameraTable {
d24 1
a24 1
@@@@ -112,30 +109,6 @@@@ public class CameraTable {
d55 1
a55 1
@@@@ -213,24 +186,6 @@@@ public class CameraTable {
d80 1
a80 1
@@@@ -335,23 +290,6 @@@@ public class CameraTable {
d104 1
a104 1
@@@@ -396,13 +334,7 @@@@ public class CameraTable {
@


1.4
log
@Bugfix update to shotwell-0.13.1.
@
text
@d1 4
a4 1
$OpenBSD: patch-src_camera_CameraTable_vala,v 1.3 2012/09/24 20:32:49 jasper Exp $
@


1.3
log
@- update to shotwell-0.13.0
@
text
@d1 1
a1 2
$OpenBSD: patch-src_camera_CameraTable_vala,v 1.2 2012/02/27 19:41:55 ajacoutot Exp $

@


1.2
log
@Update to shotwell-0.11.92.20120226, git snapshot to cope with recent
vala update. This now uses gtk+3.

ok landry@@ (maintainer)
@
text
@d1 4
a4 3
$OpenBSD: patch-src_camera_CameraTable_vala,v 1.1 2011/09/12 18:22:19 jasper Exp $
--- src/camera/CameraTable.vala.orig	Sun Feb 26 15:04:33 2012
+++ src/camera/CameraTable.vala	Sun Feb 26 15:09:13 2012
d22 1
a22 1
@@@@ -105,30 +102,6 @@@@ public class CameraTable {
d53 1
a53 1
@@@@ -206,24 +179,6 @@@@ public class CameraTable {
d78 1
a78 1
@@@@ -313,23 +268,6 @@@@ public class CameraTable {
d102 1
a102 1
@@@@ -367,13 +305,7 @@@@ public class CameraTable {
@


1.1
log
@
- update to 0.11.1
@
text
@d1 3
a3 3
$OpenBSD$
--- src/camera/CameraTable.vala.orig	Mon Sep 12 18:36:24 2011
+++ src/camera/CameraTable.vala	Mon Sep 12 18:38:06 2011
d52 1
a52 1
@@@@ -204,24 +177,8 @@@@ public class CameraTable {
d58 1
a58 1
-            if (volume.get_identifier(VOLUME_IDENTIFIER_KIND_UUID) == uuid) {
d67 1
a67 1
-            if (volume.get_identifier(VOLUME_IDENTIFIER_KIND_UUID) == uuid) {
d73 1
a73 2
 
+
d77 1
a77 1
@@@@ -311,23 +268,6 @@@@ public class CameraTable {
d101 1
a101 1
@@@@ -365,13 +305,7 @@@@ public class CameraTable {
@

