head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2016.04.27.18.07.00;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	CUZM6w8g3ZNGnFFc;

1.3
date	2014.10.30.10.15.59;	author sthen;	state Exp;
branches;
next	1.2;
commitid	8rMwxF5FWVNhwqeE;

1.2
date	2011.07.08.20.36.09;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.23.08.34.39;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to gif2png-2.5.11.
@
text
@--- gif2png.c.orig	Mon Jul 13 03:26:18 2015
+++ gif2png.c	Wed Apr 27 19:51:20 2016
@@@@ -137,6 +137,19 @@@@ static int writefile(struct GIFelement *s, struct GIFe
     png_text software;
     png_text comment;
 
+    png_ptr = png_create_read_struct(PNG_LIBPNG_VER_STRING, NULL, NULL, NULL);
+    if (png_ptr == NULL) {
+      fprintf(stderr, "gif2png: fatal error, out of memory\n");
+      fprintf(stderr, "gif2png: exiting ungracefully\n");
+      exit(1);
+    }
+    info_ptr = png_create_info_struct(png_ptr);
+    if (info_ptr == NULL) {
+      fprintf(stderr, "gif2png: fatal error, out of memory\n");
+      fprintf(stderr, "gif2png: exiting ungracefully\n");
+      exit(1);
+    }
+
     /* these volatile declarations prevent gcc warnings ("variable might be
      *  clobbered by `longjmp' or `vfork'") */
     volatile bool gray = true;
@


1.3
log
@update to gif2png-2.5.9, from Jason Tubnor

minor tweaks while there (groff not needed, use separate build,
use standard wantlib format)
@
text
@d1 3
a3 3
--- gif2png.c.orig	Wed Oct 29 11:16:37 2014
+++ gif2png.c	Wed Oct 29 11:35:23 2014
@@@@ -140,6 +140,19 @@@@ static int writefile(struct GIFelement *s, struct GIFe
@


1.2
log
@Fix build with png-1.5.
All fixes from/via NetBSD pkgsrc.  The people there did a lot of
heavy lifting.
@
text
@d1 3
a3 33
$OpenBSD: patch-gif2png_c,v 1.1 2010/11/23 08:34:39 jasper Exp $

Fixes cmdline buffer overflow described in

http://lists.grok.org.uk/pipermail/full-disclosure/2009-December/072002.html
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=550978

From: http://cvs.fedoraproject.org/viewvc/rpms/gif2png/devel/gif2png-overflow.patch?revision=HEAD&root=extras&view=markup

Fix build with png-1.5.

--- gif2png.c.orig	Wed Nov 11 13:28:02 2009
+++ gif2png.c	Wed Jul  6 17:39:37 2011
@@@@ -10,6 +10,7 @@@@
 #include <string.h>
 #include <stdlib.h>
 #include <unistd.h>	/* for isatty() */
+#include <zlib.h>
 
 #if !defined(TRUE)
 #define FALSE	0
@@@@ -120,8 +121,8 @@@@ int writefile(struct GIFelement *s,struct GIFelement *
     int colors_used = 0;
     byte remap[MAXCMSIZE];
     int low_prec;
-    png_struct *png_ptr = xalloc(sizeof (png_struct));
-    png_info *info_ptr = xalloc(sizeof (png_info));
+    png_struct *png_ptr;
+    png_info *info_ptr;
     int p;
     int gray_bitdepth;
     png_color pal_rgb[MAXCMSIZE], *pltep;
@@@@ -136,6 +137,19 @@@@ int writefile(struct GIFelement *s,struct GIFelement *
d22 1
a22 27
     volatile int gray = TRUE;
@@@@ -682,7 +696,10 @@@@ int processfile(char *fname, FILE *fp)
 
     strcpy(outname, fname);
 
-    file_ext = outname+strlen(outname)-4;
+    file_ext = outname+strlen(outname);
+    if (file_ext >= outname + 4)
+	file_ext -= 4;
+
     if (strcmp(file_ext, ".gif") != 0 && strcmp(file_ext, ".GIF") != 0 &&
 	strcmp(file_ext, "_gif") != 0 && strcmp(file_ext, "_GIF") != 0) {
 	/* try to derive basename */
@@@@ -874,6 +891,13 @@@@ int main(int argc, char *argv[])
 	}
     } else {
 	for (i = ac;i<argc; i++) {
+	    /* make sure that there is enough space for a '.p<NUM>' suffix;
+	       this check catches also the '.gif' case below. */
+	    if (strlen(argv[i]) >= sizeof name - sizeof ".p" - 3 * sizeof(int)) {
+		fprintf(stderr, "%s: name too long\n", argv[i]);
+		errors = 1;
+		continue;
+	    }
 	    strcpy(name, argv[i]);
 	    if ((fp = fopen(name, "rb")) == NULL) {
 		/* retry with .gif appended */
@


1.1
log
@- SECURITY FIX, fix two buffer overflow issues. patch from fedora.
@
text
@d1 1
a1 1
$OpenBSD$
d10 44
a53 3
--- gif2png.c.orig	Tue Nov 23 09:28:41 2010
+++ gif2png.c	Tue Nov 23 09:30:36 2010
@@@@ -682,7 +682,10 @@@@ int processfile(char *fname, FILE *fp)
d65 1
a65 1
@@@@ -874,6 +877,13 @@@@ int main(int argc, char *argv[])
@

