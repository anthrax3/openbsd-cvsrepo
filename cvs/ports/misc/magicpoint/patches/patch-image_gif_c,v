head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.03.28.17.27.04;	author sthen;	state Exp;
branches;
next	1.1;
commitid	DDKNaGQOoDTiGqt8;

1.1
date	2013.09.25.07.58.43;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@handle giflib api change
@
text
@$OpenBSD: patch-image_gif_c,v 1.1 2013/09/25 07:58:43 sthen Exp $

support giflib 5.0+

--- image/gif.c.orig	Tue Mar  7 06:59:56 2000
+++ image/gif.c	Sat Mar 28 17:26:33 2015
@@@@ -15,6 +15,7 @@@@
 
 #ifdef USE_GIF
 
+#include <stdlib.h>
 #include "image.h"
 #include <gif_lib.h>
 
@@@@ -50,7 +51,7 @@@@ gifLoad(fullname, name, verbose)
 	ColorMapObject *ColorMap;
 	GifColorType *ColorMapEntry;
 
-	GifFile = DGifOpenFileName(fullname);
+	GifFile = DGifOpenFileName(fullname, NULL);
 	if (GifFile == NULL)
 		return NULL;
 
@@@@ -87,13 +88,13 @@@@ gifLoad(fullname, name, verbose)
 	/* Scan the content of the GIF file and load the image(s) in: */
 	do {
 		if (DGifGetRecordType(GifFile, &RecordType) == GIF_ERROR) {
-			PrintGifError();
+			fprintf(stderr, "giflib error: %s\n", GifErrorString(GifFile->Error));
 			exit(-1);
 		}
 		switch (RecordType) {
 		case IMAGE_DESC_RECORD_TYPE:
 			if (DGifGetImageDesc(GifFile) == GIF_ERROR) {
-				PrintGifError();
+				fprintf(stderr, "giflib error: %s\n", GifErrorString(GifFile->Error));
 				exit(-1);
 			}
 			Row = GifFile->Image.Top; /* Image Position relative to Screen. */
@@@@ -113,7 +114,7 @@@@ gifLoad(fullname, name, verbose)
 							     j += InterlacedJumps[i]) {
 					if (DGifGetLine(GifFile, &ScreenBuffer[j][Col],
 					    Width) == GIF_ERROR) {
-					    PrintGifError();
+					    fprintf(stderr, "giflib error: %s\n", GifErrorString(GifFile->Error));
 					    exit(-1);
 					}
 				}
@@@@ -122,7 +123,7 @@@@ gifLoad(fullname, name, verbose)
 				for (i = 0; i < Height; i++) {
 					if (DGifGetLine(GifFile, &ScreenBuffer[Row++][Col],
 					    Width) == GIF_ERROR) {
-						PrintGifError();
+					    	fprintf(stderr, "giflib error: %s\n", GifErrorString(GifFile->Error));
 						exit(-1);
 					}
 				}
@@@@ -131,7 +132,7 @@@@ gifLoad(fullname, name, verbose)
 		case EXTENSION_RECORD_TYPE:
 			/* Skip any extension blocks in file: */
 			if (DGifGetExtension(GifFile, &ExtCode, &Extension) == GIF_ERROR) {
-				PrintGifError();
+				fprintf(stderr, "giflib error: %s\n", GifErrorString(GifFile->Error));
 				exit(-1);
 			}
 			/* very adhoc transparency support */
@@@@ -141,7 +142,7 @@@@ gifLoad(fullname, name, verbose)
 			}
 			while (Extension != NULL) {
 				if (DGifGetExtensionNext(GifFile, &Extension) == GIF_ERROR) {
-					PrintGifError();
+					fprintf(stderr, "giflib error: %s\n", GifErrorString(GifFile->Error));
 					exit(-1);
 				}
 			}
@@@@ -179,8 +180,8 @@@@ gifLoad(fullname, name, verbose)
 			pixline[x] = GifRow[x];
 	}
 
-	if (DGifCloseFile(GifFile) == GIF_ERROR) {
-		PrintGifError();
+	if (DGifCloseFile(GifFile, NULL) == GIF_ERROR) {
+		fprintf(stderr, "giflib error: %s\n", GifErrorString(GifFile->Error));
 		exit(-1);
 	}
 
@@@@ -196,11 +197,11 @@@@ gifIdent(fullname, name)
 	GifFileType *gifp;
 	int ret;
 
-	gifp = DGifOpenFileName(fullname);
+	gifp = DGifOpenFileName(fullname, NULL);
 	if (gifp == NULL)
 		ret = 0;
 	else {
-		DGifCloseFile(gifp);
+		DGifCloseFile(gifp, NULL);
 		tellAboutImage(name);
 		ret = 1;
 	}
@


1.1
log
@libungif->giflib and patch where necessary, ok jasper@@ aja@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 2
a6 2
--- image/gif.c.orig	Mon Mar  6 23:59:56 2000
+++ image/gif.c	Fri Sep 20 03:51:20 2013
d76 2
a77 1
@@@@ -180,7 +181,7 @@@@ gifLoad(fullname, name, verbose)
d80 1
a80 1
 	if (DGifCloseFile(GifFile) == GIF_ERROR) {
d82 1
d87 1
a87 1
@@@@ -196,7 +197,7 @@@@ gifIdent(fullname, name)
d96 5
@

