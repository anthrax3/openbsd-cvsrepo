head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.42
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.40
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.38
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.36
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.34
	OPENBSD_5_0:1.3.0.32
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.30
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.28
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.24
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.22
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.20
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.18
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.1.1.1.0.6
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.4
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	lebel_2001-May-06:1.1.1.1
	lebel:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.03.19.13.25.54;	author jasper;	state dead;
branches;
next	1.3;

1.3
date	2003.12.15.21.42.42;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.04.20.16.16;	author lebel;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.06.14.36.05;	author lebel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.06.14.36.05;	author lebel;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Drop binary-only dnetc port...where to begin...last OpenBSD binary was built
in 2004, the port still has sparc/a.out binaries, maintainer email bounces,
the binaries dump core (bad syscall)...

ok aja@@
@
text
@distributed.net believes in the capability and potential of
distributed computing. Their mission consists of three interdependent
goals: development, deployment, and advocacy, to be pursued in the
advancement of distributed computing.

They advocate distributed computing, by encouraging global
participation and contributions of processing power, bandwidth,
and expertise; by providing a forum for discussion; and by raising
awareness on the Internet and in the mainstream.

RC5-72:

Having successfully completed RC5-56 and RC5-64, they intend to also
pursue RC5-72 and conquer it as well.

Optimal 24 and 25 Mark Golomb Rulers:

Essentially, a Golomb Ruler is a mathematical term given to a set
of whole numbers where no two pairs of numbers have the same
difference. An Optimal Golomb Ruler (OGR) is just like an everyday
ruler, except that the marks are placed so that no two pairs of
marks measure the same distance. OGR's have many uses in the real
world; for more information about them and the status of the project,
please visit their pages devoted to the OGR effort.
@


1.3
log
@remove WWW lines
@
text
@@


1.2
log
@update misc/dnetc to 2.9001.478 for both sparc and i386.
thanks to David Krause <openbsd@@davidkrause.com> for the heads up.
@
text
@a24 2

WWW: ${HOMEPAGE}
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
RC5-64:
d6 4
a9 3
distributed.net's longest-running project is the RC5-64 challenge.
We're now cracking at 127.24 billion keys per second and are moving
through the keyspace faster every day.
d11 6
a16 1
Optimal 24 Mark Golomb Rulers:
d24 1
a24 2
please visit our pages devoted to our OGR effort. We're now testing
at 182.49 billion nodes per second.
@


1.1.1.1
log
@initial import of dnetc-2.8010.463:
--
RC5-64:
 
distributed.net's longest-running project is the RC5-64 challenge.
We're now cracking at 127.24 billion keys per second and are moving
through the keyspace faster every day.
 
Optimal 24 Mark Golomb Rulers:
 
Essentially, a Golomb Ruler is a mathematical term given to a set
of whole numbers where no two pairs of numbers have the same
difference. An Optimal Golomb Ruler (OGR) is just like an everyday
ruler, except that the marks are placed so that no two pairs of
marks measure the same distance. OGR's have many uses in the real
world; for more information about them and the status of the project,
please visit our pages devoted to our OGR effort. We're now testing
at 182.49 billion nodes per second.
@
text
@@
