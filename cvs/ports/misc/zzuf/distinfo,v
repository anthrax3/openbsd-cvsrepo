head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.8
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.6
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.16
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.14
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.12
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.10
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.8
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.6
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.4.0.10
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.8
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.6
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2
	chl_20071003:1.1.1.1
	chl:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2015.11.19.00.55.23;	author mmcc;	state Exp;
branches;
next	1.6;
commitid	0aFaIs5ZiP9oM3R2;

1.6
date	2015.01.18.03.14.34;	author naddy;	state Exp;
branches;
next	1.5;
commitid	INAcawJqik7lWSVj;

1.5
date	2010.10.27.09.49.12;	author steven;	state Exp;
branches;
next	1.4;

1.4
date	2008.07.01.10.10.24;	author chl;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.21.19.14.50;	author chl;	state Exp;
branches;
next	1.2;

1.2
date	2007.11.07.19.11.54;	author chl;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.03.13.48.17;	author chl;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.10.03.13.48.17;	author chl;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to 0.14.

ok sthen@@, zhuk@@
@
text
@SHA256 (zzuf-0.14.tar.gz) = KRtB1Trm33XQ0rSg+qMzrfxKArnKhwa+5H73vmV5Zs4=
SIZE (zzuf-0.14.tar.gz) = 469885
@


1.6
log
@Drop remaining MD5/RMD160/SHA1 checksums.
@
text
@d1 2
a2 2
SHA256 (zzuf-0.13.tar.gz) = CELFSFIgKMPg2cnPfQn2MgtmHzOCS7bfGcogmFG99ic=
SIZE (zzuf-0.13.tar.gz) = 461498
@


1.5
log
@update to 0.13

 * various fixes for Linux, FreeBSD, OS X and OpenBSD libc calls.
 * network host filtering support.
 * support for memory limits on OS X.
 * massive testsuite improvements.
 * support most cat options in zzcat, which is now fully programmable.

from dawedawe at gmx.de

set USE_LIBTOOL while here
@
text
@a0 3
MD5 (zzuf-0.13.tar.gz) = dFecQp+WkfZBoU9AiZfULQ==
RMD160 (zzuf-0.13.tar.gz) = 75mIptl/ITCQInoLbYfk2ULtjBU=
SHA1 (zzuf-0.13.tar.gz) = GfkE1j0EUZSIVjnDgaYHyoajGbU=
@


1.4
log
@update to zzuf-0.12

ok jasper@@
@
text
@d1 5
a5 5
MD5 (zzuf-0.12.tar.gz) = Ofl0MrAuNYzfKRX4RO4xBg==
RMD160 (zzuf-0.12.tar.gz) = LrgcQTay9E8BLuw0SEGXE4rthoQ=
SHA1 (zzuf-0.12.tar.gz) = E6Wr7PWF9NqJPwWSSF+eUPtCrXE=
SHA256 (zzuf-0.12.tar.gz) = Con9tpEtTdaKyIxUlR6Hc4KU0TVi4NV2YvuQl0uUdxA=
SIZE (zzuf-0.12.tar.gz) = 446043
@


1.3
log
@update to zzuf-0.11

ok jasper@@
@
text
@d1 5
a5 5
MD5 (zzuf-0.11.tar.gz) = vLcn/7KvNXTSL4xXaPlUkA==
RMD160 (zzuf-0.11.tar.gz) = iHGJRywyMVaag5Zf8sxSKOlGZjE=
SHA1 (zzuf-0.11.tar.gz) = oOqtOHCxgQ17xlD42Oneouj/5rk=
SHA256 (zzuf-0.11.tar.gz) = kUpUPSIwp7jOE02LvhyK4Yzse+PEk2F3CsBO2hLPPgU=
SIZE (zzuf-0.11.tar.gz) = 440335
@


1.2
log
@update to zzuf-0.10

ok jasper@@
@
text
@d1 5
a5 5
MD5 (zzuf-0.10.tar.gz) = LLrqhMGDBN8V7250wPstFg==
RMD160 (zzuf-0.10.tar.gz) = UhNp6ZCx5523HeaISUsmSZW6pQg=
SHA1 (zzuf-0.10.tar.gz) = ktCUjmuCGUUBH5cHJE220XpNC6A=
SHA256 (zzuf-0.10.tar.gz) = pfqC5JwBch8K4zk0V4DFXRrp5C7WkJkBocaIgA5bg0w=
SIZE (zzuf-0.10.tar.gz) = 425897
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
MD5 (zzuf-0.9.tar.gz) = LGPDO4dId0VO9RI8PJZKIA==
RMD160 (zzuf-0.9.tar.gz) = /0kfmYc9OQuv0VoJ9ZDxQhS951k=
SHA1 (zzuf-0.9.tar.gz) = 4fxijY8MYznCFpJLO0gUD4FDdwg=
SHA256 (zzuf-0.9.tar.gz) = ffUjK4xgBIKLzeKsMtnXWys51PS9TJxWWC9zmqYu+lg=
SIZE (zzuf-0.9.tar.gz) = 422252
@


1.1.1.1
log
@import zzuf 0.9

zzuf is a transparent application input fuzzer. Its purpose is to find
bugs in applications by corrupting their user-contributed data (which
more than often comes from untrusted sources on the Internet). It works
by intercepting file and network operations and changing random bits in
the program's input. zzuf's behaviour is deterministic, making it easier
to reproduce bugs. Its main areas of use are:

* quality assurance: use zzuf to test existing software, or integrate it
  into your own software's testsuite
* security: very often, segmentation faults or memory corruption issues
  mean a potential security hole, zzuf helps exposing some of them

with help and ok jasper@@

@
text
@@
