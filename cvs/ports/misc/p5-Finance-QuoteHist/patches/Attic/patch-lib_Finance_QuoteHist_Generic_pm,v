head	1.3;
access;
symbols
	OPENBSD_5_6:1.2.0.44
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.42
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.40
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.38
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.36
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.34
	OPENBSD_5_0:1.2.0.32
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.30
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.28
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.26
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.24
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.22
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.20
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.18
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.16
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.14
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	sturm_2003-Apr-13:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.10.24.16.51.38;	author nigel;	state dead;
branches;
next	1.2;
commitid	EUuydYA8qbK1Fz2K;

1.2
date	2003.09.23.18.38.04;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.13.19.31.33;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.04.13.19.31.33;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update for p5-libwww 6.08, move to version 1.20
Ok sthen
@
text
@$OpenBSD: patch-lib_Finance_QuoteHist_Generic_pm,v 1.2 2003/09/23 18:38:04 sturm Exp $
--- lib/Finance/QuoteHist/Generic.pm.orig	2003-01-16 17:38:20.000000000 +1100
+++ lib/Finance/QuoteHist/Generic.pm	2003-09-02 01:34:03.000000000 +1000
@@@@ -24,6 +24,7 @@@@ my @@Scalar_Flags = qw(
 		      ratio_precision
 		      attempts
 		      reverse
+		      reverse_fetch
 		      adjusted
 		      has_non_adjusted
                       env_proxy
@@@@ -298,7 +299,13 @@@@ sub target_get {
   my(@@rows, %empty_fetch, %saw_good_rows);
 
   foreach my $s ($self->symbols) {
-    foreach ($self->$urlmaker($s)) {
+    my @@urllist;
+    if ($self->{reverse_fetch}) {
+      @@urllist = reverse ($self->$urlmaker($s));
+    } else {
+      @@urllist = ($self->$urlmaker($s));
+    }
+    foreach (@@urllist) {
       if ($empty_fetch{$s}) {
 	print STDERR ref $self,
 	   " passing on $s ($target) for now, empty fetch\n"
@@@@ -551,7 +558,9 @@@@ sub rows {
 
   # Prep the rows
   foreach (@@$rows) {
+    next if (!defined($_));
     foreach (@@$_) {
+      next if (!defined($_));
       # Zap leading and trailing white space
       s/^\s+//;
       s/\s+$//;
@@@@ -709,6 +718,11 @@@@ sub non_quote_row {
   my @@non_quotes;
   foreach (0 .. $#$row) {
     next if $_ == $dcol;
+    # Rows which have undefined fields
+    # (Yahoo include "date,dividend" in with the quotes)
+    if (!defined($row->[$_])) {
+      return $row;
+    }
     next if $row->[$_] =~ /^\s*$/;
     if ($row->[$_] !~ /^\s*\$*[\d\.,]+\s*$/) {
       return $row;
@@@@ -1191,6 +1205,24 @@@@ flag. If the overall order is not that i
 flag. Typically, site-specific sub classes of this module will take
 care of setting this appropriately. The default is 0.
 
+=item reverse_fetch
+
+(The default value is 0.)
+
+If true, we fetch each batch of rows in the reverse order to that
+provided by C<quote_urls()>.
+
+Note that the order of rows within blocks is not affected,
+so you might get orders like 7,8,9, 4,5,6, 1,2,3.
+
+Background: I was trying to use Finance::QuoteHist to 'backfill'
+data for current ASX symbols from 1990 to today. When I asked for a
+start date too early the Yahoo server returned a header with no data
+blocks. After more than C<attempts> failures the fetch was aborted.
+By requesting the blocks in the reverse order I get all the data.
+I assume this would not work for any symbols without quotes within
+the most recent requested block (ie defunct symbols).
+
 =item attempts
 
 Sets how persistently the module tries to retrieve the quotes. There
@


1.2
log
@update to 0.32, from maintainer Andrew Dalgleish
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_Finance_QuoteHist_Generic_pm,v 1.1.1.1 2003/04/13 19:31:33 sturm Exp $
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- lib/Finance/QuoteHist/Generic.pm.orig	Thu Mar 27 14:41:49 2003
+++ lib/Finance/QuoteHist/Generic.pm	Thu Mar 27 14:42:35 2003
d27 23
a49 2
@@@@ -1190,6 +1197,24 @@@@ of your rows is important you might want
 flag. If the overall order is not that important, then ignore this
d52 1
a52 1
+
d57 1
a57 1
+If true, Twe fetch each batch of rows in the reverse order to that
d70 1
a70 1
 
d73 1
@


1.1.1.1
log
@Initial import of Finance-QuoteHist 0.31

The Finance-QuoteHist bundle is several modules designed to fetch
historical stock quotes from the web.

WWW: http://www.mojotoad.com/sisk/projects/Finance-QuoteHist/

from Andrew Dalgleish <openbsd@@andrewdalgleish.dyndns.org>
minor cleanup by me
@
text
@@
