head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.18
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.14
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.12
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.24
	OPENBSD_5_0:1.1.1.1.0.22
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.20
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.18
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.16
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.14
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.12
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.10
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.8
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	niallo_20060305:1.1.1.1
	niallo:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.08.17.14.02.48;	author jasper;	state Exp;
branches;
next	1.2;
commitid	dTzcpTyc6hDacS4l;

1.2
date	2012.07.18.11.15.30;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.05.17.05.36;	author niallo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.03.05.17.05.36;	author niallo;	state Exp;
branches
	1.1.1.1.24.1;
next	;

1.1.1.1.24.1
date	2012.07.18.11.16.17;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to dtach-0.9
@
text
@$OpenBSD: patch-master_c,v 1.2 2012/07/18 11:15:30 jasper Exp $
--- master.c.orig	Mon May  9 03:34:34 2016
+++ master.c	Wed Aug 17 16:00:11 2016
@@@@ -195,7 +196,7 @@@@ create_socket(char *name)
 	if (s < 0)
 		return -1;
 	sockun.sun_family = AF_UNIX;
-	strcpy(sockun.sun_path, name);
+	strlcpy(sockun.sun_path, name, sizeof(sockun.sun_path));
 	if (bind(s, (struct sockaddr*)&sockun, sizeof(sockun)) < 0)
 	{
 		close(s);
@


1.2
log
@Security fix for CVE-2012-3368
Memory portion (random stack data) disclosure to the client by unclean client disconnect
@
text
@d1 4
a4 19
$OpenBSD: patch-master_c,v 1.1.1.1 2006/03/05 17:05:36 niallo Exp $

Last chunk:
Security fix for CVE-2012-3368
Memory portion (random stack data) disclosure to the client by unclean client disconnect 

Patch from upstream CVS.

--- master.c.orig	Thu Jan 31 06:59:54 2008
+++ master.c	Wed Jul 18 13:14:08 2012
@@@@ -17,6 +17,7 @@@@
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
 #include "dtach.h"
+#define HAVE_OPENPTY
 
 /* The pty struct - The pty information is stored here. */
 struct pty
@@@@ -189,7 +190,7 @@@@ create_socket(char *name)
a12 12
@@@@ -351,7 +352,10 @@@@ client_activity(struct client *p)
 
 	/* Push out data to the program. */
 	if (pkt.type == MSG_PUSH)
-		write(the_pty.fd, pkt.u.buf, pkt.len);
+	{
+		if (pkt.len <= sizeof(pkt.u.buf))
+			write(the_pty.fd, pkt.u.buf, pkt.len);
+	}
 
 	/* Attach or detach from the program. */
 	else if (pkt.type == MSG_ATTACH)
@


1.1
log
@Initial revision
@
text
@d1 10
a10 3
$OpenBSD$
--- master.c.orig	Sun Jul  4 17:07:03 2004
+++ master.c	Sun Feb 26 01:19:14 2006
d19 1
a19 1
@@@@ -124,7 +125,7 @@@@ create_socket(char *name)
d28 12
@


1.1.1.1
log
@Import dtach.

DESCR:

dtach is a tiny program that emulates the detach feature of screen,
allowing you to run a program in an environment that is protected from
the controlling terminal and attach to it later. dtach does not keep
track of the contents of the screen, and thus works best with programs
that know how to redraw themselves.

@
text
@@


1.1.1.1.24.1
log
@Security fix for CVE-2012-3368
Memory portion (random stack data) disclosure to the client by unclean client disconnect
@
text
@d1 3
a3 10
$OpenBSD: patch-master_c,v 1.2 2012/07/18 11:15:30 jasper Exp $

Last chunk:
Security fix for CVE-2012-3368
Memory portion (random stack data) disclosure to the client by unclean client disconnect 

Patch from upstream CVS.

--- master.c.orig	Thu Jan 31 06:59:54 2008
+++ master.c	Wed Jul 18 13:14:08 2012
d12 1
a12 1
@@@@ -189,7 +190,7 @@@@ create_socket(char *name)
a20 12
@@@@ -351,7 +352,10 @@@@ client_activity(struct client *p)
 
 	/* Push out data to the program. */
 	if (pkt.type == MSG_PUSH)
-		write(the_pty.fd, pkt.u.buf, pkt.len);
+	{
+		if (pkt.len <= sizeof(pkt.u.buf))
+			write(the_pty.fd, pkt.u.buf, pkt.len);
+	}
 
 	/* Attach or detach from the program. */
 	else if (pkt.type == MSG_ATTACH)
@

