head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.16
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.06.23.16.37.53;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2012.10.09.10.20.05;	author jeremy;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2013.06.23.16.38.28;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Security fix for CVE-2013-2208 tpp: Possibility of arbitrary code execution
when processing untrusted TPP template.
@
text
@$OpenBSD: patch-tpp_rb,v 1.1 2012/10/09 10:20:05 jeremy Exp $

Security fix for CVE-2013-2208 tpp: Possibility of arbitrary code execution
when processing untrusted TPP template.

https://bugzilla.redhat.com/show_bug.cgi?id=976684

--- tpp.rb.orig	Mon Apr 23 11:12:21 2007
+++ tpp.rb	Sun Jun 23 18:32:26 2013
@@@@ -7,6 +7,7 @@@@ version_number = "1.3.1"
 # ncurses-ruby module fails.
 def load_ncurses
   begin
+    require "rubygems"
     require "ncurses"
     include Ncurses
   rescue LoadError
@@@@ -725,9 +726,13 @@@@ class NcursesVisualizer < TppVisualizer
   end
 
   def do_exec(cmdline)
-    rc = Kernel.system(cmdline)
-    if not rc then
-      # @@todo: add error message
+    if $execok then
+      rc = Kernel.system(cmdline)
+      if not rc then
+        # @@todo: add error message
+      end
+    else
+      @@screen.addstr("--exec disabled by default for security reasons. Use option -x to enable it.")
     end
   end
 
@@@@ -1683,6 +1688,7 @@@@ def usage
   $stderr.puts "\t -t <type>\tset filetype <type> as output format"
   $stderr.puts "\t -o <file>\twrite output to file <file>"
   $stderr.puts "\t -s <seconds>\twait <seconds> seconds between slides (with -t autoplay)"
+  $stderr.puts "\t -x\t\tallow parsing of --exec in input files"
   $stderr.puts "\t --version\tprint the version"
   $stderr.puts "\t --help\t\tprint this help"
   $stderr.puts "\n\t currently available types: ncurses (default), autoplay, latex, txt"
@@@@ -1699,6 +1705,7 @@@@ input = nil
 output = nil
 type = "ncurses"
 time = 1
+$execok = nil
 
 skip_next = false
 
@@@@ -1720,6 +1727,8 @@@@ ARGV.each_index do |i|
     elsif ARGV[i] == "-s" then
       time = ARGV[i+1].to_i
       skip_next = true
+    elsif ARGV[i] == "-x" then
+      $execok = 1
     elsif input == nil then
       input = ARGV[i]
     end
@


1.1
log
@Require rubygems, so that this will work when ruby-ncurses starts
using the gem version.

OK landry@@
@
text
@d1 9
a9 3
$OpenBSD$
--- tpp.rb.orig	Mon Oct  8 23:56:58 2012
+++ tpp.rb	Mon Oct  8 23:57:13 2012
d18 42
@


1.1.2.1
log
@Security fix for CVE-2013-2208 tpp: Possibility of arbitrary code execution
when processing untrusted TPP template.
@
text
@d1 3
a3 9
$OpenBSD: patch-tpp_rb,v 1.2 2013/06/23 16:37:53 jasper Exp $

Security fix for CVE-2013-2208 tpp: Possibility of arbitrary code execution
when processing untrusted TPP template.

https://bugzilla.redhat.com/show_bug.cgi?id=976684

--- tpp.rb.orig	Mon Apr 23 11:12:21 2007
+++ tpp.rb	Sun Jun 23 18:32:26 2013
a11 42
@@@@ -725,9 +726,13 @@@@ class NcursesVisualizer < TppVisualizer
   end
 
   def do_exec(cmdline)
-    rc = Kernel.system(cmdline)
-    if not rc then
-      # @@todo: add error message
+    if $execok then
+      rc = Kernel.system(cmdline)
+      if not rc then
+        # @@todo: add error message
+      end
+    else
+      @@screen.addstr("--exec disabled by default for security reasons. Use option -x to enable it.")
     end
   end
 
@@@@ -1683,6 +1688,7 @@@@ def usage
   $stderr.puts "\t -t <type>\tset filetype <type> as output format"
   $stderr.puts "\t -o <file>\twrite output to file <file>"
   $stderr.puts "\t -s <seconds>\twait <seconds> seconds between slides (with -t autoplay)"
+  $stderr.puts "\t -x\t\tallow parsing of --exec in input files"
   $stderr.puts "\t --version\tprint the version"
   $stderr.puts "\t --help\t\tprint this help"
   $stderr.puts "\n\t currently available types: ncurses (default), autoplay, latex, txt"
@@@@ -1699,6 +1705,7 @@@@ input = nil
 output = nil
 type = "ncurses"
 time = 1
+$execok = nil
 
 skip_next = false
 
@@@@ -1720,6 +1727,8 @@@@ ARGV.each_index do |i|
     elsif ARGV[i] == "-s" then
       time = ARGV[i+1].to_i
       skip_next = true
+    elsif ARGV[i] == "-x" then
+      $execok = 1
     elsif input == nil then
       input = ARGV[i]
     end
@


