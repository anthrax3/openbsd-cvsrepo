head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2017.05.07.23.57.16;	author espie;	state Exp;
branches;
next	;
commitid	IszdCXs5hmPs0hF8;


desc
@@


1.1
log
@make it build with clang, clean up a shitload of warnings and errors,
make it obey CFLAGS, extract the embedded source so we can patch it.
@
text
@$OpenBSD$

Index: rocs/impl/mem.c
--- rocs/impl/mem.c.orig
+++ rocs/impl/mem.c
@@@@ -53,13 +53,13 @@@@ static void _mem_init( void ) {
 static char __opStr[1024];
 static const char* _mem_getLastOperation( void ) {
   const char* op = "?";
-  if( mt.type = MEMTYPE_ALLOC )
+  if( mt.type == MEMTYPE_ALLOC )
     op = "alloc";
-  else if( mt.type = MEMTYPE_FREE )
+  else if( mt.type == MEMTYPE_FREE )
     op = "free";
-  else if( mt.type = MEMTYPE_CHECK )
+  else if( mt.type == MEMTYPE_CHECK )
     op = "check";
-  else if( mt.type = MEMTYPE_REALLOC )
+  else if( mt.type == MEMTYPE_REALLOC )
     op = "realloc";
   sprintf( __opStr, ">>>>> memLastOp: op=%s p=0x%08X file=%s line=%d <<<<<", op, mt.p, mt.file, mt.line );
   return __opStr;
@
