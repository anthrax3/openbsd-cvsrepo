head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.32
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.28
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.30
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.26
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.24
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.22
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.20
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.18
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.16
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.14
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.10
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2008.09.01.20.02.53;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@- SECURITY update, add patches to fix oCERT-2008-014,
WordNet stack and heap overflows. Thanks to Rob Holland
of oCERT for contacting us with the advisory.

- housekeeping: regenerate PLIST, move to Tcl/Tk 8.5,
use SUBST_CMD macro rather than hand-rolled command.
@
text
@$OpenBSD$
--- lib/binsrch.c.orig	Wed Nov 29 21:02:21 2006
+++ lib/binsrch.c	Mon Sep  1 20:53:39 2008
@@@@ -28,7 +28,7 @@@@ char *read_index(long offset, FILE *fp) {
     char *linep;
 
     linep = line;
-    line[0] = '0';
+    line[0] = '\0';
 
     fseek( fp, offset, SEEK_SET );
     fgets(linep, LINE_LEN, fp);
@@@@ -58,6 +58,8 @@@@ char *bin_search(char *searchkey, FILE *fp)
         last_bin_search_offset = ftell( fp );
 	fgets(linep, LINE_LEN, fp);
 	length = (int)(strchr(linep, ' ') - linep);
+	if (length > (sizeof(key) - 1))
+            return(NULL);
 	strncpy(key, linep, length);
 	key[length] = '\0';
 	if(strcmp(key, searchkey) < 0) {
@@@@ -110,6 +112,8 @@@@ static int bin_search_key(char *searchkey, FILE *fp)
 	line[length++] =  c;
     if (getc(fp) == EOF) {	/* only 1 line in file */
 	length = (int)(strchr(linep, ' ') - linep);
+	if (length > (sizeof(key) - 1))
+            return(0);
 	strncpy(key, linep, length);
 	key[length] = '\0';
 	if(strcmp(key, searchkey) > 0) {
@@@@ -132,6 +136,8 @@@@ static int bin_search_key(char *searchkey, FILE *fp)
 	if (fgets(linep, LINE_LEN, fp) != NULL) {
   	    offset2 = ftell(fp); /* offset at start of next line */
 	    length = (int)(strchr(linep, ' ') - linep);
+	    if (length > (sizeof(key) - 1))
+                return(0);
 	    strncpy(key, linep, length);
 	    key[length] = '\0';
 	    if(strcmp(key, searchkey) < 0) {	/* further in file */
@
