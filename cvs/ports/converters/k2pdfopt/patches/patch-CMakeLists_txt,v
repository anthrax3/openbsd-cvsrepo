head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.2
	OPENBSD_6_2_BASE:1.1.1.1
	pirofti_20170818:1.1.1.1
	pirofti:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2017.08.18.12.07.51;	author pirofti;	state Exp;
branches
	1.1.1.1;
next	;
commitid	87QY0fRztIiE484F;

1.1.1.1
date	2017.08.18.12.07.51;	author pirofti;	state Exp;
branches;
next	;
commitid	87QY0fRztIiE484F;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@@@ -52,6 +52,8 @@@@ endif(JPEG_FOUND)
 include(FindJasper)
 if(JASPER_FOUND)
   set(HAVE_JASPER_LIB 1)
+  include_directories(SYSTEM ${CMAKE_INSTALL_PREFIX}/include/jasper)
+  set(K2PDFOPT_LIB ${K2PDFOPT_LIB} ${JASPER_LIBRARY})
 endif(JASPER_FOUND)
 
 # paths from willuslib/wgs.c
@@@@ -84,6 +86,22 @@@@ if(MUPDF_FOUND)
   )
 endif(MUPDF_FOUND)
 
+find_library(FREETYPE_LIB freetype PATHS /usr/X11R6/lib)
+if(FREETYPE_LIB)
+  include_directories(SYSTEM /usr/X11R6/include /usr/X11R6/include/freetype2)
+  message(STATUS "freetype libraries: ${FREETYPE_LIB}")
+  set(K2PDFOPT_LIB ${K2PDFOPT_LIB} ${FREETYPE_LIB})
+endif()
+
+find_library(MUPDF_LIB mupdf PATHS ${CMAKE_INSTALL_PREFIX}/lib)
+if(MUPDF_LIB)
+  set(HAVE_MUPDF_LIB 1) 
+  include_directories(SYSTEM ${CMAKE_INSTALL_PREFIX}/include)
+  message(STATUS "mupdf libraries: ${MUPDF_LIB}")
+  set(K2PDFOPT_LIB ${K2PDFOPT_LIB} ${MUPDF_LIB} 
+    -lopenjpeg -ljbig2dec -ljpeg)
+endif()
+
 pkg_check_modules(DJVU ddjvuapi)
 if(DJVU_FOUND)
   set(HAVE_DJVU_LIB 1)
@@@@ -92,14 +110,30 @@@@ if(DJVU_FOUND)
 endif(DJVU_FOUND)
 
 # HAVE_GOCR_LIB
-# HAVE_LEPTONICA_LIB
+# LEPTONICA
+find_library(LEPT_LIB lept PATHS ${CMAKE_INSTALL_PREFIX}/lib)
+if(LEPT_LIB)
+  set(HAVE_LEPTONICA_LIB 1) 
+  include_directories(SYSTEM ${CMAKE_INSTALL_PREFIX}/include leptonica_mod)
+  message(STATUS "leptonica libraries: ${LEPT_LIB}")
+  set(K2PDFOPT_LIB ${K2PDFOPT_LIB} ${LEPT_LIB}) 
+endif()
+
 # HAVE_TESSERACT_LIB
+find_library(TESSERACT_LIB tesseract PATHS ${CMAKE_INSTALL_PREFIX}/lib)
+if(TESSERACT_LIB)
+  set(HAVE_TESSERACT_LIB 1) 
+  include_directories(SYSTEM ${CMAKE_INSTALL_PREFIX}/include)
+  message(STATUS "tesseract libraries: ${TESSERACT_LIB}")
+  set(K2PDFOPT_LIB ${K2PDFOPT_LIB} ${TESSERACT_LIB}) 
+endif()
 
+
 # ---- Describe project
 
 SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DUSE_CMAKE -Wall")
 
-include_directories(. willuslib k2pdfoptlib)
+include_directories(. ${PROJECT_BINARY_DIR} include_mod willuslib k2pdfoptlib)
 
 configure_file (
   "${PROJECT_SOURCE_DIR}/config.h.in"
@@@@ -113,6 +147,7 @@@@ add_subdirectory(k2pdfoptlib)
 add_executable(k2pdfopt k2pdfopt.c)
 target_link_libraries (k2pdfopt k2pdfoptlib willuslib ${K2PDFOPT_LIB})

+install (TARGETS k2pdfopt RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)

 message("")
 message("-- Summary --")
@


1.1.1.1
log
@Import converters/k2pdfopt: make PDF's readable on Kindle devices.

K2pdfopt optimizes PDF/DJVU files for mobile e-readers (e.g. the Kindle)
and smartphones. It works well on multi-column PDF/DJVU files and can
re-flow text even on scanned PDF files. It can also be used as a general
PDF copying/cropping/re-sizing/OCR-ing manipulation tool. It can generate
native or bitmapped PDF output, with an optional OCR layer.

Typical use

  k2pdfopt -dev kv -mode 2col input.pdf

Supported devices (define your own by measuring your screen size)

  1. Kindle 1-5 (k2)
  2. Kindle DX (dx)
  3. Kindle Paperwhite (kpw)
  4. Kindle Paperwhite 2 (kp2)
  5. Kindle Paperwhite 3 (kp3)
  6. Pocketbook Basic 2 (pb2)
  7. Kindle Voyage (kv)
  8. Nook Simple Touch (nookst)
  9. Kobo Touch (kbt)
  10. Kobo Glo (kbg)
  11. Kobo Glo HD (kghd)
  12. Kobo Glo HD Full Screen (kghdfs)
  13. Kobo Mini (kbm)
  14. Kobo Aura (kba)
  15. Kobo Aura HD (kbhd)
  16. Kobo H2O (kbh2o)
  17. Kobo H2O Full Screen (kbh2ofs)
  18. Kobo Aura One (kao)
  19. Nexus 7 (nex7)
  20. Other (specify width, height, etc.)


With feedback from sthen@@, OK edd@@
@
text
@@
