head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.10
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.8
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.4
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.30
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.28
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.26
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.24
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.22
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.20
	OPENBSD_5_0:1.5.0.18
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.16
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.14
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.12
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.10
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.8
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.6
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.4
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.1.1.0.6
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.4
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	lebel_2003-May-30:1.1.1.1
	lebel:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2015.01.18.03.12.58;	author naddy;	state Exp;
branches;
next	1.5;
commitid	INAcawJqik7lWSVj;

1.5
date	2007.04.05.15.37.48;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2006.07.13.07.28.21;	author steven;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.07.10.39.47;	author sturm;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.05.15.58.31;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.30.14.46.19;	author lebel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.30.14.46.19;	author lebel;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Drop remaining MD5/RMD160/SHA1 checksums.
@
text
@SHA256 (Unicode-MapUTF8-1.11.tar.gz) = 21NNdLGLJGR0PvxqraUYVOD96I+HXSCKFU7dufK1DpM=
SIZE (Unicode-MapUTF8-1.11.tar.gz) = 16402
@


1.5
log
@base64 distinfo with SHA256
@
text
@a0 3
MD5 (Unicode-MapUTF8-1.11.tar.gz) = FuZu4L3A5sycNuKSEtj/3A==
RMD160 (Unicode-MapUTF8-1.11.tar.gz) = /+NbRRoG7ZlFLjCygghyjaC+P1k=
SHA1 (Unicode-MapUTF8-1.11.tar.gz) = xyOXq39xF+Gg9YIc+p+rzJtYs+A=
@


1.4
log
@update to 1.11
@
text
@d1 4
a4 3
MD5 (Unicode-MapUTF8-1.11.tar.gz) = 16e66ee0bdc0e6cc9c36e29212d8ffdc
RMD160 (Unicode-MapUTF8-1.11.tar.gz) = ffe35b451a06ed99452e30b28208728da0be3f59
SHA1 (Unicode-MapUTF8-1.11.tar.gz) = c72397ab7f7117e1a0f5821cfa9fabcc9b58b3e0
@


1.3
log
@update to p5-Unicode-MapUTF8-1.10
unbreak make regress

from Bernd Ahlers <bernd at ba-net.org>
@
text
@d1 4
a4 4
MD5 (Unicode-MapUTF8-1.10.tar.gz) = 53c24ee100560f9ab46438716f6498d7
RMD160 (Unicode-MapUTF8-1.10.tar.gz) = cc9cca1c4d50a12b4b5d2a912ed6021cee52cf76
SHA1 (Unicode-MapUTF8-1.10.tar.gz) = 0629b04053612aef95d942d62ea2e848cbecb5cf
SIZE (Unicode-MapUTF8-1.10.tar.gz) = 8043
@


1.2
log
@SIZE
@
text
@d1 4
a4 4
MD5 (Unicode-MapUTF8-1.09.tar.gz) = 32b2593bb38b24b5f5fef2aaf444a367
RMD160 (Unicode-MapUTF8-1.09.tar.gz) = 89fdec897f47fabe2cf9f8d60efb01621b9f6b1e
SHA1 (Unicode-MapUTF8-1.09.tar.gz) = dc01ef183f1b751e381a9a5519b96c8ed6a7b11a
SIZE (Unicode-MapUTF8-1.09.tar.gz) = 7667
@


1.1
log
@Initial revision
@
text
@d4 1
@


1.1.1.1
log
@initial import of converters/p5-Unicode-MapUTF8 1.08:
--
Provides an adapter layer between core routines for converting to and
from UTF8 and other encodings. In essence, a way to give multiple
existing Unicode modules a single common interface so you don't have to
know the underlaying implementations to do simple UTF8 to-from other
character set encoding conversions. As such, it wraps the
Unicode::String, Unicode::Map8, Unicode::Map and Jcode modules in a
standardized and simple API.

This also provides general character set conversion operation based on
UTF8 - it is possible to convert between any two compatible and
supported character sets via a simple two step chaining of conversions.

As with most things Perlish - if you give it a few big chunks of text to
chew on instead of lots of small ones it will handle many more
characters per second.

By design, it can be easily extended to encompass any new charset
encoding conversion modules that arrive on the scene.
@
text
@@
