head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.16
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.12
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.14
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.11.29.19.07.57;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to wv2 0.4.2.

With tweaks from dcoppa@@, ok dcoppa@@ brad@@
@
text
@$OpenBSD$
--- CMakeLists.txt.orig	Sat Oct 31 19:22:43 2009
+++ CMakeLists.txt	Tue Nov 27 17:44:05 2012
@@@@ -59,8 +59,16 @@@@ IF( HAVE_SYS_ICONV_H )
   SET( ICONV_COMPILE_DEFINITIONS ${ICONV_COMPILE_DEFINITIONS} "-DHAVE_SYS_ICONV_H" )
 ENDIF( HAVE_SYS_ICONV_H )
 
-TRY_RUN( MODERN_ICONV_RUN MODERN_ICONV_COMPILE ${wvWare_BINARY_DIR}/CMakeTmp ${wvWare_SOURCE_DIR}/cmake/TestModernIconv.c COMPILE_DEFINITIONS ${ICONV_COMPILE_DEFINITIONS} )
+SET(CMAKE_REQUIRED_DEFINITIONS ${ICONV_COMPILE_DEFINITIONS})
+SET(CMAKE_REQUIRED_INCLUDES ${ICONV_INCLUDE_DIR})
+SET(CMAKE_REQUIRED_LIBRARIES ${ICONV_LIBRARIES})
+execute_process(COMMAND /bin/cat ${wvWare_SOURCE_DIR}/cmake/TestModernIconv.c OUTPUT_VARIABLE SRC)
+#TRY_RUN( MODERN_ICONV_RUN MODERN_ICONV_COMPILE ${wvWare_BINARY_DIR}/CMakeTmp ${wvWare_SOURCE_DIR}/cmake/TestModernIconv.c COMPILE_DEFINITIONS "${ICONV_COMPILE_DEFINITIONS}" OUTPUT_VARIABLE OUTPUT )
+include(CheckCSourceCompiles)
+check_c_source_compiles("${SRC}" MODERN_ICONV_COMPILE )
 
+message( "${OUTPUT}" )
+
 IF( MODERN_ICONV_RUN GREATER 0 OR NOT MODERN_ICONV_COMPILE )
   MESSAGE( STATUS "wv2 depends on a modern iconv installation, supporting UNICODELITTLE and" )
   MESSAGE( STATUS "UNICODEBIG. The detected iconv version doesn't support these conversions." )
@@@@ -139,7 +147,6 @@@@ ENDIF( MODERN_ZLIB_RUN GREATER 0 AND WITH_ZLIB )
 
 IF( ZLIB_FOUND )
   SET( _WV2_LDFLAGS ${_WV2_LDFLAGS} ${ZLIB_LIBRARIES} )
-  SET( _WV2_CFLAGS ${_WV2_CFLAGS} ${ZLIB_INCLUDE_DIR} )
 ENDIF( ZLIB_FOUND )
 
 IF( LIBGSF_FOUND )
@@@@ -165,7 +172,7 @@@@ LIST( REMOVE_DUPLICATES _WV2_CFLAGS )
 
 FOREACH( _lib ${_WV2_LDFLAGS} )
   # Remove path to the library and suffixes. Transformation example: libglib-2.0.so => glib-2.0
-  STRING( REGEX REPLACE "[\\\\ _\\/\\.a-zA-Z0-9\\-]*\\/lib([_\\.a-zA-Z0-9\\-]*)\\.[_a-zA-Z0-9\\-\\.]*" \\1 _lib_no_path ${_lib} )
+  STRING( REGEX REPLACE "[\\\\ _\\/\\.a-zA-Z0-9\\-]*\\/lib([_\\.a-zA-Z0-9\\-]*)\\.so\\.[_a-zA-Z0-9\\-\\.]*" \\1 _lib_no_path ${_lib} )
   SET( WV2_LDFLAGS "${WV2_LDFLAGS} ${CMAKE_LINK_LIBRARY_FLAG}${_lib_no_path}" )
 ENDFOREACH( _lib )
 
@
