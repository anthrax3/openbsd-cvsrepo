head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.0.18
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.16
	OPENBSD_5_0:1.1.0.14
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.12
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.11.29.19.07.57;	author pascal;	state dead;
branches;
next	1.1;

1.1
date	2008.07.25.15.16.34;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to wv2 0.4.2.

With tweaks from dcoppa@@, ok dcoppa@@ brad@@
@
text
@$OpenBSD: patch-configure,v 1.1 2008/07/25 15:16:34 sthen Exp $
--- configure.orig	Fri Jul 25 15:59:24 2008
+++ configure	Fri Jul 25 16:01:23 2008
@@@@ -25945,6 +25945,7 @@@@ _ACEOF
 cat confdefs.h >>conftest.$ac_ext
 cat >>conftest.$ac_ext <<_ACEOF
 /* end confdefs.h.  */
+#include <math.h>
 
 /* Override any gcc2 internal prototype to avoid an error.  */
 #ifdef __cplusplus
@@@@ -25952,13 +25953,12 @@@@ extern "C"
 #endif
 /* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
-char isnan ();
+double val = 0.0;
+
 int
 main ()
 {
-isnan ();
-  ;
-  return 0;
+  return isnan (val);
 }
 _ACEOF
 rm -f conftest.$ac_objext conftest$ac_exeext
@


1.1
log
@Fix build following isnan() change from a function to a macro.
From pkgsrc.

ok martynas@@
@
text
@d1 1
a1 1
$OpenBSD$
@

