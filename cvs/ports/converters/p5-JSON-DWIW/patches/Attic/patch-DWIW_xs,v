head	1.2;
access;
symbols
	simon_20080820:1.1.1.1 simon:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2009.01.13.14.48.57;	author simon;	state dead;
branches;
next	1.1;

1.1
date	2008.08.20.11.05.39;	author simon;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.08.20.11.05.39;	author simon;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to version 0.28 and remove our merged patches
@
text
@$OpenBSD: patch-DWIW_xs,v 1.1 2008/08/20 11:05:39 simon Exp $

Necessary to prevent segfaults on 64bit arches.
Bug filed upstream as http://rt.cpan.org/Ticket/Display.html?id=38499

--- DWIW.xs.orig	Fri Aug 15 10:25:12 2008
+++ DWIW.xs	Fri Aug 15 10:25:56 2008
@@@@ -51,14 +51,14 @@@@ JSON_TRACE(char *fmt, ...) {
 
 
 static SV *
-vjson_encode_error(self_context * ctx, const char * file, int line_num, const char * fmt, va_list ap) {
+vjson_encode_error(self_context * ctx, const char * file, int line_num, const char * fmt, va_list *ap) {
     SV * error = newSVpv("", 0);
     bool junk = 0;
     HV * error_data = Nullhv;
 
     sv_setpvf(error, "JSON::DWIW v%s - ", MOD_VERSION);
 
-    sv_vcatpvfn(error, fmt, strlen(fmt), &ap, (SV **)0, 0, &junk);
+    sv_vcatpvfn(error, fmt, strlen(fmt), ap, (SV **)0, 0, &junk);
 
     error_data = newHV();
     ctx->error_data = newRV_noinc((SV *)error_data);
@@@@ -74,7 +74,7 @@@@ json_encode_error(self_context * ctx, const char * fil
     SV * error;
     
     va_start(ap, fmt);
-    error = vjson_encode_error(ctx, file, line_num, fmt, ap);
+    error = vjson_encode_error(ctx, file, line_num, fmt, &ap);
     va_end(ap);
 
     return error;
@@@@ -99,7 +99,7 @@@@ JSON_ENCODE_ERROR(self_context * ctx, const char * fmt
     SV * error;
 
     va_start(ap, fmt);
-    error = vjson_encode_error(ctx, NULL, 0, fmt, ap);
+    error = vjson_encode_error(ctx, NULL, 0, fmt, &ap);
     va_end(ap);
 
     return error;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import p5-JSON-DWIW

Other JSON modules require setting several parameters before calling the
conversion methods to do what the author wants.  This module does things
by default that the author thinks should be done when working with JSON
in Perl.  This module also encodes and decodes faster than JSON.pm and
JSON::Syck in the benchmarks.
@
text
@@
