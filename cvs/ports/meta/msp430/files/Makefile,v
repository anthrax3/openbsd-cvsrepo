head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.03.24.08.28.24;	author jj;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.25.10.06.33;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix msp430 example Makefile targets. ok @@jasper
@
text
@# $OpenBSD: Makefile,v 1.1 2013/01/25 10:06:33 jasper Exp $
#
# Sample Makefile for developing MSP430 projects on OpenBSD.

MCU=	msp430
MMCU=	msp430g2231 # msp430f5529

CFLAGS  = -mmcu=$(MMCU) -g -Os -Wall -Wunused -I../includes/
ASFLAGS = -mmcu=$(MMCU) -x assembler-with-cpp -Wa,-gstabs
LDFLAGS = -mmcu=$(MMCU) -Wl,-Map=$(TARGET).map
CC	 = $(MCU)-gcc
LD	 = $(MCU)-ld
AR	 = $(MCU)-ar
AS	 = $(MCU)-gcc
GASP	 = $(MCU)-gasp
NM	 = $(MCU)-nm
OBJCOPY  = $(MCU)-objcopy
OBJDUMP  = $(MCU)-objdump
RANLIB   = $(MCU)-ranlib
STRIP	 = $(MCU)-strip
SIZE	 = $(MCU)-size
READELF  = $(MCU)-readelf
MAKETXT  = srec_cat

TARGET= main

SOURCES = main.c
OBJECTS = $(SOURCES:.c=.o)

all: $(TARGET).elf $(TARGET).hex $(TARGET).txt

$(TARGET).elf: $(OBJECTS)
	@@echo "Linking $@@"
	$(CC) $(OBJECTS) $(LDFLAGS) $(LIBS) -o $@@
	@@echo
	@@echo ">>>> Size of Firmware <<<<"
	$(SIZE) $(TARGET).elf
	@@echo

$(TARGET).hex: $(TARGET).elf
	$(OBJCOPY) -O ihex $(TARGET).elf $(TARGET).hex

%.txt: %.hex
	$(MAKETXT) -O $@@ -TITXT $< -I

%.o: %.c
	@@echo "Compiling $<"
	$(CC) -c $(CFLAGS) -o $@@ $<

%.lst: %.c
	$(CC) -c $(CFLAGS) -Wa,-anlhd $< > $@@

$(TARGET).txt: $(TARGET).hex
	$(MAKETXT) -O $(TARGET).txt -TITXT $(TARGET).hex -I

program: $(TARGET).elf
	mspdebug rf2500 "prog $(TARGET).elf" exit

clean:
	rm -fr $(TARGET).elf $(TARGET).hex $(OBJECTS)

asm:
	${OBJDUMP} -d ${OBJECTS}
@


1.1
log
@- add a sample Makefile and README
- add RUN_DEPENDS on devel/srecord

as discussed with jj@@
@
text
@d1 1
a1 1
# $OpenBSD$
d18 1
d57 1
a57 1
	mspdebug rf2500 prog $(TARGET).elf exit
@

