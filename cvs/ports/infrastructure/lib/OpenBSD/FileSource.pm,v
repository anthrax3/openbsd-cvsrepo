head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.14
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.12
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.07.09.11.26.11;	author espie;	state Exp;
branches;
next	1.2;
commitid	Hk8PSAToaDdq3YqM;

1.2
date	2011.11.27.11.29.33;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.08.20.15.29.41;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@add glue necessary for check-lib-depends to scan out-of-order packages
problem noticed by Giovanni Bechis
@
text
@# $OpenBSD: FileSource.pm,v 1.2 2011/11/27 11:29:33 espie Exp $
# Copyright (c) 2004-2010 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;

# part of check-lib-depends
# FileSource: where we get the files to analyze

package OpenBSD::FileSource;

sub directory
{
	my $self = shift;
	return $self->{location};
}

# file system
package OpenBSD::FsFileSource;
our @@ISA = qw(OpenBSD::FileSource);
sub new
{
	my ($class, $location) = @@_;
	bless {location => $location }, $class
}

sub retrieve
{
	my ($self, $state, $item) = @@_;
	return $item->fullname;
}

sub skip
{
}

sub clean
{
}

# package archive
package OpenBSD::PkgFileSource;
our @@ISA = qw(OpenBSD::FileSource);
sub new
{
	my ($class, $handle, $location) = @@_;
	bless {handle => $handle, location => $location }, $class;
}

sub prepare_to_extract
{
	my ($self, $item) = @@_;
	require OpenBSD::ArcCheck;
	my $o = $self->{handle}->next;
	$o->{cwd} = $item->cwd;
	if (!$o->check_name($item)) {
		die "Error checking name for $o->{name} vs. $item->{name}\n";
	}
	$o->{name} = $item->fullname;
	$o->{destdir} = $self->{location};
	return $o;
}

sub next
{
	my $self = shift;
	my $o = $self->{handle}->next;
	if (defined $o) {
		$o->{destdir} = $self->{location};
	}
	return $o;
}

sub extracted_name
{
	my ($self, $item) = @@_;
	return $self->{location}.$item->fullname;
}

sub retrieve
{
	my ($self, $state, $item) = @@_;
	my $o = $self->prepare_to_extract($item);
	$o->create;
	return $item->fullname;
}

sub skip
{
	my ($self, $item) = @@_;
	my $o = $self->prepare_to_extract($item);
	$self->{handle}->skip;
}

sub clean
{
	my ($self, $item) = @@_;
	unlink($self->extracted_name($item));
}

1;
@


1.2
log
@unify ldd/objdump runs somewhat
tweak FileSource to return its directory separately from the filename,
so that running objdump does a chdir
adjust filename to be a relative path.
@
text
@d1 1
a1 1
# $OpenBSD: FileSource.pm,v 1.1 2010/08/20 15:29:41 espie Exp $
d73 10
@


1.1
log
@move a large part of check-lib-depends into separate modules
@
text
@d1 1
a1 1
# $OpenBSD: check-lib-depends,v 1.2 2010/08/20 15:22:21 espie Exp $
d24 6
d42 1
a42 1
	return $self->{location}.$item->fullname;
d87 1
a87 1
	return $self->extracted_name($item);
@

