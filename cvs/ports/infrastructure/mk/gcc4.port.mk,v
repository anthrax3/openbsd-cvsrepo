head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.4
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.2
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.7.0.6
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.6
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.4
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.0.6
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.4
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.12
date	2016.03.08.16.46.05;	author naddy;	state Exp;
branches;
next	1.11;
commitid	D5pqOlGjwX8ZHNkg;

1.11
date	2015.05.28.08.12.38;	author pascal;	state Exp;
branches;
next	1.10;
commitid	4sHetbmFOHioWzJM;

1.10
date	2015.02.12.16.14.00;	author brad;	state Exp;
branches;
next	1.9;
commitid	D8DpZykPNkUh1r4V;

1.9
date	2014.03.10.21.35.04;	author landry;	state Exp;
branches;
next	1.8;

1.8
date	2014.03.10.20.26.00;	author landry;	state Exp;
branches;
next	1.7;

1.7
date	2013.02.07.17.57.45;	author pascal;	state Exp;
branches;
next	1.6;

1.6
date	2011.12.14.18.20.12;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.21.16.45.21;	author steven;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.28.13.29.05;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.28.12.26.39;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.11.19.50.55;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.21.14.26.07;	author robert;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Make the gcc4 MODULE consistently pull in a single version of gcc.
Having different versions on different archs does not work.  GCC 4.6
fails on ports that build with 4.9.
ok landry@@ tobiasu@@
@
text
@MODGCC4_VERSION?=4.9
.include "${PORTSDIR}/lang/gcc/${MODGCC4_VERSION}/gcc4.port.mk"
@


1.11
log
@Switch gcc4 default to 4.9 (except on alpha) to fix bulk builds now that
libreoffice requires 4.9.

tested in a bulk build by aja@@
@
text
@a0 3
.if ${MACHINE_ARCH} == "alpha"
MODGCC4_VERSION?=4.6
.else
a1 1
.endif
@


1.10
log
@Switch hppa over to using 4.8.

ok pascal@@ tobiasu@@
@
text
@d4 1
a4 1
MODGCC4_VERSION?=4.8
@


1.9
log
@Remove trailing spaces (long line iz looooooong!) that snuck in when i
failed at copy&paste.
@
text
@d1 1
a1 1
.if ${MACHINE_ARCH} == "hppa" || ${MACHINE_ARCH} == "alpha"
@


1.8
log
@Default to gcc 4.8 for ports using gcc4 module.
Stay at 4.6 for hppa & alpha for now, since lang/gcc/4.8 doesnt build there
yet.
Discussed with espie@@ pascal@@ sthen@@ tobiasu@@ ajacoutot@@
@
text
@d1 3
a3 3
.if ${MACHINE_ARCH} == "hppa" || ${MACHINE_ARCH} == "alpha"                                                                                                   
MODGCC4_VERSION?=4.6                                                                                                                                          
.else                                                                                                                                                         
@


1.7
log
@Change default gcc version to 4.6 now that 4.2 is unhooked.

ok brad@@ tobiasu@@ espie@@
@
text
@d1 5
a5 1
MODGCC4_VERSION?=4.6
@


1.6
log
@Add support for MODGCC4_VERSION which can be used to define which gcc
version to use with the gcc4 module.
It defaults to 4.2, so there is no functional change.
@
text
@d1 1
a1 1
MODGCC4_VERSION?=4.2
@


1.5
log
@drop USE_GCC4. we don't use this and the module checks COMPILER_VERSION.

from/discussed with brad
@
text
@d1 2
a2 1
.include "${PORTSDIR}/lang/gcc/4.2/gcc4.port.mk"
@


1.4
log
@- revert; USE_GCC* does not belong to the gcc* MODULES usage and
the man page has always been wrong about it

requested by and ok steven@@
@
text
@a0 3
USE_GCC4 ?= No

.if ${USE_GCC4:L} == "no"
a1 1
.endif
@


1.3
log
@- reverse logic so that gcc3/4 is actually used when USE_GCC* is set
- set USE_GCC* to Yes by default when using a gcc* MODULE which makes
much more sense

discussed with and ok robert@@
@
text
@d1 1
a1 1
USE_GCC4 ?= Yes
d3 1
a3 1
.if ${USE_GCC4:L} == "yes"
@


1.2
log
@stylistic changes
@
text
@d1 1
a1 1
USE_GCC4 ?= No
d3 1
a3 1
.if ${USE_GCC4:L} == "no"
@


1.1
log
@Add MODGCC4 support and use gcc 4.2;

ok espie@@
@
text
@d1 1
a1 1
USE_GCC4?=No
@

