head	1.65;
access;
symbols
	OPENBSD_6_0:1.60.0.2
	OPENBSD_6_0_BASE:1.60
	OPENBSD_5_9:1.59.0.4
	OPENBSD_5_9_BASE:1.59
	OPENBSD_5_8:1.59.0.6
	OPENBSD_5_8_BASE:1.59
	OPENBSD_5_7:1.59.0.2
	OPENBSD_5_7_BASE:1.59
	OPENBSD_5_6:1.56.0.2
	OPENBSD_5_6_BASE:1.56
	OPENBSD_5_5:1.55.0.2
	OPENBSD_5_5_BASE:1.55
	OPENBSD_5_4:1.53.0.2
	OPENBSD_5_4_BASE:1.53
	OPENBSD_5_3:1.51.0.2
	OPENBSD_5_3_BASE:1.51
	OPENBSD_5_2:1.48.0.2
	OPENBSD_5_2_BASE:1.48
	OPENBSD_5_1_BASE:1.43
	OPENBSD_5_1:1.43.0.2
	OPENBSD_5_0:1.35.0.2
	OPENBSD_5_0_BASE:1.35
	OPENBSD_4_9:1.32.0.2
	OPENBSD_4_9_BASE:1.32
	OPENBSD_4_8:1.27.0.2
	OPENBSD_4_8_BASE:1.27
	OPENBSD_4_7:1.23.0.2
	OPENBSD_4_7_BASE:1.23
	OPENBSD_4_6:1.20.0.6
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.4
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.20.0.2
	OPENBSD_4_4_BASE:1.20
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.12.0.2
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4;
locks; strict;
comment	@# @;


1.65
date	2017.02.26.11.18.25;	author espie;	state Exp;
branches;
next	1.64;
commitid	pcMcAWFxJA4zDbRh;

1.64
date	2017.02.21.13.15.01;	author espie;	state Exp;
branches;
next	1.63;
commitid	iQOSF3GmiuLQDZS1;

1.63
date	2017.02.18.15.15.08;	author espie;	state Exp;
branches;
next	1.62;
commitid	GqySWuWsdKO6Ri2k;

1.62
date	2017.02.13.12.57.50;	author espie;	state Exp;
branches;
next	1.61;
commitid	p7wT7YB92mOs9Cqj;

1.61
date	2017.01.25.14.16.46;	author espie;	state Exp;
branches;
next	1.60;
commitid	DUPUrQYqRQa6Pp1o;

1.60
date	2016.04.26.10.56.59;	author sthen;	state Exp;
branches;
next	1.59;
commitid	FbIvW5WdGqu5h4SS;

1.59
date	2014.09.16.09.08.02;	author espie;	state Exp;
branches;
next	1.58;
commitid	3rQEXo6m1B1b8bwA;

1.58
date	2014.09.09.09.34.04;	author espie;	state Exp;
branches;
next	1.57;
commitid	CqL8BniOCzdjgRj5;

1.57
date	2014.08.10.08.59.48;	author espie;	state Exp;
branches;
next	1.56;
commitid	J6YjvtGPOV1NhCrC;

1.56
date	2014.03.09.20.33.37;	author espie;	state Exp;
branches;
next	1.55;

1.55
date	2014.02.11.10.34.34;	author espie;	state Exp;
branches;
next	1.54;

1.54
date	2013.11.30.16.06.56;	author espie;	state Exp;
branches;
next	1.53;

1.53
date	2013.03.10.22.27.15;	author espie;	state Exp;
branches;
next	1.52;

1.52
date	2013.03.02.13.08.49;	author espie;	state Exp;
branches;
next	1.51;

1.51
date	2013.01.06.11.57.21;	author espie;	state Exp;
branches;
next	1.50;

1.50
date	2012.10.10.10.55.33;	author espie;	state Exp;
branches;
next	1.49;

1.49
date	2012.08.18.07.58.20;	author espie;	state Exp;
branches;
next	1.48;

1.48
date	2012.05.28.09.43.17;	author espie;	state Exp;
branches;
next	1.47;

1.47
date	2012.05.28.09.38.04;	author espie;	state Exp;
branches;
next	1.46;

1.46
date	2012.05.15.11.48.07;	author espie;	state Exp;
branches;
next	1.45;

1.45
date	2012.05.07.21.11.44;	author halex;	state Exp;
branches;
next	1.44;

1.44
date	2012.02.17.07.40.35;	author espie;	state Exp;
branches;
next	1.43;

1.43
date	2011.12.02.15.14.20;	author espie;	state Exp;
branches;
next	1.42;

1.42
date	2011.11.20.15.38.08;	author espie;	state Exp;
branches;
next	1.41;

1.41
date	2011.11.19.11.36.53;	author espie;	state Exp;
branches;
next	1.40;

1.40
date	2011.11.19.11.33.39;	author espie;	state Exp;
branches;
next	1.39;

1.39
date	2011.11.17.17.53.22;	author espie;	state Exp;
branches;
next	1.38;

1.38
date	2011.11.15.20.08.36;	author espie;	state Exp;
branches;
next	1.37;

1.37
date	2011.11.14.10.29.58;	author espie;	state Exp;
branches;
next	1.36;

1.36
date	2011.09.24.07.36.02;	author espie;	state Exp;
branches;
next	1.35;

1.35
date	2011.03.28.00.16.13;	author fgsch;	state Exp;
branches;
next	1.34;

1.34
date	2011.03.22.19.56.51;	author espie;	state Exp;
branches;
next	1.33;

1.33
date	2011.03.20.19.28.07;	author espie;	state Exp;
branches;
next	1.32;

1.32
date	2010.11.07.00.03.38;	author espie;	state Exp;
branches;
next	1.31;

1.31
date	2010.10.28.11.14.23;	author espie;	state Exp;
branches;
next	1.30;

1.30
date	2010.10.18.08.32.21;	author espie;	state Exp;
branches;
next	1.29;

1.29
date	2010.08.20.23.11.07;	author espie;	state Exp;
branches;
next	1.28;

1.28
date	2010.08.20.15.02.24;	author espie;	state Exp;
branches;
next	1.27;

1.27
date	2010.07.06.12.09.55;	author espie;	state Exp;
branches;
next	1.26;

1.26
date	2010.04.20.21.00.35;	author espie;	state Exp;
branches;
next	1.25;

1.25
date	2010.04.20.10.03.36;	author espie;	state Exp;
branches;
next	1.24;

1.24
date	2010.04.05.13.59.03;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2010.03.05.07.49.29;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2010.02.12.12.00.19;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2009.07.26.12.14.05;	author espie;	state Exp;
branches;
next	1.20;

1.20
date	2008.07.26.10.59.20;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	2008.07.03.17.00.38;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2008.05.23.16.53.28;	author fgsch;	state Exp;
branches;
next	1.17;

1.17
date	2008.05.17.11.02.22;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2008.05.13.14.52.44;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2007.07.08.17.57.56;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2007.06.28.21.05.48;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2007.06.03.12.51.59;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2006.12.26.15.00.24;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2006.12.02.11.27.46;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2006.11.27.15.38.01;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2006.11.03.23.19.42;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2006.11.01.12.41.35;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2006.07.08.09.20.30;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.03.19.32.25;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.02.20.30.12;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.28.21.50.12;	author naddy;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.15.00.05.41;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.04.14.37.10;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.02.09.53.27;	author espie;	state Exp;
branches;
next	;


desc
@@


1.65
log
@GC old stuff
@
text
@# $OpenBSD: pkgpath.mk,v 1.64 2017/02/21 13:15:01 espie Exp $
# ex:ts=4 sw=4 filetype=make:
#	pkgpath.mk - 2003 Marc Espie
#	This file is in the public domain.

# definitions common to bsd.port.mk and bsd.port.subdir.mk

PORTSDIR_PATH ?= ${PORTSDIR}:${PORTSDIR}/mystuff
TMPDIR ?= /tmp
DANGEROUS ?= No

_PERLSCRIPT = /usr/bin/perl ${PORTSDIR}/infrastructure/bin

.if !defined(PKGPATH)
PKGPATH != PORTSDIR_PATH=${PORTSDIR_PATH} \
	${_PERLSCRIPT}/getpkgpath ${.CURDIR}
.  if empty(PKGPATH)
ERRORS += "Fatal: can't figure out PKGPATH"
PKGPATH =${.CURDIR}
.  endif
.endif

# Code to invoke to split dir,-multi,flavor

_pflavor_fragment = \
	broken() { \
	  echo 1>&2 ">> Broken dependency: $$@@ $$extra_msg"; \
	  reported=true; \
	} ; \
	multi=''; flavor=''; space=''; \
	reported=false; found_dir=false; sawmulti=false; \
	case "$$subdir" in \
	"") \
		broken "empty directory";; \
	*,*) \
		esubdir=$$subdir,; IFS=,; first=true; \
		for i in $$esubdir; do \
			if $$first; then \
				dir=$$i; first=false; continue; \
			fi; \
			case X"$$i" in \
				X-*) \
					if $$sawmulti; then \
						broken "several subpackages in $$subdir"; \
					fi; \
					multi="$$i"; sawmulti=true;; \
				,) \
					sawflavor=true;; \
				*) \
					sawflavor=true; \
					flavor="$$flavor$$space$$i"; \
					space=' ';; \
			esac \
		done; \
		unset IFS;; \
	*) \
		dir=$$subdir;; \
	esac; \
	toset="PKGPATH=$$dir ARCH=${ARCH}"; \
	case X"$$multi" in \
		X) unset SUBPACKAGE || true;; \
		*) toset="$$toset SUBPACKAGE=\"$$multi\"";; \
	esac; \
	case $$dir in \
	*/) broken "$$dir ends with /";; \
	*//*) broken "$$dir contains //";; \
	esac; \
	if $$sawflavor; then \
		toset="$$toset FLAVOR=\"$$flavor\""; \
	else \
		unset FLAVOR||true; \
	fi; \
	if ! $$reported; then \
		IFS=:; bases=${PORTSDIR_PATH}; \
		for base in $$bases; do \
			cd $$base 2>/dev/null || continue; \
			if [ -L $$dir ]; then \
				broken "$$base/$$dir is a symbolic link"; \
				break; \
			fi; \
			if cd $$dir 2>/dev/null; then \
				found_dir=true; \
				break; \
			fi; \
		done; unset IFS; \
	fi; \
	$$found_dir || $$reported || broken "$$dir non existent"; \
	$$found_dir

_flavor_fragment = sawflavor=false; ${_pflavor_fragment}

_depfile_fragment = \
	case X$${_DEPENDS_FILE} in \
		X) _DEPENDS_FILE=$$(mktemp ${TMPDIR}/depends.XXXXXXXXX|| exit 1); \
		export _DEPENDS_FILE; \
		trap "rm -f $${_DEPENDS_FILE}" 0; \
		trap 'exit 1' 1 2 3 13 15;; \
	esac

GLOBAL_DEPENDS_CACHE ?=

# XXX this is to speed up dpb builds beware of consequences !
.if !empty(GLOBAL_DEPENDS_CACHE)
_cache_fragment = \
	mkdir -p ${GLOBAL_DEPENDS_CACHE}; \
	_DEPENDS_CACHE=${GLOBAL_DEPENDS_CACHE}; \
	PKG_PATH=${PKGPATH}; \
	export _DEPENDS_CACHE PKGPATH

.else
_cache_fragment = \
	case X$${_DEPENDS_CACHE} in \
		X) _DEPENDS_CACHE=$$(mktemp -d ${TMPDIR}/dep_cache.XXXXXXXXX|| exit 1); \
		export _DEPENDS_CACHE; \
		trap "rm -rf 2>/dev/null $${_DEPENDS_CACHE}" 0; \
		trap 'exit 1' 1 2 3 13 15;; \
	esac; PKGPATH=${PKGPATH}; export PKGPATH
.endif

_MAKE = cd ${.CURDIR} && PKGPATH=${PKGPATH} exec ${MAKE}
_SUDOMAKE = cd ${.CURDIR} && PKGPATH=${PKGPATH} exec ${SUDO} ${MAKE}
_MAKESYS = cd ${.CURDIR} && PKGPATH=${PKGPATH} exec ${MAKE}
_SUDOMAKESYS = cd ${.CURDIR} && umask 022 && PKGPATH=${PKGPATH} exec ${_FAKESUDO} ${MAKE}

REPORT_PROBLEM_LOGFILE ?=
.if !empty(REPORT_PROBLEM_LOGFILE)
REPORT_PROBLEM ?= echo "$$subdir ($@@)">>${REPORT_PROBLEM_LOGFILE}
.else
REPORT_PROBLEM ?= exit 1
.endif

_recursive_targets = \
	all build checksum configure deinstall distclean extract fake fetch \
	fetch-all full-all-depends full-build-depends \
	full-test-depends full-run-depends \
	install install-all \
	license-check manpages-check package patch \
	prepare show-prepare-results repackage test regress reinstall \
	update update-or-install update-or-install-all \
	describe dump-vars print-plist print-plist-all \
	print-plist-contents print-plist-libs \
	show verbose-show show-size show-fake-size \
	check-register check-register-all lock unlock show-prepare-test-results

_dangerous_recursive_targets = \
	makesum plist update-patches update-plist 

_recursive_depends_targets = \
	all-dir-depends build-dir-depends test-dir-depends run-dir-depends
_recursive_cache_targets = \
	print-plist-with-depends print-plist-libs-with-depends \
	print-plist-all-with-depends print-package-signature \
	print-update-signature port-lib-depends-check lib-depends-check
@


1.64
log
@kill some old ghosts:
FTP_KEEP_ALIVE, README_TOPS, _FETCH*, RECURSIVE_FETCH_LIST
detection of old INSTALL/DEINSTALL/REQ scripts
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.63 2017/02/18 15:15:08 espie Exp $
d137 1
a137 1
	license-check link-categories manpages-check package patch \
d139 2
a140 2
	unlink-categories update update-or-install update-or-install-all \
	describe dump-vars homepage-links print-plist print-plist-all \
@


1.63
log
@list-distinfo never got used so kill it
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.62 2017/02/13 12:57:50 espie Exp $
a9 1
READMES_TOP ?= ${PORTSDIR}
@


1.62
log
@root no longer involved in building packages, simplify accordingly
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.61 2017/01/25 14:16:46 espie Exp $
d144 1
a144 2
	check-register check-register-all lock unlock list-distinfo \
	show-prepare-test-results
@


1.61
log
@improve the speed of lib-depends-check for multi-packages and bulk runs
drastically.

- make sure the recursive targets is marked as using the cache
- do not run env -i thus forgetting the cache. Do a proper manual run
which is just as complicated
- add an extra cache for each packing-list so that it goes really faster

okay sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.60 2016/04/26 10:56:59 sthen Exp $
a111 2
# the cache may be filled in as root, so try to remove as normal user, THEN
# sudo only if it fails.
d116 1
a116 1
		trap "rm -rf 2>/dev/null $${_DEPENDS_CACHE} || ${SUDO} rm -rf $${_DEPENDS_CACHE}" 0; \
@


1.60
log
@Clean up some bits missed in yesterday's systrace removal.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.59 2014/09/16 09:08:02 espie Exp $
d139 1
a139 1
	install install-all lib-depends-check \
d157 1
a157 1
	print-update-signature port-lib-depends-check 
@


1.59
log
@explicit path to perl to prevent gnu autoconf fucking up in ptlib
okay aja@@
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.58 2014/09/09 09:34:04 espie Exp $
d125 2
a126 2
_MAKESYS = cd ${.CURDIR} && PKGPATH=${PKGPATH} exec ${_SYSTRACE_CMD} ${MAKE}
_SUDOMAKESYS = cd ${.CURDIR} && umask 022 && PKGPATH=${PKGPATH} exec ${_FAKESUDO} ${_SYSTRACE_CMD} ${MAKE}
@


1.58
log
@force umask 022 in fake !sudo situations.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.57 2014/08/10 08:59:48 espie Exp $
d13 1
a13 1
_PERLSCRIPT = perl ${PORTSDIR}/infrastructure/bin
@


1.57
log
@framework to allow fake as non-root, based on an idea and initial patch by
naddy.

Not turned on yet, as it involves a critical new file.

Basically:
- introduce new variations on SUBST cmds to install various files
- use pkg_subst -i in !root mode
- unhardcode install path where possible, to allow for an install-wrapper
that disregards owner/groups.
- do links during fake to disable chown/chgrp/install.

Extra tweak (always-wrap) to actually encode "perl ${PORTSDIR}/infra/bin/install-wrapper"  as an install script, required by a few ports that keep track of
the install script for later (eg., ruby, postgres).
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.56 2014/03/09 20:33:37 espie Exp $
d126 1
a126 1
_SUDOMAKESYS = cd ${.CURDIR} && PKGPATH=${PKGPATH} exec ${_FAKESUDO} ${_SYSTRACE_CMD} ${MAKE}
@


1.56
log
@allows for a global cache to depends. to be documented once this is fully
figured out...
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.55 2014/02/11 10:34:34 espie Exp $
d126 1
a126 1
_SUDOMAKESYS = cd ${.CURDIR} && PKGPATH=${PKGPATH} exec ${SUDO} ${_SYSTRACE_CMD} ${MAKE}
@


1.55
log
@cosmetic: print-package-signature -> print-update-signature

(to be referenced by documentation, to stop confusing crypto signatures
with other signatures).

(old name kept over release, to be scraped completely afterwards, user-visible
change only)

okay sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.54 2013/11/30 16:06:56 espie Exp $
d95 1
a95 1
		X) _DEPENDS_FILE=`mktemp ${TMPDIR}/depends.XXXXXXXXX|| exit 1`; \
d101 11
d116 1
a116 1
		X) _DEPENDS_CACHE=`mktemp -d ${TMPDIR}/dep_cache.XXXXXXXXX|| exit 1`; \
d121 1
@


1.54
log
@add "show-prepare-test-results" target, to be used by dpb for running tests
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.53 2013/03/10 22:27:15 espie Exp $
d145 1
a145 1
	port-lib-depends-check 
@


1.53
log
@rename REGRESS -> TEST
shorter, less ambiguous (as discussed with some porters)
there will be a sweep to fix all regress.

keep "make regress" as an alias for "make test".
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.52 2013/03/02 13:08:49 espie Exp $
d134 2
a135 1
	check-register check-register-all lock unlock list-distinfo
@


1.52
log
@minor tweaks:
- make sure PKGDIR exists prior to making READMES, allows using update-plist
before creating DESCR and stuff
- list-distinfo target, to allow dpb to fetch stuff non locally eventually
- zap addsum
- check that all files in distinfo are actually accounted for in DISTFILES
and SUPDISTFILES
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.51 2013/01/06 11:57:21 espie Exp $
d126 1
a126 1
	full-regress-depends full-run-depends \
d129 1
a129 1
	prepare show-prepare-results repackage regress reinstall \
d140 1
a140 1
	all-dir-depends build-dir-depends regress-dir-depends run-dir-depends
@


1.51
log
@allow unlock to be called with SUBDIR=
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.50 2012/10/10 10:55:33 espie Exp $
d134 1
a134 1
	check-register check-register-all lock unlock
@


1.50
log
@tweak things a bit... no need for an extra _fullpath variable.
also, use a broken() function to simplify THAT particular shell fragment.
I've been running with this for ages...
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.49 2012/08/18 07:58:20 espie Exp $
d134 1
a134 1
	check-register check-register-all
d137 1
a137 1
	makesum plist update-patches update-plist
@


1.49
log
@slow architectures might clean /tmp too eagerly, move the default
LOCKDIR to a local location that's less susceptible to surreptitious
cleanup, that is under WRKOBJDIR

after discussion with sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.48 2012/05/28 09:43:17 espie Exp $
d27 5
a31 2
	unset FLAVOR SUBPACKAGE || true; \
	multi=''; flavor=''; space=''; sawflavor=$${_fullpath}; \
d35 1
a35 2
		echo 1>&2 ">> Broken dependency: empty directory $$extra_msg"; \
		reported=true;; \
d40 1
a40 16
				dir=$$i; first=false; \
			else \
				case X"$$i" in \
					X-*) \
						if $$sawmulti; then \
							echo 1>&2 ">> Broken dependency: several subpackages in $$subdir $$extra_msg"; \
							reported=true; \
						fi; \
						multi="$$i"; sawmulti=true;; \
					,) \
						sawflavor=true;; \
					*) \
						sawflavor=true; \
						flavor="$$flavor$$space$$i"; \
						space=' ';; \
				esac \
d42 13
d61 3
a63 2
	case X$$multi in "X");; *) \
		toset="$$toset SUBPACKAGE=\"$$multi\"";; \
d66 2
a67 4
	*/) echo 1>&2 ">> Broken dependency, $$dir ends with / - $$extra_msg"; \
		reported=true;; \
	*//*) echo 1>&2 ">> Broken dependency, $$dir contains // - $$extra_msg"; \
		reported=true;; \
d71 2
d79 1
a79 2
				echo 1>&2 ">> Broken dependency: $$base/$$dir is a symbolic link $$extra_msg"; \
				reported=true; \
d88 1
a88 2
	$$found_dir || $$reported || \
	    echo 1>&2 ">> Broken dependency: $$dir non existent $$extra_msg"; \
d91 1
a91 1
_flavor_fragment = _fullpath=false; ${_pflavor_fragment}
@


1.48
log
@forgot cruft from readmes
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.47 2012/05/28 09:38:04 espie Exp $
a11 1
LOCKDIR ?= ${TMPDIR}/portslocks
@


1.47
log
@zap old readmes infrastructure, replaced by new age databases/ports-readmes
which is ways more accurate anyways.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.46 2012/05/15 11:48:07 espie Exp $
a111 2

HTMLIFY =	sed -e 's/&/\&amp;/g' -e 's/>/\&gt;/g' -e 's/</\&lt;/g'
@


1.46
log
@whine for pkgpaths with extra /
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.45 2012/05/07 21:11:44 halex Exp $
a22 5
.endif
.if empty(PKGPATH)
PKGDEPTH =
.else
PKGDEPTH = ${PKGPATH:C|[^./][^/]*|..|g}/
@


1.45
log
@call exit 1 after cleanup in signal traps, or the shell keeps running after
SIGINT and friends

ok espie@@
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.44 2012/02/17 07:40:35 espie Exp $
d69 6
@


1.44
log
@kill fetch-makefile here too
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.43 2011/12/02 15:14:20 espie Exp $
d98 2
a99 1
		trap "rm -f $${_DEPENDS_FILE}" 0 1 2 3 13 15;; \
d108 2
a109 1
		trap "rm -rf 2>/dev/null $${_DEPENDS_CACHE} || ${SUDO} rm -rf $${_DEPENDS_CACHE}" 0 1 2 3 13 15;; \
@


1.43
log
@sort -u requires one parameter to not hang on stdin...
allow SUBDIR=archivers/arc make show-prepare-results to work
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.42 2011/11/20 15:38:08 espie Exp $
d126 1
a126 1
	fetch-all fetch-makefile full-all-depends full-build-depends \
@


1.42
log
@dpb refuses multiple subpackages in a pkgpath, there's no reason for
pkgpath.mk to do otherwise.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.41 2011/11/19 11:36:53 espie Exp $
d130 1
a130 1
	prepare repackage regress reinstall \
@


1.41
log
@oh, hum... use TMPDIR instead of hardcoding it.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.40 2011/11/19 11:33:39 espie Exp $
d35 1
a35 1
	reported=false; found_dir=false; \
d48 5
a52 1
						multi="$$i";; \
@


1.40
log
@mv _cache_fragment to pkgpath.mk
create a new category of recursive targets that can use this fragment,
and use them, e.g., print-package-signature from top-level should benefit
a lot.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.39 2011/11/17 17:53:22 espie Exp $
d92 1
a92 1
		X) _DEPENDS_FILE=`mktemp /tmp/depends.XXXXXXXXX|| exit 1`; \
d101 1
a101 1
		X) _DEPENDS_CACHE=`mktemp -d /tmp/dep_cache.XXXXXXXXX|| exit 1`; \
@


1.39
log
@setting PKGPATH in pkgpath.mk is not enough, pass it thru the environment
as appropriate.

(typical make package would call getpkgpath 15 times instead of 1!)
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.38 2011/11/15 20:08:36 espie Exp $
d97 9
d126 1
a126 2
	port-lib-depends-check prepare print-package-signature repackage \
	regress reinstall \
d129 1
a129 2
	print-plist-all-with-depends print-plist-contents print-plist-libs \
	print-plist-with-depends print-plist-libs-with-depends \
d138 4
a141 1

@


1.38
log
@speed-up dependency checking a bit:
- resolve-lib -needed, less perl invocations (gains a lot)
- show-run-depends, less fancy than run-dir-depends, a bit faster...
- don't create cache for internal targets (external stuff already did it)

define _PERLSCRIPT in pkgpath.mk since getpkgpath should use it...
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.37 2011/11/14 10:29:58 espie Exp $
d99 4
a102 4
_MAKE = cd ${.CURDIR} && exec ${MAKE}
_SUDOMAKE = cd ${.CURDIR} && exec ${SUDO} ${MAKE}
_MAKESYS = cd ${.CURDIR} && exec ${_SYSTRACE_CMD} ${MAKE}
_SUDOMAKESYS = cd ${.CURDIR} && exec ${SUDO} ${_SYSTRACE_CMD} ${MAKE}
@


1.37
log
@a bit more micro-optimization: allow print-plist-libs-with-depends
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.36 2011/09/24 07:36:02 espie Exp $
d14 1
d18 1
a18 1
	perl ${PORTSDIR}/infrastructure/bin/getpkgpath ${.CURDIR}
@


1.36
log
@tweak the flavor_fragment stuff to be able to specify "hey, if there's no
flavor, it means it's empty and not the default one". Useful for tools
that reuse saved fullpkgpaths.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.35 2011/03/28 00:16:13 fgsch Exp $
d121 2
a122 1
	print-plist-with-depends show verbose-show show-size show-fake-size \
@


1.35
log
@add repackage to the recursive targets.
with input and ok espie@@
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.34 2011/03/22 19:56:51 espie Exp $
d31 1
a31 1
_flavor_fragment = \
d33 1
a33 1
	multi=''; flavor=''; space=''; sawflavor=false; \
d86 2
@


1.34
log
@tweak logic slightly to avoid duplicate error messages which make no sense
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.33 2011/03/20 19:28:07 espie Exp $
d114 2
a115 1
	port-lib-depends-check prepare print-package-signature regress reinstall \
@


1.33
log
@allow things to proceed after flavor_fragment in SUBDIR handling.
Also puts the FULLPKGPATH in extra_msg to figure out where bad dependencies
come from
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.32 2010/11/07 00:03:38 espie Exp $
d34 1
a34 1
	empty=false; found_dir=false; \
d38 1
a38 1
		empty=true;; \
d68 1
a68 1
	if ! $$empty; then \
d74 1
d83 1
a83 1
	if ! $$found_dir; then \
a84 1
	fi; \
@


1.32
log
@- add check-register, that basically does print-plist
- switch motif to WANTLIB
- start warning about old style LIB_DEPENDS. It's time !
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.31 2010/10/28 11:14:23 espie Exp $
d34 1
d38 1
a38 1
		exit 1;; \
d68 14
a81 12
	IFS=:; found_dir=false; bases=${PORTSDIR_PATH}; \
	for base in $$bases; do \
	    cd $$base 2>/dev/null || continue; \
	    if [ -L $$dir ]; then \
		    echo 1>&2 ">> Broken dependency: $$base/$$dir is a symbolic link $$extra_msg"; \
		    exit 1; \
	    fi; \
	    if cd $$dir 2>/dev/null; then \
	    	found_dir=true; \
		break; \
	    fi; \
	done; unset IFS; \
d84 2
a85 2
	    exit 1; \
	fi
@


1.31
log
@turns out dpb doesn't need this in the end...
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.30 2010/10/18 08:32:21 espie Exp $
d115 2
a116 1
	print-plist-with-depends show verbose-show show-size show-fake-size
@


1.30
log
@pass FULLSUBDIR around, to eventually allow dpb to distinguish between
empty and default stuff.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.29 2010/08/20 23:11:07 espie Exp $
d60 1
a60 1
	toset="FULLSUBDIR=$$subdir PKGPATH=$$dir ARCH=${ARCH}"; \
@


1.29
log
@move LOCKDIR default to pkgpath.mk since it's shared with Makefile.
fix one missed dolock.

Thanks naddy@@
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.28 2010/08/20 15:02:24 espie Exp $
d60 1
a60 1
	toset="PKGPATH=$$dir ARCH=${ARCH}"; \
@


1.28
log
@use scripts from bin
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.27 2010/07/06 12:09:55 espie Exp $
d12 1
@


1.27
log
@print-plist-contents | grablibs appears often enough: combine them as
print-plist-libs
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.26 2010/04/20 21:00:35 espie Exp $
d16 1
a16 1
	perl ${PORTSDIR}/infrastructure/mk/getpkgpath ${.CURDIR}
@


1.26
log
@fix and recommit, my bad.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.25 2010/04/20 10:03:36 espie Exp $
d113 1
a113 1
	print-plist-all-with-depends print-plist-contents \
@


1.25
log
@provide a _MAKE internal that does the cd ${.CURDIR} && exec,
use it to avoid the obj/ problem in /usr/ports.
provide a _MAKESYS internal for bsd.port.mk with SYSTRACE too
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.24 2010/04/05 13:59:03 espie Exp $
d93 1
d95 1
@


1.24
log
@don't know how this broke, but make it work again (and more sturdy against
multiple commas)

noticed by aja
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.23 2010/03/05 07:49:29 espie Exp $
d92 2
@


1.23
log
@support for more stats in dpb, basically harmless
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.22 2010/02/12 12:00:19 espie Exp $
d38 2
a39 2
		IFS=,; first=true; \
		for i in $$subdir; do \
d46 2
@


1.22
log
@some important improvements to bsd.port.mk
- simplify IGNORE handling, always define it, even when NO_IGNORE is set,
and only use it for the targets it's meant to influence.
- make it possible to multiply-IGNORE a port, so stuff that's BROKEN and
NOT_FOR_ARCH will show up as both.
- DESCRIBE_TARGETs can die, since we no longer need special IGNORE dance
for them.
- add an IGNORE_IS_FATAL tweak, so that ignored ports can actually error out.
- reorg dump-vars to choose what to show, including new IGNORE, and COMES_WITH.
- name an explicit prepare step, which does check build dependencies and
install them (useful for build timing purposes)
- move the do-fetch test out, so that we can add pre-extract and do-extract
there eventually.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.21 2009/07/26 12:14:05 espie Exp $
d108 1
a108 1
	print-plist-with-depends show verbose-show
@


1.21
log
@maintainer usability: some targets are usually not invoked recursively,
but they can (sometimes) be useful: add DANGEROUS knob to prevent running
them accidentally, but allow people to run makesum/update-plist/update-patches
recursively.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.20 2008/07/26 10:59:20 espie Exp $
d104 5
a108 2
	port-lib-depends-check print-package-signature regress reinstall \
	unlink-categories update update-or-install update-or-install-all
a111 5

_recursive_describe_targets = \
	describe dump-vars homepage-links print-plist print-plist-all \
	print-plist-all-with-depends print-plist-contents \
	print-plist-with-depends show verbose-show
@


1.20
log
@new "convenience target": update-or-install (all)

Basically, make update without the tests that prevent it from running when
stuff is not installed yet.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.19 2008/07/03 17:00:38 espie Exp $
d11 1
d106 3
@


1.19
log
@... works much better if I commit pkgpath.mk as well...
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.18 2008/05/23 16:53:28 fgsch Exp $
d104 1
a104 1
	unlink-categories update
@


1.18
log
@allow port-lib-depends-check to be recursive; espie@@ ok.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.17 2008/05/17 11:02:22 espie Exp $
d99 3
a101 1
	fetch-all fetch-makefile install install-all lib-depends-check \
@


1.17
log
@no reason for fetch-all not to be a recursive target
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.16 2008/05/13 14:52:44 espie Exp $
d101 2
a102 1
	print-package-signature regress reinstall unlink-categories update
@


1.16
log
@no reason not to allow install-all as a subdir target, so...
allow it!
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.15 2007/07/08 17:57:56 espie Exp $
d99 3
a101 3
	fetch-makefile install install-all lib-depends-check license-check \
	link-categories manpages-check package patch print-package-signature \
	regress reinstall unlink-categories update
@


1.15
log
@avoid recomputing ARCH all the time.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.14 2007/06/28 21:05:48 espie Exp $
d99 3
a101 3
	fetch-makefile install lib-depends-check license-check link-categories \
	manpages-check package patch print-package-signature regress reinstall \
	unlink-categories update
@


1.14
log
@tweak getpkgpath to display a diagnostic, but not exit 1, in case of
error.

Do the real erroring out through a fatal error in pkgpath.mk (and set
PKGPATH to something less confusing than an empty variable). This
solves PR 5510 for real.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.13 2007/06/03 12:51:59 espie Exp $
d56 1
a56 1
	toset="PKGPATH=$$dir"; \
@


1.13
log
@reorganize to avoid repeating lists of targets:
classify stuff that is used in bsd.port.subdir.mk, name them in pkgpath.mk,
and use them as .PHONY targets in both bsd.port.mk and bsd.port.subdir.mk.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.12 2006/12/26 15:00:24 espie Exp $
d16 4
@


1.12
log
@use a simple perl script to compute initial pkgpaths... Cwd can replace
pwd -P, and we select the longest prefix from PORTSDIR_PATH.

This lets mystuff-like dirs get stripped from PKGPATH correctly, as long
as PORTSDIR_PATH is set correctly.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.11 2006/12/02 11:27:46 espie Exp $
d92 14
@


1.11
log
@move TMPDIR to pkgpath.mk to allow its use from both bsd.port.mk and
bsd.port.subdir.mk

Use absolute paths to build readmes files, based on READMES_TOP, which
can be (or not) PORTSDIR.

Generate category readmes in tmp directory as well.

minor clean-ups
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.10 2006/11/27 15:38:01 espie Exp $
d8 5
d14 2
a15 3
_PORTSDIR != cd ${PORTSDIR} && pwd -P
_CURDIR != cd ${.CURDIR} && pwd -P
PKGPATH = ${_CURDIR:S,${_PORTSDIR}/,,}
a21 4

PORTSDIR_PATH ?= ${PORTSDIR}:${PORTSDIR}/mystuff
TMPDIR ?= /tmp
READMES_TOP ?= ${PORTSDIR}
@


1.10
log
@same formatting clean-up as bsd.port.mk
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.9 2006/11/03 23:19:42 espie Exp $
d20 2
@


1.9
log
@revert. called from bsd.port.subdir.mk as well, which doesn't define
TMPDIR.
Noticed by steven@@
@
text
@d1 2
a2 1
# $OpenBSD: pkgpath.mk,v 1.8 2006/11/01 12:41:35 espie Exp $
d9 3
a11 3
_PORTSDIR!=	cd ${PORTSDIR} && pwd -P
_CURDIR!=	cd ${.CURDIR} && pwd -P
PKGPATH=${_CURDIR:S,${_PORTSDIR}/,,}
d14 1
a14 1
PKGDEPTH=
d16 1
a16 1
PKGDEPTH=${PKGPATH:C|[^./][^/]*|..|g}/
d19 1
a19 1
PORTSDIR_PATH?=${PORTSDIR}:${PORTSDIR}/mystuff
d23 1
a23 1
_flavor_fragment= \
d28 2
a29 2
		    echo 1>&2 ">> Broken dependency: empty directory $$extra_msg"; \
		    exit 1;; \
d31 2
a32 1
		IFS=,; first=true; for i in $$subdir; do \
d45 2
a46 1
		done; unset IFS;; \
d74 1
a74 1
_depfile_fragment= \
d81 1
a81 1
HTMLIFY=	sed -e 's/&/\&amp;/g' -e 's/>/\&gt;/g' -e 's/</\&lt;/g'
d84 1
a84 1
REPORT_PROBLEM_LOGFILE?=
d86 1
a86 1
REPORT_PROBLEM?=echo "$$subdir ($@@)">>${REPORT_PROBLEM_LOGFILE}
d88 1
a88 1
REPORT_PROBLEM?=exit 1
@


1.8
log
@zap a few non relevant lines, make _ALL_VARIABLES* internal.
Use TMPDIR in pkgpath.mk
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.7 2006/07/08 09:20:30 espie Exp $
d73 1
a73 1
		X) _DEPENDS_FILE=`mktemp ${TMPDIR}/depends.XXXXXXXXX|| exit 1`; \
@


1.7
log
@move REPORT_PROBLEM to pkgpath.mk so that we can use it from bsd.port.mk
as well.

Add the target to the default problem reporter.
Report problems while building dependencies.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.6 2005/11/03 19:32:25 espie Exp $
d73 1
a73 1
		X) _DEPENDS_FILE=`mktemp /tmp/depends.XXXXXXXXX|| exit 1`; \
@


1.6
log
@alek@@-friendly error messages.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.5 2005/11/02 20:30:12 espie Exp $
d79 8
@


1.5
log
@streamline flavor_fragment after trying to explain it to sturm@@.
it makes more sense to have a subdir variable as input, split it
into toset and dir as output, and to unsetenv FLAVOR SUBPACKAGE along
the lines.

End result should be equivalent, but slightly more readable.

no objection from my neighbors either...
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.4 2003/08/28 21:50:12 naddy Exp $
d26 3
d58 1
a58 1
		    echo 1>&2 ">> Broken dependency: $$base/$$dir is a symbolic link"; \
d67 1
a67 1
	    echo 1>&2 ">> Broken dependency: $$dir non existent"; \
@


1.4
log
@prevent leak of custom IFS value from shell fragment; ok sturm@@
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.3 2003/08/15 00:05:41 espie Exp $
d23 1
d25 1
a25 1
	case "$$dir" in \
d27 1
a27 1
		IFS=,; first=true; for i in $$dir; do \
d41 2
@


1.3
log
@PORTSDIR_PATH ?= ${PORTSDIR}:${PORTSDIR}/mystuff   support.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.2 2003/08/04 14:37:10 espie Exp $
d59 1
a59 1
	done; \
@


1.2
log
@move _depfile_fragment to pkgpath.mk so that it can be reused more widely.
Fix the logic so that the file is only removed where it is set.
Add some checks to *-dir-depends for more `global situations'.
@
text
@d1 1
a1 1
# $OpenBSD: pkgpath.mk,v 1.1 2003/08/02 09:53:27 espie Exp $
d18 2
d48 15
a62 10
	cd ${PORTSDIR}; \
	if [ -L $$dir ]; then \
		echo 1>&2 ">> Broken dependency: $$dir is a symbolic link"; \
		exit 1; \
	fi; \
	if cd $$dir 2>/dev/null || cd mystuff/$$dir 2>/dev/null; then \
		:; \
	else \
		echo 1>&2 ">> Broken dependency: $$dir non existent"; \
		exit 1; \
@


1.1
log
@put _flavor_fragment into a separate file, that's included from both
bsd.port.mk and bsd.port.subdir.mk. Make sure flavors are properly
separated.

Change the way bsd.port.subdir.mk works, slightly: always set full directories.
- SKIPDIR with full paths will work.
- all dirs are displayed as full package specs.

Generate complete html files.
@
text
@d1 1
a1 1
# $OpenBSD$
d57 7
@

