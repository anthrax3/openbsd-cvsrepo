head	1.55;
access;
symbols
	OPENBSD_6_1:1.55.0.4
	OPENBSD_6_1_BASE:1.55
	OPENBSD_6_0:1.55.0.2
	OPENBSD_6_0_BASE:1.55
	OPENBSD_5_9:1.54.0.4
	OPENBSD_5_9_BASE:1.54
	OPENBSD_5_8:1.54.0.6
	OPENBSD_5_8_BASE:1.54
	OPENBSD_5_7:1.54.0.2
	OPENBSD_5_7_BASE:1.54
	OPENBSD_5_6:1.53.0.6
	OPENBSD_5_6_BASE:1.53
	OPENBSD_5_5:1.53.0.4
	OPENBSD_5_5_BASE:1.53
	OPENBSD_5_4:1.53.0.2
	OPENBSD_5_4_BASE:1.53
	OPENBSD_5_3:1.51.0.2
	OPENBSD_5_3_BASE:1.51
	OPENBSD_5_2:1.49.0.2
	OPENBSD_5_2_BASE:1.49
	OPENBSD_5_1_BASE:1.48
	OPENBSD_5_1:1.48.0.2
	OPENBSD_5_0:1.42.0.2
	OPENBSD_5_0_BASE:1.42
	OPENBSD_4_9:1.41.0.2
	OPENBSD_4_9_BASE:1.41
	OPENBSD_4_8:1.38.0.2
	OPENBSD_4_8_BASE:1.38
	OPENBSD_4_7:1.36.0.4
	OPENBSD_4_7_BASE:1.36
	OPENBSD_4_6:1.36.0.2
	OPENBSD_4_6_BASE:1.36
	OPENBSD_4_5:1.34.0.6
	OPENBSD_4_5_BASE:1.34
	OPENBSD_4_4:1.34.0.4
	OPENBSD_4_4_BASE:1.34
	OPENBSD_4_3:1.34.0.2
	OPENBSD_4_3_BASE:1.34
	OPENBSD_4_2:1.33.0.2
	OPENBSD_4_2_BASE:1.33
	OPENBSD_4_1:1.31.0.2
	OPENBSD_4_1_BASE:1.31
	OPENBSD_4_0:1.27.0.2
	OPENBSD_4_0_BASE:1.27
	OPENBSD_3_9:1.25.0.2
	OPENBSD_3_9_BASE:1.25
	OPENBSD_3_8:1.22.0.4
	OPENBSD_3_8_BASE:1.22
	OPENBSD_3_7:1.22.0.2
	OPENBSD_3_7_BASE:1.22
	OPENBSD_3_6:1.19.0.2
	OPENBSD_3_6_BASE:1.19
	OPENBSD_3_5:1.17.0.2
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.2
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5;
locks; strict;
comment	@# @;


1.55
date	2016.04.26.10.56.59;	author sthen;	state Exp;
branches;
next	1.54;
commitid	FbIvW5WdGqu5h4SS;

1.54
date	2014.09.13.16.28.47;	author ajacoutot;	state Exp;
branches;
next	1.53;
commitid	PsUjQlfI77wRwWDR;

1.53
date	2013.06.01.18.54.27;	author ajacoutot;	state Exp;
branches;
next	1.52;

1.52
date	2013.03.11.11.50.17;	author espie;	state Exp;
branches;
next	1.51;

1.51
date	2012.10.25.12.26.29;	author sthen;	state Exp;
branches;
next	1.50;

1.50
date	2012.08.12.17.19.00;	author jasper;	state Exp;
branches;
next	1.49;

1.49
date	2012.04.28.10.50.35;	author ajacoutot;	state Exp;
branches;
next	1.48;

1.48
date	2011.12.12.10.33.33;	author jasper;	state Exp;
branches;
next	1.47;

1.47
date	2011.12.10.11.15.16;	author espie;	state Exp;
branches;
next	1.46;

1.46
date	2011.12.09.09.42.44;	author espie;	state Exp;
branches;
next	1.45;

1.45
date	2011.11.07.15.39.50;	author espie;	state Exp;
branches;
next	1.44;

1.44
date	2011.11.07.14.23.09;	author espie;	state Exp;
branches;
next	1.43;

1.43
date	2011.11.06.12.38.29;	author espie;	state Exp;
branches;
next	1.42;

1.42
date	2011.06.02.15.54.10;	author naddy;	state Exp;
branches;
next	1.41;

1.41
date	2010.12.20.16.39.53;	author espie;	state Exp;
branches;
next	1.40;

1.40
date	2010.11.20.19.57.30;	author espie;	state Exp;
branches;
next	1.39;

1.39
date	2010.10.24.20.41.23;	author ajacoutot;	state Exp;
branches;
next	1.38;

1.38
date	2010.07.22.19.14.09;	author ajacoutot;	state Exp;
branches;
next	1.37;

1.37
date	2010.05.28.10.42.09;	author espie;	state Exp;
branches;
next	1.36;

1.36
date	2009.03.14.10.46.56;	author ajacoutot;	state Exp;
branches;
next	1.35;

1.35
date	2009.03.09.23.07.33;	author espie;	state Exp;
branches;
next	1.34;

1.34
date	2008.01.18.20.58.15;	author espie;	state Exp;
branches;
next	1.33;

1.33
date	2007.04.02.10.43.39;	author espie;	state Exp;
branches;
next	1.32;

1.32
date	2007.03.30.13.55.07;	author espie;	state Exp;
branches;
next	1.31;

1.31
date	2006.12.02.00.10.24;	author espie;	state Exp;
branches;
next	1.30;

1.30
date	2006.11.23.16.31.46;	author kili;	state Exp;
branches;
next	1.29;

1.29
date	2006.11.20.23.18.25;	author steven;	state Exp;
branches;
next	1.28;

1.28
date	2006.11.20.20.52.28;	author espie;	state Exp;
branches;
next	1.27;

1.27
date	2006.07.17.22.08.41;	author espie;	state Exp;
branches;
next	1.26;

1.26
date	2006.07.10.10.12.05;	author espie;	state Exp;
branches;
next	1.25;

1.25
date	2005.12.26.21.29.41;	author naddy;	state Exp;
branches;
next	1.24;

1.24
date	2005.12.24.20.11.03;	author sturm;	state Exp;
branches;
next	1.23;

1.23
date	2005.12.23.12.41.37;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2005.02.07.12.22.28;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2005.01.11.07.14.36;	author sturm;	state Exp;
branches;
next	1.20;

1.20
date	2004.10.03.09.51.21;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	2004.06.06.11.49.08;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2004.05.05.11.17.22;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2004.03.03.01.17.39;	author brad;	state Exp;
branches;
next	1.16;

1.16
date	2004.02.25.22.23.20;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2004.02.25.21.50.26;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2003.07.28.17.17.05;	author sturm;	state Exp;
branches;
next	1.13;

1.13
date	2003.02.27.19.27.00;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.15.19.59.35;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2003.02.15.16.38.48;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.15.14.06.58;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2002.07.06.09.24.06;	author pvalchev;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.18.03.18.24;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.16.01.09.23;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.03.01.23.23;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.30.17.14.33;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.24.22.30.03;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.16.14.56.42;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.03.02.00.48;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.25.11.23.46;	author espie;	state Exp;
branches;
next	;


desc
@@


1.55
log
@Clean up some bits missed in yesterday's systrace removal.
@
text
@#-*- mode: Fundamental; tab-width: 4; -*-
# ex:ts=4 sw=4 filetype=make:
# $OpenBSD: gnu.port.mk,v 1.54 2014/09/13 16:28:47 ajacoutot Exp $
#	Based on bsd.port.mk, originally by Jordan K. Hubbard.
#	This file is in the public domain.

MODGNU_AUTOCONF_DEPENDS = devel/metaauto \
	devel/autoconf/${AUTOCONF_VERSION}
MODGNU_AUTOMAKE_DEPENDS = devel/metaauto \
	devel/automake/${AUTOMAKE_VERSION}

AUTOMAKE_VERSION ?= 1.4

.if ${CONFIGURE_STYLE:L:Mautomake}
BUILD_DEPENDS += ${MODGNU_AUTOMAKE_DEPENDS}
MAKE_ENV += AUTOMAKE_VERSION=${AUTOMAKE_VERSION}
.  if ${CONFIGURE_STYLE:L:Mautoupdate}
CONFIGURE_STYLE += autoconf
.  endif
.endif

.if ${CONFIGURE_STYLE:L:Mautoconf}
AUTOCONF_VERSION ?= 2.13
BUILD_DEPENDS += ${MODGNU_AUTOCONF_DEPENDS}
AUTOCONF ?= autoconf
AUTOUPDATE ?= autoupdate
AUTOHEADER ?= autoheader
AUTOCONF_DIR ?= ${WRKSRC}
# missing ?= not an oversight
AUTOCONF_ENV = PATH=${PORTPATH} AUTOCONF_VERSION=${AUTOCONF_VERSION}
MAKE_ENV += AUTOCONF_VERSION=${AUTOCONF_VERSION}
.  if !${CONFIGURE_STYLE:L:Mno-autoheader}
CONFIGURE_STYLE += autoheader
.  endif
.endif

CONFIG_SITE_LIST += config.site
.for d name in \
	sysutils/ggrep ggrep \
	textproc/gsed gsed \
	archivers/gtar* gtar \
	lang/gawk gawk \
	sysutils/coreutils coreutils
.  if !defined(BUILD_DEPENDS) || !${BUILD_DEPENDS:M$d}
CONFIG_SITE_LIST += config.no-${name}
.  endif
.endfor

_CONFIG_SITE = ${WRKDIR}/config.site
CONFIGURE_ENV += CONFIG_SITE='${_CONFIG_SITE}'
.if !defined(MODGNU_EMACS_YOURE_WEIRD)
MAKE_ENV += CONFIG_SITE='${_CONFIG_SITE}'
.endif

MODGNU_CONFIG_GUESS_DIRS ?=${WRKSRC}
MODGNU_SAVE_CACHE ?= No
MODGNU_SAVE_CACHE_LOCATION =${PORTSDIR}/config

MODGNU_configure = for d in ${MODGNU_CONFIG_GUESS_DIRS}; \
	do \
		cp -f ${PORTSDIR}/infrastructure/db/config.guess $$d; \
		chmod a+rx $$d/config.guess; \
		cp -f ${PORTSDIR}/infrastructure/db/config.sub $$d; \
		chmod a+rx $$d/config.sub; \
	done; ${MODSIMPLE_configure}

.if ${MODGNU_SAVE_CACHE:L} == "yes"
MODGNU_configure += ; mkdir -p ${MODGNU_SAVE_CACHE_LOCATION}; \
	cp ${WRKBUILD}/config.cache ${MODGNU_SAVE_CACHE_LOCATION}/${FULLPKGNAME} \
	|| true
.endif

.if ${CONFIGURE_STYLE:L:Mgnu}
CONFIGURE_ENV += MKDIR_P='mkdir -p'
# XXX Older versions of glib-gettext.m4 and intltool.m4 used to set
# DATADIRNAME to "lib" which resulted in locale files being installed
# under the wrong directory.	 
CONFIGURE_ENV += DATADIRNAME=share
.  if ${MODGNU_SAVE_CACHE:L} == "yes"
CONFIGURE_ARGS += --cache-file=${WRKBUILD}/config.cache
.  endif
.  if ${CONFIGURE_STYLE:L:Mdest}
CONFIGURE_ARGS += --prefix='$${${DESTDIRNAME}}${PREFIX}'
.  else
CONFIGURE_ARGS += --prefix='${PREFIX}'
.  endif

.  if empty(CONFIGURE_STYLE:L:Mold)
.    if ${CONFIGURE_STYLE:L:Mdest}
CONFIGURE_ARGS += --sysconfdir='$${${DESTDIRNAME}}${SYSCONFDIR}'
CONFIGURE_ARGS += --mandir='$${${DESTDIRNAME}}${PREFIX}/man'
CONFIGURE_ARGS += --infodir='$${${DESTDIRNAME}}${PREFIX}/info'
CONFIGURE_ARGS += --localstatedir='$${${DESTDIRNAME}}${LOCALSTATEDIR}'
.    else
CONFIGURE_ARGS += --sysconfdir='${SYSCONFDIR}'
CONFIGURE_ARGS += --mandir='${PREFIX}/man'
CONFIGURE_ARGS += --infodir='${PREFIX}/info'
CONFIGURE_ARGS += --localstatedir='${LOCALSTATEDIR}'
.    endif
.  endif

CONFIGURE_ARGS += --disable-silent-rules
# Unless explicitely requested, disable gtk-doc by default.
.  if !defined(BUILD_DEPENDS) || !${BUILD_DEPENDS:Mtextproc/gtk-doc}
# If one of these tools is found at configure stage, it might be used,
# no matter whether we use --disable-gtk-doc or not.
CONFIGURE_ARGS += --disable-gtk-doc
CONFIGURE_ENV += ac_cv_path_GTKDOC_CHECK=""  
CONFIGURE_ENV += ac_cv_path_GTKDOC_REBASE=""
CONFIGURE_ENV += ac_cv_path_GTKDOC_MKPDF=""
.  endif
.endif

TEST_TARGET ?= check

# internal stuff to run on each directory.
MODGNU_post-patch = for d in ${AUTOCONF_DIR}; do cd $$d; ${_MODGNU_loop} done;
_MODGNU_loop =

PATCH_CHECK_ONLY ?= No
.if ${PATCH_CHECK_ONLY:L} != "yes"
.  if ${CONFIGURE_STYLE:L:Mautoupdate}
_MODGNU_loop += echo "Running autoupdate-${AUTOCONF_VERSION} in $$d";
_MODGNU_loop += ${SETENV} ${AUTOCONF_ENV} ${AUTOUPDATE};
.  endif
.  if ${CONFIGURE_STYLE:L:Mautoconf}
_MODGNU_loop += if test -f $$d/configure; then \
	grep -iq 'Generated by.*autoconf.*${AUTOCONF_VERSION}' $$d/configure || { \
	echo ">>> Can't find autoconf ${AUTOCONF_VERSION} signature in $$d/configure:"; \
	grep -i 'Generated by.*autoconf' $$d/configure; }; \
	fi;
_MODGNU_loop += echo "Running autoconf-${AUTOCONF_VERSION} in $$d";
_MODGNU_loop += ${SETENV} ${AUTOCONF_ENV} ${AUTOCONF};
.    if ${CONFIGURE_STYLE:L:Mautoheader}
_MODGNU_loop += echo "Running autoheader-${AUTOCONF_VERSION} in $$d";
_MODGNU_loop += ${SETENV} ${AUTOCONF_ENV} ${AUTOHEADER};
.    endif
.    if !${CONFIGURE_STYLE:L:Mautomake}
REORDER_DEPENDENCIES += ${PORTSDIR}/infrastructure/mk/automake.dep
.    endif
.  endif
.endif

MAKE_FLAGS += mkdir_p='mkdir -p --'
# XXX to be killed
MODGNU_SHARED_LIBS ?=
.for _n _e in ${MODGNU_SHARED_LIBS}
.  if defined(LIB${_n}_ALIAS)
MAKE_FLAGS += lib${LIB${_n}_ALIAS}_la_LDFLAGS='-version-info ${LIB${_n}_VERSION:S/./:/}:0 '${_e}
.  else
MAKE_FLAGS += lib${_n}_la_LDFLAGS='-version-info ${LIB${_n}_VERSION:S/./:/}:0 '${_e}
.  endif
.endfor
@


1.54
log
@When using GNU configure, always run with --disable-gtk-doc unless
textproc/gtk-doc is in BUILD_DEPENDS and force ac_cv_path_GTKDOC_* to null.
Even when --disable-gtk-doc is passed, if the gtk-doc tools are present at
configure time, they will be run (at a time where the gtk-doc package may have
been removed; for e.g. during a bulk).
This is what we've been doing under x11/gnome for a while now.

sthen@@ espie@@ and jasper@@ agree
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.53 2013/06/01 18:54:27 ajacoutot Exp $
d124 1
a124 1
_MODGNU_loop += ${_SYSTRACE_CMD} ${SETENV} ${AUTOCONF_ENV} ${AUTOUPDATE};
d133 1
a133 1
_MODGNU_loop += ${_SYSTRACE_CMD} ${SETENV} ${AUTOCONF_ENV} ${AUTOCONF};
d136 1
a136 1
_MODGNU_loop += ${_SYSTRACE_CMD} ${SETENV} ${AUTOCONF_ENV} ${AUTOHEADER};
@


1.53
log
@In case of the "gnu" CONFIGURE_STYLE, set DATADIRNAME to "share".
glib-gettext.m4 and intltool.m4 have been fixed ages ago but upstream
developers seem to get stuck on old versions or do not update their
macro to follow this change.
It makes no sense to keep patching the whole ports tree for it, so for
now we hardcode it here.

"why not" espie@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.52 2013/03/11 11:50:17 espie Exp $
d103 9
@


1.52
log
@REGRESS -> TEST sweep
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.51 2012/10/25 12:26:29 sthen Exp $
d75 4
@


1.51
log
@fileutils has been replaced with coreutils, handle this in the autoconf cache
fragment which normally handles gmkdir.  ok jasper@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.50 2012/08/12 17:19:00 jasper Exp $
d101 1
a101 1
REGRESS_TARGET ?= check
@


1.50
log
@add config.no-fileutils, tested in a full bulk

ok sthen@@ espie@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.49 2012/04/28 10:50:35 ajacoutot Exp $
d43 1
a43 1
	misc/fileutils fileutils
@


1.49
log
@Set localstatedir (i.e. BASELOCALSTATEDIR) to /var by default if
CONFIGURE_STYLE is gnu.
Works the same way as SYSCONFDIR, one can append a subdirectory to
change the default localstatedir by using the following construct in the
port Makefile:
LOCALSTATEDIR=	${BASELOCALSTATEDIR}/foobar

Note that this variable in not substituted in PLIST.

bulk tested by landry (on a previous diff)
ok jasper@@ sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.48 2011/12/12 10:33:33 jasper Exp $
d42 2
a43 1
	lang/gawk gawk
@


1.48
log
@  add a fragment to prevent picking up gnu awk by accident.
  tested in a bulk build by me

  ok espie@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.47 2011/12/10 11:15:16 espie Exp $
d88 1
d93 1
@


1.47
log
@- tweak CONFIG_SITE_LIST to run under infra/db.
- recognize absence of dependencies on gsed, gtar, ggrep,
and prevent more tests from seeing these.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.46 2011/12/09 09:42:44 espie Exp $
d41 2
a42 1
	archivers/gtar* gtar
@


1.46
log
@make it possible to assemble a CONFIG_SITE instead of having one
single file.
approved by aja@@, sthen@@, jasper@@...
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.45 2011/11/07 15:39:50 espie Exp $
d37 10
a46 1
CONFIG_SITE_LIST += ${PORTSDIR}/infrastructure/db/config.site
@


1.45
log
@work around brain damage
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.44 2011/11/07 14:23:09 espie Exp $
d36 6
a41 8
.if !defined(CONFIG_SITE)
CONFIG_SITE = ${PORTSDIR}/infrastructure/db/config.site
.endif
.if !empty(CONFIG_SITE)
CONFIGURE_ENV += CONFIG_SITE='${CONFIG_SITE}'
.  if !defined(MODGNU_EMACS_YOURE_WEIRD)
MAKE_ENV += CONFIG_SITE='${CONFIG_SITE}'
.  endif
@


1.44
log
@revert until I figure out why emacs21 is unhappy with this ?
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.43 2011/11/06 12:38:29 espie Exp $
d41 3
a43 1
#MAKE_ENV += CONFIG_SITE='${CONFIG_SITE}'
@


1.43
log
@pass CONFIG_SITE to build step as well. should make lang/gcc build
marginally faster, and a few other odd ports that reconfigure during build
as well...
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.42 2011/06/02 15:54:10 naddy Exp $
d41 1
a41 1
MAKE_ENV += CONFIG_SITE='${CONFIG_SITE}'
@


1.42
log
@add --disable-silent-rules for CONFIGURE_STYLE=gnu; ok kili@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.41 2010/12/20 16:39:53 espie Exp $
d41 1
@


1.41
log
@old forgotten PKG_SPEC commit
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.40 2010/11/20 19:57:30 espie Exp $
d83 2
@


1.40
log
@new depends
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.39 2010/10/24 20:41:23 ajacoutot Exp $
d8 1
a8 1
	autoconf-${AUTOCONF_VERSION}:devel/autoconf/${AUTOCONF_VERSION}
d10 1
a10 1
	${_AUTOMAKE_SPEC}:devel/automake/${AUTOMAKE_VERSION}
a12 9
.if ${AUTOMAKE_VERSION} == 1.4
_AUTOMAKE_SPEC = automake->=${AUTOMAKE_VERSION},<1.5
.elif ${AUTOMAKE_VERSION} == 1.8
_AUTOMAKE_SPEC = automake->=${AUTOMAKE_VERSION},<1.9
.elif ${AUTOMAKE_VERSION} == 1.9
_AUTOMAKE_SPEC = automake->=${AUTOMAKE_VERSION},<1.10
.elif ${AUTOMAKE_VERSION} == 1.10
_AUTOMAKE_SPEC = automake->=${AUTOMAKE_VERSION},<1.11
.endif
@


1.39
log
@Bye bye USE_X11.
From now on, building ports requires X11BASE.

* lots of ports missed this variable (porters always have X11 installed)
  jasper made a first pass on fixing these, but no doubt it will drift
  away soon
* users should use packages
* people building ports should know what they are doing and having
  X11BASE as a requirement is perfectly reasonnable
* we are merging config.x11.site into config.site because of a stupid
  autofoo bug ; currently when USE_X11 is set, some ports may loose the
  ability to even load config.site

tested on a bulk by landry@@
ok robert@@ jasper@@ landry@@ sthen@@ naddy@@ "I won't cry if it dies" espie@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.38 2010/07/22 19:14:09 ajacoutot Exp $
d7 4
a10 4
MODGNU_AUTOCONF_DEPENDS = ::devel/metaauto \
	:autoconf-${AUTOCONF_VERSION}:devel/autoconf/${AUTOCONF_VERSION}
MODGNU_AUTOMAKE_DEPENDS = ::devel/metaauto \
	:${_AUTOMAKE_SPEC}:devel/automake/${AUTOMAKE_VERSION}
@


1.38
log
@Add _AUTOMAKE_SPEC for automake 1.10.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.37 2010/05/28 10:42:09 espie Exp $
a46 3
.  if ${USE_X11:L} == "yes"
CONFIG_SITE += ${PORTSDIR}/infrastructure/db/config.x11.site
.  endif
@


1.37
log
@our mkdir -p is thread-safe, so use it (tested for a few months)
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.36 2009/03/14 10:46:56 ajacoutot Exp $
d19 2
@


1.36
log
@- add old behaviour back where MODGNU_AUTOMAKE_DEPENDS is always set even
when not using CONFIGURE_STYLE=automake
this fixes ports depending on a specific version of automake while e.g
using the gnu CONFIGURE_STYLE

ok espie@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.35 2009/03/09 23:07:33 espie Exp $
d72 1
@


1.35
log
@fix automake dependencies to read like automake->=1.4,<1.5 instead
of automake-1.4.*
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.34 2008/01/18 20:58:15 espie Exp $
a11 1
.if ${CONFIGURE_STYLE:L:Mautomake}
d13 1
a13 1
.  if ${AUTOMAKE_VERSION} == 1.4
d15 1
a15 1
.  elif ${AUTOMAKE_VERSION} == 1.8
d17 1
a17 1
.  elif ${AUTOMAKE_VERSION} == 1.9
d19 3
a21 1
.  endif
d24 1
a24 2
.endif
.if ${CONFIGURE_STYLE:L:Mautoupdate}
d26 1
@


1.34
log
@insist on mkdir -p... now that FAKE_FLAGS is `fixed' this works.
Tested thru a full bulk-build
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.33 2007/04/02 10:43:39 espie Exp $
d10 1
a10 1
	:automake-${AUTOMAKE_VERSION}.*:devel/automake/${AUTOMAKE_VERSION}
d14 7
@


1.33
log
@configure may not exist. found oud by steven@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.32 2007/03/30 13:55:07 espie Exp $
d116 1
@


1.32
log
@display warnings if autoconf version differs.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.31 2006/12/02 00:10:24 espie Exp $
d99 2
a100 1
_MODGNU_loop += grep -iq 'Generated by.*autoconf.*${AUTOCONF_VERSION}' $$d/configure || { \
d102 2
a103 1
	grep -i 'Generated by.*autoconf' $$d/configure; };
@


1.31
log
@clean-up spacing
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.30 2006/11/23 16:31:46 kili Exp $
d99 3
@


1.30
log
@
Fix dependency checks for automake.

"go for it", espie@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.29 2006/11/20 23:18:25 steven Exp $
d7 4
a10 4
MODGNU_AUTOCONF_DEPENDS=	::devel/metaauto \
				:autoconf-${AUTOCONF_VERSION}:devel/autoconf/${AUTOCONF_VERSION}
MODGNU_AUTOMAKE_DEPENDS=	::devel/metaauto \
				:automake-${AUTOMAKE_VERSION}.*:devel/automake/${AUTOMAKE_VERSION}
d13 3
a15 3
AUTOMAKE_VERSION?=	1.4
BUILD_DEPENDS+=		${MODGNU_AUTOMAKE_DEPENDS}
MAKE_ENV+=			AUTOMAKE_VERSION=${AUTOMAKE_VERSION}
d18 1
a18 1
CONFIGURE_STYLE+=autoconf
d22 6
a27 6
AUTOCONF_VERSION?=	2.13
BUILD_DEPENDS+=		${MODGNU_AUTOCONF_DEPENDS}
AUTOCONF?=			autoconf
AUTOUPDATE?=		autoupdate
AUTOHEADER?=		autoheader
AUTOCONF_DIR?=${WRKSRC}
d29 2
a30 2
AUTOCONF_ENV=PATH=${PORTPATH} AUTOCONF_VERSION=${AUTOCONF_VERSION}
MAKE_ENV+=AUTOCONF_VERSION=${AUTOCONF_VERSION}
d32 1
a32 1
CONFIGURE_STYLE+=autoheader
d36 1
a36 1
CONFIG_SITE=${PORTSDIR}/infrastructure/db/config.site
d38 1
a38 1
CONFIG_SITE+=${PORTSDIR}/infrastructure/db/config.x11.site
d42 1
a42 1
CONFIGURE_ENV+=CONFIG_SITE='${CONFIG_SITE}'
d45 3
a47 3
MODGNU_CONFIG_GUESS_DIRS?=${WRKSRC}
MODGNU_SAVE_CACHE?= No
MODGNU_SAVE_CACHE_LOCATION=${PORTSDIR}/config
d49 2
a50 1
MODGNU_configure = for d in ${MODGNU_CONFIG_GUESS_DIRS}; do \
d65 1
a65 1
CONFIGURE_ARGS+=--cache-file=${WRKBUILD}/config.cache
d68 1
a68 1
CONFIGURE_ARGS+=	--prefix='$${${DESTDIRNAME}}${PREFIX}'
d70 1
a70 1
CONFIGURE_ARGS+=	--prefix='${PREFIX}'
d75 3
a77 3
CONFIGURE_ARGS+=	--sysconfdir='$${${DESTDIRNAME}}${SYSCONFDIR}' \
					--mandir='$${${DESTDIRNAME}}${PREFIX}/man' \
					--infodir='$${${DESTDIRNAME}}${PREFIX}/info'
d79 3
a81 3
CONFIGURE_ARGS+=	--sysconfdir='${SYSCONFDIR}' \
					--mandir='${PREFIX}/man' \
					--infodir='${PREFIX}/info'
d86 1
a86 1
REGRESS_TARGET?=	check
d89 2
a90 2
MODGNU_post-patch= for d in ${AUTOCONF_DIR}; do cd $$d; ${_MODGNU_loop} done;
_MODGNU_loop=
d92 1
a92 1
PATCH_CHECK_ONLY?=	No
d95 2
a96 2
_MODGNU_loop+= echo "Running autoupdate-${AUTOCONF_VERSION} in $$d";
_MODGNU_loop+= ${_SYSTRACE_CMD} ${SETENV} ${AUTOCONF_ENV} ${AUTOUPDATE};
d99 2
a100 2
_MODGNU_loop+= echo "Running autoconf-${AUTOCONF_VERSION} in $$d";
_MODGNU_loop+= ${_SYSTRACE_CMD} ${SETENV} ${AUTOCONF_ENV} ${AUTOCONF};
d102 2
a103 2
_MODGNU_loop+= echo "Running autoheader-${AUTOCONF_VERSION} in $$d";
_MODGNU_loop+= ${_SYSTRACE_CMD} ${SETENV} ${AUTOCONF_ENV} ${AUTOHEADER};
d106 1
a106 1
REORDER_DEPENDENCIES+=${PORTSDIR}/infrastructure/mk/automake.dep
d111 2
a112 1
MODGNU_SHARED_LIBS?=
d115 1
a115 1
MAKE_FLAGS+=lib${LIB${_n}_ALIAS}_la_LDFLAGS='-version-info ${LIB${_n}_VERSION:S/./:/}:0 '${_e}
d117 1
a117 1
MAKE_FLAGS+=lib${_n}_la_LDFLAGS='-version-info ${LIB${_n}_VERSION:S/./:/}:0 '${_e}
@


1.29
log
@enable config.x11.site if USE_X11 is set.

ok espie@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.28 2006/11/20 20:52:28 espie Exp $
d10 1
a10 1
				:automake-${AUTOMAKE_VERSION}:devel/automake/${AUTOMAKE_VERSION}
@


1.28
log
@make sure the right version of autoconf/automake is installed.
bug-report from jolan@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.27 2006/07/17 22:08:41 espie Exp $
d35 6
a40 1
CONFIG_SITE?=${PORTSDIR}/infrastructure/db/config.site
@


1.27
log
@unless style is old, also set mandir and infodir explicitly, to cope with
recent gnu standards as noticed by naddy@@.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.26 2006/07/10 10:12:05 espie Exp $
d8 1
a8 1
				::devel/autoconf/${AUTOCONF_VERSION}
d10 1
a10 1
				::devel/automake/${AUTOMAKE_VERSION}
@


1.26
log
@put the guessdirs loop at the shell level so that it's evaluated later.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.25 2005/12/26 21:29:41 naddy Exp $
d69 3
a71 1
CONFIGURE_ARGS+=	--sysconfdir='$${${DESTDIRNAME}}${SYSCONFDIR}'
d73 3
a75 1
CONFIGURE_ARGS+=	--sysconfdir='${SYSCONFDIR}'
@


1.25
log
@Avoid confusing quote nesting:  For MODGNU_SHARED_LIBS, since we
typically quote the flags part of the (name, flags) tuple already,
don't put it into another level of single quotes.

ok espie@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.24 2005/12/24 20:11:03 sturm Exp $
d44 7
a50 8
MODGNU_configure =
.for _d in ${MODGNU_CONFIG_GUESS_DIRS}
MODGNU_configure += cp -f ${PORTSDIR}/infrastructure/db/config.guess ${_d};
MODGNU_configure += chmod a+rx ${_d}/config.guess;
MODGNU_configure += cp -f ${PORTSDIR}/infrastructure/db/config.sub ${_d};
MODGNU_configure += chmod a+rx ${_d}/config.sub;
.endfor
MODGNU_configure += ${MODSIMPLE_configure}
@


1.24
log
@indentation
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.23 2005/12/23 12:41:37 espie Exp $
d105 1
a105 1
MAKE_FLAGS+=lib${LIB${_n}_ALIAS}_la_LDFLAGS='-version-info ${LIB${_n}_VERSION:S/./:/}:0 ${_e}'
d107 1
a107 1
MAKE_FLAGS+=lib${_n}_la_LDFLAGS='-version-info ${LIB${_n}_VERSION:S/./:/}:0 ${_e}'
@


1.23
log
@basic framework to have control over shared libs numbers:
SHARED_LIBS enumerates the libraries like so:
SHARED_LIBS=	foo 1.0 \
		zop 2.5 \
		tag 3.0

This just defines LIBfoo_VERSION=1.0, LIBzop_VERSION=2.5, LIBtag_VERSION=3.0
and adds these to SUBST_VAR, further tweaks must be done, usually at the
MAKE_FLAGS/MAKE_ENV level.

For gnu ports that use automake, the supplementary MODGNU_SHARED_LIBS
variable can be used like this:
MODGNU_SHARED_LIBS=	foo	'-no-undefined'

and it will define libfoo_la_LD_FLAGS=--version-info 1:0:0 -no-undefined

Some gnu ports have weird variable names for libraries. For instance,
the libORBit-2 is set using libORBit_2.
LIBORbit-2_ALIAS=ORBit_2
will make sure the correct name is used.

much feedback from bernd@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.22 2005/02/07 12:22:28 espie Exp $
d100 1
a100 1
.  endif
@


1.22
log
@framework to save configuration caches, for auditing and updating of
config.site.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.21 2005/01/11 07:14:36 sturm Exp $
d101 9
@


1.21
log
@some automake bits

ok espie@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.20 2004/10/03 09:51:21 espie Exp $
d41 2
d52 5
d59 3
@


1.20
log
@config.site support
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.19 2004/06/06 11:49:08 espie Exp $
d9 2
a10 1
MODGNU_AUTOMAKE_DEPENDS=	::devel/automake
d13 1
d15 1
@


1.19
log
@move the automake inter-dependencies to another file.
checked by naddy@@ on a full build.
idea okay'ed by naddy and pvalchev.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.18 2004/05/05 11:17:22 espie Exp $
d31 4
@


1.18
log
@Run autoheader unless explicitly asked not to.
Did a full ports build before that, hoping I did not miss any.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.17 2004/03/03 01:17:39 brad Exp $
a61 5
# Files to touch in order...
MODGNU_AUTOCONF_FILES?= /Makefile.am configure.files configure.in configure.ac \
	acinclude.m4 aclocal.m4 acconfig.h stamp-h.in \
	config.h.in /Makefile.in configure

d80 1
a80 12
_MODGNU_loop+= for f in ${MODGNU_AUTOCONF_FILES}; do \
		case $$f in \
		/*) \
			find . -name $${f\#/} -print| while read i; \
				do echo "Touching $$i"; touch $$i; done \
			;; \
		*) \
			if test -e $$f ; then \
				echo "Touching $$f"; touch $$f; \
			fi \
			;; \
		esac; done; 
@


1.17
log
@AUTOCONF_NEW has been removed from all ports so remove this
knob.

ok naddy@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.16 2004/02/25 22:23:20 espie Exp $
d28 3
@


1.16
log
@make autoheader a switch that's not systematically run...
thanks to mutant versions of autoconf-2.13.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.15 2004/02/25 21:50:26 espie Exp $
a6 2
AUTOCONF_NEW?=	No

d8 1
a8 1
							::devel/autoconf/${AUTOCONF_VERSION}
d19 1
a19 5
.  if ${AUTOCONF_NEW:L} == "yes"
AUTOCONF_VERSION=2.52
.  else
AUTOCONF_VERSION?=2.13
.  endif
@


1.15
log
@do a search and touch to prevent dratted automake Makefiles from rebuilding
anything after configure.

Side-effect: config.h.in is not rebuilt automatically at build time, we
invoke autoheader explicitly.

Change approved by naddy@@ and brad@@, for robustness, there may a few kinks
to fix...
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.14 2003/07/28 17:17:05 sturm Exp $
d83 1
d86 1
@


1.14
log
@this makes our build infrastructure systrace aware
original idea from jsyn@@, discussed and first tests at c2k3

Warning!
- this commit is different from all patches sent around, please remove
  them before updating
- due to a few bugs in systrace this is currently not ready for the casual
  porter and several ports will fail to build, you've been warned

The idea of this patch is to help a porter when developing a new port.
With systrace the configure, build and fake stages are not allowed to
open network connections or write outside some well defined directories.
This way misbehaving programs will be noticed due to logfile entries in
/var/log/messages and the port can be fixed. There is generally no need
for endusers to use this, as the checksum ensures that ports in the
future will behave the same as they did when porting. :)

To activate systrace'd port building, set USE_SYSTRACE=Yes (e.g. in
/etc/mk.conf)

tested by some people, ok espie@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.13 2003/02/27 19:27:00 espie Exp $
d65 9
d77 2
a78 1
MODGNU_post-patch+= cd ${AUTOCONF_DIR} && ${_SYSTRACE_CMD} ${SETENV} ${AUTOCONF_ENV} ${AUTOUPDATE};
d81 18
a98 1
MODGNU_post-patch+= cd ${AUTOCONF_DIR} && ${_SYSTRACE_CMD} ${SETENV} ${AUTOCONF_ENV} ${AUTOCONF};
a99 3
.  if !${CONFIGURE_STYLE:L:Mautomake}
MODGNU_post-patch+= ln -s /usr/bin/false ${WRKDIR}/bin/automake;
MODGNU_post-patch+= ln -s /usr/bin/false ${WRKDIR}/bin/aclocal;
a100 2
.endif

@


1.13
log
@MODULES=gnu can be used to access MODGNU_AUTOCONF_DEPENDS without entering
into CONFIGURE_STYLE issues.
ok naddy, pval
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.12 2003/02/15 19:59:35 espie Exp $
d68 1
a68 1
MODGNU_post-patch+= cd ${AUTOCONF_DIR} && ${SETENV} ${AUTOCONF_ENV} ${AUTOUPDATE};
d71 1
a71 1
MODGNU_post-patch+= cd ${AUTOCONF_DIR} && ${SETENV} ${AUTOCONF_ENV} ${AUTOCONF};
@


1.12
log
@no longer a need to pass AUTOCONF/AUTOHEADER through MAKE_FLAGS/FAKE_FLAGS
found out by naddy@@, should unbreak erlang.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.11 2003/02/15 16:38:48 espie Exp $
d47 2
a48 1
.if ${CONFIGURE_STYLE:L:Mdest}
d50 1
a50 1
.else
d52 1
a52 1
.endif
d54 2
a55 2
.if empty(CONFIGURE_STYLE:L:Mold)
.  if ${CONFIGURE_STYLE:L:Mdest}
d57 1
a57 1
.  else
d59 1
@


1.11
log
@make autoconf/automake dependencies visible through
MODGNU_AUTOCONF_DEPENDS/MODGNU_AUTOMAKE_DEPENDS
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.10 2003/02/15 14:06:58 espie Exp $
a29 2
MAKE_FLAGS+=		AUTOCONF='${AUTOCONF}' AUTOHEADER='${AUTOHEADER}'
FAKE_FLAGS+=		AUTOCONF='${AUTOCONF}' AUTOHEADER='${AUTOHEADER}'
@


1.10
log
@switch to metaauto framework: the autoconf ports are now not quite usable,
and need the metaauto wrappers to work.

The metaauto wrapper does not run depend on any autoconf version, to allow
partial installations.

Tested and approved by naddy@@
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.9 2002/07/06 09:24:06 pvalchev Exp $
d8 5
d14 1
a14 1
BUILD_DEPENDS+=		::devel/automake
d19 1
a20 1
BUILD_DEPENDS+=		::devel/metaauto
d26 1
a26 1
BUILD_DEPENDS+=::devel/autoconf/${AUTOCONF_VERSION}
@


1.9
log
@Kill NEED_VERSION, since people are now told to keep their ports
tree / release in sync, and strictly managing it generates a lot
of useless effort.

Note that the support for NEED_VERSION is now gone, however ports
will get that line stripped from their Makefile as time progresses
with updates, gradually; there is no emergent need for it.

ok espie and others
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.8 2002/03/18 03:18:24 espie Exp $
d15 1
d17 8
a24 4
BUILD_DEPENDS+=		::devel/autoconf-new
AUTOCONF?=			autoconf-new
AUTOUPDATE?=		autoupdate-new
AUTOHEADER?=		autoheader-new
a26 6
.  else
AUTOCONF?=		autoconf
AUTOUPDATE?=	autoupdate
AUTOHEADER?=	autoheader
BUILD_DEPENDS+=		::devel/autoconf
.  endif
d29 2
a30 1
AUTOCONF_ENV=PATH=${PORTPATH}
d60 1
@


1.8
log
@oops, bad exec in a combined command
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.7 2002/03/16 01:09:23 espie Exp $
a6 1
NEED_VERSION+=1.513
@


1.7
log
@move gnu dreck (autoconf, automake...) to gnu.port.mk
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.6 2002/03/03 01:23:23 brad Exp $
d63 1
a63 1
MODGNU_post-patch+= cd ${AUTOCONF_DIR} && exec ${SETENV} ${AUTOCONF_ENV} ${AUTOUPDATE};
d66 1
a66 1
MODGNU_post-patch+= cd ${AUTOCONF_DIR} && exec ${SETENV} ${AUTOCONF_ENV} ${AUTOCONF};
@


1.6
log
@copy config.sub too
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.5 2001/09/30 17:14:33 espie Exp $
d7 27
d60 14
@


1.5
log
@make sure config.guess is executable.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.4 2001/09/24 22:30:03 espie Exp $
d13 2
@


1.4
log
@Grab config.guess from master repository, to repair ppc globally.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.2 2001/09/03 02:00:48 brad Exp $
d12 1
d29 2
@


1.3
log
@Handles the case where CONFIGURE_SCRIPT is an absolute path gracefully
(to deal with a common shared Cygnus configure)

Move MODGNU_configure definition to gnu.port.mk. Should have done that on
creation.

Typo in brad's hack (to be superseded shortly anyways)
@
text
@d7 1
a7 1
MODGNU_configure = ${MODSIMPLE_configure}
d9 5
a13 6
# XXX - Kludge for these architectures so we do not
#	have to patch all copies of config.guess
#	throughout the ports tree.
.if ${MACHINE} == "macppc" || ${MACHINE} == "mvmeppc"
CONFIGURE_ARGS+=	--host=powerpc-unknown-openbsd${OPSYS_VER}
.endif
@


1.2
log
@kludge which allows the ports tree to continue working on our newly renamed powerpc systems without needing to patch all copies of config.guess in the tree.
@
text
@d3 1
a3 1
# $OpenBSD: gnu.port.mk,v 1.1 2001/08/25 11:23:46 espie Exp $
d7 3
a9 1
# XXX - Kludge for these archictectures so we do not
@


1.1
log
@Cut out some parts of bsd.port.mk into separate modules.

This is work-in-progress. Supplemental hooks will be added when they
become necessary.

The goal is to permit separate subsystems to tweak the package building
process slightly. This should help e.g., python or qt2, for instance.

Documentation will come when it's tested more thoroughly...
@
text
@d3 1
a3 1
# $OpenBSD$
d6 7
@

