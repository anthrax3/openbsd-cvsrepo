head	1.109;
access;
symbols
	OPENBSD_6_1:1.109.0.18
	OPENBSD_6_1_BASE:1.109
	OPENBSD_6_0:1.109.0.16
	OPENBSD_6_0_BASE:1.109
	OPENBSD_5_9:1.109.0.12
	OPENBSD_5_9_BASE:1.109
	OPENBSD_5_8:1.109.0.14
	OPENBSD_5_8_BASE:1.109
	OPENBSD_5_7:1.109.0.10
	OPENBSD_5_7_BASE:1.109
	OPENBSD_5_6:1.109.0.8
	OPENBSD_5_6_BASE:1.109
	OPENBSD_5_5:1.109.0.6
	OPENBSD_5_5_BASE:1.109
	OPENBSD_5_4:1.109.0.4
	OPENBSD_5_4_BASE:1.109
	OPENBSD_5_3:1.109.0.2
	OPENBSD_5_3_BASE:1.109
	OPENBSD_5_2:1.108.0.2
	OPENBSD_5_2_BASE:1.108
	OPENBSD_5_1_BASE:1.105
	OPENBSD_5_1:1.105.0.2
	OPENBSD_5_0:1.99.0.2
	OPENBSD_5_0_BASE:1.99
	OPENBSD_4_9:1.98.0.4
	OPENBSD_4_9_BASE:1.98
	OPENBSD_4_8:1.98.0.2
	OPENBSD_4_8_BASE:1.98
	OPENBSD_4_7:1.93.0.2
	OPENBSD_4_7_BASE:1.93
	OPENBSD_4_6:1.91.0.2
	OPENBSD_4_6_BASE:1.91
	OPENBSD_4_5:1.90.0.2
	OPENBSD_4_5_BASE:1.90
	OPENBSD_4_4:1.89.0.4
	OPENBSD_4_4_BASE:1.89
	OPENBSD_4_3:1.89.0.2
	OPENBSD_4_3_BASE:1.89
	OPENBSD_4_2:1.88.0.2
	OPENBSD_4_2_BASE:1.88
	OPENBSD_4_1:1.81.0.2
	OPENBSD_4_1_BASE:1.81
	OPENBSD_4_0:1.74.0.2
	OPENBSD_4_0_BASE:1.74
	OPENBSD_3_9:1.72.0.2
	OPENBSD_3_9_BASE:1.72
	OPENBSD_3_8:1.69.0.2
	OPENBSD_3_8_BASE:1.69
	OPENBSD_3_7:1.68.0.2
	OPENBSD_3_7_BASE:1.68
	OPENBSD_3_6:1.64.0.2
	OPENBSD_3_6_BASE:1.64
	OPENBSD_3_5:1.63.0.4
	OPENBSD_3_5_BASE:1.63
	OPENBSD_3_4:1.63.0.2
	OPENBSD_3_4_BASE:1.63
	OPENBSD_3_3:1.49.0.2
	OPENBSD_3_3_BASE:1.49
	OPENBSD_3_2:1.47.0.2
	OPENBSD_3_2_BASE:1.47
	OPENBSD_3_1:1.45.0.2
	OPENBSD_3_1_BASE:1.45
	OPENBSD_3_0:1.41.0.2
	OPENBSD_3_0_BASE:1.41
	OPENBSD_2_9_TRACKING_SWITCH:1.39
	OPENBSD_2_9:1.38.0.2
	OPENBSD_2_9_BASE:1.38
	OPENBSD_2_8:1.30.0.2
	OPENBSD_2_8_BASE:1.30
	OPENBSD_2_7:1.25.0.2
	OPENBSD_2_7_BASE:1.25
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10;
locks; strict;
comment	@# @;


1.109
date	2012.10.10.10.55.33;	author espie;	state Exp;
branches;
next	1.108;

1.108
date	2012.05.28.09.38.04;	author espie;	state Exp;
branches;
next	1.107;

1.107
date	2012.05.07.21.11.44;	author halex;	state Exp;
branches;
next	1.106;

1.106
date	2012.02.17.07.41.22;	author espie;	state Exp;
branches;
next	1.105;

1.105
date	2012.01.21.19.07.20;	author espie;	state Exp;
branches;
next	1.104;

1.104
date	2012.01.21.14.44.40;	author espie;	state Exp;
branches;
next	1.103;

1.103
date	2011.12.12.14.52.02;	author espie;	state Exp;
branches;
next	1.102;

1.102
date	2011.11.19.11.43.05;	author espie;	state Exp;
branches;
next	1.101;

1.101
date	2011.11.19.11.33.39;	author espie;	state Exp;
branches;
next	1.100;

1.100
date	2011.09.24.07.36.03;	author espie;	state Exp;
branches;
next	1.99;

1.99
date	2011.03.20.19.28.07;	author espie;	state Exp;
branches;
next	1.98;

1.98
date	2010.07.24.10.35.38;	author espie;	state Exp;
branches;
next	1.97;

1.97
date	2010.07.18.18.49.01;	author naddy;	state Exp;
branches;
next	1.96;

1.96
date	2010.05.09.21.41.40;	author espie;	state Exp;
branches;
next	1.95;

1.95
date	2010.05.01.10.27.56;	author espie;	state Exp;
branches;
next	1.94;

1.94
date	2010.04.20.10.02.39;	author espie;	state Exp;
branches;
next	1.93;

1.93
date	2010.02.12.12.00.19;	author espie;	state Exp;
branches;
next	1.92;

1.92
date	2009.07.26.12.14.05;	author espie;	state Exp;
branches;
next	1.91;

1.91
date	2009.04.11.14.56.31;	author espie;	state Exp;
branches;
next	1.90;

1.90
date	2009.01.24.11.32.43;	author espie;	state Exp;
branches;
next	1.89;

1.89
date	2007.08.25.07.56.04;	author espie;	state Exp;
branches;
next	1.88;

1.88
date	2007.07.08.17.57.56;	author espie;	state Exp;
branches;
next	1.87;

1.87
date	2007.06.30.14.31.00;	author espie;	state Exp;
branches;
next	1.86;

1.86
date	2007.06.03.22.25.01;	author espie;	state Exp;
branches;
next	1.85;

1.85
date	2007.06.03.12.51.59;	author espie;	state Exp;
branches;
next	1.84;

1.84
date	2007.04.28.10.19.41;	author espie;	state Exp;
branches;
next	1.83;

1.83
date	2007.04.07.09.55.13;	author espie;	state Exp;
branches;
next	1.82;

1.82
date	2007.03.19.21.32.35;	author espie;	state Exp;
branches;
next	1.81;

1.81
date	2006.12.18.12.52.34;	author espie;	state Exp;
branches;
next	1.80;

1.80
date	2006.12.02.11.27.46;	author espie;	state Exp;
branches;
next	1.79;

1.79
date	2006.11.27.15.38.01;	author espie;	state Exp;
branches;
next	1.78;

1.78
date	2006.11.13.13.55.10;	author espie;	state Exp;
branches;
next	1.77;

1.77
date	2006.11.11.16.10.36;	author espie;	state Exp;
branches;
next	1.76;

1.76
date	2006.11.05.15.46.51;	author espie;	state Exp;
branches;
next	1.75;

1.75
date	2006.10.15.09.48.05;	author espie;	state Exp;
branches;
next	1.74;

1.74
date	2006.07.09.11.10.16;	author espie;	state Exp;
branches;
next	1.73;

1.73
date	2006.07.08.09.20.30;	author espie;	state Exp;
branches;
next	1.72;

1.72
date	2005.11.10.15.11.12;	author naddy;	state Exp;
branches;
next	1.71;

1.71
date	2005.11.02.20.30.12;	author espie;	state Exp;
branches;
next	1.70;

1.70
date	2005.09.23.08.26.21;	author espie;	state Exp;
branches;
next	1.69;

1.69
date	2005.04.19.08.55.32;	author espie;	state Exp;
branches;
next	1.68;

1.68
date	2004.11.21.11.28.31;	author espie;	state Exp;
branches;
next	1.67;

1.67
date	2004.11.15.13.53.43;	author espie;	state Exp;
branches;
next	1.66;

1.66
date	2004.11.10.10.23.42;	author espie;	state Exp;
branches;
next	1.65;

1.65
date	2004.09.26.09.59.14;	author sturm;	state Exp;
branches;
next	1.64;

1.64
date	2004.04.07.13.06.33;	author espie;	state Exp;
branches;
next	1.63;

1.63
date	2003.08.15.00.35.10;	author espie;	state Exp;
branches;
next	1.62;

1.62
date	2003.08.11.20.10.41;	author espie;	state Exp;
branches;
next	1.61;

1.61
date	2003.08.08.23.56.13;	author espie;	state Exp;
branches;
next	1.60;

1.60
date	2003.08.04.15.05.24;	author espie;	state Exp;
branches;
next	1.59;

1.59
date	2003.08.04.14.54.29;	author espie;	state Exp;
branches;
next	1.58;

1.58
date	2003.08.04.14.45.31;	author espie;	state Exp;
branches;
next	1.57;

1.57
date	2003.08.04.14.37.48;	author espie;	state Exp;
branches;
next	1.56;

1.56
date	2003.08.04.14.16.53;	author espie;	state Exp;
branches;
next	1.55;

1.55
date	2003.08.04.13.31.26;	author espie;	state Exp;
branches;
next	1.54;

1.54
date	2003.08.04.13.25.36;	author espie;	state Exp;
branches;
next	1.53;

1.53
date	2003.08.02.09.58.11;	author espie;	state Exp;
branches;
next	1.52;

1.52
date	2003.08.02.09.53.27;	author espie;	state Exp;
branches;
next	1.51;

1.51
date	2003.07.29.22.27.09;	author espie;	state Exp;
branches;
next	1.50;

1.50
date	2003.07.18.18.18.15;	author espie;	state Exp;
branches;
next	1.49;

1.49
date	2003.02.16.15.16.17;	author espie;	state Exp;
branches;
next	1.48;

1.48
date	2002.10.24.23.14.40;	author naddy;	state Exp;
branches;
next	1.47;

1.47
date	2002.08.29.18.35.40;	author avsm;	state Exp;
branches;
next	1.46;

1.46
date	2002.04.17.15.58.48;	author espie;	state Exp;
branches;
next	1.45;

1.45
date	2002.04.02.15.55.55;	author espie;	state Exp;
branches;
next	1.44;

1.44
date	2002.03.13.13.51.59;	author espie;	state Exp;
branches;
next	1.43;

1.43
date	2001.10.24.11.57.34;	author espie;	state Exp;
branches;
next	1.42;

1.42
date	2001.10.24.11.47.41;	author espie;	state Exp;
branches;
next	1.41;

1.41
date	2001.10.08.22.04.43;	author todd;	state Exp;
branches;
next	1.40;

1.40
date	2001.08.16.14.49.31;	author espie;	state Exp;
branches;
next	1.39;

1.39
date	2001.07.30.14.13.17;	author espie;	state Exp;
branches;
next	1.38;

1.38
date	2001.04.20.15.00.04;	author espie;	state Exp;
branches;
next	1.37;

1.37
date	2001.04.18.14.43.55;	author espie;	state Exp;
branches;
next	1.36;

1.36
date	2001.04.17.16.48.07;	author espie;	state Exp;
branches;
next	1.35;

1.35
date	2001.04.04.08.17.32;	author espie;	state Exp;
branches;
next	1.34;

1.34
date	2001.03.28.16.37.27;	author espie;	state Exp;
branches;
next	1.33;

1.33
date	2001.03.28.11.19.33;	author espie;	state Exp;
branches;
next	1.32;

1.32
date	2001.03.28.10.55.52;	author espie;	state Exp;
branches;
next	1.31;

1.31
date	2000.12.16.15.49.13;	author espie;	state Exp;
branches;
next	1.30;

1.30
date	2000.07.26.12.47.16;	author espie;	state Exp;
branches;
next	1.29;

1.29
date	2000.07.17.07.11.50;	author espie;	state Exp;
branches;
next	1.28;

1.28
date	2000.07.14.23.01.11;	author espie;	state Exp;
branches;
next	1.27;

1.27
date	2000.06.24.14.12.33;	author espie;	state Exp;
branches;
next	1.26;

1.26
date	2000.06.18.23.35.03;	author turan;	state Exp;
branches;
next	1.25;

1.25
date	2000.04.16.20.10.21;	author espie;	state Exp;
branches
	1.25.2.1;
next	1.24;

1.24
date	2000.04.10.17.51.26;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2000.04.09.12.04.13;	author turan;	state Exp;
branches;
next	1.22;

1.22
date	2000.04.01.14.54.49;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2000.03.31.18.05.28;	author espie;	state Exp;
branches;
next	1.20;

1.20
date	2000.03.30.02.09.31;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	2000.03.29.15.59.51;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2000.03.26.16.57.42;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2000.03.26.15.59.42;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2000.03.05.16.20.02;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2000.03.04.18.16.02;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	99.11.20.17.56.57;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	99.11.20.17.54.09;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	99.10.29.20.28.33;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	99.10.26.14.50.05;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	99.09.30.21.07.09;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	99.07.30.08.57.39;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	99.07.28.12.40.56;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	99.05.25.20.38.34;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	99.04.02.06.55.56;	author marc;	state Exp;
branches;
next	1.5;

1.5
date	99.03.30.07.12.05;	author marc;	state Exp;
branches;
next	1.4;

1.4
date	98.12.16.19.26.31;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	97.09.09.15.11.29;	author imp;	state Exp;
branches;
next	1.2;

1.2
date	96.10.22.14.01.20;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.06.03.22.47.11;	author niklas;	state Exp;
branches;
next	;

1.25.2.1
date	2000.09.15.04.38.08;	author marc;	state Exp;
branches;
next	;


desc
@@


1.109
log
@tweak things a bit... no need for an extra _fullpath variable.
also, use a broken() function to simplify THAT particular shell fragment.
I've been running with this for ages...
@
text
@#-*- mode: Makefile; tab-width: 4; -*-
# ex:ts=4 sw=4 filetype=make:
#	from: @@(#)bsd.subdir.mk	5.9 (Berkeley) 2/1/91
#	$OpenBSD: bsd.port.subdir.mk,v 1.108 2012/05/28 09:38:04 espie Exp $
#	FreeBSD Id: bsd.port.subdir.mk,v 1.20 1997/08/22 11:16:15 asami Exp
#
# The include file <bsd.port.subdir.mk> contains the default targets
# for building ports subdirectories. 
#
#
# +++ variables +++
#
# STRIP		The flag passed to the install program to cause the binary
#		to be stripped.  This is to be used when building your
#		own install script so that the entire system can be made
#		stripped/not-stripped using a single knob. [-s]
#
# ECHO_MSG	Used to print all the '===>' style prompts - override this
#		to turn them off [echo].
#
# SUBDIR	A list of subdirectories that should be built as well.
#		Each of the targets will execute the same target in the
#		subdirectories.
#
#
# +++ targets +++
#
#	afterinstall, all, beforeinstall, build, checksum, clean,
#	configure, depend, describe, extract, fetch, fetch-list,
#	install, package, deinstall, reinstall,
#	tags
#

.if defined(FLAVOR)
ERRORS += "Fatal: can't flavor a SUBDIR"
.endif
.if defined(SUBPACKAGE)
ERRORS += "Fatal: can't subpackage a SUBDIR"
.endif

.for f v in bsd.port.mk _BSD_PORT_MK bsd.port.subdir.mk _BSD_PORT_SUBDIR_MK
.  if defined($v)
ERRORS += "Fatal: inclusion of bsd.port.subdir.mk from $f"
.  endif
.endfor

_BSD_PORT_SUBDIR_MK = Done

.if defined(verbose-show)
.MAIN: verbose-show
.elif defined(show)
.MAIN: show
.elif defined(clean)
.MAIN: clean
.else
.MAIN: all
.endif

.if !defined(DEBUG_FLAGS)
STRIP ?= -s
.endif

ARCH ?!= uname -m

.include "${PORTSDIR}/infrastructure/mk/pkgpath.mk"

ECHO_MSG ?= echo

FULLPATH ?= No
.if ${FULLPATH:L} == "yes"
_FULLPATH = true
.else
_FULLPATH = false
.endif

# create a full list of SUBDIRS...
.if empty(PKGPATH)
_FULLSUBDIR := ${SUBDIR}
.else
_FULLSUBDIR := ${SUBDIR:S@@^@@${PKGPATH}/@@g}
.endif
.if defined(STARTAFTER)
STARTDIR = ${STARTAFTER}
SKIPDIR += ${STARTAFTER}
.endif

_SKIP_STUFF = case "$${subdir}" in
.for i in ${SKIPDIR}
_SKIP_STUFF += $i) eval $${echo_msg} "===\> $${subdir} skipped"; continue;; 
.endfor
_SKIP_STUFF += *) ;; esac

.if defined(STARTDIR) && !empty(STARTDIR)
_STARTDIR_SEEN ?= false
.else
_STARTDIR_SEEN ?= true
.endif

.if defined(MATCHDIR)
_SKIP_STUFF+= ; case "$${subdir}" in \
	${MATCHDIR}) ;; \
	*) continue ;; esac
.endif

_subdir_fragment = \
	: $${echo_msg:=${ECHO_MSG:Q}}; \
	: $${target:=${.TARGET}}; \
	for i in ${_SKIPPED:QL}; do \
		eval $${echo_msg} "===\> $$i skipped"; \
	done; \
	_STARTDIR_SEEN=${_STARTDIR_SEEN}; \
	unset SUBDIR SUBDIRLIST || true; \
	export _STARTDIR_SEEN; \
	for subdir in ${_FULLSUBDIR:QL}; do \
		if ! $${_STARTDIR_SEEN}; then \
			case "${STARTDIR}" in \
			$$subdir) \
				_STARTDIR_SEEN=true;; \
			$$subdir*) \
				;; \
			*) \
				continue;; \
			esac; \
		fi; \
		${_SKIP_STUFF}; \
		sawflavor=${_FULLPATH}; \
		if ${_pflavor_fragment}; then \
			eval $${echo_msg} "===\> $$subdir"; \
			if ! (eval $$toset exec ${MAKE} $$target); then \
				eval $${echo_msg} "===\> Exiting $$subdir with an error"; \
				${REPORT_PROBLEM}; \
			fi; \
		else \
			${REPORT_PROBLEM}; \
		fi; \
		_STARTDIR_SEEN=true; \
	done

.if ${DANGEROUS:L} == "yes"
.  for __target in ${_recursive_targets} ${_dangerous_recursive_targets}
${__target}:
	@@${_subdir_fragment}
.  endfor
.else
.  for __target in ${_recursive_targets}
${__target}:
	@@${_subdir_fragment}
.  endfor

${_dangerous_recursive_targets}:
	@@echo "Target $@@ generally invoked in a single port dir"
	@@echo "If you really want to do it recursively"
	@@echo "make $@@ DANGEROUS=Yes"
	@@exit 1
.endif

.for __target in ${_recursive_depends_targets}

${__target}: 
	@@${_depfile_fragment}; echo_msg=:; ${_subdir_fragment}
.endfor

.for __target in ${_recursive_cache_targets}

${__target}: 
	@@${_cache_fragment}; ${_subdir_fragment}
.endfor

clean:
.if defined(clean) && ${clean:L:Mdepends}
	@@{ target=all-dir-depends; echo_msg=:; \
	${_depfile_fragment}; ${_subdir_fragment}; }| tsort -r| \
	while read subdir; do \
		${_flavor_fragment}; \
		eval $$toset ${MAKE} _CLEANDEPENDS=No clean; \
	done
.else
	@@${_subdir_fragment}
.endif

.if defined(ERRORS)
.BEGIN:
.  for _m in ${ERRORS}
	@@echo 1>&2 ${_m} "(in ${PKGPATH})"
.  endfor
.  if !empty(ERRORS:M"Fatal\:*") || !empty(ERRORS:M'Fatal\:*')
	@@exit 1
.  endif
.endif

.PHONY: ${_recursive_targets} \
	${_recursive_depends_targets} clean readmes
@


1.108
log
@zap old readmes infrastructure, replaced by new age databases/ports-readmes
which is ways more accurate anyways.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.107 2012/05/07 21:11:44 halex Exp $
a113 1
	_fullpath=${_FULLPATH}; \
d126 1
@


1.107
log
@call exit 1 after cleanup in signal traps, or the shell keeps running after
SIGINT and friends

ok espie@@
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.106 2012/02/17 07:41:22 espie Exp $
a27 3
#	README.html:
#		Creating README.html for package.
#
d30 1
a30 1
#	install, package, readmes, deinstall, reinstall,
a103 6
TEMPLATES ?= ${PORTSDIR}/infrastructure/templates
.if defined(PORTSTOP)
README = ${TEMPLATES}/README.top
.else
README = ${TEMPLATES}/README.category
.endif
a179 31
.if defined(clean) && ${clean:L:Mreadmes}
	rm -f ${READMES_TOP}/${PKGPATH}/README.html
.endif

readmes:
	@@${_subdir_fragment}
	@@tmpdir=`mktemp -d ${TMPDIR}/readme.XXXXXX`; \
	trap 'rm -r $$tmpdir' 0; \
	trap 'exit 1' 1 2 3 13 15; \
	cd ${.CURDIR} && ${MAKE} TMPDIR=$$tmpdir \
		${READMES_TOP}/${PKGPATH}/README.html

${READMES_TOP}/${PKGPATH}/README.html:
	@@mkdir -p ${@@D}
	@@>${TMPDIR}/subdirs
.for d in ${_FULLSUBDIR}
	@@subdir=$d; \
	${_flavor_fragment}; \
	if name=`eval $$toset ${MAKE} _print-packagename`; then \
		comment=`eval $$toset ${MAKE} show=_COMMENT|sed -e 's,^",,' -e 's,"$$,,' |${HTMLIFY}`; \
	else \
		comment=''; \
	fi; \
	cd ${.CURDIR}; \
	echo "<dt><a href=\"${PKGDEPTH}$$dir/$$name.html\">$d</a><dd>$$comment" >>${TMPDIR}/subdirs
.endfor
	@@sed -e 's%%CATEGORY%%'`echo ${.CURDIR} | sed -e 's.*/\([^/]*\)$$\1'`'g' \
		-e '/%%DESCR%%/r${.CURDIR}/pkg/DESCR' -e '//d' \
		-e '/%%SUBDIR%%/r${TMPDIR}/subdirs' -e '//d' \
		${README} > $@@
	@@rm ${TMPDIR}/subdirs
@


1.106
log
@prevent top-subdirs from ignoring flavor and subpackage markers
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.105 2012/01/21 19:07:20 espie Exp $
d196 2
a197 1
	trap 'rm -r $$tmpdir' 0 1 2 3 13 15; \
@


1.105
log
@remove that check for now, something in pkg_create chain is not sanitizing
its environment...
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.104 2012/01/21 14:44:40 espie Exp $
d37 6
a42 6
#.if defined(FLAVOR)
#ERRORS += "Fatal: can't flavor a SUBDIR"
#.endif
#.if defined(SUBPACKAGE)
#ERRORS += "Fatal: can't subpackage a SUBDIR"
#.endif
@


1.104
log
@prevent some errors I've run into recently
- add ERRORS framework to bsd.port.subdir.mk
- trying to add a FLAVOR or a SUBPACKAGE to an intermediate SUBDIR is an
error (see editors/vim-spell,af recently)
- re-including bsd.port.mk/bsd.port.subdir.mk after either of them is an
error (can happen when one moves stuff to Makefile.inc without really thinking
about it, ends up with PKG_ARGS holding some contents twice and make package
erroring out with duplicate contents)
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.103 2011/12/12 14:52:02 espie Exp $
d37 6
a42 6
.if defined(FLAVOR)
ERRORS += "Fatal: can't flavor a SUBDIR"
.endif
.if defined(SUBPACKAGE)
ERRORS += "Fatal: can't subpackage a SUBDIR"
.endif
@


1.103
log
@zap old junk
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.102 2011/11/19 11:43:05 espie Exp $
d37 15
d219 10
@


1.102
log
@unzap the ECHO_MSG
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.101 2011/11/19 11:33:39 espie Exp $
a35 5

# recent /usr/share/mk/* should include bsd.own.mk, guard for older versions
.if !defined(BSD_OWN_MK)
.  include <bsd.own.mk>
.endif
@


1.101
log
@mv _cache_fragment to pkgpath.mk
create a new category of recursive targets that can use this fragment,
and use them, e.g., print-package-signature from top-level should benefit
a lot.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.100 2011/09/24 07:36:03 espie Exp $
d165 1
a165 1
	@@${_cache_fragment}; echo_msg=:; ${_subdir_fragment}
@


1.100
log
@tweak the flavor_fragment stuff to be able to specify "hey, if there's no
flavor, it means it's empty and not the default one". Useful for tools
that reuse saved fullpkgpaths.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.99 2011/03/20 19:28:07 espie Exp $
d160 6
@


1.99
log
@allow things to proceed after flavor_fragment in SUBDIR handling.
Also puts the FULLPKGPATH in extra_msg to figure out where bad dependencies
come from
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.98 2010/07/24 10:35:38 espie Exp $
d62 7
d113 1
d126 1
a126 1
		if ${_flavor_fragment}; then \
@


1.98
log
@use new make feature :QL  for safer quoting.
helps getting past shell quoting errors, so that the infrastructure
will report actual trouble (is also simpler than :S/<...>/ for pkgspecs).

REQUIRES CURRENT MAKE TO WORK!!!
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.97 2010/07/18 18:49:01 naddy Exp $
d118 7
a124 4
		${_flavor_fragment}; \
		eval $${echo_msg} "===\> $$subdir"; \
		if ! (eval $$toset exec ${MAKE} $$target); then \
			eval $${echo_msg} "===\> Exiting $$subdir with an error"; \
@


1.97
log
@Remove redundant variables OPSYS and OPSYS_VER.
OPSYS was always "OpenBSD", the ports tree doesn't cover other
operating systems.
OPSYS_VER was the same as OSREV.

ok espie@@
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.96 2010/05/09 21:41:40 espie Exp $
d100 1
a100 1
	for i in ${_SKIPPED}; do \
d106 1
a106 1
	for subdir in ${_FULLSUBDIR}; do \
@


1.96
log
@also prevent SUBDIRLIST from escaping, as noticed by kili@@
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.95 2010/05/01 10:27:56 espie Exp $
a20 2
# OPSYS		Get the operating system type [`uname -s`]
#
a55 3
.if !defined(OPSYS)	# XXX !!
OPSYS = OpenBSD
.endif
@


1.95
log
@pattern I use a lot: start right after a given dir.
Easy to do.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.94 2010/04/20 10:02:39 espie Exp $
d109 1
a109 1
	unset SUBDIR || true; \
@


1.94
log
@make sure SUBDIR doesn't escape into individual ports directory.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.93 2010/02/12 12:00:19 espie Exp $
d72 4
@


1.93
log
@some important improvements to bsd.port.mk
- simplify IGNORE handling, always define it, even when NO_IGNORE is set,
and only use it for the targets it's meant to influence.
- make it possible to multiply-IGNORE a port, so stuff that's BROKEN and
NOT_FOR_ARCH will show up as both.
- DESCRIBE_TARGETs can die, since we no longer need special IGNORE dance
for them.
- add an IGNORE_IS_FATAL tweak, so that ignored ports can actually error out.
- reorg dump-vars to choose what to show, including new IGNORE, and COMES_WITH.
- name an explicit prepare step, which does check build dependencies and
install them (useful for build timing purposes)
- move the do-fetch test out, so that we can add pre-extract and do-extract
there eventually.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.92 2009/07/26 12:14:05 espie Exp $
d105 1
@


1.92
log
@maintainer usability: some targets are usually not invoked recursively,
but they can (sometimes) be useful: add DANGEROUS knob to prevent running
them accidentally, but allow people to run makesum/update-plist/update-patches
recursively.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.91 2009/04/11 14:56:31 espie Exp $
a144 5
.for __target in ${_recursive_describe_targets}
${__target}:
	@@DESCRIBE_TARGET=Yes; export DESCRIBE_TARGET; ${_subdir_fragment}
.endfor

d167 1
a167 1
	@@DESCRIBE_TARGET=Yes; export DESCRIBE_TARGET; ${_subdir_fragment}
d177 1
a177 1
	@@subdir=$d; DESCRIBE_TARGET=yes; export DESCRIBE_TARGET; \
d193 1
a193 1
.PHONY: ${_recursive_targets} ${_recursive_describe_targets} \
@


1.91
log
@add support for MATCHDIR: will only recurse into dirs that match the
pattern...
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.90 2009/01/24 11:32:43 espie Exp $
d127 2
a128 1
.for __target in ${_recursive_targets}
d131 13
a143 1
.endfor
@


1.90
log
@say exactly WHAT was skipped, instead of giving the pattern
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.89 2007/08/25 07:56:04 espie Exp $
d86 5
@


1.89
log
@add message that shows we exited a directory after an error, stops log there
during rebuilds.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.88 2007/07/08 17:57:56 espie Exp $
d76 1
a76 1
_SKIP_STUFF += $i) eval $${echo_msg} "===\> $i skipped"; continue;; 
@


1.88
log
@avoid recomputing ARCH all the time.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.87 2007/06/30 14:31:00 espie Exp $
d116 1
@


1.87
log
@rework the way subdirs are skipped so that they're skipped a the right
location.
Allows stuff like make ... STARTDIR=x11/openmotif SKIPDIR=x11/openmotif
to work.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.86 2007/06/03 22:25:01 espie Exp $
d61 1
@


1.86
log
@zap duplicate lines
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.85 2007/06/03 12:51:59 espie Exp $
d73 1
a73 1
_SKIPPED =
d75 1
a75 2
_SKIPPED :+= ${_FULLSUBDIR:M$i}
_FULLSUBDIR := ${_FULLSUBDIR:N$i}
d77 2
d111 1
@


1.85
log
@reorganize to avoid repeating lists of targets:
classify stuff that is used in bsd.port.subdir.mk, name them in pkgpath.mk,
and use them as .PHONY targets in both bsd.port.mk and bsd.port.subdir.mk.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.84 2007/04/28 10:19:41 espie Exp $
a118 1

a123 2
	homepage-links print-plist print-plist-contents \
	print-plist-all print-plist-with-depends print-plist-all-with-depends
@


1.84
log
@handle exact matches on STARTDIR.
allows `partial' STARTDIR, such as make describe STARTDIR=x11/kde
to work as expected.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.83 2007/04/07 09:55:13 espie Exp $
d118 1
a118 6
.for __target in all fetch package fake extract patch configure \
	build distclean deinstall install update \
	reinstall checksum fetch-makefile \
	link-categories unlink-categories regress lib-depends-check \
	newlib-depends-check manpages-check license-check \
	print-package-signature 
d124 1
a124 1
.for __target in describe show verbose-show dump-vars \
d131 1
a131 1
.for __target in all-dir-depends build-dir-depends run-dir-depends regress-dir-depends
d179 2
a180 8
.PHONY: all fetch package fake extract configure \
	build describe distclean deinstall install update \
	reinstall checksum show verbose-show dump-vars fetch-makefile \
	link-categories unlink-categories regress lib-depends-check \
	newlib-depends-check \
	homepage-links manpages-check license-check \
	all-dir-depends build-dir-depends run-dir-depends regress-dir-depends \
	clean readmes print-package-signature
@


1.83
log
@STARTDIR functionality: allows one to skip directly to a given directory
and start from there.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.82 2007/03/19 21:32:35 espie Exp $
d102 2
@


1.82
log
@remove stupid hack that makes _print-packagename display README on
subdirs. Confuse the hell out of broken dependencies, and is not
even needed.

fix typo.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.81 2006/12/18 12:52:34 espie Exp $
d78 5
d97 2
d100 8
d113 1
@


1.81
log
@duplicate the print-plist targets, add a version -with-depends, which is
slower, but shows dependency lines as well...

Also fix target evaluation to work like it does elsewhere
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.80 2006/12/02 11:27:46 espie Exp $
d136 1
a136 1
	rm -f ${README_TOPS}/${PKGPATH}/README.html
d152 5
a156 5
	name=`eval $$toset ${MAKE} _print-packagename`; \
	case $$name in \
		README) comment='';; \
		*) comment=`eval $$toset ${MAKE} show=_COMMENT|sed -e 's,^",,' -e 's,"$$,,' |${HTMLIFY}`;; \
	esac; \
a165 3
_print-packagename:
	@@echo "README"

d173 1
a173 1
	clean readmes _print-packagename print-package-signature
@


1.80
log
@move TMPDIR to pkgpath.mk to allow its use from both bsd.port.mk and
bsd.port.subdir.mk

Use absolute paths to build readmes files, based on READMES_TOP, which
can be (or not) PORTSDIR.

Generate category readmes in tmp directory as well.

minor clean-ups
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.79 2006/11/27 15:38:01 espie Exp $
d95 1
a95 2
		set +e; \
		if ! eval  $$toset ${MAKE} $$target; then \
d98 1
a98 1
	done; set -e
d113 1
a113 1
	print-plist-all
@


1.79
log
@same formatting clean-up as bsd.port.mk
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.78 2006/11/13 13:55:10 espie Exp $
d137 1
a137 1
	rm -f ${.CURDIR}/README.html
d142 8
a149 5
	@@rm -f ${.CURDIR}/README.html
	@@cd ${.CURDIR} && exec ${MAKE} README.html

README.html:
	@@>$@@.tmp
d159 1
a159 1
	echo "<dt><a href=\"${PKGDEPTH}$$dir/$$name.html\">$d</a><dd>$$comment" >>$@@.tmp
d161 5
a165 6
	@@cat ${README} | \
		sed -e 's%%CATEGORY%%'`echo ${.CURDIR} | sed -e 's.*/\([^/]*\)$$\1'`'g' \
			-e '/%%DESCR%%/r${.CURDIR}/pkg/DESCR' -e '//d' \
			-e '/%%SUBDIR%%/r$@@.tmp' -e '//d' \
		> $@@
	@@rm $@@.tmp
@


1.78
log
@avoid ignoring ports while running a `describe' target.
triggered by setting DESCRIBE_TARGET=Yes in bsd.port.subdir.mk
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.77 2006/11/11 16:10:36 espie Exp $
d55 1
a55 1
STRIP?=	-s
d59 1
a59 1
OPSYS=	OpenBSD
d64 1
a64 1
ECHO_MSG?=	echo
d68 1
a68 1
_FULLSUBDIR:=${SUBDIR}
d70 1
a70 1
_FULLSUBDIR:=${SUBDIR:S@@^@@${PKGPATH}/@@g}
d73 1
a73 1
_SKIPPED=
d75 2
a76 2
_SKIPPED:+=${_FULLSUBDIR:M$i}
_FULLSUBDIR:=${_FULLSUBDIR:N$i}
d79 6
d86 1
a86 1
_subdir_fragment= \
d102 5
a106 5
		 build distclean deinstall install update \
		 reinstall checksum fetch-makefile \
		 link-categories unlink-categories regress lib-depends-check \
		 newlib-depends-check manpages-check license-check \
		 print-package-signature 
d113 2
a114 2
		homepage-links print-plist print-plist-contents \
		 print-plist-all
d128 2
a129 1
	${_depfile_fragment}; ${_subdir_fragment}; }| tsort -r|while read subdir; do \
a143 7

TEMPLATES ?= ${PORTSDIR}/infrastructure/templates
.if defined(PORTSTOP)
README=	${TEMPLATES}/README.top
.else
README=	${TEMPLATES}/README.category
.endif
@


1.77
log
@shorten dependency names, so that regress and run can share.
add print-plist-all, for better introspection (to be used by pkg_mklocatedb).
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.76 2006/11/05 15:46:51 espie Exp $
d96 2
a97 2
		 build describe distclean deinstall install update \
		 reinstall checksum show verbose-show dump-vars fetch-makefile \
d99 2
a100 3
		 newlib-depends-check homepage-links manpages-check license-check \
		 print-package-signature print-plist print-plist-contents \
		 print-plist-all
d106 7
d134 1
a134 1
	@@${_subdir_fragment}
d148 2
a149 1
	@@subdir=$d; ${_flavor_fragment}; \
@


1.76
log
@add regress-dir-depends/full-regress-depends, similar mechanism to
run-depends, only the basic test changes.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.75 2006/10/15 09:48:05 espie Exp $
d100 2
a101 1
		 print-package-signature print-plist print-plist-contents
@


1.75
log
@Allows calling print-plist from main Makefile
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.74 2006/07/09 11:10:16 espie Exp $
d106 1
a106 1
.for __target in all-dir-depends build-dir-depends run-dir-depends
d166 1
a166 1
	all-dir-depends build-dir-depends run-dir-depends \
@


1.74
log
@introspection mechanism: dump-vars
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.73 2006/07/08 09:20:30 espie Exp $
d100 1
a100 1
		 print-package-signature
@


1.73
log
@move REPORT_PROBLEM to pkgpath.mk so that we can use it from bsd.port.mk
as well.

Add the target to the default problem reporter.
Report problems while building dependencies.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.72 2005/11/10 15:11:12 naddy Exp $
d44 3
a46 1
.if defined(show)
d97 1
a97 1
		 reinstall checksum show fetch-makefile \
d162 1
a162 1
	reinstall checksum show fetch-makefile \
@


1.72
log
@propagate name change of loop variable to shell fragment
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.71 2005/11/02 20:30:12 espie Exp $
a62 7

REPORT_PROBLEM_LOGFILE?=
.if !empty(REPORT_PROBLEM_LOGFILE)
REPORT_PROBLEM?=echo $$subdir >>${REPORT_PROBLEM_LOGFILE}
.else
REPORT_PROBLEM?=exit 1
.endif
@


1.71
log
@streamline flavor_fragment after trying to explain it to sturm@@.
it makes more sense to have a subdir variable as input, split it
into toset and dir as output, and to unsetenv FLAVOR SUBPACKAGE along
the lines.

End result should be equivalent, but slightly more readable.

no objection from my neighbors either...
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.70 2005/09/23 08:26:21 espie Exp $
d66 1
a66 1
REPORT_PROBLEM?=echo $$d >>${REPORT_PROBLEM_LOGFILE}
@


1.70
log
@add print-package-signature
suggested by bernd@@
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.69 2005/04/19 08:55:32 espie Exp $
d91 1
a91 2
	for d in ${_FULLSUBDIR}; do \
		dir=$$d; \
d93 1
a93 1
		eval $${echo_msg} "===\> $$d"; \
d120 1
a120 2
	${_depfile_fragment}; ${_subdir_fragment}; }| tsort -r|while read dir; do \
		unset FLAVOR SUBPACKAGE || true; \
d146 1
a146 1
	@@dir=$d; ${_flavor_fragment}; \
@


1.69
log
@add REPORT_PROBLEM_LOGFILE, okay naddy@@
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.68 2004/11/21 11:28:31 espie Exp $
d105 2
a106 1
		 newlib-depends-check homepage-links manpages-check license-check
d174 1
a174 1
	clean readmes _print-packagename
@


1.68
log
@newlib-depends-check recurses as well
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.67 2004/11/15 13:53:43 espie Exp $
d64 4
d69 1
@


1.67
log
@mark update as .PHONY target, necessary with UPDATE_COOKIES_DIR ;-)
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.66 2004/11/10 10:23:42 espie Exp $
d100 1
a100 1
		 homepage-links manpages-check license-check
d165 1
@


1.66
log
@allows it to recurse.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.65 2004/09/26 09:59:14 sturm Exp $
d162 1
a162 1
	build describe distclean deinstall install \
@


1.65
log
@add 'patch' to handled targets
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.64 2004/04/07 13:06:33 espie Exp $
d97 1
a97 1
		 build describe distclean deinstall install \
@


1.64
log
@silence echo in recursive work, so that tsort no longer sees confusing
===> directory entries.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.63 2003/08/15 00:35:10 espie Exp $
d96 1
a96 1
.for __target in all fetch package fake extract configure \
@


1.63
log
@update .PHONY list to match reality.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.62 2003/08/11 20:10:41 espie Exp $
d109 1
a109 1
	@@${_depfile_fragment}; ${_subdir_fragment}
@


1.62
log
@advisory license-check: warns if a package is apparently built from bad
sources.  Will returns some false positives.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.61 2003/08/08 23:56:13 espie Exp $
d161 7
a167 8
.PHONY: all fetch fetch-list package extract configure build clean \
	describe distclean deinstall reinstall checksum mirror-distfiles \
	list-distfiles show readmes \
	install fake \
	all-packages cdrom-packages ftp-packages packageinstall \
	link-categories unlink-categories dir-depends package-dir-depends \
	regress lib-depends-check homepage-links manpages-check \
	print-packagename license-check
@


1.61
log
@Fix INDEX building. Trickery that allows ECHO_MSG='echo 1>&2' to work again.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.60 2003/08/04 15:05:24 espie Exp $
d100 1
a100 1
		 homepage-links manpages-check
d168 1
a168 1
	print-packagename
@


1.60
log
@kill .USE, use common shell code instead.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.58 2003/08/04 14:45:31 espie Exp $
d81 1
a81 1
	: $${echo_msg:=${ECHO_MSG}}; \
d84 1
a84 1
		$${echo_msg} "===> $$i skipped"; \
d89 1
a89 1
		$${echo_msg} "===> $$d"; \
@


1.59
log
@oops, make sure SKIPPED is set immediately, otherwise it won't show.
@
text
@d75 1
a75 1
_SKIPPED+:=${_FULLSUBDIR:M$i}
d80 7
a86 17
_SUBDIRUSE: .USE
.  for i in ${_SKIPPED}
	@@echo "===> $i skipped"
.  endfor
.  for d in ${_FULLSUBDIR}
	@@dir=$d; ${_flavor_fragment}; \
	${ECHO_MSG} "===> $d"; \
	set +e; \
	if eval  $$toset ${MAKE} ${.TARGET}; then :; \
	else ${REPORT_PROBLEM}; fi
.endfor

_SUBDIRUSE_DEP: .USE
.  for i in ${_SKIPPED}
	@@echo "===> $i skipped"
.  endfor
	@@${_depfile_fragment}; for d in ${_FULLSUBDIR}; do \
d89 1
a89 1
		${ECHO_MSG} "===> $$d"; \
d91 1
a91 1
		if ! eval  $$toset ${MAKE} ${.TARGET}; then \
d94 1
a94 1
	done
d102 2
a103 1
${__target}: _SUBDIRUSE
d108 2
a109 1
${__target}: _SUBDIRUSE_DEP
d112 1
d114 2
a115 12
clean:
.  for i in ${_SKIPPED}
	@@echo "===> $i skipped"
.  endfor
	@@${_depfile_fragment}; for d in ${_FULLSUBDIR}; do \
		dir=$$d; \
		${_flavor_fragment}; \
		set +e; \
		if ! eval  $$toset ${MAKE} all-dir-depends ECHO_MSG=:; then \
			${REPORT_PROBLEM}; \
		fi; \
	done| tsort -r|while read dir; do \
d121 1
a121 1
clean: _SUBDIRUSE
d127 2
a128 1
readmes: _SUBDIRUSE
@


1.58
log
@smart recursion over clean depends.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.57 2003/08/04 14:37:48 espie Exp $
d75 1
a75 1
_SKIPPED+=${_FULLSUBDIR:M$i}
@


1.57
log
@let *-dir-depends recurse globally, with one single file.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.56 2003/08/04 14:16:53 espie Exp $
d120 18
d139 1
@


1.56
log
@zap old targets and add new ones.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.55 2003/08/04 13:31:26 espie Exp $
d92 14
d110 1
a110 2
		 homepage-links manpages-check \
		 all-dir-depends build-dir-depends run-dir-depends
d113 5
@


1.55
log
@oops
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.54 2003/08/04 13:25:36 espie Exp $
d92 1
a92 1
.for __target in all fetch fetch-list package fake extract configure \
d94 4
a97 6
		 reinstall tags checksum mirror-distfiles list-distfiles \
		 show fetch-makefile all-packages cdrom-packages \
		 dir-depends package-dir-depends \
		 ftp-packages packageinstall link-categories \
		 unlink-categories regress lib-depends-check \
		 homepage-links manpages-check
@


1.54
log
@kill old readme (useless distinction).
Let make clean=readmes work.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.53 2003/08/02 09:58:11 espie Exp $
d105 1
a105 1
.if ${clean:L:Mreadmes}
@


1.53
log
@Fix SKIPDIR handling.
Make various variables not public.
Remove PORTSDIR definition, it's alredy in /usr/share/mk.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.52 2003/08/02 09:53:27 espie Exp $
d93 1
a93 1
		 build clean describe distclean deinstall install \
d104 4
a107 1
readmes: readme _SUBDIRUSE
d109 2
a110 2
readme:
	@@rm -f README.html
d144 1
a144 1
	list-distfiles show readmes readme \
@


1.52
log
@put _flavor_fragment into a separate file, that's included from both
bsd.port.mk and bsd.port.subdir.mk. Make sure flavors are properly
separated.

Change the way bsd.port.subdir.mk works, slightly: always set full directories.
- SKIPDIR with full paths will work.
- all dirs are displayed as full package specs.

Generate complete html files.
@
text
@d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.51 2003/07/29 22:27:09 espie Exp $
a42 1
PORTSDIR ?= /usr/ports
d68 1
a68 1
FULLSUBDIR:=${SUBDIR}
d70 1
a70 1
FULLSUBDIR:=${SUBDIR:S@@^@@${PKGPATH}/@@g}
d73 1
a73 1
SKIPPED=
d75 2
a76 2
SKIPPED+=${FULLSUBDIR:M$i}
SUBDIR:=${FULLSUBDIR:N$i}
d81 1
a81 1
.  for i in ${SKIPPED}
d84 1
a84 1
.  for d in ${FULLSUBDIR}
d108 1
a108 1
	@@${MAKE} README.html
d119 2
a120 2
.for entry in ${FULLSUBDIR}
	@@dir=${entry}; ${_flavor_fragment}; \
d127 1
a127 1
	echo "<dt><a href=\"${PKGDEPTH}$$dir/$$name.html\">${entry}</a><dd>$$comment" >>$@@.tmp
@


1.51
log
@restore install
@
text
@d1 2
d4 1
a4 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.50 2003/07/18 18:18:15 espie Exp $
d43 1
d61 1
a61 14
.if !defined(PKGPATH)
_PORTSDIR!=	cd ${PORTSDIR} && pwd -P
_CURDIR!=	cd ${.CURDIR} && pwd -P
.  if ${_PORTSDIR} == ${_CURDIR}
PKGPATH=
.  else
PKGPATH=${_CURDIR:S,${_PORTSDIR}/,,}
.  endif
.endif
.if empty(PKGPATH)
_SEP=
.else
_SEP=/
.endif
d65 1
a65 1
RECURSIVE_FETCH_LIST?=	No
d67 6
a72 1
REPORT_PROBLEM?=exit 1
a73 2
# Need an actual list of all subdirs to complete SKIPPED
_ALL_SUBDIR:=${SUBDIR}
d75 5
a79 6
.if defined(SKIPDIR)
.  for i in ${SKIPDIR:S/:/,/}
SKIPPED+=${_ALL_SUBDIR:M$i}
SUBDIR:=${SUBDIR:N$i}
.  endfor
.endif
d83 1
a83 1
	@@echo "===> ${PKGPATH}${_SEP}$i skipped"
d85 7
a91 54
	@@for dir in ${SUBDIR}; do \
	    multi=''; flavor=''; sawflavor=false; toset=''; \
	    case "$$dir" in \
	    *[,:]*) \
		IFS=',:'; first=true; insert=''; for i in $$dir; do \
		    if $$first; then \
			dir=$$i; first=false; \
		    else \
			case X"$$i" in \
			X-*) \
			    multi="$$i";; \
			*) \
			    sawflavor=true; \
			    flavor="$$flavor$$insert$$i"; \
			    insert=' ';; \
			esac \
		    fi; \
		done; unset IFS; \
		case X$$multi in "X");; *) \
		    toset="$$toset SUBPACKAGE=\"$$multi\"";; \
		esac; \
	    esac; \
	    if $$sawflavor; then \
		toset="$$toset FLAVOR=\"$$flavor\""; \
		display=" ($$flavor)"; \
	    else \
	    	display=''; \
	    fi; \
	    if cd ${.CURDIR}/$${dir}.${MACHINE} 2>/dev/null; then \
		edir=$${dir}.${MACHINE}; \
	    elif cd ${.CURDIR}/$${dir} 2>/dev/null; then \
		edir=$${dir}; \
	    else \
		${ECHO_MSG} "===> ${PKGPATH}${_SEP}$${dir} non-existent"; \
		${REPORT_PROBLEM}; \
		continue; \
	    fi; \
	    ${ECHO_MSG} "===> ${PKGPATH}${_SEP}$${edir}$$display"; \
	    set +e; \
	    if eval  $$toset \
		PKGPATH=${PKGPATH}${_SEP}$$edir \
		RECURSIVE_FETCH_LIST=${RECURSIVE_FETCH_LIST} \
		${MAKE} ${.TARGET}; \
	    then :; else ${REPORT_PROBLEM}; fi; \
	    set -e; \
	done

${SUBDIR}::
	@@if test -d ${.TARGET}.${MACHINE}; then \
		cd ${.CURDIR}/${.TARGET}.${MACHINE}; \
	else \
		cd ${.CURDIR}/${.TARGET}; \
	fi; \
	${MAKE} all
a110 1
PORTSDIR ?= /usr/ports
d119 10
a128 8
	@@> $@@.tmp
.for entry in ${SUBDIR}
	@@echo -n '<dt><a href="'${entry}/README.html'">'"`cd ${entry} && make package-name 2>/dev/null||echo ${entry}`</a><dd>" >> $@@.tmp
.  if exists(${entry}/pkg/COMMENT)
	@@cat ${entry}/pkg/COMMENT >> $@@.tmp
.  else
	@@echo "(no description)" >> $@@.tmp
.  endif
a129 1
	@@sort -t '>' +1 -2 $@@.tmp > $@@.tmp2
d133 1
a133 1
			-e '/%%SUBDIR%%/r$@@.tmp2' -e '//d' \
d135 1
a135 1
	@@rm -f $@@.tmp $@@.tmp2
d138 1
a138 2
	@@echo 1>&2 "Error in dependency: ${PKGPATH} is not a package location"
	@@exit 1
@


1.50
log
@kill lots of if !target.
Kill targets that don't apply to ports.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.49 2003/02/16 15:16:17 espie Exp $
d149 1
a149 1
		 build clean describe distclean deinstall \
@


1.49
log
@Display something useful when a package location has been specified wrong.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.48 2002/10/24 23:14:40 naddy Exp $
d33 1
a33 1
#	install, package, readmes, realinstall, deinstall, reinstall,
d135 1
a135 1
		${MAKE} ${.TARGET:realinstall=install}; \
d149 1
a149 1
		 build clean depend describe distclean deinstall \
d151 1
a151 1
		 show obj fetch-makefile all-packages cdrom-packages \
a156 1
.if !target(${__target})
a157 1
.endif
a159 13
.if !target(install)
.if !target(beforeinstall)
beforeinstall:
.endif
.if !target(afterinstall)
afterinstall:
.endif
install: afterinstall
afterinstall: realinstall
realinstall: beforeinstall _SUBDIRUSE
.endif

.if !target(readmes)
a160 1
.endif
a161 1
.if !target(readme)
d164 1
a164 2
	@@make README.html
.endif
d178 1
a178 1
.if exists(${entry}/pkg/COMMENT)
d180 1
a180 1
.else
d182 1
a182 1
.endif
d196 4
a199 4
.PHONY: all fetch fetch-list package extract configure build clean depend \
	describe distclean deinstall reinstall tags checksum mirror-distfiles \
	list-distfiles obj show readmes readme \
	beforeinstall afterinstall install realinstall fake \
@


1.48
log
@Rename DUDS to SKIPDIR for consistency with the base system; ok espie@@
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.47 2002/08/29 18:35:40 avsm Exp $
d210 4
d220 2
a221 1
	regress lib-depends-check homepage-links manpages-check
@


1.47
log
@remove an unnecessary check for NetBSD

ok espie@@
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.46 2002/04/17 15:58:48 espie Exp $
d82 2
a83 2
.if defined(DUDS)
.  for i in ${DUDS:S/:/,/}
@


1.46
log
@kill bulk-packages. Use `make package BULK=Yes' instead.
The main advantage is that workdirs are cleaned up as soon
as package is built (or installed), not later.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.45 2002/04/02 15:55:55 espie Exp $
a183 3
.if (${OPSYS} == "NetBSD")
PORTSDIR ?= /usr/opt
.else
a184 1
.endif
@


1.45
log
@Add a target to check that makewhatis will build correct index entries.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.44 2002/03/13 13:51:59 espie Exp $
d152 1
a152 1
		 dir-depends package-dir-depends bulk-packages \
d154 1
a154 1
		 unlink-categories regress bulk-do lib-depends-check \
d216 1
a216 1
	list-distfiles obj show readmes readme bulk-packages bulk-do \
@


1.44
log
@Add rules to create a list of homepage links for all ports.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.43 2001/10/24 11:57:34 espie Exp $
d155 1
a155 1
		 homepage-links
d220 1
a220 1
	regress lib-depends-check homepage-links
@


1.43
log
@First cut at a lib-depends checker: this version does use WRKINST instead
of the actual package, so it WILL get things wrong in some multi-packages
case.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.42 2001/10/24 11:47:41 espie Exp $
d154 2
a155 1
		 unlink-categories regress bulk-do lib-depends-check
d220 1
a220 1
	regress lib-depends-check
@


1.42
log
@bulk-do, a slightly more generic version of bulk-packages
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.41 2001/10/08 22:04:43 todd Exp $
d154 1
a154 1
		 unlink-categories regress bulk-do
d219 1
a219 1
	regress
@


1.41
log
@add regress, ok espie@@
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.40 2001/08/16 14:49:31 espie Exp $
d154 1
a154 1
		 unlink-categories regress
d215 1
a215 1
	list-distfiles obj show readmes readme bulk-packages \
@


1.40
log
@Change WRKDIR name, to flatten things somewhat.
work-* is too long, because we want to include the PKGNAME in the dir name
(so that PKGNAME changes are less likely to work with old work directories)

Change the way clean works, so that you can say
make clean='dist depends packages' and have it do what you think it should
do.

Common fragment to _create_wrkobjdir.

Put some info into PACKAGING (name of subpackage being built)
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.39 2001/07/30 14:13:17 espie Exp $
d153 2
a154 1
		 ftp-packages packageinstall link-categories unlink-categories
d218 2
a219 1
	link-categories unlink-categories dir-depends package-dir-depends
@


1.39
log
@Lots of internal changes.
- define _FULLPKGNAME* and _PKGFILE*. Use _PKGFILE* as package cookie
instead of package_done.
- use ${PKG_DBDIR}/${_FULLPKGNAME${SUBPACKAGE}/+CONTENTS as install cookie.

- BIN_PACKAGES variable. If set to yes, remove coupling between
PACKAGE_COOKIE and dependencies, so that binary packages exist
independently of working directories.

- mark packages as precious.

- change all refs to PKGFILE to _PKGFILE${SUBPACKAGE}.
- add bulk-packages target.

Note that BIN_PACKAGES and TRUST_PACKAGES are off by default.
This interface is likely to change. The name bulk-packages will probably
change as well.

We will probably get rid of the old PKGFILE/FULLPKGNAME (taking SUBPACKAGE
into account) and use the new PKGFILE/FULLPKGNAME
PKGFILE-foo/FULLPKGNAME-foo instead (with explicit subpackage information).
This is less confusing and simpler.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.38 2001/04/20 15:00:04 espie Exp $
d44 2
@


1.38
log
@REPORT_PROBLEM for non-existent dirs.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.37 2001/04/18 14:43:55 espie Exp $
d150 1
a150 1
		 dir-depends package-dir-depends \
d212 1
a212 1
	list-distfiles obj show readmes readme \
@


1.37
log
@Misc. small tweaks.
- let USE_MOTIF be sensible: any, openmotif, lesstif.
any triggers a lesstif flavor.
- show=name as a shortcut.
- package-dir-depends to check that packages are okay.

- error message for non-existent dirs.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.36 2001/04/17 16:48:07 espie Exp $
d125 1
@


1.36
log
@Use same code as bsd.port.mk
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.35 2001/04/04 08:17:32 espie Exp $
d42 3
d46 1
d124 1
a124 1
		${ECHO_MSG} "===> ${PKGPATH}${_SEP}$${entry} non-existent"; \
d149 1
a149 1
		 dir-depends \
d214 1
a214 1
	link-categories unlink-categories dir-depends
@


1.35
log
@New Features for NEW_DEPENDS:
dir-depends: list of SUBDIRS this port depends on (with flavors, subpackages),
to use with tsort.
build-depends-list, run-depends-list: list of pkgspec:dir needed for this
port, no recursion. To use for INDEX.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.34 2001/03/28 16:37:27 espie Exp $
d88 1
a88 1
	    multi=''; flavor=''; toset=''; \
d99 1
a107 6
		case X"$$flavor" in "X");; *) \
		    toset="$$toset FLAVOR=\"$$flavor\"";; \
		esac; \
		display=" ($$flavor)";; \
	    *) \
		display='';; \
d109 6
@


1.34
log
@Restore REPORT_PROBLEM functionality.
I don't see what the hell sh is doing erroring out in an eval in a test,
even under set -e.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.33 2001/03/28 11:19:33 espie Exp $
d103 1
a103 1
		done; \
d144 1
d209 1
a209 1
	link-categories unlink-categories
@


1.33
log
@Handle parsing the flavor/multi-package part internally.
Use eval to simplify passing those to submakes.

Note that the preferred separator is ',', not ':'.
(Because ':' can't be used unambiguously in *_DEPENDS, whereas ',' can)
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.32 2001/03/28 10:55:52 espie Exp $
d123 1
d129 1
@


1.32
log
@Move DUDS handling to makefile level
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.31 2000/12/16 15:49:13 espie Exp $
d87 41
a127 25
	@@for entry in ${SUBDIR}; do \
		if expr "$$entry" : '.*[,:]' >/dev/null; then \
			flavor=`echo $$entry | sed -e 's/[^,:]*[,:]//' -e 's/,/ /g'`; \
			entry=`echo $$entry | sed -e 's/[:,].*//'`; \
			display=" ($$flavor)"; \
			varname=FLAVOR; \
		else \
			flavor=''; \
			display=''; \
			varname=DUMMY; \
		fi; \
		if cd ${.CURDIR}/$${entry}.${MACHINE} 2>/dev/null; then \
			edir=$${entry}.${MACHINE}; \
		elif cd ${.CURDIR}/$${entry} 2>/dev/null; then \
			edir=$${entry}; \
		else \
			${ECHO_MSG} "===> ${PKGPATH}${_SEP}$${entry} non-existent"; \
			continue; \
		fi; \
		${ECHO_MSG} "===> ${PKGPATH}${_SEP}$${edir}$$display"; \
		if env  $$varname="$$flavor" \
			PKGPATH=${PKGPATH}${_SEP}$$edir \
			RECURSIVE_FETCH_LIST=${RECURSIVE_FETCH_LIST} \
			${MAKE} ${.TARGET:realinstall=install}; \
		then :; else ${REPORT_PROBLEM}; fi; \
@


1.31
log
@link-categories/unlink-categories target:
populate ports tree with symlinks.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.30 2000/07/26 12:47:16 espie Exp $
d73 10
d84 3
a87 6
		for dud in $$DUDS; do \
			if [ $${dud} = $${entry} ]; then \
				${ECHO_MSG} "===> ${PKGPATH}${_SEP}$${entry} skipped"; \
				continue 2; \
			fi; \
		done; \
@


1.30
log
@Base _SEP on PKGPATH being empty, more robust
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.29 2000/07/17 07:11:50 espie Exp $
d119 1
a119 1
		 ftp-packages packageinstall
d182 2
a183 1
	all-packages cdrom-packages ftp-packages packageinstall
@


1.29
log
@Buglet: ensure PKGPATH is without a /.
This complicates bsd.port.subdir.mk slightly (needs to set _SEP),
but at least it's consistent.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.28 2000/07/14 23:01:11 espie Exp $
a56 1
_SEP=
d61 5
a65 1
_SEP?=/
@


1.28
log
@Change PORTSUBDIR/DIRPRFX to PKGPATH (avoid gratuitous naming
incompatibility with NetBSD).

This patch rearranges code so that PKGPATH is maintained
- when recursing into subdirs,
- when computing dependencies.

So that this reduces the number of `pwd` calls overall.
Should be especially noticeable for mirror-maker.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.27 2000/06/24 14:12:33 espie Exp $
d57 1
d59 1
a59 1
PKGPATH=${_CURDIR:S,${_PORTSDIR}/,,}/
d62 1
d74 1
a74 1
				${ECHO_MSG} "===> ${PKGPATH}$${entry} skipped"; \
d93 1
a93 1
			${ECHO_MSG} "===> ${PKGPATH}$${entry} non-existent"; \
d96 1
a96 1
		${ECHO_MSG} "===> ${PKGPATH}$${edir}$$display"; \
d98 1
a98 1
			PKGPATH=${PKGPATH}$$edir/ \
@


1.27
log
@Pass FLAVOR in the environment, to allow for some manipulations...
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.26 2000/06/18 23:35:03 turan Exp $
d52 10
d72 1
a72 1
				${ECHO_MSG} "===> ${DIRPRFX}$${entry} skipped"; \
d91 1
a91 1
			${ECHO_MSG} "===> ${DIRPRFX}$${entry} non-existent"; \
d94 1
a94 1
		${ECHO_MSG} "===> ${DIRPRFX}$${edir}$$display"; \
d96 1
a96 1
			DIRPRFX=${DIRPRFX}$$edir/ \
@


1.26
log
@spelling errors in all-packages target.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.25 2000/04/16 20:10:21 espie Exp $
d85 1
a85 1
		if ${MAKE} ${.TARGET:realinstall=install} \
d88 1
a88 1
			$$varname="$$flavor"; \
@


1.25
log
@Don't add FLAVOR='' to ports without flavor, let default be picked up
instead.

Allow for ',' as a FLAVOR separator instead of ':'
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.24 2000/04/10 17:51:26 espie Exp $
d103 2
a104 2
		 show obj fetch-makefile cdrom-packages ftp-packages \
		 packageinstall
d167 1
a167 1
	cdrom-packages ftp-packages packageinstall
@


1.25.2.1
log
@
bring cutoff infrastructure files into 2.7 branch
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.30 2000/07/26 12:47:16 espie Exp $
a51 15
.if !defined(PKGPATH)
_PORTSDIR!=	cd ${PORTSDIR} && pwd -P
_CURDIR!=	cd ${.CURDIR} && pwd -P
.  if ${_PORTSDIR} == ${_CURDIR}
PKGPATH=
.  else
PKGPATH=${_CURDIR:S,${_PORTSDIR}/,,}
.  endif
.endif
.if empty(PKGPATH)
_SEP=
.else
_SEP=/
.endif

d62 1
a62 1
				${ECHO_MSG} "===> ${PKGPATH}${_SEP}$${entry} skipped"; \
d81 1
a81 1
			${ECHO_MSG} "===> ${PKGPATH}${_SEP}$${entry} non-existent"; \
d84 3
a86 3
		${ECHO_MSG} "===> ${PKGPATH}${_SEP}$${edir}$$display"; \
		if env  $$varname="$$flavor" \
			PKGPATH=${PKGPATH}${_SEP}$$edir \
d88 1
a88 1
			${MAKE} ${.TARGET:realinstall=install}; \
d103 2
a104 2
		 show obj fetch-makefile all-packages cdrom-packages \
		 ftp-packages packageinstall
d167 1
a167 1
	all-packages cdrom-packages ftp-packages packageinstall
@


1.24
log
@Flexibility in recursively entering subdirs.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.23 2000/04/09 12:04:13 turan Exp $
d66 3
a68 3
		if expr "$$entry" : '.*:' >/dev/null; then \
			flavor=`echo $$entry | sed -e 's/.*://' -e 's/,/ /g'`; \
			entry=`echo $$entry | sed -e 's/:.*//'`; \
d70 1
d74 1
d88 1
a88 1
			FLAVOR="$$flavor"; \
@


1.23
log
@ftp-packages, cdrom-packages targets. These are the targets I use
to build packages and log them.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.22 2000/04/01 14:54:49 espie Exp $
d56 2
d83 1
a83 1
		${MAKE} ${.TARGET:realinstall=install} \
d87 1
@


1.22
log
@Pass `show VARNAME=' to subdirs.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.21 2000/03/31 18:05:28 espie Exp $
d98 3
a100 1
		 show obj fetch-makefile
d161 2
a162 1
	beforeinstall afterinstall install realinstall fake
@


1.21
log
@Include guard to avoid getting bsd.own.mk twice.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.20 2000/03/30 02:09:31 espie Exp $
d98 1
a98 1
		 obj fetch-makefile
d158 1
a158 1
	list-distfiles obj readmes readme \
@


1.20
log
@Typo
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.19 2000/03/29 15:59:51 espie Exp $
d37 4
a40 1
.include <bsd.own.mk>
@


1.19
log
@Flavored ports
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.18 2000/03/26 16:57:42 espie Exp $
d67 1
a67 1
			disply=''; \
@


1.18
log
@Trim sed, using same techniques I already did for bsd.port.mk.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.17 2000/03/26 15:59:42 espie Exp $
d61 8
d77 1
a77 1
		${ECHO_MSG} "===> ${DIRPRFX}$${edir}"; \
d80 2
a81 1
			RECURSIVE_FETCH_LIST=${RECURSIVE_FETCH_LIST}; \
d92 1
a92 1
.for __target in all fetch fetch-list package extract configure \
d156 1
a156 1
	beforeinstall afterinstall install realinstall
@


1.17
log
@Propagate RECURSIVE_FETCH_LIST in a less hackish way.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.16 2000/03/05 16:20:02 espie Exp $
d37 1
d139 2
a140 4
			-e '/%%DESCR%%/r${.CURDIR}/pkg/DESCR' \
			-e '/%%DESCR%%/d' \
			-e '/%%SUBDIR%%/r$@@.tmp2' \
			-e '/%%SUBDIR%%/d' \
@


1.16
log
@streamline SUBDIRUSE
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.15 2000/03/04 18:16:02 espie Exp $
d50 2
d70 2
a71 1
			DIRPRFX=${DIRPRFX}$$edir/; \
@


1.15
log
@Add fetch-makefile to bsd.port.subdir.mk, mirror-maker to main Makefile.

Tweak fetch-makefile to take PERMIT_* into account, giving us the level
of control needed.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.14 1999/11/20 17:56:57 espie Exp $
a51 1
		OK=""; \
a53 1
				OK="false"; \
d55 1
d58 1
a58 1
		if test -d ${.CURDIR}/$${entry}.${MACHINE}; then \
d60 1
a60 1
		elif test -d ${.CURDIR}/$${entry}; then \
a62 1
			OK="false"; \
d64 1
d66 3
a68 6
		if [ "$$OK" = "" ]; then \
			${ECHO_MSG} "===> ${DIRPRFX}$${edir}"; \
			cd ${.CURDIR}/$${edir}; \
			${MAKE} ${.TARGET:realinstall=install} \
				DIRPRFX=${DIRPRFX}$$edir/; \
		fi; \
@


1.14
log
@Revert unwanted commit...
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.12 1999/10/29 20:28:33 espie Exp $
d86 1
a86 1
		 obj
@


1.13
log
@Blast DEPENDS_TMP .USE macro out of existence.

The problem with .USE macros is that they should be constant...
If they do depend on the target being made, they will invariably use
.if make(TARGET) tests.   But this is a bad idea, as then `TARGET' can't
be used as a true dependency, since it's not being made then...
So instead, one would have to remember to fork another make TARGET to
ensure the .USE macro is executed correctly... This is slow, and
error-prone.
@
text
@d44 3
a46 1
OPSYS?=	OpenBSD
d52 1
d55 1
a56 1
				continue 2; \
d59 1
a59 1
		if cd ${.CURDIR}/$${entry}.${MACHINE} 2>/dev/null; then \
d61 1
a61 1
		elif cd ${.CURDIR}/$${entry} 2>/dev/null; then \
d64 1
a65 1
			continue; \
d67 6
a72 2
		${ECHO_MSG} "===> ${DIRPRFX}$${edir}"; \
		${MAKE} ${.TARGET:realinstall=install} DIRPRFX=${DIRPRFX}$$edir/; \
d86 1
a86 1
		 obj link-categories unlink-categories
d114 3
d118 1
a118 1

d148 1
a148 1
	list-distfiles obj link-categories unlink-categories readmes readme \
@


1.12
log
@- OPSYS is OpenBSD, no need to fire uname.
- Write .PHONY targets explicitly.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.11 1999/10/26 14:50:05 espie Exp $
d44 1
a44 3
.if !defined(OPSYS)	# XXX !!
OPSYS=	OpenBSD
.endif
a49 1
		OK=""; \
a51 1
				OK="false"; \
d53 1
d56 1
a56 1
		if test -d ${.CURDIR}/$${entry}.${MACHINE}; then \
d58 1
a58 1
		elif test -d ${.CURDIR}/$${entry}; then \
a60 1
			OK="false"; \
d62 1
d64 2
a65 6
		if [ "$$OK" = "" ]; then \
			${ECHO_MSG} "===> ${DIRPRFX}$${edir}"; \
			cd ${.CURDIR}/$${edir}; \
			${MAKE} ${.TARGET:realinstall=install} \
				DIRPRFX=${DIRPRFX}$$edir/; \
		fi; \
d79 1
a79 1
		 obj
a106 3
.if (${OPSYS} == "NetBSD")
PORTSDIR ?= /usr/opt
.else
d108 1
a108 1
.endif
d138 1
a138 1
	list-distfiles obj readmes readme \
@


1.11
log
@Fix typo.
No port subdir overrides those targets yet, but this wouldn't have worked
anyway.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.10 1999/09/30 21:07:09 espie Exp $
d45 1
a45 1
OPSYS!=	uname -s
d145 5
@


1.10
log
@- don't display `creating README.html for...', the subdir macros
already swamp us with information.
- perform the same optimization for README.html, namely don't invoke
depends-list and package-depends if they're known not to be needed.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.9 1999/07/30 08:57:39 niklas Exp $
d87 1
a87 1
.if !target(__target)
@


1.9
log
@Add deinstall to target we recurse on
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.8 1999/07/28 12:40:56 espie Exp $
a126 1
	@@echo "===>  Creating README.html"
@


1.8
log
@- fix up templates location so that readmes should be functional.
- provide error location for failing recursive dependency computation.
- remove hard-coded limit on topdir, always try to use make package-name
and fall back on directory name otherwise.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.7 1999/05/25 20:38:34 espie Exp $
d33 2
a34 1
#	install, package, readmes, realinstall, reinstall, tags
d84 3
a86 2
		 build clean depend describe distclean reinstall \
		 tags checksum mirror-distfiles list-distfiles obj
@


1.7
log
@Force commit.  These are `new' files actually.
Like FreeBSD, we transfer ownership of ports specific stuff outside
of /src.

The cvs files were copied to make it simpler to track history.
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.6 1999/04/02 06:55:56 marc Exp $
d117 1
a117 1
TEMPLATES ?= ${PORTSDIR}/templates
d128 1
a128 5
.if defined(PORTSTOP)
	@@echo -n '<a href="'${entry}/README.html'">${entry}</a>: ' >> $@@.tmp
.else
	@@echo -n '<a href="'${entry}/README.html'">'"`cd ${entry}; make package-name`</a>: " >> $@@.tmp
.endif
@


1.6
log
@add list-distfiles target to help me build/update the LICENSE file
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.5 1999/03/30 07:12:05 marc Exp $
@


1.5
log
@add obj target that works in conjuction with WRKOBJDIR;
code from op21@@squish.org
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.4 1998/12/16 19:26:31 marc Exp $
d84 1
a84 1
		 tags checksum mirror-distfiles obj
@


1.4
log
@add mirror-distfiles as a known target
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.3 1997/09/09 15:11:29 imp Exp $
d84 1
a84 1
		 tags checksum mirror-distfiles
@


1.3
log
@Merge 1.264 and 1.20 from FreeBSD's bsd.port.mk and bsd.port.subdir.mk respectively
@
text
@d2 1
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.1 1996/06/03 22:47:11 niklas Exp $
d83 2
a84 1
		 build clean depend describe distclean reinstall tags checksum
@


1.2
log
@Sync with FreeBSD
@
text
@d1 1
d3 33
a35 1
#	FreeBSD Id: bsd.port.subdir.mk,v 1.14 1996/04/09 22:54:13 wosch Exp $
d43 3
d58 8
d67 2
a68 9
			if test -d ${.CURDIR}/$${entry}.${MACHINE}; then \
				${ECHO_MSG} "===> ${DIRPRFX}$${entry}.${MACHINE}"; \
				edir=$${entry}.${MACHINE}; \
				cd ${.CURDIR}/$${edir}; \
			else \
				${ECHO_MSG} "===> ${DIRPRFX}$$entry"; \
				edir=$${entry}; \
				cd ${.CURDIR}/$${edir}; \
			fi; \
d83 1
a83 1
		 build clean depend describe reinstall tags checksum
d111 3
d115 1
@


1.1
log
@Initial import of "ports" mk-files from FreeBSD, probably needs work
@
text
@d1 2
a2 1
#	$OpenBSD: bsd.port.subdir.mk,v 1.14 1996/04/09 22:54:13 wosch Exp $
@
