head	1.6;
access;
symbols
	OPENBSD_4_8:1.5.0.8
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.6
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2010.08.20.15.07.23;	author espie;	state dead;
branches;
next	1.5;

1.5
date	2008.11.18.11.45.42;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2007.10.29.21.50.40;	author sturm;	state Exp;
branches;
next	1.3;

1.3
date	2007.10.29.20.00.53;	author sturm;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.28.21.05.47;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.26.15.00.24;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@kill a few things which have now MOVED
@
text
@#! /usr/bin/perl

# $OpenBSD: getpkgpath,v 1.5 2008/11/18 11:45:42 espie Exp $
#
# Copyright (c) 2006 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use Cwd qw(abs_path);
use strict;
use warnings;

my $dir = shift;
my $path = $ENV{PORTSDIR_PATH} or exit 1;

my $pkgpath;
my $real_dir = abs_path($dir);
for my $d (split ':', $path) {
	my $real_d = abs_path($d);
	if ($real_dir =~ m/^\Q$real_d\E\//) {
		my $newpath = $';
		if (!defined $pkgpath or length $newpath < length $pkgpath) {
			$pkgpath = $newpath;
		}
	}
}
if (defined $pkgpath) { 
	print $pkgpath, "\n";
} else {
	print STDERR "Can't find $dir ";
	if ($real_dir ne $dir) {
		print STDERR "($real_dir) ";
	}
	print STDERR "under PORTSDIR_PATH=$path\n";
}
# XXX no error code because this is too verbose from the Makefile
exit 0;

@


1.5
log
@somewhat better error indications after some user feedback ;)
@
text
@d3 1
a3 1
# $OpenBSD: getpkgpath,v 1.4 2007/10/29 21:50:40 sturm Exp $
@


1.4
log
@back out, this breaks PLIST_DB
@
text
@d3 1
a3 1
# $OpenBSD: getpkgpath,v 1.2 2007/06/28 21:05:47 espie Exp $
d40 5
a44 1
	print STDERR "Can't parse $dir ($real_dir) through PORTSDIR_PATH=$path\n";
d46 2
a48 1
exit 0;
@


1.3
log
@unbreak, the regular expression never matched and $' was empty there

ok espie@@
@
text
@d30 2
a31 2
	if ($real_dir =~ m/^\Q$real_d\E/) {
		my $newpath = $real_d;
@


1.2
log
@tweak getpkgpath to display a diagnostic, but not exit 1, in case of
error.

Do the real erroring out through a fatal error in pkgpath.mk (and set
PKGPATH to something less confusing than an empty variable). This
solves PR 5510 for real.
@
text
@d3 1
a3 1
# $OpenBSD: getpkgpath,v 1.1 2006/12/26 15:00:24 espie Exp $
d30 2
a31 2
	if ($real_dir =~ m/^\Q$real_d\E\//) {
		my $newpath = $';
@


1.1
log
@use a simple perl script to compute initial pkgpaths... Cwd can replace
pwd -P, and we select the longest prefix from PORTSDIR_PATH.

This lets mystuff-like dirs get stripped from PKGPATH correctly, as long
as PORTSDIR_PATH is set correctly.
@
text
@d3 1
a3 1
# $OpenBSD$
d37 1
a37 1
if (defined $pkgpath) {
a38 1
	exit 0;
d40 1
a40 1
	exit 1;
d42 2
@

