head	1.11;
access;
symbols
	OPENBSD_4_0:1.10.0.18
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.16
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.14
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.12
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.10
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.8
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.6
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.4
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_TRACKING_SWITCH:1.8
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5;
locks; strict;
comment	@# @;


1.11
date	2006.10.15.19.29.06;	author espie;	state dead;
branches;
next	1.10;

1.10
date	2002.06.27.12.47.23;	author mpech;	state Exp;
branches;
next	1.9;

1.9
date	2001.09.14.17.33.51;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2001.07.30.14.13.17;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.07.14.43.01;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.05.20.20.59;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.28.11.32.30;	author espie;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2001.03.22.00.23.15;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.15.21.51.32;	author wilfried;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.18.14.58.17;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.23.12.25.58;	author espie;	state Exp;
branches;
next	;

1.5.2.1
date	2001.05.05.20.34.20;	author espie;	state Exp;
branches;
next	;


desc
@@


1.11
log
@say goodbye for FAKE=no, for real.
@
text
@# $OpenBSD: old-install.mk,v 1.10 2002/06/27 12:47:23 mpech Exp $
# Stuff that is needed for old, pre-fake, port installations.

# If ${FAKE} == No
# install		- Install the results of a build.
# reinstall		- Install the results of a build, ignoring "already installed"
#				  flag.
# deinstall		- Remove the installation.  Alias: uninstall
# package		- Create a package from an _installed_ port.

# FORCE_PKG_REGISTER - If set, it will overwrite any existing package
#				  registration information in ${PKG_DBDIR}/${FULLPKGNAME}.


${_FAKE_COOKIE}: ${_BUILD_COOKIE}
	@@echo 1>&2 "*** ${FULLPKGNAME} does not use fake installation yet"

# The real install, old version
${_INSTALL_COOKIE}: ${_BUILD_COOKIE} 
	@@cd ${.CURDIR} && exec ${SUDO} ${MAKE} run-depends lib-depends 
.if !defined(NO_INSTALL)
	@@${ECHO_MSG} "===>  Installing for ${FULLPKGNAME}"
# Kludge
.  if ${CONFIGURE_STYLE:Mimake}
	@@${SUDO} mkdir -p /usr/local/lib/X11
	@@if [ ! -e /usr/local/lib/X11/app-defaults ]; then \
		${SUDO} ln -sf /etc/X11/app-defaults /usr/local/lib/X11/app-defaults; \
	fi
.  endif
.  if !defined(NO_PKG_REGISTER) && !defined(FORCE_PKG_REGISTER)
	@@if [ -d ${PKG_DBDIR}/${FULLPKGNAME} -o "X$$(ls -d ${PKG_DBDIR}/${FULLPKGNAME:C/-[0-9].*//g}-* 2> /dev/null)" != "X" ]; then \
		echo "===>  ${FULLPKGNAME} is already installed - perhaps an older version?"; \
		echo "      If so, you may wish to \`\`make deinstall'' and install"; \
		echo "      this port again by \`\`make reinstall'' to upgrade it properly."; \
		echo "      If you really wish to overwrite the old port of ${FULLPKGNAME}"; \
		echo "      without deleting it first, set the variable \"FORCE_PKG_REGISTER\""; \
		echo "      in your environment or the \"make install\" command line."; \
		exit 1; \
	fi
.  endif
	@@if [ `${SH} -c umask` != ${DEF_UMASK} ]; then \
		${ECHO_MSG} "===>  Warning: your umask is \"`${SH} -c umask`"\".; \
		${ECHO_MSG} "      If this is not desired, set it to an appropriate value"; \
		${ECHO_MSG} "      and install this port again by \`\`make reinstall''."; \
	fi
	@@${_MAKE_COOKIE} ${_INSTALL_PRE_COOKIE}
.  if target(pre-install)
	@@cd ${.CURDIR} && exec ${SUDO} ${MAKE} pre-install
.  endif
.  if target(do-install)
	@@cd ${.CURDIR} && exec ${SUDO} ${MAKE} do-install
.  else
# What INSTALL normally does:
	@@cd ${WRKBUILD} && ${SUDO} ${SETENV} ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS} -f ${MAKE_FILE} ${INSTALL_TARGET}
# End of INSTALL.
.  endif
.  if target(post-install)
	@@cd ${.CURDIR} && exec ${SUDO} ${MAKE} post-install
.  endif
.  if defined(_MANPAGES) || defined(_CATPAGES)
.    if defined(MANCOMPRESSED) && defined(NOMANCOMPRESS)
	@@${ECHO_MSG} "===>   Uncompressing manual pages for ${FULLPKGNAME}"
.      for manpage in ${_MANPAGES} ${_CATPAGES}
	@@${SUDO} ${GUNZIP_CMD} ${manpage}.gz
.      endfor
.    elif !defined(MANCOMPRESSED) && !defined(NOMANCOMPRESS)
	@@${ECHO_MSG} "===>   Compressing manual pages for ${FULLPKGNAME}"
.      for manpage in ${_MANPAGES} ${_CATPAGES}
	@@if [ -L ${manpage} ]; then \
		set - `file ${manpage}`; \
		shift `expr $$# - 1`; \
		${SUDO} ln -sf $${1}.gz ${manpage}.gz; \
		${SUDO} rm ${manpage}; \
	else \
		${SUDO} ${GZIP_CMD} ${manpage}; \
	fi
.        endfor
.    endif
.  endif
.  if defined(MESSAGE)
	@@cat	${WRKBUILD}/MESSAGE${SUBPACKAGE}
.  endif
.  if !defined(NO_PKG_REGISTER)
	@@cd ${.CURDIR} && exec ${SUDO} ${MAKE} fake-pkg
.  endif
.endif
	@@${SUDO} ${_MAKE_COOKIE} $@@

# Figure out where the local mtree file is
.if ${PREFIX} == "/usr/local"
MTREE_FILE?=	/etc/mtree/BSD.local.dist
.else
MTREE_FILE?=	/etc/mtree/BSD.x11.dist
.endif

plist: install
	@@DESTDIR=${PREFIX} PREFIX=${PREFIX} LDCONFIG="${LDCONFIG}" MTREE_FILE=${MTREE_FILE} \
	INSTALL_PRE_COOKIE=${_INSTALL_PRE_COOKIE} \
	perl ${PORTSDIR}/infrastructure/install/make-plist ${PLIST}

# Fake installation of package so that user can pkg_delete it later.
# Also, make sure that an installed port is recognized correctly in
# accordance to the @@pkgdep directive in the packing lists

fake-pkg: ${_PKG_PREREQ}
	@@if [ `echo ${_COMMENT} | wc -c` -gt 60 ]; then \
	    echo "** "${_COMMENT}" too large - installation not recorded."; \
	    exit 1; \
	 fi
	@@if [ ! -d ${PKG_DBDIR} ]; then rm -f ${PKG_DBDIR}; mkdir -p ${PKG_DBDIR}; fi
.if defined(FORCE_PKG_REGISTER)
	@@rm -rf ${PKG_DBDIR}/${FULLPKGNAME}
.endif
	@@if [ ! -d ${PKG_DBDIR}/${FULLPKGNAME} ]; then \
		${ECHO_MSG} "===>  Registering installation for ${FULLPKGNAME}"; \
		mkdir -p ${PKG_DBDIR}/${FULLPKGNAME}; \
		${PKG_CMD} ${PKG_ARGS} -O ${PKGFILE} > ${PKG_DBDIR}/${FULLPKGNAME}/+CONTENTS; \
		cp ${WRKPKG}/DESCR${SUBPACKAGE} ${PKG_DBDIR}/${FULLPKGNAME}/+DESC; \
		echo ${_COMMENT} >${PKG_DBDIR}/${FULLPKGNAME}/+COMMENT; \
		if [ -f ${WRKPKG}/INSTALL${SUBPACKAGE} ]; then \
			cp ${WRKPKG}/INSTALL${SUBPACKAGE} ${PKG_DBDIR}/${FULLPKGNAME}/+INSTALL; \
		fi; \
		if [ -f ${WRKPKG}/DEINSTALL${SUBPACKAGE} ]; then \
			cp ${WRKPKG}/DEINSTALL${SUBPACKAGE} ${PKG_DBDIR}/${FULLPKGNAME}/+DEINSTALL; \
		fi; \
		if [ -f ${WRKPKG}/REQ${SUBPACKAGE} ]; then \
			cp ${WRKPKG}}/REQ${SUBPACKAGE} ${PKG_DBDIR}/${FULLPKGNAME}/+REQ; \
		fi; \
		if [ -f ${WRKPKG}/MESSAGE${SUBPACKAGE} ]; then \
			cp ${WRKPKG}/MESSAGE${SUBPACKAGE} ${PKG_DBDIR}/${FULLPKGNAME}/+DISPLAY; \
		fi; \
		for dep in `cd ${.CURDIR} && ${MAKE} package-depends ECHO_MSG=true | ${_SORT_DEPENDS}`; do \
			if [ -d ${PKG_DBDIR}/$$dep ]; then \
				if ! grep ^${FULLPKGNAME}$$ ${PKG_DBDIR}/$$dep/+REQUIRED_BY \
					>/dev/null 2>&1; then \
					echo ${FULLPKGNAME} >> ${PKG_DBDIR}/$$dep/+REQUIRED_BY; \
				fi; \
			fi; \
		done; \
	fi

.PHONY: fake-pkg
@


1.10
log
@/var/X11/... -> /etc/X11/... From form@@.

lebel@@, naddy@@, pval@@ ok
@
text
@d1 1
a1 1
# $OpenBSD: old-install.mk,v 1.9 2001/09/14 17:33:51 espie Exp $
@


1.9
log
@fix sudo install
@
text
@d1 1
a1 1
# $OpenBSD: old-install.mk,v 1.8 2001/07/30 14:13:17 espie Exp $
d27 1
a27 1
		${SUDO} ln -sf /var/X11/app-defaults /usr/local/lib/X11/app-defaults; \
@


1.8
log
@Lots of internal changes.
- define _FULLPKGNAME* and _PKGFILE*. Use _PKGFILE* as package cookie
instead of package_done.
- use ${PKG_DBDIR}/${_FULLPKGNAME${SUBPACKAGE}/+CONTENTS as install cookie.

- BIN_PACKAGES variable. If set to yes, remove coupling between
PACKAGE_COOKIE and dependencies, so that binary packages exist
independently of working directories.

- mark packages as precious.

- change all refs to PKGFILE to _PKGFILE${SUBPACKAGE}.
- add bulk-packages target.

Note that BIN_PACKAGES and TRUST_PACKAGES are off by default.
This interface is likely to change. The name bulk-packages will probably
change as well.

We will probably get rid of the old PKGFILE/FULLPKGNAME (taking SUBPACKAGE
into account) and use the new PKGFILE/FULLPKGNAME
PKGFILE-foo/FULLPKGNAME-foo instead (with explicit subpackage information).
This is less confusing and simpler.
@
text
@d1 1
a1 1
# $OpenBSD: old-install.mk,v 1.7 2001/06/07 14:43:01 espie Exp $
d87 1
a87 1
	@@${_MAKE_COOKIE} $@@
@


1.7
log
@Fix _COMMENT quote handling.
@
text
@d1 1
a1 1
# $OpenBSD: old-install.mk,v 1.6 2001/05/05 20:20:59 espie Exp $
a10 2
# Corresponding obsolescent variables
# PKG_DBDIR		- Where package installation is recorded (default: /var/db/pkg)
a12 3

# where pkg_add records its dirty deeds.
PKG_DBDIR?=		/var/db/pkg
@


1.6
log
@Fix _COMMENT and add SUDO for those few unfaked ports that are left.
@
text
@d1 1
a1 1
# $OpenBSD: old-install.mk,v 1.5 2001/03/28 11:32:30 espie Exp $
d111 2
a112 2
	@@if [ `${_COMMENT} | wc -c` -gt 60 ]; then \
	    echo "** ${COMMENT} too large - installation not recorded."; \
d124 1
a124 1
		${_COMMENT} >${PKG_DBDIR}/${FULLPKGNAME}/+COMMENT; \
@


1.5
log
@More regularity, use $@@ to regenerate target cookies
@
text
@d1 1
a1 1
# $OpenBSD: old-install.mk,v 1.4 2001/03/22 00:23:15 espie Exp $
d25 1
a25 1
	@@cd ${.CURDIR} && exec ${MAKE} run-depends lib-depends 
d30 1
a30 1
	@@mkdir -p /usr/local/lib/X11
d32 1
a32 1
		ln -sf /var/X11/app-defaults /usr/local/lib/X11/app-defaults; \
d53 1
a53 1
	@@cd ${.CURDIR} && exec ${MAKE} pre-install
d56 1
a56 1
	@@cd ${.CURDIR} && exec ${MAKE} do-install
d59 1
a59 1
	@@cd ${WRKBUILD} && ${SETENV} ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS} -f ${MAKE_FILE} ${INSTALL_TARGET}
d63 1
a63 1
	@@cd ${.CURDIR} && exec ${MAKE} post-install
d69 1
a69 1
	@@${GUNZIP_CMD} ${manpage}.gz
d77 2
a78 2
		ln -sf $${1}.gz ${manpage}.gz; \
		rm ${manpage}; \
d80 1
a80 1
		${GZIP_CMD} ${manpage}; \
d89 1
a89 1
	@@cd ${.CURDIR} && exec ${MAKE} fake-pkg
d111 1
a111 1
	@@if [ `/bin/ls -l ${COMMENT} | awk '{print $$5}'` -gt 60 ]; then \
d124 1
a124 1
		cp ${COMMENT} ${PKG_DBDIR}/${FULLPKGNAME}/+COMMENT; \
@


1.5.2.1
log
@MFC: fixes that were discovered while building packages.
@
text
@d1 1
a1 1
# $OpenBSD: old-install.mk,v 1.6 2001/05/05 20:20:59 espie Exp $
d25 1
a25 1
	@@cd ${.CURDIR} && exec ${SUDO} ${MAKE} run-depends lib-depends 
d30 1
a30 1
	@@${SUDO} mkdir -p /usr/local/lib/X11
d32 1
a32 1
		${SUDO} ln -sf /var/X11/app-defaults /usr/local/lib/X11/app-defaults; \
d53 1
a53 1
	@@cd ${.CURDIR} && exec ${SUDO} ${MAKE} pre-install
d56 1
a56 1
	@@cd ${.CURDIR} && exec ${SUDO} ${MAKE} do-install
d59 1
a59 1
	@@cd ${WRKBUILD} && ${SUDO} ${SETENV} ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS} -f ${MAKE_FILE} ${INSTALL_TARGET}
d63 1
a63 1
	@@cd ${.CURDIR} && exec ${SUDO} ${MAKE} post-install
d69 1
a69 1
	@@${SUDO} ${GUNZIP_CMD} ${manpage}.gz
d77 2
a78 2
		${SUDO} ln -sf $${1}.gz ${manpage}.gz; \
		${SUDO} rm ${manpage}; \
d80 1
a80 1
		${SUDO} ${GZIP_CMD} ${manpage}; \
d89 1
a89 1
	@@cd ${.CURDIR} && exec ${SUDO} ${MAKE} fake-pkg
d111 1
a111 1
	@@if [ `${_COMMENT} | wc -c` -gt 60 ]; then \
d124 1
a124 1
		${_COMMENT} >${PKG_DBDIR}/${FULLPKGNAME}/+COMMENT; \
@


1.4
log
@... and don't forget to include FULLPKGNAME here either.
@
text
@d1 1
a1 1
# $OpenBSD: old-install.mk,v 1.3 2001/02/15 21:51:32 wilfried Exp $
d92 1
a92 1
	@@${_MAKE_COOKIE} ${_INSTALL_COOKIE}
@


1.3
log
@We want to test if the variable is defined,
not the value it may have.
@
text
@d1 1
a1 1
# $OpenBSD: old-install.mk,v 1.2 2001/01/18 14:58:17 espie Exp $
d14 1
a14 1
#				  registration information in ${PKG_DBDIR}/${PKGNAME}.
d21 1
a21 1
	@@echo 1>&2 "*** ${PKGNAME} does not use fake installation yet"
d27 1
a27 1
	@@${ECHO_MSG} "===>  Installing for ${PKGNAME}"
d36 2
a37 2
	@@if [ -d ${PKG_DBDIR}/${PKGNAME} -o "X$$(ls -d ${PKG_DBDIR}/${PKGNAME:C/-[0-9].*//g}-* 2> /dev/null)" != "X" ]; then \
		echo "===>  ${PKGNAME} is already installed - perhaps an older version?"; \
d40 1
a40 1
		echo "      If you really wish to overwrite the old port of ${PKGNAME}"; \
d67 1
a67 1
	@@${ECHO_MSG} "===>   Uncompressing manual pages for ${PKGNAME}"
d72 1
a72 1
	@@${ECHO_MSG} "===>   Compressing manual pages for ${PKGNAME}"
d117 1
a117 1
	@@rm -rf ${PKG_DBDIR}/${PKGNAME}
d119 6
a124 6
	@@if [ ! -d ${PKG_DBDIR}/${PKGNAME} ]; then \
		${ECHO_MSG} "===>  Registering installation for ${PKGNAME}"; \
		mkdir -p ${PKG_DBDIR}/${PKGNAME}; \
		${PKG_CMD} ${PKG_ARGS} -O ${PKGFILE} > ${PKG_DBDIR}/${PKGNAME}/+CONTENTS; \
		cp ${WRKPKG}/DESCR${SUBPACKAGE} ${PKG_DBDIR}/${PKGNAME}/+DESC; \
		cp ${COMMENT} ${PKG_DBDIR}/${PKGNAME}/+COMMENT; \
d126 1
a126 1
			cp ${WRKPKG}/INSTALL${SUBPACKAGE} ${PKG_DBDIR}/${PKGNAME}/+INSTALL; \
d129 1
a129 1
			cp ${WRKPKG}/DEINSTALL${SUBPACKAGE} ${PKG_DBDIR}/${PKGNAME}/+DEINSTALL; \
d132 1
a132 1
			cp ${WRKPKG}}/REQ${SUBPACKAGE} ${PKG_DBDIR}/${PKGNAME}/+REQ; \
d135 1
a135 1
			cp ${WRKPKG}/MESSAGE${SUBPACKAGE} ${PKG_DBDIR}/${PKGNAME}/+DISPLAY; \
d139 1
a139 1
				if ! grep ^${PKGNAME}$$ ${PKG_DBDIR}/$$dep/+REQUIRED_BY \
d141 1
a141 1
					echo ${PKGNAME} >> ${PKG_DBDIR}/$$dep/+REQUIRED_BY; \
@


1.2
log
@move variables that only belong in old-install.mk to old-install.mk

Kill old work-arounds that are no longer needed since 2.8 came out.
@
text
@d1 1
a1 1
# $OpenBSD: old-install.mk,v 1.1 2000/12/23 12:25:58 espie Exp $
d85 1
a85 1
.  if defined(${MESSAGE})
@


1.1
log
@take the old non-fake code out of line, for greater clarity (and since
it's so seldom used now).

Remove a few targets that are not really needed (mirror-distfiles, use
mirror-maker instead).

More changes to fake to come, once they've been properly tested.
@
text
@d1 1
a1 1
# $OpenBSD$
d10 8
@

