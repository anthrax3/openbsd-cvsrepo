head	1.9;
access;
symbols
	OPENBSD_5_2:1.8.0.10
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.8
	OPENBSD_5_0:1.8.0.6
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.4
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.7.0.6
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.14
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.12
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.10
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.8
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2013.01.30.07.57.50;	author brad;	state dead;
branches;
next	1.8;

1.8
date	2010.07.21.16.42.52;	author steven;	state Exp;
branches;
next	1.7;

1.7
date	2008.10.28.13.29.05;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.28.12.26.39;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.11.19.50.55;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.25.23.08.16;	author pvalchev;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.20.01.22.52;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.02.10.39.49;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.12.03.50.56;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.9
log
@missed this when removing old gcc.
@
text
@.if !${COMPILER_VERSION:L:Mgcc3}
.include "${PORTSDIR}/lang/gcc/3.3/gcc3.port.mk"
.endif
@


1.8
log
@use COMPILER_VERSION instead of USE_GCC3

from brad
@
text
@@


1.7
log
@- revert; USE_GCC* does not belong to the gcc* MODULES usage and
the man page has always been wrong about it

requested by and ok steven@@
@
text
@d1 1
a1 3
USE_GCC3 ?= No

.if ${USE_GCC3:L} == "no"
@


1.6
log
@- reverse logic so that gcc3/4 is actually used when USE_GCC* is set
- set USE_GCC* to Yes by default when using a gcc* MODULE which makes
much more sense

discussed with and ok robert@@
@
text
@d1 1
a1 1
USE_GCC3 ?= Yes
d3 1
a3 1
.if ${USE_GCC3:L} == "yes"
@


1.5
log
@stylistic changes
@
text
@d1 1
a1 1
USE_GCC3 ?= No
d3 1
a3 1
.if ${USE_GCC3:L} == "no"
@


1.4
log
@close quote; janjaap@@stack.nl
@
text
@d1 1
a1 1
USE_GCC3?=No
@


1.3
log
@switch to gcc 3.3.5
@
text
@d4 1
a4 1
.include "${PORTSDIR}/lang/gcc/3.3/gcc3.port.mk
@


1.2
log
@take USE_GCC3 into consideration.

ok espie@@
@
text
@d4 1
a4 1
.include "${PORTSDIR}/lang/egcs/stable/files/gcc3.port.mk"
@


1.1
log
@Add gcc3 module. OK espie naddy
MODGCC3_ARCHES should be set to use this, as addition to MODULES=gcc3
MODGCC3_LANGS accepts C++ (C default) and adds proper dependencies, etc
(more languages can be added later on eventually.)

Those will start getting splattered around the tree as time goes now
that the support is there (sparc64 & alpha can make use)
@
text
@d1 3
d5 1
@

