head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.4
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.2
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.18.0.10
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.12
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.8
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.6
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.4
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.17.0.6
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.4
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.2
	OPENBSD_5_0:1.13.0.4
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.9.0.6
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.4
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.2
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.4.0.4
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.2
	OPENBSD_4_1_BASE:1.4;
locks; strict;
comment	@# @;


1.20
date	2016.03.20.19.56.44;	author naddy;	state Exp;
branches;
next	1.19;
commitid	WXJcpbKc0PauxEav;

1.19
date	2016.03.11.12.56.11;	author nigel;	state Exp;
branches;
next	1.18;
commitid	smBaaoOQYXw5TbHF;

1.18
date	2013.03.11.11.50.17;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2011.11.27.14.59.21;	author jasper;	state Exp;
branches;
next	1.16;

1.16
date	2011.11.27.13.29.35;	author jasper;	state Exp;
branches;
next	1.15;

1.15
date	2011.10.22.07.42.24;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2011.10.03.14.21.02;	author jasper;	state Exp;
branches;
next	1.13;

1.13
date	2010.12.03.11.43.05;	author ajacoutot;	state Exp;
branches;
next	1.12;

1.12
date	2010.11.20.19.57.30;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2010.10.23.11.58.33;	author jasper;	state Exp;
branches;
next	1.10;

1.10
date	2010.10.01.21.55.20;	author jasper;	state Exp;
branches;
next	1.9;

1.9
date	2009.06.18.13.41.28;	author simon;	state Exp;
branches;
next	1.8;

1.8
date	2008.08.20.10.33.50;	author simon;	state Exp;
branches;
next	1.7;

1.7
date	2008.05.11.19.50.55;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2008.01.28.00.03.01;	author simon;	state Exp;
branches;
next	1.5;

1.5
date	2008.01.27.23.28.25;	author simon;	state Exp;
branches;
next	1.4;

1.4
date	2006.11.25.13.14.40;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.12.10.48.17;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.12.10.45.40;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.12.10.29.15;	author espie;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Remove SHARED_ONLY from all CPAN Perl ports and the cpan and perl MODULES.
Add WANTLIB+=perl and PKG_ARCH=* as appropriate.
@
text
@# $OpenBSD: cpan.port.mk,v 1.19 2016/03/11 12:56:11 nigel Exp $

PKGNAME ?=	p5-${DISTNAME}
.if !defined(CPAN_AUTHOR)
MASTER_SITES ?=	${MASTER_SITE_PERL_CPAN:=${DISTNAME:C/-.*$//}/}
.else
MASTER_SITES ?=	${MASTER_SITE_PERL_CPAN:=../by-authors/id/${CPAN_AUTHOR:C/^(.).*/\1/}/${CPAN_AUTHOR:C/^(..).*/\1/}/${CPAN_AUTHOR}/}
.endif

HOMEPAGE ?=	http://search.cpan.org/dist/${DISTNAME:C/-[^-]*$//}/

CATEGORIES +=	perl5
.if ! ${CONFIGURE_STYLE:L:Mperl}
CONFIGURE_STYLE +=	perl
.endif
.if ! ${MODULES:L:Mperl}
MODULES +=	perl
.endif

TEST_DEPENDS +=	${RUN_DEPENDS}

.if defined(MAKE_ENV) && !empty(MAKE_ENV:MTEST_POD=*)
TEST_DEPENDS +=	devel/p5-Test-Pod \
		 	devel/p5-Test-Pod-Coverage
.endif

MODCPAN_POST_INSTALL = ${INSTALL_DATA_DIR} ${MODCPAN_EXAMPLES_DIR}; \
	cd ${WRKSRC}/${MODCPAN_EXAMPLES_DIST}/ && pax -rw . ${MODCPAN_EXAMPLES_DIR};\
	chown -R ${SHAREOWN}:${SHAREGRP} ${MODCPAN_EXAMPLES_DIR}

.if defined(MODCPAN_EXAMPLES) && ${MODCPAN_EXAMPLES:L} == "yes"
MODCPAN_EXAMPLES_DIR ?= ${PREFIX}/share/examples/p5-${DISTNAME:C/-([0-9]+\.[0-9]+).*$//g}
MODCPAN_EXAMPLES_DIST ?= examples
.  if !target(post-install)
post-install:
	${MODCPAN_POST_INSTALL}
.  endif
.endif

CPAN_REPORT ?=	No

.if ${CPAN_REPORT:L} == "yes"
TEST_DEPENDS +=	devel/p5-Test-Reporter
.  if ${CONFIGURE_STYLE:L:Mmodbuild}
TEST_FLAGS +=	verbose=1
.  else
TEST_FLAGS +=	TEST_VERBOSE=1
.  endif
TEST_STATUS_IGNORE =	-
.  if !defined(CPAN_REPORT_DB)
ERRORS +=	"Fatal: CPAN_REPORT_DB must point to a directory"
.  endif
.  if !defined(CPAN_REPORT_FROM) || empty(CPAN_REPORT_FROM)
ERRORS +=	"Fatal: CPAN_REPORT_FROM needs an email address"
.  endif

CPANTEST =	perl ${PORTSDIR}/infrastructure/bin/cpanreport
CPANTEST_FLAGS =-f ${TEST_LOGFILE} -s ${CPAN_REPORT_FROM:Q} ${DISTNAME} \
			> ${CPAN_REPORT_DB}/${PKGNAME}
CPANTEST_PASS =	-g pass ${CPANTEST_FLAGS}
CPANTEST_FAIL =	-g fail ${CPANTEST_FLAGS}

post-test:
	@@mkdir -p ${CPAN_REPORT_DB}
	@@if grep -q FAILED ${TEST_LOGFILE}; then \
		${CPANTEST} ${CPANTEST_FAIL}; \
		exit 1; \
	else ${CPANTEST} ${CPANTEST_PASS}; fi

.endif
@


1.19
log
@Avoid multiple perl in CONFIGURE_STYLE/MODULES stops configure
script being run twice.

Ok sthen
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.18 2013/03/11 11:50:17 espie Exp $
a20 4

.if !defined(SHARED_ONLY) || ${SHARED_ONLY:L} != "yes"
PKG_ARCH ?=	*
.endif
@


1.18
log
@REGRESS -> TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.17 2011/11/27 14:59:21 jasper Exp $
d13 1
d15 2
d18 1
@


1.17
log
@whitespace nit
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.16 2011/11/27 13:29:35 jasper Exp $
d16 1
a16 1
REGRESS_DEPENDS +=	${RUN_DEPENDS}
d23 1
a23 1
REGRESS_DEPENDS +=	devel/p5-Test-Pod \
d43 1
a43 1
REGRESS_DEPENDS +=	devel/p5-Test-Reporter
d45 1
a45 1
REGRESS_FLAGS +=	verbose=1
d47 1
a47 1
REGRESS_FLAGS +=	TEST_VERBOSE=1
d49 1
a49 1
REGRESS_STATUS_IGNORE =	-
d58 1
a58 1
CPANTEST_FLAGS =-f ${REGRESS_LOGFILE} -s ${CPAN_REPORT_FROM:Q} ${DISTNAME} \
d63 1
a63 1
post-regress:
d65 1
a65 1
	@@if grep -q FAILED ${REGRESS_LOGFILE}; then \
@


1.16
log
@move to bin/ and ajust CPANTEST path

ok espie@@
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.15 2011/10/22 07:42:24 espie Exp $
d19 1
a19 1
PKG_ARCH ?=	* 
d57 1
a57 1
CPANTEST =	perl ${PORTSDIR}/infrastructure/bincpanreport
@


1.15
log
@missed one (Nathanael Rensen <nathanael@@polymorpheus.com>)
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.14 2011/10/03 14:21:02 jasper Exp $
d57 1
a57 1
CPANTEST =	perl ${PORTSDIR}/infrastructure/build/cpanreport
@


1.14
log
@Remove some duplicate code by putting in a variable, as done elsewhere.
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.13 2010/12/03 11:43:05 ajacoutot Exp $
d29 1
a29 1
	${CHOWN} -R ${SHAREOWN}:${SHAREGRP} ${MODCPAN_EXAMPLES_DIR}
@


1.13
log
@Add a default HOMEPAGE for cpan ports when none is specified.
All work including upcoming huge bump done by Mikolaj Kucharski, thanks!

ok jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.12 2010/11/20 19:57:30 espie Exp $
d36 1
a36 3
	${INSTALL_DATA_DIR} ${MODCPAN_EXAMPLES_DIR}
	cd ${WRKSRC}/${MODCPAN_EXAMPLES_DIST}/ && pax -rw . ${MODCPAN_EXAMPLES_DIR}
	${CHOWN} -R ${SHAREOWN}:${SHAREGRP} ${MODCPAN_EXAMPLES_DIR}
@


1.12
log
@new depends
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.11 2010/10/23 11:58:33 jasper Exp $
d9 2
@


1.11
log
@- allow recursive copy of the examples, this will fix some quirky ports

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.10 2010/10/01 21:55:20 jasper Exp $
d21 2
a22 2
REGRESS_DEPENDS +=	::devel/p5-Test-Pod \
		 	::devel/p5-Test-Pod-Coverage
d43 1
a43 1
REGRESS_DEPENDS +=	::devel/p5-Test-Reporter
@


1.10
log
@- add MODCPAN_EXAMPLES, which can be set if there are example scripts
in the distfiles. defaults to installing files from examples/. but
that can be set via MODCPAN_EXAPLES_DIST. please see port-modules(5) for
more information.

feedback and ok espie@@
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.9 2009/06/18 13:41:28 simon Exp $
d26 2
a27 1
	${INSTALL_DATA} ${WRKSRC}/${MODCPAN_EXAMPLES_DIST}/* ${MODCPAN_EXAMPLES_DIR}
d35 2
a36 1
	${INSTALL_DATA} ${WRKSRC}/${MODCPAN_EXAMPLES_DIST}/* ${MODCPAN_EXAMPLES_DIR}
@


1.9
log
@let Module::Build tests behave like ExtUtils::MakeMaker ones

ok landry@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.8 2008/08/20 10:33:50 simon Exp $
d23 13
@


1.8
log
@Redirect regression output so we get the actual exit code instead of the
last one in the pipe to make sure failed regression tests don't bake a
cookie when REGRESS_LOG is set (default).
Also redirect stderr to regress log and introduce REGRESS_STATUS_IGNORE
variable so post-regress targets like found in cpan.port.mk can do the
actual failure detection.

Problem noticed by bluhm@@, latching of exit code suggested by steven@@

Testing, feedback and ok on earlier version by bluhm@@, 'go for it' espie@@
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.7 2008/05/11 19:50:55 espie Exp $
d29 3
d33 1
@


1.7
log
@stylistic changes
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.6 2008/01/28 00:03:01 simon Exp $
d30 1
@


1.6
log
@run cpanreport with perl
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.5 2008/01/27 23:28:25 simon Exp $
d3 1
a3 1
PKGNAME?=	p5-${DISTNAME}
d5 1
a5 1
MASTER_SITES?=	${MASTER_SITE_PERL_CPAN:=${DISTNAME:C/-.*$//}/}
d7 1
a7 1
MASTER_SITES?=	${MASTER_SITE_PERL_CPAN:=../by-authors/id/${CPAN_AUTHOR:C/^(.).*/\1/}/${CPAN_AUTHOR:C/^(..).*/\1/}/${CPAN_AUTHOR}/}
d10 3
a12 3
CATEGORIES+=	perl5
CONFIGURE_STYLE+=perl
MODULES+=	perl
d14 1
a14 1
REGRESS_DEPENDS+=${RUN_DEPENDS}
d17 1
a17 1
PKG_ARCH?=	* 
d21 2
a22 2
REGRESS_DEPENDS+=::devel/p5-Test-Pod \
		 ::devel/p5-Test-Pod-Coverage
d25 1
a25 1
CPAN_REPORT?=	No
d28 2
a29 2
REGRESS_DEPENDS+=::devel/p5-Test-Reporter
REGRESS_FLAGS+=	TEST_VERBOSE=1
d31 1
a31 1
ERRORS+=	"Fatal: CPAN_REPORT_DB must point to a directory"
d34 1
a34 1
ERRORS+=	"Fatal: CPAN_REPORT_FROM needs an email address"
d37 2
a38 2
CPANTEST=	perl ${PORTSDIR}/infrastructure/build/cpanreport
CPANTEST_FLAGS=	-f ${REGRESS_LOGFILE} -s ${CPAN_REPORT_FROM:Q} ${DISTNAME} \
d40 2
a41 2
CPANTEST_PASS=	-g pass ${CPANTEST_FLAGS}
CPANTEST_FAIL=	-g fail ${CPANTEST_FLAGS}
@


1.5
log
@let `make regress' write test reports

to use it set CPAN_REPORT=Yes, CPAN_REPORT_FROM to your email address
and CPAN_REPORT_DB to a directory (like PLIST_DB)

initially by steven@@
feedback from steven@@, msf@@, rui@@, espie@@, merdely@@, okan@@

ok msf@@
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.4 2006/11/25 13:14:40 espie Exp $
d37 1
a37 1
CPANTEST=	${PORTSDIR}/infrastructure/build/cpanreport
@


1.4
log
@add new define, CPAN_AUTHOR, to allow grabbing modules from the author's
nickname.

occasionally used, a few modules don't have an explicit subdirectory,
and need to be grabbed by author nick.
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.3 2006/11/12 10:48:17 espie Exp $
d23 27
@


1.3
log
@more tweaks
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.2 2006/11/12 10:45:40 espie Exp $
d4 1
d6 4
@


1.2
log
@tweaks so it works
@
text
@d1 1
a1 1
# $OpenBSD: cpan.port.mk,v 1.1 2006/11/12 10:29:15 espie Exp $
d11 1
a11 1
.if !defined(SHARED_ONLY)
d15 1
a15 1
.if ${MAKE_ENV:MTEST_POD=*}
@


1.1
log
@a small cpan module that takes care of most common things there
@
text
@d1 1
a1 1
# $OpenBSD$
d4 1
a4 1
MASTER_SITES?=	${MASTER_SITE_PERL_CPAN:=${DISTNAME:C/-*//}}
d9 2
d13 5
@

