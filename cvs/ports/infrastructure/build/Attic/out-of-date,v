head	1.21;
access;
symbols
	OPENBSD_5_0:1.20.0.6
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.4
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.2
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.18.0.2
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.16.0.10
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.8
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.6
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.4
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.2
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.15.0.6
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.4
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.2
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.9.0.6
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.8
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_TRACKING_SWITCH:1.5
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	infra-0:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.21
date	2011.11.16.22.57.03;	author espie;	state dead;
branches;
next	1.20;

1.20
date	2010.06.18.09.08.57;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	2010.06.17.10.30.39;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2010.02.16.20.50.32;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2010.01.02.12.54.22;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2007.06.01.15.01.50;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2005.11.06.09.34.20;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2005.11.01.10.11.40;	author bernd;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.10.22.25.06;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.10.22.08.27;	author bernd;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.01.16.36.03;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.01.13.17.54;	author bernd;	state Exp;
branches;
next	1.9;

1.9
date	2004.05.31.14.39.40;	author sturm;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.05.17.35.45;	author sturm;	state Exp;
branches;
next	1.7;

1.7
date	2003.09.28.10.59.42;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2003.08.02.11.17.37;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.19.02.49.56;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.07.03.41.10;	author form;	state Exp;
branches;
next	1.3;

1.3
date	99.09.26.14.00.53;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	99.09.26.09.36.33;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	99.05.18.16.39.05;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.18.16.39.05;	author espie;	state Exp;
branches;
next	;


desc
@@


1.21
log
@move
@
text
@#!/usr/bin/perl

# $OpenBSD: out-of-date,v 1.20 2010/06/18 09:08:57 espie Exp $
#
# Copyright (c) 2005 Bernd Ahlers <bernd@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;
use OpenBSD::Getopt;
use OpenBSD::Error;
use OpenBSD::PackageInfo;
use OpenBSD::PackingList;
use OpenBSD::PackageName;
use File::Temp;
use OpenBSD::AddCreateDelete;

our $opt_q;
my $state = OpenBSD::AddCreateDelete::State->new("out-of-date");
OpenBSD::AddCreateDelete->handle_options('q', $state, "[-mvxq]");

sub collect_installed
{
	my $pkg = {};

	$state->progress->for_list("Collecting installed packages",
	    [installed_packages(1)], sub {
		my $name = shift;
		my ($stem, $version) = OpenBSD::PackageName::splitname($name);
		my $plist = OpenBSD::PackingList->from_installation($name,
		    \&OpenBSD::PackingList::UpdateInfoOnly);
		if (!defined $plist or !defined $plist->{extrainfo}->{subdir}) {
			$state->errsay("Package #1has no valid packing-list", 
			    $name);
			return;
		}
			
		my $subdir = $plist->{extrainfo}->{subdir};
		$subdir =~ s/mystuff\///;
		$subdir =~ s/\/usr\/ports\///;

		$pkg->{$subdir}->{name}	     = $name;
		$pkg->{$subdir}->{stem}      = $stem;
		$pkg->{$subdir}->{version}   = $version;
		my $sig = $plist->signature;
		if (ref($sig)) { $sig = $sig->string; }
		$pkg->{$subdir}->{signature} = $sig;
		if (defined $plist->{'always-update'}) {
			$pkg->{$subdir}->{signature} = 'always-update';
		}
	    });
	return $pkg;
}

sub fh_open
{
	open(my $fh, shift);
	my $old = select $fh;
	$| = 1;
	select STDERR;
	return $fh, $old;
}

sub fh_close
{
	my ($fh, $old) = @@_;
	close($fh);
	select $old;
}

sub collect_port_versions
{
	my ($pkg, $portsdir, $notfound) = @@_;

	my @@subdirs = ();
	for my $subdir (keys %$pkg) {
		my ($dir) = split(/,/, $subdir);
		if (-d "$portsdir/$dir") {
			push(@@subdirs, $subdir);
		} else {
			push(@@$notfound, $subdir);
		}
	}

	my $cmd = "cd $portsdir && SUBDIR=\"".join(' ', @@subdirs)
	    ."\" REPORT_PROBLEM=true make ".'show=FULLPKGNAME\${SUBPACKAGE} '
	    ."2>&1 |";

	my $port  = {};
	my $error = {};
	my $count = 0;
	my $total = scalar @@subdirs;

	$state->progress->set_header("Collecting port versions");
	my ($fh, $old) = fh_open($cmd);
	my $subdir     = "";
	while (<$fh>) {
		chomp;
		if (/^\=\=\=\>\s+(\S+)/) {
			$subdir = $1;
			$count++;
			$state->progress->show($count, $total);
			next;
		}
		next unless $_ or $subdir;
		next if defined $error->{$subdir};
		if (/^(Fatal\:|\s+\()/) {
			push(@@{$error->{$subdir}}, $_);
			next;
		} elsif (/^(Stop|\*\*\*)/) {
			next;
		}
		$port->{$subdir}->{name} = $_;
		my ($stem, $version) = OpenBSD::PackageName::splitname($_);
		$port->{$subdir}->{stem}    = $stem;
		$port->{$subdir}->{version} = $version;
	}
	fh_close($fh, $old);
	$state->progress->next;

	return $port, $error;
}

sub collect_port_signatures
{
	my $pkg      = shift;
	my $port     = shift;
	my $portsdir = shift;
	my $output   = shift;

	my @@subdirs = ();
	for my $dir (keys %$port) {
		if ($pkg->{$dir}->{name} eq $port->{$dir}->{name}) {
			push(@@subdirs, $dir);
		}
	}

	my $TMPDIR = $ENV{'TMPDIR'} || "/tmp";
	my $tempdir = File::Temp::tempdir("libcache.XXXXXXX", DIR => $TMPDIR, CLEANUP => 1);
	$ENV{'_DEPENDS_CACHE'} = "$tempdir/depends_cache";
	$ENV{'_DEPENDS_FILE'} = "$tempdir/depends_file";
	$ENV{'_PORT_LIBS_CACHE'} = $tempdir;
	open(my $touch, '>', "$tempdir/depends_file");
	close($touch);
	my $cmd = "cd $portsdir && SUBDIR=\"".join(' ', @@subdirs)
	    ."\" REPORT_PROBLEM=true make print-package-signature |";

	my $count = 0;
	my $total = scalar @@subdirs;
	$state->progress->set_header("Collecting port signatures");
	my ($fh, $old) = fh_open($cmd);
	my $subdir     = "";
	while (<$fh>) {
		chomp;
		if (/^\=\=\=\>\s+(\S+)/) {
			$subdir = $1;
			$count++;
			$state->progress->show($count, $total);
			next;
		}
		next unless $_ or $subdir;
		$port->{$subdir}->{signature} = $_;
	}
	fh_close($fh, $old);
	$state->progress->next;
}

sub split_sig
{
	my $sig = shift;
	my $ret = {};

	for my $item (split(/,/, $sig)) {
		$ret->{$item} = 1;
	}

	return $ret;
}

sub diff_sig
{
	my ($dir, $pkg, $port) = @@_;

	my $old	= split_sig($pkg->{$dir}->{signature});
	my $new	= split_sig($port->{$dir}->{signature});

	for my $key (keys %$old) {
		if (defined $new->{$key}) {
			delete $old->{$key};
			delete $new->{$key};
		}
	}

	return join(',', sort keys %$old), join(',', sort keys %$new);
}

sub find_outdated
{
	my ($pkg, $port, $output) = @@_;

	for my $dir (keys %$pkg) {
		next unless $port->{$dir};
		if ($pkg->{$dir}->{name} ne $port->{$dir}->{name}) {
			push(@@$output, sprintf("%-30s # %s -> %s\n", $dir,
			    $pkg->{$dir}->{version}, $port->{$dir}->{version}));
			next;
		}
		next if $opt_q;
		if ($pkg->{$dir}->{signature} ne $port->{$dir}->{signature}) {
			push(@@$output, sprintf("%-30s # %s -> %s\n", $dir,
			    diff_sig($dir, $pkg, $port)));
		}
	}
}

my $portsdir = $ENV{PORTSDIR} || "/usr/ports";


my $pkg = collect_installed();

my @@output   = ();
my @@notfound = ();
my ($port, $errors) = collect_port_versions($pkg, $portsdir, \@@notfound);

collect_port_signatures($pkg, $port, $portsdir, \@@output) unless $opt_q;
find_outdated($pkg, $port, \@@output);

$state->errsay("Outdated ports:\n");
$state->print("#1", $_) for sort @@output;

if ($opt_q) {
	$state->errsay("\nWARNING: You've used the -q option. With this,\n"
	    . "out-of-date only looks for changed package names\nbut not "
	    . "for changed package signatures. If you\nwant to see ALL "
	    . "of your outdated packages,\ndon't use -q.");
}

if (@@notfound > 0) {
	$state->errsay("\nPorts that can't be found in the official "
	    . "ports tree:");
	for (sort @@notfound) {
		$state->errsay("#1", $_);
	}
}
if ((keys %$errors) > 0) {
	$state->errsay("\nErrors:");
	for (sort keys %$errors) {
		$state->errsay("  #1", $_);
		$state->errsay("    #1", $_) for @@{$errors->{$_}};
	}
}
@


1.20
log
@use for_list
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.19 2010/06/17 10:30:39 espie Exp $
@


1.19
log
@switch to new infrastructure
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.18 2010/02/16 20:50:32 espie Exp $
d31 1
a31 1
OpenBSD::AddCreateDelete->handle_options('q', $state, "[-q]");
d37 3
a39 5
	$state->progress->set_header("Collecting installed packages");
	my @@l = installed_packages(1);
	my $i = 0;
	for my $name (@@l) {
		$state->progress->show(++$i, scalar(@@l));
d46 1
a46 1
			next;
d62 1
a62 1
	}
@


1.18
log
@band-aid for out-of-date, as noticed by various people
(there are probably nicer ways to do this now)
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.17 2010/01/02 12:54:22 espie Exp $
a25 1
use OpenBSD::ProgressMeter;
d27 1
d30 2
a31 6
set_usage('out-of-date [-q]');
try {
	getopts('q');
} catchall {
	Usage($_);
};
d36 6
a41 1
	for my $name (installed_packages(1)) {
d46 2
a47 1
			print STDERR "Package $name has no valid packing-list\n";
d107 1
a107 2
	my $progress = OpenBSD::ProgressMeter->new;
	$progress->set_header("Collecting port versions");
d115 1
a115 1
			$progress->show($count, $total);
d132 1
a132 1
	$progress->next;
d163 1
a163 2
	my $progress = OpenBSD::ProgressMeter->new;
	$progress->set_header("Collecting port signatures");
d171 1
a171 1
			$progress->show($count, $total);
d178 1
a178 1
	$progress->next;
d231 1
a231 1
print STDERR "Collecting installed packages\n";
d241 2
a242 2
print STDERR "Outdated ports:\n\n";
print $_ for sort @@output;
d245 1
a245 1
	print STDERR "\nWARNING: You've used the -q option. With this,\n"
d248 1
a248 1
	    . "of your outdated packages,\ndon't use -q.\n";
d252 2
a253 2
	print STDERR "\nPorts that can't be found in the official "
	    . "ports tree:\n";
d255 1
a255 1
		print STDERR "  $_\n";
d259 1
a259 1
	print STDERR "\nErrors:\n";
d261 2
a262 2
		print STDERR "  $_\n";
		print STDERR "    $_\n" for @@{$errors->{$_}};
@


1.17
log
@adapt to new api
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.16 2007/06/01 15:01:50 espie Exp $
d59 3
@


1.16
log
@use new ProgressMeter interface
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.15 2005/11/06 09:34:20 espie Exp $
d56 3
a58 1
		$pkg->{$subdir}->{signature} = $plist->signature();
@


1.15
log
@more error checking.
reported by Simon Kuhle
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.14 2005/11/01 10:11:40 bernd Exp $
d100 2
a101 2
	OpenBSD::ProgressMeter::enable();
	OpenBSD::ProgressMeter::set_header("Collecting port versions");
d109 1
a109 1
			OpenBSD::ProgressMeter::show($count, $total);
d126 1
a126 1
	OpenBSD::ProgressMeter::next();
d157 2
a158 2
	OpenBSD::ProgressMeter::enable();
	OpenBSD::ProgressMeter::set_header("Collecting port signatures");
d166 1
a166 1
			OpenBSD::ProgressMeter::show($count, $total);
d173 1
a173 1
	OpenBSD::ProgressMeter::next();
@


1.14
log
@Add a quick (-q) option for the impatient people. But look out! If you
use the -q option, out-of-date looks for changed package names but not
for changed package signatures!

If you want to see ALL of you outdated packages, don't use -q.

"go ahead, commit" espie@@
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.13 2005/10/10 22:25:06 espie Exp $
d44 5
@


1.13
log
@Use the caching mechanism set up in bsd.port.mk to speed it up x3.
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.12 2005/10/10 22:08:27 bernd Exp $
d21 2
d29 8
d211 1
d228 1
a228 1
collect_port_signatures($pkg, $port, $portsdir, \@@output);
d233 7
@


1.12
log
@- only compute signatures if the package name doesn't change
- some error checking
- print differences between package signatures

ok espie@@
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.11 2005/10/01 16:36:03 espie Exp $
d25 1
d130 7
@


1.11
log
@some clean-up + progress meter.
okay bernd@@
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.10 2005/10/01 13:17:54 bernd Exp $
d10 1
a10 1

d33 8
a40 7

		$pkg->{$stem}->{version}   = $version;
		$pkg->{$stem}->{subdir}    = $plist->{extrainfo}->{subdir};
		$pkg->{$stem}->{signature} = $plist->signature();

		$pkg->{$stem}->{subdir} =~ s/mystuff\///;
		$pkg->{$stem}->{subdir} =~ s/\/usr\/ports\///;
d45 10
a54 1
sub check_existing_ports
d56 4
a59 3
	my ($pkg, $portsdir, $subdirs, $notfound) = @@_;
	
	for my $stem (keys %$pkg) {
d61 3
a63 1
		my ($dir) = split(/,/, $pkg->{$stem}->{subdir});
d65 3
d69 1
a69 1
			push @@$subdirs, $pkg->{$stem}->{subdir};
d71 24
a94 1
			push(@@$notfound, $pkg->{$stem}->{subdir});
d96 12
d109 4
d115 1
a115 1
sub collect_port_versions
d117 2
d120 8
d129 2
a130 1
	my $cmd = "cd $portsdir && SUBDIR=\"".join(' ', @@_)."\" ECHO_MSG=: REPORT_PROBLEM=true make print-package-signature |";
d133 1
a133 6
	my $port     = {};
	my $total = scalar @@_;
	open(my $fh, $cmd);
	my $old = select $fh; 
	$| = 1; 
	select STDERR;
d135 3
a137 1
	OpenBSD::ProgressMeter::set_header("Collecting port versions");
d140 31
a170 5
		$count++;
		OpenBSD::ProgressMeter::show($count, $total);
		next unless $_;
		my ($name) = split(/,/, $_);
		my ($stem, $version) = OpenBSD::PackageName::splitname($name);
d172 5
a176 2
		$port->{$stem}->{version}   = $version;
		$port->{$stem}->{signature} = $_;
d178 2
a179 4
	close($fh);
	OpenBSD::ProgressMeter::next();
	select $old;
	return $port;
d184 1
a184 2
	my ($pkg, $port) = @@_;
	my @@output = ();
d186 11
a196 7
	for my $stem (keys %{$pkg}) {
		next unless $port->{$stem};

		next if $pkg->{$stem}->{signature} eq $port->{$stem}->{signature};
		push(@@output, sprintf("%-40s # %s -> %s\n",
		    $pkg->{$stem}->{subdir}, $pkg->{$stem}->{version},
		    $port->{$stem}->{version}));
a197 1
	return @@output;
d205 1
a205 1
my @@subdirs  = ();
d207 1
a207 1
check_existing_ports($pkg, $portsdir, \@@subdirs, \@@notfound);
d209 2
a210 2
my $port = collect_port_versions($portsdir, @@subdirs);
my @@output = find_outdated($pkg, $port);
a213 1
print STDERR "\n";
d216 11
a226 3
	print STDERR "Ports that can't be found in the official ports tree:\n";
	for my $pkg (sort @@notfound) {
		print STDERR "  ", $pkg, "\n";
@


1.10
log
@Rewrite in perl. It compares package signatures instead of package names.
This needs a lot of testing, so please test!

Suggestions and ideas from sturm@@ and espie@@.

ok espie@@
@
text
@d3 1
a3 1
# $OpenBSD$
d24 1
d26 17
a42 6
my $portsdir = $ENV{PORTSDIR} || "/usr/ports";
my $pkg      = {};
my $port     = {};
my $subdirs  = "";
my @@output   = ();
my @@notfound = ();
d44 13
a56 19
print STDERR "Collecting installed packages\n";
for my $name (installed_packages(1)) {
	my ($stem, $version) = OpenBSD::PackageName::splitname($name);
	my $plist = OpenBSD::PackingList->from_installation($name,
	    \&OpenBSD::PackingList::UpdateInfoOnly);

	$pkg->{$stem}->{version}   = $version;
	$pkg->{$stem}->{subdir}    = $plist->{extrainfo}->{subdir};
	$pkg->{$stem}->{signature} = $plist->signature;

	$pkg->{$stem}->{subdir} =~ s/mystuff\///;
	$pkg->{$stem}->{subdir} =~ s/\/usr\/ports\///;

	my ($dir) = split(/,/, $pkg->{$stem}->{subdir});

	if (-d "$portsdir/$dir") {
		$subdirs .= $pkg->{$stem}->{subdir} . " ";
	} else {
		push(@@notfound, $pkg->{$stem}->{subdir});
d60 22
a81 10
print STDERR "Collecting port versions\n";
my @@cmd = ("cd", "$portsdir", "&&", "SUBDIR=\"$subdirs\"", "ECHO_MSG=:",
    "REPORT_PROBLEM=true", "make", "print-package-signature");

open(my $fh, join(' ', @@cmd) . " |");
while (<$fh>) {
	chomp;
	next unless $_;
	my ($name) = split(/,/, $_);
	my ($stem, $version) = OpenBSD::PackageName::splitname($name);
d83 7
a89 2
	$port->{$stem}->{version}   = $version;
	$port->{$stem}->{signature} = $_;
a90 1
close($fh);
d92 7
a98 2
for my $stem (keys %{$pkg}) {
	next unless $port->{$stem};
d100 1
a100 3
	if ($pkg->{$stem}->{signature} eq $port->{$stem}->{signature}) {
		next;
	} else {
d105 1
d107 12
@


1.9
log
@be more robust as people might install packages they no longer have
port directories for, e.g. mystuff/foo
@
text
@d1 5
a5 12
#!/bin/sh
# $OpenBSD: out-of-date,v 1.8 2003/11/05 17:35:45 sturm Exp $
# Copyright (c) 1999
# Marc Espie.  All rights reserved.
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Neither the name of OpenBSD nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
d7 85
a91 35
# THIS SOFTWARE IS PROVIDED BY ITS AUTHOR AND THE OpenBSD project ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

# Check for simple discrepancies between installed packages and the ports tree

: ${PORTSDIR:=/usr/ports}

echo "Make sure your ports tree is up-to-date"

TMPDIR=`mktemp -d /tmp/outdated.XXXXXXXXX`
trap "rm -r $TMPDIR" 0 1 2 3 15
echo "Generating specs"
SPECS=`pkg_info -f -a | sed -n -e 's/.*[Cc]omment:* subdir=//p' | \
	sed -e 's/ cdrom=.*//'`
for s in $SPECS; do
	dir=`echo $s | sed -e 's/,.*$//'`
	if [ -d $PORTSDIR/$dir ]; then
		echo $s >> $TMPDIR/specs;
	fi
done
echo "Checking new package names"
cd $PORTSDIR && make SUBDIRLIST=$TMPDIR/specs show=FULLPKGNAME\${SUBPACKAGE} ECHO_MSG=: REPORT_PROBLEM=true|sort >$TMPDIR/new
echo "Recording old package names"
pkg_info|cut -d\  -f1|sort >$TMPDIR/old
echo "Showing discrepancies"
diff -u $TMPDIR/old $TMPDIR/new
@


1.8
log
@adapt to new pkg tools without breaking compatibility to old ones

noted by Andreas Kahari, ok espie@@
@
text
@d2 1
a2 1
# $OpenBSD: out-of-date,v 1.7 2003/09/28 10:59:42 espie Exp $
d34 10
a43 3
echo "Generate specs"
pkg_info -f -a|sed -n -e 's/.*[Cc]omment:* subdir=//p'|sed -e 's/ cdrom=.*//' >$TMPDIR/specs
echo "Check new package names"
d45 1
a45 1
echo "Record old package names"
d47 1
a47 1
echo "Show discrepancies"
@


1.7
log
@Allows out-of-date to proceed even if some port is broken.
@
text
@d2 1
a2 1
# $OpenBSD: out-of-date,v 1.6 2003/08/02 11:17:37 espie Exp $
d35 1
a35 1
pkg_info -f -a|sed -n -e 's/.*Comment: subdir=//p'|sed -e 's/ cdrom=.*//' >$TMPDIR/specs
@


1.6
log
@nicer out-of-date script, use the embedded subdir information to find
the correct package spec, and ask the corresponding package to show its
information.
@
text
@d2 1
a2 1
# $OpenBSD: out-of-date,v 1.5 2001/07/19 02:49:56 espie Exp $
d37 1
a37 1
cd $PORTSDIR && make SUBDIRLIST=$TMPDIR/specs show=FULLPKGNAME\${SUBPACKAGE} ECHO_MSG=: |sort >$TMPDIR/new
@


1.5
log
@Take PORTSDIR var into account. Noticed by Brian R. Landy.
@
text
@d2 1
a2 1
# $OpenBSD: out-of-date,v 1.4 2001/03/07 03:41:10 form Exp $
d26 1
a26 2
# Check for simple discrepancies between installed packages and the
# /usr/ports INDEX
d30 1
a30 34
FILE=${PORTSDIR}/INDEX

echo ">>> Is ${PORTSDIR}/INDEX up-to-date ?"
echo ">>> Otherwise, this script will find out outdated flavors of packages"
echo ">>> compared to your installed packages..."

pkg_info |while read fullname rest
do
	grep "^$fullname" $FILE >/dev/null || {
		basename=`echo $fullname |sed -e 's/^\(.*\)-.*/\1/'`
		newname=`grep "^$basename-" $FILE |cut -f1 -d\|`
		if [ X"$newname" == X ]
		then
			basename=`echo $basename |sed -e 's/^\(.*\)-.*/\1/'`
			newname=`grep "^$basename-" $FILE |cut -f1 -d\|`
		fi
		# some packages exist in several distinct flavors
		if [ `echo $newname| wc -w` -ge 2 ]
		then
			echo -n "Update $fullname to one of "
			echo $newname|while read item
				do
					echo -n "$item "
				done
			echo ""
		else
			if [ -n "$newname" ]; then
				echo "Update $fullname to $newname"
			else
				echo "$fullname not in INDEX"
			fi
		fi
		}
done
d32 10
@


1.4
log
@Better handling of installed packages not in ports INDEX.
ok espie@@
@
text
@d2 1
a2 1
# $OpenBSD: out-of-date,v 1.3 1999/09/26 14:00:53 espie Exp $
d29 7
a35 1
FILE=/usr/ports/INDEX
a36 5
cat <<EOF
>>> Is /usr/ports/INDEX up-to-date ?
>>> Otherwise, this script will find out outdated flavors of packages
>>> compared to your installed packages...
EOF
@


1.3
log
@Work for flavored packages as well
@
text
@d2 1
a2 1
# $OpenBSD: out-of-date,v 1.2 1999/09/26 09:36:33 espie Exp $
d56 5
a60 1
			echo "Update $fullname to $newname"
@


1.2
log
@Fix.
@
text
@d2 1
a2 1
# $OpenBSD: out-of-date,v 1.1.1.1 1999/05/18 16:39:05 espie Exp $
d41 5
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $OpenBSD$
d40 1
a40 1
		newname=`grep "^$basename-" $file |cut -f1 -d\|`
d42 1
a42 1
		if [ `echo $new| wc -l` -ge 2 ]
d44 1
a44 1
			echo -n "Update $fullname to one of"
@


1.1.1.1
log
@infrastructure framework: helper scripts and other stuff needed for
ports, long-term.
@
text
@@
