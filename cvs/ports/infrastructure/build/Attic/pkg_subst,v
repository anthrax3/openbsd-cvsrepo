head	1.11;
access;
symbols
	OPENBSD_4_8:1.10.0.2
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.3.0.8
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3;
locks; strict;
comment	@# @;


1.11
date	2010.08.20.15.07.22;	author espie;	state dead;
branches;
next	1.10;

1.10
date	2010.06.09.12.01.08;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2010.06.09.11.34.13;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2010.06.09.11.33.12;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.09.11.30.51;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2010.06.05.07.59.05;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2010.06.05.07.48.00;	author landry;	state Exp;
branches;
next	1.4;

1.4
date	2010.04.06.09.39.51;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2008.06.09.12.01.39;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.06.16.13.15;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2008.04.07.11.10.16;	author espie;	state Exp;
branches;
next	;


desc
@@


1.11
log
@kill a few things which have now MOVED
@
text
@#! /usr/bin/perl
# ex:ts=8 sw=4:
# $OpenBSD: pkg_subst,v 1.10 2010/06/09 12:01:08 espie Exp $
#
# Copyright (c) 2008 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# rather simple script

use strict;
use warnings;
use OpenBSD::Getopt;
use OpenBSD::Subst;
use OpenBSD::State;
use OpenBSD::IdCache;

my $subst = OpenBSD::Subst->new;

our $opt_c;
my ($fuid, $fgid);
my ($uidc, $gidc);

my $ui = OpenBSD::State->new('pkg_subst');
$ui->usage_is( '[-c] [-Dvar=value ...] [-g group] [-o owner] [file ...]');
$ui->do_options(
    sub {
	getopts('D:g:o:ch',
	    {'D' =>
		    sub { 
			    $subst->parse_option(shift);
		    },
	     'o' => sub {
			    my $owner = shift;

			    $uidc //= OpenBSD::UidCache->new;
			    $fuid = $uidc->lookup($owner, -1);
			    die "$owner is not a valid user" if $fuid == -1;
		    },
	     'g' => sub {
			    my $group = shift;

			    $gidc //= OpenBSD::GidCache->new;
			    $fgid = $gidc->lookup($group, -1);
			    die "$group is not a valid group" if $fgid == -1;
		    },
	     'h' => sub {	$ui->usage; },
	    });
    });

my $bak = $subst->value('BAK');
if (!defined $bak) {
	$bak = '.beforesubst';
}

if (@@ARGV == 0) {
	$subst->copy_fh2(\*STDIN, \*STDOUT);
}

while (my $src = shift) {
	my $dest;
	if ($opt_c) {
		$dest = shift or die "odd number of files";
	} else {
		$dest = $src;
		$src .= $bak;
		rename($dest, $src) or die "Can't rename $dest: $!";
	}
	my $fh = $subst->copy($src, $dest);
	# copy rights, owner, group as well
	my ($uid, $gid, $mode) = (stat $src)[4, 5, 2];
	my $r1 = chown $fuid // $uid, $fgid // $gid, $fh;
	my $r2 = chmod $mode & 07777, $fh;
	if (defined $fuid || defined $fgid || $< == 0) {
		if ($r1 == 0) {
			die "chown on $dest failed";
		}
		if ($r2 == 0) {
			die "chmod on $dest failed";
		}
	}
}
@


1.10
log
@common pattern
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.9 2010/06/09 11:34:13 espie Exp $
@


1.9
log
@missed one
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.8 2010/06/09 11:33:12 espie Exp $
a25 1
use OpenBSD::Error;
d36 2
a37 1
try { 
d59 1
a59 3
} catchall {
	$ui->usage("#1", $_);
};
@


1.8
log
@switch to new style usage
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.7 2010/06/09 11:30:51 espie Exp $
d60 1
a60 1
	Usage($_);
@


1.7
log
@switch to $state->usage
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.6 2010/06/05 07:59:05 espie Exp $
d25 1
d35 2
a36 2
set_usage(
'pkg_subst [-c] [-Dvar=value ...] [-g group] [-o owner] [file ...]');
d57 1
a57 1
	     'h' => sub {	Usage(); },
@


1.6
log
@tweaks: create one single cache.
sort options in usage.
be paranoid about changes.
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.5 2010/06/05 07:48:00 landry Exp $
d80 1
a80 1
	$subst->copy($src, $dest);
d83 2
a84 2
	my $r1 = chown $fuid // $uid, $fgid // $gid, $dest;
	my $r2 = chmod $mode & 07777, $dest;
@


1.5
log
@Add -o/-g options to set owner/group on target file like install(1) does,
so that we can get rid of several ${SUBST_CMD} -c + chown constructs in
the tree. For example:
${SUBST_CMD} -c src dest
chown username:groupname dest
becomes:
${SUBST_CMD} -o username -g groupname -c src dest
comments & ok espie@@
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.4 2010/04/06 09:39:51 espie Exp $
d19 1
a19 1
# very simple script, only allows substitutions
d32 2
d35 1
a35 1
'pkg_subst [-c] [-o owner] [-g group] [-Dvar=value ...] [file ...]');
d37 1
a37 1
	getopts('D:o:g:ch',
a42 1
			    my $uidc = OpenBSD::UidCache->new;
d44 4
a47 2
			    $fuid = $uidc->lookup($owner,-1);
			    die "$owner is not a valid user" if ($fuid == -1);
a49 1
			    my $gidc = OpenBSD::GidCache->new;
d51 4
a54 2
			    $fgid = $gidc->lookup($group,-1);
			    die "$group is not a valid group" if ($fgid == -1);
d81 1
a81 1
	# copy rights as well (and owner/group if we're root)
d83 9
a91 2
	if ($< == 0) {
		chown $fuid // $uid, $fgid // $gid, $dest; # not checked
a92 1
	chmod $mode & 07777, $dest; # not checked
@


1.4
log
@adds an extra "depends" stage which runs pkg_add once, before prepare
checks the deps.
Solves the "avahi rebuilds with full shit" in some build orders that
naddy@@ reported.
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.3 2008/06/09 12:01:39 espie Exp $
d26 1
d31 1
d33 1
a33 1
'pkg_subst [-c] [-Dvar=value ...] [file ...]');
d35 1
a35 1
	getopts('D:ch',
d40 12
d80 1
a80 1
		chown $uid, $gid, $dest; # not checked
@


1.3
log
@pkg_subst without file args acts as a filter
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.2 2008/05/06 16:13:15 espie Exp $
d46 1
a46 1
	$bak = '.bak';
@


1.2
log
@copy rights and owner, based on jasper's remarks
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.1 2008/04/07 11:10:16 espie Exp $
d31 1
a31 1
'pkg_subst [-c] [-Dvar=value ...] file ...');
d50 1
a50 1
	Usage();
@


1.1
log
@scaffold for CMD_SUBST
@
text
@d3 1
a3 1
# $OpenBSD$
d63 6
@

