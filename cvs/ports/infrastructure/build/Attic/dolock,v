head	1.6;
access;
symbols
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.3.0.12
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.10
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2010.08.20.15.07.22;	author espie;	state dead;
branches;
next	1.5;

1.5
date	2010.06.16.12.09.22;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2010.06.16.12.08.42;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.02.12.03.56;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.01.10.54.42;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.07.10.09.35;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@kill a few things which have now MOVED
@
text
@#! /usr/bin/perl
# $OpenBSD: dolock,v 1.5 2010/06/16 12:09:22 espie Exp $
# Copyright (c) 2004 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;
use Fcntl;
use File::Basename;

if (@@ARGV == 0) {
	exit(1);
}
my $fname = shift;
my $dname = dirname $fname;
my $done = 0;

unless (-e $dname) {
	require File::Path;
	File::Path::mkpath($dname);
}
if (!-d $dname) {
	print STDERR "lock directory location $dname is not a directory\n";
	exit(1);
}

while(1) {
	if (sysopen my $handle, $fname, O_WRONLY | O_EXCL | O_CREAT, 0666) {
		if (@@ARGV)  {
			print $handle join("\n", @@ARGV), "\n";
		}
		close($handle);
		exit(0);
	}
	unless ($done) {
		print STDERR "Awaiting lock $fname\n";
		$done = 1;
	}
	sleep(1);
}
@


1.5
log
@well, this can be clueful
@
text
@d2 1
a2 1
# $OpenBSD: dolock,v 1.4 2010/06/16 12:08:42 espie Exp $
@


1.4
log
@handle more errors
@
text
@d2 1
a2 1
# $OpenBSD: dolock,v 1.3 2007/06/02 12:03:56 espie Exp $
d34 1
@


1.3
log
@allow locking command to take extra parameters, store them inside the lock
file (as a comment)
@
text
@d2 1
a2 1
# $OpenBSD: dolock,v 1.2 2005/11/01 10:54:42 sturm Exp $
d29 1
a29 1
unless (-d $dname) {
d32 3
@


1.2
log
@create LOCKDIR if it doesn't already exist

ok espie@@
@
text
@d2 1
a2 1
# $OpenBSD: dolock,v 1.1 2004/11/07 10:09:35 espie Exp $
d22 1
a22 1
if (@@ARGV != 1) {
d36 3
@


1.1
log
@provide a simple locking command in perl.
@
text
@d2 1
a2 1
# $OpenBSD$
d20 1
d26 1
d28 5
@

