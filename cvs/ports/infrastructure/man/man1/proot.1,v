head	1.16;
access;
symbols
	OPENBSD_6_1:1.16.0.2
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.14.0.2
	OPENBSD_6_0_BASE:1.14;
locks; strict;
comment	@.\" @;


1.16
date	2017.02.13.12.52.13;	author espie;	state Exp;
branches;
next	1.15;
commitid	N2CZB5BUFZWy5SXU;

1.15
date	2016.08.09.13.45.01;	author schwarze;	state Exp;
branches;
next	1.14;
commitid	X6DEOX3ZveYqa6IO;

1.14
date	2016.06.27.06.29.07;	author espie;	state Exp;
branches;
next	1.13;
commitid	jqGB6RVTkwaDJQ3u;

1.13
date	2016.06.04.11.58.36;	author espie;	state Exp;
branches;
next	1.12;
commitid	aZVqSnnpRxWbb8no;

1.12
date	2016.05.20.09.55.25;	author espie;	state Exp;
branches;
next	1.11;
commitid	31whdnFekBQQnD97;

1.11
date	2016.05.19.13.40.27;	author espie;	state Exp;
branches;
next	1.10;
commitid	y3A6xtl9OoaPNQH5;

1.10
date	2016.05.15.13.09.58;	author espie;	state Exp;
branches;
next	1.9;
commitid	XMyAys7UryLRW90M;

1.9
date	2016.05.15.11.09.47;	author espie;	state Exp;
branches;
next	1.8;
commitid	35IB0BHS4XnZ6y0G;

1.8
date	2016.05.14.22.46.53;	author espie;	state Exp;
branches;
next	1.7;
commitid	5bIpRieOcbHmF8mq;

1.7
date	2016.05.14.11.29.09;	author krw;	state Exp;
branches;
next	1.6;
commitid	ikrsyq257LHjnV32;

1.6
date	2016.05.13.17.26.08;	author espie;	state Exp;
branches;
next	1.5;
commitid	HsWVfxZmqcfvG4Ys;

1.5
date	2016.05.10.15.53.02;	author espie;	state Exp;
branches;
next	1.4;
commitid	GvHt9GaNrFecgfdX;

1.4
date	2016.05.10.09.16.31;	author espie;	state Exp;
branches;
next	1.3;
commitid	ewDmB5ZxEfi8xQKY;

1.3
date	2016.05.03.09.20.30;	author espie;	state Exp;
branches;
next	1.2;
commitid	l5xybluXcj8TCpq9;

1.2
date	2016.04.30.09.14.15;	author espie;	state Exp;
branches;
next	1.1;
commitid	cRmuiO2jbvtlDsrE;

1.1
date	2016.04.29.15.15.47;	author espie;	state Exp;
branches;
next	;
commitid	5bJTrmeTsenYGZxt;


desc
@@


1.16
log
@forgotten: scrape SIGNING_PARAMETERS
@
text
@.\"	$OpenBSD: proot.1,v 1.15 2016/08/09 13:45:01 schwarze Exp $
.\"
.\" Copyright (c) 2016 Marc Espie <espie@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: August 9 2016 $
.Dt PROOT 1
.Os
.Sh NAME
.Nm proot
.Nd ports chroot builder
.Sh SYNOPSIS
.Nm proot
.Op Fl B Ar chroot
.Op Fl c Ar configfile
.Op Fl S Ar srcroot
.Op Ar attribute Ns = Ns Ar value ...
.Sh DESCRIPTION
.Nm
can fill up a chroot directory for ports building usage.
It will perform a set of
.Cm actions
that should fill up a destination
.Ar chroot
directory from the base system (or an optional
.Ar srcroot ) .
.Pp
As far as possible,
.Nm
will create hardlinks instead of copying files, so that cloning an existing
chroot will often only consume i-nodes.
.Pp
Some attributes can take multiple values.
As a shorthand, several values can be specified in a row without having
to repeat the
.Ar attribute
name, for instance:
.Pp
.Dl proot -B /build actions=unpopulate_light check_symlinks
.Pp
A
.Ar configfile
mostly contains one
.Ar attribute Ns = Ns Ar value
assignment per line, with comments starting with a
.Sq #
character.
.Pp
Possible
.Cm actions
(in the order of execution) are as follows:
.Pp
.Bl -tag -width unpopulate_light -compact -offset indent
.It Cm check_mount
Verify the state of mount points in the system, specifically whether
the chroot area is not nodev.
.It Cm unpopulate
Remove everything from the chroot apart from selected data.
See
.Sx Preserved areas and unpopulate
for details.
.It Cm snapshot
Copy things from a snapshot,
to be retrieved from an url or from the local filesystem.
.It Cm locate
Copy things from the base system, perusing the system
.Xr locate 1
databases.
.Bf Sy
Note that this might erase data, in case it doesn't match the base system
and is in the way.
.Ef
.It Cm resolv
Copy the system
.Xr resolv.conf 5
and
.Xr hosts 5
files.
.It Cm copy_ports
Copy the ports tree.
.It Cm copy_sys
Copy system include files (deprecated).
.It Cm ldconfig
Rerun
.Xr ldconfig 8 .
.It Cm unpopulate_light
Remove everything from the chroot apart from selected data.
See
.Sx Preserved areas and unpopulate
for details.
.It Cm devs
Regenerate devices using
.Xr MAKEDEV 8
and
.Xr dev_mkdb 8 .
.It Cm checkout_ports
Check out a ports tree from cvs using a provided
.Cm portscvs
location.
.It Cm ports_subdirs
Create ports infrastructure subdirs, according to users required for
.Xr dpb 1 .
If
.Cm chown_all
is set to 1,
.Xr chown 2
any content within to the appropriate users.
.It Cm stragglers
Double-check filled up chroot for files we don't know about.
.It Cm write_mk
If some directory values are different from the default,
write a skeleton
.Xr mk.conf 5
file.
.It Cm check_symlinks
Report absolute symlinks that exist under the
.Ar chroot ,
white-listing known base system links.
.El
.Pp
By default,
.Nm
will run
.Cm check_mount , unpopulate_light , devs , ldconfig , ports_subdirs ,
.Cm resolv , write_mk .
If
.Cm unpopulate
is used,
.Cm unpopulate_light
won't be run.
It will also run
.Cm snapshot
if a snapshot location is provided,
or
.Cm locate
otherwise.
.Pp
Add actions with
.Cm actions Ns = Ns Ar value ,
remove them with
.Cm actions Ns =- Ns Ar value .
.Pp
Other attributes are:
.Pp
.Bl -tag -width mkconf_lines -offset indent -compact
.It Cm chroot
same as
.Fl B Ar chroot
.It Cm srcroot
same as
.Fl S Ar srcroot
.It Cm PORT_USER
Who the ports tree should belong to
.It Cm BUILD_USER
Who to build as (defaults to _pbuild)
.It Cm FETCH_USER
Who to fetch as (defaults to _pfetch)
.It Cm LOG_USER
Who to write log as (defaults to
.Cm BUILD_USER )
.It Cm PORTSDIR
.It Cm DISTDIR
.It Cm PACKAGE_REPOSITORY
.It Cm PLIST_REPOSITORY
.It Cm LOCKDIR
.It Cm WRKOBJDIR
same as in
.Xr bsd.port.mk 5
.Pp
.It Cm chown_all
set to 1 to have the action
.Cm ports_subdirs
change owners of every content.
.It Cm extra
extra file to copy into the
.Ar chroot .
.It Cm mkconf_lines
Add lines to the generated
.Pa /etc/mk.conf .
.It Cm mkconf_tail
Add file to the generated
.Pa /etc/mk.conf .
.It Cm preserve
Supplemental directory to preserve during
.Cm unpopulate .
.It Cm sets
Add or remove sets compared to the default list required to build ports
(defaults to base comp etc xbase xfont xshare xetc).
.It Cm snapshot
Location of snapshot for the
.Cm snapshot
action.
.It Cm portscvs
Where to get a ports snapshot for the
.Cm checkout_ports
action.
.El
.Ss Preserved areas and unpopulate
The following entries won't be erased during a
.Cm locate
or
.Cm unpopulate*
action:
.Pp
.Bl -dash -compact -offset indent
.It
Items explicitly marked with the
.Cm preserve
attribute.
.It
A
.Cm snapshot
directory containing the base sets.
.It
All the ports specific sub directories if they are defined,
namely
.Cm DISTDIR , WRKOBJDIR, LOGDIR, PACKAGE_REPOSITORY , PLIST_REPOSITY , LOCKDIR .
.It
The
.Cm PORTSDIR
itself, unless
.Cm copy_ports
is used.
.It
Any mountpoint.
.It
Data explicitly copied through other actions, e.g.,
.Cm extra
files, key files...
.El
.Sh EXAMPLES
The following
.Ar configfile
sets things up for an initial build on a
.Xr dpb 1
cluster.
.Bd -literal -offset index
chroot=/build
PORT_USER=espie
extra=/home/espie/startup
WRKOBJDIR=/tmp/pobj
LOCKDIR=/tmp/locks
PLIST_REPOSITORY=/data/plist
DISTDIR=/data/distfiles
PACKAGE_REPOSITORY=/data/packages
actions=unpopulate_light
	copy_ports
.Ed
.Pp
It assumes
.Pa /build/data
is a separate partition that won't be cleaned up by
.Cm unpopulate_light ,
and that can be mounted on slaves.
Note also that
.Pa /tmp
should be a fast local directory on every machine of the cluster.
.Pp
.Pa /home/espie/startup
is a startup script for
.Xr dpb 1 .
.Pp
Initial invocation on the master could be
.Pp
.D1 Nm Fl c Ar configfile Cm chown_all Ns =1
.Pp
to ensure correct permissions for existing data under various
ports directories.
.Pp
Slaves should not need the extra arguments, as the directories will
already have correct owners.
.Sh SEE ALSO
.Xr dpb 1 ,
.Xr chroot 8
.Sh AUTHOR
Marc Espie
@


1.15
log
@elementary mdoc(7) and wording cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.14 2016/06/27 06:29:07 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: June 27 2016 $
a187 13
.It Cm key
Name of a
.Xr signify 1
signing key.
Just give the stem, as in
.Cm key Ns = Ns Ar stem .
This will copy
.Pa /etc/signify/stem-pkg.{pub,sec}
and set
.Va SIGNING_PARAMETERS
in the generated
.Pa /etc/mk.conf
file accordingly.
@


1.14
log
@+ dev_mkdb so that tty(8) will be fully functional and fast
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.13 2016/06/04 11:58:36 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: June 4 2016 $
a24 1
.Bk -words
d28 1
a28 2
.Op Ar key Ns = Ns Ar value ...
.Ek
d35 3
a37 6
.Fl B Ar chroot
from the base system
.Po
or an optional
.Fl S Ar srcroot
.Pc .
d44 1
a44 3
Attribute values can be specified on the command line
.Ar key Ns = Ns Ar value .
Some attribute take several values.
d47 4
a50 5
.Ar key ,
for instance:
.Bd -literal -offset indent
.Nm Fl B Ar /build Ar actions Ns = Ns Ar unpopulate_light Ar check_symlinks
.Ed
d53 10
a62 3
.Fl c Ar configfile
mostly contains one key=value per line, with comments starting
with a #.
d64 1
a64 2
Possible actions (in order of execution) are as follows:
.Bl -tag -width Dssssssssssss -compact -offset indent
d71 1
a71 1
.Sq PRESERVED AREAS AND UNPOPULATE
d74 2
a75 3
Copy things from a
.Ar snapshot ,
to retrieve from an url, or from the local filesystem.
d77 3
a79 1
Copy things from the base system, perusing the system locate databases.
d86 1
a86 1
.Pa resolv.conf
d88 1
a88 1
.Pa hosts
d100 1
a100 1
.Sq PRESERVED AREAS AND UNPOPULATE
d109 2
a110 2
.Ar portscvs
location .
d115 1
a115 1
.Ar chown_all
d124 1
a124 1
.Pa mk.conf
d135 2
a136 1
.Cm check_mount , unpopulate_light , devs , ldconfig , ports_subdirs , resolv , write_mk .
d150 1
a150 1
.Ar actions Ns = Ns value ,
d152 1
a152 1
.Ar actions Ns = Ns - Ns value .
d155 3
a157 2
.Bl -tag -width Dssssssssss -offset indent -compact
.It Ar chroot
d160 1
a160 1
.It Ar srcroot
d163 1
a163 1
.It Ar PORT_USER
d165 1
a165 1
.It Ar BUILD_USER
d167 1
a167 1
.It Ar FETCH_USER
d169 9
a177 12
.It Ar LOG_USER
Who to write log as
.Po
defaults to
.Ar BUILD_USER
.Pc
.It Ar PORTSDIR
.It Ar DISTDIR
.It Ar PACKAGE_REPOSITORY
.It Ar PLIST_REPOSITORY
.It Ar LOCKDIR
.It Ar WRKOBJDIR
d181 2
a182 2
.It Ar chown_all
set to 1 to have action
d185 1
a185 1
.It Ar extra
d188 1
a188 1
.It Ar key
d193 1
a193 1
.Ar key Ns = Ns stem .
d198 1
a198 1
in generated
d200 2
a201 2
accordingly.
.It Ar mkconf_lines
d204 1
a204 1
.It Ar mkconf_tail
d207 1
a207 1
.It Ar preserve
d210 1
a210 1
.It Ar sets
d213 1
a213 1
.It Ar snapshot
d217 1
a217 1
.It Ar portscvs
d222 1
a222 1
.Ss PRESERVED AREAS AND UNPOPULATE
d228 1
d232 1
a232 1
.Ar preserve
d236 1
a236 1
.Ar snapshot
d241 1
a241 1
.Ar DISTDIR , WRKOBJDIR, LOGDIR, PACKAGE_REPOSITORY , PLIST_REPOSITY , LOCKDIR .
d244 1
a244 1
.Ar PORTSDIR
d252 1
a252 1
.Ar extra
d288 2
a289 3
.Bd -offset indent
.Nm Fl c Ar configfile Ar chown_all Ns = Ns Ar 1
.Ed
@


1.13
log
@a few important changes:
- run unpopulate_light by default;
- make an explicit list of preserved data in the manpage.
- don't preserve PORTSDIR if we copy_ports. Don't store extra stuff there.
- register fatal errors and exit(1).
- move a lot of things before unpopulate_light so that clean-up is more
accurate.
- recognize wxallowed. Those checks are a bit simplistic yet.
- clean-up old redundant code
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.12 2016/05/20 09:55:25 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: May 20 2016 $
d105 3
a107 1
.Xr MAKEDEV 8 .
@


1.12
log
@switch to PLIST_REPOSITORY, keep PLIST_DB glue for a few days
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.11 2016/05/19 13:40:27 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: May 19 2016 $
d71 4
a74 5
Remove everything from the chroot, apart from known preserved areas
.Po marked with
.Ar preserve
.Pc
or other mountpoints.
d81 4
d91 7
d99 4
a102 10
Remove everything from the chroot, apart from known preserved areas
.Po marked with
.Ar preserve
.Pc
or other mountpoints,
and stuff copied over during
.Cm locate ,
.Cm snapshot
or
.Cm resolv .
a105 5
.It Cm ldconfig
Rerun
.Xr ldconfig 8 .
.It Cm copy_ports
Copy the ports tree.
a109 2
.It Cm copy_sys
Copy system include files (deprecated).
d134 6
a139 1
.Cm check_mount , devs , ldconfig , ports_subdirs , resolv , write_mk .
d222 32
d255 1
a255 1
The following 
d287 1
a287 1
.Bd -offset indent 
@


1.11
log
@make it possible to directly add lines at end of generated mk.conf.

make option handling more obvious, no actual change.
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.10 2016/05/15 13:09:58 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: May 15 2016 $
d173 1
a173 1
.It Ar PLIST_DB
d232 1
a232 1
PLIST_DB=/data/plist
@


1.10
log
@add a full-fledged example
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.9 2016/05/15 11:09:47 espie Exp $
d199 3
@


1.9
log
@document tweaks
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.8 2016/05/14 22:46:53 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: May 14 2016 $
d79 1
a79 1
to retrieve from an url, or from the local filesystem
d87 1
a87 1
files
d101 1
a101 1
.Xr MAKEDEV 8
d104 1
a104 1
.Xr ldconfig 8
d106 1
a106 1
Copy the ports tree
d185 1
a185 1
.Ar chroot
d201 1
a201 1
.Pa /etc/mk.conf
d217 42
@


1.8
log
@give an actual example with several values in a row
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.7 2016/05/14 11:29:09 krw Exp $
d183 3
d199 3
@


1.7
log
@No .Pp before .Sh.

ok espie@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.6 2016/05/13 17:26:08 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: May 13 2016 $
d54 5
a58 1
.Ar key .
@


1.6
log
@document new stuff
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.5 2016/05/10 15:53:02 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: May 10 2016 $
a206 1
.Pp
@


1.5
log
@document recent feature changes. Remove BUG section, this is becoming
usable
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.4 2016/05/10 09:16:31 espie Exp $
d112 3
d124 4
d175 4
@


1.4
log
@document tweak
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.3 2016/05/03 09:20:30 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: May 3 2016 $
d112 2
d164 1
d168 13
a201 2
.Sh BUGS
Very much a work in progress, options and mode of operation will change.
@


1.3
log
@document stuff I added, nicer formatting.
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.2 2016/04/30 09:14:15 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: April 30 2016 $
d81 14
a94 1
file
@


1.2
log
@several parms
@
text
@d1 1
a1 1
.\"	$OpenBSD: proot.1,v 1.1 2016/04/29 15:15:47 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: April 29 2016 $
d37 1
a37 1
.Ar chroot
d56 3
a58 1
A config file mostly contains one key=value per line, with comments starting
d62 1
a62 1
.Bl -tag -width Ds -compact
d86 1
a86 1
Rerun 
d102 1
a102 1
If some directory values are different from the default, 
d124 2
a125 2
Other attributes are
.Bl -tag -width Ds -compact
d133 11
a143 2
Who the ports tree should belong to (we always use _pbuild and _pfetch
for the build and fetch stage).
d151 1
d155 3
@


1.1
log
@draft of a manpage. everything will change
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d17 1
a17 1
.Dd $Mdocdate$
d29 1
a29 1
.Op Ar key Ns = Ns Ar value
@

