head	1.4;
access;
symbols
	OPENBSD_6_0:1.3.0.12
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2017.01.25.14.13.50;	author espie;	state Exp;
branches;
next	1.3;
commitid	tUYhSsYHq6WY1QGb;

1.3
date	2013.10.15.16.07.21;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2013.10.14.19.09.04;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.02.09.09.22;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@let dpb-replay work again after changing the interface completely.

(noticed before rpe@@ reported it, but this should please him)
@
text
@#! /usr/bin/perl
# ex:ts=8 sw=4:
# $OpenBSD: dpb-replay,v 1.3 2013/10/15 16:07:21 espie Exp $
#
# Copyright (c) 2013 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
use strict;
use warnings;
use FindBin;

my $ports1;
BEGIN {
	$ports1 = $ENV{PORTSDIR} || '/usr/ports';
}
use lib ("$ports1/infrastructure/lib", "$FindBin::Bin/../lib");
use DPB::MiniCurses;
use OpenBSD::State;

package DPBReplay::State;
our @@ISA = (qw(OpenBSD::State));

sub handle_options
{
	my $state = shift;
	$state->SUPER::handle_options('cs:', '[-c] [-s speedup] file');
	if ($state->opt('c')) {
		$state->{color} = 1;
	}
}

package Term;
our @@ISA = qw(DPB::MiniCurses);

sub new
{
	my ($class, $state) = @@_;
	my $self = bless {state => $state}, $class;
	$self->create_terminal;
	return $self;
}

package main;
use Time::HiRes (qw(time sleep));

my $state = DPBReplay::State->new('dpb-replay');
$state->handle_options;

if (@@ARGV == 0) {
	$state->usage("Missing term-report file");
}

my $file = shift;
my $speedup = $state->opt('s') // 10;
$speedup += 0.0;
my $term = Term->new($state);

open(my $fh, '<', $file);

my $start_ts;
my $start_time = time();
my $msg = '';
while(<$fh>) {
	if (m/^\@@\@@\@@(\d+)$/) {
		chomp;
		my $ts = int($1);
		$start_ts //= $ts;

		my $now = time();
		my $sleep = ($ts-$start_ts)/$speedup - ($now - $start_time);
		if ($sleep > 0) {
			sleep($sleep);
		}
		my $method = $term->{write};
		$term->$method($msg);
		$term->{msg} = $msg;
		$msg = '';
	} else {
		$msg .= $_;
	}
}
close($fh);
@


1.3
log
@handle window resizes correctly
@
text
@d3 1
a3 1
# $OpenBSD: dpb-replay,v 1.2 2013/10/14 19:09:04 espie Exp $
d28 14
d47 3
a49 6
	my ($class, $opt_c) = @@_;
	my $self = bless {}, $class;
	$self->create_terminal({color=>$opt_c});
	$SIG{'WINCH'} = sub {
		$self->handle_window;
	};
a54 1
use OpenBSD::Getopt;
d56 6
a62 2
our ($opt_s, $opt_c);
getopts('s:c');
d64 1
a64 1
my $speedup = $opt_s // 10;
d66 1
a66 1
my $term = Term->new($opt_c);
@


1.2
log
@add color support to dpb-replay, normalize options
@
text
@d3 1
a3 1
# $OpenBSD: dpb,v 1.95 2013/09/18 15:30:40 espie Exp $
d36 3
@


1.1
log
@fast replay of term log.
@
text
@a27 1

d33 1
a33 1
	my $class = shift;
d35 1
a35 1
	$self->create_terminal;
d41 2
d44 2
d47 1
a47 4
my $speedup = 10;
if (@@ARGV > 0) {
	$speedup = shift;
}
d49 1
a49 1
my $term = Term->new;
@

