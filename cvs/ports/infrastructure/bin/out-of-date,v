head	1.7;
access;
symbols
	OPENBSD_6_1:1.6.0.14
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.12
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.8
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.10
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.6
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.2
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2;
locks; strict;
comment	@# @;


1.7
date	2017.09.28.10.30.35;	author espie;	state Exp;
branches;
next	1.6;
commitid	NPIHirNPQWKrqxOA;

1.6
date	2013.09.15.09.17.25;	author rpe;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.07.15.57.51;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.16.23.05.28;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.16.22.59.42;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.16.22.57.54;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.16.22.57.03;	author espie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@have out-of-date ignore the @@version part for now.
properly handling that is more complicated and can wait until after 6.2.

problem pointed out by naddy@@
@
text
@#!/usr/bin/perl

# $OpenBSD: out-of-date,v 1.6 2013/09/15 09:17:25 rpe Exp $
#
# Copyright (c) 2005 Bernd Ahlers <bernd@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;
use OpenBSD::Getopt;
use OpenBSD::Error;
use OpenBSD::PackageInfo;
use OpenBSD::PackingList;
use OpenBSD::PackageName;
use File::Temp;
use OpenBSD::AddCreateDelete;

our $opt_q;
my $state = OpenBSD::AddCreateDelete::State->new("out-of-date");
$state->handle_options('q', "[-mvxq]");

sub collect_installed
{
	my $pkg = {};

	$state->progress->for_list("Collecting installed packages",
	    [installed_packages(1)], sub {
		my $name = shift;
		my ($stem, $version) = OpenBSD::PackageName::splitname($name);
		my $plist = OpenBSD::PackingList->from_installation($name,
		    \&OpenBSD::PackingList::UpdateInfoOnly);
		if (!defined $plist or !defined $plist->{extrainfo}->{subdir}) {
			$state->errsay("Package #1 has no valid packing-list", 
			    $name);
			return;
		}
			
		my $subdir = $plist->{extrainfo}->{subdir};
		$subdir =~ s/mystuff\///;
		$subdir =~ s/\/usr\/ports\///;

		$pkg->{$subdir}->{name}	     = $name;
		$pkg->{$subdir}->{stem}      = $stem;
		$pkg->{$subdir}->{version}   = $version;
		my $sig = $plist->signature;
		if (ref($sig)) { $sig = $sig->string; }
		# XXX zap version marker for now, more complicated to grab
		# from the ports tree.
		$sig =~ s/\,\d+\,/,/;
		$pkg->{$subdir}->{signature} = $sig;
		if (defined $plist->{'always-update'}) {
			$pkg->{$subdir}->{signature} = 'always-update';
		}
	    });
	return $pkg;
}

sub open_cmd
{
	my $cmd = shift;
	open my $fh, "-|", $cmd;
#	my $old = select $fh;
#	$| = 1;
#	select $old;
	return $fh;
}

sub collect_port_versions
{
	my ($pkg, $portsdir, $notfound) = @@_;

	my @@subdirs = ();
	for my $subdir (keys %$pkg) {
		my ($dir) = split(/,/, $subdir);
		if (-d "$portsdir/$dir") {
			push(@@subdirs, $subdir);
		} else {
			push(@@$notfound, $subdir);
		}
	}

	my $cmd = "cd $portsdir && SUBDIR=\"".join(' ', @@subdirs)
	    ."\" FULLPATH=Yes REPORT_PROBLEM=true make ".'show=FULLPKGNAME\${SUBPACKAGE} '
	    ."2>&1";

	my $port  = {};
	my $error = {};
	my $count = 0;
	my $total = scalar @@subdirs;

	$state->progress->set_header("Collecting port versions");
	my $fh = open_cmd($cmd);
	my $subdir     = "";
	while (<$fh>) {
		chomp;
		if (/^\=\=\=\>\s+(\S+)/) {
			$subdir = $1;
			$count++;
			$state->progress->show($count, $total);
			next;
		}
		next unless $_ or $subdir;
		next if defined $error->{$subdir};
		if (/^(Fatal\:|\s+\()/) {
			push(@@{$error->{$subdir}}, $_);
			next;
		} elsif (/^(Stop|\*\*\*)/) {
			next;
		}
		$port->{$subdir}->{name} = $_;
		my ($stem, $version) = OpenBSD::PackageName::splitname($_);
		$port->{$subdir}->{stem}    = $stem;
		$port->{$subdir}->{version} = $version;
	}
	close($fh);
	$state->progress->next;

	return $port, $error;
}

sub collect_port_signatures
{
	my $pkg      = shift;
	my $port     = shift;
	my $portsdir = shift;
	my $output   = shift;

	my @@subdirs = ();
	for my $dir (keys %$port) {
		if ($pkg->{$dir}->{name} eq $port->{$dir}->{name}) {
			push(@@subdirs, $dir);
		}
	}

	my $TMPDIR = $ENV{'TMPDIR'} || "/tmp";
	my $tempdir = File::Temp::tempdir("libcache.XXXXXXXXXX", DIR => $TMPDIR, CLEANUP => 1);
	$ENV{'_DEPENDS_CACHE'} = $tempdir;
	my $cmd = "cd $portsdir && FULLPATH=Yes SUBDIR=\"".join(' ', @@subdirs)
	    ."\" REPORT_PROBLEM=true make print-package-signature";

	my $count = 0;
	my $total = scalar @@subdirs;
	$state->progress->set_header("Collecting port signatures");
	my $fh = open_cmd($cmd);
	my $subdir     = "";
	while (<$fh>) {
		chomp;
		if (/^\=\=\=\>\s+(\S+)/) {
			$subdir = $1;
			$count++;
			$state->progress->show($count, $total);
			next;
		}
		next unless $_ or $subdir;
		$port->{$subdir}->{signature} = $_;
	}
	$state->progress->next;
}

sub split_sig
{
	my $sig = shift;
	my $ret = {};

	for my $item (split(/,/, $sig)) {
		$ret->{$item} = 1;
	}

	return $ret;
}

sub diff_sig
{
	my ($dir, $pkg, $port) = @@_;

	my $old	= split_sig($pkg->{$dir}->{signature});
	my $new	= split_sig($port->{$dir}->{signature});

	for my $key (keys %$old) {
		if (defined $new->{$key}) {
			delete $old->{$key};
			delete $new->{$key};
		}
	}

	return join(',', sort keys %$old), join(',', sort keys %$new);
}

sub find_outdated
{
	my ($pkg, $port, $output) = @@_;

	for my $dir (keys %$pkg) {
		next unless $port->{$dir};
		if ($pkg->{$dir}->{name} ne $port->{$dir}->{name}) {
			push(@@$output, sprintf("%-30s # %s -> %s\n", $dir,
			    $pkg->{$dir}->{version}, $port->{$dir}->{version}));
			next;
		}
		next if $opt_q;
		if ($pkg->{$dir}->{signature} ne $port->{$dir}->{signature}) {
			push(@@$output, sprintf("%-30s # %s -> %s\n", $dir,
			    diff_sig($dir, $pkg, $port)));
		}
	}
}

my $portsdir = $ENV{PORTSDIR} || "/usr/ports";


my $pkg = collect_installed();

my @@output   = ();
my @@notfound = ();
my ($port, $errors) = collect_port_versions($pkg, $portsdir, \@@notfound);

collect_port_signatures($pkg, $port, $portsdir, \@@output) unless $opt_q;
find_outdated($pkg, $port, \@@output);

$state->errsay("Outdated ports:\n");
$state->print("#1", $_) for sort @@output;

if ($opt_q) {
	$state->errsay("\nWARNING: You've used the -q option. With this,\n"
	    . "out-of-date only looks for changed package names\nbut not "
	    . "for changed package signatures. If you\nwant to see ALL "
	    . "of your outdated packages,\ndon't use -q.");
}

if (@@notfound > 0) {
	$state->errsay("\nPorts that can't be found in the official "
	    . "ports tree:");
	for (sort @@notfound) {
		$state->errsay("#1", $_);
	}
}
if ((keys %$errors) > 0) {
	$state->errsay("\nErrors:");
	for (sort keys %$errors) {
		$state->errsay("  #1", $_);
		$state->errsay("    #1", $_) for @@{$errors->{$_}};
	}
}
@


1.6
log
@fix too-short format string for temp file

ok sthen@@ ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.5 2012/05/07 15:57:51 espie Exp $
d58 3
@


1.5
log
@just some nits
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.4 2011/11/16 23:05:28 espie Exp $
d144 1
a144 1
	my $tempdir = File::Temp::tempdir("libcache.XXXXXXX", DIR => $TMPDIR, CLEANUP => 1);
@


1.4
log
@fix option handling
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.3 2011/11/16 22:59:42 espie Exp $
d66 1
a66 1
sub fh_open
d68 6
a73 12
	open(my $fh, shift);
	my $old = select $fh;
	$| = 1;
	select STDERR;
	return $fh, $old;
}

sub fh_close
{
	my ($fh, $old) = @@_;
	close($fh);
	select $old;
d92 1
a92 1
	    ."2>&1 |";
d100 1
a100 1
	my ($fh, $old) = fh_open($cmd);
d123 1
a123 1
	fh_close($fh, $old);
d147 1
a147 1
	    ."\" REPORT_PROBLEM=true make print-package-signature |";
d152 1
a152 1
	my ($fh, $old) = fh_open($cmd);
a164 1
	fh_close($fh, $old);
@


1.3
log
@a second FULLPATH=Yes needed
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.2 2011/11/16 22:57:54 espie Exp $
d31 1
a31 1
OpenBSD::AddCreateDelete->handle_options('q', $state, "[-mvxq]");
@


1.2
log
@fix for recent infrastructure changes
also fix for FULLPATH !
@
text
@d3 1
a3 1
# $OpenBSD: out-of-date,v 1.20 2010/06/18 09:08:57 espie Exp $
d44 1
a44 1
			$state->errsay("Package #1has no valid packing-list", 
d97 1
a97 1
	    ."\" REPORT_PROBLEM=true make ".'show=FULLPKGNAME\${SUBPACKAGE} '
@


1.1
log
@move
@
text
@d151 2
a152 6
	$ENV{'_DEPENDS_CACHE'} = "$tempdir/depends_cache";
	$ENV{'_DEPENDS_FILE'} = "$tempdir/depends_file";
	$ENV{'_PORT_LIBS_CACHE'} = $tempdir;
	open(my $touch, '>', "$tempdir/depends_file");
	close($touch);
	my $cmd = "cd $portsdir && SUBDIR=\"".join(' ', @@subdirs)
@

