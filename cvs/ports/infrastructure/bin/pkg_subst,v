head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.6
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.10
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.8
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2015.11.07.09.52.24;	author espie;	state Exp;
branches;
next	1.5;
commitid	8DUXSlISduTuQoLO;

1.5
date	2015.11.02.11.57.40;	author espie;	state Exp;
branches;
next	1.4;
commitid	OqWgqDWdxwUgRqbH;

1.4
date	2014.08.12.07.59.34;	author zhuk;	state Exp;
branches;
next	1.3;
commitid	HS8MWGB6coxV664h;

1.3
date	2014.08.10.08.55.30;	author espie;	state Exp;
branches;
next	1.2;
commitid	4ACVQkQ6Fi5jIddF;

1.2
date	2013.04.27.15.43.42;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2010.08.20.14.38.31;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@try harder to match file names against admissible dirs
@
text
@#! /usr/bin/perl
# ex:ts=8 sw=4:
# $OpenBSD: pkg_subst,v 1.5 2015/11/02 11:57:40 espie Exp $
#
# Copyright (c) 2008 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# rather simple script

use strict;
use warnings;
use OpenBSD::Getopt;
use OpenBSD::Subst;
use OpenBSD::State;
use OpenBSD::IdCache;

sub fatal
{
	print STDERR @@_, "\n";
	exit 1;
}

my @@basedirs;

sub ensure_basedir
{
	my $file = shift;
		
	for my $b (@@basedirs) {
		return if $file =~ m/^\Q$b\E\//;
	}

	# try harder!
	require File::Spec;

	$file = File::Spec->canonpath(File::Spec->rel2abs($file));

	for my $b (@@basedirs) {
		return if $file =~ m/^\Q$b\E\//;
	}

	fatal("must use -m to copy $file which is outside ".
	    join(" ", @@basedirs));
}

my $subst = OpenBSD::Subst->new;

our ($opt_c, $opt_i);
my ($fuid, $fgid, $fmode);
my ($uidc, $gidc);

my $ui = OpenBSD::State->new('pkg_subst');
$ui->usage_is( '[-ci] [-Dvar=value ...] [-B basedir] [-g group] [-m mode] [-o owner] [file ...]');
$ui->do_options(
    sub {
	getopts('B:D:g:m:o:chi',
	    {'D' =>
		    sub {
			    $subst->parse_option(shift);
		    },
	     'o' => sub {
			    my $owner = shift;

			    $uidc //= OpenBSD::UidCache->new;
			    $fuid = $uidc->lookup($owner, -1);
			    fatal("$owner is not a valid user") if $fuid == -1;
		    },
	     'g' => sub {
			    my $group = shift;

			    $gidc //= OpenBSD::GidCache->new;
			    $fgid = $gidc->lookup($group, -1);
			    fatal("$group is not a valid group") if $fgid == -1;
		    },
	     'B' => sub {
			    push(@@basedirs, shift);
		    },
	     'm' => sub {
			    my $mode = shift;

			    $fmode = oct($mode);
			    fatal("$mode is not a valid mode") if $fmode == 0;
		    },
	     'h' => sub {	$ui->usage; },
	    });
    });

my $bak = $subst->value('BAK');
if (!defined $bak) {
	$bak = '.beforesubst';
}

if (@@ARGV == 0) {
	$subst->copy_fh2(\*STDIN, \*STDOUT);
}

while (my $src = shift) {
	my $dest;
	if ($opt_c) {
		$dest = shift or die "odd number of files";
		if (@@basedirs > 0 && !defined $fmode) {
			ensure_basedir($src);
		}
	} else {
		$dest = $src;
		$src .= $bak;
		rename($dest, $src) or fatal("Can't rename $dest: $!");
	}
	my $fh = $subst->copy($src, $dest);
	# copy rights, owner, group as well
	my ($uid, $gid, $mode) = (stat $src)[4, 5, 2];
	my $r1 = chown $fuid // $uid, $fgid // $gid, $fh;
	if (defined $fmode) {
		$mode = $fmode;
	}
	my $r2 = chmod $mode & 07777, $fh;
	if (defined $fuid || defined $fgid || $< == 0) {
		if ($r1 == 0 && !$opt_i) {
			fatal("chown on $dest failed");
		}
		if ($r2 == 0) {
			fatal("chmod on $dest failed");
		}
	}
}
@


1.5
log
@new sanity check option to pkg_subst, to be used shortly by bsd.port.mk
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.4 2014/08/12 07:59:34 zhuk Exp $
d39 1
d43 10
d56 1
a56 1
	
@


1.4
log
@Sync usage after addition of -m flag.

ok jca@@ and kirby@@
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.3 2014/08/10 08:55:30 espie Exp $
d28 18
d53 1
a53 1
$ui->usage_is( '[-ci] [-Dvar=value ...] [-g group] [-m mode] [-o owner] [file ...]');
d56 1
a56 1
	getopts('D:g:m:o:chi',
d66 1
a66 1
			    die "$owner is not a valid user" if $fuid == -1;
d73 4
a76 1
			    die "$group is not a valid group" if $fgid == -1;
d82 1
a82 1
			    die "$mode is not a valid mode" if $fmode == 0;
d101 3
d107 1
a107 1
		rename($dest, $src) or die "Can't rename $dest: $!";
d119 1
a119 1
			die "chown on $dest failed";
d122 1
a122 1
			die "chmod on $dest failed";
@


1.3
log
@new flag -i, to ignore owner/group errors
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.2 2013/04/27 15:43:42 sthen Exp $
d35 1
a35 1
$ui->usage_is( '[-ci] [-Dvar=value ...] [-g group] [-o owner] [file ...]');
@


1.2
log
@add basic mode support for pkg_subst, ok espie@@. example use:
${SUBST_CMD} -c -m 755 -o root -g bin ${FILESDIR}/script ${PREFIX}/bin/script
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.1 2010/08/20 14:38:31 espie Exp $
d30 1
a30 1
our $opt_c;
d35 1
a35 1
$ui->usage_is( '[-c] [-Dvar=value ...] [-g group] [-o owner] [file ...]');
d38 1
a38 1
	getopts('D:g:m:o:ch',
d94 1
a94 1
		if ($r1 == 0) {
@


1.1
log
@add & document pkg_subst
@
text
@d3 1
a3 1
# $OpenBSD: pkg_subst,v 1.10 2010/06/09 12:01:08 espie Exp $
d31 1
a31 1
my ($fuid, $fgid);
d38 1
a38 1
	getopts('D:g:o:ch',
d40 1
a40 1
		    sub { 
d57 6
d89 3
@

