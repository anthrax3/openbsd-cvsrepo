head	1.11;
access;
symbols
	OPENBSD_4_8:1.10.0.2
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.10
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.8
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.10
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.8
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.6
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@# @;


1.11
date	2011.01.11.11.31.59;	author espie;	state dead;
branches;
next	1.10;

1.10
date	2010.06.30.11.11.19;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2010.03.20.18.04.28;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2009.10.01.19.38.40;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.13.08.03.47;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2005.02.26.13.21.58;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.11.15.38.02;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.05.20.40.11;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.14.22.31.48;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.13.07.45.22;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.12.18.58.34;	author espie;	state Exp;
branches;
next	;


desc
@@


1.11
log
@moved
@
text
@#!/usr/bin/perl

# $OpenBSD: check-common-dirs,v 1.10 2010/06/30 11:11:19 espie Exp $
# Copyright (c) 2004 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# check all packages in the current directory, and report common directory
# issues

use strict;
use warnings;

use File::Spec;
use File::Path;
use File::Basename;
use OpenBSD::PackageInfo;
use OpenBSD::PackingList;
use OpenBSD::Mtree;
use OpenBSD::AddCreateDelete;

sub register_dir
{
	my ($d, $h) = @@_;
	return if defined $h->{$d};
	$h->{$d} = 1;
	register_dir(dirname($d), $h);
}

package OpenBSD::PackingElement;
sub check_common_dirs
{
}

package OpenBSD::PackingElement::FileBase;
use File::Basename;
sub check_common_dirs
{
	my ($item, $t) = @@_;
	my $d = File::Spec->canonpath($item->fullname);
	main::register_dir(dirname($d), $t->{need_dirs});
}

package OpenBSD::PackingElement::DirlikeObject;
sub check_common_dirs
{
	my ($item, $t) = @@_;
	my $d = File::Spec->canonpath($item->fullname);
	$t->{dirs}->{$d} = 1;
}

package OpenBSD::PackingElement::Dependency;
sub check_common_dirs
{
	my ($item, $t) = @@_;
	$t->{deps}->{$item->{def}} = 1;
}

package main;

sub analyze 
{
	my ($plist, $db) = @@_;
	my $pkgname = $plist->pkgname;
	$db->{$pkgname} = {
		pkgname => $pkgname,
		missing_deps => {},
		dirs => {}, 
		need_dirs => {}, 
		deps => {},
		problems => {}
	} unless defined $db->{$pkgname};
	my $t = $db->{$pkgname};

	$plist->check_common_dirs($t);
}

sub parent_has_dir
{
	my ($db, $t, $dir) = @@_;

	for my $dep (keys %{$t->{deps}}) {
		if (!defined $db->{$dep}) {
		    if (!defined $t->{missing_deps}->{$dep}) {
			    print $t->{pkgname}, ": $dep not found\n";
			    $t->{missing_deps}->{$dep} = 1;
		    }
		    next;
		}
		if ($db->{$dep}->{dirs}->{$dir} || 
		    parent_has_dir($db, $db->{$dep}, $dir)) {
			$t->{dirs}->{$dir} = 1;
			return 1;
		}
	}
	return 0;
}

sub parent_has_problem
{
	my ($db, $t, $dir) = @@_;
	for my $dep (keys %{$t->{deps}}) {
		next if !defined $db->{$dep};
		if ($db->{$dep}->{problems}->{$dir}) {
			return 1;
		}
	}
	return 0;
}

sub build_results
{
	my ($db, $mtree) = @@_;

	for my $pkgname (keys %$db) {
		my $t = $db->{$pkgname};
		for my $dir (keys(%{$t->{need_dirs}})) {
			next if $t->{dirs}->{$dir};
			next if $mtree->{$dir};
			next if parent_has_dir($db, $t, $dir);
			$t->{problems}->{$dir} = 1;
		}
	}
}

sub show_results
{
	my ($state, $db, $mtree) = @@_;

	for my $pkgname (sort keys %$db) {
		my @@l=();
		my $t = $db->{$pkgname};
		for my $dir (keys %{$t->{problems}}) {
			next if parent_has_problem($db, $t, $dir);
			push(@@l, $dir);
		}
		if (@@l != 0) {
			$state->say("#1: #2", $pkgname, join(', ', sort @@l));
		}
	}
}

my $state = OpenBSD::AddCreateDelete::State->new('check-common-dirs');
$state->handle_options('', '[-mx]');
if (@@ARGV==0) {
	@@ARGV=(<*.tgz>);
}
my $db = {};
my $mtree = {};

OpenBSD::Mtree::parse($mtree, '/usr/local', '/etc/mtree/BSD.local.dist');
OpenBSD::Mtree::parse($mtree, '/', '/etc/mtree/4.4BSD.dist');
OpenBSD::Mtree::parse($mtree, '/', '/etc/mtree/BSD.x11.dist');
$mtree->{'/usr/local/lib/X11'} = 1;
$mtree->{'/usr/local/include/X11'} = 1;
$mtree->{'/usr/local/lib/X11/app-defaults'} = 1;

$state->progress->for_list("Scanning packages", \@@ARGV,
    sub {
    	my $pkgname = shift;
	my $true_package = $state->repo->find($pkgname);
	return unless $true_package;
	my $dir = $true_package->info;
	$true_package->close;
	my $plist = OpenBSD::PackingList->fromfile($dir.CONTENTS);
	rmtree($dir);
	analyze($plist, $db);
    });

build_results($db, $mtree);
show_results($state, $db);
@


1.10
log
@convert to newer interface. MAKE SURE you have -current pkg_add to run register_plist !
@
text
@d3 1
a3 1
# $OpenBSD: check-common-dirs,v 1.9 2010/03/20 18:04:28 espie Exp $
@


1.9
log
@handle modern dependencies.
@
text
@d3 1
a3 1
# $OpenBSD: check-common-dirs,v 1.7 2007/05/13 08:03:47 espie Exp $
a26 1
use OpenBSD::PackageLocator;
d30 1
d138 1
a138 1
	my ($db, $mtree) = @@_;
d148 1
a148 1
			print "$pkgname: ", join(', ', sort @@l), "\n";
d153 2
a154 2
print "Scanning packages\n";
print "-----------------\n";
d168 5
a172 4
for my $pkgname (@@ARGV) {
	print STDERR "$pkgname\n";
	my $true_package = OpenBSD::PackageLocator->find($pkgname);
	next unless $true_package;
d178 1
a178 1
}
d181 1
a181 1
show_results($db);
@


1.8
log
@Update for new BSD.x11.dist which is rooted at '/'. ok espie@@
@
text
@d50 1
a50 1
	my $d = File::Spec->canonpath($item->fullname());
d58 1
a58 1
	my $d = File::Spec->canonpath($item->fullname());
d62 1
a62 8
package OpenBSD::PackingElement::PkgDep;
sub check_common_dirs
{
	my ($item, $t) = @@_;
	$t->{deps}->{$item->{name}} = 1;
}

package OpenBSD::PackingElement::Depend;
a68 5
package OpenBSD::PackingElement::Wantlib;
sub check_common_dirs
{
}

d74 1
a74 1
	my $pkgname = $plist->pkgname();
d172 2
a173 2
	my $dir = $true_package->info();
	$true_package->close();
@


1.7
log
@use new-style plist visitors.
@
text
@d3 1
a3 1
# $OpenBSD: check-common-dirs,v 1.6 2005/02/26 13:21:58 espie Exp $
d175 1
a175 1
OpenBSD::Mtree::parse($mtree, '/usr/X11R6', '/etc/mtree/BSD.x11.dist');
@


1.6
log
@oops, Wantlib needs special treatment, removes bogus warnings.
@
text
@d3 1
a3 1
# $OpenBSD: check-common-dirs,v 1.5 2004/11/11 15:38:02 espie Exp $
d97 1
a97 1
	$plist->visit('check_common_dirs', $t)
@


1.5
log
@tell all big analyzers they can forget about the packing-list.
@
text
@d3 1
a3 1
# $OpenBSD: check-common-dirs,v 1.4 2004/10/05 20:40:11 espie Exp $
d76 5
a187 1
	$plist->forget();
@


1.4
log
@use base classes more
@
text
@d3 1
a3 1
# $OpenBSD: check-common-dirs,v 1.3 2004/09/14 22:31:48 espie Exp $
d183 1
@


1.3
log
@handle -> check_common_dirs
use visit
accurate list of existing directories with Mtree.
build better results.
@
text
@d3 1
a3 1
# $OpenBSD: check-common-dirs,v 1.2 2004/08/13 07:45:22 espie Exp $
d54 1
a54 1
package OpenBSD::PackingElement::DirBase;
a61 6
package OpenBSD::PackingElement::DirRm;
sub check_common_dirs
{
	&OpenBSD::PackingElement::DirBase::check_common_dirs;
}

d69 1
a69 1
package OpenBSD::PackingElement::LibDepend;
a73 6
}

package OpenBSD::PackingElement::NewDepend;
sub check_common_dirs
{
	&OpenBSD::PackingElement::LibDepend::check_common_dirs;
@


1.2
log
@don't output pkgname if no problem to output.
okay pvalchev@@
@
text
@d3 1
a3 1
# $OpenBSD: check-common-dirs,v 1.1 2004/08/12 18:58:34 espie Exp $
d30 1
d41 1
a41 1
sub handle
d47 1
a47 1
sub handle
d55 1
a55 1
sub handle
d63 1
a63 1
sub handle
d65 1
a65 1
	&OpenBSD::PackingElement::DirBase::handle;
d69 1
a69 1
sub handle
d76 1
a76 1
sub handle
d83 1
a83 1
sub handle
d85 1
a85 1
	&OpenBSD::PackingElement::LibDepend::handle;
d99 2
a100 1
		deps => {} 
d104 1
a104 10
	for my $listname (qw(pkgdep newdepend libdepend)) {
		if (defined $plist->{$listname}) {
			for my $item (@@{$plist->{$listname}}) {
				$item->handle($t);
			}
		}
	}
	for my $item (@@{$plist->{items}}) {
		$item->handle($t);
	}
d128 13
a140 1
sub show_results
d144 1
a144 1
	for my $pkgname (sort keys %$db) {
a145 1
		my @@l=();
d150 14
a171 24
# read an mtree file, and produce the corresponding directory hierarchy
sub parse_mtree 
{
	my ($mtree, $current, $filename) = @@_;
	open my $file, '<', $filename;
	while(<$file>) {
		chomp;
		s/^\s*//;
		next if /^\#/ || /^\//;
		s/\s.*$//;
		next if /^$/;
		if ($_ eq '..') {
			$current =~ s|/[^/]*$||;
			next;
		} else {
			$current.="/$_";
		}
		$_ = $current;
		while (s|/\./|/|)	{}
		$mtree->{File::Spec->canonpath($_)} = 1;
	}
	close $file;
}

d180 3
a182 3
parse_mtree($mtree, '/usr/local', '/etc/mtree/BSD.local.dist');
parse_mtree($mtree, '/', '/etc/mtree/4.4BSD.dist');
parse_mtree($mtree, '/usr/X11R6', '/etc/mtree/BSD.x11.dist');
d184 1
d198 2
a199 1
show_results($db, $mtree);
@


1.1
log
@script to check that all common dirs are properly tagged in every package
that should tag them (e.g., any package without a parent `dependency'
should have the dir marked).

okay pvalchev@@
@
text
@d3 1
a3 1
# $OpenBSD$
d148 3
a150 1
		print "$pkgname: ", join(', ', sort @@l), "\n";
@

