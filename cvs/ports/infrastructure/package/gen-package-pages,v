head	1.23;
access;
symbols
	OPENBSD_6_1:1.23.0.2
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.21.0.2
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.20.0.24
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.26
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.22
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.20
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.18
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.16
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.14
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.12
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.10
	OPENBSD_5_0:1.20.0.8
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.6
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.4
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.18.0.2
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.17.0.2
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.16.0.2
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.15.0.2
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.13.0.2
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.11.0.4
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.2
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@# @;


1.23
date	2017.01.23.10.50.25;	author phessler;	state Exp;
branches;
next	1.22;
commitid	yS1xcBeiJ4A4XplM;

1.22
date	2016.09.01.09.26.56;	author jasper;	state Exp;
branches;
next	1.21;
commitid	mGXZDACLXraIn0ow;

1.21
date	2016.03.09.17.21.44;	author naddy;	state Exp;
branches;
next	1.20;
commitid	pjIkrlzWLd0hqcyH;

1.20
date	2010.02.05.13.06.04;	author jasper;	state Exp;
branches;
next	1.19;

1.19
date	2009.10.26.20.17.15;	author pvalchev;	state Exp;
branches;
next	1.18;

1.18
date	2009.05.07.00.10.44;	author pvalchev;	state Exp;
branches;
next	1.17;

1.17
date	2008.10.16.23.35.50;	author pvalchev;	state Exp;
branches;
next	1.16;

1.16
date	2008.05.01.00.54.54;	author pvalchev;	state Exp;
branches;
next	1.15;

1.15
date	2007.11.01.16.09.44;	author pvalchev;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.14.16.16.17;	author pvalchev;	state Exp;
branches;
next	1.13;

1.13
date	2006.10.26.00.41.45;	author pvalchev;	state Exp;
branches;
next	1.12;

1.12
date	2006.10.26.00.40.46;	author pvalchev;	state Exp;
branches;
next	1.11;

1.11
date	2005.09.21.04.52.22;	author pvalchev;	state Exp;
branches;
next	1.10;

1.10
date	2005.09.20.17.59.40;	author pvalchev;	state Exp;
branches;
next	1.9;

1.9
date	2005.05.17.22.08.13;	author pvalchev;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.17.16.17.50;	author pvalchev;	state Exp;
branches;
next	1.7;

1.7
date	2005.05.17.16.17.00;	author pvalchev;	state Exp;
branches;
next	1.6;

1.6
date	2005.05.13.17.35.19;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2005.05.13.17.34.19;	author pvalchev;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.15.18.57.16;	author pvalchev;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.15.18.53.24;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.25.00.08.30;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.20.23.47.54;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.23
log
@add aarch64 definitions to the ports framework

facts verified by patrick@@ and kettenis@@
OK sthen@@
@
text
@#!/usr/bin/perl -w

# $OpenBSD: gen-package-pages,v 1.22 2016/09/01 09:26:56 jasper Exp $

# Copyright (c) 2004 Michael Coulter
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#	notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#	notice, this list of conditions and the following disclaimer in the
#	documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE OPENBSD PROJECT AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENBSD
# PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Requires:
# all packages under some $pkgpath, in <arch>/*.tgz
# Outputs result in html/*

use strict;

use OpenBSD::PackageInfo;
use OpenBSD::PackageName;
use OpenBSD::PackageLocator;
use OpenBSD::PackingList;

use subs qw(dprint gen_arch_page gen_pkg_page gen_pkg_listing_page getfile
    htmlfile gen_index_page arch_body arch_foot arch_head index_head 
    index_foot pkg_list pkg_long);

our $osrev = "4.6";
our $debug = 0;
our $html;

my @@arches = qw(aarch64 alpha amd64 arm hppa i386 mips64 mips64el powerpc sh sparc64);
my $pkgpath = "/home/ftp/pub/OpenBSD/$osrev/packages";
my $htmlbase = "html";

mkdir($htmlbase);
foreach (@@arches) {
	mkdir "$htmlbase/$_";
}

gen_index_page(@@arches);

foreach (@@arches) { gen_arch_page($_); }

sub dprint 
{
	if($debug) { print @@_; }
}

sub getdesc
{
	my $fname = shift;
	local $_;

	open(my $f, '<', $fname) or die "No such file $fname\n";
	$_ = <$f>;
	my $result = join('', <$f>);
	close($f);
	return $result;
}

sub getline
{
	my $fname = shift;

	open(my $f, '<', $fname) or die "No such file $fname\n";
	my $line = <$f>;
	chomp($line);
	close($f);
	return $line;
}

sub htmlfile
{
	my $fname = "$htmlbase/".shift;

	open(my $f, '>', $fname) or die "Cannot write to $fname\n";
	return $f;
}

sub gen_arch_page 
{
	my $arch = shift;
	print "generating page for $arch\n";
	my $archfile = htmlfile("$arch.html");

	print $archfile arch_head($arch);

	opendir(my $pkgs, "$pkgpath/$arch") || die "cannot get package listing for $arch: $!\n";
	foreach my $file (sort(readdir($pkgs))) {
		next if ($file =~ /^\./);
		next if ($file =~ /^index.txt$/);
		next if ($file =~ /^pkglocatedb$/);
		next if ($file =~ /^SHA256$/);

		dprint "generating package for $arch/$file\n";
		my $package = OpenBSD::PackageLocator->find("$pkgpath/$arch/$file");
		if(! $package) { die "package error: $pkgpath/$arch/$file $!\n"; }
		my $dir = $package->info();
		$package->close();

		print $archfile arch_body($arch,$file,getline($dir.DESC));
		gen_pkg_page($arch,$file,$dir);

		$package->wipe_info();
	}
	closedir($pkgs);

	print $archfile arch_foot();

	close($archfile);

}

sub gen_pkg_page 
{
	my ($arch,$pkg, $dir) = @@_;
	my $long = htmlfile("$arch/$pkg-long.html");

	my $pkg_info = getdesc($dir.DESC);

	$pkg_info =~ s/\&/\&amp\;/g;
	$pkg_info =~ s/\</\&lt\;/g;
	$pkg_info =~ s/\>/\&gt\;/g;

	print $long pkg_long($arch,$pkg,$pkg_info);
	close($long);
	gen_pkg_listing_page($arch,$pkg,$dir);
}

sub gen_pkg_listing_page 
{
	my ($arch,$pkg,$dir) = @@_;
	my $cont = htmlfile("$arch/$pkg-contents.html");

	my $pkg_info;
	my $plist = OpenBSD::PackingList->fromfile($dir.CONTENTS, \&OpenBSD::PackingList::FilesOnly);

	die "Bad packing list: $!\n" unless defined $plist;

	for my $item (@@{$plist->{items}}) {
		next unless $item->IsFile();
		$pkg_info .= $item->fullname() . "\n";
	}

	if (!$pkg_info) {
		$pkg_info = "empty packing list";
	} 

	print $cont pkg_list($arch,$pkg,$pkg_info);
	close($cont);
}

sub gen_index_page 
{
	my @@arches = @@_;

	my $index = htmlfile("index.html");

	print $index index_head();

	foreach (@@arches) {
		print $index "<a href=\"$_.html\">$_</a>\n";
	}

	print $index index_foot();

	close($index);

}

exit(0);

sub arch_body 
{
	my($arch,$file,$comment) = @@_;

	return <<"EOF";
<tr>
<td><b><a href=$arch/$file-long.html>$file</a></b></td>
<td>&nbsp&nbsp&nbsp<i>$comment</i></td>
<td>[ <a href=ftp://ftp.openbsd.org/pub/OpenBSD/$osrev/packages/$arch/$file>FTP Site1</a> ]</td>
<td>[ <a href=ftp://ftp.usa.openbsd.org/pub/OpenBSD/$osrev/packages/$arch/$file>FTP Site 2</a> ]</td>
</tr>
EOF
}

sub arch_foot 
{
    return <<"EOF";
</table><hr></body></html>
EOF
}

sub arch_head 
{
	my $arch = shift;

	return <<"EOF";
<html>
<body BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#23238E">
<title>OpenBSD Packages ($osrev/$arch)</title>
<img src=http://www.openbsd.org/images/smalltitle.gif><br><br>
<font color=#e00000><h2>Packages</h2></font>
The following table is a listing of the packages currently available for OpenBSD
<font color=#e00000><b>$osrev</b></font>
on the <font color=#e00000><b>$arch</b></font> platform. Make sure you've got
the right version and platform -- chaos will ensue if you are in the wrong
area.

<br><br><hr>

<table>

EOF
}

sub index_head 
{

	return <<"EOF";
<html><title>OpenBSD Packages - Architecture
Selection for OpenBSD $osrev</title>
<body BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#23238E">
<img src=http://www.openbsd.org/images/smalltitle.gif><br><br>
<h2><font color="#e00000">Packages - Architecture Selection for OpenBSD $osrev</font></h2>
Please select the architecture for which you wish to download a package.<br><br><center><h2>
EOF
}

sub index_foot 
{
	return <<"EOF";
<br><br><hr></table></body></html>
EOF
}

sub pkg_list 
{
	my ($arch,$pkg,$pkg_info) = @@_;

	return <<"EOF";
<html><title>OpenBSD Package Details - $pkg</title>
<body BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#23238E">
<img src=http://www.openbsd.org/images/smalltitle.gif><br><br>
<h2><font color=#e0000>Package Information for $pkg ($arch)</font></h2>

    [ <a href=ftp://ftp.openbsd.org/pub/OpenBSD/$osrev/packages/$arch/$pkg>FTP 1</a> ]

    [ <a href=ftp://ftp.usa.openbsd.org/pub/OpenBSD/$osrev/packages/$arch/$pkg>FTP 2</a> ] 

    [ <a href=$pkg-contents.html>Package Contents</a> ]

<br><br><hr><br><pre>
$pkg_info
</pre><hr></body></html>
EOF
}

sub pkg_long 
{
	my ($arch,$pkg,$pkg_info) = @@_;

	return <<"EOF";
<html><title>OpenBSD Package Details - $pkg</title>
<body BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#23238E">
<img src=http://www.openbsd.org/images/smalltitle.gif><br><br>
<h2><font color=#e0000>Package Information for $pkg ($arch)</font></h2>

    [ <a href=ftp://ftp.openbsd.org/pub/OpenBSD/$osrev/packages/$arch/$pkg>FTP 1</a> ]

    [ <a href=ftp://ftp.usa.openbsd.org/pub/OpenBSD/$osrev/packages/$arch/$pkg>FTP 2</a> ] 

    [ <a href=$pkg-contents.html>Package Contents</a> ]

<br><br><hr><br><pre>
$pkg_info
</pre><hr></body></html>
EOF
}
@


1.22
log
@retire sparc
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.21 2016/03/09 17:21:44 naddy Exp $
d47 1
a47 1
my @@arches = qw(alpha amd64 arm hppa i386 mips64 mips64el powerpc sh sparc64);
@


1.21
log
@We are done providing support for the vax.
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.20 2010/02/05 13:06:04 jasper Exp $
d47 1
a47 1
my @@arches = qw(alpha amd64 arm hppa i386 mips64 mips64el powerpc sh sparc sparc64);
@


1.20
log
@- mention mips64el where applicable

ok espie@@ ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.19 2009/10/26 20:17:15 pvalchev Exp $
d47 1
a47 1
my @@arches = qw(alpha amd64 arm hppa i386 mips64 mips64el powerpc sh sparc sparc64 vax);
@


1.19
log
@update for 4.6 (account for SHA256 being there too)
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.18 2009/05/07 00:10:44 pvalchev Exp $
d47 1
a47 1
my @@arches = qw(alpha amd64 arm hppa i386 mips64 powerpc sh sparc sparc64 vax);
@


1.18
log
@4.5
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.17 2008/10/16 23:35:50 pvalchev Exp $
d43 1
a43 1
our $osrev = "4.5";
d109 1
@


1.17
log
@bring up to speed for 4.4
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.16 2008/05/01 00:54:54 pvalchev Exp $
d43 1
a43 1
our $osrev = "4.4";
@


1.16
log
@4.3 updates
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.15 2007/11/01 16:09:44 pvalchev Exp $
d43 1
a43 1
our $osrev = "4.3";
d47 1
a47 1
my @@arches = qw(alpha amd64 arm hppa i386 m68k m88k mips64 powerpc sh sparc sparc64 vax);
@


1.15
log
@update
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.14 2007/05/14 16:16:17 pvalchev Exp $
d43 1
a43 1
our $osrev = "4.2";
d47 1
a47 1
my @@arches = qw(alpha amd64 arm hppa i386 m68k powerpc sh sparc sparc64 vax);
@


1.14
log
@4.1; beck
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.10 2005/09/20 17:59:40 pvalchev Exp $
d43 1
a43 1
our $osrev = "4.1";
d47 1
a47 1
my @@arches = qw(alpha amd64 arm hppa i386 m68k mips64 powerpc sh sparc sparc64 vax);
@


1.13
log
@4.0
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.12 2006/10/26 00:40:46 pvalchev Exp $
d43 1
a43 1
our $osrev = "4.0";
d47 1
a47 1
my @@arches = qw(alpha amd64 arm hppa i386 m68k mips64 powerpc sparc sparc64 vax);
@


1.12
log
@update list of architectures
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.10 2005/09/20 17:59:40 pvalchev Exp $
d43 1
a43 1
our $osrev = "3.8";
@


1.11
log
@change to cope with the new comment/descr package format; ok espie mjc
@
text
@d47 1
a47 1
my @@arches = qw(alpha amd64 arm hppa i386 m68k m88k mips64 powerpc sparc sparc64 vax);
@


1.10
log
@some 3.8 updates
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.9 2005/05/17 22:08:13 pvalchev Exp $
d65 1
a65 1
sub getfile
d68 1
d71 1
d77 11
d116 1
a116 1
		print $archfile arch_body($arch,$file,getfile($dir.COMMENT));
d118 2
d134 1
a134 1
	my $pkg_info = getfile($dir.DESC);
@


1.9
log
@sort list of pkgs properly; ok and tweak espie
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.8 2005/05/17 16:17:50 pvalchev Exp $
d43 1
a43 1
our $osrev = "3.7";
d95 1
a95 1
		next if ($file =~ /^pkglocatedb.gz$/);
@


1.8
log
@ignore "pkglocatedb.gz" in the listing as well
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.7 2005/05/17 16:17:00 pvalchev Exp $
d92 1
a92 1
	while (my $file = readdir($pkgs)) {
@


1.7
log
@- print pathname of file in case of error
- fix up comment
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.6 2005/05/13 17:35:19 pvalchev Exp $
d95 1
@


1.6
log
@missed mips64, also update osrev=3.7
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.5 2005/05/13 17:34:19 pvalchev Exp $
d29 1
a29 2
# ./INDEX
# all packages under some path, <arch>/*.tgz
d98 1
a98 1
		if(! $package) { die "package error: $!\n"; }
@


1.5
log
@update list of all arches
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.4 2004/09/15 18:57:16 pvalchev Exp $
d44 1
a44 1
our $osrev = "3.6";
d48 1
a48 1
my @@arches = qw(alpha amd64 arm hppa i386 m68k m88k powerpc sparc sparc64 vax);
@


1.4
log
@update list of arches for 3.6
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.3 2004/09/15 18:53:24 pvalchev Exp $
d48 1
a48 1
my @@arches = qw(alpha amd64 hppa i386 m68k powerpc sparc sparc64 vax);
@


1.3
log
@ignore "index.txt" file found in ftp directories
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.2 2004/02/25 00:08:30 espie Exp $
d44 1
a44 1
our $osrev = "3.4";
d48 1
a48 1
my @@arches = qw(alpha hppa i386 m68k powerpc sparc sparc64 vax);
@


1.2
log
@slight clean-up. Result tested by pvalchev@@
@
text
@d3 1
a3 1
# $OpenBSD: gen-package-pages,v 1.1 2004/02/20 23:47:54 pvalchev Exp $
d95 1
@


1.1
log
@new script to generate package index/description pages for a certain release.
written by Michael Coulter <mjc@@bitz.ca>
@
text
@d3 1
a3 1
# $OpenBSD$
d40 4
d50 1
d52 4
a55 2
mkdir("html");
map { mkdir("html/$_") } @@arches;
d61 2
a62 1
sub dprint {
d66 20
a85 1
sub gen_arch_page {
d88 1
a88 1
	open(ARCH,"> html/$arch.html") || die "cannot open file $arch.html: $!\n";
d90 1
a90 2
	&arch_head($arch);
	print ARCH $html;
d92 2
a93 2
	opendir(PKGS, "$pkgpath/$arch") || die "cannot get package listing for $arch: $!\n";
	while (my $file = readdir(PKGS)) {
d99 1
a99 1
		my $dir = $package->info;
a100 1
		my $comment = "";
d102 1
a102 6
		open(IN,"<",$dir.COMMENT) or die "cannot get comment: $!\n";
		while(<IN>) { $comment .= $_ }
		close(IN);

		arch_body($arch,$file,$comment);
		print ARCH $html;
d105 1
a105 1
	closedir(PKGS);
d107 1
a107 2
	&arch_foot;
	print ARCH $html;
d109 1
a109 1
	close(ARCH);
d113 2
a114 1
sub gen_pkg_page {
d116 1
a116 1
	open(LONG, "> html/$arch/$pkg-long.html");
d118 1
a118 4
	my $pkg_info;
	open(IN,"<",$dir.DESC) or die "cannot get description: $!\n";
	while(<IN>) { $pkg_info .= $_ }
	close(IN);
d124 2
a125 3
	&pkg_long($arch,$pkg,$pkg_info);
	print LONG $html;
	close(LONG);
d129 2
a130 1
sub gen_pkg_listing_page {
d132 1
a132 1
	open(CONT, "> html/$arch/$pkg-contents.html");
d148 2
a149 3
	&pkg_list($arch,$pkg,$pkg_info);
	print CONT $html;
	close(CONT);
d152 2
a153 1
sub gen_index_page {
d156 1
a156 1
	open(INDEX,"> html/index.html") || die "cannot open file INDEX: $!\n";
d158 1
a158 2
	&index_head;
	print INDEX $html;
d160 3
a162 2
	map { $html .= "<a href=$_.html>$_</a>\n" } @@arches;
	print INDEX $html;
d164 1
a164 2
	&index_foot;
	print INDEX $html;
d166 1
a166 1
	close(INDEX);
d172 2
a173 1
sub arch_body {
d176 1
a176 1
$html =<<"EOF";
d186 3
a188 3
sub arch_foot {

$html= <<"EOF";
a190 1

d193 3
a195 2
sub arch_head {
	my $arch = shift @@_;
d197 1
a197 1
$html =<<"EOF";
d216 2
a217 1
sub index_head {
d219 1
a219 1
$html =<<"EOF";
d229 3
a231 3
sub index_foot {

$html =<<"EOF";
d236 2
a237 1
sub pkg_list {
d240 1
a240 1
$html =<<"EOF";
d258 2
a259 1
sub pkg_long {
d262 1
a262 1
$html =<<"EOF";
@

