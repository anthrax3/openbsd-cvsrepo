head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.58
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.56
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.54
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.50
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.52
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.48
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.46
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.44
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.42
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.40
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.38
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.36
	OPENBSD_5_0:1.5.0.34
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.32
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.30
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.28
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.26
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.1.1.1.0.14
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.12
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.10
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.8
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.6
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	infra-0:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2003.06.12.22.30.28;	author marc;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.12.22.13.41;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.24.07.01.25;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.24.06.49.33;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	99.05.18.16.39.05;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.18.16.39.05;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@un-typo my address
@
text
@#! /bin/sh
#
# $OpenBSD: check-license,v 1.4 2003/06/12 22:13:41 marc Exp $
#
# PUBLIC DOMAIN -- Marco S Hyman -- <marc@@snafu.org>
#
# This script verifies that all files in a given directory are
# mentioned in the ports LICENSE file as Distribution allowed.
# Output is three lists:
#
#  Missing files:	files that should be in the directory (if the
#			intent is to obtain all files that can be
#			re-distributed) but are not.
#
#  Bad files:		files that must NOT be in a distribution
#			directory.  These are listed in the form
#			of a shell `mv -f xxx ../licensed' command so
#			they can be fed to the shell (after manual
#			verification) to move them into a directory
#			that will not be copied to any CD-ROM.
#
#  Unknown files:	files that are noted in the LICENSE file but
#			do not have a distribution flag of either Y or N.
#
#  Extra files:		Files that are in the given directory that are
#			not mentioned in the ports LICENSE file.
#

# The ports base directory.  Note: this may be supplied from the environment
# using the standard bsd.port.mk name of PORTSDIR
#
LICENCE=${PORTSDIR:-/usr/ports}/LICENSE

# Our name and a function to spit out the usage.  Exit.
#
prog=`basename $0`
usage () {
    if [ ! -z "$1" ]; then
	echo "$prog: $1"
    fi
    echo "usage: $prog distribution-directory"
    exit 1
}

# Verify we have one param and that it is the name of a directory.
# If not spit out our usage and exit
#
if [ $# -eq 1 ]; then
    if [ -d $1 ]; then
	DIST=$1
    else
	usage "$1 is not a directory"
    fi
else
    usage
fi

# This awk script matches the license file against an `ls' of the given
# distribution directory and spits instructions out to stdout.
#
/bin/ls $DIST |
awk -v L=$LICENCE '
BEGIN {
    # Process license file
    #
    while ( getline <L ) {
	if ( NF == 4 ) {
	    if ( $1 == "Y" ) {
		good_files[ $3 ] = 0
	    } else if ( $1 == "N" ) {
		bad_files[ $3 ] = 0
	    } else {
	        unk_files[ $3 ] = 0
	    }
	}
    }
    extra_count = 0
}

$1 in good_files {
    good_files[ $1 ] = 1
    next
}
$1 in bad_files {
    bad_files[ $1 ] = 1
    next
}
$1 in unk_files {
    unk_files[ $1 ] = 1
    next
}
{
    extra_files[ extra_count++ ] = $1
}

END {
    header = 0
    for ( f in good_files ) {
	if ( good_files[ f ] == 0 ) {
	    if ( ! header ) {
		print "You are missing the following files:"
		print
		header = 1
	    }
	    print f
	}
    }
    for ( f in unk_files ) {
	if ( unk_files[ f ] == 0 ) {
	    if ( ! header ) {
		print "You are missing the following files:"
		print
		header = 1
	    }
	    print f
	}
    }
    if ( header ) {
	print
	header = 0
    }
    for ( f in bad_files ) {
	if ( bad_files[ f ] == 1 ) {
	    if ( ! header ) {
		print "You MUST move the following files/directories:"
		print
		header = 1
	    }
	    print "/bin/mv -f", f, "../licensed"
	}
    }
    if ( header ) {
	print
	header = 0
    }
    for ( f in unk_files ) {
	if ( unk_files[ f ] == 1 ) {
	    if ( ! header ) {
		print "The status of the following files is unknown:"
		print
		header = 1
	    }
	    print f
	}
    }
    if ( header ) {
	print
	header = 0
    }

    if ( extra_count > 0 ) {
	print "The following files/dirs are extra and " \
	      "should probably be removed:"
	print
	for ( i = 0; i < extra_count; i += 1 ) {
	    print "/bin/rm -rf", extra_files[ i ]
	}
	print
    }
}
' 
exit 0
@


1.4
log
@license for license-check (public domain)
@
text
@d3 1
a3 1
# $OpenBSD: check-license,v 1.3 2003/02/24 07:01:25 pvalchev Exp $
d5 1
a5 1
# PUBLIC DOMAIN -- Marco S Hyman -- <marc@@snadfu.org>
@


1.3
log
@missed "of of"; David Krause
@
text
@d3 3
a5 1
# $OpenBSD: check-license,v 1.2 2003/02/24 06:49:33 pvalchev Exp $
@


1.2
log
@agains->against; David Krause
@
text
@d3 1
a3 1
# $OpenBSD: check-license,v 1.1.1.1 1999/05/18 16:39:05 espie Exp $
d56 1
a56 1
# This awk script matches the license file against an `ls' of of the given
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
# $OpenBSD: license-check,v 1.4 1998/09/25 02:34:31 marc Exp $
d56 1
a56 1
# This awk script matches the license file agains an `ls' of of the given
@


1.1.1.1
log
@infrastructure framework: helper scripts and other stuff needed for
ports, long-term.
@
text
@@
