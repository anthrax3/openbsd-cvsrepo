head	1.6;
access;
symbols
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2017.02.20.17.14.31;	author jca;	state Exp;
branches;
next	1.5;
commitid	WHSjcXb351Rm5oFZ;

1.5
date	2015.09.08.17.48.55;	author sthen;	state dead;
branches;
next	1.4;
commitid	VQR9r5oF3wOS8DRl;

1.4
date	2015.01.10.12.00.07;	author sthen;	state Exp;
branches;
next	1.3;
commitid	O3vkpKQB3Cadp8Th;

1.3
date	2014.08.24.20.29.08;	author landry;	state Exp;
branches;
next	1.2;
commitid	wDAAshFoHkBKoAu9;

1.2
date	2014.07.05.10.03.05;	author sthen;	state Exp;
branches;
next	1.1;
commitid	nlP6EECq3goMn3PI;

1.1
date	2014.01.29.16.26.17;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Adapt after the struct ipipstat members size bump
@
text
@$OpenBSD$
--- stats.c.orig	Mon Feb 20 18:07:23 2017
+++ stats.c	Mon Feb 20 18:07:30 2017
@@@@ -576,16 +576,16 @@@@ ipip_stats()
 #define p(f, m) if (ipipstat.f || sflag <= 1) \
     printf(m, ipipstat.f, plural(ipipstat.f))
 
-	p(ipips_ipackets, "\t%u total input packet%s\n");
-	p(ipips_opackets, "\t%u total output packet%s\n");
-	p(ipips_hdrops, "\t%u packet%s shorter than header shows\n");
-	p(ipips_pdrops, "\t%u packet%s dropped due to policy\n");
-	p(ipips_spoof, "\t%u packet%s with possibly spoofed local addresses\n");
-	p(ipips_qfull, "\t%u packet%s were dropped due to full output queue\n");
-	p(ipips_ibytes, "\t%qu input byte%s\n");
-	p(ipips_obytes, "\t%qu output byte%s\n");
-	p(ipips_family, "\t%u protocol family mismatche%s\n");
-	p(ipips_unspec, "\t%u attempts to use tunnel with unspecified endpoint%s\n");
+	p(ipips_ipackets, "\t%llu total input packet%s\n");
+	p(ipips_opackets, "\t%llu total output packet%s\n");
+	p(ipips_hdrops, "\t%llu packet%s shorter than header shows\n");
+	p(ipips_pdrops, "\t%llu packet%s dropped due to policy\n");
+	p(ipips_spoof, "\t%llu packet%s with possibly spoofed local addresses\n");
+	p(ipips_qfull, "\t%llu packet%s were dropped due to full output queue\n");
+	p(ipips_ibytes, "\t%llu input byte%s\n");
+	p(ipips_obytes, "\t%llu output byte%s\n");
+	p(ipips_family, "\t%llu protocol family mismatche%s\n");
+	p(ipips_unspec, "\t%llu attempts to use tunnel with unspecified endpoint%s\n");
 #undef p
 }
 
@


1.5
log
@update to a new snapshot of nsh
@
text
@d1 6
a6 9
$OpenBSD: patch-stats_c,v 1.4 2015/01/10 12:00:07 sthen Exp $
--- stats.c.orig	Sat May  3 22:50:07 2014
+++ stats.c	Sat Jan 10 11:57:38 2015
@@@@ -36,6 +36,7 @@@@
 #include <sys/mbuf.h>
 #include <sys/protosw.h>
 #include <sys/sysctl.h>
+#include <sys/pool.h>
 #include <errno.h>
d8 22
a29 3
 #include <net/route.h>
@@@@ -83,7 +84,7 @@@@ static int sflag = 1;
 typedef int bool;
a30 39
 struct  mbstat mbstat;
-struct pool mbpool, mclpool;
+struct kinfo_pool mbpool, mclpool;
 
 #ifdef INET6
 char	*inet6name(struct in6_addr *);
@@@@ -776,7 +777,7 @@@@ mbpr(void)
 	int totmem, totused, totmbufs, totpct;
 	int i, mib[4], npools, flag = 0;
 	bool seen[256];
-	struct pool pool;
+	struct kinfo_pool pool;
 	struct mbtypes *mp;
 	size_t size;
 	int page_size = getpagesize();
@@@@ -813,7 +814,7 @@@@ mbpr(void)
 		mib[1] = KERN_POOL;
 		mib[2] = KERN_POOL_POOL;
 		mib[3] = i;
-		size = sizeof(struct pool);
+		size = sizeof(struct kinfo_pool);
 		if (sysctl(mib, 4, &pool, &size, NULL, 0) < 0) {
 			if (errno == ENOENT)
 				continue;
@@@@ -831,12 +832,12 @@@@ mbpr(void)
 		}
 
 		if (!strncmp(name, "mbpl", strlen("mbpl"))) {
-			bcopy(&pool, &mbpool, sizeof(struct pool));
+			bcopy(&pool, &mbpool, sizeof(struct kinfo_pool));
 			flag++;
 		} else {
 			if (!strncmp(name, "mclpl", strlen("mclpl"))) {
 				bcopy(&pool, &mclpool,
-				    sizeof(struct pool));
+				    sizeof(struct kinfo_pool));
 				flag++;
 			}
 		}
@


1.4
log
@Switch shells/nsh to fetching from github, which has most of our patches
rolled in. (Build currently fails due to noinet6 changes, this change
doesn't fix this yet).
@
text
@d1 1
a1 1
$OpenBSD: patch-stats_c,v 1.3 2014/08/24 20:29:08 landry Exp $
@


1.3
log
@Unbreak, needs #include <sys/pool.h> now ?
@
text
@d1 3
a3 3
$OpenBSD: patch-stats_c,v 1.2 2014/07/05 10:03:05 sthen Exp $
--- stats.c.orig	Sun Feb 10 19:36:49 2013
+++ stats.c	Sun Aug 24 22:27:36 2014
d21 1
a21 41
@@@@ -132,7 +133,7 @@@@ tcp_stats()
 	p(tcps_sndprobe, "\t\t%u window probe packet%s\n");
 	p(tcps_sndwinup, "\t\t%u window update packet%s\n");
 	p(tcps_sndctrl, "\t\t%u control packet%s\n");
-	p(tcps_outhwcsum, "\t\t%u packet%s hardware-checksummed\n");
+	p(tcps_outswcsum, "\t\t%u packet%s software-checksummed\n");
 	p(tcps_rcvtotal, "\t%u packet%s received\n");
 	p2(tcps_rcvackpack, tcps_rcvackbyte, "\t\t%u ack%s (for %qd byte%s)\n");
 	p(tcps_rcvdupack, "\t\t%u duplicate ack%s\n");
@@@@ -157,7 +158,7 @@@@ tcp_stats()
 	p1(tcps_rcvshort, "\t\t%u discarded because packet too short\n");
 	p1(tcps_rcvnosec, "\t\t%u discarded for missing IPsec protection\n");
 	p1(tcps_rcvmemdrop, "\t\t%u discarded due to memory shortage\n");
-	p(tcps_inhwcsum, "\t\t%u packet%s hardware-checksummed\n");
+	p(tcps_inswcsum, "\t\t%u packet%s software-checksummed\n");
 	p(tcps_rcvbadsig, "\t\t%u bad/missing md5 checksum%s\n");
 	p(tcps_rcvgoodsig, "\t\t%qd good md5 checksum%s\n");
 	p(tcps_connattempt, "\t%u connection request%s\n");
@@@@ -249,8 +250,8 @@@@ udp_stats()
 	p1(udps_badlen, "\t%lu with bad data length field\n");
 	p1(udps_badsum, "\t%lu with bad checksum\n");
 	p1(udps_nosum, "\t%lu with no checksum\n");
-	p(udps_inhwcsum, "\t%lu input packet%s hardware-checksummed\n");
-	p(udps_outhwcsum, "\t%lu output packet%s hardware-checksummed\n");
+	p(udps_inswcsum, "\t%lu input packet%s software-checksummed\n");
+	p(udps_outswcsum, "\t%lu output packet%s software-checksummed\n");
 	p1(udps_noport, "\t%lu dropped due to no socket\n");
 	p(udps_noportbcast, "\t%lu broadcast/multicast datagram%s dropped due to no socket\n");
 	p1(udps_nosec, "\t%lu dropped due to missing IPsec protection\n");
@@@@ -323,8 +324,8 @@@@ ip_stats()
 	p(ips_toolong, "\t%lu packet%s with ip length > max ip packet size\n");
 	p(ips_nogif, "\t%lu tunneling packet%s that can't find gif\n");
 	p(ips_badaddr, "\t%lu datagram%s with bad address in header\n");
-	p(ips_inhwcsum, "\t%lu input datagram%s checksum-processed by hardware\n");
-	p(ips_outhwcsum, "\t%lu output datagram%s checksum-processed by hardware\n");
+	p(ips_inswcsum, "\t%lu input datagram%s software-checksummed\n");
+	p(ips_outswcsum, "\t%lu output datagram%s software-checksummed\n");
 	p(ips_notmember, "\t%lu multicast packet%s which we don't join\n");
 #undef p
 #undef p1
@@@@ -788,7 +789,7 @@@@ mbpr(void)
d30 1
a30 1
@@@@ -825,7 +826,7 @@@@ mbpr(void)
d39 1
a39 1
@@@@ -843,12 +844,12 @@@@ mbpr(void)
@


1.2
log
@fix following move from struct pool to struct kinfo_pool for userland
@
text
@d1 12
a12 4
$OpenBSD: patch-stats_c,v 1.1 2014/01/29 16:26:17 naddy Exp $
--- stats.c.orig	Sun Feb 10 18:36:49 2013
+++ stats.c	Sat Jul  5 11:01:08 2014
@@@@ -83,7 +83,7 @@@@ static int sflag = 1;
d21 1
a21 1
@@@@ -132,7 +132,7 @@@@ tcp_stats()
d30 1
a30 1
@@@@ -157,7 +157,7 @@@@ tcp_stats()
d39 1
a39 1
@@@@ -249,8 +249,8 @@@@ udp_stats()
d50 1
a50 1
@@@@ -323,8 +323,8 @@@@ ip_stats()
d61 1
a61 1
@@@@ -788,7 +788,7 @@@@ mbpr(void)
d70 1
a70 1
@@@@ -825,7 +825,7 @@@@ mbpr(void)
d79 1
a79 1
@@@@ -843,12 +843,12 @@@@ mbpr(void)
@


1.1
log
@Catch up with network header changes and fix time_t type mismatches.
@
text
@d1 12
a12 3
$OpenBSD$
--- stats.c.orig	Sun Feb 10 19:36:49 2013
+++ stats.c	Tue Jan 28 20:07:06 2014
d53 33
@

