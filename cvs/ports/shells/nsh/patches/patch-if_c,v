head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.2
	OPENBSD_6_1_BASE:1.10
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	phessler_20120917:1.1.1.1
	phessler:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2017.01.26.12.30.02;	author naddy;	state Exp;
branches;
next	1.9;
commitid	stiR17pMhtPummAL;

1.9
date	2015.09.08.17.48.55;	author sthen;	state dead;
branches;
next	1.8;
commitid	VQR9r5oF3wOS8DRl;

1.8
date	2015.03.16.15.21.58;	author naddy;	state Exp;
branches;
next	1.7;
commitid	VQTE4hjgup8p9BGC;

1.7
date	2015.01.10.13.06.14;	author sthen;	state Exp;
branches;
next	1.6;
commitid	RPfdPDOxHwSWl21Z;

1.6
date	2015.01.10.12.44.01;	author sthen;	state Exp;
branches;
next	1.5;
commitid	iTyrNOxYupakCTaw;

1.5
date	2015.01.10.12.00.07;	author sthen;	state dead;
branches;
next	1.4;
commitid	O3vkpKQB3Cadp8Th;

1.4
date	2014.01.29.16.26.17;	author naddy;	state Exp;
branches;
next	1.3;

1.3
date	2013.11.27.14.14.22;	author jca;	state Exp;
branches;
next	1.2;

1.2
date	2013.02.12.16.23.33;	author chris;	state dead;
branches;
next	1.1;

1.1
date	2012.09.17.13.51.51;	author phessler;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.09.17.13.51.51;	author phessler;	state Exp;
branches;
next	;


desc
@@


1.10
log
@fix build after recent network changes
@
text
@$OpenBSD$
--- if.c.orig	Thu Jan 26 13:24:27 2017
+++ if.c	Thu Jan 26 13:24:45 2017
@@@@ -424,7 +424,7 @@@@ show_vnet_parent(int ifs, char *ifname)
 	strlcpy(ifr.ifr_name, ifname, sizeof(ifr.ifr_name));
 
 	if (ioctl(ifs, SIOCGVNETID, (caddr_t)&ifr) != -1)
-		printf(" vnetid %d,", ifr.ifr_vnetid);
+		printf(" vnetid %lld,", ifr.ifr_vnetid);
 #ifdef SIOCGIFPARENT	/* 6.0+ */
 	if (ioctl(ifs, SIOCGIFPARENT, (caddr_t)&ifp) != -1)
 		printf(" parent %s,", ifp.ifp_parent);
@


1.9
log
@update to a new snapshot of nsh
@
text
@d1 5
a5 12
$OpenBSD: patch-if_c,v 1.8 2015/03/16 15:21:58 naddy Exp $

Initial handling of NOINET6 removal (post-5.6).

XXX "no inet6" (to remove ip6 from an interface after it has been
explicitly or implicitly added) is not yet supported.

XXX "inet6 autoconf" also needs to be handled (replacement for rtsol).

--- if.c.orig	Sat May  3 23:50:07 2014
+++ if.c	Mon Mar 16 16:16:19 2015
@@@@ -16,7 +16,6 @@@@
d7 6
a12 76
 #include <stdio.h>
 #include <ctype.h>
-#include <tzfile.h>
 #include <stdlib.h>
 #include <unistd.h>
 #include <string.h>
@@@@ -173,12 +172,12 @@@@ show_int(int argc, char **argv)
 	if (if_data.ifi_lastchange.tv_sec) {
 		gettimeofday(&tv, (struct timezone *)0);
 		c = difftime(tv.tv_sec, if_data.ifi_lastchange.tv_sec);
-		days = c / SECSPERDAY;
-		c %= SECSPERDAY;
-		hours = c / SECSPERHOUR;
-		c %= SECSPERHOUR;
-		mins = c / SECSPERMIN;
-		c %= SECSPERMIN;
+		days = c / (24 * 60 * 60);
+		c %= (24 * 60 * 60);
+		hours = c / (60 * 60);
+		c %= (60 * 60);
+		mins = c / 60;
+		c %= 60;
 		printf(" (last change ");
 		if (days)
 			printf("%id ", days);
@@@@ -628,12 +627,32 @@@@ set_ifxflags(char *ifname, int ifs, int flags)
 	ifr.ifr_flags = flags;
 
 	if (ioctl(ifs, SIOCSIFXFLAGS, (caddr_t)&ifr) < 0) {
-		printf("%% get_ifxflags: SIOCSIFXFLAGS: %s\n", strerror(errno));
+		printf("%% set_ifxflags: SIOCSIFXFLAGS: %s\n", strerror(errno));
 	}
 
 	return(0);
 }
 
+void
+addaf(const char *vname, int value)
+{
+	struct if_afreq ifar;
+	int s;
+
+	s = socket(AF_INET6, SOCK_DGRAM, 0);
+	if (s < 0) {
+		printf("%% socket failed: %s\n", strerror(errno));
+		return;
+	}
+
+	strlcpy(ifar.ifar_name, vname, sizeof(ifar.ifar_name));
+	ifar.ifar_af = value;
+	if (ioctl(s, SIOCIFAFATTACH, (caddr_t)&ifar) < 0)
+		printf("%% addaf: SIOCIFAFATTACH");
+
+	close(s);
+}
+
 int
 intip(char *ifname, int ifs, int argc, char **argv)
 {
@@@@ -1496,7 +1515,7 @@@@ intxflags(char *ifname, int ifs, int argc, char **argv
 	} else if (isprefix(argv[0], "mpls")) {
 		value = IFXF_MPLS;
 	} else if (isprefix(argv[0], "inet6")) {
-		value = -IFXF_NOINET6;
+		addaf(ifname, AF_INET6);
 	} else if (isprefix(argv[0], "wol")) {
 		value = IFXF_WOL;
 	} else {
@@@@ -1793,6 +1812,7 @@@@ intrtd(char *ifname, int ifs, int argc, char **argv)
 		set = 1;
 
 	if (isprefix(argv[0], "rtsol")) {
+		/* XXX BROKEN: this has been replaced with IFXF_AUTOCONF6 */
 		cmdname = "rtsol";
 		cmdpath = RTSOL;
 	} else if (isprefix(argv[0], "rtadvd")) {
@


1.8
log
@Stop using <tzfile.h>.
@
text
@d1 1
a1 1
$OpenBSD: patch-if_c,v 1.7 2015/01/10 13:06:14 sthen Exp $
@


1.7
log
@oops, stray character
@
text
@d1 1
a1 1
$OpenBSD: patch-if_c,v 1.6 2015/01/10 12:44:01 sthen Exp $
d10 30
a39 3
--- if.c.orig	Sat May  3 22:50:07 2014
+++ if.c	Sat Jan 10 12:41:53 2015
@@@@ -628,12 +628,32 @@@@ set_ifxflags(char *ifname, int ifs, int flags)
d73 1
a73 1
@@@@ -1496,7 +1516,7 @@@@ intxflags(char *ifname, int ifs, int argc, char **argv
d82 1
a82 1
@@@@ -1793,6 +1813,7 @@@@ intrtd(char *ifname, int ifs, int argc, char **argv)
@


1.6
log
@Patch nsh with an initial fix following NOINET6 removal.

"no inet6" (to remove ip6 from an interface after it has been
explicitly or implicitly added) is not yet supported.

"inet6 autoconf" also needs to be handled (replacement for rtsol).
@
text
@d1 1
a1 1
$OpenBSD$
a62 9
@@@@ -1818,7 +1839,7 @@@@ intrtd(char *ifname, int ifs, int argc, char **argv)
 	if (dbreturn->sl_cur > 0) {
 		/* already found in db for ifname */
 		if (!set) {
-			if (db_delete_flag_x_ctl(cmdname, ifname) < 0)
+			if (db_delete_flag_x_ctl(cmdname, ifname) < 0o
 				printf("%% database delete failure\n");
 		} else {
 			printf("%% %s already running\n", cmdname);
@


1.5
log
@Switch shells/nsh to fetching from github, which has most of our patches
rolled in. (Build currently fails due to noinet6 changes, this change
doesn't fix this yet).
@
text
@d1 13
a13 6
$OpenBSD: patch-if_c,v 1.4 2014/01/29 16:26:17 naddy Exp $
--- if.c.orig	Sun Feb 10 19:36:49 2013
+++ if.c	Tue Jan 28 23:56:58 2014
@@@@ -170,9 +170,9 @@@@ show_int(int argc, char **argv)
 	printf("  %s is %s", br ? "Bridge" : "Interface",
 	    flags & IFF_UP ? "up" : "down");
d15 3
a17 14
-	if (if_lastchange.tv_sec) {
+	if (if_data.ifi_lastchange.tv_sec) {
 		gettimeofday(&tv, (struct timezone *)0);
-		c = difftime(tv.tv_sec, if_lastchange.tv_sec);
+		c = difftime(tv.tv_sec, if_data.ifi_lastchange.tv_sec);
 		days = c / SECSPERDAY;
 		c %= SECSPERDAY;
 		hours = c / SECSPERHOUR;
@@@@ -182,13 +182,13 @@@@ show_int(int argc, char **argv)
 		printf(" (last change ");
 		if (days)
 			printf("%id ", days);
-		printf("%02i:%02i:%02i)", hours, mins, c);
+		printf("%02i:%02i:%02i)", hours, mins, (int)c);
d20 2
a21 2
 	printf(", protocol is %s", flags & IFF_RUNNING ? "up" : "down");
 	printf("\n");
d23 34
a56 2
-	type = iftype(if_type);
+	type = iftype(if_data.ifi_type);
d58 14
a71 84
 	printf("  Interface type %s", type);
 	if (flags & IFF_BROADCAST)
@@@@ -305,16 +305,17 @@@@ show_int(int argc, char **argv)
 		/*
 		 * Display MTU, line rate
 		 */
-		printf(" MTU %u bytes", if_mtu);
+		printf(" MTU %u bytes", if_data.ifi_mtu);
 		if (ioctl(ifs, SIOCGIFHARDMTU, (caddr_t)&ifr) != -1) {
 			if (ifr.ifr_hardmtu)
 				printf(" (hardmtu %u)", ifr.ifr_hardmtu);
 		}
-		if (if_baudrate)
+		if (if_data.ifi_baudrate)
 			printf(", Line Rate %qu %s\n",
-			    MBPS(if_baudrate) ? MBPS(if_baudrate) :
-			    if_baudrate / 1000,
-			    MBPS(if_baudrate) ? "Mbps" : "Kbps");
+			    MBPS(if_data.ifi_baudrate) ?
+		    	    MBPS(if_data.ifi_baudrate) :
+			    if_data.ifi_baudrate / 1000,
+			    MBPS(if_data.ifi_baudrate) ? "Mbps" : "Kbps");
 		else
 			printf("\n");
  
@@@@ -342,25 +343,30 @@@@ show_int(int argc, char **argv)
 	 * Display remaining info from if_data structure
 	 */
 	printf("  %qu packets input, %qu bytes, %qu errors, %qu drops\n",
-	    if_ipackets, if_ibytes, if_ierrors, if_iqdrops);
+	    if_data.ifi_ipackets, if_data.ifi_ibytes, if_data.ifi_ierrors,
+	    if_data.ifi_iqdrops);
 	printf("  %qu packets output, %qu bytes, %qu errors, %qu unsupported\n",
-	    if_opackets, if_obytes, if_oerrors, if_noproto);
-	if (if_ibytes && if_ipackets && (if_ibytes / if_ipackets) >= ETHERMIN) {
+	    if_data.ifi_opackets, if_data.ifi_obytes, if_data.ifi_oerrors,
+	    if_data.ifi_noproto);
+	if (if_data.ifi_ibytes && if_data.ifi_ipackets &&
+	    (if_data.ifi_ibytes / if_data.ifi_ipackets) >= ETHERMIN) {
 		/* < ETHERMIN means byte counter probably rolled over */
-		printf("  %qu input", if_ibytes / if_ipackets);
+		printf("  %qu input", if_data.ifi_ibytes /
+		    if_data.ifi_ipackets);
 		pntd = 1;
 	} else
 		pntd = 0;
-	if (if_obytes && if_opackets && (if_obytes / if_opackets) >= ETHERMIN) {
+	if (if_data.ifi_obytes && if_data.ifi_opackets &&
+	    (if_data.ifi_obytes / if_data.ifi_opackets) >= ETHERMIN) {
 		/* < ETHERMIN means byte counter probably rolled over */
 		printf("%s%qu output", pntd ? ", " : "  ",
-		    if_obytes / if_opackets);
+		    if_data.ifi_obytes / if_data.ifi_opackets);
 		pntd = 1;
 	}
 	if (pntd)
 		printf(" (average bytes/packet)\n");
 
-	switch(if_type) {
+	switch(if_data.ifi_type) {
 	/*
 	 * These appear to be the only interface types to increase collision
 	 * count in the OpenBSD 3.2 kernel.
@@@@ -369,7 +375,7 @@@@ show_int(int argc, char **argv)
 	case IFT_SLIP:
 	case IFT_PROPVIRTUAL:
 	case IFT_IEEE80211:
-		printf("  %qu collisions\n", if_collisions);
+		printf("  %qu collisions\n", if_data.ifi_collisions);
 		break;
 	default:
 		break;
@@@@ -524,9 +530,9 @@@@ get_ifdata(char *ifname, int type)
 	ifr.ifr_data = (caddr_t)&if_data;
 	if (ioctl(ifs, SIOCGIFDATA, (caddr_t)&ifr) == 0) {
 		if (type == IFDATA_MTU)
-			value = if_mtu;
+			value = if_data.ifi_mtu;
 		else if (type == IFDATA_BAUDRATE)
-			value = if_baudrate;
+			value = if_data.ifi_baudrate;
 	}
 	close(ifs);
 	return (value);
@


1.4
log
@Catch up with network header changes and fix time_t type mismatches.
@
text
@d1 1
a1 1
$OpenBSD: patch-if_c,v 1.3 2013/11/27 14:14:22 jca Exp $
@


1.3
log
@Unbreak after net*/ headers changes.  Patches by mikeb@@, applied
upstream by chris@@.
@
text
@d1 3
a3 3
$OpenBSD$
--- if.c.orig	Tue Nov 26 16:31:55 2013
+++ if.c	Tue Nov 26 17:06:12 2013
d16 8
a23 1
@@@@ -188,7 +188,7 @@@@ show_int(int argc, char **argv)
@


1.2
log
@update to 1.0
ok sthen, naddy
@
text
@d1 6
a6 9
$OpenBSD: patch-if_c,v 1.1 2012/09/17 13:51:51 phessler Exp $

From upstream commit 10030f694cc76f06b16ca8d070d187e693641af3
"autoconfprivacy is now default"

--- if.c.orig	Mon May 21 16:48:58 2012
+++ if.c	Sat Sep 15 05:04:32 2012
@@@@ -1304,7 +1304,7 @@@@ intxflags(char *ifname, int ifs, int argc, char **argv
 		set = 1;
d8 99
a106 6
 	if (isprefix(argv[0], "autoconfprivacy")) {
-		value = IFXF_INET6_PRIVACY;
+		value = -IFXF_INET6_NOPRIVACY;
 	} else if (isprefix(argv[0], "mpls")) {
 		value = IFXF_MPLS;
 	} else if (isprefix(argv[0], "inet6")) {
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@NSH consolidates configuration for interfaces, bridging, routing, PF
packet filtering, NAT, queueing, BGP, OSPF, RIP, IPsec, DHCP, DVMRP,
SNMP, relayd, sshd, inetd, ftp-proxy, resolv.conf and NTP. It presents
the user with a vaguely cisco-like interface with all configuration in
one easy to read text list.

some improvements from, and OK, sthen@@
@
text
@@
