head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.08.07.19.21.08;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2012.09.24.19.33.50;	author pea;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove gcc 2.95 workarounds
@
text
@$OpenBSD: patch-Src_params_c,v 1.1 2012/09/24 19:33:50 pea Exp $

Fix compilation with gcc 2.95.

--- Src/params.c.orig	Fri Aug 10 04:06:11 2012
+++ Src/params.c	Fri Aug 10 04:06:54 2012
@@@@ -4209,6 +4209,17 @@@@ arrfixenv(char *s, char **t)
 int
 zputenv(char *str)
 {
+#ifdef USE_SET_UNSET_ENV
+    char *ptr;
+    int ret;
+#else
+#ifdef HAVE_PUTENV
+#else
+    char **ep;
+    int num_env;
+#endif
+#endif
+
     DPUTS(!str, "Attempt to put null string into environment.");
 #ifdef USE_SET_UNSET_ENV
     /*
@@@@ -4218,8 +4229,6 @@@@ zputenv(char *str)
      * Unfortunately this is a slightly different interface
      * from what zputenv() assumes.
      */
-    char *ptr;
-    int ret;
 
     for (ptr = str; *ptr && *ptr != '='; ptr++)
 	;
@@@@ -4237,10 +4246,6 @@@@ zputenv(char *str)
 #ifdef HAVE_PUTENV
     return putenv(str);
 #else
-    char **ep;
-    int num_env;
-
-
     /* First check if there is already an environment *
      * variable matching string `name'.               */
     if (findenv(str, &num_env)) {
@


1.1
log
@Update to 5.0.0
Add a patch from miod@@ to fix compilation with gcc 2.95

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
@

