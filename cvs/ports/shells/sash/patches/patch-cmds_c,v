head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.12
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.10
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.6
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.28
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.26
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.24
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.22
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.20
	OPENBSD_5_0:1.4.0.18
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.16
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.14
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.12
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.10
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.8
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	lebel_2001-Jul-06:1.1.1.1
	lebel:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2014.05.02.08.29.52;	author benoit;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.06.11.39.53;	author steven;	state Exp;
branches;
next	1.3;

1.3
date	2002.07.21.08.44.35;	author wcobb;	state dead;
branches;
next	1.2;

1.2
date	2002.03.13.13.26.59;	author lebel;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.06.13.33.48;	author lebel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.07.06.13.33.48;	author lebel;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update sash 3.8.

maintainer timeout.
@
text
@$OpenBSD$
--- cmds.c.orig	Fri Mar  7 14:06:29 2014
+++ cmds.c	Sat Apr 26 20:53:08 2014
@@@@ -28,7 +28,6 @@@@
 #else
 #define dev_t unsigned short
 #endif
-#include <linux/loop.h>
 #undef dev_t
 #define dev_t dev_t
 
@@@@ -748,7 +747,6 @@@@
 #elif	HAVE_BSD_MOUNT
 	{
 		struct	    ufs_args ufs;
-		struct	    adosfs_args adosfs;
 		struct	    iso_args iso;
 		struct	    mfs_args mfs;
 		struct	    msdosfs_args msdosfs;
@@@@ -759,13 +757,6 @@@@
 			ufs.fspec = (char*) argv[0];
 			args = &ufs;
 		}
-		else if (!strcmp(type, "adosfs"))
-		{
-			adosfs.fspec = (char*) argv[0];
-			adosfs.uid = 0;
-			adosfs.gid = 0;
-			args = &adosfs;
-		}
 		else if (!strcmp(type, "cd9660"))
 		{
 			iso.fspec = (char*) argv[0];
@@@@ -787,7 +778,7 @@@@
 		{
 			fprintf(stderr, "Unknown filesystem type: %s", type);
 			fprintf(stderr,
-			    "Supported: ffs ufs adosfs cd9660 mfs msdos\n");
+			    "Supported: ffs ufs cd9660 mfs msdos\n");
 
 			return 1;
 		}
@


1.4
log
@adosfs support has been removed; remove it here as well to let this build.
@
text
@d2 11
a12 3
--- cmds.c.orig	Wed Jun  6 13:34:53 2007
+++ cmds.c	Wed Jun  6 13:36:16 2007
@@@@ -594,7 +594,6 @@@@ do_mount(int argc, const char ** argv)
d20 1
a20 2
@@@@ -603,11 +602,6 @@@@ do_mount(int argc, const char ** argv)
 		if(!strcmp(type, "ffs") || !strcmp(type, "ufs")) {
d23 3
a25 1
-		} else if(!strcmp(type, "adosfs")) {
d30 3
a32 1
 		} else if(!strcmp(type, "cd9660")) {
d34 2
a35 3
 			args = &iso;
@@@@ -622,7 +616,7 @@@@ do_mount(int argc, const char ** argv)
 		} else {
d40 2
a41 1
 			return;
a42 1
 
@


1.3
log
@sash 3.6 update.
author has integrated the ffs patches.
@
text
@d1 31
a31 127
$OpenBSD: patch-cmds_c,v 1.2 2002/03/13 13:26:59 lebel Exp $
--- cmds.c.orig	Fri Mar  8 03:27:36 2002
+++ cmds.c	Wed Mar 13 06:53:25 2002
@@@@ -10,7 +10,9 @@@@
 
 #include <sys/types.h>
 #include <sys/stat.h>
+#if	HAVE_BSD_MOUNT
 #include <sys/mount.h>
+#endif
 #include <signal.h>
 #include <pwd.h>
 #include <grp.h>
@@@@ -21,7 +23,6 @@@@
 #include <linux/fs.h>
 #endif
 
-
 void
 do_echo(int argc, const char ** argv)
 {
@@@@ -550,8 +551,19 @@@@ do_mount(int argc, const char ** argv)
 			case 'm':
 				flags |= MS_REMOUNT;
 				break;
-#endif
+#elif	HAVE_BSD_MOUNT
+			case 'r':
+				flags |= MNT_RDONLY;
+				break;
+
+			case 's':
+				flags |= MNT_NOSUID;
+				break;
 
+			case 'e':
+				flags |= MNT_NOEXEC;
+				break;
+#endif
 			default:
 				fprintf(stderr, "Unknown option\n");
 
@@@@ -566,16 +578,83 @@@@ do_mount(int argc, const char ** argv)
 		return;
 	}
 
-	if (mount(argv[0], argv[1], type, flags, 0) < 0)
-		perror("mount failed");
+#if	HAVE_LINUX_MOUNT
+
+ 	if (mount(argv[0], argv[1], type, flags, 0) < 0)
+ 		perror("mount failed");
+
+#elif	HAVE_BSD_MOUNT
+	{
+		struct	    ufs_args ufs;
+		struct	    adosfs_args adosfs;
+		struct	    iso_args iso;
+		struct	    mfs_args mfs;
+		struct	    msdosfs_args msdosfs;
+		void *	    args;
+
+		if(!strcmp(type, "ffs") || !strcmp(type, "ufs")) {
+			ufs.fspec = (char*) argv[0];
+			args = &ufs;
+		} else if(!strcmp(type, "adosfs")) {
+			adosfs.fspec = (char*) argv[0];
+			adosfs.uid = 0;
+			adosfs.gid = 0;
+			args = &adosfs;
+		} else if(!strcmp(type, "cd9660")) {
+			iso.fspec = (char*) argv[0];
+			args = &iso;
+		} else if(!strcmp(type, "mfs")) {
+			mfs.fspec = (char*) argv[0];
+			args = &mfs;
+		} else if(!strcmp(type, "msdos")) {
+			msdosfs.fspec = (char*) argv[0];
+			msdosfs.uid = 0;
+			msdosfs.gid = 0;
+			args = &msdosfs;
+		} else {
+			fprintf(stderr, "Unknown filesystem type: %s", type);
+			fprintf(stderr,
+			    "Supported: ffs ufs adosfs cd9660 mfs msdos\n");
+			return;
+		}
+
+		if (mount(type, argv[1], flags, args) < 0)
+		        perror(argv[0]);
+	}
+#endif
 }
 
 
 void
 do_umount(int argc, const char ** argv)
 {
+#if	HAVE_LINUX_MOUNT
 	if (umount(argv[1]) < 0)
 		perror(argv[1]);
+#elif	HAVE_BSD_MOUNT
+	{
+		const char *	str;
+		int		flags = 0;
+
+		for (argc--, argv++;
+		    (argc > 0) && (**argv == '-');) {
+			argc--;
+			str = *argv++;
+
+			while (*++str) {
+				switch (*str)
+				{
+					case 'f':
+						flags = MNT_FORCE;
+						break;
+				}
+			}
+		}
+
+		if (unmount(argv[0], flags) < 0)
+			perror(argv[0]);
+	}
+#endif
 }
 
@


1.2
log
@update shells/sash to 3.5; from maintainer Wilbern Cobb <vedge@@csoft.org>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
--- cmds.c.orig	Thu Jun  3 17:42:17 1999
+++ cmds.c	Fri Jul  6 09:21:42 2001
@@@@ -10,14 +10,20 @@@@
d8 3
a10 1
-#include <sys/mount.h>
d14 1
a14 4
 #include <utime.h>
 #include <errno.h>
+
+#ifdef __Linux__
d16 1
a16 6
+#endif
 
+#ifdef __OpenBSD__
+#include <sys/param.h>
+#endif
+#include <sys/mount.h>
d18 1
d21 4
a24 18
@@@@ -511,8 +517,15 @@@@ do_mount(int argc, const char ** argv)
 
 	argc--;
 	argv++;
+
+#ifdef __OpenBSD__
+	type = "ffs";
+#endif
+
+#ifdef __Linux__
 	type = "ext2";
 	flags = MS_MGC_VAL;
+#endif
 
 	while ((argc > 0) && (**argv == '-'))
 	{
@@@@ -533,6 +546,21 @@@@ do_mount(int argc, const char ** argv)
 				argc--;
d26 2
a27 2
 
+#ifdef __OpenBSD__
d35 1
a35 1
+			
a39 11
+
+#ifdef __Linux__
 			case 'r':
 				flags |= MS_RDONLY;
 				break;
@@@@ -540,6 +568,7 @@@@ do_mount(int argc, const char ** argv)
 			case 'm':
 				flags |= MS_REMOUNT;
 				break;
+#endif
 
d42 2
a43 1
@@@@ -555,16 +584,85 @@@@ do_mount(int argc, const char ** argv)
d47 6
a52 1
+#ifdef __OpenBSD__
d54 1
d84 3
a88 2
+		fprintf(stderr, "type=%s, dev=%s, point=%s\n", type,
+		    argv[0], argv[1]);
a92 6
+
+#ifdef __Linux__
 	if (mount(argv[0], argv[1], type, flags, 0) < 0)
 		perror("mount failed");
+#endif
+
d99 4
a102 8
+	const char *	str;
+	int		flags = 0;
+
+#ifdef __OpenBSD__
+	argc--;
+	argv++;
+	
+	while ((argc > 0) && (**argv == '-'))
d104 2
a105 2
+		argc--;
+		str = *argv++;
d107 13
a119 5
+		while (*++str) switch (*str)
+		{
+			case 'r':
+				flags = MNT_FORCE;
+				break;
d121 3
a124 8
+
+	if (unmount(argv[0], flags) < 0)
+		perror(argv[0]);
+#endif
+
+#ifdef __Linux__
 	if (umount(argv[1]) < 0)
 		perror(argv[1]);
@


1.1.1.1
log
@initial import of sash-3.4:
--
SASH - Stand-alone shell with built-in commands.

The sash program is a stand-alone shell which is useful for recovering
from certain types of system failures. In particular, it was created
in order to cope with the problem of missing shared libraries or
important executable.

WWW: http://www.canb.auug.org.au/~dbell/

Submitted by Albert Chang <vedge@@vedge.com.ar>

@
text
@@
