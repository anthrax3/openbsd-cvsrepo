head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.08.25.15.42.20;	author dcoppa;	state dead;
branches;
next	1.1;
commitid	RePdFa2fRR1lD9Py;

1.1
date	2014.01.18.20.56.53;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
Send gfortran to the Attic

ok naddy@@
@
text
@$OpenBSD: patch-gcc_config_rs6000_rs6000_c,v 1.1 2014/01/18 20:56:53 pascal Exp $
--- gcc/config/rs6000/rs6000.c.orig	Sat Jan 18 13:56:24 2014
+++ gcc/config/rs6000/rs6000.c	Sat Jan 18 13:56:36 2014
@@@@ -13475,17 +13475,22 @@@@ rs6000_return_addr (int count, rtx frame)
      don't try to be too clever here.  */
   if (count != 0 || (DEFAULT_ABI != ABI_AIX && flag_pic))
     {
+      rtx x;
       cfun->machine->ra_needs_full_frame = 1;
 
-      return
-	gen_rtx_MEM
-	  (Pmode,
-	   memory_address
-	   (Pmode,
-	    plus_constant (copy_to_reg
-			   (gen_rtx_MEM (Pmode,
-					 memory_address (Pmode, frame))),
-			   RETURN_ADDRESS_OFFSET)));
+      if (count == 0)
+	{
+	  gcc_assert (frame == frame_pointer_rtx);
+	  x = arg_pointer_rtx;
+	}
+      else
+        {
+	  x = memory_address (Pmode, frame);
+	  x = copy_to_reg (gen_rtx_MEM (Pmode, x));
+	}
+
+      x = plus_constant (x, RETURN_ADDRESS_OFFSET);
+      return gen_rtx_MEM (Pmode, memory_address (Pmode, x));
     }
 
   cfun->machine->ra_need_lr = 1;
@


1.1
log
@Unbreak on powerpc by syncing backend with base.

ok landry@@
@
text
@d1 1
a1 1
$OpenBSD$
@

