head	1.3;
access;
symbols
	OPENBSD_6_0:1.2.0.16
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.12
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.14
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.10
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	steven-20101010:1.1.1.1
	steven:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.08.25.15.42.20;	author dcoppa;	state dead;
branches;
next	1.2;
commitid	RePdFa2fRR1lD9Py;

1.2
date	2012.10.07.20.09.44;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.10.17.39.07;	author steven;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.10.10.17.39.07;	author steven;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
Send gfortran to the Attic

ok naddy@@
@
text
@$OpenBSD: patch-gcc_config_openbsd_h,v 1.2 2012/10/07 20:09:44 landry Exp $
--- gcc/config/openbsd.h.orig	Sat Jun 25 03:22:41 2005
+++ gcc/config/openbsd.h	Sat Oct  6 12:43:05 2012
@@@@ -73,6 +73,37 @@@@ Boston, MA 02110-1301, USA.  */
 
 /* Controlling the compilation driver.  */
 /* TARGET_OS_CPP_BUILTINS() common to all OpenBSD targets.  */
+#define OPENBSD_OS_CPP_BUILTINS_COMMON()	\
+  do						\
+    {						\
+      builtin_define ("__OpenBSD__");		\
+      builtin_define ("__unix__");		\
+      builtin_define ("__ANSI_COMPAT");		\
+      builtin_assert ("system=unix");		\
+      builtin_assert ("system=bsd");		\
+      builtin_assert ("system=OpenBSD");	\
+    }						\
+  while (0)
+
+/* TARGET_OS_CPP_BUILTINS() common to all OpenBSD ELF targets.  */
+#define OPENBSD_OS_CPP_BUILTINS_ELF()		\
+  do						\
+    {						\
+      OPENBSD_OS_CPP_BUILTINS_COMMON();		\
+      builtin_define ("__ELF__");		\
+    }						\
+  while (0)
+
+/* TARGET_OS_CPP_BUILTINS() common to all LP64 OpenBSD targets.  */
+#define OPENBSD_OS_CPP_BUILTINS_LP64()		\
+  do						\
+    {						\
+      builtin_define ("_LP64");			\
+      builtin_define ("__LP64__");		\
+    }						\
+  while (0)
+
+/* XXX old stuff TARGET_OS_CPP_BUILTINS() common to all OpenBSD targets.  */
 #define OPENBSD_OS_CPP_BUILTINS()		\
   do						\
     {						\
@@@@ -96,16 +127,9 @@@@ Boston, MA 02110-1301, USA.  */
 #define OBSD_CPP_SPEC "%{posix:-D_POSIX_SOURCE} %{pthread:-D_POSIX_THREADS}"
 #endif
 
-/* LIB_SPEC appropriate for OpenBSD.  */
-#ifdef HAS_LIBC_R
-/*   -lc(_r)?(_p)?, select _r for threads, and _p for p or pg.  */
-# define OBSD_LIB_SPEC "%{!shared:-lc%{pthread:_r}%{p:_p}%{!p:%{pg:_p}}}"
-#else
-/* Include -lpthread if -pthread is specified on the command line. */
-# define OBSD_LIB_SPEC "%{!shared:%{pthread:-lpthread%{p:_p}%{!p:%{pg:_p}}}} %{!shared:-lc%{p:_p}%{!p:%{pg:_p}}}"
-#endif
+#undef LIB_SPEC
+#define LIB_SPEC OBSD_LIB_SPEC
 
-
 #ifndef OBSD_HAS_CORRECT_SPECS
 
 #ifndef OBSD_NO_DYNAMIC_LIBRARIES
@@@@ -140,6 +164,10 @@@@ Boston, MA 02110-1301, USA.  */
   "%{g:%{!nostdlib:-L/usr/lib/debug}} %{!shared:%{!nostdlib:%{!r*:%{!e*:-e start}}}} %{shared:-Bshareable -x} -dc -dp %{R*} %{static:-Bstatic} %{assert*}"
 #endif
 
+#if defined(HAVE_LD_EH_FRAME_HDR)
+#define LINK_EH_SPEC "%{!static:--eh-frame-hdr} "
+#endif
+
 #undef LIB_SPEC
 #define LIB_SPEC OBSD_LIB_SPEC
 #endif
@@@@ -282,10 +310,6 @@@@ do {									 \
 /* Storage layout.  */
 
 
-/* Otherwise, since we support weak, gthr.h erroneously tries to use
-   #pragma weak.  */
-#define GTHREAD_USE_WEAK 0
-
 /* bug work around: we don't want to support #pragma weak, but the current
    code layout needs HANDLE_PRAGMA_WEAK asserted for __attribute((weak)) to
    work.  On the other hand, we don't define HANDLE_PRAGMA_WEAK directly,
@@@@ -307,5 +331,15 @@@@ __enable_execute_stack (void *addr)					\
     perror ("mprotect of trampoline code");				\
 }
 
+/* Disable the use of unsafe builtin functions, (strcat, strcpy), making
+ * them easier to spot in the object files. 
+ */
+#define NO_UNSAFE_BUILTINS
+
+/* The system headers on OpenBSD are C++-aware.  */
+#undef NO_IMPLICIT_EXTERN_C
+#define NO_IMPLICIT_EXTERN_C
+
+/* pick up defines for mprotect (used in TRANSFER_FROM_TRAMPOLINE) */
 #include <sys/types.h>
 #include <sys/mman.h>
@


1.2
log
@Sync the config/openbsd.h and config/sparc/openbsd64.h patches with
respectively r1.9 and r1.6 of base gcc ones adding #define
NO_IMPLICIT_EXTERN_C. While here add the missing #define
NO_UNSAFE_BUILTINS to gfortran/gcc 4.2, Bump all REVISIONs.
ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_config_openbsd_h,v 1.1.1.1 2010/10/10 17:39:07 steven Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_config_openbsd_h,v 1.1 2006/10/20 13:43:18 espie Exp $
d3 1
a3 1
+++ gcc/config/openbsd.h	Mon Jun 14 19:23:04 2010
d83 16
@


1.1.1.1
log
@import separate port of gfortran 4.2.1, in sync with the base compiler.
meant to be used on archs that have gcc4 in base, this doesn't require a
full gcc build from ports, and provides libgfortran as a subpackage.

idea from espie some months ago.
@
text
@@
