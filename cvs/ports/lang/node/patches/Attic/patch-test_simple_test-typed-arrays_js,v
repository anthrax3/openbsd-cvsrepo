head	1.1;
access;
symbols
	OPENBSD_5_2:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2013.01.15.15.22.57;	author abieber;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2013.01.15.15.22.57;	author abieber;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-test_simple_test-typed-arrays_js was initially added on branch OPENBSD_5_2.
@
text
@@


1.1.2.1
log
@add a fix for 32bit size/index overflow
 - https://github.com/joyent/node/commit/ed825f488867d7586bee6ca4feb5fe5b0461775e

OK jasper@@
@
text
@a0 29
$OpenBSD$

This patch fixes 32bit size/index overflow
 - https://github.com/joyent/node/commit/ed825f488867d7586bee6ca4feb5fe5b0461775e

--- test/simple/test-typed-arrays.js.orig	Sun Jan 13 08:08:30 2013
+++ test/simple/test-typed-arrays.js	Sun Jan 13 08:11:40 2013
@@@@ -174,3 +174,21 @@@@ uint8c.set(1, 260);
 
 assert.equal(uint8c[0], 0);
 assert.equal(uint8c[1], 255);
+
+(function() {
+  var numbers = [];
+  for (var i = 128; i <= 255; ++i) numbers.push(i);
+  var array = new Uint8Array(numbers);
+  var view = new DataView(array.buffer);
+  for (var i = 128; i <= 255; ++i) assert.equal(view.getInt8(i - 128), i - 256);
+})();
+
+assert.throws(function() {
+  var buf = new DataView(new ArrayBuffer(8));
+  buf.getFloat64(0xffffffff, true);
+}, /Index out of range/);
+
+assert.throws(function() {
+  var buf = new DataView(new ArrayBuffer(8));
+  buf.setFloat64(0xffffffff, 0.0, true);
+}, /Index out of range/);
@

