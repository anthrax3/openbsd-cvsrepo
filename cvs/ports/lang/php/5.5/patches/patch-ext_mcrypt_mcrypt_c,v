head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.06.25.18.54.15;	author sthen;	state Exp;
branches;
next	1.1;
commitid	zcU2nAFaHCgsdQ9k;

1.1
date	2016.02.06.23.31.20;	author sthen;	state Exp;
branches;
next	;
commitid	qavL05ggwVS8d1ZV;


desc
@@


1.2
log
@update to php-5.5.37, ok robert@@
@
text
@$OpenBSD: patch-ext_mcrypt_mcrypt_c,v 1.1 2016/02/06 23:31:20 sthen Exp $

mcrypt IV creation. no /dev/{u,}random? yes, it is using the last hunk.

--- ext/mcrypt/mcrypt.c.orig.port	Tue Jun 21 12:11:59 2016
+++ ext/mcrypt/mcrypt.c	Sat Jun 25 13:41:19 2016
@@@@ -1411,6 +1411,10 @@@@ PHP_FUNCTION(mcrypt_create_iv)
 
 	iv = ecalloc(size + 1, 1);
 
+#if defined(__OpenBSD__)
+	arc4random_buf(iv, (size_t) size);
+	n = size;
+#else
 	if (source == RANDOM || source == URANDOM) {
 #if PHP_WIN32
 		/* random/urandom equivalent on Windows */
@@@@ -1455,6 +1459,7 @@@@ PHP_FUNCTION(mcrypt_create_iv)
 			iv[--size] = (char) (255.0 * php_rand(TSRMLS_C) / RAND_MAX);
 		}
 	}
+#endif /* openbsd */
 	RETURN_STRINGL(iv, n, 0);
 }
 /* }}} */
@


1.1
log
@security update to php-5.5.32, fixes include crashes, integer overflows,
and updating the bundled pcre (also security fixes).

add patches to use arc4random_buf instead of /dev/urandom (which is
typically not available on a normal OpenBSD php installation, with very
bad fallbacks in some cases).

ok robert@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 4
a8 5
--- ext/mcrypt/mcrypt.c.orig.port	Tue Feb  2 13:33:56 2016
+++ ext/mcrypt/mcrypt.c	Sat Feb  6 11:40:43 2016
@@@@ -1402,6 +1402,11 @@@@ PHP_FUNCTION(mcrypt_create_iv)
 	}
 	
d10 1
a10 1
+
d12 2
a13 2
+		arc4random_buf(iv, (size_t) size);
+		n = size;
a14 1
 	
d17 2
a18 1
@@@@ -1447,6 +1452,7 @@@@ PHP_FUNCTION(mcrypt_create_iv)
@

