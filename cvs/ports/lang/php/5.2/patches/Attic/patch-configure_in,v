head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	robert_20100627:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.08.08.18.54.54;	author robert;	state dead;
branches;
next	1.3;

1.3
date	2011.06.18.19.49.50;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.05.09.31.23;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2010.06.27.20.28.44;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.06.27.20.28.44;	author robert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@bye-bye php 5.2, you have been rotten dead already
welcome 5.4 to the build which replaces 5.2 by default
@
text
@$OpenBSD: patch-configure_in,v 1.3 2011/06/18 19:49:50 sthen Exp $
--- configure.in.orig.port	Sat Jun 18 12:44:52 2011
+++ configure.in	Sat Jun 18 12:46:53 2011
@@@@ -352,8 +352,8 @@@@ AC_CHECK_LIB(m, sin)
 
 dnl Check for resolver routines.
 dnl Need to check for both res_search and __res_search
-dnl in -lc, -lbind, -lresolv and -lsocket
-PHP_CHECK_FUNC(res_search, resolv, bind, socket)
+dnl in -lc, -lresolv and -lsocket
+PHP_CHECK_FUNC(res_search, resolv, socket)
 
 dnl Check for inet_aton and dn_skipname
 dnl in -lc, -lbind and -lresolv
@@@@ -940,7 +940,7 @@@@ enable_static=yes
 
 case $php_build_target in
   program|static)
-    standard_libtool_flag='-prefer-non-pic -static'
+    standard_libtool_flag=''
     if test -z "$PHP_MODULES" && test -z "$PHP_ZEND_EX"; then
         enable_shared=no
     fi
@@@@ -949,10 +949,10 @@@@ case $php_build_target in
     enable_static=no
     case $with_pic in
       yes)
-        standard_libtool_flag='-prefer-pic'
+        standard_libtool_flag=''
         ;;
       no)
-        standard_libtool_flag='-prefer-non-pic'
+        standard_libtool_flag=''
         ;;
     esac
     EXTRA_LDFLAGS="$EXTRA_LDFLAGS -avoid-version -module"
@@@@ -1146,7 +1146,7 @@@@ EXPANDED_SYSCONFDIR=`eval echo $sysconfdir`
 EXPANDED_DATADIR=$datadir
 EXPANDED_PHP_CONFIG_FILE_PATH=`eval echo "$PHP_CONFIG_FILE_PATH"`
 EXPANDED_PHP_CONFIG_FILE_SCAN_DIR=`eval echo "$PHP_CONFIG_FILE_SCAN_DIR"`
-INCLUDE_PATH=.:$EXPANDED_PEAR_INSTALLDIR
+INCLUDE_PATH=.:$libdir
 
 exec_prefix=$old_exec_prefix
 libdir=$old_libdir
@@@@ -1357,7 +1357,8 @@@@ CFLAGS="\$(CFLAGS_CLEAN) $standard_libtool_flag"
 INLINE_CFLAGS="$INLINE_CFLAGS $standard_libtool_flag"
 CXXFLAGS="$CXXFLAGS $standard_libtool_flag"
 
-all_targets="$lcov_target \$(OVERALL_TARGET) \$(PHP_MODULES) \$(PHP_ZEND_EX) \$(PHP_CLI_TARGET)"
+all_targets="$lcov_target \$(OVERALL_TARGET) \$(PHP_MODULES) \$(PHP_CLI_TARGET) \$(PHP_CGI_TARGET)"
+
 install_targets="$install_modules install-build install-headers install-programs $install_pear"
 
 case $PHP_SAPI in
@@@@ -1401,7 +1402,7 @@@@ esac
 PHP_ADD_SOURCES(Zend, \
     zend_language_parser.c zend_language_scanner.c \
     zend_ini_parser.c zend_ini_scanner.c \
-    zend_alloc.c zend_compile.c zend_constants.c zend_dynamic_array.c \
+    zend_compile.c zend_constants.c zend_dynamic_array.c \
     zend_execute_API.c zend_highlight.c zend_llist.c \
     zend_opcode.c zend_operators.c zend_ptr_stack.c zend_stack.c \
     zend_variables.c zend.c zend_API.c zend_extensions.c zend_hash.c \
@@@@ -1422,6 +1423,7 @@@@ else
 fi
 
 PHP_ADD_SOURCES_X(Zend, zend_execute.c,,PHP_GLOBAL_OBJS,,$flag)
+PHP_ADD_SOURCES_X(Zend, zend_alloc.c,,PHP_GLOBAL_OBJS,,"-O0")
 
 PHP_ADD_BUILD_DIR(main main/streams)
 PHP_ADD_BUILD_DIR(regex)
@


1.3
log
@Use PATCHORIG, regen patches and rename the files which didn't match the
normal update-patches filenames. This avoids update-patches picking up the
.orig files in PHP distfiles and make it easier to keep in-sync. ok robert@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update both to their current version 5.3.4 and 5.2.16 and fix wantlibs.
update patches while here
@
text
@d1 3
a3 2
--- configure.in.orig	Mon Jan  3 14:34:43 2011
+++ configure.in	Mon Jan  3 14:34:45 2011
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
--- configure.in.orig	Sat Jun 26 16:34:41 2010
+++ configure.in	Sat Jun 26 16:34:46 2010
@


1.1.1.1
log
@Import a reworked port of php to lang/php. The basic difference is that
there are no core and extensions packages anymore, everything is built by
the main ports itself and the package names have changed to php-${V} or
php-mysql-${V} for modules.

The new ports allows you to install all of the php versions just like python
so you can actually run different webservers with different versions of php
because you can't load two modules to one. You can only do that with fastcgi.

The port tries to share all the files that can be shared and the different
extensions are located in the local version's Makefile instead of Makefile.inc.

The other change is that *all* of the configuration has moved to /etc out
of /var/www because that was a realy stupid concept, since apache if you
use it chrooted, will load all of the extensions before doing the actual
chroot.

This port is not linked to the build yet because several issues have to
be resolved first, like providing a way to update from php5-* packages,
and probably other things that do not come into my mind right now,
because the Bullfrog is making me crazy.
@
text
@@
