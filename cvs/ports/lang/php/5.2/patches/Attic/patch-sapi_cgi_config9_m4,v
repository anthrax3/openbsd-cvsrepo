head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	robert_20100627:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.08.08.18.54.55;	author robert;	state dead;
branches;
next	1.3;

1.3
date	2011.06.18.19.49.50;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.05.09.31.23;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2010.06.27.20.28.44;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.06.27.20.28.44;	author robert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@bye-bye php 5.2, you have been rotten dead already
welcome 5.4 to the build which replaces 5.2 by default
@
text
@$OpenBSD: patch-sapi_cgi_config9_m4,v 1.3 2011/06/18 19:49:50 sthen Exp $
--- sapi/cgi/config9.m4.orig.port	Thu Jul 12 00:20:37 2007
+++ sapi/cgi/config9.m4	Sat Jun 18 12:44:58 2011
@@@@ -25,7 +25,6 @@@@ PHP_ARG_ENABLE(path-info-check,,
 dnl
 dnl CGI setup
 dnl
-if test "$PHP_SAPI" = "default"; then
   AC_MSG_CHECKING(whether to build CGI binary)
   if test "$PHP_CGI" != "no"; then
     AC_MSG_RESULT(yes)
@@@@ -86,7 +85,8 @@@@ if test "$PHP_SAPI" = "default"; then
 
     dnl Set install target and select SAPI
     INSTALL_IT="@@echo \"Installing PHP CGI binary: \$(INSTALL_ROOT)\$(bindir)/\"; \$(INSTALL) -m 0755 \$(SAPI_CGI_PATH) \$(INSTALL_ROOT)\$(bindir)/\$(program_prefix)php-cgi\$(program_suffix)\$(EXEEXT)"
-    PHP_SELECT_SAPI(cgi, program, $PHP_FCGI_FILES cgi_main.c getopt.c,, '$(SAPI_CGI_PATH)')
+    PHP_ADD_SOURCES(sapi/cgi, $PHP_FCGI_FILES cgi_main.c getopt.c,, cgi)
+    PHP_ADD_SOURCES(/main, internal_functions.c,,cgi)
 
     case $host_alias in
       *aix*)
@@@@ -96,17 +96,26 @@@@ if test "$PHP_SAPI" = "default"; then
         BUILD_CGI="\$(CC) \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) \$(NATIVE_RPATHS) \$(PHP_GLOBAL_OBJS:.lo=.o) \$(PHP_SAPI_OBJS:.lo=.o) \$(PHP_FRAMEWORKS) \$(EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
       ;;
       *)
-        BUILD_CGI="\$(LIBTOOL) --mode=link \$(CC) -export-dynamic \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) \$(PHP_RPATHS) \$(PHP_GLOBAL_OBJS) \$(PHP_SAPI_OBJS) \$(EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
+	BUILD_CGI="\$(LIBTOOL) --mode=link \$(CC) -export-dynamic \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) \$(PHP_RPATHS) \$(PHP_GLOBAL_OBJS) \$(PHP_CGI_OBJS) \$(EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
       ;;
     esac
 
+    PHP_CGI_TARGET="\$(SAPI_CGI_PATH)"
     PHP_SUBST(BUILD_CGI)
+    PHP_SUBST(PHP_CGI_OBJS)
+    PHP_SUBST(PHP_CGI_TARGET)
 
-  elif test "$PHP_CLI" != "no"; then
+    if test "$PHP_SAPI" = "default" ; then
+      PHP_BUILD_PROGRAM($SAPI_CGI_PATH)
+    fi
+ else
     AC_MSG_RESULT(no)
-    OVERALL_TARGET=
-    PHP_SAPI=cli   
+    if test "$PHP_SAPI" = "default" ; then
+      if test "$PHP_SAPI_CLI" != "no" ; then
+      OVERALL_TARGET=
+      PHP_SAPI=cli
   else
     AC_MSG_ERROR([No SAPIs selected.])  
   fi
+ fi
 fi
@


1.3
log
@Use PATCHORIG, regen patches and rename the files which didn't match the
normal update-patches filenames. This avoids update-patches picking up the
.orig files in PHP distfiles and make it easier to keep in-sync. ok robert@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update both to their current version 5.3.4 and 5.2.16 and fix wantlibs.
update patches while here
@
text
@d1 3
a3 3
$OpenBSD: patch-sapi_cgi_config9_m4,v 1.4 2007/09/05 09:11:34 robert Exp $
--- sapi/cgi/config9.m4.orig	Thu Jul 12 01:20:36 2007
+++ sapi/cgi/config9.m4	Fri Aug 31 09:33:21 2007
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import a reworked port of php to lang/php. The basic difference is that
there are no core and extensions packages anymore, everything is built by
the main ports itself and the package names have changed to php-${V} or
php-mysql-${V} for modules.

The new ports allows you to install all of the php versions just like python
so you can actually run different webservers with different versions of php
because you can't load two modules to one. You can only do that with fastcgi.

The port tries to share all the files that can be shared and the different
extensions are located in the local version's Makefile instead of Makefile.inc.

The other change is that *all* of the configuration has moved to /etc out
of /var/www because that was a realy stupid concept, since apache if you
use it chrooted, will load all of the extensions before doing the actual
chroot.

This port is not linked to the build yet because several issues have to
be resolved first, like providing a way to update from php5-* packages,
and probably other things that do not come into my mind right now,
because the Bullfrog is making me crazy.
@
text
@@
