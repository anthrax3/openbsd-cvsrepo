head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.12.08.22.24.01;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.1
log
@- add support for powerpc-based OpenBSD platforms; tested on macppc.
- add ${_SMLNJ_ARCH} for PLIST (in)sanity.
@
text
@$OpenBSD$

Add support for OpenBSD/powerpc.

--- base/runtime/mach-dep/signal-sysdep.h.orig	Sun Dec  8 15:10:20 2013
+++ base/runtime/mach-dep/signal-sysdep.h	Sun Dec  8 21:15:48 2013
@@@@ -331,6 +331,19 @@@@ extern void SetFSR();
 #    define SIG_ResetFPE(scp)           { (scp)->regs->gpr[PT_FPSCR] = 0x0; }
      typedef void SigReturn_t;
 
+#  elif defined(OPSYS_OPENBSD)
+   /** PPC, OpenBSD **/
+
+#   define SIG_FAULT1		SIGTRAP
+#   define INT_DIVZERO(s, c)	((s) == SIGTRAP)
+#   define INT_OVFLW(s, c)	((s) == SIGTRAP)
+#    define SIG_GetPC(scp)              ((scp)->sc_frame.srr0)
+#    define SIG_SetPC(scp, addr)        { (scp)->sc_frame.srr0 = (long)(addr); }
+#    define SIG_ZeroLimitPtr(scp)       { ((scp)->sc_frame.fixreg[15] = 0); } /* limitptr = 15 (see src/runtime/mach-dep/PPC.prim.asm) */
+#    define SIG_GetCode(info,scp)       (info)
+
+    typedef void SigReturn_t;
+
 #  endif /* HOST_RS6000/HOST_PPC */
 
 #elif defined(HOST_HPPA)
@
