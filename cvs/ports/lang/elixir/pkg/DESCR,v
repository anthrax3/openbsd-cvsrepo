head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.12
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.10
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.10
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.8
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.6
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.4
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	jasper_20120206:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.12.31.13.18.34;	author jasper;	state Exp;
branches;
next	1.1;
commitid	IkWhM8r9eMrmBPES;

1.1
date	2012.06.02.12.24.13;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.06.02.12.24.13;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update to elixir-0.12.5 which is the last version to work with erlang 16
@
text
@Elixir is a dynamic, functional language designed for building scalable
and maintainable applications.

Elixir leverages the Erlang VM, known for running low-latency,
distributed and fault-tolerant systems, while also being successfully
used in web development and the embedded software domain.
@


1.1
log
@Initial revision
@
text
@d1 2
a2 3
Elixir is a programming language built on top of the Erlang VM. As
Erlang, it is a functional language built to support distributed,
fault-tolerant, non-stop applications with hot code swapping.
d4 3
a6 9
Elixir is also dynamic typed but, differently from Erlang, it is also
homoiconic, allowing meta-programming via macros. Elixir also supports
polymorphism via protocols (similar to Clojure's), dynamic records and
provides a reference mechanism.

Finally, Elixir and Erlang share the same bytecode and data types. This
means you can invoke Erlang code from Elixir (and vice-versa) without
any conversion or performance hit. This allows a developer to mix the
expressiveness of Elixir with the robustness and performance of Erlang.
@


1.1.1.1
log
@import elixir 0.5.0

Elixir is a programming language built on top of the Erlang VM. As
Erlang, it is a functional language built to support distributed,
fault-tolerant, non-stop applications with hot code swapping.

Elixir is also dynamic typed but, differently from Erlang, it is also
homoiconic, allowing meta-programming via macros. Elixir also supports
polymorphism via protocols (similar to Clojure's), dynamic records and
provides a reference mechanism.

Finally, Elixir and Erlang share the same bytecode and data types. This
means you can invoke Erlang code from Elixir (and vice-versa) without
any conversion or performance hit. This allows a developer to mix the
expressiveness of Elixir with the robustness and performance of Erlang.

feedback/ok sthen@@
@
text
@@
