head	1.25;
access;
symbols
	OPENBSD_6_0:1.19.0.2
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	jasper_20120206:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.25
date	2017.02.25.13.55.05;	author jasper;	state Exp;
branches;
next	1.24;
commitid	k1e9EFPkZquxWMWv;

1.24
date	2017.01.29.10.00.22;	author jasper;	state Exp;
branches;
next	1.23;
commitid	CXIMlLlkgcSvmLey;

1.23
date	2017.01.07.13.21.33;	author jasper;	state Exp;
branches;
next	1.22;
commitid	yqz0nYgl1gK1UwYr;

1.22
date	2016.12.17.12.06.31;	author jasper;	state Exp;
branches;
next	1.21;
commitid	wBWVPEyaP22m7tE4;

1.21
date	2016.10.15.19.14.43;	author jasper;	state Exp;
branches;
next	1.20;
commitid	7ZvUqMX3Nzj7Jylk;

1.20
date	2016.08.12.19.28.10;	author jasper;	state Exp;
branches;
next	1.19;
commitid	xLWugWFZBatC6MqG;

1.19
date	2016.06.30.07.25.15;	author jasper;	state Exp;
branches;
next	1.18;
commitid	xs9tsMSbNqEvfKWl;

1.18
date	2016.06.13.08.29.16;	author jasper;	state Exp;
branches;
next	1.17;
commitid	Qqu8YLMrA8i5oKFT;

1.17
date	2016.05.04.06.44.58;	author jasper;	state Exp;
branches;
next	1.16;
commitid	16P8UM0UQ65cxHFb;

1.16
date	2016.04.11.11.04.52;	author jasper;	state Exp;
branches;
next	1.15;
commitid	VjY2VDhoWHP0kFaR;

1.15
date	2016.01.19.14.24.13;	author jturner;	state Exp;
branches;
next	1.14;
commitid	WNhkTsb8hzJ8JyKq;

1.14
date	2016.01.02.21.46.18;	author jasper;	state Exp;
branches;
next	1.13;
commitid	CIjillz6LokMJjB6;

1.13
date	2016.01.02.08.42.15;	author jasper;	state Exp;
branches;
next	1.12;
commitid	Nwa1uHR0TpEN6NNh;

1.12
date	2015.11.27.14.00.16;	author jasper;	state Exp;
branches;
next	1.11;
commitid	7s4Cjulxufp8ZJFn;

1.11
date	2015.09.28.12.48.29;	author jasper;	state Exp;
branches;
next	1.10;
commitid	n6jTQE1DXJ6a6Svw;

1.10
date	2015.07.10.17.10.09;	author jasper;	state Exp;
branches;
next	1.9;
commitid	SOYIZNizvYNoe91F;

1.9
date	2015.06.29.18.38.50;	author jasper;	state Exp;
branches;
next	1.8;
commitid	kgClKGY1CmnXhuLj;

1.8
date	2015.06.25.13.23.19;	author jasper;	state Exp;
branches;
next	1.7;
commitid	z2gqmAkubINLJTXS;

1.7
date	2015.06.24.06.53.08;	author jasper;	state Exp;
branches;
next	1.6;
commitid	uuPkj3zBdw0I9zxk;

1.6
date	2015.06.23.16.38.10;	author jasper;	state Exp;
branches;
next	1.5;
commitid	vQirt5gq1WScVB6u;

1.5
date	2015.06.22.13.08.20;	author jasper;	state Exp;
branches;
next	1.4;
commitid	jGSzLxzI7U7pgVEu;

1.4
date	2014.12.31.13.18.34;	author jasper;	state Exp;
branches;
next	1.3;
commitid	IkWhM8r9eMrmBPES;

1.3
date	2013.03.11.11.20.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2012.09.04.08.50.52;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2012.06.02.12.24.13;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.06.02.12.24.13;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.25
log
@update to elixir-1.4.2
@
text
@# $OpenBSD: Makefile,v 1.24 2017/01/29 10:00:22 jasper Exp $

COMMENT=		functional language for building scalable applications

V=			1.4.2
GH_ACCOUNT=		elixir-lang
GH_PROJECT=		elixir
GH_TAGNAME=		v$V
DISTNAME=		${GH_PROJECT}-$V
CATEGORIES=		lang

HOMEPAGE=		http://elixir-lang.org/

MAINTAINER=		Jasper Lievisse Adriaanse <jasper@@openbsd.org>

# Apache2
PERMIT_PACKAGE_CDROM=	Yes

MODULES=		lang/erlang
MODERL_VERSION=		19

ALL_TARGET=		# empty

TEST_TARGET=		test
PORTHOME=		${WRKDIR}

MAKE_FLAGS=		PREFIX="${PREFIX}" \
			Q=""

pre-configure:
	${SUBST_CMD} ${WRKSRC}/bin/elixir

pre-install:
	-rm ${WRKSRC}/bin/*.{beforesubst,orig}

.include <bsd.port.mk>
@


1.24
log
@update to elixir-1.4.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2017/01/07 13:21:33 jasper Exp $
d5 1
a5 1
V=			1.4.1
@


1.23
log
@update to elixir-1.4.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2016/12/17 12:06:31 jasper Exp $
d5 1
a5 1
V=			1.4.0
@


1.22
log
@update to elixir-1.3.4
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2016/10/15 19:14:43 jasper Exp $
d5 1
a5 1
V=			1.3.4
a31 1
	sed -i 's,share/man/man1,man/man1,g' ${WRKSRC}/Makefile
@


1.21
log
@update to elixir-1.3.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2016/08/12 19:28:10 jasper Exp $
d5 1
a5 1
V=			1.3.3
@


1.20
log
@update to elixir-1.3.2
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2016/06/30 07:25:15 jasper Exp $
d5 1
a5 1
V=			1.3.2
@


1.19
log
@- update to elixir-1.3.1
- switch to erlang 19

http://elixir-lang.org/blog/2016/06/21/elixir-v1-3-0-released/
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2016/06/13 08:29:16 jasper Exp $
d5 1
a5 1
V=			1.3.1
@


1.18
log
@update to elixir-1.2.6
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2016/05/04 06:44:58 jasper Exp $
d5 1
a5 1
V=			1.2.6
d20 1
a20 1
MODERL_VERSION=		18
@


1.17
log
@update to elixir-1.2.5
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2016/04/11 11:04:52 jasper Exp $
d5 1
a5 1
V=			1.2.5
@


1.16
log
@update to elixir-1.2.4
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2016/01/19 14:24:13 jturner Exp $
d5 1
a5 1
V=			1.2.4
@


1.15
log
@Update Elixir to 1.2.1. ok jasper@@

https://github.com/elixir-lang/elixir/blob/v1.2.1/CHANGELOG.md
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2016/01/02 21:46:18 jasper Exp $
d5 1
a5 1
V=			1.2.1
@


1.14
log
@upstream seems to have retagged 1.2 as 1.2.0.

spotted by nigel@@ and sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2016/01/02 08:42:15 jasper Exp $
d5 1
a5 1
V=			1.2.0
@


1.13
log
@- update to elixir-1.2
* https://github.com/elixir-lang/elixir/blob/v1.2.0/CHANGELOG.md
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2015/11/27 14:00:16 jasper Exp $
d5 1
a5 1
V=			1.2
@


1.12
log
@update to elixir-1.1.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2015/09/28 12:48:29 jasper Exp $
d5 1
a5 1
V=			1.1.1
@


1.11
log
@update to elixir-1.1.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2015/07/10 17:10:09 jasper Exp $
d5 1
a5 1
V=			1.1.0
d25 1
@


1.10
log
@bump after erlang dependency change

reminded by aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2015/06/29 18:38:50 jasper Exp $
d5 1
a5 2
V=			1.0.5
REVISION=		0
d26 3
d31 4
@


1.9
log
@- update to elixir 1.0.5
- switch to erlang 18
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2015/06/25 13:23:19 jasper Exp $
d6 1
@


1.8
log
@use versioned erl
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2015/06/24 06:53:08 jasper Exp $
d5 1
a5 1
V=			1.0.4
a9 1
REVISION=		9
d20 1
a20 1
MODERL_VERSION=		17
@


1.7
log
@- long overdue update to elixir-1.0.4
- switch to using erlang module
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2014/12/31 13:18:34 jasper Exp $
d10 1
d26 3
@


1.6
log
@tidy up erlang dependencies
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2015/06/22 13:08:20 jasper Exp $
d3 1
a3 1
COMMENT=		modern approach to programming for the Erlang VM
d5 1
a5 2
V=			0.12.5
REVISION=		1
d14 2
d19 2
a20 3
BUILD_DEPENDS=		devel/rebar \
			lang/erlang/16>=16b.03v0
RUN_DEPENDS=		lang/erlang/16>=16b.03v0
a22 1
USE_GMAKE=		Yes
@


1.5
log
@bump after MODERL_RUN_DEPENDS change
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2014/12/31 13:18:34 jasper Exp $
d6 1
a6 1
REVISION=		0
d19 2
a20 2
			lang/erlang>=16b.03v0
RUN_DEPENDS=		lang/erlang>=16b.03v0
@


1.4
log
@- update to elixir-0.12.5 which is the last version to work with erlang 16
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/03/11 11:20:27 espie Exp $
d6 1
@


1.3
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2012/09/04 08:50:52 jasper Exp $
d5 5
a9 3
V=			0.5.0
DISTNAME=		v${V}
PKGNAME=		elixir-${V}
d14 1
a14 1
# APLv2
a16 4
MASTER_SITES=		https://github.com/downloads/elixir-lang/elixir/
EXTRACT_SUFX=		.zip
DIST_SUBDIR=		elixir

d18 2
a19 2
			lang/erlang
RUN_DEPENDS=		lang/erlang
d21 1
a21 1
ALL_TARGET=		compile
a23 3
WRKDIST=		${WRKDIR}
SUBST_VARS+=		V

d26 1
a26 15
LIB_DIR=		${PREFIX}/lib/erlang/lib/elixir-lang-${V}/

# Remove pre-compiled files.
post-extract:
	cd ${WRKSRC} && ${MAKE_PROGRAM} clean

do-install:
.for s in elixir elixirc iex
	${INSTALL_SCRIPT} ${WRKSRC}/bin/$s ${PREFIX}/bin/
.endfor
	${INSTALL_DATA_DIR} ${LIB_DIR}
	cd ${WRKSRC}/ebin/ && umask 022 && pax -rw . ${LIB_DIR}


.include <bsd.port.mk>@


1.2
log
@add not-really-missing build dependency
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2012/06/02 12:24:13 jasper Exp $
a13 3
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM= Yes
PERMIT_DISTFILES_FTP=	Yes
d29 1
a29 1
REGRESS_TARGET=		test
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d22 2
a23 1
BUILD_DEPENDS=		${RUN_DEPENDS}
@


1.1.1.1
log
@import elixir 0.5.0

Elixir is a programming language built on top of the Erlang VM. As
Erlang, it is a functional language built to support distributed,
fault-tolerant, non-stop applications with hot code swapping.

Elixir is also dynamic typed but, differently from Erlang, it is also
homoiconic, allowing meta-programming via macros. Elixir also supports
polymorphism via protocols (similar to Clojure's), dynamic records and
provides a reference mechanism.

Finally, Elixir and Erlang share the same bytecode and data types. This
means you can invoke Erlang code from Elixir (and vice-versa) without
any conversion or performance hit. This allows a developer to mix the
expressiveness of Elixir with the robustness and performance of Erlang.

feedback/ok sthen@@
@
text
@@
