head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.4
	OPENBSD_5_8_BASE:1.1.1.1
	landry_20150406:1.1.1.1
	semarie:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.05.25.06.39.35;	author semarie;	state dead;
branches;
next	1.1;
commitid	MXspGwnScCXVczTc;

1.1
date	2015.04.06.16.01.05;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	uNXShIOtritg9vBI;

1.1.1.1
date	2015.04.06.16.01.05;	author landry;	state Exp;
branches;
next	;
commitid	uNXShIOtritg9vBI;


desc
@@


1.2
log
@lang/rust: fallback to LOCALBASE for sysroot

- std::env::current_exe() returns an error instead of returning wrong
  pathname (no complete, but rust build scripts makes (bad)
  assumptions that I couldn't patch for now).

- rustc / rustdoc to use CFG_PREFIX (configure --prefix value) when
  std::env::current_exe() return an error

- remove the installed wrapper used to pass --sysroot argument to
  rustc (the wrapper was used for workaround the problem differently
  for rustc, but didn't resolv the problem for rustdoc as it doesn't
  have --sysroot argument).

looks ok edd@@
@
text
@#!/bin/sh
ARGS="x $@@"
if [ "${ARGS}" = "${ARGS#* --sysroot }" ]; then
  EXTRA="--sysroot ${TRUEPREFIX}"
fi
exec ${TRUEPREFIX}/lib/rustlib/x86_64-unknown-openbsd/bin/rustc ${EXTRA} "${@@}"
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import rust 1.0.0beta, all the hard work from Sébastien Marie (thanks!)

Rust is a systems programming language that runs blazingly fast, prevents
almost all crashes, and eliminates data races.

Featuring:
- zero-cost abstractions
- move semantics
- guaranteed memory safety
- threads without data races
- trait-based generics
- pattern matching
- type inference
- minimal runtime
- efficient C bindings

some packaging tweaks by me, ok/testing bcallah@@ jca@@
@
text
@@
