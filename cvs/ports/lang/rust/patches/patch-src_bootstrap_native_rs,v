head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3;
locks; strict;
comment	@# @;


1.3
date	2017.03.27.12.35.31;	author danj;	state Exp;
branches;
next	1.2;
commitid	fQL63Mj4gEKu4BvX;

1.2
date	2017.02.18.13.15.48;	author landry;	state Exp;
branches;
next	1.1;
commitid	AZXHUw4YJRarl1Z6;

1.1
date	2017.02.15.12.52.35;	author landry;	state Exp;
branches;
next	;
commitid	NM74A8PX4zxQ5FFL;


desc
@@


1.3
log
@Update to rust-1.16.0

From semarie, discussed with edd@@ and landry@@
ok edd@@ landry@@
@
text
@$OpenBSD: patch-src_bootstrap_native_rs,v 1.2 2017/02/18 13:15:48 landry Exp $
use default settings from devel/llvm to local embedded version
--- src/bootstrap/native.rs.orig	Fri Mar 10 23:55:21 2017
+++ src/bootstrap/native.rs	Sun Mar 12 09:08:11 2017
@@@@ -90,16 +90,21 @@@@ pub fn llvm(build: &Build, target: &str) {
        .define("LLVM_INCLUDE_EXAMPLES", "OFF")
        .define("LLVM_INCLUDE_TESTS", "OFF")
        .define("LLVM_INCLUDE_DOCS", "OFF")
-       .define("LLVM_ENABLE_ZLIB", "OFF")
-       .define("WITH_POLLY", "OFF")
+       .define("LLVM_ENABLE_FFI", "OFF")
+       .define("LLVM_REQUIRES_RTTI", "ON")
+       .define("GO_EXECUTABLE", "GO_EXECUTABLE-NOTFOUND")
        .define("LLVM_ENABLE_TERMINFO", "OFF")
-       .define("LLVM_ENABLE_LIBEDIT", "OFF")
        .define("LLVM_PARALLEL_COMPILE_JOBS", build.jobs().to_string())
        .define("LLVM_TARGET_ARCH", target.split('-').next().unwrap())
        .define("LLVM_DEFAULT_TARGET_TRIPLE", target);
 
     if target.starts_with("i686") {
         cfg.define("LLVM_BUILD_32_BITS", "ON");
+    }
+
+    // propagate verbose flag to llvm build
+    if build.flags.verbose > 0 {
+        cfg.define("CMAKE_VERBOSE_MAKEFILE", "ON");
     }
 
     // http://llvm.org/docs/HowToCrossCompileLLVM.html
@


1.2
log
@Divide build time by at least three and various fixes, all from semarie@@

- stop pruning optimizations coming from the environment (ie OpenBSD's
  default -O2 -pipe) when building llvm - this resulted in a very slow
llvm, and in a veeery slow rust build, and an awfully slow rust
compiler. Yay. See https://github.com/rust-lang/rust/issues/39900
- only add cmake to BDEP when rustc is compiled with bundled llvm
- propagate verbose cmake flag to bundled llvm build

tested on i386 and amd64
@
text
@d1 1
a1 1
$OpenBSD: patch-src_bootstrap_native_rs,v 1.1 2017/02/15 12:52:35 landry Exp $
d3 3
a5 3
--- src/bootstrap/native.rs.orig	Thu Feb  9 02:37:48 2017
+++ src/bootstrap/native.rs	Thu Feb 16 12:22:02 2017
@@@@ -85,16 +85,21 @@@@ pub fn llvm(build: &Build, target: &str) {
d25 1
a25 1
+    if build.flags.verbose {
@


1.1
log
@Update to rust 1.15.1.

- switch to rustbuild build system instead of configure (the world
  definitely needed one more build system!)
- the build still takes +INF hours, this is being investigated

Note that rust will be a hard-requirement for gecko 54... sigh.

Tested by semarie@@ and myself on i386 & amd64.

All the hard work and countless build hours by semarie@@, thanks!
@
text
@d1 1
a1 1
$OpenBSD$
d4 2
a5 2
+++ src/bootstrap/native.rs	Fri Feb 10 13:35:47 2017
@@@@ -85,10 +85,10 @@@@ pub fn llvm(build: &Build, target: &str) {
d19 11
@

