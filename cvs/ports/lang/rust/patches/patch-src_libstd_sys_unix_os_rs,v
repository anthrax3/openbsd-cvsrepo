head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.4
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2017.02.15.12.52.35;	author landry;	state Exp;
branches;
next	1.4;
commitid	NM74A8PX4zxQ5FFL;

1.4
date	2016.12.26.13.52.46;	author landry;	state Exp;
branches;
next	1.3;
commitid	iU6h7FSgPqiZKnfv;

1.3
date	2016.10.25.17.08.07;	author danj;	state Exp;
branches;
next	1.2;
commitid	CaXMwV9awx6WTFqu;

1.2
date	2016.06.09.04.20.10;	author semarie;	state Exp;
branches;
next	1.1;
commitid	9ZDpi3B5rLvhZnQP;

1.1
date	2016.05.25.06.39.35;	author semarie;	state Exp;
branches;
next	;
commitid	MXspGwnScCXVczTc;


desc
@@


1.5
log
@Update to rust 1.15.1.

- switch to rustbuild build system instead of configure (the world
  definitely needed one more build system!)
- the build still takes +INF hours, this is being investigated

Note that rust will be a hard-requirement for gecko 54... sigh.

Tested by semarie@@ and myself on i386 & amd64.

All the hard work and countless build hours by semarie@@, thanks!
@
text
@$OpenBSD: patch-src_libstd_sys_unix_os_rs,v 1.4 2016/12/26 13:52:46 landry Exp $
argv0 isn't suitable as current_exe() in all cases.
--- src/libstd/sys/unix/os.rs.orig	Fri Jan 20 21:38:38 2017
+++ src/libstd/sys/unix/os.rs	Mon Jan 30 20:13:43 2017
@@@@ -240,13 +240,14 @@@@ pub fn current_exe() -> io::Result<PathBuf> {
         argv.set_len(argv_len as usize);
         if argv[0].is_null() {
             return Err(io::Error::new(io::ErrorKind::Other,
-                                      "no current exe available"))
+                                      "no current exe available (null)"))
         }
         let argv0 = CStr::from_ptr(argv[0]).to_bytes();
         if argv0[0] == b'.' || argv0.iter().any(|b| *b == b'/') {
             ::fs::canonicalize(OsStr::from_bytes(argv0))
         } else {
-            Ok(PathBuf::from(OsStr::from_bytes(argv0)))
+            Err(io::Error::new(io::ErrorKind::Other,
+                               "no current exe available (short)"))
         }
     }
 }
@


1.4
log
@update rust to 1.14.0, from MAINTAINER semarie@@

for details, please see https://blog.rust-lang.org/2016/12/22/Rust-1.14.html

tested on i386 w/ llvm 3.9.0 here, and sebastien tested both amd64 & i386.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libstd_sys_unix_os_rs,v 1.3 2016/10/25 17:08:07 danj Exp $
d3 3
a5 3
--- src/libstd/sys/unix/os.rs.orig	Sun Dec 18 00:40:11 2016
+++ src/libstd/sys/unix/os.rs	Wed Dec 21 11:18:23 2016
@@@@ -245,13 +245,14 @@@@ pub fn current_exe() -> io::Result<PathBuf> {
@


1.3
log
@Update to rust-1.12.1

For release note see https://blog.rust-lang.org/2016/10/20/Rust-1.12.1.html

Please note, semarie rebuilded the bootstrap due to a bug in rustc: 1.12.0
wasn't able to rebuild 1.12.1 without intrusive patches in the build system

From semarie, ok ajacoutot
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libstd_sys_unix_os_rs,v 1.2 2016/06/09 04:20:10 semarie Exp $
d3 3
a5 3
--- src/libstd/sys/unix/os.rs.orig	Wed Oct 19 23:51:03 2016
+++ src/libstd/sys/unix/os.rs	Sat Oct 22 15:28:15 2016
@@@@ -246,13 +246,14 @@@@ pub fn current_exe() -> io::Result<PathBuf> {
@


1.2
log
@lang/rust: change bootstrap method

OK juanfra@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libstd_sys_unix_os_rs,v 1.1 2016/05/25 06:39:35 semarie Exp $
d3 3
a5 3
--- src/libstd/sys/unix/os.rs.orig	Mon May 23 18:29:00 2016
+++ src/libstd/sys/unix/os.rs	Tue Jun  7 17:36:10 2016
@@@@ -235,13 +235,14 @@@@ pub fn current_exe() -> io::Result<PathBuf> {
@


1.1
log
@lang/rust: fallback to LOCALBASE for sysroot

- std::env::current_exe() returns an error instead of returning wrong
  pathname (no complete, but rust build scripts makes (bad)
  assumptions that I couldn't patch for now).

- rustc / rustdoc to use CFG_PREFIX (configure --prefix value) when
  std::env::current_exe() return an error

- remove the installed wrapper used to pass --sysroot argument to
  rustc (the wrapper was used for workaround the problem differently
  for rustc, but didn't resolv the problem for rustdoc as it doesn't
  have --sysroot argument).

looks ok edd@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 3
--- src/libstd/sys/unix/os.rs.orig	Mon Apr 11 23:22:04 2016
+++ src/libstd/sys/unix/os.rs	Tue May 17 13:56:41 2016
@@@@ -225,13 +225,14 @@@@ pub fn current_exe() -> io::Result<PathBuf> {
@

