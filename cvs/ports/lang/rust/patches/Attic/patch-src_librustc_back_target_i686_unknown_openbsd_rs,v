head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2017.02.15.12.52.35;	author landry;	state dead;
branches;
next	1.2;
commitid	NM74A8PX4zxQ5FFL;

1.2
date	2016.12.26.13.52.46;	author landry;	state Exp;
branches;
next	1.1;
commitid	iU6h7FSgPqiZKnfv;

1.1
date	2016.12.06.22.39.49;	author juanfra;	state Exp;
branches;
next	;
commitid	6fv4mpjJ9hzcRB7g;


desc
@@


1.3
log
@Update to rust 1.15.1.

- switch to rustbuild build system instead of configure (the world
  definitely needed one more build system!)
- the build still takes +INF hours, this is being investigated

Note that rust will be a hard-requirement for gecko 54... sigh.

Tested by semarie@@ and myself on i386 & amd64.

All the hard work and countless build hours by semarie@@, thanks!
@
text
@$OpenBSD: patch-src_librustc_back_target_i686_unknown_openbsd_rs,v 1.2 2016/12/26 13:52:46 landry Exp $
Add i686-unknown-openbsd target.
https://github.com/rust-lang/rust/pull/38086
--- src/librustc_back/target/i686_unknown_openbsd.rs.orig	Wed Dec 21 11:23:51 2016
+++ src/librustc_back/target/i686_unknown_openbsd.rs	Wed Dec 21 11:33:00 2016
@@@@ -0,0 +1,30 @@@@
+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT
+// file at the top-level directory of this distribution and at
+// http://rust-lang.org/COPYRIGHT.
+//
+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
+// option. This file may not be copied, modified, or distributed
+// except according to those terms.
+
+use target::{Target, TargetResult};
+
+pub fn target() -> TargetResult {
+    let mut base = super::openbsd_base::opts();
+    base.cpu = "pentium4".to_string();
+    base.max_atomic_width = Some(64);
+    base.pre_link_args.push("-m32".to_string());
+
+    Ok(Target {
+        llvm_target: "i686-unknown-openbsd".to_string(),
+        target_endian: "little".to_string(),
+        target_pointer_width: "32".to_string(),
+        data_layout: "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128".to_string(),
+        arch: "x86".to_string(),
+        target_os: "openbsd".to_string(),
+        target_env: "".to_string(),
+        target_vendor: "unknown".to_string(),
+        options: base,
+    })
+}
@


1.2
log
@update rust to 1.14.0, from MAINTAINER semarie@@

for details, please see https://blog.rust-lang.org/2016/12/22/Rust-1.14.html

tested on i386 w/ llvm 3.9.0 here, and sebastien tested both amd64 & i386.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_librustc_back_target_i686_unknown_openbsd_rs,v 1.1 2016/12/06 22:39:49 juanfra Exp $
@


1.1
log
@Add support for i386 to rust. From semarie (MAINTAINER).
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 3
https://github.com/rust-lang/rust/pull/38086 (backported)
--- src/librustc_back/target/i686_unknown_openbsd.rs.orig	Tue Nov 29 13:58:28 2016
+++ src/librustc_back/target/i686_unknown_openbsd.rs	Tue Nov 29 13:58:28 2016
d22 1
a22 1
+    base.max_atomic_width = 64;
@

