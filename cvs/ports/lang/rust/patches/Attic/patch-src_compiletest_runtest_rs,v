head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2016.05.29.07.26.46;	author semarie;	state dead;
branches;
next	1.2;
commitid	roUcrlyczCPIKJzh;

1.2
date	2016.04.13.17.33.51;	author semarie;	state Exp;
branches;
next	1.1;
commitid	6yBO8KFZiq55gC0W;

1.1
date	2016.03.11.05.30.45;	author semarie;	state Exp;
branches;
next	;
commitid	LChudS9WWntdF7ec;


desc
@@


1.3
log
@lang/rust update to 1.9.0

- changes in Makefile to make it compute itself the RUST_HASH value

- use new configure option --disable-codegen-tests as with don't have FileCheck
  (from llvm) binary. remove the patches in configure and src/compiletest/runtest.rs

- disable (for now) two news tests added with unix socket support, that doesn't
  pass. I will investigate them later.

- disable run-pass/backtrace test. The support of libbacktrace has been remove
  recently.
@
text
@$OpenBSD: patch-src_compiletest_runtest_rs,v 1.2 2016/04/13 17:33:51 semarie Exp $
disable this part of test, as FileCheck isn't installed with LLVM
--- src/compiletest/runtest.rs.orig	Mon Apr 11 23:22:03 2016
+++ src/compiletest/runtest.rs	Wed Apr 13 14:08:41 2016
@@@@ -1740,33 +1740,15 @@@@ fn compile_test_and_save_ir(config: &Config, props: &T
     compose_and_run_compiler(config, props, testpaths, args, None)
 }
 
-fn check_ir_with_filecheck(config: &Config, testpaths: &TestPaths) -> ProcRes {
-    let irfile = output_base_name(config, testpaths).with_extension("ll");
-    let prog = config.llvm_bin_path.as_ref().unwrap().join("FileCheck");
-    let proc_args = ProcArgs {
-        // FIXME (#9639): This needs to handle non-utf8 paths
-        prog: prog.to_str().unwrap().to_owned(),
-        args: vec!(format!("-input-file={}", irfile.to_str().unwrap()),
-                   testpaths.file.to_str().unwrap().to_owned())
-    };
-    compose_and_run(config, testpaths, proc_args, Vec::new(), "", None, None)
-}
-
 fn run_codegen_test(config: &Config, props: &TestProps, testpaths: &TestPaths) {
 
     if config.llvm_bin_path.is_none() {
         fatal("missing --llvm-bin-path");
     }
 
-    let mut proc_res = compile_test_and_save_ir(config, props, testpaths);
+    let proc_res = compile_test_and_save_ir(config, props, testpaths);
     if !proc_res.status.success() {
         fatal_proc_rec("compilation failed!", &proc_res);
-    }
-
-    proc_res = check_ir_with_filecheck(config, testpaths);
-    if !proc_res.status.success() {
-        fatal_proc_rec("verification with 'FileCheck' failed",
-                      &proc_res);
     }
 }
 
@


1.2
log
@update lang/rust to 1.8.0

ok juanfra@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_compiletest_runtest_rs,v 1.1 2016/03/11 05:30:45 semarie Exp $
@


1.1
log
@lang/rust: use devel/llvm for building

switch from embedded version of LLVM to system version.

OK juanfra@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 4
a6 4
--- src/compiletest/runtest.rs.orig	Mon Mar  7 08:17:06 2016
+++ src/compiletest/runtest.rs	Mon Mar  7 09:37:52 2016
@@@@ -1685,33 +1685,15 @@@@ fn compile_test_and_save_ir(config: &Config, props: &T
     compose_and_run_compiler(config, props, testfile, args, None)
d9 2
a10 2
-fn check_ir_with_filecheck(config: &Config, testfile: &Path) -> ProcRes {
-    let irfile = output_base_name(config, testfile).with_extension("ll");
d16 1
a16 1
-                   testfile.to_str().unwrap().to_owned())
d18 1
a18 1
-    compose_and_run(config, testfile, proc_args, Vec::new(), "", None, None)
d21 1
a21 1
 fn run_codegen_test(config: &Config, props: &TestProps, testfile: &Path) {
d27 2
a28 2
-    let mut proc_res = compile_test_and_save_ir(config, props, testfile);
+    let proc_res = compile_test_and_save_ir(config, props, testfile);
d33 1
a33 1
-    proc_res = check_ir_with_filecheck(config, testfile);
@

