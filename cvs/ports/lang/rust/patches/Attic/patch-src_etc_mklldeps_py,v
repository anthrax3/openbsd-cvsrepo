head	1.3;
access;
symbols
	OPENBSD_5_8:1.1.1.1.0.4
	OPENBSD_5_8_BASE:1.1.1.1
	landry_20150406:1.1.1.1
	semarie:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.12.10.17.53.57;	author semarie;	state dead;
branches;
next	1.2;
commitid	rTjQKlw1EGnVsQEs;

1.2
date	2015.08.28.06.51.07;	author semarie;	state Exp;
branches;
next	1.1;
commitid	5sBLchUKJep1BMsW;

1.1
date	2015.04.06.16.01.05;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	uNXShIOtritg9vBI;

1.1.1.1
date	2015.04.06.16.01.05;	author landry;	state Exp;
branches;
next	;
commitid	uNXShIOtritg9vBI;


desc
@@


1.3
log
@update lang/rust to 1.5.0

ok landry@@
@
text
@$OpenBSD: patch-src_etc_mklldeps_py,v 1.2 2015/08/28 06:51:07 semarie Exp $
Configure linking to estdc++ (stdc++ library from devel/gcc, not from base)
--- src/etc/mklldeps.py.orig	Tue Aug  4 21:28:48 2015
+++ src/etc/mklldeps.py	Fri Aug  7 06:43:26 2015
@@@@ -78,15 +78,15 @@@@ for lib in out.strip().split(' '):
 out = run([llconfig, '--cxxflags'])
 if enable_static == '1':
     assert('stdlib=libc++' not in out)
-    f.write("#[link(name = \"stdc++\", kind = \"static\")]\n")
+    f.write("#[link(name = \"estdc++\", kind = \"static\")]\n")
 else:
     # Note that we use `cfg_attr` here because on MSVC the C++ standard library
-    # is not c++ or stdc++, but rather the linker takes care of linking the
+    # is not c++ or estdc++, but rather the linker takes care of linking the
     # right standard library.
     if 'stdlib=libc++' in out:
         f.write("#[cfg_attr(not(target_env = \"msvc\"), link(name = \"c++\"))]\n")
     else:
-        f.write("#[cfg_attr(not(target_env = \"msvc\"), link(name = \"stdc++\"))]\n")
+        f.write("#[cfg_attr(not(target_env = \"msvc\"), link(name = \"estdc++\"))]\n")
 
 # Attach everything to an extern block
 f.write("extern {}\n")
@


1.2
log
@update rust to 1.2.0

ok jca@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_etc_mklldeps_py,v 1.1.1.1 2015/04/06 16:01:05 landry Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 3
--- src/etc/mklldeps.py.orig	Thu Apr  2 18:29:13 2015
+++ src/etc/mklldeps.py	Fri Apr  3 20:04:01 2015
@@@@ -88,12 +88,12 @@@@ for lib in out.strip().split(' '):
d12 4
d17 1
a17 1
         f.write("#[link(name = \"c++\")]\n")
d19 2
a20 2
-        f.write("#[link(name = \"stdc++\")]\n")
+        f.write("#[link(name = \"estdc++\")]\n")
@


1.1.1.1
log
@Import rust 1.0.0beta, all the hard work from Sébastien Marie (thanks!)

Rust is a systems programming language that runs blazingly fast, prevents
almost all crashes, and eliminates data races.

Featuring:
- zero-cost abstractions
- move semantics
- guaranteed memory safety
- threads without data races
- trait-based generics
- pattern matching
- type inference
- minimal runtime
- efficient C bindings

some packaging tweaks by me, ok/testing bcallah@@ jca@@
@
text
@@
