head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.34
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.32
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.28
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.30
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.26
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.24
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.22
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.20
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.18
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.16
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.14
	OPENBSD_5_0:1.4.0.12
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.10
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.8
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2009.01.21.18.30.16;	author kili;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.15.19.12.09;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.03.09.03.12;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.03.08.55.15;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
Update to scm 5e5.
Update HOMEPAGE and MASTER_SITES.
Add license marker.

portswise ok, jasper@@
"if it works...", espie@@ (MAINTAINER).
@
text
@$OpenBSD: patch-scmfig_h,v 1.3 2004/09/15 19:12:09 espie Exp $
--- scmfig.h.orig	Thu Jan 31 02:50:56 2008
+++ scmfig.h	Sat Nov 29 15:26:11 2008
@@@@ -118,7 +118,7 @@@@ rgx.c	init_rgx();	regcomp and regexec. */
 /* Define CDR_DOUBLES if (sizeof(double)==sizeof(long)), i.e.
    a `single' is really a double. */
 #ifdef FLOATS
-# ifdef __alpha
+# if defined(__LP64__)
 #  define CDR_DOUBLES
 # endif
 
@@@@ -253,7 +253,7 @@@@ rgx.c	init_rgx();	regcomp and regexec. */
 #  endif
 # endif
 #endif
-#ifdef __alpha
+#if defined(__LP64__)
 # define SHORT_INT
 #endif
 #ifdef __ia64__
@


1.3
log
@update to more recent version, new PLIST.
@
text
@d1 4
a4 4
$OpenBSD$
--- scmfig.h.orig	Mon Sep 22 01:42:46 2003
+++ scmfig.h	Sun Sep  5 11:41:32 2004
@@@@ -144,7 +144,7 @@@@ rgx.c	init_rgx();	regcomp and regexec. *
d13 1
a13 1
@@@@ -278,7 +278,7 @@@@ rgx.c	init_rgx();	regcomp and regexec. *
d21 1
a21 1
 #ifdef __ia64
@


1.2
log
@get this to pass most of the regresses on sparc64 (now checks for __LP64__ for 64-bitness)
@
text
@d1 4
a4 4
$OpenBSD: patch-scmfig_h,v 1.1 2004/03/03 08:55:15 pvalchev Exp $
--- scmfig.h.orig	2000-05-01 20:21:39.000000000 -0600
+++ scmfig.h	2004-03-03 01:59:07.000000000 -0700
@@@@ -102,7 +102,7 @@@@ rgx.c	init_rgx();	regcomp and regexec. *
d13 1
a13 1
@@@@ -236,7 +236,7 @@@@ rgx.c	init_rgx();	regcomp and regexec. *
d21 1
a21 1
 #ifdef MSDOS			/* Microsoft C 5.10 and 6.00A */
@


1.1
log
@amd64 support - now passes all regress
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ scmfig.h	2004-03-03 01:52:04.000000000 -0700
d9 1
a9 1
+# if defined(__alpha) || defined(__amd64__)
d18 1
a18 1
+#if defined(__alpha) || defined(__amd64__)
@

