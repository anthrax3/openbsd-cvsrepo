head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.18
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.16
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.1.1.0.4
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	jasper_20122606:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.04.18.22.35.36;	author jturner;	state Exp;
branches;
next	1.1;

1.1
date	2012.06.26.19.53.38;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.06.26.19.53.38;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update tinyscheme to 1.41.

ok jasper@@
@
text
@$OpenBSD: patch-makefile,v 1.1.1.1 2012/06/26 19:53:38 jasper Exp $
--- makefile.orig	Sun Apr 14 16:08:33 2013
+++ makefile	Wed Apr 17 13:33:14 2013
@@@@ -18,7 +18,7 @@@@
 #AR= echo
 
 # Unix, generally
-CC = gcc -fpic -pedantic
+CC ?= gcc -fpic -pedantic
 DEBUG=-g -Wall -Wno-char-subscripts -O
 Osuf=o
 SOsuf=so
@@@@ -30,10 +30,10 @@@@ RM= -rm -f
 AR= ar crs
 
 # Linux
-LD = gcc
+LD ?= gcc
 LDFLAGS = -shared
 DEBUG=-g -Wno-char-subscripts -O
-SYS_LIBS= -ldl -lm
+SYS_LIBS= -lm
 PLATFORM_FEATURES= -DSUN_DL=1
 
 # Cygwin
@@@@ -77,7 +77,7 @@@@ $(LIBTARGET): $(OBJS)
 	$(LD) $(LDFLAGS) $(OUT) $(OBJS) $(SYS_LIBS)
 
 scheme$(EXE_EXT): $(OBJS)
-	$(CC) -o $@@ $(DEBUG) $(OBJS) $(SYS_LIBS)
+	$(CC) $(CFLAGS) -o $@@ $(DEBUG) $(OBJS) $(SYS_LIBS)
 
 $(STATICLIBTARGET): $(OBJS)
 	$(AR) $@@ $(OBJS)
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- makefile.orig	Sun Jan 16 08:51:17 2011
+++ makefile	Mon Jun 18 12:02:25 2012
d8 2
a9 2
-CC = gcc -fpic
+CC ?= gcc -fpic
a17 1
-LDFLAGS = -shared
d19 1
a19 1
+LDFLAGS = -shared 
d21 1
a21 1
-SYS_LIBS= -ldl
d26 1
a26 1
@@@@ -66,7 +66,7 @@@@ $(LIBTARGET): $(OBJS)
@


1.1.1.1
log
@import tinyscheme 1.40

TinyScheme is a lightweight Scheme interpreter that implements as large
a subset of R5RS as was possible without getting very large and
complicated. It is meant to be used as an embedded scripting interpreter
for other programs. As such, it does not offer IDEs or extensive
toolkits although it does sport a small top-level loop, included
conditionally.

ok sthen@@
@
text
@@
