head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2016.01.30.09.31.59;	author jasper;	state Exp;
branches;
next	1.3;
commitid	C5cOHT2vTWLVUisE;

1.3
date	2014.03.30.21.08.24;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.17.19.38.04;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2013.03.08.10.24.00;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove duplicates from the completions list
@
text
@;;; $OpenBSD: clj_completions.clj,v 1.3 2014/03/30 21:08:24 jasper Exp $

(def completions (mapcat (comp keys ns-publics) (all-ns)))
(with-open [f (java.io.BufferedWriter. (java.io.FileWriter. "files/clj_completions"))]
	   (.write f (apply str (interpose \newline (sort (distinct completions))))))
@


1.3
log
@write out the sorted list of completions, makes it easier to diff the list
@
text
@d1 1
a1 1
;;; $OpenBSD: clj_completions.clj,v 1.2 2013/03/17 19:38:04 jasper Exp $
d5 1
a5 1
	   (.write f (apply str (interpose \newline (sort completions)))))
@


1.2
log
@directly write the completions file into ${FILESDIR}
@
text
@d1 1
a1 1
;;; $OpenBSD: clj_completions.clj,v 1.1 2013/03/08 10:24:00 jasper Exp $
d5 1
a5 1
	   (.write f (apply str (interpose \newline completions))))
@


1.1
log
@add a maintainer target to generate the completions with.
@
text
@d1 1
a1 1
;;; $OpenBSD$
d4 1
a4 1
(with-open [f (java.io.BufferedWriter. (java.io.FileWriter. "clj_completions"))]
@

