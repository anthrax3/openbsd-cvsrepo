head	1.4;
access;
symbols
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2017.02.23.15.57.42;	author jsing;	state dead;
branches;
next	1.3;
commitid	tyDwkty62G8hu8ka;

1.3
date	2016.08.18.17.23.03;	author jsing;	state Exp;
branches;
next	1.2;
commitid	3gjN7l5yQTvsZq8b;

1.2
date	2016.06.27.15.57.17;	author jsing;	state Exp;
branches;
next	1.1;
commitid	RYIB8AEhqgQvJV0J;

1.1
date	2016.05.13.13.49.26;	author jsing;	state Exp;
branches;
next	;
commitid	g3krlAVqaIA6Dpwv;


desc
@@


1.4
log
@Update lang/go to version 1.8.

ok ajacoutot@@
@
text
@$OpenBSD: patch-src_runtime_sys_openbsd_386_s,v 1.3 2016/08/18 17:23:03 jsing Exp $
--- src/runtime/sys_openbsd_386.s.orig	Tue Aug  9 05:18:31 2016
+++ src/runtime/sys_openbsd_386.s	Fri Aug 12 02:46:38 2016
@@@@ -79,14 +79,15 @@@@ TEXT runtime·usleep(SB),NOSPLIT,$24
 	INT	$0x80
 	RET
 
-TEXT runtime·raise(SB),NOSPLIT,$12
+TEXT runtime·raise(SB),NOSPLIT,$16
 	MOVL	$299, AX		// sys_getthrid
 	INT	$0x80
 	MOVL	$0, 0(SP)
-	MOVL	AX, 4(SP)		// arg 1 - pid
+	MOVL	AX, 4(SP)		// arg 1 - tid
 	MOVL	sig+0(FP), AX
 	MOVL	AX, 8(SP)		// arg 2 - signum
-	MOVL	$37, AX			// sys_kill
+	MOVL	$0, 12(SP)		// arg 3 - tcb
+	MOVL	$119, AX		// sys_thrkill
 	INT	$0x80
 	RET
 
@@@@ -97,7 +98,7 @@@@ TEXT runtime·raiseproc(SB),NOSPLIT,$12
 	MOVL	AX, 4(SP)		// arg 1 - pid
 	MOVL	sig+0(FP), AX
 	MOVL	AX, 8(SP)		// arg 2 - signum
-	MOVL	$37, AX			// sys_kill
+	MOVL	$122, AX		// sys_kill
 	INT	$0x80
 	RET
 
@


1.3
log
@Upgrade lang/go to 1.7.

ok czarkoff@@ pea@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update lang/go to handle the sys_thrkill/sys_kill change.

Partially based on a diff from Ray Lai.
@
text
@d1 3
a3 3
$OpenBSD: patch-src_runtime_sys_openbsd_386_s,v 1.1 2016/05/13 13:49:26 jsing Exp $
--- src/runtime/sys_openbsd_386.s.orig	Wed Apr 20 09:50:09 2016
+++ src/runtime/sys_openbsd_386.s	Tue Jun 21 19:08:25 2016
a31 15
@@@@ -214,14 +215,6 @@@@ TEXT runtime·sigtramp(SB),NOSPLIT,$12
 	MOVL	context+8(FP), BX
 	MOVL	BX, 8(SP)
 	CALL	runtime·sigtrampgo(SB)
-
-	// call sigreturn
-	MOVL	context+8(FP), AX
-	MOVL	$0, 0(SP)		// syscall gap
-	MOVL	AX, 4(SP)		// arg 1 - sigcontext
-	MOVL	$103, AX		// sys_sigreturn
-	INT	$0x80
-	MOVL	$0xf1, 0xf1		// crash
 	RET
 
 // int32 tfork(void *param, uintptr psize, M *mp, G *gp, void (*fn)(void));
@


1.1
log
@Stop using sigreturn from the Go openbsd/386 signal trampoline - the
sigreturn syscall is going away in future versions of OpenBSD and its
use for Go is already broken due to the trampoline return checks. Instead
just return directly from the signal trampoline (as we have always done
for Go openbsd/amd64).

Also fix a bug in the Go openbsd/386 linker, which results in symbols in
the dynamic symbol table being emitted with a size of zero. With a current
ld.so, this results in symbol mismatch warnings.

Unbreaks the Go port on openbsd/386, however it still fails to pass regress
due to the PT_TLS changes.
@
text
@d1 32
a32 4
$OpenBSD$
--- src/runtime/sys_openbsd_386.s.orig	Thu May  5 01:27:04 2016
+++ src/runtime/sys_openbsd_386.s	Thu May  5 01:27:41 2016
@@@@ -214,14 +214,6 @@@@ TEXT runtime·sigtramp(SB),NOSPLIT,$12
@

