head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_7:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2015.12.05.05.01.24;	author jsing;	state dead;
branches;
next	1.1;
commitid	fN4NDcqKzRslRp48;

1.1
date	2015.08.19.06.57.20;	author jasper;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;
commitid	priIahc6vP5BPOF5;

1.1.2.1
date	2015.08.19.07.02.31;	author jasper;	state Exp;
branches;
next	;
commitid	kEdqzVSwn67hPwNy;

1.1.4.1
date	2015.08.22.08.19.06;	author jasper;	state Exp;
branches;
next	;
commitid	YwIIWtYCC9fj2SC3;


desc
@@


1.2
log
@Update to Go 1.5.2.

This also installs in a manner that allows /usr/local/go to now be used for
GOROOT_BOOTSTRAP, if building from source.

ok jasper@@
@
text
@$OpenBSD: patch-src_net_textproto_reader_go,v 1.1 2015/08/19 06:57:20 jasper Exp $

Security fix for CVE-2015-5739, "Content Length" treated as valid header
https://github.com/golang/go/commit/117ddcb83d7f42d6aa72241240af99ded81118e9

--- src/net/textproto/reader.go.orig	Wed Feb 18 05:38:34 2015
+++ src/net/textproto/reader.go	Thu Aug 13 18:10:28 2015
@@@@ -540,11 +540,16 @@@@ func (r *Reader) upcomingHeaderNewlines() (n int) {
 // the rest are converted to lowercase.  For example, the
 // canonical key for "accept-encoding" is "Accept-Encoding".
 // MIME header keys are assumed to be ASCII only.
+// If s contains a space or invalid header field bytes, it is
+// returned without modifications.
 func CanonicalMIMEHeaderKey(s string) string {
 	// Quick check for canonical encoding.
 	upper := true
 	for i := 0; i < len(s); i++ {
 		c := s[i]
+		if !validHeaderFieldByte(c) {
+			return s
+		}
 		if upper && 'a' <= c && c <= 'z' {
 			return canonicalMIMEHeaderKey([]byte(s))
 		}
@@@@ -558,19 +563,44 @@@@ func CanonicalMIMEHeaderKey(s string) string {
 
 const toLower = 'a' - 'A'
 
+// validHeaderFieldByte reports whether b is a valid byte in a header
+// field key. This is actually stricter than RFC 7230, which says:
+//   tchar = "!" / "#" / "$" / "%" / "&" / "'" / "*" / "+" / "-" / "." /
+//           "^" / "_" / "`" / "|" / "~" / DIGIT / ALPHA
+//   token = 1*tchar
+// TODO: revisit in Go 1.6+ and possibly expand this. But note that many
+// servers have historically dropped '_' to prevent ambiguities when mapping
+// to CGI environment variables.
+func validHeaderFieldByte(b byte) bool {
+	return ('A' <= b && b <= 'Z') ||
+		('a' <= b && b <= 'z') ||
+		('0' <= b && b <= '9') ||
+		b == '-'
+}
+
 // canonicalMIMEHeaderKey is like CanonicalMIMEHeaderKey but is
 // allowed to mutate the provided byte slice before returning the
 // string.
+//
+// For invalid inputs (if a contains spaces or non-token bytes), a
+// is unchanged and a string copy is returned.
 func canonicalMIMEHeaderKey(a []byte) string {
+	// See if a looks like a header key. If not, return it unchanged.
+	for _, c := range a {
+		if validHeaderFieldByte(c) {
+			continue
+		}
+		// Don't canonicalize.
+		return string(a)
+	}
+
 	upper := true
 	for i, c := range a {
 		// Canonicalize: first letter upper case
 		// and upper case after each dash.
 		// (Host, User-Agent, If-Modified-Since).
 		// MIME headers are ASCII only, so no Unicode issues.
-		if c == ' ' {
-			c = '-'
-		} else if upper && 'a' <= c && c <= 'z' {
+		if upper && 'a' <= c && c <= 'z' {
 			c -= toLower
 		} else if !upper && 'A' <= c && c <= 'Z' {
 			c += toLower
@


1.1
log
@backport various security fixes:
- CVE-2015-5739, "Content Length" treated as valid header
- CVE-2015-5740, Double content-length headers does not return 400 error
- CVE-2015-5741, Additional hardening, not sending Content-Length w/Transfer-Encoding, Closing connections

from upstream git

ok jsing@@ (MAINTAINER), czarkoff@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.4.1
log
@backport various security fixes:
- CVE-2015-5739, "Content Length" treated as valid header
- CVE-2015-5740, Double content-length headers does not return 400 error
- CVE-2015-5741, Additional hardening, not sending Content-Length w/Transfer-Encoding, Closing connections

from upstream git

ok jsing@@ (MAINTAINER), czarkoff@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_net_textproto_reader_go,v 1.1 2015/08/19 06:57:20 jasper Exp $
@


1.1.2.1
log
@backport various security fixes from upstream git:
- CVE-2015-5739, "Content Length" treated as valid header
- CVE-2015-5740, Double content-length headers does not return 400 error
- CVE-2015-5741, Additional hardening, not sending Content-Length w/Transfer-Encoding, Closing connections

ok jsing@@ (MAINTAINER), czarkoff@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_net_textproto_reader_go,v 1.1 2015/08/19 06:57:20 jasper Exp $
@

