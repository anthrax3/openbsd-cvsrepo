head	1.3;
access;
symbols
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.02.23.15.57.42;	author jsing;	state Exp;
branches;
next	1.2;
commitid	tyDwkty62G8hu8ka;

1.2
date	2016.08.18.17.23.03;	author jsing;	state Exp;
branches;
next	1.1;
commitid	3gjN7l5yQTvsZq8b;

1.1
date	2016.05.16.13.50.02;	author jsing;	state Exp;
branches;
next	;
commitid	N66RyVsFkEd9Jwws;


desc
@@


1.3
log
@Update lang/go to version 1.8.

ok ajacoutot@@
@
text
@$OpenBSD: patch-src_cmd_link_internal_ld_data_go,v 1.2 2016/08/18 17:23:03 jsing Exp $
--- src/cmd/link/internal/ld/data.go.orig	Fri Jan 27 05:54:57 2017
+++ src/cmd/link/internal/ld/data.go	Mon Jan 23 15:22:25 2017
@@@@ -449,7 +449,7 @@@@ func relocsym(ctxt *Link, s *Symbol) {
 		case obj.R_TLS_LE:
 			isAndroidX86 := obj.GOOS == "android" && (SysArch.InFamily(sys.AMD64, sys.I386))
 
-			if Linkmode == LinkExternal && Iself && Headtype != obj.Hopenbsd && !isAndroidX86 {
+			if Linkmode == LinkExternal && Iself && !isAndroidX86 {
 				r.Done = 0
 				if r.Sym == nil {
 					r.Sym = ctxt.Tlsg
@@@@ -483,7 +483,7 @@@@ func relocsym(ctxt *Link, s *Symbol) {
 		case obj.R_TLS_IE:
 			isAndroidX86 := obj.GOOS == "android" && (SysArch.InFamily(sys.AMD64, sys.I386))
 
-			if Linkmode == LinkExternal && Iself && Headtype != obj.Hopenbsd && !isAndroidX86 {
+			if Linkmode == LinkExternal && Iself && !isAndroidX86 {
 				r.Done = 0
 				if r.Sym == nil {
 					r.Sym = ctxt.Tlsg
@@@@ -1566,7 +1566,7 @@@@ func (ctxt *Link) dodata() {
 
 	if len(data[obj.STLSBSS]) > 0 {
 		var sect *Section
-		if Iself && (Linkmode == LinkExternal || !*FlagD) && Headtype != obj.Hopenbsd {
+		if Iself && (Linkmode == LinkExternal || !*FlagD) {
 			sect = addsection(&Segdata, ".tbss", 06)
 			sect.Align = int32(SysArch.PtrSize)
 			sect.Vaddr = 0
@


1.2
log
@Upgrade lang/go to 1.7.

ok czarkoff@@ pea@@
@
text
@d1 4
a4 4
$OpenBSD: patch-src_cmd_link_internal_ld_data_go,v 1.1 2016/05/16 13:50:02 jsing Exp $
--- src/cmd/link/internal/ld/data.go.orig	Tue Aug  9 05:18:29 2016
+++ src/cmd/link/internal/ld/data.go	Fri Aug 12 02:51:14 2016
@@@@ -400,7 +400,7 @@@@ func relocsym(s *LSym) {
d6 1
a6 1
 			isAndroidX86 := goos == "android" && (SysArch.InFamily(sys.AMD64, sys.I386))
d8 1
a8 1
-			if Linkmode == LinkExternal && Iself && HEADTYPE != obj.Hopenbsd && !isAndroidX86 {
d12 2
a13 2
 					r.Sym = Ctxt.Tlsg
@@@@ -434,7 +434,7 @@@@ func relocsym(s *LSym) {
d15 1
a15 1
 			isAndroidX86 := goos == "android" && (SysArch.InFamily(sys.AMD64, sys.I386))
d17 1
a17 1
-			if Linkmode == LinkExternal && Iself && HEADTYPE != obj.Hopenbsd && !isAndroidX86 {
d21 2
a22 2
 					r.Sym = Ctxt.Tlsg
@@@@ -1489,7 +1489,7 @@@@ func dodata() {
d26 2
a27 2
-		if Iself && (Linkmode == LinkExternal || Debug['d'] == 0) && HEADTYPE != obj.Hopenbsd {
+		if Iself && (Linkmode == LinkExternal || Debug['d'] == 0) {
@


1.1
log
@Allow lang/go to generate PT_TLS when cgo is used on OpenBSD. This makes
Go 1.6 pass regress on openbsd/386 and openbsd/amd64. Also stop exporting
environ and __progname from cgo, since these symbols are no longer required
by libc.
@
text
@d1 4
a4 4
$OpenBSD$
--- src/cmd/link/internal/ld/data.go.orig	Thu Feb 18 07:35:20 2016
+++ src/cmd/link/internal/ld/data.go	Sat May 14 02:18:17 2016
@@@@ -385,7 +385,7 @@@@ func relocsym(s *LSym) {
d6 1
a6 1
 			isAndroidX86 := goos == "android" && (Thearch.Thechar == '6' || Thearch.Thechar == '8')
d13 1
a13 1
@@@@ -419,7 +419,7 @@@@ func relocsym(s *LSym) {
d15 1
a15 1
 			isAndroidX86 := goos == "android" && (Thearch.Thechar == '6' || Thearch.Thechar == '8')
d22 1
a22 2
@@@@ -1413,7 +1413,7 @@@@ func dodata() {
 	}
d24 2
a25 1
 	if s != nil && s.Type == obj.STLSBSS {
d29 1
a29 1
 			sect.Align = int32(Thearch.Ptrsize)
@

