head	1.22;
access;
symbols
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.17.0.2
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.9.0.2
	OPENBSD_5_5_BASE:1.9
	sthen_20130919:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.22
date	2015.07.16.00.27.57;	author juanfra;	state dead;
branches;
next	1.21;
commitid	uH5PzJeKD0zIfciF;

1.21
date	2015.04.10.16.45.12;	author juanfra;	state Exp;
branches;
next	1.20;
commitid	CAOROlzj08t47c0B;

1.20
date	2014.11.12.02.35.29;	author juanfra;	state Exp;
branches
	1.20.2.1;
next	1.19;
commitid	BGu6lu3hk8M90T7C;

1.19
date	2014.11.11.23.51.51;	author juanfra;	state Exp;
branches;
next	1.18;
commitid	jJZWunEk9OSNbvdS;

1.18
date	2014.08.19.22.51.20;	author juanfra;	state Exp;
branches;
next	1.17;
commitid	QvmIDKxGqUJQ9ATx;

1.17
date	2014.07.26.18.03.31;	author juanfra;	state Exp;
branches;
next	1.16;
commitid	fZXLfSzy1LGd8EFD;

1.16
date	2014.07.15.15.32.41;	author juanfra;	state Exp;
branches;
next	1.15;
commitid	iz9GuJqJrIfEIVJM;

1.15
date	2014.07.15.00.13.16;	author juanfra;	state Exp;
branches;
next	1.14;
commitid	8iEk5M6ckSx38uNs;

1.14
date	2014.06.22.10.59.37;	author juanfra;	state Exp;
branches;
next	1.13;
commitid	DbI0GfEVhN5HyzMt;

1.13
date	2014.05.14.17.51.40;	author juanfra;	state Exp;
branches;
next	1.12;

1.12
date	2014.04.09.21.20.33;	author kili;	state Exp;
branches;
next	1.11;

1.11
date	2014.04.09.03.34.48;	author juanfra;	state Exp;
branches;
next	1.10;

1.10
date	2014.03.10.20.27.25;	author landry;	state Exp;
branches;
next	1.9;

1.9
date	2014.01.17.19.46.21;	author juanfra;	state Exp;
branches;
next	1.8;

1.8
date	2014.01.16.01.49.32;	author juanfra;	state Exp;
branches;
next	1.7;

1.7
date	2014.01.10.11.26.02;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2014.01.07.19.01.36;	author juanfra;	state Exp;
branches;
next	1.5;

1.5
date	2013.11.25.14.16.23;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2013.10.16.19.22.36;	author juanfra;	state Exp;
branches;
next	1.3;

1.3
date	2013.10.13.17.27.20;	author juanfra;	state Exp;
branches;
next	1.2;

1.2
date	2013.09.19.14.56.28;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2013.09.19.14.55.55;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.09.19.14.55.55;	author sthen;	state Exp;
branches;
next	;

1.20.2.1
date	2016.02.09.01.33.39;	author juanfra;	state Exp;
branches;
next	;
commitid	5kymxA7VPlKiOqDH;


desc
@@


1.22
log
@-racket
@
text
@# $OpenBSD: Makefile,v 1.21 2015/04/10 16:45:12 juanfra Exp $

# Racket devs use something like "6.1.90.900" for pre-release versions
PORTROACH =		limit:!.*\.[0-9][0-9][0-9]-src-builtpkgs$$

BROKEN-hppa =		segfault while racket compiles XFORMS (at xsrc)
BROKEN-mips64el =	sigbus while racket compiles XFORMS (at xsrc)
BROKEN-powerpc =	racket builds but does not pass the tests (with or without JIT)

SHARED_ONLY =		Yes
ONLY_FOR_ARCHS =	i386 amd64 hppa mips64el powerpc

COMMENT =		multi-paradigm programming language

V =			6.1.1
REVISION =		0
PKGNAME =		racket-$V
DISTNAME =		racket-$V-src-builtpkgs

CATEGORIES =		lang
HOMEPAGE =		http://racket-lang.org/
MAINTAINER =		Juan Francisco Cantero Hurtado <juanfra@@openbsd.org>

# LGPLv3
PERMIT_PACKAGE_CDROM =	Yes

MASTER_SITES =		https://www.cs.utah.edu/plt/installers/${V}/ \
			http://mirror.racket-lang.org/installers/${V}/ \
			http://www.eecs.northwestern.edu/racket/${V}/ \
			http://mirror.informatik.uni-tuebingen.de/mirror/racket/${V}/ \
			http://racket.infogroep.be/${V}/ \
			http://pre-release.racket-lang.org/installers/ \
			http://pre.racket-lang.org/release/installers/ \
			http://pre.racket-lang.org/installers/ \
			https://www.cs.utah.edu/plt/snapshots/current/installers/ \
			http://plt.eecs.northwestern.edu/snapshots/current/installers/ \
			http://download.tuxfamily.org/jod/lang/racket/ \
			ftp://download.tuxfamily.org/jod/lang/racket/
EXTRACT_SUFX =		.tgz

MODULES +=		converters/libiconv

# http://docs.racket-lang.org/draw/libs.html
# http://docs.racket-lang.org/gui/libs.html
# Some deps are listed in the README, others in the doc and others
# are called by ffi.
LIB_DEPENDS =		databases/iodbc,-main \
			devel/libffi>=3.0.9p2 \
			devel/libunique
BUILD_DEPENDS =		devel/pango \
			graphics/jpeg
RUN_DEPENDS =		devel/desktop-file-utils

WANTLIB += c m pthread ffi
# Loaded using FFI
WANTLIB += GL X11 iodbc unique-1.0

WRKDIST =		${WRKDIR}/racket-$V
WRKSRC =		${WRKDIST}/src

# The tests are installed from raco as a package
NO_TEST =		Yes
SEPARATE_BUILD =	Yes

CONFIGURE_STYLE =	gnu
CONFIGURE_ARGS +=	--enable-libffi \
			--enable-gracket \
			--enable-jit \
			--enable-foreign \
			--enable-float \
			--enable-docs \
			--enable-lt=${LIBTOOL}
# "backtrace" is expensive.
# http://article.gmane.org/gmane.comp.lang.racket.devel/6700
# "places" and "futures" require thread-local storage and atomic CAS
# http://article.gmane.org/gmane.comp.lang.racket.user/16723
CONFIGURE_ARGS +=	--disable-backtrace \
			--disable-places \
			--disable-futures

CONFIGURE_ENV =		LDFLAGS="-L${LOCALBASE}/lib -L${X11BASE}/lib" \
			CPPFLAGS="-I${LOCALBASE}/include -I${X11BASE}/include" \
			LIBracket3m_MAJOR=${LIBracket3m_VERSION:R} \
			LIBracket3m_MINOR=${LIBracket3m_VERSION:E}

FLAVORS =		debug
FLAVOR ?=
.if ${FLAVOR:Mdebug}
CONFIGURE_ARGS +=	--disable-strip \
			--enable-noopt
.endif

post-install:
	@@mv ${WRKINST}/etc/racket ${PREFIX}/share/examples

# Since 5.3.4 if __SSE_MATH__ is defined (C_COMPILER_USES_SSE) and
# MZ_TRY_EXTFLONUMS enabled, MZ_LONG_DOUBLE (extflonum) is turned on. Also
# C_COMPILER_USES_SSE turn on MZ_USE_JIT_SSE.
# "-msse -mfpmath=sse" required by extflonum on i386.
.if ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "amd64"
CONFIGURE_ENV +=	CFLAGS="${CFLAGS} -msse -mfpmath=sse"
CONFIGURE_ARGS +=	--enable-extflonum
.endif

.include <bsd.port.mk>
@


1.21
log
@PORTROACH limit. "looks about right" jasper@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2014/11/12 02:35:29 juanfra Exp $
@


1.20
log
@I forgot to add the new wantlibs in the previous commit.
Tested on amd64 and i386.
@
text
@d1 4
a4 1
# $OpenBSD: Makefile,v 1.16 2014/07/15 15:32:41 juanfra Exp $
@


1.20.2.1
log
@SECURITY: Fix a vulnerability in the Racket web server.

http://article.gmane.org/gmane.comp.lang.racket.user/30142
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2014/11/12 02:35:29 juanfra Exp $
d13 1
a13 1
REVISION =		1
@


1.19
log
@Update to racket 6.1.1.

The installation of the shared lib is not recommended by upstream and
nobody is using it, so I'm removing the lib from the package.
@
text
@d13 1
d51 3
a53 1
WANTLIB += c m pthread ffi iodbc unique-1.0
@


1.18
log
@Update to Racket 6.1. Tested on amd64 and i386.
@
text
@d12 1
a12 1
V =			6.1
a15 5
# Each new version of racket is incompatible with the previous one.
# Increase always the major number.
# http://article.gmane.org/gmane.comp.lang.racket.devel/9872
SHARED_LIBS +=		racket3m	3.0 # 6.1

d31 2
d45 1
a45 2
			devel/libunique \
			x11/gtkglext
d50 1
a50 1
WANTLIB += c m pthread ffi iodbc unique-1.0 gtkglext-x11-1.0 gdkglext-x11-1.0
d60 1
a60 2
CONFIGURE_ARGS +=	${CONFIGURE_SHARED} \
			--enable-libffi \
a73 6

# Enable Senora GC by default. Racket uses an old version of Boehm GC with some
# local changes for the first step of the bootstrap. Senora is an alternative,
# more simple (and slightly more slow) GC. With this enabled, we avoid possible
# bugs of the old version of Boehm with the modern versions of OpenBSD.
CONFIGURE_ARGS +=	--enable-sgc
@


1.17
log
@Unbreak Racket on i386 changing the default GC to Senora.

Matthew Flatt (Racket) suggested to change the default GC instead of
to patch the outdated version of Boehm included with Racket.

Problems on i386 reported by sthen@@. Tested on amd64 and i386 by me.

OK sthen@@ jasper@@.
@
text
@d12 1
a12 2
V =			6.0.1
REVISION =		3
d19 1
a19 1
SHARED_LIBS +=		racket3m	2.0 # 6.0.1
d33 1
@


1.16
log
@Fix a compiler warning. Backported from boehm.

I also added ELFCLASS64 to MIPS. We don't need the 32bits support.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2014/07/15 00:13:16 juanfra Exp $
d13 1
a13 1
REVISION =		2
d79 6
@


1.15
log
@- Unbreak racket after the last header changes. Spotted by sthen@@.
- Add minimal support for powerpc (broken). Tested on Jan Stary's macppc. Thanks!
- The additional changes are a WIP for the next version.
- Enable the assembler code again in gmplonglong for i386 and amd64.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2014/06/22 10:59:37 juanfra Exp $
d13 1
a13 1
REVISION =		1
@


1.14
log
@BROKEN-mips64el. Tests on loongson by jturner@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2014/05/14 17:51:40 juanfra Exp $
d5 1
d8 1
a8 1
ONLY_FOR_ARCHS =	i386 amd64 hppa mips64el
d13 1
a13 1
REVISION =		0
@


1.13
log
@Update to Racket 6.0.1. ok jturner@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2014/04/09 21:20:33 kili Exp $
d3 2
a4 1
BROKEN-hppa =		error: struct Scheme_Cont has no member named buf (setjmpup.c)
d7 1
a7 1
ONLY_FOR_ARCHS =	i386 amd64 hppa
d12 1
@


1.12
log
@Fix name of libuniaue in WANTLIB to unbreak the build.

ok jturner@@ juanfra@@
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.11 2014/04/09 03:34:48 juanfra Exp $
d6 1
a6 1
ONLY_FOR_ARCHS =	i386 amd64
d10 1
a10 1
V =			6.0
d12 1
a12 1
DISTNAME =		racket-$V-src-builtpkgs-unix
d17 1
a17 1
SHARED_LIBS +=		racket3m	1.0 # 6.0
d27 1
a27 1
			http://download.racket-lang.org/installers/${V}/ \
d37 1
a37 6
MODULES +=		converters/libiconv \
			lang/clang

# The test udp.rktl crashes when racket is compiled with any version of gcc
MODCLANG_ARCHS =	amd64
MODCLANG_LANGS =	c
a67 1
			--enable-pthread \
d71 1
a71 1
# "places" and "futures" require thread-local storage.
d80 1
a80 1
			LIBracket3m_MINOR=${LIBracket3m_VERSION:E} \
@


1.11
log
@Update to racket 6, plus some additional changes.

Tested by bcallah@@ (i386), jturner@@ (amd64) and me (both platforms).

Help and OK from jturner@@ to an old similar diff. Change from
RUN_DEPENDS to LIB_DEPENDS of some deps suggested by sthen@@ and OK
from him.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2014/03/10 20:27:25 landry Exp $
d54 1
a54 1
WANTLIB += c m pthread ffi iodbc unique gtkglext-x11-1.0 gdkglext-x11-1.0
@


1.10
log
@Bump ports using gcc4 module.
(not: mozilla ports not bumped since they're going to be updated in a few)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2014/01/17 19:46:21 juanfra Exp $
a3 1
# Racket only supports i386 and amd64 on OpenBSD
d6 1
a6 4
# XXX Change COMMENT and DESCR for racket 6. The core will not include
# the IDE, gui libs, teaching collects, etc. And probably "descendant of
# scheme" isn't the best description for racket.
COMMENT =		descendant of scheme with IDE and teaching resources
d8 1
a8 2
V =			5.3.6
REVISION =		5
d10 1
a10 2
# The project uses racket-* for stable and plt-* for development releases
DISTNAME =		racket-$V-src-unix
d15 1
a15 1
SHARED_LIBS +=		racket3m	0.0 # 5.3.6
a17 1
DPB_PROPERTIES =	parallel
d24 5
a28 6
MASTER_SITES =		https://download.racket-lang.org/installers/${V}/racket/ \
			https://www.cs.utah.edu/plt/installers/${V}/racket/ \
			https://www.eecs.northwestern.edu/racket/${V}/racket/ \
			http://mirror.csclub.uwaterloo.ca/racket/racket-installers/${V}/racket/ \
			http://mirror.informatik.uni-tuebingen.de/mirror/racket/${V}/racket/ \
			http://racket.infogroep.be/${V}/racket/ \
d36 1
a36 1
			gcc4
d38 3
a40 9
# udp.rktl test crashes with system gcc
# clang 3.3 on i386 can't build racket with the default cflags
# (without -fheinous-gnu-extensions) because the assembler code used by
# gmplonglong.h is incorrect. The broken code was changed to the C
# code used on amd64, it fixed the build but broke the racket math lib.
# GCC 4.6 fixes also the crash with udp.rktl and doesn't break the
# math lib like clang does.
MODGCC4_ARCHS = *
MODGCC4_LANGS = c c++
d46 4
a49 1
LIB_DEPENDS =		devel/libffi>=3.0.9p2
d52 1
a52 3
RUN_DEPENDS =		x11/gtkglext \
			devel/libunique \
			databases/iodbc,-main
d54 1
a54 1
WANTLIB += c m pthread ffi
d59 1
a80 4
# Since 5.3.4 if __SSE_MATH__ is defined (C_COMPILER_USES_SSE) and
# MZ_TRY_EXTFLONUMS enabled, MZ_LONG_DOUBLE (extflonum) is turned on. Also
# C_COMPILER_USES_SSE turn on MZ_USE_JIT_SSE.
# "-msse -mfpmath=sse" required by extflonum on i386.
a82 1
			CFLAGS="${CFLAGS} -msse -mfpmath=sse" \
d86 17
a102 28
# MAKE_JOBS: If "places" is enabled, racket uses "places channels". When
# "places" is disabled, racket uses multiple racket processes and pipes.
# http://permalink.gmane.org/gmane.comp.lang.racket.user/17281
# https://github.com/plt/racket/commit/2295d16074b9538ce500cf9bf9de65265ce5531c
# Default limit in file descriptors isn't enough for compile as root. The
# "rendering" phase of scribble reaches the limit in some big documents.
do-install:
	@@cd ${WRKBUILD} && ulimit -n 512 && ${SETENV} ${MAKE_ENV} \
		PLT_SETUP_OPTIONS="-j ${MAKE_JOBS}" ${MAKE_PROGRAM} \
		${ALL_FAKE_FLAGS} -f ${MAKE_FILE} ${FAKE_TARGET}

# Something in the ports framework or the racket installation modify the
# timestamp of two files. When raco sees a newer file than make-search.rkt,
# recompiles again the files but raco fails because the user doesn't have write
# permission in /usr. The easiest fix is to change the timestamp after "fake".
# This bug affects to "raco pkg install -u" and "raco pkg install -s". It will
# be fixed in the next version.
# A simple test: raco pkg install -u github://github.com/takikawa/dummy-pkg/master
post-fake:
	@@cd ${WRKINST}/${PREFIX}/lib/racket/collects/scribblings/main/private && \
		touch -t 201306180906 search-context.html && \
		touch -t 201306180906 search.js

# Due to a bug on i386, racket doesn't generate all the images in doc/images.
.if ${MACHINE_ARCH} == "amd64"
PKG_ARGS+=-Damd64=1
.else
PKG_ARGS+=-Damd64=0
@


1.9
log
@Update my email address. Change the homepage of terminator. Also add a
space between the entries and equals signs in the Makefile of the old
ports.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2014/01/16 01:49:32 juanfra Exp $
d13 1
a13 1
REVISION =		4
@


1.8
log
@Racket doesn't build on i386 with clang. Spotted by sthen@@.

The offending code is the i386 assembler within gmplonglong.h.
Using the same C code used by amd64, the interpreter builds but
it breaks the racket math libs. I tried to fix the bug backporting
some fixes related to gmp or clang from the racket repo but nothing
worked.

GCC 4.6 fixes also the crashes with the udp.rktl test but doesn't
break the math lib, so I'm changing the port to use the ports GCC.
Obviously there is some broken code on racket but I need more
time to find it.

I've included an additional patch for the gmp version included
with racket. The version is pretty old and only has assembler
code for old CPUs while the racket developers mostly only test
their code on amd64. Now racket uses the C code used by amd64
for every platform.

ok brad@@ sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2014/01/10 11:26:02 sthen Exp $
d13 1
a13 1
REVISION =		3
d26 1
a26 1
MAINTAINER =		Juan Francisco Cantero Hurtado <iam@@juanfra.info>
@


1.7
log
@revert to gcc on i386, clang build fails
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2014/01/07 19:01:36 juanfra Exp $
d13 1
a13 1
REVISION =		2
d44 1
a44 1
			lang/clang
d47 8
a54 3
# however build fails with clang 3.3 on i386
MODCLANG_ARCHS =	amd64
MODCLANG_LANGS =	c c++
@


1.6
log
@Change Racket to Clang. OK sthen@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2013/11/25 14:16:23 sthen Exp $
d47 2
a48 1
MODCLANG_ARCHS =	*
@


1.5
log
@kill VMEM_WARNING
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/10/16 19:22:36 juanfra Exp $
d13 1
a13 1
REVISION =		1
d43 6
a48 1
MODULES +=		converters/libiconv
@


1.4
log
@Now racket manages correctly the stack size on OpenBSD.

ok sthen@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/10/13 17:27:20 juanfra Exp $
a61 1
VMEM_WARNING =		Yes
@


1.3
log
@Increase the stack size margin. Fix crashes in code with big tail recursion.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/09/19 14:56:28 sthen Exp $
d13 1
a13 1
REVISION =		0
@


1.2
log
@s/simple/Yes/ in SEPARATE_BUILD
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/09/19 14:55:55 sthen Exp $
d13 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d62 1
a62 1
SEPARATE_BUILD =	simple
@


1.1.1.1
log
@import ports/lang/racket, from Juan Francisco Cantero Hurtado, ok landry@@

Racket (formerly called PLT Scheme) is a multi-paradigm programming
language in the Lisp/Scheme family, that also serves as a platform for
language creation, design, and implementation.

The primary components of Racket platform are:

- The implementation of Racket (including a rich run-time system,
  various libraries, JIT compiler, and more).
- DrRacket (formerly named DrScheme), the Racket program development
  environment.
- Teachpacks to use together with various books.
- pkg.racket-lang.org, Racket's web-based package distribution system
  for user-contributed packages.
- raco, command line tool for finding documentation, compiling Racket
  source to bytecode, packaging executables, and packaging installable
  archives.
@
text
@@
