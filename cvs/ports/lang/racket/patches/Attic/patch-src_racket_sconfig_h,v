head	1.8;
access;
symbols
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.2
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@# @;


1.8
date	2015.07.16.00.27.57;	author juanfra;	state dead;
branches;
next	1.7;
commitid	uH5PzJeKD0zIfciF;

1.7
date	2014.08.19.22.51.20;	author juanfra;	state Exp;
branches;
next	1.6;
commitid	QvmIDKxGqUJQ9ATx;

1.6
date	2014.07.15.00.13.16;	author juanfra;	state Exp;
branches;
next	1.5;
commitid	8iEk5M6ckSx38uNs;

1.5
date	2014.06.22.10.59.37;	author juanfra;	state Exp;
branches;
next	1.4;
commitid	DbI0GfEVhN5HyzMt;

1.4
date	2014.05.14.17.51.40;	author juanfra;	state Exp;
branches;
next	1.3;

1.3
date	2014.04.09.03.34.48;	author juanfra;	state dead;
branches;
next	1.2;

1.2
date	2013.10.16.19.22.37;	author juanfra;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.13.17.27.21;	author juanfra;	state Exp;
branches;
next	;


desc
@@


1.8
log
@-racket
@
text
@$OpenBSD: patch-src_racket_sconfig_h,v 1.7 2014/08/19 22:51:20 juanfra Exp $
--- src/racket/sconfig.h.orig	Thu Jul 17 19:37:10 2014
+++ src/racket/sconfig.h	Sat Jul 19 21:50:27 2014
@@@@ -327,6 +327,8 @@@@
 #  else
 #   define SCHEME_PLATFORM_LIBRARY_SUBPATH "mips64-openbsd"
 #  endif
+# elif defined(__powerpc__)
+#  define SCHEME_PLATFORM_LIBRARY_SUBPATH "ppc-openbsd"
 # elif defined(__hppa__)
 #  define SCHEME_PLATFORM_LIBRARY_SUBPATH "hppa-openbsd"
 # else
@@@@ -343,9 +345,7 @@@@
 # undef UNIX_STACK_MAXIMUM
 # define UNIX_STACK_MAXIMUM 4194304
 
-#ifndef __ELF__
 # define UNDERSCORE_DYNLOAD_SYMBOL_PREFIX
-#endif
 
 # define USE_DLOPEN_GLOBAL_BY_DEFAULT
 
@@@@ -360,15 +360,15 @@@@
 # define USE_TM_GMTOFF_FIELD
 # define USE_TM_ZONE_FIELD
 
-#if defined(__x86_64__)
-# define MZ_USE_JIT_X86_64
-# define MZ_JIT_USE_MPROTECT
-# define MZ_TRY_EXTFLONUMS
-#elif defined(__i386__)
-# define MZ_USE_JIT_I386
-# define MZ_JIT_USE_MPROTECT
-# define MZ_TRY_EXTFLONUMS
-#endif
+# if defined(__x86_64__)
+#  define MZ_USE_JIT_X86_64
+#  define MZ_JIT_USE_MPROTECT
+#  define MZ_TRY_EXTFLONUMS
+# elif defined(__i386__)
+#  define MZ_USE_JIT_I386
+#  define MZ_JIT_USE_MPROTECT
+#  define MZ_TRY_EXTFLONUMS
+# endif
 
 # define FLAGS_ALREADY_SET
 
@


1.7
log
@Update to Racket 6.1. Tested on amd64 and i386.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_racket_sconfig_h,v 1.6 2014/07/15 00:13:16 juanfra Exp $
@


1.6
log
@- Unbreak racket after the last header changes. Spotted by sthen@@.
- Add minimal support for powerpc (broken). Tested on Jan Stary's macppc. Thanks!
- The additional changes are a WIP for the next version.
- Enable the assembler code again in gmplonglong for i386 and amd64.
@
text
@d1 7
a7 21
$OpenBSD: patch-src_racket_sconfig_h,v 1.5 2014/06/22 10:59:37 juanfra Exp $
--- src/racket/sconfig.h.orig	Thu Apr 17 21:58:42 2014
+++ src/racket/sconfig.h	Mon Jul 14 22:39:35 2014
@@@@ -313,12 +313,24 @@@@
   /************** x86/OpenBSD with gcc ****************/
               /* Thanks to Bengt Kleberg */
 
-#if defined(__OpenBSD__) && (defined(__i386__) || defined(i386) || defined(__x86_64__))
+#if defined(__OpenBSD__)
 
 # if defined(__x86_64__)
 #  define SCHEME_PLATFORM_LIBRARY_SUBPATH "x86_64-openbsd"
-# else
+# elif defined(__i386__) || defined(i386)
 #  define SCHEME_PLATFORM_LIBRARY_SUBPATH "i386-openbsd"
+# elif defined(__mips64__)
+#  if defined(__MIPSEL__)
+#   define SCHEME_PLATFORM_LIBRARY_SUBPATH "mips64el-openbsd"
+#  else
+#   define SCHEME_PLATFORM_LIBRARY_SUBPATH "mips64-openbsd"
+#  endif
d10 4
a13 8
+# elif defined(__hppa__)
+#  define SCHEME_PLATFORM_LIBRARY_SUBPATH "hppa-openbsd"
+# else
+#  error Unported platform.
 # endif
 
 # include "uconfig.h"
@@@@ -331,9 +343,7 @@@@
d23 1
a23 1
@@@@ -348,17 +358,15 @@@@
a34 2
-#else
-# error Unported platform.
a46 19
 
@@@@ -428,7 +436,7 @@@@
   /************** SGI/IRIX with SGI cc ****************/
 
 #if  (defined(mips) || defined(__mips)) \
-     && !(defined(ultrix) || defined(__ultrix) || defined(linux))
+     && !(defined(ultrix) || defined(__ultrix) || defined(linux) || defined(__OpenBSD__))
 
 # define SCHEME_PLATFORM_LIBRARY_SUBPATH "mips-irix"
 
@@@@ -472,7 +480,8 @@@@
 
   /************** ALPHA/OSF1 with gcc ****************/
 
-# if (defined(__alpha) || defined(__alpha__)) && !defined(linux) && !defined(__NetBSD__)
+# if (defined(__alpha) || defined(__alpha__)) \
+    && !defined(linux) && !defined(__NetBSD__) && !defined(__OpenBSD__)
 
 # define SCHEME_PLATFORM_LIBRARY_SUBPATH "alpha-osf1"
@


1.5
log
@BROKEN-mips64el. Tests on loongson by jturner@@.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_racket_sconfig_h,v 1.4 2014/05/14 17:51:40 juanfra Exp $
d3 2
a4 2
+++ src/racket/sconfig.h	Sat Jun 14 00:26:23 2014
@@@@ -313,12 +313,22 @@@@
d22 2
d31 22
a52 4
@@@@ -356,8 +366,6 @@@@
 # define MZ_USE_JIT_I386
 # define MZ_JIT_USE_MPROTECT
 # define MZ_TRY_EXTFLONUMS
d55 10
a64 1
 #endif
d67 1
@


1.4
log
@Update to Racket 6.0.1. ok jturner@@.
@
text
@d1 4
a4 4
$OpenBSD$
--- src/racket/sconfig.h.orig	Sun Apr 27 22:20:34 2014
+++ src/racket/sconfig.h	Sun Apr 27 22:37:54 2014
@@@@ -313,12 +313,16 @@@@
d9 1
a9 1
+#if defined(__OpenBSD__) 
d16 6
d29 1
a29 1
@@@@ -356,8 +360,6 @@@@
d38 19
@


1.3
log
@Update to racket 6, plus some additional changes.

Tested by bcallah@@ (i386), jturner@@ (amd64) and me (both platforms).

Help and OK from jturner@@ to an old similar diff. Change from
RUN_DEPENDS to LIB_DEPENDS of some deps suggested by sthen@@ and OK
from him.
@
text
@d1 14
a14 19
$OpenBSD: patch-src_racket_sconfig_h,v 1.2 2013/10/16 19:22:37 juanfra Exp $

Upstream's commit message:
"OpenBSD provides pthread_stackseg_np(), which directly reports
the stack-bounds information that Racket needs, so we can use
that instead of the approach used on other Unix variants. The
approach used for other Unix variants seems not to work for OpenBSD
because the stack location at the point that main() is called
is already significantly far from the stack base (on the order
of 100k on a 32-bit system in my test using OpenBSD 5.2)."

Test: racket -e '(load "deep.rktl")'

https://github.com/plt/racket/pull/316
https://github.com/plt/racket/commit/3a9ad7746b6f53f68dbdc55493baf7528b524422

--- src/racket/sconfig.h.orig	Sat Aug 10 00:38:27 2013
+++ src/racket/sconfig.h	Tue Oct 15 20:40:47 2013
@@@@ -295,16 +295,11 @@@@
d16 4
a21 7
-# include <sys/param.h>
-# if OpenBSD < 201211
-/* This is needed for (pre-5.2) userspace threads: */
-#  define ASSUME_FIXED_STACK_SIZE
-#  define FIXED_STACK_SIZE 1048576
-# endif
-
d23 7
a29 14
 # undef HAS_STANDARD_IOB
 # define HAS_BSD_IOB
+# undef UNIX_FIND_STACK_BOUNDS
+# define PTHREAD_STACKSEG_FIND_STACK_BOUNDS
 
 /* Default UNIX_STACK_MAXIMUM is too big for a non-root user. */
 # undef UNIX_STACK_MAXIMUM
@@@@ -1490,6 +1485,8 @@@@
      line.
     ASSUME_FIXED_STACK_SIZE assumes that the main stack size is
      always FIXED_STACK_SIZE.
+    PTHREAD_STACKSEG_FIND_STACK_BOUNDS finds stack bounds using
+     pthread_stackseg_np().
     Use only one of these if DO_STACK_CHECK is used, or none otherwise. */
d31 1
a31 1
  /* FIXED_STACK_SIZE <X> sets the stack size to <X> when the
@


1.2
log
@Now racket manages correctly the stack size on OpenBSD.

ok sthen@@.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_racket_sconfig_h,v 1.1 2013/10/13 17:27:21 juanfra Exp $
@


1.1
log
@Increase the stack size margin. Fix crashes in code with big tail recursion.
@
text
@d1 1
a1 1
$OpenBSD$
d3 8
a10 2
Racket doesn't respect its own stack size limit. This patch gives an extra
margin of 300KB.
d15 1
d17 20
a36 3
--- src/racket/sconfig.h.orig	Sun Oct 13 06:04:57 2013
+++ src/racket/sconfig.h	Sun Oct 13 06:05:05 2013
@@@@ -310,6 +310,9 @@@@
d38 7
a44 1
 # define UNIX_STACK_MAXIMUM 4194304
d46 1
a46 6
+# undef STACK_SAFETY_MARGIN
+# define STACK_SAFETY_MARGIN 307200
+
 #ifndef __ELF__
 # define UNDERSCORE_DYNLOAD_SYMBOL_PREFIX
 #endif
@

