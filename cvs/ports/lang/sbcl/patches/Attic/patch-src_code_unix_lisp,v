head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2013.11.10.01.56.11;	author jturner;	state dead;
branches;
next	1.2;

1.2
date	2013.10.22.19.44.16;	author jca;	state Exp;
branches;
next	1.1;

1.1
date	2013.09.15.16.34.00;	author jca;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Kill 0-byte patch
@
text
@@


1.2
log
@Update to sbcl-1.1.12, regress tests ok.  The struct timeval patch for
sb-posix will be removed when tv_usec will be a suseconds_t.  ok krw@@
@
text
@@


1.1
log
@Fix struct timeval representation leading to build failures, and remove
BROKEN-i386.  This makes sbcl usable on i386 again.  ok krw@@
@
text
@a0 40
$OpenBSD$

Cope with 64-bit time_t.

--- src/code/unix.lisp.orig	Sun Jun  2 15:12:40 2013
+++ src/code/unix.lisp	Sun Sep 15 14:17:59 2013
@@@@ -215,16 +215,19 @@@@ corresponds to NAME, or NIL if there is none."
           (tv-sec time-t)           ; seconds
           (tv-usec suseconds-t)))   ; and microseconds
 
-;; The above definition doesn't work on 64-bit OpenBSD platforms.
-;; Both tv_sec and tv_usec are declared as long instead of time_t, and
-;; time_t is a typedef for int.
-#!+(or openbsd netbsd)
+;; The following definition was used on OpenBSD pre-5.5.
+;; Both tv_sec and tv_usec were declared as long instead of time_t, and
+;; time_t was a typedef for int.
+;; Note: time_t is 64-bit on all architectures, starting from OpenBSD 5.5.
+;; FIXME: it seems recent NetBSD releases use a 64-bit time_t too.
+#!+netbsd
 (define-alien-type nil
   (struct timeval
           (tv-sec long)             ; seconds
           (tv-usec long)))          ; and microseconds
 
-#!+win32
+;; OpenBSD 5.5 uses this struct layout.
+#!+(or win32 openbsd)
 (define-alien-type nil
   (struct timeval
           (tv-sec time-t)           ; seconds
@@@@ -948,6 +951,8 @@@@ avoiding atexit(3) hooks, etc. Otherwise exit(2) is ca
 ;; Just as with struct timeval, 64-bit OpenBSD has problems with the
 ;; above definition.  tv_sec is declared as time_t instead of long,
 ;; and time_t is a typedef for int.
+;; Note: time_t is 64-bit on all architectures, starting from OpenBSD 5.5
+;; FIXME: it seems recent NetBSD releases use a 64-bit time_t too.
 #!+(or openbsd netbsd)
 (define-alien-type nil
     (struct timespec
@

