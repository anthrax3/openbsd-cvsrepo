head	1.3;
access;
symbols
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2010.10.15.16.21.07;	author robert;	state dead;
branches;
next	1.2;

1.2
date	2010.03.29.10.32.06;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.06.07.25.27;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to mono-2.8;
there might be some breakage but this is the good time to do the update
@
text
@$OpenBSD: patch-mono_mini_exceptions-ppc_c,v 1.2 2010/03/29 10:32:06 robert Exp $
--- mono/mini/exceptions-ppc.c.orig	Mon Mar 29 08:20:27 2010
+++ mono/mini/exceptions-ppc.c	Mon Mar 29 08:23:00 2010
@@@@ -637,7 +637,7 @@@@ mono_arch_find_jit_info (MonoDomain *domain, MonoJitTl
 void
 mono_arch_sigctx_to_monoctx (void *ctx, MonoContext *mctx)
 {
-#ifdef MONO_CROSS_COMPILE
+#if defined(MONO_CROSS_COMPILE) || !defined(MONO_ARCH_USE_SIGACTION)
 	g_assert_not_reached ();
 #else
 	os_ucontext *uc = ctx;
@@@@ -652,7 +652,7 @@@@ mono_arch_sigctx_to_monoctx (void *ctx, MonoContext *m
 void
 mono_arch_monoctx_to_sigctx (MonoContext *mctx, void *ctx)
 {
-#ifdef MONO_CROSS_COMPILE
+#if defined(MONO_CROSS_COMPILE) || !defined(MONO_ARCH_USE_SIGACTION)
 	g_assert_not_reached ();
 #else
 	os_ucontext *uc = ctx;
@@@@ -667,7 +667,7 @@@@ mono_arch_monoctx_to_sigctx (MonoContext *mctx, void *
 gpointer
 mono_arch_ip_from_context (void *sigctx)
 {
-#ifdef MONO_CROSS_COMPILE
+#if defined(MONO_CROSS_COMPILE) || !defined(MONO_ARCH_USE_SIGACTION)
 	g_assert_not_reached ();
 #else
 	os_ucontext *uc = sigctx;
@


1.2
log
@resurrect powerpc support
@
text
@d1 1
a1 1
$OpenBSD: patch-mono_mini_exceptions-ppc_c,v 1.1 2009/09/06 07:25:27 ajacoutot Exp $
@


1.1
log
@Major update to mono-2.5.
While beeing a development release, this is the most stable version I
used on OpenBSD for now. Several patches are removed as they went
upstream. Thanks to jolan@@ for pointing me at this release and cooking a
couple of patches.

Fix build on powerpc and add it to ONLY_FOR_ARCHS ; slightly tested on
macppc.

A similar port was successfuly tested by jolan@@ on amd64.

no objection alek@@ (maintainer)
ok jolan@@ ok jasper@@
@
text
@d1 9
a9 5
$OpenBSD$
--- mono/mini/exceptions-ppc.c.orig	Wed Sep  2 17:38:25 2009
+++ mono/mini/exceptions-ppc.c	Wed Sep  2 17:39:10 2009
@@@@ -640,6 +640,7 @@@@ mono_arch_sigctx_to_monoctx (void *ctx, MonoContext *m
 #ifdef MONO_CROSS_COMPILE
a11 1
+#ifdef MONO_ARCH_USE_SIGACTION
d13 1
a13 9
 
 	mctx->sc_ir = UCONTEXT_REG_NIP(uc);
@@@@ -647,6 +648,7 @@@@ mono_arch_sigctx_to_monoctx (void *ctx, MonoContext *m
 	memcpy (&mctx->regs, &UCONTEXT_REG_Rn(uc, 13), sizeof (gulong) * MONO_SAVED_GREGS);
 	memcpy (&mctx->fregs, &UCONTEXT_REG_FPRn(uc, 14), sizeof (double) * MONO_SAVED_FREGS);
 #endif
+#endif
 }
 
d15 4
a18 2
@@@@ -655,6 +657,7 @@@@ mono_arch_monoctx_to_sigctx (MonoContext *mctx, void *
 #ifdef MONO_CROSS_COMPILE
a20 1
+#ifdef MONO_ARCH_USE_SIGACTION
d22 1
a22 9
 
 	UCONTEXT_REG_NIP(uc) = mctx->sc_ir;
@@@@ -662,6 +665,7 @@@@ mono_arch_monoctx_to_sigctx (MonoContext *mctx, void *
 	memcpy (&UCONTEXT_REG_Rn(uc, 13), &mctx->regs, sizeof (gulong) * MONO_SAVED_GREGS);
 	memcpy (&UCONTEXT_REG_FPRn(uc, 14), &mctx->fregs, sizeof (double) * MONO_SAVED_FREGS);
 #endif
+#endif
 }
 
d24 4
a27 2
@@@@ -670,8 +674,10 @@@@ mono_arch_ip_from_context (void *sigctx)
 #ifdef MONO_CROSS_COMPILE
a29 1
+#ifdef MONO_ARCH_USE_SIGACTION
a30 5
 	return (gpointer)UCONTEXT_REG_NIP(uc);
+#endif
 #endif
 }
 
@

