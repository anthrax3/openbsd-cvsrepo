head	1.7;
access;
symbols
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4;
locks; strict;
comment	@# @;


1.7
date	2010.11.18.22.40.16;	author robert;	state dead;
branches;
next	1.6;

1.6
date	2010.10.15.16.21.07;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2010.08.18.10.51.55;	author robert;	state dead;
branches;
next	1.4;

1.4
date	2010.04.28.17.06.26;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2010.04.27.12.39.50;	author robert;	state dead;
branches;
next	1.2;

1.2
date	2010.03.23.08.25.26;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2010.03.22.16.56.13;	author robert;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update to 2.8.1
@
text
@$OpenBSD: patch-mono_utils_mono-sigcontext_h,v 1.6 2010/10/15 16:21:07 robert Exp $
--- mono/utils/mono-sigcontext.h.orig	Wed Oct 13 19:10:29 2010
+++ mono/utils/mono-sigcontext.h	Wed Oct 13 19:47:09 2010
@@@@ -58,15 +58,15 @@@@
 	#define UCONTEXT_REG_EDI(ctx) (((ucontext_t*)(ctx))->uc_mcontext.__gregs [_REG_EDI])
 	#define UCONTEXT_REG_EIP(ctx) (((ucontext_t*)(ctx))->uc_mcontext.__gregs [_REG_EIP])
 #elif defined(__OpenBSD__)
-	#define UCONTEXT_REG_EAX(ctx) ((ctx)->sc_eax)
-	#define UCONTEXT_REG_EBX(ctx) ((ctx)->sc_ebx)
-	#define UCONTEXT_REG_ECX(ctx) ((ctx)->sc_ecx)
-	#define UCONTEXT_REG_EDX(ctx) ((ctx)->sc_edx)
-	#define UCONTEXT_REG_EBP(ctx) ((ctx)->sc_ebp)
-	#define UCONTEXT_REG_ESP(ctx) ((ctx)->sc_esp)
-	#define UCONTEXT_REG_ESI(ctx) ((ctx)->sc_esi)
-	#define UCONTEXT_REG_EDI(ctx) ((ctx)->sc_edi)
-	#define UCONTEXT_REG_EIP(ctx) ((ctx)->sc_eip)
+    #define UCONTEXT_REG_EAX(ctx) (((ucontext_t*)(ctx))->sc_eax)
+	#define UCONTEXT_REG_EBX(ctx) (((ucontext_t*)(ctx))->sc_ebx)
+	#define UCONTEXT_REG_ECX(ctx) (((ucontext_t*)(ctx))->sc_ecx)
+	#define UCONTEXT_REG_EDX(ctx) (((ucontext_t*)(ctx))->sc_edx)
+	#define UCONTEXT_REG_EBP(ctx) (((ucontext_t*)(ctx))->sc_ebp)
+	#define UCONTEXT_REG_ESP(ctx) (((ucontext_t*)(ctx))->sc_esp)
+	#define UCONTEXT_REG_ESI(ctx) (((ucontext_t*)(ctx))->sc_esi)
+	#define UCONTEXT_REG_EDI(ctx) (((ucontext_t*)(ctx))->sc_edi)
+	#define UCONTEXT_REG_EIP(ctx) (((ucontext_t*)(ctx))->sc_eip)
 #else
 	#define UCONTEXT_REG_EAX(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [REG_EAX])
 	#define UCONTEXT_REG_EBX(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [REG_EBX])
@@@@ -103,23 +103,23 @@@@
 #define UCONTEXT_GREGS(ctx)	((guint64*)&(((ucontext_t*)(ctx))->uc_mcontext))
 #elif defined(__OpenBSD__)
     /* OpenBSD/amd64 has no gregs array, ucontext_t == sigcontext */
-	#define UCONTEXT_REG_RAX(ctx) ((ctx)->sc_rax)
-	#define UCONTEXT_REG_RBX(ctx) ((ctx)->sc_rbx)
-	#define UCONTEXT_REG_RCX(ctx) ((ctx)->sc_rcx)
-	#define UCONTEXT_REG_RDX(ctx) ((ctx)->sc_rdx)
-	#define UCONTEXT_REG_RBP(ctx) ((ctx)->sc_rbp)
-	#define UCONTEXT_REG_RSP(ctx) ((ctx)->sc_rsp)
-	#define UCONTEXT_REG_RSI(ctx) ((ctx)->sc_rsi)
-	#define UCONTEXT_REG_RDI(ctx) ((ctx)->sc_rdi)
-	#define UCONTEXT_REG_RIP(ctx) ((ctx)->sc_rip)
-	#define UCONTEXT_REG_R8(ctx) ((ctx)->sc_r8)
-	#define UCONTEXT_REG_R9(ctx) ((ctx)->sc_r9)
-	#define UCONTEXT_REG_R10(ctx) ((ctx)->sc_r10)
-	#define UCONTEXT_REG_R11(ctx) ((ctx)->sc_r11)
-	#define UCONTEXT_REG_R12(ctx) ((ctx)->sc_r12)
-	#define UCONTEXT_REG_R13(ctx) ((ctx)->sc_r13)
-	#define UCONTEXT_REG_R14(ctx) ((ctx)->sc_r14)
-	#define UCONTEXT_REG_R15(ctx) ((ctx)->sc_r15)
+	#define UCONTEXT_REG_RAX(ctx) (((ucontext_t*)(ctx))->sc_rax)
+	#define UCONTEXT_REG_RBX(ctx) (((ucontext_t*)(ctx))->sc_rbx)
+	#define UCONTEXT_REG_RCX(ctx) (((ucontext_t*)(ctx))->sc_rcx)
+	#define UCONTEXT_REG_RDX(ctx) (((ucontext_t*)(ctx))->sc_rdx)
+	#define UCONTEXT_REG_RBP(ctx) (((ucontext_t*)(ctx))->sc_rbp)
+	#define UCONTEXT_REG_RSP(ctx) (((ucontext_t*)(ctx))->sc_rsp)
+	#define UCONTEXT_REG_RSI(ctx) (((ucontext_t*)(ctx))->sc_rsi)
+	#define UCONTEXT_REG_RDI(ctx) (((ucontext_t*)(ctx))->sc_rdi)
+	#define UCONTEXT_REG_RIP(ctx) (((ucontext_t*)(ctx))->sc_rip)
+	#define UCONTEXT_REG_R8(ctx) (((ucontext_t*)(ctx))->sc_r8)
+	#define UCONTEXT_REG_R9(ctx) (((ucontext_t*)(ctx))->sc_r9)
+	#define UCONTEXT_REG_R10(ctx) (((ucontext_t*)(ctx))->sc_r10)
+	#define UCONTEXT_REG_R11(ctx) (((ucontext_t*)(ctx))->sc_r11)
+	#define UCONTEXT_REG_R12(ctx) (((ucontext_t*)(ctx))->sc_r12)
+	#define UCONTEXT_REG_R13(ctx) (((ucontext_t*)(ctx))->sc_r13)
+	#define UCONTEXT_REG_R14(ctx) (((ucontext_t*)(ctx))->sc_r14)
+	#define UCONTEXT_REG_R15(ctx) (((ucontext_t*)(ctx))->sc_r15)
 #else
 #define UCONTEXT_GREGS(ctx)	((guint64*)&(((ucontext_t*)(ctx))->uc_mcontext.gregs))
 #endif
@


1.6
log
@Update to mono-2.8;
there might be some breakage but this is the good time to do the update
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@Update to 2.6.7; remove patches that were merged backed to upstream
@
text
@d1 25
a25 22
$OpenBSD: patch-mono_utils_mono-sigcontext_h,v 1.4 2010/04/28 17:06:26 robert Exp $
--- mono/utils/mono-sigcontext.h.orig	Tue Apr 27 10:09:07 2010
+++ mono/utils/mono-sigcontext.h	Tue Apr 27 10:09:37 2010
@@@@ -80,6 +80,21 @@@@
 
 #ifdef __FreeBSD__
 #define UCONTEXT_GREGS(ctx)	&(((ucontext_t*)(ctx))->uc_mcontext)
+#elif defined(__OpenBSD__)
+	/* OpenBSD/amd64 has no gregs array, ucontext_t == sigcontext */
+	#define UCONTEXT_REG_RAX(ctx) ((ctx)->sc_rax)
+	#define UCONTEXT_REG_RBX(ctx) ((ctx)->sc_rbx)
+	#define UCONTEXT_REG_RCX(ctx) ((ctx)->sc_rcx)
+	#define UCONTEXT_REG_RDX(ctx) ((ctx)->sc_rdx)
+	#define UCONTEXT_REG_RBP(ctx) ((ctx)->sc_rbp)
+	#define UCONTEXT_REG_RSP(ctx) ((ctx)->sc_rsp)
+	#define UCONTEXT_REG_RSI(ctx) ((ctx)->sc_rsi)
+	#define UCONTEXT_REG_RDI(ctx) ((ctx)->sc_rdi)
+	#define UCONTEXT_REG_RIP(ctx) ((ctx)->sc_rip)
+	#define UCONTEXT_REG_R12(ctx) ((ctx)->sc_r12)
+	#define UCONTEXT_REG_R13(ctx) ((ctx)->sc_r13)
+	#define UCONTEXT_REG_R14(ctx) ((ctx)->sc_r14)
+	#define UCONTEXT_REG_R15(ctx) ((ctx)->sc_r15)
d27 42
a68 1
 #define UCONTEXT_GREGS(ctx)	&(((ucontext_t*)(ctx))->uc_mcontext.gregs)
@


1.4
log
@add some missing patches that cvs missed .. bad cvs
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@Update to mono 2.6.4;
(a lot of patches are in upstream now)
@
text
@d1 4
a4 21
$OpenBSD: patch-mono_utils_mono-sigcontext_h,v 1.2 2010/03/23 08:25:26 robert Exp $
--- mono/utils/mono-sigcontext.h.orig	Fri Sep 25 16:58:11 2009
+++ mono/utils/mono-sigcontext.h	Tue Mar 23 08:56:28 2010
@@@@ -54,6 +54,16 @@@@
 	#define UCONTEXT_REG_ESI(ctx) (((ucontext_t*)(ctx))->uc_mcontext.__gregs [_REG_ESI])
 	#define UCONTEXT_REG_EDI(ctx) (((ucontext_t*)(ctx))->uc_mcontext.__gregs [_REG_EDI])
 	#define UCONTEXT_REG_EIP(ctx) (((ucontext_t*)(ctx))->uc_mcontext.__gregs [_REG_EIP])
+#elif defined(__OpenBSD__)
+	#define UCONTEXT_REG_EAX(ctx) ((ctx)->sc_eax)
+	#define UCONTEXT_REG_EBX(ctx) ((ctx)->sc_ebx)
+	#define UCONTEXT_REG_ECX(ctx) ((ctx)->sc_ecx)
+	#define UCONTEXT_REG_EDX(ctx) ((ctx)->sc_edx)
+	#define UCONTEXT_REG_EBP(ctx) ((ctx)->sc_ebp)
+	#define UCONTEXT_REG_ESP(ctx) ((ctx)->sc_esp)
+	#define UCONTEXT_REG_ESI(ctx) ((ctx)->sc_esi)
+	#define UCONTEXT_REG_EDI(ctx) ((ctx)->sc_edi)
+	#define UCONTEXT_REG_EIP(ctx) ((ctx)->sc_eip)
 #else
 	#define UCONTEXT_REG_EAX(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [REG_EAX])
 	#define UCONTEXT_REG_EBX(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [REG_EBX])
@@@@ -70,6 +80,21 @@@@
@


1.2
log
@Enable sigaction support on amd64 too, by using struct sigcontext.
@
text
@d1 1
a1 1
$OpenBSD: patch-mono_utils_mono-sigcontext_h,v 1.1 2010/03/22 16:56:13 robert Exp $
@


1.1
log
@Enable MONO_ARCH_USE_SIGACTION on i386 and switch it to use struct sigcontext,
which basically gives us exception support and sends those crashes away.
@
text
@d1 3
a3 3
$OpenBSD$
--- mono/utils/mono-sigcontext.h.orig	Mon Mar 22 17:35:25 2010
+++ mono/utils/mono-sigcontext.h	Mon Mar 22 17:38:49 2010
d21 22
@

