head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2010.03.26.13.13.47;	author robert;	state dead;
branches;
next	1.1;

1.1
date	2010.03.26.10.40.44;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove the previous diff to mini.h because that was totally wrong, i made
it up before having my morning coffee.
So it turns out that sometimes the context on openbsd can be 0. This will
lead to problems. I suspect that this is because of our fantastic pthread
library. With the following diff we just skip doing some JIT stuff if the
context is 0 because the thread probably exited before.
Anyways this way everything *seems* to work fine and almost all regression
tests are passing now except for 2 out of 380.
Pepole understanding pthreads are welcome to look at it and come up with
something that is not a tripe XXX hack.
@
text
@$OpenBSD: patch-mono_mini_mini_h,v 1.1 2010/03/26 10:40:44 robert Exp $
--- mono/mini/mini.h.orig	Fri Mar 26 11:38:09 2010
+++ mono/mini/mini.h	Fri Mar 26 11:38:21 2010
@@@@ -1945,7 +1945,7 @@@@ gboolean mono_gdb_render_native_backtraces (void) MONO
 #define GET_CONTEXT \
     void *ctx = context;
 #else
-#ifdef MONO_ARCH_USE_SIGACTION
+#if defined(MONO_ARCH_USE_SIGACTION) && defined(UCONTEXT_GREGS)
 #define GET_CONTEXT \
     void *ctx = context;
 #else
@


1.1
log
@Use the correct GET_CONTEXT macro otherwise we will get a 0 context
and that will freak everything out and crash.
Define EOVERFLOW based on our headers and remove the Makefile hack
that we don't need anymore.
@
text
@d1 1
a1 1
$OpenBSD$
@

