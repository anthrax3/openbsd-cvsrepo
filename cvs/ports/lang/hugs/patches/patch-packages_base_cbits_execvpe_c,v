head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.18
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.14
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.16
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.12
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.10
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.8
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.03.23.21.33.45;	author kili;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Use libc execvpe(3).
@
text
@$OpenBSD$

Don't build the included execvpe().

--- packages/base/cbits/execvpe.c.orig	Thu Sep 21 00:28:37 2006
+++ packages/base/cbits/execvpe.c	Fri Mar 23 21:36:46 2012
@@@@ -5,8 +5,6 @@@@
    -------------------------------------------------------------------------- */
 #include "HsBase.h"
 
-#if !(defined(_MSC_VER) || defined(__MINGW32__) || defined(_WIN32)) /* to the end */
-
 /* Evidently non-Posix. */
 /* #include "PosixSource.h" */
 
@@@@ -16,6 +14,7 @@@@
 #include <string.h>
 #include <errno.h>
 
+#if 0
 /*
  * We want the search semantics of execvp, but we want to provide our
  * own environment, like execve.  The following copyright applies to
@@@@ -153,6 +152,7 @@@@ execvpe(char *name, char *const argv[], char **envp)
 	free(buf);
     return (-1);
 }
+#endif
 
 
 /* Copied verbatim from ghc/lib/std/cbits/system.c. */
@
