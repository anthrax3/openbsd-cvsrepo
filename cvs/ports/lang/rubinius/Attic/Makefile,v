head	1.35;
access;
symbols
	OPENBSD_5_8:1.34.0.4
	OPENBSD_5_8_BASE:1.34
	OPENBSD_5_7:1.33.0.2
	OPENBSD_5_7_BASE:1.33
	OPENBSD_5_6:1.32.0.2
	OPENBSD_5_6_BASE:1.32
	OPENBSD_5_5:1.28.0.2
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.25.0.2
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.21.0.2
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.20.0.4
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.2
	OPENBSD_5_0:1.14.0.2
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	jeremy_2010-nov-19:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.35
date	2015.08.28.14.45.45;	author jeremy;	state dead;
branches;
next	1.34;
commitid	R0Z28rNefJ5H6jof;

1.34
date	2015.03.29.23.36.29;	author jeremy;	state Exp;
branches;
next	1.33;
commitid	799e87vbM1xOuj6R;

1.33
date	2014.12.30.21.50.24;	author landry;	state Exp;
branches;
next	1.32;
commitid	S07Q8URJzYgrU6Yg;

1.32
date	2014.06.24.21.51.16;	author jeremy;	state Exp;
branches;
next	1.31;
commitid	4APYd5YB7FVwQ0yZ;

1.31
date	2014.06.06.17.33.30;	author jeremy;	state Exp;
branches;
next	1.30;
commitid	Dm60eFPO1bZyd63l;

1.30
date	2014.05.18.15.49.46;	author jeremy;	state Exp;
branches;
next	1.29;

1.29
date	2014.04.20.20.00.35;	author jeremy;	state Exp;
branches;
next	1.28;

1.28
date	2014.01.07.22.45.05;	author jeremy;	state Exp;
branches;
next	1.27;

1.27
date	2013.11.18.07.23.37;	author landry;	state Exp;
branches;
next	1.26;

1.26
date	2013.10.26.23.44.58;	author jeremy;	state Exp;
branches;
next	1.25;

1.25
date	2013.04.22.19.13.40;	author landry;	state Exp;
branches;
next	1.24;

1.24
date	2013.03.21.08.46.32;	author ajacoutot;	state Exp;
branches;
next	1.23;

1.23
date	2013.03.20.19.13.50;	author jeremy;	state Exp;
branches;
next	1.22;

1.22
date	2013.03.11.11.20.28;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2013.02.10.11.10.02;	author bcallah;	state Exp;
branches;
next	1.20;

1.20
date	2011.12.30.10.42.20;	author sthen;	state Exp;
branches;
next	1.19;

1.19
date	2011.12.15.17.52.03;	author jeremy;	state Exp;
branches;
next	1.18;

1.18
date	2011.11.14.11.40.53;	author jeremy;	state Exp;
branches;
next	1.17;

1.17
date	2011.11.08.23.58.52;	author jeremy;	state Exp;
branches;
next	1.16;

1.16
date	2011.09.16.10.31.21;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2011.09.12.18.02.34;	author naddy;	state Exp;
branches;
next	1.14;

1.14
date	2011.07.20.22.51.32;	author jeremy;	state Exp;
branches;
next	1.13;

1.13
date	2011.07.19.17.09.56;	author jeremy;	state Exp;
branches;
next	1.12;

1.12
date	2011.07.18.19.06.36;	author naddy;	state Exp;
branches;
next	1.11;

1.11
date	2011.05.05.18.22.35;	author jeremy;	state Exp;
branches;
next	1.10;

1.10
date	2011.03.22.20.23.10;	author jeremy;	state Exp;
branches;
next	1.9;

1.9
date	2011.03.10.20.40.33;	author jeremy;	state Exp;
branches;
next	1.8;

1.8
date	2011.01.21.16.36.53;	author jeremy;	state Exp;
branches;
next	1.7;

1.7
date	2011.01.13.00.21.03;	author jeremy;	state Exp;
branches;
next	1.6;

1.6
date	2011.01.07.19.18.43;	author jeremy;	state Exp;
branches;
next	1.5;

1.5
date	2011.01.06.20.20.01;	author jeremy;	state Exp;
branches;
next	1.4;

1.4
date	2011.01.06.04.14.10;	author jeremy;	state Exp;
branches;
next	1.3;

1.3
date	2010.12.19.19.27.49;	author jeremy;	state Exp;
branches;
next	1.2;

1.2
date	2010.11.24.21.35.14;	author jeremy;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.19.17.51.44;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.11.19.17.51.44;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.35
log
@Send lang/rubinius to the Attic.

Broken following the removal of SSLv3. Very slow as it doesn't work with
the in-tree LLVM. On an older version as newer versions don't work with
any of the in-tree compilers.

OK jasper@@ jca@@
@
text
@# $OpenBSD: Makefile,v 1.34 2015/03/29 23:36:29 jeremy Exp $

SHARED_ONLY=	Yes

BROKEN-sparc64 = vm segfaults when building openssl extension
BROKEN-mips64 = no atomics for this arch
BROKEN-hppa = no atomics for this arch
BROKEN-mips64el = no atomics for this arch
BROKEN-powerpc = no atomics for this arch
BROKEN-alpha =	{standard input}:1134: Error: unknown opcode `mfence'

COMMENT =	Ruby virtual machine and core library

V=		2.2.9
EXTRACT_SUFX=	.tar.bz2
DISTNAME =	rubinius-${V}
REVISION =	0

MASTER_SITES =	http://releases.rubini.us/

CATEGORIES =	lang lang/ruby

HOMEPAGE =	http://rubini.us/

MAINTAINER =	Jeremy Evans <jeremy@@openbsd.org>

# BSD
PERMIT_PACKAGE_CDROM =	Yes

WANTLIB += c crypto execinfo m ncurses ncursesw pthread readline ssl stdc++
WANTLIB += termcap util z

LIB_DEPENDS = devel/libexecinfo

BUILD_DEPENDS =	devel/bison \
		devel/libffi \
		devel/ruby-bundler,ruby20

MODULES =	lang/ruby
MODRUBY_REV=	2.0

USE_GMAKE =	Yes

MAKE_ENV +=	LDFLAGS="-L${LOCALBASE}/lib" \
		CPPFLAGS="-DOPENSSL_NO_STATIC_ENGINE -I${LOCALBASE}/include" \
		CXXFLAGS="-DOPENSSL_NO_STATIC_ENGINE -I${LOCALBASE}/include" \
		CC="${CC}" \
		make=gmake \
		GEM_HOME=${GEM_HOME} \
		GEM_PATH=${GEM_HOME}/ruby/2.0:${LOCALBASE}/lib/ruby/gems/2.0 \
		LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

RBX_ARCH =	${MACHINE_ARCH}-openbsd
GEM_HOME =	${WRKSRC}/vendor/build-gems
GEM_EXTENSIONS_DIR = lib/rubinius/gems/extensions/${RBX_ARCH:S/i386/x86/}/2.1

SUBST_VARS=	RBX_ARCH GEM_EXTENSIONS_DIR

# Used when this rubinius version supports ports LLVM
#LLVM_OPTION =	--llvm-config=${LOCALBASE}/bin/llvm-config
#BUILD_DEPENDS += devel/llvm
# Otherwise
LLVM_OPTION =	--disable-llvm

OPENSSL_GEM_FILE = vendor/cache/rubysl-openssl-2.1.0.gem
LIBC = $$(${RUBY} -e 'puts `ldd /usr/bin/at`[/\/usr\/lib\/libc\.so\.[0-9]+/]')

do-configure:
	# Patch openssl library
	cd ${WRKSRC} && tar xf ${OPENSSL_GEM_FILE} && \
		mkdir data && \
		cd data && \
		tar ztf ../data.tar.gz > file_list && \
		tar zxf ../data.tar.gz && \
		rm -f ../data.tar.gz && \
		patch --posix ext/rubysl/openssl/ossl_rand.c \
			${PATCHDIR}/openssl_rand.diff && \
		tar zcf ../data.tar.gz -I file_list  && \
		cd .. && \
		rm -f ${OPENSSL_GEM_FILE} && \
		tar cf ${OPENSSL_GEM_FILE} metadata.gz data.tar.gz && \
		rm -rf data metadata.gz data.tar.gz checksums.yaml.gz
	mkdir -p ${GEM_HOME}
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} bundle20 install \
		--local --path ${GEM_HOME}
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RUBY} configure \
		--prefix=${PREFIX}/lib/rubinius --rake=${RAKE} \
		--gem=gem20 --make=gmake ${LLVM_OPTION} \
		--libc=${LIBC} --with-execinfo

do-build:
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} HOME=${WRKSRC} ${RAKE} build

do-install:
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} HOME=${WRKSRC} \
		DESTDIR=${WRKINST} ${RAKE} install
	rm -r ${WRKSRC}/.rbx
	ln -s ${TRUEPREFIX}/lib/rubinius/bin/rbx ${PREFIX}/bin/rbx
	${INSTALL_DATA_DIR} ${PREFIX}/lib/rubinius/site
	${INSTALL_DATA_DIR} ${PREFIX}/lib/rubinius/site/${RBX_ARCH}

# Need to Ctrl-C after tests finish
TEST_IS_INTERACTIVE = Yes

# VM Test: Failed 1 of 650 tests
# mspec:
# amd64: 2142 files, 19451 examples, 155608 expectations, 8 failures, 0 errors
# i386:  2142 files, 19428 examples, 149322 expectations, 11 failures, 0 errors
do-test:
	-cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RAKE} vm:test
	cd ${WRKSRC} && RUBY=${RUBY} ${RUBY} mspec/bin/mspec ci -f s

TEST_DEPENDS = ${FULLPKGNAME}:${BUILD_PKGPATH}

.include <bsd.port.mk>
@


1.34
log
@Use system version of libffi

Fixes an issue where the embedded libffi would break due to implicitly
picking up gsed if installed, discovered by @@naddy. @@naddy approves of
the idea.

Regen patches while here.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2014/12/30 21:50:24 landry Exp $
@


1.33
log
@Mark BROKEN-alpha a bunch of ports that reliably failed (!) to build in
the past 3 bulks, or forever.

Various reasons: no d^Hrecent compiler available, base gcc generating
nice internal compiler errors, no atomic ops, etc, etc.

While here, mark all webkits as BROKEN-hppa, since this also requires
clang or g++ 4.7. Our g++ 4.8 port only builds on
i386|amd64|powerpc|sparc64 anyway...

if you're interested^Wbored to death, full past logs at
http://build-failures.rhaalovely.net/alpha/...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2014/06/24 21:51:16 jeremy Exp $
d17 1
@


1.32
log
@Update to rubinius 2.2.9.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2014/06/06 17:33:30 jeremy Exp $
d10 1
@


1.31
log
@Update rubinius to 2.2.7.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2014/05/18 15:49:46 jeremy Exp $
d13 1
a13 1
V=		2.2.7
d105 2
a106 2
# amd64: 2141 files, 19407 examples, 155561 expectations, 8 failures, 0 errors
# i386:  2141 files, 19384 examples, 149277 expectations, 11 failures, 0 errors
@


1.30
log
@Update to rubinius 2.2.6.

No longer have a BDEP on llvm unless llvm is used.

Remove the FileUtils.mkdir_p patch, as it doesn't work correctly in
this version.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2014/04/20 20:00:35 jeremy Exp $
d13 1
a13 1
V=		2.2.6
d48 2
a49 1
		GEM_PATH=${GEM_HOME}/ruby/2.0:${LOCALBASE}/lib/ruby/gems/2.0
d105 2
a106 2
# amd64: 2160 files, 19266 examples, 155393 expectations, 16 failures, 1 error
# i386:  2160 files, 19243 examples, 149109 expectations, 19 failures, 1 error
@


1.29
log
@Fix rubinius after removal of egd from openssl

OK sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2014/01/07 22:45:05 jeremy Exp $
d13 1
a13 1
V=		2.2.3
a15 1
REVISION =	0
d28 4
a31 2
WANTLIB += c crypto m ncurses ncursesw pthread readline ssl stdc++
WANTLIB += termcap util yaml z
a34 1
		devel/llvm \
d44 1
d52 1
a52 1
FILEUTILS_DIR =	staging/runtime/gems/rubysl-fileutils-*/lib/rubysl/fileutils
d54 1
a54 1
SUBST_VARS=	RBX_ARCH
d58 1
d62 2
a63 1
OPENSSL_GEM_FILE = vendor/cache/rubysl-openssl-2.0.5.gem
d85 2
a86 1
		--gem=gem20 --make=gmake ${LLVM_OPTION}
a89 2
	patch --posix ${WRKSRC}/${FILEUTILS_DIR}/fileutils.rb \
		${PATCHDIR}/fileutils.diff
@


1.28
log
@Update to rubinius 2.2.3

Disable LLVM usage as ports will soon switch to 3.4, which causes the
rubinius build to fail.

Remove some patches applied/handled upstream.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2013/11/18 07:23:37 landry Exp $
d16 1
d60 2
d63 14
@


1.27
log
@Mark as BROKEN-powerpc, #error "no memory barrier implementation" with base
gcc and no atomic ops with gcc from ports.
Discussed with jeremy@@ (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2013/10/26 23:44:58 jeremy Exp $
d13 1
a13 1
V=		2.1.1
d54 5
d65 1
a65 1
		--gem=gem20 --llvm-config=${LOCALBASE}/bin/llvm-config
d83 1
a83 1
# VM Test: Failed 1 of 652 tests
d85 2
a86 2
# amd64: 2156 files, 19068 examples, 155140 expectations, 19 failures, 0 errors
# i386:  2156 files, 19048 examples, 148858 expectations, 22 failures, 0 errors
@


1.26
log
@Major update to rubinius 2.1.1.  Start using LLVM again as this
version supports the in-tree LLVM.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2013/04/22 19:13:40 landry Exp $
d9 1
@


1.25
log
@Mark as BROKEN-hppa, no atomic ops on this arch like mips64*.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2013/03/21 08:46:32 ajacoutot Exp $
d12 5
a16 4
V=		1.2.4
DISTNAME =	rubinius-${V}-20110705
PKGNAME =	rubinius-$V
REVISION =	3
d27 2
a28 3
WANTLIB =	c crypto curses db gdbm m pthread readline ssl stdc++ \
		${MODRUBY_WANTLIB}
MODRUBY_REV=	1.8
d30 4
a33 1
MASTER_SITES =	http://asset.rubini.us/
a34 6
BUILD_DEPENDS =	devel/bison \
		devel/ruby-rake \
		devel/libffi
LIB_DEPENDS =	databases/gdbm \
		databases/db/v4 \
		${MODRUBY_LIB_DEPENDS}
d36 1
d40 7
d48 4
a51 12
RAKE_VER =	0.8.7
RAKE_COMPILER_VER = 0.6.0
RDOC_VER =	2.5.1
RUBY_DEBUG_VER = 0.10.47
SUBST_VARS=	V RAKE_VER RAKE_COMPILER_VER RDOC_VER RUBY_DEBUG_VER RBX_ARCH

WRKDIST=	${WRKDIR}/rubinius-${V}

CONFIGURE_ENV +=	LDFLAGS="-L${LOCALBASE}/lib" \
			CPPFLAGS="-DOPENSSL_NO_STATIC_ENGINE -I${LOCALBASE}/include" \
			RELEASE=1
MAKE_ENV +=		CC="${CC}"
d54 6
a59 3
	${SUBST_CMD} ${WRKSRC}/rakelib/blueprint.rb
	cd ${WRKSRC} && ${SETENV} ${CONFIGURE_ENV} ${MAKE_ENV} ${RUBY} configure \
		--prefix=${PREFIX}/lib/rubinius --skip-prebuilt --rake=${RAKE}
d62 3
a64 1
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RAKE} build
d67 3
a69 1
	cd ${WRKSRC} && FAKEROOT=${WRKINST} ${RAKE} install
d71 5
a75 6
	mkdir ${PREFIX}/lib/rubinius/gems/1.8/{,cache,doc,gems,specifications}
	for dir in sitelibdir sitearchdir; do \
		mkdir -p ${WRKINST}/`RBX_RUNTIME=${PREFIX}/lib/rubinius/runtime \
		RBX_LIB=${PREFIX}/lib/rubinius/lib \
		${PREFIX}/lib/rubinius/bin/rbx -rrbconfig -e \
		"puts RbConfig::CONFIG['$$dir']"`; done
d77 4
a80 2
# 45/56 failures in mspec on i386/amd64, most of which are due to lacking
# Fiber support
d82 1
a82 1
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RAKE} vm:test
@


1.24
log
@USE_LIBTOOL=Yes is the default now.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2013/03/20 19:13:50 jeremy Exp $
d7 1
@


1.23
log
@Make ruby 1.9 the default ruby for non-gem/extconf ports,
for consistency with the gem/extconf ports.

Update non-gem/extconf ports that relied on the previous
default of ruby 1.8 to explicitly specify it.

OK ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2013/03/11 11:20:28 espie Exp $
a39 1
USE_LIBTOOL=	Yes
@


1.22
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2013/02/10 11:10:02 bcallah Exp $
d27 1
@


1.21
log
@Mark as BROKEN on mips64* - no atomics on those archs.
Remove devel/llvm as a BUILD_DEPENDS, as it is not actually used.

ok jasper@@ aja@@ jeremy@@ (MAINTAINER)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2011/12/30 10:42:20 sthen Exp $
a23 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM =Yes
PERMIT_DISTFILES_FTP =	Yes
d75 1
a75 1
do-regress:
d79 1
a79 1
REGRESS_DEPENDS = ${FULLPKGNAME}:${BUILD_PKGPATH}
@


1.20
log
@Mark BROKEN on sparc64, vm segfaults when building the openssl extension.
Upstream are working on a different branch so this should be re-checked
after a 2.x release is made. Discussed with / ok jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2011/12/15 17:52:03 jeremy Exp $
d6 2
d35 1
a35 2
		devel/libffi \
		devel/llvm>=3.0
@


1.19
log
@Build depend on llvm-3.0 and bump REVISION
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2011/11/14 11:40:53 jeremy Exp $
d4 2
@


1.18
log
@Make regress tests work.

This fixes the vm:test rake task by using MAKE_ENV. It fixes the
infinite loops in mspec by just skipping those specs.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2011/11/08 23:58:52 jeremy Exp $
d10 1
a10 1
REVISION =	2
d32 1
a32 1
		devel/llvm>=2.9
@


1.17
log
@Remove rubygems hacks, since they are no longer necessary now
that the versions of rubygems for the other ruby interpreters
are > 1.3.7.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2011/09/16 10:31:21 espie Exp $
d73 2
a74 1
# Some failures and likely infinite loop in mspec ci
d76 2
a77 2
	cd ${WRKSRC} && ${RAKE} vm:test
	cd ${WRKSRC} && RUBY=${RUBY} ${RUBY} mspec/bin/mspec ci --background --agent
@


1.16
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2011/09/12 18:02:34 naddy Exp $
d10 1
a10 1
REVISION =	1
@


1.15
log
@bump all (sub)packages that depend on db/v4; requested by and help from espie@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2011/07/20 22:51:32 jeremy Exp $
d10 1
a10 1
REVISION =	0
@


1.14
log
@Update to 1.2.4.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2011/07/19 17:09:56 jeremy Exp $
d10 1
@


1.13
log
@Override the arch setting to remove OpenBSD version from it,
so ports don't have to be bumped when OpenBSD version changes.

OK landry@@, jcs@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2011/07/18 19:06:36 naddy Exp $
d7 2
a8 2
V=		1.2.3
DISTNAME =	rubinius-${V}-20110315
a9 1
REVISION =	2
@


1.12
log
@bump revision for plist changes 4.9 -> 5.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2011/05/05 18:22:35 jeremy Exp $
d10 1
a10 1
REVISION =	1
d41 1
a41 1
RBX_ARCH =	${MACHINE_ARCH}-openbsd${OSREV}
@


1.11
log
@REVISION bump rubinius after devel/llvm upgrade, and change the build
depends to llvm>=2.9.

sthen@@ agreed about a month ago
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2011/03/22 20:23:10 jeremy Exp $
d10 1
a10 1
REVISION =	0
@


1.10
log
@Move to version 1.2.3.  Since 1.2.3 uses rubygems 1.5.2, borrow some
patches from lang/jruby that bring back the .require_paths file
creation so that gem ports continue to build.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2011/03/10 20:40:33 jeremy Exp $
d10 1
d32 1
a32 1
		devel/llvm
@


1.9
log
@Bump version to 1.2.2.  Fixes building some rbx-* ports with systrace
enabled.  Fix the hardcoding of the OpenBSD version in the PLIST.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2011/01/21 16:36:53 jeremy Exp $
d7 2
a8 2
V=		1.2.2
DISTNAME =	rubinius-${V}-20110222
d55 1
a55 1
	${SUBST_CMD} ${WRKSRC}/rakelib/vm.rake
@


1.8
log
@Fix zlib ffi driver on 32-bit big endian platforms.  Fixes gem
installation on macppc.  Thanks to ajacoutot@@ for access to a macppc
machine.

OK ajacoutot@@, jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2011/01/13 00:21:03 jeremy Exp $
d7 2
a8 2
V=		1.2.0
DISTNAME =	rubinius-${V}-20101221
a9 1
REVISION =	3
d40 1
d45 1
a45 1
SUBST_VARS=	V RAKE_VER RAKE_COMPILER_VER RDOC_VER RUBY_DEBUG_VER
@


1.7
log
@Enable llvm use by rubinius, now that llvm has been updated to 2.8.
This enables the JIT compiler, which provides dramatic speedups (~8x
for some simple tests).

OK @@sthen
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2011/01/07 19:18:43 jeremy Exp $
d10 1
a10 1
REVISION =	2
@


1.6
log
@Add hidden dependency on databases/db/v4 and honor CC/CFLAGS.

Prodded and OK jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2011/01/06 20:20:01 jeremy Exp $
d10 1
a10 1
REVISION =	1
d31 2
a32 1
		devel/libffi
d57 1
a57 2
		--prefix=${PREFIX}/lib/rubinius --skip-prebuilt --disable-llvm \
		--rake=${RAKE}
@


1.5
log
@Use intree version of libffi, and don't hardcode /usr/local.

Prodded and OK jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2011/01/06 04:14:10 jeremy Exp $
d10 1
a10 1
REVISION =	0
d24 1
a24 1
WANTLIB =	c crypto curses gdbm m pthread readline ssl stdc++ \
d33 1
d51 1
d55 1
a55 1
	cd ${WRKSRC} && ${SETENV} ${CONFIGURE_ENV} ${RUBY} configure \
d60 1
a60 1
	cd ${WRKSRC} && ${RAKE} build
@


1.4
log
@This updates rubinius to 1.2.0.  Among other things, a few of our
patches were accepted upstream.

Rubinius previously installed into a versioned directory, this
update changes it to install into an unversioned directory.
This is going to change the PLIST of all dependent gem ports,
and a commit for them as well as a commit for ruby.port.mk will
be going in shortly.

Minor versions of rubinius do not maintain binary compatibility,
so we'll still need to bump all dependent ports that use C
extensions whenever the minor version of rubinius is updated, but
it is better than bumping all dependent ports.

While here, add some CONFIGURE_ENV stuff to make it possible to
build more ports with C extensions that depend on libraries in
LOCALBASE/lib.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2010/11/24 21:35:14 jeremy Exp $
d10 1
d30 2
a31 1
		devel/ruby-rake
d52 1
@


1.3
log
@Bump after iconv patch added by tedu
@
text
@d7 2
a8 2
V=		1.1.1
DISTNAME =	rubinius-${V}-20101116
a9 1
REVISION =	1
a36 1
M=		${V:R}
d41 1
a41 1
SUBST_VARS=	V M RAKE_VER RAKE_COMPILER_VER RDOC_VER RUBY_DEBUG_VER
d45 4
d50 3
a52 2
	cd ${WRKSRC} && ${RUBY} configure --prefix=${PREFIX}/lib \
		--skip-prebuilt --disable-llvm --rake=${RAKE}
d59 2
a60 2
	ln -s ${TRUEPREFIX}/lib/rubinius/${M}/bin/rbx ${PREFIX}/bin/rbx
	mkdir ${PREFIX}/lib/rubinius/${M}/gems/1.8/{,cache,doc,gems,specifications}
d62 3
a64 3
		mkdir -p ${WRKINST}/`RBX_RUNTIME=${PREFIX}/lib/rubinius/${M}/runtime \
		RBX_LIB=${PREFIX}/lib/rubinius/${M}/lib \
		${PREFIX}/lib/rubinius/${M}/bin/rbx -rrbconfig -e \
d67 1
d70 1
a70 1
	cd ${WRKSRC} && RUBY=${RUBY} ${RUBY} mspec/bin/mspec
@


1.2
log
@REVISION bump all ruby ports due to a change in the pkgspec.
Previously, we were using ruby->=1.8,<=1.9, instead of
ruby->=1.8,<1.9.  While this wouldn't cause an issue, since
our ruby-1.9.2 package isn't included in ruby->=1.8,<=1.9,
it's still wrong and should be fixed.  This also fixes the
following minor issues:

Switch from using FLAVOR to MODRUBY_FLAVOR for *_DEPENDS.
Currently we don't have a ruby port that uses FLAVORs that
would differ from MODRUBY_FLAVOR, but it's possible we will
in the future.

Switch from BASE_PKGPATH to BUILD_PKGPATH in a few cases in
REGRESS_DEPENDS.  This probably is not strictly necessary, but
BUILD_PKGPATH is used in more cases, so it is good for
consistency.

Switch to new style *_DEPENDS, with the version specification
at the end.  The remaining cases where this is not done is
because a specific version is used.

Some FULLPKGNAME added to REGRESS_DEPENDS, to make sure that if
the old version is installed when you run a regress test, it
will install the new version first.

Some conversion of spaces to tabs for consistency.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2010/11/19 17:51:44 jeremy Exp $
d10 1
a10 1
REVISION =	0
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d10 1
d68 1
a68 1
REGRESS_DEPENDS = ${BUILD_PKGPATH}
@


1.1.1.1
log
@Rubinius is an implementation of the Ruby programming language.

The Rubinius bytecode virtual machine is written in C++, incorporating
LLVM to compile bytecode to machine code at runtime. The bytecode
compiler and vast majority of the core classes are written in pure Ruby.

To interact with the rest of the system, the VM provides primitives
which can be attached to methods and invoked. Additionally, FFI provides
a direct call path to most C functions.

Rubinius uses a precise, compacting, generational garbage collector. It
includes a compatible C-API for C extensions written for the standard
Ruby interpreter (often referred to as MRI.Matz's Ruby Implementation).

OK landry@@, sthen@@
@
text
@@
