head	1.11;
access;
symbols
	OPENBSD_5_8:1.10.0.8
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.2
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	jeremy_2010-nov-19:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2015.08.28.14.45.45;	author jeremy;	state dead;
branches;
next	1.10;
commitid	R0Z28rNefJ5H6jof;

1.10
date	2014.06.24.21.51.16;	author jeremy;	state Exp;
branches;
next	1.9;
commitid	4APYd5YB7FVwQ0yZ;

1.9
date	2014.06.06.17.33.30;	author jeremy;	state Exp;
branches;
next	1.8;
commitid	Dm60eFPO1bZyd63l;

1.8
date	2014.05.18.15.49.46;	author jeremy;	state Exp;
branches;
next	1.7;

1.7
date	2014.01.07.22.45.05;	author jeremy;	state Exp;
branches;
next	1.6;

1.6
date	2013.10.26.23.44.58;	author jeremy;	state Exp;
branches;
next	1.5;

1.5
date	2011.07.20.22.51.32;	author jeremy;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.22.20.23.10;	author jeremy;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.10.20.40.33;	author jeremy;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.06.04.14.10;	author jeremy;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.19.17.51.44;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.11.19.17.51.44;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Send lang/rubinius to the Attic.

Broken following the removal of SSLv3. Very slow as it doesn't work with
the in-tree LLVM. On an older version as newer versions don't work with
any of the in-tree compilers.

OK jasper@@ jca@@
@
text
@SHA256 (rubinius-2.2.9.tar.bz2) = ewGn8lCBZ+c7UnO05V5mFvx/2XXnnITE0uPvg9hJ0s4=
SIZE (rubinius-2.2.9.tar.bz2) = 11409258
@


1.10
log
@Update to rubinius 2.2.9.
@
text
@@


1.9
log
@Update rubinius to 2.2.7.
@
text
@d1 2
a2 2
SHA256 (rubinius-2.2.7.tar.bz2) = 4SRLYO15CjozpxJqWHw1rNBB3LICK4lIM1GEkOhy3D0=
SIZE (rubinius-2.2.7.tar.bz2) = 11409167
@


1.8
log
@Update to rubinius 2.2.6.

No longer have a BDEP on llvm unless llvm is used.

Remove the FileUtils.mkdir_p patch, as it doesn't work correctly in
this version.
@
text
@d1 2
a2 2
SHA256 (rubinius-2.2.6.tar.bz2) = itLK2gWiDHCDecdWB/0MglliOzaZ02vkHlCQUhZOsQM=
SIZE (rubinius-2.2.6.tar.bz2) = 11508615
@


1.7
log
@Update to rubinius 2.2.3

Disable LLVM usage as ports will soon switch to 3.4, which causes the
rubinius build to fail.

Remove some patches applied/handled upstream.
@
text
@d1 2
a2 2
SHA256 (rubinius-2.2.3.tar.bz2) = s0JqpplkIPHZ2KeSapQWC4TYvfcleTxkRisnt08vKs8=
SIZE (rubinius-2.2.3.tar.bz2) = 12157173
@


1.6
log
@Major update to rubinius 2.1.1.  Start using LLVM again as this
version supports the in-tree LLVM.
@
text
@d1 2
a2 2
SHA256 (rubinius-2.1.1.tar.bz2) = 4ULD8gHkrp86bmZxKYuqu9m9kGUJxmOtzwgL/0GB7pY=
SIZE (rubinius-2.1.1.tar.bz2) = 12219465
@


1.5
log
@Update to 1.2.4.
@
text
@d1 2
a2 5
MD5 (rubinius-1.2.4-20110705.tar.gz) = QDx3fRmzVT6cs2cB/gAsXg==
RMD160 (rubinius-1.2.4-20110705.tar.gz) = AVVANHmJFnp/lTxsAsprZSTSH6I=
SHA1 (rubinius-1.2.4-20110705.tar.gz) = w5xPseYuD7QYRTgRY2F35sz2qTY=
SHA256 (rubinius-1.2.4-20110705.tar.gz) = 1HT7b1ApK/9SEaqoCxzq0fs+1cfEkiPFH924/8XD8j0=
SIZE (rubinius-1.2.4-20110705.tar.gz) = 9880126
@


1.4
log
@Move to version 1.2.3.  Since 1.2.3 uses rubygems 1.5.2, borrow some
patches from lang/jruby that bring back the .require_paths file
creation so that gem ports continue to build.

OK landry@@
@
text
@d1 5
a5 5
MD5 (rubinius-1.2.3-20110315.tar.gz) = l4LasYwt1ECva3bo61vA8A==
RMD160 (rubinius-1.2.3-20110315.tar.gz) = 6098MEz6NZLcj3UJajjWfA51MLU=
SHA1 (rubinius-1.2.3-20110315.tar.gz) = cybif0WeKZ3QwpBd6bVANMxwzL4=
SHA256 (rubinius-1.2.3-20110315.tar.gz) = UZAB7ZoRFNCZYPGf8q3TG+A7e1+lIYkuTHttHJDYDes=
SIZE (rubinius-1.2.3-20110315.tar.gz) = 9485259
@


1.3
log
@Bump version to 1.2.2.  Fixes building some rbx-* ports with systrace
enabled.  Fix the hardcoding of the OpenBSD version in the PLIST.

OK landry@@
@
text
@d1 5
a5 5
MD5 (rubinius-1.2.2-20110222.tar.gz) = WRJDePt+4EDp7k5HNtifwA==
RMD160 (rubinius-1.2.2-20110222.tar.gz) = 8wW1P15i/9z2/tPHnx5vJQhy7wE=
SHA1 (rubinius-1.2.2-20110222.tar.gz) = Vakxszd9XXBCas21B60Uiarp1cw=
SHA256 (rubinius-1.2.2-20110222.tar.gz) = kcHKO9wTJSV3fu8PbELKBuYiYGVXCt4SfqUo/rISk0c=
SIZE (rubinius-1.2.2-20110222.tar.gz) = 9011164
@


1.2
log
@This updates rubinius to 1.2.0.  Among other things, a few of our
patches were accepted upstream.

Rubinius previously installed into a versioned directory, this
update changes it to install into an unversioned directory.
This is going to change the PLIST of all dependent gem ports,
and a commit for them as well as a commit for ruby.port.mk will
be going in shortly.

Minor versions of rubinius do not maintain binary compatibility,
so we'll still need to bump all dependent ports that use C
extensions whenever the minor version of rubinius is updated, but
it is better than bumping all dependent ports.

While here, add some CONFIGURE_ENV stuff to make it possible to
build more ports with C extensions that depend on libraries in
LOCALBASE/lib.

OK landry@@
@
text
@d1 5
a5 5
MD5 (rubinius-1.2.0-20101221.tar.gz) = QoTCZg8fZIlC3jXU/IcfcA==
RMD160 (rubinius-1.2.0-20101221.tar.gz) = dFr2fEJ0ZZ3AJa9wh9xliQVjCn8=
SHA1 (rubinius-1.2.0-20101221.tar.gz) = F1N7KtPD21qY6dppqW+O3kGFMBk=
SHA256 (rubinius-1.2.0-20101221.tar.gz) = h0Nd/M19fTWVRf4ezRXhIC7e2QpaQ9mpYQAeKyO7a0c=
SIZE (rubinius-1.2.0-20101221.tar.gz) = 8585180
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
MD5 (rubinius-1.1.1-20101116.tar.gz) = s59hjuujfDr/IV2ovKVf1w==
RMD160 (rubinius-1.1.1-20101116.tar.gz) = pRoC7onERrFpJwukoQVIoL9jCOE=
SHA1 (rubinius-1.1.1-20101116.tar.gz) = Fsj6EVHP75hjMqmKqf8umWBM9s0=
SHA256 (rubinius-1.1.1-20101116.tar.gz) = OElAboWs4Iiw2rjFpA4F54xHCsNhqOyJIr3X1WS6KNI=
SIZE (rubinius-1.1.1-20101116.tar.gz) = 8057356
@


1.1.1.1
log
@Rubinius is an implementation of the Ruby programming language.

The Rubinius bytecode virtual machine is written in C++, incorporating
LLVM to compile bytecode to machine code at runtime. The bytecode
compiler and vast majority of the core classes are written in pure Ruby.

To interact with the rest of the system, the VM provides primitives
which can be attached to methods and invoked. Additionally, FFI provides
a direct call path to most C functions.

Rubinius uses a precise, compacting, generational garbage collector. It
includes a compatible C-API for C extensions written for the standard
Ruby interpreter (often referred to as MRI.Matz's Ruby Implementation).

OK landry@@, sthen@@
@
text
@@
