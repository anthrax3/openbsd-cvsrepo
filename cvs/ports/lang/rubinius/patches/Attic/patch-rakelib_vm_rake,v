head	1.3;
access;
symbols
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2011.03.22.20.23.10;	author jeremy;	state dead;
branches;
next	1.2;

1.2
date	2011.03.10.20.40.33;	author jeremy;	state Exp;
branches;
next	1.1;

1.1
date	2011.01.06.20.20.01;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Move to version 1.2.3.  Since 1.2.3 uses rubygems 1.5.2, borrow some
patches from lang/jruby that bring back the .require_paths file
creation so that gem ports continue to build.

OK landry@@
@
text
@$OpenBSD: patch-rakelib_vm_rake,v 1.2 2011/03/10 20:40:33 jeremy Exp $

Use intree versions of libffi, instead of bundled versions.

--- rakelib/vm.rake.orig	Tue Feb 15 14:46:13 2011
+++ rakelib/vm.rake	Thu Feb 17 10:14:23 2011
@@@@ -53,7 +53,7 @@@@ dep_file    = "vm/.depends.mf"
 vm_objs     = %w[ vm/drivers/cli.o ]
 vm_srcs     = %w[ vm/drivers/cli.cpp ]
 
-EX_INC      = %w[ libtommath libgdtoa onig libffi/include
+EX_INC      = %w[ libtommath libgdtoa onig
                 ].map { |f| "vm/external_libs/#{f}" }
 
 INSN_GEN    = %w[ vm/gen/instruction_names.cpp
@@@@ -141,11 +141,11 @@@@ file "vm/external_libs/libgdtoa/libgdtoa.a" => libgdto
 EXTERNALS   = %W[ vm/external_libs/libtommath/libtommath.a
                   vm/external_libs/libgdtoa/libgdtoa.a
                   vm/external_libs/onig/.libs/libonig.a
-                  vm/external_libs/libffi/.libs/libffi.a ]
+                  ${LOCALBASE}/lib/libffi.a ]
 
 INCLUDES      = EX_INC + %w[vm/test/cxxtest vm .]
 
-extra = %w!/usr/local/include /opt/local/include!
+extra = %w!${LOCALBASE}/include ${LOCALBASE}/include!
 
 extra.each do |dir|
   INCLUDES << dir if File.directory?(dir)
@@@@ -470,6 +470,7 @@@@ objs.zip(srcs).each do |obj, src|
 end
 
 files EXTERNALS do |t|
+  next if t =~ /libffi/
   path = File.join(*split_all(t.name)[0..2])
   configure_path = File.join(path, 'configure')
 
@@@@ -648,6 +649,7 @@@@ namespace :vm do
   desc "Clean up, including all external libs"
   task :distclean => :clean do
     EXTERNALS.each do |lib|
+      next if lib =~ /libffi/
       path = File.join(*(lib.split(File::SEPARATOR)[0..-2].reject{|i| i =~ /^\./}))
       system "cd #{path}; #{make} clean || true"
     end
@@@@ -700,12 +702,12 @@@@ def ex_libs # needs to be method to delay running of l
   unless defined? $ex_libs then
     $ex_libs = EXTERNALS.reverse
 
-    if File.directory?("/usr/local/lib")
-      $ex_libs << "-L/usr/local/lib"
+    if File.directory?("${LOCALBASE}/lib")
+      $ex_libs << "-L${LOCALBASE}/lib"
     end
 
-    if File.directory?("/opt/local/lib")
-      $ex_libs << "-L/opt/local/lib"
+    if File.directory?("${LOCALBASE}/lib")
+      $ex_libs << "-L${LOCALBASE}/lib"
     end
 
     $ex_libs << "-ldl" unless RUBY_PLATFORM =~ /bsd|haiku/
@


1.2
log
@Bump version to 1.2.2.  Fixes building some rbx-* ports with systrace
enabled.  Fix the hardcoding of the OpenBSD version in the PLIST.

OK landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-rakelib_vm_rake,v 1.1 2011/01/06 20:20:01 jeremy Exp $
@


1.1
log
@Use intree version of libffi, and don't hardcode /usr/local.

Prodded and OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 2
a6 2
--- rakelib/vm.rake.orig	Tue Dec 21 11:30:57 2010
+++ rakelib/vm.rake	Thu Jan  6 11:13:10 2011
d62 1
a62 1
     $ex_libs << "-ldl" unless RUBY_PLATFORM =~ /bsd/
@

