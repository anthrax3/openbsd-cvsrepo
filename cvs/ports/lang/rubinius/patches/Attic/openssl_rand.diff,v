head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.08.28.14.45.45;	author jeremy;	state dead;
branches;
next	1.1;
commitid	R0Z28rNefJ5H6jof;

1.1
date	2014.04.20.20.00.35;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Send lang/rubinius to the Attic.

Broken following the removal of SSLv3. Very slow as it doesn't work with
the in-tree LLVM. On an older version as newer versions don't work with
any of the in-tree compilers.

OK jasper@@ jca@@
@
text
@--- ext/rubysl/openssl/ossl_rand.c.orig	Sun Apr 20 10:11:14 2014
+++ ext/rubysl/openssl/ossl_rand.c	Sun Apr 20 10:11:29 2014
@@@@ -127,40 +127,6 @@@@
 
 /*
  *  call-seq:
- *     egd(filename) -> true
- *
- */
-static VALUE
-ossl_rand_egd(VALUE self, VALUE filename)
-{
-    SafeStringValue(filename);
-
-    if(!RAND_egd(RSTRING_PTR(filename))) {
-	ossl_raise(eRandomError, NULL);
-    }
-    return Qtrue;
-}
-
-/*
- *  call-seq:
- *     egd_bytes(filename, length) -> true
- *
- */
-static VALUE
-ossl_rand_egd_bytes(VALUE self, VALUE filename, VALUE len)
-{
-    int n = NUM2INT(len);
-
-    SafeStringValue(filename);
-
-    if (!RAND_egd_bytes(RSTRING_PTR(filename), n)) {
-	ossl_raise(eRandomError, NULL);
-    }
-    return Qtrue;
-}
-
-/*
- *  call-seq:
  *     status? => true | false
  *
  * Return true if the PRNG has been seeded with enough data, false otherwise.
@@@@ -195,8 +161,6 @@@@
     DEFMETH(mRandom, "write_random_file", ossl_rand_write_file, 1);
     DEFMETH(mRandom, "random_bytes", ossl_rand_bytes, 1);
     DEFMETH(mRandom, "pseudo_bytes", ossl_rand_pseudo_bytes, 1);
-    DEFMETH(mRandom, "egd", ossl_rand_egd, 1);
-    DEFMETH(mRandom, "egd_bytes", ossl_rand_egd_bytes, 2);
     DEFMETH(mRandom, "status?", ossl_rand_status, 0)
 }
 
@


1.1
log
@Fix rubinius after removal of egd from openssl

OK sthen@@
@
text
@@

