head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2016.05.16.22.20.16;	author juanfra;	state dead;
branches;
next	1.1;
commitid	GTETszv79ME3Iwhs;

1.1
date	2016.03.10.02.35.29;	author juanfra;	state Exp;
branches;
next	;
commitid	K22naO2qcpp2uxfQ;


desc
@@


1.2
log
@Update to Racket 6.5.
@
text
@$OpenBSD: patch-src_racket_src_schpriv_h,v 1.1 2016/03/10 02:35:29 juanfra Exp $

"avoid some C undefined behavior"
https://github.com/racket/racket/commit/9a8fd29

"clean up GC implementation"
https://github.com/racket/racket/commit/2ee721f

--- src/racket/src/schpriv.h.orig	Thu Jan 14 18:11:20 2016
+++ src/racket/src/schpriv.h	Wed Feb 10 00:04:46 2016
@@@@ -345,7 +345,6 @@@@ void scheme_init_dynamic_extension(Scheme_Env *env);
 #ifndef NO_REGEXP_UTILS
 extern void scheme_regexp_initialize(Scheme_Env *env);
 #endif
-void scheme_init_memtrace(Scheme_Env *env);
 void scheme_init_paramz(Scheme_Env *env);
 void scheme_init_parameterization();
 void scheme_init_getenv(void);
@@@@ -2317,6 +2316,7 @@@@ extern int scheme_is_nan(double);
 #      define MZ_IS_POS_INFINITY(d) (isinf(d) && (d > 0))
 #      define MZ_IS_NEG_INFINITY(d) (isinf(d) && (d < 0))
 #      define MZ_IS_NAN(d) isnan(d)
+#      define MZ_IS_NEG_ZERO(d) signbit(d)
 #     endif
 #    endif
 #   endif
@


1.1
log
@Update to Racket 6.4.
@
text
@d1 1
a1 1
$OpenBSD$
@

