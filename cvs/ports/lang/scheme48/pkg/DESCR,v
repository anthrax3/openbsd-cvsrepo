head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.36
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.34
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.32
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.28
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.30
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.26
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.24
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.22
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.20
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.18
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.16
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.14
	OPENBSD_5_0:1.2.0.12
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.10
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.8
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.10
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.8
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	alek_20060701:1.1.1.1
	alek:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.08.19.22.20.40;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.01.14.34.33;	author alek;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.08.01.14.34.33;	author alek;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update scheme48 to 1.8
including many fixes and new features and works on non-i386 too now.

ok MAINTAINER
@
text
@Scheme 48 is an implementation of the Scheme programming language as
described in the Revised5 Report on the Algorithmic Language Scheme. It
is based on a compiler and interpreter for a virtual Scheme machine.
Scheme 48 tries to be faithful to the Revised5 Scheme Report, providing
neither more nor less in the initial user environment. It is based on a
byte-code interpreter and is designed to be used as a testbed for
experiments in implementation techniques and as an expository tool.

It has a foreign function interface for calling functions from C and
comes with a regex library, and a POSIX interface. It is supported by
SLIB the portable Scheme library.
@


1.1
log
@Initial revision
@
text
@d2 6
a7 7
described in the Revised5 Report on the Algorithmic Language Scheme.
It is based on a compiler and interpreter for a virtual Scheme
machine.  Scheme 48 tries to be faithful to the Revised5 Scheme
Report, providing neither more nor less in the initial user
environment. It is based on a byte-code interpreter and is designed to
be used as a testbed for experiments in implementation techniques and
as an expository tool.
d9 3
@


1.1.1.1
log
@Import scheme48 1.3

Scheme 48 is an implementation of the Scheme programming language as
described in the Revised5 Report on the Algorithmic Language Scheme.
It is based on a compiler and interpreter for a virtual Scheme
machine.  Scheme 48 tries to be faithful to the Revised5 Scheme
Report, providing neither more nor less in the initial user
environment. It is based on a byte-code interpreter and is designed to
be used as a testbed for experiments in implementation techniques and
as an expository tool.

From Aaron Hsu <arcfide@@sacrificumdeo.net>
@
text
@@
