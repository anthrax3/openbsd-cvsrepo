head	1.8;
access;
symbols
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7;
locks; strict;
comment	@ * @;


1.8
date	99.08.22.16.57.10;	author espie;	state dead;
branches;
next	1.7;

1.7
date	99.02.24.12.05.08;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	99.02.17.14.44.01;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	99.02.16.17.20.56;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	99.02.12.03.58.16;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	99.02.06.21.49.02;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	99.02.06.16.31.15;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	99.01.18.10.23.26;	author espie;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Bye, bye... moved around.
@
text
@/* Configuration for  a Mips ABI32 OpenBSD target.
   Copyright (C) 1999 Free Software Foundation, Inc.

This file is part of GNU CC.

GNU CC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU CC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU CC; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

/* Default mips is little endian, unless otherwise specified.  */

/* Definitions needed for OpenBSD, avoid picking mips 'defaults'.  */

/* GAS must know this.  */
#define SUBTARGET_ASM_SPEC "%{fPIC:-KPIC} %|"

/* CPP specific OpenBSD specs.  */
#define SUBTARGET_CPP_SPEC OBSD_CPP_SPEC

/* Needed for ELF (inspired by netbsd-elf).  */
#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG
#define LOCAL_LABEL_PREFIX	"."

/* The profiling lib spec here is not really correct but we leave
   it as it is until we have some kind of profiling working.  */
#define LIB_SPEC OBSD_LIB_SPEC


#include <mips/mips.h>

/* Get generic OpenBSD definitions.  */
#define OBSD_HAS_DECLARE_FUNCTION_NAME
#define OBSD_HAS_DECLARE_OBJECT
#define OBSD_HAS_CORRECT_SPECS
#include <openbsd.h>


/* Run-time target specifications.  */
#if TARGET_ENDIAN_DEFAULT != 0
#define CPP_PREDEFINES "-D__SYSTYPE_BSD__ -D__NO_LEADING_UNDERSCORES__ \
-D__GP_SUPPORT__ -D__MIPSEB__ -D__unix__  -D__OpenBSD__ -D__mips__ \
-Asystem(unix) -Asystem(OpenBSD) -Acpu(mips) -Amachine(mips) -Aendian(big)"
#else
#define CPP_PREDEFINES "-D__SYSTYPE_BSD__ -D__NO_LEADING_UNDERSCORES__ \
-D__GP_SUPPORT__ -D__MIPSEL__ -D__unix__  -D__OpenBSD__ -D__mips__ \
-Asystem(unix) -Asystem(OpenBSD) -Acpu(mips) -Amachine(mips) -Aendian(little)"
#endif

/* Layout of source language data types.  */

/* This must agree with <machine/ansi.h>  */
#undef SIZE_TYPE
#define SIZE_TYPE "unsigned int"

#undef PTRDIFF_TYPE
#define PTRDIFF_TYPE "int"

#undef WCHAR_TYPE
#define WCHAR_TYPE "int"

#undef WCHAR_TYPE_SIZE
#define WCHAR_TYPE_SIZE 32

/* Controlling the compilation driver. */

/* LINK_SPEC appropriate for OpenBSD.  Support for GCC options 
   -static, -assert, and -nostdlib. Dynamic loader control.
   XXX Why don't we offer -R support ? */
#undef LINK_SPEC
#define LINK_SPEC \
  "%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} \
   %{bestGnum} %{shared} %{non_shared} \
   %{call_shared} %{no_archive} %{exact_version} \
   %{!shared: %{!non_shared: %{!call_shared: -non_shared}}} \
   %{!dynamic-linker:-dynamic-linker /usr/libexec/ld.so} \
   %{!nostdlib:%{!r*:%{!e*:-e __start}}} -dc -dp \
   %{static:-Bstatic} %{!static:-Bdynamic} %{assert*}"

/* -G is incompatible with -KPIC which is the default, so only allow objects
   in the small data section if the user explicitly asks for it.  */
#undef MIPS_DEFAULT_GVALUE
#define MIPS_DEFAULT_GVALUE 0


/* Since gas and gld are standard on OpenBSD, we don't need these.  */
#undef ASM_FINAL_SPEC
#undef STARTFILE_SPEC

/* A C statement to output something to the assembler file to switch to 
   section NAME for object DECL which is either a FUNCTION_DECL, a VAR_DECL 
   or NULL_TREE.  Some target formats do not support arbitrary sections.  
   Do not define this macro in such cases. mips.h doesn't define this, 
   do it here.  */
#define ASM_OUTPUT_SECTION_NAME(F, DECL, NAME, RELOC)                        \
do {                                                                         \
  extern FILE *asm_out_text_file;                                            \
  if ((DECL) && TREE_CODE (DECL) == FUNCTION_DECL)                           \
    fprintf (asm_out_text_file, "\t.section %s,\"ax\",@@progbits\n", (NAME)); \
  else if ((DECL) && DECL_READONLY_SECTION (DECL, RELOC))                    \
    fprintf (F, "\t.section %s,\"a\",@@progbits\n", (NAME));                  \
  else                                                                       \
    fprintf (F, "\t.section %s,\"aw\",@@progbits\n", (NAME));                 \
} while (0)

/* collect2 support (Macros for initialization).  */

/* Mips default configuration is COFF-only, and confuses collect2.  */
#undef OBJECT_FORMAT_COFF
#undef EXTENDED_COFF
@


1.7
log
@Ironing out details
@
text
@@


1.6
log
@Tweak comments style and add FSF copyright...
@
text
@d21 1
a21 1
/* Default mips is little endian, unless otherwise specified. */
d23 1
a23 1
/* Definitions needed for OpenBSD, avoid picking mips 'defaults'. */
d25 1
a25 1
/* GAS must know this. */
d28 1
a28 1
/* CPP specific OpenBSD specs. */
d31 1
a31 1
/* Needed for ELF (inspired by netbsd-elf). */
d35 5
d42 1
a42 1
/* Get generic OpenBSD definitions. */
d49 10
a58 5
/* Run-time target specifications. */
#define CPP_PREDEFINES "-D__MIPSEL__ -D_MIPSEL -D__SYSTYPE_BSD__ \
-D__NO_LEADING_UNDERSCORES__ -D__GP_SUPPORT__ \
-D__unix__  -D__OpenBSD__ -D__mips__ \
-Asystem(unix) -Asystem(OpenBSD) -Amachine(mips)"
d60 1
a60 1
/* Layout of source language data types. */
d62 1
a62 1
/* This must agree with <machine/ansi.h> */
d96 1
a96 1
/* Since gas and gld are standard on OpenBSD, we don't need these. */
d116 1
a116 2
/* collect2 support (Macros for initialization). */

d118 1
a118 1
/* Mips default configuration is COFF-only, and confuses collect2. */
@


1.5
log
@Tweak up config files to help get FSF approval, mainly remove non-ansi
CPP_PREDEFINES,
Minor fixes for xm-* fragments,
set up openbsd.h mips/openbsd.h for SUBTARGET_*_CPEC.
@
text
@d1 2
a2 2
/* GCC configuration for  OpenBSD Mips ABI32 */
/* $OpenBSD: openbsd.h,v 1.4 1999/02/12 03:58:16 espie Exp $ */
d4 1
a4 1
/* Default mips is little endian, unless otherwise specified */
d6 4
d11 4
a14 1
/* Definitions needed for OpenBSD, avoid picking mips 'defaults' */
d16 10
a25 1
/* GAS must know this */
d28 1
a28 1
/* CPP specific OpenBSD specs */
d31 1
a31 1
/* Needed for ELF (inspired by netbsd-elf) */
d37 1
a37 1
/* Get generic openbsd definitions */
d44 1
a44 1
/* run-time target specifications */
d50 3
a52 3
/* layout of source language data types
   ------------------------------------ */
/* this must agree with <machine/ansi.h> */
d65 1
a65 2
/* Controlling the compilation driver 
   ---------------------------------- */
d69 1
a69 1
	XXX Why don't we offer -R support ? */
d90 5
a94 5
/* A C statement to output something to the assembler file to switch to section
   NAME for object DECL which is either a FUNCTION_DECL, a VAR_DECL or
   NULL_TREE.  Some target formats do not support arbitrary sections.  Do not
   define this macro in such cases. mips.h doesn't define this, do it here.
*/
d106 2
a107 2
/* collect2 support (Macros for initialization)
   -------------------------------------------- */
@


1.4
log
@Fix basic misconceptions about OBJECT_FORMAT.
Move a few definitions before #include mips, to avoid defining a
bad default gratuitously.
@
text
@d2 1
a2 1
/* $OpenBSD: openbsd.h,v 1.3 1999/02/06 21:49:02 espie Exp $ */
d12 3
d24 1
d27 1
d29 1
a29 1
#define CPP_PREDEFINES "-DMIPSEL -D_MIPSEL -DSYSTYPE_BSD \
d35 1
a35 1
 * ------------------------------------ */
d50 1
a50 1
 * ---------------------------------- */
d75 4
a78 5
/*
 A C statement to output something to the assembler file to switch to section
 NAME for object DECL which is either a FUNCTION_DECL, a VAR_DECL or
 NULL_TREE.  Some target formats do not support arbitrary sections.  Do not
 define this macro in such cases. mips.h doesn't define this, do it here.
d92 1
a92 1
 * -------------------------------------------- */
@


1.3
log
@Cleaning up, mostly comments
@
text
@d2 1
a2 1
/* $OpenBSD: openbsd.h,v 1.2 1999/02/06 16:31:15 espie Exp $ */
d6 9
a14 1
#define OBJECT_FORMAT_ELF
a59 9
/* GAS needs to know this */
#define SUBTARGET_ASM_SPEC "%{fPIC:-KPIC} %|"

/* Some comment say that this is needed for ELF */
#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG

/* Some comment say that we need to redefine this for ELF */
#define LOCAL_LABEL_PREFIX	"."

d86 7
@


1.2
log
@Cleaning up configuration, and comments...
@
text
@d2 1
a2 1
/* $OpenBSD: openbsd.h,v 1.1 1999/01/18 10:23:26 espie Exp $ */
a14 1

a20 1

d35 1
a35 1

@


1.1
log
@Upgrade to 19990117. Fix a few details for integrating pa & alpha.
First shot at mips.
@
text
@d2 1
a2 1
/* $OpenBSD$ */
d12 1
a12 1
#define OBSD_HAS_DECLARE_OBJECT_NAME
@

