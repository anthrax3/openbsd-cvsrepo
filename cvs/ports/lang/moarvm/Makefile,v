head	1.15;
access;
symbols
	OPENBSD_6_2:1.15.0.4
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.2
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	pascal_20140525:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.15
date	2017.03.07.21.21.20;	author pascal;	state Exp;
branches;
next	1.14;
commitid	dxFCNQPzBelBzKYl;

1.14
date	2016.09.01.10.53.27;	author jasper;	state Exp;
branches;
next	1.13;
commitid	LdsIxWmxagN2Kq33;

1.13
date	2016.08.06.16.30.07;	author pascal;	state Exp;
branches;
next	1.12;
commitid	YKRG2tgVLMIsyKAN;

1.12
date	2016.05.07.12.40.57;	author pascal;	state Exp;
branches;
next	1.11;
commitid	Fec0PsLcTwj1Q99H;

1.11
date	2015.12.27.20.35.41;	author pascal;	state Exp;
branches;
next	1.10;
commitid	Gv1qqmUaFpixj96t;

1.10
date	2015.12.10.17.50.45;	author pascal;	state Exp;
branches;
next	1.9;
commitid	HwwAVziFumo0WQVV;

1.9
date	2015.11.20.19.44.15;	author jca;	state Exp;
branches;
next	1.8;
commitid	sD4nDThJr0WIBPuR;

1.8
date	2015.11.05.11.51.39;	author pascal;	state Exp;
branches;
next	1.7;
commitid	2fXFM7SqJzx49E10;

1.7
date	2015.08.17.09.02.36;	author jasper;	state Exp;
branches;
next	1.6;
commitid	NUw7Dm3FEYiBqssi;

1.6
date	2015.04.09.17.20.50;	author pascal;	state Exp;
branches;
next	1.5;
commitid	PYODOSxVmllWYDOz;

1.5
date	2015.02.03.13.24.19;	author pascal;	state Exp;
branches;
next	1.4;
commitid	cDA9r3lEeSinzOXS;

1.4
date	2014.09.30.19.11.48;	author jasper;	state Exp;
branches;
next	1.3;
commitid	4vyzNnCT7OjP7Zr1;

1.3
date	2014.09.27.07.57.04;	author landry;	state Exp;
branches;
next	1.2;
commitid	K84WAmv4OBIthuoe;

1.2
date	2014.08.19.05.36.58;	author landry;	state Exp;
branches;
next	1.1;
commitid	wVef6Cuq3seJs3xO;

1.1
date	2014.05.25.21.49.55;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.05.25.21.49.55;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Update to MoarVM 2017.02.
@
text
@# $OpenBSD: Makefile,v 1.14 2016/09/01 10:53:27 jasper Exp $

ONLY_FOR_ARCHS =	amd64 arm i386 mips64 mips64el powerpc sparc64
BROKEN-arm =		missing atomic ops (both AO_* and gcc builtin)
BROKEN-sparc64 =	undefined reference to `AO_fetch_compare_and_swap_full'

COMMENT =		virtual machine for nqp/rakudo

V =			2017.02
DISTNAME =		MoarVM-$V
PKGNAME =		moarvm-$V

SHARED_LIBS =		moar	7.0

CATEGORIES =		lang

HOMEPAGE =		http://moarvm.org/

MAINTAINER =		Pascal Stumpf <pascal@@stumpf.co>

# Artistic2
PERMIT_PACKAGE_CDROM =	Yes

WANTLIB =		atomic_ops c ffi kvm m pthread

MASTER_SITES =		http://moarvm.org/releases/

BUILD_DEPENDS =		math/libtommath
LIB_DEPENDS =		devel/libffi \
			devel/boehm-gc,-atomic

MAKE_FLAGS =		NOISY=1

CONFIGURE_STYLE =	simple
CONFIGURE_SCRIPT =	/usr/bin/perl Configure.pl
CONFIGURE_ARGS +=	--cc="${CC}" --ld="${CC}" \
			--prefix="${PREFIX}" \
			--has-libtommath \
			--has-libffi \
			--has-libatomic_ops
CONFIGURE_ENV =		SO_VERSION="${LIBmoar_VERSION}" \
			CFLAGS="-I${LOCALBASE}/include"

NO_TEST =		Yes

.include <bsd.port.mk>
@


1.14
log
@retire sparc
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2016/08/06 16:30:07 pascal Exp $
d9 1
a9 1
V =			2016.07
d13 1
a13 1
SHARED_LIBS =		moar	6.0
d36 1
a36 1
CONFIGURE_ARGS +=	--cc="${CC}" --ld="${CC}" --optimize=0 \
d42 1
a42 2
			CFLAGS="-I${LOCALBASE}/include" \
			LDFLAGS="-L${LOCALBASE}/lib"
@


1.13
log
@Update to 2016.07; similar diff from Caspar Schutijser on ports@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2016/05/07 12:40:57 pascal Exp $
d3 1
a3 1
ONLY_FOR_ARCHS =	amd64 arm i386 mips64 mips64el powerpc sparc sparc64
@


1.12
log
@Update my mail address.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2015/12/27 20:35:41 pascal Exp $
d3 1
a5 1
BROKEN-hppa =		dyncall_callvm.c:68:4: error: \#error unsupported platform
d9 1
a9 1
V =			2015.12
a11 1
REVISION =		0
d13 1
a13 1
SHARED_LIBS =		moar	5.0
@


1.11
log
@Update to 2015.12.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2015/12/10 17:50:45 pascal Exp $
d12 1
d20 1
a20 1
MAINTAINER =		Pascal Stumpf <Pascal.Stumpf@@cubes.de>
@


1.10
log
@Update to 2015.11, from Carl Bingham.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2015/11/20 19:44:15 jca Exp $
d9 1
a9 1
V =			2015.11
d13 1
a13 1
SHARED_LIBS =		moar	4.0
@


1.9
log
@BROKEN on hppa: #error unsupported platform
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2015/11/05 11:51:39 pascal Exp $
d9 1
a9 1
V =			2015.10
d13 1
a13 1
SHARED_LIBS =		moar	3.0
@


1.8
log
@Update to 2015.10.

* replace internal dyncall with external libffi
* switch to external libtommath

prompted by a diff from Carlin Bingham
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2015/08/17 09:02:36 jasper Exp $
d5 1
@


1.7
log
@remove mips64 from the ONLY_FOR_ARCH list for it doesn't build
@
text
@d1 1
a1 4
# $OpenBSD: Makefile,v 1.6 2015/04/09 17:20:50 pascal Exp $

# theoretically supported by dyncall; mips* doesn't have libatomic_ops
ONLY_FOR_ARCHS =	amd64 arm i386 mips64el powerpc sparc sparc64
d8 1
a8 1
V =			2015.03
d12 1
a12 1
SHARED_LIBS =		moar	2.0
d23 1
a23 1
WANTLIB =		atomic_ops c kvm m pthread
d27 3
a29 1
LIB_DEPENDS =		devel/boehm-gc,-atomic
a32 2
CFLAGS +=		-I${LOCALBASE}/include

d35 4
a38 1
CONFIGURE_ARGS +=	--cc="${CC}" --optimize=0 --prefix="${PREFIX}" \
d40 3
a42 1
CONFIGURE_ENV =		SO_VERSION="${LIBmoar_VERSION}"
@


1.6
log
@Update to MoarVM 2015.03.  Now works on big endian.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2015/02/03 13:24:19 pascal Exp $
d4 1
a4 1
ONLY_FOR_ARCHS =	amd64 arm i386 mips64 mips64el powerpc sparc sparc64
@


1.5
log
@Update to 2015.01.  Use external libatomic_ops.  Use positive ONLY_FOR_ARCHS
list derived from the archs dyncall runs on, minus those who are big endian.
Upstream still does not support BE.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2014/09/30 19:11:48 jasper Exp $
d3 2
a4 1
ONLY_FOR_ARCHS =	amd64 arm i386 mips64el
d6 2
a7 2
SHARED_ONLY =		Yes
BROKEN-arm =		missing atomic ops
d11 1
a11 1
V =			2015.01
d15 1
a15 1
SHARED_LIBS =		moar	1.0
@


1.4
log
@broken on mips64:  undefined reference to `__sync_val_compare_and_swap_4'
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/09/27 07:57:04 landry Exp $
d3 1
a3 2
# note about 3rdparty libs: there's another copy of libatomic_ops at
# devel/boehm-gc which this port will be able to use if that is updated.
a6 3
BROKEN-mips64 =		missing atomic ops
BROKEN-alpha =		dyncall_callvm.c:66:4: error: #error unsupported platform
BROKEN-hppa =		dyncall_callvm.c:66:4: error: #error unsupported platform
d10 1
a10 1
V =			2014.05
d14 1
a14 1
SHARED_LIBS =		moar	0.0
d25 1
a25 1
WANTLIB =		c kvm m pthread
d29 2
d33 2
d37 2
a38 1
CONFIGURE_ARGS +=	--cc="${CC}" --optimize=0 --prefix="${PREFIX}"
@


1.3
log
@BROKEN-hppa: dyncall_callvm.c:66:4: error: #error unsupported platform
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2014/08/19 05:36:58 landry Exp $
d8 1
@


1.2
log
@BROKEN-alpha =          dyncall_callvm.c:66:4: error: #error unsupported platform
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2014/05/25 21:49:55 pascal Exp $
d9 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d8 1
@


1.1.1.1
log
@Import lang/moarvm, ok landry@@

MoarVM (short for Metamodel On A Runtime Virtual Machine) is a runtime built
for the 6model object system. It is primarily aimed at running NQP and Rakudo
Perl 6, but should be able to serve as a backend for any compilers built using
the NQP compiler toolchain.
@
text
@@
