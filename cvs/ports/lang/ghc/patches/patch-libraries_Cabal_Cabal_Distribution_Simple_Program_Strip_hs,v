head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.6
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2015.09.27.20.07.47;	author kili;	state Exp;
branches;
next	;
commitid	W1skTdS27618NMyC;


desc
@@


1.1
log
@Disable stripping of hs libraries in Cabal.

It appears that strip --strip-unneeded sometimes strips too much.

For example, if you take libHStf-random-0.5-926BwEbiHzi7pBkp4dTxOe.a
from the hs-tf-random package on i386 and run strip --strip-unneeded
on it, the T Threefish_256_Process_Block symbol (from threefish_block.o)
is stripped, which shouldn't happen. Note: this specific case applies
to i386, not to amd64. But...

doug@@ reported a similar problem for the haskell library texmath,
which we don't yet have in the ports tree, and he made some even
more weird observation: texmath contains the two C source files
cbits/{key,val}ToASCII.c, defining the symbols keylookup (in
keyToAscii.c) and toASCIILut (in valToASCII.c), where both are just
some lookup tables. With strip --strip-unneeded enabled, the resulting
libHStexmath-*.a archive is missing keylookup. doug@@ then concatenated
both .c files to a new one and changed the .cabal file of texmath
to use that single one instead, and suddenly the symbol keylookup
no longer was removed.

I'll try to make a port for texmath (which would be required anyway
for porting pandoc) so people who want help to debug this don't
have to build all the haskell goo themselves.
@
text
@$OpenBSD$

Work around unresolved symbols when linking against hs packages
that use FFI and contain some code compiled from C sources.

--- libraries/Cabal/Cabal/Distribution/Simple/Program/Strip.hs.orig	Wed Feb 25 06:13:11 2015
+++ libraries/Cabal/Cabal/Distribution/Simple/Program/Strip.hs	Sun Sep 27 21:41:40 2015
@@@@ -52,6 +52,8 @@@@ stripLib verbosity (Platform arch os) conf path = do
            return ()
     IOS -> return ()
     Solaris -> return ()
+    OpenBSD -> -- '--strip-unneeded' sometimes strips too much on OpenBSD.
+           return ()
     Windows -> -- Stripping triggers a bug in 'strip.exe' for
                -- libraries with lots identically named modules. See
                -- #1784.
@
