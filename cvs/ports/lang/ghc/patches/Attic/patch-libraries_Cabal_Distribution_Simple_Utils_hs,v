head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.09.02.19.53.46;	author kili;	state dead;
branches;
next	1.1;

1.1
date	2011.07.23.16.38.54;	author kili;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to ghc-7.4.2, but keep it marked as broken (and not only for amd64).

Most of the -nopie changes are from pascal@@ (thanks); I only had to
merge them for ghc-7.4 and tweak configure and mk/config.mk.in.
@
text
@$OpenBSD: patch-libraries_Cabal_Distribution_Simple_Utils_hs,v 1.1 2011/07/23 16:38:54 kili Exp $

Don't strip the error message down to something stupid like `resource
exhausted' (which represents 13 different values of errno).

--- libraries/Cabal/Distribution/Simple/Utils.hs.orig	Mon Jun 13 19:10:10 2011
+++ libraries/Cabal/Distribution/Simple/Utils.hs	Sat Jul 23 17:15:16 2011
@@@@ -241,18 +241,7 @@@@ topHandler prog = catch prog handle
       hPutStr stderr (mesage pname)
       exitWith (ExitFailure 1)
       where
-        mesage pname = wrapText (pname ++ ": " ++ file ++ detail)
-        file         = case ioeGetFileName ioe of
-                         Nothing   -> ""
-                         Just path -> path ++ location ++ ": "
-#if defined(__HUGS__) || (defined(__GLASGOW_HASKELL__) && __GLASGOW_HASKELL__ < 608)
-        location     = ""
-#else
-        location     = case ioeGetLocation ioe of
-                         l@@(n:_) | n >= '0' && n <= '9' -> ':' : l
-                         _                              -> ""
-#endif
-        detail       = ioeGetErrorString ioe
+        mesage pname = wrapText (pname ++ ": " ++ show ioe)
 
 -- | Non fatal conditions that may be indicative of an error or problem.
 --
@


1.1
log
@Fix totally stupid error message hiding fuckup in cabal.
@
text
@d1 1
a1 1
$OpenBSD$
@

