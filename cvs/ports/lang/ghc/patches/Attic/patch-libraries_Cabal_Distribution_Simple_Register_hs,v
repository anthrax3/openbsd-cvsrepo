head	1.7;
access;
symbols
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_7:1.1.0.12
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.10
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.8
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2012.09.02.19.53.46;	author kili;	state dead;
branches;
next	1.6;

1.6
date	2011.04.11.14.30.33;	author kili;	state Exp;
branches;
next	1.5;

1.5
date	2010.11.05.21.23.46;	author kili;	state Exp;
branches;
next	1.4;

1.4
date	2010.11.03.21.32.08;	author kili;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.19.14.23.15;	author kili;	state dead;
branches;
next	1.2;

1.2
date	2010.04.22.21.49.37;	author kili;	state Exp;
branches;
next	1.1;

1.1
date	2007.07.21.17.14.58;	author kili;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to ghc-7.4.2, but keep it marked as broken (and not only for amd64).

Most of the -nopie changes are from pascal@@ (thanks); I only had to
merge them for ghc-7.4 and tweak configure and mk/config.mk.in.
@
text
@$OpenBSD: patch-libraries_Cabal_Distribution_Simple_Register_hs,v 1.6 2011/04/11 14:30:33 kili Exp $
--- libraries/Cabal/Distribution/Simple/Register.hs.orig	Wed Dec 15 19:10:13 2010
+++ libraries/Cabal/Distribution/Simple/Register.hs	Sun Dec 19 13:07:14 2010
@@@@ -128,13 +128,14 @@@@ register pkg@@PackageDescription { library       = Just
 
     installedPkgInfo <- generateRegistrationInfo
                            verbosity pkg lib lbi clbi inplace distPref
+    let installedPkgInfo' = installedPkgInfo { IPI.pkgpath = pkgPath }
 
      -- Three different modes:
     case () of
-     _ | modeGenerateRegFile   -> writeRegistrationFile installedPkgInfo
-       | modeGenerateRegScript -> writeRegisterScript   installedPkgInfo
+     _ | modeGenerateRegFile   -> writeRegistrationFile installedPkgInfo'
+       | modeGenerateRegScript -> writeRegisterScript   installedPkgInfo'
        | otherwise             -> registerPackage verbosity
-                                    installedPkgInfo pkg lbi inplace packageDbs
+                                    installedPkgInfo' pkg lbi inplace packageDbs
 
   where
     modeGenerateRegFile = isJust (flagToMaybe (regGenPkgConf regFlags))
@@@@ -150,6 +151,7 @@@@ register pkg@@PackageDescription { library       = Just
     packageDbs = nub $ withPackageDB lbi
                     ++ maybeToList (flagToMaybe  (regPackageDB regFlags))
     distPref  = fromFlag (regDistPref regFlags)
+    pkgPath = fromFlag (regPkgPath regFlags)
     verbosity = fromFlag (regVerbosity regFlags)
 
     writeRegistrationFile installedPkgInfo = do
@@@@ -272,6 +274,7 @@@@ generalInstalledPackageInfo adjustRelIncDirs pkg lib c
     IPI.pkgUrl             = pkgUrl      pkg,
     IPI.description        = description pkg,
     IPI.category           = category    pkg,
+    IPI.pkgpath            = "",
     IPI.exposed            = libExposed  lib,
     IPI.exposedModules     = exposedModules lib,
     IPI.hiddenModules      = otherModules bi,
@


1.6
log
@Update to 7.0.3.

ok jasper@@ (who also gave an ok to all the depending updates).
@
text
@d1 1
a1 1
$OpenBSD: patch-libraries_Cabal_Distribution_Simple_Register_hs,v 1.5 2010/11/05 21:23:46 kili Exp $
@


1.5
log
@Tweak the pkgpath hack so it doesn't change the Cabal API. Unbreaks
hs-glib (and probably other stuff that uses the Cabal library).

Bump both -main and -doc (yes, really, -doc, too).

I hereby nominate myself for the HSMAUS (Homer Simpson Memorial
Award of Unlimited Stupidity).
@
text
@d1 4
a4 4
$OpenBSD: patch-libraries_Cabal_Distribution_Simple_Register_hs,v 1.4 2010/11/03 21:32:08 kili Exp $
--- libraries/Cabal/Distribution/Simple/Register.hs.orig	Wed Jun  9 20:10:19 2010
+++ libraries/Cabal/Distribution/Simple/Register.hs	Fri Nov  5 19:25:46 2010
@@@@ -130,13 +130,14 @@@@ register pkg@@PackageDescription { library       = Just
d16 1
a16 1
        | otherwise             -> registerPackage' verbosity
d22 1
a22 1
@@@@ -152,6 +153,7 @@@@ register pkg@@PackageDescription { library       = Just
d30 1
a30 1
@@@@ -311,6 +313,7 @@@@ generalInstalledPackageInfo adjustRelIncDirs pkg lib c
@


1.4
log
@Add a `pkgpath' field to installed GHC libraries. Only applies to
libraries not coming together with ghc. This allows for looking up
a library's PKGPATH by running

        ghc-pkg field $pkgname pkgpath

where $pkgname is the GHC library name without the `hs-' prefix,
for example `ghc-paths'.

looks good to jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 3
+++ libraries/Cabal/Distribution/Simple/Register.hs	Fri Oct 29 14:59:14 2010
@@@@ -129,7 +129,7 @@@@ register pkg@@PackageDescription { library       = Just
   = do
d7 2
a8 2
-                           verbosity pkg lib lbi clbi inplace distPref
+                           verbosity pkg lib lbi clbi inplace distPref pkgPath
d12 11
a22 1
@@@@ -152,6 +152,7 @@@@ register pkg@@PackageDescription { library       = Just
a29 20
@@@@ -181,8 +182,9 @@@@ generateRegistrationInfo :: Verbosity
                          -> ComponentLocalBuildInfo
                          -> Bool
                          -> FilePath
+			 -> String
                          -> IO InstalledPackageInfo
-generateRegistrationInfo verbosity pkg lib lbi clbi inplace distPref = do
+generateRegistrationInfo verbosity pkg lib lbi clbi inplace distPref pkgPath = do
   --TODO: eliminate pwd!
   pwd <- getCurrentDirectory
 
@@@@ -201,7 +203,7 @@@@ generateRegistrationInfo verbosity pkg lib lbi clbi in
         | inplace   = inplaceInstalledPackageInfo pwd distPref
                         pkg lib lbi clbi
         | otherwise = absoluteInstalledPackageInfo
-                        pkg lib lbi clbi
+                        pkg lib lbi clbi pkgPath
 
   return installedPkgInfo{ IPI.installedPackageId = ipid }
 
a37 14
@@@@ -380,9 +383,11 @@@@ absoluteInstalledPackageInfo :: PackageDescription
                              -> Library
                              -> LocalBuildInfo
                              -> ComponentLocalBuildInfo
+			     -> String
                              -> InstalledPackageInfo
-absoluteInstalledPackageInfo pkg lib lbi clbi =
-    generalInstalledPackageInfo adjustReativeIncludeDirs pkg lib clbi installDirs
+absoluteInstalledPackageInfo pkg lib lbi clbi pkgPath =
+    let ipi = generalInstalledPackageInfo adjustReativeIncludeDirs pkg lib clbi installDirs
+    in ipi { IPI.pkgpath = pkgPath }
   where
     -- For installed packages we install all include files into one dir,
     -- whereas in the build tree they may live in multiple local dirs.
@


1.3
log
@Let Cabal-generated register.sh and unregister.sh scripts pass
paraemters to ghc-pkg. Remove the (now obsolete) patch for Register.hs.

Ports that build ghc libraries should now use the following
@@exec/@@unexec magic (('ve already diffs for all the hs-* ports in
my tree):

lib/${DISTNAME}/register.sh
@@exec /usr/bin/env HOME=/nonexistent %D/lib/${DISTNAME}/register.sh -v0
@@unexec /usr/bin/env HOME=/nonexistent %D/lib/${DISTNAME}/unregister.sh -v0 --force
lib/${DISTNAME}/unregister.sh
@
text
@d1 62
a62 12
$OpenBSD: patch-libraries_Cabal_Distribution_Simple_Register_hs,v 1.2 2010/04/22 21:49:37 kili Exp $
--- libraries/Cabal/Distribution/Simple/Register.hs.orig	Wed Mar 31 20:10:21 2010
+++ libraries/Cabal/Distribution/Simple/Register.hs	Fri Apr  2 09:45:09 2010
@@@@ -404,7 +404,7 @@@@ unregister pkg lbi regFlags = do
   case compilerFlavor (compiler lbi) of
     GHC ->
       let Just ghcPkg = lookupProgram ghcPkgProgram (withPrograms lbi)
-          invocation = HcPkg.unregisterInvocation ghcPkg Verbosity.normal
+          invocation = HcPkg.unregisterInvocation ghcPkg Verbosity.silent
                          packageDb pkgid
       in if genScript
            then writeFileAtomic unregScriptFileName
@


1.2
log
@
Update to 6.12.2.

Many thanks to Darrin Chandler and dcoppa@@ for testing, reporting about
broken stuff, missing dependencies here and in ports depending on ghc.

Notes and rants:

- Bootstrapping is done using precompiled binaries, since .hc
  bootstrapping still doesn't work. I really hate this.

  THIS MEANS THAT GHC IS NOW AND WILL STAY LEGACY-ONLY (i386 and amd64)

  At least until someone fixes it. I tried for more than two year
  (well, only in my spare time and during my vacations) and failed.

- libgmp is currently disabled, because I didn't yet hack the GHC build
  system to use the system libgmp instead of the patched one included
  in GHC.

- The haddock ncluded in the ghc distfile is replaced by the version
  of haddock found in devel/haddock. Haddock itself is @@commented
  in the ghc PLIST. Unfortunately, this needs an ugly hack that
  introduces an otherwise useless pseudo flavor `no_deps' in
  devel/haddock.

- CLDouble has been removed from GHC some time ago, because it was
  an alias for double (AFAIK there's now support for long double
  in GHC). As this isn't a really big problem, it currently breaks
  c2hs, which I'll mark broken temporarily before committing the
  ghc update.

- The external codeset defaults to latin1 (suggested by Simon Marlow)
  and can be overridden by setting the HS_ENCODING to any codeset
  supported by libiconv.

- ghc.port.mk still needs some love, especially for letting a port add
  additional parameters to certain invocations of ${MODGHC_SETUP_PROG}.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@
Update to 6.6.1. With helpful hints from Don Stewart and espie@@.
Thanks to all the testers and to steven@@, who was so kind to
build the HC files for bootstrapping on amd64.
@
text
@d2 11
a12 36

Be more quiet, I don't want to see all that blurb from ghc-pkg.
Instead of a huge echo, just use a here-document.

--- libraries/Cabal/Distribution/Simple/Register.hs.orig	Wed Apr 25 19:23:22 2007
+++ libraries/Cabal/Distribution/Simple/Register.hs	Sun Jul 15 14:53:40 2007
@@@@ -342,7 +342,7 @@@@ rawSystemEmit scriptName True verbosity path args = do
 #if mingw32_HOST_OS || mingw32_TARGET_OS
   writeFile scriptName ("@@" ++ path ++ concatMap (' ':) args)
 #else
-  writeFile scriptName ("#!/bin/sh\n\n"
+  writeFile scriptName ("#!/bin/sh\nexec > /dev/null\n"
                         ++ (path ++ concatMap (' ':) args)
                         ++ "\n")
   p <- getPermissions scriptName
@@@@ -360,17 +360,12 @@@@ rawSystemPipe scriptName verbose pipeFrom path args = 
 #if mingw32_HOST_OS || mingw32_TARGET_OS
   writeFile scriptName ("@@" ++ path ++ concatMap (' ':) args)
 #else
-  writeFile scriptName ("#!/bin/sh\n\n"
-                        ++ "echo '" ++ escapeForShell pipeFrom
-                        ++ "' | " 
-                        ++ (path ++ concatMap (' ':) args)
-                        ++ "\n")
+  writeFile scriptName ("#!/bin/sh\nexec > /dev/null\n"
+                        ++ (path ++ concatMap (' ':) args) ++ " << 'EOF'\n"
+			++ pipeFrom ++ "\nEOF\n")
   p <- getPermissions scriptName
   setPermissions scriptName p{executable=True}
 #endif
-  where escapeForShell [] = []
-        escapeForShell (c@@'\'':cs) = c : c : escapeForShell cs
-        escapeForShell (c     :cs) = c     : escapeForShell cs
 
 -- ------------------------------------------------------------
 -- * Testing
@

