head	1.7;
access;
symbols
	OPENBSD_4_1:1.6.0.10
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.8
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.6
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4;
locks; strict;
comment	@# @;


1.7
date	2007.07.21.17.14.58;	author kili;	state dead;
branches;
next	1.6;

1.6
date	2005.02.14.01.26.56;	author dons;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.26.23.48.50;	author dons;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.01.20.32.14;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.21.19.51.23;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.01.14.03.40;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.20.21.57.11;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.7
log
@
Update to 6.6.1. With helpful hints from Don Stewart and espie@@.
Thanks to all the testers and to steven@@, who was so kind to
build the HC files for bootstrapping on amd64.
@
text
@$OpenBSD: patch-ghc_compiler_Makefile,v 1.6 2005/02/14 01:26:56 dons Exp $
--- ghc/compiler/Makefile.orig	Wed Oct 13 20:09:08 2004
+++ ghc/compiler/Makefile	Wed Feb  2 10:55:40 2005
@@@@ -533,7 +533,6 @@@@ CLEAN_FILES += $(odir)/ghc-inplace ghc-i
 # but put it together with the libraries.
 # Also don't want any interface files installed
 
-DESTDIR = $(INSTALL_LIBRARY_DIR_GHC)
 
 ifneq "$(HOSTPLATFORM)" "i386-unknown-mingw32"
 INSTALL_LIBEXECS += $(HS_PROG)
@


1.6
log
@Update ghc to 6.2.2.
Adds support for ghci. More stable foreign function interface.

Just i386 at the moment.

ok sturm@@ pvalchev@@
@
text
@d1 1
a1 1
$OpenBSD: patch-ghc_compiler_Makefile,v 1.5 2004/04/26 23:48:50 dons Exp $
@


1.5
log
@Update GHC to 6.2.1, and port to amd64

ok avsm@@ pvalchev@@
@
text
@d1 4
a4 4
$OpenBSD$
--- ghc/compiler/Makefile.orig	Mon Sep  8 05:52:24 2003
+++ ghc/compiler/Makefile	Sun Apr 18 20:59:44 2004
@@@@ -503,7 +503,6 @@@@
@


1.4
log
@Bootstrap using a more recent ghc, solves gc issues. From maintainer.
okay naddy.
@
text
@d1 4
a4 3
--- ghc/compiler/Makefile.orig	Thu Jul 24 01:34:23 2003
+++ ghc/compiler/Makefile	Sun Aug 24 12:15:18 2003
@@@@ -508,7 +508,6 @@@@
@


1.3
log
@pass 80M up as TWEAKED_SIZE in MAKE_FLAGS, so that it's easier to fiddle
with.
@
text
@d1 5
a5 19
$OpenBSD: patch-ghc_compiler_Makefile,v 1.2 2003/08/01 14:03:40 avsm Exp $
Note: -H sets the initial size of the garbage collected heap used
by the compiler to compiled a Haskell file. There appears to be
some kind of garbage collection bug in  the stage1 compiler build
by ghc4.08.2. It manifests itself as non-deterministic seg
faults, particularly in low-memory conditions. GHC will die
inside scavenge_mutable_list() or evacuate(). This only happens
in the stage1 compiler though, and then, only rarely.

It doesn't appear to affect the final, stage-2, compiler.

I haven't been able to work this one out. But, upping the size
of the inital heap prevents garbage collects occuring as often,
reducing the probability of this bug stopping our build. -H80m
was determined experimentally.

--- ghc/compiler/Makefile.orig	Sat Jul 12 10:00:33 2003
+++ ghc/compiler/Makefile	Sat Jul 12 10:00:39 2003
@@@@ -338,7 +338,7 @@@@
d7 1
a7 4
 SRC_CC_OPTS += -Iparser -I. -O
 SRC_HC_OPTS += -recomp $(GhcHcOpts) $(GhcStage$(stage)HcOpts)
-SRC_HC_OPTS += -H16M
+SRC_HC_OPTS += -H${TWEAKED_SIZE}
d9 2
a10 2
 ifeq "$(BootingFromHc)" "YES"
 SRC_CC_OPTS += -D__GLASGOW_HASKELL__=$(ProjectVersionInt)
@


1.2
log
@RCS tags, from Xavier Santolaria <xavier@@santolaria.net>
@
text
@d1 1
a1 1
$OpenBSD$
d24 1
a24 1
+SRC_HC_OPTS += -H80M
@


1.1
log
@Update from maintainer Don Stewart (dons at cse.unsw.edu.au):

- Updated to ghc-6.0
- Halved (roughly) the build time; by using the 6.0 in-tree build
we only have to build the 6.0 libraries once. Also we only build the
necessary parts of the bootstrap compiler.
- The ugly lndir/stage1 build is also gone.
- The full ghc regression suite is now part of the port!
"make regress" will run around 3000 regress tests.
- The regression tests revealed that the C foreign function
- The Makefile is simplified, using more default targets
- The documentation is updated to 6.0
- I put some of the 5.04.3 patches into ghc cvs, so they are
now obsolete.

Unfortunately, this lets mozilla back in the race for longest
package building time...
@
text
@d1 1
@

