head	1.6;
access;
symbols
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	avsm_2003-May-29:1.1.1.1
	avsm:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2004.04.26.23.48.50;	author dons;	state dead;
branches;
next	1.5;

1.5
date	2004.01.08.20.33.23;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.01.20.32.14;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.01.14.03.40;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.20.21.57.11;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.29.16.38.31;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.29.16.38.31;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update GHC to 6.2.1, and port to amd64

ok avsm@@ pvalchev@@
@
text
@$OpenBSD: patch-ghc_rts_Linker_c,v 1.5 2004/01/08 20:33:23 avsm Exp $
sprintf.
preliminary attempts to get object file loading working, so that
ghci will work. Needs revisiting, to check all lib interfaces

--- ghc/rts/Linker.c.orig	Fri May 30 08:40:51 2003
+++ ghc/rts/Linker.c	Fri Nov  7 12:32:30 2003
@@@@ -59,7 +59,7 @@@@
 #include <sys/mman.h>
 #endif
 
-#if defined(linux_TARGET_OS) || defined(solaris2_TARGET_OS) || defined(freebsd_TARGET_OS) || defined(netbsd_TARGET_OS)
+#if defined(linux_TARGET_OS) || defined(solaris2_TARGET_OS) || defined(freebsd_TARGET_OS) || defined(netbsd_TARGET_OS) || defined(openbsd_TARGET_OS)
 #  define OBJFORMAT_ELF
 #elif defined(cygwin32_TARGET_OS) || defined (mingw32_TARGET_OS)
 #  define OBJFORMAT_PEi386
@@@@ -773,10 +773,10 @@@@
       	extension. */
 
    buf = stgMallocBytes(strlen(dll_name) + 10, "addDLL");
-   sprintf(buf, "%s.DLL", dll_name);
+   snprintf(buf, strlen(dll_name) + 10, "%s.DLL", dll_name);
    instance = LoadLibrary(buf);
    if (instance == NULL) {
-	 sprintf(buf, "%s.DRV", dll_name);	// KAA: allow loading of drivers (like winspool.drv)
+	 snprintf(buf, strlen(dll_name) + 10, "%s.DRV", dll_name);	// KAA: allow loading of drivers (like winspool.drv)
 	 instance = LoadLibrary(buf);
 	 if (instance == NULL) {
 		stgFree(buf);
@@@@ -2011,7 +2011,15 @@@@
 #  define ELF_NEED_PLT      /* needs Procedure Linkage Tables */
 #endif
 
+#if !defined(openbsd_TARGET_OS)
 #include <elf.h>
+#else
+/* openbsd elf has things in different places, with diff names */
+#include <elf_abi.h>
+#include <machine/reloc.h>
+#define R_386_32    RELOC_32
+#define R_386_PC32  RELOC_PC32
+#endif
 
 /*
  * Define a set of types which can be used for both ELF32 and ELF64
@


1.5
log
@Add support for sparc ghc.
Hard work by Donald Stewart <dons at cse.unsw.edu.au>
@
text
@d1 1
a1 1
$OpenBSD: patch-ghc_rts_Linker_c,v 1.4 2003/09/01 20:32:14 espie Exp $
@


1.4
log
@Bootstrap using a more recent ghc, solves gc issues. From maintainer.
okay naddy.
@
text
@d1 1
a1 1
$OpenBSD: patch-ghc_rts_Linker_c,v 1.3 2003/08/01 14:03:40 avsm Exp $
d6 2
a7 2
--- ghc/rts/Linker.c.orig	Wed Apr 30 07:37:31 2003
+++ ghc/rts/Linker.c	Sun Jul  6 21:29:55 2003
d17 1
a17 13
@@@@ -724,7 +724,11 @@@@
 
    initLinker();
 
+#if !defined(openbsd_TARGET_OS)
    hdl= dlopen(dll_name, RTLD_NOW | RTLD_GLOBAL);
+#else
+   hdl= dlopen(dll_name, RTLD_LAZY);
+#endif
    if (hdl == NULL) {
       /* dlopen failed; return a ptr to the error msg. */
       errmsg = dlerror();
@@@@ -763,10 +767,10 @@@@
d30 1
a30 1
@@@@ -2001,7 +2005,15 @@@@
@


1.3
log
@RCS tags, from Xavier Santolaria <xavier@@santolaria.net>
@
text
@d1 1
a1 1
$OpenBSD$
d4 1
a4 1
ghci will work
@


1.2
log
@Update from maintainer Don Stewart (dons at cse.unsw.edu.au):

- Updated to ghc-6.0
- Halved (roughly) the build time; by using the 6.0 in-tree build
we only have to build the 6.0 libraries once. Also we only build the
necessary parts of the bootstrap compiler.
- The ugly lndir/stage1 build is also gone.
- The full ghc regression suite is now part of the port!
"make regress" will run around 3000 regress tests.
- The regression tests revealed that the C foreign function
- The Makefile is simplified, using more default targets
- The documentation is updated to 6.0
- I put some of the 5.04.3 patches into ghc cvs, so they are
now obsolete.

Unfortunately, this lets mozilla back in the race for longest
package building time...
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 3
a3 1
start to get ghci working
d5 3
a7 3
--- ghc/rts/Linker.c.orig	Mon Oct 14 03:50:54 2002
+++ ghc/rts/Linker.c	Thu May  1 09:59:09 2003
@@@@ -56,7 +56,7 @@@@
d11 2
a12 2
-#if defined(linux_TARGET_OS) || defined(solaris2_TARGET_OS) || defined(freebsd_TARGET_OS)
+#if defined(linux_TARGET_OS) || defined(solaris2_TARGET_OS) || defined(freebsd_TARGET_OS) || defined(openbsd_TARGET_OS)
d16 3
a18 3
@@@@ -642,7 +642,11 @@@@ addDLL( char *dll_name )
    void *hdl;
    char *errmsg;
d28 14
a41 1
@@@@ -1893,7 +1897,15 @@@@ ocResolve_PEi386 ( ObjectCode* oc )
@


1.1.1.1
log
@initial import of ghc-5.04.3, which takes the "longest compilation
time" award from mozilla and gcc3

From Don Stewart <dons@@cse.unsw.edu.au> with tweaks from me

(i386 only for the moment)
--
The Glasgow Haskell Compiler is a robust, fully-featured, optimising
compiler for the functional programming language Haskell 98.

GHC compiles Haskell to either native code or C. It implements
numerous experimental language extensions to Haskell, including
concurrency, a foreign language interface, several type-system
extensions, exceptions, and so on. GHC comes with a generational
garbage collector, a space and time profiler, and a comprehensive
set of libraries.

@
text
@@
