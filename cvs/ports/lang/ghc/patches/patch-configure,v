head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.8
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.6
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.12.0.6
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_4_1:1.8.0.10
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.8
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.6
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.4
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.2
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	avsm_2003-May-29:1.1.1.1
	avsm:1.1.1;
locks; strict;
comment	@# @;


1.16
date	2015.12.20.11.04.27;	author kili;	state Exp;
branches;
next	1.15;
commitid	dTjHNUY1axsWM78C;

1.15
date	2015.09.19.07.42.56;	author kili;	state Exp;
branches;
next	1.14;
commitid	wrrXExsbhXWvHmhw;

1.14
date	2015.01.01.19.25.36;	author kili;	state Exp;
branches;
next	1.13;
commitid	xydU2twmNfvEHbae;

1.13
date	2014.11.22.20.23.23;	author kili;	state Exp;
branches;
next	1.12;
commitid	f8HFLM9LK5anF9Xl;

1.12
date	2013.07.18.21.43.23;	author kili;	state Exp;
branches;
next	1.11;

1.11
date	2012.09.02.19.53.46;	author kili;	state Exp;
branches;
next	1.10;

1.10
date	2012.08.12.11.31.33;	author pascal;	state Exp;
branches;
next	1.9;

1.9
date	2007.07.21.17.14.57;	author kili;	state dead;
branches;
next	1.8;

1.8
date	2005.02.19.03.42.11;	author dons;	state Exp;
branches;
next	1.7;

1.7
date	2005.02.14.01.26.56;	author dons;	state dead;
branches;
next	1.6;

1.6
date	2004.04.26.23.48.50;	author dons;	state Exp;
branches;
next	1.5;

1.5
date	2004.01.08.20.33.23;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.12.13.25.18;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.01.14.03.40;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.20.21.57.11;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.29.16.38.31;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.29.16.38.31;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Update to ghc-7.10.3.
@
text
@$OpenBSD: patch-configure,v 1.15 2015/09/19 07:42:56 kili Exp $
--- configure.orig	Tue Dec  8 19:50:55 2015
+++ configure	Fri Dec 11 20:03:40 2015
@@@@ -4150,7 +4150,7 @@@@ $as_echo "$as_me: Building in-tree ghc-pwd" >&6;}
                 rm -rf utils/ghc-pwd/dist-boot
     mkdir  utils/ghc-pwd/dist-boot
                 GHC_LDFLAGS=`perl -e 'foreach (@@ARGV) { print "-optl$_ " }' -- $LDFLAGS`
-        if ! "$WithGhc" $GHC_LDFLAGS -v0 -no-user-$GHC_PACKAGE_DB_FLAG -hidir utils/ghc-pwd/dist-boot -odir utils/ghc-pwd/dist-boot -stubdir utils/ghc-pwd/dist-boot --make utils/ghc-pwd/Main.hs -o utils/ghc-pwd/dist-boot/ghc-pwd
+        if ! "$WithGhc" $GHC_LDFLAGS -optl -nopie -v0 -no-user-$GHC_PACKAGE_DB_FLAG -hidir utils/ghc-pwd/dist-boot -odir utils/ghc-pwd/dist-boot -stubdir utils/ghc-pwd/dist-boot --make utils/ghc-pwd/Main.hs -o utils/ghc-pwd/dist-boot/ghc-pwd
     then
         as_fn_error $? "Building ghc-pwd failed" "$LINENO" 5
     fi
@@@@ -7901,7 +7901,7 @@@@ $as_echo_n "checking for extra options to pass gcc whe
 if ${fp_cv_gcc_extra_opts+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  fp_cv_gcc_extra_opts=
+  fp_cv_gcc_extra_opts=-fno-pie
  fp_version1=$fp_cv_gcc_version; fp_version2=3.4
 fp_save_IFS=$IFS; IFS='.'
 while test x"$fp_version1" != x || test x"$fp_version2" != x
@


1.15
log
@Update to ghc-7.10.2.

Updates to all hs-* ports related to meta/haskell-platform will
follow soon. Other hs-* ports will be fixed during the next days.
@
text
@d1 4
a4 4
$OpenBSD: patch-configure,v 1.14 2015/01/01 19:25:36 kili Exp $
--- configure.orig	Tue Jul 21 22:50:59 2015
+++ configure	Sun Aug  9 17:40:58 2015
@@@@ -4138,7 +4138,7 @@@@ $as_echo "$as_me: Building in-tree ghc-pwd" >&6;}
d13 1
a13 1
@@@@ -7700,7 +7700,7 @@@@ $as_echo_n "checking for extra options to pass gcc whe
@


1.14
log
@Bugfix udpate to ghc-7.8.4.
Also, use a new(er) bootstrapper; note that we have to use 7.8.3
for this, because if the built ghc and the bootstrapper have identical
versions, things will fail badly. May be it's not the ghc but the
cabal version which is problematic, but at the moment, I really
don'y call about *this* problem.
Still marked as broken. I hope to send promised diffs and new ports
for discussion tomorrow and then enable ghc and haskell-platform
on monday.
@
text
@d1 4
a4 4
$OpenBSD: patch-configure,v 1.13 2014/11/22 20:23:23 kili Exp $
--- configure.orig	Tue Dec 23 14:50:12 2014
+++ configure	Mon Dec 29 10:24:49 2014
@@@@ -4124,7 +4124,7 @@@@ $as_echo "$as_me: Building in-tree ghc-pwd" >&6;}
d7 1
a7 1
                 GHC_LDFLAGS=`echo $LDFLAGS | sed 's/\(^\| \)\([^ ]\)/\1-optl\2/g'`
d13 1
a13 1
@@@@ -7329,7 +7329,7 @@@@ $as_echo_n "checking for extra options to pass gcc whe
@


1.13
log
@Update to ghc-7.8.3, but mark as broken until all other
hs ports are done.

Please note that it still doesn't use shared libraries, so
still no ghci (and a lot of hs-ports not buildable) on i386.
@
text
@d1 4
a4 4
$OpenBSD: patch-configure,v 1.12 2013/07/18 21:43:23 kili Exp $
--- configure.orig	Thu Jul 10 07:04:54 2014
+++ configure	Sun Nov  2 22:01:38 2014
@@@@ -4076,7 +4076,7 @@@@ $as_echo "$as_me: Building in-tree ghc-pwd" >&6;}
d13 1
a13 1
@@@@ -7281,7 +7281,7 @@@@ $as_echo_n "checking for extra options to pass gcc whe
@


1.12
log
@Update to ghc-7.6.3, revert my last two obsolete changes and
mark it as broken until all depending ports have been updated.
@
text
@d1 4
a4 5
$OpenBSD: patch-configure,v 1.11 2012/09/02 19:53:46 kili Exp $
--- configure.orig	Fri Apr 19 00:47:00 2013
+++ configure	Sun Jul  7 16:02:19 2013
@@@@ -3863,7 +3863,7 @@@@ fi
 $as_echo "$as_me: Building in-tree ghc-pwd" >&6;}
d7 3
a9 2
-    if ! "$WithGhc" -v0 -no-user-$GHC_PACKAGE_DB_FLAG -hidir utils/ghc-pwd/dist-boot -odir utils/ghc-pwd/dist-boot -stubdir utils/ghc-pwd/dist-boot --make utils/ghc-pwd/Main.hs -o utils/ghc-pwd/dist-boot/ghc-pwd
+    if ! "$WithGhc" -optl -nopie -v0 -no-user-$GHC_PACKAGE_DB_FLAG -hidir utils/ghc-pwd/dist-boot -odir utils/ghc-pwd/dist-boot -stubdir utils/ghc-pwd/dist-boot --make utils/ghc-pwd/Main.hs -o utils/ghc-pwd/dist-boot/ghc-pwd
d13 2
a14 2
@@@@ -6185,7 +6185,7 @@@@ $as_echo_n "checking for extra options to pass gcc whe
 if test "${fp_cv_gcc_extra_opts+set}" = set; then :
@


1.11
log
@Update to ghc-7.4.2, but keep it marked as broken (and not only for amd64).

Most of the -nopie changes are from pascal@@ (thanks); I only had to
merge them for ghc-7.4 and tweak configure and mk/config.mk.in.
@
text
@d1 4
a4 4
$OpenBSD: patch-configure,v 1.10 2012/08/12 11:31:33 pascal Exp $
--- configure.orig	Wed Jun  6 19:11:19 2012
+++ configure	Sun Sep  2 17:59:39 2012
@@@@ -3759,7 +3759,7 @@@@ fi
d8 2
a9 2
-    if ! "$WithGhc" -v0 -no-user-package-conf -hidir utils/ghc-pwd/dist-boot -odir utils/ghc-pwd/dist-boot -stubdir utils/ghc-pwd/dist-boot --make utils/ghc-pwd/Main.hs -o utils/ghc-pwd/dist-boot/ghc-pwd
+    if ! "$WithGhc" -optl -nopie -v0 -no-user-package-conf -hidir utils/ghc-pwd/dist-boot -odir utils/ghc-pwd/dist-boot -stubdir utils/ghc-pwd/dist-boot --make utils/ghc-pwd/Main.hs -o utils/ghc-pwd/dist-boot/ghc-pwd
d11 1
a11 1
         as_fn_error "Building ghc-pwd failed" "$LINENO" 5
d13 1
a13 1
@@@@ -5582,7 +5582,7 @@@@ $as_echo_n "checking for extra options to pass gcc whe
@


1.10
log
@For now, disable PIE in GHC.  This will be revisited later on by kili@@ in the
next update.  And again, calling stuff "PIC" is a bad idea ...

ok kili@@
@
text
@d1 4
a4 4
$OpenBSD$
--- configure.orig	Sat Aug 11 23:34:26 2012
+++ configure	Sat Aug 11 23:34:46 2012
@@@@ -3779,7 +3779,7 @@@@ fi
d9 1
a9 1
+    if ! "$WithGhc" -optl -fno-pie -v0 -no-user-package-conf -hidir utils/ghc-pwd/dist-boot -odir utils/ghc-pwd/dist-boot -stubdir utils/ghc-pwd/dist-boot --make utils/ghc-pwd/Main.hs -o utils/ghc-pwd/dist-boot/ghc-pwd
d13 9
@


1.9
log
@
Update to 6.6.1. With helpful hints from Don Stewart and espie@@.
Thanks to all the testers and to steven@@, who was so kind to
build the HC files for bootstrapping on amd64.
@
text
@d1 12
a12 19
$OpenBSD: patch-configure,v 1.8 2005/02/19 03:42:11 dons Exp $
--- configure.orig	Tue Oct 19 12:40:17 2004
+++ configure	Thu Feb 17 18:13:34 2005
@@@@ -1506,6 +1506,15 @@@@ alpha*-unknown-freebsd*)
         HostVendor_CPP='unknown'
         HostOS_CPP='freebsd'
         ;;
+amd64*-unknown-openbsd*)
+	HostPlatform=x86_64-unknown-openbsd
+	TargetPlatform=x86_64-unknown-openbsd
+	BuildPlatform=x86_64-unknown-openbsd
+        HostPlatform_CPP='x86_64_unknown_openbsd'
+        HostArch_CPP='x86_64'
+        HostVendor_CPP='unknown'
+        HostOS_CPP='openbsd'
+        ;;
 arm*-linux*)
         HostPlatform=arm-unknown-linux # hack again
         TargetPlatform=arm-unknown-linux
@


1.8
log
@Port ghc-6.2.2 to amd64.

ok pvalchev@@
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.6 2004/04/26 23:48:50 dons Exp $
@


1.7
log
@Update ghc to 6.2.2.
Adds support for ghci. More stable foreign function interface.

Just i386 at the moment.

ok sturm@@ pvalchev@@
@
text
@d2 3
a4 3
--- configure.orig	Sun Apr 18 05:37:53 2004
+++ configure	Sun Apr 18 05:38:36 2004
@@@@ -1506,6 +1506,15 @@@@
@


1.6
log
@Update GHC to 6.2.1, and port to amd64

ok avsm@@ pvalchev@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@Add support for sparc ghc.
Hard work by Donald Stewart <dons at cse.unsw.edu.au>
@
text
@d1 6
a6 5
--- configure.orig	Mon Jul 28 13:01:34 2003
+++ configure	Sat Sep 20 18:53:45 2003
@@@@ -1708,6 +1708,15 @@@@
         HostVendor_CPP='sun'
         HostOS_CPP='solaris2'
d8 6
a13 6
+sparc-*-openbsd*)
+        HostPlatform=sparc-unknown-openbsd
+        TargetPlatform=sparc-unknown-openbsd
+        BuildPlatform=sparc-unknown-openbsd
+        HostPlatform_CPP='sparc_unknown_openbsd'
+        HostArch_CPP='sparc'
d17 3
a19 11
 *)
         echo "Unrecognised platform: $HostPlatform"
         exit 1
@@@@ -23646,6 +23656,7 @@@@
 else
 
 case $HostPlatform in
+*openbsd) fptools_cv_lead_uscore='no';;
 alpha-dec-osf*) fptools_cv_lead_uscore='no';;
 *cygwin32) fptools_cv_lead_uscore='yes';;
 *mingw32) fptools_cv_lead_uscore='yes';;
@


1.4
log
@Allow ghc to work with external libgmp instead of building its own; this
will help with the sparc port.

From Don Stewart <dons@@cse.unsw.edu.au>
@
text
@d1 2
a2 6
$OpenBSD: patch-configure,v 1.3 2003/08/01 14:03:40 avsm Exp $
Falsely detects leading underscore. Plan for sparc.
Help configure find libgmp properly. i.e. fix test for gmp

--- configure.orig	Tue Jul 29 05:01:34 2003
+++ configure	Thu Aug  7 11:25:32 2003
d7 5
a11 5
+sparc-*-openbsd*) #hack
+        HostPlatform=sparc-sun-openbsd #hack
+        TargetPlatform=sparc-sun-openbsd #hack
+        BuildPlatform=sparc-sun-openbsd #hack
+        HostPlatform_CPP='sparc_sun_openbsd'
d13 1
a13 1
+        HostVendor_CPP='sun'
a18 17
@@@@ -19591,12 +19600,13 @@@@
 #endif
 /* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
-char __gmpz_fdiv_qr ();
+#include <gmp.h>
+
 int
 main ()
 {
-__gmpz_fdiv_qr ();
-  ;
+  mpz_ptr a, b, p, q;
+  mpz_fdiv_qr(p,q,a,b);
   return 0;
 }
 _ACEOF
@


1.3
log
@RCS tags, from Xavier Santolaria <xavier@@santolaria.net>
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
d5 3
a7 3
--- configure.orig	Fri Jul  4 10:43:52 2003
+++ configure	Fri Jul  4 10:46:27 2003
@@@@ -1721,6 +1721,15 @@@@
d23 18
a40 1
@@@@ -24084,6 +24093,7 @@@@
@


1.2
log
@Update from maintainer Don Stewart (dons at cse.unsw.edu.au):

- Updated to ghc-6.0
- Halved (roughly) the build time; by using the 6.0 in-tree build
we only have to build the 6.0 libraries once. Also we only build the
necessary parts of the bootstrap compiler.
- The ugly lndir/stage1 build is also gone.
- The full ghc regression suite is now part of the port!
"make regress" will run around 3000 regress tests.
- The regression tests revealed that the C foreign function
- The Makefile is simplified, using more default targets
- The documentation is updated to 6.0
- I put some of the 5.04.3 patches into ghc cvs, so they are
now obsolete.

Unfortunately, this lets mozilla back in the race for longest
package building time...
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 5
a5 3
--- configure.orig	Tue Mar 11 06:40:06 2003
+++ configure	Thu May  1 09:59:57 2003
@@@@ -969,6 +969,15 @@@@ sparc-sun-solaris2*)
d10 3
a12 3
+    HostPlatform=sparc-sun-openbsd #hack
+    TargetPlatform=sparc-sun-openbsd #hack
+    BuildPlatform=sparc-sun-openbsd #hack
d21 2
a22 11
@@@@ -2051,7 +2060,7 @@@@ else
   echo "$ac_t""no" 1>&6
 fi
 
-    $WhatCmd $YACC > conftest.out
+    $WhatCmd `which $YACC` > conftest.out
     if egrep 'y1\.c 1\..*SMI' conftest.out >/dev/null 2>&1; then
         echo "I don't trust your $YaccCmd; it looks like an old Sun yacc"
         if test -f /usr/lang/yacc; then
@@@@ -11719,8 +11728,6 @@@@ cross_compiling=$ac_cv_prog_cc_cross
 
a23 81
 
-dl HaskellSupport.framework
-
 if test $HaveFrameworkHaskellSupport = YES; then
     HaveLibDL = NO
     HaveRtldNext=NO
@@@@ -11901,6 +11908,71 @@@@ else
       
 fi
 rm -f conftest*
+
+echo $ac_n "checking for RTLD_GLOBAL from dlfcn.h""... $ac_c" 1>&6
+echo "configure:11901: checking for RTLD_GLOBAL from dlfcn.h" >&5
+cat > conftest.$ac_ext <<EOF
+#line 11903 "configure"
+#include "confdefs.h"
+
+ #include <dlfcn.h>
+ #ifdef RTLD_GLOBAL
+        yes
+ #endif
+
+EOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  egrep "yes" >/dev/null 2>&1; then
+  rm -rf conftest*
+
+  echo "$ac_t""yes" 1>&6
+  cat >> confdefs.h <<\EOF
+#define HAVE_RTLDGLOBAL 1
+EOF
+
+  HaveRtldGlobal=YES
+
+else
+  rm -rf conftest*
+
+  echo "$ac_t""no" 1>&6
+  HaveRtldGlobal=NO
+
+fi
+rm -f conftest*
+
+echo $ac_n "checking for RTLD_NOW from dlfcn.h""... $ac_c" 1>&6
+echo "configure:11936: checking for RTLD_NOW from dlfcn.h" >&5
+cat > conftest.$ac_ext <<EOF
+#line 11938 "configure"
+#include "confdefs.h"
+
+ #include <dlfcn.h>
+ #ifdef RTLD_NOW
+        yes
+ #endif
+
+EOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  egrep "yes" >/dev/null 2>&1; then
+  rm -rf conftest*
+
+  echo "$ac_t""yes" 1>&6
+  cat >> confdefs.h <<\EOF
+#define HAVE_RTLDNOW 1
+EOF
+
+  HaveRtldNow=YES
+
+else
+  rm -rf conftest*
+
+  echo "$ac_t""no" 1>&6
+  HaveRtldNow=NO
+
+fi
+rm -f conftest*
+
     
     
 fi
@@@@ -12578,6 +12650,7 @@@@ if eval "test \"`echo '$''{'fptools_cv_l
 else
   
@


1.1.1.1
log
@initial import of ghc-5.04.3, which takes the "longest compilation
time" award from mozilla and gcc3

From Don Stewart <dons@@cse.unsw.edu.au> with tweaks from me

(i386 only for the moment)
--
The Glasgow Haskell Compiler is a robust, fully-featured, optimising
compiler for the functional programming language Haskell 98.

GHC compiles Haskell to either native code or C. It implements
numerous experimental language extensions to Haskell, including
concurrency, a foreign language interface, several type-system
extensions, exceptions, and so on. GHC comes with a generational
garbage collector, a space and time profiler, and a comprehensive
set of libraries.

@
text
@@
