head	1.148;
access;
symbols
	OPENBSD_6_1:1.144.0.2
	OPENBSD_6_1_BASE:1.144
	OPENBSD_6_0:1.138.0.2
	OPENBSD_6_0_BASE:1.138
	OPENBSD_5_9:1.133.0.2
	OPENBSD_5_9_BASE:1.133
	OPENBSD_5_8:1.118.0.4
	OPENBSD_5_8_BASE:1.118
	OPENBSD_5_7:1.112.0.2
	OPENBSD_5_7_BASE:1.112
	OPENBSD_5_6:1.107.0.4
	OPENBSD_5_6_BASE:1.107
	OPENBSD_5_5:1.107.0.2
	OPENBSD_5_5_BASE:1.107
	OPENBSD_5_4:1.102.0.2
	OPENBSD_5_4_BASE:1.102
	OPENBSD_5_3:1.89.0.2
	OPENBSD_5_3_BASE:1.89
	OPENBSD_5_2:1.70.0.2
	OPENBSD_5_2_BASE:1.70
	OPENBSD_5_1_BASE:1.63
	OPENBSD_5_1:1.63.0.2
	OPENBSD_5_0:1.57.0.2
	OPENBSD_5_0_BASE:1.57
	OPENBSD_4_9:1.51.0.2
	OPENBSD_4_9_BASE:1.51
	OPENBSD_4_8:1.39.0.2
	OPENBSD_4_8_BASE:1.39
	OPENBSD_4_7:1.29.0.6
	OPENBSD_4_7_BASE:1.29
	OPENBSD_4_6:1.29.0.4
	OPENBSD_4_6_BASE:1.29
	OPENBSD_4_5:1.29.0.2
	OPENBSD_4_5_BASE:1.29
	OPENBSD_4_4:1.26.0.2
	OPENBSD_4_4_BASE:1.26
	OPENBSD_4_3:1.25.0.2
	OPENBSD_4_3_BASE:1.25
	OPENBSD_4_2:1.24.0.2
	OPENBSD_4_2_BASE:1.24
	OPENBSD_4_1:1.22.0.2
	OPENBSD_4_1_BASE:1.22
	OPENBSD_4_0:1.21.0.6
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.21.0.4
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.21.0.2
	OPENBSD_3_8_BASE:1.21
	OPENBSD_3_7:1.20.0.2
	OPENBSD_3_7_BASE:1.20
	OPENBSD_3_6:1.17.0.2
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.14.0.2
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	avsm_2003-May-29:1.1.1.1
	avsm:1.1.1;
locks; strict;
comment	@# @;


1.148
date	2017.05.01.19.31.08;	author kili;	state Exp;
branches;
next	1.147;
commitid	mS6itdyZzYEuJgk7;

1.147
date	2017.04.30.21.33.26;	author kili;	state Exp;
branches;
next	1.146;
commitid	4WZJoSxtfdN67kL9;

1.146
date	2017.04.18.18.38.11;	author kili;	state Exp;
branches;
next	1.145;
commitid	jlrDN7GlKlutKYk9;

1.145
date	2017.04.17.17.21.49;	author espie;	state Exp;
branches;
next	1.144;
commitid	GnD7MpJjYpmpZnMU;

1.144
date	2017.02.28.00.07.10;	author kili;	state Exp;
branches;
next	1.143;
commitid	MGiErlwlsro4VrZr;

1.143
date	2016.11.01.18.14.05;	author kili;	state Exp;
branches;
next	1.142;
commitid	BrtJUvQ3A9xo4UYG;

1.142
date	2016.09.13.18.52.05;	author naddy;	state Exp;
branches;
next	1.141;
commitid	4Y8Q5bKBOfIWFq5Y;

1.141
date	2016.08.20.19.39.37;	author kili;	state Exp;
branches;
next	1.140;
commitid	pLWbB2YbN4uYIX6K;

1.140
date	2016.08.13.18.54.58;	author kili;	state Exp;
branches;
next	1.139;
commitid	QJ2hPNbC0zut8ZKf;

1.139
date	2016.08.10.07.08.28;	author kili;	state Exp;
branches;
next	1.138;
commitid	URlMGJccmb0UoECE;

1.138
date	2016.04.05.08.15.50;	author kili;	state Exp;
branches;
next	1.137;
commitid	s1pEpJBCDDjWIbj4;

1.137
date	2016.03.25.10.42.17;	author kili;	state Exp;
branches;
next	1.136;
commitid	pqXaiWoFoReClswL;

1.136
date	2016.03.24.20.32.57;	author kili;	state Exp;
branches;
next	1.135;
commitid	QPGCDod0Hli8v10V;

1.135
date	2016.03.15.19.41.18;	author kili;	state Exp;
branches;
next	1.134;
commitid	4B7GXr5MT49AMKGZ;

1.134
date	2016.02.26.07.50.52;	author kili;	state Exp;
branches;
next	1.133;
commitid	wi883l29nnauIRtG;

1.133
date	2016.01.20.16.08.29;	author kili;	state Exp;
branches;
next	1.132;
commitid	dVemMaWAPoSnSCqs;

1.132
date	2016.01.20.16.02.06;	author kili;	state Exp;
branches;
next	1.131;
commitid	YpqCy16gFI4KcWnR;

1.131
date	2015.12.28.19.18.52;	author kili;	state Exp;
branches;
next	1.130;
commitid	lc64yfSHNeYcApcv;

1.130
date	2015.12.20.11.04.27;	author kili;	state Exp;
branches;
next	1.129;
commitid	dTjHNUY1axsWM78C;

1.129
date	2015.12.10.19.50.01;	author kili;	state Exp;
branches;
next	1.128;
commitid	QiRmvlKj7S0qBRkF;

1.128
date	2015.11.30.22.22.24;	author kili;	state Exp;
branches;
next	1.127;
commitid	m0O1WitpD8BaRVmC;

1.127
date	2015.11.13.12.27.04;	author naddy;	state Exp;
branches;
next	1.126;
commitid	uIePazIv1lxdlbFh;

1.126
date	2015.11.02.21.31.26;	author kili;	state Exp;
branches;
next	1.125;
commitid	MozWB5qppCQKbwn5;

1.125
date	2015.10.26.21.43.01;	author kili;	state Exp;
branches;
next	1.124;
commitid	cR3ntamvTOO4J1P4;

1.124
date	2015.09.27.20.07.47;	author kili;	state Exp;
branches;
next	1.123;
commitid	W1skTdS27618NMyC;

1.123
date	2015.09.19.07.42.56;	author kili;	state Exp;
branches;
next	1.122;
commitid	wrrXExsbhXWvHmhw;

1.122
date	2015.09.14.18.39.06;	author kili;	state Exp;
branches;
next	1.121;
commitid	rz4BdHV507xF1dtt;

1.121
date	2015.09.11.17.44.12;	author kili;	state Exp;
branches;
next	1.120;
commitid	BSBaIzprxT4IQsqB;

1.120
date	2015.08.29.23.00.43;	author kili;	state Exp;
branches;
next	1.119;
commitid	Gslsd0x5HY9VYun1;

1.119
date	2015.08.27.09.33.25;	author juanfra;	state Exp;
branches;
next	1.118;
commitid	dq5oetOegBN773Xx;

1.118
date	2015.06.25.11.40.08;	author naddy;	state Exp;
branches;
next	1.117;
commitid	4rLzOQWJP7MPuRGW;

1.117
date	2015.06.23.20.15.18;	author kili;	state Exp;
branches;
next	1.116;
commitid	RV2eyGfXDcRlIu0D;

1.116
date	2015.06.02.21.17.43;	author kili;	state Exp;
branches;
next	1.115;
commitid	FbKpLvHldr6qfjun;

1.115
date	2015.05.11.22.54.57;	author kili;	state Exp;
branches;
next	1.114;
commitid	FXfhnYRgA5i8eFMI;

1.114
date	2015.04.09.21.19.50;	author kili;	state Exp;
branches;
next	1.113;
commitid	fr4xZ9k6DPLTXco4;

1.113
date	2015.04.08.21.05.22;	author kili;	state Exp;
branches;
next	1.112;
commitid	Jng7asfU8Va6TTM2;

1.112
date	2015.01.07.20.45.28;	author kili;	state Exp;
branches;
next	1.111;
commitid	a5yoUKlnPEGoITpB;

1.111
date	2015.01.01.19.25.36;	author kili;	state Exp;
branches;
next	1.110;
commitid	xydU2twmNfvEHbae;

1.110
date	2014.11.22.20.23.22;	author kili;	state Exp;
branches;
next	1.109;
commitid	f8HFLM9LK5anF9Xl;

1.109
date	2014.10.19.19.08.48;	author kili;	state Exp;
branches;
next	1.108;
commitid	YTcC4T20Qm46lAyz;

1.108
date	2014.09.16.10.07.00;	author dcoppa;	state Exp;
branches;
next	1.107;
commitid	XNSql7p5uZl6i7b3;

1.107
date	2013.12.12.22.13.37;	author kili;	state Exp;
branches;
next	1.106;

1.106
date	2013.11.25.14.16.23;	author sthen;	state Exp;
branches;
next	1.105;

1.105
date	2013.11.11.20.46.30;	author kili;	state Exp;
branches;
next	1.104;

1.104
date	2013.08.16.13.40.49;	author kili;	state Exp;
branches;
next	1.103;

1.103
date	2013.08.14.20.20.33;	author kili;	state Exp;
branches;
next	1.102;

1.102
date	2013.07.19.07.12.55;	author kili;	state Exp;
branches;
next	1.101;

1.101
date	2013.07.18.21.43.23;	author kili;	state Exp;
branches;
next	1.100;

1.100
date	2013.07.07.20.15.34;	author kili;	state Exp;
branches;
next	1.99;

1.99
date	2013.07.07.13.35.27;	author kili;	state Exp;
branches;
next	1.98;

1.98
date	2013.07.01.21.42.51;	author kili;	state Exp;
branches;
next	1.97;

1.97
date	2013.06.04.22.02.33;	author kili;	state Exp;
branches;
next	1.96;

1.96
date	2013.05.13.21.01.37;	author kili;	state Exp;
branches;
next	1.95;

1.95
date	2013.05.11.22.13.30;	author kili;	state Exp;
branches;
next	1.94;

1.94
date	2013.05.09.05.54.31;	author kili;	state Exp;
branches;
next	1.93;

1.93
date	2013.05.08.15.31.47;	author kili;	state Exp;
branches;
next	1.92;

1.92
date	2013.05.08.13.38.09;	author kili;	state Exp;
branches;
next	1.91;

1.91
date	2013.05.03.09.41.29;	author kili;	state Exp;
branches;
next	1.90;

1.90
date	2013.03.11.11.20.27;	author espie;	state Exp;
branches;
next	1.89;

1.89
date	2013.02.06.18.17.12;	author kili;	state Exp;
branches;
next	1.88;

1.88
date	2013.01.20.18.07.58;	author kili;	state Exp;
branches;
next	1.87;

1.87
date	2013.01.20.17.51.14;	author kili;	state Exp;
branches;
next	1.86;

1.86
date	2012.12.04.06.30.20;	author kili;	state Exp;
branches;
next	1.85;

1.85
date	2012.11.05.20.20.07;	author kili;	state Exp;
branches;
next	1.84;

1.84
date	2012.10.11.11.05.02;	author kili;	state Exp;
branches;
next	1.83;

1.83
date	2012.10.11.07.51.10;	author dcoppa;	state Exp;
branches;
next	1.82;

1.82
date	2012.10.05.19.28.12;	author kili;	state Exp;
branches;
next	1.81;

1.81
date	2012.09.27.17.26.05;	author ajacoutot;	state Exp;
branches;
next	1.80;

1.80
date	2012.09.25.19.26.36;	author kili;	state Exp;
branches;
next	1.79;

1.79
date	2012.09.23.20.26.57;	author kili;	state Exp;
branches;
next	1.78;

1.78
date	2012.09.20.16.38.16;	author kili;	state Exp;
branches;
next	1.77;

1.77
date	2012.09.18.18.24.26;	author kili;	state Exp;
branches;
next	1.76;

1.76
date	2012.09.16.08.33.04;	author kili;	state Exp;
branches;
next	1.75;

1.75
date	2012.09.02.23.01.29;	author kili;	state Exp;
branches;
next	1.74;

1.74
date	2012.09.02.22.21.51;	author kili;	state Exp;
branches;
next	1.73;

1.73
date	2012.09.02.19.53.46;	author kili;	state Exp;
branches;
next	1.72;

1.72
date	2012.08.31.18.10.14;	author pascal;	state Exp;
branches;
next	1.71;

1.71
date	2012.08.12.11.31.33;	author pascal;	state Exp;
branches;
next	1.70;

1.70
date	2012.06.29.05.52.01;	author kili;	state Exp;
branches;
next	1.69;

1.69
date	2012.06.26.18.17.18;	author kili;	state Exp;
branches;
next	1.68;

1.68
date	2012.06.12.20.11.22;	author kili;	state Exp;
branches;
next	1.67;

1.67
date	2012.05.02.22.58.31;	author kili;	state Exp;
branches;
next	1.66;

1.66
date	2012.04.25.22.50.37;	author kili;	state Exp;
branches;
next	1.65;

1.65
date	2012.03.23.20.17.06;	author kili;	state Exp;
branches;
next	1.64;

1.64
date	2012.02.19.20.38.53;	author kili;	state Exp;
branches;
next	1.63;

1.63
date	2012.01.12.20.13.17;	author kili;	state Exp;
branches;
next	1.62;

1.62
date	2011.12.27.20.53.01;	author kili;	state Exp;
branches;
next	1.61;

1.61
date	2011.10.26.19.34.08;	author kili;	state Exp;
branches;
next	1.60;

1.60
date	2011.10.25.19.23.09;	author kili;	state Exp;
branches;
next	1.59;

1.59
date	2011.09.16.21.17.41;	author kili;	state Exp;
branches;
next	1.58;

1.58
date	2011.08.24.18.31.39;	author kili;	state Exp;
branches;
next	1.57;

1.57
date	2011.07.23.16.38.54;	author kili;	state Exp;
branches;
next	1.56;

1.56
date	2011.06.30.21.26.15;	author kili;	state Exp;
branches;
next	1.55;

1.55
date	2011.04.25.22.06.43;	author kili;	state Exp;
branches;
next	1.54;

1.54
date	2011.04.23.20.16.38;	author kili;	state Exp;
branches;
next	1.53;

1.53
date	2011.04.23.12.52.36;	author kili;	state Exp;
branches;
next	1.52;

1.52
date	2011.04.11.14.30.32;	author kili;	state Exp;
branches;
next	1.51;

1.51
date	2010.11.27.22.34.47;	author kili;	state Exp;
branches;
next	1.50;

1.50
date	2010.11.21.19.43.31;	author kili;	state Exp;
branches;
next	1.49;

1.49
date	2010.11.17.08.05.17;	author espie;	state Exp;
branches;
next	1.48;

1.48
date	2010.11.06.19.11.43;	author kili;	state Exp;
branches;
next	1.47;

1.47
date	2010.11.06.10.18.38;	author espie;	state Exp;
branches;
next	1.46;

1.46
date	2010.11.05.21.23.46;	author kili;	state Exp;
branches;
next	1.45;

1.45
date	2010.11.03.21.32.08;	author kili;	state Exp;
branches;
next	1.44;

1.44
date	2010.10.18.19.20.41;	author espie;	state Exp;
branches;
next	1.43;

1.43
date	2010.10.04.09.37.25;	author kili;	state Exp;
branches;
next	1.42;

1.42
date	2010.09.10.18.10.00;	author kili;	state Exp;
branches;
next	1.41;

1.41
date	2010.09.05.10.54.02;	author kili;	state Exp;
branches;
next	1.40;

1.40
date	2010.08.30.21.56.33;	author sthen;	state Exp;
branches;
next	1.39;

1.39
date	2010.08.02.21.15.23;	author kili;	state Exp;
branches;
next	1.38;

1.38
date	2010.06.28.21.27.36;	author kili;	state Exp;
branches;
next	1.37;

1.37
date	2010.06.15.15.34.03;	author kili;	state Exp;
branches;
next	1.36;

1.36
date	2010.06.09.10.06.29;	author sthen;	state Exp;
branches;
next	1.35;

1.35
date	2010.06.06.09.54.20;	author kili;	state Exp;
branches;
next	1.34;

1.34
date	2010.05.19.15.04.27;	author kili;	state Exp;
branches;
next	1.33;

1.33
date	2010.05.16.13.51.26;	author kili;	state Exp;
branches;
next	1.32;

1.32
date	2010.05.06.20.00.19;	author kili;	state Exp;
branches;
next	1.31;

1.31
date	2010.04.25.13.40.30;	author kili;	state Exp;
branches;
next	1.30;

1.30
date	2010.04.22.21.49.37;	author kili;	state Exp;
branches;
next	1.29;

1.29
date	2008.10.02.19.50.52;	author kili;	state Exp;
branches;
next	1.28;

1.28
date	2008.09.23.13.27.11;	author bernd;	state Exp;
branches;
next	1.27;

1.27
date	2008.09.03.22.40.27;	author kili;	state Exp;
branches;
next	1.26;

1.26
date	2008.07.15.20.08.39;	author naddy;	state Exp;
branches;
next	1.25;

1.25
date	2007.09.16.20.05.12;	author kili;	state Exp;
branches;
next	1.24;

1.24
date	2007.07.22.22.37.25;	author kili;	state Exp;
branches;
next	1.23;

1.23
date	2007.07.21.17.14.57;	author kili;	state Exp;
branches;
next	1.22;

1.22
date	2006.11.26.11.38.07;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2005.05.22.07.10.33;	author alek;	state Exp;
branches;
next	1.20;

1.20
date	2005.02.21.19.30.34;	author alek;	state Exp;
branches;
next	1.19;

1.19
date	2005.02.19.03.42.11;	author dons;	state Exp;
branches;
next	1.18;

1.18
date	2005.02.14.01.26.56;	author dons;	state Exp;
branches;
next	1.17;

1.17
date	2004.05.20.00.08.22;	author dons;	state Exp;
branches;
next	1.16;

1.16
date	2004.05.07.11.11.02;	author dons;	state Exp;
branches;
next	1.15;

1.15
date	2004.04.26.23.48.50;	author dons;	state Exp;
branches;
next	1.14;

1.14
date	2004.02.04.07.39.18;	author sturm;	state Exp;
branches;
next	1.13;

1.13
date	2004.01.08.20.33.23;	author avsm;	state Exp;
branches;
next	1.12;

1.12
date	2003.09.01.22.46.28;	author avsm;	state Exp;
branches;
next	1.11;

1.11
date	2003.09.01.20.32.14;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2003.08.21.19.51.23;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2003.08.14.21.38.36;	author avsm;	state Exp;
branches;
next	1.8;

1.8
date	2003.08.14.01.01.16;	author avsm;	state Exp;
branches;
next	1.7;

1.7
date	2003.08.12.13.25.18;	author avsm;	state Exp;
branches;
next	1.6;

1.6
date	2003.08.03.18.07.27;	author avsm;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.01.14.03.39;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.23.18.26.35;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.20.21.57.10;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.30.03.45.34;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.29.16.38.31;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.29.16.38.31;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.148
log
@Still too much noise for espie@@, so add -Wno-expansion-to-defined.
@
text
@# $OpenBSD: Makefile,v 1.147 2017/04/30 21:33:26 kili Exp $

COMMENT =		compiler for the functional language Haskell

# Note: please never ever set DPB_PROPERTIES=parallel (or some other
# magic that enables parallel builds) for this port! Not even if it
# appears to work. (search the upstream bug tracker for terms like
# "non-deterministic", "unresolved symbol", "signature mismatch" etc. to
# find the appropriate bug tickets)

# ghc hardcodes ${WRKDIR}/bin/gcc when the package is compiled with ccache 
NO_CCACHE =		Yes

DISTNAME =		ghc-${MODGHC_VER}
REVISION =		9
CATEGORIES =		lang devel
HOMEPAGE =		https://www.haskell.org/ghc/

# Version of the precompiled binaries
BIN_VER =		7.10.2.20170417

# Pull in lang/ghc to get MODGHC_VER and ONLY_FOR_ARCHS, which is maintained
# in ghc.port.mk. lang/python needed for regression tests.
MODULES =		lang/ghc lang/python

# BSD w/o advertising clause + LGPLv3 (from libgmp).
# Distfile is bundled with other stuff like libffi, mingw
# binaries, with BSD, GPLv2 and Perl artistic license.
PERMIT_PACKAGE_CDROM =		Yes

LIB_DEPENDS =		converters/libiconv

BUILD_DEPENDS =		archivers/gtar \
			textproc/docbook-xsl
RUN_DEPENDS =

# We can't use the wrapper script, because it then gets hardcoded into
# the packaged ghc. So we explicitely use -Wl,-z,wxneeded (see
# CONFIGURE_ENV below)
# USE_WXNEEDED =		Yes

WANTLIB +=		c iconv m ncursesw pthread util

MASTER_SITES =		${HOMEPAGE}dist/${MODGHC_VER}/ \
			${HOMEPAGE}dist/stable/dist/
MASTER_SITES0 =		https://openbsd.dead-parrot.de/distfiles/

DIST_SUBDIR =		ghc

BINDISTFILE =		${BINDISTFILE-${MACHINE_ARCH}}

DISTFILES =		ghc-${MODGHC_VER}b-src.tar.bz2 \
			ghc-${MODGHC_VER}b-testsuite.tar.bz2 \
			${BINDISTFILE}

.for m in amd64 i386
BINDISTFILE-$m =	ghc-${BIN_VER}-$m-unknown-openbsd.tar.bz2:0 \
			ghc-${BIN_VER}-shlibs-$m.tar.gz:0
SUPDISTFILES +=		${BINDISTFILE-$m}
.endfor

# Newest madness from the haskell world: packages are now stored in a
# directory named after the package 'key', which is made out of an
# abbreviation of the package name and the package version or whatever.
# At this point, we can as well factor out package version numbers to
# get smaller PLIST diffs for future updates.

GHC_ITEMS = \
	CABAL			1.22.5.0	3ux67khMI118y6VpwrFnXN \
	ARRAY			0.5.1.0		67iodizgJQIIxYVTp4emlA \
	BASE			4.8.2.0		HQfYBxpPvuw8OunzQu6JGM \
	BINARY			0.7.5.0		3uXFWMoAGBg0xKP9MHKRwi \
	BIN_PACKAGE_DB		0.0.0.0		JPOxOw4FLalDxRNtBqZ2ji \
	BYTESTRING		0.10.6.0	6VWy06pWzJq9evDvK2d4w6 \
	CONTAINERS		0.5.6.2		2C3ZI8RgPO2LBMidXKTvIU \
	DEEPSEQ			1.4.1.1		6vMKxt5sPFR0XsbRWvvq59 \
	DIRECTORY		1.2.2.0		0hFG6ZxK1nk4zsyOqbNHfm \
	FILEPATH		1.4.0.0		Ey7a1in9roBAE8bUFJ5R9m \
	GHC			7.10.3		0AG9TOjDEtx4Ji3wSwHOBe \
	GHC_PRIM		0.4.0.0		8TmvWUcS1U1IKHT0levwg3 \
	HASKELINE		0.7.2.1		GGvi737nHHfG6zm2y7Rimi \
	HOOPL			3.10.0.2	FCWMV1gJiCi02IwN4CnRgk \
	HPC			0.6.0.2		FUjQx3d1H3dEEtLFWv7hFw \
	INTEGER_GMP		1.0.0.0		2aU3IZNMF9a7mQ0OzsZ0dS \
	PRETTY			1.1.2.0		JItwetRppk1H5Uq3xbjDGC \
	PROCESS			1.2.3.0		52AgREEfSrnJLlkGV9YZZJ \
	TEMPLATE_HASKELL	2.10.0.0	GJPvtLC64aA4c1Jl10o2qt \
	TERMINFO		0.4.0.1		6iVf4EBnOgfIaaOCLRs8jl \
	TIME			1.5.0.1		FTheb6LSxyX1UABIbBXRfn \
	TRANSFORMERS		0.4.2.0		GZTjP9K5WFq01xC9BAGQpF \
	UNIX			2.7.1.0		KZL8h98IqDM57kQSPo1mKx \
	XHTML			3000.2.1	0ACfOp3hebWD9jGWE4v4Gh

.for _i _v _s in ${GHC_ITEMS}
${_i}_VER =	${_v}
${_i}_KEY =	${_s}
SUBST_VARS +=	${_i}_VER ${_i}_KEY
.endfor

USE_GMAKE =		Yes
USE_GROFF =		Yes

.if ${MACHINE_ARCH} == "i386"
CFLAGS +=		-fno-pie
.endif

CONFIGURE_STYLE =	gnu
CONFIGURE_ARGS +=	--with-iconv-includes=${LOCALBASE}/include \
			--with-iconv-libraries=${LOCALBASE}/lib \
			--with-gcc="${CC}" \
			--with-clang="${CC}"
# XXX: wxneeded is a hack. Fix rts/Linker.c, mmapForLinker() and
#      loadObj_() instead.
GHC_CC_OPTS =		-fno-pie -nopie
CONFIGURE_ENV +=	CONF_CC_OPTS_STAGE0="${GHC_CC_OPTS}" \
			CONF_CC_OPTS_STAGE1="${GHC_CC_OPTS}" \
			CONF_CC_OPTS_STAGE2="${GHC_CC_OPTS}" \
			CONF_GCC_LINKER_OPTS_STAGE0="${GHC_CC_OPTS}" \
			CONF_GCC_LINKER_OPTS_STAGE1="${GHC_CC_OPTS} -Wl,-z,wxneeded" \
			CONF_GCC_LINKER_OPTS_STAGE2="${GHC_CC_OPTS} -Wl,-z,wxneeded"

# Do not pick up gpatch
CONFIGURE_ENV +=	ac_cv_path_PatchCmd=/usr/bin/patch

# Since ghc-7.10, ghc does not run without HOME defined and pointing to
# a writable directory, which would cause configure to fail (because it
# still builds ghc-pwd). Set HOME to let a 7.10-bootstrapper work.
CONFIGURE_ENV +=	HOME=${PORTHOME}

MAKE_FLAGS +=		StripLibraries=YES \
			INSTALL_BIN_OPTS=-s \
			HSCOLOUR_SRCS=NO \
			BUILD_DOCBOOK_PDF=NO \
			BUILD_DOCBOOK_PS=NO

# Thank god that they're only building compilers and no nuclear
# power plants. Note that we do not override CREATE_DATA, because
# it's now used for *changing* permissions instead of initially
# creating the files, and because we remove them anyway in post-install
# (they are re-created during pkg_add).
FAKE_FLAGS +=		CREATE_SCRIPT="${INSTALL_SCRIPT} /dev/null " \
			INSTALL_DATA="${INSTALL_DATA} \$$1 \$$2 \$$3" \
			INSTALL_DIR="${INSTALL_DATA_DIR} \$$1" \
			INSTALL_DOC="${INSTALL_DATA} \$$1 \$$2 \$$3" \
			INSTALL_HEADER="${INSTALL_DATA} \$$1 \$$2 \$$3" \
			INSTALL_MAN="${INSTALL_MAN} \$$1 \$$2 \$$3" \
			INSTALL_PROGRAM="${INSTALL_PROGRAM} \$$1 \$$2 \$$3" \
			INSTALL_SCRIPT="${INSTALL_SCRIPT} \$$1 \$$2 \$$3" \
			INSTALL_SHLIB="${INSTALL} ${INSTALL_COPY} -S -o ${LIBOWN} -g ${LIBGRP} -m ${LIBMODE} \$$1 \$$2 \$$3"

# For mktexpk (via dvips when building the PostScript documentation):
PORTHOME =		${WRKDIR}

TEST_DEPENDS =	print/ghostscript/gnu

post-extract:
	cd ${WRKSRC}/libraries/unix && \
	mkdir -p System/OpenBSD && \
	install -m 644 ${FILESDIR}/Process.hsc System/OpenBSD

BOOTSTRAP_SHLIBS =	${WRKDIR}/ghc-${BIN_VER}-shlibs-${MACHINE_ARCH}

post-patch:
# - Install a precompiled binary.
	cd ${WRKDIR}/ghc-${BIN_VER} && \
	LD_LIBRARY_PATH=${BOOTSTRAP_SHLIBS} \
	CONFIGURE_ENV=${CONFIGURE_ENV} \
	./configure --prefix=${WRKDIR}/bootstrap \
	    --with-gcc="${CC}" \
	    --with-clang="${CC}" && \
	LD_LIBRARY_PATH=${BOOTSTRAP_SHLIBS} \
	${MAKE_PROGRAM} install
	rm -rf ${WRKDIR}/ghc-${BIN_VER}
# - Create some wrapper scripts setting LD_LIBRARY_PATH
	cd ${WRKDIR}/bin && \
	for f in $$(ls ../bootstrap/bin); do \
		${INSTALL_SCRIPT} /dev/null $$f && \
		exec > $$f && \
		echo '#!/bin/sh' && \
		echo 'LD_LIBRARY_PATH=${BOOTSTRAP_SHLIBS} \' && \
		printf 'exec ${WRKDIR}/bootstrap/bin/%s "$$@@"\n' "$$f"; \
	done

post-install:
	cd ${PREFIX}/lib/ghc && \
	GHC_PKG="./bin/ghc-pkg --no-user-package-db --global-package-db ./package.conf.d" && \
	${INSTALL_SCRIPT} /dev/null register.sh && \
	exec > register.sh && \
	echo '#!/bin/sh' && \
	echo 'p="$${0%/*}/bin/ghc-pkg --no-user-package-db --global-package-db $${0%/*}/package.conf.d"' && \
	for p in $$($$GHC_PKG dot | sed -n -e 's/^"\([^"]*\)" -> "\([^"]*\)"$$/\1 \2/p' | tsort -r); do \
		echo \$$p register --force - \<\< \'EOF\' && \
		$$GHC_PKG describe $$p | sed '/^pkgpath:$$/s@@$$@@ ${PKGPATH}@@' && \
		echo EOF; \
	done && \
	${INSTALL_SCRIPT} /dev/null unregister.sh && \
	exec > unregister.sh && \
	echo '#!/bin/sh' && \
	echo 'p="$${0%/*}/bin/ghc-pkg --no-user-package-db --global-package-db $${0%/*}/package.conf.d"' && \
	for p in $$($$GHC_PKG dot | sed -n -e 's/^"\([^"]*\)" -> "\([^"]*\)"$$/\1 \2/p' | tsort); do \
		echo \$$p unregister --force $$p; \
	done && \
	rm package.conf.d/* && \
	$$GHC_PKG recache

do-test:
	ulimit -c 0 && \
	cd ${WRKSRC}/testsuite/tests && \
	exec ${SETENV} ${MAKE_ENV} HS_ENCODING=utf-8 \
		${MAKE_PROGRAM} ${MAKE_FLAGS} \
		PYTHON="${MODPY_BIN}"



# It doesn't matter wether this is the actual date of the bootstrapper
# build. It's just used to get different distfiles whenever new
# bootstrappers have to be built.
BOOTSTRAP_DATE =	20170417

# Create a bootstrapper. This compiles a stripped-down version of
# ghc and creates a `bindist', i.e. a tarball with binaries that
# can be used for bootstrapping.
bootstrap: patch
	@@if [ ! -x ${LOCALBASE}/bin/autoconf-2.61 ]; then \
		echo Please install autoconf-2.61.; \
		false; \
	fi
	@@if [ ! -x ${LOCALBASE}/bin/automake-1.4 ]; then \
		echo Please install automake-1.4.; \
		false; \
	fi
	echo HSCOLOUR_SRCS=NO > ${WRKSRC}/mk/build.mk
	echo GhcLibHcOpts=-O -fasm >> ${WRKSRC}/mk/build.mk
	echo GhcStage1HcOpts=-O -fasm >> ${WRKSRC}/mk/build.mk
	echo GhcStage2HcOpts=-O -fasm >> ${WRKSRC}/mk/build.mk
	echo SplitObjs=NO >> ${WRKSRC}/mk/build.mk
	echo GhcLibWays=v >> ${WRKSRC}/mk/build.mk
	echo GhcRTSWays= >> ${WRKSRC}/mk/build.mk
	echo GhcWithInterpreter=NO >> ${WRKSRC}/mk/build.mk
	echo INTEGER_LIBRARY=integer-gmp2 >> ${WRKSRC}/mk/build.mk
	echo SRC_CC_OPTS+=-g -O0 >> ${WRKSRC}/mk/build.mk
	echo HADDOCK_DOCS=NO >> ${WRKSRC}/mk/build.mk
	echo LATEX_DOCS=NO >> ${WRKSRC}/mk/build.mk
	echo BUILD_DOCBOOK_HTML=NO >> ${WRKSRC}/mk/build.mk
	echo BUILD_DOCBOOK_PDF=NO >> ${WRKSRC}/mk/build.mk
	echo BUILD_DOCBOOK_PS=NO >> ${WRKSRC}/mk/build.mk
	echo GhcWithSMP=NO >> ${WRKSRC}/mk/build.mk
	echo LD_OPTS=-optl-static -optl-s >> ${WRKSRC}/mk/build.mk

	echo ${BOOTSTRAP_DATE} > ${WRKSRC}/VERSION_DATE

	env CONFIGURE_ENV=RELEASE=NO ${MAKE} configure

	env MAKE_ENV="AUTOCONF_VERSION=2.61 AUTOMAKE_VERSION=1.4" \
	${MAKE} build ALL_TARGET="all binary-dist"

	mkdir -p ${WRKBUILD}/ghc-${MODGHC_VER}.${BOOTSTRAP_DATE}-shlibs-$$(arch -s)
	ldd ${WRKBUILD}/ghc/stage2/build/tmp/ghc-stage2 | \
	awk '$$NF ~ /^\/usr\/(local\/)?lib\// { print $$NF }' | \
	xargs -J % cp -p % ${WRKBUILD}/ghc-${MODGHC_VER}.${BOOTSTRAP_DATE}-shlibs-$$(arch -s)
	cd ${WRKBUILD} && \
	pax -wzf ghc-${MODGHC_VER}.${BOOTSTRAP_DATE}-shlibs-$$(arch -s){.tar.gz,}

.include <bsd.port.mk>

# Silence clang when used by ghc to process assembler files and gets
# flags chat don't make sense for assembly mode. Also, silence warnings
# about macro expansions producing 'defined' (occuring in
# includes/rts/storage/ClosureMacros.h, which has already been fixed
# upstream)
.if ${PROPERTIES:Mclang}
GHC_CC_OPTS += -Wno-unused-command-line-argument -Wno-expansion-to-defined
.endif
@


1.147
log
@Suppress a lot of (not all) warnings when using clang:

ghc uses cc for generating object files from assembler files and
passes the CONF_CC_OPTS_STAGE? flags to it, which clang doesn't
like, so add -Wno-unused-command-line-argument to the flags passed
to cc if it's clang.

To let this work for the bootstrap compiler, properly CONFIGURE_ENV
when installing the bootstrap (in post-patch:). This also makes the
hack patching the bootstrap/bin/ghc script in post-patch: obsolete.

prodded by (and with some hints from) espie@@

~here are still a lot of warnings, most about macros #defined in
storage/ClosureMacros.h. Those should be fixed in a separate step,
probably after an update to ghc-8.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.146 2017/04/18 18:38:11 kili Exp $
d266 5
a270 1
# Silence clang when used by ghc to process assembler files
d272 1
a272 1
GHC_CC_OPTS += -Wno-unused-command-line-argument
@


1.146
log
@Use the new boostrappers with the better clang detection fix from espie@@.

No objectsion, espie@@

(But it still produces tons of warnings, even when compiling ordinary
.hs files)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.145 2017/04/17 17:21:49 espie Exp $
d114 7
a120 6
CONFIGURE_ENV +=	CONF_CC_OPTS_STAGE0="-fno-pie -nopie" \
			CONF_CC_OPTS_STAGE1="-fno-pie -nopie" \
			CONF_CC_OPTS_STAGE2="-fno-pie -nopie" \
			CONF_GCC_LINKER_OPTS_STAGE0="-fno-pie -nopie" \
			CONF_GCC_LINKER_OPTS_STAGE1="-fno-pie -nopie -Wl,-z,wxneeded" \
			CONF_GCC_LINKER_OPTS_STAGE2="-fno-pie -nopie -Wl,-z,wxneeded"
d167 1
a182 5
# - Force the bootstrapper to use -nopie
#   (maybe removed when switching to a newer bootstrapper, but only if I
#    properly fix the bootstrap target)
	perl -pi -e 's/(\S+ \S+)/\1 -optl -nopie/ if /^exec /' \
		${WRKDIR}/bootstrap/bin/ghc
d265 5
@


1.145
log
@give the system a chance to figure out clang (their detection method is lame
as the patch shows).

you'll need to wait for a bootstrap/rebootrap yourself so this is actually
effective.

(should cut down *a lot* on the insane number of warnings produced due to
unknown compile options on a clang system)

okay kili@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.144 2017/02/28 00:07:10 kili Exp $
d15 1
a15 1
REVISION =		8
d20 1
a20 1
BIN_VER =		7.10.2.20160325
d221 1
a221 1
BOOTSTRAP_DATE =	20160325
@


1.144
log
@Try to work with just /usr/bin/cc (instead of /usr/bin/gcc).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.143 2016/11/01 18:14:05 kili Exp $
d15 1
a15 1
REVISION =		7
@


1.143
log
@Instead of setting USE_WXNEEDED=Yes, explicitely pass  -Wl,-z,wxneeded
the linker again. Otherwise, the ld wrapper script installed when
USE_WXNEEDED=Yes will be used by the installed ghc package.

Problem noticed by Karel Gardas.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.142 2016/09/13 18:52:05 naddy Exp $
d109 3
a111 1
			--with-iconv-libraries=${LOCALBASE}/lib
d166 3
a168 1
	./configure --prefix=${WRKDIR}/bootstrap && \
@


1.142
log
@replace libiconv module
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.141 2016/08/20 19:39:37 kili Exp $
d15 1
a15 1
REVISION =		6
d37 4
a40 3
# XXX: wxneeded is a hack. Fix rts/Linker.c, mmapForLinker() and
#      loadObj_() instead.
USE_WXNEEDED =		Yes
d110 2
d116 2
a117 2
			CONF_GCC_LINKER_OPTS_STAGE1="-fno-pie -nopie" \
			CONF_GCC_LINKER_OPTS_STAGE2="-fno-pie -nopie"
@


1.141
log
@Switch to USE_WXNEEDED.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.140 2016/08/13 18:54:58 kili Exp $
d24 1
a24 1
MODULES =		lang/ghc lang/python converters/libiconv
d31 2
d41 1
a41 1
WANTLIB +=		c m ncursesw pthread util
@


1.140
log
@Remove unused CONF_GCC_LD_OPTS_STAGE* from CONFIGURE_ENV.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.139 2016/08/10 07:08:28 kili Exp $
d15 1
a15 1
REVISION =		5
d35 4
a106 2
# XXX: wxneeded is a hack. Fix rts/Linker.c, mmapForLinker() and
#      loadObj_() instead.
d111 2
a112 2
			CONF_GCC_LINKER_OPTS_STAGE1="-fno-pie -nopie -Wl,-z,wxneeded" \
			CONF_GCC_LINKER_OPTS_STAGE2="-fno-pie -nopie -Wl,-z,wxneeded"
@


1.139
log
@Mark ghc as wxneeded for now.

A real fix would be to remove PROT_EXEC from mmapForLinker() in
rts/Linker.c and to flip PROT_WRITE / PROT_EXEC  in loadObj_()
when it's done, but this requires a little bit more time for
testing (turnaround times for building and testing ghc aren't
that funny).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.138 2016/04/05 08:15:50 kili Exp $
a104 1
#      CONF_GCC_LD_OPTS_STAGE? are probably bogus.
d110 1
a110 4
			CONF_GCC_LINKER_OPTS_STAGE2="-fno-pie -nopie -Wl,-z,wxneeded" \
			CONF_GCC_LD_OPTS_STAGE0="-nopie" \
			CONF_GCC_LD_OPTS_STAGE1="-nopie" \
			CONF_GCC_LD_OPTS_STAGE2="-nopie"
@


1.138
log
@Provide and use additional distfiles containing the shared libraries
required by the bootstrapper, so we don't need a new bootstrapper
whenever libc or other required libraries gets a major bump.

requested by naddy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.137 2016/03/25 10:42:17 kili Exp $
d15 1
a15 1
REVISION =		4
d103 3
d110 2
a111 2
			CONF_GCC_LINKER_OPTS_STAGE1="-fno-pie -nopie" \
			CONF_GCC_LINKER_OPTS_STAGE2="-fno-pie -nopie" \
@


1.137
log
@New bootstrappers, this time for real linked against new libc and libpthread.
Fix a typo in a comment (noticed by naddy@@).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.136 2016/03/24 20:32:57 kili Exp $
d50 2
a51 1
BINDISTFILE-$m =	ghc-${BIN_VER}-$m-unknown-openbsd.tar.bz2:0
d152 2
d157 3
a159 1
	./configure --prefix=${WRKDIR} && \
d162 9
d175 1
a175 1
		${WRKDIR}/bin/ghc
d249 7
@


1.136
log
@New bootstrappers.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.135 2016/03/15 19:41:18 kili Exp $
d8 1
a8 1
# "non-dterministic", "unresolved symbol", "signature mismatch" etc. to
d15 1
a15 1
REVISION =		3
d20 1
a20 1
BIN_VER =		7.10.2.20160324
d197 1
a197 1
BOOTSTRAP_DATE =	20160324
@


1.135
log
@- Change the first argument to pledge (the promises) to Maybe String,
  following the recent change to pledge(2) (passing NULL doesn't change
  the value).

- Use maybeWith instead of pattern matching to distinguish between
  Nothing and Just x.

- Add some minimal documentation.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.134 2016/02/26 07:50:52 kili Exp $
d15 1
a15 1
REVISION =		2
d20 1
a20 1
BIN_VER =		7.10.2.20160222
d197 1
a197 1
BOOTSTRAP_DATE =	20160222
@


1.134
log
@New bootstrappers. Still cheating (7.10.2, bootstrapped from 7.8.4),
but hopefully we're a little bit closer to build bootstrappers from
the installed ghc package.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.133 2016/01/20 16:08:29 kili Exp $
d15 1
a15 1
REVISION =		1
@


1.133
log
@Merge -main and -doc subpackages.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.132 2016/01/20 16:02:06 kili Exp $
d15 1
a15 1
REVISION =		0
d20 1
a20 1
BIN_VER =		7.8.4.20151026
d115 5
d197 1
a197 1
BOOTSTRAP_DATE =	20151026
@


1.132
log
@Add a module System.OpenBSD.Process to package unix with currently
only one function giving access to the pledge(2) system call:

pledge :: String -> Maybe [FilePath] -> IO ()

Help and testing by semarie@@ and abieber@@. Thanks!

No bump yet, because there'll be some more churn (so please wait a
little bit for other haskell commits before starting to build it).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.131 2015/12/28 19:18:52 kili Exp $
d3 1
a3 2
COMMENT-main =		compiler for the functional language Haskell
COMMENT-doc =		documentation for GHC
d15 1
a15 3
PKGNAME-main =		ghc-${MODGHC_VER}
PKGNAME-doc =		ghc-doc-${MODGHC_VER}
REVISION-doc =		0
a25 4
PSEUDO_FLAVORS =	no_doc
FLAVOR ?=
MULTI_PACKAGES =	-main -doc

a30 1
PKG_ARCH-doc =		*
d33 1
a33 6
LIB_DEPENDS-doc =
LIB_DEPENDS-main =	${LIB_DEPENDS}
RUN_DEPENDS-doc =
RUN_DEPENDS-main =

WANTLIB-main =		${WANTLIB} c m ncursesw pthread util
d35 1
a35 1
WANTLIB-doc =
a119 6

.if ${FLAVOR:Mno_doc}
MAKE_FLAGS +=		HADDOCK_DOCS=NO \
			LATEX_DOCS=NO \
			BUILD_DOCBOOK_HTML=NO
.endif
@


1.131
log
@Update to use ghc-7.10.3b distfiles. No changes to ghc-main, only
ghc-doc is affected.

BTW: a merge of -main and -doc will be done later, and some other
changes are in my queue.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.130 2015/12/20 11:04:27 kili Exp $
d159 5
@


1.130
log
@Update to ghc-7.10.3.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.129 2015/12/10 19:50:01 kili Exp $
d18 1
d58 2
a59 2
DISTFILES =		ghc-${MODGHC_VER}a-src.tar.bz2 \
			ghc-${MODGHC_VER}-testsuite.tar.bz2 \
a158 4

# There are some junk .orig files in 7.10.3.
post-extract:
	cd ${WRKSRC} && find . -name '*.orig' | xargs rm
@


1.129
log
@Remind myself to not mess up the upcoming update to 7.10.3.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.128 2015/11/30 22:22:24 kili Exp $
a16 1
REVISION-main =		1
d57 1
a57 8
#####################################################################
###								    #
### NOTE FOR 7.10.3: SRC DISTFILE IS ghc-7.10.3a-src.tar.bz2, NOT   #
### ghc-7.10.3-src.tar.bz2!					    #
###								    #
#####################################################################

DISTFILES =		ghc-${MODGHC_VER}-src.tar.bz2 \
d73 11
a83 11
	CABAL			1.22.4.0	96aI7pZyaxU3dsgngOxbdK \
	ARRAY			0.5.1.0		E0sTtauuKsGDLZoT7lTbgZ \
	BASE			4.8.1.0		GDytRqRVSUX7zckgKqJjgw \
	BINARY			0.7.5.0		IvYoLp9H6Xy3zEH13MmZwd \
	BIN_PACKAGE_DB		0.0.0.0		HeqFuAPxbeUAPK6hSBHejU \
	BYTESTRING		0.10.6.0	6elQVSg5cWdFrvRnfxTUrH \
	CONTAINERS		0.5.6.2		LKCPrTJwOTOLk4OU37YmeN \
	DEEPSEQ			1.4.1.1		LbCWUlehDDeLxurARKDH5o \
	DIRECTORY		1.2.2.0		KowvXytSqazBcvN7MGpFtg \
	FILEPATH		1.4.0.0		KsGE6pHE5eZHSN90ZVax6A \
	GHC			7.10.2		JzwEp1oQ8kA7NFNTGk1ho5 \
d85 3
a87 3
	HASKELINE		0.7.2.1		1dVCRhdIH7hAQWJrKwByYv \
	HOOPL			3.10.0.2	DoMsb793VEWGUzPylcUNJi \
	HPC			0.6.0.2		EoBo26ZW1TCDX9aShnDKTF \
d89 8
a96 8
	PRETTY			1.1.2.0		7UQTOB05U7lIYPkFOVraeR \
	PROCESS			1.2.3.0		FLTz0SLwyG6LJUpZ52HjkU \
	TEMPLATE_HASKELL	2.10.0.0	1ejK907jvoTHoZ6iZtHeyN \
	TERMINFO		0.4.0.1		KvtqTNXWuWjKicEYaZ7qsx \
	TIME			1.5.0.1		AXTdBF9VRQoBOqJT6qtmVH \
	TRANSFORMERS		0.4.2.0		3eG64VdP2vzGjP6wJiCp5X \
	UNIX			2.7.1.0		A3WgcI5QiHK4PDo4jSYdwQ \
	XHTML			3000.2.1	FxPylgBilld3tRCpn3X21N
d158 4
@


1.128
log
@Try to build a bootstrapper based on ghc-7.10.

Asked for and tested by Martijn Rijkeboer.

Note: the bootstrapper itself has not yet been tested to build the
regular ghc port.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.127 2015/11/13 12:27:04 naddy Exp $
d57 7
@


1.127
log
@don't pick up gpatch in configure
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.126 2015/11/02 21:31:26 kili Exp $
d228 1
a228 1
	echo INTEGER_LIBRARY=integer-gmp >> ${WRKSRC}/mk/build.mk
@


1.126
log
@Fix TRANSFORMERS_VER (part of SUBST_VARS).
No real plist change in the resulting package.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.125 2015/10/26 21:43:01 kili Exp $
d124 3
@


1.125
log
@New bootstrapper.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.124 2015/09/27 20:07:47 kili Exp $
d95 1
a95 1
	TRANSFORMERS		1.5.0.1		3eG64VdP2vzGjP6wJiCp5X \
@


1.124
log
@Disable stripping of hs libraries in Cabal.

It appears that strip --strip-unneeded sometimes strips too much.

For example, if you take libHStf-random-0.5-926BwEbiHzi7pBkp4dTxOe.a
from the hs-tf-random package on i386 and run strip --strip-unneeded
on it, the T Threefish_256_Process_Block symbol (from threefish_block.o)
is stripped, which shouldn't happen. Note: this specific case applies
to i386, not to amd64. But...

doug@@ reported a similar problem for the haskell library texmath,
which we don't yet have in the ports tree, and he made some even
more weird observation: texmath contains the two C source files
cbits/{key,val}ToASCII.c, defining the symbols keylookup (in
keyToAscii.c) and toASCIILut (in valToASCII.c), where both are just
some lookup tables. With strip --strip-unneeded enabled, the resulting
libHStexmath-*.a archive is missing keylookup. doug@@ then concatenated
both .c files to a new one and changed the .cabal file of texmath
to use that single one instead, and suddenly the symbol keylookup
no longer was removed.

I'll try to make a port for texmath (which would be required anyway
for porting pandoc) so people who want help to debug this don't
have to build all the haskell goo themselves.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.123 2015/09/19 07:42:56 kili Exp $
d17 1
a17 1
REVISION-main =		0
d23 1
a23 1
BIN_VER =		7.8.3.20150914
d203 1
a203 2
# That one is bogus, don't use (7.8.4. needs 7.8.3 to bootstrap):
BOOTSTRAP_DATE =	20150914
@


1.123
log
@Update to ghc-7.10.2.

Updates to all hs-* ports related to meta/haskell-platform will
follow soon. Other hs-* ports will be fixed during the next days.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.122 2015/09/14 18:39:06 kili Exp $
d17 1
@


1.122
log
@New bootstrapper again after libc crank (linked against libc.so.83.0).

The previous bootstrapper will be removed in two days.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.121 2015/09/11 17:44:12 kili Exp $
a16 1
REVISION-main =		6
a17 1
REVISION-doc =		0
d64 38
@


1.121
log
@New bootstrapper after libc crank.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.120 2015/08/29 23:00:43 kili Exp $
d17 1
a17 1
REVISION-main =		5
d24 1
a24 1
BIN_VER =		7.8.3.20150911
d167 1
a167 1
BOOTSTRAP_DATE =	20150911
@


1.120
log
@New bootstrapper
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.119 2015/08/27 09:33:25 juanfra Exp $
d17 1
a17 1
REVISION-main =		4
d24 1
a24 1
BIN_VER =		7.8.3.20150829
d167 1
a167 1
BOOTSTRAP_DATE =	20150829
@


1.119
log
@ghc hardcodes ${WRKDIR}/bin/gcc. OK kili@@ to a similar diff.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.118 2015/06/25 11:40:08 naddy Exp $
d17 1
a17 1
REVISION-main =		3
d24 1
a24 1
BIN_VER =		7.8.3.20150623
d167 1
a167 1
BOOTSTRAP_DATE =	20150623
@


1.118
log
@bump -doc subpackage due to HOMEPAGE change
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.117 2015/06/23 20:15:18 kili Exp $
d12 3
d17 1
a17 1
REVISION-main =		2
@


1.117
log
@Use a fresh bootstrapper to let it build on a clean current install.
While here, move homepage, master_sites and master_sites0 to https.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.116 2015/06/02 21:17:43 kili Exp $
d16 1
@


1.116
log
@register / unregister haskell packages bundled with ghc in the
correct order to reduce noise during pkg_add/pkg_delete.

problem noticed by aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.115 2015/05/11 22:54:57 kili Exp $
d14 1
a14 1
REVISION-main =		1
d17 1
a17 1
HOMEPAGE =		http://www.haskell.org/ghc/
d20 1
a20 1
BIN_VER =		7.8.3.20150409
d49 1
a49 1
MASTER_SITES0 =		http://openbsd.dead-parrot.de/distfiles/
d163 1
a163 1
BOOTSTRAP_DATE =	20150408
@


1.115
log
@Don't throw away output of {,un}register.sh (used in @@exec and @@unexec).
In theory, those should never fail, but espie@@ frequently noticed failure
of register.sh (with a broken / incomplete ghc package db resulting in
hs libraries like Prelude or Distribution/Simple not found).

No bump yet, because it only adds spam during pkg_add.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.114 2015/04/09 21:19:50 kili Exp $
d14 1
a14 1
REVISION-main =		0
d135 1
a135 1
	for p in $$($$GHC_PKG list --simple); do \
d144 1
a144 1
	for p in $$($$GHC_PKG list --simple); do \
@


1.114
log
@Yet another bootstrapper, based on ghc-7.8.3 (because building 7.8.4
with  a 7.8.4 bootstarapper doesn't work).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.113 2015/04/08 21:05:22 kili Exp $
a133 1
	echo 'exec > /dev/null 2>&1' && \
a142 1
	echo 'exec > /dev/null 2>&1' && \
@


1.113
log
@New bootstrapping binaries. Not yet tested (will it blend?)

SHA256 (ghc-7.8.4.20150408-amd64-unknown-openbsd.tar.bz2) = 4ce463b64001635445e1f229888614de9b16ae858e346432b947e1621e722416
SHA256 (ghc-7.8.4.20150408-i386-unknown-openbsd.tar.bz2) = 9f248fba238914b78260f2623cd61ca935032a7fe60b01ee92a4fe31f83c0131
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.112 2015/01/07 20:45:28 kili Exp $
d14 1
d20 1
a20 1
BIN_VER =		7.8.3.20141229
d164 1
@


1.112
log
@Reenable ghc builds.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.111 2015/01/01 19:25:36 kili Exp $
d163 1
a163 1
BOOTSTRAP_DATE =	20141229
@


1.111
log
@Bugfix udpate to ghc-7.8.4.
Also, use a new(er) bootstrapper; note that we have to use 7.8.3
for this, because if the built ghc and the bootstrapper have identical
versions, things will fail badly. May be it's not the ghc but the
cabal version which is problematic, but at the moment, I really
don'y call about *this* problem.
Still marked as broken. I hope to send promised diffs and new ports
for discussion tomorrow and then enable ghc and haskell-platform
on monday.
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.110 2014/11/22 20:23:22 kili Exp $

BROKEN =        	too many errors for bulk builders
@


1.110
log
@Update to ghc-7.8.3, but mark as broken until all other
hs ports are done.

Please note that it still doesn't use shared libraries, so
still no ghci (and a lot of hs-ports not buildable) on i386.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.109 2014/10/19 19:08:48 kili Exp $
d21 1
a21 1
BIN_VER =		7.6.3.20141019
d165 1
a165 1
BOOTSTRAP_DATE =	20141019
@


1.109
log
@For the new ghc, we need a newer bootstrapper.
Strange enough, at least our current ghc (7.6.3) doesn't
build with integer-simple, so use integer-gmp instead.
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.108 2014/09/16 10:07:00 dcoppa Exp $
a15 1
REVISION-main =		2
a16 1
REVISION-doc =		0
d21 1
a21 1
BIN_VER =		7.4.2.20130707
a117 1
	${SUBST_CMD} ${WRKSRC}/docs/index.html
d124 2
a125 1
#   (maybe removed when switching to a newer bootstrapper)
d131 1
a131 1
	GHC_PKG="./ghc-pkg --no-user-package-db --global-package-db ./package.conf.d" && \
d136 1
a136 1
	echo 'p="$${0%/*}/ghc-pkg --no-user-package-db --global-package-db $${0%/*}/package.conf.d"' && \
d146 1
a146 1
	echo 'p="$${0%/*}/ghc-pkg --no-user-package-db --global-package-db $${0%/*}/package.conf.d"' && \
@


1.108
log
@
Build ghc with '-fno-pie' on i386

ok kili@@ (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.107 2013/12/12 22:13:37 kili Exp $
d165 1
a165 1
BOOTSTRAP_DATE =	20130707
d187 1
a187 1
	echo INTEGER_LIBRARY=integer-simple >> ${WRKSRC}/mk/build.mk
@


1.107
log
@Remove postscript and pdf documentation.

ok dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.106 2013/11/25 14:16:23 sthen Exp $
d14 1
a14 1
REVISION-main =		1
d67 4
@


1.106
log
@kill VMEM_WARNING
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.105 2013/11/11 20:46:30 kili Exp $
d16 1
d83 3
a85 1
			HSCOLOUR_SRCS=NO
d90 1
a90 5
			BUILD_DOCBOOK_HTML=NO \
			BUILD_DOCBOOK_PDF=NO \
			BUILD_DOCBOOK_PS=NO
.else
BUILD_DEPENDS +=	textproc/dblatex
@


1.105
log
@Bump because of library signature changes for base, ghc, haskell98,
old-time and time. After comparing all the .hi files before and
after (using ghc --show-iface) I guess this changes had been triggered
by the suseconds_t change some weeks ago (my previous ghc build was
from october 23rd, so just a little bit before that change).

People following -current and using Haskell for serious work should
wait with updates until the new ghc and hs-packages are built and
copied out to the mirrors. Any Haskell additional libraries built
manually (i.e. using cabal something) should be rebuilt. If in
doubt, run ghc-pkg check to see if anything is broken for you.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.104 2013/08/16 13:40:49 kili Exp $
a51 3

# Haddock needs about 2.5 GB for processing the ghc library.
VMEM_WARNING =		Yes
@


1.104
log
@Reenable. We have new bootstrappers.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.103 2013/08/14 20:20:33 kili Exp $
d14 1
a14 1
REVISION-main =		0
@


1.103
log
@Mark as BROKEN until I get the time to build new bootstrappers after
the 64 bit time_t switch.

If anyone wants to beat me, grab ~kili/ghc-bootstrap.sh from cvs
(or http://openbsd.dead-parrot.de/ghc-bootstrap.sh), *read and try
to understand it*, downgrade the lang/ghc port to the last 7.4.
version (for example, cvs -q up -dP -D 2013-07-09) and then run
ghc-boostrap.sh (but be aware that you'll need a lot of time, disk
space, memory, and alcohol).

This may work or not (it worked for 5.3-current back in may). If
it doesn't work, either wait or go using some real programming
language.
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.102 2013/07/19 07:12:55 kili Exp $

BROKEN =		needs new bootstrapping binaries
d14 1
d20 1
a20 1
BIN_VER =		7.4.2.20120917
d165 1
a165 1
BOOTSTRAP_DATE =	20120907
@


1.102
log
@Remove broken marker, everything should be fine now.
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.101 2013/07/18 21:43:23 kili Exp $
@


1.101
log
@Update to ghc-7.6.3, revert my last two obsolete changes and
mark it as broken until all depending ports have been updated.
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.100 2013/07/07 20:15:34 kili Exp $

BROKEN =		a lot of hs-ports need updates, too
@


1.100
log
@Now is a good time to prepare for a bootstrapper update.
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.99 2013/07/07 13:35:27 kili Exp $
a15 1
REVISION-main =		4
a22 5
# xhtml replacement version (for meta/haskell-platform)
XHTML_VER =		3000.2.1

SUBST_VARS +=		XHTML_VER

d29 1
a29 5
MULTI_PACKAGES =	-main

.if !${FLAVOR:Mno_doc}
MULTI_PACKAGES +=	-doc
.endif
a50 1
MASTER_SITES1 =		http://hackage.haskell.org/packages/archive/xhtml/${XHTML_VER}/
a60 1
			xhtml-${XHTML_VER}.tar.gz:1 \
d125 2
a126 5
# - Replace libraries/xhtml.
	cp ${WRKSRC}/libraries/xhtml/ghc.mk ${WRKDIR}/xhtml-${XHTML_VER} 
	cp ${WRKSRC}/libraries/xhtml/GNUmakefile ${WRKDIR}/xhtml-${XHTML_VER} 
	mv ${WRKSRC}/libraries/xhtml{,-ghcdist}
	mv ${WRKDIR}/xhtml-${XHTML_VER} ${WRKSRC}/libraries/xhtml
d132 1
a132 1
	GHC_PKG="./ghc-pkg --global-conf ./package.conf.d" && \
d137 1
a137 1
	echo 'p="$${0%/*}/ghc-pkg --global-conf $${0%/*}/package.conf.d"' && \
d147 1
a147 1
	echo 'p="$${0%/*}/ghc-pkg --global-conf $${0%/*}/package.conf.d"' && \
d166 1
a166 1
BOOTSTRAP_DATE =	20130707
@


1.99
log
@Fix the no_doc pseudo flavor: don't add -doc to MULTI_PACKAGES
when FLAVOR=no_doc.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.98 2013/07/01 21:42:51 kili Exp $
d84 1
a84 1
CONFIGURE_ENV =		CONF_CC_OPTS_STAGE0="-fno-pie -nopie" \
d179 1
a179 1
BOOTSTRAP_DATE =	20120917
@


1.98
log
@Remove redundant (and incomplete) comment.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.97 2013/06/04 22:02:33 kili Exp $
d33 5
a37 1
MULTI_PACKAGES =	-main -doc
@


1.97
log
@Now that we have shm_open(3), it's picked up by configure when
building the `unix' package, which causes a package signature change.

Bump to get all hs-* packages updated.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.96 2013/05/13 21:01:37 kili Exp $
a179 1
# Note: this needs autoconf-2.61 as an additional dependency.
@


1.96
log
@Remove stray line continuation backslash.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.95 2013/05/11 22:13:30 kili Exp $
d14 1
a14 1
REVISION-main =		3
@


1.95
log
@Let the bootstrap target fail early if autoconf-2.61 or
automake-1.4 aren't installed.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.94 2013/05/09 05:54:31 kili Exp $
d213 1
a213 1
	${MAKE} build ALL_TARGET="all binary-dist" \
@


1.94
log
@Mention that the bootstrap target needs autoconf-2.61.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.93 2013/05/08 15:31:47 kili Exp $
d182 8
@


1.93
log
@The ghc-pwd hack is no longer needed.
I'm currently testing a new ghc-bootstrap.sh version which I'll
copy around if the test succeeds.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.92 2013/05/08 13:38:09 kili Exp $
d180 1
@


1.92
log
@Move the stuff from post-extract to post-patch to help
the build after time_t changes.
(this still isn't enough)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.91 2013/05/03 09:41:29 kili Exp $
a127 1
	cp -p /bin/pwd utils/ghc-pwd/dist-install/build/tmp/ghc-pwd && \
@


1.91
log
@The precompiled (and braindead) ghc-pwd in the binary bootstrapper
is poisoned with code from some very early bootstrapper, which
causes failure when bootstrapping from 6.6 via 6.10, 6.12, 7.0
to 7.4. So just overwrite it with /bin/pwd.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.90 2013/03/11 11:20:27 espie Exp $
d124 2
a125 1
post-extract:
a138 3

post-patch:
	${SUBST_CMD} ${WRKSRC}/docs/index.html
@


1.90
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.89 2013/02/06 18:17:12 kili Exp $
d127 1
@


1.89
log
@THe addition of posix_openpt(3) caused a haskell library signature
change in ghc's unix library.

Bump revision to get a new set of all hs-libraries pulled in when
updating.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.88 2013/01/20 18:07:58 kili Exp $
d28 1
a28 1
# in ghc.port.mk. lang/python needed for regress.
a38 3
PERMIT_PACKAGE_FTP =		Yes
PERMIT_DISTFILES_CDROM =	Yes
PERMIT_DISTFILES_FTP =		Yes
d122 1
a122 1
REGRESS_DEPENDS =	print/ghostscript/gnu
d165 1
a165 1
do-regress:
@


1.88
log
@All plist changes are done.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.87 2013/01/20 17:51:14 kili Exp $
d14 1
a14 1
REVISION-main =		2
@


1.87
log
@Enable profiling by default for ports containing Haskell libraries.

Suggested by David Schaefer.

Mark ghc broken temporarily until all necessary plist changes
are committed.

ok jasper@@ dcoppa@@
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.86 2012/12/04 06:30:20 kili Exp $

BROKEN =		ports with Haskell libraries need new plists
@


1.86
log
@Fix license comment: the package now also contains a (patched) libgmp,
which is LGPLv3.
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.85 2012/11/05 20:20:07 kili Exp $
@


1.85
log
@Stop ghc-pkg unregister <pkgname> -v0 --force issuing warnings that
this would break other packages.

Please note that those warnings are only disabled if both
-v0 *and* --force are given.

'no objections' dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.84 2012/10/11 11:05:02 kili Exp $
d35 2
a36 2
# BSD w/o advertising clause.
# Distfile is bundled with other stuff like libffi, libgmp, mingw
@


1.84
log
@Don't remove the bin directory when building a bootstrapper.
While here, remove the commands that attempt to rename
*-x86_64-* to *-amd64-*, because it currently doesn't
work anyways (VERSION_DATE is ignored by the bootstrapper
build).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.83 2012/10/11 07:51:10 dcoppa Exp $
d14 1
a14 1
REVISION-main =		1
@


1.83
log
@Fix random crashes at runtime when there's heavy use of libgmp.a
(e.g. large Fibonacci numbers): link GHC with its bundled gmp library
that has customized memory allocation functions.

While here, fix two other problems as well:

- undefined references to 'ffi_call_unix64', 'ffi_closure_unix64'
  on amd64

- unknown symbol '__guard_local' (caused by gcc's switch from __guard
  to __guard_local)

Joint work with kili@@
OK kili@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.82 2012/10/05 19:28:12 kili Exp $
a185 2
	cd ${WRKDIR} && rm -rf bin

a209 5

	cd ${WRKSRC} && \
	pre=ghc-${MODGHC_VER}.$$(cat VERSION_DATE) && \
	suf=unknown-openbsd.tar.bz2 && \
	mv "$$pre-x86_64-$$suf" "$$pre-amd64-$$suf" || true
@


1.82
log
@Just add a comment that parallel builds should never be enabled
for this port.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.81 2012/09/27 17:26:05 ajacoutot Exp $
d14 1
a14 1
REVISION-main =		0
d47 1
a47 1
LIB_DEPENDS-main =	${LIB_DEPENDS} devel/gmp
d51 1
a51 1
WANTLIB-main =		${WANTLIB} c gmp m ncursesw pthread util
d81 1
a81 3
CONFIGURE_ARGS +=	--with-gmp-includes=${LOCALBASE}/include \
			--with-gmp-libraries=${LOCALBASE}/lib \
			--with-iconv-includes=${LOCALBASE}/include \
@


1.81
log
@docbook-xsl already comes with libxslt.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.80 2012/09/25 19:26:36 kili Exp $
d5 6
@


1.80
log
@There's no reason to depend on textproc/dblatex (and all the beasts
it depends on) for the no_doc pseudo flavor. textproc/libxslt,
textproc/docbook and textproc/docbook-xsl are still needed (for
creating the man page).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.79 2012/09/23 20:26:57 kili Exp $
d39 1
a39 3
			textproc/docbook>=4.5 \
			textproc/docbook-xsl \
			textproc/libxslt
@


1.79
log
@Add archivers/gtar to BUILD_DEPENDS, because without it, configure
may detect it but dpb(1) may remove it afterwards, which causes the
build to fail (spotted by naddy).

This *could* be done simpler (by adding TarCmd=/bin/tar to
CONFIGURE_ENV), but this would break the bootstrap target.

Some more dependency odditiies (dblatex, docboo*, libxslt may be
not necessary for the no_doc FLAVOR, also noticed by naddy@@) will
be checked and fixed later.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.78 2012/09/20 16:38:16 kili Exp $
a38 1
			textproc/dblatex \
d101 2
@


1.78
log
@Use the new bootstrapper.

i386 bits (bootstrapper build and test) from sthen@@, Thanks!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.77 2012/09/18 18:24:26 kili Exp $
d38 2
a39 1
BUILD_DEPENDS =		textproc/dblatex \
a181 1
# You have to install gtar in order to run this target!
a182 4
	@@if [ ! -x ${LOCALBASE}/bin/gtar ]; then \
		echo Please pkg_add gtar.; \
		false; \
	fi
@


1.77
log
@Prepare for a new bootstrapper (now statically linked).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.76 2012/09/16 08:33:04 kili Exp $
d8 1
d14 1
a14 1
BIN_VER =		7.0.4.20120626
@


1.76
log
@Add a no_doc pseudo flavor which disables the -doc subpackage and
skips building the documentation.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.75 2012/09/02 23:01:29 kili Exp $
d175 1
a175 1
BOOTSTRAP_DATE =	20120626
d189 1
a189 1
	echo GhcLibHcOpts=-O -fgenerics -fasm >> ${WRKSRC}/mk/build.mk
d204 1
a204 1
	echo INSTALL_BIN_OPTS=-s >> ${WRKSRC}/mk/build.mk
@


1.75
log
@Blame the memory eater.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.74 2012/09/02 22:21:51 kili Exp $
d24 2
d93 8
@


1.74
log
@Remove BROKEN marker. Everything should build and work fine now.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.73 2012/09/02 19:53:46 kili Exp $
d55 1
@


1.73
log
@Update to ghc-7.4.2, but keep it marked as broken (and not only for amd64).

Most of the -nopie changes are from pascal@@ (thanks); I only had to
merge them for ghc-7.4 and tweak configure and mk/config.mk.in.
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.72 2012/08/31 18:10:14 pascal Exp $

BROKEN =		not yet ready for normal use
@


1.72
log
@For now, mark GHC broken on amd64.  kili@@ is sitting on an update at the moment
so it doesn't make sense for him to fix this old version.

ok kili@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.71 2012/08/12 11:31:33 pascal Exp $
d3 1
a3 1
BROKEN-amd64 =		build system fuckup with PIE
a9 1
REVISION-main =		9
a10 1
REVISION-doc =		0
d18 1
a18 1
XHTML_VER =		3000.2.0.4
d62 1
a62 1
			testsuite-${MODGHC_VER}.tar.bz2 \
d79 9
a87 9
CONFIGURE_ENV =		CONF_CC_OPTS_STAGE0="-fno-pie" \
			CONF_CC_OPTS_STAGE1="-fno-pie" \
			CONF_CC_OPTS_STAGE2="-fno-pie" \
			CONF_GCC_LINKER_OPTS_STAGE0="-fno-pie" \
			CONF_GCC_LINKER_OPTS_STAGE1="-fno-pie" \
			CONF_GCC_LINKER_OPTS_STAGE2="-fno-pie" \
			CONF_GCC_LD_OPTS_STAGE0="-fno-pie" \
			CONF_GCC_LD_OPTS_STAGE1="-fno-pie" \
			CONF_GCC_LD_OPTS_STAGE2="-fno-pie"
a90 1
			GhcThreaded=NO \
d94 5
a98 3
# power plants.
FAKE_FLAGS +=		CREATE_DATA="${INSTALL_DATA} /dev/null " \
			CREATE_SCRIPT="${INSTALL_SCRIPT} /dev/null " \
a110 2
BUILD_DEPENDS +=	devel/haddock,no_deps:patch

a118 6
# - Replace utils/haddock by the version from the ports tree.
	mv ${WRKSRC}/utils/haddock{,-ghcdist}
	mv ${WRKDIR}/devel/haddock/haddock-* ${WRKSRC}/utils/haddock
. for f in ghc.mk doc/ghc.mk haddock.wrapper
	cp -p ${WRKSRC}/utils/haddock{-ghcdist,}/$f
. endfor
d124 1
a124 1
	perl -pi -e 's/(\S+ \S+)/\1 -optl -fno-pie/ if /^exec /' \
d156 1
a156 1
	cd ${WRKSRC}/testsuite/tests/ghc-regress && \
@


1.71
log
@For now, disable PIE in GHC.  This will be revisited later on by kili@@ in the
next update.  And again, calling stuff "PIC" is a bad idea ...

ok kili@@
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.70 2012/06/29 05:52:01 kili Exp $
@


1.70
log
@Use new bootstrappers and bump.
(i386 from sthen@@, thanks!)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.69 2012/06/26 18:17:18 kili Exp $
d8 1
a8 1
REVISION-main =		8
d79 9
d131 2
@


1.69
log
@We need a new Timmy^WBootstrapper!

(It would be nice if someone could build one on a current i386)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.68 2012/06/12 20:11:22 kili Exp $
d8 1
a8 1
REVISION-main =		7
d15 1
a15 1
BIN_VER =		7.0.4.20111023
@


1.68
log
@Remove pointless test suite patch. It just covered up some fd leak
in the test framework, and the process007 test still failed for the
threaded variants (in the system(3) call).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.67 2012/05/02 22:58:31 kili Exp $
d162 1
a162 1
BOOTSTRAP_DATE =	20111023
@


1.67
log
@Bump. Just to enforce rebuilds of all hs-* packages.

Blame the famous "ghc-builds are not deterministic" bug for this.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.66 2012/04/25 22:50:37 kili Exp $
d103 1
a103 2
REGRESS_DEPENDS =	print/ghostscript/gnu \
			shells/bash
d124 1
a124 2
	${SUBST_CMD} ${WRKSRC}/docs/index.html \
		${WRKSRC}/libraries/process/tests/process007.hs
@


1.66
log
@Set GhcThreaded=NO again.

Bulk builders suffer without this, and we already have a sligt
idea what's going wrong (new thread receives a signal before
__tfork returns and then it fails in sigreturn).

I hope to find some time to work on a regression test for this
problem (which isn't related at all to ghc).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.65 2012/03/23 20:17:06 kili Exp $
d8 1
a8 1
REVISION-main =		6
@


1.65
log
@- Don't build/use the execvpe() bundled with libraries/unix.
  Unfortunately, we can't completely remove or skip include/execvpe.h
  and cbits/execvpe.c, because they also contain pPrPr_disableITimers(),
  which is called from the Haskell code.

- Switch back to GhcThreaded=YES (default). It's stupid, it's not
  required by GHC (IIRC it was required a long time ago back when
  ghci used libreadline), but it may help finding rthread bugs.
  Until now, I did run four complete builds of GHC and all Haskell
  ports with dpb without any problems.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.64 2012/02/19 20:38:53 kili Exp $
d8 1
a8 1
REVISION-main =		5
d82 1
@


1.64
log
@Something is wrong with the threaded rts and rthreads, so build ghc
itself using the non-threaded rts. This doesn't fix the real problem,
but it makes it possible to build hs-* ports without filling up
dpb's build slots with stuck ghc processes.

ok naddy@@ espie@@

Note: I'll re-run the testsuite with this diff and hope to get some
reasonable results that may help us to identify the real problem.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.63 2012/01/12 20:13:17 kili Exp $
d8 1
a8 1
REVISION-main =		4
d82 1
a82 2
			HSCOLOUR_SRCS=NO \
			GhcThreaded=NO
@


1.63
log
@Replace the bundled xhtml-3000.2.0.1 by a newer version
matching the requirements of haskell-platform-2011.4.0.0.

Moving the xhtml library back to a separate port (www/hs-xhtml)
would be nice but it causes too much headache (like dependency
cycles with devel/haddock).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.62 2011/12/27 20:53:01 kili Exp $
d8 1
a8 1
REVISION-main =		3
d82 2
a83 1
			HSCOLOUR_SRCS=NO
@


1.62
log
@Simplify the SIGTSTP handler to let it work with uthreads.

Suspending multithreaded programs built with ghc (including ghc
itself) should just work[tm] now. (Except for the bootstrapping
compiler which of course still uses the old code)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.61 2011/10/26 19:34:08 kili Exp $
d8 1
a8 1
REVISION-main =		2
d10 1
d17 5
d53 1
d63 1
d117 5
@


1.61
log
@Use the new bootstrappers (thanks to sthen@@ for doing the i386
bootstrapper).

Bump, because some of the `library hashes' changed.

Unfortunately, this also affects a couple of other haskell ports,
which get different `library hashes' now and will be reported as
broken by ghc-pkg check.

People using snapshot packages should get seamless updates when the
next set of snapshots is available. People building from ports and
*not* using dpb should use the out-of-date-script to get a subdirlist
of haskell ports which should be rebuilt.

I could also bump the affected ports, but I'm not sure wether it's
worth the trouble.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.60 2011/10/25 19:23:09 kili Exp $
d8 1
a8 1
REVISION-main =		1
@


1.60
log
@Prepare for a new bootstrapper.
Abort the bootstrapper build if gtar isn't installed (found
the hard way by sthen@@ when trying to build a boostrapper
for i386).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.59 2011/09/16 21:17:41 kili Exp $
d8 1
a8 1
REVISION-main =		0
d14 1
a14 1
BIN_VER =		6.12.3.20101121
@


1.59
log
@Workaround for failing test case process007: use bash (yuck!)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.58 2011/08/24 18:31:39 kili Exp $
d150 1
a150 1
BOOTSTRAP_DATE =	20110824
d157 4
@


1.58
log
@Add a special (and ugly) target to build a new bootstrapper.

ok jasper@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.57 2011/07/23 16:38:54 kili Exp $
d94 2
a95 1
REGRESS_DEPENDS =	print/ghostscript/gnu
d111 2
a112 1
	${SUBST_CMD} ${WRKSRC}/docs/index.html
@


1.57
log
@Fix totally stupid error message hiding fuckup in cabal.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.56 2011/06/30 21:26:15 kili Exp $
d142 44
@


1.56
log
@Update to ghc-7.0.4.

i386 tests done by Jona Joachim (thanks!).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.55 2011/04/25 22:06:43 kili Exp $
d8 1
@


1.55
log
@Bye bye haskeline,
mtl and terminfo don't really rhyme.

yes | sed 's/./I shall not touch INTREE_ONLY_PACKAGES in ghc.mk./;100q'

But keep utf8-string and xhtml for now.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.54 2011/04/23 20:16:38 kili Exp $
a7 1
REVISION-main =		0
a8 1
REVISION-doc =		0
@


1.54
log
@Move almost all Haskell distfiles fetched from hackage.haskell.org
into a common subdirectory `ghc', and also move the ghc distfiles
there (from ghc-${MODGHC_VER}).

This will avoid potential conflicts of hs-* ports distfiles coming
from hackage.haskell.org with distfiles used by other ports.

Based on an idea from dcoppa@@ for databases/hs-redis.

ok dcoppa@@

If you want to save some bandwdith and disk space, see my mail to
ports@@, which contains a shell script that can move distfiles around
under your DISTDIR.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.53 2011/04/23 12:52:36 kili Exp $
d8 1
d10 1
@


1.53
log
@Moving around the alex- and happy-generated files is now done by
the haddock port.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.52 2011/04/11 14:30:32 kili Exp $
d47 1
a47 1
DIST_SUBDIR =		ghc-${MODGHC_VER}
@


1.52
log
@Update to 7.0.3.

ok jasper@@ (who also gave an ok to all the depending updates).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.51 2010/11/27 22:34:47 kili Exp $
d101 1
a101 3
# - Replace utils/haddock by the version from the ports tree, move
#   the alex- and happy-generated files into the src dir and rename the
#   corresponding sources so cabal won't try to re-run alex or happy.
a106 4
	cd ${WRKSRC}/utils/haddock/src && \
		find . -name \*.[xy] -print | \
		sed 's@@\(.*\)\.[xy]@@mv & &.source \&\& mv ../dist/build/haddock/haddock-tmp/\1.hs \1.hs@@' | \
		sh
@


1.51
log
@Set PORTHOME. Needed for the texlive 2010 update (two fonts are
rendered with mktexpk).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.50 2010/11/21 19:43:31 kili Exp $
d31 1
a31 1
			textproc/docbook \
a38 1
REVISION-main =		8
a40 1
REVISION-doc =		2
d43 1
a43 2
MASTER_SITES =		http://darcs.haskell.org/download/dist/${MODGHC_VER}/ \
			${HOMEPAGE}dist/${MODGHC_VER}/ \
d65 1
a65 2
CONFIGURE_STYLE =	gnu autoconf
AUTOCONF_VERSION =	2.61
d75 2
d79 8
a86 7
			INSTALL_DATA="${INSTALL_DATA}" \
			INSTALL_DIR="${INSTALL_DATA_DIR}" \
			INSTALL_DOC="${INSTALL_DATA}" \
			INSTALL_HEAD="${INSTALL_DATA}" \
			INSTALL_MAN="${INSTALL_MAN}" \
			INSTALL_PROGRAM="${INSTALL_PROGRAM}" \
			INSTALL_SCRIPT="${INSTALL_SCRIPT}"
a96 3
# - Replace utils/haddock by the version from the ports tree, move
#   the alex- and happy-generated files into the src dir and rename the
#   corresponding sources so cabal won't try to re-run alex or happy.
d101 3
@


1.50
log
@New bootstrapper.

Thanks to armani and jasper for building the i386 version (even if
armanis i7 didn't win the race ;-))
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.49 2010/11/17 08:05:17 espie Exp $
d88 3
@


1.49
log
@new depends
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.48 2010/11/06 19:11:43 kili Exp $
d13 1
a13 1
BIN_VER =		6.12.3.20101002
d39 1
a39 1
REVISION-main =		7
@


1.48
log
@Fill in the `pkgpath' field of the libraries contained in ghc.

You'll now get sane output for all Haskell libraries. For example:

$ ghc-pkg field mtl pkgpath
pkgpath: lang/ghc
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.47 2010/11/06 10:18:38 espie Exp $
d30 4
a33 4
BUILD_DEPENDS =		::textproc/dblatex \
			::textproc/docbook \
			::textproc/docbook-xsl \
			::textproc/libxslt
d35 1
a35 1
LIB_DEPENDS-main =	${LIB_DEPENDS} ::devel/gmp
d66 1
a66 1
USE_GROFF =	Yes
d89 1
a89 1
BUILD_DEPENDS +=	::devel/haddock,no_deps:patch
d91 1
a91 1
REGRESS_DEPENDS =	::print/ghostscript/gnu
@


1.47
log
@convert libiconv to new wantlib
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.46 2010/11/05 21:23:46 kili Exp $
d39 1
a39 1
REVISION-main =		6
d125 1
a125 1
		$$GHC_PKG describe $$p && \
@


1.46
log
@Tweak the pkgpath hack so it doesn't change the Cabal API. Unbreaks
hs-glib (and probably other stuff that uses the Cabal library).

Bump both -main and -doc (yes, really, -doc, too).

I hereby nominate myself for the HSMAUS (Homer Simpson Memorial
Award of Unlimited Stupidity).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.45 2010/11/03 21:32:08 kili Exp $
d40 1
a40 1
WANTLIB-main =		c gmp m ncursesw pthread util
d43 1
@


1.45
log
@Add a `pkgpath' field to installed GHC libraries. Only applies to
libraries not coming together with ghc. This allows for looking up
a library's PKGPATH by running

        ghc-pkg field $pkgname pkgpath

where $pkgname is the GHC library name without the `hs-' prefix,
for example `ghc-paths'.

looks good to jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.44 2010/10/18 19:20:41 espie Exp $
d39 1
a39 1
REVISION-main =		5
d42 1
a42 1
REVISION-doc =		1
@


1.44
log
@USE_GROFF=Yes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.43 2010/10/04 09:37:25 kili Exp $
d39 1
a39 1
REVISION-main =		4
@


1.43
log
@New bootstrapping compiler (after libc update).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.42 2010/09/10 18:10:00 kili Exp $
d65 1
@


1.42
log
@New bootstrapping tarballs after ncurses update.
Adjust WANTLIB and bump.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.41 2010/09/05 10:54:02 kili Exp $
d13 1
a13 1
BIN_VER =		6.12.3.20100908
d39 1
a39 1
REVISION-main =		3
@


1.41
log
@Bump for real.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.40 2010/08/30 21:56:33 sthen Exp $
d13 1
a13 1
BIN_VER =		6.12.2.20100801
d39 2
a40 2
REVISION-main =		2
WANTLIB-main =		c gmp m ncurses pthread util
@


1.40
log
@bumps for python
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.39 2010/08/02 21:15:23 kili Exp $
a8 2
REVISION-main =		0
REVISION-doc =		0
d39 1
a39 1
REVISION-main =		1
d42 1
a42 1
REVISION-doc =		0
@


1.39
log
@Use a new bootstrapping compiler for ghc, linked against a current
libc. While here, switch to new REVISION/WANTLIB scheme.

Problem noticed by ajacoutot@@

ok espie@@ sthen@@

Please note that any Haskell library depending on ghc-6.12.3
(cabal-wise) needs to be rebuilt. This affects devel/haddock
and devel/hs-QuickCheck, which will be bumped in a minute, but
if you've some libraries not contained in the ports tree, be
sure to double-check with ghc-pkg check.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.38 2010/06/28 21:27:36 kili Exp $
d9 2
@


1.38
log
@Threading support should work now (with a patch from Simon Marlow).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.37 2010/06/15 15:34:03 kili Exp $
d7 2
a8 2
PKGNAME-main =		ghc-${MODGHC_VER}p0
PKGNAME-doc =		ghc-doc-${MODGHC_VER}p0
d13 1
a13 1
BIN_VER =		6.12.2.20100530
d35 1
a35 1
LIB_DEPENDS-main =	${LIB_DEPENDS} gmp::devel/gmp
d38 5
a42 1
WANTLIB-main =		c m ncurses pthread util
@


1.37
log
@Update to ghc-6.12.3 (bugfix release), plus some minor changes:

- Use integer-gmp again.

- Cleanout the extracted bootstrap directory right after installing it
  to save some disk space.

- Use ${MAKE_ENV} instead ${MODGHC_SETUP_CONF_ENV} in ghc.port.mk (in
  do-configure, use both).

- Don't compile Setup.l?hs, just use the interpreter (runghc) in
  ghc.port.mk. This speeds up the build of most ports depending on
  ghc and using a cabal-style build.

Necessary bumps and WANTLIB changes in ports using ghc will follow
later this evening.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2010/06/09 10:06:29 sthen Exp $
d7 2
a8 2
PKGNAME-main =		ghc-${MODGHC_VER}
PKGNAME-doc =		ghc-doc-${MODGHC_VER}
d38 1
a38 1
WANTLIB-main =		c m ncurses util
@


1.36
log
@Add gmp as a BUILD_DEPENDS, ghc-pwd in the bootstrap requires it.
Fix a typo while there. Discussed with and ok kili@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2010/06/06 09:54:20 kili Exp $
d7 2
a8 2
PKGNAME-main =		ghc-${MODGHC_VER}p4
PKGNAME-doc =		ghc-doc-${MODGHC_VER}p0
d33 1
a33 2
			::textproc/libxslt \
			::devel/gmp
d35 1
d38 1
a38 1
WANTLIB-main =		c m ncurses pthread util
d40 2
a41 1
MASTER_SITES =		${HOMEPAGE}dist/${MODGHC_VER}/ \
d64 3
a66 1
CONFIGURE_ARGS +=	--with-iconv-includes=${LOCALBASE}/include \
d71 1
a71 2
			HSCOLOUR_SRCS=NO \
			INTEGER_LIBRARY=integer-simple
d95 1
@


1.35
log
@New libc major => new bootstrapping binaries.

Since the new bootstrapper has a new name (ghc-6.12.2.20100530),
the ABI of some libraries included in GHC will change, possibly
breaking all other libraries, so expect some additional bumps soon.

Yes, this *is* ridiculous. If you want to live in peace, don't use
GHC.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2010/05/19 15:04:27 kili Exp $
d22 1
a22 1
# Distfile is bundled with ofther stuff like libffi, libgmp, mingw
d33 2
a34 1
			::textproc/libxslt
@


1.34
log
@Oops! Forgot to bump pkgname.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2010/05/16 13:51:26 kili Exp $
d7 1
a7 1
PKGNAME-main =		ghc-${MODGHC_VER}p3
d13 1
a13 1
BIN_VER =		6.12.2.20100513
@


1.33
log
@Zap __eprintf reference from Linker.c to fix the build with gcc4
(found by espie@@).

Thanks to sthen@@ for creating the i386 bootstrapping tarball.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2010/05/06 20:00:19 kili Exp $
d7 1
a7 1
PKGNAME-main =		ghc-${MODGHC_VER}p2
@


1.32
log
@Change ghc.port.mk to allow addition of flags to MODGHC_SETUP_PROG by
just setting MODGHC_SETUP_CONF_ARGS (which is now empty by default).

Add dblatex-created documentation.

While here, use our INSTALL* macros where possible to get correct
permissions (noticed by dcoppa@@). This does *not* fix the permissions
of libraries and interface files installed by Cabal-based tools,
because the permissions are hard-coded in Cabal, and I'm not going
to touch and fix Cabal ever, because IMHO it's completely broken
by design. (If you want to read some of this madness, have a look
at libraries/Cabal/Distribution/Compat/CopyFile.hs or even
libraries/Cabal/Distribution/Simple/Install.hs)

Expect some breakage of depending ports (at least of devel/darcs) and
some necessary WANTLIB changes, which will be fixed soonish.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2010/04/25 13:40:30 kili Exp $
d7 1
a7 1
PKGNAME-main =		ghc-${MODGHC_VER}p1
d13 1
a13 1
BIN_VER =		6.12.1.20100318
@


1.31
log
@Remove the native_bootstrap pseudo flavor. It's dangerous, because
the APIs of GHCs libraries depend on the version of the bootstrapping
compiler (and probably on the output of pom(6) and the amount of
active vulcanos in iceland).

See http://hackage.haskell.org/trac/ghc/ticket/4012#comment:3 for
details.

THIS ALSO MEANS THAT IF YOUR BUILD FAILS, YOU WILL HAVE TO MAKE
CLEAN AND START FROM SCRATCH! NEVER EVER TRY TO RESTART THE BUILD
OR THE LIBRARY ABIS WILL CHANGE! (Sorry for yelling)

Bump PKGNAME-main, since people may already have built ghc with
native_bootstrap.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2010/04/22 21:49:37 kili Exp $
d7 2
a8 2
PKGNAME-main =		ghc-${MODGHC_VER}p0
PKGNAME-doc =		ghc-doc-${MODGHC_VER}
d30 2
a31 1
BUILD_DEPENDS =		::textproc/docbook \
d70 10
d108 1
a109 1
	chmod 755 register.sh && \
d118 1
a119 1
	chmod 755 unregister.sh && \
@


1.30
log
@
Update to 6.12.2.

Many thanks to Darrin Chandler and dcoppa@@ for testing, reporting about
broken stuff, missing dependencies here and in ports depending on ghc.

Notes and rants:

- Bootstrapping is done using precompiled binaries, since .hc
  bootstrapping still doesn't work. I really hate this.

  THIS MEANS THAT GHC IS NOW AND WILL STAY LEGACY-ONLY (i386 and amd64)

  At least until someone fixes it. I tried for more than two year
  (well, only in my spare time and during my vacations) and failed.

- libgmp is currently disabled, because I didn't yet hack the GHC build
  system to use the system libgmp instead of the patched one included
  in GHC.

- The haddock ncluded in the ghc distfile is replaced by the version
  of haddock found in devel/haddock. Haddock itself is @@commented
  in the ghc PLIST. Unfortunately, this needs an ugly hack that
  introduces an otherwise useless pseudo flavor `no_deps' in
  devel/haddock.

- CLDouble has been removed from GHC some time ago, because it was
  an alias for double (AFAIK there's now support for long double
  in GHC). As this isn't a really big problem, it currently breaks
  c2hs, which I'll mark broken temporarily before committing the
  ghc update.

- The external codeset defaults to latin1 (suggested by Simon Marlow)
  and can be overridden by setting the HS_ENCODING to any codeset
  supported by libiconv.

- ghc.port.mk still needs some love, especially for letting a port add
  additional parameters to certain invocations of ${MODGHC_SETUP_PROG}.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2008/10/02 19:50:52 kili Exp $
d7 1
a7 1
PKGNAME-main =		ghc-${MODGHC_VER}
a20 3
PSEUDO_FLAVORS =	native_bootstrap
FLAVOR ?=

a45 3
.if ${FLAVOR:L:Mnative_bootstrap}
BUILD_DEPENDS +=	:ghc->=6.10:lang/ghc
.else
a46 1
.endif
a68 3
.if ${FLAVOR:L:Mnative_bootstrap}
BUILD_DEPENDS +=	::devel/haddock
.else
a69 1
.endif
a73 1
.if !${FLAVOR:L:Mnative_bootstrap}
a89 1
.endif
@


1.29
log
@
Fix for perl 5.10.
Thanks to sthen@@ for testing the build on amd64.
@
text
@d1 13
a13 14
# $OpenBSD: Makefile,v 1.28 2008/09/23 13:27:11 bernd Exp $
# 
# Ancient versions based on Simon Marlow's port script for FreeBSD:
# $FreeBSD: ports/lang/ghc/Makefile,v 1.13 2002/08/22 12:53:38 obraun Exp $
# And on NetBSD's 5.04.3 .hc boot script

COMMENT-main=		compiler for the functional language Haskell
COMMENT-doc=		documentation for GHC

DISTNAME=		ghc-${MODGHC_VER}
PKGNAME-main=		ghc-${MODGHC_VER}p2
PKGNAME-doc=		ghc-doc-${MODGHC_VER}p0
CATEGORIES=		lang
HOMEPAGE=		http://www.haskell.org/ghc/
d17 1
a17 1
MODULES=		lang/ghc lang/python
d19 1
a19 1
MULTI_PACKAGES=		-doc -main
d21 2
a22 2
PSEUDO_FLAVORS=		native_bootstrap
FLAVOR?=
d24 24
a47 20
# BSD w/o advertising clause
PERMIT_PACKAGE_CDROM=   Yes
PERMIT_PACKAGE_FTP=     Yes
PERMIT_DISTFILES_CDROM= Yes
PERMIT_DISTFILES_FTP=   Yes

PKG_ARCH-doc=		*
BUILD_DEPENDS=		::textproc/libxslt
LIB_DEPENDS-main=	gmp::devel/gmp
RUN_DEPENDS-doc=
RUN_DEPENDS-main=
WANTLIB-main=		c m ncurses pthread readline

MASTER_SITES=		${HOMEPAGE}dist/${MODGHC_VER}/
MASTER_SITES0=		${HOMEPAGE}docs/${MODGHC_VER}/
MASTER_SITES1=		http://openbsd.dead-parrot.de/distfiles/

DIST_SUBDIR=		ghc-${MODGHC_VER}
DOC_FILES=		Cabal users_guide libraries
DOC_DIR=		${PREFIX}/share/doc/ghc
d50 1
a50 3
# In theory, even older versions should work, but the only version
# tested with is 6.2.2.
BUILD_DEPENDS+=		:ghc->=6.2.2:lang/ghc
d52 1
a52 2
HCFILES=		${HCFILES-${MACHINE_ARCH}}
CONFIGURE_ARGS=		--enable-hc-boot
d55 3
a57 26
DISTFILES=		ghc-${MODGHC_VER}-src.tar.bz2 \
			ghc-${MODGHC_VER}-src-extralibs.tar.bz2 \
			ghc-testsuite-6.6.1.tar.gz \
			${DOC_FILES:C/(.+)/\1.html.tar.gz:0/g} \
			${HCFILES}

# HC file bundles for non-native bootstrapping. To build a registerised
# bundle, run make with ALL_TARGET="stage1 hc-file-bundle" and the
# following configuration settings for GHC (in ${WRKSRC}/mk/build.mk;
# variable settings MAKE_FLAGS may work, too):
#
#	GhcBootLibs=YES
#	GhcLibHcOpts=-O
#	GhcWithInterpreter=NO
#	SRC_HC_OPTS=-O -H32 -fasm -keep-hc-files
#	SplitObjs=NO
#
# The version and configuration of GHC used to build the bundle must
# match those of the GHC you want to bootstrap from the bundle. Don't
# even try to create a bundle from ghc-6.2.2 and then build ghc-6.6.1
# with it. (same for registerised vs. unregisterised builds).
#
# The general solution for porting this to other architectures will
# be to boot via unregisterised .hc files generated on an architecture
# already running GHC. For more information, see:
# http://hackage.haskell.org/trac/ghc/wiki/Building/Porting
d60 2
a61 2
HCFILES-$m=		ghc-${MODGHC_VER}-$m-unknown-openbsd-hc.tar.bz2:1
SUPDISTFILES+=		${HCFILES-$m}
d64 1
a64 1
SUBST_VARS=		MODGHC_VER
d66 9
a74 1
USE_GMAKE=		Yes
d76 5
a80 4
CONFIGURE_STYLE=	gnu dest autoconf
AUTOCONF_VERSION=	2.57
CONFIGURE_ARGS+=	--with-gmp-includes=${LOCALBASE}/include \
			--with-gmp-libraries=${LOCALBASE}/lib
d82 1
a82 1
FAKE_FLAGS+=		stage=2
a84 2
	@@mv ${WRKDIR}/testsuite ${WRKSRC}

d86 16
a101 46
# Bootstrap stage 1 from HC files, then wipe out all .o and .a files and
# resume a "normal" 2-stage build using the compiler just bootstrapped.
# No idea yet what's going wrong with GhcPatchLevel during configure
# (seeo mk/config.mk.in), so explicitely pass UseStage1=YES, to fix the
# build of compat/cbit/unicode.c
MAKE_FLAGS+=		BootingFromHc=NO \
			UseStage1=YES \
			SplitObjs=NO \
			GHC=${WRKBUILD}/compiler/ghc-inplace \
			HC=${WRKBUILD}/compiler/ghc-inplace \
			HAPPY=${WRKSRC}/distrib/fake-happy
BOOT_FLAGS=		GhcBootLibs=YES GhcWithInterpreter=NO \
			SplitObjs=NO
BOOT_DIRS=		utils/mkdependC utils/unlit utils/mkdirhier \
			driver/mangler driver/split includes rts libraries \
			compat utils compiler

# Override to get profiling libraries and several additional
# utilities installed.
FAKE_FLAGS+=		BootingFromHc=NO

do-build:
	# Bootstrap an initial ghc from HC files.
.for dir in ${BOOT_DIRS}
	cd ${WRKBUILD}/${dir} && \
	env -i ${MAKE_ENV} ${MAKE_PROGRAM} ${BOOT_FLAGS} boot all
.endfor
	# Cleanup objects and libraries
	find ${WRKBUILD} -name '*.[ao]' | xargs rm -f
	# Rebuild includes, RTS, and a minimal subset of libraries.
.for dir in includes rts libraries
	cd ${WRKBUILD}/${dir} && \
	env -i ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS} boot all \
		GhcBootLibs=YES
.endfor
	# Rebuild compat and utils. Build the mini-drivers for ghc
	# and ghci right now, else they'll be built during the fake
	# stage, which will put the wrong paths into them.
.for dir in compat utils driver/ghc driver/ghci
	cd ${WRKBUILD}/${dir} && \
	env -i ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS} clean boot all
.endfor
	cd ${WRKBUILD}/libraries && \
	env -i ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS} boot all
	cd ${WRKBUILD} && \
	env -i ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS} stage2
d104 2
a105 6
# Create scripts for the Cabal package registry that will be used for
# @@exec and @@unexec. And generate a man page.
post-build:
	cd ${WRKBUILD} && sh ${FILESDIR}/mkregunreg.sh ${PREFIX}
	cd ${WRKBUILD}/docs/man && \
	env -i ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS} ghc.1
d108 22
a129 6
	rm ${PREFIX}/lib/ghc/package.conf
	${INSTALL_SCRIPT} ${WRKBUILD}/{un,}register.sh ${PREFIX}/lib/ghc
	${INSTALL_DATA_DIR} ${DOC_DIR}
	cd ${WRKDIR} && umask 022 && pax -rw ${DOC_FILES} ${DOC_DIR}
	${INSTALL_MAN_DIR} ${PREFIX}/man/man1
	${INSTALL_MAN} ${WRKBUILD}/docs/man/ghc.1 ${PREFIX}/man/man1
d132 1
d134 2
a135 1
	${MAKE_ENV} ${MAKE_PROGRAM} stage=2 ${MAKE_FLAGS} \
@


1.28
log
@Missing PKGNAME-doc bump after MAINTAINER removal.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2008/09/03 22:40:27 kili Exp $
d91 2
a92 1
CONFIGURE_STYLE=	gnu dest
@


1.27
log
@
Drop maintainership.
If you have to work on ghc-HEAD but can't get the ghc-HEAD souces, there's
no point to work on it at all.
If you complain about missing portability, and all those Haskell guys agree,
but at the same time delay bootstrapping to the next release whenever a
release happens, there's no expectation for getting bootstrapping back at
all.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2008/07/15 20:08:39 naddy Exp $
d12 1
a12 1
PKGNAME-doc=		ghc-doc-${MODGHC_VER}
@


1.26
log
@mirror-maker should not look for arch-specific distfiles on unsupported
archs; ok kili@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2007/09/16 20:05:12 kili Exp $
d11 1
a11 1
PKGNAME-main=		ghc-${MODGHC_VER}p1
a14 1
MAINTAINER=		Matthias Kilian <kili@@openbsd.org>
@


1.25
log
@
Fix GHCi for amd64 (s/EM_X86_64/EM_AMD64/ noticed by Don Steward). Tested
on amd64 by ckuethe@@ (thanks).
Add a man page.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2007/07/22 22:37:25 kili Exp $
d52 1
a52 1
HCFILES=		ghc-${MODGHC_VER}-${ARCH}-unknown-openbsd-hc.tar.bz2:1
d83 4
a86 2
SUPDISTFILES=		ghc-${MODGHC_VER}-i386-unknown-openbsd-hc.tar.bz2:1 \
			ghc-${MODGHC_VER}-amd64-unknown-openbsd-hc.tar.bz2:1
@


1.24
log
@
Let the Cabal libraries pass the complete LDFLAGS to hsc2hs.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2007/07/21 17:14:57 kili Exp $
d11 1
a11 1
PKGNAME-main=		ghc-${MODGHC_VER}p0
d33 1
d94 1
a94 1
FAKE_FLAGS+=		"stage=2"
d149 1
a149 1
# @@exec and @@unexec.
d152 2
d160 2
@


1.23
log
@
Update to 6.6.1. With helpful hints from Don Stewart and espie@@.
Thanks to all the testers and to steven@@, who was so kind to
build the HC files for bootstrapping on amd64.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2006/11/26 11:38:07 espie Exp $
d11 1
a11 1
PKGNAME-main=		ghc-${MODGHC_VER}
@


1.22
log
@new MULTI_PACKAGES. patch from kili, committing so we're finished...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2005/05/22 07:10:33 alek Exp $
d3 1
a3 1
# Based on Simon Marlow's port script for FreeBSD:
d7 15
a21 27
ONLY_FOR_ARCHS= i386 amd64
#                   sparc
 
# The general solution for other architectures will be to boot
# via unregisterised .hc files generated on openbsd-*-i386. See:
#
#  http://haskell.org/ghc/docs/latest/html/building/sec-porting-ghc.html
#
# The best bets are powerpc and alpha. sparc64, mips64 and amd64
# should work. hppa and mips have recently worked. m68k hasn't worked
# for a long time now, and on mac68k at least _ld_ dies with a malloc
# error when linking the ghc binary.
 
# The build process: we build a full GHC from C source. The C source
# needs to be generated once for each arch, for each version of GHC.

COMMENT-main=	"compiler for the functional language Haskell"
COMMENT-doc=	"documentation for the functional language Haskell"

V=		6.2.2

DISTNAME=	ghc-${V}
PKGNAME-main=	ghc-${V}p0
PKGNAME-doc=	ghc-doc-${V}p0
CATEGORIES=	lang
HOMEPAGE=	http://www.haskell.org/ghc/
MAINTAINER=	Don Stewart <dons@@openbsd.org>
d23 2
a24 1
MULTI_PACKAGES=	-doc -main
d26 7
a32 1
PKG_ARCH-doc=	*
d34 19
a52 35
WANTLIB-main=	c m ncurses readline

HASKELL=	http://www.haskell.org
MASTER_SITES=	${HASKELL}/ghc/dist/${V}/
MASTER_SITES0=	${HASKELL}/ghc/docs/${V}/
MASTER_SITES1=	${HASKELL}/definition/
MASTER_SITES2=	ftp://ftp.cse.unsw.edu.au/pub/users/dons/ghc/${V}/

DIST_SUBDIR=	ghc-${V}
DOC_FILES=	users_guide hslibs building libraries
DOC_FILES1=	haskell98-report
DOC_DIR=	${PREFIX}/share/doc/ghc

DISTFILES=	ghc-${V}-src.tar.bz2 \
		${DOC_FILES:C/(.+)/\1.html.tar.gz:0/g} \
		${DOC_FILES1:C/(.+)/\1-html.tar.gz:1/g} \
		ghc-${V}-${ARCH}-unknown-openbsd-hc.tar.bz2:2 \
		ghc-regress-${V}.tar.bz2:2

# this tarball is the first step in porting to a new architecture
SUPDISTFILES=	ghc-${V}-i386-unknown-openbsd-hc.tar.bz2:2 \
 		ghc-${V}-amd64-unknown-openbsd-hc.tar.bz2:2
#		ghc-${V}-sparc-unknown-openbsd-hc.tar.bz2:2

# datasize around 130M on amd64
VMEM_WARNING=	Yes

USE_GMAKE=	Yes
CONFIGURE_STYLE=gnu dest
CONFIGURE_ENV+=	LOCALBASE="${LOCALBASE}"

# global register variable bug in gcc 3.3.2 screws up amd64. need gcc 3.4
# we bypass it by ignoring all platform dependent tweaks. 2x slowdown.
.if ${MACHINE_ARCH} == "amd64"
CONFIGURE_ARGS+=--enable-hc-boot-unregisterised
d55 64
a118 4
# distrib/hc-build is a wrapper around configure and the
# bootstrap make, with magic flags, vars and control flow
do-configure:
	: nothing here
d121 25
a145 4
	@@(cd ${WRKSRC} ;\
	 ${CONFIGURE_ENV} distrib/hc-build ${CONFIGURE_ARGS})

# note: ghci not in PLIST since it doesnt work yet
d147 4
a150 1
FAKE_FLAGS+="stage=2"
d153 2
d156 1
a156 4
.for i in ${DOC_FILES:C/(.+)/\1.html.tar.gz/g} \
	  ${DOC_FILES1:C/(.+)/\1-html.tar.gz/g}
	@@tar zxf ${FULLDISTDIR}/${i} -C ${DOC_DIR}
.endfor
d158 4
a161 11
REGRESS_DEPENDS=::lang/python/2.3
REGRESS_RESULT=	${WRKSRC}/actual.result
REGRESS_FLAGS=	TEST_HC="${WRKSRC}/ghc/compiler/stage2/ghc-inplace"
REGRESS_FLAGS+= EXTRA_RUNTEST_OPTS="--output-summary=${REGRESS_RESULT}" \
		PYTHON="${LOCALBASE}/bin/python2.3"

# BSD w/o advertising clause
PERMIT_PACKAGE_CDROM=   Yes
PERMIT_PACKAGE_FTP=     Yes
PERMIT_DISTFILES_CDROM= Yes
PERMIT_DISTFILES_FTP=   Yes
@


1.21
log
@Use python 2.3

ok dons@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2005/02/21 19:30:34 alek Exp $
d23 1
a23 1
COMMENT=	"compiler for the functional language Haskell"
d29 2
d35 1
a35 1
LIB_DEPENDS=	gmp::devel/gmp
d37 3
a39 9
MULTI_PACKAGES=	-doc
SUBPACKAGE?=
FULLPKGNAME-doc=ghc-doc-${V}p0
.if defined(PACKAGING) && ${SUBPACKAGE} == "-doc"
PKG_ARCH=	*
LIB_DEPENDS=
.else
WANTLIB=	c m ncurses readline
.endif
@


1.20
log
@- Fix dependencies for -doc subpackage
- Bump -doc PKGNAME
- Add WANTLIB marker
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2005/02/19 03:42:11 dons Exp $
d100 1
a100 1
REGRESS_DEPENDS=::lang/python/2.2
d104 1
a104 1
		PYTHON="${LOCALBASE}/bin/python2.2"
@


1.19
log
@Port ghc-6.2.2 to amd64.

ok pvalchev@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2005/02/14 01:26:56 dons Exp $
d37 1
a37 1
FULLPKGNAME-doc=ghc-doc-${V}
d40 3
@


1.18
log
@Update ghc to 6.2.2.
Adds support for ghci. More stable foreign function interface.

Just i386 at the moment.

ok sturm@@ pvalchev@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2004/05/20 00:08:22 dons Exp $
d7 2
a8 2
ONLY_FOR_ARCHS= i386 
#                   sparc amd64
d60 3
a62 3
SUPDISTFILES=	ghc-${V}-i386-unknown-openbsd-hc.tar.bz2:2
#		ghc-${V}-sparc-unknown-openbsd-hc.tar.bz2:2 \
#		ghc-${V}-amd64-unknown-openbsd-hc.tar.bz2:2
@


1.17
log
@Remove ld -no-keep-memory workaround for amd64, and use VMEM_WARNING instead.

ok pvalchev@@ brad@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2004/05/07 11:11:02 dons Exp $
d7 2
a8 1
ONLY_FOR_ARCHS= i386 sparc amd64
d26 1
a26 1
V=		6.2.1
d60 3
a62 3
SUPDISTFILES=	ghc-${V}-i386-unknown-openbsd-hc.tar.bz2:2  \
		ghc-${V}-sparc-unknown-openbsd-hc.tar.bz2:2 \
		ghc-${V}-amd64-unknown-openbsd-hc.tar.bz2:2
d88 1
a88 1
FAKE_FLAGS+="stage=1"
d99 2
a100 2
REGRESS_FLAGS=	TEST_HC="${WRKSRC}/ghc/compiler/stage1/ghc-inplace"
REGRESS_FLAGS+=	EXTRA_RUNTEST_OPTS="--output-summary=${REGRESS_RESULT}" \
@


1.16
log
@Ambiguous call to python in the regress tests.
Make sure we name exactly which python we want.
Spotted by Xavier.

ok xsa@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2004/04/26 23:48:50 dons Exp $
d62 3
@


1.15
log
@Update GHC to 6.2.1, and port to amd64

ok avsm@@ pvalchev@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2004/02/04 07:39:18 sturm Exp $
d97 1
a97 1
		PYTHON="${LOCALBASE}/bin/python"
@


1.14
log
@mark some subpackages arch independent

ok naddy@@
@
text
@d1 2
a2 1
# $OpenBSD: Makefile,v 1.13 2004/01/08 20:33:23 avsm Exp $
a5 3
#
# The build process:
#       1) build a full ghc6 from pre-generated 6.0.1 C files
d7 2
a8 1
ONLY_FOR_ARCHS= i386 sparc
a12 1
#  http://cvs.haskell.org/cgi-bin/cvsweb.cgi/fptools/distrib/cross-port
d14 7
a20 4
# The best bets are powerpc and alpha. sparc64 and amd64 should
# work. hppa and mips have recently worked. m68k hasn't worked
# for a long time now, and on mac68k at least _ld_ dies with a
# malloc error when linking the ghc binary.
d25 1
a25 1
V=		6.0.1
d30 1
a30 1
MAINTAINER=	Don Stewart <dons@@cse.unsw.edu.au>
d55 2
a56 2
		ghc-regress-${V}.1.tar.bz2:2 \
		ghc-${V}-${ARCH}-hc.tar.gz:2
a57 1
# only i386 and sparc .hc src exist at the moment. generating
d59 3
a61 1
SUPDISTFILES=	ghc-${V}-${ARCH}-hc.tar.gz:2
d66 6
@


1.13
log
@Add support for sparc ghc.
Hard work by Donald Stewart <dons at cse.unsw.edu.au>
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2003/09/01 22:46:28 avsm Exp $
d36 3
@


1.12
log
@fix regress by defining PYTHON; naddy@@, espie@@ ok
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2003/09/01 20:32:14 espie Exp $
d9 3
a11 4
ONLY_FOR_ARCHS= i386
# The general solution for other architectures [alpha, powerpc,
# sparc64, hppa, mips, m68k at least] will be to boot via
# unregisterised .hc files generated on openbsd-*-i386. See:
d16 4
a19 6
# The best bets are powerpc, sparc, sparc64 and alpha, which are
# working, or have recently worked, on linux. m68k needs to have
# its asm format set in the mangler, before we can do any kind of
# build. sparc is in a slightly better position, as we have
# 4.08.2 .hc source, but the C-built ghc4 goes into an infinite
# loop, when I last tried -- dons
d51 1
a51 1
		ghc-regress-${V}.tar.bz2:2 \
d54 2
a55 1
# only i386 hc src exists at the moment
@


1.11
log
@Bootstrap using a more recent ghc, solves gc issues. From maintainer.
okay naddy.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2003/08/21 19:51:23 espie Exp $
d87 2
a88 1
REGRESS_FLAGS+=	EXTRA_RUNTEST_OPTS="--output-summary=${REGRESS_RESULT}"
@


1.10
log
@pass 80M up as TWEAKED_SIZE in MAKE_FLAGS, so that it's easier to fiddle
with.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2003/08/14 21:38:36 avsm Exp $
d4 1
d7 1
a7 2
#       1) build a bootstrap ghc4 from C source
#       2) use this to do an in-tree ghc6 bootstrap and build
d10 3
a12 1
# sparc : needs to handle the asm format in ghc/driver/mangler/*.lprl
d14 9
a22 4
# alpha and powerpc have the problem that we don't have .hc src
# to bootstrap from. We would need an "unregisterised" build...
# More work. m68k needs to have its asm format set in the
# mangler, before we can do any kind of build at all. 
d27 1
a27 2
FULLVER=	6.0.1
BOOTVER=	4.08.2
d29 1
a29 1
DISTNAME=	ghc-${FULLVER}
d38 1
a38 1
FULLPKGNAME-doc=ghc-doc-${FULLVER}
d40 5
a44 5
HASKELL=	http://www.haskell.org/
MASTER_SITES=	${HASKELL}ghc/dist/${FULLVER}/
MASTER_SITES0=	${HASKELL}ghc/dist/${BOOTVER}/
MASTER_SITES1=	${HASKELL}ghc/docs/${FULLVER}/
MASTER_SITES2=	ftp://ftp.cse.unsw.edu.au/pub/users/dons/ghc/${FULLVER}/
d46 1
a46 1
DIST_SUBDIR=	ghc-${FULLVER}
d48 1
d51 5
a55 18
DISTFILES=	ghc-${FULLVER}-src.tar.bz2  ghc-${BOOTVER}-src.tar.bz2:0 \
		${DOC_FILES:C/(.+)/\1.html.tar.gz:1/g} \
		ghc-regress-${FULLVER}.tar.bz2:2

.if ${MACHINE_ARCH} == "i386"
A=x86
.elif ${MACHINE_ARCH} == "sparc"
A=sparc
.else
A=unreg
.endif
DISTFILES+=	ghc-${BOOTVER}-${A}-hc.tar.bz2:0
SUPDISTFILES=	ghc-${BOOTVER}-x86-hc.tar.bz2:0 ghc-${BOOTVER}-sparc-hc.tar.bz2:0

REGRESS_DEPENDS=::lang/python/2.2
REGRESS_RESULT=	${WRKSRC}/actual.result
REGRESS_FLAGS=	TEST_HC="${WRKSRC}/ghc/compiler/stage2/ghc-inplace"
REGRESS_FLAGS+=	EXTRA_RUNTEST_OPTS="--output-summary=${REGRESS_RESULT}"
d57 2
a58 2
# where the first compilers will be built
STAGE0=		${WRKDIR}/ghc-${BOOTVER}
d62 1
a62 1
CONFIGURE_ARGS=	--with-ghc=${STAGE0}/ghc/driver/ghc-inplace
d64 8
a71 2
# XXX fiddle with this if the 4.08 compiler burps for you
MAKE_FLAGS=	TWEAKED_SIZE=80M
d73 1
a73 8
CONFIGURE_ENV+=	CPPFLAGS="-I${LOCALBASE}/include" \
		LDFLAGS="-L${LOCALBASE}/lib" \
		LOCALBASE="${LOCALBASE}"

# Build the GHC-4 bootstrap compiler from C source
pre-configure:
	@@(cd ${STAGE0} ;\
	  ${CONFIGURE_ENV} distrib/hc-build --prefix=${STAGE0})
d75 1
a75 1
# note: ghci not in PLIST since it doesnt work yet
d79 2
a80 1
.for i in ${DOC_FILES:C/(.+)/\1.html.tar.gz/g}
d83 5
@


1.9
log
@unbreak distfile fetching, and update SUPDISTFILES
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2003/08/14 01:01:16 avsm Exp $
d69 3
@


1.8
log
@correct LIB_DEPENDS, from Don Stewart <dons@@cse.unsw.edu.au>
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2003/08/12 13:25:18 avsm Exp $
d49 1
a49 1
A="x86"
d51 1
a51 1
A="sparc"
d53 1
a53 1
A="unreg"
d56 1
@


1.7
log
@Allow ghc to work with external libgmp instead of building its own; this
will help with the sparc port.

From Don Stewart <dons@@cse.unsw.edu.au>
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2003/08/03 18:07:27 avsm Exp $
d28 1
a28 1
LIB_DEPENDS=	::devel/gmp
@


1.6
log
@Update to ghc-6.0.1, bugfixes
From: Don Stewart <dons at cse.unsw.edu.au>
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2003/08/01 14:03:39 avsm Exp $
a4 3
# Last update : updated to 6.0: Fri Jul  4 10:16:53 EST 2003
#               ported to ELF : Wed Apr 23 12:38:42 EST 2003
#
a7 1
#
d28 2
d32 1
a32 7
FULLPKGNAME-doc= ghc-doc-${FULLVER}

# BSD w/o advertising clause
PERMIT_PACKAGE_CDROM=   Yes
PERMIT_PACKAGE_FTP=     Yes
PERMIT_DISTFILES_CDROM= Yes
PERMIT_DISTFILES_FTP=   Yes
d38 1
a38 1
MASTER_SITES2=  ftp://ftp.cse.unsw.edu.au/pub/users/dons/ghc/${FULLVER}/
d46 1
a46 1
                ghc-regress-${FULLVER}.tar.bz2:2
d49 1
a49 1
    HCSRC=ghc-${BOOTVER}-x86-hc.tar.bz2:0
d51 3
a53 1
    HCSRC=ghc-${BOOTVER}-sparc-hc.tar.bz2:0
d55 1
a55 2

DISTFILES+=	${HCSRC}
d58 3
a60 3
REGRESS_RESULT=${WRKSRC}/actual.result
REGRESS_FLAGS=TEST_HC="${WRKSRC}/ghc/compiler/stage2/ghc-inplace"
REGRESS_FLAGS+=EXTRA_RUNTEST_OPTS="--output-summary=${REGRESS_RESULT}"
d67 5
a71 1
CONFIGURE_ARGS=--with-ghc=${STAGE0}/ghc/driver/ghc-inplace
d75 2
a76 1
	@@(cd ${STAGE0} ; distrib/hc-build --prefix=${STAGE0})
d85 6
@


1.5
log
@RCS tags, from Xavier Santolaria <xavier@@santolaria.net>
@
text
@d1 1
a1 1
# $OpenBSD$
d24 1
a24 1
FULLVER=	6.0
d54 1
a54 1
                ghc-regress-${FULLVER}.0.tar.bz2:2
d65 1
a65 1
REGRESS_RESULT=${WRKSRC}/${ARCH}.test.result
@


1.4
log
@no need to define YACC, add in a ghc module Makefile to set common ghc defines
@
text
@d1 1
@


1.3
log
@Update from maintainer Don Stewart (dons at cse.unsw.edu.au):

- Updated to ghc-6.0
- Halved (roughly) the build time; by using the 6.0 in-tree build
we only have to build the 6.0 libraries once. Also we only build the
necessary parts of the bootstrap compiler.
- The ugly lndir/stage1 build is also gone.
- The full ghc regression suite is now part of the port!
"make regress" will run around 3000 regress tests.
- The regression tests revealed that the C foreign function
- The Makefile is simplified, using more default targets
- The documentation is updated to 6.0
- I put some of the 5.04.3 patches into ghc cvs, so they are
now obsolete.

Unfortunately, this lets mozilla back in the race for longest
package building time...
@
text
@a70 1
YACC?=		/usr/bin/yacc
@


1.2
log
@Add in some documentation in a ghc-doc-5.04.3 subpackage
Based on a port by Donald Bruce Stewart (maintainer)
@
text
@d4 2
a5 1
# Last update : ported to ELF : Wed Apr 23 12:38:42 EST 2003
d9 2
a10 2
#       3) use this to make a bootstrap ghc5
#       4) and then, finally, a full ghc5 
d13 1
a13 2
# sparc: hacking needed
# Requires someone to handle the asm format in ghc/driver/mangler/*.lprl
d15 4
a18 3
# m68k, alpha and powerpc have the problem that we don't
# have .hc src to bootstrap from. We would need an "unregisterised"
# build... more work
d23 1
a23 1
FULLVER=	5.04.3
a40 2
NO_REGRESS=Yes

d45 1
d52 2
a53 1
		${DOC_FILES:C/(.+)/\1.html.tar.gz:1/g}
d63 5
a69 1
STAGE1=		${WRKDIR}/ghc-${FULLVER}-boot
d74 1
a74 1
CONFIGURE_ARGS=	--with-ghc=${STAGE1}/ghc/compiler/ghc-inplace
d76 1
a77 2
# Build the GHC4 bootstrap compiler from C source
	@@echo "===>  Building GHC4 bootstrap compiler"
a78 16
# Now, we bootstrap GHC5 (as fast a build as possible)
	@@echo "===>  Building GHC5 bootstrap compiler"
	@@(mkdir ${STAGE1} ; cd ${STAGE1} ; lndir ${WRKSRC} ;\
	  ./configure --prefix=${STAGE1} \
                  --with-ghc=${STAGE0}/ghc/driver/ghc-inplace ;\
	  echo "GhcWithInterpreter=NO"        >mk/build.mk ;\
	  echo "GhcLibWays="                 >>mk/build.mk ;\
	  echo "GhcCompilerWays="            >>mk/build.mk ;\
	  echo "SplitObjs=NO"                >>mk/build.mk ;\
	  echo "FptoolsHcOpts=-H32m"         >>mk/build.mk ;\
	  ${GMAKE})
# And now, the whole thing
	@@echo "===>  Building GHC5 full version"
	@@(cd ${WRKSRC}; \
	  echo "GhcWithInterpreter=NO" >mk/build.mk ;\
	  echo "FptoolsHcOpts=-H32m"  >>mk/build.mk)
@


1.1
log
@Initial revision
@
text
@d20 1
d30 4
d45 5
d51 2
a52 2
DISTFILES=	ghc-${FULLVER}-src.tar.bz2   \
		ghc-${BOOTVER}-src.tar.bz2:0
d93 6
@


1.1.1.1
log
@initial import of ghc-5.04.3, which takes the "longest compilation
time" award from mozilla and gcc3

From Don Stewart <dons@@cse.unsw.edu.au> with tweaks from me

(i386 only for the moment)
--
The Glasgow Haskell Compiler is a robust, fully-featured, optimising
compiler for the functional programming language Haskell 98.

GHC compiles Haskell to either native code or C. It implements
numerous experimental language extensions to Haskell, including
concurrency, a foreign language interface, several type-system
extensions, exceptions, and so on. GHC comes with a generational
garbage collector, a space and time profiler, and a comprehensive
set of libraries.

@
text
@@
