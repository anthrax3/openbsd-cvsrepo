head	1.40;
access;
symbols
	OPENBSD_6_2:1.40.0.4
	OPENBSD_6_2_BASE:1.40
	OPENBSD_6_1:1.40.0.2
	OPENBSD_6_1_BASE:1.40
	OPENBSD_6_0:1.38.0.4
	OPENBSD_6_0_BASE:1.38
	OPENBSD_5_9:1.38.0.2
	OPENBSD_5_9_BASE:1.38
	OPENBSD_5_8:1.35.0.6
	OPENBSD_5_8_BASE:1.35
	OPENBSD_5_7:1.35.0.2
	OPENBSD_5_7_BASE:1.35
	OPENBSD_5_6:1.33.0.2
	OPENBSD_5_6_BASE:1.33
	OPENBSD_5_5:1.32.0.2
	OPENBSD_5_5_BASE:1.32
	OPENBSD_5_4:1.30.0.2
	OPENBSD_5_4_BASE:1.30
	OPENBSD_5_3:1.27.0.2
	OPENBSD_5_3_BASE:1.27
	OPENBSD_5_2:1.24.0.6
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.4
	OPENBSD_5_0:1.24.0.2
	OPENBSD_5_0_BASE:1.24
	OPENBSD_4_9:1.18.0.2
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.10.0.2
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.6.0.12
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.10
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.8
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.6
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.40
date	2017.03.02.23.23.28;	author kili;	state Exp;
branches;
next	1.39;
commitid	I8phEVBWQEkYirJc;

1.39
date	2017.03.02.22.44.06;	author kili;	state Exp;
branches;
next	1.38;
commitid	M8HWqHHk52Fa0AG6;

1.38
date	2016.01.20.16.08.29;	author kili;	state Exp;
branches;
next	1.37;
commitid	dVemMaWAPoSnSCqs;

1.37
date	2015.12.20.11.04.27;	author kili;	state Exp;
branches;
next	1.36;
commitid	dTjHNUY1axsWM78C;

1.36
date	2015.09.19.07.42.56;	author kili;	state Exp;
branches;
next	1.35;
commitid	wrrXExsbhXWvHmhw;

1.35
date	2015.01.01.19.25.36;	author kili;	state Exp;
branches;
next	1.34;
commitid	xydU2twmNfvEHbae;

1.34
date	2014.11.22.20.23.22;	author kili;	state Exp;
branches;
next	1.33;
commitid	f8HFLM9LK5anF9Xl;

1.33
date	2014.06.19.18.58.02;	author kili;	state Exp;
branches;
next	1.32;
commitid	1m0c25NDEYVsshu2;

1.32
date	2014.01.11.20.22.21;	author kili;	state Exp;
branches;
next	1.31;

1.31
date	2013.10.22.20.03.21;	author kili;	state Exp;
branches;
next	1.30;

1.30
date	2013.07.18.21.43.23;	author kili;	state Exp;
branches;
next	1.29;

1.29
date	2013.07.02.08.36.16;	author espie;	state Exp;
branches;
next	1.28;

1.28
date	2013.03.11.11.20.27;	author espie;	state Exp;
branches;
next	1.27;

1.27
date	2013.01.20.17.51.14;	author kili;	state Exp;
branches;
next	1.26;

1.26
date	2012.11.08.22.21.45;	author kili;	state Exp;
branches;
next	1.25;

1.25
date	2012.09.02.19.53.46;	author kili;	state Exp;
branches;
next	1.24;

1.24
date	2011.07.25.21.45.15;	author kili;	state Exp;
branches;
next	1.23;

1.23
date	2011.06.30.21.26.15;	author kili;	state Exp;
branches;
next	1.22;

1.22
date	2011.04.23.20.16.38;	author kili;	state Exp;
branches;
next	1.21;

1.21
date	2011.04.20.18.17.27;	author jeremy;	state Exp;
branches;
next	1.20;

1.20
date	2011.04.13.15.20.15;	author kili;	state Exp;
branches;
next	1.19;

1.19
date	2011.04.11.14.30.32;	author kili;	state Exp;
branches;
next	1.18;

1.18
date	2010.12.15.13.59.54;	author ajacoutot;	state Exp;
branches;
next	1.17;

1.17
date	2010.11.26.17.27.38;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2010.11.17.08.05.17;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2010.11.03.21.32.08;	author kili;	state Exp;
branches;
next	1.14;

1.14
date	2010.10.28.13.49.09;	author jasper;	state Exp;
branches;
next	1.13;

1.13
date	2010.09.23.12.26.37;	author jasper;	state Exp;
branches;
next	1.12;

1.12
date	2010.09.22.22.09.53;	author jasper;	state Exp;
branches;
next	1.11;

1.11
date	2010.09.22.22.02.38;	author jasper;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.18.21.37.16;	author kili;	state Exp;
branches;
next	1.9;

1.9
date	2010.06.15.15.34.03;	author kili;	state Exp;
branches;
next	1.8;

1.8
date	2010.05.06.20.00.19;	author kili;	state Exp;
branches;
next	1.7;

1.7
date	2010.04.22.21.49.37;	author kili;	state Exp;
branches;
next	1.6;

1.6
date	2007.07.21.17.14.57;	author kili;	state Exp;
branches;
next	1.5;

1.5
date	2006.11.20.13.07.20;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2006.07.30.13.21.38;	author alek;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.19.03.42.11;	author dons;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.14.01.26.56;	author dons;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.10.08.14.35;	author xsa;	state Exp;
branches;
next	;


desc
@@


1.40
log
@Add quotes. Just in case someoen sets CC="my beloved C compiler".
@
text
@# $OpenBSD: ghc.port.mk,v 1.39 2017/03/02 22:44:06 kili Exp $
# Module for Glasgow Haskell Compiler

# Not yet ported to other architectures
ONLY_FOR_ARCHS =	i386 amd64

# Dependency of meta/haskell-platform.
# Please do *not* update without thinking.
MODGHC_VER =		7.10.3
SUBST_VARS +=		MODGHC_VER

MODGHC_BIN =		${LOCALBASE}/bin/ghc

# The following is for depending ports only.  GHC itself just needs
# MODGHC_VER and ONLY_FOR_ARCHS. This is a little bit ugly, but
# depending ports using CABAL tend to install into locations as
# lib/Foo-${FooVersion}/ghc-${MODGHC_VER}, so they need the exact
# version of ghc. Depending ports thus need full depends specs,
# i.e. RUN_DEPENDS = lang/ghc=${MODGHC_VER}, and not
# just lang/ghc.
.if ${PKGPATH} != "lang/ghc"
BUILD_DEPENDS +=	lang/ghc

# Set to "cabal" to get the typical Cabal targets defined. Add "haddock"
# to generate API documentation using Haddock. Add "register" to create
# and include register/unregister scripts (you'll still have to add the
# necessary tags to your PLIST by hand).
# Add "nort" if the port doesn't depend on the GHC runtime. This will
# also turn off the default "hs-" prefix for PKGNAME.
# If "nort" is not added, MODGHC_PACKAGE_KEY may be set to the 'package
# key' of the library built and will be added to SUBST_VARS.
# Finally, set it to or add "hackage" if the distfiles are available on
# hackage.haskell.org.

MODGHC_BUILD ?=

. if !${MODGHC_BUILD:L:Mnort}
PKGNAME ?=		hs-${DISTNAME}
RUN_DEPENDS +=		lang/ghc=${MODGHC_VER}
CATEGORIES +=		lang/ghc
MODGHC_PACKAGE_KEY ?=
.  if ${MODGHC_PACKAGE_KEY} != ""
SUBST_VARS +=			MODGHC_PACKAGE_KEY
.  endif
. endif

. if ${MODGHC_BUILD:L:Mhackage}
MODGHC_HACKAGE_NAME =		${DISTNAME:C,-[0-9.]*$,,}
MODGHC_HACKAGE_VERSION =	${DISTNAME:C,.*-([0-9.]*)$,\1,}
HOMEPAGE ?=			https://hackage.haskell.org/package/${MODGHC_HACKAGE_NAME}
MASTER_SITES =			https://hackage.haskell.org/package/${DISTNAME}/
SUBST_VARS +=			DISTNAME MODGHC_HACKAGE_VERSION
DIST_SUBDIR ?=			ghc
. endif

. if ${MODGHC_BUILD:L:Mcabal}
MODGHC_SETUP_SCRIPT ?=		Setup.lhs Setup.hs
MODGHC_SETUP_PROG ?=		${WRKSRC}/Setup
MODGHC_SETUP_CONF_ARGS +=	--with-gcc="${CC}"
MODGHC_SETUP_CONF_ENV ?=

.  if !${MODGHC_BUILD:L:Mnort}
MODGHC_SETUP_CONF_ARGS +=	--datasubdir=hs-\$$pkgid
MODGHC_SETUP_CONF_ARGS +=	--docdir=\$$datadir/doc/hs-\$$pkgid
MODGHC_SETUP_CONF_ARGS +=	--libsubdir=ghc/\$$pkgid
MODGHC_SETUP_CONF_ARGS +=	--enable-library-profiling
.  else
# Override Cabal defaults, which are $arch-$os-$compiler/$pkgid for
# datasubdir and libsubdir and $datadir/doc/$arch-$os-$compiler/$pkgid
# for docdir.
MODGHC_SETUP_CONF_ARGS +=	--datasubdir=\$$pkgid
MODGHC_SETUP_CONF_ARGS +=	--libsubdir=\$$pkgid
MODGHC_SETUP_CONF_ARGS +=	--docdir=\$$datadir/doc/\$$pkgid
.  endif

# Little hack to let ports still add CONFIGURE_STYLE = autoconf and go
# without a do-configure: target (some Haskell ports are built with
# Cabal but use autohell for the documentation):
MODCABAL_configure = \
	cd ${WRKSRC} && \
	for s in ${MODGHC_SETUP_SCRIPT}; do \
		test -f "$$s" && \
		${MODGHC_BIN} --make \
			-o ${MODGHC_SETUP_PROG} "$$s" && \
		break; \
	done && \
	cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} ${MODGHC_SETUP_CONF_ENV} \
		${MODGHC_SETUP_PROG} \
			configure -v -g -O --prefix=${PREFIX} \
			${MODGHC_SETUP_CONF_ARGS}

CONFIGURE_STYLE +=		CABAL

MODGHC_BUILD_TARGET = \
	cd ${WRKBUILD} && ${SETENV} ${MAKE_ENV} \
		${MODGHC_SETUP_PROG} build -v
.  if ${MODGHC_BUILD:L:Mhaddock}
MODGHC_BUILD_TARGET += \
	;cd ${WRKBUILD} && ${SETENV} ${MAKE_ENV} \
		${MODGHC_SETUP_PROG} haddock
.  endif
.  if ${MODGHC_BUILD:L:Mregister}
MODGHC_BUILD_TARGET += \
	;cd ${WRKBUILD} && ${SETENV} ${MAKE_ENV} \
		${MODGHC_SETUP_PROG} register --gen-script; \
	cd ${WRKBUILD} && ${SETENV} ${MAKE_ENV} \
		${MODGHC_SETUP_PROG} unregister --gen-script
.  endif

MODGHC_INSTALL_TARGET = \
	cd ${WRKBUILD} && ${SETENV} ${MAKE_ENV} \
		${MODGHC_SETUP_PROG} copy --destdir=${DESTDIR}
.  if ${MODGHC_BUILD:L:Mregister}
MODGHC_INSTALL_TARGET += \
	;${INSTALL_SCRIPT} ${WRKBUILD}/register.sh ${PREFIX}/lib/ghc/${DISTNAME} \
	;${INSTALL_SCRIPT} ${WRKBUILD}/unregister.sh ${PREFIX}/lib/ghc/${DISTNAME}
.  endif

MODGHC_TEST_TARGET = \
	cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
		${MODGHC_SETUP_PROG} test

.  if !target(do-build)
do-build:
	@@${MODGHC_BUILD_TARGET}
.  endif

.  if !target(do-install)
do-install:
	@@${MODGHC_INSTALL_TARGET}
.  endif

.  if !target(do-test)
do-test:
	@@${MODGHC_TEST_TARGET}
.  endif
. endif
.endif
@


1.39
log
@Workaround: add --with-gcc=${CC} to hs-ports using cabal.

This should be fixed for real in libraries/Cabal (in the ghc
source tree), but I'm not going to do this for ghc-7.10.3.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.38 2016/01/20 16:08:29 kili Exp $
d59 1
a59 1
MODGHC_SETUP_CONF_ARGS +=	--with-gcc=${CC}
@


1.38
log
@Merge -main and -doc subpackages.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.37 2015/12/20 11:04:27 kili Exp $
d59 1
a59 1
MODGHC_SETUP_CONF_ARGS ?=
@


1.37
log
@Update to ghc-7.10.3.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.36 2015/09/19 07:42:56 kili Exp $
a73 4
.  endif

.  if ${MODGHC_BUILD:L:Mhaddock}
BUILD_DEPENDS +=		lang/ghc,-doc
@


1.36
log
@Update to ghc-7.10.2.

Updates to all hs-* ports related to meta/haskell-platform will
follow soon. Other hs-* ports will be fixed during the next days.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.35 2015/01/01 19:25:36 kili Exp $
d9 1
a9 1
MODGHC_VER =		7.10.2
@


1.35
log
@Bugfix udpate to ghc-7.8.4.
Also, use a new(er) bootstrapper; note that we have to use 7.8.3
for this, because if the built ghc and the bootstrapper have identical
versions, things will fail badly. May be it's not the ghc but the
cabal version which is problematic, but at the moment, I really
don'y call about *this* problem.
Still marked as broken. I hope to send promised diffs and new ports
for discussion tomorrow and then enable ghc and haskell-platform
on monday.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.34 2014/11/22 20:23:22 kili Exp $
d9 1
a9 1
MODGHC_VER =		7.8.4
d30 2
d41 4
d50 2
a51 2
HOMEPAGE ?=			http://hackage.haskell.org/package/${MODGHC_HACKAGE_NAME}
MASTER_SITES =			http://hackage.haskell.org/package/${DISTNAME}/
d77 1
a77 2
BUILD_DEPENDS +=		devel/haddock \
				lang/ghc,-doc
d109 1
a109 2
		${MODGHC_SETUP_PROG} register --gen-script \
			--pkgpath="${PKGPATH}"; \
@


1.34
log
@Update to ghc-7.8.3, but mark as broken until all other
hs ports are done.

Please note that it still doesn't use shared libraries, so
still no ghci (and a lot of hs-ports not buildable) on i386.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.33 2014/06/19 18:58:02 kili Exp $
d9 1
a9 1
MODGHC_VER =		7.8.3
@


1.33
log
@Add comments to ports which meta/haskell-platform depends on, to
stop other people wasting time on updates which should not be done.

ian@@ ran into this (while working on devel/hs-aeson and
textproc/hs-attoparsec), and even I didn't notice before trying to
build all Haskell ports (including meta/haskell-platform) with his
diffs.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.32 2014/01/11 20:22:21 kili Exp $
d9 1
a9 1
MODGHC_VER =		7.6.3
d61 7
@


1.32
log
@Interactive ghc (ghci, runghc etc.) is currently broken again on i386.
So let's switch to compiling Setup scripts once more, to give at least
a few more hs packages to be built on i386, until I figure out a fix
for rts/Linker.c.
Unfortunately, the current breakage also affects template haskell,
which still leads to a lot of unbuildable ports, for example
devel/hs-vector.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.31 2013/10/22 20:03:21 kili Exp $
d7 2
@


1.31
log
@Adjust MASTER_SITES to follow the new layout of hackage.haskell.org, which switched
to hackage 2.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.30 2013/07/18 21:43:23 kili Exp $
d73 2
a74 4
		printf '\#!/bin/sh\nexec %s %s "$$@@"\n' \
			${LOCALBASE}/bin/runghc \
			$$s > ${MODGHC_SETUP_PROG} && \
		chmod +x ${MODGHC_SETUP_PROG} && \
@


1.30
log
@Update to ghc-7.6.3, revert my last two obsolete changes and
mark it as broken until all depending ports have been updated.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.29 2013/07/02 08:36:16 espie Exp $
d43 1
a43 1
MASTER_SITES =			http://hackage.haskell.org/packages/archive/${MODGHC_HACKAGE_NAME}/${MODGHC_HACKAGE_VERSION}/
@


1.29
log
@convert to using intermediate *TARGET, as discussed with a few people.
(the waf version actually works, contrary to my former patch, as
CONFIGURE_STYLE must be set before modules)
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.28 2013/03/11 11:20:27 espie Exp $
d7 1
a7 1
MODGHC_VER =		7.4.2
@


1.28
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.27 2013/01/20 17:51:14 kili Exp $
d86 2
a87 3
.  if !target(do-build)
do-build:
	@@cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
d89 3
a91 2
.   if ${MODGHC_BUILD:L:Mhaddock}
	@@cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
d93 4
a96 3
.   endif
.   if ${MODGHC_BUILD:L:Mregister}
	@@cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
d98 2
a99 2
			--pkgpath="${PKGPATH}"
	@@cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
d101 18
a118 1
.   endif
d123 1
a123 6
	@@cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
		${MODGHC_SETUP_PROG} copy --destdir=${DESTDIR}
.   if ${MODGHC_BUILD:L:Mregister}
	@@${INSTALL_SCRIPT} ${WRKBUILD}/register.sh ${PREFIX}/lib/ghc/${DISTNAME}
	@@${INSTALL_SCRIPT} ${WRKBUILD}/unregister.sh ${PREFIX}/lib/ghc/${DISTNAME}
.   endif
d128 1
a128 2
	@@cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
		${MODGHC_SETUP_PROG} test
@


1.27
log
@Enable profiling by default for ports containing Haskell libraries.

Suggested by David Schaefer.

Mark ghc broken temporarily until all necessary plist changes
are committed.

ok jasper@@ dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.26 2012/11/08 22:21:45 kili Exp $
d113 2
a114 2
.  if !target(do-regress)
do-regress:
@


1.26
log
@Use runghc for Setup.l?hs, which should always work now (with rthreads).

Bulk tests done by naddy@@ and sthen@@. thanks.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.25 2012/09/02 19:53:46 kili Exp $
d58 1
@


1.25
log
@Update to ghc-7.4.2, but keep it marked as broken (and not only for amd64).

Most of the -nopie changes are from pascal@@ (thanks); I only had to
merge them for ghc-7.4 and tweak configure and mk/config.mk.in.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.24 2011/07/25 21:45:15 kili Exp $
d72 4
a75 2
		${MODGHC_BIN} --make \
			-o ${MODGHC_SETUP_PROG} "$$s" && \
@


1.24
log
@Switch back to compiling Setup.l?hs and running the resulting program
instead of using runghc (the interpreter).

This is a *workaround* for the following two symptoms:

- Setup.hs: waitForProcess: resource exhausted (Resource temporarily
  unavailable)

- Setup.hs: fd:15: hGetContents: illegal operation (Inappropriate
  ioctl for device)

Note that this is not a *fix*. I'm sure there's some misbehaving
signal handler, either in runghc/ghci or in the ghc runtime library.

(No, it's *not* rts/posix/Signals.c:generic_handler(); I patched
it to preserve errno, but it didn't help)

Until I find the bug, it's better to let bulk builds pass without
(or with less) errors.

ok (with the workaround) espie@@
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.23 2011/06/30 21:26:15 kili Exp $
d7 1
a7 1
MODGHC_VER =		7.0.4
@


1.23
log
@Update to ghc-7.0.4.

i386 tests done by Jona Joachim (thanks!).
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.22 2011/04/23 20:16:38 kili Exp $
d72 2
a73 4
		printf '\#!/bin/sh\nexec %s %s "$$@@"\n' \
			${LOCALBASE}/bin/runghc \
			$$s > ${MODGHC_SETUP_PROG} && \
		chmod +x ${MODGHC_SETUP_PROG} && \
@


1.22
log
@Move almost all Haskell distfiles fetched from hackage.haskell.org
into a common subdirectory `ghc', and also move the ghc distfiles
there (from ghc-${MODGHC_VER}).

This will avoid potential conflicts of hs-* ports distfiles coming
from hackage.haskell.org with distfiles used by other ports.

Based on an idea from dcoppa@@ for databases/hs-redis.

ok dcoppa@@

If you want to save some bandwdith and disk space, see my mail to
ports@@, which contains a shell script that can move distfiles around
under your DISTDIR.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.21 2011/04/20 18:17:27 jeremy Exp $
d7 1
a7 1
MODGHC_VER =		7.0.3
@


1.21
log
@Use new style depends in comment.

OK jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.20 2011/04/13 15:20:15 kili Exp $
d45 1
@


1.20
log
@For cabalized haskell ports, let Setup configure and Setup build
be a little bit more verbose. It's annoying if you don't see what's
going on during configure and which options are passed to ghc during
build.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.19 2011/04/11 14:30:32 kili Exp $
d17 2
a18 2
# i.e. RUN_DEPENDS = :ghc-${MODGHC_VER}:lang/ghc, and not
# just ::lang/ghc.
@


1.19
log
@Update to 7.0.3.

ok jasper@@ (who also gave an ok to all the depending updates).
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.18 2010/12/15 13:59:54 ajacoutot Exp $
d79 1
a79 1
			configure -g -O --prefix=${PREFIX} \
d87 1
a87 1
		${MODGHC_SETUP_PROG} build
@


1.18
log
@avialable -> available
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.17 2010/11/26 17:27:38 espie Exp $
d7 1
a7 1
MODGHC_VER =		6.12.3
@


1.17
log
@use =${VERSION} dialect
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.16 2010/11/17 08:05:17 espie Exp $
d28 1
a28 1
# Finally, set it to or add "hackage" if the distfiles are avialable on
@


1.16
log
@new depends
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.15 2010/11/03 21:32:08 kili Exp $
d35 1
a35 1
RUN_DEPENDS +=		ghc-${MODGHC_VER}:lang/ghc
@


1.15
log
@Add a `pkgpath' field to installed GHC libraries. Only applies to
libraries not coming together with ghc. This allows for looking up
a library's PKGPATH by running

        ghc-pkg field $pkgname pkgpath

where $pkgname is the GHC library name without the `hs-' prefix,
for example `ghc-paths'.

looks good to jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.14 2010/10/28 13:49:09 jasper Exp $
d20 1
a20 1
BUILD_DEPENDS +=	::lang/ghc
d35 1
a35 1
RUN_DEPENDS +=		:ghc-${MODGHC_VER}:lang/ghc
d60 2
a61 2
BUILD_DEPENDS +=		::devel/haddock \
				::lang/ghc,-doc
@


1.14
log
@Move things around a little bit for Haskell libraries (built with
cabal and without nort), to avoid collisions with other (non-Haskell)
ports;

- Documentation is installed as ${PREFIX}/share/doc/hs-$foo instead of
  ${PREFIX}/share/doc/$foo.

- The library itself (and its interface files) is installed as
  ${PREFIX}/lib/ghc/$foo instead of ${PREFIX}/lib/$foo.

- Additional files will be installed in ${PREFIX}/share/hs-$foo instead
  of ${PREFIX}/share/foo.

from kili@@

depending port's plists will be adjusted in a few
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.13 2010/09/23 12:26:37 jasper Exp $
d94 2
a95 1
		${MODGHC_SETUP_PROG} register --gen-script
@


1.13
log
@- fix URL
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.12 2010/09/22 22:09:53 jasper Exp $
d53 6
d105 2
a106 2
	@@${INSTALL_SCRIPT} ${WRKBUILD}/register.sh ${PREFIX}/lib/${DISTNAME}
	@@${INSTALL_SCRIPT} ${WRKBUILD}/unregister.sh ${PREFIX}/lib/${DISTNAME}
@


1.12
log
@- append lang/ghc to CATEGORIES iff !nort

ok kili@@
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.11 2010/09/22 22:02:38 jasper Exp $
d29 1
a29 1
# hackage.org.
@


1.11
log
@- fix a variable name in comment

ok kili@@
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.10 2010/06/18 21:37:16 kili Exp $
d36 1
@


1.10
log
@Require ghc-doc to get all links enabled for ports that use haddock.

This needs a bump to all ports with MODGHC_BUILD=haddock, but there
are some more changes pending, so I'll not du the bumps now.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.9 2010/06/15 15:34:03 kili Exp $
d17 1
a17 1
# i.e. RUN_DEPENDS = :ghc-${MODGHC_VERSION}:lang/ghc, and not
@


1.9
log
@Update to ghc-6.12.3 (bugfix release), plus some minor changes:

- Use integer-gmp again.

- Cleanout the extracted bootstrap directory right after installing it
  to save some disk space.

- Use ${MAKE_ENV} instead ${MODGHC_SETUP_CONF_ENV} in ghc.port.mk (in
  do-configure, use both).

- Don't compile Setup.l?hs, just use the interpreter (runghc) in
  ghc.port.mk. This speeds up the build of most ports depending on
  ghc and using a cabal-style build.

Necessary bumps and WANTLIB changes in ports using ghc will follow
later this evening.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.8 2010/05/06 20:00:19 kili Exp $
d53 2
a54 1
BUILD_DEPENDS +=		::devel/haddock
@


1.8
log
@Change ghc.port.mk to allow addition of flags to MODGHC_SETUP_PROG by
just setting MODGHC_SETUP_CONF_ARGS (which is now empty by default).

Add dblatex-created documentation.

While here, use our INSTALL* macros where possible to get correct
permissions (noticed by dcoppa@@). This does *not* fix the permissions
of libraries and interface files installed by Cabal-based tools,
because the permissions are hard-coded in Cabal, and I'm not going
to touch and fix Cabal ever, because IMHO it's completely broken
by design. (If you want to read some of this madness, have a look
at libraries/Cabal/Distribution/Compat/CopyFile.hs or even
libraries/Cabal/Distribution/Simple/Install.hs)

Expect some breakage of depending ports (at least of devel/darcs) and
some necessary WANTLIB changes, which will be fixed soonish.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.7 2010/04/22 21:49:37 kili Exp $
d7 1
a7 1
MODGHC_VER =		6.12.2
d50 1
a50 1
MODGHC_SETUP_CONF_ENV ?=	HOME=${PORTHOME} PATH=${PATH}
d63 4
a66 2
		${MODGHC_BIN} --make \
			-o ${MODGHC_SETUP_PROG} "$$s" && \
d69 1
a69 1
	cd ${WRKBUILD} && exec ${SETENV} ${MODGHC_SETUP_CONF_ENV} \
d78 1
a78 1
	@@cd ${WRKBUILD} && exec ${SETENV} ${MODGHC_SETUP_CONF_ENV} \
d94 1
a94 1
	@@cd ${WRKBUILD} && exec ${SETENV} ${MODGHC_SETUP_CONF_ENV} \
d104 1
a104 1
	@@cd ${WRKBUILD} && exec ${SETENV} ${MODGHC_SETUP_CONF_ENV} \
@


1.7
log
@
Update to 6.12.2.

Many thanks to Darrin Chandler and dcoppa@@ for testing, reporting about
broken stuff, missing dependencies here and in ports depending on ghc.

Notes and rants:

- Bootstrapping is done using precompiled binaries, since .hc
  bootstrapping still doesn't work. I really hate this.

  THIS MEANS THAT GHC IS NOW AND WILL STAY LEGACY-ONLY (i386 and amd64)

  At least until someone fixes it. I tried for more than two year
  (well, only in my spare time and during my vacations) and failed.

- libgmp is currently disabled, because I didn't yet hack the GHC build
  system to use the system libgmp instead of the patched one included
  in GHC.

- The haddock ncluded in the ghc distfile is replaced by the version
  of haddock found in devel/haddock. Haddock itself is @@commented
  in the ghc PLIST. Unfortunately, this needs an ugly hack that
  introduces an otherwise useless pseudo flavor `no_deps' in
  devel/haddock.

- CLDouble has been removed from GHC some time ago, because it was
  an alias for double (AFAIK there's now support for long double
  in GHC). As this isn't a really big problem, it currently breaks
  c2hs, which I'll mark broken temporarily before committing the
  ghc update.

- The external codeset defaults to latin1 (suggested by Simon Marlow)
  and can be overridden by setting the HS_ENCODING to any codeset
  supported by libiconv.

- ghc.port.mk still needs some love, especially for letting a port add
  additional parameters to certain invocations of ${MODGHC_SETUP_PROG}.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.6 2007/07/21 17:14:57 kili Exp $
d49 1
a49 1
MODGHC_SETUP_CONF_ARGS ?=	configure -g -O --prefix=${PREFIX}
d68 3
a70 1
		${MODGHC_SETUP_PROG} ${MODGHC_SETUP_CONF_ARGS}
@


1.6
log
@
Update to 6.6.1. With helpful hints from Don Stewart and espie@@.
Thanks to all the testers and to steven@@, who was so kind to
build the HC files for bootstrapping on amd64.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.5 2006/11/20 13:07:20 espie Exp $
d5 1
a5 2
# See comments in lang/ghc/Makefile for more information
ONLY_FOR_ARCHS=	i386 amd64
d7 4
a10 1
MODGHC_VER=	6.6.1
d20 77
a96 1
BUILD_DEPENDS+=	::lang/ghc
d98 5
a102 4
# Only add runtime when it is actually needed (by default yes)
MODGHC_RUNTIME?=Yes
. if ${MODGHC_RUNTIME:L} == "yes"
RUN_DEPENDS+=	:ghc-${MODGHC_VER}:lang/ghc
@


1.5
log
@fix a few obviously wrong dependencies, and remove extra shells in ghc.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.4 2006/07/30 13:21:38 alek Exp $
a6 1
#                   sparc
d8 10
d22 3
a24 2
.if ${MODGHC_RUNTIME:L} == "yes"
RUN_DEPENDS+=	::lang/ghc
@


1.4
log
@Add MODGHC_RUNTIME to add/remove runtime dependency on lang/ghc.

From Jon Olsson <jon@@vexed.se>
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.3 2005/02/19 03:42:11 dons Exp $
d9 1
a9 1
BUILD_DEPENDS+=	bin/ghc::lang/ghc
d14 1
a14 1
RUN_DEPENDS+=	bin/ghc::lang/ghc
@


1.3
log
@Port ghc-6.2.2 to amd64.

ok pvalchev@@
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.2 2005/02/14 01:26:56 dons Exp $
d10 4
d15 1
@


1.2
log
@Update ghc to 6.2.2.
Adds support for ghci. More stable foreign function interface.

Just i386 at the moment.

ok sturm@@ pvalchev@@
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.1 2004/08/10 08:14:35 xsa Exp $
d6 2
a7 2
ONLY_FOR_ARCHS=	i386 
#                   sparc amd64
@


1.1
log
@
prepare for new-style MODULES; ok dons@@.
@
text
@d1 1
a1 1
# $OpenBSD: ghc.port.mk,v 1.3 2004/04/26 23:48:50 dons Exp $
d6 2
a7 1
ONLY_FOR_ARCHS=	i386 sparc amd64
@

