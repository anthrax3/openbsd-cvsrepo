head	1.2;
access;
symbols
	OPENBSD_3_9:1.1.1.1.0.2
	OPENBSD_3_9_BASE:1.1.1.1
	avsm_23-Sep-2005:1.1.1.1
	avsm:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2006.05.29.03.55.33;	author avsm;	state dead;
branches;
next	1.1;

1.1
date	2005.09.23.14.27.27;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.09.23.14.27.27;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to ocamlduce-3.09.2pl1

enough statically-typed ML/XML to warm even the hardest C programmers heart
@
text
@$OpenBSD: patch-Makefile_ocamlduce,v 1.1 2005/09/23 14:27:27 avsm Exp $
--- Makefile.ocamlduce.orig	Fri Sep 23 14:44:26 2005
+++ Makefile.ocamlduce	Fri Sep 23 14:53:27 2005
@@@@ -396,17 +396,32 @@@@ clean::
 	rm -f ocamlducedoc*
 	cd ocamldoc && $(MAKE) clean
 
+NAT_BIN= ocamlducec.opt ocamlduceopt.opt ocamlducedep.opt \
+         ocamlducedoc.opt ocamlduceopt
+NAT_LIB= ocamlduce.cmxa ocamlduce.a
+BYT_BIN= ocamlducec ocamlduce ocamlducedep ocamlducedoc
+BYT_LIB= ocamlduce.cma stdlib/ocamlduce.cmi \
+         cduce_types.cmi stdlib/ocamlduce.mli
 
 # Findlib installation
 
-INSTALL_FILES= \
- ocamlducec ocamlduce ocamlducedep ocamlducedoc ocamlduce.cma \
- ocamlduceopt ocamlduce.cmxa ocamlduce.a \
- ocamlducec.opt ocamlduceopt.opt ocamlducedep.opt ocamlducedoc.opt \
- stdlib/ocamlduce.cmi cduce_types.cmi stdlib/ocamlduce.mli
+INSTALL_FILES= ${NAT_BIN} ${NAT_LIB} ${BYT_BIN} ${BYT_LIB}
 
 install: FORCE
 	ocamlfind install ocamlduce META $(wildcard $(INSTALL_FILES))
 
 uninstall: FORCE
-	ocamlfind remove ocamlduce
\ No newline at end of file
+	ocamlfind remove ocamlduce
+
+# Normal installation
+
+minstall: FORCE
+	mkdir -p ${DESTDIR}${PREFIX}/lib/ocaml
+	cp ${BYT_LIB} ${DESTDIR}${PREFIX}/lib/ocaml
+	cp ${BYT_BIN} ${DESTDIR}${PREFIX}/bin
+
+minstallopt: FORCE
+	mkdir -p ${DESTDIR}${PREFIX}/lib/ocaml
+	cp ${NAT_LIB} ${DESTDIR}${PREFIX}/lib/ocaml
+	cp ${NAT_BIN} ${DESTDIR}${PREFIX}/bin
+
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@initial import of ocamlduce-3.08.4pl3
--
OCamlDuce is a merger between OCaml and CDuce. It comes as a modified
version of OCaml which integrates CDuce features.  CDuce is a modern
XML-oriented functional language with innovative features: it is
statically type-safe, efficient, and offer powerful constructions
to work with XML documents.

@
text
@@
