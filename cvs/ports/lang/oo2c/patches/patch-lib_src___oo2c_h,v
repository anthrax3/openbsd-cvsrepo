head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.24
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.20
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.22
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.18
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.16
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.14
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.12
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.10
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.8
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.01.18.12.03.19;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.1
log
@- various fixes, as GCC would generate incorrect code (what's new..)

from Alexander Shiryaev (MAINTAINER)
ok landry@@
@
text
@$OpenBSD$
--- lib/src/__oo2c.h.orig	Sat Dec 24 15:55:21 2005
+++ lib/src/__oo2c.h	Tue Jan 18 13:47:55 2011
@@@@ -152,7 +152,7 @@@@ extern OOC_INT32 _cmp32(const OOC_CHAR32* l, const OOC
 /* def: _x MOD _y >= 0 for _y>0, and undefined otherwise */
 #define _div(_x,_y) ({                               \
   typeof(_x) _quot = _x / _y;                        \
-  if ((_x<0) && (_y>0) && (_quot*_y!=_x)) _quot--;   \
+  if ((((_x<0) && (_y>0)) || ((_x>0) && (_y<0))) && (_quot*_y!=_x)) _quot--;   \
   _quot; })
 
 /* MOD(integer, integer) -- note: macro uses gcc style expression statement */
@@@@ -164,7 +164,7 @@@@ extern OOC_INT32 _cmp32(const OOC_CHAR32* l, const OOC
 /* def: _x MOD _y >= 0 for _y>0, and undefined otherwise */
 #define _mod(_x,_y) ({                               \
   typeof(_x) _rem = _x % _y;                         \
-  if ((_x<0) && (_y>0) && (_rem != 0)) _rem += _y;   \
+  if ((((_x<0) && (_y>0)) || ((_x>0) && (_y<0))) && (_rem != 0)) _rem += _y;   \
   _rem; })
 
 /* i IN s */
@
