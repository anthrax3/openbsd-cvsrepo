head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.20
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.18
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.16
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.12
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.14
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.10.10.22.09.29;	author stu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to eltclsh-1.12.

ok matthieu@@
@
text
@$OpenBSD$

Adjust for OpenBSD-specific Tcl package path layout.

--- src/loop.c.orig	Wed Oct 10 01:35:23 2012
+++ src/loop.c	Wed Oct 10 01:37:23 2012
@@@@ -57,7 +57,7 @@@@ elTclshLoop(int argc, char **argv, ElTclAppInitProc ap
 #endif /* TCL_VERSION */
 {
    Tcl_Interp *interp;
-   Tcl_Obj *resultPtr, *obj;
+   Tcl_Obj *resultPtr;
 #if TCL_MAJOR_VERSION >= 8 && TCL_MINOR_VERSION >= 4
    const
 #endif
@@@@ -106,12 +106,14 @@@@ elTclshLoop(int argc, char **argv, ElTclAppInitProc ap
    }
 
    /* configure standard path for packages */
+/*
    obj = Tcl_GetVar2Ex(interp, "auto_path", NULL, TCL_GLOBAL_ONLY);
    if (!obj) obj = Tcl_NewListObj(0, NULL);
 
    Tcl_ListObjAppendElement(interp, obj, Tcl_NewStringObj(ELTCLSH_DATA, -1));
    Tcl_SetVar2Ex(interp, "auto_path", NULL, obj, TCL_GLOBAL_ONLY);
 
+*/
 
    /* require eltclsh extension. In case this fails (typically during install,
     * before pkgIndex.tcl is built), print the error message but don't give up
@
