head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.26
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.24
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.18
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.16
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.14
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	jasper_20111501:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2011.01.15.13.07.50;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.01.15.13.07.50;	author jasper;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@Oberon-2 is clean and simple programming language.

This is portable compiler that translates Oberon-2 into bytecode, which
can be either interpreted or dynamically translated into machine code.
Dynamic translation uses a portable interface modelled on the one in GNU
Lightning, but is so far implemented only on x86 machines.  The
implementation includes a full garbage collector, and comes with
profiling tools and a simple GUI debugger.

This implementation of the Oberon-2 language does not include a version
of the Oberon-2 operating system and programming environment; instead,
programs are edited with the tools of the host operating system and
compiled into executables that run like other programs on the host
system.

The compiler is written in Objective Caml, and the runtime system is
written in C.
@


1.1.1.1
log
@import obc-2.9.1

Oberon-2 is clean and simple programming language.
This is portable compiler that translates Oberon-2 into bytecode, which
can be either interpreted or dynamically translated into machine code.
Dynamic translation uses a portable interface modelled on the one in GNU
Lightning, but is so far implemented only on x86 machines.  The
implementation includes a full garbage collector, and comes with
profiling tools and a simple GUI debugger.
[...]

    from Alexander Shiryaev (MAINTAINER) with tweaks by me
	
	    ok landry@@
@
text
@@
