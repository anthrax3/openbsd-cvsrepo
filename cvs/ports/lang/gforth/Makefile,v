head	1.21;
access;
symbols
	OPENBSD_6_0:1.19.0.2
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.2
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.2
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.4
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	jasper_20081025:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.21
date	2016.09.01.10.53.27;	author jasper;	state Exp;
branches;
next	1.20;
commitid	LdsIxWmxagN2Kq33;

1.20
date	2016.08.19.14.08.44;	author naddy;	state Exp;
branches;
next	1.19;
commitid	LODJoWJn8zaRPasw;

1.19
date	2016.06.13.11.22.09;	author jca;	state Exp;
branches;
next	1.18;
commitid	eaCEzKmCAwbC4ZW5;

1.18
date	2016.01.28.18.34.08;	author jasper;	state Exp;
branches;
next	1.17;
commitid	jryLsGDEjupmSteS;

1.17
date	2016.01.28.08.41.39;	author jasper;	state Exp;
branches;
next	1.16;
commitid	iENegIssSnDKsoO0;

1.16
date	2016.01.27.08.13.08;	author jasper;	state Exp;
branches;
next	1.15;
commitid	xMANR8qt1gExmsyy;

1.15
date	2016.01.26.22.24.58;	author jasper;	state Exp;
branches;
next	1.14;
commitid	PxUK7dwp4PNQMITf;

1.14
date	2016.01.26.08.26.43;	author jasper;	state Exp;
branches;
next	1.13;
commitid	5FNxrrDqnGCRaJf1;

1.13
date	2015.02.16.22.57.09;	author naddy;	state Exp;
branches;
next	1.12;
commitid	0dx3c9ckf7dE4tx1;

1.12
date	2013.08.27.21.53.10;	author bcallah;	state Exp;
branches;
next	1.11;

1.11
date	2013.03.11.11.20.27;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2012.10.14.20.18.56;	author landry;	state Exp;
branches;
next	1.9;

1.9
date	2012.06.04.21.02.15;	author pascal;	state Exp;
branches;
next	1.8;

1.8
date	2011.03.14.09.17.01;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2011.01.13.15.35.39;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2010.10.24.21.06.28;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2010.10.18.19.20.41;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2009.11.17.01.04.43;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2009.04.01.17.17.37;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.25.14.54.23;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.25.10.40.37;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.10.25.10.40.37;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.21
log
@retire sparc
@
text
@# $OpenBSD: Makefile,v 1.20 2016/08/19 14:08:44 naddy Exp $

ONLY_FOR_ARCHS =	amd64 i386 mips64 mips64el powerpc sparc64
USE_WXNEEDED =		Yes

COMMENT =		ANSI/200x Forth interpreter and compiler

V =			0.7.3
DISTNAME =		gforth-${V}
REVISION =		2
CATEGORIES =		lang

HOMEPAGE =		http://www.gnu.org/software/gforth/

MAINTAINER =		Jasper Lievisse Adriaanse <jasper@@openbsd.org>

# GPLv3
PERMIT_PACKAGE_CDROM =	Yes

MASTER_SITES =		${MASTER_SITE_GNU:=gforth/}

WANTLIB += avcall c callback ffi ltdl m pthread

LIB_DEPENDS =		devel/ffcall \
			devel/libffi>=3.2.1p0 \
			devel/libtool,-ltdl

CONFIGURE_STYLE =	gnu
CONFIGURE_ENV =		CPPFLAGS="-I${LOCALBASE}/include" \
			LDFLAGS="-L${LOCALBASE}/lib"

CFLAGS +=		-Dunix
FAKE_FLAGS+=		DESTDIR="${WRKINST}"

KERNEL = 		kernl${WORDSIZE}${ENDIAN}.fi
SUBST_VARS +=		KERNEL V

.include <bsd.port.arch.mk>

# The filename of the gForth kernel is based on the wordsize
# and the byte order of the system.
.if ${PROPERTIES:Mlp64}
WORDSIZE =	64
.else
WORDSIZE =	32
.endif

.if ${PROPERTIES:Mbe}
ENDIAN =	b
.else
ENDIAN =	l
.endif

pre-configure:
	sed -i "s,@@CC@@,& -I${LOCALBASE}/include -L${LOCALBASE}/lib," \
		${WRKSRC}/envos.fs.in

# Remove a bunch of unused and unneeded directories
post-install:
	find ${PREFIX}/share/gforth/arch/ -type d -empty | xargs rm -fr
	${INSTALL_DATA_DIR} ${PREFIX}/share/emacs/site-lisp
	${INSTALL_DATA} ${WRKSRC}/gforth.el ${PREFIX}/share/emacs/site-lisp

.include <bsd.port.mk>
@


1.20
log
@switch from modifying LDFLAGS to USE_WXNEEDED; ok jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2016/06/13 11:22:09 jca Exp $
d3 1
a3 1
ONLY_FOR_ARCHS =	amd64 i386 mips64 mips64el powerpc sparc sparc64
@


1.19
log
@Annotate gforth with ld -z,wxneeded

gforth uses libffcall which does nasty W^X under the hood.

ok jasper@@ (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2016/01/28 18:34:08 jasper Exp $
d4 1
d30 1
a30 1
			LDFLAGS="-L${LOCALBASE}/lib -Wl,-z,wxneeded"
@


1.18
log
@use sed -i
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2016/01/28 08:41:39 jasper Exp $
d9 1
a9 1
REVISION =		1
d28 2
a29 2
CONFIGURE_ENV =		CPPFLAGS="-I/usr/local/include" \
			LDFLAGS="-L/usr/local/lib"
@


1.17
log
@remove 'XXX' now that libffi has been fixed
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2016/01/27 08:13:08 jasper Exp $
d54 2
a55 1
	${SUBST_CMD} ${WRKSRC}/envos.fs.in
@


1.16
log
@- submitted upstream
- take maintainer
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2016/01/26 22:24:58 jasper Exp $
d9 1
a9 1
REVISION =		0
d24 1
a24 1
			devel/libffi \
a26 1
# XXX: -pthread is added here while libffi.pc doesn't advocate it
d29 1
a29 1
			LDFLAGS="-L/usr/local/lib -pthread"
@


1.15
log
@- update to gforth-0.7.3
- use headers/libraries in ${LOCALBASE} when building C extensions
- update license marker
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2016/01/26 08:26:43 jasper Exp $
d9 1
d13 2
@


1.14
log
@shuffle things around to make updating easier and reduce differences with upstream
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2015/02/16 22:57:09 naddy Exp $
d5 1
a5 1
COMMENT =		ANS Standard Forth interpreter and compiler
d7 1
a7 1
V =			0.6.2
a8 1
REVISION =		5
d11 1
a11 1
HOMEPAGE =		http://bernd-paysan.de/gforth.html
d13 1
a13 1
# GPLv2+
d18 1
a18 1
WANTLIB =		c m
d20 5
d26 2
d50 3
@


1.13
log
@Drop USE_GROFF from ports where the formatting differences are acceptable
or mandoc provides the more useful output.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2013/08/27 21:53:10 bcallah Exp $
d7 3
a9 2
DISTNAME =		gforth-0.6.2
REVISION =		4
d27 1
a27 1
SUBST_VARS +=		KERNEL
@


1.12
log
@Update HOMEPAGE and regen distinfo.
Bump REVISION.
From Donovan Watteau <tsoomi AT gmail dot com>
While here, add mips64 to the arch list. Tested by me on an O2.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2013/03/11 11:20:27 espie Exp $
a20 1
USE_GROFF =	Yes
@


1.11
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2012/10/14 20:18:56 landry Exp $
d3 1
a3 1
ONLY_FOR_ARCHS =	amd64 i386 mips64el powerpc sparc sparc64
d8 1
a8 1
REVISION =		3
d11 1
a11 1
HOMEPAGE =		http://www.jwdt.com/~paysan/gforth.html
@


1.10
log
@Add a patch allowing gforth to build on mips64el.
From Donovan Watteau on ports@@, thx
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2012/06/04 21:02:15 pascal Exp $
a14 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM =	Yes
PERMIT_DISTFILES_FTP =	Yes
@


1.9
log
@Use PROPERTIES to check for be/le, reorganise Makefile to make usd of
bsd.port.arch.mk and convert the WORDSIZE check to PROPERTIES while here,
requested by naddy@@.

ok jasper@@ naddy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2011/03/14 09:17:01 sthen Exp $
d3 1
a3 1
ONLY_FOR_ARCHS =	amd64 i386 powerpc sparc sparc64
@


1.8
log
@fix various typos, from Anthony J. Bentley with a few tweaks by myself
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2011/01/13 15:35:39 jasper Exp $
d32 1
a32 8
# Remove a bunch of unused and unneeded directories
post-install:
	find ${PREFIX}/share/gforth/arch/ -type d -empty | xargs rm -fr
	${INSTALL_DATA_DIR} ${PREFIX}/share/emacs/site-lisp
	${INSTALL_DATA} ${WRKSRC}/gforth.el ${PREFIX}/share/emacs/site-lisp


.include <bsd.port.mk>
d36 1
a36 2
.for m in ${MACHINE_ARCH}
.if ${LP64_ARCHS:L:M$m}
a40 1
.endfor
d42 1
a42 3
.if ${MACHINE_ARCH} == "hppa" || ${MACHINE_ARCH} == "mips64" \
	|| ${MACHINE_ARCH} == "powerpc" || ${MACHINE_ARCH} == "sh" \
	|| ${MACHINE_ARCH} == "sparc" || ${MACHINE_ARCH} == "sparc64"
d47 8
@


1.7
log
@- adjust gforthmi as well to non-standard dictionary path
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2010/10/24 21:06:28 sthen Exp $
d8 1
a8 1
REVISION =		2
@


1.6
log
@new lib_depends/revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2010/10/18 19:20:41 espie Exp $
d8 1
a8 1
REVISION =		1
@


1.5
log
@USE_GROFF=Yes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2009/11/17 01:04:43 kurt Exp $
d8 1
a8 1
PKGNAME =		${DISTNAME}p1
@


1.4
log
@Fix use of uninitalized memory. Found by malloc option J. okay naddy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2009/04/01 17:17:37 jasper Exp $
d24 1
@


1.3
log
@- enable for powerpc. it's working just fine, i just never got around testing it
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2008/10/25 14:54:23 jasper Exp $
d8 1
a8 1
PKGNAME =		${DISTNAME}p0
@


1.2
log
@- typo in DESCR
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2008/10/25 10:40:37 jasper Exp $
d3 1
a3 1
ONLY_FOR_ARCHS =	amd64 i386 sparc sparc64
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d8 1
@


1.1.1.1
log
@import gforth 0.6.2

Gforth is a fast and portable implementation of the ANS Forth language.
It works nicely with the Emacs editor, offers some nice features such as
input completion and history, backtraces, a decompiler and a powerful
locals facility, and it even has a manual. Gforth combines traditional
implementation techniques with newer techniques for portability and
performance performance: its inner innerpreter is direct threaded with
several optimizations, but you can also use a traditional-style indirect
threaded interpreter.

originally based on a port by jack woehr, but completely overhauled since.
@
text
@@
