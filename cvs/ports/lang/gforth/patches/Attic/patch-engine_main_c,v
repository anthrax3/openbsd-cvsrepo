head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.1.1.0.30
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.26
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.24
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.22
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.20
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.18
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.16
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.14
	OPENBSD_5_0:1.1.1.1.0.12
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.10
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.6
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.4
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	jasper_20081025:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.01.26.22.24.58;	author jasper;	state dead;
branches;
next	1.1;
commitid	PxUK7dwp4PNQMITf;

1.1
date	2008.10.25.10.40.37;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.10.25.10.40.37;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update to gforth-0.7.3
- use headers/libraries in ${LOCALBASE} when building C extensions
- update license marker
@
text
@$OpenBSD: patch-engine_main_c,v 1.1 2008/10/25 10:40:37 jasper Exp $
--- engine/main.c.orig	Sat Oct 25 00:36:45 2008
+++ engine/main.c	Sat Oct 25 00:38:05 2008
@@@@ -70,8 +70,18 @@@@ va_alist clist;
 
 void engine_callback(Xt* fcall, void * alist)
 {
+  Cell *rp = RP;
+  Cell *sp = SP;
+  Float *fp = FP;
+  Address lp = LP;
+
   clist = (va_alist)alist;
-  engine(fcall, SP, RP, FP, LP);
+  engine(fcall, sp, rp, fp, lp);
+
+  RP = rp;
+  SP = sp;
+  FP = fp;
+  LP = lp;
 }
 #endif
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import gforth 0.6.2

Gforth is a fast and portable implementation of the ANS Forth language.
It works nicely with the Emacs editor, offers some nice features such as
input completion and history, backtraces, a decompiler and a powerful
locals facility, and it even has a manual. Gforth combines traditional
implementation techniques with newer techniques for portability and
performance performance: its inner innerpreter is direct threaded with
several optimizations, but you can also use a traditional-style indirect
threaded interpreter.

originally based on a port by jack woehr, but completely overhauled since.
@
text
@@
