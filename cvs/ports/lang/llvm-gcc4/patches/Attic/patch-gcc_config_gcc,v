head	1.4;
access;
symbols
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	sthen_20090622:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2011.12.16.11.57.28;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2010.04.29.16.45.53;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2009.11.02.23.00.08;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.22.22.37.31;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.22.22.37.31;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@llvm-gcc4 is no longer supported; reminded by jasper@@
@
text
@--- gcc/config.gcc.orig	Fri Apr  9 22:23:42 2010
+++ gcc/config.gcc	Wed Apr 28 23:09:26 2010
@@@@ -611,6 +611,11 @@@@ case ${target} in
     *-*-openbsd2.*|*-*-openbsd3.[012])
       tm_defines="${tm_defines} HAS_LIBC_R=1" ;;
   esac
+  case ${target} in
+    *-*-openbsd[1-3].*|*-*-openbsd4.[012]) ;;
+    *)
+      default_use_cxa_atexit=yes ;;
+  esac
   ;;
 *-*-rtems*)
   case ${enable_threads} in
@@@@ -677,7 +682,7 @@@@ alpha*-*-netbsd*)
 	;;
 alpha*-*-openbsd*)
 	tm_defines="${tm_defines} OBSD_NO_DYNAMIC_LIBRARIES OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_FUNCTION_SIZE OBSD_HAS_DECLARE_OBJECT"
-	tm_file="alpha/alpha.h openbsd.h alpha/openbsd.h"
+	tm_file="alpha/alpha.h alpha/elf.h openbsd.h openbsd-libpthread.h alpha/openbsd.h"
 	# default x-alpha is only appropriate for dec-osf.
 	target_cpu_default="MASK_GAS"
 	tmake_file="alpha/t-alpha alpha/t-ieee"
@@@@ -1563,7 +1568,7 @@@@ m68010-*-netbsdelf* | m68k*-*-netbsdelf*)
 m68k*-*-openbsd*)
 	# needed to unconfuse gdb
 	tm_defines="${tm_defines} OBSD_OLD_GAS TARGET_DEFAULT=(MASK_68020|MASK_68881|MASK_BITFIELD)"
-	tm_file="m68k/m68k.h openbsd.h m68k/openbsd.h"
+	tm_file="m68k/m68k.h openbsd.h openbsd-libpthread.h m68k/openbsd.h"
 	tmake_file="t-libc-ok t-openbsd m68k/t-openbsd"
 	# we need collect2 until our bug is fixed...
 	use_collect2=yes
@@@@ -1653,7 +1658,7 @@@@ mips*-*-linux*)				# Linux MIPS, either endian.
 mips*-*-openbsd*)
 	tm_defines="${tm_defines} OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_OBJECT OBSD_HAS_CORRECT_SPECS"
 	target_cpu_default="MASK_ABICALLS"
-	tm_file="mips/mips.h openbsd.h mips/openbsd.h mips/sdb.h"
+	tm_file="mips/mips.h openbsd.h openbsd-libpthread.h mips/openbsd.h mips/sdb.h"
 	case ${target} in
 	mips*el-*-openbsd*)
 	    tm_defines="${tm_defines} TARGET_ENDIAN_DEFAULT=0";;
@@@@ -1783,11 +1788,11 @@@@ pdp11-*-bsd)
 pdp11-*-*)
 	use_fixproto=yes
 	;;
-# port not yet contributed
-#powerpc-*-openbsd*)
-#	tmake_file="${tmake_file} rs6000/t-fprules rs6000/t-fprules-fpbit "
-#	extra_headers=
-#	;;
+powerpc-*-openbsd*)
+	tm_file="${tm_file} dbxelf.h elfos.h openbsd.h openbsd-libpthread.h freebsd-spec.h rs6000/sysv4.h rs6000/openbsd.h"
+	tmake_file="${tmake_file} rs6000/t-openbsd"
+	extra_options="${extra_options} rs6000/sysv4.opt"
+	;;
 powerpc64-*-linux*)
 	tm_file="${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h"
 	test x$with_cpu != x || cpu_is_64bit=yes
@@@@ -2268,7 +2273,7 @@@@ sparc-*-netbsdelf*)
 	extra_options="${extra_options} sparc/long-double-switch.opt"
 	;;
 sparc64-*-openbsd*)
-	tm_file="sparc/openbsd1-64.h ${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/sp64-elf.h openbsd.h sparc/openbsd64.h"
+	tm_file="sparc/openbsd1-64.h ${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/sp64-elf.h openbsd.h openbsd-libpthread.h sparc/openbsd64.h"
 	extra_options="${extra_options} sparc/little-endian.opt"
 	gas=yes gnu_ld=yes
 	with_cpu=ultrasparc
@@@@ -2534,7 +2539,7 @@@@ vax-*-netbsd*)
 	use_collect2=yes
 	;;
 vax-*-openbsd*)
-	tm_file="vax/vax.h vax/openbsd1.h openbsd.h vax/openbsd.h"
+	tm_file="vax/vax.h vax/openbsd1.h openbsd.h openbsd-libpthread.h vax/openbsd.h"
 	use_collect2=yes
 	;;
 vax-*-ultrix*)			# VAXen running ultrix
@


1.3
log
@update to llvm-gcc 4.2-2.7
ok sthen@@
@
text
@@


1.2
log
@update to 2.6
ok sthen@@
@
text
@d1 2
a2 2
--- gcc/config.gcc.orig	Fri Aug  7 01:47:35 2009
+++ gcc/config.gcc	Sat Oct 31 03:52:35 2009
d24 1
a24 18
@@@@ -1152,10 +1157,15 @@@@ i[34567]86-*-openbsd2.*|i[34567]86-*openbsd3.[0123])
 	;;
 i[34567]86-*-openbsd*)
 	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h"
-	tm_file="${tm_file} openbsd.h i386/openbsdelf.h"
+	tm_file="${tm_file} openbsd.h openbsd-libpthread.h i386/openbsdelf.h"
 	gas=yes
 	gnu_ld=yes
 	;;
+x86_64-*-openbsd*)
+        tm_file="i386/biarch64.h i386/i386.h i386/unix.h i386/att.h dbxelf.h elfos.h openbsd.h openbsd-libpthread.h i386/x86-64.h i386/openbsd64.h"
+        tm_file="${tm_file} exec-stack.h"
+        tmake_file="t-libc-ok t-openbsd i386/t-openbsd"
+        ;;
 i[34567]86-*-coff*)
 	tm_file="${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/i386-coff.h"
 	use_fixproto=yes
@@@@ -1555,7 +1565,7 @@@@ m68010-*-netbsdelf* | m68k*-*-netbsdelf*)
d33 1
a33 1
@@@@ -1645,7 +1655,7 @@@@ mips*-*-linux*)				# Linux MIPS, either endian.
d42 1
a42 1
@@@@ -1775,11 +1785,11 @@@@ pdp11-*-bsd)
d59 1
a59 1
@@@@ -2253,7 +2263,7 @@@@ sparc-*-netbsdelf*)
d68 1
a68 1
@@@@ -2519,7 +2529,7 @@@@ vax-*-netbsd*)
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
--- gcc/config.gcc.orig	Tue Jun 16 19:53:18 2009
+++ gcc/config.gcc	Mon Jun 22 00:53:54 2009
@@@@ -598,6 +598,11 @@@@ case ${target} in
d15 1
a15 1
@@@@ -664,7 +669,7 @@@@ alpha*-*-netbsd*)
d24 1
a24 1
@@@@ -1139,10 +1144,15 @@@@ i[34567]86-*-openbsd2.*|i[34567]86-*openbsd3.[0123])
d41 1
a41 1
@@@@ -1542,7 +1552,7 @@@@ m68010-*-netbsdelf* | m68k*-*-netbsdelf*)
d50 1
a50 1
@@@@ -1632,7 +1642,7 @@@@ mips*-*-linux*)				# Linux MIPS, either endian.
d59 1
a59 1
@@@@ -1762,11 +1772,11 @@@@ pdp11-*-bsd)
d76 1
a76 1
@@@@ -2240,7 +2250,7 @@@@ sparc-*-netbsdelf*)
d85 1
a85 1
@@@@ -2506,7 +2516,7 @@@@ vax-*-netbsd*)
@


1.1.1.1
log
@Import llvm-gcc4, not yet linked to the build. This is a work in
progress, largely based on the gcc port in ports/lang/gcc/4.2.
Requested by jsg@@.

It's somewhat usable on i386 (shared lib versions not yet properly
under control). Build on amd64 currently fails with -fPIC problems.

-- --
lvm-gcc is the LLVM C front end. It is a modified version of gcc
that compiles C/C++/ObjC programs into native objects, LLVM bitcode or
LLVM assembly language, depending upon the options.

By default, llvm-gcc compiles to native objects just like GCC does.
If the -emit-llvm option is given then it will generate LLVM bitcode
files instead. If -S (assembly) is also given, then it will generate
LLVM assembly.

Being derived from the GNU Compiler Collection, llvm-gcc has many of
gcc's features and accepts most of gcc's options. It handles a number
of gcc's extensions to the C programming language.
<sthen@@zephyr:/usr/ports/mystuff/lang/llvm-gcc4:9>$CVS: ----------------------------------------------------------------------
@
text
@@
