head	1.5;
access;
symbols
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	sthen_20090622:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2011.12.16.11.57.28;	author sthen;	state dead;
branches;
next	1.4;

1.4
date	2011.01.13.00.18.18;	author jeremy;	state Exp;
branches;
next	1.3;

1.3
date	2010.04.29.16.45.53;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2009.11.02.23.00.08;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.22.22.37.32;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.22.22.37.32;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.5
log
@llvm-gcc4 is no longer supported; reminded by jasper@@
@
text
@$OpenBSD: patch-gcc_tree_c,v 1.4 2011/01/13 00:18:18 jeremy Exp $
--- gcc/tree.c.orig	Mon May 24 13:19:31 2010
+++ gcc/tree.c	Mon Jan 10 12:49:16 2011
@@@@ -6935,11 +6935,11 @@@@ build_common_builtin_nodes (void)
 	  *q = TOLOWER (*p);
 	*q = '\0';
 
-	built_in_names[mcode] = concat ("__mul", mode_name_buf, "3", NULL);
+	built_in_names[mcode] = concat ("__mul", mode_name_buf, "3", (void *)0);
         local_define_builtin (built_in_names[mcode], ftype, mcode,
 			      built_in_names[mcode], ECF_CONST | ECF_NOTHROW);
 
-	built_in_names[dcode] = concat ("__div", mode_name_buf, "3", NULL);
+	built_in_names[dcode] = concat ("__div", mode_name_buf, "3", (void *)0);
         local_define_builtin (built_in_names[dcode], ftype, dcode,
 			      built_in_names[dcode], ECF_CONST | ECF_NOTHROW);
       }
@


1.4
log
@Use llvm 2.8 version.  Enable build on amd64 since it works now.
Bring library versioning under control and bump the major versions.
Mark as SHARED_ONLY. Remove TODO file as it is no longer needed.

OK @@sthen
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_tree_c,v 1.3 2010/04/29 16:45:53 jsg Exp $
@


1.3
log
@update to llvm-gcc 4.2-2.7
ok sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_tree_c,v 1.2 2009/11/02 23:00:08 jsg Exp $
--- gcc/tree.c.orig	Thu Mar  4 00:20:17 2010
+++ gcc/tree.c	Wed Apr 28 23:09:28 2010
@@@@ -6933,11 +6933,11 @@@@ build_common_builtin_nodes (void)
@


1.2
log
@update to 2.6
ok sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_tree_c,v 1.1.1.1 2009/06/22 22:37:32 sthen Exp $
--- gcc/tree.c.orig	Thu Aug 20 20:28:41 2009
+++ gcc/tree.c	Sat Oct 31 03:54:34 2009
@@@@ -6938,11 +6938,11 @@@@ build_common_builtin_nodes (void)
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_tree_c,v 1.6 2009/04/16 18:36:48 espie Exp $
--- gcc/tree.c.orig	Thu Mar 19 22:14:10 2009
+++ gcc/tree.c	Mon Jun 22 00:54:05 2009
@@@@ -6931,11 +6931,11 @@@@ build_common_builtin_nodes (void)
@


1.1.1.1
log
@Import llvm-gcc4, not yet linked to the build. This is a work in
progress, largely based on the gcc port in ports/lang/gcc/4.2.
Requested by jsg@@.

It's somewhat usable on i386 (shared lib versions not yet properly
under control). Build on amd64 currently fails with -fPIC problems.

-- --
lvm-gcc is the LLVM C front end. It is a modified version of gcc
that compiles C/C++/ObjC programs into native objects, LLVM bitcode or
LLVM assembly language, depending upon the options.

By default, llvm-gcc compiles to native objects just like GCC does.
If the -emit-llvm option is given then it will generate LLVM bitcode
files instead. If -S (assembly) is also given, then it will generate
LLVM assembly.

Being derived from the GNU Compiler Collection, llvm-gcc has many of
gcc's features and accepts most of gcc's options. It handles a number
of gcc's extensions to the C programming language.
<sthen@@zephyr:/usr/ports/mystuff/lang/llvm-gcc4:9>$CVS: ----------------------------------------------------------------------
@
text
@@
