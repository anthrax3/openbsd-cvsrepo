head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.8
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.6
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	sthen_20090622:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2011.12.16.11.57.28;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2009.06.22.22.37.32;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.22.22.37.32;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@llvm-gcc4 is no longer supported; reminded by jasper@@
@
text
@$OpenBSD: patch-gcc_prefix_c,v 1.1 2009/06/22 22:37:32 sthen Exp $
--- gcc/prefix.c.orig	Wed Jul 11 22:32:42 2007
+++ gcc/prefix.c	Mon Jun 22 00:54:01 2009
@@@@ -99,7 +99,7 @@@@ get_key_value (char *key)
 #endif
 
   if (prefix == 0)
-    prefix = getenv (temp = concat (key, "_ROOT", NULL));
+    prefix = getenv (temp = concat (key, "_ROOT", (void *)0));
 
   if (prefix == 0)
     prefix = std_prefix;
@@@@ -223,7 +223,7 @@@@ translate_name (char *name)
 	 together.  */
 
       old_name = name;
-      name = concat (prefix, &name[keylen + 1], NULL);
+      name = concat (prefix, &name[keylen + 1], (void *)0);
       free (old_name);
     }
 
@@@@ -261,11 +261,11 @@@@ update_path (const char *path, const char *key)
 
       if (key[0] != '$')
 	{
-	  key = concat ("@@", key, NULL);
+	  key = concat ("@@", key, (void *)0);
 	  free_key = true;
 	}
 
-      result = concat (key, &path[len], NULL);
+      result = concat (key, &path[len], (void *)0);
       if (free_key)
 	free ((char *) key);
       result = translate_name (result);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_prefix_c,v 1.3 2009/04/16 18:36:48 espie Exp $
@


1.1.1.1
log
@Import llvm-gcc4, not yet linked to the build. This is a work in
progress, largely based on the gcc port in ports/lang/gcc/4.2.
Requested by jsg@@.

It's somewhat usable on i386 (shared lib versions not yet properly
under control). Build on amd64 currently fails with -fPIC problems.

-- --
lvm-gcc is the LLVM C front end. It is a modified version of gcc
that compiles C/C++/ObjC programs into native objects, LLVM bitcode or
LLVM assembly language, depending upon the options.

By default, llvm-gcc compiles to native objects just like GCC does.
If the -emit-llvm option is given then it will generate LLVM bitcode
files instead. If -S (assembly) is also given, then it will generate
LLVM assembly.

Being derived from the GNU Compiler Collection, llvm-gcc has many of
gcc's features and accepts most of gcc's options. It handles a number
of gcc's extensions to the C programming language.
<sthen@@zephyr:/usr/ports/mystuff/lang/llvm-gcc4:9>$CVS: ----------------------------------------------------------------------
@
text
@@
