head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.8
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.6
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	sthen_20090622:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2011.12.16.11.57.28;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2009.06.22.22.37.32;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.22.22.37.32;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@llvm-gcc4 is no longer supported; reminded by jasper@@
@
text
@$OpenBSD: patch-libstdc++-v3_include_c_compatibility_wchar_h,v 1.1 2009/06/22 22:37:32 sthen Exp $
--- libstdc++-v3/include/c_compatibility/wchar.h.orig	Fri Jun  5 00:05:31 2009
+++ libstdc++-v3/include/c_compatibility/wchar.h	Fri Jun  5 00:06:50 2009
@@@@ -45,24 +45,32 @@@@ using std::fgetws;
 using std::fputwc;
 using std::fputws;
 using std::fwide;
+#if !defined(__OpenBSD__)
 using std::fwprintf;
 using std::fwscanf;
 using std::swprintf;
 using std::swscanf;
 using std::vfwprintf;
+#endif
 #if _GLIBCXX_HAVE_VFWSCANF
 using std::vfwscanf;
 #endif
+#if !defined(__OpenBSD__)
 using std::vswprintf;
+#endif
 #if _GLIBCXX_HAVE_VSWSCANF
 using std::vswscanf;
 #endif
+#if !defined(__OpenBSD__)
 using std::vwprintf;
+#endif
 #if _GLIBCXX_HAVE_VWSCANF
 using std::vwscanf;
 #endif
+#if !defined(__OpenBSD__)
 using std::wprintf;
 using std::wscanf;
+#endif
 using std::getwc;
 using std::getwchar;
 using std::mbsinit;
@@@@ -101,7 +109,9 @@@@ using std::wmemcmp;
 using std::wmemcpy;
 using std::wmemmove;
 using std::wmemset;
+#if !defined(__OpenBSD__)
 using std::wcsftime;
+#endif
 
 #if _GLIBCXX_USE_C99
 using std::wcstold;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-libstdc++-v3_include_c_compatibility_wchar_h,v 1.1 2009/06/07 01:22:05 robert Exp $
@


1.1.1.1
log
@Import llvm-gcc4, not yet linked to the build. This is a work in
progress, largely based on the gcc port in ports/lang/gcc/4.2.
Requested by jsg@@.

It's somewhat usable on i386 (shared lib versions not yet properly
under control). Build on amd64 currently fails with -fPIC problems.

-- --
lvm-gcc is the LLVM C front end. It is a modified version of gcc
that compiles C/C++/ObjC programs into native objects, LLVM bitcode or
LLVM assembly language, depending upon the options.

By default, llvm-gcc compiles to native objects just like GCC does.
If the -emit-llvm option is given then it will generate LLVM bitcode
files instead. If -S (assembly) is also given, then it will generate
LLVM assembly.

Being derived from the GNU Compiler Collection, llvm-gcc has many of
gcc's features and accepts most of gcc's options. It handles a number
of gcc's extensions to the C programming language.
<sthen@@zephyr:/usr/ports/mystuff/lang/llvm-gcc4:9>$CVS: ----------------------------------------------------------------------
@
text
@@
