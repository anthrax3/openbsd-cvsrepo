head	1.5;
access;
symbols
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	sthen_20090622:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2011.12.16.11.57.28;	author sthen;	state dead;
branches;
next	1.4;

1.4
date	2011.01.13.00.18.18;	author jeremy;	state Exp;
branches;
next	1.3;

1.3
date	2010.04.29.16.45.53;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2009.11.02.23.00.08;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.22.22.37.32;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.22.22.37.32;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.5
log
@llvm-gcc4 is no longer supported; reminded by jasper@@
@
text
@$OpenBSD: patch-gcc_gcc_c,v 1.4 2011/01/13 00:18:18 jeremy Exp $
--- gcc/gcc.c.orig	Mon Aug 30 13:52:59 2010
+++ gcc/gcc.c	Mon Jan 10 12:49:16 2011
@@@@ -1409,7 +1409,7 @@@@ translate_options (int *argcp, const char *const **arg
 		  /* Store the translation as one argv elt or as two.  */
 		  if (arg != 0 && strchr (arginfo, 'j') != 0)
 		    newv[newindex++] = concat (option_map[j].equivalent, arg,
-					       NULL);
+					       (void *)0);
 		  else if (arg != 0)
 		    {
 		      newv[newindex++] = option_map[j].equivalent;
@@@@ -1749,7 +1749,7 @@@@ init_gcc_specs (struct obstack *obstack, const char *s
 		"%{shared:", shared_name, "}"
 #endif
 #endif
-		"}}", NULL);
+		"}}", (void *)0);
 
   obstack_grow (obstack, buf, strlen (buf));
   free (buf);
@@@@ -1947,7 +1947,7 @@@@ set_spec (const char *name, const char *spec)
 
   old_spec = *(sl->ptr_spec);
   *(sl->ptr_spec) = ((spec[0] == '+' && ISSPACE ((unsigned char)spec[1]))
-		     ? concat (old_spec, spec + 1, NULL)
+		     ? concat (old_spec, spec + 1, (void *)0)
 		     : xstrdup (spec));
 
 #ifdef DEBUG_SPECS
@@@@ -2517,12 +2517,12 @@@@ for_each_path (const struct path_prefix *paths,
   just_multi_suffix = just_machine_suffix;
   if (do_multi && multilib_dir && strcmp (multilib_dir, ".") != 0)
     {
-      multi_dir = concat (multilib_dir, dir_separator_str, NULL);
-      multi_suffix = concat (multi_suffix, multi_dir, NULL);
-      just_multi_suffix = concat (just_multi_suffix, multi_dir, NULL);
+      multi_dir = concat (multilib_dir, dir_separator_str, (void *)0);
+      multi_suffix = concat (multi_suffix, multi_dir, (void *)0);
+      just_multi_suffix = concat (just_multi_suffix, multi_dir, (void *)0);
     }
   if (do_multi && multilib_os_dir && strcmp (multilib_os_dir, ".") != 0)
-    multi_os_dir = concat (multilib_os_dir, dir_separator_str, NULL);
+    multi_os_dir = concat (multilib_os_dir, dir_separator_str, (void *)0);
 
   while (1)
     {
@@@@ -2870,8 +2870,8 @@@@ add_sysrooted_prefix (struct path_prefix *pprefix, con
   if (target_system_root)
     {
       if (target_sysroot_suffix)
-	  prefix = concat (target_sysroot_suffix, prefix, NULL);
-      prefix = concat (target_system_root, prefix, NULL);
+	  prefix = concat (target_sysroot_suffix, prefix, (void *)0);
+      prefix = concat (target_system_root, prefix, (void *)0);
 
       /* We have to override this because GCC's notion of sysroot
 	 moves along with GCC.  */
@@@@ -3518,7 +3518,7 @@@@ process_command (int argc, const char **argv)
 	  break;
       new_argv0 = xmemdup (progname, baselen,
 			   baselen + concat_length (new_version, new_machine,
-						    "-gcc-", NULL) + 1);
+						    "-gcc-", (void *)0) + 1);
       strcpy (new_argv0 + baselen, new_machine);
       strcat (new_argv0, "-gcc-");
       strcat (new_argv0, new_version);
@@@@ -3572,7 +3572,7 @@@@ process_command (int argc, const char **argv)
 					     standard_libexec_prefix);
       /* LLVM LOCAL end no-canonical-prefixes */
       if (gcc_exec_prefix)
-	putenv (concat ("GCC_EXEC_PREFIX=", gcc_exec_prefix, NULL));
+	putenv (concat ("GCC_EXEC_PREFIX=", gcc_exec_prefix, (void *)0));
     }
   else
     {
@@@@ -3580,7 +3580,7 @@@@ process_command (int argc, const char **argv)
 	 GCC_EXEC_PREFIX is typically a directory name with a trailing
 	 / (which is ignored by make_relative_prefix), so append a
 	 program name.  */
-      char *tmp_prefix = concat (gcc_exec_prefix, "gcc", NULL);
+      char *tmp_prefix = concat (gcc_exec_prefix, "gcc", (void *)0);
       /* LLVM LOCAL begin no-canonical-prefixes */
       gcc_libexec_prefix = get_relative_prefix (tmp_prefix,
 						standard_exec_prefix,
@@@@ -3629,7 +3629,7 @@@@ process_command (int argc, const char **argv)
 	    {
 	      strncpy (nstore, startp, endp - startp);
 	      if (endp == startp)
-		strcpy (nstore, concat (".", dir_separator_str, NULL));
+		strcpy (nstore, concat (".", dir_separator_str, (void *)0));
 	      else if (!IS_DIR_SEPARATOR (endp[-1]))
 		{
 		  nstore[endp - startp] = DIR_SEPARATOR;
@@@@ -3663,7 +3663,7 @@@@ process_command (int argc, const char **argv)
 	    {
 	      strncpy (nstore, startp, endp - startp);
 	      if (endp == startp)
-		strcpy (nstore, concat (".", dir_separator_str, NULL));
+		strcpy (nstore, concat (".", dir_separator_str, (void *)0));
 	      else if (!IS_DIR_SEPARATOR (endp[-1]))
 		{
 		  nstore[endp - startp] = DIR_SEPARATOR;
@@@@ -3696,7 +3696,7 @@@@ process_command (int argc, const char **argv)
 	    {
 	      strncpy (nstore, startp, endp - startp);
 	      if (endp == startp)
-		strcpy (nstore, concat (".", dir_separator_str, NULL));
+		strcpy (nstore, concat (".", dir_separator_str, (void *)0));
 	      else if (!IS_DIR_SEPARATOR (endp[-1]))
 		{
 		  nstore[endp - startp] = DIR_SEPARATOR;
@@@@ -4221,7 +4221,7 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
 	      PREFIX_PRIORITY_LAST, 1, 0);
 
   tooldir_prefix = concat (tooldir_base_prefix, spec_machine,
-			   dir_separator_str, NULL);
+			   dir_separator_str, (void *)0);
 
   /* If tooldir is relative, base it on exec_prefixes.  A relative
      tooldir lets us move the installed tree as a unit.
@@@@ -4236,28 +4236,28 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
 	{
 	  char *gcc_exec_tooldir_prefix
 	    = concat (gcc_exec_prefix, spec_machine, dir_separator_str,
-		      spec_version, dir_separator_str, tooldir_prefix, NULL);
+		      spec_version, dir_separator_str, tooldir_prefix, (void *)0);
 
 	  add_prefix (&exec_prefixes,
 		      concat (gcc_exec_tooldir_prefix, "bin",
-			      dir_separator_str, NULL),
+			      dir_separator_str, (void *)0),
 		      NULL, PREFIX_PRIORITY_LAST, 0, 0);
 	  add_prefix (&startfile_prefixes,
 		      concat (gcc_exec_tooldir_prefix, "lib",
-			      dir_separator_str, NULL),
+			      dir_separator_str, (void *)0),
 		      NULL, PREFIX_PRIORITY_LAST, 0, 1);
 	}
 
       tooldir_prefix = concat (standard_exec_prefix, spec_machine,
 			       dir_separator_str, spec_version,
-			       dir_separator_str, tooldir_prefix, NULL);
+			       dir_separator_str, tooldir_prefix, (void *)0);
     }
 
   add_prefix (&exec_prefixes,
-	      concat (tooldir_prefix, "bin", dir_separator_str, NULL),
+	      concat (tooldir_prefix, "bin", dir_separator_str, (void *)0),
 	      "BINUTILS", PREFIX_PRIORITY_LAST, 0, 0);
   add_prefix (&startfile_prefixes,
-	      concat (tooldir_prefix, "lib", dir_separator_str, NULL),
+	      concat (tooldir_prefix, "lib", dir_separator_str, (void *)0),
 	      "BINUTILS", PREFIX_PRIORITY_LAST, 0, 1);
 
 #if defined(TARGET_SYSTEM_ROOT_RELOCATABLE) && !defined(VMS)
@@@@ -4387,7 +4387,7 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
 	{ /* POSIX allows separation of -l and the lib arg;
 	     canonicalize by concatenating -l with its arg */
 	  infiles[n_infiles].language = "*";
-	  infiles[n_infiles++].name = concat ("-l", argv[++i], NULL);
+	  infiles[n_infiles++].name = concat ("-l", argv[++i], (void *)0);
 	}
       else if (strncmp (argv[i], "-l", 2) == 0)
 	{
@@@@ -6667,8 +6667,8 @@@@ main (int argc, char **argv)
   /* Read specs from a file if there is one.  */
 
   machine_suffix = concat (spec_machine, dir_separator_str,
-			   spec_version, dir_separator_str, NULL);
-  just_machine_suffix = concat (spec_machine, dir_separator_str, NULL);
+			   spec_version, dir_separator_str, (void *)0);
+  just_machine_suffix = concat (spec_machine, dir_separator_str, (void *)0);
 
   specs_file = find_a_file (&startfile_prefixes, "specs", R_OK, true);
   /* Read the specs file unless it is a default one.  */
@@@@ -6792,7 +6792,7 @@@@ main (int argc, char **argv)
 	  if (gcc_exec_prefix)
 	    add_prefix (&startfile_prefixes,
 			concat (gcc_exec_prefix, machine_suffix,
-				standard_startfile_prefix, NULL),
+				standard_startfile_prefix, (void *)0),
 			NULL, PREFIX_PRIORITY_LAST, 0, 1);
 
 	  /* APPLE LOCAL begin ARM sysroot startfile_prefixes */
@@@@ -6802,13 +6802,13 @@@@ main (int argc, char **argv)
 	    add_sysrooted_prefix (&startfile_prefixes,
 				  concat (standard_exec_prefix,
 					  machine_suffix,
-					  standard_startfile_prefix, NULL),
+					  standard_startfile_prefix, (void *)0),
 				  NULL, PREFIX_PRIORITY_LAST, 0, 1);
 	  else
 	    add_prefix (&startfile_prefixes,
 			concat (standard_exec_prefix,
 				machine_suffix,
-				standard_startfile_prefix, NULL),
+				standard_startfile_prefix, (void *)0),
 			NULL, PREFIX_PRIORITY_LAST, 0, 1);
 	  /* APPLE LOCAL end ARM sysroot startfile_prefixes */
 	}
@@@@ -6837,7 +6837,7 @@@@ main (int argc, char **argv)
   /* If we have a GCC_EXEC_PREFIX envvar, modify it for cpp's sake.  */
   if (gcc_exec_prefix)
     gcc_exec_prefix = concat (gcc_exec_prefix, spec_machine, dir_separator_str,
-			      spec_version, dir_separator_str, NULL);
+			      spec_version, dir_separator_str, (void *)0);
 
   /* Now we have the specs.
      Set the `valid' bits for switches that match anything in any spec.  */
@


1.4
log
@Use llvm 2.8 version.  Enable build on amd64 since it works now.
Bring library versioning under control and bump the major versions.
Mark as SHARED_ONLY. Remove TODO file as it is no longer needed.

OK @@sthen
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_gcc_c,v 1.3 2010/04/29 16:45:53 jsg Exp $
@


1.3
log
@update to llvm-gcc 4.2-2.7
ok sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_gcc_c,v 1.2 2009/11/02 23:00:08 jsg Exp $
--- gcc/gcc.c.orig	Sat Dec 19 00:12:36 2009
+++ gcc/gcc.c	Wed Apr 28 23:16:03 2010
@@@@ -1408,7 +1408,7 @@@@ translate_options (int *argcp, const char *const **arg
d13 1
a13 1
@@@@ -1748,7 +1748,7 @@@@ init_gcc_specs (struct obstack *obstack, const char *s
d22 1
a22 1
@@@@ -1946,7 +1946,7 @@@@ set_spec (const char *name, const char *spec)
d31 1
a31 1
@@@@ -2516,12 +2516,12 @@@@ for_each_path (const struct path_prefix *paths,
d48 1
a48 1
@@@@ -2869,8 +2869,8 @@@@ add_sysrooted_prefix (struct path_prefix *pprefix, con
d59 1
a59 1
@@@@ -3517,7 +3517,7 @@@@ process_command (int argc, const char **argv)
d68 1
a68 1
@@@@ -3571,7 +3571,7 @@@@ process_command (int argc, const char **argv)
d77 1
a77 1
@@@@ -3579,7 +3579,7 @@@@ process_command (int argc, const char **argv)
d86 1
a86 1
@@@@ -3628,7 +3628,7 @@@@ process_command (int argc, const char **argv)
d95 1
a95 1
@@@@ -3662,7 +3662,7 @@@@ process_command (int argc, const char **argv)
d104 1
a104 1
@@@@ -3695,7 +3695,7 @@@@ process_command (int argc, const char **argv)
d113 1
a113 1
@@@@ -4220,7 +4220,7 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
d122 1
a122 1
@@@@ -4235,28 +4235,28 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
d157 1
a157 1
@@@@ -4386,7 +4386,7 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
d166 1
a166 1
@@@@ -6666,8 +6666,8 @@@@ main (int argc, char **argv)
d177 1
a177 1
@@@@ -6791,7 +6791,7 @@@@ main (int argc, char **argv)
d186 1
a186 1
@@@@ -6801,13 +6801,13 @@@@ main (int argc, char **argv)
d202 1
a202 1
@@@@ -6836,7 +6836,7 @@@@ main (int argc, char **argv)
@


1.2
log
@update to 2.6
ok sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_gcc_c,v 1.1.1.1 2009/06/22 22:37:32 sthen Exp $
--- gcc/gcc.c.orig	Mon Aug 17 11:12:42 2009
+++ gcc/gcc.c	Sat Oct 31 03:58:15 2009
@@@@ -1407,7 +1407,7 @@@@ translate_options (int *argcp, const char *const **arg
d13 1
a13 1
@@@@ -1747,7 +1747,7 @@@@ init_gcc_specs (struct obstack *obstack, const char *s
d22 1
a22 1
@@@@ -1945,7 +1945,7 @@@@ set_spec (const char *name, const char *spec)
d31 1
a31 1
@@@@ -2515,12 +2515,12 @@@@ for_each_path (const struct path_prefix *paths,
d48 1
a48 1
@@@@ -2868,8 +2868,8 @@@@ add_sysrooted_prefix (struct path_prefix *pprefix, con
d59 1
a59 1
@@@@ -3513,7 +3513,7 @@@@ process_command (int argc, const char **argv)
d68 1
a68 2
@@@@ -3563,7 +3563,7 @@@@ process_command (int argc, const char **argv)
 					     standard_bindir_prefix,
d70 1
d77 1
a77 1
@@@@ -3571,7 +3571,7 @@@@ process_command (int argc, const char **argv)
d83 1
d86 1
a86 2
 						standard_libexec_prefix);
@@@@ -3618,7 +3618,7 @@@@ process_command (int argc, const char **argv)
d95 1
a95 1
@@@@ -3652,7 +3652,7 @@@@ process_command (int argc, const char **argv)
d104 1
a104 1
@@@@ -3685,7 +3685,7 @@@@ process_command (int argc, const char **argv)
d113 1
a113 1
@@@@ -4205,7 +4205,7 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
d122 1
a122 1
@@@@ -4220,28 +4220,28 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
d157 1
a157 1
@@@@ -4367,7 +4367,7 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
d166 1
a166 1
@@@@ -6647,8 +6647,8 @@@@ main (int argc, char **argv)
d177 1
a177 1
@@@@ -6772,7 +6772,7 @@@@ main (int argc, char **argv)
d186 1
a186 1
@@@@ -6782,13 +6782,13 @@@@ main (int argc, char **argv)
d202 1
a202 1
@@@@ -6817,7 +6817,7 @@@@ main (int argc, char **argv)
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_gcc_c,v 1.5 2009/04/16 18:36:48 espie Exp $
--- gcc/gcc.c.orig	Mon Jun 22 01:17:01 2009
+++ gcc/gcc.c	Mon Jun 22 01:17:03 2009
@@@@ -1406,7 +1406,7 @@@@ translate_options (int *argcp, const char *const **arg
d13 1
a13 1
@@@@ -1746,7 +1746,7 @@@@ init_gcc_specs (struct obstack *obstack, const char *s
d22 1
a22 1
@@@@ -1944,7 +1944,7 @@@@ set_spec (const char *name, const char *spec)
d31 1
a31 1
@@@@ -2514,12 +2514,12 @@@@ for_each_path (const struct path_prefix *paths,
d48 1
a48 1
@@@@ -2867,8 +2867,8 @@@@ add_sysrooted_prefix (struct path_prefix *pprefix, con
d59 1
a59 1
@@@@ -3506,7 +3506,7 @@@@ process_command (int argc, const char **argv)
d68 3
a70 3
@@@@ -3533,7 +3533,7 @@@@ process_command (int argc, const char **argv)
 						 standard_bindir_prefix,
 						 standard_libexec_prefix);
d77 1
a77 1
@@@@ -3541,7 +3541,7 @@@@ process_command (int argc, const char **argv)
d83 4
a86 4
       gcc_libexec_prefix = make_relative_prefix (tmp_prefix,
 						 standard_exec_prefix,
 						 standard_libexec_prefix);
@@@@ -3588,7 +3588,7 @@@@ process_command (int argc, const char **argv)
d95 1
a95 1
@@@@ -3622,7 +3622,7 @@@@ process_command (int argc, const char **argv)
d104 1
a104 1
@@@@ -3655,7 +3655,7 @@@@ process_command (int argc, const char **argv)
d113 1
a113 1
@@@@ -4178,7 +4178,7 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
d122 1
a122 1
@@@@ -4193,28 +4193,28 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
d157 1
a157 1
@@@@ -4338,7 +4338,7 @@@@ warranty; not even for MERCHANTABILITY or FITNESS FOR 
d166 1
a166 1
@@@@ -6618,8 +6618,8 @@@@ main (int argc, char **argv)
d177 1
a177 1
@@@@ -6743,7 +6743,7 @@@@ main (int argc, char **argv)
d186 1
a186 1
@@@@ -6753,13 +6753,13 @@@@ main (int argc, char **argv)
d202 1
a202 1
@@@@ -6788,7 +6788,7 @@@@ main (int argc, char **argv)
@


1.1.1.1
log
@Import llvm-gcc4, not yet linked to the build. This is a work in
progress, largely based on the gcc port in ports/lang/gcc/4.2.
Requested by jsg@@.

It's somewhat usable on i386 (shared lib versions not yet properly
under control). Build on amd64 currently fails with -fPIC problems.

-- --
lvm-gcc is the LLVM C front end. It is a modified version of gcc
that compiles C/C++/ObjC programs into native objects, LLVM bitcode or
LLVM assembly language, depending upon the options.

By default, llvm-gcc compiles to native objects just like GCC does.
If the -emit-llvm option is given then it will generate LLVM bitcode
files instead. If -S (assembly) is also given, then it will generate
LLVM assembly.

Being derived from the GNU Compiler Collection, llvm-gcc has many of
gcc's features and accepts most of gcc's options. It handles a number
of gcc's extensions to the C programming language.
<sthen@@zephyr:/usr/ports/mystuff/lang/llvm-gcc4:9>$CVS: ----------------------------------------------------------------------
@
text
@@
