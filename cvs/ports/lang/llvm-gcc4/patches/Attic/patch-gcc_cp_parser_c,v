head	1.4;
access;
symbols
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	sthen_20090622:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2011.12.16.11.57.28;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2010.04.29.16.45.53;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2009.11.02.23.00.08;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.22.22.37.32;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.22.22.37.32;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@llvm-gcc4 is no longer supported; reminded by jasper@@
@
text
@$OpenBSD: patch-gcc_cp_parser_c,v 1.3 2010/04/29 16:45:53 jsg Exp $
--- gcc/cp/parser.c.orig	Thu Jan 14 01:51:42 2010
+++ gcc/cp/parser.c	Wed Apr 28 23:09:27 2010
@@@@ -17630,7 +17630,7 @@@@ cp_parser_require (cp_parser* parser,
       /* Output the MESSAGE -- unless we're parsing tentatively.  */
       if (!cp_parser_simulate_error (parser))
 	{
-	  char *message = concat ("expected ", token_desc, NULL);
+	  char *message = concat ("expected ", token_desc, (void *)0);
 	  cp_parser_error (parser, message);
 	  free (message);
 	}
@


1.3
log
@update to llvm-gcc 4.2-2.7
ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_cp_parser_c,v 1.2 2009/11/02 23:00:08 jsg Exp $
@


1.2
log
@update to 2.6
ok sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_cp_parser_c,v 1.1.1.1 2009/06/22 22:37:32 sthen Exp $
--- gcc/cp/parser.c.orig	Mon Jul 13 16:11:20 2009
+++ gcc/cp/parser.c	Sat Oct 31 03:52:37 2009
@@@@ -17626,7 +17626,7 @@@@ cp_parser_require (cp_parser* parser,
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_cp_parser_c,v 1.7 2009/04/16 18:36:48 espie Exp $
--- gcc/cp/parser.c.orig	Sun Feb 15 04:17:54 2009
+++ gcc/cp/parser.c	Mon Jun 22 00:53:59 2009
@@@@ -17612,7 +17612,7 @@@@ cp_parser_require (cp_parser* parser,
@


1.1.1.1
log
@Import llvm-gcc4, not yet linked to the build. This is a work in
progress, largely based on the gcc port in ports/lang/gcc/4.2.
Requested by jsg@@.

It's somewhat usable on i386 (shared lib versions not yet properly
under control). Build on amd64 currently fails with -fPIC problems.

-- --
lvm-gcc is the LLVM C front end. It is a modified version of gcc
that compiles C/C++/ObjC programs into native objects, LLVM bitcode or
LLVM assembly language, depending upon the options.

By default, llvm-gcc compiles to native objects just like GCC does.
If the -emit-llvm option is given then it will generate LLVM bitcode
files instead. If -S (assembly) is also given, then it will generate
LLVM assembly.

Being derived from the GNU Compiler Collection, llvm-gcc has many of
gcc's features and accepts most of gcc's options. It handles a number
of gcc's extensions to the C programming language.
<sthen@@zephyr:/usr/ports/mystuff/lang/llvm-gcc4:9>$CVS: ----------------------------------------------------------------------
@
text
@@
