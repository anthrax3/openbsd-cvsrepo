head	1.3;
access;
symbols
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	sthen_20090622:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2011.01.13.00.18.18;	author jeremy;	state dead;
branches;
next	1.2;

1.2
date	2009.06.24.20.10.10;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.22.22.37.31;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.22.22.37.31;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Use llvm 2.8 version.  Enable build on amd64 since it works now.
Bring library versioning under control and bump the major versions.
Mark as SHARED_ONLY. Remove TODO file as it is no longer needed.

OK @@sthen
@
text
@@@comment $OpenBSD: PFRAG.shared,v 1.2 2009/06/24 20:10:10 sthen Exp $
@@lib lib/llvm-gcc-${LLVM_V}/libobjc.so.${LIBobjc_VERSION}
@@lib lib/llvm-gcc-${LLVM_V}/libssp.so.${LIBssp_VERSION}
@@lib lib/llvm-gcc-${LLVM_V}/libstdc++.so.${LIBstdc++_VERSION}
@


1.2
log
@- enable objc
- fix "make fake" with 4.6 OS version
from jsg@@

- add a SUBST_VARS for the included GCC version to reduce PLIST churn
@
text
@d1 1
a1 1
@@comment $OpenBSD: PFRAG.shared,v 1.1.1.1 2009/06/22 22:37:31 sthen Exp $
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
@@comment $OpenBSD$
@


1.1.1.1
log
@Import llvm-gcc4, not yet linked to the build. This is a work in
progress, largely based on the gcc port in ports/lang/gcc/4.2.
Requested by jsg@@.

It's somewhat usable on i386 (shared lib versions not yet properly
under control). Build on amd64 currently fails with -fPIC problems.

-- --
lvm-gcc is the LLVM C front end. It is a modified version of gcc
that compiles C/C++/ObjC programs into native objects, LLVM bitcode or
LLVM assembly language, depending upon the options.

By default, llvm-gcc compiles to native objects just like GCC does.
If the -emit-llvm option is given then it will generate LLVM bitcode
files instead. If -S (assembly) is also given, then it will generate
LLVM assembly.

Being derived from the GNU Compiler Collection, llvm-gcc has many of
gcc's features and accepts most of gcc's options. It handles a number
of gcc's extensions to the C programming language.
<sthen@@zephyr:/usr/ports/mystuff/lang/llvm-gcc4:9>$CVS: ----------------------------------------------------------------------
@
text
@@
