head	1.7;
access;
symbols
	OPENBSD_3_6:1.6.0.10
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_TRACKING_SWITCH:1.4
	OPENBSD_2_9:1.3.0.8
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	rel1_1b:1.1.1.1
	OpenBSD-ports:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2005.02.20.01.24.32;	author espie;	state dead;
branches;
next	1.6;

1.6
date	2002.10.01.00.34.17;	author naddy;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.10.21.05.21;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.04.15.07.32;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	99.08.22.17.28.42;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	98.10.02.18.51.28;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	98.09.26.08.53.04;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.26.08.53.04;	author espie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@bye bye
@
text
@OpenBSD currently ships with a slightly modified gcc 2.95.3, which 
should be adequate for most people.

Selected changes:

* gcc 3.2 is much slower compiling than gcc 2.95.
* integrated preprocessor, somewhat better diagnostics.
* much better C++ support, almost fully ISO compliant.
* better C++ template diagnostics.
* better code generation, (scheduling on newer intel platforms), sparc64,
and others...
* function at-a-time compile and tree based inliner, that should give
better results than the old inliner.
* profiler-directed optimizations.
* built-in for mmx (needs new gas though) or altivec.
* integrated ada and java compiler (boehm-gc does not work on OpenBSD yet).
* more robust, especially where odd compile options are concerned.
@


1.6
log
@Sync version number.
From: David Krause <openbsd@@davidkrause.com>
@
text
@@


1.5
log
@Update somewhat
@
text
@d6 1
a6 1
* gcc 3.1 is much slower compiling than gcc 2.95.
@


1.4
log
@Preliminary port of gcc 3.0.

Currently, bootstraps C and C++ on i386.

This is definitely not complete yet. Lots of libtool patches, and local
changes to 2.95.3 (such as proper -shared support) are missing,
but this should allow people to start banging on it.
@
text
@d1 2
a2 3
egcs is an experimental spin-off of gcc that started when people got 
fed up waiting for gcc 2.8. As the C++ standard finally emerged,
egcs people strove trying to implement as much of it as possible.
d4 1
a4 2
Egcs proved to be a succesful project, to the extent that it now is
the official gnu compiler, relabelled gcc 2.95 for its first release.
d6 12
a17 29
OpenBSD 2.7 ships with gcc 2.95.2, which should be adequate for most
people.

The main reason for the egcs/snapshot port is to make it easier for 
interested parties to track current egcs development and report bugs
(specific or not to OpenBSD), so that when the next release comes, we
are ready to integrate it.

From a user point of view, you may need some features that the port
provides.

There have been a lot of changes since gcc 2.95.2, this is just a quick
summary of a few:

* the intel scheduler has been revamped. It's more efficient on hundreds
of little details,
* other arches have known important internal improvement. m68k pic support
should be better. HP-PA has most of PA2.0 support in,
* internal memory handling now uses a garbage collector. Eventually egcs
should become faster, more robust and less memory-hungry (this is already 
the case in many circumstances),
* the back-end specifications have been tightened, so that many bugs have
been found,
* the C++ compiler now uses one-function-at-a-time tree representations.
More optimizations are possible,
* the design of varargs facilities has been completely changed,
* loads of new warnings and new optimizations.

See http://egcs.cygnus.com for more details.
@


1.3
log
@Update description, pkg name, and packing list.
@
text
@a3 5
Accordingly, egcs C++ compiler is more suitable for C++ development as
gnu gcc.  Its library approaches the standard, template support is almost
complete, namespace support is coming in, it also includes a newer
scheduler (haifa) that gives improved results on HPRisc and Alpha
architecture.  
d5 30
a34 2
egcs is now the official gcc compiler, and the next release of OpenBSD
is going to ship with gcc 2.95.1, at least.
@


1.2
log
@Some files moved around to accommodate libstdc++ config.
i386 setup checked, initial m68k setup (not yet tested).
@
text
@d8 1
a8 2
architecture.  Hopefully, most features of egcs will migrate to 
gcc over time...
d10 2
a11 2
I still have to port over and check the g77, objective-C and java
front-end. egcs' g77 is more advanced and integrated than GNU-cc g++.
@


1.1
log
@Initial revision
@
text
@d1 9
a9 3
This port is used for people who need egcs, the experimental gcc compiler
developped by cygnus.  egcs fixes lots of bugs compared to gcc 2.8.1.
In exchange, it adds some new ones.  It's pretty useful for C++ development.
d11 4
a14 1
For more details, refer to to http://egcs.cygnus.org/
@


1.1.1.1
log
@egcs ports, stable release flavor
@
text
@@
