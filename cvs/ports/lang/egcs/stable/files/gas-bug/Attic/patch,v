head	1.2;
access;
symbols
	OPENBSD_3_1:1.1.0.12
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.10
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1
	OPENBSD_2_9:1.1.0.8
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.6
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2002.06.06.00.01.08;	author espie;	state dead;
branches;
next	1.1;

1.1
date	99.08.22.16.46.52;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@obsolete files.
@
text
@--- /usr/src/gnu/usr.bin/gas/config/tc-i386.c.orig	Sat Jan 23 01:18:15 1999
+++ /usr/src/gnu/usr.bin/gas/config/tc-i386.c	Fri Apr 23 03:53:02 1999
@@@@ -35,11 +35,8 @@@@
 #include "obstack.h"
 #include "opcode/i386.h"
 
-#ifdef KLUDGE
+/* real name for the assembler, translate from C _GLOBAL_OFFSET_TABLE_ */
 #define GLOBAL_OFFSET_TABLE_NAME "__GLOBAL_OFFSET_TABLE_"
-#else
-#define GLOBAL_OFFSET_TABLE_NAME "_GLOBAL_OFFSET_TABLE_"
-#endif
 
 /* one more argument for fix_new */
 #ifdef PIC
@@@@ -2259,16 +2256,18 @@@@
 char *name;
 {
 #ifdef PIC
-#ifdef KLUDGE
-	/* HACK:
-	 * Sun's ld expects __GLOBAL_OFFSET_TABLE_,
-	 * gcc generates _GLOBAL_OFFSET_TABLE_
-	 * should probably fix ld - new SVR4 style??
+	/* gcc bug work-around:
+	 * old versions of gcc don't heed YES_UNDERSCORES,
+	 * and always generate _GLOBAL_OFFSET_TABLE_.
+	 * On OpenBSD, this is a bug, as this collides with
+	 * the user namespace.
+	 *
+	 * This code will no longer be needed once the switch to a recent 
+	 * egcs is complete.
 	 */
 	if (*name == '_' && *(name+1) == 'G' &&
 				strcmp(name, "_GLOBAL_OFFSET_TABLE_") == 0)
-		return symbol_find("__GLOBAL_OFFSET_TABLE_");
-#endif
+		return symbol_find(GLOBAL_OFFSET_TABLE_NAME);
 #endif
 	return 0;
 }
@


1.1
log
@Missing files.
@
text
@@

