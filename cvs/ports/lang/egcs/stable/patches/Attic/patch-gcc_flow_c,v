head	1.2;
access;
symbols
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2002.11.24.11.52.32;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2002.06.09.00.34.37;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to 3.2.1
Remove a large number of `speed-up patches' as they are likely to be
the cause for sparc64 and friends issues.
@
text
@$OpenBSD: patch-gcc_flow_c,v 1.1 2002/06/09 00:34:37 espie Exp $
--- gcc/flow.c.orig	Thu Apr 18 22:21:09 2002
+++ gcc/flow.c	Sat Jun  8 18:08:09 2002
@@@@ -1721,8 +1721,7 @@@@ propagate_one_insn (pbi, insn)
 	    if (TEST_HARD_REG_BIT (regs_invalidated_by_call, i))
 	      {
 		/* We do not want REG_UNUSED notes for these registers.  */
-		mark_set_1 (pbi, CLOBBER, gen_rtx_REG (reg_raw_mode[i], i),
-			    cond, insn,
+		mark_set_1 (pbi, CLOBBER, regno_reg_rtx[i], cond, insn,
 			    pbi->flags & ~(PROP_DEATH_NOTES | PROP_REG_INFO));
 	      }
 	}
@@@@ -1770,8 +1769,7 @@@@ propagate_one_insn (pbi, insn)
 	     so they are made live.  */
 	  for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)
 	    if (global_regs[i])
-	      mark_used_reg (pbi, gen_rtx_REG (reg_raw_mode[i], i),
-			     cond, insn);
+	      mark_used_reg (pbi, regno_reg_rtx[i], cond, insn);
 	}
     }
 
@@@@ -2769,7 +2767,7 @@@@ mark_set_1 (pbi, code, reg, cond, insn, 
 		    if (! REGNO_REG_SET_P (pbi->reg_live, i))
 		      REG_NOTES (insn)
 			= alloc_EXPR_LIST (REG_UNUSED,
-					   gen_rtx_REG (reg_raw_mode[i], i),
+					   regno_reg_rtx[i],
 					   REG_NOTES (insn));
 		}
 	    }
@@@@ -3577,7 +3575,7 @@@@ mark_used_reg (pbi, reg, cond, insn)
 		&& ! dead_or_set_regno_p (insn, i))
 	      REG_NOTES (insn)
 		= alloc_EXPR_LIST (REG_DEAD,
-				   gen_rtx_REG (reg_raw_mode[i], i),
+				   regno_reg_rtx[i],
 				   REG_NOTES (insn));
 	}
     }
@


1.1
log
@somewhat larger speed-up: shared rtx for hardware registers, instead of
generating them again and again.

From Jeff Law, again.
@
text
@d1 1
a1 1
$OpenBSD$
@

