head	1.3;
access;
symbols
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2002.11.24.11.52.32;	author espie;	state dead;
branches;
next	1.2;

1.2
date	2002.09.14.10.14.51;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.03.14.37.19;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to 3.2.1
Remove a large number of `speed-up patches' as they are likely to be
the cause for sparc64 and friends issues.
@
text
@$OpenBSD: patch-gcc_c-decl_c,v 1.2 2002/09/14 10:14:51 espie Exp $
--- gcc/c-decl.c.orig	Sat Jul 27 01:23:03 2002
+++ gcc/c-decl.c	Thu Sep 12 14:50:58 2002
@@@@ -216,9 +216,9 @@@@ struct binding_level
     /* Nonzero means make a BLOCK if this level has any subblocks.  */
     char keep_if_subblocks;
 
-    /* Number of decls in `names' that have incomplete
-       structure or union types.  */
-    int n_incomplete;
+    /* List of decls in `names' that have incomplete structure or
+       union types.  */
+    tree incomplete_list;
 
     /* A list of decls giving the (reversed) specified order of parms,
        not including any forward-decls in the parmlist.
@@@@ -245,7 +245,7 @@@@ static struct binding_level *global_bind
 /* Binding level structures are initialized by copying this one.  */
 
 static struct binding_level clear_binding_level
-  = {NULL, NULL, NULL, NULL, NULL, NULL_BINDING_LEVEL, 0, 0, 0, 0, 0, 0,
+  = {NULL, NULL, NULL, NULL, NULL, NULL_BINDING_LEVEL, 0, 0, 0, 0, 0, NULL,
      NULL};
 
 /* Nonzero means unconditionally make a BLOCK for the next level pushed.  */
@@@@ -2560,7 +2560,7 @@@@ pushdecl (x)
 	    element = TREE_TYPE (element);
 	  if (TREE_CODE (element) == RECORD_TYPE
 	      || TREE_CODE (element) == UNION_TYPE)
-	    ++b->n_incomplete;
+          b->incomplete_list = tree_cons (NULL_TREE, x, b->incomplete_list);
 	}
     }
 
@@@@ -3045,6 +3045,7 @@@@ mark_binding_level (arg)
       ggc_mark_tree (level->blocks);
       ggc_mark_tree (level->this_block);
       ggc_mark_tree (level->parm_order);
+      ggc_mark_tree (level->incomplete_list);
     }
 }
 
@@@@ -5890,11 +5891,14 @@@@ finish_struct (t, fieldlist, attributes)
   /* If this structure or union completes the type of any previous
      variable declaration, lay it out and output its rtl.  */
 
-  if (current_binding_level->n_incomplete != 0)
+  if (current_binding_level->incomplete_list != NULL_TREE)
     {
-      tree decl;
-      for (decl = current_binding_level->names; decl; decl = TREE_CHAIN (decl))
-	{
+      tree prev = NULL_TREE;
+
+      for (x = current_binding_level->incomplete_list; x; x = TREE_CHAIN (x))
+        {
+        tree decl = TREE_VALUE (x);
+
 	  if (TYPE_MAIN_VARIANT (TREE_TYPE (decl)) == TYPE_MAIN_VARIANT (t)
 	      && TREE_CODE (decl) != TYPE_DECL)
 	    {
@@@@ -5904,8 +5908,11 @@@@ finish_struct (t, fieldlist, attributes)
 	      rest_of_decl_compilation (decl, NULL, toplevel, 0);
 	      if (! toplevel)
 		expand_decl (decl);
-	      if (--current_binding_level->n_incomplete == 0)
-		break;
+            /* Unlink X from the incomplete list.  */
+            if (prev)
+              TREE_CHAIN (prev) = TREE_CHAIN (x);
+            else
+              current_binding_level->incomplete_list = TREE_CHAIN (x);
 	    }
 	  else if (!COMPLETE_TYPE_P (TREE_TYPE (decl))
 		   && TREE_CODE (TREE_TYPE (decl)) == ARRAY_TYPE)
@@@@ -5924,8 +5931,11 @@@@ finish_struct (t, fieldlist, attributes)
 		      if (! toplevel)
 			expand_decl (decl);
 		    }
-		  if (--current_binding_level->n_incomplete == 0)
-		    break;
+                /* Unlink X from the incomplete list.  */
+                if (prev)
+                  TREE_CHAIN (prev) = TREE_CHAIN (x);
+                else
+                  current_binding_level->incomplete_list = TREE_CHAIN (x);
 		}
 	    }
 	}
@


1.2
log
@Update to gcc 3.2, remove integrated patches.
Fix packing lists, including missing %%SHARED%%.
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_c-decl_c,v 1.1 2002/06/03 14:37:19 espie Exp $
@


1.1
log
@speed-up look-up of incomplete structs. Patch by Stan Shebs.
Noticeable effect on kernel compilation speed (a few percents)
@
text
@d1 3
a3 3
$OpenBSD$
--- gcc/c-decl.c.orig	Fri May  3 14:07:04 2002
+++ gcc/c-decl.c	Mon Jun  3 15:44:06 2002
d43 1
a43 1
@@@@ -5880,11 +5881,14 @@@@ finish_struct (t, fieldlist, attributes)
d62 1
a62 1
@@@@ -5894,8 +5898,11 @@@@ finish_struct (t, fieldlist, attributes)
d76 1
a76 1
@@@@ -5914,8 +5921,11 @@@@ finish_struct (t, fieldlist, attributes)
@

