head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2003.11.13.19.09.47;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2003.11.13.19.04.10;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@hate cvs...
@
text
@$OpenBSD: patch-libjava_configure_in.orig,v 1.1 2003/11/13 19:04:10 espie Exp $
--- libjava/configure.in.orig	2003-06-17 18:04:20.000000000 +0200
+++ libjava/configure.in	2003-11-10 20:03:57.000000000 +0100
@@@@ -300,6 +300,7 @@@@ changequote(<<,>>)dnl
 changequote([,])
   GC=$enableval,
   GC=boehm)
+GC=system-boehm
 GCLIBS=
 GCINCS=
 GCDEPS=
@@@@ -323,6 +324,21 @@@@ case "$GC" in
     dnl The POSIX thread support needs to know this.
     AC_DEFINE(HAVE_BOEHM_GC)
     ;;
+ system-boehm)
+    AC_MSG_RESULT(system-boehm)
+    GCLIBS=/usr/local/lib/libgc.la
+    GCINCS='-I/usr/local/include'
+    JC1GCSPEC='-fuse-boehm-gc'
+    GCTESTSPEC="-L/usr/local/lib"
+
+    dnl We also want to pick up some cpp flags required when including
+    dnl boehm-config.h.  Yuck.
+    GCINCS="$GCINCS -DSILENT=1 -DNO_SIGNALS=1 -DNO_EXECUTE_PERMISSION=1 -DALL_INTERIOR_POINTERS=1 -DJAVA_FINALIZATION=1 -DGC_GCJ_SUPPORT=1 -DATOMIC_UNCOLLECTABLE=1 "
+    GCOBJS=boehm.lo
+    GCHDR=boehm-gc.h
+    dnl The POSIX thread support needs to know this.
+    AC_DEFINE(HAVE_BOEHM_GC)
+    ;;
  no)
     AC_MSG_RESULT(none)
     GCOBJS=nogc.lo
@@@@ -542,6 +558,7 @@@@ else
    fi
 
    AM_ICONV
+   AM_LANGINFO_CODESET
    AM_LC_MESSAGES
    AC_STRUCT_TIMEZONE
 
@


1.1
log
@Preliminary port of gcc 3.3.2, in `snapshot' because it's not yet quite
stable (and stable is actually used right now).
@
text
@d1 1
a1 1
$OpenBSD: patch-libjava_configure_in,v 1.2 2003/02/15 14:38:27 espie Exp $
@

