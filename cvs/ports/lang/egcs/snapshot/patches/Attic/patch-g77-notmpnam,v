head	1.3;
access;
symbols
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2002.06.05.23.58.50;	author espie;	state dead;
branches;
next	1.2;

1.2
date	99.11.25.22.02.30;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	99.09.09.14.25.12;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Resurrect snapshot port, easy to do,since it's the gcc 3.1 branch.
@
text
@--- libf2c/libI77/open.c.orig	Thu Nov 25 21:07:14 1999
+++ libf2c/libI77/open.c	Thu Nov 25 21:00:03 1999
@@@@ -136,6 +136,7 @@@@ integer f_open(olist *a)
 	char buf[256], *s;
 	cllist x;
 	int ufmt;
+	int fd;
 	FILE *tf;
 #ifndef NON_UNIX_STDIO
 	int n;
@@@@ -209,6 +210,24 @@@@ integer f_open(olist *a)
 	 case 's':
 	 case 'S':
 		b->uscrtch=1;
+#ifdef HAVE_MKSTEMP
+#define TEMPLATE	"/fort.XXXXXXXXXX"
+#ifdef HAVE_GETENV
+		s = getenv ("TMPDIR");
+		if (s && strlen (s) + sizeof (TEMPLATE) + 2 < sizeof (buf))
+		  strcpy (buf, s);
+	        else
+	   	  strcpy (buf, "/tmp");
+#else
+	        strcpy (buf, "/tmp");
+#endif
+	        strcat (buf, TEMPLATE);
+		fd = mkstemp(buf);
+		if (fd == -1)
+		  err (a->oerr, 132, "open");
+	        close(fd);
+		goto replace2;
+#else
 #ifdef HAVE_TEMPNAM		/* Allow use of TMPDIR preferentially. */
 		s = tempnam (0, buf);
 		if (strlen (s) >= sizeof (buf))
@@@@ -223,6 +242,7 @@@@ integer f_open(olist *a)
 		(void) mktemp(buf);
 #endif
 #endif /* ! defined (HAVE_TEMPNAM) */
+#endif /* ! defined (HAVE_MKSTEMP) */
 		goto replace;
 	case 'n':
 	case 'N':
@@@@ -242,6 +262,7 @@@@ integer f_open(olist *a)
 		if (tf = fopen(buf,f__w_mode[0]))
 			fclose(tf);
 	}
+ replace2:
 
 	b->ufnm=(char *) malloc((unsigned int)(strlen(buf)+1));
 	if(b->ufnm==NULL) opnerr(a->oerr,113,"no space");
@


1.2
log
@Fix g77 mktemp patch, now that the testsuite checks for it.
Remove extraneous warnings from the build process... for some strange
reason, the protoize patch was integrated by the Cygnus folks, but
the libiberty part is still hanging in no-man's land... go figure.
@
text
@@


1.1
log
@Update to 990907, including i386 test results,
- use contrib/egcs-update instead of rolling our own,
- autoreconf does not perform as I expected, autoconf does.
@
text
@d1 2
a2 19
Wed Sep  1 15:14:28 CEST 1999
	* libI77/configure.in:  Check for mkstemp and getenv.
	* libI77/configure:  Rebuilt.
	* libI77/open.c (f_open):  Use safer mkstemp function if available,
	still providing TMPDIR functionality if getenv is available.

--- libf2c/libI77/configure.in.orig	Wed Sep  1 14:49:56 1999
+++ libf2c/libI77/configure.in	Wed Sep  1 15:11:59 1999
@@@@ -129,7 +129,7 @@@@ else
   AC_MSG_RESULT(no)
 fi
 
-AC_CHECK_FUNCS(tempnam)
+AC_CHECK_FUNCS(tempnam mkstemp getenv)
 
 # posix will guarantee the right behaviour for sprintf, else we can't be
 # sure; HEADER_STDC wouldn't be the right check in sunos4, for instance.
--- libf2c/libI77/open.c.orig	Wed Sep  1 14:51:55 1999
+++ libf2c/libI77/open.c	Wed Sep  1 15:11:29 1999
d11 1
a11 1
@@@@ -209,6 +210,23 @@@@ integer f_open(olist *a)
d22 1
d24 1
a24 1
+		  strcpy (buf, "/tmp");
d36 1
a36 1
@@@@ -223,6 +241,7 @@@@ integer f_open(olist *a)
d44 1
a44 1
@@@@ -242,6 +261,7 @@@@ integer f_open(olist *a)
@

