head	1.5;
access;
symbols
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.10.16.19.28.43;	author espie;	state dead;
branches;
next	1.4;

1.4
date	2003.11.13.19.04.10;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2002.06.05.23.58.50;	author espie;	state dead;
branches;
next	1.2;

1.2
date	2000.06.27.22.14.27;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	99.11.24.00.15.05;	author espie;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2000.09.15.04.55.19;	author marc;	state Exp;
branches;
next	;


desc
@@


1.5
log
@kill dup snapshot dir.
@
text
@#ifndef _VARARGS_H_
#define _VARARGS_H_

/* These macros implement traditional (non-ANSI) varargs
   for GNU C.  */

#define va_alist  __builtin_va_alist

#define	__va_ellipsis	...

/* ??? We don't process attributes correctly in K&R argument context.  */
typedef int __builtin_va_alist_t __attribute__((__mode__(__word__)));

/* ??? It would be nice to get rid of the ellipsis here.  It causes
   current_function_varargs to be set in cc1.  */
#define va_dcl		__builtin_va_alist_t __builtin_va_alist; ...

/* Define __gnuc_va_list, just as in stdarg.h.  */

#ifndef __GNUC_VA_LIST
#define __GNUC_VA_LIST
typedef __builtin_va_list __gnuc_va_list;
#endif

#define va_start(v)	__builtin_varargs_start((v))
#define va_end		__builtin_va_end
#define va_arg		__builtin_va_arg
#define __va_copy(d,s)	__builtin_va_copy((d),(s))

/* Define va_list from __gnuc_va_list.  */

typedef __gnuc_va_list va_list;

#endif /* _VARARGS_H_ */
@


1.4
log
@Preliminary port of gcc 3.3.2, in `snapshot' because it's not yet quite
stable (and stable is actually used right now).
@
text
@@


1.3
log
@Resurrect snapshot port, easy to do,since it's the gcc 3.1 branch.
@
text
@@


1.2
log
@Bump to 2000-06-26 snapshot, and catch up on backlogged patches.
@
text
@@


1.1
log
@Argh. I was SURE I had repaired that port WEEKS ago.
So, here goes.

- retrieve a recent snapshot of egcs, to justify the port's existence,
- remove outdated fixes, now that we're synching with 2.6,
- update patches to deal with the current snapshot,
- get a description that matches better what's going on,
- add fixed include files to match the new varargs handling (complexity
is now within gcc, instead of arch-dependent include files).

Builds on i386, at least.
@
text
@d25 1
a25 1
#define va_start(v)	__builtin_varargs_start(&(v))
d28 1
a28 1
#define __va_copy(d,s)	__builtin_va_copy(&(d),(s))
@


1.1.2.1
log
@bring lang as of cut-over date into 2.7 branch
@
text
@d25 1
a25 1
#define va_start(v)	__builtin_varargs_start((v))
d28 1
a28 1
#define __va_copy(d,s)	__builtin_va_copy((d),(s))
@


