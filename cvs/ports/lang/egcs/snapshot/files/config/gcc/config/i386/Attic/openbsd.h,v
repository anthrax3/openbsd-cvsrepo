head	1.11;
access;
symbols
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	99.02.23.09.25.54;	author espie;	state dead;
branches;
next	1.10;

1.10
date	99.02.18.22.40.07;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	99.02.17.14.44.01;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	99.02.16.17.20.55;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	99.02.06.16.31.14;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	99.01.12.11.27.40;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	99.01.12.00.19.49;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	99.01.11.21.23.26;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	99.01.10.02.50.05;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	98.12.16.17.52.29;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	98.10.02.18.57.29;	author espie;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Kill files that are now part of the latest snapshot
@
text
@/* Configuration for an OpenBSD i386 target.
   
   Copyright (C) 1999 Free Software Foundation, Inc.

This file is part of GNU CC.

GNU CC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU CC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU CC; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

/* This is tested by i386gas.h.  */
#define YES_UNDERSCORES

#include <i386/gstabs.h>

/* Get perform_* macros to build libgcc.a.  */
#include <i386/perform.h>

/* Get generic OpenBSD definitions.  */
#define OBSD_OLD_GAS
#include <openbsd.h>

/* Run-time target specifications */
#define CPP_PREDEFINES "-D__unix__ -D__i386__ -D__OpenBSD__ -Asystem(unix) -Asystem(OpenBSD) -Acpu(i386) -Amachine(i386)"

/* Layout of source language data types.  */

/* This must agree with <machine/ansi.h> */
#undef SIZE_TYPE
#define SIZE_TYPE "unsigned int"

#undef PTRDIFF_TYPE
#define PTRDIFF_TYPE "int"

#undef WCHAR_TYPE
#define WCHAR_TYPE "int"

#undef WCHAR_TYPE_SIZE
#define WCHAR_TYPE_SIZE 32

/* Assembler format: overall framework.  */

#undef ASM_APP_ON
#define ASM_APP_ON "#APP\n"

#undef ASM_APP_OFF
#define ASM_APP_OFF "#NO_APP\n"

/* The following macros were originally stolen from i386v4.h.
   These have to be defined to get PIC code correct.  */

/* Assembler format: dispatch tables.  */

/* How to output an element of a case-vector that is relative.
   This is only used for PIC code.  See comments by the `casesi' insn in
   i386.md for an explanation of the expression this outputs.  */
#undef ASM_OUTPUT_ADDR_DIFF_ELT
#define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, BODY, VALUE, REL) \
  fprintf (FILE, "\t.long _GLOBAL_OFFSET_TABLE_+[.-%s%d]\n", LPREFIX, VALUE)

/* Assembler format: sections.  */

/* Indicate when jump tables go in the text section.  This is
   necessary when compiling PIC code.  */
#define JUMP_TABLES_IN_TEXT_SECTION  (flag_pic)

/* Stack & calling: aggregate returns.  */

/* Don't default to pcc-struct-return, because gcc is the only compiler, and
   we want to retain compatibility with older gcc versions.  */
#define DEFAULT_PCC_STRUCT_RETURN 0

/* Assembler format: alignment output.  */

/* Kludgy test: when gas is upgraded, it will have p2align, and no problems
   with nops.  */
#ifndef HAVE_GAS_MAX_SKIP_P2ALIGN
/* i386 OpenBSD still uses an older gas that doesn't insert nops by default
   when the .align directive demands to insert extra space in the text
   segment.  */
#undef ASM_OUTPUT_ALIGN
#define ASM_OUTPUT_ALIGN(FILE,LOG) \
  if ((LOG)!=0) fprintf ((FILE), "\t.align %d,0x90\n", (LOG))
#endif

/* Stack & calling: profiling.  */

/* OpenBSD's profiler recovers all information from the stack pointer.
   The icky part is not here, but in machine/profile.h.  */
#undef FUNCTION_PROFILER
#define FUNCTION_PROFILER(FILE, LABELNO)  \
  fputs (flag_pic ? "\tcall mcount@@PLT\n": "\tcall mcount\n", FILE);

/* Assembler format: exception region output.  */

/* All configurations that don't use elf must be explicit about not using
   dwarf unwind information. egcs doesn't try too hard to check internal
   configuration files...  */
#define DWARF2_UNWIND_INFO 0

/* Assembler format: alignment output.  */

/* A C statement to output to the stdio stream FILE an assembler
   command to advance the location counter to a multiple of 1<<LOG
   bytes if it is within MAX_SKIP bytes.

   This will be used to align code labels according to Intel 
   recommendations, in prevision of binutils upgrade.  */
#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN
#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)			\
  do {									\
    if ((LOG) != 0)							\
      if ((MAX_SKIP) == 0) fprintf ((FILE), "\t.p2align %d\n", (LOG));	\
      else fprintf ((FILE), "\t.p2align %d,,%d\n", (LOG), (MAX_SKIP));	\
  } while (0)
#endif

/* Note that we pick up ASM_OUTPUT_MI_THUNK from unix.h.  */

@


1.10
log
@Genuine Mc Coys. These files will be in the next snapshot.
@
text
@@


1.9
log
@Tweak comments style and add FSF copyright...
@
text
@d37 1
a37 1
/* Layout of source language data types. */
d52 1
a52 1
/* Assembler format: overall framework. */
d61 1
a61 1
   These have to be defined to get PIC code correct. */
d63 1
a63 1
/* Assembler format: dispatch tables. */
d67 1
a67 1
   i386.md for an explanation of the expression this outputs. */
d72 1
a72 1
/* Assembler format: sections. */
d78 1
a78 1
/* Stack & calling: aggregate returns. */
d84 1
a84 1
/* Assembler format: alignment output. */
d87 1
a87 1
   with nops. */
d97 1
a97 1
/* Stack & calling: profiling. */
d100 1
a100 1
   The icky part is not here, but in machine/profile.h. */
d105 1
a105 1
/* Assembler format: exception region output. */
d112 1
a112 1
/* Assembler format: alignment output. */
d123 2
a124 2
    if ((LOG)!=0)							\
      if ((MAX_SKIP)==0) fprintf ((FILE), "\t.p2align %d\n", (LOG));	\
d129 2
a130 1
/* Note that we pick up ASM_OUTPUT_MI_THUNK from unix.h. */
@


1.8
log
@Tweak up config files to help get FSF approval, mainly remove non-ansi
CPP_PREDEFINES,
Minor fixes for xm-* fragments,
set up openbsd.h mips/openbsd.h for SUBTARGET_*_CPEC.
@
text
@d1 20
a20 1
/* $OpenBSD: openbsd.h,v 1.7 1999/02/06 16:31:14 espie Exp $	*/
d34 1
a34 1
/* run-time target specifications */
d37 3
a39 3
/* Layout of source language data types
   ------------------------------------ */
/* this must agree with <machine/ansi.h> */
d52 2
a53 2
/* Assembler format: overall framework
   ----------------------------------- */
d63 2
a64 2
/* Assembler format: dispatch tables 
   --------------------------------- */
d72 2
a73 2
/* Assembler format: sections
   -------------------------- */
d78 2
a79 2
/* Stack & calling: aggregate returns
   ---------------------------------- */
d84 2
a85 2
/* Assembler format: alignment output
   ---------------------------------- */
d89 1
a89 1
/* i386 openbsd still uses an older gas that doesn't insert nops by default
d97 2
a98 2
/* Stack & calling: profiling
   -------------------------- */
d103 1
a103 1
  fputs(flag_pic ? "\tcall mcount@@PLT\n": "\tcall mcount\n", FILE);
d105 3
a107 3
/* Assembler format: exception region output 
   ----------------------------------------- */
/* all configurations that don't use elf must be explicit about not using
d112 2
a113 2
/* Assembler format: alignment output
   ---------------------------------- */
@


1.7
log
@Cleaning up configuration, and comments...
@
text
@d1 1
a1 3
/* $OpenBSD: openbsd.h,v 1.6 1999/01/12 11:27:40 espie Exp $	*/
/* vi:ts=8: 
 */
d19 1
a19 1
 * ------------------------------------ */
d34 1
a34 1
 * ----------------------------------- */
d41 2
a42 2
/* The following macros were originally stolen from i386v4.h */
/* These have to be defined to get PIC code correct */
d45 1
a45 1
 * --------------------------------- */
d54 1
a54 1
 * -------------------------- */
d60 1
a60 1
 * ---------------------------------- */
d66 1
a66 1
 * ---------------------------------- */
d79 1
a79 1
 * -------------------------- */
d87 1
a87 1
 * ----------------------------------------- */
d94 1
a94 1
 * ---------------------------------- */
@


1.6
log
@- fixed up i386/*VTABLE once more... this time for good.
- clean up openbsd.h comments
- add patch to auto-detect mkstemps. Accordingly, need to run
autoreconf in gcc and in libiberty.
@
text
@d1 1
a1 1
/* $OpenBSD: openbsd.h,v 1.5 1999/01/12 00:19:49 espie Exp $	*/
d20 1
a20 2

/* layout of source language data types
d35 2
a36 3
/* assembler format: overall framework
 * -----------------------------------
 */
d42 1
a42 1

d46 3
a48 1
/* This is how to output an element of a case-vector that is relative.
d55 2
d61 2
d66 5
a70 2

/* check for a recent version of gas */
a78 2

/* Profiling routines, partially copied from i386/osfrose.h.  */
d80 4
a83 1
/* Redefine this to use %eax instead of %edx.  */
d86 1
a86 10
{									\
  if (flag_pic)								\
    {									\
      fprintf (FILE, "\tcall mcount@@PLT\n");				\
    }									\
  else									\
    {									\
      fprintf (FILE, "\tcall mcount\n");				\
    }									\
}
d88 5
a92 2
/* aout-i386-openbsd does not handle dwarf2 unwinds and initialization info
   correctly. */
d95 2
d101 2
a102 1
   This is used to align code labels according to Intel recommendations.  */
d112 1
a112 2

/* We pick up ASM_OUTPUT_MI_THUNK from unix.h */
@


1.5
log
@partial archives are no longer bogus.

i386/openbsd.h does include unix.h which yields a perfectly good definition
of the *THUNK macro.

trivial fix to a bug in gcc.c.
@
text
@d1 1
a1 1
/* $OpenBSD: openbsd.h,v 1.4 1999/01/11 21:23:26 espie Exp $	*/
a105 47


/* taken from unix.h */
/* Output code to add DELTA to the first argument, and then jump to FUNCTION.
   Used for C++ multiple inheritance.  */
/* egcs comes with a MI version of this code, but it is generally more
 * efficient to code a MD version */
#define ASM_OUTPUT_MI_THUNK(FILE, THUNK_FNDECL, DELTA, FUNCTION)	      \
do {									      \
  tree parm;								      \
									      \
  if (i386_regparm > 0)							      \
    parm = TYPE_ARG_TYPES (TREE_TYPE (function));			      \
  else									      \
    parm = NULL_TREE;							      \
  for (; parm; parm = TREE_CHAIN (parm))				      \
    if (TREE_VALUE (parm) == void_type_node)				      \
      break;								      \
  fprintf (FILE, "\taddl $%d,%s\n", DELTA,				      \
	   parm ? "%eax"						      \
	   : aggregate_value_p (TREE_TYPE (TREE_TYPE (FUNCTION))) ? "8(%esp)" \
	   : "4(%esp)");						      \
									      \
  if (flag_pic)								      \
    {									      \
      rtx xops[2];							      \
      xops[0] = pic_offset_table_rtx;					      \
      xops[1] = (rtx) gen_label_rtx ();					      \
									      \
      if (i386_regparm > 2)						      \
	abort ();							      \
      output_asm_insn ("push%L0 %0", xops);				      \
      output_asm_insn (AS1 (call,%P1), xops);				      \
      ASM_OUTPUT_INTERNAL_LABEL (FILE, "L", CODE_LABEL_NUMBER (xops[1]));     \
      output_asm_insn (AS1 (pop%L0,%0), xops);				      \
      output_asm_insn ("addl $_GLOBAL_OFFSET_TABLE_+[.-%P1],%0", xops);	      \
      fprintf (FILE, "\tmovl ");					      \
      assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));	      \
      fprintf (FILE, "@@GOT(%%ebx),%%ecx\n\tpopl %%ebx\n\tjmp *%%ecx\n");      \
    }									      \
  else									      \
    {									      \
      fprintf (FILE, "\tjmp ");						      \
      assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));	      \
      fprintf (FILE, "\n");						      \
    }									      \
} while (0)
@


1.4
log
@Some cleaning up, triggered by alpha.

- TARGET_CPU_DEFAULT belongs in configure.in, not in various .h files.
If it goes out wrong, it's the output of uname that needs to be fixed
(or config.guess, e.g., even pentium gives out i386, as intended). Makes
it possible to configure a i586-unknown-openbsd system if one really WANTS
to output only pentium specific code.

- ASM_FILE_START put into alpha/openbsd.h. Used to be in alpha.h, but
elf & osf diverged...

- set xfrag=none for alpha, as the default config is bogus and supplies
a dec-osf specific xalpha.
@
text
@d1 1
a1 1
/* $OpenBSD: openbsd.h,v 1.3 1999/01/10 02:50:05 espie Exp $	*/
d153 3
@


1.3
log
@Update to 990103 snapshot.
Inform user of the warnings file in case of a bootstrap crash.

Major change: add alpha & pa configuration, and clean up ALL
openbsd configuration files thoroughly... this is probably going to
break a few things.
@
text
@d1 1
a1 1
/*	$OpenBSD: openbsd.h,v 1.2 1998/12/16 17:52:29 espie Exp $	*/
a3 3

/* This should go away when the math-emulator is fixed */
#define TARGET_CPU_DEFAULT TARGET_NO_FANCY_MATH_387 
@


1.2
log
@Update to 19981213 snapshot.
- use new `enable-languages' mechanism,
- depend i386/openbsd.h on flag_pic
- remove temp fix for m68k
@
text
@d1 6
a6 2
/* This goes away when the math-emulator is fixed */
#define TARGET_CPU_DEFAULT 0400		/* TARGET_NO_FANCY_MATH_387 */
d17 1
d20 3
a22 2
#undef CPP_PREDEFINES
#define CPP_PREDEFINES "-Dunix -Di386 -D__OpenBSD__ -Asystem(unix) -Asystem(OpenBSD) -Acpu(i386) -Amachine(i386)"
d24 3
a35 3
#undef WCHAR_UNSIGNED
#define WCHAR_UNSIGNED 0

d39 3
a41 7
/*	$OpenBSD: openbsd.h,v 1.1 1998/10/02 18:57:29 espie Exp $	*/

/* There are conflicting reports about whether this system uses
   a different assembler syntax.  wilson@@cygnus.com says # is right.  */
#undef COMMENT_BEGIN
#define COMMENT_BEGIN "#"

d48 1
a48 1
/* The following macros are stolen from i386v4.h */
a53 1

d58 1
a58 1
/* Indicate that jump tables go in the text section.  This is
a59 1

d66 3
a68 1
/* i386 openbsd still uses old binutils that don't insert nops by default
d74 1
d92 2
a93 2
/* Until they use ELF or something that handles dwarf2 unwinds
   and initialization stuff better.  */
d96 60
@


1.1
log
@Slight changes, check compilation on i386.
@
text
@d33 1
a33 1
/*	$OpenBSD: openbsd.h,v 1.5 1997/03/28 20:47:21 deraadt Exp $	*/
d60 1
a60 1
#define JUMP_TABLES_IN_TEXT_SECTION 1
@

