head	1.4;
access;
symbols
	OPENBSD_2_9_TRACKING_SWITCH:1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	ocaml:1.1.1.1
	ocaml-1_07:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2001.08.22.00.32.00;	author angelos;	state dead;
branches;
next	1.3;

1.3
date	2000.03.07.23.20.17;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	99.07.09.02.51.12;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	98.02.13.02.09.02;	author angelos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.02.13.02.09.02;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to ocaml 3.02 --- from bk@@rt.fm
@
text
@--- yacc/main.c.orig	Wed Nov 17 19:59:05 1999
+++ yacc/main.c	Tue Mar  7 22:35:27 2000
@@@@ -51,6 +51,14 @@@@ char *text_file_name;
 char *union_file_name;
 char *verbose_file_name;
 
+#if defined(__OpenBSD__)
+#define HAVE_MKSTEMP
+#endif
+
+#ifdef HAVE_MKSTEMP
+int action_fd = -1, entry_fd = -1, text_fd = -1, union_fd = -1;
+#endif
+
 FILE *action_file;	/*  a temp file, used to save actions associated    */
 			/*  with rules until the parser is written	    */
 FILE *entry_file;
@@@@ -89,16 +97,29 @@@@ char  *rassoc;
 short **derives;
 char *nullable;
 
+#if !defined(HAVE_MKSTEMP)
 extern char *mktemp(char *);
+#endif
 extern char *getenv(const char *);
 
 
 void done(int k)
 {
+#ifdef HAVE_MKSTEMP
+    if (action_fd != -1)
+    	unlink(action_file_name);
+    if (entry_fd != -1)
+    	unlink(entry_file_name);
+    if (text_fd != -1)
+    	unlink(text_file_name);
+    if (union_fd != -1)
+    	unlink(union_file_name);
+#else
     if (action_file) { fclose(action_file); unlink(action_file_name); }
     if (entry_file) { fclose(entry_file); unlink(entry_file_name); }
     if (text_file) { fclose(text_file); unlink(text_file_name); }
     if (union_file) { fclose(union_file); unlink(union_file_name); }
+#endif
     if (output_file && k > 0) {
       fclose(output_file); unlink(output_file_name);
     }
@@@@ -283,11 +304,26 @@@@ void create_file_names(void)
     union_file_name[len + 5] = 'u';
 
 #ifndef NO_UNIX
+#ifdef HAVE_MKSTEMP
+    action_fd = mkstemp(action_file_name);
+    if (action_fd == -1)
+    	open_error(action_file_name);
+    entry_fd = mkstemp(entry_file_name);
+    if (entry_fd == -1)
+    	open_error(entry_file_name);
+    text_fd = mkstemp(text_file_name);
+    if (text_fd == -1)
+    	open_error(text_file_name);
+    union_fd = mkstemp(union_file_name);
+    if (union_fd == -1)
+    	open_error(union_file_name);
+#else
     mktemp(action_file_name);
     mktemp(entry_file_name);
     mktemp(text_file_name);
     mktemp(union_file_name);
 #endif
+#endif
 
     len = strlen(file_prefix);
 
@@@@ -328,15 +364,27 @@@@ void open_files(void)
 	    open_error(input_file_name);
     }
 
+#ifdef HAVE_MKSTEMP
+    action_file = fdopen(action_fd, "w");
+#else
     action_file = fopen(action_file_name, "w");
+#endif
     if (action_file == 0)
 	open_error(action_file_name);
 
+#ifdef HAVE_MKSTEMP
+    entry_file = fdopen(entry_fd, "w");
+#else
     entry_file = fopen(entry_file_name, "w");
+#endif
     if (entry_file == 0)
 	open_error(entry_file_name);
 
+#ifdef HAVE_MKSTEMP
+    text_file = fdopen(text_fd, "w");
+#else
     text_file = fopen(text_file_name, "w");
+#endif
     if (text_file == 0)
 	open_error(text_file_name);
 
@@@@ -352,7 +400,11 @@@@ void open_files(void)
 	defines_file = fopen(defines_file_name, "w");
 	if (defines_file == 0)
 	    open_error(defines_file_name);
+#ifdef HAVE_MKSTEMP
+	union_file = fdopen(union_fd, "w");
+#else
 	union_file = fopen(union_file_name, "w");
+#endif
 	if (union_file ==  0)
 	    open_error(union_file_name);
     }
@


1.3
log
@Replace sloppy mkstemp patch with something sane, that does correctly delete
temp files at the end, and traps error conditions better.

Checked with fries@@
@
text
@@


1.2
log
@upgrade to ocaml 2.02
@
text
@d1 18
a18 3
--- yacc/main.c.orig	Thu Jul  8 21:24:20 1999
+++ yacc/main.c	Thu Jul  8 21:25:51 1999
@@@@ -88,7 +88,9 @@@@
d22 1
a22 1
+#if !defined(__OpenBSD__)
d28 21
a48 1
@@@@ -282,10 +284,17 @@@@
d52 13
a64 5
+#ifdef __OpenBSD__
+    close(mkstemp(action_file_name));
+    close(mkstemp(entry_file_name));
+    close(mkstemp(text_file_name));
+    close(mkstemp(union_file_name));
d70 1
a71 1
 #endif
d74 41
@


1.1
log
@Initial revision
@
text
@d1 30
a30 34
*** yacc/main.c.orig	Thu Feb 12 20:55:43 1998
--- yacc/main.c	Thu Feb 12 20:57:50 1998
***************
*** 88,94 ****
--- 88,96 ----
  short **derives;
  char *nullable;
  
+ #if !defined(__OpenBSD__)
  extern char *mktemp(char *);
+ #endif
  extern char *getenv(const char *);
  
  
***************
*** 282,291 ****
--- 284,300 ----
      union_file_name[len + 5] = 'u';
  
  #ifndef NO_UNIX
+ #ifdef __OpenBSD__
+     close(mkstemp(action_file_name));
+     close(mkstemp(entry_file_name));
+     close(mkstemp(text_file_name));
+     close(mkstemp(union_file_name));
+ #else
      mktemp(action_file_name);
      mktemp(entry_file_name);
      mktemp(text_file_name);
      mktemp(union_file_name);
+ #endif
  #endif
  
      len = strlen(file_prefix);
@


1.1.1.1
log
@O-Caml 1.07
@
text
@@
