head	1.4;
access;
symbols
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2005.05.09.13.50.41;	author avsm;	state dead;
branches;
next	1.3;

1.3
date	2004.06.21.18.38.48;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.06.17.28.03;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.05.21.54.36;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@upgrade to ocaml-3.08.3, tested on many architectures by krw@@
@
text
@$OpenBSD: patch-asmrun_amd64_S,v 1.3 2004/06/21 18:38:48 avsm Exp $
--- asmrun/amd64.S.orig	2003-06-30 09:28:45.000000000 +0100
+++ asmrun/amd64.S	2004-03-05 11:37:40.000000000 +0000
@@@@ -252,7 +252,8 @@@@ FUNCTION(caml_start_program)
 FUNCTION(raise_caml_exception)
         movq    %rdi, %rax
         movq    caml_exception_pointer(%rip), %rsp
-        popq    caml_exception_pointer(%rip)
+	popq	%r14  /* Recover previous exception handler */
+	movq	young_ptr(%rip), %r15  /* Reload alloc ptr */
         ret
 
 /* Callback from C to Caml */
@


1.3
log
@remove old binutils workaround on amd64 native code compilation now that
we have binutils-2.14
@
text
@d1 1
a1 1
$OpenBSD: patch-asmrun_amd64_S,v 1.2 2004/03/06 17:28:03 avsm Exp $
@


1.2
log
@better assembly for our gas; restore 'a' and @@progdata
@
text
@d1 1
a1 1
$OpenBSD: patch-asmrun_amd64_S,v 1.1 2004/03/05 21:54:36 avsm Exp $
a13 9
@@@@ -322,7 +323,7 @@@@ system__frametable:
         .value  0           /* no roots here */
         .align  8
 
-	.section	.rodata.cst8,"aM",@@progbits,8
+	.section	.rodata.cst8,"a",@@progbits
         .globl  caml_negf_mask
         .type   caml_negf_mask,@@object
         .align  16
@


1.1
log
@support native code compilation on amd64, resulting in crazy fast ocaml
sturm@@, pvalchev@@ ok
@
text
@d1 1
a1 1
$OpenBSD$
d19 1
a19 1
+	.section	rodata
@

