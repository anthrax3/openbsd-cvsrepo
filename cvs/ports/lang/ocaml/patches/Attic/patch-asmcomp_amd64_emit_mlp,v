head	1.5;
access;
symbols
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2005.09.23.14.23.42;	author avsm;	state dead;
branches;
next	1.4;

1.4
date	2005.06.13.23.21.55;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.09.13.50.41;	author avsm;	state dead;
branches;
next	1.2;

1.2
date	2004.03.06.17.28.03;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.05.21.54.36;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to ocaml-3.08.4
@
text
@$OpenBSD: patch-asmcomp_amd64_emit_mlp,v 1.4 2005/06/13 23:21:55 avsm Exp $
--- asmcomp/amd64/emit.mlp.orig	Thu Jul  1 17:09:03 2004
+++ asmcomp/amd64/emit.mlp	Mon Jun 13 23:58:12 2005
@@@@ -35,8 +35,12 @@@@ let frame_required () =
   !contains_calls || num_stack_slots.(0) > 0 || num_stack_slots.(1) > 0
 
 let frame_size () =                     (* includes return address *)
-  let sz = (!stack_offset + 8 * (num_stack_slots.(0) + num_stack_slots.(1)) + 8)
-  in Misc.align sz 16
+  if frame_required() then begin
+    let sz = 
+      (!stack_offset + 8 * (num_stack_slots.(0) + num_stack_slots.(1)) + 8)
+    in Misc.align sz 16
+  end else 
+    !stack_offset + 8
 
 let slot_offset loc cl =
   match loc with
@


1.4
log
@fix a rare bug in amd64 native code output that might trigger on
tail recursive functions with > 9 arguments. from ocaml cvs
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@upgrade to ocaml-3.08.3, tested on many architectures by krw@@
@
text
@d1 5
a5 11
$OpenBSD: patch-asmcomp_amd64_emit_mlp,v 1.2 2004/03/06 17:28:03 avsm Exp $
--- asmcomp/amd64/emit.mlp.orig	2004-03-04 22:55:53.000000000 +0000
+++ asmcomp/amd64/emit.mlp	2004-03-04 22:56:33.000000000 +0000
@@@@ -612,7 +612,7 @@@@ let fundecl fundecl =
     `{emit_label !range_check_trap}:	call	{emit_symbol "caml_array_bound_error"}\n`;
     (* Never returns, but useful to have retaddr on stack for debugging *)
   if !float_constants <> [] then begin
-    `	.section	.rodata.cst8,\"aM\",@@progbits,8\n`;
+    `	.section	.rodata.cst8,\"a\",@@progbits\n`;
     List.iter emit_float_constant !float_constants
   end
d7 12
@


1.2
log
@better assembly for our gas; restore 'a' and @@progdata
@
text
@d1 1
a1 1
$OpenBSD: patch-asmcomp_amd64_emit_mlp,v 1.1 2004/03/05 21:54:36 avsm Exp $
@


1.1
log
@support native code compilation on amd64, resulting in crazy fast ocaml
sturm@@, pvalchev@@ ok
@
text
@d1 1
a1 1
$OpenBSD$
d9 1
a9 1
+    `	.section	.rodata\n`;
@

