head	1.7;
access;
symbols
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.24
	OPENBSD_5_0:1.6.0.22
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.20
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.18
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.16
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.14
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.12
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.10
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.8
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	gcc:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2012.02.22.07.48.10;	author ajacoutot;	state dead;
branches;
next	1.6;

1.6
date	2006.03.05.22.11.15;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2005.09.11.22.04.41;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.04.14.51.37;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.21.10.34.43;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.07.16.30.06;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.28.15.12.45;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.28.15.12.45;	author espie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Now that the system headers provide a proper definition of NULL we
can remove all these NULL patches.

from Brad
ok espie@@
@
text
@$OpenBSD: patch-gcc_gcc_c,v 1.6 2006/03/05 22:11:15 espie Exp $
--- gcc/gcc.c.orig	Sat Jan 21 19:29:08 2006
+++ gcc/gcc.c	Sat Mar  4 14:34:46 2006
@@@@ -1299,7 +1299,7 @@@@ translate_options (int *argcp, const cha
 		  /* Store the translation as one argv elt or as two.  */
 		  if (arg != 0 && strchr (arginfo, 'j') != 0)
 		    newv[newindex++] = concat (option_map[j].equivalent, arg,
-					       NULL);
+					       (void *)0);
 		  else if (arg != 0)
 		    {
 		      newv[newindex++] = option_map[j].equivalent;
@@@@ -1618,7 +1618,7 @@@@ init_gcc_specs (struct obstack *obstack,
 		shared_name,
 #endif
 #endif
-		"}}}", NULL);
+		"}}}", (void *)0);
 
   obstack_grow (obstack, buf, strlen (buf));
   free (buf);
@@@@ -1816,7 +1816,7 @@@@ set_spec (const char *name, const char *
 
   old_spec = *(sl->ptr_spec);
   *(sl->ptr_spec) = ((spec[0] == '+' && ISSPACE ((unsigned char)spec[1]))
-		     ? concat (old_spec, spec + 1, NULL)
+		     ? concat (old_spec, spec + 1, (void *)0)
 		     : xstrdup (spec));
 
 #ifdef DEBUG_SPECS
@@@@ -2480,10 +2480,10 @@@@ find_a_file (struct path_prefix *pprefix
       len += len1 > len2 ? len1 : len2;
       if (multilib_dir)
 	multilib_name = ACONCAT ((multilib_dir, dir_separator_str, name,
-				  NULL));
+				  (void *)0));
       if (strcmp (multilib_os_dir, ".") != 0)
 	multilib_os_name = ACONCAT ((multilib_os_dir, dir_separator_str, name,
-				    NULL));
+				    (void *)0));
     }
 
   temp = xmalloc (len);
@@@@ -2642,8 +2642,8 @@@@ add_sysrooted_prefix (struct path_prefix
   if (target_system_root)
     {
       if (target_sysroot_suffix)
-	  prefix = concat (target_sysroot_suffix, prefix, NULL);
-      prefix = concat (target_system_root, prefix, NULL);
+	  prefix = concat (target_sysroot_suffix, prefix, (void *)0);
+      prefix = concat (target_system_root, prefix, (void *)0);
 
       /* We have to override this because GCC's notion of sysroot
 	 moves along with GCC.  */
@@@@ -3224,7 +3224,7 @@@@ process_command (int argc, const char **
 	  break;
       new_argv0 = xmemdup (progname, baselen,
 			   baselen + concat_length (new_version, new_machine,
-						    "-gcc-", NULL) + 1);
+						    "-gcc-", (void *)0) + 1);
       strcpy (new_argv0 + baselen, new_machine);
       strcat (new_argv0, "-gcc-");
       strcat (new_argv0, new_version);
@@@@ -3251,7 +3251,7 @@@@ process_command (int argc, const char **
 						 standard_bindir_prefix,
 						 standard_libexec_prefix);
       if (gcc_exec_prefix)
-	putenv (concat ("GCC_EXEC_PREFIX=", gcc_exec_prefix, NULL));
+	putenv (concat ("GCC_EXEC_PREFIX=", gcc_exec_prefix, (void *)0));
     }
   else
     gcc_libexec_prefix = make_relative_prefix (gcc_exec_prefix,
@@@@ -3298,7 +3298,7 @@@@ process_command (int argc, const char **
 	    {
 	      strncpy (nstore, startp, endp - startp);
 	      if (endp == startp)
-		strcpy (nstore, concat (".", dir_separator_str, NULL));
+		strcpy (nstore, concat (".", dir_separator_str, (void *)0));
 	      else if (!IS_DIR_SEPARATOR (endp[-1]))
 		{
 		  nstore[endp - startp] = DIR_SEPARATOR;
@@@@ -3332,7 +3332,7 @@@@ process_command (int argc, const char **
 	    {
 	      strncpy (nstore, startp, endp - startp);
 	      if (endp == startp)
-		strcpy (nstore, concat (".", dir_separator_str, NULL));
+		strcpy (nstore, concat (".", dir_separator_str, (void *)0));
 	      else if (!IS_DIR_SEPARATOR (endp[-1]))
 		{
 		  nstore[endp - startp] = DIR_SEPARATOR;
@@@@ -3365,7 +3365,7 @@@@ process_command (int argc, const char **
 	    {
 	      strncpy (nstore, startp, endp - startp);
 	      if (endp == startp)
-		strcpy (nstore, concat (".", dir_separator_str, NULL));
+		strcpy (nstore, concat (".", dir_separator_str, (void *)0));
 	      else if (!IS_DIR_SEPARATOR (endp[-1]))
 		{
 		  nstore[endp - startp] = DIR_SEPARATOR;
@@@@ -3830,7 +3830,7 @@@@ warranty; not even for MERCHANTABILITY o
 	      PREFIX_PRIORITY_LAST, 1, 0);
 
   tooldir_prefix = concat (tooldir_base_prefix, spec_machine,
-			   dir_separator_str, NULL);
+			   dir_separator_str, (void *)0);
 
   /* If tooldir is relative, base it on exec_prefixes.  A relative
      tooldir lets us move the installed tree as a unit.
@@@@ -3845,28 +3845,28 @@@@ warranty; not even for MERCHANTABILITY o
 	{
 	  char *gcc_exec_tooldir_prefix
 	    = concat (gcc_exec_prefix, spec_machine, dir_separator_str,
-		      spec_version, dir_separator_str, tooldir_prefix, NULL);
+		      spec_version, dir_separator_str, tooldir_prefix, (void *)0);
 
 	  add_prefix (&exec_prefixes,
 		      concat (gcc_exec_tooldir_prefix, "bin",
-			      dir_separator_str, NULL),
+			      dir_separator_str, (void *)0),
 		      NULL, PREFIX_PRIORITY_LAST, 0, 0);
 	  add_prefix (&startfile_prefixes,
 		      concat (gcc_exec_tooldir_prefix, "lib",
-			      dir_separator_str, NULL),
+			      dir_separator_str, (void *)0),
 		      NULL, PREFIX_PRIORITY_LAST, 0, 1);
 	}
 
       tooldir_prefix = concat (standard_exec_prefix, spec_machine,
 			       dir_separator_str, spec_version,
-			       dir_separator_str, tooldir_prefix, NULL);
+			       dir_separator_str, tooldir_prefix, (void *)0);
     }
 
   add_prefix (&exec_prefixes,
-	      concat (tooldir_prefix, "bin", dir_separator_str, NULL),
+	      concat (tooldir_prefix, "bin", dir_separator_str, (void *)0),
 	      "BINUTILS", PREFIX_PRIORITY_LAST, 0, 0);
   add_prefix (&startfile_prefixes,
-	      concat (tooldir_prefix, "lib", dir_separator_str, NULL),
+	      concat (tooldir_prefix, "lib", dir_separator_str, (void *)0),
 	      "BINUTILS", PREFIX_PRIORITY_LAST, 0, 1);
 
 #if defined(TARGET_SYSTEM_ROOT_RELOCATABLE) && !defined(VMS)
@@@@ -3990,7 +3990,7 @@@@ warranty; not even for MERCHANTABILITY o
 	{ /* POSIX allows separation of -l and the lib arg;
 	     canonicalize by concatenating -l with its arg */
 	  infiles[n_infiles].language = "*";
-	  infiles[n_infiles++].name = concat ("-l", argv[++i], NULL);
+	  infiles[n_infiles++].name = concat ("-l", argv[++i], (void *)0);
 	}
       else if (strncmp (argv[i], "-l", 2) == 0)
 	{
@@@@ -5945,11 +5945,11 @@@@ is_directory (const char *path1, const c
   if (linker
       && ((cp - path == 6
 	   && strcmp (path, concat (dir_separator_str, "lib",
-				    dir_separator_str, ".", NULL)) == 0)
+				    dir_separator_str, ".", (void *)0)) == 0)
 	  || (cp - path == 10
 	      && strcmp (path, concat (dir_separator_str, "usr",
 				       dir_separator_str, "lib",
-				       dir_separator_str, ".", NULL)) == 0)))
+				       dir_separator_str, ".", (void *)0)) == 0)))
     return 0;
 
   return (stat (path, &st) >= 0 && S_ISDIR (st.st_mode));
@@@@ -6136,8 +6136,8 @@@@ main (int argc, const char **argv)
   /* Read specs from a file if there is one.  */
 
   machine_suffix = concat (spec_machine, dir_separator_str,
-			   spec_version, dir_separator_str, NULL);
-  just_machine_suffix = concat (spec_machine, dir_separator_str, NULL);
+			   spec_version, dir_separator_str, (void *)0);
+  just_machine_suffix = concat (spec_machine, dir_separator_str, (void *)0);
 
   specs_file = find_a_file (&startfile_prefixes, "specs", R_OK, 0);
   /* Read the specs file unless it is a default one.  */
@@@@ -6251,12 +6251,12 @@@@ main (int argc, const char **argv)
 	  if (gcc_exec_prefix)
 	    add_prefix (&startfile_prefixes,
 			concat (gcc_exec_prefix, machine_suffix,
-				standard_startfile_prefix, NULL),
+				standard_startfile_prefix, (void *)0),
 			NULL, PREFIX_PRIORITY_LAST, 0, 1);
 	  add_prefix (&startfile_prefixes,
 		      concat (standard_exec_prefix,
 			      machine_suffix,
-			      standard_startfile_prefix, NULL),
+			      standard_startfile_prefix, (void *)0),
 		      NULL, PREFIX_PRIORITY_LAST, 0, 1);
 	}
 
@@@@ -6282,7 +6282,7 @@@@ main (int argc, const char **argv)
   /* If we have a GCC_EXEC_PREFIX envvar, modify it for cpp's sake.  */
   if (gcc_exec_prefix)
     gcc_exec_prefix = concat (gcc_exec_prefix, spec_machine, dir_separator_str,
-			      spec_version, dir_separator_str, NULL);
+			      spec_version, dir_separator_str, (void *)0);
 
   /* Now we have the specs.
      Set the `valid' bits for switches that match anything in any spec.  */
@


1.6
log
@post-release version.
disable mudflap for now, as it is not compiling for us.
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_gcc_c,v 1.5 2005/09/11 22:04:41 espie Exp $
@


1.5
log
@update to a recent snapshot. USE_LIBTOOL.
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_gcc_c,v 1.4 2005/08/04 14:51:37 espie Exp $
--- gcc/gcc.c.orig	Fri Aug 12 09:57:52 2005
+++ gcc/gcc.c	Mon Sep 12 00:01:24 2005
@@@@ -1300,7 +1300,7 @@@@ translate_options (int *argcp, const cha
d13 1
a13 1
@@@@ -1619,7 +1619,7 @@@@ init_gcc_specs (struct obstack *obstack,
d22 1
a22 1
@@@@ -1817,7 +1817,7 @@@@ set_spec (const char *name, const char *
d31 1
a31 1
@@@@ -2475,10 +2475,10 @@@@ find_a_file (struct path_prefix *pprefix
d44 1
a44 1
@@@@ -2637,8 +2637,8 @@@@ add_sysrooted_prefix (struct path_prefix
d55 1
a55 1
@@@@ -3220,7 +3220,7 @@@@ process_command (int argc, const char **
d64 1
a64 1
@@@@ -3247,7 +3247,7 @@@@ process_command (int argc, const char **
d73 1
a73 1
@@@@ -3294,7 +3294,7 @@@@ process_command (int argc, const char **
d82 1
a82 1
@@@@ -3328,7 +3328,7 @@@@ process_command (int argc, const char **
d91 1
a91 1
@@@@ -3361,7 +3361,7 @@@@ process_command (int argc, const char **
d100 1
a100 1
@@@@ -3825,7 +3825,7 @@@@ warranty; not even for MERCHANTABILITY o
d109 1
a109 1
@@@@ -3840,28 +3840,28 @@@@ warranty; not even for MERCHANTABILITY o
d144 1
a144 1
@@@@ -3985,7 +3985,7 @@@@ warranty; not even for MERCHANTABILITY o
d153 1
a153 1
@@@@ -5940,11 +5940,11 @@@@ is_directory (const char *path1, const c
d167 1
a167 1
@@@@ -6131,8 +6131,8 @@@@ main (int argc, const char **argv)
d178 1
a178 1
@@@@ -6246,12 +6246,12 @@@@ main (int argc, const char **argv)
d193 1
a193 1
@@@@ -6277,7 +6277,7 @@@@ main (int argc, const char **argv)
@


1.4
log
@update to most recent gcc 4.1 snapshot.
@
text
@d1 3
a3 3
$OpenBSD: patch-gcc_gcc_c,v 1.3 2005/05/21 10:34:43 espie Exp $
--- gcc/gcc.c.orig	Mon Jul 25 21:41:58 2005
+++ gcc/gcc.c	Thu Aug  4 10:54:01 2005
d55 1
a55 1
@@@@ -3216,7 +3216,7 @@@@ process_command (int argc, const char **
d64 1
a64 1
@@@@ -3243,7 +3243,7 @@@@ process_command (int argc, const char **
d73 1
a73 1
@@@@ -3290,7 +3290,7 @@@@ process_command (int argc, const char **
d82 1
a82 1
@@@@ -3324,7 +3324,7 @@@@ process_command (int argc, const char **
d91 1
a91 1
@@@@ -3357,7 +3357,7 @@@@ process_command (int argc, const char **
d100 1
a100 1
@@@@ -3820,7 +3820,7 @@@@ warranty; not even for MERCHANTABILITY o
d109 1
a109 1
@@@@ -3835,28 +3835,28 @@@@ warranty; not even for MERCHANTABILITY o
d144 1
a144 1
@@@@ -3980,7 +3980,7 @@@@ warranty; not even for MERCHANTABILITY o
d153 1
a153 1
@@@@ -5935,11 +5935,11 @@@@ is_directory (const char *path1, const c
d167 1
a167 1
@@@@ -6126,8 +6126,8 @@@@ main (int argc, const char **argv)
d178 1
a178 1
@@@@ -6241,12 +6241,12 @@@@ main (int argc, const char **argv)
d193 1
a193 1
@@@@ -6272,7 +6272,7 @@@@ main (int argc, const char **argv)
@


1.3
log
@switch to a more recent snapshot. Needs recent m4 to rebuild configure
correctly.
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_gcc_c,v 1.2 2005/03/07 16:30:06 espie Exp $
--- gcc/gcc.c.orig	Sun May 15 19:06:16 2005
+++ gcc/gcc.c	Mon May 16 17:43:12 2005
@@@@ -1288,7 +1288,7 @@@@ translate_options (int *argcp, const cha
d13 1
a13 1
@@@@ -1605,7 +1605,7 @@@@ init_gcc_specs (struct obstack *obstack,
d22 1
a22 1
@@@@ -1803,7 +1803,7 @@@@ set_spec (const char *name, const char *
d31 1
a31 1
@@@@ -2461,10 +2461,10 @@@@ find_a_file (struct path_prefix *pprefix
d44 1
a44 1
@@@@ -2623,8 +2623,8 @@@@ add_sysrooted_prefix (struct path_prefix
d55 1
a55 1
@@@@ -3192,7 +3192,7 @@@@ process_command (int argc, const char **
d64 1
a64 1
@@@@ -3219,7 +3219,7 @@@@ process_command (int argc, const char **
d73 1
a73 1
@@@@ -3266,7 +3266,7 @@@@ process_command (int argc, const char **
d82 1
a82 1
@@@@ -3300,7 +3300,7 @@@@ process_command (int argc, const char **
d91 1
a91 1
@@@@ -3333,7 +3333,7 @@@@ process_command (int argc, const char **
d100 1
a100 1
@@@@ -3796,7 +3796,7 @@@@ warranty; not even for MERCHANTABILITY o
d109 1
a109 1
@@@@ -3811,28 +3811,28 @@@@ warranty; not even for MERCHANTABILITY o
d144 1
a144 1
@@@@ -3951,7 +3951,7 @@@@ warranty; not even for MERCHANTABILITY o
d153 1
a153 1
@@@@ -5906,11 +5906,11 @@@@ is_directory (const char *path1, const c
d167 1
a167 1
@@@@ -6097,8 +6097,8 @@@@ main (int argc, const char **argv)
d178 1
a178 1
@@@@ -6212,12 +6212,12 @@@@ main (int argc, const char **argv)
d193 1
a193 1
@@@@ -6243,7 +6243,7 @@@@ main (int argc, const char **argv)
@


1.2
log
@more recent snap
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_gcc_c,v 1.6 2005/02/27 21:27:12 espie Exp $
--- gcc/gcc.c.orig	Fri Mar  4 05:42:59 2005
+++ gcc/gcc.c	Mon Mar  7 15:31:39 2005
@@@@ -1295,7 +1295,7 @@@@ translate_options (int *argcp, const cha
d13 1
a13 1
@@@@ -1611,7 +1611,7 @@@@ init_gcc_specs (struct obstack *obstack,
d22 1
a22 1
@@@@ -1809,7 +1809,7 @@@@ set_spec (const char *name, const char *
d31 1
a31 1
@@@@ -2467,10 +2467,10 @@@@ find_a_file (struct path_prefix *pprefix
d44 1
a44 1
@@@@ -2629,8 +2629,8 @@@@ add_sysrooted_prefix (struct path_prefix
d55 1
a55 1
@@@@ -3202,7 +3202,7 @@@@ process_command (int argc, const char **
d64 1
a64 1
@@@@ -3229,7 +3229,7 @@@@ process_command (int argc, const char **
d73 1
a73 1
@@@@ -3276,7 +3276,7 @@@@ process_command (int argc, const char **
d82 1
a82 1
@@@@ -3310,7 +3310,7 @@@@ process_command (int argc, const char **
d91 1
a91 1
@@@@ -3343,7 +3343,7 @@@@ process_command (int argc, const char **
d100 1
a100 1
@@@@ -3811,7 +3811,7 @@@@ warranty; not even for MERCHANTABILITY o
d109 1
a109 1
@@@@ -3826,28 +3826,28 @@@@ warranty; not even for MERCHANTABILITY o
d144 1
a144 1
@@@@ -3970,7 +3970,7 @@@@ warranty; not even for MERCHANTABILITY o
d153 1
a153 1
@@@@ -5922,11 +5922,11 @@@@ is_directory (const char *path1, const c
d167 1
a167 1
@@@@ -6110,8 +6110,8 @@@@ main (int argc, const char **argv)
d178 1
a178 1
@@@@ -6216,12 +6216,12 @@@@ main (int argc, const char **argv)
d193 1
a193 1
@@@@ -6247,7 +6247,7 @@@@ main (int argc, const char **argv)
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
--- gcc/gcc.c.orig	Thu Feb 24 00:11:06 2005
+++ gcc/gcc.c	Sun Feb 27 19:09:07 2005
@@@@ -1293,7 +1293,7 @@@@ translate_options (int *argcp, const cha
d13 1
a13 1
@@@@ -1609,7 +1609,7 @@@@ init_gcc_specs (struct obstack *obstack,
d22 1
a22 1
@@@@ -1807,7 +1807,7 @@@@ set_spec (const char *name, const char *
d31 1
a31 1
@@@@ -2465,10 +2465,10 @@@@ find_a_file (struct path_prefix *pprefix
d44 1
a44 1
@@@@ -2627,8 +2627,8 @@@@ add_sysrooted_prefix (struct path_prefix
d55 1
a55 1
@@@@ -3200,7 +3200,7 @@@@ process_command (int argc, const char **
d64 1
a64 1
@@@@ -3227,7 +3227,7 @@@@ process_command (int argc, const char **
d73 1
a73 1
@@@@ -3274,7 +3274,7 @@@@ process_command (int argc, const char **
d82 1
a82 1
@@@@ -3308,7 +3308,7 @@@@ process_command (int argc, const char **
d91 1
a91 1
@@@@ -3341,7 +3341,7 @@@@ process_command (int argc, const char **
d100 1
a100 1
@@@@ -3809,7 +3809,7 @@@@ warranty; not even for MERCHANTABILITY o
d109 1
a109 1
@@@@ -3824,28 +3824,28 @@@@ warranty; not even for MERCHANTABILITY o
d144 1
a144 1
@@@@ -3968,7 +3968,7 @@@@ warranty; not even for MERCHANTABILITY o
d153 1
a153 1
@@@@ -5920,11 +5920,11 @@@@ is_directory (const char *path1, const c
d167 1
a167 1
@@@@ -6108,8 +6108,8 @@@@ main (int argc, const char **argv)
d178 1
a178 1
@@@@ -6214,12 +6214,12 @@@@ main (int argc, const char **argv)
d193 1
a193 1
@@@@ -6245,7 +6245,7 @@@@ main (int argc, const char **argv)
@


1.1.1.1
log
@yep, 4.0 got branched, so now there are 4.1 snapshots.

Just put this in and don't activate it yet... this makes gcc 4.1
available for people who want to play with it, but it hasn't really
diverged from 4.0 so far...
@
text
@@
