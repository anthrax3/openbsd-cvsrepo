head	1.5;
access;
symbols
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.30
	OPENBSD_5_0:1.1.1.1.0.28
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.26
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.24
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.22
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.20
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.18
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.16
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.14
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.12
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.10
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.8
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.6
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	gcc:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2013.01.22.04.05.31;	author brad;	state dead;
branches;
next	1.4;

1.4
date	2012.10.07.20.09.44;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2012.09.01.00.00.32;	author pascal;	state Exp;
branches;
next	1.2;

1.2
date	2012.04.23.14.06.42;	author pascal;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.03.15.21.26;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.03.15.21.26;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@tedu older version of gcc

ok pascal@@
@
text
@$OpenBSD: patch-gcc_config_openbsd_h,v 1.4 2012/10/07 20:09:44 landry Exp $
--- gcc/config/openbsd.h.orig	Tue Nov 26 05:54:46 2002
+++ gcc/config/openbsd.h	Sat Oct  6 12:10:49 2012
@@@@ -52,20 +52,20 @@@@ Boston, MA 02111-1307, USA.  */
 
 #ifdef OPENBSD_NATIVE
 
-#undef GCC_INCLUDE_DIR
-#define GCC_INCLUDE_DIR "/usr/include"
-
 /* The compiler is configured with ONLY the gcc/g++ standard headers.  */
 #undef INCLUDE_DEFAULTS
 #define INCLUDE_DEFAULTS			\
   {						\
     { GPLUSPLUS_INCLUDE_DIR, "G++", 1, 1 },	\
-    { GCC_INCLUDE_DIR, "GCC", 0, 0 },		\
+    { GPLUSPLUS_TOOL_INCLUDE_DIR, "G++", 1, 1 },\
+    { GPLUSPLUS_BACKWARD_INCLUDE_DIR, "G++", 1, 1 }, \
+    { STANDARD_INCLUDE_DIR, STANDARD_INCLUDE_COMPONENT, 0, 0 },	\
     { 0, 0, 0, 0 }				\
   }
 
 /* Under OpenBSD, the normal location of the various *crt*.o files is the
    /usr/lib directory.  */
+#undef STANDARD_STARTFILE_PREFIX
 #define STANDARD_STARTFILE_PREFIX	"/usr/lib/"
 
 #endif
@@@@ -73,22 +73,48 @@@@ Boston, MA 02111-1307, USA.  */
 
 /* Controlling the compilation driver.  */
 
+/* TARGET_OS_CPP_BUILTINS() common to all OpenBSD targets.  */
+#define OPENBSD_OS_CPP_BUILTINS_COMMON()	\
+  do						\
+    {						\
+      builtin_define ("__OpenBSD__");		\
+      builtin_define ("__unix__");		\
+      builtin_define ("__ANSI_COMPAT");		\
+      builtin_assert ("system=unix");		\
+      builtin_assert ("system=bsd");		\
+      builtin_assert ("system=OpenBSD");	\
+    }						\
+  while (0)
+
+/* TARGET_OS_CPP_BUILTINS() common to all OpenBSD ELF targets.  */
+#define OPENBSD_OS_CPP_BUILTINS_ELF()		\
+  do						\
+    {						\
+      OPENBSD_OS_CPP_BUILTINS_COMMON();		\
+      builtin_define ("__ELF__");		\
+    }						\
+  while (0)
+
+/* TARGET_OS_CPP_BUILTINS() common to all LP64 OpenBSD targets.  */
+#define OPENBSD_OS_CPP_BUILTINS_LP64()		\
+  do						\
+    {						\
+      builtin_define ("_LP64");			\
+      builtin_define ("__LP64__");		\
+    }						\
+  while (0)
+
 /* CPP_SPEC appropriate for OpenBSD. We deal with -posix and -pthread.
-   XXX the way threads are handling currently is not very satisfying,
+   XXX the way threads are handled currently is not very satisfying,
    since all code must be compiled with -pthread to work. 
    This two-stage defines makes it easy to pick that for targets that
    have subspecs.  */
 #ifdef CPP_CPU_SPEC
-#define OBSD_CPP_SPEC "%(cpp_cpu) %{posix:-D_POSIX_SOURCE} %{pthread:-D_POSIX_THREADS}"
+#define OBSD_CPP_SPEC "%(cpp_cpu) %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}"
 #else
-#define OBSD_CPP_SPEC "%{posix:-D_POSIX_SOURCE} %{pthread:-D_POSIX_THREADS}"
+#define OBSD_CPP_SPEC "%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}"
 #endif
 
-/* LIB_SPEC appropriate for OpenBSD.  Select the appropriate libc, 
-   depending on profiling and threads.  Basically, 
-   -lc(_r)?(_p)?, select _r for threads, and _p for p or pg.  */
-#define OBSD_LIB_SPEC "%{!shared:-lc%{pthread:_r}%{p:_p}%{!p:%{pg:_p}}}"
-
 #ifndef OBSD_HAS_CORRECT_SPECS
 
 #ifndef OBSD_NO_DYNAMIC_LIBRARIES
@@@@ -124,9 +150,13 @@@@ Boston, MA 02111-1307, USA.  */
   "%{g:%{!nostdlib:-L/usr/lib/debug}} %{!nostdlib:%{!r*:%{!e*:-e start}}} -dc -dp %{assert*}"
 #else
 #define LINK_SPEC \
-  "%{g:%{!nostdlib:-L/usr/lib/debug}} %{!shared:%{!nostdlib:%{!r*:%{!e*:-e start}}}} %{shared:-Bshareable -x} -dc -dp %{R*} %{static:-Bstatic} %{assert*}"
+  "%{g:%{!nostdlib:-L/usr/lib/debug}} %{!shared:%{!nostdlib:%{!r*:%{!e*:-e start}}}} %{shared:-Bshareable -x} -dc -dp %{R*} %{static:-Bstatic} %{assert*} -nopie"
 #endif
 
+#if defined(HAVE_LD_EH_FRAME_HDR)
+#define LINK_EH_SPEC "%{!static:--eh-frame-hdr} "
+#endif
+
 #undef LIB_SPEC
 #define LIB_SPEC OBSD_LIB_SPEC
 #endif
@@@@ -279,13 +309,21 @@@@ do {									 \
 /* Storage layout.  */
 
 
-/* Otherwise, since we support weak, gthr.h erroneously tries to use
-   #pragma weak.  */
-#define GTHREAD_USE_WEAK 0
-
 /* bug work around: we don't want to support #pragma weak, but the current
    code layout needs HANDLE_PRAGMA_WEAK asserted for __attribute((weak)) to
    work.  On the other hand, we don't define HANDLE_PRAGMA_WEAK directly,
    as this depends on a few other details as well...  */
 #define HANDLE_SYSV_PRAGMA 1
 
+/* Disable the use of unsafe builtin functions, (strcat, strcpy), making
+ * them easier to spot in the object files. 
+ */
+#define NO_UNSAFE_BUILTINS
+
+/* The system headers on OpenBSD are C++-aware.  */
+#undef NO_IMPLICIT_EXTERN_C
+#define NO_IMPLICIT_EXTERN_C
+
+/* pick up defines for mprotect (used in TRANSFER_FROM_TRAMPOLINE) */
+#include <sys/types.h>
+#include <sys/mman.h>
@


1.4
log
@Sync the config/openbsd.h and config/sparc/openbsd64.h patches with
respectively r1.9 and r1.6 of base gcc ones adding #define
NO_IMPLICIT_EXTERN_C. While here add the missing #define
NO_UNSAFE_BUILTINS to gfortran/gcc 4.2, Bump all REVISIONs.
ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_config_openbsd_h,v 1.3 2012/09/01 00:00:32 pascal Exp $
@


1.3
log
@Patch GCC and derived ports to use PIE by default on the same architectures it
is enabled on in base; except for gcc 3.3, which does not have PIE support and
therefore needs to pass -nopie to the linker.

Also, sync powerpc pthread specs with base.  From Brad.

ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_config_openbsd_h,v 1.2 2012/04/23 14:06:42 pascal Exp $
d3 1
a3 1
+++ gcc/config/openbsd.h	Thu Aug 30 10:36:59 2012
d101 1
a101 1
@@@@ -279,13 +309,17 @@@@ do {									 \
d119 4
@


1.2
log
@- define _REENTRANT, not _POSIX_THREADS for -pthread
- enable thread model posix; bump estdc++ major
- fix manpages: install cpp.1 and gcov.1 with an 'e' prefix, and install
  another copy of gcc.1 as eg++.1 instead of an effectively empty page.

feedback and ok kurt@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_config_openbsd_h,v 1.1.1.1 2005/01/03 15:21:26 espie Exp $
d3 1
a3 1
+++ gcc/config/openbsd.h	Thu Apr 12 17:42:38 2012
d86 6
a91 2
@@@@ -127,6 +153,10 @@@@ Boston, MA 02111-1307, USA.  */
   "%{g:%{!nostdlib:-L/usr/lib/debug}} %{!shared:%{!nostdlib:%{!r*:%{!e*:-e start}}}} %{shared:-Bshareable -x} -dc -dp %{R*} %{static:-Bstatic} %{assert*}"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ gcc/config/openbsd.h	Mon Jan  3 10:17:43 2005
d29 1
a29 1
@@@@ -73,8 +73,39 @@@@ Boston, MA 02111-1307, USA.  */
d70 6
a75 2
@@@@ -84,11 +115,6 @@@@ Boston, MA 02111-1307, USA.  */
 #define OBSD_CPP_SPEC "%{posix:-D_POSIX_SOURCE} %{pthread:-D_POSIX_THREADS}"
d97 11
a107 1
@@@@ -289,3 +319,11 @@@@ do {									 \
@


1.1.1.1
log
@somewhat cleaner port of gcc 3.3.x.
not ready yet...
@
text
@@
