head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.18
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.16
	OPENBSD_5_0:1.2.0.14
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.12
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.8
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.1.1.0.14
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.12
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.10
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.8
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.6
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	gcc:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.01.22.04.05.31;	author brad;	state dead;
branches;
next	1.2;

1.2
date	2008.07.25.20.50.26;	author martynas;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.03.15.21.26;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.03.15.21.26;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@tedu older version of gcc

ok pascal@@
@
text
@$OpenBSD: patch-gcc_fold-const_c,v 1.2 2008/07/25 20:50:26 martynas Exp $
--- gcc/fold-const.c.orig	Sun Aug  8 21:55:28 2004
+++ gcc/fold-const.c	Fri Jul 25 12:34:58 2008
@@@@ -1036,7 +1036,11 @@@@ int_const_binop (code, arg1, arg2, notrunc)
     = (TREE_CODE (type) == INTEGER_TYPE && TYPE_IS_SIZETYPE (type));
   int overflow = 0;
   int no_overflow = 0;
+  int sizeof_flag = 0;
 
+  if (SIZEOF_PTR_DERIVED (arg1) == 1 || SIZEOF_PTR_DERIVED (arg2) == 1)
+    sizeof_flag = 1;
+
   int1l = TREE_INT_CST_LOW (arg1);
   int1h = TREE_INT_CST_HIGH (arg1);
   int2l = TREE_INT_CST_LOW (arg2);
@@@@ -1203,6 +1207,10 @@@@ int_const_binop (code, arg1, arg2, notrunc)
   TREE_CONSTANT_OVERFLOW (t) = (TREE_OVERFLOW (t)
 				| TREE_CONSTANT_OVERFLOW (arg1)
 				| TREE_CONSTANT_OVERFLOW (arg2));
+
+  if (sizeof_flag == 1)
+    SIZEOF_PTR_DERIVED (t) = 1;
+
   return t;
 }
 
@@@@ -5039,6 +5047,9 @@@@ fold (expr)
 		   | force_fit_type (t, overflow && !TREE_UNSIGNED (type)));
 	      TREE_CONSTANT_OVERFLOW (t)
 		= TREE_OVERFLOW (t) | TREE_CONSTANT_OVERFLOW (arg0);
+              /* If arg0 was calculated from sizeof(ptr), record this */
+              if (SIZEOF_PTR_DERIVED (arg0))
+                SIZEOF_PTR_DERIVED (t) = 1;
 	    }
 	  else if (TREE_CODE (arg0) == REAL_CST)
 	    t = build_real (type, REAL_VALUE_NEGATE (TREE_REAL_CST (arg0)));
@@@@ -5082,6 +5093,9 @@@@ fold (expr)
 		       | force_fit_type (t, overflow));
 		  TREE_CONSTANT_OVERFLOW (t)
 		    = TREE_OVERFLOW (t) | TREE_CONSTANT_OVERFLOW (arg0);
+                  /* If arg0 was calculated from sizeof(ptr), record this */
+                  if (SIZEOF_PTR_DERIVED (arg0))
+                    SIZEOF_PTR_DERIVED (t) = 1;
 		}
 	    }
 	  else if (TREE_CODE (arg0) == REAL_CST)
@


1.2
log
@adapt the C++ fix for C99 math functions, and bump c++ pkgname:
don't undefine C99 math macros, if !_GLIBCPP_USE_C99, so that we
can use these functions in C++.
espie@@ agrees
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_fold-const_c,v 1.1.1.1 2005/01/03 15:21:26 espie Exp $
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- gcc/fold-const.c.orig	Sun Aug  8 20:55:28 2004
+++ gcc/fold-const.c	Mon Jan  3 10:17:42 2005
@@@@ -1036,7 +1036,11 @@@@ int_const_binop (code, arg1, arg2, notru
d16 1
a16 1
@@@@ -1203,6 +1207,10 @@@@ int_const_binop (code, arg1, arg2, notru
@


1.1.1.1
log
@somewhat cleaner port of gcc 3.3.x.
not ready yet...
@
text
@@
