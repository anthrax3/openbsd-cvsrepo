head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.0.32
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.30
	OPENBSD_5_0:1.1.0.28
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.26
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.24
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.22
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.20
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.18
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.16
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.14
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.12
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.10
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.01.22.04.05.31;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2005.01.04.23.06.33;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@tedu older version of gcc

ok pascal@@
@
text
@$OpenBSD: pp-gcc_reload1_c,v 1.1 2005/01/04 23:06:33 espie Exp $
--- gcc/reload1.c.orig	Mon Sep 13 10:54:35 2004
+++ gcc/reload1.c	Mon Jan  3 10:17:42 2005
@@@@ -42,6 +42,7 @@@@ Software Foundation, 59 Temple Place - S
 #include "toplev.h"
 #include "except.h"
 #include "tree.h"
+#include "protector.h"
 
 /* This file contains the reload pass of the compiler, which is
    run after register allocation has been done.  It checks that
@@@@ -935,7 +936,7 @@@@ reload (first, global)
       if (cfun->stack_alignment_needed)
         assign_stack_local (BLKmode, 0, cfun->stack_alignment_needed);
 
-      starting_frame_size = get_frame_size ();
+      starting_frame_size = get_frame_size () - get_frame_free_size ();
 
       set_initial_elim_offsets ();
       set_initial_label_offsets ();
@@@@ -999,7 +1000,7 @@@@ reload (first, global)
 	setup_save_areas ();
 
       /* If we allocated another stack slot, redo elimination bookkeeping.  */
-      if (starting_frame_size != get_frame_size ())
+      if (starting_frame_size != get_frame_size () - get_frame_free_size ())
 	continue;
 
       if (caller_save_needed)
@@@@ -1018,7 +1019,7 @@@@ reload (first, global)
 
       /* If we allocated any new memory locations, make another pass
 	 since it might have changed elimination offsets.  */
-      if (starting_frame_size != get_frame_size ())
+      if (starting_frame_size != get_frame_size () - get_frame_free_size ())
 	something_changed = 1;
 
       {
@@@@ -1110,11 +1111,11 @@@@ reload (first, global)
   if (insns_need_reload != 0 || something_needs_elimination
       || something_needs_operands_changed)
     {
-      HOST_WIDE_INT old_frame_size = get_frame_size ();
+      HOST_WIDE_INT old_frame_size = get_frame_size () - get_frame_free_size ();
 
       reload_as_needed (global);
 
-      if (old_frame_size != get_frame_size ())
+      if (old_frame_size != get_frame_size () - get_frame_free_size ())
 	abort ();
 
       if (num_eliminable)
@@@@ -2010,7 +2011,7 @@@@ alter_reg (i, from_reg)
       if (from_reg == -1)
 	{
 	  /* No known place to spill from => no slot to reuse.  */
-	  x = assign_stack_local (GET_MODE (regno_reg_rtx[i]), total_size,
+	  x = assign_stack_local_for_pseudo_reg (GET_MODE (regno_reg_rtx[i]), total_size,
 				  inherent_size == total_size ? 0 : -1);
 	  if (BYTES_BIG_ENDIAN)
 	    /* Cancel the  big-endian correction done in assign_stack_local.
@


1.1
log
@add propolice as separate patches.
@
text
@d1 1
a1 1
$OpenBSD$
@

