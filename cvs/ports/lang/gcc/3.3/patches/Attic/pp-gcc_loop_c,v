head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.0.32
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.30
	OPENBSD_5_0:1.1.0.28
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.26
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.24
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.22
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.20
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.18
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.16
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.14
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.12
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.10
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.01.22.04.05.31;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2005.01.04.23.06.33;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@tedu older version of gcc

ok pascal@@
@
text
@$OpenBSD: pp-gcc_loop_c,v 1.1 2005/01/04 23:06:33 espie Exp $
--- gcc/loop.c.orig	Sun May 30 01:27:30 2004
+++ gcc/loop.c	Mon Jan  3 10:17:42 2005
@@@@ -1130,6 +1130,7 @@@@ scan_loop (loop, flags)
      Generally this increases code size, so do not move moveables when
      optimizing for code size.  */
 
+#ifndef	BROKEN_MOVE_MOVABLES_P
   if (! optimize_size)
     {
       move_movables (loop, movables, threshold, insn_count);
@@@@ -1150,6 +1151,7 @@@@ scan_loop (loop, flags)
 	  loop_max_reg = max_reg_num ();
 	}
     }
+#endif
 
   /* Now candidates that still are negative are those not moved.
      Change regs->array[I].set_in_loop to indicate that those are not actually
@@@@ -6553,6 +6555,14 @@@@ general_induction_var (loop, x, src_reg,
     *add_val = XEXP (*add_val, 0);
   if (GET_CODE (*mult_val) == USE)
     *mult_val = XEXP (*mult_val, 0);
+
+#ifndef FRAME_GROWS_DOWNWARD
+  if (flag_propolice_protection
+      && GET_CODE (*add_val) == PLUS
+      && (XEXP (*add_val, 0) == frame_pointer_rtx
+	  || XEXP (*add_val, 1) == frame_pointer_rtx))
+    return 0;
+#endif
 
   if (is_addr)
     *pbenefit += address_cost (orig_x, addr_mode) - reg_address_cost;
@


1.1
log
@add propolice as separate patches.
@
text
@d1 1
a1 1
$OpenBSD$
@

