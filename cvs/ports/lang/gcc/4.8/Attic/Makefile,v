head	1.51;
access;
symbols
	OPENBSD_5_8:1.48.0.4
	OPENBSD_5_8_BASE:1.48
	OPENBSD_5_7:1.45.0.2
	OPENBSD_5_7_BASE:1.45
	OPENBSD_5_6:1.37.0.2
	OPENBSD_5_6_BASE:1.37
	OPENBSD_5_5:1.28.0.2
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	pascal_20130804:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.51
date	2015.09.10.08.23.54;	author pascal;	state dead;
branches;
next	1.50;
commitid	ovY05rVdcfWNuWWc;

1.50
date	2015.08.18.10.14.06;	author sthen;	state Exp;
branches;
next	1.49;
commitid	6AUXyh5XrXFCZO5K;

1.49
date	2015.08.17.19.52.39;	author sthen;	state Exp;
branches;
next	1.48;
commitid	bdULBh9zZMZltgme;

1.48
date	2015.07.02.00.22.18;	author zhuk;	state Exp;
branches;
next	1.47;
commitid	kQjpoPVPrWhnKgK3;

1.47
date	2015.06.17.20.03.11;	author sthen;	state Exp;
branches;
next	1.46;
commitid	ASHe8W1wzY7eB3KC;

1.46
date	2015.05.22.11.31.16;	author ajacoutot;	state Exp;
branches;
next	1.45;
commitid	2khjHXfpTaOuNVcx;

1.45
date	2015.02.15.11.18.14;	author tobiasu;	state Exp;
branches;
next	1.44;
commitid	OtmkbRvupKCWbFpx;

1.44
date	2015.02.10.22.02.44;	author brad;	state Exp;
branches;
next	1.43;
commitid	kmniIWicLrR3emxr;

1.43
date	2015.02.04.10.41.27;	author pascal;	state Exp;
branches;
next	1.42;
commitid	t0HsXZzBq75LEm0X;

1.42
date	2015.01.08.20.23.21;	author pascal;	state Exp;
branches;
next	1.41;
commitid	sYWo0J70bGiiom5u;

1.41
date	2015.01.02.14.26.12;	author sthen;	state Exp;
branches;
next	1.40;
commitid	opt64GLzbD0TGQDJ;

1.40
date	2014.12.30.21.50.24;	author landry;	state Exp;
branches;
next	1.39;
commitid	S07Q8URJzYgrU6Yg;

1.39
date	2014.11.27.17.23.08;	author naddy;	state Exp;
branches;
next	1.38;
commitid	LnlHWlMikE5t5ljX;

1.38
date	2014.08.15.08.19.29;	author pascal;	state Exp;
branches;
next	1.37;
commitid	QvmwKCxeB1WKO2fx;

1.37
date	2014.07.16.12.35.23;	author espie;	state Exp;
branches;
next	1.36;
commitid	C2ydepHwgMXxFvHx;

1.36
date	2014.06.08.18.55.36;	author brad;	state Exp;
branches;
next	1.35;
commitid	mCKxwWpaJ0MaKY3I;

1.35
date	2014.05.25.21.45.39;	author pascal;	state Exp;
branches;
next	1.34;

1.34
date	2014.05.14.09.32.55;	author tobiasu;	state Exp;
branches;
next	1.33;

1.33
date	2014.03.30.19.30.28;	author naddy;	state Exp;
branches;
next	1.32;

1.32
date	2014.03.29.15.01.51;	author naddy;	state Exp;
branches;
next	1.31;

1.31
date	2014.03.29.13.30.26;	author naddy;	state Exp;
branches;
next	1.30;

1.30
date	2014.03.29.10.09.27;	author sthen;	state Exp;
branches;
next	1.29;

1.29
date	2014.03.23.17.30.19;	author pascal;	state Exp;
branches;
next	1.28;

1.28
date	2014.02.07.01.31.40;	author tobiasu;	state Exp;
branches;
next	1.27;

1.27
date	2014.01.15.20.18.36;	author brad;	state Exp;
branches;
next	1.26;

1.26
date	2014.01.12.22.16.02;	author pascal;	state Exp;
branches;
next	1.25;

1.25
date	2014.01.12.14.58.30;	author naddy;	state Exp;
branches;
next	1.24;

1.24
date	2013.12.03.10.38.52;	author sthen;	state Exp;
branches;
next	1.23;

1.23
date	2013.12.02.22.34.55;	author pascal;	state Exp;
branches;
next	1.22;

1.22
date	2013.11.25.14.16.23;	author sthen;	state Exp;
branches;
next	1.21;

1.21
date	2013.11.22.19.58.40;	author brad;	state Exp;
branches;
next	1.20;

1.20
date	2013.11.15.17.37.50;	author brad;	state Exp;
branches;
next	1.19;

1.19
date	2013.10.31.21.12.12;	author sthen;	state Exp;
branches;
next	1.18;

1.18
date	2013.10.01.09.07.19;	author ajacoutot;	state Exp;
branches;
next	1.17;

1.17
date	2013.09.19.21.16.54;	author tobiasu;	state Exp;
branches;
next	1.16;

1.16
date	2013.09.19.18.33.25;	author naddy;	state Exp;
branches;
next	1.15;

1.15
date	2013.09.16.21.16.17;	author sthen;	state Exp;
branches;
next	1.14;

1.14
date	2013.09.16.12.45.07;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2013.09.16.11.49.20;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2013.08.16.07.37.18;	author tobiasu;	state Exp;
branches;
next	1.11;

1.11
date	2013.08.14.12.26.01;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2013.07.18.17.04.06;	author tobiasu;	state Exp;
branches;
next	1.9;

1.9
date	2013.07.07.21.25.30;	author naddy;	state Exp;
branches;
next	1.8;

1.8
date	2013.06.18.20.24.29;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.13.06.44.08;	author landry;	state Exp;
branches;
next	1.6;

1.6
date	2013.06.11.07.46.33;	author pascal;	state Exp;
branches;
next	1.5;

1.5
date	2013.06.07.07.55.22;	author pascal;	state Exp;
branches;
next	1.4;

1.4
date	2013.06.02.13.59.35;	author pascal;	state Exp;
branches;
next	1.3;

1.3
date	2013.04.20.20.54.04;	author pascal;	state Exp;
branches;
next	1.2;

1.2
date	2013.04.12.10.01.47;	author tobiasu;	state Exp;
branches;
next	1.1;

1.1
date	2013.04.08.08.20.19;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.04.08.08.20.19;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.51
log
@tedu gcc 4.8

ok sthen@@ tobiasu@@
@
text
@# $OpenBSD: Makefile,v 1.50 2015/08/18 10:14:06 sthen Exp $

BROKEN-mips64 = ld: not enough GOT space for local GOT entries
BROKEN-mips64el = ld: not enough GOT space for local GOT entries
BROKEN-alpha =	libdecnumber/decNumber.c:2267:3: internal compiler error: Segmentation fault

ONLY_FOR_ARCHS = alpha amd64 hppa i386 powerpc mips64 mips64el sparc64
DPB_PROPERTIES = parallel

V = 4.8.4
FULL_VERSION = $V
FULL_PKGVERSION = $V

ADASTRAP_LIBC-i386 = 78.0
ADASTRAP_LIBM-i386 = 9.0
ADASTRAP-i386 = adastrap-i386-$V-0.tar.xz
ADASTRAP_LIBC-amd64 = 78.0
ADASTRAP_LIBM-amd64 = 9.0
ADASTRAP-amd64 = adastrap-amd64-$V-0.tar.xz
ADASTRAP_LIBC-sparc64 = 78.0
ADASTRAP_LIBM-sparc64 = 9.0
ADASTRAP-sparc64 = adastrap-sparc64-$V-0.tar.xz
ADASTRAP_LIBC-hppa = 78.1
ADASTRAP_LIBM-hppa = 9.0
ADASTRAP-hppa = adastrap-hppa-$V-0.tar.xz

PKGNAME-main =  gcc-${FULL_PKGVERSION}
PKGNAME-c++ =   g++-${FULL_PKGVERSION}
PKGNAME-estdc = libstdc++-${FULL_PKGVERSION}
PKGNAME-f95 =   g95-${FULL_PKGVERSION}
PKGNAME-java =  gcj-${FULL_PKGVERSION}
PKGNAME-objc =  gobjc-${FULL_PKGVERSION}
PKGNAME-ada =   gnat-${FULL_PKGVERSION}
# needs [gs]etcontext
#PKGNAME-go =	gccgo-${FULL_PKGVERSION}
PKGSPEC-main = gcc->=4.8,<4.9

REVISION-main =	4
REVISION-c++ =	2
REVISION-estdc =2
REVISION-f95 =	4
REVISION-java =	3
REVISION-objc =	2
REVISION-ada =	3

SHARED_LIBS =	estdc++		16.0 \
		gfortran	5.0 \
		gcj		3.0 \
		gcj-tools	3.0 \
		gij		3.0 \
		objc		5.0 \
		ssp		3.0 \
		lto_plugin      2.0 \
		go		2.0 \
		itm		1.0 \
		atomic		0.0 \
		quadmath	0.0


PSEUDO_FLAVORS = no_c++ no_f95 no_objc no_java no_ada no_go full
FLAVOR ?= 

ONLY_FOR_ARCHS-ada = amd64 hppa i386 sparc64
ONLY_FOR_ARCHS-java = amd64 i386 powerpc sparc64

MULTI_PACKAGES = -main -f95 -objc -c++ -estdc -java -ada

MAINTAINER =	Pascal Stumpf <Pascal.Stumpf@@cubes.de>

.include <bsd.port.arch.mk>

# kill both C++ subpackages
.if !${BUILD_PACKAGES:M-c++}
BUILD_PACKAGES := ${BUILD_PACKAGES:N-estdc}
.endif

DISTNAME =   	gcc-${FULL_VERSION}
DISTFILES =	${DISTNAME}.tar.bz2
# there's no ecj-4.8.jar
ECJ =		ecj-4.5.jar
SUPDISTFILES =	${ADASTRAP-amd64}:0 ${ADASTRAP-i386}:0 ${ECJ}:1 \
		${ADASTRAP-sparc64}:0 ${ADASTRAP-hppa}:0
EXTRACT_ONLY =	${DISTNAME}.tar.bz2

BUILD_DEPENDS +=	devel/bison \
			devel/libexecinfo

TEST_DEPENDS = 	devel/dejagnu \
		devel/autogen

MASTER_SITES =	${MASTER_SITE_GCC:=releases/gcc-$(FULL_VERSION)/}
MASTER_SITES0 =	http://distfiles.tmux.org/adastrap/
MASTER_SITES1 =	ftp://sources.redhat.com/pub/java/

LANGS = c
.if ${BUILD_PACKAGES:M-c++}
LANGS := ${LANGS},c++
TEST_DEPENDS += 	${BUILD_PKGPATH},-estdc>=4.8,<4.9
.endif
.if ${BUILD_PACKAGES:M-f95}
LANGS := ${LANGS},fortran
.endif
.if ${BUILD_PACKAGES:M-objc}
LANGS := ${LANGS},objc
.endif
.if ${BUILD_PACKAGES:M-java}
LANGS := ${LANGS},java
DISTFILES +=		${ECJ}:1
BUILD_DEPENDS +=	archivers/zip>=2.3p0
CONFIGURE_ARGS +=	--enable-libgcj --without-jar
.endif
.if ${BUILD_PACKAGES:M-ada}
LANGS := ${LANGS},ada
DISTFILES += ${ADASTRAP-${MACHINE_ARCH}}:0
EXTRACT_ONLY += ${ADASTRAP-${MACHINE_ARCH}}
EXTRA_ENV += ADAC=${WRKDIR}/bin/egcc GNATBIND=${WRKDIR}/bin/gnatbind
CC = ${WRKDIR}/bin/egcc
CXX = ${WRKDIR}/bin/eg++
TEST_DEPENDS += ${BUILD_PKGPATH},-ada
.endif
#.if ${BUILD_PACKAGES:M-go}
#LANGS := ${LANGS},go
#.endif

CONFIGURE_STYLE =		gnu
MODGNU_CONFIG_GUESS_DIRS =	${WRKSRC} ${WRKSRC}/gcc

EXTRA_ENV += am_cv_func_iconv=no JAR=no
EXTRA_ENV += ac_cv_prog_M4=/usr/bin/m4
EXTRA_ENV += ac_cv_header_magic_h=no
EXTRA_ENV += lt_cv_path_SED=/usr/bin/sed
EXTRA_ENV += STRIP=/usr/bin/strip
MAKE_FLAGS +=	 ac_cv_path_mkdir=/bin/mkdir

CONFIGURE_ENV += ${EXTRA_ENV}
MAKE_ENV += ${EXTRA_ENV}

# Note: the configure target passes CFLAGS to the configure script anyways.

CFLAGS = -O2 -g

CONFIGURE_ARGS += \
	--verbose \
	--program-transform-name=s,^,e, \
	--disable-nls  \
	--with-system-zlib \
	--disable-libmudflap \
	--disable-libgomp \
	--disable-tls \
	--with-as=/usr/bin/as \
	--with-ld=/usr/bin/ld \
	--with-gnu-ld \
	--with-gnu-as \
	--enable-threads=posix \
	--enable-wchar_t \
	--with-gmp="${LOCALBASE}" \
	--enable-languages=${LANGS} \
	--disable-libstdcxx-pch

# This is needed, as internal cpp is no longer compatible with the
# visible beast
CONFIGURE_ARGS += --enable-cpp

CONFIGURE_ARGS += ${CONFIGURE_SHARED}

SEPARATE_BUILD = flavored

USE_GMAKE = yes

.if ${FLAVOR:Mfull}
# you shouldn't skip bootstrap unless you know what you're doing
# use bootstrap-lean if you're pressed for space
ALL_TARGET = bootstrap
.else
# skip the stage2/stage3 bullshit under normal circumstances
ALL_TARGET = bootstrap2
.endif

MAKE_FLAGS += libstdc___la_LDFLAGS='-version-info 31:0:0 -lm'

.if ${MACHINE_ARCH} == "powerpc"
PKG_ARGS += -DPPC=1
.else
PKG_ARGS += -DPPC=0
.endif

.if ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "amd64"
PKG_ARGS += -DI386=1
.else
PKG_ARGS += -DI386=0
.endif

.if ${MACHINE_ARCH} == "sparc64" || ${MACHINE_ARCH} == "sparc"
PKG_ARGS += -DSPARC=1
.else
PKG_ARGS += -DSPARC=0
.endif

.if ${MACHINE_ARCH} == "alpha" || ${MACHINE_ARCH} == "arm" || \
	${MACHINE_ARCH} == "amd64" || ${MACHINE_ARCH} == "i386" || \
	${MACHINE_ARCH} == "powerpc" || ${MACHINE_ARCH} == "sh" || \
	${MACHINE_ARCH} == "sparc" || ${MACHINE_ARCH} == "sparc64"
PKG_ARGS += -DITM=1
.else
PKG_ARGS += -DITM=0
.endif

# depends on __float128
.if ${MACHINE_ARCH} == "amd64" || ${MACHINE_ARCH} == "i386"
PKG_ARGS += -DQUADMATH=1
# XXX quadmath is actually a WANTLIB of -f95, but it's just listed as
#     a RUN_DEPENDS rather than LIB_DEPENDS+WANTLIB due to the mess of
#     multiple GCC versions.
RUN_DEPENDS-f95 =	${BUILD_PKGPATH},-main>=4.8,<4.9
.else
PKG_ARGS +=-DQUADMATH=0
.endif

RUN_DEPENDS =		${BUILD_PKGPATH},-main
WANTLIB =		c gmp m mpc mpfr z

RUN_DEPENDS-main =
RUN_DEPENDS-estdc =

RUN_DEPENDS-c++ =	${RUN_DEPENDS} \
			${BUILD_PKGPATH},-estdc>=4.8,<4.9
WANTLIB-estdc =		m
WANTLIB-java =		${WANTLIB} pthread
WANTLIB-main =		${WANTLIB} pthread
WANTLIB-ada =		${WANTLIB} pthread util

LIB_DEPENDS +=		devel/gmp>=4.2 \
			devel/mpfr \
			devel/libmpc
LIB_DEPENDS-estdc =

.if ${MACHINE_ARCH:Mamd64}
CONFIG = x86_64-unknown-openbsd${OSREV}
.endif

post-extract:
.for f in egcc eg++
	echo "#! /bin/sh" >${WRKDIR}/bin/$f
	echo 'GNAT_ROOT=${WRKDIR}/bootstrap GCC_ROOT=${WRKDIR}/bootstrap LD_LIBRARY_PATH=${WRKDIR}/bootstrap/system-libs exec ${WRKDIR}/bootstrap/bin/$f "$$@@"' >>${WRKDIR}/bin/$f
	chmod a+x ${WRKDIR}/bin/$f
.endfor
.for f in gnatbind gnatmake gnatlink
	echo "#! /bin/sh" >${WRKDIR}/bin/$f
	echo 'GNAT_ROOT=${WRKDIR}/bootstrap GCC_ROOT=${WRKDIR}/bootstrap LD_LIBRARY_PATH=${WRKDIR}/bootstrap/system-libs exec ${WRKDIR}/bootstrap/bin/$f "$$@@"' >>${WRKDIR}/bin/$f
	chmod a+x ${WRKDIR}/bin/$f
.endfor
	rm -rf ${WRKDIR}/bootstrap/lib/gcc/*-unknown-openbsd*/$V/include-fixed
	ln -sf /usr/bin/nm ${WRKDIR}/bin/enm
	echo "# This file automatically generated" >> ${WRKSRC}/libversions
.for l v in ${SHARED_LIBS}
	echo "LIB$l_LTVERSION = -version-info ${v:S/./:/}" >> \
		${WRKSRC}/libversions
.endfor
.if ${BUILD_PACKAGES:M-java}
	cp ${FULLDISTDIR}/${ECJ} ${WRKSRC}/ecj.jar
.endif
.if ${BUILD_PACKAGES:M-ada}
	perl -pi -e 's,^#define (_GLIBCXX_HAVE_GETS) .*,/* #undef $$1 */,' \
		${WRKDIR}/bootstrap/include/c++/*/*/bits/c++config.h
.endif

post-install:
.if ${BUILD_PACKAGES:M-ada}
	chown -R ${SHAREOWN}:${SHAREGRP} ${PREFIX}/lib/gcc/*/$V/adainclude
	chown -R ${SHAREOWN}:${SHAREGRP} ${PREFIX}/lib/gcc/*/$V/adalib
.endif
	chown -R ${SHAREOWN}:${SHAREGRP} ${PREFIX}/lib/gcc/*/$V/include
	chown -R ${SHAREOWN}:${SHAREGRP} ${PREFIX}/lib/gcc/*/$V/include-fixed
	chown ${BINOWN}:${BINGRP} ${PREFIX}/lib/gcc/${CONFIG}/${V}/libgcc.a
	chown ${BINOWN}:${BINGRP} ${PREFIX}/lib/gcc/${CONFIG}/${V}/libgcov.a

.include <bsd.port.mk>

ADA_PACKAGE = ${PACKAGE_REPOSITORY}/${MACHINE_ARCH}/all/${FULLPKGNAME-ada}.tgz
GCC_PACKAGE = ${PACKAGE_REPOSITORY}/${MACHINE_ARCH}/all/${FULLPKGNAME-main}.tgz
GXX_PACKAGE = ${PACKAGE_REPOSITORY}/${MACHINE_ARCH}/all/${FULLPKGNAME-c++}.tgz

adastrap: ${ADA_PACKAGE} ${GCC_PACKAGE} ${GXX_PACKAGE}
.if !defined(ADASTRAP_LIBC-${MACHINE_ARCH}) || \
	!defined(ADASTRAP_LIBM-${MACHINE_ARCH})
	@@echo 1>&2 "Error: you must specify libc and libm to bundle"
	@@exit 1
.else
	mkdir -p ${WRKDIR}/prepare/bootstrap/system-libs
	cp /usr/lib/libc.so.${ADASTRAP_LIBC-${MACHINE_ARCH}} \
		${WRKDIR}/prepare/bootstrap/system-libs
	cp /usr/lib/libm.so.${ADASTRAP_LIBM-${MACHINE_ARCH}} \
		${WRKDIR}/prepare/bootstrap/system-libs
	cd ${WRKDIR}/prepare/bootstrap && tar zxf ${ADA_PACKAGE}
	cd ${WRKDIR}/prepare/bootstrap && tar zxf ${GCC_PACKAGE}
	cd ${WRKDIR}/prepare/bootstrap && tar zxf ${GXX_PACKAGE}
	rm -rf ${WRKDIR}/prepare/bootstrap/{+*,info,man,share}
	rm -rf ${WRKDIR}/prepare/bootstrap/lib/gcc/*-unknown-openbsd*/$V/include-fixed
	if ! ldd ${WRKDIR}/prepare/bootstrap/bin/egcc | \
		fgrep libc.so.${ADASTRAP_LIBC-${MACHINE_ARCH}} >/dev/null; then \
		echo 1>&2 "Error: adastrap egcc linked against unbundled libc"; \
		exit 1; \
	fi
	if ! ldd ${WRKDIR}/prepare/bootstrap/bin/egcc | \
		fgrep libm.so.${ADASTRAP_LIBM-${MACHINE_ARCH}} >/dev/null; then \
		echo 1>&2 "Error: adastrap egcc linked against unbundled libm"; \
		exit 1; \
	fi
	cd ${WRKDIR}/prepare && tar cf - bootstrap | \
		xz > ${FULLDISTDIR}/${ADASTRAP-${MACHINE_ARCH}}
.endif
@


1.50
log
@tweak WANTLIB again; build problem reported by ajacoutot.

quadmath is used by -f95 (WANTLIB), however the lib is also present in GCC 4.9
which is required all over the place for bulk builds. So bodge around it by
removing the WANTLIB and at least specifying a RUN_DEPENDS-f95 instead.

This is pretty much academic anyway as you can't install gcc-4.8 on a typical
workstation as it will conflict with gcc-4.9 libs that are a common dependency.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.49 2015/08/17 19:52:39 sthen Exp $
@


1.49
log
@sync WANTLIB
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.48 2015/07/02 00:22:18 zhuk Exp $
d41 1
a41 1
REVISION-f95 =	3
d211 4
a229 1
WANTLIB-f95 =		${WANTLIB} quadmath
@


1.48
log
@Remove extra @@pkgpath markers. They were relevant for GCC 4.2, which was not
MULTI_PACKAGEd initially, but not for later ones.

Feedback and 4.9 part okay from sthen@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.47 2015/06/17 20:03:11 sthen Exp $
d41 1
a41 1
REVISION-f95 =	2
d44 1
a44 1
REVISION-ada =	2
d226 2
@


1.47
log
@port REVISION bumps as base has moved to 5.8
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.46 2015/05/22 11:31:16 ajacoutot Exp $
d38 1
a38 1
REVISION-main =	3
@


1.46
log
@"/usr/local/lib/pkgconfig/" is part of mtree(8).
Packages should not own this dir to prevent its deletion or a warning that it
cannot be removed because it's not empty at pkg_delete(1) time.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.45 2015/02/15 11:18:14 tobiasu Exp $
d38 7
a44 7
REVISION-main =	2
REVISION-c++ =	1
REVISION-estdc =1
REVISION-f95 =	1
REVISION-java =	2
REVISION-objc =	1
REVISION-ada =	1
@


1.45
log
@Add Ada support on hppa

ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.44 2015/02/10 22:02:44 brad Exp $
d42 1
a42 1
REVISION-java =	1
@


1.44
log
@Add -rdynamic handling for hppa.

ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.43 2015/02/04 10:41:27 pascal Exp $
d7 1
a7 1
ONLY_FOR_ARCHS = alpha amd64 hppa i386 powerpc mips64 mips64el sparc64 
d23 3
d38 1
a38 1
REVISION-main =	1
d63 1
a63 1
ONLY_FOR_ARCHS-ada = amd64 i386 sparc64
d82 1
a82 1
		${ADASTRAP-sparc64}:0
@


1.43
log
@Same thing for 4.8: Kill --disable-checking, merge PFRAG.ATOMIC into PLIST.

Unbreaks hppa.

also tested by and ok tobiasu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.42 2015/01/08 20:23:21 pascal Exp $
d35 7
a41 7
REVISION-main =	0
REVISION-c++ =	0
REVISION-estdc =0
REVISION-f95 =	0
REVISION-java =	0
REVISION-objc =	0
REVISION-ada =	0
@


1.42
log
@Update to GCC 4.8.4.

Additionally, from tobiasu@@:

Disable the optimized shared Ada.Strings.Unbounded implementation until
overlapping memcpy() is fixed. Requires fresh adastrap's.

Rename all binaries starting with "egnat" back to "gnat". Reduces the
amount of workarounds needed to build various Ada software - including
GNAT itself.

Stop running the fixincludes script - saves time and pain. If our
headers are broken, we want to know and fix them ourselves, thank you
very much.

Drop gnat debug patch for a linker issue that was fixed some time ago.

ok tobiasu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.41 2015/01/02 14:26:12 sthen Exp $
d7 1
a7 1
ONLY_FOR_ARCHS = alpha amd64 i386 powerpc mips64 mips64el sparc64 
d35 8
a142 1
	--disable-checking \
a202 7
.endif

.if ${MACHINE_ARCH} == "amd64" || ${MACHINE_ARCH} == "arm" || \
	${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "powerpc"
PKG_ARGS += -DATOMIC=1
.else
PKG_ARGS += -DATOMIC=0
@


1.41
log
@bump REVISION for 5.7
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.40 2014/12/30 21:50:24 landry Exp $
d7 1
a7 1
ONLY_FOR_ARCHS = alpha amd64 i386 powerpc sparc64 mips64 mips64el
d10 1
a10 1
V = 4.8.3
d14 1
a14 1
ADASTRAP_LIBC-i386 = 75.0
d17 1
a17 1
ADASTRAP_LIBC-amd64 = 75.0
d20 1
a20 1
ADASTRAP_LIBC-sparc64 = 75.0
a34 2
REVISION = 3

d52 1
a52 2
# XXX broken with memcpy that checks for overlap
ONLY_FOR_ARCHS-ada = #amd64 i386 sparc64
d81 1
a81 3
MASTER_SITES0 =	http://spacehopper.org/mirrors/ \
		http://distfiles.tmux.org/adastrap/ \
		https://distfiles.bsdfrog.org/
d241 1
a241 1
	echo 'GNAT_ROOT=${WRKDIR}/bootstrap GCC_ROOT=${WRKDIR}/bootstrap LD_LIBRARY_PATH=${WRKDIR}/bootstrap/system-libs exec ${WRKDIR}/bootstrap/bin/e$f "$$@@"' >>${WRKDIR}/bin/$f
@


1.40
log
@Mark BROKEN-alpha a bunch of ports that reliably failed (!) to build in
the past 3 bulks, or forever.

Various reasons: no d^Hrecent compiler available, base gcc generating
nice internal compiler errors, no atomic ops, etc, etc.

While here, mark all webkits as BROKEN-hppa, since this also requires
clang or g++ 4.7. Our g++ 4.8 port only builds on
i386|amd64|powerpc|sparc64 anyway...

if you're interested^Wbored to death, full past logs at
http://build-failures.rhaalovely.net/alpha/...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.39 2014/11/27 17:23:08 naddy Exp $
d35 1
a35 8
REVISION-main	= 1
REVISION-c++	= 1
#REVISION-estdc	=
REVISION-f95	= 2
REVISION-java	= 1
REVISION-objc	= 1
REVISION-ada	= 1
#REVISION-go	=
@


1.39
log
@temporarily disable Ada: it is broken with a strict memcpy that
checks for overlap; ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.38 2014/08/15 08:19:29 pascal Exp $
d5 1
@


1.38
log
@SECURITY fix for CVE-2014-5044.  Upstream commit:

https://gcc.gnu.org/viewcvs/gcc?view=revision&revision=213313
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.37 2014/07/16 12:35:23 espie Exp $
d60 2
a61 1
ONLY_FOR_ARCHS-ada = amd64 i386 sparc64
@


1.37
log
@more 5.6 bumps
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2014/06/08 18:55:36 brad Exp $
d37 1
a37 1
REVISION-f95	= 1
@


1.36
log
@Add stack protector strong support and enable it by default.

ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2014/05/25 21:45:39 pascal Exp $
d34 2
a35 2
REVISION-main	= 0
REVISION-c++	= 0
d37 4
a40 4
REVISION-f95	= 0
REVISION-java	= 0
REVISION-objc	= 0
REVISION-ada	= 0
@


1.35
log
@Update to gcc 4.8.3.  Tested on sparc64 and adastraps hosted by tobiasu@@.

"rein damit" tobiasu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2014/05/14 09:32:55 tobiasu Exp $
d34 2
a35 2
#REVISION-main	= 
#REVISION-c++	= 
d37 4
a40 4
#REVISION-f95	= 
#REVISION-java	= 
#REVISION-objc	= 
#REVISION-ada	= 
@


1.34
log
@Add mostly finished mips64/mips64el backend. Marked BROKEN for now.
Can build xgcc, but then chokes on our ancient binutils with:

ld: not enough GOT space for local GOT entries

ok brad@@ sthen@@ bcallah@@ pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2014/03/30 19:30:28 naddy Exp $
d9 1
a9 1
V = 4.8.2
d13 1
a13 1
ADASTRAP_LIBC-i386 = 73.0
d15 2
a16 2
ADASTRAP-i386 = adastrap-i386-$V-1.tar.xz
ADASTRAP_LIBC-amd64 = 73.0
d18 2
a19 2
ADASTRAP-amd64 = adastrap-amd64-$V-1.tar.xz
ADASTRAP_LIBC-sparc64 = 73.0
d21 1
a21 1
ADASTRAP-sparc64 = adastrap-sparc64-$V-1.tar.xz
d34 2
a35 2
REVISION-main	= 3
REVISION-c++	= 4
d37 4
a40 4
REVISION-f95	= 3
REVISION-java	= 3
REVISION-objc	= 3
REVISION-ada	= 3
@


1.33
log
@fix the quick hack to unbreak gcc/4.8 after gets() removal
ok nigel@@ sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2014/03/29 15:01:51 naddy Exp $
d3 4
a6 1
ONLY_FOR_ARCHS = alpha amd64 i386 powerpc sparc64
@


1.32
log
@fix quoting
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2014/03/29 13:30:26 naddy Exp $
d262 2
a263 1
	perl -pi -e 's,^#endif$$,#undef _GLIBCXX_HAVE_GETS\n#endif,' ${WRKDIR}/bootstrap/include/c++/*/*/bits/os_defines.h
@


1.31
log
@escape for make
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2014/03/29 10:09:27 sthen Exp $
d262 1
a262 1
	perl -pi -e 's,^#endif$$,#undef _GLIBCXX_HAVE_GETS\\n#endif,' ${WRKDIR}/bootstrap/include/c++/*/*/bits/os_defines.h
@


1.30
log
@quick hack to unbreak gcc/4.8 after gets removal; bootstraps will be
updated later. ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2014/03/23 17:30:19 pascal Exp $
d262 1
a262 1
	perl -pi -e 's,^#endif$,#undef _GLIBCXX_HAVE_GETS\\n#endif,' ${WRKDIR}/bootstrap/include/c++/*/*/bits/os_defines.h
@


1.29
log
@Switch GCC in ports to PIE by default on powerpc.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2014/02/07 01:31:40 tobiasu Exp $
d32 1
a32 1
REVISION-c++	= 3
d261 3
a309 1

@


1.28
log
@Repair time/delay/duration time_t issues in gnat. All direct imports of
C functions have been modified to use same-size types on both sides.
There are no checks in gcc to make sure the types match, and it happily
trashes the stack or reads bogus data without this fix.

The C shim in gnatlib is still casting down to long (by design), thus
gnat is not 2038-proof on 32 bit architectures. Fixing this is an
ongoing project, but I'm running out of time for this release.

Getting the timezone offset is now supported; the unused usleep
procedure that snuck in from FreeBSD support got removed.

Tested on all supported architectures, plus new bootstraps due to the
stack trashing, just in case...

Conceptually fine with brad@@
deraadt@@ is unhappy with the partial solution, fixing this remains a
high priority todo
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2014/01/15 20:18:36 brad Exp $
d31 2
a32 2
REVISION-main	= 2
REVISION-c++	= 2
d34 3
a36 3
REVISION-f95	= 2
REVISION-java	= 2
REVISION-objc	= 2
@


1.27
log
@Disable PIE by deault on powerpc to match the base compiler.

ok pascal@@ sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2014/01/12 22:16:02 pascal Exp $
d10 1
a10 1
ADASTRAP_LIBC-i386 = 71.0
d12 2
a13 2
ADASTRAP-i386 = adastrap-i386-$V-0.tar.xz
ADASTRAP_LIBC-amd64 = 71.0
d15 2
a16 2
ADASTRAP-amd64 = adastrap-amd64-$V-0.tar.xz
ADASTRAP_LIBC-sparc64 = 71.0
d18 1
a18 1
ADASTRAP-sparc64 = adastrap-sparc64-$V-0.tar.xz
d37 1
a37 1
REVISION-ada	= 2
@


1.26
log
@Switch ports gcc to PIE on i386.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2014/01/12 14:58:30 naddy Exp $
d31 2
a32 2
REVISION-main	= 1
REVISION-c++	= 1
d34 4
a37 4
REVISION-f95	= 1
REVISION-java	= 1
REVISION-objc	= 1
REVISION-ada	= 1
@


1.25
log
@bump for plist changes 5.4 -> 5.5
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2013/12/03 10:38:52 sthen Exp $
d31 2
a32 2
REVISION-main	= 0
REVISION-c++	= 0
d34 4
a37 4
REVISION-f95	= 0
REVISION-java	= 0
REVISION-objc	= 0
REVISION-ada	= 0
@


1.24
log
@mark for parallel builds; ok pascal
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2013/12/02 22:34:55 pascal Exp $
d30 9
@


1.23
log
@Update to 4.8.2; adastraps hosted by/testing/ok tobiasu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2013/11/25 14:16:23 sthen Exp $
d4 1
@


1.22
log
@kill VMEM_WARNING
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2013/11/22 19:58:40 brad Exp $
d5 1
a5 1
V = 4.8.1
d9 1
a9 1
ADASTRAP_LIBC-i386 = 70.0
d11 2
a12 2
ADASTRAP-i386 = adastrap-i386-$V-3.tar.xz
ADASTRAP_LIBC-amd64 = 70.0
d14 2
a15 2
ADASTRAP-amd64 = adastrap-amd64-$V-3.tar.xz
ADASTRAP_LIBC-sparc64 = 70.0
d17 1
a17 1
ADASTRAP-sparc64 = adastrap-sparc64-$V-3.tar.xz
a28 9

REVISION-main	= 6
REVISION-c++	= 2
#REVISION-estdc	=
REVISION-f95	= 1
REVISION-java	= 1
REVISION-objc	= 1
REVISION-ada	= 3
#REVISION-go	=
@


1.21
log
@As was commited to the base GCC have the compiler use collect2 when
linking instead of calling the linker directly.

ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2013/11/15 17:37:50 brad Exp $
a105 1
VMEM_WARNING =		Yes
@


1.20
log
@Match base GCC and the GCC 4.6 port and only enable -Wpointer-sign
when using the -pedantic command line option.

ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2013/10/31 21:12:12 sthen Exp $
d30 2
a31 2
REVISION-main	= 5
REVISION-c++	= 1
d33 2
a34 2
REVISION-f95	= 0
REVISION-java	= 0
d36 1
a36 1
REVISION-ada	= 2
@


1.19
log
@bump REVISION for any ports using route messages. regen some distinfos and
remove unnecessary USE_GROFFs while there.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2013/10/01 09:07:19 ajacoutot Exp $
d30 2
a31 2
REVISION-main	= 4
REVISION-c++	= 0
d35 1
a35 1
REVISION-objc	= 0
@


1.18
log
@distfiles.bsdfrog.org: http -> https
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2013/09/19 21:16:54 tobiasu Exp $
d30 1
a30 1
REVISION-main	= 3
@


1.17
log
@New sparc64 adastrap
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2013/09/19 18:33:25 naddy Exp $
d87 1
a87 1
		http://distfiles.bsdfrog.org/
@


1.16
log
@keep the included libtool from picking up GNU sed; ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2013/09/16 21:16:17 sthen Exp $
d17 1
a17 1
ADASTRAP-sparc64 = adastrap-sparc64-$V-2.tar.xz
@


1.15
log
@new i386 bootstraps
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2013/09/16 12:45:07 espie Exp $
d127 1
@


1.14
log
@new adastrap for amd64
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2013/09/16 11:49:20 espie Exp $
d11 1
a11 1
ADASTRAP-i386 = adastrap-i386-$V-2.tar.xz
@


1.13
log
@avoid old fixed-includes there too
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2013/08/16 07:37:18 tobiasu Exp $
d14 1
a14 1
ADASTRAP-amd64 = adastrap-amd64-$V-2.tar.xz
@


1.12
log
@New adastraps for sparc64.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2013/08/14 12:26:01 sthen Exp $
d30 1
a30 1
REVISION-main	= 2
d36 1
a36 1
REVISION-ada	= 1
d250 1
d292 1
@


1.11
log
@new bootstraps from myself and naddy
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2013/07/18 17:04:06 tobiasu Exp $
d15 3
a17 3
ADASTRAP_LIBC-sparc64 = 68.3
ADASTRAP_LIBM-sparc64 = 8.0
ADASTRAP-sparc64 = adastrap-sparc64-$V-1.tar.xz
@


1.10
log
@* Enable -rdynamic option, from pascal@@
* Use SJLJ exections instead of ZCX in the hope of fixing
  intermittent build problems. Exception style affects Ada only.
* Add better tasking support and use our own backend files instead
  of pretending to be FreeBSD.
* Call __errno() from librthread when using pthreads (Tero Koskinen)
* Enable shared library support for OpenBSD (Tero Koskinen)

bulk tested by landry@@ and sthen@@
ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2013/07/07 21:25:30 naddy Exp $
d9 6
a14 6
ADASTRAP_LIBC-i386 = 68.4
ADASTRAP_LIBM-i386 = 8.0
ADASTRAP-i386 = adastrap-i386-$V-1.tar.xz
ADASTRAP_LIBC-amd64 = 68.3
ADASTRAP_LIBM-amd64 = 8.0
ADASTRAP-amd64 = adastrap-amd64-$V-1.tar.xz
d85 2
a86 1
MASTER_SITES0 =	http://distfiles.tmux.org/adastrap/ \
@


1.9
log
@bump for plist changes 5.3 -> 5.4
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2013/06/18 20:24:29 sthen Exp $
d9 1
a9 1
ADASTRAP_LIBC-i386 = 68.2
d11 2
a12 2
ADASTRAP-i386 = adastrap-i386-$V-0.tar.xz
ADASTRAP_LIBC-amd64 = 67.0
d14 1
a14 1
ADASTRAP-amd64 = adastrap-amd64-$V-0.tar.xz
d17 1
a17 1
ADASTRAP-sparc64 = adastrap-sparc64-$V-0.tar.xz
d30 1
a30 1
REVISION-main	= 1
d36 1
a36 1
REVISION-ada	= 0
@


1.8
log
@regen PLIST to unbreak following kerberosV update; com_err.h no longer
needs to be "fixed."  ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2013/06/13 06:44:08 landry Exp $
a7 1
REVISION-main = 0
d29 9
@


1.7
log
@Fix gcc's on sparc64 by using a regen'ed ada boostrap. From tobiasu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2013/06/11 07:46:33 pascal Exp $
d8 1
@


1.6
log
@Revert USE_LIBTOOL=gnu; it does not help.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2013/06/07 07:55:22 pascal Exp $
d15 1
a15 1
ADASTRAP_LIBC-sparc64 = 68.2
@


1.5
log
@Update to GCC 4.8.1, tested and adastrap-sparc64 built by tobiasu@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/06/02 13:59:35 pascal Exp $
a109 2

USE_LIBTOOL =			gnu
@


1.4
log
@Work around /usr/bin/libtool being picked up during libjava build, as seen
by naddy@@ and espie@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/04/20 20:54:04 pascal Exp $
d5 1
a5 1
V = 4.8.0
d9 1
a9 1
ADASTRAP_LIBC-i386 = 67.0
d11 1
a11 1
ADASTRAP-i386 = adastrap-i386-$V-1.tar.xz
d14 2
a15 2
ADASTRAP-amd64 = adastrap-amd64-$V-1.tar.xz
ADASTRAP_LIBC-sparc64 = 67.0
a28 2

REVISION-ada = 0
@


1.3
log
@Add alpha support.

Help/testing by naddy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/04/12 10:01:47 tobiasu Exp $
d112 2
@


1.2
log
@Add Ada support for sparc64.

Use SJLJ exceptions instead of ZCX because gcc produces broken code
for the later. Enable ncpu detection in the runtime for all archs.

ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/04/08 08:20:19 pascal Exp $
d3 1
a3 1
ONLY_FOR_ARCHS = amd64 i386 powerpc sparc64
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2012/10/07 20:09:45 landry Exp $
d15 3
d30 2
d49 1
a49 1
ONLY_FOR_ARCHS-ada = amd64 i386
d67 2
a68 1
SUPDISTFILES =	${ADASTRAP-amd64}:0 ${ADASTRAP-i386}:0 ${ECJ}:1
d145 2
a146 1
	--enable-languages=${LANGS}
@


1.1.1.1
log
@Import gcc 4.8.

For a full Changelog, see: http://gcc.gnu.org/gcc-4.8/changes.html

Tested by me on amd64, i386 and powerpc and by brad@@ on sparc64.

Adds support for -java on powerpc.  -faggressive-loop-optimizations is
disabled by default in the port, and the default debugging format changed
to DWARF2 (instead of 4).

tweaks and ok tobiasu@@
@
text
@@
