head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	pascal_20130804:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.09.10.08.23.54;	author pascal;	state dead;
branches;
next	1.2;
commitid	ovY05rVdcfWNuWWc;

1.2
date	2014.05.25.21.45.39;	author pascal;	state Exp;
branches;
next	1.1;

1.1
date	2013.04.08.08.20.25;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.04.08.08.20.25;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.3
log
@tedu gcc 4.8

ok sthen@@ tobiasu@@
@
text
@$OpenBSD: patch-boehm-gc_include_private_gcconfig_h,v 1.2 2014/05/25 21:45:39 pascal Exp $
--- boehm-gc/include/private/gcconfig.h.orig	Sun Dec 29 23:42:08 2013
+++ boehm-gc/include/private/gcconfig.h	Thu May 22 20:04:19 2014
@@@@ -62,7 +62,7 @@@@
 /* Determine the machine type: */
 # if defined(__arm__) || defined(__thumb__)
 #    define ARM32
-#    if !defined(LINUX) && !defined(NETBSD)
+#    if !defined(LINUX) && !defined(NETBSD) && !defined(OPENBSD)
 #      define NOSYS
 #      define mach_type_known
 #    endif
@@@@ -77,14 +77,18 @@@@
 #    define HP
 #    define mach_type_known
 # endif
-# if defined(OPENBSD) && defined(m68k)
-#    define M68K
-#    define mach_type_known
-# endif
 # if defined(OPENBSD) && defined(__sparc__)
 #    define SPARC
 #    define mach_type_known
 # endif
+# if defined(OPENBSD) && defined(__arm__)
+#    define ARM32
+#    define mach_type_known
+# endif
+# if defined(OPENBSD) && defined(__sh__)
+#    define SH
+#    define mach_type_known
+# endif
 # if defined(NETBSD) && (defined(m68k) || defined(__m68k__))
 #    define M68K
 #    define mach_type_known
@@@@ -101,7 +105,7 @@@@
 #    define SH
 #    define mach_type_known
 # endif
-# if defined(vax)
+# if defined(vax) || defined(__vax__)
 #    define VAX
 #    ifdef ultrix
 #	define ULTRIX
@@@@ -119,7 +123,7 @@@@
 #    if defined(nec_ews) || defined(_nec_ews)
 #      define EWS4800
 #    endif
-#    if !defined(LINUX) && !defined(EWS4800) && !defined(NETBSD)
+#    if !defined(LINUX) && !defined(EWS4800) && !defined(NETBSD) && !defined(OPENBSD)
 #      if defined(ultrix) || defined(__ultrix)
 #	 define ULTRIX
 #      else
@@@@ -210,7 +214,7 @@@@
 # if defined(_PA_RISC1_0) || defined(_PA_RISC1_1) || defined(_PA_RISC2_0) \
      || defined(hppa) || defined(__hppa__)
 #   define HP_PA
-#   if !defined(LINUX) && !defined(HPUX)
+#   if !defined(LINUX) && !defined(HPUX) && !defined(OPENBSD)
 #     define HPUX
 #   endif
 #   define mach_type_known
@@@@ -231,6 +235,10 @@@@
 #    define I386
 #    define mach_type_known
 # endif
+# if defined(OPENBSD) && defined(__amd64)
+#	define X86_64
+#	define mach_type_known
+# endif
 # if defined(LINUX) && defined(__x86_64__)
 #    define X86_64
 #    define mach_type_known
@@@@ -302,6 +310,11 @@@@
 #   define MACOS
 #   define mach_type_known
 # endif
+# if defined(__OpenBSD__) && defined(__powerpc__)
+#	define POWERPC
+#	define OPENBSD
+#	define mach_type_known
+# endif
 # if defined(macosx) || (defined(__APPLE__) && defined(__MACH__))
 #   define DARWIN
 #   if defined(__ppc__)  || defined(__ppc64__)
@@@@ -651,18 +664,6 @@@@
 # ifdef M68K
 #   define MACH_TYPE "M68K"
 #   define ALIGNMENT 2
-#   ifdef OPENBSD
-#	define OS_TYPE "OPENBSD"
-#	define HEURISTIC2
-#	ifdef __ELF__
-#	  define DATASTART GC_data_start
-#	  define DYNAMIC_LOADING
-#	else
-	  extern char etext[];
-#	  define DATASTART ((ptr_t)(etext))
-#       endif
-#       define USE_GENERIC_PUSH_REGS
-#   endif
 #   ifdef NETBSD
 #	define OS_TYPE "NETBSD"
 #	define HEURISTIC2
@@@@ -836,6 +837,24 @@@@
 	 should be looked into some more */
 #     define NO_PTHREAD_TRYLOCK
 #   endif
+#   ifdef OPENBSD
+#     define OS_TYPE "OPENBSD"
+#     define ALIGNMENT 4
+#     define SIG_SUSPEND SIGXFSZ
+#     define SIG_THR_RESTART SIGXCPU
+#     ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#     endif
+      extern int __data_start[];
+#     define DATASTART ((ptr_t)(__data_start))
+      extern char _end[];
+#     define DATAEND ((ptr_t)(&_end))
+#     define DYNAMIC_LOADING
+#     define USE_MMAP
+#     define USE_MMAP_ANON
+#   endif
 #   ifdef FREEBSD
 #   if defined(__powerpc64__)
 #       define ALIGNMENT 8
@@@@ -991,9 +1010,20 @@@@
 #   endif
 #   ifdef OPENBSD
 #     define OS_TYPE "OPENBSD"
-#     define STACKBOTTOM ((ptr_t) 0xf8000000)
-      extern int etext[];
-#     define DATASTART ((ptr_t)(etext))
+#     define SIG_SUSPEND SIGXFSZ
+#     define SIG_THR_RESTART SIGXCPU
+#     ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#     endif
+      extern int __data_start[];
+#     define DATASTART ((ptr_t)(__data_start))
+      extern char _end[];
+#     define DATAEND ((ptr_t)(&_end))
+#     define DYNAMIC_LOADING
+#     define USE_MMAP
+#     define USE_MMAP_ANON
 #   endif
 #   ifdef NETBSD
 #     define OS_TYPE "NETBSD"
@@@@ -1241,6 +1271,20 @@@@
 #   endif
 #   ifdef OPENBSD
 #	define OS_TYPE "OPENBSD"
+#    define SIG_SUSPEND SIGXFSZ
+#    define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#       define USE_MMAP
+#       define USE_MMAP_ANON
 #   endif
 #   ifdef FREEBSD
 #	define OS_TYPE "FREEBSD"
@@@@ -1276,7 +1320,7 @@@@
 #   ifdef BSDI
 #	define OS_TYPE "BSDI"
 #   endif
-#   if defined(OPENBSD) || defined(NETBSD) \
+#   if defined(NETBSD) \
         || defined(THREE86BSD) || defined(BSDI)
 #	define HEURISTIC2
 	extern char etext[];
@@@@ -1470,6 +1514,24 @@@@
 #       define STACKBOTTOM ((ptr_t) 0x7ffff000)
 #     endif /* _ELF_ */
 #  endif
+#  ifdef OPENBSD
+#      define OS_TYPE "OPENBSD"
+#       define ALIGNMENT 4
+#    define SIG_SUSPEND SIGXFSZ
+#    define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int _fdata[];
+#       define DATASTART ((ptr_t)(_fdata))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#       define USE_MMAP
+#       define USE_MMAP_ANON
+#  endif
 # endif
 
 # ifdef RS6000
@@@@ -1517,7 +1579,7 @@@@
 #     define ALIGNMENT 4
 #     define ALIGN_DOUBLE
 #   endif
-#   if !defined(GC_HPUX_THREADS) && !defined(GC_LINUX_THREADS)
+#   if !defined(GC_HPUX_THREADS) && !defined(GC_LINUX_THREADS) && !defined(OPENBSD)
 #     ifndef LINUX /* For now. */
 #       define MPROTECT_VDB
 #     endif
@@@@ -1569,6 +1631,23 @@@@
       extern int _end[];
 #     define DATAEND (&_end)
 #   endif /* LINUX */
+#  ifdef OPENBSD
+#      define OS_TYPE "OPENBSD"
+#    define SIG_SUSPEND SIGXFSZ
+#    define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#       define USE_MMAP
+#       define USE_MMAP_ANON
+#  endif
 # endif /* HP_PA */
 
 # ifdef ALPHA
@@@@ -1593,15 +1672,21 @@@@
 #   endif
 #   ifdef OPENBSD
 #	define OS_TYPE "OPENBSD"
-#	define HEURISTIC2
-#   	ifdef __ELF__	/* since OpenBSD/Alpha 2.9 */
-#	   define DATASTART GC_data_start
-#   	   define ELFCLASS32 32
-#   	   define ELFCLASS64 64
-#   	   define ELF_CLASS ELFCLASS64
-#       else		/* ECOFF, until OpenBSD/Alpha 2.7 */
-#   	   define DATASTART ((ptr_t) 0x140000000)
-#   	endif
+#      define ELF_CLASS ELFCLASS64
+#    define SIG_SUSPEND SIGXFSZ
+#    define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#       define USE_MMAP
+#       define USE_MMAP_ANON
 #   endif
 #   ifdef FREEBSD
 #	define OS_TYPE "FREEBSD"
@@@@ -1781,6 +1866,7 @@@@
 #   ifdef CX_UX
 #	define OS_TYPE "CX_UX"
 #       define DATASTART ((((word)etext + 0x3fffff) & ~0x3fffff) + 0x10000)
+#       define STACKBOTTOM ((char*)0xf0000000) /* determined empirically */
 #   endif
 #   ifdef  DGUX
 #	define OS_TYPE "DGUX"
@@@@ -1891,6 +1977,24 @@@@
 #     define OS_TYPE "MSWINCE"
 #     define DATAEND /* not needed */
 #   endif
+#   ifdef OPENBSD
+#     define ALIGNMENT 4
+#     define OS_TYPE "OPENBSD"
+#    define SIG_SUSPEND SIGXFSZ
+#    define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#       define USE_MMAP
+#       define USE_MMAP_ANON
+#   endif
 #   ifdef NOSYS
       /* __data_start is usually defined in the target linker script.  */
       extern int __data_start[];
@@@@ -1938,6 +2042,23 @@@@
 #       define USE_GENERIC_PUSH_REGS
 #      define DYNAMIC_LOADING
 #   endif
+#   ifdef OPENBSD
+#      define OS_TYPE "OPENBSD"
+#    define SIG_SUSPEND SIGXFSZ
+#    define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#       define USE_MMAP
+#       define USE_MMAP_ANON
+#   endif
 # endif
  
 # ifdef SH4
@@@@ -1975,6 +2096,24 @@@@
 #   endif
 #   ifndef HBLKSIZE
 #     define HBLKSIZE 4096
+#   endif
+#   ifdef OPENBSD
+#       define OS_TYPE "OPENBSD"
+#       define ELF_CLASS ELFCLASS64
+#    define SIG_SUSPEND SIGXFSZ
+#    define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#       define USE_MMAP
+#       define USE_MMAP_ANON
 #   endif
 #   define CACHE_LINE_SIZE 64
 #   define USE_GENERIC_PUSH_REGS
@


1.2
log
@Update to gcc 4.8.3.  Tested on sparc64 and adastraps hosted by tobiasu@@.

"rein damit" tobiasu@@
@
text
@d1 1
a1 1
$OpenBSD: patch-boehm-gc_include_private_gcconfig_h,v 1.1.1.1 2013/04/08 08:20:25 pascal Exp $
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD: patch-boehm-gc_include_private_gcconfig_h,v 1.1.1.1 2012/04/23 15:56:41 pascal Exp $
--- boehm-gc/include/private/gcconfig.h.orig	Wed Mar  6 16:08:58 2013
+++ boehm-gc/include/private/gcconfig.h	Fri Mar 22 22:19:18 2013
d128 3
a130 3
 #       define ALIGNMENT 4
 #       define OS_TYPE "FREEBSD"
@@@@ -983,9 +1002,20 @@@@
d154 1
a154 1
@@@@ -1233,6 +1263,20 @@@@
d175 1
a175 1
@@@@ -1268,7 +1312,7 @@@@
d184 1
a184 1
@@@@ -1462,6 +1506,24 @@@@
d209 1
a209 1
@@@@ -1509,7 +1571,7 @@@@
d218 1
a218 1
@@@@ -1561,6 +1623,23 @@@@
d242 1
a242 1
@@@@ -1585,15 +1664,21 @@@@
d273 1
a273 1
@@@@ -1773,6 +1858,7 @@@@
d281 1
a281 1
@@@@ -1883,6 +1969,24 @@@@
d306 1
a306 1
@@@@ -1930,6 +2034,23 @@@@
d330 1
a330 1
@@@@ -1967,6 +2088,24 @@@@
@


1.1.1.1
log
@Import gcc 4.8.

For a full Changelog, see: http://gcc.gnu.org/gcc-4.8/changes.html

Tested by me on amd64, i386 and powerpc and by brad@@ on sparc64.

Adds support for -java on powerpc.  -faggressive-loop-optimizations is
disabled by default in the port, and the default debugging format changed
to DWARF2 (instead of 4).

tweaks and ok tobiasu@@
@
text
@@
