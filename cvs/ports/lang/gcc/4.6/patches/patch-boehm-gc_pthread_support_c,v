head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.18
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.16
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.12
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.10
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	pascal_20111114:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2012.10.17.19.58.21;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.07.10.34.33;	author pascal;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.14.13.00.57;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.11.14.13.00.57;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix boehm-gc and increase gcj default thread stack size. Makes gjc work
well enough to bootstrap devel/jdk/1.6. okay pascal@@ jasper@@
@
text
@$OpenBSD: patch-boehm-gc_pthread_support_c,v 1.2 2012/05/07 10:34:33 pascal Exp $
--- boehm-gc/pthread_support.c.orig	Fri Dec 10 05:09:10 2010
+++ boehm-gc/pthread_support.c	Wed Oct 10 08:41:07 2012
@@@@ -118,6 +118,10 @@@@
 # include <fcntl.h>
 # include <signal.h>
 
+#if defined(GC_OPENBSD_THREADS)
+# include <pthread_np.h>
+#endif
+
 #if defined(GC_DARWIN_THREADS)
 # include "private/darwin_semaphore.h"
 #else
@@@@ -884,7 +888,7 @@@@ void GC_thr_init()
 	  GC_nprocs = pthread_num_processors_np();
 #       endif
 #	if defined(GC_OSF1_THREADS) || defined(GC_AIX_THREADS) \
-	   || defined(GC_SOLARIS_PTHREADS)
+	   || defined(GC_SOLARIS_PTHREADS) || defined(GC_OPENBSD_THREADS)
 	  GC_nprocs = sysconf(_SC_NPROCESSORS_ONLN);
 	  if (GC_nprocs <= 0) GC_nprocs = 1;
 #	endif
@@@@ -1156,6 +1160,10 @@@@ GC_PTR GC_get_thread_stack_base()
       return stack_addr;
 #   endif
 
+# elif defined(GC_OPENBSD_THREADS)
+    stack_t stack;
+    pthread_stackseg_np(pthread_self(), &stack);
+    return stack.ss_sp;
 # else
 #   ifdef DEBUG_THREADS
 	GC_printf0("Can not determine stack base for attached thread");
@


1.2
log
@Don't hardcode GC_nprocs to 1 in boehm-gc, but get it from sysconf instead,
following a similar change in devel/boehm-gc.
From Brad.

ok kurt@@
@
text
@d1 1
a1 1
$OpenBSD: patch-boehm-gc_pthread_support_c,v 1.1.1.1 2011/11/14 13:00:57 pascal Exp $
d3 13
a15 2
+++ boehm-gc/pthread_support.c	Tue May  1 03:40:41 2012
@@@@ -884,7 +884,7 @@@@ void GC_thr_init()
d24 3
a26 3
@@@@ -966,7 +966,7 @@@@ void GC_init_parallel()
 }
 
d28 7
a34 5
-#if !defined(GC_DARWIN_THREADS)
+#if !defined(GC_DARWIN_THREADS) && !defined(GC_OPENBSD_THREADS)
 int WRAP_FUNC(pthread_sigmask)(int how, const sigset_t *set, sigset_t *oset)
 {
     sigset_t fudged_set;
@


1.1
log
@Initial revision
@
text
@d1 10
a10 5
$OpenBSD$
--- boehm-gc/pthread_support.c.orig	Sat Nov 12 10:42:07 2011
+++ boehm-gc/pthread_support.c	Sat Nov 12 10:44:30 2011
@@@@ -892,6 +892,9 @@@@ void GC_thr_init()
 	  GC_nprocs = sysconf(_SC_NPROC_ONLN);
d12 2
a13 8
 #       endif
+#	if defined(GC_OPENBSD_THREADS)
+	 GC_nprocs = 1;
+#	endif
 #       if defined(GC_DARWIN_THREADS) || defined(GC_FREEBSD_THREADS)
 	  int ncpus = 1;
 	  size_t len = sizeof(ncpus);
@@@@ -966,7 +969,7 @@@@ void GC_init_parallel()
@


1.1.1.1
log
@now import for real, sorry ...
@
text
@@
