head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.20
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.18
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.14
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.16
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.12
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.10
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4;
locks; strict;
comment	@# @;


1.4
date	2012.04.08.12.40.51;	author pascal;	state Exp;
branches;
next	1.3;

1.3
date	2012.04.06.07.50.32;	author pascal;	state Exp;
branches;
next	1.2;

1.2
date	2011.12.10.13.38.45;	author pascal;	state dead;
branches;
next	1.1;

1.1
date	2011.12.06.01.51.37;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Fix previous to work when building java, but not go.  Noticed and patch by
Andre Zepezauer on ports@@ (thanks).

ok sthen@@
@
text
@$OpenBSD: patch-configure,v 1.3 2012/04/06 07:50:32 pascal Exp $
--- configure.orig	Sun Dec 18 11:03:44 2011
+++ configure	Sun Apr  8 14:36:19 2012
@@@@ -2698,8 +2698,7 @@@@ host_libs="intl mmalloc libiberty opcodes bfd readline
 host_tools="texinfo byacc flex bison binutils gas ld fixincludes gcc cgen sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils gettext zip fastjar gnattools"
 
 # libgcj represents the runtime libraries only used by gcj.
-libgcj="target-libffi \
-	target-zlib \
+libgcj="target-zlib \
 	target-qthreads \
 	target-libjava"
 
@@@@ -2716,6 +2715,7 @@@@ target_libraries="target-libgcc \
 		target-libquadmath \
 		target-libgfortran \
 		target-boehm-gc \
+		target-libffi \
 		${libgcj} \
 		target-libobjc \
 		target-libada \
@@@@ -3049,7 +3049,9 @@@@ fi
 
 # Save it here so that, even in case of --enable-libgcj, if the Java
 # front-end isn't enabled, we still get libgcj disabled.
-libgcj_saved=$libgcj
+# And with the Java front-end enabled, the variable libgcj_saved will
+# be used in gcc/java/config-lang.in to specify library dependencies.
+libgcj_saved="target-libffi ${libgcj}"
 case $enable_libgcj in
 yes)
   # If we reset it here, it won't get added to noconfigdirs in the
@@@@ -3060,7 +3062,7 @@@@ yes)
 no)
   # Make sure we get it printed in the list of not supported target libs.
   # Don't disable libffi, though, other languages use it.
-  noconfigdirs="$noconfigdirs `echo ${libgcj} | sed -e 's/target-libffi//'`"
+  noconfigdirs="$noconfigdirs ${libgcj}"
   # Clear libgcj_saved so that even if java is enabled libffi won't be
   # built.
   libgcj_saved=
@


1.3
log
@Also build libffi on arches where java isn't supported, it's needed for libgo.

tested on powerpc and ok aja@@
@
text
@d1 3
a3 3
$OpenBSD$
--- configure.orig	Wed Apr  4 23:07:41 2012
+++ configure	Thu Apr  5 17:58:40 2012
d14 5
a18 1
@@@@ -2719,6 +2718,7 @@@@ target_libraries="target-libgcc \
d22 1
a22 2
+		target-libffi \
 		target-libgo"
d24 18
a41 1
 # these tools are built using the target libraries, and are intended to
@


1.2
log
@don't need gsed patch anymore
@
text
@d1 21
a21 12
$OpenBSD: patch-configure,v 1.1 2011/12/06 01:51:37 pascal Exp $
--- configure.orig	Mon Dec  5 22:50:49 2011
+++ configure	Mon Dec  5 22:51:01 2011
@@@@ -2515,7 +2515,7 @@@@ for as_dir in $PATH
 do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
-    for ac_prog in sed gsed; do
+    for ac_prog in sed ; do
     for ac_exec_ext in '' $ac_executable_extensions; do
       ac_path_SED="$as_dir/$ac_prog$ac_exec_ext"
       { test -f "$ac_path_SED" && $as_test_x "$ac_path_SED"; } || continue
@


1.1
log
@- be sure to always use sed from base
- adjust gfortran WANTLIB version in gcc4.port.mk
@
text
@d1 1
a1 1
$OpenBSD$
@

