head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.24
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.22
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.20
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.16
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.18
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.14
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.12
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.10
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.8
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.6
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	pascal_20111114:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2011.11.14.13.00.57;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.11.14.13.00.57;	author pascal;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- gcc/unwind-dw2.c.orig	Sat Nov 12 13:51:04 2011
+++ gcc/unwind-dw2.c	Sat Nov 12 13:52:44 2011
@@@@ -145,6 +145,25 @@@@ _Unwind_IsExtendedContext (struct _Unwind_Context *con
 {
   return context->flags & EXTENDED_CONTEXT_BIT;
 }
+
+#ifdef __sparc64__
+
+/* Figure out StackGhost cookie.  */
+_Unwind_Word uw_get_wcookie(void);
+
+asm(".text\n"
+    "uw_get_wcookie:\n"
+    "  add  %o7, %g0, %g4\n"
+    "  save %sp, -176, %sp\n"
+    "  save %sp, -176, %sp\n"
+    "  flushw\n"
+    "  restore\n"
+    "  ldx [%sp + 2047 + 120], %g5\n"
+    "  xor %g4, %g5, %i0\n"
+    "  ret\n"
+    "   restore\n");
+#endif
+
 
 /* Get the value of register INDEX as saved in CONTEXT.  */
 
@@@@ -167,6 +186,13 @@@@ _Unwind_GetGR (struct _Unwind_Context *context, int in
   if (_Unwind_IsExtendedContext (context) && context->by_value[index])
     return (_Unwind_Word) (_Unwind_Internal_Ptr) ptr;
 
+#ifdef __sparc64__
+  /* _Unwind_Word and _Unwind_Ptr are the same size on sparc64 */
+  _Unwind_Word reg = * (_Unwind_Word *) ptr;
+  if (index == 15 || index == 31)
+    reg ^= uw_get_wcookie ();
+  return reg;
+#else
   /* This will segfault if the register hasn't been saved.  */
   if (size == sizeof(_Unwind_Ptr))
     return * (_Unwind_Ptr *) ptr;
@@@@ -175,6 +201,7 @@@@ _Unwind_GetGR (struct _Unwind_Context *context, int in
       gcc_assert (size == sizeof(_Unwind_Word));
       return * (_Unwind_Word *) ptr;
     }
+#endif
 }
 
 static inline void *
@


1.1.1.1
log
@now import for real, sorry ...
@
text
@@
