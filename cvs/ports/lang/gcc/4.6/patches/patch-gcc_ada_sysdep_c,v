head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.14
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.02.07.01.27.21;	author tobiasu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Repair time/delay/duration time_t issues in gnat. All direct imports of
C functions have been modified to use same-size types on both sides.
There are no checks in gcc to make sure the types match, and it happily
trashes the stack or reads bogus data without this fix.

The C shim in gnatlib is still casting down to long (by design), thus
gnat is not 2038-proof on 32 bit architectures. Fixing this is an
ongoing project, but I'm running out of time for this release.

Getting the timezone offset is now supported; the unused usleep
procedure that snuck in from FreeBSD support got removed.

Tested on all supported architectures, plus new bootstraps due to the
stack trashing, just in case...

Conceptually fine with brad@@
deraadt@@ is unhappy with the partial solution, fixing this remains a
high priority todo
@
text
@$OpenBSD$
--- gcc/ada/sysdep.c.orig	Sun Jan 19 01:26:27 2014
+++ gcc/ada/sysdep.c	Sun Jan 19 01:28:13 2014
@@@@ -937,7 +937,8 @@@@ __gnat_localtime_tzoff (const time_t *timer, long *off
    struct tm */
 
 #elif defined (__APPLE__) || defined (__FreeBSD__) || defined (linux) ||\
-     (defined (__alpha__) && defined (__osf__)) || defined (__GLIBC__)
+     (defined (__alpha__) && defined (__osf__)) || defined (__GLIBC__) ||\
+      defined (__OpenBSD__)
 {
   localtime_r (timer, &tp);
   *off = tp.tm_gmtoff;
@
