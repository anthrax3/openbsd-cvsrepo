head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.18
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.16
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.06.07.07.54.24;	author pascal;	state Exp;
branches;
next	1.1;

1.1
date	2012.02.16.21.30.15;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to GCC 4.6.4.  tested by and adastrap-sparc64 built by tobiasu@@
@
text
@$OpenBSD: patch-gcc_toplev_c,v 1.1 2012/02/16 21:30:15 pascal Exp $
--- gcc/toplev.c.orig	Thu Mar 29 04:15:29 2012
+++ gcc/toplev.c	Sat Apr 13 16:20:32 2013
@@@@ -1587,6 +1587,8 @@@@ process_options (void)
 
   /* Targets must be able to place spill slots at lower addresses.  If the
      target already uses a soft frame pointer, the transition is trivial.  */
+  if (flag_stack_protect == -1)
+    flag_stack_protect = FRAME_GROWS_DOWNWARD ? 1 : 0;
   if (!FRAME_GROWS_DOWNWARD && flag_stack_protect)
     {
       warning (0, "-fstack-protector not supported for this target");
@


1.1
log
@- modify stack protection to work with our native libc routines, passing the
  function name to __stack_smash_handler.  Only supported for "c-family"
  languages at the moment.
- enable it per default on archs where FRAME_GROWS_DOWNWARD
- remove obsolete comment about adastrap needing a specific libc
- -java actually needs a runtime dep on -main for -lgcc

ok espie@@
@
text
@d1 4
a4 4
$OpenBSD$
--- gcc/toplev.c.orig	Fri Jan 20 14:23:40 2012
+++ gcc/toplev.c	Fri Jan 20 14:24:30 2012
@@@@ -1580,6 +1580,8 @@@@ process_options (void)
@

