head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.18
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.14
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.16
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.12
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2;
locks; strict;
comment	@# @;


1.5
date	2012.04.06.07.50.32;	author pascal;	state Exp;
branches;
next	1.4;

1.4
date	2012.02.26.22.32.36;	author pascal;	state Exp;
branches;
next	1.3;

1.3
date	2012.01.26.13.17.22;	author pascal;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.22.21.46.39;	author pascal;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.19.22.19.53;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Also build libffi on arches where java isn't supported, it's needed for libgo.

tested on powerpc and ok aja@@
@
text
@$OpenBSD: patch-libgo_configure,v 1.4 2012/02/26 22:32:36 pascal Exp $
--- libgo/configure.orig	Mon Feb 21 05:17:20 2011
+++ libgo/configure	Wed Apr  4 23:09:24 2012
@@@@ -644,6 +644,8 @@@@ LIBGO_IS_LINUX_FALSE
 LIBGO_IS_LINUX_TRUE
 LIBGO_IS_FREEBSD_FALSE
 LIBGO_IS_FREEBSD_TRUE
+LIBGO_IS_OPENBSD_FALSE
+LIBGO_IS_OPENBSD_TRUE
 LIBGO_IS_DARWIN_FALSE
 LIBGO_IS_DARWIN_TRUE
 LIBFFIINCS
@@@@ -10320,7 +10322,7 @@@@ openbsd*)
     *)				need_version=no  ;;
   esac
   library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
-  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  #finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
     case $host_os in
@@@@ -13213,6 +13215,7 @@@@ fi
 
 is_darwin=no
 is_freebsd=no
+is_openbsd=no
 is_linux=no
 is_rtems=no
 is_solaris=no
@@@@ -13220,6 +13223,7 @@@@ GOOS=unknown
 case ${host} in
   *-*-darwin*)   is_darwin=yes;  GOOS=darwin ;;
   *-*-freebsd*)  is_freebsd=yes; GOOS=freebsd ;;
+  *-*-openbsd*)  is_openbsd=yes; GOOS=openbsd ;;
   *-*-linux*)    is_linux=yes;   GOOS=linux ;;
   *-*-rtems*)    is_rtems=yes;   GOOS=rtems ;;
   *-*-solaris2*) is_solaris=yes; GOOS=solaris ;;
@@@@ -13240,6 +13244,14 @@@@ else
   LIBGO_IS_FREEBSD_FALSE=
 fi
 
+ if test $is_openbsd = yes; then
+  LIBGO_IS_OPENBSD_TRUE=
+  LIBGO_IS_OPENBSD_FALSE='#'
+else
+  LIBGO_IS_OPENBSD_TRUE='#'
+  LIBGO_IS_OPENBSD_FALSE=
+fi
+
  if test $is_linux = yes; then
   LIBGO_IS_LINUX_TRUE=
   LIBGO_IS_LINUX_FALSE='#'
@@@@ -13706,13 +13718,13 @@@@ fi
 
 
 PTHREAD_LIBS=
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for pthread_create in -lpthread" >&5
-$as_echo_n "checking for pthread_create in -lpthread... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for pthread_create in -pthread" >&5
+$as_echo_n "checking for pthread_create in -pthread... " >&6; }
 if test "${ac_cv_lib_pthread_pthread_create+set}" = set; then :
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-lpthread  $LIBS"
+LIBS="-pthread  $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@@@ -13743,7 +13755,7 @@@@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_pthread_pthread_create" >&5
 $as_echo "$ac_cv_lib_pthread_pthread_create" >&6; }
 if test "x$ac_cv_lib_pthread_pthread_create" = x""yes; then :
-  PTHREAD_LIBS=-lpthread
+  PTHREAD_LIBS=-pthread
 fi
 
 
@


1.4
log
@Fix build of libgo on powerpc by:
- backporting a fix for the ppc backend from upstream
- telling libgo configure not to try to link to libffi_convenience on ppc

issue brought up and fix tested by ajacoutot@@, "go ahead" kettenis@@
@
text
@d1 1
a1 1
$OpenBSD: patch-libgo_configure,v 1.3 2012/01/26 13:17:22 pascal Exp $
d3 1
a3 1
+++ libgo/configure	Tue Feb 21 00:17:14 2012
d22 1
a22 12
@@@@ -13191,6 +13193,10 @@@@ fi
 # architectures don't support it.  FIXME: We should set a default
 # based on the host.
 
+case ${host} in
+powerpc*-*-*) with_libffi_default=no ;;
+esac
+
 # Check whether --with-libffi was given.
 if test "${with_libffi+set}" = set; then :
   withval=$with_libffi; :
@@@@ -13213,6 +13219,7 @@@@ fi
d30 1
a30 1
@@@@ -13220,6 +13227,7 @@@@ GOOS=unknown
d38 1
a38 1
@@@@ -13240,6 +13248,14 @@@@ else
d53 1
a53 1
@@@@ -13706,13 +13722,13 @@@@ fi
d70 1
a70 1
@@@@ -13743,7 +13759,7 @@@@ fi
@


1.3
log
@- bump libestdc++ following the bump in gcc 4.2
- deal with ldconfig shitz being run at fake install everywhere
- fix sprintf/strcpy usage in libestdc++ so we don't get a warning every time
  we compile a C++ program

Everything brought up by espie@@.
@
text
@d1 1
a1 1
$OpenBSD: patch-libgo_configure,v 1.2 2011/11/22 21:46:39 pascal Exp $
d3 1
a3 1
+++ libgo/configure	Wed Jan 25 17:49:19 2012
d22 12
a33 1
@@@@ -13213,6 +13215,7 @@@@ fi
d41 1
a41 1
@@@@ -13220,6 +13223,7 @@@@ GOOS=unknown
d49 1
a49 1
@@@@ -13240,6 +13244,14 @@@@ else
d64 1
a64 1
@@@@ -13706,13 +13718,13 @@@@ fi
d81 1
a81 1
@@@@ -13743,7 +13755,7 @@@@ fi
@


1.2
log
@- update and use OpenBSD threads in boehm-gc, from myself and kurt@@. gcj-dbtool
  still doesn't work.
- update gcc4.port.mk for gcc 4.6: always use libestdc++
@
text
@d1 1
a1 1
$OpenBSD: patch-libgo_configure,v 1.1 2011/11/19 22:19:53 pascal Exp $
d3 1
a3 1
+++ libgo/configure	Tue Nov 22 18:27:42 2011
d13 9
@


1.1
log
@- add Go support (only tested on amd64, but I'd be surprised if it broke
  anywhere else.  The only thing not supported yet is tracing using ptrace(2).
- clean up Makefile and restructure a bit
- VMEM_WARNING when -java is built
- some minor PLIST tweaks

ok espie@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ libgo/configure	Sat Nov 19 23:07:23 2011
d29 1
a29 3
@@@@ -13238,6 +13242,14 @@@@ fi
 else
   LIBGO_IS_FREEBSD_TRUE='#'
d31 2
a32 2
+fi
+
d39 28
d69 1
a69 1
  if test $is_linux = yes; then
@

