head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.22
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.20
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.16
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.18
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.14
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.12
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.10
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.8
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	pascal_20111114:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2012.01.26.13.17.22;	author pascal;	state Exp;
branches;
next	1.4;

1.4
date	2012.01.10.17.18.18;	author pascal;	state dead;
branches;
next	1.3;

1.3
date	2011.12.13.13.46.45;	author pascal;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.20.11.10.36;	author pascal;	state dead;
branches;
next	1.1;

1.1
date	2011.11.14.13.00.56;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.11.14.13.00.56;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.5
log
@- bump libestdc++ following the bump in gcc 4.2
- deal with ldconfig shitz being run at fake install everywhere
- fix sprintf/strcpy usage in libestdc++ so we don't get a warning every time
  we compile a C++ program

Everything brought up by espie@@.
@
text
@$OpenBSD$
--- libstdc++-v3/configure.orig	Thu Oct  6 01:09:51 2011
+++ libstdc++-v3/configure	Wed Jan 25 18:17:11 2012
@@@@ -10891,7 +10891,7 @@@@ openbsd*)
     *)				need_version=no  ;;
   esac
   library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
-  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  #finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
     case $host_os in
@@@@ -14574,7 +14574,7 @@@@ openbsd*)
     *)				need_version=no  ;;
   esac
   library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
-  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  #finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
     case $host_os in
@


1.4
log
@This patch is no longer needed, noticed by Brad.
@
text
@d1 1
a1 1
$OpenBSD: patch-libstdc++-v3_configure,v 1.3 2011/12/13 13:46:45 pascal Exp $
d3 19
a21 10
+++ libstdc++-v3/configure	Mon Dec 12 23:07:13 2011
@@@@ -16222,6 +16222,8 @@@@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
        test x"$ac_has_wctype_h" = xyes; then
       cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
+#define __STDC_LIMIT_MACROS 1
+#include <stdint.h>
 #include <wchar.h>
 		      #include <stddef.h>
 		      wint_t i;
@


1.3
log
@Fix configure test for wstring support, reported by robert@@.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@- PCH support using kurt@@'s implementation does work, if you actually enable it
by not making a stupid typo.  From kurt@@ (thanks).
- respect version of liblto_plugin
- add %%PIC%% in PLIST-go
@
text
@d1 12
a12 14
$OpenBSD: patch-libstdc++-v3_configure,v 1.1 2011/11/14 13:00:56 pascal Exp $
PCH support needs mmap at a fixed location
http://gcc.gnu.org/bugzilla/show_bug.cgi?id=39618

--- libstdc++-v3/configure.orig	Tue Nov  1 19:02:33 2011
+++ libstdc++-v3/configure	Tue Nov  1 19:03:25 2011
@@@@ -15014,6 +15014,7 @@@@ else
   enable_libstdcxx_pch=$is_hosted
 fi
 
+enable_libstdcxx_pch=no
 
   if test $enable_libstdcxx_pch = yes; then
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking for compiler with PCH support" >&5
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@now import for real, sorry ...
@
text
@@
