head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.18
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.16
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.12
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.14
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.01.16.19.28.48;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add hppa support.  Still a bit rough around the edges: Some optimisations
(-foptimize-sibling-calls and -freorder-blocks) cause segfaults during build,
so don't include them in -O2 on hppa.  Also, -go is not supported.

requested by and ok brad@@ and tested on one of his machines
@
text
@$OpenBSD$
--- gcc/config/pa/pa.h.orig	Wed Apr  4 05:01:54 2012
+++ gcc/config/pa/pa.h	Wed Apr  4 05:03:33 2012
@@@@ -326,6 +326,9 @@@@ typedef struct GTY(()) machine_function
    && TYPE_MODE (TREE_TYPE (TYPE)) == QImode	\
    && (ALIGN) < BITS_PER_WORD ? BITS_PER_WORD : (ALIGN))
 
+/* Make local arrays of chars word-aligned for the same reasons.  */
+#define LOCAL_ALIGNMENT(TYPE, ALIGN) DATA_ALIGNMENT (TYPE, ALIGN)
+
 /* Set this nonzero if move instructions will actually fail to work
    when given unaligned data.  */
 #define STRICT_ALIGNMENT 1
@
