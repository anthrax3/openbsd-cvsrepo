head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.20
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.16
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.18
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.14
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.12
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2011.11.19.22.19.53;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.1
log
@- add Go support (only tested on amd64, but I'd be surprised if it broke
  anywhere else.  The only thing not supported yet is tracing using ptrace(2).
- clean up Makefile and restructure a bit
- VMEM_WARNING when -java is built
- some minor PLIST tweaks

ok espie@@
@
text
@$OpenBSD$
--- libgo/runtime/go-go.c.orig	Fri Nov 18 00:51:14 2011
+++ libgo/runtime/go-go.c	Fri Nov 18 00:51:41 2011
@@@@ -28,8 +28,8 @@@@ extern void *__splitstack_find (void *, void *, size_t
 /* We stop the threads by sending them the signal GO_SIG_STOP and we
    start them by sending them the signal GO_SIG_START.  */
 
-#define GO_SIG_START (SIGRTMIN + 1)
-#define GO_SIG_STOP (SIGRTMIN + 2)
+#define GO_SIG_START SIGUSR1
+#define GO_SIG_STOP SIGUSR2
 
 #ifndef SA_RESTART
   #define SA_RESTART 0
@
