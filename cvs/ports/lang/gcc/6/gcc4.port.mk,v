head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	pascal_20160904:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.06.04.23.22.57;	author sthen;	state Exp;
branches;
next	1.1;
commitid	9V71pxj9Vcn3MtcS;

1.1
date	2016.09.04.16.20.14;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	kt4pzu6QIrUczPNq;

1.1.1.1
date	2016.09.04.16.20.14;	author pascal;	state Exp;
branches;
next	;
commitid	kt4pzu6QIrUczPNq;


desc
@@


1.2
log
@Write out wrapper scripts for compilers using -B to set the toolchain
search path to ${WRKDIR}/bin. Ensures that the ld wrapper script needed
for USE_WXNEEDED gets used (clang was ignoring it otherwise).

Rework ccache support and gcc4/clang MODULES to use the same wrapper
generator as above, setting up a list of command names (cc, c++, etc) and
destinations (egcc, eg++, etc) as the port is processed, and writing the
wrappers in one place in bsd.port.mk, with an optional wrapper (e.g.
ccache), and with an echo to make it clear on screen/in log which
compiler binaries were chosen (easier than inspecting the wrapper
scripts) and whether ccache is used.

Initial wrapper using -B from espie, ccache bits from me, discussed
with/ok espie.  Been through a bulk on i386.
@
text
@# $OpenBSD: gcc4.port.mk,v 1.1.1.1 2016/09/04 16:20:14 pascal Exp $

MODGCC4_ARCHS ?=
MODGCC4_LANGS ?=


.if ${MODGCC4_LANGS:L} != "java" && !${MODGCC4_LANGS:L:Mc}
# Always include support for this
# unless only java is needed
MODGCC4_LANGS +=	c
.endif

_MODGCC4_OKAY = c c++ java fortran
.for _l in ${MODGCC4_LANGS:L}
.  if !${_MODGCC4_OKAY:M${_l}}
ERRORS += "Fatal: unknown language ${_l}"
.  endif
.endfor

_MODGCC4_ARCH_USES = No

.if ${MODGCC4_ARCHS:L} != ""
.  for _i in ${MODGCC4_ARCHS}
.    if !empty(MACHINE_ARCH:M${_i})
_MODGCC4_ARCH_USES = Yes
.    endif
.  endfor
.endif

COMPILER_VERSION ?= gcc2

_MODGCC4_LINKS =
MODGCC4STDCPP = estdc++
MODGCC4_CPPLIBDEP = lang/gcc/6,-libs>=6,<7
MODGCC4_CPPWANTLIB = estdc++>=18

.if ${_MODGCC4_ARCH_USES:L} == "yes"

.  if ${MODGCC4_LANGS:L:Mc}
BUILD_DEPENDS += lang/gcc/6>=6,<7
COMPILER_LINKS += cc ${LOCALBASE}/bin/egcc gcc ${LOCALBASE}/bin/egcc
.  endif

.  if ${MODGCC4_LANGS:L:Mc++}
BUILD_DEPENDS += lang/gcc/6,-c++>=6,<7
LIB_DEPENDS += ${MODGCC4_CPPLIBDEP}
WANTLIB += ${MODGCC4_CPPWANTLIB}
COMPILER_LINKS += c++ ${LOCALBASE}/bin/eg++ g++ ${LOCALBASE}/bin/eg++
.  endif

.  if ${MODGCC4_LANGS:L:Mfortran}
BUILD_DEPENDS += lang/gcc/6,-f95>=6,<7
WANTLIB += gfortran>=7
# XXX sync with Makefile
.if ${MACHINE_ARCH} == "amd64" || ${MACHINE_ARCH} == "i386"
WANTLIB += quadmath
.endif
LIB_DEPENDS += lang/gcc/6,-libs>=6,<7
COMPILER_LINKS += gfortran ${LOCALBASE}/bin/egfortran
.  endif

.  if ${MODGCC4_LANGS:L:Mjava}
BUILD_DEPENDS += lang/gcc/6,-java>=6,<7
MODGCC4_GCJWANTLIB = gcj
MODGCC4_GCJLIBDEP = lang/gcc/6,-java>=6,<7
COMPILER_LINKS += gcj ${LOCALBASE}/bin/egcj
_MODGCC4_LINKS += gcjh gjar gij
.  endif

#.  if ${MODGCC4_LANGS:L:Mgo}
#BUILD_DEPENDS += lang/gcc/6,-go>=6,<7
#WANTLIB += go
#LIB_DEPENDS += lang/gcc/6,-go>=6,<7
#COMPILER_LINKS += gccgo ${LOCALBASE}/bin/egccgo
#.  endif
.endif

.if !empty(_MODGCC4_LINKS)
.  for _src in ${_MODGCC4_LINKS}
MODGCC4_post-patch += ln -sf ${LOCALBASE}/bin/e${_src} ${WRKDIR}/bin/${_src};
.  endfor
.endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: gcc4.port.mk,v 1.5 2016/03/05 15:27:27 pascal Exp $
d32 1
a36 1
_MODGCC4_LINKS =
d41 1
a41 1
_MODGCC4_LINKS += egcc gcc egcc cc
d48 1
a48 1
_MODGCC4_LINKS += eg++ g++ eg++ c++
d59 1
a59 1
_MODGCC4_LINKS += egfortran gfortran
d66 2
a67 1
_MODGCC4_LINKS += egcj gcj egcjh gcjh egjar gjar egij gij
d74 1
a74 1
#_MODGCC4_LINKS += egccgo gccgo
d79 3
a81 13
.  if "${USE_CCACHE:L}" == "yes" && "${NO_CCACHE:L}" != "yes"
.    for _src _dest in ${_MODGCC4_LINKS}
MODGCC4_post-patch +=	rm -f ${WRKDIR}/bin/${_dest};
MODGCC4_post-patch +=	echo '\#!/bin/sh' >${WRKDIR}/bin/${_dest};
MODGCC4_post-patch +=	echo exec ccache ${LOCALBASE}/bin/${_src} \"\$$@@\"
MODGCC4_post-patch +=	>>${WRKDIR}/bin/${_dest};
MODGCC4_post-patch +=	chmod +x ${WRKDIR}/bin/${_dest};
.    endfor
.  else
.    for _src _dest in ${_MODGCC4_LINKS}
MODGCC4_post-patch += ln -sf ${LOCALBASE}/bin/${_src} ${WRKDIR}/bin/${_dest};
.    endfor
.  endif
a82 1

@


1.1.1.1
log
@Import GCC 6.2.0.

ok espie@@
@
text
@@
