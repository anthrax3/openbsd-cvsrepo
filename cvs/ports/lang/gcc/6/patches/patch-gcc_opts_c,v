head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.4
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	pascal_20160904:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.04.16.20.18;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	kt4pzu6QIrUczPNq;

1.1.1.1
date	2016.09.04.16.20.18;	author pascal;	state Exp;
branches;
next	;
commitid	kt4pzu6QIrUczPNq;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD: patch-gcc_opts_c,v 1.3 2015/02/03 20:32:12 pascal Exp $
--- gcc/opts.c.orig	Thu Mar 17 16:11:35 2016
+++ gcc/opts.c	Tue Aug 23 20:16:30 2016
@@@@ -46,6 +46,9 @@@@ const char *const debug_type_names[] =
   ((strncmp (prefix, string, sizeof prefix - 1) == 0) \
    ? ((string += sizeof prefix - 1), 1) : 0)
 
+int warn_stack_larger_than;
+HOST_WIDE_INT stack_larger_than_size;
+
 void
 set_struct_debug_option (struct gcc_options *opts, location_t loc,
 			 const char *spec)
@@@@ -494,8 +497,6 @@@@ static const struct default_options default_options_ta
     { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_fschedule_insns, NULL, 1 },
     { OPT_LEVELS_2_PLUS, OPT_fschedule_insns2, NULL, 1 },
 #endif
-    { OPT_LEVELS_2_PLUS, OPT_fstrict_aliasing, NULL, 1 },
-    { OPT_LEVELS_2_PLUS, OPT_fstrict_overflow, NULL, 1 },
     { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_freorder_blocks_algorithm_, NULL,
       REORDER_BLOCKS_ALGORITHM_STC },
     { OPT_LEVELS_2_PLUS, OPT_freorder_functions, NULL, 1 },
@@@@ -521,6 +522,7 @@@@ static const struct default_options default_options_ta
     { OPT_LEVELS_2_PLUS, OPT_flra_remat, NULL, 1 },
 
     /* -O3 optimizations.  */
+    { OPT_LEVELS_3_PLUS, OPT_fstrict_aliasing, NULL, 1 },
     { OPT_LEVELS_3_PLUS, OPT_ftree_loop_distribute_patterns, NULL, 1 },
     { OPT_LEVELS_3_PLUS, OPT_fpredictive_commoning, NULL, 1 },
     { OPT_LEVELS_3_PLUS, OPT_fsplit_paths, NULL, 1 },
@@@@ -780,6 +782,8 @@@@ finish_options (struct gcc_options *opts, struct gcc_o
 	opts->x_flag_pic = 0;
       if (opts->x_flag_pic && !opts->x_flag_pie)
 	opts->x_flag_shlib = 1;
+      if (opts->x_profile_flag)
+        opts->x_flag_pie = 0;
       opts->x_flag_opts_finished = true;
     }
 
@@@@ -1795,6 +1799,11 @@@@ common_handle_option (struct gcc_options *opts,
     case OPT_Wframe_larger_than_:
       opts->x_frame_larger_than_size = value;
       opts->x_warn_frame_larger_than = value != -1;
+      break;
+
+    case OPT_Wstack_larger_than_:
+      stack_larger_than_size = value;
+      warn_stack_larger_than = stack_larger_than_size != -1;
       break;
 
     case OPT_Wstack_usage_:
@


1.1.1.1
log
@Import GCC 6.2.0.

ok espie@@
@
text
@@
