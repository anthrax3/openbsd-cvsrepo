head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.2
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.4.0.2
	OPENBSD_6_1_BASE:1.4
	pascal_20160904:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2017.07.19.09.23.16;	author pascal;	state Exp;
branches;
next	1.4;
commitid	6OFtMLIxXVtJ6fHA;

1.4
date	2016.12.28.21.48.21;	author pascal;	state Exp;
branches;
next	1.3;
commitid	WGf0BYDvhPmgYakh;

1.3
date	2016.09.23.10.11.14;	author pascal;	state Exp;
branches;
next	1.2;
commitid	K20eFd7qG8tFYL4s;

1.2
date	2016.09.15.10.37.03;	author pascal;	state Exp;
branches;
next	1.1;
commitid	PfNNc40Xw5uDnpmg;

1.1
date	2016.09.04.16.20.15;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	kt4pzu6QIrUczPNq;

1.1.1.1
date	2016.09.04.16.20.15;	author pascal;	state Exp;
branches;
next	;
commitid	kt4pzu6QIrUczPNq;


desc
@@


1.5
log
@Update to GCC 6.4.0, regen bootstraps.
@
text
@$OpenBSD: patch-gcc_ada_gcc-interface_Makefile_in,v 1.4 2016/12/28 21:48:21 pascal Exp $
Index: gcc/ada/gcc-interface/Makefile.in
--- gcc/ada/gcc-interface/Makefile.in.orig
+++ gcc/ada/gcc-interface/Makefile.in
@@@@ -419,6 +419,10 @@@@ ATOMICS_TARGET_PAIRS = \
   a-szunau.adb<a-szunau-shared.adb \
   a-szuzti.adb<a-szuzti-shared.adb
 
+# Disable shared strings because of overlapping memcpy issue
+# See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64057
+ATOMICS_TARGET_PAIRS =
+
 ATOMICS_BUILTINS_TARGET_PAIRS = \
   s-atocou.adb<s-atocou-builtin.adb
 
@@@@ -1533,6 +1537,252 @@@@ ifeq ($(strip $(filter-out %86 freebsd%,$(target_cpu) 
   MISCLIB = -lutil
 endif
 
+ifeq ($(strip $(filter-out arm openbsd%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-osinte.ads<s-osinte-openbsd.ads \
+  s-osinte.adb<s-osinte-openbsd.adb \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \
+  system.ads<system-openbsd-arm.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  # Empty when not using ZCX
+  EH_MECHANISM=
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
+ifeq ($(strip $(filter-out %86 openbsd%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-osinte.ads<s-osinte-openbsd.ads \
+  s-osinte.adb<s-osinte-openbsd.adb \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(X86_TARGET_PAIRS) \
+  system.ads<system-openbsd-x86.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  # Empty when not using ZCX
+  EH_MECHANISM=
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
+ifeq ($(strip $(filter-out %86_64 openbsd%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-osinte.ads<s-osinte-openbsd.ads \
+  s-osinte.adb<s-osinte-openbsd.adb \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(X86_64_TARGET_PAIRS) \
+  system.ads<system-openbsd-x86_64.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  # Empty when not using ZCX
+  EH_MECHANISM=
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
+ifeq ($(strip $(filter-out sparc64 openbsd%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-osinte.ads<s-osinte-openbsd.ads \
+  s-osinte.adb<s-osinte-openbsd.adb \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \
+  system.ads<system-openbsd-sparcv9.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  # Empty when not using ZCX
+  EH_MECHANISM=
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
+ifeq ($(strip $(filter-out sparc openbsd%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-osinte.ads<s-osinte-openbsd.ads \
+  s-osinte.adb<s-osinte-openbsd.adb \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \
+  system.ads<system-openbsd-sparc.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  # Empty when not using ZCX
+  EH_MECHANISM=
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
+ifeq ($(strip $(filter-out powerpc openbsd%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-osinte.ads<s-osinte-openbsd.ads \
+  s-osinte.adb<s-osinte-openbsd.adb \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \
+  system.ads<system-openbsd-ppc.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  # Empty when not using ZCX
+  EH_MECHANISM=
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
+ifeq ($(strip $(filter-out mips64 openbsd%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-osinte.ads<s-osinte-openbsd.ads \
+  s-osinte.adb<s-osinte-openbsd.adb \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \
+  system.ads<system-openbsd-mips64.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  # Empty when not using ZCX
+  EH_MECHANISM=
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
+ifeq ($(strip $(filter-out mips64el openbsd%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-osinte.ads<s-osinte-openbsd.ads \
+  s-osinte.adb<s-osinte-openbsd.adb \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \
+  system.ads<system-openbsd-mips64el.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  # Empty when not using ZCX
+  EH_MECHANISM=
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
+ifeq ($(strip $(filter-out hppa openbsd%,$(target_cpu) $(target_os))),)
+  ATOMICS_BUILTINS_TARGET_PAIRS = \
+  s-atocou.adb<s-atocou.adb
+
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-osinte.ads<s-osinte-openbsd.ads \
+  s-osinte.adb<s-osinte-openbsd.adb \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \
+  system.ads<system-openbsd-hppa.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  # Empty when not using ZCX
+  EH_MECHANISM=
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
 # x86-64 FreeBSD
 ifeq ($(strip $(filter-out %86_64 freebsd%,$(target_cpu) $(target_os))),)
   LIBGNAT_TARGET_PAIRS = \
@@@@ -2488,7 +2738,7 @@@@ LIBGNAT_OBJS = adadecode.o adaint.o argv.o aux-io.o 		
 #  from ADA_INCLUDE_SRCS.
 
 LIBGNAT_SRCS = $(patsubst %.o,%.c,$(LIBGNAT_OBJS))			\
-  adadecode.h adaint.h env.h gsocket.h raise.h standard.ads.h		\
+  adadecode.h adaint.h env.h gsocket.h raise.h \
   tb-gcc.c thread.c $(EXTRA_LIBGNAT_SRCS)
 
 # GNATRTL_NONTASKING_OBJS and GNATRTL_TASKING_OBJS can be found in
@


1.4
log
@Update to gcc 6.3.0; regen bootstraps.
@
text
@d1 4
a4 3
$OpenBSD: patch-gcc_ada_gcc-interface_Makefile_in,v 1.3 2016/09/23 10:11:14 pascal Exp $
--- gcc/ada/gcc-interface/Makefile.in.orig	Tue Oct 11 22:03:58 2016
+++ gcc/ada/gcc-interface/Makefile.in	Fri Dec 23 18:24:59 2016
d16 1
a16 1
@@@@ -1505,6 +1509,252 @@@@ ifeq ($(strip $(filter-out %86 freebsd%,$(target_cpu) 
d269 1
a269 1
@@@@ -2447,7 +2697,7 @@@@ LIBGNAT_OBJS = adadecode.o adaint.o argv.o aux-io.o 		
@


1.3
log
@Do not install a dangling symlink to (non-existent) standard.ads.h.
@
text
@d1 3
a3 3
$OpenBSD: patch-gcc_ada_gcc-interface_Makefile_in,v 1.2 2016/09/15 10:37:03 pascal Exp $
--- gcc/ada/gcc-interface/Makefile.in.orig	Mon May  2 15:16:33 2016
+++ gcc/ada/gcc-interface/Makefile.in	Thu Sep 22 17:00:13 2016
d268 1
a268 1
@@@@ -2462,7 +2712,7 @@@@ LIBGNAT_OBJS = adadecode.o adaint.o argv.o aux-io.o 		
@


1.2
log
@hppa
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_ada_gcc-interface_Makefile_in,v 1.1.1.1 2016/09/04 16:20:15 pascal Exp $
d3 1
a3 1
+++ gcc/ada/gcc-interface/Makefile.in	Wed Sep 14 09:18:22 2016
d15 3
a17 2
@@@@ -1499,6 +1503,252 @@@@ ifeq ($(strip $(filter-out %86 freebsd%,$(target_cpu) 
   EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o
a18 7
   EH_MECHANISM=-gcc
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
d259 18
a276 3
   THREADSLIB= -lpthread
   GMEM_LIB = gmemlib
   LIBRARY_VERSION := $(LIB_VERSION)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_ada_gcc-interface_Makefile_in,v 1.4 2015/12/05 22:00:29 tobiasu Exp $
d3 1
a3 1
+++ gcc/ada/gcc-interface/Makefile.in	Tue Aug 23 15:48:15 2016
d15 1
a15 1
@@@@ -1499,6 +1503,249 @@@@ ifeq ($(strip $(filter-out %86 freebsd%,$(target_cpu) 
d242 3
@


1.1.1.1
log
@Import GCC 6.2.0.

ok espie@@
@
text
@@
