head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.10
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.8
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.6
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	pascal_20140626:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.07.19.21.22.49;	author pascal;	state Exp;
branches;
next	1.2;
commitid	nzWj593KjXmgljOW;

1.2
date	2014.08.18.07.42.11;	author pascal;	state Exp;
branches;
next	1.1;
commitid	XotHT24xfq7v9ugc;

1.1
date	2014.06.26.16.30.16;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	P7PY1UTti0Albpwh;

1.1.1.1
date	2014.06.26.16.30.16;	author pascal;	state Exp;
branches;
next	;
commitid	P7PY1UTti0Albpwh;


desc
@@


1.3
log
@Bugfix update to 4.9.3.
@
text
@$OpenBSD: patch-gcc_config_alpha_alpha_c,v 1.2 2014/08/18 07:42:11 pascal Exp $
--- gcc/config/alpha/alpha.c.orig	Sun May 17 09:24:27 2015
+++ gcc/config/alpha/alpha.c	Sat Jun 27 11:26:32 2015
@@@@ -470,11 +470,17 @@@@ alpha_option_override (void)
   if (!global_options_set.x_g_switch_value)
     g_switch_value = 8;
 
+#ifdef OPENBSD_NATIVE
+  /* Make -fpic behave as -fPIC unless -msmall-data is specified. */
+  if (flag_pic == 2 && TARGET_SMALL_DATA)
+    warning (0, "-fPIC used with -msmall-data");
+#else
   /* Infer TARGET_SMALL_DATA from -fpic/-fPIC.  */
   if (flag_pic == 1)
     target_flags |= MASK_SMALL_DATA;
   else if (flag_pic == 2)
     target_flags &= ~MASK_SMALL_DATA;
+#endif
 
   /* Align labels and loops for optimal branching.  */
   /* ??? Kludge these by not doing anything if we don't optimize.  */
@@@@ -7646,6 +7652,9 @@@@ alpha_expand_prologue (void)
   sa_size = alpha_sa_size ();
   frame_size = compute_frame_size (get_frame_size (), sa_size);
 
+  if (warn_stack_larger_than && frame_size > stack_larger_than_size)
+    warning (OPT_Wstack_larger_than_, "stack usage is %ld bytes", frame_size);
+
   if (flag_stack_usage_info)
     current_function_static_stack_size = frame_size;
 
@@@@ -7684,6 +7693,8 @@@@ alpha_expand_prologue (void)
   if (flag_stack_check)
     probed_size += STACK_CHECK_PROTECT;
 
+if (flag_stack_check || STACK_CHECK_BUILTIN)
+  {
   if (probed_size <= 32768)
     {
       if (probed_size > 4096)
@@@@ -7762,6 +7773,34 @@@@ alpha_expand_prologue (void)
 		    gen_rtx_SET (VOIDmode, stack_pointer_rtx,
 				 plus_constant (Pmode, stack_pointer_rtx,
 						-frame_size)));
+    }
+    }
+  else
+    {
+      if (frame_size <= 32768)
+	{
+	  if (frame_size != 0)
+	    FRP (emit_insn (gen_adddi3 (stack_pointer_rtx, stack_pointer_rtx,
+					GEN_INT (-frame_size))));
+	}
+      else
+	{
+	  rtx count = gen_rtx_REG (DImode, 23);
+	  rtx seq;
+ 
+	  emit_move_insn (count, GEN_INT (-frame_size));
+	  seq = emit_insn (gen_adddi3 (stack_pointer_rtx, stack_pointer_rtx,
+				       count));
+ 
+	  /* This alternative is special, because the DWARF code cannot
+	     possibly intuit through the loop above.  So we invent this
+	     note it looks at instead.  */
+	  RTX_FRAME_RELATED_P (seq) = 1;
+          add_reg_note (seq, REG_FRAME_RELATED_EXPR,
+		    gen_rtx_SET (VOIDmode, stack_pointer_rtx,
+				 plus_constant (Pmode, stack_pointer_rtx,
+						-frame_size)));
+	}
     }
 
   /* Cope with very large offsets to the register save area.  */
@


1.2
log
@Update to GCC 4.9.1 + fix for CVE-2014-5044.  As usual, sparc64 adastrap
generated by tobiasu@@, thanks!
@
text
@d1 3
a3 3
$OpenBSD: patch-gcc_config_alpha_alpha_c,v 1.1.1.1 2014/06/26 16:30:16 pascal Exp $
--- gcc/config/alpha/alpha.c.orig	Fri Jun 27 10:37:34 2014
+++ gcc/config/alpha/alpha.c	Wed Jul 16 18:37:32 2014
d22 1
a22 1
@@@@ -7649,6 +7655,9 @@@@ alpha_expand_prologue (void)
d32 1
a32 1
@@@@ -7687,6 +7696,8 @@@@ alpha_expand_prologue (void)
d41 1
a41 1
@@@@ -7765,6 +7776,34 @@@@ alpha_expand_prologue (void)
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_config_alpha_alpha_c,v 1.2 2013/04/20 20:54:04 pascal Exp $
--- gcc/config/alpha/alpha.c.orig	Fri Nov 22 16:58:51 2013
+++ gcc/config/alpha/alpha.c	Mon Dec  2 12:20:02 2013
@@@@ -469,11 +469,17 @@@@ alpha_option_override (void)
d22 1
a22 1
@@@@ -7608,6 +7614,9 @@@@ alpha_expand_prologue (void)
d32 1
a32 1
@@@@ -7646,6 +7655,8 @@@@ alpha_expand_prologue (void)
d41 1
a41 1
@@@@ -7724,6 +7735,34 @@@@ alpha_expand_prologue (void)
@


1.1.1.1
log
@Import GCC 4.9, sparc64 test and ok tobiasu@@
@
text
@@
