head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	pascal_20140626:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.07.19.21.22.49;	author pascal;	state Exp;
branches;
next	1.1;
commitid	nzWj593KjXmgljOW;

1.1
date	2014.06.26.16.30.16;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	P7PY1UTti0Albpwh;

1.1.1.1
date	2014.06.26.16.30.16;	author pascal;	state Exp;
branches;
next	;
commitid	P7PY1UTti0Albpwh;


desc
@@


1.2
log
@Bugfix update to 4.9.3.
@
text
@$OpenBSD: patch-gcc_builtins_c,v 1.1.1.1 2014/06/26 16:30:16 pascal Exp $
--- gcc/builtins.c.orig	Fri Feb 27 11:32:14 2015
+++ gcc/builtins.c	Sat Jun 27 11:26:32 2015
@@@@ -125,9 +125,11 @@@@ static rtx expand_builtin_memcpy (tree, rtx);
 static rtx expand_builtin_mempcpy (tree, rtx, enum machine_mode);
 static rtx expand_builtin_mempcpy_args (tree, tree, tree, rtx,
 					enum machine_mode, int);
+#ifndef NO_UNSAFE_BUILTINS
 static rtx expand_builtin_strcpy (tree, rtx);
 static rtx expand_builtin_strcpy_args (tree, tree, rtx);
 static rtx expand_builtin_stpcpy (tree, rtx, enum machine_mode);
+#endif
 static rtx expand_builtin_strncpy (tree, rtx);
 static rtx builtin_memset_gen_str (void *, HOST_WIDE_INT, enum machine_mode);
 static rtx expand_builtin_memset (tree, rtx, enum machine_mode);
@@@@ -3375,6 +3377,7 @@@@ expand_builtin_mempcpy_args (tree dest, tree src, tree
 # define CODE_FOR_movstr CODE_FOR_nothing
 #endif
 
+#ifndef NO_UNSAFE_BUILTINS
 /* Expand into a movstr instruction, if one is available.  Return NULL_RTX if
    we failed, the caller should emit a normal call, otherwise try to
    get the result in TARGET, if convenient.  If ENDP is 0 return the
@@@@ -3526,6 +3529,7 @@@@ expand_builtin_stpcpy (tree exp, rtx target, enum mach
       return expand_movstr (dst, src, target, /*endp=*/2);
     }
 }
+#endif
 
 /* Callback routine for store_by_pieces.  Read GET_MODE_BITSIZE (MODE)
    bytes from constant string DATA + OFFSET and return it as target
@@@@ -6145,9 +6149,11 @@@@ expand_builtin (tree exp, rtx target, rtx subtarget, e
       break;
 
     case BUILT_IN_STRCPY:
+#ifndef NO_UNSAFE_BUILTINS
       target = expand_builtin_strcpy (exp, target);
       if (target)
 	return target;
+#endif
       break;
 
     case BUILT_IN_STRNCPY:
@@@@ -6157,9 +6163,11 @@@@ expand_builtin (tree exp, rtx target, rtx subtarget, e
       break;
 
     case BUILT_IN_STPCPY:
+#ifndef NO_UNSAFE_BUILTINS
       target = expand_builtin_stpcpy (exp, target, mode);
       if (target)
 	return target;
+#endif
       break;
 
     case BUILT_IN_MEMCPY:
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD: patch-gcc_builtins_c,v 1.1.1.1 2013/04/08 08:20:24 pascal Exp $
--- gcc/builtins.c.orig	Tue Mar 18 12:31:04 2014
+++ gcc/builtins.c	Wed Apr 23 12:49:00 2014
d16 1
a16 1
@@@@ -3370,6 +3372,7 @@@@ expand_builtin_mempcpy_args (tree dest, tree src, tree
d24 1
a24 1
@@@@ -3521,6 +3524,7 @@@@ expand_builtin_stpcpy (tree exp, rtx target, enum mach
d32 1
a32 1
@@@@ -6140,9 +6144,11 @@@@ expand_builtin (tree exp, rtx target, rtx subtarget, e
d44 1
a44 1
@@@@ -6152,9 +6158,11 @@@@ expand_builtin (tree exp, rtx target, rtx subtarget, e
@


1.1.1.1
log
@Import GCC 4.9, sparc64 test and ok tobiasu@@
@
text
@@
