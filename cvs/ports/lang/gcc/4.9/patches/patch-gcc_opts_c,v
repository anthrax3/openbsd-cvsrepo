head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	pascal_20140626:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.02.03.20.32.12;	author pascal;	state Exp;
branches;
next	1.2;
commitid	LzgH25QAJKFopjkX;

1.2
date	2014.11.20.19.54.40;	author pascal;	state Exp;
branches;
next	1.1;
commitid	PXOKb6wtLMa1GZnE;

1.1
date	2014.06.26.16.30.18;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	P7PY1UTti0Albpwh;

1.1.1.1
date	2014.06.26.16.30.18;	author pascal;	state Exp;
branches;
next	;
commitid	P7PY1UTti0Albpwh;


desc
@@


1.3
log
@Finally fix newer GCC on hppa by removing --disable-checking from
CONFIGURE_ARGS.  While it may have had some value in the past, nowadays it's
just another (essentially untested) deviation from the mainstream.

Also:
* Restore -fstrict-aliasing and -fstrict-overflow behaviour
* Support -rdynamic on hppa
* libatomic is actually supported on every POSIX system, so remove useless
  PFRAGs.

Tested on amd64, hppa and sparc64; ok tobiasu@@
@
text
@$OpenBSD: patch-gcc_opts_c,v 1.2 2014/11/20 19:54:40 pascal Exp $
--- gcc/opts.c.orig	Thu Oct 16 15:49:11 2014
+++ gcc/opts.c	Sun Feb  1 19:27:27 2015
@@@@ -50,6 +50,9 @@@@ const char *const debug_type_names[] =
   ((strncmp (prefix, string, sizeof prefix - 1) == 0) \
    ? ((string += sizeof prefix - 1), 1) : 0)
 
+int warn_stack_larger_than;
+HOST_WIDE_INT stack_larger_than_size;
+
 void
 set_struct_debug_option (struct gcc_options *opts, location_t loc,
 			 const char *spec)
@@@@ -476,8 +479,6 @@@@ static const struct default_options default_options_ta
     { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_fschedule_insns, NULL, 1 },
     { OPT_LEVELS_2_PLUS, OPT_fschedule_insns2, NULL, 1 },
 #endif
-    { OPT_LEVELS_2_PLUS, OPT_fstrict_aliasing, NULL, 1 },
-    { OPT_LEVELS_2_PLUS, OPT_fstrict_overflow, NULL, 1 },
     { OPT_LEVELS_2_PLUS, OPT_freorder_blocks, NULL, 1 },
     { OPT_LEVELS_2_PLUS, OPT_freorder_functions, NULL, 1 },
     { OPT_LEVELS_2_PLUS, OPT_ftree_vrp, NULL, 1 },
@@@@ -499,6 +500,7 @@@@ static const struct default_options default_options_ta
     { OPT_LEVELS_2_PLUS, OPT_fisolate_erroneous_paths_dereference, NULL, 1 },
 
     /* -O3 optimizations.  */
+    { OPT_LEVELS_3_PLUS, OPT_fstrict_aliasing, NULL, 1 },
     { OPT_LEVELS_3_PLUS, OPT_ftree_loop_distribute_patterns, NULL, 1 },
     { OPT_LEVELS_3_PLUS, OPT_fpredictive_commoning, NULL, 1 },
     /* Inlining of functions reducing size is a good idea with -Os
@@@@ -716,6 +718,8 @@@@ finish_options (struct gcc_options *opts, struct gcc_o
 
   if (!opts->x_flag_opts_finished)
     {
+      if (opts->x_flag_pic || opts->x_profile_flag)
+        opts->x_flag_pie = 0;
       if (opts->x_flag_pie)
 	opts->x_flag_pic = opts->x_flag_pie;
       if (opts->x_flag_pic && !opts->x_flag_pie)
@@@@ -1584,6 +1588,11 @@@@ common_handle_option (struct gcc_options *opts,
     case OPT_Wframe_larger_than_:
       opts->x_frame_larger_than_size = value;
       opts->x_warn_frame_larger_than = value != -1;
+      break;
+
+    case OPT_Wstack_larger_than_:
+      stack_larger_than_size = value;
+      warn_stack_larger_than = stack_larger_than_size != -1;
       break;
 
     case OPT_Wstack_usage_:
@


1.2
log
@Update to 4.9.2.  Finally gets rid of gfortran patches.

Tested on everything except sparc, adastraps mirrored by and ok tobiasu@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_opts_c,v 1.1.1.1 2014/06/26 16:30:18 pascal Exp $
d3 1
a3 1
+++ gcc/opts.c	Fri Oct 31 11:59:54 2014
d14 10
a23 1
@@@@ -499,6 +502,7 @@@@ static const struct default_options default_options_ta
d31 1
a31 1
@@@@ -716,6 +720,8 @@@@ finish_options (struct gcc_options *opts, struct gcc_o
d40 1
a40 1
@@@@ -1584,6 +1590,11 @@@@ common_handle_option (struct gcc_options *opts,
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD: patch-gcc_opts_c,v 1.1.1.1 2013/04/08 08:20:26 pascal Exp $
--- gcc/opts.c.orig	Fri Mar 14 18:58:52 2014
+++ gcc/opts.c	Wed Apr 23 12:49:03 2014
d31 1
a31 1
@@@@ -1548,6 +1554,11 @@@@ common_handle_option (struct gcc_options *opts,
@


1.1.1.1
log
@Import GCC 4.9, sparc64 test and ok tobiasu@@
@
text
@@
