head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.10
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	pascal_20140626:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.07.19.21.22.49;	author pascal;	state Exp;
branches;
next	1.1;
commitid	nzWj593KjXmgljOW;

1.1
date	2014.06.26.16.30.16;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	P7PY1UTti0Albpwh;

1.1.1.1
date	2014.06.26.16.30.16;	author pascal;	state Exp;
branches;
next	;
commitid	P7PY1UTti0Albpwh;


desc
@@


1.2
log
@Bugfix update to 4.9.3.
@
text
@$OpenBSD: patch-gcc_common_opt,v 1.1.1.1 2014/06/26 16:30:16 pascal Exp $
--- gcc/common.opt.orig	Thu Feb 26 03:43:52 2015
+++ gcc/common.opt	Sat Jun 27 11:26:32 2015
@@@@ -580,6 +580,10 @@@@ Wlarger-than=
 Common RejectNegative Joined UInteger Warning
 -Wlarger-than=<number>	Warn if an object is larger than <number> bytes
 
+Wstack-larger-than-
+Common RejectNegative Joined UInteger
+-Wstack-larger-than-<number> Warn if a function is using more than <number> bytes of stack space for its local variables.
+
 Wunsafe-loop-optimizations
 Common Var(warn_unsafe_loop_optimizations) Warning
 Warn if the loop cannot be optimized due to nontrivial assumptions.
@@@@ -644,7 +648,7 @@@@ Common Var(warn_suggest_attribute_noreturn) Warning
 Warn about functions which might be candidates for __attribute__((noreturn))
 
 Wsystem-headers
-Common Var(warn_system_headers) Warning
+Common Var(warn_system_headers) Init(1) Warning
 Do not suppress warnings from system headers
 
 Wtrampolines
@@@@ -699,6 +703,10 @@@@ Wunused-variable
 Common Var(warn_unused_variable) Warning EnabledBy(Wunused)
 Warn when a variable is unused
 
+Wvariable-decl
+Common Var(warn_variable_decl)
+Warn about variable-sized declarations
+
 Wcoverage-mismatch
 Common Var(warn_coverage_mismatch) Init(1) Warning
 Warn in case profiles in -fprofile-use do not match
@@@@ -811,7 +819,7 @@@@ fabi-version=
 Common Joined RejectNegative UInteger Var(flag_abi_version) Init(2)
 
 faggressive-loop-optimizations
-Common Report Var(flag_aggressive_loop_optimizations) Optimization Init(1) 
+Common Report Var(flag_aggressive_loop_optimizations) Optimization
 Aggressively optimize loops using language constraints
 
 falign-functions
@@@@ -1008,7 +1016,7 @@@@ Common Report Var(flag_delete_dead_exceptions) Init(0)
 Delete dead instructions that may throw exceptions
 
 fdelete-null-pointer-checks
-Common Report Var(flag_delete_null_pointer_checks) Init(1) Optimization
+Common Report Var(flag_delete_null_pointer_checks)
 Delete useless null pointer checks
 
 fdevirtualize-speculatively
@@@@ -1292,7 +1300,7 @@@@ Enable guessing of branch probabilities
 ; On SVR4 targets, it also controls whether or not to emit a
 ; string identifying the compiler.
 fident
-Common Report Var(flag_no_ident,0)
+Common Report Var(flag_no_ident,0) Init(1)
 Process #ident directives
 
 fif-conversion
@@@@ -1648,7 +1656,7 @@@@ Common Report Var(flag_pic,2) Negative(fPIE)
 Generate position-independent code if possible (large mode)
 
 fPIE
-Common Report Var(flag_pie,2) Negative(fpic)
+Common Report Var(flag_pie,2) Negative(fpic) Init(PIE_DEFAULT)
 Generate position-independent code for executables if possible (large mode)
 
 fpic
@@@@ -1964,7 +1972,7 @@@@ Common RejectNegative Joined Var(common_deferred_optio
 -fstack-limit-symbol=<name>	Trap if the stack goes past symbol <name>
 
 fstack-protector
-Common Report Var(flag_stack_protect, 1)
+Common Report Var(flag_stack_protect, 3) Init(-1)
 Use propolice as a stack protection method
 
 fstack-protector-all
@@@@ -2442,7 +2450,7 @@@@ Common JoinedOrMissing Negative(gdwarf-)
 Generate debug information in default version of DWARF format
 
 gdwarf-
-Common Joined UInteger Var(dwarf_version) Init(4) Negative(gstabs)
+Common Joined UInteger Var(dwarf_version) Init(2) Negative(gstabs)
 Generate debug information in DWARF v2 (or later) format
 
 ggdb
@@@@ -2530,6 +2538,9 @@@@ no-canonical-prefixes
 Driver
 
 nodefaultlibs
+Driver
+
+nopie
 Driver
 
 nostartfiles
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD: patch-gcc_common_opt,v 1.1.1.1 2013/04/08 08:20:25 pascal Exp $
--- gcc/common.opt.orig	Mon Apr  7 15:27:39 2014
+++ gcc/common.opt	Wed Apr 23 12:49:00 2014
d71 1
a71 1
@@@@ -1959,7 +1967,7 @@@@ Common RejectNegative Joined Var(common_deferred_optio
d80 1
a80 1
@@@@ -2437,7 +2445,7 @@@@ Common JoinedOrMissing Negative(gdwarf-)
d89 1
a89 1
@@@@ -2525,6 +2533,9 @@@@ no-canonical-prefixes
@


1.1.1.1
log
@Import GCC 4.9, sparc64 test and ok tobiasu@@
@
text
@@
