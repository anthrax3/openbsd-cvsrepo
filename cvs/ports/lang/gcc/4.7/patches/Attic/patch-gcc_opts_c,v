head	1.4;
access;
symbols
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	pascal_20120423:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.06.18.21.06.54;	author espie;	state dead;
branches;
next	1.3;

1.3
date	2012.09.01.00.00.32;	author pascal;	state Exp;
branches;
next	1.2;

1.2
date	2012.07.01.18.56.45;	author pascal;	state Exp;
branches;
next	1.1;

1.1
date	2012.04.23.15.56.41;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.04.23.15.56.41;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.4
log
@bye bye
@
text
@$OpenBSD: patch-gcc_opts_c,v 1.3 2012/09/01 00:00:32 pascal Exp $
--- gcc/opts.c.orig	Tue Jan 10 17:27:55 2012
+++ gcc/opts.c	Thu Aug 30 10:09:25 2012
@@@@ -48,6 +48,9 @@@@ const char *const debug_type_names[] =
   ((strncmp (prefix, string, sizeof prefix - 1) == 0) \
    ? ((string += sizeof prefix - 1), 1) : 0)
 
+int warn_stack_larger_than;
+HOST_WIDE_INT stack_larger_than_size;
+
 void
 set_struct_debug_option (struct gcc_options *opts, location_t loc,
 			 const char *spec)
@@@@ -457,7 +460,9 @@@@ static const struct default_options default_options_ta
     { OPT_LEVELS_2_PLUS, OPT_fpartial_inlining, NULL, 1 },
     { OPT_LEVELS_2_PLUS, OPT_fthread_jumps, NULL, 1 },
     { OPT_LEVELS_2_PLUS, OPT_fcrossjumping, NULL, 1 },
+#ifndef __hppa__
     { OPT_LEVELS_2_PLUS, OPT_foptimize_sibling_calls, NULL, 1 },
+#endif
     { OPT_LEVELS_2_PLUS, OPT_fcse_follow_jumps, NULL, 1 },
     { OPT_LEVELS_2_PLUS, OPT_fgcse, NULL, 1 },
     { OPT_LEVELS_2_PLUS, OPT_fexpensive_optimizations, NULL, 1 },
@@@@ -470,9 +475,9 @@@@ static const struct default_options default_options_ta
     { OPT_LEVELS_2_PLUS, OPT_fschedule_insns2, NULL, 1 },
 #endif
     { OPT_LEVELS_2_PLUS, OPT_fregmove, NULL, 1 },
-    { OPT_LEVELS_2_PLUS, OPT_fstrict_aliasing, NULL, 1 },
-    { OPT_LEVELS_2_PLUS, OPT_fstrict_overflow, NULL, 1 },
+#ifndef __hppa__
     { OPT_LEVELS_2_PLUS, OPT_freorder_blocks, NULL, 1 },
+#endif
     { OPT_LEVELS_2_PLUS, OPT_freorder_functions, NULL, 1 },
     { OPT_LEVELS_2_PLUS, OPT_ftree_vrp, NULL, 1 },
     { OPT_LEVELS_2_PLUS, OPT_ftree_builtin_call_dce, NULL, 1 },
@@@@ -489,6 +494,7 @@@@ static const struct default_options default_options_ta
     { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_foptimize_strlen, NULL, 1 },
 
     /* -O3 optimizations.  */
+    { OPT_LEVELS_3_PLUS, OPT_fstrict_aliasing, NULL, 1 },
     { OPT_LEVELS_3_PLUS, OPT_ftree_loop_distribute_patterns, NULL, 1 },
     { OPT_LEVELS_3_PLUS, OPT_fpredictive_commoning, NULL, 1 },
     /* Inlining of functions reducing size is a good idea with -Os
@@@@ -690,6 +696,8 @@@@ finish_options (struct gcc_options *opts, struct gcc_o
 
   if (!opts->x_flag_opts_finished)
     {
+      if (opts->x_flag_pic || opts->x_profile_flag)
+        opts->x_flag_pie = 0;
       if (opts->x_flag_pie)
 	opts->x_flag_pic = opts->x_flag_pie;
       if (opts->x_flag_pic && !opts->x_flag_pie)
@@@@ -1444,6 +1452,11 @@@@ common_handle_option (struct gcc_options *opts,
     case OPT_Wframe_larger_than_:
       opts->x_frame_larger_than_size = value;
       opts->x_warn_frame_larger_than = value != -1;
+      break;
+
+    case OPT_Wstack_larger_than_:
+      stack_larger_than_size = value;
+      warn_stack_larger_than = stack_larger_than_size != -1;
       break;
 
     case OPT_Wstack_usage_:
@


1.3
log
@Patch GCC and derived ports to use PIE by default on the same architectures it
is enabled on in base; except for gcc 3.3, which does not have PIE support and
therefore needs to pass -nopie to the linker.

Also, sync powerpc pthread specs with base.  From Brad.

ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_opts_c,v 1.2 2012/07/01 18:56:45 pascal Exp $
@


1.2
log
@Update to gcc 4.7.1.

- add some fixes for hppa, though it still isn't ready for prime time yet.
  Chances are it will only work with -O1, pending testing.  Many optimisations
  lead to broken code and segfaults on hppa.  Joint work with jsg@@.
- fix libstdc++ upgrade path
- bring in recent fixes for execinfo/magic.h from 4.6

ok espie@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_opts_c,v 1.1.1.1 2012/04/23 15:56:41 pascal Exp $
d3 1
a3 1
+++ gcc/opts.c	Wed Jun 20 21:01:58 2012
d44 10
a53 1
@@@@ -1444,6 +1450,11 @@@@ common_handle_option (struct gcc_options *opts,
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_opts_c,v 1.1 2012/03/31 20:02:03 pascal Exp $
d3 1
a3 1
+++ gcc/opts.c	Sat Apr 14 13:09:58 2012
d14 1
a14 1
@@@@ -457,7 +460,6 @@@@ static const struct default_options default_options_ta
d18 3
a20 1
-    { OPT_LEVELS_2_PLUS, OPT_foptimize_sibling_calls, NULL, 1 },
d24 1
a24 1
@@@@ -470,9 +472,6 @@@@ static const struct default_options default_options_ta
d30 3
a32 1
-    { OPT_LEVELS_2_PLUS, OPT_freorder_blocks, NULL, 1 },
d36 1
a36 1
@@@@ -489,6 +488,9 @@@@ static const struct default_options default_options_ta
a39 2
+    { OPT_LEVELS_3_PLUS, OPT_foptimize_sibling_calls, NULL, 1 },
+    { OPT_LEVELS_3_PLUS, OPT_freorder_blocks, NULL, 1 },
d44 1
a44 1
@@@@ -1444,6 +1446,11 @@@@ common_handle_option (struct gcc_options *opts,
@


1.1.1.1
log
@Import gcc 4.7.

ok espie@@
@
text
@@
