head	1.2;
access;
symbols
	OPENBSD_5_7:1.1.0.24
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.22
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.20
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.18
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.16
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.14
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.12
	OPENBSD_5_0:1.1.0.10
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.8
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.6
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.4
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.03.19.16.56.02;	author pascal;	state dead;
branches;
next	1.1;
commitid	4NK6qdfGpCJ0tDvy;

1.1
date	2009.04.16.18.36.48;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove 4.2.  long unused, doesn't build, tobiasu@@ doesn't need it any more.

prompted by naddy@@, ok tobiasu@@
@
text
@$OpenBSD: patch-gcc_unwind-dw2_c,v 1.1 2009/04/16 18:36:48 espie Exp $
--- gcc/unwind-dw2.c.orig	Thu Jan 25 02:13:44 2007
+++ gcc/unwind-dw2.c	Wed Mar 18 11:03:10 2009
@@@@ -150,6 +150,25 @@@@ _Unwind_IsExtendedContext (struct _Unwind_Context *con
 {
   return context->flags & EXTENDED_CONTEXT_BIT;
 }
+
+#ifdef __sparc64__
+
+/* Figure out StackGhost cookie.  */
+_Unwind_Word uw_get_wcookie(void);
+
+asm(".text\n"
+    "uw_get_wcookie:\n"
+    "	add  %o7, %g0, %g4\n"
+    "	save %sp, -176, %sp\n"
+    "	save %sp, -176, %sp\n"
+    "	flushw\n"
+    "	restore\n"
+    "	ldx [%sp + 2047 + 120], %g5\n"
+    "	xor %g4, %g5, %i0\n"
+    "	ret\n"
+    "	 restore\n");
+#endif
+
 
 /* Get the value of register INDEX as saved in CONTEXT.  */
 
@@@@ -172,6 +191,13 @@@@ _Unwind_GetGR (struct _Unwind_Context *context, int in
   if (_Unwind_IsExtendedContext (context) && context->by_value[index])
     return (_Unwind_Word) (_Unwind_Internal_Ptr) ptr;
 
+#ifdef __sparc64__
+  /* _Unwind_Word and _Unwind_Ptr are the same size on sparc64 */
+  _Unwind_Word reg = * (_Unwind_Word *) ptr;
+  if (index == 15 || index == 31)
+    reg ^= uw_get_wcookie ();
+  return reg;
+#else
   /* This will segfault if the register hasn't been saved.  */
   if (size == sizeof(_Unwind_Ptr))
     return * (_Unwind_Ptr *) ptr;
@@@@ -180,6 +206,7 @@@@ _Unwind_GetGR (struct _Unwind_Context *context, int in
       gcc_assert (size == sizeof(_Unwind_Word));
       return * (_Unwind_Word *) ptr;
     }
+#endif
 }
 
 static inline void *
@


1.1
log
@move to gcc 4.2.4, with a lot of work from kurt@@ as well.
Doesn't build on alpha yet, but should be on the way...
@
text
@d1 1
a1 1
$OpenBSD$
@

