head	1.3;
access;
symbols
	OPENBSD_5_7:1.2.0.28
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.26
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.24
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.22
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.20
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.18
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.16
	OPENBSD_5_0:1.2.0.14
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.12
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.8
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.1.1.0.8
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	fsf:1.1.1.1
	gcc:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.03.19.16.56.02;	author pascal;	state dead;
branches;
next	1.2;
commitid	4NK6qdfGpCJ0tDvy;

1.2
date	2008.06.12.01.14.06;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.31.09.50.53;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.07.31.09.50.53;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove 4.2.  long unused, doesn't build, tobiasu@@ doesn't need it any more.

prompted by naddy@@, ok tobiasu@@
@
text
@$OpenBSD: patch-gcc_config_host-openbsd_c,v 1.2 2008/06/12 01:14:06 kurt Exp $
--- gcc/config/host-openbsd.c.orig	Wed Apr 23 07:42:45 2008
+++ gcc/config/host-openbsd.c	Wed Apr 23 17:57:19 2008
@@@@ -0,0 +1,107 @@@@
+/* OpenBSD host-specific hook definitions.
+   Copyright (C) 2005 Free Software Foundation, Inc.
+
+   This file is part of GCC.
+
+   GCC is free software; you can redistribute it and/or modify it
+   under the terms of the GNU General Public License as published
+   by the Free Software Foundation; either version 2, or (at your
+   option) any later version.
+
+   GCC is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
+   License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GCC; see the file COPYING.  If not, write to the
+   Free Software Foundation, 59 Temple Place - Suite 330, Boston,
+   MA 02111-1307, USA.  */
+
+#include <limits.h>
+#include <unistd.h>
+
+#include "config.h"
+#include "system.h"
+#include "coretypes.h"
+#include "hosthooks.h"
+#include "hosthooks-def.h"
+
+#undef HOST_HOOKS_GT_PCH_GET_ADDRESS
+#define HOST_HOOKS_GT_PCH_GET_ADDRESS openbsd_gt_pch_get_address
+
+#undef HOST_HOOKS_GT_PCH_USE_ADDRESS
+#define HOST_HOOKS_GT_PCH_USE_ADDRESS openbsd_gt_pch_use_address
+
+/* Return the address of the PCH address space, if the PCH will fit in it.  */
+
+void *
+openbsd_gt_pch_get_address (size_t size, int fd ATTRIBUTE_UNUSED)
+{
+  void *base, *addr;
+  size_t pgsz;
+
+  if (size > INT_MAX)
+          return NULL;
+
+  pgsz = sysconf(_SC_PAGESIZE);
+  if (pgsz == (size_t)-1)
+    return NULL;
+
+  base = sbrk(0);
+
+  /* round up to nearest page */
+  base = (void *)(((long)base + (pgsz - 1)) & ~(pgsz - 1));
+  if (brk(base) != 0)
+    return NULL;
+
+  /* attempt to allocate size */
+  addr = sbrk(size);
+  if (addr == (void *)-1)
+    return NULL;
+
+  /* deallocate the memory */
+  if (brk(base) != 0)
+    return NULL;
+
+  /* confirm addr is as expected */
+  if (addr != base)
+    return NULL;
+
+  return base;
+}
+
+/* Return 0 if we can reserve the PCH address space. */
+
+int
+openbsd_gt_pch_use_address (void *base, size_t size, int fd ATTRIBUTE_UNUSED, size_t off ATTRIBUTE_UNUSED)
+{
+  void *addr;
+
+  if (size == 0)
+    return -1;
+
+  /* sanity check base address */
+  addr = sbrk(0);
+  if (addr == (void *)-1 || base < addr)
+    return -1;
+
+  /* set base for sbrk */
+  if (brk(base) != 0)
+    return -1;
+
+  /* attempt to get the memory */
+  addr = sbrk(size);
+  if (addr == (void *)-1)
+    return -1;
+
+  /* sanity check the result */
+  if (addr != base) {
+    brk(base);
+    return -1;
+  }
+
+  return 0;
+}
+
+const struct host_hooks host_hooks = HOST_HOOKS_INITIALIZER;
@


1.2
log
@- enable _cxa_atexit support
- implement pre-compiled header support using brk/sbrk. idea from drahn@@
okay espie@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_config_host-openbsd_c,v 1.1.1.1 2007/03/17 22:35:25 espie Exp $
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_config_host-openbsd_c,v 1.2 2005/03/07 16:30:06 espie Exp $
--- gcc/config/host-openbsd.c.orig	Mon Jan 31 15:01:58 2005
+++ gcc/config/host-openbsd.c	Mon Jan 31 16:12:04 2005
@@@@ -0,0 +1,41 @@@@
d25 3
a30 1
+#include <sys/mman.h>
d34 2
d40 4
a43 4
+static int
+openbsd_gt_pch_use_address (void *base ATTRIBUTE_UNUSED, 
+  size_t size ATTRIBUTE_UNUSED, int fd ATTRIBUTE_UNUSED, 
+  size_t offset ATTRIBUTE_UNUSED)
d45 64
a108 1
+  return -1;
a110 1
+
@


1.1.1.1
log
@4.2 branch of gcc
@
text
@@
