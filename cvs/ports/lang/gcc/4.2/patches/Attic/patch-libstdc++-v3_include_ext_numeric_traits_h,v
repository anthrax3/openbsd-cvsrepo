head	1.3;
access;
symbols
	OPENBSD_5_7:1.2.0.24
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.22
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.20
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.18
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.16
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.14
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.12
	OPENBSD_5_0:1.2.0.10
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2015.03.19.16.56.02;	author pascal;	state dead;
branches;
next	1.2;
commitid	4NK6qdfGpCJ0tDvy;

1.2
date	2009.04.16.18.36.48;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.18.18.47.05;	author robert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove 4.2.  long unused, doesn't build, tobiasu@@ doesn't need it any more.

prompted by naddy@@, ok tobiasu@@
@
text
@$OpenBSD: patch-libstdc++-v3_include_ext_numeric_traits_h,v 1.2 2009/04/16 18:36:48 espie Exp $
--- libstdc++-v3/include/ext/numeric_traits.h.orig	Sat Apr  7 10:38:39 2007
+++ libstdc++-v3/include/ext/numeric_traits.h	Tue Apr  7 19:39:00 2009
@@@@ -96,3 +96,101 @@@@ _GLIBCXX_END_NAMESPACE
 #undef __glibcxx_digits
 
 #endif 
+// -*- C++ -*-
+
+// Copyright (C) 2007 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the terms
+// of the GNU General Public License as published by the Free Software
+// Foundation; either version 2, or (at your option) any later
+// version.
+
+// This library is distributed in the hope that it will be useful, but
+// WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+// General Public License for more details.
+
+// You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
+// USA.
+
+// As a special exception, you may use this file as part of a free
+// software library without restriction.  Specifically, if other files
+// instantiate templates or use macros or inline functions from this
+// file, or you compile this file and link it with other files to
+// produce an executable, this file does not by itself cause the
+// resulting executable to be covered by the GNU General Public
+// License.  This exception does not however invalidate any other
+// reasons why the executable file might be covered by the GNU General
+// Public License.
+
+/** @@file ext/numeric_traits.h
+ *  This file is a GNU extension to the Standard C++ Library.
+ */
+
+#ifndef _EXT_NUMERIC_TRAITS
+#define _EXT_NUMERIC_TRAITS 1
+
+#pragma GCC system_header
+
+#include <limits>
+#include <bits/cpp_type_traits.h>
+#include <ext/type_traits.h>
+
+_GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)
+
+  // Compile time constants for builtin types.
+  // Sadly std::numeric_limits member functions cannot be used for this.
+#define __glibcxx_signed(_Tp) ((_Tp)(-1) < 0)
+#define __glibcxx_digits(_Tp) \
+  (sizeof(_Tp) * __CHAR_BIT__ - __glibcxx_signed(_Tp))
+
+#define __glibcxx_min(_Tp) \
+  (__glibcxx_signed(_Tp) ? (_Tp)1 << __glibcxx_digits(_Tp) : (_Tp)0)
+
+#define __glibcxx_max(_Tp) \
+  (__glibcxx_signed(_Tp) ? \
+   (((((_Tp)1 << (__glibcxx_digits(_Tp) - 1)) - 1) << 1) + 1) : ~(_Tp)0)
+
+  template<typename _Value>
+    struct __numeric_traits_integer
+    {
+      // Only integers for initialization of member constant.
+      static const _Value __min = __glibcxx_min(_Value);
+      static const _Value __max = __glibcxx_max(_Value);
+    };
+
+  template<typename _Value>
+    const _Value __numeric_traits_integer<_Value>::__min;
+
+  template<typename _Value>
+    const _Value __numeric_traits_integer<_Value>::__max;
+
+  template<typename _Value>
+    struct __numeric_traits_floating
+    {
+      // Only floating point types. See N1822. 
+      static const int __max_digits10 =
+	2 + std::numeric_limits<_Value>::digits * 3010/10000;
+    };
+
+  template<typename _Value>
+    const int __numeric_traits_floating<_Value>::__max_digits10;
+
+  template<typename _Value>
+    struct __numeric_traits
+    : public __conditional_type<std::__is_integer<_Value>::__value,
+				__numeric_traits_integer<_Value>,
+				__numeric_traits_floating<_Value> >::__type
+    { };
+
+_GLIBCXX_END_NAMESPACE
+
+#undef __glibcxx_signed
+#undef __glibcxx_min
+#undef __glibcxx_max
+#undef __glibcxx_digits
+
+#endif 
@


1.2
log
@move to gcc 4.2.4, with a lot of work from kurt@@ as well.
Doesn't build on alpha yet, but should be on the way...
@
text
@d1 1
a1 1
$OpenBSD: patch-libstdc++-v3_include_ext_numeric_traits_h,v 1.1 2009/01/18 18:47:05 robert Exp $
@


1.1
log
@Enable sjlj exceptions by default because the other implementation does not
work on OpenBSD, and exceptions are hevaily used by OpenOffice.Org.

Backport PR libstdc++/31481 from GCC repository because this fix is needed
by openoffice:
	PR libstdc++/31481
	* include/ext/type_traits.h (__numeric_traits): Move...
	* include/ext/numeric_traits.h: ... here; fix type of
	__max_digits10.
	* include/ext/pb_ds/detail/type_utils.hpp: Include
	<ext/numeric_traits.h> too.
	* include/tr1/random: Likewise.

Tested with both openoffice and webkit. bump needed PKGNAMEs;
@
text
@d1 7
a7 4
$OpenBSD$
--- libstdc++-v3/include/ext/numeric_traits.h.orig	Thu Jan 15 15:01:21 2009
+++ libstdc++-v3/include/ext/numeric_traits.h	Thu Jan 15 15:01:42 2009
@@@@ -0,0 +1,98 @@@@
@

