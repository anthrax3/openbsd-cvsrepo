head	1.2;
access;
symbols
	OPENBSD_5_7:1.1.0.24
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.22
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.20
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.18
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.16
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.14
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.12
	OPENBSD_5_0:1.1.0.10
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.8
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.6
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.4
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.03.19.16.56.02;	author pascal;	state dead;
branches;
next	1.1;
commitid	4NK6qdfGpCJ0tDvy;

1.1
date	2009.06.07.01.22.05;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove 4.2.  long unused, doesn't build, tobiasu@@ doesn't need it any more.

prompted by naddy@@, ok tobiasu@@
@
text
@$OpenBSD: patch-libstdc++-v3_acinclude_m4,v 1.1 2009/06/07 01:22:05 robert Exp $
--- libstdc++-v3/acinclude.m4.orig	Fri Jun 29 01:02:05 2007
+++ libstdc++-v3/acinclude.m4	Fri Jun  5 00:48:50 2009
@@@@ -1858,82 +1858,6 @@@@ AC_DEFUN([GLIBCXX_ENABLE_WCHAR_T], [
   # Test it always, for use in GLIBCXX_ENABLE_C99, together with
   # ac_has_wchar_h.
   AC_CHECK_HEADERS(wctype.h, ac_has_wctype_h=yes, ac_has_wctype_h=no)
-  
-  if test x"$enable_wchar_t" = x"yes"; then
-
-    AC_LANG_SAVE
-    AC_LANG_CPLUSPLUS
-    
-    if test x"$ac_has_wchar_h" = xyes &&
-       test x"$ac_has_wctype_h" = xyes; then
-      AC_TRY_COMPILE([#include <wchar.h>
-                      #include <stddef.h>
-                      wint_t i;
-		      long l = WEOF;
-		      long j = WCHAR_MIN;
-		      long k = WCHAR_MAX;
-                      namespace test
-                      {
-			using ::btowc;
-			using ::fgetwc;
-			using ::fgetws;
-			using ::fputwc;
-			using ::fputws;
-			using ::fwide;
-			using ::fwprintf; 
-			using ::fwscanf;
-			using ::getwc;
-			using ::getwchar;
- 			using ::mbrlen; 
-			using ::mbrtowc; 
-			using ::mbsinit; 
-			using ::mbsrtowcs; 
-			using ::putwc;
-			using ::putwchar;
-			using ::swprintf; 
-			using ::swscanf; 
-			using ::ungetwc;
-			using ::vfwprintf; 
-			using ::vswprintf; 
-			using ::vwprintf; 
-			using ::wcrtomb; 
-			using ::wcscat; 
-			using ::wcschr; 
-			using ::wcscmp; 
-			using ::wcscoll; 
-			using ::wcscpy; 
-			using ::wcscspn; 
-			using ::wcsftime; 
-			using ::wcslen;
-			using ::wcsncat; 
-			using ::wcsncmp; 
-			using ::wcsncpy; 
-			using ::wcspbrk;
-			using ::wcsrchr; 
-			using ::wcsrtombs; 
-			using ::wcsspn; 
-			using ::wcsstr;
-			using ::wcstod; 
-			using ::wcstok; 
-			using ::wcstol;
-			using ::wcstoul; 
-			using ::wcsxfrm; 
-			using ::wctob; 
-			using ::wmemchr;
-			using ::wmemcmp;
-			using ::wmemcpy;
-			using ::wmemmove;
-			using ::wmemset;
-			using ::wprintf; 
-			using ::wscanf; 
-		      }
-		     ],[],[], [enable_wchar_t=no])
-    else
-      enable_wchar_t=no
-    fi
-
-    AC_LANG_RESTORE
-  fi
 
   if test x"$enable_wchar_t" = x"yes"; then
     AC_DEFINE(_GLIBCXX_USE_WCHAR_T, 1,
@


1.1
log
@add wchar_t support to gcc 4.2 because some upcoming ports are going to need
it. this is not much different from the in-tree gcc way of doing it.
tested with openoffice and with some other uncommited stuff.
bump needed PKGNAMEs
@
text
@d1 1
a1 1
$OpenBSD$
@

