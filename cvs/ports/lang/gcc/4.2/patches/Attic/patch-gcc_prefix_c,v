head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.12
	OPENBSD_5_0:1.3.0.10
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.8
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.6
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	fsf:1.1.1.1
	gcc:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2012.02.22.07.48.10;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2009.04.16.18.36.48;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2007.03.20.10.48.52;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.31.09.50.53;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.07.31.09.50.53;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Now that the system headers provide a proper definition of NULL we
can remove all these NULL patches.

from Brad
ok espie@@
@
text
@$OpenBSD: patch-gcc_prefix_c,v 1.3 2009/04/16 18:36:48 espie Exp $
--- gcc/prefix.c.orig	Sat Sep  1 17:28:30 2007
+++ gcc/prefix.c	Tue Apr  7 19:38:59 2009
@@@@ -98,7 +98,7 @@@@ get_key_value (char *key)
 #endif
 
   if (prefix == 0)
-    prefix = getenv (temp = concat (key, "_ROOT", NULL));
+    prefix = getenv (temp = concat (key, "_ROOT", (void *)0));
 
   if (prefix == 0)
     prefix = std_prefix;
@@@@ -222,7 +222,7 @@@@ translate_name (char *name)
 	 together.  */
 
       old_name = name;
-      name = concat (prefix, &name[keylen + 1], NULL);
+      name = concat (prefix, &name[keylen + 1], (void *)0);
       free (old_name);
     }
 
@@@@ -260,11 +260,11 @@@@ update_path (const char *path, const char *key)
 
       if (key[0] != '$')
 	{
-	  key = concat ("@@", key, NULL);
+	  key = concat ("@@", key, (void *)0);
 	  free_key = true;
 	}
 
-      result = concat (key, &path[len], NULL);
+      result = concat (key, &path[len], (void *)0);
       if (free_key)
 	free ((char *) key);
       result = translate_name (result);
@


1.3
log
@move to gcc 4.2.4, with a lot of work from kurt@@ as well.
Doesn't build on alpha yet, but should be on the way...
@
text
@d1 1
a1 1
$OpenBSD: patch-gcc_prefix_c,v 1.2 2007/03/20 10:48:52 espie Exp $
@


1.2
log
@update to a more recent snapshot.
@
text
@d1 4
a4 4
$OpenBSD: patch-gcc_prefix_c,v 1.1.1.1 2006/07/31 09:50:53 espie Exp $
--- gcc/prefix.c.orig	Sat Dec 17 21:45:46 2005
+++ gcc/prefix.c	Sun Mar 18 23:58:45 2007
@@@@ -99,7 +99,7 @@@@ get_key_value (char *key)
d13 1
a13 1
@@@@ -223,7 +223,7 @@@@ translate_name (char *name)
d22 1
a22 1
@@@@ -261,11 +261,11 @@@@ update_path (const char *path, const char *key)
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD: patch-gcc_prefix_c,v 1.3 2005/05/21 10:34:43 espie Exp $
--- gcc/prefix.c.orig	Fri Mar 18 16:24:19 2005
+++ gcc/prefix.c	Mon May 16 17:43:13 2005
d22 1
a22 1
@@@@ -261,11 +261,11 @@@@ update_path (const char *path, const cha
@


1.1.1.1
log
@4.2 branch of gcc
@
text
@@
