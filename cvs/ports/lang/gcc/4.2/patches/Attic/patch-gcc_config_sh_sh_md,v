head	1.2;
access;
symbols
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.03.19.16.56.02;	author pascal;	state dead;
branches;
next	1.1;
commitid	4NK6qdfGpCJ0tDvy;

1.1
date	2013.02.04.21.23.40;	author tobiasu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove 4.2.  long unused, doesn't build, tobiasu@@ doesn't need it any more.

prompted by naddy@@, ok tobiasu@@
@
text
@$OpenBSD: patch-gcc_config_sh_sh_md,v 1.1 2013/02/04 21:23:40 tobiasu Exp $
--- gcc/config/sh/sh.md.orig	Tue Jan 29 02:05:10 2013
+++ gcc/config/sh/sh.md	Tue Jan 29 02:07:11 2013
@@@@ -1774,28 +1774,8 @@@@
 
   operands[3] = gen_reg_rtx (Pmode);
   /* Emit the move of the address to a pseudo outside of the libcall.  */
-  if (TARGET_DIVIDE_CALL_TABLE)
+  if (TARGET_HARD_SH4 && TARGET_SH2E)
     {
-      /* libgcc2:__udivmoddi4 is not supposed to use an actual division, since
-	 that causes problems when the divide code is supposed to come from a
-	 separate library.  Division by zero is undefined, so dividing 1 can be
-	 implemented by comparing with the divisor.  */
-      if (operands[1] == const1_rtx && currently_expanding_to_rtl)
-	{
-	  emit_insn (gen_cmpsi (operands[1], operands[2]));
-	  emit_insn (gen_sgeu (operands[0]));
-	  DONE;
-	}
-      else if (operands[2] == const0_rtx)
-	{
-	  emit_move_insn (operands[0], operands[2]);
-	  DONE;
-	}
-      function_symbol (operands[3], \"__udivsi3_i4i\", SFUNC_GOT);
-      last = gen_udivsi3_i4_int (operands[0], operands[3]);
-    }
-  else if (TARGET_DIVIDE_CALL_FP)
-    {
       function_symbol (operands[3], \"__udivsi3_i4\", SFUNC_STATIC);
       if (TARGET_FPU_SINGLE)
 	last = gen_udivsi3_i4_single (operands[0], operands[3]);
@@@@ -2046,13 +2026,8 @@@@
 
   operands[3] = gen_reg_rtx (Pmode);
   /* Emit the move of the address to a pseudo outside of the libcall.  */
-  if (TARGET_DIVIDE_CALL_TABLE)
+  if (TARGET_HARD_SH4 && TARGET_SH2E)
     {
-      function_symbol (operands[3], sh_divsi3_libfunc, SFUNC_GOT);
-      last = gen_divsi3_i4_int (operands[0], operands[3]);
-    }
-  else if (TARGET_DIVIDE_CALL_FP)
-    {
       function_symbol (operands[3], sh_divsi3_libfunc, SFUNC_STATIC);
       if (TARGET_FPU_SINGLE)
 	last = gen_divsi3_i4_single (operands[0], operands[3]);
@@@@ -8354,7 +8329,7 @@@@ label:
       && GET_CODE (XEXP (operands[1], 0)) == UNSPEC
       && GET_CODE (XVECEXP (XEXP (operands[1], 0), 0, 0)) == SYMBOL_REF
       && strcmp (XSTR (XVECEXP (XEXP (operands[1], 0), 0, 0), 0),
-		 \"__stack_chk_guard\") == 0)
+		 \"__guard_local\") == 0)
     emit_insn (gen_blockage ());
 
   /* N.B. This is not constant for a GOTPLT relocation.  */
@


1.1
log
@Add our SH backend.

ok espie@@ pascal@@
@
text
@d1 1
a1 1
$OpenBSD$
@

