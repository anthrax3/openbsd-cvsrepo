head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2014.04.04.17.53.49;	author edd;	state Exp;
branches;
next	1.2;

1.2
date	2012.10.01.21.16.00;	author edd;	state Exp;
branches;
next	1.1;

1.1
date	2011.09.17.16.06.32;	author edd;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to SWI Prolog 6.6.4

OK ajacoutot@@, benoit@@

CVS choked last time I tried to commit this, so I hope it works...
@
text
@$OpenBSD$

Turn on verbose reporting.

GMP test appears to use >64MB of stack!?

--- src/test.pl.orig	Tue Mar  4 10:37:29 2014
+++ src/test.pl	Sat Mar 15 11:37:08 2014
@@@@ -23,6 +23,7 @@@@
 
 %:- set_prolog_flag(optimise, true).
 %:- set_prolog_flag(trace_gc, true).
+:- set_prolog_flag(verbose, normal).
 :- asserta(user:file_search_path(library, '../packages/plunit')).
 :- [library(plunit)].
 :- set_test_options([load(always), silent(true), sto(true), cleanup(true)]).
@@@@ -588,10 +589,10 @@@@ gmp(shift-1) :-
 gmp(shift-2) :-
 	A is 1<<55, B is A<<8,
 	B =:= 9223372036854775808.
-gmp(shift-3) :-
-	unbound(A),
-	forall(between(1, 100, X),
-	       catch(A is 1<<(1<<X), error(resource_error(stack), _), true)).
+%gmp(shift-3) :-
+%	unbound(A),
+%	forall(between(1, 100, X),
+%	       catch(A is 1<<(1<<X), error(resource_error(stack), _), true)).
 gmp(fac-1) :-
 	fac(25, X),
 	X == 15511210043330985984000000. % computed with bc
@


1.2
log
@Update to swi-prolog-6.2.2.

OK jasper@@
@
text
@d3 1
a3 1
This test appears to use >64MB of stack!?
d5 13
a17 3
--- src/test.pl.orig	Thu Sep 27 19:43:34 2012
+++ src/test.pl	Sat Sep 29 13:30:54 2012
@@@@ -582,10 +582,10 @@@@ gmp(shift-1) :-
d22 2
a23 3
+/*gmp(shift-3) :-
 	var(A),
 	forall(between(1, 100, X),
d25 4
a28 1
+		catch(A is 1<<(1<<X), error(resource_error(stack), _), true)).*/
@


1.1
log
@Update swi-prolog to 5.10.5.

OK jasper@@
@
text
@d3 1
a3 3
threading regression tests fail to terminate. disable them while we figure out
why. Dialog started with upstream:
http://www.swi-prolog.org/bugzilla/show_bug.cgi?id=11
d5 15
a19 13
--- src/test.pl.orig	Sat Sep 17 17:17:28 2011
+++ src/test.pl	Sat Sep 17 17:17:49 2011
@@@@ -2616,8 +2616,8 @@@@ testdir('Tests/library').
 testdir('Tests/charset').
 testdir('Tests/clp').
 testdir('Tests/GC').
-testdir('Tests/thread') :-
-	current_prolog_flag(threads, true).
+%testdir('Tests/thread') :-
+%	current_prolog_flag(threads, true).
 
 :- dynamic
 	failed/1,
@

