head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.28
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.26
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.24
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.20
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.22
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.18
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.16
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.14
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.12
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.10
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.8
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.14
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.12
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.10
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.8
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.6
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.4
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.2
	OPENBSD_4_1_BASE:1.1.1.1
	espie:1.1.1.1
	swi-prolog:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.12.22.23.24.21;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.09.10.20.24;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.10.09.10.20.24;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- make this fetchable again
- set a license version
- make Makefile somewhat readable
- reformat DESCR
- regen PLIST
- regen WANTLIB
@
text
@SWI-Prolog started life in 1986 as a Prolog in the Edinburgh tradition.
Its development has been guided from the very beginning by the desire to
build large scale applications in Prolog. For this reason it stresses
connectivity to the C-language, few system limits, comprehensive memory
management, modules, multi-threading, coroutining, constraints and a
fast and interactive development environment. Portable libraries for
graphics, databases, networking, web-services, XML, RDF and many more
complete the system.

SWI-Prolog is compliant to part one of ISO standard Prolog. In addition
it provides functionality compatible to Quintus, SICStus, LPA, Ciao and
many more.
@


1.1
log
@Initial revision
@
text
@d1 8
a8 8
SWI-Prolog started life in 1986 as a Prolog in the Edinburgh
tradition. Its development has been guided from the very beginning by
the desire to build large scale applications in Prolog. For this
reason it stresses connectivity to the C-language, few system limits,
comprehensive memory management, modules, multi-threading,
coroutining, constraints and a fast and interactive development
environment. Portable libraries for graphics, databases, networking,
web-services, XML, RDF and many more complete the system.
d10 3
a12 3
SWI-Prolog is compliant to part one of ISO standard Prolog. In
addition it provides functionality compatible to Quintus, SICStus,
LPA, Ciao and many more.
@


1.1.1.1
log
@prolog interpreter that works, since gnu-prolog depends on a memory model
that doesn't work well for us.
@
text
@@
