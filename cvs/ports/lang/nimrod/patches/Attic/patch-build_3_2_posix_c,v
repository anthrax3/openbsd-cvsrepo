head	1.2;
access;
symbols
	jturner_20140329:1.1.1.1 jturner:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.05.08.01.05.50;	author jturner;	state dead;
branches;
next	1.1;

1.1
date	2014.03.29.23.59.25;	author jturner;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.03.29.23.59.25;	author jturner;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update nimrod to 0.9.4. Major Makefile overhaul.

ok juanfra@@
@
text
@$OpenBSD: patch-build_3_2_posix_c,v 1.1 2014/03/29 23:59:25 jturner Exp $
--- build/3_2/posix.c.orig	Fri Mar 28 13:02:44 2014
+++ build/3_2/posix.c	Fri Mar 28 13:02:43 2014
@@@@ -16,8 +16,6 @@@@
 
 #include <fenv.h>
 
-#include <fmtmsg.h>
-
 #include <fnmatch.h>
 
 #include <ftw.h>
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import ports/lang/nimrod. ok juanfra@@

Nimrod is a statically typed, imperative programming language that tries
to give the programmer ultimate power without compromises on runtime
efficiency. This means it focuses on compile-time mechanisms in all
their various forms.

Beneath a nice infix/indentation based syntax with a powerful (AST
based, hygienic) macro system lies a semantic model that supports a soft
realtime GC on thread local heaps. Asynchronous message passing is used
between threads, so no "stop the world" mechanism is necessary. An
unsafe shared memory heap is also provided for the increased efficiency
that results from that model.

@
text
@@
