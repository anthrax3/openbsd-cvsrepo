head	1.23;
access;
symbols
	OPENBSD_6_1:1.21.0.2
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.19.0.2
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.17.0.4
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.2
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.11.0.2
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	abieber_20121027:1.1.1.1
	abieber:1.1.1;
locks; strict;
comment	@# @;


1.23
date	2017.06.01.20.47.38;	author espie;	state Exp;
branches;
next	1.22;
commitid	UnGMvETJPrOqrarY;

1.22
date	2017.05.05.10.21.47;	author jsg;	state Exp;
branches;
next	1.21;
commitid	zm0flcBFkl6UMYsg;

1.21
date	2016.11.07.11.42.55;	author naddy;	state Exp;
branches;
next	1.20;
commitid	lW0DPXwopiaipHNq;

1.20
date	2016.11.06.05.44.21;	author jsg;	state Exp;
branches;
next	1.19;
commitid	jWEIN3L7XV1ePP54;

1.19
date	2016.03.18.23.12.18;	author naddy;	state Exp;
branches;
next	1.18;
commitid	KZAl4KEiw6a3Jixw;

1.18
date	2015.12.28.07.14.18;	author ajacoutot;	state Exp;
branches;
next	1.17;
commitid	PYFh6HRrucXAlU0s;

1.17
date	2015.06.06.09.03.16;	author dcoppa;	state Exp;
branches;
next	1.16;
commitid	42Yo5zTU2igR83WU;

1.16
date	2015.05.28.10.17.24;	author pascal;	state Exp;
branches;
next	1.15;
commitid	020U4lCPk8wUkCOz;

1.15
date	2015.01.20.15.26.26;	author abieber;	state Exp;
branches;
next	1.14;
commitid	Zb444B5j7ugm0IqI;

1.14
date	2014.06.02.19.43.50;	author juanfra;	state Exp;
branches;
next	1.13;
commitid	XwDEZyp0azFPTl8F;

1.13
date	2014.05.03.14.24.03;	author abieber;	state Exp;
branches;
next	1.12;

1.12
date	2014.03.12.22.51.21;	author abieber;	state Exp;
branches;
next	1.11;

1.11
date	2014.02.10.17.31.46;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2013.11.01.12.21.04;	author jasper;	state Exp;
branches;
next	1.9;

1.9
date	2013.10.05.15.51.08;	author abieber;	state Exp;
branches;
next	1.8;

1.8
date	2013.05.09.22.35.17;	author abieber;	state Exp;
branches;
next	1.7;

1.7
date	2013.05.09.17.57.56;	author abieber;	state Exp;
branches;
next	1.6;

1.6
date	2013.03.11.11.20.28;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2013.02.07.19.13.49;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2012.12.02.19.09.36;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2012.11.16.15.06.57;	author abieber;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.02.02.08.38;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2012.10.27.14.05.33;	author abieber;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.10.27.14.05.33;	author abieber;	state Exp;
branches;
next	;


desc
@@


1.23
log
@help this build with clang... apparently the dependent ports like it.
might be not 100% right, but it won't even build without it anyway.
@
text
@# $OpenBSD: Makefile,v 1.22 2017/05/05 10:21:47 jsg Exp $

ONLY_FOR_ARCHS = powerpc i386 amd64
# arm needs missing EABI symbols

SHARED_LIBS +=	luajit-${MODLUA_VERSION} 1.0 # 2.0.5

COMMENT =	just-in-time compiler for Lua
V =		2.0.5
DISTNAME =	LuaJIT-${V}
PKGNAME =	${DISTNAME:L}

CATEGORIES =	lang

HOMEPAGE =	http://luajit.org/

# MIT
PERMIT_PACKAGE_CDROM =	Yes

WANTLIB =	c m

MASTER_SITES =	${HOMEPAGE}download/

MODULES =	lang/lua
MODLUA_SA=	Yes
MODLUA_VERSION=	5.1

MODULES +=	gcc4
MODGCC4_ARCHS =	powerpc
MODGCC4_LANGS =	c

MAKE_FLAGS += \
	CC="${CC}" \
	CCOPT="${CFLAGS}" \
	CCOPT_x86="" \
	INSTALL_LJLIBD="${DESTDIR}${MODLUA_DATADIR}" \
	INSTALL_MAN="${DESTDIR}${PREFIX}/man/man1" \
	INSTALL_SONAME=libluajit-${MODLUA_VERSION}.so.${LIBluajit-${MODLUA_VERSION}_VERSION} \
	PREFIX="${PREFIX}"

USE_GMAKE =	Yes

SUBST_VARS+=	MODLUA_VERSION

pre-configure:
	${SUBST_CMD} ${WRKDIST}/Makefile \
		${WRKDIST}/etc/luajit.pc \
		${WRKDIST}/src/luaconf.h

post-install:
	mv ${PREFIX}/bin/luajit-$V ${PREFIX}/bin/luajit${MODLUA_DEP_VERSION}

do-test:
	${WRKSRC}/src/luajit -e "print('hello world')" | grep "^hello world$$"

.include <bsd.port.mk>
.if ${PROPERTIES:Mclang}
MAKE_FLAGS += TARGET_LDFLAGS='-lc++abi -lpthread'
WANTLIB +=	c++abi pthread
.endif
@


1.22
log
@update to LuaJIT 2.0.5

Major on the library gets cranked as it removes
luaJIT_version_2_0_4
and adds
luaJIT_version_2_0_5

Tested by sthen@@ with rspamd. ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2016/11/07 11:42:55 naddy Exp $
d57 4
@


1.21
log
@bump REVISION after previous
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2016/11/06 05:44:21 jsg Exp $
d4 1
a4 1
# arm needs EABI/aapcs
d6 1
a6 1
SHARED_LIBS +=	luajit-${MODLUA_VERSION} 0.0 # 2.0.4
d9 1
a9 1
V =		2.0.4
a11 1
REVISION =	0
@


1.20
log
@Remove the lua52 FLAVOR of luajit which build with LUAJIT_ENABLE_LUA52COMPAT
defined and wrongly patched luajit to set the abi to lua 5.2.
luajit can not load lua modules built against the lua 5.2 headers even
when build with LUAJIT_ENABLE_LUA52COMPAT.

Even without LUAJIT_ENABLE_LUA52COMPAT luajit has some 5.2 semantics,
the define enables a few other things such making unpack() available
as table.unpack().

No system vendors seem to ship a version of luajit with the define set
and the consensus is to just remove the FLAVOR.

Remove abieber@@ as MAINTAINER at his request.

ok jca@@ abieber@@ juanfra@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2016/03/18 23:12:18 naddy Exp $
d12 1
@


1.19
log
@remove SHARED_ONLY from ports that only use modules that neither set nor
read this variable
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2015/12/28 07:14:18 ajacoutot Exp $
a16 2
MAINTAINER =	Aaron Bieber <abieber@@openbsd.org>

d26 1
a43 5

# http://luajit.org/extensions.html
.if defined(FLAVOR) && ${FLAVOR:Mlua52}
MAKE_FLAGS +=	XCFLAGS="-DLUAJIT_ENABLE_LUA52COMPAT"
.endif
@


1.18
log
@Remove a comment that has been bogus for awhile now that 4.9 is being
built.

from Brad
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2015/06/06 09:03:16 dcoppa Exp $
a5 1
SHARED_ONLY =	Yes
@


1.17
log
@
Update to LuaJIT-2.0.4

ok abieber@@ (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2015/05/28 10:17:24 pascal Exp $
a4 1
# for mips64* gcc 4.6 is needed, but that doesn't build on this arch (yet)
@


1.16
log
@gcc4 bumps, reminded by aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2015/01/20 15:26:26 abieber Exp $
d8 1
a8 1
SHARED_LIBS +=	luajit-${MODLUA_VERSION} 0.0 # 2.0.0
d11 1
a11 1
V =		2.0.3
a13 1
REVISION =	3
d54 3
a56 1
	${SUBST_CMD} ${WRKDIST}/Makefile
@


1.15
log
@From tedu@@:
On i386, it's better for a jit to ask for exec memory upfront, so uvm
knows to place it in the exec segment. Otherwise, if you mmap non-exec
and mprotect it, you wind up with a high mapping and the segment must
be enlarged to cover the whole process.

I sent Mike a slightly different diff; this is what he ended up
committing to git. I think we should add it to the port.

OK dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2014/06/02 19:43:50 juanfra Exp $
d14 1
a14 1
REVISION =	2
@


1.14
log
@Enable LUA52COMPAT for the lua52 flavor. ok abieber@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2014/05/03 14:24:03 abieber Exp $
d14 1
a14 1
REVISION =	1
@


1.13
log
@Fix for hard coded 5.1 plist stuff that was preventing the lua52 flavor
building.

Suggestions from sthen@@

OK juanfra@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2014/03/12 22:51:21 abieber Exp $
d14 1
a14 1
REVISION =	0
d48 5
@


1.12
log
@Update to the latest luajit - tested on amd64 using luakit. luasocket was also
used as a test.

OK jturner@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2014/02/10 17:31:46 sthen Exp $
d14 1
d30 1
d46 5
@


1.11
log
@build luajit with -Wl,-E to avoid problems when dlopen()ing hit by tedu.
tracked down by jturner, I tweaked his diff to use more of upstream's
original src/Makefile. ok jasper@@ jturner@@ abieber@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2013/11/01 12:21:04 jasper Exp $
d11 1
a11 2
V =		2.0.2
REVISION =	0
@


1.10
log
@remove arm from supported arches list as it requires eabi/aapcs.

ok abieber@@ (MAINTAINER)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2013/10/05 15:51:08 abieber Exp $
d12 1
@


1.9
log
@Update luajit to 2.0.2 - ran update-patches

OK jturner@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2013/05/09 22:35:17 abieber Exp $
d3 2
a4 1
ONLY_FOR_ARCHS = powerpc arm i386 amd64
@


1.8
log
@add luajit hotfix using fancy new syntax!

OK sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2013/05/09 17:57:56 abieber Exp $
d10 1
a10 2
V =		2.0.1
REVISION =	0
a12 3

PATCHFILES =		LuaJIT-2.0.1_hotfix1.patch{v2.0.1_hotfix1.patch}
PATCH_DIST_STRIP =	-p1
@


1.7
log
@Update luajit to 2.0.1

OK benoit@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2013/03/11 11:20:28 espie Exp $
d11 1
d14 3
@


1.6
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2013/02/07 19:13:49 ajacoutot Exp $
d10 1
a10 1
V =		2.0.0
@


1.5
log
@MODGCC4_VERSION default to 4.6 now.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2012/12/02 19:09:36 jasper Exp $
a21 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM =Yes
PERMIT_DISTFILES_FTP =	Yes
d47 1
a47 1
do-regress:
@


1.4
log
@remove mips64 from ONLY_FOR_ARCHS until gcc 4.6 has been ported to it.

ok abieber@@ (MAINTAINER)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2012/11/16 15:06:57 abieber Exp $
a32 1
MODGCC4_VERSION = 4.6
@


1.3
log
@Update to 2.0.0 release.

OK jasper@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2012/11/02 02:08:38 sthen Exp $
d3 2
a4 1
ONLY_FOR_ARCHS = powerpc arm i386 amd64 mips64 mips64el
@


1.2
log
@fix on powerpc, and add an explicit ONLY_FOR_ARCHS listing the arches
which the JIT has been written for (though some may not work in the port yet).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2012/10/27 14:05:33 abieber Exp $
d9 1
a9 1
V =		2.0.0-beta11
d11 1
a11 1
PKGNAME =	${DISTNAME:L:S/-beta/beta/}
@


1.1
log
@Initial revision
@
text
@d1 3
a3 1
# $OpenBSD: Makefile.template,v 1.61 2012/03/29 13:41:58 sthen Exp $
d30 5
@


1.1.1.1
log
@Initial import of luajit - a just-in-time compiler for Lua

OK sthen@@ landry@@
@
text
@@
