head	1.95;
access;
symbols
	OPENBSD_6_1:1.93.0.2
	OPENBSD_6_1_BASE:1.93
	OPENBSD_6_0:1.87.0.2
	OPENBSD_6_0_BASE:1.87
	OPENBSD_5_9:1.85.0.2
	OPENBSD_5_9_BASE:1.85
	OPENBSD_5_8:1.80.0.4
	OPENBSD_5_8_BASE:1.80
	OPENBSD_5_7:1.79.0.2
	OPENBSD_5_7_BASE:1.79
	OPENBSD_5_6:1.75.0.2
	OPENBSD_5_6_BASE:1.75
	OPENBSD_5_5:1.73.0.2
	OPENBSD_5_5_BASE:1.73
	OPENBSD_5_4:1.71.0.2
	OPENBSD_5_4_BASE:1.71
	OPENBSD_5_3:1.58.0.2
	OPENBSD_5_3_BASE:1.58
	OPENBSD_5_2:1.53.0.2
	OPENBSD_5_2_BASE:1.53
	OPENBSD_5_1_BASE:1.50
	OPENBSD_5_1:1.50.0.2
	OPENBSD_5_0:1.42.0.2
	OPENBSD_5_0_BASE:1.42
	OPENBSD_4_9:1.40.0.2
	OPENBSD_4_9_BASE:1.40
	OPENBSD_4_8:1.35.0.2
	OPENBSD_4_8_BASE:1.35
	OPENBSD_4_7:1.31.0.2
	OPENBSD_4_7_BASE:1.31
	OPENBSD_4_6:1.29.0.2
	OPENBSD_4_6_BASE:1.29
	OPENBSD_4_5:1.26.0.2
	OPENBSD_4_5_BASE:1.26
	OPENBSD_4_4:1.23.0.2
	OPENBSD_4_4_BASE:1.23
	OPENBSD_4_3:1.21.0.2
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.2
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.12.0.2
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.11.0.2
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.10.0.6
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.4
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.2
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4;
locks; strict;
comment	@# @;


1.95
date	2017.07.08.08.28.00;	author landry;	state Exp;
branches;
next	1.94;
commitid	3yI3SLATUJ2eVpSH;

1.94
date	2017.04.19.07.41.00;	author ajacoutot;	state Exp;
branches;
next	1.93;
commitid	j4ESWLFU0d0oKFzC;

1.93
date	2017.01.03.19.12.42;	author landry;	state Exp;
branches;
next	1.92;
commitid	Poq0OjCHzB0OA0H6;

1.92
date	2017.01.03.18.54.48;	author shadchin;	state Exp;
branches;
next	1.91;
commitid	4wXCEmNOFtHPEQ29;

1.91
date	2016.12.26.19.48.47;	author rpointel;	state Exp;
branches;
next	1.90;
commitid	rusCEwfsxAPmcuem;

1.90
date	2016.11.07.16.42.08;	author jca;	state Exp;
branches;
next	1.89;
commitid	1ZaIElCVz0BsFjlu;

1.89
date	2016.10.31.11.08.16;	author jasper;	state Exp;
branches;
next	1.88;
commitid	Me6swGo8e1JXhjk8;

1.88
date	2016.10.29.18.25.01;	author danj;	state Exp;
branches;
next	1.87;
commitid	89GIGxvitcPC1Iul;

1.87
date	2016.03.20.16.12.24;	author naddy;	state Exp;
branches;
next	1.86;
commitid	guiZq8cnNbVyyHzx;

1.86
date	2016.03.11.18.13.19;	author naddy;	state Exp;
branches;
next	1.85;
commitid	Mg9tFa8Hyu6kCvoX;

1.85
date	2016.01.07.21.14.06;	author jasper;	state Exp;
branches;
next	1.84;
commitid	8lVGvoDMV97h53Wg;

1.84
date	2015.11.26.20.27.30;	author jasper;	state Exp;
branches;
next	1.83;
commitid	jR8lV2I2ZOVhJK8j;

1.83
date	2015.10.09.09.22.48;	author sthen;	state Exp;
branches;
next	1.82;
commitid	hbd9L4tIaA7OTgqb;

1.82
date	2015.09.29.10.50.16;	author sthen;	state Exp;
branches;
next	1.81;
commitid	KVftGoSgi57OW1UT;

1.81
date	2015.09.23.19.26.01;	author rpointel;	state Exp;
branches;
next	1.80;
commitid	7HC5fdyR4HiypeAf;

1.80
date	2015.04.02.13.57.10;	author jasper;	state Exp;
branches;
next	1.79;
commitid	C4mCCFVcpkGCDC7i;

1.79
date	2014.12.17.00.31.52;	author daniel;	state Exp;
branches;
next	1.78;
commitid	Euri9dtVr0Gxhfa8;

1.78
date	2014.11.05.12.09.07;	author naddy;	state Exp;
branches;
next	1.77;
commitid	uHZ6wfVN57msPrhd;

1.77
date	2014.11.01.10.24.16;	author jca;	state Exp;
branches;
next	1.76;
commitid	HHS838m9JtJ1xmeo;

1.76
date	2014.09.29.07.00.22;	author jasper;	state Exp;
branches;
next	1.75;
commitid	CD9mvStT6aXm0419;

1.75
date	2014.06.03.11.29.32;	author rpointel;	state Exp;
branches;
next	1.74;
commitid	ytrl19GVZLSHFvJc;

1.74
date	2014.04.13.07.11.10;	author rpointel;	state Exp;
branches;
next	1.73;

1.73
date	2013.10.03.16.28.00;	author dcoppa;	state Exp;
branches;
next	1.72;

1.72
date	2013.09.24.16.55.02;	author ajacoutot;	state Exp;
branches;
next	1.71;

1.71
date	2013.06.28.10.27.49;	author espie;	state Exp;
branches;
next	1.70;

1.70
date	2013.06.05.11.11.38;	author sthen;	state Exp;
branches;
next	1.69;

1.69
date	2013.06.04.08.02.20;	author fgsch;	state Exp;
branches;
next	1.68;

1.68
date	2013.05.30.14.46.31;	author ajacoutot;	state Exp;
branches;
next	1.67;

1.67
date	2013.05.30.13.08.59;	author ajacoutot;	state Exp;
branches;
next	1.66;

1.66
date	2013.05.13.19.06.45;	author fgsch;	state Exp;
branches;
next	1.65;

1.65
date	2013.05.10.06.07.53;	author ajacoutot;	state Exp;
branches;
next	1.64;

1.64
date	2013.05.03.08.51.05;	author fgsch;	state Exp;
branches;
next	1.63;

1.63
date	2013.04.30.17.20.58;	author sthen;	state Exp;
branches;
next	1.62;

1.62
date	2013.04.28.01.00.33;	author fgsch;	state Exp;
branches;
next	1.61;

1.61
date	2013.04.04.12.36.43;	author sthen;	state Exp;
branches;
next	1.60;

1.60
date	2013.04.01.16.49.53;	author fgsch;	state Exp;
branches;
next	1.59;

1.59
date	2013.03.11.11.20.28;	author espie;	state Exp;
branches;
next	1.58;

1.58
date	2013.02.09.14.49.51;	author sthen;	state Exp;
branches;
next	1.57;

1.57
date	2012.12.21.18.19.38;	author fgsch;	state Exp;
branches;
next	1.56;

1.56
date	2012.10.14.17.26.12;	author rpointel;	state Exp;
branches;
next	1.55;

1.55
date	2012.10.12.19.57.46;	author rpointel;	state Exp;
branches;
next	1.54;

1.54
date	2012.08.28.19.10.45;	author espie;	state Exp;
branches;
next	1.53;

1.53
date	2012.06.27.18.56.26;	author rpointel;	state Exp;
branches;
next	1.52;

1.52
date	2012.04.03.09.21.42;	author ajacoutot;	state Exp;
branches;
next	1.51;

1.51
date	2012.03.31.08.53.57;	author ajacoutot;	state Exp;
branches;
next	1.50;

1.50
date	2011.12.20.13.08.06;	author fgsch;	state Exp;
branches;
next	1.49;

1.49
date	2011.12.14.20.31.28;	author rpointel;	state Exp;
branches;
next	1.48;

1.48
date	2011.11.29.17.29.37;	author pascal;	state Exp;
branches;
next	1.47;

1.47
date	2011.10.17.13.55.24;	author espie;	state Exp;
branches;
next	1.46;

1.46
date	2011.10.03.13.54.12;	author fgsch;	state Exp;
branches;
next	1.45;

1.45
date	2011.09.27.21.27.36;	author sthen;	state Exp;
branches;
next	1.44;

1.44
date	2011.09.22.09.44.40;	author sthen;	state Exp;
branches;
next	1.43;

1.43
date	2011.09.21.14.37.28;	author fgsch;	state Exp;
branches;
next	1.42;

1.42
date	2011.06.08.17.28.14;	author rpointel;	state Exp;
branches;
next	1.41;

1.41
date	2011.04.24.09.19.01;	author rpointel;	state Exp;
branches;
next	1.40;

1.40
date	2010.11.17.08.05.18;	author espie;	state Exp;
branches;
next	1.39;

1.39
date	2010.10.26.14.29.26;	author ajacoutot;	state Exp;
branches;
next	1.38;

1.38
date	2010.10.24.15.53.55;	author sthen;	state Exp;
branches;
next	1.37;

1.37
date	2010.09.16.22.58.19;	author fgsch;	state Exp;
branches;
next	1.36;

1.36
date	2010.08.30.16.35.02;	author fgsch;	state Exp;
branches;
next	1.35;

1.35
date	2010.07.29.08.39.53;	author djm;	state Exp;
branches;
next	1.34;

1.34
date	2010.07.29.02.17.58;	author djm;	state Exp;
branches;
next	1.33;

1.33
date	2010.07.22.10.39.19;	author ajacoutot;	state Exp;
branches;
next	1.32;

1.32
date	2010.07.15.07.55.29;	author sthen;	state Exp;
branches;
next	1.31;

1.31
date	2010.02.27.17.52.18;	author espie;	state Exp;
branches;
next	1.30;

1.30
date	2009.08.08.21.58.10;	author sthen;	state Exp;
branches;
next	1.29;

1.29
date	2009.04.26.10.49.33;	author ajacoutot;	state Exp;
branches;
next	1.28;

1.28
date	2009.03.15.13.03.41;	author espie;	state Exp;
branches;
next	1.27;

1.27
date	2009.03.09.23.09.19;	author espie;	state Exp;
branches;
next	1.26;

1.26
date	2009.01.01.21.03.27;	author djm;	state Exp;
branches;
next	1.25;

1.25
date	2008.12.16.06.32.27;	author fgsch;	state Exp;
branches;
next	1.24;

1.24
date	2008.10.27.00.02.27;	author ajacoutot;	state Exp;
branches;
next	1.23;

1.23
date	2008.06.10.15.01.49;	author wcmaier;	state Exp;
branches;
next	1.22;

1.22
date	2008.04.09.21.45.54;	author wcmaier;	state Exp;
branches;
next	1.21;

1.21
date	2008.01.20.15.28.29;	author ajacoutot;	state Exp;
branches;
next	1.20;

1.20
date	2007.12.10.21.06.58;	author martynas;	state Exp;
branches;
next	1.19;

1.19
date	2007.10.22.10.14.02;	author steven;	state Exp;
branches;
next	1.18;

1.18
date	2007.10.10.21.44.06;	author steven;	state Exp;
branches;
next	1.17;

1.17
date	2007.10.10.21.42.14;	author steven;	state Exp;
branches;
next	1.16;

1.16
date	2007.10.08.08.21.33;	author steven;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.22.15.34.26;	author martynas;	state Exp;
branches;
next	1.14;

1.14
date	2006.11.26.10.16.22;	author steven;	state Exp;
branches;
next	1.13;

1.13
date	2006.09.26.15.27.02;	author djm;	state Exp;
branches;
next	1.12;

1.12
date	2006.06.03.09.14.04;	author alek;	state Exp;
branches;
next	1.11;

1.11
date	2006.01.27.17.50.54;	author bernd;	state Exp;
branches;
next	1.10;

1.10
date	2004.08.06.07.33.19;	author xsa;	state Exp;
branches;
next	1.9;

1.9
date	2004.06.21.23.25.07;	author xsa;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.15.09.24.12;	author xsa;	state Exp;
branches;
next	1.7;

1.7
date	2004.02.06.08.37.22;	author xsa;	state Exp;
branches;
next	1.6;

1.6
date	2004.01.22.06.28.35;	author sturm;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.10.16.38.18;	author sturm;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.12.20.23.20;	author sturm;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.31.07.01.21;	author jolan;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.29.19.35.32;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.28.17.48.13;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.95
log
@Retire python 3.4 and 3.5, python 3.6 is the default python3 version
since 7 months, and nothing uses those anymore.
ok rpointel@@ (MAINTAINER) ajacoutot@@
@
text
@# $OpenBSD: python.port.mk,v 1.94 2017/04/19 07:41:00 ajacoutot Exp $
#
#	python.port.mk - Xavier Santolaria <xavier@@santolaria.net>
#	This file is in the public domain.

CATEGORIES +=		lang/python

# define the default versions
MODPY_DEFAULT_VERSION_2 = 2.7
MODPY_DEFAULT_VERSION_3 = 3.6

.if !defined(MODPY_VERSION)

FLAVOR ?=

.  if ${FLAVOR:Mpython3}
# define default version 3
MODPY_VERSION ?=	${MODPY_DEFAULT_VERSION_3}
.  else
# without flavor, assume we use the default version 2
MODPY_VERSION ?=	${MODPY_DEFAULT_VERSION_2}
.  endif

# verify if MODPY_VERSION forced is correct
.else
.  if ${MODPY_VERSION} != "2.7" && \
      ${MODPY_VERSION} != "3.6"
ERRORS += "Fatal: unknown or unsupported MODPY_VERSION: ${MODPY_VERSION}"
.  endif
.endif

MODPY_MAJOR_VERSION =	${MODPY_VERSION:R}

.if ${MODPY_MAJOR_VERSION} == 2
MODPY_LIB_SUFFIX =
MODPY_FLAVOR =
MODPY_BIN_SUFFIX =
MODPY_PY_PREFIX =	py-
MODPY_PYCACHE =
MODPY_PYC_MAGIC_TAG =
MODPY_COMMENT =	"@@comment "
MODPY_ABI3SO =

.elif ${MODPY_MAJOR_VERSION} == 3
MODPY_LIB_SUFFIX =	m
# replace py- prefix by py3-
FULLPKGNAME ?=	${PKGNAME:S/^py-/py3-/}${FLAVOR_EXT:S/-python3//}
MODPY_FLAVOR =	,python3
# use MODPY_SUFFIX for binaries to avoid conflict
MODPY_BIN_SUFFIX =	-3
MODPY_PY_PREFIX =	py3-
MODPY_PYCACHE =	"__pycache__/"
MODPY_MAJORMINOR =	${MODPY_VERSION:C/\.//g}
MODPY_PYC_MAGIC_TAG =	"cpython-${MODPY_MAJORMINOR}."
MODPY_COMMENT =
MODPY_ABI3SO =		".abi3"

.endif

.if ${MODPY_VERSION} == "2.7"
MODPY_PYOEXTENSION =	pyo
.else
MODPY_PYOEXTENSION ?=	opt-1.pyc
.endif

MODPY_WANTLIB = python${MODPY_VERSION}${MODPY_LIB_SUFFIX}

MODPY_RUN_DEPENDS =	lang/python/${MODPY_VERSION}
MODPY_LIB_DEPENDS =	lang/python/${MODPY_VERSION}
_MODPY_BUILD_DEPENDS =	lang/python/${MODPY_VERSION}

MODPY_BUILDDEP ?=	Yes
MODPY_RUNDEP ?=		Yes

.if ${NO_BUILD:L} == "no" && ${MODPY_BUILDDEP:L} == "yes"
BUILD_DEPENDS +=	${_MODPY_BUILD_DEPENDS}
.endif
.if ${MODPY_RUNDEP:L} == "yes"
RUN_DEPENDS +=		${MODPY_RUN_DEPENDS}
.endif

_MODPY_PRE_BUILD_STEPS = :
.if defined(MODPY_SETUPTOOLS) && ${MODPY_SETUPTOOLS:L} == "yes"
# The setuptools module provides a package locator (site.py) that is
# required at runtime for the pkg_resources stuff to work
MODPY_SETUPUTILS_DEPEND ?= devel/py-setuptools${MODPY_FLAVOR}>=28.6.1v0

MODPY_RUN_DEPENDS +=	${MODPY_SETUPUTILS_DEPEND}
BUILD_DEPENDS +=	${MODPY_SETUPUTILS_DEPEND}
MODPY_SETUPUTILS =	Yes
# The setuptools uses test target
TEST_TARGET ?=	test
_MODPY_USERBASE =
_MODPY_PRE_BUILD_STEPS += ;${MODPY_CMD} egg_info || true
.else
# Try to detect the case where a port will build regardless of setuptools
# but the final plist will be different if it's present.
_MODPY_SETUPUTILS_FAKE_DIR =	\
	${WRKDIR}/lib/python${MODPY_VERSION}/site-packages/setuptools
_MODPY_PRE_BUILD_STEPS +=	\
	;mkdir -p ${_MODPY_SETUPUTILS_FAKE_DIR} \
	;exec 3>&1 \
	;exec >${_MODPY_SETUPUTILS_FAKE_DIR}/__init__.py \
	;echo 'def setup(*args, **kwargs):' \
	;echo '    msg = "OpenBSD ports: MODPY_SETUPTOOLS = Yes is required"' \
	;echo '    raise Exception(msg)' \
	;echo 'Extension = Feature = find_packages = setup' \
	;exec 1>&3
MODPY_SETUPUTILS =	No
_MODPY_USERBASE =	${WRKDIR}
.endif

.if defined(MODPY_PI) && ${MODPY_PI:L} == "yes"
_MODPY_EGG_NAME =	${DISTNAME:S/-${MODPY_EGG_VERSION}//}
MODPY_PI_DIR ?=		${DISTNAME:C/^([a-zA-Z0-9]).*/\1/}/${_MODPY_EGG_NAME}
MASTER_SITES =		${MASTER_SITE_PYPI:=${MODPY_PI_DIR}/}
HOMEPAGE ?=		https://pypi.python.org/pypi/${_MODPY_EGG_NAME}
.endif

MODPY_TKINTER_DEPENDS =	lang/python/${MODPY_VERSION},-tkinter

MODPY_BIN =		${LOCALBASE}/bin/python${MODPY_VERSION}
MODPY_INCDIR =		${LOCALBASE}/include/python${MODPY_VERSION}${MODPY_LIB_SUFFIX}
MODPY_LIBDIR =		${LOCALBASE}/lib/python${MODPY_VERSION}
MODPY_SITEPKG =		${MODPY_LIBDIR}/site-packages

# usually setup.py but Setup.py can be found too
MODPY_SETUP ?=		setup.py

# build or build_ext are commonly used
MODPY_DISTUTILS_BUILD ?=	build --build-base=${WRKSRC}

.if ${MODPY_SETUPUTILS:L} == "yes"
MODPY_DISTUTILS_INSTALL ?=	install --prefix=${LOCALBASE} \
				--root=${DESTDIR} \
				--single-version-externally-managed
.else
MODPY_DISTUTILS_INSTALL ?=	install --prefix=${LOCALBASE} \
				--root=${DESTDIR}
.endif

MAKE_ENV +=		CC=${CC} PYTHONUSERBASE=${_MODPY_USERBASE}
CONFIGURE_ENV +=	PYTHON="${MODPY_BIN}"
.if ${CONFIGURE_STYLE:Mgnu}
CONFIGURE_ENV +=	ac_cv_prog_PYTHON="${MODPY_BIN}" \
			ac_cv_path_PYTHON="${MODPY_BIN}"
.endif

MODPY_CMD =	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} \
			${MODPY_BIN} ./${MODPY_SETUP} \
			${MODPY_SETUP_ARGS}

MODPY_TEST_CMD = cd ${WRKSRC} && ${SETENV} ${ALL_TEST_ENV} \
			${MODPY_BIN} ./${MODPY_SETUP} \
			${MODPY_SETUP_ARGS}

SUBST_VARS :=	MODPY_PYCACHE MODPY_COMMENT MODPY_ABI3SO MODPY_PYC_MAGIC_TAG \
		MODPY_BIN MODPY_EGG_VERSION MODPY_VERSION MODPY_BIN_SUFFIX \
		MODPY_PY_PREFIX MODPY_PYOEXTENSION ${SUBST_VARS}

# set MODPY_BIN for executable scripts
MODPY_BIN_ADJ =	perl -pi \
		-e '$$. == 1 && s|^.*env +python.*$$|\#!${MODPY_BIN}|;' \
		-e '$$. == 1 && s|^.*bin/python.*$$|\#!${MODPY_BIN}|;' \
		-e 'close ARGV if eof;'

MODPY_ADJ_FILES ?=
.if !empty(MODPY_ADJ_FILES)
MODPYTHON_pre-configure += for f in ${MODPY_ADJ_FILES}; do \
	${MODPY_BIN_ADJ} ${WRKSRC}/$${f}; done
.endif

MODPY_BUILD_TARGET = ${_MODPY_PRE_BUILD_STEPS}; \
	${MODPY_CMD} ${MODPY_DISTUTILS_BUILD} ${MODPY_DISTUTILS_BUILDARGS}
MODPY_INSTALL_TARGET = \
	${MODPY_CMD} ${MODPY_DISTUTILS_BUILD} ${MODPY_DISTUTILS_BUILDARGS} \
		${MODPY_DISTUTILS_INSTALL} ${MODPY_DISTUTILS_INSTALLARGS}
MODPY_TEST_TARGET = \
	${MODPY_TEST_CMD} ${TEST_TARGET}

# dirty way to do it with no modifications in bsd.port.mk
.if empty(CONFIGURE_STYLE)
.  if !target(do-build)
do-build:
	@@${MODPY_BUILD_TARGET}
.  endif

# extra documentation or scripts should be installed via post-install
.  if !target(do-install)
do-install:
	@@${MODPY_INSTALL_TARGET}
.  endif

# setuptools supports regress testing from setup.py using a standard target
.  if !target(do-test) && ${MODPY_SETUPUTILS:L} == "yes"
do-test:
	@@${MODPY_TEST_TARGET}
.  endif

.endif
@


1.94
log
@Only add ac_cv_prog_PYTHON and ac_cv_path_PYTHON to CONFIGURE_ENV when
CONFIGURE_STYLE is gnu (or autoconf). It makes no sense for other styles.

survived a bulk
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.93 2017/01/03 19:12:42 landry Exp $
a26 2
      ${MODPY_VERSION} != "3.4" && \
      ${MODPY_VERSION} != "3.5" && \
d60 1
a60 1
.if ${MODPY_VERSION} == "2.7" || ${MODPY_VERSION} == "3.4"
@


1.93
log
@Switch MODPY_DEFAULT_VERSION_3 to 3.6, diff from rpointel@@, testing and
fixes by shadchin@@, bulk build by me, support from danj@@, no objection
from naddy@@

All 250-something ports depending on python3 will be bumped in a few.
Fasten your seatbelts.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.92 2017/01/03 18:54:48 shadchin Exp $
d144 6
a149 4
MAKE_ENV +=	CC=${CC} PYTHONUSERBASE=${_MODPY_USERBASE}
CONFIGURE_ENV += PYTHON="${MODPY_BIN}" \
		ac_cv_prog_PYTHON="${MODPY_BIN}" \
		ac_cv_path_PYTHON="${MODPY_BIN}"
@


1.92
log
@Add a MODPY_PYOEXTENSION variable.
Beginning with Python 3.5 .pyo files are no longer used and
have been replaced by a more flexible scheme that includes
the optimization level explicitly in .pyc name (See PEP-488).
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.91 2016/12/26 19:48:47 rpointel Exp $
d10 1
a10 1
MODPY_DEFAULT_VERSION_3 = 3.4
@


1.91
log
@add the possibility to use 3.6 version for a port.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.90 2016/11/07 16:42:08 jca Exp $
d62 6
d159 1
a159 1
		MODPY_PY_PREFIX ${SUBST_VARS}
@


1.90
log
@Pass ALL_TEST_ENV, not just MAKE_ENV, to the default target.

ok shadchin@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.89 2016/10/31 11:08:16 jasper Exp $
d28 2
a29 1
      ${MODPY_VERSION} != "3.5"
@


1.89
log
@wrap overly-long SUBST_VARS line
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.88 2016/10/29 18:25:01 danj Exp $
d146 4
d172 1
a172 1
	${MODPY_CMD} ${TEST_TARGET}
@


1.88
log
@Update MODPY_SETUPUTILS_DEPEND after py-setuptools update

This commit also introduces MODPY_ABI_TAG for when, an ABI tag is also
used for names of compiled extensions (idea and name from sthen@@)

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.87 2016/03/20 16:12:24 naddy Exp $
d146 3
a148 1
SUBST_VARS :=	MODPY_PYCACHE MODPY_COMMENT MODPY_ABI3SO MODPY_PYC_MAGIC_TAG MODPY_BIN MODPY_EGG_VERSION MODPY_VERSION MODPY_BIN_SUFFIX MODPY_PY_PREFIX ${SUBST_VARS}
@


1.87
log
@drop SHARED_ONLY from python and ruby ports
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.86 2016/03/11 18:13:19 naddy Exp $
d43 1
d57 1
d81 1
a81 1
MODPY_SETUPUTILS_DEPEND ?= devel/py-setuptools${MODPY_FLAVOR}>=18.2v0
d146 1
a146 1
SUBST_VARS :=	MODPY_PYCACHE MODPY_COMMENT MODPY_PYC_MAGIC_TAG MODPY_BIN MODPY_EGG_VERSION MODPY_VERSION MODPY_BIN_SUFFIX MODPY_PY_PREFIX ${SUBST_VARS}
@


1.86
log
@remove NO_SHARED_LIBS
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.85 2016/01/07 21:14:06 jasper Exp $
a72 4
.endif

.if ${MODPY_BUILDDEP:L} == "yes" || ${MODPY_RUNDEP:L} == "yes"
SHARED_ONLY =		Yes
@


1.85
log
@- set a default HOMEPAGE for ports using MODPY_PI
- while here add _MODPY_EGG_NAME and re-use that to define MODPY_PI_DIR

idea from aja@@
ok aja@@ rpointel@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.84 2015/11/26 20:27:30 jasper Exp $
a116 1
.if !defined(NO_SHARED_LIBS) || ${NO_SHARED_LIBS:L} != "yes"
a117 1
.endif
@


1.84
log
@add MODPY_SETUP_ARGS which is used in MODPY_CMD. this allows for passing
arguments to setup.py as will be required by a virt-manager upgrade.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.83 2015/10/09 09:22:48 sthen Exp $
d111 2
a112 1
MODPY_PI_DIR ?=		${DISTNAME:C/^([a-zA-Z0-9]).*/\1/}/${DISTNAME:S/-${MODPY_EGG_VERSION}//}
d114 1
@


1.83
log
@cope with 'env  python' (extra space) in MODPY_BIN_ADJ, ok landry
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.82 2015/09/29 10:50:16 sthen Exp $
d145 2
a146 1
			${MODPY_BIN} ./${MODPY_SETUP}
@


1.82
log
@Force MODPY_SETUPUTILS_DEPEND version dependency on the new version, to
avoid surprises at runtime, edd@@ agrees.

REVISION bump vomit incoming.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.81 2015/09/23 19:26:01 rpointel Exp $
d151 1
a151 1
		-e '$$. == 1 && s|^.*env python.*$$|\#!${MODPY_BIN}|;' \
@


1.81
log
@permit to build ports with 3.5.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.80 2015/04/02 13:57:10 jasper Exp $
d83 1
a83 1
MODPY_SETUPUTILS_DEPEND ?= devel/py-setuptools${MODPY_FLAVOR}
@


1.80
log
@add MODPY_PI which automatically sets MASTER_SITES when set to 'yes'.
if the subdirectory needs to be overriden set MODPY_PI_DIR.

as discussed with sthen@@ and rpointel@@
earlier diff ok rpointel@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.79 2014/12/17 00:31:52 daniel Exp $
d27 2
a28 1
      ${MODPY_VERSION} != "3.4"
@


1.79
log
@Fix MODPY_TKINTER_DEPENDS when MODPY_SETUPTOOLS=Yes.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.78 2014/11/05 12:09:07 naddy Exp $
d107 5
@


1.78
log
@remove python 3.3 leftovers; ok rpointel@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.77 2014/11/01 10:24:16 jca Exp $
d110 1
a110 1
MODPY_TKINTER_DEPENDS =	${MODPY_RUN_DEPENDS},-tkinter
@


1.77
log
@Fix MODPY_LIB_DEPENDS when using setuptools.

The make(1) variables assignements would lead to setuptools added to
MODPY_LIB_DEPENDS (bogus).  py-Pillow was affected but no plist change.
Fix _MODPY_BUILD_DEPENDS similarly, no port affected.
ok ajacoutot@@, also discussed with sthen@@ months ago
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.76 2014/09/29 07:00:22 jasper Exp $
a26 1
      ${MODPY_VERSION} != "3.3" && \
@


1.76
log
@distribute has been merged back into setuptools long time ago; python3 ports
can safely use setuptools now.

ok rpointel@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.75 2014/06/03 11:29:32 rpointel Exp $
d62 2
a63 2
MODPY_LIB_DEPENDS =	${MODPY_RUN_DEPENDS}
_MODPY_BUILD_DEPENDS =	${MODPY_RUN_DEPENDS}
@


1.75
log
@switch our default python 3 to python 3.4.
tested in a bulk build by landry@@ (thanks).
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.74 2014/04/13 07:11:10 rpointel Exp $
d83 1
a83 5
.  if ${MODPY_MAJOR_VERSION} == 2
MODPY_SETUPUTILS_DEPEND ?= devel/py-setuptools
.  elif ${MODPY_MAJOR_VERSION} == 3
MODPY_SETUPUTILS_DEPEND ?= devel/py-distribute${MODPY_FLAVOR}
.  endif
@


1.74
log
@understand Python 3.4.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.73 2013/10/03 16:28:00 dcoppa Exp $
d10 1
a10 1
MODPY_DEFAULT_VERSION_3 = 3.3
@


1.73
log
@Run '${MODPY_CMD} egg_info' at pre-build stage for setuptools-based
python ports and get rid of MODPY_BADEGGS

initial idea by me, better solution suggested by espie@@
ok espie@@, landry@@, rpointel@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.72 2013/09/24 16:55:02 ajacoutot Exp $
d27 2
a28 1
      ${MODPY_VERSION} != "3.3"
@


1.72
log
@Also set ac_cv_path_PYTHON to ${MODPY_BIN} the same way we set
ac_cv_prog_PYTHON. This is needed to prevent conflict between one set to
py2 and the other to py3... yeah configure scripts are stupid.

ok fgsch@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.71 2013/06/28 10:27:49 espie Exp $
d94 1
a120 7

.if defined(MODPY_BADEGGS)
.  for egg in ${MODPY_BADEGGS}
_MODPY_PRE_BUILD_STEPS += ;mkdir -p ${WRKBUILD}/${egg}.egg-info
.  endfor
.endif

@


1.71
log
@fix pre-build-steps to redirect files correctly at the end.

refactor the do-* tests to be usable in cooperation with other modules
that want similar things, like we did in ruby and cmake.

(checked through a bulk-build, ok rpointel@@)
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.70 2013/06/05 11:11:38 sthen Exp $
d145 2
a146 1
		ac_cv_prog_PYTHON="${MODPY_BIN}"
@


1.70
log
@Don't lose the flavour extension when overwriting FULLPKGNAME for python3
flavours. (Only affects the, possibly currently non-existent, case where a
port has python3 and another flavour). Switch to ?= rather than = to permit
further overriding in the port Makefile. Discussed with many, no change
to INDEX, looks good to fgsch@@ rpointel@@.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.69 2013/06/04 08:02:20 fgsch Exp $
d78 1
a78 1
_MODPY_PRE_BUILD_STEPS = @@:
d101 1
d106 2
a107 1
	;echo 'Extension = Feature = find_packages = setup'
d147 1
a147 1
MODPY_CMD =	@@cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} \
d164 8
d176 1
a176 2
	${_MODPY_PRE_BUILD_STEPS}
	${MODPY_CMD} ${MODPY_DISTUTILS_BUILD} ${MODPY_DISTUTILS_BUILDARGS}
d182 1
a182 2
	${MODPY_CMD} ${MODPY_DISTUTILS_BUILD} ${MODPY_DISTUTILS_BUILDARGS} \
		${MODPY_DISTUTILS_INSTALL} ${MODPY_DISTUTILS_INSTALLARGS}
d188 1
a188 1
	${MODPY_CMD} ${TEST_TARGET}
@


1.69
log
@GC python 2.5.  Thanks to zhuk who made this possible.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.68 2013/05/30 14:46:31 ajacoutot Exp $
d46 1
a46 1
FULLPKGNAME =	${PKGNAME:S/^py-/py3-/}
@


1.68
log
@3.2 -> 3.3
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.67 2013/05/30 13:08:59 ajacoutot Exp $
d26 1
a26 2
.  if ${MODPY_VERSION} != "2.5" && \
      ${MODPY_VERSION} != "2.7" && \
a58 6

.if ${MODPY_VERSION} < 2.6
MODPY_JSON =		devel/py-simplejson
.else
MODPY_JSON =
.endif
@


1.67
log
@Bump the default python3 version to 3.3.
Successfully tested with gnome which is the biggest consumer of py3 -- any
regression, please let me know.

discussed with fgsch@@ rpointel@@ sthen@@ jasper@@ landry@@ zhuk@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.66 2013/05/13 19:06:45 fgsch Exp $
a27 1
      ${MODPY_VERSION} != "3.2" && \
@


1.66
log
@make _MODPY_CMD external (remove underscore).
sthen@@ ok
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.65 2013/05/10 06:07:53 ajacoutot Exp $
d10 1
a10 1
MODPY_DEFAULT_VERSION_3 = 3.2
@


1.65
log
@Since we can override MODPY_VERSION, no need to override
MODPY_DEFAULT_VERSION_3 as well.

ok fgsch@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.64 2013/05/03 08:51:05 fgsch Exp $
d153 1
a153 1
_MODPY_CMD =	@@cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} \
d175 1
a175 1
	${_MODPY_CMD} ${MODPY_DISTUTILS_BUILD} ${MODPY_DISTUTILS_BUILDARGS}
d181 1
a181 1
	${_MODPY_CMD} ${MODPY_DISTUTILS_BUILD} ${MODPY_DISTUTILS_BUILDARGS} \
d188 1
a188 1
	${_MODPY_CMD} ${TEST_TARGET}
@


1.64
log
@allow to override the default python 3 version.
needed by and ok ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.63 2013/04/30 17:20:58 sthen Exp $
d10 1
a10 1
MODPY_DEFAULT_VERSION_3 ?= 3.2
@


1.63
log
@revert last MODPY_PY_PREFIX change in SUBST_VARS, it prevents update-plist from
replacing share/doc/py-something with share/doc/${MODPY_PY_PREFIX}-something.
requested by fgsch@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.62 2013/04/28 01:00:33 fgsch Exp $
d10 1
a10 1
MODPY_DEFAULT_VERSION_3 = 3.2
@


1.62
log
@Handle upcoming 3.3 directory
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.61 2013/04/04 12:36:43 sthen Exp $
d156 1
a156 1
SUBST_VARS :=	MODPY_PYCACHE MODPY_COMMENT MODPY_PYC_MAGIC_TAG MODPY_BIN MODPY_EGG_VERSION MODPY_VERSION MODPY_BIN_SUFFIX ^MODPY_PY_PREFIX ${SUBST_VARS}
@


1.61
log
@use ^ before MODPY_PREFIX in SUBST_VARS to reduce bogus subst's (this is
only used by "make plist" and doesn't chnage packages). ok fgsch rpointel aja
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.60 2013/04/01 16:49:53 fgsch Exp $
d28 2
a29 1
      ${MODPY_VERSION} != "3.2"
@


1.60
log
@expose _MODPY_BIN_ADJ (remove underscore)
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.59 2013/03/11 11:20:28 espie Exp $
d155 1
a155 1
SUBST_VARS :=	MODPY_PYCACHE MODPY_COMMENT MODPY_PYC_MAGIC_TAG MODPY_BIN MODPY_EGG_VERSION MODPY_VERSION MODPY_BIN_SUFFIX MODPY_PY_PREFIX ${SUBST_VARS}
@


1.59
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.58 2013/02/09 14:49:51 sthen Exp $
d158 1
a158 1
_MODPY_BIN_ADJ =	perl -pi \
d166 1
a166 1
	${_MODPY_BIN_ADJ} ${WRKSRC}/$${f}; done
@


1.58
log
@Don't use ${FLAVOR:L}, we only support lower-case flavours now.
OK ajacoutot@@ espie@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.57 2012/12/21 18:19:38 fgsch Exp $
d99 1
a99 1
REGRESS_TARGET ?=	test
d185 3
a187 3
.  if !target(do-regress) && ${MODPY_SETUPUTILS:L} == "yes"
do-regress:
	${_MODPY_CMD} ${REGRESS_TARGET}
@


1.57
log
@- expose _MODPY_MAJOR_VERSION (remove underscore)
- use :R to extract the major
- remove unneeded check

rpointel@@ ok. while here add some spaces for consistency with the rest of
the file.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.56 2012/10/14 17:26:12 rpointel Exp $
d16 1
a16 1
.  if ${FLAVOR:L:Mpython3}
@


1.56
log
@remade the MODPY_DEFAULT_VERSION_2 and MODPY_DEFAULT_VERSION_3 external variables,
used in few ports...
spotted by jasper@@ and Alexandr Shadchin.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.55 2012/10/12 19:57:46 rpointel Exp $
d6 1
a6 1
CATEGORIES+=		lang/python
d14 1
a14 1
FLAVOR?=
d18 1
a18 1
MODPY_VERSION?=		${MODPY_DEFAULT_VERSION_3}
d21 1
a21 1
MODPY_VERSION?=		${MODPY_DEFAULT_VERSION_2}
d33 1
a33 1
_MODPY_MAJOR_VERSION =	${MODPY_VERSION:C/\.[1-9]*//g}
d35 1
a35 1
.if ${_MODPY_MAJOR_VERSION} == 2
d44 1
a44 1
.elif ${_MODPY_MAJOR_VERSION} == 3
a56 2
.  else
ERRORS += "Fatal: unknown or unsupported _MODPY_MAJOR_VERSION: ${_MODPY_MAJOR_VERSION}"
d67 3
a69 3
MODPY_RUN_DEPENDS=	lang/python/${MODPY_VERSION}
MODPY_LIB_DEPENDS=	${MODPY_RUN_DEPENDS}
_MODPY_BUILD_DEPENDS=	${MODPY_RUN_DEPENDS}
d71 2
a72 2
MODPY_BUILDDEP?=	Yes
MODPY_RUNDEP?=		Yes
d75 1
a75 1
BUILD_DEPENDS+=		${_MODPY_BUILD_DEPENDS}
d78 1
a78 1
RUN_DEPENDS+=		${MODPY_RUN_DEPENDS}
d82 1
a82 1
SHARED_ONLY=		Yes
d89 1
a89 1
.  if ${_MODPY_MAJOR_VERSION} == 2
d91 1
a91 1
.  elif ${_MODPY_MAJOR_VERSION} == 3
d149 1
a149 1
CONFIGURE_ENV +=PYTHON="${MODPY_BIN}" \
@


1.55
log
@begin to clean python.port.mk by making these variables internal:
_MODPY_DEFAULT_VERSION_2
_MODPY_DEFAULT_VERSION_3
_MODPY_PRE_BUILD_STEPS
_MODPY_BIN_ADJ
ok sthen@@ reads good espie@@.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.54 2012/08/28 19:10:45 espie Exp $
d9 2
a10 2
_MODPY_DEFAULT_VERSION_2 = 2.7
_MODPY_DEFAULT_VERSION_3 = 3.2
d18 1
a18 1
MODPY_VERSION?=		${_MODPY_DEFAULT_VERSION_3}
d21 1
a21 1
MODPY_VERSION?=		${_MODPY_DEFAULT_VERSION_2}
@


1.54
log
@consistent style
okay rpointel@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.53 2012/06/27 18:56:26 rpointel Exp $
d9 2
a10 2
MODPY_DEFAULT_VERSION_2 = 2.7
MODPY_DEFAULT_VERSION_3 = 3.2
d18 1
a18 1
MODPY_VERSION?=		${MODPY_DEFAULT_VERSION_3}
d21 1
a21 1
MODPY_VERSION?=		${MODPY_DEFAULT_VERSION_2}
d87 1
a87 1
MODPY_PRE_BUILD_STEPS = @@:
d108 1
a108 1
MODPY_PRE_BUILD_STEPS +=	\
d130 1
a130 1
MODPY_PRE_BUILD_STEPS += ;mkdir -p ${WRKBUILD}/${egg}.egg-info
d160 1
a160 1
MODPY_BIN_ADJ =	perl -pi \
d168 1
a168 1
	${MODPY_BIN_ADJ} ${WRKSRC}/$${f}; done
d175 1
a175 1
	${MODPY_PRE_BUILD_STEPS}
@


1.53
log
@needed for the python 3.2.3 update (to understand the splendid pep3147...)
ok landry@@.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.52 2012/04/03 09:21:42 ajacoutot Exp $
d88 1
a88 1
.if (defined(MODPY_SETUPTOOLS) && ${MODPY_SETUPTOOLS:U} == YES)
d92 1
a92 1
MODPY_SETUPUTILS_DEPEND?=devel/py-setuptools
d94 1
a94 1
MODPY_SETUPUTILS_DEPEND?=devel/py-distribute${MODPY_FLAVOR}
d97 2
a98 2
MODPY_RUN_DEPENDS+=	${MODPY_SETUPUTILS_DEPEND}
BUILD_DEPENDS+=		${MODPY_SETUPUTILS_DEPEND}
d101 1
a101 1
REGRESS_TARGET?=	test
d119 2
a120 2
.if !defined(NO_SHARED_LIBS) || ${NO_SHARED_LIBS:U} != YES
MODPY_TKINTER_DEPENDS=	${MODPY_RUN_DEPENDS},-tkinter
d123 4
a126 4
MODPY_BIN=		${LOCALBASE}/bin/python${MODPY_VERSION}
MODPY_INCDIR=		${LOCALBASE}/include/python${MODPY_VERSION}${MODPY_LIB_SUFFIX}
MODPY_LIBDIR=		${LOCALBASE}/lib/python${MODPY_VERSION}
MODPY_SITEPKG=		${MODPY_LIBDIR}/site-packages
d136 1
a136 1
MODPY_SETUP?=		setup.py
d139 1
a139 1
MODPY_DISTUTILS_BUILD?=		build --build-base=${WRKSRC}
d142 1
a142 1
MODPY_DISTUTILS_INSTALL?=	install --prefix=${LOCALBASE} \
d146 1
a146 1
MODPY_DISTUTILS_INSTALL?=	install --prefix=${LOCALBASE} \
d150 2
a151 2
MAKE_ENV+=	CC=${CC} PYTHONUSERBASE=${_MODPY_USERBASE}
CONFIGURE_ENV+=	PYTHON="${MODPY_BIN}" \
d154 1
a154 1
_MODPY_CMD=	@@cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} \
d157 1
a157 1
SUBST_VARS:=	MODPY_PYCACHE MODPY_COMMENT MODPY_PYC_MAGIC_TAG MODPY_BIN MODPY_EGG_VERSION MODPY_VERSION MODPY_BIN_SUFFIX MODPY_PY_PREFIX ${SUBST_VARS}
d160 1
a160 1
MODPY_BIN_ADJ=	perl -pi \
d165 1
a165 1
MODPY_ADJ_FILES?=
@


1.52
log
@Add ac_cv_prog_PYTHON in CONFIGURE_ENV. This is needed because sometimes
configure scripts look for hardcoded version of python without taking
into consideration the PYTHON variable we already export.

ok fgsch@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.51 2012/03/31 08:53:57 ajacoutot Exp $
d40 3
d52 5
d157 1
a157 1
SUBST_VARS:=	MODPY_BIN MODPY_EGG_VERSION MODPY_VERSION MODPY_BIN_SUFFIX MODPY_PY_PREFIX ${SUBST_VARS}
@


1.51
log
@Only set SHARED_ONLY if python is needed at build and/or run time and
not just when we use the python MODULE.

ok rpointel@@ fgsch@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.50 2011/12/20 13:08:06 fgsch Exp $
d143 2
a144 1
CONFIGURE_ENV+=	PYTHON="${MODPY_BIN}"
@


1.50
log
@RIP python2.4.
jasper@@ ok
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.49 2011/12/14 20:31:28 rpointel Exp $
a5 2
SHARED_ONLY=		Yes

d73 4
@


1.49
log
@Permit to build Python 2 and Python 3 ports.
ok fgsch@@.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.48 2011/11/29 17:29:37 pascal Exp $
d28 1
a28 2
.  if ${MODPY_VERSION} != "2.4" && \
      ${MODPY_VERSION} != "2.5" && \
@


1.48
log
@Fix MODPY_INCDIR with python3.

ok rpointel@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.47 2011/10/17 13:55:24 espie Exp $
d10 3
a12 1
MODPY_VERSION?=		2.7
d14 1
a14 1
.if ${MODPY_VERSION} == "2.4" || ${MODPY_VERSION} == "2.5" || ${MODPY_VERSION} == "2.7" || ${MODPY_VERSION} == "3.2"
d16 5
a20 2
.  if ${MODPY_VERSION} < 2.6
MODPY_JSON =		devel/py-simplejson
d22 11
a32 1
MODPY_JSON =
d34 1
d36 16
a51 3
.  if ${MODPY_VERSION} < 3.2
MODPY_WANTLIB =	python${MODPY_VERSION}
MODPY_INCDIR =	${LOCALBASE}/include/python${MODPY_VERSION}
d53 7
a59 3
MODPY_WANTLIB = python${MODPY_VERSION}m
MODPY_INCDIR =	${LOCALBASE}/include/python${MODPY_VERSION}m
.  endif
d61 1
a61 1
ERRORS += "Fatal: unknown or unsupported MODPY_VERSION: ${MODPY_VERSION}"
d79 1
a79 2
.if (defined(MODPY_SETUPTOOLS) && ${MODPY_SETUPTOOLS:U} == YES) || \
    (defined(MODPY_DISTRIBUTE) && ${MODPY_DISTRIBUTE:U} == YES)
d82 1
a82 1
.if ${MODPY_SETUPTOOLS:U} == YES
d84 4
a87 3
.else
MODPY_SETUPUTILS_DEPEND ?= devel/py3-distribute
.endif
d103 1
a103 2
	;echo '    msg = "OpenBSD ports: MODPY_SETUPTOOLS = Yes or\\n" \' \
	;echo '          "\\t\\t\\t  MODPY_DISTRIBUTE = Yes required"' \
d115 1
d147 1
a147 1
SUBST_VARS:=	MODPY_BIN MODPY_EGG_VERSION MODPY_VERSION ${SUBST_VARS}
@


1.47
log
@avoid weird error message if something defines MODPY_VERSION to a bad value,
by making sure we're a valid value before we try a numerical test.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.46 2011/10/03 13:54:12 fgsch Exp $
d22 1
d25 1
a82 1
MODPY_INCDIR=		${LOCALBASE}/include/python${MODPY_VERSION}
@


1.46
log
@handle py3-distribute requirement correctly.
sthen@@ rpointel@@ ok.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.45 2011/09/27 21:27:36 sthen Exp $
d12 3
a14 1
.if ${MODPY_VERSION} < 2.6
d16 1
a16 1
.else
d18 1
a18 1
.endif
d20 1
a20 1
.if ${MODPY_VERSION} < 3.2
d22 3
d26 1
a26 1
MODPY_WANTLIB = python${MODPY_VERSION}m
d28 1
@


1.45
log
@let Python use PKGSPEC infrastructure, discussed with and variable name
suggestion from fgsch@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.44 2011/09/22 09:44:40 sthen Exp $
d49 1
d56 1
a56 1
_MODPY_SETUPTOOLS_FAKE_DIR =	\
d59 2
a60 2
	;mkdir -p ${_MODPY_SETUPTOOLS_FAKE_DIR} \
	;exec >${_MODPY_SETUPTOOLS_FAKE_DIR}/__init__.py \
d66 1
d92 1
a92 1
.if defined(MODPY_SETUPTOOLS) && ${MODPY_SETUPTOOLS:U} == YES
d137 1
a137 2
.  if !target(do-regress) && \
      defined(MODPY_SETUPTOOLS) && ${MODPY_SETUPTOOLS:U} == YES
@


1.44
log
@reinstate MODPYSPEC and restore MODPY_RUN_DEPENDS to previous
same diff/ok fgsch@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.43 2011/09/21 14:37:28 fgsch Exp $
a10 10
.if ${MODPY_VERSION} == 2.4
MODPY_VSPEC = >=${MODPY_VERSION},<2.5
.elif ${MODPY_VERSION} == 2.5
MODPY_VSPEC = >=${MODPY_VERSION},<2.6
.elif ${MODPY_VERSION} == 2.7
MODPY_VSPEC = >=${MODPY_VERSION},<2.8
.elif ${MODPY_VERSION} == 3.2
MODPY_VSPEC = >=${MODPY_VERSION},<3.3
.endif
MODPYSPEC = python-${MODPY_VSPEC}
d23 1
a23 1
MODPY_RUN_DEPENDS=	${MODPYSPEC}:lang/python/${MODPY_VERSION}
d69 1
a69 1
MODPY_TKINTER_DEPENDS=	STEM-${MODPY_VSPEC}:lang/python/${MODPY_VERSION},-tkinter
@


1.43
log
@Merge in support for python3.
remi@@ sthen@@ ok
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.42 2011/06/08 17:28:14 rpointel Exp $
d20 1
d33 1
a33 1
MODPY_RUN_DEPENDS=	lang/python/${MODPY_VERSION}
@


1.42
log
@Switch default to python 2.7.
Discussed and ok from many. Bumps will follow.
"go go go" from jasper@@.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.41 2011/04/24 09:19:01 rpointel Exp $
a14 2
.elif ${MODPY_VERSION} == 2.6
MODPY_VSPEC = >=${MODPY_VERSION},<2.7
d17 2
a19 1
MODPYSPEC = python-${MODPY_VSPEC}
d27 6
a32 2
MODPY_WANTLIB=		python${MODPY_VERSION}
MODPY_RUN_DEPENDS=	${MODPYSPEC}:lang/python/${MODPY_VERSION}
d47 2
a48 1
.if defined(MODPY_SETUPTOOLS) && ${MODPY_SETUPTOOLS:U} == YES
d51 1
d53 3
d70 2
a71 1
	;echo '    msg = "OpenBSD ports: MODPY_SETUPTOOLS = Yes is required"' \
@


1.41
log
@Prepare import of python 2.7.
(Not linked to the build, and not made the default python).
ok landry@@, fgsch@@.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.40 2010/11/17 08:05:18 espie Exp $
d10 1
a10 1
MODPY_VERSION?=		2.6
@


1.40
log
@new depends
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.39 2010/10/26 14:29:26 ajacoutot Exp $
d17 2
@


1.39
log
@Add a MODPY_BIN_ADJ variable for python shebang substitution. It will
automatically change from scripts from using /usr/bin/env python or
/usr/bin/python to using #!${MODPY_BIN} .
Add a MODPY_ADJ_FILES in which you can put the files that are under
${WRKSRC} you want to subtitute the shebang.
e.g.
MODPY_ADJ_FILES= setup.py bin/foobar.py.in


Some input from djm@@
"sane idea to me" jasper, ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.38 2010/10/24 15:53:55 sthen Exp $
d21 1
a21 1
MODPY_JSON =		::devel/py-simplejson
d27 1
a27 1
MODPY_RUN_DEPENDS=	:${MODPYSPEC}:lang/python/${MODPY_VERSION}
d45 1
a45 1
MODPY_SETUPUTILS_DEPEND?=:py-setuptools-*:devel/py-setuptools
d67 1
a67 1
MODPY_TKINTER_DEPENDS=	:python-tkinter-${MODPY_VSPEC}:lang/python/${MODPY_VERSION},-tkinter
@


1.38
log
@Add MODPY_WANTLIB, adjust MODPY_LIB_DEPENDS to new-style LIB_DEPENDS,
update all ports to match. Plists don't change -> no bump.
Looks ok to jasper.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.37 2010/09/16 22:58:19 fgsch Exp $
d104 12
@


1.37
log
@- Add a MODPY_JSON var soon to be used by ports requiring simplejson when
  built with python versions previous to 2.6.
- Simplify MODPY_BADEGGS.
- Fake setuptools if MODPY_SETUPTOOLS is not present to detect those ports
  that will build regardless but the resulting plist will be different.
Input, tested and ok by many, thanks!
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.36 2010/08/30 16:35:02 fgsch Exp $
d26 1
d28 2
a29 2
MODPY_LIB_DEPENDS=	python${MODPY_VERSION}:${MODPYSPEC}:lang/python/${MODPY_VERSION}
_MODPY_BUILD_DEPENDS=	:${MODPYSPEC}:lang/python/${MODPY_VERSION}
@


1.36
log
@Switch default to python 2.6.
Discussed and ok from many. Bumps will follow.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.35 2010/07/29 08:39:53 djm Exp $
d20 6
d40 1
d49 14
a73 2
MODPY_POST_BUILD_BAD_EGGS = @@:
MODPY_PRE_INSTALL_BAD_EGGS = @@:
d76 1
a76 2
MODPY_POST_BUILD_BAD_EGGS += ;ln -sf ${WRKINST}/${egg}.egg-info ${WRKBUILD}/${egg}.egg-info
MODPY_PRE_INSTALL_BAD_EGGS += ;mkdir -p ${WRKINST}/${egg}.egg-info
d96 1
a96 1
MAKE_ENV+=	CC=${CC}
d108 1
a109 1
	${MODPY_POST_BUILD_BAD_EGGS}
a114 1
	${MODPY_PRE_INSTALL_BAD_EGGS}
@


1.35
log
@revert previous; hppa is sick and needs to be fixed first
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.33 2010/07/22 10:39:19 ajacoutot Exp $
d10 2
a11 4
MODPY_VERSION?=		2.5
.if ${MODPY_VERSION} == 2.3
MODPY_VSPEC = >=${MODPY_VERSION},<2.4
.elif ${MODPY_VERSION} == 2.4
@


1.34
log
@Move to python-2.6 by default; requested by fgsch@@
@
text
@d10 4
a13 2
MODPY_VERSION?=		2.6
.if ${MODPY_VERSION} == 2.4
@


1.33
log
@Add a MODPY_BUILDDEP variable so we can use the python MODULE without
actually needing python. This will allow removal of some hacks in tree.
Remove XXX.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.32 2010/07/15 07:55:29 sthen Exp $
d10 2
a11 4
MODPY_VERSION?=		2.5
.if ${MODPY_VERSION} == 2.3
MODPY_VSPEC = >=${MODPY_VERSION},<2.4
.elif ${MODPY_VERSION} == 2.4
@


1.32
log
@update the list of ports which hardcode the python version
(subversion and pinot, as well as gtk+2 which is already listed).
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.31 2010/02/27 17:52:18 espie Exp $
a9 1
# XXX devel/subversion, x11/gtk+2 and x11/pinot hardcode this.
d26 1
d29 1
a29 1
.if ${NO_BUILD:L} == "no"
@


1.31
log
@the egg framework is fucked up (modifies stuff in WRKBUILD during install),
so work around by tricking it to write into WRKINST through a symlink.

keep this here, so that affected ports need minimal modifications, and we
can work out a better fix long term.

Agreed with wcmaier...
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.30 2009/08/08 21:58:10 sthen Exp $
d10 1
a10 1
# XXX x11/gtk+2 hardcodes this.
@


1.30
log
@Add a comment noting that x11/gtk+2 hardcodes the python version;
ajacoutot@@ agrees with doing it this way.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.29 2009/04/26 10:49:33 ajacoutot Exp $
d55 10
d93 1
d99 1
@


1.29
log
@Add CONFIGURE_ENV += PYTHON="${MODPY_BIN}"

Lots of python ports already do this, so better factorize. It will also
help mitigate some build breakages when several python versions are
installed.

Related ports cleanup coming in a few...

"looks ok" wcmaier@@
"makes sense" sthen@@
"no objection"  djm@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.28 2009/03/15 13:03:41 espie Exp $
d10 1
@


1.28
log
@A few more python deps, tweak python module to handle tkinter
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.27 2009/03/09 23:09:19 espie Exp $
d70 1
@


1.27
log
@a few spec fixes and assorted pkg bumps, more to come.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.26 2009/01/01 21:03:27 djm Exp $
d12 1
a12 1
MODPYSPEC=python->=${MODPY_VERSION},<2.4
d14 1
a14 1
MODPYSPEC=python->=${MODPY_VERSION},<2.5
d16 1
a16 1
MODPYSPEC=python->=${MODPY_VERSION},<2.6
d18 1
a18 1
MODPYSPEC=python->=${MODPY_VERSION},<2.7
d20 1
d46 1
a46 1
MODPY_TKINTER_DEPENDS=	:python-tkinter-${MODPY_VERSION}*:lang/python/${MODPY_VERSION},-tkinter
@


1.26
log
@Updates and garbage collect all three Python ports:

    2.4.4 => 2.4.8
    2.5.2 => 2.5.4
    2.6 => 2.6.1

Python 2.4 and 2.5 lose their build knobs to match 2.6.

Removes no longer needed Python 2.5 security patches backported
from the release25-maint SVN branch.

Remove the -bz2 subpackage from all three versions. It is silly
to make a subpackage to avoid depending on something tiny and
compatibly licensed.

Python 2.4 and 2.5 lose their -expat subpackages; expat has been
in base for some time.

Python 2.5 loses its sqlite subpackge. Again, sqlite is tiny,
compatibly licensed and is depended upon by more and more
applications. This brings it into line with the 2.6 version.

Rework all three version's handling of setup.py. Rather than regex
replacing LOCALBASE and X11BASE into setup.py post-configure, these
are passed in though environment variables. Will save hours of
frustrated cursing familiar to anyone who has accidently used the
update-patches target after configure and had to go back and redo
all the substitutions.

Rework the patching of setup.py for 2.4 and 2.5 to be more like
what we do for 2.6. I.e. keep the diff minimal and avoid deleting
huge blocks of code, so the diff has a chance of applying without
massive hand-editing each patch release.

Fix .py paths in installed .pyc files (patch from eric@@)

feedback from several, particularly eric@@, ajacoutot@@ and Ingo
Schwarze; "get it in" ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.25 2008/12/16 06:32:27 fgsch Exp $
d11 9
d21 3
a23 3
MODPY_RUN_DEPENDS=	:python-${MODPY_VERSION}*:lang/python/${MODPY_VERSION}
MODPY_LIB_DEPENDS=	python${MODPY_VERSION}:python-${MODPY_VERSION}*:lang/python/${MODPY_VERSION}
_MODPY_BUILD_DEPENDS=	:python-${MODPY_VERSION}*:lang/python/${MODPY_VERSION}
@


1.25
log
@No expat dependency for 2.6. djm@@ ok.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.24 2008/10/27 00:02:27 ajacoutot Exp $
a35 3
.if ${MODPY_VERSION} != "2.6"
MODPY_EXPAT_DEPENDS=	:python-expat-${MODPY_VERSION}*:lang/python/${MODPY_VERSION},-expat	
.endif
d55 2
a56 1
MODPY_DISTUTILS_INSTALL?=	install --prefix=${PREFIX}
@


1.24
log
@- add MODPY_BIN to SUBST_VARS

"+1" wcmaier_p, "yes please" steven@@, "remove python" mbalmer@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.23 2008/06/10 15:01:49 wcmaier Exp $
d36 1
d38 1
@


1.23
log
@Prepend MODPY_* variables in SUBST_VARS.

Previously, when eg MODPY_VERSION is a substring of a variable added
to SUBST_VARS in a port's Makefile, pain on update-plist can ensue.
Makes updates on www/py-django more fun. Tests and feedback from
merdely@@ and Darrin Chandler; thanks!

ok steven@@, "if it doesn't break anything..." fgsch@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.22 2008/04/09 21:45:54 wcmaier Exp $
d64 1
a64 1
SUBST_VARS:=	MODPY_EGG_VERSION MODPY_VERSION ${SUBST_VARS}
@


1.22
log
@Add MODPY_EGG_VERSION to SUBST_VARS to make PLIST updates nicer.
This'll prevent setuptools from creating egg-info filenames
encoded with the package version (even when MODPY_SETUPTOOLS
isn't enabled).

ok mbalmer@@, eric@@, merdely@@; input from many py porters
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.21 2008/01/20 15:28:29 ajacoutot Exp $
d64 1
a64 1
SUBST_VARS+=	MODPY_VERSION MODPY_EGG_VERSION
@


1.21
log
@- set SHARED_ONLY=Yes for this module

mbalmer: "python is only runnable on shared arches, all extensions use dlopen()"
no objections from jasper@@ espie@@ mbalmer@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.20 2007/12/10 21:06:58 martynas Exp $
d64 1
a64 1
SUBST_VARS+=	MODPY_VERSION
@


1.20
log
@add lang/python category;  ok steven@@ ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.19 2007/10/22 10:14:02 steven Exp $
d5 2
@


1.19
log
@replace MODPY_NO_RUNDEP with MODPY_RUNDEP (yes by default)
add MODPY_LIB_DEPENDS

no objection djm@@, ok bernd@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.18 2007/10/10 21:44:06 steven Exp $
d5 2
@


1.18
log
@oops, missing :L
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.17 2007/10/10 21:42:14 steven Exp $
d9 1
d12 1
a12 1
MODPY_NO_RUNDEP?=	No
d17 1
a17 1
.if ${MODPY_NO_RUNDEP:L} == "no"
@


1.17
log
@add MODPY_NO_RUNDEP (set to no by default) to be able to use all the
variables from the python module without adding python to RUN_DEPENDS.

requested by and ok bernd@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.16 2007/10/08 08:21:33 steven Exp $
d16 1
a16 1
.if ${MODPY_NO_RUNDEP} == "no"
@


1.16
log
@switch default python version to 2.5

discussed with martynas and djm
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.15 2007/05/22 15:34:26 martynas Exp $
d11 2
d16 1
d18 1
@


1.15
log
@use REGRESS_TARGET with setuptools and make it default to test
looks good to steven@@; makes sense to xsa@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.14 2006/11/26 10:16:22 steven Exp $
d6 1
a6 1
MODPY_VERSION?=		2.4
@


1.14
log
@introduce MODPY_RUN_DEPENDS
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.13 2006/09/26 15:27:02 djm Exp $
d16 1
a18 1
.if defined(MODPY_SETUPTOOLS) && ${MODPY_SETUPTOOLS:U} == YES
d22 2
d75 1
a75 1
	${_MODPY_CMD} test
@


1.13
log
@support bits for setuptools-style ports, activated using:

MODPY_SETUPTOOLS = Yes

feedback and ok xsa@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.12 2006/06/03 09:14:04 alek Exp $
d8 1
d14 1
a14 1
RUN_DEPENDS+=		${_MODPY_BUILD_DEPENDS}
d20 1
a20 1
RUN_DEPENDS+=		${MODPY_SETUPUTILS_DEPEND}
@


1.12
log
@Switch default python version to 2.4
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.11 2006/01/27 17:50:54 bernd Exp $
d15 8
d38 6
d45 1
d67 8
@


1.11
log
@Don't override do-build and do-install targets if CONFIGURE_STYLE is used.

"put this in" alek@@
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.10 2004/08/06 07:33:19 xsa Exp $
d6 1
a6 1
MODPY_VERSION?=		2.3
@


1.10
log
@
introduce MODPY_TKINTER_DEPENDS and MODPY_EXPAT_DEPENDS to deal
with -tkinter and -expat subpackages on no shared libs archs;
from discussion with espie@@. Python maintainer agrees as well.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.9 2004/06/21 23:25:07 xsa Exp $
d40 2
a41 1
.if !target(do-build)
d44 1
a44 1
.endif
d47 1
a47 1
.if !target(do-install)
d51 1
@


1.9
log
@
respect CC when building ports with distutils as it checks if
the env variable CC is, if yes, it uses it...
okay sturm@@.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.8 2004/05/15 09:24:12 xsa Exp $
d14 5
@


1.8
log
@
use LOCALBASE instead of PREFIX for directories that are already
created by python itself; while here add MODPY_INCDIR;
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.7 2004/02/06 08:37:22 xsa Exp $
d26 2
@


1.7
log
@
no BUILD_DEPENDS for NO_BUILD= Yes ports;
ok sturm@@.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.6 2004/01/22 06:28:35 sturm Exp $
d16 1
d18 1
a18 1
MODPY_SITEPKG=		${PREFIX}/lib/python${MODPY_VERSION}/site-packages
@


1.6
log
@switch modules to python 2.3 by default

prodded by Xavier Santolaria who helped testing
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.5 2003/10/10 16:38:18 sturm Exp $
d10 1
d12 1
@


1.5
log
@Most python ports rebuild their files at install time, as root. This
removes this behaviour, additionally "make clean" is now able to clean
such a port's directory and no longer fails due to missing permissions.

from Andrew Dalgleish via Xavier Santolaria
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.4 2003/08/12 20:23:20 sturm Exp $
d6 1
a6 1
MODPY_VERSION?=		2.2
@


1.4
log
@- add new variables MODPY_LIBDIR and MODPY_SITEPKG
- make MODPY_CMD intern

from Xavier Santolaria <xavier@@santolaria.net>
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.3 2003/07/31 07:01:21 jolan Exp $
d38 2
a39 1
	${_MODPY_CMD} ${MODPY_DISTUTILS_INSTALL} ${MODPY_DISTUTILS_INSTALLARGS}
@


1.3
log
@Author (Xavier Santolaria) puts these into the PD.
@
text
@d1 1
a1 1
# $OpenBSD: python.port.mk,v 1.2 2003/07/29 19:35:32 sturm Exp $
d14 2
d24 1
a24 1
MODPY_CMD=	@@cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} \
d32 1
a32 1
	${MODPY_CMD} ${MODPY_DISTUTILS_BUILD} ${MODPY_DISTUTILS_BUILDARGS}
d38 1
a38 1
	${MODPY_CMD} ${MODPY_DISTUTILS_INSTALL} ${MODPY_DISTUTILS_INSTALLARGS}
@


1.2
log
@use MAKE_ENV when building/installing

from Xavier Santolaria <xavier@@santolaria.net>
@
text
@d1 4
a4 1
# $OpenBSD: python.port.mk,v 1.1 2003/07/28 17:48:13 sturm Exp $
@


1.1
log
@python module for all standard python ports

from Xavier Santolaria <xavier@@santolaria.net>
@
text
@d1 1
a1 1
# $OpenBSD$
d19 2
a20 1
MODPY_CMD=	@@cd ${WRKSRC} && ${MODPY_BIN} ./${MODPY_SETUP}
@

