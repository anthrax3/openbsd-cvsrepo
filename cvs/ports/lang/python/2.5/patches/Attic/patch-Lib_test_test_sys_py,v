head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.0.22
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.20
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.18
	OPENBSD_5_0:1.1.0.16
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.14
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.12
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.8
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.06.04.08.02.20;	author fgsch;	state dead;
branches;
next	1.1;

1.1
date	2008.02.27.00.30.47;	author djm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@GC python 2.5.  Thanks to zhuk who made this possible.
@
text
@$OpenBSD: patch-Lib_test_test_sys_py,v 1.1 2008/02/27 00:30:47 djm Exp $
--- Lib/test/test_sys.py.orig	Tue Jul 25 14:07:22 2006
+++ Lib/test/test_sys.py	Tue Feb 19 14:44:47 2008
@@@@ -345,10 +345,11 @@@@ class SysModuleTest(unittest.TestCase):
         self.assert_(vi[3] in ("alpha", "beta", "candidate", "final"))
         self.assert_(isinstance(vi[4], int))
 
-    def test_43581(self):
-        # Can't use sys.stdout, as this is a cStringIO object when
-        # the test runs under regrtest.
-        self.assert_(sys.__stdout__.encoding == sys.__stderr__.encoding)
+    # This test is simply broken when run with a redirected stdout
+    #def test_43581(self):
+    #    # Can't use sys.stdout, as this is a cStringIO object when
+    #    # the test runs under regrtest.
+    #    self.assert_(sys.__stdout__.encoding == sys.__stderr__.encoding)
 
 def test_main():
     test.test_support.run_unittest(SysModuleTest)
@


1.1
log
@python-2.5.2

tested with a full ports build by naddy@@ ok pvalchev@@
@
text
@d1 1
a1 1
$OpenBSD$
@

