head	1.2;
access;
symbols
	OPENBSD_3_7:1.1.0.14
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.12
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.10
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.8
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_1:1.1.0.4
	OPENBSD_3_2:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2005.05.17.17.53.25;	author alek;	state dead;
branches;
next	1.1;

1.1
date	2002.10.08.02.52.25;	author brad;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2002.10.08.03.08.45;	author brad;	state Exp;
branches;
next	;

1.1.4.1
date	2002.10.11.23.50.40;	author brad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove old version as we have newer ones.

ok mbalmer@@, krw@@ (and others too)
@
text
@$OpenBSD: patch-Modules_Setup_dist,v 1.1 2002/10/08 02:52:25 brad Exp $
--- Modules/Setup.dist.orig	Thu Mar 22 17:18:55 2001
+++ Modules/Setup.dist	Mon Oct  7 21:51:07 2002
@@@@ -97,6 +97,7 @@@@ PYTHONPATH=$(COREPYTHONPATH)
 # setup.py script in the root of the Python source tree.
 
 posix posixmodule.c		# posix (UNIX) system calls
+errno errnomodule.c		# posix (UNIX) errno values
 _sre _sre.c			# Fredrik Lundh's new regular expressions
 
 # The rest of the modules listed in this file are all commented out by
@@@@ -162,7 +163,6 @@@@ GLHACK=-Dclear=__GLclear
 #fcntl fcntlmodule.c	# fcntl(2) and ioctl(2)
 #pwd pwdmodule.c		# pwd(3) 
 #grp grpmodule.c		# grp(3)
-#errno errnomodule.c	# posix (UNIX) errno values
 #select selectmodule.c	# select(2); not on ancient System V
 
 # Memory-mapped files (also works on Win32).
@


1.1
log
@Fix security issue with Python 2.1/2.2

Zack Weinberg found a vulnerability in the way the exevpe() method
from the os.py module uses a temporary file name. A file which
supposedly should not exist is created in a unsafe way and the method
tries to execute it. The objective of such code is to discover what
error the operating system returns in a portable way.

By exploiting this vulnerability a local attacker can execute
arbitrary code with the privileges of the user running python code
which uses the execvpe() method.

http://python.org/sf/590294
http://python.org/sf/601077
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.4.1
log
@Fix security issue with Python 2.1/2.2

Zack Weinberg found a vulnerability in the way the exevpe() method
from the os.py module uses a temporary file name. A file which
supposedly should not exist is created in a unsafe way and the method
tries to execute it. The objective of such code is to discover what
error the operating system returns in a portable way.

By exploiting this vulnerability a local attacker can execute
arbitrary code with the privileges of the user running python code
which uses the execvpe() method.

http://python.org/sf/590294
http://python.org/sf/601077
@
text
@d3 1
a3 1
+++ Modules/Setup.dist	Fri Oct 11 19:08:45 2002
@


1.1.2.1
log
@Fix security issue with Python 2.1/2.2

Zack Weinberg found a vulnerability in the way the exevpe() method
from the os.py module uses a temporary file name. A file which
supposedly should not exist is created in a unsafe way and the method
tries to execute it. The objective of such code is to discover what
error the operating system returns in a portable way.

By exploiting this vulnerability a local attacker can execute
arbitrary code with the privileges of the user running python code
which uses the execvpe() method.

http://python.org/sf/590294
http://python.org/sf/601077
@
text
@@

