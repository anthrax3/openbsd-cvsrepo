head	1.3;
access;
symbols
	OPENBSD_5_3:1.1.1.1.0.6
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	fgsch_20110920:1.1.1.1
	fgsch:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.05.30.14.44.55;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2013.04.28.00.55.26;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2011.09.20.10.51.26;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.09.20.10.51.26;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove python 3.2 now that 3.3 is the default. There is no point in keeping
2 different versions of py3.

ok jasper@@ fgsch@@
@
text
@$OpenBSD: patch-Modules_selectmodule_c,v 1.2 2013/04/28 00:55:26 fgsch Exp $

See http://bugs.python.org/issue12181 for details.

--- Modules/selectmodule.c.orig	Sat Apr  6 08:38:44 2013
+++ Modules/selectmodule.c	Mon Apr 22 17:50:09 2013
@@@@ -1209,6 +1209,23 @@@@ static PyTypeObject kqueue_queue_Type;
 #   error uintptr_t does not match int, long, or long long!
 #endif
 
+/*
+ * kevent is not standard and its members vary across BSDs.
+ */
+#if !defined(__OpenBSD__)
+#   define IDENT_TYPE	T_UINTPTRT
+#   define IDENT_CAST	Py_intptr_t
+#   define DATA_TYPE	T_INTPTRT
+#   define DATA_FMT_UNIT INTPTRT_FMT_UNIT
+#   define IDENT_AsType	PyLong_AsUintptr_t
+#else
+#   define IDENT_TYPE	T_UINT
+#   define IDENT_CAST	int
+#   define DATA_TYPE	T_INT
+#   define DATA_FMT_UNIT "i"
+#   define IDENT_AsType	PyLong_AsUnsignedLong
+#endif
+
 /* Unfortunately, we can't store python objects in udata, because
  * kevents in the kernel can be removed without warning, which would
  * forever lose the refcount on the object stored with it.
@@@@ -1216,11 +1233,11 @@@@ static PyTypeObject kqueue_queue_Type;
 
 #define KQ_OFF(x) offsetof(kqueue_event_Object, x)
 static struct PyMemberDef kqueue_event_members[] = {
-    {"ident",           T_UINTPTRT,     KQ_OFF(e.ident)},
+    {"ident",           IDENT_TYPE,     KQ_OFF(e.ident)},
     {"filter",          T_SHORT,        KQ_OFF(e.filter)},
     {"flags",           T_USHORT,       KQ_OFF(e.flags)},
     {"fflags",          T_UINT,         KQ_OFF(e.fflags)},
-    {"data",            T_INTPTRT,      KQ_OFF(e.data)},
+    {"data",            DATA_TYPE,      KQ_OFF(e.data)},
     {"udata",           T_UINTPTRT,     KQ_OFF(e.udata)},
     {NULL} /* Sentinel */
 };
@@@@ -1246,7 +1263,7 @@@@ kqueue_event_init(kqueue_event_Object *self, PyObject 
     PyObject *pfd;
     static char *kwlist[] = {"ident", "filter", "flags", "fflags",
                              "data", "udata", NULL};
-    static char *fmt = "O|hhi" INTPTRT_FMT_UNIT UINTPTRT_FMT_UNIT ":kevent";
+    static char *fmt = "O|hhi" DATA_FMT_UNIT UINTPTRT_FMT_UNIT ":kevent";
 
     EV_SET(&(self->e), 0, EVFILT_READ, EV_ADD, 0, 0, 0); /* defaults */
 
@@@@ -1256,8 +1273,12 @@@@ kqueue_event_init(kqueue_event_Object *self, PyObject 
         return -1;
     }
 
-    if (PyLong_Check(pfd)) {
-        self->e.ident = PyLong_AsUintptr_t(pfd);
+    if (PyLong_Check(pfd)
+#if IDENT_TYPE == T_UINT
+	&& PyLong_AsUnsignedLong(pfd) < UINT_MAX
+#endif
+    ) {
+        self->e.ident = IDENT_AsType(pfd);
     }
     else {
         self->e.ident = PyObject_AsFileDescriptor(pfd);
@@@@ -1285,10 +1306,10 @@@@ kqueue_event_richcompare(kqueue_event_Object *s, kqueu
             Py_TYPE(s)->tp_name, Py_TYPE(o)->tp_name);
         return NULL;
     }
-    if (((result = s->e.ident - o->e.ident) == 0) &&
+    if (((result = (IDENT_CAST)(s->e.ident - o->e.ident)) == 0) &&
         ((result = s->e.filter - o->e.filter) == 0) &&
         ((result = s->e.flags - o->e.flags) == 0) &&
-        ((result = s->e.fflags - o->e.fflags) == 0) &&
+        ((result = (int)(s->e.fflags - o->e.fflags)) == 0) &&
         ((result = s->e.data - o->e.data) == 0) &&
         ((result = s->e.udata - o->e.udata) == 0)
        ) {
@


1.2
log
@Update to 3.2.4.
Bring patches from 2.7, remove unneeded ones, change plist to not conflict
with upcoming 3.3.1 version and update changes specific to OpenBSD.
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_selectmodule_c,v 1.4 2013/04/13 22:31:42 fgsch Exp $
@


1.1
log
@Initial revision
@
text
@d1 31
a31 5
$OpenBSD: patch-Modules_selectmodule_c,v 1.1.1.1 2011/06/27 18:44:14 rpointel Exp $
--- Modules/selectmodule.c.orig	Wed Nov  3 13:27:33 2010
+++ Modules/selectmodule.c	Thu Jun  2 00:40:37 2011
@@@@ -1215,6 +1215,7 @@@@ static PyTypeObject kqueue_queue_Type;
  */
a33 1
+#if !defined(__OpenBSD__)
d35 2
a36 1
     {"ident",           T_UINTPTRT,     KQ_OFF(e.ident)},
d38 4
a41 1
@@@@ -1224,6 +1225,19 @@@@ static struct PyMemberDef kqueue_event_members[] = {
d45 18
a62 12
+#else
+static struct PyMemberDef kqueue_event_members[] = {
+    {"ident",           T_UINT,         KQ_OFF(e.ident)},
+    {"filter",          T_SHORT,        KQ_OFF(e.filter)},
+    {"flags",           T_USHORT,       KQ_OFF(e.flags)},
+    {"fflags",          T_UINT,         KQ_OFF(e.fflags)},
+    {"data",            T_INT,          KQ_OFF(e.data)},
+    {"udata",           T_UINTPTRT,     KQ_OFF(e.udata)},
+    {NULL} /* Sentinel */
+};
+# undef INTPTRT_FMT_UNIT
+# define INTPTRT_FMT_UNIT   "i"
d64 6
a69 4
 #undef KQ_OFF
 
 static PyObject *
@@@@ -1285,10 +1299,10 @@@@ kqueue_event_richcompare(kqueue_event_Object *s, kqueu
d74 1
a74 1
+    if (((result = (int)(s->e.ident - o->e.ident)) == 0) &&
@


1.1.1.1
log
@Reimport 3.2 under lang/python in preparation to merge lang/python3 under
lang/python.
remi@@ sthen@@ ok.
@
text
@@
