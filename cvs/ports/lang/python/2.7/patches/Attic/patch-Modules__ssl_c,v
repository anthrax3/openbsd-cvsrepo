head	1.4;
access;
symbols
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2015.05.31.07.56.10;	author rpointel;	state dead;
branches;
next	1.3;
commitid	qCtVfCdwLsiLYx98;

1.3
date	2014.12.14.08.32.55;	author rpointel;	state Exp;
branches;
next	1.2;
commitid	9umKNgkjnmUkN8MF;

1.2
date	2014.07.11.06.59.43;	author rpointel;	state Exp;
branches;
next	1.1;
commitid	AwBHCcOhAdtRO1qA;

1.1
date	2014.04.19.12.43.47;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update python to 2.7.10.
ok aja@@
@
text
@$OpenBSD: patch-Modules__ssl_c,v 1.3 2014/12/14 08:32:55 rpointel Exp $
--- Modules/_ssl.c.orig	Wed Dec 10 16:59:53 2014
+++ Modules/_ssl.c	Sat Dec 13 12:16:17 2014
@@@@ -3301,32 +3301,6 @@@@ Returns 1 if the OpenSSL PRNG has been seeded with eno
 It is necessary to seed the PRNG with RAND_add() on some platforms before\n\
 using the ssl() function.");
 
-static PyObject *
-PySSL_RAND_egd(PyObject *self, PyObject *arg)
-{
-    int bytes;
-
-    if (!PyString_Check(arg))
-        return PyErr_Format(PyExc_TypeError,
-                            "RAND_egd() expected string, found %s",
-                            Py_TYPE(arg)->tp_name);
-    bytes = RAND_egd(PyString_AS_STRING(arg));
-    if (bytes == -1) {
-        PyErr_SetString(PySSLErrorObject,
-                        "EGD connection failed or EGD did not return "
-                        "enough data to seed the PRNG");
-        return NULL;
-    }
-    return PyInt_FromLong(bytes);
-}
-
-PyDoc_STRVAR(PySSL_RAND_egd_doc,
-"RAND_egd(path) -> bytes\n\
-\n\
-Queries the entropy gather daemon (EGD) on the socket named by 'path'.\n\
-Returns number of bytes read.  Raises SSLError if connection to EGD\n\
-fails or if it does not provide enough data to seed PRNG.");
-
 #endif /* HAVE_OPENSSL_RAND */
 
 
@@@@ -3720,8 +3694,6 @@@@ static PyMethodDef PySSL_methods[] = {
 #ifdef HAVE_OPENSSL_RAND
     {"RAND_add",            PySSL_RAND_add, METH_VARARGS,
      PySSL_RAND_add_doc},
-    {"RAND_egd",            PySSL_RAND_egd, METH_VARARGS,
-     PySSL_RAND_egd_doc},
     {"RAND_status",         (PyCFunction)PySSL_RAND_status, METH_NOARGS,
      PySSL_RAND_status_doc},
 #endif
@


1.3
log
@Update Python 2.7 to 2.7.9.
ok sthen@@, also tested on macppc by Fred <openbsd@@crowsons.com> (thanks).
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules__ssl_c,v 1.2 2014/07/11 06:59:43 rpointel Exp $
@


1.2
log
@Update Python to 2.7.8.
Changelog: http://hg.python.org/cpython/raw-file/v2.7.8/Misc/NEWS
ok daniel@@ (thanks for the 2 patches).
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules__ssl_c,v 1.1 2014/04/19 12:43:47 espie Exp $
--- Modules/_ssl.c.orig	Mon Jun 30 04:05:42 2014
+++ Modules/_ssl.c	Wed Jul  9 11:41:16 2014
@@@@ -1601,32 +1601,6 @@@@ Returns 1 if the OpenSSL PRNG has been seeded with eno
d37 1
a37 1
@@@@ -1640,8 +1614,6 @@@@ static PyMethodDef PySSL_methods[] = {
d41 1
a41 1
-    {"RAND_egd",            PySSL_RAND_egd, METH_O,
@


1.1
log
@zap RAND_egd, allow python to build.
okay sthen@@
@
text
@d1 4
a4 4
$OpenBSD$
--- Modules/_ssl.c.orig	Sat Apr 19 05:09:46 2014
+++ Modules/_ssl.c	Sat Apr 19 05:10:51 2014
@@@@ -1598,32 +1598,6 @@@@ Returns 1 if the OpenSSL PRNG has been seeded with eno
d37 1
a37 1
@@@@ -1637,8 +1611,6 @@@@ static PyMethodDef PySSL_methods[] = {
@

