head	1.5;
access;
symbols
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2013.05.22.12.39.30;	author fgsch;	state dead;
branches;
next	1.4;

1.4
date	2013.04.13.22.31.42;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2012.04.27.08.18.59;	author rpointel;	state Exp;
branches;
next	1.2;

1.2
date	2011.06.08.08.02.54;	author rpointel;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.30.21.11.44;	author rpointel;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to 2.7.5.
ok ajacoutot@@ as part of a larger diff.
@
text
@$OpenBSD: patch-Modules_selectmodule_c,v 1.4 2013/04/13 22:31:42 fgsch Exp $

See http://bugs.python.org/issue12181 for details.

--- Modules/selectmodule.c.orig	Sat Apr  6 15:02:38 2013
+++ Modules/selectmodule.c	Tue Apr  9 11:49:04 2013
@@@@ -1203,6 +1203,23 @@@@ static PyTypeObject kqueue_queue_Type;
 #   error uintptr_t does not match int, long, or long long!
 #endif
 
+/*
+ * kevent is not standard and its members vary across BSDs.
+ */
+#if !defined(__OpenBSD__)
+#   define IDENT_TYPE	T_UINTPTRT
+#   define IDENT_CAST	Py_intptr_t
+#   define DATA_TYPE	T_INTPTRT
+#   define DATA_FMT_UNIT INTPTRT_FMT_UNIT
+#   define IDENT_AsType	PyLong_AsUintptr_t
+#else
+#   define IDENT_TYPE	T_UINT
+#   define IDENT_CAST	int
+#   define DATA_TYPE	T_INT
+#   define DATA_FMT_UNIT "i"
+#   define IDENT_AsType	PyLong_AsUnsignedLong
+#endif
+
 /* Unfortunately, we can't store python objects in udata, because
  * kevents in the kernel can be removed without warning, which would
  * forever lose the refcount on the object stored with it.
@@@@ -1210,11 +1227,11 @@@@ static PyTypeObject kqueue_queue_Type;
 
 #define KQ_OFF(x) offsetof(kqueue_event_Object, x)
 static struct PyMemberDef kqueue_event_members[] = {
-    {"ident",           T_UINTPTRT,     KQ_OFF(e.ident)},
+    {"ident",           IDENT_TYPE,     KQ_OFF(e.ident)},
     {"filter",          T_SHORT,        KQ_OFF(e.filter)},
     {"flags",           T_USHORT,       KQ_OFF(e.flags)},
     {"fflags",          T_UINT,         KQ_OFF(e.fflags)},
-    {"data",            T_INTPTRT,      KQ_OFF(e.data)},
+    {"data",            DATA_TYPE,      KQ_OFF(e.data)},
     {"udata",           T_UINTPTRT,     KQ_OFF(e.udata)},
     {NULL} /* Sentinel */
 };
@@@@ -1240,7 +1257,7 @@@@ kqueue_event_init(kqueue_event_Object *self, PyObject 
     PyObject *pfd;
     static char *kwlist[] = {"ident", "filter", "flags", "fflags",
                              "data", "udata", NULL};
-    static char *fmt = "O|hhi" INTPTRT_FMT_UNIT UINTPTRT_FMT_UNIT ":kevent";
+    static char *fmt = "O|hhi" DATA_FMT_UNIT UINTPTRT_FMT_UNIT ":kevent";
 
     EV_SET(&(self->e), 0, EVFILT_READ, EV_ADD, 0, 0, 0); /* defaults */
 
@@@@ -1250,8 +1267,12 @@@@ kqueue_event_init(kqueue_event_Object *self, PyObject 
         return -1;
     }
 
-    if (PyLong_Check(pfd)) {
-        self->e.ident = PyLong_AsUintptr_t(pfd);
+    if (PyLong_Check(pfd)
+#if IDENT_TYPE == T_UINT
+	&& PyLong_AsUnsignedLong(pfd) < UINT_MAX
+#endif
+    ) {
+        self->e.ident = IDENT_AsType(pfd);
     }
     else {
         self->e.ident = PyObject_AsFileDescriptor(pfd);
@@@@ -1279,10 +1300,10 @@@@ kqueue_event_richcompare(kqueue_event_Object *s, kqueu
             Py_TYPE(s)->tp_name, Py_TYPE(o)->tp_name);
         return NULL;
     }
-    if (((result = s->e.ident - o->e.ident) == 0) &&
+    if (((result = (IDENT_CAST)(s->e.ident - o->e.ident)) == 0) &&
         ((result = s->e.filter - o->e.filter) == 0) &&
         ((result = s->e.flags - o->e.flags) == 0) &&
-        ((result = s->e.fflags - o->e.fflags) == 0) &&
+        ((result = (int)(s->e.fflags - o->e.fflags)) == 0) &&
         ((result = s->e.data - o->e.data) == 0) &&
         ((result = s->e.udata - o->e.udata) == 0)
        ) {
@


1.4
log
@Update python 2.7 to 2.7.4.

This is a slighly different version that I sent that includes an updated
kqueue diff that works with python 2 and 3 and puts test_bsddb and
test_bsddb3 back on the skip list as they're not built outside amd64
and i386.

Only 2 tests are known to fail: test_kqueue (broken) and test_threading
(failing on 2.7.3, under investigation but likely broken). If something
else fails please send your test.log.

Tested on a bulk by landry, sparc64 by brad, ppc gonzalo and amd64 by me.
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_selectmodule_c,v 1.3 2012/04/27 08:18:59 rpointel Exp $
@


1.3
log
@Update Python 2.7.2 to 2.7.3.
ok mpi@@, gonzalo@@. tested in a bulk build by landry@@.
@
text
@d1 31
a31 5
$OpenBSD: patch-Modules_selectmodule_c,v 1.2 2011/06/08 08:02:54 rpointel Exp $
--- Modules/selectmodule.c.orig	Tue Apr 10 01:07:34 2012
+++ Modules/selectmodule.c	Fri Apr 13 07:45:44 2012
@@@@ -1208,6 +1208,7 @@@@ static PyTypeObject kqueue_queue_Type;
  */
a33 1
+#if !defined(__OpenBSD__)
d35 2
a36 1
     {"ident",           T_UINTPTRT,     KQ_OFF(e.ident)},
d38 4
a41 1
@@@@ -1217,6 +1218,19 @@@@ static struct PyMemberDef kqueue_event_members[] = {
d45 18
a62 12
+#else
+static struct PyMemberDef kqueue_event_members[] = {
+    {"ident",           T_UINT,         KQ_OFF(e.ident)},
+    {"filter",          T_SHORT,        KQ_OFF(e.filter)},
+    {"flags",           T_USHORT,       KQ_OFF(e.flags)},
+    {"fflags",          T_UINT,         KQ_OFF(e.fflags)},
+    {"data",            T_INT,          KQ_OFF(e.data)},
+    {"udata",           T_UINTPTRT,     KQ_OFF(e.udata)},
+    {NULL} /* Sentinel */
+};
+# undef INTPTRT_FMT_UNIT
+# define INTPTRT_FMT_UNIT   "i"
d64 6
a69 4
 #undef KQ_OFF
 
 static PyObject *
@@@@ -1278,10 +1292,10 @@@@ kqueue_event_richcompare(kqueue_event_Object *s, kqueu
d74 1
a74 1
+    if (((result = (int)(s->e.ident - o->e.ident)) == 0) &&
@


1.2
log
@Modify patch from fgsch@@. Bump revision.
ok sthen@@ jasper@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_selectmodule_c,v 1.1 2011/05/30 21:11:44 rpointel Exp $
--- Modules/selectmodule.c.orig	Wed Nov  3 13:27:33 2010
+++ Modules/selectmodule.c	Thu Jun  2 00:40:37 2011
@@@@ -1215,6 +1215,7 @@@@ static PyTypeObject kqueue_queue_Type;
d12 1
a12 1
@@@@ -1224,6 +1225,19 @@@@ static struct PyMemberDef kqueue_event_members[] = {
d32 1
a32 1
@@@@ -1285,10 +1299,10 @@@@ kqueue_event_richcompare(kqueue_event_Object *s, kqueu
@


1.1
log
@Correct the wrong value of LDFLAGS (certain ports will need WANTLIB += ${MODPY_WANTLIB}).

Thanks for fgsch@@ for his patch-Modules_selectmodule_c to correct SIGBUS error on sparc64 (test_kqueue.py).

It's time make bulks of Python2.7 on as many archs as we can.

Thanks a lot.

ok sthen@@ aja@@
@
text
@d1 3
a3 3
$OpenBSD$
--- Modules/selectmodule.c.orig	Sat May 28 13:29:10 2011
+++ Modules/selectmodule.c	Sat May 28 13:30:55 2011
d12 1
a12 1
@@@@ -1224,6 +1225,17 @@@@ static struct PyMemberDef kqueue_event_members[] = {
d26 2
d32 13
@

