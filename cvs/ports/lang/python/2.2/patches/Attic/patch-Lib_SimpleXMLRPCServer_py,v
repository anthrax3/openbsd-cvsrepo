head	1.2;
access;
symbols
	OPENBSD_3_5:1.1.0.6
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2005.05.22.12.01.13;	author alek;	state dead;
branches;
next	1.1;

1.1
date	2005.03.03.22.23.56;	author alek;	state Exp;
branches
	1.1.4.1
	1.1.6.1;
next	;

1.1.4.1
date	2005.03.28.10.01.05;	author sturm;	state Exp;
branches;
next	;

1.1.6.1
date	2005.03.28.10.04.28;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Please use lang/python/2.3

ok mbalmer@@, xsa@@, krw@@ and others too
@
text
@$OpenBSD: patch-Lib_SimpleXMLRPCServer_py,v 1.1 2005/03/03 22:23:56 alek Exp $
--- Lib/SimpleXMLRPCServer.py.orig	Sat Sep 29 06:54:33 2001
+++ Lib/SimpleXMLRPCServer.py	Fri Feb 18 14:16:05 2005
@@@@ -161,7 +161,8 @@@@ class SimpleXMLRPCRequestHandler(BaseHTT
                     try:
                         func = _resolve_dotted_attribute(
                             self.server.instance,
-                            method
+                            method,
+                            self.allow_dotted_names
                             )
                     except AttributeError:
                         pass
@@@@ -178,11 +179,20 @@@@ class SimpleXMLRPCRequestHandler(BaseHTT
             BaseHTTPServer.BaseHTTPRequestHandler.log_request(self, code, size)
 
 
-def _resolve_dotted_attribute(obj, attr):
+def _resolve_dotted_attribute(obj, attr, allow_dotted_names=True):
     """Resolves a dotted attribute name to an object.  Raises
     an AttributeError if any attribute in the chain starts with a '_'.
+
+    If the optional allow_dotted_names argument is false, dots are not
+    supported and this function operates similar to getattr(obj, attr).
     """
-    for i in attr.split('.'):
+
+    if allow_dotted_names:
+        attrs = attr.split('.')
+    else:
+        attrs = [attr]
+
+    for i in attrs:
         if i.startswith('_'):
             raise AttributeError(
                 'attempt to access private attribute "%s"' % i
@@@@ -206,7 +216,7 @@@@ class SimpleXMLRPCServer(SocketServer.TC
         self.instance = None
         SocketServer.TCPServer.__init__(self, addr, requestHandler)
 
-    def register_instance(self, instance):
+    def register_instance(self, instance, allow_dotted_names=False):
         """Registers an instance to respond to XML-RPC requests.
 
         Only one instance can be installed at a time.
@@@@ -225,9 +235,23 @@@@ class SimpleXMLRPCServer(SocketServer.TC
 
         If a registered function matches a XML-RPC request, then it
         will be called instead of the registered instance.
+
+        If the optional allow_dotted_names argument is true and the
+        instance does not have a _dispatch method, method names
+        containing dots are supported and resolved, as long as none of
+        the name segments start with an '_'.
+
+            *** SECURITY WARNING: ***
+
+            Enabling the allow_dotted_names options allows intruders
+            to access your module's global variables and may allow
+            intruders to execute arbitrary code on your machine.  Only
+            use this option on a secure, closed network.
+
         """
 
         self.instance = instance
+        self.allow_dotted_names = allow_dotted_names
 
     def register_function(self, function, name = None):
         """Registers a function to respond to XML-RPC requests.
@


1.1
log
@- Security update PSF-2005-001 http://www.python.org/security/PSF-2005-001/
- Fix -tkinter subpackage
- Bump PKGNAME

ok fgsch@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.6.1
log
@MFC:

Security update PSF-2005-01 http://www.python.org/security/PSF-2005-01/

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Lib_SimpleXMLRPCServer_py,v 1.1 2005/03/03 22:23:56 alek Exp $
@


1.1.4.1
log
@MFC:

Security update PSF-2005-01 http://www.python.org/security/PSF-2005-01/

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Lib_SimpleXMLRPCServer_py,v 1.1 2005/03/03 22:23:56 alek Exp $
@

