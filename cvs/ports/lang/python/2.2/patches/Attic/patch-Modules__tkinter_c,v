head	1.3;
access;
symbols
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2005.05.22.12.01.13;	author alek;	state dead;
branches;
next	1.2;

1.2
date	2004.06.25.18.34.57;	author xsa;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.03.17.32.57;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Please use lang/python/2.3

ok mbalmer@@, xsa@@, krw@@ and others too
@
text
@$OpenBSD: patch-Modules__tkinter_c,v 1.2 2004/06/25 18:34:57 xsa Exp $
--- Modules/_tkinter.c.orig	Thu May 29 12:58:23 2003
+++ Modules/_tkinter.c	Fri Jun 25 14:50:53 2004
@@@@ -294,8 +294,8 @@@@ static char *
 Merge(PyObject *args)
 {
 	PyObject *tmp = NULL;
-	char *argvStore[ARGSZ];
-	char **argv = NULL;
+	CONST84 char *argvStore[ARGSZ];
+	CONST84 char **argv = NULL;
 	int fvStore[ARGSZ];
 	int *fv = NULL;
 	int argc = 0, fvc = 0, i;
@@@@ -320,7 +320,7 @@@@ Merge(PyObject *args)
 		argc = PyTuple_Size(args);
 
 		if (argc > ARGSZ) {
-			argv = (char **)ckalloc(argc * sizeof(char *));
+			argv = (CONST84 char **)ckalloc(argc * sizeof(char *));
 			fv = (int *)ckalloc(argc * sizeof(int));
 			if (argv == NULL || fv == NULL) {
 				PyErr_NoMemory();
@@@@ -355,7 +355,7 @@@@ Merge(PyObject *args)
   finally:
 	for (i = 0; i < fvc; i++)
 		if (fv[i]) {
-			ckfree(argv[i]);
+			ckfree((char *)argv[i]);
 		}
 	if (argv != argvStore)
 		ckfree(FREECAST argv);
@@@@ -372,7 +372,7 @@@@ static PyObject *
 Split(char *list)
 {
 	int argc;
-	char **argv;
+	CONST84 char **argv;
 	PyObject *v;
 
 	if (list == NULL) {
@@@@ -397,7 +397,7 @@@@ Split(char *list)
 		PyObject *w;
 
 		for (i = 0; i < argc; i++) {
-			if ((w = Split(argv[i])) == NULL) {
+			if ((w = Split((char *)argv[i])) == NULL) {
 				Py_DECREF(v);
 				v = NULL;
 				break;
@@@@ -624,8 +624,8 @@@@ Tkapp_Call(PyObject *self, PyObject *arg
 	else {
 		/* We could request the object result here, but doing
 		   so would confuse applications that expect a string. */
-		char *s = Tcl_GetStringResult(interp);
-		char *p = s;
+		CONST84 char *s = Tcl_GetStringResult(interp);
+		CONST84 char *p = s;
 
 		/* If the result contains any bytes with the top bit set,
 		   it's UTF-8 and we should decode it to Unicode */
@@@@ -918,7 +918,8 @@@@ Tkapp_AddErrorInfo(PyObject *self, PyObj
 static PyObject *
 SetVar(PyObject *self, PyObject *args, int flags)
 {
-	char *name1, *name2, *ok, *s;
+	char *name1, *name2, *s;
+	CONST84 char *ok;
 	PyObject *newValue;
 	PyObject *tmp;
 
@@@@ -978,7 +979,8 @@@@ Tkapp_GlobalSetVar(PyObject *self, PyObj
 static PyObject *
 GetVar(PyObject *self, PyObject *args, int flags)
 {
-	char *name1, *name2=NULL, *s;
+	char *name1, *name2=NULL;
+	CONST84 char *s;
 	PyObject *res = NULL;
 
 	if (!PyArg_ParseTuple(args, "s|s:getvar", &name1, &name2))
@@@@ -1187,7 +1189,7 @@@@ Tkapp_SplitList(PyObject *self, PyObject
 {
 	char *list;
 	int argc;
-	char **argv;
+	CONST84 char **argv;
 	PyObject *v;
 	int i;
 
@@@@ -1340,7 +1342,7 @@@@ static PyObject *
 Tkapp_CreateCommand(PyObject *self, PyObject *args)
 {
 	PythonCmd_ClientData *data;
-	char *cmdName;
+	CONST84 char *cmdName;
 	PyObject *func;
 	Tcl_Command err;
 
@@@@ -1360,7 +1362,7 @@@@ Tkapp_CreateCommand(PyObject *self, PyOb
 	data->func = func;
 
 	ENTER_TCL
-	err = Tcl_CreateCommand(Tkapp_Interp(self), cmdName, PythonCmd,
+	err = Tcl_CreateCommand(Tkapp_Interp(self), (CONST84 char *)cmdName, (Tcl_CmdProc *)PythonCmd,
 				(ClientData)data, PythonCmdDelete);
 	LEAVE_TCL
 	if (err == NULL) {
@


1.2
log
@
sync patch;
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules__tkinter_c,v 1.1 2004/01/03 17:32:57 sturm Exp $
@


1.1
log
@fix tk84 warnings in 2.1 and 2.2, bump PKGNAME, from jose@@
spelling fixes in CHANGES.OpenBSD
remove mpz.so from PFRAG.mm, it has its own SUBPACKAGE
from maintainer Aleksander Piotrowski
@
text
@d1 3
a3 3
$OpenBSD$
--- Modules/_tkinter.c.orig	2003-12-29 19:00:17.000000000 -0500
+++ Modules/_tkinter.c	2003-12-29 20:52:08.000000000 -0500
d91 1
a91 1
@@@@ -1333,7 +1335,7 @@@@ static PyObject *
d100 1
a100 1
@@@@ -1353,7 +1355,7 @@@@ Tkapp_CreateCommand(PyObject *self, PyOb
@

