head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.12.20.13.08.07;	author fgsch;	state dead;
branches;
next	1.1;

1.1
date	2011.05.07.09.36.17;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.2
log
@RIP python2.4.
jasper@@ ok
@
text
@$OpenBSD: patch-Lib_test_test_urllib2_py,v 1.1 2011/05/07 09:36:17 fgsch Exp $
--- Lib/test/test_urllib2.py.orig	Sun May 28 19:15:43 2006
+++ Lib/test/test_urllib2.py	Fri May  6 01:12:44 2011
@@@@ -606,6 +606,27 @@@@ class HandlerTests(unittest.TestCase):
             self.assertEqual(count,
                              urllib2.HTTPRedirectHandler.max_redirections)
 
+    def test_invalid_redirect(self):
+        from_url = "http://example.com/a.html"
+        valid_schemes = ['http', 'https', 'ftp']
+        invalid_schemes = ['file', 'imap', 'ldap']
+        schemeless_url = "example.com/b.html"
+        h = urllib2.HTTPRedirectHandler()
+        o = h.parent = MockOpener()
+        req = Request(from_url)
+
+        for scheme in invalid_schemes:
+            invalid_url = scheme + '://' + schemeless_url
+            self.assertRaises(urllib2.HTTPError, h.http_error_302,
+                              req, MockFile(), 302, "Security Loophole",
+                              MockHeaders({"location": invalid_url}))
+
+        for scheme in valid_schemes:
+            valid_url = scheme + '://' + schemeless_url
+            h.http_error_302(req, MockFile(), 302, "That's fine",
+                MockHeaders({"location": valid_url}))
+            self.assertEqual(o.req.get_full_url(), valid_url)
+
     def test_cookie_redirect(self):
         class MockHTTPHandler(urllib2.HTTPHandler):
             def __init__(self): self._count = 0
@


1.1
log
@Security fix for CVE-2011-1521.
prodded and ok jasper
@
text
@d1 1
a1 1
$OpenBSD$
@

