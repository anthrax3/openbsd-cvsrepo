head	1.2;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.6
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	rpointel_20150923:1.1.1.1
	rpointel:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.07.08.08.28.01;	author landry;	state dead;
branches;
next	1.1;
commitid	3yI3SLATUJ2eVpSH;

1.1
date	2015.09.23.19.23.57;	author rpointel;	state Exp;
branches
	1.1.1.1;
next	;
commitid	ysR5ePvt7z3aPIUs;

1.1.1.1
date	2015.09.23.19.23.57;	author rpointel;	state Exp;
branches;
next	;
commitid	ysR5ePvt7z3aPIUs;


desc
@@


1.2
log
@Retire python 3.4 and 3.5, python 3.6 is the default python3 version
since 7 months, and nothing uses those anymore.
ok rpointel@@ (MAINTAINER) ajacoutot@@
@
text
@$OpenBSD: patch-Lib_test_test_locale_py,v 1.1 2015/09/23 19:23:57 rpointel Exp $

http://bugs.python.org/issue25191

--- Lib/test/test_locale.py.orig	Sun Sep 13 13:41:23 2015
+++ Lib/test/test_locale.py	Sun Sep 20 10:09:14 2015
@@@@ -512,8 +512,12 @@@@ class TestMiscellaneous(unittest.TestCase):
         loc = locale.getlocale(locale.LC_CTYPE)
         if verbose:
             print('testing with %a' % (loc,), end=' ', flush=True)
-        locale.setlocale(locale.LC_CTYPE, loc)
-        self.assertEqual(loc, locale.getlocale(locale.LC_CTYPE))
+        try:
+            locale.setlocale(locale.LC_CTYPE, loc)
+            self.assertEqual(loc, locale.getlocale(locale.LC_CTYPE))
+        except locale.Error:
+            # Unsupported locale setting
+            self.skipTest('unsupported locale setting')
 
     def test_invalid_locale_format_in_localetuple(self):
         with self.assertRaises(TypeError):
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import Python 3.5.0 and link it to the build to have more feedbacks.

@
text
@@
