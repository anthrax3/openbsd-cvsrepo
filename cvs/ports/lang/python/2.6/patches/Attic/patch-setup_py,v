head	1.8;
access;
symbols
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2;
locks; strict;
comment	@# @;


1.8
date	2011.07.13.08.03.32;	author jasper;	state dead;
branches;
next	1.7;

1.7
date	2010.11.15.20.55.25;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2010.09.16.22.36.08;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.23.13.56.26;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.16.09.38.20;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.03.22.26.27;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.01.21.03.27;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.18.12.03.56;	author djm;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Retire this version of the 2.x family. All ports either use the
default (2.7) or are using an even older version (2.4/2.5) so 2.6 can go.

ok sthen@@ rpointel@@
@
text
@$OpenBSD: patch-setup_py,v 1.7 2010/11/15 20:55:25 sthen Exp $
--- setup.py.orig	Sat Jul 17 13:31:09 2010
+++ setup.py	Mon Aug 30 13:54:43 2010
@@@@ -20,6 +20,11 @@@@ from distutils.spawn import find_executable
 # This global variable is used to hold the list of modules to be disabled.
 disabled_module_list = []
 
+def usrlocal(p):
+    return os.path.join(os.environ['LOCALBASE'], p)
+def usrx11r6(p):
+    return os.path.join(os.environ['X11BASE'], p)
+
 def add_dir_to_list(dirlist, dir):
     """Add the directory 'dir' to the list 'dirlist' (at the front) if
     1) 'dir' is not already in 'dirlist'
@@@@ -356,8 +361,8 @@@@ class PyBuildExt(build_ext):
 
     def detect_modules(self):
         # Ensure that /usr/local is always used
-        add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
-        add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
+        add_dir_to_list(self.compiler.library_dirs, usrlocal('lib'))
+        add_dir_to_list(self.compiler.include_dirs, usrlocal('include'))
 
         # Add paths specified in the environment variables LDFLAGS and
         # CPPFLAGS for header and library files.
@@@@ -691,8 +696,6 @@@@ class PyBuildExt(build_ext):
                                depends = ['socketmodule.h']) )
         # Detect SSL support for the socket module (via _ssl)
         search_for_ssl_incs_in = [
-                              '/usr/local/ssl/include',
-                              '/usr/contrib/ssl/include/'
                              ]
         ssl_incs = find_file('openssl/ssl.h', inc_dirs,
                              search_for_ssl_incs_in
@@@@ -703,9 +706,7 @@@@ class PyBuildExt(build_ext):
             if krb5_h:
                 ssl_incs += krb5_h
         ssl_libs = find_library_file(self.compiler, 'ssl',lib_dirs,
-                                     ['/usr/local/ssl/lib',
-                                      '/usr/contrib/ssl/lib/'
-                                     ] )
+                                     [ ] )
 
         if (ssl_incs is not None and
             ssl_libs is not None):
@@@@ -799,7 +800,7 @@@@ class PyBuildExt(build_ext):
                 # BerkeleyDB 4.6.x is not stable on many architectures.
                 arch = platform_machine()
                 if arch not in ('i386', 'i486', 'i586', 'i686',
-                                'x86_64', 'ia64'):
+                                'x86_64', 'amd64', 'ia64'):
                     return False
             return True
 
@@@@ -862,6 +863,7 @@@@ class PyBuildExt(build_ext):
                 std_variants.append(os.path.join(dn, "db3.%d"%x))
 
         db_inc_paths = std_variants + db_inc_paths
+        db_inc_paths = [ usrlocal('include/db4') ]
         db_inc_paths = [p for p in db_inc_paths if os.path.exists(p)]
 
         db_ver_inc_map = {}
@@@@ -925,6 +927,7 @@@@ class PyBuildExt(build_ext):
                     db_incdir.replace("include", 'lib64'),
                     db_incdir.replace("include", 'lib'),
                 ]
+                db_dirs_to_check = [usrlocal('lib/db4')]
 
                 if sys.platform != 'darwin':
                     db_dirs_to_check = filter(os.path.isdir, db_dirs_to_check)
@@@@ -947,6 +950,7 @@@@ class PyBuildExt(build_ext):
                 # symlink to more general names?
                 for dblib in (('db-%d.%d' % db_ver),
                               ('db%d%d' % db_ver),
+                              ('db'),
                               ('db%d' % db_ver[0])):
                     dblib_file = self.compiler.find_library_file(
                                     db_dirs_to_check + lib_dirs, dblib )
@@@@ -994,6 +998,7 @@@@ class PyBuildExt(build_ext):
                              '/usr/local/include/sqlite',
                              '/usr/local/include/sqlite3',
                            ]
+        sqlite_inc_paths = [ usrlocal('include') ]
         MIN_SQLITE_VERSION_NUMBER = (3, 0, 8)
         MIN_SQLITE_VERSION = ".".join([str(x)
                                     for x in MIN_SQLITE_VERSION_NUMBER])
@@@@ -1039,6 +1044,7 @@@@ class PyBuildExt(build_ext):
                 os.path.join(sqlite_incdir, '..', '..', 'lib64'),
                 os.path.join(sqlite_incdir, '..', '..', 'lib'),
             ]
+            sqlite_dirs_to_check = [ usrlocal('lib') ]
             sqlite_libfile = self.compiler.find_library_file(
                                 sqlite_dirs_to_check + lib_dirs, 'sqlite3')
             if sqlite_libfile:
@@@@ -1101,7 +1107,7 @@@@ class PyBuildExt(build_ext):
                 sysroot = macosx_sdk_root()
                 f = os.path.join(sysroot, f[1:])
 
-        if os.path.exists(f) and not db_incs:
+        if os.path.exists(f):
             data = open(f).read()
             m = re.search(r"#s*define\s+HASHVERSION\s+2\s*", data)
             if m is not None:
@@@@ -1313,10 +1319,8 @@@@ class PyBuildExt(build_ext):
                               define_macros = define_macros,
                               include_dirs = [expatinc],
                               sources = ['pyexpat.c',
-                                         'expat/xmlparse.c',
-                                         'expat/xmlrole.c',
-                                         'expat/xmltok.c',
                                          ],
+                              libraries = ['expat'],
                               ))
 
         # Fredrik Lundh's cElementTree module.  Note that this also
@@@@ -1408,6 +1412,14 @@@@ class PyBuildExt(build_ext):
                 )
             libraries = []
 
+        elif platform.startswith('openbsd'):
+            macros = dict(                  # OpenBSD
+                HAVE_SEM_OPEN=0,            # Not implemented
+                HAVE_SEM_TIMEDWAIT=0,
+                HAVE_FD_TRANSFER=1,
+                )
+            libraries = []
+
         else:                                   # Linux and other unices
             macros = dict(
                 HAVE_SEM_OPEN=1,
@@@@ -1452,6 +1464,9 @@@@ class PyBuildExt(build_ext):
         if platform in ('linux2', 'freebsd4', 'freebsd5', 'freebsd6',
                         'freebsd7', 'freebsd8'):
             exts.append( Extension('ossaudiodev', ['ossaudiodev.c']) )
+        if platform in ('openbsd4'):
+            exts.append( Extension('ossaudiodev', ['ossaudiodev.c'],
+                                   libraries = ['ossaudio'],) )
         else:
             missing.append('ossaudiodev')
 
@@@@ -1625,7 +1640,7 @@@@ class PyBuildExt(build_ext):
         # For 8.4a2, the X11 headers are not included. Rather than include a
         # complicated search, this is a hard-coded path. It could bail out
         # if X11 libs are not found...
-        include_dirs.append('/usr/X11R6/include')
+        include_dirs.append(usrx11r6('include'))
         frameworks = ['-framework', 'Tcl', '-framework', 'Tk']
 
         # All existing framework builds of Tcl/Tk don't support 64-bit
@@@@ -1675,8 +1690,7 @@@@ class PyBuildExt(build_ext):
         # The versions with dots are used on Unix, and the versions without
         # dots on Windows, for detection by cygwin.
         tcllib = tklib = tcl_includes = tk_includes = None
-        for version in ['8.5', '85', '8.4', '84', '8.3', '83', '8.2',
-                        '82', '8.1', '81', '8.0', '80']:
+        for version in ['85']:
             tklib = self.compiler.find_library_file(lib_dirs, 'tk' + version)
             tcllib = self.compiler.find_library_file(lib_dirs, 'tcl' + version)
             if tklib and tcllib:
@@@@ -1717,17 +1731,9 @@@@ class PyBuildExt(build_ext):
         if platform == 'sunos5':
             include_dirs.append('/usr/openwin/include')
             added_lib_dirs.append('/usr/openwin/lib')
-        elif os.path.exists('/usr/X11R6/include'):
-            include_dirs.append('/usr/X11R6/include')
-            added_lib_dirs.append('/usr/X11R6/lib64')
-            added_lib_dirs.append('/usr/X11R6/lib')
-        elif os.path.exists('/usr/X11R5/include'):
-            include_dirs.append('/usr/X11R5/include')
-            added_lib_dirs.append('/usr/X11R5/lib')
-        else:
-            # Assume default location for X11
-            include_dirs.append('/usr/X11/include')
-            added_lib_dirs.append('/usr/X11/lib')
+        elif True:
+            include_dirs.append(usrx11r6('include'))
+            added_lib_dirs.append(usrx11r6('lib'))
 
         # If Cygwin, then verify that X is installed before proceeding
         if platform == 'cygwin':
@@@@ -2028,7 +2034,7 @@@@ def main():
           # Scripts to install
           scripts = ['Tools/scripts/pydoc', 'Tools/scripts/idle',
                      'Tools/scripts/2to3',
-                     'Lib/smtpd.py']
+                     ]
         )
 
 # --install-platlib
@


1.7
log
@use tk.port.mk and move -tkinter to a more recent version of Tcl/Tk.
reads fine to fgsch@@
@
text
@d1 1
a1 1
$OpenBSD: patch-setup_py,v 1.6 2010/09/16 22:36:08 fgsch Exp $
@


1.6
log
@Update Python to 2.6.6. Tested by many.
sthen@@ ok
@
text
@d1 1
a1 1
$OpenBSD: patch-setup_py,v 1.5 2010/07/23 13:56:26 sthen Exp $
d157 1
a157 1
+        for version in ['84']:
@


1.5
log
@Update Python to 2.6.5, committing on behalf of fgsch@@ whose laptop is broken.
@
text
@d1 4
a4 4
$OpenBSD: patch-setup_py,v 1.4 2009/10/16 09:38:20 djm Exp $
--- setup.py.orig	Mon Mar  8 07:08:25 2010
+++ setup.py	Thu Jun 17 13:04:45 2010
@@@@ -19,6 +19,11 @@@@ from distutils.command.install_lib import install_lib
d16 1
a16 1
@@@@ -310,8 +315,8 @@@@ class PyBuildExt(build_ext):
d27 1
a27 1
@@@@ -617,8 +622,6 @@@@ class PyBuildExt(build_ext):
d36 1
a36 1
@@@@ -629,9 +632,7 @@@@ class PyBuildExt(build_ext):
d47 1
a47 1
@@@@ -725,7 +726,7 @@@@ class PyBuildExt(build_ext):
d56 1
a56 1
@@@@ -788,6 +789,7 @@@@ class PyBuildExt(build_ext):
d64 1
a64 1
@@@@ -844,6 +846,7 @@@@ class PyBuildExt(build_ext):
a68 1
                 db_dirs_to_check = filter(os.path.isdir, db_dirs_to_check)
d70 3
a72 2
                 # Look for a version specific db-X.Y before an ambiguoius dbX
@@@@ -852,6 +855,7 @@@@ class PyBuildExt(build_ext):
d80 1
a80 1
@@@@ -899,6 +903,7 @@@@ class PyBuildExt(build_ext):
d88 1
a88 1
@@@@ -937,6 +942,7 @@@@ class PyBuildExt(build_ext):
d96 4
a99 4
@@@@ -993,7 +999,7 @@@@ class PyBuildExt(build_ext):
         # the more recent berkeleydb's db.h file first in the include path
         # when attempting to compile and it will fail.
         f = "/usr/include/db.h"
d105 1
a105 1
@@@@ -1209,10 +1215,8 @@@@ class PyBuildExt(build_ext):
d117 1
a117 1
@@@@ -1304,6 +1308,14 @@@@ class PyBuildExt(build_ext):
d132 1
a132 1
@@@@ -1348,6 +1360,9 @@@@ class PyBuildExt(build_ext):
d142 1
a142 1
@@@@ -1513,7 +1528,7 @@@@ class PyBuildExt(build_ext):
d151 1
a151 1
@@@@ -1558,8 +1573,7 @@@@ class PyBuildExt(build_ext):
d161 1
a161 1
@@@@ -1600,17 +1614,9 @@@@ class PyBuildExt(build_ext):
d182 1
a182 1
@@@@ -1911,7 +1917,7 @@@@ def main():
@


1.4
log
@update to maintenance release 2.6.3, relnotes at:
http://www.python.org/download/releases/2.6.3/NEWS.txt

NB. regress tests are known to fail if py-xml is installed. Try to spend
less time than I did in figuring this out.
@
text
@d1 3
a3 3
$OpenBSD: patch-setup_py,v 1.3 2009/05/03 22:26:27 djm Exp $
--- setup.py.orig	Sun Sep 20 20:37:33 2009
+++ setup.py	Mon Oct  5 07:12:38 2009
d27 1
a27 1
@@@@ -614,8 +619,6 @@@@ class PyBuildExt(build_ext):
d36 1
a36 1
@@@@ -626,9 +629,7 @@@@ class PyBuildExt(build_ext):
d47 1
a47 1
@@@@ -722,7 +723,7 @@@@ class PyBuildExt(build_ext):
d56 1
a56 1
@@@@ -785,6 +786,7 @@@@ class PyBuildExt(build_ext):
d64 1
a64 1
@@@@ -841,6 +843,7 @@@@ class PyBuildExt(build_ext):
d72 1
a72 1
@@@@ -849,6 +852,7 @@@@ class PyBuildExt(build_ext):
d80 1
a80 1
@@@@ -896,6 +900,7 @@@@ class PyBuildExt(build_ext):
d88 1
a88 1
@@@@ -934,6 +939,7 @@@@ class PyBuildExt(build_ext):
d96 1
a96 1
@@@@ -990,7 +996,7 @@@@ class PyBuildExt(build_ext):
d105 1
a105 1
@@@@ -1205,10 +1211,8 @@@@ class PyBuildExt(build_ext):
d117 1
a117 1
@@@@ -1300,6 +1304,14 @@@@ class PyBuildExt(build_ext):
d132 1
a132 1
@@@@ -1340,6 +1352,9 @@@@ class PyBuildExt(build_ext):
d142 1
a142 1
@@@@ -1505,7 +1520,7 @@@@ class PyBuildExt(build_ext):
d151 1
a151 1
@@@@ -1550,8 +1565,7 @@@@ class PyBuildExt(build_ext):
d161 1
a161 1
@@@@ -1592,17 +1606,9 @@@@ class PyBuildExt(build_ext):
d182 1
a182 1
@@@@ -1902,7 +1908,7 @@@@ def main():
@


1.3
log
@python-2.6.2
@
text
@d1 3
a3 3
$OpenBSD: patch-setup_py,v 1.2 2009/01/01 21:03:27 djm Exp $
--- setup.py.orig	Wed Apr  1 04:20:48 2009
+++ setup.py	Sun Apr 19 10:28:55 2009
d142 1
a142 1
@@@@ -1494,7 +1509,7 @@@@ class PyBuildExt(build_ext):
d151 1
a151 1
@@@@ -1541,8 +1556,7 @@@@ class PyBuildExt(build_ext):
d161 1
a161 1
@@@@ -1583,17 +1597,9 @@@@ class PyBuildExt(build_ext):
d182 1
a182 1
@@@@ -1893,7 +1899,7 @@@@ def main():
@


1.2
log
@Updates and garbage collect all three Python ports:

    2.4.4 => 2.4.8
    2.5.2 => 2.5.4
    2.6 => 2.6.1

Python 2.4 and 2.5 lose their build knobs to match 2.6.

Removes no longer needed Python 2.5 security patches backported
from the release25-maint SVN branch.

Remove the -bz2 subpackage from all three versions. It is silly
to make a subpackage to avoid depending on something tiny and
compatibly licensed.

Python 2.4 and 2.5 lose their -expat subpackages; expat has been
in base for some time.

Python 2.5 loses its sqlite subpackge. Again, sqlite is tiny,
compatibly licensed and is depended upon by more and more
applications. This brings it into line with the 2.6 version.

Rework all three version's handling of setup.py. Rather than regex
replacing LOCALBASE and X11BASE into setup.py post-configure, these
are passed in though environment variables. Will save hours of
frustrated cursing familiar to anyone who has accidently used the
update-patches target after configure and had to go back and redo
all the substitutions.

Rework the patching of setup.py for 2.4 and 2.5 to be more like
what we do for 2.6. I.e. keep the diff minimal and avoid deleting
huge blocks of code, so the diff has a chance of applying without
massive hand-editing each patch release.

Fix .py paths in installed .pyc files (patch from eric@@)

feedback from several, particularly eric@@, ajacoutot@@ and Ingo
Schwarze; "get it in" ajacoutot@@
@
text
@d1 3
a3 3
$OpenBSD: patch-setup_py,v 1.1 2008/10/18 12:03:56 djm Exp $
--- setup.py.orig	Wed Nov  5 07:43:31 2008
+++ setup.py	Fri Dec 26 12:40:47 2008
d27 1
a27 1
@@@@ -613,8 +618,6 @@@@ class PyBuildExt(build_ext):
d36 1
a36 1
@@@@ -625,9 +628,7 @@@@ class PyBuildExt(build_ext):
d47 1
a47 1
@@@@ -721,7 +722,7 @@@@ class PyBuildExt(build_ext):
d56 1
a56 1
@@@@ -784,6 +785,7 @@@@ class PyBuildExt(build_ext):
d64 1
a64 1
@@@@ -840,6 +842,7 @@@@ class PyBuildExt(build_ext):
d72 1
a72 1
@@@@ -848,6 +851,7 @@@@ class PyBuildExt(build_ext):
d80 1
a80 1
@@@@ -895,6 +899,7 @@@@ class PyBuildExt(build_ext):
d88 1
a88 1
@@@@ -933,6 +938,7 @@@@ class PyBuildExt(build_ext):
d96 1
a96 1
@@@@ -989,7 +995,7 @@@@ class PyBuildExt(build_ext):
d105 1
a105 1
@@@@ -1193,10 +1199,8 @@@@ class PyBuildExt(build_ext):
d117 1
a117 1
@@@@ -1279,6 +1283,14 @@@@ class PyBuildExt(build_ext):
d132 1
a132 1
@@@@ -1319,6 +1331,9 @@@@ class PyBuildExt(build_ext):
d142 1
a142 1
@@@@ -1473,7 +1488,7 @@@@ class PyBuildExt(build_ext):
d151 1
a151 1
@@@@ -1520,8 +1535,7 @@@@ class PyBuildExt(build_ext):
d161 1
a161 1
@@@@ -1562,17 +1576,9 @@@@ class PyBuildExt(build_ext):
d182 1
a182 1
@@@@ -1872,7 +1878,7 @@@@ def main():
@


1.1
log
@port of Python-2.6, with 100% fewer build knobs!

Thanks to Ian Darwin, Will Maier and Aleksander Piotrowski for feedback
@
text
@d1 16
a16 4
$OpenBSD: patch-setup_py,v 1.4 2008/02/27 00:30:47 djm Exp $
--- setup.py.orig	Sat Jun 28 11:04:31 2008
+++ setup.py	Tue Sep 30 14:14:11 2008
@@@@ -310,8 +310,8 @@@@ class PyBuildExt(build_ext):
d22 2
a23 2
+        add_dir_to_list(self.compiler.library_dirs, '!!LOCALBASE!!/lib')
+        add_dir_to_list(self.compiler.include_dirs, '!!LOCALBASE!!/include')
d27 1
a27 1
@@@@ -612,8 +612,6 @@@@ class PyBuildExt(build_ext):
d36 1
a36 1
@@@@ -624,9 +622,7 @@@@ class PyBuildExt(build_ext):
d47 1
a47 1
@@@@ -720,7 +716,7 @@@@ class PyBuildExt(build_ext):
d56 1
a56 1
@@@@ -783,6 +779,7 @@@@ class PyBuildExt(build_ext):
d60 1
a60 1
+        db_inc_paths = [ '!!LOCALBASE!!/include/db4' ]
d64 1
a64 1
@@@@ -839,6 +836,7 @@@@ class PyBuildExt(build_ext):
d68 1
a68 1
+                db_dirs_to_check = ['!!LOCALBASE!!/lib/db4']
d72 1
a72 1
@@@@ -847,6 +845,7 @@@@ class PyBuildExt(build_ext):
d80 1
a80 1
@@@@ -894,6 +893,7 @@@@ class PyBuildExt(build_ext):
d84 1
a84 1
+        sqlite_inc_paths = [ '!!LOCALBASE!!/include' ]
d88 1
a88 1
@@@@ -932,6 +932,7 @@@@ class PyBuildExt(build_ext):
d92 1
a92 1
+            sqlite_dirs_to_check = [ '!!LOCALBASE!!/lib' ]
d95 2
a96 2
             sqlite_libdir = [os.path.abspath(os.path.dirname(sqlite_libfile))]
@@@@ -987,7 +988,7 @@@@ class PyBuildExt(build_ext):
d105 1
a105 1
@@@@ -1191,10 +1192,8 @@@@ class PyBuildExt(build_ext):
d117 1
a117 1
@@@@ -1269,6 +1268,14 @@@@ class PyBuildExt(build_ext):
d132 1
a132 1
@@@@ -1309,6 +1316,9 @@@@ class PyBuildExt(build_ext):
d142 10
a151 1
@@@@ -1510,8 +1520,7 @@@@ class PyBuildExt(build_ext):
d161 22
a182 1
@@@@ -1863,7 +1872,7 @@@@ def main():
@

