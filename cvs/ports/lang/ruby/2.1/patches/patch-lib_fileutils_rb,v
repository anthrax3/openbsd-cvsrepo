head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.8
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.10
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.6
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	jeremy_2014-Jan-03:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2014.01.03.17.51.52;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.01.03.17.51.52;	author jeremy;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD: patch-lib_fileutils_rb,v 1.2 2013/05/17 20:11:43 jeremy Exp $

Make FileUtils.mkdir_p act more like mkdir(1) -p, by not attempting
to create directories that already exist.  This fixes systrace
warnings when building ports.

--- lib/fileutils.rb.orig	Sat Dec  7 02:25:33 2013
+++ lib/fileutils.rb	Thu Dec 26 19:20:07 2013
@@@@ -208,7 +208,7 @@@@ module FileUtils
     list.map {|path| remove_tailing_slash(path)}.each do |path|
       # optimize for the most common case
       begin
-        fu_mkdir path, options[:mode]
+        fu_mkdir path, options[:mode] unless File.directory?(path)
         next
       rescue SystemCallError
         next if File.directory?(path)
@@@@ -221,7 +221,7 @@@@ module FileUtils
       end
       stack.reverse_each do |dir|
         begin
-          fu_mkdir dir, options[:mode]
+          fu_mkdir dir, options[:mode] unless File.directory?(dir)
         rescue SystemCallError
           raise unless File.directory?(dir)
         end
@


1.1.1.1
log
@Import ruby 2.1.0

OK landry@@
@
text
@@
