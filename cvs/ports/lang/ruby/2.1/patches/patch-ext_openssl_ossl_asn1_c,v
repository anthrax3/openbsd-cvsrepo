head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.4
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2017.09.16.22.52.40;	author jeremy;	state Exp;
branches
	1.1.2.1;
next	;
commitid	arMsrzZEkxNVULP7;

1.1.2.1
date	2017.09.20.02.22.39;	author jeremy;	state Exp;
branches;
next	;
commitid	ly1tT361UcbzhJiN;


desc
@@


1.1
log
@Backport security fixes from ruby 2.2.8 to ruby 2.1.9.  Fixes
CVE-2017-14033, CVE-2017-14064, CVE-2017-0898, and CVE-2017-10784.
Regen patches while here.
@
text
@$OpenBSD$

Index: ext/openssl/ossl_asn1.c
--- ext/openssl/ossl_asn1.c.orig
+++ ext/openssl/ossl_asn1.c
@@@@ -871,19 +871,18 @@@@ int_ossl_asn1_decode0_cons(unsigned char **pp, long ma
 {
     VALUE value, asn1data, ary;
     int infinite;
-    long off = *offset;
+    long available_len, off = *offset;
 
     infinite = (j == 0x21);
     ary = rb_ary_new();
 
-    while (length > 0 || infinite) {
+    available_len = infinite ? max_len : length;
+    while (available_len > 0) {
 	long inner_read = 0;
-	value = ossl_asn1_decode0(pp, max_len, &off, depth + 1, yield, &inner_read);
+	value = ossl_asn1_decode0(pp, available_len, &off, depth + 1, yield, &inner_read);
 	*num_read += inner_read;
-	max_len -= inner_read;
+	available_len -= inner_read;
 	rb_ary_push(ary, value);
-	if (length > 0)
-	    length -= inner_read;
 
 	if (infinite &&
 	    NUM2INT(ossl_asn1_get_tag(value)) == V_ASN1_EOC &&
@@@@ -974,7 +973,7 @@@@ ossl_asn1_decode0(unsigned char **pp, long length, lon
     if(j & V_ASN1_CONSTRUCTED) {
 	*pp += hlen;
 	off += hlen;
-	asn1data = int_ossl_asn1_decode0_cons(pp, length, len, &off, depth, yield, j, tag, tag_class, &inner_read);
+	asn1data = int_ossl_asn1_decode0_cons(pp, length - hlen, len, &off, depth, yield, j, tag, tag_class, &inner_read);
 	inner_read += hlen;
     }
     else {
@


1.1.2.1
log
@Backport security fixes for CVE-2017-14033, CVE-2017-10784,
CVE-2017-0898, and CVE-2017-14064 to ruby 2.1.9.
@
text
@d1 1
a1 1
$OpenBSD: patch-ext_openssl_ossl_asn1_c,v 1.1 2017/09/16 22:52:40 jeremy Exp $
@

