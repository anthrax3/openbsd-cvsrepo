head	1.3;
access;
symbols
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_4_9:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2013.07.17.15.48.26;	author jeremy;	state dead;
branches;
next	1.2;

1.2
date	2012.10.08.13.15.17;	author jeremy;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.09.16.04.05;	author jasper;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2011.03.09.16.04.05;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to ruby 1.8.7-p374, fixing CVE-2013-4073, with an extra patch
to fix a regression.  This will probably be the last official
release of ruby 1.8, since it is now completely unsupported upstream.
@
text
@$OpenBSD: patch-error_c,v 1.2 2012/10/08 13:15:17 jeremy Exp $

Backport security fix, from Shugo Maeda (ruby developer), similar to
changes in ruby SVN revision 37068.

--- error.c.orig	Mon Oct  8 03:43:34 2012
+++ error.c	Mon Oct  8 03:43:49 2012
@@@@ -665,9 +665,6 @@@@ name_err_to_s(exc)
 
     if (NIL_P(mesg)) return rb_class_name(CLASS_OF(exc));
     StringValue(str);
-    if (str != mesg) {
-	OBJ_INFECT(str, mesg);
-    }
     return str;
 }
 
@


1.2
log
@Backport security fix from ruby developer Shugo Maeda, similar to
SVN revision 37068.

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@file patch-error_c was initially added on branch OPENBSD_4_9.
@
text
@d1 17
@


1.1.2.1
log
@Security fix for CVE-2011-1004 and CVE-2011-1005.

ok jeremy@@ (MAINTAINER)
@
text
@a0 30
$OpenBSD$

Security fix for CVE-2011-1005
Ruby "#to_s" Safe Level Security Bypass Vulnerability

Backported from upstream svn revision 30911.

--- error.c.orig	Mon Aug  4 05:24:26 2008
+++ error.c	Wed Mar  9 10:57:11 2011
@@@@ -403,7 +403,6 @@@@ exc_to_s(exc)
     VALUE mesg = rb_attr_get(exc, rb_intern("mesg"));
 
     if (NIL_P(mesg)) return rb_class_name(CLASS_OF(exc));
-    if (OBJ_TAINTED(exc)) OBJ_TAINT(mesg);
     return mesg;
 }
 
@@@@ -667,10 +666,9 @@@@ name_err_to_s(exc)
     if (NIL_P(mesg)) return rb_class_name(CLASS_OF(exc));
     StringValue(str);
     if (str != mesg) {
-	rb_iv_set(exc, "mesg", mesg = str);
+	OBJ_INFECT(str, mesg);
     }
-    if (OBJ_TAINTED(exc)) OBJ_TAINT(mesg);
-    return mesg;
+    return str;
 }
 
 /*
@

