head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.4
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2017.09.16.22.54.58;	author jeremy;	state Exp;
branches
	1.1.2.1;
next	;
commitid	GEYS4QMl4MMO38U4;

1.1.2.1
date	2017.09.20.02.27.59;	author jeremy;	state Exp;
branches;
next	;
commitid	PVO7Q3HYYsckxjlD;


desc
@@


1.1
log
@Backport security fixes from ruby 2.2.8 to ruby 1.8.7.  Fixes
CVE-2017-0898 and CVE-2017-10784.  Regen patches while here.
@
text
@$OpenBSD$

Index: sprintf.c
--- sprintf.c.orig
+++ sprintf.c
@@@@ -728,6 +728,8 @@@@ rb_str_format(argc, argv, fmt)
 #if defined(_WIN32) && !defined(__BORLANDC__)
 		if (isnan(fval) || isinf(fval)) {
 		    const char *expr;
+		    int elen;
+		    char sign = '\0';
 
 		    if  (isnan(fval)) {
 			expr = "NaN";
@@@@ -736,51 +738,40 @@@@ rb_str_format(argc, argv, fmt)
 			expr = "Inf";
 		    }
 		    need = strlen(expr);
-		    if ((!isnan(fval) && fval < 0.0) || (flags & FPLUS))
-			need++;
-		    else if (flags & FSPACE)
-			need++;
+		    elen = need;
+		    i = 0;
+		    if (!isnan(fval) && fval < 0.0)
+			sign = '-';
+		    else if (flags & (FPLUS|FSPACE))
+			sign = (flags & FPLUS) ? '+' : ' ';
+		    if (sign)
+			++need;
 		    if ((flags & FWIDTH) && need < width)
 			need = width;
 
-		    CHECK(need);
-		    sprintf(&buf[blen], "%*s", need, "");
+#define FILL(c, l) do { \
+    if ((l) <= 0) break;\
+    CHECK(l);\
+    FILL_(c, l);\
+} while (0)
+
+#define FILL_(c, l) do { \
+    memset(&buf[blen], (c), (l));\
+    blen += (l);\
+} while (0)
+
+		    
+		    FILL(' ', need);
 		    if (flags & FMINUS) {
-			if (!isnan(fval) && fval < 0.0)
-			    buf[blen++] = '-';
-			else if (flags & FPLUS)
-			    buf[blen++] = '+';
-			else if (flags & FSPACE)
-			    blen++;
-			strncpy(&buf[blen], expr, strlen(expr));
+			if (sign)
+			    buf[blen - need--] = sign;
+			memcpy(&buf[blen - need], expr, elen);
 		    }
-		    else if (flags & FZERO) {
-			if (!isnan(fval) && fval < 0.0) {
-			    buf[blen++] = '-';
-			    need--;
-			}
-			else if (flags & FPLUS) {
-			    buf[blen++] = '+';
-			    need--;
-			}
-			else if (flags & FSPACE) {
-			    blen++;
-			    need--;
-			}
-			while (need-- - strlen(expr) > 0) {
-			    buf[blen++] = '0';
-			}
-			strncpy(&buf[blen], expr, strlen(expr));
-		    }
 		    else {
-			if (!isnan(fval) && fval < 0.0)
-			    buf[blen + need - strlen(expr) - 1] = '-';
-			else if (flags & FPLUS)
-			    buf[blen + need - strlen(expr) - 1] = '+';
-			strncpy(&buf[blen + need - strlen(expr)], expr,
-				strlen(expr));
+			if (sign)
+			    buf[blen - elen - 1] = sign;
+			memcpy(&buf[blen - elen], expr, elen);
 		    }
-		    blen += strlen(&buf[blen]);
 		    break;
 		}
 #endif	/* defined(_WIN32) && !defined(__BORLANDC__) */
@


1.1.2.1
log
@Backport security fixes for CVE-2017-10784 and CVE-2017-0898
to ruby 1.8.7.
@
text
@d1 1
a1 1
$OpenBSD: patch-sprintf_c,v 1.1 2017/09/16 22:54:58 jeremy Exp $
@

