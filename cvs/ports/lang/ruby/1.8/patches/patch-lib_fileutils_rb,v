head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.26
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.24
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.20
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.22
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.18
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.16
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.14
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.12
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.10
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.8
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.10.12.15.39.06;	author jeremy;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2011.03.09.16.04.05;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Modify FileUtils.mkdir_p to behave more like mkdir(1) -p. Instead of
attempting to create all intermediate directories and rescuing failures,
don't attempt to create directories that already exist.  Fixes systrace
warnings when building ruby ports.

ok landry
@
text
@$OpenBSD$

Make FileUtils.mkdir_p act more like mkdir(1) -p, by not attempting
to create directories that already exist.  This fixes systrace
warnings when building ports.

--- lib/fileutils.rb.orig	Fri Oct  8 08:52:53 2010
+++ lib/fileutils.rb	Fri Oct  8 08:58:40 2010
@@@@ -201,7 +201,7 @@@@ module FileUtils
     list.map {|path| path.sub(%r</\z>, '') }.each do |path|
       # optimize for the most common case
       begin
-        fu_mkdir path, options[:mode]
+        fu_mkdir path, options[:mode] unless File.directory?(path)
         next
       rescue SystemCallError
         next if File.directory?(path)
@@@@ -214,7 +214,7 @@@@ module FileUtils
       end
       stack.reverse_each do |path|
         begin
-          fu_mkdir path, options[:mode]
+          fu_mkdir path, options[:mode] unless File.directory?(path)
         rescue SystemCallError => err
           raise unless File.directory?(path)
         end
@


1.1.2.1
log
@Security fix for CVE-2011-1004 and CVE-2011-1005.

ok jeremy@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_fileutils_rb,v 1.1 2010/10/12 15:39:06 jeremy Exp $
d7 2
a8 8
Last two chunks:
  Security fix for CVE-2011-1004
  Ruby "FileUtils.remove_entry_secure" Race Condition Security Issue
  
  Backported from upstream svn revision 30910.

--- lib/fileutils.rb.orig	Tue Jun  8 08:31:50 2010
+++ lib/fileutils.rb	Wed Mar  9 10:57:11 2011
a26 27
@@@@ -658,10 +658,10 @@@@ module FileUtils
   # removing directories.  This requires the current process is the
   # owner of the removing whole directory tree, or is the super user (root).
   #
-  # WARNING: You must ensure that *ALL* parent directories are not
-  # world writable.  Otherwise this method does not work.
-  # Only exception is temporary directory like /tmp and /var/tmp,
-  # whose permission is 1777.
+  # WARNING: You must ensure that *ALL* parent directories cannot be
+  # moved by other untrusted users.  For example, parent directories
+  # should not be owned by untrusted users, and should not be world
+  # writable except when the sticky bit set.
   #
   # WARNING: Only the owner of the removing directory tree, or Unix super
   # user (root) should invoke this method.  Otherwise this method does not
@@@@ -704,6 +704,11 @@@@ module FileUtils
       end
       f.chown euid, -1
       f.chmod 0700
+      unless fu_stat_identical_entry?(st, File.lstat(fullpath))
+        # TOC-to-TOU attack?
+        File.unlink fullpath
+        return
+      end
     }
     # ---- tree root is frozen ----
     root = Entry_.new(path)
@

