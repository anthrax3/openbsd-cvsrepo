head	1.1;
access;
symbols
	OPENBSD_5_4:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2013.11.26.13.49.05;	author jasper;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2013.11.26.13.49.05;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-util_c was initially added on branch OPENBSD_5_4.
@
text
@@


1.1.2.1
log
@backport security fix for CVE-2013-4164

ok sthen@@
@
text
@a0 55
$OpenBSD: patch-util_c,v 1.1 2013/11/24 02:27:08 jeremy Exp $

Backport r43776 and r43782 from Ruby SVN to fix CVE-2013-4164.

--- util.c.orig	Thu May 17 04:48:59 2012
+++ util.c	Tue Nov 26 13:35:17 2013
@@@@ -715,6 +715,11 @@@@ extern void *MALLOC(size_t);
 #else
 #define MALLOC malloc
 #endif
+#ifdef FREE
+extern void FREE(void*);
+#else
+#define FREE free
+#endif
 
 #ifndef Omit_Private_Memory
 #ifndef PRIVATE_MEM
@@@@ -1005,7 +1010,7 @@@@ Balloc(int k)
 #endif
 
     ACQUIRE_DTOA_LOCK(0);
-    if ((rv = freelist[k]) != 0) {
+    if (k <= Kmax && (rv = freelist[k]) != 0) {
         freelist[k] = rv->next;
     }
     else {
@@@@ -1015,7 +1020,7 @@@@ Balloc(int k)
 #else
         len = (sizeof(Bigint) + (x-1)*sizeof(ULong) + sizeof(double) - 1)
                 /sizeof(double);
-        if (pmem_next - private_mem + len <= PRIVATE_mem) {
+        if (k <= Kmax && pmem_next - private_mem + len <= PRIVATE_mem) {
             rv = (Bigint*)pmem_next;
             pmem_next += len;
         }
@@@@ -1034,6 +1039,10 @@@@ static void
 Bfree(Bigint *v)
 {
     if (v) {
+        if (v->k > Kmax) {
+            FREE(v);
+            return;
+        }
         ACQUIRE_DTOA_LOCK(0);
         v->next = freelist[v->k];
         freelist[v->k] = v;
@@@@ -2097,6 +2106,7 @@@@ break2:
         for (; c >= '0' && c <= '9'; c = *++s) {
 have_dig:
             nz++;
+            if (nf > DBL_DIG * 4) continue;
             if (c -= '0') {
                 nf += nz;
                 for (i = 1; i < nz; i++)
@

