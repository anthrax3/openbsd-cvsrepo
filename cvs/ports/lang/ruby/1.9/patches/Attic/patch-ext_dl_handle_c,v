head	1.1;
access;
symbols
	OPENBSD_5_8:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2015.12.24.11.07.57;	author jasper;	state dead;
branches
	1.1.2.1;
next	;
commitid	6kc0dxBPZGDFkoCJ;

1.1.2.1
date	2015.12.24.11.07.57;	author jasper;	state Exp;
branches;
next	;
commitid	6kc0dxBPZGDFkoCJ;


desc
@@


1.1
log
@file patch-ext_dl_handle_c was initially added on branch OPENBSD_5_8.
@
text
@@


1.1.2.1
log
@Security fix for CVE-2015-7551
@
text
@a0 48
$OpenBSD$

Security fix for CVE-2015-7551
Backported from http://svn.ruby-lang.org/cgi-bin/viewvc.cgi?view=revision&revision=53161

--- ext/dl/handle.c.orig	Thu Dec 24 11:58:42 2015
+++ ext/dl/handle.c	Thu Dec 24 11:58:49 2015
@@@@ -5,6 +5,8 @@@@
 #include <ruby.h>
 #include "dl.h"
 
+#define SafeStringValuePtr(v) (rb_string_value(&v), rb_check_safe_obj(v), RSTRING_PTR(v))
+
 VALUE rb_cDLHandle;
 
 #ifdef _WIN32
@@@@ -129,11 +131,11 @@@@ rb_dlhandle_initialize(int argc, VALUE argv[], VALUE s
 	cflag = RTLD_LAZY | RTLD_GLOBAL;
 	break;
       case 1:
-	clib = NIL_P(lib) ? NULL : StringValuePtr(lib);
+	clib = NIL_P(lib) ? NULL : SafeStringValuePtr(lib);
 	cflag = RTLD_LAZY | RTLD_GLOBAL;
 	break;
       case 2:
-	clib = NIL_P(lib) ? NULL : StringValuePtr(lib);
+	clib = NIL_P(lib) ? NULL : SafeStringValuePtr(lib);
 	cflag = NUM2INT(flag);
 	break;
       default:
@@@@ -262,13 +264,16 @@@@ VALUE
 rb_dlhandle_sym(VALUE self, VALUE sym)
 {
     struct dl_handle *dlhandle;
+    const char *name;
 
+    name = SafeStringValuePtr(sym);
+
     TypedData_Get_Struct(self, struct dl_handle, &dlhandle_data_type, dlhandle);
     if( ! dlhandle->open ){
 	rb_raise(rb_eDLError, "closed handle");
     }
 
-    return dlhandle_sym(dlhandle->ptr, StringValueCStr(sym));
+    return dlhandle_sym(dlhandle->ptr, name);
 }
 
 #ifndef RTLD_NEXT
@

