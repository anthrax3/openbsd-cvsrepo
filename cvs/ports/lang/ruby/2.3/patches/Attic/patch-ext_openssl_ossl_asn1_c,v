head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2017.09.20.02.17.57;	author jeremy;	state dead;
branches
	1.1.2.1;
next	;
commitid	etACA5UcBG2pWvRr;

1.1.2.1
date	2017.09.20.02.17.57;	author jeremy;	state Exp;
branches;
next	;
commitid	etACA5UcBG2pWvRr;


desc
@@


1.1
log
@file patch-ext_openssl_ossl_asn1_c was initially added on branch OPENBSD_6_1.
@
text
@@


1.1.2.1
log
@Backport security fixes for CVE-2017-14033, CVE-2017-10784,
CVE-2017-0898, and CVE-2017-14064 to ruby 2.3.3.
@
text
@a0 37
$OpenBSD$
--- ext/openssl/ossl_asn1.c.orig	Tue Sep 22 09:12:15 2015
+++ ext/openssl/ossl_asn1.c	Tue Sep 19 12:11:52 2017
@@@@ -870,19 +870,18 @@@@ int_ossl_asn1_decode0_cons(unsigned char **pp, long ma
 {
     VALUE value, asn1data, ary;
     int infinite;
-    long off = *offset;
+    long available_len, off = *offset;
 
     infinite = (j == 0x21);
     ary = rb_ary_new();
 
-    while (length > 0 || infinite) {
+    available_len = infinite ? max_len : length;
+    while (available_len > 0) {
 	long inner_read = 0;
-	value = ossl_asn1_decode0(pp, max_len, &off, depth + 1, yield, &inner_read);
+	value = ossl_asn1_decode0(pp, available_len, &off, depth + 1, yield, &inner_read);
 	*num_read += inner_read;
-	max_len -= inner_read;
+	available_len -= inner_read;
 	rb_ary_push(ary, value);
-	if (length > 0)
-	    length -= inner_read;
 
 	if (infinite &&
 	    NUM2INT(ossl_asn1_get_tag(value)) == V_ASN1_EOC &&
@@@@ -973,7 +972,7 @@@@ ossl_asn1_decode0(unsigned char **pp, long length, lon
     if(j & V_ASN1_CONSTRUCTED) {
 	*pp += hlen;
 	off += hlen;
-	asn1data = int_ossl_asn1_decode0_cons(pp, length, len, &off, depth, yield, j, tag, tag_class, &inner_read);
+	asn1data = int_ossl_asn1_decode0_cons(pp, length - hlen, len, &off, depth, yield, j, tag, tag_class, &inner_read);
 	inner_read += hlen;
     }
     else {
@

