head	1.90;
access;
symbols
	OPENBSD_6_1:1.90.0.2
	OPENBSD_6_1_BASE:1.90
	OPENBSD_6_0:1.88.0.2
	OPENBSD_6_0_BASE:1.88
	OPENBSD_5_9:1.86.0.2
	OPENBSD_5_9_BASE:1.86
	OPENBSD_5_8:1.83.0.4
	OPENBSD_5_8_BASE:1.83
	OPENBSD_5_7:1.79.0.2
	OPENBSD_5_7_BASE:1.79
	OPENBSD_5_6:1.72.0.4
	OPENBSD_5_6_BASE:1.72
	OPENBSD_5_5:1.72.0.2
	OPENBSD_5_5_BASE:1.72
	OPENBSD_5_4:1.65.0.2
	OPENBSD_5_4_BASE:1.65
	OPENBSD_5_3:1.55.0.2
	OPENBSD_5_3_BASE:1.55
	OPENBSD_5_2:1.50.0.4
	OPENBSD_5_2_BASE:1.50
	OPENBSD_5_1_BASE:1.50
	OPENBSD_5_1:1.50.0.2
	OPENBSD_5_0:1.45.0.2
	OPENBSD_5_0_BASE:1.45
	OPENBSD_4_9:1.41.0.2
	OPENBSD_4_9_BASE:1.41
	OPENBSD_4_8:1.25.0.4
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.25.0.2
	OPENBSD_4_7_BASE:1.25
	OPENBSD_4_6:1.21.0.4
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.21.0.2
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.19.0.2
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.11.0.4
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.2
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.1.0.8
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.6
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.90
date	2017.01.06.16.03.54;	author jeremy;	state Exp;
branches;
next	1.89;
commitid	afFJAwisvxJMtdlW;

1.89
date	2016.09.06.15.23.26;	author jeremy;	state Exp;
branches;
next	1.88;
commitid	2ZBG0wQIvgRM8IFF;

1.88
date	2016.05.27.17.04.35;	author jeremy;	state Exp;
branches;
next	1.87;
commitid	c1KIK2uxBxGNIyAI;

1.87
date	2016.03.20.16.12.24;	author naddy;	state Exp;
branches;
next	1.86;
commitid	guiZq8cnNbVyyHzx;

1.86
date	2016.01.17.19.39.05;	author jasper;	state Exp;
branches;
next	1.85;
commitid	SjS59rI9cxwyCO6j;

1.85
date	2016.01.07.00.55.23;	author jeremy;	state Exp;
branches;
next	1.84;
commitid	CNreoFnRj8y2RiAC;

1.84
date	2015.08.27.14.36.14;	author jeremy;	state Exp;
branches;
next	1.83;
commitid	ZxfhkhmqpakiGFHV;

1.83
date	2015.07.26.04.41.37;	author jeremy;	state Exp;
branches;
next	1.82;
commitid	LcseEgYEPPse5B7f;

1.82
date	2015.07.19.02.10.31;	author jeremy;	state Exp;
branches;
next	1.81;
commitid	A33PdkIjYp6nCrLn;

1.81
date	2015.07.18.21.07.40;	author jeremy;	state Exp;
branches;
next	1.80;
commitid	ff3MILYVohdMupuL;

1.80
date	2015.07.16.17.27.08;	author jeremy;	state Exp;
branches;
next	1.79;
commitid	wGOk1Dw0Jh0UvwX9;

1.79
date	2015.01.08.18.51.20;	author jeremy;	state Exp;
branches;
next	1.78;
commitid	a42zu42WYHyRKhjN;

1.78
date	2014.10.17.17.08.57;	author jasper;	state Exp;
branches;
next	1.77;
commitid	klvtIZhc5ZoBSiq6;

1.77
date	2014.10.15.02.06.35;	author jeremy;	state Exp;
branches;
next	1.76;
commitid	YbqGQnpgercW6GRD;

1.76
date	2014.10.11.19.52.10;	author jeremy;	state Exp;
branches;
next	1.75;
commitid	FUidtwTUnJBIVSAa;

1.75
date	2014.09.22.15.21.00;	author jeremy;	state Exp;
branches;
next	1.74;
commitid	khDngrdSX7m9JLa3;

1.74
date	2014.09.18.07.42.55;	author jasper;	state Exp;
branches;
next	1.73;
commitid	Q4mex4mvph5IOjrp;

1.73
date	2014.09.17.09.39.35;	author jasper;	state Exp;
branches;
next	1.72;
commitid	mM5zt0Gw8MvHKloM;

1.72
date	2014.01.15.02.03.17;	author jeremy;	state Exp;
branches;
next	1.71;

1.71
date	2014.01.14.00.59.07;	author jeremy;	state Exp;
branches;
next	1.70;

1.70
date	2014.01.11.22.33.50;	author jeremy;	state Exp;
branches;
next	1.69;

1.69
date	2014.01.09.18.28.22;	author jeremy;	state Exp;
branches;
next	1.68;

1.68
date	2013.10.26.23.47.23;	author jeremy;	state Exp;
branches;
next	1.67;

1.67
date	2013.10.06.17.40.30;	author jeremy;	state Exp;
branches;
next	1.66;

1.66
date	2013.08.18.21.05.20;	author zhuk;	state Exp;
branches;
next	1.65;

1.65
date	2013.06.12.11.03.07;	author sthen;	state Exp;
branches;
next	1.64;

1.64
date	2013.06.12.08.29.53;	author sthen;	state Exp;
branches;
next	1.63;

1.63
date	2013.04.02.15.41.23;	author zhuk;	state Exp;
branches;
next	1.62;

1.62
date	2013.03.28.06.54.49;	author zhuk;	state Exp;
branches;
next	1.61;

1.61
date	2013.03.26.18.51.44;	author jeremy;	state Exp;
branches;
next	1.60;

1.60
date	2013.03.20.19.13.50;	author jeremy;	state Exp;
branches;
next	1.59;

1.59
date	2013.03.19.23.46.41;	author jeremy;	state Exp;
branches;
next	1.58;

1.58
date	2013.03.13.22.49.37;	author ajacoutot;	state Exp;
branches;
next	1.57;

1.57
date	2013.03.11.11.20.28;	author espie;	state Exp;
branches;
next	1.56;

1.56
date	2013.03.04.18.39.06;	author zhuk;	state Exp;
branches;
next	1.55;

1.55
date	2013.02.09.14.49.51;	author sthen;	state Exp;
branches;
next	1.54;

1.54
date	2013.01.26.17.57.51;	author jeremy;	state Exp;
branches;
next	1.53;

1.53
date	2013.01.09.17.38.03;	author jeremy;	state Exp;
branches;
next	1.52;

1.52
date	2012.10.24.22.51.26;	author jeremy;	state Exp;
branches;
next	1.51;

1.51
date	2012.09.23.16.56.15;	author jeremy;	state Exp;
branches;
next	1.50;

1.50
date	2011.12.09.21.41.43;	author jeremy;	state Exp;
branches;
next	1.49;

1.49
date	2011.12.02.19.33.39;	author jeremy;	state Exp;
branches;
next	1.48;

1.48
date	2011.11.17.15.24.01;	author jeremy;	state Exp;
branches;
next	1.47;

1.47
date	2011.11.09.00.03.31;	author jeremy;	state Exp;
branches;
next	1.46;

1.46
date	2011.08.22.17.53.38;	author espie;	state Exp;
branches;
next	1.45;

1.45
date	2011.07.19.17.26.30;	author jeremy;	state Exp;
branches;
next	1.44;

1.44
date	2011.03.24.21.26.59;	author jeremy;	state Exp;
branches;
next	1.43;

1.43
date	2011.03.18.23.04.22;	author jeremy;	state Exp;
branches;
next	1.42;

1.42
date	2011.03.14.20.39.20;	author jeremy;	state Exp;
branches;
next	1.41;

1.41
date	2011.01.06.04.15.46;	author jeremy;	state Exp;
branches;
next	1.40;

1.40
date	2010.12.02.01.38.40;	author jeremy;	state Exp;
branches;
next	1.39;

1.39
date	2010.11.24.21.30.36;	author jeremy;	state Exp;
branches;
next	1.38;

1.38
date	2010.11.19.17.54.37;	author jeremy;	state Exp;
branches;
next	1.37;

1.37
date	2010.11.17.08.05.18;	author espie;	state Exp;
branches;
next	1.36;

1.36
date	2010.11.16.21.50.27;	author jeremy;	state Exp;
branches;
next	1.35;

1.35
date	2010.11.16.18.30.38;	author jeremy;	state Exp;
branches;
next	1.34;

1.34
date	2010.11.10.09.00.10;	author landry;	state Exp;
branches;
next	1.33;

1.33
date	2010.11.08.23.20.43;	author jeremy;	state Exp;
branches;
next	1.32;

1.32
date	2010.10.26.21.14.24;	author jeremy;	state Exp;
branches;
next	1.31;

1.31
date	2010.10.24.09.16.13;	author sthen;	state Exp;
branches;
next	1.30;

1.30
date	2010.10.15.20.24.27;	author jeremy;	state Exp;
branches;
next	1.29;

1.29
date	2010.10.12.16.03.41;	author jeremy;	state Exp;
branches;
next	1.28;

1.28
date	2010.10.07.17.48.53;	author jeremy;	state Exp;
branches;
next	1.27;

1.27
date	2010.09.28.20.12.16;	author jeremy;	state Exp;
branches;
next	1.26;

1.26
date	2010.09.23.21.58.50;	author jeremy;	state Exp;
branches;
next	1.25;

1.25
date	2009.08.11.15.28.41;	author bernd;	state Exp;
branches;
next	1.24;

1.24
date	2009.08.11.14.30.15;	author msf;	state Exp;
branches;
next	1.23;

1.23
date	2009.08.11.09.20.23;	author msf;	state Exp;
branches;
next	1.22;

1.22
date	2009.08.11.07.27.30;	author msf;	state Exp;
branches;
next	1.21;

1.21
date	2008.09.28.15.47.27;	author bernd;	state Exp;
branches;
next	1.20;

1.20
date	2008.09.02.21.08.29;	author steven;	state Exp;
branches;
next	1.19;

1.19
date	2008.06.14.23.40.35;	author landry;	state Exp;
branches;
next	1.18;

1.18
date	2008.06.10.15.40.44;	author jcs;	state Exp;
branches;
next	1.17;

1.17
date	2008.02.08.17.13.15;	author bernd;	state Exp;
branches;
next	1.16;

1.16
date	2008.01.14.18.39.07;	author bernd;	state Exp;
branches;
next	1.15;

1.15
date	2007.11.13.17.45.28;	author bernd;	state Exp;
branches;
next	1.14;

1.14
date	2007.11.13.17.32.59;	author bernd;	state Exp;
branches;
next	1.13;

1.13
date	2007.11.13.16.10.37;	author bernd;	state Exp;
branches;
next	1.12;

1.12
date	2007.11.05.20.55.03;	author bernd;	state Exp;
branches;
next	1.11;

1.11
date	2006.12.01.14.04.06;	author steven;	state Exp;
branches;
next	1.10;

1.10
date	2006.11.27.09.36.14;	author msf;	state Exp;
branches;
next	1.9;

1.9
date	2006.11.25.10.03.32;	author msf;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.28.21.52.02;	author bernd;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.18.13.41.36;	author bernd;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.23.21.12.24;	author sturm;	state Exp;
branches;
next	1.5;

1.5
date	2006.07.14.15.41.21;	author bernd;	state Exp;
branches;
next	1.4;

1.4
date	2006.06.11.19.56.31;	author sturm;	state Exp;
branches;
next	1.3;

1.3
date	2006.06.11.18.57.11;	author sturm;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.23.17.15.25;	author msf;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.09.19.54.20;	author xsa;	state Exp;
branches;
next	;


desc
@@


1.90
log
@Add support for using ruby 2.4 to ruby.port.mk

This adds support for FLAVOR=ruby24 to most ruby gem ports, to
allow building of a package for ruby 2.4.

Additionally, refactor ruby.port.mk to reduce duplication and make
future updates simpler.

OK jasper@@
@
text
@# $OpenBSD: ruby.port.mk,v 1.89 2016/09/06 15:23:26 jeremy Exp $

# ruby module

CATEGORIES+=		lang/ruby

# Whether the ruby module should automatically add FLAVORs.
# If left blank, does so only for gem and extconf ports.
.if ${CONFIGURE_STYLE:L:Mgem} || ${CONFIGURE_STYLE:L:Mextconf}
MODRUBY_HANDLE_FLAVORS ?= Yes
.else
MODRUBY_HANDLE_FLAVORS ?= No
.endif

# This allows you to build packages for multiple ruby versions and
# implementations using the same port directory for gem and extconf based
# ports.  It does this by adding FLAVORS automatically, unless FLAVORS are
# already defined or the port defines MODRUBY_REV to tie the port to a specific
# ruby version.  For example, JDBC gem ports want to set FLAVOR=jruby, since
# they don't work on other ruby implementations.
.if !defined(MODRUBY_REV)
.  if ${MODRUBY_HANDLE_FLAVORS:L:Myes}

# If ruby.pork.mk should handle FLAVORs, define a separate FLAVOR
# for each ruby interpreter
.    if !defined(FLAVORS)
FLAVORS=		ruby18 ruby21 ruby22 ruby23 ruby24
.      if !${CONFIGURE_STYLE:L:Mext} && !${CONFIGURE_STYLE:L:Mextconf}
FLAVORS+=		jruby
.      endif
.    endif

# Instead of adding flavors to the end of the package name, we use
# different package stems for different ruby versions and implementations.
# ruby 1.8 uses the historical ruby-* package stem, newer ruby versions
# use rubyXY-* and jruby uses jruby-*.  In most cases,
# PKGNAME in the port should be set to the same as DISTNAME, and this
# will insert the correct package prefix.
FULLPKGNAME?=		${MODRUBY_PKG_PREFIX}-${PKGNAME}

# If the port installs binary files or man pages and can work on multiple
# versions of ruby, those files should have the appropriate suffix so that
# they do not conflict.  GEM_BIN_SUFFIX should be added after such a filename
# in the PLIST so that the gem will correctly package on all supported
# versions of ruby.
SUBST_VARS+=		GEM_BIN_SUFFIX GEM_MAN_SUFFIX

FLAVOR?=
# Without a FLAVOR, assume the use of ruby 2.3.
.    if empty(FLAVOR)
FLAVOR =		ruby23
.    endif

# Check for conflicting FLAVORs and set MODRUBY_REV appropriately based
# on the FLAVOR.
.    for i in ruby18 ruby21 ruby22 ruby23 ruby24 jruby
.      if ${FLAVOR:M$i}
MODRUBY_REV = ${i:C/ruby([0-9])/\1./}
.        if ${FLAVOR:N$i:Mruby18} || \
            ${FLAVOR:N$i:Mruby21} || \
            ${FLAVOR:N$i:Mruby22} || \
            ${FLAVOR:N$i:Mruby23} || \ 
            ${FLAVOR:N$i:Mruby24} || \ 
	    ${FLAVOR:N$i:Mjruby}
ERRORS += "Fatal: Conflicting flavors used: ${FLAVOR}"
.        endif
.      endif
.    endfor

.    if ${FLAVOR:Mruby18}
# Handle updates from older ruby 1.8 ports that didn't use the ruby18
# FLAVOR by adding a @@pkgpath entry to the PLIST.
SUBST_VARS+=	PKGPATH
PKG_ARGS+=	-f ${PORTSDIR}/lang/ruby/ruby18.PLIST
.    endif
.  endif
.endif

# The default ruby version to use for non-gem/extconf ports.  Defaults to ruby
# 2.3 for consistency with the default ruby23 FLAVOR for gem/extconf ports.
MODRUBY_REV?=		2.3

# Because the jruby FLAVORs use same binary names but in
# different directories, GEM_MAN_SUFFIX is used for the man pages to avoid
# conflicts since all man files go in the same directory.
GEM_MAN_SUFFIX =	${GEM_BIN_SUFFIX}

# Use the FLAVOR as the prefix for the package, to avoid conflicts.
MODRUBY_PKG_PREFIX =	${MODRUBY_FLAVOR}

# Set MODRUBY_* variables as well as the path for the ruby interpreter and
# related commands used by MODRUBY_TEST and manually in some port targets.
.if ${MODRUBY_REV} == jruby
GEM_MAN_SUFFIX =	-${MODRUBY_FLAVOR}
MODRUBY_ARCH=		${MACHINE_ARCH:S/amd64/x86_64/}-java
MODRUBY_BIN_RSPEC =	${RUBY} -S rspec
MODRUBY_BIN_TESTRB =	${RUBY} -S testrb
MODRUBY_FLAVOR =	jruby
MODRUBY_LIBDIR=		${LOCALBASE}/jruby/lib/ruby
MODRUBY_LIBREV =	2.3.0
MODRUBY_SITEARCHDIR =	${MODRUBY_SITEDIR}/java
MODRUBY_SITEDIR =	jruby/lib/ruby/site_ruby/${MODRUBY_LIBREV}
RAKE=			${RUBY} -S rake
RSPEC=			${RUBY} -S spec
RUBY=			${LOCALBASE}/jruby/bin/jruby

.  if ${CONFIGURE_STYLE:L:Mext} || ${CONFIGURE_STYLE:L:Mextconf}
ERRORS += "Fatal: Ruby C extensions are unsupported on JRuby"
.  else
MODRUBY_RUN_DEPENDS=	lang/jruby
.  endif

.else # not jruby

.  if ${MODRUBY_REV} == 1.8
MODRUBY_PKG_PREFIX =	ruby
.  endif

GEM_BIN_SUFFIX =	${MODRUBY_BINREV}
MODRUBY_ARCH=		${MACHINE_ARCH:S/amd64/x86_64/}-openbsd
MODRUBY_BINREV =	${MODRUBY_LIBREV:S/.//}
MODRUBY_BIN_RSPEC =	${LOCALBASE}/bin/rspec${MODRUBY_BINREV}
MODRUBY_BIN_TESTRB =	${LOCALBASE}/bin/testrb${MODRUBY_BINREV}
MODRUBY_FLAVOR =	ruby${MODRUBY_BINREV}
MODRUBY_LIBDIR=		${LOCALBASE}/lib/ruby
MODRUBY_LIBREV =	${MODRUBY_REV}
MODRUBY_LIB_DEPENDS=	${MODRUBY_RUN_DEPENDS}
MODRUBY_RUN_DEPENDS=	lang/ruby/${MODRUBY_REV}
MODRUBY_SITEARCHDIR =	${MODRUBY_SITEDIR}/${MODRUBY_ARCH}
MODRUBY_SITEDIR =	lib/ruby/site_ruby/${MODRUBY_LIBREV}
MODRUBY_WANTLIB=	ruby${MODRUBY_BINREV}
RAKE=			${LOCALBASE}/bin/rake${MODRUBY_BINREV}
RSPEC=			${LOCALBASE}/bin/spec${MODRUBY_BINREV}
RUBY=			${LOCALBASE}/bin/ruby${MODRUBY_BINREV}
.endif

MODRUBY_RSPEC_DEPENDS =	devel/ruby-rspec/1,${MODRUBY_FLAVOR}<2.0
MODRUBY_RSPEC3_DEPENDS = devel/ruby-rspec/3/rspec,${MODRUBY_FLAVOR}>=3.0

.if defined(MODRUBY_TEST)
.  if !${MODRUBY_TEST:L:Mrspec} && !${MODRUBY_TEST:L:Mrspec3} && \
     !${MODRUBY_TEST:L:Mrake} && !${MODRUBY_TEST:L:Mruby} && \
     !${MODRUBY_TEST:L:Mtestrb}
ERRORS += "Fatal: Unsupported MODRUBY_TEST value: ${MODRUBY_TEST}"
.  endif
.else
.  if ${CONFIGURE_STYLE:L:Mextconf} || ${CONFIGURE_STYLE:L:Mgem} || \
	${CONFIGURE_STYLE:L:Msetup}
.    if !target(do-test)
# Disable regress for extconf, gem, and setup based ports, since they
# won't use make check for test.
NO_TEST =	Yes
.    endif
.  endif
MODRUBY_TEST?=
.endif

MODRUBY_BUILD_DEPENDS=	${MODRUBY_RUN_DEPENDS}

# common directories for ruby extensions
# used to create docs and examples install path
MODRUBY_RELDOCDIR=	share/doc/${MODRUBY_PKG_PREFIX}
MODRUBY_RELEXAMPLEDIR=	share/examples/${MODRUBY_PKG_PREFIX}
MODRUBY_DOCDIR=		${PREFIX}/${MODRUBY_RELDOCDIR}
MODRUBY_EXAMPLEDIR=	${PREFIX}/${MODRUBY_RELEXAMPLEDIR}
SUBST_VARS +=		^MODRUBY_RELDOCDIR ^MODRUBY_RELEXAMPLEDIR

# Assume that we want to automatically add ruby to BUILD_DEPENDS
# and RUN_DEPENDS unless the port specifically requests not to.
MODRUBY_BUILDDEP?=	Yes
MODRUBY_RUNDEP?=	Yes

.if ${NO_BUILD:L} == no && ${MODRUBY_BUILDDEP:L} == yes
BUILD_DEPENDS+=		${MODRUBY_BUILD_DEPENDS}
.endif
.if ${MODRUBY_RUNDEP:L} == yes
RUN_DEPENDS+=		${MODRUBY_RUN_DEPENDS}
.endif

.if ${MODRUBY_TEST:L:Mrake} && ${MODRUBY_REV} == 1.8
TEST_DEPENDS+=	devel/ruby-rake
.endif
.if ${MODRUBY_TEST:L:Mrspec}
TEST_DEPENDS+=	${MODRUBY_RSPEC_DEPENDS}
.endif
.if ${MODRUBY_TEST:L:Mrspec3}
TEST_DEPENDS+=	${MODRUBY_RSPEC3_DEPENDS}
.endif

MODRUBY_RUBY_ADJ =	perl -pi \
		-e '$$. == 1 && s|^.*env ruby.*$$|\#!${RUBY}|;' \
		-e '$$. == 1 && s|^.*bin/ruby.*$$|\#!${RUBY}|;' \
		-e 'close ARGV if eof;'
MODRUBY_ADJ_FILES?=
.if !empty(MODRUBY_ADJ_FILES)
MODRUBY_ADJ_REPLACE=	for pat in ${MODRUBY_ADJ_FILES:QL}; do \
			 find ${WRKSRC} -type f -name "$$pat" -print0 | \
			  xargs -0r ${MODRUBY_RUBY_ADJ} ; \
			done
MODRUBY_pre-configure += ${MODRUBY_ADJ_REPLACE}
.endif

MODRUBY_WANTLIB+=	c m
.if ${MODRUBY_REV} != 1.8
MODRUBY_WANTLIB+=	gmp pthread
.endif

.if ${CONFIGURE_STYLE:L:Mext} || ${CONFIGURE_STYLE:L:Mextconf}
# Ruby C exensions are specific to an arch and are loaded as
# shared libraries (not compiled into ruby), so make sure PKG_ARCH=*
# is not set.
.  if defined(PKG_ARCH) && ${PKG_ARCH} == *
ERRORS+=	"Fatal: Should not have PKG_ARCH=* when compiling extensions"
.  endif

# Add appropriate libraries to WANTLIB depending on ruby version and
# implementation
WANTLIB+=	${MODRUBY_WANTLIB}
LIB_DEPENDS+=	${MODRUBY_LIB_DEPENDS}
.endif

.if ${CONFIGURE_STYLE:L:Mextconf}
CONFIGURE_STYLE=	simple
CONFIGURE_SCRIPT=	${SETENV} ${MAKE_ENV} ${RUBY} extconf.rb
.elif ${CONFIGURE_STYLE:L:Mgem}
# All gems should be in the same directory on rubygems.org.
MASTER_SITES?=	${MASTER_SITE_RUBYGEMS}
EXTRACT_SUFX=	.gem

# Require versions that no longer create the .require_paths files.
.  if ${MODRUBY_REV} == 1.8
BUILD_DEPENDS+=	devel/ruby-gems>=1.8.23p3
RUN_DEPENDS+=	devel/ruby-gems>=1.3.7p0
.  elif ${MODRUBY_REV} == jruby
BUILD_DEPENDS+=	lang/jruby>=1.6.5
.  elif ${MODRUBY_REV} == 2.1
# Require version that fixes extensions directory path
BUILD_DEPENDS+=	lang/ruby/2.1>=2.1.0p0
.  endif

# Pure ruby gem ports without C extensions are arch-independent.
.  if !${CONFIGURE_STYLE:L:Mext}
PKG_ARCH=	*
.  elif ${MODRUBY_REV} != 1.8
# Add build complete file to package so rubygems doesn't complain
# or build extensions at runtime
GEM_EXTENSIONS_DIR ?= ${GEM_LIB}/extensions/${MODRUBY_ARCH:S/i386/x86/}/${MODRUBY_REV}/${DISTNAME}
GEM_EXTENSIONS_FILE ?= ${GEM_EXTENSIONS_DIR}/gem.build_complete
SUBST_VARS+=	GEM_EXTENSIONS_DIR
PKG_ARGS+=	-f ${PORTSDIR}/lang/ruby/rubygems-ext.PLIST
.  endif

# PLIST magic.  Set variables so that the same PLIST will work for
# all ruby versions and implementations.
SUBST_VARS+=	^GEM_LIB ^GEM_BIN DISTNAME

.  if ${MODRUBY_REV} == jruby
GEM=		${RUBY} -S gem
GEM_BIN =	jruby/bin
GEM_LIB =	jruby/lib/ruby/gems/1.8
GEM_BASE_LIB=	${GEM_BASE}/jruby/${MODRUBY_LIBREV}
.  else
GEM=		${LOCALBASE}/bin/gem${MODRUBY_BINREV}
GEM_BIN =	bin
GEM_LIB =	lib/ruby/gems/${MODRUBY_LIBREV}
GEM_BASE_LIB=	${GEM_BASE}/ruby/${MODRUBY_LIBREV}
.  endif
GEM_BASE=	${WRKDIR}/gem-tmp/.gem
GEM_ABS_PATH=	${PREFIX}/${GEM_LIB}
GEM_BASE_BIN=	${GEM_BASE_LIB}/bin

# We purposely do not install documentation for ruby gems, because
# the filenames are generated differently on different ruby versions,
# and most use 1 file per method, which is insane.
GEM_FLAGS+=	--local --no-rdoc --no-ri --no-force --verbose --backtrace \
		--user-install
_GEM_CONTENT=	${WRKDIR}/gem-content
_GEM_DATAFILE=	${_GEM_CONTENT}/data.tar.gz
_GEM_PATCHED=	${DISTNAME}${EXTRACT_SUFX}
_GEM_MAKE=	"make V=1"

# Unpack the gem into WRKDIST so it can be patched.  Include the gem metadata
# under WRKDIST so it can be patched easily to remove or change dependencies.
# Remove any signing of packages, as patching the gem could then break the
# signatures.
EXTRACT_CASES += *.gem) \
    mkdir ${WRKDIST} ${_GEM_CONTENT}; \
    cd ${_GEM_CONTENT} && tar -xf ${FULLDISTDIR}/$$archive; \
    cd ${WRKDIST} && tar -xzf ${_GEM_DATAFILE} && rm -f ${_GEM_DATAFILE}; \
    gzcat ${_GEM_CONTENT}/metadata.gz > ${WRKDIST}/.metadata; \
    rm -f ${_GEM_CONTENT}/*.gz.sig ${_GEM_CONTENT}/checksums.yaml.gz;;

# Rebuild the gem manually after possible patching, then install it to a
# temporary directory (not the final directory under fake, since that would
# require root access and building C extensions as root).
MODRUBY_BUILD_TARGET = \
    if [ -f ${WRKDIST}/.metadata ]; then \
	    cd ${WRKDIST} && gzip .metadata && \
		    mv -f .metadata.gz ${_GEM_CONTENT}/metadata.gz; \
    fi; \
    cd ${WRKDIST} && pax -wz -s '/.*${PATCHORIG:S@@.@@\.@@g}$$//' \
	    -x ustar -o write_opt=nodir . >${_GEM_DATAFILE}; \
    cd ${_GEM_CONTENT} && tar -cf ${WRKDIR}/${_GEM_PATCHED} *.gz; \
    mkdir -p ${GEM_BASE}; \
    env -i ${MAKE_ENV} HOME=`dirname ${GEM_BASE}` GEM_HOME=${GEM_BASE} \
	    make=${_GEM_MAKE} \
	    ${GEM} install ${GEM_FLAGS} ${WRKDIR}/${_GEM_PATCHED} \
	    -- ${CONFIGURE_ARGS}

# Take the temporary gem directory, install the binary stub files to
# the appropriate directory, and move and fix ownership the gem library
# files.
MODRUBY_INSTALL_TARGET = \
    if [ -d ${GEM_BASE_BIN} ]; then \
	    ${INSTALL_DATA_DIR} ${PREFIX}/${GEM_BIN}; \
	    for f in ${GEM_BASE_BIN}/*; do \
		    ${INSTALL_SCRIPT} $$f ${PREFIX}/${GEM_BIN}; \
	    done; \
	    rm -r ${GEM_BASE_BIN}; \
    fi; \
    ${INSTALL_DATA_DIR} ${GEM_ABS_PATH}; \
    cd ${GEM_BASE_LIB} && mv * ${GEM_ABS_PATH}; \
    if [ 'X' != "X${GEM_EXTENSIONS_FILE}" ]; then \
	mkdir -p ${PREFIX}/${GEM_EXTENSIONS_DIR}; \
	touch ${PREFIX}/${GEM_EXTENSIONS_FILE}; \
    fi
    chown -R ${SHAREOWN}:${SHAREGRP} ${GEM_ABS_PATH}

.  if !target(do-build)
do-build: 
	${MODRUBY_BUILD_TARGET}
.  endif
.  if !target(do-install)
do-install: 
	${MODRUBY_INSTALL_TARGET}
.  endif

.elif ${CONFIGURE_STYLE:L:Msetup}
MODRUBY_configure= \
	cd ${WRKSRC}; ${SETENV} ${CONFIGURE_ENV} ${RUBY} setup.rb config \
		--prefix=${PREFIX} ${CONFIGURE_ARGS};

MODRUBY_BUILD_TARGET = \
    cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RUBY} setup.rb setup

MODRUBY_INSTALL_TARGET = \
    cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RUBY} setup.rb install \
		--prefix=${DESTDIR}

.  if !target(do-build)
do-build: 
	${MODRUBY_BUILD_TARGET}
.  endif
.  if !target(do-install)
do-install: 
	${MODRUBY_INSTALL_TARGET}
.  endif
.endif

# These are mostly used by the non-gem ports.
SUBST_VARS+=		^MODRUBY_SITEARCHDIR ^MODRUBY_SITEDIR MODRUBY_LIBREV \
			MODRUBY_ARCH

# test stuff

.if !empty(MODRUBY_TEST)
.  if !target(do-test)

.    if ${MODRUBY_TEST:L:Mrake}
MODRUBY_TEST_BIN ?=	${RAKE} --trace
.    elif ${MODRUBY_TEST:L:Mrspec}
MODRUBY_TEST_BIN ?=	${RSPEC}
.    elif ${MODRUBY_TEST:L:Mrspec3}
MODRUBY_TEST_BIN ?=	${MODRUBY_BIN_RSPEC}
.    elif ${MODRUBY_TEST:L:Mtestrb}
.        if ${MODRUBY_REV} == "1.8" || ${MODRUBY_REV} == "2.1"
MODRUBY_TEST_BIN ?=	${MODRUBY_BIN_TESTRB}
.        else
MODRUBY_TEST_BIN ?=	${RUBY} ${PORTSDIR}/lang/ruby/files/testrb.rb
.        endif
.    elif ${MODRUBY_TEST:L:Mruby}
MODRUBY_TEST_BIN ?=	${RUBY}
.    endif

.    if ${MODRUBY_TEST:L:Mrspec} || ${MODRUBY_TEST:L:Mrspec3}
MODRUBY_TEST_TARGET ?=	spec
.    else
MODRUBY_TEST_TARGET ?=	test
.    endif

MODRUBY_TEST_ENV ?= 
MODRUBY_TEST_ENV += RUBYLIB=.:"$$RUBYLIB"
MODRUBY_TEST_DIR ?= ${WRKSRC}
do-test:
	cd ${MODRUBY_TEST_DIR} && ${SETENV} ${MAKE_ENV} HOME=${WRKBUILD} \
		${MODRUBY_TEST_ENV} ${MODRUBY_TEST_BIN} \
		${MODRUBY_TEST_TARGET}
.  endif
.endif
@


1.89
log
@Make ruby 2.3 the default ruby version.

Also, remove code allowing the building of ruby ports using ruby 2.0.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.88 2016/05/27 17:04:35 jeremy Exp $
d27 1
a27 1
FLAVORS=		ruby18 ruby21 ruby22 ruby23
d36 1
a36 1
# use rubyXY-*, jruby uses jruby-*, and rubinius uses rbx-*.  In most cases,
d56 1
a56 1
.    for i in ruby18 ruby21 ruby22 ruby23 jruby
d61 3
a63 1
            ${FLAVOR:N$i:Mruby22} || ${FLAVOR:N$i:Mruby23} || \ 
d83 1
a83 1
# Because the rbx and jruby FLAVORs use same binary names but in
d91 9
a99 22
.if ${MODRUBY_REV} == 1.8
MODRUBY_LIBREV =	1.8
MODRUBY_BINREV =	18
MODRUBY_PKG_PREFIX =	ruby
MODRUBY_FLAVOR =	ruby18
GEM_BIN_SUFFIX =	18
.elif ${MODRUBY_REV} == 2.1
MODRUBY_LIBREV =	2.1
MODRUBY_BINREV =	21
MODRUBY_FLAVOR =	ruby21
GEM_BIN_SUFFIX =	21
.elif ${MODRUBY_REV} == 2.2
MODRUBY_LIBREV =	2.2
MODRUBY_BINREV =	22
MODRUBY_FLAVOR =	ruby22
GEM_BIN_SUFFIX =	22
.elif ${MODRUBY_REV} == 2.3
MODRUBY_LIBREV =	2.3
MODRUBY_BINREV =	23
MODRUBY_FLAVOR =	ruby23
GEM_BIN_SUFFIX =	23
.elif ${MODRUBY_REV} == jruby
d101 5
d107 5
a111 6
# Set these during development of ruby.port.mk to make sure
# nothing is broken.  However, turn them off before committing,
# since they result in bad error messages when, for example, an
# invalid flavor is used.
#.poison MODRUBY_BINREV
#.poison MODRUBY_WANTLIB
d113 1
a113 3
MODRUBY_FLAVOR =	jruby
GEM_MAN_SUFFIX =	-${MODRUBY_FLAVOR}
.endif
d115 3
a117 2
MODRUBY_RSPEC_DEPENDS =	devel/ruby-rspec/1,${MODRUBY_FLAVOR}<2.0
MODRUBY_RSPEC3_DEPENDS = devel/ruby-rspec/3/rspec,${MODRUBY_FLAVOR}>=3.0
d119 13
a131 11
# Set the path for the ruby interpreter and the rake and rspec
# commands used by MODRUBY_TEST and manually in some port
# targets.
.if ${MODRUBY_REV} == jruby
RUBY=			${LOCALBASE}/jruby/bin/jruby
RAKE=			${RUBY} -S rake
RSPEC=			${RUBY} -S spec
MODRUBY_BIN_RSPEC =	${RUBY} -S rspec
MODRUBY_BIN_TESTRB =	${RUBY} -S testrb
.else
RUBY=			${LOCALBASE}/bin/ruby${MODRUBY_BINREV}
a132 5
MODRUBY_BIN_TESTRB =	${LOCALBASE}/bin/testrb${MODRUBY_BINREV}
.  if ${MODRUBY_REV} == 1.8
RSPEC=			${LOCALBASE}/bin/spec
MODRUBY_BIN_RSPEC =	${LOCALBASE}/bin/rspec
.  else
d134 1
a134 2
MODRUBY_BIN_RSPEC =	${LOCALBASE}/bin/rspec${MODRUBY_BINREV}
.  endif
d137 3
a157 12
.if ${MODRUBY_REV} == jruby
.  if ${CONFIGURE_STYLE:L:Mext} || ${CONFIGURE_STYLE:L:Mextconf}
ERRORS += "Fatal: Ruby C extensions are unsupported on JRuby"
.  else
MODRUBY_RUN_DEPENDS=	lang/jruby
.  endif
.else
MODRUBY_WANTLIB=	ruby${MODRUBY_BINREV}
MODRUBY_RUN_DEPENDS=	lang/ruby/${MODRUBY_REV}
MODRUBY_LIB_DEPENDS=	${MODRUBY_RUN_DEPENDS}
.endif

a159 7
# location of ruby libraries
.if ${MODRUBY_REV} == jruby
MODRUBY_LIBDIR=		${LOCALBASE}/jruby/lib/ruby
.else
MODRUBY_LIBDIR=		${LOCALBASE}/lib/ruby
.endif

a167 10
.if ${MODRUBY_REV} == jruby
MODRUBY_ARCH=		${MACHINE_ARCH:S/amd64/x86_64/}-java
MODRUBY_SITEDIR =	jruby/lib/ruby/site_ruby/${MODRUBY_LIBREV}
MODRUBY_SITEARCHDIR =	${MODRUBY_SITEDIR}/java
.else
MODRUBY_ARCH=		${MACHINE_ARCH:S/amd64/x86_64/}-openbsd
MODRUBY_SITEDIR =	lib/ruby/site_ruby/${MODRUBY_LIBREV}
MODRUBY_SITEARCHDIR =	${MODRUBY_SITEDIR}/${MODRUBY_ARCH}
.endif

d248 1
d323 4
@


1.88
log
@Update JRuby to 9.1.1.0

This changes the ruby version JRuby supports to 2.3, so update ruby.port.mk
to match.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.87 2016/03/20 16:12:24 naddy Exp $
d27 1
a27 1
FLAVORS=		ruby18 ruby20 ruby21 ruby22 ruby23
d49 1
a49 1
# Without a FLAVOR, assume the use of ruby 2.2.
d51 1
a51 1
FLAVOR =		ruby22
d56 1
a56 1
.    for i in ruby18 ruby20 ruby21 ruby22 ruby23 jruby
d60 1
a60 1
            ${FLAVOR:N$i:Mruby20} || ${FLAVOR:N$i:Mruby21} || \
d78 2
a79 2
# 2.2 for consistency with the default ruby22 FLAVOR for gem/extconf ports.
MODRUBY_REV?=		2.2
a94 5
.elif ${MODRUBY_REV} == 2.0
MODRUBY_LIBREV =	2.0
MODRUBY_BINREV =	20
MODRUBY_FLAVOR =	ruby20
GEM_BIN_SUFFIX =	20
d243 1
a243 4
MODRUBY_WANTLIB+=	pthread
.endif
.if ${MODRUBY_REV} == 2.1 || ${MODRUBY_REV} == 2.2 || ${MODRUBY_REV} == 2.3
MODRUBY_WANTLIB+=	gmp
d282 1
a282 1
.  elif ${MODRUBY_REV} == 2.1 || ${MODRUBY_REV} == 2.2 || ${MODRUBY_REV} == 2.3
d409 1
a409 1
.        if ${MODRUBY_REV} == "1.8" || ${MODRUBY_REV} == "2.0" || ${MODRUBY_REV} == "2.1"
@


1.87
log
@drop SHARED_ONLY from python and ruby ports
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.86 2016/01/17 19:39:05 jasper Exp $
d116 1
a116 1
MODRUBY_LIBREV =	2.2.0
@


1.86
log
@ruby 2.2 and newer don't ship a testrb script anymore. however if
MODRUBY_TEST=testrb requires it to be present in order to run the tests. so
unbreak for newer rubies by re-using the original script.

feedback/ok jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.85 2016/01/07 00:55:23 jeremy Exp $
d256 2
a257 2
# shared libraries (not compiled into ruby), so set SHARED_ONLY
# and make sure PKG_ARCH=* is not set.
a260 1
SHARED_ONLY=	Yes
d287 1
a287 3
# Just like all ruby C extensions should set SHARED_ONLY,
# pure ruby gem ports without C extensions should definitely not
# set SHARED_ONLY, and they are arch-independent.
a288 4
.    if defined(SHARED_ONLY) && ${SHARED_ONLY:L:Myes}
ERRORS+=	"Fatal: Pure ruby gems without ext CONFIGURE_STYLE should not \
		have SHARED_ONLY=Yes"
.    endif
@


1.85
log
@Add ruby23 FLAVOR for building ruby 2.3 versions of ruby ports.

Drop support for ruby19 and rbx FLAVORs, as the related ports
have been removed.

OK sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.84 2015/08/27 14:36:14 jeremy Exp $
d424 1
d426 3
@


1.84
log
@Make MODRUBY_WANTLIB include other libraries besides rubyXY even when not
using ext or extconf CONFIGURE_STYLE.  Previously these libraries were
only added to MODRUBY_WANTLIB when using those CONFIGURE_STYLEs.

Build problem with textproc/ruby-hyperestraier noticed by sthen@@, nigel@@,
and ajacoutot@@.

OK nigel@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.83 2015/07/26 04:41:37 jeremy Exp $
d27 1
a27 1
FLAVORS=		ruby18 ruby19 ruby20 ruby21 ruby22 rbx
d56 1
a56 1
.    for i in ruby18 ruby19 ruby20 ruby21 ruby22 jruby rbx
d59 1
a59 1
.        if ${FLAVOR:N$i:Mruby18} || ${FLAVOR:N$i:Mruby19} || \
d61 2
a62 2
            ${FLAVOR:N$i:Mruby22} || \
	    ${FLAVOR:N$i:Mjruby} || ${FLAVOR:N$i:Mrbx}
a94 5
.elif ${MODRUBY_REV} == 1.9
MODRUBY_LIBREV =	1.9.1
MODRUBY_BINREV =	19
MODRUBY_FLAVOR =	ruby19
GEM_BIN_SUFFIX =	19
d110 5
a126 6
.elif ${MODRUBY_REV} == rbx
MODRUBY_LIBREV =	2.1
#.poison MODRUBY_BINREV
#.poison MODRUBY_WANTLIB
MODRUBY_FLAVOR =	rbx
GEM_MAN_SUFFIX =	-${MODRUBY_FLAVOR}
a140 6
.elif ${MODRUBY_REV} == rbx
RUBY=			${LOCALBASE}/bin/rbx
RAKE=			${RUBY} -S rake
RSPEC=			${RUBY} -S spec
MODRUBY_BIN_RSPEC =	${RUBY} -S rspec
MODRUBY_BIN_TESTRB =	${RUBY} -S testrb
a177 2
.elif ${MODRUBY_REV} == rbx
MODRUBY_RUN_DEPENDS=	lang/rubinius
a188 2
.elif ${MODRUBY_REV} == rbx
MODRUBY_LIBDIR=		${LOCALBASE}/lib/rubinius
a204 4
.elif ${MODRUBY_REV} == rbx
MODRUBY_ARCH=		${MACHINE_ARCH}-openbsd
MODRUBY_SITEDIR =	lib/rubinius/site/
MODRUBY_SITEARCHDIR =	${MODRUBY_SITEDIR}/${MODRUBY_ARCH}
d250 1
a250 1
.if ${MODRUBY_REV} == 2.1 || ${MODRUBY_REV} == 2.2
a280 2
.  elif ${MODRUBY_REV} == 1.9
BUILD_DEPENDS+=	lang/ruby/1.9>=1.9.3.0
a282 2
.  elif ${MODRUBY_REV} == rbx
BUILD_DEPENDS+=	lang/rubinius>=2.1.1
d297 1
a297 1
.  elif ${MODRUBY_REV} == 2.1 || ${MODRUBY_REV} == 2.2
a313 5
.  elif ${MODRUBY_REV} == rbx
GEM=		${RUBY} -S gem
GEM_BASE_LIB=	${GEM_BASE}/rbx/${MODRUBY_LIBREV}
GEM_BIN =	lib/rubinius/gems/bin
GEM_LIB =	lib/rubinius/gems
a331 5

.if ${MODRUBY_REV} == rbx
# V=1 for rbx results in gems not building
_GEM_MAKE=	"make"
.else
a332 1
.endif
@


1.83
log
@Update MODRUBY_LIBREV on jruby to 2.2.0 due to JRuby upgrade
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.82 2015/07/19 02:10:31 jeremy Exp $
d266 8
a284 7
MODRUBY_WANTLIB+=	c m
.  if ${MODRUBY_REV} != 1.8
MODRUBY_WANTLIB+=	pthread
.  endif
.  if ${MODRUBY_REV} == 2.1 || ${MODRUBY_REV} == 2.2
MODRUBY_WANTLIB+=	gmp
.  endif
@


1.82
log
@Remove MODRUBY_RAKE_DEPENDS.  Only necessary on ruby 1.8, and none of
the ports that use it are still built with ruby 1.8.

OK ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.81 2015/07/18 21:07:40 jeremy Exp $
d116 1
a116 1
MODRUBY_LIBREV =	1.9
@


1.81
log
@Remove MODRUBY_ICONV_DEPENDS.  ruby 1.8 specific ports can hard code
the dependency, more modern ports don't need it.

OK ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.80 2015/07/16 17:27:08 jeremy Exp $
a134 1
MODRUBY_RAKE_DEPENDS =	
a157 1
MODRUBY_RAKE_DEPENDS =	devel/ruby-rake
d243 2
a244 2
.if ${MODRUBY_TEST:L:Mrake}
TEST_DEPENDS+=	${MODRUBY_RAKE_DEPENDS}
@


1.80
log
@Switch the default ruby version from ruby 2.1 to 2.2, and bump affected
ports.

OK jcs@@ ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.79 2015/01/08 18:51:20 jeremy Exp $
a200 6

.if ${MODRUBY_REV} == 1.8
MODRUBY_ICONV_DEPENDS=	ruby-iconv->=1.8,<1.9:lang/ruby/${MODRUBY_REV},-iconv
.else
MODRUBY_ICONV_DEPENDS=	${MODRUBY_RUN_DEPENDS}
.endif
@


1.79
log
@Add ruby 2.2 support, so you can use FLAVOR=ruby22
to build ruby gems for ruby 2.2, or MODRUBY_REV = 2.2
to have other software use ruby 2.2 as the ruby version.

OK jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.78 2014/10/17 17:08:57 jasper Exp $
d49 1
a49 1
# Without a FLAVOR, assume the use of ruby 2.1.
d51 1
a51 1
FLAVOR =		ruby21
d78 2
a79 2
# 2.1 for consistency with the default ruby21 FLAVOR for gem/extconf ports.
MODRUBY_REV?=		2.1
@


1.78
log
@remove support for rspec2
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.77 2014/10/15 02:06:35 jeremy Exp $
d27 1
a27 1
FLAVORS=		ruby18 ruby19 ruby20 ruby21 rbx
d56 1
a56 1
.    for i in ruby18 ruby19 ruby20 ruby21 jruby rbx
d61 1
d110 5
d289 1
a289 1
.  if ${MODRUBY_REV} == 2.1
d328 3
a330 3
.  elif ${MODRUBY_REV} == 2.1
# Add build complete file to package so rubygems doesn't attempt to
# build extensions at runtime
@


1.77
log
@Allow gem install to work for gems with C extensions.  As a bonus,
remove the need to use FAKE_AS_ROOT = always-wrap.

landry@@ phessler@@ naddy@@ in favor
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.76 2014/10/11 19:52:10 jeremy Exp $
a130 1
MODRUBY_RSPEC2_DEPENDS = devel/ruby-rspec/2/rspec,${MODRUBY_FLAVOR}>=2.0
d163 3
a165 3
.  if !${MODRUBY_TEST:L:Mrspec} && !${MODRUBY_TEST:L:Mrspec2} && \
     !${MODRUBY_TEST:L:Mrspec3} && !${MODRUBY_TEST:L:Mrake} && \
     !${MODRUBY_TEST:L:Mruby} && !${MODRUBY_TEST:L:Mtestrb}
a250 3
.if ${MODRUBY_TEST:L:Mrspec2}
TEST_DEPENDS+=	${MODRUBY_RSPEC2_DEPENDS}
.endif
d457 1
a457 1
.    elif ${MODRUBY_TEST:L:Mrspec2} || ${MODRUBY_TEST:L:Mrspec3}
d465 1
a465 2
.    if ${MODRUBY_TEST:L:Mrspec} || ${MODRUBY_TEST:L:Mrspec2} || \
	${MODRUBY_TEST:L:Mrspec3}
@


1.76
log
@Use a 18 suffix for ruby 1.8 gem binaries

This makes them consistent with ruby 1.9+ gem binaries.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.75 2014/09/22 15:21:00 jeremy Exp $
d296 1
a296 1
CONFIGURE_SCRIPT=	${RUBY} extconf.rb
@


1.75
log
@Make ruby 2.1 the default ruby version
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.74 2014/09/18 07:42:55 jasper Exp $
d80 1
a80 1
# Because the rbx, jruby, and ruby18 FLAVORs all use same binary names but in
d83 1
a83 1
GEM_MAN_SUFFIX =	-${MODRUBY_FLAVOR}
a87 2
GEM_BIN_SUFFIX =	

d93 1
a93 1
GEM_MAN_SUFFIX =
a98 1
GEM_MAN_SUFFIX =	${GEM_BIN_SUFFIX}
a103 1
GEM_MAN_SUFFIX =	${GEM_BIN_SUFFIX}
a108 1
GEM_MAN_SUFFIX =	${GEM_BIN_SUFFIX}
d120 1
d126 1
d304 1
a304 1
BUILD_DEPENDS+=	devel/ruby-gems>=1.8.10
@


1.74
log
@add needed bits for rspec3

ok jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.73 2014/09/17 09:39:35 jasper Exp $
d49 1
a49 1
# Without a FLAVOR, assume the use of ruby 2.0.
d51 1
a51 1
FLAVOR =		ruby20
d77 2
a78 2
# 2.0 for consistency with the default ruby20 FLAVOR for gem/extconf ports.
MODRUBY_REV?=		2.0
@


1.73
log
@adjust MODRUBY_RSPEC2_DEPENDS after rspec2 move
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.72 2014/01/15 02:03:17 jeremy Exp $
d135 1
d167 2
a168 2
.  if !${MODRUBY_TEST:L:Mrspec} && \
     !${MODRUBY_TEST:L:Mrspec2} && !${MODRUBY_TEST:L:Mrake} && \
d258 3
d464 1
a464 1
.    elif ${MODRUBY_TEST:L:Mrspec2}
d472 2
a473 1
.    if ${MODRUBY_TEST:L:Mrspec} || ${MODRUBY_TEST:L:Mrspec2}
@


1.72
log
@Correctly handle WANTLIB for ruby gem ext ports using ruby20, ruby21,
and rbx FLAVORs, avoiding missing pthread and gmp libraries depending
on the FLAVOR.  Remove support for MODRUBY_WANTLIB_m, only used by
one port.

Feedback and OK zhuk@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.71 2014/01/14 00:59:07 jeremy Exp $
d134 1
a134 1
MODRUBY_RSPEC2_DEPENDS = devel/ruby-rspec/rspec,${MODRUBY_FLAVOR}>=2.0
@


1.71
log
@Update comments to reflect current reality.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.70 2014/01/11 22:33:50 jeremy Exp $
d279 6
a284 8
# All ruby C extensions are dependent on libc and ruby's library, and almost
# all are also dependment on libm, so include c, m, and ruby's library by
# default, but let the port maintainer opt out of libm by setting
# MODRUBY_WANTLIB_m=No.
WANTLIB+=	c ${MODRUBY_WANTLIB}
MODRUBY_WANTLIB_m?=	Yes
.  if ${MODRUBY_WANTLIB_m:L:Myes}
WANTLIB+=	m
d286 2
a287 2
.  if ${MODRUBY_REV} == 1.9
WANTLIB+=	pthread
d289 1
@


1.70
log
@Support building ruby 2.1 packages for gem/extconf ports using the
ruby21 FLAVOR.  Use additional PLIST file for gems with C extensions
for ruby 2.1, to include the gem.build_complete file, which avoids
problems where rubygems attempts to build extensions at runtime.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.69 2014/01/09 18:28:22 jeremy Exp $
d15 6
a20 6
# This allows you to build ruby 1.8, ruby 1.9, and jruby packages using
# the same port directory for gem and extconf based ports.  It does this
# by adding FLAVORS automatically, unless FLAVORS are already defined
# or the port defines MODRUBY_REV to tie the port to a specific ruby
# version.  For example, JDBC gem ports want to set FLAVOR=jruby,
# since they don't work on ruby 1.8 or ruby 1.9.
d34 3
a36 3
# different package stems for ruby 1.8, ruby 1.9, and jruby packages.
# ruby 1.8 uses the historical ruby-* package stem, ruby 1.9 uses
# ruby19-*, jruby uses jruby-*, and rubinius uses rbx.  In most cases,
d41 3
a43 3
# If the port can work on both ruby 1.9 and another version of ruby,
# and gem installs binaries for it, the binaries on ruby 1.9 are installed
# with a 19 suffix.  GEM_BIN_SUFFIX should be added after such a filename
d45 1
a45 4
# versions of ruby.  Because the rbx, jruby, and default FLAVORs all use
# same binary names but in different directories, GEM_MAN_SUFFIX is
# used for the man pages to avoid conflicts since all man files go
# in the same directory.
d76 2
a77 3
# The default ruby version to use for non-gem/extconf ports.
# Defaults to ruby 2.0 for consistency with the default ruby20
# FLAVOR for gem/extconf ports.
d80 3
a82 3
# Have the man pages for the rbx and jruby versions of a gem file
# use an -rbx or -jruby suffix to avoid conflicts with the
# default ruby 1.8 man page.
a85 2
# Each of the FLAVORs defined in ruby.port.mk should be independent
# from the others if possible.
d176 1
a176 1
# won't use make check for regress.
d335 1
a335 1
# both ruby 1.8, ruby 1.9, and jruby.  
d452 1
a452 1
# regression stuff
@


1.69
log
@Replace do-extract target with EXTRACT_CASES.

Prodded by espie@@.  OK espie@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.68 2013/10/26 23:47:23 jeremy Exp $
d27 1
a27 1
FLAVORS=		ruby18 ruby19 ruby20 rbx
d59 1
a59 1
.    for i in ruby18 ruby19 ruby20 jruby rbx
d63 2
a64 2
            ${FLAVOR:N$i:Mruby20} || ${FLAVOR:N$i:Mjruby} || \
	    ${FLAVOR:N$i:Mrbx}
d114 6
d318 3
d332 6
@


1.68
log
@Update to support rubinius 2.1.1.  This removes the RDEP on a specific
version of rubinius for gem ext ports, and it also changes the
rubinius gem directory, so all ruby gem ports need to be bumped.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.67 2013/10/06 17:40:30 jeremy Exp $
d369 3
a371 3
MODRUBY_EXTRACT_TARGET = \
    mkdir -p ${WRKDIST} ${_GEM_CONTENT}; \
    cd ${_GEM_CONTENT} && tar -xf ${FULLDISTDIR}/${DISTNAME}${EXTRACT_SUFX}; \
d374 1
a374 1
    rm -f ${_GEM_CONTENT}/*.gz.sig ${_GEM_CONTENT}/checksums.yaml.gz
a407 4
.  if !target(do-extract)
do-extract: 
	${MODRUBY_EXTRACT_TARGET}
.  endif
@


1.67
log
@Make ruby 2.0 the default ruby if FLAVOR or MODRUBY_REV is not
specified.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.66 2013/08/18 21:05:20 zhuk Exp $
d126 1
a126 1
MODRUBY_LIBREV =	1.8
d194 1
a196 1
MODRUBY_LIB_DEPENDS=	${MODRUBY_RUN_DEPENDS}
a291 6

.  if ${MODRUBY_REV} == rbx
# Tighten dependency on rubinius when a C extension is used.  Rubinius
# does not maintain binary compatibility across minor versions.
MODRUBY_RUN_DEPENDS =	lang/rubinius>=1.2,<1.3
.  endif
d311 1
a311 1
BUILD_DEPENDS+=	lang/rubinius>=1.2.4p2
d338 1
a338 1
GEM_LIB =	lib/rubinius/gems/${MODRUBY_LIBREV}
d358 7
d389 1
a389 1
	    make="make V=1" \
@


1.66
log
@There is no reason to expose "jruby" FLAVOR ever in cases where it's not
supported. Cuts down a lot of extra noise from ruby-* when doing
automated ports checking as a bonus.

initial diff by me; better version and okay jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.65 2013/06/12 11:03:07 sthen Exp $
d52 1
a52 1
# Without a FLAVOR, assume the use of ruby 1.9.
d54 1
a54 1
FLAVOR =		ruby19
d80 1
a80 1
# Defaults to ruby 1.9 for consistency with the default ruby19
d82 1
a82 1
MODRUBY_REV?=		1.9
@


1.65
log
@Tweak previous, suggested by jca@@; use 'pax [...] .' rather than using find.
Also fixes ruby-passenger which has spaces in filenames.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.64 2013/06/12 08:29:53 sthen Exp $
d27 4
a30 1
FLAVORS?=		ruby18 ruby19 ruby20 rbx jruby
@


1.64
log
@use find to select filenames; previous use of "* .*" was broken by recent
compliance changes in ksh. ok jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.63 2013/04/02 15:41:23 zhuk Exp $
d381 1
a381 1
	    -x ustar -o write_opt=nodir $$(find . -type f) >${_GEM_DATAFILE}; \
@


1.63
log
@Tweak previous: escape all the dots in ${PATCHORIG}, not first one only.

Based on Jérémie Courrèges-Anglas, thanks!

ok jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.62 2013/03/28 06:54:49 zhuk Exp $
d381 1
a381 1
	    -x ustar -o write_opt=nodir * .* >${_GEM_DATAFILE}; \
@


1.62
log
@Modify gem contents packing command in a way that some gems (not
imported yet) could be built. As a bonus, use PATCHORIG instead of
hardcoding ".orig" and save a call to find(1). Requires fresh pax(1).

ok jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.61 2013/03/26 18:51:44 jeremy Exp $
d380 1
a380 1
    cd ${WRKDIST} && pax -wz -s '/.*${PATCHORIG:S@@.@@\.@@}$$//' \
@


1.61
log
@Change MODRUBY_RUBY_ADJ to just replace a shebang in the first line
of the files, instead of all lines.  Additionally, loosen the regexp
slightly so that it handles more cases automatically.  This makes
ruby.port.mk's behavior similar to python.port.mk.

OK sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.60 2013/03/20 19:13:50 jeremy Exp $
d380 2
a381 2
    cd ${WRKDIST} && find . -type f \! -name '*.orig'  -print | \
	    pax -wz -s '/^\.\///' -f ${_GEM_DATAFILE}; \
@


1.60
log
@Make ruby 1.9 the default ruby for non-gem/extconf ports,
for consistency with the gem/extconf ports.

Update non-gem/extconf ports that relied on the previous
default of ruby 1.8 to explicitly specify it.

OK ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.59 2013/03/19 23:46:41 jeremy Exp $
d255 4
a258 1
MODRUBY_RUBY_ADJ=	perl -pi -e 's,/usr/bin/env ruby,${RUBY},'
@


1.59
log
@Add support for building ruby 2.0 libraries to ruby.port.mk.

Refactor the conflicting FLAVOR code to be less verbose,
thanks to sthen@@.  Additional indentation fixes from sthen@@.

Modify the jruby code to work with jruby 1.7.

Deal with newer gems containing checksum files by deleting
the checksums.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.58 2013/03/13 22:49:37 ajacoutot Exp $
d76 4
a79 7
# Other non-gem and non-extconf based ruby ports currently default to
# using ruby 1.8 for backwards compatibility with older ports.  Such
# ports that require a different ruby version should set MODRUBY_REV
# in their makefile to either 1.9 or jruby to build on ruby 1.9 or
# jruby respectively.  For new ports, try to use the most current
# version of ruby that the port supports.
MODRUBY_REV?=		1.8
@


1.58
log
@Use a MODRUBY_pre-configure variable instead of a pre-configure target.
This allows using pre-configure in ruby ports without loosing the
MODRUBY_ADJ_REPLACE feature.

ok jeremy@@ (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.57 2013/03/11 11:20:28 espie Exp $
d27 1
a27 1
FLAVORS?=		ruby18 ruby19 rbx jruby
d50 1
a50 1
.     if empty(FLAVOR)
d52 1
a52 1
.     endif
d56 8
a63 3
.    if ${FLAVOR:Mruby18}
.      if ${FLAVOR:Mruby19} || ${FLAVOR:Mjruby} || ${FLAVOR:Mrbx}
ERRORS+=		"Fatal: Conflicting flavors used: ${FLAVOR}"
d65 1
a65 1
MODRUBY_REV=		1.8
d67 1
a71 18

.    elif ${FLAVOR:Mruby19}
.      if ${FLAVOR:Mruby18} || ${FLAVOR:Mjruby} || ${FLAVOR:Mrbx}
ERRORS+=		"Fatal: Conflicting flavors used: ${FLAVOR}"
.      endif
MODRUBY_REV=		1.9

.    elif ${FLAVOR:Mjruby}
.      if ${FLAVOR:Mruby18} || ${FLAVOR:Mruby19} || ${FLAVOR:Mrbx}
ERRORS+=		"Fatal: Conflicting flavors used: ${FLAVOR}"
.      endif
MODRUBY_REV=		jruby

.    elif ${FLAVOR:Mrbx}
.      if ${FLAVOR:Mruby18} || ${FLAVOR:Mruby19} || ${FLAVOR:Mjruby}
ERRORS+=		"Fatal: Conflicting flavors used: ${FLAVOR}"
.      endif
MODRUBY_REV=		rbx
d97 3
a99 3
MODRUBY_LIBREV=		1.8
MODRUBY_BINREV=		18
MODRUBY_PKG_PREFIX=	ruby
d101 1
a101 1
GEM_MAN_SUFFIX =	
d103 2
a104 2
MODRUBY_LIBREV=		1.9.1
MODRUBY_BINREV=		19
d106 7
a112 2
GEM_BIN_SUFFIX=		19
# Have the ruby 1.9 manpage match the binary name.
d115 1
a115 1
MODRUBY_LIBREV=		1.8
a144 3

# Without this, JRuby often fails with a memory error.
MAKE_ENV+=		JAVA_MEM='-Xms256m -Xmx256m'
d185 1
a185 2
# Only jruby 1.6.0+ can build C extensions
MODRUBY_RUN_DEPENDS=	lang/jruby>=1.6.0
d335 1
a335 1
GEM_LIB =	jruby/lib/ruby/gems/${MODRUBY_LIBREV}
d351 1
d370 1
a370 1
    rm -f ${_GEM_CONTENT}/*.gz.sig
d384 1
a384 1
    env -i ${MAKE_ENV} HOME=${GEM_BASE}/.. GEM_HOME=${GEM_BASE} \
a466 1
.    if ${MODRUBY_REV} == 1.9
a467 1
.    endif
@


1.57
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.56 2013/03/04 18:39:06 zhuk Exp $
d276 1
a276 4
.  if !target(pre-configure)
pre-configure:
	${MODRUBY_ADJ_REPLACE}
.  endif
@


1.56
log
@Add -f to rm and mv calls, allowing some gems being worked on to build,
Those gems contain files with 444 rights.

okayed by jeremy@@ during lock.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.55 2013/02/09 14:49:51 sthen Exp $
d144 1
a144 1
# commands used by MODRUBY_REGRESS and manually in some port
d175 5
a179 5
.if defined(MODRUBY_REGRESS)
.  if !${MODRUBY_REGRESS:L:Mrspec} && \
     !${MODRUBY_REGRESS:L:Mrspec2} && !${MODRUBY_REGRESS:L:Mrake} && \
     !${MODRUBY_REGRESS:L:Mruby} && !${MODRUBY_REGRESS:L:Mtestrb}
ERRORS += "Fatal: Unsupported MODRUBY_REGRESS value: ${MODRUBY_REGRESS}"
d184 1
a184 1
.    if !target(do-regress)
d187 1
a187 1
NO_REGRESS =	Yes
d190 1
a190 1
MODRUBY_REGRESS?=
d259 2
a260 2
.if ${MODRUBY_REGRESS:L:Mrake}
REGRESS_DEPENDS+=	${MODRUBY_RAKE_DEPENDS}
d262 2
a263 2
.if ${MODRUBY_REGRESS:L:Mrspec}
REGRESS_DEPENDS+=	${MODRUBY_RSPEC_DEPENDS}
d265 2
a266 2
.if ${MODRUBY_REGRESS:L:Mrspec2}
REGRESS_DEPENDS+=	${MODRUBY_RSPEC2_DEPENDS}
d458 2
a459 2
.if !empty(MODRUBY_REGRESS)
.  if !target(do-regress)
d461 10
a470 10
.    if ${MODRUBY_REGRESS:L:Mrake}
MODRUBY_REGRESS_BIN ?=	${RAKE} --trace
.    elif ${MODRUBY_REGRESS:L:Mrspec}
MODRUBY_REGRESS_BIN ?=	${RSPEC}
.    elif ${MODRUBY_REGRESS:L:Mrspec2}
MODRUBY_REGRESS_BIN ?=	${MODRUBY_BIN_RSPEC}
.    elif ${MODRUBY_REGRESS:L:Mtestrb}
MODRUBY_REGRESS_BIN ?=	${MODRUBY_BIN_TESTRB}
.    elif ${MODRUBY_REGRESS:L:Mruby}
MODRUBY_REGRESS_BIN ?=	${RUBY}
d473 2
a474 2
.    if ${MODRUBY_REGRESS:L:Mrspec} || ${MODRUBY_REGRESS:L:Mrspec2}
MODRUBY_REGRESS_TARGET ?=	spec
d476 1
a476 1
MODRUBY_REGRESS_TARGET ?=	test
d479 1
a479 1
MODRUBY_REGRESS_ENV ?= 
d481 1
a481 1
MODRUBY_REGRESS_ENV += RUBYLIB=.:"$$RUBYLIB"
d483 5
a487 5
MODRUBY_REGRESS_DIR ?= ${WRKSRC}
do-regress:
	cd ${MODRUBY_REGRESS_DIR} && ${SETENV} ${MAKE_ENV} HOME=${WRKBUILD} \
		${MODRUBY_REGRESS_ENV} ${MODRUBY_REGRESS_BIN} \
		${MODRUBY_REGRESS_TARGET}
@


1.55
log
@Don't use ${FLAVOR:L}, we only support lower-case flavours now.
OK ajacoutot@@ espie@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.54 2013/01/26 17:57:51 jeremy Exp $
d381 1
a381 1
    cd ${WRKDIST} && tar -xzf ${_GEM_DATAFILE} && rm ${_GEM_DATAFILE}; \
d391 1
a391 1
		    mv .metadata.gz ${_GEM_CONTENT}/metadata.gz; \
@


1.54
log
@Update comments to reflect that using more modern versions of ruby
is recommended.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.53 2013/01/09 17:38:03 jeremy Exp $
d56 2
a57 2
.    if ${FLAVOR:L:Mruby18}
.      if ${FLAVOR:L:Mruby19} || ${FLAVOR:L:Mjruby} || ${FLAVOR:L:Mrbx}
d67 2
a68 2
.    elif ${FLAVOR:L:Mruby19}
.      if ${FLAVOR:L:Mruby18} || ${FLAVOR:L:Mjruby} || ${FLAVOR:L:Mrbx}
d73 2
a74 2
.    elif ${FLAVOR:L:Mjruby}
.      if ${FLAVOR:L:Mruby18} || ${FLAVOR:L:Mruby19} || ${FLAVOR:L:Mrbx}
d79 2
a80 2
.    elif ${FLAVOR:L:Mrbx}
.      if ${FLAVOR:L:Mruby18} || ${FLAVOR:L:Mruby19} || ${FLAVOR:L:Mjruby}
@


1.53
log
@Add pthread to WANTLIB for ruby C extensions on ruby 1.9, since on ruby
1.9 they are linked to pthread.

OK sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.52 2012/10/24 22:51:26 jeremy Exp $
d88 6
a93 4
# Other non-gem and non-extconf based ruby ports should default to
# using ruby 1.8.  Ports that require a different ruby version such
# set MODRUBY_REV in their makefile with either 1.9 or jruby to
# build on ruby 1.9 or jruby respectively.
@


1.52
log
@Show actual compilation commands when building C extension
gems on ruby 1.9.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.51 2012/09/23 16:56:15 jeremy Exp $
d296 3
@


1.51
log
@Switch gem/extconf ports to build with ruby 1.9 by default, allowing
the use of the ruby18 FLAVOR to explicitly build a version for ruby 1.8.
To handle updates, add a @@pkgpath marker with the unflavored PKGPATH
to all ruby18 FLAVOR gem/extconf PLISTs.

Remove format-executable CONFIGURE_STYLE, since only one port uses it.
Instead, allow the port Makefile to set GEM_FLAGS, and have ruby.port.mk
append to that if it already exists.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.50 2011/12/09 21:41:43 jeremy Exp $
d393 1
@


1.50
log
@Fix NO_REGRESS=Yes being set on ruby ports with MODRUBY_REGRESS set,
broken in r1.49.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.49 2011/12/02 19:33:39 jeremy Exp $
d19 1
a19 1
# version.  For example, JDBC gem ports want to set MODRUBY_REV=jruby,
d23 3
d27 1
a27 1
FLAVORS?=		ruby19 rbx jruby
d33 3
a35 3
# ruby19-* and jruby uses jruby-*.  In most cases, PKGNAME in the port
# should be set to the same as DISTNAME, and this will insert the
# correct package prefix.
d49 1
a49 1
# Without a FLAVOR, assume the use of ruby 1.8.
d51 3
a53 1
MODRUBY_REV=		1.8
d56 11
d68 1
a68 1
.      if ${FLAVOR:L:Mjruby} || ${FLAVOR:L:Mrbx}
d72 1
d74 1
a74 1
.      if ${FLAVOR:L:Mruby19} || ${FLAVOR:L:Mrbx}
d78 1
d80 1
a80 1
.      if ${FLAVOR:L:Mruby19} || ${FLAVOR:L:Mjruby}
d110 1
a110 1
MODRUBY_FLAVOR =	
d363 1
a363 1
GEM_FLAGS=	--local --no-rdoc --no-ri --no-force --verbose --backtrace \
a367 4

.  if ${CONFIGURE_STYLE:L:Mformat-executable}
GEM_FLAGS+=	--format-executable
.  endif
@


1.49
log
@Add back NO_REGRESS=Yes setting to ruby.port.mk if MODRUBY_REGRESS
is not set, but only for gem, extconf, and setup based ports. Other
ports could be using the lang/ruby module and still have a standard
make-based regression test suite.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.48 2011/11/17 15:24:01 jeremy Exp $
d155 4
a158 3
.if defined(MODRUBY_REGRESS) && !${MODRUBY_REGRESS:L:Mrspec} && \
	!${MODRUBY_REGRESS:L:Mrspec2} && !${MODRUBY_REGRESS:L:Mrake} && \
	!${MODRUBY_REGRESS:L:Mruby} && !${MODRUBY_REGRESS:L:Mtestrb}
d160 1
@


1.48
log
@Handle split of rspec port into subdirs.  In MODRUBY_REGRESS, support
rspec 1 using rspec and rspec 2 using rspec2.  Additionally, add
support for ruby and testrb, calling the appropriate binary for the
ruby implementation.

Start checking sanity of MODRUBY_REGRESS entry, using a fatal error
if it is defined and doesn't contain a recognized word.

Instead of RAKE_REGRESS_TARGET and RSPEC_REGRESS_TARGET, just use
MODRUBY_REGRESS_TARGET for all cases.  On ruby 1.9, modifying the
environment to always look in the current directory for libraries
(the ruby 1.8 behavior), since many ports depend on that for regress.
Allow ports to set their own regress environment and current directory
using MODRUBY_REGRESS_ENV and MODRUBY_REGRESS_DIR.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.47 2011/11/09 00:03:31 jeremy Exp $
d160 8
@


1.47
log
@Set BUILD_DEPENDS when building gem ports to use versions
that no longer create .require_paths files.  No RUN_DEPENDS
are being added as older ruby versions can use gems without
.require_paths files (we never had a ruby 1.9.1 package).

This is being done to avoid errors by porters who are creating/updating
gem ports without installing new ruby versions.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.46 2011/08/22 17:53:38 espie Exp $
d120 2
a121 1
MODRUBY_RSPEC_DEPENDS =	devel/ruby-rspec,${MODRUBY_FLAVOR}
d130 1
d139 1
d148 1
d151 1
d155 5
d161 1
d235 3
d428 3
a430 2
.if !target(do-regress)
.  if ${MODRUBY_REGRESS:L:Mrspec}
d432 13
a444 1
RAKE_REGRESS_TARGET?=	${RSPEC_REGRESS_TARGET}
d446 6
a451 3
RSPEC_REGRESS_TARGET?=	spec
do-regress:
	cd ${WRKSRC} && ${RSPEC} ${RSPEC_REGRESS_TARGET}
d453 1
a453 3
.  endif
.  if ${MODRUBY_REGRESS:L:Mrake}
RAKE_REGRESS_TARGET?=	test
d455 3
a457 4
	cd ${WRKSRC} && ${RAKE} ${RAKE_REGRESS_TARGET}
.  endif
.  if !${MODRUBY_REGRESS:L:Mrspec} && !${MODRUBY_REGRESS:L:Mrake}
NO_REGRESS=YES
@


1.46
log
@replace non-working cookies with working MOD* variables.
allows ruby to do stuff without taking over do-* targets entirely.

okay jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.45 2011/07/19 17:26:30 jeremy Exp $
d271 2
a272 1
# Ruby 1.9 and JRuby ship with ruby-gems
d274 1
a274 1
BUILD_DEPENDS+=	devel/ruby-gems>=1.3.7p0
d276 6
@


1.45
log
@Update MODRUBY_ARCH to remove OpenBSD version, and add
MODRUBY_SITEDIR and MODRUBY_SITEARCHDIR so that ports can build
on multiple ruby implementations (plus it makes for nicer PLISTs).

OK landry@@, jcs@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.43 2011/03/18 23:04:22 jeremy Exp $
a237 4
MODRUBY_EXTRACT_COOKIE = ${WRKDIR}/.modruby_extract_done
MODRUBY_BUILD_COOKIE = ${WRKBUILD}/.modruby_build_done
MODRUBY_INSTALL_COOKIE = ${WRKINST}/.modruby_install_done

d328 6
a333 6
${MODRUBY_EXTRACT_COOKIE}:
	mkdir -p ${WRKDIST} ${_GEM_CONTENT}
	cd ${_GEM_CONTENT} && tar -xf ${FULLDISTDIR}/${DISTNAME}${EXTRACT_SUFX}
	cd ${WRKDIST} && tar -xzf ${_GEM_DATAFILE} && rm ${_GEM_DATAFILE}
	gzcat ${_GEM_CONTENT}/metadata.gz > ${WRKDIST}/.metadata
	rm -f ${_GEM_CONTENT}/*.gz.sig
d338 12
a349 12
${MODRUBY_BUILD_COOKIE}:
	if [ -f ${WRKDIST}/.metadata ]; then \
		cd ${WRKDIST} && gzip .metadata && \
			mv .metadata.gz ${_GEM_CONTENT}/metadata.gz; \
	fi
	cd ${WRKDIST} && find . -type f \! -name '*.orig'  -print | \
		pax -wz -s '/^\.\///' -f ${_GEM_DATAFILE}
	cd ${_GEM_CONTENT} && tar -cf ${WRKDIR}/${_GEM_PATCHED} *.gz
	mkdir -p ${GEM_BASE}
	env -i ${MAKE_ENV} HOME=${GEM_BASE}/.. GEM_HOME=${GEM_BASE} \
		${GEM} install ${GEM_FLAGS} ${WRKDIR}/${_GEM_PATCHED} \
		-- ${CONFIGURE_ARGS}
d354 11
a364 11
${MODRUBY_INSTALL_COOKIE}:
	if [ -d ${GEM_BASE_BIN} ]; then \
		${INSTALL_DATA_DIR} ${PREFIX}/${GEM_BIN}; \
		for f in ${GEM_BASE_BIN}/*; do \
			${INSTALL_SCRIPT} $$f ${PREFIX}/${GEM_BIN}; \
		done; \
		rm -r ${GEM_BASE_BIN}; \
	fi
	${INSTALL_DATA_DIR} ${GEM_ABS_PATH}
	cd ${GEM_BASE_LIB} && mv * ${GEM_ABS_PATH}
	chown -R ${SHAREOWN}:${SHAREGRP} ${GEM_ABS_PATH}
d367 2
a368 1
do-extract: ${MODRUBY_EXTRACT_COOKIE}
d371 2
a372 1
do-build: ${MODRUBY_BUILD_COOKIE}
d375 2
a376 1
do-install: ${MODRUBY_INSTALL_COOKIE}
d384 2
a385 2
${MODRUBY_BUILD_COOKIE}:
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RUBY} setup.rb setup
d387 2
a388 2
${MODRUBY_INSTALL_COOKIE}:
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RUBY} setup.rb install \
d392 2
a393 1
do-build: ${MODRUBY_BUILD_COOKIE}
d396 2
a397 1
do-install: ${MODRUBY_INSTALL_COOKIE}
@


1.44
log
@Add MODRUBY_HANDLE_FLAVORS variable which can be set to No to not have
the lang/ruby module add FLAVORS automatically for gem and extconf
ports, or to Yes to enable the FLAVORS for non-gem and non-extconf
ports.

Add a MODRUBY_BIN_TESTRB variable containing the appropriate testrb
command for use in regress tests.

OK landry@@
@
text
@d194 6
d201 3
a203 1
MODRUBY_ARCH=		${MACHINE_ARCH:S/amd64/x86_64/}-openbsd${OSREV}
d401 2
a402 1
SUBST_VARS+=		MODRUBY_LIBREV MODRUBY_ARCH
@


1.43
log
@Allow building of gem ext and extconf based ports with jruby,
since jruby 1.6.0 now supports them.  Require at least jruby
1.6.0 when building/running a gem ext or extconf port.

Since jruby no longer bundles RSpec, simplify the
MODRUBY_RSPEC_DEPENDS handling.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.42 2011/03/14 20:39:20 jeremy Exp $
d7 8
d22 1
a22 1
.  if ${CONFIGURE_STYLE:L:Mgem} || ${CONFIGURE_STYLE:L:Mextconf}
d129 1
d137 1
d141 1
@


1.42
log
@Add GEM_MAN_SUFFIX so that gem ports with man pages can avoid
conflicts.  Also, base MODRUBY_PKG_PREFIX on MODRUBY_FLAVOR to
avoid some duplication.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.41 2011/01/06 04:15:46 jeremy Exp $
d16 1
a16 4
FLAVORS?=		ruby19 rbx
.      if !${CONFIGURE_STYLE:L:Mext} && !${CONFIGURE_STYLE:L:Mextconf}
FLAVORS+=		jruby
.      endif
d112 1
a112 1
MODRUBY_RSPEC_DEPENDS =	
a127 1
MODRUBY_RSPEC_DEPENDS =	devel/ruby-rspec,${MODRUBY_FLAVOR}
a130 1
MODRUBY_RSPEC_DEPENDS =	devel/ruby-rspec,${MODRUBY_FLAVOR}
d142 4
d147 1
@


1.41
log
@Deal with the rubinius directory changes, and tie rbx FLAVORs to
the currently supported minor version of rubinius.

No longer allow a ruby18 FLAVOR to be used to specify ruby 1.8.
Now, only the empty flavor should be used.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.40 2010/12/02 01:38:40 jeremy Exp $
d34 5
a38 2
# versions of ruby.
SUBST_VARS+=		GEM_BIN_SUFFIX
d70 12
a81 1
GEM_BIN_SUFFIX=	
d88 1
a91 1
MODRUBY_PKG_PREFIX=	ruby19
d94 2
a105 1
MODRUBY_PKG_PREFIX=	jruby
a110 1
MODRUBY_PKG_PREFIX =	rbx
@


1.40
log
@Handle the gem metadata such that if a build fails and you restart
it, it doesn't fail again just because it can't find the gem
metadata.

Also, get rid of the GEM_REL variable, and just setup the GEM_BIN
and GEM_LIB variables separately for each ruby version.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.39 2010/11/24 21:30:36 jeremy Exp $
d16 1
a16 1
FLAVORS?=		ruby18 ruby19 rbx
a36 3
# The unset flavor is the same as the ruby18 FLAVOR, but the FLAVOR is
# not set by default, as otherwise it breaks pkg_add -u for previously
# installed ports.
d38 1
a42 6
.    elif ${FLAVOR:L:Mruby18}
.      if ${FLAVOR:L:Mruby19} || ${FLAVOR:L:Mjruby} || ${FLAVOR:L:Mrbx}
ERRORS+=		"Fatal: Conflicting flavors used: ${FLAVOR}"
.      endif
FLAVOR=			${FLAVOR:L:Nruby18}
MODRUBY_REV=		1.8
d44 1
a44 1
.      if ${FLAVOR:L:Mruby18} || ${FLAVOR:L:Mjruby} || ${FLAVOR:L:Mrbx}
d49 1
a49 1
.      if ${FLAVOR:L:Mruby18} || ${FLAVOR:L:Mruby19} || ${FLAVOR:L:Mrbx}
d54 1
a54 1
.      if ${FLAVOR:L:Mruby18} || ${FLAVOR:L:Mruby19} || ${FLAVOR:L:Mjruby}
a97 1
MODRUBY_RBX_VERSION =	1.1
d154 1
a154 1
MODRUBY_LIBDIR=		${LOCALBASE}/lib/rubinius/${MODRUBY_RBX_VERSION}
d227 6
d271 2
a272 2
GEM_BIN =	lib/rubinius/${MODRUBY_RBX_VERSION}/gems/bin
GEM_LIB =	lib/rubinius/${MODRUBY_RBX_VERSION}/gems/${MODRUBY_LIBREV}
@


1.39
log
@Remove MODRUBY_PKGSPEC, rely on the PKGSPEC entries specified
in lang/ruby/1.*/Makefile.

Also, add the ability to pass CONFIGURE_ARGS to gem install.
These get passed to the extconf.rb scripts that create the
Makefiles for C extensions, and may make it easier to port
gems with C extensions without resorting to patching.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.38 2010/11/19 17:54:37 jeremy Exp $
d268 2
a269 4
# GEM_REL includes a slash so it can be used transparently when building
# a package for JRuby by holding everything in /usr/local/jruby.  It's
# empty for ruby 1.8 and ruby 1.9, which install into /usr/local.
GEM_REL=	jruby/
a272 1
GEM_REL=	
d278 2
a279 1
GEM_REL=	
a282 2
GEM_BIN ?=	${GEM_REL}bin
GEM_LIB ?=	${GEM_REL}lib/ruby/gems/${MODRUBY_LIBREV}
d306 1
a306 2
	cd ${_GEM_CONTENT} && gunzip metadata.gz && \
		mv metadata ${WRKDIST}/.metadata
d313 4
a316 2
	cd ${WRKDIST} && gzip .metadata && \
		mv .metadata.gz ${_GEM_CONTENT}/metadata.gz
@


1.38
log
@Allow building of rubinius versions of the ruby gem and extconf ports
using the rbx FLAVOR and the rbx- package prefix.

OK landry@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.37 2010/11/17 08:05:18 espie Exp $
a79 1
MODRUBY_PKGSPEC=	ruby->=1.8,<=1.9
a84 1
MODRUBY_PKGSPEC=	ruby->=1.9,<=1.10
a95 1
#.poison MODRUBY_PKGSPEC
a102 1
#.poison MODRUBY_PKGSPEC
d147 1
a147 1
MODRUBY_RUN_DEPENDS=	${MODRUBY_PKGSPEC}:lang/ruby/${MODRUBY_REV}
d154 1
a154 1
MODRUBY_ICONV_DEPENDS=	ruby-iconv->=1.8,<=1.9:lang/ruby/${MODRUBY_REV},-iconv
d325 2
a326 1
		${GEM} install ${GEM_FLAGS} ${WRKDIR}/${_GEM_PATCHED}
@


1.37
log
@new depends
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.36 2010/11/16 21:50:27 jeremy Exp $
d16 1
a16 1
FLAVORS?=		ruby18 ruby19
d46 1
a46 1
.      if ${FLAVOR:L:Mruby19} || ${FLAVOR:L:Mjruby}
d52 1
a52 1
.      if ${FLAVOR:L:Mruby18} || ${FLAVOR:L:Mjruby}
d57 1
a57 1
.      if ${FLAVOR:L:Mruby18} || ${FLAVOR:L:Mruby19}
d61 5
d103 8
d126 5
d147 2
d166 2
d277 6
d289 2
a290 2
GEM_BIN=	${GEM_REL}bin
GEM_LIB=	${GEM_REL}lib/ruby/gems/${MODRUBY_LIBREV}
@


1.36
log
@Remove MODRUBY_BIN_REV from SUBST_VARS, never used.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.35 2010/11/16 18:30:38 jeremy Exp $
d116 1
a116 1
MODRUBY_RSPEC_DEPENDS =	:${MODRUBY_PKG_PREFIX}-rspec-*:devel/ruby-rspec,${MODRUBY_FLAVOR}
d118 1
a118 1
MODRUBY_RAKE_DEPENDS =	:ruby-rake-*:devel/ruby-rake
d128 1
a128 1
MODRUBY_RUN_DEPENDS=	::lang/jruby
d131 1
a131 1
MODRUBY_RUN_DEPENDS=	:${MODRUBY_PKGSPEC}:lang/ruby/${MODRUBY_REV}
d138 1
a138 1
MODRUBY_ICONV_DEPENDS=	:ruby-iconv->=1.8,<=1.9:lang/ruby/${MODRUBY_REV},-iconv
d229 2
a230 2
BUILD_DEPENDS+=	:ruby-gems->=1.3.7p0:devel/ruby-gems
RUN_DEPENDS+=	:ruby-gems->=1.3.7p0:devel/ruby-gems
@


1.35
log
@Fix various minor issues in ruby.port.mk:

* No longer remove ruby-* from PKGNAME when building FULLPKGNAME for
  the gem and extconf ports
* Correctly remove ruby18 FLAVOR
* Use extract/build/install cookies
* Fix installing of certain gems as root without systrace, by working
  around a bug in devel/ruby-gems
* Remove MODRUBY_REV from SUBST_VARS

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.34 2010/11/10 09:00:10 landry Exp $
d349 1
a349 1
SUBST_VARS+=		MODRUBY_BIN_REV MODRUBY_LIBREV MODRUBY_ARCH
@


1.34
log
@quote pattern and only work on files (-type f) in MODRUBY_ADJ_REPLACE.
From Mikolaj Kucharski on ports@@, ok sthen@@ jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.33 2010/11/08 23:20:43 jeremy Exp $
d28 1
a28 1
FULLPKGNAME?=		${MODRUBY_PKG_PREFIX}-${PKGNAME:S/^ruby-//}
d49 1
a49 1
FLAVOR=
d196 4
d282 1
a282 2
.  if !target(do-extract)
do-extract:
a288 1
.  endif
d293 1
a293 2
.  if !target(do-build)
do-build:
d300 2
a301 3
	env -i ${MAKE_ENV} HOME=${GEM_BASE}/.. ${GEM} install \
		${GEM_FLAGS} ${WRKDIR}/${_GEM_PATCHED}
.  endif
d306 1
a306 2
.  if !target(do-install)
do-install:
d317 6
d324 4
d332 8
d341 1
a341 2
do-build:
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RUBY} setup.rb setup
d344 1
a344 3
do-install:
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RUBY} setup.rb install \
		--prefix=${DESTDIR}
a349 6

# This is only for backwards compatibility with old PLISTs. New
# PLISTs should only use MODRUBY_LIBREV.
.if ${MODRUBY_REV} == 1.8
SUBST_VARS+=		MODRUBY_REV
.endif
@


1.33
log
@Major changes to allow the same port directory to build ports for both
ruby 1.8, ruby 1.9, and jruby.

One major change for all ports is that RDoc documentation is no longer
going to be installed by default for gem ports.  For ruby 1.8, it used
a separate documentation file per method, and the file names created
weren't consistent across ruby versions (1.8.6 differed from 1.8.7,
and 1.8.7 differs from 1.9.2 and jruby).  It made reviewing diffs very
painful, and since most ruby developers do not use the documentation
(preferring web documentation), it doesn't make sense to include them.

For most gem ports, a ruby 1.9 version can be built by using
the ruby19 FLAVOR, and a jruby version can be build using the jruby
FLAVOR.  These flavors modify the FULLPKGNAME to use either the
ruby19- or jruby- package stem, so you don't need to worry about
the ruby 1.8 package conflicting.

In most cases, you no longer need the PKGNAME set in the port
Makefile, as the FULLPKGNAME handling will take care of that for you.
Also, for pure ruby gems (without C extensions), PKG_ARCH = * is added
automatically.

Changes to all dependent ports will be committed shortly. For new
ruby ports, you need to make sure that gem dependencies are specified
like this (assuming they depend on the hoe gem):

  :${MODRUBY_PKG_PREFIX}-hoe-*:devel/ruby-hoe,${FLAVOR}

MODRUBY_PKG_PREFIX will be ruby for ruby 1.8 ports, ruby19 for ruby
1.9 ports, and jruby for jruby ports.  The ,${FLAVOR} part at the end
makes sure that dependencies use the same version of ruby that
the current port uses.

PLISTs are going to become a lot smaller with this.  However, any
binaries installed by the gem need to have a special string added.
For example, the minitar binary installed by
archivers/ruby-archive-tar-minitar looks like this in the PLIST:

  ${GEM_BIN}/minitar${GEM_BIN_SUFFIX}

The ${GEM_BIN_SUFFIX} needs to be added manually so the package
works on ruby 1.9, which installs the binaries with a 19 suffix.

GEM_SKIPDEPENDS has been removed and related support will be removed
from devel/ruby-gems.  To modify dependencies inside the gem, the gem
metadata is placed under WRKDIST and can be modified with the standard
patching procedure.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.32 2010/10/26 21:14:24 jeremy Exp $
d187 1
a187 1
			 find ${WRKSRC} -name $$pat -print0 | \
@


1.32
log
@Split library spec from MODRUBY_LIB_DEPENDS into MODRUBY_WANTLIB.
Also, if CONFIGURE_STYLE includes ext or extconf, update WANTLIB
and LIB_DEPENDS, and set SHARED_ONLY=Yes.  That configure style
is only used for ruby C extensions, which need those settings.
This cleans up a lot of ruby C extension ports, which will be
committed shortly.

ok landry, phessler, sthen
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.31 2010/10/24 09:16:13 sthen Exp $
d7 43
d51 22
d75 20
d96 18
d116 3
d120 4
d127 3
d131 3
a134 1
MODRUBY_RUN_DEPENDS=	:ruby->=1.8,<=1.9:lang/ruby/${MODRUBY_REV}
d137 1
d139 3
d144 3
d148 1
d152 9
a160 2
MODRUBY_DOCDIR=		${PREFIX}/share/doc/ruby
MODRUBY_EXAMPLEDIR=	${PREFIX}/share/examples/ruby
d162 1
d164 2
d169 1
a169 1
.if ${NO_BUILD:L} == "no" && ${MODRUBY_BUILDDEP:L} == "yes"
d172 1
a172 1
.if ${MODRUBY_RUNDEP:L} == "yes"
d177 1
a177 1
REGRESS_DEPENDS+=	::devel/ruby-rake
a178 1

d180 1
a180 1
REGRESS_DEPENDS+=	::devel/ruby-rspec
a182 2
SUBST_VARS+=		MODRUBY_BIN_REV MODRUBY_REV MODRUBY_ARCH

d197 6
d204 4
d220 1
d223 5
d229 10
a238 3
BUILD_DEPENDS+=	:ruby-gems->=1.3.7p0:devel/ruby-gems
RUN_DEPENDS+=	::devel/ruby-gems
SUBST_VARS+=	DISTNAME
d240 12
d253 3
d257 9
a265 3
GEM_BASE_BIN=	${GEM_BASE}/ruby/${MODRUBY_LIBREV}/bin
GEM_LIB=	${PREFIX}/lib/ruby/gems/${MODRUBY_LIBREV}
GEM_FLAGS=	--local --rdoc --no-force --verbose --default-source-index
d270 1
a270 1
.if ${CONFIGURE_STYLE:L:Mformat-executable}
a271 6
.endif

# Ignore specified gem dependencies.
GEM_SKIPDEPENDS?=
.  if !empty(GEM_SKIPDEPENDS)
GEM_FLAGS+=	--skip-dependencies "${GEM_SKIPDEPENDS}"
d274 4
d280 6
a285 11
	@@mkdir -p ${_GEM_CONTENT} ${WRKDIST}
	@@cd ${_GEM_CONTENT} && tar -xf ${FULLDISTDIR}/${DISTNAME}${EXTRACT_SUFX}
	@@cd ${WRKDIST} && tar -xzf ${_GEM_DATAFILE} && rm ${_GEM_DATAFILE}
.  endif
.  if !target(pre-build)
pre-build:
	@@${ECHO_MSG} "===>  Writing patched gem for ${FULLPKGNAME}${_MASTER}"
# "special" handling for ruby tar, included in ruby-gems
	@@cd ${WRKDIST} && find . -type f \! -name '*.orig' -print | \
		pax -wz -s '/^\.\///' -f ${_GEM_DATAFILE}
	@@cd ${_GEM_CONTENT} && tar -cf ${WRKDIR}/${_GEM_PATCHED} *.gz
d287 4
d293 5
d299 1
a299 1
	env -i ${MAKE_ENV} HOME=${GEM_BASE}/.. ${GEM} install --user-install \
d302 4
d308 2
a309 1
	@@if [ -d ${GEM_BASE_BIN} ]; then \
d311 1
a311 1
			${INSTALL_SCRIPT} $$f ${PREFIX}/bin; \
d315 3
a317 3
	@@${INSTALL_DATA_DIR} ${GEM_LIB}
	cd ${GEM_BASE}/ruby/${MODRUBY_LIBREV} && mv * ${GEM_LIB}
	chown -R ${SHAREOWN}:${SHAREGRP} ${GEM_LIB}
d325 1
a325 1
	@@cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RUBY} setup.rb setup
d329 1
a329 1
	@@cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${RUBY} setup.rb install \
d334 9
d352 1
a352 1
	@@cd ${WRKSRC} && ${RSPEC} ${RSPEC_REGRESS_TARGET}
d358 1
a358 1
	@@cd ${WRKSRC} && ${RAKE} ${RAKE_REGRESS_TARGET}
a363 1

@


1.31
log
@Add MODRUBY_RUNDEP and MODRUBY_BUILDDEP, modelled on python.port.mk.
ok jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.30 2010/10/15 20:24:27 jeremy Exp $
d17 2
a18 1
MODRUBY_LIB_DEPENDS=	ruby${MODRUBY_BINREV}:ruby->=1.8,<=1.9:lang/ruby/${MODRUBY_REV}
d66 10
a84 1

@


1.30
log
@Delete the binaries after installing them into the fake directory but
before copying the gem directory into the fake directory.  Fixes
update-plist adding files that shouldn't be in the resulting packages.

ok landry
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.29 2010/10/12 16:03:41 jeremy Exp $
d32 4
d37 2
d40 1
@


1.29
log
@Don't build C extensions inside gems during the fake stage, instead
build them during the build stage and install them during fake.

devel/ruby-gems doesn't have separate build and install commands, as
most gems are pure ruby code and don't need a separate build stage.
When ruby-gems is installing a gem with C extensions, it builds them
during the install.  Since installing is done during the fake stage,
this meant that the extensions were getting built as root.

Previously, this was required, as gem's --user-install option was
broken.  However, since that option has now been fixed, we use
it to install the gem to a temporary location as the current
user during build, and then mv and chown the files during fake.

Thanks to bernd@@ for pointing out that the fixed --user-install
option allowed this.

ok landry
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.27 2010/09/28 20:12:16 jeremy Exp $
d115 1
@


1.28
log
@Add MODRUBY_RUBY_ADJ and MODRUBY_ADJ_FILES.  MODRUBY_RUBY_ADJ is a
perl command that accepts filename arguments and modifies the common
/usr/bin/env ruby shebang to ${RUBY}.  MODRUBY_ADJ_FILES is a short
cut that allows you to set filename patterns and have
MODRUBY_RUBY_ADJ called on all files in ${WRKSRC} that match that
pattern.  It adds a pre-configure action to do so, if a pre-configure
action is not already defined.  If a pre-configure action is already
defined, you can call the replacement command with
${MODRUBY_ADJ_REPLACE}.

ok sthen, landry
@
text
@d65 1
a65 1
BUILD_DEPENDS+=	:ruby-gems->=1.3.0:devel/ruby-gems
a66 1
NO_BUILD=	Yes
d71 3
a73 1
GEM_BASE=	${PREFIX}/lib/ruby/gems/${MODRUBY_LIBREV}
d95 2
a96 2
.  if !target(pre-fake)
pre-fake:
d103 6
d111 3
a113 6
	@@${INSTALL_DATA_DIR} ${GEM_BASE}
	@@${SUDO} ${GEM} install ${GEM_FLAGS} --install-dir ${GEM_BASE} \
		${WRKDIR}/${_GEM_PATCHED}
	@@if [ -d ${GEM_BASE}/bin ]; then \
		for f in ${GEM_BASE}/bin/*; do \
			mv $$f ${PREFIX}/bin; \
a114 1
		rm -r ${GEM_BASE}/bin; \
d116 3
@


1.27
log
@Remove MASTER_SITES from most ruby gem ports, specify it in ruby.port.mk

All ruby .gem files are now hosted on rubygems.org in the same
directory.  If the ruby gem CONFIGURE_STYLE is used, make the
default MASTER_SITES that directory.

There are still a few uses of MASTER_SITE_RUBYFORGE in the tree, for
some ports that aren't gems, or where the .gem file isn't hosted on
rubygems.org, or where the hashes don't match.  Most of these will be
dealt with in the near future.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.26 2010/09/23 21:58:50 jeremy Exp $
d44 13
@


1.26
log
@Split the lang/ruby port into separate ports for ruby 1.8 and ruby
1.9, similar to how the lang/python ports are handled.  ruby 1.8
now installs as ruby18 and ruby 1.9 installs as ruby19.  The
included MESSAGE files for both ports let you know the symlinks to
set up if you want to make that version the default system ruby.

Split port originally started by bernd@@, many changes since by me,
help and support from jcs@@, landry@@, jasper@@, and sthen@@.

This causes a large amount of fallout in dependent ruby ports,
which will be committed shortly.

OK jcs@@, landry@@, jasper@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.21 2008/09/28 15:47:27 bernd Exp $
d49 1
@


1.25
log
@Fix one small buglet in the regress stuff. ok msf@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.24 2009/08/11 14:30:15 msf Exp $
d8 2
d11 2
a12 2
RUBY=			${LOCALBASE}/bin/ruby
RAKE=			${LOCALBASE}/bin/rake
d17 2
a18 2
MODRUBY_LIB_DEPENDS=	ruby.>=2::lang/ruby
MODRUBY_RUN_DEPENDS=	::lang/ruby
d21 2
d43 1
a43 1
SUBST_VARS+=		MODRUBY_REV MODRUBY_ARCH
d47 1
a47 1
CONFIGURE_SCRIPT=	${LOCALBASE}/bin/ruby extconf.rb
d51 2
a52 2
BUILD_DEPENDS+=		:ruby-gems->=1.3.0:devel/ruby-gems
RUN_DEPENDS+=		::devel/ruby-gems
d57 2
a58 2
GEM=		${LOCALBASE}/bin/gem
GEM_BASE=	${PREFIX}/lib/ruby/gems/${MODRUBY_REV}
d64 4
a115 2
RAKE_REGRESS_TARGET?=	test
RSPEC_REGRESS_TARGET?=	spec
d120 1
a120 1
RAKE_REGRESS_TARGET=	${RSPEC_REGRESS_TARGET}
d122 1
d128 1
d136 1
@


1.24
log
@Add support for several popular ruby regression test suites accessible via
the MODRUBY_REGRESS variable.

discussed with and ok bernd@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.23 2009/08/11 09:20:23 msf Exp $
d114 1
a114 1
RAKE_REGRESS_TARGET?=	${RSPEC_REGRESS_TARGET}
@


1.23
log
@add MODRUBY_BUILD_DEPENDS to stay consistent with other modules
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.22 2009/08/11 07:27:30 msf Exp $
d10 4
a21 3
BUILD_DEPENDS+=		${MODRUBY_BUILD_DEPENDS}
RUN_DEPENDS+=		${MODRUBY_RUN_DEPENDS}

d28 11
a79 4
# Most gems need a custom do-regress target. 
.  if !target(do-regress)
NO_REGRESS=	Yes
.  endif
a99 3
.  if !target(do-regress)
NO_REGRESS=Yes
.  endif
d104 22
@


1.22
log
@ruby-gems should be appended to MODRUBY_RUN_DEPENDS, but to RUN_DEPENDS instead

ok bernd@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.21 2008/09/28 15:47:27 bernd Exp $
d5 2
d11 3
a13 7
MODRUBY_RUN_DEPENDS+=	::lang/ruby
MODRUBY_LIB_DEPENDS+=	ruby.>=2::lang/ruby

BUILD_DEPENDS+=		::lang/ruby
RUN_DEPENDS+=		${MODRUBY_RUN_DEPENDS}

CATEGORIES+=		lang/ruby
d17 3
@


1.21
log
@Require ruby-gems-1.3.0 and add --default-source-index to GEM_FLAGS.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.20 2008/09/02 21:08:29 steven Exp $
d35 1
a35 1
MODRUBY_RUN_DEPENDS+=	::devel/ruby-gems
@


1.20
log
@add MODRUBY_LIB_DEPENDS.

ok bernd@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.18 2008/06/10 15:40:44 jcs Exp $
d34 1
a34 1
BUILD_DEPENDS+=		:ruby-gems->=1.0.1:devel/ruby-gems
d42 1
a42 1
GEM_FLAGS=	--local --rdoc --no-force --verbose
@


1.19
log
@Add lang/ruby to CATEGORIES. All ports using this module will be bumped.

tested in a bulk build and ok bernd@@
@
text
@d10 1
@


1.18
log
@pass --verbose to gem to show full configure/build information to
behave like everything else does

ok bernd@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.17 2008/02/08 17:13:15 bernd Exp $
d13 2
@


1.17
log
@Require a recent ruby-gems version to build gem ports.

Noticed by Paul Irofti. Thanks!
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.16 2008/01/14 18:39:07 bernd Exp $
d39 1
a39 1
GEM_FLAGS=	--local --rdoc --no-force
@


1.16
log
@Fix indentation and remove useless regress stuff comments.

ok sturm@@, msf@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.15 2007/11/13 17:45:28 bernd Exp $
d31 1
a31 1
BUILD_DEPENDS+=		:ruby-gems->=0.9.4p2:devel/ruby-gems
@


1.15
log
@Be more specific about the gem version in gem BUILD_DEPENDS to make sure
GEM_SKIPDEPENDS works correctly. (ruby-gems->=0.9.4p2)
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.14 2007/11/13 17:32:59 bernd Exp $
d46 1
a46 1
.if !empty(GEM_SKIPDEPENDS)
d48 1
a48 1
.endif
d64 1
a65 2
# XXX gem errors out w/o unit tests to run and I have not found any gem
# which actually supports tests
a66 13

# a generic regress target might look sth like this
#do-regress:
#	@@if [ ! -d ${WRKINST} ]; then \
#		_CLEAN_FAKE=Yes; \
#	fi; \
#	mkdir -p ${WRKINST}${GEM_BASE}; \
#	${SUDO} ${GEM} install ${GEM_FLAGS} --test \
#		--install-dir ${WRKINST}${GEM_BASE} \
#		${FULLDISTDIR}/${DISTFILES}; \
#	if [ ! -z "$$_CLEAN_FAKE" ]; then \
#		${SUDO} rm -fr ${WRKINST}; \
#	fi
@


1.14
log
@Backout the ugly rev 1.12 hack. It's not needed anymore since we now have
GEM_SKIPDEPENDS.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.13 2007/11/13 16:10:37 bernd Exp $
d31 1
a31 1
BUILD_DEPENDS+=		::devel/ruby-gems
@


1.13
log
@Use the --skip-dependencies option with 'gem install' if GEM_SKIPDEPENDS
is defined in the port Makefile.

i.e. 'GEM_SKIPDEPENDS= hoe cgi_multipart_eof_fix'

This will install the gem port into the fake area even if the hoe and
cgi_multipart_eof_fix gems aren't installed.

ok jcs@@, "sounds reasonable but I haven't really looked at it" msf@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.12 2007/11/05 20:55:03 bernd Exp $
d40 1
a40 1
_GEM_CONTENT=	${WRKDIST}/.gem-content
a53 1
	@@cd ${_GEM_CONTENT} && ${GUNZIP_CMD} metadata.gz
a60 1
		fgrep -v `basename ${_GEM_CONTENT}` | \
d62 1
a62 2
	@@cd ${_GEM_CONTENT} && ${GZIP_CMD} metadata && \
		tar -cf ${WRKDIR}/${_GEM_PATCHED} *.gz
@


1.12
log
@Unpack the gem metadata so we're able to patch it. This will
allow us to remove bogus dependencies from gems.

I need this for an upcoming ruby-mongrel update.

discussed with & ok sturm@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.11 2006/12/01 14:04:06 steven Exp $
d43 6
@


1.11
log
@add MODRUBY_RUN_DEPENDS to help MULTI_PACKAGES

ok msf@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.10 2006/11/27 09:36:14 msf Exp $
d40 1
a40 1
_GEM_CONTENT=	${WRKDIR}/gem-content
d48 1
d56 1
d58 2
a59 1
	@@cd ${_GEM_CONTENT} && tar -cf ${WRKDIR}/${_GEM_PATCHED} *.gz
@


1.10
log
@remove the default CONFIGURE_STYLE and CONFIGURE_SCRIPT into the new
'ruby extconf' CONFIGURE_STYLE

this allows us to pull ruby.port.mk into fun things like subversion

ok bernd@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.9 2006/11/25 10:03:32 msf Exp $
d9 2
d12 1
a12 1
RUN_DEPENDS+=		::lang/ruby
d31 2
a32 2
BUILD_DEPENDS+=	::devel/ruby-gems
RUN_DEPENDS+=	::devel/ruby-gems
@


1.9
log
@Change to SUBST_VARS+=

discussed and ok bernd@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.8 2006/10/28 21:52:02 bernd Exp $
a20 3
CONFIGURE_STYLE?=	simple
CONFIGURE_SCRIPT?=	${LOCALBASE}/bin/ruby extconf.rb

d23 4
a26 1
.if ${CONFIGURE_STYLE:L:Mgem}
@


1.8
log
@Remove REV and SUB. All ruby ports are using the new variables now.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.7 2006/10/18 13:41:36 bernd Exp $
d24 1
a24 1
SUBST_VARS=		MODRUBY_REV MODRUBY_ARCH
@


1.7
log
@Add code that allows us to patch gem files.

discussed with & ok sturm@@
ok for an earlier version msf@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.6 2006/08/23 21:12:24 sturm Exp $
d24 1
a24 4
REV=${MODRUBY_REV}
SUB=${MODRUBY_ARCH}
SUBST_VARS=MODRUBY_REV MODRUBY_ARCH SUB REV

@


1.6
log
@add RUN_DEPENDS on ruby-gems for gems-based ports
bump PKGNAME where necessary

noticed by Ward Wouts <ward at wizeazz.nl> via markus, ok msf
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.5 2006/07/14 15:41:21 bernd Exp $
a30 1
EXTRACT_ONLY=
d41 18
a58 1

d81 1
a81 1
		${FULLDISTDIR}/${DISTNAME}${EXTRACT_SUFX}
@


1.5
log
@Rename REV and SUB variables to MODRUBY_REV and MODRUBY_ARCH. Keep the old
ones around until the dependent ports have been synced.

ok msf@@, 'I like it' sturm@@
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.4 2006/06/11 19:56:31 sturm Exp $
d34 1
@


1.4
log
@support for CONFIGURE_STYLE "ruby gem"

with msf's consent
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.3 2006/06/11 18:57:11 sturm Exp $
d5 2
d19 1
d24 4
a27 3
REV=1.8
SUB=${MACHINE_ARCH:S/amd64/x86_64/}-openbsd${OSREV}
SUBST_VARS=SUB REV
d39 1
a39 1
GEM_BASE=	${PREFIX}/lib/ruby/gems/${REV}
@


1.3
log
@add CONFIGURE_STYLE "ruby setup" and related targets
move LIB_DEPENDS to relevant ports, no PKGNAME bump needed
this is in preparation of a soon to come ruby-gems port

with msf's consent
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.2 2006/03/23 17:15:25 msf Exp $
d25 44
a68 1
.if ${CONFIGURE_STYLE:L:Msetup}
@


1.2
log
@- depend on proper library version
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.1 2004/08/09 19:54:20 xsa Exp $
d5 4
a8 2
RUN_DEPENDS+=::lang/ruby
LIB_DEPENDS+=ruby.1.84::lang/ruby
d25 17
@


1.1
log
@
prepare for new-style MODULES; ok couderc@@.
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.5 2004/06/23 14:17:05 naddy Exp $
d6 1
a6 1
LIB_DEPENDS+=ruby.1.81::lang/ruby
@

