head	1.8;
access;
symbols
	OPENBSD_4_8:1.7.0.8
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.6
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_5:1.7.0.4
	OPENBSD_4_6:1.7.0.2
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2010.09.23.22.04.13;	author jeremy;	state dead;
branches;
next	1.7;

1.7
date	2009.06.16.09.12.44;	author bernd;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2009.04.27.10.54.09;	author bernd;	state Exp;
branches;
next	1.5;

1.5
date	2009.03.07.12.30.17;	author bernd;	state Exp;
branches;
next	1.4;

1.4
date	2009.02.03.21.15.28;	author bernd;	state dead;
branches;
next	1.3;

1.3
date	2009.01.31.09.54.31;	author bernd;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.28.15.43.05;	author bernd;	state dead;
branches;
next	1.1;

1.1
date	2008.07.21.09.40.42;	author bernd;	state Exp;
branches;
next	;

1.7.4.1
date	2009.08.19.01.18.10;	author william;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Remove files that I checked out with -r HEAD
@
text
@$OpenBSD: patch-eval_c,v 1.7 2009/06/16 09:12:44 bernd Exp $

Fix usage of short-named constants.

http://svn.ruby-lang.org/cgi-bin/viewvc.cgi?view=rev&revision=18485
http://svn.ruby-lang.org/cgi-bin/viewvc.cgi?view=rev&revision=22679
https://bugs.launchpad.net/ubuntu/+source/ruby1.8/+bug/282302

--- eval.c.orig	Mon Mar 23 10:26:03 2009
+++ eval.c	Wed Jun 10 12:27:20 2009
@@@@ -1401,7 +1401,7 @@@@ ruby_init()
 	rb_call_inits();
 	ruby_class = rb_cObject;
 	ruby_frame->self = ruby_top_self;
-	ruby_top_cref = rb_node_newnode(NODE_CREF,rb_cObject,0,0);
+	ruby_top_cref = NEW_CREF(rb_cObject, 0);
 	ruby_cref = ruby_top_cref;
 	rb_define_global_const("TOPLEVEL_BINDING", rb_f_binding(ruby_top_self));
 #ifdef __MACOS__
@


1.7
log
@Security update to ruby-1.8.6-p369.

Fixes a denial of service vulnerability in the BigDecimal
standard library of Ruby.

http://www.ruby-lang.org/en/news/2009/06/09/dos-vulnerability-in-bigdecimal/
@
text
@d1 1
a1 1
$OpenBSD: patch-eval_c,v 1.6 2009/04/27 10:54:09 bernd Exp $
@


1.7.4.1
log
@MFC:

SECURITY FIX

ruby-1.8.6-p369

Resolves many security issues and bugs

Does not contain the arandom change in -current.

ok robert@@, discussed with bernd@@ (thanks!)
@
text
@d1 1
a1 1
$OpenBSD: patch-eval_c,v 1.7 2009/06/16 09:12:44 bernd Exp $
@


1.6
log
@Update to ruby-1.8.6.368.

Including security fixes for CVE-2008-1447 and CVE-2007-1558.

Tested by Jeremy Evans, jcs@@, sturm@@ and msf@@. Thank you!
@
text
@d1 1
a1 1
$OpenBSD: patch-eval_c,v 1.5 2009/03/07 12:30:17 bernd Exp $
d9 3
a11 3
--- eval.c.orig	Mon Aug  4 05:16:55 2008
+++ eval.c	Mon Mar  2 13:18:59 2009
@@@@ -1399,7 +1399,7 @@@@ ruby_init()
@


1.5
log
@Bring back the fix for short-named constants.
This previous problems should be gone now.
(ruby svn r18485 and r22679)

Thanks to Jeremy Evans!
@
text
@d1 1
a1 1
$OpenBSD$
a10 9
@@@@ -1066,7 +1066,7 @@@@ static VALUE ruby_wrapper;	/* security wrapper */
 
 NODE *ruby_cref = 0;
 NODE *ruby_top_cref;
-#define PUSH_CREF(c) ruby_cref = NEW_NODE(NODE_CREF,(c),0,ruby_cref)
+#define PUSH_CREF(c) ruby_cref = NEW_CREF(c,ruby_cref)
 #define POP_CREF() ruby_cref = ruby_cref->nd_next
 
 #define PUSH_SCOPE() do {		\
@


1.4
log
@Revert last "fix". I causes problems with some Ruby code which worked before.
@
text
@d1 1
a1 1
$OpenBSD: patch-eval_c,v 1.3 2009/01/31 09:54:31 bernd Exp $
d6 1
d10 1
a10 1
+++ eval.c	Tue Jan 27 09:46:14 2009
d20 9
@


1.3
log
@Fix usage of short-named constants. (ruby svn r18485)

From msf@@.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Security update to ruby-1.8.6.287.

This fixes a DNS spoofing vulnerability in Ruby's resolver lib. (CVE-2008-1447)

A DoS vulnerability in WEBrick(CVE-2008-3656), problems with Ruby's
safelevel implementation (CVE-2008-3655) and a taint check problem
in Ruby's dynamic loader (CVE-2008-3657) got fixed as well.

This also contains a fix for the REXML DoS issue. (CVE-2008-3790)

More information:
http://www.ruby-lang.org/en/news/2008/08/08/multiple-vulnerabilities-in-ruby/
http://www.ruby-lang.org/en/news/2008/08/23/dos-vulnerability-in-rexml/

Tested by Jeremy Evans and jcs@@. Thanks!
@
text
@d1 1
a1 1
$OpenBSD: patch-eval_c,v 1.1 2008/07/21 09:40:42 bernd Exp $
d3 1
a3 2
Fixes multiple security vulnerabilities.
http://secunia.com/advisories/29794/
d5 2
a6 2
Patch against ruby-1.8.6p114 from:
http://blog.phusion.nl/assets/r8ee-security-patch-20080623-2.txt
d8 9
a16 42
1.8.6-p229 and 1.8.7-p21 will break rails applications.
and
https://launchpad.net/ubuntu/+source/ruby1.8

--- eval.c.orig	Sun Sep 23 02:01:50 2007
+++ eval.c	Tue Jul  1 20:47:08 2008
@@@@ -8332,16 +8332,25 @@@@ proc_clone(self)
  * MISSING: documentation
  */
 
+#define PROC_TSHIFT (FL_USHIFT+1)
+#define PROC_TMASK  (FL_USER1|FL_USER2|FL_USER3)
+#define PROC_TMAX   (PROC_TMASK >> PROC_TSHIFT)
+
+static int proc_get_safe_level(VALUE);
+
 static VALUE
 proc_dup(self)
     VALUE self;
 {
     struct BLOCK *orig, *data;
     VALUE bind;
+    int safe = proc_get_safe_level(self);
 
     Data_Get_Struct(self, struct BLOCK, orig);
     bind = Data_Make_Struct(rb_obj_class(self),struct BLOCK,blk_mark,blk_free,data);
     blk_dup(data, orig);
+    if (safe > PROC_TMAX) safe = PROC_TMAX;
+    FL_SET(bind, (safe << PROC_TSHIFT) & PROC_TMASK);
 
     return bind;
 }
@@@@ -8402,10 +8411,6 @@@@ rb_f_binding(self)
 
     return bind;
 }
-
-#define PROC_TSHIFT (FL_USHIFT+1)
-#define PROC_TMASK  (FL_USER1|FL_USER2|FL_USER3)
-#define PROC_TMAX   (PROC_TMASK >> PROC_TSHIFT)
 
 #define SAFE_LEVEL_MAX PROC_TMASK
d18 1
@


1.1
log
@Security fixes for CVE-2008-1891, CVE-2008-2662, CVE-2008-2663,
CVE-2008-2664, CVE-2008-2725 and CVE-2008-2726.

More info: http://secunia.com/advisories/29794/

with help from jcs@@
tested by msf@@, jcs@@
@
text
@d1 1
a1 1
$OpenBSD$
@

