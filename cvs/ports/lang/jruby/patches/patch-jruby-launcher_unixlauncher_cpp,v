head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.6
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.8
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.07.26.04.40.16;	author jeremy;	state Exp;
branches;
next	1.3;
commitid	AyM7apnVNX5zUHuA;

1.3
date	2013.03.19.23.43.06;	author jeremy;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.08.23.58.08;	author jeremy;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.19.17.57.47;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to JRuby 9.0.0.0

Bump jdk dependency to 1.8.0

Help and OK jasper@@
@
text
@$OpenBSD: patch-jruby-launcher_unixlauncher_cpp,v 1.3 2013/03/19 23:43:06 jeremy Exp $

Attempt to replicate the following shell code:

JAVA_HOME=$(javaPathHelper -h jruby)

Without this, if the JAVA_HOME environment variable is not
defined, bin/jruby will segfault when run.

--- jruby-launcher/unixlauncher.cpp.orig	Wed Dec 31 16:00:00 1969
+++ jruby-launcher/unixlauncher.cpp	Mon May 21 14:43:20 2012
@@@@ -1,5 +1,6 @@@@
 #include <stdlib.h>
 #include <unistd.h>
+#include <string.h>
 #include "unixlauncher.h"
 #include "utilsfuncs.h"
 
@@@@ -45,6 +46,44 @@@@ int UnixLauncher::run(int argc, char* argv[], char* en
     prepareOptions();
 
     string java("");
+
+    if (getenv("JAVA_HOME") == NULL) {
+      char *path;
+      FILE *java_home_pipe;
+      char java_home_path[256];
+
+      path = getenv("PATH");
+      if (path == NULL || strlen(path) == 0) {
+        setenv("PATH", "/usr/bin:${LOCALBASE}/bin:${JAVA_HOME}/bin", 1);
+      } else {
+        char *paths[3] = {(char *)"/usr/bin", (char *)"${LOCALBASE}/bin", (char *)"${JAVA_HOME}/bin"};
+        int modified = 0;
+        int i;
+
+        strlcpy(java_home_path, path, sizeof(java_home_path));
+        for (i = 0; i < 3; i++) {
+          if (strstr(path, paths[i]) == NULL) {
+            modified = 1;
+            strlcat(java_home_path, ":", sizeof(java_home_path));
+            strlcat(java_home_path, paths[i], sizeof(java_home_path));
+          }
+        }
+
+        if (modified == 1) {
+          setenv("PATH", java_home_path, 1);
+        }
+      }
+
+      if(java_home_pipe = popen("javaPathHelper -h jruby", "r")) {
+        size_t bytes_read;
+        bytes_read = fread(java_home_path, 1, 255, java_home_pipe);
+        if (bytes_read > 0) { 
+          java_home_path[bytes_read-1] = '\0';
+          setenv("JAVA_HOME", java_home_path, 1);
+        }
+        pclose(java_home_pipe);
+      }
+    }
 
     if (getenv("JAVACMD") != NULL) {
         java = getenv("JAVACMD");
@


1.3
log
@Update to jruby 1.7.3.

Drop support for C extensions (which were always expiremental).
Use jruby.jar instead of jruby-complete.jar, for a more typical
jruby installation.
@
text
@d1 1
a1 1
$OpenBSD: patch-jruby-launcher_unixlauncher_cpp,v 1.2 2011/11/08 23:58:08 jeremy Exp $
d31 1
a31 1
+        setenv("PATH", "/usr/bin:${LOCALBASE}/bin:${LOCALBASE}/jdk-1.7.0/bin", 1);
d33 1
a33 1
+        char *paths[3] = {(char *)"/usr/bin", (char *)"${LOCALBASE}/bin", (char *)"${LOCALBASE}/jdk-1.7.0/bin"};
@


1.2
log
@Update to JRuby 1.6.5.

Make jruby binary not segfault if PATH isn't set correctly.

Remove rubygems hacks, since they are no longer necessary now
that the versions of rubygems for the other ruby interpreters
are > 1.3.7.

No longer ship the ri documentation files with JRuby.  JRuby
ships with a broken ri binary anyway (requires the rdoc gem to
work), and almost all users of JRuby have MRI ruby installed
and can use its ri binary.
@
text
@d1 1
a1 1
$OpenBSD: patch-jruby-launcher_unixlauncher_cpp,v 1.1 2011/07/19 17:57:47 jeremy Exp $
d11 2
a12 2
+++ jruby-launcher/unixlauncher.cpp	Thu Nov  3 15:05:53 2011
@@@@ -1,4 +1,5 @@@@
d14 1
d19 1
a19 1
@@@@ -37,6 +38,44 @@@@ int UnixLauncher::run(int argc, char* argv[], char* en
@


1.1
log
@Update to 1.6.3.  Make bin/jruby a compiled file instead of a bash
script, so it can now be used in shebang lines.  Remove the
building of nailgun, since nailgun support is now part of the
jruby binary.

This requires patching the included jruby-launcher gem to make a
similar change we used to make to the jruby.bash script, to set the
JAVA_HOME environment so things work correctly.

Also, create the SITEARCHDIR directory by default.

OK jcs@@
@
text
@d1 1
a1 1
$OpenBSD$
d11 6
a16 3
+++ jruby-launcher/unixlauncher.cpp	Mon Jul 11 22:54:17 2011
@@@@ -20,6 +20,8 @@@@ UnixLauncher::~UnixLauncher() {
 }
d18 2
a19 7
 int UnixLauncher::run(int argc, char* argv[], char* envp[]) {
+    FILE * java_home_pipe;
+    char java_home_path[256];
     platformDir = argv[0];
     if (!initPlatformDir() || !parseArgs(argc - 1, argv + 1)) {
         return 255;
@@@@ -38,6 +40,15 @@@@ int UnixLauncher::run(int argc, char* argv[], char* en
d22 36
a57 7
 
+    if(java_home_pipe = popen("javaPathHelper -h jruby", "r")) {
+      size_t bytes_read;
+      bytes_read = fread(java_home_path, 1, 255, java_home_pipe);
+      if (bytes_read > 0) { 
+        java_home_path[bytes_read-1] = '\0';
+        setenv("JAVA_HOME", java_home_path, 1);
a58 1
+      pclose(java_home_pipe);
d60 1
a62 1
     } else {
@

