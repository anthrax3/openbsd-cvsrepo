head	1.4;
access;
symbols
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	bernd_2008-jun-18:1.1.1.1
	bernd:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2010.10.28.01.45.44;	author jeremy;	state dead;
branches;
next	1.3;

1.3
date	2009.08.09.11.18.59;	author bernd;	state Exp;
branches;
next	1.2;

1.2
date	2008.07.21.11.17.33;	author bernd;	state Exp;
branches;
next	1.1;

1.1
date	2008.06.17.22.27.56;	author bernd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.06.17.22.27.56;	author bernd;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update lang/jruby from 1.3.1 to 1.5.3.  Numerous improvements including
performance increases and ruby 1.8.7 support. ffi support now works in
simple cases.  It now works on amd64 as well.  I'm taking over
maintenance from bernd@@.

ok landry
@
text
@$OpenBSD: patch-bin_jruby,v 1.3 2009/08/09 11:18:59 bernd Exp $
--- bin/jruby.orig	Mon Jun 15 19:13:13 2009
+++ bin/jruby	Sun Aug  9 11:34:44 2009
@@@@ -1,4 +1,4 @@@@
-#!/bin/bash
+#!${TRUEPREFIX}/bin/bash
 # -----------------------------------------------------------------------------
 # jruby.sh - Start Script for the JRuby interpreter
 #
@@@@ -30,6 +30,7 @@@@ case "`uname -m`" in
 esac
 
 # ----- Verify and Set Required Environment Variables -------------------------
+JAVA_HOME=$(javaPathHelper -h jruby)
 
 ## resolve links - $0 may be a link to  home
 PRG=$0
@


1.3
log
@Major update to jruby-1.3.1.

All JRuby stuff is now living in ${LOCALBASE}/jruby to prevent
problems with rubygem conflicts and to reduce the patches for
the port.
@
text
@d1 1
a1 1
$OpenBSD: patch-bin_jruby,v 1.2 2008/07/21 11:17:33 bernd Exp $
@


1.2
log
@Update to jruby-1.1.3.

Includes some fixes for problems reported by Yannick Francois
and Jeremy Evans. Thanks guys!
@
text
@d1 3
a3 3
$OpenBSD: patch-bin_jruby,v 1.1.1.1 2008/06/17 22:27:56 bernd Exp $
--- bin/jruby.orig	Sat Jul 19 07:12:22 2008
+++ bin/jruby	Sun Jul 20 14:43:56 2008
d6 1
a6 1
+#!/bin/sh
d10 2
a11 1
@@@@ -20,6 +20,9 @@@@ esac
d14 1
a15 3
+JAVA_HOME=$(javaPathHelper -h jruby)
+JRUBY_LIBDIR=${JRUBY_LIBDIR}
+
a17 169
 progname=`basename "$0"`
@@@@ -34,12 +37,14 @@@@ while [ -h "$PRG" ] ; do
   fi
 done
 
-JRUBY_HOME_1=`dirname "$PRG"`           # the ./bin dir
-JRUBY_HOME=`dirname "$JRUBY_HOME_1"`  # the . dir
-# When . == bin and . is in path, need to make home be .. (JRUBY-2699)
-#if [ $JRUBY_HOME = '.' ] ; then
-# JRUBY_HOME='..'
-#fi
+if [ -z "$JRUBY_HOME" ]; then
+	JRUBY_HOME_1=`dirname "$PRG"`           # the ./bin dir
+	JRUBY_HOME=`dirname "$JRUBY_HOME_1"`  # the . dir
+	# When . == bin and . is in path, need to make home be .. (JRUBY-2699)
+	#if [ $JRUBY_HOME = '.' ] ; then
+	# JRUBY_HOME='..'
+	#fi
+fi
 
 if [ -z "$JRUBY_OPTS" ] ; then
   JRUBY_OPTS=""
@@@@ -61,7 +66,7 @@@@ JRUBY_SHELL=/bin/sh
 CP_DELIMETER=":"
 
 # add jruby jars for command-line execution
-for j in "$JRUBY_HOME"/lib/jruby*.jar; do
+for j in "$JRUBY_LIBDIR"/jruby*.jar; do
     if [ "$JRUBY_CP" ]; then
         JRUBY_CP="$JRUBY_CP$CP_DELIMETER$j"
         else
@@@@ -107,17 +112,18 @@@@ JAVA_VM=-client
 
 # Split out any -J argument for passing to the JVM.
 # Scanning for args is aborted by '--'.
-declare -a java_args
-declare -a ruby_args
+java_args=
+ruby_args=
     while [ $# -gt 0 ]
 do
     case "$1" in
     # Stuff after '-J' in this argument goes to JVM
     -J*)
-        val=${1:2}
-        if [ "${val:0:4}" = "-Xmx" ]; then
+        val=$(expr "$1" : "-J\(.*\)")
+        jvm_arg=$(expr "$val" : "\(....\)")
+        if [ "$jvm_arg" = "-Xmx" ]; then
             JAVA_MEM=$val
-        elif [ "${val:0:4}" = "-Xss" ]; then
+        elif [ "$jvm_arg" = "-Xss" ]; then
             JAVA_STACK=$val
         elif [ "${val}" = "" ]; then
             $JAVA_CMD -help
@@@@ -128,16 +134,16 @@@@ do
             echo "(Prepend -J in front of these options when using 'jruby' command)" 
             exit
         else
-            if [ "${val:0:3}" = "-ea" ]; then
+            if [ "$(expr "$val" : "\(...\)")" = "-ea" ]; then
 		VERIFY_JRUBY="yes"
 	    fi
-            java_args=("${java_args[@@]}" "${1:2}")
+            java_args="$java_args $jvm_arg"
         fi
         ;;
      # Match switches that take an argument
-     -e|-I|-S) ruby_args=("${ruby_args[@@]}" "$1" "$2"); shift ;;
+     -e|-I|-S) ruby_args="$ruby_args $1 \"$2\""; shift ;;
      # Match same switches with argument stuck together
-     -e*|-I*|-S*) ruby_args=("${ruby_args[@@]}" "$1" ) ;;
+     -e*|-I*|-S*) ruby_args="$ruby_args \"$1\"" ;;
      # Run with the instrumented profiler: http://jiprof.sourceforge.net/
      --profile) 
        PROFILE_ARGS="-javaagent:$JRUBY_HOME/lib/profile.jar -Dprofile.properties=$JRUBY_HOME/lib/profile-ruby.properties" 
@@@@ -150,7 +156,7 @@@@ do
        ;;
      # Run with JMX management enabled
      --manage)
-        java_args=("${java_args[@@]}" "-Dcom.sun.management.jmxremote") ;;
+        java_args="$java_args -Dcom.sun.management.jmxremote" ;;
      # Run under JDB
      --jdb)
         if [ -z "$JAVA_HOME" ] ; then
@@@@ -166,15 +172,15 @@@@ do
      --server)
         JAVA_VM=-server ;;
      --sample)
-        java_args=("${java_args[@@]}" "-Xprof") ;;
+        java_args="$java_args -Xprof" ;;
      --1.9)
-        java_args=("${java_args[@@]}" "-Djruby.compat.version=RUBY1_9") ;;
+        java_args="$java_args -Djruby.compat.version=RUBY1_9" ;;
      --1.8)
-        java_args=("${java_args[@@]}" "-Djruby.compat.version=RUBY1_8") ;;
+        java_args="$java_args -Djruby.compat.version=RUBY1_8" ;;
      # Abort processing on the double dash
      --) break ;;
      # Other opts go to ruby
-     -*) ruby_args=("${ruby_args[@@]}" "$1") ;;
+     -*) ruby_args="$ruby_args $1" ;;
      # Abort processing on first non-opt arg
      *) break ;;
     esac
@@@@ -182,13 +188,15 @@@@ do
 done
 
 # Add a property to report memory max
-JAVA_OPTS="$JAVA_OPTS $JAVA_VM -Djruby.memory.max=${JAVA_MEM:4} -Djruby.stack.max=${JAVA_STACK:4}"
+java_mem_max=$(expr "$JAVA_MEM" : "....\(.*\)")
+java_stack_max=$(expr "$JAVA_STACK" : "....\(.*\)")
+JAVA_OPTS="$JAVA_OPTS $JAVA_VM -Djruby.memory.max=$java_mem_max -Djruby.stack.max=$java_stack_max"
 
 # Append the rest of the arguments
-ruby_args=("${ruby_args[@@]}" "$@@")
+ruby_args="$ruby_args $@@"
 
 # Put the ruby_args back into the position arguments $1, $2 etc
-set -- "${ruby_args[@@]}"
+set -- "$ruby_args"
 
 JAVA_OPTS="$JAVA_OPTS $JAVA_MEM $JAVA_STACK"
 
@@@@ -196,11 +204,13 @@@@ if $cygwin; then
   JRUBY_HOME=`cygpath --mixed "$JRUBY_HOME"`
   JRUBY_SHELL=`cygpath --mixed "$JRUBY_SHELL"`
   
-  if [[ ( "${1:0:1}" = "/" ) && ( ( -f "$1" ) || ( -d "$1" )) ]]; then
-    win_arg=`cygpath -w "$1"`
-    shift
-    win_args=("$win_arg" "$@@")
-    set -- "${win_args[@@]}"
+  if [ "$(expr "$1" : "\(.\).*")" = "/" ]; then 
+    if [ -f "$1" -o -d "$1" ]; then
+      win_arg=`cygpath -w "$1"`
+      shift
+      win_args="$win_arg $@@"
+      set -- "$win_args"
+    fi
   fi
 fi
 
@@@@ -209,9 +219,9 @@@@ if [ "$VERIFY_JRUBY" != "" ]; then
       echo "Running with instrumented profiler"
   fi
 
-  $JAVA_CMD $PROFILE_ARGS $JAVA_OPTS "${java_args[@@]}" -classpath "$JRUBY_CP$CP_DELIMETER$CP$CP_DELIMETER$CLASSPATH" \
-    "-Djruby.home=$JRUBY_HOME" \
-    "-Djruby.lib=$JRUBY_HOME/lib" -Djruby.script=jruby \
+  eval $JAVA_CMD $PROFILE_ARGS $JAVA_OPTS "$java_args" -classpath "$JRUBY_CP$CP_DELIMETER$CP$CP_DELIMETER$CLASSPATH" \
+    "-Djruby.home=$JRUBY_LIBDIR" \
+    "-Djruby.lib=$JRUBY_LIBDIR" -Djruby.script=jruby \
     "-Djruby.shell=$JRUBY_SHELL" \
     org.jruby.Main $JRUBY_OPTS "$@@"
 
@@@@ -221,9 +231,9 @@@@ if [ "$VERIFY_JRUBY" != "" ]; then
       cat profile.txt
   fi
 else
-  exec "$JAVA_CMD" $JAVA_OPTS "${java_args[@@]}" -Xbootclasspath/a:"$JRUBY_CP" -classpath "$CP$CP_DELIMETER$CLASSPATH" \
-    "-Djruby.home=$JRUBY_HOME" \
-    "-Djruby.lib=$JRUBY_HOME/lib" -Djruby.script=jruby \
+  eval exec "$JAVA_CMD" $JAVA_OPTS "$java_args" -Xbootclasspath/a:"$JRUBY_CP" -classpath "$CP$CP_DELIMETER$CLASSPATH" \
+    "-Djruby.home=$JRUBY_LIBDIR" \
+    "-Djruby.lib=$JRUBY_LIBDIR" -Djruby.script=jruby \
     "-Djruby.shell=$JRUBY_SHELL" \
     org.jruby.Main $JRUBY_OPTS "$@@"
 fi
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- bin/jruby.orig	Wed May 28 01:29:24 2008
+++ bin/jruby	Sat May 31 11:28:46 2008
d10 1
a10 3
@@@@ -11,15 +11,11 @@@@
 #
 # -----------------------------------------------------------------------------
a11 7
-cygwin=false
-
-# ----- Identify OS we are running under --------------------------------------
-case "`uname`" in
-CYGWIN*) cygwin=true
-esac
-
d20 1
a20 1
@@@@ -34,9 +30,6 @@@@ while [ -h "$PRG" ] ; do
d26 13
a38 1
-
d41 2
a42 10
 fi
@@@@ -44,9 +37,6 @@@@ fi
 if [ -z "$JAVA_HOME" ] ; then
   JAVA_CMD='java'
 else
-  if $cygwin; then
-    JAVA_HOME=`cygpath -u "$JAVA_HOME"`
-  fi
   JAVA_CMD="$JAVA_HOME/bin/java"
 fi
d44 7
a50 20
@@@@ -61,17 +51,13 @@@@ else
     CP_DELIMETER=":"
 
     # add necessary jars for command-line execution
-    for j in "$JRUBY_HOME"/lib/*.jar; do
+    for j in "$JRUBY_LIBDIR"/*.jar; do
         if [ "$CP" ]; then
             CP="$CP$CP_DELIMETER$j"
             else
             CP="$j"
         fi
     done
-
-    if $cygwin; then
-	CP=`cygpath -p -w "$CP"`
-    fi
 fi
 
 # ----- Execute The Requested Command -----------------------------------------
@@@@ -86,42 +72,37 @@@@ fi
d56 2
a57 2
+java_args=""
+ruby_args=""
d65 4
a68 1
-            JAVA_MEM=$val
d70 12
a81 2
-            JAVA_STACK=$val
-        else
d83 2
a84 7
-        fi
+        val=${1#-J}
+        case "$val" in
+            -Xmx*) JAVA_MEM="$val" ;;
+            -Xss*) JAVA_STACK="$val" ;;
+            *) java_args="$java_args $val" ;;
+        esac
d88 1
a88 1
+     -e|-I|-S) ruby_args="$ruby_args $1 $2"; shift ;;
d91 1
a91 1
+     -e*|-I*|-S*) ruby_args="$ruby_args $1" ;;
d93 8
a100 2
-     --profile) PROFILE_ARGS="-javaagent:$JRUBY_HOME/lib/profile.jar -Dprofile.properties=$JRUBY_HOME/lib/profile.properties" ;;
+     --profile) PROFILE_ARGS="-javaagent:$JRUBY_LIBDIR/profile.jar -Dprofile.properties=$JRUBY_LIBDIR/profile.properties" ;;
d104 12
a115 7
           JAVA_CMD='jdb'
         else
-          if $cygwin; then
-            JAVA_HOME=`cygpath -u "$JAVA_HOME"`
-          fi
           JAVA_CMD="$JAVA_HOME/bin/jdb"
         fi ;;
d124 1
a124 1
@@@@ -129,32 +110,19 @@@@ do
d127 6
d143 4
a146 5
-if $cygwin; then
-  JAVA_HOME=`cygpath --mixed "$JAVA_HOME"`
-  JRUBY_HOME=`cygpath --mixed "$JRUBY_HOME"`
-  JRUBY_SHELL=`cygpath --mixed "$JRUBY_SHELL"`
-  
d152 13
a164 5
-  fi
-fi
-
 if [ "$PROFILE_ARGS" != "" ]; then
   echo "Running with instrumented profiler"
d166 1
a166 1
-  $JAVA_CMD $PROFILE_ARGS $JAVA_OPTS "${java_args[@@]}" -classpath "$CP$CP_SEPARATOR$CLASSPATH" \
d169 1
a169 1
+  eval $JAVA_CMD $PROFILE_ARGS $JAVA_OPTS "$java_args" -classpath "$CP$CP_SEPARATOR$CLASSPATH" \
d175 3
a177 3
@@@@ -162,9 +130,9 @@@@ if [ "$PROFILE_ARGS" != "" ]; then
 
   cat profile.txt
d179 1
a179 1
-  exec "$JAVA_CMD" $JAVA_OPTS "${java_args[@@]}" -Xbootclasspath/a:"$CP" -classpath "$CLASSPATH" \
d182 1
a182 1
+  eval exec "$JAVA_CMD" $JAVA_OPTS "$java_args" -Xbootclasspath/a:"$CP" -classpath "$CLASSPATH" \
@


1.1.1.1
log
@Initial import of jruby-1.1.2.

JRuby is an 100% pure-Java implementation of the Ruby programming language.

JRuby is tightly integrated with Java to allow the embedding of the
interpreter into any Java application with full two-way access between the
Java and the Ruby code.

help & testing kurt@@, ian@@ and sturm@@

ok kurt@@
@
text
@@
