head	1.8;
access;
symbols
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2;
locks; strict;
comment	@# @;


1.8
date	2013.10.15.02.36.21;	author jeremy;	state dead;
branches;
next	1.7;

1.7
date	2013.05.17.20.14.49;	author jeremy;	state Exp;
branches;
next	1.6;

1.6
date	2013.03.19.23.43.06;	author jeremy;	state Exp;
branches;
next	1.5;

1.5
date	2012.04.04.20.24.00;	author jeremy;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.14.11.38.16;	author jeremy;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.08.23.58.08;	author jeremy;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.19.17.57.47;	author jeremy;	state dead;
branches;
next	1.1;

1.1
date	2011.03.18.23.01.22;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to jruby-1.7.5.  Upstream changed to a maven-based src build
system that downloads 190+ .jar files at build time.  Switch to using
the binary distribution, since there is no point compiling java source
code to java bytecode when we can use the precompiled java bytecode.

Use our custom jnr-posix distfile with 64-bit time_t support by
directly patching jruby.jar.

Add jruby-launcher gem as a separate distfile, but since we only need
the binary, compile it manually and don't install the gem.

Still keep the src distfile for the tests, because the binary distfile
doesn't include them.

Add patch to work around rubygems regression with .files in the root
of the gem not getting installed (already accepted upstream).
@
text
@$OpenBSD: patch-build_xml,v 1.7 2013/05/17 20:14:49 jeremy Exp $

Don't install the jruby launcher when running the regress specs,
as it fails due to a make error and it isn't necessary for the
regress tests.

--- build.xml.orig	Thu May 16 11:51:15 2013
+++ build.xml	Thu May 16 13:21:37 2013
@@@@ -718,7 +718,7 @@@@ other than ASM, which is rewritten to avoid conflicts.
         </emma>
     </target>
 
-    <target name="install-gems" depends="install-dev-gems,install-jruby-launcher-gem"/>
+    <target name="install-gems" depends="install-dev-gems"/>
 
     <condition property="dev.gems.installed">
         <uptodate>
@


1.7
log
@Update to jruby 1.7.4.  Make sure site_ruby directory is created
in correct location.  Fix test target.  Remove unneeded patch
to bash script.
@
text
@d1 1
a1 1
$OpenBSD: patch-build_xml,v 1.6 2013/03/19 23:43:06 jeremy Exp $
@


1.6
log
@Update to jruby 1.7.3.

Drop support for C extensions (which were always expiremental).
Use jruby.jar instead of jruby-complete.jar, for a more typical
jruby installation.
@
text
@d1 1
a1 1
$OpenBSD: patch-build_xml,v 1.5 2012/04/04 20:24:00 jeremy Exp $
d7 3
a9 3
--- build.xml.orig	Tue Aug  7 07:49:40 2012
+++ build.xml	Tue Aug  7 12:37:33 2012
@@@@ -702,7 +702,7 @@@@ other than ASM, which is rewritten to avoid conflicts.
@


1.5
log
@Update to jruby 1.6.7.
@
text
@d1 1
a1 1
$OpenBSD: patch-build_xml,v 1.4 2011/11/14 11:38:16 jeremy Exp $
d7 5
a11 22
Also, don't fork for the regress tests, as otherwise the JVM
exits abnormally.

--- build.xml.orig	Wed Feb 22 09:14:56 2012
+++ build.xml	Wed Feb 22 14:22:46 2012
@@@@ -809,13 +809,6 @@@@
       <env key="GEM_PATH" value=""/> <!-- to ignore any gems installed in ~/.gem -->
       <arg line="-S gem uninstall --all jruby-launcher"/>
     </java>
-    <java classname="org.jruby.Main" fork="true" maxmemory="${jruby.launch.memory}" failonerror="true">
-      <classpath refid="build.classpath"/>
-      <classpath path="${jruby.classes.dir}"/>
-      <sysproperty key="jruby.home" value="${basedir}"/>
-      <env key="GEM_PATH" value=""/> <!-- to ignore any gems installed in ~/.gem -->
-      <arg line="-S gem install ${jruby.launcher.gem}"/>
-    </java>
   </target>
 
   <target name="test" depends="
@@@@ -916,7 +909,7 @@@@
       <echo message="compile=@@{compile.mode}, jit.threshold=@@{jit.threshold}, jit.maxsize=@@{jit.maxsize}, jit.max=@@{jit.max}, objectspace=@@{objectspace.enabled} threadpool=@@{thread.pooling} reflection=@@{reflection} version=@@{jruby.version}"/>
       <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpath="${build.lib.dir}/junit.jar"/>
d13 2
a14 3
-      <junit jvm="${jruby.test.jvm}" fork="yes" forkMode="once" haltonfailure="true" dir="${basedir}" maxmemory="${jruby.test.memory}" showoutput="true" timeout="1800000">
+      <junit jvm="${jruby.test.jvm}" haltonfailure="false" dir="${basedir}" maxmemory="${jruby.test.memory}" showoutput="true" timeout="1800000">
 	<classpath refid="test.class.path"/>
d16 2
a17 1
         <sysproperty key="jruby.compile.invokedynamic" value="true"/>
@


1.4
log
@Make regress tests work.

Set JAVA_HOME and PATH and disable forking so java doesn't crash when
running the test and spec tasks.  Don't install the jruby-launcher gem
when running the test and spec tasks, as it fails.

Regress depend on git when running the specs, as it needs to download
current rubyspecs for the spec task.

Delete the jruby-complete.jar file and just use the jruby.jar file
when running the specs, as otherwise you get additional test failures
and warnings.

Switch to SUBST_CMD while here now that has been fixed. Also, bump
the memory limits by 50M as 384M doesn't seem to be enough in all
cases.
@
text
@d1 1
a1 4
$OpenBSD: patch-build_xml,v 1.3 2011/11/08 23:58:08 jeremy Exp $

Fix build by removing ri cache generation, backported from git
commit a760b4aea4b5aa9b38da4bd3334d8355a83f60fa.
d10 3
a12 19
--- build.xml.orig	Tue Oct 25 16:54:51 2011
+++ build.xml	Sun Nov 13 23:49:50 2011
@@@@ -379,7 +379,6 @@@@
       </jar>
 
       <antcall target="add-emma-jars"/>
-      <antcall target="generate-ri-cache"/>
 
       <property name="jar-jruby.hasrun" value="true"/>
   </target>
@@@@ -484,7 +483,6 @@@@
         <param name="bar.wrap" value="${lib.dir}/jruby.bar" />
       </antcall>
       
-      <antcall target="generate-ri-cache"/>
   </target>
   <target name="jarjar" depends="jar-jruby-dist"/>
 
@@@@ -806,13 +804,6 @@@@
d26 1
a26 1
@@@@ -967,7 +958,7 @@@@
d34 1
a34 1
 	<sysproperty key="java.awt.headless" value="true"/>
@


1.3
log
@Update to JRuby 1.6.5.

Make jruby binary not segfault if PATH isn't set correctly.

Remove rubygems hacks, since they are no longer necessary now
that the versions of rubygems for the other ruby interpreters
are > 1.3.7.

No longer ship the ri documentation files with JRuby.  JRuby
ships with a broken ri binary anyway (requires the rdoc gem to
work), and almost all users of JRuby have MRI ruby installed
and can use its ri binary.
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 2
Fix build, backported from git commit 
a760b4aea4b5aa9b38da4bd3334d8355a83f60fa.
d6 9
a14 2
--- build.xml.orig	Sun Oct 30 20:59:44 2011
+++ build.xml	Sun Oct 30 21:01:00 2011
d31 23
@


1.2
log
@Update to 1.6.3.  Make bin/jruby a compiled file instead of a bash
script, so it can now be used in shebang lines.  Remove the
building of nailgun, since nailgun support is now part of the
jruby binary.

This requires patching the included jruby-launcher gem to make a
similar change we used to make to the jruby.bash script, to set the
JAVA_HOME environment so things work correctly.

Also, create the SITEARCHDIR directory by default.

OK jcs@@
@
text
@d1 23
a23 14
$OpenBSD: patch-build_xml,v 1.1 2011/03/18 23:01:22 jeremy Exp $
--- build.xml.orig	Fri Mar 18 12:24:56 2011
+++ build.xml	Fri Mar 18 12:25:15 2011
@@@@ -192,8 +192,8 @@@@
     <attribute name="tzdata-version" default="${tzdata.distributed.version}"/>
     <sequential>
       <echo message="Updating constants with tzdata version @@{tzdata-version}"/>
-        <exec osfamily="unix" executable="git" outputproperty="jruby.revision" failonerror="false" failifexecutionfails="false">
-          <arg line="log -1 --format=format:%h"/>
+        <exec osfamily="unix" executable="echo" outputproperty="jruby.revision" failonerror="false" failifexecutionfails="false">
+          <arg line="-n"/>
         </exec>
         <exec osfamily="windows" executable="cmd" outputproperty="jruby.revision" failonerror="false" failifexecutionfails="false">
           <arg line="/c git log -1 --format=format:%h"/>
@


1.1
log
@Update jruby to 1.6.0.  This version adds ruby 1.9 syntax support,
as well as experimental C extension support, and many other
significant new features.

Bump required memory to 384MB, should fix occassional memory
errors when building.

Use the jruby-complete.jar instead of the jruby.jar, seems
to be necessary for C extension support to work correctly.

RSpec is no longer bundled.  Additionally, the extra 1.5.3
distfile is no longer needed as the changes have been included
upstream.

OK landry@@
@
text
@d1 1
a1 1
$OpenBSD$
@

