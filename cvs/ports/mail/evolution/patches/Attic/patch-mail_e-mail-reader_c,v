head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2014.04.13.16.14.19;	author ajacoutot;	state dead;
branches;
next	1.4;

1.4
date	2014.04.11.10.00.17;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2014.04.08.15.23.15;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.21.05.17.04;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2010.06.15.10.51.38;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to evolution-3.12.1.
@
text
@$OpenBSD: patch-mail_e-mail-reader_c,v 1.4 2014/04/11 10:00:17 ajacoutot Exp $

From afe39b84353ed091828fe704cf127a21f492b415 Mon Sep 17 00:00:00 2001
From: Milan Crha <mcrha@@redhat.com>
Date: Wed, 26 Mar 2014 16:48:03 +0100
Subject: Fix two memory leaks

From 8e21593713764056bb75460042a2178e803039b7 Mon Sep 17 00:00:00 2001
From: Milan Crha <mcrha@@redhat.com>
Date: Thu, 10 Apr 2014 18:03:06 +0200
Subject: Reset MessageList::seen_id in mail_reader_message_seen_cb()

--- mail/e-mail-reader.c.orig	Fri Mar  7 19:15:31 2014
+++ mail/e-mail-reader.c	Fri Apr 11 11:10:34 2014
@@@@ -868,20 +868,16 @@@@ action_mail_move_cb (GtkAction *action,
 	g_free (default_xfer_messages_uri);
 	default_xfer_messages_uri = g_strdup (uri);
 
-	if (uri != NULL) {
+	if (uri != NULL)
 		mail_transfer_messages (
 			session, folder, uids,
 			TRUE, uri, 0, NULL, NULL);
-		uids = NULL;
-	}
 
 exit:
-	if (uids != NULL)
-		g_ptr_array_unref (uids);
-
 	gtk_widget_destroy (dialog);
 
 	g_clear_object (&folder);
+	g_ptr_array_unref (uids);
 }
 
 static void
@@@@ -2593,6 +2589,12 @@@@ mail_reader_message_seen_cb (gpointer user_data)
 	display = e_mail_reader_get_mail_display (reader);
 	parts = e_mail_display_get_part_list (display);
 	message_list = e_mail_reader_get_message_list (reader);
+
+	g_return_val_if_fail (IS_MESSAGE_LIST (message_list), FALSE);
+
+	/* zero the timeout id now, if it was not rescheduled */
+	if (g_source_get_id (g_main_current_source ()) == MESSAGE_LIST (message_list)->seen_id)
+		MESSAGE_LIST (message_list)->seen_id = 0;
 
 	if (e_tree_is_dragging (E_TREE (message_list)))
 		return FALSE;
@


1.4
log
@Bring a brazillion bugfixes from upstream.
@
text
@d1 1
a1 1
$OpenBSD: patch-mail_e-mail-reader_c,v 1.3 2014/04/08 15:23:15 ajacoutot Exp $
@


1.3
log
@Start unbreaking the evolution stack by merging relevant commits from
upstream.
@
text
@d1 1
a1 1
$OpenBSD$
d8 5
d14 1
a14 1
+++ mail/e-mail-reader.c	Tue Apr  8 16:38:00 2014
d38 13
@


1.2
log
@Bugfixe update to evolution-2.30.2.
@
text
@d1 1
a1 1
$OpenBSD: patch-mail_e-mail-reader_c,v 1.1 2010/06/15 10:51:38 ajacoutot Exp $
d3 4
a6 7
From pstream GIT 4a2343cb34498c701e71679e3c50c9fc81dd5b80
Bug 618902 - Crash when viewing/closing messages quickly
Closing an EMailBrowser window causes it to be disposed immediately, but
ongoing async operations still hold an EMailBrowser reference -- in
particular, regenerating the internal message list and fetching a mail
message. The callback functions for these operations were not equipped
to deal with the disposed-but-not-yet-finalized object.
d8 13
a20 4
--- mail/e-mail-reader.c.orig	Mon Apr 26 15:13:17 2010
+++ mail/e-mail-reader.c	Tue Jun 15 09:19:15 2010
@@@@ -52,7 +52,8 @@@@
 #include "mail/message-list.h"
d22 5
a26 28
 #define E_MAIL_READER_GET_PRIVATE(obj) \
-	(mail_reader_get_private (G_OBJECT (obj)))
+	((EMailReaderPrivate *) g_object_get_qdata \
+	(G_OBJECT (obj), quark_private))
 
 typedef struct _EMailReaderPrivate EMailReaderPrivate;
 
@@@@ -92,33 +93,26 @@@@ static GQuark quark_private;
 static guint signals[LAST_SIGNAL];
 
 static void
-mail_reader_finalize (EMailReaderPrivate *priv)
+mail_reader_destroy (GObject *object)
 {
+	/* This will free the private struct. */
+	g_object_set_qdata (object, quark_private, NULL);
+}
+
+static void
+mail_reader_private_free (EMailReaderPrivate *priv)
+{
 	if (priv->message_selected_timeout_id > 0)
 		g_source_remove (priv->message_selected_timeout_id);
 
+	if (priv->retrieving_message_operation_id > 0)
+		mail_msg_cancel (priv->retrieving_message_operation_id);
+
 	g_free (priv->mark_read_message_uid);
d28 2
a29 1
 	g_slice_free (EMailReaderPrivate, priv);
a31 17
-static EMailReaderPrivate *
-mail_reader_get_private (GObject *object)
-{
-	EMailReaderPrivate *priv;
-
-	priv = g_object_get_qdata (object, quark_private);
-
-	if (G_UNLIKELY (priv == NULL)) {
-		priv = g_slice_new0 (EMailReaderPrivate);
-		g_object_set_qdata_full (
-			object, quark_private, priv,
-			(GDestroyNotify) mail_reader_finalize);
-	}
-
-	return priv;
-}
-
a32 46
 action_mail_add_sender_cb (GtkAction *action,
                            EMailReader *reader)
@@@@ -1830,6 +1824,14 @@@@ mail_reader_message_loaded_cb (CamelFolder *folder,
 
 	priv = E_MAIL_READER_GET_PRIVATE (reader);
 
+	/* If the private struct is NULL, the EMailReader was destroyed
+	 * while we were loading the message and we're likely holding the
+	 * last reference.  Nothing to do but drop the reference. */
+	if (priv == NULL) {
+		g_object_unref (reader);
+		return;
+	}
+
 	html_display = e_mail_reader_get_html_display (reader);
 	message_list = e_mail_reader_get_message_list (reader);
 
@@@@ -2551,7 +2553,7 @@@@ e_mail_reader_get_type (void)
 		type = g_type_register_static (
 			G_TYPE_INTERFACE, "EMailReader", &type_info, 0);
 
-		g_type_interface_add_prerequisite (type, G_TYPE_OBJECT);
+		g_type_interface_add_prerequisite (type, GTK_TYPE_OBJECT);
 	}
 
 	return type;
@@@@ -2726,6 +2728,19 @@@@ e_mail_reader_init (EMailReader *reader)
 	g_signal_connect_swapped (
 		message_list, "selection-change",
 		G_CALLBACK (e_mail_reader_changed), reader);
+
+	/* Install a private struct for storing things like flags and
+	 * timeout and asynchronous operation IDs.  We delete it when
+	 * the EMailReader is destroyed rather than finalized so that
+	 * asynchronous callbacks holding a reference can detect that
+	 * the reader has been destroyed and drop their reference. */
+	g_object_set_qdata_full (
+		G_OBJECT (reader), quark_private,
+		g_slice_new0 (EMailReaderPrivate),
+		(GDestroyNotify) mail_reader_private_free);
+	g_signal_connect (
+		reader, "destroy",
+		G_CALLBACK (mail_reader_destroy), NULL);
 }
 
 void
@


1.1
log
@Remove evo_mail_notifier.png, it's unused and removed upstream.

Add 2 patches from upstream/GNOME bugzilla to prevent crashes:
    GNOME bug 618902 - Crash when viewing/closing messages quickly
    GNOME bug 612082 - Crash in em_format_snoop_type
@
text
@d1 1
a1 1
$OpenBSD$
@

