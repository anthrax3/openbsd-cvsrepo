head	1.4;
access;
symbols
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2014.04.13.16.14.19;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2014.04.08.15.23.15;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.07.08.56.00;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2013.01.30.07.21.01;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to evolution-3.12.1.
@
text
@$OpenBSD: patch-mail_e-mail-backend_c,v 1.3 2014/04/08 15:23:15 ajacoutot Exp $

From d569f7d87e9bfa2b287004e4fc31cc69e434117c Mon Sep 17 00:00:00 2001
From: Milan Crha <mcrha@@redhat.com>
Date: Thu, 3 Apr 2014 12:54:54 +0200
Subject: Cancel pending mail operations when going offline or on quit

--- mail/e-mail-backend.c.orig	Mon Mar  3 01:37:23 2014
+++ mail/e-mail-backend.c	Tue Apr  8 16:40:32 2014
@@@@ -199,12 +199,15 @@@@ mail_backend_prepare_for_offline_cb (EShell *shell,
 	session = e_mail_backend_get_session (backend);
 	account_store = e_mail_ui_session_get_account_store (E_MAIL_UI_SESSION (session));
 
-	if (!e_shell_get_network_available (shell))
+	if (!e_shell_get_network_available (shell)) {
 		camel_session_set_online (CAMEL_SESSION (session), FALSE);
+		camel_operation_cancel_all ();
+	}
 
 	if (e_shell_backend_is_started (shell_backend)) {
 		gboolean ask_to_synchronize;
 		gboolean synchronize = FALSE;
+		GCancellable *cancellable;
 
 		ask_to_synchronize =
 			e_shell_get_network_available (shell) &&
@@@@ -220,12 +223,16 @@@@ mail_backend_prepare_for_offline_cb (EShell *shell,
 			camel_session_set_online (CAMEL_SESSION (session), FALSE);
 		}
 
-		if (!e_activity_get_cancellable (activity)) {
-			GCancellable *cancellable;
-
+		cancellable = e_activity_get_cancellable (activity);
+		if (!cancellable) {
 			cancellable = camel_operation_new ();
 			e_activity_set_cancellable (activity, cancellable);
 			g_object_unref (cancellable);
+		} else {
+			/* Maybe the cancellable just got cancelled when the above
+			   camel_operation_cancel_all() had been called, but we want
+			   it alive for the following "go-offline" operation, thus reset it. */
+			g_cancellable_reset (cancellable);
 		}
 
 		e_shell_backend_add_activity (shell_backend, activity);
@@@@ -368,6 +375,7 @@@@ mail_backend_prepare_for_quit_cb (EShell *shell,
 	EMailSession *session;
 	ESourceRegistry *registry;
 	GList *list, *link;
+	GCancellable *cancellable;
 	gboolean delete_junk;
 	gboolean empty_trash;
 
@@@@ -379,8 +387,17 @@@@ mail_backend_prepare_for_quit_cb (EShell *shell,
 
 	camel_application_is_exiting = TRUE;
 
+	camel_operation_cancel_all ();
 	mail_vfolder_shutdown ();
 
+	cancellable = e_activity_get_cancellable (activity);
+	if (cancellable) {
+		/* Maybe the cancellable just got cancelled when the above
+		   camel_operation_cancel_all() had been called, but we want
+		   it alive for the following operations, thus reset it. */
+		g_cancellable_reset (cancellable);
+	}
+
 	list = camel_session_list_services (CAMEL_SESSION (session));
 
 	if (delete_junk) {
@@@@ -417,9 +434,6 @@@@ mail_backend_prepare_for_quit_cb (EShell *shell,
 			/* local trash requires special handling,
 			 * due to POP3's "delete-expunged" option */
 			CamelFolder *local_trash;
-			GCancellable *cancellable;
-
-			cancellable = e_activity_get_cancellable (activity);
 
 			/* This should be lightning-fast since
 			 * it's just the local trash folder. */
@


1.3
log
@Start unbreaking the evolution stack by merging relevant commits from
upstream.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to evolution-3.6.4.
@
text
@d1 1
a1 1
$OpenBSD: patch-mail_e-mail-backend_c,v 1.1 2013/01/30 07:21:01 ajacoutot Exp $
d3 1
a3 1
From 0559de901e376c897515d684b357e6d9566f3b89 Mon Sep 17 00:00:00 2001
d5 2
a6 2
Date: Tue, 29 Jan 2013 15:52:45 +0000
Subject: Bug #692777 - Crash on folder rename
d8 5
a12 3
--- mail/e-mail-backend.c.orig	Sat Jan 19 18:35:13 2013
+++ mail/e-mail-backend.c	Wed Jan 30 07:35:04 2013
@@@@ -685,9 +685,6 @@@@ mail_backend_folder_renamed_cb (MailFolderCache *folde
d14 5
a18 1
 	g_list_free_full (list, (GDestroyNotify) g_object_unref);
d20 13
a32 2
-	g_free (old_uri);
-	g_free (new_uri);
d34 22
a55 1
 	/* Rename GalView files. */
d57 12
a68 5
 	for (ii = 0; ii < G_N_ELEMENTS (cachenames); ii++) {
@@@@ -703,6 +700,9 @@@@ mail_backend_folder_renamed_cb (MailFolderCache *folde
 		g_free (oldname);
 		g_free (newname);
 	}
d70 10
a79 2
+	g_free (old_uri);
+	g_free (new_uri);
d81 2
a82 2
 	/* This does something completely different.
 	 * XXX Make it a separate signal handler? */
@


1.1
log
@Merge upstream fixes for the followings nasty bugs:
#692777 - Crash on folder rename
#692009 - text/css always formatted as attachment
#692775 - Double-quoting message with HTML and text
#692783 - Crash on edit prompt cancel
#692781 - Abort on book failure during contact import
@
text
@d1 1
a1 1
$OpenBSD$
@

