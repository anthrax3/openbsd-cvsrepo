head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.30
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.28
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.26
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.22
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.24
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.18
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.16
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.10
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.8
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	merdely_20071004:1.1.1.1
	merdely:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.07.21.05.53.07;	author merdely;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.04.19.53.49;	author merdely;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.10.04.19.53.49;	author merdely;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to 3.6.0.  Works with clamav in tree.
Thanks for testing from Johan Huldtgren.
@
text
@$OpenBSD$
--- FuzzyOcr.preps.orig	Wed Jul 14 12:56:27 2010
+++ FuzzyOcr.preps	Wed Jul 14 12:56:45 2010
@@@@ -33,3 +33,8 @@@@ preprocessor maketiff {
     args = -color -truecolor
 }
 
+# Uses pamditherbw with thresholding on the PAM file
+preprocessor pamditherbw {
+    command = pamditherbw
+    args = -threshold
+}
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
--- FuzzyOcr.preps.orig	Tue Sep  4 13:31:13 2007
+++ FuzzyOcr.preps	Mon Sep 17 14:21:43 2007
@@@@ -33,3 +33,10 @@@@ preprocessor maketiff {
a12 2
+
+
@


1.1.1.1
log
@FuzzyOcr is a plugin for SpamAssassin which is aimed at unsolicited bulk
mail (also known as "Spam") containing images as the main content
carrier. Using different methods, it analyzes the content and properties
of images to distinguish between normal mails (Ham) and spam mails. The
methods mainly are:

* Optical Character Recognition using different engines and settings
* Fuzzy word matching algorithm applied to OCR results
* Image hashing system to learn unique properties of known spam images
* Dimension, size and integrity checking of images
* Content-Type verification for the containing email

Help from William Yodlowsky <bsd () openbsd.rutgers.edu>
Help and ok steven@@, simon@@
@
text
@@
