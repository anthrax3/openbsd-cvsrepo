head	1.6;
access;
symbols
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.8
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.1;
locks; strict;
comment	@# @;


1.6
date	2006.11.02.12.39.12;	author espie;	state dead;
branches;
next	1.5;

1.5
date	2005.04.05.22.50.57;	author alek;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.27.23.30.05;	author jose;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.16.08.40.59;	author wilfried;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.22.13.26.40;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.12.21.51.19;	author lebel;	state Exp;
branches;
next	;


desc
@@


1.6
log
@zap SCRIPTSDIR
@
text
@#!/bin/sh
#
# Configuration script for exmh-2.6.1.
# $OpenBSD: configure,v 1.5 2005/04/05 22:50:57 alek Exp $
#

perl << 'EOPERL'

use DirHandle;
use FileHandle;

#
# We used to try and work out the default mail domain, but this made
# it difficult to build a package. Well configured MTAs should
# fully qualify all addresses anyway.
#
my $domain = "";

my $prefix = exists $ENV{"PREFIX"} ? $ENV{"PREFIX"} : "/usr/local";
my $localbase = exists $ENV{"LOCALBASE"} ? $ENV{"LOCALBASE"} : "/usr/local";
my $config = "
# Saved state from exmh.install
# Mon Mar 14 10:59:18 MST 2005
set wish $localbase/bin/wish8.4
set exmh(version) {version 2.7.2 01/07/2005}
set exmh(name) exmh
set exmh(maintainer) welch\@@acm.org
set mh_path $localbase/bin
set exmh(slocal) $localbase/libexec/slocal
set mime(dir) $localbase/bin
set mailcap_default /etc/mailcap
set mimetypes_default $prefix/share/exmh/mime.types
set exmh(expect) $localbase/bin/expect
set exmh(expectk) $localbase/bin/expectk
set faces(dir) $localbase/faces/faces
set faces(set,user) {local users usenix misc}
set faces(set,unknown) {domains unknown}
set faces(set,news) news
set faces(defaultDomain) {$domain}
set faces(suffix) {xpm gif xbm}
set pgp(pgp,path) $localbase/bin
set pgp(pgp5,path) $localbase/bin
set pgp(gpg,path) $localbase/bin
set pgp(pgp6,path) $localbase/bin
set glimpse(path) $localbase/bin
set sound(cmd) /usr/bin/aucat
set exmh(library) $prefix/share/exmh
set install(dir,bin) $prefix/bin
set install(dir,man) $prefix/man/man1
set install(dir,lib) $prefix/share/exmh
";

exists $ENV{"WRKSRC"} or die ("WRKSRC: missing from environment\n");
exists $ENV{"WRKBUILD"} or die ("WRKBUILD: missing from environment\n");

my $srcdir = $ENV{"WRKSRC"};
my $dstdir = $ENV{"WRKBUILD"};
my $dir = new DirHandle ($srcdir) or die ("$srcdir: $!\n");
while (my $name = $dir->read ()){
	$name =~ m/^([^.].*)\.MASTER$/ or next;
	$src = "$srcdir/$name";
	$dst = "$dstdir/$1";

	my $in = new FileHandle ($src, "r") or die ("$src: $!\n");
	my $out = new FileHandle ($dst, "w") or die ("$dst: $!\n");

	if (my $line = $in->getline ()){
		$line =~ s|^#!expect|#!$localbase/bin/expect|;
		$line =~ s|^#!tclsh|#!$localbase/bin/tclsh8.4|;
		$line =~ s|^#!wish|#!$localbase/bin/wish8.4|;
		$out->print ($line) or die ("$dst: $!\n");

		while ($line = $in->getline ()){
			if ($line =~ m/^#CONFIGURATION$/){
				$out->print ($line) or die ("$dst: $!\n");
				$out->print ($config) or die ("$dst: $!\n");
				while ($line = $in->getline ()){
					if ($line =~ m/^#END CONFIGURATION$/){
						$out->print ($line) or die (
							"$dst: $!\n");
						last;
					}
				}
				$in->eof () and die ("$src: "
					. "missing 'END CONFIGURATION'\n");
			}
			else {
				$out->print ($line) or die ("$dst: $!\n");
			}
		}
	}
	$in->eof () or die ("$src: $!\n");

	$in->close () or die ("$src: $!\n");
	$out->close () or die ("$dst: $!\n");
}
$dir->close () or die ("$srcdir: $!\n");

exit (0);

EOPERL
@


1.5
log
@Update to 2.7.2

From Michael Paddon <michael@@paddon.org> (MAINTAINER)
@
text
@d4 1
a4 1
# $OpenBSD: configure,v 1.4 2003/12/27 23:30:05 jose Exp $
@


1.4
log
@
update to tcl/tk 8.4
ok brad@@ naddy@@
@
text
@d4 1
a4 1
# $OpenBSD: configure,v 1.3 2003/04/16 08:40:59 wilfried Exp $
d13 1
a13 1
# We used to try and work out the default mail domain, but this make
d23 1
a23 1
# Fri Apr  4 10:35:26 EST 2003
d25 1
a25 1
set exmh(version) {version 2.6.1 02/18/2003}
@


1.3
log
@Update to exmh 2.6.1; from maintainer Michael Paddon <michael@@paddon.org>

Lots of bug fixes and a new sequence menu.

The configuration is changed to allow the creation of a distibutable
package (before, the port relied on the local domain name as
discovered at configuration time). Now there is no default domain ...
i.e. the MTA should fully qualify addresses (as god intended).
@
text
@d4 1
a4 1
# $OpenBSD: configure,v 1.2 2001/08/22 13:26:40 naddy Exp $
d24 1
a24 1
set wish $localbase/bin/wish8.3
d69 2
a70 2
		$line =~ s|^#!tclsh|#!$localbase/bin/tclsh8.3|;
		$line =~ s|^#!wish|#!$localbase/bin/wish8.3|;
@


1.2
log
@Update to 2.5.
Submitted by maintainer Michael Paddon <michael@@paddon.org>.
@
text
@d3 2
a4 2
# Configuration script for exmh-2.5.
# $OpenBSD$
d12 6
a17 20
# work out domain name
sub getdomain {
	# DOMAIN set in environment?
	exists $ENV{"DOMAIN"} and return ($ENV{"DOMAIN"});

	# domain in hostname?
	my $host = `hostname`;
	chomp $host;
	$host =~ m/\.(.*)/s and return ($1);

	# domain in canonical hostname or aliases?
	my @@hinfo = gethostbyname ($host);
	if (scalar (@@hinfo) > 0){
		for $host ($hinfo[0], @@{$hinfo[1]}){
			$host =~ m/\.(.*)/s and return ($1);
		}
	}

	return ("");
}
a20 1
my $domain = getdomain ();
d23 1
a23 1
# Sun Jul 22 23:34:59 EST 2001
d25 1
a25 1
set exmh(version) {version 2.5 07/13/2001}
d79 1
a79 1
						$out->print ($config) or die (
@


1.1
log
@update mail/exmh2 to 2.4; angelos@@ agreed to pass on the port MAINTAINERship
to Michael Paddon <michael@@paddon.org>.
@
text
@d3 1
a3 1
# Configuration script for exmh-2.4.
d7 1
a7 1
set -e
d9 28
a36 1
export CONFIG='
d38 3
a40 3
# Wed Jun 20 14:29:09 EST 2001
set wish /usr/local/bin/wish8.3
set exmh(version) {version 2.4 05/15/2001}
d42 4
a45 4
set exmh(maintainer) welch@@acm.org
set mh_path /usr/local/bin
set exmh(slocal) /usr/local/libexec/slocal
set mime(dir) /usr/local/bin
d47 4
a50 4
set mimetypes_default /usr/local/lib/exmh-2.4/mime.types
set exmh(expect) /usr/local/bin/expect
set exmh(expectk) /usr/local/bin/expectk
set faces(dir) /usr/local/faces/faces
d54 1
a54 1
set faces(defaultDomain) eng.sun.com
d56 5
a60 5
set pgp(pgp,path) /usr/local/bin
set pgp(pgp5,path) /usr/local/bin
set pgp(gpg,path) /usr/local/bin
set pgp(pgp6,path) /usr/local/bin
set glimpse(path) /usr/local/bin
d62 43
a104 13
set exmh(library) /usr/local/lib/exmh-2.4
set install(dir,bin) /usr/local/bin
set install(dir,man) /usr/local/man/manl
set install(dir,lib) /usr/local/lib/exmh-2.4
'

for master in "$WRKSRC"/*.MASTER
do
	awk '
		NR == 1 {
			sub ("^#!expect","#!/usr/local/bin/expect");
			sub ("^#!tclsh","#!/usr/local/bin/tclsh8.3");
			sub ("^#!wish","#!/usr/local/bin/wish8.3");
d106 11
a116 13
		/^#CONFIGURATION$/ {
			print;
			print ENVIRON["CONFIG"];
			quiet = 1;
		}
		/^#END CONFIGURATION$/ {
			quiet = 0;
		}
		!quiet {
			print;
		}
	' "$master" > "$WRKBUILD"/`basename "$master" .MASTER`
done
@

