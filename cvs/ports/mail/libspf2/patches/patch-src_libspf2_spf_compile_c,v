head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.2
	OPENBSD_6_2_BASE:1.4
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	okan_20080130:1.1.1.1
	okan:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.04.19.16.56.04;	author jca;	state Exp;
branches;
next	1.3;
commitid	9vxEpJdjVEhAlsUb;

1.3
date	2017.04.19.16.49.49;	author jca;	state Exp;
branches;
next	1.2;
commitid	NO3H9by1lHVTeQxj;

1.2
date	2008.11.05.17.20.08;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2008.01.30.15.58.50;	author okan;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.01.30.15.58.50;	author okan;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Fix format string for size_t parameter.

Like other size_t variables in this file.
@
text
@$OpenBSD: patch-src_libspf2_spf_compile_c,v 1.3 2017/04/19 16:49:49 jca Exp $
--- src/libspf2/spf_compile.c.orig	Mon Feb 20 08:26:43 2012
+++ src/libspf2/spf_compile.c	Wed Apr 19 18:53:10 2017
@@@@ -577,7 +577,7 @@@@ SPF_c_parse_macro(SPF_server_t *spf_server,
 		switch (src[idx]) {
 		case '%':
 			if (spf_server->debug > 3)
-				SPF_debugf("Adding literal %%");
+				SPF_debugf("%s", "Adding literal %");
 			SPF_ENSURE_STRING_AVAIL(1);
 			*dst++ = '%';
 			ds_len++;
@@@@ -586,7 +586,7 @@@@ SPF_c_parse_macro(SPF_server_t *spf_server,
 			
 		case '_':
 			if (spf_server->debug > 3)
-				SPF_debugf("Adding literal space");
+				SPF_debugf("%s", "Adding literal space");
 			SPF_ENSURE_STRING_AVAIL(1);
 			*dst++ = ' ';
 			ds_len++;
@@@@ -595,7 +595,7 @@@@ SPF_c_parse_macro(SPF_server_t *spf_server,
 
 		case '-':
 			if (spf_server->debug > 3)
-				SPF_debugf("Adding escaped space");
+				SPF_debugf("%s", "Adding escaped space");
 			SPF_ENSURE_STRING_AVAIL(3);
 			*dst++ = '%'; *dst++ = '2'; *dst++ = '0';
 			ds_len += 3;
@@@@ -604,8 +604,8 @@@@ SPF_c_parse_macro(SPF_server_t *spf_server,
 
 		default:
 			if (spf_server->debug > 3)
-				SPF_debugf("Adding illegal %%-follower '%c' at %d",
-				src[idx], idx);
+				SPF_debugf("Adding illegal %%-follower '%c' at %lu",
+				src[idx], (unsigned long)idx);
 			/* SPF spec says to treat it as a literal, not
 			 * SPF_E_INVALID_ESC */
 			/* FIXME   issue a warning? */
@


1.3
log
@clang fixes for variadic macros

With C99 variadic macros, __VA_ARGS__ has to replace at least one
argument.
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ src/libspf2/spf_compile.c	Wed Apr 19 18:32:44 2017
d31 11
@


1.2
log
@- update libspf2 to 1.2.9
- includes a SECURITY FIX for a buffer overflow

from frank dennis, with minor tweaks by me
@
text
@d1 22
a22 5
$OpenBSD: patch-src_libspf2_spf_compile_c,v 1.1 2008/01/30 15:58:50 okan Exp $
--- src/libspf2/spf_compile.c.orig	Wed Feb 23 22:40:31 2005
+++ src/libspf2/spf_compile.c	Thu Jan 24 23:09:37 2008
@@@@ -98,7 +98,7 @@@@ SPF_mechtype_find(int mech_type)
 }
d24 7
a30 33
 static void
-SPF_c_ensure_capacity(void **datap, int *sizep, int length)
+SPF_c_ensure_capacity(void **datap, size_t *sizep, size_t length)
 {
 	int		 size = *sizep;
 	if (length > size)
@@@@ -435,7 +435,7 @@@@ SPF_c_parse_var(SPF_response_t *spf_response, SPF_data
 static SPF_errcode_t
 SPF_c_parse_macro(SPF_server_t *spf_server,
 				SPF_response_t *spf_response,
-				SPF_data_t *data, int *data_len,
+				SPF_data_t *data, size_t *data_len,
 				const char **startp, const char **endp,
 				size_t max_len, SPF_errcode_t big_err,
 				int is_mod)
@@@@ -470,7 +470,7 @@@@ SPF_c_parse_macro(SPF_server_t *spf_server,
 				len = end - p;
 			if (spf_server->debug)
 				SPF_debugf("Adding string literal (%d): '%*.*s'",
-								len, len, len, p);
+								(int)len, (int)len, (int)len, p);
 			memcpy( dst, p, len );
 			ds_len += len;
 			dst += len;
@@@@ -551,7 +551,7 @@@@ SPF_c_parse_macro(SPF_server_t *spf_server,
 static SPF_errcode_t
 SPF_c_parse_domainspec(SPF_server_t *spf_server,
 				SPF_response_t *spf_response,
-				SPF_data_t *data, int *data_len,
+				SPF_data_t *data, size_t *data_len,
 				const char **startp, const char **endp,
 				size_t max_len, SPF_errcode_t big_err,
 				int cidr_ok, int is_mod)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import libspf2

libspf2 is an implementation of the Sender Policy Framework (SPF).

ok jakob@@ merdely@@
@
text
@@
