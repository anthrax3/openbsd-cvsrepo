head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	okan_20080130:1.1.1.1
	okan:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.11.05.17.20.08;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2008.01.30.15.58.50;	author okan;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.01.30.15.58.50;	author okan;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update libspf2 to 1.2.9
- includes a SECURITY FIX for a buffer overflow

from frank dennis, with minor tweaks by me
@
text
@$OpenBSD: patch-src_spf_example_spf_example_c,v 1.1 2008/01/30 15:58:50 okan Exp $
--- src/spf_example/spf_example.c.orig	Thu Feb 17 02:26:04 2005
+++ src/spf_example/spf_example.c	Fri Jun  1 21:33:16 2007
@@@@ -90,17 +90,17 @@@@ static void usage()
 	"\n"
 	"Valid data options are:\n"
 	"	-i <IP address>			The IP address that is sending email\n"
-	"	-s <email address>		 The email address used as the\n"
-	"							   envelope-from.  If no username (local\n"
-	"							   part) is given, 'postmaster' will be\n"
-	"							   assumed.\n"
-	"	-r <email address>		 [optional] The email address used as\n"
-	"							   the envelope-to email address, for\n"
-	"							   secondary-MX checking.\n"
-	"	-h <domain name>		   The domain name given on the SMTP HELO\n"
-	"							   command.  This is only needed if the\n"
-	"							   -sender option is not given.\n"
-	"	-d [debug level]		   debug level.\n"
+	"	-s <email address>		The email address used as the\n"
+	"					envelope-from.  If no username (local\n"
+	"					part) is given, 'postmaster' will be\n"
+	"					assumed.\n"
+	"	-r <email address>		[optional] The email address used as\n"
+	"					the envelope-to email address, for\n"
+	"					secondary-MX checking.\n"
+	"	-h <domain name>		The domain name given on the SMTP HELO\n"
+	"					command.  This is only needed if the\n"
+	"					-sender option is not given.\n"
+	"	-d [debug level]		debug level.\n"
 	);
 }
 
@@@@ -206,7 +206,7 @@@@ int main( int argc, char *argv[] )
 	 * destroyed when you are finished.
 	 */
 
-	spf_server = SPF_server_new(SPF_DNS_CACHE, 1);
+	spf_server = SPF_server_new(SPF_DNS_CACHE, opt_debug);
 
 	if (spf_server == NULL) {
 		fprintf( stderr, "SPF_create_config failed.\n" );
@@@@ -264,10 +264,24 @@@@ int main( int argc, char *argv[] )
 	 * message.
 	 */
 
-	if ( SPF_request_set_helo_dom( spf_request, opt_helo ) ) {
-		printf( "Invalid HELO domain.\n" );
-		res = 255;
-		goto error;
+	if (opt_helo == NULL) {
+		if (opt_sender != NULL) {
+			if (strstr(opt_sender, "@@") != NULL) {
+				opt_helo = strdup(strstr(opt_sender, "@@") + 1);
+
+				if ( SPF_request_set_helo_dom( spf_request, opt_helo ) ) {
+					printf( "Invalid HELO domain.\n" );
+					res = 255;
+					goto error;
+				}
+			}
+		}
+	} else {
+		if ( SPF_request_set_helo_dom( spf_request, opt_helo ) ) {
+			printf( "Invalid HELO domain.\n" );
+			res = 255;
+			goto error;
+		}
 	}
 
 	/*
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import libspf2

libspf2 is an implementation of the Sender Policy Framework (SPF).

ok jakob@@ merdely@@
@
text
@@
