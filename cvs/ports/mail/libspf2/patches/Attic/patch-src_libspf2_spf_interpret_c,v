head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	okan_20080130:1.1.1.1
	okan:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.11.05.17.20.08;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2008.01.30.15.58.50;	author okan;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.01.30.15.58.50;	author okan;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update libspf2 to 1.2.9
- includes a SECURITY FIX for a buffer overflow

from frank dennis, with minor tweaks by me
@
text
@$OpenBSD: patch-src_libspf2_spf_interpret_c,v 1.1 2008/01/30 15:58:50 okan Exp $
--- src/libspf2/spf_interpret.c.orig	Mon Feb 21 22:41:27 2005
+++ src/libspf2/spf_interpret.c	Thu Jan 24 23:07:13 2008
@@@@ -49,8 +49,8 @@@@ SPF_i_set_smtp_comment(SPF_response_t *spf_response)
 	SPF_record_t	*spf_record;
 	SPF_errcode_t	 err;
 	char			*buf;
-	int				 buflen;
-	int				 len;
+	size_t				 buflen;
+	size_t				 len;
 
 	SPF_ASSERT_NOTNULL(spf_response);
 	spf_request = spf_response->spf_request;
@@@@ -214,9 +214,13 @@@@ SPF_i_set_header_comment(SPF_response_t *spf_response)
 		break;
 
 	case SPF_RESULT_NEUTRAL:
-	case SPF_RESULT_NONE:
 		snprintf( p, p_end - p, "%s is neither permitted nor denied by %s",
 				  ip, spf_source );
+		break;
+
+	case SPF_RESULT_NONE:
+		snprintf( p, p_end - p, "%s does not provide an SPF record",
+				  spf_source );
 		break;
 
 	case SPF_RESULT_TEMPERROR:
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import libspf2

libspf2 is an implementation of the Sender Policy Framework (SPF).

ok jakob@@ merdely@@
@
text
@@
