head	1.5;
access;
symbols
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.5
date	2015.04.09.19.55.09;	author sthen;	state dead;
branches;
next	1.4;
commitid	sE7HMnORBsGkv9M7;

1.4
date	2013.12.12.21.56.19;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2013.08.12.20.22.44;	author brad;	state dead;
branches;
next	1.2;

1.2
date	2012.03.06.08.34.20;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.12.08.08.03.20;	author sthen;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2012.04.11.14.18.52;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to MailScanner-4.85.2-1, from Brad (maintainer)
@
text
@$OpenBSD: patch-lib_MailScanner_TNEF_pm,v 1.4 2013/12/12 21:56:19 brad Exp $
--- lib/MailScanner/TNEF.pm.orig	Wed Dec 11 18:21:01 2013
+++ lib/MailScanner/TNEF.pm	Wed Dec 11 18:48:39 2013
@@@@ -229,18 +229,25 @@@@ sub ExternalDecoder {
 
   # Create the subdir to unpack it into
   #my $unpackdir = "tnef.$$";
-  my ($tmpfh, $unpackdir) = tempfile("tnefXXXXXX", TMPDIR => $dir, UNLINK => 0);
-  # This line shouldn't be here any more! $dir =~ s,^.*/,,;
-  $unpackdir = $message->MakeNameSafe($unpackdir, $dir);
-  unless (mkdir "$dir/$unpackdir", 0777) {
+  my $unpackdir = tempdir("tnefXXXXXX", DIR => $dir);
+  unless (-d $unpackdir) {
     MailScanner::Log::WarnLog("Trying to unpack %s in message %s, could not create subdirectory %s, failed to unpack TNEF message", $tnefname, $message->{id},
-                              "$dir/$unpackdir");
+                              "$unpackdir");
     return 0;
   }
-  chmod 0700, "$dir/$unpackdir";
+  # Convert Incoming Work Permissions to an octal value and add search.
+  my $perms = oct(sprintf("%s", MailScanner::Config::Value('workperms')))
+    | 0111;
+  chmod $perms, $unpackdir;
+  # Try to set Incoming Work User and Group.
+  my $uname = MailScanner::Config::Value('workuser');
+  my $gname = MailScanner::Config::Value('workgroup');
+  my $uid = $uname?getpwnam($uname):-1;
+  my $gid = $gname?getgrnam($gname):-1;
+  chown $uid, $gid, $unpackdir;
 
   my $cmd = MailScanner::Config::Value('tnefexpander') .
-            " -f $dir/$tnefname -C $dir/$unpackdir --overwrite";
+            " -f $dir/$tnefname -C $unpackdir --overwrite";
 
   my($kid);
   my($TimedOut, $PipeReturn, $pid);
@@@@ -311,15 +318,15 @@@@ sub ExternalDecoder {
 
     unless (MailScanner::Config::Value('replacetnef',$message) =~ /[12]/) {
       # Just need to move all the unpacked files into the main attachments dir
-      my $dirh = new DirHandle "$dir/$unpackdir";
+      my $dirh = new DirHandle "$$unpackdir";
       return 0 unless defined $dirh;
       while (defined(my $unpacked = $dirh->read)) {
-        next unless -f "$dir/$unpackdir/$unpacked";
+        next unless -f "$$unpackdir/$unpacked";
         # Add a 't' to the safename to mark it as a tnef member.
         my $safe = $message->MakeNameSafe('t'.$unpacked, $dir);
         # This will cause big problems as $safe has a type, and shouldn't!
         $message->{file2parent}{$safe} = $tnefname;
-        my $name1 = "$dir/$unpackdir/$unpacked";
+        my $name1 = "$unpackdir/$unpacked";
         $name1 =~ /(.*)/;
         $name1 = $1;
         my $name2 = "$dir/$safe";
@@@@ -333,19 +340,21 @@@@ sub ExternalDecoder {
         $safe =~ s#^(.*/)([^/])([^/]+)$#$1$3#; # I assert $2 will equal 't'.
         $message->{file2parent}{$safe} = $tnefname;
       }
-      rmdir "$dir/$unpackdir"; # Directory should be empty now
+      # The following may result in a warning from a virus scanner that
+      # tries to lstat the directory, but it was empty so it can be ignored.
+      rmdir "$$unpackdir"; # Directory should be empty now
       return 1;
     }
     #print STDERR "In TNEF External Decoder\n";
 
-    my $dirh = new DirHandle "$dir/$unpackdir";
+    my $dirh = new DirHandle "$unpackdir";
     return 0 unless defined $dirh;
     my($type, $encoding);
     $message->{entity}->make_multipart;
     my($safename, @@replacements, $unpacked);
     while (defined($unpacked = $dirh->read)) {
-      #print STDERR "Directory entry is \"$unpacked\" in \"$dir/$unpackdir\"\n";
-      next unless -f "$dir/$unpackdir/$unpacked";
+      #print STDERR "Directory entry is \"$unpacked\" in \"$unpackdir\"\n";
+      next unless -f "$unpackdir/$unpacked";
       # Add a 't' to the safename to mark it as a tnef member.
       $safename = $message->MakeNameSafe('t'.$unpacked, $dir);
       if (/^msg[\d-]+\.txt$/) {
@@@@ -353,15 +362,15 @@@@ sub ExternalDecoder {
       } else {
         ($type, $encoding) = ("application/octet-stream", "base64");
       }
-      #print STDERR "Renaming '$dir/$unpackdir/$unpacked' to '$dir/$safename'\n";
-      my $oldname = "$dir/$unpackdir/$unpacked";
+      #print STDERR "Renaming '$unpackdir/$unpacked' to '$dir/$safename'\n";
+      my $oldname = "$unpackdir/$unpacked";
       my $newname = "$dir/$safename";
       $oldname =~ /^(.*)$/;
       $oldname = $1;
       $newname =~ /^(.*)$/;
       $newname = $1;
       rename $oldname, $newname;
-      #rename "$dir/$unpackdir/$unpacked", "$dir/$safename";
+      #rename "$unpackdir/$unpacked", "$dir/$safename";
       # JKF 20090421 CHMOD, then CHOWN and CHGRP it if necessary.
       chmod $perms, $newname;
       #chmod $perms, "$dir/$safename";
@@@@ -381,7 +390,9 @@@@ sub ExternalDecoder {
     $message->{bodymodified} = 1;
     $message->{foundtnefattachments} = 1;
     undef $dirh;
-    rmdir "$dir/$unpackdir"; # Directory should be empty now
+    # The following may result in a warning from a virus scanner that
+    # tries to lstat the directory, but it was empty so it can be ignored.
+    rmdir "$unpackdir"; # Directory should be empty now
     #$message->{entity}->dump_skeleton();
 
     MailScanner::Log::InfoLog("Message %s added TNEF contents %s",
@


1.4
log
@Lift some temp file fixes from the github repo. It's always fun noticing your
mail server blow up so to speak and then wonder why /var is out of inodes and
seeing that 803,000 or so inodes are in use. Where could they posibly be in
use? Then finding 801,000+ 0 byte temp files which had been accumulating for
quite awhile in /var/spool/MailScanner/incoming/SpamAssassin-Temp.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@Update to MailScanner 4.84.6-1.

ok sthen@@
@
text
@d1 4
a4 7
$OpenBSD: patch-lib_MailScanner_TNEF_pm,v 1.2 2012/03/06 08:34:20 sthen Exp $

http://permalink.gmane.org/gmane.mail.virus.mailscanner/77741

--- lib/MailScanner/TNEF.pm.orig	Sat Aug 20 13:32:02 2011
+++ lib/MailScanner/TNEF.pm	Mon Mar  5 13:13:40 2012
@@@@ -229,8 +229,7 @@@@ sub ExternalDecoder {
d9 5
a13 4
-  $dir =~ s,^.*/,,;
+  my $unpackdir = tempdir("tnefXXXXXX");
   $unpackdir = $message->MakeNameSafe($unpackdir, $dir);
   unless (mkdir "$dir/$unpackdir", 0777) {
d15 2
a16 1
@@@@ -238,6 +237,7 @@@@ sub ExternalDecoder {
d19 11
a29 2
   chmod 0700, "$dir/$unpackdir";
+  chown $owner, $group, "$dir/$unpackdir" if $change;
d32 80
a111 1
             " -f $dir/$tnefname -C $dir/$unpackdir --overwrite";
@


1.2
log
@Update to MailScanner 4.84.5-2, OK with Brad.

- Fixes URL used to fetch phishing-detection database; the domain that
it was hosted on lapsed. You may have a corrupt database: if the file
/var/spool/MailScanner/quarantine/phishingupdate exists, delete it
and run update_bad_phishing_sites and update_bad_phishing_emails
manually as the "run as user".

- While there update the TNEF.pm fix to improve temp file handling.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_MailScanner_TNEF_pm,v 1.1 2011/12/08 08:03:20 sthen Exp $
@


1.1
log
@Previous update caused a problem with external TNEF unpacking; add a
diff posted on the mailing list to fix it. OK Brad (maintainer).
@
text
@d1 1
a1 1
$OpenBSD$
d5 4
a8 3
--- lib/MailScanner/TNEF.pm.orig	Sun Dec  4 12:11:05 2011
+++ lib/MailScanner/TNEF.pm	Sun Dec  4 12:13:20 2011
@@@@ -230,7 +230,7 @@@@ sub ExternalDecoder {
d11 1
a11 1
   my ($tmpfh, $unpackdir) = tempfile("tnefXXXXXX", TMPDIR => $dir, UNLINK => 0);
d13 1
a13 1
+  $unpackdir =~ s,/,,;
d17 1
a17 1
@@@@ -238,6 +238,7 @@@@ sub ExternalDecoder {
@


1.1.2.1
log
@MFC update to MailScanner 4.84.5-2

- Fixes URL used to fetch phishing-detection database; the domain that
it was hosted on lapsed. You may have a corrupt database: if the file
/var/spool/MailScanner/quarantine/phishingupdate exists, delete it
and run update_bad_phishing_sites and update_bad_phishing_emails
manually as the "run as user".

- While there update the TNEF.pm fix to improve temp file handling.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_MailScanner_TNEF_pm,v 1.2 2012/03/06 08:34:20 sthen Exp $
d5 3
a7 4
--- lib/MailScanner/TNEF.pm.orig	Sat Aug 20 13:32:02 2011
+++ lib/MailScanner/TNEF.pm	Mon Mar  5 13:13:40 2012
@@@@ -229,8 +229,7 @@@@ sub ExternalDecoder {
 
d10 1
a10 1
-  my ($tmpfh, $unpackdir) = tempfile("tnefXXXXXX", TMPDIR => $dir, UNLINK => 0);
d12 1
a12 1
+  my $unpackdir = tempdir("tnefXXXXXX");
d16 1
a16 1
@@@@ -238,6 +237,7 @@@@ sub ExternalDecoder {
@


