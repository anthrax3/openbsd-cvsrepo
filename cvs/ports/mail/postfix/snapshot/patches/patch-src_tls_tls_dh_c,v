head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2017.02.04.22.09.44;	author sthen;	state Exp;
branches;
next	1.1;
commitid	2mq1eDyEiQSaoWjP;

1.1
date	2017.01.07.23.49.47;	author sthen;	state Exp;
branches;
next	;
commitid	pDY9jI5Sekxz64tY;


desc
@@


1.2
log
@Enable EC curve selection in Postfix, from Brad.
@
text
@$OpenBSD: patch-src_tls_tls_dh_c,v 1.1 2017/01/07 23:49:47 sthen Exp $

Fix building with LibreSSL

--- src/tls/tls_dh.c.orig	Mon Dec 26 18:47:24 2016
+++ src/tls/tls_dh.c	Sat Feb  4 01:45:39 2017
@@@@ -314,7 +314,7 @@@@ void    tls_auto_eecdh_curves(SSL_CTX *ctx)
      * This is a NOP in OpenSSL 1.1.0 and later, where curves are always
      * auto-negotiated.
      */
-#if OPENSSL_VERSION_NUMBER < 0x10100000UL
+#if OPENSSL_VERSION_NUMBER < 0x10100000UL || defined(LIBRESSL_VERSION_NUMBER)
     if (SSL_CTX_set_ecdh_auto(ctx, 1) <= 0) {
 	msg_warn("failed to enable automatic ECDHE curve selection");
 	tls_print_errors();
@


1.1
log
@update to postfix-3.2.20170101, from Brad
@
text
@d1 1
a1 1
$OpenBSD$
d5 11
a15 46
--- src/tls/tls_dh.c.orig	Fri Jan  6 23:22:10 2017
+++ src/tls/tls_dh.c	Fri Jan  6 23:29:58 2017
@@@@ -94,7 +94,7 @@@@
 #define TLS_INTERNAL
 #include <tls.h>
 #include <openssl/dh.h>
-#if OPENSSL_VERSION_NUMBER >= 0x1000200fUL && !defined(OPENSSL_NO_ECDH)
+#if OPENSSL_VERSION_NUMBER >= 0x1000200fUL && !defined(OPENSSL_NO_ECDH) && !defined(LIBRESSL_VERSION_NUMBER)
 #include <openssl/ec.h>
 #endif
 
@@@@ -244,7 +244,7 @@@@ DH     *tls_tmp_dh_cb(SSL *unused_ssl, int export, int
 
 void    tls_auto_eecdh_curves(SSL_CTX *ctx)
 {
-#if OPENSSL_VERSION_NUMBER >= 0x1000200fUL && !defined(OPENSSL_NO_ECDH)
+#if OPENSSL_VERSION_NUMBER >= 0x1000200fUL && !defined(OPENSSL_NO_ECDH) && !defined(LIBRESSL_VERSION_NUMBER)
     SSL_CTX *tmpctx;
     int    *nids;
     int     space = 5;
@@@@ -337,14 +337,14 @@@@ void    tls_set_eecdh_curve(SSL_CTX *server_ctx, const
 #define TLS_EECDH_NONE		1
 #define TLS_EECDH_STRONG	2
 #define TLS_EECDH_ULTRA		3
-#if OPENSSL_VERSION_NUMBER >= 0x1000200fUL
+#if OPENSSL_VERSION_NUMBER >= 0x1000200fUL && !defined(LIBRESSL_VERSION_NUMBER)
 #define TLS_EECDH_AUTO		4
 #endif
     static NAME_CODE eecdh_table[] = {
 	"none", TLS_EECDH_NONE,
 	"strong", TLS_EECDH_STRONG,
 	"ultra", TLS_EECDH_ULTRA,
-#if OPENSSL_VERSION_NUMBER >= 0x1000200fUL
+#if OPENSSL_VERSION_NUMBER >= 0x1000200fUL && !defined(LIBRESSL_VERSION_NUMBER)
 	"auto", TLS_EECDH_AUTO,
 #endif
 	0, TLS_EECDH_INVALID,
@@@@ -364,7 +364,7 @@@@ void    tls_set_eecdh_curve(SSL_CTX *server_ctx, const
     case TLS_EECDH_ULTRA:
 	curve = var_tls_eecdh_ultra;
 	break;
-#if OPENSSL_VERSION_NUMBER >= 0x1000200fUL
+#if OPENSSL_VERSION_NUMBER >= 0x1000200fUL && !defined(LIBRESSL_VERSION_NUMBER)
     case TLS_EECDH_AUTO:
 	tls_auto_eecdh_curves(server_ctx);
 	return;
@

