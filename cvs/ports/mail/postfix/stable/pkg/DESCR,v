head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.20
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.18
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.14
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.16
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.12
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.10
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.8
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.6
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.4
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.2
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.2
	OPENBSD_5_0:1.16.0.20
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.18
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.16
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.14
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.12
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.10
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.8
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.6
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.4
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.2
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.14.0.6
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.4
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.2
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_TRACKING_SWITCH:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@# @;


1.20
date	2012.05.16.14.40.08;	author sthen;	state Exp;
branches;
next	1.19;

1.19
date	2012.02.20.09.55.49;	author sthen;	state Exp;
branches;
next	1.18;

1.18
date	2012.02.02.06.57.39;	author jakob;	state Exp;
branches;
next	1.17;

1.17
date	2012.02.01.21.42.54;	author jakob;	state Exp;
branches;
next	1.16;

1.16
date	2006.10.12.08.36.16;	author jakob;	state Exp;
branches;
next	1.15;

1.15
date	2006.07.17.09.15.54;	author jakob;	state Exp;
branches;
next	1.14;

1.14
date	2005.03.10.07.32.39;	author jakob;	state Exp;
branches;
next	1.13;

1.13
date	2005.03.07.18.26.40;	author brad;	state Exp;
branches;
next	1.12;

1.12
date	2004.10.09.14.40.54;	author jakob;	state Exp;
branches;
next	1.11;

1.11
date	2004.04.25.10.36.40;	author jakob;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.14.18.03.37;	author jakob;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.14.17.45.45;	author jakob;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.15.23.03.08;	author naddy;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.15.21.42.40;	author naddy;	state Exp;
branches;
next	1.6;

1.6
date	2002.12.25.12.01.13;	author jakob;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.28.09.35.14;	author jakob;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.26.18.41.30;	author jakob;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.28.23.35.18;	author jakob;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.21.20.30.51;	author jakob;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.25.21.02.35;	author jakob;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Roll sqlite support into the main package; there's no point having it
as an optional flavour now that sqlite is in base. From Brad.
@
text
@Postfix attempts to be fast, easy to administer, and secure, while at the
same time being sendmail compatible enough to not upset existing users.
Thus, the outside has a sendmail-ish flavor, but the inside is completely
different.

Extra features always included:

- table lookups using PCRE (Perl-Compatible Regular Expression), SQLite
- authenticated SMTP using Dovecot SASL

Optional features included using flavors:

- authenticated SMTP using Cyrus SASL v2
- table lookups using LDAP, MySQL, PostgreSQL, BerkeleyDB
@


1.19
log
@update Postfix stable to 2.9.0, from Brad
@
text
@d8 1
a8 1
- table lookups using PCRE (Perl-Compatible Regular Expression)
d14 1
a14 1
- table lookups using LDAP, MySQL, PostgreSQL, BerkeleyDB, SQLite
@


1.18
log
@downgrade from 2.9.0 to 2.8.8; requested by sthen & naddy
@
text
@d14 1
a14 1
- table lookups using LDAP, MySQL, PostgreSQL, BerkeleyDB
@


1.17
log
@upgrade to Postfix 2.9.0; from brad
@
text
@d14 1
a14 1
- table lookups using LDAP, MySQL, PostgreSQL, BerkeleyDB, SQLite
@


1.16
log
@add db4 flavour; contributed by Wilbern Cobb
@
text
@d14 1
a14 1
- table lookups using LDAP, MySQL, PostgreSQL, BerkeleyDB
@


1.15
log
@fix files forgotten during snapshot->stable sync
@
text
@d14 1
a14 1
- table lookups using LDAP, MySQL and PostgreSQL
@


1.14
log
@clean up description
@
text
@d1 3
a3 3
Postfix attempts to be fast, easy to administer, and secure, while at the 
same time being sendmail compatible enough to not upset existing users. 
Thus, the outside has a sendmail-ish flavor, but the inside is completely 
d9 1
@


1.13
log
@Postfix 2.2.0RC2 and 2.3 20050304 snapshot.

ok MAINTAINER
@
text
@d1 3
a3 3
Postfix attempts to be fast, easy to administer, and secure, while at the
same time being sendmail compatible enough to not upset existing users.
Thus, the outside has a sendmail-ish flavor, but the inside is completely
d13 1
a13 4
- table lookups using LDAP
- table lookups using MySQL
- table lookups using PostgreSQL

@


1.12
log
@speling
@
text
@a7 2
- SMTP over SSL/TLS (${TLSHOMEPAGE})
- IPv6 (${IPV6HOMEPAGE})
@


1.11
log
@move to postfix release 2.1 and snapshot 2.2

- enable SMTP over SSL/TLS by default
- enable IPv6 by default
- enable PRE by default
- keep sasl2/ldap/mysql/pgsql as flavours
@
text
@d12 1
a12 1
Optional fetures included using flavors:
@


1.10
log
@clean up pkg/DESCR
@
text
@d6 12
a17 1
Port flavors:
a18 7
ipv6	support IPv6 (${IPV6HOMEPAGE})
tls	support SMTP over SSL/TLS (${TLSHOMEPAGE})
sasl	support authenticated SMTP using Cyrus SASL v1 (deprecated)
sasl2	support authenticated SMTP using Cyrus SASL v2 (recommended)
pcre	support table lookups using PCRE (Perl-Compatible Regular Expression)
ldap	support table lookups using LDAP
mysql	support table lookups using MySQL
@


1.9
log
@initial IPv6 support
@
text
@d1 14
a14 83
Postfix Overview - Goals and Features
   
  The goal of the Postfix project is to implement a viable alternative
  to the UNIX Sendmail program. Specific goals, and the ways that
  Postfix attempts to achieve them are:

* Wide dissemination. Postfix must be adopted by lots of people in
  order to make a significant impact on Internet mail performance and
  security. Therefore the software is given away for free, with no
  strings attached to it.

* Performance. Postfix is up to three times as fast as its nearest
  competitor. A desktop PC running Postfix can receive and deliver a
  million different messages per day. Postfix uses web server tricks
  to reduce process creation overhead and uses other tricks to reduce
  file system overhead, without compromising reliability.

* Compatibility. Postfix is designed to be sendmail-compatible to make
  migration easy. Postfix supports /var/mail, /etc/aliases, NIS, and
  ~/.forward files. However, Postfix also attempts to be easy to
  administer, and therefore it does not use sendmail.cf.

* Safety and robustness. Postfix is designed to behave rationally
  under stress. When the local system runs out of disk space or
  memory, the Postfix software backs off, instead of making the
  problem worse. By design, no Postfix program keeps growing as the
  number of messages etc. increases. Postfix is designed to stay in
  control.

* Flexibility. Postfix is built from over a dozen little programs that
  each perform only one specific task: receive a message via SMTP,
  deliver a message via SMTP, deliver a message locally, rewrite an
  address, and so on. Sites with specific requirements can replace one
  or more little programs by alternative versions.  And it is easy to
  disable functionality, too: firewalls and client workstations don't
  need local delivery at all.

* Security. Postfix uses multiple layers of defense to protect the
  local system against intruders. Almost every Postfix daemon can run
  in a chroot jail with fixed low privileges. There is no direct path
  from the network to the security-sensitive local delivery programs -
  an intruder has to break through several other programs
  first. Postfix does not even trust the contents of its own queue
  files, or the contents of its own IPC messages. Postfix avoids
  placing sender-provided information into shell environment
  variables. Last but not least, no Postfix program is set-uid.

       
Other significant features of interest

* Multiple transports. In the past the author has configured Sendmail
  systems that could relay between Internet, DECnet, X.400 and
  UUCP. Postfix is designed to be flexible enough that it can operate
  in such environments without requiring virtual domain or alias
  kludges. However, the initial release only talks SMTP, and has only
  limited support for UUCP.

* Virtual domains. In the most common case, adding support for a
  virtual domain requires change to only a single Postfix lookup
  table. Other mailers usually need multiple levels of aliasing or
  redirection to achieve the same result.

* UCE control. Postfix can restrict what hosts can relay their mail
  through a Postfix system, and supports restrictions on what mail is
  allowed to come in. Postfix implements the usual suspects:
  blacklists, RBL lookups, HELO/sender DNS lookups. Content filtering
  hasn't been implemented yet.

* Table lookups. Postfix does not yet implement an address rewriting
  language. Instead it makes extensive use of table lookups. Tables
  can be local dbm or db files, or networked NIS or NetInfo
  maps. Adding support for other lookup mechanisms is relatively easy.


Flavors

ipv6	Include support for IPv6
pcre	Include support for Perl-compatible regular expressions
sasl	Include support for authenticated SMTP using Cyrus SASL v1 (deprecated)
sasl2	Include support for authenticated SMTP using Cyrus SASL v2 (recommended)
tls	Include support for SMTP over SSL/TLS
ldap	Include support for doing table lookups using LDAP
mysql	Include support for doing table lookups using MySQL
@


1.8
log
@remove WWW lines
@
text
@d77 1
@


1.7
log
@remove WWW lines
@
text
@a82 3


WWW: ${HOMEPAGE}
@


1.6
log
@improve
@
text
@a85 1
WWW: ${TLSHOMEPAGE}
@


1.5
log
@add ref to Postfix/TLS webpage
@
text
@d77 6
a82 10
* pcre - Add support for Perl-compatible regular expressions.

* sasl - Add support for authenticated SMTP.

* tls - Add support for SSL/TLS using patches from
  ${TLSHOMEPAGE}.

* ldap - Add support for doing table lookups using LDAP.

* mysql - Add support for doing table lookups using MySQL.
d86 1
@


1.4
log
@document tls flavour
@
text
@d81 2
a82 1
* tls - Add support for TLS.
@


1.3
log
@add mysql flavour
@
text
@d81 2
d88 1
a88 3
More information

  ${HOMEPAGE}
@


1.2
log
@clean up and document flavours
@
text
@d83 2
@


1.1
log
@split port into stable and snapshot versions
@
text
@d1 1
a1 2
                 Postfix Overview - Goals and Features
     _________________________________________________________________
d3 45
a47 45
   The goal of the Postfix project is to implement a viable alternative
   to the UNIX Sendmail program. Specific goals, and the ways that
   Postfix attempts to achieve them are:

     * Wide dissemination. Postfix must be adopted by lots of people in
       order to make a significant impact on Internet mail performance
       and security. Therefore the software is given away for free, with
       no strings attached to it.

     * Performance. Postfix is up to three times as fast as its nearest
       competitor. A desktop PC running Postfix can receive and deliver a
       million different messages per day. Postfix uses web server tricks
       to reduce process creation overhead and uses other tricks to
       reduce file system overhead, without compromising reliability.

     * Compatibility. Postfix is designed to be sendmail-compatible to
       make migration easy. Postfix supports /var/mail,
       /etc/aliases, NIS, and ~/.forward files. However, Postfix also
       attempts to be easy to administer, and therefore it does not use
       sendmail.cf.

     * Safety and robustness. Postfix is designed to behave rationally
       under stress. When the local system runs out of disk space or
       memory, the Postfix software backs off, instead of making the
       problem worse. By design, no Postfix program keeps growing as the
       number of messages etc. increases. Postfix is designed to stay in
       control.

     * Flexibility. Postfix is built from over a dozen little programs
       that each perform only one specific task: receive a message via
       SMTP, deliver a message via SMTP, deliver a message locally,
       rewrite an address, and so on. Sites with specific requirements
       can replace one or more little programs by alternative versions.
       And it is easy to disable functionality, too: firewalls and client
       workstations don't need local delivery at all.

     * Security. Postfix uses multiple layers of defense to protect the
       local system against intruders. Almost every Postfix daemon can
       run in a chroot jail with fixed low privileges. There is no direct
       path from the network to the security-sensitive local delivery
       programs - an intruder has to break through several other programs
       first. Postfix does not even trust the contents of its own queue
       files, or the contents of its own IPC messages. Postfix avoids
       placing sender-provided information into shell environment
       variables. Last but not least, no Postfix program is set-uid.
d51 34
a84 24
     * Multiple transports. In the past the author has configured
       Sendmail systems that could relay between Internet, DECnet, X.400
       and UUCP. Postfix is designed to be flexible enough that it can
       operate in such environments without requiring virtual domain or
       alias kludges. However, the initial release only talks SMTP, and
       has only limited support for UUCP.

     * Virtual domains. In the most common case, adding support for a
       virtual domain requires change to only a single Postfix lookup
       table. Other mailers usually need multiple levels of aliasing or
       redirection to achieve the same result.

     * UCE control. Postfix can restrict what hosts can relay their
       mail through a Postfix system, and supports restrictions on what
       mail is allowed to come in. Postfix implements the usual suspects:
       blacklists, RBL lookups, HELO/sender DNS lookups. Content
       filtering hasn't been implemented yet.

     * Table lookups. Postfix does not yet implement an address
       rewriting language. Instead it makes extensive use of table
       lookups. Tables can be local dbm or db files, or networked NIS or
       NetInfo maps. Adding support for other lookup mechanisms is
       relatively easy.
     _________________________________________________________________
d86 1
a86 1
WWW: ${HOMEPAGE}
@

