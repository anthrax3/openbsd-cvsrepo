head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.20
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.18
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.14
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.16
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.12
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.10
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.8
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.6
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.4
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	ajacoutot_20120530:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2012.05.30.16.47.01;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.05.30.16.47.01;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

warning: format '%d' expects type 'int', but argument 3 has type 'size_t'

--- qpe.c.orig	Sun Nov 16 09:45:45 2008
+++ qpe.c	Wed May 30 15:24:00 2012
@@@@ -97,7 +97,7 @@@@ int qp_encode( char *out, size_t out_size, char *in, s
 				op+= strlen(paragraph);// +3; /** jump the output + =\r\n **/
 				out_remaining-= (strlen(paragraph)); // Was +3, updated to fix Outlook problems
 
-				QPD fprintf(stdout, "Soft break (%d + %d > 76 char) for '%s'\n", current_line_length, charout_size, paragraph);
+				QPD fprintf(stdout, "Soft break (%Zd + %d > 76 char) for '%s'\n", current_line_length, charout_size, paragraph);
 				
 				/** reinitialize the paragraph **/
 				paragraph[0] = '\0';
@@@@ -108,7 +108,7 @@@@ int qp_encode( char *out, size_t out_size, char *in, s
 			}
 
 			snprintf(pp, pp_remaining, "%s", charout);
-			QPD fprintf(stdout,"charout='%s', size=%d, pp_remain=%d result='%s'\n", charout, charout_size, pp_remaining, paragraph);
+			QPD fprintf(stdout,"charout='%s', size=%d, pp_remain=%Zd result='%s'\n", charout, charout_size, pp_remaining, paragraph);
 			pp += charout_size;
 			pp_remaining -= charout_size;
 			p++;
@@@@ -149,13 +149,13 @@@@ int qp_encode_from_file( char *fname )
 	out_size = in_size *3;
 	in_buffer = malloc( sizeof(char) *in_size +1);
 	if (in_buffer == NULL) {
-		QPD fprintf(stdout,"Error allocating %d bytes for input buffer\n", in_size);
+		QPD fprintf(stdout,"Error allocating %Zd bytes for input buffer\n", in_size);
 		return -1;
 	}
 
 	out_buffer = malloc( sizeof(char) *out_size *3 +1);
 	if (in_buffer == NULL) {
-		QPD fprintf(stdout,"Error allocating %d bytes for output buffer\n", out_size);
+		QPD fprintf(stdout,"Error allocating %Zd bytes for output buffer\n", out_size);
 		return -1;
 	}
 
@@@@ -169,7 +169,7 @@@@ int qp_encode_from_file( char *fname )
 	  ** we segfault ;)  **/
 	*(in_buffer +in_size) = '\0';
 
-	QPD fprintf(stdout,"file %s is loaded, size = %d\n", fname, in_size);
+	QPD fprintf(stdout,"file %s is loaded, size = %Zd\n", fname, in_size);
 
 	qp_encode( out_buffer, out_size, in_buffer, in_size );
 
@


1.1.1.1
log
@Import altermime-0.3.10.

alterMIME is a small program which is used to alter your mime-encoded
mailpacks as typically received by e.g. amavisd-new.
It can:
    * Insert disclaimers
    * Insert arbitary X-headers
    * Modify existing headers
    * Remove attachments based on filename or content-type
    * Replace attachments based on filename

ok jasper@@
@
text
@@
