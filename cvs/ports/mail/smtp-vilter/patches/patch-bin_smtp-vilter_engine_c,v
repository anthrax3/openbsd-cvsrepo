head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.14
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.12
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.8
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.10
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.6
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.2
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.5.0.14
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.12
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.10
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.6
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.6
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.4
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3;
locks; strict;
comment	@# @;


1.8
date	2014.01.23.15.45.18;	author jasper;	state Exp;
branches;
next	1.7;

1.7
date	2013.05.09.18.47.53;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2013.05.05.17.37.00;	author jasper;	state dead;
branches;
next	1.5;

1.5
date	2009.11.26.14.02.58;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2008.07.02.13.34.46;	author mbalmer;	state Exp;
branches;
next	1.3;

1.3
date	2007.02.04.12.05.12;	author mbalmer;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.22.09.24.41;	author mbalmer;	state dead;
branches;
next	1.1;

1.1
date	2006.09.18.13.18.56;	author mbalmer;	state Exp;
branches;
next	;


desc
@@


1.8
log
@revert to 1.3.6 as the update to 1.3.8 has been causing regressions
as noticed by henning@@ ; to be investigated.
@
text
@$OpenBSD: patch-bin_smtp-vilter_engine_c,v 1.5 2009/11/26 14:02:58 jasper Exp $
--- bin/smtp-vilter/engine.c.orig	Sun Jan 21 13:09:38 2007
+++ bin/smtp-vilter/engine.c	Fri Oct 23 09:41:28 2009
@@@@ -501,18 +501,62 @@@@ smtp_vilter_envfrom(SMFICTX *ctx, char **argv)
 		}
 	}
 
+	/* report authentication symbol values */
+	if (verbose >= 2)
+		warnx("SASL authentication parameters: {auth_type}=%s, "
+		    "{auth_authen}=%s, {auth_ssf}=%s, {auth_author}=%s",
+		    smfi_getsymval(ctx, "{auth_type}"),
+		    smfi_getsymval(ctx, "{auth_authen}"),
+		    smfi_getsymval(ctx, "{auth_ssf}"),
+		    smfi_getsymval(ctx, "{auth_author}"));
+
 	/* Write an artifical Received: from: Header to the message */
 	if (gethostname(hostname, sizeof(hostname))) {
 		syslog(LOG_ERR, "can't get local hostname");
 		strlcpy(hostname, "localhost", sizeof(hostname));
 	}
-	if (conn->clientaddr == NULL)
-		fprintf(msg->fp, "Received: from %s by %s\r\n", conn->hostname,
-		    hostname);
-	else
-		fprintf(msg->fp, "Received: from %s (%s) by %s\r\n",
-		    conn->heloname, conn->clientaddr, hostname);
+	if (verbose >= 2)
+		warnx("header_options = 0x%lx", header_options);
+	if (header_options == 0x0L) {
+		/* plain 'Received:' header (legacy behaviour) */
+		if (conn->clientaddr == NULL)
+			fprintf(msg->fp, "Received: from %s by %s\r\n",
+			    conn->hostname, hostname);
+		else
+			fprintf(msg->fp, "Received: from %s (%s) by %s\r\n",
+			    conn->heloname, conn->clientaddr, hostname);
+	}
 
+	if (header_options & 0x1L) {
+		/* include SASL auth info in 'Received:' header */
+		if (verbose >= 2)
+			warnx("including SASL auth info in header");
+		if (smfi_getsymval(ctx, "{auth_authen}") != NULL) {
+			/* SASL authenticated sender */
+			if (conn->clientaddr == NULL)
+				fprintf(msg->fp, "Received: from %s "
+				    "(Authenticated sender: %s) by %s\r\n",
+				    conn->hostname,
+				    smfi_getsymval(ctx, "{auth_authen}"),
+				    hostname);
+			else
+				fprintf(msg->fp, "Received: from %s (%s) "
+				    "(Authenticated sender: %s) by %s\r\n",
+				    conn->heloname,
+				    conn->clientaddr,
+				    smfi_getsymval(ctx, "{auth_authen}"),
+				    hostname);
+		} else {
+			/* non authenticated sender */
+			if (conn->clientaddr == NULL)
+				fprintf(msg->fp, "Received: from %s by %s\r\n",
+				    conn->hostname, hostname);
+			else
+				fprintf(msg->fp, "Received: from %s (%s) by %s\r\n",
+				    conn->heloname, conn->clientaddr, hostname);
+		}
+	}
+		
 	return SMFIS_CONTINUE;
 }
 
@@@@ -1764,6 +1808,8 @@@@ e_main(uid_t uid, gid_t gid, int pipe_m2e[2])
 	syslog(LOG_INFO, "dropped privileges, running as %d:%d", uid, gid);
 
 	/* Initialize sendmail milter */
+	bzero(&desc, sizeof(desc));
+
 	desc.xxfi_name = "smtp-vilter";
 	desc.xxfi_version = SMFI_VERSION;
 	desc.xxfi_flags = SMFIF_ADDHDRS | SMFIF_CHGHDRS;
@


1.7
log
@re-add function that got lost in the previous update; unbreaks ldap flavor.

spotted by sthen@@
@
text
@d1 6
a6 9
$OpenBSD$

Implement missing print_entries_with_values(), taken from smtp-vilter 1.3.6.

--- bin/smtp-vilter/engine.c.orig	Thu May  9 20:46:11 2013
+++ bin/smtp-vilter/engine.c	Thu May  9 20:46:35 2013
@@@@ -1371,6 +1371,37 @@@@ vilter_unwanted(struct backend *backend, SMFICTX *ctx,
 	return retval;
 }
d8 8
a15 9
+#ifdef ENABLE_LDAP
+static void
+print_entries_with_values(LDAP *ld, LDAPMessage *result)
+{
+	LDAPMessage	*e;
+	BerElement	*ber;
+	char		*dn, *attr;
+	char		**vals;
+	int		 i;
d17 50
a66 15
+	for (e = ldap_first_entry(ld, result); e != NULL;
+	    e = ldap_next_entry(ld, e)) {
+		if ((dn = ldap_get_dn(ld, e)) != NULL) {
+			if (verbose)
+				warnx("dn: %s", dn);
+			ldap_memfree(dn);
+		}
+		for (attr = ldap_first_attribute(ld, e, &ber); attr != NULL;
+		    attr = ldap_next_attribute(ld, e, ber)) {
+			if ((vals = ldap_get_values(ld, e, attr)) != NULL) {
+				for (i = 0; vals[i] != NULL; i++)
+					printf("%s: %s\n", attr, vals[i]);
+				ldap_value_free(vals);
+			}
+			ldap_memfree(attr);
a67 1
+		ber_free(ber, 0);
d69 9
a77 2
+}
+#endif
d79 3
a81 3
 static sfsistat
 vilter_eom(SMFICTX *ctx)
 {
@


1.6
log
@- update to smtp-vilter 1.3.8

prompted by marc balmer (upstream)
@
text
@d1 9
a9 6
$OpenBSD: patch-bin_smtp-vilter_engine_c,v 1.5 2009/11/26 14:02:58 jasper Exp $
--- bin/smtp-vilter/engine.c.orig	Sun Jan 21 13:09:38 2007
+++ bin/smtp-vilter/engine.c	Fri Oct 23 09:41:28 2009
@@@@ -501,18 +501,62 @@@@ smtp_vilter_envfrom(SMFICTX *ctx, char **argv)
 		}
 	}
d11 9
a19 8
+	/* report authentication symbol values */
+	if (verbose >= 2)
+		warnx("SASL authentication parameters: {auth_type}=%s, "
+		    "{auth_authen}=%s, {auth_ssf}=%s, {auth_author}=%s",
+		    smfi_getsymval(ctx, "{auth_type}"),
+		    smfi_getsymval(ctx, "{auth_authen}"),
+		    smfi_getsymval(ctx, "{auth_ssf}"),
+		    smfi_getsymval(ctx, "{auth_author}"));
d21 15
a35 50
 	/* Write an artifical Received: from: Header to the message */
 	if (gethostname(hostname, sizeof(hostname))) {
 		syslog(LOG_ERR, "can't get local hostname");
 		strlcpy(hostname, "localhost", sizeof(hostname));
 	}
-	if (conn->clientaddr == NULL)
-		fprintf(msg->fp, "Received: from %s by %s\r\n", conn->hostname,
-		    hostname);
-	else
-		fprintf(msg->fp, "Received: from %s (%s) by %s\r\n",
-		    conn->heloname, conn->clientaddr, hostname);
+	if (verbose >= 2)
+		warnx("header_options = 0x%lx", header_options);
+	if (header_options == 0x0L) {
+		/* plain 'Received:' header (legacy behaviour) */
+		if (conn->clientaddr == NULL)
+			fprintf(msg->fp, "Received: from %s by %s\r\n",
+			    conn->hostname, hostname);
+		else
+			fprintf(msg->fp, "Received: from %s (%s) by %s\r\n",
+			    conn->heloname, conn->clientaddr, hostname);
+	}
 
+	if (header_options & 0x1L) {
+		/* include SASL auth info in 'Received:' header */
+		if (verbose >= 2)
+			warnx("including SASL auth info in header");
+		if (smfi_getsymval(ctx, "{auth_authen}") != NULL) {
+			/* SASL authenticated sender */
+			if (conn->clientaddr == NULL)
+				fprintf(msg->fp, "Received: from %s "
+				    "(Authenticated sender: %s) by %s\r\n",
+				    conn->hostname,
+				    smfi_getsymval(ctx, "{auth_authen}"),
+				    hostname);
+			else
+				fprintf(msg->fp, "Received: from %s (%s) "
+				    "(Authenticated sender: %s) by %s\r\n",
+				    conn->heloname,
+				    conn->clientaddr,
+				    smfi_getsymval(ctx, "{auth_authen}"),
+				    hostname);
+		} else {
+			/* non authenticated sender */
+			if (conn->clientaddr == NULL)
+				fprintf(msg->fp, "Received: from %s by %s\r\n",
+				    conn->hostname, hostname);
+			else
+				fprintf(msg->fp, "Received: from %s (%s) by %s\r\n",
+				    conn->heloname, conn->clientaddr, hostname);
d37 1
d39 2
a40 9
+		
 	return SMFIS_CONTINUE;
 }
 
@@@@ -1764,6 +1808,8 @@@@ e_main(uid_t uid, gid_t gid, int pipe_m2e[2])
 	syslog(LOG_INFO, "dropped privileges, running as %d:%d", uid, gid);
 
 	/* Initialize sendmail milter */
+	bzero(&desc, sizeof(desc));
d42 3
a44 3
 	desc.xxfi_name = "smtp-vilter";
 	desc.xxfi_version = SMFI_VERSION;
 	desc.xxfi_flags = SMFIF_ADDHDRS | SMFIF_CHGHDRS;
@


1.5
log
@- add patches from "MARTIN" to pass sasl auth status to the spam backend
this will be integrated into the next upstream release.
@
text
@d1 1
a1 1
$OpenBSD: patch-bin_smtp-vilter_engine_c,v 1.4 2008/07/02 13:34:46 mbalmer Exp $
@


1.4
log
@Fix possible crash in attachment filter.
@
text
@d1 73
a73 4
$OpenBSD: patch-bin_smtp-vilter_engine_c,v 1.3 2007/02/04 12:05:12 mbalmer Exp $
--- bin/smtp-vilter/engine.c.orig	Sun Jan 21 14:09:38 2007
+++ bin/smtp-vilter/engine.c	Wed Jul  2 15:31:43 2008
@@@@ -1764,6 +1764,8 @@@@ e_main(uid_t uid, gid_t gid, int pipe_m2e[2])
@


1.3
log
@Make smtp-vilter work with sendmail-8.14.0.  The  smfiDesc_str was extended,
so make sure the new elements are initialized to sane values.
@
text
@d1 4
a4 4
$OpenBSD$
--- bin/smtp-vilter/engine.c.orig	Sun Feb  4 13:05:31 2007
+++ bin/smtp-vilter/engine.c	Sun Feb  4 13:05:48 2007
@@@@ -1764,6 +1764,8 @@@@ e_main(uid_t uid, gid_t gid, int pipe_m2
@


1.2
log
@smtp-vilter-1.3.3
@
text
@d1 5
a5 4
$OpenBSD: patch-bin_smtp-vilter_engine_c,v 1.1 2006/09/18 13:18:56 mbalmer Exp $
--- bin/smtp-vilter/engine.c.orig	Mon Sep 18 15:14:08 2006
+++ bin/smtp-vilter/engine.c	Mon Sep 18 15:15:54 2006
@@@@ -1639,8 +1639,6 @@@@ e_main(uid_t uid, gid_t gid, int pipe_m2
d7 6
a12 7
 	if (logfile != NULL && (logfp = fopen(logfile, "a")) == NULL)
 		err(1, "can't open logfile %s", logfile);
-	else
-		logfp = NULL;
 
 	if ((fp = fopen(pidfile, "w")) == NULL) 
 		err(1, "can't open pidfile %s", pidfile);
@


1.1
log
@Make extended logging work again.
@
text
@d1 1
a1 1
$OpenBSD$
@

