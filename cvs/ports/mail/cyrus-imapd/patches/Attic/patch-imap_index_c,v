head	1.2;
access;
symbols
	OPENBSD_5_8:1.2.0.2
	OPENBSD_3_9:1.1.1.1.0.4
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.2
	OPENBSD_3_8_BASE:1.1.1.1
	alek_20050327:1.1.1.1
	alek:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2006.04.08.20.46.20;	author sturm;	state dead;
branches
	1.2.2.1;
next	1.1;

1.1
date	2005.03.27.18.01.50;	author alek;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.03.27.18.01.50;	author alek;	state Exp;
branches;
next	;

1.2.2.1
date	2015.12.02.09.57.48;	author ajacoutot;	state Exp;
branches;
next	;
commitid	sfVW7bpLkbGpHzBz;


desc
@@


1.2
log
@update to cyrus-imapd 2.2.13

from maintainer Antoine Jacoutot <ajacoutot at lphp.org>
@
text
@$OpenBSD: patch-imap_index_c,v 1.1 2005/03/27 18:01:50 alek Exp $
--- imap/index.c.orig	Sat Jan 22 02:44:35 2005
+++ imap/index.c	Sat Jan 22 03:10:14 2005
@@@@ -207,8 +207,13 @@@@ void index_closemailbox(struct mailbox *
 	seendb = 0;
     }
     if (index_len) {
+/*
+	Always after index_closemailbox() goes mailbox_close()
+	that frees the same memory area.
+
 	map_free(&index_base, &index_len);
 	map_free(&cache_base, &cache_len);
+ */
 	index_len = cache_end = 0;
     }
 }
@


1.2.2.1
log
@CVE-2015-8077, CVE-2015-8078: protect against integer overflow in urlfetch
range checks.
@
text
@d1 5
a5 32
$OpenBSD$

CVE-2015-8077, CVE-2015-8078: protect against integer overflow in urlfetch
range checks
d010f771c19ffb2f1dfc63e3128f5a719942f221
38297f8d23b9592cfd927a10bb8c3d6ff4f366e9

--- imap/index.c.orig	Mon Jul  6 02:41:23 2015
+++ imap/index.c	Wed Dec  2 10:54:14 2015
@@@@ -3224,7 +3224,8 @@@@ EXPORTED int index_urlfetch(struct index_state *state,
     int fetchmime = 0, domain = DOMAIN_7BIT;
     size_t size;
     int32_t skip = 0;
-    int n, r = 0;
+    unsigned long n;
+    int r = 0;
     char *decbuf = NULL;
     struct mailbox *mailbox = state->mailbox;
     struct index_record record;
@@@@ -3323,7 +3324,8 @@@@ EXPORTED int index_urlfetch(struct index_state *state,
         size_t section_offset = CACHE_ITEM_BIT32(cacheitem);
         size_t section_size = CACHE_ITEM_BIT32(cacheitem + CACHE_ITEM_SIZE_SKIP);
 
-        if (section_offset + section_size > size) {
+        if (section_offset + section_size < section_offset
+            || section_offset + section_size > size) {
             r = IMAP_INTERNAL;
             goto done;
         }
@@@@ -3366,7 +3368,7 @@@@ EXPORTED int index_urlfetch(struct index_state *state,
         start_octet = size;
         n = 0;
d7 9
a15 3
-    else if (start_octet + n > size) {
+    else if (start_octet + n < start_octet || start_octet + n > size) {
         n = size - start_octet;
d17 1
a17 14
 
@@@@ -3378,10 +3380,10 @@@@ EXPORTED int index_urlfetch(struct index_state *state,
 
 	if (domain == DOMAIN_BINARY) {
 	    /* Write size of literal8 */
-	    prot_printf(pout, " ~{%u}\r\n", n);
+            prot_printf(pout, " ~{%lu}\r\n", n);
 	} else {
 	    /* Write size of literal */
-	    prot_printf(pout, " {%u}\r\n", n);
+            prot_printf(pout, " {%lu}\r\n", n);
 	}
     }
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import cyrus-imapd 2.2.12

The Cyrus IMAP server differs from other IMAP server implementations in
that it is generally intended to be run on sealed servers, where normal
users are not permitted to log in. The mailbox database is stored in
parts of the filesystem that are private to the Cyrus IMAP system. All
user access to mail is through the IMAP, POP3, or KPOP protocols.

From Antoine Jacoutot <ajacoutot@@lphp.org>

help & ok naddy@@, thanks!
@
text
@@
