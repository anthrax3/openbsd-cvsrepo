head	1.6;
access;
symbols
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	marc_1998-apr-25:1.1.1.1
	marc:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2001.02.19.15.00.51;	author danh;	state dead;
branches;
next	1.5;

1.5
date	2000.12.25.06.37.18;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.12.18.43.40;	author form;	state Exp;
branches;
next	1.3;

1.3
date	98.10.05.01.41.16;	author form;	state Exp;
branches;
next	1.2;

1.2
date	98.06.30.05.54.53;	author form;	state Exp;
branches;
next	1.1;

1.1
date	98.04.26.04.48.28;	author marc;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.04.26.04.48.28;	author marc;	state Exp;
branches;
next	;


desc
@@


1.6
log
@- bump NEED_VERSION.
- update IPv6 patch from Kame (20010128).
- add no_ipv6 flavor so there is an option to run without inetd.
@
text
@--- authenticate.c.orig	Mon Dec 25 01:20:36 2000
+++ authenticate.c	Mon Dec 25 01:25:08 2000
@@@@ -28,7 +28,7 @@@@
 #else
 #include "config.h"
 
-#define _XOPEN_SOURCE
+/* #define _XOPEN_SOURCE */
 
 #include <sys/types.h>
 #include <unistd.h>
@@@@ -50,7 +50,7 @@@@
 #define VIRTUALUSER	"vpop"
 
 #ifndef MAILSPOOLDIR
-#define MAILSPOOLDIR	"/var/spool/mail/"	     /* watch the trailing / */
+#define MAILSPOOLDIR	"/var/mail/"	     /* watch the trailing / */
 #endif
 #ifndef MAILSPOOLHASH
 #define MAILSPOOLHASH	0      /* 2 would deliver to /var/spool/mail/b/a/bar */
@@@@ -100,6 +100,7 @@@@
   struct sockaddr_in sockname;
 #endif
   int namelen=sizeof sockname;const char*retval="";
+  void *p;
   if(!getsockname(sock,(struct sockaddr*)&sockname,&namelen))
    {
 #ifdef INET6
@@@@ -115,16 +116,17 @@@@
 	retval=hent->h_name;
 #endif
    }
-  if(auth_logname=			   /* memory leak when out of memory */
-   realloc(auth_logname,(namelen=strlen(retval))+1+strlen(user)+1))
-   { strcpy(auth_logname,retval)[namelen]='/';
+  if(p=realloc(auth_logname,(namelen=strlen(retval))+1+strlen(user)+1))
+   { auth_logname=p;
+     strcpy(auth_logname,retval)[namelen]='/';
      strcpy(auth_logname+namelen+1,user);
-   }
+   } else { free(auth_logname); auth_logname=NULL; }
 }
 
 static const struct passwd*cgetpwnam(user,sock)const char*user;
  const int sock;
 {
+  void *p;
 #ifdef VIRTUALSERVER
   DB_ENV dbenv;DB*db;
   memset(&dbenv,0,sizeof dbenv);
@@@@ -155,14 +157,18 @@@@
 novirt:	      strcpy(auth_logname,user);
 	 }
 	db->close(db,0);
-      }					   /* memory leak when out of memory */
-     else if(auth_logname=realloc(auth_logname,strlen(user)+1))
-	strcpy(auth_logname,user);			 /* DB doesn't exist */
+      }
+     else if(p=realloc(auth_logname,strlen(user)+1))
+      { auth_logname=p;
+        strcpy(auth_logname,user);			 /* DB doesn't exist */
+      } else { free(auth_logname); auth_logname=NULL; }
      db_appexit(&dbenv);
    }
   else						     /* DB subsystem problem */
-   { if(auth_logname=realloc(auth_logname,strlen(user)+1))
-	strcpy(auth_logname,user);
+   { if(p=realloc(auth_logname,strlen(user)+1))
+	 { auth_logname=p;
+	   strcpy(auth_logname,user);
+	 } else { free(auth_logname); auth_logname=NULL; }
    }
 #endif
   return getpwnam(user);	       /* this should be selfexplanatory :-) */
@


1.5
log
@add KAME IPv6 patch
@
text
@@


1.4
log
@Fix: compilation failure under OpenBSD with IPv6/KAME
@
text
@d1 3
a3 3
--- authenticate.c.orig	Wed May 13 23:57:39 1998
+++ authenticate.c	Thu Jan 13 00:26:51 2000
@@@@ -22,7 +22,7 @@@@
d12 1
a12 1
@@@@ -44,7 +44,7 @@@@
d21 4
a24 4
@@@@ -82,6 +82,7 @@@@
 
 static void getlogname(user,sock)const char*user;const int sock;
 { struct sockaddr_in sockname;int namelen=sizeof sockname;const char*retval="";
d27 3
a29 4
    { const struct hostent*hent=
       gethostbyaddr((void*)&sockname.sin_addr.s_addr,sizeof sockname.sin_addr,
@@@@ -89,16 +90,17 @@@@
      if(hent)
d31 1
d51 1
a51 1
@@@@ -129,14 +131,18 @@@@
@


1.3
log
@fix realloc() usage to avoid memory leak
@
text
@d1 74
a74 100
*** authenticate.c.orig	Wed May 13 23:57:39 1998
--- authenticate.c	Fri Oct  2 09:44:25 1998
***************
*** 44,50 ****
  #define VIRTUALUSER	"vpop"
  
  #ifndef MAILSPOOLDIR
! #define MAILSPOOLDIR	"/var/spool/mail/"	     /* watch the trailing / */
  #endif
  #ifndef MAILSPOOLHASH
  #define MAILSPOOLHASH	0      /* 2 would deliver to /var/spool/mail/b/a/bar */
--- 44,50 ----
  #define VIRTUALUSER	"vpop"
  
  #ifndef MAILSPOOLDIR
! #define MAILSPOOLDIR	"/var/mail/"	     /* watch the trailing / */
  #endif
  #ifndef MAILSPOOLHASH
  #define MAILSPOOLHASH	0      /* 2 would deliver to /var/spool/mail/b/a/bar */
***************
*** 82,87 ****
--- 82,88 ----
  
  static void getlogname(user,sock)const char*user;const int sock;
  { struct sockaddr_in sockname;int namelen=sizeof sockname;const char*retval="";
+   void *p;
    if(!getsockname(sock,(struct sockaddr*)&sockname,&namelen))
     { const struct hostent*hent=
        gethostbyaddr((void*)&sockname.sin_addr.s_addr,sizeof sockname.sin_addr,
***************
*** 89,104 ****
       if(hent)
  	retval=hent->h_name;
     }
!   if(auth_logname=			   /* memory leak when out of memory */
!    realloc(auth_logname,(namelen=strlen(retval))+1+strlen(user)+1))
!    { strcpy(auth_logname,retval)[namelen]='/';
       strcpy(auth_logname+namelen+1,user);
!    }
  }
  
  static const struct passwd*cgetpwnam(user,sock)const char*user;
   const int sock;
  {
  #ifdef VIRTUALSERVER
    DB_ENV dbenv;DB*db;
    memset(&dbenv,0,sizeof dbenv);
--- 90,106 ----
       if(hent)
  	retval=hent->h_name;
     }
!   if(p=realloc(auth_logname,(namelen=strlen(retval))+1+strlen(user)+1))
!    { auth_logname=p;
!      strcpy(auth_logname,retval)[namelen]='/';
       strcpy(auth_logname+namelen+1,user);
!    } else { free(auth_logname); auth_logname=NULL; }
  }
  
  static const struct passwd*cgetpwnam(user,sock)const char*user;
   const int sock;
  {
+   void *p;
  #ifdef VIRTUALSERVER
    DB_ENV dbenv;DB*db;
    memset(&dbenv,0,sizeof dbenv);
***************
*** 129,142 ****
  novirt:	      strcpy(auth_logname,user);
  	 }
  	db->close(db,0);
!       }					   /* memory leak when out of memory */
!      else if(auth_logname=realloc(auth_logname,strlen(user)+1))
! 	strcpy(auth_logname,user);			 /* DB doesn't exist */
       db_appexit(&dbenv);
     }
    else						     /* DB subsystem problem */
!    { if(auth_logname=realloc(auth_logname,strlen(user)+1))
! 	strcpy(auth_logname,user);
     }
  #endif
    return getpwnam(user);	       /* this should be selfexplanatory :-) */
--- 131,148 ----
  novirt:	      strcpy(auth_logname,user);
  	 }
  	db->close(db,0);
!       }
!      else if(p=realloc(auth_logname,strlen(user)+1))
!       { auth_logname=p;
!         strcpy(auth_logname,user);			 /* DB doesn't exist */
!       } else { free(auth_logname); auth_logname=NULL; }
       db_appexit(&dbenv);
     }
    else						     /* DB subsystem problem */
!    { if(p=realloc(auth_logname,strlen(user)+1))
! 	 { auth_logname=p;
! 	   strcpy(auth_logname,user);
! 	 } else { free(auth_logname); auth_logname=NULL; }
     }
  #endif
    return getpwnam(user);	       /* this should be selfexplanatory :-) */
@


1.2
log
@update to 1.31
@
text
@d1 2
a2 2
*** authenticate.c.orig	Tue Jun 30 12:02:42 1998
--- authenticate.c	Tue Jun 30 12:04:50 1998
d20 81
@


1.1
log
@Initial revision
@
text
@d1 19
a19 64
--- cucipop.8.orig	Fri Aug  1 05:05:59 1997
+++ cucipop.8	Tue Oct  7 11:18:59 1997
@@@@ -48,12 +48,12 @@@@
 .SH NAME
 cucipop \- Cubic Circle POP3 daemon
 .SH SYNOPSIS
-.B /usr/sbin/cucipop
+.B !!PREFIX!!/libexec/cucipop
 .RB [ \-qaYdPUSDAT ]
 .RB [ "\-E \fIage\fP" ]
 .RB [ "\-p \fIport\fP" ]
 .br
-.B /usr/sbin/cucipop
+.B !!PREFIX!!/libexec/cucipop
 .B \-v
 .ad
 .SH DESCRIPTION
@@@@ -132,12 +132,12 @@@@
 .IR port .
 .SH EXAMPLES
 Typically
-.I pop-3
+.I pop3
 service is defined in
 .BR services (5)
 as follows:
 .Sx 1
-pop-3           110/tcp
+pop3            110/tcp
 .Ex
 In order to start cucipop from within
 .BR inetd (8),
@@@@ -145,26 +145,26 @@@@
 .BR inetd.conf (5)
 would be suitable:
 .Sx 1
-pop-3   stream  tcp     nowait  root    /usr/sbin/cucipop cucipop -Y
+pop3    stream  tcp     nowait  root    !!PREFIX!!/libexec/cucipop cucipop -Y
 .Ex
 If your site gets many hits from popclients, it would be preferable
 to start cucipop standalone as in:
 .Sx 1
-/usr/sbin/cucipop -Y
+!!PREFIX!!/libexec/cucipop -Y
 .Ex
 Your typical BOFH setting would be:
 .Sx 1
-/usr/sbin/cucipop -YaSE 6w
+!!PREFIX!!/libexec/cucipop -YaSE 6w
 .Ex
 .SH FILES
 .TP 2.3i
 .B /etc/passwd
 for the default authentication method
 .TP
-.B /var/spool/mail/$LOGNAME
+.B /var/mail/$LOGNAME
 system mailbox
 .TP
-.B /var/spool/mail/$LOGNAME.lock
+.B /var/mail/$LOGNAME.lock
 lockfile for the system mailbox
 .TP
 .B _????`hostname`
@


1.1.1.1
log
@Cubic Circle's POP3 daemon (fully RFC1939 compliant).
Port from Oleg Safiullin (form@@vs.itam.nsc.ru)
@
text
@@
