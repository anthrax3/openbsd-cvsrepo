head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.64
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.60
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.62
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.58
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.56
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.54
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.52
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.50
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.48
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.46
	OPENBSD_5_0:1.1.0.44
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.42
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.40
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.38
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.36
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.34
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.32
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.30
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.28
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.26
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.24
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.22
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.20
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.18
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.16
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.14
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.12
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.10
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.8
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.6
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2001.02.19.15.00.55;	author danh;	state Exp;
branches;
next	;


desc
@@


1.1
log
@- bump NEED_VERSION.
- update IPv6 patch from Kame (20010128).
- add no_ipv6 flavor so there is an option to run without inetd.
@
text
@$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
--- authenticate.c.orig	Tue Jan 30 12:43:55 2001
+++ authenticate.c	Tue Jan 30 12:43:55 2001
@@@@ -28,7 +28,7 @@@@ static /*const*/char rcsid[]=
 #else
 #include "config.h"
 
-#define _XOPEN_SOURCE
+/* #define _XOPEN_SOURCE */
 
 #include <sys/types.h>
 #include <unistd.h>
@@@@ -50,7 +50,7 @@@@ static /*const*/char rcsid[]=
 #define VIRTUALUSER	"vpop"
 
 #ifndef MAILSPOOLDIR
-#define MAILSPOOLDIR	"/var/spool/mail/"	     /* watch the trailing / */
+#define MAILSPOOLDIR	"/var/mail/"	     /* watch the trailing / */
 #endif
 #ifndef MAILSPOOLHASH
 #define MAILSPOOLHASH	0      /* 2 would deliver to /var/spool/mail/b/a/bar */
@@@@ -100,6 +100,7 @@@@ static void getlogname(user,sock)const c
   struct sockaddr_in sockname;
 #endif
   int namelen=sizeof sockname;const char*retval="";
+  void *p;
   if(!getsockname(sock,(struct sockaddr*)&sockname,&namelen))
    {
 #ifdef INET6
@@@@ -115,16 +116,17 @@@@ static void getlogname(user,sock)const c
 	retval=hent->h_name;
 #endif
    }
-  if(auth_logname=			   /* memory leak when out of memory */
-   realloc(auth_logname,(namelen=strlen(retval))+1+strlen(user)+1))
-   { strcpy(auth_logname,retval)[namelen]='/';
+  if(p=realloc(auth_logname,(namelen=strlen(retval))+1+strlen(user)+1))
+   { auth_logname=p;
+     strcpy(auth_logname,retval)[namelen]='/';
      strcpy(auth_logname+namelen+1,user);
-   }
+   } else { free(auth_logname); auth_logname=NULL; }
 }
 
 static const struct passwd*cgetpwnam(user,sock)const char*user;
  const int sock;
 {
+  void *p;
 #ifdef VIRTUALSERVER
   DB_ENV dbenv;DB*db;
   memset(&dbenv,0,sizeof dbenv);
@@@@ -155,14 +157,18 @@@@ freesec:       { free(authi.usersecret);
 novirt:	      strcpy(auth_logname,user);
 	 }
 	db->close(db,0);
-      }					   /* memory leak when out of memory */
-     else if(auth_logname=realloc(auth_logname,strlen(user)+1))
-	strcpy(auth_logname,user);			 /* DB doesn't exist */
+      }
+     else if(p=realloc(auth_logname,strlen(user)+1))
+      { auth_logname=p;
+        strcpy(auth_logname,user);			 /* DB doesn't exist */
+      } else { free(auth_logname); auth_logname=NULL; }
      db_appexit(&dbenv);
    }
   else						     /* DB subsystem problem */
-   { if(auth_logname=realloc(auth_logname,strlen(user)+1))
-	strcpy(auth_logname,user);
+   { if(p=realloc(auth_logname,strlen(user)+1))
+	 { auth_logname=p;
+	   strcpy(auth_logname,user);
+	 } else { free(auth_logname); auth_logname=NULL; }
    }
 #endif
   return getpwnam(user);	       /* this should be selfexplanatory :-) */
@
