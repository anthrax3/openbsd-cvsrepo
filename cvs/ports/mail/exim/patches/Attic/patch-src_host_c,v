head	1.1;
access;
symbols
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_6:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2005.01.27.06.34.10;	author sturm;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2005.01.27.06.34.10;	author sturm;	state Exp;
branches;
next	;

1.1.4.1
date	2005.01.27.06.35.40;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-src_host_c was initially added on branch OPENBSD_3_6.
@
text
@@


1.1.4.1
log
@http://www.vuxml.org/openbsd/29a17ee2-6fd9-11d9-a77b-080020f8e4df.html
(CAN-2005-0022 does not apply)

patches borrowed from FreeBSD, ok brad@@
@
text
@a0 23
$OpenBSD$
--- src/host.c.orig	2005-01-26 21:53:04.000000000 +0100
+++ src/host.c	2005-01-26 21:54:26.000000000 +0100
@@@@ -620,12 +620,18 @@@@ if (strchr(address, ':') != NULL)
 
   if (*p == ':') p++;
 
-  /* Split the address into components separated by colons. */
+  /* Split the address into components separated by colons. The input address 
+  is supposed to be checked for syntax. There was a case where this was 
+  overlooked; to guard against that happening again, check here and crash if 
+  there is a violation. */
 
   while (*p != 0)
     {
     int len = strcspn(p, ":");
     if (len == 0) nulloffset = ci;
+    if (ci > 7) log_write(0, LOG_MAIN|LOG_PANIC_DIE,
+      "Internal error: invalid IPv6 address \"%s\" passed to host_aton()",
+      address);
     component[ci++] = p;
     p += len;
     if (*p == ':') p++;
@


1.1.2.1
log
@http://www.vuxml.org/openbsd/29a17ee2-6fd9-11d9-a77b-080020f8e4df.html

patches borrowed from FreeBSD, ok brad@@
@
text
@a0 23
$OpenBSD$
--- src/host.c.orig	Thu Jul 22 10:46:52 2004
+++ src/host.c	Wed Jan 26 21:40:52 2005
@@@@ -710,12 +710,18 @@@@ if (Ustrchr(address, ':') != NULL)
 
   if (*p == ':') p++;
 
-  /* Split the address into components separated by colons. */
+  /* Split the address into components separated by colons. The input address 
+  is supposed to be checked for syntax. There was a case where this was 
+  overlooked; to guard against that happening again, check here and crash if 
+  there is a violation. */
 
   while (*p != 0)
     {
     int len = Ustrcspn(p, ":");
     if (len == 0) nulloffset = ci;
+    if (ci > 7) log_write(0, LOG_MAIN|LOG_PANIC_DIE, 
+      "Internal error: invalid IPv6 address \"%s\" passed to host_aton()",
+      address);  
     component[ci++] = p;
     p += len;
     if (*p == ':') p++;
@

