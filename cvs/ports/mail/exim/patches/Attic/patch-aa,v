head	1.6;
access;
symbols
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	joey_1_1:1.1.1.1
	joey_1:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2000.08.02.15.44.12;	author naddy;	state dead;
branches;
next	1.5;

1.5
date	2000.06.04.22.42.06;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.22.12.30.52;	author peter;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2000.01.13.20.15.04;	author peter;	state dead;
branches;
next	1.2;

1.2
date	99.03.31.22.39.45;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	97.11.15.00.04.38;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.11.15.00.04.38;	author deraadt;	state Exp;
branches;
next	;

1.4.2.1
date	2000.09.15.05.01.21;	author marc;	state dead;
branches;
next	;


desc
@@


1.6
log
@- add no_x11 flavor
- make build respect CC and CFLAGS
- add HOMEPAGE
- move example configuration to ${PREFIX}/share/examples/
- add RCS IDs
ok peter@@
@
text
@--- src/transports/appendfile.c.orig	Wed Apr 12 11:44:59 2000
+++ src/transports/appendfile.c	Mon Jun  5 00:14:52 2000
@@@@ -2330,9 +2330,16 @@@@ opened, so that it goes away on closure.
 #ifdef SUPPORT_MBX
 if (yield == OK && ob->mbx_format)
   {
+#if OpenBSD
+  char tempbuf[] = "/tmp/exim.XXXXXXXXXX";
+
+  tempname = tempbuf;
+  if ((temp_fd = mkstemp(tempname)) == -1 || unlink(tempname) < 0)
+#else
   tempname = tmpnam(NULL);
   if ((temp_fd = open(tempname, (O_RDWR|O_CREAT|O_TRUNC), 0600)) < 0 ||
       unlink(tempname) < 0)
+#endif
     {
     addr->basic_errno = errno;
     addr->message = string_sprintf("while setting up temporary file %s",
@


1.5
log
@Fake, slightly non-trivial, as this involves fixing up the packaging.
@
text
@@


1.4
log
@update to exim 3.14, ok turan

* bug fixes and new features release
* fix a tempnam() usage in the patch

No fake or flavours support - this may get done if I learn enough,
quickly enough. Will not build as a real package just now. Working on
it.
@
text
@d1 3
a3 3
--- src/transports/appendfile.c.orig	Sat Apr 22 12:20:32 2000
+++ src/transports/appendfile.c	Sat Apr 22 13:20:23 2000
@@@@ -2330,9 +2330,16 @@@@
@


1.4.2.1
log
@bring mail as of cut-over date into 2.7 branch
@
text
@@


1.3
log
@Update exim to version 3.12

* Version 2.12 is no longer available on the primary or mirror sites

o The configuration file format has changed. For those upgrading,
  please see the documentation and consider using the upgrade script to
  help automate the config files change. This upgrade script is built as
  part of the source, but *not* installed - as it should only be needed
  once.

o The X11 eximon program will be built with this port/package - this
  assumes that X is installed. Would someone with more ports
  experience consider helping me here and writing the right kind of
  Makefile check to see if files/eximon.conf should be copied to the
  build directories.

o Perl support is included as standard as is support for additional
  mail delivery formats. These are not the default in vanilla exim 3.12

o Finally, another plea for help. This port does not make as usuable
  package, as I could not get support for the creation of a config file
  working. I intend to look at this further, but as the old version was
  completely useless, I felt it was better to get this in the tree
  sooner rather than later.
@
text
@d1 19
a19 25
--- scripts/exim_install.orig	Fri Feb 26 15:55:44 1999
+++ scripts/exim_install	Fri Feb 26 15:56:58 1999
@@@@ -226,19 +226,19 @@@@
   echo $com Info installation directory is ${INFO_DIRECTORY}
   echo $com ""
 
-  makeinfo --no-split --output exim_overview.info ../doc/oview.texinfo
+  makeinfo --force --no-split --output exim_overview.info ../doc/oview.texinfo
   echo ${CP} exim_overview.info ${INFO_DIRECTORY}
   ${real} ${CP} exim_overview.info ${INFO_DIRECTORY}
   install-info --section="Exim" \
       --entry "* Overview: (exim_overview).    Overview of the Exim system" \
       ${INFO_DIRECTORY}/exim_overview.info ${INFO_DIRECTORY}/dir
-  makeinfo --no-split --output exim.info ../doc/spec.texinfo
+  makeinfo --force --no-split --output exim.info ../doc/spec.texinfo
   echo ${CP} exim.info ${INFO_DIRECTORY}
   ${real} ${CP} exim.info ${INFO_DIRECTORY}
   install-info --section="Exim" \
       --entry "* User guide: (exim).           Exim manual" \
       ${INFO_DIRECTORY}/exim.info ${INFO_DIRECTORY}/dir
-  makeinfo --no-split --output exim_filter.info ../doc/filter.texinfo
+  makeinfo --force --no-split --output exim_filter.info ../doc/filter.texinfo
   echo ${CP} exim_filter.info ${INFO_DIRECTORY}
   ${real} ${CP} exim_filter.info ${INFO_DIRECTORY}
   install-info --section="Exim" \
@


1.2
log
@update to exim-2.12; peter.galbavy@@knowledge.com
@
text
@@


1.1
log
@Initial revision
@
text
@d1 25
a25 93
--- scripts/exim_install.orig	Tue Sep  9 15:07:22 1997
+++ scripts/exim_install	Mon Sep 22 15:22:15 1997
@@@@ -8,6 +8,8 @@@@
 # This script also installs a default configuration file in CONFIGURE_FILE
 # if there is no configuration file there.
 
+# This script also installs a .info file in INFO_DIRECTORY if required.
+
 # The script can be made to output what it would do, without actually doing
 # anything, by giving it the option "-n" (cf make). Arguments are the names
 # of things to install. No arguments installs everything.
@@@@ -65,10 +67,12 @@@@
 fi
 
 BIN_DIRECTORY=`grep "^ *BIN_DIRECTORY=" $files | tail -1 | cut -f2-99 -d: | cut -c15-99`
+INFO_DIRECTORY=`grep "^ *INFO_DIRECTORY=" $files | tail -1 | cut -f2-99 -d: | cut -c16-99`
 CONFIGURE_FILE=`grep "^ *CONFIGURE_FILE=" $files | tail -1 | cut -f2-99 -d: | cut -c16-99`
 
 # Allow INST_xx to over-ride xx
 case "$INST_BIN_DIRECTORY" in ?*) BIN_DIRECTORY="$INST_BIN_DIRECTORY";; esac
+case "$INST_INFO_DIRECTORY" in ?*) INFO_DIRECTORY="$INST_INFO_DIRECTORY";; esac
 case "$INST_CONFIGURE_FILE" in ?*) CONFIGURE_FILE="$INST_CONFIGURE_FILE";; esac
 case "$INST_CP" in '') CP=cp;; *) CP="$INST_CP";; esac
 case "$INST_MV" in '') MV=mv;; *) MV="$INST_MV";; esac
@@@@ -76,6 +80,7 @@@@
 
 # Allow the user to over-ride xx
 case "$inst_dest" in ?*) BIN_DIRECTORY="$inst_dest";; esac
+case "$inst_info" in ?*) INFO_DIRECTORY="$inst_info";; esac
 case "$inst_conf" in ?*) CONFIGURE_FILE="$inst_conf";; esac
 case "$inst_cp"   in ?*) CP="$inst_cp";; esac
 case "$inst_mv"   in ?*) MV="$inst_mv";; esac
@@@@ -101,6 +106,20 @@@@
   fi
 fi
 
+# If info directory doesn't exist, try to create it
+
+if [ ! -d ${INFO_DIRECTORY} ]; then
+  echo mkdir -p ${INFO_DIRECTORY}
+  ${real} mkdir -p ${INFO_DIRECTORY}
+  if [ $? -ne 0 ]; then
+    echo $com ""
+    echo $com "**** Exim installation ${ver}failed ****"
+    exit 1
+  else
+    echo $com ${INFO_DIRECTORY} created
+  fi
+fi              
+
 # If no arguments, install everything
 
 if [ $# -gt 0 ]; then
@@@@ -167,12 +186,39 @@@@
   fi
 done
 
+echo $com ""
+echo $com Installation directory is ${INFO_DIRECTORY}
+echo $com ""
+
+if [ -f ../doc/spec.texinfo ]; then
+    makeinfo --no-split --output exim_overview.info ../doc/oview.texinfo
+    echo ${CP} exim_overview.info ${INFO_DIRECTORY}
+    ${real} ${CP} exim_overview.info ${INFO_DIRECTORY}
+    install-info --section="EXIM" \
+        --entry "* Overview: (exim_overview).    Overview of the EXIM system" \
+        ${INFO_DIRECTORY}/exim_overview.info ${INFO_DIRECTORY}/dir
+    makeinfo --no-split --output exim.info ../doc/spec.texinfo
+    echo ${CP} exim.info ${INFO_DIRECTORY}
+    ${real} ${CP} exim.info ${INFO_DIRECTORY}
+    install-info --section="EXIM" \
+        --entry "* User guide: (exim).           Exim manual" \
+        ${INFO_DIRECTORY}/exim.info ${INFO_DIRECTORY}/dir
+    makeinfo --no-split --output exim_filter.info ../doc/filter.texinfo
+    echo ${CP} exim_filter.info ${INFO_DIRECTORY}
+    ${real} ${CP} exim_filter.info ${INFO_DIRECTORY}
+    install-info --section="EXIM" \
+        --entry "* Filtering: (exim_filter).     Filtering mail with EXIM" \
+        ${INFO_DIRECTORY}/exim_filter.info ${INFO_DIRECTORY}/dir
+fi
+
 # If there is no configuration file, install the default,
 # building the lib directory if necessary.
 
 echo $com ""
 
 if [ ! -f ${CONFIGURE_FILE} ]; then
+  echo mkdir -p `dirname ${CONFIGURE_FILE}`
+  ${real} mkdir -p `dirname ${CONFIGURE_FILE}`
   echo $com Installing default configuration in ${CONFIGURE_FILE}
   echo $com because there is no existing configuration file.
   echo ${CP} ../src/configure.default ${CONFIGURE_FILE}
@


1.1.1.1
log
@initial ports subsystem from joey
@
text
@@
