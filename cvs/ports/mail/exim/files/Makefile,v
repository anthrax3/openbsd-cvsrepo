head	1.18;
access;
symbols
	OPENBSD_6_0:1.17.0.10
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.6
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.8
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.4
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.2
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.16.0.2
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.15.0.8
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.6
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.4
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.2
	OPENBSD_5_0:1.14.0.2
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.16
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.14
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.12
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.10
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.8
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.6
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.4
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.2
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.10.0.6
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.4
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.2
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.9.0.12
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.10
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.9.0.8
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.6
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.4
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_TRACKING_SWITCH:1.9
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	joey_1_1:1.1.1.1
	joey_1:1.1.1;
locks; strict;
comment	@# @;


1.18
date	2016.12.24.16.02.10;	author sthen;	state Exp;
branches;
next	1.17;
commitid	HMsLGgDLBhD8fPVt;

1.17
date	2014.03.24.17.39.35;	author sthen;	state Exp;
branches;
next	1.16;

1.16
date	2013.08.24.09.22.25;	author sthen;	state Exp;
branches;
next	1.15;

1.15
date	2011.10.19.23.06.57;	author fkr;	state Exp;
branches;
next	1.14;

1.14
date	2011.05.09.14.56.56;	author fkr;	state Exp;
branches;
next	1.13;

1.13
date	2011.01.12.05.45.29;	author fkr;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2009.12.15.11.32.18;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2006.01.15.13.06.43;	author sturm;	state Exp;
branches;
next	1.10;

1.10
date	2004.07.26.10.56.01;	author peter;	state Exp;
branches;
next	1.9;

1.9
date	2001.07.25.08.18.48;	author peter;	state Exp;
branches;
next	1.8;

1.8
date	2001.04.22.09.03.40;	author peter;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.07.15.27.10;	author peter;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.02.15.44.12;	author naddy;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.22.12.30.51;	author peter;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2000.02.07.10.32.07;	author peter;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.13.20.15.03;	author peter;	state Exp;
branches;
next	1.2;

1.2
date	99.03.31.22.39.44;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	97.11.15.00.04.37;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.11.15.00.04.37;	author deraadt;	state Exp;
branches;
next	;

1.5.2.1
date	2000.09.15.05.01.19;	author marc;	state Exp;
branches;
next	;

1.13.2.1
date	2011.05.10.13.50.10;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Enable LMTP transport in mail/exim, requested by Thomas Schneider
@
text
@##################################################
#          The Exim mail transport agent         #
##################################################

# This is the template for Exim's main build-time configuration file. It
# contains settings that are independent of any operating system. These are
# things that are mostly sysadmin choices. The items below are divided into
# those you must specify, those you probably want to specify, those you might
# often want to specify, and those that you almost never need to mention.

# Edit this file and save the result to a file called Local/Makefile within the
# Exim distribution directory before running the "make" command.

# Things that depend on the operating system have default settings in
# OS/Makefile-Default, but these are overridden for some OS by files called
# called OS/Makefile-<osname>. You can further override these by creating files
# called Local/Makefile-<osname>, where "<osname>" stands for the name of your
# operating system - look at the names in the OS directory to see which names
# are recognized.

# However, if you are building Exim for a single OS only, you don't need to
# worry about setting up Local/Makefile-<osname>. Any build-time configuration
# settings you require can in fact be placed in the one file called
# Local/Makefile. It is only if you are building for several OS from the same
# source files that you need to worry about splitting off your own OS-dependent
# settings into separate files. (There's more explanation about how this all
# works in the toplevel README file, under "Modifying the building process", as
# well as in the Exim specification.)

# One OS-specific thing that may need to be changed is the command for running
# the C compiler; the overall default is gcc, but some OS Makefiles specify cc.
# You can override anything that is set by putting CC=whatever in your
# Local/Makefile.

# NOTE: You should never need to edit any of the distributed Makefiles; all
# overriding can be done in your Local/Makefile(s). This will make it easier
# for you when the next release comes along.

# The location of the X11 libraries is something else that is quite variable
# even between different versions of the same operating system (and indeed
# there are different versions of X11 as well, of course). The four settings
# concerned here are X11, XINCLUDE, XLFLAGS (linking flags) and X11_LD_LIB
# (dynamic run-time library). You need not worry about X11 unless you want to
# compile the Exim monitor utility. Exim itself does not use X11.

# Another area of variability between systems is the type and location of the
# DBM library package. Exim has support for ndbm, gdbm, tdb, and Berkeley DB.
# By default the code assumes ndbm; this often works with gdbm or DB, provided
# they are correctly installed, via their compatibility interfaces. However,
# Exim can also be configured to use the native calls for Berkeley DB (obsolete
# versions 1.85, 2.x, 3.x, or the current 4.x version) and also for gdbm.

# For some operating systems, a default DBM library (other than ndbm) is
# selected by a setting in the OS-specific Makefile. Most modern OS now have
# a DBM library installed as standard, and in many cases this will be selected
# for you by the OS-specific configuration. If Exim compiles without any
# problems, you probably do not have to worry about the DBM library. If you
# do want or need to change it, you should first read the discussion in the
# file doc/dbm.discuss.txt, which also contains instructions for testing Exim's
# interface to the DBM library.

# In Local/Makefiles blank lines and lines starting with # are ignored. It is
# also permitted to use the # character to add a comment to a setting, for
# example
#
# EXIM_GID=42   # the "mail" group
#
# However, with some versions of "make" this works only if there is no white
# space between the end of the setting and the #, so perhaps it is best
# avoided. A consequence of this facility is that it is not possible to have
# the # character present in any setting, but I can't think of any cases where
# this would be wanted.
###############################################################################



###############################################################################
#                    THESE ARE THINGS YOU MUST SPECIFY                        #
###############################################################################

# Exim will not build unless you specify BIN_DIRECTORY, CONFIGURE_FILE, and
# EXIM_USER. You also need EXIM_GROUP if EXIM_USER specifies a uid by number.

# If you don't specify SPOOL_DIRECTORY, Exim won't fail to build. However, it
# really is a very good idea to specify it here rather than at run time. This
# is particularly true if you let the logs go to their default location in the
# spool directory, because it means that the location of the logs is known
# before Exim has read the run time configuration file.

#------------------------------------------------------------------------------
# BIN_DIRECTORY defines where the exim binary will be installed by "make
# install". The path is also used internally by Exim when it needs to re-invoke
# itself, either to send an error message, or to recover root privilege. Exim's
# utility binaries and scripts are also installed in this directory. There is
# no "standard" place for the binary directory. Some people like to keep all
# the Exim files under one directory such as /usr/exim; others just let the
# Exim binaries go into an existing directory such as /usr/sbin or
# /usr/local/sbin. The installation script will try to create this directory,
# and any superior directories, if they do not exist.

#BIN_DIRECTORY=/usr/exim/bin


#------------------------------------------------------------------------------
# CONFIGURE_FILE defines where Exim's run time configuration file is to be
# found. It is the complete pathname for the file, not just a directory. The
# location of all other run time files and directories can be changed in the
# run time configuration file. There is a lot of variety in the choice of
# location in different OS, and in the preferences of different sysadmins. Some
# common locations are in /etc or /etc/mail or /usr/local/etc or
# /usr/local/etc/mail. Another possibility is to keep all the Exim files under
# a single directory such as /usr/exim. Whatever you choose, the installation
# script will try to make the directory and any superior directories if they
# don't exist. It will also install a default runtime configuration if this
# file does not exist.

#CONFIGURE_FILE=/usr/exim/configure

# It is possible to specify a colon-separated list of files for CONFIGURE_FILE.
# In this case, Exim will use the first of them that exists when it is run.
# However, if a list is specified, the installation script no longer tries to
# make superior directories or to install a default runtime configuration.


#------------------------------------------------------------------------------
# The Exim binary must normally be setuid root, so that it starts executing as
# root, but (depending on the options with which it is called) it does not
# always need to retain the root privilege. These settings define the user and
# group that is used for Exim processes when they no longer need to be root. In
# particular, this applies when receiving messages and when doing remote
# deliveries. (Local deliveries run as various non-root users, typically as the
# owner of a local mailbox.) Specifying these values as root is not supported.

EXIM_USER=ref:_exim

# If you specify EXIM_USER as a name, this is looked up at build time, and the
# uid number is built into the binary. However, you can specify that this
# lookup is deferred until runtime. In this case, it is the name that is built
# into the binary. You can do this by a setting of the form:

# EXIM_USER=ref:exim

# In other words, put "ref:" in front of the user name. If you set EXIM_USER
# like this, any value specified for EXIM_GROUP is also passed "by reference".
# Although this costs a bit of resource at runtime, it is convenient to use
# this feature when building binaries that are to be run on multiple systems
# where the name may refer to different uids. It also allows you to build Exim
# on a system where there is no Exim user defined.

# If the setting of EXIM_USER is numeric (e.g. EXIM_USER=42), there must
# also be a setting of EXIM_GROUP. If, on the other hand, you use a name
# for EXIM_USER (e.g. EXIM_USER=exim), you don't need to set EXIM_GROUP unless
# you want to use a group other than the default group for the given user.

# EXIM_GROUP=

# Many sites define a user called "exim", with an appropriate default group,
# and use
#
# EXIM_USER=exim
#
# while leaving EXIM_GROUP unspecified (commented out).


#------------------------------------------------------------------------------
# SPOOL_DIRECTORY defines the directory where all the data for messages in
# transit is kept. It is strongly recommended that you define it here, though
# it is possible to leave this till the run time configuration.

# Exim creates the spool directory if it does not exist. The owner and group
# will be those defined by EXIM_USER and EXIM_GROUP, and this also applies to
# all the files and directories that are created in the spool directory.

# Almost all installations choose this:

SPOOL_DIRECTORY=/var/spool/exim



###############################################################################
#           THESE ARE THINGS YOU PROBABLY WANT TO SPECIFY                     #
###############################################################################

# If you need extra header file search paths on all compiles, put the -I
# options in INCLUDE.  If you want the extra searches only for certain
# parts of the build, see more specific xxx_INCLUDE variables below.

# INCLUDE=-I/example/include

# You need to specify some routers and transports if you want the Exim that you
# are building to be capable of delivering mail. You almost certainly need at
# least one type of lookup. You should consider whether you want to build
# the Exim monitor or not.


#------------------------------------------------------------------------------
# These settings determine which individual router drivers are included in the
# Exim binary. There are no defaults in the code; those routers that are wanted
# must be defined here by setting the appropriate variables to the value "yes".
# Including a router in the binary does not cause it to be used automatically.
# It has also to be configured in the run time configuration file. By
# commenting out those you know you don't want to use, you can make the binary
# a bit smaller. If you are unsure, leave all of these included for now.

ROUTER_ACCEPT=yes
ROUTER_DNSLOOKUP=yes
ROUTER_IPLITERAL=yes
ROUTER_MANUALROUTE=yes
ROUTER_QUERYPROGRAM=yes
ROUTER_REDIRECT=yes

# This one is very special-purpose, so is not included by default.

# ROUTER_IPLOOKUP=yes


#------------------------------------------------------------------------------
# These settings determine which individual transport drivers are included in
# the Exim binary. There are no defaults; those transports that are wanted must
# be defined here by setting the appropriate variables to the value "yes".
# Including a transport in the binary does not cause it to be used
# automatically. It has also to be configured in the run time configuration
# file. By commenting out those you know you don't want to use, you can make
# the binary a bit smaller. If you are unsure, leave all of these included for
# now.

TRANSPORT_APPENDFILE=yes
TRANSPORT_AUTOREPLY=yes
TRANSPORT_PIPE=yes
TRANSPORT_SMTP=yes

# This one is special-purpose, and commonly not required, so it is not
# included by default.

TRANSPORT_LMTP=yes


#------------------------------------------------------------------------------
# The appendfile transport can write messages to local mailboxes in a number
# of formats. The code for three specialist formats, maildir, mailstore, and
# MBX, is included only when requested. If you do not know what this is about,
# leave these settings commented out.

SUPPORT_MAILDIR=yes
SUPPORT_MAILSTORE=yes
SUPPORT_MBX=yes


#------------------------------------------------------------------------------
# See below for dynamic lookup modules.
#
# If not using package management but using this anyway, then think about how
# you perform upgrades and revert them. You should consider the benefit of
# embedding the Exim version number into LOOKUP_MODULE_DIR, so that you can
# maintain two concurrent sets of modules.
# 
# *BEWARE*: ability to modify the files in LOOKUP_MODULE_DIR is equivalent to
# the ability to modify the Exim binary, which is often setuid root!  The Exim
# developers only intend this functionality be used by OS software packagers
# and we suggest that such packagings' integrity checks should be paranoid
# about the permissions of the directory and the files within.

# LOOKUP_MODULE_DIR=/usr/lib/exim/lookups/

# To build a module dynamically, you'll need to define CFLAGS_DYNAMIC for
# your platform.  Eg:
# CFLAGS_DYNAMIC=-shared -rdynamic
# CFLAGS_DYNAMIC=-shared -rdynamic -fPIC

#------------------------------------------------------------------------------
# These settings determine which file and database lookup methods are included
# in the binary. See the manual chapter entitled "File and database lookups"
# for discussion. DBM and lsearch (linear search) are included by default. If
# you are unsure about the others, leave them commented out for now.
# LOOKUP_DNSDB does *not* refer to general mail routing using the DNS. It is
# for the specialist case of using the DNS as a general database facility (not
# common).
# If set to "2" instead of "yes" then the corresponding lookup will be
# built as a module and must be installed into LOOKUP_MODULE_DIR. You need to
# add -export-dynamic -rdynamic to EXTRALIBS. You may also need to add -ldl to
# EXTRALIBS so that dlopen() is available to Exim. You need to define
# LOOKUP_MODULE_DIR above so the exim binary actually loads dynamic lookup
# modules.
# Also, instead of adding all the libraries/includes to LOOKUP_INCLUDE and
# LOOKUP_LIBS, add them to the respective LOOKUP_*_INCLUDE and LOOKUP_*_LIBS
# (where * is the name as given here in this list). That ensures that only
# the dynamic library and not the exim binary will be linked against the
# library.
# NOTE: LDAP cannot be built as a module!
#
# If your system has pkg-config then the _INCLUDE/_LIBS setting can be
# handled for you automatically by also defining the _PC variable to reference
# the name of the pkg-config package, if such is available.

LOOKUP_DBM=yes
LOOKUP_LSEARCH=yes
LOOKUP_DNSDB=yes

LOOKUP_CDB=yes
LOOKUP_DSEARCH=yes
# LOOKUP_IBASE=yes
# LOOKUP_LDAP=yes
# LOOKUP_MYSQL=yes
LOOKUP_NIS=yes
# LOOKUP_NISPLUS=yes
# LOOKUP_ORACLE=yes
LOOKUP_PASSWD=yes
# LOOKUP_PGSQL=yes
# LOOKUP_SQLITE=yes
# LOOKUP_SQLITE_PC=sqlite3
# LOOKUP_WHOSON=yes

# These two settings are obsolete; all three lookups are compiled when
# LOOKUP_LSEARCH is enabled. However, we retain these for backward
# compatibility. Setting one forces LOOKUP_LSEARCH if it is not set.

# LOOKUP_WILDLSEARCH=yes
# LOOKUP_NWILDLSEARCH=yes


#------------------------------------------------------------------------------
# If you have set LOOKUP_LDAP=yes, you should set LDAP_LIB_TYPE to indicate
# which LDAP library you have. Unfortunately, though most of their functions
# are the same, there are minor differences. Currently Exim knows about four
# LDAP libraries: the one from the University of Michigan (also known as
# OpenLDAP 1), OpenLDAP 2, the Netscape SDK library, and the library that comes
# with Solaris 7 onwards. Uncomment whichever of these you are using.

# LDAP_LIB_TYPE=OPENLDAP1
# LDAP_LIB_TYPE=OPENLDAP2
# LDAP_LIB_TYPE=NETSCAPE
# LDAP_LIB_TYPE=SOLARIS

# If you don't set any of these, Exim assumes the original University of
# Michigan (OpenLDAP 1) library.


#------------------------------------------------------------------------------
# The PCRE library is required for exim.  There is no longer an embedded
# version of the PCRE library included with the source code, instead you
# must use a system library or build your own copy of PCRE.
# In either case you must specify the library link info here.  If the
# PCRE header files are not in the standard search path you must also
# modify the INCLUDE path (above)
#
# Use PCRE_CONFIG to query the pcre-config command (first found in $PATH)
# to find the include files and libraries, else use PCRE_LIBS and set INCLUDE
# too if needed.

PCRE_CONFIG=yes
PCRE_LIBS=-lpcre


#------------------------------------------------------------------------------
# Additional libraries and include directories may be required for some
# lookup styles (e.g. LDAP, MYSQL or PGSQL). LOOKUP_LIBS is included only on
# the command for linking Exim itself, not on any auxiliary programs. You
# don't need to set LOOKUP_INCLUDE if the relevant directories are already
# specified in INCLUDE. The settings below are just examples; -lpq is for
# PostgreSQL, -lgds is for Interbase, -lsqlite3 is for SQLite.
#
# You do not need to use this for any lookup information added via pkg-config.

# LOOKUP_INCLUDE=-I /usr/local/ldap/include -I /usr/local/mysql/include -I /usr/local/pgsql/include
# LOOKUP_LIBS=-L/usr/local/lib -lldap -llber -lmysqlclient -lpq -lgds -lsqlite3


#------------------------------------------------------------------------------
# Compiling the Exim monitor: If you want to compile the Exim monitor, a
# program that requires an X11 display, then EXIM_MONITOR should be set to the
# value "eximon.bin". Comment out this setting to disable compilation of the
# monitor. The locations of various X11 directories for libraries and include
# files are defaulted in the OS/Makefile-Default file, but can be overridden in
# local OS-specific make files.

# EXIM_MONITOR=eximon.bin


#------------------------------------------------------------------------------
# Compiling Exim with content scanning support: If you want to compile Exim
# with support for message body content scanning, set WITH_CONTENT_SCAN to
# the value "yes". This will give you malware and spam scanning in the DATA ACL,
# and the MIME ACL. Please read the documentation to learn more about these
# features.

WITH_CONTENT_SCAN=yes

# If you want to use the deprecated "demime" condition in the DATA ACL,
# uncomment the line below. Doing so will also explicitly turn on the
# WITH_CONTENT_SCAN option. If possible, use the MIME ACL instead of
# the "demime" condition.

WITH_OLD_DEMIME=yes

# If you're using ClamAV and are backporting fixes to an old version, instead
# of staying current (which is the more usual approach) then you may need to
# use an older API which uses a STREAM command, now deprecated, instead of
# zINSTREAM.  If you need to set this, please let the Exim developers know, as
# if nobody reports a need for it, we'll remove this option and clean up the
# code.  zINSTREAM was introduced with ClamAV 0.95.
#
# WITH_OLD_CLAMAV_STREAM=yes

#------------------------------------------------------------------------------
# By default Exim includes code to support DKIM (DomainKeys Identified
# Mail, RFC4871) signing and verification.  Verification of signatures is
# turned on by default.  See the spec for information on conditionally
# disabling it.  To disable the inclusion of the entire feature, set
# DISABLE_DKIM to "yes"

# DISABLE_DKIM=yes


#------------------------------------------------------------------------------
# Compiling Exim with experimental features. These are documented in
# experimental-spec.txt. "Experimental" means that the way these features are
# implemented may still change. Backward compatibility is not guaranteed.

# Uncomment the following line to add support for talking to dccifd.  This
# defaults the socket path to /usr/local/dcc/var/dccifd.

# EXPERIMENTAL_DCC=yes

# Uncomment the following lines to add SPF support. You need to have libspf2
# installed on your system (www.libspf2.org). Depending on where it is installed
# you may have to edit the CFLAGS and LDFLAGS lines.

# EXPERIMENTAL_SPF=yes
# CFLAGS  += -I/usr/local/include
# LDFLAGS += -lspf2

# Uncomment the following lines to add SRS (Sender rewriting scheme) support.
# You need to have libsrs_alt installed on your system (srs.mirtol.com).
# Depending on where it is installed you may have to edit the CFLAGS and
# LDFLAGS lines.

# EXPERIMENTAL_SRS=yes
# CFLAGS  += -I/usr/local/include
# LDFLAGS += -lsrs_alt

# Uncomment the following lines to add Brightmail AntiSpam support. You need
# to have the Brightmail client SDK installed. Please check the experimental
# documentation for implementation details. You need to edit the CFLAGS and
# LDFLAGS lines.

# EXPERIMENTAL_BRIGHTMAIL=yes
# CFLAGS  += -I/opt/brightmail/bsdk-6.0/include
# LDFLAGS += -lxml2_single -lbmiclient_single -L/opt/brightmail/bsdk-6.0/lib

# Uncomment the following line to add OCSP stapling support in TLS, if Exim
# was built using OpenSSL.

# EXPERIMENTAL_OCSP=yes



###############################################################################
#                 THESE ARE THINGS YOU MIGHT WANT TO SPECIFY                  #
###############################################################################

# The items in this section are those that are commonly changed according to
# the sysadmin's preferences, but whose defaults are often acceptable. The
# first five are concerned with security issues, where differing levels of
# paranoia are appropriate in different environments. Sysadmins also vary in
# their views on appropriate levels of defence in these areas. If you do not
# understand these issues, go with the defaults, which are used by many sites.


#------------------------------------------------------------------------------
# Although Exim is normally a setuid program, owned by root, it refuses to run
# local deliveries as root by default. There is a runtime option called
# "never_users" which lists the users that must never be used for local
# deliveries. There is also the setting below, which provides a list that
# cannot be overridden at runtime. This guards against problems caused by
# unauthorized changes to the runtime configuration. You are advised not to
# remove "root" from this option, but you can add other users if you want. The
# list is colon-separated. It must NOT contain any spaces.

# FIXED_NEVER_USERS=root:bin:daemon
FIXED_NEVER_USERS=root


#------------------------------------------------------------------------------
# By default, Exim insists that its configuration file be owned by root. You
# can specify one additional permitted owner here.

# CONFIGURE_OWNER=

# If the configuration file is group-writeable, Exim insists by default that it
# is owned by root. You can specify one additional permitted group owner here.

# CONFIGURE_GROUP=

# If you specify CONFIGURE_OWNER or CONFIGURE_GROUP as a name, this is looked
# up at build time, and the uid or gid number is built into the binary.
# However, you can specify that the lookup is deferred until runtime. In this
# case, it is the name that is built into the binary. You can do this by a
# setting of the form:

# CONFIGURE_OWNER=ref:mail
# CONFIGURE_GROUP=ref:sysadmin

# In other words, put "ref:" in front of the user or group name. Although this
# costs a bit of resource at runtime, it is convenient to use this feature when
# building binaries that are to be run on multiple systems where the names may
# refer to different uids or gids. It also allows you to build Exim on a system
# where the relevant user or group is not defined.


#------------------------------------------------------------------------------
# The -C option allows Exim to be run with an alternate runtime configuration
# file. When this is used by root, root privilege is retained by the binary
# (for any other caller including the Exim user, it is dropped). You can
# restrict the location of alternate configurations by defining a prefix below.
# Any file used with -C must then start with this prefix (except that /dev/null
# is also permitted if the caller is root, because that is used in the install
# script). If the prefix specifies a directory that is owned by root, a
# compromise of the Exim account does not permit arbitrary alternate
# configurations to be used. The prefix can be more restrictive than just a
# directory (the second example).

# ALT_CONFIG_PREFIX=/some/directory/
# ALT_CONFIG_PREFIX=/some/directory/exim.conf-


#------------------------------------------------------------------------------
# When a user other than root uses the -C option to override the configuration
# file (including the Exim user when re-executing Exim to regain root
# privileges for local message delivery), this will normally cause Exim to
# drop root privileges. The TRUSTED_CONFIG_LIST option, specifies a file which
# contains a list of trusted configuration filenames, one per line. If the -C
# option is used by the Exim user or by the user specified in the
# CONFIGURE_OWNER setting, to specify a configuration file which is listed in
# the TRUSTED_CONFIG_LIST file, then root privileges are not dropped by Exim.

# TRUSTED_CONFIG_LIST=/usr/exim/trusted_configs


#------------------------------------------------------------------------------
# Uncommenting this option disables the use of the -D command line option,
# which changes the values of macros in the runtime configuration file.
# This is another protection against somebody breaking into the Exim account.

# DISABLE_D_OPTION=yes


#------------------------------------------------------------------------------
# By contrast, you might be maintaining a system which relies upon the ability
# to override values with -D and assumes that these will be passed through to
# the delivery processes.  As of Exim 4.73, this is no longer the case by
# default.  Going forward, we strongly recommend that you use a shim Exim
# configuration file owned by root stored under TRUSTED_CONFIG_LIST.
# That shim can set macros before .include'ing your main configuration file.
#
# As a strictly transient measure to ease migration to 4.73, the
# WHITELIST_D_MACROS value definies a colon-separated list of macro-names
# which are permitted to be overridden from the command-line which will be
# honoured by the Exim user.  So these are macros that can persist to delivery
# time.
# Examples might be -DTLS or -DSPOOL=/some/dir.  The values on the
# command-line are filtered to only permit: [A-Za-z0-9_/.-]*
#
# This option is highly likely to be removed in a future release.  It exists
# only to make 4.73 as easy as possible to migrate to.  If you use it, we
# encourage you to schedule time to rework your configuration to not depend
# upon it.  Most people should not need to use this.
#
# By default, no macros are whitelisted for -D usage.

# WHITELIST_D_MACROS=TLS:SPOOL

#------------------------------------------------------------------------------
# Exim has support for the AUTH (authentication) extension of the SMTP
# protocol, as defined by RFC 2554. If you don't know what SMTP authentication
# is, you probably won't want to include this code, so you should leave these
# settings commented out. If you do want to make use of SMTP authentication,
# you must uncomment at least one of the following, so that appropriate code is
# included in the Exim binary. You will then need to set up the run time
# configuration to make use of the mechanism(s) selected.

AUTH_CRAM_MD5=yes
# AUTH_CYRUS_SASL=yes
AUTH_DOVECOT=yes
# AUTH_GSASL=yes
# AUTH_GSASL_PC=libgsasl
# AUTH_HEIMDAL_GSSAPI=yes
# AUTH_HEIMDAL_GSSAPI_PC=heimdal-gssapi
AUTH_PLAINTEXT=yes
AUTH_SPA=yes


#------------------------------------------------------------------------------
# If you specified AUTH_CYRUS_SASL above, you should ensure that you have the
# Cyrus SASL library installed before trying to build Exim, and you probably
# want to uncomment the first line below.
# Similarly for GNU SASL, unless pkg-config is used via AUTH_GSASL_PC.
# Ditto for AUTH_HEIMDAL_GSSAPI(_PC).

# AUTH_LIBS=-lsasl2
# AUTH_LIBS=-lgsasl
# AUTH_LIBS=-lgssapi -lheimntlm -lkrb5 -lhx509 -lcom_err -lhcrypto -lasn1 -lwind -lroken -lcrypt


#------------------------------------------------------------------------------
# When Exim is decoding MIME "words" in header lines, most commonly for use
# in the $header_xxx expansion, it converts any foreign character sets to the
# one that is set in the headers_charset option. The default setting is
# defined by this setting:

HEADERS_CHARSET="ISO-8859-1"

# If you are going to make use of $header_xxx expansions in your configuration
# file, or if your users are going to use them in filter files, and the normal
# character set on your host is something other than ISO-8859-1, you might
# like to specify a different default here. This value can be overridden in
# the runtime configuration, and it can also be overridden in individual filter
# files.
#
# IMPORTANT NOTE: The iconv() function is needed for character code
# conversions. Please see the next item...


#------------------------------------------------------------------------------
# Character code conversions are possible only if the iconv() function is
# installed on your operating system. There are two places in Exim where this
# is relevant: (a) The $header_xxx expansion (see the previous item), and (b)
# the Sieve filter support. For those OS where iconv() is known to be installed
# as standard, the file in OS/Makefile-xxxx contains
#
HAVE_ICONV=yes
#
# If you are not using one of those systems, but have installed iconv(), you
# need to uncomment that line above. In some cases, you may find that iconv()
# and its header file are not in the default places. You might need to use
# something like this:
#
# HAVE_ICONV=yes
# CFLAGS=-O -I/usr/local/include
# EXTRALIBS_EXIM=-L/usr/local/lib -liconv
#
# but of course there may need to be other things in CFLAGS and EXTRALIBS_EXIM
# as well.


#------------------------------------------------------------------------------
# The passwords for user accounts are normally encrypted with the crypt()
# function. Comparisons with encrypted passwords can be done using Exim's
# "crypteq" expansion operator. (This is commonly used as part of the
# configuration of an authenticator for use with SMTP AUTH.) At least one
# operating system has an extended function called crypt16(), which uses up to
# 16 characters of a password (the normal crypt() uses only the first 8). Exim
# supports the use of crypt16() as well as crypt() but note the warning below.

# You can always indicate a crypt16-encrypted password by preceding it with
# "{crypt16}". If you want the default handling (without any preceding
# indicator) to use crypt16(), uncomment the following line:

# DEFAULT_CRYPT=crypt16

# If you do that, you can still access the basic crypt() function by preceding
# an encrypted password with "{crypt}". For more details, see the description
# of the "crypteq" condition in the manual chapter on string expansions.

# Some operating systems do not include a crypt16() function, so Exim has one
# of its own, which it uses unless HAVE_CRYPT16 is defined. Normally, that will
# be set in an OS-specific Makefile for the OS that have such a function, so
# you should not need to bother with it.

# *** WARNING *** WARNING *** WARNING *** WARNING *** WARNING ***
# It turns out that the above is not entirely accurate. As well as crypt16()
# there is a function called bigcrypt() that some operating systems have. This
# may or may not use the same algorithm, and both of them may be different to
# Exim's built-in crypt16() that is used unless HAVE_CRYPT16 is defined.
#
# However, since there is now a move away from the traditional crypt()
# functions towards using SHA1 and other algorithms, tidying up this area of
# Exim is seen as very low priority. In practice, if you need to, you can
# define DEFAULT_CRYPT to the name of any function that has the same interface
# as the traditional crypt() function.
# *** WARNING *** WARNING *** WARNING *** WARNING *** WARNING ***


#------------------------------------------------------------------------------
# Exim can be built to support the SMTP STARTTLS command, which implements
# Transport Layer Security using SSL (Secure Sockets Layer). To do this, you
# must install the OpenSSL library package or the GnuTLS library. Exim contains
# no cryptographic code of its own. Uncomment the following lines if you want
# to build Exim with TLS support. If you don't know what this is all about,
# leave these settings commented out.

# This setting is required for any TLS support (either OpenSSL or GnuTLS)
SUPPORT_TLS=yes

# Uncomment one of these settings if you are using OpenSSL; pkg-config vs not
# USE_OPENSSL_PC=openssl
TLS_LIBS=-lssl -lcrypto

# Uncomment the first and either the second or the third of these if you
# are using GnuTLS.  If you have pkg-config, then the second, else the third.
# USE_GNUTLS=yes
# USE_GNUTLS_PC=gnutls
# TLS_LIBS=-lgnutls -ltasn1 -lgcrypt

# If you are running Exim as a server, note that just building it with TLS
# support is not all you need to do. You also need to set up a suitable
# certificate, and tell Exim about it by means of the tls_certificate
# and tls_privatekey run time options. You also need to set tls_advertise_hosts
# to specify the hosts to which Exim advertises TLS support. On the other hand,
# if you are running Exim only as a client, building it with TLS support
# is all you need to do.

# If you are using pkg-config then you should not need to worry where the
# libraries and headers are installed, as the pkg-config .pc specification
# should include all -L/-I information necessary.  If not using pkg-config
# then you might need to specify the locations too.

# Additional libraries and include files are required for both OpenSSL and
# GnuTLS. The TLS_LIBS settings above assume that the libraries are installed
# with all your other libraries. If they are in a special directory, you may
# need something like

# TLS_LIBS=-L/usr/local/openssl/lib -lssl -lcrypto
# or
# TLS_LIBS=-L/opt/gnu/lib -lgnutls -ltasn1 -lgcrypt

# TLS_LIBS is included only on the command for linking Exim itself, not on any
# auxiliary programs. If the include files are not in a standard place, you can
# set TLS_INCLUDE to specify where they are, for example:

# TLS_INCLUDE=-I/usr/local/openssl/include/
# or
# TLS_INCLUDE=-I/opt/gnu/include

# You don't need to set TLS_INCLUDE if the relevant directories are already
# specified in INCLUDE.


#------------------------------------------------------------------------------
# The default distribution of Exim contains only the plain text form of the
# documentation. Other forms are available separately. If you want to install
# the documentation in "info" format, first fetch the Texinfo documentation
# sources from the ftp directory and unpack them, which should create files
# with the extension "texinfo" in the doc directory. You may find that the
# version number of the texinfo files is different to your Exim version number,
# because the main documentation isn't updated as often as the code. For
# example, if you have Exim version 4.43, the source tarball upacks into a
# directory called exim-4.43, but the texinfo tarball unpacks into exim-4.40.
# In this case, move the contents of exim-4.40/doc into exim-4.43/doc after you
# have unpacked them. Then set INFO_DIRECTORY to the location of your info
# directory. This varies from system to system, but is often /usr/share/info.
# Once you have done this, "make install" will build the info files and
# install them in the directory you have defined.

# INFO_DIRECTORY=/usr/share/info


#------------------------------------------------------------------------------
# Exim log directory and files: Exim creates several log files inside a
# single log directory. You can define the directory and the form of the
# log file name here. If you do not set anything, Exim creates a directory
# called "log" inside its spool directory (see SPOOL_DIRECTORY above) and uses
# the filenames "mainlog", "paniclog", and "rejectlog". If you want to change
# this, you can set LOG_FILE_PATH to a path name containing one occurrence of
# %s. This will be replaced by one of the strings "main", "panic", or "reject"
# to form the final file names. Some installations may want something like this:

LOG_FILE_PATH=/var/spool/exim/logs/%s.log

# which results in files with names /var/log/exim_mainlog, etc. The directory
# in which the log files are placed must exist; Exim does not try to create
# it for itself. It is also your responsibility to ensure that Exim is capable
# of writing files using this path name. The Exim user (see EXIM_USER above)
# must be able to create and update files in the directory you have specified.

# You can also configure Exim to use syslog, instead of or as well as log
# files, by settings such as these

# LOG_FILE_PATH=syslog
# LOG_FILE_PATH=syslog:/var/log/exim_%slog

# The first of these uses only syslog; the second uses syslog and also writes
# to log files. Do not include white space in such a setting as it messes up
# the building process.


#------------------------------------------------------------------------------
# When logging to syslog, the following option caters for syslog replacements
# that are able to accept log entries longer than the 1024 characters allowed
# by RFC 3164. It is up to you to make sure your syslog daemon can handle this.
# Non-printable characters are usually unacceptable regardless, so log entries
# are still split on newline characters.

# SYSLOG_LONG_LINES=yes

# If you are not interested in the process identifier (pid) of the Exim that is
# making the call to syslog, then comment out the following line.

SYSLOG_LOG_PID=yes


#------------------------------------------------------------------------------
# Cycling log files: this variable specifies the maximum number of old
# log files that are kept by the exicyclog log-cycling script. You don't have
# to use exicyclog. If your operating system has other ways of cycling log
# files, you can use them instead. The exicyclog script isn't run by default;
# you have to set up a cron job for it if you want it.

EXICYCLOG_MAX=10


#------------------------------------------------------------------------------
# The compress command is used by the exicyclog script to compress old log
# files. Both the name of the command and the suffix that it adds to files
# need to be defined here. See also the EXICYCLOG_MAX configuration.

COMPRESS_COMMAND=/usr/bin/gzip
COMPRESS_SUFFIX=gz


#------------------------------------------------------------------------------
# If the exigrep utility is fed compressed log files, it tries to uncompress
# them using this command.

ZCAT_COMMAND=/usr/bin/zcat


#------------------------------------------------------------------------------
# Compiling in support for embedded Perl: If you want to be able to
# use Perl code in Exim's string manipulation language and you have Perl
# (version 5.004 or later) installed, set EXIM_PERL to perl.o. Using embedded
# Perl costs quite a lot of resources. Only do this if you really need it.

EXIM_PERL=perl.o


#------------------------------------------------------------------------------
# Support for dynamically-loaded string expansion functions via ${dlfunc. If
# you are using gcc the dynamically-loaded object must be compiled with the
# -shared option, and you will need to add -export-dynamic to EXTRALIBS so
# that the local_scan API is made available by the linker. You may also need
# to add -ldl to EXTRALIBS so that dlopen() is available to Exim.

# EXPAND_DLFUNC=yes


#------------------------------------------------------------------------------
# Exim has support for PAM (Pluggable Authentication Modules), a facility
# which is available in the latest releases of Solaris and in some GNU/Linux
# distributions (see http://ftp.kernel.org/pub/linux/libs/pam/). The Exim
# support, which is intended for use in conjunction with the SMTP AUTH
# facilities, is included only when requested by the following setting:

# SUPPORT_PAM=yes

# You probably need to add -lpam to EXTRALIBS, and in some releases of
# GNU/Linux -ldl is also needed.


#------------------------------------------------------------------------------
# Support for authentication via Radius is also available. The Exim support,
# which is intended for use in conjunction with the SMTP AUTH facilities,
# is included only when requested by setting the following parameter to the
# location of your Radius configuration file:

# RADIUS_CONFIG_FILE=/etc/radiusclient/radiusclient.conf
# RADIUS_CONFIG_FILE=/etc/radius.conf

# If you have set RADIUS_CONFIG_FILE, you should also set one of these to
# indicate which RADIUS library is used:

# RADIUS_LIB_TYPE=RADIUSCLIENT
# RADIUS_LIB_TYPE=RADIUSCLIENTNEW
# RADIUS_LIB_TYPE=RADLIB

# RADIUSCLIENT is the radiusclient library; you probably need to add
#   -lradiusclient to EXTRALIBS.
#
# The API for the radiusclient library was changed at release 0.4.0.
# Unfortunately, the header file does not define a version number that clients
# can use to support both the old and new APIs. If you are using version 0.4.0
# or later of the radiusclient library, you should use RADIUSCLIENTNEW.
#
# RADLIB is the Radius library that comes with FreeBSD (the header file is
#   called radlib.h); you probably need to add -lradius to EXTRALIBS.
#
# If you do not set RADIUS_LIB_TYPE, Exim assumes the radiusclient library,
# using the original API.


#------------------------------------------------------------------------------
# Support for authentication via the Cyrus SASL pwcheck daemon is available.
# Note, however, that pwcheck is now deprecated in favour of saslauthd (see
# next item). The Exim support for pwcheck, which is intented for use in
# conjunction with the SMTP AUTH facilities, is included only when requested by
# setting the following parameter to the location of the pwcheck daemon's
# socket.
#
# There is no need to install all of SASL on your system. You just need to run
# ./configure --with-pwcheck, cd to the pwcheck directory within the sources,
# make and make install. You must create the socket directory (default
# /var/pwcheck) and chown it to exim's user and group. Once you have installed
# pwcheck, you should arrange for it to be started by root at boot time.

# CYRUS_PWCHECK_SOCKET=/var/pwcheck/pwcheck


#------------------------------------------------------------------------------
# Support for authentication via the Cyrus SASL saslauthd daemon is available.
# The Exim support, which is intented for use in conjunction with the SMTP AUTH
# facilities, is included only when requested by setting the following
# parameter to the location of the saslauthd daemon's socket.
#
# There is no need to install all of SASL on your system. You just need to run
# ./configure --with-saslauthd (and any other options you need, for example, to
# select or deselect authentication mechanisms), cd to the saslauthd directory
# within the sources, make and make install. You must create the socket
# directory (default /var/state/saslauthd) and chown it to exim's user and
# group. Once you have installed saslauthd, you should arrange for it to be
# started by root at boot time.

CYRUS_SASLAUTHD_SOCKET=/var/sasl2/mux


#------------------------------------------------------------------------------
# TCP wrappers: If you want to use tcpwrappers from within Exim, uncomment
# this setting. See the manual section entitled "Use of tcpwrappers" in the
# chapter on building and installing Exim.
#
# USE_TCP_WRAPPERS=yes
#
# You may well also have to specify a local "include" file and an additional
# library for TCP wrappers, so you probably need something like this:
#
# USE_TCP_WRAPPERS=yes
# CFLAGS=-O -I/usr/local/include
# EXTRALIBS_EXIM=-L/usr/local/lib -lwrap
#
# but of course there may need to be other things in CFLAGS and EXTRALIBS_EXIM
# as well.
#
# To use a name other than exim in the tcpwrappers config file,
# e.g. if you're running multiple daemons with different access lists,
# or multiple MTAs with the same access list, define
# TCP_WRAPPERS_DAEMON_NAME accordingly
#
# TCP_WRAPPERS_DAEMON_NAME="exim"


#------------------------------------------------------------------------------
# The default action of the exim_install script (which is run by "make
# install") is to install the Exim binary with a unique name such as
# exim-4.43-1, and then set up a symbolic link called "exim" to reference it,
# moving the symbolic link from any previous version. If you define NO_SYMLINK
# (the value doesn't matter), the symbolic link is not created or moved. You
# will then have to "turn Exim on" by setting up the link manually.

# NO_SYMLINK=yes


#------------------------------------------------------------------------------
# Another default action of the install script is to install a default runtime
# configuration file if one does not exist. This configuration has a router for
# expanding system aliases. The default assumes that these aliases are kept
# in the traditional file called /etc/aliases. If such a file does not exist,
# the installation script creates one that contains just comments (no actual
# aliases). The following setting can be changed to specify a different
# location for the system alias file.

SYSTEM_ALIASES_FILE=/etc/mail/aliases


#------------------------------------------------------------------------------
# There are some testing options (-be, -bt, -bv) that read data from the
# standard input when no arguments are supplied. By default, the input lines
# are read using the standard fgets() function. This does not support line
# editing during interactive input (though the terminal's "erase" character
# works as normal). If your operating system has the readline() function, and
# in addition supports dynamic loading of library functions, you can cause
# Exim to use readline() for the -be testing option (only) by uncommenting the
# following setting. Dynamic loading is used so that the library is loaded only
# when the -be testing option is given; by the time the loading occurs,
# Exim has given up its root privilege and is running as the calling user. This
# is the reason why readline() is NOT supported for -bt and -bv, because Exim
# runs as root or as exim, respectively, for those options. When USE_READLINE
# is "yes", as well as supporting line editing, a history of input lines in the
# current run is maintained.

# USE_READLINE=yes

# You may need to add -ldl to EXTRALIBS when you set USE_READLINE=yes.
# Note that this option adds to the size of the Exim binary, because the
# dynamic loading library is not otherwise included.


#------------------------------------------------------------------------------
# Uncomment this setting to include IPv6 support.

# HAVE_IPV6=yes

###############################################################################
#              THINGS YOU ALMOST NEVER NEED TO MENTION                        #
###############################################################################

# The settings in this section are available for use in special circumstances.
# In the vast majority of installations you need not change anything below.


#------------------------------------------------------------------------------
# The following commands live in different places in some OS. Either the
# ultimate default settings, or the OS-specific files should already point to
# the right place, but they can be overridden here if necessary. These settings
# are used when building various scripts to ensure that the correct paths are
# used when the scripts are run. They are not used in the Makefile itself. Perl
# is not necessary for running Exim unless you set EXIM_PERL (see above) to get
# it embedded, but there are some utilities that are Perl scripts. If you
# haven't got Perl, Exim will still build and run; you just won't be able to
# use those utilities.

# CHOWN_COMMAND=/usr/bin/chown
# CHGRP_COMMAND=/usr/bin/chgrp
# CHMOD_COMMAND=/usr/bin/chmod
# MV_COMMAND=/bin/mv
# RM_COMMAND=/bin/rm
# TOUCH_COMMAND=/usr/bin/touch
# PERL_COMMAND=/usr/bin/perl


#------------------------------------------------------------------------------
# The following macro can be used to change the command for building a library
# of functions. By default the "ar" command is used, with options "cq".
# Only in rare circumstances should you need to change this.

# AR=ar cq


#------------------------------------------------------------------------------
# In some operating systems, the value of the TMPDIR environment variable
# controls where temporary files are created. Exim does not make use of
# temporary files, except when delivering to MBX mailboxes. However, if Exim
# calls any external libraries (e.g. DBM libraries), they may use temporary
# files, and thus be influenced by the value of TMPDIR. For this reason, when
# Exim starts, it checks the environment for TMPDIR, and if it finds it is set,
# it replaces the value with what is defined here. Commenting this setting
# suppresses the check altogether.

TMPDIR="/tmp"


#------------------------------------------------------------------------------
# The following macros can be used to change the default modes that are used
# by the appendfile transport. In most installations the defaults are just
# fine, and in any case, you can change particular instances of the transport
# at run time if you want.

# APPENDFILE_MODE=0600
# APPENDFILE_DIRECTORY_MODE=0700
# APPENDFILE_LOCKFILE_MODE=0600


#------------------------------------------------------------------------------
# In some installations there may be multiple machines sharing file systems,
# where a different configuration file is required for Exim on the different
# machines. If CONFIGURE_FILE_USE_NODE is defined, then Exim will first look
# for a configuration file whose name is that defined by CONFIGURE_FILE,
# with the node name obtained by uname() tacked on the end, separated by a
# period (for example, /usr/exim/configure.host.in.some.domain). If this file
# does not exist, then the bare configuration file name is tried.

# CONFIGURE_FILE_USE_NODE=yes


#------------------------------------------------------------------------------
# In some esoteric configurations two different versions of Exim are run,
# with different setuid values, and different configuration files are required
# to handle the different cases. If CONFIGURE_FILE_USE_EUID is defined, then
# Exim will first look for a configuration file whose name is that defined
# by CONFIGURE_FILE, with the effective uid tacked on the end, separated by
# a period (for eximple, /usr/exim/configure.0). If this file does not exist,
# then the bare configuration file name is tried. In the case when both
# CONFIGURE_FILE_USE_EUID and CONFIGURE_FILE_USE_NODE are set, four files
# are tried: <name>.<euid>.<node>, <name>.<node>, <name>.<euid>, and <name>.

# CONFIGURE_FILE_USE_EUID=yes


#------------------------------------------------------------------------------
# The size of the delivery buffers: These specify the sizes (in bytes) of
# the buffers that are used when copying a message from the spool to a
# destination. There is rarely any need to change these values.

# DELIVER_IN_BUFFER_SIZE=8192
# DELIVER_OUT_BUFFER_SIZE=8192


#------------------------------------------------------------------------------
# The mode of the database directory: Exim creates a directory called "db"
# in its spool directory, to hold its databases of hints. This variable
# determines the mode of the created directory. The default value in the
# source is 0750.

# EXIMDB_DIRECTORY_MODE=0750


#------------------------------------------------------------------------------
# Database file mode: The mode of files created in the "db" directory defaults
# to 0640 in the source, and can be changed here.

# EXIMDB_MODE=0640


#------------------------------------------------------------------------------
# Database lock file mode: The mode of zero-length files created in the "db"
# directory to use for locking purposes defaults to 0640 in the source, and
# can be changed here.

# EXIMDB_LOCKFILE_MODE=0640


#------------------------------------------------------------------------------
# This parameter sets the maximum length of the header portion of a message
# that Exim is prepared to process. The default setting is one megabyte. The
# limit exists in order to catch rogue mailers that might connect to your SMTP
# port, start off a header line, and then just pump junk at it for ever. The
# message_size_limit option would also catch this, but it may not be set.
# The value set here is the default; it can be changed at runtime.

# HEADER_MAXSIZE="(1024*1024)"


#------------------------------------------------------------------------------
# The mode of the input directory: The input directory is where messages are
# kept while awaiting delivery. Exim creates it if necessary, using a mode
# which can be defined here (default 0750).

# INPUT_DIRECTORY_MODE=0750


#------------------------------------------------------------------------------
# The mode of Exim's log directory, when it is created by Exim inside the spool
# directory, defaults to 0750 but can be changed here.

# LOG_DIRECTORY_MODE=0750


#------------------------------------------------------------------------------
# The log files themselves are created as required, with a mode that defaults
# to 0640, but which can be changed here.

# LOG_MODE=0640


#------------------------------------------------------------------------------
# The TESTDB lookup is for performing tests on the handling of lookup results,
# and is not useful for general running. It should be included only when
# debugging the code of Exim.

# LOOKUP_TESTDB=yes


#------------------------------------------------------------------------------
# /bin/sh is used by default as the shell in which to run commands that are
# defined in the makefiles. This can be changed if necessary, by uncommenting
# this line and specifying another shell, but note that a Bourne-compatible
# shell is expected.

# MAKE_SHELL=/bin/sh


#------------------------------------------------------------------------------
# The maximum number of named lists of each type (address, domain, host, and
# local part) can be increased by changing this value. It should be set to
# a multiple of 16.

# MAX_NAMED_LIST=16


#------------------------------------------------------------------------------
# Network interfaces: Unless you set the local_interfaces option in the runtime
# configuration file to restrict Exim to certain interfaces only, it will run
# code to find all the interfaces there are on your host. Unfortunately,
# the call to the OS that does this requires a buffer large enough to hold
# data for all the interfaces - it was designed in the days when a host rarely
# had more than three or four interfaces. Nowadays hosts can have very many
# virtual interfaces running on the same hardware. If you have more than 250
# virtual interfaces, you will need to uncomment this setting and increase the
# value.

# MAXINTERFACES=250


#------------------------------------------------------------------------------
# Per-message logs: While a message is in the process of being delivered,
# comments on its progress are written to a message log, for the benefit of
# human administrators. These logs are held in a directory called "msglog"
# in the spool directory. Its mode defaults to 0750, but can be changed here.
# The message log directory is also used for storing files that are used by
# transports for returning data to a message's sender (see the "return_output"
# option for transports).

# MSGLOG_DIRECTORY_MODE=0750


#------------------------------------------------------------------------------
# There are three options which are used when compiling the Perl interface and
# when linking with Perl. The default values for these are placed automatically
# at the head of the Makefile by the script which builds it. However, if you
# want to override them, you can do so here.

# PERL_CC=
# PERL_CCOPTS=
# PERL_LIBS=


#------------------------------------------------------------------------------
# If you wish to disable valgrind in the binary, define NVALGRIND=1.
# This should not be needed.

# NVALGRIND=1

#------------------------------------------------------------------------------
# Identifying the daemon: When an Exim daemon starts up, it writes its pid
# (process id) to a file so that it can easily be identified. The path of the
# file can be specified here. Some installations may want something like this:

PID_FILE_PATH=/var/run/exim.pid

# If PID_FILE_PATH is not defined, Exim writes a file in its spool directory
# using the name "exim-daemon.pid".

# If you start up a daemon without the -bd option (for example, with just
# the -q15m option), a pid file is not written. Also, if you override the
# configuration file with the -oX option, no pid file is written. In other
# words, the pid file is written only for a "standard" daemon.


#------------------------------------------------------------------------------
# If Exim creates the spool directory, it is given this mode, defaulting in the
# source to 0750.

# SPOOL_DIRECTORY_MODE=0750


#------------------------------------------------------------------------------
# The mode of files on the input spool which hold the contents of messages can
# be changed here. The default is 0640 so that information from the spool is
# available to anyone who is a member of the Exim group.

# SPOOL_MODE=0640


#------------------------------------------------------------------------------
# Moving frozen messages: If the following is uncommented, Exim is compiled
# with support for automatically moving frozen messages out of the main spool
# directory, a facility that is found useful by some large installations. A
# run time option is required to cause the moving actually to occur. Such
# messages become "invisible" to the normal management tools.

# SUPPORT_MOVE_FROZEN_MESSAGES=yes


#------------------------------------------------------------------------------
# Expanding match_* second paramters: BE CAREFUL IF ENABLING THIS!
# It has proven too easy in practice for administrators to configure security
# problems into their Exim install, by treating match_domain{}{} and friends
# as a form of string comparison, where the second string comes from untrusted
# data. Because these options take lists, which can include lookup;LOOKUPDATA
# style elements, a foe can then cause Exim to, eg, execute an arbitrary MySQL
# query, dropping tables.
# From Exim 4.77 onwards, the second parameter is not expanded; it can still
# be a list literal, or a macro, or a named list reference.  There is also
# the new expansion condition "inlisti" which does expand the second parameter,
# but treats it as a list of strings; also, there's "eqi" which is probably
# what is normally wanted.
#
# If you really need to have the old behaviour, know what you are doing and
# will not complain if your system is compromised as a result of doing so, then
# uncomment this option to get the old behaviour back.

# EXPAND_LISTMATCH_RHS=yes

#------------------------------------------------------------------------------
# Disabling the use of fsync(): DO NOT UNCOMMENT THE FOLLOWING LINE unless you
# really, really, really know what you are doing. And even then, think again.
# You should never uncomment this when compiling a binary for distribution.
# Use it only when compiling Exim for your own use.
#
# Uncommenting this line enables the use of a runtime option called
# disable_fsync, which can be used to stop Exim using fsync() to ensure that
# files are written to disc before proceeding. When this is disabled, crashes
# and hardware problems such as power outages can cause data to be lost. This
# feature should only be used in very exceptional circumstances. YOU HAVE BEEN
# WARNED.

# ENABLE_DISABLE_FSYNC=yes

# End of EDITME for Exim 4.
@


1.17
log
@disable tcp wrappers
@
text
@d235 1
a235 1
# TRANSPORT_LMTP=yes
@


1.16
log
@update to exim 4.80.1, and drop fkr@@ as maintainer at his request
@
text
@d929 1
a929 1
USE_TCP_WRAPPERS=yes
@


1.15
log
@update to exim version 4.77.
This release changes the behaviour of certain expansion methods.
Details can be found here: http://www.gossamer-threads.com/lists/exim/announce/92353

ok sthen@@, jasper@@ and ajacoutot@@
@
text
@d251 1
a251 1
# LOOKUP_MODULE_DIR=/usr/lib/exim/lookups/
d256 8
d290 4
d310 1
d345 4
a348 2
# The default setting of PCRE_LIBS should work on the vast majority of
# systems
d350 1
d361 2
d419 5
d450 5
d584 4
d595 3
a597 1
# want to uncomment the following line:
d600 2
d694 2
a695 1
# Uncomment this setting if you are using OpenSSL
d698 2
a699 1
# Uncomment these settings if you are using GnuTLS
d701 1
d712 5
d995 4
d1213 6
@


1.14
log
@update exim to version 4.76.

This contains a security fix for CVE-2011-1764.

ok sthen@@ and jasper@@
@
text
@a0 2
# $Cambridge: exim/src/src/EDITME,v 1.27 2010/06/12 15:21:25 jetmore Exp $

d1206 20
@


1.13
log
@update to exim 4.73.
While this resolves CVE-2010-4344 and CVE-2010-4345, the first was
actually fixed in exim 4.70 and the latter is a no-issue on OpenBSD
due to it always being built with ALT_CONFIG_ROOT_ONLY.

with input from Andreas Voegele
ok sthen@@, jasper@@
@
text
@d252 13
d272 12
d531 1
a531 1
# which are permitted to be overriden from the command-line which will be
@


1.13.2.1
log
@update exim to version 4.76.
This contains a security fix for CVE-2011-1764.

as agreed by sthen@@ and fkr@@ the fix for stable is the full update, as 4.75
was tested succesfully by various people and the bump to 4.76 only contains
the security fix.
@
text
@a251 13
# See below for dynamic lookup modules.
# LOOKUP_MODULE_DIR=/usr/lib/exim/lookups/
# If not using package management but using this anyway, then think about how
# you perform upgrades and revert them. You should consider the benefit of
# embedding the Exim version number into LOOKUP_MODULE_DIR, so that you can
# maintain two concurrent sets of modules.

# To build a module dynamically, you'll need to define CFLAGS_DYNAMIC for
# your platform.  Eg:
# CFLAGS_DYNAMIC=-shared -rdynamic
# CFLAGS_DYNAMIC=-shared -rdynamic -fPIC

#------------------------------------------------------------------------------
a258 12
# If set to "2" instead of "yes" then the corresponding lookup will be
# built as a module and must be installed into LOOKUP_MODULE_DIR. You need to
# add -export-dynamic -rdynamic to EXTRALIBS. You may also need to add -ldl to
# EXTRALIBS so that dlopen() is available to Exim. You need to define
# LOOKUP_MODULE_DIR above so the exim binary actually loads dynamic lookup
# modules.
# Also, instead of adding all the libraries/includes to LOOKUP_INCLUDE and
# LOOKUP_LIBS, add them to the respective LOOKUP_*_INCLUDE and LOOKUP_*_LIBS
# (where * is the name as given here in this list). That ensures that only
# the dynamic library and not the exim binary will be linked against the
# library.
# NOTE: LDAP cannot be built as a module!
d506 1
a506 1
# which are permitted to be overridden from the command-line which will be
@


1.12
log
@- update to 4.71
- tweak MESSAGE/DESCR
- drop no_x11 flavour in favour of an -eximon subpackage and a
pseudo-flavour to disable it
- use iconv by default rather than as a flavour
- drop no_exiscan flavour

from bernd@@, Bjorn Ketelaars and myself; ok fkr@@ bernd@@
@
text
@d1 1
a1 1
# $Cambridge: exim/exim-src/src/EDITME,v 1.23 2009/11/20 12:18:19 nm4 Exp $
d134 1
a134 2
# owner of a local mailbox.) Specifying these values as root is very strongly
# discouraged.
d354 19
d433 2
a434 2
# By default, Exim insists that its configuration file be owned either by root
# or by the Exim user. You can specify one additional permitted owner here.
d439 1
a439 2
# is owned by root or the Exim user. You can specify one additional permitted
# group owner here.
d461 9
a469 9
# file. When this is used by root or the Exim user, root privilege is retained
# by the binary (for any other caller, it is dropped). You can restrict the
# location of alternate configurations by defining a prefix below. Any file
# used with -C must then start with this prefix (except that /dev/null is also
# permitted if the caller is root, because that is used in the install script).
# If the prefix specifies a directory that is owned by root, a compromise of
# the Exim account does not permit arbitrary alternate configurations to be
# used. The prefix can be more restrictive than just a directory (the second
# example).
d476 8
a483 9
# If you uncomment the following line, only root may use the -C or -D options
# without losing root privilege. The -C option specifies an alternate runtime
# configuration file, and the -D option changes macro values in the runtime
# configuration. Uncommenting this line restricts what can be done with these
# options. A call to receive a message (either one-off or via a daemon) cannot
# successfully continue to deliver it, because the re-exec of Exim to regain
# root privilege will fail, owing to the use of -C or -D by the Exim user.
# However, you can still use -C for testing (as root) if you do separate Exim
# calls for receiving a message and subsequently delivering it.
d485 1
a485 1
ALT_CONFIG_ROOT_ONLY=yes
d497 25
d873 7
@


1.11
log
@update to exim 4.60 with new FLAVORS sqlite3 and sasl

from new maintainer Andreas Voegele <voegelas at gmx.net>
timeout from old maintainer
@
text
@d1 1
a1 1
# $Cambridge: exim/exim-src/src/EDITME,v 1.16 2005/10/12 15:45:38 ph10 Exp $
d103 1
a103 1
# BIN_DIRECTORY=/usr/exim/bin
d119 1
a119 1
# CONFIGURE_FILE=/usr/exim/configure
d263 1
a265 1
LOOKUP_DNSDB=yes
d304 13
d346 1
a346 1
# WITH_CONTENT_SCAN=yes
d353 1
a353 1
# WITH_OLD_DEMIME=yes
d491 1
d530 1
a530 1
# HAVE_ICONV=yes
d552 1
a552 1
# supports the use of crypt16() as well as crypt().
d564 17
a580 4
# Since most operating systems do not include a crypt16() function (yet?), Exim
# has one of its own, which it uses unless HAVE_CRYPT16 is defined. Normally,
# that will be set in an OS-specific Makefile for the OS that have such a
# function, so you should not need to bother with it.
d875 1
a875 1
# You may need to add -ldl to EXTRA_LIBS when you set USE_READLINE=yes.
d902 1
d905 1
d1134 16
@


1.10
log
@Update to exim 4.41.

This is a major update and configuration files are not compatible.
A conversion script is included and installed in

        ${PREFIX}/share/examples/exim4/convert4r4

New co-maintainer and much of the inital work done by Ilya Voronin.

A decision was made to include the semi-official exiscan patch in
the default installation, as most admins appear to use this. It is
hoped that is will become part of the core exim4 code "soon".

This port now creates an _exim user and group if they don't already
exist.

Work and testing by Ilya Voronin, Richard Welty, Axel Rau and others
who I can't now find in my mailbox. Apologies if I left you out.
@
text
@d1 2
d53 1
a53 1
# versions 1.85 and 2.x, or the current 3.x version) and also for gdbm.
d187 6
d275 1
d309 1
a309 1
# PostgreSQL, -lgds is for Interbase.
d312 2
a313 1
# LOOKUP_LIBS=-L/usr/local/lib -lldap -llber -lmysqlclient -lpq -lgds
d326 48
d381 1
a381 1
# first for are concerned with security issues, where differing levels of
d395 1
a395 1
# list is colon-separated.
d397 1
d402 28
d452 1
a452 1
# root privilege will fail, owing to the use of -C of -D by the Exim user.
d477 1
d483 8
d611 3
a613 3
# example, if you have Exim version 4.03, the source tarball upacks into a
# directory called exim-4.03, but the texinfo tarball unpacks into exim-4.00.
# In this case, move the contents of exim-4.00/doc into exim-4.03/doc after you
d632 1
a632 1
# LOG_FILE_PATH=/var/log/exim_%slog
d644 1
a644 1
LOG_FILE_PATH=/var/spool/exim/logs/%s.log
d702 10
d731 22
d786 1
a786 1
# CYRUS_SASLAUTHD_SOCKET=/var/state/saslauthd/mux
d810 1
a810 1
# exim-4.20-1, and then set up a symbolic link called "exim" to reference it,
d828 23
@


1.9
log
@update to exim 3.30

This does not yet include the IPv6 / IPv4 OpenBSD patch discussed on
various lists.
@
text
@a0 1
# $OpenBSD: Makefile,v 1.8 2001/04/22 09:03:40 peter Exp $
d6 7
a12 3
# contains settings that are independent of any operating system. It should
# be edited and then saved to a file called Local/Makefile before first running
# the make command.
d21 13
a33 8
# However, if you are building Exim for a single OS only, you can place all the
# configuration settings in the one file called Local/Makefile; only if you are
# building for several OS from the same source files do you need to worry
# about splitting off the OS-dependent settings into separate files.

# One OS-specific thing is the C compiler; the overall default is gcc, but
# some OS Makefiles specify cc. You can override anything that is set by
# putting CC=whatever in your Local/Makefile.
d40 1
a40 1
# even between different versions of the same operation system (and indeed
d43 2
a44 1
# (dynamic run-time library).
d47 14
a60 11
# dbm library package. Exim has support for ndbm, gdbm, and Berkeley DB. By
# default it assumes ndbm; this often works with gdbm or DB, provided they
# are correctly installed, via their compatibility interfaces. However, Exim
# can also be configured to use the native calls for Berkeley DB 1.85 or
# Berkeley DB version 2.x, and this is defaulted for some operating systems.
# The defaults are set in OS/Makefile-Default, and can be changed by putting
# things into an OS-specific Makefile, or indeed into the main Local/Makefile
# if Exim is being compiled for a single OS only.

# See also the file doc/dbm.discuss.txt for discussion about different dbm
# libraries.
d69 8
a76 4
# space between the end of the setting and the #, so it is probably best
# avoided. However, a consequence of this facility is that it is not possible
# to have the # character present in any setting, but I can't think of any
# cases where this would be wanted.
d78 102
d181 50
a231 3
# /bin/sh is normally used as the shell in which to run commands that are
# defined in the makefiles. This can be changed if necessary, but note that
# a Bourne-compatible shell is expected.
d233 56
a288 1
# MAKE_SHELL=/bin/sh
d290 2
a292 6
# The following commands live in different places in some OS. The OS-specific
# files should normally point to the right place, but they can be overridden
# here if necessary. Perl is not necessary for running Exim unless you set
# EXIM_PERL (see below) to get it embedded, but there are some Perl utilities
# for processing log files. If you haven't got Perl, Exim will still build and
# run; you just won't be able to run those utilities.
d294 7
a300 5
# CHOWN_COMMAND=/usr/bin/chown
# CHGRP_COMMAND=/usr/bin/chgrp
# MV_COMMAND=/bin/mv
# RM_COMMAND=/bin/rm
# PERL_COMMAND=/usr/bin/perl
d302 2
d305 7
a311 2
# The following macro can be used to change the command for building a library
# of functions. By default the "ar" command is used, with options "cq".
d313 1
a313 1
# AR=ar cq
d316 72
a387 4
# Exim has some support for the AUTH extension of SMTP (RFC 2554). If you want
# to use this you must uncomment at least one of the following macros so that
# appropriate code is included in the binary. You then need to set up the
# runtime configuration to make use of the mechanism(s) selected.
d391 94
d486 12
d499 3
a501 6
# The binary directory: This variable defines where the exim binary will be
# installed by "make install" or "exim_install". It is also used internally
# by exim when it needs to re-invoke itself, either to send an error message,
# or to recover root privilege. Exim's utility binaries and scripts are also
# installed in this directory. There is no default for this variable built into
# the source files; it must be set in one of the local configuration files.
d503 2
a504 1
BIN_DIRECTORY=/usr/local/sbin
d507 1
d512 41
a552 3
# with the extension "texinfo" in the doc directory. Then set INFO_DIRECTORY to
# your info directory; "make install" will then build the info files and
# install them there.
a553 1
INFO_DIRECTORY=/usr/local/info
d555 6
d562 19
d589 1
d593 84
a676 1
ZCAT_COMMAND=/usr/bin/gzcat
d679 19
a697 5
# The runtime configuration file: This variable defines where Exim's runtime
# configuration file is. There is no default built into the source files, so
# there must be a setting in one of the local configuration files. The
# location of all other runtime files and directories can be changed in the
# runtime configuration file.
d699 1
a699 1
CONFIGURE_FILE=/etc/exim/configure
d702 60
d767 1
a767 1
# period (for example, /usr/exim/configure.host.in.some.domain. If this file
d770 1
a770 1
CONFIGURE_FILE_USE_NODE=yes
d773 1
d787 7
a793 19
# The size of the delivery buffer: This specifies the size of buffer which is
# used when copying a message from the spool to a destination. The default
# value built into the source is 8192.

# DELIVER_BUFFER_SIZE=8192


# Included directors: These variables determine which individual director
# drivers are included in the Exim binary. There are no defaults; those that
# are wanted must be defined here by setting the appropriate variables to the
# value "yes". The actions of each director are described in a separate chapter
# in the manual. Including a director in the binary does not cause it to
# be used automatically. It has also to be specified in the runtime
# configuration file.

DIRECTOR_ALIASFILE=yes
DIRECTOR_FORWARDFILE=yes
DIRECTOR_LOCALUSER=yes
DIRECTOR_SMARTUSER=yes
d796 1
d802 1
a802 1
# DB_DIRECTORY_MODE=0750
d805 1
d809 1
a809 1
# DB_MODE=0640
d812 1
d817 1
a817 58
# DB_LOCKFILE_MODE=0640


# Cycling log files: this variable specifies the maximum number of old
# log files that are kept by the exicyclog log-cycling script.

EXICYCLOG_MAX=10


# Running Exim without it being root all the time: A uid and gid for Exim can
# be specified here, and this is strongly recommended. These values are
# compiled into the binary. It is possible to change them by settings in the
# runtime configuration file, but setting them here is preferred. If EXIM_UID
# is not defined, the default in the code is to run as root (unless specified
# otherwise at run time) except when doing local deliveries, when it always
# runs as the appropriate local user. Specifying 0 at run time has the effect
# of unsetting the values build into the binary.

# Setting EXIM_GID without setting EXIM_UID has no effect.

# The settings here must be numeric; the run time file allows names to
# be used. When this uid and gid are set, the Exim binary still has to be
# setuid root if local deliveries are to be performed or a listener on port
# 25 is to be run, but it gives up its privilege when possible. There is a
# trade-off between security and efficiency, controlled by the runtime
# "security" setting, which controls how privilege is released (setuid vs
# seteuid).

# EXIM_UID=
# EXIM_GID=


# Compiling the Exim monitor: If you want to compile the Exim monitor,
# a program that requires an X11 display, then EXIM_MONITOR should be
# set to the value "eximon.bin". Comment out this setting to disable
# compilation of the binary file that is run by the eximon script. The
# locations of various X11 directories for libraries and include files
# are defaulted in the OS/Makefile-Default file, and can be overridden
# in local OS-specific make files.

# EXIM_MONITOR=eximon.bin


# Compiling in support for embedded Perl: If you want to be able to
# use Perl code in Exim's string manipulation language and you have Perl
# (version 5.004 or later) installed, set EXIM_PERL to perl.o.

# EXIM_PERL=perl.o


# There are also three options which are used when compiling the Perl interface
# and when linking with Perl. The default values for these are placed
# automatically at the head of the Makefile by the script which builds it.
# However, if you want to override them, you can do so here.

# PERL_CC=
# PERL_CCOPTS=
# PERL_LIBS=
d820 1
d822 2
a823 2
# that Exim is prepared to process. The default setting is one megabyte. There
# is a limit in order to catch rogue mailers that might connect to your SMTP
d826 1
d831 1
d839 3
a841 36
# Exim log directory and files: Exim creates several log files inside a
# single log directory. You can define the directory and the form of the
# log file name here, by setting LOG_FILE_PATH to a path name containing one
# occurrence of %s. This will be replaced by one of the strings "main",
# "panic", or "reject" to form the final file name. For example, some
# installations may want something like this:

# LOG_FILE_PATH=/var/log/exim_%slog

# which results in files with names /var/log/exim_mainlog, etc. The directory
# in which the log files are placed must exist; Exim does not try to create
# it for itself. It is also your responsibility to ensure that Exim is capable
# of writing files using this path name. If you have defined EXIM_UID and
# EXIM_GID above, then that uid and gid must be able to create files in the
# directory you have specified.

# You can also configure Exim to use syslog, instead of or as well as log
# files, by settings such as these

# LOG_FILE_PATH=syslog
# LOG_FILE_PATH=syslog:/var/log/exim_%slog

# Do not include white space in such a setting as it messes up the building
# process.

# You do not have to define the log file path here; an option in the runtime
# configuration file can also set it, and that overrides any setting here.
# However, it is recommended that you set it here if it is a fixed path, so
# that it is available right from the start of Exim's execution. Otherwise,
# errors detected early on, for example errors in the configuration file,
# cannot be logged.

# If you do not set LOG_FILE_PATH here or in the runtime configuration, Exim
# creates a directory called "log" inside its spool directory (see
# SPOOL_DIRECTORY below) and uses that with filenames "mainlog", "paniclog",
# etc. Its mode defaults to 0750 but that can be changed here.
a844 1
# This value is used only when Exim creates the directory for itself.
d846 1
d853 4
a856 6
# Included file and database lookup methods. See the manual chapter entitled
# "File and database lookups" for discussion. DBM and lsearch (linear search)
# are included by default. LOOKUP_DNSDB does *not* refer to general mail
# routing using the DNS. It is for the specialist case of using the DNS as
# a general database facility (not common). For details of cdb files and the
# tools to build them, see http://www.pobox.com/~djb/cdb.html.
d858 1
a858 9
LOOKUP_DBM=yes
LOOKUP_LSEARCH=yes
LOOKUP_CDB=yes
# LOOKUP_DNSDB=yes
LOOKUP_NIS=yes
# LOOKUP_LDAP=yes
# LOOKUP_MYSQL=yes
# LOOKUP_NISPLUS=yes
# LOOKUP_PGSQL=yes
a859 5
# Additional libraries and include directories may be required for some
# lookup styles, e.g. LDAP, MYSQL or PGSQL. LOOKUP_LIBS is included only on
# the command for linking Exim itself, not on any auxiliary programs. You
# don't need to set LOOKUP_INCLUDE if the relevant directories are already
# specified in INCLUDE.
d861 5
a865 2
# LOOKUP_INCLUDE=-I /usr/local/ldap/include -I /usr/local/mysql/include -I /usr/local/include/postgresql
# LOOKUP_LIBS=-L/usr/local/lib -lldap -llber -lmysqlclient -lpq
d867 1
a867 12
# If you have set LDAP=yes, you should set LDAP_LIB_TYPE to indicate which LDAP
# library you have. Unfortunately, though most of their functions are the
# same, there are minor differences. Currently Exim knows about four LDAP
# libraries: the one from the University of Michigan (also known as OpenLDAP 1),
# OpenLDAP 2, the Netscape SDK library, and the library that comes with Solaris
# 7 onwards. Uncomment whichever of these you are using. 

# LDAP_LIB_TYPE=UMICHIGAN
# LDAP_LIB_TYPE=OPENLDAP1
# LDAP_LIB_TYPE=OPENLDAP2
# LDAP_LIB_TYPE=NETSCAPE
# LDAP_LIB_TYPE=SOLARIS
a868 2
# If you don't set any of these, Exim assumes the original University of
# Michigan (OpenLDAP 1) library.
d870 4
a873 3
# The TESTDB lookup is for performing tests on the handling of lookup
# results, and is not useful for general running. It should be included
# only when debugging the code of Exim.
d875 1
a875 1
# LOOKUP_TESTDB=yes
d878 1
d883 5
a887 5
# data for all the interfaces - it was designed of course in the days when a
# host rarely had more than three or four at most. Nowadays hosts can have
# very many virtual interfaces running on the same hardware. If you have more
# than 250 virtual interfaces, you will need to uncomment this setting and
# increase the value.
d892 1
d904 5
a908 9
# Identifying the daemon: When an Exim daemon starts up, it writes its pid to
# a file so that it can easily be identified. The path of the file can be
# specified here. It must contain precisely one occurrence of "%s". When
# a daemon is run on the default SMTP port, this is replaced with the null
# string, but when it is run with some explicit port specified, "%s" is
# replaced with the port number preceded by a dot. If a daemon is run with
# only one of -bd and -q<time>, then that option is added on to the end of
# the file name, allowing sites that run two separate daemons to distinguish
# them. Some installations may want something like this
d910 3
a912 22
PID_FILE_PATH=/var/run/exim%s.pid

# If PID_FILE_PATH is not defined, Exim writes a file in its spool directory
# (see SPOOL_DIRECTORY below) with the name "exim-daemon.pid" for the standard
# daemon, or "exim-daemon.<port>.pid" for a daemon listening on a non-standard
# port. If you run a daemon that does not have both the -bd and -q options,
# then whichever of the two options it does have is added to the file name,
# whether obtained from PID_FILE_PATH or by default.

# The pid file path does not have to be set here; it can be also be set by an
# option in the runtime configuration file, which takes precedence over any
# setting here.


# Included routers: These variables determine which individual router drivers
# are included in the Exim binary. There are no defaults; those that are
# wanted must be defined here by setting the appropriate variables to the value
# "yes". The actions of each router are described in a separate chapter
# in the manual. Including a router in the binary does not cause it to
# be used automatically. It has also to be specified in the runtime
# configuration file. Those routers that are *not* wanted must not be defined
# here at all - comment them out.
a913 4
ROUTER_DOMAINLIST=yes
ROUTER_IPLITERAL=yes
ROUTER_LOOKUPHOST=yes
ROUTER_QUERYPROGRAM=yes
d915 4
a918 1
# This one is very special-purpose, so is not included by default.
d920 1
a920 1
# ROUTER_IPLOOKUP=yes
d922 2
d925 4
a928 20
# The spool directory: This directory is where all the data for messages in
# transit is kept. There is no default in the source, so its location must be
# defined in a local compile-time configuration file, or in the runtime
# configuration. It is recommended (but not mandatory) that you define it here
# if it is a fixed path, especially if you have not defined LOG_FILE_PATH. Log
# files are then written in a sub-directory of the spool directory, and it is
# helpful to have this defined right from the start of execution so that, for
# example, errors in reading the runtime configuration file can be logged.

# Exim creates the spool directory if it does not exist. If a non-root uid and
# gid have been defined for Exim (either in this configuration file, or by the
# runtime configuration options), then this directory and all sub-directories
# and their files will be created with their owners and groups set to Exim's
# uid and gid.

# Many installations will want something like this:
SPOOL_DIRECTORY=/var/spool/exim

# Others may prefer to keep all Exim things under one directory:
# SPOOL_DIRECTORY=/usr/exim/spool
d931 1
d938 4
a941 19
# The mode of files on the input spool which hold the contents of message can
# be changed here. The default is 0600. If you have defined a uid and gid for
# Exim and want information from the spool to be available to anyone who is a
# member of the Exim group, change the value to 0640. This is particularly
# relevant if you are going to run the Exim monitor.

# SPOOL_MODE=0600


# If STDERR_FILE is defined then the -df command line option causes Exim to
# redirect stderr to the named file. This is useful for catching debugging
# output when starting Exim via inetd.

# STDERR_FILE=


# The appendfile transport can write messages as individual files in a number
# of formats. The code for three specialist formats, maildir, mailstore, and
# MBX, is included only when requested by the following settings:
d943 1
a943 3
SUPPORT_MAILDIR=yes
SUPPORT_MAILSTORE=yes
SUPPORT_MBX=yes
d946 1
d950 1
a950 1
# runtime option is required to cause the moving actually to occur. Such
d953 1
a953 72
SUPPORT_MOVE_FROZEN_MESSAGES=yes


# Support for PAM (Pluggable Authentication Modules), a facility
# which is available in the latest releases of Solaris and in some GNU/Linux
# distributions (see http://ftp.at.kernel.org/pub/linux/libs/pam/). The Exim
# support, which is intended for use in conjunction with the SMTP AUTH
# facilities, is included only when requested by the following setting:

# SUPPORT_PAM=yes

# You probably need to add -lpam to EXTRALIBS, and in some releases of
# GNU/Linux -ldl is also needed.


# Exim can be built to support the SMTP STARTTLS command, which implements
# Transport Layer Security using SSL (Secure Sockets Layer). To do this, you
# must install the OpenSSL library package. Exim contains no cryptographic
# code of its own. Uncomment the following lines if you want to build Exim
# with TLS support.

# SUPPORT_TLS=yes
# TLS_LIBS=-lssl -lcrypto

# If you are running Exim as a server, note that just building it with TLS
# support is not usually all you need to do. You normally need to set up a
# suitable certificate, and tell Exim about it by means of the tls_certificate
# and tls_privatekey runtime options. You also need to set tls_advertise_hosts
# to specify which hosts TLS support is advertised to. On the other hand,
# if you are running Exim only as a client, building it with TLS support
# is all you need to do.

# Additional libraries and include files are required for OpenSSL. The TLS_LIBS
# setting above assumes that the libraries are installed with all your other
# libraries. If they are in a special directory, you may need something like

# TLS_LIBS=-L/usr/local/openssl/lib -lssl -lcrypto

# TLS_LIBS is included only on the command for linking Exim itself, not on any
# auxiliary programs. If the include files are not in a standard place, you can
# set TLS_INCLUDE to specify where they are:

# TLS_INCLUDE=-I/usr/local/openssl/include/

# You don't need to set TLS_INCLUDE if the relevant directories are already
# specified in INCLUDE.


# Included transports: These variables determine which individual transport
# drivers are included in the Exim binary. There are no defaults; those that
# are wanted must be defined here by setting the appropriate variables to the
# value "yes". The actions of each transport are described in a separate chapter
# in the manual. Including a transport in the binary does not cause it to
# be used automatically. It has also to be specified in the runtime
# configuration file.

TRANSPORT_APPENDFILE=yes
TRANSPORT_AUTOREPLY=yes
TRANSPORT_PIPE=yes
TRANSPORT_SMTP=yes

# This one is special-purpose, and commonly not required, so do not include
# it by default.

# TRANSPORT_LMTP=yes


# TCP wrappers: If you want to use tcpwrappers from within Exim, uncomment
# this setting. See the manual section entitled "Use of tcpwrappers" in the
# chapter on building and installing Exim.

# USE_TCP_WRAPPERS=yes
d955 1
a955 1
# End of EDITME
@


1.8
log
@minor type in an example
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2000/12/07 15:27:10 peter Exp $
d224 2
@


1.7
log
@Update exim to version 3.20

See ChangeLog and documentation for a full list of bugs fixes and
new features. Release highlights include the addition of STARTTLS
extensions to SMTP and callback SMTP checks to verify sender addresses
on lightly loaded mail servers - prevent spam from made-up addresses.

This port includes the following flavors:

no_x11	- do not build eximon which requires X11
no_perl	- do not include perl support
no_tls	- do not include SSL/TLS support
mysql	- support mysql queries for lookups
pgsql	- support pgsql queries for lookups
ldap	- support ldap (OpenLDAP) queries for lookups

All these queries are independent.

Maintainer has been temporarily chaged to me for feedback, until
Sebastian is back and available to support the port.

Testing has been limited to i386.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2000/08/02 15:44:12 naddy Exp $
d351 1
a351 1
# LOOKUP_INCLUDE=-I /usr/local/ldap/include -I /usr/local/mysql/include -I /usr/local/pgsql/include
@


1.6
log
@- add no_x11 flavor
- make build respect CC and CFLAGS
- add HOMEPAGE
- move example configuration to ${PREFIX}/share/examples/
- add RCS IDs
ok peter@@
@
text
@d1 1
a1 1
# $OpenBSD$
d244 2
a245 3
.if !${FLAVOR:L:Mno_x11}
EXIM_MONITOR=eximon.bin
.endif
d252 1
a252 1
EXIM_PERL=perl.o
a336 1

d339 1
a341 1
LOOKUP_NIS=yes
d356 4
a359 4
# same, there is a difference in error handling. Currently Exim knows about
# three LDAP libraries: the one from the University of Michigan, the Netscape
# SDK library, and the library that comes with Solaris 7. Uncomment whichever
# of these you are using.
d362 2
d365 1
a365 1
# LDAP_LIB_TYPE=SOLARIS7
d367 2
a368 3
# If you don't set any of these, Exim applies a heuristic to distinguish the
# University of Michigan library, but it cannot distinguish between the other
# two.
d518 33
d563 5
@


1.5
log
@update to exim 3.14, ok turan

* bug fixes and new features release
* fix a tempnam() usage in the patch

No fake or flavours support - this may get done if I learn enough,
quickly enough. Will not build as a real package just now. Working on
it.
@
text
@d1 1
d244 1
a244 1

d246 1
@


1.5.2.1
log
@bring mail as of cut-over date into 2.7 branch
@
text
@a0 1
# $OpenBSD: Makefile,v 1.6 2000/08/02 15:44:12 naddy Exp $
d243 1
a243 1
.if !${FLAVOR:L:Mno_x11}
a244 1
.endif
@


1.4
log
@update to version 3.13. Previous version is not available in standard
ftp directory. Since no one let me know, I assume that I am the only
one using exim ?

Changes are in doc/ChangeLog and are all bug fixes - no new features.
@
text
@d296 9
d343 1
d346 2
a347 2
# lookup styles, e.g. LDAP or MYSQL. LOOKUP_LIBS is included only on the
# command for linking Exim itself, not on any auxiliary programs. You
d351 2
a352 2
# LOOKUP_INCLUDE=-I /usr/local/ldap/include -I /usr/local/mysql/include
# LOOKUP_LIBS=-L/usr/local/lib -lldap -llber -lmysqlclient
@


1.3
log
@Update exim to version 3.12

* Version 2.12 is no longer available on the primary or mirror sites

o The configuration file format has changed. For those upgrading,
  please see the documentation and consider using the upgrade script to
  help automate the config files change. This upgrade script is built as
  part of the source, but *not* installed - as it should only be needed
  once.

o The X11 eximon program will be built with this port/package - this
  assumes that X is installed. Would someone with more ports
  experience consider helping me here and writing the right kind of
  Makefile check to see if files/eximon.conf should be copied to the
  build directories.

o Perl support is included as standard as is support for additional
  mail delivery formats. These are not the default in vanilla exim 3.12

o Finally, another plea for help. This port does not make as usuable
  package, as I could not get support for the creation of a config file
  working. I intend to look at this further, but as the old version was
  completely useless, I felt it was better to get this in the tree
  sooner rather than later.
@
text
@d55 5
a59 2
# Consequently, it is not possible to have the # character present in any
# setting, but I can't think of any cases where this would be wanted.
d270 1
a270 1
# HEADER_MAXSIZE=(1024*1024)
@


1.2
log
@update to exim-2.12; peter.galbavy@@knowledge.com
@
text
@d37 2
a38 2
# dbm library package. Exim has support for ndbm, gdbm, and Berkeley db. By
# default it assumes ndbm; this often works with gdbm or db, provided they
d40 5
a44 5
# can also be configured to use the native calls for Berkeley db 1.85, and
# this is defaulted for some operating systems. The defaults are set in
# OS/Makefile-Default, and can be changed by putting things into an OS-specific
# Makefile, or indeed into the main Local/Makefile if Exim is being compiled
# for a single OS only.
d87 9
d125 6
d212 8
a219 5
# Running Exim not as root: A uid and gid for Exim can be specified here. These
# are compiled into the binary, but can be changed by settings in the runtime
# configuration file. If EXIM_UID is not defined, the default in the code is to
# run as root unless specified otherwise at run time. Specifying 0 at
# run time has the effect of unsetting the values build into the binary.
d241 1
a241 1
# EXIM_MONITOR=eximon.bin
d261 5
a265 4
# The maximum length of header line that Exim is prepared to process. There
# is a limit in order to catch rogue mailers out there that might connect to
# the SMTP port, start off a header line, and then just pump junk for ever
# at it. The default is 8192.
d267 1
a267 1
# HEADER_MAXLENGTH=8192
d281 2
a282 2
# "panic", "process" or "reject" to form the final file name. For example,
# some installations may want something like this:
d284 1
a284 1
LOG_FILE_PATH=/var/log/exim/%s.log
d325 1
a325 1
# LOOKUP_CDB=yes
d328 2
a329 1
# LOOKUP_NIS=yes
d332 24
d363 13
a405 6
# If you set PID_FILE_PATH, then it is your responsibility to ensure that
# Exim is capable of writing to the relevant files. If you have defined
# EXIM_UID and EXIM_GID above, then that uid/gid combination must be able to
# create and write to the files. If the attempt to open the file fails, Exim
# just refrains from trying to write the data.

d478 24
a501 3
# SUPPORT_MAILDIR=yes
# SUPPORT_MAILSTORE=yes
# SUPPORT_MBX=yes
d518 3
a520 1
# TCP wrappers:
@


1.1
log
@Initial revision
@
text
@d10 25
a34 20
# Blank lines and lines starting with # are ignored. It is also permitted to
# use the # character to add a comment to a setting, for example
#
# EXIM_GID=42   # the "mail" group
#
# Consequently, it is not possible to have the # character present in any
# setting, but I can't think of any cases where this would be wanted.

# Things that depend on the operating system have default settings in files
# called OS/Makefile-<osname>. These can be overridden by creating files
# called Local/Makefile-<osname>. In particular, the location of the X11
# libraries is something that is quite variable between different versions
# of the same operation system (and indeed there are different versions of
# X11 as well, of course). The three settings concerned here are X11, XINCLUDE,
# and XLFLAGS (linking flags). There are defaults in OS/Makefile-Default which
# are overridden for some operating systems in the OS/Makefile-<osname> file.
# If these are not right for you, put appropriate settings into a file called
# Local/Makefile-<osname>. In all cases "<osname>" stands for the name of
# your operating system - look at the names in the OS directory to see which
# names are recognized.
d41 4
a44 4
# there are some locking actions that can be varied by changing the
# configuration. The defaults are set in OS/Makefile-Default, and can be
# changed by putting things into an OS-specific Makefile, or indeed into the
# main Local/Makefile if Exim is being compiled for a single OS only.
d48 9
d60 27
d97 7
a103 2
# The info directory: This variable defines where the exim info file will be
# installed by "make install" or "exim_intall".
a107 10
# The following commands live in different places in some OS. The OS-specific
# files should normally point to the right place, but they can be overridden
# here if necessary.

# CHOWN_COMMAND=/usr/bin/chown
# CHGRP_COMMAND=/usr/bin/chgrp
# MV_COMMAND=/bin/mv
# RM_COMMAND=/bin/rm


d122 1
a122 1
CONFIGURE_FILE=/usr/local/etc/exim/configure
d133 1
a133 1
# CONFIGURE_FILE_USE_NODE=yes
d184 7
d223 18
a240 1
EXIM_MONITOR=eximon.bin
d265 1
a265 1
LOG_FILE_PATH=/var/log/exim_%slog
d296 23
d335 4
a338 2
# replaced with the port number preceded by a dot. Some installations may
# want something like this
d381 12
a392 13
# defined in a local configuration file, or in the runtime configuration. It
# is recommended that you define it here if it is a fixed path, especially if
# you have not defined LOG_FILE_PATH. Log files are then written in a sub-
# directory of the spool directory, and it is helpful to have this defined
# right from the start of execution so that, for example, errors in reading
# the runtime configuration file can be logged.

# Exim creates the spool directory if it does not exist, using the mode
# required for the sub-directory that it is trying to create at the time. If a
# non-root uid and gid have been defined for Exim (either in this configuration
# file, or by the runtime configuration options), then this directory and all
# sub-directories and their files will be created with their owners and groups
# set to Exim's uid and gid.
d395 1
a395 1
# SPOOL_DIRECTORY=/var/spool/exim
a399 2
SPOOL_DIRECTORY=/var/spool/exim

d423 9
a444 4
# The Debug transport is special, and should be included only when low-level
# debugging is being performed. In conjunction with the "debug_transport"
# configuration option, it permits the subversion of all mail deliveries to
# a given file.
d446 3
a448 1
# TRANSPORT_DEBUG=
@


1.1.1.1
log
@initial ports subsystem from joey
@
text
@@
