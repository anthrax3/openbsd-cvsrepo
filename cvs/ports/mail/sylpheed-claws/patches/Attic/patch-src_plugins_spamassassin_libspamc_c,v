head	1.2;
access;
symbols
	OPENBSD_3_7:1.1.0.8
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2005.04.12.20.29.26;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2003.08.31.02.32.03;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to 1.9.6 (GTK2) and major overhaul.
From: Jim Geovedi <jim@@corebsd.or.id> with some assistance by yours truly.
@
text
@$OpenBSD: patch-src_plugins_spamassassin_libspamc_c,v 1.1 2003/08/31 02:32:03 avsm Exp $
--- src/plugins/spamassassin/libspamc.c.orig	2003-08-28 13:01:07.000000000 -0400
+++ src/plugins/spamassassin/libspamc.c	2003-08-28 13:04:07.000000000 -0400
@@@@ -595,7 +595,7 @@@@ static int
 _handle_spamd_header (struct message *m, int flags, char *buf, int len)
 {
     char is_spam[6];
-    char s_str[20], t_str[20];
+    char s_str[21], t_str[21];
 
     /* Feb 12 2003 jm: actually, I think sccanf is working fine here ;)
      * let's stick with it for this parser.
@@@@ -604,8 +604,8 @@@@ _handle_spamd_header (struct message *m,
      */
     if (sscanf(buf, "Spam: %5s ; %20s / %20s", is_spam, s_str, t_str) == 3)
     {
-	m->score = _locale_safe_string_to_float (s_str, 20);
-	m->threshold = _locale_safe_string_to_float (t_str, 20);
+	m->score = _locale_safe_string_to_float (s_str, 21);
+	m->threshold = _locale_safe_string_to_float (t_str, 21);
 
 	/* Format is "Spam: x; y / x" */
 	m->is_spam=strcasecmp("true", is_spam) == 0 ? EX_ISSPAM: EX_NOTSPAM;
@


1.1
log
@bump buffer sizes of spamd header scanning to plug an off-by-one
naddy@@ ok
@
text
@d1 1
a1 1
$OpenBSD$
@

