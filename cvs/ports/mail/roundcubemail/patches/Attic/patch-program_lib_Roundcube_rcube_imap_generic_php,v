head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2015.10.22.13.06.23;	author sthen;	state dead;
branches;
next	1.3;
commitid	gYkfget4wGGJh4Sk;

1.3
date	2015.10.21.16.48.50;	author sthen;	state Exp;
branches;
next	1.2;
commitid	4q8C0Gxt9M4hMqxB;

1.2
date	2013.05.24.15.30.05;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2013.05.03.10.23.12;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove the STREAM_CRYPTO_METHOD_TLS_CLIENT patch from previous commit
now that it's fixed in the PHP package instead.

zap stray ; spotted by ajacoutot.
@
text
@$OpenBSD: patch-program_lib_Roundcube_rcube_imap_generic_php,v 1.3 2015/10/21 16:48:50 sthen Exp $

PHP's STREAM_CRYPTO_METHOD_TLS_CLIENT is TLSv1.0 only "for BC with pre-5.6".
There's a STREAM_CRYPTO_METHOD_TLS_ANY_CLIENT but it doesn't work, so use
STREAM_CRYPTO_METHOD_SSLv23_CLIENT which (at least with libressl) is TLS-only
anyway.

Thanks PHP.

--- program/lib/Roundcube/rcube_imap_generic.php.orig	Wed Oct 21 17:34:36 2015
+++ program/lib/Roundcube/rcube_imap_generic.php	Wed Oct 21 17:35:50 2015
@@@@ -910,7 +910,7 @@@@ class rcube_imap_generic
                 return false;
             }
 
-            if (!stream_socket_enable_crypto($this->fp, true, STREAM_CRYPTO_METHOD_TLS_CLIENT)) {
+            if (!stream_socket_enable_crypto($this->fp, true, STREAM_CRYPTO_METHOD_SSLv23_CLIENT)) {
                 $this->setError(self::ERROR_BAD, "Unable to negotiate TLS");
                 $this->closeConnection();
                 return false;
@


1.3
log
@Patch roundcubemail to use STREAM_CRYPTO_METHOD_SSLv23_CLIENT when making an
imap connection.

PHP's STREAM_CRYPTO_METHOD_TLS_CLIENT is TLSv1.0 only "for BC with pre-5.6".
There's a STREAM_CRYPTO_METHOD_TLS_ANY_CLIENT but it doesn't seem to actually
work, so use STREAM_CRYPTO_METHOD_SSLv23_CLIENT which (at least with libressl)
is TLS-only anyway.

Thanks PHP.

While there, add an explicit note to the README about the requirement to
disable suhosin session encryption now that we're using the extension in the
standard PHP packages.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to roundcube 0.9.1
@
text
@d1 1
a1 1
$OpenBSD: patch-program_lib_Roundcube_rcube_imap_generic_php,v 1.1 2013/05/03 10:23:12 sthen Exp $
d3 4
a6 2
9712d2240a Fix handling untagged responses in IMAP FETCH - "could not
load message" error (#1489074)
d8 6
a13 18
--- program/lib/Roundcube/rcube_imap_generic.php.orig	Fri May  3 11:02:51 2013
+++ program/lib/Roundcube/rcube_imap_generic.php	Fri May  3 11:03:21 2013
@@@@ -2447,6 +2447,7 @@@@ class rcube_imap_generic
         $key     = $this->nextTag();
         $request = $key . ($is_uid ? ' UID' : '') . " FETCH $id ($fetch_mode.PEEK[$part]$partial)";
         $result  = false;
+        $found   = false;
 
         // send request
         if (!$this->putLine($request)) {
@@@@ -2466,19 +2467,26 @@@@ class rcube_imap_generic
                 break;
             }
 
-            if (!preg_match('/^\* ([0-9]+) FETCH (.*)$/', $line, $m)) {
+            // skip irrelevant untagged responses (we have a result already)
+            if ($found || !preg_match('/^\* ([0-9]+) FETCH (.*)$/', $line, $m)) {
                 continue;
d16 5
a20 30
             $line = $m[2];
-            $last = substr($line, -1);
 
             // handle one line response
-            if ($line[0] == '(' && $last == ')') {
+            if ($line[0] == '(' && substr($line, -1) == ')') {
                 // tokenize content inside brackets
-                $tokens = $this->tokenizeResponse(preg_replace('/(^\(|\$)/', '', $line));
-                $result = count($tokens) == 1 ? $tokens[0] : false;
+                $tokens = $this->tokenizeResponse(preg_replace('/(^\(|\)$)/', '', $line));
 
+                for ($i=0; $i<count($tokens); $i+=2) {
+                    if (preg_match('/^(BODY|BINARY)/i', $token)) {
+                        $result = $tokens[$i+1];
+                        $found  = true;
+                        break;
+                    }
+                }
+
                 if ($result !== false) {
                     if ($mode == 1) {
                         $result = base64_decode($result);
@@@@ -2495,6 +2503,7 @@@@ class rcube_imap_generic
             else if (preg_match('/\{([0-9]+)\}$/', $line, $m)) {
                 $bytes = (int) $m[1];
                 $prev  = '';
+                $found = true;
 
                 while ($bytes > 0) {
                     $line = $this->readLine(8192);
@


1.1
log
@backport some Roundcube fixes from release-0.9 tree in git

- Fix list page reset when viewing a message in Larry skin
- Fix unintentional messages list jumps on click in Internet Explorer
- Fix handling untagged responses in IMAP FETCH - "could not load message" error
- Escape user input values when used in eval() in ldap
- Fix various text wrapping and quoting issues
- Fix possible collision in generated thumbnail cache key
@
text
@d1 1
a1 1
$OpenBSD$
@

