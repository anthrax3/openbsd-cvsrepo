head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.2
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.8
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.8
date	2016.11.17.21.56.59;	author sthen;	state Exp;
branches;
next	1.7;
commitid	IEwno2ilSv0dqlGM;

1.7
date	2016.04.29.09.36.59;	author sthen;	state Exp;
branches
	1.7.2.1;
next	1.6;
commitid	0uf08LtOvazFQ56W;

1.6
date	2015.10.22.13.06.23;	author sthen;	state Exp;
branches;
next	1.5;
commitid	gYkfget4wGGJh4Sk;

1.5
date	2015.10.21.16.48.50;	author sthen;	state Exp;
branches;
next	1.4;
commitid	4q8C0Gxt9M4hMqxB;

1.4
date	2015.09.10.09.25.56;	author sthen;	state Exp;
branches;
next	1.3;
commitid	iVnGSyWL6AMLjVLz;

1.3
date	2013.05.05.19.24.13;	author jasper;	state Exp;
branches
	1.3.12.1;
next	1.2;

1.2
date	2013.04.16.13.37.23;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2012.01.19.13.53.48;	author sthen;	state Exp;
branches;
next	;

1.3.12.1
date	2015.12.27.22.13.56;	author sthen;	state Exp;
branches;
next	;
commitid	QEdymp3gzF1BNCjT;

1.7.2.1
date	2016.11.29.11.50.08;	author sthen;	state Exp;
branches;
next	1.7.2.2;
commitid	yPDLQZQF5zTUEjqJ;

1.7.2.2
date	2017.03.11.14.27.41;	author sthen;	state Exp;
branches;
next	;
commitid	CwcM4NnXSply8Bqk;


desc
@@


1.8
log
@Install a sample /var/www/roundcubemail/db/ directory with valid permissions,
for sqlite3 users. Philippe Leledy reported that it had to be created manually.

While there, add a sample nginx config section to the README.
@
text
@$OpenBSD: README,v 1.7 2016/04/29 09:36:59 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Standard Roundcube installation/upgrade
=======================================
See ${INSTDIR}/INSTALL and ${INSTDIR}/UPGRADING
for more information.

OpenBSD's standard PHP package uses the Suhosin extension. Disable session
encryption by adding "suhosin.session.encrypt = false" to ${SYSCONFDIR}/php-${MODPHP_VERSION}.ini.

Database access is done via PDO. If you are using MySQL or PostgreSQL,
make sure the the relevant package (php-pdo_mysql or php-pdo_pgsql) is
installed and enabled.


Setup with Apache
=================
With Apache, AllowOverride settings are required on the ${INSTDIR}
directory. You can configure this as follows:

# ln -s ../modules.sample/roundcubemail.conf \
        /var/www/conf/modules
# /etc/rc.d/apache2 restart


Setup with other web servers
============================
Review the .htaccess files as you may need to use them as a template to
adjust various PHP settings in ${SYSCONFDIR}/php-${MODPHP_VERSION}.ini

With clients using certain versions of Internet Explorer, cache-control
headers must be adjusted for file downloads to work correctly over HTTPS.
Roundcube does this automatically but requires that the HTTPS variable
is passed to PHP. This is normally set by Apache mod_ssl, but not by
other servers; it will show as an environment variable in a phpinfo()
call if you want to check.

If this is not present it will need adding as a FastCGI parameter.
For nginx, you can do this by setting 'fastcgi_param HTTPS on' in the
appropriate location{} block for HTTPS.

Sample NGINX configuration
--------------------------
The maintainer uses this configuration with NGINX to provide webmail
service at the root of a host (e.g. https://mail.example.org/).

server {
    server_name mail.example.org;
    listen 80;
    listen [::]:80;
    location /.well-known/acme-challenge { root /var/www/letsencrypt/; }
    location / { return 301 https://mail.example.org$request_uri; }
}

server {
    server_name mail.example.org;
    root /var/www/roundcubemail/public_html;
    index index.php;

    ssl_certificate /etc/letsencrypt/live/mail.example.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mail.example.org/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/mail.example.org/fullchain.pem;
    add_header Strict-Transport-Security max-age=15552000;
    include ssl_params;

    location /.well-known/acme-challenge { root /var/www/letsencrypt/; }
    location ~* \.php$ { 
        try_files       $uri =404;
        fastcgi_pass    unix:run/php-fpm.sock;
        fastcgi_param   SCRIPT_FILENAME $document_root/$fastcgi_script_name;
        fastcgi_param   HTTPS on;
        include         fastcgi_params;
    }
}
@


1.7
log
@cleanup apache1 and some other old bits
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.6 2015/10/22 13:06:23 sthen Exp $
d45 34
@


1.7.2.1
log
@MFC update to roundcubemail-1.2.3 (and sync README changes etc).

Note that the update to 1.2.2 added a new directory containing index.php and
various symlinks to the only files which need to be served directly; it is
strongly recommended that you use this new /var/www/roundcubemail/public_html
dir instead of /var/www/roundcubemail as your document root. This simplifies
your webserver configuration to exclude non-public files - logs etc - and is
especially helpful if using a web server that does not use .htaccess.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.8 2016/11/17 21:56:59 sthen Exp $
a44 34

Sample NGINX configuration
--------------------------
The maintainer uses this configuration with NGINX to provide webmail
service at the root of a host (e.g. https://mail.example.org/).

server {
    server_name mail.example.org;
    listen 80;
    listen [::]:80;
    location /.well-known/acme-challenge { root /var/www/letsencrypt/; }
    location / { return 301 https://mail.example.org$request_uri; }
}

server {
    server_name mail.example.org;
    root /var/www/roundcubemail/public_html;
    index index.php;

    ssl_certificate /etc/letsencrypt/live/mail.example.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mail.example.org/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/mail.example.org/fullchain.pem;
    add_header Strict-Transport-Security max-age=15552000;
    include ssl_params;

    location /.well-known/acme-challenge { root /var/www/letsencrypt/; }
    location ~* \.php$ { 
        try_files       $uri =404;
        fastcgi_pass    unix:run/php-fpm.sock;
        fastcgi_param   SCRIPT_FILENAME $document_root/$fastcgi_script_name;
        fastcgi_param   HTTPS on;
        include         fastcgi_params;
    }
}
@


1.7.2.2
log
@update to roundcubemail-1.2.4
@
text
@@


1.6
log
@remove the STREAM_CRYPTO_METHOD_TLS_CLIENT patch from previous commit
now that it's fixed in the PHP package instead.

zap stray ; spotted by ajacoutot.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.5 2015/10/21 16:48:50 sthen Exp $
d15 3
a17 2
If upgrading from a version before 0.9, note that database access is now
done via PDO.
a18 9
If you are using MySQL or PostgreSQL you will need to ensure that the
relevant package (php-pdo_mysql or php-pdo_pgsql) is installed and
enabled. If you are using SQLite, you will need to convert the
database from sqlite2 to sqlite3, for example (adjusting filenames
if necessary):

# cd /var/www/roundcubemail/db
# mv sqlite.db old_sqlite.db
# sqlite old_sqlite.db .dump | sqlite3 sqlite.db
d20 2
a21 3

Setup with apache-httpd-openbsd from packages
=============================================
d27 1
a27 1
# /etc/rc.d/httpd restart
@


1.5
log
@Patch roundcubemail to use STREAM_CRYPTO_METHOD_SSLv23_CLIENT when making an
imap connection.

PHP's STREAM_CRYPTO_METHOD_TLS_CLIENT is TLSv1.0 only "for BC with pre-5.6".
There's a STREAM_CRYPTO_METHOD_TLS_ANY_CLIENT but it doesn't seem to actually
work, so use STREAM_CRYPTO_METHOD_SSLv23_CLIENT which (at least with libressl)
is TLS-only anyway.

Thanks PHP.

While there, add an explicit note to the README about the requirement to
disable suhosin session encryption now that we're using the extension in the
standard PHP packages.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.4 2015/09/10 09:25:56 sthen Exp $
d13 1
a13 1
encryption by adding "suhosin.session.encrypt = false;" to ${SYSCONFDIR}/php-${MODPHP_VERSION}.ini.
@


1.4
log
@"httpd from OpenBSD base system" is no longer apache, fix readme
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.3 2013/05/05 19:24:13 jasper Exp $
d11 3
@


1.3
log
@modules.sample/ always lives in /var/www, so no need for ${PREFIX} here.

as discussed with aja@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.2 2013/04/16 13:37:23 sthen Exp $
d26 2
a27 2
Setup with httpd from OpenBSD base system
=========================================
@


1.3.12.1
log
@MFC update to roundcubemail-1.1.4, fixes potential path traversal vulnerability
https://www.htbridge.com/advisory/HTB23283 "Although the vulnerability is not
fully disclosed yet, the attack scenario requires an active Roundcube account
as well as write privileges on the same host Roundcube is served from (without
open_basedir protection)." Also adds protection against brute-force attacks.

http://trac.roundcube.net/wiki/Changelog#RELEASE1.1.4
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.6 2015/10/22 13:06:23 sthen Exp $
a11 3
OpenBSD's standard PHP package uses the Suhosin extension. Disable session
encryption by adding "suhosin.session.encrypt = false" to ${SYSCONFDIR}/php-${MODPHP_VERSION}.ini.

d26 2
a27 2
Setup with apache-httpd-openbsd from packages
=============================================
@


1.2
log
@Update to Roundcube 0.9.

Note that database access is now done via PDO, and that for users of
SQLite this requires a change to sqlite3 - see the package readme for
update instructions.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1 2012/01/19 13:53:48 sthen Exp $
d32 1
a32 1
        ${PREFIX}/conf/modules
@


1.1
log
@- move MESSAGE to README
- add details about running under alternative web servers
@
text
@d1 1
a1 1
$OpenBSD: README.template,v 1.4 2011/06/02 13:44:40 ajacoutot Exp $
d7 19
d35 1
a50 5

Standard Roundcube installation/upgrade
=======================================
See ${INSTDIR}/INSTALL and ${INSTDIR}/UPGRADING
for more information.
@

