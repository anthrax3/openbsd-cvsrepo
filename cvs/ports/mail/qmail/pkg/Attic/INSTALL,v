head	1.5;
access;
symbols
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	kevlo_2000-Jan-28:1.1.1.1
	kevlo:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2001.08.14.20.20.57;	author camield;	state dead;
branches;
next	1.4;

1.4
date	2000.09.15.12.08.20;	author camield;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.04.11.57.45;	author camield;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.23.10.26.14;	author camield;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.28.12.43.40;	author kevlo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.01.28.12.43.40;	author kevlo;	state Exp;
branches;
next	;


desc
@@


1.5
log
@license does not permit modification, to allow for proper
integration in OpenBSD
@
text
@#!/bin/sh
# $OpenBSD: INSTALL,v 1.4 2000/09/15 12:08:20 camield Exp $
#
# Written by Camiel Dobbelaar <cd@@sentia.nl>, 2000
# This file is in the public domain.

PATH=/bin:/usr/bin:/sbin:/usr/sbin
QMAILDIR=${PREFIX:-$PKG_PREFIX}
NOSHELL=/sbin/nologin

# These may clash with already installed uids/gids.
# They MUST be fixed though, because qmail hardwires them.

QMAILGID=2850
NOFILESGID=32750

ALIASUID=2849
QMAILDUID=2850
QMAILLUID=2851
QMAILPUID=2852
QMAILQUID=2853
QMAILRUID=2854
QMAILSUID=2855

confirm() {
	set -o noglob
	echo -n "[Y] "
	read resp
	case "$resp" in
		y*|Y*|"")
			return
			;;
		*)
			echo "Aborting"
			exit 1
			;;
	esac
	set +o noglob
}

create_group()
{
        GROUP=$1
        GID=$2

        echo -n "Checking group '$GROUP' with gid '$GID': "

	groupinfo -e $GROUP && {
               	echo "OK, group already exists, but gid not checked." >&2
               	return
	}
	groupinfo -e $GID && {
                echo "ERR, gid taken." >&2
                exit 1
	}
	echo -n "group does not exist. Create? "
	confirm
	groupadd -g $GID $GROUP || {
                echo "ERR, cannot append to /etc/group" >&2
                exit 1
	}
        echo "OK, created succesfully." >&2
        return
}

create_user()
{
        NAME=$1;  UID=$2;  GID=$3
        GECOS=$4; HOME=$5; SHELL=$6
        
        echo -n "Checking user '$NAME' with uid '$UID': "
       
	userinfo -e $NAME && {
                echo "OK, user already exists, but uid not checked." >&2
                return
	}
	userinfo -e $UID && {
                echo "ERR, uid taken." >&2
                exit 1
	}
	echo -n "user does not exist. Create? "
	confirm
        useradd -c $GECOS -d $HOME -g $GID -s $SHELL -u $UID $NAME || {
                echo "ERR, cannot add user to database" >&2
                exit 1
	}
        echo "OK, created successfully." >&2
        return
}

do_advice()
{
	echo "----------------"
	echo "qmail is installed"
	echo "----------------"
	echo
	echo "qmail does NOT automatically work yet at this point."
	echo
	echo "To activate qmail, please read $QMAILDIR/doc/INSTALL"
	echo "Steps 1, 2, 3 and 5 have been done by this port/package."
	echo "The config command from step 4 can be found in $QMAILDIR/setup"
	echo 
	echo "It is recommended to use tcpserver instead of inetd for qmail-smtpd"
	echo "and/or qmail-pop3d. It is installed as a dependency."
	echo
	echo "If you want to replace Sendmail on your system, be sure to look"
	echo "at mailwrapper(8). Here's a sample /etc/mailer.conf:"
	echo
	echo "sendmail        $QMAILDIR/bin/sendmail"
	echo "send-mail       $QMAILDIR/bin/sendmail"
	echo "mailq           $QMAILDIR/bin/qmail-qread"
	echo " # you will need fastforward for newaliases to work"
	echo "newaliases      $QMAILDIR/bin/newaliases"
	echo "hoststat        /usr/bin/true"
	echo "purgestat       /usr/bin/true"
	echo
	echo "Enjoy qmail!"
}

do_aliases()
{
	cd $QMAILDIR/alias
	touch .qmail-postmaster	.qmail-mailer-daemon .qmail-root	
	chmod 644 .qmail-postmaster .qmail-mailer-daemon .qmail-root	
}
		
case $2 in
    PRE-INSTALL)
	create_group qmail   $QMAILGID
	create_group nofiles $NOFILESGID
	create_user alias  $ALIASUID  $NOFILESGID qmail $QMAILDIR/alias $NOSHELL
	create_user qmaild $QMAILDUID $NOFILESGID qmail $QMAILDIR       $NOSHELL
	create_user qmaill $QMAILLUID $NOFILESGID qmail $QMAILDIR       $NOSHELL
	create_user qmailp $QMAILPUID $NOFILESGID qmail $QMAILDIR       $NOSHELL
	create_user qmailq $QMAILQUID $QMAILGID   qmail $QMAILDIR       $NOSHELL
	create_user qmailr $QMAILRUID $QMAILGID   qmail $QMAILDIR       $NOSHELL
	create_user qmails $QMAILSUID $QMAILGID   qmail $QMAILDIR       $NOSHELL
	;;
    POST-INSTALL)
	# Install will abort because it cannot install all files.
	# It will make qmail/queue though, which is what we want.
	sh -c "$QMAILDIR/setup/install >/dev/null 2>&1"
	do_aliases
	do_advice
	;;
    *)
	echo "Usage: `basename $0` distname <PRE-INSTALL|POST-INSTALL>" >&2
	exit 1
	;;
esac

exit 0
@


1.4
log
@- convert wonky shellcode to [user|group][add|info] utils
- add RCS id to PLIST
@
text
@d2 1
a2 1
# $OpenBSD: INSTALL,v 1.3 2000/03/04 11:57:45 camield Exp $
@


1.3
log
@- mark unbroken, qmail now asks nicely before creating users or groups
- IS_INTERACTIVE= "if qmail users/groups do not exist yet"
@
text
@d2 1
a2 1
# $OpenBSD: INSTALL,v 1.2 2000/02/23 10:26:14 camield Exp $
a40 9
# create_group and create_user work like this:
# 1) if user or group already exist: return (success)
# 2) if uid or gid already exist: abort with exitcode 1 (fail)
# 3) create user or group: abort with exitcode 1 if this operation fails,
#    otherwise return (success) 
# BUGS:
# - no argument checking
# - step 1) could do additional checking on the other password/group field(s)

d48 5
a52 6
        if grep -q "^$GROUP:" /etc/group; then
                echo "OK, group already exists." >&2
                return
        fi
        cut -f3 -d':' /etc/group | grep -qw $GID
        if [ $? == 0 ]; then
d55 1
a55 1
        fi
d58 1
a58 1
        echo "$GROUP:*:$GID:" 2>/dev/null >>/etc/group || {
d72 3
a74 3
        
        if grep -q "^$NAME:" /etc/passwd; then
                echo "OK, user already exists." >&2
d76 2
a77 3
        fi
        cut -f3 -d':' /etc/passwd | grep -qw $UID
        if [ $? == 0 ]; then
d80 1
a80 1
        fi
d83 1
a83 1
        chpass -l -a "$NAME:*:$UID:$GID::::$GECOS:$HOME:$SHELL" 2>/dev/null || {
d107 1
a107 2
	echo "at mailwrapper(8)."
	echo "Here's a sample /etc/mailer.conf:"
a113 1
	echo " # not sure about these, mail corrections to this port's maintainer"
@


1.2
log
@- mkdir, cp -> INSTALL_* macros
- clean-up pkg/INSTALL (qmail now builds as non-root, if qmail accounts exist)
  The mysql and postfix ports could also use the create_user and/or
  create_group shell functions, as they do a bit more error-checking.
- add obsd tags to INSTALL/DEINSTALL
- fix mastersite
- explicit warning that qmail does not automagically work after install
@
text
@d2 1
a2 1
# $OpenBSD$
d11 3
d25 16
d55 1
a55 1
        echo -n "creating group '$GROUP' with gid '$GID': "
d58 1
a58 1
                echo "OK, group already exists" >&2
d63 1
a63 1
                echo "ERR, gid taken" >&2
d66 2
d72 1
a72 1
        echo "OK, created succesfully" >&2
d81 1
a81 1
        echo -n "creating user '$NAME' with uid '$UID': "
d84 1
a84 1
                echo "OK, user already exists" >&2
d89 1
a89 1
                echo "ERR, uid taken" >&2
d92 2
d98 1
a98 1
        echo "OK, created successfully" >&2
@


1.1
log
@Initial revision
@
text
@d2 1
d4 2
a5 1
# Inspired by INSTALL from postfix port by dugsong@@
d9 1
d11 2
a12 4
# Unlikely, but not impossible: these UIDs may clash
# with already installed UIDs.
# Workaround: make these users and groups yourself
# before installing the port or package.
d14 1
a14 1
ALIASUID=2750
a20 2
QMAILGID=2850
NOFILESGID=32750
d22 34
a55 3
# set up qmail user/group accounts.
#
do_accts()
d57 20
a76 93
    # Create qmail and nofiles group.
    # qmail
    line=`egrep '^qmail:' /etc/group`
    if [ "$line" != "" ]; then
	echo -n "-> Using "
        QMAILGID=`echo $line | cut -f3 -d:`
    else
        echo -n "-> Creating "
        echo "qmail:*:${QMAILGID}:" >> /etc/group
    fi
    echo "group 'qmail', gid $QMAILGID"
    # nofiles
    line=`egrep '^nofiles:' /etc/group`
    if [ "$line" != "" ]; then
	echo -n "-> Using "
        NOFILESGID=`echo $line | cut -f3 -d:`
    else
        echo -n "-> Creating "
        echo "nofiles:*:${NOFILESGID}:" >> /etc/group
    fi
    echo "group 'nofiles', gid $NOFILESGID"

    # Create users alias, qmaild, qmaill, qmailp, qmailq, qmailr, qmails
    # alias
    line=`egrep '^alias:' /etc/passwd`
    if [ "$line" != "" ]; then
	echo -n "-> Using "
        ALIASUID=`echo $line | cut -f3 -d:`
    else
        echo -n "-> Creating "
        chpass -l -a "alias:*:${ALIASUID}:${NOFILESGID}::::QMAIL:${QMAILDIR}/alias:/sbin/nologin"
    fi
    echo "account 'alias', uid $ALIASUID, gid $NOFILESGID"
    # qmaild
    line=`egrep '^qmaild:' /etc/passwd`
    if [ "$line" != "" ]; then
	echo -n "-> Using "
        QMAILDUID=`echo $line | cut -f3 -d:`
    else
        echo -n "-> Creating "
        chpass -l -a "qmaild:*:${QMAILDUID}:${NOFILESGID}::::QMAIL:${QMAILDIR}:/sbin/nologin"
    fi
    echo "account 'qmaild', uid $QMAILDUID, gid $NOFILESGID"
    # qmaill
    line=`egrep '^qmaill:' /etc/passwd`
    if [ "$line" != "" ]; then
	echo -n "-> Using "
        QMAILLUID=`echo $line | cut -f3 -d:`
    else
        echo -n "-> Creating "
        chpass -l -a "qmaill:*:${QMAILLUID}:${NOFILESGID}::::QMAIL:${QMAILDIR}:/sbin/nologin"
    fi
    echo "account 'qmaill', uid $QMAILLUID, gid $NOFILESGID"
    # qmailp
    line=`egrep '^qmailp:' /etc/passwd`
    if [ "$line" != "" ]; then
	echo -n "-> Using "
        QMAILPUID=`echo $line | cut -f3 -d:`
    else
        echo -n "-> Creating "
        chpass -l -a "qmailp:*:${QMAILPUID}:${NOFILESGID}::::QMAIL:${QMAILDIR}:/sbin/nologin"
    fi
    echo "account 'qmailp', uid $QMAILPUID, gid $NOFILESGID"
    # qmailq
    line=`egrep '^qmailq:' /etc/passwd`
    if [ "$line" != "" ]; then
	echo -n "-> Using "
        QMAILQUID=`echo $line | cut -f3 -d:`
    else
        echo -n "-> Creating "
        chpass -l -a "qmailq:*:${QMAILQUID}:${QMAILGID}::::QMAIL:${QMAILDIR}:/sbin/nologin"
    fi
    echo "account 'qmailq', uid $QMAILQUID, gid $QMAILGID"
    # qmailr
    line=`egrep '^qmailr:' /etc/passwd`
    if [ "$line" != "" ]; then
	echo -n "-> Using "
        QMAILRUID=`echo $line | cut -f3 -d:`
    else
        echo -n "-> Creating "
        chpass -l -a "qmailr:*:${QMAILRUID}:${QMAILGID}::::QMAIL:${QMAILDIR}:/sbin/nologin"
    fi
    echo "account 'qmailr', uid $QMAILRUID, gid $QMAILGID"
    # qmails
    line=`egrep '^qmails:' /etc/passwd`
    if [ "$line" != "" ]; then
        QMAILSUID=`echo $line | cut -f3 -d:`
	echo -n "-> Using "
    else
        echo -n "-> Creating "
        chpass -l -a "qmails:*:${QMAILSUID}:${QMAILGID}::::QMAIL:${PREFIX}:/sbin/nologin"
    fi
    echo "account 'qmails', uid $QMAILSUID, gid $QMAILGID"
d85 2
d112 3
a114 6
	touch ${QMAILDIR}/alias/.qmail-postmaster	\
	      ${QMAILDIR}/alias/.qmail-mailer-daemon	\
	      ${QMAILDIR}/alias/.qmail-root	
	chmod 644 ${QMAILDIR}/alias/.qmail-postmaster		\
		  ${QMAILDIR}/alias/.qmail-mailer-daemon	\
		  ${QMAILDIR}/alias/.qmail-root	
d119 9
a127 1
	do_accts
d132 1
a132 1
	sh -c "${QMAILDIR}/setup/install >/dev/null 2>&1"
@


1.1.1.1
log
@qmail is a secure, reliable, efficient, simple message transfer agent.
It is meant as a replacement for the entire sendmail-binmail system on
typical Internet-connected UNIX hosts.

Submitted by:	Camiel Dobbelaar <cd@@sentia.nl>
@
text
@@
