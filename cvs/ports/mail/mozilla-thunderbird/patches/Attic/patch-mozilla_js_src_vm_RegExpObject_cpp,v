head	1.5;
access;
symbols
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3;
locks; strict;
comment	@# @;


1.5
date	2012.09.01.14.22.45;	author landry;	state dead;
branches;
next	1.4;

1.4
date	2012.08.07.09.07.04;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2012.06.11.15.33.26;	author landry;	state Exp;
branches;
next	1.2;

1.2
date	2012.03.16.21.35.25;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2012.02.20.20.17.49;	author landry;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to thunderbird 15.0/lightning 1.7b1/enigmail 1.4.4.

- see http://www.mozilla.org/en-US/thunderbird/15.0/releasenotes/
- garbage collect nsSound.cpp, the original one uses libcanberra
properly and thus sndio.
- remove patch from #750620, merged upstream (mfbt/double-conversion)
- remove patches from #691898, merged upstream (yarr jit ppc)
- remove useless crashreporter patch, we don't have breakpad
- garbage collect sunbird.desktop since it's unlikely sunbird will ever
build from tb again..
@
text
@$OpenBSD: patch-mozilla_js_src_vm_RegExpObject_cpp,v 1.4 2012/08/07 09:07:04 landry Exp $
--- mozilla/js/src/vm/RegExpObject.cpp.orig	Wed Jun 20 05:50:41 2012
+++ mozilla/js/src/vm/RegExpObject.cpp	Fri Jun 22 22:49:26 2012
@@@@ -168,7 +168,6 @@@@ MatchPairs::checkAgainst(size_t inputLength)
 
 /* detail::RegExpCode */
 
-#if ENABLE_YARR_JIT
 void
 RegExpCode::reportYarrError(JSContext *cx, TokenStream *ts, ErrorCode error)
 {
@@@@ -200,46 +199,9 @@@@ RegExpCode::reportYarrError(JSContext *cx, TokenStream
     }
 }
 
-#else /* !ENABLE_YARR_JIT */
-
-void
-RegExpCode::reportPCREError(JSContext *cx, int error)
-{
-#define REPORT(msg_) \
-    JS_ReportErrorFlagsAndNumberUC(cx, JSREPORT_ERROR, js_GetErrorMessage, NULL, msg_); \
-    return
-    switch (error) {
-      case -2: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 0: JS_NOT_REACHED("Precondition violation: an error must have occurred.");
-      case 1: REPORT(JSMSG_TRAILING_SLASH);
-      case 2: REPORT(JSMSG_TRAILING_SLASH);
-      case 3: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 4: REPORT(JSMSG_BAD_QUANTIFIER);
-      case 5: REPORT(JSMSG_BAD_QUANTIFIER);
-      case 6: REPORT(JSMSG_BAD_CLASS_RANGE);
-      case 7: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 8: REPORT(JSMSG_BAD_CLASS_RANGE);
-      case 9: REPORT(JSMSG_BAD_QUANTIFIER);
-      case 10: REPORT(JSMSG_UNMATCHED_RIGHT_PAREN);
-      case 11: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 12: REPORT(JSMSG_UNMATCHED_RIGHT_PAREN);
-      case 13: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 14: REPORT(JSMSG_MISSING_PAREN);
-      case 15: REPORT(JSMSG_BAD_BACKREF);
-      case 16: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 17: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      default:
-        JS_NOT_REACHED("Precondition violation: unknown PCRE error code.");
-    }
-#undef REPORT
-}
-
-#endif /* ENABLE_YARR_JIT */
-
 bool
 RegExpCode::compile(JSContext *cx, JSLinearString &pattern, unsigned *parenCount, RegExpFlag flags)
 {
-#if ENABLE_YARR_JIT
     /* Parse the pattern. */
     ErrorCode yarrError;
     YarrPattern yarrPattern(pattern, bool(flags & IgnoreCaseFlag), bool(flags & MultilineFlag),
@@@@ -256,7 +218,7 @@@@ RegExpCode::compile(JSContext *cx, JSLinearString &pat
      * case we have to bytecode compile it.
      */
 
-#ifdef JS_METHODJIT
+#if ENABLE_YARR_JIT && defined(JS_METHODJIT)
     if (isJITRuntimeEnabled(cx) && !yarrPattern.m_containsBackreferences) {
         JSC::ExecutableAllocator *execAlloc = cx->runtime->getExecutableAllocator(cx);
         if (!execAlloc) {
@@@@ -277,21 +239,11 @@@@ RegExpCode::compile(JSContext *cx, JSLinearString &pat
         return false;
     }
 
+#if ENABLE_YARR_JIT
     codeBlock.setFallBack(true);
+#endif
     byteCode = byteCompile(yarrPattern, bumpAlloc).get();
     return true;
-#else /* !defined(ENABLE_YARR_JIT) */
-    int error = 0;
-    compiled = jsRegExpCompile(pattern.chars(), pattern.length(),
-                  ignoreCase() ? JSRegExpIgnoreCase : JSRegExpDoNotIgnoreCase,
-                  multiline() ? JSRegExpMultiline : JSRegExpSingleLine,
-                  parenCount, &error);
-    if (error) {
-        reportPCREError(cx, error);
-        return false;
-    }
-    return true;
-#endif
 }
 
 RegExpRunStatus
@@@@ -306,18 +258,11 @@@@ RegExpCode::execute(JSContext *cx, const jschar *chars
     else
         result = JSC::Yarr::execute(codeBlock, chars, start, length, output);
 #else
-    result = jsRegExpExecute(cx, compiled, chars, length, start, output, outputCount);
+    result = JSC::Yarr::interpret(byteCode, chars, start, length, output);
 #endif
 
     if (result == -1)
         return RegExpRunStatus_Success_NotFound;
-
-#if !ENABLE_YARR_JIT
-    if (result < 0) {
-        reportPCREError(cx, result);
-        return RegExpRunStatus_Error;
-    }
-#endif
 
     JS_ASSERT(result >= 0);
     return RegExpRunStatus_Success;
@


1.4
log
@Update to thunderbird 14.0/enigmail 1.4.3/lightning 1.6b1.

- see http://www.mozilla.org/en-US/thunderbird/14.0/releasenotes/
- remove the -rpath hack, not needed since matthew's ld.so fix from
  12/06
- backport cset from #750620 to fix ppc (and other exotic archs) build.
@
text
@d1 1
a1 1
$OpenBSD: patch-mozilla_js_src_vm_RegExpObject_cpp,v 1.3 2012/06/11 15:33:26 landry Exp $
@


1.3
log
@Update to thunderbird 13.0.

See https://www.mozilla.org/en-US/thunderbird/13.0/releasenotes/ for details
- update enigmail to 1.4.2, lightning to 1.5b1
- adapt Makefile to cope with SEPARATE_BUILD
- add a rpath hack in config/rules.mk, temporary workaround for #668869
@
text
@d1 4
a4 4
$OpenBSD: patch-mozilla_js_src_vm_RegExpObject_cpp,v 1.2 2012/03/16 21:35:25 landry Exp $
--- mozilla/js/src/vm/RegExpObject.cpp.orig	Fri May 18 06:10:51 2012
+++ mozilla/js/src/vm/RegExpObject.cpp	Fri May 18 09:34:54 2012
@@@@ -167,7 +167,6 @@@@ MatchPairs::checkAgainst(size_t inputLength)
d12 1
a12 1
@@@@ -199,46 +198,9 @@@@ RegExpCode::reportYarrError(JSContext *cx, TokenStream
d59 1
a59 1
@@@@ -255,7 +217,7 @@@@ RegExpCode::compile(JSContext *cx, JSLinearString &pat
d68 1
a68 1
@@@@ -276,21 +238,11 @@@@ RegExpCode::compile(JSContext *cx, JSLinearString &pat
d92 1
a92 1
@@@@ -305,18 +257,11 @@@@ RegExpCode::execute(JSContext *cx, const jschar *chars
@


1.2
log
@Update to thunderbird 11.0. (and enigmail 1.4/lightning 1.3b1)
- Fixes MFSA 2012-12->19
- see http://www.mozilla.org/en-US/thunderbird/11.0/releasenotes/ (but
  there's much more!)
- complete patchset for #691898, still fixes build on ppc (and hopefully
commited in firefox 14...)
- add patchset from #706955, workarounds #669050 (xpcshell hangs during
make install and chokes on CSPUtils.csm, threads related..)
- remove obsolete/commited patches
@
text
@d1 6
a6 6
$OpenBSD: patch-mozilla_js_src_vm_RegExpObject_cpp,v 1.1 2012/02/20 20:17:49 landry Exp $
--- mozilla/js/src/vm/RegExpObject.cpp.orig	Fri Mar  9 21:29:07 2012
+++ mozilla/js/src/vm/RegExpObject.cpp	Sat Mar 10 12:27:05 2012
@@@@ -392,7 +392,6 @@@@ Class js::RegExpClass = {
     regexp_trace
 };
d10 1
a10 1
 RegExpPrivateCode::reportYarrError(JSContext *cx, TokenStream *ts, ErrorCode error)
d12 1
a12 2
@@@@ -423,42 +422,6 @@@@ RegExpPrivateCode::reportYarrError(JSContext *cx, Toke
         JS_NOT_REACHED("Unknown Yarr error code");
d15 1
a15 1
-
d19 1
a19 1
-RegExpPrivateCode::reportPCREError(JSContext *cx, int error)
d51 20
d72 40
a111 2
 bool
 js::ParseRegExpFlags(JSContext *cx, JSString *flagStr, RegExpFlag *flagsOut)
@


1.1
log
@Update to thunderbird-10.0.2.

Same comments as for firefox, plus:
- rename js/src/jscompartment.cpp patch
- remove patch-configure.in, not needed since 'gnome' component is
  disabled via configure args.
- add patch-mail_installer_Makefile_in to not install the sdk
  headers/idl files
@
text
@d1 5
a5 5
$OpenBSD$
--- mozilla/js/src/vm/RegExpObject.cpp.orig	Wed Jan 18 10:43:17 2012
+++ mozilla/js/src/vm/RegExpObject.cpp	Mon Jan 23 07:59:12 2012
@@@@ -251,7 +251,6 @@@@ Class js::RegExpClass = {
     NULL                     /* trace */
d12 1
a12 1
@@@@ -282,41 +281,6 @@@@ RegExpPrivateCode::reportYarrError(JSContext *cx, Toke
d27 1
a27 1
-      case 0: JS_NOT_REACHED("Precondition violation: an error must have occurred."); 
d29 1
a29 1
-      case 2: REPORT(JSMSG_TRAILING_SLASH); 
d50 1
@

