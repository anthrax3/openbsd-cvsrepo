head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.68
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.66
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.64
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.60
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.62
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.58
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.56
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.54
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.52
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.50
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.48
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.46
	OPENBSD_5_0:1.1.1.1.0.44
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.42
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.40
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.38
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.36
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.34
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.32
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.30
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.28
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.26
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.24
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.22
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.20
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.18
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.16
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.14
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.12
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.10
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.8
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	wilfried_20010214:1.1.1.1
	wilfried:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2001.02.14.15.45.20;	author wilfried;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.02.14.15.45.20;	author wilfried;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD: $
--- wmpop3/wmpop3.c.orig	Fri Aug 13 17:56:19 1999
+++ wmpop3/wmpop3.c	Mon Feb 12 18:22:34 2001
@@@@ -49,7 +49,7 @@@@ int  wminet_mask_height = 64;
 
 char *ProgName;
 
-char mailclient[32]   = "pine";
+char mailclient[512]   = "xterm -e pine";
 char password[32];
 char username[32];
 char popserver[128];
@@@@ -103,7 +103,7 @@@@ int main(int argc, char *argv[]) {
             case 'c' :
                 if (argc > (i+1))
                 {
-                    strcpy(config_file, argv[i+1]);
+                    strlcpy(config_file, argv[i+1], sizeof(config_file));
                     i++;
                 }
                 break;
@@@@ -138,7 +138,7 @@@@ void wmCheckMail_routine(int argc, char 
     Pop3   pc;
 
     if( !strcmp( config_file, "not-defined") )
-        sprintf(config_file, "%s/.wmpop3rc", getenv("HOME"));
+        snprintf(config_file, sizeof(config_file), "%s/.wmpop3rc", getenv("HOME"));
 
     if( readConfigFile(config_file) == -1){
         exit(0);
@@@@ -394,7 +394,7 @@@@ int  readConfigFile( char *filename ){
     FILE *fp;
 
     if( (fp = fopen( filename, "r")) == 0 ){
-        sprintf(config_file, "%s/.wmpop3rc", getenv("HOME"));
+        snprintf(config_file, sizeof(config_file), "%s/.wmpop3rc", getenv("HOME"));
         printf("-Config file does not exit : %s\n",config_file);
         printf("+Trying to create new config file.\n");
         if((fp = fopen(config_file,"w")) == 0){
@@@@ -428,7 +428,7 @@@@ int  readConfigFile( char *filename ){
                     printf("Invalid UserName.\n");
                     return -1;
                 }
-                strcpy(username, ptr); 
+                strlcpy(username, ptr, sizeof(username)); 
             }
             else if( !strcmp( ptr, "password") ){
                 ptr = strtok( 0, " \n");
@@@@ -436,7 +436,7 @@@@ int  readConfigFile( char *filename ){
                     printf("Invalid password.\n");
                     return -1;
                 }
-                strcpy(password, ptr); 
+                strlcpy(password, ptr, sizeof(password)); 
             }
             else if( !strcmp( ptr, "popserver") ){
                 ptr = strtok( 0, " \n");
@@@@ -444,15 +444,15 @@@@ int  readConfigFile( char *filename ){
                     printf("Invalid popserver address.\n");
                     return -1;
                 }
-                strcpy(popserver, ptr); 
+                strlcpy(popserver, ptr, sizeof(popserver)); 
             }
             else if( !strcmp( ptr, "mailclient") ){
-                ptr = strtok( 0, " \n");
+                ptr = strtok( 0, "#\n");
                 if( ptr == 0){
                     printf("Invalid mailclient.\n");
                     return -1;
                 }
-                strcpy(mailclient, ptr); 
+                strlcpy(mailclient, ptr, sizeof(mailclient)); 
             }
             else if( !strcmp( ptr, "port") ){
                 ptr = strtok( 0, " \n");
@


1.1.1.1
log
@Import of WMPop3-0.5.6a
WMPop3 is a POP3 mail box checker dock app for Window Maker
ok danh@@
@
text
@@
