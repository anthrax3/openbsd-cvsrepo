head	1.11;
access;
symbols
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.7.0.6
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.4
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	ajacoutot_20090216:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2016.04.01.18.08.10;	author robert;	state Exp;
branches;
next	1.10;
commitid	YBIXgHFu7xINW8BP;

1.10
date	2015.11.02.11.06.34;	author robert;	state Exp;
branches;
next	1.9;
commitid	19wAgXlT9RhqpZjX;

1.9
date	2015.04.05.22.25.08;	author robert;	state Exp;
branches;
next	1.8;
commitid	j25w8UqbNvnTFexL;

1.8
date	2014.04.07.13.46.06;	author robert;	state Exp;
branches;
next	1.7;

1.7
date	2013.01.27.13.06.20;	author robert;	state Exp;
branches;
next	1.6;

1.6
date	2012.08.30.14.28.22;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2011.06.10.15.55.00;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2011.04.02.16.36.45;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.29.18.00.03;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2009.07.31.09.55.56;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2009.02.16.09.44.37;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.02.16.09.44.37;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.11
log
@update to 7.2.2
@
text
@$OpenBSD$
--- installer/linux/spooler.cfg.orig	Wed Mar 23 12:14:33 2016
+++ installer/linux/spooler.cfg	Fri Apr  1 16:50:10 2016
@@@@ -11,16 +11,16 @@@@ smtp_port = 25
 #server_socket = file:///var/run/zarafad/server.sock
 
 # drop privileges and run the process as this user
-#run_as_user = zarafa
+run_as_user = _zarafa
 
 # drop privileges and run the process as this group
-#run_as_group = zarafa
+run_as_group = _zarafa
 
 # create a pid file for stopping the service via the init.d scripts
-#pid_file = /var/run/zarafad/spooler.pid
+pid_file = /var/run/zarafad/spooler.pid
 
 # run server in this path (when not using the -F switch)
-#running_path = /var/lib/zarafa
+running_path = /var/empty
 
 # create memory coredumps upon crash in the running_path directory
 coredump_enabled = no
@@@@ -55,7 +55,7 @@@@ log_timestamp	=	1
 #       to use this type of login method
 
 # Login to the Zarafa server using this SSL Key
-#sslkey_file = /etc/zarafa/ssl/spooler.pem
+#sslkey_file = ${SYSCONFDIR}/zarafa/ssl/spooler.pem
 
 # The password of the SSL Key
 #sslkey_pass = replace-with-server-cert-password
@@@@ -150,7 +150,7 @@@@ archive_on_send = no
 plugin_enabled = yes
 
 # Path to the spooler plugin manager
-plugin_manager_path = /usr/share/zarafa-spooler/python
+plugin_manager_path = ${PREFIX}/share/zarafa-spooler/python
 
 # Path to the activated spooler plugins.
 #   This folder contains symlinks to the zarafa plugins and custom scripts. The plugins are
@@@@ -159,4 +159,4 @@@@ plugin_manager_path = /usr/share/zarafa-spooler/python
 #
 # Example:
 #  $ ln -s /usr/share/zarafa-spooler/python/plugins/disclaimer.py /var/lib/zarafa/spooler/plugins/disclaimer.py
-plugin_path = /var/lib/zarafa/spooler/plugins
+plugin_path = /var/db/zarafa/spooler/plugins
@


1.10
log
@update to 7.2.1
@
text
@d1 3
a3 3
$OpenBSD: patch-installer_linux_spooler_cfg,v 1.9 2015/04/05 22:25:08 robert Exp $
--- installer/linux/spooler.cfg.orig	Wed Aug  5 17:28:49 2015
+++ installer/linux/spooler.cfg	Thu Aug 20 12:36:50 2015
d5 1
a5 1
 server_socket	=	file:///var/run/zarafa
d8 1
a8 1
-run_as_user = 
d12 1
a12 1
-run_as_group = 
d16 2
a17 1
 pid_file = /var/run/zarafa-spooler.pid
d20 1
a20 1
-running_path = /
d25 1
a25 1
@@@@ -61,7 +61,7 @@@@ log_buffer_size  = 4096
d34 1
a34 1
@@@@ -156,7 +156,7 @@@@ archive_on_send = no
d43 1
a43 1
@@@@ -165,4 +165,4 @@@@ plugin_manager_path = /usr/share/zarafa-spooler/python
@


1.9
log
@update to 7.2.0
@
text
@d1 3
a3 3
$OpenBSD$
--- installer/linux/spooler.cfg.orig	Sun Apr  5 17:47:15 2015
+++ installer/linux/spooler.cfg	Sun Apr  5 17:48:05 2015
d24 1
a24 1
@@@@ -48,7 +48,7 @@@@ log_timestamp	=	1
d33 1
a33 1
@@@@ -143,7 +143,7 @@@@ archive_on_send = no
d42 1
a42 1
@@@@ -152,4 +152,4 @@@@ plugin_manager_path = /usr/share/zarafa-spooler/python
@


1.8
log
@update to 7.1.9
@
text
@d1 3
a3 3
$OpenBSD: patch-installer_linux_spooler_cfg,v 1.7 2013/01/27 13:06:20 robert Exp $
--- installer/linux/spooler.cfg.orig	Thu Jan 30 12:43:17 2014
+++ installer/linux/spooler.cfg	Mon Feb  3 11:25:37 2014
d15 1
a15 2
-# create a pid file for stopping the service via the init.d scripts
+# write the process ID number to this file
d28 2
a29 2
-sslkey_file = /etc/zarafa/ssl/spooler.pem
+sslkey_file = ${SYSCONFDIR}/zarafa/ssl/spooler.pem
d32 2
a33 2
 sslkey_pass = replace-with-server-cert-password
@@@@ -143,13 +143,13 @@@@ archive_on_send = no
d42 1
a42 3
-#   installed in '/usr/share/zarafa-spooler/python/plugins/'. To activate a plugin create a symbolic
+#   installed in '${PREFIX}/share/zarafa-spooler/python/plugins/'. To activate a plugin create a symbolic
 #   link in the 'plugin_path' directory.
d45 1
a45 1
-#  $ ln -s /usr/share/zarafa-spooler/python/plugins/disclaimer.py /var/lib/zarafa/spooler/plugins/disclaimer.py
a46 1
+#  $ ln -s ${PREFIX}/share/zarafa-spooler/python/plugins/disclaimer.py /var/db/zarafa/spooler/plugins/disclaimer.py
@


1.7
log
@update to 7.1.3
@
text
@d1 3
a3 3
$OpenBSD: patch-installer_linux_spooler_cfg,v 1.6 2012/08/30 14:28:22 ajacoutot Exp $
--- installer/linux/spooler.cfg.orig	Wed Jan 23 12:48:53 2013
+++ installer/linux/spooler.cfg	Sun Jan 27 12:59:52 2013
d23 3
a25 3
 ##############################################################
 # SPOOLER LOG SETTINGS
@@@@ -45,7 +45,7 @@@@ log_timestamp	=	1
d34 1
a34 1
@@@@ -140,13 +140,13 @@@@ archive_on_send = no
@


1.6
log
@Major update to zarafa-7.1.0.
Complete ChangeLog available at:
http://download.zarafa.com/community/final/7.1/final-changelog-7.1.txt
@
text
@d1 3
a3 3
$OpenBSD: patch-installer_linux_spooler_cfg,v 1.5 2011/06/10 15:55:00 ajacoutot Exp $
--- installer/linux/spooler.cfg.orig	Wed Aug  8 16:35:33 2012
+++ installer/linux/spooler.cfg	Mon Aug 27 10:32:59 2012
d34 1
a34 1
@@@@ -138,13 +138,13 @@@@ archive_on_send = no
@


1.5
log
@Update to zarafa-7.0.0 (rc2).
@
text
@d1 3
a3 3
$OpenBSD: patch-installer_linux_spooler_cfg,v 1.4 2011/04/02 16:36:45 robert Exp $
--- installer/linux/spooler.cfg.orig	Thu Jun  9 22:20:40 2011
+++ installer/linux/spooler.cfg	Fri Jun 10 13:33:16 2011
d34 18
@


1.4
log
@make sure that we don't try to use NPTL code because if we do, all of the
zarafa-spooler processes will end up as zombies and we won't be able
to send emails.
this commit also removed the upper limit of 1 thread and from now on
we use the default value which is 5.

ok ajacoutot@@
@
text
@d1 4
a4 4
$OpenBSD: patch-installer_linux_spooler_cfg,v 1.3 2011/03/29 18:00:03 ajacoutot Exp $
--- installer/linux/spooler.cfg.orig	Mon Mar 28 20:32:18 2011
+++ installer/linux/spooler.cfg	Sat Apr  2 18:20:01 2011
@@@@ -8,16 +8,16 @@@@ smtp_server	=	localhost
d25 1
a25 1
@@@@ -42,7 +42,7 @@@@ log_timestamp	=	1
@


1.3
log
@Update to zarafa-6.40.7.
Changelog available at
http://download.zarafa.com/community/final/6.40/changelog-6.40.txt
@
text
@d1 1
a1 1
$OpenBSD: patch-installer_linux_spooler_cfg,v 1.2 2009/07/31 09:55:56 ajacoutot Exp $
d3 1
a3 1
+++ installer/linux/spooler.cfg	Tue Mar 29 19:27:37 2011
a33 8
@@@@ -52,6 +52,7 @@@@ sslkey_pass = replace-with-server-cert-password
 
 # Maximum number of threads used to send outgoing messages
 # Default: 5
+# OpenBSD will always only use 1 thread whatever value is set
 max_threads = 5
 
 ##############################################################
@


1.2
log
@Major update to zarafa-6.30.0.
Full ChangeLog available at
    http://download.zarafa.com/zarafa/release/docs/changelog.en.txt
Now comes with caldav support.

ok jasper@@
@
text
@d1 3
a3 3
$OpenBSD: patch-installer_linux_spooler_cfg,v 1.1.1.1 2009/02/16 09:44:37 ajacoutot Exp $
--- installer/linux/spooler.cfg.orig	Wed Jul 22 16:06:58 2009
+++ installer/linux/spooler.cfg	Wed Jul 22 16:07:44 2009
d34 8
@


1.1
log
@Initial revision
@
text
@d1 8
a8 8
$OpenBSD$
--- installer/linux/spooler.cfg.orig	Wed Dec 24 15:50:33 2008
+++ installer/linux/spooler.cfg	Sun Jan 11 14:45:21 2009
@@@@ -8,16 +8,16 @@@@ smtp_server	=	localhost
 server_socket	=	file:///var/run/zarafa
 
 # drop privileges and run the process as this user
-run_as_user = 
d10 3
a12 3
 
 # drop privileges and run the process as this group
-run_as_group = 
d14 2
a15 2
 
-# create a pid file for stopping the service via the init.d scripts
d17 17
a33 17
 pid_file = /var/run/zarafa-spooler.pid
 
 # run server in this path (when not using the -F switch)
-running_path = /
+running_path = /var/empty
 
 ##############################################################
 # SPOOLER LOG SETTINGS
@@@@ -42,7 +42,7 @@@@ log_timestamp	=	1
 #       to use this type of login method
 
 # Login to the Zarafa server using this SSL Key
-sslkey_file = /etc/zarafa/ssl/spooler.pem
+sslkey_file = ${SYSCONFDIR}/zarafa/ssl/spooler.pem
 
 # The password of the SSL Key
 sslkey_pass = replace-with-server-cert-password
@


1.1.1.1
log
@Import zarafa-6.20.1 (+php5-mapi-6.20.1)

-main
Zarafa is a full-featured e-mail and groupware solution, focused
towards clients using the MAPI standard.  As an MS Exchange replacement,
the Zarafa suite provides the following features:
 * Integration with existing Unix mailserver
 * Native mobile phone support
 * MS Outlook "Look & Feel" webaccess
 * Stable MS Outlook sharing (100% MAPI)

This package provides the Open Source version of Zarafa.

-php
Messaging Application Programming Interface (MAPI) is a messaging
architecture and a Component Object Model based API for Microsoft
Windows. MAPI allows client programs to become (e-mail)
messaging-enabled, -aware, or -based by calling MAPI subsystem routines
that interface with certain messaging servers. While MAPI is designed to
be independent of the protocol, it is usually used with MAPI/RPC, the
proprietary protocol that Microsoft Outlook uses to communicate with
Microsoft Exchange.

These functions allow you to access a MAPI compliant email server.

"just do it" robert@@, ok jasper@@
@
text
@@
