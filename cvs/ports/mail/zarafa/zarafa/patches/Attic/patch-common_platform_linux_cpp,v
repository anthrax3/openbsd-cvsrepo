head	1.13;
access;
symbols
	OPENBSD_6_1:1.12.0.4
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.18
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.16
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.14
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.12
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.10
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.4
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	ajacoutot_20090216:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2017.09.13.10.43.58;	author robert;	state dead;
branches;
next	1.12;
commitid	kFv2rkf5deA8Z0kS;

1.12
date	2016.04.20.18.38.41;	author robert;	state Exp;
branches;
next	1.11;
commitid	KBMzdBVp21qnBq3j;

1.11
date	2016.04.01.18.08.10;	author robert;	state Exp;
branches;
next	1.10;
commitid	YBIXgHFu7xINW8BP;

1.10
date	2016.01.02.16.16.00;	author robert;	state Exp;
branches;
next	1.9;
commitid	dRA3Y9EswgTqN3vx;

1.9
date	2016.01.02.15.29.12;	author robert;	state Exp;
branches;
next	1.8;
commitid	krAaHpU6FZq7wmOY;

1.8
date	2016.01.02.13.57.12;	author robert;	state Exp;
branches;
next	1.7;
commitid	ctm5qtmR0fBHTZsd;

1.7
date	2015.11.02.11.06.34;	author robert;	state Exp;
branches;
next	1.6;
commitid	19wAgXlT9RhqpZjX;

1.6
date	2015.04.05.22.25.08;	author robert;	state Exp;
branches;
next	1.5;
commitid	j25w8UqbNvnTFexL;

1.5
date	2014.09.04.20.30.45;	author robert;	state Exp;
branches;
next	1.4;
commitid	KXp2m2D6M5cPYXQN;

1.4
date	2010.06.30.02.46.48;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2010.03.21.11.15.20;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.20.22.34.26;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2009.02.16.09.44.37;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.02.16.09.44.37;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.13
log
@remove zarafa as it has been replaced with kopano
@
text
@$OpenBSD: patch-common_platform_linux_cpp,v 1.12 2016/04/20 18:38:41 robert Exp $
--- common/platform.linux.cpp.orig	Wed Apr 20 13:13:54 2016
+++ common/platform.linux.cpp	Wed Apr 20 20:27:41 2016
@@@@ -36,6 +36,8 @@@@
 #include <cerrno>
 #include <climits>
 
+#include <signal.h>
+
 #include <string>
 #include <map>
 #include <vector>
@@@@ -45,7 +47,7 @@@@
 #else
 #	include <uuid.h>
 #endif
-#if defined(__linux__) && defined(__GLIBC__)
+#if (defined(__linux__) && defined(__GLIBC__)) || defined(__OpenBSD__)
 #	include <cxxabi.h>
 #	include <execinfo.h>
 #endif
@@@@ -56,7 +58,7 @@@@
 #define ICONV_CONST const
 #elif OPENBSD
 // bsd
-#define ICONV_CONST const
+#define ICONV_CONST
 #else
 // linux
 #define ICONV_CONST
@@@@ -79,22 +81,10 @@@@ HRESULT CoCreateGuid(LPGUID pNewGUID) {
 		return MAPI_E_INVALID_PARAMETER;
 
 #if HAVE_UUID_CREATE
-#ifdef OPENBSD
-	uuid_t *g = NULL;
-	void *vp = NULL;
-	size_t n = 0;
-	// error codes are not checked!
-	uuid_create(&g);
-	uuid_make(g, UUID_MAKE_V1);
-	uuid_export(g, UUID_FMT_BIN, &vp, &n);
-	memcpy(pNewGUID, &vp, UUID_LEN_BIN);
-	uuid_destroy(g);
-#else
 	uuid_t g;
 	uint32_t uid_ret;
 	uuid_create(&g, &uid_ret);
 	memcpy(pNewGUID, &g, sizeof(g));
-#endif // OPENBSD
 #else
 	uuid_t g;
 	uuid_generate(g);
@@@@ -151,6 +141,12 @@@@ void Sleep(unsigned int msec) {
 	nanosleep(&ts, NULL);
 }
 
+#ifdef HAVE_ARC4RANDOM_BUF
+void rand_get(char *p, int n)
+{
+	arc4random_buf(p, n);
+}
+#else
 static void rand_fail(void)
 {
 	fprintf(stderr, "Cannot access/use /dev/urandom, this is fatal (%s)\n", strerror(errno));
@@@@ -187,6 +183,7 @@@@ void rand_get(char *p, int n)
 
 		close(fd);
 	}
+#endif
 	
 void rand_init() {
 	unsigned int seed = 0;
@


1.12
log
@update to 7.2.3
@
text
@d1 1
a1 1
$OpenBSD: patch-common_platform_linux_cpp,v 1.11 2016/04/01 18:08:10 robert Exp $
@


1.11
log
@update to 7.2.2
@
text
@d1 4
a4 4
$OpenBSD: patch-common_platform_linux_cpp,v 1.10 2016/01/02 16:16:00 robert Exp $
--- common/platform.linux.cpp.orig	Wed Mar 23 12:14:33 2016
+++ common/platform.linux.cpp	Thu Mar 31 23:23:31 2016
@@@@ -59,6 +59,8 @@@@
d12 11
a22 2
 
@@@@ -74,7 +76,7 @@@@
d31 1
a31 1
@@@@ -97,22 +99,10 @@@@ HRESULT CoCreateGuid(LPGUID pNewGUID) {
d54 1
a54 1
@@@@ -169,6 +159,12 @@@@ void Sleep(unsigned int msec) {
d67 1
a67 1
@@@@ -205,6 +201,7 @@@@ void rand_get(char *p, int n)
@


1.10
log
@just use arc4random_buf() instead of getentropy(); idea from kettenis@@
@
text
@d1 3
a3 3
$OpenBSD: patch-common_platform_linux_cpp,v 1.9 2016/01/02 15:29:12 robert Exp $
--- common/platform.linux.cpp.orig	Sat Oct 31 00:03:13 2015
+++ common/platform.linux.cpp	Sat Jan  2 17:00:47 2016
d13 1
a13 1
@@@@ -69,7 +71,7 @@@@
d22 1
a22 1
@@@@ -94,22 +96,10 @@@@ HRESULT CoCreateGuid(LPGUID pNewGUID) {
d45 1
a45 1
@@@@ -166,6 +156,12 @@@@ void Sleep(unsigned int msec) {
d58 1
a58 1
@@@@ -202,6 +198,7 @@@@ void rand_get(char *p, int n)
@


1.9
log
@fix len argument of getentropy()
@
text
@d1 1
a1 1
$OpenBSD: patch-common_platform_linux_cpp,v 1.8 2016/01/02 13:57:12 robert Exp $
d3 1
a3 1
+++ common/platform.linux.cpp	Sat Jan  2 14:29:02 2016
d45 3
a47 1
@@@@ -168,18 +158,33 @@@@ void Sleep(unsigned int msec) {
d49 6
a56 3
+#ifdef HAVE_GETENTROPY
+	fprintf(stderr, "getentropy() failed, this is fatal (%s)\n", strerror(errno));
+#else
d58 1
a58 20
+#endif
 	kill(0, SIGTERM);
 	exit(1);
 }
-	
+
 void rand_get(char *p, int n)
 {
+#ifdef HAVE_GETENTROPY
+	while (n > 0) {
+		size_t len = n < 256 ? n : 256;
+		int rc = getentropy(p, len);
+		if (rc < 0)
+			rand_fail();
+
+		p += len;
+		n -= len;
+	}
+#else
 	int fd = open("/dev/urandom", O_RDONLY);
d60 1
a60 10
 	if (fd == -1)
 		rand_fail();
-	
+
 	// handle EINTR
 	while(n > 0)
 	{
@@@@ -199,10 +204,10 @@@@ void rand_get(char *p, int n)
 		p += rc;
 		n -= rc;
a61 1
+	close(fd);
d63 1
a63 5
+}
 
-		close(fd);
-	}
-	
a65 1
 	rand_get((char *)&seed, sizeof(seed));
@


1.8
log
@use getentropy(2) instead of directly opening /dev/urandom;
this unbreaks zarafa-webapp running with chroot'd php
@
text
@d1 1
a1 1
$OpenBSD: patch-common_platform_linux_cpp,v 1.7 2015/11/02 11:06:34 robert Exp $
d64 1
a64 1
+		int rc = getentropy(p, n);
@


1.7
log
@update to 7.2.1
@
text
@d1 3
a3 3
$OpenBSD$
--- common/platform.linux.cpp.orig	Wed Aug  5 17:30:48 2015
+++ common/platform.linux.cpp	Thu Aug 20 13:23:31 2015
d45 50
@


1.6
log
@update to 7.2.0
@
text
@d1 7
a7 7
$OpenBSD: patch-common_platform_linux_cpp,v 1.5 2014/09/04 20:30:45 robert Exp $
--- common/platform.linux.cpp.orig	Thu Mar  5 16:54:04 2015
+++ common/platform.linux.cpp	Fri Apr  3 23:13:47 2015
@@@@ -57,6 +57,7 @@@@
 #include <stdlib.h>
 #include <errno.h>
 #include <limits.h>
d9 1
a9 1
 
d12 2
a13 1
@@@@ -66,7 +67,7 @@@@
d22 1
a22 1
@@@@ -92,22 +93,10 @@@@ HRESULT CoCreateGuid(LPGUID pNewGUID) {
@


1.5
log
@unbreak build: use uuid_create() from the base system
@
text
@d1 12
a12 4
$OpenBSD: patch-common_platform_linux_cpp,v 1.4 2010/06/30 02:46:48 ajacoutot Exp $
--- common/platform.linux.cpp.orig	Sun Aug 24 12:27:07 2014
+++ common/platform.linux.cpp	Thu Sep  4 22:29:31 2014
@@@@ -70,7 +70,7 @@@@
d21 1
a21 1
@@@@ -96,22 +96,10 @@@@ HRESULT CoCreateGuid(LPGUID pNewGUID) {
@


1.4
log
@*MAJOR* version update to zarafa-6.40.0.
Read the complete changelog here:
http://download.zarafa.com/zarafa/release/docs/changelog.en.txt

Upgrade documentation is available at:
http://doc.zarafa.com/6.40/Administrator_Manual/en-US/html-single/index.html#_performing_the_upgrade

zarafa-libical has been removed, current version from ports works fine
for zarafa needs.

php5-mapi has been merged into zarafa-webaccess.
@
text
@d1 3
a3 3
$OpenBSD: patch-common_platform_linux_cpp,v 1.3 2010/03/21 11:15:20 ajacoutot Exp $
--- common/platform.linux.cpp.orig	Mon May 31 19:28:57 2010
+++ common/platform.linux.cpp	Mon Jun 14 09:16:43 2010
d13 23
@


1.3
log
@Major update to zarafa-6.30.12.
Lots and lots of bugfixes...
@
text
@d1 4
a4 4
$OpenBSD: patch-common_platform_linux_cpp,v 1.2 2009/10/20 22:34:26 ajacoutot Exp $
--- common/platform.linux.cpp.orig	Tue Jan 26 17:34:49 2010
+++ common/platform.linux.cpp	Wed Feb  3 08:53:18 2010
@@@@ -68,7 +68,7 @@@@
@


1.2
log
@Update to zarafa-6.30.3.
ChangeLog available here:
http://download.zarafa.com/zarafa/release/docs/changelog.en.txt

(6.30.4 is out, but one thing at a time since this is a big enough update)
@
text
@d1 4
a4 4
$OpenBSD: patch-common_platform_linux_cpp,v 1.1.1.1 2009/02/16 09:44:37 ajacoutot Exp $
--- common/platform.linux.cpp.orig	Fri Oct  9 22:34:37 2009
+++ common/platform.linux.cpp	Tue Oct 20 23:41:36 2009
@@@@ -66,7 +66,7 @@@@
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- common/platform.linux.cpp.orig	Thu Oct  9 16:55:21 2008
+++ common/platform.linux.cpp	Thu Oct  9 16:55:33 2008
@@@@ -54,7 +54,7 @@@@
@


1.1.1.1
log
@Import zarafa-6.20.1 (+php5-mapi-6.20.1)

-main
Zarafa is a full-featured e-mail and groupware solution, focused
towards clients using the MAPI standard.  As an MS Exchange replacement,
the Zarafa suite provides the following features:
 * Integration with existing Unix mailserver
 * Native mobile phone support
 * MS Outlook "Look & Feel" webaccess
 * Stable MS Outlook sharing (100% MAPI)

This package provides the Open Source version of Zarafa.

-php
Messaging Application Programming Interface (MAPI) is a messaging
architecture and a Component Object Model based API for Microsoft
Windows. MAPI allows client programs to become (e-mail)
messaging-enabled, -aware, or -based by calling MAPI subsystem routines
that interface with certain messaging servers. While MAPI is designed to
be independent of the protocol, it is usually used with MAPI/RPC, the
proprietary protocol that Microsoft Outlook uses to communicate with
Microsoft Exchange.

These functions allow you to access a MAPI compliant email server.

"just do it" robert@@, ok jasper@@
@
text
@@
