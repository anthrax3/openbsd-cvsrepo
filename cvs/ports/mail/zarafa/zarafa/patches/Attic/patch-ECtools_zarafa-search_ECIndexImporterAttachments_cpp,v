head	1.4;
access;
symbols
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2015.04.05.22.25.40;	author robert;	state dead;
branches;
next	1.3;
commitid	N4HzGX1sC5Kbrsjz;

1.3
date	2014.07.03.06.14.40;	author robert;	state Exp;
branches;
next	1.2;
commitid	JoccqcNB1M1J0kmz;

1.2
date	2012.08.30.18.42.26;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.30.14.28.22;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove unused patches
@
text
@$OpenBSD: patch-ECtools_zarafa-search_ECIndexImporterAttachments_cpp,v 1.3 2014/07/03 06:14:40 robert Exp $

OpenBSD does not have RLIMIT_AS.

ECIndexImporterAttachments.cpp:249:34: error: 'max' was not declared in this scope
ECIndexImporterAttachments.cpp:440:3: error: 'string' was not declared in this scope
ECIndexImporterAttachments.cpp:443:4: error: 'set' was not declared in this scope
ECIndexImporterAttachments.cpp:602:46: error: 'min' was not declared in this scope

--- ECtools/zarafa-search/ECIndexImporterAttachments.cpp.orig	Fri May 23 15:56:37 2014
+++ ECtools/zarafa-search/ECIndexImporterAttachments.cpp	Wed Jul  2 17:28:25 2014
@@@@ -47,6 +47,10 @@@@
  * 
  */
 
+#include <algorithm>
+#include <set>
+#include <string>
+
 #include <platform.h>
 
 #include <mapi.h>
@@@@ -78,6 +82,10 @@@@
 
 using namespace std;
 
+#if defined(__OpenBSD__) && !defined(RLIMIT_AS)
+#define RLIMIT_AS	RLIMIT_DATA
+#endif
+
 ECIndexImporterAttachment::ECIndexImporterAttachment(ECThreadData *lpThreadData, ECIndexImporter *lpIndexer)
 {
 	m_lpThreadData = lpThreadData;
@@@@ -248,7 +256,7 @@@@ HRESULT ECIndexImporterAttachment::CopyStreamToParser(
 	ULONG ulWriteData;
 	fd_set rset, wset;
 	int res;
-	int fd = max(ulFpWrite, ulFpRead);
+	int fd = std::max(ulFpWrite, ulFpRead);
 	struct timeval timeout;
 
 
@@@@ -269,7 +277,7 @@@@ HRESULT ECIndexImporterAttachment::CopyStreamToParser(
 		FD_ZERO(&wset);
 		if (ulTotalWriteData) {
 			FD_SET(ulFpWrite, &wset);
-			fd = max(ulFpWrite, ulFpRead);
+			fd = std::max(ulFpWrite, ulFpRead);
 		} else {
 			fd = ulFpRead;
 		}
@@@@ -439,10 +447,10 @@@@ HRESULT ECIndexImporterAttachment::ParseValueAttachmen
 	command.assign(m_strCommand + " ");
 
 	if (!strMimeTag.empty() && strMimeTag.compare(_T("application/octet-stream")) != 0) {
-		string tmp = trim(convert_to<string>(strMimeTag), "\r\n ");
+		std::string tmp = trim(convert_to<std::string>(strMimeTag), "\r\n ");
 		size_t pos = tmp.find_first_of('/');
 		if (pos != std::string::npos) {
-			set<string, stricmp_comparison>::iterator i = m_lpThreadData->m_setMimeFilter.find(string(tmp,0,pos));
+			std::set<std::string, stricmp_comparison>::iterator i = m_lpThreadData->m_setMimeFilter.find(std::string(tmp,0,pos));
 			if (i != m_lpThreadData->m_setMimeFilter.end()) {
 				m_lpThreadData->lpLogger->Log(EC_LOGLEVEL_DEBUG, "Skipping filtered attachment mimetype: %s for %ls", tmp.c_str(), strFilename.c_str());
 				hr = MAPI_E_INVALID_OBJECT;
@@@@ -454,8 +462,8 @@@@ HRESULT ECIndexImporterAttachment::ParseValueAttachmen
 		command.append("'");
 	} else if (!strExtension.empty()) {
 		// this string mostly does not exist
-		string tmp = trim(convert_to<string>(strExtension), "\r\n ");
-		set<string, stricmp_comparison>::iterator i = m_lpThreadData->m_setExtFilter.find(string(tmp,1)); // skip dot in extension find
+		std::string tmp = trim(convert_to<std::string>(strExtension), "\r\n ");
+		std::set<std::string, stricmp_comparison>::iterator i = m_lpThreadData->m_setExtFilter.find(std::string(tmp,1)); // skip dot in extension find
 		if (i != m_lpThreadData->m_setExtFilter.end()) {
 			m_lpThreadData->lpLogger->Log(EC_LOGLEVEL_DEBUG, "Skipping filtered attachment extension: %s for %ls", tmp.c_str(), strFilename.c_str());
 			hr = MAPI_E_INVALID_OBJECT;
@@@@ -465,14 +473,14 @@@@ HRESULT ECIndexImporterAttachment::ParseValueAttachmen
 		command.append(forcealnum(tmp, "."));
 		command.append("'");
 	} else if (!strFilename.empty()) {
-		std::string tmp = trim(convert_to<string>(strFilename), "\r\n ");
+		std::string tmp = trim(convert_to<std::string>(strFilename), "\r\n ");
 		size_t pos = tmp.find_last_of('.');
 		if (pos == std::string::npos)
 			goto exit;
 
 		
 		// skip dot in find
-		set<string, stricmp_comparison>::iterator i = m_lpThreadData->m_setExtFilter.find(string(tmp, pos+1));
+		std::set<std::string, stricmp_comparison>::iterator i = m_lpThreadData->m_setExtFilter.find(std::string(tmp, pos+1));
 		if (i != m_lpThreadData->m_setExtFilter.end()) {
 			m_lpThreadData->lpLogger->Log(EC_LOGLEVEL_DEBUG, "Skipping filtered attachment extension: %ls", strFilename.c_str());
 			hr = MAPI_E_INVALID_OBJECT;
@@@@ -480,7 +488,7 @@@@ HRESULT ECIndexImporterAttachment::ParseValueAttachmen
 		}
 
 		command.append("ext '");
-		command.append(forcealnum(string(tmp, pos), "."));
+		command.append(forcealnum(std::string(tmp, pos), "."));
 		command.append("'");
 	} else {
 		m_lpThreadData->lpLogger->Log(EC_LOGLEVEL_DEBUG, "Invalid attachment, no mimetag, extension or filename");
@@@@ -601,7 +609,7 @@@@ HRESULT ECIndexImporterAttachment::ParseAttachment(fol
 	if (ulAttachSize) {
 		/* Copy attachment data into stream */
 		while (TRUE) {
-			ULONG ulRead = min(m_ulCache, ulAttachSize);
+			ULONG ulRead = std::min(m_ulCache, ulAttachSize);
 			ULONG ulCopy = ulRead;
 			ULONG ulWritten = 0;
 
@


1.3
log
@update to 7.1.10
@
text
@d1 1
a1 1
$OpenBSD: patch-ECtools_zarafa-search_ECIndexImporterAttachments_cpp,v 1.2 2012/08/30 18:42:26 ajacoutot Exp $
@


1.2
log
@Use clucene-core 2.x.
Use our own libtool.
@
text
@d1 1
a1 1
$OpenBSD: patch-ECtools_zarafa-search_ECIndexImporterAttachments_cpp,v 1.1 2012/08/30 14:28:22 ajacoutot Exp $
d10 2
a11 2
--- ECtools/zarafa-search/ECIndexImporterAttachments.cpp.orig	Thu Aug 30 17:15:54 2012
+++ ECtools/zarafa-search/ECIndexImporterAttachments.cpp	Thu Aug 30 17:16:04 2012
d23 1
a23 1
@@@@ -76,6 +80,10 @@@@
d25 1
a25 1
 #define STREAM_BUFFER   ( 64*1024 )
d34 1
a34 1
@@@@ -246,7 +254,7 @@@@ HRESULT ECIndexImporterAttachment::CopyStreamToParser(
d43 1
a43 1
@@@@ -267,7 +275,7 @@@@ HRESULT ECIndexImporterAttachment::CopyStreamToParser(
d52 1
a52 1
@@@@ -437,10 +445,10 @@@@ HRESULT ECIndexImporterAttachment::ParseValueAttachmen
d65 1
a65 1
@@@@ -452,8 +460,8 @@@@ HRESULT ECIndexImporterAttachment::ParseValueAttachmen
d76 1
a76 1
@@@@ -463,14 +471,14 @@@@ HRESULT ECIndexImporterAttachment::ParseValueAttachmen
d93 1
a93 1
@@@@ -478,7 +486,7 @@@@ HRESULT ECIndexImporterAttachment::ParseValueAttachmen
d102 1
a102 1
@@@@ -599,7 +607,7 @@@@ HRESULT ECIndexImporterAttachment::ParseAttachment(fol
@


1.1
log
@Major update to zarafa-7.1.0.
Complete ChangeLog available at:
http://download.zarafa.com/community/final/7.1/final-changelog-7.1.txt
@
text
@d1 1
a1 1
$OpenBSD$
d5 19
a23 3
--- ECtools/zarafa-search/ECIndexImporterAttachments.cpp.orig	Mon Aug 27 10:42:56 2012
+++ ECtools/zarafa-search/ECIndexImporterAttachments.cpp	Mon Aug 27 10:43:07 2012
@@@@ -76,6 +76,10 @@@@
d34 77
@

