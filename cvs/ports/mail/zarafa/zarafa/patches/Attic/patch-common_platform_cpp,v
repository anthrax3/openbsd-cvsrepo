head	1.4;
access;
symbols
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.09.13.10.43.58;	author robert;	state dead;
branches;
next	1.3;
commitid	kFv2rkf5deA8Z0kS;

1.3
date	2016.04.20.18.38.41;	author robert;	state Exp;
branches;
next	1.2;
commitid	KBMzdBVp21qnBq3j;

1.2
date	2016.04.01.18.08.10;	author robert;	state Exp;
branches;
next	1.1;
commitid	YBIXgHFu7xINW8BP;

1.1
date	2015.11.02.11.06.34;	author robert;	state Exp;
branches;
next	;
commitid	19wAgXlT9RhqpZjX;


desc
@@


1.4
log
@remove zarafa as it has been replaced with kopano
@
text
@$OpenBSD: patch-common_platform_cpp,v 1.3 2016/04/20 18:38:41 robert Exp $
--- common/platform.cpp.orig	Wed Apr 20 13:13:54 2016
+++ common/platform.cpp	Wed Apr 20 19:54:13 2016
@@@@ -525,7 +525,7 @@@@ bool force_buffers_to_disk(const int fd)
 
 void my_readahead(const int fd)
 {
-#ifndef WIN32
+#if !defined(WIN32) && !defined(__OpenBSD__)
 	struct stat st;
 
 	if (fstat(fd, &st) == 0)
@@@@ -535,7 +535,7 @@@@ void my_readahead(const int fd)
 
 void give_filesize_hint(const int fd, const off_t len)
 {
-#ifndef WIN32
+#if !defined(WIN32) && !defined(__OpenBSD__)
 	// this helps preventing filesystem fragmentation as the
 	// kernel can now look for the best disk allocation
 	// pattern as it knows how much date is going to be
@


1.3
log
@update to 7.2.3
@
text
@d1 1
a1 1
$OpenBSD: patch-common_platform_cpp,v 1.2 2016/04/01 18:08:10 robert Exp $
@


1.2
log
@update to 7.2.2
@
text
@d1 4
a4 4
$OpenBSD$
--- common/platform.cpp.orig	Fri Apr  1 10:08:18 2016
+++ common/platform.cpp	Fri Apr  1 10:08:53 2016
@@@@ -558,7 +558,7 @@@@ bool force_buffers_to_disk(const int fd)
d13 1
a13 1
@@@@ -568,7 +568,7 @@@@ void my_readahead(const int fd)
@


1.1
log
@update to 7.2.1
@
text
@d2 3
a4 3
--- common/platform.cpp.orig	Thu Aug 20 13:21:01 2015
+++ common/platform.cpp	Thu Aug 20 13:23:04 2015
@@@@ -513,10 +513,12 @@@@ bool force_buffers_to_disk(const int fd)
d8 2
a9 1
+#ifndef __OpenBSD__
d13 1
a13 3
 		(void)readahead(fd, 0, st.st_size);
+#endif
 }
d16 4
a19 1
@@@@ -525,5 +527,7 @@@@ void give_filesize_hint(const int fd, const off_t len)
a21 5
 	// inserted
+#ifndef __OpenBSD__
 	posix_fallocate(fd, 0, len);
+#endif
 }
@

