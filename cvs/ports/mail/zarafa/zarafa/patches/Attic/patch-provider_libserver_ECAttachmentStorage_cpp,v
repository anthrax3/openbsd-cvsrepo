head	1.9;
access;
symbols
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.7.0.14
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.12
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.10
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.8
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.4
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.1.1.1.0.4
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	ajacoutot_20090216:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2015.11.02.11.06.34;	author robert;	state dead;
branches;
next	1.8;
commitid	19wAgXlT9RhqpZjX;

1.8
date	2015.04.05.22.25.08;	author robert;	state Exp;
branches;
next	1.7;
commitid	j25w8UqbNvnTFexL;

1.7
date	2011.11.17.15.14.37;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2011.06.02.12.46.37;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2010.06.30.02.46.48;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2010.03.21.11.15.20;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.20.22.34.26;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2009.07.31.09.55.56;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2009.02.16.09.44.38;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.02.16.09.44.38;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.9
log
@update to 7.2.1
@
text
@$OpenBSD: patch-provider_libserver_ECAttachmentStorage_cpp,v 1.8 2015/04/05 22:25:08 robert Exp $
--- provider/libserver/ECAttachmentStorage.cpp.orig	Thu Mar  5 16:54:01 2015
+++ provider/libserver/ECAttachmentStorage.cpp	Sun Apr  5 14:46:14 2015
@@@@ -1255,7 +1255,7 @@@@ ECFileAttachment::ECFileAttachment(ECDatabase *lpDatab
 	m_lpLogger = lpLogger;
 	
 	if (m_basepath.empty())
-		m_basepath = "/var/lib/zarafa";
+		m_basepath = "/var/db/zarafa";
 	
 	m_bTransaction = false;
 }
@@@@ -1384,8 +1384,10 @@@@ ECRESULT ECFileAttachment::LoadAttachmentInstance(stru
 
 exit:
 	/* ignore the result: it is odd if this call fails but it is not fatal if the kernel buffers the file */
+#ifndef __OpenBSD__
 	if (fd != -1)
 		(void)posix_fadvise(fd, 0, 0, POSIX_FADV_DONTNEED);
+#endif
 
 	if (gzfp)
 		gzclose(gzfp);
@@@@ -1491,8 +1493,10 @@@@ ECRESULT ECFileAttachment::LoadAttachmentInstance(ULON
 	*lpiSize = ulSize;
 
 exit:
+#ifndef __OpenBSD__
 	if (fd != -1)
 		(void)posix_fadvise(fd, 0, 0, POSIX_FADV_DONTNEED);
+#endif
 
 	if (gzfp)
 		gzclose(gzfp);
@@@@ -1540,7 +1544,9 @@@@ ECRESULT ECFileAttachment::SaveAttachmentInstance(ULON
 		// kernel can now look for the best disk allocation
 		// pattern as it knows how much date is going to be
 		// inserted
+#ifndef __OpenBSD__
 		posix_fallocate(fileno(f), 0, iSize);
+#endif
 
 		iWritten = fwrite(lpData, 1, iSize, f);
 		fclose(f);
@@@@ -1621,7 +1627,9 @@@@ ECRESULT ECFileAttachment::SaveAttachmentInstance(ULON
 		// kernel can now look for the best disk allocation
 		// pattern as it knows how much date is going to be
 		// inserted
+#ifndef __OpenBSD__
 		posix_fallocate(fileno(f), 0, iSize);
+#endif
 
 		// file created on disk, now in transaction
 		if (m_bTransaction)
@


1.8
log
@update to 7.2.0
@
text
@d1 1
a1 1
$OpenBSD: patch-provider_libserver_ECAttachmentStorage_cpp,v 1.7 2011/11/17 15:14:37 ajacoutot Exp $
@


1.7
log
@Update to zarafa-7.0.3.
@
text
@d1 4
a4 4
$OpenBSD: patch-provider_libserver_ECAttachmentStorage_cpp,v 1.6 2011/06/02 12:46:37 ajacoutot Exp $
--- provider/libserver/ECAttachmentStorage.cpp.orig	Thu Nov 17 03:03:24 2011
+++ provider/libserver/ECAttachmentStorage.cpp	Thu Nov 17 13:59:31 2011
@@@@ -1215,7 +1215,7 @@@@ ECFileAttachment::ECFileAttachment(ECDatabase *lpDatab
d13 42
@


1.6
log
@MAJOR update to zarafa-7.0.0 (RC1).
Committing now because this version performs _much_ better than what we
currently have in tree (see HOMEPAGE for details).

Quick&dirty upgrade steps (but you should follow the README):
------------------------------------------------------------------------
# /etc/rc.d/zarafa stop
===> Make sure _all_ zarafa processes are stopped and BACKUP YOUR DB!
# pkg_add -u zarafa zarafa-webaccess zarafa-libvmime
===> merge configuration (compare /usr/local/share/examples/zarara/*.cfg
with their counterparts under /etc/zarafa/.
# /usr/local/bin/zarafa-server
===> this will only do sanity checks but not start the server
# pkg_add py-mysql
# python2.6 /usr/local/share/doc/zarafa/zarafa7-upgrade
# /etc/rc.d/zarafa start
------------------------------------------------------------------------

tested by robert@@ and myself
ok robert@@
@
text
@d1 6
a6 6
$OpenBSD: patch-provider_libserver_ECAttachmentStorage_cpp,v 1.5 2010/06/30 02:46:48 ajacoutot Exp $
--- provider/libserver/ECAttachmentStorage.cpp.orig	Wed Apr 20 19:51:49 2011
+++ provider/libserver/ECAttachmentStorage.cpp	Mon May  2 12:47:53 2011
@@@@ -1213,7 +1213,7 @@@@ ECFileAttachment::ECFileAttachment(ECDatabase *lpDatab
 {
 	m_basepath = basepath;
@


1.5
log
@*MAJOR* version update to zarafa-6.40.0.
Read the complete changelog here:
http://download.zarafa.com/zarafa/release/docs/changelog.en.txt

Upgrade documentation is available at:
http://doc.zarafa.com/6.40/Administrator_Manual/en-US/html-single/index.html#_performing_the_upgrade

zarafa-libical has been removed, current version from ports works fine
for zarafa needs.

php5-mapi has been merged into zarafa-webaccess.
@
text
@d1 4
a4 4
$OpenBSD: patch-provider_libserver_ECAttachmentStorage_cpp,v 1.4 2010/03/21 11:15:20 ajacoutot Exp $
--- provider/libserver/ECAttachmentStorage.cpp.orig	Mon May 31 19:28:59 2010
+++ provider/libserver/ECAttachmentStorage.cpp	Mon Jun 14 09:24:54 2010
@@@@ -1033,7 +1033,7 @@@@ ECFileAttachment::ECFileAttachment(ECDatabase *lpDatab
@


1.4
log
@Major update to zarafa-6.30.12.
Lots and lots of bugfixes...
@
text
@d1 4
a4 4
$OpenBSD: patch-provider_libserver_ECAttachmentStorage_cpp,v 1.3 2009/10/20 22:34:26 ajacoutot Exp $
--- provider/libserver/ECAttachmentStorage.cpp.orig	Fri Mar 19 16:48:50 2010
+++ provider/libserver/ECAttachmentStorage.cpp	Sat Mar 20 14:30:33 2010
@@@@ -816,7 +816,7 @@@@ ECFileAttachment::ECFileAttachment(ECDatabase *lpDatab
d10 2
a12 2
 
 ECFileAttachment::~ECFileAttachment()
@


1.3
log
@Update to zarafa-6.30.3.
ChangeLog available here:
http://download.zarafa.com/zarafa/release/docs/changelog.en.txt

(6.30.4 is out, but one thing at a time since this is a big enough update)
@
text
@d1 4
a4 4
$OpenBSD: patch-provider_libserver_ECAttachmentStorage_cpp,v 1.2 2009/07/31 09:55:56 ajacoutot Exp $
--- provider/libserver/ECAttachmentStorage.cpp.orig	Fri Oct  9 22:34:40 2009
+++ provider/libserver/ECAttachmentStorage.cpp	Tue Oct 20 23:41:37 2009
@@@@ -806,7 +806,7 @@@@ ECFileAttachment::ECFileAttachment(ECDatabase *lpDatab
@


1.2
log
@Major update to zarafa-6.30.0.
Full ChangeLog available at
    http://download.zarafa.com/zarafa/release/docs/changelog.en.txt
Now comes with caldav support.

ok jasper@@
@
text
@d1 4
a4 4
$OpenBSD: patch-provider_libserver_ECAttachmentStorage_cpp,v 1.1.1.1 2009/02/16 09:44:38 ajacoutot Exp $
--- provider/libserver/ECAttachmentStorage.cpp.orig	Mon Jul 20 23:52:30 2009
+++ provider/libserver/ECAttachmentStorage.cpp	Wed Jul 22 16:23:57 2009
@@@@ -794,7 +794,7 @@@@ ECFileAttachment::ECFileAttachment(ECDatabase *lpDatab
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- provider/libserver/ECAttachmentStorage.cpp.orig	Fri Dec 26 12:42:44 2008
+++ provider/libserver/ECAttachmentStorage.cpp	Fri Dec 26 12:42:55 2008
@@@@ -254,7 +254,7 @@@@ ECFileAttachment::ECFileAttachment(std::string basepat
@


1.1.1.1
log
@Import zarafa-6.20.1 (+php5-mapi-6.20.1)

-main
Zarafa is a full-featured e-mail and groupware solution, focused
towards clients using the MAPI standard.  As an MS Exchange replacement,
the Zarafa suite provides the following features:
 * Integration with existing Unix mailserver
 * Native mobile phone support
 * MS Outlook "Look & Feel" webaccess
 * Stable MS Outlook sharing (100% MAPI)

This package provides the Open Source version of Zarafa.

-php
Messaging Application Programming Interface (MAPI) is a messaging
architecture and a Component Object Model based API for Microsoft
Windows. MAPI allows client programs to become (e-mail)
messaging-enabled, -aware, or -based by calling MAPI subsystem routines
that interface with certain messaging servers. While MAPI is designed to
be independent of the protocol, it is usually used with MAPI/RPC, the
proprietary protocol that Microsoft Outlook uses to communicate with
Microsoft Exchange.

These functions allow you to access a MAPI compliant email server.

"just do it" robert@@, ok jasper@@
@
text
@@
