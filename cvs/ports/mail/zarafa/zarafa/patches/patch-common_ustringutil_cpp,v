head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.4
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.10
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2016.04.20.18.38.41;	author robert;	state Exp;
branches;
next	1.6;
commitid	KBMzdBVp21qnBq3j;

1.6
date	2016.04.01.18.08.10;	author robert;	state Exp;
branches;
next	1.5;
commitid	YBIXgHFu7xINW8BP;

1.5
date	2015.11.02.11.06.34;	author robert;	state Exp;
branches;
next	1.4;
commitid	19wAgXlT9RhqpZjX;

1.4
date	2015.04.05.22.25.08;	author robert;	state Exp;
branches;
next	1.3;
commitid	j25w8UqbNvnTFexL;

1.3
date	2012.10.28.21.51.08;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2012.08.30.14.28.22;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.02.12.46.37;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update to 7.2.3
@
text
@$OpenBSD$
--- common/ustringutil.cpp.orig	Wed Apr 20 19:59:24 2016
+++ common/ustringutil.cpp	Wed Apr 20 20:00:13 2016
@@@@ -143,12 +143,18 @@@@ int ECSortKey::compareTo(const ECSortKey &other) const
  */
 const char* str_ifind(const char *haystack, const char *needle)
 {
+#ifndef __OpenBSD__
 	locale_t loc = createlocale(LC_CTYPE, "C");
+#endif
 	const char *needlepos = needle;
 	const char *needlestart = haystack;
 
 	while(*haystack) {
+#ifndef __OpenBSD__
 		if (toupper_l(*haystack, loc) == toupper_l(*needlepos, loc)) {
+#else
+		if (toupper(*haystack) == toupper(*needlepos)) {
+#endif
 			++needlepos;
 
 			if(*needlepos == 0)
@@@@ -163,7 +169,9 @@@@ const char* str_ifind(const char *haystack, const char
 	needlestart = NULL;
 
 exit:
+#ifndef __OpenBSD__
 	freelocale(loc);
+#endif
 
 	return needlestart;
 }
@@@@ -1662,8 +1670,10 @@@@ ECLocale::ECLocale(const ECLocale &other)
 }
 
 ECLocale::~ECLocale() {
+#ifndef __OpenBSD__
 	if (m_locale)
 		freelocale(m_locale);
+#endif
 }
 
 ECLocale &ECLocale::operator=(const ECLocale &other) {
@


1.6
log
@update to 7.2.2
@
text
@d1 4
a4 4
$OpenBSD: patch-common_ustringutil_cpp,v 1.5 2015/11/02 11:06:34 robert Exp $
--- common/ustringutil.cpp.orig	Wed Mar 23 12:14:33 2016
+++ common/ustringutil.cpp	Thu Mar 31 23:23:31 2016
@@@@ -169,12 +169,18 @@@@ int ECSortKey::compareTo(const ECSortKey &other) const
d20 1
a20 1
 			needlepos++;
d23 1
a23 1
@@@@ -189,7 +195,9 @@@@ const char* str_ifind(const char *haystack, const char
d33 1
a33 1
@@@@ -1704,8 +1712,10 @@@@ ECLocale::ECLocale(const ECLocale &other)
@


1.5
log
@update to 7.2.1
@
text
@d1 4
a4 4
$OpenBSD$
--- common/ustringutil.cpp.orig	Thu Aug 20 12:51:22 2015
+++ common/ustringutil.cpp	Thu Aug 20 12:52:28 2015
@@@@ -164,12 +164,18 @@@@ int ECSortKey::compareTo(const ECSortKey &other) const
d23 1
a23 1
@@@@ -184,7 +190,9 @@@@ const char* str_ifind(const char *haystack, const char
d33 1
a33 1
@@@@ -1601,8 +1609,10 @@@@ ECLocale::ECLocale(const ECLocale &other)
@


1.4
log
@update to 7.2.0
@
text
@d1 4
a4 4
$OpenBSD: patch-common_ustringutil_cpp,v 1.3 2012/10/28 21:51:08 robert Exp $
--- common/ustringutil.cpp.orig	Thu Mar  5 16:54:04 2015
+++ common/ustringutil.cpp	Fri Apr  3 23:11:10 2015
@@@@ -160,12 +160,14 @@@@ int ECSortKey::compareTo(const ECSortKey &other) const
d11 2
a12 2
 	char *needlepos = (char*)needle;
 	char *needlestart = (char*)haystack;
d15 3
a17 1
-		if (toupper_l(*haystack, loc) == toupper_l(*needlepos, loc)) {
d19 1
d23 1
a23 1
@@@@ -180,7 +182,9 @@@@ const char* str_ifind(const char *haystack, const char
d33 1
a33 1
@@@@ -1596,8 +1600,10 @@@@ ECLocale::ECLocale(const ECLocale &other)
@


1.3
log
@update to Zarafa 7.1.1
@
text
@d1 4
a4 4
$OpenBSD: patch-common_ustringutil_cpp,v 1.2 2012/08/30 14:28:22 ajacoutot Exp $
--- common/ustringutil.cpp.orig	Thu Oct 18 19:06:56 2012
+++ common/ustringutil.cpp	Sun Oct 28 21:08:55 2012
@@@@ -165,12 +165,14 @@@@ int ECSortKey::compareTo(const ECSortKey &other) const
d20 1
a20 1
@@@@ -185,7 +187,9 @@@@ const char* str_ifind(const char *haystack, const char
d30 1
a30 1
@@@@ -1601,8 +1605,10 @@@@ ECLocale::ECLocale(const ECLocale &other)
@


1.2
log
@Major update to zarafa-7.1.0.
Complete ChangeLog available at:
http://download.zarafa.com/community/final/7.1/final-changelog-7.1.txt
@
text
@d1 4
a4 4
$OpenBSD: patch-common_ustringutil_cpp,v 1.1 2011/06/02 12:46:37 ajacoutot Exp $
--- common/ustringutil.cpp.orig	Wed Aug  8 17:14:57 2012
+++ common/ustringutil.cpp	Sat Aug 25 17:06:13 2012
@@@@ -168,12 +168,14 @@@@ int ECSortKey::compareTo(const ECSortKey &other) const
d20 1
a20 1
@@@@ -188,7 +190,9 @@@@ const char* str_ifind(const char *haystack, const char
d30 1
a30 1
@@@@ -1559,8 +1563,10 @@@@ ECLocale::ECLocale(const ECLocale &other)
@


1.1
log
@MAJOR update to zarafa-7.0.0 (RC1).
Committing now because this version performs _much_ better than what we
currently have in tree (see HOMEPAGE for details).

Quick&dirty upgrade steps (but you should follow the README):
------------------------------------------------------------------------
# /etc/rc.d/zarafa stop
===> Make sure _all_ zarafa processes are stopped and BACKUP YOUR DB!
# pkg_add -u zarafa zarafa-webaccess zarafa-libvmime
===> merge configuration (compare /usr/local/share/examples/zarara/*.cfg
with their counterparts under /etc/zarafa/.
# /usr/local/bin/zarafa-server
===> this will only do sanity checks but not start the server
# pkg_add py-mysql
# python2.6 /usr/local/share/doc/zarafa/zarafa7-upgrade
# /etc/rc.d/zarafa start
------------------------------------------------------------------------

tested by robert@@ and myself
ok robert@@
@
text
@d1 4
a4 7
$OpenBSD$

Needs newlocale(3).

--- common/ustringutil.cpp.orig	Wed Apr 20 19:51:45 2011
+++ common/ustringutil.cpp	Mon May  2 12:47:53 2011
@@@@ -167,12 +167,14 @@@@ int ECSortKey::compareTo(const ECSortKey &other) const
d20 1
a20 1
@@@@ -187,7 +189,9 @@@@ const char* str_ifind(const char *haystack, const char
d30 1
a30 1
@@@@ -1497,8 +1501,10 @@@@ ECLocale::ECLocale(const ECLocale &other)
@

