head	1.22;
access;
symbols
	OPENBSD_6_1:1.22.0.2
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.21.0.2
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.18.0.4
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.16.0.4
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.2
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.15.0.6
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.4
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.2
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.13.0.2
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7;
locks; strict;
comment	@# @;


1.22
date	2016.09.04.14.52.38;	author robert;	state Exp;
branches;
next	1.21;
commitid	052GCoZR7Wemq90I;

1.21
date	2016.04.20.18.38.41;	author robert;	state Exp;
branches;
next	1.20;
commitid	KBMzdBVp21qnBq3j;

1.20
date	2016.04.01.18.08.10;	author robert;	state Exp;
branches;
next	1.19;
commitid	YBIXgHFu7xINW8BP;

1.19
date	2015.11.02.11.06.34;	author robert;	state Exp;
branches;
next	1.18;
commitid	19wAgXlT9RhqpZjX;

1.18
date	2015.04.06.09.01.45;	author robert;	state Exp;
branches;
next	1.17;
commitid	GqIsCsMMlkE84i91;

1.17
date	2015.04.05.22.25.08;	author robert;	state Exp;
branches;
next	1.16;
commitid	j25w8UqbNvnTFexL;

1.16
date	2014.04.07.13.46.06;	author robert;	state Exp;
branches;
next	1.15;

1.15
date	2012.10.28.21.51.09;	author robert;	state Exp;
branches;
next	1.14;

1.14
date	2012.08.30.14.28.22;	author ajacoutot;	state Exp;
branches;
next	1.13;

1.13
date	2012.05.05.16.56.17;	author ajacoutot;	state Exp;
branches;
next	1.12;

1.12
date	2012.04.25.06.40.51;	author ajacoutot;	state Exp;
branches;
next	1.11;

1.11
date	2012.03.15.17.04.31;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2012.02.27.19.01.34;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2011.11.17.15.14.37;	author ajacoutot;	state Exp;
branches;
next	1.8;

1.8
date	2011.08.16.15.01.17;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.01.23.23.02;	author robert;	state Exp;
branches;
next	1.6;

1.6
date	2011.06.10.15.55.00;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2011.06.02.12.46.37;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.19.17.18.19;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2011.04.04.08.01.04;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.02.16.36.45;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.29.18.00.54;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.22
log
@fix shebang in zarafa-cachestat.py and use SUBST_CMD for /usr/local
as well
@
text
@$OpenBSD: patch-spooler_Spooler_cpp,v 1.21 2016/04/20 18:38:41 robert Exp $
--- spooler/Spooler.cpp.orig	Wed Apr 20 13:13:54 2016
+++ spooler/Spooler.cpp	Wed Apr 20 19:54:13 2016
@@@@ -1151,10 +1151,10 @@@@ int main(int argc, char *argv[]) {
 		{ "smtp_port","25", CONFIGSETTING_RELOADABLE },
 		{ "server_socket", "default:" },
 #ifdef LINUX
-		{ "run_as_user", "zarafa" },
-		{ "run_as_group", "zarafa" },
+		{ "run_as_user", "_zarafa" },
+		{ "run_as_group", "_zarafa" },
 		{ "pid_file", "/var/run/zarafad/spooler.pid" },
-		{ "running_path", "/var/lib/zarafa" },
+		{ "running_path", "${LOCALSTATEDIR}/empty" },
 		{ "coredump_enabled", "no" },
 #endif
 		{ "log_method","file" },
@@@@ -1179,8 +1179,8 @@@@ int main(int argc, char *argv[]) {
 		{ "archive_on_send", "no", CONFIGSETTING_RELOADABLE },
 		{ "enable_dsn", "yes", CONFIGSETTING_RELOADABLE },
         { "plugin_enabled", "yes" },
-        { "plugin_path", "/var/lib/zarafa/spooler/plugins" },
-        { "plugin_manager_path", "/usr/share/zarafa-spooler/python" },
+        { "plugin_path", "${LOCALSTATEDIR}/db/zarafa/spooler/plugins" },
+        { "plugin_manager_path", "${PREFIX}/share/zarafa-spooler/python" },
 		{ "z_statsd_stats", "/var/run/zarafad/statsd.sock" },
 		{ "tmp_path", "/tmp" },
 		{ "tmp_path", "/tmp" },
@@@@ -1311,6 +1311,7 @@@@ int main(int argc, char *argv[]) {
 #ifdef LINUX
 	// detect linuxthreads, which is too broken to correctly run the spooler
 	if (!bForked) {
+#if defined(__linux__)
 		char buffer[256] = { 0 };
 		confstr(_CS_GNU_LIBPTHREAD_VERSION, buffer, sizeof(buffer));
 
@@@@ -1320,6 +1321,10 @@@@ int main(int argc, char *argv[]) {
 			g_lpLogger->Log(EC_LOGLEVEL_WARNING, "WARNING: your system is running with outdated linuxthreads.");
 			g_lpLogger->Log(EC_LOGLEVEL_WARNING, "WARNING: the zarafa-spooler will only be able to send one message at a time.");
 		}
+#elif defined(__OpenBSD__)
+		bNPTL = false;
+		g_lpConfig->AddSetting("max_threads","1");
+#endif
 	}
 #endif
 
@


1.21
log
@update to 7.2.3
@
text
@d1 1
a1 1
$OpenBSD: patch-spooler_Spooler_cpp,v 1.20 2016/04/01 18:08:10 robert Exp $
d14 1
a14 1
+		{ "running_path", "/var/empty" },
d24 2
a25 2
+        { "plugin_path", "/var/db/zarafa/spooler/plugins" },
+        { "plugin_manager_path", "/usr/local/share/zarafa-spooler/python" },
@


1.20
log
@update to 7.2.2
@
text
@d1 4
a4 4
$OpenBSD$
--- spooler/Spooler.cpp.orig	Wed Mar 23 12:14:33 2016
+++ spooler/Spooler.cpp	Fri Apr  1 13:25:33 2016
@@@@ -1166,10 +1166,10 @@@@ int main(int argc, char *argv[]) {
d18 1
a18 1
@@@@ -1194,8 +1194,8 @@@@ int main(int argc, char *argv[]) {
d29 1
a29 1
@@@@ -1322,6 +1322,7 @@@@ int main(int argc, char *argv[]) {
d37 1
a37 1
@@@@ -1331,6 +1332,10 @@@@ int main(int argc, char *argv[]) {
@


1.19
log
@update to 7.2.1
@
text
@d2 17
a18 3
--- spooler/Spooler.cpp.orig	Fri Sep 11 10:47:40 2015
+++ spooler/Spooler.cpp	Thu Sep 24 16:56:51 2015
@@@@ -1143,8 +1143,8 @@@@ int main(int argc, char *argv[]) {
d26 1
a26 1
 		{ "z_statsd_stats", "/var/run/zarafa-zstatsd" },
d29 2
a30 2
@@@@ -1262,6 +1262,7 @@@@ int main(int argc, char *argv[]) {
 
d37 1
a37 1
@@@@ -1271,6 +1272,10 @@@@ int main(int argc, char *argv[]) {
d46 1
a47 1
 	// set socket filename
@


1.18
log
@only allow one thread to work for the spooler to avoid zombie processes
after sending out emails
@
text
@d1 4
a4 4
$OpenBSD: patch-spooler_Spooler_cpp,v 1.17 2015/04/05 22:25:08 robert Exp $
--- spooler/Spooler.cpp.orig	Thu Mar  5 16:54:04 2015
+++ spooler/Spooler.cpp	Mon Apr  6 11:00:48 2015
@@@@ -1145,8 +1145,8 @@@@ int main(int argc, char *argv[]) {
d12 4
a15 4
 		{ NULL, NULL },
 	};
     // SIGSEGV backtrace support
@@@@ -1259,6 +1259,7 @@@@ int main(int argc, char *argv[]) {
d20 1
a20 1
 		char buffer[256];
d22 2
a23 2
 		if (strncmp(buffer, "linuxthreads", strlen("linuxthreads")) == 0) {
@@@@ -1267,6 +1268,10 @@@@ int main(int argc, char *argv[]) {
@


1.17
log
@update to 7.2.0
@
text
@d1 1
a1 1
$OpenBSD: patch-spooler_Spooler_cpp,v 1.16 2014/04/07 13:46:06 robert Exp $
d3 1
a3 1
+++ spooler/Spooler.cpp	Fri Apr  3 23:11:10 2015
d23 1
a23 1
@@@@ -1267,6 +1268,9 @@@@ int main(int argc, char *argv[]) {
d28 2
a29 1
+		bNPTL = true;
@


1.16
log
@update to 7.1.9
@
text
@d1 4
a4 4
$OpenBSD: patch-spooler_Spooler_cpp,v 1.15 2012/10/28 21:51:09 robert Exp $
--- spooler/Spooler.cpp.orig	Mon Mar 31 13:45:38 2014
+++ spooler/Spooler.cpp	Sun Apr  6 19:53:28 2014
@@@@ -1140,8 +1140,8 @@@@ int main(int argc, char *argv[]) {
d15 1
a15 1
@@@@ -1254,6 +1254,7 @@@@ int main(int argc, char *argv[]) {
d23 3
a25 3
@@@@ -1262,6 +1263,9 @@@@ int main(int argc, char *argv[]) {
 			g_lpLogger->Log(EC_LOGLEVEL_FATAL, "WARNING: your system is running with outdated linuxthreads.");
 			g_lpLogger->Log(EC_LOGLEVEL_FATAL, "WARNING: the zarafa-spooler will only be able to send one message at a time.");
@


1.15
log
@update to Zarafa 7.1.1
@
text
@d1 4
a4 4
$OpenBSD: patch-spooler_Spooler_cpp,v 1.14 2012/08/30 14:28:22 ajacoutot Exp $
--- spooler/Spooler.cpp.orig	Thu Oct 18 19:06:58 2012
+++ spooler/Spooler.cpp	Sun Oct 28 21:08:55 2012
@@@@ -1139,8 +1139,8 @@@@ int main(int argc, char *argv[]) {
d11 1
a11 1
+        { "plugin_manager_path", "${PREFIX}/share/zarafa-spooler/python" },
d15 1
a15 1
@@@@ -1253,6 +1253,7 @@@@ int main(int argc, char *argv[]) {
d23 1
a23 1
@@@@ -1261,6 +1262,9 @@@@ int main(int argc, char *argv[]) {
@


1.14
log
@Major update to zarafa-7.1.0.
Complete ChangeLog available at:
http://download.zarafa.com/community/final/7.1/final-changelog-7.1.txt
@
text
@d1 3
a3 3
$OpenBSD: patch-spooler_Spooler_cpp,v 1.13 2012/05/05 16:56:17 ajacoutot Exp $
--- spooler/Spooler.cpp.orig	Wed Aug  8 17:14:58 2012
+++ spooler/Spooler.cpp	Mon Aug 27 10:26:16 2012
d15 1
a15 1
@@@@ -1245,6 +1245,7 @@@@ int main(int argc, char *argv[]) {
d23 1
a23 1
@@@@ -1253,6 +1254,9 @@@@ int main(int argc, char *argv[]) {
@


1.13
log
@Update zarafa to 7.0.7.
Detailed changelog at:
http://download.zarafa.com/community/final/7.0/final-changelog-7.0.txt
@
text
@d1 15
a15 4
$OpenBSD: patch-spooler_Spooler_cpp,v 1.12 2012/04/25 06:40:51 ajacoutot Exp $
--- spooler/Spooler.cpp.orig	Thu May  3 16:37:10 2012
+++ spooler/Spooler.cpp	Sat May  5 17:39:39 2012
@@@@ -1223,6 +1223,7 @@@@ int main(int argc, char *argv[]) {
d23 1
a23 1
@@@@ -1231,6 +1232,9 @@@@ int main(int argc, char *argv[]) {
@


1.12
log
@Remove outdated comment.
@
text
@d1 4
a4 4
$OpenBSD: patch-spooler_Spooler_cpp,v 1.11 2012/03/15 17:04:31 ajacoutot Exp $
--- spooler/Spooler.cpp.orig	Tue Mar 13 16:43:36 2012
+++ spooler/Spooler.cpp	Thu Mar 15 16:42:28 2012
@@@@ -1218,6 +1218,7 @@@@ int main(int argc, char *argv[]) {
d12 1
a12 1
@@@@ -1226,6 +1227,9 @@@@ int main(int argc, char *argv[]) {
@


1.11
log
@Update to zarafa-7.0.6.
More details at:
http://download.zarafa.com/community/final/7.0/final-changelog-7.0.txt
@
text
@d1 1
a1 4
$OpenBSD: patch-spooler_Spooler_cpp,v 1.10 2012/02/27 19:01:34 ajacoutot Exp $

XXX to be revisited

@


1.10
log
@Make this work with rthreads.
Fix store creation.
Add a comment for the procmail sample in the README.
@
text
@d1 1
a1 1
$OpenBSD: patch-spooler_Spooler_cpp,v 1.9 2011/11/17 15:14:37 ajacoutot Exp $
d5 3
a7 3
--- spooler/Spooler.cpp.orig	Thu Nov 17 03:03:22 2011
+++ spooler/Spooler.cpp	Thu Nov 17 14:59:14 2011
@@@@ -1217,6 +1217,7 @@@@ int main(int argc, char *argv[]) {
d15 1
a15 1
@@@@ -1225,6 +1226,9 @@@@ int main(int argc, char *argv[]) {
@


1.9
log
@Update to zarafa-7.0.3.
@
text
@d1 1
a1 1
$OpenBSD: patch-spooler_Spooler_cpp,v 1.8 2011/08/16 15:01:17 ajacoutot Exp $
d20 1
a20 1
+		bNPTL = false;
a24 13
@@@@ -1323,11 +1327,8 @@@@ int main(int argc, char *argv[]) {
 		if (bNPTL) {
 			g_lpLogger->Log(EC_LOGLEVEL_DEBUG, "Joining signal thread");
 			pthread_join(signal_thread, NULL);
-			g_lpLogger->Log(EC_LOGLEVEL_FATAL, "Spooler shutdown complete");
-		} else {
-			// ignore the death of the pipe logger
-			signal(SIGCHLD, SIG_IGN);
 		}
+		g_lpLogger->Log(EC_LOGLEVEL_FATAL, "Spooler shutdown complete");
 	}
 
 	MAPIUninitialize();
@


1.8
log
@Update to zarafa 7.0.1.
See http://download.zarafa.com/community/final/7.0/final-changelog-7.0.txt
for details.
@
text
@d1 1
a1 1
$OpenBSD: patch-spooler_Spooler_cpp,v 1.7 2011/07/01 23:23:02 robert Exp $
d5 3
a7 5
--- spooler/Spooler.cpp.orig	Tue Aug  2 15:02:47 2011
+++ spooler/Spooler.cpp	Sun Aug 14 04:45:52 2011
@@@@ -1214,6 +1214,7 @@@@ int main(int argc, char *argv[]) {
 	if (g_lpConfig->HasWarnings())
 		LogConfigErrors(g_lpConfig, g_lpLogger);
a8 1
+#ifdef __linux__
d11 1
d13 4
a16 1
@@@@ -1225,7 +1226,13 @@@@ int main(int argc, char *argv[]) {
d19 3
a22 1
+#endif
a23 5
+#ifdef __OpenBSD__
+	bNPTL = false;
+#endif
+
+
d25 1
a25 3
 	if (!szPath)
 		szPath = g_lpConfig->GetSetting("server_socket");
@@@@ -1322,11 +1329,8 @@@@ int main(int argc, char *argv[]) {
@


1.7
log
@Do not ignore SIGCHLD when shutting down the spooler to avoid
having zombie processes around after shutting down.
Remove the XXX hack from the rc script, because that's not needed anymore.

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-spooler_Spooler_cpp,v 1.6 2011/06/10 15:55:00 ajacoutot Exp $
d5 3
a7 3
--- spooler/Spooler.cpp.orig	Wed Jun 22 00:02:19 2011
+++ spooler/Spooler.cpp	Sat Jul  2 01:07:50 2011
@@@@ -1213,6 +1213,7 @@@@ int main(int argc, char *argv[]) {
d15 1
a15 1
@@@@ -1224,7 +1225,13 @@@@ int main(int argc, char *argv[]) {
d29 1
a29 1
@@@@ -1321,11 +1328,8 @@@@ int main(int argc, char *argv[]) {
@


1.6
log
@Update to zarafa-7.0.0 (rc2).
@
text
@d1 1
a1 1
$OpenBSD: patch-spooler_Spooler_cpp,v 1.5 2011/06/02 12:46:37 ajacoutot Exp $
d5 2
a6 2
--- spooler/Spooler.cpp.orig	Fri Jun 10 03:37:37 2011
+++ spooler/Spooler.cpp	Fri Jun 10 13:33:17 2011
d15 1
a15 1
@@@@ -1224,6 +1225,12 @@@@ int main(int argc, char *argv[]) {
d20 1
a20 1
+
d25 1
a25 1
 
d28 14
@


1.5
log
@MAJOR update to zarafa-7.0.0 (RC1).
Committing now because this version performs _much_ better than what we
currently have in tree (see HOMEPAGE for details).

Quick&dirty upgrade steps (but you should follow the README):
------------------------------------------------------------------------
# /etc/rc.d/zarafa stop
===> Make sure _all_ zarafa processes are stopped and BACKUP YOUR DB!
# pkg_add -u zarafa zarafa-webaccess zarafa-libvmime
===> merge configuration (compare /usr/local/share/examples/zarara/*.cfg
with their counterparts under /etc/zarafa/.
# /usr/local/bin/zarafa-server
===> this will only do sanity checks but not start the server
# pkg_add py-mysql
# python2.6 /usr/local/share/doc/zarafa/zarafa7-upgrade
# /etc/rc.d/zarafa start
------------------------------------------------------------------------

tested by robert@@ and myself
ok robert@@
@
text
@d1 1
a1 1
$OpenBSD: patch-spooler_Spooler_cpp,v 1.4 2011/05/19 17:18:19 ajacoutot Exp $
d5 3
a7 3
--- spooler/Spooler.cpp.orig	Wed Apr 20 19:51:46 2011
+++ spooler/Spooler.cpp	Sun May 29 07:13:40 2011
@@@@ -1192,6 +1192,7 @@@@ int main(int argc, char *argv[]) {
d15 1
a15 1
@@@@ -1203,6 +1204,12 @@@@ int main(int argc, char *argv[]) {
@


1.4
log
@Bugfix update to zarafa-6.40.8.
More details at:
http://download.zarafa.com/community/final/6.40/changelog-6.40.txt
@
text
@d1 1
a1 1
$OpenBSD: patch-spooler_Spooler_cpp,v 1.3 2011/04/04 08:01:04 ajacoutot Exp $
d5 3
a7 3
--- spooler/Spooler.cpp.orig	Thu May 19 17:01:36 2011
+++ spooler/Spooler.cpp	Thu May 19 18:30:37 2011
@@@@ -1080,6 +1080,7 @@@@ int main(int argc, char *argv[]) {
d15 1
a15 1
@@@@ -1091,6 +1092,12 @@@@ int main(int argc, char *argv[]) {
@


1.3
log
@Add clucene support (i.e. enable zarafa-indexer). Note that the
zarafa-indexer is not used by default.
Tweak patches accordingly.
Use RLIMIT_DATA instead of RLIMIT_AS which we don't have.

Fix default client_update_path.
Remove a couple of patch entries that are not needed anymore.

Rewrite zarafa.rc and make it a wrapper script that calls the provided
rc.d(8) scripts. This is much more simple, makes much more sense and
allow for proper debugging as discussed with robert@@.
@
text
@d1 1
a1 1
$OpenBSD: patch-spooler_Spooler_cpp,v 1.2 2011/04/02 16:36:45 robert Exp $
d5 3
a7 3
--- spooler/Spooler.cpp.orig	Tue Mar 29 00:04:09 2011
+++ spooler/Spooler.cpp	Sun Apr  3 08:23:15 2011
@@@@ -1070,6 +1070,7 @@@@ int main(int argc, char *argv[]) {
d15 1
a15 1
@@@@ -1081,6 +1082,12 @@@@ int main(int argc, char *argv[]) {
@


1.2
log
@make sure that we don't try to use NPTL code because if we do, all of the
zarafa-spooler processes will end up as zombies and we won't be able
to send emails.
this commit also removed the upper limit of 1 thread and from now on
we use the default value which is 5.

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-spooler_Spooler_cpp,v 1.1 2011/03/29 18:00:54 ajacoutot Exp $
d6 1
a6 1
+++ spooler/Spooler.cpp	Sat Apr  2 18:19:42 2011
d15 1
a15 1
@@@@ -1081,6 +1082,13 @@@@ int main(int argc, char *argv[]) {
a20 1
+// let's be safe because our userland pthreads(3) sucks
@


1.1
log
@Forgot in previous.
@
text
@d1 1
a1 1
$OpenBSD$
a3 1
See also patch-installer_linux_spooler_cfg
d6 1
a6 1
+++ spooler/Spooler.cpp	Tue Mar 29 19:07:28 2011
d23 1
a23 1
+	g_lpConfig->AddSetting("max_threads","1");
@

