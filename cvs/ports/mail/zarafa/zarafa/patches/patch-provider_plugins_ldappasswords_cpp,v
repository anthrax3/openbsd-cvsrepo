head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2016.04.20.18.38.41;	author robert;	state Exp;
branches;
next	1.3;
commitid	KBMzdBVp21qnBq3j;

1.3
date	2015.11.02.11.06.34;	author robert;	state Exp;
branches;
next	1.2;
commitid	19wAgXlT9RhqpZjX;

1.2
date	2015.04.05.22.25.08;	author robert;	state Exp;
branches;
next	1.1;
commitid	j25w8UqbNvnTFexL;

1.1
date	2014.04.15.16.56.42;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to 7.2.3
@
text
@$OpenBSD: patch-provider_plugins_ldappasswords_cpp,v 1.3 2015/11/02 11:06:34 robert Exp $
--- provider/plugins/ldappasswords.cpp.orig	Wed Apr 20 13:13:54 2016
+++ provider/plugins/ldappasswords.cpp	Wed Apr 20 19:54:13 2016
@@@@ -30,6 +30,10 @@@@
 
 #include "ldappasswords.h"
 
+#ifdef __OpenBSD__
+#define des_fcrypt DES_fcrypt
+#endif
+
 using namespace std;
 
 
@


1.3
log
@update to 7.2.1
@
text
@d1 4
a4 4
$OpenBSD: patch-provider_plugins_ldappasswords_cpp,v 1.2 2015/04/05 22:25:08 robert Exp $
--- provider/plugins/ldappasswords.cpp.orig	Wed Aug  5 17:30:47 2015
+++ provider/plugins/ldappasswords.cpp	Thu Aug 20 12:36:50 2015
@@@@ -56,6 +56,10 @@@@
@


1.2
log
@update to 7.2.0
@
text
@d1 4
a4 4
$OpenBSD$
--- provider/plugins/ldappasswords.cpp.orig	Sun Apr  5 15:00:04 2015
+++ provider/plugins/ldappasswords.cpp	Sun Apr  5 15:05:45 2015
@@@@ -57,6 +57,10 @@@@
@


1.1
log
@switch from the ancient des_ API to DES_
@
text
@d2 3
a4 5
--- provider/plugins/ldappasswords.cpp.orig	Mon Mar 31 13:45:38 2014
+++ provider/plugins/ldappasswords.cpp	Tue Apr 15 18:27:06 2014
@@@@ -119,7 +119,7 @@@@ static char *password_encrypt_crypt(const char *data, 
 	salt[0] = saltchars[rand[0] & 63];
 	salt[1] = saltchars[rand[1] & 63];
d6 1
a6 2
-	des_fcrypt(data, salt, cryptbuf);
+	DES_fcrypt(data, salt, cryptbuf);
d8 5
a12 5
 	res = new char[32];
 	snprintf(res, 31, "{CRYPT}%s", cryptbuf);
@@@@ -135,7 +135,7 @@@@ static int password_check_crypt(const char *data, unsi
 	salt[1] = crypted[1];
 	salt[2] = 0;
a13 2
-	des_fcrypt(data, salt, cryptbuf);
+	DES_fcrypt(data, salt, cryptbuf);
a14 2
 	if (!strcmp(cryptbuf, crypted))
 		return 0;
@

