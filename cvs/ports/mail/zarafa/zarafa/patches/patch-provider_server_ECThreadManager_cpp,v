head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.4
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2016.04.20.18.38.41;	author robert;	state Exp;
branches;
next	1.7;
commitid	KBMzdBVp21qnBq3j;

1.7
date	2016.04.01.18.08.10;	author robert;	state Exp;
branches;
next	1.6;
commitid	YBIXgHFu7xINW8BP;

1.6
date	2015.11.02.11.06.34;	author robert;	state Exp;
branches;
next	1.5;
commitid	19wAgXlT9RhqpZjX;

1.5
date	2015.04.05.22.25.08;	author robert;	state Exp;
branches;
next	1.4;
commitid	j25w8UqbNvnTFexL;

1.4
date	2013.06.17.20.54.06;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2013.01.27.13.06.20;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.05.16.56.17;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.02.12.46.37;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.8
log
@update to 7.2.3
@
text
@$OpenBSD: patch-provider_server_ECThreadManager_cpp,v 1.7 2016/04/01 18:08:10 robert Exp $
--- provider/server/ECThreadManager.cpp.orig	Wed Apr 20 13:13:54 2016
+++ provider/server/ECThreadManager.cpp	Wed Apr 20 19:54:13 2016
@@@@ -143,7 +143,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
 	// Win32 pthread_t is a struct, which we can't cast to a ULONG.
     lpThis->m_lpLogger->Log(EC_LOGLEVEL_DEBUG, "Started%sthread %p", lpPrio ? " priority " : " ", pthread_self().p);
 #else
-    lpThis->m_lpLogger->Log(EC_LOGLEVEL_DEBUG, "Started%sthread %08x", lpPrio ? " priority " : " ", (ULONG)pthread_self());
+    lpThis->m_lpLogger->Log(EC_LOGLEVEL_DEBUG, "Started%sthread %08x", lpPrio ? " priority " : " ", (uintptr_t)pthread_self());
 #endif
     
     while(1) {
@@@@ -160,7 +160,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
 				// Win32 pthread_t is a struct, which we can't cast to a ULONG.
 				lpThis->m_lpLogger->Log(EC_LOGLEVEL_DEBUG, "Thread %p idle and requested to exit", pthread_self().p);
 #else
-                lpThis->m_lpLogger->Log(EC_LOGLEVEL_DEBUG, "Thread %08x idle and requested to exit", (ULONG)pthread_self());
+                lpThis->m_lpLogger->Log(EC_LOGLEVEL_DEBUG, "Thread %08x idle and requested to exit", (uintptr_t)pthread_self());
 #endif
                 break;
             }
@


1.7
log
@update to 7.2.2
@
text
@d1 4
a4 4
$OpenBSD$
--- provider/server/ECThreadManager.cpp.orig	Fri Apr  1 10:32:31 2016
+++ provider/server/ECThreadManager.cpp	Fri Apr  1 10:32:44 2016
@@@@ -170,7 +170,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
d13 1
a13 1
@@@@ -187,7 +187,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
@


1.6
log
@update to 7.2.1
@
text
@d1 7
a7 7
$OpenBSD: patch-provider_server_ECThreadManager_cpp,v 1.5 2015/04/05 22:25:08 robert Exp $
--- provider/server/ECThreadManager.cpp.orig	Wed Aug  5 17:30:48 2015
+++ provider/server/ECThreadManager.cpp	Thu Aug 20 12:36:50 2015
@@@@ -164,7 +164,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
     bool fStop = false;
 	int err = 0;
 
d10 1
d13 4
a16 5
 		set_thread_name(pthread_self(), "z-s: idle thread");
@@@@ -176,7 +176,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
             
             // We were requested to exit due to idle state
             if(fStop) {
d19 1
a21 1
                 
@


1.5
log
@update to 7.2.0
@
text
@d1 4
a4 4
$OpenBSD: patch-provider_server_ECThreadManager_cpp,v 1.4 2013/06/17 20:54:06 ajacoutot Exp $
--- provider/server/ECThreadManager.cpp.orig	Thu Mar  5 16:54:03 2015
+++ provider/server/ECThreadManager.cpp	Fri Apr  3 23:11:10 2015
@@@@ -159,7 +159,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
d12 2
a13 2
         // Get the next work item, don't wait for new items
@@@@ -169,7 +169,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
@


1.4
log
@We have CLOCK_THREAD_CPUTIME_ID now.
@
text
@d1 4
a4 4
$OpenBSD: patch-provider_server_ECThreadManager_cpp,v 1.3 2013/01/27 13:06:20 robert Exp $
--- provider/server/ECThreadManager.cpp.orig	Thu Feb 28 17:13:17 2013
+++ provider/server/ECThreadManager.cpp	Mon Jun 17 21:55:21 2013
@@@@ -164,7 +164,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
d13 1
a13 1
@@@@ -174,7 +174,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
@


1.3
log
@update to 7.1.3
@
text
@d1 4
a4 8
$OpenBSD: patch-provider_server_ECThreadManager_cpp,v 1.2 2012/05/05 16:56:17 ajacoutot Exp $
--- provider/server/ECThreadManager.cpp.orig	Wed Dec  5 16:06:37 2012
+++ provider/server/ECThreadManager.cpp	Mon Jan 21 20:15:05 2013
@@@@ -161,10 +161,11 @@@@ void *ECWorkerThread::Work(void *lpParam)
 	ECPriorityWorkerThread *lpPrio = dynamic_cast<ECPriorityWorkerThread*>(lpThis);
     WORKITEM *lpWorkItem = NULL;
     ECRESULT er = erSuccess;
+    struct tms tstart;
d13 1
a13 1
@@@@ -174,7 +175,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
a21 10
@@@@ -203,7 +204,8 @@@@ void *ECWorkerThread::Work(void *lpParam)
             ((SOAPINFO *)lpWorkItem->soap->user)->ulLastSessionId = 0;
             // Pass information on start time of the request into soap->user, so that it can be applied to the correct
             // session after XML parsing
-            clock_gettime(CLOCK_THREAD_CPUTIME_ID, &((SOAPINFO *)lpWorkItem->soap->user)->threadstart);
+	    times(&tstart);
+	    ((SOAPINFO *)lpWorkItem->soap->user)->threadstart.tv_sec = tstart.tms_utime / CLOCKS_PER_SEC;
             ((SOAPINFO *)lpWorkItem->soap->user)->start = GetTimeOfDay();
             ((SOAPINFO *)lpWorkItem->soap->user)->szFname = NULL;
 
@


1.2
log
@Update zarafa to 7.0.7.
Detailed changelog at:
http://download.zarafa.com/community/final/7.0/final-changelog-7.0.txt
@
text
@d1 8
a8 4
$OpenBSD: patch-provider_server_ECThreadManager_cpp,v 1.1 2011/06/02 12:46:37 ajacoutot Exp $
--- provider/server/ECThreadManager.cpp.orig	Thu May  3 16:37:11 2012
+++ provider/server/ECThreadManager.cpp	Sat May  5 17:42:32 2012
@@@@ -164,7 +164,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
d17 1
a17 1
@@@@ -174,7 +174,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
d26 10
@


1.1
log
@MAJOR update to zarafa-7.0.0 (RC1).
Committing now because this version performs _much_ better than what we
currently have in tree (see HOMEPAGE for details).

Quick&dirty upgrade steps (but you should follow the README):
------------------------------------------------------------------------
# /etc/rc.d/zarafa stop
===> Make sure _all_ zarafa processes are stopped and BACKUP YOUR DB!
# pkg_add -u zarafa zarafa-webaccess zarafa-libvmime
===> merge configuration (compare /usr/local/share/examples/zarara/*.cfg
with their counterparts under /etc/zarafa/.
# /usr/local/bin/zarafa-server
===> this will only do sanity checks but not start the server
# pkg_add py-mysql
# python2.6 /usr/local/share/doc/zarafa/zarafa7-upgrade
# /etc/rc.d/zarafa start
------------------------------------------------------------------------

tested by robert@@ and myself
ok robert@@
@
text
@d1 4
a4 4
$OpenBSD$
--- provider/server/ECThreadManager.cpp.orig	Thu Jun  2 11:46:06 2011
+++ provider/server/ECThreadManager.cpp	Thu Jun  2 11:46:35 2011
@@@@ -149,7 +149,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
d8 2
a9 2
-    lpThis->m_lpLogger->Log(EC_LOGLEVEL_DEBUG, "Started thread %08x", (ULONG)pthread_self());
+    lpThis->m_lpLogger->Log(EC_LOGLEVEL_DEBUG, "Started thread %08x", (uintptr_t)pthread_self());
d13 1
a13 1
@@@@ -159,7 +159,7 @@@@ void *ECWorkerThread::Work(void *lpParam)
@

