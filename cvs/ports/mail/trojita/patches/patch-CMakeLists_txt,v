head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2016.09.04.14.03.00;	author landry;	state Exp;
branches;
next	1.1;
commitid	5aD0m3JHiSNVG1ie;

1.1
date	2016.08.19.19.42.04;	author dcoppa;	state Exp;
branches;
next	;
commitid	BlKzBssyxCnqV7h3;


desc
@@


1.2
log
@Update to trojita 0.7 and switch to qt5, from maintainer Caspar Schutijser.

Note that this is currently broken at runtime because it uses QtWebKit
which still has W^X violations, but runs fine when testing locally w/
USE_WXNEEDED. cmake hacks/fixes for QtWebKit fixes being looked by dcoppa@@..
@
text
@$OpenBSD: patch-CMakeLists_txt,v 1.1 2016/08/19 19:42:04 dcoppa Exp $
--- CMakeLists.txt.orig	Wed Jun 15 09:17:23 2016
+++ CMakeLists.txt	Sat Aug 20 13:36:13 2016
@@@@ -154,14 +154,6 @@@@ else()
     set(CMAKE_CXX_FLAGS_DEBUG "-Werror ${CMAKE_CXX_FLAGS_DEBUG}")
     # Also see CMP0043...
 
-    # Optimizations are enabled unconditionally because they make a big difference in the speed of the
-    # resulting binaries, and that it is better to allow an opt-out from them by adjusting CXXFLAGS through
-    # an env var at cmake time if needed.
-    # The reason for not manipulating just CMAKE_CXX_FLAGS_DEBUG is that unrecognized build types ("DebugFull")
-    # should still benefit from these optimizations. Yup, it would be even better if CMake did a sane thing
-    # and warned when users set an unrecognized and unused build type, but that just isn't the case.
-    set(CMAKE_CXX_FLAGS "-O2 ${CMAKE_CXX_FLAGS}")
-
     # Build warnings are useful tools (and Trojita should be warning-free anyway), enable them on all
     # configurations. They are warnings, not errors.
     set(CMAKE_CXX_FLAGS "-Wall -Wsign-compare ${CMAKE_CXX_FLAGS}")
@@@@ -786,32 +778,6 @@@@ if(WITH_TESTS)
     trojita_test(Imap Imap_Offline)
     trojita_test(Imap Imap_CopyAndFlagOperations)
     trojita_test(Cryptography Cryptography_MessageModel)
-
-    if(WITH_CRYPTO_MESSAGES)
-      find_program(GPGCONF_BINARY NAMES gpgconf)
-      if(GPGCONF_BINARY_NOTFOUND)
-        message(SEND_ERROR "The `gpgconf` binary from GnuPG not found, this is needed for crypto tests.")
-      endif()
-
-      if(NOT UNIX)
-        message(SEND_ERROR "The Cryptography unit tests really need Unix. Patches welcome.")
-      endif()
-
-      add_library(fake-dev-random SHARED ${CMAKE_CURRENT_SOURCE_DIR}/tests/Utils/fake-dev-random.c)
-      target_link_libraries(fake-dev-random dl)
-
-      # FIXME: it would be nice to depend on the contents of keys/, but in my testing it produces Makefiles
-      # which suffer from races (the keygen.sh is run multiple times in parallel within the CI environment).
-      # I wasn't able to track down the root cause behind this; it affected all cmake versions within the CI
-      # as of Feb 2016, which is 3.1.something up to 3.3.something.
-      add_custom_command(OUTPUT crypto_test_data.h
-        COMMAND bash ${CMAKE_CURRENT_SOURCE_DIR}/tests/Cryptography/keygen.sh ${CMAKE_CURRENT_SOURCE_DIR}
-        DEPENDS fake-dev-random tests/Cryptography/keygen.sh tests/Cryptography/batch-keygen)
-      add_custom_target(crypto_test_data DEPENDS crypto_test_data.h)
-
-      trojita_test(Cryptography Cryptography_PGP)
-      add_dependencies(test_Cryptography_PGP crypto_test_data)
-    endif()
 
     trojita_test(Misc Rfc5322)
     trojita_test(Misc RingBuffer)
@


1.1
log
@
Remove a '-O2' unconditionally added to ${CMAKE_CXX_FLAGS}: we
already pass '-O2' to the build.

That '-Wall -Wsign-compare -O2 -O2 -pipe' was hurting my sense of
aesthetics.
@
text
@d1 4
a4 4
$OpenBSD$
--- CMakeLists.txt.orig	Fri Aug 19 11:42:02 2016
+++ CMakeLists.txt	Fri Aug 19 11:42:58 2016
@@@@ -236,14 +236,6 @@@@ else()
d19 33
@

