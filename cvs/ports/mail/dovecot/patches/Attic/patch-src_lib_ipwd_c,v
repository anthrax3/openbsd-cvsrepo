head	1.7;
access;
symbols
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.2
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2015.04.09.21.25.49;	author sthen;	state dead;
branches;
next	1.6;
commitid	mqU683H2tEcS5a7l;

1.6
date	2014.03.16.09.42.12;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2013.09.27.01.35.51;	author brad;	state dead;
branches;
next	1.4;

1.4
date	2013.09.02.16.02.00;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.01.10.53.50;	author sthen;	state dead;
branches;
next	1.2;

1.2
date	2011.07.22.20.15.47;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.23.22.54.38;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to Dovecot 2.2.16, from Brad (maintainer)
@
text
@$OpenBSD: patch-src_lib_ipwd_c,v 1.6 2014/03/16 09:42:12 brad Exp $
--- src/lib/ipwd.c.orig	Thu Feb  6 00:04:06 2014
+++ src/lib/ipwd.c	Thu Feb  6 00:04:31 2014
@@@@ -50,11 +50,6 @@@@ int i_getpwnam(const char *name, struct passwd *pwd_r)
 	do {
 		pw_init();
 		errno = getpwnam_r(name, pwd_r, pwbuf, pwbuf_size, &result);
-#ifdef __OpenBSD__
-		/* OpenBSD returns 1 for all errors, assume it's ERANGE */
-		if (errno == 1)
-			errno = ERANGE;
-#endif
 	} while (errno == ERANGE);
 	if (result != NULL)
 		return 1;
@@@@ -73,11 +68,6 @@@@ int i_getpwuid(uid_t uid, struct passwd *pwd_r)
 	do {
 		pw_init();
 		errno = getpwuid_r(uid, pwd_r, pwbuf, pwbuf_size, &result);
-#ifdef __OpenBSD__
-		/* OpenBSD returns 1 for all errors, assume it's ERANGE */
-		if (errno == 1)
-			errno = ERANGE;
-#endif
 	} while (errno == ERANGE);
 	if (result != NULL)
 		return 1;
@


1.6
log
@Remove workaround that was added to workaround non POSIX compliant
getpwnam_r / getpwuid_r functions.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@Update to Dovecot 2.2.6.

ok sthen@@
@
text
@d1 13
a13 70
$OpenBSD: patch-src_lib_ipwd_c,v 1.4 2013/09/02 16:02:00 brad Exp $
--- src/lib/ipwd.c.orig	Mon Sep  2 11:04:44 2013
+++ src/lib/ipwd.c	Mon Sep  2 11:08:41 2013
@@@@ -6,33 +6,41 @@@@
 
 #include <unistd.h>
 
-#define PWBUF_MIN_SIZE 128
-#define GRBUF_MIN_SIZE 128
+#define DEFAULT_PWBUF_SIZE 16384
+#define DEFAULT_GRBUF_SIZE 16384
 
 static void *pwbuf = NULL, *grbuf = NULL;
 static size_t pwbuf_size, grbuf_size;
 
 static void pw_init(void)
 {
-	size_t old_pwbuf_size = pwbuf_size;
+	long size;
 
-	if (pwbuf == NULL || errno == ERANGE) {
-		pwbuf_size = nearest_power(old_pwbuf_size + 1);
-		if (pwbuf_size < PWBUF_MIN_SIZE)
-			pwbuf_size = PWBUF_MIN_SIZE;
-		pwbuf = i_realloc(pwbuf, old_pwbuf_size, pwbuf_size);
+	if (pwbuf == NULL) {
+		size = sysconf(_SC_GETPW_R_SIZE_MAX);
+		if (size < 0)
+			size = DEFAULT_PWBUF_SIZE;
+
+		pwbuf_size = size;
+		pwbuf = i_malloc(pwbuf_size);
 	}
 }
 
 static void gr_init(void)
 {
-	size_t old_grbuf_size = grbuf_size;
+	long size;
 
-	if (grbuf == NULL || errno == ERANGE) {
-		grbuf_size = nearest_power(old_grbuf_size + 1);
-		if (grbuf_size < PWBUF_MIN_SIZE)
-			grbuf_size = PWBUF_MIN_SIZE;
-		grbuf = i_realloc(grbuf, old_grbuf_size, grbuf_size);
+	if (grbuf == NULL) {
+		size = sysconf(_SC_GETGR_R_SIZE_MAX);
+		/* Some BSDs return too low value for this. instead of trying
+		   to figure out exactly which, just make sure it's at least
+		   a reasonable size. if the real size is smaller, it doesn't
+		   matter much that we waste a few kilobytes of memory. */
+		if (size < DEFAULT_GRBUF_SIZE)
+			size = DEFAULT_GRBUF_SIZE;
+
+		grbuf_size = size;
+		grbuf = i_malloc(grbuf_size);
 	}
 }
 
@@@@ -46,11 +54,8 @@@@ int i_getpwnam(const char *name, struct passwd *pwd_r)
 {
 	struct passwd *result;
 
-	errno = 0;
-	do {
-		pw_init();
-		errno = getpwnam_r(name, pwd_r, pwbuf, pwbuf_size, &result);
-	} while (errno == ERANGE);
+	pw_init();
+	errno = getpwnam_r(name, pwd_r, pwbuf, pwbuf_size, &result);
d16 10
a25 12
 	if (errno == EINVAL) {
@@@@ -64,11 +69,8 @@@@ int i_getpwuid(uid_t uid, struct passwd *pwd_r)
 {
 	struct passwd *result;
 
-	errno = 0;
-	do {
-		pw_init();
-		errno = getpwuid_r(uid, pwd_r, pwbuf, pwbuf_size, &result);
-	} while (errno == ERANGE);
+	pw_init();
+	errno = getpwuid_r(uid, pwd_r, pwbuf, pwbuf_size, &result);
a27 29
 	return errno == 0 ? 0 : -1;
@@@@ -78,11 +80,8 @@@@ int i_getgrnam(const char *name, struct group *grp_r)
 {
 	struct group *result;
 
-	errno = 0;
-	do {
-		gr_init();
-		errno = getgrnam_r(name, grp_r, grbuf, grbuf_size, &result);
-	} while (errno == ERANGE);
+	gr_init();
+	errno = getgrnam_r(name, grp_r, grbuf, grbuf_size, &result);
 	if (result != NULL)
 		return 1;
 	return errno == 0 ? 0 : -1;
@@@@ -92,11 +91,8 @@@@ int i_getgrgid(gid_t gid, struct group *grp_r)
 {
 	struct group *result;
 
-	errno = 0;
-	do {
-		gr_init();
-		errno = getgrgid_r(gid, grp_r, grbuf, grbuf_size, &result);
-	} while (errno == ERANGE);
+	gr_init();
+	errno = getgrgid_r(gid, grp_r, grbuf, grbuf_size, &result);
 	if (result != NULL)
 		return 1;
 	return errno == 0 ? 0 : -1;
@


1.4
log
@Revert http://hg.dovecot.org/dovecot-2.2/raw-rev/349d52c4ca51 which causes
local account auth to be broken.

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@update to dovecot 2.0.14, various fixes and new features. From Brad.
@
text
@d1 115
a115 15
$OpenBSD: patch-src_lib_ipwd_c,v 1.2 2011/07/22 20:15:47 sthen Exp $
--- src/lib/ipwd.c.orig	Thu Apr 28 10:14:24 2011
+++ src/lib/ipwd.c	Mon Jul 18 18:33:53 2011
@@@@ -31,9 +31,8 @@@@ static void gr_init(void)
 	long size;
 
 	if (grbuf == NULL) {
-		/* OpenBSD (up to 4.8 at least) reports too low value in
-		   sysconf() */
-#ifndef __OpenBSD__
+		/* OpenBSD up to 4.9 reports too low value in sysconf() */
+#if !defined(__OpenBSD__) || OpenBSD >= 201111
 		size = sysconf(_SC_GETGR_R_SIZE_MAX);
 		if (size < 0)
 #endif
@


1.2
log
@Fix rc script mode/group, and adjust an #ifdef in a patch to use a specific
OpenBSD version. From Brad (maintainer).
@
text
@d1 1
a1 1
$OpenBSD: patch-src_lib_ipwd_c,v 1.1 2011/05/23 22:54:38 sthen Exp $
@


1.1
log
@Update dovecot to 2.0.13, joint work between pea@@, Brad and myself, ok pea@@

This is a major update and configuration changes are required -
see http://wiki2.dovecot.org/Upgrading/2.0 for more
@
text
@d1 4
a4 4
$OpenBSD$
--- src/lib/ipwd.c.orig	Wed May 11 20:27:44 2011
+++ src/lib/ipwd.c	Wed May 11 20:28:24 2011
@@@@ -31,12 +31,8 @@@@ static void gr_init(void)
d11 2
d15 1
a15 4
-#endif
 			size = DEFAULT_GRBUF_SIZE;
 
 		grbuf_size = size;
@

