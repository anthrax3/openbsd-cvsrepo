head	1.5;
access;
symbols
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_5:1.3.0.2;
locks; strict;
comment	@# @;


1.5
date	2014.10.16.18.01.57;	author brad;	state dead;
branches;
next	1.4;
commitid	wjSnXn5F22Oxtkah;

1.4
date	2014.07.30.14.28.24;	author naddy;	state Exp;
branches;
next	1.3;
commitid	rFSmDmXMPjLyf9TK;

1.3
date	2014.05.12.09.20.52;	author brad;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2008.06.03.00.16.51;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2008.05.22.07.55.08;	author sthen;	state Exp;
branches;
next	;

1.3.2.1
date	2014.05.12.09.40.19;	author brad;	state Exp;
branches;
next	;

1.3.4.1
date	2014.05.12.09.58.36;	author brad;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to Dovecot 2.2.14.

ok sthen@@
@
text
@$OpenBSD: patch-src_login-common_ssl-proxy-openssl_c,v 1.4 2014/07/30 14:28:24 naddy Exp $

Fix a DoS attack against imap/pop3-login processes. CVE-2014-3430

Check for SSL_CTRL_SET_ECDH_AUTO macro instead of OpenSSL version number.

Fixed compiling with SSL compression disabled.

--- src/login-common/ssl-proxy-openssl.c.orig	Thu Dec 19 16:05:18 2013
+++ src/login-common/ssl-proxy-openssl.c	Tue Jul 29 15:36:52 2014
@@@@ -116,7 +116,6 @@@@ static void plain_read(struct ssl_proxy *proxy);
 static void ssl_read(struct ssl_proxy *proxy);
 static void ssl_write(struct ssl_proxy *proxy);
 static void ssl_step(struct ssl_proxy *proxy);
-static void ssl_proxy_destroy(struct ssl_proxy *proxy);
 static void ssl_proxy_unref(struct ssl_proxy *proxy);
 
 static struct ssl_server_context *
@@@@ -126,7 +125,7 @@@@ static void ssl_server_context_deinit(struct ssl_serve
 
 static void ssl_proxy_ctx_set_crypto_params(SSL_CTX *ssl_ctx,
                                             const struct master_service_ssl_settings *set);
-#if defined(HAVE_ECDH) && OPENSSL_VERSION_NUMBER < 0x10002000L
+#if defined(HAVE_ECDH) && !defined(SSL_CTRL_SET_ECDH_AUTO)
 static int ssl_proxy_ctx_get_pkey_ec_curve_name(const struct master_service_ssl_settings *set);
 #endif
 
@@@@ -770,7 +769,7 @@@@ const char *ssl_proxy_get_security_string(struct ssl_p
 
 const char *ssl_proxy_get_compression(struct ssl_proxy *proxy ATTR_UNUSED)
 {
-#ifdef HAVE_SSL_COMPRESSION
+#if defined(HAVE_SSL_COMPRESSION) && !defined(OPENSSL_NO_COMP)
 	const COMP_METHOD *comp;
 
 	comp = SSL_get_current_compression(proxy->ssl);
@@@@ -807,7 +806,7 @@@@ static void ssl_proxy_unref(struct ssl_proxy *proxy)
 	i_free(proxy);
 }
 
-static void ssl_proxy_destroy(struct ssl_proxy *proxy)
+void ssl_proxy_destroy(struct ssl_proxy *proxy)
 {
 	if (proxy->destroyed)
 		return;
@@@@ -1025,7 +1024,7 @@@@ static void
 ssl_proxy_ctx_set_crypto_params(SSL_CTX *ssl_ctx,
 	const struct master_service_ssl_settings *set ATTR_UNUSED)
 {
-#if defined(HAVE_ECDH) && OPENSSL_VERSION_NUMBER < 0x10002000L
+#if defined(HAVE_ECDH) && !defined(SSL_CTRL_SET_ECDH_AUTO)
 	EC_KEY *ecdh;
 	int nid;
 	const char *curve_name;
@@@@ -1038,7 +1037,7 @@@@ ssl_proxy_ctx_set_crypto_params(SSL_CTX *ssl_ctx,
 	   used instead of ECDHE, do not reuse the same ECDH key pair for
 	   different sessions. This option improves forward secrecy. */
 	SSL_CTX_set_options(ssl_ctx, SSL_OP_SINGLE_ECDH_USE);
-#if OPENSSL_VERSION_NUMBER >= 0x10002000L
+#ifdef SSL_CTRL_SET_ECDH_AUTO
 	/* OpenSSL >= 1.0.2 automatically handles ECDH temporary key parameter
 	   selection. */
 	SSL_CTX_set_ecdh_auto(ssl_ctx, 1);
@@@@ -1153,7 +1152,7 @@@@ ssl_proxy_ctx_use_key(SSL_CTX *ctx,
 	EVP_PKEY_free(pkey);
 }
 
-#if defined(HAVE_ECDH) && OPENSSL_VERSION_NUMBER < 0x10002000L
+#if defined(HAVE_ECDH) && !defined(SSL_CTRL_SET_ECDH_AUTO)
 static int
 ssl_proxy_ctx_get_pkey_ec_curve_name(const struct master_service_ssl_settings *set)
 {
@


1.4
log
@fix build after SSL compression removal; from brad@@ et al.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_login-common_ssl-proxy-openssl_c,v 1.3 2014/05/12 09:20:52 brad Exp $
@


1.3
log
@Fix a DoS attack against imap/pop3-login processes. CVE-2014-3430

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 6
a10 2
--- src/login-common/ssl-proxy-openssl.c.orig	Mon May 12 04:54:09 2014
+++ src/login-common/ssl-proxy-openssl.c	Mon May 12 04:54:37 2014
d19 18
d46 27
@


1.3.4.1
log
@Fix a DoS attack against imap/pop3-login processes. CVE-2014-3430

ok sthen@@
@
text
@d5 3
a7 3
--- src/login-common/ssl-proxy-openssl.c.orig	Sun Feb 17 04:25:30 2013
+++ src/login-common/ssl-proxy-openssl.c	Mon May 12 05:54:59 2014
@@@@ -108,7 +108,6 @@@@ static void plain_read(struct ssl_proxy *proxy);
d15 1
a15 1
@@@@ -783,7 +782,7 @@@@ static void ssl_proxy_unref(struct ssl_proxy *proxy)
@


1.3.2.1
log
@Fix a DoS attack against imap/pop3-login processes. CVE-2014-3430

ok sthen@@
@
text
@@


1.2
log
@Maintenance update, recent patches are now rolled into the
distfile from upstream.  From Brad.
@
text
@d1 12
a12 5
$OpenBSD: patch-src_login-common_ssl-proxy-openssl_c,v 1.1 2008/05/22 07:55:08 sthen Exp $
--- src/login-common/ssl-proxy-openssl.c.orig	Sun May 18 22:42:50 2008
+++ src/login-common/ssl-proxy-openssl.c	Sun May 18 22:43:22 2008
@@@@ -307,8 +307,11 @@@@ static const char *ssl_last_error(void)
 	size_t err_size = 256;
d14 4
a17 8
 	err = ERR_get_error();
-	if (err == 0)
-		return strerror(errno);
+	if (err == 0) {
+		if (errno != 0)
+			return strerror(errno);
+		return "Unknown error";
+	}
d19 5
a23 2
 	buf = t_malloc(err_size);
 	buf[err_size-1] = '\0';
@


1.1
log
@Add some bug-fix patches; at this point in the Dovecot release cycle
most work is on 1.1, so it makes sense to add them locally for now.

- If SSL function fails and there are no errors, return "Unknown error"
instead of "Success" as the reason.
- Fixed a memory leak in ACL plugin.
- Send the success reply in one write.
- If remote disconnects, log "Connection closed: reason" just like IMAP does.
- STORE: Ignore flag changes for read-only (especially EXAMINEd) mailboxes.
- random_fill(): If read(/dev/urandom) returned EINTR, it could have written
random data before the given buffer.
- BODY/BODYSTRUCTURE fetch: Don't crash if we already had message parts
parsed.

From Brad, tested on various arch production servers.
@
text
@d1 1
a1 1
$OpenBSD$
@

