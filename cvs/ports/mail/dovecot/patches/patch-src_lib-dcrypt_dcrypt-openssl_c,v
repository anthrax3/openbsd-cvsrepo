head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2016.12.04.21.36.02;	author sthen;	state Exp;
branches;
next	1.1;
commitid	FqgfcBTXv4bKkBtc;

1.1
date	2016.11.02.17.41.24;	author sthen;	state Exp;
branches;
next	;
commitid	RhVgF0K4OgT7t8Km;


desc
@@


1.2
log
@update to dovecot-2.2.27, and use https HOMEPAGE. From Brad.

CVE-2016-8652 (the version in 6.0 isn't affected): "If auth-policy
component has been activated in Dovecot, then remote user can use
SASL authentication to crash auth component. Workaround is to disable
auth-policy component until fix is in place."
@
text
@$OpenBSD: patch-src_lib-dcrypt_dcrypt-openssl_c,v 1.1 2016/11/02 17:41:24 sthen Exp $
--- src/lib-dcrypt/dcrypt-openssl.c.orig	Sat Dec  3 12:13:21 2016
+++ src/lib-dcrypt/dcrypt-openssl.c	Sat Dec  3 14:35:26 2016
@@@@ -69,7 +69,7 @@@@
   2<tab>key algo oid<tab>1<tab>symmetric algo name<tab>salt<tab>hash algo<tab>rounds<tab>E(RSA = i2d_PrivateKey, EC=Private Point)<tab>key id
 **/
 
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
 #define EVP_PKEY_get0_EC_KEY(x) x->pkey.ec
 #define EVP_PKEY_get0_RSA(x) x->pkey.rsa
 #define OBJ_length(o) ((o)->length)
@@@@ -92,7 +92,7 @@@@ struct dcrypt_context_symmetric {
 struct dcrypt_context_hmac {
 	pool_t pool;
 	const EVP_MD *md;
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
 	HMAC_CTX *ctx;
 #else
 	HMAC_CTX ctx;
@@@@ -429,7 +429,7 @@@@ static
 void dcrypt_openssl_ctx_hmac_destroy(struct dcrypt_context_hmac **ctx)
 {
 	pool_t pool = (*ctx)->pool;
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
 	if ((*ctx)->ctx) HMAC_CTX_free((*ctx)->ctx);
 #else
 	HMAC_cleanup(&((*ctx)->ctx));
@@@@ -472,7 +472,7 @@@@ bool dcrypt_openssl_ctx_hmac_init(struct dcrypt_contex
 {
 	int ec;
 	i_assert(ctx->md != NULL);
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
 	ctx->ctx = HMAC_CTX_new();
 	if (ctx->ctx == NULL) return dcrypt_openssl_error(error_r);
 	ec = HMAC_Init_ex(ctx->ctx, ctx->key, ctx->klen, ctx->md, NULL);
@@@@ -486,7 +486,7 @@@@ static
 bool dcrypt_openssl_ctx_hmac_update(struct dcrypt_context_hmac *ctx, const unsigned char *data, size_t data_len, const char **error_r)
 {
 	int ec;
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
 	ec = HMAC_Update(ctx->ctx, data, data_len);
 #else
 	ec = HMAC_Update(&(ctx->ctx), data, data_len);
@@@@ -500,7 +500,7 @@@@ bool dcrypt_openssl_ctx_hmac_final(struct dcrypt_conte
 	int ec;
 	unsigned char buf[HMAC_MAX_MD_CBLOCK];
 	unsigned int outl;
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
 	ec = HMAC_Final(ctx->ctx, buf, &outl);
 	HMAC_CTX_free(ctx->ctx);
 	ctx->ctx = NULL;
@@@@ -2135,7 +2135,7 @@@@ bool dcrypt_openssl_public_key_id_evp(EVP_PKEY *key, c
 	long len = BIO_get_mem_data(b, &ptr);
 	unsigned int hlen = sizeof(buf);
 	/* then hash it */
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
 	EVP_MD_CTX *ctx = EVP_MD_CTX_new();
 #else
 	EVP_MD_CTX *ctx = EVP_MD_CTX_create();
@@@@ -2149,7 +2149,7 @@@@ bool dcrypt_openssl_public_key_id_evp(EVP_PKEY *key, c
 		buffer_append(result, buf, hlen);
 		res = TRUE;
 	}
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
 	EVP_MD_CTX_free(ctx);
 #else
 	EVP_MD_CTX_destroy(ctx);
@


1.1
log
@Patch Dovecot to handle openssl 1.1 api #ifdefs, e.g.

-+#elif OPENSSL_VERSION_NUMBER < 0x10100000L
++#elif OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)

Looks good to jca.
@
text
@d1 4
a4 4
$OpenBSD$
--- src/lib-dcrypt/dcrypt-openssl.c.orig	Wed Nov  2 12:11:31 2016
+++ src/lib-dcrypt/dcrypt-openssl.c	Wed Nov  2 12:22:26 2016
@@@@ -67,7 +67,7 @@@@
d13 1
a13 1
@@@@ -90,7 +90,7 @@@@ struct dcrypt_context_symmetric {
d22 1
a22 1
@@@@ -427,7 +427,7 @@@@ static
d31 1
a31 1
@@@@ -470,7 +470,7 @@@@ bool dcrypt_openssl_ctx_hmac_init(struct dcrypt_contex
d40 1
a40 1
@@@@ -484,7 +484,7 @@@@ static
d49 1
a49 1
@@@@ -498,7 +498,7 @@@@ bool dcrypt_openssl_ctx_hmac_final(struct dcrypt_conte
d58 1
a58 1
@@@@ -2133,7 +2133,7 @@@@ bool dcrypt_openssl_public_key_id_evp(EVP_PKEY *key, c
d67 1
a67 1
@@@@ -2147,7 +2147,7 @@@@ bool dcrypt_openssl_public_key_id_evp(EVP_PKEY *key, c
@

