head	1.4;
access;
symbols
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2016.01.22.00.51.24;	author mmcc;	state dead;
branches;
next	1.3;
commitid	uCQPXRu4kW7qULEz;

1.3
date	2015.11.04.17.51.18;	author jca;	state Exp;
branches;
next	1.2;
commitid	HOxenDySmscXBqRF;

1.2
date	2015.07.18.23.11.01;	author sthen;	state Exp;
branches
	1.2.4.1;
next	1.1;
commitid	OWgOG5vrAxUuG0nK;

1.1
date	2015.07.18.04.51.29;	author sthen;	state Exp;
branches;
next	;
commitid	EoshB3HR845zFq5S;

1.2.4.1
date	2015.11.27.01.53.02;	author mmcc;	state Exp;
branches;
next	;
commitid	HjXJLLZhIhNLSBR0;


desc
@@


1.4
log
@update to imapfilter 2.6.5

ok juanfra@@
@
text
@$OpenBSD: patch-src_imapfilter_c,v 1.3 2015/11/04 17:51:18 jca Exp $

Cope with SSLv3 removal.

--- src/imapfilter.c.orig	Wed Sep 30 22:55:26 2015
+++ src/imapfilter.c	Mon Nov  2 22:37:03 2015
@@@@ -21,7 +21,10 @@@@
 
 extern buffer ibuf, obuf, nbuf, cbuf;
 extern regexp responses[];
-extern SSL_CTX *ssl3ctx, *ssl23ctx, *tls1ctx;
+extern SSL_CTX *ssl23ctx, *tls1ctx;
+#ifndef OPENSSL_NO_SSL3_METHOD
+extern SSL_CTX *ssl3ctx;
+#endif
 #if OPENSSL_VERSION_NUMBER >= 0x01000100fL
 extern SSL_CTX *tls11ctx, *tls12ctx;
 #endif
@@@@ -114,7 +117,9 @@@@ main(int argc, char *argv[])
 
 	SSL_library_init();
 	SSL_load_error_strings();
+#ifndef OPENSSL_NO_SSL3_METHOD
 	ssl3ctx = SSL_CTX_new(SSLv3_client_method());
+#endif
 	ssl23ctx = SSL_CTX_new(SSLv23_client_method());
 	tls1ctx = SSL_CTX_new(TLSv1_client_method());
 #if OPENSSL_VERSION_NUMBER >= 0x01000100fL
@@@@ -125,7 +130,9 @@@@ main(int argc, char *argv[])
 		capath = opts.truststore;
 	else if (exists_file(opts.truststore))
 		cafile = opts.truststore;
+#ifndef OPENSSL_NO_SSL3_METHOD
 	SSL_CTX_load_verify_locations(ssl3ctx, cafile, capath);
+#endif
 	SSL_CTX_load_verify_locations(ssl23ctx, cafile, capath);
 	SSL_CTX_load_verify_locations(tls1ctx, cafile, capath);
 #if OPENSSL_VERSION_NUMBER >= 0x01000100fL
@@@@ -150,7 +157,9 @@@@ main(int argc, char *argv[])
 #endif
 	stop_lua();
 
+#ifndef OPENSSL_NO_SSL3_METHOD
 	SSL_CTX_free(ssl3ctx);
+#endif
 	SSL_CTX_free(ssl23ctx);
 	SSL_CTX_free(tls1ctx);
 #if OPENSSL_VERSION_NUMBER >= 0x01000100fL
@


1.3
log
@Update to imapfilter-2.6.3, adapt SSLv3 patches.

Initial diff from mmcc@@, ok mpi@@ sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_imapfilter_c,v 1.2 2015/07/18 23:11:01 sthen Exp $
@


1.2
log
@fix path to the cert store, from Michael McConville
@
text
@d1 6
a6 3
$OpenBSD: patch-src_imapfilter_c,v 1.1 2015/07/18 04:51:29 sthen Exp $
--- src/imapfilter.c.orig	Mon Jun 29 02:33:17 2015
+++ src/imapfilter.c	Sat Jul 18 18:34:04 2015
d19 1
a19 10
@@@@ -52,7 +55,7 @@@@ main(int argc, char *argv[])
 	opts.config = NULL;
 	opts.oneline = NULL;
 	opts.debug = NULL;
-	opts.truststore = "/etc/ssl/certs";
+	opts.truststore = "/etc/ssl/cert.pem";
 
 	env.home = NULL;
 	env.pathmax = -1;
@@@@ -109,7 +112,9 @@@@ main(int argc, char *argv[])
d29 1
a29 1
@@@@ -121,7 +126,9 @@@@ main(int argc, char *argv[])
d31 1
a31 1
 	if (exists_file(opts.truststore))
d39 1
a39 1
@@@@ -146,7 +153,9 @@@@ main(int argc, char *argv[])
@


1.2.4.1
log
@Update from 2.6.1 to 2.6.3. This fixes a bug that makes cert mismatches
non-fatal:

https://github.com/lefcha/imapfilter/commit/0526dee062c28257a14f2ed7afca49a9a384e4aa

Also fixes the system cert location bug.   ok jca@@
@
text
@d1 3
a3 6
$OpenBSD: patch-src_imapfilter_c,v 1.3 2015/11/04 17:51:18 jca Exp $

Cope with SSLv3 removal.

--- src/imapfilter.c.orig	Wed Sep 30 22:55:26 2015
+++ src/imapfilter.c	Mon Nov  2 22:37:03 2015
d16 10
a25 1
@@@@ -114,7 +117,9 @@@@ main(int argc, char *argv[])
d35 1
a35 1
@@@@ -125,7 +130,9 @@@@ main(int argc, char *argv[])
d37 1
a37 1
 	else if (exists_file(opts.truststore))
d45 1
a45 1
@@@@ -150,7 +157,9 @@@@ main(int argc, char *argv[])
@


1.1
log
@cope if SSLv3 is disabled
@
text
@d1 3
a3 3
$OpenBSD$
--- src/imapfilter.c.orig	Fri Jul 17 22:23:22 2015
+++ src/imapfilter.c	Fri Jul 17 22:25:40 2015
d16 9
@

