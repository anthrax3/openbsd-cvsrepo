head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.1.0.24
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.18
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.16
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.14
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	landry_20110109:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.11.01.09.10.41;	author landry;	state Exp;
branches;
next	1.1;
commitid	NH8HAoPC40OFEqF3;

1.1
date	2011.01.09.09.36.21;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.01.09.09.36.21;	author landry;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to archiveopteryx 3.2.0 and drop MAINTAINERship.

Been lying in mystuff for the past two years, pending actual testing.
For the record:

Archiveopteryx is a mail server system optimised for long-term storage
and heavy access. It comprises a set of server programs that provide
access to mail stored in a relational database (PostgreSQL).
@
text
@$OpenBSD: patch-aox_servers_cpp,v 1.1.1.1 2011/01/09 09:36:21 landry Exp $
--- aox/servers.cpp.orig	Mon Mar 10 14:44:59 2014
+++ aox/servers.cpp	Thu May  1 10:57:40 2014
@@@@ -27,6 +27,7 @@@@
 #include <pwd.h>
 #include <grp.h>
 
+#include <err.h>
 
 static const char * buildinfo[] = {
 #include "buildinfo.inc"
@@@@ -316,8 +317,7 @@@@ static void checkFilePermissions()
     if ( Configuration::toggle( Configuration::UseTls ) ) {
         EString c = Configuration::text( Configuration::TlsCertFile );
         if ( c.isEmpty() ) {
-            c = Configuration::compiledIn( Configuration::LibDir );
-            c.append( "/automatic-key.pem" );
+            c = "/etc/ssl/archiveopteryx.pem";
         }
         addPath( Path::ReadableFile, Configuration::TlsCertFile );
     }
@@@@ -1072,65 +1072,19 @@@@ static void selfSignCertificate()
 {
     EString keyFile( Configuration::text( Configuration::TlsCertFile ) );
 
+    // no need to bother if use-tls is set to no
+    if ( !Configuration::toggle( Configuration::UseTls ) )
+        return;
+
     if ( keyFile.isEmpty() ) {
-        keyFile = Configuration::compiledIn( Configuration::LibDir );
-        keyFile.append( "/automatic-key.pem" );
+        keyFile = "/etc/ssl/archiveopteryx.pem";
     }
 
     File key( keyFile );
     if ( !key.contents().isEmpty() )
         return; // could verify here, for the expiry date
-
-    File osslcf( "/tmp/aox-ossl.conf", File::Write );
-    osslcf.write( "[ req ]\n"
-                  " default_bits = 1024\n"
-                  " default_keyfile = privkey.pem\n"
-                  " distinguished_name = req_distinguished_name\n"
-                  " attributes = req_attributes\n"
-                  " x509_extensions = v3_ca\n"
-                  " prompt = no\n"
-                  "\n"
-                  " dirstring_type = nobmp\n"
-                  "\n"
-                  "[ req_distinguished_name ]\n"
-                  " CN=" + Configuration::hostname() + "\n"
-                  "\n"
-                  "[ req_attributes ]\n"
-                  " challengePassword = \"\"\n"
-                  "\n"
-                  " [ v3_ca ]\n"
-                  "\n"
-                  " nsCertType = server\n"
-                  " nsComment = \"Automatically generated self-signed certificate\"\n"
-                  " subjectKeyIdentifier=hash\n"
-                  " authorityKeyIdentifier=keyid:always,issuer:always\n"
-                  " basicConstraints = CA:true\n" );
-
-
-
-    int r = system( "openssl req -config /tmp/aox-ossl.conf -x509 -days 1764 -newkey rsa:1024 -nodes -keyout /tmp/aox-ossl.pem -out /tmp/aox-ossl.pem" );
-    if ( r == -1 )
-        error( "Needed to execute openssl req, but failed" );
-
-    // one one hand, File::write() does no checking. On the other,
-    // this does at least not pass user-supplied data to the shell.
-    File ossl( "/tmp/aox-ossl.pem" );
-    File result( keyFile, File::Write );
-    result.write( ossl.contents() );
-    result.write( "\n"
-                  "  This certificate was autogenerated by Archiveopteryx,\n"
-                  "  since Archiveopteryx was configured to use TLS, but\n"
-                  "  no certificate was specified. You may want to replace\n"
-                  "  it with a CA-supplied certificate.\n"
-                  "\n" );
-
-    File::unlink( "/tmp/aox-ossl.pem" );
-
-    printf( "Created self-signed certificate for\n    %s\n"
-            "and stored it in\n    %s\n"
-            "Please verify that file's permissions.\n",
-            Configuration::hostname().cstr(),
-            keyFile.cstr() );
+    else
+        errx(1, "Didn't found certificate in %s, exiting\n", keyFile.cstr());
 }
 
 
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- aox/servers.cpp.orig	Fri Mar 12 07:25:36 2010
+++ aox/servers.cpp	Sun Apr 11 11:16:55 2010
d13 1
a14 1
 #if !defined(USE_CRYPTLIB)
a19 1
 #endif
d21 3
a23 1
@@@@ -1092,54 +1092,14 @@@@ static void selfSignCertificate()
d26 4
d67 3
a69 1
-    system( "openssl req -config /tmp/aox-ossl.conf -x509 -days 1764 -newkey rsa: -nodes -keyout /tmp/aox-ossl.pem -out /tmp/aox-ossl.pem" );
d76 7
d85 2
a86 1
-    printf( "Created self-signed certificate for %s in %s.\n"
a91 1
 #endif
d93 1
@


1.1.1.1
log
@Import archiveopteryx 3.1.3:

Archiveopteryx is a mail server system optimised for long-term storage
and heavy access. It comprises a set of server programs that provide
access to mail stored in a relational database (PostgreSQL).

With feedback from ajacoutot@@ and JG Pailloncy, reads ok to ajacoutot@@
@
text
@@
