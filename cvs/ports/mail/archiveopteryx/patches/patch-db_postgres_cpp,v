head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.4
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.0.14
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.10
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.12
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.8
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.11.01.09.10.41;	author landry;	state Exp;
branches;
next	1.1;
commitid	NH8HAoPC40OFEqF3;

1.1
date	2013.05.09.01.50.12;	author landry;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to archiveopteryx 3.2.0 and drop MAINTAINERship.

Been lying in mystuff for the past two years, pending actual testing.
For the record:

Archiveopteryx is a mail server system optimised for long-term storage
and heavy access. It comprises a set of server programs that provide
access to mail stored in a relational database (PostgreSQL).
@
text
@$OpenBSD: patch-db_postgres_cpp,v 1.1 2013/05/09 01:50:12 landry Exp $
Fix with psql 9.2
--- db/postgres.cpp.orig	Mon Mar 10 14:44:59 2014
+++ db/postgres.cpp	Wed Apr 30 22:56:02 2014
@@@@ -111,7 +111,7 @@@@ class PgData (public)
                      "Transaction start time: " + r->getEString( "xact_start" ) + " "
                      "Username: " + r->getEString( "usename" ) + " "
                      "Client address: " + r->getEString( "client_addr" ) + " "
-                     "Current query: " + r->getEString( "current_query" ).quoted(),
+                     "Current query: " + r->getEString( "query" ).quoted(),
                      Log::Significant );
             }
         }
@


1.1
log
@Fix runtime with postgresql 9.2.
From JG Pailloncy, thanks!
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 19
--- db/postgres.cpp.orig	Wed Mar 10 13:17:56 2010
+++ db/postgres.cpp	Thu May  9 03:38:52 2013
@@@@ -77,12 +77,12 @@@@ class PgData (public)
             Scope x( log() );
             q = new Query(
                 "select h.pid::int, a.xact_start::text,"
-                " a.client_addr::text, a.current_query::text,"
+                " a.client_addr::text, a.query::text,"
                 " a.usename::text, a.client_addr,"
-                " a.current_query,"
+                " a.query,"
                 " w.locktype::text "
                 "from pg_locks h join pg_locks w using (locktype) "
-                "join pg_stat_activity a on (h.pid=a.procpid) "
+                "join pg_stat_activity a on (h.pid=a.pid) "
                 "where h.granted and not w.granted and w.pid=$1 and "
                 "coalesce(h.relation, h.page, h.tuple, h.transactionid, h.virtualxid)="
                 "coalesce(w.relation, w.page, w.tuple, w.transactionid, w.virtualxid)",
@@@@ -100,7 +100,7 @@@@ class PgData (public)
@

