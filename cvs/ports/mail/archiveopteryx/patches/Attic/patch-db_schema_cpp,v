head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.14
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.10
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.12
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.8
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.11.01.09.10.41;	author landry;	state dead;
branches;
next	1.1;
commitid	NH8HAoPC40OFEqF3;

1.1
date	2013.05.09.01.50.12;	author landry;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to archiveopteryx 3.2.0 and drop MAINTAINERship.

Been lying in mystuff for the past two years, pending actual testing.
For the record:

Archiveopteryx is a mail server system optimised for long-term storage
and heavy access. It comprises a set of server programs that provide
access to mail stored in a relational database (PostgreSQL).
@
text
@$OpenBSD: patch-db_schema_cpp,v 1.1 2013/05/09 01:50:12 landry Exp $
Fix with psql 9.2
--- db/schema.cpp.orig	Wed Mar 10 13:17:56 2010
+++ db/schema.cpp	Thu May  9 03:38:52 2013
@@@@ -142,13 +142,13 @@@@ void Schema::execute()
 {
     if ( d->state == 0 ) {
         d->lockSanity = new Query(
-            "select relname::text,pid::int,mode,granted,current_query,"
+            "select relname::text,l.pid::int,mode,granted,query,"
             "extract(epoch from current_timestamp-a.query_start)::int "
             "as lock_age "
             "from pg_locks l "
             "join pg_database d on (d.oid=l.database) "
             "join pg_class c on (l.relation=c.oid) "
-            "join pg_stat_activity a on (l.pid=a.procpid) "
+            "join pg_stat_activity a on (l.pid=a.pid) "
             "where d.datname=$1 and not relname like 'pg_%'", this );
         d->lockSanity->bind( 1, Configuration::text( Configuration::DbName ) );
         d->lockSanity->execute();
@@@@ -183,7 +183,7 @@@@ void Schema::execute()
                  " PID: " + fn( r->getInt( "pid" ) ) +
                  " Mode: " + r->getEString( "mode" ).quoted() +
                  " Granted: " + ( r->getBoolean( "granted" ) ? "yes" : "no" ) +
-                 " Query: " + r->getEString( "current_query" ).quoted() +
+                 " Query: " + r->getEString( "query" ).quoted() +
                  " Lock age: " + age,
                  Log::Significant );
         }
@


1.1
log
@Fix runtime with postgresql 9.2.
From JG Pailloncy, thanks!
@
text
@d1 1
a1 1
$OpenBSD$
@

