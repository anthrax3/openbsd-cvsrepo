head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.56
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.54
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.52
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.48
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.50
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.46
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.44
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.42
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.40
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.38
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.36
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.34
	OPENBSD_5_0:1.3.0.32
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.30
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.28
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.24
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.22
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.20
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.18
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.1.1.0.2
	OPENBSD_3_1_BASE:1.1.1.1
	lebel_2001-Dec-27:1.1.1.1
	lebel:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2003.11.18.20.57.49;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.20.02.18.15;	author marcm;	state Exp;
branches;
next	1.1;

1.1
date	2001.12.27.21.54.19;	author lebel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.12.27.21.54.19;	author lebel;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to razor-agents-2.36 which works for perl > 5.8.0; OK sturm@@
@
text
@Vipul's Razor is a distributed, collaborative, spam detection and
filtering network. Through user contribution, Razor establishes a
distributed and constantly updating catalogue of spam in propagation
that is consulted by email clients to filter out known spam. Detection
is done with statistical and randomized signatures that efficiently
spot mutating spam content. User input is validated through reputation
assignments based on consensus on report and revoke assertions which
in turn is used for computing confidence values associated with
individual signatures.
@


1.2
log
@Update to 2.14.  Substantial changes documented at:
http://razor.sourceforge.net/docs/whatsnew.html

ok lebel@@
@
text
@a9 2

WWW: ${HOMEPAGE}
@


1.1
log
@Initial revision
@
text
@d2 8
a9 13
filtering network. Razor establishes a distributed and constantly
updating catalogue of spam in propagation. This catalogue is used by
clients to filter out known spam. On receiving a spam, a Razor Reporting
Agent (run by an end-user or a troll box) calculates and submits a
20-character unique identification of the spam (a SHA Digest) to its
closest Razor Catalogue Server. The Catalogue Server echos this
signature to other trusted servers after storing it in its database.
Prior to manual processing or transport-level reception, Razor Filtering
Agents (end-users and MTAs) check their incoming mail against a
Catalogue Server and filter out or deny transport in case of a signature
match. Catalogued spam, once identified and reported by a Reporting
Agent, can be blocked out by the rest of the Filtering Agents on the
network.
@


1.1.1.1
log
@Vipul's Razor is a distributed, collaborative, spam detection and
filtering network. Razor establishes a distributed and constantly
updating catalogue of spam in propagation. This catalogue is used by
clients to filter out known spam. On receiving a spam, a Razor Reporting
Agent (run by an end-user or a troll box) calculates and submits a
20-character unique identification of the spam (a SHA Digest) to its
closest Razor Catalogue Server. The Catalogue Server echos this
signature to other trusted servers after storing it in its database.
Prior to manual processing or transport-level reception, Razor Filtering
Agents (end-users and MTAs) check their incoming mail against a
Catalogue Server and filter out or deny transport in case of a signature
match. Catalogued spam, once identified and reported by a Reporting
Agent, can be blocked out by the rest of the Filtering Agents on the
network.

WWW: http://razor.sourceforge.net/

Submitted by Marc Matteo <marcm@@lectroid.net>

@
text
@@
