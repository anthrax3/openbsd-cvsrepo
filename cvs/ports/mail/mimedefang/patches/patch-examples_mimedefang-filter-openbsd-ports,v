head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.4
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.12
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.14
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.10
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2016.04.12.15.20.17;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	3mL7E8S2jdxVWF6H;

1.5
date	2013.01.21.19.28.07;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2012.12.05.18.51.56;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2012.09.18.15.34.39;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2012.06.01.15.39.22;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2012.06.01.15.35.48;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Add an example to disable SPAM scanning from Sendmail authenticated users.
@
text
@$OpenBSD: patch-examples_mimedefang-filter-openbsd-ports,v 1.5 2013/01/21 19:28:07 ajacoutot Exp $
--- examples/mimedefang-filter-openbsd-ports.orig	Tue Apr 12 17:19:16 2016
+++ examples/mimedefang-filter-openbsd-ports	Tue Apr 12 17:19:25 2016
@@@@ -3,9 +3,6 @@@@
 #
 # mimedefang-filter
 #
-# Suggested minimum-protection filter for Microsoft Windows clients, plus
-# SpamAssassin checks if SpamAssassin is installed.
-#
 # Copyright (C) 2002 Roaring Penguin Software Inc.
 #
 # This program may be distributed under the terms of the GNU General
@@@@ -20,7 +17,7 @@@@
 # MIMEDefang policy.  A good example would be 'defang-admin@@mydomain.com'
 #***********************************************************************
 $AdminAddress = 'postmaster@@localhost';
-$AdminName = "MIMEDefang Administrator's Full Name";
+$AdminName = "Postmaster";
 
 #***********************************************************************
 # Set the e-mail address from which MIMEDefang quarantine warnings and
@@@@ -28,7 +25,7 @@@@ $AdminName = "MIMEDefang Administrator's Full Name";
 # 'mimedefang@@mydomain.com'.  Make sure to have an alias for this
 # address if you want replies to it to work.
 #***********************************************************************
-$DaemonAddress = 'mimedefang@@localhost';
+$DaemonAddress = 'postmaster@@localhost';
 
 #***********************************************************************
 # If you set $AddWarningsInline to 1, then MIMEDefang tries *very* hard
@@@@ -63,6 +60,12 @@@@ md_graphdefang_log_enable('mail', 1);
 # $MaxMIMEParts = 50;
 
 #***********************************************************************
+# Uncomment to enable the clamd(8) anti-virus daemon.
+#***********************************************************************
+# $Features{'Virus:CLAMD'} = 1;
+# $ClamdSock = "/tmp/clamd.socket";
+
+#***********************************************************************
 # Set various stupid things your mail client does below.
 #***********************************************************************
 
@@@@ -137,6 +140,8 @@@@ sub filter_begin {
     if ($FoundVirus) {
 	md_graphdefang_log('virus', $VirusName, $RelayAddr);
 	md_syslog('warning', "Discarding because of virus $VirusName");
+	# Uncomment to copy the message to quarantine before discarding it.
+	# action_quarantine_entire_message();
 	return action_discard();
     }
 
@@@@ -181,10 +186,11 @@@@ sub filter {
 	return action_discard();
     }
 
-    if (filter_bad_filename($entity)) {
-        md_graphdefang_log('bad_filename', $fname, $type);
-	return action_drop_with_warning("An attachment named $fname was removed from this document as it\nconstituted a security hazard.  If you require this document, please contact\nthe sender and arrange an alternate means of receiving it.\n");
-    }
+    # Uncomment to enable bad extension filtering for MIME messages.
+#    if (filter_bad_filename($entity)) {
+#        md_graphdefang_log('bad_filename', $fname, $type);
+#	return action_drop_with_warning("An attachment named $fname was removed from this document as it\nconstituted a security hazard.  If you require this document, please contact\nthe sender and arrange an alternate means of receiving it.\n");
+#    }
 
     return action_accept();
 }
@@@@ -210,11 +216,12 @@@@ sub filter_multipart {
 
     return if message_rejected(); # Avoid unnecessary work
 
-    if (filter_bad_filename($entity)) {
-        md_graphdefang_log('bad_filename', $fname, $type);
-	action_notify_administrator("A MULTIPART attachment of type $type, named $fname was dropped.\n");
-	return action_drop_with_warning("An attachment of type $type, named $fname was removed from this document as it\nconstituted a security hazard.  If you require this document, please contact\nthe sender and arrange an alternate means of receiving it.\n");
-    }
+    # Uncomment to enable bad extension filtering for multipart messages.
+#    if (filter_bad_filename($entity)) {
+#        md_graphdefang_log('bad_filename', $fname, $type);
+#	action_notify_administrator("A MULTIPART attachment of type $type, named $fname was dropped.\n");
+#	return action_drop_with_warning("An attachment of type $type, named $fname was removed from this document as it\nconstituted a security hazard.  If you require this document, please contact\nthe sender and arrange an alternate means of receiving it.\n");
+#    }
 
     # Block message/partial parts
     if (lc($type) eq "message/partial") {
@@@@ -262,6 +269,9 @@@@ sub filter_end {
     # No sense doing any extra work
     return if message_rejected();
 
+    # Uncomment to disable SPAM scanning from Sendmail authenticated users
+    #return if ($SendmailMacros{'auth_authen'});
+
     # Spam checks if SpamAssassin is installed
     if ($Features{"SpamAssassin"}) {
 	if (-s "./INPUTMSG" < 100*1024) {
@@@@ -316,7 +326,40 @@@@ sub filter_end {
     # by marginal software.  Your call.
 
     # action_rebuild();
+
+    # Uncomment to prepend '[SPAM] ' to the subject of X-Spam-Status tagged mails.
+    # if (spam_assassin_is_spam()) { action_change_header("Subject", "[SPAM] $Subject"); }
+
+    # If the file(s) /etc/mail/disclaimer.txt and/or /etc/mail/disclaimer.html
+    # are present, they will be appended to all outgoing mails.
+    # Modify 192.168.1 to match your local network(s).
+#    if ($RelayAddr =~ /192\.168\.1\./ or $RelayAddr eq "127.0.0.1") {
+#	my $disclaimer = '/etc/mail/disclaimer.txt';
+#	my $disclaimer_html = '/etc/mail/disclaimer.html';
+#
+#	if (-e $disclaimer) {
+#	    open FILE, "<$disclaimer";
+#	    my $text_boilerplate = do { local $/; <FILE> };
+#	    append_text_boilerplate($entity, $text_boilerplate, 0);
+#	}
+#	if (-e $disclaimer_html) {
+#	    open FILE, "<$disclaimer_html";
+#	    my $html_boilerplate = do { local $/; <FILE> };
+#	    append_html_boilerplate($entity, $html_boilerplate, 0);
+#	}
+#    }
 }
+
+# Uncomment to disable processing any mails sent from localhost
+# (mimedefang(8) must be stated with the `-r' flag).
+#sub filter_relay {
+#    my ($ip, $name) = @@_;
+#    if ($ip eq '127.0.0.1') {
+#        return ('ACCEPT_AND_NO_MORE_FILTERING', "ok");
+#    }
+#
+#    return ('CONTINUE', "ok");
+#}
 
 # DO NOT delete the next line, or Perl will complain.
 1;
@


1.5
log
@Tweak comment.
@
text
@d1 3
a3 3
$OpenBSD: patch-examples_mimedefang-filter-openbsd-ports,v 1.4 2012/12/05 18:51:56 ajacoutot Exp $
--- examples/mimedefang-filter-openbsd-ports.orig	Mon Jan 21 20:24:48 2013
+++ examples/mimedefang-filter-openbsd-ports	Mon Jan 21 20:25:43 2013
d88 11
a98 1
@@@@ -316,7 +323,40 @@@@ sub filter_end {
@


1.4
log
@Add `-r' to mimedefang flags by default.
Add an example for filter_relay() that works out of the box.
Rename the mimedefang_daemon rc.d(8) script to mimedefang as it's
supposed to be...

ok okan@@ (maintainer)
@
text
@d1 3
a3 3
$OpenBSD: patch-examples_mimedefang-filter-openbsd-ports,v 1.3 2012/09/18 15:34:39 ajacoutot Exp $
--- examples/mimedefang-filter-openbsd-ports.orig	Wed Dec  5 12:02:27 2012
+++ examples/mimedefang-filter-openbsd-ports	Wed Dec  5 12:03:24 2012
d116 1
a116 1
+# Uncomment to disable filtering mails sent from localhost
@


1.3
log
@* set default email to postmaster@@localhost since this alias exists by default
and change AdminName accordingly
* disable the filter_bad_filename filter by default, it is the admin's
job to choose whether he wants to enable it or not
* remove useless spamassassin.cf patch
* run mimedefang with -G so that external helpers (e.g. antivirus scanners)
can access its socket by being added to the _mdefang group

ok okan@@ (maintainer)
@
text
@d1 3
a3 3
$OpenBSD: patch-examples_mimedefang-filter-openbsd-ports,v 1.2 2012/06/01 15:39:22 ajacoutot Exp $
--- examples/mimedefang-filter-openbsd-ports.orig	Tue Sep 18 17:05:15 2012
+++ examples/mimedefang-filter-openbsd-ports	Tue Sep 18 17:06:36 2012
d88 1
a88 1
@@@@ -316,6 +323,28 @@@@ sub filter_end {
d115 11
d128 1
@


1.2
log
@This was supposed to be commented.
@
text
@d1 3
a3 3
$OpenBSD: patch-examples_mimedefang-filter-openbsd-ports,v 1.1 2012/06/01 15:35:48 ajacoutot Exp $
--- examples/mimedefang-filter-openbsd-ports.orig	Fri Jun  1 17:37:14 2012
+++ examples/mimedefang-filter-openbsd-ports	Fri Jun  1 17:38:19 2012
d14 18
d54 35
a88 1
@@@@ -316,6 +321,28 @@@@ sub filter_end {
@


1.1
log
@Add some commented examples on how to do most usual tasks (tag spam,
discard and/or quarantine virus mails...).

ok okan@@ (maintainer)
@
text
@d1 3
a3 3
$OpenBSD$
--- examples/mimedefang-filter-openbsd-ports.orig	Fri Jun  1 13:33:15 2012
+++ examples/mimedefang-filter-openbsd-ports	Fri Jun  1 13:33:45 2012
d47 15
a61 15
+    if ($RelayAddr =~ /192\.168\.1\./ or $RelayAddr eq "127.0.0.1") {
+	my $disclaimer = '/etc/mail/disclaimer.txt';
+	my $disclaimer_html = '/etc/mail/disclaimer.html';
+
+	if (-e $disclaimer) {
+	    open FILE, "<$disclaimer";
+	    my $text_boilerplate = do { local $/; <FILE> };
+	    append_text_boilerplate($entity, $text_boilerplate, 0);
+	}
+	if (-e $disclaimer_html) {
+	    open FILE, "<$disclaimer_html";
+	    my $html_boilerplate = do { local $/; <FILE> };
+	    append_html_boilerplate($entity, $html_boilerplate, 0);
+	}
+    }
@

