head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.10
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.6
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.04.14.20.53.58;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.1
log
@switch from the ancient des_ API to DES_; ok benoit@@
@
text
@$OpenBSD$
--- Src/pgpcreat.c.orig	Sun Nov  9 12:09:44 2003
+++ Src/pgpcreat.c	Mon Apr 14 21:37:16 2014
@@@@ -159,11 +159,11 @@@@ static int pgp_ideaencrypt(BUFFER *in, BUFFER *out, BU
 
 static int pgp_3desencrypt(BUFFER *in, BUFFER *out, BUFFER *key, int mdc)
 {
-  des_cblock iv;
+  DES_cblock iv;
   int i, n = 0;
-  des_key_schedule ks1;
-  des_key_schedule ks2;
-  des_key_schedule ks3;
+  DES_key_schedule ks1;
+  DES_key_schedule ks2;
+  DES_key_schedule ks3;
   SHA_CTX c;
 
   assert(key->length == 25);
@@@@ -171,9 +171,9 @@@@ static int pgp_3desencrypt(BUFFER *in, BUFFER *out, BU
   for (i = 0; i < 8; i++)
     iv[i] = 0;
 
-  des_set_key((const_des_cblock *) (key->data + 1), ks1);
-  des_set_key((const_des_cblock *) (key->data + 9), ks2);
-  des_set_key((const_des_cblock *) (key->data+ 17), ks3);
+  DES_set_key((const_DES_cblock *) (key->data + 1), &ks1);
+  DES_set_key((const_DES_cblock *) (key->data + 9), &ks2);
+  DES_set_key((const_DES_cblock *) (key->data+ 17), &ks3);
 
   if (mdc) {
     mdc = 1;
@@@@ -187,21 +187,21 @@@@ static int pgp_3desencrypt(BUFFER *in, BUFFER *out, BU
     SHA1_Update(&c, in->data, in->length);
   }
   n = 0;
-  des_ede3_cfb64_encrypt(out->data + mdc, out->data + mdc, 10, ks1, ks2, ks3, &iv, &n,
+  DES_ede3_cfb64_encrypt(out->data + mdc, out->data + mdc, 10, &ks1, &ks2, &ks3, &iv, &n,
 			 ENCRYPT);
   if (!mdc) {
     iv[6] = iv[0], iv[7] = iv[1];
     memcpy(iv, out->data + 2, 6);
     n = 0;
   }
-  des_ede3_cfb64_encrypt(in->data, out->data + 10 + mdc, in->length, ks1, ks2, ks3,
+  DES_ede3_cfb64_encrypt(in->data, out->data + 10 + mdc, in->length, &ks1, &ks2, &ks3,
 			 &iv, &n, ENCRYPT);
   if (mdc) {
     SHA1_Update(&c, "\xD3\x14", 2); /* 0xD3 = 0xC0 | PGP_MDC */
-    des_ede3_cfb64_encrypt("\xD3\x14", out->data + 11 + in->length, 2, ks1, ks2, ks3,
+    DES_ede3_cfb64_encrypt("\xD3\x14", out->data + 11 + in->length, 2, &ks1, &ks2, &ks3,
 		       &iv, &n, ENCRYPT);
     SHA1_Final(out->data + 13 + in->length, &c);
-    des_ede3_cfb64_encrypt(out->data + 13 + in->length, out->data + 13 + in->length, 20, ks1, ks2, ks3,
+    DES_ede3_cfb64_encrypt(out->data + 13 + in->length, out->data + 13 + in->length, 20, &ks1, &ks2, &ks3,
 		       &iv, &n, ENCRYPT);
   }
   return (0);
@
