head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.8
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.4
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.30
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.28
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.26
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.24
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.22
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.20
	OPENBSD_5_0:1.5.0.18
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.16
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.14
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.12
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.10
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.8
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.6
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.4
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.1.1.0.2
	OPENBSD_3_8_BASE:1.1.1.1
	niallo_2005_06_16:1.1.1.1
	niallo:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2015.01.18.03.14.21;	author naddy;	state Exp;
branches;
next	1.5;
commitid	INAcawJqik7lWSVj;

1.5
date	2007.05.03.17.34.09;	author alek;	state Exp;
branches;
next	1.4;

1.4
date	2007.04.05.16.20.02;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.25.21.55.21;	author steven;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.23.12.55.05;	author steven;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2005.06.16.17.35.22;	author niallo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.06.16.17.35.22;	author niallo;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	2006.03.27.18.55.13;	author sturm;	state Exp;
branches;
next	;

1.2.2.1
date	2006.05.01.08.49.56;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Drop remaining MD5/RMD160/SHA1 checksums.
@
text
@SHA256 (hashcash-1.22.tgz) = AZLxLUHOSEjmA4Q5jF/4NXm1VxBgHHv/5siLxWtUeJY=
SIZE (hashcash-1.22.tgz) = 195193
@


1.5
log
@Update to 1.22 from Armin Wolfermann <aw@@osn.de>
@
text
@a0 3
MD5 (hashcash-1.22.tgz) = MfriBwYYQd/8e5DuGOPQ+g==
RMD160 (hashcash-1.22.tgz) = YAN9f+67a6PVfJAKgRpGWAvVZ74=
SHA1 (hashcash-1.22.tgz) = D6A8nyZgJuUFwKt7ZxrZOu+TEN4=
@


1.4
log
@base64 checksums.
@
text
@d1 5
a5 5
MD5 (hashcash-1.21.tgz) = d5IwGJ0KLtGB/AOMUjc75g==
RMD160 (hashcash-1.21.tgz) = mDxOjXhrw9cKs5ogp/Vgsod4yA8=
SHA1 (hashcash-1.21.tgz) = Fz68/BOR0sZWwWETnnpoidjCYIo=
SHA256 (hashcash-1.21.tgz) = y3bnFb43DA7vdJejMp+CSPc7WmuqXAM1sdpo2V5S+f8=
SIZE (hashcash-1.21.tgz) = 193777
@


1.3
log
@SECURITY update to hashcash 1.21
fix potential heap overflow bug reported by Andreas Seltenreich

from Armin Wolfermann (maintainer)
@
text
@d1 4
a4 3
MD5 (hashcash-1.21.tgz) = 779230189d0a2ed181fc038c52373be6
RMD160 (hashcash-1.21.tgz) = 983c4e8d786bc3d70ab39a20a7f560b28778c80f
SHA1 (hashcash-1.21.tgz) = 173ebcfc1391d2c656c161139e7a6889d8c2608a
@


1.2
log
@update to hashcash 1.20

from Armin Wolfermann <aw at osn.de> (maintainer)
sync with update-plist while here
@
text
@d1 4
a4 4
MD5 (hashcash-1.20.tgz) = b8b94c9e7ada3006f8fe26c3084ae162
RMD160 (hashcash-1.20.tgz) = eddad1528bebf57bc2ae8442aa0f4fb832dee69a
SHA1 (hashcash-1.20.tgz) = 24259265afa8282d9632ba2925cb6c344eb148f2
SIZE (hashcash-1.20.tgz) = 193694
@


1.2.2.1
log
@MFC:
SECURITY update to hashcash 1.21
fix potential heap overflow bug reported by Andreas Seltenreich

from Armin Wolfermann (maintainer)
@
text
@d1 4
a4 4
MD5 (hashcash-1.21.tgz) = 779230189d0a2ed181fc038c52373be6
RMD160 (hashcash-1.21.tgz) = 983c4e8d786bc3d70ab39a20a7f560b28778c80f
SHA1 (hashcash-1.21.tgz) = 173ebcfc1391d2c656c161139e7a6889d8c2608a
SIZE (hashcash-1.21.tgz) = 193777
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
MD5 (hashcash-1.17.tgz) = 9e5a8a35941c0cdccac93f41bd943593
RMD160 (hashcash-1.17.tgz) = da50fa2bd609543614d6845e8cc78fd7f268e690
SHA1 (hashcash-1.17.tgz) = bf77149d5911bda2b59745a76c2df3b7ff0f1701
SIZE (hashcash-1.17.tgz) = 185522
@


1.1.1.1
log
@Import mail/hashcash

The hashcash tool allows you to create hashcash stamps to attach to
emails you send, and to verify hashcash stamps attached to emails you
receive. Email senders attach hashcash stamps with the X-Hashcash:
header. A hashcash stamp constitutes a proof-of-work which takes a
parameterizable amount of work to compute for the sender. The
recipient can verify received stamps efficiently.

From: Armin Wolfermann <aw@@osn.de>

ok alek@@
@
text
@@


1.1.1.1.2.1
log
@MFC:
SECURITY update to hashcash 1.21
fix potential heap overflow bug reported by Andreas Seltenreich

from Armin Wolfermann (maintainer)
@
text
@d1 4
a4 4
MD5 (hashcash-1.21.tgz) = 779230189d0a2ed181fc038c52373be6
RMD160 (hashcash-1.21.tgz) = 983c4e8d786bc3d70ab39a20a7f560b28778c80f
SHA1 (hashcash-1.21.tgz) = 173ebcfc1391d2c656c161139e7a6889d8c2608a
SIZE (hashcash-1.21.tgz) = 193777
@

