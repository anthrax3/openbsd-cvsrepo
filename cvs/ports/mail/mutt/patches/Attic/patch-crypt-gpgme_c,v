head	1.3;
access;
symbols
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2016.04.04.14.55.36;	author sthen;	state dead;
branches;
next	1.2;
commitid	9bCANb6niAcVaqs3;

1.2
date	2015.09.09.18.40.55;	author sthen;	state Exp;
branches;
next	1.1;
commitid	G6weWCrCJ97GSLJc;

1.1
date	2015.09.09.18.39.40;	author sthen;	state Exp;
branches;
next	;
commitid	KwFVcIhrtHhXGPmv;


desc
@@


1.3
log
@update to mutt-1.6.0
@
text
@$OpenBSD: patch-crypt-gpgme_c,v 1.2 2015/09/09 18:40:55 sthen Exp $

gpgme's gpgme_subkey_t->timestamp is an unsigned long and can't be passed
directly to localtime which takes a time_t.

http://dev.mutt.org/trac/changeset/6498/crypt-gpgme.c

--- crypt-gpgme.c.orig	Wed Sep  9 20:33:56 2015
+++ crypt-gpgme.c	Wed Sep  9 20:34:28 2015
@@@@ -2018,6 +2018,7 @@@@ static int pgp_gpgme_extract_keys (gpgme_data_t keydat
   char date[STRING];
   int more;
   int rc = -1;
+  time_t tt;
 
   if ((err = gpgme_new (&tmpctx)) != GPG_ERR_NO_ERROR)
   {
@@@@ -2081,7 +2082,8 @@@@ static int pgp_gpgme_extract_keys (gpgme_data_t keydat
       len = mutt_strlen (subkey->keyid);
       if (len > 8)
         shortid += len - 8;
-      strftime (date, sizeof (date), "%Y-%m-%d", localtime (&subkey->timestamp));
+      tt = subkey->timestamp;
+      strftime (date, sizeof (date), "%Y-%m-%d", localtime (&tt));
 
       if (!more)
         fprintf (*fp, "%s %5.5s %d/%8s %s %s\n", more ? "sub" : "pub",
@


1.2
log
@add upstream url
@
text
@d1 1
a1 1
$OpenBSD: patch-crypt-gpgme_c,v 1.1 2015/09/09 18:39:40 sthen Exp $
@


1.1
log
@Fix crash on 32-bit arch when using gpgme, gpgme's gpgme_subkey_t->timestamp
is an unsigned long and can't be passed directly to localtime which takes a
time_t. From Hannes Wenzel.
@
text
@d1 1
a1 1
$OpenBSD$
d5 2
@

