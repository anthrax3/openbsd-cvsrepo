head	1.3;
access;
symbols
	OPENBSD_5_4:1.2.0.46
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.44
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.42
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.40
	OPENBSD_5_0:1.2.0.38
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.36
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.34
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.32
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.30
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.28
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.26
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.24
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.22
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.20
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.18
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.16
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.14
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.12
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.10
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.1.1.0.4
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	lebel_2001-Aug-20:1.1.1.1
	lebel:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.11.07.07.09.00;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2002.06.14.17.43.51;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.20.19.47.33;	author lebel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.08.20.19.47.33;	author lebel;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove SECURITY files. They have served their purpose in the past but
have become pretty useless nowadays (and the pkg tools do not display
them anyway).
Some which contained valuable information have been turned into READMEs.

ok jasper@@ sthen@@
input/ok naddy@@
@
text
@$OpenBSD: SECURITY,v 1.2 2002/06/14 17:43:51 fgsch Exp $

Note: in ${WRKDIR}/muttlib.c the function mutt_adv_mktemp
uses mktemp(3), but the resulting name is used much later in
a procedure that does an open with O_CREAT | O_EXCL.  If the
open fails an error is reported and the user can try again.
If the open succeeds the fd is used in fdopen to get a FILE.

This use is actually correct.
@


1.2
log
@update to mutt 1.4; submited also by lebel@@.
@
text
@d1 1
a1 1
$OpenBSD: SECURITY,v 1.1.1.1 2001/08/20 19:47:33 lebel Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: SECURITY,v 1.5 1999/01/13 21:37:54 turan Exp $
d3 2
a4 2
Note: in ${WRKDIR}/rfc1524.c the function mutt_adv_mktemp
uses mktemp, but the resulting name is used much later in
a7 1
No security hole that I saw.
d9 1
a9 10
If the mktemp is replaced with mkstemp the open will fail as
the named file will exist.  In order to use mkstemp the interface
to several functions will have to change so the fd returned by
mkstemp is eventually passed to the function that currently does
the open.

Remember s/mktemp/mkstemp/g does NOT work as the two functions have
different semantics.

${WRKDIR}/rfc1524.c:  two calls to mktemp.  -turan
@


1.1.1.1
log
@here is mutt/stable.  This is of course the exact same port that used to
be in mail/mutt.  It is version 1.2.5.

@
text
@@
