head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.08.09.57.28;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2009.07.29.20.26.45;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update the sidebar/compressed patches to work with this snapshot.
- new LIB_DEPENDS/REVISION.
- switch to a newer snapshot pulled from the repo, rolling in the
upstream patches.

requested by edd@@. thanks to jasper@@, landry@@, pea@@ for testing.
@
text
@$OpenBSD: patch-hcache_h,v 1.1 2009/07/29 20:26:45 sthen Exp $

uidvalidity is an IMAP-specific uint32; ticket #3296

--- hcache.h.orig	Tue Nov 11 19:55:46 2008
+++ hcache.h	Wed Jul 29 20:48:32 2009
@@@@ -33,8 +33,9 @@@@ HEADER *mutt_hcache_restore(const unsigned char *d, HE
 void *mutt_hcache_fetch(header_cache_t *h, const char *filename, size_t (*keylen)(const char *fn));
 void *mutt_hcache_fetch_raw (header_cache_t *h, const char *filename,
                              size_t (*keylen)(const char *fn));
+/* uidvalidity is an IMAP-specific unsigned 32 bit number */
 int mutt_hcache_store(header_cache_t *h, const char *filename, HEADER *header,
-                      unsigned long uid_validity, size_t (*keylen)(const char *fn));
+                      unsigned int uidvalidity, size_t (*keylen)(const char *fn));
 int mutt_hcache_store_raw (header_cache_t *h, const char* filename, void* data,
                            size_t dlen, size_t(*keylen) (const char* fn));
 int mutt_hcache_delete(header_cache_t *h, const char *filename, size_t (*keylen)(const char *fn));
@


1.1
log
@Add a patch for mutt ticket #3296, IMAP header cache misbehaves on sparc64.
Bump PKGNAME.
@
text
@d1 1
a1 1
$OpenBSD$
@

