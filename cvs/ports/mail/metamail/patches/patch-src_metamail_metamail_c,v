head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.10
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.11.19.20.48.00;	author sthen;	state Exp;
branches;
next	1.2;
commitid	bipTG7olNPZwDodg;

1.2
date	2013.11.30.15.13.06;	author jca;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.17.10.57.23;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@unbreak following removal of unistd.h include from sys/file.h

this commit does nothing to improve the crappiness of these ports, just
lets them build again.
@
text
@$OpenBSD: patch-src_metamail_metamail_c,v 1.2 2013/11/30 15:13:06 jca Exp $
--- src/metamail/metamail.c.orig	Thu Feb 17 01:57:19 1994
+++ src/metamail/metamail.c	Wed Nov 19 20:45:34 2014
@@@@ -20,6 +20,9 @@@@ WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
 
  ******************************************************* */
 #include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <string.h>
 #include <ctype.h>
 #include <sys/types.h>
 #include <sys/stat.h>
@@@@ -29,7 +32,7 @@@@ WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
 #ifdef BORLAND
 #define F_OK 0
 extern unsigned _stklen = 16384;
-extern char *mktemp(char *);
+extern char *mkstemp(char *);
 #define WRITE_BINARY	"w"
 #else /* BORLAND */
 #ifdef MICROSOFT
@@@@ -46,12 +49,14 @@@@ extern char *mktemp(char *);
 #include <signal.h>
 
 #ifndef AMIGA
-#ifdef SYSV
+#if defined(HAVE_TCGETATTR)
+#include <termios.h>
+#elif defined(SYSV)
 #include <termio.h>
 #include <unistd.h>
-#else /* SYSV */
+#else
 #include <sgtty.h>
-#endif /* SYSV */
+#endif
 #endif /* AMIGA */
 #endif /* MICROSOFT */
 #endif /* BORLAND */
@@@@ -100,13 +105,6 @@@@ extern char **environ, *gets();
 #define CMDSIZE 1200 /* Maximum size of command to execute */
 
 #define LINE_BUF_SIZE       2000
-#ifndef MICROSOFT
-extern char *malloc();
-extern char *realloc();
-#endif
-extern char *getenv();
-extern char *index();
-extern char *rindex();
 char fileToDelete[MAX_FILE_NAME_SIZE];
 
 char *FindParam();
@@@@ -302,24 +300,6 @@@@ char **argv;
     int retcode;
 
     modpath(AUXPATH);
-#ifndef MSDOS
-    signal(SIGINT, cleanup);
-#ifndef AMIGA
-    signal(SIGILL, cleanup);
-    signal(SIGTRAP, cleanup);
-    signal(SIGIOT, cleanup);
-    signal(SIGFPE, cleanup);
-#ifndef LINUX
-    signal(SIGEMT, cleanup);
-    signal(SIGBUS, cleanup);
-#endif
-    signal(SIGSEGV, cleanup);
-    signal(SIGTERM, cleanup);
-#endif
-#endif
-#ifdef SIGXCPU
-    signal(SIGXCPU, cleanup);
-#endif
     tmproot = getenv("METAMAIL_TMPDIR");
     if (!tmproot) tmproot="/tmp";
     mailheaders = getenv("MM_HEADERS");
@@@@ -579,7 +559,7 @@@@ int nestingdepth;
                                 int overwriteans = -1;
                                 do {
                                     printf("File %s exists.  Do you want to overwrite it (y/n) ?\n", Fname);
-                                    s = gets(AnsBuf);
+                                    s = fgets(AnsBuf, sizeof(AnsBuf), stdin);
                                     if (!s) {
                                         overwriteans = 0;
                                     } else {
@@@@ -1202,9 +1182,9 @@@@ char *SquirrelFile;
     fprintf(outfp, "Content-type: %s", ContentType);
     for (j=0; j<CParamsUsed; ++j) {
         fprintf(outfp, " ; ");
-        fprintf(outfp, CParams[j]);
+        fprintf(outfp, "%s", CParams[j]);
         fprintf(outfp, " = ");
-        fprintf(outfp, CParamValues[j]);
+        fprintf(outfp, "%s", CParamValues[j]);
     }
     fprintf(outfp, "\n\n"); 
     TranslateInputToOutput(InputFP, outfp, EncodingCode, ContentType);
@@@@ -1823,7 +1803,7 @@@@ char *ctype, *progname, *label;
         } else {
             printf("This message contains '%s'-format data.\nDo you want to view it using the '%s' command (y/n) [y] ? ", ctype, ShortCommand(progname));
         }
-        s = gets(AnsBuf);
+        s = fgets(AnsBuf, sizeof(AnsBuf), stdin);
         if (!s) return(0); /* EOF */
 	while (s && *s && isspace((unsigned char) *s)) ++s;
 	if (*s == 'y' || *s == 'Y' || !*s || *s == '\n') return(1);
@@@@ -2022,7 +2002,7 @@@@ int ShowLeadingWhitespace;
     if (lc2strcmp(charset, PrevCharset)) {
         char *s2, *charsetinuse;
 
-        strcpy(PrevCharset, charset);
+        strlcpy(PrevCharset, charset, sizeof(PrevCharset));
         for (s2=PrevCharset; *s2; ++s2) {
             if (isupper((unsigned char) *s2)) *s2 = tolower((unsigned char) *s2);
         }
@@@@ -2032,7 +2012,7 @@@@ int ShowLeadingWhitespace;
         }
     }
     if (ecode == ENCODING_NONE) {
-        printf(txt+1);
+        printf("%s", txt+1);
     } else {
         /* What follows is REALLY bogus, but all my encoding stuff is pipe-oriented right now... */
         MkTmpFileName(TmpFile);
@@@@ -2374,8 +2354,11 @@@@ char *Prefix;
 }
 
 int HasSavedTtyState=0;
+
 #if !defined(AMIGA) && !defined(MSDOS)
-#ifdef SYSV
+#if defined(HAVE_TCGETATTR)
+static struct termios MyTtyStateIn, MyTtyStateOut;
+#elif defined(SYSV)
 static struct termio MyTtyStateIn, MyTtyStateOut;
 #else
 static struct sgttyb MyTtyStateIn, MyTtyStateOut;
@@@@ -2385,7 +2368,10 @@@@ static struct sgttyb MyTtyStateIn, MyTtyStateOut;
 SaveTtyState() {
     /* Bogus -- would like a good portable way to reset the terminal state here */
 #if !defined(AMIGA) && !defined(MSDOS)
-#ifdef SYSV
+#if defined(HAVE_TCGETATTR)
+    tcgetattr(fileno(stdin), &MyTtyStateIn);
+    tcgetattr(fileno(stdout), &MyTtyStateOut);
+#elif defined(SYSV)
     ioctl(fileno(stdin), TCGETA, &MyTtyStateIn);
     ioctl(fileno(stdout), TCGETA, &MyTtyStateOut);
 #else
@@@@ -2398,8 +2384,13 @@@@ SaveTtyState() {
 
 RestoreTtyState() {
 #if !defined(AMIGA) && !defined(MSDOS)
-#ifdef SYSV
+#if defined(HAVE_TCGETATTR)
     if (HasSavedTtyState) {
+        tcsetattr(fileno(stdin), TCSANOW, &MyTtyStateIn);
+        tcsetattr(fileno(stdout), TCSANOW, &MyTtyStateOut);
+    }
+#elif defined(SYSV)
+    if (HasSavedTtyState) {
         ioctl(fileno(stdout), TCSETA, &MyTtyStateOut);
         ioctl(fileno(stdin), TCSETA, &MyTtyStateIn);
     }
@@@@ -2489,14 +2480,14 @@@@ char *name;
 {
 #ifdef AMIGA
     strcpy(name, "T:mmXXXXXX");
-    mktemp(name);
+    close(mkstemp(name));
 #else
 #ifndef MSDOS
     sprintf(name, "%s/mm.XXXXXX", tmproot);
-    mktemp(name);
+    close(mkstemp(name));
 #else
      strcpy(name, "TXXXXXX");
-     if (!mktemp(name))
+     if (!close(mkstemp(name)))
          name[0] = 0;
      else
          if (DoDebug) printf("temp name = \"%s\"\n", name);
@@@@ -2681,7 +2672,16 @@@@ PauseForUser() {
 
 StartRawStdin() {
 #if !defined(AMIGA) && !defined(MSDOS)
-#ifdef SYSV
+#if defined(HAVE_TCGETATTR)
+    struct termios term;
+
+    if (tcgetattr(0, &term) == -1) /* get current (i.e. cooked) termio */
+        return -1;
+    term.c_lflag &= ~ICANON;    /* clear ICANON giving raw mode */
+    term.c_cc[VMIN] = 1;	/* set MIN char count to 1 */
+    term.c_cc[VTIME] = 0;	/* set NO time limit */
+    return tcsetattr(0, TCSADRAIN, &term);
+#elif defined(SYSV)
     struct termio   orterm, fterm;
     ioctl(0, TCGETA, &orterm);	/* get current (i.e. cooked) termio */
     fterm = orterm;		/* get termio to modify */
@


1.2
log
@Remove the need for stty and gtty, using tcgetattr and tcsetattr.
Kill gets() calls while here.  Corrections from ajacoutot and naddy,
ok naddy.
@
text
@d1 4
a4 4
$OpenBSD: patch-src_metamail_metamail_c,v 1.1 2012/03/17 10:57:23 sthen Exp $
--- src/metamail/metamail.c.orig	Thu Feb 17 02:57:19 1994
+++ src/metamail/metamail.c	Sat Nov 30 14:33:18 2013
@@@@ -20,6 +20,8 @@@@ WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
d9 1
d14 1
a14 1
@@@@ -29,7 +31,7 @@@@ WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
d23 1
a23 1
@@@@ -46,12 +48,14 @@@@ extern char *mktemp(char *);
d41 1
a41 1
@@@@ -100,13 +104,6 @@@@ extern char **environ, *gets();
d55 1
a55 1
@@@@ -302,24 +299,6 @@@@ char **argv;
d80 1
a80 1
@@@@ -579,7 +558,7 @@@@ int nestingdepth;
d89 1
a89 1
@@@@ -1202,9 +1181,9 @@@@ char *SquirrelFile;
d101 1
a101 1
@@@@ -1823,7 +1802,7 @@@@ char *ctype, *progname, *label;
d110 1
a110 1
@@@@ -2022,7 +2001,7 @@@@ int ShowLeadingWhitespace;
d119 1
a119 1
@@@@ -2032,7 +2011,7 @@@@ int ShowLeadingWhitespace;
d128 1
a128 1
@@@@ -2374,8 +2353,11 @@@@ char *Prefix;
d141 1
a141 1
@@@@ -2385,7 +2367,10 @@@@ static struct sgttyb MyTtyStateIn, MyTtyStateOut;
d153 1
a153 1
@@@@ -2398,8 +2383,13 @@@@ SaveTtyState() {
d168 1
a168 1
@@@@ -2489,14 +2479,14 @@@@ char *name;
d186 1
a186 1
@@@@ -2681,7 +2671,16 @@@@ PauseForUser() {
@


1.1
log
@use WRKSRC not WRKDIST and regen patches
no need for groff
regen plist
use SUBST_CMD rather than handrolled %%SYSCONFDIR%% subst
@
text
@d1 3
a3 3
$OpenBSD$
--- src/metamail/metamail.c.orig	Thu Feb 17 01:57:19 1994
+++ src/metamail/metamail.c	Sat Mar 17 10:51:52 2012
d22 19
a40 1
@@@@ -100,13 +102,6 @@@@ extern char **environ, *gets();
d54 1
a54 1
@@@@ -302,24 +297,6 @@@@ char **argv;
d79 10
a88 1
@@@@ -1202,9 +1179,9 @@@@ char *SquirrelFile;
d100 10
a109 1
@@@@ -2022,7 +1999,7 @@@@ int ShowLeadingWhitespace;
d118 1
a118 1
@@@@ -2032,7 +2009,7 @@@@ int ShowLeadingWhitespace;
d127 41
a167 1
@@@@ -2489,14 +2466,14 @@@@ char *name;
d185 18
@

