head	1.2;
access;
symbols
	OPENBSD_6_1:1.1.0.20
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.18
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.14
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.16
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.12
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.10
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.8
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.05.25.17.47.08;	author espie;	state Exp;
branches;
next	1.1;
commitid	8icHCAM8kHsbb1uS;

1.1
date	2012.03.17.10.57.23;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@minimal compile fixes for clang
@
text
@$OpenBSD: patch-src_metamail_codes_c,v 1.1 2012/03/17 10:57:23 sthen Exp $
Index: src/metamail/codes.c
--- src/metamail/codes.c.orig
+++ src/metamail/codes.c
@@@@ -13,6 +13,7 @@@@ OF THIS MATERIAL FOR ANY PURPOSE.  IT IS PROVIDED "AS 
 WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
 */
 #include <stdio.h>
+#include <string.h>
 #include <ctype.h>
 #include <config.h>
 
@@@@ -31,6 +32,9 @@@@ static char index_64[128] = {
     41,42,43,44, 45,46,47,48, 49,50,51,-1, -1,-1,-1,-1
 };
 
+void from64(FILE *, FILE *, char **, int *, int);
+void fromqp(FILE *, FILE *, char **, int *);
+
 #define char64(c)  (((c) < 0 || (c) > 127) ? -1 : index_64[(c)])
 
 /*
@@@@ -174,6 +178,7 @@@@ int PortableNewlines;
 }
 #endif
 
+void
 from64(infile, outfile, boundaries, boundaryct, PortableNewlines) 
 FILE *infile, *outfile;
 char **boundaries;
@@@@ -350,6 +355,7 @@@@ FILE *infile, *outfile;
     }
 }
 
+void
 fromqp(infile, outfile, boundaries, boundaryct) 
 FILE *infile, *outfile;
 char **boundaries;
@


1.1
log
@use WRKSRC not WRKDIST and regen patches
no need for groff
regen plist
use SUBST_CMD rather than handrolled %%SYSCONFDIR%% subst
@
text
@d1 4
a4 3
$OpenBSD$
--- src/metamail/codes.c.orig	Mon Sep 20 14:13:22 1993
+++ src/metamail/codes.c	Sat Mar 17 10:51:52 2012
d13 26
@

