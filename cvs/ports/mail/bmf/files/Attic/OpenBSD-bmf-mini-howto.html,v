head	1.5;
access;
symbols
	OPENBSD_4_2:1.4.0.20
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.18
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.16
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.14
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.12
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4;
locks; strict;
comment	@# @;


1.5
date	2007.09.07.08.13.20;	author aanriot;	state dead;
branches;
next	1.4;

1.4
date	2002.12.13.21.40.25;	author lebel;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.29.15.46.25;	author lebel;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.29.12.56.57;	author lebel;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.01.17.38.05;	author lebel;	state Exp;
branches;
next	;


desc
@@


1.5
log
@- remove OpenBSD-bmf-mini-howto.html (redundant with README) and add a
.gnus sample configuration in README;
- while there, remove "" from the COMMENT line.

from Jim Razmus (maintainer);
gnus bits by me
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>bmf mini-howto</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" >
<link rel="STYLESHEET" href="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/docbook.css">
</head>
<body>


<h3>Theoretical part:</h3>

<p>Before you start to use bmf it is a good thing to know  a  little bit about
   the theoretical background of
   <a href="http://www.paulgraham.com/spam.html">Bayesian spamfiltering</a>.


<h3>Training bmf:</h3>

<p>Lets take a look at this basic <tt class="FILENAME">.procmailrc</tt> example.

<dl><dd><pre>
:0fw
* &lt; 256000
| bmf -p

:0e
{
EXITCODE=$?
}

:0:
* ^X-Spam-Status: Yes
zspam # This is the mailbox where all spam goes.

:0w
inbox # This is your inbox</pre></dd></dl>


<p>bmf will now sort your mail in a spam and non-spam folder. Training
   bmf means you have to tell it when it has made a mistake.

As an example you can add these shortcuts to your <tt class="FILENAME">.muttrc</tt>

<dl><dd><pre>
macro index &lt;f3&gt; "|bmf -S\n&lt;save-message&gt;=zspam\n" "SPAM"
macro index &lt;f4&gt; "|bmf -N\n&lt;save-message&gt;=inbox\n" "NOT SPAM"
macro pager &lt;f3&gt; "|bmf -S\n&lt;save-message&gt;=zspam\n" "SPAM"
macro pager &lt;f4&gt; "|bmf -N\n&lt;save-message&gt;=inbox\n" "NOT SPAM"
</pre></dd></dl>

<p>Now you can press the F3 button to tell bmf a message in your inbox
   is spam ( <tt class="FILENAME">bmf -S</tt> ) and move it to your
   spam-folder. If you find a non-spam message in your spam-folder you
   can press F4 and bmf will unregister the message as spam and put it
   in your normal mailfolder.

<h3>Feeding a spam-archive to bmf:</h3>
<p>To speed up the process of feeding  the  bmf-database  you  can  also
   download a recent
   <a href="http://www.em.ca/~bruceg/spam/">spam archive</a>
   and run the files in the archive through the following one-liner:

<dl><dd><pre>for i in * ; do bmf -s -i $i; done</pre></dd></dl>

<p>This method is not recommended by the author since the headers of a
   message are also taken in account. And the headers of the messages
   from a spam-archive do not match yours. But I had good results with
   this method.

<h3>Mixing with SpamAssassin:</h3>

<p>You can also mix bmf with
   <a  href="http://spamassassin.org">SpamAssassin</a>.
   bmf is much lighter than spamassassin but SpamAssassin does not have
   to be trained. You can actually use SpamAssassin to train bmf. Change
   your <tt class="FILENAME">.procmailrc</tt> to something like this:

<dl><dd><pre>
:0fw
* &lt; 256000
| bmf -p

:0e
{
EXITCODE=$?
}

:0:
* ^X-Spam-Status: Yes
zspam-bmf


:0fw
* &lt; 256000
| spamc -p 4321 -f

:0e
{
EXITCODE=$?
}

:0:
* ^X-Spam-Status: Yes
{
  :0c
  | spamassassin -d | bmf -S
  :0
  zspam-sa
}

:0w
inbox</pre></dd></dl>

<p>All spam caught by bmf will be send to the zspam-bmf folder. All spam
   missed by bmf but caught by SpamAssassin will be fed to bmf for
   training and then send to the zspam-sa folder.


<h3>Disclaimer:</h3>

<p>If anything bad happens to your email I am not responsible. If you
   have any improvements to this document please send them to the
   maintainer of this port.

</body>
</html>
@


1.4
log
@update to the bmf mini-howto; from MAINTAINER
@
text
@@


1.3
log
@fix some errors in the docs; from MAINTAINER
@
text
@d15 1
a15 1
<a href="http://www.paulgraham.com/spam.html">Bayesian spamfiltering</a>.
d18 1
a18 1
<h3>Basic installation:</h3>
d20 1
a20 2
<p>After installing the port put this at the top of your
   <tt class="FILENAME">.procmailrc</tt>.
d34 1
a34 1
zspam # This is the mailbox where all spam goes.</pre></dd></dl>
d36 6
a41 1
<p>Now you have to tell bmf the difference between spam and non-spam messages.
d47 1
a47 1
macro index &lt;f4&gt; "|bmf -N\n&lt;save-message&gt;=Maildir\n" "NO SPAM"
d49 1
a49 1
macro pager &lt;f4&gt; "|bmf -N\n&lt;save-message&gt;=Maildir\n" "NO SPAM"
d52 5
a56 4
<p>Now you can press the F3-button to tell bmf a message in  your  inbox
   is spam ( <tt class="FILENAME">bmf -S</tt>  ) and  move  it  to  your
   spam-folder.

d62 1
a62 1
   and run the files in the archive through the following oneliner:
d66 3
a68 3
<p>This method is not recommended by the author since the headers  of  a
   message are also taken in account and the  headers  of  the  messages
   from a spam-archive do not match yours, but I had good  results  with
d71 1
a71 1
<h3>Mixing with spamassassin:</h3>
d74 3
a76 3
   <a  href="http://spamassassin.org">spamassassin</a>.
   bmf is much lighter than spamassassin but spamassassin does not have
   to be trained. You can actually use spamassassin to train bmf. Change
d107 1
a107 1
  | bmf -S
a110 1
</pre></dd></dl>
d112 6
a117 3
<p>All mail cought by bmf will be send to the zspam-bmf folder. All spam
   missed by bmf but cought by spamassassin will be fed to bmf for
   training and send to the zspam-sa folder.
d122 3
a124 3
<p>If anything bad happens to your email I am not  responsible.  If  you
   know improvements to this document please send them to the maintainer
   of this port.
@


1.2
log
@add a mysql FLAVOR to mail/bmf; update a little bit the manual a bit;
from MAINTAINER
@
text
@d37 1
a37 1
<p>Now you have to tell bmf the difference between spam and non-spam messages. 
d49 1
a49 1
   is spam ( <tt class="FILENAME">bmf -S</tt>  )  and  move  it  to  you
d51 1
a51 1
 
d56 1
a56 1
   <a href="http://www.em.ca/~bruceg/spam/">spam archive</a> 
d63 1
a63 1
   from a spam-archive do not match your, but I had  good  results  with
d69 4
a72 7
   <a  href="http://spamassassin.org">spamassassin</a>.  bmf   is   much
   lighter than spamassassin  but  spamassassin  does  not  have  to  be
   trained. All messages missed by bmf but caught by  spamassassin  will
   be fed to the bmf-database automatically.

  All you have to do is  to  change  the  spamfilter-part  of  your  <tt
  class="FILENAME">.procmailrc</tt> to:
d108 3
a110 1
<p>In other words: All mail cought by bmf will be send to the zspam-bmf folder. All spam missed by bmf but cought by spamassassin will be fed to bmf and send to the zspam-sa folder.
@


1.1
log
@adds an HOWTO; from MAINTAINER; also fix a warning in bmf.c (from me)
@
text
@d13 1
a13 1
<p>Before you start to use bmf it is a good thing to know  a  little  of
d15 1
a15 1
<a href="http://www.paulgraham.com/spam.html">Bayesian spamfiltering</a>
d20 2
a21 1
<p>Put this at the top of your <tt class="FILENAME">.procmailrc</tt>.
d35 1
a35 1
caughtspam # This is the mailbox where all spam goes.</pre></dd></dl>
d48 4
a51 1
<p>Now you can press the F3-button to tell bmf the message is spam and the F4-button to tell bmf this wasn't spam. 
d61 5
d69 4
a72 4
   <a href="http://spamassassin.org">spamassassin</a>.
   This has the advantage that bmf is much lighter than spamassassin and
   all messages missed by bmf but caught by spamassassin will be fed  to
   the bmf-database automatically.
d74 2
a75 2
All you have to  do  is  to  change  the  spamfilter-part  of  your
 <tt class="FILENAME">.procmailrc</tt> to:
d89 1
a89 1
caughtspam
d107 1
a107 1
  caughtspam
d110 2
@

