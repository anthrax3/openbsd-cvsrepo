head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.56
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.54
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.50
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.52
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.48
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.46
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.44
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.42
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.40
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.28
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.26
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	wilfried_2002-04-30:1.1.1.1
	wilfried:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2003.03.31.02.23.45;	author margarida;	state Exp;
branches;
next	1.2;

1.2
date	2002.07.15.07.00.32;	author wilfried;	state dead;
branches;
next	1.1;

1.1
date	2002.04.30.07.32.07;	author wilfried;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.04.30.07.32.07;	author wilfried;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to version 0.9
- New HOMEPAGE.
- Remove pointless WRKDIST assignment.
- Can now play a sound upon new mail arrival.

From MAINTAINER.
@
text
@$OpenBSD$
--- wmmultipop3/wmmultipop3.c.orig	Sun Dec  1 16:58:40 2002
+++ wmmultipop3/wmmultipop3.c	Wed Mar 26 13:46:58 2003
@@@@ -254,14 +254,14 @@@@ void wmCheckMail_routine(int argc, char 
 	if (conf.c[tempPopCnt]->popserver[0] == '/') {
 	  snprintf( command, 1024, "%s%s%s", "exit `grep \"^From \" ",
 	            conf.c[tempPopCnt]->popserver, " | wc -l`" );
-	  num_msgs = WEXITSTATUS(system(command));
+	  num_msgs = system(command);
 	  if (num_msgs < 0) {
 	    num_msgs = 0;
 	  }
 	  conf.c[tempPopCnt]->nMsgs = num_msgs;
 	  snprintf( command, 1024, "%s%s%s", "exit `grep \"^Status: R\" ",
 	            conf.c[tempPopCnt]->popserver, " | wc -l`" );
-	  read_msgs = WEXITSTATUS(system(command));
+	  read_msgs = system(command);
 	  if (read_msgs < 0) { 
 	    read_msgs = 0;
 	  }
@


1.2
log
@Update to wmMultiPop3-0.8, from maintainer Jolan Luff <jolan@@enteract.com>
- new HOMEPAGE
- patches to port were incorporated by the upstream author
- ability to run a command when there's new mail
@
text
@d1 19
a19 18
--- wmmultipop3/wmmultipop3.c.orig	Sat Sep 22 17:29:50 2001
+++ wmmultipop3/wmmultipop3.c	Tue Apr 30 09:16:39 2002
@@@@ -60,7 +60,7 @@@@ typedef struct {
   char password[STR_LENGTH];
   char username[STR_LENGTH];
   char popserver[4*STR_LENGTH];
-  char mailserverid[2];
+  char mailserverid[4];
   int  port;
   int  nMsgs;
   int  nUnread;
@@@@ -138,7 +138,7 @@@@ int main(int argc, char *argv[]) {
       case 'c' :
 	if (argc > (i+1))
 	  {
-	    strcpy(config_file, argv[i+1]);
+	    strlcpy(config_file, argv[i+1], sizeof(config_file));
 	    i++;
a20 104
 	break;
@@@@ -178,7 +178,7 @@@@ void wmCheckMail_routine(int argc, char 
   
   /* Find config-file */
   if( !strcmp( config_file, "not-defined") ) {
-    sprintf(config_file, "%s/.wmmultipop3rc", getenv("HOME")); 
+    snprintf(config_file, sizeof(config_file), "%s/.wmmultipop3rc", getenv("HOME")); 
   }
 
   /* Read config */
@@@@ -451,7 +451,7 @@@@ int  readConfigFile(char *filename) {
 
   /* If we don't have a configfile, output a new one */
   if ( (fp = fopen( filename, "r" )) == 0) {
-    sprintf(config_file, "%s/.wmmultipop3rc", getenv("HOME"));
+    snprintf(config_file, sizeof(config_file), "%s/.wmmultipop3rc", getenv("HOME"));
     printf("-Config file does not exit : %s\n",config_file);
     printf("+Trying to create new config file.\n");
     if((fp = fopen(config_file,"w")) == 0){
@@@@ -524,7 +524,7 @@@@ int  readConfigFile(char *filename) {
 	  printf("Error in mailclient string\n");
 	  return -1;
 	}
-	strcpy(conf.mailclient, ptr);
+	strlcpy(conf.mailclient, ptr, sizeof(conf.mailclient));
       }
       if ( !strcmp(ptr, "middle_click_cmd") ) {
 	ptr = strtok( 0, "\n");
@@@@ -532,7 +532,7 @@@@ int  readConfigFile(char *filename) {
 	  printf("Error in middle_click_cmd string\n");
 	  return -1;
 	}
-	strcpy(conf.middle_click_cmd, ptr);
+	strlcpy(conf.middle_click_cmd, ptr, sizeof(conf.middle_click_cmd));
       }
       if ( !strcmp(ptr, "right_click_cmd") ) {
 	ptr = strtok( 0, "\n");
@@@@ -540,7 +540,7 @@@@ int  readConfigFile(char *filename) {
 	  printf("Error in right_click_cmd string\n");
 	  return -1;
 	}
-	strcpy(conf.right_click_cmd, ptr);
+	strlcpy(conf.right_click_cmd, ptr, sizeof(conf.right_click_cmd));
       }
 
       if ( !strcmp(ptr, "popserver") ) {
@@@@ -553,7 +553,7 @@@@ int  readConfigFile(char *filename) {
 	if (popservers > 0)
 	  conf.c = (MailServerConf **)realloc(conf.c,(popservers+1)*sizeof(MailServerConf));
 	conf.c[popservers]=(MailServerConf *)malloc(sizeof(MailServerConf));
-	strcpy(conf.c[popservers]->popserver, ptr);
+	strlcpy(conf.c[popservers]->popserver, ptr, sizeof(conf.c[popservers]->popserver));
 	/*	conf.c[popservers]->nMailWaiting=0;*/
 	popservers++;
       }
@@@@ -572,7 +572,7 @@@@ int  readConfigFile(char *filename) {
 	  printf("Error in username string\n");
 	  return -1;
 	}
-	strcpy(conf.c[usernames]->username, ptr);
+	strlcpy(conf.c[usernames]->username, ptr, sizeof(conf.c[usernames]->username));
 	usernames++;
       }
       if ( !strcmp(ptr, "password") ) {
@@@@ -581,7 +581,7 @@@@ int  readConfigFile(char *filename) {
 	  printf("Error in password string\n");
 	  return -1;
 	}
-	strcpy(conf.c[passwords]->password, ptr);
+	strlcpy(conf.c[passwords]->password, ptr, sizeof(conf.c[passwords]->password));
 	passwords++;
       }
       if ( !strcmp(ptr, "mailserverid") ) {
@@@@ -590,7 +590,7 @@@@ int  readConfigFile(char *filename) {
 	  printf("Error in mail-server ID string\n");
 	  return -1;
 	}
-	strcpy(conf.c[ids]->mailserverid, ptr);
+	strlcpy(conf.c[ids]->mailserverid, ptr, sizeof(conf.c[ids]->mailserverid));
 	ids++;
       }
     }
@@@@ -600,10 +600,10 @@@@ int  readConfigFile(char *filename) {
      to mailclient (eg. left mouse click). This will preserve compability with 
      configfiles belonging to older versions of wmmultipop3 */
   if ( strlen( conf.middle_click_cmd ) < 1 ) {
-    strcpy( conf.middle_click_cmd, conf.mailclient );
+    strlcpy(conf.middle_click_cmd, conf.mailclient, sizeof(conf.middle_click_cmd));
   }
   if ( strlen( conf.right_click_cmd ) < 1 ) {
-    strcpy( conf.right_click_cmd, conf.mailclient );
+    strlcpy(conf.right_click_cmd, conf.mailclient, sizeof(conf.right_click_cmd));
   }
 
   conf.nMailBoxes = popservers;
@@@@ -697,7 +697,7 @@@@ void BlitNum(int num, int x, int y)
     newx -= CHAR_WIDTH;
   } 
   
-  sprintf(buf, "%02i", num);
+  snprintf(buf, sizeof(buf), "%02i", num);
   
   BlitString(buf, newx, y);
 }
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of wmMultiPop3-0.7, from Jolan Luff <jolan@@encryptedemail.net>

wmMultiPop3 is a windowmaker dock app that checks pop3 mail boxes.
It is based on the wmpop3 code, which does not support multiple
boxes.


@
text
@@
