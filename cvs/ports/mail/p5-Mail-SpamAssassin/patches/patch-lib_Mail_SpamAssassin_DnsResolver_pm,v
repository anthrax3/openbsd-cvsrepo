head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.8
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.6
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2016.03.04.00.05.35;	author sthen;	state Exp;
branches
	1.4.2.1;
next	1.3;
commitid	e2U6QP8GWvgaUDaT;

1.3
date	2016.03.03.23.27.51;	author sthen;	state Exp;
branches;
next	1.2;
commitid	FFHkeV7q62i28VHX;

1.2
date	2015.04.30.14.41.53;	author sthen;	state dead;
branches;
next	1.1;
commitid	kHKHyO0mSGhFhTYF;

1.1
date	2014.09.30.13.06.24;	author okan;	state Exp;
branches
	1.1.2.1;
next	;
commitid	PQaTUBKLc42fwI61;

1.1.2.1
date	2014.09.30.13.15.12;	author sthen;	state Exp;
branches;
next	;
commitid	amDQJgKEPDTmeYQy;

1.4.2.1
date	2016.03.19.12.17.45;	author sthen;	state Exp;
branches;
next	;
commitid	QqSlUJQlEUimQhXQ;


desc
@@


1.4
log
@pull back more patches from spamassassin 3.4 branch, again mostly coping
with Net::DNS API changes not documented in their changelog
@
text
@$OpenBSD$
--- lib/Mail/SpamAssassin/DnsResolver.pm.orig	Tue Apr 28 20:56:49 2015
+++ lib/Mail/SpamAssassin/DnsResolver.pm	Thu Mar  3 23:59:55 2016
@@@@ -592,6 +592,9 @@@@ sub new_dns_packet {
   };
 
   if ($packet) {
+    # RD flag needs to be set explicitly since Net::DNS 1.01, Bug 7223	
+    $packet->header->rd(1);
+
   # my $udp_payload_size = $self->{res}->udppacketsize;
     my $udp_payload_size = $self->{conf}->{dns_options}->{edns};
     if ($udp_payload_size && $udp_payload_size > 512) {
@@@@ -722,6 +725,37 @@@@ sub bgsend {
 
 ###########################################################################
 
+=item $id = $res->bgread()
+
+Similar to C<Net::DNS::Resolver::bgread>.  Reads a DNS packet from
+a supplied socket, decodes it, and returns a Net::DNS::Packet object
+if successful.  Dies on error.
+
+=cut
+
+sub bgread() {
+  my ($self) = @@_;
+  my $sock = $self->{sock};
+  my $packetsize = $self->{res}->udppacketsize;
+  $packetsize = 512  if $packetsize < 512;  # just in case
+  my $data = '';
+  my $peeraddr = $sock->recv($data, $packetsize+256);  # with some size margin for troubleshooting
+  defined $peeraddr or die "bgread: recv() failed: $!";
+  my $peerhost = $sock->peerhost;
+  $data ne '' or die "bgread: received empty packet from $peerhost";
+  dbg("dns: bgread: received %d bytes from %s", length($data), $peerhost);
+  my($answerpkt, $decoded_length) = Net::DNS::Packet->new(\$data);
+  $answerpkt or die "bgread: decoding DNS packet failed: $@@";
+  $answerpkt->answerfrom($peerhost);
+  if ($decoded_length ne length($data)) {
+    warn sprintf("bgread: received a %d bytes packet from %s, decoded %d bytes\n",
+                 length($data), $peerhost, $decoded_length);
+  }
+  return $answerpkt;
+}
+
+###########################################################################
+
 =item $nfound = $res->poll_responses()
 
 See if there are any C<bgsend> reply packets ready, and return
@@@@ -769,13 +803,25 @@@@ sub poll_responses {
     $timeout = 0;  # next time around collect whatever is available, then exit
     last  if $nfound == 0;
 
-    my $packet = $self->{res}->bgread($self->{sock});
+    my $packet;
+    eval {
+      $packet = $self->bgread();
+    } or do {
+      undef $packet;
+      my $eval_stat = $@@ ne '' ? $@@ : "errno=$!";  chomp $eval_stat;
+      # resignal if alarm went off
+      die $eval_stat  if $eval_stat =~ /__alarm__ignore__\(.*\)/s;
+      info("dns: bad dns reply: %s", $eval_stat);
+    };
 
+#   Bug 7265, use our own bgread()
+#   my $packet = $self->{res}->bgread($self->{sock});
+
     if (!$packet) {
-      my $dns_err = $self->{res}->errorstring;
-      # resignal if alarm went off
-      die "dns (3) $dns_err\n"  if $dns_err =~ /__alarm__ignore__\(.*\)/s;
-      info("dns: bad dns reply: $dns_err");
+      # error already reported above
+#     my $dns_err = $self->{res}->errorstring;
+#     die "dns (3) $dns_err\n"  if $dns_err =~ /__alarm__ignore__\(.*\)/s;
+#     info("dns: bad dns reply: $dns_err");
     } else {
       my $header = $packet->header;
       if (!$header) {
@


1.4.2.1
log
@MFC: backport SpamAssassin fixes to cope with p5-Net-DNS API breaks
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_Mail_SpamAssassin_DnsResolver_pm,v 1.4 2016/03/04 00:05:35 sthen Exp $
@


1.3
log
@Set RD properly on DNS queries. Broken by Net::DNS 1.01+
@
text
@d2 2
a3 5

spamassassin/branches/3.4/lib/Mail/SpamAssassin/DnsResolver.pm	2015/07/20 18:24:48	1691992

--- lib/Mail/SpamAssassin/DnsResolver.pm.orig	Thu Mar  3 23:25:07 2016
+++ lib/Mail/SpamAssassin/DnsResolver.pm	Thu Mar  3 23:26:30 2016
d14 69
@


1.2
log
@update to p5-Mail-SpamAssassin 3.4.1
http://svn.apache.org/repos/asf/spamassassin/branches/3.4/build/announcements/3.4.1.txt
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_Mail_SpamAssassin_DnsResolver_pm,v 1.1 2014/09/30 13:06:24 okan Exp $
d3 1
a3 1
# r1603518 - fix DNS Resolving to fix the issues with Net::DNS >= 0.76
d5 12
a16 15
--- lib/Mail/SpamAssassin/DnsResolver.pm.orig	Fri Feb  7 03:36:28 2014
+++ lib/Mail/SpamAssassin/DnsResolver.pm	Mon Sep 29 15:13:35 2014
@@@@ -204,8 +204,10 @@@@ sub configured_nameservers {
     @@ns_addr_port = @@{$self->{conf}->{dns_servers}};
     dbg("dns: servers set by config to: %s", join(', ',@@ns_addr_port));
   } elsif ($res) {  # default as provided by Net::DNS, e.g. /etc/resolv.conf
-    @@ns_addr_port = map(untaint_var("[$_]:" . $res->{port}),
-                        @@{$res->{nameservers}});
+    my @@ns = $res->UNIVERSAL::can('nameservers') ? $res->nameservers
+						 : @@{$res->{nameservers}};
+    my $port = $res->UNIVERSAL::can('port') ? $res->port : $res->{port};
+    @@ns_addr_port = map(untaint_var("[$_]:" . $port), @@ns);
     dbg("dns: servers obtained from Net::DNS : %s", join(', ',@@ns_addr_port));
   }
   return @@ns_addr_port;
@


1.1
log
@Backport r1603518 from upstream to fix issues with recent Net::DNS
updates (>= 0.76).

OK sthen
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@MFC SpamAssassin fix, unbreak DNS-based checks following the update of
p5-Net-DNS to 0.76.

https://issues.apache.org/SpamAssassin/show_bug.cgi?id=7057
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_Mail_SpamAssassin_DnsResolver_pm,v 1.1 2014/09/30 13:06:24 okan Exp $
@

