head	1.5;
access;
symbols
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_2:1.1.0.2;
locks; strict;
comment	@# @;


1.5
date	2003.12.27.04.17.01;	author brad;	state dead;
branches;
next	1.4;

1.4
date	2003.06.19.01.03.22;	author avsm;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2003.06.17.16.33.04;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.03.20.28.25;	author lebel;	state dead;
branches;
next	1.1;

1.1
date	2003.01.26.16.43.45;	author lebel;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.01.26.16.54.39;	author lebel;	state Exp;
branches;
next	;

1.4.2.1
date	2004.08.08.00.21.40;	author robert;	state dead;
branches;
next	;


desc
@@


1.5
log
@upgrade p5-Mail-SpamAssassin to 2.61
--
From: new MAINTAINER Ben Lovett <ben at tilderoot dot com>
@
text
@$OpenBSD: patch-spamd_libspamc_c,v 1.4 2003/06/19 01:03:22 avsm Exp $
--- spamd/libspamc.c.orig	Mon May 12 20:15:36 2003
+++ spamd/libspamc.c	Thu Jun 19 01:58:49 2003
@@@@ -595,7 +595,7 @@@@ static int
 _handle_spamd_header (struct message *m, int flags, char *buf, int len)
 {
     char is_spam[6];
-    char s_str[20], t_str[20];
+    char s_str[21], t_str[21];
 
     /* Feb 12 2003 jm: actually, I think sccanf is working fine here ;)
      * let's stick with it for this parser.
@


1.4
log
@sync with spamassassin-cvs for the bounds bugfix (#2041 in their bugzilla):
allocate an extra byte for the array instead of reducing the bounds value
@
text
@d1 1
a1 1
$OpenBSD: patch-spamd_libspamc_c,v 1.3 2003/06/17 16:33:04 avsm Exp $
@


1.4.2.1
log
@SECURITY:
upgrade to 2.64
- prevents a denial of service attack open to certain
malformed messages;

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-spamd_libspamc_c,v 1.4 2003/06/19 01:03:22 avsm Exp $
@


1.3
log
@fix a couple of off-by-one in spamc->spamd communication
submitted upstream, bugzilla #2074 in their bug db
bump PKGNAME
@
text
@d1 12
a12 12
$OpenBSD$
--- spamd/libspamc.c.orig	Tue Jun 17 17:12:54 2003
+++ spamd/libspamc.c	Tue Jun 17 17:14:24 2003
@@@@ -602,7 +602,7 @@@@ _handle_spamd_header (struct message *m,
      * May  7 2003 jm: using %f is bad where LC_NUMERIC is "," in the locale.
      * work around using our own locale-independent float-parser code.
      */
-    if (sscanf(buf, "Spam: %5s ; %20s / %20s", is_spam, s_str, t_str) == 3)
+    if (sscanf(buf, "Spam: %5s ; %19s / %19s", is_spam, s_str, t_str) == 3)
     {
 	m->score = _locale_safe_string_to_float (s_str, 20);
 	m->threshold = _locale_safe_string_to_float (t_str, 20);
@


1.2
log
@update p5-Mail-SpamAssassin to 2.44; from MAINTAINER
@
text
@d1 12
a12 33
Well, I was going to wait until 2.50 release, but it seems to be taking and
this likely affects only few installations. Besides, it's been in their
public bugzilla for over a month. So:

Attacker may be able to execute arbitrary code by sending a specially
crafted e-mail to a system using SpamAssassin's spamc program in BSMTP mode
(-B option). Versions from 2.40 to 2.43 are affected.

Exim users especially should check if they're affected, the -B option is
used in several Exim+SpamAssassin HOWTOs.

The problem is with escaping '.' characters at the beginning of lines.
Off-by-one bounds checking error allows writing '.' character past a
buffer, overwriting the stack frame address. Depending on system this may
be exploitable. Pre-built Debian unstable/x86 package wasn't vulnerable, my
self compiled was.

Patch:

diff -ru spamassassin-2.43-old/spamd/libspamc.c spamassassin-2.43/spamd/libspamc.c
--- spamd/libspamc.c.orig	2002-10-15 18:22:49.000000000 +0300
+++ spamd/libspamc.c	2002-12-27 20:19:36.000000000 +0200
@@@@ -309,7 +309,7 @@@@
       case MESSAGE_BSMTP:
         total=full_write(fd, m->pre, m->pre_len);
         for(i=0; i<m->out_len; ){
-            for(j=0; i<m->out_len && j<sizeof(buffer)/sizeof(*buffer)-1; ){
+            for(j=0; i<m->out_len && j<sizeof(buffer)/sizeof(*buffer)-2; ){
                 if(i+1<m->out_len && m->out[i]=='\n' && m->out[i+1]=='.'){
                     buffer[j++]=m->out[i++];
                     buffer[j++]=m->out[i++];


@


1.1
log
@Added patch from Timo Sirainen <tss@@iki.fi> to fix exploit.

---cut---
Well, I was going to wait until 2.50 release, but it seems to be taking and
this likely affects only few installations. Besides, it's been in their
public bugzilla for over a month. So:

Attacker may be able to execute arbitrary code by sending a specially
crafted e-mail to a system using SpamAssassin's spamc program in BSMTP mode
(-B option). Versions from 2.40 to 2.43 are affected.

Exim users especially should check if they're affected, the -B option is
used in several Exim+SpamAssassin HOWTOs.

The problem is with escaping '.' characters at the beginning of lines.
Off-by-one bounds checking error allows writing '.' character past a
buffer, overwriting the stack frame address. Depending on system this may
be exploitable. Pre-built Debian unstable/x86 package wasn't vulnerable, my
self compiled was.
---cut---
@
text
@@


1.1.2.1
log
@MFC: Added patch from Timo Sirainen <tss@@iki.fi> to fix exploit.

---cut---
Well, I was going to wait until 2.50 release, but it seems to be taking and
this likely affects only few installations. Besides, it's been in their
public bugzilla for over a month. So:

Attacker may be able to execute arbitrary code by sending a specially
crafted e-mail to a system using SpamAssassin's spamc program in BSMTP mode
(-B option). Versions from 2.40 to 2.43 are affected.

Exim users especially should check if they're affected, the -B option is
used in several Exim+SpamAssassin HOWTOs.

The problem is with escaping '.' characters at the beginning of lines.
Off-by-one bounds checking error allows writing '.' character past a
buffer, overwriting the stack frame address. Depending on system this may
be exploitable. Pre-built Debian unstable/x86 package wasn't vulnerable, my
self compiled was.
---cut---
@
text
@@

