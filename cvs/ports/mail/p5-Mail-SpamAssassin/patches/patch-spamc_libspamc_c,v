head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.10
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.8
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.6
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_5:1.1.0.8
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2015.05.23.14.18.55;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	mcds7eG2YFSTzUFe;

1.2
date	2014.03.16.12.39.22;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2012.06.25.22.12.30;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Make the regression tests of p5-Mail-SpamAssassin pass.
- Replace SSLv3_client_method() with  SSLv23_client_method() in spamc.
- Do not choose a specific SSL version, let IO::Socket::SSL decide.
- Print SSL error messages to make debugging easier.
- Fix search path in test.
input and OK sthen@@
@
text
@$OpenBSD$
--- spamc/libspamc.c.orig	Tue Apr 28 21:56:59 2015
+++ spamc/libspamc.c	Wed May 20 19:53:07 2015
@@@@ -1216,7 +1216,7 @@@@ int message_filter(struct transport *tp, const char *u
 	if (flags & SPAMC_TLSV1) {
 	    meth = TLSv1_client_method();
 	} else {
-	    meth = SSLv3_client_method(); /* default */
+	    meth = SSLv23_client_method(); /* default */
 	}
 	SSL_load_error_strings();
 	ctx = SSL_CTX_new(meth);
@@@@ -1604,7 +1604,7 @@@@ int message_tell(struct transport *tp, const char *use
     if (flags & SPAMC_USE_SSL) {
 #ifdef SPAMC_SSL
 	SSLeay_add_ssl_algorithms();
-	meth = SSLv3_client_method();
+	meth = SSLv23_client_method();
 	SSL_load_error_strings();
 	ctx = SSL_CTX_new(meth);
 #else
@


1.2
log
@update to SpamAssassin 3.4.0, with input from brad@@
@
text
@d1 6
a6 18
$OpenBSD: patch-spamc_libspamc_c,v 1.1 2012/06/25 22:12:30 sthen Exp $

Remove the SSLv2 support.

--- spamc/libspamc.c.orig	Mon Jun 25 08:00:22 2012
+++ spamc/libspamc.c	Mon Jun 25 08:01:45 2012
@@@@ -1202,14 +1202,10 @@@@ int message_filter(struct transport *tp, const char *u
     if (flags & SPAMC_USE_SSL) {
 #ifdef SPAMC_SSL
 	SSLeay_add_ssl_algorithms();
-	if ((flags & SPAMC_SSLV2) && (flags & SPAMC_SSLV3)) {
-	  meth = TLSv1_client_method(); /* both flag bits on means use TLSv1 */
-	} else if (flags & SPAMC_SSLV2) {
-	  meth = SSLv2_client_method();
-	} else if (flags & SPAMC_SSLV3) {
-	  meth = SSLv3_client_method();
+	if (flags & SPAMC_TLSV1) {
+	    meth = TLSv1_client_method();
d8 2
a9 2
-	  meth = SSLv23_client_method(); /* no flag bits, default SSLv23 */
+	    meth = SSLv3_client_method(); /* default */
d13 1
a13 1
@@@@ -1597,7 +1593,7 @@@@ int message_tell(struct transport *tp, const char *use
d17 2
a18 2
-	meth = SSLv2_client_method();
+	meth = SSLv3_client_method();
@


1.1
log
@let SpamAssassin work if sslv2 is disabled, from Brad
@
text
@d1 1
a1 1
$OpenBSD$
@

