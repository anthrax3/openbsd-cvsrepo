head	1.3;
access;
symbols
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	jasper_20090917:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2010.08.19.14.19.22;	author edd;	state dead;
branches;
next	1.2;

1.2
date	2010.05.13.18.29.47;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.17.21.12.04;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.09.17.21.12.04;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to minisat 2.2.0
OK jasper@@
@
text
@$OpenBSD: patch-Makefile,v 1.2 2010/05/13 18:29:47 jasper Exp $
--- Makefile.orig	Tue Jul  5 09:31:00 2005
+++ Makefile	Thu May 13 20:27:45 2010
@@@@ -15,11 +15,9 @@@@ RCOBJS    = $(addsuffix r,  $(COBJS))
 
 EXEC      = minisat
 
-CXX       = g++
-CFLAGS    = -Wall -ffloat-store
-COPTIMIZE = -O3
+CXX       ?= g++
+CFLAGS    += -Wall -ffloat-store
 
-
 .PHONY : s p d r build clean depend
 
 s:	WAY=standard
@@@@ -50,7 +48,7 @@@@ clean:
 ## Build rule
 %.o %.op %.od %.or:	%.C
 	@@echo Compiling: $<
-	@@$(CXX) $(CFLAGS) -c -o $@@ $<
+	$(CXX) $(CFLAGS) -c -o $@@ $<
 
 ## Linking rules (standard/profile/debug/release)
 $(EXEC): $(COBJS)
@


1.2
log
@- bump to a version that support proof logging
- don't hide compilation commands
@
text
@d1 1
a1 1
$OpenBSD: patch-Makefile,v 1.1.1.1 2009/09/17 21:12:04 jasper Exp $
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- Makefile.orig	Thu Sep 17 22:48:50 2009
+++ Makefile	Thu Sep 17 22:49:43 2009
@@@@ -15,10 +15,8 @@@@ RCOBJS    = $(addsuffix r,  $(COBJS))
a10 1
-
d14 1
d17 10
@


1.1.1.1
log
@import minisat 1.14

MiniSat is a minimalistic, open-source SAT solver, developed to help
researchers and developers alike to get started on SAT. 
Some key features of MiniSat:

* Easy to modify. MiniSat is small and well-documented, and possibly
  also well-designed, making it an ideal starting point for adapting SAT
  based techniques to domain specific problems.
* Highly efficient. Winning all the industrial categories of the SAT
  2005 competition, MiniSat is a good starting point both for future
  research in SAT, and for applications using SAT.
* Designed for integration. MiniSat supports incremental SAT and has
  mechanisms for adding non-clausal constraints. By virtue of being easy
  to modify, it is a good choice for integrating as a backend to another
  tool, such as a model checker or a more generic constraint solver.
@
text
@@
