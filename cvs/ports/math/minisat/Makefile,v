head	1.13;
access;
symbols
	OPENBSD_6_2:1.13.0.2
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.8.0.2
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.7.0.14
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.10
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.12
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.8
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.6
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	jasper_20090917:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2017.08.20.16.39.44;	author jca;	state Exp;
branches;
next	1.12;
commitid	PKnjB5CRiGu6LO0G;

1.12
date	2017.07.26.22.45.26;	author sthen;	state Exp;
branches;
next	1.11;
commitid	tD4MFrpYYDDL2UFT;

1.11
date	2017.07.23.09.26.28;	author espie;	state Exp;
branches;
next	1.10;
commitid	FZPR2Emws5uDqXzb;

1.10
date	2017.07.16.19.19.00;	author espie;	state Exp;
branches;
next	1.9;
commitid	tt0GhWK5c4uf9ILG;

1.9
date	2017.04.10.11.46.22;	author sthen;	state Exp;
branches;
next	1.8;
commitid	BLsh88fJB8thZTwY;

1.8
date	2017.02.27.19.48.41;	author jca;	state Exp;
branches;
next	1.7;
commitid	UvwNDtuifB7QYjxZ;

1.7
date	2013.03.11.11.23.55;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2011.11.02.19.18.35;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2010.08.19.14.19.22;	author edd;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.18.10.50.12;	author steven;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.13.18.29.47;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.18.09.31.33;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.17.21.12.04;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.09.17.21.12.04;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Update to latest git master.

Built with cmake, installs minisat libraries (needed for a devel/stp
update).  Discussed with jasper@@ at t2k17.
@
text
@# $OpenBSD: Makefile,v 1.12 2017/07/26 22:45:26 sthen Exp $

COMMENT=		minimalistic Boolean satisfiability solver

DISTNAME=		minisat-2.2.0.20170810
GH_ACCOUNT=		niklasso
GH_PROJECT=		minisat
GH_COMMIT=		37dc6c67e2af26379d88ce349eb9c4c6160e8543

SHARED_LIBS +=		minisat                   0.0 # 2.1

CATEGORIES=		math

HOMEPAGE=		http://minisat.se/

MAINTAINER=		Jasper Lievisse Adriaanse <jasper@@openbsd.org>

# MIT
PERMIT_PACKAGE_CDROM=	Yes

WANTLIB +=		c m ${COMPILER_LIBCXX} z

MODULES=		devel/cmake

NO_TEST=		Yes

.include <bsd.port.mk>
@


1.12
log
@bump LIBCXX/LIBECXX/COMPILER_LIBCXX ports.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2017/07/23 09:26:28 espie Exp $
d5 7
a11 2
DISTNAME=		minisat-2.2.0
REVISION =		2
d21 1
a21 4
MASTER_SITES=		${HOMEPAGE}downloads/
DISTFILES=		${DISTNAME}${EXTRACT_SUFX} \
			MiniSat.pdf
EXTRACT_ONLY=		${DISTNAME}${EXTRACT_SUFX}
d23 1
a23 1
WANTLIB +=		c m ${COMPILER_LIBCXX} z
a24 2
USE_GMAKE=		Yes
ALL_TARGET=		minisat
a25 13
MAKE_FLAGS=		CXX="${CXX}"
MAKE_ENV+=		MROOT=${WRKBUILD}
WRKDIST=		${WRKDIR}/minisat

do-build:
	cd ${WRKBUILD}/core && ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS}
	cd ${WRKBUILD}/simp && ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS}

do-install:
	${INSTALL_PROGRAM} ${WRKSRC}/core/minisat ${PREFIX}/bin/minisat
	${INSTALL_PROGRAM} ${WRKSRC}/simp/minisat ${PREFIX}/bin/minisats
	${INSTALL_DATA_DIR} ${PREFIX}/share/doc/minisat
	${INSTALL_DATA} ${DISTDIR}/MiniSat.pdf ${PREFIX}/share/doc/minisat
@


1.11
log
@add pthread to COMPILER_LIBCXX.
white lie, but it allows clang and gcc to be more similar
bump accordingly.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2017/07/16 19:19:00 espie Exp $
d6 1
a6 1
REVISION =		1
@


1.10
log
@use COMPILER_LIBCXX where applicable
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2017/04/10 11:46:22 sthen Exp $
d6 1
a6 1
REVISION=		0
@


1.9
log
@use LIBCXX
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2017/02/27 19:48:41 jca Exp $
d21 1
a21 1
WANTLIB +=		c m ${LIBCXX} z
@


1.8
log
@Respect CXX
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2013/03/11 11:23:55 espie Exp $
d21 1
a21 1
WANTLIB +=		c m stdc++ z
@


1.7
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2011/11/02 19:18:35 sthen Exp $
d26 1
@


1.6
log
@cope with upstream's rerolled distfile and ps.gz -> pdf
From Antti Harri, ok jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2010/08/19 14:19:22 edd Exp $
a14 3
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM= Yes
PERMIT_DISTFILES_FTP=	Yes
d25 1
a25 1
NO_REGRESS=		Yes
@


1.5
log
@update to minisat 2.2.0
OK jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2010/07/18 10:50:12 steven Exp $
d6 1
d19 1
a19 1
MASTER_SITES=		${HOMEPAGE}/downloads/
d21 2
a22 1
			MiniSat.ps.gz
d30 1
d40 1
a40 1
	${INSTALL_DATA} ${WRKDIR}/MiniSat.ps ${PREFIX}/share/doc/minisat
@


1.4
log
@REVISION
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2009/09/18 09:31:33 jasper Exp $
d5 1
a5 4
V=			1.14
DISTNAME=		MiniSat-p_v$V.2006-Sep-07.src
PKGNAME=		minisat-$V
REVISION=		1
a18 1
EXTRACT_SUFX=		.zip
d22 1
a22 3
WRKDIST=		${WRKDIR}/MiniSat-p_v$V/

WANTLIB += c m stdc++ z
a24 1

d27 5
d34 2
a35 1
	${INSTALL_PROGRAM} ${WRKSRC}/minisat ${PREFIX}/bin
@


1.3
log
@- bump to a version that support proof logging
- don't hide compilation commands
@
text
@d7 2
a8 1
PKGNAME=		minisat-$Vp1
@


1.2
log
@- resolve ambiguity about what SAT is (prodded by naddy@@)
- take maintainership
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2009/09/17 21:12:04 jasper Exp $
d6 2
a7 2
DISTNAME=		MiniSat_v$V.2006-Aug-29.src
PKGNAME=		minisat-$Vp0
d25 1
a25 1
WRKDIST=		${WRKDIR}/MiniSat_v$V/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d3 1
a3 1
COMMENT=		minimalistic SAT solver
d7 1
a7 1
PKGNAME=		minisat-$V
d11 2
@


1.1.1.1
log
@import minisat 1.14

MiniSat is a minimalistic, open-source SAT solver, developed to help
researchers and developers alike to get started on SAT. 
Some key features of MiniSat:

* Easy to modify. MiniSat is small and well-documented, and possibly
  also well-designed, making it an ideal starting point for adapting SAT
  based techniques to domain specific problems.
* Highly efficient. Winning all the industrial categories of the SAT
  2005 competition, MiniSat is a good starting point both for future
  research in SAT, and for applications using SAT.
* Designed for integration. MiniSat supports incremental SAT and has
  mechanisms for adding non-clausal constraints. By virtue of being easy
  to modify, it is a good choice for integrating as a backend to another
  tool, such as a model checker or a more generic constraint solver.
@
text
@@
