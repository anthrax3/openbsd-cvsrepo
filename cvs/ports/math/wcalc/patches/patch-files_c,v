head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.34
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.32
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.28
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.30
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.26
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.24
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.22
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.20
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.18
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.16
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.14
	OPENBSD_5_0:1.1.1.1.0.12
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.10
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.6
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.4
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	martynas_20090204:1.1.1.1
	martynas:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2009.02.03.22.46.14;	author martynas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.02.03.22.46.14;	author martynas;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@--- files.c.orig	27 Aug 2007 20:48:58 -0000	1.23
+++ files.c	31 Dec 2008 22:17:48 -0000	1.25
@@@@ -31,7 +31,7 @@@@ char *open_file = NULL;
 
 int saveState(char *filename)
 {				       /*{{{ */
-    int fd = open(filename, O_WRONLY | O_CREAT | O_TRUNC,
+    int fd = open(filename, O_WRONLY | O_CREAT | O_TRUNC | O_EXCL,
 		  S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
     int return_error = 0;
 
@@@@ -208,12 +208,17 @@@@ int storeVar(const char *variable)
 {				       /*{{{ */
     int fd, retval = 0, return_error = 0;
     char filename[PATH_MAX];
+    const char *preloadfile = "/.wcalc_preload";
 
     if (!varexists(variable)) {
 	report_error("Variable is not defined.");
 	return -1;
     }
-    snprintf(filename, PATH_MAX, "%s/.wcalc_preload", getenv("HOME"));
+    if (strlen(getenv("HOME")) > PATH_MAX - strlen(preloadfile) - 1) {
+	report_error("HOME environment variable is too long.");
+	return -1;
+    }
+    snprintf(filename, PATH_MAX, "%s%s", getenv("HOME"), preloadfile);
     fd = open(filename, O_WRONLY | O_CREAT | O_APPEND,
 	      S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
     if (fd >= 0) {
@


1.1.1.1
log
@import wcalc-2.4

wcalc is a powerful arbitrary-precision calculator. It has standard
functions (sin, asinh, logtwo, floor, etc), many pre-defined constants
(pi, e, c, etc.), variables, "active" variables, command history, and
hex/octal/binary i/o, conversions, and more.

from maintainer Amarendra Godbole
tested on amd64, and looks ok to steven@@
@
text
@@
