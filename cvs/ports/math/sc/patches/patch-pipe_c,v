head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_3_9:1.1.0.16
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.14
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.12
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.10
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.8
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.4
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.05.12.20.27.25;	author naddy;	state Exp;
branches;
next	1.2;
commitid	dBjcCZOdflXmwjxl;

1.2
date	2006.05.28.21.21.51;	author weingart;	state dead;
branches;
next	1.1;

1.1
date	2002.08.06.00.45.17;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix missing return values, missing prototypes, missing includes; for clang.
Also fix numerous harmless warnings since they drown out the important ones.
Fix code bugs revealed in the process.
@
text
@$OpenBSD$

Index: pipe.c
--- pipe.c.orig
+++ pipe.c
@@@@ -36,12 +36,13 @@@@ getnum(int r0, int c0, int rn, int cn, int fd)
 	for (c = c0, pp = ATBL(tbl, r, c); c <= cn; pp++, c++) {
 	    *line = '\0';
 	    p = *pp;
-	    if (p)
+	    if (p) {
 		if (p->cellerror)
 		    sprintf(line, "%s", (*pp)->cellerror == CELLERROR ?
 			    "ERROR" : "INVALID");
 		else if (p->flags & is_valid)
 		    sprintf(line, "%.15g", p->v);
+	    }
 	    if (c < cn)
 		strcat(line, "\t");
 	    else
@


1.2
log
@Update to sc-7.16
ok pval@@
@
text
@d1 20
a20 21
$OpenBSD: patch-pipe_c,v 1.1 2002/08/06 00:45:17 pvalchev Exp $
--- pipe.c.orig	Mon Nov  5 17:40:19 2001
+++ pipe.c	Mon Aug  5 18:29:30 2002
@@@@ -8,6 +8,7 @@@@
  */
 
 #include <curses.h>
+#include <string.h>
 #include <unistd.h>
 #include "sc.h"
 
@@@@ -19,9 +20,6 @@@@
 #endif
 #else
 #include <time.h>
-#ifndef SYSIII
-#include <string.h>
-#endif
 #endif
 
 
@


1.1
log
@Update to a newer sc-7.15 found on sunsite (as opposed to gatekeeper.dec.com)
@
text
@d1 1
a1 1
$OpenBSD$
@

