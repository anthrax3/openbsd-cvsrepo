head	1.3;
access;
symbols
	OPENBSD_3_9:1.2.0.16
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.14
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.12
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.10
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	pvalchev_20010204:1.1.1.1
	reinhard:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2006.05.28.21.21.51;	author weingart;	state dead;
branches;
next	1.2;

1.2
date	2002.08.06.00.45.17;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.04.18.44.01;	author reinhard;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.02.04.18.44.01;	author reinhard;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to sc-7.16
ok pval@@
@
text
@$OpenBSD: patch-interp_c,v 1.2 2002/08/06 00:45:17 pvalchev Exp $
--- interp.c.orig	Wed Nov  7 01:35:40 2001
+++ interp.c	Mon Aug  5 17:45:50 2002
@@@@ -485,15 +485,13 @@@@ dotts(int hr, int min, int sec)
 double
 dotime(int which, double when)
 {
-	long time();
-
 	static long t_cache;
 	static struct tm tm_cache;
 	struct tm *tp;
-	long tloc;
+	time_t tloc;
 
 	if (which == NOW) 
-	    return (double)time((long *)0);
+	    return (double)time(NULL);
 
 	tloc = (long)when;
 
@@@@ -944,7 +942,7 @@@@ docat(register char *s1, register char *
 }
 
 char *
-dodate(long tloc)
+dodate(time_t tloc)
 {
     char *tp;
     char *p;
@@@@ -1199,7 +1197,7 @@@@ seval(register struct enode *se)
 	case IF:
 	case '?':    return (eval(se->e.o.left) ? seval(se->e.o.right->e.o.left)
 					     : seval(se->e.o.right->e.o.right));
-	case DATE:   return (dodate((long)(eval(se->e.o.right))));
+	case DATE:   return (dodate((time_t)(eval(se->e.o.right))));
 	case FMT:    return (dofmt(seval(se->e.o.left), eval(se->e.o.right)));
 	case UPPER:  return (docase(UPPER, seval(se->e.o.right)));
 	case LOWER:  return (docase(LOWER, seval(se->e.o.right)));
@


1.2
log
@Update to a newer sc-7.15 found on sunsite (as opposed to gatekeeper.dec.com)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d1 6
a6 24
$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
--- interp.c.orig	Mon May 11 18:43:36 1992
+++ interp.c	Mon Jan 22 11:11:01 2001
@@@@ -476,7 +476,7 @@@@ double
 dodts(mo, day, yr)
 int mo, day, yr;
 {
-    long trial;
+    time_t trial;
     register struct tm *tp; 
     register int i;
     register long jdate;
@@@@ -484,7 +484,7 @@@@ int mo, day, yr;
     mdays[1] = 28 + (yr%4 == 0);
 
     if (mo < 1 || mo > 12 || day < 1 || day > mdays[--mo] ||
-		yr > 1999 || yr < 1970) {
+		yr > 2099 || yr < 1970) {
 	error("@@dts: invalid argument");
 	cellerror = CELLERROR;
 	return(0.0);
@@@@ -551,15 +551,13 @@@@ dotime(which, when)
 int which;
 double when;
d22 18
@


1.1.1.1
log
@Sc is a spreadsheet calculator based on rectangular tables
like a financial spreadsheet. When invoked it presents you
with a table organized as rows and columns of cells. If
invoked without a file argument, by default the initial
table is empty.
 
Each cell can be associated with a numeric value, a label
string and/or an expression which evaluates to a numeric
value or label string, often based on other cell values
(formula).

MAINTAINER=     Peter Valchev <pvalchev@@toxiclinux.org>
@
text
@@
