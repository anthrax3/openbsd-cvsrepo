head	1.5;
access;
symbols
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.1.1.1.0.4
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	sturm_2003-Jul-08:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2005.07.26.18.50.43;	author naddy;	state dead;
branches;
next	1.4;

1.4
date	2004.12.18.16.31.53;	author naddy;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.30.23.30.05;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.07.23.35.51;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.08.10.55.20;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.07.08.10.55.20;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to 05-118.
Major changes includes speed improvements when reading large matrices
from file and the addition of the clmorder tool.

From: maintainer Andreas Kahari <andreas.kahari@@gmail.com>
@
text
@$OpenBSD: patch-configure,v 1.4 2004/12/18 16:31:53 naddy Exp $
--- configure.orig	Tue Dec 14 21:15:04 2004
+++ configure	Tue Dec 14 21:15:44 2004
@@@@ -3230,13 +3230,13 @@@@ fi
 
 # FIXME: Replace `main' with a function in `-lpthread':
 
-echo "$as_me:$LINENO: checking for main in -lpthread" >&5
-echo $ECHO_N "checking for main in -lpthread... $ECHO_C" >&6
+echo "$as_me:$LINENO: checking for main in -pthread" >&5
+echo $ECHO_N "checking for main in -pthread... $ECHO_C" >&6
 if test "${ac_cv_lib_pthread_main+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-lpthread  $LIBS"
+LIBS="-pthread  $LIBS"
 cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
 _ACEOF
@@@@ -3293,7 +3293,7 @@@@ if test $ac_cv_lib_pthread_main = yes; t
 #define HAVE_LIBPTHREAD 1
 _ACEOF
 
-  LIBS="-lpthread $LIBS"
+  LIBS="-pthread $LIBS"
 
 fi
 
@


1.4
log
@update to 04-314; from  Andreas Kahari <andreas.kahari@@gmail.com>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@update to 04-174; from Andreas Kahari <ak+openbsd@@freeshell.org>
@
text
@d2 3
a4 3
--- configure.orig	Tue Jun 29 14:50:33 2004
+++ configure	Tue Jun 29 14:51:15 2004
@@@@ -3229,13 +3229,13 @@@@ fi
d21 1
a21 1
@@@@ -3292,7 +3292,7 @@@@ if test $ac_cv_lib_pthread_main = yes; t
@


1.2
log
@Update to mcl-04-105
from maintainer Andreas Kahari <andreas.kahari@@unix.net>
@
text
@d2 3
a4 3
--- configure.orig	2004-05-07 23:24:32.000000000 +0100
+++ configure	2004-05-07 23:26:05.000000000 +0100
@@@@ -2956,13 +2956,13 @@@@ fi
d19 3
a21 3
 #line $LINENO "configure"
 #include "confdefs.h"
@@@@ -3004,7 +3004,7 @@@@ if test $ac_cv_lib_pthread_main = yes; t
@


1.1
log
@Initial revision
@
text
@d2 2
a3 2
--- configure.orig	Tue Jul  8 12:22:58 2003
+++ configure	Tue Jul  8 12:41:36 2003
@


1.1.1.1
log
@Initial import of mcl 03-185

The MCL algorithm is short for the Markov Cluster Algorithm,
a fast and scalable cluster algorithm for graphs based on
simulation of (stochastic) flow in graphs.  The algorithm was
developed by Stijn van Dongen at the Centre for Mathematics and
Computer Science (also known as CWI) in the Netherlands.

The MCL algorithm is very fast, very scalable, and has a number
of attractive properties causing it to deliver high-quality
clusterings.

WWW: http://micans.org/mcl/

from Andreas Kahari <andreas.kahari@@unix.net>
@
text
@@
