head	1.2;
access;
symbols
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	ian_2001_03_21:1.1.1.1
	ian:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2002.02.06.13.44.37;	author ian;	state dead;
branches;
next	1.1;

1.1
date	2001.03.22.03.26.32;	author ian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.22.03.26.32;	author ian;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update R to 1.4.1, removing patches that are now incorporated into R
and a few which are not really needed due to autoconfig.
@
text
@$OpenBSD: patch-main-arithmetic.c,v 1.1 2001/03/22 03:26:32 ian Exp $

OpenBSD seems to be the only common platform that still hides the
"struct exception" definition in math.h unless you define __LIBM_PRIVATE.
But since this is a math interpreter and wants to be pretty chummy with
the mathlib, perhaps it is not such a bad thing for them to want to
diddle the struct exception object.

I changed the comment to remind that Arith.h includes math.h, since math.h
is *also* included in the expected Rmath.h, but the second inclusion (as
per most system header files) is a no-op.

													-- Ian

--- src/main/arithmetic.c.orig	Tue Mar  6 17:58:18 2001
+++ src/main/arithmetic.c	Tue Mar  6 18:27:38 2001
@@@@ -22,7 +22,9 @@@@
 #include <config.h>
 #endif
 
-#include "Defn.h"		/*-> Arith.h */
+#define __LIBM_PRIVATE	/* OpenBSD */
+#include "Defn.h"		/*-> Arith.h -> math.h */
+#undef __LIBM_PRIVATE	
 #define MATHLIB_PRIVATE
 #include <Rmath.h>
 #undef MATHLIB_PRIVATE
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Initial import of "R" math/stats/graphics package
@
text
@@
