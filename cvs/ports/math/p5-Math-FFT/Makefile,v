head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.6
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.4
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.2
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.2
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.13.0.2
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.10.0.8
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.6
	OPENBSD_5_0:1.10.0.4
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.6.0.6
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.4
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.4.0.4
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.2
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	avsn_2003-02-21:1.1.1.1
	avsm:1.1.1;
locks; strict;
comment	@# @;


1.16
date	2016.03.20.19.56.48;	author naddy;	state Exp;
branches;
next	1.15;
commitid	WXJcpbKc0PauxEav;

1.15
date	2015.07.16.23.57.25;	author ajacoutot;	state Exp;
branches;
next	1.14;
commitid	tdKVYJOlplb8bzTQ;

1.14
date	2014.06.14.23.25.41;	author sthen;	state Exp;
branches;
next	1.13;
commitid	UBTy9itwhq7oWWz0;

1.13
date	2013.10.11.23.50.06;	author naddy;	state Exp;
branches;
next	1.12;

1.12
date	2013.03.11.11.23.55;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2012.08.23.15.50.05;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2010.12.03.11.45.39;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2010.10.18.20.52.06;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2010.09.24.15.32.33;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2010.07.13.20.14.21;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.02.20.38.08;	author simon;	state Exp;
branches;
next	1.5;

1.5
date	2007.09.15.18.44.37;	author steven;	state Exp;
branches;
next	1.4;

1.4
date	2006.12.24.19.50.51;	author dassow;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.04.07.28.24;	author steven;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.17.15.58.08;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.21.13.44.19;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.02.21.13.44.19;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Remove SHARED_ONLY from all CPAN Perl ports and the cpan and perl MODULES.
Add WANTLIB+=perl and PKG_ARCH=* as appropriate.
@
text
@# $OpenBSD: Makefile,v 1.15 2015/07/16 23:57:25 ajacoutot Exp $

COMMENT=	calculate Fast Fourier Transforms in perl

MODULES=	cpan
DISTNAME=	Math-FFT-1.28
REVISION=	5
CATEGORIES=	math

MAINTAINER=	Anil Madhavapeddy <avsm@@openbsd.org>

# Perl
PERMIT_PACKAGE_CDROM=	Yes

WANTLIB += c perl

.include <bsd.port.mk>
@


1.15
log
@Remove the perl bullshit.
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.14 2014/06/14 23:25:41 sthen Exp $

SHARED_ONLY=	Yes
d15 1
a15 1
WANTLIB += c
@


1.14
log
@@@comment zero-byte perl .bs files
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2013/10/11 23:50:06 naddy Exp $
d9 1
a9 1
REVISION=	4
@


1.13
log
@Drop USE_GROFF since groff and mandoc produce identical output.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2013/03/11 11:23:55 espie Exp $
d9 1
a9 1
REVISION=	3
@


1.12
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2012/08/23 15:50:05 sthen Exp $
a10 1
USE_GROFF =	Yes
@


1.11
log
@sync wantlib
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2010/12/03 11:45:39 ajacoutot Exp $
a16 3
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes
@


1.10
log
@Bump after recent cpan.port.mk change.
ok jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2010/10/18 20:52:06 espie Exp $
d9 1
a9 1
REVISION=	2
d20 2
@


1.9
log
@USE_GROFF=Yes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2010/09/24 15:32:33 sthen Exp $
d9 1
a9 1
REVISION=	1
@


1.8
log
@bump
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2010/07/13 20:14:21 sthen Exp $
d11 1
@


1.7
log
@use REVISION
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2008/10/02 20:38:08 simon Exp $
d9 1
a9 1
REVISION=	0
@


1.6
log
@bump SHARED_ONLY ports so they get updated and work with the new perl

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2007/09/15 18:44:37 steven Exp $
d9 1
a9 1
PKGNAME=	p5-${DISTNAME}p0
@


1.5
log
@remove quotes from COMMENT/PERMIT*/BROKEN
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2006/12/24 19:50:51 dassow Exp $
d9 1
@


1.4
log
@cpanify math ports, switch to SHARED_ONLY,
set licenses and bump as required.

'go ahead' steven@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2006/01/04 07:28:24 steven Exp $
d5 1
a5 1
COMMENT=	"calculate Fast Fourier Transforms in perl"
@


1.3
log
@update to 1.28

based on diff from Jasper Lievisse Adriaanse <jasper at nedbsd.nl>
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2004/01/17 15:58:08 naddy Exp $
d7 1
d9 1
a9 2
PKGNAME=	p5-${DISTNAME}
CATEGORIES=	math perl5
d13 1
a17 4

MASTER_SITES=   ${MASTER_SITE_PERL_CPAN:=Math/}

CONFIGURE_STYLE= perl
@


1.2
log
@Don't attempt to build perl ports that load dynamic modules
on architectures that support static linking only.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2003/02/21 13:44:19 avsm Exp $
d3 1
a3 1
NOT_FOR_ARCHS=	${NO_SHARED_ARCHS}
d7 1
a7 1
DISTNAME=	Math-FFT-0.25
@


1.1
log
@Initial revision
@
text
@d1 3
a3 1
# $OpenBSD$
@


1.1.1.1
log
@initial import of p5-Math-FFT-0.25

--
This module implements some algorithms for calculating Fast Fourier
Transforms for one-dimensional data sets of size 2^n. The data,
assumed to arise from a constant sampling rate, is represented by
an array reference, which is then used to create a Math::FFT object.

Available methods include complex and real discrete fourier transforms,
convolution, power spectra and windowing functions, as well as some
statistical utilities.

@
text
@@
