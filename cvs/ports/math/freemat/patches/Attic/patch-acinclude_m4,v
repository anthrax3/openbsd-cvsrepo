head	1.4;
access;
symbols
	OPENBSD_4_7:1.3.0.8
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2010.07.26.09.31.48;	author jakemsr;	state dead;
branches;
next	1.3;

1.3
date	2008.06.11.21.09.06;	author martynas;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.20.19.11.51;	author martynas;	state dead;
branches;
next	1.1;

1.1
date	2007.03.24.14.14.50;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.4
log
@this was linking with libossaudio for portaudio, however portaudio hasn't
used libossaudio for a while.  quit linking with libossaudio.
@
text
@$OpenBSD: patch-acinclude_m4,v 1.3 2008/06/11 21:09:06 martynas Exp $
--- acinclude.m4.orig	Fri Mar 14 17:43:34 2008
+++ acinclude.m4	Thu Mar 20 14:05:42 2008
@@@@ -304,13 +304,18 @@@@ extern_flags=""
 need_extern="no"
 LIBS="$LIBS $FLIBS"
 
+save_LIBS="$LIBS"
+LIBS="-lossaudio -lm -pthread $LIBS"
+
 AC_CHECK_LIB(portaudio,Pa_GetDefaultInputDevice,found_portaudio19="yes",found_portaudio19="no")
 AC_CHECK_HEADER(portaudio.h,[],found_portaudio19="no")
 
 if test x"$found_portaudio19" == xyes; then
   LIBS="-lportaudio $LIBS"
-  CFLAGS="$CFLAGS"
+  CFLAGS="-pthread $CFLAGS"
   AC_DEFINE(HAVE_PORTAUDIO19, 1, [Set to 1 if you have libportaudio (v19 API)])
+else
+  LIBS="$save_LIBS"
 fi
 
 if test x"$found_portaudio19" != xyes; then
@


1.3
log
@- freemat-3.6 is now possible
- make use of portaudio
- remove what i got in upstream
steven@@ and Wiktor Izdebski say regression tests pass on amd64, i386
ok steven@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to 3.1, which includes our all patches (and introduces some new
ones);

3.1 is a bugfix release, but also includes new threading api, perl-style
regular expressions, and the regression test suite (use run_tests).

ok steven@@
@
text
@d1 6
a6 6
$OpenBSD: patch-acinclude_m4,v 1.1 2007/03/24 14:14:50 martynas Exp $
--- acinclude.m4.orig	Thu Dec 28 16:03:20 2006
+++ acinclude.m4	Sat Mar  3 14:26:35 2007
@@@@ -302,6 +302,22 @@@@ if test x"$found_amd" == xyes; then
   LIBS="-lamd $LIBS"
 fi
d8 2
a9 15
+# umfpack depends on blas.
+if test x"$is_osx" == xyes; then
+   LIBS="$LIBS -framework vecLib"
+   found_blas="yes"
+   found_lapack="yes"
+else
+   ACX_BLAS(found_blas="yes",found_blas="no")
+   if test x"$found_blas" == xyes; then
+        LIBS="$BLAS_LIBS $LIBS"
+   fi
+   ACX_LAPACK(found_lapack="yes",found_lapack="no")
+   if test x"$found_lapack" == xyes; then
+      LIBS="$LAPACK_LIBS $LIBS"
+   fi
+fi
d11 2
a12 2
 AC_CHECK_LIB(umfpack,umfpack_zl_solve,found_umfpack="yes",found_umfpack="no")
 AC_CHECK_HEADER(umfpack.h,[],found_umfpack="no")
d14 7
a20 2
@@@@ -328,20 +344,6 @@@@ if test x"$found_fftw3" == xyes; then
   	AC_DEFINE(HAVE_FFTW, 1, [Set to 1 if you have the double precision version of FFTW installed])
d23 1
a23 17
-if test x"$is_osx" == xyes; then
-   LIBS="$LIBS -framework vecLib"
-   found_blas="yes"
-   found_lapack="yes"
-else
-   ACX_BLAS(found_blas="yes",found_blas="no")
-   if test x"$found_blas" == xyes; then
-	LIBS="$BLAS_LIBS $LIBS"
-   fi
-   ACX_LAPACK(found_lapack="yes",found_lapack="no")
-   if test x"$found_lapack" == xyes; then
-      LIBS="$LAPACK_LIBS $LIBS"
-   fi
-fi
 AC_F77_FUNC(znaupd)
 if test x"$znaupd" == x"unknown"; then
   znaupd="znaupd_"
@


1.1
log
@update to freemat 3.0
you need at least 9 days old current system for it (correct
_POSIX_THREAD_ATTR_STACKSIZE define for qt4).
all the patches already got committed upstream.
"please commit!" steven@@
@
text
@d1 1
a1 1
$OpenBSD$
@

