head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.4.0.6
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.8
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.22
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.20
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.18
	OPENBSD_5_0:1.1.1.1.0.16
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.12
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.10
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.8
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	jasper_20071217:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2017.03.08.17.41.04;	author sthen;	state Exp;
branches;
next	1.5;
commitid	MrkVfGY5ALRsFsoO;

1.5
date	2017.03.08.17.17.14;	author sthen;	state Exp;
branches;
next	1.4;
commitid	1kt3kImsjsgH6XGu;

1.4
date	2015.03.16.18.07.49;	author naddy;	state Exp;
branches;
next	1.3;
commitid	IJdm3Zowcdkcxp5X;

1.3
date	2013.03.21.08.46.32;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.11.11.23.54;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2007.12.17.20.42.00;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.12.17.20.42.00;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.6
log
@add tests
@
text
@# $OpenBSD: Makefile,v 1.5 2017/03/08 17:17:14 sthen Exp $

COMMENT=	Fast Artificial Neural Network Library

GH_ACCOUNT=	libfann
GH_PROJECT=	fann
GH_TAGNAME=	2.2.0

SHARED_LIBS +=  floatfann            1.0      # .2.1
SHARED_LIBS +=  doublefann           1.0      # .2.1
SHARED_LIBS +=  fixedfann            1.0      # .2.1
SHARED_LIBS +=  fann                 1.0      # .2.1

CATEGORIES=	math devel

HOMEPAGE=	http://leenissen.dk/fann/

# LGPLv2.1+
PERMIT_PACKAGE_CDROM=	Yes

MODULES=	devel/cmake

USE_GMAKE=	Yes
TEST_DEPENDS=	math/fann

do-test:
	cd ${WRKSRC}/examples; ${MAKE_PROGRAM} runtest GCC="${CC}" \
	    CFLAGS="${CFLAGS} -I${TRUEPREFIX}/include -L${TRUEPREFIX}/lib"

.include <bsd.port.mk>
@


1.5
log
@update to fann-2.2.0, move to github, update license marker
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2015/03/16 18:07:49 naddy Exp $
d22 7
@


1.4
log
@fold lib-only PFRAG.shared into PLIST, regen PLIST, and bump
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/03/21 08:46:32 ajacoutot Exp $
d3 1
a3 1
COMMENT=		Fast Artificial Neural Network Library
d5 3
a7 7
DISTNAME=		fann-2.1.0beta
SHARED_LIBS +=  floatfann            0.0      # .2.1
SHARED_LIBS +=  doublefann           0.0      # .2.1
SHARED_LIBS +=  fixedfann            0.0      # .2.1
SHARED_LIBS +=  fann                 0.0      # .2.1
CATEGORIES=		math devel
REVISION=		0
d9 4
a12 1
HOMEPAGE=		http://leenissen.dk/fann/
d14 1
a14 2
# LGPL
PERMIT_PACKAGE_CDROM=	Yes
d16 1
a16 2
MASTER_SITES=		${MASTER_SITE_SOURCEFORGE:=fann/}
EXTRACT_SUFX=		.zip
d18 2
a19 3
WRKDIST=		${WRKDIR}/fann-2.1.0

CONFIGURE_STYLE=	gnu
d21 1
a21 3
post-install:
	${INSTALL_DATA_DIR} ${PREFIX}/share/doc/fann
	${INSTALL_DATA} ${WRKSRC}/doc/*.txt ${PREFIX}/share/doc/fann
@


1.3
log
@USE_LIBTOOL=Yes is the default now.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/03/11 11:23:54 espie Exp $
d11 1
@


1.2
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2007/12/17 20:42:00 jasper Exp $
a21 1
USE_LIBTOOL=		Yes
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
a15 3
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes
@


1.1.1.1
log
@import fann 2.1.0beta 

Fast Artificial Neural Network Library is a free open source neural
network library, which implements multilayer artificial neural networks
in C with support for both fully connected and sparsely connected
networks. Cross-platform execution in both fixed and floating point are
supported. It includes a framework for easy handling of training data
sets. It is easy to use, versatile, well documented, and fast.
@
text
@@
