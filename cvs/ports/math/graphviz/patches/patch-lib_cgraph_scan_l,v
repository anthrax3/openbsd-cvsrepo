head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_4:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2015.08.21.16.06.06;	author jasper;	state Exp;
branches
	1.2.2.1;
next	1.1;
commitid	M10PxFRmDgzAo0ic;

1.1
date	2014.02.17.15.37.10;	author jasper;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2014.02.17.15.37.10;	author jasper;	state Exp;
branches;
next	;

1.2.2.1
date	2015.08.21.16.07.12;	author jasper;	state Exp;
branches;
next	;
commitid	FUVHrY5BzMTw6Gzn;


desc
@@


1.2
log
@Security fix for CVE-2014-9157, graphviz: format string vulnerability in yyerror()

ok edd@@ (MAINTAINER)
@
text
@$OpenBSD$

Security fix for CVE-2014-9157, graphviz: format string vulnerability in yyerror()
https://github.com/ellson/graphviz/commit/99eda421f7ddc27b14e4ac1d2126e5fe41719081.patch

--- lib/cgraph/scan.l.orig2	Fri Aug 21 10:25:19 2015
+++ lib/cgraph/scan.l	Fri Aug 21 10:25:42 2015
@@@@ -223,7 +223,7 @@@@ void yyerror(char *str)
 	agxbput (&xb, buf);
 	agxbput (&xb, yytext);
 	agxbput (&xb,"'\n");
-	agerr(AGWARN,agxbuse(&xb));
+	agerr(AGWARN, "%s", agxbuse(&xb));
 	agxbfree(&xb);
 }
 /* must be here to see flex's macro defns */
@


1.2.2.1
log
@Security fix for CVE-2014-9157, graphviz: format string vulnerability in yyerror()

ok edd@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_cgraph_scan_l,v 1.2 2015/08/21 16:06:06 jasper Exp $
@


1.1
log
@file patch-lib_cgraph_scan_l was initially added on branch OPENBSD_5_4.
@
text
@d1 16
@


1.1.2.1
log
@Security fix for CVE-2014-0978, CVE-2014-1236

ok edd@@ (MAINTAINER)
@
text
@a0 86
$OpenBSD$

Security fix for CVE-2014-0978, CVE-2014-1236,
https://github.com/ellson/graphviz/commit/7aaddf52cd98589fb0c3ab72a393f8411838438a
https://github.com/ellson/graphviz/commit/1d1bdec6318746f6f19f245db589eddc887ae8ff

--- lib/cgraph/scan.l.orig2	Tue Jan 25 17:30:47 2011
+++ lib/cgraph/scan.l	Fri Feb  7 16:39:39 2014
@@@@ -16,6 +16,7 @@@@
 %{
 #include <grammar.h>
 #include <cghdr.h>
+#include <agxbuf.h>
 #include <ctype.h>
 #define GRAPH_EOF_TOKEN		'@@'		/* lex class must be defined below */
 	/* this is a workaround for linux flex */
@@@@ -127,15 +128,32 @@@@ static void ppDirective (void)
  * and report this to the user.
  */
 static int chkNum(void) {
-  unsigned char	c = (unsigned char)yytext[yyleng-1];   /* last character */
-  if (!isdigit(c) && (c != '.')) {  /* c is letter */
-	char	buf[BUFSIZ];
-	sprintf(buf,"syntax error - badly formed number '%s' in line %d of %s\n",yytext,line_num, InputFile);
-    strcat (buf, "splits into two name tokens\n");
-	agerr(AGWARN,buf);
-    return 1;
-  }
-  else return 0;
+    unsigned char c = (unsigned char)yytext[yyleng-1];   /* last character */
+    if (!isdigit(c) && (c != '.')) {  /* c is letter */
+	unsigned char xbuf[BUFSIZ];
+	char buf[BUFSIZ];
+	agxbuf  xb;
+	char* fname;
+
+	if (InputFile)
+	    fname = InputFile;
+	else
+	    fname = "input";
+
+	agxbinit(&xb, BUFSIZ, xbuf);
+
+	agxbput(&xb,"syntax ambiguity - badly delimited number '");
+	agxbput(&xb,yytext);
+	sprintf(buf,"' in line %d of ", line_num);
+	agxbput(&xb,buf);
+	agxbput(&xb,fname);
+	agxbput(&xb, " splits into two tokens\n");
+	agerr(AGWARN,agxbuse(&xb));
+
+	agxbfree(&xb);
+	return 1;
+    }
+    else return 0;
 }
 
 /* The LETTER class below consists of ascii letters, underscore, all non-ascii
@@@@ -191,13 +209,21 @@@@ ID		({NAME}|{NUMBER})
 %%
 void yyerror(char *str)
 {
+	unsigned char	xbuf[BUFSIZ];
 	char	buf[BUFSIZ];
-	if (InputFile)
-		sprintf(buf,"%s:%d: %s in line %d near '%s'\n",InputFile, line_num,
-			str,line_num,yytext);
-	else
-		sprintf(buf," %s in line %d near '%s'\n", str,line_num,yytext);
-	agerr(AGWARN,buf);
+	agxbuf  xb;
+
+	agxbinit(&xb, BUFSIZ, xbuf);
+	if (InputFile) {
+		agxbput (&xb, InputFile);
+		agxbput (&xb, ": ");
+	}
+	sprintf(buf," %s in line %d near '", str,line_num);
+	agxbput (&xb, buf);
+	agxbput (&xb, yytext);
+	agxbput (&xb,"'\n");
+	agerr(AGWARN,agxbuse(&xb));
+	agxbfree(&xb);
 }
 /* must be here to see flex's macro defns */
 void aglexeof() { unput(GRAPH_EOF_TOKEN); }
@

