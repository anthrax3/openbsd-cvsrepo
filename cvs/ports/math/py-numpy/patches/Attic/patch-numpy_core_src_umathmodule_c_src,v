head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2008.12.11.15.51.50;	author martynas;	state dead;
branches;
next	1.1;

1.1
date	2008.07.30.17.49.32;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@libc has extended-precision math versions now.    tested by and ok naddy@@
@
text
@$OpenBSD: patch-numpy_core_src_umathmodule_c_src,v 1.1 2008/07/30 17:49:32 martynas Exp $
--- numpy/core/src/umathmodule.c.src.orig	Thu Nov  8 00:05:16 2007
+++ numpy/core/src/umathmodule.c.src	Wed Jul 30 17:44:41 2008
@@@@ -375,7 +375,7 @@@@ rint (double x)
 
 #else /* !defined(isnan) */
 
-#define isnanl(x) isnan((x))
+#define isnanl(x) isnan((double)(x))
 #define isnanf(x) isnan((x))
 
 #endif /* !defined(isnan) */
@@@@ -393,7 +393,7 @@@@ rint (double x)
 
 #else /* !defined(isinf) */
 
-#define isinfl(x) isinf((x))
+#define isinfl(x) isinf((double)(x))
 #define isinff(x) isinf((x))
 
 #endif /* !defined(isinf) */
@@@@ -403,7 +403,7 @@@@ rint (double x)
 #define signbitl(x) ((longdouble) signbit((double)(x)))
 #define signbitf(x) ((float) signbit((double) (x)))
 #else
-#define signbitl(x) signbit((x))
+#define signbitl(x) signbit((double)(x))
 #define signbitf(x) signbit((x))
 #endif
 
@


1.1
log
@don't try to use extended-precision of signbit, isnan, isinf
ok wcmaier@@, naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
@

