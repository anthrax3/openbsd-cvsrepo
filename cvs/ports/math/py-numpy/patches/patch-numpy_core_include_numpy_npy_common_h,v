head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.6
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2016.03.18.13.26.10;	author daniel;	state Exp;
branches;
next	1.4;
commitid	mQy7MjGvaQNb3QVj;

1.4
date	2015.01.15.02.55.22;	author daniel;	state Exp;
branches;
next	1.3;
commitid	bX4FbEZ6K0yT2Cyw;

1.3
date	2014.09.17.00.46.13;	author daniel;	state Exp;
branches;
next	1.2;
commitid	kT3MiIXLj0nmPxck;

1.2
date	2011.05.27.10.06.12;	author eric;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.28.15.15.37;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to numpy 1.9.2. Tested by me on i386 and by Anton Kasimov on amd64.

ok sthen@@
@
text
@$OpenBSD: patch-numpy_core_include_numpy_npy_common_h,v 1.4 2015/01/15 02:55:22 daniel Exp $

(1) optimize function attributes were added in gcc 4.4. Apply a fix for the warnings. But
the next release of numpy should fix this in a better way. See:
https://github.com/numpy/numpy/issues/5451

Gets rid of these warnings from the build:
numpy/core/src/multiarray/lowlevel_strided_loops.c.src:120: warning: 'optimize' attribute directive ignored

(2) py-numpy only checks for expl to determine whether extended-precision
support is present.  since we don't have it yet;  it implements
it's own.  however, on alpha, powerpc, it declared functions with
types that conflict with C99 (double for *l), therefore failed.

--- numpy/core/include/numpy/npy_common.h.orig	Sun Nov 16 17:31:16 2014
+++ numpy/core/include/numpy/npy_common.h	Sun Mar  6 15:22:08 2016
@@@@ -7,6 +7,7 @@@@
 #include <npy_config.h>
 #endif
 
+#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 4)))
 /*
  * gcc does not unroll even with -O3
  * use with care, unrolling on modern cpus rarely speeds things up
@@@@ -17,13 +18,20 @@@@
 #else
 #define NPY_GCC_UNROLL_LOOPS
 #endif
+#else
+#define NPY_GCC_UNROLL_LOOPS
+#endif
 
+#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 4)))
 /* highest gcc optimization level, enabled autovectorizer */
 #ifdef HAVE_ATTRIBUTE_OPTIMIZE_OPT_3
 #define NPY_GCC_OPT_3 __attribute__((optimize("O3")))
 #else
 #define NPY_GCC_OPT_3
 #endif
+#else
+#define NPY_GCC_OPT_3
+#endif
 
 /*
  * mark an argument (starting from 1) that must not be NULL and is not checked
@@@@ -288,14 +296,8 @@@@ typedef unsigned char npy_bool;
 #define NPY_FALSE 0
 #define NPY_TRUE 1
 
-
-#if NPY_SIZEOF_LONGDOUBLE == NPY_SIZEOF_DOUBLE
-        typedef double npy_longdouble;
-        #define NPY_LONGDOUBLE_FMT "g"
-#else
-        typedef long double npy_longdouble;
-        #define NPY_LONGDOUBLE_FMT "Lg"
-#endif
+typedef long double npy_longdouble;
+#define NPY_LONGDOUBLE_FMT "Lg"
 
 #ifndef Py_USING_UNICODE
 #error Must use Python with unicode enabled.
@


1.4
log
@Some minor numpy fixes:
- add pthread to WANTLIB
- backport fix for datetime64 on macppc allowing all tests to pass there
- remove use of -funroll-loops with fortran (it causes scipy to segfault
  on macppc and it can make code bigger and slower in some cases)
- "optimize function attributes" were added in gcc 4.4. silence those
  build-time warnings when building with earlier gcc versions.
@
text
@d1 1
a1 1
$OpenBSD: patch-numpy_core_include_numpy_npy_common_h,v 1.3 2014/09/17 00:46:13 daniel Exp $
d10 1
a10 4
(2) Backport fix for #5027: incorrect numpy.datetime64 on macppc. See:
https://github.com/numpy/numpy/issues/5027

(3) py-numpy only checks for expl to determine whether extended-precision
d15 2
a16 2
--- numpy/core/include/numpy/npy_common.h.orig	Tue Aug  5 14:04:19 2014
+++ numpy/core/include/numpy/npy_common.h	Wed Jan 14 00:33:33 2015
d25 1
a25 1
@@@@ -17,6 +18,9 @@@@
d33 14
a46 23
 #if defined HAVE_XMMINTRIN_H && defined HAVE__MM_LOAD_PS
 #define NPY_HAVE_SSE_INTRINSICS
@@@@ -223,18 +227,9 @@@@ typedef unsigned PY_LONG_LONG npy_ulonglong;
 #  ifdef _MSC_VER
 #    define NPY_LONGLONG_FMT         "I64d"
 #    define NPY_ULONGLONG_FMT        "I64u"
-#  elif defined(__APPLE__) || defined(__FreeBSD__)
-/*   "%Ld" only parses 4 bytes -- "L" is floating modifier on MacOS X/BSD */
+#  else
 #    define NPY_LONGLONG_FMT         "lld"
 #    define NPY_ULONGLONG_FMT        "llu"
-/*
-     another possible variant -- *quad_t works on *BSD, but is deprecated:
-     #define LONGLONG_FMT   "qd"
-     #define ULONGLONG_FMT   "qu"
-*/
-#  else
-#    define NPY_LONGLONG_FMT         "Ld"
-#    define NPY_ULONGLONG_FMT        "Lu"
 #  endif
 #  ifdef _MSC_VER
 #    define NPY_LONGLONG_SUFFIX(x)   (x##i64)
@@@@ -255,14 +250,8 @@@@ typedef unsigned char npy_bool;
@


1.3
log
@- update numpy to 1.8.2 and take maintainer
- python3 flavor contributed by Dawe with assistance from rpointel@@
- tested in a bulk by landry@@
- bcallah@@ needs this update to update math/veusz

ok landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-numpy_core_include_numpy_npy_common_h,v 1.2 2011/05/27 10:06:12 eric Exp $
d3 11
a13 1
py-numpy only checks for expl to determine whether extended-precision
d18 41
a58 3
--- numpy/core/include/numpy/npy_common.h.orig	Sun Mar  2 09:04:27 2014
+++ numpy/core/include/numpy/npy_common.h	Wed Mar 12 06:00:39 2014
@@@@ -255,14 +255,8 @@@@ typedef unsigned char npy_bool;
@


1.2
log
@- update to 1.6.0
- tweak distutils to fix py-scipy build noticed by landry@@

ok djm@@ (maintainer) rpointel@@ landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-numpy_core_include_numpy_npy_common_h,v 1.1 2009/09/28 15:15:37 jasper Exp $
d8 3
a10 3
--- numpy/core/include/numpy/npy_common.h.orig	Mon Apr  4 18:33:33 2011
+++ numpy/core/include/numpy/npy_common.h	Wed May 18 10:57:17 2011
@@@@ -72,14 +72,8 @@@@ typedef unsigned char npy_bool;
@


1.1
log
@- update py-numpy to 1.3.0
- update homepage

"looks good" djm@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD$
d8 3
a10 3
--- numpy/core/include/numpy/npy_common.h.orig	Sun Sep 27 17:35:01 2009
+++ numpy/core/include/numpy/npy_common.h	Sun Sep 27 17:35:21 2009
@@@@ -58,14 +58,8 @@@@ typedef unsigned char npy_bool;
@

