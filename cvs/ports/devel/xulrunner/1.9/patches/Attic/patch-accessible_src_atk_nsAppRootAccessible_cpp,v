head	1.4;
access;
symbols
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	martynas_20090728:1.1.1.1
	martynas:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2010.06.12.16.23.55;	author landry;	state dead;
branches;
next	1.3;

1.3
date	2010.05.10.12.36.09;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.24.16.08.01;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2009.07.27.21.35.56;	author martynas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.07.27.21.35.56;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove now deprecated/unused files/patches/. Yay!
@
text
@$OpenBSD: patch-accessible_src_atk_nsAppRootAccessible_cpp,v 1.3 2010/05/10 12:36:09 espie Exp $
--- accessible/src/atk/nsAppRootAccessible.cpp.orig	Mon Mar 15 15:53:41 2010
+++ accessible/src/atk/nsAppRootAccessible.cpp	Mon May 10 13:10:10 2010
@@@@ -55,7 +55,7 @@@@ typedef GType (* AtkGetTypeType) (void);
 GType g_atk_hyperlink_impl_type = G_TYPE_INVALID;
 static PRBool sATKChecked = PR_FALSE;
 static PRLibrary *sATKLib = nsnull;
-static const char sATKLibName[] = "libatk-1.0.so.0";
+static const char sATKLibName[] = "libatk-1.0.so";
 static const char sATKHyperlinkImplGetTypeSymbol[] =
     "atk_hyperlink_impl_get_type";
 static const char sAccEnv [] = "GNOME_ACCESSIBILITY";
@@@@ -117,8 +117,8 @@@@ static GHashTable *key_listener_list = NULL;
 static guint key_snooper_id = 0;
 
 G_BEGIN_DECLS
-typedef void (*GnomeAccessibilityInit) (void);
-typedef void (*GnomeAccessibilityShutdown) (void);
+typedef void (*GnomeAccessibilityInit) ();
+typedef void (*GnomeAccessibilityShutdown) ();
 G_END_DECLS
 
 struct MaiUtil
@@@@ -757,9 +757,11 @@@@ LoadGtkModule(GnomeAccessibilityModule& aModule)
     }
 
     //we have loaded the library, try to get the function ptrs
-    if (!(aModule.init = PR_FindFunctionSymbol(aModule.lib,
+    if (!(aModule.init = (GnomeAccessibilityInit)
+                                PR_FindFunctionSymbol(aModule.lib,
                                                aModule.initName)) ||
-        !(aModule.shutdown = PR_FindFunctionSymbol(aModule.lib,
+        !(aModule.shutdown = (GnomeAccessibilityShutdown) 
+                                PR_FindFunctionSymbol(aModule.lib,
                                                    aModule.shutdownName))) {
 
         //fail, :(
@


1.3
log
@gcc3 and gcc4 disagree, so put a common cast to make them compile.
(also compile some file with -O1 in moz)
@
text
@d1 1
a1 1
$OpenBSD: patch-accessible_src_atk_nsAppRootAccessible_cpp,v 1.1.1.1 2009/06/21 01:31:24 martynas Exp $
@


1.2
log
@Update xulrunner 1.9.0.14 to 1.9.1.7, latest release in the branch
corresponding to ffx 3.5.x. Most patches taken from there, tested
successfully @@ppc/amd64/sparc64. Branch 1.9.0.x is approaching attic
upstream, as ffx 3.0.x.
The plan is to move all users of xulrunner/1.8 to use this latest
version, and then ditch the old unmaintained one from ffx 2.x days.
@
text
@d2 2
a3 2
--- accessible/src/atk/nsAppRootAccessible.cpp.orig	Thu Oct 11 13:13:32 2007
+++ accessible/src/atk/nsAppRootAccessible.cpp	Fri Jun 13 19:31:10 2008
d13 25
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-accessible_src_atk_nsAppRootAccessible_cpp,v 1.1 2008/11/20 23:41:32 martynas Exp $
@


1.1.1.1
log
@import xulrunner 1.9, and implement infrastructure for multiple
xulrunners.  this was necessary for smooth migration, since we want
plugins work for mozilla 1.8 branch too (seamonkey, thunderbird);
they are upwards-compatible if built against 1.8.  however, some
new applications started to depend on 1.9, and also other (non-plugin)
apps will start to migrate so that the old xulrunner can go away
requested by many;  bulk build & pkgpath & bump done by sthen@@
@
text
@@
