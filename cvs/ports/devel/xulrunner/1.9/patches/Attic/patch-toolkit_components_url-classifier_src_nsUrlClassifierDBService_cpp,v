head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	martynas_20090728:1.1.1.1
	martynas:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.04.24.16.08.01;	author landry;	state dead;
branches;
next	1.1;

1.1
date	2009.07.27.21.35.56;	author martynas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.07.27.21.35.56;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update xulrunner 1.9.0.14 to 1.9.1.7, latest release in the branch
corresponding to ffx 3.5.x. Most patches taken from there, tested
successfully @@ppc/amd64/sparc64. Branch 1.9.0.x is approaching attic
upstream, as ffx 3.0.x.
The plan is to move all users of xulrunner/1.8 to use this latest
version, and then ditch the old unmaintained one from ffx 2.x days.
@
text
@$OpenBSD: patch-toolkit_components_url-classifier_src_nsUrlClassifierDBService_cpp,v 1.1 2009/07/27 21:35:56 martynas Exp $
--- toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp.orig	Mon Aug 25 23:59:14 2008
+++ toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp	Tue Sep 23 20:37:33 2008
@@@@ -2023,8 +2023,20 @@@@ nsUrlClassifierDBServiceWorker::GetShaEntries(PRUint32
           return NS_ERROR_FAILURE;
         }
         const nsCSubstring& str = Substring(chunk, start, 4);
+#if 0
+        // You can't just cast a char* to an int* and access through it
         const PRUint32 *p = reinterpret_cast<const PRUint32*>(str.BeginReading());
         entry->mAddChunkId = PR_ntohl(*p);
+#else
+        // the old-school way...
+        union {
+          PRUint32 i;
+          char c[4];
+        } u;
+
+        memcpy(u.c, reinterpret_cast<const char *>(str.BeginReading()), 4);
+        entry->mAddChunkId = PR_ntohl(u.i);
+#endif
         if (entry->mAddChunkId == 0) {
           NS_WARNING("Received invalid chunk number.");
           return NS_ERROR_FAILURE;
@@@@ -2052,8 +2064,20 @@@@ nsUrlClassifierDBServiceWorker::GetShaEntries(PRUint32
 
         if (chunkType == CHUNK_SUB) {
           const nsCSubstring& str = Substring(chunk, start, 4);
+#if 0
+          // You can't just cast a char* to an int* and access through it
           const PRUint32 *p = reinterpret_cast<const PRUint32*>(str.BeginReading());
           entry->mAddChunkId = PR_ntohl(*p);
+#else
+          // the old-school way...
+          union {
+            PRUint32 i;
+            char c[4];
+          } u;
+
+          memcpy(u.c, reinterpret_cast<const char *>(str.BeginReading()), 4);
+          entry->mAddChunkId = PR_ntohl(u.i);
+#endif
           if (entry->mAddChunkId == 0) {
             NS_WARNING("Received invalid chunk number.");
             return NS_ERROR_FAILURE;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-toolkit_components_url-classifier_src_nsUrlClassifierDBService_cpp,v 1.1 2008/11/20 23:41:32 martynas Exp $
@


1.1.1.1
log
@import xulrunner 1.9, and implement infrastructure for multiple
xulrunners.  this was necessary for smooth migration, since we want
plugins work for mozilla 1.8 branch too (seamonkey, thunderbird);
they are upwards-compatible if built against 1.8.  however, some
new applications started to depend on 1.9, and also other (non-plugin)
apps will start to migrate so that the old xulrunner can go away
requested by many;  bulk build & pkgpath & bump done by sthen@@
@
text
@@
