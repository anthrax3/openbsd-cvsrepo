head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.56
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.54
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.52
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.48
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.50
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.46
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.44
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.42
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.40
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.38
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.36
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.34
	OPENBSD_5_0:1.3.0.32
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.30
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.28
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.24
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.22
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.20
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.18
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.10
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.8
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.1.1.1.0.14
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.12
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.10
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	DAVID_LEONARD_980211:1.1.1.1
	DAVID_LEONARD:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2003.10.16.22.10.02;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.13.01.56.00;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	98.02.10.23.54.06;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.02.10.23.54.06;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@better
@
text
@"Bison" is a general-purpose parser generator that converts a grammar
description for an LALR(1) context-free grammar into a C program
to parse that grammar.  Once you are proficient with Bison, you may
use it to develop a wide range of language parsers, from those used
in simple desk calculators to complex programming languages.

Bison is upward compatible with Yacc: all properly-written Yacc
grammars ought to work with Bison with no change.  Anyone familiar
with Yacc should be able to use Bison with little trouble.  You
need to be fluent in C programming in order to use Bison.
@


1.2
log
@upgrade to bison 1.28
@
text
@d1 4
a4 4
   "Bison" is a general-purpose parser generator that converts a
grammar description for an LALR(1) context-free grammar into a C
program to parse that grammar.  Once you are proficient with Bison, you
may use it to develop a wide range of language parsers, from those used
d7 4
a10 6
   Bison is upward compatible with Yacc: all properly-written Yacc
grammars ought to work with Bison with no change.  Anyone familiar with
Yacc should be able to use Bison with little trouble.  You need to be
fluent in C programming in order to use Bison.

WWW: ${HOMEPAGE}
@


1.1
log
@Initial revision
@
text
@d11 2
@


1.1.1.1
log
@Bison parser generator port from David Leonard
@
text
@@
