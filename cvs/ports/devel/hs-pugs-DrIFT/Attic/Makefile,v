head	1.18;
access;
symbols
	OPENBSD_5_6:1.16.0.6
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.4
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.14.0.2
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	kili_20100620:1.1.1.1
	kili:1.1.1;
locks; strict;
comment	@# @;


1.18
date	2015.01.01.19.06.24;	author kili;	state dead;
branches;
next	1.17;
commitid	0bqCI8t1p06XHG7G;

1.17
date	2014.12.18.20.26.35;	author kili;	state Exp;
branches;
next	1.16;
commitid	oU36pnPq1EgwGJbP;

1.16
date	2013.07.18.22.40.11;	author kili;	state Exp;
branches;
next	1.15;

1.15
date	2013.03.11.10.50.08;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2013.01.20.18.03.12;	author kili;	state Exp;
branches;
next	1.13;

1.13
date	2012.12.31.15.48.10;	author naddy;	state Exp;
branches;
next	1.12;

1.12
date	2012.10.28.23.28.49;	author kili;	state Exp;
branches;
next	1.11;

1.11
date	2012.10.11.13.31.29;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2012.09.02.21.21.48;	author kili;	state Exp;
branches;
next	1.9;

1.9
date	2011.09.16.09.24.51;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2011.04.23.14.32.51;	author kili;	state Exp;
branches;
next	1.7;

1.7
date	2011.04.11.14.46.29;	author kili;	state Exp;
branches;
next	1.6;

1.6
date	2010.11.15.19.45.59;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2010.11.03.22.13.39;	author kili;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.28.13.51.47;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.17.13.43.37;	author kili;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.30.15.41.01;	author kili;	state Exp;
branches;
next	1.1;

1.1
date	2010.06.20.09.43.23;	author kili;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.06.20.09.43.23;	author kili;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Remove outdated and ussless pugs-related hs-ports: hs-HsSyck, hs-MetaObject, hs-control-timeout,
hs-pugs-DrIFT,  hs-pugs-compat, hs-regex-pcre-builtin and hs-stringtable-atom.
@
text
@# $OpenBSD: Makefile,v 1.17 2014/12/18 20:26:35 kili Exp $

BROKEN =		does not compile with ghc-7.8

COMMENT =		DrIFT with pugs-specific rules

DISTNAME =		pugs-DrIFT-2.2.3.20130611
CATEGORIES =		devel
HOMEPAGE =		http://pugscode.org/

# BSD3
PERMIT_PACKAGE_CDROM =	Yes

WANTLIB =		c m

MODULES =		lang/ghc converters/libiconv
MODGHC_BUILD =		cabal hackage haddock register

BUILD_DEPENDS =		${RUN_DEPENDS}
RUN_DEPENDS =		devel/hs-HsSyck \
			devel/hs-mtl>=2.0.0.0 \
			devel/hs-random \
			devel/hs-stm

.include <bsd.port.mk>
@


1.17
log
@Mark as broken for ghc-7.8.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2013/07/18 22:40:11 kili Exp $
@


1.16
log
@Update to pugs-DrIFT-2.2.3.20130611.
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.15 2013/03/11 10:50:08 espie Exp $
@


1.15
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2013/01/20 18:03:12 kili Exp $
d5 1
a5 2
DISTNAME =		pugs-DrIFT-2.2.3.20120203
REVISION =		3
d19 1
a19 1
			devel/hs-mtl>=0,<2.2.0.0 \
@


1.14
log
@Regenerate plist for profiling libs.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2012/12/31 15:48:10 naddy Exp $
a11 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM =Yes
PERMIT_DISTFILES_FTP =	Yes
@


1.13
log
@spelling
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2012/10/28 23:28:49 kili Exp $
d6 1
a6 1
REVISION =		2
@


1.12
log
@Move the @@exec and @@unexec lines running the {,un}register.sh scripts
and the line with the unregister.sh script down to the bottom of
the plist. Silences all the blurb about ".../*.haddock doesn't exist
or isn't a file."
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2012/10/11 13:31:29 dcoppa Exp $
d6 1
a6 1
REVISION =		1
@


1.11
log
@Fix fallout of haskell ports, now that devel/gmp is no more a
dependency for ghc - devel category

ok kili@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2012/09/02 21:21:48 kili Exp $
d6 1
a6 1
REVISION =		0
@


1.10
log
@Udpate to pugs-DrIFT-2.2.3.20120203.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2011/09/16 09:24:51 espie Exp $
d6 1
d16 1
a16 1
WANTLIB =		c gmp m pthread util
@


1.9
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2011/04/23 14:32:51 kili Exp $
d5 1
a5 2
DISTNAME =		pugs-DrIFT-2.2.3.1
REVISION =		6
d22 2
a23 1
			devel/hs-mtl \
@


1.8
log
@Depend on and use mtl-2 from devel/hs-mtl.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2011/04/11 14:46:29 kili Exp $
d6 1
a6 1
REVISION =		5
@


1.7
log
@Tweak dependencies and bump.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2010/11/15 19:45:59 espie Exp $
d6 1
a6 1
REVISION =		4
d23 1
@


1.6
log
@move depends to new style
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2010/11/03 22:13:39 kili Exp $
d6 1
a6 1
REVISION =		3
d18 1
a18 1
MODULES =		lang/ghc
d21 2
a22 1
LIB_DEPENDS =		devel/hs-HsSyck \
a23 1
RUN_DEPENDS =		${LIB_DEPENDS}
@


1.5
log
@bumpski
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2010/10/28 13:51:47 jasper Exp $
d21 2
a22 2
LIB_DEPENDS =		::devel/hs-HsSyck \
			::devel/hs-stm
@


1.4
log
@- regen plist after recent ghc.port.mk change
- adjust @@exec/@@unexec accordingly

"just go ahead" kili@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2010/07/17 13:43:37 kili Exp $
d6 1
a6 1
REVISION =		2
@


1.3
log
@Add LIB_DEPENDS to RUN_DEPENDS.
Switch to REVISION.
Bump.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2010/06/30 15:41:01 kili Exp $
d6 1
a6 1
REVISION =		1
d18 1
a18 1
MODULES =		lang/ghc converters/libiconv
a23 4

post-install:
	mv ${PREFIX}/share/${DISTNAME}/* ${PREFIX}/share/doc/${DISTNAME}
	rmdir ${PREFIX}/share/${DISTNAME}
@


1.2
log
@WANTLIB += pthread and bump PKGNAME.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2010/06/20 09:43:23 kili Exp $
d6 1
a6 1
PKGNAME =		hs-${DISTNAME}p0
d23 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d6 1
d16 1
a16 1
WANTLIB =		c gmp m util
@


1.1.1.1
log
@DrIFT is a type sensitive preprocessor for Haskell. It extracts
type declarations and directives from modules. The directives cause
rules to be fired on the parsed type declarations, generating new
code which is then appended to the bottom of the input file. The
rules are expressed as Haskell code, and it is intended that the
user can add new rules as required.
DrIFT automates instance derivation for classes that aren't supported
by the standard compilers.  In addition, instances can be produced
in seperate modules to that containing the type declaration.  This
allows instances to be derived for a type after the original module
has been compiled.  As a bonus, simple utility functions can also
be produced from a type.

"go ahead, please" espie@@

@
text
@@
