head	1.4;
access;
symbols
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.14
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2009.04.17.08.34.41;	author landry;	state dead;
branches;
next	1.3;

1.3
date	2008.11.27.18.22.53;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.24.22.02.19;	author martynas;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.07.05.47.58;	author marcm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to vte 0.20.1, tested by jasper@@ in a bulk build.
ok jasper@@
@
text
@$OpenBSD: patch-gnome-pty-helper_gnome-pty-helper_c,v 1.3 2008/11/27 18:22:53 jasper Exp $

Patch to fix 64-bit issues where gnome-pty-helper would eat up 100% CPU usage.
From chpe@@gnome.org Bugzilla: #562385

--- gnome-pty-helper/gnome-pty-helper.c.orig	Thu Jun 26 19:49:45 2008
+++ gnome-pty-helper/gnome-pty-helper.c	Thu Nov 27 13:21:41 2008
@@@@ -95,27 +95,25 @@@@ static pty_info *pty_list;
 #endif
 #endif /* CMSG_DATA */
 
-static struct cmsghdr *cmptr;
-static int CONTROLLEN;
+/* Solaris doesn't define these */
+#ifndef CMSG_ALIGN
+#define CMSG_ALIGN(len) (((len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1))
+#endif
+#ifndef CMSG_SPACE
+#define CMSG_SPACE(len) (CMSG_ALIGN (len) + CMSG_ALIGN (sizeof (struct cmsghdr)))
+#endif
+#ifndef CMSG_LEN
+#define CMSG_LEN(len) (CMSG_ALIGN (sizeof (struct cmsghdr)) + (len))
+#endif
 
 static int
-init_msg_pass (void)
-{
-	CONTROLLEN = (CMSG_DATA (cmptr) - (unsigned char *)cmptr) + sizeof(int);
-	cmptr = malloc (CONTROLLEN);
-
-	if (cmptr)
-		return 0;
-
-	return -1;
-}
-
-static int
 pass_fd (int client_fd, int fd)
 {
         struct iovec  iov[1];
         struct msghdr msg;
         char          buf [1];
+	char     cmsgbuf[CMSG_SPACE(sizeof(int))];
+	struct  cmsghdr *cmptr;
 
 	iov [0].iov_base = buf;
 	iov [0].iov_len  = 1;
@@@@ -124,12 +122,13 @@@@ pass_fd (int client_fd, int fd)
 	msg.msg_iovlen     = 1;
 	msg.msg_name       = NULL;
 	msg.msg_namelen    = 0;
-	msg.msg_control    = (caddr_t) cmptr;
-	msg.msg_controllen = CONTROLLEN;
-
+	msg.msg_control    = (caddr_t) cmsgbuf;
+	msg.msg_controllen = sizeof(cmsgbuf);
+ 
+	cmptr = CMSG_FIRSTHDR(&msg);
 	cmptr->cmsg_level = SOL_SOCKET;
 	cmptr->cmsg_type  = SCM_RIGHTS;
-	cmptr->cmsg_len   = CONTROLLEN;
+	cmptr->cmsg_len   = CMSG_LEN(sizeof(int));
 	*(int *)CMSG_DATA (cmptr) = fd;
 
 	if (sendmsg (client_fd, &msg, 0) != 1)
@@@@ -154,12 +153,6 @@@@ pass_fd (int client_fd, int fd)
 #include <sys/uio.h>
 
 static int
-init_msg_pass ()
-{
-  return 0;
-}
-
-static int
 pass_fd (int client_fd, int fd)
 {
   struct iovec  iov[1];
@@@@ -185,12 +178,6 @@@@ pass_fd (int client_fd, int fd)
 #else
 #include <stropts.h>
 #ifdef I_SENDFD
-static int
-init_msg_pass ()
-{
-	/* nothing */
-	return 0;
-}
 
 int
 pass_fd (int client_fd, int fd)
@@@@ -707,9 +694,6 @@@@ main (int argc, char *argv [])
 	/* Make sure we clean up utmp/wtmp even under vncserver */
 	signal (SIGHUP, exit_handler);
 	signal (SIGTERM, exit_handler);
-
-	if (init_msg_pass () == -1)
-		exit (1);
 
 	while (!done) {
 		res = n_read (STDIN_FILENO, &op, sizeof (op));
@


1.3
log
@- fix a very longstanding and irritating issue where opening two gnome-terminal
windows/tabs would make gnome-pty-helper hungry for cpu time. so hungry
that it would try to eat all cpu time.

from chpe@@gnome.org bugzilla: #562385
@
text
@d1 1
a1 1
$OpenBSD: patch-gnome-pty-helper_gnome-pty-helper_c,v 1.2 2007/04/24 22:02:19 martynas Exp $
@


1.2
log
@update to vte-0.16.2
initial update from jasper@@
"commit!" jasper@@
@
text
@d1 68
a68 4
$OpenBSD: patch-gnome-pty-helper_gnome-pty-helper_c,v 1.1 2003/10/07 05:47:58 marcm Exp $
--- gnome-pty-helper/gnome-pty-helper.c.orig	Fri Mar 23 16:14:44 2007
+++ gnome-pty-helper/gnome-pty-helper.c	Fri Mar 23 16:15:42 2007
@@@@ -101,7 +101,7 @@@@ static int CONTROLLEN;
d70 7
a76 1
 init_msg_pass (void)
d78 21
a98 3
-	CONTROLLEN = (CMSG_DATA (cmptr) - (unsigned char *)cmptr) + sizeof(int);
+	CONTROLLEN = (CMSG_DATA (cmptr) - (unsigned char *)cmptr) + sizeof(long);
 	cmptr = malloc (CONTROLLEN);
d100 2
a101 1
 	if (cmptr)
@


1.1
log
@Update GNOME support ports to their Gnome 2.4 versions...

ORBit2    2.6.3 -> 2.8.1
gconf2    2.2.1 -> 2.4.0.1
libgtop2  2.0.2 -> 2.0.5
libwnck   2.2.2 -> 2.4.0.1
vte       0.10.29 -> 0.11.10

Also removes devel/linc since it has been rolled into devel/ORBit2.
@
text
@d1 10
a10 19
$OpenBSD$
--- gnome-pty-helper/gnome-pty-helper.c.orig	2003-09-08 15:32:27.000000000 -0700
+++ gnome-pty-helper/gnome-pty-helper.c	2003-09-08 15:32:59.000000000 -0700
@@@@ -42,6 +42,7 @@@@ extern char *strdup(const char *);
 #include <unistd.h>
 #include <string.h>
 #include <signal.h>
+#include <sys/param.h>
 #include <fcntl.h>
 #include <termios.h>
 #include <errno.h>
@@@@ -93,7 +94,7 @@@@ static pty_info *pty_list;
 #endif
 #endif /* CMSG_DATA */
 
-#define CONTROLLEN (sizeof (struct cmsghdr)  + sizeof (int))
+#define CONTROLLEN (sizeof (struct cmsghdr)  + sizeof (long))
 
 static struct cmsghdr *cmptr;
d12 1
@

