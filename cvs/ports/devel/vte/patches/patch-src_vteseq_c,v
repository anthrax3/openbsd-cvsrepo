head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.20
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.18
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.16
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.12
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.10
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_7:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2012.12.07.15.18.38;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.29.20.31.40;	author jasper;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2010.07.25.23.53.58;	author william;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2010.07.25.23.53.58;	author william;	state Exp;
branches;
next	;

1.1.4.1
date	2011.06.14.21.59.10;	author jasper;	state Exp;
branches;
next	;

1.2.2.1
date	2012.05.29.20.31.46;	author jasper;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2012.06.18.14.43.58;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Unbreak since we now have support for Unix 98 PTY functions.
@
text
@$OpenBSD: patch-src_vteseq_c,v 1.2 2012/05/29 20:31:40 jasper Exp $

From feeee4b5832b17641e505b7083e0d299fdae318e Mon Sep 17 00:00:00 2001
From: Christian Persch <chpe@@gnome.org>
Date: Sat, 19 May 2012 19:36:09 +0200
Subject: [PATCH] emulation: Limit integer arguments to 65535

From 98ce2f265f986fb88c38d508286bb5e3716b9e74 Mon Sep 17 00:00:00 2001
From: Christian Persch <chpe@@gnome.org>
Date: Sat, 19 May 2012 20:04:12 +0200
Subject: [PATCH] emulation: Limit repetitions

--- src/vteseq.c.orig	Tue May 29 22:24:06 2012
+++ src/vteseq.c	Tue May 29 22:23:59 2012
@@@@ -557,7 +557,7 @@@@ vte_sequence_handler_multiple(VteTerminal *terminal,
                               GValueArray *params,
                               VteTerminalSequenceHandler handler)
 {
-        vte_sequence_handler_multiple_limited(terminal, params, handler, G_MAXLONG);
+        vte_sequence_handler_multiple_limited(terminal, params, handler, G_MAXUSHORT);
 }
 
 static void
@@@@ -1392,7 +1392,7 @@@@ vte_sequence_handler_dc (VteTerminal *terminal, GValue
 static void
 vte_sequence_handler_DC (VteTerminal *terminal, GValueArray *params)
 {
-	vte_sequence_handler_multiple(terminal, params, vte_sequence_handler_dc);
+	vte_sequence_handler_multiple_r(terminal, params, vte_sequence_handler_dc);
 }
 
 /* Delete a line at the current cursor position. */
@@@@ -1785,7 +1785,7 @@@@ vte_sequence_handler_reverse_index (VteTerminal *termi
 static void
 vte_sequence_handler_RI (VteTerminal *terminal, GValueArray *params)
 {
-	vte_sequence_handler_multiple(terminal, params, vte_sequence_handler_nd);
+	vte_sequence_handler_multiple_r(terminal, params, vte_sequence_handler_nd);
 }
 
 /* Save cursor (position). */
@@@@ -2777,8 +2777,7 @@@@ vte_sequence_handler_insert_lines (VteTerminal *termin
 {
 	GValue *value;
 	VteScreen *screen;
-	long param, end, row;
-	int i;
+	long param, end, row, i, limit;
 	screen = terminal->pvt->screen;
 	/* The default is one. */
 	param = 1;
@@@@ -2796,7 +2795,13 @@@@ vte_sequence_handler_insert_lines (VteTerminal *termin
 	} else {
 		end = screen->insert_delta + terminal->row_count - 1;
 	}
-	/* Insert the new lines at the cursor. */
+
+	/* Only allow to insert as many lines as there are between this row
+         * and the end of the scrolling region. See bug #676090.
+         */
+        limit = end - row + 1;
+        param = MIN (param, limit);
+
 	for (i = 0; i < param; i++) {
 		/* Clear a line off the end of the region and add one to the
 		 * top of the region. */
@@@@ -2817,8 +2822,7 @@@@ vte_sequence_handler_delete_lines (VteTerminal *termin
 {
 	GValue *value;
 	VteScreen *screen;
-	long param, end, row;
-	int i;
+	long param, end, row, i, limit;
 
 	screen = terminal->pvt->screen;
 	/* The default is one. */
@@@@ -2837,6 +2841,13 @@@@ vte_sequence_handler_delete_lines (VteTerminal *termin
 	} else {
 		end = screen->insert_delta + terminal->row_count - 1;
 	}
+
+        /* Only allow to delete as many lines as there are between this row
+         * and the end of the scrolling region. See bug #676090.
+         */
+        limit = end - row + 1;
+        param = MIN (param, limit);
+
 	/* Clear them from below the current cursor. */
 	for (i = 0; i < param; i++) {
 		/* Insert a line at the end of the region and remove one from
@


1.2
log
@Apply patches from upstream bugzilla (#676090, malicious escape sequences can cause denial of service).
@
text
@d1 1
a1 1
$OpenBSD$
a2 1
Chunk 1:
a7 1
Chunk 2:
a11 2

Both address: https://bugzilla.gnome.org/show_bug.cgi?id=676090
@


1.2.2.1
log
@Apply patches from upstream bugzilla (#676090, malicious escape sequences can ca
use denial of service).
@
text
@@


1.2.2.2
log
@this has finally been assigned a cve number; reference it.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_vteseq_c,v 1.2.2.1 2012/05/29 20:31:46 jasper Exp $
d15 1
a15 1
Both address: https://bugzilla.gnome.org/show_bug.cgi?id=676090 (CVE-2012-2738)
@


1.1
log
@file patch-src_vteseq_c was initially added on branch OPENBSD_4_7.
@
text
@d1 94
@


1.1.4.1
log
@- Security fix for [CVE-2011-2198] Limit insert-blank-characters

from upstream git
@
text
@a0 66
$OpenBSD$

commit cadfb9b5a43791034f38b562bb6f58d1b4513844
Author: Christian Persch <chpe@@gnome.org>
Date:   Fri Jun 10 17:31:58 2011 +0200

[CVE-2011-2198] Limit insert-blank-characters
Bug #652124.

--- src/vteseq.c.orig	Mon Aug  9 13:38:44 2010
+++ src/vteseq.c	Tue Jun 14 23:50:07 2011
@@@@ -532,9 +532,10 @@@@ vte_sequence_handler_offset(VteTerminal *terminal,
 
 /* Call another function a given number of times, or once. */
 static void
-vte_sequence_handler_multiple(VteTerminal *terminal,
-			      GValueArray *params,
-			      VteTerminalSequenceHandler handler)
+vte_sequence_handler_multiple_limited(VteTerminal *terminal,
+                                      GValueArray *params,
+                                      VteTerminalSequenceHandler handler,
+                                      glong max)
 {
 	long val = 1;
 	int i;
@@@@ -544,14 +545,30 @@@@ vte_sequence_handler_multiple(VteTerminal *terminal,
 		value = g_value_array_get_nth(params, 0);
 		if (G_VALUE_HOLDS_LONG(value)) {
 			val = g_value_get_long(value);
-			val = MAX(val, 1);	/* FIXME: vttest. */
+			val = CLAMP(val, 1, max);	/* FIXME: vttest. */
 		}
 	}
 	for (i = 0; i < val; i++)
 		handler (terminal, NULL);
 }
 
+static void
+vte_sequence_handler_multiple(VteTerminal *terminal,
+                              GValueArray *params,
+                              VteTerminalSequenceHandler handler)
+{
+        vte_sequence_handler_multiple_limited(terminal, params, handler, G_MAXLONG);
+}
 
+static void
+vte_sequence_handler_multiple_r(VteTerminal *terminal,
+                                GValueArray *params,
+                                VteTerminalSequenceHandler handler)
+{
+        vte_sequence_handler_multiple_limited(terminal, params, handler,
+                                              terminal->column_count - terminal->pvt->screen->cursor_current.col);
+}
+
 /* Manipulate certain terminal attributes. */
 static void
 vte_sequence_handler_decset_internal(VteTerminal *terminal,
@@@@ -1570,7 +1587,7 @@@@ vte_sequence_handler_ic (VteTerminal *terminal, GValue
 static void
 vte_sequence_handler_IC (VteTerminal *terminal, GValueArray *params)
 {
-	vte_sequence_handler_multiple(terminal, params, vte_sequence_handler_ic);
+	vte_sequence_handler_multiple_r(terminal, params, vte_sequence_handler_ic);
 }
 
 /* Begin insert mode. */
@


1.1.2.1
log
@SECURITY FIX

Resolves CVE-2003-0070
Diff from upstream

ok ajacoutot
@
text
@a0 48
$OpenBSD$

SECURITY FIX

Resolves CVE-2003-0070
from upstream commit 8b971a7b2c59902914ecbbc3915c45dd21530a91


--- src/vteseq.c.orig	Sun Nov  8 12:12:42 2009
+++ src/vteseq.c	Thu Jul 22 21:16:14 2010
@@@@ -3168,21 +3168,29 @@@@ vte_sequence_handler_window_manipulation (VteTerminal 
 			vte_terminal_feed_child(terminal, buf, -1);
 			break;
 		case 20:
-			/* Report the icon title. */
+			/* Report a static icon title, since the real
+			   icon title should NEVER be reported, as it
+			   creates a security vulnerability.  See
+			   http://marc.info/?l=bugtraq&m=104612710031920&w=2
+			   and CVE-2003-0070. */
 			_vte_debug_print(VTE_DEBUG_PARSE,
-				"Reporting icon title.\n");
+				"Reporting fake icon title.\n");
+			/* never use terminal->icon_title here! */
 			g_snprintf (buf, sizeof (buf),
-				    _VTE_CAP_OSC "L%s" _VTE_CAP_ST,
-				    terminal->icon_title);
+				    _VTE_CAP_OSC "LTerminal" _VTE_CAP_ST);
 			vte_terminal_feed_child(terminal, buf, -1);
 			break;
 		case 21:
-			/* Report the window title. */
+			/* Report a static window title, since the real
+			   window title should NEVER be reported, as it
+			   creates a security vulnerability.  See
+			   http://marc.info/?l=bugtraq&m=104612710031920&w=2
+			   and CVE-2003-0070. */
 			_vte_debug_print(VTE_DEBUG_PARSE,
-					"Reporting window title.\n");
+					"Reporting fake window title.\n");
+			/* never use terminal->window_title here! */
 			g_snprintf (buf, sizeof (buf),
-				    _VTE_CAP_OSC "l%s" _VTE_CAP_ST,
-				    terminal->window_title);
+				    _VTE_CAP_OSC "lTerminal" _VTE_CAP_ST);
 			vte_terminal_feed_child(terminal, buf, -1);
 			break;
 		default:
@

