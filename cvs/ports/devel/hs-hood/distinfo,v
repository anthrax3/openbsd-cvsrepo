head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	kili_20101025:1.1.1.1
	kili:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.09.21.11.53.57;	author kili;	state Exp;
branches;
next	1.3;
commitid	r2F2BqUR5udfmKGQ;

1.3
date	2015.01.18.03.13.14;	author naddy;	state Exp;
branches;
next	1.2;
commitid	INAcawJqik7lWSVj;

1.2
date	2011.04.23.20.23.15;	author kili;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.24.22.18.35;	author kili;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.10.24.22.18.35;	author kili;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to hs-hood-0.2.1.
@
text
@SHA256 (ghc/hood-0.2.1.tar.gz) = 0AvHHPb0OxQbGfGDmcmtERThRm2aVb1qZQbWjFfYKLk=
SIZE (ghc/hood-0.2.1.tar.gz) = 8897
@


1.3
log
@Drop remaining MD5/RMD160/SHA1 checksums.
@
text
@d1 2
a2 2
SHA256 (ghc/hood-0.2.tar.gz) = llU3Swx1wT0BrZdyzWauSg9hOuOqFFPE2Ti0WVOW5po=
SIZE (ghc/hood-0.2.tar.gz) = 8462
@


1.2
log
@New distinfo after DIST_SUBDIR change in ghc.port.mk.
@
text
@a0 3
MD5 (ghc/hood-0.2.tar.gz) = zTMhIY4b+ZVAVmVGKQutkQ==
RMD160 (ghc/hood-0.2.tar.gz) = Op30UcEa8p1qXX0xy+1pmXhpwkg=
SHA1 (ghc/hood-0.2.tar.gz) = Y8+fcUuuik/Zi4RX2g/jYlKzlcE=
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
MD5 (hood-0.2.tar.gz) = zTMhIY4b+ZVAVmVGKQutkQ==
RMD160 (hood-0.2.tar.gz) = Op30UcEa8p1qXX0xy+1pmXhpwkg=
SHA1 (hood-0.2.tar.gz) = Y8+fcUuuik/Zi4RX2g/jYlKzlcE=
SHA256 (hood-0.2.tar.gz) = llU3Swx1wT0BrZdyzWauSg9hOuOqFFPE2Ti0WVOW5po=
SIZE (hood-0.2.tar.gz) = 8462
@


1.1.1.1
log
@And now import into the right directory (hs-hood, not just hood) as
noticed by jasper@@. DESCR-Blurb again:

HOOD is a small post-mortem debugger for the lazy functional language
]Haskell. It is based on the concept of observation of intermediate
data structures, rather than the more traditional stepping and
variable examination paradigm used by imperative language debuggers.

@
text
@@
