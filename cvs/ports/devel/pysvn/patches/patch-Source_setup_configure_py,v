head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.4
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.2.0.8
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	stsp_20101229:1.1.1.1
	stsp:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2017.02.27.18.03.45;	author jca;	state Exp;
branches;
next	1.5;
commitid	FPTkw9Lv43bwx7H5;

1.5
date	2017.02.27.15.23.33;	author jca;	state Exp;
branches;
next	1.4;
commitid	Kpbv0AUqU8W3XoUh;

1.4
date	2017.02.27.15.18.29;	author jca;	state Exp;
branches;
next	1.3;
commitid	d64kXtcUNW03Jgf7;

1.3
date	2016.06.14.08.39.23;	author czarkoff;	state Exp;
branches;
next	1.2;
commitid	uYmMoBFDQyCSr0Kr;

1.2
date	2013.10.10.09.56.33;	author stsp;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.29.13.47.53;	author stsp;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.12.29.13.47.53;	author stsp;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Respect CFLAGS/CXXFLAGS

ok stsp@@ (maintainer)
@
text
@$OpenBSD: patch-Source_setup_configure_py,v 1.5 2017/02/27 15:23:33 jca Exp $

1) Fix broken lib auto-detection. The configure script will try to stat a
   shared library file, but we don't know the exact filename because it depends
   on the shared library version. So look for a .la file instead. These are
   present for all libraries the script is looking for.

2) Add missing OpenBSD-specific bits.

--- Source/setup_configure.py.orig	Sat May 14 11:45:00 2016
+++ Source/setup_configure.py	Mon Feb 27 16:29:52 2017
@@@@ -184,6 +184,9 @@@@ class Setup:
             elif sys.platform.startswith('freebsd'):
                 self.platform = 'freebsd'
 
+            elif sys.platform.startswith('openbsd'):
+                self.platform = 'openbsd'
+
             elif sys.platform == 'cygwin':
                 self.platform = 'cygwin'
 
@@@@ -206,6 +209,10 @@@@ class Setup:
             self.c_utils = FreeBsdCompilerGCC( self )
             self.c_pysvn = FreeBsdCompilerGCC( self )
 
+        elif self.platform == 'openbsd':
+            self.c_utils = OpenBsdCompilerGCC( self )
+            self.c_pysvn = OpenBsdCompilerGCC( self )
+
         elif self.platform == 'cygwin':
             self.c_utils = CygwinCompilerGCC( self )
             self.c_pysvn = CygwinCompilerGCC( self )
@@@@ -876,8 +883,8 @@@@ class CompilerGCC(Compiler):
     def __init__( self, setup ):
         Compiler.__init__( self, setup )
 
-        self._addVar( 'CCC',            'g++' )
-        self._addVar( 'CC',             'gcc' )
+        self._addVar( 'CCC',            '${CXX} ${CXXFLAGS}' )
+        self._addVar( 'CC',             '${CC} ${CFLAGS}' )
 
     def getPythonExtensionFileExt( self ):
         return '.so'
@@@@ -905,8 +912,7 @@@@ class CompilerGCC(Compiler):
         rules = []
 
         rules.append( '%s : %s' % (target_filename, ' '.join( all_objects )) )
-        rules.append( '\t@@echo Link %s' % (target_filename,) )
-        rules.append( '\t@@%%(LDEXE)s -o %s %%(CCCFLAGS)s %s' % (target_filename, ' '.join( all_objects )) )
+        rules.append( '\t%%(LDEXE)s -o %s %%(CCCFLAGS)s %s' % (target_filename, ' '.join( all_objects )) )
 
         self.makePrint( self.expand( '\n'.join( rules ) ) )
 
@@@@ -918,8 +924,7 @@@@ class CompilerGCC(Compiler):
         rules = []
 
         rules.append( '%s : %s' % (target_filename, ' '.join( all_objects )) )
-        rules.append( '\t@@echo Link %s' % (target_filename,) )
-        rules.append( '\t@@%%(LDSHARED)s -o %s %%(CCCFLAGS)s %s %%(LDLIBS)s' % (target_filename, ' '.join( all_objects )) )
+        rules.append( '\t%%(LDSHARED)s -o %s %%(CCCFLAGS)s %s %%(LDLIBS)s' % (target_filename, ' '.join( all_objects )) )
 
         self.makePrint( self.expand( '\n'.join( rules ) ) )
 
@@@@ -929,8 +934,7 @@@@ class CompilerGCC(Compiler):
         rules = []
 
         rules.append( '%s: %s %s' % (obj_filename, target.src_filename, ' '.join( target.all_dependencies )) )
-        rules.append( '\t@@echo Compile: %s into %s' % (target.src_filename, obj_filename) )
-        rules.append( '\t@@%%(CCC)s -c %%(CCCFLAGS)s -o%s  %s' % (obj_filename, target.src_filename) )
+        rules.append( '\t%%(CCC)s -c %%(CCCFLAGS)s -o%s  %s' % (obj_filename, target.src_filename) )
 
         self.makePrint( self.expand( '\n'.join( rules ) ) )
 
@@@@ -940,8 +944,7 @@@@ class CompilerGCC(Compiler):
         rules = []
 
         rules.append( '%s: %s %s' % (obj_filename, target.src_filename, ' '.join( target.all_dependencies )) )
-        rules.append( '\t@@echo Compile: %s into %s' % (target.src_filename, obj_filename) )
-        rules.append( '\t@@%%(CC)s -c %%(CCFLAGS)s -o%s  %s' % (obj_filename, target.src_filename) )
+        rules.append( '\t%%(CC)s -c %%(CCFLAGS)s -o%s  %s' % (obj_filename, target.src_filename) )
 
         self.makePrint( self.expand( '\n'.join( rules ) ) )
 
@@@@ -1206,6 +1209,8 @@@@ class UnixCompilerGCC(CompilerGCC):
     def get_lib_name_for_platform( self, libname ):
         if self.setup.platform == 'cygwin':
             return ['%s.dll.a' % libname]
+        elif self.setup.platform == 'openbsd':
+            return ['%s.la' % libname]
         else:
             return ['%s.so' % libname]
 
@@@@ -1298,6 +1303,25 @@@@ class FreeBsdCompilerGCC(UnixCompilerGCC):
                 '-lcom_err',
                 '-lexpat',
                 '-lneon',
+                ] )
+        return py_ld_libs
+
+class OpenBsdCompilerGCC(UnixCompilerGCC):
+    def __init__( self, setup ):
+        UnixCompilerGCC.__init__( self, setup )
+
+    def _getLdLibs( self ):
+        py_ld_libs = [
+                '-L%(SVN_LIB)s',
+                '-Wl,--rpath',
+                '-Wl,/usr/lib:/usr/local/lib',
+                '-lsvn_client-1',
+                '-lsvn_diff-1',
+                '-lsvn_repos-1',
+                ]
+
+        py_ld_libs.extend( [
+                '-lexpat',
                 ] )
         return py_ld_libs
 
@


1.5
log
@Show commands used for compilation
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_setup_configure_py,v 1.4 2017/02/27 15:18:29 jca Exp $
d11 1
a11 1
+++ Source/setup_configure.py	Mon Feb 27 16:21:44 2017
d39 2
a40 2
+        self._addVar( 'CCC',            'c++' )
+        self._addVar( 'CC',             'cc' )
@


1.4
log
@Don't hardcode gcc/g++
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_setup_configure_py,v 1.3 2016/06/14 08:39:23 czarkoff Exp $
d11 1
a11 1
+++ Source/setup_configure.py	Mon Feb 27 16:17:19 2017
d44 41
a84 1
@@@@ -1206,6 +1213,8 @@@@ class UnixCompilerGCC(CompilerGCC):
d93 1
a93 1
@@@@ -1298,6 +1307,25 @@@@ class FreeBsdCompilerGCC(UnixCompilerGCC):
@


1.3
log
@update to pysvn-1.9.2

OK stsp@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_setup_configure_py,v 1.2 2013/10/10 09:56:33 stsp Exp $
d10 2
a11 2
--- Source/setup_configure.py.orig	Wed Jun  1 02:38:57 2016
+++ Source/setup_configure.py	Wed Jun  1 02:44:21 2016
d33 11
@


1.2
log
@Update pysvn to version 1.7.8, which supports Subversion 1.8.
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_setup_configure_py,v 1.1.1.1 2010/12/29 13:47:53 stsp Exp $
d10 3
a12 3
--- Source/setup_configure.py.orig	Sun Aug 18 14:11:41 2013
+++ Source/setup_configure.py	Wed Oct  9 16:02:28 2013
@@@@ -182,6 +182,9 @@@@ class Setup:
d22 1
a22 1
@@@@ -204,6 +207,10 @@@@ class Setup:
d33 2
a34 1
@@@@ -1129,7 +1136,7 @@@@ class UnixCompilerGCC(CompilerGCC):
d36 3
a38 1
             return '%s.dll.a' % libname
d40 1
a40 2
-            return '%s.so' % libname
+            return '%s.la' % libname
d42 1
a42 3
     def setupUtilities( self ):
         self._addVar( 'CCCFLAGS',
@@@@ -1213,6 +1220,25 @@@@ class FreeBsdCompilerGCC(UnixCompilerGCC):
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 3
1) Remove -lresolv.

2) Fix broken lib auto-detection. The configure script will try to stat a
d8 7
a14 8
--- Source/setup_configure.py.orig	Tue Dec 29 12:31:15 2009
+++ Source/setup_configure.py	Sun Dec 19 17:05:53 2010
@@@@ -433,7 +433,7 @@@@ LDLIBS=-L%(svn_lib_dir)s -Wl,--rpath -Wl,%(svn_lib_dir
 -lsvn_client-1 \
 -lsvn_diff-1 \
 -lsvn_repos-1 \
- -lcom_err -lresolv -lexpat -lneon
+ -lcom_err -lexpat -lneon
d16 5
a20 8
 #include pysvn_common.mak
 '''
@@@@ -455,7 +455,7 @@@@ LDLIBS=-L%(svn_lib_dir)s -Wl,--rpath -Wl,%(svn_lib_dir
 -lsvn_client-1 \
 -lsvn_diff-1 \
 -lsvn_repos-1 \
- -lresolv -lexpat -lneon
+ -lexpat -lneon
d22 3
a24 9
 #include pysvn_common.mak
 '''
@@@@ -477,7 +477,7 @@@@ LDLIBS=-L%(svn_lib_dir)s -Wl,--rpath -Wl,%(svn_lib_dir
 -lsvn_client-1 \
 -lsvn_diff-1 \
 -lsvn_repos-1 \
--lcom_err -lresolv -lexpat -lneon -lssl
+-lcom_err -lexpat -lneon -lssl
 PYSVN_CREATE_INIT_OPTION=%(pysvn_module_name)s
d26 4
a29 11
 #include pysvn_common.mak
@@@@ -500,7 +500,7 @@@@ LDLIBS=-L%(svn_lib_dir)s \
 -lsvn_client-1 \
 -lsvn_diff-1 \
 -lsvn_repos-1 \
--lcom_err -lresolv -lexpat -lneon -lssl
+-lcom_err -lexpat -lneon -lssl
 PYSVN_CREATE_INIT_OPTION=%(pysvn_module_name)s
 
 #include pysvn_common.mak
@@@@ -907,7 +907,7 @@@@ LDLIBS= \
d31 4
d40 28
a67 2
     def find_dir( self, name, kw, svn_root_suffix, base_dir_list, check_file ):
         dirname = self.__find_dir( name, kw, svn_root_suffix, base_dir_list, check_file )
@


1.1.1.1
log
@Import devel/pysvn, a python interface to Subversion.
ok landry@@
@
text
@@
