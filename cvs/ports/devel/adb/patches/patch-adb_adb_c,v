head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.10
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.8
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.6
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.4
	OPENBSD_5_8_BASE:1.1.1.1
	ajacoutot_20150528:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.05.28.09.42.37;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;
commitid	0nX4H8soCmoKUJc9;

1.1.1.1
date	2015.05.28.09.42.37;	author ajacoutot;	state Exp;
branches;
next	;
commitid	0nX4H8soCmoKUJc9;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- adb/adb.c.orig	Mon Feb  9 09:10:55 2015
+++ adb/adb.c	Tue May  5 07:56:50 2015
@@@@ -1191,7 +1191,7 @@@@ int launch_server(int server_port)
         char str_port[30];
         snprintf(str_port, sizeof(str_port), "%d",  server_port);
         // child process
-        int result = execl(path, "adb", "-P", str_port, "fork-server", "server", NULL);
+        int result = execlp(path, "adb", "-P", str_port, "fork-server", "server", NULL);
         // this should not return
         fprintf(stderr, "OOPS! execl returned %d, errno: %d\n", result, errno);
     } else  {
@@@@ -1687,6 +1687,8 @@@@ int handle_host_request(char *service, transport_type 
 
 int main(int argc, char **argv)
 {
+    init_my_path(argv[0]);
+
 #if ADB_HOST
     adb_sysdeps_init();
     adb_trace_init();
@


1.1.1.1
log
@Import adb-5.1.1.4.

Android Debug Bridge (adb) is a command line tool for communicating with Android
emulators and devices.

from Andrew Aldridge with tweak
ok landry@@
@
text
@@
