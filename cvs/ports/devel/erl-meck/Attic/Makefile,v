head	1.7;
access;
symbols
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	jasper_20130803:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2014.04.17.17.12.08;	author jasper;	state dead;
branches;
next	1.6;

1.6
date	2014.03.27.08.47.56;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2013.03.11.10.50.03;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2013.03.10.19.35.26;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2013.03.10.19.20.06;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.10.17.40.52;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2013.03.08.11.58.42;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.08.11.58.42;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.7
log
@remove dead wood, if someone wants to port chef-server they're in for
bigger pain than just reviving these ports.

as discussed with phessler@@
ok aja@@
@
text
@# $OpenBSD: Makefile,v 1.6 2014/03/27 08:47:56 jasper Exp $

COMMENT=	mocking library for Erlang

VERSION=	0.7.2
DISTNAME=	meck-${VERSION}
PKGNAME=	erl-${DISTNAME}
REVISION=	0
CATEGORIES=	devel

HOMEPAGE=	https://github.com/eproxus/meck

# Apache2
PERMIT_PACKAGE_CDROM=	Yes

MASTER_SITES=	http://distfiles.nl/

MODULES=	lang/erlang

ALL_TARGET=	compile

PORTHOME=	${WRKDIR}

do-install:
	${INSTALL_DATA_DIR} ${ERL_LIBDIR}/{ebin,src}
	${INSTALL_DATA} ${WRKSRC}/ebin/*.{app,beam} ${ERL_LIBDIR}/ebin/
	${INSTALL_DATA} ${WRKSRC}/src/*.erl ${ERL_LIBDIR}/src

.include <bsd.port.mk>
@


1.6
log
@use WRKDIR as PORTHOME
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2013/03/11 10:50:03 espie Exp $
@


1.5
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/03/10 19:35:26 jasper Exp $
d22 1
a22 1
PORTHOME=	/tmp/
@


1.4
log
@- remove now unneeded CONFIGURE_STYLE
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/03/10 19:20:06 jasper Exp $
a14 2
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_FTP=	Yes
@


1.3
log
@switch to the erlang module, so more stuff may be factored into the module, but
it's a good start.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/03/10 17:40:52 jasper Exp $
a20 2

CONFIGURE_STYLE=rebar
@


1.2
log
@sprinkle some rebar dependencies; spotted by rpe@@/nigel@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/03/08 11:58:42 jasper Exp $
d8 2
a9 1
CATEGORIES=	devel lang/erlang
a18 1
TAR=		${LOCALBASE}/bin/gtar
d20 1
a20 2
BUILD_DEPENDS=	archivers/gtar \
		devel/rebar
d22 1
a22 1
USE_GMAKE=	Yes
d25 1
a25 1
REGRESS_TARGET=	test
a26 3

ERL_LIBDIR=	${PREFIX}/lib/erlang/lib/${DISTNAME}
SUBST_VARS+=	VERSION
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d20 2
a21 1
BUILD_DEPENDS=	archivers/gtar
@


1.1.1.1
log
@import erl-meck

With meck you can easily mock modules in Erlang. You can also perform
some basic validations on the mocked modules, such as making sure no
unexpected exceptions occurred or looking at the call history.

ok aja@@
@
text
@@
