head	1.3;
access;
symbols
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.11.18.23.40.06;	author fgsch;	state dead;
branches;
next	1.2;

1.2
date	2003.10.11.00.52.22;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.05.04.03.56;	author brad;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove binutils now that we have a recent and more closely tracked version.
if it's needed in the future, we can bring it back. pvalchev@@ ok.
@
text
@$OpenBSD: patch-ld_scripttempl_elf_sc,v 1.2 2003/10/11 00:52:22 brad Exp $
--- ld/scripttempl/elf.sc.orig	2003-04-14 09:03:17.000000000 -0400
+++ ld/scripttempl/elf.sc	2003-09-19 22:29:09.000000000 -0400
@@@@ -114,6 +114,14 @@@@ if test -z "${NO_SMALL_DATA}"; then
   REL_SBSS2=".rel.sbss2    ${RELOCATING-0} : { *(.rel.sbss2${RELOCATING+ .rel.sbss2.* .rel.gnu.linkonce.sb2.*}) }
   .rela.sbss2   ${RELOCATING-0} : { *(.rela.sbss2${RELOCATING+ .rela.sbss2.* .rela.gnu.linkonce.sb2.*}) }"
 fi
+RODATA_ALIGN_ADD_VAL="${CREATE_SHLIB-${RODATA_ALIGN_ADD:-0}} ${CREATE_SHLIB+0}"
+test "$LD_FLAG" = "n" || test "$LD_FLAG" = "N" || test "$LD_FLAG" = "Z" || NO_PAD="y"
+test "$NO_PAD" = "y" && PAD_RO0="${RELOCATING+${RODATA_ALIGN} + ${RODATA_ALIGN_ADD_VAL};}"
+test "$NO_PAD" = "y" && PAD_PLT0="${RELOCATING+. = ALIGN(${MAXPAGESIZE}) + (. & (${MAXPAGESIZE} - 1));} .pltpad0 ${RELOCATING-0} : { ${RELOCATING+__plt_start = .;} }"
+test "$NO_PAD" = "y" && PAD_PLT1=".pltpad1 ${RELOCATING-0} : { ${RELOCATING+__plt_end = .;}} ${RELOCATING+. = ALIGN(${MAXPAGESIZE}) + (. & (${MAXPAGESIZE} - 1));}"
+test "$NO_PAD" = "y" && PAD_GOT0="${RELOCATING+. = ALIGN(${MAXPAGESIZE}) + (. & (${MAXPAGESIZE} - 1));} .gotpad0 ${RELOCATING-0} : { ${RELOCATING+__got_start = .;} }"
+test "$NO_PAD" = "y" && PAD_GOT1=".gotpad1 ${RELOCATING-0} : { ${RELOCATING+__got_end = .;}} ${RELOCATING+. = ALIGN(${MAXPAGESIZE}) + (. & (${MAXPAGESIZE} - 1));}"
+
 CTOR=".ctors        ${CONSTRUCTING-0} : 
   {
     ${CONSTRUCTING+${CTOR_START}}
@@@@ -274,6 +282,7 @@@@ cat <<EOF
   ${RELOCATING+PROVIDE (__etext = .);}
   ${RELOCATING+PROVIDE (_etext = .);}
   ${RELOCATING+PROVIDE (etext = .);}
+  ${PAD_RO+${PAD_RO0}}
   ${WRITABLE_RODATA-${RODATA}}
   .rodata1      ${RELOCATING-0} : { *(.rodata1) }
   ${CREATE_SHLIB-${SDATA2}}
@@@@ -317,12 +326,18 @@@@ cat <<EOF
   ${WRITABLE_RODATA+${RODATA}}
   ${OTHER_READWRITE_SECTIONS}
   ${TEXT_DYNAMIC-${DYNAMIC}}
-  ${RELOCATING+${CTOR}}
-  ${RELOCATING+${DTOR}}
   .jcr          ${RELOCATING-0} : { KEEP (*(.jcr)) }
+
+  /* pad CTOR/DTOR, GOT (and PLT if DATA_PLT) to page aligned if PAD_GOT */
+  ${DATA_PLT+${PAD_PLT+${PAD_PLT0}}}
   ${DATA_PLT+${PLT}}
+  ${DATA_PLT+${PAD_PLT+${PAD_PLT1}}}
+  ${PAD_GOT+${PAD_GOT0}}
   ${RELOCATING+${OTHER_GOT_SYMBOLS}}
   .got          ${RELOCATING-0} : { *(.got.plt) *(.got) }
+  ${RELOCATING+${CTOR}}
+  ${RELOCATING+${DTOR}}
+  ${PAD_GOT+${PAD_GOT1}}
   ${OTHER_GOT_SECTIONS}
   ${CREATE_SHLIB+${SDATA2}}
   ${CREATE_SHLIB+${SBSS2}}
@@@@ -333,7 +348,9 @@@@ cat <<EOF
   ${RELOCATING+__bss_start = .;}
   ${RELOCATING+${OTHER_BSS_SYMBOLS}}
   ${SBSS}
+  ${BSS_PLT+${PAD_PLT+${PAD_PLT0}}}
   ${BSS_PLT+${PLT}}
+  ${BSS_PLT+${PAD_PLT+${PAD_PLT1}}}
   .bss          ${RELOCATING-0} :
   {
    *(.dynbss)
@


1.2
log
@upgrade to binutils 2.14

Tested on powerpc/sparc64/alpha
@
text
@d1 1
a1 1
$OpenBSD: patch-ld_scripttempl_elf_sc,v 1.1 2003/06/05 04:03:56 brad Exp $
@


1.1
log
@upgrade to binutils 2.13.2.1

This is work in progress. It is being commited as a starting point so other
people can look at it/fix issues/and maybe Art can add Hammer support? :)
It has been lightly tested on macppc/sparc64/i386 and compile tested by
mickey@@ on hppa.

DO NOT try to build ld.so on sparc/sparc64/macppc and install the resulting
binary unless you like having a hosed system. A known "misfeature" in ld.so
that is being worked on.
--
MAINTAINER ok
@
text
@d1 3
a3 3
$OpenBSD$
--- ld/scripttempl/elf.sc.orig	Sat Jul 13 21:14:48 2002
+++ ld/scripttempl/elf.sc	Thu Apr 24 16:08:13 2003
d27 6
a32 3
@@@@ -320,9 +329,15 @@@@ cat <<EOF
   ${RELOCATING+${CTOR}}
   ${RELOCATING+${DTOR}}
d35 1
a35 1
+  /* pad GOT (and PLT if DATA_PLT) to page aligned if PAD_GOT */
d42 2
@

