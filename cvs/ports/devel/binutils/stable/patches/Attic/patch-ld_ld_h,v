head	1.3;
access;
symbols
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.11.18.23.40.06;	author fgsch;	state dead;
branches;
next	1.2;

1.2
date	2003.10.11.00.52.22;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.05.04.03.56;	author brad;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove binutils now that we have a recent and more closely tracked version.
if it's needed in the future, we can bring it back. pvalchev@@ ok.
@
text
@$OpenBSD: patch-ld_ld_h,v 1.2 2003/10/11 00:52:22 brad Exp $
--- ld/ld.h.orig	2002-12-23 05:44:59.000000000 -0500
+++ ld/ld.h	2003-09-05 10:40:46.000000000 -0400
@@@@ -201,6 +201,10 @@@@ typedef struct {
 
   bfd_boolean text_read_only;
 
+  /* Classic ELF executable which has data and bss next to each
+     other with no padding for GOT/PLT. */
+  bfd_boolean data_bss_contig;
+
   char *map_filename;
   FILE *map_file;
 
@


1.2
log
@upgrade to binutils 2.14

Tested on powerpc/sparc64/alpha
@
text
@d1 1
a1 1
$OpenBSD: patch-ld_ld_h,v 1.1 2003/06/05 04:03:56 brad Exp $
@


1.1
log
@upgrade to binutils 2.13.2.1

This is work in progress. It is being commited as a starting point so other
people can look at it/fix issues/and maybe Art can add Hammer support? :)
It has been lightly tested on macppc/sparc64/i386 and compile tested by
mickey@@ on hppa.

DO NOT try to build ld.so on sparc/sparc64/macppc and install the resulting
binary unless you like having a hosed system. A known "misfeature" in ld.so
that is being worked on.
--
MAINTAINER ok
@
text
@d1 4
a4 4
$OpenBSD$
--- ld/ld.h.orig	Wed Mar 19 22:31:05 2003
+++ ld/ld.h	Wed Mar 19 22:31:35 2003
@@@@ -195,6 +195,10 @@@@ typedef struct {
d6 1
a6 1
   boolean text_read_only;
d10 1
a10 1
+  boolean data_bss_contig;
@

