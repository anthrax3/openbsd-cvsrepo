head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.12
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.10
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.8
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	jolan_20070326:1.1.1.1
	jolan:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2014.03.11.22.22.46;	author jturner;	state dead;
branches;
next	1.4;

1.4
date	2011.06.21.06.09.34;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2011.06.20.21.40.37;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.18.19.27.16;	author pedro;	state dead;
branches;
next	1.1;

1.1
date	2007.03.26.13.03.57;	author jolan;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.03.26.13.03.57;	author jolan;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update lpeg to 0.12 and use MODLUA_BIN in do-test

"Looks good to me." jasper@@
@
text
@$OpenBSD: patch-lpeg_c,v 1.4 2011/06/21 06:09:34 jasper Exp $
--- lpeg.c.orig	Wed Feb 16 16:03:25 2011
+++ lpeg.c	Mon Jun 20 23:41:43 2011
@@@@ -2268,7 +2268,7 @@@@ static int type_l (lua_State *L) {
 static void createcat (lua_State *L, const char *catname, int (catf) (int)) {
   Instruction *p = newcharset(L);
   int i;
-  for (i = 0; i < CHAR_MAX; i++)
+  for (i = 0; i <= UCHAR_MAX; i++)
     if (catf(i)) setchar(p[1].buff, i);
   lua_setfield(L, -2, catname);
 }
@


1.4
log
@shrink patch, no package change
@
text
@d1 1
a1 1
$OpenBSD: patch-lpeg_c,v 1.3 2011/06/20 21:40:37 jasper Exp $
@


1.3
log
@- update to 0.10.2
- fix homepage
- zap USE_LIBTOOL
- use some variables provided by lua.port.mk
@
text
@d1 4
a4 4
$OpenBSD$
--- lpeg.c.orig	Wed Dec  2 12:15:37 2009
+++ lpeg.c	Wed Dec  2 12:15:56 2009
@@@@ -2134,7 +2134,7 @@@@ static int type_l (lua_State *L) {
@


1.2
log
@lpeg 0.6, okay rui@@ jasper@@
@
text
@d1 12
a12 12
$OpenBSD: patch-lpeg_c,v 1.1 2007/03/26 13:03:57 jolan Exp $
--- lpeg.c.orig	Wed Mar 21 16:48:17 2007
+++ lpeg.c	Mon Mar 26 03:43:38 2007
@@@@ -467,7 +467,7 @@@@ static const char *match (lua_State *L, 
         assert(captop > 0);
         if (capture[captop - 1].siz == 0 &&
             s - capture[captop - 1].s < UCHAR_MAX) {
-          capture[captop - 1].siz = s - capture[captop - 1].s + 1;
+	   capture[captop - 1].siz = (s - getoff(p)) - capture[captop - 1].s + 1;
           p++;
           continue;
         }
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@lpeg-0.5, parsing expression grammars library for lua
@
text
@@
