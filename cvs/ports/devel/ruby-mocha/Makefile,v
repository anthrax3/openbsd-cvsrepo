head	1.20;
access;
symbols
	OPENBSD_6_2:1.20.0.10
	OPENBSD_6_2_BASE:1.20
	OPENBSD_6_1:1.20.0.8
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.6
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.2
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.4
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.19.0.6
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.19.0.4
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.2
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.15.0.2
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.14.0.4
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.2
	OPENBSD_5_0:1.12.0.4
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.2
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.4
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	bernd_2008-feb-02:1.1.1.1
	bernd:1.1.1;
locks; strict;
comment	@# @;


1.20
date	2015.07.19.02.10.31;	author jeremy;	state Exp;
branches;
next	1.19;
commitid	A33PdkIjYp6nCrLn;

1.19
date	2014.01.15.12.33.45;	author jasper;	state Exp;
branches;
next	1.18;

1.18
date	2013.10.26.23.55.35;	author jeremy;	state Exp;
branches;
next	1.17;

1.17
date	2013.04.26.12.18.20;	author jasper;	state Exp;
branches;
next	1.16;

1.16
date	2013.03.11.10.50.30;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2012.09.23.16.57.34;	author jeremy;	state Exp;
branches;
next	1.14;

1.14
date	2011.11.17.15.41.11;	author jeremy;	state Exp;
branches;
next	1.13;

1.13
date	2011.09.16.09.24.57;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2011.01.06.04.24.23;	author jeremy;	state Exp;
branches;
next	1.11;

1.11
date	2010.11.24.21.35.14;	author jeremy;	state Exp;
branches;
next	1.10;

1.10
date	2010.11.08.23.28.54;	author jeremy;	state Exp;
branches;
next	1.9;

1.9
date	2010.09.28.20.12.17;	author jeremy;	state Exp;
branches;
next	1.8;

1.8
date	2010.09.23.22.30.26;	author jeremy;	state Exp;
branches;
next	1.7;

1.7
date	2009.08.20.22.02.53;	author bernd;	state Exp;
branches;
next	1.6;

1.6
date	2009.02.01.13.37.36;	author bernd;	state Exp;
branches;
next	1.5;

1.5
date	2009.01.24.17.52.35;	author bernd;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.24.22.25.59;	author bernd;	state Exp;
branches;
next	1.3;

1.3
date	2008.07.26.11.55.56;	author bernd;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.14.23.46.38;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2008.02.02.11.08.45;	author bernd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.02.02.11.08.45;	author bernd;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Remove MODRUBY_RAKE_DEPENDS.  Only necessary on ruby 1.8, and none of
the ports that use it are still built with ruby 1.8.

OK ajacoutot@@
@
text
@# $OpenBSD: Makefile,v 1.19 2014/01/15 12:33:45 jasper Exp $

COMMENT =	Ruby library for mocking and stubbing

DISTNAME =	mocha-0.13.3
REVISION =	1
CATEGORIES =	devel

HOMEPAGE =	http://mocha.rubyforge.org/

# MIT License
PERMIT_PACKAGE_CDROM =   Yes

MODULES =	lang/ruby

BUILD_DEPENDS =	${RUN_DEPENDS}
RUN_DEPENDS =	devel/ruby-metaclass,${MODRUBY_FLAVOR}

CONFIGURE_STYLE = ruby gem

.include <bsd.port.mk>
@


1.19
log
@disable tests as they require several unported gems (i.e. introspection)
or version of gems we no longer have in ports (i.e. redcarpet >=1,<2)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2013/10/26 23:55:35 jeremy Exp $
d6 1
a6 1
REVISION =	0
d17 1
a17 2
RUN_DEPENDS =	${MODRUBY_RAKE_DEPENDS} \
		devel/ruby-metaclass,${MODRUBY_FLAVOR}
@


1.18
log
@Bump all ruby gem ports supporting rbx FLAVOR due to change to rubinius
gem directory when upgrading rubinius from 1.2.4 to 2.1.1.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2013/04/26 12:18:20 jasper Exp $
a20 4

# 7 failures on ruby 1.8, passes on ruby 1.9
MODRUBY_TEST = rake
MODRUBY_TEST_TARGET = test:acceptance test:units
@


1.17
log
@- update to mocha-0.13.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2013/03/11 10:50:30 espie Exp $
d6 1
@


1.16
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2012/09/23 16:57:34 jeremy Exp $
d5 1
a5 2
DISTNAME =	mocha-0.9.12
REVISION =	0
d16 2
a17 1
RUN_DEPENDS =	${MODRUBY_RAKE_DEPENDS}
@


1.15
log
@Bump revisions for ruby gem/extconf ports after the switch to ruby 1.9
by default, since the ruby 1.8 version now has a ruby18 explicit FLAVOR.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2011/11/17 15:41:11 jeremy Exp $
a12 3
PERMIT_PACKAGE_FTP =     Yes
PERMIT_DISTFILES_CDROM = Yes
PERMIT_DISTFILES_FTP =   Yes
d22 2
a23 2
MODRUBY_REGRESS = rake
MODRUBY_REGRESS_TARGET = test:acceptance test:units
@


1.14
log
@Update ruby-mocha to 0.9.12, since some dependent ports require
functionality not in 0.9.7.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2011/09/16 09:24:57 espie Exp $
d6 1
@


1.13
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2011/01/06 04:24:23 jeremy Exp $
d5 1
a5 2
DISTNAME =	mocha-0.9.7
REVISION =	4
d23 1
d25 1
a25 1
RAKE_REGRESS_TARGET = test:acceptance test:units
@


1.12
log
@REVISION bump for rbx FLAVOR PLIST change.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2010/11/24 21:35:14 jeremy Exp $
d6 1
a6 1
REVISION =	3
@


1.11
log
@REVISION bump all ruby ports due to a change in the pkgspec.
Previously, we were using ruby->=1.8,<=1.9, instead of
ruby->=1.8,<1.9.  While this wouldn't cause an issue, since
our ruby-1.9.2 package isn't included in ruby->=1.8,<=1.9,
it's still wrong and should be fixed.  This also fixes the
following minor issues:

Switch from using FLAVOR to MODRUBY_FLAVOR for *_DEPENDS.
Currently we don't have a ruby port that uses FLAVORs that
would differ from MODRUBY_FLAVOR, but it's possible we will
in the future.

Switch from BASE_PKGPATH to BUILD_PKGPATH in a few cases in
REGRESS_DEPENDS.  This probably is not strictly necessary, but
BUILD_PKGPATH is used in more cases, so it is good for
consistency.

Switch to new style *_DEPENDS, with the version specification
at the end.  The remaining cases where this is not done is
because a specific version is used.

Some FULLPKGNAME added to REGRESS_DEPENDS, to make sure that if
the old version is installed when you run a regress test, it
will install the new version first.

Some conversion of spaces to tabs for consistency.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2010/11/08 23:28:54 jeremy Exp $
d6 1
a6 1
REVISION =	2
@


1.10
log
@REVISION bumps for most ruby ports after the ruby.port.mk update.

PKG_ARCH = * removed from many ports as it is added automatically
for pure ruby gem ports.  Switch ports that previously used
GEM_SKIPDEPENDS to adding dependencies or modifying the underlying
gem metadata with patches.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2010/09/28 20:12:17 jeremy Exp $
d6 1
a6 1
REVISION =	1
@


1.9
log
@Remove MASTER_SITES from most ruby gem ports, specify it in ruby.port.mk

All ruby .gem files are now hosted on rubygems.org in the same
directory.  If the ruby gem CONFIGURE_STYLE is used, make the
default MASTER_SITES that directory.

There are still a few uses of MASTER_SITE_RUBYFORGE in the tree, for
some ports that aren't gems, or where the .gem file isn't hosted on
rubygems.org, or where the hashes don't match.  Most of these will be
dealt with in the near future.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2010/09/23 22:30:26 jeremy Exp $
d3 1
a3 1
COMMENT=	Ruby library for mocking and stubbing
d5 3
a7 4
DISTNAME=	mocha-0.9.7
PKGNAME=	ruby-${DISTNAME}
REVISION =      0
CATEGORIES=     devel
d9 1
a9 1
HOMEPAGE=	http://mocha.rubyforge.org/
d12 4
a15 4
PERMIT_PACKAGE_CDROM=   Yes
PERMIT_PACKAGE_FTP=     Yes
PERMIT_DISTFILES_CDROM= Yes
PERMIT_DISTFILES_FTP=   Yes
d17 1
a17 1
MODULES=	lang/ruby
d19 2
a20 2
BUILD_DEPENDS=	${RUN_DEPENDS}
RUN_DEPENDS=	::devel/ruby-rake
d22 1
a22 3
CONFIGURE_STYLE=ruby gem

PKG_ARCH=	*
@


1.8
log
@Bump all ruby ports not already handled.

In the upgrade from ruby 1.8.6 to 1.8.7, the PLISTs changed
due to differences in how RDoc processes files.

This also has a number of changes to the regress tests to
work with the changes to devel/ruby-rake.  It moves most of
the regress tests to use MODRUBY_REGRESS.

OK jcs@@, landry@@, jasper@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2009/08/20 22:02:53 bernd Exp $
a16 2

MASTER_SITES=	${MASTER_SITE_RUBYFORGE:=mocha/}
@


1.7
log
@Update to ruby-mocha-0.9.7 and use MODRUBY_REGRESS.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2009/02/01 13:37:36 bernd Exp $
d7 1
@


1.6
log
@Update to ruby-mocha-0.9.5.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2009/01/24 17:52:35 bernd Exp $
d5 1
a5 1
DISTNAME=	mocha-0.9.5
d28 2
a29 2
do-regress:
	@@cd ${WRKBUILD} && ${LOCALBASE}/bin/rake test:acceptance test:units
@


1.5
log
@Update to ruby-mocha-0.9.4.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2008/10/24 22:25:59 bernd Exp $
d5 1
a5 1
DISTNAME=	mocha-0.9.4
@


1.4
log
@Update to ruby-mocha-0.9.1.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2008/07/26 11:55:56 bernd Exp $
d5 1
a5 1
DISTNAME=	mocha-0.9.1
@


1.3
log
@Update to ruby-mocha-0.9.0.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2008/06/14 23:46:38 landry Exp $
d3 1
a3 1
COMMENT=	ruby library for mocking and stubbing
d5 1
a5 1
DISTNAME=	mocha-0.9.0
@


1.2
log
@bump PKGNAMEs after lang/ruby module change.
Fix CATEGORIES in rdt eclipse plugin.
in subversion, only bump subpackages that use lang/ruby module.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2008/02/02 11:08:45 bernd Exp $
d5 2
a6 2
DISTNAME=	mocha-0.5.6
PKGNAME=	ruby-${DISTNAME}p0
d29 1
a29 1
	@@cd ${WRKBUILD} && ${LOCALBASE}/bin/rake test_all
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d6 1
a6 1
PKGNAME=	ruby-${DISTNAME}
@


1.1.1.1
log
@Initial import of ruby-mocha-0.5.6.

Mocha is a library for mocking and stubbing using a syntax like that of
JMock, and SchMock. Most commonly Mocha is used in conjunction with
Test::Unit, but it can be used in other contexts.

One of its main advantages is that it allows you to mock and stub methods
on real (non-mock) classes and instances. You can for example stub
ActiveRecord instance methods like create, save, destroy and even class
methods like find to avoid hitting the database in unit tests.

Mocha provides a unified, simple and readable syntax for both traditional
mocking and for mocking with real objects.
@
text
@@
