head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	jasper_20130803:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2014.04.17.17.12.08;	author jasper;	state dead;
branches;
next	1.6;

1.6
date	2013.03.11.13.02.16;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2013.03.11.10.50.03;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2013.03.10.20.11.41;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2013.03.10.19.35.26;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.10.19.20.06;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2013.03.08.11.57.32;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.08.11.57.32;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.7
log
@remove dead wood, if someone wants to port chef-server they're in for
bigger pain than just reviving these ports.

as discussed with phessler@@
ok aja@@
@
text
@# $OpenBSD: Makefile,v 1.6 2013/03/11 13:02:16 jasper Exp $

COMMENT=	expose Erlang events and metrics

VERSION=	0.7.4
DISTNAME=	folsom-${VERSION}
PKGNAME=	erl-${DISTNAME}
REVISION=	0
CATEGORIES=	devel

HOMEPAGE=	https://github.com/boundary/jiffy

# Apache2
PERMIT_PACKAGE_CDROM=	Yes

MASTER_SITES=	http://distfiles.nl/

MODULES=	lang/erlang

RUN_DEPENDS=	devel/erl-automeck \
		devel/erl-bear

ERL_APP_SUBST=	Yes

do-build:
	cd ${WRKSRC} && ${REBAR_BIN} compile

do-test:
	cd ${WRKSRC} && ${REBAR_BIN} eunit

do-install:
	${INSTALL_DATA_DIR} ${ERL_LIBDIR}/{ebin,include,src}
	${INSTALL_DATA} ${WRKSRC}/ebin/*.{app,beam} ${ERL_LIBDIR}/ebin/
	${INSTALL_DATA} ${WRKSRC}/include/*.hrl ${ERL_LIBDIR}/include/
	${INSTALL_DATA} ${WRKSRC}/src/*.erl ${ERL_LIBDIR}/src/

.include <bsd.port.mk>
@


1.6
log
@drop now-unneeded pre-configure and use ERL_APP_SUBST instead.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2013/03/11 10:50:03 espie Exp $
@


1.5
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/03/10 20:11:41 jasper Exp $
d23 1
a23 2
pre-configure:
	${SUBST_CMD} ${WRKSRC}/src/folsom.app.src
@


1.4
log
@- use REBAR_BIN where applicable
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/03/10 19:35:26 jasper Exp $
a14 2
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_FTP=	Yes
d29 1
a29 1
do-regress:
@


1.3
log
@- remove now unneeded CONFIGURE_STYLE
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/03/10 19:20:06 jasper Exp $
d29 1
a29 1
	cd ${WRKSRC} && ${LOCALBASE}/bin/rebar compile
d32 1
a32 1
	cd ${WRKSRC} && ${LOCALBASE}/bin/rebar eunit
@


1.2
log
@switch to the erlang module, so more stuff may be factored into the module, but
it's a good start.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/03/08 11:57:32 jasper Exp $
a21 1
CONFIGURE_STYLE=rebar
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d8 2
a9 1
CATEGORIES=	devel lang/erlang
a18 1
TAR=		${LOCALBASE}/bin/gtar
d20 3
a22 2
BUILD_DEPENDS=	archivers/gtar \
		devel/rebar
d24 1
a24 5
		devel/erl-bear \
		lang/erlang

ERL_LIBDIR=	${PREFIX}/lib/erlang/lib/${DISTNAME}
SUBST_VARS+=	VERSION
@


1.1.1.1
log
@import erl-folsom

Folsom is an Erlang based metrics system inspired by Coda Hale's
metrics. The metrics API's purpose is to collect realtime metrics from
your Erlang applications and publish them via Erlang APIs and output
plugins. folsom is not a persistent store. There are 6 types of metrics:
counters, gauges, histograms (and timers), histories, meter_readers and
meters. Metrics can be created, read and updated via the folsom_metrics
module.

ok aja@@
@
text
@@
