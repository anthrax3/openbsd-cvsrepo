head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2017.08.26.14.05.56;	author kurt;	state dead;
branches;
next	1.1;
commitid	16njjQJvmWo8AAxV;

1.1
date	2017.04.24.15.25.49;	author kurt;	state Exp;
branches;
next	;
commitid	x5C9z7JxzolsJkBH;


desc
@@


1.2
log
@- Update to u131

Contains upstream bug fixes and security fixes which can be viewed here:
http://www.oracle.com/technetwork/java/javase/8u131-relnotes-3565278.html

- Remove patches committed to upstream bsd-port repo.

okay sthen@@
@
text
@$OpenBSD: patch-hotspot_src_share_vm_opto_loopPredicate_cpp,v 1.1 2017/04/24 15:25:49 kurt Exp $
--- hotspot/src/share/vm/opto/loopPredicate.cpp.orig	Sun Apr 23 11:47:46 2017
+++ hotspot/src/share/vm/opto/loopPredicate.cpp	Sun Apr 23 11:48:21 2017
@@@@ -778,7 +778,7 @@@@ bool PhaseIdealLoop::loop_predication_impl(IdealLoopTr
       Node*          idx    = cmp->in(1);
       assert(!invar.is_invariant(idx), "index is variant");
       Node* rng = cmp->in(2);
-      assert(rng->Opcode() == Op_LoadRange || _igvn.type(rng)->is_int() >= 0, "must be");
+      assert(rng->Opcode() == Op_LoadRange || _igvn.type(rng)->is_int(), "must be");
       assert(invar.is_invariant(rng), "range must be invariant");
       int scale    = 1;
       Node* offset = zero;
@


1.1
log
@- fix clang + fastdebug issue in loopPredicate.cpp
- use HW_PHYSMEM64 to correct assert in fastdebug
@
text
@d1 1
a1 1
$OpenBSD$
@

