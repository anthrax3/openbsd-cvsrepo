head	1.6;
access;
symbols
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2011.09.22.20.26.47;	author kurt;	state dead;
branches;
next	1.5;

1.5
date	2011.01.11.15.47.49;	author kurt;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.07.01.53.54;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.23.03.27.41;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.23.03.03.24;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2009.01.04.23.25.16;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update devel/jdk/1.7 to b147 / non-beta
- Remove Early Access now that jdk 1.7 is final
- Use a patch set for all patches from upstream repository:
  http://hg.openjdk.java.net/bsd-port/bsd-port
- Set milestone and build number to fcs b00 to match Oracle.
- Update cacerts file.
- Install unlimited crypto policy.
- Add DIST_SUBDIR=jdk.
- Include patches from icedtea-web for applet hole from
  Landry Breuil <landry@@openbsd.org> via FreeBSD OpenJDK7 port
- Include fix for Oracle bug "7070134: Hotspot crashes with
  sigsegv from PorterStemmer":
  http://hg.openjdk.java.net/hsx/hotspot-comp/hotspot/rev/4e761e7e6e12
okay landry@@ jasper@@
@
text
@$OpenBSD: patch-hotspot_src_cpu_x86_vm_interp_masm_x86_32_cpp,v 1.5 2011/01/11 15:47:49 kurt Exp $
--- hotspot/src/cpu/x86/vm/interp_masm_x86_32.cpp.orig	Fri Aug 13 03:28:18 2010
+++ hotspot/src/cpu/x86/vm/interp_masm_x86_32.cpp	Mon Oct 25 18:15:45 2010
@@@@ -1153,7 +1153,7 @@@@ void InterpreterMacroAssembler::record_klass_in_profil
   int recvr_offset = in_bytes(VirtualCallData::receiver_offset(start_row));
   set_mdp_data_at(mdp, recvr_offset, receiver);
   int count_offset = in_bytes(VirtualCallData::receiver_count_offset(start_row));
-  movptr(reg2, (int32_t)DataLayout::counter_increment);
+  movptr(reg2, (intptr_t)DataLayout::counter_increment);
   set_mdp_data_at(mdp, count_offset, reg2);
   if (start_row > 0) {
     jmp(done);
@@@@ -1296,7 +1296,7 @@@@ void InterpreterMacroAssembler::profile_switch_case(Re
     test_method_data_pointer(mdp, profile_continue);
 
     // Build the base (index * per_case_size_in_bytes()) + case_array_offset_in_bytes()
-    movptr(reg2, (int32_t)in_bytes(MultiBranchData::per_case_size()));
+    movptr(reg2, (intptr_t)in_bytes(MultiBranchData::per_case_size()));
     // index is positive and so should have correct value if this code were
     // used on 64bits
     imulptr(index, reg2);
@


1.5
log
@Update to early access build 122. okay jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-hotspot_src_cpu_x86_vm_interp_masm_x86_32_cpp,v 1.4 2009/10/07 01:53:54 kurt Exp $
@


1.4
log
@Update to early access build 72 plus the following:
- sync patches with upstream repo: OpenJDK/bds-port
- fix gtk look and feel issue caused by dlopen of non-matching major
- fix other dlopen's of non-matching majors
- change max memory utilization on i386 to correct build failures
@
text
@d1 4
a4 34
$OpenBSD: patch-hotspot_src_cpu_x86_vm_interp_masm_x86_32_cpp,v 1.3 2009/05/23 03:27:41 kurt Exp $
--- hotspot/src/cpu/x86/vm/interp_masm_x86_32.cpp.orig	Thu Sep 17 03:48:09 2009
+++ hotspot/src/cpu/x86/vm/interp_masm_x86_32.cpp	Sat Sep 26 10:00:47 2009
@@@@ -452,10 +452,10 @@@@ void InterpreterMacroAssembler::store_ptr_and_tag(int 
 void InterpreterMacroAssembler::tag_local(frame::Tag tag, int n) {
   if (TaggedStackInterpreter) {
     if (tag == frame::TagCategory2) {
-      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n+1)), (int32_t)frame::TagValue);
-      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n)), (int32_t)frame::TagValue);
+      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n+1)), (intptr_t)frame::TagValue);
+      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n)), (intptr_t)frame::TagValue);
     } else {
-      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n)), (int32_t)tag);
+      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n)), (intptr_t)tag);
     }
   }
 }
@@@@ -464,12 +464,12 @@@@ void InterpreterMacroAssembler::tag_local(frame::Tag t
   if (TaggedStackInterpreter) {
     if (tag == frame::TagCategory2) {
       movptr(Address(rdi, idx, Interpreter::stackElementScale(),
-                  Interpreter::local_tag_offset_in_bytes(1)), (int32_t)frame::TagValue);
+                  Interpreter::local_tag_offset_in_bytes(1)), (intptr_t)frame::TagValue);
       movptr(Address(rdi, idx, Interpreter::stackElementScale(),
-                    Interpreter::local_tag_offset_in_bytes(0)), (int32_t)frame::TagValue);
+                    Interpreter::local_tag_offset_in_bytes(0)), (intptr_t)frame::TagValue);
     } else {
       movptr(Address(rdi, idx, Interpreter::stackElementScale(),
-                               Interpreter::local_tag_offset_in_bytes(0)), (int32_t)tag);
+                               Interpreter::local_tag_offset_in_bytes(0)), (intptr_t)tag);
     }
   }
 }
@@@@ -1315,7 +1315,7 @@@@ void InterpreterMacroAssembler::record_klass_in_profil
d11 3
a13 3
   jmp(done);
 }
@@@@ -1456,7 +1456,7 @@@@ void InterpreterMacroAssembler::profile_switch_case(Re
@


1.3
log
@- These patches were updated not removed. ?!?!
@
text
@d1 3
a3 3
$OpenBSD$
--- hotspot/src/cpu/x86/vm/interp_masm_x86_32.cpp.orig	Sat May 16 22:35:34 2009
+++ hotspot/src/cpu/x86/vm/interp_masm_x86_32.cpp	Sat May 16 22:35:56 2009
d43 1
a43 1
@@@@ -1454,7 +1454,7 @@@@ void InterpreterMacroAssembler::profile_switch_case(Re
@


1.2
log
@- update from early access b43 to b59
- sync patches with OpenJDK's bsd_port project
- require a pre-installed package for native_bootstrap
- The new 1.7 class java.nio.channels.spi.AsynchronousChannelProvider
  is not implemented yet on BSD.
- The new 1.7 package java.nio.sctp is not included and not supported on
  OpenBD
@
text
@d1 4
a4 24
$OpenBSD: patch-hotspot_src_cpu_x86_vm_interp_masm_x86_32_cpp,v 1.1 2009/01/04 23:25:16 kurt Exp $
--- hotspot/src/cpu/x86/vm/interp_masm_x86_32.cpp.orig	Fri Dec 19 03:42:04 2008
+++ hotspot/src/cpu/x86/vm/interp_masm_x86_32.cpp	Tue Dec 30 00:12:45 2008
@@@@ -133,7 +133,7 @@@@ void InterpreterMacroAssembler::load_earlyret_value(To
                              + in_ByteSize(wordSize));
   switch (state) {
     case atos: movptr(rax, oop_addr);
-               movptr(oop_addr, (int32_t)NULL_WORD);
+               movptr(oop_addr, NULL_WORD);
                verify_oop(rax, state);                break;
     case ltos:
                movl(rdx, val_addr1);               // fall through
@@@@ -148,8 +148,8 @@@@ void InterpreterMacroAssembler::load_earlyret_value(To
   }
   // Clean up tos value in the thread object
   movl(tos_addr,  (int32_t) ilgl);
-  movptr(val_addr,  (int32_t)NULL_WORD);
-  NOT_LP64(movl(val_addr1, (int32_t)NULL_WORD));
+  movptr(val_addr,  NULL_WORD);
+  NOT_LP64(movptr(val_addr1, NULL_WORD));
 }
 
 
@@@@ -470,10 +470,10 @@@@ void InterpreterMacroAssembler::store_ptr_and_tag(int 
d18 1
a18 1
@@@@ -482,12 +482,12 @@@@ void InterpreterMacroAssembler::tag_local(frame::Tag t
d34 11
a44 6
@@@@ -944,7 +944,7 @@@@ void InterpreterMacroAssembler::unlock_object(Register
     movptr(obj_reg, Address(lock_reg, BasicObjectLock::obj_offset_in_bytes ()));
 
     // Free entry
-    movptr(Address(lock_reg, BasicObjectLock::obj_offset_in_bytes()), (int32_t)NULL_WORD);
+    movptr(Address(lock_reg, BasicObjectLock::obj_offset_in_bytes()), NULL_WORD);
d46 6
a51 2
     if (UseBiasedLocking) {
       biased_locking_exit(obj_reg, header_reg, done);
@


1.1
log
@Update to early access build 42:
- sync/regen patches
- use os_bsd_x86.cpp from OpenJDK bsd-java repository plus
  Greg Lewis's fixes posted to the bsd-port-dev list
- use Xiaobin Lu's datatype corrections from OpenJDK bug
  6787106 + additional datatype corrections from me.
- use Vladimir Kozlov's bug fix from OpenJDK bug 6782820
- remove obsolete IcedTea awt binary plugs and update binary
  plug distfile
- correctly define DEVTOOLS_PATH for bsd and verify + correct
  Defs-utils.gmk locations for bsd utilities
@
text
@d1 1
a1 1
$OpenBSD$
@

