head	1.4;
access;
symbols
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.09.22.20.26.48;	author kurt;	state dead;
branches;
next	1.3;

1.3
date	2011.01.11.15.47.50;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.07.01.53.54;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.23.03.03.25;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update devel/jdk/1.7 to b147 / non-beta
- Remove Early Access now that jdk 1.7 is final
- Use a patch set for all patches from upstream repository:
  http://hg.openjdk.java.net/bsd-port/bsd-port
- Set milestone and build number to fcs b00 to match Oracle.
- Update cacerts file.
- Install unlimited crypto policy.
- Add DIST_SUBDIR=jdk.
- Include patches from icedtea-web for applet hole from
  Landry Breuil <landry@@openbsd.org> via FreeBSD OpenJDK7 port
- Include fix for Oracle bug "7070134: Hotspot crashes with
  sigsegv from PorterStemmer":
  http://hg.openjdk.java.net/hsx/hotspot-comp/hotspot/rev/4e761e7e6e12
okay landry@@ jasper@@
@
text
@$OpenBSD: patch-jdk_src_solaris_classes_sun_nio_fs_BsdFileStore_java,v 1.3 2011/01/11 15:47:50 kurt Exp $
--- jdk/src/solaris/classes/sun/nio/fs/BsdFileStore.java.orig	Mon Nov  1 13:15:34 2010
+++ jdk/src/solaris/classes/sun/nio/fs/BsdFileStore.java	Mon Nov  1 13:16:30 2010
@@@@ -36,10 +36,6 @@@@ import java.io.IOException;
 class BsdFileStore
     extends UnixFileStore
 {
-    // used when checking if extended attributes are enabled or not
-    private volatile boolean xattrChecked;
-    private volatile boolean xattrEnabled;
-
     BsdFileStore(UnixPath file) throws IOException {
         super(file);
     }
@@@@ -54,7 +50,7 @@@@ class BsdFileStore
      */
     @@Override
     UnixMountEntry findMountEntry() throws IOException {
-        BsdFileSystem fs = (BsdFileSystem)file().getFileSystem();
+        UnixFileSystem fs = file().getFileSystem();
 
         // step 1: get realpath
         UnixPath path = null;
@@@@ -80,20 +76,20 @@@@ class BsdFileStore
             parent = parent.getParent();
         }
 
-        // step 3: lookup mounted file systems (use /proc/mounts to ensure we
-        // find the file system even when not in /etc/mtab)
+        // step 3: lookup mounted file systems
         byte[] dir = path.asByteArray();
-        for (UnixMountEntry entry: fs.getMountEntries("/proc/mounts")) {
+        for (UnixMountEntry entry: fs.getMountEntries()) {
             if (Arrays.equals(dir, entry.dir()))
                 return entry;
         }
 
-        throw new IOException("Mount point not found");
+        throw new IOException("Mount point not found in fstab");
     }
 
     // returns true if extended attributes enabled on file system where given
     // file resides, returns false if disabled or unable to determine.
     private boolean isExtendedAttributesEnabled(UnixPath path) {
+/*
         try {
             int fd = path.openForAttributeAccess(false);
             try {
@@@@ -110,11 +106,13 @@@@ class BsdFileStore
         } catch (IOException ignore) {
             // nothing we can do
         }
+*/
         return false;
     }
 
     @@Override
     public boolean supportsFileAttributeView(Class<? extends FileAttributeView> type) {
+/*
         // support DosFileAttributeView and UserDefinedAttributeView if extended
         // attributes enabled
         if (type == DosFileAttributeView.class ||
@@@@ -145,15 +143,18 @@@@ class BsdFileStore
             }
             return xattrEnabled;
         }
+*/
         return super.supportsFileAttributeView(type);
     }
 
     @@Override
     public boolean supportsFileAttributeView(String name) {
+/*
         if (name.equals("dos"))
             return supportsFileAttributeView(DosFileAttributeView.class);
         if (name.equals("user"))
             return supportsFileAttributeView(UserDefinedFileAttributeView.class);
+*/
         return super.supportsFileAttributeView(name);
     }
 }
@


1.3
log
@Update to early access build 122. okay jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-jdk_src_solaris_classes_sun_nio_fs_BsdFileStore_java,v 1.2 2009/10/07 01:53:54 kurt Exp $
@


1.2
log
@Update to early access build 72 plus the following:
- sync patches with upstream repo: OpenJDK/bds-port
- fix gtk look and feel issue caused by dlopen of non-matching major
- fix other dlopen's of non-matching majors
- change max memory utilization on i386 to correct build failures
@
text
@d1 3
a3 3
$OpenBSD: patch-jdk_src_solaris_classes_sun_nio_fs_BsdFileStore_java,v 1.1 2009/05/23 03:03:25 kurt Exp $
--- jdk/src/solaris/classes/sun/nio/fs/BsdFileStore.java.orig	Sun Sep 27 11:02:06 2009
+++ jdk/src/solaris/classes/sun/nio/fs/BsdFileStore.java	Sun Sep 27 15:26:14 2009
d81 1
a81 1
 
@


1.1
log
@- update from early access b43 to b59
- sync patches with OpenJDK's bsd_port project
- require a pre-installed package for native_bootstrap
- The new 1.7 class java.nio.channels.spi.AsynchronousChannelProvider
  is not implemented yet on BSD.
- The new 1.7 package java.nio.sctp is not included and not supported on
  OpenBD
@
text
@d1 4
a4 4
$OpenBSD$
--- jdk/src/solaris/classes/sun/nio/fs/BsdFileStore.java.orig	Tue May 19 11:45:53 2009
+++ jdk/src/solaris/classes/sun/nio/fs/BsdFileStore.java	Tue May 19 11:46:23 2009
@@@@ -35,10 +35,6 @@@@ import java.io.IOException;
d15 20
a34 1
@@@@ -86,12 +82,13 @@@@ class BsdFileStore
d38 1
a38 1
-        throw new IOException("Mount point not found in mtab");
d49 1
a49 1
@@@@ -108,11 +105,13 @@@@ class BsdFileStore
d58 1
a58 1
     public boolean supportsFileAttributeView(String name) {
d60 1
a60 1
         // support DosFileAttributeView and NamedAttributeView if extended
d62 2
a63 2
         if (name.equals("dos") || name.equals("xattr")) {
@@@@ -141,7 +140,7 @@@@ class BsdFileStore
d67 11
a77 1
-
@

