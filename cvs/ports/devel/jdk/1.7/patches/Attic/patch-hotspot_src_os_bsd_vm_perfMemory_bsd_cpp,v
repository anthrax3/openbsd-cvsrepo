head	1.3;
access;
symbols
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	kurt_20070508:1.1.1.1
	kurt:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2008.06.28.12.34.58;	author kurt;	state dead;
branches;
next	1.2;

1.2
date	2008.03.19.18.05.43;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.08.17.06.19;	author kurt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.05.08.17.06.19;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@- remove work-arounds for missing getpwuid_r now that we have it
- regen pkg files with @@bin markers
@
text
@$OpenBSD: patch-hotspot_src_os_bsd_vm_perfMemory_bsd_cpp,v 1.2 2008/03/19 18:05:43 kurt Exp $
--- hotspot/src/os/bsd/vm/perfMemory_bsd.cpp.orig	Wed Nov  7 12:41:29 2007
+++ hotspot/src/os/bsd/vm/perfMemory_bsd.cpp	Wed Nov  7 12:41:35 2007
@@@@ -230,6 +230,7 @@@@ static bool is_directory_secure(const char* path) {
 //
 static char* get_user_name(uid_t uid) {
 
+#ifndef _ALLBSD_SOURCE
   struct passwd pwent;
 
   // determine the max pwbuf size from sysconf, and hardcode
@@@@ -280,6 +281,26 @@@@ static char* get_user_name(uid_t uid) {
 
   FREE_C_HEAP_ARRAY(char, pwbuf);
   return user_name;
+
+#else
+
+  struct passwd* p = getpwuid(uid);
+  if (PrintMiscellaneous && Verbose) {
+    if (p == NULL) {
+      jio_fprintf(stderr, "Could not retrieve passwd entry: %s\n",
+                          strerror(errno));
+    }
+    else {
+      jio_fprintf(stderr, "Could not determine user name: %s\n",
+                           p->pw_name == NULL ? "pw_name = NULL" :
+                                                "pw_name zero length");
+    }
+  }
+
+  char* user_name = NEW_C_HEAP_ARRAY(char, strlen(p->pw_name) + 1);
+  strcpy(user_name, p->pw_name);
+  return user_name;
+#endif
 }
 
 // return the name of the user that owns the process identified by vmid.
@


1.2
log
@- switch to GPLv2 w/CLASSPATH exception licensed openjdk7 code
- update to early access build 24
- Use GPLv2 licensed binary plugs from the IcedTea project and parts of
  IcedTea's icedtea-copy-plugs.patch & icedtea-graphics.patch.
  For more info see:
    http://icedtea.classpath.org/wiki/Main_Page
- Enable packages since we're fully GPLv2 based now, but still not
  hooked up to bulk builds just yet.
@
text
@d1 1
a1 1
$OpenBSD: patch-hotspot_src_os_bsd_vm_perfMemory_bsd_cpp,v 1.1.1.1 2007/05/08 17:06:19 kurt Exp $
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- hotspot/src/os/bsd/vm/perfMemory_bsd.cpp.orig	Mon Apr 16 08:42:36 2007
+++ hotspot/src/os/bsd/vm/perfMemory_bsd.cpp	Mon Apr 16 08:42:39 2007
@@@@ -233,6 +233,7 @@@@ static bool is_directory_secure(const char* path) {
d12 1
a12 1
@@@@ -283,6 +284,26 @@@@ static char* get_user_name(uid_t uid) {
@


1.1.1.1
log
@Initial import of jdk 1.7 (a.k.a. OpenJDK 7) work in progress. So far Sun
has released the hotspot portion of 1.7 under GPLv2. j2se and deploy
(plugin & webstart) will come later. No packages yet since j2se is copied
in from 1.5.

Note: hotspot for BSD in previous versions of the jdk were based on a
mixture of Solaris code and Linux code (for amd64). In this version I have
selected Linux as the base and only ported of small parts of the Solaris
code as needed. Using Linux code as the base has significantly reduced the
code divergence for BSD support and should make maintaining the port
easier.

okay ian@@, go for it espie@@
@
text
@@
