head	1.4;
access;
symbols
	OPENBSD_5_0:1.3.0.8
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.09.22.20.26.48;	author kurt;	state dead;
branches;
next	1.3;

1.3
date	2009.10.07.01.53.54;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.23.03.03.25;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2008.03.19.18.05.46;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update devel/jdk/1.7 to b147 / non-beta
- Remove Early Access now that jdk 1.7 is final
- Use a patch set for all patches from upstream repository:
  http://hg.openjdk.java.net/bsd-port/bsd-port
- Set milestone and build number to fcs b00 to match Oracle.
- Update cacerts file.
- Install unlimited crypto policy.
- Add DIST_SUBDIR=jdk.
- Include patches from icedtea-web for applet hole from
  Landry Breuil <landry@@openbsd.org> via FreeBSD OpenJDK7 port
- Include fix for Oracle bug "7070134: Hotspot crashes with
  sigsegv from PorterStemmer":
  http://hg.openjdk.java.net/hsx/hotspot-comp/hotspot/rev/4e761e7e6e12
okay landry@@ jasper@@
@
text
@$OpenBSD: patch-jdk_src_solaris_native_java_util_TimeZone_md_c,v 1.3 2009/10/07 01:53:54 kurt Exp $
--- jdk/src/solaris/native/java/util/TimeZone_md.c.orig	Thu Sep 17 03:52:32 2009
+++ jdk/src/solaris/native/java/util/TimeZone_md.c	Sun Sep 27 10:26:02 2009
@@@@ -31,7 +31,7 @@@@
 #include <errno.h>
 #include <stddef.h>
 
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
 #include <string.h>
 #include <dirent.h>
 #include <sys/stat.h>
@@@@ -49,7 +49,11 @@@@
 #define fileclose       fclose
 #endif
 
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
+
 #ifdef __linux__
+static const char *sysconfig_clock_file = "/etc/sysconfig/clock";
+#endif
 
 static const char *ETC_TIMEZONE_FILE = "/etc/timezone";
 static const char *ZONEINFO_DIR = "/usr/share/zoneinfo";
@@@@ -199,7 +203,9 @@@@ getPlatformTimeZoneID()
     int fd;
     char *buf;
     size_t size;
+    char zoneinfo_file[PATH_MAX+1];
 
+#ifdef __linux__
     /*
      * Try reading the /etc/timezone file for Debian distros. There's
      * no spec of the file format available. This parsing assumes that
@@@@ -223,6 +229,7 @@@@ getPlatformTimeZoneID()
             return tz;
         }
     }
+#endif /* __linux__ */
 
     /*
      * Next, try /etc/localtime to find the zone ID.
@@@@ -231,6 +238,10 @@@@ getPlatformTimeZoneID()
         return NULL;
     }
 
+    strncpy(zoneinfo_file, DEFAULT_ZONEINFO_FILE, PATH_MAX);
+    zoneinfo_file[PATH_MAX] = '\0';
+
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
     /*
      * If it's a symlink, get the link name and its zone ID part. (The
      * older versions of timeconfig created a symlink as described in
@@@@ -239,21 +250,25 @@@@ getPlatformTimeZoneID()
      * from /etc/localtime.)
      */
     if (S_ISLNK(statbuf.st_mode)) {
-        char linkbuf[PATH_MAX+1];
         int len;
 
-        if ((len = readlink(DEFAULT_ZONEINFO_FILE, linkbuf, sizeof(linkbuf)-1)) == -1) {
+	if ((len = readlink(DEFAULT_ZONEINFO_FILE, zoneinfo_file, sizeof(zoneinfo_file)-1)) == -1) {
             jio_fprintf(stderr, (const char *) "can't get a symlink of %s\n",
                         DEFAULT_ZONEINFO_FILE);
             return NULL;
         }
-        linkbuf[len] = '\0';
-        tz = getZoneName(linkbuf);
+	zoneinfo_file[len] = '\0';
+	tz = getZoneName(zoneinfo_file);
         if (tz != NULL) {
             tz = strdup(tz);
+	    return tz;
+	} else {
+	    if (lstat(zoneinfo_file, &statbuf) == -1) {
+		return NULL;
+	    }
         }
-        return tz;
     }
+#endif /* __linux__ || _ALLBSD_SOURCE */
 
     /*
      * If it's a regular file, we need to find out the same zoneinfo file
@@@@ -264,7 +279,7 @@@@ getPlatformTimeZoneID()
     if (buf == NULL) {
         return NULL;
     }
-    if ((fd = open(DEFAULT_ZONEINFO_FILE, O_RDONLY)) == -1) {
+    if ((fd = open(zoneinfo_file, O_RDONLY)) == -1) {
         free((void *) buf);
         return NULL;
     }
@@@@ -493,7 +508,7 @@@@ findJavaTZ_md(const char *java_home_dir, const char *c
 
     tz = getenv("TZ");
 
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
     if (tz == NULL) {
 #else
 #ifdef __solaris__
@@@@ -532,19 +547,32 @@@@ getGMTOffsetID()
 {
     time_t offset;
     char sign, buf[16];
+#if defined(_ALLBSD_SOURCE)
+    struct tm *local_tm;
+    time_t clock;
+ 
+    clock = time(NULL);
+    tzset();
+    local_tm = localtime(&clock);
+    if (local_tm->tm_gmtoff >= 0) {
+	offset = (time_t) local_tm->tm_gmtoff;
+	sign = "+";
+    } else {
+	offset = (time_t) -local_tm->tm_gmtoff;
+	sign = "-";
+    }
+#else
 
     if (timezone == 0) {
         return strdup("GMT");
-    }
-
-    /* Note that the time offset direction is opposite. */
-    if (timezone > 0) {
+    } else if (timezone > 0) {
         offset = timezone;
         sign = '-';
     } else {
         offset = -timezone;
         sign = '+';
     }
+#endif
     sprintf(buf, (const char *)"GMT%c%02d:%02d",
             sign, (int)(offset/3600), (int)((offset%3600)/60));
     return strdup(buf);
@


1.3
log
@Update to early access build 72 plus the following:
- sync patches with upstream repo: OpenJDK/bds-port
- fix gtk look and feel issue caused by dlopen of non-matching major
- fix other dlopen's of non-matching majors
- change max memory utilization on i386 to correct build failures
@
text
@d1 1
a1 1
$OpenBSD: patch-jdk_src_solaris_native_java_util_TimeZone_md_c,v 1.2 2009/05/23 03:03:25 kurt Exp $
@


1.2
log
@- update from early access b43 to b59
- sync patches with OpenJDK's bsd_port project
- require a pre-installed package for native_bootstrap
- The new 1.7 class java.nio.channels.spi.AsynchronousChannelProvider
  is not implemented yet on BSD.
- The new 1.7 package java.nio.sctp is not included and not supported on
  OpenBD
@
text
@d1 3
a3 3
$OpenBSD: patch-jdk_src_solaris_native_java_util_TimeZone_md_c,v 1.1 2008/03/19 18:05:46 kurt Exp $
--- jdk/src/solaris/native/java/util/TimeZone_md.c.orig	Fri May  8 03:35:07 2009
+++ jdk/src/solaris/native/java/util/TimeZone_md.c	Mon May 18 19:49:29 2009
d13 1
a13 1
@@@@ -49,11 +49,14 @@@@
a16 1
-#ifdef __linux__
d18 4
d23 3
a25 11
+#ifdef __linux__
 static const char *sysconfig_clock_file = "/etc/sysconfig/clock";
+#endif
+
 static const char *zoneinfo_dir = "/usr/share/zoneinfo";
-static const char *defailt_zoneinfo_file = "/etc/localtime";
+static const char *default_zoneinfo_file = "/etc/localtime";
 
 /*
  * Returns a point to the zone ID portion of the given zoneinfo file
@@@@ -199,7 +202,9 @@@@ getPlatformTimeZoneID()
d33 3
a35 3
      * First, try the ZONE entry in /etc/sysconfig/clock. However, the
      * ZONE entry is not set up after initial Red Hat Linux
@@@@ -254,14 +259,19 @@@@ getPlatformTimeZoneID()
d43 1
a43 3
      */
-    if (lstat(defailt_zoneinfo_file, &statbuf) == -1) {
+    if (lstat(default_zoneinfo_file, &statbuf) == -1) {
d47 1
a47 1
+    strncpy(zoneinfo_file, default_zoneinfo_file, PATH_MAX);
d54 1
a54 1
@@@@ -270,21 +280,25 @@@@ getPlatformTimeZoneID()
d61 2
a62 2
-        if ((len = readlink(defailt_zoneinfo_file, linkbuf, sizeof(linkbuf)-1)) == -1) {
+	if ((len = readlink(default_zoneinfo_file, zoneinfo_file, sizeof(zoneinfo_file)-1)) == -1) {
d64 1
a64 2
-                        defailt_zoneinfo_file);
+                        default_zoneinfo_file);
d85 1
a85 1
@@@@ -295,7 +309,7 @@@@ getPlatformTimeZoneID()
d89 1
a89 1
-    if ((fd = open(defailt_zoneinfo_file, O_RDONLY)) == -1) {
d94 1
a94 1
@@@@ -524,7 +538,7 @@@@ findJavaTZ_md(const char *java_home_dir, const char *c
d103 1
a103 1
@@@@ -563,19 +577,32 @@@@ getGMTOffsetID()
@


1.1
log
@- switch to GPLv2 w/CLASSPATH exception licensed openjdk7 code
- update to early access build 24
- Use GPLv2 licensed binary plugs from the IcedTea project and parts of
  IcedTea's icedtea-copy-plugs.patch & icedtea-graphics.patch.
  For more info see:
    http://icedtea.classpath.org/wiki/Main_Page
- Enable packages since we're fully GPLv2 based now, but still not
  hooked up to bulk builds just yet.
@
text
@d1 3
a3 3
$OpenBSD$
--- jdk/src/solaris/native/java/util/TimeZone_md.c.orig	Tue Dec  4 04:05:20 2007
+++ jdk/src/solaris/native/java/util/TimeZone_md.c	Fri Dec  7 17:44:58 2007
d40 1
a40 1
@@@@ -254,14 +259,18 @@@@ getPlatformTimeZoneID()
d54 2
a55 1
+    strlcpy(zoneinfo_file, default_zoneinfo_file, PATH_MAX+1);
d61 1
a61 1
@@@@ -270,21 +279,25 @@@@ getPlatformTimeZoneID()
d93 1
a93 1
@@@@ -295,7 +308,7 @@@@ getPlatformTimeZoneID()
d102 1
a102 1
@@@@ -524,7 +537,7 @@@@ findJavaTZ_md(const char *java_home_dir, const char *c
d111 1
a111 1
@@@@ -563,19 +576,32 @@@@ getGMTOffsetID()
@

