head	1.10;
access;
symbols
	OPENBSD_5_0:1.7.0.4
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.2
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.10
date	2013.06.01.21.12.15;	author kurt;	state dead;
branches;
next	1.9;

1.9
date	2013.04.10.02.49.05;	author kurt;	state Exp;
branches;
next	1.8;

1.8
date	2011.09.22.20.26.47;	author kurt;	state dead;
branches;
next	1.7;

1.7
date	2011.01.11.15.47.50;	author kurt;	state Exp;
branches;
next	1.6;

1.6
date	2009.10.07.01.53.54;	author kurt;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.10.19.01.09;	author kurt;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.23.03.03.25;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2009.01.04.23.25.16;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.22.13.22.12;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2008.03.19.18.05.45;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.10
log
@- Update to u21 which includes serveral security updates. okay giovanni@@
@
text
@$OpenBSD: patch-jdk_make_common_Defs-bsd_gmk,v 1.9 2013/04/10 02:49:05 kurt Exp $
--- jdk/make/common/Defs-bsd.gmk.orig	Tue Apr  9 20:29:15 2013
+++ jdk/make/common/Defs-bsd.gmk	Tue Apr  9 20:29:40 2013
@@@@ -399,7 +399,7 @@@@ endif
 # the library itself should not.
 #
 VM_NAME         = server
-JVMLIB          = -Xlinker -rpath -Xlinker $(LIBDIR)/$(LIBARCH)/$(VM_NAME) -L$(LIBDIR)/$(LIBARCH)/$(VM_NAME) -ljvm
+JVMLIB          = -L$(LIBDIR)/$(LIBARCH)/$(VM_NAME) -ljvm
 JAVALIB         = -ljava $(JVMLIB)
 
 #
@


1.9
log
@- remove lack of ORIGIN support work-around
- remove build dir from rpath
- fix include path order in awt
- fix FontConfiguration logic for BSD
@
text
@d1 1
a1 1
$OpenBSD$
@


1.8
log
@Update devel/jdk/1.7 to b147 / non-beta
- Remove Early Access now that jdk 1.7 is final
- Use a patch set for all patches from upstream repository:
  http://hg.openjdk.java.net/bsd-port/bsd-port
- Set milestone and build number to fcs b00 to match Oracle.
- Update cacerts file.
- Install unlimited crypto policy.
- Add DIST_SUBDIR=jdk.
- Include patches from icedtea-web for applet hole from
  Landry Breuil <landry@@openbsd.org> via FreeBSD OpenJDK7 port
- Include fix for Oracle bug "7070134: Hotspot crashes with
  sigsegv from PorterStemmer":
  http://hg.openjdk.java.net/hsx/hotspot-comp/hotspot/rev/4e761e7e6e12
okay landry@@ jasper@@
@
text
@d1 10
a10 4
$OpenBSD: patch-jdk_make_common_Defs-bsd_gmk,v 1.7 2011/01/11 15:47:50 kurt Exp $
--- jdk/make/common/Defs-bsd.gmk.orig	Tue Oct 26 09:56:36 2010
+++ jdk/make/common/Defs-bsd.gmk	Tue Oct 26 10:31:46 2010
@@@@ -25,7 +25,7 @@@@
a12 195
 # Makefile to specify compiler flags for programs and libraries
-# targeted to Bsd.  Should not contain any rules.
+# targeted to BSD.  Should not contain any rules.
 #
 # WARNING: This file is shared with other workspaces. 
 #          So when it includes other files, it must use JDK_TOPDIR.
@@@@ -61,7 +61,7 @@@@ ifndef OPENJDK
 endif
 
 # platform specific include files
-PLATFORM_INCLUDE_NAME = $(PLATFORM)
+PLATFORM_INCLUDE_NAME = $(OS_NAME)
 PLATFORM_INCLUDE      = $(INCLUDEDIR)/$(PLATFORM_INCLUDE_NAME)
 
 # suffix used for make dependencies files.
@@@@ -109,9 +109,11 @@@@ CC_OPT          = $(CC_OPT/$(OPTIMIZATION_LEVEL))
 #    We need this frame pointer to make it easy to walk the stacks.
 #    This should be the default on X86, but ia64 and amd64 may not have this
 #    as the default.
-CFLAGS_REQUIRED_amd64   += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
-CFLAGS_REQUIRED_i586    += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
-CFLAGS_REQUIRED_ia64    += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
+CFLAGS_REQUIRED_amd64   += -m64 -fno-omit-frame-pointer -D_LITTLE_ENDIAN
+LDFLAGS_COMMON_amd64    += -m64
+CFLAGS_REQUIRED_i586    += -m32 -fno-omit-frame-pointer -D_LITTLE_ENDIAN
+LDFLAGS_COMMON_i586     += -m32
+CFLAGS_REQUIRED_ia64    += -m64 -fno-omit-frame-pointer -D_LITTLE_ENDIAN
 CFLAGS_REQUIRED_sparcv9 += -m64 -mcpu=v9
 LDFLAGS_COMMON_sparcv9  += -m64 -mcpu=v9
 CFLAGS_REQUIRED_sparc   += -m32 -mcpu=v9
@@@@ -126,9 +128,13 @@@@ else
   CFLAGS_REQUIRED       =  $(CFLAGS_REQUIRED_$(ARCH))
   LDFLAGS_COMMON        += $(LDFLAGS_COMMON_$(ARCH))
 endif
+ifeq ($(OS_VENDOR),Apple)
+  # 16-byte stack re-alignment on 32-bit Darwin
+  CFLAGS_REQUIRED_i586 += -mstackrealign
+endif
 
 # If this is a --hash-style=gnu system, use --hash-style=both
-#   The gnu .hash section won't work on some Bsd systems like SuSE 10.
+#   The gnu .hash section won't work on some Linux systems like SuSE 10.
 _HAS_HASH_STYLE_GNU:=$(shell $(CC) -dumpspecs | $(GREP) -- '--hash-style=gnu')
 ifneq ($(_HAS_HASH_STYLE_GNU),)
   LDFLAGS_HASH_STYLE = -Wl,--hash-style=both
@@@@ -165,7 +171,7 @@@@ ifeq ($(ARCH), amd64)
  CFLAGS_COMMON += -pipe
 endif
 
-# Bsd 64bit machines use Dwarf2, which can be HUGE, have fastdebug use -g1
+# BSD 64bit machines use Dwarf2, which can be HUGE, have fastdebug use -g1
 DEBUG_FLAG = -g
 ifeq ($(FASTDEBUG), true)
   ifeq ($(ARCH_DATA_MODEL), 64)
@@@@ -202,8 +208,7 @@@@ ifneq ($(ARCH),alpha)
 else
   CPP_ARCH_FLAGS += -D_$(ARCH)_
 endif
-
-CPPFLAGS_COMMON = $(CPP_ARCH_FLAGS) -DLINUX $(VERSION_DEFINES) \
+CPPFLAGS_COMMON = $(CPP_ARCH_FLAGS) -D_ALLBSD_SOURCE $(VERSION_DEFINES) \
 		  -D_LARGEFILE64_SOURCE -D_GNU_SOURCE -D_REENTRANT
 
 ifeq ($(ARCH_DATA_MODEL), 64)
@@@@ -216,33 +221,37 @@@@ ifneq ($(PRODUCT), java)
   CPPFLAGS_DBG    += -DLOGGING 
 endif
 
-ifdef LIBRARY
-  # Libraries need to locate other libraries at runtime, and you can tell
-  #   a library where to look by way of the dynamic runpaths (RPATH or RUNPATH)
-  #   buried inside the .so. The $ORIGIN says to look relative to where
-  #   the library itself is and it can be followed with relative paths from
-  #   that. By default we always look in $ORIGIN, optionally we add relative
-  #   paths if the Makefile sets LD_RUNPATH_EXTRAS to those relative paths.
-  #   On Bsd we add a flag -z origin, not sure if this is necessary, but 
-  #   doesn't seem to hurt.
-  #   The environment variable LD_LIBRARY_PATH will over-ride these runpaths.
-  #   Try: 'readelf -d lib*.so' to see these settings in a library.
-  #
+# Libraries need to locate other libraries at runtime, and you can tell
+#   a library where to look by way of the dynamic runpaths (RPATH or RUNPATH)
+#   buried inside the .{so,dylib}. The {$ORIGIN,@@loader_path/} says to look
+#   relative to where the library itself is and it can be followed
+#   with relative paths from that. By default we always look in
+#   {$ORIGIN,@@loader_path/}, optionally we add relative paths if the Makefile
+#   sets LD_RUNPATH_EXTRAS to those relative paths.
+#   Except on MacOS X we add a flag -z origin, not sure if this is necessary,
+#   but doesn't seem to hurt.
+#   The environment variable LD_LIBRARY_PATH will over-ride these runpaths.
+#   See 'man {dyld,rtld}' for more information.
+#   Try: 'readelf -d lib*.so' to see these settings in a library.
+#
+ifeq ($(OS_VENDOR), Apple)
+  LDFLAGS_COMMON += -Xlinker -rpath -Xlinker @@loader_path/.
+  LDFLAGS_COMMON += $(LD_RUNPATH_EXTRAS:%=-Xlinker -rpath -Xlinker @@loader_path/%)
+  LDFLAGS_COMMON += -Xlinker -install_name -Xlinker @@rpath/$(@@F)
+else
   LDFLAGS_COMMON += -Xlinker -z -Xlinker origin -Xlinker -rpath -Xlinker \$$ORIGIN
   LDFLAGS_COMMON += $(LD_RUNPATH_EXTRAS:%=-Xlinker -z -Xlinker origin -Xlinker -rpath -Xlinker \$$ORIGIN/%)
 endif
 
-EXTRA_LIBS += -lc
-
-LDFLAGS_DEFS_OPTION  = -Xlinker -z -Xlinker defs
-LDFLAGS_COMMON  += $(LDFLAGS_DEFS_OPTION)
-
 #
 # -L paths for finding and -ljava
 #
-LDFLAGS_OPT     = -Xlinker -O1
 LDFLAGS_COMMON += -L$(LIBDIR)/$(LIBARCH)
+
+ifneq ($(OS_VENDOR), Apple)
+LDFLAGS_OPT     = -Xlinker -O1
 LDFLAGS_COMMON += -Wl,-soname=$(LIB_PREFIX)$(LIBRARY).$(LIBRARY_SUFFIX)
+endif
 
 #
 # -static-libgcc is a gcc-3 flag to statically link libgcc, gcc-2.9x always
@@@@ -264,9 +273,9 @@@@ AUTOMATIC_PCH_OPTION = 
 ifeq ($(VARIANT), OPT)
   ifneq ($(NO_STRIP), true)
     ifneq ($(DEBUG_BINARIES), true)
-      # Debug 'strip -g' leaves local function Elf symbols (better stack
+      # Debug 'strip -S' leaves local function Elf symbols (better stack
       # traces)
-      POST_STRIP_PROCESS = $(STRIP) -g
+      POST_STRIP_PROCESS = $(STRIP) -S
     endif
   endif
 endif
@@@@ -285,6 +294,11 @@@@ QUANTIFY_OPTIONS = -cache-dir=/tmp/quantify -always-us
 LINK_PRE_CMD = $(QUANTIFY_CMD) $(QUANTIFY_OPTIONS)
 endif
 
+# Darwin does not support linker map files.
+ifeq ($(OS_VENDOR), Apple)
+LDNOMAP=true
+endif
+
 #
 # Path and option to link against the VM, if you have to.  Note that
 # there are libraries that link against only -ljava, but they do get
@@@@ -311,7 +325,9 @@@@ override HAVE_ALTZONE            = false
 override HAVE_FILIOH             = false
 override HAVE_GETHRTIME          = false
 override HAVE_GETHRVTIME         = false
+ifeq ($(OS_VENDOR),Apple)
 override HAVE_SIGIGNORE          = true
+endif
 override LEX_LIBRARY             = -lfl
 ifeq ($(STATIC_CXX),true)
 override LIBCXX                  = -Wl,-Bstatic -lstdc++ -lgcc -Wl,-Bdynamic
@@@@ -322,14 +338,11 @@@@ override LIBPOSIX4               =
 override LIBSOCKET               =
 override LIBNSL                  =
 override LIBTHREAD               =
+override LIBDL                   =
 override MOOT_PRIORITIES         = true
 override NO_INTERRUPTIBLE_IO     = true
-override OPENWIN_HOME            = /usr/X11R6
-ifeq ($(ARCH), amd64)
-override OPENWIN_LIB             = $(OPENWIN_HOME)/lib64
-else
+override OPENWIN_HOME            = $(X11_PATH)
 override OPENWIN_LIB             = $(OPENWIN_HOME)/lib
-endif
 override OTHER_M4FLAGS           = -D__GLIBC__ -DGNU_ASSEMBLER
 override SUN_CMM_SUBDIR          =
 override THREADS_FLAG            = native
@@@@ -350,6 +363,14 @@@@ override USE_EXECNAME            = true
 # DPS (Displayable PostScript) is available on Solaris machines
 HAVE_DPS = no
 
+ifeq ($(OS_VENDOR), FreeBSD)
+  SYSTEM_ZLIB = true
+endif
+
+ifeq ($(OS_VENDOR), OpenBSD)
+  SYSTEM_ZLIB = true
+endif
+
 #
 # Japanese manpages
 #
@@@@ -361,7 +382,7 @@@@ HOTSPOT_SALIB_PATH   = $(HOTSPOT_IMPORT_PATH)/jre/lib/
 SALIB_NAME = $(LIB_PREFIX)saproc.$(LIBRARY_SUFFIX)
 
 # The JDI - Serviceability Agent binding is not currently supported
-# on Bsd-ia64.
+# on ia64.
 ifeq ($(ARCH), ia64)
   INCLUDE_SA = false
 else
@


1.7
log
@Update to early access build 122. okay jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-jdk_make_common_Defs-bsd_gmk,v 1.6 2009/10/07 01:53:54 kurt Exp $
@


1.6
log
@Update to early access build 72 plus the following:
- sync patches with upstream repo: OpenJDK/bds-port
- fix gtk look and feel issue caused by dlopen of non-matching major
- fix other dlopen's of non-matching majors
- change max memory utilization on i386 to correct build failures
@
text
@d1 13
a13 17
$OpenBSD: patch-jdk_make_common_Defs-bsd_gmk,v 1.5 2009/06/10 19:01:09 kurt Exp $
--- jdk/make/common/Defs-bsd.gmk.orig	Sun Sep 27 09:39:53 2009
+++ jdk/make/common/Defs-bsd.gmk	Sun Sep 27 09:48:31 2009
@@@@ -43,12 +43,6 @@@@
 # Get shared JDK settings
 include $(JDK_MAKE_SHARED_DIR)/Defs.gmk
 
-# Part of INCREMENTAL_BUILD mechanism.
-#   Compiler emits things like:  path/file.o: file.h
-#   We want something like: relative_path/file.o relative_path/file.d: file.h
-CC_DEPEND	 = -MM
-CC_DEPEND_FILTER = $(SED) -e 's!$*\.$(OBJECT_SUFFIX)!$(dir $@@)& $(dir $@@)$*.$(DEPEND_SUFFIX)!g'
-
 ifndef PLATFORM_SRC
   PLATFORM_SRC = $(BUILDDIR)/../src/solaris
 endif # PLATFORM_SRC
@@@@ -61,7 +55,7 @@@@ ifndef OPENJDK
d22 1
a22 1
@@@@ -109,8 +103,14 @@@@ CC_OPT          = $(CC_OPT/$(OPTIMIZATION_LEVEL))
d28 1
d33 8
d45 9
a53 5
 CFLAGS_REQUIRED_ia64    += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
 CFLAGS_REQUIRED_sparcv9 += -m64 -mcpu=v9
 LDFLAGS_COMMON_sparcv9  += -m64 -mcpu=v9
@@@@ -186,7 +186,7 @@@@ ifeq ($(FASTDEBUG), true)
   CXXFLAGS_DBG	+= $(CC_OPT/$(FASTDEBUG_OPTIMIZATION_LEVEL))
d56 12
a67 2
-CPPFLAGS_COMMON = -D$(ARCH) -DARCH='"$(ARCH)"' -DLINUX $(VERSION_DEFINES) \
+CPPFLAGS_COMMON = -D$(ARCH) -DARCH='"$(ARCH)"' -D_ALLBSD_SOURCE $(VERSION_DEFINES) \
d71 1
a71 1
@@@@ -199,33 +199,15 @@@@ ifneq ($(PRODUCT), java)
d87 22
a108 4
-  LDFLAGS_COMMON += -Xlinker -z -Xlinker origin -Xlinker -rpath -Xlinker \$$ORIGIN
-  LDFLAGS_COMMON += $(LD_RUNPATH_EXTRAS:%=-Xlinker -z -Xlinker origin -Xlinker -rpath -Xlinker \$$ORIGIN/%)
-endif
-
d111 1
a111 1
-LDFLAGS_DEFS_OPTION  = -z defs
d127 1
a127 1
@@@@ -247,9 +229,9 @@@@ AUTOMATIC_PCH_OPTION = 
d139 3
a141 3
@@@@ -259,13 +241,9 @@@@ endif
 #
 LD_MAPFILE_FLAG = -Xlinker --version-script -Xlinker
a142 7
-#
-# Support for Quantify.
-#
-ifdef QUANTIFY
-QUANTIFY_CMD = quantify
-QUANTIFY_OPTIONS = -cache-dir=/tmp/quantify -always-use-cache-dir=yes
-LINK_PRE_CMD = $(QUANTIFY_CMD) $(QUANTIFY_OPTIONS)
d146 2
a147 2
 endif
 
d149 3
a151 1
@@@@ -294,7 +272,9 @@@@ override HAVE_ALTZONE            = false
d161 3
a163 1
@@@@ -306,12 +286,8 @@@@ override LIBSOCKET               =
d165 1
d178 1
a178 2
@@@@ -331,6 +307,14 @@@@ override USE_EXECNAME            = true
 # HAVE_DPS should only be "no" if the platform has no DPS headers or libs
d181 1
a181 1
+
d189 1
a189 1
 
d192 10
@


1.5
log
@- binary plugs distfile no longer needed
- sync patches with OpenJDK7 bsd-port repository
- install a usable cacerts
- Remove Interruptible IO support
tested by ian@@ william@@
@
text
@d1 3
a3 3
$OpenBSD: patch-jdk_make_common_Defs-bsd_gmk,v 1.4 2009/05/23 03:03:25 kurt Exp $
--- jdk/make/common/Defs-bsd.gmk.orig	Sat May 30 10:12:02 2009
+++ jdk/make/common/Defs-bsd.gmk	Sat May 30 10:16:07 2009
d43 1
a43 1
@@@@ -180,7 +180,7 @@@@ ifeq ($(FASTDEBUG), true)
d52 1
a52 1
@@@@ -193,33 +193,15 @@@@ ifneq ($(PRODUCT), java)
d90 1
a90 2
@@@@ -240,8 +222,8 @@@@ AUTOMATIC_PCH_OPTION = 
 #
d93 7
a99 4
-    # Debug 'strip -g' leaves local function Elf symbols (better stack traces)
-    POST_STRIP_PROCESS = $(STRIP) -g
+    # Debug 'strip -S' leaves local function Elf symbols (better stack traces)
+    POST_STRIP_PROCESS = $(STRIP) -S
d102 1
a102 2
 
@@@@ -250,13 +232,9 @@@@ endif
d119 1
a119 1
@@@@ -285,7 +263,9 @@@@ override HAVE_ALTZONE            = false
d129 1
a129 1
@@@@ -297,12 +277,8 @@@@ override LIBSOCKET               =
d143 1
a143 1
@@@@ -322,6 +298,14 @@@@ override USE_EXECNAME            = true
@


1.4
log
@- update from early access b43 to b59
- sync patches with OpenJDK's bsd_port project
- require a pre-installed package for native_bootstrap
- The new 1.7 class java.nio.channels.spi.AsynchronousChannelProvider
  is not implemented yet on BSD.
- The new 1.7 package java.nio.sctp is not included and not supported on
  OpenBD
@
text
@d1 3
a3 3
$OpenBSD: patch-jdk_make_common_Defs-bsd_gmk,v 1.3 2009/01/04 23:25:16 kurt Exp $
--- jdk/make/common/Defs-bsd.gmk.orig	Mon May 18 10:55:28 2009
+++ jdk/make/common/Defs-bsd.gmk	Mon May 18 11:08:55 2009
d128 1
a128 2
@@@@ -296,13 +276,9 @@@@ override LIBPOSIX4               =
 override LIBSOCKET               =
d131 1
a131 1
-override NO_INTERRUPTIBLE_IO     = true
a135 1
+override NO_INTERRUPTIBLE_IO     = false
@


1.3
log
@Update to early access build 42:
- sync/regen patches
- use os_bsd_x86.cpp from OpenJDK bsd-java repository plus
  Greg Lewis's fixes posted to the bsd-port-dev list
- use Xiaobin Lu's datatype corrections from OpenJDK bug
  6787106 + additional datatype corrections from me.
- use Vladimir Kozlov's bug fix from OpenJDK bug 6782820
- remove obsolete IcedTea awt binary plugs and update binary
  plug distfile
- correctly define DEVTOOLS_PATH for bsd and verify + correct
  Defs-utils.gmk locations for bsd utilities
@
text
@d1 3
a3 3
$OpenBSD: patch-jdk_make_common_Defs-bsd_gmk,v 1.2 2008/12/22 13:22:12 kurt Exp $
--- jdk/make/common/Defs-bsd.gmk.orig	Mon Dec 22 21:13:32 2008
+++ jdk/make/common/Defs-bsd.gmk	Mon Dec 22 23:14:44 2008
d26 19
a44 2
@@@@ -169,7 +163,7 @@@@ ifeq ($(FASTDEBUG), true)
   CXXFLAGS_DBG	+= $(CC_OPT/LOWER)
d52 1
a52 1
@@@@ -182,27 +176,6 @@@@ ifneq ($(PRODUCT), java)
d80 23
a102 1
@@@@ -240,15 +213,6 @@@@ endif
d105 1
a105 1
 #
d112 7
a118 7
-endif
-
-#
 # Path and option to link against the VM, if you have to.  Note that
 # there are libraries that link against only -ljava, but they do get
 # -L to the -ljvm, this is because -ljava depends on -ljvm, whereas
@@@@ -274,7 +238,9 @@@@ override HAVE_ALTZONE            = false
d122 1
a122 1
+ifeq ($(OS_VENDOR),NetBSD)
d128 1
a128 1
@@@@ -285,13 +251,9 @@@@ override LIBPOSIX4               =
d133 1
a133 2
+override NO_INTERRUPTIBLE_IO     = false
 override OPENWIN_HOME            = /usr/X11R6
d137 2
d144 1
a144 1
@@@@ -311,6 +273,14 @@@@ override USE_EXECNAME            = true
@


1.2
log
@Fix symbol conflict issues with eclipse by enabling the use of
version scripts. Also complete SYSTEM_ZLIB build hooks and enable
it to use system libz.
@
text
@d1 3
a3 3
$OpenBSD: patch-jdk_make_common_Defs-bsd_gmk,v 1.1 2008/03/19 18:05:45 kurt Exp $
--- jdk/make/common/Defs-bsd.gmk.orig	Sat Dec 20 22:26:51 2008
+++ jdk/make/common/Defs-bsd.gmk	Sat Dec 20 23:03:00 2008
d15 1
a15 1
   PLATFORM_SRC = $(JDK_TOPDIR)/src/solaris
d26 2
a27 2
@@@@ -178,7 +172,7 @@@@ ifeq ($(FASTDEBUG), true)
   CXXFLAGS_DBG	+= $(CC_LOWER_OPT)
d35 3
a37 3
@@@@ -188,27 +182,6 @@@@ endif
 CPPFLAGS_OPT    = 
 CPPFLAGS_DBG    = -DDEBUG
d63 1
a63 1
@@@@ -246,15 +219,6 @@@@ endif
d79 1
a79 1
@@@@ -280,7 +244,9 @@@@ override HAVE_ALTZONE            = false
d89 1
a89 1
@@@@ -291,13 +257,9 @@@@ override LIBPOSIX4               =
d104 1
a104 1
@@@@ -317,6 +279,14 @@@@ override USE_EXECNAME            = true
@


1.1
log
@- switch to GPLv2 w/CLASSPATH exception licensed openjdk7 code
- update to early access build 24
- Use GPLv2 licensed binary plugs from the IcedTea project and parts of
  IcedTea's icedtea-copy-plugs.patch & icedtea-graphics.patch.
  For more info see:
    http://icedtea.classpath.org/wiki/Main_Page
- Enable packages since we're fully GPLv2 based now, but still not
  hooked up to bulk builds just yet.
@
text
@d1 3
a3 3
$OpenBSD$
--- jdk/make/common/Defs-bsd.gmk.orig	Wed Nov  7 14:40:30 2007
+++ jdk/make/common/Defs-bsd.gmk	Wed Nov  7 14:50:22 2007
d104 15
@

