head	1.5;
access;
symbols
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2011.09.22.20.26.48;	author kurt;	state dead;
branches;
next	1.4;

1.4
date	2011.01.11.15.47.50;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.07.01.53.54;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.10.19.01.09;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.23.03.03.25;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update devel/jdk/1.7 to b147 / non-beta
- Remove Early Access now that jdk 1.7 is final
- Use a patch set for all patches from upstream repository:
  http://hg.openjdk.java.net/bsd-port/bsd-port
- Set milestone and build number to fcs b00 to match Oracle.
- Update cacerts file.
- Install unlimited crypto policy.
- Add DIST_SUBDIR=jdk.
- Include patches from icedtea-web for applet hole from
  Landry Breuil <landry@@openbsd.org> via FreeBSD OpenJDK7 port
- Include fix for Oracle bug "7070134: Hotspot crashes with
  sigsegv from PorterStemmer":
  http://hg.openjdk.java.net/hsx/hotspot-comp/hotspot/rev/4e761e7e6e12
okay landry@@ jasper@@
@
text
@$OpenBSD: patch-jdk_src_share_bin_java_c,v 1.4 2011/01/11 15:47:50 kurt Exp $
--- jdk/src/share/bin/java.c.orig	Thu Dec 16 17:10:33 2010
+++ jdk/src/share/bin/java.c	Tue Jan  4 18:25:20 2011
@@@@ -67,6 +67,10 @@@@ static jboolean printUsage = JNI_FALSE;   /* print and
 static jboolean printXUsage = JNI_FALSE;  /* print and exit*/
 static char     *showSettings = NULL;      /* print but continue */
 
+#ifdef __APPLE__
+static jboolean continueInSameThread = JNI_FALSE; /* start VM in current thread */
+#endif
+
 static const char *_program_name;
 static const char *_launcher_name;
 static jboolean _is_java_args = JNI_FALSE;
@@@@ -117,6 +121,10 @@@@ static void SetPaths(int argc, char **argv);
 static void DumpState();
 static jboolean RemovableOption(char *option);
 
+#ifdef __APPLE__
+static int ContinueInSameThread(InvocationFunctions* ifn, int argc, char **argv, char *jarfile, char *classname, int ret);
+#endif
+
 /* Maximum supported entries from jvm.cfg. */
 #define INIT_MAX_KNOWN_VMS      10
 
@@@@ -303,9 +311,16 @@@@ JLI_Launch(int argc, char ** argv,              /* mai
 
     /* Show the splash screen if needed */
     ShowSplashScreen();
-
+   
+#ifdef __APPLE__
+    if (continueInSameThread == JNI_TRUE) {
+        return ContinueInSameThread(&ifn, argc, argv, jarfile, classname, ret);
+    } else {
+        return ContinueInNewThread(&ifn, argc, argv, jarfile, classname, ret);
+    }
+#else
     return ContinueInNewThread(&ifn, argc, argv, jarfile, classname, ret);
-
+#endif
 }
 /*
  * Always detach the main thread so that it appears to have ended when
@@@@ -1028,6 +1043,12 @@@@ ParseArguments(int *pargc, char ***pargv, char **pjarf
         } else if (JLI_StrCmp(arg, "-X") == 0) {
             printXUsage = JNI_TRUE;
             return JNI_TRUE;
+#ifdef __APPLE__
+        } else if (JLI_StrCmp(arg, "-XstartOnFirstThread") == 0) {
+            continueInSameThread = JNI_TRUE;
+        } else if (JLI_StrCCmp(arg, "-Xdock:") == 0) {
+           // XXXDARWIN: Apple VM supports configuration of Dock icon and name via -Xdock:
+#endif            
 /*
  * The following case checks for -XshowSettings OR -XshowSetting:SUBOPT.
  * In the latter case, any SUBOPT value not recognized will default to "all"
@@@@ -1941,6 +1962,44 @@@@ ContinueInNewThread(InvocationFunctions* ifn, int argc
       return (ret != 0) ? ret : rslt;
     }
 }
+
+#ifdef __APPLE__
+static int
+ContinueInSameThread(InvocationFunctions* ifn, int argc,
+                    char **argv, char *jarfile, char *classname, int ret)
+{
+        
+    /*
+     * If user doesn't specify stack size, check if VM has a preference.
+     * Note that HotSpot no longer supports JNI_VERSION_1_1 but it will
+     * return its default stack size through the init args structure.
+     */
+    if (threadStackSize == 0) {
+        struct JDK1_1InitArgs args1_1;
+        memset((void*)&args1_1, 0, sizeof(args1_1));
+        args1_1.version = JNI_VERSION_1_1;
+        ifn->GetDefaultJavaVMInitArgs(&args1_1);  /* ignore return value */
+        if (args1_1.javaStackSize > 0) {
+            threadStackSize = args1_1.javaStackSize;
+        }
+    }
+    
+    { /* Create create JVM and invoke main method */
+        JavaMainArgs args;
+        int rslt;
+        
+        args.argc = argc;
+        args.argv = argv;
+        args.jarfile = jarfile;
+        args.classname = classname;
+        args.ifn = *ifn;
+        
+        rslt = JavaMain((void*)&args);
+        
+        return (ret != 0) ? ret : rslt;
+    }
+}
+#endif
 
 static void
 DumpState()
@


1.4
log
@Update to early access build 122. okay jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-jdk_src_share_bin_java_c,v 1.3 2009/10/07 01:53:54 kurt Exp $
@


1.3
log
@Update to early access build 72 plus the following:
- sync patches with upstream repo: OpenJDK/bds-port
- fix gtk look and feel issue caused by dlopen of non-matching major
- fix other dlopen's of non-matching majors
- change max memory utilization on i386 to correct build failures
@
text
@d1 4
a4 5
$OpenBSD: patch-jdk_src_share_bin_java_c,v 1.2 2009/06/10 19:01:09 kurt Exp $
--- jdk/src/share/bin/java.c.orig	Thu Sep 17 03:51:46 2009
+++ jdk/src/share/bin/java.c	Sat Sep 26 10:00:48 2009
@@@@ -68,6 +68,10 @@@@ static jboolean showVersion = JNI_FALSE;  /* print but
 static jboolean printUsage = JNI_FALSE;   /* print and exit*/
d6 1
d15 1
a15 1
@@@@ -116,6 +120,10 @@@@ static void SetPaths(int argc, char **argv);
d26 1
a26 1
@@@@ -295,9 +303,16 @@@@ JLI_Launch(int argc, char ** argv,              /* mai
d43 3
a45 3
 
 #define CHECK_EXCEPTION_NULL_LEAVE(e) \
@@@@ -975,6 +990,12 @@@@ ParseArguments(int *pargc, char ***pargv, char **pjarf
d56 3
a58 3
  * The following case provide backward compatibility with old-style
  * command line options.
@@@@ -1861,6 +1882,44 @@@@ ContinueInNewThread(InvocationFunctions* ifn, int argc
@


1.2
log
@- binary plugs distfile no longer needed
- sync patches with OpenJDK7 bsd-port repository
- install a usable cacerts
- Remove Interruptible IO support
tested by ian@@ william@@
@
text
@d1 3
a3 3
$OpenBSD: patch-jdk_src_share_bin_java_c,v 1.1 2009/05/23 03:03:25 kurt Exp $
--- jdk/src/share/bin/java.c.orig	Thu May 14 03:29:45 2009
+++ jdk/src/share/bin/java.c	Tue Jun  2 12:14:00 2009
d45 1
a45 1
@@@@ -969,6 +984,12 @@@@ ParseArguments(int *pargc, char ***pargv, char **pjarf
d58 1
a58 1
@@@@ -1855,6 +1876,44 @@@@ ContinueInNewThread(InvocationFunctions* ifn, int argc
@


1.1
log
@- update from early access b43 to b59
- sync patches with OpenJDK's bsd_port project
- require a pre-installed package for native_bootstrap
- The new 1.7 class java.nio.channels.spi.AsynchronousChannelProvider
  is not implemented yet on BSD.
- The new 1.7 package java.nio.sctp is not included and not supported on
  OpenBD
@
text
@d1 3
a3 3
$OpenBSD$
--- jdk/src/share/bin/java.c.orig	Mon May 18 13:32:27 2009
+++ jdk/src/share/bin/java.c	Mon May 18 13:32:35 2009
d45 1
a45 1
@@@@ -969,6 +984,10 @@@@ ParseArguments(int *pargc, char ***pargv, char **pjarf
d52 2
d58 1
a58 1
@@@@ -1855,6 +1874,44 @@@@ ContinueInNewThread(InvocationFunctions* ifn, int argc
@

