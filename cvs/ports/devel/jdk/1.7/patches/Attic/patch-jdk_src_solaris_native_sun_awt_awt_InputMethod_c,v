head	1.4;
access;
symbols
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.09.22.20.26.48;	author kurt;	state dead;
branches;
next	1.3;

1.3
date	2011.01.11.15.47.50;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.07.01.53.54;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2008.03.19.18.05.46;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update devel/jdk/1.7 to b147 / non-beta
- Remove Early Access now that jdk 1.7 is final
- Use a patch set for all patches from upstream repository:
  http://hg.openjdk.java.net/bsd-port/bsd-port
- Set milestone and build number to fcs b00 to match Oracle.
- Update cacerts file.
- Install unlimited crypto policy.
- Add DIST_SUBDIR=jdk.
- Include patches from icedtea-web for applet hole from
  Landry Breuil <landry@@openbsd.org> via FreeBSD OpenJDK7 port
- Include fix for Oracle bug "7070134: Hotspot crashes with
  sigsegv from PorterStemmer":
  http://hg.openjdk.java.net/hsx/hotspot-comp/hotspot/rev/4e761e7e6e12
okay landry@@ jasper@@
@
text
@$OpenBSD: patch-jdk_src_solaris_native_sun_awt_awt_InputMethod_c,v 1.3 2011/01/11 15:47:50 kurt Exp $
--- jdk/src/solaris/native/sun/awt/awt_InputMethod.c.orig	Thu Oct 28 20:18:11 2010
+++ jdk/src/solaris/native/sun/awt/awt_InputMethod.c	Mon Nov  1 13:42:20 2010
@@@@ -67,7 +67,7 @@@@ static void PreeditDrawCallback(XIC, XPointer,
                                 XIMPreeditDrawCallbackStruct *);
 static void PreeditCaretCallback(XIC, XPointer,
                                  XIMPreeditCaretCallbackStruct *);
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
 static void StatusStartCallback(XIC, XPointer, XPointer);
 static void StatusDoneCallback(XIC, XPointer, XPointer);
 static void StatusDrawCallback(XIC, XPointer,
@@@@ -81,7 +81,7 @@@@ static void StatusDrawCallback(XIC, XPointer,
 #define PreeditDoneIndex        1
 #define PreeditDrawIndex        2
 #define PreeditCaretIndex       3
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
 #define StatusStartIndex        4
 #define StatusDoneIndex         5
 #define StatusDrawIndex         6
@@@@ -99,14 +99,14 @@@@ static XIMProc callback_funcs[NCALLBACKS] = {
     (XIMProc)PreeditDoneCallback,
     (XIMProc)PreeditDrawCallback,
     (XIMProc)PreeditCaretCallback,
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
     (XIMProc)StatusStartCallback,
     (XIMProc)StatusDoneCallback,
     (XIMProc)StatusDrawCallback,
 #endif
 };
 
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
 #define MAX_STATUS_LEN  100
 typedef struct {
     Window   w;                /*status window id        */
@@@@ -146,7 +146,7 @@@@ typedef struct _X11InputMethodData {
 #endif /* XAWT */
     jobject     x11inputmethod; /* global ref to X11InputMethod instance */
                                 /* associated with the XIC */
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
     StatusWindow *statusWindow; /* our own status window  */
 #else
 #ifndef XAWT
@@@@ -425,7 +425,7 @@@@ destroyX11InputMethodData(JNIEnv *env, X11InputMethodD
 static void
 freeX11InputMethodData(JNIEnv *env, X11InputMethodData *pX11IMData)
 {
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
     if (pX11IMData->statusWindow != NULL){
         StatusWindow *sw = pX11IMData->statusWindow;
         XFreeGC(awt_display, sw->lightGC);
@@@@ -531,7 +531,7 @@@@ awt_x11inputmethod_lookupString(XKeyPressedEvent *even
     pX11IMData = getX11InputMethodData(env, currentX11InputMethodInstance);
 
     if (pX11IMData == NULL) {
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
         return False;
 #else
         return result;
@@@@ -539,7 +539,7 @@@@ awt_x11inputmethod_lookupString(XKeyPressedEvent *even
     }
 
     if ((ic = pX11IMData->current_ic) == (XIC)0){
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
         return False;
 #else
         return result;
@@@@ -648,7 +648,7 @@@@ awt_x11inputmethod_lookupString(XKeyPressedEvent *even
     return result;
 }
 
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
 static StatusWindow *createStatusWindow(
 #ifdef XAWT
                                 Window parent) {
@@@@ -993,7 +993,7 @@@@ void adjustStatusWindow(Widget shell){
         }
     }
 }
-#endif  /*__linux__*/
+#endif  /* __linux__ || _ALLBSD_SOURCE */
 /*
  * Creates two XICs, one for active clients and the other for passive
  * clients. All information on those XICs are stored in the
@@@@ -1050,7 +1050,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
         return FALSE ;
     }
 
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
     on_the_spot_styles |= XIMStatusNothing;
 
     /*kinput does not support XIMPreeditCallbacks and XIMStatusArea
@@@@ -1063,7 +1063,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
             break;
         }
     }
-#else /*! __linux__ */
+#else /*! __linux__ && !_ALLBSD_SOURCE */
 #ifdef XAWT
     on_the_spot_styles |= XIMStatusNothing;
 #else /* !XAWT */
@@@@ -1086,7 +1086,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
         on_the_spot_styles |= XIMStatusNothing;
 
 #endif /* XAWT */
-#endif /* __linux__ */
+#endif /* __linux__ || _ALLBSD_SOURCE */
 
     for (i = 0; i < im_styles->count_styles; i++) {
         active_styles |= im_styles->supported_styles[i] & on_the_spot_styles;
@@@@ -1134,7 +1134,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
                         NULL);
         if (preedit == (XVaNestedList)NULL)
             goto err;
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
         /*always try XIMStatusCallbacks for active client...*/
         {
             status = (XVaNestedList)XVaCreateNestedList(0,
@@@@ -1156,7 +1156,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
             XFree((void *)status);
             XFree((void *)preedit);
         }
-#else /* !__linux__ */
+#else /* !__linux__ && !_ALLBSD_SOURCE */
 #ifndef XAWT
         if (on_the_spot_styles & XIMStatusArea) {
             Widget parent;
@@@@ -1184,7 +1184,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
         }
 #endif /* XAWT */
         XFree((void *)preedit);
-#endif /* __linux__ */
+#endif /* __linux__ || _ALLBSD_SOURCE */
         pX11IMData->ic_passive = XCreateIC(X11im,
                                            XNClientWindow, w,
                                            XNFocusWindow, w,
@@@@ -1343,7 +1343,7 @@@@ PreeditCaretCallback(XIC ic, XPointer client_data,
 
 }
 
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
 static void
 StatusStartCallback(XIC ic, XPointer client_data, XPointer call_data)
 {
@@@@ -1411,7 +1411,7 @@@@ StatusDrawCallback(XIC ic, XPointer client_data,
  finally:
     AWT_UNLOCK();
 }
-#endif /*__linux__*/
+#endif /* __linux__ || _ALLBSD_SOURCE */
 
 static void CommitStringCallback(XIC ic, XPointer client_data, XPointer call_data) {
     JNIEnv *env = GetJNIEnv();
@@@@ -1517,14 +1517,14 @@@@ Java_sun_awt_motif_MInputMethod_openXIMNative(JNIEnv *
 /* Use IMInstantiate call back only on Linux, as there is a bug in Solaris
    (4768335)
 */
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
     registered = XRegisterIMInstantiateCallback(dpy, NULL, NULL,
                      NULL, (XIDProc)OpenXIMCallback, NULL);
     if (!registered) {
         /* directly call openXIM callback */
 #endif
         OpenXIMCallback(dpy, NULL, NULL);
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
     }
 #endif
 
@@@@ -1588,13 +1588,13 @@@@ Java_sun_awt_motif_MInputMethod_createXICNative(JNIEnv
 #endif /* XAWT */
     globalRef = (*env)->NewGlobalRef(env, this);
     pX11IMData->x11inputmethod = globalRef;
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
     pX11IMData->statusWindow = NULL;
-#else /* __linux__ */
+#else /* !__linux__ && !_ALLBSD_SOURCE */
 #ifndef XAWT
     pX11IMData->statusWidget = (Widget) NULL;
 #endif /* XAWT */
-#endif /* __linux__ */
+#endif /* __linux__ || _ALLBSD_SOURCE */
 
     pX11IMData->lookup_buf = 0;
     pX11IMData->lookup_buf_len = 0;
@@@@ -1741,14 +1741,14 @@@@ Java_sun_awt_X11_XInputMethod_setXICFocusNative(JNIEnv
         setXICFocus(pX11IMData->current_ic, req);
         currentX11InputMethodInstance = pX11IMData->x11inputmethod;
         currentFocusWindow =  w;
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
         if (active && pX11IMData->statusWindow && pX11IMData->statusWindow->on)
             onoffStatusWindow(pX11IMData, w, True);
 #endif
     } else {
         currentX11InputMethodInstance = NULL;
         currentFocusWindow = 0;
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
         onoffStatusWindow(pX11IMData, 0, False);
         if (pX11IMData->current_ic != NULL)
 #endif
@@@@ -1765,7 +1765,7 @@@@ JNIEXPORT void JNICALL
 Java_sun_awt_X11InputMethod_turnoffStatusWindow(JNIEnv *env,
                                                 jobject this)
 {
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
     X11InputMethodData *pX11IMData;
     StatusWindow *statusWindow;
 
@@@@ -1862,7 +1862,7 @@@@ Java_sun_awt_motif_MInputMethod_configureStatusAreaNat
     X11InputMethodData *pX11IMData;
     XVaNestedList status;
 
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
       /*do nothing for linux? */
 #else
     AWT_LOCK();
@@@@ -1968,7 +1968,7 @@@@ JNIEXPORT jboolean JNICALL Java_sun_awt_X11InputMethod
 JNIEXPORT void JNICALL Java_sun_awt_X11_XInputMethod_adjustStatusWindow
   (JNIEnv *env, jobject this, jlong window)
 {
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
     AWT_LOCK();
     adjustStatusWindow(window);
     AWT_UNLOCK();
@


1.3
log
@Update to early access build 122. okay jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-jdk_src_solaris_native_sun_awt_awt_InputMethod_c,v 1.2 2009/10/07 01:53:54 kurt Exp $
@


1.2
log
@Update to early access build 72 plus the following:
- sync patches with upstream repo: OpenJDK/bds-port
- fix gtk look and feel issue caused by dlopen of non-matching major
- fix other dlopen's of non-matching majors
- change max memory utilization on i386 to correct build failures
@
text
@d1 4
a4 4
$OpenBSD: patch-jdk_src_solaris_native_sun_awt_awt_InputMethod_c,v 1.1 2008/03/19 18:05:46 kurt Exp $
--- jdk/src/solaris/native/sun/awt/awt_InputMethod.c.orig	Thu Sep 17 03:52:32 2009
+++ jdk/src/solaris/native/sun/awt/awt_InputMethod.c	Sat Sep 26 10:12:03 2009
@@@@ -69,7 +69,7 @@@@ static void PreeditDrawCallback(XIC, XPointer,
d13 1
a13 1
@@@@ -83,7 +83,7 @@@@ static void StatusDrawCallback(XIC, XPointer,
d22 1
a22 1
@@@@ -101,14 +101,14 @@@@ static XIMProc callback_funcs[NCALLBACKS] = {
d39 1
a39 1
@@@@ -148,7 +148,7 @@@@ typedef struct _X11InputMethodData {
d48 1
a48 1
@@@@ -427,7 +427,7 @@@@ destroyX11InputMethodData(JNIEnv *env, X11InputMethodD
d57 1
a57 1
@@@@ -533,7 +533,7 @@@@ awt_x11inputmethod_lookupString(XKeyPressedEvent *even
d66 1
a66 1
@@@@ -541,7 +541,7 @@@@ awt_x11inputmethod_lookupString(XKeyPressedEvent *even
d75 1
a75 1
@@@@ -650,7 +650,7 @@@@ awt_x11inputmethod_lookupString(XKeyPressedEvent *even
d84 1
a84 1
@@@@ -994,7 +994,7 @@@@ void adjustStatusWindow(Widget shell){
d93 1
a93 1
@@@@ -1051,7 +1051,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
d102 1
a102 1
@@@@ -1064,7 +1064,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
d111 1
a111 1
@@@@ -1087,7 +1087,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
d120 1
a120 1
@@@@ -1135,7 +1135,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
d129 1
a129 1
@@@@ -1157,7 +1157,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
d138 1
a138 1
@@@@ -1185,7 +1185,7 @@@@ createXIC(Widget w, X11InputMethodData *pX11IMData,
d145 3
a147 3
                                            XNClientWindow, XtWindow(w),
                                            XNFocusWindow, XtWindow(w),
@@@@ -1344,7 +1344,7 @@@@ PreeditCaretCallback(XIC ic, XPointer client_data,
d156 1
a156 1
@@@@ -1412,7 +1412,7 @@@@ StatusDrawCallback(XIC ic, XPointer client_data,
d165 1
a165 1
@@@@ -1514,14 +1514,14 @@@@ Java_sun_awt_motif_MInputMethod_openXIMNative(JNIEnv *
d172 1
a172 1
                      NULL, (XIMProc)OpenXIMCallback, NULL);
d182 1
a182 1
@@@@ -1585,13 +1585,13 @@@@ Java_sun_awt_motif_MInputMethod_createXICNative(JNIEnv
d199 1
a199 1
@@@@ -1738,14 +1738,14 @@@@ Java_sun_awt_X11_XInputMethod_setXICFocusNative(JNIEnv
d202 1
a202 1
         currentFocusWindow =  XtWindow(w);
d216 1
a216 1
@@@@ -1762,7 +1762,7 @@@@ JNIEXPORT void JNICALL
d225 1
a225 1
@@@@ -1859,7 +1859,7 @@@@ Java_sun_awt_motif_MInputMethod_configureStatusAreaNat
d234 1
a234 1
@@@@ -1965,7 +1965,7 @@@@ JNIEXPORT jboolean JNICALL Java_sun_awt_X11InputMethod
@


1.1
log
@- switch to GPLv2 w/CLASSPATH exception licensed openjdk7 code
- update to early access build 24
- Use GPLv2 licensed binary plugs from the IcedTea project and parts of
  IcedTea's icedtea-copy-plugs.patch & icedtea-graphics.patch.
  For more info see:
    http://icedtea.classpath.org/wiki/Main_Page
- Enable packages since we're fully GPLv2 based now, but still not
  hooked up to bulk builds just yet.
@
text
@d1 3
a3 3
$OpenBSD$
--- jdk/src/solaris/native/sun/awt/awt_InputMethod.c.orig	Sat Dec  1 00:00:00 2007
+++ jdk/src/solaris/native/sun/awt/awt_InputMethod.c	Thu Feb 28 16:05:06 2008
d165 1
a165 1
@@@@ -1522,14 +1522,14 @@@@ Java_sun_awt_motif_MInputMethod_openXIMNative(JNIEnv *
d182 1
a182 1
@@@@ -1593,13 +1593,13 @@@@ Java_sun_awt_motif_MInputMethod_createXICNative(JNIEnv
d199 1
a199 1
@@@@ -1746,14 +1746,14 @@@@ Java_sun_awt_X11_XInputMethod_setXICFocusNative(JNIEnv
d216 1
a216 1
@@@@ -1770,7 +1770,7 @@@@ JNIEXPORT void JNICALL
d225 1
a225 1
@@@@ -1867,7 +1867,7 @@@@ Java_sun_awt_motif_MInputMethod_configureStatusAreaNat
d234 1
a234 1
@@@@ -1973,7 +1973,7 @@@@ JNIEXPORT jboolean JNICALL Java_sun_awt_X11InputMethod
@

