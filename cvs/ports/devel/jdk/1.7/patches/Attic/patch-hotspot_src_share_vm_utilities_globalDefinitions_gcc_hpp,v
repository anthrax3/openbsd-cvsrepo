head	1.7;
access;
symbols
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.4.0.6
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	kurt_20070508:1.1.1.1
	kurt:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2013.01.14.20.16.56;	author kurt;	state dead;
branches;
next	1.6;

1.6
date	2011.09.22.20.26.47;	author kurt;	state Exp;
branches;
next	1.5;

1.5
date	2011.01.11.15.47.49;	author kurt;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.23.03.03.25;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2009.01.04.23.25.16;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.19.18.05.43;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.08.17.06.19;	author kurt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.05.08.17.06.19;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update jdk 1.7 to u9 level:
- Update to u6 via patchset from upstream bsd_port and u6 source from Oracle
- Copied u6 -> u9 patchset from FreeBSD/Greg Lewis's port
- Updated classloader patch from Matthew Dempsky (matthew@@)
okay landry@@
@
text
@$OpenBSD: patch-hotspot_src_share_vm_utilities_globalDefinitions_gcc_hpp,v 1.6 2011/09/22 20:26:47 kurt Exp $
--- hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp.orig	Sun Sep 18 21:21:56 2011
+++ hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp	Sun Sep 18 21:25:49 2011
@@@@ -80,6 +80,12 @@@@
 #ifndef __STDC_LIMIT_MACROS
 #define __STDC_LIMIT_MACROS
 #endif // __STDC_LIMIT_MACROS
+#ifndef __STDC_CONSTANT_MACROS
+#define __STDC_CONSTANT_MACROS
+#endif // __STDC_CONSTANT_MACROS
+#ifndef __STDC_FORMAT_MACROS
+#define __STDC_FORMAT_MACROS
+#endif // __STDC_FORMAT_MACROS
 #include <inttypes.h>
 #include <signal.h>
 #ifndef __OpenBSD__
@


1.6
log
@Update devel/jdk/1.7 to b147 / non-beta
- Remove Early Access now that jdk 1.7 is final
- Use a patch set for all patches from upstream repository:
  http://hg.openjdk.java.net/bsd-port/bsd-port
- Set milestone and build number to fcs b00 to match Oracle.
- Update cacerts file.
- Install unlimited crypto policy.
- Add DIST_SUBDIR=jdk.
- Include patches from icedtea-web for applet hole from
  Landry Breuil <landry@@openbsd.org> via FreeBSD OpenJDK7 port
- Include fix for Oracle bug "7070134: Hotspot crashes with
  sigsegv from PorterStemmer":
  http://hg.openjdk.java.net/hsx/hotspot-comp/hotspot/rev/4e761e7e6e12
okay landry@@ jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@Update to early access build 122. okay jasper@@
@
text
@d1 13
a13 9
$OpenBSD: patch-hotspot_src_share_vm_utilities_globalDefinitions_gcc_hpp,v 1.4 2009/05/23 03:03:25 kurt Exp $
--- hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp.orig	Thu Oct 28 20:17:03 2010
+++ hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp	Mon Nov  1 13:16:17 2010
@@@@ -71,12 +71,25 @@@@
 # include <sys/procfs.h>
 # endif
 
-#ifdef LINUX
+#if defined(LINUX) || defined(_ALLBSD_SOURCE)
d16 1
a16 58
+#ifndef __OpenBSD__
 #include <ucontext.h>
+#endif
+#ifdef __APPLE__
+  #include <AvailabilityMacros.h>
+  #if (MAC_OS_X_VERSION_MAX_ALLOWED <= MAC_OS_X_VERSION_10_4)
+    // Mac OS X 10.4 defines EFL_AC and EFL_ID,
+    // which conflict with hotspot variable names.
+    //
+    // This has been fixed in Mac OS X 10.5.
+    #undef EFL_AC
+    #undef EFL_ID
+  #endif
+#endif
 #include <sys/time.h>
-#endif // LINUX
+#endif // LINUX || _ALLBSD_SOURCE
 
 // 4810578: varargs unsafe on 32-bit integer/64-bit pointer architectures
 // When __cplusplus is defined, NULL is defined as 0 (32-bit constant) in
@@@@ -112,7 +125,7 @@@@
 // pointer is stored as integer value.  On some platforms, sizeof(intptr_t) >
 // sizeof(void*), so here we want something which is integer type, but has the
 // same size as a pointer.
-#ifdef LINUX
+#ifdef __GNUC__
   #ifdef _LP64
     #define NULL_WORD  0L
   #else
@@@@ -124,7 +137,7 @@@@
   #define NULL_WORD  NULL
 #endif
 
-#ifndef LINUX
+#if !defined(LINUX) && !defined(_ALLBSD_SOURCE)
 // Compiler-specific primitive types
 typedef unsigned short     uint16_t;
 #ifndef _UINT32_T
@@@@ -144,7 +157,7 @@@@ typedef unsigned int            uintptr_t;
 // prior definition of intptr_t, and add "&& !defined(XXX)" above.
 #endif // _SYS_INT_TYPES_H
 
-#endif // !LINUX
+#endif // !LINUX && !_ALLBSD_SOURCE
 
 // Additional Java basic types
 
@@@@ -236,7 +249,9 @@@@ inline int g_isnan(float  f) { return isnanf(f); }
 inline int g_isnan(float  f) { return isnand(f); }
 #endif
 inline int g_isnan(double f) { return isnand(f); }
-#elif LINUX
+#elif defined(__APPLE__)
+inline int g_isnan(double f) { return isnan(f); }
+#elif defined(LINUX) || defined(_ALLBSD_SOURCE)
 inline int g_isnan(float  f) { return isnanf(f); }
 inline int g_isnan(double f) { return isnan(f); }
 #else
@


1.4
log
@- update from early access b43 to b59
- sync patches with OpenJDK's bsd_port project
- require a pre-installed package for native_bootstrap
- The new 1.7 class java.nio.channels.spi.AsynchronousChannelProvider
  is not implemented yet on BSD.
- The new 1.7 package java.nio.sctp is not included and not supported on
  OpenBD
@
text
@d1 3
a3 3
$OpenBSD: patch-hotspot_src_share_vm_utilities_globalDefinitions_gcc_hpp,v 1.3 2009/01/04 23:25:16 kurt Exp $
--- hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp.orig	Fri May  8 03:30:37 2009
+++ hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp	Fri May 15 17:50:50 2009
d59 1
a59 1
@@@@ -228,7 +241,9 @@@@ inline int g_isnan(float  f) { return isnanf(f); }
@


1.3
log
@Update to early access build 42:
- sync/regen patches
- use os_bsd_x86.cpp from OpenJDK bsd-java repository plus
  Greg Lewis's fixes posted to the bsd-port-dev list
- use Xiaobin Lu's datatype corrections from OpenJDK bug
  6787106 + additional datatype corrections from me.
- use Vladimir Kozlov's bug fix from OpenJDK bug 6782820
- remove obsolete IcedTea awt binary plugs and update binary
  plug distfile
- correctly define DEVTOOLS_PATH for bsd and verify + correct
  Defs-utils.gmk locations for bsd utilities
@
text
@d1 4
a4 4
$OpenBSD: patch-hotspot_src_share_vm_utilities_globalDefinitions_gcc_hpp,v 1.2 2008/03/19 18:05:43 kurt Exp $
--- hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp.orig	Fri Dec 19 03:42:12 2008
+++ hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp	Sun Dec 28 19:25:16 2008
@@@@ -71,12 +71,14 @@@@
d15 11
d32 4
a35 10
@@@@ -107,22 +109,22 @@@@
 #endif
 
 // NULL vs NULL_WORD:
-// On Linux NULL is defined as a special type '__null'. Assigning __null to
+// With gcc NULL is defined as a special type '__null'. Assigning __null to
 // integer variable will cause gcc warning. Use NULL_WORD in places where a
-// pointer is stored as integer value.  On some platforms, sizeof(intptr_t) >
-// sizeof(void*), so here we want something which is integer type, but has the
-// same size as a pointer.
d37 1
a37 4
+// pointer is stored as integer value.  On some platforms the datatype of
+// intptr_t != int, so here we want something which is the same size as a
+// pointer.
+#ifdef __GNUG__
d41 1
a41 4
-    #define NULL_WORD  0
+    #define NULL_WORD  ((intptr_t)0)
   #endif
 #else
d50 1
a50 1
@@@@ -142,7 +144,7 @@@@ typedef unsigned int            uintptr_t;
d59 1
a59 1
@@@@ -226,7 +228,7 @@@@ inline int g_isnan(float  f) { return isnanf(f); }
d64 2
@


1.2
log
@- switch to GPLv2 w/CLASSPATH exception licensed openjdk7 code
- update to early access build 24
- Use GPLv2 licensed binary plugs from the IcedTea project and parts of
  IcedTea's icedtea-copy-plugs.patch & icedtea-graphics.patch.
  For more info see:
    http://icedtea.classpath.org/wiki/Main_Page
- Enable packages since we're fully GPLv2 based now, but still not
  hooked up to bulk builds just yet.
@
text
@d1 3
a3 3
$OpenBSD: patch-hotspot_src_share_vm_utilities_globalDefinitions_gcc_hpp,v 1.1.1.1 2007/05/08 17:06:19 kurt Exp $
--- hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp.orig	Tue Oct 30 05:00:54 2007
+++ hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp	Wed Nov  7 13:11:35 2007
d21 10
a30 4
@@@@ -112,7 +114,7 @@@@
 // pointer is stored as integer value.  On some platforms, sizeof(intptr_t) >
 // sizeof(void*), so here we want something which is integer type, but has the
 // same size as a pointer.
d32 3
d39 4
a42 1
@@@@ -122,7 +124,7 @@@@
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp.orig	Tue Apr 10 04:02:19 2007
+++ hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp	Mon Apr 16 08:42:39 2007
@@@@ -74,12 +74,14 @@@@
d21 1
a21 1
@@@@ -115,7 +117,7 @@@@
d30 1
a30 1
@@@@ -125,7 +127,7 @@@@
d34 1
a34 1
-#ifndef	LINUX
d39 1
a39 1
@@@@ -145,7 +147,7 @@@@ typedef unsigned int		uintptr_t;
d48 1
a48 1
@@@@ -229,7 +231,7 @@@@ inline int g_isnan(float  f) { return isnanf(f); }
@


1.1.1.1
log
@Initial import of jdk 1.7 (a.k.a. OpenJDK 7) work in progress. So far Sun
has released the hotspot portion of 1.7 under GPLv2. j2se and deploy
(plugin & webstart) will come later. No packages yet since j2se is copied
in from 1.5.

Note: hotspot for BSD in previous versions of the jdk were based on a
mixture of Solaris code and Linux code (for amd64). In this version I have
selected Linux as the base and only ported of small parts of the Solaris
code as needed. Using Linux code as the base has significantly reduced the
code divergence for BSD support and should make maintaining the port
easier.

okay ian@@, go for it espie@@
@
text
@@
