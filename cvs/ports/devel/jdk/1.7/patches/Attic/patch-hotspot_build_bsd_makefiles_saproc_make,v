head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	kurt_20070508:1.1.1.1
	kurt:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2009.01.04.23.25.16;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2007.05.08.17.06.18;	author kurt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.05.08.17.06.18;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to early access build 42:
- sync/regen patches
- use os_bsd_x86.cpp from OpenJDK bsd-java repository plus
  Greg Lewis's fixes posted to the bsd-port-dev list
- use Xiaobin Lu's datatype corrections from OpenJDK bug
  6787106 + additional datatype corrections from me.
- use Vladimir Kozlov's bug fix from OpenJDK bug 6782820
- remove obsolete IcedTea awt binary plugs and update binary
  plug distfile
- correctly define DEVTOOLS_PATH for bsd and verify + correct
  Defs-utils.gmk locations for bsd utilities
@
text
@$OpenBSD: patch-hotspot_build_bsd_makefiles_saproc_make,v 1.1 2007/05/08 17:06:18 kurt Exp $
--- hotspot/build/bsd/makefiles/saproc.make.orig	Mon Apr 16 08:42:36 2007
+++ hotspot/build/bsd/makefiles/saproc.make	Mon Apr 16 08:42:38 2007
@@@@ -43,11 +43,11 @@@@ SAMAPFILE = $(SASRCDIR)/mapfile
 
 DEST_SAPROC = $(JDK_LIBDIR)/$(LIBSAPROC)
 
-# if $(AGENT_DIR) does not exist, we don't build SA
+# if $(SASRCDIR) does not exist, we don't build SA
 # also, we don't build SA on Itanium.
 
 checkAndBuildSA:
-	$(QUIETLY) if [ -d $(AGENT_DIR) -a "$(SRCARCH)" != "ia64" ] ; then \
+	$(QUIETLY) if [ -d $(SASRCDIR) -a "$(SRCARCH)" != "ia64" ] ; then \
 	   $(MAKE) -f vm.make $(LIBSAPROC); \
 	fi
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Initial import of jdk 1.7 (a.k.a. OpenJDK 7) work in progress. So far Sun
has released the hotspot portion of 1.7 under GPLv2. j2se and deploy
(plugin & webstart) will come later. No packages yet since j2se is copied
in from 1.5.

Note: hotspot for BSD in previous versions of the jdk were based on a
mixture of Solaris code and Linux code (for amd64). In this version I have
selected Linux as the base and only ported of small parts of the Solaris
code as needed. Using Linux code as the base has significantly reduced the
code divergence for BSD support and should make maintaining the port
easier.

okay ian@@, go for it espie@@
@
text
@@
