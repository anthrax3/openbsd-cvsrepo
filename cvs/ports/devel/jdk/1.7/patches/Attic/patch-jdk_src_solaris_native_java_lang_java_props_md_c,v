head	1.5;
access;
symbols
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.01.14.20.16.56;	author kurt;	state dead;
branches;
next	1.4;

1.4
date	2012.10.24.18.54.03;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.22.20.26.48;	author kurt;	state dead;
branches;
next	1.2;

1.2
date	2011.01.11.15.47.50;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2008.03.19.18.05.46;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update jdk 1.7 to u9 level:
- Update to u6 via patchset from upstream bsd_port and u6 source from Oracle
- Copied u6 -> u9 patchset from FreeBSD/Greg Lewis's port
- Updated classloader patch from Matthew Dempsky (matthew@@)
okay landry@@
@
text
@$OpenBSD: patch-jdk_src_solaris_native_java_lang_java_props_md_c,v 1.4 2012/10/24 18:54:03 kurt Exp $

OpenBSD supports only the "C" and "POSIX" locales for all but the
LC_CTYPE locale.

--- jdk/src/solaris/native/java/lang/java_props_md.c.orig	Sat Aug  4 21:43:10 2012
+++ jdk/src/solaris/native/java/lang/java_props_md.c	Sat Aug  4 22:49:04 2012
@@@@ -142,7 +142,7 @@@@ static int ParseLocale(int cat, char ** std_language, 
     /* Query the locale set for the category */
     lc = setlocale(cat, NULL);
 
-#ifndef __linux__
+#if !defined(__linux__) && !defined(_ALLBSD_SOURCE)
     if (lc == NULL) {
         return 0;
     }
@@@@ -430,12 +430,19 @@@@ GetJavaProperties(JNIEnv *env)
                     &(sprops.format_country),
                     &(sprops.format_variant),
                     &(sprops.encoding))) {
+#ifdef __OpenBSD__
+        sprops.language = sprops.format_language;
+        sprops.script = sprops.format_script;
+        sprops.country = sprops.format_country;
+        sprops.variant = sprops.format_variant;
+#else
         ParseLocale(LC_MESSAGES,
                     &(sprops.language),
                     &(sprops.script),
                     &(sprops.country),
                     &(sprops.variant),
                     NULL);
+#endif
     } else {
         sprops.language = "en";
         sprops.encoding = "ISO8859-1";
@


1.4
log
@- Restore man pages in PLIST-main. Reported by Tomas Bodzar
- Patch to serialize gconf client access which corrects gconf/dbus
related crashes. From Christian Schulte
- Patch to stop the JDK from querying the locale using the LC_MESSAGES
category. From Christian Schulte
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@Update devel/jdk/1.7 to b147 / non-beta
- Remove Early Access now that jdk 1.7 is final
- Use a patch set for all patches from upstream repository:
  http://hg.openjdk.java.net/bsd-port/bsd-port
- Set milestone and build number to fcs b00 to match Oracle.
- Update cacerts file.
- Install unlimited crypto policy.
- Add DIST_SUBDIR=jdk.
- Include patches from icedtea-web for applet hole from
  Landry Breuil <landry@@openbsd.org> via FreeBSD OpenJDK7 port
- Include fix for Oracle bug "7070134: Hotspot crashes with
  sigsegv from PorterStemmer":
  http://hg.openjdk.java.net/hsx/hotspot-comp/hotspot/rev/4e761e7e6e12
okay landry@@ jasper@@
@
text
@d1 32
a32 71
$OpenBSD: patch-jdk_src_solaris_native_java_lang_java_props_md_c,v 1.2 2011/01/11 15:47:50 kurt Exp $
--- jdk/src/solaris/native/java/lang/java_props_md.c.orig	Thu Dec 16 17:15:16 2010
+++ jdk/src/solaris/native/java/lang/java_props_md.c	Tue Jan  4 18:25:21 2011
@@@@ -23,7 +23,7 @@@@
  * questions.
  */
 
-#ifdef __linux__
+#if defined(__linux__) || defined(_ALLBSD_SOURCE)
 #include <stdio.h>
 #include <ctype.h>
 #endif
@@@@ -42,9 +42,17 @@@@
 #include <time.h>
 #include <errno.h>
 
+#if defined(_ALLBSD_SOURCE)
+#if !defined(P_tmpdir)
+#include <paths.h>
+#define P_tmpdir _PATH_VARTMP
+#endif
+#endif
+
 #include "locale_str.h"
 #include "java_props.h"
 
+#if !defined(_ALLBSD_SOURCE)
 #ifdef __linux__
   #ifndef CODESET
   #define CODESET _NL_CTYPE_CODESET_NAME
@@@@ -54,6 +62,7 @@@@
 #define CODESET ALT_CODESET_KEY
 #endif
 #endif
+#endif /* !_ALLBSD_SOURCE */
 
 /* Take an array of string pairs (map of key->value) and a string (key).
  * Examine each pair in the map to see if the first string (key) matches the
@@@@ -397,6 +406,13 @@@@ GetJavaProperties(JNIEnv *env)
     sprops.display_variant = sprops.variant;
     sprops.sun_jnu_encoding = sprops.encoding;
 
+#ifdef _ALLBSD_SOURCE
+#if BYTE_ORDER == _LITTLE_ENDIAN
+     sprops.unicode_encoding = "UnicodeLittle";
+ #else
+     sprops.unicode_encoding = "UnicodeBig";
+ #endif
+#else /* !_ALLBSD_SOURCE */
 #ifdef __linux__
 #if __BYTE_ORDER == __LITTLE_ENDIAN
     sprops.unicode_encoding = "UnicodeLittle";
@@@@ -406,6 +422,7 @@@@ GetJavaProperties(JNIEnv *env)
 #else
     sprops.unicode_encoding = "UnicodeBig";
 #endif
+#endif /* _ALLBSD_SOURCE */
 
     /* user properties */
     {
@@@@ -442,12 +459,14 @@@@ GetJavaProperties(JNIEnv *env)
     sprops.path_separator = ":";
     sprops.line_separator = "\n";
 
+#if !defined(_ALLBSD_SOURCE)
     /* Append CDE message and resource search path to NLSPATH and
      * XFILESEARCHPATH, in order to pick localized message for
      * FileSelectionDialog window (Bug 4173641).
      */
     setPathEnvironment("NLSPATH=/usr/dt/lib/nls/msg/%L/%N.cat");
     setPathEnvironment("XFILESEARCHPATH=/usr/dt/app-defaults/%L/Dt");
d34 3
a36 3
 
     return &sprops;
 }
@


1.2
log
@Update to early access build 122. okay jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-jdk_src_solaris_native_java_lang_java_props_md_c,v 1.1 2008/03/19 18:05:46 kurt Exp $
@


1.1
log
@- switch to GPLv2 w/CLASSPATH exception licensed openjdk7 code
- update to early access build 24
- Use GPLv2 licensed binary plugs from the IcedTea project and parts of
  IcedTea's icedtea-copy-plugs.patch & icedtea-graphics.patch.
  For more info see:
    http://icedtea.classpath.org/wiki/Main_Page
- Enable packages since we're fully GPLv2 based now, but still not
  hooked up to bulk builds just yet.
@
text
@d1 3
a3 3
$OpenBSD$
--- jdk/src/solaris/native/java/lang/java_props_md.c.orig	Sat Dec  1 00:00:00 2007
+++ jdk/src/solaris/native/java/lang/java_props_md.c	Tue Feb 26 18:50:58 2008
d5 1
a5 1
  * have any questions.
d29 3
a31 3
 #define CODESET _NL_CTYPE_CODESET_NAME
 #else
@@@@ -52,6 +60,7 @@@@
d39 3
a41 73
@@@@ -121,7 +130,7 @@@@ setPathEnvironment(char *envstring)
 java_props_t *
 GetJavaProperties(JNIEnv *env)
 {
-    static java_props_t sprops = {0};
+    static java_props_t sprops = { 0 };
     char *v; /* tmp var */
 
     if (sprops.user_dir) {
@@@@ -188,7 +197,12 @@@@ GetJavaProperties(JNIEnv *env)
     {
         char *lc;
         lc = setlocale(LC_CTYPE, "");
-#ifndef __linux__
+#if defined(_ALLBSD_SOURCE)
+	if (lc == NULL) {
+	    lc = "C";
+	}
+	{
+#elif !defined(__linux__)
         if (lc == NULL) {
             /*
              * 'lc == null' means system doesn't support user's environment
@@@@ -219,7 +233,7 @@@@ GetJavaProperties(JNIEnv *env)
             char *p, encoding_variant[64];
             int i, found;
 
-#ifndef __linux__
+#if !defined(__linux__) && !defined(_ALLBSD_SOURCE)
             /*
              * Workaround for Solaris bug 4201684: Xlib doesn't like @@euro
              * locales. Since we don't depend on the libc @@euro behavior,
@@@@ -236,6 +250,13 @@@@ GetJavaProperties(JNIEnv *env)
                 *p = '\0';
             setlocale(LC_ALL, temp);
 #endif
+	    if (lc == NULL) {
+		strncpy(temp, "C", sizeof(temp)-1);
+		temp[sizeof(temp)-1] = '\0';
+	    } else {
+		strncpy(temp, lc, sizeof(temp)-1);
+		temp[sizeof(temp)-1] = '\0';
+	    }
 
             strcpy(temp, lc);
 
@@@@ -316,6 +337,9 @@@@ GetJavaProperties(JNIEnv *env)
             else
                 p = nl_langinfo(CODESET);
 
+	    if (p == NULL || !strcmp(p, "C") || !strcmp(p, "US-ASCII"))
+		p = ""; // use default
+
             /* Convert the bare "646" used on Solaris to a proper IANA name */
             if (strcmp(p, "646") == 0)
                 p = "ISO646-US";
@@@@ -325,6 +349,7 @@@@ GetJavaProperties(JNIEnv *env)
             std_encoding = (*p != '\0') ? p : "ISO8859-1";
 
 
+#if !defined(_ALLBSD_SOURCE)
 #ifdef __linux__
             /*
              * Remap the encoding string to a different value for japanese
@@@@ -355,11 +380,19 @@@@ GetJavaProperties(JNIEnv *env)
                     std_encoding = "Big5_Solaris";
             }
 #endif
+#endif /* !_ALLBSD_SOURCE */
             sprops.encoding = std_encoding;
             sprops.sun_jnu_encoding = sprops.encoding;
         }
     }
d53 1
a53 1
@@@@ -369,6 +402,7 @@@@ GetJavaProperties(JNIEnv *env)
d61 1
a61 1
@@@@ -405,12 +439,14 @@@@ GetJavaProperties(JNIEnv *env)
@

