head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.09.22.20.26.48;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2011.02.05.23.11.18;	author ian;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update devel/jdk/1.7 to b147 / non-beta
- Remove Early Access now that jdk 1.7 is final
- Use a patch set for all patches from upstream repository:
  http://hg.openjdk.java.net/bsd-port/bsd-port
- Set milestone and build number to fcs b00 to match Oracle.
- Update cacerts file.
- Install unlimited crypto policy.
- Add DIST_SUBDIR=jdk.
- Include patches from icedtea-web for applet hole from
  Landry Breuil <landry@@openbsd.org> via FreeBSD OpenJDK7 port
- Include fix for Oracle bug "7070134: Hotspot crashes with
  sigsegv from PorterStemmer":
  http://hg.openjdk.java.net/hsx/hotspot-comp/hotspot/rev/4e761e7e6e12
okay landry@@ jasper@@
@
text
@$OpenBSD: patch-jdk_src_share_classes_sun_misc_FloatingDecimal_java,v 1.1 2011/02/05 23:11:18 ian Exp $

# Fix for DoS caused by very small subnormal double, original fix at 
# https://bugs.openjdk.java.net/show_bug.cgi?id=100119

--- jdk/src/share/classes/sun/misc/FloatingDecimal.java.orig	Sat Feb  5 08:45:51 2011
+++ jdk/src/share/classes/sun/misc/FloatingDecimal.java	Sat Feb  5 08:44:59 2011
@@@@ -1547,7 +1547,7 @@@@ public class FloatingDecimal{
                 if ( (cmpResult = bigB.cmp( bigD ) ) > 0 ){
                     overvalue = true; // our candidate is too big.
                     diff = bigB.sub( bigD );
-                    if ( (bigIntNBits == 1) && (bigIntExp > -expBias) ){
+                    if ( (bigIntNBits == 1) && (bigIntExp > -expBias+1) ){
                         // candidate is a normalized exact power of 2 and
                         // is too big. We will be subtracting.
                         // For our purposes, ulp is the ulp of the
@


1.1
log
@Security Fix for DoS caused by very small subnormal double, found by Konstantin Preisser
at http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/.
Fix from https://bugs.openjdk.java.net/show_bug.cgi?id=100119.
Ok kurt@@ (maintainer), ok & comments sthen@@, ok naddy@@, aja@@.
@
text
@d1 1
a1 1
$OpenBSD$
@

