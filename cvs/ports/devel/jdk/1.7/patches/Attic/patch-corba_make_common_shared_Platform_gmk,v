head	1.7;
access;
symbols
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.2.0.6
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2011.09.22.20.26.47;	author kurt;	state dead;
branches;
next	1.6;

1.6
date	2011.01.11.15.47.49;	author kurt;	state Exp;
branches;
next	1.5;

1.5
date	2009.10.07.01.53.54;	author kurt;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.10.19.01.09;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.23.03.03.24;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.21.02.46.43;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2008.03.19.18.05.43;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update devel/jdk/1.7 to b147 / non-beta
- Remove Early Access now that jdk 1.7 is final
- Use a patch set for all patches from upstream repository:
  http://hg.openjdk.java.net/bsd-port/bsd-port
- Set milestone and build number to fcs b00 to match Oracle.
- Update cacerts file.
- Install unlimited crypto policy.
- Add DIST_SUBDIR=jdk.
- Include patches from icedtea-web for applet hole from
  Landry Breuil <landry@@openbsd.org> via FreeBSD OpenJDK7 port
- Include fix for Oracle bug "7070134: Hotspot crashes with
  sigsegv from PorterStemmer":
  http://hg.openjdk.java.net/hsx/hotspot-comp/hotspot/rev/4e761e7e6e12
okay landry@@ jasper@@
@
text
@$OpenBSD: patch-corba_make_common_shared_Platform_gmk,v 1.6 2011/01/11 15:47:49 kurt Exp $
--- corba/make/common/shared/Platform.gmk.orig	Thu Oct 28 20:16:47 2010
+++ corba/make/common/shared/Platform.gmk	Mon Nov  1 13:16:10 2010
@@@@ -231,6 +231,101 @@@@ ifeq ($(SYSTEM_UNAME), Linux)
   MB_OF_MEMORY := $(shell free -m | fgrep Mem: | sed -e 's@@\ \ *@@ @@g' | cut -d' ' -f2)
 endif
 
+ifeq ($(SYSTEM_UNAME), FreeBSD)
+  PLATFORM = bsd
+  OS_NAME = freebsd
+  OS_VENDOR = FreeBSD
+  REQUIRED_OS_VERSION = 6.0
+endif
+
+ifeq ($(SYSTEM_UNAME), Darwin)
+  PLATFORM = bsd
+  OS_NAME = darwin
+  OS_VENDOR = Apple
+  REQUIRED_OS_VERSION = 8.0
+endif
+
+ifeq ($(SYSTEM_UNAME), NetBSD)
+  PLATFORM = bsd
+  OS_NAME = netbsd
+  OS_VENDOR = NetBSD
+  REQUIRED_OS_VERSION = 3.0
+endif
+
+ifeq ($(SYSTEM_UNAME), OpenBSD)
+  PLATFORM = bsd
+  OS_NAME = openbsd
+  OS_VENDOR = OpenBSD
+  REQUIRED_OS_VERSION = 4.2
+endif
+
+# Platform settings specific to BSD
+ifeq ($(PLATFORM), bsd)
+  OS_VERSION := $(shell uname -r)
+  # Arch and OS name/version
+  mach := $(shell uname -m)
+  archExpr = case "$(mach)" in \
+                i[3-9]86) \
+                    echo i586 \
+                    ;; \
+                sparc64) \
+                    echo sparcv9 \
+                    ;; \
+                sparc*) \
+                    echo sparc \
+                    ;; \
+                x86_64) \
+                    echo amd64 \
+                    ;; \
+                "Power Macintosh") \
+                    echo ppc \
+                    ;; \
+                *) \
+                    echo $(mach) \
+                    ;; \
+      esac
+  ARCH        := $(shell $(archExpr) )
+  ARCH_FAMILY := $(ARCH)
+
+  # Darwin builds may be 32-bit or 64-bit data model.
+  ifeq ($(SYSTEM_UNAME), Darwin)
+    ifeq ($(ARCH), i586)
+      ifeq ($(ARCH_DATA_MODEL), 64)
+        ARCH=amd64
+      endif
+    endif
+  endif
+
+  # i586, sparc, and ppc are 32 bit, amd64 and sparc64 are 64
+  ifneq (,$(findstring $(ARCH), i586 sparc ppc))
+    ARCH_DATA_MODEL=32
+  else
+    ARCH_DATA_MODEL=64
+  endif
+
+  # Need to maintain the jre/lib/i386 location for 32-bit Intel
+  ifeq ($(ARCH), i586)
+    LIBARCH = i386
+  else
+    LIBARCH = $(ARCH)
+  endif
+
+  # Value of Java os.arch property
+  ARCHPROP  = $(LIBARCH)
+
+  # Suffix for file bundles used in previous release
+  BUNDLE_FILE_SUFFIX=.tar.gz
+  # Minimum disk space needed as determined by running 'du -sk' on 
+  #    a fully built workspace.
+  REQUIRED_FREE_SPACE=1500000
+  # How much RAM does this machine have:
+  ifeq ($(OS_VENDOR), OpenBSD)
+    MB_OF_MEMORY=$(shell sysctl -n hw.physmem | awk '{print int($$NF / 1048576); }' )
+  else
+    MB_OF_MEMORY=$(shell (sysctl -n hw.physmem64 2> /dev/null || sysctl -n hw.physmem) | awk '{print int($$NF / 1048576); }' )
+  endif
+endif
+
 # Windows with and without CYGWIN will be slightly different
 ifeq ($(SYSTEM_UNAME), Windows_NT)
   PLATFORM = windows
@@@@ -379,6 +474,18 @@@@ ifndef MAX_VM_MEMORY
   export MIN_VM_MEMORY
   export LOW_MEMORY_MACHINE
   export MAX_VM_MEMORY
+endif
+
+# for OpenBSD/i386 limit to 736 max
+ifeq ($(OS_VENDOR), OpenBSD)
+  ifeq ($(ARCH_DATA_MODEL), 32)
+    MAX_VM_MEMORY := $(shell \
+      if [ $(MAX_VM_MEMORY) -gt 736 ] ; then \
+        echo "736"; \
+      else \
+        echo "$(MAX_VM_MEMORY)" ; \
+      fi)
+  endif
 endif
 
 REQUIRED_ZIP_VER = 2.2
@


1.6
log
@Update to early access build 122. okay jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-corba_make_common_shared_Platform_gmk,v 1.5 2009/10/07 01:53:54 kurt Exp $
@


1.5
log
@Update to early access build 72 plus the following:
- sync patches with upstream repo: OpenJDK/bds-port
- fix gtk look and feel issue caused by dlopen of non-matching major
- fix other dlopen's of non-matching majors
- change max memory utilization on i386 to correct build failures
@
text
@d1 4
a4 4
$OpenBSD: patch-corba_make_common_shared_Platform_gmk,v 1.4 2009/06/10 19:01:09 kurt Exp $
--- corba/make/common/shared/Platform.gmk.orig	Thu Sep 17 03:47:23 2009
+++ corba/make/common/shared/Platform.gmk	Mon Oct  5 14:53:53 2009
@@@@ -262,6 +262,89 @@@@ ifeq ($(SYSTEM_UNAME), Linux)
d12 1
a12 1
+ REQUIRED_OS_VERSION = 6.0
d19 1
a19 1
+ REQUIRED_OS_VERSION = 8.0
d45 12
d73 2
a74 2
+  # i586 and sparc are 32 bit, amd64 and sparc64 are 64
+  ifneq (,$(findstring $(ARCH), i586 sparc))
d106 4
a109 4
@@@@ -411,6 +494,18 @@@@ else
   LOW_MEMORY_MACHINE := true
   MAX_VM_MEMORY      := 384
   MIN_VM_MEMORY      := 128
@


1.4
log
@- binary plugs distfile no longer needed
- sync patches with OpenJDK7 bsd-port repository
- install a usable cacerts
- Remove Interruptible IO support
tested by ian@@ william@@
@
text
@d1 3
a3 3
$OpenBSD: patch-corba_make_common_shared_Platform_gmk,v 1.3 2009/05/23 03:03:24 kurt Exp $
--- corba/make/common/shared/Platform.gmk.orig	Thu May 14 03:25:58 2009
+++ corba/make/common/shared/Platform.gmk	Wed Jun  3 16:07:27 2009
d94 7
a100 7
@@@@ -373,7 +456,14 @@@@ endif
 #    build machines and adjustments will be made to prevent excessing
 #    system swapping during the build.
 #    If we don't know, assume 512. Subtract 128 from MB for VM MAX.
-#    Don't set VM max over 1024-128=896.
+#    Don't set VM max over 1024-128=896, except on OpenBSD where
+#    736 is the max.
d102 11
a112 17
+  ABS_MAX_MEMORY := "736"
+else
+  ABS_MAX_MEMORY := "896"
+endif
+
 ifneq ($(MB_OF_MEMORY),)
   LOW_MEMORY_MACHINE := $(shell \
     if [ $(MB_OF_MEMORY) -le 512 ] ; then \
@@@@ -385,7 +475,7 @@@@ ifneq ($(MB_OF_MEMORY),)
     if [ $(MB_OF_MEMORY) -le 1024 ] ; then \
       expr $(MB_OF_MEMORY) '-' 128 ; \
     else \
-      echo "896"; \
+      echo $(ABS_MAX_MEMORY); \
     fi)
   MIN_VM_MEMORY := $(shell \
     if [ $(MAX_VM_MEMORY) -le 128 ] ; then \
@


1.3
log
@- update from early access b43 to b59
- sync patches with OpenJDK's bsd_port project
- require a pre-installed package for native_bootstrap
- The new 1.7 class java.nio.channels.spi.AsynchronousChannelProvider
  is not implemented yet on BSD.
- The new 1.7 package java.nio.sctp is not included and not supported on
  OpenBD
@
text
@d1 4
a4 4
$OpenBSD: patch-corba_make_common_shared_Platform_gmk,v 1.2 2008/03/21 02:46:43 kurt Exp $
--- corba/make/common/shared/Platform.gmk.orig	Fri May  8 03:29:39 2009
+++ corba/make/common/shared/Platform.gmk	Mon May 18 08:24:56 2009
@@@@ -262,6 +262,85 @@@@ ifeq ($(SYSTEM_UNAME), Linux)
d84 5
a88 1
+  MB_OF_MEMORY=$(shell sysctl -n hw.physmem | awk '{print int($$NF / 1048576); }' )
d94 1
a94 1
@@@@ -373,7 +452,14 @@@@ endif
d110 1
a110 1
@@@@ -385,7 +471,7 @@@@ ifneq ($(MB_OF_MEMORY),)
@


1.2
log
@- add VMEM_WARNING
- adjust memory calculations so this has a chance of building on systems
  with 256M of real memory. Reported by Dongsheng Song
- bring the the rest of IcedTea's icedtea-graphics.patch and fix typo that
  prevented interactive apps from launching. I expect I will eventually
  will want to convert over to using IcedTea in full in the future.
@
text
@d1 4
a4 4
$OpenBSD: patch-corba_make_common_shared_Platform_gmk,v 1.1 2008/03/19 18:05:43 kurt Exp $
--- corba/make/common/shared/Platform.gmk.orig	Sat Dec  1 00:00:00 2007
+++ corba/make/common/shared/Platform.gmk	Thu Mar 20 09:05:23 2008
@@@@ -262,6 +262,73 @@@@ ifeq ($(SYSTEM_UNAME), Linux)
d15 7
d52 9
d84 1
a84 5
+  ifeq ($(OS_VENDOR), OpenBSD)
+    MB_OF_MEMORY=$(shell perl -e 'printf "%d", `sysctl hw.physmem | cut -d'=' -f2` / 1048576' )
+  else
+    MB_OF_MEMORY := $(shell `sysctl hw.physmem | cut -d' ' -f2` / 1048576 )
+  endif
d90 1
a90 1
@@@@ -373,7 +440,7 @@@@ endif
d95 8
a102 1
+#    Don't set VM max over 864-128=736.
d106 2
a107 6
@@@@ -382,10 +449,10 @@@@ ifneq ($(MB_OF_MEMORY),)
       echo "false"; \
     fi)
   MAX_VM_MEMORY := $(shell \
-    if [ $(MB_OF_MEMORY) -le 1024 ] ; then \
+    if [ $(MB_OF_MEMORY) -le 864 ] ; then \
d111 1
a111 1
+      echo "736"; \
@


1.1
log
@- switch to GPLv2 w/CLASSPATH exception licensed openjdk7 code
- update to early access build 24
- Use GPLv2 licensed binary plugs from the IcedTea project and parts of
  IcedTea's icedtea-copy-plugs.patch & icedtea-graphics.patch.
  For more info see:
    http://icedtea.classpath.org/wiki/Main_Page
- Enable packages since we're fully GPLv2 based now, but still not
  hooked up to bulk builds just yet.
@
text
@d1 3
a3 3
$OpenBSD$
--- corba/make/common/shared/Platform.gmk.orig	Thu Nov  8 12:00:14 2007
+++ corba/make/common/shared/Platform.gmk	Thu Nov  8 12:04:28 2007
d78 1
a78 2
@@@@ -372,8 +439,8 @@@@ endif
 # Machines with 512Mb or less of real memory are considered low memory
d81 1
a81 1
-#    If we don't know, assume 512. Subtract 128 from MB for VM MAX.
d83 1
a83 2
+#    If we don't know, assume 512. Subtract 736 from MB for VM MAX.
+#    Don't set VM max over 1024-288=736.
d87 2
a88 1
@@@@ -383,9 +450,9 @@@@ ifneq ($(MB_OF_MEMORY),)
d91 3
a93 3
     if [ $(MB_OF_MEMORY) -le 1024 ] ; then \
-      expr $(MB_OF_MEMORY) '-' 128 ; \
+      expr $(MB_OF_MEMORY) '-' 288 ; \
@

