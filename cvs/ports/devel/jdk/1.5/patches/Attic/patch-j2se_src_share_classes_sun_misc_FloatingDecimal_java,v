head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.10.07.13.54.31;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2011.02.05.23.11.18;	author ian;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- remove devel/jdk/1.5 and lang/kaffe
- adjust java.port.mk for their removal
- bump affected packages
okay jasper@@
@
text
@$OpenBSD: patch-j2se_src_share_classes_sun_misc_FloatingDecimal_java,v 1.1 2011/02/05 23:11:18 ian Exp $

# Fix for DoS caused by very small subnormal double, original fix at 
# https://bugs.openjdk.java.net/show_bug.cgi?id=100119

--- j2se/src/share/classes/sun/misc/FloatingDecimal.java.orig	Sat Feb  5 09:34:49 2011
+++ j2se/src/share/classes/sun/misc/FloatingDecimal.java	Sat Feb  5 09:36:11 2011
@@@@ -1529,7 +1529,7 @@@@ public class FloatingDecimal{
 		if ( (cmpResult = bigB.cmp( bigD ) ) > 0 ){
 		    overvalue = true; // our candidate is too big.
 		    diff = bigB.sub( bigD );
-		    if ( (bigIntNBits == 1) && (bigIntExp > -expBias) ){
+		    if ( (bigIntNBits == 1) && (bigIntExp > -expBias+1) ){
 			// candidate is a normalized exact power of 2 and
 			// is too big. We will be subtracting.
 			// For our purposes, ulp is the ulp of the
@


1.1
log
@Security Fix for DoS caused by very small subnormal double, found by Konstantin Preisser
at http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/.
Fix from https://bugs.openjdk.java.net/show_bug.cgi?id=100119.
Ok kurt@@ (maintainer), ok & comments sthen@@, ok naddy@@, aja@@.
@
text
@d1 1
a1 1
$OpenBSD$
@

