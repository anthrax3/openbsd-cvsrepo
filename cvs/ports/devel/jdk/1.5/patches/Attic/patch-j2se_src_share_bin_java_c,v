head	1.4;
access;
symbols
	OPENBSD_4_0:1.4.0.2
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2007.01.23.14.14.37;	author kurt;	state dead;
branches
	1.4.2.1;
next	1.3;

1.3
date	2006.10.03.13.36.28;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.11.00.45.42;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2006.01.02.03.48.40;	author kurt;	state Exp;
branches;
next	;

1.4.2.1
date	2007.02.12.22.21.50;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to patchset 4 which includes a security fix for CVE-2007-0243

Buffer overflow allows applets to gain privileges via a GIF image with a
block with a 0 width field, which triggers memory corruption and possible
execution of arbitrary code.

Also included in patchset 4 are corrections for building the jdk on amd64
systems with 4G+ memory and the inclusion of the mozilla headers needed to
build the plugin without an external dependency on the old mozilla suite.
@
text
@$OpenBSD: patch-j2se_src_share_bin_java_c,v 1.3 2006/10/03 13:36:28 kurt Exp $
--- j2se/src/share/bin/java.c.orig	Mon Sep 25 13:23:45 2006
+++ j2se/src/share/bin/java.c	Mon Sep 25 13:24:09 2006
@@@@ -44,17 +44,6 @@@@
 #include "manifest_info.h"
 #include "version_comp.h"
 
-#ifdef __OpenBSD__
-/*
- * Disable Junk malloc option. java mprotects portions of the thread
- * stack. When forking, the child process deallocates the threads stacks
- * it inheritated from the parent. The junk malloc option then attempts
- * to write to the deallocated memory and segfaults because its not all
- * writable. The child proc stays in a SIGSEGV loop when this happens.
- */
-char *malloc_options = "j";
-#endif
-
 #ifndef FULL_VERSION
 #define FULL_VERSION JDK_MAJOR_VERSION "." JDK_MINOR_VERSION
 #endif
@


1.4.2.1
log
@MFC:
Update to patchset 4 which includes a security fix for CVE-2007-0243

Buffer overflow allows applets to gain privileges via a GIF image with a
block with a 0 width field, which triggers memory corruption and possible
execution of arbitrary code.

Also included in patchset 4 are corrections for building the jdk on amd64
systems with 4G+ memory and the inclusion of the mozilla headers needed to
build the plugin without an external dependency on the old mozilla suite.

ok kurt
@
text
@d1 4
a4 4
$OpenBSD: patch-j2se_src_share_bin_java_c,v 1.1 2006/01/02 03:48:40 kurt Exp $
--- j2se/src/share/bin/java.c.orig	Fri Dec 23 14:18:59 2005
+++ j2se/src/share/bin/java.c	Fri Dec 23 14:26:09 2005
@@@@ -44,6 +44,17 @@@@
d8 11
a18 11
+#ifdef __OpenBSD__
+/*
+ * Disable Junk malloc option. java mprotects portions of the thread
+ * stack. When forking, the child process deallocates the threads stacks
+ * it inheritated from the parent. The junk malloc option then attempts
+ * to write to the deallocated memory and segfaults because its not all
+ * writable. The child proc stays in a SIGSEGV loop when this happens.
+ */
+char *malloc_options = "j";
+#endif
+
@


1.3
log
@- remove disabling J malloc option now that pthreads stacks are mmap'ed
this is no longer a concern upon forking.
- use closefrom(2) after forking instead of less efficient heursitics
approach.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to patchset 3. Patchset 3 includes several bug fixes that improve
compatiabily and stability which came from work sponsored by the FreeBSD
Foundation.
@
text
@d1 4
a4 4
$OpenBSD: patch-j2se_src_share_bin_java_c,v 1.1 2006/01/02 03:48:40 kurt Exp $
--- j2se/src/share/bin/java.c.orig	Fri Dec 23 14:18:59 2005
+++ j2se/src/share/bin/java.c	Fri Dec 23 14:26:09 2005
@@@@ -44,6 +44,17 @@@@
d8 11
a18 11
+#ifdef __OpenBSD__
+/*
+ * Disable Junk malloc option. java mprotects portions of the thread
+ * stack. When forking, the child process deallocates the threads stacks
+ * it inheritated from the parent. The junk malloc option then attempts
+ * to write to the deallocated memory and segfaults because its not all
+ * writable. The child proc stays in a SIGSEGV loop when this happens.
+ */
+char *malloc_options = "j";
+#endif
+
@


1.1
log
@Disable Junk malloc option for java. java mprotects portions of the thread
stack. When forking, the child process deallocates the threads stacks it
inheritated from the parent. The junk malloc option then attempts to write
to the deallocated memory and segfaults because its not all writable. The
child proc stays in a SIGSEGV loop when this happens.  okay ian@@
@
text
@d1 1
a1 1
$OpenBSD$
@

