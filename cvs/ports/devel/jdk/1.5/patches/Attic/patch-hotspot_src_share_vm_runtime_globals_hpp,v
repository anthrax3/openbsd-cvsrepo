head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2007.06.27.21.51.09;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2007.04.08.12.43.06;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update port to be based of Sun's 1.5.0 Update 11 src which includes many
bug fixes since the initial release of the 1.5 jdk. I'm sure some of the
fixes are security related but I wasn't able to find a concise list. All
the bugs fixes listed here from update 11 and lower should be fixed by
this update: http://java.sun.com/j2se/1.5.0/ReleaseNotes.html#150_11
- NOTE: License change: used to be SCSL, now is JRL (Java Research
License). Still no packages with this license but at least we get the bug
fixes and security fixes now: https://tiger.dev.java.net/
- enable version scripts on libjvm which fixes a symbol conflict with
recent xulrunner which is used by eclipse's internal swt-browser.
@
text
@$OpenBSD: patch-hotspot_src_share_vm_runtime_globals_hpp,v 1.1 2007/04/08 12:43:06 kurt Exp $
--- hotspot/src/share/vm/runtime/globals.hpp.orig	Fri Apr  6 12:26:19 2007
+++ hotspot/src/share/vm/runtime/globals.hpp	Fri Apr  6 12:28:14 2007
@@@@ -146,16 +146,6 @@@@ class CommandLineFlags {
 // option, you must first specify +UnlockDiagnosticVMOptions.
 // (This master switch also affects the behavior of -Xprintflags.)
 
-#ifdef __OpenBSD__
-#ifdef _LP64
-#define OSDefaultMaxRAM 650*M
-#else
-#define OSDefaultMaxRAM 900*M
-#endif
-#else
-#define OSDefaultMaxRAM 1*G
-#endif
-
 #define RUNTIME_FLAGS(develop, develop_pd, product, product_pd, diagnostic) \
                                                                             \
   product(bool, PrintCommandLineFlags, false,                               \
@@@@ -1168,7 +1158,7 @@@@ class CommandLineFlags {
   product(bool, AlwaysActAsServerClassMachine, false,                       \
           "Always act like a server-class machine")                         \
                                                                             \
-  product(uintx, DefaultMaxRAM, OSDefaultMaxRAM,			    \
+  product(uintx, DefaultMaxRAM, G,					    \
 	  "Maximum real memory size for setting server class heap size")    \
 									    \
   product(uintx, DefaultMaxRAMFraction, 4,				    \
@


1.1
log
@- fix the build for good on systems with >= 4G memory by limiting
the jdk's view of physical memory to datasize rlimit max
- remove and adjust old memory adjustments for OpenBSD
- shrink overhead on amd64 making more memory available for use
ok wilfried@@
@
text
@d1 1
a1 1
$OpenBSD$
@

