head	1.4;
access;
symbols
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.1.1.1.0.2
	OPENBSD_3_8_BASE:1.1.1.1
	kurt_20050525:1.1.1.1
	kurt:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2006.04.11.00.45.42;	author kurt;	state dead;
branches;
next	1.3;

1.3
date	2006.01.22.22.46.31;	author kurt;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.11.22.14.43.05;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2005.05.25.17.27.53;	author kurt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.05.25.17.27.53;	author kurt;	state Exp;
branches;
next	;

1.3.2.1
date	2007.01.31.14.52.31;	author kurt;	state dead;
branches;
next	;


desc
@@


1.4
log
@Update to patchset 3. Patchset 3 includes several bug fixes that improve
compatiabily and stability which came from work sponsored by the FreeBSD
Foundation.
@
text
@$OpenBSD: patch-hotspot_src_share_vm_utilities_globalDefinitions_gcc_hpp,v 1.3 2006/01/22 22:46:31 kurt Exp $
--- hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp.orig	Thu Jan 19 22:57:17 2006
+++ hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp	Thu Jan 19 23:09:39 2006
@@@@ -42,24 +42,14 @@@@
 # include <sys/procfs.h>
 # endif
 
-#ifdef __OpenBSD__
-// XXX Fix hotspot datatype problems later and remove this hack
-// #include <inttypes.h>
-#define _INTTYPES_H_
- 
-/* Machine type dependent parameters. */
-#include <machine/types.h>
-
-typedef int                    intptr_t;
-typedef unsigned int           uintptr_t;
-#else
 #if defined(LINUX) || defined(_ALLBSD_SOURCE)
   #include <inttypes.h>
   #include <signal.h>
+#ifndef __OpenBSD__
   #include <ucontext.h>
+#endif
   #include <sys/time.h>
 #endif // LINUX || _ALLBSD_SOURCE
-#endif
 
 // 4810578: varargs unsafe on 32-bit integer/64-bit pointer architectures
 // When __cplusplus is defined, NULL is defined as 0 (32-bit constant) in
@


1.3
log
@- fix a series of datatype assumptions in i486/hotspot (intptr_t != int
  on OpenBSD)
- fix implicit declaration's by adding headers or prototypes as needed.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3.2.1
log
@Update to patchset 4 which includes a security fix for CVE-2007-0243

Buffer overflow allows applets to gain privileges via a GIF image with a
block with a 0 width field, which triggers memory corruption and possible
execution of arbitrary code.

Also included in patchset 4 are corrections for building the jdk on amd64
systems with 4G+ memory and the inclusion of the mozilla headers needed to
build the plugin without an external dependency on the old mozilla suite.

okay nikolay@@
@
text
@d1 1
a1 1
$OpenBSD: patch-hotspot_src_share_vm_utilities_globalDefinitions_gcc_hpp,v 1.3 2006/01/22 22:46:31 kurt Exp $
@


1.2
log
@- update to patchset 2. mostly removing patches now included in patchset.
- link awt_robot with -pthread
- disable a runtime Motif version check that incorrectly thought we were
using Motif 1.2 based on Xm major version. problem reported by Laurence
Tratt
- plugin and webstart comming later
@
text
@d1 4
a4 14
$OpenBSD: patch-hotspot_src_share_vm_utilities_globalDefinitions_gcc_hpp,v 1.1 2005/05/25 17:27:53 kurt Exp $
--- hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp.orig	Tue Jan 25 22:14:35 2005
+++ hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp	Tue Jan 25 22:16:08 2005
@@@@ -16,7 +16,9 @@@@
 #include <stddef.h>
 #include <stdio.h>
 #include <stdlib.h>
+#ifndef __OpenBSD__
 #include <wchar.h>
+#endif
 #ifdef SOLARIS
   #include <ieeefp.h>
 #endif // SOLARIS
@@@@ -40,12 +42,24 @@@@
d8 11
a18 11
+#ifdef __OpenBSD__
+// XXX Fix hotspot datatype problems later and remove this hack
+// #include <inttypes.h>
+#define _INTTYPES_H_
+ 
+/* Machine type dependent parameters. */
+#include <machine/types.h>
+
+typedef int                    intptr_t;
+typedef unsigned int           uintptr_t;
+#else
d22 1
d24 1
d27 1
a27 1
+#endif
a30 19
@@@@ -187,7 +201,18 @@@@ inline int g_isfinite(jdouble f)        
 
 // Wide characters
 
+#ifdef __OpenBSD__
+inline int wcslen(const jchar* x) {
+  short l = 0;
+  while (*x) {
+    l++;
+    x++;
+  }
+  return l;
+}
+#else
 inline int wcslen(const jchar* x) { return wcslen((const wchar_t*)x); }
+#endif
 
 
 // [RGV] Need to check for accurate sizes 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@initial import of 1.5
@
text
@@
