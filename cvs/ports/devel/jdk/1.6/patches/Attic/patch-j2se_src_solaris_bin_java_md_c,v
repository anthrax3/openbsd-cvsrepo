head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.0.18
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.16
	OPENBSD_5_0:1.1.0.14
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.12
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.02.01.15.34.35;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2008.03.17.03.28.26;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- Update to openjdk6 u32 which is licensed under the GPL and allows
  packages.
- Initial BSD patchset from FreeBSD openjdk6 port.
- New bootstrap method. Since ecj is not able to bootstrap openjdk6
  without heavy patching, use a functional bootjdk to build.
- Add a target for building the bootjdk called build-bootjdk.
- Apply IcedTea AppletHole patches for icedtea-web support.
- Backport patch to serialize gconf client access which corrects
  gconf/dbus related crashes. From Christian Schulte Upstream
  CR 7188755.
- Reapply audio support from jakemsr@@.
- Port change for CWM. Recognize CWM as a Non-Reparenting window
  manager.
- Backport various openjdk7/bsd-port upstream fixes both specific
  to OpenBSD and general.
Tested by landry@@ espie@@ and others.
@
text
@$OpenBSD: patch-j2se_src_solaris_bin_java_md_c,v 1.1 2008/03/17 03:28:26 kurt Exp $
--- j2se/src/solaris/bin/java_md.c.orig	Sun Mar 16 09:33:26 2008
+++ j2se/src/solaris/bin/java_md.c	Sun Mar 16 09:33:27 2008
@@@@ -1032,21 +1032,28 @@@@ uint64_t
 physical_memory(void) {
 
 #if defined(_ALLBSD_SOURCE)
+  uint64_t result;
+  size_t len;
+#ifdef HW_PHYSMEM64
+  int64_t physmem;
+  int mib[2] = { CTL_HW, HW_PHYSMEM64 };
+#else
+  unsigned long physmem;
+  int mib[2] = { CTL_HW, HW_PHYSMEM };
+#endif
 
-  unsigned long result;
-  int mib[2];
-  size_t rlen;
-
   /* fetch sysctl(hw.physmem) value */
-  mib[0] = CTL_HW;
-  mib[1] = HW_PHYSMEM;
-  rlen = sizeof(result);
-  if (sysctl(mib, 2, &result, &rlen, NULL, 0) == -1)
-	result = 256 * MB;
+  len = sizeof(result);
+  if (sysctl(mib, 2, &physmem, &len, NULL, 0) == -1)
+	physmem = 256 * MB;
 
+  result = (uint64_t)physmem;
+
+# define UINT64_FORMAT "%" PRIu64
+
   if (_launcher_debug) {
-    printf( "  physical memory: %ju (%.3fGB)\n",
-           (uintmax_t) result, result / (double) GB);
+    printf( "  physical memory: " UINT64_FORMAT " (%.3fGB)\n",
+           result, result / (double) GB);
   }
 
 #else /* !_ALLBSD_SOURCE */
@@@@ -1389,7 +1396,7 @@@@ physical_processors(void) {
     }
   }
   if (_launcher_debug) {
-    printf("physical processors: %lu\n", result);
+    printf("physical processors: %lu\n", (unsigned long)result);
   }
 
   return result;
@


1.1
log
@- use HW_{USER|PHYS}MEM64. okay naddy@@
- update to bsd patchset 4
- for amd64, sync JVM_handle_bsd_signal with its linux counterpart from
  which it was originally derived; add two segments of code dealing with
  sigsegv fringe cases.
- update pkg/MESSAGE-* to use recent mozilla product names.
@
text
@d1 1
a1 1
$OpenBSD$
@

