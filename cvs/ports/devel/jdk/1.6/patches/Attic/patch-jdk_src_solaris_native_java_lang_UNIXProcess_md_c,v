head	1.3;
access;
symbols
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.11.20.23.14.58;	author kurt;	state dead;
branches;
next	1.2;
commitid	OqMxfbqOene3RIIF;

1.2
date	2013.04.15.03.01.06;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2013.02.01.15.34.35;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove 1.6 from cvs. It was unlinked last release. okay sthen@@
@
text
@$OpenBSD: patch-jdk_src_solaris_native_java_lang_UNIXProcess_md_c,v 1.2 2013/04/15 03:01:06 kurt Exp $
--- jdk/src/solaris/native/java/lang/UNIXProcess_md.c.orig	Sun Apr 14 20:25:35 2013
+++ jdk/src/solaris/native/java/lang/UNIXProcess_md.c	Sun Apr 14 20:29:34 2013
@@@@ -86,6 +86,12 @@@@
 
 #define FAIL_FILENO (STDERR_FILENO + 1)
 
+#define RESTARTABLE(_cmd, _result) do { \
+  do { \
+    _result = _cmd; \
+  } while((_result == -1) && (errno == EINTR)); \
+} while(0)
+
 static void
 setSIGCHLDHandler(JNIEnv *env)
 {
@@@@ -327,19 +333,12 @@@@ jdk_fork_wrapper()
 #endif /* __FreeBSD__ */
 
 #if defined(__OpenBSD__)
-/*
- * Directly call _thread_sys_closefrom() so the child process
- * doesn't reset the parrent's file descriptors to be blocking.
- * This function is only called from the child process which
- * is single threaded and about to call execvp() so it is
- * safe to bypass the threaded closefrom().
- */
-int _thread_sys_closefrom(int);
-
 static int
 closeDescriptors(void)
 {
-    return _thread_sys_closefrom(FAIL_FILENO + 1);
+    int err;
+    RESTARTABLE(closefrom(FAIL_FILENO + 1), err);
+    return err;
 }
 
 #else
@@@@ -678,30 +677,6 @@@@ Java_java_lang_UNIXProcess_forkAndExec(JNIEnv *env,
 
     if (resultPid == 0) {
         /* Child process */
-
-
-#ifdef __OpenBSD__
-// XXXBSD: Work-around userland pthread implementation issue.
-// Closing file descriptors will reset them to be blocking.
-// This is problematic for the parent when it attemts to use
-// the blocking fd and deadlocks. Setting them to non-blocking
-// in the child prevents the close/dup2 from resetting them.
-    {
- int flags;
- flags = fcntl(STDIN_FILENO, F_GETFL, NULL);
- if (flags != -1)
-     fcntl(STDIN_FILENO, F_SETFL, flags | O_NONBLOCK);
-
- flags = fcntl(STDOUT_FILENO, F_GETFL, NULL);
- if (flags != -1)
-     fcntl(STDOUT_FILENO, F_SETFL, flags | O_NONBLOCK);
-
- flags = fcntl(STDERR_FILENO, F_GETFL, NULL);
- if (flags != -1)
-     fcntl(STDOUT_FILENO, F_SETFL, flags | O_NONBLOCK);
-    }
-#endif
-
 
         /* Close the parent sides of the pipe.
            Give the child sides of the pipes the right fileno's.
@


1.2
log
@- Remove uthreads work-around which set STDIN/OUT/ERR to non-blocking
  in child processes.
- Rebuild bootstrap jdks to eliminate the boot jdk from setting
  STDIN/OUT/ERR non-blocking when building the jdk.
Fixes intermittent build failures noted by landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-jdk_src_solaris_native_java_lang_UNIXProcess_md_c,v 1.1 2013/02/01 15:34:35 kurt Exp $
@


1.1
log
@- Update to openjdk6 u32 which is licensed under the GPL and allows
  packages.
- Initial BSD patchset from FreeBSD openjdk6 port.
- New bootstrap method. Since ecj is not able to bootstrap openjdk6
  without heavy patching, use a functional bootjdk to build.
- Add a target for building the bootjdk called build-bootjdk.
- Apply IcedTea AppletHole patches for icedtea-web support.
- Backport patch to serialize gconf client access which corrects
  gconf/dbus related crashes. From Christian Schulte Upstream
  CR 7188755.
- Reapply audio support from jakemsr@@.
- Port change for CWM. Recognize CWM as a Non-Reparenting window
  manager.
- Backport various openjdk7/bsd-port upstream fixes both specific
  to OpenBSD and general.
Tested by landry@@ espie@@ and others.
@
text
@d1 3
a3 3
$OpenBSD$
--- jdk/src/solaris/native/java/lang/UNIXProcess_md.c.orig	Tue Jan 29 12:52:27 2013
+++ jdk/src/solaris/native/java/lang/UNIXProcess_md.c	Tue Jan 29 14:28:22 2013
d40 31
@

