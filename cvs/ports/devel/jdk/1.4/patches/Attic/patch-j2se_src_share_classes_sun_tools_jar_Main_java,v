head	1.2;
access;
symbols
	OPENBSD_4_2:1.1.0.10
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2008.02.13.13.53.50;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2005.06.04.15.47.54;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- switch to kaffe bootstrap. linux emul no longer needed to build.
- update to patchset 8. mostly just removal of patches committed
  upstream a long time ago.
okay brad@@
@
text
@$OpenBSD: patch-j2se_src_share_classes_sun_tools_jar_Main_java,v 1.1 2005/06/04 15:47:54 kurt Exp $
--- j2se/src/share/classes/sun/tools/jar/Main.java.orig	Wed Sep 10 21:52:26 2003
+++ j2se/src/share/classes/sun/tools/jar/Main.java	Fri Jun  3 16:50:31 2005
@@@@ -32,6 +32,7 @@@@ class Main {
     Hashtable filesTable = new Hashtable();
     Vector paths = new Vector();
     Vector v;
+    String cwd;
     CRC32 crc32 = new CRC32();
     /* cflag: create
      * uflag: update       
@@@@ -671,6 +672,19 @@@@ class Main {
      * Extracts specified entries from JAR file.
      */
     void extract(InputStream in, String files[]) throws IOException {
+    	// Current working directory
+
+	cwd = System.getProperty("user.dir");
+	if (cwd == null) {
+            fatalError(getMsg("error.no.cwd"));
+	}
+	cwd = (new File(cwd)).getCanonicalPath();
+	if (!cwd.endsWith(File.separator)) {
+	    cwd += File.separator;
+	}
+
+	// Extract the files
+
 	ZipInputStream zis = new ZipInputStream(in);
 	ZipEntry e;
 	while ((e = zis.getNextEntry()) != null) {
@@@@ -695,6 +709,10 @@@@ class Main {
     void extractFile(ZipInputStream zis, ZipEntry e) throws IOException {
         String name = e.getName();
 	File f = new File(e.getName().replace('/', File.separatorChar));
+	if (!f.getCanonicalPath().startsWith(cwd)) {
+ 	    output(formatMsg("out.ignore.entry", name));
+	    return;
+	}
 	if (e.isDirectory()) {
 	    if (!f.exists() && !f.mkdirs() || !f.isDirectory()) {
 		throw new IOException(formatMsg("error.create.dir", f.getPath()));
@@@@ -705,6 +723,10 @@@@ class Main {
 	} else {
 	    if (f.getParent() != null) {
 		File d = new File(f.getParent());
+		if (!d.getCanonicalPath().startsWith(cwd)) {
+	 	    output(formatMsg("out.ignore.entry", name));
+		    return;
+		}
 		if (!d.exists() && !d.mkdirs() || !d.isDirectory()) {
 		    throw new IOException(formatMsg("error.create.dir", d.getPath()));
 		}
@


1.1
log
@- Ensure that when files are extracted that their fully resolved path lies
in or below the current working directory.  Fixes a security problem with
jar. From FreeBSD.
@
text
@d1 1
a1 1
$OpenBSD$
@

