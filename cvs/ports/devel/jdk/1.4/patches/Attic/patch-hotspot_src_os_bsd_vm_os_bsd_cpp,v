head	1.6;
access;
symbols
	OPENBSD_4_5:1.5.0.8
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2009.03.18.01.45.38;	author kurt;	state dead;
branches;
next	1.5;

1.5
date	2008.02.28.14.54.56;	author kurt;	state Exp;
branches;
next	1.4;

1.4
date	2008.02.13.13.53.50;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2007.07.18.15.09.52;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.16.16.09.01;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.04.17.06.45;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove 1.3 and 1.4 as per plan made last June
@
text
@$OpenBSD: patch-hotspot_src_os_bsd_vm_os_bsd_cpp,v 1.5 2008/02/28 14:54:56 kurt Exp $
--- hotspot/src/os/bsd/vm/os_bsd.cpp.orig	Tue Feb 26 12:27:49 2008
+++ hotspot/src/os/bsd/vm/os_bsd.cpp	Tue Feb 26 13:02:48 2008
@@@@ -237,14 +237,19 @@@@ void os::Bsd::initialize_system_info() {
 #if 1
   int mib[2];
   size_t len;
-  uint val;
+  int cpu_val;
+#ifdef HW_USERMEM64
+  int64_t mem_val;
+#else
+  u_long mem_val;
+#endif
 
   /* get processors count via hw.ncpus sysctl */
   mib[0] = CTL_HW;
   mib[1] = HW_NCPU;
-  len = sizeof(val);
-  if (sysctl(mib, 2, &val, &len, NULL, 0) != -1)
-        _processor_count = val;
+  len = sizeof(cpu_val);
+  if (sysctl(mib, 2, &cpu_val, &len, NULL, 0) != -1)
+        _processor_count = cpu_val;
   else
 	_processor_count = 1;	// fallback
 
@@@@ -252,10 +257,14 @@@@ void os::Bsd::initialize_system_info() {
    * instead of hw.physmem because we need size of allocatable memory
    */
   mib[0] = CTL_HW;
+#ifdef HW_USERMEM64
+  mib[1] = HW_USERMEM64;
+#else
   mib[1] = HW_USERMEM;
-  len = sizeof(val);
-  if (sysctl(mib, 2, &val, &len, NULL, 0) != -1)
-	_physical_memory = val;
+#endif
+  len = sizeof(mem_val);
+  if (sysctl(mib, 2, &mem_val, &len, NULL, 0) != -1)
+	_physical_memory = mem_val;
   else
 	_physical_memory = 256*1024*1024;
 
@@@@ -346,7 +355,9 @@@@ props_md_t* os::get_system_properties() {
 #define malloc(n) (char*)NEW_C_HEAP_ARRAY(char, (n))
 #define getenv(n) ::getenv(n)
 
+#ifndef DEFAULT_LD_LIBRARY_PATH
 #define DEFAULT_LD_LIBRARY_PATH "/usr/lib" /* See ld.so.1(1) */
+#endif
 #define EXTENSIONS_DIR "/lib/ext"
 #define ENDORSED_DIR "/lib/endorsed"
 
@@@@ -712,6 +723,7 @@@@ bool os::create_thread(Thread* thread, ThreadType thr_
   osthread->set_thread_id(NULL);
 
   status = pthread_create(&tid, &tattr, _start, thread);
+  pthread_attr_destroy(&tattr);
   if (status != 0) {
 err:
     if (PrintMiscellaneous && (Verbose || WizardMode)) {
@


1.5
log
@- use HW_PHYSMEM64. okay naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-hotspot_src_os_bsd_vm_os_bsd_cpp,v 1.4 2008/02/13 13:53:50 kurt Exp $
@


1.4
log
@- switch to kaffe bootstrap. linux emul no longer needed to build.
- update to patchset 8. mostly just removal of patches committed
  upstream a long time ago.
okay brad@@
@
text
@d1 46
a46 4
$OpenBSD: patch-hotspot_src_os_bsd_vm_os_bsd_cpp,v 1.3 2007/07/18 15:09:52 kurt Exp $
--- hotspot/src/os/bsd/vm/os_bsd.cpp.orig	Mon Jan 28 17:59:35 2008
+++ hotspot/src/os/bsd/vm/os_bsd.cpp	Mon Jan 28 17:59:37 2008
@@@@ -346,7 +346,9 @@@@ props_md_t* os::get_system_properties() {
d56 1
a56 1
@@@@ -712,6 +714,7 @@@@ bool os::create_thread(Thread* thread, ThreadType thr_
@


1.3
log
@regen patches
@
text
@d1 4
a4 4
$OpenBSD: patch-hotspot_src_os_bsd_vm_os_bsd_cpp,v 1.2 2006/03/16 16:09:01 kurt Exp $
--- hotspot/src/os/bsd/vm/os_bsd.cpp.orig	Wed Jul 18 10:56:29 2007
+++ hotspot/src/os/bsd/vm/os_bsd.cpp	Wed Jul 18 10:56:32 2007
@@@@ -344,7 +344,9 @@@@ props_md_t* os::get_system_properties() {
d14 1
a14 1
@@@@ -710,6 +712,7 @@@@ bool os::create_thread(Thread* thread, ThreadType thr_
@


1.2
log
@- don't mmap on top of malloc'ed memory. this fixes a large memory leak
while creating/destroying threads.
- add missing pthread_attr_destroy while creating threads. closes a
small memory leak.

Memory leaking problems reported by Carsten Raskgaard and also
David SH Rosenthal from the LOCKSS project.
@
text
@d1 4
a4 4
$OpenBSD: patch-hotspot_src_os_bsd_vm_os_bsd_cpp,v 1.1 2005/02/04 17:06:45 kurt Exp $
--- hotspot/src/os/bsd/vm/os_bsd.cpp.orig	Wed Mar  8 18:44:06 2006
+++ hotspot/src/os/bsd/vm/os_bsd.cpp	Wed Mar  8 18:45:25 2006
@@@@ -344,7 +344,9 @@@@ props_md_t* os::get_system_properties() 
d14 1
a14 1
@@@@ -710,6 +712,7 @@@@ bool os::create_thread(Thread* thread, T
@


1.1
log
@- teach jdk about /usr/local/lib
- teach ClassLoader how to load native libs with version numbers
- fix writes to HOME complaints
- point license URL to license itself
- fix timezone problem noticed by Roy Morris
- bump package name

ok alek@@
@
text
@d1 3
a3 3
$OpenBSD$
--- hotspot/src/os/bsd/vm/os_bsd.cpp.orig	Tue Jan  4 16:41:21 2005
+++ hotspot/src/os/bsd/vm/os_bsd.cpp	Tue Jan  4 16:42:20 2005
d14 8
@

