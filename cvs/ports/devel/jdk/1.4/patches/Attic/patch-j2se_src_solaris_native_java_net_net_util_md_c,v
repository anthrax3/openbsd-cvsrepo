head	1.4;
access;
symbols
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2009.03.18.01.45.38;	author kurt;	state dead;
branches;
next	1.3;

1.3
date	2008.02.13.13.53.50;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2007.07.18.15.09.52;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.31.19.48.12;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove 1.3 and 1.4 as per plan made last June
@
text
@$OpenBSD: patch-j2se_src_solaris_native_java_net_net_util_md_c,v 1.3 2008/02/13 13:53:50 kurt Exp $
--- j2se/src/solaris/native/java/net/net_util_md.c.orig	Mon Jan 28 17:59:37 2008
+++ j2se/src/solaris/native/java/net/net_util_md.c	Mon Jan 28 18:12:36 2008
@@@@ -33,6 +33,10 @@@@
 #include <sys/sysctl.h>
 #endif
 
+#ifdef __OpenBSD__
+#include <sys/socketvar.h>
+#endif
+
 #ifdef __linux__
 #include <arpa/inet.h>
 #include <net/route.h>
@@@@ -896,9 +900,12 @@@@ NET_SetSockOpt(int fd, int level, int  opt, const void
 #define IPTOS_PREC_MASK 0xe0
 #endif
 
-#if defined(__FreeBSD__) || defined(__DragonFly__)
+#if defined(_ALLBSD_SOURCE)
+#if defined(KIPC_MAXSOCKBUF)
     int mib[3];
     size_t rlen;
+#endif
+
     int *bufsize;
 
     static int maxsockbuf = -1;
@@@@ -990,7 +997,7 @@@@ NET_SetSockOpt(int fd, int level, int  opt, const void
     }
 #endif
 
-#if defined(__FreeBSD__) || defined(__DragonFly__)
+#if defined(_ALLBSD_SOURCE)
     /*
      * SOL_SOCKET/{SO_SNDBUF,SO_RCVBUF} - On FreeBSD need to
      * ensure that value is <= kern.ipc.maxsockbuf as otherwise we get
@@@@ -998,6 +1005,7 @@@@ NET_SetSockOpt(int fd, int level, int  opt, const void
      */
     if (level == SOL_SOCKET) {
         if (opt == SO_SNDBUF || opt == SO_RCVBUF) {
+#ifdef KIPC_MAXSOCKBUF
             if (maxsockbuf == -1) {
 	        mib[0] = CTL_KERN;
 	        mib[1] = KERN_IPC;
@@@@ -1013,6 +1021,11 @@@@ NET_SetSockOpt(int fd, int level, int  opt, const void
 		maxsockbuf = (maxsockbuf/5)*4;
 #endif
 	    }
+#elif defined(__OpenBSD__)
+	   maxsockbuf = SB_MAX;
+#else
+	   maxsockbuf = 64 * 1024;      /* XXX: NetBSD */
+#endif
 
 	    bufsize = (int *)arg;
 	    if ((*bufsize > maxsockbuf) && (bufsize != 0)) {
@@@@ -1022,11 +1035,23 @@@@ NET_SetSockOpt(int fd, int level, int  opt, const void
     }
 
     /*
-     * If SO_REUSEADDR option requested, unconditionally set SO_REUSEPORT.
+     * On Solaris, SO_REUSEADDR will allow multiple datagram
+     * sockets to bind to the same port.  The network jck tests
+     * for this "feature", so we need to emulate it by turning on
+     * SO_REUSEPORT as well for that combination.
      */
     if (level == SOL_SOCKET && opt == SO_REUSEADDR) {
-	addopt = SO_REUSEPORT;
-	setsockopt(fd, level, addopt, arg, len);
+        int sotype, arglen;
+
+        arglen = sizeof(sotype);
+        if (getsockopt(fd, SOL_SOCKET, SO_TYPE, (void *)&sotype, &arglen) < 0) {
+            return -1;
+        }
+
+        if (sotype == SOCK_DGRAM) {
+            addopt = SO_REUSEPORT;
+            setsockopt(fd, level, addopt, arg, len);
+        }
     }
 
     /*
@


1.3
log
@- switch to kaffe bootstrap. linux emul no longer needed to build.
- update to patchset 8. mostly just removal of patches committed
  upstream a long time ago.
okay brad@@
@
text
@d1 1
a1 1
$OpenBSD: disable-ipv6,v 1.1.1.1 2004/12/21 04:01:05 kurt Exp $
@


1.2
log
@regen patches
@
text
@d2 2
a3 2
--- j2se/src/solaris/native/java/net/net_util_md.c.orig	Wed Jul 18 10:56:32 2007
+++ j2se/src/solaris/native/java/net/net_util_md.c	Wed Jul 18 10:56:32 2007
d15 1
a15 1
@@@@ -886,9 +890,12 @@@@ NET_SetSockOpt(int fd, int level, int  opt, const void
d19 1
a19 1
-#if defined(__FreeBSD__)
d29 1
a29 1
@@@@ -980,7 +987,7 @@@@ NET_SetSockOpt(int fd, int level, int  opt, const void
d33 1
a33 1
-#if defined(__FreeBSD__)
d38 1
a38 1
@@@@ -988,6 +995,7 @@@@ NET_SetSockOpt(int fd, int level, int  opt, const void
d46 1
a46 1
@@@@ -1003,6 +1011,11 @@@@ NET_SetSockOpt(int fd, int level, int  opt, const void
d58 1
a58 1
@@@@ -1012,11 +1025,23 @@@@ NET_SetSockOpt(int fd, int level, int  opt, const void
@


1.1
log
@Back-port some jdk/1.5 changes:
- use system libz instead of internal one. internal libz conflicts with
system libz, for example apps using JNI & libz will fail (OOo).
- enable parallel hotspot compiles on mp systems (one per cpu). no pthreads
involved so its safe to do here.
- socket option corrections. may help Active MQ work.
@
text
@d2 2
a3 2
--- j2se/src/solaris/native/java/net/net_util_md.c.orig	Thu Oct 19 22:52:04 2006
+++ j2se/src/solaris/native/java/net/net_util_md.c	Thu Oct 19 22:53:32 2006
d15 1
a15 1
@@@@ -886,9 +890,12 @@@@ NET_SetSockOpt(int fd, int level, int  o
d29 1
a29 1
@@@@ -980,7 +987,7 @@@@ NET_SetSockOpt(int fd, int level, int  o
d38 1
a38 1
@@@@ -988,6 +995,7 @@@@ NET_SetSockOpt(int fd, int level, int  o
d46 1
a46 1
@@@@ -1003,6 +1011,11 @@@@ NET_SetSockOpt(int fd, int level, int  o
d58 1
a58 1
@@@@ -1012,11 +1025,23 @@@@ NET_SetSockOpt(int fd, int level, int  o
@

