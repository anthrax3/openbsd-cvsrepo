head	1.2;
access;
symbols
	OPENBSD_4_5:1.1.0.16
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.12
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.10
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.8
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.6
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2009.03.18.01.45.38;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2006.01.02.03.48.40;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove 1.3 and 1.4 as per plan made last June
@
text
@$OpenBSD: patch-j2se_src_share_bin_java_c,v 1.1 2006/01/02 03:48:40 kurt Exp $
--- j2se/src/share/bin/java.c.orig	Fri Dec 23 14:04:31 2005
+++ j2se/src/share/bin/java.c	Fri Dec 23 14:26:32 2005
@@@@ -46,6 +46,17 @@@@
 #include <jni.h>
 #include "java.h"
 
+#ifdef __OpenBSD__
+/*
+ * Disable Junk malloc option. java mprotects portions of the thread
+ * stack. When forking, the child process deallocates the threads stacks
+ * it inheritated from the parent. The junk malloc option then attempts
+ * to write to the deallocated memory and segfaults because its not all
+ * writable. The child proc stays in a SIGSEGV loop when this happens.
+ */
+char *malloc_options = "j";
+#endif
+
 #ifndef FULL_VERSION
 #define FULL_VERSION "1.4"
 #endif
@


1.1
log
@Disable Junk malloc option for java. java mprotects portions of the thread
stack. When forking, the child process deallocates the threads stacks it
inheritated from the parent. The junk malloc option then attempts to write
to the deallocated memory and segfaults because its not all writable. The
child proc stays in a SIGSEGV loop when this happens.  okay ian@@
@
text
@d1 1
a1 1
$OpenBSD$
@

