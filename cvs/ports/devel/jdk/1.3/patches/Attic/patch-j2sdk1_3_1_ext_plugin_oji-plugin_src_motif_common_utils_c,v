head	1.3;
access;
symbols
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	kmiller_20040129:1.1.1.1
	pvalchev:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2005.06.03.17.27.54;	author kurt;	state dead;
branches;
next	1.2;

1.2
date	2004.08.14.21.50.38;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.29.22.02.20;	author pvalchev;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.01.29.22.02.20;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.3
log
@- Add support for powerpc. With some tips from tedu@@ and drahn@@, thanks!
- Change bootstrap method. No longer use 1.3-linux port to bootstrap.
  Use class files from a linux binary jdk and extra source and header
  files from my website.
- Remove plugin support. plugin has security issues and doesn't work
  with recent mozilla/firefox versions.
- Patches for arm native-threads are included but not enabled yet.
  I prefer to have all arches use green-threads to avoid arch specific
  pkg files. Also noticed some regressions with native-threads on i386.
  arm support from Dale Rahn (drahn@@).
- quiet pre-patch phase

okay ian@@
@
text
@$OpenBSD: patch-j2sdk1_3_1_ext_plugin_oji-plugin_src_motif_common_utils_c,v 1.2 2004/08/14 21:50:38 naddy Exp $
--- j2sdk1.3.1/ext/plugin/oji-plugin/src/motif/common/utils.c.orig	Wed Jul 14 21:56:30 2004
+++ j2sdk1.3.1/ext/plugin/oji-plugin/src/motif/common/utils.c	Wed Jul 14 22:50:55 2004
@@@@ -2,7 +2,6 @@@@
 #include <stdio.h>
 #include <stdarg.h>
 #include "Debug.h"
-#include "utils.h"
 #include <unistd.h>
 #ifdef SVR4
 #include <stropts.h>
@@@@ -20,9 +19,15 @@@@
 #include <strings.h>
 #include <string.h>
 #include <dlfcn.h>
+#include "utils.h"
 #include "plugin_defs.h"
 #include "pluginversion.h"
 
+#if defined(__OpenBSD__)
+#include <nlist.h>
+#include <link.h>
+#endif
+
 int tracing = 0;
 
 static int init_utils_called = 0;
@@@@ -295,6 +300,69 @@@@ int s_pipe(int fds[2]) {
 #endif
 #endif
 
+#if defined(__OpenBSD__) && !defined(RTLD_DEFAULT)
+char *
+dlfname(const void *addr)
+{
+#ifdef __ELF__
+    int tag;
+    Elf_Dyn *dp;
+    struct link_map *lm;
+    Elf_Ehdr *ehdr;
+    Elf_Phdr *phdr;
+    char *s;
+    int i;
+
+    lm = NULL;
+
+    for (dp = _DYNAMIC; (tag = dp->d_tag) != 0; dp++) {
+        if (tag == DT_DEBUG) {
+            lm = ((struct r_debug *)(dp->d_un.d_ptr))->r_map;
+        }
+    }
+
+    for (; lm != NULL; lm = lm->l_next) {
+        ehdr = (Elf_Ehdr *)lm->l_addr;
+        if (ehdr == NULL)
+                continue;
+
+        phdr = (Elf_Phdr *)((char *)lm->l_addr + ehdr->e_phoff);
+
+        for (i = 0; i < ehdr->e_phnum; i++) {
+                switch (phdr[i].p_type) {
+                case PT_LOAD:
+                        s = (char *)phdr[i].p_vaddr + (int)lm->l_addr;
+                        if (addr >= s && addr < s + phdr[i].p_memsz)
+                                return (char *)lm->l_name;
+                        break;
+                default:
+                        break;
+                }
+        }
+    }
+
+    return NULL;
+#else
+    struct so_map *so_map;
+
+    so_map = (struct so_map *)dlopen(0, RTLD_LAZY);
+    for (; so_map; so_map = so_map->som_next) {
+        if (addr >= (void *) so_map->som_addr
+            && (so_map->som_next == 0
+                || addr < (void *) so_map->som_next->som_addr)) {
+            break;
+        }
+    }
+    return so_map ? so_map->som_path : NULL;
+#endif
+}
+
+int
+dladdr(const void *addr, Dl_info *info)
+{
+    return((info->dli_fname = dlfname(addr)) ? 1 : 0);
+}
+#endif
 
 
 
@


1.2
log
@We've grown dladdr(3), adapt.  From: Kurt Miller <truk@@optonline.net>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d2 15
a16 3
--- j2sdk1.3.1/ext/plugin/oji-plugin/src/motif/common/utils.c.orig	2004-01-08 17:18:45.000000000 -0500
+++ j2sdk1.3.1/ext/plugin/oji-plugin/src/motif/common/utils.c	2004-01-08 17:01:30.000000000 -0500
@@@@ -23,6 +23,11 @@@@
d32 1
a32 1
+#if defined(__OpenBSD__)
@


1.1.1.1
log
@Import of NATIVE jdk-1.3.1

The Java 2 SDK software includes tools useful for developing and 
testing programs written in the Java programming language and
running on the Java platform.

i386-only for now.
Requires manual registration/fetch of distfile from Sun due to
their restrictions.

From maintainer Kurt Miller <truk@@optonline.net>
@
text
@@
