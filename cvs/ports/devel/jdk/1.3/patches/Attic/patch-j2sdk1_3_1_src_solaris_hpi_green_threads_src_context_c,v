head	1.5;
access;
symbols
	OPENBSD_4_5:1.4.0.10
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2009.03.18.01.45.38;	author kurt;	state dead;
branches;
next	1.4;

1.4
date	2007.07.18.14.19.27;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.20.14.40.25;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2005.07.14.17.29.09;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.03.17.27.54;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove 1.3 and 1.4 as per plan made last June
@
text
@$OpenBSD: patch-j2sdk1_3_1_src_solaris_hpi_green_threads_src_context_c,v 1.4 2007/07/18 14:19:27 kurt Exp $
--- j2sdk1.3.1/src/solaris/hpi/green_threads/src/context.c.orig	Wed Jul 18 09:36:12 2007
+++ j2sdk1.3.1/src/solaris/hpi/green_threads/src/context.c	Wed Jul 18 09:36:14 2007
@@@@ -183,7 +183,7 @@@@ currentStackPointer(sys_thread_t *tp)
 #if (defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__))
     context_t *context = &tp->mdcontext;
     lj_ucontext_t *uc = &(context->lj_ucontext);
-#if defined(__NetBSD__) && defined(__powerpc__)
+#if defined(__powerpc__)
     return (void *)CONTEXT(tp)->current_sp;
 #elif defined(__NetBSD__) || defined(__OpenBSD__)
     return (void *)(uc->jmpbuf[BSD_STACK_POINTER]);
@@@@ -579,7 +579,60 @@@@ initContext(lj_ucontext_t *uc, gstack_t *stack, unsign
     uc->jmpbuf->_sjb[35] = (long)0xACEDBADD;	/* magic number for longjmp */
 }
 
-#elif defined(__NetBSD__) && defined(__powerpc__)
+#elif defined(__OpenBSD__) && defined(__arm__)
+
+void
+initContext(lj_ucontext_t *uc, gstack_t *stack, unsigned int pc,
+         void (*death_func)(void), unsigned int arg)
+{
+    unsigned char *sp;
+    int *p;
+
+    memset(uc, 0, sizeof(lj_ucontext_t));
+
+    sp = (unsigned char *)stack->base;
+    sp -= sizeof(sys_thread_t *);
+    /* Force sp to be double aligned! */
+    sp = (unsigned char *)((unsigned long)(sp) & ~7L);
+
+    uc->pc = pc;
+    uc->arg = arg;
+
+    uc->jmpbuf[BSD_MAGIC] = (unsigned int)0x4278f501;
+    uc->jmpbuf[BSD_LINK_REGISTER] = (unsigned int)death_func;
+    uc->jmpbuf[BSD_STACK_POINTER] = (unsigned int)sp;
+
+    /* break back chain */
+    p = (int *)sp;
+    *p-- = (int ) 0;
+}
+
+#elif defined(__OpenBSD__) && defined(__sparc__)
+
+void
+initContext(lj_ucontext_t *uc, gstack_t *stack, unsigned int pc,
+         void (*death_func)(void), unsigned int arg)
+{
+    unsigned char *sp;
+    int *p;
+
+    getcontext(uc);
+
+    sp = (unsigned char *)stack->base;
+    sp -= (sizeof(sys_thread_t *) + WINDOWSIZE + SA(MINFRAME));
+    /* Force sp to be double aligned! */
+    sp = (unsigned char *)((unsigned long)(sp) & ~7L);
+
+    uc->pc = pc;
+    uc->arg = arg;
+
+    uc->jmpbuf[BSD_STACK_POINTER] = (unsigned int)sp;
+    uc->jmpbuf[BSD_PC] = (unsigned int)death_func;
+    uc->jmpbuf[BSD_nPC] = (unsigned int)death_func+4;
+
+}
+
+#elif (defined(__NetBSD__) || defined(__OpenBSD__)) && defined(__powerpc__)
 
 /* NetBSD/powerpc version */
 
@


1.4
log
@regen patches
@
text
@d1 1
a1 1
$OpenBSD: patch-j2sdk1_3_1_src_solaris_hpi_green_threads_src_context_c,v 1.3 2006/03/20 14:40:25 kurt Exp $
@


1.3
log
@- enter 1.3.1 on sparc. due to the small datasize ulimit on sparc -Xmx60
is about as high as you can go. tomcat v4 and demos work but a bit slowly.
@
text
@d1 3
a3 3
$OpenBSD: patch-j2sdk1_3_1_src_solaris_hpi_green_threads_src_context_c,v 1.2 2005/07/14 17:29:09 kurt Exp $
--- j2sdk1.3.1/src/solaris/hpi/green_threads/src/context.c.orig	Fri Mar 17 13:49:52 2006
+++ j2sdk1.3.1/src/solaris/hpi/green_threads/src/context.c	Fri Mar 17 15:06:04 2006
d13 1
a13 1
@@@@ -579,7 +579,60 @@@@ initContext(lj_ucontext_t *uc, gstack_t 
@


1.2
log
@- enable arm archs
- fix up arm/green thread patches (kurt/dale)
- remove unused native thread patches
- fix WANTLIB

okay drahn@@
@
text
@d1 3
a3 3
$OpenBSD: patch-j2sdk1_3_1_src_solaris_hpi_green_threads_src_context_c,v 1.1 2005/06/03 17:27:54 kurt Exp $
--- j2sdk1.3.1/src/solaris/hpi/green_threads/src/context.c.orig	Thu Jul  7 15:44:51 2005
+++ j2sdk1.3.1/src/solaris/hpi/green_threads/src/context.c	Sat Jul  9 18:17:31 2005
d13 1
a13 1
@@@@ -579,7 +579,35 @@@@ initContext(lj_ucontext_t *uc, gstack_t 
d44 25
@


1.1
log
@- Add support for powerpc. With some tips from tedu@@ and drahn@@, thanks!
- Change bootstrap method. No longer use 1.3-linux port to bootstrap.
  Use class files from a linux binary jdk and extra source and header
  files from my website.
- Remove plugin support. plugin has security issues and doesn't work
  with recent mozilla/firefox versions.
- Patches for arm native-threads are included but not enabled yet.
  I prefer to have all arches use green-threads to avoid arch specific
  pkg files. Also noticed some regressions with native-threads on i386.
  arm support from Dale Rahn (drahn@@).
- quiet pre-patch phase

okay ian@@
@
text
@d1 3
a3 3
$OpenBSD$
--- j2sdk1.3.1/src/solaris/hpi/green_threads/src/context.c.orig	Fri May 27 17:32:10 2005
+++ j2sdk1.3.1/src/solaris/hpi/green_threads/src/context.c	Fri May 27 17:40:41 2005
d13 1
a13 1
@@@@ -579,7 +579,30 @@@@ initContext(lj_ucontext_t *uc, gstack_t 
d25 1
d34 10
a43 6
+    /* We use registers on the Alpha to pass args to death_func. */
+    uc->jmpbuf->_sjb[2]  = (long)death_func;	/* sc_pc */
+    uc->jmpbuf->_sjb[20] = (long)pc;		/* sc_regs[R_A0] */
+    uc->jmpbuf->_sjb[21] = (long)arg;		/* sc_regs[R_A1] */
+    uc->jmpbuf->_sjb[34] = (long)sp;		/* sc_regs[R_SP] */
+    uc->jmpbuf->_sjb[35] = (long)0xACEDBADD;	/* magic number for longjmp */
@

