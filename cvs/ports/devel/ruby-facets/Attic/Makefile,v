head	1.10;
access;
symbols
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	msf_20091122:1.1.1.1
	msf:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2012.09.15.17.55.15;	author jeremy;	state dead;
branches;
next	1.9;

1.9
date	2011.11.09.00.17.38;	author jeremy;	state Exp;
branches;
next	1.8;

1.8
date	2011.09.16.09.24.57;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2011.03.14.09.17.27;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2011.01.06.04.24.23;	author jeremy;	state Exp;
branches;
next	1.5;

1.5
date	2010.11.24.21.35.14;	author jeremy;	state Exp;
branches;
next	1.4;

1.4
date	2010.11.08.23.28.53;	author jeremy;	state Exp;
branches;
next	1.3;

1.3
date	2010.09.28.20.12.17;	author jeremy;	state Exp;
branches;
next	1.2;

1.2
date	2010.09.23.22.30.26;	author jeremy;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.22.04.18.14;	author msf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.11.22.04.18.14;	author msf;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove pure ruby gem ports that aren't compatible with ruby 1.9.

Most OK sthen@@, ruby-prawn OK claudio@@
@
text
@# $OpenBSD: Makefile,v 1.9 2011/11/09 00:17:38 jeremy Exp $

COMMENT =	collection of general purpose, pure-Ruby extensions

DISTNAME =	facets-2.7.0
REVISION =	6
CATEGORIES =	devel

# Ruby license
PERMIT_PACKAGE_CDROM = Yes
PERMIT_PACKAGE_FTP = Yes
PERMIT_DISTFILES_CDROM = Yes
PERMIT_DISTFILES_FTP = Yes

MODULES =	lang/ruby

CONFIGURE_STYLE = ruby gem

MODRUBY_REGRESS = rake

.include <bsd.port.mk>
@


1.9
log
@Remove .require_paths from PLISTs from gems that used to use
them.  After recent updates to the ruby interpreters, these
files are no longer created.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2011/09/16 09:24:57 espie Exp $
@


1.8
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2011/03/14 09:17:27 sthen Exp $
d6 1
a6 1
REVISION =	5
@


1.7
log
@fix various typos, from Anthony J. Bentley with a few tweaks by myself
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2011/01/06 04:24:23 jeremy Exp $
d6 1
a6 1
REVISION =	4
@


1.6
log
@REVISION bump for rbx FLAVOR PLIST change.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2010/11/24 21:35:14 jeremy Exp $
d6 1
a6 1
REVISION =	3
@


1.5
log
@REVISION bump all ruby ports due to a change in the pkgspec.
Previously, we were using ruby->=1.8,<=1.9, instead of
ruby->=1.8,<1.9.  While this wouldn't cause an issue, since
our ruby-1.9.2 package isn't included in ruby->=1.8,<=1.9,
it's still wrong and should be fixed.  This also fixes the
following minor issues:

Switch from using FLAVOR to MODRUBY_FLAVOR for *_DEPENDS.
Currently we don't have a ruby port that uses FLAVORs that
would differ from MODRUBY_FLAVOR, but it's possible we will
in the future.

Switch from BASE_PKGPATH to BUILD_PKGPATH in a few cases in
REGRESS_DEPENDS.  This probably is not strictly necessary, but
BUILD_PKGPATH is used in more cases, so it is good for
consistency.

Switch to new style *_DEPENDS, with the version specification
at the end.  The remaining cases where this is not done is
because a specific version is used.

Some FULLPKGNAME added to REGRESS_DEPENDS, to make sure that if
the old version is installed when you run a regress test, it
will install the new version first.

Some conversion of spaces to tabs for consistency.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2010/11/08 23:28:53 jeremy Exp $
d6 1
a6 1
REVISION =	2
@


1.4
log
@REVISION bumps for most ruby ports after the ruby.port.mk update.

PKG_ARCH = * removed from many ports as it is added automatically
for pure ruby gem ports.  Switch ports that previously used
GEM_SKIPDEPENDS to adding dependencies or modifying the underlying
gem metadata with patches.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2010/09/28 20:12:17 jeremy Exp $
d6 1
a6 1
REVISION =	1
@


1.3
log
@Remove MASTER_SITES from most ruby gem ports, specify it in ruby.port.mk

All ruby .gem files are now hosted on rubygems.org in the same
directory.  If the ruby gem CONFIGURE_STYLE is used, make the
default MASTER_SITES that directory.

There are still a few uses of MASTER_SITE_RUBYFORGE in the tree, for
some ports that aren't gems, or where the .gem file isn't hosted on
rubygems.org, or where the hashes don't match.  Most of these will be
dealt with in the near future.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2010/09/23 22:30:26 jeremy Exp $
d6 1
a6 2
PKGNAME =	ruby-${DISTNAME}
REVISION =	0
@


1.2
log
@Bump all ruby ports not already handled.

In the upgrade from ruby 1.8.6 to 1.8.7, the PLISTs changed
due to differences in how RDoc processes files.

This also has a number of changes to the regress tests to
work with the changes to devel/ruby-rake.  It moves most of
the regress tests to use MODRUBY_REGRESS.

OK jcs@@, landry@@, jasper@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2009/11/22 04:18:14 msf Exp $
a14 2

MASTER_SITES =	${MASTER_SITE_RUBYFORGE:=facets/}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d7 1
@


1.1.1.1
log
@initial import of facets-2.7.0

Ruby Facets is a collection of general purpose, pure-Ruby extensions
and additions for the Ruby programming language. Facets is divided into
two libraries, one for the extensions and the other for the additions.
called Facets/CORE and Facets/MORE, respectively.

Facets/CORE is a large collection of methods which extend the core
capabilities of Ruby's built-in classes and modules. This collection of
extension methods are unique by virtue of their atomicity. The methods
are stored individually so that each can be required independently.
This gives developers fine-grain control over which extra methods to bring
into his or her code. The collection currently contains over 400 methods
spanning 28 classes and modules. It is an atomic library in that the
methods are packaged individually so that each can be required
independently. This gives the programmer greater control to
include only the extra methods he or she actually needs.

Facets/MORE are a collection of classes, modules and light frameworks
whcih cons itutes an ever growing and improving source of reusable
components. Some very nice additions are provided, from an amazing SI
Units system to an elegant Annotations system. And of course there are
all the more typical goodies like Tuple, Functor and Multiton.

ok bernd@@
@
text
@@
