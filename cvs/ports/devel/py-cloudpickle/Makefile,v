head	1.4;
access;
symbols
	OPENBSD_6_1:1.3.0.6
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	bcallah_20150821:1.1.1.1
	bcallah:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.06.07.15.41.30;	author sthen;	state Exp;
branches;
next	1.3;
commitid	5tRiuT6bzCXNp9gg;

1.3
date	2015.09.29.10.51.44;	author sthen;	state Exp;
branches;
next	1.2;
commitid	NAa0n7dMfq2qVX1q;

1.2
date	2015.09.20.12.45.50;	author jasper;	state Exp;
branches;
next	1.1;
commitid	XHgUnkdUvr5psahW;

1.1
date	2015.08.21.23.44.49;	author bcallah;	state Exp;
branches
	1.1.1.1;
next	;
commitid	NWYcvPfPnYWOIQSB;

1.1.1.1
date	2015.08.21.23.44.49;	author bcallah;	state Exp;
branches;
next	;
commitid	NWYcvPfPnYWOIQSB;


desc
@@


1.4
log
@add py3 support to devel/py-cloudpickle, from bcallah
@
text
@# $OpenBSD: Makefile,v 1.3 2015/09/29 10:51:44 sthen Exp $

COMMENT =	extended pickling support for Python objects
MODPY_EGG_VERSION =	0.1.1
DISTNAME =	cloudpickle-${MODPY_EGG_VERSION}
PKGNAME =	py-cloudpickle-${MODPY_EGG_VERSION}
CATEGORIES =	devel
REVISION =	1

HOMEPAGE =	https://github.com/cloudpipe/cloudpickle
MAINTAINER =	Brian Callahan <bcallah@@devio.us>

# BSD
PERMIT_PACKAGE_CDROM =	Yes

MODULES =	lang/python
MODPY_SETUPTOOLS =	Yes
MODPY_PI =		Yes

FLAVORS =	python3
FLAVOR ?=

TEST_DEPENDS =	devel/py-mock${MODPY_FLAVOR} \
		devel/py-test${MODPY_FLAVOR}

.include <bsd.port.mk>
@


1.3
log
@bump REVISION for setuptools dep change.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2015/09/20 12:45:50 jasper Exp $
d8 1
a8 1
REVISION =	0
d11 1
d20 5
a24 2
TEST_DEPENDS =	devel/py-mock \
		devel/py-test
@


1.2
log
@- update to cloudpickle-0.1.1
- remove bcallah as maintainer per his request
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2015/08/21 23:44:49 bcallah Exp $
d8 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d4 1
a4 1
MODPY_EGG_VERSION =	0.1.0
a9 1
MAINTAINER =	Brian Callahan <bcallah@@openbsd.org>
@


1.1.1.1
log
@Import devel/py-cloudpickle
tweaks and ok jca@@

cloudpickle makes it possible to serialize Python constructs not
supported by the default pickle module from the Python standard library.

cloudpickle is especially useful for cluster computing where Python
expressions are shipped over the network to execute on remote hosts,
possibly close to the data.

Among other things, cloudpickle supports pickling for lambda
expressions, functions and classes defined interactively in the __main__
module.
@
text
@@
