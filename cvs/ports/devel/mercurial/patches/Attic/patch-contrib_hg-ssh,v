head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2017.04.19.22.48.51;	author juanfra;	state dead;
branches
	1.1.2.1;
next	;
commitid	9xvHFFV85re4Um5m;

1.1.2.1
date	2017.04.19.22.48.51;	author juanfra;	state Exp;
branches;
next	;
commitid	9xvHFFV85re4Um5m;


desc
@@


1.1
log
@file patch-contrib_hg-ssh was initially added on branch OPENBSD_6_1.
@
text
@@


1.1.2.1
log
@SECURITY: "hg serve --stdio could be tricked into granting authorized
users access to the Python debugger"

"dispatch: protect against malicious 'hg serve --stdio' invocations
(sec)

Some shared-ssh installations assume that 'hg serve --stdio' is a safe
command to run for minimally trusted users. Unfortunately, the messy
implementation of argument parsing here meant that trying to access a
repo named '--debugger' would give the user a pdb prompt, thereby
sidestepping any hoped-for sandboxing. Serving repositories over
HTTP(S) is unaffected.

We're not currently hardening any subcommands other than 'serve'. If
your service exposes other commands to users with arbitrary repository
names, it is imperative that you defend against repository names of
'--debugger' and anything starting with '--config'.

The read-only mode of hg-ssh stopped working because it provided its
hook configuration to "hg serve --stdio" via --config parameter. This
is banned for security reasons now. This patch switches it to directly
call ui.setconfig(). If your custom hosting infrastructure relies on
passing --config to "hg serve --stdio", you'll need to find a
different way to get that configuration into Mercurial, either by
using ui.setconfig() as hg-ssh does in this patch, or by placing an
hgrc file someplace where Mercurial will read it."

Changes backported from 4.1.3.
@
text
@a0 35
$OpenBSD$
--- contrib/hg-ssh.orig	Wed Jun  1 22:48:29 2016
+++ contrib/hg-ssh	Wed Apr 19 23:45:11 2017
@@@@ -32,7 +32,7 @@@@ command="hg-ssh --read-only repos/*"
 # enable importing on demand to reduce startup time
 from mercurial import demandimport; demandimport.enable()
 
-from mercurial import dispatch
+from mercurial import dispatch, ui as uimod
 
 import sys, os, shlex
 
@@@@ -61,14 +61,15 @@@@ def main():
         repo = os.path.normpath(os.path.join(cwd, os.path.expanduser(path)))
         if repo in allowed_paths:
             cmd = ['-R', repo, 'serve', '--stdio']
+            req = dispatch.request(cmd)
             if readonly:
-                cmd += [
-                    '--config',
-                    'hooks.pretxnopen.hg-ssh=python:__main__.rejectpush',
-                    '--config',
-                    'hooks.prepushkey.hg-ssh=python:__main__.rejectpush'
-                    ]
-            dispatch.dispatch(dispatch.request(cmd))
+                if not req.ui:
+                    req.ui = uimod.ui.load()
+                req.ui.setconfig('hooks', 'pretxnopen.hg-ssh',
+                                 'python:__main__.rejectpush', 'hg-ssh')
+                req.ui.setconfig('hooks', 'prepushkey.hg-ssh',
+                                 'python:__main__.rejectpush', 'hg-ssh')
+            dispatch.dispatch(req)
         else:
             sys.stderr.write('Illegal repository "%s"\n' % repo)
             sys.exit(255)
@

