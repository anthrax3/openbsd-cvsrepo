head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2017.04.19.22.48.51;	author juanfra;	state dead;
branches
	1.1.2.1;
next	;
commitid	9xvHFFV85re4Um5m;

1.1.2.1
date	2017.04.19.22.48.51;	author juanfra;	state Exp;
branches;
next	1.1.2.2;
commitid	9xvHFFV85re4Um5m;

1.1.2.2
date	2017.08.10.19.36.59;	author juanfra;	state dead;
branches;
next	;
commitid	Ey1GPbsYyyjeab8r;


desc
@@


1.1
log
@file patch-tests_test-ssh_t was initially added on branch OPENBSD_6_1.
@
text
@@


1.1.2.1
log
@SECURITY: "hg serve --stdio could be tricked into granting authorized
users access to the Python debugger"

"dispatch: protect against malicious 'hg serve --stdio' invocations
(sec)

Some shared-ssh installations assume that 'hg serve --stdio' is a safe
command to run for minimally trusted users. Unfortunately, the messy
implementation of argument parsing here meant that trying to access a
repo named '--debugger' would give the user a pdb prompt, thereby
sidestepping any hoped-for sandboxing. Serving repositories over
HTTP(S) is unaffected.

We're not currently hardening any subcommands other than 'serve'. If
your service exposes other commands to users with arbitrary repository
names, it is imperative that you defend against repository names of
'--debugger' and anything starting with '--config'.

The read-only mode of hg-ssh stopped working because it provided its
hook configuration to "hg serve --stdio" via --config parameter. This
is banned for security reasons now. This patch switches it to directly
call ui.setconfig(). If your custom hosting infrastructure relies on
passing --config to "hg serve --stdio", you'll need to find a
different way to get that configuration into Mercurial, either by
using ui.setconfig() as hg-ssh does in this patch, or by placing an
hgrc file someplace where Mercurial will read it."

Changes backported from 4.1.3.
@
text
@a0 23
$OpenBSD$
--- tests/test-ssh.t.orig	Wed Jun  1 22:48:30 2016
+++ tests/test-ssh.t	Wed Apr 19 23:45:11 2017
@@@@ -345,6 +345,19 @@@@ Test (non-)escaping of remote paths with spaces when c
   abort: destination 'a repo' is not empty
   [255]
 
+Make sure hg is really paranoid in serve --stdio mode. It used to be
+possible to get a debugger REPL by specifying a repo named --debugger.
+  $ hg -R --debugger serve --stdio
+  abort: potentially unsafe serve --stdio invocation: ['-R', '--debugger', 'serve', '--stdio']
+  [255]
+  $ hg -R --config=ui.debugger=yes serve --stdio
+  abort: potentially unsafe serve --stdio invocation: ['-R', '--config=ui.debugger=yes', 'serve', '--stdio']
+  [255]
+Abbreviations of 'serve' also don't work, to avoid shenanigans.
+  $ hg -R narf serv --stdio
+  abort: potentially unsafe serve --stdio invocation: ['-R', 'narf', 'serv', '--stdio']
+  [255]
+
 Test hg-ssh using a helper script that will restore PYTHONPATH (which might
 have been cleared by a hg.exe wrapper) and invoke hg-ssh with the right
 parameters:
@


1.1.2.2
log
@Update to mercurial 4.2.3.

https://www.mercurial-scm.org/pipermail/mercurial/2017-August/050522.html

CVE-2017-1000115:

Mercurial's symlink auditing was incomplete prior to 4.3, and could be abused
to write to files outside the repository.

CVE-2017-1000116:

Mercurial was not sanitizing hostnames passed to ssh, allowing shell injection
attacks by specifying a hostname starting with -oProxyCommand.
@
text
@d1 1
a1 1
$OpenBSD: patch-tests_test-ssh_t,v 1.1.2.1 2017/04/19 22:48:51 juanfra Exp $
@


