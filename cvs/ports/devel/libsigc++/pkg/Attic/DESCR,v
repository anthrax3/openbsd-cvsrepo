head	1.5;
access;
symbols
	OPENBSD_4_8:1.4.0.28
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.26
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.24
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.22
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.20
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.18
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.16
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.14
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.12
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.10
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.1.1.0.8
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	fgsch_2000-June-15:1.1.1.1
	fgsch:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2011.01.04.08.37.09;	author jasper;	state dead;
branches;
next	1.4;

1.4
date	2003.12.15.21.42.21;	author naddy;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.02.05.35.11;	author david;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.07.08.18.39;	author shell;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.15.10.03.05;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.15.10.03.05;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.5
log
@- remove libsigc++ and it's only dependant port in tree.

both are old, dead upstream, and now unused intree.
devel/libsigc++ has been superseded years ago by devel/libsigc++-2

ok pvalchev@@
@
text
@Libsigc++ - A Signal Framework for C++

Provides following features:
  * compile time typesafe callbacks (faster than run time checks)
  * typesafty violations line number reports correctly with 
    template names (no tracing template failures into headers)
  * no compiler extensions or meta compilers required
  * proper handling of dynamic objects and signals
    (deleted objects will not cause seg faults)

  * extendable API at any level
    Slot, Connection, Object, and Signal
  * extensions do not require alteration of basic components
    to allow use of extensions
  * User definable marshallers

  * provides headers for up to 7 arguments and 2 callback data
  * M4 Macros for building templates with various numbers 
    of arguments and callback data
  * Easily build support for templates with number of arguments
    and callback data not defined in library headers
@


1.4
log
@remove WWW lines
@
text
@@


1.3
log
@fix more spelling errors/typos
ok pvalchev@@
@
text
@a21 2

WWW: ${HOMEPAGE}
@


1.2
log
@add HOMEPAGE
@
text
@d19 1
a19 1
    of arguements and callback data
@


1.1
log
@Initial revision
@
text
@d22 2
@


1.1.1.1
log
@a callback framework for C++
@
text
@@
