head	1.15;
access;
symbols
	OPENBSD_5_5:1.14.0.2
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2;
locks; strict;
comment	@# @;


1.15
date	2014.04.29.06.27.57;	author jasper;	state dead;
branches;
next	1.14;

1.14
date	2014.02.08.10.55.31;	author ajacoutot;	state Exp;
branches;
next	1.13;

1.13
date	2014.02.03.13.50.32;	author ajacoutot;	state Exp;
branches;
next	1.12;

1.12
date	2014.02.03.13.46.19;	author ajacoutot;	state Exp;
branches;
next	1.11;

1.11
date	2014.02.01.18.11.43;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2014.01.23.09.41.25;	author jasper;	state Exp;
branches;
next	1.9;

1.9
date	2013.12.09.14.26.56;	author robert;	state Exp;
branches;
next	1.8;

1.8
date	2013.11.19.07.30.58;	author robert;	state Exp;
branches;
next	1.7;

1.7
date	2013.08.26.08.43.15;	author ajacoutot;	state dead;
branches;
next	1.6;

1.6
date	2013.04.01.11.42.18;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2013.03.27.07.57.38;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2012.01.22.11.55.10;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2012.01.09.17.39.19;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2012.01.09.17.22.15;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2012.01.09.16.45.20;	author robert;	state Exp;
branches;
next	;


desc
@@


1.15
log
@update to libgtop-2.30.0
@
text
@$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.14 2014/02/08 10:55:31 ajacoutot Exp $

RM at next release.

--- sysdeps/openbsd/prockernel.c.orig	Sat Jul 27 14:40:23 2013
+++ sysdeps/openbsd/prockernel.c	Sat Feb  8 11:25:40 2014
@@@@ -36,12 +36,13 @@@@
 #include <fcntl.h>
 
 static const unsigned long _glibtop_sysdeps_proc_kernel_pstats =
+(1L << GLIBTOP_PROC_KERNEL_K_FLAGS) +
 (1L << GLIBTOP_PROC_KERNEL_MIN_FLT) +
 (1L << GLIBTOP_PROC_KERNEL_MAJ_FLT);
 
 static const unsigned long _glibtop_sysdeps_proc_kernel_wchan =
-(1L << GLIBTOP_PROC_KERNEL_NWCHAN) +
-(1L << GLIBTOP_PROC_KERNEL_WCHAN);
+(1L << GLIBTOP_PROC_KERNEL_WCHAN) +
+(1L << GLIBTOP_PROC_KERNEL_NWCHAN);
 
 /* Init function. */
 
@@@@ -70,20 +71,39 @@@@ glibtop_get_proc_kernel_p (glibtop *server,
 	/* It does not work for the swapper task. */
 	if (pid == 0) return;
 
+	glibtop_suid_enter (server);
+
 	/* Get the process information */
 	pinfo = kvm_getprocs (server->machine.kd, KERN_PROC_PID, pid,
 			      sizeof(*pinfo), &count);
-	if ((pinfo == NULL) || (count != 1)) {
+	if (pinfo == NULL) {
 		glibtop_warn_io_r (server, "kvm_getprocs (%d)", pid);
+		glibtop_suid_leave (server);
 		return;
 	}
 
-	if (pinfo->p_wmesg[0])
-		g_strlcpy(buf->wchan, pinfo->p_wmesg[0], sizeof(buf->wchan));
-	
-	buf->min_flt = pinfo[0].p_uru_minflt;
-	buf->maj_flt = pinfo[0].p_uru_majflt;
+	glibtop_suid_leave (server);
 
-	buf->flags |= (_glibtop_sysdeps_proc_kernel_wchan
-		| _glibtop_sysdeps_proc_kernel_pstats);
+#define	PROC_WCHAN	p_wchan
+#define	PROC_WMESG	p_wmesg
+
+	buf->nwchan = (unsigned long) pinfo [0].PROC_WCHAN;
+
+	buf->flags |= (1L << GLIBTOP_PROC_KERNEL_NWCHAN);
+
+	if (pinfo [0].PROC_WCHAN && pinfo [0].PROC_WMESG[0] != 0) {
+		g_strlcpy (buf->wchan, pinfo [0].PROC_WMESG,
+			 sizeof buf->wchan);
+		buf->flags |= (1L << GLIBTOP_PROC_KERNEL_WCHAN);
+	} else {
+		buf->wchan [0] = 0;
+	}
+
+	buf->k_flags = (unsigned long) pinfo [0].p_flag;
+	buf->min_flt = (unsigned long) pinfo [0].p_uru_minflt;
+	buf->maj_flt = (unsigned long) pinfo [0].p_uru_majflt;
+
+	buf->flags |= _glibtop_sysdeps_proc_kernel_pstats;
+
+	return;
 }
@


1.14
log
@Drop unecessary checks and bring glibtop_get_proc_segment from FreeBSD.
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.13 2014/02/03 13:50:32 ajacoutot Exp $
@


1.13
log
@Explicitely mark all files that can be removed when the next release is out.
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.12 2014/02/03 13:46:19 ajacoutot Exp $
d6 1
a6 1
+++ sysdeps/openbsd/prockernel.c	Sun Feb  2 14:07:50 2014
d32 2
a33 1
 	if ((pinfo == NULL) || (count != 1)) {
@


1.12
log
@Sync with what was committed upstream to bring us closer to what FreeBSD
does.
Properly use the OpenBSD-specific code instead of the common one.

ok jasper@@ (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.11 2014/02/01 18:11:43 ajacoutot Exp $
d3 1
a3 9
From df1db430320c8646f809ef0224c2a620f7cadd1b Mon Sep 17 00:00:00 2001
From: Robert Nagy <robert@@openbsd.org>
Date: Thu, 23 Jan 2014 09:39:39 +0000
Subject: Fix several issues related to process information on OpenBSD and drop lsof usage.

From c99ceeaa65a5482db2b5b3b677a8c4b40acc8eb8 Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@gnome.org>
Date: Sat, 01 Feb 2014 18:09:21 +0000
Subject: openbsd: better handling of p_wchan
@


1.11
log
@Better handling of p_wchan and drop useless mfs chunk.
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.10 2014/01/23 09:41:25 jasper Exp $
d14 29
a42 2
+++ sysdeps/openbsd/prockernel.c	Sat Feb  1 19:03:06 2014
@@@@ -78,11 +78,13 @@@@ glibtop_get_proc_kernel_p (glibtop *server,
d49 8
a56 2
 	buf->min_flt = pinfo[0].p_uru_minflt;
 	buf->maj_flt = pinfo[0].p_uru_majflt;
d58 20
a77 7
+	buf->nwchan = pinfo[0].p_wchan;
+	if (pinfo[0].p_wchan && pinfo[0].p_wmesg)
+		g_strlcpy(buf->wchan, pinfo[0].p_wmesg,
+			  sizeof buf->wchan);
 
 	buf->flags |= (_glibtop_sysdeps_proc_kernel_wchan
 		| _glibtop_sysdeps_proc_kernel_pstats);
@


1.10
log
@pushed upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.9 2013/12/09 14:26:56 robert Exp $
d8 5
d14 2
a15 2
+++ sysdeps/openbsd/prockernel.c	Mon Dec  9 14:54:24 2013
@@@@ -78,9 +78,9 @@@@ glibtop_get_proc_kernel_p (glibtop *server,
a21 3
+	if (pinfo->p_wmesg)
+		g_strlcpy(buf->wchan, pinfo->p_wmesg, sizeof(buf->wchan));
+
d24 5
d30 2
@


1.9
log
@fix several issues with libgtop2 process information code
ok jasper@@
@
text
@d1 7
a7 1
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.8 2013/11/19 07:30:58 robert Exp $
@


1.8
log
@wchan is no longer exposed, just check if wmesg is not empty, which is done
already and then use p_wmesg instead of trying to strlcpy p_wmesg[0]
this fixes one out of two bugs of libgtop2
ok jasper@@
@
text
@d1 5
a5 4
$OpenBSD$
--- sysdeps/openbsd/prockernel.c.orig	Mon Nov 18 20:57:25 2013
+++ sysdeps/openbsd/prockernel.c	Mon Nov 18 20:57:37 2013
@@@@ -79,7 +79,7 @@@@ glibtop_get_proc_kernel_p (glibtop *server,
d8 1
a8 1
 	if (pinfo->p_wmesg[0])
d10 2
d13 1
a13 1
 	
d16 1
@


1.7
log
@Update to libgtop2-2.28.5.
No noticeable changes besides our patches being integrated upstream.
@
text
@d1 4
a4 33
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.6 2013/04/01 11:42:18 jasper Exp $

From b11aa1517e203e36a8901f03ea57c50a25dfbfc7 Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@gnome.org>
Date: Sun, 22 Jan 2012 11:47:49 +0000
Subject: OpenBSD: kinfo_proc2 -> kinfo_proc

From dc7eab432973e659a7d7054193da42260e148988 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Mon, 01 Apr 2013 11:40:11 +0000
Subject: Adjust for the fact that regular users cannot read wchan anymore in OpenBSD 5.4.

--- sysdeps/openbsd/prockernel.c.orig	Sun Jul 24 21:13:56 2011
+++ sysdeps/openbsd/prockernel.c	Wed Mar 27 08:53:04 2013
@@@@ -57,7 +57,7 @@@@ glibtop_get_proc_kernel_p (glibtop *server,
 			   glibtop_proc_kernel *buf,
 			   pid_t pid)
 {
-	struct kinfo_proc2 *pinfo;
+	struct kinfo_proc *pinfo;
 	int count;
 
 	glibtop_init_p (server, (1L << GLIBTOP_SYSDEPS_PROC_KERNEL), 0);
@@@@ -71,22 +71,20 @@@@ glibtop_get_proc_kernel_p (glibtop *server,
 	if (pid == 0) return;
 
 	/* Get the process information */
-	pinfo = kvm_getproc2 (server->machine.kd, KERN_PROC_PID, pid,
+	pinfo = kvm_getprocs (server->machine.kd, KERN_PROC_PID, pid,
 			      sizeof(*pinfo), &count);
 	if ((pinfo == NULL) || (count != 1)) {
 		glibtop_warn_io_r (server, "kvm_getprocs (%d)", pid);
 		return;
d7 4
a10 8
-	buf->nwchan = pinfo[0].p_wchan;
-	if (pinfo[0].p_wchan && pinfo[0].p_wmesg)
-		g_strlcpy(buf->wchan, pinfo[0].p_wmesg,
-			  sizeof buf->wchan);
-	
+	if (pinfo->p_wmesg[0])
+		g_strlcpy(buf->wchan, pinfo->p_wmesg[0], sizeof(buf->wchan));
+
a12 6
 
 	buf->flags |= (_glibtop_sysdeps_proc_kernel_wchan
-		| _glibtop_sysdeps_proc_kernel_pstats);
+		       | _glibtop_sysdeps_proc_kernel_pstats);
 
 }
@


1.6
log
@pushed upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.5 2013/03/27 07:57:38 jasper Exp $
@


1.5
log
@adjust now that regular users can't read wchan anymore.
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.4 2012/01/22 11:55:10 ajacoutot Exp $
d7 5
@


1.4
log
@Sync patches after upstream commit.
Remove bogus patch (indentical).

no pkg change
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.3 2012/01/09 17:39:19 ajacoutot Exp $
d9 1
a9 1
+++ sysdeps/openbsd/prockernel.c	Mon Jan  9 18:37:24 2012
d19 1
a19 1
@@@@ -71,7 +71,7 @@@@ glibtop_get_proc_kernel_p (glibtop *server,
d28 19
@


1.3
log
@tsk tsk tsk.
@
text
@d1 7
a7 1
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.2 2012/01/09 17:22:15 robert Exp $
@


1.2
log
@s/kvm_getprocss/kvm_getprocs/g in unused code and warning messages
@
text
@d1 3
a3 3
$OpenBSD: patch-sysdeps_openbsd_prockernel_c,v 1.1 2012/01/09 16:45:20 robert Exp $
--- sysdeps/openbsd/prockernel.c.orig	Mon Jan  9 09:26:48 2012
+++ sysdeps/openbsd/prockernel.c	Mon Jan  9 09:31:58 2012
d13 1
a13 1
@@@@ -71,10 +71,10 @@@@ glibtop_get_proc_kernel_p (glibtop *server,
d21 1
a21 5
-		glibtop_warn_io_r (server, "kvm_getprocs (%d)", pid);
+		glibtop_warn_io_r (server, "kvm_getprocs (%d)", pid);
 		return;
 	}
 
@


1.1
log
@fix after kinfo_proc2 removal
@
text
@d1 1
a1 1
$OpenBSD$
d22 1
a22 1
+		glibtop_warn_io_r (server, "kvm_getprocss (%d)", pid);
@

