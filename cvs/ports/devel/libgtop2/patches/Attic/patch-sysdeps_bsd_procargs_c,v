head	1.2;
access;
symbols
	OPENBSD_4_9:1.1.0.14
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.12
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.8
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.05.23.18.09.10;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2008.02.09.16.52.25;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@the openbsd code has diverged too much from the freebsd and generic bsd code
to be easily maintainable. so instead move it to files/ for now untill it
gets incorporated upstream.

discussed with aja@@
@
text
@$OpenBSD: patch-sysdeps_bsd_procargs_c,v 1.1 2008/02/09 16:52:25 ajacoutot Exp $
--- sysdeps/bsd/procargs.c.orig	Mon Jan 28 14:59:01 2008
+++ sysdeps/bsd/procargs.c	Mon Jan 28 15:01:26 2008
@@@@ -47,12 +47,16 @@@@ char *
 glibtop_get_proc_args_p (glibtop *server, glibtop_proc_args *buf,
 			 pid_t pid, unsigned max_len)
 {
+#if defined(__OpenBSD__)
+	struct kinfo_proc2 *pinfo;
+#else
 	struct kinfo_proc *pinfo;
+#endif
 	char *retval, **args, **ptr;
 	size_t size = 0, pos = 0;
 	int count;
 
-#ifndef __bsdi__
+#if !defined(__bsdi__) && !defined(__OpenBSD__)
 	char filename [BUFSIZ];
 	struct stat statb;
 #endif
@@@@ -64,7 +68,7 @@@@ glibtop_get_proc_args_p (glibtop *server, glibtop_proc
 	/* swapper, init, pagedaemon, vmdaemon, update - this doen't work. */
 	if (pid < 5) return NULL;
 
-#ifndef __bsdi__
+#if !defined(__bsdi__) && !defined(__OpenBSD__)
 	sprintf (filename, "/proc/%d/mem", pid);
 	if (stat (filename, &statb)) return NULL;
 #endif
@@@@ -72,14 +76,23 @@@@ glibtop_get_proc_args_p (glibtop *server, glibtop_proc
 	glibtop_suid_enter (server);
 
 	/* Get the process data */
+#if defined(__OpenBSD__)
+	pinfo = kvm_getproc2 (server->machine.kd, KERN_PROC_PID, pid,
+			       sizeof (*pinfo), &count);
+#else
 	pinfo = kvm_getprocs (server->machine.kd, KERN_PROC_PID, pid, &count);
+#endif
 	if ((pinfo == NULL) || (count < 1)) {
 		glibtop_suid_leave (server);
 		glibtop_warn_io_r (server, "kvm_getprocs (%d)", pid);
 		return NULL;
 	}
 
+#if defined(__OpenBSD__)
+	args = kvm_getargv2 (server->machine.kd, pinfo, max_len);
+#else
 	args = kvm_getargv (server->machine.kd, pinfo, max_len);
+#endif
 	if (args == NULL) {
 		glibtop_suid_leave (server);
 		glibtop_warn_io_r (server, "kvm_getargv (%d)", pid);
@


1.1
log
@- update to 2.20.1
Note that it does not work better than previous in-tree version but it
will give us a better base to fix it.

joint work with jasper@@
most patches adapted from NetBSD
fsusage patch from naddy@@

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
@

