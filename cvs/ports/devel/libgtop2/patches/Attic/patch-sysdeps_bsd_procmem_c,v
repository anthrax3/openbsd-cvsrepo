head	1.4;
access;
symbols
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.8
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.05.23.18.09.10;	author jasper;	state dead;
branches;
next	1.3;

1.3
date	2010.04.18.12.32.09;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.08.15.57.46;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2008.02.09.16.52.25;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@the openbsd code has diverged too much from the freebsd and generic bsd code
to be easily maintainable. so instead move it to files/ for now untill it
gets incorporated upstream.

discussed with aja@@
@
text
@$OpenBSD: patch-sysdeps_bsd_procmem_c,v 1.3 2010/04/18 12:32:09 ajacoutot Exp $
--- sysdeps/bsd/procmem.c.orig	Sun Apr 19 19:51:00 2009
+++ sysdeps/bsd/procmem.c	Sun Apr 18 12:10:09 2010
@@@@ -30,7 +30,7 @@@@
 #include <sys/param.h>
 #include <sys/proc.h>
 #include <sys/resource.h>
-#if defined(__NetBSD__) && (__NetBSD_Version__ >= 105020000)
+#if defined(__NetBSD__) && (__NetBSD_Version__ >= 105020000) || defined(__OpenBSD__)
 #include <uvm/uvm_extern.h>
 #else
 #include <vm/vm_object.h>
@@@@ -46,14 +46,15 @@@@
 #include <sys/user.h>
 #endif
 #include <sys/sysctl.h>
-#if defined(__NetBSD__) && (__NetBSD_Version__ >= 105020000)
+#if (defined(__NetBSD__) && (__NetBSD_Version__ >= 105020000)) || defined(__OpenBSD__)
 #include <uvm/uvm.h>
 #else
 #include <vm/vm.h>
 #endif
 
-#if defined(__NetBSD__) && \
-	(__NetBSD_Version__ >= 104000000) && (__NetBSD_Version__ < 105020000)
+#if (defined(__NetBSD__) && \
+	(__NetBSD_Version__ >= 104000000) && (__NetBSD_Version__ < 105020000)) \
+	|| defined(__OpenBSD__)
 /* Fixme ... */
 #undef _KERNEL
 #define _UVM_UVM_AMAP_I_H_ 1
@@@@ -69,10 +70,9 @@@@ static const unsigned long _glibtop_sysdeps_proc_mem =
 (1L << GLIBTOP_PROC_MEM_RSS_RLIM);
 
 static const unsigned long _glibtop_sysdeps_proc_mem_share =
-#if defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000)
+#if (defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000)) || \
+	defined(__OpenBSD__) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 (1L << GLIBTOP_PROC_MEM_SHARE);
-#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
-(1L << GLIBTOP_PROC_MEM_SHARE);
 #else
 0;
 #endif
@@@@ -116,6 +116,9 @@@@ void
 glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_mem *buf,
 			pid_t pid)
 {
+#if defined(__OpenBSD__)
+	struct kinfo_proc2 *pinfo;
+#else	
 	struct kinfo_proc *pinfo;
 	struct vm_map_entry entry, *first;
 	struct vmspace *vms, vmspace;
@@@@ -127,6 +130,8 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
 #if (!defined(__FreeBSD__) || (__FreeBSD_version < 500013)) && !defined(__FreeBSD_kernel__)
 	struct plimit plimit;
 #endif
+#endif /* __OpenBSD__ */
+
 	int count;
 
 	glibtop_init_p (server, (1L << GLIBTOP_SYSDEPS_PROC_MEM), 0);
@@@@ -140,7 +145,12 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
 	if (pid == 0) return;
 
 	/* Get the process data */
-	pinfo = kvm_getprocs (server->machine.kd, KERN_PROC_PID, pid, &count);
+#if defined(__OpenBSD__)
+	pinfo = kvm_getproc2 (server->machine.kd, KERN_PROC_PID, pid,
+			      sizeof (*pinfo), &count);
+#else
+ 	pinfo = kvm_getprocs (server->machine.kd, KERN_PROC_PID, pid, &count);
+#endif
 	if ((pinfo == NULL) || (count < 1)) {
 		glibtop_warn_io_r (server, "kvm_getprocs (%d)", pid);
 		return;
@@@@ -157,6 +167,15 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
        buf->resident = buf->rss = (guint64) pagetok
                (pinfo [0].ki_rssize) << LOG1024;
 
+#elif defined(__OpenBSD__)
+
+       buf->rss_rlim = pinfo[0].p_uru_maxrss;
+       buf->vsize = buf->size = (guint64)pagetok
+	       (pinfo[0].p_vm_tsize + pinfo[0].p_vm_dsize + pinfo[0].p_vm_ssize)
+	       << LOG1024;
+       buf->resident = buf->rss = (guint64)pagetok
+               (pinfo[0].p_vm_rssize) << LOG1024;
+
 #else
 
 #define        PROC_VMSPACE   kp_proc.p_vmspace
@@@@ -182,6 +201,10 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
 
 	/* Now we get the shared memory. */
 
+#if defined(__OpenBSD__)
+	buf->share = pinfo[0].p_uru_ixrss;
+#else
+
 	if (kvm_read (server->machine.kd,
 		      (unsigned long) pinfo [0].PROC_VMSPACE,
 		      (char *) &vmspace, sizeof (vmspace)) != sizeof (vmspace)) {
@@@@ -287,6 +310,8 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
 		buf->share += object.un_pager.vnp.vnp_size;
 #endif
 	}
+
+#endif /* __OpenBSD */
 
 	buf->flags = _glibtop_sysdeps_proc_mem |
 		_glibtop_sysdeps_proc_mem_share;
@


1.3
log
@Implements procwd and procopenfiles using a wrapper around lsof(8)
(from FreeBSD sysdeps directory).
Merge proctime.c patch from pkgsrc.
Several other cleanings.
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_bsd_procmem_c,v 1.2 2010/04/08 15:57:46 ajacoutot Exp $
@


1.2
log
@Remove the post-install target, we set permissions with PLIST markers.
Fix some ifdef mess in sysdeps/bsd/procmem.c.
Fix some warnings and implicit references.
Fix subnet display.
Bring a couple of patches from FreeBSD.

This is still not perfect but libgtop2 is now much more robust.
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_bsd_procmem_c,v 1.1 2008/02/09 16:52:25 ajacoutot Exp $
d3 1
a3 1
+++ sysdeps/bsd/procmem.c	Fri Apr  2 14:30:09 2010
d45 1
a45 1
@@@@ -116,10 +116,13 @@@@ void
a54 5
-#if defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000)
+#if (defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000))
 	struct vnode vnode;
 #else
 	struct vm_object object;
d105 1
a105 37
@@@@ -221,7 +244,7 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
  			continue;
 #endif
 #else
-#if defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000)
+#if (defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000))
  		if (UVM_ET_ISSUBMAP (&entry))
 			continue;
 #else
@@@@ -230,7 +253,8 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
 #endif
 #endif
 
-#if defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000)
+#if (defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000)) || \
+	defined(__OpenBSD__)
 		if (!entry.object.uvm_obj)
 			continue;
 
@@@@ -257,14 +281,14 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
 #endif
 		/* If the object is of type vnode, add its size */
 
-#if defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000)
+#if (defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000))
 #if defined(UVM_VNODE_VALID)
 		if (!vnode.v_uvm.u_flags & UVM_VNODE_VALID)
 			continue;
 #endif
 		if ((vnode.v_type != VREG) || (vnode.v_tag != VT_UFS) ||
 		    !vnode.v_data) continue;
-#if defined(__NetBSD__) && (__NetBSD_Version__ >= 105250000)
+#if (defined(__NetBSD__) && (__NetBSD_Version__ >= 105250000))
 		/* Reference count must be at least two. */
 		if (vnode.v_usecount <= 1)
 			continue;
@@@@ -287,6 +311,8 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
@


1.1
log
@- update to 2.20.1
Note that it does not work better than previous in-tree version but it
will give us a better base to fix it.

joint work with jasper@@
most patches adapted from NetBSD
fsusage patch from naddy@@

ok jasper@@
@
text
@d1 3
a3 3
$OpenBSD$
--- sysdeps/bsd/procmem.c.orig	Fri Apr 27 00:27:34 2007
+++ sysdeps/bsd/procmem.c	Fri Dec 28 19:17:26 2007
d32 1
a32 1
@@@@ -69,7 +70,8 @@@@ static const unsigned long _glibtop_sysdeps_proc_mem =
d38 1
a38 1
+	defined(__OpenBSD__)
d40 6
a45 3
 #elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 (1L << GLIBTOP_PROC_MEM_SHARE);
@@@@ -116,10 +118,14 @@@@ void
d56 1
a56 2
+#if (defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000)) || \
+	defined(__OpenBSD__)
d60 1
a60 1
@@@@ -127,6 +133,8 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
d69 1
a69 1
@@@@ -140,7 +148,12 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
d83 1
a83 1
@@@@ -157,6 +170,15 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
d99 1
a99 1
@@@@ -182,6 +204,10 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
d110 1
a110 1
@@@@ -221,7 +247,8 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
d115 1
a115 2
+#if (defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000)) || \
+	defined(__OpenBSD__)
d119 1
a119 1
@@@@ -230,7 +257,8 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
d129 1
a129 1
@@@@ -257,14 +285,16 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
d134 1
a134 2
+#if (defined(__NetBSD__) && (__NetBSD_Version__ >= 104000000)) || \
+	defined(__OpenBSD__)
d142 1
a142 2
+#if (defined(__NetBSD__) && (__NetBSD_Version__ >= 105250000)) || \
+	defined(__OpenBSD__)
d146 1
a146 1
@@@@ -287,6 +317,8 @@@@ glibtop_get_proc_mem_p (glibtop *server, glibtop_proc_
@

