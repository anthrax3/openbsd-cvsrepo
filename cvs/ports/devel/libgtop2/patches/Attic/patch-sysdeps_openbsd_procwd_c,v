head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2014.04.29.06.27.57;	author jasper;	state dead;
branches;
next	1.3;

1.3
date	2014.02.03.13.50.32;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2014.02.03.13.46.19;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2014.01.23.14.06.34;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to libgtop-2.30.0
@
text
@$OpenBSD: patch-sysdeps_openbsd_procwd_c,v 1.3 2014/02/03 13:50:32 ajacoutot Exp $

RM at next release.

--- sysdeps/openbsd/procwd.c.orig	Sat Jul 27 14:40:23 2013
+++ sysdeps/openbsd/procwd.c	Sun Feb  2 14:39:20 2014
@@@@ -41,84 +41,9 @@@@ _glibtop_init_proc_wd_s(glibtop *server)
 	server->sysdeps.proc_wd = _glibtop_sysdeps_proc_wd;
 }
 
-static GPtrArray *
-parse_output(const char *output, glibtop_proc_wd *buf)
-{
-	GPtrArray *dirs;
-	char     **lines;
-	gboolean   nextwd = FALSE;
-	gboolean   nextrtd = FALSE;
-	gboolean   havertd = FALSE;
-	guint      i;
-	guint      len;
-
-	dirs = g_ptr_array_sized_new(1);
-
-	lines = g_strsplit(output, "\n", 0);
-	len = g_strv_length(lines);
-
-	for (i = 0; i < len && lines[i]; i++) {
-		if (strlen(lines[i]) < 2)
-			continue;
-
-		if (!strcmp(lines[i], "fcwd")) {
-			nextwd = TRUE;
-			continue;
-		}
-
-		if (!strcmp(lines[i], "frtd")) {
-			nextrtd = TRUE;
-			continue;
-		}
-
-		if (!g_str_has_prefix(lines[i], "n"))
-			continue;
-
-		if (nextwd) {
-			g_ptr_array_add(dirs, g_strdup(lines[i] + 1));
-			nextwd = FALSE;
-		}
-
-		if (nextrtd && !havertd) {
-			g_strlcpy(buf->root, lines[i] + 1,
-				  sizeof(buf->root));
-			buf->flags |= (1 << GLIBTOP_PROC_WD_ROOT);
-			nextrtd = FALSE;
-			havertd = TRUE;
-		}
-	}
-
-	g_strfreev(lines);
-
-	return dirs;
-}
-
 char**
 glibtop_get_proc_wd_s(glibtop *server, glibtop_proc_wd *buf, pid_t pid)
 {
-	char path[MAXPATHLEN];
-	char *output;
-
-	memset (buf, 0, sizeof (glibtop_proc_wd));
-
-	g_snprintf(path, sizeof(path), "/proc/%u/file", pid);
-	if (safe_readlink(path, buf->exe, sizeof(buf->exe)))
-		buf->flags |= (1 << GLIBTOP_PROC_WD_EXE);
-
-	output = execute_lsof(pid);
-	if (output != NULL) {
-		GPtrArray *dirs;
-
-		dirs = parse_output(output, buf);
-		g_free(output);
-
-		buf->number = dirs->len;
-		buf->flags |= (1 << GLIBTOP_PROC_WD_NUMBER);
-
-		g_ptr_array_add(dirs, NULL);
-
-		return (char **)g_ptr_array_free(dirs, FALSE);
-	}
-
+	/* TODO */
 	return NULL;
 }
@


1.3
log
@Explicitely mark all files that can be removed when the next release is out.
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_procwd_c,v 1.2 2014/02/03 13:46:19 ajacoutot Exp $
@


1.2
log
@Sync with what was committed upstream to bring us closer to what FreeBSD
does.
Properly use the OpenBSD-specific code instead of the common one.

ok jasper@@ (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_procwd_c,v 1.1 2014/01/23 14:06:34 ajacoutot Exp $
d3 1
a3 4
From ecbfade5287c1a0a8973d5f18acb4b08f203f4fb Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@gnome.org>
Date: Thu, 23 Jan 2014 14:03:36 +0000
Subject: openbsd: really drop all lsof related code
@


1.1
log
@Drop all lsof related code.

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
d8 58
a65 3
--- sysdeps/openbsd/procwd.c.orig	Thu Jan 23 14:11:05 2014
+++ sysdeps/openbsd/procwd.c	Thu Jan 23 14:11:24 2014
@@@@ -96,29 +96,6 @@@@ parse_output(const char *output, glibtop_proc_wd *buf)
@

