head	1.6;
access;
symbols
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2016.04.20.06.20.38;	author jasper;	state dead;
branches;
next	1.5;
commitid	t93j0n2r5bzxZbbK;

1.5
date	2015.12.11.14.19.05;	author jasper;	state Exp;
branches;
next	1.4;
commitid	Ba1Rsjr8wwBsBpae;

1.4
date	2015.12.11.14.07.30;	author jasper;	state Exp;
branches;
next	1.3;
commitid	CWQNOsQpFRBLZIfv;

1.3
date	2014.04.29.06.27.57;	author jasper;	state dead;
branches;
next	1.2;

1.2
date	2014.02.03.13.50.32;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2014.02.03.13.46.19;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.6
log
@update to libgtop-2.34.0
@
text
@$OpenBSD: patch-sysdeps_openbsd_suid_open_c,v 1.5 2015/12/11 14:19:05 jasper Exp $

From 02070b7170f98b1b00d6923b00f5ac48f31f0ef2 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Fri, 11 Dec 2015 15:03:49 +0100
Subject: Add various headers to unbreak compilation

--- sysdeps/openbsd/suid_open.c.orig	Fri Dec 11 14:27:34 2015
+++ sysdeps/openbsd/suid_open.c	Fri Dec 11 14:30:49 2015
@@@@ -25,7 +25,10 @@@@
 #include <glibtop/cpu.h>
 #include <glibtop/open.h>
 #include <glibtop/init_hooks.h>
+#include <glibtop/machine.h>
 
+#include <fcntl.h>
+#include <kvm.h>
 
 /* !!! THIS FUNCTION RUNS SUID ROOT - CHANGE WITH CAUTION !!! */
 
@


1.5
log
@pushed upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_suid_open_c,v 1.4 2015/12/11 14:07:30 jasper Exp $
@


1.4
log
@- update to libgtop2-2.32.0
* various changes, mostly upstream rototilling code
@
text
@d1 1
a1 1
$OpenBSD$
d3 4
a6 2
- Include missing headers for various defines and functions.
- Fix compilation because glibtop_machine definition has moved.
@


1.3
log
@update to libgtop-2.30.0
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_suid_open_c,v 1.2 2014/02/03 13:50:32 ajacoutot Exp $
d3 2
a4 1
RM at next release.
d6 13
a18 95
--- sysdeps/openbsd/suid_open.c.orig	Sat Feb  1 23:49:40 2014
+++ sysdeps/openbsd/suid_open.c	Sat Feb  1 23:49:40 2014
@@@@ -0,0 +1,92 @@@@
+/* Copyright (C) 1998 Joshua Sled
+   This file is part of LibGTop 1.0.
+
+   Contributed by Joshua Sled <jsled@@xcf.berkeley.edu>, July 1998.
+
+   LibGTop is free software; you can redistribute it and/or modify it
+   under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2 of the License,
+   or (at your option) any later version.
+
+   LibGTop is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+   for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with LibGTop; see the file COPYING. If not, write to the
+   Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+   Boston, MA 02111-1307, USA.
+*/
+
+#include <config.h>
+#include <glibtop.h>
+#include <glibtop/error.h>
+#include <glibtop/cpu.h>
+#include <glibtop/open.h>
+#include <glibtop/init_hooks.h>
+
+
+/* !!! THIS FUNCTION RUNS SUID ROOT - CHANGE WITH CAUTION !!! */
+
+void
+glibtop_init_p (glibtop *server, const unsigned long features,
+		const unsigned flags)
+{
+	const _glibtop_init_func_t *init_fkt;
+
+	if (server == NULL)
+		glibtop_error_r (NULL, "glibtop_init_p (server == NULL)");
+
+	/* Do the initialization, but only if not already initialized. */
+
+	if ((server->flags & _GLIBTOP_INIT_STATE_SYSDEPS) == 0) {
+		glibtop_open_p (server, "glibtop", features, flags);
+
+		for (init_fkt = _glibtop_init_hook_p; *init_fkt; init_fkt++)
+			(*init_fkt) (server);
+
+		server->flags |= _GLIBTOP_INIT_STATE_SYSDEPS;
+	}
+}
+
+void
+glibtop_open_p (glibtop *server, const char *program_name,
+		const unsigned long features,
+		const unsigned flags)
+{
+	char errbuf[_POSIX2_LINE_MAX];
+#ifdef DEBUG
+	fprintf (stderr, "DEBUG (%d): glibtop_open_p ()\n", getpid ());
+#endif
+
+	/* !!! WE ARE ROOT HERE - CHANGE WITH CAUTION !!! */
+	server->machine.uid = getuid ();
+	server->machine.euid = geteuid ();
+	server->machine.gid = getgid ();
+	server->machine.egid = getegid ();
+	/* Setup machine-specific data */
+	server->machine.kd = kvm_openfiles (NULL, NULL, NULL, O_RDONLY, errbuf);
+
+	if (server->machine.kd == NULL)
+		glibtop_error_io_r (server, "kvm_open");
+
+	/* Drop priviledges. */
+
+	if (setreuid (server->machine.euid, server->machine.uid))
+		_exit (1);
+
+	if (setregid (server->machine.egid, server->machine.gid))
+		_exit (1);
+
+	/* !!! END OF SUID ROOT PART !!! */
+
+	/* Our effective uid is now those of the user invoking the server,
+	 * so we do no longer have any priviledges. */
+
+	/* NOTE: On OpenBSD, we do not need to be suid root, we just need to
+	 * be sgid kmem.
+	 *
+	 * The server will only use setegid() to get back it's priviledges,
+	 * so it will fail if it is suid root and not sgid kmem. */
+}
@


1.2
log
@Explicitely mark all files that can be removed when the next release is out.
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_suid_open_c,v 1.1 2014/02/03 13:46:19 ajacoutot Exp $
@


1.1
log
@Sync with what was committed upstream to bring us closer to what FreeBSD
does.
Properly use the OpenBSD-specific code instead of the common one.

ok jasper@@ (maintainer)
@
text
@d1 4
a4 1
$OpenBSD$
@

