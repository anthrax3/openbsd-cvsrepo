head	1.7;
access;
symbols
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2015.12.11.14.07.30;	author jasper;	state dead;
branches;
next	1.6;
commitid	CWQNOsQpFRBLZIfv;

1.6
date	2014.09.08.07.40.29;	author jasper;	state Exp;
branches;
next	1.5;
commitid	c7Lg6JJ05mFwxOhO;

1.5
date	2014.07.11.16.58.50;	author robert;	state Exp;
branches;
next	1.4;
commitid	hK5CW38xTlX2KmE4;

1.4
date	2014.07.11.16.57.55;	author robert;	state Exp;
branches;
next	1.3;
commitid	nALFlAz0AhZD6Ht8;

1.3
date	2014.04.29.06.27.57;	author jasper;	state dead;
branches;
next	1.2;

1.2
date	2014.02.03.13.50.32;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2014.02.03.13.46.19;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.7
log
@- update to libgtop2-2.32.0
* various changes, mostly upstream rototilling code
@
text
@$OpenBSD: patch-sysdeps_openbsd_cpu_c,v 1.6 2014/09/08 07:40:29 jasper Exp $

From 7326f8816d025a31b9625e9b1776c1bf455f5793 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Mon, 1 Sep 2014 15:21:31 +0200
Subject: Add SMP support for OpenBSD

--- sysdeps/openbsd/cpu.c.orig	Mon Apr 28 23:09:24 2014
+++ sysdeps/openbsd/cpu.c	Fri Jul 11 18:58:37 2014
@@@@ -26,18 +26,22 @@@@
 
 #include <glibtop_suid.h>
 
-#include <sys/sched.h>
-
 static const unsigned long _glibtop_sysdeps_cpu =
 (1L << GLIBTOP_CPU_TOTAL) + (1L << GLIBTOP_CPU_USER) +
 (1L << GLIBTOP_CPU_NICE) + (1L << GLIBTOP_CPU_SYS) +
 (1L << GLIBTOP_CPU_IDLE) + (1L << GLIBTOP_CPU_FREQUENCY) +
 (1L << GLIBTOP_CPU_IRQ);
 
+static const unsigned long _glibtop_sysdeps_cpu_smp =
+(1L << GLIBTOP_XCPU_TOTAL) + (1L << GLIBTOP_XCPU_USER) +
+(1L << GLIBTOP_XCPU_NICE) + (1L << GLIBTOP_XCPU_SYS) +
+(1L << GLIBTOP_XCPU_IDLE) + (1L << GLIBTOP_XCPU_IRQ);
+
 /* MIB array for sysctl */
 static int mib_length=2;
-static int mib [] = { CTL_KERN, KERN_CLOCKRATE };
-static int mib2 [] = { CTL_KERN, KERN_CPTIME };
+static int mib_cr [] = { CTL_KERN, KERN_CLOCKRATE };
+static int mib_cptime [] = { CTL_KERN, KERN_CPTIME };
+static int mib_cptime_s [] = { CTL_KERN, KERN_CPTIME2, 0 };
 
 /* Init function. */
 
@@@@ -45,6 +49,9 @@@@ void
 _glibtop_init_cpu_s (glibtop *server)
 {
 	server->sysdeps.cpu = _glibtop_sysdeps_cpu;
+
+	if (server->ncpu)
+		server->sysdeps.cpu |= _glibtop_sysdeps_cpu_smp;
 }
 
 /* Provides information about cpu usage. */
@@@@ -52,13 +59,13 @@@@ _glibtop_init_cpu_s (glibtop *server)
 void
 glibtop_get_cpu_s (glibtop *server, glibtop_cpu *buf)
 {
-	gulong cpts [CPUSTATES];
-
-	/* sysctl vars*/
+	long cpts [CPUSTATES];
+	int64_t *cp_times = NULL;
 	struct clockinfo ci;
 	size_t length;
+	int ncpu, i;
 
-	glibtop_init_p (server, (1L << GLIBTOP_SYSDEPS_CPU), 0);
+	glibtop_init_s (&server, GLIBTOP_SYSDEPS_CPU, 0);
 
 	memset (buf, 0, sizeof (glibtop_cpu));
 
@@@@ -67,14 +74,14 @@@@ glibtop_get_cpu_s (glibtop *server, glibtop_cpu *buf)
 		return;
 
 	length = sizeof (cpts);
-	if (sysctl (mib2, mib_length, cpts, &length, NULL, 0)) {
+	if (sysctl (mib_cptime, mib_length, cpts, &length, NULL, 0)) {
 		glibtop_warn_io_r (server, "sysctl (kern.cptime)");
 		return;
 	}
 
 	/* Get the clockrate data */
 	length = sizeof (struct clockinfo);
-	if (sysctl (mib, mib_length, &ci, &length, NULL, 0)) {
+	if (sysctl (mib_cr, mib_length, &ci, &length, NULL, 0)) {
 		glibtop_warn_io_r (server, "sysctl (kern.clockrate)");
 		return;
 	}
@@@@ -87,15 +94,55 @@@@ glibtop_get_cpu_s (glibtop *server, glibtop_cpu *buf)
 	buf->sys = cpts [CP_SYS];
 	/* set idle time */
 	buf->idle = cpts [CP_IDLE];
-	/* set interrupt time */
+	/* set irq */
 	buf->irq = cpts [CP_INTR];
 
 	/* set frequency */
-	buf->frequency = ci.hz;
+	buf->frequency = (ci.stathz ? ci.stathz : ci.hz);
 	/* set total */
-	buf->total = cpts [CP_USER] + cpts [CP_NICE]
+	buf->total = cpts [CP_USER] + cpts [CP_NICE] \
 		+ cpts [CP_SYS] + cpts [CP_IDLE] + cpts [CP_INTR];
 
+	ncpu = server->ncpu + 1;
+
+	/*
+	if (!cp_times) {
+		if ((cp_times = calloc(sizeof(int64_t *), ncpu)) == NULL)
+			return;
+	}
+	*/
+
+	length = CPUSTATES * sizeof(int64_t);
+	for (i = 0; i < ncpu; i++) {
+		mib_cptime_s[2] = i;
+		cp_times = g_malloc (length);
+		if (sysctl (mib_cptime_s, 3, cp_times, &length, NULL, 0) < 0)
+			free(cp_times);
+
+		if (cp_times) {
+			buf->xcpu_user[i] = cp_times[CP_USER];
+			buf->xcpu_nice[i] = cp_times[CP_NICE];
+			buf->xcpu_sys[i] = cp_times[CP_SYS];
+			buf->xcpu_idle[i] = cp_times[CP_IDLE];
+			buf->xcpu_irq[i] = cp_times[CP_INTR];
+		} else {
+			buf->xcpu_user[i] = cpts [CP_USER] / ncpu;
+			buf->xcpu_nice[i] = cpts [CP_NICE] / ncpu;
+			buf->xcpu_sys[i] = cpts [CP_SYS] / ncpu;
+			buf->xcpu_idle[i] = cpts [CP_IDLE] / ncpu;
+			buf->xcpu_irq[i] = cpts [CP_INTR] / ncpu;
+		}
+		buf->xcpu_total[i] = buf->xcpu_user[i] + buf->xcpu_nice[i] \
+				     + buf->xcpu_sys[i] + buf->xcpu_idle[i] \
+				     + buf->xcpu_irq[i];
+	}
+
+	g_free (cp_times);
+
 	/* Set the flags last. */
 	buf->flags = _glibtop_sysdeps_cpu;
+
+	if (ncpu > 1) {
+		buf->flags |= _glibtop_sysdeps_cpu_smp;
+	}
 }
@


1.6
log
@these patches were committed upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_cpu_c,v 1.5 2014/07/11 16:58:50 robert Exp $
@


1.5
log
@remove debug code
@
text
@d1 7
a7 1
$OpenBSD: patch-sysdeps_openbsd_cpu_c,v 1.4 2014/07/11 16:57:55 robert Exp $
@


1.4
log
@add SMP support to libgtop
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ sysdeps/openbsd/cpu.c	Fri Jul 11 18:51:34 2014
d76 1
a76 1
@@@@ -87,15 +94,57 @@@@ glibtop_get_cpu_s (glibtop *server, glibtop_cpu *buf)
d105 1
a105 1
+		if (sysctl (mib_cptime_s, 3, cp_times, &length, NULL, 0) < 0) {
a106 2
+			printf("%d FAIL\n", i);
+		}
@


1.3
log
@update to libgtop-2.30.0
@
text
@d1 28
a28 7
$OpenBSD: patch-sysdeps_openbsd_cpu_c,v 1.2 2014/02/03 13:50:32 ajacoutot Exp $

RM at next release.

--- sysdeps/openbsd/cpu.c.orig	Sat Jul 27 14:40:23 2013
+++ sysdeps/openbsd/cpu.c	Sun Feb  2 12:54:19 2014
@@@@ -44,7 +44,7 @@@@ static int mib2 [] = { CTL_KERN, KERN_CPTIME };
d31 2
a32 3
 void
-_glibtop_init_cpu_p (glibtop *server)
+_glibtop_init_cpu_s (glibtop *server)
d35 3
d39 1
a39 1
@@@@ -52,7 +52,7 @@@@ _glibtop_init_cpu_p (glibtop *server)
d41 1
a41 1
 
d43 1
a43 2
-glibtop_get_cpu_p (glibtop *server, glibtop_cpu *buf)
+glibtop_get_cpu_s (glibtop *server, glibtop_cpu *buf)
d45 8
a52 1
 	gulong cpts [CPUSTATES];
d54 83
@


1.2
log
@Explicitely mark all files that can be removed when the next release is out.
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_cpu_c,v 1.1 2014/02/03 13:46:19 ajacoutot Exp $
@


1.1
log
@Sync with what was committed upstream to bring us closer to what FreeBSD
does.
Properly use the OpenBSD-specific code instead of the common one.

ok jasper@@ (maintainer)
@
text
@d1 4
a4 1
$OpenBSD$
@

