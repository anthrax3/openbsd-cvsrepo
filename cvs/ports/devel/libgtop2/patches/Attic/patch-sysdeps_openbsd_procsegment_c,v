head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.2
	OPENBSD_5_5_BASE:1.5;
locks; strict;
comment	@# @;


1.6
date	2014.04.29.06.27.57;	author jasper;	state dead;
branches;
next	1.5;

1.5
date	2014.02.08.10.58.20;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2014.02.08.10.55.31;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2012.01.22.11.55.10;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2012.01.09.17.22.15;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2012.01.09.16.45.20;	author robert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@update to libgtop-2.30.0
@
text
@$OpenBSD: patch-sysdeps_openbsd_procsegment_c,v 1.5 2014/02/08 10:58:20 ajacoutot Exp $

RM at next release.

--- sysdeps/openbsd/procsegment.c.orig	Sat Jul 27 14:40:23 2013
+++ sysdeps/openbsd/procsegment.c	Sat Feb  8 11:36:45 2014
@@@@ -32,13 +32,18 @@@@
 #include <sys/param.h>
 #include <sys/sysctl.h>
 
-static const unsigned long _glibtop_sysdeps_proc_segment = 0;
+static const unsigned long _glibtop_sysdeps_proc_segment =
+(1L << GLIBTOP_PROC_SEGMENT_TEXT_RSS) +
+(1L << GLIBTOP_PROC_SEGMENT_DATA_RSS);
 
+static int pagesize;
+
 /* Init function. */
 
 void
 _glibtop_init_proc_segment_p (glibtop *server)
 {
+	pagesize = getpagesize ();
 	server->sysdeps.proc_segment = _glibtop_sysdeps_proc_segment;
 }
 
@@@@ -49,35 +54,26 @@@@ glibtop_get_proc_segment_p (glibtop *server,
 			    glibtop_proc_segment *buf,
 			    pid_t pid)
 {
+	struct kinfo_proc *pinfo;
+	int count = 0;
+
 	glibtop_init_p (server, (1L << GLIBTOP_SYSDEPS_PROC_SEGMENT), 0);
 
 	memset (buf, 0, sizeof (glibtop_proc_segment));
 
-#if 0
+	/* It does not work for the swapper task. */
+	if (pid == 0) return;
+
 	/* Get the process info from the kernel */
-	kvm_getprocs (server->machine.kd, KERN_PROC_PID, pid, count);
-	if (*count != 1) {
-		return; /* the zeroed-out buffer indicating no data */
+	pinfo = kvm_getprocs (server->machine.kd, KERN_PROC_PID, pid,
+			      sizeof (*pinfo), &count);
+	if (pinfo == NULL) {
+		glibtop_warn_io_r (server, "kvm_getprocs (%d)", pid);
+		return;
 	}
 
-	/* trs: text resident set size
-	   pinfo[0]->kp_eproc.e_xrssize;
-	*/
-	/* buf->trs = pinfo[0]->kp_eproc.e_xrssize; */
-	/* lrs: shared-lib resident set size
-	   ?  */
-	/* drs: data resident set size
-	   pinfo[0]->kp_eproc.e_vm.vm_map.vm_dsize;
-	*/
-	/* dt: dirty pages
-	 */
-	/* start_code: address of beginning of code segment
+	buf->text_rss = pinfo[0].p_vm_tsize * pagesize;
+	buf->data_rss = pinfo[0].p_vm_dsize * pagesize;
 
-	 */
-	/* end_code: address of end of code segment
-	 */
-	/* start_stack: address of the bottom of stack segment
-	 */
-#endif
+	buf->flags = _glibtop_sysdeps_proc_segment;
 }
-
@


1.5
log
@Add comment to drop these patches when a new libgtop2 release is out.
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_procsegment_c,v 1.4 2014/02/08 10:55:31 ajacoutot Exp $
@


1.4
log
@Drop unecessary checks and bring glibtop_get_proc_segment from FreeBSD.
@
text
@d1 4
a4 1
$OpenBSD$
@


1.3
log
@Sync patches after upstream commit.
Remove bogus patch (indentical).

no pkg change
@
text
@d1 6
a6 4
$OpenBSD: patch-sysdeps_openbsd_procsegment_c,v 1.2 2012/01/09 17:22:15 robert Exp $
--- sysdeps/openbsd/procsegment.c.orig	Mon Jan  9 09:30:52 2012
+++ sysdeps/openbsd/procsegment.c	Mon Jan  9 09:31:59 2012
@@@@ -55,7 +55,7 @@@@ glibtop_get_proc_segment_p (glibtop *server,
d8 31
a38 1
 #if 0
d41 7
a47 3
+	kvm_getprocs (server->machine.kd, KERN_PROC_PID, pid, count);
 	if (*count != 1) {
 		return; /* the zeroed-out buffer indicating no data */
d49 25
@


1.2
log
@s/kvm_getprocss/kvm_getprocs/g in unused code and warning messages
@
text
@d1 1
a1 1
$OpenBSD: patch-sysdeps_openbsd_procsegment_c,v 1.1 2012/01/09 16:45:20 robert Exp $
@


1.1
log
@fix after kinfo_proc2 removal
@
text
@d1 1
a1 1
$OpenBSD$
d9 1
a9 1
+	kvm_getprocss (server->machine.kd, KERN_PROC_PID, pid, count);
@

