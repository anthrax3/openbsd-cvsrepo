head	1.5;
access;
symbols
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4;
locks; strict;
comment	@ * @;


1.5
date	2011.08.30.12.24.53;	author jasper;	state dead;
branches;
next	1.4;

1.4
date	2011.05.31.19.25.31;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2011.05.23.19.35.53;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2011.05.23.18.28.14;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.23.18.09.10;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.5
log
@- update libgtop to 2.28.4
* openbsd now has it's own backend
- remove some patch- files that i've committed upstream too
@
text
@/* $OpenBSD: fsusage.c,v 1.4 2011/05/31 19:25:31 jasper Exp $	*/

#include <config.h>

/*
 * statvfs is lacking various members which are present in statfs,
 * like f_(a)syncreads and f_(a)syncwrites. So eventhough we have
 * statvfs, undef it here untill those members are added.
 */
#undef HAVE_SYS_STATVFS_H
#undef STAT_STATVFS

#include <glibtop.h>
#include <glibtop/error.h>
#include <glibtop/fsusage.h>

#include <glibtop_suid.h>

#include <glib.h>

#include <unistd.h>
#include <sys/param.h>
#if defined (HAVE_SYS_STATVFS_H)
#include <sys/statvfs.h>
#else
#include <sys/mount.h>
#endif

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

void
_glibtop_openbsd_get_fsusage_read_write(glibtop *server,
				      glibtop_fsusage *buf,
				      const char *path);

void
_glibtop_openbsd_get_fsusage_read_write(glibtop *server,
				      glibtop_fsusage *buf,
				      const char *path)
{
	int result;
#if defined (STAT_STATVFS)
	struct statvfs sfs;
#else
	struct statfs sfs;
#endif

#if defined (STAT_STATVFS)
	result = statvfs (path, &sfs);
#else
	result = statfs (path, &sfs);
#endif

	if (result == -1) {
		return;
	}

	buf->read = sfs.f_syncreads + sfs.f_asyncreads;
	buf->write = sfs.f_syncwrites + sfs.f_asyncwrites;
	buf->flags |= (1 << GLIBTOP_FSUSAGE_READ) | (1 << GLIBTOP_FSUSAGE_WRITE);
}
@


1.4
log
@- add a comment as to why we undef STAT_STATVFS now
- rename a function now it's in the openbsd implementation
- put CP_IDLE instead of 0 in uptime->idletime
@
text
@d1 1
a1 1
/* $OpenBSD: fsusage.c,v 1.3 2011/05/23 19:35:53 jasper Exp $	*/
@


1.3
log
@add rcs id's
@
text
@d1 1
a1 1
/* $OpenBSD$	*/
d5 5
d34 1
a34 1
_glibtop_bsd_get_fsusage_read_write(glibtop *server,
d39 1
a39 1
_glibtop_bsd_get_fsusage_read_write(glibtop *server,
@


1.2
log
@start cleaning the ifdef-hell
@
text
@d1 2
@


1.1
log
@the openbsd code has diverged too much from the freebsd and generic bsd code
to be easily maintainable. so instead move it to files/ for now untill it
gets incorporated upstream.

discussed with aja@@
@
text
@a2 2
/* Although FreeBSD ships with statvfs it seems incomplete, so prefer statfs */
#if defined (__FreeBSD__) || defined (__FreeBSD_kernel__) || defined (__OpenBSD__)
a4 1
#endif
@

