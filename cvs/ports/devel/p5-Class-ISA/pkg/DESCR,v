head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.26
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.24
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.20
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.22
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.18
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.16
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.12
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.10
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.8
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	sthen_20101117:1.1.1.3
	sthen:1.1.1
	simon_20071014:1.1.1.2
	simon:1.1.1
	espie:1.1.1.1
	catalyst:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2010.11.17.22.45.40;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.13.10.44.18;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2006.11.07.11.22.24;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.07.11.22.24;	author espie;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.10.14.09.09.26;	author simon;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2010.11.17.22.19.28;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@adding files manually to fix my botched import, port was already in the attic.

Import ports/devel/p5-Class-ISA. This is currently present in core perl,
but triggers a warning "Class::ISA will be removed from the Perl core
distribution in the next major release. Please install it from CPAN.
It is being used at [...]".

ok jasper@@
@
text
@Suppose you have a class (like Food::Fish::Fishstick) that is derived,
via its @@ISA, from one or more superclasses (as Food::Fish::Fishstick is
from Food::Fish, Life::Fungus, and Chemicals), and some of those
superclasses may themselves each be derived, via its @@ISA, from one or
more superclasses (as above).

When, then, you call a method in that class ($fishstick->calories), Perl
first searches there for that method, but if it's not there, it goes
searching in its superclasses, and so on, in a depth-first (or maybe
"height-first" is the word) search. In the above example, it'd first
look in Food::Fish, then Food, then Matter, then Life::Fungus, then
Life, then Chemicals.

This library, Class::ISA, provides functions that return that list --
the list (in order) of names of classes Perl would search to find a
method, with no duplicates.
@


1.2
log
@zap stuff that shouldn't be there
@
text
@d7 10
a16 2
Class::ISA provides functions that return the ordered list of names 
of classes Perl would search to find a method, with no duplicates.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@simple glue that's needed for catalyst email support
@
text
@@


1.1.1.2
log
@import p5-Class-ISA

Class::ISA provides functions that return the list (in order) of names
of classes Perl would search to find a method, with no duplicates.

missing dependency for p5-Class-Handle, noticed by sturm@@
@
text
@d1 7
a7 1
Class::ISA provides functions that return the list (in order) of names
@


1.1.1.3
log
@Import ports/devel/p5-Class-ISA. This is currently present in core perl,
but triggers a warning "Class::ISA will be removed from the Perl core
distribution in the next major release. Please install it from CPAN.
It is being used at [...]".

ok jasper@@
@
text
@d1 2
a2 16
Suppose you have a class (like Food::Fish::Fishstick) that is derived,
via its @@ISA, from one or more superclasses (as Food::Fish::Fishstick is
from Food::Fish, Life::Fungus, and Chemicals), and some of those
superclasses may themselves each be derived, via its @@ISA, from one or
more superclasses (as above).

When, then, you call a method in that class ($fishstick->calories), Perl
first searches there for that method, but if it's not there, it goes
searching in its superclasses, and so on, in a depth-first (or maybe
"height-first" is the word) search. In the above example, it'd first
look in Food::Fish, then Food, then Matter, then Life::Fungus, then
Life, then Chemicals.

This library, Class::ISA, provides functions that return that list --
the list (in order) of names of classes Perl would search to find a
method, with no duplicates.
@


