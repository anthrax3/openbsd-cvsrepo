head	1.9;
access;
symbols
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.16
	OPENBSD_5_0:1.8.0.14
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.12
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.10
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.8
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.6
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.4
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.7.0.6
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.4
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2012.05.03.06.51.07;	author ajacoutot;	state dead;
branches;
next	1.8;

1.8
date	2008.07.24.09.37.26;	author jakemsr;	state Exp;
branches;
next	1.7;

1.7
date	2007.02.03.17.07.07;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2006.12.26.13.48.36;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.16.11.08.26;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.03.22.29.48;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.01.09.31.20;	author hshoexer;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.24.22.54.03;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.28.14.14.15;	author espie;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update to libdvdread-4.2.0.

from Brad, ok sthen@@
@
text
@$OpenBSD: patch-dvdread_dvd_input_c,v 1.8 2008/07/24 09:37:26 jakemsr Exp $
--- dvdread/dvd_input.c.orig	Mon Sep 19 06:43:08 2005
+++ dvdread/dvd_input.c	Thu Jul 17 23:43:16 2008
@@@@ -45,30 +45,30 @@@@ int         (*dvdinput_read)  (dvd_input_t, void *, in
 char *      (*dvdinput_error) (dvd_input_t);
 
 #ifdef HAVE_DVDCSS_DVDCSS_H
-/* linking to libdvdcss */
-#include <dvdcss/dvdcss.h>
-#define DVDcss_open(a) dvdcss_open((char*)(a))
-#define DVDcss_close   dvdcss_close
-#define DVDcss_seek    dvdcss_seek
-#define DVDcss_title   dvdcss_title
-#define DVDcss_read    dvdcss_read
-#define DVDcss_error   dvdcss_error
+/* linking to dvdcss */
+#include <libdvd/libdvd.h>
+#define DVD_open(a) libdvd_open((char*)(a))
+#define DVD_close   libdvd_close
+#define DVD_seek    libdvd_seek
+#define DVD_title   libdvd_title
+#define DVD_read    libdvd_read
+#define DVD_error   libdvd_error
 #else
-/* dlopening libdvdcss */
+/* dlopening dvdcss */
 #include <dlfcn.h>
-typedef struct dvdcss_s *dvdcss_handle;
-static dvdcss_handle (*DVDcss_open)  (const char *);
-static int           (*DVDcss_close) (dvdcss_handle);
-static int           (*DVDcss_seek)  (dvdcss_handle, int, int);
-static int           (*DVDcss_title) (dvdcss_handle, int); 
-static int           (*DVDcss_read)  (dvdcss_handle, void *, int, int);
-static char *        (*DVDcss_error) (dvdcss_handle);
+typedef struct libdvd_s *libdvd_handle;
+static libdvd_handle (*DVD_open)  (const char *);
+static int           (*DVD_close) (libdvd_handle);
+static int           (*DVD_seek)  (libdvd_handle, int, int);
+static int           (*DVD_title) (libdvd_handle, int); 
+static int           (*DVD_read)  (libdvd_handle, void *, int, int);
+static char *        (*DVD_error) (libdvd_handle);
 #endif
 
 /* The DVDinput handle, add stuff here for new input methods. */
 struct dvd_input_s {
-  /* libdvdcss handle */
-  dvdcss_handle dvdcss;
+  /* dvdcss handle */
+  libdvd_handle libdvd;
   
   /* dummy file input */
   int fd;
@@@@ -78,7 +78,7 @@@@ struct dvd_input_s {
 /**
  * initialize and open a DVD device or file.
  */
-static dvd_input_t css_open(const char *target)
+static dvd_input_t libdvd_open(const char *target)
 {
   dvd_input_t dev;
     
@@@@ -89,9 +89,9 @@@@ static dvd_input_t css_open(const char *target)
     return NULL;
   }
   
-  /* Really open it with libdvdcss */
-  dev->dvdcss = DVDcss_open(target);
-  if(dev->dvdcss == 0) {
+  /* Really open it with dvdcss */
+  dev->libdvd = DVD_open(target);
+  if(dev->libdvd == 0) {
     free(dev);
     dev = NULL;
   }
@@@@ -102,44 +102,44 @@@@ static dvd_input_t css_open(const char *target)
 /**
  * return the last error message
  */
-static char *css_error(dvd_input_t dev)
+static char *libdvd_error(dvd_input_t dev)
 {
-  return DVDcss_error(dev->dvdcss);
+  return DVD_error(dev->libdvd);
 }
 
 /**
  * seek into the device.
  */
-static int css_seek(dvd_input_t dev, int blocks)
+static int libdvd_seek(dvd_input_t dev, int blocks)
 {
   /* DVDINPUT_NOFLAGS should match the DVDCSS_NOFLAGS value. */
-  return DVDcss_seek(dev->dvdcss, blocks, DVDINPUT_NOFLAGS);
+  return DVD_seek(dev->libdvd, blocks, DVDINPUT_NOFLAGS);
 }
 
 /**
  * set the block for the begining of a new title (key).
  */
-static int css_title(dvd_input_t dev, int block)
+static int libdvd_title(dvd_input_t dev, int block)
 {
-  return DVDcss_title(dev->dvdcss, block);
+  return DVD_title(dev->libdvd, block);
 }
 
 /**
  * read data from the device.
  */
-static int css_read(dvd_input_t dev, void *buffer, int blocks, int flags)
+static int libdvd_read(dvd_input_t dev, void *buffer, int blocks, int flags)
 {
-  return DVDcss_read(dev->dvdcss, buffer, blocks, flags);
+  return DVD_read(dev->libdvd, buffer, blocks, flags);
 }
 
 /**
  * close the DVD device and clean up the library.
  */
-static int css_close(dvd_input_t dev)
+static int libdvd_close(dvd_input_t dev)
 {
   int ret;
 
-  ret = DVDcss_close(dev->dvdcss);
+  ret = DVD_close(dev->libdvd);
 
   if(ret < 0)
     return ret;
@@@@ -280,8 +280,8 @@@@ static int file_close(dvd_input_t dev)
 }
 
 
-static void *dvdcss_library = NULL;
-static int dvdcss_library_init = 0;
+static void *libdvd_library = NULL;
+static int libdvd_library_init = 0;
 
 /**
  * Free any objects allocated by dvdinput_setup.
@@@@ -294,28 +294,36 @@@@ void dvdinput_free(void)
   /* linked statically, nothing to free */
   return;
 #else
-  if(dvdcss_library) {
-    dlclose(dvdcss_library);
-    dvdcss_library = NULL;
+  if(libdvd_library) {
+    dlclose(libdvd_library);
+    libdvd_library = NULL;
   }
-  dvdcss_library_init = 0;
+  libdvd_library_init = 0;
   return;
 #endif
 }
 
 
+#if defined(DEBUG_CSS)
+#define LIBDVDNAME	"libdvdcss.so.2"
+#define LIBDVD_		"dvdcss_"
+#else
+#define LIBDVDNAME	"libdvd.so.0"
+#define LIBDVD_		"libdvd_"
+#endif
+
 /**
- * Setup read functions with either libdvdcss or minimal DVD access.
+ * Setup read functions with either libdvd or minimal DVD access.
  */
 int dvdinput_setup(void)
 {
-  char **dvdcss_version = NULL;
+  char **libdvd_version = NULL;
   int verbose;
 
   /* dlopening libdvdcss */
-  if(dvdcss_library_init) {
+  if(libdvd_library_init) {
     /* libdvdcss is already dlopened, function ptrs set */
-    if(dvdcss_library) {
+    if(libdvd_library) {
       return 1; /* css available */
     } else {
       return 0; /* css not available */
@@@@ -326,59 +334,57 @@@@ int dvdinput_setup(void)
   
 #ifdef HAVE_DVDCSS_DVDCSS_H
   /* linking to libdvdcss */
-  dvdcss_library = &dvdcss_library;  /* Give it some value != NULL */
+  libdvd_library = &libdvd_library;  /* Give it some value != NULL */
   /* the DVDcss_* functions have been #defined at the top */
-  dvdcss_version = &dvdcss_interface_2;
+  libdvd_version = &libdvd_interface_2;
 
 #else
 
-  dvdcss_library = dlopen("libdvdcss.so.2", RTLD_LAZY);
+  libdvd_library = dlopen(LIBDVDNAME, RTLD_LAZY);
 
-  if(dvdcss_library != NULL) {
+  if(libdvd_library != NULL) {
 #if defined(__OpenBSD__) && !defined(__ELF__)
 #define U_S "_"
 #else
 #define U_S
 #endif
-    DVDcss_open = (dvdcss_handle (*)(const char*))
-      dlsym(dvdcss_library, U_S "dvdcss_open");
-    DVDcss_close = (int (*)(dvdcss_handle))
-      dlsym(dvdcss_library, U_S "dvdcss_close");
-    DVDcss_title = (int (*)(dvdcss_handle, int))
-      dlsym(dvdcss_library, U_S "dvdcss_title");
-    DVDcss_seek = (int (*)(dvdcss_handle, int, int))
-      dlsym(dvdcss_library, U_S "dvdcss_seek");
-    DVDcss_read = (int (*)(dvdcss_handle, void*, int, int))
-      dlsym(dvdcss_library, U_S "dvdcss_read");
-    DVDcss_error = (char* (*)(dvdcss_handle))
-      dlsym(dvdcss_library, U_S "dvdcss_error");
+    DVD_open = (libdvd_handle (*)(const char*))
+      dlsym(libdvd_library, U_S LIBDVD_"open");
+    DVD_close = (int (*)(libdvd_handle))
+      dlsym(libdvd_library, U_S LIBDVD_"close");
+    DVD_title = (int (*)(libdvd_handle, int))
+      dlsym(libdvd_library, U_S LIBDVD_"title");
+    DVD_seek = (int (*)(libdvd_handle, int, int))
+      dlsym(libdvd_library, U_S LIBDVD_"seek");
+    DVD_read = (int (*)(libdvd_handle, void*, int, int))
+      dlsym(libdvd_library, U_S LIBDVD_"read");
+    DVD_error = (char* (*)(libdvd_handle))
+      dlsym(libdvd_library, U_S LIBDVD_"error");
     
-    dvdcss_version = (char **)dlsym(dvdcss_library, U_S "dvdcss_interface_2");
+    libdvd_version = (char **)dlsym(libdvd_library, U_S LIBDVD_"interface_2");
 
-    if(dlsym(dvdcss_library, U_S "dvdcss_crack")) {
+    if(dlsym(libdvd_library, U_S "dvdcss_crack")) {
       if(verbose >= 0) {
         fprintf(stderr, 
-                "libdvdread: Old (pre-0.0.2) version of libdvdcss found.\n"
-                "libdvdread: You should get the latest version from "
-                "http://www.videolan.org/\n" );
+                "libdvdread: Old (pre-0.0.2) version of libdvdcss found.\n");
       }
-      dlclose(dvdcss_library);
-      dvdcss_library = NULL;
-    } else if(!DVDcss_open  || !DVDcss_close || !DVDcss_title || !DVDcss_seek
-              || !DVDcss_read || !DVDcss_error || !dvdcss_version) {
+      dlclose(libdvd_library);
+      libdvd_library = NULL;
+    } else if(!DVD_open  || !DVD_close || !DVD_title || !DVD_seek
+              || !DVD_read || !DVD_error || !libdvd_version) {
       if(verbose >= 0) {
-        fprintf(stderr,  "libdvdread: Missing symbols in libdvdcss.so.2, "
-                "this shouldn't happen !\n");
+        fprintf(stderr,  "libdvdread: Missing symbols in %s, "
+                "this shouldn't happen !\n", LIBDVDNAME);
       }
-      dlclose(dvdcss_library);
-      dvdcss_library = NULL;
+      dlclose(libdvd_library);
+      libdvd_library = NULL;
     }
   }
 #endif /* HAVE_DVDCSS_DVDCSS_H */
 
-  dvdcss_library_init = 1;
+  libdvd_library_init = 1;
   
-  if(dvdcss_library) {
+  if(libdvd_library) {
     /*
       char *psz_method = getenv( "DVDCSS_METHOD" );
       char *psz_verbose = getenv( "DVDCSS_VERBOSE" );
@@@@ -386,16 +392,16 @@@@ int dvdinput_setup(void)
       fprintf(stderr, "DVDCSS_VERBOSE %s\n", psz_verbose);
     */
     if(verbose >= 1) {
-      fprintf(stderr, "libdvdread: Using libdvdcss version %s for DVD access\n",
-              *dvdcss_version);
+      fprintf(stderr, "libdvdread: Using %s version %s for DVD access\n",
+              LIBDVDNAME, *libdvd_version);
     }
     /* libdvdcss wrapper functions */
-    dvdinput_open  = css_open;
-    dvdinput_close = css_close;
-    dvdinput_seek  = css_seek;
-    dvdinput_title = css_title;
-    dvdinput_read  = css_read;
-    dvdinput_error = css_error;
+    dvdinput_open  = libdvd_open;
+    dvdinput_close = libdvd_close;
+    dvdinput_seek  = libdvd_seek;
+    dvdinput_title = libdvd_title;
+    dvdinput_read  = libdvd_read;
+    dvdinput_error = libdvd_error;
     return 1;
     
   } else {
@


1.8
log
@
* export the UDFFindFile function, and so:
- bump shared lib minor and
- bump pkgname

this will make future libdvdnav updates easier.

ok espie
@
text
@d1 1
a1 1
$OpenBSD: patch-dvdread_dvd_input_c,v 1.7 2007/02/03 17:07:07 espie Exp $
@


1.7
log
@debugging flavor that uses the old libdvdcss, to compare...
@
text
@d1 4
a4 4
$OpenBSD: patch-dvdread_dvd_input_c,v 1.6 2006/12/26 13:48:36 espie Exp $
--- dvdread/dvd_input.c.orig	Mon Sep 19 15:43:08 2005
+++ dvdread/dvd_input.c	Tue Dec 26 14:54:04 2006
@@@@ -45,30 +45,30 @@@@ int         (*dvdinput_read)  (dvd_input
d62 1
a62 1
@@@@ -89,9 +89,9 @@@@ static dvd_input_t css_open(const char *
d75 1
a75 1
@@@@ -102,44 +102,44 @@@@ static dvd_input_t css_open(const char *
@


1.6
log
@rearrange patch a bit.
@
text
@d1 1
a1 1
$OpenBSD: patch-dvdread_dvd_input_c,v 1.5 2006/02/16 11:08:26 espie Exp $
d3 1
a3 1
+++ dvdread/dvd_input.c	Tue Dec 26 14:44:27 2006
d141 1
a141 1
@@@@ -294,28 +294,30 @@@@ void dvdinput_free(void)
d159 4
d165 2
d186 1
a186 1
@@@@ -326,59 +328,57 @@@@ int dvdinput_setup(void)
d275 1
a275 1
@@@@ -386,16 +386,16 @@@@ int dvdinput_setup(void)
@


1.5
log
@update to v 0.9.5, lots of error condition fixes, better types.
@
text
@d1 1
a1 1
$OpenBSD: patch-dvdread_dvd_input_c,v 1.4 2005/11/03 22:29:48 kurt Exp $
d3 1
a3 1
+++ dvdread/dvd_input.c	Thu Feb 16 12:01:14 2006
d141 1
a141 1
@@@@ -294,28 +294,28 @@@@ void dvdinput_free(void)
d159 2
d180 1
a180 1
@@@@ -326,59 +326,57 @@@@ int dvdinput_setup(void)
d193 1
a193 1
+  libdvd_library = dlopen("libdvd.so.0", RTLD_LAZY);
d215 1
a215 1
+      dlsym(libdvd_library, U_S "libdvd_open");
d217 1
a217 1
+      dlsym(libdvd_library, U_S "libdvd_close");
d219 1
a219 1
+      dlsym(libdvd_library, U_S "libdvd_title");
d221 1
a221 1
+      dlsym(libdvd_library, U_S "libdvd_seek");
d223 1
a223 1
+      dlsym(libdvd_library, U_S "libdvd_read");
d225 1
a225 1
+      dlsym(libdvd_library, U_S "libdvd_error");
d228 1
a228 1
+    libdvd_version = (char **)dlsym(libdvd_library, U_S "libdvd_interface_2");
d237 1
a237 1
+                "libdvdread: Old (pre-0.0.2) version of libdvd found.\n");
d249 3
a251 2
+        fprintf(stderr,  "libdvdread: Missing symbols in libdvd.so.0, "
                 "this shouldn't happen !\n");
d269 1
a269 1
@@@@ -386,16 +384,16 @@@@ int dvdinput_setup(void)
d275 2
a276 2
+      fprintf(stderr, "libdvdread: Using libdvd version %s for DVD access\n",
+              *libdvd_version);
@


1.4
log
@remove old ld.so findlibrary work-around. looks sane espie@@
@
text
@d1 4
a4 4
$OpenBSD: patch-dvdread_dvd_input_c,v 1.3 2005/05/01 09:31:20 hshoexer Exp $
--- dvdread/dvd_input.c.orig	Thu Feb 13 16:48:24 2003
+++ dvdread/dvd_input.c	Thu Nov  3 15:03:34 2005
@@@@ -36,30 +36,30 @@@@ int         (*dvdinput_read)  (dvd_input
d37 1
a37 1
+static int           (*DVD_close) (libdvs_handle);
d53 1
a53 1
@@@@ -69,7 +69,7 @@@@ struct dvd_input_s {
d62 1
a62 1
@@@@ -80,10 +80,10 @@@@ static dvd_input_t css_open(const char *
a68 1
-    fprintf(stderr, "libdvdread: Could not open %s with libdvdcss.\n", target);
a71 1
+    fprintf(stderr, "libdvdread: Could not open %s with libdvd.\n", target);
d73 1
a73 1
     return NULL;
d75 1
a75 1
@@@@ -94,44 +94,44 @@@@ static dvd_input_t css_open(const char *
d130 27
a156 1
@@@@ -259,83 +259,83 @@@@ static int file_close(dvd_input_t dev)
a164 1
-  void *dvdcss_library = NULL;
a165 1
+  void *libdvd_library = NULL;
d167 1
d169 11
d181 1
a181 1
-  /* linking to libdvdcss */
d183 2
a184 1
-  /* the DVDcss_* functions have been #defined at the top */
a185 3
+  /* linking to dvdcss */
+  libdvd_library = &libdvd_library;  /* Give it some value != NULL */
+  /* the DVD_* functions have been #defined at the top */
d189 1
a189 1
-  /* dlopening libdvdcss */
a190 1
+  /* dlopening dvdcss */
d192 1
a192 1
   
d229 8
a236 6
+    if(dlsym(libdvd_library, U_S "libdvd_crack")) {
       fprintf(stderr, 
-	      "libdvdread: Old (pre-0.0.2) version of libdvdcss found.\n"
+	      "libdvdread: Old (pre-0.0.2) version of libdvd found.\n"
 	      "libdvdread: You should get the latest version from "
 	      "http://www.videolan.org/\n" );
d240 1
a240 2
-	      || !DVDcss_read || !DVDcss_error || !dvdcss_version) {
-      fprintf(stderr,  "libdvdread: Missing symbols in libdvdcss.so.2, "
d244 6
a249 3
+	      || !DVD_read || !DVD_error || !libdvd_version) {
+      fprintf(stderr,  "libdvdread: Missing symbols in libdvd.so.0, "
 	      "this shouldn't happen !\n");
d251 1
d253 1
d257 3
d261 2
a262 2
-  if(dvdcss_library != NULL) {
+  if(libdvd_library != NULL) {
d264 4
a267 4
     char *psz_method = getenv( "DVDCSS_METHOD" );
     char *psz_verbose = getenv( "DVDCSS_VERBOSE" );
     fprintf(stderr, "DVDCSS_METHOD %s\n", psz_method);
     fprintf(stderr, "DVDCSS_VERBOSE %s\n", psz_verbose);
d269 7
a275 6
-    fprintf(stderr, "libdvdread: Using libdvdcss version %s for DVD access\n",
-	    *dvdcss_version);
+    fprintf(stderr, "libdvdread: Using libdvd version %s for DVD access\n",
+	    *libdvd_version);
     
-    /* libdvdcss wrapper functions */
a281 1
+    /* dvdcss wrapper functions */
a290 7
     fprintf(stderr, "libdvdread: Encrypted DVD support unavailable.\n");
 
-    /* libdvdcss replacement functions */
+    /* dvdcss replacement functions */
     dvdinput_open  = file_open;
     dvdinput_close = file_close;
     dvdinput_seek  = file_seek;
@


1.3
log
@patch to use acss.  Crank package name to patchlevel 0.

ok espie@@
@
text
@d1 3
a3 3
$OpenBSD: patch-dvdread_dvd_input_c,v 1.2 2003/02/24 22:54:03 espie Exp $
--- dvdread/dvd_input.c.orig	Thu Feb 13 22:48:24 2003
+++ dvdread/dvd_input.c	Fri Mar 25 12:20:54 2005
d132 2
a133 3
@@@@ -257,85 +257,115 @@@@ static int file_close(dvd_input_t dev)
   return 0;
 }
a134 27
+#ifdef __OpenBSD__
+#include <dirent.h>
+#include <string.h>
+static void *findlibrary(char *base)
+{
+	DIR *d;
+	struct dirent *de;
+	size_t len;
+	void *lib = NULL;
 
+	len = strlen(base);
+
+	d = opendir(".");
+	if (!d)
+		return lib;
+	while ((de = readdir(d)) != NULL) {
+	    if (strncmp(de->d_name, base, len) != 0)
+		continue;
+	    lib = dlopen(de->d_name, RTLD_LAZY);
+	    if (lib)
+	    	break;
+	}
+	closedir(d);
+	return lib;
+}
+#endif
+
a160 4
+#if defined(__OpenBSD__)
+  if (!libdvd_library)
+  	libdvd_library = findlibrary("libdvd.so.0.");
+#endif
@


1.2
log
@libdvdread 0.9.4, bookmark support.
@
text
@d1 1
a1 1
$OpenBSD: patch-dvdread_dvd_input_c,v 1.1 2002/05/28 14:14:15 espie Exp $
d3 130
a132 2
+++ dvdread/dvd_input.c	Mon Feb 24 23:37:30 2003
@@@@ -257,6 +257,32 @@@@ static int file_close(dvd_input_t dev)
d145 1
a145 1
+
d162 21
a183 3
 /**
  * Setup read functions with either libdvdcss or minimal DVD access.
@@@@ -275,6 +301,10 @@@@ int dvdinput_setup(void)
d185 4
a188 2
   /* dlopening libdvdcss */
   dvdcss_library = dlopen("libdvdcss.so.2", RTLD_LAZY);
d190 2
a191 2
+  if (!dvdcss_library)
+  	dvdcss_library = findlibrary("libdvdcss.so.2.");
d194 2
a195 1
   if(dvdcss_library != NULL) {
d197 93
@


1.1
log
@Bump to new releases.
libdvdread can now use an official libdvdcss.
@
text
@d1 4
a4 4
$OpenBSD$
--- dvdread/dvd_input.c.orig	Thu May  9 23:32:46 2002
+++ dvdread/dvd_input.c	Tue May 28 16:05:10 2002
@@@@ -237,6 +237,32 @@@@ static int file_close(dvd_input_t dev)
d37 3
a39 3
@@@@ -247,6 +273,10 @@@@ int DVDInputSetup(void)
   char **dvdcss_version = NULL;
   
@

