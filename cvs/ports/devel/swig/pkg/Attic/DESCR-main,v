head	1.2;
access;
symbols
	OPENBSD_4_9:1.1.0.18
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.16
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.14
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.12
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.10
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.8
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.6
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.4
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.06.09.07.34.33;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2006.12.03.14.14.41;	author kili;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- set license marker
- remove double '=' in CONFIGURE_ARGS
- remove multi packages left overs, this ports hasn't been multipackaged in 5 years.
- set MODPY_RUNDEP=No accordingly.
- reset maintainer per kevlo's request

ok kevlo@@
@
text
@SWIG is a tool for automatically generating the wrapper code needed
to link collections of functions written in C/C++ with interpreted
scripting languages.    Currently, SWIG supports :

	- Guile
	- Java
	- Mzscheme
	- PHP
	- Perl
	- Python
	- Ruby
	- Tcl

Using SWIG, it is possible to greatly simplify interface development
and to put interesting interfaces on existing applications with
little effort.    
@


1.1
log
@
Don't lib_depend on guile. Same for run_depend and python.
Some hints from steven@@ and espie@@.
ok, kevlo@@
@
text
@@

