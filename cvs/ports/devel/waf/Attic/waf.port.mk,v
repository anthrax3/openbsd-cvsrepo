head	1.6;
access;
symbols
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.8
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	landry_20080923:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2014.09.16.14.25.02;	author jasper;	state dead;
branches;
next	1.5;
commitid	lC1ClRsHdrDQN0GG;

1.5
date	2013.07.02.08.36.16;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.22.13.05.57;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2010.11.15.19.46.10;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.26.12.21.47;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.23.19.55.02;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.23.19.55.02;	author landry;	state Exp;
branches;
next	;


desc
@@


1.6
log
@if autoconf and scons had a child, it would've been 'waf'.

'nuf said.

ok aja@@ landry@@
@
text
@# $OpenBSD: waf.port.mk,v 1.5 2013/07/02 08:36:16 espie Exp $

MODULES +=		lang/python
MODPY_RUNDEP =		no
BUILD_DEPENDS +=	devel/waf
MODWAF_BIN =		${LOCALBASE}/bin/waf
MAKE_ENV +=		PYTHON=${MODPY_BIN} PYTHON_VERSION=${MODPY_VERSION}
_MODWAF_CMD =		cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${MODWAF_BIN}
_MODWAF_CONFIGURE_CMD =	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${CONFIGURE_ENV} ${MODWAF_BIN}
MODWAF_VERBOSE ?=	Yes

.if ${MODWAF_VERBOSE:L} == "yes"
_MODWAF_VERBOSE_FLAG =	-v
.endif

.if empty(CONFIGURE_STYLE)
CONFIGURE_STYLE = waf
.endif

MODWAF_configure = ${_MODWAF_CONFIGURE_CMD} configure ${_MODWAF_VERBOSE_FLAG} ${CONFIGURE_ARGS}
MODWAF_BUILD_TARGET = ${_MODWAF_CMD} build ${_MODWAF_VERBOSE_FLAG}
MODWAF_INSTALL_TARGET = ${_MODWAF_CMD} install ${_MODWAF_VERBOSE_FLAG} --destdir=${WRKINST}

.if !target(do-build)
do-build:
	@@${MODWAF_BUILD_TARGET}
.endif

.if !target(do-install)
do-install:
	@@${MODWAF_INSTALL_TARGET}
.endif

MODWAF-post-install = rm -Rf ${WRKSRC}/_build_
@


1.5
log
@convert to using intermediate *TARGET, as discussed with a few people.
(the waf version actually works, contrary to my former patch, as
CONFIGURE_STYLE must be set before modules)
@
text
@d1 1
a1 1
# $OpenBSD: waf.port.mk,v 1.4 2011/09/22 13:05:57 landry Exp $
@


1.4
log
@Add MODWAF_VERBOSE defaulting to Yes, and if set pass -v to the waf
commands through _MODWAF_VERBOSE_FLAG. Allows to actually show build
lines like in any "sane" build system. something i should have done
ages ago.
@
text
@d1 1
a1 1
# $OpenBSD: waf.port.mk,v 1.3 2010/11/15 19:46:10 espie Exp $
d8 2
a9 2
_MODWAF_CMD =		@@cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${MODWAF_BIN}
_MODWAF_CONFIGURE_CMD =	@@cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${CONFIGURE_ENV} ${MODWAF_BIN}
d16 7
a22 2
do-configure:
	${_MODWAF_CONFIGURE_CMD} configure ${_MODWAF_VERBOSE_FLAG} ${CONFIGURE_ARGS}
d26 1
a26 1
	${_MODWAF_CMD} build ${_MODWAF_VERBOSE_FLAG}
d31 1
a31 1
	${_MODWAF_CMD} install ${_MODWAF_VERBOSE_FLAG} --destdir=${WRKINST}
d34 1
a34 4
.if !target(post-install)
post-install:
	@@rm -Rf ${WRKSRC}/_build_
.endif
@


1.3
log
@move depends to new style
@
text
@d1 1
a1 1
# $OpenBSD: waf.port.mk,v 1.2 2008/10/26 12:21:47 landry Exp $
d10 5
d17 1
a17 1
	${_MODWAF_CONFIGURE_CMD} configure ${CONFIGURE_ARGS}
d21 1
a21 1
	${_MODWAF_CMD} build
d26 1
a26 1
	${_MODWAF_CMD} install --destdir=${WRKINST}
@


1.2
log
@Fix waf MODULE, honour CONFIGURE_ENV and CONFIGURE_ARGS, clean up some
root-owned directories in ${WRKSRC} after fake. Nothing in tree used it,
hence no PKGNAME bump.

ok wcmaier@@, discussed a bit with ajacoutot@@ too
@
text
@d1 1
a1 1
# $OpenBSD: waf.port.mk,v 1.1.1.1 2008/09/23 19:55:02 landry Exp $
d5 1
a5 1
BUILD_DEPENDS +=	::devel/waf
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d9 1
d12 1
a12 1
	${_MODWAF_CMD} configure
d22 5
@


1.1.1.1
log
@Import waf 1.4.4.
Waf is a Python-based framework for configuring, compiling and
installing applications. It is a replacement for other tools such as
Autotools, Scons, CMake or Ant.
The port provides a devel/waf MODULE for use by third-party ports.

with tweaks, lots of python-fu and ok wcmaier@@, ok jasper@@
@
text
@@
