head	1.9;
access;
symbols
	OPENBSD_5_5:1.8.0.2
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	jasper_20090924:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2014.03.26.08.29.11;	author jasper;	state dead;
branches;
next	1.8;

1.8
date	2013.12.14.09.16.49;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2013.09.26.06.27.49;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2013.03.28.19.32.11;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2012.03.29.06.29.08;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.21.13.59.21;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2011.04.07.09.57.18;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2009.12.22.15.19.52;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2009.09.24.20.08.09;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.09.24.20.08.09;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.9
log
@update to gobject-introspection-1.40.0

ok aja@@
@
text
@$OpenBSD: patch-giscanner_dumper_py,v 1.8 2013/12/14 09:16:49 ajacoutot Exp $

From d355a386f8f03bdfacf6b48a8fccb0a4218cc4fa Mon Sep 17 00:00:00 2001
From: Ryan Lortie <desrt@@desrt.ca>
Date: Sun, 08 Dec 2013 17:01:43 +0000
Subject: dumper: use 'cc' as the default C compiler

--- giscanner/dumper.py.orig	Tue Sep 24 15:41:09 2013
+++ giscanner/dumper.py	Sat Dec 14 09:28:37 2013
@@@@ -82,7 +82,7 @@@@ class DumpCompiler(object):
         self._get_type_functions = get_type_functions
         self._error_quark_functions = error_quark_functions
 
-        self._compiler_cmd = os.environ.get('CC', 'gcc')
+        self._compiler_cmd = os.environ.get('CC', 'cc')
         self._linker_cmd = os.environ.get('CC', self._compiler_cmd)
         self._pkgconfig_cmd = os.environ.get('PKG_CONFIG', 'pkg-config')
         self._pkgconfig_msvc_flags = ''
@


1.8
log
@Merge some patches from upstream and remove some local modifications:
- if CC is not set, fall back to cc
- do not forcibly add ${X11BASE}/include nor ${LOCALBASE}/include, now
the scanner is supposed to properly pass CFLAGS
- forcing -pthread should not be needed anymore

Tested with a handful of ports that were known to need these tweaks.
Any regression, please let me know directly.

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-giscanner_dumper_py,v 1.7 2013/09/26 06:27:49 jasper Exp $
@


1.7
log
@- update to gobject-introspection-1.38.0
@
text
@d1 7
a7 1
$OpenBSD: patch-giscanner_dumper_py,v 1.6 2013/03/28 19:32:11 jasper Exp $
d9 1
a9 1
+++ giscanner/dumper.py	Wed Sep 25 09:24:11 2013
d15 1
a15 1
+        self._compiler_cmd = os.environ.get('CC', '${CC}')
a18 9
@@@@ -205,7 +205,7 @@@@ class DumpCompiler(object):
         args = self._compiler_cmd.split()
         # Do not add -Wall when using init code as we do not include any
         # header of the library being introspected
-        if self._compiler_cmd == 'gcc' and not self._options.init_sections:
+        if self._compiler_cmd == 'cc' and not self._options.init_sections:
             args.append('-Wall')
         # The Microsoft compiler uses different option flags for
         # silencing warnings on deprecated function usage
@


1.6
log
@- update to gobject-introspection 1.36.0

ok aja@@
@
text
@d1 3
a3 3
$OpenBSD: patch-giscanner_dumper_py,v 1.5 2012/03/29 06:29:08 ajacoutot Exp $
--- giscanner/dumper.py.orig	Sat Feb 23 11:40:08 2013
+++ giscanner/dumper.py	Tue Mar 26 17:12:03 2013
d13 1
a13 1
@@@@ -204,7 +204,7 @@@@ class DumpCompiler(object):
@


1.5
log
@Update to gobject-introspection-1.31.22.
@
text
@d1 4
a4 4
$OpenBSD$
--- giscanner/dumper.py.orig	Tue Nov 29 19:57:22 2011
+++ giscanner/dumper.py	Mon Mar 26 12:06:27 2012
@@@@ -80,7 +80,7 @@@@ class DumpCompiler(object):
d12 2
a13 2
 
@@@@ -186,7 +186,7 @@@@ class DumpCompiler(object):
d20 2
a21 2
         pkgconfig_flags = self._run_pkgconfig('--cflags')
         args.extend(pkgconfig_flags)
@


1.4
log
@- update to 1.30.0

there is some known fallout, which we're working on.
@
text
@d1 4
a4 4
$OpenBSD: patch-giscanner_dumper_py,v 1.3 2011/04/07 09:57:18 jasper Exp $
--- giscanner/dumper.py.orig	Tue Sep 20 21:31:44 2011
+++ giscanner/dumper.py	Tue Sep 20 23:53:34 2011
@@@@ -81,7 +81,7 @@@@ class DumpCompiler(object):
d13 9
@


1.3
log
@- don't override ${CC} with gcc.
@
text
@d1 4
a4 5
$OpenBSD$
--- giscanner/dumper.py.orig	Thu Apr  7 11:48:35 2011
+++ giscanner/dumper.py	Thu Apr  7 11:51:54 2011
@@@@ -80,7 +80,7 @@@@ class DumpCompiler(object):
         self._options = options
d6 1
@


1.2
log
@Update to gobject-introspection-0.6.7.

ok jasper@@
@
text
@d1 6
a6 20
$OpenBSD: patch-giscanner_dumper_py,v 1.1 2009/09/24 20:08:09 jasper Exp $

Make g-ir-scanner 64-bit enable. 
GNOME Bugzilla #593639.

--- giscanner/dumper.py.orig	Thu Sep 24 20:01:20 2009
+++ giscanner/dumper.py	Thu Sep 24 20:03:12 2009
@@@@ -155,6 +155,10 @@@@ class DumpCompiler(object):
             args.append('-I' + os.path.join(self._uninst_srcdir,
                                                'girepository'))
         args.extend(pkgconfig_flags)
+        cflags = os.environ.get('CFLAGS')
+        if (cflags):
+            for iflag in cflags.split():
+                args.append(iflag)
         for include in self._options.cpp_includes:
             args.append('-I' + include)
         args.extend(['-c', '-o', output])
@@@@ -175,6 +179,11 @@@@ class DumpCompiler(object):
             args.append('--silent')
d8 4
a11 6
         args.extend([self._linker_cmd, '-o', output])
+
+        cflags = os.environ.get('CFLAGS')
+        if (cflags):
+            for iflag in cflags.split():
+                args.append(iflag)
a12 2
         # Make sure to list the library to be introspected first since it's
         # likely to be uninstalled yet and we want the uninstalled RPATHs have
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import gobject-introspection 0.6.5

GObject Introspection is a project for providing machine readable
introspection data of the API of C libraries. This introspection data
can be used in several different use cases, for example automatic code
generation for bindings, API verification and documentation generation.

feedback and ok ajacoutot@@ landry@@
@
text
@@
