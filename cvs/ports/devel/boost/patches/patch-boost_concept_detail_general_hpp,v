head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2017.05.24.08.30.20;	author espie;	state Exp;
branches;
next	;
commitid	XvTSUEHBZGL4CvNk;


desc
@@


1.1
log
@improve the clang config: boost hardcodes __attribute__((unused)) on the
wrong compiler, so re-add it (dependent ports will whine a lot less)
tell boost we have threads and int128 (there's not issue about dual
compiler for clang)
@
text
@$OpenBSD$

Index: boost/concept/detail/general.hpp
--- boost/concept/detail/general.hpp.orig
+++ boost/concept/detail/general.hpp
@@@@ -67,7 +67,7 @@@@ struct requirement_<void(*)(Model)>
 
 // Version check from https://svn.boost.org/trac/boost/changeset/82886
 // (boost/static_assert.hpp)
-#if defined(__GNUC__) && ((__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7))) 
+#if defined(__GNUC__) && ((__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7))) || defined(__clang__)
 #define BOOST_CONCEPT_UNUSED_TYPEDEF __attribute__((unused))
 #else
 #define BOOST_CONCEPT_UNUSED_TYPEDEF /**/
@
