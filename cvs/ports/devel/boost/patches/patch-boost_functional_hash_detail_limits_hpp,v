head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.10
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.0.14
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.12
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2015.07.01.08.41.59;	author jasper;	state Exp;
branches;
next	1.1;
commitid	Mehnwl4kYOTECbel;

1.1
date	2011.11.06.20.05.47;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update to boost 1.58.0

earlier diff looked good to brad
tested in multiple bulks by aja@@ and me
ok aja@@ robert@@
@
text
@$OpenBSD: patch-boost_functional_hash_detail_limits_hpp,v 1.1 2011/11/06 20:05:47 jasper Exp $
--- boost/functional/hash/detail/limits.hpp.orig	Sat Jan 24 15:37:21 2015
+++ boost/functional/hash/detail/limits.hpp	Fri Jun 26 11:43:46 2015
@@@@ -16,11 +16,7 @@@@
 
 #include <boost/limits.hpp>
 
-// On OpenBSD, numeric_limits is not reliable for long doubles, but
-// the macros defined in <float.h> are and support long double when STLport
-// doesn't.
-
-#if defined(__OpenBSD__) || defined(_STLP_NO_LONG_DOUBLE)
+#if defined(_STLP_NO_LONG_DOUBLE)
 #include <float.h>
 #endif
 
@@@@ -31,7 +27,7 @@@@ namespace boost
         template <class T>
         struct limits : std::numeric_limits<T> {};
 
-#if defined(__OpenBSD__) || defined(_STLP_NO_LONG_DOUBLE)
+#if defined(_STLP_NO_LONG_DOUBLE)
         template <>
         struct limits<long double>
              : std::numeric_limits<long double>
@@@@ -51,11 +47,9 @@@@ namespace boost
             BOOST_STATIC_CONSTANT(int, digits = LDBL_MANT_DIG);
             BOOST_STATIC_CONSTANT(int, max_exponent = LDBL_MAX_EXP);
             BOOST_STATIC_CONSTANT(int, min_exponent = LDBL_MIN_EXP);
-#if defined(_STLP_NO_LONG_DOUBLE)
             BOOST_STATIC_CONSTANT(int, radix = FLT_RADIX);
-#endif
         };
-#endif // __OpenBSD__
+#endif
     }
 }
 
@


1.1
log
@- Remove OpenBSD long double workaround for Boost.Functional/Hash.
- Have Boost.Filesystem use statvfs().

from brad
ok aja@@
@
text
@d1 4
a4 4
$OpenBSD$
--- boost/functional/hash/detail/limits.hpp.orig	Thu Nov  3 07:03:59 2011
+++ boost/functional/hash/detail/limits.hpp	Thu Nov  3 07:05:08 2011
@@@@ -15,11 +15,7 @@@@
d17 1
a17 1
@@@@ -30,7 +26,7 @@@@ namespace boost
d26 1
a26 1
@@@@ -50,11 +46,9 @@@@ namespace boost
@

