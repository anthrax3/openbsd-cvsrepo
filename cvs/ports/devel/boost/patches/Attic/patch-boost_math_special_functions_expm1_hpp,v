head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.09.19.19.53.20;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2010.05.26.12.25.23;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* Pass MAKE_JOBS to jam, which can do parallel building.
* Don't add -O2 to all builds.
* Remove workaround for (no longer) missing libm functions and bump
  library.

* Remove OpenBSD hack after the gcc3 thread model has been
  switched to posix.  This part ok kurt@@
@
text
@$OpenBSD: patch-boost_math_special_functions_expm1_hpp,v 1.1 2010/05/26 12:25:23 espie Exp $
--- boost/math/special_functions/expm1.hpp.orig	Wed May 26 11:30:30 2010
+++ boost/math/special_functions/expm1.hpp	Wed May 26 11:31:54 2010
@@@@ -268,7 +268,9 @@@@ inline typename tools::promote_args<T>::type expm1(T x
 #  ifdef BOOST_MATH_USE_C99
 inline float expm1(float x, const policies::policy<>&){ return ::expm1f(x); }
 #     ifndef BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS
+#	ifndef __OpenBSD__
 inline long double expm1(long double x, const policies::policy<>&){ return ::expm1l(x); }
+#	endif
 #     endif
 #  else
 inline float expm1(float x, const policies::policy<>&){ return ::expm1(x); }
@


1.1
log
@build boost with gcc4 and newer libstdc++-v3.
(I'll revisit the math funcs later)
@
text
@d1 1
a1 1
$OpenBSD$
@

