head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2010.03.30.11.00.15;	author robert;	state dead;
branches;
next	1.1;

1.1
date	2008.06.05.12.55.56;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Udpate to 1.41.0; original diff from Markus Hennecke
@
text
@$OpenBSD: patch-boost_detail_atomic_count_hpp,v 1.1 2008/06/05 12:55:56 kurt Exp $
--- boost/detail/atomic_count.hpp.orig	Wed Mar 30 17:52:54 2005
+++ boost/detail/atomic_count.hpp	Thu Jun  5 07:17:02 2008
@@@@ -93,7 +93,13 @@@@ typedef long atomic_count;
 #  include <boost/detail/atomic_count_pthreads.hpp>
 #elif defined(WIN32) || defined(_WIN32) || defined(__WIN32__)
 #  include <boost/detail/atomic_count_win32.hpp>
-#elif defined(__GLIBCPP__) || defined(__GLIBCXX__)
+#elif defined(__GLIBCXX__) && \
+        (defined(_GLIBCXX_HAVE_GTHR_DEFAULT) || \
+        defined(_GLIBCXX__PTHREADS))
+#  include <boost/detail/atomic_count_gcc.hpp>
+#elif defined(__GLIBCPP__) && \
+        (defined(_GLIBCPP_HAVE_GTHR_DEFAULT) || \
+        defined(_GLIBCPP__PTHREADS))
 #  include <boost/detail/atomic_count_gcc.hpp>
 #elif defined(BOOST_HAS_PTHREADS)
 #  define BOOST_AC_USE_PTHREADS
@


1.1
log
@fix atomic_count.hpp: libstdc++ is not built with thread support yet so
adjust atomic_count.hpp to only use libstdc++ when it has been built with
thread support and fall back to using the pthreads implementation.
diagnosed, tested and okay deanna@@
@
text
@d1 1
a1 1
$OpenBSD$
@

