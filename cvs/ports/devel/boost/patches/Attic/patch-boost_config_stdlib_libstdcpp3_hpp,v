head	1.6;
access;
symbols
	OPENBSD_5_0:1.5.0.6
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.4
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.6
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.4
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.1.1.1.0.4
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.2
	OPENBSD_4_1_BASE:1.1.1.1
	wilfried_20061105:1.1.1.1
	wilfried:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2011.09.19.19.53.20;	author naddy;	state dead;
branches;
next	1.5;

1.5
date	2010.03.30.11.00.15;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2009.07.27.00.34.24;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2009.07.25.02.17.06;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2008.01.06.00.01.15;	author deanna;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.05.19.20.43;	author wilfried;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.05.19.20.43;	author wilfried;	state Exp;
branches;
next	;


desc
@@


1.6
log
@* Pass MAKE_JOBS to jam, which can do parallel building.
* Don't add -O2 to all builds.
* Remove workaround for (no longer) missing libm functions and bump
  library.

* Remove OpenBSD hack after the gcc3 thread model has been
  switched to posix.  This part ok kurt@@
@
text
@$OpenBSD: patch-boost_config_stdlib_libstdcpp3_hpp,v 1.5 2010/03/30 11:00:15 robert Exp $
--- boost/config/stdlib/libstdcpp3.hpp.orig	Tue May 12 18:09:45 2009
+++ boost/config/stdlib/libstdcpp3.hpp	Tue May 12 18:15:20 2009
@@@@ -29,6 +29,15 @@@@
 #  define _REENTRANT
 #endif
 
+// This is hack for OpenBSD. Currently OpenBSD's gcc is compiled
+// with thread model = single. Many references on the net indicate
+// multithreaded c++ applications will have problems with c++
+// exceptions and the high-speed caching allocator. However in
+// practice we have many multithreaded c++ applications that haven't
+// seen these problems. We may be playing with fire but...
+#ifdef __OpenBSD__
+#  define BOOST_HAS_THREADS
+#else
 #ifdef __GLIBCXX__ // gcc 3.4 and greater:
 #  if defined(_GLIBCXX_HAVE_GTHR_DEFAULT) \
         || defined(_GLIBCXX__PTHREADS)
@@@@ -46,6 +55,7 @@@@
         && !defined(_GLIBCPP__PTHREADS)
    // disable thread support if the std lib was built single threaded:
 #  define BOOST_DISABLE_THREADS
+#endif
 #endif
 
 #if (defined(linux) || defined(__linux) || defined(__linux__)) && defined(__arm__) && defined(_GLIBCPP_HAVE_GTHR_DEFAULT)
@


1.5
log
@Udpate to 1.41.0; original diff from Markus Hennecke
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@- revert last commit since gcc3/libstdc++ changes were reverted.
@
text
@d1 3
a3 3
$OpenBSD: patch-boost_config_stdlib_libstdcpp3_hpp,v 1.2 2008/01/06 00:01:15 deanna Exp $
--- boost/config/stdlib/libstdcpp3.hpp.orig	Thu Dec  1 10:00:33 2005
+++ boost/config/stdlib/libstdcpp3.hpp	Mon Dec 31 02:29:05 2007
d8 1
a8 1
+// This is a hack for OpenBSD. Currently OpenBSD's gcc is compiled
@


1.3
log
@- remove hacks to force boost to use threads now that libstdc++ thread
safety has been enabled in gcc3 & libstdc++
- correct detection of thread support in libstdcpp3.hpp
- correct multiple defined T_DIVIDE
- use threads for python.jam

NOTE: this update requires userland to be rebuild with the recent
gcc3/libstdc++ changes. See current.html for instructions.
@
text
@d1 24
a24 20
$OpenBSD$
--- boost/config/stdlib/libstdcpp3.hpp.orig	Mon Jan 23 15:50:27 2006
+++ boost/config/stdlib/libstdcpp3.hpp	Wed Apr 22 13:11:34 2009
@@@@ -41,11 +41,14 @@@@
 #  else
 #     define BOOST_DISABLE_THREADS
 #  endif
-#elif defined(__GLIBCPP__) \
-        && !defined(_GLIBCPP_HAVE_GTHR_DEFAULT) \
-        && !defined(_GLIBCPP__PTHREADS)
-   // disable thread support if the std lib was built single threaded:
-#  define BOOST_DISABLE_THREADS
+#elif defined(__GLIBCPP__)
+#  if defined(_GLIBCPP_HAVE_GTHR_DEFAULT) \
+        || defined(_GLIBCPP__PTHREADS)
+#     define BOOST_HAS_THREADS
+#  else
+     // disable thread support if the std lib was built single threaded:
+#    define BOOST_DISABLE_THREADS
+#  endif
@


1.2
log
@Build libboost_python.  Ports using it will need to satisfy any python
run depends on their own.  Patch from landry@@, change requested by a
few.

And regen patches.

ok landry@@
@
text
@d1 20
a20 24
$OpenBSD: patch-boost_config_stdlib_libstdcpp3_hpp,v 1.1.1.1 2006/11/05 19:20:43 wilfried Exp $
--- boost/config/stdlib/libstdcpp3.hpp.orig	Thu Dec  1 10:00:33 2005
+++ boost/config/stdlib/libstdcpp3.hpp	Mon Dec 31 02:29:05 2007
@@@@ -29,6 +29,15 @@@@
 #  define _REENTRANT
 #endif
 
+// This is a hack for OpenBSD. Currently OpenBSD's gcc is compiled
+// with thread model = single. Many references on the net indicate
+// multithreaded c++ applications will have problems with c++
+// exceptions and the high-speed caching allocator. However in
+// practice we have many multithreaded c++ applications that haven't
+// seen these problems. We may be playing with fire but...
+#ifdef __OpenBSD__
+#  define BOOST_HAS_THREADS
+#else
 #ifdef __GLIBCXX__ // gcc 3.4 and greater:
 #  if defined(_GLIBCXX_HAVE_GTHR_DEFAULT) \
         || defined(_GLIBCXX__PTHREADS)
@@@@ -46,6 +55,7 @@@@
         && !defined(_GLIBCPP__PTHREADS)
    // disable thread support if the std lib was built single threaded:
 #  define BOOST_DISABLE_THREADS
+#endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ boost/config/stdlib/libstdcpp3.hpp	Fri Nov  3 13:07:29 2006
a27 1

@


1.1.1.1
log
@Import boost 1.33.1

Free peer-reviewed portable C++ source libraries

From Deanna Phillips <deanna@@sdf.lonestar.org>
with work from me, robert@@ and kurt@@
@
text
@@
