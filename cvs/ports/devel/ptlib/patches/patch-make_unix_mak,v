head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.8
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.6
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.2
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.1.1.0.6
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.4
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	ajacoutot_20100323:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2015.05.22.15.16.24;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	Jw2PwDLk0P1nPaHc;

1.6
date	2014.04.27.09.45.05;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2014.04.25.11.17.27;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2012.08.25.13.15.24;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2012.06.21.14.23.51;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.26.16.59.09;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.03.23.21.10.17;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.03.23.21.10.17;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Add -fPIC to PTLIB_CFLAGS to build with newer binutils.
As a bonus, drop patching for STDCCFLAGS used by ptlib dependencies
(/usr/local/share/ptlib/make/unix.mak) since PTLIB_CFLAGS is appended to
CFLAGS/CXXFLAGS automatically.
@
text
@$OpenBSD: patch-make_unix_mak,v 1.6 2014/04/27 09:45:05 ajacoutot Exp $

Make sure _SONAME is versioned (.so.X.Y versus .so).

--- make/unix.mak.orig	Mon Feb 17 03:14:37 2014
+++ make/unix.mak	Fri May 22 15:33:37 2015
@@@@ -192,8 +192,14 @@@@ ifeq ($(target_cpu),x86)
 #PTLIB_CFLAGS	+= -m486
 endif
 
-LDLIBS		+= -lossaudio
+ifeq ($(MACHTYPE),amd64)
+STDCCFLAGS	+= -DP_64BIT
+endif
 
+ifeq ($(MACHTYPE),sparc64)
+STDCCFLAGS     += -DP_64BIT
+endif
+
 P_USE_RANLIB		:= 1
 #PTLIB_CFLAGS      += -DP_USE_PRAGMA		# migrated to configure
 
@@@@ -571,6 +577,12 @@@@ else
   PTLIB_DEBUG_SONAME = $(subst .$(LIB_SUFFIX),.$(MAJOR_VERSION).$(MINOR_VERSION)$(BUILD_TYPE)$(BUILD_NUMBER).$(LIB_SUFFIX),$(PTLIB_DEBUG_FILE))
 endif
 
+ifeq ($(target_os),OpenBSD)
+  PTLIB_FILE = lib$(PTLIB_BASE)$(LIB_TYPE).$(LIB_SUFFIX)
+  PTLIB_DEBUG_FILE= lib$(PTLIB_BASE)_d$(LIB_TYPE).$(LIB_SUFFIX)
+  PTLIB_SONAME = $(PTLIB_FILE).${LIBpt_VERSION}
+  PTLIB_DEBUG_SONAME = $(PTLIB_DEBUG_FILE).${LIBpt_VERSION}
+endif
 
 ###############################################################################
 #
@


1.6
log
@Fix the optshared target for dependant ports.
@
text
@d1 1
a1 1
$OpenBSD: patch-make_unix_mak,v 1.5 2014/04/25 11:17:27 ajacoutot Exp $
d6 2
a7 2
+++ make/unix.mak	Mon Apr 21 21:49:55 2014
@@@@ -192,11 +192,18 @@@@ ifeq ($(target_cpu),x86)
d23 1
a23 5
+STDCCFLAGS	+= -fPIC -DPIC
 
 endif # OpenBSD
 
@@@@ -571,6 +578,12 @@@@ else
@


1.5
log
@Update to ptlib-2.12.9.
Drop support for v4l2, our implementation is seriously lacking behind.
@
text
@d1 1
a1 1
$OpenBSD: patch-make_unix_mak,v 1.4 2012/08/25 13:15:24 ajacoutot Exp $
a3 1
(overriding PTLIB_FILE will drop the _s.a static lib but we don't use it)
d32 4
a35 4
+  PTLIB_FILE = lib$(PTLIB_BASE)$(LIB_TYPE).$(LIB_SUFFIX).${LIBpt_VERSION}
+  PTLIB_DEBUG_FILE= lib$(PTLIB_BASE)_d$(LIB_TYPE).$(LIB_SUFFIX).${LIBpt_VERSION}
+  PTLIB_SONAME = $(PTLIB_FILE)
+  PTLIB_DEBUG_SONAME = $(PTLIB_DEBUG_FILE)
@


1.4
log
@Update to ptlib-2.10.7.
@
text
@d1 9
a9 5
$OpenBSD: patch-make_unix_mak,v 1.3 2012/06/21 14:23:51 ajacoutot Exp $
--- make/unix.mak.orig	Thu Aug 23 04:12:44 2012
+++ make/unix.mak	Fri Aug 24 07:59:24 2012
@@@@ -235,11 +235,19 @@@@ ifeq ($(MACHTYPE),x86)
 #STDCCFLAGS	+= -m486
d18 1
a18 1
+STDCCFLAGS	+= -DP_64BIT
d22 1
a22 2
 #STDCCFLAGS      += -DP_USE_PRAGMA		# migrated to configure
+STDCCFLAGS      += -fPIC -DPIC
d24 1
a24 1
+SYSLIBDIR	:= $(shell $(PTLIBDIR)/make/ptlib-config --libdir)
d28 13
a40 11
@@@@ -693,7 +701,9 @@@@ ifneq ($(OSTYPE),Darwin)
       STDCCFLAGS	+= -xO3
     endif
   else
-    STDCCFLAGS	+= -Os 
+    ifneq ($(OSTYPE),OpenBSD)
+      STDCCFLAGS	+= -Os
+    endif
   endif
 else
   STDCCFLAGS	+= -O2
@


1.3
log
@Update to ptlib-2.10.5; unbreak video in ekiga.
@
text
@d1 4
a4 4
$OpenBSD: patch-make_unix_mak,v 1.2 2011/10/26 16:59:09 ajacoutot Exp $
--- make/unix.mak.orig	Thu Apr 26 06:47:39 2012
+++ make/unix.mak	Thu Jun 21 11:22:09 2012
@@@@ -200,11 +200,19 @@@@ ifeq ($(MACHTYPE),x86)
d25 1
a25 1
@@@@ -658,7 +666,9 @@@@ ifneq ($(OSTYPE),Darwin)
@


1.2
log
@Major update to ptlib-2.10.3.

Some clue from espie@@

Needed to work on an Ekiga update.
There are still some rought edges but they'll be worked in-tree.

This and the upcoming VoIP ports commits wouldn't have been possible
without Miod's soft couch ;-)
@
text
@d1 3
a3 3
$OpenBSD: patch-make_unix_mak,v 1.1.1.1 2010/03/23 21:10:17 ajacoutot Exp $
--- make/unix.mak.orig	Fri Oct 14 08:54:53 2011
+++ make/unix.mak	Wed Oct 26 08:58:01 2011
d25 1
a25 1
@@@@ -659,7 +667,9 @@@@ ifneq ($(OSTYPE),Darwin)
@


1.1
log
@Initial revision
@
text
@d1 4
a4 13
$OpenBSD$
--- make/unix.mak.orig	Mon Sep 21 02:25:30 2009
+++ make/unix.mak	Tue Sep 22 17:20:24 2009
@@@@ -159,7 +159,7 @@@@ endif # P_SHAREDLIB
 
 
 STATIC_LIBS	:= libstdc++.a libg++.a libm.a libc.a
-SYSLIBDIR	:= $(shell $(PTLIBDIR)/make/ptlib-config --libdir)
+SYSLIBDIR	:= $(shell ${PREFIX}/bin/ptlib-config --libdir)
 
 endif # linux
 
@@@@ -198,12 +198,18 @@@@ ifeq ($(MACHTYPE),x86)
d19 3
a21 1
+STDCCFLAGS      += -fPIC
a22 1
-
d25 1
a25 2
 
@@@@ -656,7 +662,7 @@@@ ifneq ($(OSTYPE),Darwin)
d30 3
a32 1
+    STDCCFLAGS	+=
@


1.1.1.1
log
@Import ptlib-2.6.5

PTLib is a moderately large C++ class library that originated many years
ago as a method to produce applications that run on both Microsoft
Windows and Unix X-Windows systems. It also was to have a Macintosh port
as well, but this never eventuated. In those days it was called the
PWLib the Portable Windows Library.

Since then, the availability of multi-platform GUI toolkits such as KDE
and wxWindows, and the development of the OpenH323 and OPAL projects as
primary user of the library, has emphasised the focus on networking, I/O
portability, multi-threading and protocol portability. Mostly, the
library is used to create high performance and highly portable
network-centric applications. So all the GUI abstractions ahave been
dropped and it was renamed the Portable Tools Library that you see
today.
@
text
@@
