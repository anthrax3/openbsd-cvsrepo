head	1.3;
access;
symbols
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2012.06.22.16.53.51;	author naddy;	state dead;
branches;
next	1.2;

1.2
date	2011.10.26.16.59.09;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.11.07.23.23;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@drop gcc3 workaround
@
text
@$OpenBSD: gcc3-patch-include_ptlib_safecoll_h,v 1.2 2011/10/26 16:59:09 ajacoutot Exp $

Make this build on gcc3.
(revert commit from upstream SVN)

--- include/ptlib/safecoll.h.orig	Fri May  7 06:42:29 2010
+++ include/ptlib/safecoll.h	Sat Jun 26 16:40:52 2010
@@@@ -767,7 +767,7 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
       */
     PSafePtr & operator=(const PSafeCollection & safeCollection)
       {
-        BaseClass::Assign(safeCollection);
+        Assign(safeCollection);
         return *this;
       }
 
@@@@ -803,7 +803,7 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
      */
     PSafePtr & operator=(PINDEX idx)
       {
-        BaseClass::Assign(idx);
+        Assign(idx);
         return *this;
       }
   //@@}
@@@@ -812,15 +812,15 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
   //@@{
     /**Return the physical pointer to the object.
       */
-    operator T*()    const { return  (T *)BaseClass::currentObject; }
+    operator T*()    const { return  (T *)currentObject; }
 
     /**Return the physical pointer to the object.
       */
-    T & operator*()  const { return *(T *)PAssertNULL(BaseClass::currentObject); }
+    T & operator*()  const { return *(T *)PAssertNULL(currentObject); }
 
     /**Allow access to the physical object the pointer is pointing to.
       */
-    T * operator->() const { return  (T *)PAssertNULL(BaseClass::currentObject); }
+    T * operator->() const { return  (T *)PAssertNULL(currentObject); }
 
     /**Post-increment the pointer.
        This requires that the pointer has been created with a PSafeCollection
@@@@ -828,8 +828,8 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
       */
     T * operator++(int)
       {
-        T * previous = (T *)BaseClass::currentObject;
-        BaseClass::Next();
+        T * previous = (T *)currentObject;
+        Next();
         return previous;
       }
 
@@@@ -839,8 +839,8 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
       */
     T * operator++()
       {
-        BaseClass::Next();
-        return (T *)BaseClass::currentObject;
+        Next();
+        return (T *)currentObject;
       }
 
     /**Post-decrement the pointer.
@@@@ -849,8 +849,8 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
       */
     T * operator--(int)
       {
-        T * previous = (T *)BaseClass::currentObject;
-        BaseClass::Previous();
+        T * previous = (T *)currentObject;
+        Previous();
         return previous;
       }
 
@@@@ -860,8 +860,8 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
       */
     T * operator--()
       {
-        BaseClass::Previous();
-        return (T *)BaseClass::currentObject;
+        Previous();
+        return (T *)currentObject;
       }
   //@@}
 
@


1.2
log
@Major update to ptlib-2.10.3.

Some clue from espie@@

Needed to work on an Ekiga update.
There are still some rought edges but they'll be worked in-tree.

This and the upcoming VoIP ports commits wouldn't have been possible
without Miod's soft couch ;-)
@
text
@d1 1
a1 1
$OpenBSD: gcc3-patch-include_ptlib_safecoll_h,v 1.1 2010/05/11 07:23:23 espie Exp $
@


1.1
log
@make it compile on gcc4, by making the relevant patch dependent on
compiler version.
also removes lvalue cast, that's not ansi.
@
text
@d1 1
a1 1
$OpenBSD: patch-include_ptlib_safecoll_h,v 1.1.1.1 2010/03/23 21:10:17 ajacoutot Exp $
d4 1
a4 1
(reversed commit from upstream SVN)
d6 3
a8 3
--- include/ptlib/safecoll.h.orig	Tue May 19 11:49:40 2009
+++ include/ptlib/safecoll.h	Mon Jun 22 15:21:19 2009
@@@@ -761,7 +761,7 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
d17 1
a17 1
@@@@ -797,7 +797,7 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
d26 1
a26 1
@@@@ -806,15 +806,15 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
d45 1
a45 1
@@@@ -822,8 +822,8 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
d56 1
a56 1
@@@@ -833,8 +833,8 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
d67 1
a67 1
@@@@ -843,8 +843,8 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
d78 1
a78 1
@@@@ -854,8 +854,8 @@@@ template <class T, class BaseClass = PSafePtrBase> cla
@

