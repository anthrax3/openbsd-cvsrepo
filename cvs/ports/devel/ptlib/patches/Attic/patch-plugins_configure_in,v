head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.10
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.8
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.6
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.1.1.1.0.6
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.4
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	ajacoutot_20100323:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.04.25.11.17.27;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2011.10.28.12.15.36;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.26.16.59.09;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.03.23.21.10.17;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.03.23.21.10.17;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to ptlib-2.12.9.
Drop support for v4l2, our implementation is seriously lacking behind.
@
text
@$OpenBSD: patch-plugins_configure_in,v 1.3 2011/10/28 12:15:36 ajacoutot Exp $
--- plugins/configure.in.orig	Fri Oct 14 08:54:54 2011
+++ plugins/configure.in	Fri Oct 28 12:21:46 2011
@@@@ -107,6 +107,23 @@@@ if test "${enable_pulse}z" = "yesz" ; then
 fi
 
 dnl #########################################################################
+dnl check for sndio sound support
+dnl ########################################################################
+
+AC_ARG_ENABLE(sndio, [  --enable-sndio            enable sndio audio support],,enable_sndio=no)
+
+if test "${enable_sndio}z" = "yesz" ; then
+  AC_CHECK_HEADER(sndio.h, SNDCARDHDR=1)
+  AC_MSG_CHECKING(for sndio sound support)
+  if test "${SNDCARDHDR}z" != "z"; then
+    AC_SUBST(HAS_SNDIO, 1)
+    AC_MSG_RESULT(yes)
+  else
+    AC_MSG_RESULT(no)
+  fi
+fi
+
+dnl #########################################################################
 dnl check for sunaudio sound support
 dnl ########################################################################
 
@@@@ -176,7 +193,7 @@@@ AC_ARG_ENABLE(v4l2, [  --enable-v4l2            enable
 if test "${enable_v4l2}z" = "yesz" ; then
   case "$target_os" in
     solaris* | sunos* ) V4L2_HEADER="sys/videodev2.h"   ; ;;
-    netbsd* )           V4L2_HEADER="sys/videoio.h"     ; ;;
+    netbsd* | openbsd*) V4L2_HEADER="sys/videoio.h"     ; ;;
           * )	        V4L2_HEADER="linux/videodev2.h" ; ;;
   esac
 
@


1.3
log
@Remove some now uneeded patches.
@
text
@d1 1
a1 1
$OpenBSD: patch-plugins_configure_in,v 1.2 2011/10/26 16:59:09 ajacoutot Exp $
@


1.2
log
@Major update to ptlib-2.10.3.

Some clue from espie@@

Needed to work on an Ekiga update.
There are still some rought edges but they'll be worked in-tree.

This and the upcoming VoIP ports commits wouldn't have been possible
without Miod's soft couch ;-)
@
text
@d1 1
a1 1
$OpenBSD: patch-plugins_configure_in,v 1.1.1.1 2010/03/23 21:10:17 ajacoutot Exp $
d3 1
a3 1
+++ plugins/configure.in	Wed Oct 26 10:43:03 2011
a36 27
@@@@ -196,9 +213,14 @@@@ if test "${enable_v4l2}z" = "yesz" ; then
                                         #include <sys/types.h>
                                         #include <sys/time.h>
                                         #else
+                                        #ifdef __OpenBSD__
+                                        #include <sys/types.h>
+                                        #include <sys/ioctl.h>
+                                        #else
 					#error "not supported"
 					#endif
 					#endif
+					#endif
 					#include "$V4L2_HEADER"
 				    ],
 				    [
@@@@ -216,6 +238,11 @@@@ if test "${enable_v4l2}z" = "yesz" ; then
 		[
 		#ifdef __linux__
 		#include <linux/types.h>
+		#else
+                #ifdef __OpenBSD__
+                #include <sys/types.h>
+                #include <sys/ioctl.h>
+		#endif
 		#endif
 		])
   AC_MSG_CHECKING(for V4L2 video support)
@


1.1
log
@Initial revision
@
text
@d1 4
a4 20
$OpenBSD$
--- plugins/configure.in.orig	Mon Sep 15 01:26:48 2008
+++ plugins/configure.in	Mon Nov  3 07:59:23 2008
@@@@ -78,7 +78,14 @@@@ dnl ##################################################
 AC_ARG_ENABLE(oss, [  --enable-oss            enable OSS audio support],,enable_oss=no)
 
 if test "${enable_oss}z" = "yesz" ; then
-  AC_CHECK_HEADER(sys/soundcard.h, SNDCARDHDR=1)
+  case "$target_os" in
+  openbsd*)
+    AC_CHECK_HEADER(soundcard.h, SNDCARDHDR=1)
+    ;;
+  *)
+    AC_CHECK_HEADER(sys/soundcard.h, SNDCARDHDR=1)
+    ;;
+  esac
   AC_MSG_CHECKING(for OSS sound support)
   if test "${SNDCARDHDR}z" != "z"; then
     AC_SUBST(HAS_OSS, 1)
@@@@ -89,6 +96,23 @@@@ if test "${enable_oss}z" = "yesz" ; then
d28 1
a28 1
@@@@ -140,7 +164,7 @@@@ AC_ARG_ENABLE(v4l2, [  --enable-v4l2            enable
d37 3
a39 16
@@@@ -152,17 +176,18 @@@@ if test "${enable_v4l2}z" = "yesz" ; then
                     # method to do this more cleanly ?
 		    AC_MSG_CHECKING([for $V4L2_HEADER with sys/types.h])
 		    AC_TRY_COMPILE([
-					#ifdef __linux__
-					#include <sys/types.h>
-					#include <linux/types.h>
+					#if defined(__linux__)
+					# include <sys/types.h>
+					# include <linux/types.h>
+                                        #elif defined(__sun)
+                                        # include <sys/types.h>
+                                        # include <sys/time.h>
+                                        #elif defined(__OpenBSD__)
+                                        # include <sys/types.h>
+                                        # include <sys/ioctl.h>
d41 6
a46 6
-                                        #ifdef __sun
-                                        #include <sys/types.h>
-                                        #include <sys/time.h>
-                                        #else
-					#error "not supported"
+					#  error "not supported"
d48 1
a48 1
-					#endif
d52 1
a52 3
@@@@ -178,8 +203,11 @@@@ if test "${enable_v4l2}z" = "yesz" ; then
                                     ])
                   ], 
d54 1
a54 2
-		#ifdef __linux__
+		#if defined(__linux__)
d56 2
a57 1
+                #elif defined(__OpenBSD__)
d60 1
@


1.1.1.1
log
@Import ptlib-2.6.5

PTLib is a moderately large C++ class library that originated many years
ago as a method to produce applications that run on both Microsoft
Windows and Unix X-Windows systems. It also was to have a Macintosh port
as well, but this never eventuated. In those days it was called the
PWLib the Portable Windows Library.

Since then, the availability of multi-platform GUI toolkits such as KDE
and wxWindows, and the development of the OpenH323 and OPAL projects as
primary user of the library, has emphasised the focus on networking, I/O
portability, multi-threading and protocol portability. Mostly, the
library is used to create high performance and highly portable
network-centric applications. So all the GUI abstractions ahave been
dropped and it was renamed the Portable Tools Library that you see
today.
@
text
@@
