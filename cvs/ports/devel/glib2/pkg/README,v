head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.20
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.18
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.16
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.12
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.14
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.10
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2012.09.18.13.05.59;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.30.10.08.46;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Rely on g_mount_can_unmount() from GLib for the gio-kqueue backend to
choose between kqueue(3) or poll(2) for monitoring. This allows dropping
the need for a gio-kqueue.conf file.
@
text
@$OpenBSD: README,v 1.1 2012/08/30 10:08:46 ajacoutot Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

File and directory monitor
==========================
GLib (GFileMonitor) provides realtime kqueue(2) notifications and
monitoring up to the open file descriptors limit.
If gio-kqueue needs to handle large directories, the kern.maxfiles
sysctl(8) should be increased by adding an entry in sysctl.conf(5) and
the user's login(1) class modified accordingly by bumping the "cur" and
"max" openfiles limit in login.conf(5).
@


1.1
log
@Merge -docs into -main.
@
text
@d1 1
a1 1
$OpenBSD: README-main,v 1.3 2012/04/04 13:41:38 ajacoutot Exp $
a14 3

The ${SYSCONFDIR}/gio-kqueue.conf file contains the paths that should be
monitored using traditional polling instead of kqueue(2).
@

