head	1.17;
access;
symbols
	OPENBSD_5_6:1.14.0.2
	OPENBSD_5_6_BASE:1.14;
locks; strict;
comment	@# @;


1.17
date	2014.10.01.08.39.25;	author ajacoutot;	state dead;
branches;
next	1.16;
commitid	99NPoXJkUIRIpCSU;

1.16
date	2014.09.23.06.15.21;	author ajacoutot;	state Exp;
branches;
next	1.15;
commitid	DDK8vwZ87BuxBNLJ;

1.15
date	2014.09.20.16.23.45;	author ajacoutot;	state Exp;
branches;
next	1.14;
commitid	TzZM8RWvDdhDTpaT;

1.14
date	2014.04.15.13.14.48;	author ajacoutot;	state Exp;
branches;
next	1.13;

1.13
date	2014.04.12.05.57.29;	author ajacoutot;	state Exp;
branches;
next	1.12;

1.12
date	2014.04.10.09.13.00;	author ajacoutot;	state Exp;
branches;
next	1.11;

1.11
date	2014.04.10.08.45.07;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2014.04.10.07.29.06;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2013.09.25.12.37.07;	author ajacoutot;	state dead;
branches;
next	1.8;

1.8
date	2013.08.28.10.02.53;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2013.08.28.07.46.09;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2012.05.01.06.17.01;	author ajacoutot;	state dead;
branches;
next	1.5;

1.5
date	2012.04.22.16.58.42;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2012.04.16.23.40.10;	author kili;	state Exp;
branches;
next	1.3;

1.3
date	2012.04.14.07.47.55;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2012.04.06.10.44.38;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.31.18.27.35;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Update to glib2-2.42.0.

bulk testing and ok jasper@@
@
text
@$OpenBSD: patch-configure_ac,v 1.16 2014/09/23 06:15:21 ajacoutot Exp $

From 74ec947079e9159c71b28b98439b8a7ad9c415ee Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@gnome.org>
Date: Thu, 10 Apr 2014 10:40:16 +0200
Subject: openbsd: remove -pthread

--- configure.ac.orig	Sat Sep 20 16:26:47 2014
+++ configure.ac	Sat Sep 20 17:55:22 2014
@@@@ -2272,9 +2272,6 @@@@ case $host in
   *-*-freebsd*|*-*-linux*)
     G_THREAD_LIBS_FOR_GTHREAD="`echo $G_THREAD_LIBS | sed s/-pthread/-lpthread/`"
     ;;
-  *-*-openbsd*)
-    LDFLAGS="$LDFLAGS -pthread"
-    ;;
   *)
     G_THREAD_LIBS_FOR_GTHREAD="$G_THREAD_LIBS"
     ;;
@


1.16
log
@Update to glib2-2.40.2.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_ac,v 1.15 2014/09/20 16:23:45 ajacoutot Exp $
@


1.15
log
@Update to glib2-2.40.1.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_ac,v 1.14 2014/04/15 13:14:48 ajacoutot Exp $
a7 5
From 6c7972a05c2901d67d793be2db64817fec94e8e7 Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@gnome.org>
Date: Thu, 10 Apr 2014 11:16:44 +0200
Subject: build: also unset LIBS when LDFLAGS is unset

a19 19
@@@@ -3448,15 +3445,16 @@@@ dnl
 AC_ARG_ENABLE(Bsymbolic,
               [AS_HELP_STRING([--disable-Bsymbolic],
                               [avoid linking with -Bsymbolic])],,
-              [SAVED_LDFLAGS="${LDFLAGS}"
+              [SAVED_LDFLAGS="${LDFLAGS}" SAVED_LIBS="${LIBS}"
                AC_MSG_CHECKING([for -Bsymbolic-functions linker flag])
                LDFLAGS=-Wl,-Bsymbolic-functions
+               LIBS=
                AC_TRY_LINK([], [int main (void) { return 0; }],
                            AC_MSG_RESULT(yes)
                            enable_Bsymbolic=yes,
                            AC_MSG_RESULT(no)
                            enable_Bsymbolic=no)
-               LDFLAGS="${SAVED_LDFLAGS}"])
+               LDFLAGS="${SAVED_LDFLAGS}" LIBS="${SAVED_LIBS}"])
 
 if test "x${enable_Bsymbolic}" = "xyes"; then
   GLIB_LINK_FLAGS=-Wl,-Bsymbolic-functions
@


1.14
log
@Pushed upstream.
@
text
@d1 1
a1 6
$OpenBSD: patch-configure_ac,v 1.13 2014/04/12 05:57:29 ajacoutot Exp $

From 3662eb9759fe225d1c214db6927c667a1b733e8a Mon Sep 17 00:00:00 2001
From: Alexandre Rostovtsev <tetromino@@gentoo.org>
Date: Mon, 2 Sep 2013 13:59:18 -0400
Subject: gobject: try to link with -Wl,-z,nodelete
d13 2
a14 2
--- configure.ac.orig	Mon Mar 24 19:53:31 2014
+++ configure.ac	Thu Apr 10 10:59:12 2014
d25 1
a25 1
@@@@ -3448,21 +3445,57 @@@@ dnl
a43 41
 fi
 
 AC_SUBST(GLIB_LINK_FLAGS)
+
+dnl
+dnl Check for -z,nodelete linker flag: the type system assumes that
+dnl libgobject stays loaded for the lifetime of the process.
+dnl Since ld.bfd does not treat wrong -z options as fatal by default,
+dnl we also try to check for the --fatal-warnings linker flag if
+dnl auto-detecting.
+dnl
+
+AC_ARG_ENABLE([znodelete],
+              [AS_HELP_STRING([--disable-znodelete],
+                              [avoid linking with -z,nodelete])],,
+              [SAVED_LDFLAGS="${LDFLAGS}" SAVED_LIBS="${LIBS}"
+               AC_MSG_CHECKING([for --fatal-warnings linker flag])
+               LDFLAGS=-Wl,--fatal-warnings
+               LIBS=
+               AC_TRY_LINK([], [int main (void) { return 0; }],
+                           AC_MSG_RESULT(yes)
+                           [ldflags_fatal=-Wl,--fatal-warnings],
+                           AC_MSG_RESULT(no)
+                           ldflags_fatal=)
+               AC_MSG_CHECKING([for -z,nodelete linker flag])
+               LDFLAGS="$ldflags_fatal -Wl,-z,nodelete"
+               AC_TRY_LINK([], [int main (void) { return 0; }],
+                           AC_MSG_RESULT(yes)
+                           enable_znodelete=yes,
+                           AC_MSG_RESULT(no)
+                           enable_znodelete=no)
+               LDFLAGS="${SAVED_LDFLAGS}" LIBS="${SAVED_LIBS}"])
+
+if test "x${enable_znodelete}" = "xyes"; then
+  GOBJECT_LINK_FLAGS=-Wl,-z,nodelete
+fi
+
+AC_SUBST(GOBJECT_LINK_FLAGS)
 
 dnl
 dnl Check for -fvisibility=hidden to determine if we can do GNU-style
@


1.13
log
@Pushed usptream.
@
text
@d1 1
a1 3
$OpenBSD: patch-configure_ac,v 1.12 2014/04/10 09:13:00 ajacoutot Exp $

https://bugzilla.gnome.org/show_bug.cgi?id=727939
d12 5
@


1.12
log
@Unset LIBS to that configure checks that unset LDFLAGS do not fail because
of not being able to find libintl.
@
text
@d1 1
a1 3
$OpenBSD: patch-configure_ac,v 1.11 2014/04/10 08:45:07 ajacoutot Exp $

https://bugzilla.gnome.org/show_bug.cgi?id=727941
d9 5
@


1.11
log
@Do not force -pthread in LDFLAGS.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_ac,v 1.10 2014/04/10 07:29:06 ajacoutot Exp $
d5 2
d13 1
a13 1
+++ configure.ac	Thu Apr 10 10:26:47 2014
d24 19
a42 1
@@@@ -3463,6 +3460,40 @@@@ if test "x${enable_Bsymbolic}" = "xyes"; then
d58 1
a58 1
+              [SAVED_LDFLAGS="${LDFLAGS}"
d61 1
d74 1
a74 1
+               LDFLAGS="${SAVED_LDFLAGS}"])
@


1.10
log
@Bring a couple fixes from upstream:
- fix certificate list parsing with trailing comments
- never unload libgobject (fixes a segfault under some circumstances)
@
text
@d1 3
a3 1
$OpenBSD$
d11 14
a24 2
+++ configure.ac	Thu Apr 10 09:10:14 2014
@@@@ -3465,6 +3465,40 @@@@ fi
d26 2
a27 2
 
 dnl
d60 2
a61 2
+
+dnl
a62 2
 dnl visibility attributes for symbol export control
 dnl
@


1.9
log
@Major update to glib2-2.38.0 -- requirement for the WIP GNOME 3.10 update.
This and the following updates: atk, gdk-pixbuf2, pango, at-spi2-core,
at-spi2-atk, py-atspi and gtk+3 have been tested in a bulk by landry@@ (10x!)

Fallouts are:
- x11/gnome/anjuta: will be fixed within the next 2 or 3 days by the 3.10 update
- www/chromium: robert@@ is working on an update (removing -Werror should also
allow it to build)

ok landry@@ jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_ac,v 1.8 2013/08/28 10:02:53 ajacoutot Exp $
d3 4
a6 4
From 996edb0c46356d8a326f886b91a77a6af9a2de3e Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <antoine@@mtier.org>
Date: Wed, 28 Aug 2013 07:35:27 +0000
Subject: fix atomic ops detection
d8 43
a50 29
--- configure.ac.orig	Thu Aug 15 10:52:31 2013
+++ configure.ac	Thu Aug 15 10:53:46 2013
@@@@ -2390,7 +2390,7 @@@@ AC_CACHE_CHECK([for lock-free atomic intrinsics], glib
       glib_cv_g_atomic_lock_free=yes
       ;;
     *)
-      AC_TRY_COMPILE([],
+      AC_TRY_LINK([],
                      [volatile int atomic = 2;\
                       __sync_bool_compare_and_swap (&atomic, 2, 3);],
                      [glib_cv_g_atomic_lock_free=yes],
@@@@ -2398,7 +2398,7 @@@@ AC_CACHE_CHECK([for lock-free atomic intrinsics], glib
       if test "$glib_cv_g_atomic_lock_free" = "no"; then
         SAVE_CFLAGS="${CFLAGS}"
         CFLAGS="-march=i486"
-        AC_TRY_COMPILE([],
+        AC_TRY_LINK([],
                        [volatile int atomic = 2;\
                         __sync_bool_compare_and_swap (&atomic, 2, 3);],
                        [AC_MSG_ERROR([GLib must be build with -march=i486 or later.])],
@@@@ -2416,7 +2416,7 @@@@ case $host in
     # Some compilers support atomic operations but do not define
     # __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4, like clang
     if test x"$glib_cv_g_atomic_lock_free" = xyes; then
-      AC_TRY_COMPILE([],
+      AC_TRY_LINK([],
                      [__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4;],
                      [],
                      [AC_DEFINE(__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4, 1, [ compiler supports atomic operations])])
@


1.8
log
@Pushed upstream.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_ac,v 1.7 2013/08/28 07:46:09 ajacoutot Exp $
@


1.7
log
@Properly detect atomic ops.

prodded by miod@@ and tested by myself on sparc
patch from sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 4
a6 1
https://bugzilla.gnome.org/show_bug.cgi?id=706958
@


1.6
log
@Bugfix update to glib 2.32.2.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_ac,v 1.5 2012/04/22 16:58:42 ajacoutot Exp $
d3 1
a3 4
From a147004b83ee48265e266e33da7656a3a09c7edb Mon Sep 17 00:00:00 2001
From: William Hua <william@@attente.ca>
Date: Wed, 18 Apr 2012 03:49:47 +0000
Subject: Use Cocoa header for Cocoa test instead of Foundation.
d5 29
a33 19
From b3f814883f460ec9b309552a501652ecdecfb2dc Mon Sep 17 00:00:00 2001
From: Alexandre Rostovtsev <tetromino@@gentoo.org>
Date: Mon, 16 Apr 2012 02:57:25 +0000
Subject: Do not detect GNUstep as Cocoa

--- configure.ac.orig	Fri Apr 13 15:39:41 2012
+++ configure.ac	Sun Apr 22 18:21:55 2012
@@@@ -178,7 +178,10 @@@@ AC_MSG_RESULT([$glib_have_carbon])
 glib_have_cocoa=no
 AC_MSG_CHECKING([for Mac OS X Cocoa support])
 AC_TRY_CPP([
-#include <Foundation/Foundation.h>
+#include <Cocoa/Cocoa.h>
+#ifdef GNUSTEP_BASE_VERSION
+#error "Detected GNUstep, not Cocoa"
+#endif
 ], glib_have_cocoa=yes)
 
 AC_MSG_RESULT([$glib_have_cocoa])
@


1.5
log
@Use a new version of the gio-kqueue patch that already has one of our
local patches.
Merge the cocoa/foundation patches from upstream.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_ac,v 1.4 2012/04/16 23:40:10 kili Exp $
@


1.4
log
@Unbreak if x11/gnustep/base is installed.
@
text
@d1 1
a1 1
$OpenBSD$
d3 4
a6 2
Disable the Cocoa check (x11/gnustep/base installs Foundation/Foundation.h,
which causes this autoshit to assume we're MacOS).
d8 8
a15 5
--- configure.ac.orig	Tue Apr 17 01:30:33 2012
+++ configure.ac	Tue Apr 17 01:31:58 2012
@@@@ -176,12 +176,6 @@@@ AC_TRY_CPP([
 AC_MSG_RESULT([$glib_have_carbon])
 
d17 2
a18 2
-AC_MSG_CHECKING([for Mac OS X Cocoa support])
-AC_TRY_CPP([
d20 5
a24 3
-], glib_have_cocoa=yes)
-
-AC_MSG_RESULT([$glib_have_cocoa])
d26 1
a26 2
 AM_CONDITIONAL(OS_WIN32, [test "$glib_native_win32" = "yes"])
 AM_CONDITIONAL(OS_WIN32_X64, [test "$LIB_EXE_MACHINE_FLAG" = "X64"])
@


1.3
log
@Minor update to glib2-2.32.1.

Note that some paths in gsettings have been deprecated
(/apps/, /desktop/ and /system/) which means that glib-compile-schemas
will now complain about them (just a warning).
It is up to the application itself to fix its schemas.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_ac,v 1.2 2012/04/06 10:44:38 ajacoutot Exp $
d3 2
a4 4
From 27d95bd81fabd41367cf000566ee2ccf3651652c Mon Sep 17 00:00:00 2001
From: Matthias Clasen <mclasen@@redhat.com>
Date: Mon, 02 Apr 2012 12:53:20 +0000
Subject: Rework the libelf configure checks one more time
d6 4
a9 5
--- configure.ac.orig	Fri Apr  6 12:21:33 2012
+++ configure.ac	Fri Apr  6 12:24:01 2012
@@@@ -1810,12 +1810,23 @@@@ dnl ************************
 dnl *** check for libelf ***
 dnl ************************
d11 7
a17 20
-AC_CHECK_LIB([elf], [elf_begin], have_libelf=yes, have_libelf=no)
+PKG_CHECK_MODULES([LIBELF], [libelf], [have_libelf=yes], [have_libelf=maybe])
+
+if test $have_libelf = maybe; then
+  AC_CHECK_LIB([elf], [elf_begin], , [have_libelf=no])
+  AC_CHECK_LIB([elf], [elf_getshdrstrndx], , [have_libelf=no])
+  AC_CHECK_LIB([elf], [elf_getshdrnum], , [have_libelf=no])
+  AC_CHECK_HEADER([libelf.h], , [have_libelf=no])
+
+  if test $have_libelf != no; then
+    LIBELF_LIBS=-lelf
+    have_libelf = yes
+  fi
+fi
+
 if test $have_libelf = yes; then
   AC_DEFINE(HAVE_LIBELF, 1, [Define if libelf is available])
-  ELF_LIBS=-lelf
 fi
-AC_SUBST(ELF_LIBS)
d19 2
a20 2
 dnl ****************************************
 dnl *** platform dependent source checks ***
@


1.2
log
@Sync patch with upstream.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_ac,v 1.1 2012/03/31 18:27:35 ajacoutot Exp $
@


1.1
log
@Remove a non applicable XXX.
Use pkg-config(1) to deal with libelf cflags/ldflags instead of
patching.
@
text
@d1 1
a1 1
$OpenBSD$
d3 4
a6 4
From 14945449580d394b5e1e009f71792ccac51fc41e Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@gnome.org>
Date: Sat, 31 Mar 2012 18:20:19 +0000
Subject: gresource: libelf, try pkg-config first then fall-back to AC_CHECK_LIB
d8 3
a10 3
--- configure.ac.orig	Sat Mar 31 19:31:43 2012
+++ configure.ac	Sat Mar 31 19:34:28 2012
@@@@ -1810,12 +1810,13 @@@@ dnl ************************
d15 14
a28 3
+PKG_CHECK_MODULES([LIBELF], [libelf], [have_libelf=yes], [
+  AC_CHECK_LIB([elf], [elf_begin], have_libelf=yes, have_libelf=no)
+  ])
a31 1
+  LIBELF_LIBS=-lelf
@

