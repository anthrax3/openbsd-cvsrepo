head	1.5;
access;
symbols
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2015.04.05.09.00.53;	author ajacoutot;	state dead;
branches;
next	1.4;
commitid	XSbef12Ml3TWKiIy;

1.4
date	2015.03.27.16.00.00;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	Ss3iHv4vfdeLMqRd;

1.3
date	2015.03.21.11.34.10;	author jung;	state Exp;
branches;
next	1.2;
commitid	hYAo8HEaV0Azk4Fb;

1.2
date	2005.11.13.06.22.03;	author marcm;	state dead;
branches;
next	1.1;

1.1
date	2004.12.07.06.16.21;	author marcm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove dlopen() hack. guenther@@ is working on the underlying issue and it
makes it easier for people to test his diffs.
@
text
@$OpenBSD: patch-gmodule_gmodule-dl_c,v 1.4 2015/03/27 16:00:00 ajacoutot Exp $

XXX big bad hammer!

--- gmodule/gmodule-dl.c.orig	Sat Jun 28 19:02:43 2014
+++ gmodule/gmodule-dl.c	Fri Mar 20 13:20:33 2015
@@@@ -126,16 +126,18 @@@@ static void
 _g_module_close (gpointer handle,
 		 gboolean is_unref)
 {
-  /* are there any systems out there that have dlopen()/dlclose()
-   * without a reference count implementation?
+  /* Intentionally not dlclose()ing because it is safer to leave the library
+   * loaded in memory than to close it and possibly leave dangling pointers
+   * to things like atexit handlers, atfork handlers, blocks, etc.
+   *
+   * See https://trac.macports.org/ticket/45309 for an example from when
+   * a library used by a module added a new dependency which had an
+   * initializer which added a child atfork handler.  The result is that
+   * after closing the module, the system had a dangling pointer for the
+   * atfork handler which would at best crash on the child side of fork()
+   * and at worst lead to arbitray code execution of whatever happened to be
+   * at that location in memory at a later time in the process.
    */
-  is_unref |= 1;
-  
-  if (is_unref)
-    {
-      if (dlclose (handle) != 0)
-	g_module_set_error (fetch_dlerror (TRUE));
-    }
 }
 
 static gpointer
@


1.4
log
@Update to glib2-2.44.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-gmodule_gmodule-dl_c,v 1.3 2015/03/21 11:34:10 jung Exp $
@


1.3
log
@add a workaround patch to make gmodule dlclose a noop
for now, this unbreaks (at least) webkit based browsers like surf and vimb

issue reported to upstream in bug #746536

hints and debug pointers from sthen@@ czarkoff@@ and guenther@@
ok ajacoutot@@
@
text
@d1 4
a4 1
$OpenBSD$
@


1.2
log
@Update glib2 to 2.8.3.  Part of the update to the GTK 2.8 series.

Glib 2.8 Release notes are here:
http://mail.gnome.org/archives/gnome-announce-list/2005-August/msg00048.html
@
text
@d1 6
a6 6
$OpenBSD: patch-gmodule_gmodule-dl_c,v 1.1 2004/12/07 06:16:21 marcm Exp $
--- gmodule/gmodule-dl.c.orig	Thu Dec  2 20:46:34 2004
+++ gmodule/gmodule-dl.c	Thu Dec  2 20:47:44 2004
@@@@ -106,6 +106,7 @@@@ _g_module_open (const gchar *file_name,
 static gpointer
 _g_module_self (void)
d8 21
a28 11
+#ifndef __OpenBSD__
   gpointer handle;
   
   /* to query symbols from the program itself, special link options
@@@@ -117,6 +118,9 @@@@ _g_module_self (void)
     g_module_set_error (fetch_dlerror (TRUE));
   
   return handle;
+#else
+  return RTLD_DEFAULT;
+#endif
d31 1
a31 1
 static void
@


1.1
log
@Update to 2.4.8.

More importantly, pull out the NetBSD diff that dealt with
*BSDesque dlopen issues and, now that we have a working
RTLD_DEFAULT, go with the FreeBSD hack^H^H^H^H method which works
better.
@
text
@d1 1
a1 1
$OpenBSD$
@

