head	1.2;
access;
symbols
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2005.10.07.13.24.53;	author wilfried;	state dead;
branches;
next	1.1;

1.1
date	2004.01.06.11.16.53;	author wilfried;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to 2.0.6
@
text
@$OpenBSD: patch-sqlplusint_coldata1_hh,v 1.1 2004/01/06 11:16:53 wilfried Exp $
--- sqlplusint/coldata1.hh.orig	2001-05-19 18:44:48.000000000 +0200
+++ sqlplusint/coldata1.hh	2004-01-04 23:47:26.000000000 +0100
@@@@ -40,14 +40,14 @@@@ template <class Str>
 class mysql_ColData : public Str {
 private:
   mysql_type_info _type;
-	string buf;
+  std::string buf;
 	bool _null;
 public:
-  mysql_ColData (bool n, mysql_type_info t = mysql_type_info::string_type) 
+  explicit mysql_ColData (bool n, mysql_type_info t = mysql_type_info::string_type) 
     : _type(t), _null(n) {}
-  mysql_ColData (const char *str, 
+  explicit mysql_ColData (const char *str, 
 		 mysql_type_info t = mysql_type_info::string_type, bool n = false)
-    : Str(str), _type(t), _null(n) {buf=(string)str;}
+    : Str(str), _type(t), _null(n) {buf=(std::string)str;}
   mysql_ColData () {}
   mysql_type_info type() {return _type;}
   //: Returns the current mysql type of current item
@@@@ -72,7 +72,7 @@@@ public:
   // (Note, This is not an actual template)
   void it_is_null (void) {_null=true;}
 	inline const bool is_null(void) const {return _null;}
-	inline const string&  get_string(void) const {return buf;}
+	inline const std::string&  get_string(void) const {return buf;}
   operator cchar*() const {return buf.c_str();}
   operator  signed char() const {return conv((signed char)0);}
   operator  unsigned char() const {return conv((unsigned char)0);}
@@@@ -95,7 +95,7 @@@@ public:
 //: The Type that is returned by constant rows
 typedef mysql_ColData<const_string> ColData;
 //: The Type that is returned by mutable rows
-typedef mysql_ColData<string>       MutableColData;
+typedef mysql_ColData<std::string>       MutableColData;
 //: For backwards compatibility. Do not use.
 typedef ColData MysqlString;
 //: For backwards compatibility. Do not use.
@


1.1
log
@a few gcc3 patches
also move the header files to ${LOCALBASE}/include/mysql++
@
text
@d1 1
a1 1
$OpenBSD$
@

