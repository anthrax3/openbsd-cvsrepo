head	1.3;
access;
symbols
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.4
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2005.10.07.13.24.53;	author wilfried;	state dead;
branches;
next	1.2;

1.2
date	2004.01.06.11.16.53;	author wilfried;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.10.20.07.02;	author wilfried;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to 2.0.6
@
text
@$OpenBSD: patch-sqlplusint_query1_hh,v 1.2 2004/01/06 11:16:53 wilfried Exp $
--- sqlplusint/query1.hh.orig	2001-05-19 18:44:48.000000000 +0200
+++ sqlplusint/query1.hh	2004-01-04 23:31:02.000000000 +0100
@@@@ -25,24 +25,24 @@@@ private:
 
   int     affected_rows() const;
   int     insert_id ();
-  string  info ();
+  std::string  info ();
   bool    lock();
   void    unlock();
 
 public:
   Query(Connection *m, bool te = false) 
-    {mysql = m;errmsg=NULL;Success = true;throw_exceptions=te;} 
+    {mysql = m;errmsg=NULL;Success_ = true;throw_exceptions=te;} 
   //: Create a new query object attached to a connection.
   Query(const Query &q); //:
   Query& operator = (const Query &q); //:
 
-  string   error ();  //: The error message if the query was not successful.
+  std::string   error ();  //: The error message if the query was not successful.
   bool     success(); //: Displays the string currently in the buffer.
   // Same thing as string().
 
-  string   preview () {return str(def);}       //:
-  string   preview (parms &p) {return str(p);} //:
-	bool     exec (const string &str);
+  std::string   preview () {return str(def);}       //:
+  std::string   preview (parms &p) {return str(p);} //:
+	bool     exec (const std::string &str);
   //!dummy: MysqlResNSel execute (...);
   //: Executes the query in the string buffer.
   // Executes the query in the string buffer and returns a structure
@@@@ -67,7 +67,7 @@@@ public:
   //
   // The parameters can be anything in a valid SQLQuery::str.
 
-  mysql_query_define0(string,preview)
+  mysql_query_define0(std::string,preview)
 
   mysql_query_define1(ResNSel, execute)
   mysql_query_define1(ResUse, use)
@


1.2
log
@a few gcc3 patches
also move the header files to ${LOCALBASE}/include/mysql++
@
text
@d1 1
a1 1
$OpenBSD: patch-sqlplusint_query1_hh,v 1.1 2002/08/10 20:07:02 wilfried Exp $
@


1.1
log
@fix X11 define/typedef clashes as used in mysqlgui with new fltk
@
text
@d1 11
a11 4
$OpenBSD$
--- sqlplusint/query1.hh.orig	Sat May 19 18:44:48 2001
+++ sqlplusint/query1.hh	Fri Aug  9 16:10:16 2002
@@@@ -31,7 +31,7 @@@@ private:
d20 24
@

