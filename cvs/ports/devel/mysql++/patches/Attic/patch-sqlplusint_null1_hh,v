head	1.2;
access;
symbols
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2005.10.07.13.24.53;	author wilfried;	state dead;
branches;
next	1.1;

1.1
date	2004.01.06.11.16.53;	author wilfried;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to 2.0.6
@
text
@$OpenBSD: patch-sqlplusint_null1_hh,v 1.1 2004/01/06 11:16:53 wilfried Exp $
--- sqlplusint/null1.hh.orig	2001-05-19 18:44:48.000000000 +0200
+++ sqlplusint/null1.hh	2004-01-04 23:26:25.000000000 +0100
@@@@ -1,7 +1,7 @@@@
 #ifndef __null1_hh__
 #define __null1_hh__
 
-#include <ostream.h>
+#include <iostream>
 #include "exceptions.hh"
 #include "define_short"
 
@@@@ -18,19 +18,19 @@@@ const null_type null = null_type();
 //: Type to use for the behavior parameter for *Null<>*
 struct NullisNull {
   static null_type null_is() {return null_type();}
-  static ostream&  null_ostr(ostream& o) {o << "(NULL)"; return o;}
+  static std::ostream&  null_ostr(std::ostream& o) {o << "(NULL)"; return o;}
 };
 
 //: Type to use for the behavior parameter for *Null<>*
 struct NullisZero {
   static int   null_is() {return 0;}
-  static ostream& null_ostr(ostream &o) {o << 0; return o;}
+  static std::ostream& null_ostr(std::ostream &o) {o << 0; return o;}
 };
 
 //: Type to use for the behavior parameter for *Null<>*
 struct NullisBlank {
   static const char * null_is() {return "";}
-  static ostream& null_ostr(ostream &o) {o << ""; return o;}
+  static std::ostream& null_ostr(std::ostream &o) {o << ""; return o;}
 };
 
 //: Container class for holding null types.
@


1.1
log
@a few gcc3 patches
also move the header files to ${LOCALBASE}/include/mysql++
@
text
@d1 1
a1 1
$OpenBSD$
@

