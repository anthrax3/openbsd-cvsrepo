head	1.2;
access;
symbols
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2005.10.07.13.24.53;	author wilfried;	state dead;
branches;
next	1.1;

1.1
date	2004.01.06.11.16.53;	author wilfried;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to 2.0.6
@
text
@$OpenBSD: patch-sqlplusint_compare1_hh,v 1.1 2004/01/06 11:16:53 wilfried Exp $
--- sqlplusint/compare1.hh.orig	2001-05-19 18:44:48.000000000 +0200
+++ sqlplusint/compare1.hh	2004-01-05 00:31:52.000000000 +0100
@@@@ -1,11 +1,11 @@@@
 #ifndef __compare1_hh__
 #define __compare1_hh__
 
-#include <function.h>
+#include <functional>
 #include "row1.hh"
 
 template <class BinaryPred, class CmpType>
-class MysqlCmp : public unary_function<const MysqlRow&, bool>
+class MysqlCmp : public std::unary_function<const MysqlRow&, bool>
 {
 protected:
   unsigned int index;
@@@@ -19,6 +19,7 @@@@ public:
 template <class BinaryPred>
 class MysqlCmpCStr : public MysqlCmp<BinaryPred, const char *>
 {
+  class CmpType      cmp2;
 public:
   MysqlCmpCStr(uint i, const BinaryPred &f, const char* c) : MysqlCmp<BinaryPred, const char *> (i,f,c) {}
   bool operator () (const MysqlRow& cmp1) const 
@@@@ -36,7 +37,7 @@@@ mysql_cmp(uint i, const BinaryPred &func
   return MysqlCmp<BinaryPred, CmpType>(i, func, cmp2);
 }
 
-typedef binary_function<const char*, const char*, bool> bin_char_pred;
+typedef std::binary_function<const char*, const char*, bool> bin_char_pred;
 
 struct cstr_equal_to : bin_char_pred {
   bool operator () (const char *x, const char *y) const
@


1.1
log
@a few gcc3 patches
also move the header files to ${LOCALBASE}/include/mysql++
@
text
@d1 1
a1 1
$OpenBSD$
@

