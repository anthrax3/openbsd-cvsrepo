head	1.21;
access;
symbols
	OPENBSD_6_1:1.21.0.2
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.20.0.6
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.2
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.4
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_5:1.18.0.4
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.17.0.4
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.2
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.8
	OPENBSD_5_0:1.15.0.6
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.4
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.2
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.14.0.8
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.6
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.4
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.2
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.13.0.4
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.12.0.14
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.12
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.10
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.8
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.6
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2;
locks; strict;
comment	@# @;


1.21
date	2016.11.12.10.33.04;	author jca;	state Exp;
branches;
next	1.20;
commitid	xlbXEQBAsvEdbZ7E;

1.20
date	2015.06.27.13.21.29;	author jasper;	state Exp;
branches;
next	1.19;
commitid	RYUTuq1kB8YyIrSL;

1.19
date	2014.07.09.14.31.10;	author robert;	state dead;
branches;
next	1.18;
commitid	mP18koA32JvGEFq3;

1.18
date	2013.06.01.21.05.28;	author kurt;	state Exp;
branches;
next	1.17;

1.17
date	2012.03.24.21.21.18;	author kurt;	state Exp;
branches;
next	1.16;

1.16
date	2012.02.22.12.31.42;	author kurt;	state Exp;
branches;
next	1.15;

1.15
date	2010.07.08.23.00.18;	author robert;	state Exp;
branches;
next	1.14;

1.14
date	2008.04.01.17.41.13;	author kurt;	state Exp;
branches;
next	1.13;

1.13
date	2007.07.14.22.16.17;	author kili;	state Exp;
branches;
next	1.12;

1.12
date	2004.03.15.02.47.24;	author pvalchev;	state Exp;
branches;
next	1.11;

1.11
date	2004.03.01.13.36.42;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2003.10.16.13.46.30;	author todd;	state Exp;
branches;
next	1.9;

1.9
date	2003.10.16.04.11.15;	author todd;	state Exp;
branches;
next	1.8;

1.8
date	2003.10.15.17.11.36;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.15.12.58.11;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.23.20.56.08;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	2003.01.28.07.51.22;	author pvalchev;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.15.22.48.09;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.26.13.25.26;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.12.06.47.16;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.27.15.41.30;	author todd;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Update to gc-7.6.0 and libatomic_ops-7.4.4

Maintenance only update for libatomic_ops.  Bulk build and ok ajacoutot@@
@
text
@$OpenBSD: patch-include_private_gcconfig_h,v 1.20 2015/06/27 13:21:29 jasper Exp $

- All OpenBSD mips platforms are 64-bit, so correct the wordsize and alignment
- use __data_start instead of _fdata on OpenBSD/mips64

--- include/private/gcconfig.h.orig	Tue Aug  2 21:36:14 2016
+++ include/private/gcconfig.h	Thu Nov 10 04:14:50 2016
@@@@ -1712,14 +1712,15 @@@@
 #  endif
 #  ifdef OPENBSD
 #    define OS_TYPE "OPENBSD"
-#    define ALIGNMENT 4
+#    define CPP_WORDSZ 64
+#    define ALIGNMENT 8
 #     ifndef GC_OPENBSD_THREADS
 #      include <sys/param.h>
 #      include <uvm/uvm_extern.h>
 #      define STACKBOTTOM ((ptr_t)USRSTACK)
 #    endif
-     extern int _fdata[];
-#    define DATASTART ((ptr_t)_fdata)
+     extern int __data_start[];
+#    define DATASTART ((ptr_t)__data_start)
      extern int _end[];
 #    define DATAEND ((ptr_t)(&_end))
 #    define DYNAMIC_LOADING
@


1.20
log
@unbreak on mips64(el) by setting the right wordsize/alignment/datastart

with hint from miod@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 3
a8 3
--- include/private/gcconfig.h.orig	Sat Jun 27 13:48:41 2015
+++ include/private/gcconfig.h	Sat Jun 27 13:51:16 2015
@@@@ -1635,14 +1635,15 @@@@
d13 2
a14 2
+#     define CPP_WORDSZ 64
+#     define ALIGNMENT 8
d18 1
a18 1
 #      define STACKBOTTOM ((ptr_t) USRSTACK)
d24 1
a24 1
      extern char _end[];
@


1.19
log
@update to boehm-gc 7.4.2 and libatomic_ops 7.4.0 and remove all
the patches that got integrated upstream
@
text
@d1 9
a9 51
$OpenBSD: patch-include_private_gcconfig_h,v 1.18 2013/06/01 21:05:28 kurt Exp $
--- include/private/gcconfig.h.orig	Thu Aug  9 16:25:13 2012
+++ include/private/gcconfig.h	Tue Mar 19 19:39:39 2013
@@@@ -842,10 +842,11 @@@@
 #   ifdef OPENBSD
 #     define OS_TYPE "OPENBSD"
 #     define ALIGNMENT 4
-#     ifdef GC_OPENBSD_THREADS
-#      define UTHREAD_SP_OFFSET 268
-#     else
-#       include <sys/param.h>
+#     include <sys/param.h>
+#     if defined(GC_OPENBSD_THREADS) && OpenBSD < 201211
+#       define UTHREAD_SP_OFFSET 268
+#     endif
+#     ifndef GC_OPENBSD_THREADS
 #       include <uvm/uvm_extern.h>
 #       define STACKBOTTOM USRSTACK
 #     endif
@@@@ -1044,10 +1045,11 @@@@
 #   endif
 #   ifdef OPENBSD
 #     define OS_TYPE "OPENBSD"
-#     ifdef GC_OPENBSD_THREADS
-#      define UTHREAD_SP_OFFSET 232
-#     else
-#       include <sys/param.h>
+#     include <sys/param.h>
+#     if defined(GC_OPENBSD_THREADS) && OpenBSD < 201211
+#       define UTHREAD_SP_OFFSET 232
+#     endif
+#     ifndef GC_OPENBSD_THREADS
 #       include <uvm/uvm_extern.h>
 #       define STACKBOTTOM USRSTACK
 #     endif
@@@@ -1321,10 +1323,11 @@@@
 #   endif
 #   ifdef OPENBSD
 #       define OS_TYPE "OPENBSD"
-#       ifdef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       if defined(GC_OPENBSD_THREADS) && OpenBSD < 201211
 #         define UTHREAD_SP_OFFSET 176
-#       else
-#         include <sys/param.h>
+#       endif
+#       ifndef GC_OPENBSD_THREADS
 #         include <uvm/uvm_extern.h>
 #         define STACKBOTTOM USRSTACK
 #       endif
@@@@ -1556,10 +1559,11 @@@@
d12 5
a16 9
 #    define ALIGNMENT 4
-#    ifdef GC_OPENBSD_THREADS
+#    include <sys/param.h>
+#    if defined(GC_OPENBSD_THREADS) && OpenBSD < 201211
 #      define UTHREAD_SP_OFFSET 808
-#    else
-#      include <sys/param.h>
+#    endif
+#    ifndef GC_OPENBSD_THREADS
d18 1
a18 1
 #      define STACKBOTTOM USRSTACK
d20 7
a26 75
@@@@ -1634,10 +1638,11 @@@@
 #   endif /* LINUX */
 #  ifdef OPENBSD
 #     define OS_TYPE "OPENBSD"
-#     ifdef GC_OPENBSD_THREADS
+#     include <sys/param.h>
+#     if defined(GC_OPENBSD_THREADS) && OpenBSD < 201211
 #       define UTHREAD_SP_OFFSET 520
-#     else
-#       include <sys/param.h>
+#     endif
+#     ifndef GC_OPENBSD_THREADS
 #       include <uvm/uvm_extern.h>
 #       define STACKBOTTOM USRSTACK
 #     endif
@@@@ -1666,10 +1671,11 @@@@
 #   ifdef OPENBSD
 #       define OS_TYPE "OPENBSD"
 #       define ELF_CLASS ELFCLASS64
-#       ifdef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       if defined(GC_OPENBSD_THREADS) && OpenBSD < 201211
 #         define UTHREAD_SP_OFFSET 816
-#       else
-#         include <sys/param.h>
+#       endif
+#       ifndef GC_OPENBSD_THREADS
 #         include <uvm/uvm_extern.h>
 #         define STACKBOTTOM USRSTACK
 #       endif
@@@@ -1973,10 +1979,11 @@@@
 #   ifdef OPENBSD
 #     define ALIGNMENT 4
 #     define OS_TYPE "OPENBSD"
-#     ifdef GC_OPENBSD_THREADS
+#     include <sys/param.h>
+#     if defined(GC_OPENBSD_THREADS) && OpenBSD < 201211
 #       define UTHREAD_SP_OFFSET 176
-#     else
-#       include <sys/param.h>
+#     endif
+#     ifndef GC_OPENBSD_THREADS
 #       include <uvm/uvm_extern.h>
 #       define STACKBOTTOM USRSTACK
 #     endif
@@@@ -2032,10 +2039,11 @@@@
 #   endif
 #   ifdef OPENBSD
 #      define OS_TYPE "OPENBSD"
-#      ifdef GC_OPENBSD_THREADS
+#      include <sys/param.h>
+#      if defined(GC_OPENBSD_THREADS) && OpenBSD < 201211
 #        define UTHREAD_SP_OFFSET 332
-#      else
-#        include <sys/param.h>
+#      endif
+#      ifndef GC_OPENBSD_THREADS
 #        include <uvm/uvm_extern.h>
 #        define STACKBOTTOM USRSTACK
 #      endif
@@@@ -2099,10 +2107,11 @@@@
 #   ifdef OPENBSD
 #       define OS_TYPE "OPENBSD"
 #       define ELF_CLASS ELFCLASS64
-#       ifdef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       if defined(GC_OPENBSD_THREADS) && OpenBSD < 201211
 #         define UTHREAD_SP_OFFSET 400
-#       else
-#         include <sys/param.h>
+#       endif
+#       ifndef GC_OPENBSD_THREADS
 #         include <uvm/uvm_extern.h>
 #         define STACKBOTTOM USRSTACK
 #       endif
@


1.18
log
@- Update to 7.2d. Tested on i386, amd64, sparc64, macppc, hppa and alpha.
okay and testing by sthen, landry, thanks!
@
text
@d1 1
a1 1
$OpenBSD$
@


1.17
log
@Change suspend/resume signals to fix one problem with lang/mono. okay todd@@
@
text
@d1 15
a15 111
--- include/private/gcconfig.h.orig	Thu Jun 28 20:00:09 2007
+++ include/private/gcconfig.h	Fri Mar 16 17:43:45 2012
@@@@ -64,7 +64,7 @@@@
 /* Determine the machine type: */
 # if defined(__arm__) || defined(__thumb__)
 #    define ARM32
-#    if !defined(LINUX) && !defined(NETBSD)
+#    if !defined(LINUX) && !defined(NETBSD) && !defined(OPENBSD)
 #      define NOSYS
 #      define mach_type_known
 #    endif
@@@@ -75,14 +75,18 @@@@
 # if defined(hp9000s300)
 #    error M68K based HP machines no longer supported.
 # endif
-# if defined(OPENBSD) && defined(m68k)
-#    define M68K
-#    define mach_type_known
-# endif
 # if defined(OPENBSD) && defined(__sparc__)
 #    define SPARC
 #    define mach_type_known
 # endif
+# if defined(OPENBSD) && defined(__arm__)
+#    define ARM32
+#    define mach_type_known
+# endif
+# if defined(OPENBSD) && defined(__sh__)
+#    define SH
+#    define mach_type_known
+# endif
 # if defined(NETBSD) && (defined(m68k) || defined(__m68k__))
 #    define M68K
 #    define mach_type_known
@@@@ -99,7 +103,7 @@@@
 #    define SH
 #    define mach_type_known
 # endif
-# if defined(vax)
+# if defined(vax) || defined(__vax__)
 #    define VAX
 #    ifdef ultrix
 #	define ULTRIX
@@@@ -117,7 +121,7 @@@@
 #    if defined(nec_ews) || defined(_nec_ews)
 #      define EWS4800
 #    endif
-#    if !defined(LINUX) && !defined(EWS4800) && !defined(NETBSD)
+#    if !defined(LINUX) && !defined(EWS4800) && !defined(NETBSD) && !defined(OPENBSD)
 #      if defined(ultrix) || defined(__ultrix)
 #	 define ULTRIX
 #      else
@@@@ -198,7 +202,7 @@@@
 # if defined(_PA_RISC1_0) || defined(_PA_RISC1_1) || defined(_PA_RISC2_0) \
      || defined(hppa) || defined(__hppa__)
 #   define HP_PA
-#   if !defined(LINUX) && !defined(HPUX)
+#   if !defined(LINUX) && !defined(HPUX) && !defined(OPENBSD)
 #     define HPUX
 #   endif
 #   define mach_type_known
@@@@ -219,6 +223,10 @@@@
 #    define I386
 #    define mach_type_known
 # endif
+# if defined(OPENBSD) && defined(__amd64__)
+#    define X86_64
+#    define mach_type_known
+# endif
 # if defined(LINUX) && defined(__x86_64__)
 #    define X86_64
 #    define mach_type_known
@@@@ -290,6 +298,11 @@@@
 #   define MACOS
 #   define mach_type_known
 # endif
+# if defined(__OpenBSD__) && (defined(__powerpc__))
+#   define POWERPC
+#   define OPENBSD
+#   define mach_type_known
+# endif
 # if defined(macosx) || (defined(__APPLE__) && defined(__MACH__))
 #   define DARWIN
 #   if defined(__ppc__)  || defined(__ppc64__)
@@@@ -645,17 +658,6 @@@@
 # ifdef M68K
 #   define MACH_TYPE "M68K"
 #   define ALIGNMENT 2
-#   ifdef OPENBSD
-#	define OS_TYPE "OPENBSD"
-#	define HEURISTIC2
-#	ifdef __ELF__
-#	  define DATASTART GC_data_start
-#	  define DYNAMIC_LOADING
-#	else
-	  extern char etext[];
-#	  define DATASTART ((ptr_t)(etext))
-#       endif
-#   endif
 #   ifdef NETBSD
 #	define OS_TYPE "NETBSD"
 #	define HEURISTIC2
@@@@ -788,6 +790,22 @@@@
 	 should be looked into some more */
 #     define NO_PTHREAD_TRYLOCK
 #   endif
+#   ifdef OPENBSD
+#     define OS_TYPE "OPENBSD"
+#     define ALIGNMENT 4
+#     define SIG_SUSPEND SIGXFSZ
+#     define SIG_THR_RESTART SIGXCPU
d17 4
a20 14
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#     endif
+      extern int __data_start[];
+#     define DATASTART ((ptr_t)(__data_start))
+      extern char _end[];
+#     define DATAEND ((ptr_t)(&_end))
+#     define DYNAMIC_LOADING
+#   endif
 #   ifdef FREEBSD
 #       define ALIGNMENT 4
 #       define OS_TYPE "FREEBSD"
@@@@ -955,9 +973,18 @@@@
d24 8
a31 5
-#     define STACKBOTTOM ((ptr_t) 0xf8000000)
-      extern int etext[];
-#     define DATASTART ((ptr_t)(etext))
+#     define SIG_SUSPEND SIGXFSZ
+#     define SIG_THR_RESTART SIGXCPU
d33 4
a36 13
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#     endif
+      extern int __data_start[];
+#     define DATASTART ((ptr_t)(__data_start))
+      extern char _end[];
+#     define DATAEND ((ptr_t)(&_end))
+#     define DYNAMIC_LOADING
 #   endif
 #   ifdef NETBSD
 #     define OS_TYPE "NETBSD"
@@@@ -1203,6 +1230,18 @@@@
d39 2
a40 4
 #	define OS_TYPE "OPENBSD"
+#       define SIG_SUSPEND SIGXFSZ
+#       define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
d42 19
a60 2
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
a61 26
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
 #   endif
 #   ifdef FREEBSD
 #	define OS_TYPE "FREEBSD"
@@@@ -1238,7 +1277,7 @@@@
 #   ifdef BSDI
 #	define OS_TYPE "BSDI"
 #   endif
-#   if defined(OPENBSD) || defined(NETBSD) \
+#   if defined(NETBSD) \
         || defined(THREE86BSD) || defined(BSDI)
 #	define HEURISTIC2
 	extern char etext[];
@@@@ -1403,6 +1442,22 @@@@
 #       define STACKBOTTOM ((ptr_t) 0x7ffff000)
 #     endif /* _ELF_ */
 #  endif
+#  ifdef OPENBSD
+#	define OS_TYPE "OPENBSD"
+#       define ALIGNMENT 4
+#       define SIG_SUSPEND SIGXFSZ
+#       define SIG_THR_RESTART SIGXCPU
d63 35
a97 15
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int _fdata[];
+#       define DATASTART ((ptr_t)(_fdata))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#  endif
 #  if defined(NONSTOP)
 #    define CPP_WORDSZ 32
 #    define OS_TYPE "NONSTOP"
@@@@ -1423,7 +1478,7 @@@@
 #     define CPP_WORDSZ 32
d99 11
a109 5
 #   endif
-#   if !defined(GC_HPUX_THREADS) && !defined(GC_LINUX_THREADS)
+#   if !defined(GC_HPUX_THREADS) && !defined(GC_LINUX_THREADS) && !defined(OPENBSD)
 #     ifndef LINUX /* For now. */
 #       define MPROTECT_VDB
d111 1
a111 23
@@@@ -1472,6 +1527,21 @@@@
       extern int _end[];
 #     define DATAEND (&_end)
 #   endif /* LINUX */
+#  ifdef OPENBSD
+#	define OS_TYPE "OPENBSD"
+#       define SIG_SUSPEND SIGXFSZ
+#       define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#  endif
 # endif /* HP_PA */
 
 # ifdef ALPHA
@@@@ -1489,15 +1559,19 @@@@
d114 27
a140 102
 #	define OS_TYPE "OPENBSD"
-#	define HEURISTIC2
-#   	ifdef __ELF__	/* since OpenBSD/Alpha 2.9 */
-#	   define DATASTART GC_data_start
-#   	   define ELFCLASS32 32
-#   	   define ELFCLASS64 64
-#   	   define ELF_CLASS ELFCLASS64
-#       else		/* ECOFF, until OpenBSD/Alpha 2.7 */
-#   	   define DATASTART ((ptr_t) 0x140000000)
-#   	endif
+#	define ELF_CLASS ELFCLASS64
+#       define SIG_SUSPEND SIGXFSZ
+#       define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
 #   endif
 #   ifdef FREEBSD
 #	define OS_TYPE "FREEBSD"
@@@@ -1665,6 +1739,7 @@@@
 #   ifdef CX_UX
 #	define OS_TYPE "CX_UX"
 #       define DATASTART ((((word)etext + 0x3fffff) & ~0x3fffff) + 0x10000)
+#       define STACKBOTTOM ((char*)0xf0000000) /* determined empirically */
 #   endif
 #   ifdef  DGUX
 #	define OS_TYPE "DGUX"
@@@@ -1764,6 +1839,22 @@@@
 #     define OS_TYPE "MSWINCE"
 #     define DATAEND /* not needed */
 #   endif
+#   ifdef OPENBSD
+#     define ALIGNMENT 4
+#     define OS_TYPE "OPENBSD"
+#     define SIG_SUSPEND SIGXFSZ
+#     define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#   endif
 #   ifdef NOSYS
       /* __data_start is usually defined in the target linker script.  */
       extern int __data_start[];
@@@@ -1807,6 +1898,21 @@@@
 #      define DATASTART GC_data_start
 #      define DYNAMIC_LOADING
 #   endif
+#   ifdef OPENBSD
+#	define OS_TYPE "OPENBSD"
+#       define SIG_SUSPEND SIGXFSZ
+#       define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#   endif
 # endif
  
 # ifdef SH4
@@@@ -1838,6 +1944,22 @@@@
 #   define CPP_WORDSZ 64
 #   ifndef HBLKSIZE
 #     define HBLKSIZE 4096
+#   endif
+#   ifdef OPENBSD
+#       define OS_TYPE "OPENBSD"
+#       define ELF_CLASS ELFCLASS64
+#       define SIG_SUSPEND SIGXFSZ
+#       define SIG_THR_RESTART SIGXCPU
+#    ifndef GC_OPENBSD_THREADS
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern int __data_start[];
+#       define DATASTART ((ptr_t)(__data_start))
+        extern char _end[];
+#       define DATAEND ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
 #   endif
 #   define CACHE_LINE_SIZE 64
 #   ifdef LINUX
@


1.16
log
@Remove uthreads work-arounds. Works ok with rthreads now.
Tested by sthen@@ and espie@@
@
text
@d2 1
a2 1
+++ include/private/gcconfig.h	Mon Feb 20 12:54:53 2012
d110 2
a111 2
+#     define SIG_SUSPEND SIGUSR1
+#     define SIG_THR_RESTART SIGUSR2
d133 2
a134 2
+#     define SIG_SUSPEND SIGUSR1
+#     define SIG_THR_RESTART SIGUSR2
d152 2
a153 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
d183 2
a184 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
d214 2
a215 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
d244 2
a245 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
d274 2
a275 2
+#     define SIG_SUSPEND SIGUSR1
+#     define SIG_THR_RESTART SIGUSR2
d296 2
a297 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
d320 2
a321 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
@


1.15
log
@Bump UTHREAD_SP_OFFSET to the correct value on i386 after the layout change
in struct _machdep_state from libpthread.
The offset is hardcoded in boehm-gc because it's a private struct so we
cannot use offsetof(). This will probably not change soon again but I am
writing this as a note for people who will run into the same problem in
the future.
All the regression tests are passing now and mono builds fine too.
Thanks to kurt@@ for pointers.
@
text
@d1 2
a2 2
--- include/private/gcconfig.h.orig	Fri Jun 29 02:00:09 2007
+++ include/private/gcconfig.h	Fri Jul  9 00:52:27 2010
d110 3
a112 3
+#     ifdef GC_OPENBSD_THREADS
+#	define UTHREAD_SP_OFFSET 268
+#     else
d133 3
a135 3
+#     ifdef GC_OPENBSD_THREADS
+#	define UTHREAD_SP_OFFSET 232
+#     else
d152 3
a154 3
+#    ifdef GC_OPENBSD_THREADS
+#	define UTHREAD_SP_OFFSET 192
+#    else
d183 3
a185 3
+#    ifdef GC_OPENBSD_THREADS
+#	define UTHREAD_SP_OFFSET 808
+#    else
d214 3
a216 3
+#    ifdef GC_OPENBSD_THREADS
+#	define UTHREAD_SP_OFFSET 520
+#    else
d244 3
a246 3
+#    ifdef GC_OPENBSD_THREADS
+#	define UTHREAD_SP_OFFSET 816
+#    else
d274 3
a276 3
+#    ifdef GC_OPENBSD_THREADS
+#	define UTHREAD_SP_OFFSET 176
+#    else
d296 3
a298 3
+#    ifdef GC_OPENBSD_THREADS
+#	define UTHREAD_SP_OFFSET 332
+#    else
d320 3
a322 3
+#    ifdef GC_OPENBSD_THREADS
+#	define UTHREAD_SP_OFFSET 400
+#    else
@


1.14
log
@- use __data_start symbol to find the beginning of the data sections
and adjust boehm-gc to deal with any number of holes that may appear
between __data_start and _end. (requires -current binutils)
- work-around libpthread bugs that prevent sigsuspend() from working
in a signal handler by using pthread_suspend_np() + an arch/libpthread
specific offset to obtain the suspended thread's stack pointer.

thanks to sthen@@ and jasper@@ for access to other arches. discussed
with todd@@
@
text
@d1 2
a2 2
--- include/private/gcconfig.h.orig	Fri Jun 29 01:00:09 2007
+++ include/private/gcconfig.h	Mon Feb 11 15:58:46 2008
d153 1
a153 1
+#	define UTHREAD_SP_OFFSET 176
@


1.13
log
@
Update to 7.0.

Most work done by kurt@@, who got bleeding eyes and has been trapped
into pthread issues because some of us (me and Stuart Henderson)
were slopyy and applied some patches only partial. A big sorry to
kurt@@ for this waste of time!

Tested by many. Intermediate ok's (IIRC) from kurt@@, naddy@@ and todd@@.
@
text
@d2 1
a2 1
+++ include/private/gcconfig.h	Fri Jul 13 20:11:10 2007
d12 9
a20 1
@@@@ -83,6 +83,10 @@@@
d28 4
d44 18
d73 1
a73 1
@@@@ -290,6 +298,16 @@@@
a81 5
+# if defined(__OpenBSD__) && (defined(__mc68020__) || defined(__mc68020))
+#   define M68K
+#   define OPENBSD
+#   define mach_type_known
+# endif
d85 3
a87 12
@@@@ -358,6 +376,10 @@@@
     /* DGUX defined */
 #   define mach_type_known
 # endif
+# if defined(OPENBSD) && defined(__m88k__)
+#   define M88K
+#   define mach_type_known
+# endif
 # if defined(_WIN32_WCE)
     /* SH3, SH4, MIPS already defined for corresponding architectures */
 #   if defined(SH3) || defined(SH4)
@@@@ -647,14 +669,22 @@@@
d89 2
a90 2
 #   ifdef OPENBSD
 #	define OS_TYPE "OPENBSD"
d99 1
a99 17
+#       define HAVE_PUSH_REGS
+#    ifdef GC_OPENBSD_THREADS
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
+#    else
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern char *__progname[];
+#       define DATASTART ((ptr_t)&__progname)
+#       define DATAEND GC_data_end1
+#	define DATASTART2 GC_data_start2
+        extern char _end[];
+#	define DATAEND2 ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
 #   endif
d102 2
a103 1
@@@@ -788,6 +818,25 @@@@
d111 1
a111 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
d117 2
a118 4
+      extern char *__progname[];
+#     define DATASTART ((ptr_t)&__progname)
+#     define DATAEND GC_data_end1
+#     define DATASTART2 GC_data_start2
d120 1
a120 1
+#     define DATAEND2 ((ptr_t)(&_end))
d126 1
a126 1
@@@@ -955,9 +1004,21 @@@@
d134 1
a134 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
d140 2
a141 4
+      extern char *__progname[];
+#     define DATASTART ((ptr_t)&__progname)
+#     define DATAEND GC_data_end1
+#     define DATASTART2 GC_data_start2
d143 1
a143 1
+#     define DATAEND2 ((ptr_t)(&_end))
d148 1
a148 1
@@@@ -1203,6 +1264,21 @@@@
d153 1
a153 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
d159 2
a160 4
+        extern char *__progname[];
+#       define DATASTART ((ptr_t)&__progname)
+#       define DATAEND GC_data_end1
+#	define DATASTART2 GC_data_start2
d162 1
a162 1
+#	define DATAEND2 ((ptr_t)(&_end))
d167 1
a167 1
@@@@ -1238,7 +1314,7 @@@@
d176 55
a230 1
@@@@ -1489,15 +1565,22 @@@@
d245 1
a245 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
d251 2
a252 4
+        extern char *__progname[];
+#       define DATASTART ((ptr_t)&__progname)
+#       define DATAEND GC_data_end1
+#	define DATASTART2 GC_data_start2
d254 1
a254 1
+#	define DATAEND2 ((ptr_t)(&_end))
d259 1
a259 22
@@@@ -1662,9 +1745,28 @@@@
 #   define MACH_TYPE "M88K"
 #   define ALIGNMENT 4
     extern int etext[];
+#   ifdef OPENBSD
+#	define OS_TYPE "OPENBSD"
+#    ifdef GC_OPENBSD_THREADS
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
+#    else
+#       include <sys/param.h>
+#       include <uvm/uvm_extern.h>
+#       define STACKBOTTOM USRSTACK
+#    endif
+        extern char *__progname[];
+#       define DATASTART ((ptr_t)&__progname)
+#       define DATAEND GC_data_end1
+#	define DATASTART2 GC_data_start2
+        extern char _end[];
+#	define DATAEND2 ((ptr_t)(&_end))
+#       define DYNAMIC_LOADING
+#   endif
d262 1
a262 2
-#       define DATASTART ((((word)etext + 0x3fffff) & ~0x3fffff) + 0x10000)
+//#       define DATASTART ((((word)etext + 0x3fffff) & ~0x3fffff) + 0x10000)
d267 1
a267 1
@@@@ -1764,6 +1866,25 @@@@
d275 1
a275 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
d281 2
a282 4
+        extern char *__progname[];
+#       define DATASTART ((ptr_t)&__progname)
+#       define DATAEND GC_data_end1
+#	define DATASTART2 GC_data_start2
d284 1
a284 1
+#	define DATAEND2 ((ptr_t)(&_end))
d290 23
a312 1
@@@@ -1838,6 +1959,25 @@@@
d321 1
a321 2
+#       define SIG_SUSPEND SIGUSR1
+#       define SIG_THR_RESTART SIGUSR2
d327 2
a328 4
+        extern char *__progname[];
+#       define DATASTART ((ptr_t)&__progname)
+#       define DATAEND GC_data_end1
+#	define DATASTART2 GC_data_start2
d330 1
a330 1
+#	define DATAEND2 ((ptr_t)(&_end))
@


1.12
log
@support amd64
tested with w3m successfully
ok maintainer todd
@
text
@d1 5
a5 4
$OpenBSD: patch-include_private_gcconfig_h,v 1.11 2004/03/01 13:36:42 miod Exp $
--- include/private/gcconfig.h.orig	2003-06-16 20:01:23.000000000 -0600
+++ include/private/gcconfig.h	2004-03-14 14:19:44.000000000 -0700
@@@@ -97,7 +97,7 @@@@
d7 18
d32 1
a32 1
@@@@ -216,6 +216,10 @@@@
d43 3
a45 3
@@@@ -278,6 +282,16 @@@@
 #    define POWERPC
 #    define mach_type_known
d57 4
a60 4
 # if defined(__APPLE__) && defined(__MACH__) && defined(__i386__)
 #    define DARWIN
 #    define I386
@@@@ -326,6 +340,10 @@@@
d71 2
a72 1
@@@@ -595,8 +613,8 @@@@
d75 24
a98 5
 #	define HEURISTIC2
-	extern char etext[];
-#	define DATASTART ((ptr_t)(etext))
+#	define DATASTART GC_data_start
+#	define USE_GENERIC_PUSH_REGS
d102 3
a104 3
@@@@ -761,6 +779,14 @@@@
 #     define DATASTART GC_data_start
 #     define DYNAMIC_LOADING
d107 1
d109 14
a122 4
+#     define OS_TYPE "OPENBSD"
+#     define HEURISTIC2
+      extern char etext;
+#     define DATASTART GC_data_start
d125 4
a128 4
 #   ifdef NOSYS
 #     define ALIGNMENT 4
 #     define OS_TYPE "NOSYS"
@@@@ -897,9 +923,9 @@@@
d135 14
a148 2
+#     define HEURISTIC2
+#     define DATASTART GC_data_start
d153 1
a153 1
@@@@ -1145,6 +1171,9 @@@@
d157 14
a170 2
+#	define HEURISTIC2
+#       define DATASTART GC_data_start
d175 1
a175 1
@@@@ -1173,7 +1202,7 @@@@
d184 1
a184 15
@@@@ -1435,7 +1464,7 @@@@
 #   define MACH_TYPE "ALPHA"
 #   define ALIGNMENT 8
 #   define CPP_WORDSZ 64
-#   ifndef LINUX
+#   if !defined(LINUX)
 #     define USE_GENERIC_PUSH_REGS
       /* Gcc and probably the DEC/Compaq compiler spill pointers to preserved */
       /* fp registers in some cases when the target is a 21264.  The assembly */
@@@@ -1449,6 +1478,7 @@@@
 #	define ELFCLASS32 32
 #	define ELFCLASS64 64
 #	define ELF_CLASS ELFCLASS64
+#   	define CPP_WORDSZ 64
 #       define DYNAMIC_LOADING
d187 4
a190 4
@@@@ -1456,9 +1486,8 @@@@
 #	define HEURISTIC2
 #   	ifdef __ELF__	/* since OpenBSD/Alpha 2.9 */
 #	   define DATASTART GC_data_start
d193 25
a217 6
 #   	   define ELF_CLASS ELFCLASS64
+#	   define DYNAMIC_LOADING
 #       else		/* ECOFF, until OpenBSD/Alpha 2.7 */
 #   	   define DATASTART ((ptr_t) 0x140000000)
 #   	endif
@@@@ -1614,16 +1643,22 @@@@
a218 1
 #   define ALIGN_DOUBLE
d222 15
a236 2
+#	define HEURISTIC2
+#       define DATASTART GC_data_start
d240 2
a241 1
 #       define DATASTART ((((word)etext + 0x3fffff) & ~0x3fffff) + 0x10000)
d246 3
a248 3
 	extern ptr_t GC_SysVGetDataStart();
 #       define DATASTART GC_SysVGetDataStart(0x10000, etext)
+#       define STACKBOTTOM ((char*)0xf0000000) /* determined empirically */
d250 27
a276 8
-#   define STACKBOTTOM ((char*)0xf0000000) /* determined empirically */
 # endif
 
 # ifdef S370
@@@@ -1765,6 +1800,13 @@@@
 #   endif
 #   define CACHE_LINE_SIZE 64
 #   define USE_GENERIC_PUSH_REGS
a278 2
+#       define DATASTART GC_data_start
+#       define HEURISTIC2
d280 14
d295 2
a296 1
+#   endif
a297 2
 #	define OS_TYPE "LINUX"
 #       define LINUX_STACKBOTTOM
@


1.11
log
@OpenBSD/mvme88k support, prompted by todd@@

maintainer ok
@
text
@d1 3
a3 3
$OpenBSD: patch-include_private_gcconfig_h,v 1.10 2003/10/16 13:46:30 todd Exp $
--- include/private/gcconfig.h.orig	2003-06-17 02:01:23.000000000 +0000
+++ include/private/gcconfig.h	2003-12-30 11:31:53.000000000 +0000
d13 12
a24 1
@@@@ -278,6 +278,16 @@@@
d41 1
a41 1
@@@@ -326,6 +336,10 @@@@
d52 1
a52 1
@@@@ -595,8 +609,8 @@@@
d63 1
a63 1
@@@@ -761,6 +775,14 @@@@
d78 1
a78 1
@@@@ -897,9 +919,9 @@@@
d91 1
a91 1
@@@@ -1145,6 +1167,9 @@@@
d101 1
a101 1
@@@@ -1173,7 +1198,7 @@@@
d110 1
a110 1
@@@@ -1435,7 +1460,7 @@@@
d119 1
a119 1
@@@@ -1449,6 +1474,7 @@@@
d127 1
a127 1
@@@@ -1456,9 +1482,8 @@@@
d138 1
a138 1
@@@@ -1614,16 +1639,22 @@@@
d162 14
@


1.10
log
@really, fix this for alpha
@
text
@d1 4
a4 15
$OpenBSD: patch-include_private_gcconfig_h,v 1.9 2003/10/16 04:11:15 todd Exp $
--- include/private/gcconfig.h.orig	2003-06-16 21:01:23.000000000 -0500
+++ include/private/gcconfig.h	2003-10-16 04:53:04.000000000 -0500
@@@@ -59,6 +59,10 @@@@
 #    define FREEBSD
 # endif
 
+# if defined(__OpenBSD__)
+#    define OPENBSD
+# endif
+
 /* Determine the machine type: */
 # if defined(__XSCALE__)
 #    define ARM32
@@@@ -97,7 +101,7 @@@@
d13 1
a13 1
@@@@ -278,6 +282,16 @@@@
d30 11
d127 24
@


1.9
log
@teach boehm-gc about m68k
@
text
@d1 1
a1 1
$OpenBSD: patch-include_private_gcconfig_h,v 1.8 2003/10/15 17:11:36 todd Exp $
d3 1
a3 1
+++ include/private/gcconfig.h	2003-10-16 02:31:36.000000000 -0500
d104 1
a104 1
+#   if !defined(LINUX) && !defined(OPENBSD)
d116 6
a121 3
@@@@ -1459,6 +1485,7 @@@@
 #   	   define ELFCLASS32 32
 #   	   define ELFCLASS64 64
d123 1
a123 1
+#          define DYNAMIC_LOADING
@


1.8
log
@teach boehm-gc about alpha having shared libs
@
text
@d1 3
a3 3
$OpenBSD: patch-include_private_gcconfig_h,v 1.7 2003/10/15 12:58:11 todd Exp $
--- include/private/gcconfig.h.orig	2003-10-15 06:45:07.000000000 -0500
+++ include/private/gcconfig.h	2003-10-15 06:47:15.000000000 -0500
d24 1
a24 1
@@@@ -278,6 +282,11 @@@@
d33 5
d41 12
a52 1
@@@@ -761,6 +770,14 @@@@
d67 1
a67 1
@@@@ -897,9 +914,9 @@@@
d80 1
a80 1
@@@@ -1145,6 +1162,9 @@@@
d90 1
a90 1
@@@@ -1173,7 +1193,7 @@@@
d99 1
a99 1
@@@@ -1435,7 +1455,7 @@@@
d108 1
a108 1
@@@@ -1449,6 +1469,7 @@@@
d116 1
a116 1
@@@@ -1459,6 +1480,7 @@@@
@


1.7
log
@Thanks to marius at monkey dot org for unbreaking this port.
Thanks to Andrew Delgleish for updating this to 6.2
patches submitted upstream.
@
text
@d1 3
a3 3
$OpenBSD: patch-include_private_gcconfig_h,v 1.6 2003/04/23 20:56:08 todd Exp $
--- include/private/gcconfig.h.orig	2003-06-17 12:01:23.000000000 +1000
+++ include/private/gcconfig.h	2003-10-15 13:40:09.000000000 +1000
d92 1
a92 1
@@@@ -1449,6 +1469,14 @@@@
a96 7
+#       define DYNAMIC_LOADING
+#   endif
+#   ifdef OPENBSD
+#	define OS_TYPE "OPENBSD"
+#	define HEURISTIC2
+#	define DATASTART GC_data_start
+#	define ELF_CLASS ELFCLASS64
d100 8
@


1.6
log
@at least allow alpha to link against libgc.a
@
text
@d1 4
a4 4
$OpenBSD: patch-include_private_gcconfig_h,v 1.5 2003/01/28 07:51:22 pvalchev Exp $
--- include/private/gcconfig.h.orig	Tue Aug  6 14:49:22 2002
+++ include/private/gcconfig.h	Wed Apr 23 16:38:27 2003
@@@@ -51,6 +51,10 @@@@
d15 1
a15 1
@@@@ -89,7 +93,7 @@@@
d24 1
a24 1
@@@@ -270,6 +274,11 @@@@
d34 1
a34 1
 #    define MACOSX
d36 1
a36 1
@@@@ -726,6 +735,14 @@@@
d51 1
a51 1
@@@@ -861,9 +878,9 @@@@
d64 20
a83 1
@@@@ -1380,7 +1397,7 @@@@
d92 1
a92 2
@@@@ -1393,6 +1410,14 @@@@
 #	define DATASTART GC_data_start
d95 1
a95 1
+#	define ELF_CLASS ELFCLASS64
d103 1
a103 1
 #	define ELF_CLASS ELFCLASS64
d106 1
@


1.5
log
@fix build on vax, seems to work too (at least passes regress)
@
text
@d1 3
a3 3
$OpenBSD: patch-include_private_gcconfig_h,v 1.4 2003/01/15 22:48:09 marc Exp $
--- include/private/gcconfig.h.orig	Tue Aug  6 12:49:22 2002
+++ include/private/gcconfig.h	Sun Jan 26 14:11:50 2003
d64 9
@


1.4
log
@
sparc/sparc64 elf config.   drahn@@ says it works on sparc64.  OK todd@@
@
text
@d1 3
a3 3
$OpenBSD: patch-include_private_gcconfig_h,v 1.3 2002/10/26 13:25:26 todd Exp $
--- include/private/gcconfig.h.orig	Tue Aug  6 11:49:22 2002
+++ include/private/gcconfig.h	Thu Dec  5 21:33:05 2002
d15 9
@


1.3
log
@thanks to drahn@@ update to gc6.1 (misc bugfixes, I've heard good things, etc,
best of all, you can drop this in on shared archs as a replacement for 6.0,
I've tested opencm and w3m)
@
text
@d1 3
a3 3
$OpenBSD$
--- include/private/gcconfig.h.orig	Tue Aug  6 13:49:22 2002
+++ include/private/gcconfig.h	Fri Oct 25 12:32:52 2002
d42 13
@


1.2
log
@fix VAX support
@
text
@d1 5
a5 5
$OpenBSD: patch-include_private_gcconfig_h,v 1.1 2002/08/27 15:41:30 todd Exp $
--- include/private/gcconfig.h.orig	Thu Jul 26 11:28:57 2001
+++ include/private/gcconfig.h	Tue Jul 23 08:22:31 2002
@@@@ -33,6 +33,10 @@@@
 #    define NETBSD
d13 4
a16 7
 # if defined(sun) && defined(mc68000)
 #    define M68K
@@@@ -46,12 +50,14 @@@@
 # endif
 # if defined(__OpenBSD__) && defined(m68k)
 #    define M68K
-#    define OPENBSD
d19 4
a22 4
 # if defined(__OpenBSD__) && defined(__sparc__)
 #    define SPARC
-#    define OPENBSD
+#    define mach_type_known
d24 4
a27 32
+# if defined(__OpenBSD__) && defined(__powerpc__)
+#    define POWERPC
 #    define mach_type_known
 # endif
 # if defined(__NetBSD__) && defined(m68k)
@@@@ -66,7 +72,7 @@@@
 #    define ARM32
 #    define mach_type_known
 # endif
-# if defined(vax)
+# if defined(vax) || defined(__vax__)
 #    define VAX
 #    ifdef ultrix
 #	define ULTRIX
@@@@ -196,7 +202,7 @@@@
 # endif
 # if defined(__alpha) || defined(__alpha__)
 #   define ALPHA
-#   if !defined(LINUX) && !defined(NETBSD)
+#   if !defined(LINUX) && !defined(NETBSD) && !defined(OPENBSD)
 #     define OSF1	/* a.k.a Digital Unix */
 #   endif
 #   define mach_type_known
@@@@ -241,7 +247,6 @@@@
 # endif
 # if defined(__OpenBSD__) && (defined(i386) || defined(__i386__))
 #   define I386
-#   define OPENBSD
 #   define mach_type_known
 # endif
 # if defined(__FreeBSD__) && (defined(i386) || defined(__i386__))
@@@@ -664,6 +669,14 @@@@
d42 1
a42 42
@@@@ -793,9 +806,18 @@@@
 #   endif
 #   ifdef OPENBSD
 #     define OS_TYPE "OPENBSD"
-#     define STACKBOTTOM ((ptr_t) 0xf8000000)
-      extern int etext;
-#     define DATASTART ((ptr_t)(&etext))
+#     define HEURISTIC2
+#     ifdef __arch64__
+#	define CPP_WORDSZ 64
+#       define ELF_CLASS ELFCLASS64
+#     endif
+#     ifdef __ELF__
+#	define DATASTART GC_data_start
+#	define DYNAMIC_LOADING
+#     else
+	extern char etext;
+#	define DATASTART ((ptr_t)(&etext))
+#     endif
 #   endif
 #   ifdef NETBSD
 #     define OS_TYPE "NETBSD"
@@@@ -1000,6 +1022,9 @@@@
 #   endif
 #   ifdef OPENBSD
 #	define OS_TYPE "OPENBSD"
+#	define HEURISTIC2
+	extern char etext;
+#	define DATASTART ((ptr_t)(&etext))
 #   endif
 #   ifdef FREEBSD
 #	define OS_TYPE "FREEBSD"
@@@@ -1015,7 +1040,7 @@@@
 #   ifdef BSDI
 #	define OS_TYPE "BSDI"
 #   endif
-#   if defined(OPENBSD) || defined(NETBSD) || defined(FREEBSD) \
+#   if defined(NETBSD) || defined(FREEBSD) \
         || defined(THREE86BSD) || defined(BSDI)
 #	define HEURISTIC2
 	extern char etext;
@@@@ -1238,6 +1263,14 @@@@
a54 1
 #   	define CPP_WORDSZ 64
d56 1
@


1.1
log
@update to 6.0
misc pieces from art@@, pval@@, and myself
@
text
@d1 3
a3 3
$OpenBSD$
--- include/private/gcconfig.h.orig	Thu Jul 26 19:28:57 2001
+++ include/private/gcconfig.h	Wed Jul 31 07:45:46 2002
d32 9
@

