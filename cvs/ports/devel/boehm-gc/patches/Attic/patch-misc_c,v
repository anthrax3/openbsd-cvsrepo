head	1.8;
access;
symbols
	OPENBSD_5_3:1.7.0.20
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.18
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.16
	OPENBSD_5_0:1.7.0.14
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.12
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.10
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.8
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.6
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.4
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.5.0.14
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.12
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2013.06.01.21.05.28;	author kurt;	state dead;
branches;
next	1.7;

1.7
date	2008.04.01.17.41.13;	author kurt;	state Exp;
branches;
next	1.6;

1.6
date	2007.07.14.22.16.17;	author kili;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.16.04.11.15;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	2003.10.15.12.58.11;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.17.21.00.45;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.26.13.25.26;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2002.08.27.15.41.30;	author todd;	state Exp;
branches;
next	;


desc
@@


1.8
log
@- Update to 7.2d. Tested on i386, amd64, sparc64, macppc, hppa and alpha.
okay and testing by sthen, landry, thanks!
@
text
@--- misc.c.orig	Thu Jun 28 14:14:55 2007
+++ misc.c	Fri Feb  8 09:43:48 2008
@@@@ -629,7 +629,7 @@@@ void GC_init_inner()
 #   if defined(SEARCH_FOR_DATA_START)
 	GC_init_linux_data_start();
 #   endif
-#   if (defined(NETBSD) || defined(OPENBSD)) && defined(__ELF__)
+#   if defined(NETBSD) && defined(__ELF__)
 	GC_init_netbsd_elf();
 #   endif
 #   if !defined(THREADS) || defined(GC_PTHREADS) || defined(GC_WIN32_THREADS) \
@


1.7
log
@- use __data_start symbol to find the beginning of the data sections
and adjust boehm-gc to deal with any number of holes that may appear
between __data_start and _end. (requires -current binutils)
- work-around libpthread bugs that prevent sigsuspend() from working
in a signal handler by using pthread_suspend_np() + an arch/libpthread
specific offset to obtain the suspended thread's stack pointer.

thanks to sthen@@ and jasper@@ for access to other arches. discussed
with todd@@
@
text
@@


1.6
log
@
Update to 7.0.

Most work done by kurt@@, who got bleeding eyes and has been trapped
into pthread issues because some of us (me and Stuart Henderson)
were slopyy and applied some patches only partial. A big sorry to
kurt@@ for this waste of time!

Tested by many. Intermediate ok's (IIRC) from kurt@@, naddy@@ and todd@@.
@
text
@d1 3
a3 3
--- misc.c.orig	Thu Jun 28 20:14:55 2007
+++ misc.c	Fri Jul  6 22:13:16 2007
@@@@ -629,7 +629,10 @@@@ void GC_init_inner()
a7 3
+#if defined(OPENBSD)
+	GC_init_openbsd();
+#endif
@


1.5
log
@teach boehm-gc about m68k
@
text
@d1 3
a3 4
$OpenBSD: patch-misc_c,v 1.4 2003/10/15 12:58:11 todd Exp $
--- misc.c.orig	2003-05-29 10:50:10.000000000 -0500
+++ misc.c	2003-10-16 02:31:36.000000000 -0500
@@@@ -635,7 +635,14 @@@@ void GC_init_inner()
d8 3
a10 7
+#   if defined(OPENBSD)
+#     if defined(__ELF__)
+	GC_init_openbsd_elf();
+#     else
+	GC_init_openbsd_aout();
+#     endif
+#   endif
d14 1
a14 1
 #   if defined(GC_PTHREADS) || defined(GC_SOLARIS_THREADS)
@


1.4
log
@Thanks to marius at monkey dot org for unbreaking this port.
Thanks to Andrew Delgleish for updating this to 6.2
patches submitted upstream.
@
text
@d1 4
a4 4
$OpenBSD: patch-misc_c,v 1.3 2003/01/17 21:00:45 drahn Exp $
--- misc.c.orig	2003-05-30 01:50:10.000000000 +1000
+++ misc.c	2003-10-15 13:40:09.000000000 +1000
@@@@ -635,7 +635,10 @@@@ void GC_init_inner()
d9 2
a10 1
+#   if defined(OPENBSD) && defined(__ELF__)
d12 3
@


1.3
log
@Instead of using a data symbol to find the last mapped section of the
executable, use _end. This is done other places in the file, and works
with latest ELF linker changes, (This only affects OpenBSD/ELF). ok todd@@
@
text
@d1 4
a4 4
$OpenBSD$
--- misc.c.orig	Mon Aug  5 19:13:44 2002
+++ misc.c	Thu Jan  9 16:12:10 2003
@@@@ -591,7 +591,10 @@@@ void GC_init_inner()
@


1.2
log
@thanks to drahn@@ update to gc6.1 (misc bugfixes, I've heard good things, etc,
best of all, you can drop this in on shared archs as a replacement for 6.0,
I've tested opencm and w3m)
@
text
@d1 6
a6 6
$OpenBSD: patch-misc_c,v 1.1 2002/08/27 15:41:30 todd Exp $
--- misc.c.orig	Wed Jul 31 06:36:17 2002
+++ misc.c	Wed Jul 31 06:35:36 2002
@@@@ -527,6 +527,9 @@@@ void GC_init_inner()
 #   if defined(NETBSD) && defined(__ELF__)
 	GC_init_netbsd_elf();
d8 1
d12 4
a15 3
 #   if defined(IRIX_THREADS) || defined(LINUX_THREADS) \
        || defined(HPUX_THREADS) || defined(SOLARIS_THREADS)
         GC_thr_init();
@


1.1
log
@update to 6.0
misc pieces from art@@, pval@@, and myself
@
text
@d1 1
a1 1
$OpenBSD$
@

