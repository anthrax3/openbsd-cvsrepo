head	1.8;
access;
symbols
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.20
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.18
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.16
	OPENBSD_5_0:1.6.0.14
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.12
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.10
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.8
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.4
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.4
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.4.0.14
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.12
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.10
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2014.07.09.14.31.10;	author robert;	state dead;
branches;
next	1.7;
commitid	mP18koA32JvGEFq3;

1.7
date	2013.06.01.21.05.28;	author kurt;	state Exp;
branches;
next	1.6;

1.6
date	2008.04.01.17.41.13;	author kurt;	state Exp;
branches;
next	1.5;

1.5
date	2007.07.14.22.16.17;	author kili;	state Exp;
branches;
next	1.4;

1.4
date	2003.10.16.04.11.15;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2003.10.15.12.58.11;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.26.13.25.26;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.27.15.41.30;	author todd;	state Exp;
branches;
next	;


desc
@@


1.8
log
@update to boehm-gc 7.4.2 and libatomic_ops 7.4.0 and remove all
the patches that got integrated upstream
@
text
@$OpenBSD: patch-dyn_load_c,v 1.7 2013/06/01 21:05:28 kurt Exp $
--- dyn_load.c.orig	Thu Aug  9 16:25:13 2012
+++ dyn_load.c	Tue Mar 19 19:39:39 2013
@@@@ -83,12 +83,20 @@@@ STATIC GC_has_static_roots_func GC_has_static_roots = 
 #   define ELFSIZE ARCH_ELFSIZE
 #endif
 
+#if defined(OPENBSD)
+# include <sys/param.h>
+# include <dlfcn.h>
+# if OpenBSD >= 200519
+#   define HAVE_DL_ITERATE_PHDR
+# endif
+#endif
+
 #if defined(SCO_ELF) || defined(DGUX) || defined(HURD) \
     || (defined(__ELF__) && (defined(LINUX) || defined(FREEBSD) \
                              || defined(NETBSD) || defined(OPENBSD)))
 # include <stddef.h>
 # if !defined(OPENBSD) && !defined(PLATFORM_ANDROID)
-    /* FIXME: Why we exclude it for OpenBSD? */
+    /* OpenBSD doesn't have elf.h. link.h below is sufficent */
     /* Exclude Android because linker.h below includes its own version. */
 #   include <elf.h>
 # endif
@


1.7
log
@- Update to 7.2d. Tested on i386, amd64, sparc64, macppc, hppa and alpha.
okay and testing by sthen, landry, thanks!
@
text
@d1 1
a1 1
$OpenBSD$
@


1.6
log
@- use __data_start symbol to find the beginning of the data sections
and adjust boehm-gc to deal with any number of holes that may appear
between __data_start and _end. (requires -current binutils)
- work-around libpthread bugs that prevent sigsuspend() from working
in a signal handler by using pthread_suspend_np() + an arch/libpthread
specific offset to obtain the suspended thread's stack pointer.

thanks to sthen@@ and jasper@@ for access to other arches. discussed
with todd@@
@
text
@d1 5
a5 20
$OpenBSD: patch-dyn_load_c,v 1.5 2007/07/14 22:16:17 kili Exp $
--- dyn_load.c.orig	Thu Jun 28 17:36:03 2007
+++ dyn_load.c	Thu Mar 20 18:09:28 2008
@@@@ -63,6 +63,7 @@@@ static int (*GC_has_static_roots)(const char *, void *
     !defined(HPUX) && !(defined(LINUX) && defined(__ELF__)) && \
     !defined(AIX) && !defined(SCO_ELF) && !defined(DGUX) && \
     !(defined(FREEBSD) && defined(__ELF__)) && \
+    !(defined(OPENBSD) && (defined(__ELF__) || defined(M68K))) && \
     !(defined(NETBSD) && defined(__ELF__)) && !defined(HURD) && \
     !defined(DARWIN) && !defined(CYGWIN32)
  --> We only know how to find data segments of dynamic libraries for the
@@@@ -84,9 +85,9 @@@@ static int (*GC_has_static_roots)(const char *, void *
 
 #if defined(LINUX) && defined(__ELF__) || defined(SCO_ELF) || \
     (defined(FREEBSD) && defined(__ELF__)) || defined(DGUX) || \
+    (defined(OPENBSD) && defined(__ELF__)) || \
     (defined(NETBSD) && defined(__ELF__)) || defined(HURD)
 #   include <stddef.h>
-#   include <elf.h>
 #   include <link.h>
d8 18
a25 26
@@@@ -99,7 +100,7 @@@@ static int (*GC_has_static_roots)(const char *, void *
 #      else
 #        define ElfW(type) Elf64_##type
 #      endif
-#    elif defined(NETBSD)
+#    elif defined(NETBSD) || defined(OPENBSD)
 #      if ELFSIZE == 32
 #        define ElfW(type) Elf32_##type
 #      else
@@@@ -216,6 +217,7 @@@@ void GC_register_dynamic_libraries()
 
 #if defined(LINUX) && defined(__ELF__) || defined(SCO_ELF) || \
     (defined(FREEBSD) && defined(__ELF__)) || defined(DGUX) || \
+    (defined(OPENBSD) && defined(__ELF__)) || \
     (defined(NETBSD) && defined(__ELF__)) || defined(HURD)
 
 
@@@@ -414,7 +416,7 @@@@ GC_bool GC_register_main_static_data()
 /* This doesn't necessarily work in all cases, e.g. with preloaded
  * dynamic libraries.						*/
 
-#if defined(NETBSD)
+#if defined(NETBSD) || defined(OPENBSD)
 #  include <sys/exec_elf.h>
 /* for compatibility with 1.4.x */
 #  ifndef DT_DEBUG
@


1.5
log
@
Update to 7.0.

Most work done by kurt@@, who got bleeding eyes and has been trapped
into pthread issues because some of us (me and Stuart Henderson)
were slopyy and applied some patches only partial. A big sorry to
kurt@@ for this waste of time!

Tested by many. Intermediate ok's (IIRC) from kurt@@, naddy@@ and todd@@.
@
text
@d1 3
a3 3
$OpenBSD: patch-dyn_load_c,v 1.4 2003/10/16 04:11:15 todd Exp $
--- dyn_load.c.orig	Thu Jun 28 23:36:03 2007
+++ dyn_load.c	Fri Jul  6 22:13:16 2007
d23 9
@


1.4
log
@teach boehm-gc about m68k
@
text
@d1 4
a4 4
$OpenBSD: patch-dyn_load_c,v 1.3 2003/10/15 12:58:11 todd Exp $
--- dyn_load.c.orig	2003-05-30 19:54:50.000000000 -0500
+++ dyn_load.c	2003-10-16 02:31:35.000000000 -0500
@@@@ -57,6 +57,7 @@@@
d6 1
a6 1
     !defined(RS6000) && !defined(SCO_ELF) && !defined(DGUX) && \
d10 1
a10 1
     !defined(DARWIN)
d12 1
a12 1
@@@@ -82,9 +83,9 @@@@
d23 1
a23 1
@@@@ -266,6 +267,7 @@@@ void GC_register_dynamic_libraries()
d31 1
a31 1
@@@@ -444,7 +446,7 @@@@ GC_bool GC_register_main_static_data()
d38 2
a39 2
 #else
 #  include <elf.h>
@


1.3
log
@Thanks to marius at monkey dot org for unbreaking this port.
Thanks to Andrew Delgleish for updating this to 6.2
patches submitted upstream.
@
text
@d1 3
a3 3
$OpenBSD: patch-dyn_load_c,v 1.2 2002/10/26 13:25:26 todd Exp $
--- dyn_load.c.orig	2003-05-31 10:54:50.000000000 +1000
+++ dyn_load.c	2003-10-15 13:41:02.000000000 +1000
d8 1
a8 1
+    !(defined(OPENBSD) && defined(__ELF__)) && \
@


1.2
log
@thanks to drahn@@ update to gc6.1 (misc bugfixes, I've heard good things, etc,
best of all, you can drop this in on shared archs as a replacement for 6.0,
I've tested opencm and w3m)
@
text
@d1 3
a3 3
$OpenBSD$
--- dyn_load.c.orig	Tue Aug  6 15:14:31 2002
+++ dyn_load.c	Fri Oct 25 12:37:33 2002
d9 2
a10 1
     !(defined(NETBSD) && defined(__ELF__)) && !defined(HURD)
d12 1
a12 2
  --> above.  Additional SVR4 variants might not be too
@@@@ -81,9 +82,9 @@@@
d23 1
a23 1
@@@@ -265,6 +266,7 @@@@ void GC_register_dynamic_libraries()
d31 1
a31 1
@@@@ -533,7 +535,7 @@@@ GC_bool GC_register_dynamic_libraries_dl
@


1.1
log
@update to 6.0
misc pieces from art@@, pval@@, and myself
@
text
@d2 3
a4 4
--- dyn_load.c.orig	Tue Jun 26 04:37:38 2001
+++ dyn_load.c	Wed Jul 31 05:06:30 2002
@@@@ -53,6 +53,7 @@@@
     !(defined(ALPHA) && defined(OSF1)) && \
d6 2
a7 1
     !defined(RS6000) && !defined(SCO_ELF) && \
d12 1
a12 2
@@@@ -243,6 +244,7 @@@@ void GC_register_dynamic_libraries()
 # endif /* SUNOS */
d15 1
d18 4
d23 1
d25 9
a33 3
@@@@ -424,7 +426,7 @@@@ static char *parse_map_entry(char *buf_p
  * This code was derived from the Solaris/ELF support. Thanks to
  * whatever kind soul wrote that.  - Patrick Bridges */
@

