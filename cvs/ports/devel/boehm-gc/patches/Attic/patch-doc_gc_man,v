head	1.6;
access;
symbols
	OPENBSD_5_3:1.5.0.20
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.18
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.16
	OPENBSD_5_0:1.5.0.14
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.12
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.10
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.8
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.6
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.2.0.12
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2013.06.01.21.05.28;	author kurt;	state dead;
branches;
next	1.5;

1.5
date	2008.04.01.17.41.13;	author kurt;	state Exp;
branches;
next	1.4;

1.4
date	2007.07.14.22.16.17;	author kili;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.05.11.41.56;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.26.13.25.26;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.27.15.41.30;	author todd;	state Exp;
branches;
next	;


desc
@@


1.6
log
@- Update to 7.2d. Tested on i386, amd64, sparc64, macppc, hppa and alpha.
okay and testing by sthen, landry, thanks!
@
text
@$OpenBSD: patch-doc_gc_man,v 1.5 2008/04/01 17:41:13 kurt Exp $
--- doc/gc.man.orig	Mon Oct 10 18:33:34 2005
+++ doc/gc.man	Wed Feb  6 19:33:58 2008
@@@@ -1,4 +1,4 @@@@
-.TH GC_MALLOC 1L "2 October 2003"
+.TH GC_MALLOC 3 "2 October 2003"
 .SH NAME
 GC_malloc, GC_malloc_atomic, GC_free, GC_realloc, GC_enable_incremental, GC_register_finalizer, GC_malloc_ignore_off_page, GC_malloc_atomic_ignore_off_page, GC_set_warn_proc \- Garbage collecting malloc replacement
 .SH SYNOPSIS
@@@@ -81,6 +81,48 @@@@ GC_enable_incremental.
 This may temporarily write protect pages in the heap.  See the README file for more information on how this interacts with system calls that write to the heap.
 .LP
 Other facilities not discussed here include limited facilities to support incremental collection on machines without appropriate VM support, provisions for providing more explicit object layout information to the garbage collector, more direct support for ``weak'' pointers, support for ``abortable'' garbage collections during idle time, etc.
+.LP
+.SH "PORT INFORMATION"
+.LP
+In this (OpenBSD package) installation,
+.I gc.h
+and
+.I gc_cpp.h
+will be found in
+.I /usr/local/include ,
+and the libraries in
+.I /usr/local/lib.
+.LP
+These libraries have been compiled as drop-in replacements
+for malloc and free (which is to say, all malloc
+calls will allocate garbage-collectable data).
+There is no need to include "gc.h" in your C files unless you want
+access to the debugging (and other) functions defined there,
+or unless you want to explicitly use
+.I GC_malloc_uncollectable
+for some allocations.
+Just link against them whenever you want either garbage
+collection or leak detection.
+.LP
+The C++ header file, "gc_cpp.h",
+.I is
+necessary for C++ programs, to obtain the appropriate
+definitions of the
+.I new
+and
+.I delete
+operators.
+The comments in both of these header files presently
+provide far better documentation
+for the package than this man page;
+look there for more information.
+.LP
+Both libraries are compiled without (explicit) support
+for the experimental
+.I gc
+extension of
+.I g++.
+This may or may not make a difference.
 .LP
 .SH "SEE ALSO"
 The README and gc.h files in the distribution.  More detailed definitions of the functions exported by the collector are given there.  (The above list is not complete.)
@


1.5
log
@- use __data_start symbol to find the beginning of the data sections
and adjust boehm-gc to deal with any number of holes that may appear
between __data_start and _end. (requires -current binutils)
- work-around libpthread bugs that prevent sigsuspend() from working
in a signal handler by using pthread_suspend_np() + an arch/libpthread
specific offset to obtain the suspended thread's stack pointer.

thanks to sthen@@ and jasper@@ for access to other arches. discussed
with todd@@
@
text
@d1 1
a1 1
$OpenBSD: patch-doc_gc_man,v 1.4 2007/07/14 22:16:17 kili Exp $
@


1.4
log
@
Update to 7.0.

Most work done by kurt@@, who got bleeding eyes and has been trapped
into pthread issues because some of us (me and Stuart Henderson)
were slopyy and applied some patches only partial. A big sorry to
kurt@@ for this waste of time!

Tested by many. Intermediate ok's (IIRC) from kurt@@, naddy@@ and todd@@.
@
text
@d1 1
a1 1
$OpenBSD: patch-doc_gc_man,v 1.3 2005/09/05 11:41:56 espie Exp $
d3 1
a3 1
+++ doc/gc.man	Tue Jul 10 22:53:44 2007
d22 1
a22 1
+.I @@PREFIX@@/include ,
d24 1
a24 1
+.I @@PREFIX@@/lib.
@


1.3
log
@decent manpage behavior
@
text
@d1 3
a3 3
$OpenBSD: patch-doc_gc_man,v 1.2 2002/10/26 13:25:26 todd Exp $
--- doc/gc.man.orig	Wed Sep 22 01:55:00 1999
+++ doc/gc.man	Mon Sep  5 13:31:16 2005
d5 2
a6 2
-.TH GC_MALLOC 1L "12 February 1996"
+.TH GC_MALLOC 3 "12 February 1996"
d10 1
a10 1
@@@@ -67,6 +67,48 @@@@ GC_enable_incremental.
@


1.2
log
@thanks to drahn@@ update to gc6.1 (misc bugfixes, I've heard good things, etc,
best of all, you can drop this in on shared archs as a replacement for 6.0,
I've tested opencm and w3m)
@
text
@d1 11
a11 4
$OpenBSD$
--- doc/gc.man.orig	Tue Sep 21 18:55:00 1999
+++ doc/gc.man	Fri Oct 25 11:53:09 2002
@@@@ -68,6 +68,48 @@@@ This may temporarily write protect pages
d14 1
a14 1
 .LP
d21 2
a22 2
+will probably be found in
+.I /usr/local/include,
d24 1
a24 1
+.I /usr/local/lib.
d56 1
a56 1
+.LP
a58 1
 .LP
@


1.1
log
@update to 6.0
misc pieces from art@@, pval@@, and myself
@
text
@d2 2
a3 2
--- doc/gc.man.orig	Wed Sep 22 01:55:00 1999
+++ doc/gc.man	Sat Jul 27 01:04:55 2002
@

