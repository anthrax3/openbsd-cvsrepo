head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.16
	OPENBSD_5_0:1.1.0.14
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.12
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2014.07.09.14.31.10;	author robert;	state dead;
branches;
next	1.3;
commitid	mP18koA32JvGEFq3;

1.3
date	2013.06.01.21.05.28;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.22.12.31.42;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2008.04.01.17.41.13;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to boehm-gc 7.4.2 and libatomic_ops 7.4.0 and remove all
the patches that got integrated upstream
@
text
@$OpenBSD: patch-pthread_stop_world_c,v 1.3 2013/06/01 21:05:28 kurt Exp $
--- pthread_stop_world.c.orig	Thu Aug  9 16:25:13 2012
+++ pthread_stop_world.c	Tue Mar 19 19:41:04 2013
@@@@ -35,7 +35,7 @@@@ GC_INNER __thread GC_thread GC_nacl_gc_thread_self = N
 int GC_nacl_thread_parked[MAX_NACL_GC_THREADS];
 int GC_nacl_thread_used[MAX_NACL_GC_THREADS];
 
-#elif !defined(GC_OPENBSD_THREADS)
+#elif !defined(GC_OPENBSD_UTHREADS)
 
 #include <signal.h>
 #include <semaphore.h>
@@@@ -298,7 +298,7 @@@@ STATIC void GC_restart_handler(int sig)
 # endif
 }
 
-#endif /* !GC_OPENBSD_THREADS && !NACL */
+#endif /* !GC_OPENBSD_UTHREADS && !NACL */
 
 #ifdef IA64
 # define IF_IA64(x) x
@@@@ -422,7 +422,7 @@@@ STATIC int GC_suspend_all(void)
 
 # ifndef NACL
     GC_thread p;
-#   ifndef GC_OPENBSD_THREADS
+#   ifndef GC_OPENBSD_UTHREADS
       int result;
 #   endif
     pthread_t self = pthread_self();
@@@@ -436,7 +436,7 @@@@ STATIC int GC_suspend_all(void)
         if (!THREAD_EQUAL(p -> id, self)) {
             if (p -> flags & FINISHED) continue;
             if (p -> thread_blocked) /* Will wait */ continue;
-#           ifndef GC_OPENBSD_THREADS
+#           ifndef GC_OPENBSD_UTHREADS
               if (p -> stop_info.last_stop_count == GC_stop_count) continue;
               n_live_threads++;
 #           endif
@@@@ -445,7 +445,7 @@@@ STATIC int GC_suspend_all(void)
                             (unsigned)(p -> id));
 #           endif
 
-#           ifdef GC_OPENBSD_THREADS
+#           ifdef GC_OPENBSD_UTHREADS
               {
                 stack_t stack;
                 if (pthread_suspend_np(p -> id) != 0)
@@@@ -523,7 +523,7 @@@@ STATIC int GC_suspend_all(void)
 
 GC_INNER void GC_stop_world(void)
 {
-# if !defined(GC_OPENBSD_THREADS) && !defined(NACL)
+# if !defined(GC_OPENBSD_UTHREADS) && !defined(NACL)
     int i;
     int n_live_threads;
     int code;
@@@@ -545,7 +545,7 @@@@ GC_INNER void GC_stop_world(void)
     }
 # endif /* PARALLEL_MARK */
 
-# if defined(GC_OPENBSD_THREADS) || defined(NACL)
+# if defined(GC_OPENBSD_UTHREADS) || defined(NACL)
     (void)GC_suspend_all();
 # else
     AO_store(&GC_stop_count, GC_stop_count+1);
@@@@ -735,7 +735,7 @@@@ GC_INNER void GC_start_world(void)
     pthread_t self = pthread_self();
     register int i;
     register GC_thread p;
-#   ifndef GC_OPENBSD_THREADS
+#   ifndef GC_OPENBSD_UTHREADS
       register int n_live_threads = 0;
       register int result;
 #   endif
@@@@ -747,7 +747,7 @@@@ GC_INNER void GC_start_world(void)
       GC_log_printf("World starting\n");
 #   endif
 
-#   ifndef GC_OPENBSD_THREADS
+#   ifndef GC_OPENBSD_UTHREADS
       AO_store(&GC_world_is_stopped, FALSE);
 #   endif
     for (i = 0; i < THREAD_TABLE_SZ; i++) {
@@@@ -755,7 +755,7 @@@@ GC_INNER void GC_start_world(void)
         if (!THREAD_EQUAL(p -> id, self)) {
             if (p -> flags & FINISHED) continue;
             if (p -> thread_blocked) continue;
-#           ifndef GC_OPENBSD_THREADS
+#           ifndef GC_OPENBSD_UTHREADS
               n_live_threads++;
 #           endif
 #           ifdef DEBUG_THREADS
@@@@ -763,7 +763,7 @@@@ GC_INNER void GC_start_world(void)
                             (unsigned)(p -> id));
 #           endif
 
-#         ifdef GC_OPENBSD_THREADS
+#         ifdef GC_OPENBSD_UTHREADS
             if (pthread_resume_np(p -> id) != 0)
               ABORT("pthread_resume_np failed");
 #         else
@@@@ -810,7 +810,7 @@@@ GC_INNER void GC_start_world(void)
 
 GC_INNER void GC_stop_init(void)
 {
-# if !defined(GC_OPENBSD_THREADS) && !defined(NACL)
+# if !defined(GC_OPENBSD_UTHREADS) && !defined(NACL)
     struct sigaction act;
 
     if (sem_init(&GC_suspend_ack_sem, GC_SEM_INIT_PSHARED, 0) != 0)
@@@@ -873,7 +873,7 @@@@ GC_INNER void GC_stop_init(void)
     if (GC_print_stats && GC_retry_signals) {
       GC_log_printf("Will retry suspend signal if necessary\n");
     }
-# endif /* !GC_OPENBSD_THREADS && !NACL */
+# endif /* !GC_OPENBSD_UTHREADS && !NACL */
 }
 
 #endif
@


1.3
log
@- Update to 7.2d. Tested on i386, amd64, sparc64, macppc, hppa and alpha.
okay and testing by sthen, landry, thanks!
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Remove uthreads work-arounds. Works ok with rthreads now.
Tested by sthen@@ and espie@@
@
text
@d1 9
a9 9
$OpenBSD: patch-pthread_stop_world_c,v 1.1 2008/04/01 17:41:13 kurt Exp $
--- pthread_stop_world.c.orig	Thu Feb  7 09:37:25 2008
+++ pthread_stop_world.c	Thu Feb  7 09:37:41 2008
@@@@ -1,7 +1,7 @@@@
 #include "private/pthread_support.h"
 
 #if defined(GC_PTHREADS) && !defined(GC_WIN32_THREADS) && \
-    !defined(GC_DARWIN_THREADS)
+    !defined(GC_DARWIN_THREADS) && !defined(GC_OPENBSD_THREADS)
d13 108
@


1.1
log
@- use __data_start symbol to find the beginning of the data sections
and adjust boehm-gc to deal with any number of holes that may appear
between __data_start and _end. (requires -current binutils)
- work-around libpthread bugs that prevent sigsuspend() from working
in a signal handler by using pthread_suspend_np() + an arch/libpthread
specific offset to obtain the suspended thread's stack pointer.

thanks to sthen@@ and jasper@@ for access to other arches. discussed
with todd@@
@
text
@d1 1
a1 1
$OpenBSD$
@

