head	1.2;
access;
symbols
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.16
	OPENBSD_5_0:1.1.0.14
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.12
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.02.22.12.31.42;	author kurt;	state dead;
branches;
next	1.1;

1.1
date	2008.04.01.17.41.13;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove uthreads work-arounds. Works ok with rthreads now.
Tested by sthen@@ and espie@@
@
text
@$OpenBSD: patch-include_private_openbsd_stop_world_h,v 1.1 2008/04/01 17:41:13 kurt Exp $
--- include/private/openbsd_stop_world.h.orig	Wed Feb  6 19:24:16 2008
+++ include/private/openbsd_stop_world.h	Wed Feb  6 19:26:02 2008
@@@@ -0,0 +1,12 @@@@
+#ifndef GC_OPENBSD_STOP_WORLD_H
+#define GC_OPENBSD_STOP_WORLD_H
+
+#if !defined(GC_OPENBSD_THREADS)
+#error openbsd_stop_world.h included without GC_OPENBSD_THREADS defined
+#endif
+
+struct thread_stop_info {
+    ptr_t stack_ptr;  		/* Valid only when stopped.      	*/
+};
+    
+#endif
@


1.1
log
@- use __data_start symbol to find the beginning of the data sections
and adjust boehm-gc to deal with any number of holes that may appear
between __data_start and _end. (requires -current binutils)
- work-around libpthread bugs that prevent sigsuspend() from working
in a signal handler by using pthread_suspend_np() + an arch/libpthread
specific offset to obtain the suspended thread's stack pointer.

thanks to sthen@@ and jasper@@ for access to other arches. discussed
with todd@@
@
text
@d1 1
a1 1
$OpenBSD$
@

