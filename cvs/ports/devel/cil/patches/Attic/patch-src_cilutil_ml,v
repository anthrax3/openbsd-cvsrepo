head	1.4;
access;
symbols
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2006.05.28.15.44.14;	author avsm;	state dead;
branches;
next	1.3;

1.3
date	2005.05.27.21.46.23;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.27.06.31.52;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.21.18.53.12;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to cil-1.3.5, lots of nice fixes to parsing gcc/msvc code
@
text
@$OpenBSD: patch-src_cilutil_ml,v 1.3 2005/05/27 21:46:23 avsm Exp $
--- src/cilutil.ml.orig	Mon Jan 31 09:56:18 2005
+++ src/cilutil.ml	Fri May 27 09:00:55 2005
@@@@ -52,6 +52,10 @@@@ maintain a separate stack for return add
 let doHeapify = ref false (* move stack-allocated arrays to the heap *)
 let makeCFG = ref false (* turn the input CIL file into something more like
                           * a CFG *)
+let nullInt = ref false (* look for int and NULL comparisons *)
+let kernelTrace = ref false (* add tracing calls into the kernel *)
+let randomVars = ref false (* randomize uninitialized variables *)
+
 let printStats = ref false
 
 (* when 'sliceGlobal' is set, then when 'rmtmps' runs, only globals*)
@


1.3
log
@Add in a --dorandomvars which sets local variables to values other than
0 to try and find bugs which depend on them being initalized to 0.

Also turn off the other transformations by default (use --dokerneltrace
or --donullint)

Go get em Chad.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_cilutil_ml,v 1.2 2005/05/27 06:31:52 avsm Exp $
@


1.2
log
@Add a 'kernel function call tracer' to automatically insert a call to
log() to certain functions in the kernel to help debugging.

An example use when building a kernel would be:
$ make CC='/usr/local/bin/cilly --trace-regexp=^cache_ --trace-level=0'
to instrument all functions starting with cache_* to notify syslog at
emergency log level.  The output also includes the contents of any
char/int/long arguments (pointers and structs not followed yet, too
verbose).

A full kernel build doesnt quite work with CIL yet so use selectively.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_cilutil_ml,v 1.1 2004/06/21 18:53:12 avsm Exp $
d3 2
a4 2
+++ src/cilutil.ml	Thu May 26 20:38:13 2005
@@@@ -52,6 +52,9 @@@@ maintain a separate stack for return add
d8 3
a10 2
+let nullInt = ref true (* look for int and NULL comparisons *)
+let kernelTrace = ref true (* add tracing calls into the kernel *)
@


1.1
log
@add a simple NULL/int comparison checker to CIL
@
text
@d1 4
a4 4
$OpenBSD$
--- src/cilutil.ml.orig	2004-04-06 16:51:21.000000000 +0100
+++ src/cilutil.ml	2004-06-20 18:36:46.000000000 +0100
@@@@ -52,6 +52,8 @@@@ maintain a separate stack for return add
d9 1
@

