head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.42
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.38
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.40
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.36
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.34
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.32
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.30
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.28
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.26
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.24
	OPENBSD_5_0:1.2.0.22
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.20
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.18
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.16
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.14
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.12
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.10
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@; @;


1.2
date	2006.05.28.15.44.14;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2005.05.27.21.46.23;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to cil-1.3.5, lots of nice fixes to parsing gcc/msvc code
@
text
@(* $OpenBSD: randomvars.ml,v 1.1 2005/05/27 21:46:23 avsm Exp $ *)
(*
 * Copyright (c) 2005 Anil Madhavapeddy <anil@@recoil.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * $Id: randomvars.ml,v 1.1 2005/05/27 21:46:23 avsm Exp $
 *)

(* introduce log messages to trace kernel messages *)

open Pretty
open Cil
module E = Errormsg

class randomVarsVisitor f = object
  inherit nopCilVisitor

  method vfunc fundec =
    (* make list of local variables which we will erase as
     * they are initialized *)
    let locals = ref fundec.slocals in
    let stmts = List.fold_left (fun a v -> match v.vtype with
      |TInt (ik,_) ->
        let ie = kinteger64 ik (Int64.max_int) in
        mkStmt (Instr[Set(var v,ie,!currentLoc)]) :: a
      |TArray (ty,exp,_) ->
        let expify fundec = Lval(Var(fundec.svar), NoOffset) in
        let m = expify (emptyFunction "memset") in
        let addr = mkAddrOrStartOf (Var v, NoOffset) in
        let i = kinteger64 IUInt (Int64.max_int) in
        begin match exp with
        |Some sz ->
          let size = BinOp(Mult,(sizeOf ty),sz,(TInt(IUInt,[]))) in
          mkStmt (Instr[Call(None,m,[addr;i;size],locUnknown)]) :: a
        |None -> a 
        end
      |_ -> a
    ) [] fundec.slocals in
    fundec.sbody.bstmts <- stmts @@ fundec.sbody.bstmts;
    ChangeTo(fundec)

end

let randomvars f =
    visitCilFileSameGlobals (new randomVarsVisitor f) f

let feature : featureDescr = 
  { fd_name = "randomvars";
    fd_enabled = ref false;
    fd_description = "randomize values of uninitialized local variables";
    fd_extraopt = [];
    fd_doit = (function (f: file) -> randomvars f);
    fd_post_check = true;
  } 
@


1.1
log
@Add in a --dorandomvars which sets local variables to values other than
0 to try and find bugs which depend on them being initalized to 0.

Also turn off the other transformations by default (use --dokerneltrace
or --donullint)

Go get em Chad.
@
text
@d1 1
a1 1
(* $OpenBSD$ *)
d17 1
a17 1
 * $Id: kerneltrace.ml,v 1.1 2005/05/27 06:31:52 avsm Exp $
d60 1
a60 1
    fd_enabled = Cilutil.randomVars;
@

