head	1.2;
access;
symbols
	kurt_20050204:1.1.1.1 kurt:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2005.02.06.10.16.17;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2005.02.04.17.18.13;	author kurt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.04.17.18.13;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@rename patch so that tar continues to work.
@
text
@$OpenBSD: patch-plugins_org_eclipse_osgi_eclipseAdaptor_src_org_eclipse_core_runtime_adaptor_EclipseBundleData_java,v 1.1 2005/02/04 17:18:13 kurt Exp $
--- plugins/org.eclipse.osgi/eclipseAdaptor/src/org/eclipse/core/runtime/adaptor/EclipseBundleData.java.orig	Tue Jan  4 12:37:17 2005
+++ plugins/org.eclipse.osgi/eclipseAdaptor/src/org/eclipse/core/runtime/adaptor/EclipseBundleData.java	Tue Jan  4 14:57:54 2005
@@@@ -128,18 +128,28 @@@@ public class EclipseBundleData extends D
 	}
 
 	private String searchVariants(String[] variants, String path) {
+		class LibraryFileFilter implements FilenameFilter {
+			String lib_name;  
+			LibraryFileFilter(String lib_name) { this.lib_name = lib_name; }
+			public boolean accept(File dir, String name) {
+				if (name.startsWith(lib_name)) {
+					return name.substring(lib_name.length()).matches("\056[0-9]+\056[0-9]+$");
+				}
+				return false;
+			}
+		}       
+
 		for (int i = 0; i < variants.length; i++) {
-			BundleEntry libEntry = baseBundleFile.getEntry(variants[i] + path);
-			if (libEntry == null) {
-				//					if (DEBUG && DEBUG_SHOW_FAILURE)
-				//						debug("not found " + variants[i] + path);
-				// //$NON-NLS-1$
-			} else {
-				//					if (DEBUG && DEBUG_SHOW_SUCCESS)
-				//						debug("found " + path + " as " +
-				// variants[i] + path); //$NON-NLS-1$ //$NON-NLS-2$
-				File libFile = baseBundleFile.getFile(variants[i] + path);
+			File dir = new File(baseBundleFile.getBaseFile(), variants[i]);
+			// look for unversioned lib first
+			File libFile = new File(dir, path);
+			if (libFile.exists())
 				return libFile.getAbsolutePath();
+			// then versioned
+			String liblist[] = dir.list(new LibraryFileFilter(path));
+			if (liblist != null && liblist.length > 0) {
+				Arrays.sort(liblist);
+				return new File(dir, liblist[liblist.length - 1]).getAbsolutePath();
 			}
 		}
 		return null;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Eclipse sdk and three eclipse plugins

sdk:
   The Eclipse Platform is an IDE for anything, and for nothing in
   particular.

   flavors: gtk2, motif
   subpackages: -gnome, -mozilla (gtk2 only), -kde (motif only)

plugins/emf:
   Eclipse Modeling Framework (EMF)

plugins/gef:
   graphical editing environment for eclipse

plugins/uml2
   UML diagram framework for Eclipse

ok alek@@, todd@@
@
text
@@
