head	1.2;
access;
symbols
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.14
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.10
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_5:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2012.04.28.09.49.49;	author stsp;	state dead;
branches;
next	1.1;

1.1
date	2009.08.07.04.49.38;	author steven;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2009.08.16.01.59.01;	author william;	state Exp;
branches;
next	;

1.1.4.1
date	2009.11.10.03.36.41;	author william;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to APR-util 1.4.1. Enable threads by default, remove the 'mt' flavour.
Grab maintainership.
ok sthen
@
text
@$OpenBSD: patch-misc_apr_rmm_c,v 1.1 2009/08/07 04:49:38 steven Exp $

SECURITY: CVE-2009-2412 (cve.mitre.org)
Fix overflow in rmm, where size alignment was taking place.

--- misc/apr_rmm.c.orig	Fri Aug  5 11:43:16 2005
+++ misc/apr_rmm.c	Fri Aug  7 00:08:22 2009
@@@@ -306,13 +306,17 @@@@ APU_DECLARE(apr_status_t) apr_rmm_detach(apr_rmm_t *rm
 
 APU_DECLARE(apr_rmm_off_t) apr_rmm_malloc(apr_rmm_t *rmm, apr_size_t reqsize)
 {
+    apr_size_t size;
     apr_rmm_off_t this;
     
-    reqsize = APR_ALIGN_DEFAULT(reqsize) + RMM_BLOCK_SIZE;
+    size = APR_ALIGN_DEFAULT(reqsize) + RMM_BLOCK_SIZE;
+    if (size < reqsize) {
+        return 0;
+    }
 
     APR_ANYLOCK_LOCK(&rmm->lock);
 
-    this = find_block_of_size(rmm, reqsize);
+    this = find_block_of_size(rmm, size);
 
     if (this) {
         move_block(rmm, this, 0);
@@@@ -325,18 +329,22 @@@@ APU_DECLARE(apr_rmm_off_t) apr_rmm_malloc(apr_rmm_t *r
 
 APU_DECLARE(apr_rmm_off_t) apr_rmm_calloc(apr_rmm_t *rmm, apr_size_t reqsize)
 {
+    apr_size_t size;
     apr_rmm_off_t this;
         
-    reqsize = APR_ALIGN_DEFAULT(reqsize) + RMM_BLOCK_SIZE;
+    size = APR_ALIGN_DEFAULT(reqsize) + RMM_BLOCK_SIZE;
+    if (size < reqsize) {
+        return 0;
+    }
 
     APR_ANYLOCK_LOCK(&rmm->lock);
 
-    this = find_block_of_size(rmm, reqsize);
+    this = find_block_of_size(rmm, size);
 
     if (this) {
         move_block(rmm, this, 0);
         this += RMM_BLOCK_SIZE;
-        memset((char*)rmm->base + this, 0, reqsize - RMM_BLOCK_SIZE);
+        memset((char*)rmm->base + this, 0, size - RMM_BLOCK_SIZE);
     }
 
     APR_ANYLOCK_UNLOCK(&rmm->lock);
@@@@ -349,16 +357,19 @@@@ APU_DECLARE(apr_rmm_off_t) apr_rmm_realloc(apr_rmm_t *
     apr_rmm_off_t this;
     apr_rmm_off_t old;
     struct rmm_block_t *blk;
-    apr_size_t oldsize;
+    apr_size_t size, oldsize;
 
     if (!entity) {
         return apr_rmm_malloc(rmm, reqsize);
     }
 
-    reqsize = APR_ALIGN_DEFAULT(reqsize);
+    size = APR_ALIGN_DEFAULT(reqsize);
+    if (size < reqsize) {
+        return 0;
+    }
     old = apr_rmm_offset_get(rmm, entity);
 
-    if ((this = apr_rmm_malloc(rmm, reqsize)) == 0) {
+    if ((this = apr_rmm_malloc(rmm, size)) == 0) {
         return 0;
     }
 
@@@@ -366,7 +377,7 @@@@ APU_DECLARE(apr_rmm_off_t) apr_rmm_realloc(apr_rmm_t *
     oldsize = blk->size;
 
     memcpy(apr_rmm_addr_get(rmm, this),
-           apr_rmm_addr_get(rmm, old), oldsize < reqsize ? oldsize : reqsize);
+           apr_rmm_addr_get(rmm, old), oldsize < size ? oldsize : size);
     apr_rmm_free(rmm, old);
 
     return this;
@


1.1
log
@security fix for CVE-2009-2412

https://svn.apache.org/viewvc?view=rev&revision=800732

from Stefan Sperling
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.4.1
log
@MFC:

SECURITY FIX

Resolves CVE-2009-2412:

https://svn.apache.org/viewvc?view=rev&revision=800732

from Stefan Sperling
@
text
@@


1.1.2.1
log
@MFC:

SECURITY FIX

Resolves CVE-2009-2412:

https://svn.apache.org/viewvc?view=rev&revision=800732

from Stefan Sperling

ok robert@@
@
text
@@

