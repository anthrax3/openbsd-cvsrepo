head	1.2;
access;
symbols
	rsadowski_20170412:1.1.1.1 rsadowski:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.09.11.06.31.44;	author jca;	state Exp;
branches;
next	1.1;
commitid	mGIHaPmVG7miERMH;

1.1
date	2017.04.12.20.00.30;	author rsadowski;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Ow5zNeqkPdlXzuMF;

1.1.1.1
date	2017.04.12.20.00.30;	author rsadowski;	state Exp;
branches;
next	;
commitid	Ow5zNeqkPdlXzuMF;


desc
@@


1.2
log
@Fix build failure due to a macro clashing with system headers

universal-ctags defines an __unused__ macro that clashes with functions
using __attribute__((__unused__).  A bunch of such functions were
introduced recently as part of the uselocale work from schwarze@@.

Bulk-rename the offending macro and another one similarly named to
something more reasonable, just like in devel/ectags.

Comment suggested by schwarze@@, ok schwarze@@ sthen@@ rsadowski@@ (maintainer)
@
text
@# $OpenBSD: Makefile,v 1.1.1.1 2017/04/12 20:00:30 rsadowski Exp $

COMMENT =	multilanguage reimplementation of the Unix ctags utility

GH_ACCOUNT =	universal-ctags
GH_PROJECT =	ctags
GH_COMMIT =	6742b034f43af57da7ba478528f2c628389ba16e
# commit date YYYYMMDD
DISTNAME =	universal-ctags-0.20170318

CATEGORIES =	devel

HOMEPAGE =	https://ctags.io/

MAINTAINER =	Rafael Sadowski <rsadowski@@openbsd.org>

WANTLIB += c

# GPLv2
PERMIT_PACKAGE_CDROM =	Yes

USE_GMAKE =		Yes
CONFIGURE_STYLE = 	gnu

# emulate git rev-parse --short HEAD
REV =			"${GH_COMMIT:C/^(.{7}).*/\1/}"
MAKE_FLAGS =		CC="${CC}" \
			CFLAGS="${CFLAGS}" \
			V=1 \
			REV="${REV}"

CONFIGURE_ENV +=	CPPFLAGS="-I${LOCALBASE}/include" \
			LDFLAGS="-L${LOCALBASE}/lib ${LDFLAGS}"

CONFIGURE_ARGS =	--program-prefix=u

AUTOCONF_VERSION =	2.69
AUTOMAKE_VERSION =	1.11

BUILD_DEPENDS =		${MODGNU_AUTOCONF_DEPENDS} \
			${MODGNU_AUTOMAKE_DEPENDS}
TEST_DEPENDS =		textproc/gdiff \
			sysutils/coreutils

FLAVORS=		iconv
FLAVOR?=

.if ${FLAVOR:Miconv}
CONFIGURE_ARGS+=	--enable-iconv
LIB_DEPENDS+=		converters/libiconv
WANTLIB+=		iconv
.endif

# Application software must not redefine macros in the
# implementation namespace.  For example, redefining __unused__
# blows up in our <ctype.h>.
post-extract:
	find ${WRKSRC} -type f -name '*.[ch]' -exec sed -i \
	's/__unused__/uct_unused/g; s/__printf__/uct_printf/g' {} +

pre-configure:
	cd ${WRKSRC} && ${SETENV} AUTOMAKE_VERSION=${AUTOMAKE_VERSION} \
		AUTOCONF_VERSION=${AUTOCONF_VERSION} ./autogen.sh

pre-test:
	ln -sf ${LOCALBASE}/bin/gdiff ${WRKDIR}/bin/diff
	ln -sf ${LOCALBASE}/bin/gseq ${WRKDIR}/bin/seq
	ln -sf ${LOCALBASE}/bin/gsort ${WRKDIR}/bin/sort

.include <bsd.port.mk>
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d53 7
@


1.1.1.1
log
@Import universal-ctags

universal-ctags provides a maintained and actively developed alternative
to traditional ctags(1) and Exuberant Ctags.  It comes with additional
options and programming language support.

With many port improvements and tweaks from jca@@

ok sthen@@ jca@@

@
text
@@
