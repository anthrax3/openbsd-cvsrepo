head	1.5;
access;
symbols
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4;
locks; strict;
comment	@# @;


1.5
date	2004.09.23.08.06.23;	author brad;	state dead;
branches;
next	1.4;

1.4
date	2004.08.07.21.55.26;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.16.38.03;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.15.50.46;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2004.07.02.01.59.12;	author brad;	state Exp;
branches;
next	;


desc
@@


1.5
log
@upgrade to libtool 1.5.10
@
text
@$OpenBSD: patch-libltdl_acinclude_m4,v 1.4 2004/08/07 21:55:26 brad Exp $
--- libltdl/acinclude.m4.orig	Sat Aug  7 16:58:25 2004
+++ libltdl/acinclude.m4	Sat Aug  7 16:58:44 2004
@@@@ -3218,6 +3218,8 @@@@ case $host_os in
     _LT_AC_TAGVAR(ld_shlibs, $1)=no
     ;;
   openbsd*)
+    _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
     _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'
     _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
     if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
@


1.4
log
@upgrade to libtool 1.5.8
@
text
@d1 1
a1 1
$OpenBSD: patch-libltdl_acinclude_m4,v 1.3 2004/08/02 16:38:03 brad Exp $
@


1.3
log
@set hardcode_direct and hardcode_shlibpath_var in OpenBSD' C++ section too.
@
text
@d1 5
a5 5
$OpenBSD: patch-libltdl_acinclude_m4,v 1.2 2004/08/02 15:50:46 brad Exp $
--- libltdl/acinclude.m4.orig	Sun Apr 11 01:35:42 2004
+++ libltdl/acinclude.m4	Mon Aug  2 12:35:01 2004
@@@@ -676,6 +676,19 @@@@ AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [d
     lt_cv_sys_max_cmd_len=8192;
d7 6
a12 72
 
+  netbsd* | freebsd* | openbsd* | darwin* )
+    # This has been around since 386BSD, at least.  Likely further.
+    if test -x /sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
+    elif test -x /usr/sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
+    else
+      lt_cv_sys_max_cmd_len=65536 # usable default for *BSD
+    fi
+    # And add a safety zone
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
+    ;;
+
  *)
     # If test is not a shell built-in, we'll probably end up computing a
     # maximum length that is only half of the actual maximum length, but
@@@@ -1506,7 +1519,7 @@@@ nto-qnx*)
 openbsd*)
   version_type=sunos
   need_lib_prefix=no
-  need_version=yes
+  need_version=no
   library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
   finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
   shlibpath_var=LD_LIBRARY_PATH
@@@@ -2214,12 +2227,10 @@@@ nto-qnx*)
   ;;
 
 openbsd*)
-  lt_cv_file_magic_cmd=/usr/bin/file
-  lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
   if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
-    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB shared object'
+    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|\.so|_pic\.a)$'
   else
-    lt_cv_deplibs_check_method='file_magic OpenBSD.* shared library'
+    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|_pic\.a)$'
   fi
   ;;
 
@@@@ -3204,6 +3215,22 @@@@ case $host_os in
     # Workaround some broken pre-1.5 toolchains
     output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep conftest.$objext | $SED -e "s:-lgcc -lc -lgcc::"'
     ;;
+  openbsd2*)
+      # C++ shared libraries are fairly broken
+      _LT_AC_TAGVAR(ld_shlibs, $1)=no
+      ;;
+  openbsd*)
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+      if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'
+	_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+	_LT_AC_TAGVAR(whole_archive_flag_spec, $1)="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+      fi
+      output_verbose_link_cmd='echo'
+      ;;
   osf3*)
     case $cc_basename in
       KCC)
@@@@ -5572,6 +5599,7 @@@@ $echo "local: *; };" >> $output_objdir/$
       _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
       if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
 	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'
 	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
 	_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
       else
@


1.2
log
@Use sysctl to get the max cmd length on *BSD

From: libtool CVS
@
text
@d1 1
a1 1
$OpenBSD: patch-libltdl_acinclude_m4,v 1.1 2004/07/02 01:59:12 brad Exp $
d3 1
a3 1
+++ libltdl/acinclude.m4	Mon Aug  2 11:47:05 2004
d48 1
a48 1
@@@@ -3204,6 +3215,20 @@@@ case $host_os in
d57 2
d71 1
a71 1
@@@@ -5572,6 +5597,7 @@@@ $echo "local: *; };" >> $output_objdir/$
@


1.1
log
@upgrade to libtool 1.5.6, libltdl is now a sub-package.
@
text
@d1 1
a1 1
$OpenBSD$
d3 22
a24 2
+++ libltdl/acinclude.m4	Wed Jun 30 18:28:05 2004
@@@@ -1506,7 +1506,7 @@@@ nto-qnx*)
d33 1
a33 1
@@@@ -2214,12 +2214,10 @@@@ nto-qnx*)
d48 1
a48 1
@@@@ -3204,6 +3202,20 @@@@ case $host_os in
d69 1
a69 1
@@@@ -5572,6 +5584,7 @@@@ $echo "local: *; };" >> $output_objdir/$
@

