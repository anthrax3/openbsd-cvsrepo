head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.14
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.12
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.10
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.6
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.8
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	sthen_20140316:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2014.03.16.11.26.21;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.03.16.11.26.21;	author sthen;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
Don't clutter build logs.
--- configure.orig	Sat Dec  7 20:14:13 2013
+++ configure	Fri Jan 24 16:13:42 2014
@@@@ -15377,7 +15377,6 @@@@ fi
                      -Wcast-qual \
                      -Wextra \
                      -Wpointer-arith \
-                     -Wredundant-decls \
                      -Wreturn-type \
                      -Wshadow \
                      -Wsign-compare \
@


1.1.1.1
log
@import devel/lutok, from Sergey Bronnikov, ok shadchin@@ pre-lock, only minor
changes since.

Lutok provides thin C++ wrappers around the Lua C API to easy the
interaction between C++ and Lua.  These wrappers make intensive use of
RAII to prevent resource leakage, expose C++-friendly data types, report
errors by means of exceptions and ensure that the Lua stack is always
left untouched in the face of errors. The library also provides a small
subset of miscellaneous utility functions built on top of the wrappers.
@
text
@@
