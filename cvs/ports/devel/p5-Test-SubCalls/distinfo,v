head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.10
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.14
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.12
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.10
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.8
	OPENBSD_5_0:1.1.1.1.0.6
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.4
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	jim_2010-Jun-30:1.1.1.1
	jim:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.01.18.03.13.36;	author naddy;	state Exp;
branches;
next	1.1;
commitid	INAcawJqik7lWSVj;

1.1
date	2010.06.30.16.45.28;	author jim;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.06.30.16.45.28;	author jim;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Drop remaining MD5/RMD160/SHA1 checksums.
@
text
@SHA256 (Test-SubCalls-1.09.tar.gz) = ozSwRX2jONeb4tu2LUA3AfyQ92B9+EARX/Re4eK9bnA=
SIZE (Test-SubCalls-1.09.tar.gz) = 25727
@


1.1
log
@Initial revision
@
text
@a0 3
MD5 (Test-SubCalls-1.09.tar.gz) = l1qf6Nk+8CmPwbyo8DFm4Q==
RMD160 (Test-SubCalls-1.09.tar.gz) = 899DrUt80hF9J3Nnr3tNzySGFdQ=
SHA1 (Test-SubCalls-1.09.tar.gz) = pmFYbdcy+/aqWAP/j2TXJ6XTVwQ=
@


1.1.1.1
log
@import p5-Test-SubCalls

There are a number of different situations (like testing caching code)
where you want to want to do a number of tests, and then verify that
some underlying subroutine deep within the code was called a specific
number of times.

ok ajacoutot@@
@
text
@@
