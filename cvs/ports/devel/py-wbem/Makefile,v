head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.2
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.7.0.2
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.1.1.0.4
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	sthen_20123103:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2017.04.04.21.54.30;	author sthen;	state Exp;
branches;
next	1.7;
commitid	cqn3Et0aZkQLkeYw;

1.7
date	2017.03.18.22.35.12;	author sthen;	state Exp;
branches;
next	1.6;
commitid	6O1PvPLcySYkcrpn;

1.6
date	2015.09.29.10.52.12;	author sthen;	state Exp;
branches;
next	1.5;
commitid	xbfDwwa9BDEzVq2B;

1.5
date	2015.07.04.12.48.16;	author sthen;	state Exp;
branches;
next	1.4;
commitid	Kx53WZzOBoIcUNhu;

1.4
date	2015.07.03.20.31.44;	author sthen;	state Exp;
branches;
next	1.3;
commitid	KAd1eTxhPTxpzGDE;

1.3
date	2013.10.03.16.37.16;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.11.10.50.27;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.31.08.30.42;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.03.31.08.30.42;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.8
log
@missing RDEP on py-yaml
@
text
@# $OpenBSD: Makefile,v 1.7 2017/03/18 22:35:12 sthen Exp $

COMMENT=		CIM operations over HTTP in Python

MODPY_EGG_VERSION=	0.10.0
REVISION=		0
DISTNAME=		pywbem-${MODPY_EGG_VERSION}
PKGNAME=		py-wbem-${MODPY_EGG_VERSION}
CATEGORIES=		devel

HOMEPAGE=		http://pywbem.github.io/

# LGPLv2
PERMIT_PACKAGE_CDROM=	Yes

MODULES=		lang/python
MODPY_PI=		Yes

BUILD_DEPENDS=		${RUN_DEPENDS} \
			devel/py-pip${MODPY_FLAVOR}

RUN_DEPENDS=		devel/py-ply${MODPY_FLAVOR} \
			devel/py-six${MODPY_FLAVOR} \
			security/py-M2Crypto${MODPY_FLAVOR} \
			textproc/py-yaml${MODPY_FLAVOR}

MODPY_SETUPTOOLS=	Yes

.include <bsd.port.mk>
@


1.7
log
@update to py-wbem 0.10.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2015/09/29 10:52:12 sthen Exp $
d6 1
d24 2
a25 1
			security/py-M2Crypto${MODPY_FLAVOR}
@


1.6
log
@bump REVISION for setuptools dep change.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2015/07/04 12:48:16 sthen Exp $
d5 3
a7 5
MODPY_EGG_VERSION=	0.8.0_dev
DISTNAME=		pywbem-0.8.0-dev.r728
WRKDIST=		${WRKDIR}/pywbem-0.8.0-dev
PKGNAME=		py-wbem-0.8.0pre728
EXTRACT_SUFX=		.zip
a8 1
REVISION=		0
d10 1
a10 1
HOMEPAGE=		http://sourceforge.net/apps/mediawiki/pywbem/
d15 5
a19 1
MASTER_SITES=		${MASTER_SITE_SOURCEFORGE:=pywbem/}
d21 3
a23 3
MODULES=		lang/python
BUILD_DEPENDS=		${RUN_DEPENDS}
RUN_DEPENDS=		security/py-M2Crypto
d25 1
a25 1
#MODPY_SETUPTOOLS=	Yes
@


1.5
log
@fix DISTNAME
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2015/07/03 20:31:44 sthen Exp $
d11 1
@


1.4
log
@update to py-wbem-0.8.0-dev-r728, which has changes that are needed in
some situations now that python enforces SSL validation by default.
reset bouncing maintainer email.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/10/03 16:37:16 dcoppa Exp $
d6 1
a6 1
DISTNAME=		pywbem-0.8.0.r728
@


1.3
log
@Bye bye MODPY_BADEGGS
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/03/11 10:50:27 espie Exp $
d5 5
a9 3
MODPY_EGG_VERSION=	0.7.0
DISTNAME=		pywbem-${MODPY_EGG_VERSION}
PKGNAME=		py-wbem-${MODPY_EGG_VERSION}
a13 2
MAINTAINER=		Mark Peoples <marco@@azbsd.org>

d20 2
d23 1
a23 1
MODPY_SETUPTOOLS=	Yes
@


1.2
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2012/03/31 08:30:42 sthen Exp $
a21 1
MODPY_BADEGGS=		pywbem
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
a15 3
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM= Yes
PERMIT_DISTFILES_FTP=	Yes
@


1.1.1.1
log
@import ports/devel/py-wbem, from Mark Peoples, ok merdely@@
- add MODPY_BADEGGS to fix cleaning as non-root

PyWBEM is a Python library for making CIM operations over HTTP using the
WBEM CIM-XML protocol. It is based on the idea that a good WBEM client
should be easy to use and not necessarily require a large amount of
programming knowledge. PyWBEM is suitable for a large range of tasks
from simply poking around to writing web and GUI applications.
@
text
@@
