head	1.20;
access;
symbols
	OPENBSD_6_0:1.19.0.6
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.4
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.17.0.6
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.2
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.13.0.2
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	jeremy_2010-Dec-20:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.20
date	2016.11.04.21.31.46;	author jeremy;	state Exp;
branches;
next	1.19;
commitid	Wy4I49Wc8h0AQoZG;

1.19
date	2015.07.26.03.33.31;	author jeremy;	state Exp;
branches;
next	1.18;
commitid	oXY4WoGLIOtLPTcq;

1.18
date	2015.07.19.02.10.31;	author jeremy;	state Exp;
branches;
next	1.17;
commitid	A33PdkIjYp6nCrLn;

1.17
date	2014.01.15.02.13.58;	author jeremy;	state Exp;
branches;
next	1.16;

1.16
date	2013.11.03.07.52.02;	author ajacoutot;	state Exp;
branches;
next	1.15;

1.15
date	2013.10.26.23.55.35;	author jeremy;	state Exp;
branches;
next	1.14;

1.14
date	2013.08.07.21.57.50;	author naddy;	state Exp;
branches;
next	1.13;

1.13
date	2013.03.11.10.50.29;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2013.03.08.10.41.26;	author jasper;	state Exp;
branches;
next	1.11;

1.11
date	2013.01.09.17.38.52;	author jeremy;	state Exp;
branches;
next	1.10;

1.10
date	2012.09.23.16.57.33;	author jeremy;	state Exp;
branches;
next	1.9;

1.9
date	2011.12.02.19.34.42;	author jeremy;	state Exp;
branches;
next	1.8;

1.8
date	2011.11.17.16.08.00;	author jeremy;	state Exp;
branches;
next	1.7;

1.7
date	2011.11.09.00.17.38;	author jeremy;	state Exp;
branches;
next	1.6;

1.6
date	2011.09.16.09.24.57;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2011.08.18.09.49.12;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.10.23.51.36;	author jeremy;	state Exp;
branches;
next	1.3;

1.3
date	2011.01.02.13.20.53;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.27.18.58.40;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.20.18.04.16;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.12.20.18.04.16;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Update to ruby-ffi 1.9.14
@
text
@# $OpenBSD: Makefile,v 1.19 2015/07/26 03:33:31 jeremy Exp $

COMMENT =	cross-platform dynamic library loading for ruby

DISTNAME =	ffi-1.9.14
CATEGORIES =	devel

HOMEPAGE=	https://github.com/ffi/ffi

MAINTAINER =	Jeremy Evans <jeremy@@openbsd.org>

# LPGLv3
PERMIT_PACKAGE_CDROM =	Yes

MODULES =	lang/ruby

WANTLIB =	ffi

LIB_DEPENDS =	devel/libffi

CONFIGURE_STYLE = ruby gem ext

TEST_DEPENDS = ${FULLPKGNAME}:${BUILD_PKGPATH}
MODRUBY_TEST = rspec3
MODRUBY_TEST_TARGET = spec/ffi/*_spec.rb

.include <bsd.port.mk>
@


1.19
log
@Update to ffi 1.9.10
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2015/07/19 02:10:31 jeremy Exp $
d5 1
a5 1
DISTNAME =	ffi-1.9.10
@


1.18
log
@Remove MODRUBY_RAKE_DEPENDS.  Only necessary on ruby 1.8, and none of
the ports that use it are still built with ruby 1.8.

OK ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2014/01/15 02:13:58 jeremy Exp $
d5 1
a5 2
DISTNAME =	ffi-1.2.0
REVISION =	4
d23 3
a25 12
post-extract:
	rm ${WRKSRC}/ext/ffi_c/LongDouble.c.orig

post-install:
	rm -r ${GEM_ABS_PATH}/gems/${DISTNAME}/ext

# Doesn't ship with libtest directory, which is necessary for test
#TEST_DEPENDS = ${FULLPKGNAME}:${BUILD_PKGPATH}
#MODRUBY_TEST = rspec2
#MODRUBY_TEST_ENV = RUBYLIB=$$(dirname `${GEM} which ffi.rb`) \
#			RUBYOPT=-rffi
#MODRUBY_TEST_TARGET = spec/ffi/*_spec.rb
@


1.17
log
@Bump ruby gem ext ports after change to WANTLIB in ruby.port.mk
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2013/11/03 07:52:02 ajacoutot Exp $
d6 1
a6 1
REVISION =	3
a16 3

BUILD_DEPENDS = ${RUN_DEPENDS}
RUN_DEPENDS =	${MODRUBY_RAKE_DEPENDS}
@


1.16
log
@No need for /-lpthread/-pthread
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2013/10/26 23:55:35 jeremy Exp $
d6 1
a6 1
REVISION =	2
@


1.15
log
@Bump all ruby gem ports supporting rbx FLAVOR due to change to rubinius
gem directory when upgrading rubinius from 1.2.4 to 2.1.1.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2013/08/07 21:57:50 naddy Exp $
d6 1
a6 1
REVISION =	1
@


1.14
log
@move http://github.com and http://bitbucket.org to https
suggested by bentley@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2013/03/11 10:50:29 espie Exp $
d6 1
a6 1
REVISION =	0
@


1.13
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2013/03/08 10:41:26 jasper Exp $
d6 1
d9 1
a9 1
HOMEPAGE=	http://github.com/ffi/ffi
@


1.12
log
@- update to ruby-ffi-1.2.0

ok jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2013/01/09 17:38:52 jeremy Exp $
a13 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM = Yes
PERMIT_DISTFILES_FTP =	Yes
d32 4
a35 4
# Doesn't ship with libtest directory, which is necessary for regress
#REGRESS_DEPENDS = ${FULLPKGNAME}:${BUILD_PKGPATH}
#MODRUBY_REGRESS = rspec2
#MODRUBY_REGRESS_ENV = RUBYLIB=$$(dirname `${GEM} which ffi.rb`) \
d37 1
a37 1
#MODRUBY_REGRESS_TARGET = spec/ffi/*_spec.rb
@


1.11
log
@Revision bump ruby C extension ports after addition of pthread to
WANTLIB.

OK sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2012/09/23 16:57:33 jeremy Exp $
d5 1
a5 1
DISTNAME =	ffi-1.0.9
a6 1
REVISION =	3
d28 3
@


1.10
log
@Bump revisions for ruby gem/extconf ports after the switch to ruby 1.9
by default, since the ruby 1.8 version now has a ruby18 explicit FLAVOR.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2011/12/02 19:34:42 jeremy Exp $
d7 1
a7 1
REVISION =	2
@


1.9
log
@Remove NO_REGRESS setting, now handled by ruby.port.mk.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2011/11/17 16:08:00 jeremy Exp $
d7 1
a7 1
REVISION =	1
@


1.8
log
@Update ruby ports to deal with the regress changes to ruby.port.mk.

Start using MODRUBY_REGRESS with ruby, rspec2, and testrb entries.
Switch away from manual do_regress targets where possible.  Add
some patches to make regress tests run for some ports.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2011/11/09 00:17:38 jeremy Exp $
d33 1
a33 3
# Doesn't ship with libtest directory, which is necessary for
# regress
NO_REGRESS = Yes
@


1.7
log
@Remove .require_paths from PLISTs from gems that used to use
them.  After recent updates to the ruby interpreters, these
files are no longer created.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2011/09/16 09:24:57 espie Exp $
d33 8
a40 6
# Regress currently broken, libtest directory needed and not
# included in the gem
NO_REGRESS =	yes
REGRESS_DEPENDS = devel/ruby-rake-compiler,${MODRUBY_FLAVOR}
MODRUBY_REGRESS = rake rspec
RAKE_REGRESS_TARGET = specs
@


1.6
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2011/08/18 09:49:12 jasper Exp $
d7 1
a7 1
REVISION=		0
@


1.5
log
@- update to ffi-1.0.9

ok jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2011/03/10 23:51:36 jeremy Exp $
d7 1
@


1.4
log
@Bump version to 1.0.6.  Fixes building with ruby 1.9.

Add NO_REGRESS while here since the distfile doesn't include
the necessary files (thanks landry@@).

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2011/01/02 13:20:53 jasper Exp $
d5 1
a5 1
DISTNAME =	ffi-1.0.6
@


1.3
log
@- unbreak
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2010/12/27 18:58:40 jasper Exp $
d5 1
a5 2
DISTNAME =	ffi-0.6.3
REVISION =	1
d34 1
@


1.2
log
@- add missing dependencies
- extend platform ifdefs to fix build on mip64(el), and several others too
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2010/12/20 18:04:16 jeremy Exp $
d6 1
a6 1
REVISION =	0
d23 4
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2010/10/07 15:06:08 jeremy Exp $
d6 1
d20 3
@


1.1.1.1
log
@Import ruby-ffi 0.6.3

Ruby-FFI is a ruby extension for programmatically loading dynamic
libraries, binding functions within them, and calling those functions
from Ruby code. Moreover, a Ruby-FFI extension works without changes on
Ruby and JRuby.

* It has a very intuitive DSL
* It supports all C native types
* It supports C structs (also nested), enums and global variables
* It supports callbacks
* It has smart methods to handle memory management of pointers and
  structs
@
text
@@
