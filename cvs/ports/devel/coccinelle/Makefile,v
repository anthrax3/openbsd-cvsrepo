head	1.34;
access;
symbols
	OPENBSD_6_0:1.33.0.2
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.30.0.2
	OPENBSD_5_9_BASE:1.30
	OPENBSD_5_8:1.24.0.6
	OPENBSD_5_8_BASE:1.24
	OPENBSD_5_7:1.24.0.2
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.22.0.6
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.4
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.2
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.21.0.2
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.15.0.2
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	sthen20110514:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.34
date	2016.11.01.22.02.59;	author krw;	state Exp;
branches;
next	1.33;
commitid	EC9e4iqUTJjR6tNn;

1.33
date	2016.06.26.14.36.58;	author krw;	state Exp;
branches;
next	1.32;
commitid	t5voSpIK3NaLBBG6;

1.32
date	2016.06.24.15.59.11;	author krw;	state Exp;
branches;
next	1.31;
commitid	uNq7PAnG26SO2XnT;

1.31
date	2016.03.20.16.12.23;	author naddy;	state Exp;
branches;
next	1.30;
commitid	guiZq8cnNbVyyHzx;

1.30
date	2015.12.10.08.47.02;	author landry;	state Exp;
branches;
next	1.29;
commitid	Pzk2GvmN5Q7jFdHB;

1.29
date	2015.10.29.15.41.36;	author sthen;	state Exp;
branches;
next	1.28;
commitid	TSo2trZwozDVp3J0;

1.28
date	2015.10.27.14.43.07;	author sthen;	state Exp;
branches;
next	1.27;
commitid	fCrlbSItEm96Kw0T;

1.27
date	2015.09.18.20.36.35;	author sthen;	state Exp;
branches;
next	1.26;
commitid	n0SUmaKyeAidM3B4;

1.26
date	2015.09.13.15.21.15;	author sthen;	state Exp;
branches;
next	1.25;
commitid	5RIVhZ8FZczDXszL;

1.25
date	2015.08.30.16.18.48;	author avsm;	state Exp;
branches;
next	1.24;
commitid	1LnxE3ktBQPdRGqE;

1.24
date	2014.09.02.09.24.44;	author chrisz;	state Exp;
branches;
next	1.23;
commitid	KxJKmDEHHsyD4e4B;

1.23
date	2014.08.22.22.49.07;	author kili;	state Exp;
branches;
next	1.22;
commitid	EuOaFLY1ck9pjbE0;

1.22
date	2013.03.11.10.50.02;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2012.12.03.20.08.46;	author chrisz;	state Exp;
branches;
next	1.20;

1.20
date	2012.11.27.12.23.57;	author sthen;	state Exp;
branches;
next	1.19;

1.19
date	2012.11.27.10.07.59;	author sthen;	state Exp;
branches;
next	1.18;

1.18
date	2012.10.29.12.14.39;	author sthen;	state Exp;
branches;
next	1.17;

1.17
date	2012.10.12.20.53.39;	author sthen;	state Exp;
branches;
next	1.16;

1.16
date	2012.10.12.19.59.32;	author sthen;	state Exp;
branches;
next	1.15;

1.15
date	2012.07.18.08.04.43;	author sthen;	state Exp;
branches;
next	1.14;

1.14
date	2011.11.03.22.13.23;	author jasper;	state Exp;
branches;
next	1.13;

1.13
date	2011.09.16.09.24.49;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2011.09.15.15.54.41;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2011.09.08.20.09.00;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2011.08.30.10.20.11;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2011.08.22.00.37.49;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2011.08.16.08.26.16;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.05.08.38.06;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2011.06.22.11.28.36;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2011.06.16.23.24.49;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2011.06.12.12.31.47;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2011.06.08.17.40.08;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2011.05.15.10.17.38;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.14.15.02.50;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.05.14.15.02.50;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.34
log
@Update ocaml-pcre to 7.2.3. Bump revision of ports depending on ocaml-pcre.
@
text
@# $OpenBSD: Makefile,v 1.33 2016/06/26 14:36:58 krw Exp $

COMMENT =	program matching and transformation engine

# if updating, check for any additional use of diff/grep which
# may need to be switched to gdiff/ggrep
DISTNAME =	coccinelle-1.0.4
EXTRACT_SUFX =	.tgz
REVISION = 1

CATEGORIES =	devel

HOMEPAGE =	http://coccinelle.lip6.fr/

# GPLv2 only
PERMIT_PACKAGE_CDROM =	 Yes

WANTLIB += c curses m pthread util pcre ${MODPY_WANTLIB}

MASTER_SITES = ${HOMEPAGE}distrib/

MODULES =		lang/ocaml \
			lang/python

BUILD_DEPENDS =		${RUN_DEPENDS} \
			lang/ocaml-camlp4 \
			print/texlive/base \
			print/texlive/texmf,-full \
			textproc/hevea \
			textproc/latexmk
RUN_DEPENDS =		devel/ocaml-parmap \
			devel/ocaml-pcre \
			sysutils/findlib \
			sysutils/ggrep \
			textproc/gdiff

# asks questions at the end if it does better than expected
TEST_IS_INTERACTIVE = Yes

CONFIGURE_STYLE =	gnu
CONFIGURE_ENV =		MAKE_PROGRAM=${MAKE_PROGRAM}
# The PKG_CHECK_MODULES autoconf macro doesn't have a way to use .private
CONFIGURE_ENV +=	PYTHON_LIBS="`pkg-config --static --libs python`" \
			ac_cv_path_PATCH="patch -z.ccorig"
CONFIGURE_ARGS =	--with-python=${MODPY_BIN}
CONFIGURE_ARGS +=	--disable-menhirLib # version in ports is too new

USE_GMAKE =	Yes
PORTHOME =	${WRKDIR}

TEST_TARGET =	test
TEST_DEPENDS =	${FULLPKGPATH}
TEST_ENV =	COCCINELLE_HOME=${TRUEPREFIX}/lib/coccinelle

.include <bsd.port.arch.mk>
.if ${PROPERTIES:Mocaml_native_dynlink}
# "world" builds both: opt AND byte
ALL_TARGET =		world
.else
# "all-release" builds either opt OR byte
ALL_TARGET =		all-release
.endif

pre-configure:
	perl -pi -e s,/usr/local,${TRUEPREFIX},g ${WRKSRC}/scripts/spatch*

post-install:
	${MODPY_BIN} ${MODPY_LIBDIR}/compileall.py \
	    ${PREFIX}/share/coccinelle/python/coccilib
	mv ${PREFIX}/lib/coccinelle/dllpycaml_stubs.so \
		${PREFIX}/lib/ocaml/stublibs/
	${INSTALL_DATA_DIR} ${PREFIX}/share/doc/coccinelle
	cd ${WRKSRC}/docs/manual; \
		${MAKE_PROGRAM} WEBDOCS=${PREFIX}/share/doc/coccinelle install

.include <bsd.port.mk>
@


1.33
log
@Change to PLIST means bumping REVISION.

Found by naddy@@ during bulk build. Seconded by espie@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2016/06/24 15:59:11 krw Exp $
d9 1
a9 1
REVISION = 0
@


1.32
log
@Upgrade Ocaml to 4.3.0 and tweak ports the minimal amount to keep
them all compiling.

Tweaks include updating

ocaml-batteries 2.3.1 -> 2.5.0
ocaml-lwt 2.4.8 -> 2.5.2
ocaml-ppx-tools 0.99.2 -> 4.03.0
ocaml-camlp4 4.02+6 -> 4.03+1
utop 1.15 -> 1.19.2

and fixes to coccinelle and wyrd to let them build on bytecode archs.

Other necessary tweaks from the various homes of the projects.

Everything still builds on amd64 (native and bytecode) and sparc64 (bytecode).

ok anil@@ sthen@@ so final 4.3.0 tweaks can be done in-tree.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2016/03/20 16:12:23 naddy Exp $
d9 1
@


1.31
log
@drop SHARED_ONLY from python and ruby ports
@
text
@d1 1
a1 5
# $OpenBSD: Makefile,v 1.30 2015/12/10 08:47:02 landry Exp $

BROKEN-alpha =	yes_prepare_ocamlcocci.cmi does not exist
BROKEN-powerpc = yes_prepare_ocamlcocci.cmi does not exist
BROKEN-sparc64 = yes_prepare_ocamlcocci.cmi does not exist
@


1.30
log
@Doesnt package on alpha/sparc64/macppc for yes_prepare_ocamlcocci.cmi
not existing, probably a dynamic ocaml fluff - ocaml ppl should have a
look.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2015/10/29 15:41:36 sthen Exp $
a2 1
SHARED_ONLY =	Yes
@


1.29
log
@update to coccinelle-1.0.4
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2015/10/27 14:43:07 sthen Exp $
d4 3
@


1.28
log
@update to coccinelle-1.0.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2015/09/18 20:36:35 sthen Exp $
d9 1
a9 1
DISTNAME =	coccinelle-1.0.3
@


1.27
log
@fix following ocaml-parmap changes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2015/09/13 15:21:15 sthen Exp $
d9 1
a9 2
DISTNAME =	coccinelle-1.0.2
REVISION =	0
d29 3
a31 1
			print/texlive/texmf,-full
d54 1
@


1.26
log
@update to coccinelle-1.0.2
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2015/08/30 16:18:48 avsm Exp $
d10 1
@


1.25
log
@bump REVISION for OCaml 4.02.3 update
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2014/09/02 09:24:44 chrisz Exp $
d9 1
a9 3
DISTNAME =	coccinelle-1.0.0-rc15
REVISION =	4
PKGNAME =	${DISTNAME:S/-rc/rc/}
d26 6
a31 2
BUILD_DEPENDS =		${RUN_DEPENDS} lang/ocaml-camlp4
RUN_DEPENDS =		devel/ocaml-pcre \
a34 1
TEST_DEPENDS =	${FULLPKGPATH}
d42 2
a43 1
CONFIGURE_ENV +=	PYTHON_LIBS="`pkg-config --static --libs python`"
d45 1
d47 2
a48 1
USE_GMAKE =		Yes
d51 1
d55 1
a55 1
# word builds both: opt AND byte
d58 1
a58 1
# all-release builds either opt OR byte
d68 1
a68 2
	mv \
		${PREFIX}/share/coccinelle/dllpycaml_stubs.so \
d70 3
@


1.24
log
@Upgrade OCaml to 4.02. Since camlp4 is now a seperate port,
add / change BUILD_DEPENDS for all ports using camlp4.
Findlib is changed because it won't use camlp4 and doesn't install
the Bytes module anymore, which is now included in OCaml 4.02.

ok avsm@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2014/08/22 22:49:07 kili Exp $
d10 1
a10 1
REVISION =	3
@


1.23
log
@More bumps due to lang/ocaml pkgname change.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2013/03/11 10:50:02 espie Exp $
d28 1
a28 1
BUILD_DEPENDS =		${RUN_DEPENDS}
@


1.22
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2012/12/03 20:08:46 chrisz Exp $
d10 1
a10 1
REVISION =	2
@


1.21
log
@Bump revision after ocaml update.
ok from anil and @@jasper
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2012/11/27 12:23:57 sthen Exp $
a19 3
PERMIT_PACKAGE_FTP =	 Yes
PERMIT_DISTFILES_CDROM = Yes
PERMIT_DISTFILES_FTP =	 Yes
d33 1
a33 1
REGRESS_DEPENDS =	${FULLPKGPATH}
d36 1
a36 1
REGRESS_IS_INTERACTIVE = Yes
d46 1
a46 1
REGRESS_TARGET =	test
@


1.20
log
@remove CLEANDEPENDS workaround no longer needed.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2012/11/27 10:07:59 sthen Exp $
d10 1
a10 1
REVISION =	1
@


1.19
log
@- fix packaging on architectures which are native, non-dynlink for OCaml

- set CLEANDEPENDS_devel_coccinelle=No to fix regress now that dependencies
are auto-cleaned (coccinelle must itself be installed to run the tests)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2012/10/29 12:14:39 sthen Exp $
a35 1

a36 1
CLEANDEPENDS_devel_coccinelle = No
@


1.18
log
@fix PYTHON_LIBS setting, pointed out by espie@@.

- generally avoid using != in port Makefiles, but in particular don't use it
in a way where it has a dependency on some other package being installed.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2012/10/12 20:53:39 sthen Exp $
d10 1
a10 1
REVISION =	0
a31 1
REGRESS_DEPENDS =	${FULLPKGPATH}
d37 3
a70 1

@


1.17
log
@remove a gnu-specific flag in find command lines
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2012/10/12 19:59:32 sthen Exp $
a40 2
PYTHON_LIBS !=		pkg-config --static --libs python

d42 3
a44 2
CONFIGURE_ENV =		MAKE_PROGRAM=${MAKE_PROGRAM} \
			PYTHON_LIBS="${PYTHON_LIBS}"
@


1.16
log
@update to coccinelle 1.0.0-rc15
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2012/07/18 08:04:43 sthen Exp $
d10 1
@


1.15
log
@update to Cocinelle 1.0.0-rc11
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2011/11/03 22:13:23 jasper Exp $
d9 1
a9 1
DISTNAME =	coccinelle-1.0.0-rc11
a16 2
MAINTAINER =	Stuart Henderson <sthen@@openbsd.org>

d23 1
a23 1
WANTLIB += c m pthread util pcre ${MODPY_WANTLIB}
d40 7
a47 3
CONFIGURE_STYLE =	simple
CONFIGURE_ENV =		MAKE_PROGRAM=${MAKE_PROGRAM}
CONFIGURE_ARGS =	--with-python=${MODPY_BIN}
a49 1
SUBST_VARS +=		MAKE_PROGRAM
d51 4
a54 9
# can't use MODOCAML_NATIVE here because we need not
# just native code, but also dynlink
.if ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "amd64"
# "world"=build both bytecode and native binaries
# "all.opt"=only build native binaries (but regression
# tests didn't work with this)
ALL_TARGET =	world
INSTALL_TARGET = install-common install-def install-man
PKG_ARGS +=	-DOCAMLOPT=.opt
d56 2
a57 2
WANTLIB +=	curses
PKG_ARGS +=	-DOCAMLOPT=
a60 1
	${SUBST_CMD} ${WRKSRC}/pycaml/Makefile
d66 4
@


1.14
log
@- regen WANTLIB
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2011/09/16 09:24:49 espie Exp $
d9 1
a9 2
DISTNAME =	coccinelle-1.0.0-rc7
REVISION =	3
d45 1
d65 1
a65 1
	${SUBST_CMD} ${WRKSRC}/configure ${WRKSRC}/pycaml/Makefile
@


1.13
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2011/09/15 15:54:41 sthen Exp $
d10 1
a10 1
REVISION =	2
d26 1
a26 1
WANTLIB += c m pthread util ${MODPY_WANTLIB}
@


1.12
log
@- add ocaml-pcre as a dependency

- add url to a nice introduction to DESCR (namely,
http://home.regit.org/technical-articles/coccinelle-for-the-newbie/)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2011/09/08 20:09:00 sthen Exp $
d10 1
a10 1
REVISION =	1
@


1.11
log
@bytecode-compile the python parts
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2011/08/30 10:20:11 sthen Exp $
d10 1
a10 1
REVISION =	0
d35 2
a36 1
RUN_DEPENDS =		sysutils/findlib \
a38 1
# later:		devel/ocaml-pcre
@


1.10
log
@update to coccinelle 1.0 rc7
Note: !=~ has changed to !~
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2011/08/22 00:37:49 sthen Exp $
d10 1
a49 4
pre-configure:
	${SUBST_CMD} ${WRKSRC}/configure ${WRKSRC}/pycaml/Makefile
	perl -pi -e s,/usr/local,${TRUEPREFIX},g ${WRKSRC}/scripts/spatch*

d63 8
@


1.9
log
@Update to coccinelle 1.0.0-rc6.
N.B. The operator to match a regexp changed to the perl style '=~'.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2011/08/16 08:26:16 sthen Exp $
d9 1
a9 1
DISTNAME =	coccinelle-1.0.0-rc6
d37 1
@


1.8
log
@update to Coccinelle 1.0.0rc5
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2011/07/05 08:38:06 sthen Exp $
d9 1
a9 1
DISTNAME =	coccinelle-1.0.0-rc5
d59 1
a59 1
INSTALL_TARGET = install-common install-def
@


1.7
log
@update to coccinelle 1.0.0rc4
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2011/06/22 11:28:36 sthen Exp $
d9 1
a9 1
DISTNAME =	coccinelle-1.0.0-rc4
@


1.6
log
@take maintainer
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2011/06/16 23:24:49 sthen Exp $
d9 1
a9 1
DISTNAME =	coccinelle-1.0.0-rc3
a10 1
REVISION =	0
@


1.5
log
@update to coccinelle 1.0rc3 and fix running the regression tests

- Better handling of the case of a matched declaration that should only
  be replaced by other top level things.
- Improved filtering of result of matching atomic patterns
- Drop positions before creating function prototype rules
- Adjust position of { introduced by adding multiple statements in a
  single-statement position
- Drop newline after function call ( when all arguments on that line are
  eliminated
- Accept removal of a single declaration, replaced by arbitrary,
  non-declaration code
- smpl_spacing takes into account newlines, indentation
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2011/06/12 12:31:47 sthen Exp $
d11 1
d17 2
@


1.4
log
@update to coccinelle 1.0.0-rc2, tested by mk@@.
(yes I know there is an rc3, will update later).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2011/06/08 17:40:08 jasper Exp $
d9 1
a9 1
DISTNAME =	coccinelle-1.0.0-rc2
d50 2
a51 1
# can't use MODOCAML_NATIVE because it also needs dynlink
d53 5
a57 1
ALL_TARGET =	all.opt
@


1.3
log
@bump after default python version switch
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2011/05/15 10:17:38 sthen Exp $
d9 1
a9 1
DISTNAME =	coccinelle-1.0.0-rc1
a10 1
REVISION =	1
@


1.2
log
@- Coccinelle native-code builds require dynlib support so only attempt
to use this where dynlib is available

- on native-code arch, only build the native version and install this
to be used by default - it's about 5x faster
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2011/05/14 15:02:50 sthen Exp $
d11 1
a11 1
REVISION =	0
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.template,v 1.54 2008/01/13 16:43:57 espie Exp $
d11 1
d24 1
a24 1
WANTLIB += c curses m pthread util ${MODPY_WANTLIB}
d49 10
a60 4

.if defined(MODOCAML_NATIVE) && ${MODOCAML_NATIVE:L} == "yes"
ALL_TARGET =		world
.endif
@


1.1.1.1
log
@import ports/net/coccinelle, help from kili@@ and Amit Kulkarni.
tweak & ok mk@@.

Coccinelle is a program matching and transformation engine which
provides the language SmPL (Semantic Patch Language) for specifying
desired matches and transformations in C code.

Coccinelle was initially targeted towards performing collateral
evolutions in Linux. Such evolutions comprise the changes that are
needed in client code in response to evolutions in library APIs, and may
include modifications such as renaming a function, adding a function
argument whose value is somehow context-dependent, and reorganizing a
data structure.

Beyond collateral evolutions, Coccinelle is successfully used (by INRIA
and others) for finding and fixing bugs in systems code.
@
text
@@
