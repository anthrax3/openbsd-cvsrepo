head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.1.1.0.6
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.4
	OPENBSD_5_0:1.1.1.1.0.2
	OPENBSD_5_0_BASE:1.1.1.1
	sthen20110514:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.10.12.19.59.33;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2011.05.14.15.02.50;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.05.14.15.02.50;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to coccinelle 1.0.0-rc15
@
text
@$OpenBSD: patch-pycaml_Makefile,v 1.1 2011/05/14 15:02:50 sthen Exp $
--- pycaml/Makefile.orig	Sat Jan 29 14:43:21 2011
+++ pycaml/Makefile	Thu May  5 22:23:52 2011
@@@@ -1,9 +1,9 @@@@
 #pad: was called Makefile.deb-pycaml before
 
 OCAMLMAKEFILE = OCamlMakefile
-PY_PREFIX = $(shell python getprefix.py)
-PY_VERSION = $(shell python getversion.py)
-CLIBS = python$(PY_VERSION) pthread dl util m c
+PY_PREFIX = $(shell ${MODPY_BIN} getprefix.py)
+PY_VERSION = $(shell ${MODPY_BIN} getversion.py)
+CLIBS = python$(PY_VERSION) pthread util m c
 
 SOURCES = pycaml.ml pycaml_ml.c
 RESULT = pycaml
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import ports/net/coccinelle, help from kili@@ and Amit Kulkarni.
tweak & ok mk@@.

Coccinelle is a program matching and transformation engine which
provides the language SmPL (Semantic Patch Language) for specifying
desired matches and transformations in C code.

Coccinelle was initially targeted towards performing collateral
evolutions in Linux. Such evolutions comprise the changes that are
needed in client code in response to evolutions in library APIs, and may
include modifications such as renaming a function, adding a function
argument whose value is somehow context-dependent, and reorganizing a
data structure.

Beyond collateral evolutions, Coccinelle is successfully used (by INRIA
and others) for finding and fixing bugs in systems code.
@
text
@@
