head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.5.0.14
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.10
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	sthen20110514:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2015.10.27.14.43.07;	author sthen;	state Exp;
branches;
next	1.6;
commitid	fCrlbSItEm96Kw0T;

1.6
date	2015.09.13.15.21.15;	author sthen;	state Exp;
branches;
next	1.5;
commitid	5RIVhZ8FZczDXszL;

1.5
date	2012.10.12.19.59.32;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2012.07.18.08.04.43;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2011.08.16.08.26.16;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2011.06.16.23.24.49;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.14.15.02.50;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.05.14.15.02.50;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update to coccinelle-1.0.3
@
text
@$OpenBSD: patch-cocci_ml,v 1.6 2015/09/13 15:21:15 sthen Exp $
--- cocci.ml.orig	Mon Oct 26 16:22:50 2015
+++ cocci.ml	Tue Oct 27 14:33:27 2015
@@@@ -245,8 +245,8 @@@@ let show_or_not_diff2 cfile outfile =
 
       let line =
 	match !Flag_parsing_c.diff_lines with
-	| None ->   "diff -u -p " ^ cfile ^ " " ^ outfile
-	| Some n -> "diff -U "^n^" -p "^cfile^" "^outfile in
+	| None ->   "gdiff -u -p " ^ cfile ^ " " ^ outfile
+	| Some n -> "gdiff -U "^n^" -p "^cfile^" "^outfile in
       let res = Common.cmd_to_list line in
       (match res with
 	[] -> ()
@@@@ -524,7 +524,7 @@@@ let worth_trying2 cfiles (tokens,_,query,_) =
 
       ) in
       let com =
-	Printf.sprintf "egrep -q '(%s)' %s"
+	Printf.sprintf "gegrep -q '(%s)' %s"
 	  (String.concat "|" tokens) (String.concat " " cfiles) in
       (match Sys.command com with
       | 0 (* success *) -> true
@@@@ -2293,7 +2293,7 @@@@ let check_duplicate_modif2 xs =
               match res2 with
               | None -> false
               | Some res2 ->
-                  let diff = Common.cmd_to_list ("diff -u -b -B "^res^" "^res2)
+                  let diff = Common.cmd_to_list ("gdiff -u -b -B "^res^" "^res2)
                   in
                   diff = []
             ) xs) then begin
@


1.6
log
@update to coccinelle-1.0.2
@
text
@d1 4
a4 4
$OpenBSD: patch-cocci_ml,v 1.5 2012/10/12 19:59:32 sthen Exp $
--- cocci.ml.orig	Tue Aug 18 09:31:35 2015
+++ cocci.ml	Thu Sep 10 17:50:24 2015
@@@@ -267,8 +267,8 @@@@ let show_or_not_diff2 cfile outfile =
d15 1
a15 1
@@@@ -546,7 +546,7 @@@@ let worth_trying2 cfiles (tokens,_,query,_) =
d19 3
a21 3
-	sprintf "egrep -q '(%s)' %s" (join "|" tokens) (join " " cfiles)
+	sprintf "gegrep -q '(%s)' %s" (join "|" tokens) (join " " cfiles)
       in
d24 1
a24 1
@@@@ -2314,7 +2314,7 @@@@ let check_duplicate_modif2 xs =
@


1.5
log
@update to coccinelle 1.0.0-rc15
@
text
@d1 4
a4 4
$OpenBSD: patch-cocci_ml,v 1.4 2012/07/18 08:04:43 sthen Exp $
--- cocci.ml.orig	Mon Jul 16 17:22:27 2012
+++ cocci.ml	Sun Aug  5 09:31:54 2012
@@@@ -269,8 +269,8 @@@@ let show_or_not_diff2 cfile outfile =
d6 10
a15 11
 	let line =
 	  match !Flag_parsing_c.diff_lines with
-	  | None ->   "diff -u -p " ^ cfile ^ " " ^ outfile
-	  | Some n -> "diff -U "^n^" -p "^cfile^" "^outfile in
+	  | None ->   "gdiff -u -p " ^ cfile ^ " " ^ outfile
+	  | Some n -> "gdiff -U "^n^" -p "^cfile^" "^outfile in
 	let res = Common.cmd_to_list line in
 	let res =
 	  List.map
@@@@ -529,7 +529,7 @@@@ let worth_trying cfiles tokens =
 	| _ -> s
d18 3
a20 2
-      let com = sprintf "egrep -q '(%s)' %s" (join "|" tokens) (join " " cfiles)
+      let com = sprintf "gegrep -q '(%s)' %s" (join "|" tokens) (join " " cfiles)
d24 1
a24 1
@@@@ -2049,7 +2049,7 @@@@ let check_duplicate_modif2 xs =
d31 1
a31 1
                   null diff
@


1.4
log
@update to Cocinelle 1.0.0-rc11
@
text
@d1 4
a4 4
$OpenBSD: patch-cocci_ml,v 1.3 2011/08/16 08:26:16 sthen Exp $
--- cocci.ml.orig	Sun Mar 11 22:52:49 2012
+++ cocci.ml	Wed Mar 14 23:37:53 2012
@@@@ -268,8 +268,8 @@@@ let show_or_not_diff2 cfile outfile =
d15 1
a15 1
@@@@ -528,7 +528,7 @@@@ let worth_trying cfiles tokens =
d24 1
a24 1
@@@@ -2048,7 +2048,7 @@@@ let check_duplicate_modif2 xs =
@


1.3
log
@update to Coccinelle 1.0.0rc5
@
text
@d1 4
a4 4
$OpenBSD: patch-cocci_ml,v 1.2 2011/06/16 23:24:49 sthen Exp $
--- cocci.ml.orig	Wed Aug 10 20:10:48 2011
+++ cocci.ml	Thu Aug 11 15:49:26 2011
@@@@ -266,8 +266,8 @@@@ let show_or_not_diff2 cfile outfile =
d15 1
a15 1
@@@@ -526,7 +526,7 @@@@ let worth_trying cfiles tokens =
d24 1
a24 1
@@@@ -2032,7 +2032,7 @@@@ let check_duplicate_modif2 xs =
@


1.2
log
@update to coccinelle 1.0rc3 and fix running the regression tests

- Better handling of the case of a matched declaration that should only
  be replaced by other top level things.
- Improved filtering of result of matching atomic patterns
- Drop positions before creating function prototype rules
- Adjust position of { introduced by adding multiple statements in a
  single-statement position
- Drop newline after function call ( when all arguments on that line are
  eliminated
- Accept removal of a single declaration, replaced by arbitrary,
  non-declaration code
- smpl_spacing takes into account newlines, indentation
@
text
@d1 4
a4 4
$OpenBSD: patch-cocci_ml,v 1.1.1.1 2011/05/14 15:02:50 sthen Exp $
--- cocci.ml.orig	Fri Jun  3 17:55:52 2011
+++ cocci.ml	Thu Jun 16 23:48:24 2011
@@@@ -263,8 +263,8 @@@@ let show_or_not_diff2 cfile outfile =
d12 4
a15 4
 	let xs =
 	  let res = Common.cmd_to_list line in
 	  match (!Flag.patch,res) with
@@@@ -501,7 +501,7 @@@@ let worth_trying cfiles tokens =
d24 1
a24 1
@@@@ -1995,7 +1995,7 @@@@ let check_duplicate_modif2 xs =
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- cocci.ml.orig	Wed Apr 13 06:25:58 2011
+++ cocci.ml	Mon May  9 08:08:26 2011
d15 1
a15 1
@@@@ -495,7 +495,7 @@@@ let worth_trying cfiles tokens =
d24 1
a24 1
@@@@ -1979,7 +1979,7 @@@@ let check_duplicate_modif2 xs =
@


1.1.1.1
log
@import ports/net/coccinelle, help from kili@@ and Amit Kulkarni.
tweak & ok mk@@.

Coccinelle is a program matching and transformation engine which
provides the language SmPL (Semantic Patch Language) for specifying
desired matches and transformations in C code.

Coccinelle was initially targeted towards performing collateral
evolutions in Linux. Such evolutions comprise the changes that are
needed in client code in response to evolutions in library APIs, and may
include modifications such as renaming a function, adding a function
argument whose value is somehow context-dependent, and reorganizing a
data structure.

Beyond collateral evolutions, Coccinelle is successfully used (by INRIA
and others) for finding and fixing bugs in systems code.
@
text
@@
