head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.8
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.6
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.9.0.14
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.10
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.8
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.6
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.8.0.2
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	sthen20110514:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2015.10.29.15.41.36;	author sthen;	state Exp;
branches;
next	1.11;
commitid	TSo2trZwozDVp3J0;

1.11
date	2015.10.27.14.43.07;	author sthen;	state Exp;
branches;
next	1.10;
commitid	fCrlbSItEm96Kw0T;

1.10
date	2015.09.13.15.21.15;	author sthen;	state Exp;
branches;
next	1.9;
commitid	5RIVhZ8FZczDXszL;

1.9
date	2012.10.12.19.59.32;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2012.07.18.08.04.43;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2011.08.30.10.20.11;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2011.08.22.00.37.49;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2011.08.16.08.26.16;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2011.07.05.08.38.06;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2011.06.16.23.24.49;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2011.06.12.12.31.47;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.14.15.02.50;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.05.14.15.02.50;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.12
log
@update to coccinelle-1.0.4
@
text
@SHA256 (coccinelle-1.0.4.tgz) = f4I4E6LqKZwPbAHYQZuDxNxmFxFtMrqZ1yZEOhwisG0=
SIZE (coccinelle-1.0.4.tgz) = 2484218
@


1.11
log
@update to coccinelle-1.0.3
@
text
@d1 2
a2 2
SHA256 (coccinelle-1.0.3.tgz) = ExWQTUBo+tJGTdndcKtlXX/DHPEvxZmyEbce7jyrVwk=
SIZE (coccinelle-1.0.3.tgz) = 2814275
@


1.10
log
@update to coccinelle-1.0.2
@
text
@d1 2
a2 2
SHA256 (coccinelle-1.0.2.tgz) = TkW5BPQsm4RzIWh4LUkcjBqyO7hdsGxLm6J2K+qKxnk=
SIZE (coccinelle-1.0.2.tgz) = 2790829
@


1.9
log
@update to coccinelle 1.0.0-rc15
@
text
@d1 2
a2 2
SHA256 (coccinelle-1.0.0-rc15.tgz) = B/q04XUSkluViJC7E8CAl5cHTy5EoRB7AHS9zBVrlZY=
SIZE (coccinelle-1.0.0-rc15.tgz) = 3328556
@


1.8
log
@update to Cocinelle 1.0.0-rc11
@
text
@d1 2
a2 5
MD5 (coccinelle-1.0.0-rc11.tgz) = Yx/XH+BnMQ3XYAuGMyKryA==
RMD160 (coccinelle-1.0.0-rc11.tgz) = 6si/XpLdWyBHNv+mWiEfA8jokuU=
SHA1 (coccinelle-1.0.0-rc11.tgz) = pI37mtEHadqWdsnThwQ5eghm/0I=
SHA256 (coccinelle-1.0.0-rc11.tgz) = J10L7uWhZe1u39TacLmPn4AubeXVnrwHUEH/jBJtA98=
SIZE (coccinelle-1.0.0-rc11.tgz) = 2356524
@


1.7
log
@update to coccinelle 1.0 rc7
Note: !=~ has changed to !~
@
text
@d1 5
a5 5
MD5 (coccinelle-1.0.0-rc7.tgz) = QVJ1cKAyhwjDhUDfU8RRyA==
RMD160 (coccinelle-1.0.0-rc7.tgz) = WpmedR5VIyAVwnQaJepPmDWpGXw=
SHA1 (coccinelle-1.0.0-rc7.tgz) = QlRLpbVZd5NiCxezMWEjiGCe+fo=
SHA256 (coccinelle-1.0.0-rc7.tgz) = t0q2BpOM1IG9RRW3fzMOZuIexjQLEApvbc/ZJnquU7o=
SIZE (coccinelle-1.0.0-rc7.tgz) = 2337344
@


1.6
log
@Update to coccinelle 1.0.0-rc6.
N.B. The operator to match a regexp changed to the perl style '=~'.
@
text
@d1 5
a5 5
MD5 (coccinelle-1.0.0-rc6.tgz) = dZLnz+oiq4MG0E3l/tHqjg==
RMD160 (coccinelle-1.0.0-rc6.tgz) = E/QKAYUeE44pI8q2N9GdjINQFzI=
SHA1 (coccinelle-1.0.0-rc6.tgz) = NZFOID/RSHFd8q5k2efv+3nGI9s=
SHA256 (coccinelle-1.0.0-rc6.tgz) = QEGk7Pa/Mq7l+dMeSbIrMrd+DIPn5T4lyTDRjw9S5eE=
SIZE (coccinelle-1.0.0-rc6.tgz) = 2332592
@


1.5
log
@update to Coccinelle 1.0.0rc5
@
text
@d1 5
a5 5
MD5 (coccinelle-1.0.0-rc5.tgz) = ZKJqKOLXolKBEro/iwKR9g==
RMD160 (coccinelle-1.0.0-rc5.tgz) = 1aG3xaUEeqRnefKK9i7BC24GNEU=
SHA1 (coccinelle-1.0.0-rc5.tgz) = /+FOU6XL7J4gn1l3x3aLTRzNWIo=
SHA256 (coccinelle-1.0.0-rc5.tgz) = 7xWpEzicwo29g9DfQzlqT4x7xH0xqonMkXoGeqlT2Es=
SIZE (coccinelle-1.0.0-rc5.tgz) = 2326927
@


1.4
log
@update to coccinelle 1.0.0rc4
@
text
@d1 5
a5 5
MD5 (coccinelle-1.0.0-rc4.tgz) = 2aKUQ/QwX99RHrC6DPUyuA==
RMD160 (coccinelle-1.0.0-rc4.tgz) = kJw2JQJhFuZ1hZ2dsUKn7WH7Lqs=
SHA1 (coccinelle-1.0.0-rc4.tgz) = C1Bp4RF2GYs30R2qATIDRalLXx4=
SHA256 (coccinelle-1.0.0-rc4.tgz) = rHng4d5C/0yg53Vd77E972N6+u8reQ2aMyka+UmRW1A=
SIZE (coccinelle-1.0.0-rc4.tgz) = 2313736
@


1.3
log
@update to coccinelle 1.0rc3 and fix running the regression tests

- Better handling of the case of a matched declaration that should only
  be replaced by other top level things.
- Improved filtering of result of matching atomic patterns
- Drop positions before creating function prototype rules
- Adjust position of { introduced by adding multiple statements in a
  single-statement position
- Drop newline after function call ( when all arguments on that line are
  eliminated
- Accept removal of a single declaration, replaced by arbitrary,
  non-declaration code
- smpl_spacing takes into account newlines, indentation
@
text
@d1 5
a5 5
MD5 (coccinelle-1.0.0-rc3.tgz) = qqyLSlI24I5R8s4VmGKxNw==
RMD160 (coccinelle-1.0.0-rc3.tgz) = Bly0e5gaiio0TjiUT9RJ5yKloeI=
SHA1 (coccinelle-1.0.0-rc3.tgz) = noSqkdWTOMiSUvWaEfIAYWTAY2E=
SHA256 (coccinelle-1.0.0-rc3.tgz) = 0fmzALgp2e9LKV6NOf2dQ4jbN5VFIOGv8ZQXhmAwqCs=
SIZE (coccinelle-1.0.0-rc3.tgz) = 2308876
@


1.2
log
@update to coccinelle 1.0.0-rc2, tested by mk@@.
(yes I know there is an rc3, will update later).
@
text
@d1 5
a5 5
MD5 (coccinelle-1.0.0-rc2.tgz) = f7P3N7apm3k12ZZRVcgBUw==
RMD160 (coccinelle-1.0.0-rc2.tgz) = G7Lg06sH1KjeBBOYxk9gxgwfHFk=
SHA1 (coccinelle-1.0.0-rc2.tgz) = BXEc0aEojKkP62i/Im9p32jpbWA=
SHA256 (coccinelle-1.0.0-rc2.tgz) = yQAjN+oBpvmLCICgwj5ce6hJxPREHb8HsG89d5A4Mow=
SIZE (coccinelle-1.0.0-rc2.tgz) = 2308758
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
MD5 (coccinelle-1.0.0-rc1.tgz) = hS+DjO0nAQeYqc4ymRWGcw==
RMD160 (coccinelle-1.0.0-rc1.tgz) = K/+nuv3igyxfK4iy448eXZiQZYU=
SHA1 (coccinelle-1.0.0-rc1.tgz) = twb4XlJkmQD6CmsIO9A7UfhQ0y0=
SHA256 (coccinelle-1.0.0-rc1.tgz) = lfVO04s/28N9jPHF2CI0CtiqJbwpaulrfn30AqBZfCo=
SIZE (coccinelle-1.0.0-rc1.tgz) = 2293088
@


1.1.1.1
log
@import ports/net/coccinelle, help from kili@@ and Amit Kulkarni.
tweak & ok mk@@.

Coccinelle is a program matching and transformation engine which
provides the language SmPL (Semantic Patch Language) for specifying
desired matches and transformations in C code.

Coccinelle was initially targeted towards performing collateral
evolutions in Linux. Such evolutions comprise the changes that are
needed in client code in response to evolutions in library APIs, and may
include modifications such as renaming a function, adding a function
argument whose value is somehow context-dependent, and reorganizing a
data structure.

Beyond collateral evolutions, Coccinelle is successfully used (by INRIA
and others) for finding and fixing bugs in systems code.
@
text
@@
