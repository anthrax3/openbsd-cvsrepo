head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2015.10.05.08.52.10;	author dcoppa;	state dead;
branches;
next	1.2;
commitid	3YBmo2ZwX3VLdnGe;

1.2
date	2015.02.09.12.56.20;	author dcoppa;	state Exp;
branches;
next	1.1;
commitid	Bf9tXCAiOiQVUHRT;

1.1
date	2014.12.29.21.22.34;	author dcoppa;	state Exp;
branches;
next	;
commitid	aTnKrmOkFgWsu3Lu;


desc
@@


1.3
log
@
Update to ninja-1.6.0

kudos to aja@@ for the bulk build
@
text
@$OpenBSD: patch-configure_py,v 1.2 2015/02/09 12:56:20 dcoppa Exp $

commit 54d82356d8317a62f076eefdbe1ab62c88d1e6a6
Author: Ben Boeckel <mathstuf@@gmail.com>
Date:   Wed Dec 10 23:09:38 2014 -0500

configure: add a verbose mode

Required for Fedora infrastructure so that the commands used to build
ninja are logged.

--- configure.py.orig	Mon Nov 24 11:37:47 2014
+++ configure.py	Mon Feb  9 06:13:50 2015
@@@@ -106,8 +106,9 @@@@ class Bootstrap:
     It also proxies all calls to an underlying ninja_syntax.Writer, to
     behave like non-bootstrap mode.
     """
-    def __init__(self, writer):
+    def __init__(self, writer, verbose=False):
         self.writer = writer
+        self.verbose = verbose
         # Map of variable name => expanded variable value.
         self.vars = {}
         # Map of rule name => dict of rule attributes.
@@@@ -163,6 +164,8 @@@@ class Bootstrap:
     def _run_command(self, cmdline):
         """Run a subcommand, quietly.  Prints the full command on error."""
         try:
+            if self.verbose:
+                print(cmdline)
             subprocess.check_call(cmdline, shell=True)
         except subprocess.CalledProcessError, e:
             print('when running: ', cmdline)
@@@@ -173,6 +176,8 @@@@ parser = OptionParser()
 profilers = ['gmon', 'pprof']
 parser.add_option('--bootstrap', action='store_true',
                   help='bootstrap a ninja binary from nothing')
+parser.add_option('--verbose', action='store_true',
+                  help='enable verbose build')
 parser.add_option('--platform',
                   help='target platform (' +
                        '/'.join(Platform.known_platforms()) + ')',
@@@@ -217,7 +222,7 @@@@ if options.bootstrap:
     # Wrap ninja_writer with the Bootstrapper, which also executes the
     # commands.
     print('bootstrapping ninja...')
-    n = Bootstrap(n)
+    n = Bootstrap(n, verbose=options.verbose)
 
 n.comment('This file is used to build ninja itself.')
 n.comment('It is generated by ' + os.path.basename(__file__) + '.')
@@@@ -602,6 +607,10 @@@@ n.build('all', 'phony', all_targets)
 n.close()
 print('wrote %s.' % BUILD_FILENAME)
 
+verbose = ''
+if options.verbose:
+    verbose = ' -v'
+
 if options.bootstrap:
     print('bootstrap complete.  rebuilding...')
     if platform.is_windows():
@@@@ -609,6 +618,6 @@@@ if options.bootstrap:
         if os.path.exists(bootstrap_exe):
             os.unlink(bootstrap_exe)
         os.rename('ninja.exe', bootstrap_exe)
-        subprocess.check_call('ninja.bootstrap.exe', shell=True)
+        subprocess.check_call('ninja.bootstrap.exe%s' % verbose, shell=True)
     else:
-        subprocess.check_call('./ninja', shell=True)
+        subprocess.check_call('./ninja%s' % verbose, shell=True)
@


1.2
log
@
Verbose build; replace my cheap hack with the proper fix from
upstream:

commit 54d82356d8317a62f076eefdbe1ab62c88d1e6a6
Author: Ben Boeckel <mathstuf@@gmail.com>
Date:   Wed Dec 10 23:09:38 2014 -0500

configure: add a verbose mode

Required for Fedora infrastructure so that the commands used to build
ninja are logged.


While here, fix a typo in graph.cc: 'for for' -> 'for'
(upstream git commit 6ffb66d171a6962c2a7dad0492dffc42e65d666e)
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_py,v 1.1 2014/12/29 21:22:34 dcoppa Exp $
@


1.1
log
@
Update to ninja-1.5.3

No fallout in a bulk build
@
text
@d1 65
a65 4
$OpenBSD$
--- configure.py.orig	Mon Dec 29 20:14:47 2014
+++ configure.py	Mon Dec 29 20:17:25 2014
@@@@ -611,4 +611,4 @@@@ if options.bootstrap:
d67 2
a68 1
         subprocess.check_call('ninja.bootstrap.exe', shell=True)
d71 1
a71 1
+        subprocess.check_call('./ninja -v', shell=True)
@

