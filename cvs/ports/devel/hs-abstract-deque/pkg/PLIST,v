head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	kili_20121031:1.1.1.1
	kili:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.09.20.18.29.20;	author kili;	state Exp;
branches;
next	1.3;
commitid	YIpoHDeex0RUDlIN;

1.3
date	2014.11.25.22.11.03;	author kili;	state Exp;
branches;
next	1.2;
commitid	V0txox7DxIvpkfks;

1.2
date	2013.01.20.17.59.47;	author kili;	state Exp;
branches;
next	1.1;

1.1
date	2012.10.31.19.14.17;	author kili;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.10.31.19.14.17;	author kili;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Set MODGHC_PACKAGE_KEY and adjust plist.
@
text
@@@comment $OpenBSD: PLIST,v 1.3 2014/11/25 22:11:03 kili Exp $
lib/ghc/${DISTNAME}/
lib/ghc/${DISTNAME}/Data/
lib/ghc/${DISTNAME}/Data/Concurrent/
lib/ghc/${DISTNAME}/Data/Concurrent/Deque/
lib/ghc/${DISTNAME}/Data/Concurrent/Deque/Class.hi
lib/ghc/${DISTNAME}/Data/Concurrent/Deque/Class.p_hi
lib/ghc/${DISTNAME}/Data/Concurrent/Deque/Reference/
lib/ghc/${DISTNAME}/Data/Concurrent/Deque/Reference.hi
lib/ghc/${DISTNAME}/Data/Concurrent/Deque/Reference.p_hi
lib/ghc/${DISTNAME}/Data/Concurrent/Deque/Reference/DequeInstance.hi
lib/ghc/${DISTNAME}/Data/Concurrent/Deque/Reference/DequeInstance.p_hi
lib/ghc/${DISTNAME}/Data/Concurrent/Deque/Tests.hi
lib/ghc/${DISTNAME}/Data/Concurrent/Deque/Tests.p_hi
lib/ghc/${DISTNAME}/HS${DISTNAME}-${MODGHC_PACKAGE_KEY}.o
lib/ghc/${DISTNAME}/libHS${DISTNAME}-${MODGHC_PACKAGE_KEY}.a
lib/ghc/${DISTNAME}/libHS${DISTNAME}-${MODGHC_PACKAGE_KEY}_p.a
lib/ghc/${DISTNAME}/register.sh
share/doc/hs-${DISTNAME}/
share/doc/hs-${DISTNAME}/LICENSE
share/doc/hs-${DISTNAME}/html/
share/doc/hs-${DISTNAME}/html/Data-Concurrent-Deque-Class.html
share/doc/hs-${DISTNAME}/html/Data-Concurrent-Deque-Reference-DequeInstance.html
share/doc/hs-${DISTNAME}/html/Data-Concurrent-Deque-Reference.html
share/doc/hs-${DISTNAME}/html/Data-Concurrent-Deque-Tests.html
share/doc/hs-${DISTNAME}/html/abstract-deque.haddock
share/doc/hs-${DISTNAME}/html/doc-index.html
share/doc/hs-${DISTNAME}/html/frames.html
share/doc/hs-${DISTNAME}/html/haddock-util.js
share/doc/hs-${DISTNAME}/html/hslogo-16.png
share/doc/hs-${DISTNAME}/html/index-frames.html
share/doc/hs-${DISTNAME}/html/index.html
share/doc/hs-${DISTNAME}/html/mini_Data-Concurrent-Deque-Class.html
share/doc/hs-${DISTNAME}/html/mini_Data-Concurrent-Deque-Reference-DequeInstance.html
share/doc/hs-${DISTNAME}/html/mini_Data-Concurrent-Deque-Reference.html
share/doc/hs-${DISTNAME}/html/mini_Data-Concurrent-Deque-Tests.html
share/doc/hs-${DISTNAME}/html/minus.gif
share/doc/hs-${DISTNAME}/html/ocean.css
share/doc/hs-${DISTNAME}/html/plus.gif
share/doc/hs-${DISTNAME}/html/synopsis.png
@@exec /usr/bin/env HOME=/nonexistent %D/lib/ghc/${DISTNAME}/register.sh -v0
@@unexec /usr/bin/env HOME=/nonexistent %D/lib/ghc/${DISTNAME}/unregister.sh -v0 --force
lib/ghc/${DISTNAME}/unregister.sh
@


1.3
log
@Update dependencies and plists and bump.
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.2 2013/01/20 17:59:47 kili Exp $
d15 3
a17 2
lib/ghc/${DISTNAME}/libHS${DISTNAME}.a
lib/ghc/${DISTNAME}/libHS${DISTNAME}_p.a
@


1.2
log
@Regenerate plist for profiling libs.
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.1.1.1 2012/10/31 19:14:17 kili Exp $
a14 1
lib/ghc/${DISTNAME}/HS${DISTNAME}.o
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@comment $OpenBSD$
d7 1
d10 1
d12 1
d14 1
d17 1
@


1.1.1.1
log
@An abstract interface to highly-parameterizable queues/deques.

Background: There exists a feature space for queues that extends
between:

  * simple, single-ended, non-concurrent, bounded queues

  * double-ended, threadsafe, growable queues

... with important points inbetween (such as
the queues used for work-stealing).

This package includes an interface for Deques that allows the
programmer to use a single API for all of the above, while using
the type-system to select an efficient implementation given the
requirements (using type families).

This package also includes a simple reference implementation based
on 'IORef' and "Data.Sequence".

ok jasper@@

@
text
@@
