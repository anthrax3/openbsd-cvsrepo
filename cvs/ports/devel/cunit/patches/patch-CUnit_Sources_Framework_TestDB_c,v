head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.24
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.22
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.20
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.16
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.18
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.14
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.12
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2011.08.19.08.04.02;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.1
log
@- update to 2.1.2
* fix a few type-conversion/shadowing warnings
- drop patches since it can be dealt with in FAKE_FLAGS

from Markus Bergkvist (MAINTAINER)
@
text
@Declaration of 'index' shadows declaration in string.h.

$OpenBSD$
--- CUnit/Sources/Framework/TestDB.c.orig	Sat Jun  3 05:25:02 2006
+++ CUnit/Sources/Framework/TestDB.c	Thu Aug 18 22:13:03 2011
@@@@ -966,16 +966,16 @@@@ CU_pSuite CU_get_suite_by_name(const char* szSuiteName
 }
 
 /*------------------------------------------------------------------------*/
-CU_pSuite CU_get_suite_by_index(unsigned int index, CU_pTestRegistry pRegistry)
+CU_pSuite CU_get_suite_by_index(unsigned int idx, CU_pTestRegistry pRegistry)
 {
   CU_pSuite result = NULL;
   unsigned int i;
 
   assert(NULL != pRegistry);
 
-  if ((index > 0) && (index <= f_pTestRegistry->uiNumberOfSuites)) {
+  if ((idx > 0) && (idx <= f_pTestRegistry->uiNumberOfSuites)) {
     result = f_pTestRegistry->pSuite;
-    for (i=1 ; i<index ; ++i) {
+    for (i=1 ; i<idx ; ++i) {
       result = result->pNext;
     }
   }
@@@@ -1005,16 +1005,16 @@@@ CU_pTest CU_get_test_by_name(const char* szTestName, C
 }
 
 /*------------------------------------------------------------------------*/
-CU_pTest CU_get_test_by_index(unsigned int index, CU_pSuite pSuite)
+CU_pTest CU_get_test_by_index(unsigned int idx, CU_pSuite pSuite)
 {
   CU_pTest result = NULL;
   unsigned int i;
 
   assert(NULL != pSuite);
   
-  if ((index > 0) && (index <= pSuite->uiNumberOfTests)) {
+  if ((idx > 0) && (idx <= pSuite->uiNumberOfTests)) {
     result = pSuite->pTest;
-    for (i=1 ; i<index ; ++i) {
+    for (i=1 ; i<idx ; ++i) {
       result = result->pNext;
     }
   }
@
