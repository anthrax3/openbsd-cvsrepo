head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.56
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.54
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.52
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.48
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.50
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.46
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.44
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.42
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.40
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.38
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.36
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.34
	OPENBSD_5_0:1.6.0.32
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.30
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.28
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.24
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.22
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.20
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.18
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.16
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.14
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.12
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	todd_20030131:1.1.1.3
	todd:1.1.1
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	fgsch_1999-Dec-30:1.1.1.2
	fgsch:1.1.1
	TURAN-14SEP1999:1.1.1.1
	TURAN:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2003.12.15.21.42.20;	author naddy;	state Exp;
branches;
next	1.5;

1.5
date	2003.01.31.18.19.29;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.30.19.02.28;	author brad;	state dead;
branches;
next	1.3;

1.3
date	99.12.30.15.44.13;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	99.10.02.17.41.08;	author brad;	state dead;
branches;
next	1.1;

1.1
date	99.09.15.02.13.39;	author turan;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.09.15.02.13.39;	author turan;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.12.30.15.14.39;	author fgsch;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.01.31.17.57.11;	author todd;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove WWW lines
@
text
@libIDL is a small library for creating parse trees of CORBA v2.2
compliant Interface Definition Language (IDL) files, which is a
specification for defining interfaces which can be used between
different CORBA implementations.
@


1.5
log
@resolve conflict when importing a prior removed port
@
text
@a4 2

WWW: ${HOMEPAGE}
@


1.4
log
@remove libIDL port, this shouldn't have been imported in the first
place. use devel/ORBit.
@
text
@d1 6
a6 6
libIDL is a library licensed under the GNU LGPL for creating trees of
CORBA Interface Definition Language (IDL) files, which is a
specification for defining portable interfaces.  libIDL was initially
written for ORBit (the ORB from the GNOME project, and the primary
means of libIDL distribution).  However, the functionality was
designed to be as reusable and portable as possible.
@


1.3
log
@Bring this port back to life. ok, im a moron.
@
text
@@


1.2
log
@webpage and dist site for this port have vanished, remove the port.
@
text
@d1 6
a6 20
Introduction
~~~~~~~~~~~~

libIDL is a small library for creating parse trees of CORBA v2.2
compliant Interface Definition Language (IDL) files, which is a
specification for defining portable interfaces. See the file NEWS for
the most recent changes, which may require code updates.


What it Does
~~~~~~~~~~~~~

By calling IDL_parse_filename, libIDL performs compilation phases from
lexical analysis to nearly full semantic analysis and some
optimization, and will attempt to generate meaningful errors and
warnings for invalid or deprecated features, which can be redirected
using callbacks.  libIDL supports some extensions to standard IDL,
including declarations spec tags which can assign attributions to
certain IDL constructs.

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@libIDL is a small library for creating parse trees of CORBA v2.2
compliant Interface Definition Language (IDL) files, which is a
specification for defining portable interfaces. See the file NEWS for
the most recent changes, which may require code updates.

libIDL port by mah@@everybody.org and turan@@openbsd.org.

@
text
@@


1.1.1.2
log
@Library for creating trees of CORBA IDL files. Needed by the upcoming
mozilla update.
@
text
@d1 20
a20 6
libIDL is a library licensed under the GNU LGPL for creating trees of
CORBA Interface Definition Language (IDL) files, which is a
specification for defining portable interfaces.  libIDL was initially
written for ORBit (the ORB from the GNOME project, and the primary
means of libIDL distribution).  However, the functionality was
designed to be as reusable and portable as possible.
@


1.1.1.3
log
@Import libIDL-0.8.0
--
libIDL is a small library for creating parse trees of CORBA v2.2
compliant Interface Definition Language (IDL) files, which is a
specification for defining interfaces which can be used between
different CORBA implementations.

From marcm for gnome2
@
text
@d1 6
a6 6
libIDL is a small library for creating parse trees of CORBA v2.2
compliant Interface Definition Language (IDL) files, which is a
specification for defining interfaces which can be used between
different CORBA implementations.

WWW: ${HOMEPAGE}
@


