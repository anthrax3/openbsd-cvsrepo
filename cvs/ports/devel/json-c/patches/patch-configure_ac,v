head	1.3;
access;
symbols
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.09.25.10.09.40;	author sthen;	state Exp;
branches;
next	1.2;
commitid	HJXa4kSa2kkLj9dT;

1.2
date	2016.05.17.16.59.23;	author jca;	state Exp;
branches;
next	1.1;
commitid	9wlJU14OdxvXISuL;

1.1
date	2015.08.25.11.37.02;	author jca;	state Exp;
branches;
next	;
commitid	JMpPmFMOiXSj04Cm;


desc
@@


1.3
log
@avoid nested function in AC_TRY_LINK
@
text
@$OpenBSD: patch-configure_ac,v 1.2 2016/05/17 16:59:23 jca Exp $
Index: configure.ac
--- configure.ac.orig
+++ configure.ac
@@@@ -43,6 +43,7 @@@@ AC_FUNC_MEMCMP
 AC_FUNC_MALLOC
 AC_FUNC_REALLOC
 AC_CHECK_FUNCS(strcasecmp strdup strerror snprintf vsnprintf vasprintf open vsyslog strncasecmp setlocale)
+AC_SEARCH_LIBS(arc4random, bsd, [AC_DEFINE(HAVE_ARC4RANDOM, [1], [Define to 1 if you have the `arc4random' function.])])
 AC_CHECK_DECLS([INFINITY], [], [], [[#include <math.h>]])
 AC_CHECK_DECLS([nan], [], [], [[#include <math.h>]])
 AC_CHECK_DECLS([isnan], [], [], [[#include <math.h>]])
@@@@ -66,6 +67,21 @@@@ int main(int c,char* v) {return 0;}
    AC_MSG_RESULT(no)
 ])
 
+AC_MSG_CHECKING([if compiler supports __sync_val_compare_and_swap with int objects])
+AC_LINK_IFELSE([AC_LANG_SOURCE([[
+int
+main(void) {
+    int r = 0;
+    __sync_val_compare_and_swap(&r, 0, 1);
+    return 0;
+}
+]])], [
+    AC_DEFINE(HAS___SYNC_VAL_COMPARE_AND_SWAP_INT, 1, [Define if compiler supports __sync_val_compare_and_swap.])
+    AC_MSG_RESULT(yes)
+], [
+   AC_MSG_RESULT(no)
+])
+
 AC_LANG_POP([C])
 
 AM_PROG_LIBTOOL
@@@@ -81,7 +97,7 @@@@ AS_IF([test "x$enable_Bsymbolic" = "xcheck"],
         saved_LDFLAGS="${LDFLAGS}"
         AC_MSG_CHECKING([for -Bsymbolic-functions linker flag])
         LDFLAGS=-Wl,-Bsymbolic-functions
-        AC_TRY_LINK([], [int main (void) { return 0; }],
+        AC_TRY_LINK([], [],
                     [
                       AC_MSG_RESULT([yes])
                       enable_Bsymbolic=yes
@


1.2
log
@Use arc4random in libjson-c.

Idea and initial patch from Kristaps Dzonsons who wants to safely use
json-c from within a chroot.  Autohell glue added by yours truly.

ok sthen@@
@
text
@d1 4
a4 3
$OpenBSD: patch-configure_ac,v 1.1 2015/08/25 11:37:02 jca Exp $
--- configure.ac.orig	Fri Apr 11 03:47:07 2014
+++ configure.ac	Mon May  9 21:06:15 2016
d13 4
a16 9
@@@@ -61,6 +62,21 @@@@ __asm__(".section .gnu.json_object_get,\n\t.ascii \"Pl
 int main(int c,char* v) {return 0;}
 ]])], [
     AC_DEFINE(HAS_GNU_WARNING_LONG, 1, [Define if .gnu.warning accepts long strings.])
+    AC_MSG_RESULT(yes)
+], [
+   AC_MSG_RESULT(no)
+])
+
d27 17
a43 3
     AC_MSG_RESULT(yes)
 ], [
    AC_MSG_RESULT(no)
@


1.1
log
@Detect whether __sync_moo is usable, don't just fail if it's not.

May not be perfect, but this unhides a few ports on mips64* and hppa.

ok landry@@ sthen@@
@
text
@d1 20
a20 7
$OpenBSD$
--- configure.ac.orig	Mon Aug 24 20:07:25 2015
+++ configure.ac	Mon Aug 24 20:06:41 2015
@@@@ -66,6 +66,21 @@@@ int main(int c,char* v) {return 0;}
    AC_MSG_RESULT(no)
 ])
 
d31 3
a33 8
+    AC_MSG_RESULT(yes)
+], [
+   AC_MSG_RESULT(no)
+])
+
 AC_LANG_POP([C])
 
 AM_PROG_LIBTOOL
@

