head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2016.03.11.19.46.13;	author sthen;	state Exp;
branches;
next	1.3;
commitid	wuJHEdseRcm03EQX;

1.3
date	2014.04.03.11.40.02;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2012.09.27.15.45.42;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.16.15.12.53;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.4
log
@move to github, opensource.conformal.com is going away. from dhill.
update to 0.3, rolling in patch.
@
text
@$OpenBSD: patch-libbacktrace_backtrace_c,v 1.3 2014/04/03 11:40:02 jasper Exp $

- __builtin_return_address() and __builtin_frame_address()
  may not always have a !0 argument.

--- libbacktrace/backtrace.c.orig	Thu Mar  3 10:15:09 2016
+++ libbacktrace/backtrace.c	Thu Mar  3 10:15:38 2016
@@@@ -65,6 +65,7 @@@@ bt_create_backtrace(void **buffer, int depth, int flag
 		/* number of HANDLE_FRAME must match BT_MAX_DEPTH */
 		switch (i) {
 		HANDLE_FRAME(0, i, addr);
+#ifndef __BUILTIN_HACK
 		HANDLE_FRAME(1, i, addr);
 		HANDLE_FRAME(2, i, addr);
 		HANDLE_FRAME(3, i, addr);
@@@@ -192,6 +193,7 @@@@ bt_create_backtrace(void **buffer, int depth, int flag
 		HANDLE_FRAME(125, i, addr);
 		HANDLE_FRAME(126, i, addr);
 		HANDLE_FRAME(127, i, addr);
+#endif
 		default:
 			goto done;
 		}
@


1.3
log
@__BUILTIN_HACK isn't just for mips anymore, so reword comment to make it
platform-agnostic.
@
text
@d1 1
a1 4
$OpenBSD: patch-libbacktrace_backtrace_c,v 1.2 2012/09/27 15:45:42 jasper Exp $

- BT_MAX_DEPTH and struct bt_frame should not be exposed in a public header
  since they're internal to libbacktrace.
d6 3
a8 17
--- libbacktrace/backtrace.c.orig	Fri Sep 10 14:19:27 2010
+++ libbacktrace/backtrace.c	Wed Sep 26 12:54:22 2012
@@@@ -35,7 +35,13 @@@@ __attribute__((unused)) static const char *cvstag = "$
 
 #define BT_GET_DEPTH		(1)
 #define BT_ADD_CR		(1)
+#define BT_MAX_DEPTH            (128)
 
+struct bt_frame {
+	Dl_info			bt_dlinfo;
+	unsigned int		line;
+};
+
 #define HANDLE_FRAME(depth, idx, btaddr)				\
 	case depth:							\
 		if (!__builtin_frame_address(depth + 1))		\
@@@@ -59,6 +65,7 @@@@ bt_create_backtrace(void **buffer, int depth, int flag
d16 1
a16 1
@@@@ -186,6 +193,7 @@@@ bt_create_backtrace(void **buffer, int depth, int flag
@


1.2
log
@- remove BT_MAX_DEPTH and struct bt_frame from the public API as they don't belong there
  and create issues with guenthers upcoming header cleaning.

  as discussed with guenther@@
  ok landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-libbacktrace_backtrace_c,v 1.1 2011/11/16 15:12:53 jasper Exp $
d7 1
a7 1
  can't have a !0 argument on mips.
@


1.1
log
@- bring back fixes to fix this on mips64*

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 2
__builtin_return_address() and __builtin_frame_address()
can't have a !0 argument on mips.
d6 20
a25 3
--- libbacktrace/backtrace.c.orig	Wed Nov 16 16:00:58 2011
+++ libbacktrace/backtrace.c	Wed Nov 16 16:01:38 2011
@@@@ -59,6 +59,7 @@@@ bt_create_backtrace(void **buffer, int depth, int flag
d33 1
a33 1
@@@@ -186,6 +187,7 @@@@ bt_create_backtrace(void **buffer, int depth, int flag
@

