head	1.3;
access;
symbols
	OPENBSD_5_0:1.2.0.12
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.10
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.8
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	ajacoutot_20081021:1.1.1.1
	bernd:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2011.11.14.19.14.18;	author sthen;	state dead;
branches;
next	1.2;

1.2
date	2008.11.11.15.48.47;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.21.17.01.24;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.10.21.17.01.24;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.3
log
@switch the libexecinfo port to use marco's libbacktrace, sources modified
to produce a library named libexecinfo.so.XX, avoiding the need to patch a
bunch of places where it's used in other ports. with help from robert@@
@
text
@$OpenBSD: patch-execinfo_c,v 1.2 2008/11/11 15:48:47 naddy Exp $
--- execinfo.c.orig	Mon Jul 19 07:21:09 2004
+++ execinfo.c	Tue Nov 11 16:45:54 2008
@@@@ -69,7 +69,8 @@@@ backtrace(void **buffer, int size)
 char **
 backtrace_symbols(void *const *buffer, int size)
 {
-    int i, clen, alen, offset;
+    size_t clen, alen;
+    int i, offset;
     char **rval;
     char *cp;
     Dl_info info;
@@@@ -78,7 +79,6 @@@@ backtrace_symbols(void *const *buffer, int size)
     rval = malloc(clen);
     if (rval == NULL)
         return NULL;
-    (char **)cp = &(rval[size]);
     for (i = 0; i < size; i++) {
         if (dladdr(buffer[i], &info) != 0) {
             if (info.dli_sname == NULL)
@@@@ -92,14 +92,14 @@@@ backtrace_symbols(void *const *buffer, int size)
                    2 +                      /* " <" */
                    strlen(info.dli_sname) + /* "function" */
                    1 +                      /* "+" */
-                   D10(offset) +            /* "offset */
+                   10 +                     /* "offset */
                    5 +                      /* "> at " */
                    strlen(info.dli_fname) + /* "filename" */
                    1;                       /* "\0" */
             rval = realloc_safe(rval, clen + alen);
             if (rval == NULL)
                 return NULL;
-            snprintf(cp, alen, "%p <%s+%d> at %s",
+            snprintf((char *) rval + clen, alen, "%p <%s+%d> at %s",
               buffer[i], info.dli_sname, offset, info.dli_fname);
         } else {
             alen = 2 +                      /* "0x" */
@@@@ -108,11 +108,14 @@@@ backtrace_symbols(void *const *buffer, int size)
             rval = realloc_safe(rval, clen + alen);
             if (rval == NULL)
                 return NULL;
-            snprintf(cp, alen, "%p", buffer[i]);
+            snprintf((char *) rval + clen, alen, "%p", buffer[i]);
         }
-        rval[i] = cp;
-        cp += alen;
+        rval[i] = (char *) clen;
+        clen += alen;
     }
+
+    for (i = 0; i < size; i++)
+        rval[i] += (long) rval;
 
     return rval;
 }
@


1.2
log
@* LP64 fixes
* use MASTER_SITE_FREEBSD_LOCAL
@
text
@d1 1
a1 1
$OpenBSD: patch-execinfo_c,v 1.1.1.1 2008/10/21 17:01:24 ajacoutot Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 12
a14 2
+++ execinfo.c	Tue Oct 21 18:40:48 2008
@@@@ -78,7 +78,6 @@@@ backtrace_symbols(void *const *buffer, int size)
d22 1
a22 1
@@@@ -92,14 +91,14 @@@@ backtrace_symbols(void *const *buffer, int size)
d39 1
a39 1
@@@@ -108,11 +107,14 @@@@ backtrace_symbols(void *const *buffer, int size)
d53 1
a53 1
+        rval[i] += (int) rval;
@


1.1.1.1
log
@Import libexecinfo-1.1

This is a quick-n-dirty BSD licensed clone of backtrace facility found
in the GNU libc, mainly intended for porting linuxish code to BSD
platforms, however it can be used at any platform which has a gcc
compiler.

from bernd@@ (patch-execinfo_c from FreeBSD)
@
text
@@
