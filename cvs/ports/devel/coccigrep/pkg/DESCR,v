head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.20
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.18
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.16
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.12
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.14
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.10
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	sthen_20110915:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.12.08.10.10.22;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.09.15.20.20.06;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.09.15.20.20.06;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to coccigrep 1.11
@
text
@coccigrep is a semantic grep for the C language based on coccinelle.
It can be used to find where a given structure is used in code files.

- find where struct bpf_program is used:
coccigrep -t 'struct bpf_program' *c

- find where bf_len in struct bpf_program is used:
coccigrep -t 'struct bpf_program' -a bf_len *c

- find where bf_len in struct bpf_program is *set*:
coccigrep -t 'struct bpf_program' -a bf_len -o set *c
@


1.1
log
@Initial revision
@
text
@d3 9
a11 1
coccigrep depends on the spatch program which comes with coccinelle.
@


1.1.1.1
log
@import ports/devel/coccigrep, ok jasper@@

coccigrep is a semantic grep for the C language based on coccinelle.
It can be used to find where a given structure is used in code files.
coccigrep depends on the spatch program which comes with coccinelle.

quick contrived example to find lines referencing m_len of a struct
mbuf, regardless of actual variable name:

$ coccigrep -t "struct mbuf" -a m_len /sys/netinet/ip_*.c
@
text
@@
