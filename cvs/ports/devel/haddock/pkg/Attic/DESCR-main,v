head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.0.24
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.09.19.08.34.11;	author kili;	state dead;
branches;
next	1.1;
commitid	otGzRp4QOHTaUcf2;

1.1
date	2010.06.18.20.42.03;	author kili;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove haddock, which is now contained in the ghc package.
@
text
@Haddock is a tool for automatically generating documentation from
annotated Haskell source code. It is primarily intended for documenting
libraries, but it should be useful for any kind of Haskell code.

Like other systems, Haddock lets you write documentation annotations
next to the definitions of functions and types in the source code, in a
syntax that is easy on the eye when writing the source code (no
heavyweight mark-up). The documentation generated by Haddock is fully
hyperlinked - click on a type name in a type signature to go straight to
the definition, and documentation, for that type.
@


1.1
log
@Include the Haddock API, but put it into its own subpackage (hs-haddock).
This will be needed by leksah.
@
text
@@

