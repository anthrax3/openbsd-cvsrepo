head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.14
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.1.1.0.10
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.8
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.6
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	jeremy_2011-Nov-17:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.06.26.14.45.53;	author jeremy;	state Exp;
branches;
next	1.1;
commitid	gzMBYpANjKApkQBN;

1.1
date	2011.11.17.15.33.29;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.11.17.15.33.29;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to daemon_controller 1.2.0.

Thanks sthen@@ for the reminder
@
text
@@@comment $OpenBSD: PLIST,v 1.1.1.1 2011/11/17 15:33:29 jeremy Exp $
${GEM_LIB}/cache/${DISTNAME}.gem
${GEM_LIB}/gems/${DISTNAME}/
${GEM_LIB}/gems/${DISTNAME}/LICENSE.txt
${GEM_LIB}/gems/${DISTNAME}/README.markdown
${GEM_LIB}/gems/${DISTNAME}/Rakefile
${GEM_LIB}/gems/${DISTNAME}/daemon_controller.gemspec
${GEM_LIB}/gems/${DISTNAME}/debian.template/
${GEM_LIB}/gems/${DISTNAME}/debian.template/changelog
${GEM_LIB}/gems/${DISTNAME}/debian.template/compat
${GEM_LIB}/gems/${DISTNAME}/debian.template/control.template
${GEM_LIB}/gems/${DISTNAME}/debian.template/copyright
${GEM_LIB}/gems/${DISTNAME}/debian.template/ruby-daemon-controller.install
${GEM_LIB}/gems/${DISTNAME}/debian.template/rules
${GEM_LIB}/gems/${DISTNAME}/debian.template/source/
${GEM_LIB}/gems/${DISTNAME}/debian.template/source/format
${GEM_LIB}/gems/${DISTNAME}/lib/
${GEM_LIB}/gems/${DISTNAME}/lib/daemon_controller/
${GEM_LIB}/gems/${DISTNAME}/lib/daemon_controller.rb
${GEM_LIB}/gems/${DISTNAME}/lib/daemon_controller/lock_file.rb
${GEM_LIB}/gems/${DISTNAME}/lib/daemon_controller/packaging.rb
${GEM_LIB}/gems/${DISTNAME}/lib/daemon_controller/spawn.rb
${GEM_LIB}/gems/${DISTNAME}/lib/daemon_controller/version.rb
${GEM_LIB}/gems/${DISTNAME}/rpm/
${GEM_LIB}/gems/${DISTNAME}/rpm/get_distro_id.py
${GEM_LIB}/gems/${DISTNAME}/rpm/rubygem-daemon_controller.spec.template
${GEM_LIB}/gems/${DISTNAME}/spec/
${GEM_LIB}/gems/${DISTNAME}/spec/daemon_controller_spec.rb
${GEM_LIB}/gems/${DISTNAME}/spec/echo_server.rb
${GEM_LIB}/gems/${DISTNAME}/spec/run_echo_server
${GEM_LIB}/gems/${DISTNAME}/spec/test_helper.rb
${GEM_LIB}/gems/${DISTNAME}/spec/unresponsive_daemon.rb
${GEM_LIB}/specifications/${DISTNAME}.gemspec
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@comment $OpenBSD$
d6 1
d8 9
d21 1
d24 3
d30 1
@


1.1.1.1
log
@Import ruby-daemon_controller 0.2.6

daemon_controller is a library for starting and stopping specific
daemons programmatically in a robust, race-condition-free manner.

It's not a daemon monitoring system like God or Monit. It's also not a
library for writing daemons.

It provides the following functionality:

    Starting daemons. If the daemon fails to start then an exception
    will be raised. daemon_controller can even detect failures that
    occur after the daemon has already daemonized.

    Starting daemons is done in a race-condition-free manner. If another
    process using daemon_controller is trying to start the same daemon,
    then daemon_controller will guarantee serialization.

    daemon_controller also raises an exception if it detects that the
    daemon is already started.

    Connecting to a daemon, starting it if it's not already started.
    This too is done in a race-condition-free manner. If the daemon
    fails to start then an exception will be raised.

    Stopping daemons.

    Checking whether a daemon is running.

OK ajacoutot@@
@
text
@@
