head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.8
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.6
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.4.0.10
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.8
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4;
locks; strict;
comment	@# @;


1.5
date	2015.07.19.23.46.08;	author naddy;	state Exp;
branches;
next	1.4;
commitid	IyS3g0JqidQTnmPw;

1.4
date	2013.01.21.22.08.52;	author naddy;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.04.14.33.14;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2012.07.30.15.37.10;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2012.07.13.19.43.18;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Split gettext into a small runtime component and a separate large
set of development tools as recommended by upstream.

Ports will continue to depend on devel/gettext for libintl.  The
gettext module also provides an automatic build dependency on
devel/gettext-tools for msgfmt etc.

A few ports that require a library provided by gettext-tools get a
corresponding dependency.

Also update gettext to 0.19.5.1.

COMMENT and DESCR from FreeBSD.  Bulk build testing by sthen@@.

ok sthen@@
@
text
@$OpenBSD: patch-gettext-runtime_intl_l10nflist_c,v 1.4 2013/01/21 22:08:52 naddy Exp $
--- gettext-runtime/intl/l10nflist.c.orig	Fri Jun  5 09:01:10 2015
+++ gettext-runtime/intl/l10nflist.c	Sat Jul 18 19:13:09 2015
@@@@ -177,6 +177,7 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
   struct loaded_l10nfile **lastp;
   struct loaded_l10nfile *retval;
   char *cp;
+  size_t abs_filename_len;
   size_t dirlist_count;
   size_t entries;
   int cnt;
@@@@ -187,7 +188,7 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
     dirlist_len = 0;
 
   /* Allocate room for the full file name.  */
-  abs_filename = (char *) malloc (dirlist_len
+  abs_filename_len =		 (dirlist_len
 				  + strlen (language)
 				  + ((mask & XPG_TERRITORY) != 0
 				     ? strlen (territory) + 1 : 0)
@@@@ -198,6 +199,7 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
 				  + ((mask & XPG_MODIFIER) != 0
 				     ? strlen (modifier) + 1 : 0)
 				  + 1 + strlen (filename) + 1);
+  abs_filename = (char *) malloc (abs_filename_len);
 
   if (abs_filename == NULL)
     return NULL;
@@@@ -211,32 +213,33 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
       cp += dirlist_len;
       cp[-1] = '/';
     }
+  *cp = '\0';
 
-  cp = stpcpy (cp, language);
+  strlcat (abs_filename, language, abs_filename_len);
 
   if ((mask & XPG_TERRITORY) != 0)
     {
-      *cp++ = '_';
-      cp = stpcpy (cp, territory);
+      strlcat (abs_filename, "_", abs_filename_len);
+      strlcat (abs_filename, territory, abs_filename_len);
     }
   if ((mask & XPG_CODESET) != 0)
     {
-      *cp++ = '.';
-      cp = stpcpy (cp, codeset);
+      strlcat (abs_filename, ".", abs_filename_len);
+      strlcat (abs_filename, codeset, abs_filename_len);
     }
   if ((mask & XPG_NORM_CODESET) != 0)
     {
-      *cp++ = '.';
-      cp = stpcpy (cp, normalized_codeset);
+      strlcat (abs_filename, ".", abs_filename_len);
+      strlcat (abs_filename, normalized_codeset, abs_filename_len);
     }
   if ((mask & XPG_MODIFIER) != 0)
     {
-      *cp++ = '@@';
-      cp = stpcpy (cp, modifier);
+      strlcat (abs_filename, "@@", abs_filename_len);
+      strlcat (abs_filename, modifier, abs_filename_len);
     }
 
-  *cp++ = '/';
-  stpcpy (cp, filename);
+  strlcat (abs_filename, "/", abs_filename_len);
+  strlcat (abs_filename, filename, abs_filename_len);
 
   /* Look in list of already loaded domains whether it is already
      available.  */
@@@@ -360,7 +363,7 @@@@ _nl_normalize_codeset (const char *codeset, size_t nam
   if (retval != NULL)
     {
       if (only_digit)
-	wp = stpcpy (retval, "iso");
+	wp = (char *) memcpy (retval, "iso", 3) + 3;
       else
 	wp = retval;
 
@


1.4
log
@maintenance update to 0.18.2
@
text
@d1 4
a4 4
$OpenBSD: patch-gettext-runtime_intl_l10nflist_c,v 1.3 2012/08/04 14:33:14 naddy Exp $
--- gettext-runtime/intl/l10nflist.c.orig	Tue Dec  4 07:28:58 2012
+++ gettext-runtime/intl/l10nflist.c	Wed Jan 16 23:06:10 2013
@@@@ -181,6 +181,7 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
d12 1
a12 1
@@@@ -191,7 +192,7 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
d21 1
a21 1
@@@@ -202,6 +203,7 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
d29 1
a29 1
@@@@ -215,32 +217,33 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
d74 1
a74 1
@@@@ -364,7 +367,7 @@@@ _nl_normalize_codeset (const char *codeset, size_t nam
@


1.3
log
@Replace stpcpy() calls to silence ld warnings.
Fix missing string termination in _nl_make_l10nflist(), with Christian
Schulte.
@
text
@d1 4
a4 4
$OpenBSD: patch-gettext-runtime_intl_l10nflist_c,v 1.1 2012/07/13 19:43:18 naddy Exp $
--- gettext-runtime/intl/l10nflist.c.orig	Sun Jun 28 21:44:04 2009
+++ gettext-runtime/intl/l10nflist.c	Sun Jul 29 16:27:13 2012
@@@@ -183,6 +183,7 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
d12 1
a12 1
@@@@ -193,7 +194,7 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
d21 1
a21 1
@@@@ -204,6 +205,7 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
d29 1
a29 1
@@@@ -217,32 +219,33 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
d74 1
a74 1
@@@@ -366,7 +369,7 @@@@ _nl_normalize_codeset (const char *codeset, size_t nam
@


1.2
log
@revert stpcpy() removal which introduced at least one string handling bug
ok jasper@@
@
text
@d3 1
a3 1
+++ gettext-runtime/intl/l10nflist.c	Tue Jul 10 23:41:41 2012
d29 2
a30 1
@@@@ -218,31 +220,31 @@@@ _nl_make_l10nflist (struct loaded_l10nfile **l10nfile_
d33 1
d74 1
a74 1
@@@@ -366,7 +368,7 @@@@ _nl_normalize_codeset (const char *codeset, size_t nam
@


1.1
log
@replace stpcpy() calls to silence ld warnings; ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@

