head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.12
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.10
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.10
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.8
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.6
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.4
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	sthen_20120804:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.01.17.17.19.06;	author benoit;	state Exp;
branches;
next	1.1;
commitid	wORverImqAwZS280;

1.1
date	2012.04.08.21.04.13;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.04.08.21.04.13;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to p5-MooseX-MarkAsMethods-0.15.

ok ajacoutot@@
@
text
@SHA256 (MooseX-MarkAsMethods-0.15.tar.gz) = yezBM3bQ/326SBl3M3wz6nTl0makKLavMVUqKRnvfvg=
SIZE (MooseX-MarkAsMethods-0.15.tar.gz) = 15311
@


1.1
log
@Initial revision
@
text
@d1 2
a2 5
MD5 (MooseX-MarkAsMethods-0.14.tar.gz) = 2CL4Bj5YULxRLIxPc7YSEA==
RMD160 (MooseX-MarkAsMethods-0.14.tar.gz) = nLvAjnnQDGXr+5CHM6UmwXs7U2k=
SHA1 (MooseX-MarkAsMethods-0.14.tar.gz) = 7pCfJ/sb8D0RRuUPD8MagpeQeKw=
SHA256 (MooseX-MarkAsMethods-0.14.tar.gz) = auLb9m/lsN6lse8Xw/bZKHPmulMsFTYefSkpDCTfE5Q=
SIZE (MooseX-MarkAsMethods-0.14.tar.gz) = 22326
@


1.1.1.1
log
@import devel/p5-MooseX-MarkAsMethods, ok landry, from Andreas Voegele's repo

MooseX::MarkAsMethods allows one to easily mark certain functions as
Moose methods.  This will allow other packages such as
namespace::autoclean to operate without blowing away your overloads.
After using MooseX::MarkAsMethods your overloads will be recognized by
Class::MOP as being methods, and class extension as well as composition
from roles with overloads will "just work".
@
text
@@
