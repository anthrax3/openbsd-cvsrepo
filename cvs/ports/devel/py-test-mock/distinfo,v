head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	shadchin_20160529:1.1.1.1
	shadchin:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2016.11.24.16.18.48;	author shadchin;	state Exp;
branches;
next	1.4;
commitid	bxaQsNNhEY4k4KAE;

1.4
date	2016.11.10.06.05.53;	author shadchin;	state Exp;
branches;
next	1.3;
commitid	Qe74t33y7KAH4f5d;

1.3
date	2016.08.04.11.39.10;	author shadchin;	state Exp;
branches;
next	1.2;
commitid	bUjlyM6o7Pxt0gxS;

1.2
date	2016.06.02.04.53.39;	author shadchin;	state Exp;
branches;
next	1.1;
commitid	Z5q33xAWgYta1VRU;

1.1
date	2016.05.29.15.00.23;	author shadchin;	state Exp;
branches
	1.1.1.1;
next	;
commitid	sLZXVVAiV6rtn3Zj;

1.1.1.1
date	2016.05.29.15.00.23;	author shadchin;	state Exp;
branches;
next	;
commitid	sLZXVVAiV6rtn3Zj;


desc
@@


1.5
log
@Update to py-test-mock 1.5.0
@
text
@SHA256 (pytest-mock-1.5.0.tar.gz) = eC8j8ieHS6xM7oeGN8Kvjv3Sw0xI/L+eebAKCHIFb/s=
SIZE (pytest-mock-1.5.0.tar.gz) = 17199
@


1.4
log
@Update to py-test-mock 1.4.0
@
text
@d1 2
a2 2
SHA256 (pytest-mock-1.4.0.tar.gz) = I3A96IajOzNxKYZ8i+/M/aziLXpJsKmxfPk3SSWRp9I=
SIZE (pytest-mock-1.4.0.tar.gz) = 17099
@


1.3
log
@Update to py-test-mock 1.2
@
text
@d1 2
a2 2
SHA256 (pytest-mock-1.2.zip) = 94lx7TdvyyZSVdHkuzE3MbOhvpLX8+yxnqf+3EpW/Q8=
SIZE (pytest-mock-1.2.zip) = 19461
@


1.2
log
@Update to py-test-mock 1.1
@
text
@d1 2
a2 2
SHA256 (pytest-mock-1.1.zip) = wRD1WzxpvfPrLSgwjTY4LX7ta4X6EXNAK2ho9mWAtD4=
SIZE (pytest-mock-1.1.zip) = 19419
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
SHA256 (pytest-mock-1.0.zip) = SEjgrrP0y7NtznWHsePrq7129/Nq5mIDfBlv+PXQEMI=
SIZE (pytest-mock-1.0.zip) = 18586
@


1.1.1.1
log
@Import py-test-mock 1.0, ok danj@@

This plugin installs a mocker fixture which is a thin-wrapper around the
patching API provided by the mock package, but with the benefit of not
having to worry about undoing patches at the end of a test.

@
text
@@
