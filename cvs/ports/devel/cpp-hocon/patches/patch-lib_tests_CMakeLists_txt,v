head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.2
	OPENBSD_6_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2017.05.30.18.01.27;	author zhuk;	state Exp;
branches;
next	;
commitid	4jm8lZ7gjWoTRugg;


desc
@@


1.1
log
@Bring facter & friends into land of Position Independent Code.

This makes all of those build with Clang, but you'll need updated boost
first (not enforcing dependency because we don't have Clang on amd64 as well).
@
text
@$OpenBSD$
Unbreak due to upstream fixing problems created by leatherman, and we
have leatherman fixed in the first place.

Index: lib/tests/CMakeLists.txt
--- lib/tests/CMakeLists.txt.orig
+++ lib/tests/CMakeLists.txt
@@@@ -18,23 +18,23 @@@@ set(TEST_CASES
     program_options.cc
 )
 
-add_executable(lib${PROJECT_NAME}_test $<TARGET_OBJECTS:libprojectsrc> ${TEST_CASES} main.cc)
+add_executable(${PROJECT_NAME}_test $<TARGET_OBJECTS:libprojectsrc> ${TEST_CASES} main.cc)
 
 if (${CMAKE_SYSTEM_NAME} MATCHES "Linux" OR ${CMAKE_SYSTEM_NAME} MATCHES "SunOS")
-    target_link_libraries(lib${PROJECT_NAME}_test rt)
+    target_link_libraries(${PROJECT_NAME}_test rt)
 endif()
 
-target_link_libraries(lib${PROJECT_NAME}_test
+target_link_libraries(${PROJECT_NAME}_test
     ${Boost_LIBRARIES}
     ${LEATHERMAN_LIBRARIES}
     ${CMAKE_THREAD_LIBS_INIT}
 )
 
 if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin" AND BOOST_STATIC AND LEATHERMAN_USE_LOCALES)
-    target_link_libraries(lib${PROJECT_NAME}_test iconv)
+    target_link_libraries(${PROJECT_NAME}_test iconv)
 endif()
 
-add_test(NAME "unit_tests" COMMAND lib${PROJECT_NAME}_test)
+add_test(NAME "unit_tests" COMMAND ${PROJECT_NAME}_test)
 
 configure_file (
     "${CMAKE_CURRENT_LIST_DIR}/fixtures.hpp.in"
@
