head	1.3;
access;
symbols
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	jasper_20111501:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.09.10.18.11.28;	author jasper;	state dead;
branches;
next	1.2;

1.2
date	2011.10.19.11.38.47;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2011.01.15.12.40.17;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.01.15.12.40.17;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@- update to lpc2lisp-1.94

from Alexander Shiryaev (MAINTAINER)
@
text
@$OpenBSD: patch-lpc21isp_c,v 1.2 2011/10/19 11:38:47 jasper Exp $
--- lpc21isp.c.orig	Tue Aug  2 16:55:18 2011
+++ lpc21isp.c	Wed Oct 19 13:22:52 2011
@@@@ -1,3 +1,4 @@@@
+#include <assert.h>
 /******************************************************************************
 
 Project:           Portable command line ISP for NXP LPC1000 / LPC2000 family
@@@@ -696,7 +697,7 @@@@ static void ReceiveComPortBlock(ISP_ENVIRONMENT *IspEn
 
 #endif // defined COMPILE_FOR_LINUX
 
-    sprintf(tmp_string, "Read(Length=%ld): ", (*real_size));
+    int rCheckSNPrintF1 = snprintf(tmp_string, sizeof(tmp_string), "Read(Length=%ld): ", (*real_size)); assert( rCheckSNPrintF1 < sizeof(tmp_string) );
     DumpString(5, answer, (*real_size), tmp_string);
 
     if (*real_size == 0)
@@@@ -999,7 +1000,7 @@@@ void DebugPrintf(int level, const char *fmt, ...)
         char pTemp[2000];
         va_start(ap, fmt);
         //vprintf(fmt, ap);
-        vsprintf(pTemp, fmt, ap);
+        int rCheckSNPrintF0 = vsnprintf(pTemp, sizeof(pTemp), fmt, ap); assert( rCheckSNPrintF0 < sizeof(pTemp) );
         TRACE(pTemp);
         va_end(ap);
         fflush(stdout);
@@@@ -1071,7 +1072,7 @@@@ void ReceiveComPort(ISP_ENVIRONMENT *IspEnvironment,
 
     Answer[(*RealSize)] = 0;
 
-    sprintf(tmp_string, "Answer(Length=%ld): ", (*RealSize));
+    int rCheckSNPrintF2 = snprintf(tmp_string, sizeof(tmp_string), "Answer(Length=%ld): ", (*RealSize)); assert( rCheckSNPrintF2 < sizeof(tmp_string) );
     DumpString(3, Answer, (*RealSize), tmp_string);
 }
 
@@@@ -1106,7 +1107,7 @@@@ int ReceiveComPortBlockComplete(ISP_ENVIRONMENT *IspEn
 
     } while ((realsize < size) && (SerialTimeoutCheck(IspEnvironment) == 0));
 
-    sprintf(tmp_string, "Answer(Length=%ld): ", realsize);
+    int rCheckSNPrintF3 = snprintf(tmp_string, sizeof(tmp_string), "Answer(Length=%ld): ", realsize); assert( rCheckSNPrintF3 < sizeof(tmp_string) );
     DumpString(3, result, realsize, tmp_string);
 
     if (realsize != size)
@@@@ -2183,7 +2184,7 @@@@ int lpctest(char* FileName)
     IspEnvironment.baud_rate    = "19200";
     IspEnvironment.nQuestionMarks = 100;
     IspEnvironment.DoNotStart = 0;
-    strcpy(IspEnvironment.StringOscillator, "25000");
+    int rCheckSNPrintF4 = snprintf(IspEnvironment.StringOscillator, sizeof(IspEnvironment.StringOscillator), "%s", "25000"); assert( rCheckSNPrintF4 < sizeof(IspEnvironment.StringOscillator) );
 
     return PerformActions(&IspEnvironment);                    // Do as requested !
 }
@


1.2
log
@- update to 1.83

from Alexander Shiryaev (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d2 52
a53 38
--- lpc21isp.c.orig	Sat Feb 20 11:14:08 2010
+++ lpc21isp.c	Fri Jan 14 22:59:03 2011
@@@@ -673,7 +673,7 @@@@ static void ReceiveComPortBlock(ISP_ENVIRONMENT *IspEn
 
 #endif // defined COMPILE_FOR_LINUX
 
-    sprintf(tmp_string, "Read(Length=%ld): ", (*real_size));
+    snprintf(tmp_string, sizeof(tmp_string), "Read(Length=%ld): ", (*real_size));
     DumpString(5, answer, (*real_size), tmp_string);
 
     if (*real_size == 0)
@@@@ -976,7 +976,7 @@@@ void DebugPrintf(int level, const char *fmt, ...)
         char pTemp[2000];
         va_start(ap, fmt);
         //vprintf(fmt, ap);
-        vsprintf(pTemp, fmt, ap);
+        vsnprintf(pTemp, sizeof(pTemp), fmt, ap);
         TRACE(pTemp);
         va_end(ap);
         fflush(stdout);
@@@@ -1048,7 +1048,7 @@@@ void ReceiveComPort(ISP_ENVIRONMENT *IspEnvironment,
 
     Answer[(*RealSize)] = 0;
 
-    sprintf(tmp_string, "Answer(Length=%ld): ", (*RealSize));
+    snprintf(tmp_string, sizeof(tmp_string), "Answer(Length=%ld): ", (*RealSize));
     DumpString(3, Answer, (*RealSize), tmp_string);
 }
 
@@@@ -1083,7 +1083,7 @@@@ int ReceiveComPortBlockComplete(ISP_ENVIRONMENT *IspEn
 
     } while ((realsize < size) && (SerialTimeoutCheck(IspEnvironment) == 0));
 
-    sprintf(tmp_string, "Answer(Length=%ld): ", realsize);
+    snprintf(tmp_string, sizeof(tmp_string), "Answer(Length=%ld): ", realsize);
     DumpString(3, result, realsize, tmp_string);
 
     if (realsize != size)
@


1.1.1.1
log
@import lpc21isp 1.79

In-circuit programming (ISP) tool for the NXP (Philips) LPC1300 /
LPC1700 / LPC2000 series ARM7 / M0 / M3 microcontrollers.

from Alexander Shiryaev (MAINTAINER) with tweaks by me
ok landry@@
@
text
@@
