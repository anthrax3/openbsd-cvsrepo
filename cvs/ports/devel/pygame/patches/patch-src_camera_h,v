head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.6
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2015.07.07.22.29.14;	author bcallah;	state Exp;
branches;
next	;
commitid	xO7DBsmmJuhpe8bQ;


desc
@@


1.1
log
@Update to pygame-1.9.1
Thanks to sthen@@ for testing and fixing the camera driver.
ok sthen@@
@
text
@$OpenBSD$
--- src/camera.h.orig	Fri Oct 10 03:37:10 2008
+++ src/camera.h	Tue Jul  7 13:09:28 2015
@@@@ -37,11 +37,15 @@@@
     #include <sys/mman.h>
     #include <sys/ioctl.h>
 
+#if defined(__linux__)
     #include <asm/types.h>          /* for videodev2.h */
 
     #include <linux/videodev.h>
     #include <linux/videodev2.h>
+#elif defined(__OpenBSD__)
+    #include <sys/videoio.h>
 #endif
+#endif
 
 #define CLEAR(x) memset (&(x), 0, sizeof (x))
 #define SAT(c) if (c & (~255)) { if (c < 0) c = 0; else c = 255; }
@@@@ -98,7 +102,11 @@@@ char** v4l2_list_cameras (int* num_devices);
 int v4l2_get_control (int fd, int id, int *value);
 int v4l2_set_control (int fd, int id, int value);
 PyObject* v4l2_read_raw (PyCameraObject* self);
+#ifdef __OpenBSD__
+int v4l2_xioctl (int fd, unsigned long request, void *arg);
+#else
 int v4l2_xioctl (int fd, int request, void *arg);
+#endif
 int v4l2_process_image (PyCameraObject* self, const void *image, 
                                unsigned int buffer_size, SDL_Surface* surf);
 int v4l2_query_buffer (PyCameraObject* self);
@
