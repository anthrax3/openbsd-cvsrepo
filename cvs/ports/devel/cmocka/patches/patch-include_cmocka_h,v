head	1.7;
access;
symbols
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2016.09.23.19.45.39;	author rpointel;	state Exp;
branches;
next	1.6;
commitid	nLyQILqpEKy4LlGE;

1.6
date	2015.12.28.00.34.39;	author jca;	state Exp;
branches;
next	1.5;
commitid	TLp3TtTeQVQpkLo6;

1.5
date	2015.11.07.20.04.47;	author sthen;	state Exp;
branches;
next	1.4;
commitid	2Trjsx2DNUfOTgCQ;

1.4
date	2015.11.07.20.03.47;	author sthen;	state Exp;
branches;
next	1.3;
commitid	KbvjSkTtNDL0mBgL;

1.3
date	2015.11.06.20.58.48;	author rpointel;	state Exp;
branches;
next	1.2;
commitid	V92mJrDJ2FLpTf0q;

1.2
date	2015.01.20.20.54.05;	author sthen;	state Exp;
branches;
next	1.1;
commitid	O4l8pZGVu5PczjwA;

1.1
date	2014.03.14.14.35.01;	author rpointel;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update cmocka to 1.1.0.
ok benoit@@, input from jca@@ and ok@@
@
text
@$OpenBSD: patch-include_cmocka_h,v 1.6 2015/12/28 00:34:39 jca Exp $

Avoid a conflicting typedef on 32-bit arch.

--- include/cmocka.h.orig	Wed Sep 21 15:31:28 2016
+++ include/cmocka.h	Wed Sep 21 17:33:59 2016
@@@@ -56,7 +56,7 @@@@ int __stdcall IsDebuggerPresent();
 
 /* If __WORDSIZE is not set, try to figure it out and default to 32 bit. */
 #ifndef __WORDSIZE
-# if defined(__x86_64__) && !defined(__ILP32__)
+# if defined(_LP64)
 #  define __WORDSIZE 64
 # else
 #  define __WORDSIZE 32
@@@@ -109,6 +109,9 @@@@ typedef uintmax_t LargestIntegralType;
 #define cast_to_largest_integral_type(value) \
     ((LargestIntegralType)(value))
 
+#if defined(__OpenBSD__)
+#include <stdint.h>
+#else
 /* Smallest integral type capable of holding a pointer. */
 #if !defined(_UINTPTR_T) && !defined(_UINTPTR_T_DEFINED)
 # if defined(_WIN32)
@@@@ -137,6 +140,7 @@@@ typedef uintmax_t LargestIntegralType;
 # define _UINTPTR_T
 # define _UINTPTR_T_DEFINED
 #endif /* !defined(_UINTPTR_T) || !defined(_UINTPTR_T_DEFINED) */
+#endif
 
 /* Perform an unsigned cast to uintptr_t. */
 #define cast_to_pointer_integral_type(value) \
@


1.6
log
@sys/stdint.h -> stdint.h, no functional change.
@
text
@d1 1
a1 1
$OpenBSD: patch-include_cmocka_h,v 1.5 2015/11/07 20:04:47 sthen Exp $
d5 2
a6 2
--- include/cmocka.h.orig	Sun Mar  1 09:31:52 2015
+++ include/cmocka.h	Sat Nov  7 20:04:06 2015
d16 1
a16 1
@@@@ -96,6 +96,9 @@@@ typedef uintmax_t LargestIntegralType;
d26 1
a26 1
@@@@ -124,6 +127,7 @@@@ typedef uintmax_t LargestIntegralType;
@


1.5
log
@zap an unreachable part of the patch from an earlier attempt to fix
@
text
@d1 1
a1 1
$OpenBSD: patch-include_cmocka_h,v 1.4 2015/11/07 20:03:47 sthen Exp $
d21 1
a21 1
+#include <sys/stdint.h>
@


1.4
log
@avoid a conflicting typedef in cmocka, causing build to fail on i386
ok jca@@
@
text
@d1 1
a1 1
$OpenBSD: patch-include_cmocka_h,v 1.3 2015/11/06 20:58:48 rpointel Exp $
d5 2
a6 2
--- include/cmocka.h.orig	Sun Mar  1 02:31:52 2015
+++ include/cmocka.h	Sat Nov  7 07:44:28 2015
d16 1
a16 1
@@@@ -96,8 +96,11 @@@@ typedef uintmax_t LargestIntegralType;
d24 1
a24 2
-#if !defined(_UINTPTR_T) && !defined(_UINTPTR_T_DEFINED)
+#if !defined(_UINTPTR_T) && !defined(_UINTPTR_T_DEFINED) && !defined(_INTPTR_T_DEFINED)
a25 2
     /* WIN32 is an ILP32 platform */
     typedef unsigned int uintptr_t;
@


1.3
log
@update cmocka to 1.0.1.
ok jca@@.
@
text
@d1 36
a36 12
$OpenBSD: patch-include_cmocka_h,v 1.2 2015/01/20 20:54:05 sthen Exp $
--- include/cmocka.h.orig	Sun Mar  1 10:31:52 2015
+++ include/cmocka.h	Fri Nov  6 17:32:22 2015
@@@@ -112,6 +112,8 @@@@ typedef uintmax_t LargestIntegralType;
 #   else
       typedef unsigned int uintptr_t;
 #   endif /* __WORDSIZE == 64 */
+#  elif defined(__OpenBSD__)
+     typedef unsigned long int uintptr_t;
 #  else /* __WORDSIZE */
 #   if defined(_LP64) || defined(_I32LPx)
       typedef unsigned long int uintptr_t;
@


1.2
log
@fix our patch; use "#ifdef __OpenBSD__" not "#ifdef OpenBSD"
@
text
@d1 4
a4 4
$OpenBSD: patch-include_cmocka_h,v 1.1 2014/03/14 14:35:01 rpointel Exp $
--- include/cmocka.h.orig	Sun Oct 27 15:04:25 2013
+++ include/cmocka.h	Tue Jan 20 20:53:15 2015
@@@@ -97,6 +97,8 @@@@ int __stdcall IsDebuggerPresent();
@


1.1
log
@add a patch to permit build on arch != amd64, and bump revision.
spotted by Nigel (thanks).
ok sthen@@.
@
text
@d1 3
a3 3
$OpenBSD$
--- include/cmocka.h.orig	Sun Oct 27 16:04:25 2013
+++ include/cmocka.h	Fri Mar 14 13:51:15 2014
d8 1
a8 1
+#  elif defined(OpenBSD)
@

