head	1.58;
access;
symbols
	OPENBSD_6_2:1.58.0.6
	OPENBSD_6_2_BASE:1.58
	OPENBSD_6_1:1.58.0.4
	OPENBSD_6_1_BASE:1.58
	OPENBSD_6_0:1.58.0.2
	OPENBSD_6_0_BASE:1.58
	OPENBSD_5_9:1.54.0.2
	OPENBSD_5_9_BASE:1.54
	OPENBSD_5_8:1.46.0.4
	OPENBSD_5_8_BASE:1.46
	OPENBSD_5_7:1.41.0.2
	OPENBSD_5_7_BASE:1.41
	OPENBSD_5_6:1.22.0.2
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.21.0.2
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.20.0.2
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.15.0.2
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.14.0.2
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.2
	OPENBSD_5_0:1.9.0.4
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	kde:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.58
date	2016.04.29.10.34.33;	author dcoppa;	state Exp;
branches;
next	1.57;
commitid	z7Jo8sWkfT7EmMLb;

1.57
date	2016.04.26.10.56.59;	author sthen;	state Exp;
branches;
next	1.56;
commitid	FbIvW5WdGqu5h4SS;

1.56
date	2016.04.19.19.48.28;	author dcoppa;	state Exp;
branches;
next	1.55;
commitid	g3SGIwIdD1je3GeH;

1.55
date	2016.03.24.13.22.21;	author dcoppa;	state Exp;
branches;
next	1.54;
commitid	l3s1HzRq00Oq2JtR;

1.54
date	2016.01.28.11.28.02;	author dcoppa;	state Exp;
branches;
next	1.53;
commitid	qHeUHp3ecmYfPHxV;

1.53
date	2016.01.28.09.22.31;	author dcoppa;	state Exp;
branches;
next	1.52;
commitid	k9xRkOXHHvMctof8;

1.52
date	2016.01.26.08.44.07;	author dcoppa;	state Exp;
branches;
next	1.51;
commitid	rfF2Gku3i53ro4vR;

1.51
date	2016.01.20.09.39.46;	author dcoppa;	state Exp;
branches;
next	1.50;
commitid	rW4serAvcchcv0Fd;

1.50
date	2015.12.18.17.20.40;	author dcoppa;	state Exp;
branches;
next	1.49;
commitid	xOdq4H94EC1a6q4Z;

1.49
date	2015.12.09.11.50.46;	author dcoppa;	state Exp;
branches;
next	1.48;
commitid	QiW4SqWivVNb1bdo;

1.48
date	2015.09.18.09.18.56;	author dcoppa;	state Exp;
branches;
next	1.47;
commitid	FIOwYrNDE1GMK5Yu;

1.47
date	2015.09.03.07.09.25;	author dcoppa;	state Exp;
branches;
next	1.46;
commitid	KGLL6yBcZn2xZciC;

1.46
date	2015.07.01.08.08.18;	author dcoppa;	state Exp;
branches;
next	1.45;
commitid	GKV9CXiY9JAIriRI;

1.45
date	2015.06.24.06.39.03;	author dcoppa;	state Exp;
branches;
next	1.44;
commitid	lTyLqWBmal97eHrV;

1.44
date	2015.06.03.08.25.30;	author dcoppa;	state Exp;
branches;
next	1.43;
commitid	u6rlhnzykSkEH2fC;

1.43
date	2015.04.23.09.19.44;	author dcoppa;	state Exp;
branches;
next	1.42;
commitid	FLEY1YvPtCOXOAgO;

1.42
date	2015.03.26.07.10.02;	author dcoppa;	state Exp;
branches;
next	1.41;
commitid	RC163bs6emik8Gf9;

1.41
date	2015.02.13.14.17.36;	author dcoppa;	state Exp;
branches;
next	1.40;
commitid	iwfjOyEMolXZaxIL;

1.40
date	2015.02.06.08.09.42;	author dcoppa;	state Exp;
branches;
next	1.39;
commitid	1IBmTZsHlo0lfDHY;

1.39
date	2015.01.23.18.01.09;	author dcoppa;	state Exp;
branches;
next	1.38;
commitid	AasrIjjpfxr6UqVY;

1.38
date	2015.01.20.11.41.32;	author dcoppa;	state Exp;
branches;
next	1.37;
commitid	dOH6y5sUpeBAsMFC;

1.37
date	2015.01.19.10.26.35;	author dcoppa;	state Exp;
branches;
next	1.36;
commitid	5L5DpS6uZ9ZnTMlq;

1.36
date	2015.01.13.08.22.48;	author dcoppa;	state Exp;
branches;
next	1.35;
commitid	BxokaRxycfspBSAJ;

1.35
date	2014.12.31.11.06.02;	author dcoppa;	state Exp;
branches;
next	1.34;
commitid	q283NDlM4qiVneVU;

1.34
date	2014.11.07.10.04.00;	author landry;	state Exp;
branches;
next	1.33;
commitid	fG1BgwdNmWt2y0LV;

1.33
date	2014.11.04.13.50.24;	author dcoppa;	state Exp;
branches;
next	1.32;
commitid	YszMQUykV3aR0MRf;

1.32
date	2014.10.07.11.12.23;	author dcoppa;	state Exp;
branches;
next	1.31;
commitid	9DDbd0n1bntl2dGy;

1.31
date	2014.10.03.10.11.45;	author dcoppa;	state Exp;
branches;
next	1.30;
commitid	2kN0tj2KqHFNY4hg;

1.30
date	2014.10.02.09.38.04;	author zhuk;	state Exp;
branches;
next	1.29;
commitid	xOVenLbIPD02tULi;

1.29
date	2014.09.30.15.02.32;	author dcoppa;	state Exp;
branches;
next	1.28;
commitid	fhduiNtLwEOexuC7;

1.28
date	2014.09.30.14.24.31;	author dcoppa;	state Exp;
branches;
next	1.27;
commitid	UNvE6uRiD96fproi;

1.27
date	2014.09.29.08.45.35;	author dcoppa;	state Exp;
branches;
next	1.26;
commitid	kcvCJaFLgS6fbd4g;

1.26
date	2014.09.29.08.25.39;	author dcoppa;	state Exp;
branches;
next	1.25;
commitid	Rs6vJ0tO5v5EhITe;

1.25
date	2014.09.17.11.57.17;	author sthen;	state Exp;
branches;
next	1.24;
commitid	Js0iIuyp6NcrVBBu;

1.24
date	2014.09.12.08.36.12;	author dcoppa;	state Exp;
branches;
next	1.23;
commitid	lN5EaWqGfTyCDbtq;

1.23
date	2014.09.11.10.24.38;	author dcoppa;	state Exp;
branches;
next	1.22;
commitid	m0ESeGbhnaGm45G1;

1.22
date	2014.05.20.16.23.30;	author brad;	state Exp;
branches;
next	1.21;

1.21
date	2013.08.22.09.53.20;	author dcoppa;	state Exp;
branches;
next	1.20;

1.20
date	2013.06.25.08.34.10;	author dcoppa;	state Exp;
branches;
next	1.19;

1.19
date	2013.06.25.07.54.26;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2013.05.13.15.02.26;	author dcoppa;	state Exp;
branches;
next	1.17;

1.17
date	2013.04.18.22.54.50;	author sthen;	state Exp;
branches;
next	1.16;

1.16
date	2013.03.11.10.50.02;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2013.01.03.15.48.42;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2012.07.10.18.55.58;	author dcoppa;	state Exp;
branches;
next	1.13;

1.13
date	2012.07.10.15.20.24;	author jasper;	state Exp;
branches;
next	1.12;

1.12
date	2012.03.29.13.38.13;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2011.11.08.09.30.52;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2011.11.01.11.10.33;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2010.11.26.07.18.59;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2010.11.15.19.45.57;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.14.12.34.29;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2010.06.07.20.33.20;	author edd;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.28.20.21.48;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.04.21.07.23;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.09.09.09.44;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2007.03.26.21.27.44;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.20.09.23.13;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.07.20.09.23.13;	author espie;	state Exp;
branches;
next	;


desc
@@


1.58
log
@
Update to CMake-3.5.2

ok sthen@@
@
text
@# $OpenBSD: cmake.port.mk,v 1.57 2016/04/26 10:56:59 sthen Exp $

BUILD_DEPENDS+=	devel/cmake

.for _n _v in ${SHARED_LIBS}
CONFIGURE_ENV+=LIB${_n}_VERSION=${_v}
MAKE_ENV+=LIB${_n}_VERSION=${_v}
.endfor

USE_NINJA ?= Yes

# XXX: Ninja is broken on m88k
.if ${MACHINE_ARCH} == "m88k"
USE_NINJA = No
.endif

.if ${USE_NINJA:L} == "yes"
BUILD_DEPENDS += devel/ninja>=1.5.1
_MODCMAKE_GEN = Ninja
NINJA ?= ninja
NINJA_FLAGS ?= -v -j ${MAKE_JOBS}
MODCMAKE_BUILD_TARGET = cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
	${NINJA} ${NINJA_FLAGS} ${ALL_TARGET}
MODCMAKE_INSTALL_TARGET = cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
	${FAKE_SETUP} ${NINJA} ${NINJA_FLAGS} ${FAKE_TARGET}
MODCMAKE_TEST_TARGET = cd ${WRKBUILD} && exec ${SETENV} ${ALL_TEST_ENV} \
	${NINJA} ${NINJA_FLAGS} ${TEST_FLAGS} ${TEST_TARGET}

.if !target(do-build)
do-build:
	@@${MODCMAKE_BUILD_TARGET}
.endif

.if !target(do-install)
do-install:
	@@${MODCMAKE_INSTALL_TARGET}
.endif

.if !target(do-test)
do-test:
	@@${MODCMAKE_TEST_TARGET}
.endif

.else
_MODCMAKE_GEN = "Unix Makefiles"
# XXX cmake include parser is bogus
DPB_PROPERTIES += nojunk
.endif

CONFIGURE_ENV +=	MODJAVA_VER=${MODJAVA_VER} \
			MODLUA_VERSION=${MODLUA_VERSION} \
			MODLUA_BIN=${MODLUA_BIN} \
			MODLUA_INCL_DIR=${MODLUA_INCL_DIR} \
			MODPY_VERSION=${MODPY_VERSION} \
			MODPY_BIN=${MODPY_BIN} \
			MODPY_INCDIR=${MODPY_INCDIR} \
			MODPY_LIBDIR=${MODPY_LIBDIR} \
			MODRUBY_REV=${MODRUBY_REV} \
			MODTCL_VERSION=${MODTCL_VERSION} \
			MODTK_VERSION=${MODTK_VERSION} \
			MODTCL_INCDIR=${MODTCL_INCDIR} \
			MODTK_INCDIR=${MODTK_INCDIR} \
			MODTCL_LIBDIR=${MODTCL_LIBDIR} \
			MODTK_LIBDIR=${MODTK_LIBDIR} \
			MODTCL_LIB=${MODTCL_LIB} \
			MODTK_LIB=${MODTK_LIB}

.if empty(CONFIGURE_STYLE)
CONFIGURE_STYLE=	cmake
.endif
MODCMAKE_configure=	cd ${WRKBUILD} && ${SETENV} \
	CC="${CC}" CFLAGS="${CFLAGS}" \
	CXX="${CXX}" CXXFLAGS="${CXXFLAGS}" \
	${CONFIGURE_ENV} ${LOCALBASE}/bin/cmake \
		-DCMAKE_SKIP_INSTALL_ALL_DEPENDENCY:Bool=True \
		-G ${_MODCMAKE_GEN} ${CONFIGURE_ARGS} ${WRKSRC}

.if defined(DEBUG)
CONFIGURE_ARGS += -DCMAKE_BUILD_TYPE:String=Debug
MODCMAKE_BUILD_SUFFIX =	-debug.cmake
.else
CONFIGURE_ARGS += -DCMAKE_BUILD_TYPE:String=Release
MODCMAKE_BUILD_SUFFIX =	-release.cmake
.endif
SUBST_VARS +=	MODCMAKE_BUILD_SUFFIX

SEPARATE_BUILD ?=	Yes

TEST_TARGET ?=	test

MODCMAKE_WANTCOLOR ?= No
MODCMAKE_VERBOSE ?= Yes

.if ${MODCMAKE_WANTCOLOR:L} == "yes" && defined(TERM)
MAKE_ENV += TERM=${TERM}
.endif

.if ${MODCMAKE_VERBOSE:L} == "yes"
MAKE_ENV += VERBOSE=1
.endif

@


1.57
log
@Clean up some bits missed in yesterday's systrace removal.
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.56 2016/04/19 19:48:28 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.4.3p2
@


1.56
log
@
sync
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.55 2016/03/24 13:22:21 dcoppa Exp $
d71 1
a71 1
MODCMAKE_configure=	cd ${WRKBUILD} && ${_SYSTRACE_CMD} ${SETENV} \
@


1.55
log
@
sync
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.54 2016/01/28 11:28:02 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.4.3p1
@


1.54
log
@
Do not handle jsoncpp in a special way, treat it like all the other
external libraries

$ diff -u objdump-pre.out objdump-post.out | grep libjsoncpp
-  NEEDED      /usr/local/lib/libjsoncpp.so.0.0
+  NEEDED      libjsoncpp.so.0.0
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.53 2016/01/28 09:22:31 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.4.3p0
@


1.53
log
@
Use g++-4.9 from ports to build cmake on arm

OK jsg@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.52 2016/01/26 08:44:07 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.4.3
@


1.52
log
@
Update to cmake-3.4.3.
Windows10-related fixes
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.51 2016/01/20 09:39:46 dcoppa Exp $
a11 1
# XXX: CMake's built-in ELF parser is broken on arm
d13 1
a13 1
.if ${MACHINE_ARCH} == "arm" || ${MACHINE_ARCH} == "m88k"
@


1.51
log
@
Maintenance update to cmake-3.4.2.
Nothing interesting for us...
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.50 2015/12/18 17:20:40 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.4.2
@


1.50
log
@
Fix pasto:

size_t last = env_vers.find_first_of(".");

should have been

size_t last = env_vers.find_last_of(".");

Spotted by zhuk@@
Gave him my ok for the diff, but he probably forgot to commit it
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.49 2015/12/09 11:50:46 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.4.1p0
@


1.49
log
@
Update version constraint
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.48 2015/09/18 09:18:56 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.4.1
@


1.48
log
@
Bugfixing update to cmake-3.3.2
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.47 2015/09/03 07:09:25 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.3.2
@


1.47
log
@
Update to CMake-3.3.1

No fallout in a bulk build
OK ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.46 2015/07/01 08:08:18 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.3.1
@


1.46
log
@
Prompted by a mail from "EdaSky"
(http://marc.info/?l=openbsd-misc&m=143552406830762):

automagically add pthread to Boost_LIBRARIES and '-pthread' to
compiler flags if the boost_thread component is requested.

Fix boost_thread's "Compiler threading support is not turned on,
please set the correct command line options for threading" error
without the need to tamper with CMAKE_CXX_FLAGS.

Based on a patch found in the Debian package for cmake, which I've
enhanced/modernized a bit.
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.45 2015/06/24 06:39:03 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.2.3p1
@


1.45
log
@
jdk-1.8 bits for CMake
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.44 2015/06/03 08:25:30 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.2.3p0
@


1.44
log
@
maintenance update to CMake 3.2.3
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.43 2015/04/23 09:19:44 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.2.3
@


1.43
log
@
Maintenance update to cmake-3.2.2
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.42 2015/03/26 07:10:02 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.2.2
@


1.42
log
@
Update to CMake-3.2.1

Tested in a bulk build by landry@@
OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.41 2015/02/13 14:17:36 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.2.1
@


1.41
log
@
Maintenance update to CMake-3.1.3
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.40 2015/02/06 08:09:42 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.1.3
@


1.40
log
@
Bugfixing update to cmake-3.1.2
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.39 2015/01/23 18:01:09 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.1.2
@


1.39
log
@
Maintenance update to cmake-3.1.1
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.38 2015/01/20 11:41:32 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.1.1
@


1.38
log
@
Fetch the right version of ruby from MODRUBY_REV automagically
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.37 2015/01/19 10:26:35 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.1.0p2
@


1.37
log
@
Pass MODRUBY_REV to CONFIGURE_ENV
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.36 2015/01/13 08:22:48 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.1.0p1
@


1.36
log
@
FindRuby.cmake: fix selection of version x.0
FindRuby.cmake: properly detect Ruby 2.2.0
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.35 2014/12/31 11:06:02 dcoppa Exp $
d59 1
@


1.35
log
@
Update to cmake-3.1.0

Bulk build by landry@@
KDE-related fixes by zhuk@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.34 2014/11/07 10:04:00 landry Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.1.0
@


1.34
log
@Instead of letting cmake projects decide what kind of build type they want,
and thus use random build flags (and often override our default CFLAGS)
for consistency enforce CMAKE_BUILD_TYPE:String=Release by default, and
CMAKE_BUILD_TYPE:String=Debug if DEBUG is set.
Provide a MODCMAKE_BUILD_SUFFIX variable added to SUBST_VARS, set to
either -debug.cmake or -release.cmake, will be used in some PLISTs

Went into an amd64 bulk build.
with/ok dcoppa@@ sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.33 2014/11/04 13:50:24 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.0.2p7
@


1.33
log
@
Remove '-O2' as default optimization
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.32 2014/10/07 11:12:23 dcoppa Exp $
d77 9
@


1.32
log
@
fix FindLua module; from upstream (Rolf Eike Beer)
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.31 2014/10/03 10:11:45 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.0.2p6
@


1.31
log
@
Do not register full paths to shared libraries in the ELF "NEEDED"
sections

tested in a bulk build by landry@@

OK landry@@, zhuk@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.30 2014/10/02 09:38:04 zhuk Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.0.2p5
@


1.30
log
@Start using ALL_TEST_ENV for CMake-based ports.

No real change for now since ALL_TEST_ENV=MAKE_ENV+TEST_ENV.

okay dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.29 2014/09/30 15:02:32 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.0.2p4
@


1.29
log
@
Add missing bits of sthen's commit to disable ninja on m88k
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.28 2014/09/30 14:24:31 dcoppa Exp $
d27 1
a27 1
MODCMAKE_TEST_TARGET = cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
@


1.28
log
@
Simplify patch
Thanks to to Rolf Eike Beer for this too
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.27 2014/09/29 08:45:35 dcoppa Exp $
d13 1
@


1.27
log
@
Shrug. Fix typo
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.26 2014/09/29 08:25:39 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.0.2p3
@


1.26
log
@
Merge OpenBSD-related fixes from upstream git
kudos to Rolf Eike Beer
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.25 2014/09/17 11:57:17 sthen Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.0.2p2
@


1.25
log
@devel/ninja is knocked out on m88k; disable its use with cmake (as already
done with arm)
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.24 2014/09/12 08:36:12 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.0.2
@


1.24
log
@
Bugfixing update to cmake-3.0.2

Use Ninja-1.5's console pool to have visible output during long-running
tasks which produce status updates on the console (such as test suites)
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.23 2014/09/11 10:24:38 dcoppa Exp $
d13 1
a13 1
.if ${MACHINE_ARCH} == "arm"
@


1.23
log
@
Update to cmake-3.0.1

Tested in a bulk build by landry@@
OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.22 2014/05/20 16:23:30 brad Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=3.0.1
d18 1
a18 1
BUILD_DEPENDS += devel/ninja
@


1.22
log
@Bump the BUILD_DEPENDS for the CMake release to the latest release
as even an older minor release could result in a test failing.

ok dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.21 2013/08/22 09:53:20 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=2.8.12.2
@


1.21
log
@CMake's built-in ELF parser is broken on arm:

> #0  cmELF (this=0xbfff4674, fname=0x4337438c "/usr/lib/libz.so.4.1")
>     at basic_ios.h:124
> 124           { return _M_streambuf_state; }

Since this is a requirement for Ninja, disable both of
them if ${MACHINE_ARCH} == "arm".

As a workaround, ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.20 2013/06/25 08:34:10 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=2.8.11.1p0
@


1.20
log
@Tighten up build depends to ensure cmake will have ELF parsing
support enabled: this is a requirement for Ninja.

ok espie@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.19 2013/06/25 07:54:26 espie Exp $
d11 5
@


1.19
log
@switch to the ninja generator, unless USE_NINJA=No
Thx to dcoppa@@, only nvi and plplot are stuck with the old generator.
okay dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.18 2013/05/13 15:02:26 dcoppa Exp $
d3 1
a3 1
BUILD_DEPENDS+=	devel/cmake>=2.8.0
@


1.18
log
@Fix for the problem sthen@@ reported some time ago: if a library is
not listed in SHARED_LIBS, it will be created with no version suffix.

It was a regression caused by my "build shared libraries without
soname" work, sorry.
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.17 2013/04/18 22:54:50 sthen Exp $
d10 35
d70 1
a70 1
			${CONFIGURE_ARGS} ${WRKSRC}
a86 2
# XXX cmake include parser is bogus
DPB_PROPERTIES += nojunk
@


1.17
log
@add an XXX comment because I don't have time to look now, but don't want
to forget: if a library is not listed in SHARED_LIBS, with the cmake module
it will be created with *no* version suffix. (i.e. .so not .so.0.0)
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.16 2013/03/11 10:50:02 espie Exp $
a4 2
# XXX if a library is not listed in SHARED_LIBS, it will be created
# with *no* version suffix.
@


1.16
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.15 2013/01/03 15:48:42 espie Exp $
d5 2
@


1.15
log
@use new dpb annotation to work around bug in dependency scanners.
as discussed with dcoppa@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.14 2012/07/10 18:55:58 dcoppa Exp $
d39 1
a39 1
REGRESS_TARGET ?=	test
@


1.14
log
@Add another couple of variables from lua.port.mk to ease future
work.
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.13 2012/07/10 15:20:24 jasper Exp $
d51 3
@


1.13
log
@fixes for lua

from dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.12 2012/03/29 13:38:13 sthen Exp $
d12 2
@


1.12
log
@Change SEPARATE_BUILD=(concurrent|simple) to Yes; bsd.port.mk doesn't
make a distinction between these.  ok aja@@ dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.11 2011/11/08 09:30:52 dcoppa Exp $
d11 1
@


1.11
log
@SEPARATE_BUILD by default for CMake

from Vadim Zhukov

OK jasper@@, espie@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.10 2011/11/01 11:10:33 dcoppa Exp $
d34 1
a34 1
SEPARATE_BUILD ?=	simple
@


1.10
log
@Set CMAKE_SKIP_INSTALL_ALL_DEPENDENCY to true into cmake.port.mk.
This will tell CMake to skip rescanning the whole directory in the fake
stage: our ports infrastructure already takes care that fake happens
only after build.

From Vadim Zhukov

Tested in a bulk build and ok, jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.9 2010/11/26 07:18:59 espie Exp $
d34 3
a36 1
REGRESS_TARGET?=	test
@


1.9
log
@newer depends with >=
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.8 2010/11/15 19:45:57 espie Exp $
d30 3
a32 1
	${CONFIGURE_ENV} ${LOCALBASE}/bin/cmake ${CONFIGURE_ARGS} ${WRKSRC}
@


1.8
log
@move depends to new style
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.7 2010/06/14 12:34:29 espie Exp $
d3 1
a3 1
BUILD_DEPENDS+=	cmake->=2.8.0:devel/cmake
@


1.7
log
@consensus seems to be no colors, and verbose...
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.6 2010/06/07 20:33:20 edd Exp $
d3 1
a3 1
BUILD_DEPENDS+=	:cmake->=2.8.0:devel/cmake
@


1.6
log
@force use of new cmake as people who have not upgraded will hit problems with,
for example x11/awesome.

OK sthen@@, dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.5 2010/05/28 20:21:48 dcoppa Exp $
a33 1
.if defined(BATCH)
a34 3
MODCMAKE_VERBOSE ?= No
.else
MODCMAKE_WANTCOLOR ?= Yes
a35 1
.endif
@


1.5
log
@Update to cmake 2.8.1 (I also take maintainership).

"This is good, commit." espie@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.4 2009/06/04 21:07:23 ajacoutot Exp $
d3 1
a3 1
BUILD_DEPENDS+=	::devel/cmake
@


1.4
log
@Add a new variable MODCMAKE_VERBOSE which is on by default when !BATCH,
to enable cmake VERBOSE mode and see the build output.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.3 2007/06/09 09:09:44 espie Exp $
d9 14
@


1.3
log
@allow cmake to proceed in color unless you `explicitly' ask it otherwise
(setting BATCH, for instance).

Synch FindQt4 with some of qt 4.3.0 stuff. Need to be fully synched with
qt 4.3.0 anyways...
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.2 2007/03/26 21:27:44 espie Exp $
d22 1
d25 1
d30 4
@


1.2
log
@fix shared library numbers for OpenBSD. Patch may still change, but it
appears to work fine w/ kde4.

cmake will still generate a libfoo.so (which is useful as a placeholder to
know the lib has been built, since other directories don't have access to
the version number), but it obeys OpenBSD conventions for the actual library
now.

ld does the right thing, namely it ignores the libfoo.so and links against
libfoo.so.5.0 properly.

Also take environment into account to allow the ports tree to override
version numbers.

Todo: logfile of built libraries.
@
text
@d1 1
a1 1
# $OpenBSD: cmake.port.mk,v 1.1.1.1 2006/07/20 09:23:13 espie Exp $
d20 9
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d5 5
d19 1
@


1.1.1.1
log
@cmake, a `new' build system. Used by KDE4.

Easier to work with than autoconf/automake/libtool.
@
text
@@
