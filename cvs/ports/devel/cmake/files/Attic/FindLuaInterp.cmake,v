head	1.3;
access;
symbols
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2014.09.11.10.24.38;	author dcoppa;	state dead;
branches;
next	1.2;
commitid	m0ESeGbhnaGm45G1;

1.2
date	2012.07.12.15.36.20;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2012.07.10.15.20.24;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
Update to cmake-3.0.1

Tested in a bulk build by landry@@
OK landry@@
@
text
@# Locate Lua interpreter
# This module defines
#  LUAINTERP_FOUND
#  LUA_EXECUTABLE
#

#=============================================================================
# Copyright 2007-2009 Kitware, Inc.
# Copyright 2011 Peter Colberg
#
# Distributed under the OSI-approved BSD License (the "License");
# see accompanying file Copyright.txt for details.
#
# This software is distributed WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the License for more information.
#=============================================================================
# (To distribute this file outside of CMake, substitute the full
#  License text for the above reference.)

SET(MODLUA_VERSION $ENV{MODLUA_VERSION})
SET(MODLUA_BIN $ENV{MODLUA_BIN})

IF(MODLUA_VERSION AND MODLUA_BIN)
  SET(LUA_EXECUTABLE "${MODLUA_BIN}")
ELSE(MODLUA_VERSION AND MODLUA_BIN)
  FIND_PROGRAM(LUA_EXECUTABLE
    NAMES lua51 lua5.1 lua-5.1 lua52 lua5.2 lua-5.2 lua
    HINTS
    $ENV{LUA_DIR}
    PATH_SUFFIXES bin
    PATHS
    ~/Library/Frameworks
    /Library/Frameworks
    /usr/local
    /usr
    /sw
    /opt/local
    /opt/csw
    /opt
  )
ENDIF(MODLUA_VERSION AND MODLUA_BIN)

INCLUDE(FindPackageHandleStandardArgs)
# handle the QUIETLY and REQUIRED arguments and set LUAINTERP_FOUND to TRUE if
# all listed variables are TRUE
FIND_PACKAGE_HANDLE_STANDARD_ARGS(LuaInterp DEFAULT_MSG LUA_EXECUTABLE)

MARK_AS_ADVANCED(
  LUA_EXECUTABLE
)
@


1.2
log
@Finish the work with lua and cmake: it's nicer and more compact now.
@
text
@@


1.1
log
@fixes for lua

from dcoppa@@
@
text
@d22 1
d24 4
a27 22
IF(MODLUA_VERSION)
  IF(MODLUA_VERSION MATCHES "^5\\.2$")
    find_program(LUA_EXECUTABLE
      NAMES lua52
      HINTS
      $ENV{LUA_DIR}
      PATH_SUFFIXES bin
      PATHS
      ${LOCALBASE}
    )
  ELSE(MODLUA_VERSION MATCHES "^5\\.2$")
    find_program(LUA_EXECUTABLE
      NAMES lua51
      HINTS
      $ENV{LUA_DIR}
      PATH_SUFFIXES bin
      PATHS
      ${LOCALBASE}
    )
  ENDIF(MODLUA_VERSION MATCHES "^5\\.2$")
ELSE(MODLUA_VERSION)
  find_program(LUA_EXECUTABLE
d42 1
a42 1
ENDIF(MODLUA_VERSION)
d44 1
a44 1
include(FindPackageHandleStandardArgs)
d47 1
a47 1
find_package_handle_standard_args(LuaInterp DEFAULT_MSG LUA_EXECUTABLE)
d49 1
a49 1
mark_as_advanced(
@

