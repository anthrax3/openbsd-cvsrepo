head	1.27;
access;
symbols
	OPENBSD_6_0:1.25.0.8
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.4
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.25.0.6
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.25.0.2
	OPENBSD_5_7_BASE:1.25
	OPENBSD_5_6:1.21.0.4
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.2
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.20.0.2
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.17.0.2
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.13.0.2
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.2
	OPENBSD_5_0:1.10.0.2
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.6.0.10
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.8
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.6
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.4
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3;
locks; strict;
comment	@# @;


1.27
date	2016.11.28.09.15.13;	author dcoppa;	state Exp;
branches;
next	1.26;
commitid	jOocuc05F30hpQ6W;

1.26
date	2016.08.08.07.44.48;	author dcoppa;	state Exp;
branches;
next	1.25;
commitid	r4e0Be8ugQYraWeW;

1.25
date	2015.01.28.13.52.41;	author dcoppa;	state Exp;
branches;
next	1.24;
commitid	vapAPB52g31l4ljC;

1.24
date	2015.01.08.16.58.00;	author dcoppa;	state Exp;
branches;
next	1.23;
commitid	JvDdNJH4ENeN1MeG;

1.23
date	2014.12.31.11.06.02;	author dcoppa;	state Exp;
branches;
next	1.22;
commitid	q283NDlM4qiVneVU;

1.22
date	2014.09.11.10.24.38;	author dcoppa;	state Exp;
branches;
next	1.21;
commitid	m0ESeGbhnaGm45G1;

1.21
date	2013.10.14.12.58.03;	author dcoppa;	state Exp;
branches;
next	1.20;

1.20
date	2013.06.21.11.12.51;	author dcoppa;	state Exp;
branches;
next	1.19;

1.19
date	2013.06.06.12.47.06;	author dcoppa;	state Exp;
branches;
next	1.18;

1.18
date	2013.05.30.08.34.32;	author dcoppa;	state Exp;
branches;
next	1.17;

1.17
date	2012.11.22.13.21.49;	author dcoppa;	state Exp;
branches;
next	1.16;

1.16
date	2012.11.11.17.13.31;	author dcoppa;	state Exp;
branches;
next	1.15;

1.15
date	2012.08.31.12.28.31;	author dcoppa;	state Exp;
branches;
next	1.14;

1.14
date	2012.08.20.08.07.34;	author dcoppa;	state Exp;
branches;
next	1.13;

1.13
date	2012.05.07.07.06.20;	author dcoppa;	state Exp;
branches;
next	1.12;

1.12
date	2011.10.14.17.22.10;	author dcoppa;	state Exp;
branches;
next	1.11;

1.11
date	2011.09.20.11.32.36;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2011.03.13.18.23.02;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2010.11.15.11.39.09;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2010.07.12.19.19.30;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2010.05.28.20.21.48;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2008.02.04.22.31.20;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2008.01.26.21.26.32;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2007.08.25.08.35.20;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.09.09.09.44;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.25.14.56.13;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.20.11.23.10;	author espie;	state Exp;
branches;
next	;


desc
@@


1.27
log
@
Update to CMake-3.7.0

Thanks to naddy@@ who ran a bulk build with it
@
text
@$OpenBSD: patch-Modules_FindQt4_cmake,v 1.26 2016/08/08 07:44:48 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Fri Nov 11 15:37:13 2016
+++ Modules/FindQt4.cmake	Fri Nov 25 22:31:45 2016
@@@@ -514,7 +514,12 @@@@ endfunction()
 
 set(QT4_INSTALLED_VERSION_TOO_OLD FALSE)
 
-set(_QT4_QMAKE_NAMES qmake qmake4 qmake-qt4 qmake-mac)
+if (CMAKE_SYSTEM_NAME MATCHES "OpenBSD")
+  set(_QT4_QMAKE_NAMES qmake4)
+else()
+  set(_QT4_QMAKE_NAMES qmake4 qmake-qt4 qmake qmake-mac)
+endif()
+
 _qt4_find_qmake("${_QT4_QMAKE_NAMES}" QT_QMAKE_EXECUTABLE QTVERSION)
 
 if (QT_QMAKE_EXECUTABLE AND
@@@@ -694,6 +699,8 @@@@ if (QT_QMAKE_EXECUTABLE AND
 
   # Set QT_INCLUDES
   set( QT_INCLUDES ${QT_MKSPECS_DIR}/default ${QT_INCLUDE_DIR} ${QT_QTCORE_INCLUDE_DIR})
+  # Help QtOpenGL find GL/gl.h
+  list(APPEND QT_INCLUDES "${X11BASE}/include")
 
 
   # ask qmake for the documentation directory
@@@@ -1137,17 +1144,17 @@@@ if (QT_QMAKE_EXECUTABLE AND
     endif()
   endmacro()
 
-  _find_qt4_program(QT_MOC_EXECUTABLE Qt4::moc moc-qt4 moc4 moc)
-  _find_qt4_program(QT_UIC_EXECUTABLE Qt4::uic uic-qt4 uic4 uic)
+  _find_qt4_program(QT_MOC_EXECUTABLE Qt4::moc moc4 moc-qt4 moc)
+  _find_qt4_program(QT_UIC_EXECUTABLE Qt4::uic uic4 uic-qt4 uic)
   _find_qt4_program(QT_UIC3_EXECUTABLE Qt4::uic3 uic3)
   _find_qt4_program(QT_RCC_EXECUTABLE Qt4::rcc rcc)
   _find_qt4_program(QT_DBUSCPP2XML_EXECUTABLE Qt4::qdbuscpp2xml qdbuscpp2xml)
   _find_qt4_program(QT_DBUSXML2CPP_EXECUTABLE Qt4::qdbusxml2cpp qdbusxml2cpp)
-  _find_qt4_program(QT_LUPDATE_EXECUTABLE Qt4::lupdate lupdate-qt4 lupdate4 lupdate)
-  _find_qt4_program(QT_LRELEASE_EXECUTABLE Qt4::lrelease lrelease-qt4 lrelease4 lrelease)
+  _find_qt4_program(QT_LUPDATE_EXECUTABLE Qt4::lupdate lupdate4 lupdate-qt4 lupdate)
+  _find_qt4_program(QT_LRELEASE_EXECUTABLE Qt4::lrelease lrelease4 lrelease-qt4 lrelease)
   _find_qt4_program(QT_QCOLLECTIONGENERATOR_EXECUTABLE Qt4::qcollectiongenerator qcollectiongenerator-qt4 qcollectiongenerator)
-  _find_qt4_program(QT_DESIGNER_EXECUTABLE Qt4::designer designer-qt4 designer4 designer)
-  _find_qt4_program(QT_LINGUIST_EXECUTABLE Qt4::linguist linguist-qt4 linguist4 linguist)
+  _find_qt4_program(QT_DESIGNER_EXECUTABLE Qt4::designer designer4 designer-qt4 designer)
+  _find_qt4_program(QT_LINGUIST_EXECUTABLE Qt4::linguist linguist4 linguist-qt4 linguist)
 
   if (NOT TARGET Qt4::qmake)
     add_executable(Qt4::qmake IMPORTED)
@


1.26
log
@
Update to CMake-3.6.1.

Tested in a bulk build by naddy@@: the one and only fallout has been
fixed.
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.25 2015/01/28 13:52:41 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Fri Jul 22 15:50:22 2016
+++ Modules/FindQt4.cmake	Thu Aug  4 11:06:08 2016
@@@@ -524,7 +524,12 @@@@ endfunction()
d18 1
a18 1
@@@@ -704,6 +709,8 @@@@ if (QT_QMAKE_EXECUTABLE AND
d27 1
a27 1
@@@@ -1147,17 +1154,17 @@@@ if (QT_QMAKE_EXECUTABLE AND
@


1.25
log
@
Remove comment for an upstream commit that has been reverted
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.24 2015/01/08 16:58:00 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Mon Dec 15 14:07:43 2014
+++ Modules/FindQt4.cmake	Thu Jan  8 10:39:46 2015
@@@@ -522,7 +522,12 @@@@ endfunction()
d18 1
a18 1
@@@@ -702,6 +707,8 @@@@ if (QT_QMAKE_EXECUTABLE AND
d27 1
a27 1
@@@@ -1145,17 +1152,17 @@@@ if (QT_QMAKE_EXECUTABLE AND
@


1.24
log
@
Sync patches with upstream:

FindQt4: search for versioned qmake names first before general qmake
(upstream git commit 8de3f22e8fe9e798b63eb00e35eee6404748d3bd)

FindSDL: fix bad variable expansion
(upstream git commit fd329307b2ee76abaa41e25a300902a2fb983895)
@
text
@d1 1
a1 8
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.23 2014/12/31 11:06:02 dcoppa Exp $

commit 8de3f22e8fe9e798b63eb00e35eee6404748d3bd
Author: Rolf Eike Beer <eike@@sf-mail.de>
Date:   Wed Jan 7 23:42:35 2015 +0100

FindQt4: search for versioned qmake names first before general qmake

@


1.23
log
@
Update to cmake-3.1.0

Bulk build by landry@@
KDE-related fixes by zhuk@@
@
text
@d1 8
a8 1
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.22 2014/09/11 10:24:38 dcoppa Exp $
d10 1
a10 1
+++ Modules/FindQt4.cmake	Thu Dec 18 06:34:41 2014
d19 1
a19 1
+  set(_QT4_QMAKE_NAMES qmake qmake4 qmake-qt4 qmake-mac)
@


1.22
log
@
Update to cmake-3.0.1

Tested in a bulk build by landry@@
OK landry@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.21 2013/10/14 12:58:03 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Thu Jul 31 17:03:56 2014
+++ Modules/FindQt4.cmake	Wed Sep  3 08:23:52 2014
@@@@ -514,7 +514,12 @@@@ endfunction()
d17 2
a18 2
 if (QT_QMAKE_EXECUTABLE AND QTVERSION)
@@@@ -689,6 +694,8 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d27 1
a27 1
@@@@ -1135,17 +1142,17 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d31 2
a32 2
-  _find_qt4_program(QT_MOC_EXECUTABLE Qt4::moc moc-qt4 moc moc4)
-  _find_qt4_program(QT_UIC_EXECUTABLE Qt4::uic uic-qt4 uic uic4)
d39 2
a40 2
-  _find_qt4_program(QT_LUPDATE_EXECUTABLE Qt4::lupdate lupdate-qt4 lupdate lupdate4)
-  _find_qt4_program(QT_LRELEASE_EXECUTABLE Qt4::lrelease lrelease-qt4 lrelease lrelease4)
d44 2
a45 2
-  _find_qt4_program(QT_DESIGNER_EXECUTABLE Qt4::designer designer-qt4 designer designer4)
-  _find_qt4_program(QT_LINGUIST_EXECUTABLE Qt4::linguist linguist-qt4 linguist linguist4)
@


1.21
log
@Update to cmake-2.8.12.
Tested in a bulk build by the usual suspects, Thanks!

ok espie@@, kili@@
ok zhuk@@ for kde4
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.20 2013/06/21 11:12:51 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Mon Oct  7 17:31:00 2013
+++ Modules/FindQt4.cmake	Wed Oct  9 09:38:48 2013
@@@@ -571,7 +571,12 @@@@ endfunction()
d18 1
a18 1
@@@@ -732,6 +737,8 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d27 21
a47 2
@@@@ -1157,13 +1164,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
   endif()
d49 2
a50 45
   find_program(QT_MOC_EXECUTABLE
-    NAMES moc-qt4 moc moc4
+    NAMES moc4 moc-qt4 moc
     PATHS ${QT_BINARY_DIR}
     NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH
     )
 
   find_program(QT_UIC_EXECUTABLE
-    NAMES uic-qt4 uic uic4
+    NAMES uic4 uic-qt4 uic
     PATHS ${QT_BINARY_DIR}
     NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH
     )
@@@@ -1193,13 +1200,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
     )
 
   find_program(QT_LUPDATE_EXECUTABLE
-    NAMES lupdate-qt4 lupdate lupdate4
+    NAMES lupdate4 lupdate-qt4 lupdate
     PATHS ${QT_BINARY_DIR}
     NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH
     )
 
   find_program(QT_LRELEASE_EXECUTABLE
-    NAMES lrelease-qt4 lrelease lrelease4
+    NAMES lrelease4 lrelease-qt4 lrelease
     PATHS ${QT_BINARY_DIR}
     NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH
     )
@@@@ -1211,13 +1218,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
     )
 
   find_program(QT_DESIGNER_EXECUTABLE
-    NAMES designer-qt4 designer designer4
+    NAMES designer4 designer-qt4 designer
     PATHS ${QT_BINARY_DIR}
     NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH
     )
 
   find_program(QT_LINGUIST_EXECUTABLE
-    NAMES linguist-qt4 linguist linguist4
+    NAMES linguist4 linguist-qt4 linguist
     PATHS ${QT_BINARY_DIR}
     NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH
     )
@


1.20
log
@Bugfix update to cmake-2.8.11.1
See: http://public.kitware.com/Bug/changelog_page.php?version_id=113

OK jasper@@, sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.19 2013/06/06 12:47:06 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Fri Jun  7 17:21:34 2013
+++ Modules/FindQt4.cmake	Fri Jun 21 11:38:22 2013
@@@@ -569,7 +569,12 @@@@ endfunction()
d18 1
a18 1
@@@@ -727,6 +732,8 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d27 1
a27 1
@@@@ -1153,13 +1160,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d43 1
a43 1
@@@@ -1189,13 +1196,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d59 1
a59 1
@@@@ -1207,13 +1214,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
@


1.19
log
@Update to cmake-2.8.11.

Tested in a bulk build by landry@@
Tested with KDE4 by zhuk@@
OK zhuk@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.18 2013/05/30 08:34:32 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Wed May 15 19:38:12 2013
+++ Modules/FindQt4.cmake	Thu May 30 12:15:49 2013
d27 1
a27 1
@@@@ -1139,13 +1146,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d43 1
a43 1
@@@@ -1175,13 +1182,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d59 1
a59 1
@@@@ -1193,13 +1200,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
@


1.18
log
@Simplification
Minor fixes and cleanups
Put stuff where it belongs
Zap some useless patches

(in preparation for cmake-2.8.11)
@
text
@d1 8
a8 14
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.17 2012/11/22 13:21:49 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Tue Nov 27 14:26:32 2012
+++ Modules/FindQt4.cmake	Wed May 29 13:42:26 2013
@@@@ -497,13 +497,22 @@@@ get_filename_component(qt_install_version "[HKEY_CURRE
 # check for qmake
 # Debian uses qmake-qt4
 # macports' Qt uses qmake-mac
-find_program(QT_QMAKE_EXECUTABLE NAMES qmake qmake4 qmake-qt4 qmake-mac
-  PATHS
-    ENV QTDIR
-    "[HKEY_CURRENT_USER\\Software\\Trolltech\\Versions\\${qt_install_version};InstallDir]"
-  PATH_SUFFIXES bin
-  DOC "The qmake executable for the Qt installation to use"
-)
d10 1
a10 6
+  find_program(QT_QMAKE_EXECUTABLE NAMES qmake4
+    PATHS
+      ENV QTDIR
+    PATH_SUFFIXES bin
+    DOC "The qmake executable for the Qt installation to use"
+  )
d12 1
a12 7
+  find_program(QT_QMAKE_EXECUTABLE NAMES qmake qmake4 qmake-qt4 qmake-mac
+    PATHS
+      ENV QTDIR
+      "[HKEY_CURRENT_USER\\Software\\Trolltech\\Versions\\${qt_install_version};InstallDir]"
+    PATH_SUFFIXES bin
+    DOC "The qmake executable for the Qt installation to use"
+  )
d14 2
d17 2
a18 3
 # double check that it was a Qt4 qmake, if not, re-find with different names
 if (QT_QMAKE_EXECUTABLE)
@@@@ -678,6 +687,7 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d22 1
d27 1
a27 1
@@@@ -982,13 +992,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d31 1
a31 1
-    NAMES moc-qt4 moc
d38 1
a38 1
-    NAMES uic-qt4 uic
d43 1
a43 1
@@@@ -1018,13 +1028,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d47 1
a47 1
-    NAMES lupdate-qt4 lupdate
d54 1
a54 1
-    NAMES lrelease-qt4 lrelease
d59 1
a59 1
@@@@ -1036,13 +1046,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d63 1
a63 1
-    NAMES designer-qt4 designer
d70 1
a70 1
-    NAMES linguist-qt4 linguist
@


1.17
log
@Append "/usr/X11R6/include" to ${QT_INCLUDES} to unbreak the build
in some circumstances (i.e. QtOpenGL not finding GL/gl.h)
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.16 2012/11/11 17:13:31 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Tue Nov  6 20:41:36 2012
+++ Modules/FindQt4.cmake	Thu Nov 22 13:36:47 2012
d15 1
a15 1
+if(CMAKE_SYSTEM MATCHES "OpenBSD*")
d22 1
a22 1
+else(CMAKE_SYSTEM MATCHES "OpenBSD*")
d30 1
a30 1
+endif(CMAKE_SYSTEM MATCHES "OpenBSD*")
@


1.16
log
@Update to cmake-2.8.10.
Successfully gone through a bulk build.

Feedback landry@@, Vadim Zhukov, Amit Kulkarni
Bulk build and OK landry@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.15 2012/08/31 12:28:31 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Wed Oct 31 16:32:05 2012
+++ Modules/FindQt4.cmake	Fri Nov  2 11:41:44 2012
d34 9
a42 1
@@@@ -982,13 +991,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d58 1
a58 1
@@@@ -1018,13 +1027,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
d74 1
a74 1
@@@@ -1036,13 +1045,13 @@@@ if (QT_QMAKE_EXECUTABLE AND QTVERSION)
@


1.15
log
@Update to cmake-2.8.9.

"There was no cmake fallout in the bulk on amd64" jasper@@
Also tested by Brad with a handful of CMake using ports
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.14 2012/08/20 08:07:34 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Thu Aug  9 20:15:19 2012
+++ Modules/FindQt4.cmake	Thu Aug 23 11:25:47 2012
@@@@ -486,13 +486,20 @@@@ GET_FILENAME_COMPONENT(qt_install_version "[HKEY_CURRE
d8 5
a12 5
-FIND_PROGRAM(QT_QMAKE_EXECUTABLE NAMES qmake qmake4 qmake-qt4 qmake-mac PATHS
-  "[HKEY_CURRENT_USER\\Software\\Trolltech\\Qt3Versions\\4.0.0;InstallDir]/bin"
-  "[HKEY_CURRENT_USER\\Software\\Trolltech\\Versions\\4.0.0;InstallDir]/bin"
-  "[HKEY_CURRENT_USER\\Software\\Trolltech\\Versions\\${qt_install_version};InstallDir]/bin"
-  $ENV{QTDIR}/bin
d15 5
a19 3
+IF(CMAKE_SYSTEM MATCHES "OpenBSD*")
+  FIND_PROGRAM(QT_QMAKE_EXECUTABLE NAMES qmake4 PATHS
+    $ENV{QTDIR}/bin
d22 6
a27 6
+ELSE(CMAKE_SYSTEM MATCHES "OpenBSD*")
+  FIND_PROGRAM(QT_QMAKE_EXECUTABLE NAMES qmake qmake4 qmake-qt4 qmake-mac PATHS
+    "[HKEY_CURRENT_USER\\Software\\Trolltech\\Qt3Versions\\4.0.0;InstallDir]/bin"
+    "[HKEY_CURRENT_USER\\Software\\Trolltech\\Versions\\4.0.0;InstallDir]/bin"
+    "[HKEY_CURRENT_USER\\Software\\Trolltech\\Versions\\${qt_install_version};InstallDir]/bin"
+    $ENV{QTDIR}/bin
d30 1
a30 1
+ENDIF(CMAKE_SYSTEM MATCHES "OpenBSD*")
d33 5
a37 5
 IF (QT_QMAKE_EXECUTABLE)
@@@@ -959,13 +966,13 @@@@ IF (QT_QMAKE_EXECUTABLE AND QTVERSION)
   ENDIF(QT_QMAKE_CHANGED)
   
   FIND_PROGRAM(QT_MOC_EXECUTABLE
d44 1
a44 1
   FIND_PROGRAM(QT_UIC_EXECUTABLE
d47 32
@


1.14
log
@Garbage collect the pthread patching for CMake.

From Brad, thanks.
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.13 2012/05/07 07:06:20 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Wed Apr 18 14:10:54 2012
+++ Modules/FindQt4.cmake	Sat Aug 18 08:43:30 2012
@@@@ -473,13 +473,20 @@@@ GET_FILENAME_COMPONENT(qt_install_version "[HKEY_CURRE
d32 1
a32 1
@@@@ -946,13 +953,13 @@@@ IF (QT_QMAKE_EXECUTABLE AND QTVERSION)
@


1.13
log
@Update to cmake-2.8.8

OK sthen@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.12 2011/10/14 17:22:10 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Wed Apr 18 20:10:54 2012
+++ Modules/FindQt4.cmake	Mon Apr 30 11:07:25 2012
d32 1
a32 14
@@@@ -922,6 +929,12 @@@@ IF (QT_QMAKE_EXECUTABLE AND QTVERSION)
     _QT4_ADJUST_LIB_VARS(QAxContainer)
   ENDIF(Q_WS_WIN)
 
+  # Qt4 on OpenBSD needs to be linked with -pthread
+  IF(CMAKE_SYSTEM MATCHES "OpenBSD*")
+    FIND_PACKAGE(Threads)
+    SET(QT_QTCORE_LIBRARY ${QT_QTCORE_LIBRARY}
+              ${CMAKE_THREAD_LIBS_INIT})
+  ENDIF(CMAKE_SYSTEM MATCHES "OpenBSD*")
 
   #######################################
   #
@@@@ -946,13 +959,13 @@@@ IF (QT_QMAKE_EXECUTABLE AND QTVERSION)
@


1.12
log
@Update to cmake-2.8.6

Fixed FindRuby.cmake module (from Vadim Zhukov)

Fixed FindJava.cmake and FindJNI.cmake modules when cmake is used
outside of our ports tree (problem reported and fix tested by
pirofti@@)

Still "100% tests passed, 0 tests failed out of 197".

No fallout in a bulk build.

OK jasper@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.11 2011/09/20 11:32:36 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Tue Oct  4 18:09:24 2011
+++ Modules/FindQt4.cmake	Fri Oct  7 09:15:17 2011
d32 1
a32 1
@@@@ -921,6 +928,12 @@@@ IF (QT_QMAKE_EXECUTABLE AND QTVERSION)
d45 1
a45 1
@@@@ -945,13 +958,13 @@@@ IF (QT_QMAKE_EXECUTABLE AND QTVERSION)
@


1.11
log
@Update to cmake-2.8.5

Went in a bulk without issues, ok landry@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.10 2011/03/13 18:23:02 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Fri Jul  8 14:21:44 2011
+++ Modules/FindQt4.cmake	Fri Sep  9 09:52:18 2011
d32 1
a32 1
@@@@ -920,6 +927,12 @@@@ IF (QT_QMAKE_EXECUTABLE AND QTVERSION)
d45 1
a45 1
@@@@ -944,13 +957,13 @@@@ IF (QT_QMAKE_EXECUTABLE AND QTVERSION)
@


1.10
log
@Update to cmake-2.8.4.
Tested in a bulk build by landry@@.
Lot of feedback from various people on ports@@: thanks!

OK landry@@, sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.9 2010/11/15 11:39:09 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Tue Feb 15 18:47:27 2011
+++ Modules/FindQt4.cmake	Mon Mar  7 10:10:46 2011
@@@@ -464,13 +464,20 @@@@ GET_FILENAME_COMPONENT(qt_install_version "[HKEY_CURRE
d30 1
d32 1
a32 2
 
@@@@ -967,6 +974,12 @@@@ IF (QT4_QMAKE_FOUND)
d45 1
a45 1
@@@@ -991,13 +1004,13 @@@@ IF (QT4_QMAKE_FOUND)
d52 1
a52 1
     NO_DEFAULT_PATH
d59 1
a59 1
     NO_DEFAULT_PATH
@


1.9
log
@Update to cmake-2.8.3

OK sthen@@, landry@@ (who also tested this in a bulk build)
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.8 2010/07/12 19:19:30 dcoppa Exp $
--- Modules/FindQt4.cmake.orig	Mon Jun 28 17:15:57 2010
+++ Modules/FindQt4.cmake	Mon Jul  5 11:23:18 2010
@@@@ -461,13 +461,20 @@@@ GET_FILENAME_COMPONENT(qt_install_version "[HKEY_CURRE
d32 1
a32 1
@@@@ -964,6 +971,12 @@@@ IF (QT4_QMAKE_FOUND)
d45 1
a45 1
@@@@ -988,13 +1001,13 @@@@ IF (QT4_QMAKE_FOUND)
@


1.8
log
@Fix a bug with shared libraries having OUTPUT_NAME in their target
properties.

Update to cmake-2.8.2.

While here, move to new-style LIB_DEPENDS/WANTLIB.

OK espie@@, landry@@, sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.7 2010/05/28 20:21:48 dcoppa Exp $
d4 1
a4 1
@@@@ -364,13 +364,20 @@@@ GET_FILENAME_COMPONENT(qt_install_version "[HKEY_CURRE
d32 1
a32 2
@@@@ -957,6 +964,12 @@@@ IF (QT4_QMAKE_FOUND)
     _QT4_ADJUST_LIB_VARS(QAxServer)
d34 3
a36 2
   ENDIF(WIN32)
+  # qt on OpenBSD needs to be linked with -pthread 
d43 3
a45 3
   # If Qt is installed as a framework, we need to add QT_QTCORE_LIBRARY here (which
   # is the framework directory in that case), since this will make the cmake include_directories()
@@@@ -991,13 +1004,13 @@@@ IF (QT4_QMAKE_FOUND)
d50 1
a50 1
+    NAMES moc-qt4 moc4 moc 
d57 1
a57 1
+    NAMES uic-qt4 uic4 uic
@


1.7
log
@Update to cmake 2.8.1 (I also take maintainership).

"This is good, commit." espie@@
@
text
@d1 4
a4 4
$OpenBSD$
--- Modules/FindQt4.cmake.orig	Tue Apr  6 16:45:31 2010
+++ Modules/FindQt4.cmake	Fri Apr 23 22:57:32 2010
@@@@ -392,12 +392,18 @@@@ GET_FILENAME_COMPONENT(qt_install_version "[HKEY_CURRE
d9 6
d18 1
d22 6
a27 5
   "[HKEY_CURRENT_USER\\Software\\Trolltech\\Qt3Versions\\4.0.0;InstallDir]/bin"
   "[HKEY_CURRENT_USER\\Software\\Trolltech\\Versions\\4.0.0;InstallDir]/bin"
   "[HKEY_CURRENT_USER\\Software\\Trolltech\\Versions\\${qt_install_version};InstallDir]/bin"
   $ENV{QTDIR}/bin
 )
d32 1
a32 1
@@@@ -983,6 +989,12 @@@@ IF (QT4_QMAKE_FOUND)
d45 1
a45 1
@@@@ -1017,13 +1029,13 @@@@ IF (QT4_QMAKE_FOUND)
@


1.6
log
@deal with qt4 issues here, instead of in kde.
@
text
@d1 4
a4 98
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.5 2008/01/26 21:26:32 espie Exp $
--- Modules/FindQt4.cmake.orig	Mon Jan 21 19:59:51 2008
+++ Modules/FindQt4.cmake	Mon Feb  4 23:15:04 2008
@@@@ -29,33 +29,52 @@@@
 # Add this variable to your TARGET_LINK_LIBRARIES.
 #  
 #  macro QT4_WRAP_CPP(outfiles inputfile ... OPTIONS ...)
+#        create moc code from a list of files containing Qt class with
+#        the Q_OBJECT declaration.  Options may be given to moc, such as those found
+#        when executing "moc -help"
+#
 #  macro QT4_WRAP_UI(outfiles inputfile ... OPTIONS ...)
+#        create code from a list of Qt designer ui files.
+#        Options may be given to uic, such as those found
+#        when executing "uic -help"
+#
 #  macro QT4_ADD_RESOURCES(outfiles inputfile ... OPTIONS ...)
+#        create code from a list of Qt resource files.
+#        Options may be given to rcc, such as those found
+#        when executing "rcc -help"
+#
 #  macro QT4_AUTOMOC(inputfile ... )
 #  macro QT4_GENERATE_MOC(inputfile outputfile )
 #
 #  macro QT4_ADD_DBUS_INTERFACE(outfiles interface basename)
 #        create a the interface header and implementation files with the 
 #        given basename from the given interface xml file and add it to 
-#        the list of sources
+#        the list of sources.
+#        To disable generating a namespace header, set the source file property 
+#        NO_NAMESPACE to TRUE on the interface file.
 #
 #  macro QT4_ADD_DBUS_INTERFACES(outfiles inputfile ... )
 #        create the interface header and implementation files 
 #        for all listed interface xml files
 #        the name will be automatically determined from the name of the xml file
 #
-#  macro QT4_ADD_DBUS_ADAPTOR(outfiles xmlfile parentheader parentclassname [basename] )
+#        To disable generating namespace headers, set the source file property 
+#        NO_NAMESPACE to TRUE for these inputfiles.
+#  macro QT4_ADD_DBUS_ADAPTOR(outfiles xmlfile parentheader parentclassname [basename] [classname])
 #        create a dbus adaptor (header and implementation file) from the xml file
 #        describing the interface, and add it to the list of sources. The adaptor
 #        forwards the calls to a parent class, defined in parentheader and named
 #        parentclassname. The name of the generated files will be
-#        <basename>adaptor.{cpp,h} where basename is the basename of the xml file.
+#        <basename>adaptor.{cpp,h} where basename defaults to the basename of the xml file.
+#        If <classname> is provided, then it will be used as the classname of the
+#        adaptor itself.
 #
-#  macro QT4_GENERATE_DBUS_INTERFACE( header [interfacename] )
+#  macro QT4_GENERATE_DBUS_INTERFACE( header [interfacename] OPTIONS ...)
 #        generate the xml interface file from the given header.
 #        If the optional argument interfacename is omitted, the name of the 
 #        interface file is constructed from the basename of the header with
 #        the suffix .xml appended.
+#        Options may be given to uic, such as those found when executing "qdbuscpp2xml --help"
 #
 #  QT_FOUND         If false, don't try to use Qt.
 #  QT4_FOUND        If false, don't try to use Qt 4.
@@@@ -213,13 +232,34 @@@@
 # (They make no sense in Qt4)
 #  QT_QT_LIBRARY        Qt-Library is now split
 
+if (QT4_QMAKE_FOUND)
+   # Check already done in this cmake run, nothing more to do
+
+else (QT4_QMAKE_FOUND)
+
+# check that QT_NO_DEBUG is defined for release configurations
+MACRO(QT_CHECK_FLAG_EXISTS FLAG VAR DOC)
+  IF(NOT ${VAR} MATCHES "${FLAG}")
+    SET(${VAR} "${${VAR}} ${FLAG}" 
+      CACHE STRING "Flags used by the compiler during ${DOC} builds." FORCE)
+  ENDIF(NOT ${VAR} MATCHES "${FLAG}")
+ENDMACRO(QT_CHECK_FLAG_EXISTS FLAG VAR)
+QT_CHECK_FLAG_EXISTS(-DQT_NO_DEBUG CMAKE_CXX_FLAGS_RELWITHDEBINFO "Release with Debug Info")
+QT_CHECK_FLAG_EXISTS(-DQT_NO_DEBUG CMAKE_CXX_FLAGS_RELEASE "release")
+QT_CHECK_FLAG_EXISTS(-DQT_NO_DEBUG CMAKE_CXX_FLAGS_MINSIZEREL "release minsize")
+
 INCLUDE(CheckSymbolExists)
 INCLUDE(MacroAddFileDependencies)
+INCLUDE(MacroPushRequiredVars)
 
 SET(QT_USE_FILE ${CMAKE_ROOT}/Modules/UseQt4.cmake)
 
 SET( QT_DEFINITIONS "")
 
+IF (WIN32)
+  SET(QT_DEFINITIONS -DQT_DLL)
+ENDIF(WIN32)
+
 SET(QT4_INSTALLED_VERSION_TOO_OLD FALSE)
 
 #  macro for asking qmake to process pro files
@@@@ -250,7 +290,7 @@@@ ENDMACRO(QT_QUERY_QMAKE)
 
 GET_FILENAME_COMPONENT(qt_install_version "[HKEY_CURRENT_USER\\Software\\trolltech\\Versions;DefaultQtVersion]" NAME)
d6 9
a14 2
-FIND_PROGRAM(QT_QMAKE_EXECUTABLE NAMES qmake qmake4 qmake-qt4 PATHS
+FIND_PROGRAM(QT_QMAKE_EXECUTABLE NAMES qmake4 qmake qmake4 qmake-qt4 PATHS
d18 28
a45 81
@@@@ -322,6 +362,12 @@@@ ENDIF (QT_QMAKE_EXECUTABLE)
 
 IF (QT4_QMAKE_FOUND)
 
+  if (WIN32)
+    # get qt install dir 
+    get_filename_component(_DIR ${QT_QMAKE_EXECUTABLE} PATH )
+    get_filename_component(QT_INSTALL_DIR ${_DIR} PATH )
+  endif (WIN32)
+
   # ask qmake for the library dir
   # Set QT_LIBRARY_DIR
   IF (NOT QT_LIBRARY_DIR)
@@@@ -424,9 +470,8 @@@@ IF (QT4_QMAKE_FOUND)
   # Find out what window system we're using
   #
   #############################################
-  # Save required variable
-  SET(CMAKE_REQUIRED_INCLUDES_SAVE ${CMAKE_REQUIRED_INCLUDES})
-  SET(CMAKE_REQUIRED_FLAGS_SAVE    ${CMAKE_REQUIRED_FLAGS})
+  # Save required includes and required_flags variables
+  macro_push_required_vars()
   # Add QT_INCLUDE_DIR to CMAKE_REQUIRED_INCLUDES
   SET(CMAKE_REQUIRED_INCLUDES "${CMAKE_REQUIRED_INCLUDES};${QT_INCLUDE_DIR}")
   # On Mac OS X when Qt has framework support, also add the framework path
@@@@ -447,8 +492,8 @@@@ IF (QT4_QMAKE_FOUND)
   ENDIF (QT_QTCOPY_REQUIRED)
 
   # Restore CMAKE_REQUIRED_INCLUDES and CMAKE_REQUIRED_FLAGS variables
-  SET(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES_SAVE})
-  SET(CMAKE_REQUIRED_FLAGS    ${CMAKE_REQUIRED_FLAGS_SAVE})
+  # Restore CMAKE_REQUIRED_INCLUDES+CMAKE_REQUIRED_FLAGS variables
+  macro_pop_required_vars()
   #
   #############################################
 
@@@@ -836,20 +881,21 @@@@ IF (QT4_QMAKE_FOUND)
   #
   ######################################
 
-  MACRO (QT4_EXTRACT_OPTIONS qt4_files qt4_options)
-    SET(${qt4_files} ${ARGN})
-    SET(${qt4_options})
-    LIST(FIND ${qt4_files} OPTIONS _index)
-    IF(NOT _index EQUAL -1)
-      LIST(REMOVE_ITEM ${qt4_files} OPTIONS)
-      LIST(LENGTH ${qt4_files} _length)
-      WHILE(_length GREATER ${_index})
-        LIST(GET ${qt4_files} ${_index} _opt_value)
-        LIST(REMOVE_AT ${qt4_files} ${_index})
-        LIST(APPEND ${qt4_options} ${_opt_value})
-        LIST(LENGTH ${qt4_files} _length)
-      ENDWHILE(_length GREATER ${_index})
-    ENDIF(NOT _index EQUAL -1)
+  MACRO (QT4_EXTRACT_OPTIONS _qt4_files _qt4_options)
+    SET(${_qt4_files} ${ARGN})
+    SET(${_qt4_options})
+    SET(_QT4_DOING_OPTIONS FALSE)
+    FOREACH(_currentArg ${ARGN})
+       IF ("${_currentArg}" STREQUAL "OPTIONS")
+          SET(_QT4_DOING_OPTIONS TRUE)
+       ELSE ("${_currentArg}" STREQUAL "OPTIONS")
+          IF(_QT4_DOING_OPTIONS)
+             LIST(APPEND ${_qt4_options} "${_currentArg}")
+          ELSE(_QT4_DOING_OPTIONS)
+             LIST(APPEND ${_qt4_files} "${_currentArg}")
+          ENDIF(_QT4_DOING_OPTIONS)
+       ENDIF ("${_currentArg}" STREQUAL "OPTIONS")
+    ENDFOREACH(_currentArg)
   ENDMACRO (QT4_EXTRACT_OPTIONS)
 
   MACRO (QT4_GET_MOC_INC_DIRS _moc_INC_DIRS)
@@@@ -881,6 +927,7 @@@@ IF (QT4_QMAKE_FOUND)
 
 
   # QT4_WRAP_CPP(outfiles inputfile ... )
+  # TODO  perhaps add support for -D, -U and other minor options
 
   MACRO (QT4_WRAP_CPP outfiles )
     # get include dirs
@@@@ -922,6 +969,7 @@@@ IF (QT4_QMAKE_FOUND)
d47 5
a51 46
 
   # QT4_ADD_RESOURCES(outfiles inputfile ... )
+  # TODO  perhaps consider adding support for compression and root options to rcc
 
   MACRO (QT4_ADD_RESOURCES outfiles )
     QT4_EXTRACT_OPTIONS(rcc_files rcc_options ${ARGN})
@@@@ -960,8 +1008,20 @@@@ IF (QT4_QMAKE_FOUND)
     SET(_impl   ${CMAKE_CURRENT_BINARY_DIR}/${_basename}.cpp)
     SET(_moc    ${CMAKE_CURRENT_BINARY_DIR}/${_basename}.moc)
   
+    GET_SOURCE_FILE_PROPERTY(_nonamespace ${_interface} NO_NAMESPACE)
+    IF ( _nonamespace )
+        SET(_params -N -m)
+    ELSE ( _nonamespace )
+        SET(_params -m)
+    ENDIF ( _nonamespace )
+
+    GET_SOURCE_FILE_PROPERTY(_include ${_interface} INCLUDE)
+    IF ( _include )
+        SET(_params ${_params} -i ${_include})
+    ENDIF ( _include )
+
     ADD_CUSTOM_COMMAND(OUTPUT ${_impl} ${_header}
-        COMMAND ${QT_DBUSXML2CPP_EXECUTABLE} -m -p ${_basename} ${_infile}
+        COMMAND ${QT_DBUSXML2CPP_EXECUTABLE} ${_params} -p ${_basename} ${_infile}
         DEPENDS ${_infile})
   
     SET_SOURCE_FILES_PROPERTIES(${_impl} PROPERTIES SKIP_AUTOMOC TRUE)
@@@@ -985,7 +1045,9 @@@@ IF (QT4_QMAKE_FOUND)
   ENDMACRO(QT4_ADD_DBUS_INTERFACES)
   
   
-  MACRO(QT4_GENERATE_DBUS_INTERFACE _header) # _customName )
+  MACRO(QT4_GENERATE_DBUS_INTERFACE _header) # _customName OPTIONS -some -options )
+    QT4_EXTRACT_OPTIONS(_customName _qt4_dbus_options ${ARGN})
+
     SET(_customName "${ARGV1}")
     GET_FILENAME_COMPONENT(_in_file ${_header} ABSOLUTE)
     GET_FILENAME_COMPONENT(_basename ${_header} NAME_WE)
@@@@ -997,13 +1059,13 @@@@ IF (QT4_QMAKE_FOUND)
     ENDIF (_customName)
   
     ADD_CUSTOM_COMMAND(OUTPUT ${_target}
-        COMMAND ${QT_DBUSCPP2XML_EXECUTABLE} ${_in_file} > ${_target}
+        COMMAND ${QT_DBUSCPP2XML_EXECUTABLE} ${_qt4_dbus_options} ${_in_file} > ${_target}
         DEPENDS ${_in_file}
a52 138
   ENDMACRO(QT4_GENERATE_DBUS_INTERFACE)
   
   
-  MACRO(QT4_ADD_DBUS_ADAPTOR _sources _xml_file _include _parentClass) # _optionalBasename )
+  MACRO(QT4_ADD_DBUS_ADAPTOR _sources _xml_file _include _parentClass) # _optionalBasename _optionalClassName)
     GET_FILENAME_COMPONENT(_infile ${_xml_file} ABSOLUTE)
     
     SET(_optionalBasename "${ARGV4}")
@@@@ -1094,12 +1156,27 @@@@ IF (QT4_QMAKE_FOUND)
   IF( QT_LIBRARY_DIR AND QT_INCLUDE_DIR AND QT_MOC_EXECUTABLE AND QT_UIC_EXECUTABLE AND QT_RCC_EXECUTABLE)
     SET( QT4_FOUND "YES" )
     IF( NOT Qt4_FIND_QUIETLY)
-      MESSAGE(STATUS "Found Qt-Version ${QTVERSION}")
+      MESSAGE(STATUS "Found Qt-Version ${QTVERSION} (using ${QT_QMAKE_EXECUTABLE})")
     ENDIF( NOT Qt4_FIND_QUIETLY)
   ELSE( QT_LIBRARY_DIR AND QT_INCLUDE_DIR AND QT_MOC_EXECUTABLE AND QT_UIC_EXECUTABLE AND QT_RCC_EXECUTABLE)
     SET( QT4_FOUND "NO")
     SET(QT_QMAKE_EXECUTABLE "${QT_QMAKE_EXECUTABLE}-NOTFOUND" CACHE FILEPATH "Invalid qmake found" FORCE)
     IF( Qt4_FIND_REQUIRED)
+      IF ( NOT QT_LIBRARY_DIR )
+        MESSAGE(STATUS "Qt libraries NOT found!")
+      ENDIF(NOT QT_LIBRARY_DIR )
+      IF ( NOT QT_INCLUDE_DIR )
+        MESSAGE(STATUS "Qt includes NOT found!")
+      ENDIF( NOT QT_INCLUDE_DIR )
+      IF ( NOT QT_MOC_EXECUTABLE )
+        MESSAGE(STATUS "Qt's moc NOT found!")
+      ENDIF( NOT QT_MOC_EXECUTABLE )
+      IF ( NOT QT_UIC_EXECUTABLE )
+        MESSAGE(STATUS "Qt's uic NOT found!")
+      ENDIF( NOT QT_UIC_EXECUTABLE )
+      IF ( NOT QT_RCC_EXECUTABLE )
+        MESSAGE(STATUS "Qt's rcc NOT found!")
+      ENDIF( NOT QT_RCC_EXECUTABLE )
       MESSAGE( FATAL_ERROR "Qt libraries, includes, moc, uic or/and rcc NOT found!")
     ENDIF( Qt4_FIND_REQUIRED)
   ENDIF( QT_LIBRARY_DIR AND QT_INCLUDE_DIR AND QT_MOC_EXECUTABLE AND QT_UIC_EXECUTABLE AND  QT_RCC_EXECUTABLE)
@@@@ -1108,9 +1185,19 @@@@ IF (QT4_QMAKE_FOUND)
 
   #######################################
   #
-  #       Qt configuration
+  #       System dependent settings  
   #
   #######################################
+  # for unix add X11 stuff
+  IF(UNIX)
+    # on OS X X11 may not be required
+    IF (Q_WS_X11)
+      FIND_PACKAGE(X11 REQUIRED)
+    ENDIF (Q_WS_X11)
+    FIND_PACKAGE(Threads)
+    SET(QT_QTCORE_LIBRARY ${QT_QTCORE_LIBRARY} ${CMAKE_THREAD_LIBS_INIT})
+  ENDIF(UNIX)
+
   IF(EXISTS "${QT_MKSPECS_DIR}/qconfig.pri")
     FILE(READ ${QT_MKSPECS_DIR}/qconfig.pri _qconfig_FILE_contents)
     STRING(REGEX MATCH "QT_CONFIG[^\n]+" QT_QCONFIG ${_qconfig_FILE_contents})
@@@@ -1122,14 +1209,9 @@@@ IF (QT4_QMAKE_FOUND)
   ENDIF("${QT_EDITION}" MATCHES "DesktopLight")
 
   
-  ###############################################
-  #
-  #       configuration/system dependent settings  
-  #
-  ###############################################
-
   SET(QT_GUI_LIB_DEPENDENCIES "")
   SET(QT_CORE_LIB_DEPENDENCIES "")
+  SET(QT_DBUS_LIB_DEPENDENCIES "")
   
   # shared build needs -DQT_SHARED
   IF(NOT QT_CONFIG MATCHES "static")
@@@@ -1143,8 +1225,44 @@@@ IF (QT4_QMAKE_FOUND)
   IF(QT_QCONFIG MATCHES "system-png")
     FIND_LIBRARY(QT_PNG_LIBRARY NAMES png)
     SET(QT_GUI_LIB_DEPENDENCIES ${QT_GUI_LIB_DEPENDENCIES} ${QT_PNG_LIBRARY})
+      MESSAGE(STATUS "add png ${QT_GUI_LIB_DEPENDENCIES}")
     MARK_AS_ADVANCED(QT_PNG_LIBRARY)
+    FIND_PATH(QT_PNG_INCLUDE_DIR png.h
+    /usr/local/include
+    /usr/include
+    /usr/local/include/libpng             # OpenBSD
+    )
+    MARK_AS_ADVANCED(QT_PNG_INCLUDE_DIR)
+    SET(QT_INCLUDES ${QT_INCLUDES} ${QT_PNG_INCLUDE_DIR})
+
   ENDIF(QT_QCONFIG MATCHES "system-png")
+
+  # for X11, get X11 library directory
+  IF(Q_WS_X11)
+    SET(QMAKE_LIBDIR_X11 "/usr/X11R6/lib")
+  ENDIF(Q_WS_X11)
+
+  IF(QT_QCONFIG MATCHES "glib")
+    FIND_LIBRARY(QT_GTHREAD_LIBRARY NAMES gthread-2.0)
+    FIND_LIBRARY(QT_GLIB_LIBRARY NAMES glib-2.0)
+    MARK_AS_ADVANCED(QT_GLIB_LIBRARY)
+    MARK_AS_ADVANCED(QT_GTHREAD_LIBRARY)
+    SET(QT_GUI_LIB_DEPENDENCIES ${QT_GUI_LIB_DEPENDENCIES} ${QT_GTHREAD_LIBRARY} ${QT_GLIB_LIBRARY})
+  ENDIF(QT_QCONFIG MATCHES "glib")
+
+  IF(QT_QCONFIG MATCHES "gnu-libiconv")
+    FIND_LIBRARY(QT_LIBINTL NAMES intl)
+    FIND_LIBRARY(QT_LIBICONV NAMES iconv)
+    MARK_AS_ADVANCED(QT_LIBICONV)
+    MARK_AS_ADVANCED(QT_LIBINTL)
+    SET(QT_CORE_LIB_DEPENDENCIES ${QT_CORE_LIB_DEPENDENCIES} ${QT_LIBICONV} ${QT_LIBICONV})
+  ENDIF(QT_QCONFIG MATCHES "gnu-libiconv")
+
+  IF(QT_QCONFIG MATCHES "qdbus")
+    FIND_LIBRARY(QT_DBUS NAMES dbus-1)
+    MARK_AS_ADVANCED(QT_DBUS)
+    SET(QT_DBUS_LIB_DEPENDENCIES ${QT_DBUS_LIB_DEPENDENCIES} ${QT_DBUS})
+  ENDIF(QT_QCONFIG MATCHES "qdbus")
   
   # for X11, get X11 library directory
   IF(Q_WS_X11)
@@@@ -1281,6 +1399,11 @@@@ IF (QT4_QMAKE_FOUND)
     SET(QT_CORE_LIB_DEPENDENCIES ${QT_CORE_LIB_DEPENDENCIES} "-framework ApplicationServices")
   ENDIF(Q_WS_MAC)
 
+
+# XXX OpenBSD
+    SET(QT_QTCORE_LIBRARY ${QT_QTCORE_LIBRARY} ${QT_CORE_LIB_DEPENDENCIES})
+    SET(QT_QTGUI_LIBRARY ${QT_QTGUI_LIBRARY} ${QT_QTCORE_LIBRARY} ${QT_GUI_LIB_DEPENDENCIES})
+
   #######################################
   #
   #       compatibility settings 
@@@@ -1307,5 +1430,6 @@@@ ELSE(QT4_QMAKE_FOUND)
       ENDIF(QT4_INSTALLED_VERSION_TOO_OLD AND NOT Qt4_FIND_QUIETLY)
    ENDIF(Qt4_FIND_REQUIRED)
  
+ENDIF (QT4_QMAKE_FOUND)
 ENDIF (QT4_QMAKE_FOUND)
 
@


1.5
log
@minor update to 2.4.8 (all tests pass now)
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.4 2007/08/25 08:35:20 espie Exp $
d3 94
a96 2
+++ Modules/FindQt4.cmake	Sat Jan 26 20:48:28 2008
@@@@ -250,7 +250,7 @@@@ ENDMACRO(QT_QUERY_QMAKE)
d105 82
a186 2
@@@@ -1129,7 +1129,8 @@@@ IF (QT4_QMAKE_FOUND)
   ###############################################
d188 114
d303 1
a303 2
-  SET(QT_CORE_LIB_DEPENDENCIES "")
+  SET(QT_CORE_LIB_DEPENDENCIES "-pthread")
d308 2
a309 1
@@@@ -1144,7 +1145,37 @@@@ IF (QT4_QMAKE_FOUND)
d312 1
d324 5
d353 19
@


1.4
log
@minor update cmake 2.4.7
@
text
@d1 4
a4 5
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.3 2007/06/09 09:09:44 espie Exp $
--- Modules/FindQt4.cmake.orig	Mon Jul 16 23:12:30 2007
+++ Modules/FindQt4.cmake	Sun Aug 12 16:02:01 2007
@@@@ -174,7 +174,7 @@@@ SET(QT_USE_FILE ${CMAKE_ROOT}/Modules/UseQt4.cmake)
 SET( QT_DEFINITIONS "")
d6 1
d8 2
a9 2
-FIND_PROGRAM(QT_QMAKE_EXECUTABLE NAMES qmake qmake-qt4 PATHS
+FIND_PROGRAM(QT_QMAKE_EXECUTABLE NAMES qmake4 qmake qmake-qt4 PATHS
d12 2
a13 2
   $ENV{QTDIR}/bin
@@@@ -884,7 +884,8 @@@@ IF (QT4_QMAKE_FOUND)
d23 1
a23 1
@@@@ -899,7 +900,37 @@@@ IF (QT4_QMAKE_FOUND)
@


1.3
log
@allow cmake to proceed in color unless you `explicitly' ask it otherwise
(setting BATCH, for instance).

Synch FindQt4 with some of qt 4.3.0 stuff. Need to be fully synched with
qt 4.3.0 anyways...
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.2 2007/04/25 14:56:13 espie Exp $
--- Modules/FindQt4.cmake.orig	Wed Jan 10 18:59:12 2007
+++ Modules/FindQt4.cmake	Sat Jun  9 11:07:53 2007
d13 1
a13 1
@@@@ -882,7 +882,8 @@@@ IF (QT4_QMAKE_FOUND)
d23 1
a23 1
@@@@ -897,7 +898,37 @@@@ IF (QT4_QMAKE_FOUND)
@


1.2
log
@list -pthread as a dependency of qt4core, so that stuff will link in a simpler
way.
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_FindQt4_cmake,v 1.1 2007/03/20 11:23:10 espie Exp $
d3 1
a3 1
+++ Modules/FindQt4.cmake	Wed Apr 25 16:43:46 2007
d13 1
a13 1
@@@@ -882,7 +882,7 @@@@ IF (QT4_QMAKE_FOUND)
d19 1
d23 38
@


1.1
log
@find qmake4, not qmake...
regen other patches with new diff.
@
text
@d1 3
a3 3
$OpenBSD$
--- Modules/FindQt4.cmake.orig	Tue Mar 20 12:20:58 2007
+++ Modules/FindQt4.cmake	Tue Mar 20 12:21:06 2007
d13 9
@

