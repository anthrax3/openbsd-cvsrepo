head	1.30;
access;
symbols
	OPENBSD_6_0:1.28.0.2
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.27.0.2
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.25.0.4
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.24.0.2
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.20.0.4
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.2
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.16.0.2
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.2
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.3.0.10
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.8
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.6
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@# @;


1.30
date	2016.11.28.09.15.13;	author dcoppa;	state Exp;
branches;
next	1.29;
commitid	jOocuc05F30hpQ6W;

1.29
date	2016.08.08.07.44.48;	author dcoppa;	state Exp;
branches;
next	1.28;
commitid	r4e0Be8ugQYraWeW;

1.28
date	2016.04.29.10.34.33;	author dcoppa;	state Exp;
branches;
next	1.27;
commitid	z7Jo8sWkfT7EmMLb;

1.27
date	2015.12.08.17.18.59;	author dcoppa;	state Exp;
branches;
next	1.26;
commitid	AX6ONjs8OJ4jyAD6;

1.26
date	2015.09.03.07.09.25;	author dcoppa;	state Exp;
branches;
next	1.25;
commitid	KGLL6yBcZn2xZciC;

1.25
date	2015.03.26.07.10.02;	author dcoppa;	state Exp;
branches;
next	1.24;
commitid	RC163bs6emik8Gf9;

1.24
date	2015.01.23.18.01.09;	author dcoppa;	state Exp;
branches;
next	1.23;
commitid	AasrIjjpfxr6UqVY;

1.23
date	2014.12.31.11.06.02;	author dcoppa;	state Exp;
branches;
next	1.22;
commitid	q283NDlM4qiVneVU;

1.22
date	2014.10.03.10.11.45;	author dcoppa;	state Exp;
branches;
next	1.21;
commitid	2kN0tj2KqHFNY4hg;

1.21
date	2014.09.11.10.24.38;	author dcoppa;	state Exp;
branches;
next	1.20;
commitid	m0ESeGbhnaGm45G1;

1.20
date	2013.11.11.07.23.32;	author dcoppa;	state Exp;
branches;
next	1.19;

1.19
date	2013.10.14.12.58.04;	author dcoppa;	state Exp;
branches;
next	1.18;

1.18
date	2013.06.06.12.47.06;	author dcoppa;	state Exp;
branches;
next	1.17;

1.17
date	2013.05.13.15.02.26;	author dcoppa;	state Exp;
branches;
next	1.16;

1.16
date	2012.11.15.08.43.25;	author dcoppa;	state Exp;
branches;
next	1.15;

1.15
date	2012.11.11.17.13.32;	author dcoppa;	state Exp;
branches;
next	1.14;

1.14
date	2012.10.08.07.23.09;	author dcoppa;	state Exp;
branches;
next	1.13;

1.13
date	2012.08.31.12.28.31;	author dcoppa;	state Exp;
branches;
next	1.12;

1.12
date	2012.05.07.07.06.20;	author dcoppa;	state Exp;
branches;
next	1.11;

1.11
date	2012.01.07.22.14.51;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2011.10.14.17.22.10;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2011.09.20.11.32.36;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2011.03.13.18.23.02;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2010.11.15.11.39.09;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2010.07.28.20.34.22;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.12.19.19.30;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.28.20.21.48;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2008.01.26.21.26.32;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.25.08.35.20;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.26.21.27.44;	author espie;	state Exp;
branches;
next	;


desc
@@


1.30
log
@
Update to CMake-3.7.0

Thanks to naddy@@ who ran a bulk build with it
@
text
@$OpenBSD: patch-Source_cmTarget_cxx,v 1.29 2016/08/08 07:44:48 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Fri Nov 11 15:37:14 2016
+++ Source/cmTarget.cxx	Fri Nov 25 22:31:45 2016
@@@@ -104,7 +104,7 @@@@ cmTarget::cmTarget(std::string const& name, cmState::T
     this->SetPropertyDefault("ANDROID_ANT_ADDITIONAL_OPTIONS", CM_NULLPTR);
     this->SetPropertyDefault("INSTALL_NAME_DIR", CM_NULLPTR);
     this->SetPropertyDefault("INSTALL_RPATH", "");
-    this->SetPropertyDefault("INSTALL_RPATH_USE_LINK_PATH", "OFF");
+    this->SetPropertyDefault("INSTALL_RPATH_USE_LINK_PATH", "ON");
     this->SetPropertyDefault("SKIP_BUILD_RPATH", "OFF");
     this->SetPropertyDefault("BUILD_WITH_INSTALL_RPATH", "OFF");
     this->SetPropertyDefault("ARCHIVE_OUTPUT_DIRECTORY", CM_NULLPTR);
@


1.29
log
@
Update to CMake-3.6.1.

Tested in a bulk build by naddy@@: the one and only fallout has been
fixed.
@
text
@d1 6
a6 6
$OpenBSD: patch-Source_cmTarget_cxx,v 1.28 2016/04/29 10:34:33 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Fri Jul 22 15:50:22 2016
+++ Source/cmTarget.cxx	Thu Aug  4 11:06:08 2016
@@@@ -111,7 +111,7 @@@@ void cmTarget::SetMakefile(cmMakefile* mf)
     this->SetPropertyDefault("ANDROID_ANT_ADDITIONAL_OPTIONS", 0);
     this->SetPropertyDefault("INSTALL_NAME_DIR", 0);
d12 1
a12 1
     this->SetPropertyDefault("ARCHIVE_OUTPUT_DIRECTORY", 0);
@


1.28
log
@
Update to CMake-3.5.2

ok sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.27 2015/12/08 17:18:59 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Fri Apr 15 15:41:22 2016
+++ Source/cmTarget.cxx	Wed Apr 27 11:03:28 2016
@@@@ -120,7 +120,7 @@@@ void cmTarget::SetMakefile(cmMakefile* mf)
@


1.27
log
@
Update to cmake-3.4.0

tested in a bulk build by naddy@@
kde4-related failures proactively fixed by zhuk@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.26 2015/09/03 07:09:25 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Thu Nov 12 16:39:51 2015
+++ Source/cmTarget.cxx	Mon Nov 23 16:11:38 2015
@@@@ -214,7 +214,7 @@@@ void cmTarget::SetMakefile(cmMakefile* mf)
a12 24
@@@@ -2736,7 +2736,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
   if(version)
     {
     vName += ".";
+#if defined(__OpenBSD__)
+    // OpenBSD-style versioning for shared libraries.
+    // Convert libname.so.X.X.X to libname.so.X.X
+    int j = 0;
+    for (int i = 0; i < (int)strlen(version); i++)
+      {
+      if (version[i] == '.')
+        {
+        j++;
+        if (j == 2)
+          break;
+        }
+      vName += version[i];
+      }
+#else
     vName += version;
+#endif
     }
   vName += this->IsApple? suffix : std::string();
 }
@


1.26
log
@
Update to CMake-3.3.1

No fallout in a bulk build
OK ajacoutot@@
@
text
@d1 5
a5 5
$OpenBSD: patch-Source_cmTarget_cxx,v 1.25 2015/03/26 07:10:02 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Thu Aug 13 16:57:00 2015
+++ Source/cmTarget.cxx	Mon Aug 17 15:39:13 2015
@@@@ -309,7 +309,7 @@@@ void cmTarget::SetMakefile(cmMakefile* mf)
     this->SetPropertyDefault("ANDROID_API_MIN", 0);
d13 1
a13 86
@@@@ -3597,12 +3597,16 @@@@ std::string cmTarget::GetCompilePDBPath(const std::str
 //----------------------------------------------------------------------------
 bool cmTarget::HasSOName(const std::string& config) const
 {
+#if !defined(__OpenBSD__)
   // soname is supported only for shared libraries and modules,
   // and then only when the platform supports an soname flag.
   return ((this->GetType() == cmTarget::SHARED_LIBRARY ||
            this->GetType() == cmTarget::MODULE_LIBRARY) &&
           !this->GetPropertyAsBool("NO_SONAME") &&
           this->Makefile->GetSONameFlag(this->GetLinkerLanguage(config)));
+#else
+  return false;
+#endif
 }
 
 //----------------------------------------------------------------------------
@@@@ -4068,9 +4072,14 @@@@ void cmTarget::GetLibraryNames(std::string& name,
   // Check for library version properties.
   const char* version = this->GetProperty("VERSION");
   const char* soversion = this->GetProperty("SOVERSION");
+#if defined(__OpenBSD__)
+  if(this->GetType() != cmTarget::SHARED_LIBRARY &&
+     this->GetType() != cmTarget::MODULE_LIBRARY)
+#else
   if(!this->HasSOName(config) ||
      this->Makefile->IsOn("CMAKE_PLATFORM_NO_VERSIONED_SONAME") ||
      this->IsFrameworkOnApple())
+#endif
     {
     // Versioning is supported only for shared libraries and modules,
     // and then only when the platform supports an soname flag.
@@@@ -4098,6 +4107,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
   // The library name.
   name = prefix+base+suffix;
 
+#if defined(__OpenBSD__)
+  // Override shared library version using LIBxxx_VERSION
+  // environment variable. Needed for OpenBSD ports system.
+  if(this->GetType() == cmTarget::SHARED_LIBRARY ||
+     this->GetType() == cmTarget::MODULE_LIBRARY)
+    {
+    std::string env_name = "LIB" + base + "_VERSION";
+    char *env_vers_cstr = getenv(env_name.c_str());
+
+    if (env_vers_cstr && strlen(env_vers_cstr) > 0) {
+      // This means an override is present.
+      std::string env_vers = std::string(env_vers_cstr);
+
+      size_t first = env_vers.find_first_of(".");
+      size_t last = env_vers.find_first_of(".");
+
+      if ((first != last) || (first == std::string::npos)) {
+        std::string msg = "Bad ";
+        msg += env_name;
+        msg += " specification: ";
+        msg += env_vers;
+        this->Makefile->IssueMessage(cmake::FATAL_ERROR,
+                                     msg.c_str());
+      } else {
+        version = env_vers_cstr;
+      }
+    }
+  }
+#endif
+
   if(this->IsFrameworkOnApple())
     {
     realName = prefix;
@@@@ -4109,9 +4148,15 @@@@ void cmTarget::GetLibraryNames(std::string& name,
     }
   else
     {
+#if !defined(__OpenBSD__)
     // The library's soname.
     this->ComputeVersionedName(soName, prefix, base, suffix,
                                name, soversion);
+#else
+    // The library's soname.
+    this->ComputeVersionedName(soName, prefix, base, suffix,
+                               name, version);
+#endif
     // The library's real name on disk.
     this->ComputeVersionedName(realName, prefix, base, suffix,
                                name, version);
@@@@ -4144,7 +4189,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.25
log
@
Update to CMake-3.2.1

Tested in a bulk build by landry@@
OK landry@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.24 2015/01/23 18:01:09 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Tue Mar 10 09:38:44 2015
+++ Source/cmTarget.cxx	Wed Mar 18 06:24:00 2015
@@@@ -322,7 +322,7 @@@@ void cmTarget::SetMakefile(cmMakefile* mf)
d13 1
a13 1
@@@@ -3610,12 +3610,16 @@@@ std::string cmTarget::GetCompilePDBPath(const std::str
d30 1
a30 1
@@@@ -4081,9 +4085,14 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d45 1
a45 1
@@@@ -4111,6 +4120,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d82 1
a82 1
@@@@ -4122,9 +4161,15 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d98 1
a98 1
@@@@ -4157,7 +4202,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.24
log
@
Maintenance update to cmake-3.1.1
@
text
@d1 5
a5 5
$OpenBSD: patch-Source_cmTarget_cxx,v 1.23 2014/12/31 11:06:02 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Wed Jan 21 08:10:26 2015
+++ Source/cmTarget.cxx	Fri Jan 23 11:10:11 2015
@@@@ -327,7 +327,7 @@@@ void cmTarget::SetMakefile(cmMakefile* mf)
     this->SetPropertyDefault("ANDROID_API", 0);
d13 1
a13 1
@@@@ -3641,12 +3641,16 @@@@ std::string cmTarget::GetCompilePDBPath(const std::str
d30 1
a30 1
@@@@ -4119,9 +4123,14 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d45 1
a45 1
@@@@ -4149,6 +4158,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d82 1
a82 1
@@@@ -4160,9 +4199,15 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d98 1
a98 1
@@@@ -4195,7 +4240,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.23
log
@
Update to cmake-3.1.0

Bulk build by landry@@
KDE-related fixes by zhuk@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Source_cmTarget_cxx,v 1.22 2014/10/03 10:11:45 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Mon Dec 15 14:07:43 2014
+++ Source/cmTarget.cxx	Thu Dec 18 05:37:12 2014
d13 1
a13 1
@@@@ -3640,12 +3640,16 @@@@ std::string cmTarget::GetCompilePDBPath(const std::str
d30 1
a30 1
@@@@ -4118,9 +4122,14 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d45 1
a45 1
@@@@ -4148,6 +4157,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d82 1
a82 1
@@@@ -4159,9 +4198,15 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d98 1
a98 1
@@@@ -4194,7 +4239,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.22
log
@
Do not register full paths to shared libraries in the ELF "NEEDED"
sections

tested in a bulk build by landry@@

OK landry@@, zhuk@@
@
text
@d1 5
a5 5
$OpenBSD: patch-Source_cmTarget_cxx,v 1.21 2014/09/11 10:24:38 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Thu Jul 31 17:03:57 2014
+++ Source/cmTarget.cxx	Wed Sep  3 08:10:09 2014
@@@@ -260,7 +260,7 @@@@ void cmTarget::SetMakefile(cmMakefile* mf)
     {
d13 1
a13 1
@@@@ -3183,6 +3183,7 @@@@ std::string cmTarget::GetPDBName(const char* config) c
d15 1
a15 1
 bool cmTarget::HasSOName(const char* config) const
d21 1
a21 1
@@@@ -3190,6 +3191,9 @@@@ bool cmTarget::HasSOName(const char* config) const
d23 1
a23 2
           this->Makefile->GetSONameFlag(this->GetLinkerLanguage(config,
                                                                 this)));
d30 1
a30 1
@@@@ -3658,8 +3662,13 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d39 1
d45 1
a45 1
@@@@ -3687,6 +3696,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d82 1
a82 1
@@@@ -3698,9 +3737,15 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d98 1
a98 1
@@@@ -3733,7 +3778,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.21
log
@
Update to cmake-3.0.1

Tested in a bulk build by landry@@
OK landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmTarget_cxx,v 1.20 2013/11/11 07:23:32 dcoppa Exp $
d4 9
@


1.20
log
@Bugfix update to cmake-2.8.12.1
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.19 2013/10/14 12:58:04 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Tue Nov  5 20:07:22 2013
+++ Source/cmTarget.cxx	Mon Nov 11 07:48:26 2013
@@@@ -4500,6 +4500,7 @@@@ std::string cmTarget::GetPDBName(const char* config)
d6 1
a6 1
 bool cmTarget::HasSOName(const char* config)
d12 1
a12 1
@@@@ -4507,6 +4508,9 @@@@ bool cmTarget::HasSOName(const char* config)
d22 1
a22 1
@@@@ -4931,8 +4935,13 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d36 1
a36 1
@@@@ -4960,6 +4969,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d73 1
a73 1
@@@@ -4971,9 +5010,15 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d89 1
a89 1
@@@@ -5006,7 +5051,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.19
log
@Update to cmake-2.8.12.
Tested in a bulk build by the usual suspects, Thanks!

ok espie@@, kili@@
ok zhuk@@ for kde4
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.18 2013/06/06 12:47:06 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Wed Oct  9 09:47:16 2013
+++ Source/cmTarget.cxx	Wed Oct  9 10:01:12 2013
@@@@ -4503,6 +4503,7 @@@@ std::string cmTarget::GetPDBName(const char* config)
d12 1
a12 1
@@@@ -4510,6 +4511,9 @@@@ bool cmTarget::HasSOName(const char* config)
d22 1
a22 1
@@@@ -4934,8 +4938,13 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d36 1
a36 1
@@@@ -4963,6 +4972,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d73 1
a73 1
@@@@ -4974,9 +5013,15 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d89 1
a89 1
@@@@ -5009,7 +5054,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.18
log
@Update to cmake-2.8.11.

Tested in a bulk build by landry@@
Tested with KDE4 by zhuk@@
OK zhuk@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.17 2013/05/13 15:02:26 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Wed May 15 19:38:13 2013
+++ Source/cmTarget.cxx	Tue May 28 17:15:30 2013
@@@@ -3772,6 +3772,7 @@@@ std::string cmTarget::GetPDBName(const char* config)
d12 1
a12 1
@@@@ -3779,6 +3780,9 @@@@ bool cmTarget::HasSOName(const char* config)
d22 1
a22 1
@@@@ -4102,8 +4106,13 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d36 1
a36 1
@@@@ -4131,9 +4140,43 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d41 1
a41 1
+  // Override shared library version using LIBxxx_VERSION 
d61 1
a61 1
+        this->Makefile->IssueMessage(cmake::FATAL_ERROR, 
d68 1
d70 11
a80 3
   // The library's soname.
   this->ComputeVersionedName(soName, prefix, base, suffix,
+                             name, version);
d82 3
a84 3
+  // The library's soname.
+  this->ComputeVersionedName(soName, prefix, base, suffix,
                              name, soversion);
d86 4
a89 4
 
   // The library's real name on disk.
   this->ComputeVersionedName(realName, prefix, base, suffix,
@@@@ -4166,7 +4209,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.17
log
@Fix for the problem sthen@@ reported some time ago: if a library is
not listed in SHARED_LIBS, it will be created with no version suffix.

It was a regression caused by my "build shared libraries without
soname" work, sorry.
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.16 2012/11/15 08:43:25 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Tue Nov 27 14:26:33 2012
+++ Source/cmTarget.cxx	Mon May 13 16:45:49 2013
@@@@ -3097,12 +3097,16 @@@@ std::string cmTarget::GetPDBName(const char* config)
d12 1
a12 1
            this->GetType() == cmTarget::MODULE_LIBRARY) &&
d14 2
a15 1
           this->Makefile->GetSONameFlag(this->GetLinkerLanguage(config)));
d22 1
a22 1
@@@@ -3426,8 +3430,13 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d36 1
a36 1
@@@@ -3455,9 +3464,43 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d80 1
a80 1
@@@@ -3490,7 +3533,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.16
log
@Update to cmake-2.8.10.1 (plus some fixes)

Thanks Vadim, landry@@

OK landry@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Source_cmTarget_cxx,v 1.15 2012/11/11 17:13:32 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Tue Nov  6 20:41:36 2012
+++ Source/cmTarget.cxx	Mon Nov 12 12:14:34 2012
d21 15
a35 1
@@@@ -3455,9 +3459,43 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d79 1
a79 1
@@@@ -3490,7 +3528,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.15
log
@Update to cmake-2.8.10.
Successfully gone through a bulk build.

Feedback landry@@, Vadim Zhukov, Amit Kulkarni
Bulk build and OK landry@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.14 2012/10/08 07:23:09 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Wed Oct 31 16:32:06 2012
+++ Source/cmTarget.cxx	Fri Nov  2 07:43:31 2012
@@@@ -3094,12 +3094,16 @@@@ std::string cmTarget::GetPDBName(const char* config)
d21 1
a21 1
@@@@ -3452,9 +3456,43 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d65 1
a65 1
@@@@ -3487,7 +3525,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.14
log
@CMake now creates shared libraries without soname.

Tested in a bulk build by landry@@
Feedback by nigel@@ and landry@@
OK landry@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.13 2012/08/31 12:28:31 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Thu Aug  9 20:15:19 2012
+++ Source/cmTarget.cxx	Mon Aug 27 15:07:12 2012
@@@@ -3022,12 +3022,16 @@@@ std::string cmTarget::GetPDBName(const char* config)
d21 1
a21 1
@@@@ -3380,9 +3384,43 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d65 1
a65 1
@@@@ -3415,7 +3453,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.13
log
@Update to cmake-2.8.9.

"There was no cmake fallout in the bulk on amd64" jasper@@
Also tested by Brad with a handful of CMake using ports
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmTarget_cxx,v 1.12 2012/05/07 07:06:20 dcoppa Exp $
d3 19
a21 2
+++ Source/cmTarget.cxx	Thu Aug 23 11:25:48 2012
@@@@ -3380,9 +3380,43 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d65 1
a65 1
@@@@ -3415,7 +3449,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.12
log
@Update to cmake-2.8.8

OK sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.11 2012/01/07 22:14:51 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Wed Apr 18 20:10:54 2012
+++ Source/cmTarget.cxx	Mon Apr 30 11:07:26 2012
@@@@ -3371,9 +3371,43 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d48 1
a48 1
@@@@ -3406,7 +3440,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.11
log
@Update to cmake-2.8.7.

Tested in a bulk build by naddy@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.10 2011/10/14 17:22:10 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Fri Dec 30 17:49:57 2011
+++ Source/cmTarget.cxx	Sat Jan  7 22:13:14 2012
@@@@ -3379,9 +3379,43 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d48 1
a48 1
@@@@ -3414,7 +3448,23 @@@@ void cmTarget::ComputeVersionedName(std::string& vName
@


1.10
log
@Update to cmake-2.8.6

Fixed FindRuby.cmake module (from Vadim Zhukov)

Fixed FindJava.cmake and FindJNI.cmake modules when cmake is used
outside of our ports tree (problem reported and fix tested by
pirofti@@)

Still "100% tests passed, 0 tests failed out of 197".

No fallout in a bulk build.

OK jasper@@
@
text
@d1 6
a6 6
$OpenBSD: patch-Source_cmTarget_cxx,v 1.9 2011/09/20 11:32:36 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Tue Oct  4 18:09:25 2011
+++ Source/cmTarget.cxx	Fri Oct  7 09:15:20 2011
@@@@ -3320,6 +3320,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
   std::string suffix;
   this->GetFullNameInternal(config, false, prefix, base, suffix);
d17 1
a17 1
+    if (env_vers_cstr != NULL) {
d32 1
a32 1
+        soversion = version = env_vers_cstr;
d36 8
a44 3
+
   // The library name.
   name = prefix+base+suffix;
d46 3
a48 1
@@@@ -3354,8 +3384,27 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d51 1
a51 1
     realName += ".";
d53 1
a53 1
+    // OpenBSD-style versioning scheme for shared libraries.
d56 1
a56 1
+    for (int i = 0; i < (int)strlen(version); i++) 
d58 1
a58 1
+      if (version[i] == '.') 
d60 2
a61 3
+        j++; 
+        if (j == 2) 
+          {
a62 1
+          }
d64 1
a64 1
+      realName += version[i];
a65 1
+    }
d67 2
a68 1
     realName += version;
d70 2
a71 4
+#endif
   else if(soversion)
     {
     realName += ".";
@


1.9
log
@Update to cmake-2.8.5

Went in a bulk without issues, ok landry@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.8 2011/03/13 18:23:02 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Fri Jul  8 14:21:47 2011
+++ Source/cmTarget.cxx	Fri Sep  9 09:49:49 2011
@@@@ -3276,6 +3276,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d41 1
a41 1
@@@@ -3310,8 +3340,27 @@@@ void cmTarget::GetLibraryNames(std::string& name,
@


1.8
log
@Update to cmake-2.8.4.
Tested in a bulk build by landry@@.
Lot of feedback from various people on ports@@: thanks!

OK landry@@, sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.7 2010/11/15 11:39:09 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Tue Feb 15 18:47:31 2011
+++ Source/cmTarget.cxx	Mon Mar  7 10:10:46 2011
@@@@ -3237,6 +3237,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d41 1
a41 1
@@@@ -3271,8 +3301,27 @@@@ void cmTarget::GetLibraryNames(std::string& name,
@


1.7
log
@Update to cmake-2.8.3

OK sthen@@, landry@@ (who also tested this in a bulk build)
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.6 2010/07/28 20:34:22 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Wed Nov  3 20:58:29 2010
+++ Source/cmTarget.cxx	Fri Nov 12 11:50:00 2010
@@@@ -3191,6 +3191,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d41 1
a41 1
@@@@ -3218,8 +3248,27 @@@@ void cmTarget::GetLibraryNames(std::string& name,
@


1.6
log
@We overwrite library version numbers using our LIBxxx_VERSION
environment variable, but we want to do it for shared libraries
only. Otherwise a static library gets created as
libfoo.a.${LIBfoo_VERSION}, which is wrong.
Bug reported and patch tested by Alexandr Shadchin <alexandr DOT
shadchin AT gmail DOT com>: thanks!

While here, reword/clarify some comments to better explain what my
patches do.
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.5 2010/07/12 19:19:30 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Mon Jun 28 17:15:59 2010
+++ Source/cmTarget.cxx	Wed Jul 28 21:12:36 2010
@@@@ -3164,6 +3164,36 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d11 2
a12 2
+  if(this->GetType() == cmTarget::SHARED_LIBRARY && 
+     this->Makefile->GetDefinition(sonameFlag.c_str()))
d41 1
a41 1
@@@@ -3191,8 +3221,27 @@@@ void cmTarget::GetLibraryNames(std::string& name,
@


1.5
log
@Fix a bug with shared libraries having OUTPUT_NAME in their target
properties.

Update to cmake-2.8.2.

While here, move to new-style LIB_DEPENDS/WANTLIB.

OK espie@@, landry@@, sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmTarget_cxx,v 1.4 2010/05/28 20:21:48 dcoppa Exp $
d3 2
a4 2
+++ Source/cmTarget.cxx	Mon Jul  5 15:59:34 2010
@@@@ -3164,6 +3164,34 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d9 7
a15 5
+  /* OpenBSD - LIBxxx_VERSION environment override.
+   * Needed for OpenBSD ports system.
+   */
+  std::string env_name = "LIB" + base + "_VERSION";
+  char *env_vers_cstr = getenv(env_name.c_str());
d17 3
a19 3
+  if (env_vers_cstr != NULL) {
+    // this means an override is present
+    std::string env_vers = std::string(env_vers_cstr);
d21 2
a22 2
+    size_t first = env_vers.find_first_of(".");
+    size_t last = env_vers.find_first_of(".");
d24 10
a33 10
+    if ((first != last) || (first == std::string::npos)) {
+      std::string msg = "Bad ";
+      msg += env_name;
+      msg += " specification: ";
+      msg += env_vers;
+      this->Makefile->IssueMessage(cmake::FATAL_ERROR, 
+                                   msg.c_str());
+    } else {
+      /* all OK, use OpenBSD override */
+      soversion = version = env_vers_cstr;
d41 1
a41 1
@@@@ -3191,8 +3219,26 @@@@ void cmTarget::GetLibraryNames(std::string& name,
d46 2
a47 1
+    // libname.so.X.X.X -> libname.so.X.X conversion
@


1.4
log
@Update to cmake 2.8.1 (I also take maintainership).

"This is good, commit." espie@@
@
text
@d1 8
a8 8
$OpenBSD$
--- Source/cmTarget.cxx.orig	Tue Apr  6 16:45:35 2010
+++ Source/cmTarget.cxx	Tue May 11 16:37:04 2010
@@@@ -3136,6 +3136,34 @@@@ void cmTarget::GetLibraryNames(std::string& name,
   // Check for library version properties.
   const char* version = this->GetProperty("VERSION");
   const char* soversion = this->GetProperty("SOVERSION");
+
d12 1
a12 1
+  std::string env_name = "LIB" + Name + "_VERSION";
d31 1
a31 2
+      soversion = env_vers_cstr;
+      version = env_vers_cstr;
d34 1
d36 4
a39 4
   if((this->GetType() != cmTarget::SHARED_LIBRARY &&
       this->GetType() != cmTarget::MODULE_LIBRARY) ||
      !this->Makefile->GetDefinition(sonameFlag.c_str()) ||
@@@@ -3186,8 +3214,26 @@@@ void cmTarget::GetLibraryNames(std::string& name,
@


1.3
log
@minor update to 2.4.8 (all tests pass now)
@
text
@d1 17
a17 13
$OpenBSD: patch-Source_cmTarget_cxx,v 1.2 2007/08/25 08:35:20 espie Exp $
--- Source/cmTarget.cxx.orig	Mon Jan 21 19:59:53 2008
+++ Source/cmTarget.cxx	Sat Jan 26 20:47:17 2008
@@@@ -1480,6 +1480,46 @@@@ void cmTarget::GetLibraryNamesInternal(std::string& na
   realName += suffix;
 #endif
 
+#if defined(__OpenBSD__)
+  // need to tweak version for our shared libraries
+  if (type == cmTarget::SHARED_LIBRARY) {
+  	if (version) {
+	    // namely, transform version from 5.0.0 -> 5.0
+	    std::string myversion = version;
d19 2
a20 1
+	    int j = 0;
d22 12
a33 29
+	    for (int i = 0; i < myversion.size(); i++) {
+		    if (myversion[i] == '.') {
+			    j++;
+			    if (j == 2) {
+				    myversion.erase(i);
+				    break;
+			    }
+		    }
+	    }
+	    // if the env says so, produce a tweaked version number instead
+	    std::string v = "LIB" +base + "_VERSION";
+	    char *tweaked = ::getenv(v.c_str());
+#if 0
+	    char *logname = ::getenv("SHARED_LIBS_LOG");
+	    if (logname) {
+		    std::ofstream logfile(logname, std::ios_base::out | std::ios_base::app);
+		    if (logfile)
+			    logfile << "SHARED_LIBS += " << base << " "
+				    << tweaked << " # " << myversion << "\n";
+	    }
+#endif
+	    if (tweaked)
+		    myversion = tweaked;
+	    else 
+		    tweaked = "";
+	    // all our shared libs have major.number, no links
+	    realName = prefix+base+".so."+myversion;
+	    soName = realName;
+	}
d35 27
d63 1
a63 2
   // The import library name.
   if(type == cmTarget::SHARED_LIBRARY)
d65 1
@


1.2
log
@minor update cmake 2.4.7
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmTarget_cxx,v 1.1 2007/03/26 21:27:44 espie Exp $
--- Source/cmTarget.cxx.orig	Mon Jul 16 23:12:31 2007
+++ Source/cmTarget.cxx	Sun Aug 12 16:02:02 2007
@@@@ -1474,6 +1474,46 @@@@ void cmTarget::GetLibraryNamesInternal(std::string& na
@


1.1
log
@fix shared library numbers for OpenBSD. Patch may still change, but it
appears to work fine w/ kde4.

cmake will still generate a libfoo.so (which is useful as a placeholder to
know the lib has been built, since other directories don't have access to
the version number), but it obeys OpenBSD conventions for the actual library
now.

ld does the right thing, namely it ignores the libfoo.so and links against
libfoo.so.5.0 properly.

Also take environment into account to allow the ports tree to override
version numbers.

Todo: logfile of built libraries.
@
text
@d1 4
a4 4
$OpenBSD$
--- Source/cmTarget.cxx.orig	Wed Jan 10 18:59:13 2007
+++ Source/cmTarget.cxx	Sun Mar 25 18:01:32 2007
@@@@ -1459,6 +1459,46 @@@@ void cmTarget::GetLibraryNamesInternal(std::string& na
@

