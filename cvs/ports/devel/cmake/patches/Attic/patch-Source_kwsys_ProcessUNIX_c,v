head	1.6;
access;
symbols
	OPENBSD_4_7:1.4.0.12
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.10
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.8
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	kde:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2010.07.12.19.19.30;	author dcoppa;	state dead;
branches;
next	1.5;

1.5
date	2010.05.28.20.21.48;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2007.03.20.11.23.10;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2006.12.18.16.04.32;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2006.07.31.23.55.52;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.20.09.23.13;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.07.20.09.23.13;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Fix a bug with shared libraries having OUTPUT_NAME in their target
properties.

Update to cmake-2.8.2.

While here, move to new-style LIB_DEPENDS/WANTLIB.

OK espie@@, landry@@, sthen@@
@
text
@$OpenBSD: patch-Source_kwsys_ProcessUNIX_c,v 1.5 2010/05/28 20:21:48 dcoppa Exp $
--- Source/kwsys/ProcessUNIX.c.orig	Fri Apr 23 15:45:44 2010
+++ Source/kwsys/ProcessUNIX.c	Fri Apr 23 15:49:42 2010
@@@@ -2373,7 +2373,8 @@@@ static pid_t kwsysProcessFork(kwsysProcess* cp,
    Here we define the command to call on each platform and the
    corresponding parsing format string.  The parsing format should
    have two integers to store: the pid and then the ppid.  */
-#if defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__) \
+   || defined(__OpenBSD__)
 # define KWSYSPE_PS_COMMAND "ps axo pid,ppid"
 # define KWSYSPE_PS_FORMAT  "%d %d\n"
 #elif defined(__hpux) || defined(__sun__) || defined(__sgi) || defined(_AIX) \
@


1.5
log
@Update to cmake 2.8.1 (I also take maintainership).

"This is good, commit." espie@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@find qmake4, not qmake...
regen other patches with new diff.
@
text
@d1 13
a13 119
$OpenBSD: patch-Source_kwsys_ProcessUNIX_c,v 1.3 2006/12/18 16:04:32 espie Exp $
--- Source/kwsys/ProcessUNIX.c.orig	Wed Jan 10 18:59:15 2007
+++ Source/kwsys/ProcessUNIX.c	Sun Mar 18 13:52:03 2007
@@@@ -457,12 +457,13 @@@@ int kwsysProcess_SetWorkingDirectory(kwsysProcess* cp,
     }
   if(dir)
     {
-    cp->WorkingDirectory = (char*)malloc(strlen(dir) + 1);
+    size_t sz = strlen(dir) + 1;
+    cp->WorkingDirectory = (char*)malloc(sz);
     if(!cp->WorkingDirectory)
       {
       return 0;
       }
-    strcpy(cp->WorkingDirectory, dir);
+    strlcpy(cp->WorkingDirectory, dir, sz);
     }
   return 1;
 }
@@@@ -489,12 +490,13 @@@@ int kwsysProcess_SetPipeFile(kwsysProcess* cp, int prP
     }
   if(file)
     {
-    *pfile = malloc(strlen(file)+1);
+    size_t sz = strlen(file)+1;
+    *pfile = malloc(sz);
     if(!*pfile)
       {
       return 0;
       }
-    strcpy(*pfile, file);
+    strlcpy(*pfile, file, sz);
     }
 
   /* If we are redirecting the pipe, do not share it or use a native
@@@@ -670,7 +672,7 @@@@ void kwsysProcess_Execute(kwsysProcess* cp)
   /* Initialize the control structure for a new process.  */
   if(!kwsysProcessInitialize(cp))
     {
-    strcpy(cp->ErrorMessage, "Out of memory");
+    strlcpy(cp->ErrorMessage, "Out of memory", sizeof(cp->ErrorMessage));
     cp->State = kwsysProcess_State_Error;
     return;
     }
@@@@ -1021,7 +1023,7 @@@@ int kwsysProcess_WaitForData(kwsysProcess* cp, char** 
       {
       /* Select returned an error.  Leave the error description in the
          pipe buffer.  */
-      strncpy(cp->ErrorMessage, strerror(errno), KWSYSPE_PIPE_BUFFER_SIZE);
+      strlcpy(cp->ErrorMessage, strerror(errno), sizeof(cp->ErrorMessage));
 
       /* Kill the children now.  */
       kwsysProcess_Kill(cp);
@@@@ -1146,7 +1148,7 @@@@ int kwsysProcess_WaitForExit(kwsysProcess* cp, double*
   else
     {
     /* Error getting the child return code.  */
-    strcpy(cp->ErrorMessage, "Error getting child return code.");
+    strlcpy(cp->ErrorMessage, "Error getting child return code.", sizeof(cp->ErrorMessage));
     cp->State = kwsysProcess_State_Error;
     }
 
@@@@ -1222,7 +1224,7 @@@@ static int kwsysProcessInitialize(kwsysProcess* cp)
   cp->ExitCode = 1;
   cp->ExitValue = 1;
   cp->ErrorMessage[0] = 0;
-  strcpy(cp->ExitExceptionString, "No exception");
+  strlcpy(cp->ExitExceptionString, "No exception", sizeof(cp->ExitExceptionString));
 
   if(cp->ForkPIDs)
     {
@@@@ -1589,7 +1591,7 @@@@ static void kwsysProcessDestroy(kwsysProcess* cp)
       else if(result < 0 && cp->State != kwsysProcess_State_Error)
         {
         /* Unexpected error.  Report the first time this happens.  */
-        strncpy(cp->ErrorMessage, strerror(errno), KWSYSPE_PIPE_BUFFER_SIZE);
+        strlcpy(cp->ErrorMessage, strerror(errno), sizeof(cp->ErrorMessage));
         cp->State = kwsysProcess_State_Error;
         }
       }
@@@@ -1784,7 +1786,7 @@@@ static kwsysProcessTime kwsysProcessTimeSubtract(kwsys
 /*--------------------------------------------------------------------------*/
 #define KWSYSPE_CASE(type, str) \
   cp->ExitException = kwsysProcess_Exception_##type; \
-  strcpy(cp->ExitExceptionString, str)
+  strlcpy(cp->ExitExceptionString, str, sizeof(cp->ExitExceptionString))
 static void kwsysProcessSetExitException(kwsysProcess* cp, int sig)
 {
   switch (sig)
@@@@ -1903,7 +1905,8 @@@@ static void kwsysProcessSetExitException(kwsysProcess*
 #endif
     default:
       cp->ExitException = kwsysProcess_Exception_Other;
-      sprintf(cp->ExitExceptionString, "Signal %d", sig);
+      snprintf(cp->ExitExceptionString, sizeof(cp->ExitExceptionString),
+      	"Signal %d", sig);
       break;
     }
 }
@@@@ -1916,8 +1919,8 @@@@ static void kwsysProcessSetExitException(kwsysProcess*
 static void kwsysProcessChildErrorExit(int errorPipe)
 {
   /* Construct the error message.  */
-  char buffer[KWSYSPE_PIPE_BUFFER_SIZE];
-  strncpy(buffer, strerror(errno), KWSYSPE_PIPE_BUFFER_SIZE);
+  char buffer[KWSYSPE_PIPE_BUFFER_SIZE+1];
+  strlcpy(buffer, strerror(errno), KWSYSPE_PIPE_BUFFER_SIZE+1);
 
   /* Report the error to the parent through the special pipe.  */
   write(errorPipe, buffer, strlen(buffer));
@@@@ -2145,7 +2148,7 @@@@ static void kwsysProcessKill(pid_t process_id)
       if(sscanf(d->d_name, "%d", &pid) == 1 && pid != 0)
         {
         struct stat finfo;
-        sprintf(fname, "/proc/%d/stat", pid);
+        snprintf(fname, sizeof fname, "/proc/%d/stat", pid);
         if(stat(fname, &finfo) == 0)
           {
           FILE* f = fopen(fname, "r");
@


1.3
log
@update to cmake 2.4.5, quite a few patches vanish since cmake can now
build stuff with system libraries, so we no longer have to repair
curl/zlib... just xmlrpc which cmake can't find without help.
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_kwsys_ProcessUNIX_c,v 1.2 2006/07/31 23:55:52 espie Exp $
--- Source/kwsys/ProcessUNIX.c.orig	Mon Dec  4 17:04:05 2006
+++ Source/kwsys/ProcessUNIX.c	Sun Dec 17 11:07:03 2006
@@@@ -457,12 +457,13 @@@@ int kwsysProcess_SetWorkingDirectory(kws
d20 1
a20 1
@@@@ -489,12 +490,13 @@@@ int kwsysProcess_SetPipeFile(kwsysProces
d36 1
a36 1
@@@@ -670,7 +672,7 @@@@ void kwsysProcess_Execute(kwsysProcess* 
d45 1
a45 1
@@@@ -1021,7 +1023,7 @@@@ int kwsysProcess_WaitForData(kwsysProces
d54 1
a54 1
@@@@ -1146,7 +1148,7 @@@@ int kwsysProcess_WaitForExit(kwsysProces
d63 1
a63 1
@@@@ -1222,7 +1224,7 @@@@ static int kwsysProcessInitialize(kwsysP
d72 1
a72 1
@@@@ -1589,7 +1591,7 @@@@ static void kwsysProcessDestroy(kwsysPro
d81 1
a81 1
@@@@ -1784,7 +1786,7 @@@@ static kwsysProcessTime kwsysProcessTime
d90 1
a90 1
@@@@ -1903,7 +1905,8 @@@@ static void kwsysProcessSetExitException
d100 1
a100 1
@@@@ -1916,8 +1919,8 @@@@ static void kwsysProcessSetExitException
d111 1
a111 1
@@@@ -2145,7 +2148,7 @@@@ static void kwsysProcessKill(pid_t proce
@


1.2
log
@update to 2.4.3
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_kwsys_ProcessUNIX_c,v 1.1.1.1 2006/07/20 09:23:13 espie Exp $
--- Source/kwsys/ProcessUNIX.c.orig	Mon Jul 31 16:49:59 2006
+++ Source/kwsys/ProcessUNIX.c	Tue Aug  1 01:03:42 2006
@@@@ -430,12 +430,13 @@@@ int kwsysProcess_SetWorkingDirectory(kws
d20 1
a20 1
@@@@ -462,12 +463,13 @@@@ int kwsysProcess_SetPipeFile(kwsysProces
d35 2
a36 2
   /* If we are redirecting the pipe, do not share it.  */
@@@@ -600,7 +602,7 @@@@ void kwsysProcess_Execute(kwsysProcess* 
d45 1
a45 1
@@@@ -938,7 +940,7 @@@@ int kwsysProcess_WaitForData(kwsysProces
d54 1
a54 1
@@@@ -1063,7 +1065,7 @@@@ int kwsysProcess_WaitForExit(kwsysProces
d63 1
a63 1
@@@@ -1139,7 +1141,7 @@@@ static int kwsysProcessInitialize(kwsysP
d72 1
a72 1
@@@@ -1482,7 +1484,7 @@@@ static void kwsysProcessDestroy(kwsysPro
d81 1
a81 1
@@@@ -1657,7 +1659,7 @@@@ static kwsysProcessTime kwsysProcessTime
d90 1
a90 1
@@@@ -1776,7 +1778,8 @@@@ static void kwsysProcessSetExitException
d100 1
a100 1
@@@@ -1789,8 +1792,8 @@@@ static void kwsysProcessSetExitException
d111 1
a111 1
@@@@ -2018,7 +2021,7 @@@@ static void kwsysProcessKill(pid_t proce
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- Source/kwsys/ProcessUNIX.c.orig	Wed May 17 15:48:55 2006
+++ Source/kwsys/ProcessUNIX.c	Tue Jul 18 10:50:19 2006
@@@@ -401,12 +401,13 @@@@ int kwsysProcess_SetWorkingDirectory(kws
d20 1
a20 1
@@@@ -433,12 +434,13 @@@@ int kwsysProcess_SetPipeFile(kwsysProces
d36 1
a36 1
@@@@ -570,7 +572,7 @@@@ void kwsysProcess_Execute(kwsysProcess* 
d45 1
a45 1
@@@@ -914,7 +916,7 @@@@ int kwsysProcess_WaitForData(kwsysProces
d54 1
a54 10
@@@@ -1003,7 +1005,7 @@@@ int kwsysProcess_WaitForExit(kwsysProces
       if(result <= 0 && cp->State != kwsysProcess_State_Error)
         {
         /* Unexpected error.  Report the first time this happens.  */
-        strncpy(cp->ErrorMessage, strerror(errno), KWSYSPE_PIPE_BUFFER_SIZE);
+        strlcpy(cp->ErrorMessage, strerror(errno), sizeof(cp->ErrorMessage));
         cp->State = kwsysProcess_State_Error;
         }
       }
@@@@ -1060,7 +1062,7 @@@@ int kwsysProcess_WaitForExit(kwsysProces
d63 1
a63 1
@@@@ -1121,7 +1123,7 @@@@ static int kwsysProcessInitialize(kwsysP
d72 10
a81 1
@@@@ -1592,7 +1594,7 @@@@ static kwsysProcessTime kwsysProcessTime
d90 1
a90 1
@@@@ -1711,7 +1713,8 @@@@ static void kwsysProcessSetExitException
d100 1
a100 1
@@@@ -1724,8 +1727,8 @@@@ static void kwsysProcessSetExitException
d111 1
a111 1
@@@@ -1950,7 +1953,7 @@@@ static void kwsysProcessKill(pid_t proce
@


1.1.1.1
log
@cmake, a `new' build system. Used by KDE4.

Easier to work with than autoconf/automake/libtool.
@
text
@@
