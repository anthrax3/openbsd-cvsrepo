head	1.3;
access;
symbols
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2011.09.20.11.32.36;	author dcoppa;	state dead;
branches;
next	1.2;

1.2
date	2011.05.02.15.59.43;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.29.16.50.32;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to cmake-2.8.5

Went in a bulk without issues, ok landry@@
@
text
@$OpenBSD: patch-Modules_CMakeDetermineSystem_cmake,v 1.2 2011/05/02 15:59:43 sthen Exp $

programs expect CMAKE_HOST_SYSTEM_PROCESSOR to contain a simple,
single-word processor type. "arch -s" provides the closest to
this on OpenBSD.
 http://cmake.org/gitweb?p=cmake.git;a=commit;h=0bfabf96

--- Modules/CMakeDetermineSystem.cmake.orig	Tue Feb 15 17:47:26 2011
+++ Modules/CMakeDetermineSystem.cmake	Mon May  2 16:53:02 2011
@@@@ -50,14 +50,17 @@@@ IF(CMAKE_HOST_UNIX)
     IF(CMAKE_HOST_SYSTEM_NAME MATCHES "Linux|CYGWIN.*")
       EXEC_PROGRAM(uname ARGS -m OUTPUT_VARIABLE CMAKE_HOST_SYSTEM_PROCESSOR
         RETURN_VALUE val)
-    ELSE(CMAKE_HOST_SYSTEM_NAME MATCHES "Linux|CYGWIN.*")
+    ELSEIF(CMAKE_HOST_SYSTEM_NAME MATCHES "OpenBSD")
+      EXEC_PROGRAM(arch ARGS -s OUTPUT_VARIABLE CMAKE_HOST_SYSTEM_PROCESSOR
+        RETURN_VALUE val)
+    ELSE()
       EXEC_PROGRAM(uname ARGS -p OUTPUT_VARIABLE CMAKE_HOST_SYSTEM_PROCESSOR
         RETURN_VALUE val)
       IF("${val}" GREATER 0)
         EXEC_PROGRAM(uname ARGS -m OUTPUT_VARIABLE CMAKE_HOST_SYSTEM_PROCESSOR
           RETURN_VALUE val)
       ENDIF("${val}" GREATER 0)
-    ENDIF(CMAKE_HOST_SYSTEM_NAME MATCHES "Linux|CYGWIN.*")
+    ENDIF()
     # check the return of the last uname -m or -p 
     IF("${val}" GREATER 0)
         SET(CMAKE_HOST_SYSTEM_PROCESSOR "unknown")
@


1.2
log
@Switch to simpler Modules/CMakeDetermineSystem.cmake patch now committed
upstream. Suggested by/ok dcoppa@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_CMakeDetermineSystem_cmake,v 1.1 2011/04/29 16:50:32 sthen Exp $
@


1.1
log
@Set CMAKE_HOST_SYSTEM_PROCESSOR more like people are expecting by
using arch -s instead of uname -p. Tested with all current CMake
users in tree, no change.  ok dcoppa@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 1
d9 3
a11 2
+++ Modules/CMakeDetermineSystem.cmake	Fri Apr 29 11:29:23 2011
@@@@ -51,12 +51,17 @@@@ IF(CMAKE_HOST_UNIX)
d14 9
a22 7
     ELSE(CMAKE_HOST_SYSTEM_NAME MATCHES "Linux|CYGWIN.*")
-      EXEC_PROGRAM(uname ARGS -p OUTPUT_VARIABLE CMAKE_HOST_SYSTEM_PROCESSOR
-        RETURN_VALUE val)
-      IF("${val}" GREATER 0)
-        EXEC_PROGRAM(uname ARGS -m OUTPUT_VARIABLE CMAKE_HOST_SYSTEM_PROCESSOR
+      IF(CMAKE_HOST_SYSTEM_NAME MATCHES "OpenBSD")
+        EXEC_PROGRAM(arch ARGS -s OUTPUT_VARIABLE CMAKE_HOST_SYSTEM_PROCESSOR
d24 3
a26 10
-      ENDIF("${val}" GREATER 0)
+      ELSE(CMAKE_HOST_SYSTEM_NAME MATCHES "OpenBSD")
+        EXEC_PROGRAM(uname ARGS -p OUTPUT_VARIABLE CMAKE_HOST_SYSTEM_PROCESSOR
+          RETURN_VALUE val)
+        IF("${val}" GREATER 0)
+          EXEC_PROGRAM(uname ARGS -m OUTPUT_VARIABLE CMAKE_HOST_SYSTEM_PROCESSOR
+            RETURN_VALUE val)
+        ENDIF("${val}" GREATER 0)
+      ENDIF(CMAKE_HOST_SYSTEM_NAME MATCHES "OpenBSD")
     ENDIF(CMAKE_HOST_SYSTEM_NAME MATCHES "Linux|CYGWIN.*")
d29 1
@

