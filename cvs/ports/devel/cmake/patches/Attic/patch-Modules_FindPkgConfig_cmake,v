head	1.5;
access;
symbols
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2016.08.13.15.01.13;	author dcoppa;	state dead;
branches;
next	1.4;
commitid	VT7T7iy2tqPuzrjc;

1.4
date	2016.08.12.14.23.02;	author dcoppa;	state Exp;
branches;
next	1.3;
commitid	a57LF8Y6HJFBqtPN;

1.3
date	2012.08.31.12.28.31;	author dcoppa;	state dead;
branches;
next	1.2;

1.2
date	2012.05.07.13.58.18;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.07.07.06.20;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.5
log
@
Revert previous, it was causing breakage to some ports.
spotted by naddy@@
@
text
@$OpenBSD: patch-Modules_FindPkgConfig_cmake,v 1.4 2016/08/12 14:23:02 dcoppa Exp $

FindPkgConfig: call find_library() for every library returned by
the .pc file, so that at the end a list of full paths to the libraries
is returned.
This makes the pkg_check_modules() behaviour consistent with the
normal CMake convention, where use of link_directories() is discouraged
in favour of using absolute paths to system libraries.

Patch by Sam Thursfield <sam.thursfield@@codethink.co.uk>
https://cmake.org/Bug/view.php?id=15804

--- Modules/FindPkgConfig.cmake.orig	Fri Jul 22 15:50:22 2016
+++ Modules/FindPkgConfig.cmake	Fri Aug 12 13:58:37 2016
@@@@ -187,6 +187,19 @@@@ function(_pkgconfig_add_extra_path _extra_paths_var _v
   set(${_extra_paths_var} ${${_extra_paths_var}} PARENT_SCOPE)
 endfunction()
 
+# convert library names to absolute paths
+function(_pkgconfig_find_libraries _output_var _prefix _library_names _library_dirs)
+  foreach(_libname ${_library_names})
+    # find_library stores its result in the cache, so we must pass a unique
+    # variable name for each library that we look for.
+    set(_library_path_var "${_prefix}_LIBRARY_${_libname}")
+
+    find_library(${_library_path_var} ${_libname} PATHS ${_library_dirs})
+    list(APPEND _library_paths "${${_library_path_var}}")
+  endforeach()
+  set(${_output_var} ${_library_paths} PARENT_SCOPE)
+endfunction()
+
 # scan the LDFLAGS returned by pkg-config for library directories and
 # libraries, figure out the absolute paths of that libraries in the
 # given directories, and create an imported target from them
@@@@ -461,6 +474,8 @@@@ macro(_pkg_check_modules_internal _is_required _is_sil
       _pkgconfig_invoke_dyn("${_pkg_check_modules_packages}" "${_prefix}" INCLUDE_DIRS        "(^| )-I" --cflags-only-I )
       _pkgconfig_invoke_dyn("${_pkg_check_modules_packages}" "${_prefix}" CFLAGS              ""        --cflags )
       _pkgconfig_invoke_dyn("${_pkg_check_modules_packages}" "${_prefix}" CFLAGS_OTHER        ""        --cflags-only-other )
+
+      _pkgconfig_find_libraries("${_prefix}_LIBRARIES" ${_prefix} "${${_prefix}_LIBRARIES}" "${${_prefix}_LIBRARY_DIRS}")
 
       if (_imp_target)
         _pkg_create_imp_target("${_prefix}" _no_cmake_path _no_cmake_environment_path)
@


1.4
log
@
FindPkgConfig: call find_library() for every library returned by
the .pc file, so that at the end a list of full paths to the libraries
is returned.
This makes the pkg_check_modules() behaviour consistent with the
normal CMake convention, where use of link_directories() is discouraged
in favour of using absolute paths to system libraries.

Patch by Sam Thursfield <sam.thursfield@@codethink.co.uk>
https://cmake.org/Bug/view.php?id=15804
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@Update to cmake-2.8.9.

"There was no cmake fallout in the bulk on amd64" jasper@@
Also tested by Brad with a handful of CMake using ports
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_FindPkgConfig_cmake,v 1.2 2012/05/07 13:58:18 dcoppa Exp $
d3 6
a8 2
FindPkgConfig.cmake: fix documented output variable not set
(upstream git commit 3ea850a5023060b84dcc0e6f0098c32c28b15807)
d10 29
a38 19
--- Modules/FindPkgConfig.cmake.orig	Thu May  3 09:28:55 2012
+++ Modules/FindPkgConfig.cmake	Thu May  3 09:30:09 2012
@@@@ -13,11 +13,10 @@@@
 # When the 'QUIET' argument is set, no status messages will be printed.
 #
 # It sets the following variables:
-#   PKG_CONFIG_FOUND          ... true if pkg-config works on the system
+#   PKG_CONFIG_FOUND          ... if pkg-config executable was found
 #   PKG_CONFIG_EXECUTABLE     ... pathname of the pkg-config program
 #   PKG_CONFIG_VERSION_STRING ... the version of the pkg-config program found
 #                                 (since CMake 2.8.8)
-#   PKG_CONFIG_FOUND          ... if pkg-config executable was found
 #
 # For the following variables two sets of values exist; first one is the
 # common one and has the given PREFIX. The second set contains flags
@@@@ -103,6 +102,11 @@@@ include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleSta
 find_package_handle_standard_args(PkgConfig
                                   REQUIRED_VARS PKG_CONFIG_EXECUTABLE
                                   VERSION_VAR PKG_CONFIG_VERSION_STRING)
d40 1
a40 4
+# This is needed because the module name is "PkgConfig" but the name of
+# this variable has always been PKG_CONFIG_FOUND so this isn't automatically
+# handled by FPHSA.
+set(PKG_CONFIG_FOUND "${PKGCONFIG_FOUND}")
d42 2
a43 2
 # Unsets the given variables
 macro(_pkgconfig_unset var)
@


1.2
log
@
try_compile: Cleanup temporary directories
Since commit 4fbdce2b (try_compile: Use random executable file name,
2012-02-13) a different <target>.dir is used for each try-compile.
Cleanup the directories as well as their content to avoid accumulating
leftover temporary directories.
(upstream git commit 953257ca611526c9a161a22e5148802be1c67649)

Remove troublesome "Qt4Deploy" and "CTest.UpdateCVS" tests
(from gentoo's package/dev-util/cmake/files/)

Sync FindPkgConfig.cmake patch with upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_FindPkgConfig_cmake,v 1.1 2012/05/07 07:06:20 dcoppa Exp $
@


1.1
log
@Update to cmake-2.8.8

OK sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
Unbreak FindPkgConfig.cmake
@

