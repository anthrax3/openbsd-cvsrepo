head	1.5;
access;
symbols
	OPENBSD_4_7:1.4.0.12
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.10
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.8
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	kde:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2010.05.28.20.21.48;	author dcoppa;	state dead;
branches;
next	1.4;

1.4
date	2007.03.23.16.30.35;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2007.03.20.11.23.10;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2006.07.31.23.55.51;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.20.09.23.13;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.07.20.09.23.13;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to cmake 2.8.1 (I also take maintainership).

"This is good, commit." espie@@
@
text
@$OpenBSD: patch-Source_cmFindLibraryCommand_cxx,v 1.4 2007/03/23 16:30:35 espie Exp $
--- Source/cmFindLibraryCommand.cxx.orig	Wed Jan 10 18:59:12 2007
+++ Source/cmFindLibraryCommand.cxx	Fri Mar 23 17:07:55 2007
@@@@ -139,11 +139,52 @@@@ void cmFindLibraryCommand::AddLib64Paths()
     }
 }
 
+std::string OpenBSD_find_library(const std::string& path, const std::string& prefix, const char *name)
+{
+	std::vector<std::string> result;
+
+	std::string stem = prefix + name + ".so.";
+	std::size_t len = stem.length();
+	std::string best;
+	int bestmajor = -1;
+	int bestminor = -1;
+	std::string globstring = "^" + prefix+".*\\.so\\.[0-9]+\\.[0-9]+$";
+
+	cmSystemTools::Glob(path.c_str(), globstring.c_str(), result);
+	for (std::vector<std::string>::iterator it = result.begin();
+		it != result.end(); ++it) {
+			if (it->substr(0, len) != stem) {
+				continue;
+			}
+			std::istringstream sc(it->substr(len, it->size()));
+			int major, minor;
+			sc >> major;
+			if (sc.get() != '.')
+				continue;
+			sc >> minor;
+
+			if (major < bestmajor)
+				continue;
+			if (major == bestmajor && minor < bestminor)
+				continue;
+			bestmajor = major;
+			bestminor = minor;
+			best = path + "/" + *it;
+	}
+	return best;
+}
+
 std::string cmFindLibraryCommand::FindLibrary(const char* name)
 {
   bool supportFrameworks = false;
   bool onlyFrameworks = false;
+  bool openbsdSharedLibs = false;
   std::string ff = this->Makefile->GetSafeDefinition("CMAKE_FIND_FRAMEWORK");
+  std::string openbsd = this->Makefile->GetSafeDefinition("CMAKE_OPENBSD_SHARED_LIBS");
+  if (openbsd == "TRUE")
+    {
+    openbsdSharedLibs = true;
+    }
   if(ff == "FIRST" || ff == "LAST")
     {
     supportFrameworks = true;
@@@@ -194,6 +235,16 @@@@ std::string cmFindLibraryCommand::FindLibrary(const ch
           tryPath += *prefix;
           tryPath += name;
           tryPath += *suffix;
+	  if (openbsdSharedLibs && *suffix == ".so") 
+	    {
+	    std::string foundPath = OpenBSD_find_library(*p, *prefix, name);
+	    if (foundPath != "") 
+	      {
+	      tryPath = cmSystemTools::CollapseFullPath(foundPath.c_str());
+	      cmSystemTools::ConvertToUnixSlashes(tryPath);
+	      return tryPath;
+	      }
+	    }
           if(cmSystemTools::FileExists(tryPath.c_str())
              && !cmSystemTools::FileIsDirectory(tryPath.c_str()))
             {
@


1.4
log
@fix openbsd lib detection, don't break out of the loop (I'm stupid).
let cmake detect most recent library, as it should
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmFindLibraryCommand_cxx,v 1.3 2007/03/20 11:23:10 espie Exp $
@


1.3
log
@find qmake4, not qmake...
regen other patches with new diff.
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmFindLibraryCommand_cxx,v 1.2 2006/07/31 23:55:51 espie Exp $
d3 2
a4 2
+++ Source/cmFindLibraryCommand.cxx	Sun Mar 18 13:52:02 2007
@@@@ -139,11 +139,53 @@@@ void cmFindLibraryCommand::AddLib64Paths()
a38 1
+			break;
d57 1
a57 1
@@@@ -194,6 +236,16 @@@@ std::string cmFindLibraryCommand::FindLibrary(const ch
@


1.2
log
@update to 2.4.3
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmFindLibraryCommand_cxx,v 1.1.1.1 2006/07/20 09:23:13 espie Exp $
--- Source/cmFindLibraryCommand.cxx.orig	Mon Jul 31 16:49:57 2006
+++ Source/cmFindLibraryCommand.cxx	Tue Aug  1 00:32:19 2006
@@@@ -139,11 +139,53 @@@@ void cmFindLibraryCommand::AddLib64Paths
d58 1
a58 1
@@@@ -194,6 +236,16 @@@@ std::string cmFindLibraryCommand::FindLi
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- Source/cmFindLibraryCommand.cxx.orig	Wed May 17 15:48:53 2006
+++ Source/cmFindLibraryCommand.cxx	Mon Jul  3 14:45:02 2006
@@@@ -130,11 +130,53 @@@@ void cmFindLibraryCommand::AddLib64Paths
d58 1
a58 1
@@@@ -185,6 +227,16 @@@@ std::string cmFindLibraryCommand::FindLi
@


1.1.1.1
log
@cmake, a `new' build system. Used by KDE4.

Easier to work with than autoconf/automake/libtool.
@
text
@@
