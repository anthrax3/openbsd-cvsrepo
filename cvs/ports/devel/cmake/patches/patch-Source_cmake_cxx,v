head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.2
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.13.0.2
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_4_7:1.6.0.10
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.8
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.6
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.4
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	kde:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.14
date	2017.08.26.17.53.35;	author dcoppa;	state Exp;
branches;
next	1.13;
commitid	GZPWWvi7dHjhVGfr;

1.13
date	2016.11.28.09.15.13;	author dcoppa;	state Exp;
branches;
next	1.12;
commitid	jOocuc05F30hpQ6W;

1.12
date	2016.08.08.07.44.48;	author dcoppa;	state Exp;
branches;
next	1.11;
commitid	r4e0Be8ugQYraWeW;

1.11
date	2016.04.29.10.34.33;	author dcoppa;	state Exp;
branches;
next	1.10;
commitid	z7Jo8sWkfT7EmMLb;

1.10
date	2015.12.08.17.18.59;	author dcoppa;	state Exp;
branches;
next	1.9;
commitid	AX6ONjs8OJ4jyAD6;

1.9
date	2013.06.06.12.47.06;	author dcoppa;	state dead;
branches;
next	1.8;

1.8
date	2013.01.18.22.17.06;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2010.05.28.20.21.48;	author dcoppa;	state dead;
branches;
next	1.6;

1.6
date	2008.01.26.21.26.32;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2007.08.25.08.35.20;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2007.03.20.11.23.10;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2006.12.18.16.04.32;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2006.07.31.23.55.52;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.20.09.23.13;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.07.20.09.23.13;	author espie;	state Exp;
branches;
next	;


desc
@@


1.14
log
@
Update to CMake-3.9.1

Tests and feedback by rsadowski@@, schwarze@@
Ports bulk build by sthen@@
@
text
@$OpenBSD: patch-Source_cmake_cxx,v 1.13 2016/11/28 09:15:13 dcoppa Exp $

Revert 4e3c7725d0d724d7a8a0e8305d15713e01b20503: we want to build
CMake using Ninja

Index: Source/cmake.cxx
--- Source/cmake.cxx.orig
+++ Source/cmake.cxx
@@@@ -77,9 +77,7 @@@@
 #include "cmGlobalWatcomWMakeGenerator.h"
 #endif
 #include "cmGlobalUnixMakefileGenerator3.h"
-#if defined(CMAKE_BUILD_WITH_CMAKE)
 #include "cmGlobalNinjaGenerator.h"
-#endif
 #include "cmExtraCodeLiteGenerator.h"
 
 #if !defined(CMAKE_BOOT_MINGW)
@@@@ -1685,9 +1683,7 @@@@ void cmake::AddDefaultGenerators()
   this->Generators.push_back(cmGlobalMinGWMakefileGenerator::NewFactory());
 #endif
   this->Generators.push_back(cmGlobalUnixMakefileGenerator3::NewFactory());
-#if defined(CMAKE_BUILD_WITH_CMAKE)
   this->Generators.push_back(cmGlobalNinjaGenerator::NewFactory());
-#endif
 #if defined(CMAKE_USE_WMAKE)
   this->Generators.push_back(cmGlobalWatcomWMakeGenerator::NewFactory());
 #endif
@


1.13
log
@
Update to CMake-3.7.0

Thanks to naddy@@ who ran a bulk build with it
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmake_cxx,v 1.12 2016/08/08 07:44:48 dcoppa Exp $
d6 4
a9 3
--- Source/cmake.cxx.orig	Fri Nov 25 23:00:29 2016
+++ Source/cmake.cxx	Fri Nov 25 23:02:52 2016
@@@@ -72,9 +72,7 @@@@
d19 1
a19 1
@@@@ -1669,9 +1667,7 @@@@ void cmake::AddDefaultGenerators()
@


1.12
log
@
Update to CMake-3.6.1.

Tested in a bulk build by naddy@@: the one and only fallout has been
fixed.
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmake_cxx,v 1.11 2016/04/29 10:34:33 dcoppa Exp $
d6 3
a8 3
--- Source/cmake.cxx.orig	Fri Jul 22 15:50:22 2016
+++ Source/cmake.cxx	Fri Aug  5 11:21:30 2016
@@@@ -73,9 +73,7 @@@@
d18 1
a18 1
@@@@ -1537,9 +1535,7 @@@@ void cmake::AddDefaultGenerators()
a27 29
@@@@ -2231,7 +2227,7 @@@@ bool cmake::PrintMessagePreamble(cmake::MessageType t,
   if (t == cmake::FATAL_ERROR) {
     msg << "CMake Error";
   } else if (t == cmake::INTERNAL_ERROR) {
-    msg << "CMake Internal Error (please report a bug)";
+    msg << "CMake Internal Error";
   } else if (t == cmake::LOG) {
     msg << "CMake Debug Log";
   } else if (t == cmake::DEPRECATION_ERROR) {
@@@@ -2271,19 +2267,6 @@@@ void displayMessage(cmake::MessageType t, std::ostring
 
   // Add a terminating blank line.
   msg << "\n";
-
-#if defined(CMAKE_BUILD_WITH_CMAKE)
-  // Add a C++ stack trace to internal errors.
-  if (t == cmake::INTERNAL_ERROR) {
-    std::string stack = cmsys::SystemInformation::GetProgramStack(0, 0);
-    if (!stack.empty()) {
-      if (cmHasLiteralPrefix(stack, "WARNING:")) {
-        stack = "Note:" + stack.substr(8);
-      }
-      msg << stack << "\n";
-    }
-  }
-#endif
 
   // Output the message.
   if (t == cmake::FATAL_ERROR || t == cmake::INTERNAL_ERROR ||
@


1.11
log
@
Update to CMake-3.5.2

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmake_cxx,v 1.10 2015/12/08 17:18:59 dcoppa Exp $
d6 4
a9 4
--- Source/cmake.cxx.orig	Fri Apr 15 15:41:22 2016
+++ Source/cmake.cxx	Fri Apr 29 12:07:07 2016
@@@@ -74,9 +74,7 @@@@
 # include "cmGlobalWatcomWMakeGenerator.h"
d13 1
a13 1
-# include "cmGlobalNinjaGenerator.h"
a14 1
+#include "cmGlobalNinjaGenerator.h"
d18 2
a19 1
@@@@ -1856,10 +1854,8 @@@@ void cmake::AddDefaultGenerators()
d21 1
a21 2
   this->Generators.push_back(
     cmGlobalUnixMakefileGenerator3::NewFactory());
d23 1
a23 2
   this->Generators.push_back(
     cmGlobalNinjaGenerator::NewFactory());
d26 12
a37 3
   this->Generators.push_back(
     cmGlobalWatcomWMakeGenerator::NewFactory());
@@@@ -2721,22 +2717,6 @@@@ void displayMessage(cmake::MessageType t, std::ostring
d44 4
a47 7
-  if(t == cmake::INTERNAL_ERROR)
-    {
-    std::string stack = cmsys::SystemInformation::GetProgramStack(0,0);
-    if(!stack.empty())
-      {
-      if(cmHasLiteralPrefix(stack, "WARNING:"))
-        {
d49 1
a49 1
-        }
a50 1
-      }
d52 1
d56 1
a56 1
   if(t == cmake::FATAL_ERROR
@


1.10
log
@
Update to cmake-3.4.0

tested in a bulk build by naddy@@
kde4-related failures proactively fixed by zhuk@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 3
a8 3
--- Source/cmake.cxx.orig	Thu Nov 12 16:39:51 2015
+++ Source/cmake.cxx	Mon Nov 23 16:54:15 2015
@@@@ -75,9 +75,7 @@@@
d19 1
a19 1
@@@@ -1703,10 +1701,8 @@@@ void cmake::AddDefaultGenerators()
d30 23
@


1.9
log
@Update to cmake-2.8.11.

Tested in a bulk build by landry@@
Tested with KDE4 by zhuk@@
OK zhuk@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmake_cxx,v 1.8 2013/01/18 22:17:06 dcoppa Exp $
d3 2
a4 2
Bugfix: don't crash if the link.txt file contains empty lines
(upstream git commit 8ff1d4714fb7cd42eb3cd8db041b529e433eb7c8)
d6 24
a29 15
--- Source/cmake.cxx.orig	Tue Nov 27 14:26:33 2012
+++ Source/cmake.cxx	Fri Jan 18 16:18:31 2013
@@@@ -3299,6 +3299,12 @@@@ int cmake::ExecuteLinkScript(std::vector<std::string>&
   int result = 0;
   while(result == 0 && cmSystemTools::GetLineFromStream(fin, command))
     {
+    // Skip empty command lines.
+    if(command.find_first_not_of(" \t") == command.npos)
+      {
+      continue;
+      }
+
     // Setup this command line.
     const char* cmd[2] = {command.c_str(), 0};
     cmsysProcess_SetCommand(cp, cmd);
@


1.8
log
@Fix a couple of crashers, from upstream:

Bugfix: don't crash when a target is expected but is not available
(upstream git commit e767ffcda58ab73cf2c4394202eec7ae1f6035b5)

Bugfix: don't crash if the link.txt file contains empty lines
(upstream git commit 8ff1d4714fb7cd42eb3cd8db041b529e433eb7c8)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.7
log
@Update to cmake 2.8.1 (I also take maintainership).

"This is good, commit." espie@@
@
text
@d1 10
a10 5
$OpenBSD: patch-Source_cmake_cxx,v 1.6 2008/01/26 21:26:32 espie Exp $
--- Source/cmake.cxx.orig	Mon Jan 21 19:59:52 2008
+++ Source/cmake.cxx	Sat Jan 26 20:47:18 2008
@@@@ -1532,7 +1532,7 @@@@ int cmake::Configure()
   if(!this->CacheManager->GetCacheValue("CMAKE_BACKWARDS_COMPATIBILITY"))
d12 9
a20 24
     char ver[256];
-    sprintf(ver,"%i.%i",cmMakefile::GetMajorVersion(),
+    snprintf(ver, sizeof ver, "%i.%i",cmMakefile::GetMajorVersion(),
             cmMakefile::GetMinorVersion());
     this->CacheManager->AddCacheEntry
       ("CMAKE_BACKWARDS_COMPATIBILITY",ver, 
@@@@ -1897,7 +1897,7 @@@@ int cmake::DumpDocumentationToFile(std::ostream& f)
   const char *terse;
   const char *full;
   char tmp[1024];
-  sprintf(tmp,"Version %d.%d (%s)", cmake::GetMajorVersion(),
+  snprintf(tmp, sizeof tmp, "Version %d.%d (%s)", cmake::GetMajorVersion(),
           cmake::GetMinorVersion(), cmVersion::GetReleaseVersion().c_str());
   f << "<html>\n";
   f << "<h1>Documentation for commands of CMake " << tmp << "</h1>\n";
@@@@ -2008,7 +2008,7 @@@@ int cmake::LoadCache()
   if(!this->CacheManager->GetCacheValue("CMAKE_BACKWARDS_COMPATIBILITY"))
     {
     char ver[256];
-    sprintf(ver,"%i.%i",cmMakefile::GetMajorVersion(),
+    snprintf(ver, sizeof ver, "%i.%i",cmMakefile::GetMajorVersion(),
             cmMakefile::GetMinorVersion());
     this->CacheManager->AddCacheEntry
       ("CMAKE_BACKWARDS_COMPATIBILITY",ver, 
@


1.6
log
@minor update to 2.4.8 (all tests pass now)
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmake_cxx,v 1.5 2007/08/25 08:35:20 espie Exp $
@


1.5
log
@minor update cmake 2.4.7
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmake_cxx,v 1.4 2007/03/20 11:23:10 espie Exp $
--- Source/cmake.cxx.orig	Mon Jul 16 23:12:30 2007
+++ Source/cmake.cxx	Sun Aug 12 16:02:02 2007
@@@@ -1499,7 +1499,7 @@@@ int cmake::Configure()
d13 1
a13 1
@@@@ -1864,7 +1864,7 @@@@ int cmake::DumpDocumentationToFile(std::ostream& f)
d22 1
a22 1
@@@@ -1971,7 +1971,7 @@@@ int cmake::LoadCache()
@


1.4
log
@find qmake4, not qmake...
regen other patches with new diff.
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmake_cxx,v 1.3 2006/12/18 16:04:32 espie Exp $
--- Source/cmake.cxx.orig	Wed Jan 10 18:59:12 2007
+++ Source/cmake.cxx	Sun Mar 18 13:52:03 2007
@@@@ -1487,7 +1487,7 @@@@ int cmake::Configure()
d13 1
a13 1
@@@@ -1852,7 +1852,7 @@@@ int cmake::DumpDocumentationToFile(std::ostream& f)
d22 1
a22 1
@@@@ -1959,7 +1959,7 @@@@ int cmake::LoadCache()
@


1.3
log
@update to cmake 2.4.5, quite a few patches vanish since cmake can now
build stuff with system libraries, so we no longer have to repair
curl/zlib... just xmlrpc which cmake can't find without help.
@
text
@d1 3
a3 3
$OpenBSD: patch-Source_cmake_cxx,v 1.2 2006/07/31 23:55:52 espie Exp $
--- Source/cmake.cxx.orig	Mon Dec  4 17:03:54 2006
+++ Source/cmake.cxx	Sun Dec 17 11:07:03 2006
d13 1
a13 1
@@@@ -1852,7 +1852,7 @@@@ int cmake::DumpDocumentationToFile(std::
@


1.2
log
@update to 2.4.3
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmake_cxx,v 1.1.1.1 2006/07/20 09:23:13 espie Exp $
--- Source/cmake.cxx.orig	Mon Jul 31 16:49:56 2006
+++ Source/cmake.cxx	Tue Aug  1 00:32:19 2006
@@@@ -1455,7 +1455,7 @@@@ int cmake::Configure()
d13 1
a13 1
@@@@ -1821,7 +1821,7 @@@@ int cmake::DumpDocumentationToFile(std::
d22 1
a22 1
@@@@ -1928,7 +1928,7 @@@@ int cmake::LoadCache()
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- Source/cmake.cxx.orig	Sun Jul  2 19:01:35 2006
+++ Source/cmake.cxx	Sun Jul  2 19:02:30 2006
@@@@ -1279,7 +1279,7 @@@@ int cmake::Configure()
d13 1
a13 1
@@@@ -1645,7 +1645,7 @@@@ int cmake::DumpDocumentationToFile(std::
d22 1
a22 1
@@@@ -1752,7 +1752,7 @@@@ int cmake::LoadCache()
a30 18
@@@@ -2209,7 +2209,7 @@@@ void cmake::GenerateGraphViz(const char*
         continue;
         }
       //std::cout << "Found target: " << tit->first.c_str() << std::endl;
-      sprintf(tgtName, "%s%d", graphNodePrefix, cnt++);
+      snprintf(tgtName, sizeof tgtName, "%s%d", graphNodePrefix, cnt++);
       targetNamesNodes[realTargetName] = tgtName;
       targetPtrs[realTargetName] = &tit->second;
       }
@@@@ -2246,7 +2246,7 @@@@ void cmake::GenerateGraphViz(const char*
           }
         if ( tarIt == targetNamesNodes.end() )
           {
-          sprintf(tgtName, "%s%d", graphNodePrefix, cnt++);
+          snprintf(tgtName, sizeof tgtName, "%s%d", graphNodePrefix, cnt++);
           targetDeps[libName] = 2;
           targetNamesNodes[libName] = tgtName;
           //str << "    \"" << tgtName << "\" [ label=\"" << libName
@


1.1.1.1
log
@cmake, a `new' build system. Used by KDE4.

Easier to work with than autoconf/automake/libtool.
@
text
@@
