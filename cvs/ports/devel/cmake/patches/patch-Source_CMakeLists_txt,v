head	1.10;
access;
symbols
	OPENBSD_6_1:1.9.0.2
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.4
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.2
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3;
locks; strict;
comment	@# @;


1.10
date	2017.08.26.17.53.35;	author dcoppa;	state Exp;
branches;
next	1.9;
commitid	GZPWWvi7dHjhVGfr;

1.9
date	2016.11.28.09.15.13;	author dcoppa;	state Exp;
branches;
next	1.8;
commitid	jOocuc05F30hpQ6W;

1.8
date	2016.01.28.11.28.02;	author dcoppa;	state Exp;
branches;
next	1.7;
commitid	qHeUHp3ecmYfPHxV;

1.7
date	2016.01.28.09.22.31;	author dcoppa;	state dead;
branches;
next	1.6;
commitid	k9xRkOXHHvMctof8;

1.6
date	2014.12.31.11.06.02;	author dcoppa;	state Exp;
branches;
next	1.5;
commitid	q283NDlM4qiVneVU;

1.5
date	2013.10.14.12.58.03;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2013.08.22.09.53.20;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2013.06.25.07.16.46;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.11.08.07.17;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2010.05.28.20.21.48;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.10
log
@
Update to CMake-3.9.1

Tests and feedback by rsadowski@@, schwarze@@
Ports bulk build by sthen@@
@
text
@$OpenBSD: patch-Source_CMakeLists_txt,v 1.9 2016/11/28 09:15:13 dcoppa Exp $
Index: Source/CMakeLists.txt
--- Source/CMakeLists.txt.orig
+++ Source/CMakeLists.txt
@@@@ -81,6 +81,9 @@@@ include_directories(
   "${CMake_SOURCE_DIR}/Source/LexerParser"
   ${CMAKE_ZLIB_INCLUDES}
   ${CMAKE_EXPAT_INCLUDES}
+  ${CMAKE_LIBRHASH_INCLUDES}
+  ${CMAKE_JSONCPP_INCLUDES}
+  ${CMAKE_LIBUV_INCLUDES}
   ${CMAKE_TAR_INCLUDES}
   ${CMAKE_COMPRESS_INCLUDES}
   ${CMake_HAIKU_INCLUDE_DIRS}
@@@@ -273,7 +276,6 @@@@ set(SRCS
   cmRulePlaceholderExpander.cxx
   cmRulePlaceholderExpander.h
   cmLocalUnixMakefileGenerator3.cxx
-  cmLocale.h
   ${MACH_SRCS}
   cmMakefile.cxx
   cmMakefile.h
@


1.9
log
@
Update to CMake-3.7.0

Thanks to naddy@@ who ran a bulk build with it
@
text
@d1 6
a6 5
$OpenBSD: patch-Source_CMakeLists_txt,v 1.8 2016/01/28 11:28:02 dcoppa Exp $
--- Source/CMakeLists.txt.orig	Fri Nov 11 15:37:13 2016
+++ Source/CMakeLists.txt	Sat Nov 26 12:24:01 2016
@@@@ -80,6 +80,8 @@@@ include_directories(
   "${CMake_SOURCE_DIR}/Source"
d9 1
d15 8
@


1.8
log
@
Do not handle jsoncpp in a special way, treat it like all the other
external libraries

$ diff -u objdump-pre.out objdump-post.out | grep libjsoncpp
-  NEEDED      /usr/local/lib/libjsoncpp.so.0.0
+  NEEDED      libjsoncpp.so.0.0
@
text
@d1 4
a4 4
$OpenBSD$
--- Source/CMakeLists.txt.orig	Wed Jan 27 14:24:24 2016
+++ Source/CMakeLists.txt	Wed Jan 27 14:25:19 2016
@@@@ -76,6 +76,7 @@@@ include_directories(
d9 1
@


1.7
log
@
Use g++-4.9 from ports to build cmake on arm

OK jsg@@, sthen@@
@
text
@d1 11
a11 15
$OpenBSD: patch-Source_CMakeLists_txt,v 1.6 2014/12/31 11:06:02 dcoppa Exp $

XXX: CMake's built-in ELF parser is broken on arm

--- Source/CMakeLists.txt.orig	Mon Dec 15 14:07:43 2014
+++ Source/CMakeLists.txt	Thu Dec 18 05:37:12 2014
@@@@ -16,7 +16,7 @@@@ if(CMAKE_CXX_PLATFORM_ID MATCHES "OpenBSD")
 else()
   CHECK_INCLUDE_FILE("elf.h" HAVE_ELF_H)
 endif()
-if(HAVE_ELF_H)
+if(HAVE_ELF_H AND NOT CMAKE_SYSTEM_PROCESSOR MATCHES "^arm")
   set(CMAKE_USE_ELF_PARSER 1)
 elseif(HAIKU)
   # On Haiku, we need to include elf32.h from the private headers
@


1.6
log
@
Update to cmake-3.1.0

Bulk build by landry@@
KDE-related fixes by zhuk@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_CMakeLists_txt,v 1.5 2013/10/14 12:58:03 dcoppa Exp $
@


1.5
log
@Update to cmake-2.8.12.
Tested in a bulk build by the usual suspects, Thanks!

ok espie@@, kili@@
ok zhuk@@ for kde4
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_CMakeLists_txt,v 1.4 2013/08/22 09:53:20 dcoppa Exp $
d5 2
a6 2
--- Source/CMakeLists.txt.orig	Wed Oct  9 09:45:09 2013
+++ Source/CMakeLists.txt	Wed Oct  9 09:45:53 2013
d14 2
a15 2
 else()
   set(CMAKE_USE_ELF_PARSER)
@


1.4
log
@CMake's built-in ELF parser is broken on arm:

> #0  cmELF (this=0xbfff4674, fname=0x4337438c "/usr/lib/libz.so.4.1")
>     at basic_ios.h:124
> 124           { return _M_streambuf_state; }

Since this is a requirement for Ninja, disable both of
them if ${MACHINE_ARCH} == "arm".

As a workaround, ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_CMakeLists_txt,v 1.3 2013/06/25 07:16:46 dcoppa Exp $
d3 1
a3 3
commit 480e924daedee520d18c8a9c0b9823fef205b57a
Author: David Coppa <dcoppa@@openbsd.org>
Date:   Fri Jun 21 11:13:35 2013 +0200
d5 6
a10 18
OpenBSD: Enable ELF parsing and editing

OpenBSD provides ELF ABI declarations in

#include <stdint.h>
#include <elf_abi.h>

Teach the platform check and cmELF implementation to use these.

XXX: broken on arm

--- Source/CMakeLists.txt.orig	Tue Jul  2 15:41:40 2013
+++ Source/CMakeLists.txt	Tue Aug 20 11:22:32 2013
@@@@ -11,8 +11,12 @@@@
 #=============================================================================
 include(CheckIncludeFile)
 # Check if we can build support for ELF parsing.
-CHECK_INCLUDE_FILE("elf.h" HAVE_ELF_H)
a11 5
+if(CMAKE_CXX_PLATFORM_ID MATCHES "OpenBSD")
+  CHECK_INCLUDE_FILES("stdint.h;elf_abi.h" HAVE_ELF_H)
+else()
+  CHECK_INCLUDE_FILE("elf.h" HAVE_ELF_H)
+endif()
@


1.3
log
@Enable ELF parsing and editing support on OpenBSD.
Ninja will use it.

OK espie@@
@
text
@d1 1
a1 1
$OpenBSD$
d16 5
a20 3
--- Source/CMakeLists.txt.orig	Wed May 15 19:38:13 2013
+++ Source/CMakeLists.txt	Fri Jun 21 09:15:02 2013
@@@@ -11,7 +11,11 @@@@
d25 1
d31 1
a31 1
 if(HAVE_ELF_H)
d34 1
@


1.2
log
@Set CFLAGS in the ports Makefile instead of using handrolled patches.
Unbreak build on hppa too. From landry@@: thanks!

OK landry@@
@
text
@d1 30
a30 23
$OpenBSD: patch-Source_CMakeLists_txt,v 1.1 2010/05/28 20:21:48 dcoppa Exp $
--- Source/CMakeLists.txt.orig	Tue Apr 27 21:54:05 2010
+++ Source/CMakeLists.txt	Tue Apr 27 21:58:48 2010
@@@@ -107,6 +107,19 @@@@ IF(CMAKE_USE_ELF_PARSER)
   SET(ELF_SRCS cmELF.h cmELF.cxx)
 ENDIF(CMAKE_USE_ELF_PARSER)
 
+# Workaround for sparc64
+EXECUTE_PROCESS(
+  COMMAND ${CMAKE_CXX_COMPILER} -dumpmachine
+  OUTPUT_VARIABLE MACHINE
+  OUTPUT_STRIP_TRAILING_WHITESPACE
+)
+
+STRING(REGEX MATCH "(sparc64-*)" _machine_sparc64 "${MACHINE}")
+
+IF (_machine_sparc64)
+  STRING(REGEX REPLACE "-O2" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
+ENDIF (_machine_sparc64)
+
 #
 # Sources for CMakeLib
 #
@


1.1
log
@Update to cmake 2.8.1 (I also take maintainership).

"This is good, commit." espie@@
@
text
@d1 1
a1 1
$OpenBSD$
@

