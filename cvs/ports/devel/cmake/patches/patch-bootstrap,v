head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.2
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3;
locks; strict;
comment	@# @;


1.13
date	2016.11.28.09.15.13;	author dcoppa;	state Exp;
branches;
next	1.12;
commitid	jOocuc05F30hpQ6W;

1.12
date	2016.04.29.10.34.33;	author dcoppa;	state Exp;
branches;
next	1.11;
commitid	z7Jo8sWkfT7EmMLb;

1.11
date	2016.01.28.09.22.31;	author dcoppa;	state Exp;
branches;
next	1.10;
commitid	k9xRkOXHHvMctof8;

1.10
date	2015.12.08.17.18.59;	author dcoppa;	state Exp;
branches;
next	1.9;
commitid	AX6ONjs8OJ4jyAD6;

1.9
date	2015.09.03.07.09.25;	author dcoppa;	state Exp;
branches;
next	1.8;
commitid	KGLL6yBcZn2xZciC;

1.8
date	2015.03.26.07.10.02;	author dcoppa;	state Exp;
branches;
next	1.7;
commitid	RC163bs6emik8Gf9;

1.7
date	2014.12.31.11.06.02;	author dcoppa;	state Exp;
branches;
next	1.6;
commitid	q283NDlM4qiVneVU;

1.6
date	2014.09.30.15.02.32;	author dcoppa;	state Exp;
branches;
next	1.5;
commitid	fhduiNtLwEOexuC7;

1.5
date	2014.09.11.10.24.38;	author dcoppa;	state Exp;
branches;
next	1.4;
commitid	m0ESeGbhnaGm45G1;

1.4
date	2013.08.22.09.53.20;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2013.06.28.14.58.23;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.11.08.07.17;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2010.05.28.20.21.48;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.13
log
@
Update to CMake-3.7.0

Thanks to naddy@@ who ran a bulk build with it
@
text
@$OpenBSD: patch-bootstrap,v 1.12 2016/04/29 10:34:33 dcoppa Exp $

Use Ninja to build CMake
XXX: broken on m88k

--- bootstrap.orig	Fri Nov 11 15:37:14 2016
+++ bootstrap	Sat Nov 26 00:19:00 2016
@@@@ -154,7 +154,11 @@@@ if ${cmake_system_mingw}; then
   cmake_bootstrap_generator="MSYS Makefiles"
 else
   # Bootstrapping from a standard UNIX prompt.
-  cmake_bootstrap_generator="Unix Makefiles"
+  if arch -s | grep -q '^m88k'; then
+    cmake_bootstrap_generator="Unix Makefiles"
+  else
+    cmake_bootstrap_generator="Ninja"
+  fi
 fi
 
 # Choose tools and extensions for this platform.
@@@@ -321,6 +325,14 @@@@ CMAKE_CXX_SOURCES="\
   cmExprLexer \
   cmExprParser \
   cmExprParserHelper \
+  cmFortranLexer \
+  cmFortranParser \
+  cmFortranParserImpl \
+  cmGlobalNinjaGenerator \
+  cmLocalNinjaGenerator \
+  cmNinjaTargetGenerator \
+  cmNinjaNormalTargetGenerator \
+  cmNinjaUtilityTargetGenerator \
 "
 
 if ${cmake_system_mingw}; then
@@@@ -1354,7 +1366,7 @@@@ cmake_c_flags="${cmake_c_flags}-I`cmake_escape \"${cma
 cmake_cxx_flags="${cmake_cxx_flags} -I`cmake_escape \"${cmake_bootstrap_dir}\"` -I`cmake_escape \"${cmake_source_dir}/Source\"` \
   -I`cmake_escape \"${cmake_source_dir}/Utilities\"`"
 echo "cmake: ${objs}" > "${cmake_bootstrap_dir}/Makefile"
-echo "	${cmake_cxx_compiler} ${cmake_ld_flags} ${cmake_cxx_flags} ${objs} -o cmake" >> "${cmake_bootstrap_dir}/Makefile"
+echo "	${cmake_cxx_compiler} ${cmake_ld_flags} ${cmake_cxx_flags} ${objs} -o cmake -L${cmake_prefix_dir}/lib -ljsoncpp" >> "${cmake_bootstrap_dir}/Makefile"
 for a in ${CMAKE_CXX_SOURCES}; do
   src=`cmake_escape "${cmake_source_dir}/Source/${a}.cxx"`
   echo "${a}.o : ${src} ${dep}" >> "${cmake_bootstrap_dir}/Makefile"
@


1.12
log
@
Update to CMake-3.5.2

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-bootstrap,v 1.11 2016/01/28 09:22:31 dcoppa Exp $
d6 3
a8 3
--- bootstrap.orig	Fri Apr 15 15:41:29 2016
+++ bootstrap	Wed Apr 27 10:55:08 2016
@@@@ -160,7 +160,11 @@@@ if ${cmake_system_mingw}; then
d21 1
a21 1
@@@@ -325,6 +329,11 @@@@ CMAKE_CXX_SOURCES="\
d25 3
d36 9
@


1.11
log
@
Use g++-4.9 from ports to build cmake on arm

OK jsg@@, sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-bootstrap,v 1.10 2015/12/08 17:18:59 dcoppa Exp $
d6 3
a8 3
--- bootstrap.orig	Thu Nov 12 16:39:53 2015
+++ bootstrap	Mon Nov 23 16:54:15 2015
@@@@ -158,7 +158,11 @@@@ if ${cmake_system_mingw}; then
d21 1
a21 1
@@@@ -322,6 +326,11 @@@@ CMAKE_CXX_SOURCES="\
@


1.10
log
@
Update to cmake-3.4.0

tested in a bulk build by naddy@@
kde4-related failures proactively fixed by zhuk@@
@
text
@d1 1
a1 1
$OpenBSD: patch-bootstrap,v 1.9 2015/09/03 07:09:25 dcoppa Exp $
d4 1
a4 1
XXX: broken on arm and m88k
d13 1
a13 1
+  if arch -s | egrep -q '^arm|^m88k'; then
@


1.9
log
@
Update to CMake-3.3.1

No fallout in a bulk build
OK ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-bootstrap,v 1.8 2015/03/26 07:10:02 dcoppa Exp $
d6 2
a7 2
--- bootstrap.orig	Thu Aug 13 16:57:02 2015
+++ bootstrap	Mon Aug 17 15:39:13 2015
d21 12
@


1.8
log
@
Update to CMake-3.2.1

Tested in a bulk build by landry@@
OK landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-bootstrap,v 1.7 2014/12/31 11:06:02 dcoppa Exp $
d6 3
a8 3
--- bootstrap.orig	Tue Mar 10 09:38:46 2015
+++ bootstrap	Wed Mar 18 06:24:00 2015
@@@@ -157,7 +157,11 @@@@ if ${cmake_system_mingw}; then
@


1.7
log
@
Update to cmake-3.1.0

Bulk build by landry@@
KDE-related fixes by zhuk@@
@
text
@d1 1
a1 1
$OpenBSD: patch-bootstrap,v 1.6 2014/09/30 15:02:32 dcoppa Exp $
d6 3
a8 3
--- bootstrap.orig	Mon Dec 15 14:07:45 2014
+++ bootstrap	Thu Dec 18 05:37:12 2014
@@@@ -156,7 +156,11 @@@@ if ${cmake_system_mingw}; then
@


1.6
log
@
Add missing bits of sthen's commit to disable ninja on m88k
@
text
@d1 1
a1 1
$OpenBSD: patch-bootstrap,v 1.5 2014/09/11 10:24:38 dcoppa Exp $
d6 3
a8 3
--- bootstrap.orig	Thu Jul 31 17:03:58 2014
+++ bootstrap	Wed Sep  3 08:10:09 2014
@@@@ -141,7 +141,11 @@@@ if ${cmake_system_mingw}; then
@


1.5
log
@
Update to cmake-3.0.1

Tested in a bulk build by landry@@
OK landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-bootstrap,v 1.4 2013/08/22 09:53:20 dcoppa Exp $
d4 1
a4 1
XXX: broken on arm
d13 1
a13 1
+  if arch -s | grep ^arm >/dev/null 2>&1; then
@


1.4
log
@CMake's built-in ELF parser is broken on arm:

> #0  cmELF (this=0xbfff4674, fname=0x4337438c "/usr/lib/libz.so.4.1")
>     at basic_ios.h:124
> 124           { return _M_streambuf_state; }

Since this is a requirement for Ninja, disable both of
them if ${MACHINE_ARCH} == "arm".

As a workaround, ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-bootstrap,v 1.3 2013/06/28 14:58:23 dcoppa Exp $
d6 3
a8 3
--- bootstrap.orig	Tue Jul  2 15:41:41 2013
+++ bootstrap	Tue Aug 20 10:55:10 2013
@@@@ -112,7 +112,11 @@@@ if ${cmake_system_mingw}; then
@


1.3
log
@Switch CMake to use ninja to build itself.

OK espie@@; makes sense to sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d4 1
d6 3
a8 3
--- bootstrap.orig	Thu Jun 27 11:26:07 2013
+++ bootstrap	Thu Jun 27 11:26:31 2013
@@@@ -112,7 +112,7 @@@@ if ${cmake_system_mingw}; then
d13 5
a17 1
+  cmake_bootstrap_generator="Ninja"
@


1.2
log
@Set CFLAGS in the ports Makefile instead of using handrolled patches.
Unbreak build on hppa too. From landry@@: thanks!

OK landry@@
@
text
@d1 13
a13 6
$OpenBSD: patch-bootstrap,v 1.1 2010/05/28 20:21:48 dcoppa Exp $
--- bootstrap.orig	Tue Apr 27 17:51:26 2010
+++ bootstrap	Tue Apr 27 18:01:34 2010
@@@@ -624,6 +624,12 @@@@ cmake_c_flags=${CFLAGS}
 cmake_cxx_flags=${CXXFLAGS}
 cmake_ld_flags=${LDFLAGS}
d15 1
a15 9
+# Workaround for sparc64
+ARCH=$(sysctl -n hw.machine)
+if [ "${ARCH}" == "sparc64" ]; then
+	cmake_cxx_flags=$(echo ${CXXFLAGS} | sed -e s/'-O2'//)
+fi
+
 # Add Cygwin-specific flags
 if ${cmake_system_cygwin}; then
   cmake_ld_flags="${LDFLAGS} -Wl,--enable-auto-import"
@


1.1
log
@Update to cmake 2.8.1 (I also take maintainership).

"This is good, commit." espie@@
@
text
@d1 1
a1 1
$OpenBSD$
@

