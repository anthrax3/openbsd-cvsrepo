head	1.23;
access;
symbols
	OPENBSD_6_2:1.23.0.2
	OPENBSD_6_2_BASE:1.23
	OPENBSD_6_1:1.22.0.2
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.20.0.2
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.16.0.4
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.13.0.6
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.4
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.2
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.12.0.2
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.10.0.2
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.10
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.8
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.6
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	kde:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.23
date	2017.08.26.17.53.35;	author dcoppa;	state Exp;
branches;
next	1.22;
commitid	GZPWWvi7dHjhVGfr;

1.22
date	2016.11.28.09.15.13;	author dcoppa;	state Exp;
branches;
next	1.21;
commitid	jOocuc05F30hpQ6W;

1.21
date	2016.08.08.07.44.48;	author dcoppa;	state Exp;
branches;
next	1.20;
commitid	r4e0Be8ugQYraWeW;

1.20
date	2016.04.29.10.34.33;	author dcoppa;	state Exp;
branches;
next	1.19;
commitid	z7Jo8sWkfT7EmMLb;

1.19
date	2016.01.28.11.28.02;	author dcoppa;	state Exp;
branches;
next	1.18;
commitid	qHeUHp3ecmYfPHxV;

1.18
date	2015.12.08.17.18.59;	author dcoppa;	state Exp;
branches;
next	1.17;
commitid	AX6ONjs8OJ4jyAD6;

1.17
date	2015.09.03.07.09.25;	author dcoppa;	state Exp;
branches;
next	1.16;
commitid	KGLL6yBcZn2xZciC;

1.16
date	2015.03.26.07.10.02;	author dcoppa;	state Exp;
branches;
next	1.15;
commitid	RC163bs6emik8Gf9;

1.15
date	2014.12.31.11.06.02;	author dcoppa;	state Exp;
branches;
next	1.14;
commitid	q283NDlM4qiVneVU;

1.14
date	2014.09.11.10.24.38;	author dcoppa;	state Exp;
branches;
next	1.13;
commitid	m0ESeGbhnaGm45G1;

1.13
date	2013.05.30.08.34.32;	author dcoppa;	state Exp;
branches;
next	1.12;

1.12
date	2012.11.11.17.13.31;	author dcoppa;	state Exp;
branches;
next	1.11;

1.11
date	2012.08.31.12.28.31;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2012.05.07.07.06.20;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2012.01.07.22.14.51;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2011.10.14.17.22.10;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2011.09.20.11.32.36;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2011.03.13.18.23.02;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2010.11.15.11.39.08;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.12.19.19.30;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.28.20.21.48;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2006.12.18.16.04.31;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.20.09.23.13;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.07.20.09.23.13;	author espie;	state Exp;
branches;
next	;


desc
@@


1.23
log
@
Update to CMake-3.9.1

Tests and feedback by rsadowski@@, schwarze@@
Ports bulk build by sthen@@
@
text
@$OpenBSD: patch-CMakeLists_txt,v 1.22 2016/11/28 09:15:13 dcoppa Exp $
Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@@@ -305,6 +305,15 @@@@ macro (CMAKE_BUILD_UTILITIES)
     CMAKE_SET_TARGET_FOLDER(${KWSYS_NAMESPACE}TestSharedForward "${kwsys_folder}")
   endif()
 
+  if($ENV{LOCALBASE})
+    set(OPENBSD_LOCALBASE $ENV{LOCALBASE})
+  else()
+    set(OPENBSD_LOCALBASE "/usr/local")
+  endif()
+
+  # to find expat and curl
+  link_directories("${OPENBSD_LOCALBASE}/lib")
+
   #---------------------------------------------------------------------
   # Setup third-party libraries.
   # Everything in the tree should be able to include files from the
@@@@ -342,7 +351,8 @@@@ macro (CMAKE_BUILD_UTILITIES)
       message(FATAL_ERROR
         "CMAKE_USE_SYSTEM_LIBRHASH is ON but LibRHash is not found!")
     endif()
-    set(CMAKE_LIBRHASH_LIBRARIES LibRHash::LibRHash)
+    set(CMAKE_LIBRHASH_INCLUDES ${LibRHash_INCLUDE_DIRS})
+    set(CMAKE_LIBRHASH_LIBRARIES ${LibRHash_LIBRARIES})
   else()
     set(CMAKE_LIBRHASH_LIBRARIES cmlibrhash)
     add_subdirectory(Utilities/cmlibrhash)
@@@@ -512,7 +522,8 @@@@ macro (CMAKE_BUILD_UTILITIES)
       message(FATAL_ERROR
         "CMAKE_USE_SYSTEM_JSONCPP is ON but a JsonCpp is not found!")
     endif()
-    set(CMAKE_JSONCPP_LIBRARIES JsonCpp::JsonCpp)
+    set(CMAKE_JSONCPP_INCLUDES ${JsonCpp_INCLUDE_DIRS})
+    set(CMAKE_JSONCPP_LIBRARIES ${JsonCpp_LIBRARIES})
   else()
     set(CMAKE_JSONCPP_LIBRARIES cmjsoncpp)
     add_subdirectory(Utilities/cmjsoncpp)
@@@@ -522,7 +533,7 @@@@ macro (CMAKE_BUILD_UTILITIES)
   #---------------------------------------------------------------------
   # Build libuv library.
   if(NOT DEFINED CMAKE_USE_LIBUV)
-    set(CMAKE_USE_LIBUV 1)
+    set(CMAKE_USE_LIBUV 0)
     if(APPLE)
       include(CheckCSourceCompiles)
       check_c_source_compiles("
@@@@ -552,7 +563,8 @@@@ int main(void) { return 0; }
         message(FATAL_ERROR
           "CMAKE_USE_SYSTEM_LIBUV is ON but a libuv is not found!")
       endif()
-      set(CMAKE_LIBUV_LIBRARIES LibUV::LibUV)
+      set(CMAKE_LIBUV_INCLUDES ${LibUV_INCLUDE_DIRS})
+      set(CMAKE_LIBUV_LIBRARIES ${LibUV_LIBRARIES})
     else()
       set(CMAKE_LIBUV_LIBRARIES cmlibuv)
       add_subdirectory(Utilities/cmlibuv)
@


1.22
log
@
Update to CMake-3.7.0

Thanks to naddy@@ who ran a bulk build with it
@
text
@d1 5
a5 4
$OpenBSD: patch-CMakeLists_txt,v 1.21 2016/08/08 07:44:48 dcoppa Exp $
--- CMakeLists.txt.orig	Fri Nov 11 15:37:13 2016
+++ CMakeLists.txt	Sat Nov 26 15:18:08 2016
@@@@ -274,6 +274,15 @@@@ macro (CMAKE_BUILD_UTILITIES)
d21 11
a31 1
@@@@ -453,7 +462,8 @@@@ macro (CMAKE_BUILD_UTILITIES)
d41 1
a41 1
@@@@ -463,7 +473,7 @@@@ macro (CMAKE_BUILD_UTILITIES)
d50 1
a50 1
@@@@ -499,7 +509,8 @@@@ int main(void) { return 0; }
@


1.21
log
@
Update to CMake-3.6.1.

Tested in a bulk build by naddy@@: the one and only fallout has been
fixed.
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.20 2016/04/29 10:34:33 dcoppa Exp $
--- CMakeLists.txt.orig	Fri Jul 22 15:50:21 2016
+++ CMakeLists.txt	Thu Aug  4 11:06:08 2016
@@@@ -262,6 +262,15 @@@@ macro (CMAKE_BUILD_UTILITIES)
d20 1
a20 11
@@@@ -433,15 +442,17 @@@@ macro (CMAKE_BUILD_UTILITIES)
   # Build jsoncpp library.
   if(CMAKE_USE_SYSTEM_JSONCPP)
     if(NOT CMAKE_VERSION VERSION_LESS 3.0)
-      include(${CMake_SOURCE_DIR}/Source/Modules/FindJsonCpp.cmake)
+      set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMake_SOURCE_DIR}/Source/Modules)
     else()
       message(FATAL_ERROR "CMAKE_USE_SYSTEM_JSONCPP requires CMake >= 3.0")
     endif()
+    find_package(JsonCpp)
     if(NOT JsonCpp_FOUND)
d30 19
@


1.20
log
@
Update to CMake-3.5.2

ok sthen@@
@
text
@d1 3
a3 3
$OpenBSD: patch-CMakeLists_txt,v 1.19 2016/01/28 11:28:02 dcoppa Exp $
--- CMakeLists.txt.orig	Fri Apr 15 15:41:19 2016
+++ CMakeLists.txt	Wed Apr 27 10:55:08 2016
d20 1
a20 1
@@@@ -425,15 +434,17 @@@@ macro (CMAKE_BUILD_UTILITIES)
@


1.19
log
@
Do not handle jsoncpp in a special way, treat it like all the other
external libraries

$ diff -u objdump-pre.out objdump-post.out | grep libjsoncpp
-  NEEDED      /usr/local/lib/libjsoncpp.so.0.0
+  NEEDED      libjsoncpp.so.0.0
@
text
@d1 6
a6 6
$OpenBSD: patch-CMakeLists_txt,v 1.18 2015/12/08 17:18:59 dcoppa Exp $
--- CMakeLists.txt.orig	Thu Nov 12 16:39:50 2015
+++ CMakeLists.txt	Mon Nov 23 16:20:59 2015
@@@@ -270,6 +270,15 @@@@ macro (CMAKE_BUILD_UTILITIES)
   # (a macro defined in this file)
   CMAKE_HANDLE_SYSTEM_LIBRARIES()
d18 3
a20 3
   # Build zlib library for Curl, CMake, and CTest.
   set(CMAKE_ZLIB_HEADER "cm_zlib.h")
@@@@ -404,15 +413,17 @@@@ macro (CMAKE_BUILD_UTILITIES)
@


1.18
log
@
Update to cmake-3.4.0

tested in a bulk build by naddy@@
kde4-related failures proactively fixed by zhuk@@
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.17 2015/09/03 07:09:25 dcoppa Exp $
d20 20
@


1.17
log
@
Update to CMake-3.3.1

No fallout in a bulk build
OK ajacoutot@@
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.16 2015/03/26 07:10:02 dcoppa Exp $
--- CMakeLists.txt.orig	Thu Aug 13 16:56:59 2015
+++ CMakeLists.txt	Mon Aug 17 15:39:13 2015
@@@@ -257,6 +257,15 @@@@ macro (CMAKE_BUILD_UTILITIES)
@


1.16
log
@
Update to CMake-3.2.1

Tested in a bulk build by landry@@
OK landry@@
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.15 2014/12/31 11:06:02 dcoppa Exp $
--- CMakeLists.txt.orig	Tue Mar 10 09:38:44 2015
+++ CMakeLists.txt	Wed Mar 18 06:23:59 2015
@@@@ -249,6 +249,15 @@@@ macro (CMAKE_BUILD_UTILITIES)
@


1.15
log
@
Update to cmake-3.1.0

Bulk build by landry@@
KDE-related fixes by zhuk@@
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.14 2014/09/11 10:24:38 dcoppa Exp $
--- CMakeLists.txt.orig	Mon Dec 15 14:07:43 2014
+++ CMakeLists.txt	Thu Dec 18 05:37:11 2014
@@@@ -239,6 +239,15 @@@@ macro (CMAKE_BUILD_UTILITIES)
a19 10
@@@@ -396,9 +405,6 @@@@ macro (CMAKE_BUILD_UTILITIES)
   else ()
     set(BUILD_CursesDialog 0)
   endif ()
-  if(BUILD_CursesDialog)
-    add_subdirectory(Source/CursesDialog/form)
-  endif()
 endmacro ()
 
 #-----------------------------------------------------------------------
@


1.14
log
@
Update to cmake-3.0.1

Tested in a bulk build by landry@@
OK landry@@
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.13 2013/05/30 08:34:32 dcoppa Exp $
--- CMakeLists.txt.orig	Thu Jul 31 17:03:56 2014
+++ CMakeLists.txt	Wed Sep  3 08:10:09 2014
@@@@ -247,6 +247,15 @@@@ macro (CMAKE_BUILD_UTILITIES)
d20 1
a20 1
@@@@ -381,9 +390,6 @@@@ macro (CMAKE_BUILD_UTILITIES)
@


1.13
log
@Simplification
Minor fixes and cleanups
Put stuff where it belongs
Zap some useless patches

(in preparation for cmake-2.8.11)
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.12 2012/11/11 17:13:31 dcoppa Exp $
--- CMakeLists.txt.orig	Tue Nov 27 14:26:32 2012
+++ CMakeLists.txt	Wed May 29 15:00:28 2013
@@@@ -257,6 +257,15 @@@@ macro (CMAKE_BUILD_UTILITIES)
d20 1
a20 1
@@@@ -395,9 +404,6 @@@@ macro (CMAKE_BUILD_UTILITIES)
@


1.12
log
@Update to cmake-2.8.10.
Successfully gone through a bulk build.

Feedback landry@@, Vadim Zhukov, Amit Kulkarni
Bulk build and OK landry@@
@
text
@d1 3
a3 3
$OpenBSD: patch-CMakeLists_txt,v 1.11 2012/08/31 12:28:31 dcoppa Exp $
--- CMakeLists.txt.orig	Wed Oct 31 16:32:05 2012
+++ CMakeLists.txt	Fri Nov  2 08:02:49 2012
d10 1
a10 1
+  else($ENV{LOCALBASE})
d12 1
a12 1
+  endif($ENV{LOCALBASE})
d20 1
a20 1
@@@@ -395,26 +404,7 @@@@ macro (CMAKE_BUILD_UTILITIES)
a27 16
-
-#-----------------------------------------------------------------------
-if(CMAKE_CXX_PLATFORM_ID MATCHES "OpenBSD")
-  execute_process(COMMAND ${CMAKE_CXX_COMPILER}
-    ${CMAKE_CXX_COMPILER_ARG1} -dumpversion
-    OUTPUT_VARIABLE _GXX_VERSION
-  )
-  string(REGEX REPLACE "([0-9])\\.([0-9])(\\.[0-9])?" "\\1\\2"
-    _GXX_VERSION_SHORT ${_GXX_VERSION})
-  if(_GXX_VERSION_SHORT EQUAL 33)
-    message(FATAL_ERROR
-      "GXX 3.3 on OpenBSD is known to cause CPack to Crash.\n"
-      "Please use GXX 4.2 or greater to build CMake on OpenBSD\n"
-      "${CMAKE_CXX_COMPILER} version is: ${_GXX_VERSION}")
-  endif()
-endif()
a29 1
 # The main section of the CMakeLists file
@


1.11
log
@Update to cmake-2.8.9.

"There was no cmake fallout in the bulk on amd64" jasper@@
Also tested by Brad with a handful of CMake using ports
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.10 2012/05/07 07:06:20 dcoppa Exp $
--- CMakeLists.txt.orig	Thu Aug  9 20:15:18 2012
+++ CMakeLists.txt	Thu Aug 23 11:25:46 2012
@@@@ -258,6 +258,15 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
d7 6
a12 6
   
+  IF($ENV{LOCALBASE})
+    SET(OPENBSD_LOCALBASE $ENV{LOCALBASE})
+  ELSE($ENV{LOCALBASE})
+    SET(OPENBSD_LOCALBASE /usr/local)
+  ENDIF($ENV{LOCALBASE})
d15 1
a15 1
+  LINK_DIRECTORIES("${OPENBSD_LOCALBASE}/lib")
d19 9
a27 9
   SET(CMAKE_ZLIB_HEADER "cm_zlib.h")
@@@@ -396,26 +405,7 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
   ELSE (UNIX)
     SET(BUILD_CursesDialog 0)
   ENDIF (UNIX)
-  IF(BUILD_CursesDialog)
-    ADD_SUBDIRECTORY(Source/CursesDialog/form)
-  ENDIF(BUILD_CursesDialog)
 ENDMACRO (CMAKE_BUILD_UTILITIES)
d30 2
a31 2
-IF(CMAKE_CXX_PLATFORM_ID MATCHES "OpenBSD")
-  EXECUTE_PROCESS(COMMAND ${CMAKE_CXX_COMPILER}
d35 1
a35 1
-  STRING(REGEX REPLACE "([0-9])\\.([0-9])(\\.[0-9])?" "\\1\\2"
d37 2
a38 2
-  IF(_GXX_VERSION_SHORT EQUAL 33)
-    MESSAGE(FATAL_ERROR
d42 2
a43 2
-  ENDIF()
-ENDIF()
@


1.10
log
@Update to cmake-2.8.8

OK sthen@@
@
text
@d1 3
a3 3
$OpenBSD: patch-CMakeLists_txt,v 1.9 2012/01/07 22:14:51 dcoppa Exp $
--- CMakeLists.txt.orig	Wed Apr 18 20:10:54 2012
+++ CMakeLists.txt	Mon Apr 30 11:07:24 2012
d20 1
a20 1
@@@@ -397,26 +406,7 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
@


1.9
log
@Update to cmake-2.8.7.

Tested in a bulk build by naddy@@
@
text
@d1 3
a3 3
$OpenBSD: patch-CMakeLists_txt,v 1.8 2011/10/14 17:22:10 dcoppa Exp $
--- CMakeLists.txt.orig	Fri Dec 30 17:49:56 2011
+++ CMakeLists.txt	Mon Jan  2 14:50:01 2012
d20 1
a20 1
@@@@ -396,26 +405,7 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
@


1.8
log
@Update to cmake-2.8.6

Fixed FindRuby.cmake module (from Vadim Zhukov)

Fixed FindJava.cmake and FindJNI.cmake modules when cmake is used
outside of our ports tree (problem reported and fix tested by
pirofti@@)

Still "100% tests passed, 0 tests failed out of 197".

No fallout in a bulk build.

OK jasper@@
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.7 2011/09/20 11:32:36 dcoppa Exp $
--- CMakeLists.txt.orig	Tue Oct  4 18:09:24 2011
+++ CMakeLists.txt	Fri Oct  7 11:48:23 2011
@@@@ -252,6 +252,15 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
d20 1
a20 1
@@@@ -390,26 +399,7 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
@


1.7
log
@Update to cmake-2.8.5

Went in a bulk without issues, ok landry@@
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.6 2011/03/13 18:23:02 dcoppa Exp $
--- CMakeLists.txt.orig	Fri Jul  8 14:21:43 2011
+++ CMakeLists.txt	Fri Sep  9 09:49:49 2011
@@@@ -250,6 +250,15 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
d20 1
a20 1
@@@@ -388,26 +397,7 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
@


1.6
log
@Update to cmake-2.8.4.
Tested in a bulk build by landry@@.
Lot of feedback from various people on ports@@: thanks!

OK landry@@, sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.5 2010/11/15 11:39:08 dcoppa Exp $
--- CMakeLists.txt.orig	Tue Feb 15 18:47:26 2011
+++ CMakeLists.txt	Mon Mar  7 10:10:46 2011
@@@@ -265,6 +265,15 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
d20 1
a20 1
@@@@ -402,26 +411,7 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
@


1.5
log
@Update to cmake-2.8.3

OK sthen@@, landry@@ (who also tested this in a bulk build)
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.4 2010/07/12 19:19:30 dcoppa Exp $
--- CMakeLists.txt.orig	Wed Nov  3 20:58:27 2010
+++ CMakeLists.txt	Wed Nov 10 09:05:48 2010
@@@@ -253,6 +253,15 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
d20 1
a20 1
@@@@ -390,26 +399,7 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
@


1.4
log
@Fix a bug with shared libraries having OUTPUT_NAME in their target
properties.

Update to cmake-2.8.2.

While here, move to new-style LIB_DEPENDS/WANTLIB.

OK espie@@, landry@@, sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-CMakeLists_txt,v 1.3 2010/05/28 20:21:48 dcoppa Exp $
--- CMakeLists.txt.orig	Mon Jun 28 17:15:57 2010
+++ CMakeLists.txt	Mon Jul  5 11:23:18 2010
@@@@ -206,6 +206,15 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
d20 1
a20 1
@@@@ -325,9 +334,6 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
d28 16
d45 2
a46 1
 
@


1.3
log
@Update to cmake 2.8.1 (I also take maintainership).

"This is good, commit." espie@@
@
text
@d1 4
a4 4
$OpenBSD$
--- CMakeLists.txt.orig	Tue Apr  6 16:45:30 2010
+++ CMakeLists.txt	Fri Apr 23 16:07:15 2010
@@@@ -211,6 +211,15 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
d20 1
a20 1
@@@@ -314,9 +323,6 @@@@ MACRO (CMAKE_BUILD_UTILITIES)
@


1.2
log
@update to cmake 2.4.5, quite a few patches vanish since cmake can now
build stuff with system libraries, so we no longer have to repair
curl/zlib... just xmlrpc which cmake can't find without help.
@
text
@d1 12
a12 12
$OpenBSD: patch-CMakeLists_txt,v 1.1.1.1 2006/07/20 09:23:13 espie Exp $
--- CMakeLists.txt.orig	Mon Dec  4 17:03:52 2006
+++ CMakeLists.txt	Sun Dec 17 11:11:52 2006
@@@@ -60,6 +60,15 @@@@ IF(CMAKE_SYSTEM MATCHES "OSF1-V.*")
   ENDIF(NOT CMAKE_COMPILER_IS_GNUCXX)
 ENDIF(CMAKE_SYSTEM MATCHES "OSF1-V.*")
 
+IF($ENV{LOCALBASE})
+SET(OPENBSD_LOCALBASE $ENV{LOCALBASE})
+ELSE($ENV{LOCALBASE})
+SET(OPENBSD_LOCALBASE /usr/local)
+ENDIF($ENV{LOCALBASE})
d14 2
a15 2
+# to find expat and curl
+LINK_DIRECTORIES("${OPENBSD_LOCALBASE}/lib")
d17 13
a29 3
 #-----------------------------------------------------------------------------
 # Create the kwsys library for CMake.
 SET(KWSYS_NAMESPACE cmsys)
@


1.1
log
@Initial revision
@
text
@d1 6
a6 19
$OpenBSD$
--- CMakeLists.txt.orig	Wed May 17 15:48:52 2006
+++ CMakeLists.txt	Mon Jul  3 14:32:28 2006
@@@@ -72,20 +72,29 @@@@ SUBDIRS(Source/kwsys)
 
 #-----------------------------------------------------------------------------
 # Build zlib library for Curl, CMake, and CTest.
-SUBDIRS(Utilities/cmzlib)
+# SUBDIRS(Utilities/cmzlib)
 SET(CMAKE_ZLIB_INCLUDES
-  "${CMAKE_CURRENT_BINARY_DIR}/Utilities"
+  "/usr/include"
   )
-SET(CMAKE_ZLIB_LIBRARIES "cmzlib")
+SET(CMAKE_ZLIB_LIBRARIES "z")
 SET(CURL_SPECIAL_LIBZ ${CMAKE_ZLIB_LIBRARIES})
 SET(CURL_SPECIAL_LIBZ_INCLUDES ${CMAKE_ZLIB_INCLUDES})
-SET(CURL_SPECIAL_ZLIB_H "cmzlib/zlib.h")
+SET(CURL_SPECIAL_ZLIB_H "zlib.h")
d18 2
a19 26
 # Build Curl library for CTest.
-SUBDIRS(Utilities/cmcurl)
-SET(CMAKE_CURL_INCLUDES "${CMAKE_CURRENT_SOURCE_DIR}/Utilities")
-SET(CMAKE_CURL_LIBRARIES "cmcurl")
+#SUBDIRS(Utilities/cmcurl)
+SET(CMAKE_CURL_INCLUDES "${OPENBSD_LOCALBASE}/include/curl")
+SET(CMAKE_CURL_LIBRARIES "curl")
 
 #-----------------------------------------------------------------------------
 # Build Curl library for CTest.
@@@@ -95,12 +104,11 @@@@ SET(CMAKE_TAR_LIBRARIES "cmtar")
 
 #-----------------------------------------------------------------------------
 # Build expat library for CMake and CTest.
-SUBDIRS(Utilities/cmexpat)
+#SUBDIRS(Utilities/cmexpat)
 SET(CMAKE_EXPAT_INCLUDES
-  "${CMAKE_CURRENT_BINARY_DIR}/Utilities"
-  "${CMAKE_CURRENT_BINARY_DIR}/Utilities/cmexpat"
+  "${OPENBSD_LOCALBASE}/include"
   )
-SET(CMAKE_EXPAT_LIBRARIES "cmexpat")
+SET(CMAKE_EXPAT_LIBRARIES "expat")
 
 SUBDIRS(Utilities/cmxmlrpc)
 SET(CMAKE_XMLRPC_INCLUDES
@


1.1.1.1
log
@cmake, a `new' build system. Used by KDE4.

Easier to work with than autoconf/automake/libtool.
@
text
@@
