head	1.21;
access;
symbols
	OPENBSD_6_1:1.19.0.2
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.18.0.4
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.16.0.4
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.13.0.2
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.12.0.2
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2;
locks; strict;
comment	@# @;


1.21
date	2017.08.26.17.53.35;	author dcoppa;	state Exp;
branches;
next	1.20;
commitid	GZPWWvi7dHjhVGfr;

1.20
date	2017.04.21.18.37.43;	author kurt;	state Exp;
branches;
next	1.19;
commitid	HEXF3QaCTdQpnj0F;

1.19
date	2016.11.28.09.15.13;	author dcoppa;	state Exp;
branches;
next	1.18;
commitid	jOocuc05F30hpQ6W;

1.18
date	2015.12.08.17.18.59;	author dcoppa;	state Exp;
branches;
next	1.17;
commitid	AX6ONjs8OJ4jyAD6;

1.17
date	2015.09.03.07.09.25;	author dcoppa;	state Exp;
branches;
next	1.16;
commitid	KGLL6yBcZn2xZciC;

1.16
date	2015.06.24.06.39.03;	author dcoppa;	state Exp;
branches;
next	1.15;
commitid	lTyLqWBmal97eHrV;

1.15
date	2014.09.11.14.45.13;	author dcoppa;	state Exp;
branches;
next	1.14;
commitid	LDQT0jjzrJNXIIXR;

1.14
date	2014.09.11.10.24.38;	author dcoppa;	state Exp;
branches;
next	1.13;
commitid	m0ESeGbhnaGm45G1;

1.13
date	2014.05.12.14.47.49;	author dcoppa;	state Exp;
branches;
next	1.12;

1.12
date	2013.08.12.16.09.50;	author zhuk;	state Exp;
branches;
next	1.11;

1.11
date	2013.06.06.12.47.06;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2012.12.05.11.32.04;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2012.11.15.08.43.25;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2012.11.11.17.13.31;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2012.08.31.12.28.31;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2012.01.07.22.14.51;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2011.10.14.17.22.10;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.20.11.32.36;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2010.11.15.11.39.09;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.12.19.19.30;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.28.20.21.48;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.21
log
@
Update to CMake-3.9.1

Tests and feedback by rsadowski@@, schwarze@@
Ports bulk build by sthen@@
@
text
@$OpenBSD: patch-Modules_FindJava_cmake,v 1.20 2017/04/21 18:37:43 kurt Exp $
Index: Modules/FindJava.cmake
--- Modules/FindJava.cmake.orig
+++ Modules/FindJava.cmake
@@@@ -72,6 +72,8 @@@@
 
 include(${CMAKE_CURRENT_LIST_DIR}/CMakeFindJavaCommon.cmake)
 
+set(MODJAVA_VER $ENV{MODJAVA_VER})
+
 # The HINTS option should only be used for values computed from the system.
 set(_JAVA_HINTS)
 if(_JAVA_HOME)
@@@@ -97,19 +99,22 @@@@ list(APPEND _JAVA_HINTS
   )
 # Hard-coded guesses should still go in PATHS. This ensures that the user
 # environment can always override hard guesses.
-set(_JAVA_PATHS
-  /usr/lib/java/bin
-  /usr/share/java/bin
-  /usr/local/java/bin
-  /usr/local/java/share/bin
-  /usr/java/j2sdk1.4.2_04
-  /usr/lib/j2sdk1.4-sun/bin
-  /usr/java/j2sdk1.4.2_09/bin
-  /usr/lib/j2sdk1.5-sun/bin
-  /opt/sun-jdk-1.5.0.04/bin
-  /usr/local/jdk-1.7.0/bin
-  /usr/local/jdk-1.6.0/bin
-  )
+if(MODJAVA_VER)
+  set(_JAVA_PATHS ${LOCALBASE}/jdk-1.8.0/bin)
+else(MODJAVA_VER)
+  set(_JAVA_PATHS
+    /usr/lib/java/bin
+    /usr/share/java/bin
+    /usr/local/java/bin
+    /usr/local/java/share/bin
+    /usr/java/j2sdk1.4.2_04
+    /usr/lib/j2sdk1.4-sun/bin
+    /usr/java/j2sdk1.4.2_09/bin
+    /usr/lib/j2sdk1.5-sun/bin
+    /opt/sun-jdk-1.5.0.04/bin
+    ${LOCALBASE}/jdk-1.8.0/bin
+    )
+endif(MODJAVA_VER)
 find_program(Java_JAVA_EXECUTABLE
   NAMES java
   HINTS ${_JAVA_HINTS}
@@@@ -139,7 +144,7 @@@@ if(Java_JAVA_EXECUTABLE)
       # 2. OpenJDK 1.6
       # 3. GCJ 1.5
       # 4. Kaffe 1.4.2
-      # 5. OpenJDK 1.7.x on OpenBSD
+      # 5. OpenJDK 1.8.x on OpenBSD
       if(var MATCHES "java version \"([0-9]+\\.[0-9]+\\.[0-9_.]+.*)\"")
         # This is most likely Sun / OpenJDK, or maybe GCJ-java compat layer
         set(Java_VERSION_STRING "${CMAKE_MATCH_1}")
@@@@ -150,7 +155,7 @@@@ if(Java_JAVA_EXECUTABLE)
         # Kaffe style
         set(Java_VERSION_STRING "${CMAKE_MATCH_1}")
       elseif(var MATCHES "openjdk version \"([0-9]+\\.[0-9]+\\.[0-9_]+.*)\"")
-        # OpenJDK ver 1.7.x on OpenBSD
+        # OpenJDK ver 1.8.x on OpenBSD
         set(Java_VERSION_STRING "${CMAKE_MATCH_1}")
       else()
         if(NOT Java_FIND_QUIETLY)
@


1.20
log
@Update for devel/jdk/1.7 removal. okay dcoppa@@ sthen@@
@
text
@d1 4
a4 3
$OpenBSD: patch-Modules_FindJava_cmake,v 1.19 2016/11/28 09:15:13 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Fri Jan 13 09:05:41 2017
+++ Modules/FindJava.cmake	Fri Apr 21 09:52:03 2017
d14 1
a14 1
@@@@ -89,19 +91,22 @@@@ list(APPEND _JAVA_HINTS
d50 1
a50 1
@@@@ -131,7 +136,7 @@@@ if(Java_JAVA_EXECUTABLE)
d59 1
a59 1
@@@@ -139,7 +144,7 @@@@ if(Java_JAVA_EXECUTABLE)
@


1.19
log
@
Update to CMake-3.7.0

Thanks to naddy@@ who ran a bulk build with it
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindJava_cmake,v 1.18 2015/12/08 17:18:59 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Fri Nov 11 15:37:13 2016
+++ Modules/FindJava.cmake	Fri Nov 25 22:31:44 2016
d13 1
a13 1
@@@@ -89,19 +91,27 @@@@ list(APPEND _JAVA_HINTS
d31 1
a31 5
+  if(MODJAVA_VER MATCHES "^1\\.8\\+?$")
+    set(_JAVA_PATHS ${LOCALBASE}/jdk-1.8.0/bin)
+  else()
+    set(_JAVA_PATHS ${LOCALBASE}/jdk-1.7.0/bin)
+  endif()
a42 1
+    ${LOCALBASE}/jdk-1.7.0/bin
d49 18
@


1.18
log
@
Update to cmake-3.4.0

tested in a bulk build by naddy@@
kde4-related failures proactively fixed by zhuk@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindJava_cmake,v 1.17 2015/09/03 07:09:25 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Thu Nov 12 16:39:50 2015
+++ Modules/FindJava.cmake	Mon Nov 23 16:20:59 2015
@@@@ -84,6 +84,8 @@@@
d13 1
a13 1
@@@@ -101,19 +103,27 @@@@ list(APPEND _JAVA_HINTS
@


1.17
log
@
Update to CMake-3.3.1

No fallout in a bulk build
OK ajacoutot@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindJava_cmake,v 1.16 2015/06/24 06:39:03 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Mon Jun  1 17:56:08 2015
+++ Modules/FindJava.cmake	Wed Jun 24 07:52:35 2015
@@@@ -71,6 +71,8 @@@@
d13 1
a13 1
@@@@ -88,19 +90,27 @@@@ list(APPEND _JAVA_HINTS
@


1.16
log
@
jdk-1.8 bits for CMake
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_FindJava_cmake,v 1.15 2014/09/11 14:45:13 dcoppa Exp $
a53 9
@@@@ -137,7 +147,7 @@@@ if(Java_JAVA_EXECUTABLE)
       elseif(var MATCHES "java full version \"kaffe-([0-9]+\\.[0-9]+\\.[0-9_]+)\"")
         # Kaffe style
         set(Java_VERSION_STRING "${CMAKE_MATCH_1}")
-      elseif(var MATCHES "openjdk version \"([0-9]+\\.[0-9]+\\.[0-9_]+)\"")
+      elseif(var MATCHES "openjdk version \"([0-9]+\\.[0-9]+\\.[0-9_]+.*)\"")
         # OpenJDK ver 1.7.x on OpenBSD
         set(Java_VERSION_STRING "${CMAKE_MATCH_1}")
       else()
@


1.15
log
@
cleanup comments; zap a couple of now meaningless comments related
to java 1.6
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindJava_cmake,v 1.14 2014/09/11 10:24:38 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Thu Jul 31 17:03:56 2014
+++ Modules/FindJava.cmake	Wed Sep  3 08:10:09 2014
d13 1
a13 1
@@@@ -88,19 +90,22 @@@@ list(APPEND _JAVA_HINTS
d31 6
a36 2
+  set(_JAVA_PATHS ${LOCALBASE}/jdk-1.7.0/bin)
+else()
d48 1
d50 1
a50 1
+endif()
d54 9
@


1.14
log
@
Update to cmake-3.0.1

Tested in a bulk build by landry@@
OK landry@@
@
text
@d1 1
a1 3
$OpenBSD: patch-Modules_FindJava_cmake,v 1.13 2014/05/12 14:47:49 dcoppa Exp $
Note: we always build with Java 1.6 even when 1.6+ requested; "+" is meaningful
for run-time only.
@


1.13
log
@kurt@@ forgot Modules/FindJava.cmake in his commit (and, while here,
fix style).
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_FindJava_cmake,v 1.12 2013/08/12 16:09:50 zhuk Exp $
d4 5
a8 5
--- Modules/FindJava.cmake.orig	Thu Jan 16 18:15:08 2014
+++ Modules/FindJava.cmake	Mon May 12 16:41:39 2014
@@@@ -56,6 +56,8 @@@@
 # (To distribute this file outside of CMake, substitute the full
 #  License text for the above reference.)
d13 3
a15 3
 set(_JAVA_HINTS
   "[HKEY_LOCAL_MACHINE\\SOFTWARE\\JavaSoft\\Java Development Kit\\2.0;JavaHome]/bin"
@@@@ -70,19 +72,22 @@@@ set(_JAVA_HINTS
@


1.12
log
@Unbreak (bulk) builds of Java-based apps using CMake: we force using JDK 1.6
to build MODJAVA_VER=1.6+ ports, and CMake should do the same. Otherwise we
could, e.g., pick up co-installed JDK 1.7, start build using it, and while
build process goes, JDK 1.7 may disappear...

Discovered while working on OpenCV 2.4, which contains Java bindings.

okay dcoppa@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_FindJava_cmake,v 1.11 2013/06/06 12:47:06 dcoppa Exp $
d4 2
a5 2
--- Modules/FindJava.cmake.orig	Fri Jun  7 19:21:34 2013
+++ Modules/FindJava.cmake	Sat Jul 27 21:48:06 2013
d15 1
a15 1
@@@@ -70,19 +72,27 @@@@ set(_JAVA_HINTS
d33 1
a33 5
+  if(MODJAVA_VER MATCHES "^1\\.6\\+?$")
+    set(_JAVA_PATHS ${LOCALBASE}/jdk-1.6.0/bin)
+  else()
+    set(_JAVA_PATHS ${LOCALBASE}/jdk-1.7.0/bin)
+  endif()
a45 1
+    ${LOCALBASE}/jdk-1.6.0/bin
@


1.11
log
@Update to cmake-2.8.11.

Tested in a bulk build by landry@@
Tested with KDE4 by zhuk@@
OK zhuk@@
@
text
@d1 5
a5 3
$OpenBSD: patch-Modules_FindJava_cmake,v 1.10 2012/12/05 11:32:04 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Tue Nov 27 14:26:32 2012
+++ Modules/FindJava.cmake	Wed Dec  5 10:19:25 2012
d15 1
a15 1
@@@@ -70,19 +72,32 @@@@ set(_JAVA_HINTS
d33 1
a33 1
+  if(MODJAVA_VER MATCHES "^1\\.6$")
d35 1
a35 6
+  elseif(MODJAVA_VER MATCHES "^1\\.6\\+$")
+    set(_JAVA_PATHS
+      ${LOCALBASE}/jdk-1.7.0/bin
+      ${LOCALBASE}/jdk-1.6.0/bin
+      )
+  else(MODJAVA_VER MATCHES "^1\\.6$")
d37 2
a38 2
+  endif(MODJAVA_VER MATCHES "^1\\.6$")
+else(MODJAVA_VER)
d52 1
a52 1
+endif(MODJAVA_VER)
@


1.10
log
@Bugfix update to cmake-2.8.10.2.
Sync patches with what has been committed upstream (kudos to Amit)
@
text
@d1 1
a1 1
$OpenBSD: patch-Modules_FindJava_cmake,v 1.9 2012/11/15 08:43:25 dcoppa Exp $
d13 1
a13 1
@@@@ -70,17 +72,32 @@@@ set(_JAVA_HINTS
d27 2
a58 19
@@@@ -107,6 +124,7 @@@@ if(Java_JAVA_EXECUTABLE)
       # 2. OpenJDK 1.6
       # 3. GCJ 1.5
       # 4. Kaffe 1.4.2
+      # 5. OpenJDK 1.7.x on OpenBSD
       if(var MATCHES "java version \"[0-9]+\\.[0-9]+\\.[0-9_.]+.*\".*")
         # This is most likely Sun / OpenJDK, or maybe GCJ-java compat layer
         string( REGEX REPLACE ".* version \"([0-9]+\\.[0-9]+\\.[0-9_.]+.*)\".*"
@@@@ -114,6 +132,10 @@@@ if(Java_JAVA_EXECUTABLE)
       elseif(var MATCHES "java full version \"kaffe-[0-9]+\\.[0-9]+\\.[0-9_]+\".*")
         # Kaffe style
         string( REGEX REPLACE "java full version \"kaffe-([0-9]+\\.[0-9]+\\.[0-9_]+).*"
+                "\\1" Java_VERSION_STRING "${var}" )
+      elseif(var MATCHES "openjdk version \"[0-9]+\\.[0-9]+\\.[0-9_]+\".*")
+        # OpenJDK ver 1.7.x on OpenBSD
+        string( REGEX REPLACE "openjdk version \"([0-9]+\\.[0-9]+\\.[0-9_]+).*"
                 "\\1" Java_VERSION_STRING "${var}" )
       else()
         if(NOT Java_FIND_QUIETLY)
@


1.9
log
@Update to cmake-2.8.10.1 (plus some fixes)

Thanks Vadim, landry@@

OK landry@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindJava_cmake,v 1.8 2012/11/11 17:13:31 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Tue Nov  6 20:41:36 2012
+++ Modules/FindJava.cmake	Mon Nov 12 14:01:59 2012
a40 2
+    ${LOCALBASE}/jdk-1.7.0/bin
+    ${LOCALBASE}/jdk-1.6.0/bin
d50 2
@


1.8
log
@Update to cmake-2.8.10.
Successfully gone through a bulk build.

Feedback landry@@, Vadim Zhukov, Amit Kulkarni
Bulk build and OK landry@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindJava_cmake,v 1.7 2012/08/31 12:28:31 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Wed Oct 31 16:32:05 2012
+++ Modules/FindJava.cmake	Fri Nov  2 10:36:27 2012
@


1.7
log
@Update to cmake-2.8.9.

"There was no cmake fallout in the bulk on amd64" jasper@@
Also tested by Brad with a handful of CMake using ports
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindJava_cmake,v 1.6 2012/01/07 22:14:51 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Thu Aug 23 11:31:02 2012
+++ Modules/FindJava.cmake	Thu Aug 23 11:33:50 2012
d8 1
a8 1
+SET(MODJAVA_VER $ENV{MODJAVA_VER})
d11 1
a11 1
 SET(_JAVA_HINTS
d13 1
a13 3
@@@@ -68,19 +70,34 @@@@ SET(_JAVA_HINTS
   "[HKEY_LOCAL_MACHINE\\SOFTWARE\\JavaSoft\\Java Development Kit\\1.3;JavaHome]/bin"
   $ENV{JAVA_HOME}/bin
d15 3
a17 3
-# Hard-coded guesses should still go in PATHS. This ensures that the user
-# environment can always override hard guesses.
-SET(_JAVA_PATHS
d28 5
a32 5
+IF(MODJAVA_VER)
+  IF(MODJAVA_VER MATCHES "^1\\.6$")
+    SET(_JAVA_PATHS ${LOCALBASE}/jdk-1.6.0/bin)
+  ELSEIF(MODJAVA_VER MATCHES "^1\\.6\\+$")
+    SET(_JAVA_PATHS
d36 5
a40 7
+  ELSE(MODJAVA_VER MATCHES "^1\\.6$")
+    SET(_JAVA_PATHS ${LOCALBASE}/jdk-1.7.0/bin)
+  ENDIF(MODJAVA_VER MATCHES "^1\\.6$")
+ELSE(MODJAVA_VER)
+  # Hard-coded guesses should still go in PATHS. This ensures that the user
+  # environment can always override hard guesses.
+  SET(_JAVA_PATHS
d53 2
a54 2
+ENDIF(MODJAVA_VER)
 FIND_PROGRAM(Java_JAVA_EXECUTABLE
d57 1
a57 1
@@@@ -107,6 +124,7 @@@@ IF(Java_JAVA_EXECUTABLE)
d62 1
a62 1
       IF(var MATCHES "java version \"[0-9]+\\.[0-9]+\\.[0-9_.]+.*\".*")
d64 3
a66 3
         STRING( REGEX REPLACE ".* version \"([0-9]+\\.[0-9]+\\.[0-9_.]+.*)\".*"
@@@@ -114,6 +132,10 @@@@ IF(Java_JAVA_EXECUTABLE)
       ELSEIF(var MATCHES "java full version \"kaffe-[0-9]+\\.[0-9]+\\.[0-9_]+\".*")
d68 1
a68 1
         STRING( REGEX REPLACE "java full version \"kaffe-([0-9]+\\.[0-9]+\\.[0-9_]+).*"
d70 1
a70 1
+      ELSEIF(var MATCHES "openjdk version \"[0-9]+\\.[0-9]+\\.[0-9_]+\".*")
d72 1
a72 1
+        STRING( REGEX REPLACE "openjdk version \"([0-9]+\\.[0-9]+\\.[0-9_]+).*"
d74 2
a75 2
       ELSE()
         IF(NOT Java_FIND_QUIETLY)
@


1.6
log
@Update to cmake-2.8.7.

Tested in a bulk build by naddy@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindJava_cmake,v 1.5 2011/10/14 17:22:10 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Fri Dec 30 17:49:56 2011
+++ Modules/FindJava.cmake	Tue Jan  3 11:03:39 2012
d66 1
a66 1
       IF(var MATCHES "java version \"[0-9]+\\.[0-9]+\\.[0-9_.]+[oem-]*\".*")
d68 1
a68 1
         STRING( REGEX REPLACE ".* version \"([0-9]+\\.[0-9]+\\.[0-9_.]+)[oem-]*\".*"
@


1.5
log
@Update to cmake-2.8.6

Fixed FindRuby.cmake module (from Vadim Zhukov)

Fixed FindJava.cmake and FindJNI.cmake modules when cmake is used
outside of our ports tree (problem reported and fix tested by
pirofti@@)

Still "100% tests passed, 0 tests failed out of 197".

No fallout in a bulk build.

OK jasper@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindJava_cmake,v 1.4 2011/09/20 11:32:36 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Tue Oct  4 18:09:24 2011
+++ Modules/FindJava.cmake	Fri Oct 14 09:54:02 2011
d13 1
a13 1
@@@@ -68,19 +70,32 @@@@ SET(_JAVA_HINTS
d31 1
a31 3
+  IF(MODJAVA_VER MATCHES "^1\\.5.*")
+    SET(_JAVA_PATHS ${LOCALBASE}/jdk-1.5.0/bin)
+  ELSEIF(MODJAVA_VER MATCHES "^1\\.6.*")
d33 6
a38 1
+  ELSE(MODJAVA_VER MATCHES "^1\\.5.*")
d40 1
a40 1
+  ENDIF(MODJAVA_VER MATCHES "^1\\.5.*")
a46 1
+    ${LOCALBASE}/jdk-1.5.0/bin
d61 1
a61 1
@@@@ -107,6 +122,7 @@@@ IF(Java_JAVA_EXECUTABLE)
d69 1
a69 1
@@@@ -114,6 +130,10 @@@@ IF(Java_JAVA_EXECUTABLE)
@


1.4
log
@Update to cmake-2.8.5

Went in a bulk without issues, ok landry@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Modules_FindJava_cmake,v 1.3 2010/11/15 11:39:09 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Fri Jul  8 14:21:44 2011
+++ Modules/FindJava.cmake	Fri Sep  9 09:53:48 2011
@@@@ -54,6 +54,8 @@@@
d13 1
a13 1
@@@@ -66,19 +68,29 @@@@ SET(_JAVA_HINTS
d32 1
a32 1
+    SET(_JAVA_PATHS /usr/local/jdk-1.5.0/bin)
d34 1
a34 1
+    SET(_JAVA_PATHS /usr/local/jdk-1.6.0/bin)
d36 1
a36 1
+    SET(_JAVA_PATHS /usr/local/jdk-1.7.0/bin)
d42 3
d59 1
a59 1
@@@@ -105,6 +117,7 @@@@ IF(Java_JAVA_EXECUTABLE)
d63 1
a63 1
+      # 5. OpenJDK 1.7 - OpenBSD
d67 1
a67 1
@@@@ -112,6 +125,10 @@@@ IF(Java_JAVA_EXECUTABLE)
d72 3
a74 3
+      ELSEIF(var MATCHES "openjdk version \"[0-9]+\\.[0-9]+\\.[0-9_]+-internal\".*")
+        # this is java OpenJDK ver 1.7.x on OpenBSD
+        STRING( REGEX REPLACE "openjdk version \"([0-9]+\\.[0-9]+\\.[0-9_]+)-internal*\".*"
@


1.3
log
@Update to cmake-2.8.3

OK sthen@@, landry@@ (who also tested this in a bulk build)
@
text
@d1 3
a3 3
$OpenBSD: patch-Modules_FindJava_cmake,v 1.2 2010/07/12 19:19:30 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Wed Nov  3 20:58:27 2010
+++ Modules/FindJava.cmake	Wed Nov 10 09:01:25 2010
d60 2
a61 2
+      # 5. OpenJDK 1.7 - OpenBSD 
       IF(var MATCHES "java version \"[0-9]+\\.[0-9]+\\.[0-9_]+[oem-]*\".*")
d63 1
a63 1
         STRING( REGEX REPLACE ".* version \"([0-9]+\\.[0-9]+\\.[0-9_]+)[oem-]*\".*"
@


1.2
log
@Fix a bug with shared libraries having OUTPUT_NAME in their target
properties.

Update to cmake-2.8.2.

While here, move to new-style LIB_DEPENDS/WANTLIB.

OK espie@@, landry@@, sthen@@
@
text
@d1 5
a5 5
$OpenBSD: patch-Modules_FindJava_cmake,v 1.1 2010/05/28 20:21:48 dcoppa Exp $
--- Modules/FindJava.cmake.orig	Mon Jun 28 17:15:57 2010
+++ Modules/FindJava.cmake	Mon Jul  5 11:23:18 2010
@@@@ -51,6 +51,8 @@@@
 # (To distributed this file outside of CMake, substitute the full
d13 1
a13 1
@@@@ -63,19 +65,29 @@@@ SET(_JAVA_HINTS
d56 1
a56 1
@@@@ -103,6 +115,7 @@@@ IF(Java_JAVA_EXECUTABLE)
d64 1
a64 1
@@@@ -110,6 +123,10 @@@@ IF(Java_JAVA_EXECUTABLE)
@


1.1
log
@Update to cmake 2.8.1 (I also take maintainership).

"This is good, commit." espie@@
@
text
@d1 4
a4 4
$OpenBSD$
--- Modules/FindJava.cmake.orig	Tue Apr  6 16:45:31 2010
+++ Modules/FindJava.cmake	Tue May 11 15:47:54 2010
@@@@ -42,6 +42,8 @@@@
d13 1
a13 1
@@@@ -54,19 +56,29 @@@@ SET(_JAVA_HINTS
d56 1
a56 14
@@@@ -82,7 +94,11 @@@@ IF(Java_JAVA_EXECUTABLE)
       OUTPUT_STRIP_TRAILING_WHITESPACE
       ERROR_STRIP_TRAILING_WHITESPACE)
     IF( res )
-      MESSAGE( FATAL_ERROR "Error executing java -version" )
+      IF(${Java_FIND_REQUIRED})
+        MESSAGE( FATAL_ERROR "Error executing java -version" )
+      ELSE()
+        MESSAGE( STATUS "Warning, could not run java --version")
+      ENDIF()
     ELSE()
       # extract major/minor version and patch level from "java -version" output
       # Tested on linux using 
@@@@ -90,6 +106,7 @@@@ IF(Java_JAVA_EXECUTABLE)
d64 1
a64 1
@@@@ -97,6 +114,10 @@@@ IF(Java_JAVA_EXECUTABLE)
@

