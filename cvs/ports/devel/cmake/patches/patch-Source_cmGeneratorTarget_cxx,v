head	1.7;
access;
symbols
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3;
locks; strict;
comment	@# @;


1.7
date	2017.08.26.17.53.35;	author dcoppa;	state Exp;
branches;
next	1.6;
commitid	GZPWWvi7dHjhVGfr;

1.6
date	2016.11.28.09.15.13;	author dcoppa;	state Exp;
branches;
next	1.5;
commitid	jOocuc05F30hpQ6W;

1.5
date	2016.08.08.07.44.48;	author dcoppa;	state Exp;
branches;
next	1.4;
commitid	r4e0Be8ugQYraWeW;

1.4
date	2016.04.29.10.34.33;	author dcoppa;	state Exp;
branches;
next	1.3;
commitid	z7Jo8sWkfT7EmMLb;

1.3
date	2015.12.18.17.20.40;	author dcoppa;	state Exp;
branches;
next	1.2;
commitid	xOdq4H94EC1a6q4Z;

1.2
date	2015.12.09.11.34.50;	author dcoppa;	state Exp;
branches;
next	1.1;
commitid	N3aAHAkTAjpDuveI;

1.1
date	2015.12.08.17.18.59;	author dcoppa;	state Exp;
branches;
next	;
commitid	AX6ONjs8OJ4jyAD6;


desc
@@


1.7
log
@
Update to CMake-3.9.1

Tests and feedback by rsadowski@@, schwarze@@
Ports bulk build by sthen@@
@
text
@$OpenBSD: patch-Source_cmGeneratorTarget_cxx,v 1.6 2016/11/28 09:15:13 dcoppa Exp $
Index: Source/cmGeneratorTarget.cxx
--- Source/cmGeneratorTarget.cxx.orig
+++ Source/cmGeneratorTarget.cxx
@@@@ -1222,11 +1222,15 @@@@ std::string cmGeneratorTarget::GetCompilePDBPath(
 
 bool cmGeneratorTarget::HasSOName(const std::string& config) const
 {
+#if !defined(__OpenBSD__)
   // soname is supported only for shared libraries and modules,
   // and then only when the platform supports an soname flag.
   return ((this->GetType() == cmStateEnums::SHARED_LIBRARY) &&
           !this->GetPropertyAsBool("NO_SONAME") &&
           this->Makefile->GetSONameFlag(this->GetLinkerLanguage(config)));
+#else
+  return false;
+#endif
 }
 
 bool cmGeneratorTarget::NeedRelinkBeforeInstall(
@@@@ -3040,9 +3044,15 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
   // Check for library version properties.
   const char* version = this->GetProperty("VERSION");
   const char* soversion = this->GetProperty("SOVERSION");
+#if defined(__OpenBSD__)
+  if (this->GetType() != cmStateEnums::SHARED_LIBRARY &&
+      this->GetType() != cmStateEnums::MODULE_LIBRARY)
+#else
   if (!this->HasSOName(config) ||
       this->Makefile->IsOn("CMAKE_PLATFORM_NO_VERSIONED_SONAME") ||
-      this->IsFrameworkOnApple()) {
+      this->IsFrameworkOnApple())
+#endif
+  {
     // Versioning is supported only for shared libraries and modules,
     // and then only when the platform supports an soname flag.
     version = CM_NULLPTR;
@@@@ -3068,6 +3078,34 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
   // The library name.
   name = prefix + base + suffix;
 
+#if defined(__OpenBSD__)
+  // Override shared library version using LIBxxx_VERSION
+  // environment variable. Needed for OpenBSD ports system.
+  if (this->GetType() == cmStateEnums::SHARED_LIBRARY ||
+      this->GetType() == cmStateEnums::MODULE_LIBRARY) {
+    std::string env_name = "LIB" + base + "_VERSION";
+    char *env_vers_cstr = getenv(env_name.c_str());
+
+    if (env_vers_cstr && strlen(env_vers_cstr) > 0) {
+      // This means an override is present.
+      std::string env_vers = std::string(env_vers_cstr);
+
+      size_t first = env_vers.find_first_of(".");
+      size_t last = env_vers.find_last_of(".");
+
+      if ((first != last) || (first == std::string::npos)) {
+        std::string msg = "Bad ";
+        msg += env_name;
+        msg += " specification: ";
+        msg += env_vers;
+        this->LocalGenerator->IssueMessage(cmake::INTERNAL_ERROR, msg);
+      } else {
+        version = env_vers_cstr;
+      }
+    }
+  }
+#endif
+
   if (this->IsFrameworkOnApple()) {
     realName = prefix;
     if (!this->Makefile->PlatformIsAppleIos()) {
@@@@ -3079,7 +3117,11 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
     soName = realName;
   } else {
     // The library's soname.
+#if !defined(__OpenBSD__)
     this->ComputeVersionedName(soName, prefix, base, suffix, name, soversion);
+#else
+    this->ComputeVersionedName(soName, prefix, base, suffix, name, version);
+#endif
 
     // The library's real name on disk.
     this->ComputeVersionedName(realName, prefix, base, suffix, name, version);
@@@@ -4223,7 +4265,21 @@@@ void cmGeneratorTarget::ComputeVersionedName(std::stri
   vName = this->Makefile->IsOn("APPLE") ? (prefix + base) : name;
   if (version) {
     vName += ".";
+#if defined(__OpenBSD__)
+    // OpenBSD-style versioning for shared libraries.
+    // Convert libname.so.X.X.X to libname.so.X.X
+    int j = 0;
+    for (int i = 0; i < (int)strlen(version); i++) {
+      if (version[i] == '.') {
+        j++;
+        if (j == 2)
+          break;
+      }
+      vName += version[i];
+    }
+#else
     vName += version;
+#endif
   }
   vName += this->Makefile->IsOn("APPLE") ? suffix : std::string();
 }
@


1.6
log
@
Update to CMake-3.7.0

Thanks to naddy@@ who ran a bulk build with it
@
text
@d1 5
a5 4
$OpenBSD: patch-Source_cmGeneratorTarget_cxx,v 1.5 2016/08/08 07:44:48 dcoppa Exp $
--- Source/cmGeneratorTarget.cxx.orig	Fri Nov 11 15:37:14 2016
+++ Source/cmGeneratorTarget.cxx	Fri Nov 25 22:31:45 2016
@@@@ -1094,11 +1094,15 @@@@ std::string cmGeneratorTarget::GetCompilePDBPath(
d12 1
a12 1
   return ((this->GetType() == cmState::SHARED_LIBRARY) &&
d21 1
a21 1
@@@@ -2810,9 +2814,15 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d26 2
a27 2
+  if (this->GetType() != cmState::SHARED_LIBRARY &&
+      this->GetType() != cmState::MODULE_LIBRARY)
d38 1
a38 1
@@@@ -2837,6 +2847,34 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d45 2
a46 2
+  if (this->GetType() == cmState::SHARED_LIBRARY ||
+      this->GetType() == cmState::MODULE_LIBRARY) {
d73 1
a73 1
@@@@ -2848,7 +2886,11 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d85 1
a85 1
@@@@ -3943,7 +3985,21 @@@@ void cmGeneratorTarget::ComputeVersionedName(std::stri
@


1.5
log
@
Update to CMake-3.6.1.

Tested in a bulk build by naddy@@: the one and only fallout has been
fixed.
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_cmGeneratorTarget_cxx,v 1.4 2016/04/29 10:34:33 dcoppa Exp $
--- Source/cmGeneratorTarget.cxx.orig	Fri Aug  5 09:09:09 2016
+++ Source/cmGeneratorTarget.cxx	Fri Aug  5 09:39:03 2016
@@@@ -1093,11 +1093,15 @@@@ std::string cmGeneratorTarget::GetCompilePDBPath(
d20 1
a20 1
@@@@ -2789,9 +2793,15 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d36 2
a37 2
     version = 0;
@@@@ -2816,6 +2826,34 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d72 1
a72 1
@@@@ -2827,7 +2865,11 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d84 1
a84 1
@@@@ -3862,7 +3904,21 @@@@ void cmGeneratorTarget::ComputeVersionedName(std::stri
@


1.4
log
@
Update to CMake-3.5.2

ok sthen@@
@
text
@d1 5
a5 5
$OpenBSD: patch-Source_cmGeneratorTarget_cxx,v 1.3 2015/12/18 17:20:40 dcoppa Exp $
--- Source/cmGeneratorTarget.cxx.orig	Wed Dec  2 16:43:21 2015
+++ Source/cmGeneratorTarget.cxx	Fri Dec 18 17:48:23 2015
@@@@ -1267,11 +1267,15 @@@@ cmGeneratorTarget::GetCompilePDBPath(const std::string
 //----------------------------------------------------------------------------
d19 2
a20 2
 //----------------------------------------------------------------------------
@@@@ -3323,9 +3327,14 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d25 2
a26 2
+  if(this->GetType() != cmState::SHARED_LIBRARY &&
+     this->GetType() != cmState::MODULE_LIBRARY)
d28 4
a31 3
   if(!this->HasSOName(config) ||
      this->Makefile->IsOn("CMAKE_PLATFORM_NO_VERSIONED_SONAME") ||
      this->IsFrameworkOnApple())
d33 1
a33 1
     {
d36 2
a37 1
@@@@ -3353,6 +3362,36 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d39 1
a39 1
   name = prefix+base+suffix;
d44 2
a45 3
+  if(this->GetType() == cmState::SHARED_LIBRARY ||
+     this->GetType() == cmState::MODULE_LIBRARY)
+    {
d61 1
a61 2
+        this->LocalGenerator->IssueMessage(cmake::INTERNAL_ERROR,
+                                     msg);
d69 1
a69 2
   if(this->IsFrameworkOnApple())
     {
d71 4
a74 3
@@@@ -3368,8 +3407,13 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
   else
   {
d77 1
a77 2
     this->ComputeVersionedName(soName, prefix, base, suffix,
                               name, soversion);
d79 1
a79 2
+    this->ComputeVersionedName(soName, prefix, base, suffix,
+                              name, version);
d83 4
a86 4
     this->ComputeVersionedName(realName, prefix, base, suffix,
@@@@ -4592,7 +4636,23 @@@@ void cmGeneratorTarget::ComputeVersionedName(std::stri
   if(version)
     {
d92 2
a93 4
+    for (int i = 0; i < (int)strlen(version); i++)
+      {
+      if (version[i] == '.')
+        {
d97 1
a97 1
+        }
d99 1
a99 1
+      }
d103 1
a103 1
     }
@


1.3
log
@
Fix pasto:

size_t last = env_vers.find_first_of(".");

should have been

size_t last = env_vers.find_last_of(".");

Spotted by zhuk@@
Gave him my ok for the diff, but he probably forgot to commit it
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmGeneratorTarget_cxx,v 1.2 2015/12/09 11:34:50 dcoppa Exp $
d4 1
a4 1
@@@@ -856,11 +856,15 @@@@ cmGeneratorTarget::GetCompilePDBPath(const std::string
d11 1
a11 1
   return ((this->GetType() == cmTarget::SHARED_LIBRARY) &&
d20 1
a20 1
@@@@ -2746,9 +2750,14 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d25 2
a26 2
+  if(this->GetType() != cmTarget::SHARED_LIBRARY &&
+     this->GetType() != cmTarget::MODULE_LIBRARY)
d30 1
a30 1
      this->Target->IsFrameworkOnApple())
d35 1
a35 1
@@@@ -2776,6 +2785,36 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d42 2
a43 2
+  if(this->GetType() == cmTarget::SHARED_LIBRARY ||
+     this->GetType() == cmTarget::MODULE_LIBRARY)
d60 2
a61 2
+        this->Makefile->IssueMessage(cmake::FATAL_ERROR,
+                                     msg.c_str());
d69 1
a69 1
   if(this->Target->IsFrameworkOnApple())
d72 1
a72 2
@@@@ -2790,9 +2829,15 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
     }
d75 1
d77 1
a77 2
     // The library's soname.
     this->Target->ComputeVersionedName(soName, prefix, base, suffix,
d80 1
a80 2
+    // The library's soname.
+    this->Target->ComputeVersionedName(soName, prefix, base, suffix,
d85 25
a109 1
     this->Target->ComputeVersionedName(realName, prefix, base, suffix,
@


1.2
log
@
... And CMake-3.4.1 (bugfixing update)
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_cmGeneratorTarget_cxx,v 1.1 2015/12/08 17:18:59 dcoppa Exp $
d3 1
a3 1
+++ Source/cmGeneratorTarget.cxx	Wed Dec  9 09:58:25 2015
d53 1
a53 1
+      size_t last = env_vers.find_first_of(".");
@


1.1
log
@
Update to cmake-3.4.0

tested in a bulk build by naddy@@
kde4-related failures proactively fixed by zhuk@@
@
text
@d1 3
a3 3
$OpenBSD$
--- Source/cmGeneratorTarget.cxx.orig	Mon Nov 23 16:23:40 2015
+++ Source/cmGeneratorTarget.cxx	Mon Nov 23 16:17:49 2015
d20 1
a20 1
@@@@ -2746,8 +2750,13 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d29 1
d35 1
a35 1
@@@@ -2775,6 +2784,36 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
d72 1
a72 1
@@@@ -2789,9 +2828,15 @@@@ void cmGeneratorTarget::GetLibraryNames(std::string& n
@

