head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.20
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.18
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.14
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.16
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.12
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.10
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.8
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.05.17.05.01.35;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Fix usage of the _POSIX_THREAD_PRIORITY_SCHEDULING macro.

from Brad
@
text
@$OpenBSD$
--- src/thread.cpp.orig	Fri Jan 16 07:27:00 2009
+++ src/thread.cpp	Tue May 15 21:52:18 2012
@@@@ -632,10 +632,7 @@@@ _cancel(cancelDefault), _start(NULL), priv(new ThreadI
 	}
 #endif
 
-#ifndef	__FreeBSD__
-#ifdef	_POSIX_THREAD_PRIORITY_SCHEDULING
-#ifdef HAVE_SCHED_GETSCHEDULER
-#define	__HAS_PRIORITY_SCHEDULING__
+#if defined(HAVE_SCHED_GETSCHEDULER) && defined(_POSIX_THREAD_PRIORITY_SCHEDULING) && (_POSIX_THREAD_PRIORITY_SCHEDULING > 0)
 	if(pri < 0 && Process::isRealtime())
 		pri = 0;
 
@@@@ -676,16 +673,10 @@@@ _cancel(cancelDefault), _start(NULL), priv(new ThreadI
 		pthread_attr_setschedpolicy(&priv->_attr, policy);
 		pthread_attr_setschedparam(&priv->_attr, &sched);
 	}
-#endif // ifdef HAVE_SCHED_GETSCHEDULER
-#endif // ifdef _POSIX_THREAD_PRIORITY_SCHEDULING
-#endif // ifndef __FreeBSD__
 
-#ifdef	__HAS_PRIORITY_SCHEDULING__
 	if(!pri)
 	        pthread_attr_setinheritsched(&priv->_attr, PTHREAD_INHERIT_SCHED);
-#else
-	pthread_attr_setinheritsched(&priv->_attr, PTHREAD_INHERIT_SCHED);
-#endif
+#endif // ifdef _POSIX_THREAD_PRIORITY_SCHEDULING
 
 	_parent = getThread();
 	priv->_throw = _parent->priv->_throw;
@
