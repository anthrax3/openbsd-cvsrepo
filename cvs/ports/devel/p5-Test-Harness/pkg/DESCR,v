head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_3_3:1.1.1.1.0.6
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.4
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.2
	OPENBSD_3_1_BASE:1.1.1.1
	shell_2001-Oct-27:1.1.1.1
	shell:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.04.26.22.11.43;	author afresh1;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.22.21.43.08;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2001.10.27.09.03.11;	author shell;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.10.27.09.03.11;	author shell;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Bring back p5-Test-Harness-3.30. Needed for p5-Module-Build-Tiny

OK sthen@@
@
text
@Although, for historical reasons, the Test::Harness distribution
takes its name from this module it now exists only to provide
TAP::Harness with an interface that is somewhat backwards compatible
with Test::Harness 2.xx. If you're writing new code consider using
TAP::Harness directly instead.

Emulation is provided for runtests and execute_tests but the pluggable
'Straps' interface that previous versions of Test::Harness supported
is not reproduced here. Straps is now available as a stand alone
module: Test::Harness::Straps.
@


1.2
log
@These Perl modules come with OpenBSD as of 3.3.
@
text
@d1 5
a5 2
By using the Test module, you can write test scripts without knowing
the exact output this module expects.
d7 4
a10 9
Perl test scripts print to standard output "ok N" for each single
test, where N is an increasing sequence of integers. The first line
output by a standard test script is "1..M" with M being the number
of tests that should be run within the test script.
Test::Harness::runtests(@@tests) runs all the testscripts named as
arguments and checks standard output for the expected "ok N" strings.

After all tests have been performed, runtests() prints some performance
statistics that are computed by the Benchmark module.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Initial import of Test-Harness-1.25

---

By using the Test module, you can write test scripts without knowing
the exact output this module expects.

@
text
@@
