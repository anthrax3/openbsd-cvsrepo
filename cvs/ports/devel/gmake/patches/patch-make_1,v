head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.2.0.8
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.0.10
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.06.25.19.47.11;	author naddy;	state Exp;
branches;
next	1.2;
commitid	Ud4QFB4K06Hxk8XP;

1.2
date	2013.10.30.23.08.56;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.08.11.32.17;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@maintenance update to 4.2.1; successfully tested in a bulk build
@
text
@$OpenBSD: patch-make_1,v 1.2 2013/10/30 23:08:56 brad Exp $

Since we install GNU make as gmake replace make with gmake in the
manpage where it makes sense.

--- make.1.orig	Sun Feb 28 18:51:00 2016
+++ make.1	Fri Jun 24 18:19:09 2016
@@@@ -1,13 +1,13 @@@@
-.TH MAKE 1 "28 February 2016" "GNU" "User Commands"
+.TH GMAKE 1 "03 March 2012" "GNU" "User Commands"
 .SH NAME
-make \- GNU make utility to maintain groups of programs
+gmake \- GNU make utility to maintain groups of programs
 .SH SYNOPSIS
-.B make
+.B gmake
 [\fIOPTION\fR]... [\fITARGET\fR]...
 .SH DESCRIPTION
 .LP
 The
-.I make
+.I gmake
 utility will determine automatically which pieces of a large program need to
 be recompiled, and issue the commands to recompile them.  The manual describes
 the GNU implementation of
@@@@ -15,15 +15,15 @@@@ the GNU implementation of
 which was written by Richard Stallman and Roland McGrath, and is currently
 maintained by Paul Smith.  Our examples show C programs, since they are very
 common, but you can use
-.B make
+.B gmake
 with any programming language whose compiler can be run with a shell command.
 In fact,
-.B make
+.B gmake
 is not limited to programs.  You can use it to describe any task where some
 files must be updated automatically from others whenever the others change.
 .LP
 To prepare to use
-.BR make ,
+.BR gmake ,
 you must write a file called the
 .I makefile
 that describes the relationships among files in your program, and the states
@@@@ -35,17 +35,17 @@@@ Once a suitable makefile exists, each time you change 
 this simple shell command:
 .sp 1
 .RS
-.B make
+.B gmake
 .RE
 .sp 1
 suffices to perform all necessary recompilations.
 The
-.B make
+.B gmake
 program uses the makefile description and the last-modification times of the
 files to decide which of the files need to be updated.  For each of those
 files, it issues the commands recorded in the makefile.
 .LP
-.B make
+.B gmake
 executes commands in the
 .I makefile
 to update one or more target
@@@@ -56,7 +56,7 @@@@ is typically a program.
 If no
 .B \-f
 option is present,
-.B make
+.B gmake
 will look for the makefiles
 .IR GNUmakefile ,
 .IR makefile ,
@@@@ -84,7 +84,7 @@@@ If
 .I makefile
 is '\-', the standard input is read.
 .LP
-.B make
+.B gmake
 updates a target if it depends on prerequisite files
 that have been modified since the target was last modified,
 or if the target does not exist.
@@@@ -111,7 +111,7 @@@@ previous one:
 is equivalent to
 .BR "\-C " /etc.
 This is typically used with recursive invocations of
-.BR make .
+.BR gmake .
 .TP 0.5i
 .B \-d
 Print debugging information in addition to normal processing.
@@@@ -119,7 +119,7 @@@@ The debugging information says which files are being c
 remaking, which file-times are being compared and with what results,
 which files actually need to be remade, which implicit rules are
 considered and which are applied---everything interesting about how
-.B make
+.B gmake
 decides what to do.
 .TP 0.5i
 .BI \-\-debug "[=FLAGS]"
@@@@ -168,7 +168,7 @@@@ If several
 options are used to specify several directories, the directories are
 searched in the order specified.
 Unlike the arguments to other flags of
-.BR make ,
+.BR gmake ,
 directories given with
 .B \-I
 flags may come directly after the flag:
@@@@ -191,7 +191,7 @@@@ option, the last one is effective.
 If the
 .B \-j
 option is given without an argument,
-.BR make
+.BR gmake
 will not limit the number of jobs that can run simultaneously.
 .TP 0.5i
 \fB\-k\fR, \fB\-\-keep\-going\fR
@@@@ -252,7 +252,7 @@@@ This also prints the version information given by the
 .B \-v
 switch (see below).
 To print the data base without trying to remake any files, use
-.IR "make \-p \-f/dev/null" .
+.IR "gmake \-p \-f/dev/null" .
 .TP 0.5i
 \fB\-q\fR, \fB\-\-question\fR
 ``Question mode''.
@@@@ -275,11 +275,11 @@@@ Cancel the effect of the
 .B \-k
 option.
 This is never necessary except in a recursive
-.B make
+.B gmake
 where
 .B \-k
 might be inherited from the top-level
-.B make
+.B gmake
 via MAKEFLAGS or if you set
 .B \-k
 in MAKEFLAGS in your environment.
@@@@ -289,7 +289,7 @@@@ Touch files (mark them up to date without really chang
 instead of running their commands.
 This is used to pretend that the commands were done, in order to fool
 future invocations of
-.BR make .
+.BR gmake .
 .TP 0.5i
 .B \-\-trace
 Information about the disposition of each target is printed (why the target is
@@@@ -297,7 +297,7 @@@@ being rebuilt and what commands are run to rebuild it)
 .TP 0.5i
 \fB\-v\fR, \fB\-\-version\fR
 Print the version of the
-.B make
+.B gmake
 program plus a copyright, a list of authors and a notice that there
 is no warranty.
 .TP 0.5i
@@@@ -306,7 +306,7 @@@@ Print a message containing the working directory
 before and after other processing.
 This may be useful for tracking down errors from complicated nests of
 recursive
-.B make
+.B gmake
 commands.
 .TP 0.5i
 .B \-\-no\-print\-directory
@@@@ -326,7 +326,7 @@@@ Without
 it is almost the same as running a
 .I touch
 command on the given file before running
-.BR make ,
+.BR gmake ,
 except that the modification time is changed only in the imagination of
 .BR make .
 .TP 0.5i
@@@@ -340,19 +340,19 @@@@ and no targets that were built failed.  A status of on
 if the
 .B \-q
 flag was used and
-.B make
+.B gmake
 determines that a target needs to be rebuilt.  A status of two will be
 returned if any errors were encountered.
 .SH "SEE ALSO"
 The full documentation for
-.B make
+.B gmake
 is maintained as a Texinfo manual.  If the
 .B info
 and
-.B make
+.B gmake
 programs are properly installed at your site, the command
 .IP
-.B info make
+.B info 'GNU make'
 .PP
 should give you access to the complete manual.
 .SH BUGS
@


1.2
log
@Upgrade to gmake 4.0.

Bulk build tested by landry@@

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-make_1,v 1.1 2011/07/08 11:32:17 jasper Exp $
d6 2
a7 2
--- make.1.orig	Sat Oct  5 19:12:18 2013
+++ make.1	Wed Oct  9 19:13:17 2013
d9 1
a9 1
-.TH MAKE 1 "03 March 2012" "GNU" "User Commands"
@


1.1
log
@- fix patch names, no binary change
@
text
@d1 1
a1 1
$OpenBSD$
d6 5
a10 5
--- make.1.orig	Thu Jun  4 08:30:27 2009
+++ make.1	Fri Jul  8 13:27:28 2011
@@@@ -1,8 +1,8 @@@@
-.TH MAKE 1 "22 August 1989" "GNU" "LOCAL USER COMMANDS"
+.TH GMAKE 1L "22 August 1989" "GNU" "LOCAL USER COMMANDS"
d15 3
a17 6
-.B "make "
+.B "gmake "
 [
 .B \-f
 .I makefile
@@@@ -18,7 +18,7 @@@@ which is made from the Texinfo source file
d20 1
a20 1
 The purpose of the
d23 10
a32 11
 utility is to determine automatically which
 pieces of a large program need to be recompiled, and issue the commands to
 recompile them.
@@@@ -27,17 +27,17 @@@@ The manual describes the GNU implementation of
 which was written by Richard Stallman and Roland McGrath, and is
 currently maintained by Paul Smith.
 Our examples show C programs, since they are most common, but you can use
-.I make
+.I gmake
 with any programming language whose compiler can be run with a
 shell command.
d34 4
a37 5
-.I make
+.I gmake
 is not limited to programs.
 You can use it to describe any task where some files must be
 updated automatically from others whenever the others change.
d40 2
a41 2
-.IR make ,
+.IR gmake ,
d44 2
a45 2
 that describes the relationships among files in your program, and the
@@@@ -49,17 +49,17 @@@@ Once a suitable makefile exists, each time you change 
d55 5
a59 5
-.I make
+.I gmake
 program uses the makefile data base and the last-modification times
 of the files to decide which of the files need to be updated.
 For each of those files, it issues the commands recorded in the data base.
d61 2
a62 2
-.I make
+.I gmake
d65 2
a66 2
 to update
@@@@ -71,7 +71,7 @@@@ is typically a program.
d70 2
a71 2
-.I make
+.I gmake
d75 1
a75 1
@@@@ -99,7 +99,7 @@@@ If
d77 1
a77 1
 is `\-', the standard input is read.
d79 2
a80 2
-.I make
+.I gmake
d84 1
a84 1
@@@@ -126,7 +126,7 @@@@ previous one:
d88 2
a89 2
-.IR make .
+.IR gmake .
d93 1
a93 1
@@@@ -134,7 +134,7 @@@@ The debugging information says which files are being c
d97 2
a98 2
-.I make
+.I gmake
d102 1
a102 1
@@@@ -181,7 +181,7 @@@@ If several
d106 2
a107 2
-.IR make ,
+.IR gmake ,
d111 1
a111 1
@@@@ -203,7 +203,7 @@@@ option, the last one is effective.
d115 2
a116 2
-.IR make
+.IR gmake
d119 2
a120 2
 .BR \-k , " \-\-keep\-going"
@@@@ -242,7 +242,7 @@@@ This also prints the version information given by the
d124 2
a125 4
-.B make
+.B gmake
 .B \-p
 .BI \-f /dev/null.
d127 3
a129 1
@@@@ -267,11 +267,11 @@@@ Cancel the effect of the
d133 2
a134 2
-.I make
+.I gmake
d138 2
a139 2
-.I make
+.I gmake
d143 1
a143 1
@@@@ -281,11 +281,11 @@@@ Touch files (mark them up to date without really chang
d147 6
a152 2
-.IR make .
+.IR gmake .
d154 1
a154 1
 .BR \-v , " \-\-version"
d156 2
a157 2
-.I make
+.I gmake
d161 1
a161 1
@@@@ -294,7 +294,7 @@@@ Print a message containing the working directory
d165 2
a166 2
-.I make
+.I gmake
d170 1
a170 1
@@@@ -314,9 +314,9 @@@@ Without
d174 2
a175 2
-.IR make ,
+.IR gmake ,
d177 1
a177 2
-.IR make .
+.IR gmake .
d179 1
a179 3
 .B \-\-warn\-undefined\-variables
 Warn when an undefined variable is referenced.
@@@@ -328,7 +328,7 @@@@ and no targets that were built failed.  A status of on
d183 2
a184 2
-.I make
+.I gmake
d188 15
@

