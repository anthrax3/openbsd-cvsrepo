head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.20
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.16
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.1.1.0.10
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.6
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.4
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	cryptopp:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.11.23.13.19.40;	author dcoppa;	state dead;
branches;
next	1.2;
commitid	lkx07lop9gGuBBc8;

1.2
date	2011.06.24.07.55.17;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2008.08.26.14.57.58;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.08.26.14.57.58;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
Update to cryptopp-5.6.3
@
text
@$OpenBSD: patch-algparam_h,v 1.2 2011/06/24 07:55:17 dcoppa Exp $
--- algparam.h.orig	Wed Jun 18 13:46:19 2008
+++ algparam.h	Fri Jun 20 15:05:20 2008
@@@@ -17,9 +17,9 @@@@ class ConstByteArrayParameter (public)
 	{
 		Assign((const byte *)data, data ? strlen(data) : 0, deepCopy);
 	}
-	ConstByteArrayParameter(const byte *data, size_t size, bool deepCopy = false)
+	ConstByteArrayParameter(const byte *data, size_t sz, bool deepCopy = false)
 	{
-		Assign(data, size, deepCopy);
+		Assign(data, sz, deepCopy);
 	}
 	template <class T> ConstByteArrayParameter(const T &string, bool deepCopy = false)
 	{
@@@@ -27,14 +27,14 @@@@ class ConstByteArrayParameter (public)
 		Assign((const byte *)string.data(), string.size(), deepCopy);
 	}
 
-	void Assign(const byte *data, size_t size, bool deepCopy)
+	void Assign(const byte *data, size_t sz, bool deepCopy)
 	{
 		if (deepCopy)
-			m_block.Assign(data, size);
+			m_block.Assign(data, sz);
 		else
 		{
 			m_data = data;
-			m_size = size;
+			m_size = sz;
 		}
 		m_deepCopy = deepCopy;
 	}
@@@@ -53,8 +53,8 @@@@ class ConstByteArrayParameter (public)
 class ByteArrayParameter
 {
 public:
-	ByteArrayParameter(byte *data = NULL, unsigned int size = 0)
-		: m_data(data), m_size(size) {}
+	ByteArrayParameter(byte *data = NULL, unsigned int sz = 0)
+		: m_data(data), m_size(sz) {}
 	ByteArrayParameter(SecByteBlock &block)
 		: m_data(block.begin()), m_size(block.size()) {}
 
@


1.2
log
@Update to cryptopp-5.6.1

'go for it' espie@@
@
text
@d1 1
a1 1
$OpenBSD: patch-algparam_h,v 1.1.1.1 2008/08/26 14:57:58 espie Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d4 41
a44 41
@@@@ -17,9 +17,9 @@@@ class ConstByteArrayParameter (public)
 	{
 		Assign((const byte *)data, data ? strlen(data) : 0, deepCopy);
 	}
-	ConstByteArrayParameter(const byte *data, size_t size, bool deepCopy = false)
+	ConstByteArrayParameter(const byte *data, size_t sz, bool deepCopy = false)
 	{
-		Assign(data, size, deepCopy);
+		Assign(data, sz, deepCopy);
 	}
 	template <class T> ConstByteArrayParameter(const T &string, bool deepCopy = false)
 	{
@@@@ -27,14 +27,14 @@@@ class ConstByteArrayParameter (public)
 		Assign((const byte *)string.data(), string.size(), deepCopy);
 	}
 
-	void Assign(const byte *data, size_t size, bool deepCopy)
+	void Assign(const byte *data, size_t sz, bool deepCopy)
 	{
 		if (deepCopy)
-			m_block.Assign(data, size);
+			m_block.Assign(data, sz);
 		else
 		{
 			m_data = data;
-			m_size = size;
+			m_size = sz;
 		}
 		m_deepCopy = deepCopy;
 	}
@@@@ -53,8 +53,8 @@@@ class ConstByteArrayParameter (public)
 class ByteArrayParameter
 {
 public:
-	ByteArrayParameter(byte *data = NULL, unsigned int size = 0)
-		: m_data(data), m_size(size) {}
+	ByteArrayParameter(byte *data = NULL, unsigned int sz = 0)
+		: m_data(data), m_size(sz) {}
 	ByteArrayParameter(SecByteBlock &block)
 		: m_data(block.begin()), m_size(block.size()) {}
 
@


1.1.1.1
log
@yet another crypto library, dependency for amule, when we get it to
work.
@
text
@@
