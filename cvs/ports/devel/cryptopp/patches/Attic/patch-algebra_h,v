head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.20
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.16
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.1.1.0.10
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.6
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.4
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	cryptopp:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.11.23.13.19.40;	author dcoppa;	state dead;
branches;
next	1.2;
commitid	lkx07lop9gGuBBc8;

1.2
date	2011.06.24.07.55.17;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2008.08.26.14.57.58;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.08.26.14.57.58;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
Update to cryptopp-5.6.3
@
text
@$OpenBSD: patch-algebra_h,v 1.2 2011/06/24 07:55:17 dcoppa Exp $
--- algebra.h.orig	Fri Aug  6 18:44:30 2010
+++ algebra.h	Sun Oct 24 10:35:46 2010
@@@@ -47,7 +47,8 @@@@ template <class T> class CRYPTOPP_NO_VTABLE AbstractRi
 	typedef T Element;
 
 	AbstractRing() {m_mg.m_pRing = this;}
-	AbstractRing(const AbstractRing &source) {m_mg.m_pRing = this;}
+	AbstractRing(const AbstractRing &source): AbstractGroup<T>(source)
+	    {m_mg.m_pRing = this;}
 	AbstractRing& operator=(const AbstractRing &source) {return *this;}
 
 	virtual bool IsUnit(const Element &a) const =0;
@@@@ -120,7 +121,7 @@@@ struct BaseAndExponent
 {
 public:
 	BaseAndExponent() {}
-	BaseAndExponent(const T &base, const E &exponent) : base(base), exponent(exponent) {}
+	BaseAndExponent(const T &b, const E &e) : base(b), exponent(e) {}
 	bool operator<(const BaseAndExponent<T, E> &rhs) const {return exponent < rhs.exponent;}
 	T base;
 	E exponent;
@


1.2
log
@Update to cryptopp-5.6.1

'go for it' espie@@
@
text
@d1 1
a1 1
$OpenBSD: patch-algebra_h,v 1.1.1.1 2008/08/26 14:57:58 espie Exp $
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- algebra.h.orig	Wed Jun 18 13:43:58 2008
+++ algebra.h	Fri Jun 20 15:06:45 2008
d5 18
a22 18
 	typedef T Element;
 
 	AbstractRing() {m_mg.m_pRing = this;}
-	AbstractRing(const AbstractRing &source) {m_mg.m_pRing = this;}
+	AbstractRing(const AbstractRing &source): AbstractGroup<T>(source) 
+	    {m_mg.m_pRing = this;}
 	AbstractRing& operator=(const AbstractRing &source) {return *this;}
 
 	virtual bool IsUnit(const Element &a) const =0;
@@@@ -120,7 +121,7 @@@@ struct BaseAndExponent
 {
 public:
 	BaseAndExponent() {}
-	BaseAndExponent(const T &base, const E &exponent) : base(base), exponent(exponent) {}
+	BaseAndExponent(const T &b, const E &e) : base(b), exponent(e) {}
 	bool operator<(const BaseAndExponent<T, E> &rhs) const {return exponent < rhs.exponent;}
 	T base;
 	E exponent;
@


1.1.1.1
log
@yet another crypto library, dependency for amule, when we get it to
work.
@
text
@@
