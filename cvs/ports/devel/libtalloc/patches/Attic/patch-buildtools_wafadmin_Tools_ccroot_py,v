head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.04.12.17.39.20;	author jca;	state dead;
branches;
next	1.1;
commitid	bUqNoXE60UlrfcH6;

1.1
date	2015.07.18.02.13.25;	author jca;	state Exp;
branches
	1.1.2.1;
next	;
commitid	tD1kClXXuCowJZUN;

1.1.2.1
date	2016.04.17.17.03.06;	author jca;	state dead;
branches;
next	;
commitid	t0iUAtX18czPDRsn;


desc
@@


1.2
log
@Update to talloc-2.1.3, needed for the upcoming samba update.

i386 build by danj@@, ok sthen@@
@
text
@$OpenBSD: patch-buildtools_wafadmin_Tools_ccroot_py,v 1.1 2015/07/18 02:13:25 jca Exp $

- badly computed target name, install fails

- at build time, encode the full library name + version in the SONAME

- remove openbsd-specific tests, install fails

--- buildtools/wafadmin/Tools/ccroot.py.orig	Tue Mar 10 06:28:31 2015
+++ buildtools/wafadmin/Tools/ccroot.py	Thu Jul 16 14:29:24 2015
@@@@ -183,10 +183,6 @@@@ def get_target_name(self):
 			# include the version in the dll file name,
 			# the import lib file name stays unversionned.
 			name = name + '-' + nums[0]
-		elif self.env.DEST_OS == 'openbsd':
-			pattern = '%s.%s' % (pattern, nums[0])
-			if len(nums) >= 2:
-				pattern += '.%s' % nums[1]
 
 	return os.path.join(dir, pattern % name)
 
@@@@ -594,7 +590,10 @@@@ def apply_vnum(self):
 		name2 = libname + '.' + nums[0]
 
 	if self.env.SONAME_ST:
-		v = self.env.SONAME_ST % name2
+		if sys.platform.startswith('openbsd'):
+			v = self.env.SONAME_ST % name3
+		else:
+			v = self.env.SONAME_ST % name2
 		self.env.append_value('LINKFLAGS', v.split())
 
 	bld = self.bld
@@@@ -603,17 +602,12 @@@@ def apply_vnum(self):
 	path = self.install_path
 	if not path: return
 
-	if self.env.DEST_OS == 'openbsd':
-		libname = self.link_task.outputs[0].name
-		bld.install_as('%s%s%s' % (path, os.sep, libname), node, env=self.env)
-	else:
-		bld.install_as(path + os.sep + name3, node, env=self.env)
-		bld.symlink_as(path + os.sep + name2, name3)
-		bld.symlink_as(path + os.sep + libname, name3)
+	bld.install_as(path + os.sep + name3, node, env=self.env)
+	bld.symlink_as(path + os.sep + name2, name3)
+	bld.symlink_as(path + os.sep + libname, name3)
 
 	# the following task is just to enable execution from the build dir :-/
-	if self.env.DEST_OS != 'openbsd':
-		self.create_task('vnum', node, [node.parent.find_or_declare(name2), node.parent.find_or_declare(name3)])
+	self.create_task('vnum', node, [node.parent.find_or_declare(name2), node.parent.find_or_declare(name3)])
 
 def exec_vnum_link(self):
 	for x in self.outputs:
@


1.1
log
@Update to talloc-2.1.2

Bite the bullet and switch to an upstream version that uses waf*.  The
plan is to use databases/tdb and devel/libtalloc in the samba4 port, and
thus to keep those ports in sync with whatever bundled version comes
with the samba4 tarball.

* trying to make sense of the waf patches is highly discouraged

While here, take maintainership.

This is a SHARED_ONLY port, and a python module is now provided.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@Update to talloc-2.1.3, needed to backport recent samba updates.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-buildtools_wafadmin_Tools_ccroot_py,v 1.1 2015/07/18 02:13:25 jca Exp $
@


