head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.04.22.11.44.48;	author jca;	state Exp;
branches;
next	1.2;
commitid	PuH7yXhSI51DKJCA;

1.2
date	2016.04.12.17.39.20;	author jca;	state Exp;
branches;
next	1.1;
commitid	bUqNoXE60UlrfcH6;

1.1
date	2015.07.18.02.13.25;	author jca;	state Exp;
branches
	1.1.2.1;
next	;
commitid	tD1kClXXuCowJZUN;

1.1.2.1
date	2016.04.17.17.03.06;	author jca;	state Exp;
branches;
next	;
commitid	t0iUAtX18czPDRsn;


desc
@@


1.3
log
@Update to talloc-2.1.6
@
text
@$OpenBSD: patch-buildtools_wafsamba_samba_install_py,v 1.2 2016/04/12 17:39:20 jca Exp $

- respect OpenBSD shared libraries versioning
- --version-script fails if specified multipled times

--- buildtools/wafsamba/samba_install.py.orig	Thu Dec 10 12:01:40 2015
+++ buildtools/wafsamba/samba_install.py	Sun Apr 17 19:31:51 2016
@@@@ -117,11 +117,15 @@@@ def install_library(self):
             else:
                 inst_name    = bld.make_libname(t.target)
         elif self.vnum:
+            import sys
             vnum_base    = self.vnum.split('.')[0]
             install_name = bld.make_libname(target_name, version=self.vnum)
-            install_link = bld.make_libname(target_name, version=vnum_base)
-            inst_name    = bld.make_libname(t.target)
-            if not self.private_library:
+            if sys.platform.startswith('openbsd'):
+                install_link = install_name
+            else:
+                install_link = bld.make_libname(target_name, version=vnum_base)
+            inst_name    = bld.make_libname(t.target, version=self.vnum)
+            if not self.private_library and not sys.platform.startswith('openbsd'):
                 # only generate the dev link for non-bundled libs
                 dev_link     = bld.make_libname(target_name)
         elif getattr(self, 'soname', ''):
@@@@ -171,7 +175,7 @@@@ def apply_vscript(self):
     '''add version-script arguments to library build'''
 
     if self.env.HAVE_LD_VERSION_SCRIPT and getattr(self, 'version_script', ''):
-        self.env.append_value('LINKFLAGS', "-Wl,--version-script=%s" %
+        self.env.append_unique('LINKFLAGS', "-Wl,--version-script=%s" %
             self.version_script)
         self.version_script = None
 
@


1.2
log
@Update to talloc-2.1.3, needed for the upcoming samba update.

i386 build by danj@@, ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 5
a10 3
--- buildtools/wafsamba/samba_install.py.orig	Sat Jun 13 03:00:10 2015
+++ buildtools/wafsamba/samba_install.py	Mon Apr 11 00:57:00 2016
@@@@ -117,9 +117,12 @@@@ def install_library(self):
d12 1
d27 1
a27 1
@@@@ -169,7 +172,7 @@@@ def apply_vscript(self):
@


1.1
log
@Update to talloc-2.1.2

Bite the bullet and switch to an upstream version that uses waf*.  The
plan is to use databases/tdb and devel/libtalloc in the samba4 port, and
thus to keep those ports in sync with whatever bundled version comes
with the samba4 tarball.

* trying to make sense of the waf patches is highly discouraged

While here, take maintainership.

This is a SHARED_ONLY port, and a python module is now provided.

ok sthen@@
@
text
@d3 2
a4 3
- install_link is used so encode the SONAME; use of SONAME is currenty
  needed since the installed library is created with an improper name
  (eg "libsomething.inst.so")
d6 27
a32 19
- no need to setup symlinks on OpenBSD

--- buildtools/wafsamba/samba_install.py.orig	Thu Jul 16 14:21:29 2015
+++ buildtools/wafsamba/samba_install.py	Thu Jul 16 14:25:29 2015
@@@@ -112,9 +112,12 @@@@ def install_library(self):
     elif self.vnum:
         vnum_base    = self.vnum.split('.')[0]
         install_name = bld.make_libname(target_name, version=self.vnum)
-        install_link = bld.make_libname(target_name, version=vnum_base)
+        if sys.platform.startswith('openbsd'):
+            install_link = install_name
+        else:
+            install_link = bld.make_libname(target_name, version=vnum_base)
         inst_name    = bld.make_libname(t.target)
-        if not self.private_library:
+        if not self.private_library and not sys.platform.startswith('openbsd'):
             # only generate the dev link for non-bundled libs
             dev_link     = bld.make_libname(target_name)
     elif getattr(self, 'soname', ''):
@


1.1.2.1
log
@Update to talloc-2.1.3, needed to backport recent samba updates.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-buildtools_wafsamba_samba_install_py,v 1.2 2016/04/12 17:39:20 jca Exp $
d3 3
a5 2
- respect OpenBSD shared libraries versioning
- --version-script fails if specified multipled times
d7 19
a25 27
--- buildtools/wafsamba/samba_install.py.orig	Sat Jun 13 03:00:10 2015
+++ buildtools/wafsamba/samba_install.py	Mon Apr 11 00:57:00 2016
@@@@ -117,9 +117,12 @@@@ def install_library(self):
         elif self.vnum:
             vnum_base    = self.vnum.split('.')[0]
             install_name = bld.make_libname(target_name, version=self.vnum)
-            install_link = bld.make_libname(target_name, version=vnum_base)
-            inst_name    = bld.make_libname(t.target)
-            if not self.private_library:
+            if sys.platform.startswith('openbsd'):
+                install_link = install_name
+            else:
+                install_link = bld.make_libname(target_name, version=vnum_base)
+            inst_name    = bld.make_libname(t.target, version=self.vnum)
+            if not self.private_library and not sys.platform.startswith('openbsd'):
                 # only generate the dev link for non-bundled libs
                 dev_link     = bld.make_libname(target_name)
         elif getattr(self, 'soname', ''):
@@@@ -169,7 +172,7 @@@@ def apply_vscript(self):
     '''add version-script arguments to library build'''
 
     if self.env.HAVE_LD_VERSION_SCRIPT and getattr(self, 'version_script', ''):
-        self.env.append_value('LINKFLAGS', "-Wl,--version-script=%s" %
+        self.env.append_unique('LINKFLAGS', "-Wl,--version-script=%s" %
             self.version_script)
         self.version_script = None
 
@


