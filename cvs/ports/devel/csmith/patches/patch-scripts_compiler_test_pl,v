head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.6
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.4
	OPENBSD_5_8_BASE:1.1.1.1
	daniel_2015-Apr-30:1.1.1.1
	daniel:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.05.01.00.38.29;	author daniel;	state Exp;
branches
	1.1.1.1;
next	;
commitid	7JY97MlIhnKMNiIj;

1.1.1.1
date	2015.05.01.00.38.29;	author daniel;	state Exp;
branches;
next	;
commitid	7JY97MlIhnKMNiIj;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- scripts/compiler_test.pl.orig	Wed Dec 31 16:46:24 2014
+++ scripts/compiler_test.pl	Thu Jan 22 01:32:39 2015
@@@@ -237,7 +237,7 @@@@ sub test_one ($) {
     # run Csmith until generate a big enough program
     while (1) {
         unlink $cfile;
-        my $cmd = "$CSMITH_HOME/src/csmith $CSMITH_USER_OPTIONS --output $cfile";
+        my $cmd = "${PREFIX}/bin/csmith $CSMITH_USER_OPTIONS --output $cfile";
         my ($res, $exitcode) = runit($cmd, $CSMITH_TIMEOUT,  "csmith.out"); 
         # print "after run csmith: $res, $exitcode\n";
 	
@


1.1.1.1
log
@import csmith.

Csmith is a tool that can generate random C programs that statically
and dynamically conform to the C99 standard. It is useful for
stress-testing compilers, static analyzers, and other tools that
process C code.

ok jca@@ (some time ago)

@
text
@@
