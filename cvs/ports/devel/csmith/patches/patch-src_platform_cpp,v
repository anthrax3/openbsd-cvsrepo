head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.10
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	daniel_2015-Apr-30:1.1.1.1
	daniel:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.08.05.22.49.59;	author tobiasu;	state Exp;
branches;
next	1.1;
commitid	aElD4ZAYgwoqXu7F;

1.1
date	2015.05.01.00.38.29;	author daniel;	state Exp;
branches
	1.1.1.1;
next	;
commitid	7JY97MlIhnKMNiIj;

1.1.1.1
date	2015.05.01.00.38.29;	author daniel;	state Exp;
branches;
next	;
commitid	7JY97MlIhnKMNiIj;


desc
@@


1.2
log
@Use arc4random instead of x86/powerpc specific cpu time counters as a
random seed.
Unbreaks all non-x86 architectures.

ok daniel@@, post-ports-lock ok from sthen@@
@
text
@$OpenBSD: patch-src_platform_cpp,v 1.1.1.1 2015/05/01 00:38:29 daniel Exp $

- No sys/timeb.h on OpenBSD
- Generate a seed more portably.

--- src/platform.cpp.orig	Wed Dec 31 16:46:24 2014
+++ src/platform.cpp	Fri Jul 31 22:24:40 2015
@@@@ -40,50 +40,15 @@@@
 // Platform-Specific code to get a unique seed value (usually from the tick counter, etc)
 //
 #include <sys/types.h>
-#include <sys/timeb.h>
+#include <stdlib.h>
 
 #include "platform.h"
 
-#if (TARGET_CPU_powerpc == 1 || TARGET_CPU_powerpc64 == 1)
-/*For PPC, got from:
-http://lists.ozlabs.org/pipermail/linuxppc-dev/1999-October/003889.html
-*/
-static unsigned long long read_time(void) {
-	unsigned long long retval;
-	unsigned long junk;
-	__asm__ __volatile__ ("\n\
-1:	mftbu %1\n\
-	mftb %L0\n\
-	mftbu %0\n\
-	cmpw %0,%1\n\
-	bne 1b"
-	: "=r" (retval), "=r" (junk));
-	return retval;
-}
-#else
-#ifdef WIN32
-static unsigned __int64 read_time(void) {
-        unsigned l, h;
-        _asm {rdtsc    
-        mov l, eax  
-        mov h, edx 
-        }
-        return (h << 32) + l ;
-}
-#else
-static long long read_time(void) {
-        long long l;
-        asm volatile(   "rdtsc\n\t"
-                : "=A" (l)
-        );
-        return l;
-}
-#endif
-#endif
-
 unsigned long platform_gen_seed()
 {
-	return (long) read_time();
+	unsigned long seed;
+	arc4random_buf(&seed, sizeof(unsigned long));
+	return seed;
 }
 
 //////////// platform specific mkdir /////////////////
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 1
No sys/timeb.h on OpenBSD.
d6 3
a8 3
--- src/platform.cpp.orig	Thu Jan 15 19:36:30 2015
+++ src/platform.cpp	Thu Jan 15 19:36:38 2015
@@@@ -40,7 +40,6 @@@@
d13 1
d17 46
@


1.1.1.1
log
@import csmith.

Csmith is a tool that can generate random C programs that statically
and dynamically conform to the C99 standard. It is useful for
stress-testing compilers, static analyzers, and other tools that
process C code.

ok jca@@ (some time ago)

@
text
@@
