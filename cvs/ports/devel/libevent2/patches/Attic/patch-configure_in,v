head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2013.11.11.21.54.57;	author landry;	state dead;
branches;
next	1.1;

1.1
date	2013.10.22.19.55.11;	author jca;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Instead of shuffling things around after arc4random_addrandom() removal,
take a stronger stance and remove evutil_secure_rng_add_bytes() from
libevent's API. Nothing calls it anyway, and there's even a big scary
warning (tm) in libevent's header..

---
You should almost never need to call this function; it should be
sufficient to invoke evutil_secure_rng_init(), or let Libevent take
care of calling evutil_secure_rng_init() on its own.

If you call this function as a _replacement_ for the regular
entropy sources, then you need to be sure that your input
contains a fairly large amount of strong entropy.  Doing so is
notoriously hard: most people who try get it wrong.  Watch out!
---

Bump event_core major, and remove the now useless configure.in patch.

Discussed with/ok sthen@@
@
text
@$OpenBSD: patch-configure_in,v 1.1 2013/10/22 19:55:11 jca Exp $
--- configure.in.orig	Tue Oct 22 18:15:43 2013
+++ configure.in	Tue Oct 22 18:15:55 2013
@@@@ -285,7 +285,7 @@@@ AC_HEADER_TIME
 
 dnl Checks for library functions.
 AC_CHECK_FUNCS([gettimeofday vasprintf fcntl clock_gettime strtok_r strsep])
-AC_CHECK_FUNCS([getnameinfo strlcpy inet_ntop inet_pton signal sigaction strtoll inet_aton pipe eventfd sendfile mmap splice arc4random arc4random_buf issetugid geteuid getegid getprotobynumber setenv unsetenv putenv sysctl])
+AC_CHECK_FUNCS([getnameinfo strlcpy inet_ntop inet_pton signal sigaction strtoll inet_aton pipe eventfd sendfile mmap splice arc4random arc4random_buf arc4random_addrandom issetugid geteuid getegid getprotobynumber setenv unsetenv putenv sysctl])
 AC_CHECK_FUNCS([umask])
 
 AC_CACHE_CHECK(
@


1.1
log
@Fixup after arc4random_addrandom/arc4random_stir removal.
If we can detect arc4random but not mentioned functions, then we don't
need to use them.  ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
@

