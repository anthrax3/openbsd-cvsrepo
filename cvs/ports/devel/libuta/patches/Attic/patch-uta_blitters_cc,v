head	1.5;
access;
symbols
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.24
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.22
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.20
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.18
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.10
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.8
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	pvalchev_2001-July-28:1.1.1.1
	pvalchev:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2011.01.04.08.37.09;	author jasper;	state dead;
branches;
next	1.4;

1.4
date	2010.05.22.16.11.34;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.04.20.32.29;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.06.23.23.56;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.28.07.16.23;	author pvalchev;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.07.28.07.16.23;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.5
log
@- remove libsigc++ and it's only dependant port in tree.

both are old, dead upstream, and now unused intree.
devel/libsigc++ has been superseded years ago by devel/libsigc++-2

ok pvalchev@@
@
text
@$OpenBSD: patch-uta_blitters_cc,v 1.4 2010/05/22 16:11:34 espie Exp $
--- uta/blitters.cc.orig	Sat Oct 12 23:11:07 2002
+++ uta/blitters.cc	Sat May 22 18:00:00 2010
@@@@ -20,6 +20,7 @@@@
 
 #include "blitters.h"
 #include <painter.h>
+#include <iosfwd>
 
 namespace uta {
 
@@@@ -35,7 +36,7 @@@@ void gammablit_RGBA8888_RGBA8888(Surface* dst, const S
 				 char g, 
 				 const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
 }
 
 /** Convert RGBA8888 to RGB565 and apply const gamma value.
@@@@ -45,7 +46,7 @@@@ void gammablit_RGBA8888_RGB565(Surface* dst, const Sur
 			       char g, 
 			       const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
 }
 
 /** Apply const gamma value.
@@@@ -54,7 +55,7 @@@@ void gammablit_RGB565_RGB565(Surface* dst, const Surfa
 			     char g, 
 			     const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
 }
 
 /** Apply per pixel gamma value.
@@@@ -64,7 +65,7 @@@@ void gammablit_RGBA8888_RGBA8888(Surface* dst, const S
 				 GammaFunction* func, 
 				 const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
 }
 
 /** Convert RGBA8888 to RGB565 and apply per pixel gamma value.
@@@@ -74,7 +75,7 @@@@ void gammablit_RGBA8888_RGB565(Surface* dst, const Sur
 			       GammaFunction* func, 
 			       const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
 }
 
 /** Apply per pixel gamma value.
@@@@ -83,7 +84,7 @@@@ void gammablit_RGB565_RGB565(Surface* dst, const Surfa
 			     GammaFunction* func, 
 			     const Rect& srcRect, const Point& dstPoint)
 {
-  cerr << "processor seems not to be MMX capable, sorry. " << endl;
+  std::cerr << "processor seems not to be MMX capable, sorry. " << std::endl;
 }
 
 #else  // ! X86_ASSEMBLER
@


1.4
log
@friends don't decl
@
text
@d1 1
a1 1
$OpenBSD: patch-uta_blitters_cc,v 1.3 2004/01/04 20:32:29 pvalchev Exp $
@


1.3
log
@update to libuta-0.4.4
gcc3 patch from espie
@
text
@d1 3
a3 3
$OpenBSD$
--- uta/blitters.cc.orig	2004-01-04 15:27:06.000000000 +0100
+++ uta/blitters.cc	2004-01-04 15:28:30.000000000 +0100
d12 1
a12 1
@@@@ -35,7 +36,7 @@@@ void gammablit_RGBA8888_RGBA8888(Surface
d21 1
a21 1
@@@@ -45,7 +46,7 @@@@ void gammablit_RGBA8888_RGB565(Surface* 
d30 1
a30 1
@@@@ -54,7 +55,7 @@@@ void gammablit_RGB565_RGB565(Surface* ds
d39 1
a39 1
@@@@ -64,7 +65,7 @@@@ void gammablit_RGBA8888_RGBA8888(Surface
d48 1
a48 1
@@@@ -74,7 +75,7 @@@@ void gammablit_RGBA8888_RGB565(Surface* 
d57 1
a57 1
@@@@ -83,7 +84,7 @@@@ void gammablit_RGB565_RGB565(Surface* ds
@


1.2
log
@fix some stupid typos in the non-i386 code that prevented this from
compiling on anything but i386
beatify other part while here

sparc breakage reported to me by naddy a while ago, tested on ppc
@
text
@d1 5
a5 4
$OpenBSD: patch-uta_blitters_cc,v 1.1.1.1 2001/07/28 07:16:23 pvalchev Exp $
--- uta/blitters.cc.orig	Mon Apr  9 17:25:05 2001
+++ uta/blitters.cc	Wed Sep  5 16:45:59 2001
@@@@ -1,9 +1,12 @@@@
d7 2
a8 2
-#include <uta/painter.h>
+#include <painter.h>
d12 16
a27 5
-#ifndef X86_ASSEMBLER
+#ifdef __OpenBSD__
+#undef X86_ASSEMBLER
+#endif
+#if !defined(X86_ASSEMBLER)
d30 33
a62 17
     Blit just copies alpha value of the source to the destination surface.
@@@@ -1599,7 +1602,7 @@@@ void gammablit(Surface* dst, const Surfa
       gammablit_C(dst,src,g,srcRect,dstPoint);
     }
 #else
-  gammablit_C(dst,src,g,srcRect,dstPoint)
+  gammablit_C(dst,src,g,srcRect,dstPoint);
 #endif
 }
 
@@@@ -1626,7 +1629,7 @@@@ void gammablit(Surface* dst, const Surfa
       gammablit_C(dst,src,func,srcRect,dstPoint);
     }
 #else
-  gammablit_C(dst,src,func,srcRect,dstPoint)
+  gammablit_C(dst,src,func,srcRect,dstPoint);
 #endif
d65 1
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- uta/blitters.cc.orig	Tue Apr 10 01:46:28 2001
+++ uta/blitters.cc	Mon Jul 23 12:44:54 2001
@@@@ -1,9 +1,9 @@@@
d12 4
a15 1
+#if !defined(X86_ASSEMBLER) || (defined(__OpenBSD__) && defined(__i386__))
d19 18
@


1.1.1.1
log
@Import of libuta-0.3.39

libuta is a Graphical User Interface library for C++ that uses SDL as
its output layer.  It allows application and game programmers to put
together portable graphical applications easily.  libuta has a range
of already implemented widgets and uses libsigc++ as a signal
dispatching system.  It also performs resource management and has a
sound system.

WWW: http://libuta.sourceforge.net/
@
text
@@
