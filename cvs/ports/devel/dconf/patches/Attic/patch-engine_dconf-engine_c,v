head	1.9;
access;
symbols
	OPENBSD_5_2:1.8.0.2
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	ajacoutot_20101027:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2012.09.27.08.32.05;	author ajacoutot;	state dead;
branches;
next	1.8;

1.8
date	2012.03.29.06.26.38;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2011.09.27.06.25.10;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.02.18.50.55;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2011.05.09.08.43.45;	author ajacoutot;	state dead;
branches;
next	1.4;

1.4
date	2011.05.08.12.20.37;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2011.04.05.18.45.05;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2010.11.21.09.31.32;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.27.10.50.04;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.10.27.10.50.04;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update to dconf-0.14.0.
@
text
@$OpenBSD: patch-engine_dconf-engine_c,v 1.8 2012/03/29 06:26:38 ajacoutot Exp $
--- engine/dconf-engine.c.orig	Mon Mar 26 16:29:26 2012
+++ engine/dconf-engine.c	Wed Mar 28 21:10:21 2012
@@@@ -144,6 +144,11 @@@@ dconf_engine_refresh_user (DConfEngine *engine,
 {
   g_assert ((engine->gvdbs[i] == NULL) >= (engine->shm[i] == NULL));
 
+#ifdef __OpenBSD__
+  if (engine->shm)
+    msync (engine->shm[i], 1, MS_INVALIDATE);
+#endif
+
   /* if we failed the first time, fail forever */
   if (engine->shm[i] && *engine->shm[i] == 1)
     {
@


1.8
log
@Update to dconf-0.12.0.
This starts the update to GNOME 3.4.
@
text
@d1 1
a1 1
$OpenBSD: patch-engine_dconf-engine_c,v 1.7 2011/09/27 06:25:10 ajacoutot Exp $
@


1.7
log
@Update to dconf-0.10.0.
@
text
@d1 4
a4 4
$OpenBSD: patch-engine_dconf-engine_c,v 1.6 2011/07/02 18:50:55 ajacoutot Exp $
--- engine/dconf-engine.c.orig	Sun Sep 11 21:07:26 2011
+++ engine/dconf-engine.c	Tue Sep 27 08:11:51 2011
@@@@ -142,6 +142,11 @@@@ dconf_engine_refresh_user (DConfEngine *engine)
d6 1
a6 1
   g_assert ((engine->gvdbs[0] == NULL) >= (engine->shm == NULL));
d10 1
a10 1
+    msync (engine->shm, 1, MS_INVALIDATE);
d14 1
a14 1
   if (engine->shm && *engine->shm == 1)
@


1.6
log
@Synchronise engine->shm using msync(2) in dconf_engine_refresh_user so
that dconf-engine is able to pick up key changes.

debug/fix by robert@@ and myself, input from ariane@@
@
text
@d1 4
a4 4
$OpenBSD$
--- engine/dconf-engine.c.orig	Sat Jul  2 20:42:36 2011
+++ engine/dconf-engine.c	Sat Jul  2 20:43:47 2011
@@@@ -191,6 +191,11 @@@@ dconf_engine_refresh_user (DConfEngine *engine)
@


1.5
log
@Bugfix update to dconf-0.7.5.
This should be the latest release before the new stable 0.8.
@
text
@d1 6
a6 21
$OpenBSD: patch-engine_dconf-engine_c,v 1.4 2011/05/08 12:20:37 ajacoutot Exp $

From c80896f5644ec0a07822047dd7e899da63b42e89 Mon Sep 17 00:00:00 2001
From: Ryan Lortie <desrt@@desrt.ca>
Date: Sun, 08 May 2011 12:08:38 +0000
Subject: Fix crash when user database is not present

--- engine/dconf-engine.c.orig	Fri May  6 14:45:33 2011
+++ engine/dconf-engine.c	Sun May  8 14:15:42 2011
@@@@ -452,7 +452,11 @@@@ dconf_engine_read_internal (DConfEngine  *engine,
       break;
 
   while (i < limit && value == NULL)
-    value = gvdb_table_get_value (engine->gvdbs[i++], key);
+    {
+      if (engine->gvdbs[i] != NULL)
+        value = gvdb_table_get_value (engine->gvdbs[i], key);
+      i++;
+    }
 
   g_static_mutex_unlock (&engine->lock);
d8 8
@


1.4
log
@Fix crash when user database is not present (from upstream).
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@Update to dconf-0.7.3.
dconf-editor is now using gtk+3 (yay, our first gtk+3 app in tree!).
@
text
@d1 11
a11 4
$OpenBSD: patch-engine_dconf-engine_c,v 1.2 2010/11/21 09:31:32 ajacoutot Exp $
--- engine/dconf-engine.c.orig	Wed Aug  4 17:40:53 2010
+++ engine/dconf-engine.c	Sun Nov 21 10:26:00 2010
@@@@ -144,7 +144,7 @@@@ dconf_engine_setup_user (DConfEngine *engine)
d13 9
a21 6
           if (fd >= 0)
             {
-              if (posix_fallocate (fd, 0, 1) == 0)
+              if (ftruncate (fd, 1) == 0)
                 {
                   engine->shm = mmap (NULL, 1, PROT_READ, MAP_SHARED, fd, 0);
@


1.2
log
@Use ftruncate(2), from FreeBSD.
@
text
@d1 1
a1 1
$OpenBSD: patch-engine_dconf-engine_c,v 1.1.1.1 2010/10/27 10:50:04 ajacoutot Exp $
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- engine/dconf-engine.c.orig	Tue Oct 26 20:09:23 2010
+++ engine/dconf-engine.c	Tue Oct 26 20:09:49 2010
@@@@ -144,6 +144,7 @@@@ dconf_engine_setup_user (DConfEngine *engine)
d8 2
a9 2
+#ifndef __OpenBSD__
               if (posix_fallocate (fd, 0, 1) == 0)
a11 3
@@@@ -152,6 +153,7 @@@@ dconf_engine_setup_user (DConfEngine *engine)
                     engine->shm = NULL;
                 }
a12 4
+#endif
               close (fd);
             }
         }
@


1.1.1.1
log
@Import dconf-0.5.1

dconf is a low-level configuration system. Its main purpose is to
provide a backend to GSettings on platforms that don't already have
configuration storage systems.

ok jasper@@
@
text
@@
