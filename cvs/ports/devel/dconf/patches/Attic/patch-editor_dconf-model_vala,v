head	1.9;
access;
symbols
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5;
locks; strict;
comment	@# @;


1.9
date	2013.03.29.07.31.01;	author ajacoutot;	state dead;
branches;
next	1.8;

1.8
date	2013.01.11.10.09.20;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2011.09.27.06.25.10;	author ajacoutot;	state dead;
branches;
next	1.6;

1.6
date	2011.09.12.18.20.34;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2011.06.22.16.08.15;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.30.15.51.51;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2011.05.09.08.43.45;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2011.04.05.18.45.05;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.25.07.37.15;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update to dconf-0.16.0.
@
text
@$OpenBSD: patch-editor_dconf-model_vala,v 1.8 2013/01/11 10:09:20 ajacoutot Exp $

From 2cfa1d503a0a58014778149b6c353ea1d9b446f8 Mon Sep 17 00:00:00 2001
From: Robert Ancell <robert.ancell@@canonical.com>
Date: Sun, 30 Sep 2012 22:08:08 +0000
Subject: editor: Decode schema overrides

--- editor/dconf-model.vala.orig	Thu Nov  1 16:03:15 2012
+++ editor/dconf-model.vala	Fri Jan 11 10:53:56 2013
@@@@ -601,7 +601,7 @@@@ public class SettingsModel: GLib.Object, Gtk.TreeModel
         }
 
         /* Add keys for the values in the schemas */
-        foreach (var schema in schemas.schemas)
+        foreach (var schema in schemas.schemas.get_values())
             root.load_schema(schema, schema.path[1:schema.path.length]);
     }
 
@


1.8
log
@Properly decode schema overrides in dconf-editor (from upstream).
@
text
@d1 1
a1 1
$OpenBSD$
@


1.7
log
@Update to dconf-0.10.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-editor_dconf-model_vala,v 1.6 2011/09/12 18:20:34 jasper Exp $
d3 1
a3 1
From 9d6096ff7790cb39f2cd1638d98b211556c73ff9 Mon Sep 17 00:00:00 2001
d5 2
a6 2
Date: Mon, 09 May 2011 12:25:46 +0000
Subject: Handle flags
d8 9
a16 106
From a15802bd044b93c02ecd880d0c2bcb5935b03d92 Mon Sep 17 00:00:00 2001
From: Ryan Lortie <desrt@@desrt.ca>
Date: Wed, 22 Jun 2011 15:46:40 +0000
Subject: Add change watching to dconf-editor

From a15d9621fc7019b01968df737da4f2d3772d3fb2 Mon Sep 17 00:00:00 2001
From: Ryan Lortie <desrt@@desrt.ca>
Date: Sun, 03 Jul 2011 15:10:26 +0000
Subject: Deal with incompatible changes in Vala

--- editor/dconf-model.vala.orig	Mon Sep 12 17:12:30 2011
+++ editor/dconf-model.vala	Mon Sep 12 17:12:24 2011
@@@@ -118,6 +118,12 @@@@ public class Key : GLib.Object
 
     public signal void value_changed();
 
+	void item_changed (string key) {
+		if ((key.has_suffix ("/") && full_name.has_prefix (key)) || key == full_name) {
+			value_changed ();
+		}
+	}
+
     public Key(SettingsModel model, Directory parent, string name, string full_name)
     {
         this.model = model;
@@@@ -125,6 +131,8 @@@@ public class Key : GLib.Object
         this.name = name;
         this.full_name = full_name;
         this.schema = model.schemas.keys.lookup(full_name);
+
+		model.item_changed.connect (item_changed);
     }
 
     public void set_to_default()
@@@@ -341,7 +349,11 @@@@ public class KeyModel: GLib.Object, Gtk.TreeModel
         return iter_nth_child(out iter, null, path.get_indices()[0]);
     }
 
+#if VALA_0_14
+    public Gtk.TreePath? get_path(Gtk.TreeIter iter)
+#else
     public Gtk.TreePath get_path(Gtk.TreeIter iter)
+#endif
     {
         var path = new Gtk.TreePath();
         path.append_index(get_key(iter).index);
@@@@ -456,7 +468,7 @@@@ public class EnumModel: GLib.Object, Gtk.TreeModel
             return typeof(int);
     }
     
-    private void set_iter(out Gtk.TreeIter iter, SchemaEnumValue value)
+    private void set_iter(out Gtk.TreeIter iter, SchemaValue value)
     {
         iter.stamp = 0;
         iter.user_data = value;
@@@@ -464,9 +476,9 @@@@ public class EnumModel: GLib.Object, Gtk.TreeModel
         iter.user_data3 = value;
     }
 
-    public SchemaEnumValue get_enum_value(Gtk.TreeIter iter)
+    public SchemaValue get_enum_value(Gtk.TreeIter iter)
     {
-        return (SchemaEnumValue)iter.user_data;
+        return (SchemaValue)iter.user_data;
     }
 
     public bool get_iter(out Gtk.TreeIter iter, Gtk.TreePath path)
@@@@ -477,7 +489,11 @@@@ public class EnumModel: GLib.Object, Gtk.TreeModel
         return iter_nth_child(out iter, null, path.get_indices()[0]);
     }
 
+#if VALA_0_14
+    public Gtk.TreePath? get_path(Gtk.TreeIter iter)
+#else
     public Gtk.TreePath get_path(Gtk.TreeIter iter)
+#endif
     {
         var path = new Gtk.TreePath();
         path.append_index((int)get_enum_value(iter).index);
@@@@ -556,10 +572,23 @@@@ public class SettingsModel: GLib.Object, Gtk.TreeModel
     public DConf.Client client;
     private Directory root;
 
+	public signal void item_changed (string key);
+
+	void watch_func (DConf.Client client, string path, string[] items, string tag) {
+		if (items.length == 0) {
+			item_changed (path);
+		} else {
+			foreach (var item in items) {
+				item_changed (path + item);
+			}
+		}
+	}
+
     public SettingsModel()
     {
-        client = new DConf.Client ();
+        client = new DConf.Client (null, watch_func);
         root = new Directory(this, null, "/", "/");
+		client.watch ("/");
 
         schemas = new SchemaList();
         try
@@@@ -632,7 +661,11 @@@@ public class SettingsModel: GLib.Object, Gtk.TreeModel
         return true;
a18 8
+#if VALA_0_14
+    public Gtk.TreePath? get_path(Gtk.TreeIter iter)
+#else
     public Gtk.TreePath get_path(Gtk.TreeIter iter)
+#endif
     {
         var path = new Gtk.TreePath();
         for (var d = get_directory(iter); d != root; d = d.parent)
@


1.6
log
@unbreak after recent vala update, patches from upstream

ok aja@@
@
text
@d1 1
a1 1
$OpenBSD: patch-editor_dconf-model_vala,v 1.5 2011/06/22 16:08:15 ajacoutot Exp $
@


1.5
log
@Add change watching to dconf-editor (merged from upstream).
@
text
@d1 1
a1 1
$OpenBSD: patch-editor_dconf-model_vala,v 1.4 2011/05/30 15:51:51 ajacoutot Exp $
d13 7
a19 2
--- editor/dconf-model.vala.orig	Wed Jun 22 17:50:47 2011
+++ editor/dconf-model.vala	Wed Jun 22 17:50:54 2011
d42 13
a54 1
@@@@ -456,7 +464,7 @@@@ public class EnumModel: GLib.Object, Gtk.TreeModel
d63 1
a63 1
@@@@ -464,9 +472,9 @@@@ public class EnumModel: GLib.Object, Gtk.TreeModel
d75 13
a87 1
@@@@ -556,10 +564,23 @@@@ public class SettingsModel: GLib.Object, Gtk.TreeModel
d112 12
@


1.4
log
@Merge some upstream fixes to make dconf behave better.
@
text
@d1 1
a1 1
$OpenBSD$
d8 30
a37 3
--- editor/dconf-model.vala.orig	Mon May 30 17:37:37 2011
+++ editor/dconf-model.vala	Mon May 30 17:30:46 2011
@@@@ -456,7 +456,7 @@@@ public class EnumModel: GLib.Object, Gtk.TreeModel
d46 1
a46 1
@@@@ -464,9 +464,9 @@@@ public class EnumModel: GLib.Object, Gtk.TreeModel
d58 25
@


1.3
log
@Bugfix update to dconf-0.7.5.
This should be the latest release before the new stable 0.8.
@
text
@d1 30
a30 12
$OpenBSD: patch-editor_dconf-model_vala,v 1.2 2011/04/05 18:45:05 ajacoutot Exp $
--- editor/dconf-model.vala.orig	Tue Mar 22 16:35:32 2011
+++ editor/dconf-model.vala	Tue Apr  5 14:38:47 2011
@@@@ -564,7 +564,7 @@@@ public class SettingsModel: GLib.Object, Gtk.TreeModel
         schemas = new SchemaList();
         try
         {
-            schemas.load_directory("/usr/share/glib-2.0/schemas");
+            schemas.load_directory("${LOCALBASE}/share/glib-2.0/schemas");
         } catch (Error e) {
             warning("Failed to parse schemas: %s", e.message);
         }
@


1.2
log
@Update to dconf-0.7.3.
dconf-editor is now using gtk+3 (yay, our first gtk+3 app in tree!).
@
text
@d1 1
a1 1
$OpenBSD: patch-editor_dconf-model_vala,v 1.1 2011/03/25 07:37:15 ajacoutot Exp $
@


1.1
log
@Fix path to gsettings schemas.
@
text
@d1 4
a4 4
$OpenBSD$
--- editor/dconf-model.vala.orig	Fri Mar 25 08:28:57 2011
+++ editor/dconf-model.vala	Fri Mar 25 08:29:09 2011
@@@@ -469,7 +469,7 @@@@ public class SettingsModel: GLib.Object, Gtk.TreeModel
@

