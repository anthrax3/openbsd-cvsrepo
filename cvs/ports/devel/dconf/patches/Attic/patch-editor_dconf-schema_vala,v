head	1.7;
access;
symbols
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4;
locks; strict;
comment	@# @;


1.7
date	2013.03.29.07.31.01;	author ajacoutot;	state dead;
branches;
next	1.6;

1.6
date	2013.01.11.10.09.20;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2011.09.27.06.25.10;	author ajacoutot;	state dead;
branches;
next	1.4;

1.4
date	2011.05.30.15.51.51;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2011.05.09.08.43.45;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2011.05.06.14.22.27;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.02.14.40.33;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to dconf-0.16.0.
@
text
@$OpenBSD: patch-editor_dconf-schema_vala,v 1.6 2013/01/11 10:09:20 ajacoutot Exp $

From 2cfa1d503a0a58014778149b6c353ea1d9b446f8 Mon Sep 17 00:00:00 2001
From: Robert Ancell <robert.ancell@@canonical.com>
Date: Sun, 30 Sep 2012 22:08:08 +0000
Subject: editor: Decode schema overrides

--- editor/dconf-schema.vala.orig	Thu Nov  1 16:03:15 2012
+++ editor/dconf-schema.vala	Fri Jan 11 10:53:56 2013
@@@@ -345,7 +345,7 @@@@ public class Schema
 
 public class SchemaList
 {
-    public GLib.List<Schema> schemas = new GLib.List<Schema>();
+    public GLib.HashTable<string, Schema> schemas = new GLib.HashTable<string, Schema>(str_hash, str_equal);
     public GLib.HashTable<string, SchemaKey> keys = new GLib.HashTable<string, SchemaKey>(str_hash, str_equal);
     public GLib.HashTable<string, SchemaEnum> enums = new GLib.HashTable<string, SchemaEnum>(str_hash, str_equal);
     public GLib.HashTable<string, SchemaFlags> flags = new GLib.HashTable<string, SchemaFlags>(str_hash, str_equal);
@@@@ -385,7 +385,7 @@@@ public class SchemaList
                     string full_name = schema.path + key.name;
                     keys.insert(full_name, key);
                 }
-                schemas.append(schema);
+                schemas.insert(schema.id, schema);
             }
             else if (node->name == "enum")
             {
@@@@ -407,19 +407,79 @@@@ public class SchemaList
         delete doc;
     }
 
+    public void parse_override(string path)
+    {
+        var keyfile = new KeyFile();
+        try
+        {
+            keyfile.load_from_file(path, KeyFileFlags.NONE);
+        }
+        catch (Error e)
+        {
+            warning("Failed to load override file %s: %s", path, e.message);
+            return;
+        }
+
+        foreach (var group in keyfile.get_groups())
+        {
+            var schema = schemas.lookup(group);
+            if (schema == null)
+                continue;
+
+            string[] keys;
+            try { keys = keyfile.get_keys(group); } catch (Error e) { continue; }
+
+            foreach (var key_name in keys)
+            {
+                string value;
+                try { value = keyfile.get_value(group, key_name); } catch (Error e) { continue; }
+
+                var key = schema.keys.lookup (key_name);
+                if (key == null)
+                    continue;
+
+                Variant default_value;
+                try
+                {
+                    default_value = Variant.parse(new VariantType(key.type), value);
+                }
+                catch (VariantParseError e)
+                {
+                    // ...
+                    continue;
+                }
+
+                key.default_value = default_value;
+            }
+        }
+    }
+
     public void load_directory(string dir) throws Error
     {
-        File directory = File.new_for_path(dir);
+        var directory = File.new_for_path(dir);
+
         var i = directory.enumerate_children (FileAttribute.STANDARD_NAME, 0, null);
-        FileInfo info;
-        while ((info = i.next_file (null)) != null) {
-            string name = info.get_name();
+        while (true)
+        {
+            var info = i.next_file (null);
+            if (info == null)
+                break;
+            var name = info.get_name();
 
-            if (!name.has_suffix(".gschema.xml") && !name.has_suffix(".enums.xml"))
-                continue;
+            if (name.has_suffix(".gschema.xml") || name.has_suffix(".enums.xml"))
+                parse_file(Path.build_filename(dir, name, null));
+        }
 
-            string path = Path.build_filename(dir, name, null);
-            parse_file(path);
+        i = directory.enumerate_children (FileAttribute.STANDARD_NAME, 0, null);
+        while (true)
+        {
+            var info = i.next_file (null);
+            if (info == null)
+                break;
+            var name = info.get_name();
+
+            if (name.has_suffix(".override"))
+                parse_override(Path.build_filename(dir, name, null));
         }
     }
 }
@


1.6
log
@Properly decode schema overrides in dconf-editor (from upstream).
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@Update to dconf-0.10.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-editor_dconf-schema_vala,v 1.4 2011/05/30 15:51:51 ajacoutot Exp $
d3 1
a3 1
From 9d6096ff7790cb39f2cd1638d98b211556c73ff9 Mon Sep 17 00:00:00 2001
d5 2
a6 2
Date: Mon, 09 May 2011 12:25:46 +0000
Subject: Handle flags
d8 3
a10 5
--- editor/dconf-schema.vala.orig	Mon May 30 17:37:28 2011
+++ editor/dconf-schema.vala	Mon May 30 17:30:46 2011
@@@@ -151,16 +151,14 @@@@ public class SchemaKey
     }
 }
d12 1
a12 2
-public class SchemaEnumValue : GLib.Object
+public class SchemaValue : GLib.Object
d14 11
a24 28
-    public SchemaEnum schema_enum;
     public uint index;
     public string nick;
     public int value;
 
-    public SchemaEnumValue(SchemaEnum schema_enum, uint index, string nick, int value)
+    public SchemaValue(uint index, string nick, int value)
     {
-        this.schema_enum = schema_enum;
         this.index = index;
         this.nick = nick;
         this.value = value;
@@@@ -223,7 +221,7 @@@@ public class SchemaEnum
 {
     public SchemaList list;
     public string id;
-    public GLib.List<SchemaEnumValue> values = new GLib.List<SchemaEnumValue>();
+    public GLib.List<SchemaValue> values = new GLib.List<SchemaValue>();
 
     public SchemaEnum.from_xml(SchemaList list, Xml.Node* node)
     {
@@@@ -260,7 +258,7 @@@@ public class SchemaEnum
                 //if (value < 0 || nick == null)
                 //    ?
 
-                SchemaEnumValue schema_value = new SchemaEnumValue(this, values.length(), nick, value);
+                var schema_value = new SchemaValue (values.length(), nick, value);
                 values.append(schema_value);
d26 4
a29 2
             else if (child->type != Xml.ElementType.TEXT_NODE && child->type != Xml.ElementType.COMMENT_NODE)
@@@@ -272,6 +270,59 @@@@ public class SchemaEnum
a30 1
 }
d32 1
a32 7
+public class SchemaFlags
+{
+    public SchemaList list;
+    public string id;
+    public GLib.List<SchemaValue> values = new GLib.List<SchemaValue>();
+
+    public SchemaFlags.from_xml(SchemaList list, Xml.Node* node)
d34 10
a43 1
+        this.list = list;
d45 1
a45 1
+        for (var prop = node->properties; prop != null; prop = prop->next)
d47 3
a49 5
+            if (prop->name == "id")
+                id = prop->children->content;
+            else
+                warning ("Unknown property in <flags>, %s", prop->name);
+        }
d51 2
a52 2
+        //if (id = null)
+        //    ?
d54 1
a54 3
+        for (var child = node->children; child != null; child = child->next)
+        {
+            if (child->name == "value")
d56 6
a61 2
+                string? nick = null;
+                int value = -1;
d63 2
a64 1
+                for (var prop = child->properties; prop != null; prop = prop->next)
d66 6
a71 6
+                    if (prop->name == "value")
+                        value = int.parse(prop->children->content);
+                    else if (prop->name == "nick")
+                        nick = prop->children->content;
+                    else
+                        warning ("Unknown property in flags <value>, %s", prop->name);
d74 1
a74 5
+                //if (value < 0 || nick == null)
+                //    ?
+
+                var schema_value = new SchemaValue (values.length(), nick, value);
+                values.append(schema_value);
a75 2
+            else if (child->type != Xml.ElementType.TEXT_NODE && child->type != Xml.ElementType.COMMENT_NODE)
+                warning ("Unknown tag in <flags>, <%s>", child->name);
a76 3
+        
+        //if (default_value == null)
+        //    ?
a77 1
+}
d79 21
a99 8
 public class Schema
 {
     public SchemaList list;
@@@@ -313,6 +364,7 @@@@ public class SchemaList
     public GLib.List<Schema> schemas = new GLib.List<Schema>();
     public GLib.HashTable<string, SchemaKey> keys = new GLib.HashTable<string, SchemaKey>(str_hash, str_equal);
     public GLib.HashTable<string, SchemaEnum> enums = new GLib.HashTable<string, SchemaEnum>(str_hash, str_equal);
+    public GLib.HashTable<string, SchemaFlags> flags = new GLib.HashTable<string, SchemaFlags>(str_hash, str_equal);
d101 15
a115 26
     public void parse_file(string path)
     {
@@@@ -337,7 +389,7 @@@@ public class SchemaList
         {
             if (node->name == "schema")
             {
-                Schema schema = new Schema.from_xml(this, node, gettext_domain);
+                var schema = new Schema.from_xml(this, node, gettext_domain);
                 if (schema.path == null)
                 {
                     // FIXME: What to do here?
@@@@ -353,8 +405,13 @@@@ public class SchemaList
             }
             else if (node->name == "enum")
             {
-                SchemaEnum enum = new SchemaEnum.from_xml(this, node);
+                var enum = new SchemaEnum.from_xml(this, node);
                 enums.insert(enum.id, enum);
+            }
+            else if (node->name == "flags")
+            {
+                var f = new SchemaFlags.from_xml(this, node);
+                flags.insert(f.id, f);
             }
             else if (node->type != Xml.ElementType.TEXT_NODE)
                 warning ("Unknown tag <%s>", node->name);
@


1.4
log
@Merge some upstream fixes to make dconf behave better.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@Bugfix update to dconf-0.7.5.
This should be the latest release before the new stable 0.8.
@
text
@d1 1
a1 1
$OpenBSD: patch-editor_dconf-schema_vala,v 1.2 2011/05/06 14:22:27 ajacoutot Exp $
d3 4
a6 1
https://bugzilla.gnome.org/show_bug.cgi?id=646220
d8 37
a44 4
--- editor/dconf-schema.vala.orig	Wed May  4 15:59:30 2011
+++ editor/dconf-schema.vala	Fri May  6 16:01:37 2011
@@@@ -52,9 +52,9 @@@@ public class SchemaKey
                 }
d46 93
a138 9
             else if (child->name == "summary")
-                summary = child->children->content;
+                summary = child->children == null ? "" : child->children->content;
             else if (child->name == "description")
-                description = child->children->content;
+                description = child->children == null ? "" : child->children->content;
             else if (child->name == "range")
                 range = new SchemaValueRange.from_xml(type, child);
             else if (child->name == "choices")
@


1.2
log
@Bugfix update to dconf-editor-0.7.4.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Merge a patch from upstream:
editor: Load *.enums.xml as well as *.gschema.xml.  This was stopping some
enums from being loaded.
@
text
@d3 1
a3 4
From 0d00a6ad3385e08eff0c50efe970af8d5d63c536 Mon Sep 17 00:00:00 2001
From: Robert Ancell <robert.ancell@@canonical.com>
Date: Tue, 29 Mar 2011 05:50:12 +0000
Subject: editor: Load *.enums.xml as well as *.gschema.xml.  This was stopping some enums from being loaded.
d5 14
a18 11
--- editor/dconf-schema.vala.orig	Tue Mar 22 16:59:23 2011
+++ editor/dconf-schema.vala	Mon May  2 16:34:47 2011
@@@@ -371,7 +371,7 @@@@ public class SchemaList
         while ((info = i.next_file (null)) != null) {
             string name = info.get_name();
 
-            if (!name.has_suffix(".gschema.xml"))
+            if (!name.has_suffix(".gschema.xml") && !name.has_suffix(".enums.xml"))
                 continue;
 
             string path = Path.build_filename(dir, name, null);
@

