head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.10
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.14
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.12
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.16
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.14
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.12
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.10
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	sturm_20060318:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.11.14.13.53.12;	author benoit;	state Exp;
branches;
next	1.3;
commitid	NA2MshIFQgS7uusI;

1.3
date	2011.04.10.19.11.59;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.05.15.38.00;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.18.19.03.35;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.03.18.19.03.35;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to p5-Hook-LexWrap-0.25.

ok ajacoutot@@
@
text
@SHA256 (Hook-LexWrap-0.25.tar.gz) = CKua9r2bRWBwLZ2ZStnZBa8ML9JAkNFID/ZA8TfBQw0=
SIZE (Hook-LexWrap-0.25.tar.gz) = 29304
@


1.3
log
@- update to 0.24
- doesnt need groff
- tweak license
- install examples
- regen PLIST
- set TEST_POD
from gleydson soares

- use modbuild (from me)
@
text
@d1 2
a2 5
MD5 (Hook-LexWrap-0.24.tar.gz) = PAjB84jFKcUy9xQi0zkT0Q==
RMD160 (Hook-LexWrap-0.24.tar.gz) = Ja0TIIxEcUsPZzvaWInOsogzrlU=
SHA1 (Hook-LexWrap-0.24.tar.gz) = ZpiBdJROTbUWMFe8D1dkJqg08Ow=
SHA256 (Hook-LexWrap-0.24.tar.gz) = RMK4sYThZkYUlMe/kLbtCZfWkbshYxftZEK/3FaOzls=
SIZE (Hook-LexWrap-0.24.tar.gz) = 9338
@


1.2
log
@base64 distinfo with SHA256
@
text
@d1 5
a5 5
MD5 (Hook-LexWrap-0.20.tar.gz) = 46rrWaOt3cgO04Z+TRZlTg==
RMD160 (Hook-LexWrap-0.20.tar.gz) = YT+6ZzQGTJtMMQN59fO3MoQ2XFo=
SHA1 (Hook-LexWrap-0.20.tar.gz) = i5z8c5Cs1CWUQSRT0IRernjkkII=
SHA256 (Hook-LexWrap-0.20.tar.gz) = AVJkf9I3fabz/LZ3mOtbN/j5zl9oe6YOTfBvD8dp7PA=
SIZE (Hook-LexWrap-0.20.tar.gz) = 6369
@


1.1
log
@Initial revision
@
text
@d1 4
a4 3
MD5 (Hook-LexWrap-0.20.tar.gz) = e3aaeb59a3adddc80ed3867e4d16654e
RMD160 (Hook-LexWrap-0.20.tar.gz) = 613fba6734064c9b4c310379f5f3b73284365c5a
SHA1 (Hook-LexWrap-0.20.tar.gz) = 8b9cfc7390acd42594412453d0845eae78e49082
@


1.1.1.1
log
@Initial import of Hook-LexWrap-0.20

Hook::LexWrap allows you to install a pre- or post-wrapper (or both)
around an existing subroutine. Unlike other modules that provide this
capacity (e.g. Hook::PreAndPost and Hook::WrapSub), Hook::LexWrap
implements wrappers in such a way that the standard `caller' function
works correctly within the wrapped subroutine.

from Deanna Phillips <deanna@@sdf.lonestar.org>
@
text
@@
