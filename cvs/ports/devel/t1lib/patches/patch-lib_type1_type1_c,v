head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.24
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.22
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.18
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.20
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.16
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.14
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.12
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2012.01.26.08.48.54;	author ajacoutot;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2005.11.09.21.10.49;	author brad;	state dead;
branches;
next	1.3;

1.3
date	2004.04.14.18.26.38;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.08.06.21.20;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2003.09.25.17.05.02;	author avsm;	state Exp;
branches;
next	;

1.5.2.1
date	2012.01.26.09.24.33;	author ajacoutot;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2012.01.26.10.18.10;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.5
log
@SECURITY update to t1lib-5.1.2.
CVE-2011-0764 CVE-2011-1552 CVE-2011-1553 CVE-2011-1554 CVE-2011-0764
CVE-2011-1552 CVE-2011-1553 CVE-2011-1554 CVE-2010-2642 CVE-2011-0433

from Brad (maintainer)
@
text
@$OpenBSD$

CVE-2011-0764, CVE-2011-1552, CVE-2011-1553 and CVE-2011-1554

--- lib/type1/type1.c.orig	Sun Dec 23 10:49:42 2007
+++ lib/type1/type1.c	Wed Jan 25 21:51:46 2012
@@@@ -1012,6 +1012,7 @@@@ static void FindStems( double x, double y,
   double nextdtana = 0.0;   /* tangent of post-delta against horizontal line */ 
   double nextdtanb = 0.0;   /* tangent of post-delta against vertical line */ 
   
+  if (ppoints == NULL || numppoints < 1) Error0v("FindStems: No previous point!\n");
  
   /* setup default hinted position */
   ppoints[numppoints-1].ax     = ppoints[numppoints-1].x;
@@@@ -1289,7 +1290,7 @@@@ unsigned char cipher;
 static int DoRead(CodeP)
   int *CodeP;
 {
-  if (strindex >= CharStringP->len) return(FALSE); /* end of string */
+  if (!CharStringP || strindex >= CharStringP->len) return(FALSE); /* end of string */
   /* We handle the non-documented Adobe convention to use lenIV=-1 to
      suppress charstring encryption. */
   if (blues->lenIV==-1) {
@@@@ -1700,6 +1701,7 @@@@ static int RLineTo(dx, dy)
   long pindex = 0;
   
   /* compute hinting for previous segment! */
+  if (ppoints == NULL || numppoints < 2 ) Error0i("RLineTo: No previous point!\n");
   FindStems( currx, curry, currx-ppoints[numppoints-2].x, curry-ppoints[numppoints-2].y, dx, dy);
 
   /* Allocate a new path point and pre-setup data */
@@@@ -1728,6 +1730,7 @@@@ static int RRCurveTo(dx1, dy1, dx2, dy2, dx3, dy3)
   long pindex = 0;
   
   /* compute hinting for previous point! */
+  if (ppoints == NULL || numppoints < 2) Error0i("RRCurveTo: No previous point!\n");
   FindStems( currx, curry, currx-ppoints[numppoints-2].x, curry-ppoints[numppoints-2].y, dx1, dy1);
 
   /* Allocate three new path points and pre-setup data */
@@@@ -1786,7 +1789,9 @@@@ static int DoClosePath()
   long tmpind;
   double deltax = 0.0;
   double deltay = 0.0;
-  
+ 
+  if (ppoints == NULL || numppoints < 1) Error0i("DoClosePath: No previous point!");
+ 
   /* If this ClosePath command together with the starting point of this
      path completes to a segment aligned to a stem, we would miss
      hinting for this point. --> Check and explicitly care for this! */
@@@@ -1801,6 +1806,7 @@@@ static int DoClosePath()
     deltax = ppoints[i].x - ppoints[numppoints-1].x;
     deltay = ppoints[i].y - ppoints[numppoints-1].y;
 
+    if (ppoints == NULL || numppoints <= i + 1) Error0i("DoClosePath: No previous point!");
     /* save nummppoints and reset to move point */
     tmpind = numppoints;
     numppoints = i + 1;
@@@@ -1903,6 +1909,7 @@@@ static int RMoveTo(dx,dy)
     FindStems( currx, curry, 0, 0, dx, dy);
   }
   else {
+    if (ppoints == NULL || numppoints < 2) Error0i("RMoveTo: No previous point!\n");
     FindStems( currx, curry, ppoints[numppoints-2].x, ppoints[numppoints-2].y, dx, dy);
   }
   
@@@@ -2152,6 +2159,7 @@@@ static void FlxProc(c1x2, c1y2, c3x0, c3y0, c3x1, c3y1
   DOUBLE cx, cy;
   DOUBLE ex, ey;
 
+  if (ppoints == NULL || numppoints < 8) Error0v("FlxProc: No previous point!");
 
   /* Our PPOINT list now contains 7 moveto commands which
      are about to be consumed by the Flex mechanism. --> Remove these
@@@@ -2321,6 +2329,7 @@@@ static void FlxProc1()
 /*   Returns currentpoint on stack          */
 static void FlxProc2()
 {
+  if (ppoints == NULL || numppoints < 1) Error0v("FlxProc2: No previous point!");
   /* Push CurrentPoint on fake PostScript stack */
   PSFakePush( ppoints[numppoints-1].x);
   PSFakePush( ppoints[numppoints-1].y);
@


1.5.2.1
log
@SECURITY fixes for:
CVE-2011-0764 CVE-2011-1552 CVE-2011-1553 CVE-2011-1554 CVE-2011-0764
CVE-2011-1552 CVE-2011-1553 CVE-2011-1554 CVE-2010-2642 CVE-2011-0433

from Brad (maintainer)
ok sthen@@
@
text
@@


1.5.2.2
log
@Actually merge from current and update to t1lib-5.1.2 which includes a
fix for yet another vulnerability: http://www.securityfocus.com/bid/25079

pointed oud by Brad
ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_type1_type1_c,v 1.5 2012/01/26 08:48:54 ajacoutot Exp $
@


1.4
log
@upgrade to t1lib 5.1.0

ok bernd@@
@
text
@d1 17
a17 6
$OpenBSD: patch-lib_type1_type1_c,v 1.3 2004/04/14 18:26:38 brad Exp $
--- lib/type1/type1.c.orig	2003-03-02 23:17:22.000000000 +0000
+++ lib/type1/type1.c	2003-09-25 17:22:47.000000000 +0100
@@@@ -1868,10 +1868,18 @@@@ static int EndChar()
 static int RMoveTo(dx,dy)
   DOUBLE dx,dy;
d19 8
a26 12
-  long pindex = 0;
-  
+  long pindex = 0, xpoint, ypoint;
+
+  if (numppoints > 1) {
+	xpoint = currx - ppoints[numppoints-2].x;
+	ypoint = curry - ppoints[numppoints-2].y;
+  } else {
+	xpoint = 0;
+	ypoint = 0;
+  }
+
d28 2
a29 2
-  FindStems( currx, curry, currx-ppoints[numppoints-2].x, curry-ppoints[numppoints-2].y, dx, dy);
+  FindStems( currx, curry, xpoint, ypoint, dx, dy);
d32 51
a82 1
   pindex = nextPPoint();
@


1.3
log
@downgrade t1lib back to 5.0.0

5.0.2 seems to cause problems with xpdf
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_type1_type1_c,v 1.1 2003/09/25 17:05:02 avsm Exp $
@


1.2
log
@upgrade to t1lib 5.0.2
@
text
@@


1.1
log
@stop xpdf from straying from its malloced space.
brad@@ nikolay@@ ok
@
text
@d1 1
a1 1
$OpenBSD$
@

