head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.12
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.10
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.16
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.14
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	jasper_20100910:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.12.15.17.51.27;	author benoit;	state Exp;
branches;
next	1.1;
commitid	SjSQdlR52DR1oW4z;

1.1
date	2010.09.10.07.38.29;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.10.07.38.29;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to p5-Hash-AutoHash-1.17.

ok ajacoutot@@
@
text
@SHA256 (Hash-AutoHash-1.17.tar.gz) = xNr7htEGZnANvchjsiHD/1ZSPLOzy7fSUBIW+3CO31I=
SIZE (Hash-AutoHash-1.17.tar.gz) = 53662
@


1.1
log
@Initial revision
@
text
@d1 2
a2 5
MD5 (Hash-AutoHash-1.12.tar.gz) = ogP9eX9Eeb9eUsqIR/d3HQ==
RMD160 (Hash-AutoHash-1.12.tar.gz) = ulPxEwM+BQEzGdu5EW++AM138Rc=
SHA1 (Hash-AutoHash-1.12.tar.gz) = bNsua61hJLkLFdvXI0v/wm7vIO0=
SHA256 (Hash-AutoHash-1.12.tar.gz) = fKJPTNPqbmy2L63XcJ+gvFZxOsvdaKZq7bxcOcYGcgM=
SIZE (Hash-AutoHash-1.12.tar.gz) = 51234
@


1.1.1.1
log
@import p5-Hash-AutoHash 1.12

This is yet another module that lets you access or change the elements
of a hash using methods with the same name as the element's key. It
follows in the footsteps of Hash::AsObject, Hash::Inflator,
Data::OpenStruct::Deep, Object::AutoAccessor, and probably others. The
main difference between this module and its forebears is that it
supports tied hashes, in addition to regular hashes. This allows a
modular division of labor: this class is generic and treats all hashes
the same; any special semantics come from the tied hash.

ok ajacoutot@@
@
text
@@
