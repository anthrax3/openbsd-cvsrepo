head	1.5;
access;
symbols
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3;
locks; strict;
comment	@# @;


1.5
date	2008.07.08.21.29.20;	author martynas;	state dead;
branches;
next	1.4;

1.4
date	2008.03.23.05.46.29;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2007.10.02.17.35.48;	author martynas;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.14.10.31.04;	author martynas;	state dead;
branches;
next	1.1;

1.1
date	2007.08.05.17.50.03;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@i am upstream now.  so release 0.5.  much thanks to fgsch@@, for
testing, bug-hunting, and diffs.
@
text
@$OpenBSD: patch-examples_demo_py,v 1.4 2008/03/23 05:46:29 fgsch Exp $
--- examples/demo.py.orig	Mon Jul 10 00:57:15 2006
+++ examples/demo.py	Sun Mar 23 05:36:57 2008
@@@@ -29,6 +29,10 @@@@ class SupySilcClient(silc.SilcClient):
     def _cache_channel(self, channel):
         self.channels[channel.channel_name] = channel
 
+    def running(self):
+        print 'SILC: Running.'
+        self.connect_to_server(sys.argv[1], 706)
+
     def connected(self):
         print 'SILC: Connected to server.'
         self.isconnected = True
@@@@ -195,8 +199,9 @@@@ class SupySilcClient(silc.SilcClient):
         print 'SILC: Reply (Leave):', channel
         
     def command_reply_users(self, channel, users):
-        self._cache_user(user)
-        print 'SILC: Reply (Users):', type, user
+        for user in users:
+            self._cache_user(user)
+        print 'SILC: Reply (Users):', channel, users
         
     def command_reply_service(self, *args):
         pass # not implemented
@@@@ -209,7 +214,6 @@@@ class SupySilcClient(silc.SilcClient):
 if __name__ == "__main__":
     import sys
     c = SupySilcClient()
-    c.connect_to_server(sys.argv[1], 706)
     try:
         while True:
             c.run_one()        
@


1.4
log
@fix crash when obtaining the number of users. ok from martynas@@ some time ago.
while i'm here remove some unneeded printf's and fix the reply users
callback.  bump package.
@
text
@d1 1
a1 1
$OpenBSD: patch-examples_demo_py,v 1.3 2007/10/02 17:35:48 martynas Exp $
@


1.3
log
@update for silc-toolkit-1.1;  ok naddy@@
@
text
@d1 3
a3 3
$OpenBSD: patch-examples_demo_py,v 1.1 2007/08/05 17:50:03 martynas Exp $
--- examples/demo.py.orig	Mon Jul 10 02:57:15 2006
+++ examples/demo.py	Sun Jul  1 22:52:11 2007
d15 13
a27 1
@@@@ -209,7 +213,6 @@@@ class SupySilcClient(silc.SilcClient):
@


1.2
log
@revert now that silc-toolkit is reverted;  ok espie@@
@
text
@@


1.1
log
@unbreak to work with silc-toolkit-1.1

NOTE: the obvious thing you will need to do first for your existing
py-silc programs is to move connect_to_server to the running() callback
(see docs/examples updates).

tested by Simon Kuhnle, and steven@@ on amd64;  ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
@

