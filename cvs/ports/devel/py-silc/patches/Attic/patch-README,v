head	1.4;
access;
symbols
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2008.07.08.21.29.20;	author martynas;	state dead;
branches;
next	1.3;

1.3
date	2007.10.02.17.35.48;	author martynas;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.14.10.31.04;	author martynas;	state dead;
branches;
next	1.1;

1.1
date	2007.08.05.17.50.03;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.4
log
@i am upstream now.  so release 0.5.  much thanks to fgsch@@, for
testing, bug-hunting, and diffs.
@
text
@$OpenBSD: patch-README,v 1.3 2007/10/02 17:35:48 martynas Exp $
--- README.orig	Mon Jul 10 12:16:09 2006
+++ README	Sun Jul  1 22:52:11 2007
@@@@ -73,6 +73,9 @@@@ class EchoClient(silc.SilcClient):
           print message
           self.send_private_message(sender, message)
 
+      def running(self):
+          self.connect_to_server("silc.example.com")
+
       def connected(self):
           print "* Connected"
           self.command_call("JOIN crazybotchannel")
@@@@ -99,7 +102,6 @@@@ class EchoClient(silc.SilcClient):
 if __name__ == "__main__":
    keys = silc.create_key_pair("silc.pub", "silc.prv")
    client = EchoClient(keys, "echobot", "echobot", "Echo Bot")
-   client.connect_to_server("silc.example.com")
 
    while True:
          try:
@


1.3
log
@update for silc-toolkit-1.1;  ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-README,v 1.1 2007/08/05 17:50:03 martynas Exp $
@


1.2
log
@revert now that silc-toolkit is reverted;  ok espie@@
@
text
@@


1.1
log
@unbreak to work with silc-toolkit-1.1

NOTE: the obvious thing you will need to do first for your existing
py-silc programs is to move connect_to_server to the running() callback
(see docs/examples updates).

tested by Simon Kuhnle, and steven@@ on amd64;  ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
@

