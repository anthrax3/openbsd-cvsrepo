head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2017.08.17.10.08.55;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	dg2wmvevMx7ay41M;

1.6
date	2017.06.25.11.24.29;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	CXyq3exBFWpGapWD;

1.5
date	2017.06.25.11.16.38;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	GRcty3DreGNMJ0N0;

1.4
date	2017.06.25.11.07.19;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	IWAoR3Rqts7qsgku;

1.3
date	2017.04.27.09.02.32;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	XUBh5F8X4I8oMXNR;

1.2
date	2017.04.27.09.00.01;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	YgrDDdgiIgSUHRnT;

1.1
date	2017.04.08.13.29.22;	author ajacoutot;	state Exp;
branches;
next	;
commitid	peulxeePfeke1pwO;


desc
@@


1.7
log
@Update to meson-0.42.0.
@
text
@# $OpenBSD: meson.port.mk,v 1.6 2017/06/25 11:24:29 ajacoutot Exp $

BUILD_DEPENDS +=	devel/meson>=0.42.0
SEPARATE_BUILD ?=	Yes

MODMESON_WANTCOLOR ?=	No
.if ${MODMESON_WANTCOLOR:L} == "no"
CONFIGURE_ENV += TERM="dumb"
.endif

.if empty(CONFIGURE_STYLE)
CONFIGURE_STYLE=	meson
.endif

.if ! empty(INSTALL_STRIP)
CONFIGURE_ARGS +=	--strip
.endif

# don't use "-Wl,--no-undefined when linking", we are BSD: it's fine to have
# undefined references to libc functions
CONFIGURE_ARGS +=	-Db_lundef=false

# from ${LOCALBASE}/bin/meson:
# Warn if the locale is not UTF-8. This can cause various unfixable issues
# such as os.stat not being able to decode filenames with unicode in them.
# There is no way to reset both the preferred encoding and the filesystem
# encoding, so we can just warn about it.
MAKE_ENV +=		LC_CTYPE="en_US.UTF-8"

MODMESON_configure=	${SETENV} CC="${CC}" CFLAGS="${CFLAGS}" CXX="${CXX}" \
				CXXFLAGS="${CXXFLAGS}" LDFLAGS="${LDFLAGS}" \
				LC_CTYPE="en_US.UTF-8" ${CONFIGURE_ENV} \
				${LOCALBASE}/bin/meson --buildtype=plain \
				--prefix "${PREFIX}" --mandir="${PREFIX}/man" \
				--sysconfdir="${SYSCONFDIR}" \
				${CONFIGURE_ARGS} ${WRKSRC} ${WRKBUILD}

.if !target(do-build)
do-build:
	exec ${SETENV} ${MAKE_ENV} \
		${LOCALBASE}/bin/ninja -C ${WRKBUILD} -v -j ${MAKE_JOBS}
.endif

.if !target(do-install)
do-install:
	exec ${SETENV} ${MAKE_ENV} ${FAKE_SETUP} \
		${LOCALBASE}/bin/ninja -C ${WRKBUILD} ${FAKE_TARGET}
.endif

.if !target(do-test)
do-test:
	exec ${SETENV} ${ALL_TEST_ENV} \
		${LOCALBASE}/bin/ninja -C ${WRKBUILD} ${TEST_TARGET}
.endif
@


1.6
log
@meson(1) needs UTF-8 encoding.
@
text
@d1 1
a1 1
# $OpenBSD: meson.port.mk,v 1.5 2017/06/25 11:16:38 ajacoutot Exp $
d3 1
a3 1
BUILD_DEPENDS +=	devel/meson>=0.39.1
@


1.5
log
@By default, don't use "-Wl,--no-undefined when linking", it's fine to have
undefined references to libc functions.
CONFIGURE_ARGS += -Db_lundef=false
@
text
@d1 1
a1 1
# $OpenBSD: meson.port.mk,v 1.4 2017/06/25 11:07:19 ajacoutot Exp $
d22 7
@


1.4
log
@Pass MAKE_ENV, FAKE_SETUP and ALL_TEST_ENV so that we can benefit from the magic
of bsd.port.mk. Fixes $CC path detection.
@
text
@d1 1
a1 1
# $OpenBSD: meson.port.mk,v 1.3 2017/04/27 09:02:32 ajacoutot Exp $
d18 4
@


1.3
log
@... and --mandir.
@
text
@d1 1
a1 1
# $OpenBSD: meson.port.mk,v 1.2 2017/04/27 09:00:01 ajacoutot Exp $
d29 2
a30 1
	${LOCALBASE}/bin/ninja -C ${WRKBUILD} -v -j ${MAKE_JOBS}
d35 2
a36 1
	${LOCALBASE}/bin/ninja -C ${WRKBUILD} ${FAKE_TARGET}
d41 2
a42 1
	${LOCALBASE}/bin/ninja -C ${WRKBUILD} ${TEST_TARGET}
@


1.2
log
@Pass --sysconfdir.
@
text
@d1 1
a1 1
# $OpenBSD: meson.port.mk,v 1.1 2017/04/08 13:29:22 ajacoutot Exp $
d23 1
a23 1
				--prefix "${PREFIX}" \
@


1.1
log
@Add the meson MODULE.
It's still a bit rough around the edges but allows me to build the upcoming
libhttpseverywhere port.
@
text
@d1 1
a1 1
# $OpenBSD$
d23 3
a25 2
				--prefix "${PREFIX}" ${CONFIGURE_ARGS} \
				${WRKSRC} ${WRKBUILD}
@

