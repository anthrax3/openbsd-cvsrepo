head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.10
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.20
	OPENBSD_5_0:1.3.0.18
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.16
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.14
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.12
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.10
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3;
locks; strict;
comment	@# @;


1.5
date	2015.01.18.21.27.08;	author claudio;	state Exp;
branches;
next	1.4;
commitid	4yq3fPp6D2ih0IIc;

1.4
date	2012.04.28.09.48.20;	author stsp;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.26.16.05.01;	author kurt;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.01.20.03.07;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.24.13.46.47;	author todd;	state Exp;
branches;
next	;


desc
@@


1.5
log
@While accept() is inheriting O_NONBLOCK it is not the case in the accept4()
case. So only inherit O_NONBLOCK if accept4() is not used. Without this
apache 2.4 blocks forever when using keepalive. OK stsp@@
@
text
@$OpenBSD: patch-network_io_unix_sockets_c,v 1.4 2012/04/28 09:48:20 stsp Exp $
--- network_io/unix/sockets.c.orig	Wed Mar 23 19:50:21 2011
+++ network_io/unix/sockets.c	Wed Jan 14 23:43:33 2015
@@@@ -271,7 +271,7 @@@@ apr_status_t apr_socket_accept(apr_socket_t **new, apr
         apr_set_option(*new, APR_TCP_NODELAY, 1);
     }
 #endif /* TCP_NODELAY_INHERITED */
-#if APR_O_NONBLOCK_INHERITED
+#if APR_O_NONBLOCK_INHERITED && !defined(HAVE_ACCEPT4)
     if (apr_is_option_set(sock, APR_SO_NONBLOCK) == 1) {
         apr_set_option(*new, APR_SO_NONBLOCK, 1);
     }
@@@@ -312,6 +312,15 @@@@ apr_status_t apr_socket_accept(apr_socket_t **new, apr
 apr_status_t apr_socket_connect(apr_socket_t *sock, apr_sockaddr_t *sa)
 {
     int rc;        
+/*
+ * OpenBSD doesn't support connect() to INADDR_ANY so convert to
+ * INADDR_LOOPBACK to emulate what is expected.
+ */
+#ifdef __OpenBSD__
+    if (sa->family == APR_INET)
+        if (sa->sa.sin.sin_addr.s_addr == INADDR_ANY)
+            sa->sa.sin.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
+#endif
 
     do {
         rc = connect(sock->socketdes,
@


1.4
log
@Update to APR-1.4.6. Enable threads by default and remove the 'mt' flavour.
Grab maintainership.
ok sthen
@
text
@d1 12
a12 3
$OpenBSD: patch-network_io_unix_sockets_c,v 1.3 2007/04/26 16:05:01 kurt Exp $
--- network_io/unix/sockets.c.orig	Wed Mar 23 19:52:44 2011
+++ network_io/unix/sockets.c	Fri Apr 27 09:51:08 2012
@


1.3
log
@the accept retry change was rejected upstream. applications that use apr
have to retry upon EINTR instead of apr doing for them.
@
text
@d1 4
a4 4
$OpenBSD: patch-network_io_unix_sockets_c,v 1.1 2007/03/24 13:46:47 todd Exp $
--- network_io/unix/sockets.c.orig	Thu Dec  8 12:24:36 2005
+++ network_io/unix/sockets.c	Thu Apr 26 11:52:13 2007
@@@@ -256,6 +256,15 @@@@ apr_status_t apr_socket_accept(apr_socket_t **new, apr
@


1.2
log
@per POSIX accept(2) can return EINTR so have apr_socket_accept() retry
when this happens. http://issues.apache.org/bugzilla/show_bug.cgi?id=41975
fixes issues noticed while testing tomcat-native. regen patches and distinfo
while here.  "looks ok" steven@@
@
text
@d3 2
a4 17
+++ network_io/unix/sockets.c	Wed Mar 28 15:26:44 2007
@@@@ -184,9 +184,11 @@@@ apr_status_t apr_socket_accept(apr_socket_t **new, apr
 #endif
     (*new)->timeout = -1;
     
-    (*new)->socketdes = accept(sock->socketdes, 
-                               (struct sockaddr *)&(*new)->remote_addr->sa,
-                               &(*new)->remote_addr->salen);
+    do {
+        (*new)->socketdes = accept(sock->socketdes, 
+                                   (struct sockaddr *)&(*new)->remote_addr->sa,
+                                   &(*new)->remote_addr->salen);
+    } while ((*new)->socketdes == -1 && errno == EINTR);
 
     if ((*new)->socketdes < 0) {
         return errno;
@@@@ -256,6 +258,15 @@@@ apr_status_t apr_socket_accept(apr_socket_t **new, apr
@


1.1
log
@add mt flavor that can co-exist with the default non-mt flavor
ok kurt@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 17
a19 2
+++ network_io/unix/sockets.c	Wed Oct  4 20:17:38 2006
@@@@ -256,6 +256,15 @@@@ apr_status_t apr_socket_accept(apr_socke
@

