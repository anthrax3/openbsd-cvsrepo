head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.0.10
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.12
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.8
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.06.11.14.10.06;	author jca;	state Exp;
branches;
next	1.1;
commitid	abADKcxg8qpJtTU7;

1.1
date	2013.05.30.16.50.05;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Restore lua51 compat
@
text
@$OpenBSD: patch-lua_cmsgpack_c,v 1.1 2013/05/30 16:50:05 jasper Exp $
--- lua_cmsgpack.c.orig	Mon Nov  5 20:14:43 2012
+++ lua_cmsgpack.c	Tue May 17 09:15:56 2016
@@@@ -328,7 +328,11 @@@@ static void mp_encode_lua_type(lua_State *L, mp_buf *b
 
 /* Convert a lua table into a message pack list. */
 static void mp_encode_lua_table_as_array(lua_State *L, mp_buf *buf, int level) {
+#if LUA_VERSION_NUM <= 501
     size_t len = lua_objlen(L,-1), j;
+#else
+    size_t len = lua_rawlen(L,-1), j;
+#endif
 
     mp_encode_array(buf,len);
     for (j = 1; j <= len; j++) {
@@@@ -687,14 +691,14 @@@@ static int mp_unpack(lua_State *L) {
 
 /* ---------------------------------------------------------------------------- */
 
-static const struct luaL_reg thislib[] = {
+static const struct luaL_Reg thislib[] = {
     {"pack", mp_pack},
     {"unpack", mp_unpack},
     {NULL, NULL}
 };
 
 LUALIB_API int luaopen_cmsgpack (lua_State *L) {
-    luaL_register(L, "cmsgpack", thislib);
+    luaL_openlib(L, "cmsgpack", thislib, 0);
 
     lua_pushliteral(L, LUACMSGPACK_VERSION);
     lua_setfield(L, -2, "_VERSION");
@


1.1
log
@unbreak with lua 5.2
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 2
+++ lua_cmsgpack.c	Thu May 30 20:43:04 2013
@@@@ -328,7 +328,7 @@@@ static void mp_encode_lua_type(lua_State *L, mp_buf *b
d8 3
a10 1
-    size_t len = lua_objlen(L,-1), j;
d12 1
d16 1
a16 1
@@@@ -687,14 +687,14 @@@@ static int mp_unpack(lua_State *L) {
@

