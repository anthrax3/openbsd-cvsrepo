head	1.2;
access;
symbols
	OPENBSD_5_5:1.1.0.18
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.16
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.14
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.12
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.10
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.03.09.22.29.01;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2009.12.25.21.36.22;	author phessler;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Drop old patches.
@
text
@$OpenBSD: patch-test_test-launcher-xcb_c,v 1.1 2009/12/25 21:36:22 phessler Exp $
--- test/test-launcher-xcb.c.orig	Fri Dec 25 14:21:32 2009
+++ test/test-launcher-xcb.c	Fri Dec 25 14:23:10 2009
@@@@ -45,15 +45,16 @@@@ slowly_obtain_timestamp (SnDisplay *display)
   xcb_connection_t *xconnection;
   xcb_generic_event_t *event;
   xcb_screen_t *s;
+  uint32_t attrs[] = { 1, XCB_EVENT_MASK_PROPERTY_CHANGE | XCB_EVENT_MASK_STRUCTURE_NOTIFY };
+  char* name;
+  xcb_property_notify_event_t *ev;
+  xcb_timestamp_t timestamp;
 
   xconnection = sn_display_get_x_connection (display);
 
   s = xcb_aux_get_screen(xconnection, 0);
 
   {
-    uint32_t attrs[] = { 1, XCB_EVENT_MASK_PROPERTY_CHANGE | XCB_EVENT_MASK_STRUCTURE_NOTIFY };
-    char* name;
-
     xwindow = xcb_generate_id (xconnection);
 
     xcb_create_window (xconnection, XCB_COPY_FROM_PARENT, xwindow,
@@@@ -70,8 +71,8 @@@@ slowly_obtain_timestamp (SnDisplay *display)
 
   xcb_flush (xconnection);
   event = xcb_wait_for_event (xconnection);
-  xcb_property_notify_event_t *ev = (xcb_property_notify_event_t *) event;
-  xcb_timestamp_t timestamp = ev->time;
+  ev = (xcb_property_notify_event_t *) event;
+  timestamp = ev->time;
   free (ev);
 
   xcb_destroy_window (xconnection, xwindow);
@@@@ -87,6 +88,7 @@@@ main (int argc, char **argv)
   SnLauncherContext *context;
   xcb_timestamp_t timestamp;
   int screen;
+  xcb_generic_event_t *xevent;
 
   if (argc < 2)
     {
@@@@ -131,7 +133,7 @@@@ main (int argc, char **argv)
 
   while (TRUE)
     {
-      xcb_generic_event_t *xevent = xcb_wait_for_event (xconnection);
+      xevent = xcb_wait_for_event (xconnection);
 
       sn_xcb_display_process_event (display, xevent);
 
@


1.1
log
@fix compilation on gcc-2.95 systems
@
text
@d1 1
a1 1
$OpenBSD$
@

