head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.36
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.34
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.32
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.28
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.30
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.26
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.24
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.22
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.20
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.18
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.16
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.14
	OPENBSD_5_0:1.1.1.1.0.12
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.10
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.6
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.4
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	sthen_20090217:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2009.02.17.00.16.04;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.02.17.00.16.04;	author sthen;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

http://www.cvstrac.org/cvstrac/chngview?cn=994
Avoid using sqlite internal functions.

--- search.c.orig	Thu Dec 14 00:27:25 2006
+++ search.c	Thu Aug  7 01:01:25 2008
@@@@ -29,11 +29,6 @@@@
 
 
 /*
-** We'll use this routine in several places.
-*/
-extern int sqlite3StrNICmp(const char*,const char*,int);
-
-/*
 ** Search for a keyword in text.  Return a matching score:
 **
 **     0     No sign of the word was found in the text
@@@@ -54,7 +49,7 @@@@ static int score_word(const char *zWord, const char *z
   }
   if( n<=0 ) n = strlen(zWord);
   for(i=0; zText[i]; i++){
-    if( (zText[i]==c1 || zText[i]==c2) && sqlite3StrNICmp(zWord,&zText[i],n)==0){
+    if( (zText[i]==c1 || zText[i]==c2) && strncasecmp(zWord,&zText[i],n)==0){
       int score = 6;
       if( (i==0 || !isalnum(zText[i-1]))
            && (zText[i+n]==0 || !isalnum(zText[i+n])) ){
@@@@ -282,7 +277,7 @@@@ static void highlightFunc(sqlite3_context *context, in
           int n;
           if( tolower(c)!=tolower(azKey[k][0]) ) continue;
           n = keySize[k];
-          if( sqlite3StrNICmp(&zAll[j],azKey[k],n)==0 ){
+          if( strncasecmp(&zAll[j],azKey[k],n)==0 ){
             strcpy(z,"<b>");
             z += 3;
             while( n ){
@


1.1.1.1
log
@import cvstrac; N.B. requires a recent /usr/bin/rlog (thanks Joris!)

CVSTrac implements a patch-set and bug tracking system for CVS
as a single self-contained executable, running as CGI, from inetd,
or as a stand-alone web server.

- Automatically generates a patch-set log from check-in comments
- User-defined color-coded database queries
- Built-in repository browser and Wiki
- Minimal memory, disk and CPU requirements
- Per-user access control
- Uses SQLite, no heavy database engine dependency
- Can be run from a chroot jail
@
text
@@
