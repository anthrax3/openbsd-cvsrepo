head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.1.0.6
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.09.18.06.06.22;	author jasper;	state Exp;
branches;
next	1.1;
commitid	gJtfQTkbh9s24qZ4;

1.1
date	2015.08.30.15.56.12;	author avsm;	state Exp;
branches;
next	;
commitid	ei46LXoLC3tn0SJ3;


desc
@@


1.2
log
@adjust for ocamlgraph 1.8.6 API

breakage spotted by naddy@@; fix from upstream
@
text
@$OpenBSD: patch-algo_dominators_ml,v 1.1 2015/08/30 15:56:12 avsm Exp $

Second hunk:
Adjust for ocamlgraph 1.8.6 API.

Index: algo/dominators.ml
--- algo/dominators.ml.orig
+++ algo/dominators.ml
@@@@ -23,7 +23,7 @@@@ let crtimer = Util.Timer.create "Algo.Dominators.cycle
 let sdtrtimer = Util.Timer.create "Algo.Dominators.sd_transitive_reduction"
 let domtrtimer = Util.Timer.create "Algo.Dominators.dom_transitive_reduction"
 
-include Util.Logging(struct let label = __FILE__ end) ;;
+include Util.Logging(struct let label = "algo/dominators.ml" end) ;;
 
 module G = Defaultgraphs.PackageGraph.G
 module O = Defaultgraphs.GraphOper(G)
@@@@ -99,7 +99,7 @@@@ let dominators_tarjan graph =
   ) graph;
 
   Util.Timer.start tjntimer;
-  let module Dom = Dominator.Make(G) in
+  let module Dom = Dominator.Make_graph(G) in
   let idom = Dom.compute_all graph start_pkg in
   let domgr = idom.Dom.dom_graph () in
   Util.Timer.stop tjntimer ();
@


1.1
log
@update to ocaml-dose-3.3

Includes local patches for OPAM compatibility, as with the previous version

ok jca@@, tested by krw@@ daniel@@ jsg@@
@
text
@d1 8
a8 3
$OpenBSD$
--- algo/dominators.ml.orig	Tue Nov 18 11:42:46 2014
+++ algo/dominators.ml	Mon Aug  3 18:07:28 2015
d18 9
@

