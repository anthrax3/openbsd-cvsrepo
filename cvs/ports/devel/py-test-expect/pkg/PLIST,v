head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.2
	OPENBSD_6_2_BASE:1.1.1.1
	shadchin_20170628:1.1.1.1
	shadchin:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2017.06.28.18.00.36;	author shadchin;	state Exp;
branches
	1.1.1.1;
next	;
commitid	ZwiWglU8eMaFO9FT;

1.1.1.1
date	2017.06.28.18.00.36;	author shadchin;	state Exp;
branches;
next	;
commitid	ZwiWglU8eMaFO9FT;


desc
@@



1.1
log
@Initial revision
@
text
@@@comment $OpenBSD$
lib/python${MODPY_VERSION}/site-packages/pytest_expect/
lib/python${MODPY_VERSION}/site-packages/pytest_expect-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/
lib/python${MODPY_VERSION}/site-packages/pytest_expect-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/PKG-INFO
lib/python${MODPY_VERSION}/site-packages/pytest_expect-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/SOURCES.txt
lib/python${MODPY_VERSION}/site-packages/pytest_expect-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/dependency_links.txt
lib/python${MODPY_VERSION}/site-packages/pytest_expect-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/entry_points.txt
lib/python${MODPY_VERSION}/site-packages/pytest_expect-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/requires.txt
lib/python${MODPY_VERSION}/site-packages/pytest_expect-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/top_level.txt
lib/python${MODPY_VERSION}/site-packages/pytest_expect/__init__.py
${MODPY_COMMENT}lib/python${MODPY_VERSION}/site-packages/pytest_expect/${MODPY_PYCACHE}/
lib/python${MODPY_VERSION}/site-packages/pytest_expect/${MODPY_PYCACHE}__init__.${MODPY_PYC_MAGIC_TAG}pyc
lib/python${MODPY_VERSION}/site-packages/pytest_expect/${MODPY_PYCACHE}expect.${MODPY_PYC_MAGIC_TAG}pyc
lib/python${MODPY_VERSION}/site-packages/pytest_expect/expect.py
@


1.1.1.1
log
@Import py-test-expect 1.1.0, ok danj@@

DESCR:

A py.test plugin that stores test expectations by saving the set of
failing tests, allowing them to be marked as xfail when running them
in future. The tests expectations are stored such that they can be
distributed alongside the tests. However, note that test expectations
can only be reliably shared between Python 2 and Python 3 if they only
use ASCII characters in their node ids: this likely isn't a limitati
n if tests are using the normal Python format, as Python 2 only allows
ASCII characters in identifiers.

@
text
@@
