head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.22
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.20
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.18
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.14
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.16
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	jeremy_2010-Dec-20:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2012.04.03.18.15.18;	author jeremy;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.21.17.15.14;	author jeremy;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.20.18.03.17;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.12.20.18.03.17;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Allow cross-compiling Windows ruby extensions using mingw

OK pirofti@@
@
text
@$OpenBSD$

Include the mingw directory in the PATH if cross compiling.

Don't have it accidently use gmake, because the makefiles
created can use BSD make extensions.

--- lib/rake/extensiontask.rb.orig	Wed Dec 31 16:00:00 1969
+++ lib/rake/extensiontask.rb	Wed Nov 30 04:25:41 2011
@@@@ -70,6 +70,8 @@@@ Rerun `rake` under MRI Ruby 1.8.x/1.9.x to cross/nativ
       # only define cross platform functionality when enabled
       return unless @@cross_compile
 
+      ENV['PATH'] = "${LOCALBASE}/mingw32/bin:#{ENV['PATH']}"
+
       if cross_platform.is_a?(Array) then
         cross_platform.each { |platf| define_cross_platform_tasks(platf) }
       else
@@@@ -359,9 +361,7 @@@@ Rerun `rake` under MRI Ruby 1.8.x/1.9.x to cross/nativ
           if RUBY_PLATFORM =~ /mswin/ then
             'nmake'
           else
-            ENV['MAKE'] || %w[gmake make].find { |c|
-              system("#{c} -v >> #{dev_null} 2>&1")
-            }
+            ENV['MAKE'] || 'make'
           end
       end
       @@make
@


1.2
log
@Switch from hard coding make to using MAKE_PROGRAM.

Prompted and OK ajacoutot@@
@
text
@d3 2
d8 12
a19 3
--- lib/rake/extensiontask.rb.orig	Fri Dec 10 12:15:51 2010
+++ lib/rake/extensiontask.rb	Fri Dec 10 12:16:20 2010
@@@@ -349,7 +349,5 @@@@ Rerun `rake` under MRI Ruby 1.8.x/1.9.x to cross/nativ
a23 1
+            ENV['MAKE'] || '${MAKE_PROGRAM}'
d26 1
d28 2
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
+            ENV['MAKE'] || 'make'
@


1.1.1.1
log
@Import ruby-rake-compiler 0.7.5

rake-compiler aims to help Gem developers deal with Ruby extensions,
simplifying code and reducing duplication.

It follows convention over configuration and sets a standardized
structure to build and package both C and Java extensions in your gems.

This is the result of experiences dealing with several Gems that
required native extensions across platforms and different user
configurations where details like portability and clarity of code were
lacking.
@
text
@@
