head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.22
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.20
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.18
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.14
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.16
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	jeremy_2010-Dec-20:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2012.04.03.18.15.18;	author jeremy;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.21.17.15.14;	author jeremy;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.20.18.03.17;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.12.20.18.03.17;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Allow cross-compiling Windows ruby extensions using mingw

OK pirofti@@
@
text
@$OpenBSD$

Include the mingw directory in the PATH as this file is only used
for cross-compilation.

Add the j flag to tar as all downloaded files are .tar.bz2.

--- tasks/bin/cross-ruby.rake.orig	Wed Dec 31 16:00:00 1969
+++ tasks/bin/cross-ruby.rake	Wed Nov 30 04:23:04 2011
@@@@ -17,6 +17,8 @@@@
 # for cross-compilation.
 #
 
+ENV['PATH'] = "${LOCALBASE}/mingw32/bin:#{ENV['PATH']}"
+
 require 'rake'
 require 'rake/clean'
 
@@@@ -84,7 +86,7 @@@@ end
 source_file = RUBY_SOURCE ? RUBY_SOURCE.split('/').last : "#{RUBY_CC_VERSION}.tar.bz2"
 file "#{USER_HOME}/sources/#{RUBY_CC_VERSION}" => ["#{USER_HOME}/sources/#{source_file}"] do |t|
   chdir File.dirname(t.name) do
-    t.prerequisites.each { |f| sh "tar xf #{File.basename(f)}" }
+    t.prerequisites.each { |f| sh "tar jxf #{File.basename(f)}" }
   end
 end
 
@


1.2
log
@Switch from hard coding make to using MAKE_PROGRAM.

Prompted and OK ajacoutot@@
@
text
@d3 2
a4 2
Don't have it accidently use gmake, because the makefiles
created can use BSD make extensions.
d6 12
a17 3
--- tasks/bin/cross-ruby.rake.orig	Fri Dec 10 12:16:03 2010
+++ tasks/bin/cross-ruby.rake	Fri Dec 10 12:16:26 2010
@@@@ -33,7 +33,7 @@@@ end
d19 8
a26 1
 require 'rake/extensioncompiler'
a27 5
-MAKE = ENV['MAKE'] || %w[gmake make].find { |c| system("#{c} -v > /dev/null 2>&1") }
+MAKE = ENV['MAKE'] || '${MAKE_PROGRAM}'
 USER_HOME = File.expand_path("~/.rake-compiler")
 RUBY_CC_VERSION = "ruby-#{ENV['VERSION'] || '1.8.6-p398'}"
 RUBY_SOURCE = ENV['SOURCE']
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
+MAKE = ENV['MAKE'] || 'make'
@


1.1.1.1
log
@Import ruby-rake-compiler 0.7.5

rake-compiler aims to help Gem developers deal with Ruby extensions,
simplifying code and reducing duplication.

It follows convention over configuration and sets a standardized
structure to build and package both C and Java extensions in your gems.

This is the result of experiences dealing with several Gems that
required native extensions across platforms and different user
configurations where details like portability and clarity of code were
lacking.
@
text
@@
