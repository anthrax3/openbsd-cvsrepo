head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.2
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.5.0.8
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.6
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.1.1.0.6
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	jeremy_2011-Nov-15:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2017.07.26.22.45.18;	author sthen;	state Exp;
branches;
next	1.8;
commitid	tD4MFrpYYDDL2UFT;

1.8
date	2017.07.23.09.26.27;	author espie;	state Exp;
branches;
next	1.7;
commitid	FZPR2Emws5uDqXzb;

1.7
date	2017.07.16.19.18.52;	author espie;	state Exp;
branches;
next	1.6;
commitid	tt0GhWK5c4uf9ILG;

1.6
date	2017.04.10.11.45.26;	author sthen;	state Exp;
branches;
next	1.5;
commitid	XDh1zlSBq0boKsHk;

1.5
date	2015.07.16.17.27.08;	author jeremy;	state Exp;
branches;
next	1.4;
commitid	wGOk1Dw0Jh0UvwX9;

1.4
date	2015.05.09.15.08.24;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	8J3W93SaX1bPwtIf;

1.3
date	2014.04.18.09.55.22;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.11.10.50.27;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.15.16.35.15;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.11.15.16.35.15;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.9
log
@bump LIBCXX/LIBECXX/COMPILER_LIBCXX ports.
@
text
@# $OpenBSD: Makefile,v 1.8 2017/07/23 09:26:27 espie Exp $

COMMENT =		state machine compiler

DISTNAME =		ragel-6.9
REVISION =		2
CATEGORIES =		devel

HOMEPAGE =		http://www.colm.net/open-source/ragel/

# GPLv2
PERMIT_PACKAGE_CDROM = Yes

WANTLIB += c m ${COMPILER_LIBCXX}

MASTER_SITES =		http://www.colm.net/files/ragel/

MODULES =		lang/ruby

MODRUBY_RUNDEP =	No

USE_GMAKE =		Yes

CONFIGURE_STYLE =	gnu
CONFIGURE_ENV =		ac_cv_prog_RUBY=${RUBY} \
			ac_cv_prog_GDC= \
			ac_cv_prog_GMCS= \
			ac_cv_prog_GO= \
			ac_cv_prog_JAVAC= \
			ac_cv_prog_TXL=

TEST_DEPENDS =		shells/bash \
			textproc/gdiff

do-test:
	cd ${WRKBUILD}/test && ${LOCALBASE}/bin/bash ./runtests

.include <bsd.port.mk>
@


1.8
log
@add pthread to COMPILER_LIBCXX.
white lie, but it allows clang and gcc to be more similar
bump accordingly.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2017/07/16 19:18:52 espie Exp $
d6 1
a6 1
REVISION =		1
@


1.7
log
@use COMPILER_LIBCXX where applicable
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2017/04/10 11:45:26 sthen Exp $
d6 1
a6 1
REVISION =		0
@


1.6
log
@use LIBCXX
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2015/07/16 17:27:08 jeremy Exp $
d14 1
a14 1
WANTLIB += c m ${LIBCXX}
@


1.5
log
@Switch the default ruby version from ruby 2.1 to 2.2, and bump affected
ports.

OK jcs@@ ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2015/05/09 15:08:24 ajacoutot Exp $
d14 1
a14 1
WANTLIB += c m stdc++
@


1.4
log
@Update to ragel-6.9.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/04/18 09:55:22 ajacoutot Exp $
d6 1
@


1.3
log
@Use our default ruby.

ok jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/03/11 10:50:27 espie Exp $
d3 1
a3 1
COMMENT =	state machine compiler
d5 2
a6 3
DISTNAME =	ragel-6.7
CATEGORIES =	devel
REVISION =	0
d8 1
a8 1
HOMEPAGE =	http://www.complang.org/ragel/
d13 1
a13 1
MASTER_SITES =		${HOMEPAGE}
d15 1
a15 1
WANTLIB =		c m stdc++
d24 6
a29 1
CONFIGURE_ENV =		ac_cv_prog_RUBY=${RUBY}
@


1.2
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2011/11/15 16:35:15 jeremy Exp $
d7 1
d17 4
a20 1
BUILD_DEPENDS =		lang/ruby/1.8,-main
d25 1
a25 1
CONFIGURE_ENV =		ac_cv_prog_RUBY=ruby18
d27 1
a27 1
TEST_DEPENDS =	shells/bash \
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
a11 3
PERMIT_PACKAGE_FTP = Yes
PERMIT_DISTFILES_CDROM = Yes
PERMIT_DISTFILES_FTP = Yes
d23 1
a23 1
REGRESS_DEPENDS =	shells/bash \
d26 1
a26 1
do-regress:
@


1.1.1.1
log
@Import ragel 6.7.

Ragel compiles executable finite state machines from regular languages.
It targets C, C++, and Ruby. Ragel state machines can not only recognize
byte sequences as regular expression machines do, but can also execute
code at arbitrary points in the recognition of a regular language. Code
embedding is done using inline operators that do not disrupt the regular
language syntax.

OK robert@@
@
text
@@
