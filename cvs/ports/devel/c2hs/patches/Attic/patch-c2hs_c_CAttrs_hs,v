head	1.2;
access;
symbols
	OPENBSD_3_7:1.1.1.1.0.4
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	dons_2004-May-08:1.1.1.1
	dons:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2005.03.25.05.53.21;	author dons;	state dead;
branches;
next	1.1;

1.1
date	2004.05.08.07.21.03;	author dons;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.08.07.21.03;	author dons;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update devel/c2hs. All our patches have gone upstream :)
@
text
@$OpenBSD: patch-c2hs_c_CAttrs_hs,v 1.1 2004/05/08 07:21:03 dons Exp $

Extra comma

--- c2hs/c/CAttrs.hs.orig	2004-05-06 16:27:44.000000000 +1000
+++ c2hs/c/CAttrs.hs	2004-05-06 16:27:54.000000000 +1000
@@@@ -144,7 +144,7 @@@@ leaveRangeC ac  = ac {
 --
 leaveObjRangeC    :: AttrC -> AttrC
 leaveObjRangeC ac  = ac {
-		       defObjsAC = fst . leaveRange . defObjsAC $ ac,
+		       defObjsAC = fst . leaveRange . defObjsAC $ ac
 		     }
 
 -- add another definitions to the object name space (EXPORTED)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import C->Haskell (c2hs)

C->Haskell is an interface generator that simplifies the development
of Haskell bindings to C libraries.  The tool processes existing C
header files that determine data layout and function signatures on the
C side, in conjunction with Haskell modules that specify Haskell-side
type signatures and marshaling details. Hooks embedded in the Haskell
code signal access to C structures and functions; they are expanded by
the interfacing tool in conjunction with information in the
corresponding C header file. 

ok pvalchev@@
@
text
@@
