head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.22
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.20
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.18
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.14
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.16
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.12
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.10
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.8
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.6
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.4
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	edd_20120713:1.1.1.1
	edd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2012.07.13.08.36.03;	author edd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.07.13.08.36.03;	author edd;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@OUnit is a unit test framework for OCaml. It allows one to easily create
unit-tests for OCaml code. It is based on HUnit, a unit testing
framework for Haskell. It is similar to JUnit, and other XUnit testing
frameworks.

A test-oriented methodology for software development is most effective
whent tests are easy to create, change, and execute. The JUnit tool
pioneerded for test-first development in Java. OUnit is an adaptation of
JUnit to OCaml.

With OUnit, as with JUnit, you can easily create tests, name them, group
them into suites, and execute them, with the framework checking the
results automatically. 
@


1.1.1.1
log
@Import ounit; a unit testing tool for ocaml.

From Chris Zimmermann, with tweaks.

OK sthen@@

@
text
@@
