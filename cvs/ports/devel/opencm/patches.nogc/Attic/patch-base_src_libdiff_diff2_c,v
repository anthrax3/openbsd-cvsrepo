head	1.2;
access;
symbols
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2003.10.15.13.12.05;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2003.05.23.13.22.14;	author todd;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove the nogc flavor, pointless now that boehm-gc works again
update to the last public release opencm0.1.2alpha7pl1-1
@
text
@$OpenBSD: patch-base_src_libdiff_diff2_c,v 1.1 2003/05/23 13:22:14 todd Exp $
--- base/src/libdiff/diff2.c.orig	Sat Mar 29 16:15:25 2003
+++ base/src/libdiff/diff2.c	Thu May 22 17:46:42 2003
@@@@ -50,7 +50,7 @@@@ diff_extract_lines(Buffer *buf)
 
     while((nl = strnchr(bc.ptr, (size_t) bc.len, '\n'))) {
       ocmoff_t lineLen = nl - bc.ptr;
-      DiffLine *dl = GC_MALLOC(sizeof(DiffLine));
+      DiffLine *dl = malloc(sizeof(DiffLine));
 
       curHash = psum_incremental(curHash, bc.ptr, lineLen);
 
@@@@ -59,7 +59,7 @@@@ diff_extract_lines(Buffer *buf)
       dl->base = lastLineStart;
       dl->bound = pos + lineLen;
       {
-	char *lineBuf = GC_MALLOC_ATOMIC(lineLen + 1);
+	char *lineBuf = malloc(lineLen + 1);
 	lineBuf[lineLen] = 0;
 	buffer_read(buf, lineBuf, dl->base, dl->bound - dl->base);
 	dl->content = lineBuf;
@@@@ -86,7 +86,7 @@@@ diff_extract_lines(Buffer *buf)
   /* Deal with residual line that may not have been newline
      terminated, if any: */
   if (lastLineStart != end) {
-    DiffLine *dl = GC_MALLOC(sizeof(DiffLine));
+    DiffLine *dl = malloc(sizeof(DiffLine));
     ocmoff_t lineLen = end - lastLineStart;
 
     dl->lineNo = line++;
@@@@ -94,7 +94,7 @@@@ diff_extract_lines(Buffer *buf)
     dl->base = lastLineStart;
     dl->bound = end;
     {
-      char *lineBuf = GC_MALLOC_ATOMIC(lineLen + 1);
+      char *lineBuf = malloc(lineLen + 1);
       lineBuf[lineLen] = 0;
       buffer_read(buf, lineBuf, dl->base, dl->bound - dl->base);
       dl->content = lineBuf;
@@@@ -214,10 +214,10 @@@@ calc_ses_len(DiffRegion *a, DiffRegion *
   long MAX = M+N;		/* search limit */
   long D;
 
-  long *Vf_base = GC_MALLOC_ATOMIC(MAX*2 + 1);
+  long *Vf_base = malloc(MAX*2 + 1);
   long *Vf = Vf_base + MAX;
 
-  long *Vb_base = GC_MALLOC_ATOMIC(MAX*2 + 1);
+  long *Vb_base = malloc(MAX*2 + 1);
   long *Vb = Vb_base + MAX;
 
   long delta = N - M;
@@@@ -295,7 +295,7 @@@@ calc_ses_len(DiffRegion *a, DiffRegion *
 
   /* V is a vector indexed from [-MAX..MAX}. Keep Vbase alive so that
      the GC algorithm won't loose track of it. */
-  long *Vbase = GC_MALLOC_ATOMIC(MAX*2 + 1);
+  long *Vbase = malloc(MAX*2 + 1);
   long *V = Vbase + MAX;
 
   V[1] = 0;
@


1.1
log
@update to 0.1.2alpha5pl2 from 0.1.0alpha18

see http://www.opencm.org/news.html for hilights of this update, major
noteworthy changes include:

- sxd has gone away, gzfs is 'interim' while 'sxd2' is almost ready
- if you have an old sxd repository, read the mailing list archives for
  how to update (use an interum version)
- an incompatible update to the server/client protocol requires that you
  update both at the same time

(as a reminder, this is 'alpha' and as such is subject to incompatible changes
 like the above.  expect more to come when sxd2 emerges)

Also, add a 'nogc' flavor that removes the dependency on boehm-gc, at the
cost of not free()'ing all memory allocated (read: at the moment, most).
@
text
@d1 1
a1 1
$OpenBSD$
@

