head	1.2;
access;
symbols
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2003.10.15.13.12.04;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2003.05.23.13.22.14;	author todd;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove the nogc flavor, pointless now that boehm-gc works again
update to the last public release opencm0.1.2alpha7pl1-1
@
text
@$OpenBSD: patch-base_src_common_Buffer_c,v 1.1 2003/05/23 13:22:14 todd Exp $
--- base/src/common/Buffer.c.orig	Sun Apr  6 16:03:43 2003
+++ base/src/common/Buffer.c	Fri May 23 07:50:43 2003
@@@@ -38,6 +38,8 @@@@
  * POSSIBILITY OF SUCH DAMAGE.
  */
 
+#include <err.h>
+
 #include <opencm.h>
 #include "../../zlib/zlib.h"
 
@@@@ -63,10 +65,15 @@@@ void
 buffer_show(const void *vp)
 {
   const Buffer *buf = vp;
+  char *xstr;
   
   report(0, "Frozen:   %c\n", buf->frozen ? 'Y' : 'N');
-  report(0, "Bias:     %s\n", xunsigned64_str(CMGET(buf,bias)));
-  report(0, "End:      %s\n", xunsigned64_str(CMGET(buf,end)));
+  xstr = xunsigned64_str(CMGET(buf,bias));
+  report(0, "Bias:     %s\n", xstr);
+  free(xstr);
+  xstr = xunsigned64_str(CMGET(buf,end));
+  report(0, "End:      %s\n", xstr);
+  free(xstr);
   report(0, "Descrip: <omitted>\n");
 }
 
@@@@ -101,7 +108,10 @@@@ buffer_mark(Repository *r, const void *c
 Buffer *
 buffer_create(void)
 {
-  Buffer *buf = (Buffer *) GC_MALLOC(sizeof(Buffer));
+  Buffer *buf = (Buffer *) calloc(1, sizeof(Buffer));
+  if (buf == NULL)
+    errx(1, "calloc failed in buffer_create");
+
   ser_init(buf, &Buffer_SerType, Buffer_SerType.ver);
   SER_MODIFIED(buf);
 
@@@@ -155,7 +165,10 @@@@ buffer_append(Buffer *buf, const void *v
   unsigned char *bp = (unsigned char *) vp;
 
   while (BLKNDX(end) >= vec_size(CMGET(buf,vec))) {
-    unsigned char* block = GC_MALLOC_ATOMIC(BUFFER_BLOCK_SIZE);
+    unsigned char* block = calloc(1, BUFFER_BLOCK_SIZE);
+    if (block == NULL)
+      errx(1, "calloc failed in buffer_append");
+
     obvec_append(CMCLOBBER(buf,vec), block);
   }
   
@@@@ -214,9 +227,14 @@@@ buffer_FromFilePtr(const char *name, FIL
   rewind(f);
 
   for ( ;; ) {
-    unsigned char *block = GC_MALLOC_ATOMIC(BUFFER_BLOCK_SIZE);
+    unsigned char *block = calloc(1, BUFFER_BLOCK_SIZE);
+    size_t take;
+
+    if (block == NULL)
+      errx(1, "calloc failed in buffer_FromFilePtr");
+
+    take = fread(block, 1, BUFFER_BLOCK_SIZE, f);
 
-    size_t take = fread(block, 1, BUFFER_BLOCK_SIZE, f);
     if (take == 0 && feof(f))
       break;
     else if (take == 0)
@@@@ -338,7 +356,11 @@@@ char *
 buffer_asString(const Buffer *buf)
 {
   ocmoff_t len = buffer_length(buf);
-  char *s = GC_MALLOC_ATOMIC(len+1);
+  char *s = calloc(1, len+1);
+  if (s == NULL) {
+    errx(1, "calloc failed in buffer_asString");
+  }
+
   s[len] = 0;
 
   buffer_read(buf, s, 0, len);
@


1.1
log
@update to 0.1.2alpha5pl2 from 0.1.0alpha18

see http://www.opencm.org/news.html for hilights of this update, major
noteworthy changes include:

- sxd has gone away, gzfs is 'interim' while 'sxd2' is almost ready
- if you have an old sxd repository, read the mailing list archives for
  how to update (use an interum version)
- an incompatible update to the server/client protocol requires that you
  update both at the same time

(as a reminder, this is 'alpha' and as such is subject to incompatible changes
 like the above.  expect more to come when sxd2 emerges)

Also, add a 'nogc' flavor that removes the dependency on boehm-gc, at the
cost of not free()'ing all memory allocated (read: at the moment, most).
@
text
@d1 1
a1 1
$OpenBSD$
@

