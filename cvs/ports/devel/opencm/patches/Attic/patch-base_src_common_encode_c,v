head	1.4;
access;
symbols
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2002.10.11.12.27.00;	author todd;	state dead;
branches;
next	1.3;

1.3
date	2002.09.04.16.21.43;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.28.22.23.29;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2002.08.27.17.43.14;	author todd;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to alpha17 (finally some activity!)
@
text
@$OpenBSD: patch-base_src_common_encode_c,v 1.3 2002/09/04 16:21:43 todd Exp $
--- base/src/common/encode.c.orig	Mon Jul  8 16:31:06 2002
+++ base/src/common/encode.c	Tue Sep  3 23:34:47 2002
@@@@ -64,7 +64,7 @@@@ b64_lookup(unsigned char c)
 }
 
 void *
-b64_decode(const char *s, unsigned int *inlen)
+b64_decode(const char *s, u_int32_t *inlen)
 {
   unsigned len = *inlen;
   unsigned outlen = (len * 6) / 8;
@@@@ -119,7 +119,7 @@@@ b64_decode(const char *s, unsigned int *
 }
 
 char *
-b64_encode(const void *vp, unsigned int len)
+b64_encode(const void *vp, u_int32_t len)
 {
   unsigned const char *cp = vp;
   unsigned outlen = (len*8 + 5) / 6;
@@@@ -127,12 +127,12 @@@@ b64_encode(const void *vp, unsigned int 
   char *pBuf = outbuf;
 
   while (len) {
-    unsigned long take = min(len, 3);
-    unsigned long value = 0;
-    unsigned long outlen = (take * 8 + 5) / 6;
+    u_int32_t take = min(len, 3);
+    u_int32_t value = 0;
+    u_int32_t outlen = (take * 8 + 5) / 6;
     unsigned i;
 
-    assert(sizeof(unsigned long) == 4);
+    assert(sizeof(u_int32_t) == 4);
 
     if (take == 3) {
       value = cp[2];
@@@@ -174,7 +174,7 @@@@ fromhex(char c)
 /* Return decoded sequence of bytes along
  * with length of that sequence in 'len'*/
 void *
-hex_decode(const char *s, unsigned int *len)
+hex_decode(const char *s, u_int32_t *len)
 {
   unsigned char *b;
   unsigned u, w;
@@@@ -205,7 +205,7 @@@@ hex_decode(const char *s, unsigned int *
 /* Return encoded string that represents
  * 'len' bytes beginning at buf: */
 char *
-hex_encode(const void *vp, unsigned int len)
+hex_encode(const void *vp, u_int32_t len)
 {
   static char *hex_digits = "0123456789abcdef";
   unsigned u, w;
@


1.3
log
@o 64bit fixes are back, tested on i386, alpha, sparc64 (more archs work now
  than before)
o add the 'cm mv file* dir/.' fix from current
o we do not use zlib in this tree, remove an irrelevent patch accordingly
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@64bit stuff breaks in bad ways. more testing needed
@
text
@d1 1
a1 1
$OpenBSD: patch-base_src_common_encode_c,v 1.1 2002/08/27 17:43:14 todd Exp $
d3 19
a21 1
+++ base/src/common/encode.c	Tue Aug 27 12:25:27 2002
d39 18
@


1.1
log
@I was reminded about 64bit patches.
o rename three patches to 'update-patches' naming conventions
o add 64bit patches
o add other tidbits from my
   opencm://opencm.org/everyone/todd@@fries.net/home/merge-candidate
  branch
@
text
@d1 1
a1 1
$OpenBSD$
@

