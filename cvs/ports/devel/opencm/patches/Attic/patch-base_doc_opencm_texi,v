head	1.3;
access;
symbols
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	todd:1.1.1.1
	OpenCM_alpha_16:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2002.10.11.12.27.00;	author todd;	state dead;
branches;
next	1.2;

1.2
date	2002.08.27.17.43.14;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.27.16.46.09;	author todd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.08.27.16.46.09;	author todd;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to alpha17 (finally some activity!)
@
text
@$OpenBSD: patch-base_doc_opencm_texi,v 1.2 2002/08/27 17:43:14 todd Exp $
--- base/doc/opencm.texi.orig	Mon Jul 29 22:48:38 2002
+++ base/doc/opencm.texi	Tue Aug 27 12:25:26 2002
@@@@ -855,7 +855,7 @@@@ reconstruct your certificate if this hap
 When the administrator receives the certificate, they can create
 authorize this user by typing:
 @@example
-@@value{OPENCMD} -u admin add user jack.pem rw
+@@value{OPENCMD} -u admin adduser jack.pem rw
 @@end example
 
 The argument @@kbd{jack.pem} is the path to the certificate file for the
@@@@ -1592,7 +1592,7 @@@@ uploaded to repository until the @@code{c
 @@cmdarg{member} to the existing @@cmdarg{group}.
 
 @@item
-@@command{add user} @@cmdarg{certfile} @@cmdarg{r|w|rw} Registers a user on
+@@command{adduser} @@cmdarg{certfile} @@cmdarg{r|w|rw} Registers a user on
 a repository with the specified repository access (@@cmdarg{r} is
 read-only and @@cmdarg{w} is write-access).  You must specify the path to
 the user's certificate file as @@cmdarg{certfile} and all certificates
@


1.2
log
@I was reminded about 64bit patches.
o rename three patches to 'update-patches' naming conventions
o add 64bit patches
o add other tidbits from my
   opencm://opencm.org/everyone/todd@@fries.net/home/merge-candidate
  branch
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d1 4
a4 3
--- base/doc/opencm.texi.orig	Wed Aug 14 17:50:54 2002
+++ base/doc/opencm.texi	Wed Aug 14 17:51:03 2002
@@@@ -855,7 +855,7 @@@@
d13 1
a13 1
@@@@ -1592,7 +1592,7 @@@@
@


1.1.1.1
log
@OpenCM alpha16

OpenCM is designed as a secure, high-integrity replacement for CVS. A list of
the key features can be found on the features page. While not as ``feature
rich'' as CVS, it supports some useful things that CVS lacks. Briefly, OpenCM
provides first-class support for renames and configuration, cryptographic
authentication and access control, and first-class branches. 

The OpenCM project was originally started because we needed a secure,
high-integrity configuration management system for the EROS project.
Alternatives, such as BitKeeper, Subversion, and PerForce, either did not
meet our requirements or were not available at the time the work started. We
had previously used CVS, but it's absence of real branches and configurations
finally drove us to build a better tool. 
@
text
@@
