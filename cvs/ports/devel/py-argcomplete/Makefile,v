head	1.7;
access;
symbols
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.6
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	landry_20130810:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2017.01.03.19.19.48;	author landry;	state Exp;
branches;
next	1.6;
commitid	NkZaP5skFWQkYqhM;

1.6
date	2016.11.10.21.58.40;	author danj;	state Exp;
branches;
next	1.5;
commitid	4ER2f1Ti7zNi2Qmp;

1.5
date	2016.08.28.10.55.38;	author danj;	state Exp;
branches;
next	1.4;
commitid	LhxHHfWr7Cv90odK;

1.4
date	2015.12.30.19.23.30;	author jasper;	state Exp;
branches;
next	1.3;
commitid	MlRY3h1Ij7mPBSiN;

1.3
date	2015.09.29.10.51.43;	author sthen;	state Exp;
branches;
next	1.2;
commitid	NAa0n7dMfq2qVX1q;

1.2
date	2015.04.02.14.21.13;	author jasper;	state Exp;
branches;
next	1.1;
commitid	4Dkfcsk2uZtFDSwy;

1.1
date	2013.08.10.13.59.06;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.08.10.13.59.06;	author landry;	state Exp;
branches;
next	;


desc
@@


1.7
log
@bump ports depending on python3 in devel
@
text
@# $OpenBSD: Makefile,v 1.6 2016/11/10 21:58:40 danj Exp $

COMMENT =	bash tab completion for argparse

MODPY_EGG_VERSION =	1.4.1
DISTNAME =	argcomplete-${MODPY_EGG_VERSION}
PKGNAME =	py-${DISTNAME}
CATEGORIES =	devel
REVISION =	0

# GPLv3+
PERMIT_PACKAGE_CDROM=	Yes

MODULES =	lang/python

MODPY_PI =		Yes
MODPY_SETUPTOOLS =	Yes

FLAVORS =		python3
FLAVOR ?=

post-install:
	for i in ${PREFIX}/bin/*; do \
		mv $${i} $${i}${MODPY_BIN_SUFFIX} ;\
	done

do-test:
	cd ${WRKSRC}/test && ${MODPY_BIN} test.py

.include <bsd.port.mk>
@


1.6
log
@Remove superfluous if ${FLAVOR:Mpython3}

tweaks and ok rpointel@@ shadchin@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2016/08/28 10:55:38 danj Exp $
d9 1
@


1.5
log
@Update to py-argcomplete-1.4.1 and add a py3 flavor

ok jca@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2015/12/30 19:23:30 jasper Exp $
a20 1
.if ${FLAVOR:Mpython3}
a24 1
.endif
@


1.4
log
@update to py-argcomplete-0.8.7
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2015/09/29 10:51:43 sthen Exp $
d3 1
a3 1
COMMENT =	Bash tab completion for argparse
d5 1
a5 1
MODPY_EGG_VERSION =	0.8.7
a8 1
HOMEPAGE =	http://packages.python.org/argcomplete
d13 1
a13 1
MODPY_PI =	Yes
d15 1
a15 1
MODULES =	lang/python
d17 13
@


1.3
log
@bump REVISION for setuptools dep change.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2015/04/02 14:21:13 jasper Exp $
d5 1
a5 1
MODPY_EGG_VERSION =	0.5.7
a9 1
REVISION =	0
@


1.2
log
@- switch to MODPY_PI
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/08/10 13:59:06 landry Exp $
d10 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d14 1
a14 1
MASTER_SITES =	${MASTER_SITE_PYPI:=a/argcomplete/}
@


1.1.1.1
log
@Import argcomplete 0.5.7.

Argcomplete provides easy, extensible command line tab completion of
arguments for your Python script.

It makes two assumptions:

* You're using bash as your shell
* You're using argparse to manage your command line arguments/options

(hidden dependency of py-argh, needed to remove a warning at runtime in barman)
@
text
@@
