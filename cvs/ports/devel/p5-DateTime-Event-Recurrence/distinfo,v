head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.6
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.14
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.12
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.10
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.8
	OPENBSD_5_0:1.1.1.1.0.6
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.4
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	giovanni-20100412:1.1.1.1
	giovanni:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.11.12.09.27.28;	author benoit;	state Exp;
branches;
next	1.2;
commitid	5rKgLD7IKDzYlR8y;

1.2
date	2015.01.18.03.13.25;	author naddy;	state Exp;
branches;
next	1.1;
commitid	INAcawJqik7lWSVj;

1.1
date	2010.04.12.17.03.15;	author giovanni;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.04.12.17.03.15;	author giovanni;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to p5-DateTime-Event-Recurrence-0.18.
@
text
@SHA256 (DateTime-Event-Recurrence-0.18.tar.gz) = FdG+sjFxZg2E/2gPQTnmgGxd4dc2XiH0wHO27hI9Ips=
SIZE (DateTime-Event-Recurrence-0.18.tar.gz) = 24702
@


1.2
log
@Drop remaining MD5/RMD160/SHA1 checksums.
@
text
@d1 2
a2 2
SHA256 (DateTime-Event-Recurrence-0.16.tar.gz) = OHLgEmzZUnqRjT5Tf4U0LR+7Hmqa5YMyYiAbMYefhgk=
SIZE (DateTime-Event-Recurrence-0.16.tar.gz) = 23915
@


1.1
log
@Initial revision
@
text
@a0 3
MD5 (DateTime-Event-Recurrence-0.16.tar.gz) = mgiDCwgak2GfSoVkBj478A==
RMD160 (DateTime-Event-Recurrence-0.16.tar.gz) = +SmTNnr9maYCWgVpyxuri0ltmPc=
SHA1 (DateTime-Event-Recurrence-0.16.tar.gz) = +CM/OeAtbFbpYJ5vQelaVs/H2rA=
@


1.1.1.1
log
@
Import p5-DateTime-Event-Recurrence, a DateTime::Set extension to create
basic recurrence sets.

This module provides convenience methods that let you easily create
DateTime::Set objects for various recurrences, such as "once a
month" or "every day". You can also create more complicated
recurrences, such as "every Monday, Wednesday and Thursday at 10:00
AM and 2:00 PM".
@
text
@@
