head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.16
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.10
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.12
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.8
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.24
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.22
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.20
	OPENBSD_5_0:1.4.0.18
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.16
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.14
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.12
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.10
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.8
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	msf_2004_06_09:1.1.1.1
	msf:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2013.03.09.15.20.01;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2007.04.05.15.38.03;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.05.16.22.40;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.21.02.51.21;	author msf;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.10.01.36.18;	author msf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.06.10.01.36.18;	author msf;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to Test::Taint 1.06, from dhill
@
text
@SHA256 (Test-Taint-1.06.tar.gz) = chtRypHSSOpf9PmcpJwFoIDm8PyfeYPpYSG3d1q5MQc=
SIZE (Test-Taint-1.06.tar.gz) = 13346
@


1.4
log
@base64 distinfo with SHA256
@
text
@d1 2
a2 5
MD5 (Test-Taint-1.04.tar.gz) = oAWrWi4iq0YrTzZh0dHV4A==
RMD160 (Test-Taint-1.04.tar.gz) = g7dooMSUMCYYFMI1GB9nf5VUq98=
SHA1 (Test-Taint-1.04.tar.gz) = oLfxm+Mf77GkdUZlmZA+4eM/EZE=
SHA256 (Test-Taint-1.04.tar.gz) = 737mvqAyOkTxVSmMF4c+4occmqPKabcuYvhCBX8O7ZA=
SIZE (Test-Taint-1.04.tar.gz) = 12404
@


1.3
log
@SIZE
@
text
@d1 4
a4 3
MD5 (Test-Taint-1.04.tar.gz) = a005ab5a2e22ab462b4f3661d1d1d5e0
RMD160 (Test-Taint-1.04.tar.gz) = 83b768a0c49430261814c235181f677f9554abdf
SHA1 (Test-Taint-1.04.tar.gz) = a0b7f19be31fefb1a475466599903ee1e33f1191
@


1.2
log
@- NOT_FOR_ARCHS = NO_SHARED_ARCHS -> SHARED_ONLY
- update to 1.04
@
text
@d4 1
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
MD5 (Test-Taint-1.02.tar.gz) = ffd7c70c4c44e5b8124d8d291a5de802
RMD160 (Test-Taint-1.02.tar.gz) = cae5a750dc74d3993ba1f9974ce10d2077bf2942
SHA1 (Test-Taint-1.02.tar.gz) = 41f238fa5241f2204a1b66efa8452b81f6b9802e
@


1.1.1.1
log
@
Initial import of Test-Taint-1.02

When you're writing unit tests for code that deals with tainted data,
you'll want to have a way to provide tainted data for your routines to
handle, and easy ways to check and report on the taintedness of your
data, in standard Test::More style.
@
text
@@
