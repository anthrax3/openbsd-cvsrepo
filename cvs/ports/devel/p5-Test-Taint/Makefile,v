head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.6
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.4
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.2
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.2
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.13.0.2
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.10.0.8
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.6
	OPENBSD_5_0:1.10.0.4
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.6
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.3.0.4
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	msf_2004_06_09:1.1.1.1
	msf:1.1.1;
locks; strict;
comment	@# @;


1.16
date	2016.03.20.19.56.38;	author naddy;	state Exp;
branches;
next	1.15;
commitid	WXJcpbKc0PauxEav;

1.15
date	2015.07.16.23.57.24;	author ajacoutot;	state Exp;
branches;
next	1.14;
commitid	tdKVYJOlplb8bzTQ;

1.14
date	2014.06.14.23.24.59;	author sthen;	state Exp;
branches;
next	1.13;
commitid	Df1iXE2gVS6WfgeA;

1.13
date	2013.10.11.23.49.22;	author naddy;	state Exp;
branches;
next	1.12;

1.12
date	2013.03.09.15.20.01;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2012.08.23.15.08.05;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2010.12.03.11.44.37;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2010.10.18.17.48.08;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2010.09.24.15.29.22;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2010.09.15.13.52.11;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2010.07.13.19.46.13;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.02.20.35.10;	author simon;	state Exp;
branches;
next	1.4;

1.4
date	2007.09.16.02.53.10;	author merdely;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.29.08.23.31;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.21.02.51.21;	author msf;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.10.01.36.18;	author msf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.06.10.01.36.18;	author msf;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Remove SHARED_ONLY from all CPAN Perl ports and the cpan and perl MODULES.
Add WANTLIB+=perl and PKG_ARCH=* as appropriate.
@
text
@# $OpenBSD: Makefile,v 1.15 2015/07/16 23:57:24 ajacoutot Exp $

COMMENT=	tools to test taintedness

MODULES=	cpan
DISTNAME=	Test-Taint-1.06
CATEGORIES=	devel
REVISION=	1

# Artistic
PERMIT_PACKAGE_CDROM=	Yes

WANTLIB += c perl

MAKE_ENV=	TEST_POD=Yes

.include <bsd.port.mk>
@


1.15
log
@Remove the perl bullshit.
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.14 2014/06/14 23:24:59 sthen Exp $

SHARED_ONLY=	Yes
d13 1
a13 1
WANTLIB += c
@


1.14
log
@@@comment zero-byte perl .bs files
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2013/10/11 23:49:22 naddy Exp $
d10 1
a10 1
REVISION=	0
@


1.13
log
@Drop USE_GROFF since groff and mandoc produce identical output.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2013/03/09 15:20:01 sthen Exp $
d10 1
@


1.12
log
@update to Test::Taint 1.06, from dhill
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2012/08/23 15:08:05 sthen Exp $
a9 1
USE_GROFF =	Yes
@


1.11
log
@sync wantlib
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2010/12/03 11:44:37 ajacoutot Exp $
d5 1
a5 1
COMMENT= 	tools to test taintedness
d8 1
a8 2
DISTNAME=	Test-Taint-1.04
REVISION=	5
a13 3
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes
@


1.10
log
@Bump after recent cpan.port.mk change.
ok jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2010/10/18 17:48:08 espie Exp $
d9 1
a9 1
REVISION=	4
d18 2
@


1.9
log
@USE_GROFF=Yes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2010/09/24 15:29:22 sthen Exp $
d9 1
a9 1
REVISION=	3
@


1.8
log
@bump
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2010/09/15 13:52:11 sthen Exp $
d11 1
@


1.7
log
@drop msf as maintainer on his p5- thingys and bump REVISION
"perl smells like dead moose farts and you can quote me on that" msf@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2010/07/13 19:46:13 sthen Exp $
d9 1
a9 1
REVISION=	2
@


1.6
log
@use REVISION
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2008/10/02 20:35:10 simon Exp $
d9 1
a9 1
REVISION=	1
a10 2

MAINTAINER=	Mathieu Sauve-Frankel <msf@@openbsd.org>
@


1.5
log
@bump SHARED_ONLY ports so they get updated and work with the new perl

feedback and ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2007/09/16 02:53:10 merdely Exp $
d9 1
a9 1
PKGNAME=	p5-${DISTNAME}p1
@


1.4
log
@Remove quotes surrounding COMMENT*/PERMIT_*/BROKEN
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2006/11/29 08:23:31 espie Exp $
d9 1
a9 1
PKGNAME=	p5-${DISTNAME}p0
@


1.3
log
@switch everyone left in devel to cpan
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2004/12/21 02:51:21 msf Exp $
d5 1
a5 1
COMMENT= 	"tools to test taintedness"
@


1.2
log
@- NOT_FOR_ARCHS = NO_SHARED_ARCHS -> SHARED_ONLY
- update to 1.04
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2004/06/10 01:36:18 msf Exp $
d7 1
d9 2
a10 2
PKGNAME=	p5-${DISTNAME}
CATEGORIES=	devel perl5
d20 1
a20 7
MASTER_SITES=	${MASTER_SITE_PERL_CPAN:=Test/}

REGRESS_DEPENDS= ::devel/p5-Test-Pod-Coverage

CONFIGURE_STYLE= perl

PKG_ARCH=	*
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d3 1
a3 1
NOT_FOR_ARCHS=	${NO_SHARED_ARCHS}
d7 1
a7 1
DISTNAME=	Test-Taint-1.02
@


1.1.1.1
log
@
Initial import of Test-Taint-1.02

When you're writing unit tests for code that deals with tainted data,
you'll want to have a way to provide tainted data for your routines to
handle, and easy ways to check and report on the taintedness of your
data, in standard Test::More style.
@
text
@@
