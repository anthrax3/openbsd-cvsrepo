head	1.2;
access;
symbols
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2009.05.07.08.14.51;	author simon;	state dead;
branches;
next	1.1;

1.1
date	2009.02.09.12.08.25;	author simon;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to version 0.83
@
text
@$OpenBSD: patch-Makefile_PL,v 1.1 2009/02/09 12:08:25 simon Exp $

Avoid GNU make inference rules extension, from NetBSD (applied uptream
already).

--- Makefile.PL.orig	Thu Jan 22 23:20:41 2009
+++ Makefile.PL	Mon Feb  9 11:54:12 2009
@@@@ -130,9 +130,7 @@@@ sub is_maintainer {
 sub get_pp_tests {
     opendir my $dh, 't' or die "Cannot read t: $!";
 
-    return map {
-        File::Spec->catfile('t', "pp_${_}")
-    } grep { $_ !~ /^99/ } grep {/^\d.+\.t$/} readdir $dh;
+    return grep { $_ !~ /^99/ } grep {/^\d.+\.t$/} readdir $dh;
 }
 
 # This is EUMM voodoo
@@@@ -149,9 +147,17 @@@@ sub init {
 package MY;
 
 sub postamble {
-    my $pp_tests = join q{ }, ::get_pp_tests();
+    my @@test_files = ::get_pp_tests();
+    my $pp_tests = join q{ }, map { File::Spec->catfile('t', "pp_${_}") } @@test_files;
+    my @@pp_test_targets = join qq{\n}, map {
+        my $source = File::Spec->catfile('t', ${_});
+        File::Spec->catfile('t', "pp_${_}") . q{: }
+        . qq{$source t/header_pp.inc\n\t}
+        . q{$(NOECHO) $(ABSPERLRUN) "-MExtUtils::Command" -e cat t/header_pp.inc }
+        . $source . q{ > $@@} . qq{\n}
+    } @@test_files;
     my $test_dep = $::has_compiler && ::is_maintainer()
-        ? 'pure_all :: pp_tests'
+        ? qq{pure_all :: pp_tests\n} . join qq{\n}, @@pp_test_targets
         : '';
 
     return <<"EOM"
@@@@ -159,7 +165,5 @@@@ pp_tests: ${pp_tests}
 
 ${test_dep}
 
-t/pp_%: t/% t/header_pp.inc
-\t\$(NOECHO) \$(ABSPERLRUN) "-MExtUtils::Command" -e cat t/header_pp.inc \$< > \$@@
 EOM
 }
@


1.1
log
@update to version 0.76 but avoid use of gmake

gmakeism identified by James Wright, patch from netbsd found by sthen@@,
thanks guys!
testing and ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@

