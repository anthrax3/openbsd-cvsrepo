head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.4
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.2
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.11
date	2017.09.02.21.34.12;	author jeremy;	state Exp;
branches
	1.11.2.1;
next	1.10;
commitid	CNZruoNJxjG8r965;

1.10
date	2010.11.08.23.21.47;	author jeremy;	state dead;
branches;
next	1.9;

1.9
date	2010.10.06.18.12.19;	author jeremy;	state Exp;
branches;
next	1.8;

1.8
date	2009.10.12.17.18.00;	author bernd;	state Exp;
branches;
next	1.7;

1.7
date	2008.09.28.15.45.18;	author bernd;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.17.22.42.59;	author bernd;	state Exp;
branches;
next	1.5;

1.5
date	2008.01.12.14.51.15;	author bernd;	state Exp;
branches;
next	1.4;

1.4
date	2007.11.13.17.27.17;	author bernd;	state Exp;
branches;
next	1.3;

1.3
date	2007.11.13.16.02.35;	author bernd;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.30.23.34.36;	author jcs;	state dead;
branches;
next	1.1;

1.1
date	2006.10.19.00.53.55;	author bernd;	state Exp;
branches;
next	;

1.11.2.1
date	2017.09.07.17.26.48;	author jeremy;	state Exp;
branches;
next	;
commitid	2rNzaPKgilANE9Yw;


desc
@@


1.11
log
@Backport security patches in rubygems 2.6.13 to 1.8.24. No CVE numbers,
but this fixes the following vulnerabilities:

* Fix a DNS request hijacking vulnerability.
* Fix an ANSI escape sequence vulnerability.
* Fix a DOS vulernerability in the query command.
* Fix a vulnerability in the gem installer that allowed a malicious
  gem to overwrite arbitrary files.
@
text
@$OpenBSD$

Index: lib/rubygems/installer.rb
--- lib/rubygems/installer.rb.orig
+++ lib/rubygems/installer.rb
@@@@ -152,6 +152,10 @@@@ class Gem::Installer
     @@security_policy = nil if @@force and @@security_policy and
                               not @@security_policy.only_signed
 
+    unless spec.name =~ /\A[a-zA-Z0-9\.\-\_]+\z/
+      raise Gem::InstallError, "#{spec} has an invalid name"
+    end
+
     unless @@force
       ensure_required_ruby_version_met
       ensure_required_rubygems_version_met
@


1.11.2.1
log
@Backport rubygems 2.6.13 security patches to rubygems 1.8.24.
@
text
@@


1.10
log
@Remove --skip-depends and --default-source-index gem install options,
no longer needed.

OK landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_rubygems_installer_rb,v 1.9 2010/10/06 18:12:19 jeremy Exp $
d3 6
a8 14
This is for GEM_SKIPDEPENDS in ruby.port.mk.

--- lib/rubygems/installer.rb.orig	Mon Apr 19 23:47:36 2010
+++ lib/rubygems/installer.rb	Wed Oct  6 10:26:54 2010
@@@@ -113,6 +113,7 @@@@ class Gem::Installer
     @@bin_dir             = options[:bin_dir]
     @@development         = options[:development]
     @@source_index        = options[:source_index]
+    @@skip_dependencies   = options[:skip_dependencies]
 
     begin
       @@format = Gem::Format.from_file_by_path @@gem, @@security_policy
@@@@ -178,7 +179,12 @@@@ class Gem::Installer
         deps |= @@spec.development_dependencies if @@development
d10 7
a16 11
         deps.each do |dep_gem|
-          ensure_dependency @@spec, dep_gem
+          if @@skip_dependencies && @@skip_dependencies.include?(dep_gem.name)
+            say "Skipping '#{dep_gem.name}' dependency."
+            @@spec.dependencies.delete(dep_gem)
+          else
+            ensure_dependency @@spec, dep_gem
+          end
         end
       end
     end
@


1.9
log
@This adds an ugly hack to make gem install --user-install work
for gems with native extensions. Without this, it calls
/usr/bin/install -o root -g bin as a regular user, which fails due
to permission issues. This removes the -o root -g bin, so it can
succeed as a regular user.

Regen patches while here.

Idea to just remove -o root -g bin instead of using cp -p from
landry@@.

OK landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_rubygems_installer_rb,v 1.8 2009/10/12 17:18:00 bernd Exp $
@


1.8
log
@Update to ruby-gems-1.3.5.

From Jeremy Evans. Thank you!
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_rubygems_installer_rb,v 1.7 2008/09/28 15:45:18 bernd Exp $
d5 3
a7 3
--- lib/rubygems/installer.rb.orig	Mon Jun 22 15:54:36 2009
+++ lib/rubygems/installer.rb	Tue Sep  8 18:23:08 2009
@@@@ -114,6 +114,7 @@@@ class Gem::Installer
d15 1
a15 1
@@@@ -199,7 +200,12 @@@@ class Gem::Installer
@


1.7
log
@Update to ruby-gems-1.3.0.

Initial diff for 1.2.0 from Jeremy Evans.
Some hints from sturm@@.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_rubygems_installer_rb,v 1.6 2008/06/17 22:42:59 bernd Exp $
d5 7
a11 7
--- lib/rubygems/installer.rb.orig	Tue Sep 23 06:01:38 2008
+++ lib/rubygems/installer.rb	Sat Sep 27 23:05:48 2008
@@@@ -109,6 +109,7 @@@@ class Gem::Installer
     @@bin_dir = options[:bin_dir]
     @@development = options[:development]
     @@source_index = options[:source_index]
+    @@skip_dependencies = options[:skip_dependencies]
d15 1
a15 1
@@@@ -194,7 +195,12 @@@@ class Gem::Installer
@


1.6
log
@Update to ruby-gems-1.1.1.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_rubygems_installer_rb,v 1.5 2008/01/12 14:51:15 bernd Exp $
d5 3
a7 5
--- lib/rubygems/installer.rb.orig	Sat Apr 19 14:52:49 2008
+++ lib/rubygems/installer.rb	Sat Apr 19 14:53:52 2008
@@@@ -76,6 +76,7 @@@@ class Gem::Installer
     @@security_policy = options[:security_policy]
     @@wrappers = options[:wrappers]
d9 2
d15 2
a16 1
@@@@ -120,7 +121,12 @@@@ class Gem::Installer
d18 1
a18 2
       unless @@ignore_dependencies then
         @@spec.dependencies.each do |dep_gem|
@


1.5
log
@Update to ruby-gems-1.0.1.

help & testing jcs@@, msf@@

ok jcs@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 4
--- lib/rubygems/installer.rb.orig	Fri Dec 21 01:43:06 2007
+++ lib/rubygems/installer.rb	Fri Dec 21 16:46:28 2007
@@@@ -73,6 +73,7 @@@@ class Gem::Installer
     @@format_executable = options[:format_executable]
d10 1
d15 1
a15 1
@@@@ -117,7 +118,12 @@@@ class Gem::Installer
@


1.4
log
@Actually remove the skipped gem from the dependency chain so that it
doesn't end up in the .gemspec file.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_rubygems_installer_rb,v 1.3 2007/11/13 16:02:35 bernd Exp $
d5 21
a25 14
--- lib/rubygems/installer.rb.orig	Thu May 10 21:01:45 2007
+++ lib/rubygems/installer.rb	Tue Nov 13 18:08:41 2007
@@@@ -79,7 +79,12 @@@@ module Gem
         end
         unless @@options[:ignore_dependencies]
           spec.dependencies.each do |dep_gem|
-            ensure_dependency!(spec, dep_gem)
+            if @@options[:skip_dependencies] &&
+               @@options[:skip_dependencies].include?(dep_gem.name)
+              spec.dependencies.delete(dep_gem)
+            else
+              ensure_dependency!(spec, dep_gem)		
+            end
           end
d28 1
@


1.3
log
@Add a --skip-dependencies option to the gem install command.
This can be used to ignore bogus gem depends.

ok jcs, "sounds reasonable but I haven't really looked at it" msf@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 2
a7 2
+++ lib/rubygems/installer.rb	Sat Nov 10 20:35:12 2007
@@@@ -79,7 +79,10 @@@@ module Gem
d12 4
a15 2
+            unless @@options[:skip_dependencies] &&
+                   @@options[:skip_dependencies].include?(dep_gem.name)
@


1.2
log
@update to gems 0.9.4
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_rubygems_installer_rb,v 1.1 2006/10/19 00:53:55 bernd Exp $
d3 1
a3 2
Backport from rubygems subversion repository. Fixes building of native
extensions. (i.e. ruby-postgresql)
d5 12
a16 38
---
r1062 | jimweirich | 2006-08-10 20:15:28 +0200 (Thu, 10 Aug 2006) | 2 lines

Installed Tilman Sauerbeck's patch to fix C builds in gems.
---

--- lib/rubygems/installer.rb.orig	Wed Jun  7 05:39:54 2006
+++ lib/rubygems/installer.rb	Wed Oct 18 19:36:51 2006
@@@@ -292,9 +292,12 @@@@ TEXT
       say "Building native extensions.  This could take a while..."
       start_dir = Dir.pwd
       dest_path = File.join(directory, spec.require_paths[0])
+      ran_rake = false # only run rake once
 
-      results = []
       spec.extensions.each do |extension|
+        break if ran_rake
+        results = []
+
         case extension
         when /extconf/ then
           builder = ExtExtConfBuilder
@@@@ -302,6 +305,7 @@@@ TEXT
           builder = ExtConfigureBuilder
         when /rakefile/i then
           builder = ExtRakeBuilder
+          ran_rake = true
         else
           builder = nil
           results = ["No builder for extension '#{extension}'"]
@@@@ -310,7 +314,7 @@@@ TEXT
         begin
           err = false
           Dir.chdir File.join(directory, File.dirname(extension))
-          results = builder.build(extension, directory, dest_path)
+          results = builder.build(extension, directory, dest_path, results)
         rescue => ex
           err = true
a17 38
@@@@ -551,29 +555,27 @@@@ TEXT
   end  # class Uninstaller
 
   class ExtConfigureBuilder
-    def self.build(extension, directory, dest_path)
-      results = []
+    def self.build(extension, directory, dest_path, results)
       unless File.exist?('Makefile') then
         cmd = "sh ./configure --prefix=#{dest_path}"
         results << cmd
         results << `#{cmd}`
       end
 
-      results.push(*ExtExtConfBuilder.make(dest_path))
+      ExtExtConfBuilder.make(dest_path, results)
       results
     end
   end
 
   class ExtExtConfBuilder
-    def self.build(extension, directory, dest_path)
-      results = ["#{Gem.ruby} #{File.basename(extension)} #{ARGV.join(" ")}"]
+    def self.build(extension, directory, dest_path, results)
+      results << "#{Gem.ruby} #{File.basename(extension)} #{ARGV.join(" ")}"
       results << `#{Gem.ruby} #{File.basename(extension)} #{ARGV.join(" ")}`
-      results.push(*make(dest_path))
+      make(dest_path, results)
       results
     end
 
-    def self.make(dest_path)
-      results = []
+    def self.make(dest_path, results)
       raise unless File.exist?('Makefile')
       mf = File.read('Makefile')
       mf = mf.gsub(/^RUBYARCHDIR\s*=\s*\$[^$]*/, "RUBYARCHDIR = #{dest_path}")
@@@@ -585,27 +587,25 @@@@ TEXT
         make_program = (/mswin/ =~ RUBY_PLATFORM) ? 'nmake' : 'make'
a18 32
 
-      ['', 'install', 'clean'].each do |target|
+      ['', 'install'].each do |target|
         results << "#{make_program} #{target}".strip
         results << `#{make_program} #{target}`
-      end
 
-      results
+        raise unless $?.exitstatus.zero?
+      end
     end
 
   end
 
   class ExtRakeBuilder
-    def ExtRakeBuilder.build(ext, directory, dest_path)
+    def ExtRakeBuilder.build(ext, directory, dest_path, results)
       make_program = ENV['rake'] || 'rake'
       make_program += " RUBYARCHDIR=#{dest_path} RUBYLIBDIR=#{dest_path}"
 
-      results = []
+      results << "#{make_program} extension".strip
+      results << `#{make_program} extension`
 
-      ['', 'install', 'clean'].each do |target|
-        results << "#{make_program} #{target}".strip
-        results << `#{make_program} #{target}`
-      end
+      raise unless $?.exitstatus.zero?
 
       results
     end
@


1.1
log
@Update to ruby-gems-0.9.0 and backport some code from the gems subversion
repository to fix building of native extensions. (sigh!)

A summary of changes can be found here:
http://rubyforge.org/forum/forum.php?forum_id=7575

ok msf@@, sturm@@
@
text
@d1 1
a1 1
$OpenBSD$
@

