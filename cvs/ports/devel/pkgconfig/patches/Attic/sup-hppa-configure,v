head	1.2;
access;
symbols
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.12.08.04.32.11;	author marcm;	state dead;
branches;
next	1.1;

1.1
date	2004.02.01.07.20.04;	author marcm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@hppa's build this w/o workarounds now.
@
text
@$OpenBSD: sup-hppa-configure,v 1.1 2004/02/01 07:20:04 marcm Exp $
--- configure.orig	2003-01-16 13:09:17.000000000 -0800
+++ configure	2004-01-31 21:08:10.000000000 -0800
@@@@ -5525,7 +5525,10 @@@@ EOF
 esac
 echo "$ac_t""$native_win32" 1>&6
 
-
+native_win32=yes
+cat >> confdefs.h <<\EOF
+#define USE_INSTALLED_GLIB 1
+EOF
 
 if test x$native_win32 = xyes; then
   USE_INSTALLED_GLIB_TRUE=
@@@@ -5543,8 +5546,8 @@@@ if test x$native_win32 = xyes; then
   # mechanism). Others use prebuilt versions.
   #
   # These are correct for GLib 2.x
-  GLIB_CFLAGS="-I$includedir/glib-2.0 -I$libdir/glib-2.0/include"
-  GLIB_LIBS="-L$libdir -lglib-2.0 -liconv -lintl"
+  GLIB_CFLAGS="-I$includedir/glib-1.2"
+  GLIB_LIBS="$libdir/libglib.a"
 
   
   
@


1.1
log
@For reasons totally unclear to me, hppa segfaults with the included
glib code but not when statically linked with the in-tree glib.

So, on hppa, solve this by statically linking to the in-tree glib.
@
text
@d1 1
a1 1
$OpenBSD$
@

