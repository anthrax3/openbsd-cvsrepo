head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.1.1.1.0.4
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	kili_20100410:1.1.1.1
	kili:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2012.09.02.19.59.41;	author kili;	state dead;
branches;
next	1.3;

1.3
date	2011.04.11.14.35.33;	author kili;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.14.09.17.26;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2010.04.10.15.36.10;	author kili;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.04.10.15.36.10;	author kili;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove hs-deepseq. It's now included in the ghc package.
@
text
@This package provides methods for fully evaluating data structures
("deep evaluation"). Deep evaluation is often used for adding
strictness to a program, e.g. in order to force pending exceptions,
remove space leaks, or force lazy I/O to happen. It is also useful
in parallel programs, to ensure pending work does not migrate to
the wrong thread.

The primary use of this package is via the 'deepseq' function, a
"deep" version of 'seq'. It is implemented on top of an 'NFData'
typeclass ("Normal Form Data", data structures with no unevaluated
components) which defines strategies for fully evaluating different
data types.
@


1.3
log
@Update to 1.1.0.2.
@
text
@@


1.2
log
@fix various typos, from Anthony J. Bentley with a few tweaks by myself
@
text
@d1 12
a12 2
This package provides a "deep" version of seq, for fully evaluating
data structures.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
This package provides a "deep" version of seq, for fully evluating
@


1.1.1.1
log
@Import hs-deepseq. Part of the Haskell Platform.

Not yet wired to the build.

@
text
@@
