head     1.1;
branch   1.1.1;
access   ;
symbols  sthen_20160803:1.1.1.1 sthen:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2016.08.03.09.30.15;  author sthen;  state Exp;
branches 1.1.1.1;
next     ;
commitid        HwryZ2dr2uWPVaCJ;

1.1.1.1
date     2016.08.03.09.30.15;  author sthen;  state Exp;
branches ;
next     ;
commitid        HwryZ2dr2uWPVaCJ;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- lex.l.orig	Mon Aug  1 10:49:44 2016
+++ lex.l	Mon Aug  1 10:50:08 2016
@@@@ -333,7 +333,7 @@@@ static void fast_export_sanitize(yyscan_t yyscanner, c
 {
     char *sp, *tp;
 
-#define SUFFIX(a, s)	(strcmp(a + strlen(a) - strlen(s), s) == 0) 
+#define SUFFIX(a, s)	(!(strlen(a) < strlen(s)) && strcmp(a + strlen(a) - strlen(s), s) == 0) 
 #define BADCHARS	"~^\\*?"
     for (sp = tp = yyget_text(yyscanner); *sp; sp++) {
 	if (isgraph((unsigned char)*sp) && strchr(BADCHARS, *sp) == NULL) {
@


1.1.1.1
log
@import devel/cvs-fast-export, ok landry@@

cvs-fast-export analyzes a collection of RCS files and, when possible,
emits an equivalent history in the form of a git fast-import stream.
Not all possible histories can be rendered this way; the program tries
to emit useful warnings when it can't.

A wrapper script called cvsconvert runs a conversion to git and
looks for content mismatches with the original CVS.

The analysis stage of this code originally travelled as "parsecvs" and
was written by Keith Packard in early 2006. It was briefly maintained by
Bart Massey before passing to Eric S. Raymond in late 2012.
@
text
@@
