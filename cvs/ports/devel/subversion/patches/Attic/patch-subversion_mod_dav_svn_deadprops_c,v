head	1.2;
access;
symbols
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_2:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2013.05.03.07.46.12;	author stsp;	state dead;
branches
	1.2.2.1
	1.2.4.1;
next	1.1;

1.1
date	2013.04.05.14.51.35;	author stsp;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2013.04.05.15.06.21;	author stsp;	state Exp;
branches;
next	;

1.1.4.1
date	2013.05.03.06.51.46;	author stsp;	state Exp;
branches;
next	;

1.2.2.1
date	2015.04.02.19.35.56;	author stsp;	state Exp;
branches;
next	;
commitid	w5cSUqS8ttMouyFc;

1.2.4.1
date	2015.08.21.09.17.00;	author stsp;	state Exp;
branches;
next	;
commitid	tbhnJLpszknm0XLS;


desc
@@


1.2
log
@Update to Subversion 1.7.9 which includes the CVE patches committed earlier.
@
text
@$OpenBSD: patch-subversion_mod_dav_svn_deadprops_c,v 1.1 2013/04/05 14:51:35 stsp Exp $
CVE-2013-1845
--- subversion/mod_dav_svn/deadprops.c.orig	Thu Dec 30 21:46:50 2010
+++ subversion/mod_dav_svn/deadprops.c	Wed Apr  3 20:56:32 2013
@@@@ -168,6 +168,7 @@@@ save_value(dav_db *db, const dav_prop_name *name,
   const char *propname;
   svn_error_t *serr;
   const dav_resource *resource = db->resource;
+  apr_pool_t *subpool;
 
   /* get the repos-local name */
   get_repos_propname(db, name, &propname);
@@@@ -202,13 +203,16 @@@@ save_value(dav_db *db, const dav_prop_name *name,
 
   */
 
+  /* A subpool to cope with mod_dav making multiple calls, e.g. during
+     PROPPATCH with multiple values. */
+  subpool = svn_pool_create(db->resource->pool);
   if (db->resource->baselined)
     {
       if (db->resource->working)
         {
           serr = svn_repos_fs_change_txn_prop(resource->info->root.txn,
                                               propname, value,
-                                              resource->pool);
+                                              subpool);
         }
       else
         {
@@@@ -219,7 +223,7 @@@@ save_value(dav_db *db, const dav_prop_name *name,
                                                TRUE, TRUE,
                                                db->authz_read_func,
                                                db->authz_read_baton,
-                                               resource->pool);
+                                               subpool);
 
           /* Prepare any hook failure message to get sent over the wire */
           if (serr)
@@@@ -242,20 +246,21 @@@@ save_value(dav_db *db, const dav_prop_name *name,
           dav_svn__operational_log(resource->info,
                                    svn_log__change_rev_prop(
                                       resource->info->root.rev,
-                                      propname, resource->pool));
+                                      propname, subpool));
         }
     }
   else if (resource->info->restype == DAV_SVN_RESTYPE_TXN_COLLECTION)
     {
       serr = svn_repos_fs_change_txn_prop(resource->info->root.txn,
-                                          propname, value, resource->pool);
+                                          propname, value, subpool);
     }
   else
     {
       serr = svn_repos_fs_change_node_prop(resource->info->root.root,
                                            get_repos_path(resource->info),
-                                           propname, value, resource->pool);
+                                           propname, value, subpool);
     }
+  svn_pool_destroy(subpool);
 
   if (serr != NULL)
     return dav_svn__convert_err(serr, HTTP_INTERNAL_SERVER_ERROR,
@@@@ -540,6 +545,7 @@@@ db_remove(dav_db *db, const dav_prop_name *name)
 {
   svn_error_t *serr;
   const char *propname;
+  apr_pool_t *subpool;
 
   /* get the repos-local name */
   get_repos_propname(db, name, &propname);
@@@@ -548,11 +554,15 @@@@ db_remove(dav_db *db, const dav_prop_name *name)
   if (propname == NULL)
     return NULL;
 
+  /* A subpool to cope with mod_dav making multiple calls, e.g. during
+     PROPPATCH with multiple values. */
+  subpool = svn_pool_create(db->resource->pool);
+
   /* Working Baseline or Working (Version) Resource */
   if (db->resource->baselined)
     if (db->resource->working)
       serr = svn_repos_fs_change_txn_prop(db->resource->info->root.txn,
-                                          propname, NULL, db->resource->pool);
+                                          propname, NULL, subpool);
     else
       /* ### VIOLATING deltaV: you can't proppatch a baseline, it's
          not a working resource!  But this is how we currently
@@@@ -564,11 +574,12 @@@@ db_remove(dav_db *db, const dav_prop_name *name)
                                            propname, NULL, NULL, TRUE, TRUE,
                                            db->authz_read_func,
                                            db->authz_read_baton,
-                                           db->resource->pool);
+                                           subpool);
   else
     serr = svn_repos_fs_change_node_prop(db->resource->info->root.root,
                                          get_repos_path(db->resource->info),
-                                         propname, NULL, db->resource->pool);
+                                         propname, NULL, subpool);
+  svn_pool_destroy(subpool);
   if (serr != NULL)
     return dav_svn__convert_err(serr, HTTP_INTERNAL_SERVER_ERROR,
                                 "could not remove a property",
@


1.2.4.1
log
@Patch several problems in devel/subversion for 5.7-stable:
CVE-2015-0202, CVE-2015-0248, CVE-2015-0251, CVE-2015-3187
@
text
@d1 20
a20 29
$OpenBSD$
http://subversion.apache.org/security/CVE-2015-0251-advisory.txt
--- subversion/mod_dav_svn/deadprops.c.orig	Thu Mar 28 06:51:35 2013
+++ subversion/mod_dav_svn/deadprops.c	Thu Apr  2 20:51:20 2015
@@@@ -163,6 +163,23 @@@@ get_value(dav_db *db, const dav_prop_name *name, svn_s
 }
 
 
+static svn_error_t *
+change_txn_prop(svn_fs_txn_t *txn,
+                const char *propname,
+                const svn_string_t *value,
+                apr_pool_t *scratch_pool)
+{
+  if (strcmp(propname, SVN_PROP_REVISION_AUTHOR) == 0)
+    return svn_error_create(SVN_ERR_RA_DAV_REQUEST_FAILED, NULL,
+                            "Attempted to modify 'svn:author' property "
+                            "on a transaction");
+
+  SVN_ERR(svn_repos_fs_change_txn_prop(txn, propname, value, scratch_pool));
+
+  return SVN_NO_ERROR;
+}
+
+
 static dav_error *
 save_value(dav_db *db, const dav_prop_name *name,
            const svn_string_t *const *old_value_p,
@@@@ -213,9 +230,8 @@@@ save_value(dav_db *db, const dav_prop_name *name,
d22 1
a22 1
       if (resource->working)
d24 4
a27 5
-          serr = svn_repos_fs_change_txn_prop(resource->info->root.txn,
-                                              propname, value,
-                                              subpool);
+          serr = change_txn_prop(resource->info->root.txn, propname,
+                                 value, subpool);
d31 16
a46 1
@@@@ -254,8 +270,8 @@@@ save_value(dav_db *db, const dav_prop_name *name,
d50 3
a52 4
-      serr = svn_repos_fs_change_txn_prop(resource->info->root.txn,
-                                          propname, value, subpool);
+      serr = change_txn_prop(resource->info->root.txn, propname,
+                             value, subpool);
d56 25
a80 1
@@@@ -560,8 +576,8 @@@@ db_remove(dav_db *db, const dav_prop_name *name)
d84 3
a86 4
-      serr = svn_repos_fs_change_txn_prop(db->resource->info->root.txn,
-                                          propname, NULL, subpool);
+      serr = change_txn_prop(db->resource->info->root.txn, propname,
+                             NULL, subpool);
d90 15
@


1.2.2.1
log
@5.6-stable patches for Apache Subversion CVE-2015-0202, CVE-2015-0248,
and CVS-2015-0251. test + ok jasper
@
text
@d1 20
a20 29
$OpenBSD$
CVE-2015-0251
--- subversion/mod_dav_svn/deadprops.c.orig	Thu Mar 28 06:51:35 2013
+++ subversion/mod_dav_svn/deadprops.c	Thu Apr  2 15:21:17 2015
@@@@ -163,6 +163,23 @@@@ get_value(dav_db *db, const dav_prop_name *name, svn_s
 }
 
 
+static svn_error_t *
+change_txn_prop(svn_fs_txn_t *txn,
+                const char *propname,
+                const svn_string_t *value,
+                apr_pool_t *scratch_pool)
+{
+  if (strcmp(propname, SVN_PROP_REVISION_AUTHOR) == 0)
+    return svn_error_create(SVN_ERR_RA_DAV_REQUEST_FAILED, NULL,
+                            "Attempted to modify 'svn:author' property "
+                            "on a transaction");
+
+  SVN_ERR(svn_repos_fs_change_txn_prop(txn, propname, value, scratch_pool));
+
+  return SVN_NO_ERROR;
+}
+
+
 static dav_error *
 save_value(dav_db *db, const dav_prop_name *name,
            const svn_string_t *const *old_value_p,
@@@@ -213,9 +230,8 @@@@ save_value(dav_db *db, const dav_prop_name *name,
d22 1
a22 1
       if (resource->working)
d24 4
a27 5
-          serr = svn_repos_fs_change_txn_prop(resource->info->root.txn,
-                                              propname, value,
-                                              subpool);
+          serr = change_txn_prop(resource->info->root.txn, propname,
+                                 value, subpool);
d31 16
a46 1
@@@@ -254,8 +270,8 @@@@ save_value(dav_db *db, const dav_prop_name *name,
d50 3
a52 4
-      serr = svn_repos_fs_change_txn_prop(resource->info->root.txn,
-                                          propname, value, subpool);
+      serr = change_txn_prop(resource->info->root.txn, propname,
+                             value, subpool);
d56 25
a80 1
@@@@ -560,8 +576,8 @@@@ db_remove(dav_db *db, const dav_prop_name *name)
d84 3
a86 4
-      serr = svn_repos_fs_change_txn_prop(db->resource->info->root.txn,
-                                          propname, NULL, subpool);
+      serr = change_txn_prop(db->resource->info->root.txn, propname,
+                             NULL, subpool);
d90 15
@


1.1
log
@Add patches for CVE-2013-1884, CVE-2013-1845, CVE-2013-1846, CVE-2013-1847,
and CVE-2013-1849. All of these are denial-of-service vulnerabilities
which affect Subversion servers using mod_dav_svn (Apache HTTPD) only.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.4.1
log
@For 5.3-stable:

Add patches for CVE-2013-1884, CVE-2013-1845, CVE-2013-1846, CVE-2013-1847,
and CVE-2013-1849. All of these are denial-of-service vulnerabilities
which affect Subversion servers using mod_dav_svn (Apache HTTPD) only.
@
text
@d1 1
a1 1
$OpenBSD: patch-subversion_mod_dav_svn_deadprops_c,v 1.1 2013/04/05 14:51:35 stsp Exp $
@


1.1.2.1
log
@For 5.2-stable:

Add patches for CVE-2013-1884, CVE-2013-1845, CVE-2013-1846, CVE-2013-1847,
and CVE-2013-1849. All of these are denial-of-service vulnerabilities
which affect Subversion servers using mod_dav_svn (Apache HTTPD) only.

For good measure throw in two additional fixes which were made after SVN 1.7.5,
fixing a crash in mod_dav_svn and unbound memory use in mod_authz_svn.
These fixes are already in 5.3 and -current.
@
text
@d1 1
a1 1
$OpenBSD: patch-subversion_mod_dav_svn_deadprops_c,v 1.1 2013/04/05 14:51:35 stsp Exp $
@

