head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_2:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2013.05.03.07.46.12;	author stsp;	state dead;
branches;
next	1.1;

1.1
date	2013.04.05.14.51.35;	author stsp;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2013.04.05.15.06.21;	author stsp;	state Exp;
branches;
next	;

1.1.4.1
date	2013.05.03.06.51.46;	author stsp;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to Subversion 1.7.9 which includes the CVE patches committed earlier.
@
text
@$OpenBSD: patch-subversion_mod_dav_svn_lock_c,v 1.1 2013/04/05 14:51:35 stsp Exp $
CVE-2013-1846 and CVE-2013-1847
--- subversion/mod_dav_svn/lock.c.orig	Fri Jun  3 20:09:17 2011
+++ subversion/mod_dav_svn/lock.c	Wed Apr  3 20:56:32 2013
@@@@ -640,7 +640,20 @@@@ append_locks(dav_lockdb *lockdb,
   svn_lock_t *slock;
   svn_error_t *serr;
   dav_error *derr;
+  dav_svn_repos *repos = resource->info->repos;
+      
+  /* We don't allow anonymous locks */
+  if (! repos->username)
+    return dav_svn__new_error(resource->pool, HTTP_UNAUTHORIZED,
+                              DAV_ERR_LOCK_SAVE_LOCK,
+                              "Anonymous lock creation is not allowed.");
 
+  /* Not a path in the repository so can't lock it. */
+  if (! resource->info->repos_path)
+    return dav_svn__new_error(resource->pool, HTTP_BAD_REQUEST,
+                              DAV_ERR_LOCK_SAVE_LOCK,
+                              "Attempted to lock path not in repository.");
+
   /* If the resource's fs path is unreadable, we don't allow a lock to
      be created on it. */
   if (! dav_svn__allow_read_resource(resource, SVN_INVALID_REVNUM,
@@@@ -663,7 +676,6 @@@@ append_locks(dav_lockdb *lockdb,
       svn_fs_txn_t *txn;
       svn_fs_root_t *txn_root;
       const char *conflict_msg;
-      dav_svn_repos *repos = resource->info->repos;
       apr_hash_t *revprop_table = apr_hash_make(resource->pool);
       apr_hash_set(revprop_table, SVN_PROP_REVISION_AUTHOR,
                    APR_HASH_KEY_STRING, svn_string_create(repos->username,
@@@@ -741,14 +753,14 @@@@ append_locks(dav_lockdb *lockdb,
 
   /* Convert the dav_lock into an svn_lock_t. */
   derr = dav_lock_to_svn_lock(&slock, lock, resource->info->repos_path,
-                              info, resource->info->repos->is_svn_client,
+                              info, repos->is_svn_client,
                               resource->pool);
   if (derr)
     return derr;
 
   /* Now use the svn_lock_t to actually perform the lock. */
   serr = svn_repos_fs_lock(&slock,
-                           resource->info->repos->repos,
+                           repos->repos,
                            slock->path,
                            slock->token,
                            slock->comment,
@


1.1
log
@Add patches for CVE-2013-1884, CVE-2013-1845, CVE-2013-1846, CVE-2013-1847,
and CVE-2013-1849. All of these are denial-of-service vulnerabilities
which affect Subversion servers using mod_dav_svn (Apache HTTPD) only.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.4.1
log
@For 5.3-stable:

Add patches for CVE-2013-1884, CVE-2013-1845, CVE-2013-1846, CVE-2013-1847,
and CVE-2013-1849. All of these are denial-of-service vulnerabilities
which affect Subversion servers using mod_dav_svn (Apache HTTPD) only.
@
text
@d1 1
a1 1
$OpenBSD: patch-subversion_mod_dav_svn_lock_c,v 1.1 2013/04/05 14:51:35 stsp Exp $
@


1.1.2.1
log
@For 5.2-stable:

Add patches for CVE-2013-1884, CVE-2013-1845, CVE-2013-1846, CVE-2013-1847,
and CVE-2013-1849. All of these are denial-of-service vulnerabilities
which affect Subversion servers using mod_dav_svn (Apache HTTPD) only.

For good measure throw in two additional fixes which were made after SVN 1.7.5,
fixing a crash in mod_dav_svn and unbound memory use in mod_authz_svn.
These fixes are already in 5.3 and -current.
@
text
@d1 1
a1 1
$OpenBSD: patch-subversion_mod_dav_svn_lock_c,v 1.1 2013/04/05 14:51:35 stsp Exp $
@

