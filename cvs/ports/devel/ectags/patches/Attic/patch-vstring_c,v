head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.0.18
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.16
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.14
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.12
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.10
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.8
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.6
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.4
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.2
	OPENBSD_4_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.01.10.14.54.52;	author shadchin;	state dead;
branches;
next	1.1;

1.1
date	2006.06.19.14.37.12;	author alek;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to exuberant ctags 5.8, also add myself as maintainer.
ok jasper; tested frantisek holop
@
text
@$OpenBSD: patch-vstring_c,v 1.1 2006/06/19 14:37:12 alek Exp $
--- vstring.c.orig	Tue May 30 06:37:13 2006
+++ vstring.c	Sun Jun 18 19:43:21 2006
@@@@ -89,12 +89,14 @@@@ extern vString *vStringNew (void)
 #ifndef VSTRING_PUTC_MACRO
 extern void vStringPut (vString *const string, const int c)
 {
-	if (string->length == string->size)  /*  check for buffer overflow */
+	if (string->length == (string->size - 1))  /*  check for buffer overflow */
 		vStringAutoResize (string);
 
 	string->buffer [string->length] = c;
-	if (c != '\0')
+	if (c != '\0') {
 		string->length++;
+		string->buffer[string->length] = '\0';
+	}
 }
 #endif
 
@


1.1
log
@- Update to 5.6
- Fix vStringPut so that vString buffer is always terminated with '\0'
  (ectags -R works now against wxWidgets sources)

ok MAINTAINER
@
text
@d1 1
a1 1
$OpenBSD$
@

