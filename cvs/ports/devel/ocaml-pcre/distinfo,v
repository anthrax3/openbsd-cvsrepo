head	1.5;
access;
symbols
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.10
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	sthen_20110915:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2016.11.01.22.02.59;	author krw;	state Exp;
branches;
next	1.4;
commitid	EC9e4iqUTJjR6tNn;

1.4
date	2015.08.30.16.02.58;	author avsm;	state Exp;
branches;
next	1.3;
commitid	XK4HwIB1neX1nKpJ;

1.3
date	2012.08.18.22.22.41;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.22.11.46.40;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2011.09.15.15.50.23;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.09.15.15.50.23;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update ocaml-pcre to 7.2.3. Bump revision of ports depending on ocaml-pcre.
@
text
@SHA256 (pcre-ocaml-7.2.3.tar.gz) = YzlpTb63BsUJcYDtHXmy2uaBvxVaR4CnkJr0mw5vRmY=
SIZE (pcre-ocaml-7.2.3.tar.gz) = 88307
@


1.4
log
@update to ocaml-pcre-7.0.5

ok jca@@, tested by krw@@ daniel@@ jsg@@
@
text
@d1 2
a2 2
SHA256 (pcre-ocaml-7.1.5.tar.gz) = ZJXs8l7Wpp/RT9pHL5+smFPd4q7plE9rbAER1FjBA5s=
SIZE (pcre-ocaml-7.1.5.tar.gz) = 88068
@


1.3
log
@update to ocaml-pcre-7.0.2
* fix on non-native arch (sparc64)
* use OASIS configure_style to simplify port

From: Christopher Zimmermann <madroach@@gmerlin.de>
@
text
@d1 2
a2 2
SHA256 (pcre-ocaml-7.0.2.tar.gz) = BSov3Y2ll3JKyMpHT91AdytGGIjj/473XMceQ6ZXZuo=
SIZE (pcre-ocaml-7.0.2.tar.gz) = 81910
@


1.2
log
@- update to 6.2.5

from  Christopher Zimmermann
@
text
@d1 2
a2 5
MD5 (pcre-ocaml-6.2.5.tar.gz) = pviHO79dLQiXZUzDX6WaQg==
RMD160 (pcre-ocaml-6.2.5.tar.gz) = PLca5AfhOWq4P6CN+fzUGqy6gX8=
SHA1 (pcre-ocaml-6.2.5.tar.gz) = khCUunqBCjZMEZ0QmZUlUckNGew=
SHA256 (pcre-ocaml-6.2.5.tar.gz) = 8XdAKKRSXSLR9M9M4BIcmdhada7XpJjD6KsPXjmIjkc=
SIZE (pcre-ocaml-6.2.5.tar.gz) = 60724
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
MD5 (ocaml-pcre/release-6.2.2.tar.gz) = Nh6o2O0yzGt4r83tzIsjOg==
RMD160 (ocaml-pcre/release-6.2.2.tar.gz) = tiSMvzXnera+UN5UlEASr1j3CYA=
SHA1 (ocaml-pcre/release-6.2.2.tar.gz) = J/f9NEjI5drUKzB9BFjPlLgjHTU=
SHA256 (ocaml-pcre/release-6.2.2.tar.gz) = ENcvcpzmPadI+5pnEJN3lQQzX5buTkdKjrCvyJwZpqI=
SIZE (ocaml-pcre/release-6.2.2.tar.gz) = 60365
@


1.1.1.1
log
@import ocaml-pcre; ok jasper@@

This OCaml-library interfaces the PCRE (Perl-compatible regular expression)
library which is written in C. it can be used for matching regular expressions
which are written in the PERL style.
 
It is reentrant - and thus thread safe. This is not the case with the "Str"
module of OCaml, which builds on the GNU "regex"-library. Using reentrant
libraries also means more convenience for programmers. They do not have to
reason about states in which the library might be in.
 
The high-level functions for replacement and substitution, all implemented
in OCaml, are much faster than the ones of the "Str"-module. In fact, when
compiled to native code, they even seem to be significantly faster than
those of PERL.
@
text
@@
