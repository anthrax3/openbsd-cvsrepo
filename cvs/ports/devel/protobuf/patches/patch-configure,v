head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.14
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.12
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.8
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.1.1.1.0.4
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	landry_20100324:1.1.1.1
	auclair:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.11.03.07.52.02;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.11.05.25.31;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.08.07.22.32;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2010.03.24.19.03.37;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.03.24.19.03.37;	author landry;	state Exp;
branches;
next	;


desc
@@


1.4
log
@No need for /-lpthread/-pthread
@
text
@$OpenBSD: patch-configure,v 1.3 2011/07/11 05:25:31 dcoppa Exp $
--- configure.orig	Sat Apr 30 19:24:59 2011
+++ configure	Sat Jul  9 02:36:18 2011
@@@@ -904,7 +904,6 @@@@ CXX
 CXXFLAGS
 CCC
 CXXCPP'
-ac_subdirs_all='gtest'
 
 # Initialize some variables set by options.
 ac_init_help=
@@@@ -15569,7 +15568,7 @@@@ test -n "$PTHREAD_CC" || PTHREAD_CC="${CC}"
 	# FIXME: -fPIC is required for -shared on many architectures,
 	# so we specify it here, but the right way would probably be to
 	# properly detect whether it is actually required.
-	CFLAGS="-shared -fPIC -Wl,-z,defs $CFLAGS $PTHREAD_CFLAGS"
+	CFLAGS="-shared -fPIC $CFLAGS $PTHREAD_CFLAGS"
 	LIBS="$PTHREAD_LIBS $LIBS"
 	CC="$PTHREAD_CC"
 
@@@@ -15947,14 +15946,6 @@@@ $as_echo "$as_me: WARNING: could not find an STL hash_
    fi
 
 
-# HACK:  Make gtest's configure script pick up our copy of CFLAGS and CXXFLAGS,
-#   since the flags added by ACX_CHECK_SUNCC must be used when compiling gtest
-#   too.
-export CFLAGS
-export CXXFLAGS
-
-
-subdirs="$subdirs gtest"
 
 
 ac_config_files="$ac_config_files Makefile src/Makefile protobuf.pc protobuf-lite.pc"
@


1.3
log
@Update to protobuf-2.4.1.
From Piotr Sikora: thanks!
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.2 2011/07/08 07:22:32 dcoppa Exp $
a20 18
@@@@ -15649,7 +15648,7 @@@@ $as_echo "no" >&6; }
 	if test x"$done" = xno; then
 	   { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether -lpthread fixes that" >&5
 $as_echo_n "checking whether -lpthread fixes that... " >&6; }
-	   LIBS="-lpthread $PTHREAD_LIBS $save_LIBS"
+	   LIBS="-pthread $PTHREAD_LIBS $save_LIBS"
 	   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 #include <pthread.h>
@@@@ -15672,7 +15671,7 @@@@ rm -f core conftest.err conftest.$ac_objext \
 	   if test "x$done" = xyes; then
 	      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
-	      PTHREAD_LIBS="-lpthread $PTHREAD_LIBS"
+	      PTHREAD_LIBS="-pthread $PTHREAD_LIBS"
 	   else
 	      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
@


1.2
log
@Fix libpthread linkage

ok jasper@@, ajacoutot@@, landry@@
maintainer's unresponsive
@
text
@d1 4
a4 4
$OpenBSD: patch-configure,v 1.1.1.1 2010/03/24 19:03:37 landry Exp $
--- configure.orig	Fri Jan  8 20:26:18 2010
+++ configure	Thu Jul  7 15:44:35 2011
@@@@ -906,7 +906,6 @@@@ CXX
d12 1
a12 1
@@@@ -16887,7 +16886,7 @@@@ test -n "$PTHREAD_CC" || PTHREAD_CC="${CC}"
d21 1
a21 1
@@@@ -17019,7 +17018,7 @@@@ echo "${ECHO_T}no" >&6; }
d23 2
a24 2
 	   { echo "$as_me:$LINENO: checking whether -lpthread fixes that" >&5
 echo $ECHO_N "checking whether -lpthread fixes that... $ECHO_C" >&6; }
d27 4
a30 4
 	   cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
 _ACEOF
@@@@ -17069,7 +17068,7 @@@@ rm -f core conftest.err conftest.$ac_objext conftest_i
d32 2
a33 2
 	      { echo "$as_me:$LINENO: result: yes" >&5
 echo "${ECHO_T}yes" >&6; }
d37 3
a39 3
 	      { echo "$as_me:$LINENO: result: no" >&5
 echo "${ECHO_T}no" >&6; }
@@@@ -17294,12 +17293,6 @@@@ echo "$as_me: WARNING: could not find an STL hash_map"
d48 2
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- configure.orig	Tue Jan 12 11:06:14 2010
+++ configure	Tue Jan 12 11:08:22 2010
d12 27
@


1.1.1.1
log
@Import protobuf 2.3.0, from Vincent Auclair with a DESCR reformatting by me.

Protocol buffers are a flexible, efficient, automated mechanism for
serializing structured data - think XML, but smaller, faster, and
simpler. You define how you want your data to be structured once, then
you can use special generated source code to easily write and read your
structured data to and from a variety of data streams and using a
variety of languages. You can even update your data structure without
breaking deployed programs that are compiled against the "old" format.
@
text
@@
