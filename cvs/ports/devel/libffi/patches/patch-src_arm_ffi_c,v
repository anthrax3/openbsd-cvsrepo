head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.8
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.6
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2015.07.15.17.06.48;	author jasper;	state Exp;
branches;
next	1.6;
commitid	noTbeGlaXXcoECB1;

1.6
date	2015.04.06.12.11.40;	author jasper;	state Exp;
branches;
next	1.5;
commitid	FjEEtUIlkhe7AFcI;

1.5
date	2014.06.04.17.40.27;	author jasper;	state Exp;
branches;
next	1.4;
commitid	1Q2YRNXbzPxCMReq;

1.4
date	2013.10.23.17.46.01;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2013.10.23.10.32.01;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2013.05.07.20.04.18;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2013.03.21.16.22.51;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.7
log
@remove bogus comment from patch which is no longer true
@
text
@$OpenBSD: patch-src_arm_ffi_c,v 1.6 2015/04/06 12:11:40 jasper Exp $

Fix warning: implicit declaration of function '__clear_cache'

--- src/arm/ffi.c.orig	Fri Apr 25 19:45:13 2014
+++ src/arm/ffi.c	Mon Sep 15 22:00:37 2014
@@@@ -37,6 +37,8 @@@@
 static int vfp_type_p (ffi_type *);
 static void layout_vfp_args (ffi_cif *);
 
+extern void __clear_cache(char *beg, char *end);
+
 int ffi_prep_args_SYSV(char *stack, extended_cif *ecif, float *vfp_space);
 int ffi_prep_args_VFP(char *stack, extended_cif *ecif, float *vfp_space);
 
@


1.6
log
@update to libffi-3.1 (not quite the newest, but better than what we currently have)

tested with gnome3 (heavily reliant on ffi/javascript/goi) for the better part of a year
@
text
@d1 1
a1 1
$OpenBSD: patch-src_arm_ffi_c,v 1.5 2014/06/04 17:40:27 jasper Exp $
d3 1
a3 2
Fix warning: implicit declaration of function '__clear_cache' and
change the code to follow our current ABI (APCS).
@


1.5
log
@- update to libffi-3.0.13 (an update to 3.1 will be worked on shortly)
- sync homepage

tested by many on nearly every supported architecture, thanks!

feedback/ok miod@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_arm_ffi_c,v 1.4 2013/10/23 17:46:01 fgsch Exp $
d6 2
a7 2
--- src/arm/ffi.c.orig	Sat Mar 16 12:19:39 2013
+++ src/arm/ffi.c	Wed Apr 16 12:04:25 2014
d14 3
a16 3
 /* ffi_prep_args is called by the assembly routine once stack space
    has been allocated for the function's arguments
    
@


1.4
log
@Simplify. No functional change.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_arm_ffi_c,v 1.3 2013/10/23 10:32:01 fgsch Exp $
d6 5
a10 5
--- src/arm/ffi.c.orig	Tue Dec 29 15:22:26 2009
+++ src/arm/ffi.c	Mon Oct 21 15:51:29 2013
@@@@ -29,6 +29,8 @@@@
 
 #include <stdlib.h>
d15 2
a16 11
    has been allocated for the function's arguments */
 
@@@@ -130,7 +132,7 @@@@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)
       break;
 
     case FFI_TYPE_STRUCT:
-      if (cif->rtype->size <= 4)
+      if (cif->rtype->size <= 4 && !cif->rtype->elements[1])
 	/* A Composite Type not larger than 4 bytes is returned in r0.  */
 	cif->flags = (unsigned)FFI_TYPE_INT;
       else
@


1.3
log
@Fix libffi on arm. Change the code to work with our current ABI (APCS) as
much as possible until we switch to ATPCS or AAPCS.
jasper@@ (maintainer) ok.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_arm_ffi_c,v 1.2 2013/05/07 20:04:18 jasper Exp $
d17 1
a17 1
@@@@ -130,7 +132,8 @@@@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)
d22 1
a22 2
+	if (cif->rtype->size <= 4 && cif->rtype->elements[0] &&
+	    !cif->rtype->elements[1])
@


1.2
log
@regen; no functional change
@
text
@d1 1
a1 1
$OpenBSD: patch-src_arm_ffi_c,v 1.1 2013/03/21 16:22:51 jasper Exp $
d3 2
a4 1
warning: implicit declaration of function '__clear_cache'
d6 2
a7 2
--- src/arm/ffi.c.orig	Tue Dec 29 16:22:26 2009
+++ src/arm/ffi.c	Tue May  7 22:01:23 2013
d17 10
@


1.1
log
@- fix an implicit declaration
@
text
@d1 1
a1 1
$OpenBSD$
d5 5
a9 5
--- src/arm/ffi.c.orig	Thu Mar 21 17:15:53 2013
+++ src/arm/ffi.c	Thu Mar 21 17:16:12 2013
@@@@ -37,6 +37,8 @@@@
 static int vfp_type_p (ffi_type *);
 static void layout_vfp_args (ffi_cif *);
d14 2
a15 2
    has been allocated for the function's arguments
    
@

