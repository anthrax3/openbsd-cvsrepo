head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.3.0.10
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.8
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	jasper_20090923:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2014.06.04.17.40.27;	author jasper;	state dead;
branches;
next	1.5;
commitid	1Q2YRNXbzPxCMReq;

1.5
date	2013.05.07.20.41.23;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2013.03.21.15.52.08;	author jasper;	state dead;
branches;
next	1.3;

1.3
date	2010.09.19.20.19.15;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.05.20.50.07;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.23.20.55.46;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.09.23.20.55.46;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.6
log
@- update to libffi-3.0.13 (an update to 3.1 will be worked on shortly)
- sync homepage

tested by many on nearly every supported architecture, thanks!

feedback/ok miod@@
@
text
@$OpenBSD: patch-src_arm_sysv_S,v 1.5 2013/05/07 20:41:23 jasper Exp $

Error: unknown pseudo-op: `.pad'

--- src/arm/sysv.S.orig	Tue May  7 22:01:36 2013
+++ src/arm/sysv.S	Tue May  7 22:01:57 2013
@@@@ -243,7 +243,6 @@@@ ARM_FUNC_START ffi_closure_SYSV
 	stmfd	sp!, {ip, lr}
 	UNWIND .save	{r0, lr}
 	add	r2, sp, #8
-	.pad #16
 	sub	sp, sp, #16
 	str	sp, [sp, #8]
 	add	r1, sp, #8
@


1.5
log
@re-instate a small part of this previously removed patch; enough to get
libffi building again on arm.

tested by patrick@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@- remove patch for arm that dealt with lack of UNWIND support in our 2.15 linker.

a full update of libffi is in the works as well, so remove the comment from Makefile.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_arm_sysv_S,v 1.3 2010/09/19 20:19:15 jasper Exp $
d3 1
a3 2
As our as(1) is too old, and cannot deal with UNWIND. This patch fixes build on
arm. It's taken from FreeBSD and can be removed when binutils is updated.
d5 3
a7 58
--- src/arm/sysv.S.orig	Tue Dec 29 16:22:26 2009
+++ src/arm/sysv.S	Sun Sep 19 21:32:27 2010
@@@@ -90,13 +90,6 @@@@
 # define call_reg(x)	mov	lr, pc ; mov	pc, x
 #endif
 
-/* Conditionally compile unwinder directives.  */
-#ifdef __ARM_EABI__
-#define UNWIND
-#else
-#define UNWIND @@
-#endif	
-
 	
 #if defined(__thumb__) && !defined(__THUMB_INTERWORK__)
 .macro	ARM_FUNC_START name
@@@@ -108,7 +101,6 @@@@
 	bx	pc
 	nop
 	.arm
-	UNWIND .fnstart
 /* A hook to tell gdb that we've switched to ARM mode.  Also used to call
    directly from other local arm routines.  */
 _L__\name:		
@@@@ -119,7 +111,6 @@@@ _L__\name:		
 	.align 0
 	.arm
 	ENTRY(\name)
-	UNWIND .fnstart
 .endm
 #endif
 
@@@@ -152,11 +143,8 @@@@ _L__\name:		
 ARM_FUNC_START ffi_call_SYSV
 	@@ Save registers
         stmfd	sp!, {r0-r3, fp, lr}
-	UNWIND .save	{r0-r3, fp, lr}
 	mov	fp, sp
 
-	UNWIND .setfp	fp, sp
-
 	@@ Make room for all of the new args.
 	sub	sp, fp, r2
 
@@@@ -226,7 +214,6 @@@@ LSYM(Lepilogue):
 	RETLDM	"r0-r3,fp"
 
 .ffi_call_SYSV_end:
-	UNWIND .fnend
         .size    CNAME(ffi_call_SYSV),.ffi_call_SYSV_end-CNAME(ffi_call_SYSV)
 
 /*
@@@@ -238,12 +225,9 @@@@ LSYM(Lepilogue):
 */
 
 ARM_FUNC_START ffi_closure_SYSV
-	UNWIND .pad #16
 	add	ip, sp, #16
d9 1
a9 1
-	UNWIND .save	{r0, lr}
a14 8
@@@@ -298,7 +282,6 @@@@ ARM_FUNC_START ffi_closure_SYSV
 #endif
 
 .ffi_closure_SYSV_end:
-	UNWIND .fnend
         .size    CNAME(ffi_closure_SYSV),.ffi_closure_SYSV_end-CNAME(ffi_closure_SYSV)
 
 #if defined __ELF__ && defined __linux__
@


1.3
log
@- update libffi to 3.0.9
- remove unneeded patch
@
text
@d1 1
a1 1
$OpenBSD: patch-src_arm_sysv_S,v 1.2 2009/10/05 20:50:07 jasper Exp $
@


1.2
log
@- add short blurb
@
text
@d1 1
a1 1
$OpenBSD: patch-src_arm_sysv_S,v 1.1.1.1 2009/09/23 20:55:46 jasper Exp $
d6 3
a8 3
--- src/arm/sysv.S.orig	Mon Jun 29 13:08:57 2009
+++ src/arm/sysv.S	Mon Jun 29 13:11:11 2009
@@@@ -83,13 +83,6 @@@@
d22 1
a22 1
@@@@ -101,7 +94,6 @@@@
d30 1
a30 1
@@@@ -112,7 +104,6 @@@@ _L__\name:		
d38 1
a38 1
@@@@ -145,11 +136,8 @@@@ _L__\name:		
d50 1
a50 1
@@@@ -219,7 +207,6 @@@@ LSYM(Lepilogue):
d58 1
a58 1
@@@@ -231,12 +218,9 @@@@ LSYM(Lepilogue):
d71 1
a71 1
@@@@ -291,7 +275,6 @@@@ ARM_FUNC_START ffi_closure_SYSV
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 1
Fix build on arm. Patch from FreeBSD.
@


1.1.1.1
log
@import libffi 3.0.8

FFI stands for Foreign Function Interface. A foreign function interface
is the popular name for the interface that allows code written in one
language to call code written in another language. The libffi library
really only provides the lowest, machine dependent layer of a fully
featured foreign function interface. A layer must exist above libffi
that handles type conversions for values passed between the two
languages.

successfully tested on seven arches by me. other arches are disabled for now as
they need more work (mips64) or haven't been tested yet.
 
@
text
@@
