head	1.2;
access;
symbols
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.11.24.10.29.10;	author sthen;	state dead;
branches;
next	1.1;
commitid	corXngnsUFYSq3Ye;

1.1
date	2013.04.27.15.11.57;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to cgdb 0.6.8
@
text
@$OpenBSD: patch-lib_gdbmi_gdbmi_parser_c,v 1.1 2013/04/27 15:11:57 jasper Exp $

mips platforms already have 'mips' defined, resulting in:
error: expected ',' or '...' before numeric constant

--- lib/gdbmi/gdbmi_parser.c.orig	Sat Apr 27 17:04:46 2013
+++ lib/gdbmi/gdbmi_parser.c	Sat Apr 27 17:05:35 2013
@@@@ -18,7 +18,7 @@@@ extern int gdbmi_lineno;
 
 struct gdbmi_parser {
     char *last_error;
-    gdbmi_pstate *mips;
+    gdbmi_pstate *pmips;
     gdbmi_pdata_ptr pdata_ptr;
 };
 
@@@@ -35,7 +35,7 @@@@ gdbmi_parser_ptr gdbmi_parser_create(void)
     }
 
     /* Create a new parser instance */
-    parser->mips = gdbmi_pstate_new();
+    parser->pmips = gdbmi_pstate_new();
     if (!parser) {
         fprintf(stderr, "%s:%d", __FILE__, __LINE__);
         return NULL;
@@@@ -62,10 +62,10 @@@@ int gdbmi_parser_destroy(gdbmi_parser_ptr parser)
         parser->last_error = NULL;
     }
 
-    if (parser->mips) {
+    if (parser->pmips) {
         /* Free the parser instance */
-        gdbmi_pstate_delete(parser->mips);
-        parser->mips = NULL;
+        gdbmi_pstate_delete(parser->pmips);
+        parser->pmips = NULL;
     }
 
     if (parser->pdata_ptr) {
@@@@ -111,7 +111,7 @@@@ gdbmi_parser_parse_string(gdbmi_parser_ptr parser,
         if (pattern == 0)
             break;
         mi_status =
-                gdbmi_push_parse(parser->mips, pattern, NULL,
+                gdbmi_push_parse(parser->pmips, pattern, NULL,
                 parser->pdata_ptr);
     } while (mi_status == YYPUSH_MORE);
 
@@@@ -163,7 +163,7 @@@@ gdbmi_parser_parse_file(gdbmi_parser_ptr parser,
         if (pattern == 0)
             break;
         mi_status =
-                gdbmi_push_parse(parser->mips, pattern, NULL,
+                gdbmi_push_parse(parser->pmips, pattern, NULL,
                 parser->pdata_ptr);
     } while (mi_status == YYPUSH_MORE);
 
@


1.1
log
@unbreak on mips platforms, which already have the 'mips' symbol defined.

ok sthen@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD$
@

