head	1.2;
access;
symbols
	avsm_2012-Aug-18:1.1.1.1 avsm:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.09.05.21.39.09;	author avsm;	state dead;
branches;
next	1.1;

1.1
date	2012.08.19.00.27.50;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.08.19.00.27.50;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to lwt-2.4.1
- patches now upstream, so remove local versions
- add missing GMAKE dependency (I am fixing this requirement in OASIS directly too)
@
text
@$OpenBSD: patch-src_unix_lwt_unix_ml,v 1.1 2012/08/19 00:27:50 avsm Exp $
--- src/unix/lwt_unix.ml.orig	Thu Jul 19 13:35:56 2012
+++ src/unix/lwt_unix.ml	Sat Aug 18 07:23:25 2012
@@@@ -1748,7 +1748,7 @@@@ type credentials = {
   cred_gid : int;
 }
 
-#if HAVE_GET_CREDENTIALS || HAVE_GETPEEREID
+#if HAVE_GET_CREDENTIALS
 
 external stub_get_credentials : Unix.file_descr -> credentials = "lwt_unix_get_credentials"
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@initial import of lwt-2.4.0; espie@@ ok

Does not include the enhanced top-level, which will be added in a later update.
From Christopher Zimmermann <madroach@@gmerlin.de>

--
Lwt provides very light-weight cooperative threads for OCaml;
``launching'' a thread is a very fast operation, it does not require
a new stack, a new process, or anything else. Moreover context
switches are very fast. In fact, it is so easy that a thread can
be launched for every system call. And composing cooperative threads
will allow highly asynchronous programs.

@
text
@@
