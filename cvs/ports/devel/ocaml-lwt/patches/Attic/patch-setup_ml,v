head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	avsm_2012-Aug-18:1.1.1.1
	avsm:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2015.08.30.16.01.16;	author avsm;	state dead;
branches;
next	1.4;
commitid	E3yaax3KKoTxde4P;

1.4
date	2014.08.27.08.05.17;	author chrisz;	state Exp;
branches;
next	1.3;
commitid	vYMEJuwPEG8SFCN7;

1.3
date	2013.11.25.14.35.26;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2012.09.05.21.39.09;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.19.00.27.50;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.08.19.00.27.50;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to ocaml-lwt-2.4.8

This is not the latest upstream version, but the last one that is most
compatible due to an API change. Be careful about upgrading to lwt-2.5.0
without checking that no in-tree ports break due to new buffer APIs.

ok jca@@, tested by krw@@ daniel@@ jsg@@
@
text
@$OpenBSD: patch-setup_ml,v 1.4 2014/08/27 08:05:17 chrisz Exp $

use gmake

--- setup.ml.orig	Wed Aug 20 17:18:31 2014
+++ setup.ml	Wed Aug 20 17:18:43 2014
@@@@ -6725,7 +6725,7 @@@@ let setup_t =
                  CustomPlugin.cmd_main =
                    [
                       (OASISExpr.EBool true,
-                        ("make", ["-C"; "manual"; "manual.pdf"]))
+                        ("gmake", ["-C"; "manual"; "manual.pdf"]))
                    ];
                  cmd_clean = [(OASISExpr.EBool true, None)];
                  cmd_distclean = [(OASISExpr.EBool true, None)]
@@@@ -6780,7 +6780,7 @@@@ let setup_t =
                  CustomPlugin.cmd_main =
                    [
                       (OASISExpr.EBool true,
-                        ("make", ["-C"; "manual"; "manual.pdf"]))
+                        ("gmake", ["-C"; "manual"; "manual.pdf"]))
                    ];
                  cmd_clean = [(OASISExpr.EBool true, None)];
                  cmd_distclean = [(OASISExpr.EBool true, None)]
@@@@ -6833,7 +6833,7 @@@@ let setup_t =
                  CustomPlugin.cmd_main =
                    [
                       (OASISExpr.EBool true,
-                        ("make", ["-C"; "manual"; "manual.pdf"]))
+                        ("gmake", ["-C"; "manual"; "manual.pdf"]))
                    ];
                  cmd_clean = [(OASISExpr.EBool true, None)];
                  cmd_distclean = [(OASISExpr.EBool true, None)]
@


1.4
log
@Upgrade ocaml-react. Since it has a major api charge, all of its dependers
need an upgrade, too.

* react uses opam without findlib as build system. Therefore call
  ocamlbuild directly. And roll a custom do-install.
* lwt will need camlp4.
* zed has moved to github.
* utop, too.
* lambda-term, too. Also will it need camlp4.


OK jca@@
@
text
@d1 1
a1 1
$OpenBSD: patch-setup_ml,v 1.3 2013/11/25 14:35:26 dcoppa Exp $
@


1.3
log
@ocaml-related updates:

ocaml-batteries 2.0.0 -> 2.1.0

ocaml-lwt 2.4.2 -> 2.4.4

ocaml-net 3.6 -> 3.7.3

All needed for an upcoming update to ocaml-4.01.0
@
text
@d1 7
a7 4
$OpenBSD: patch-setup_ml,v 1.2 2012/09/05 21:39:09 avsm Exp $
--- setup.ml.orig	Thu Dec 27 13:30:01 2012
+++ setup.ml	Thu Nov 14 16:05:18 2013
@@@@ -5748,7 +5748,7 @@@@ let setup_t =
d15 2
a16 2
                  cmd_distclean = [(OASISExpr.EBool true, None)];
@@@@ -5801,7 +5801,7 @@@@ let setup_t =
d24 2
a25 2
                  cmd_distclean = [(OASISExpr.EBool true, None)];
@@@@ -5852,7 +5852,7 @@@@ let setup_t =
d33 1
a33 1
                  cmd_distclean = [(OASISExpr.EBool true, None)];
@


1.2
log
@update to lwt-2.4.1
- patches now upstream, so remove local versions
- add missing GMAKE dependency (I am fixing this requirement in OASIS directly too)
@
text
@d1 4
a4 4
$OpenBSD$
--- setup.ml.orig	Wed Sep  5 21:56:57 2012
+++ setup.ml	Wed Sep  5 21:57:13 2012
@@@@ -5601,7 +5601,7 @@@@ let setup_t =
d13 1
a13 1
@@@@ -5654,7 +5654,7 @@@@ let setup_t =
d22 1
a22 1
@@@@ -5705,7 +5705,7 @@@@ let setup_t =
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
--- setup.ml.orig	Thu Jul 19 13:36:00 2012
+++ setup.ml	Fri Aug 17 15:44:30 2012
@@@@ -5748,7 +5748,7 @@@@ let setup_t =
d13 1
a13 1
@@@@ -5801,7 +5801,7 @@@@ let setup_t =
d22 1
a22 1
@@@@ -5852,7 +5852,7 @@@@ let setup_t =
@


1.1.1.1
log
@initial import of lwt-2.4.0; espie@@ ok

Does not include the enhanced top-level, which will be added in a later update.
From Christopher Zimmermann <madroach@@gmerlin.de>

--
Lwt provides very light-weight cooperative threads for OCaml;
``launching'' a thread is a very fast operation, it does not require
a new stack, a new process, or anything else. Moreover context
switches are very fast. In fact, it is so easy that a thread can
be launched for every system call. And composing cooperative threads
will allow highly asynchronous programs.

@
text
@@
