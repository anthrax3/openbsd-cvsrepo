head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.16
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.14
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.12
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.8
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.10
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.6
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	jeremy_2010-Dec-20:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2013.10.26.23.55.35;	author jeremy;	state Exp;
branches;
next	1.6;

1.6
date	2013.08.07.21.57.50;	author naddy;	state Exp;
branches;
next	1.5;

1.5
date	2013.03.11.10.50.29;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2012.09.23.16.57.33;	author jeremy;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.17.16.08.00;	author jeremy;	state Exp;
branches;
next	1.2;

1.2
date	2011.09.16.09.24.57;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.20.18.05.12;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.12.20.18.05.12;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Bump all ruby gem ports supporting rbx FLAVOR due to change to rubinius
gem directory when upgrading rubinius from 1.2.4 to 2.1.1.
@
text
@# $OpenBSD: Makefile,v 1.6 2013/08/07 21:57:50 naddy Exp $

COMMENT =	embed C code in your ruby script

DISTNAME =	ffi-inliner-0.2.4
CATEGORIES =	devel
REVISION =	3

HOMEPAGE =	https://github.com/remogatto/ffi-inliner

# MIT
PERMIT_PACKAGE_CDROM =	Yes

MODULES =		lang/ruby

CONFIGURE_STYLE =	ruby gem

BUILD_DEPENDS =		${RUN_DEPENDS}
RUN_DEPENDS =		devel/ruby-ffi,${MODRUBY_FLAVOR}

# 1 failure because we don't support the optional tcc dependency
TEST_DEPENDS =	${FULLPKGNAME}:${BUILD_PKGPATH}
MODRUBY_TEST =	rspec
MODRUBY_TEST_ENV =	LD_PRELOAD=/usr/lib/libpthread.so
MODRUBY_TEST_TARGET=	spec/ffi-inliner/inliner_spec.rb

.include <bsd.port.mk>
@


1.6
log
@move http://github.com and http://bitbucket.org to https
suggested by bentley@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2013/03/11 10:50:29 espie Exp $
d7 1
a7 1
REVISION =	2
@


1.5
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2012/09/23 16:57:33 jeremy Exp $
d7 1
a7 1
REVISION =	1
d9 1
a9 1
HOMEPAGE =	http://github.com/remogatto/ffi-inliner
@


1.4
log
@Bump revisions for ruby gem/extconf ports after the switch to ruby 1.9
by default, since the ruby 1.8 version now has a ruby18 explicit FLAVOR.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2011/11/17 16:08:00 jeremy Exp $
a12 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM = Yes
PERMIT_DISTFILES_FTP =	Yes
d22 4
a25 4
REGRESS_DEPENDS =	${FULLPKGNAME}:${BUILD_PKGPATH}
MODRUBY_REGRESS =	rspec
MODRUBY_REGRESS_ENV =	LD_PRELOAD=/usr/lib/libpthread.so
MODRUBY_REGRESS_TARGET=	spec/ffi-inliner/inliner_spec.rb
@


1.3
log
@Update ruby ports to deal with the regress changes to ruby.port.mk.

Start using MODRUBY_REGRESS with ruby, rspec2, and testrb entries.
Switch away from manual do_regress targets where possible.  Add
some patches to make regress tests run for some ports.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2011/09/16 09:24:57 espie Exp $
d7 1
a7 1
REVISION =	0
@


1.2
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2010/12/20 18:05:12 jeremy Exp $
d7 1
a7 1
REVISION=		0
d24 1
d27 2
a28 1
RSPEC_REGRESS_TARGET=	spec/ffi-inliner/inliner_spec.rb
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2010/10/05 19:23:51 jasper Exp $
d7 1
@


1.1.1.1
log
@Import ruby-ffi-inliner 0.2.4

With ffi-inliner you can run C code within your ruby script:
* Mix C snippets in your Ruby code and gulp it on the fly!
* It's based on Ruby-FFI so the C code you inject is portable across
  Ruby implementations!
* Yep, it means that you can run it on JRuby too!
* Fast compilation through tcc
* But it can use the system's compiler (e.g. gcc) on those platforms
  that don't support tcc (e.g. OSX) or that don't have it installed
@
text
@@
