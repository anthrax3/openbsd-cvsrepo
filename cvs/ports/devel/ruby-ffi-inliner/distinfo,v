head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.10
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.16
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.14
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	jeremy_2010-Dec-20:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.01.18.03.13.46;	author naddy;	state Exp;
branches;
next	1.1;
commitid	INAcawJqik7lWSVj;

1.1
date	2010.12.20.18.05.12;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.12.20.18.05.12;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Drop remaining MD5/RMD160/SHA1 checksums.
@
text
@SHA256 (ffi-inliner-0.2.4.gem) = Fp+2QhfBWvGKt9wXtsYlJY/mHC152P9Ere/kg2W2XGI=
SIZE (ffi-inliner-0.2.4.gem) = 18432
@


1.1
log
@Initial revision
@
text
@a0 3
MD5 (ffi-inliner-0.2.4.gem) = 8tmGKmF/CmeoFauigH+KhQ==
RMD160 (ffi-inliner-0.2.4.gem) = q+71V/e0tKytdKI0Csne0J4rjYs=
SHA1 (ffi-inliner-0.2.4.gem) = y6vprSyASORZWrtyWcK7AhQaQcI=
@


1.1.1.1
log
@Import ruby-ffi-inliner 0.2.4

With ffi-inliner you can run C code within your ruby script:
* Mix C snippets in your Ruby code and gulp it on the fly!
* It's based on Ruby-FFI so the C code you inject is portable across
  Ruby implementations!
* Yep, it means that you can run it on JRuby too!
* Fast compilation through tcc
* But it can use the system's compiler (e.g. gcc) on those platforms
  that don't support tcc (e.g. OSX) or that don't have it installed
@
text
@@
