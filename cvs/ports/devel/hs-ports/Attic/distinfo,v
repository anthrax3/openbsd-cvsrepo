head	1.5;
access;
symbols
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	dons_2004-May-09:1.1.1.1
	dons:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2007.07.21.17.18.24;	author kili;	state dead;
branches;
next	1.4;

1.4
date	2007.04.05.15.37.54;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.26.03.37.09;	author dons;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.05.16.22.31;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.09.10.30.22;	author dons;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.09.10.30.22;	author dons;	state Exp;
branches;
next	;


desc
@@


1.5
log
@
This isn't maintained any longer, and, according to Don Stewart, should
be removed. (And it doesn't build with recent Haskell compilers).
@
text
@MD5 (ports-0.4.3.tar.gz) = ssebiFR1OXF2iXzLo78mbg==
RMD160 (ports-0.4.3.tar.gz) = DQv4iF3PXQcYAbUGFepSZ0aeFiM=
SHA1 (ports-0.4.3.tar.gz) = CNllpZv+noCD72pl3p5t7Or9nYo=
SHA256 (ports-0.4.3.tar.gz) = oqLgKi5A4GVZzGbabdd4eEE5t2xHOFGzoTD3U/ASm4M=
SIZE (ports-0.4.3.tar.gz) = 67528
@


1.4
log
@base64 distinfo with SHA256
@
text
@@


1.3
log
@Update hs-ports.
@
text
@d1 4
a4 3
MD5 (ports-0.4.3.tar.gz) = b2c79b885475397176897ccba3bf266e
RMD160 (ports-0.4.3.tar.gz) = 0d0bf8885dcf5d071801b50615ea5267469e1623
SHA1 (ports-0.4.3.tar.gz) = 08d965a59bfe9e8083ef6a65de9e6deceafd9d8a
@


1.2
log
@SIZE
@
text
@d1 4
a4 4
MD5 (ports-0.4.1.tar.gz) = 7d621a780168a32298ce49ea031ab22f
RMD160 (ports-0.4.1.tar.gz) = 0f7d4e97b4d984e05589a9421b145b74783f2b63
SHA1 (ports-0.4.1.tar.gz) = 5c6fc040776bbdd13782c9f2abcbf43d36939e68
SIZE (ports-0.4.1.tar.gz) = 66083
@


1.1
log
@Initial revision
@
text
@d4 1
@


1.1.1.1
log
@Import hs-ports-0.4.1, a library for concurrent and distributed Haskell

	The Haskell Ports Library (HPL) supports concurrent and distributed
	computing in the IO monad _without_ relying on mutable variables.
	Instead, it supplies monotone single-assignment variables and ports
	abstractions. Ports are an abstraction for modelling variables whose
	values evolve over time without the need to resort to mutable
	variable, such as IORefs. More precisely, a port represents all values
	that a time-dependent variable successively takes as a stream, where
	each element of the stream corresponds to a state change.

	Ports are ideally suited for purely functional GUI interfaces that
	completely avoid the use of mutable variables. It is planned to extend
	the library to interaction between different processes possibly
	located on distinct processing nodes.

ok pvalchev@@
@
text
@@
