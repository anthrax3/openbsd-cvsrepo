head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.38
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.36
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.32
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.30
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.28
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.26
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.24
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.22
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.20
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.18
	OPENBSD_5_0:1.1.1.1.0.16
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.12
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.10
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.8
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	sthen_20070909:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2007.09.09.23.05.17;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.09.09.23.05.17;	author sthen;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@Defines a set of symbolic constants with ordered numeric values ala
C enum types. What are they good for? Typical uses would be for giving
mnemonic names to indexes of arrays.

This not only reads easier, but can also be typo-checked at compile
time when run under use strict. That is, if you misspell Days_Fri
as Days_Fry, you'll generate a compile error.

Also capable of creating ordered bitmask constants, allowing the
easy creation of bitmask constants, allowing you to efficiently store
many true/false options within a single integer.
@


1.1.1.1
log
@import p5-enum

Defines a set of symbolic constants with ordered numeric values ala
C enum types. What are they good for? Typical uses would be for giving
mnemonic names to indexes of arrays.

This not only reads easier, but can also be typo-checked at compile
time when run under use strict. That is, if you misspell Days_Fri
as Days_Fry, you'll generate a compile error.

Also capable of creating ordered bitmask constants, allowing the
easy creation of bitmask constants, allowing you to efficiently store
many true/false options within a single integer.

ok merdely@@
@
text
@@
