head	1.146;
access;
symbols
	OPENBSD_6_1:1.141.0.2
	OPENBSD_6_1_BASE:1.141
	OPENBSD_6_0:1.115.0.2
	OPENBSD_6_0_BASE:1.115
	OPENBSD_5_9:1.108.0.2
	OPENBSD_5_9_BASE:1.108
	OPENBSD_5_8:1.107.0.4
	OPENBSD_5_8_BASE:1.107
	OPENBSD_5_7:1.100.0.2
	OPENBSD_5_7_BASE:1.100
	OPENBSD_5_6:1.80.0.2
	OPENBSD_5_6_BASE:1.80
	OPENBSD_5_5:1.70.0.2
	OPENBSD_5_5_BASE:1.70
	OPENBSD_5_4:1.64.0.2
	OPENBSD_5_4_BASE:1.64
	OPENBSD_5_3:1.59.0.2
	OPENBSD_5_3_BASE:1.59
	OPENBSD_5_2:1.45.0.2
	OPENBSD_5_2_BASE:1.45
	OPENBSD_5_1_BASE:1.37
	OPENBSD_5_1:1.37.0.2
	OPENBSD_5_0:1.33.0.2
	OPENBSD_5_0_BASE:1.33
	OPENBSD_4_9:1.29.0.2
	OPENBSD_4_9_BASE:1.29
	OPENBSD_4_8:1.24.0.2
	OPENBSD_4_8_BASE:1.24
	OPENBSD_4_7:1.19.0.2
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.14.0.2
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	sthen_20081110:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.146
date	2017.07.18.21.35.20;	author sthen;	state Exp;
branches;
next	1.145;
commitid	LeNy8HWXSgQeNgdG;

1.145
date	2017.07.17.18.07.41;	author landry;	state Exp;
branches;
next	1.144;
commitid	um9M23wSPux7UdgF;

1.144
date	2017.07.14.17.14.03;	author sthen;	state Exp;
branches;
next	1.143;
commitid	2I37ZfTOrmp63Kb2;

1.143
date	2017.06.06.14.12.59;	author robert;	state Exp;
branches;
next	1.142;
commitid	w6qyAwMHW5rangMu;

1.142
date	2017.04.17.14.20.17;	author ajacoutot;	state Exp;
branches;
next	1.141;
commitid	WGAasc2kWMjXmWb7;

1.141
date	2017.03.25.14.00.47;	author ajacoutot;	state Exp;
branches;
next	1.140;
commitid	sJNuYNg15ib3zLsS;

1.140
date	2017.03.23.08.26.07;	author ajacoutot;	state Exp;
branches;
next	1.139;
commitid	qqpBj8whlAgCQWje;

1.139
date	2017.03.18.20.49.42;	author ajacoutot;	state Exp;
branches;
next	1.138;
commitid	5XmcglBrsE6FUDTd;

1.138
date	2017.03.14.17.29.45;	author ajacoutot;	state Exp;
branches;
next	1.137;
commitid	XTiylXnMOG4h8Oxu;

1.137
date	2017.03.01.08.55.28;	author ajacoutot;	state Exp;
branches;
next	1.136;
commitid	VdmexSNWBBWUTciv;

1.136
date	2017.02.26.13.34.23;	author ajacoutot;	state Exp;
branches;
next	1.135;
commitid	Zo4YCYjY6me9WYbn;

1.135
date	2017.02.22.09.06.11;	author ajacoutot;	state Exp;
branches;
next	1.134;
commitid	9ZrYu7Yze0vnuAKe;

1.134
date	2017.02.20.07.04.00;	author ajacoutot;	state Exp;
branches;
next	1.133;
commitid	80OcmKVht3SvjxRS;

1.133
date	2017.02.16.15.07.16;	author jca;	state Exp;
branches;
next	1.132;
commitid	ZCMIOK4N5VLJOUXb;

1.132
date	2017.02.12.11.25.19;	author ajacoutot;	state Exp;
branches;
next	1.131;
commitid	90XzCAoIdXBqD03l;

1.131
date	2017.02.10.09.37.43;	author ajacoutot;	state Exp;
branches;
next	1.130;
commitid	fevyFq3hanzfmR8U;

1.130
date	2017.01.08.01.59.49;	author bluhm;	state Exp;
branches;
next	1.129;
commitid	efHcaUYSnTGDJXAL;

1.129
date	2017.01.01.10.48.58;	author ajacoutot;	state Exp;
branches;
next	1.128;
commitid	XyHbgTRtViXPP2gF;

1.128
date	2016.12.31.20.48.31;	author jca;	state Exp;
branches;
next	1.127;
commitid	0dM587yQKYVbhqdZ;

1.127
date	2016.12.22.11.07.13;	author ajacoutot;	state Exp;
branches;
next	1.126;
commitid	O47C1FT214H07LYC;

1.126
date	2016.12.21.09.27.57;	author jsg;	state Exp;
branches;
next	1.125;
commitid	aZfc5zLmQdAEcyHn;

1.125
date	2016.11.02.07.46.33;	author ajacoutot;	state Exp;
branches;
next	1.124;
commitid	oRqn7j8zcVdTdNsk;

1.124
date	2016.10.12.11.04.38;	author sthen;	state Exp;
branches;
next	1.123;
commitid	BmaH6EkMSQL5fgAf;

1.123
date	2016.10.09.06.47.10;	author ajacoutot;	state Exp;
branches;
next	1.122;
commitid	Q9cLLgjjoUbhockx;

1.122
date	2016.10.07.08.55.30;	author ajacoutot;	state Exp;
branches;
next	1.121;
commitid	9CZYQ6vy0MJoEWYH;

1.121
date	2016.09.28.07.16.23;	author ajacoutot;	state Exp;
branches;
next	1.120;
commitid	TlPxWywiCvVctWTQ;

1.120
date	2016.09.24.12.35.38;	author ajacoutot;	state Exp;
branches;
next	1.119;
commitid	P8uBvX7hMStbSNIu;

1.119
date	2016.09.18.07.46.32;	author ajacoutot;	state Exp;
branches;
next	1.118;
commitid	InSmiybwC5cxVzHp;

1.118
date	2016.09.13.07.47.41;	author ajacoutot;	state Exp;
branches;
next	1.117;
commitid	UZfknjQxTAHiVt2I;

1.117
date	2016.09.01.17.32.16;	author pascal;	state Exp;
branches;
next	1.116;
commitid	U6qWKtTI0CYpV1RF;

1.116
date	2016.07.31.17.49.38;	author ajacoutot;	state Exp;
branches;
next	1.115;
commitid	xSoQtn2uXYAml77y;

1.115
date	2016.07.06.16.33.35;	author stefan;	state Exp;
branches;
next	1.114;
commitid	FuqKbjHj3rcOExoc;

1.114
date	2016.05.24.07.53.23;	author ajacoutot;	state Exp;
branches;
next	1.113;
commitid	wLyWnSeuKgH8uuqx;

1.113
date	2016.05.15.07.07.52;	author ajacoutot;	state Exp;
branches;
next	1.112;
commitid	LWasRKnDGo7JO66q;

1.112
date	2016.05.14.20.36.36;	author ajacoutot;	state Exp;
branches;
next	1.111;
commitid	Ww8D7gwHYMZAZd2q;

1.111
date	2016.04.29.08.40.07;	author sthen;	state Exp;
branches;
next	1.110;
commitid	8cQq7Kzx17UGmQeo;

1.110
date	2016.03.07.17.03.04;	author pascal;	state Exp;
branches;
next	1.109;
commitid	W5Qj8j1mRD9W6gbv;

1.109
date	2016.03.05.15.31.40;	author pascal;	state Exp;
branches;
next	1.108;
commitid	Hqi865xYWk2i2UMI;

1.108
date	2015.08.24.07.45.56;	author ajacoutot;	state Exp;
branches;
next	1.107;
commitid	77IA25YM9mTafV5X;

1.107
date	2015.06.15.06.20.48;	author ajacoutot;	state Exp;
branches;
next	1.106;
commitid	JHj0Zl8dBKRa3uaM;

1.106
date	2015.06.04.05.58.43;	author ajacoutot;	state Exp;
branches;
next	1.105;
commitid	kCyWwP07h5Iemsa0;

1.105
date	2015.06.03.06.23.21;	author ajacoutot;	state Exp;
branches;
next	1.104;
commitid	nvw4jSvhWCMcjtqa;

1.104
date	2015.05.21.05.37.50;	author ajacoutot;	state Exp;
branches;
next	1.103;
commitid	vqWnVCEAUKYHuK41;

1.103
date	2015.05.19.05.33.38;	author ajacoutot;	state Exp;
branches;
next	1.102;
commitid	pCal9wg5J0ccKDxv;

1.102
date	2015.05.11.23.21.51;	author ajacoutot;	state Exp;
branches;
next	1.101;
commitid	OoEz6S2vTlKqF89r;

1.101
date	2015.04.09.22.25.02;	author sthen;	state Exp;
branches;
next	1.100;
commitid	By0YomZj9fqvzzim;

1.100
date	2015.02.11.00.29.05;	author brad;	state Exp;
branches;
next	1.99;
commitid	G7LA6Os0pseQPeE5;

1.99
date	2015.01.22.12.29.36;	author brad;	state Exp;
branches;
next	1.98;
commitid	WKhS2ID5QHwCttZW;

1.98
date	2015.01.03.00.54.12;	author brad;	state Exp;
branches;
next	1.97;
commitid	q6SVG3eEdtbOAgSM;

1.97
date	2014.12.30.22.41.09;	author brad;	state Exp;
branches;
next	1.96;
commitid	J87oAFRZWWKVCyo6;

1.96
date	2014.12.30.22.25.47;	author brad;	state Exp;
branches;
next	1.95;
commitid	iVCH6tQUkcQbh7zN;

1.95
date	2014.12.30.05.23.32;	author brad;	state Exp;
branches;
next	1.94;
commitid	VGiiCcKe4D4ERG6b;

1.94
date	2014.12.28.00.30.17;	author brad;	state Exp;
branches;
next	1.93;
commitid	0AjpfsonSOK9rSfT;

1.93
date	2014.12.16.21.10.31;	author brad;	state Exp;
branches;
next	1.92;
commitid	5ykDERZsYgfmps3i;

1.92
date	2014.12.12.21.51.39;	author brad;	state Exp;
branches;
next	1.91;
commitid	17mFjo3L4SBSl4Zg;

1.91
date	2014.11.15.03.26.40;	author brad;	state Exp;
branches;
next	1.90;
commitid	VamhC5WDIZmE3W2P;

1.90
date	2014.11.07.10.40.05;	author ajacoutot;	state Exp;
branches;
next	1.89;
commitid	QYJaNcIko4VHoTIl;

1.89
date	2014.10.28.17.52.05;	author brad;	state Exp;
branches;
next	1.88;
commitid	evS2EXXakgWF8MMD;

1.88
date	2014.10.11.20.23.46;	author brad;	state Exp;
branches;
next	1.87;
commitid	4ZQgcqtlSKYr3jg9;

1.87
date	2014.09.18.20.19.27;	author brad;	state Exp;
branches;
next	1.86;
commitid	YondZRNz2SpahE8s;

1.86
date	2014.09.15.19.24.16;	author brad;	state Exp;
branches;
next	1.85;
commitid	dmAb5dt3vIF1bbcv;

1.85
date	2014.09.12.12.39.47;	author brad;	state Exp;
branches;
next	1.84;
commitid	TggHq35k0tOfRdsL;

1.84
date	2014.09.11.17.59.51;	author brad;	state Exp;
branches;
next	1.83;
commitid	8sGxQU7JPb6JQKzm;

1.83
date	2014.09.11.17.54.13;	author brad;	state Exp;
branches;
next	1.82;
commitid	BhAzETRQAFaDoPwn;

1.82
date	2014.08.29.14.28.32;	author brad;	state Exp;
branches;
next	1.81;
commitid	AMVKIbMANJibkg5R;

1.81
date	2014.08.14.01.08.09;	author brad;	state Exp;
branches;
next	1.80;
commitid	5EOklbIZtRwBqvKn;

1.80
date	2014.07.26.09.27.29;	author pascal;	state Exp;
branches;
next	1.79;
commitid	9xHNH06g0iBFi5lS;

1.79
date	2014.07.16.22.16.54;	author brad;	state Exp;
branches;
next	1.78;
commitid	R7yaqlRTZ3Ykxf8H;

1.78
date	2014.07.11.01.05.24;	author brad;	state Exp;
branches;
next	1.77;
commitid	HV2dQgWiQjyBoYgQ;

1.77
date	2014.07.10.22.46.37;	author brad;	state Exp;
branches;
next	1.76;
commitid	QWL9Lg9Nbr4j1VZM;

1.76
date	2014.07.10.19.26.48;	author brad;	state Exp;
branches;
next	1.75;
commitid	Gna6nASmYoUeJ0Ga;

1.75
date	2014.06.13.22.29.40;	author brad;	state Exp;
branches;
next	1.74;
commitid	c2sJcOVE6BwRjMcT;

1.74
date	2014.05.29.00.23.36;	author brad;	state Exp;
branches;
next	1.73;

1.73
date	2014.05.17.11.41.15;	author brad;	state Exp;
branches;
next	1.72;

1.72
date	2014.04.19.19.56.21;	author brad;	state Exp;
branches;
next	1.71;

1.71
date	2014.04.18.09.30.48;	author brad;	state Exp;
branches;
next	1.70;

1.70
date	2013.12.16.20.34.46;	author brad;	state Exp;
branches;
next	1.69;

1.69
date	2013.12.07.10.30.39;	author brad;	state Exp;
branches;
next	1.68;

1.68
date	2013.12.02.22.14.29;	author brad;	state Exp;
branches;
next	1.67;

1.67
date	2013.11.25.14.16.22;	author sthen;	state Exp;
branches;
next	1.66;

1.66
date	2013.10.31.21.12.13;	author sthen;	state Exp;
branches;
next	1.65;

1.65
date	2013.08.06.23.33.44;	author jsg;	state Exp;
branches;
next	1.64;

1.64
date	2013.06.28.11.14.38;	author naddy;	state Exp;
branches;
next	1.63;

1.63
date	2013.06.21.22.09.12;	author brad;	state Exp;
branches;
next	1.62;

1.62
date	2013.05.02.15.41.57;	author sebastia;	state Exp;
branches;
next	1.61;

1.61
date	2013.03.30.12.10.40;	author sthen;	state Exp;
branches;
next	1.60;

1.60
date	2013.03.11.10.50.11;	author espie;	state Exp;
branches;
next	1.59;

1.59
date	2013.01.08.10.14.13;	author brad;	state Exp;
branches;
next	1.58;

1.58
date	2013.01.08.09.53.46;	author brad;	state Exp;
branches;
next	1.57;

1.57
date	2013.01.04.01.10.30;	author brad;	state Exp;
branches;
next	1.56;

1.56
date	2012.12.23.20.49.29;	author brad;	state Exp;
branches;
next	1.55;

1.55
date	2012.10.16.18.22.30;	author jasper;	state Exp;
branches;
next	1.54;

1.54
date	2012.09.30.09.16.36;	author sthen;	state Exp;
branches;
next	1.53;

1.53
date	2012.09.05.23.19.24;	author sthen;	state Exp;
branches;
next	1.52;

1.52
date	2012.08.31.16.21.20;	author pascal;	state Exp;
branches;
next	1.51;

1.51
date	2012.08.29.00.45.47;	author sthen;	state Exp;
branches;
next	1.50;

1.50
date	2012.08.21.17.51.53;	author pascal;	state Exp;
branches;
next	1.49;

1.49
date	2012.08.20.08.12.47;	author dcoppa;	state Exp;
branches;
next	1.48;

1.48
date	2012.08.08.09.35.24;	author sthen;	state Exp;
branches;
next	1.47;

1.47
date	2012.08.06.22.35.26;	author sthen;	state Exp;
branches;
next	1.46;

1.46
date	2012.08.04.14.47.52;	author pascal;	state Exp;
branches;
next	1.45;

1.45
date	2012.07.08.18.36.12;	author sthen;	state Exp;
branches;
next	1.44;

1.44
date	2012.06.14.09.32.00;	author dcoppa;	state Exp;
branches;
next	1.43;

1.43
date	2012.05.26.09.14.34;	author jasper;	state Exp;
branches;
next	1.42;

1.42
date	2012.05.25.09.05.49;	author sthen;	state Exp;
branches;
next	1.41;

1.41
date	2012.05.05.19.24.01;	author dcoppa;	state Exp;
branches;
next	1.40;

1.40
date	2012.04.23.23.11.01;	author sthen;	state Exp;
branches;
next	1.39;

1.39
date	2012.04.11.13.05.45;	author sthen;	state Exp;
branches;
next	1.38;

1.38
date	2012.03.29.13.38.30;	author sthen;	state Exp;
branches;
next	1.37;

1.37
date	2012.01.19.08.41.13;	author sthen;	state Exp;
branches;
next	1.36;

1.36
date	2011.12.15.08.39.51;	author sthen;	state Exp;
branches;
next	1.35;

1.35
date	2011.12.14.22.58.23;	author sthen;	state Exp;
branches;
next	1.34;

1.34
date	2011.09.16.09.24.52;	author espie;	state Exp;
branches;
next	1.33;

1.33
date	2011.06.30.19.57.14;	author jasper;	state Exp;
branches;
next	1.32;

1.32
date	2011.06.08.17.40.08;	author jasper;	state Exp;
branches;
next	1.31;

1.31
date	2011.05.03.15.03.03;	author chl;	state Exp;
branches;
next	1.30;

1.30
date	2011.04.09.21.43.39;	author jsg;	state Exp;
branches;
next	1.29;

1.29
date	2011.01.13.00.15.50;	author jeremy;	state Exp;
branches;
next	1.28;

1.28
date	2010.11.15.19.46.00;	author espie;	state Exp;
branches;
next	1.27;

1.27
date	2010.10.18.17.47.54;	author espie;	state Exp;
branches;
next	1.26;

1.26
date	2010.09.28.07.38.24;	author sthen;	state Exp;
branches;
next	1.25;

1.25
date	2010.08.30.22.09.45;	author jasper;	state Exp;
branches;
next	1.24;

1.24
date	2010.07.31.11.04.48;	author sthen;	state Exp;
branches;
next	1.23;

1.23
date	2010.07.21.22.19.01;	author sthen;	state Exp;
branches;
next	1.22;

1.22
date	2010.07.09.08.45.11;	author naddy;	state Exp;
branches;
next	1.21;

1.21
date	2010.06.12.12.15.08;	author sthen;	state Exp;
branches;
next	1.20;

1.20
date	2010.04.29.16.37.09;	author jsg;	state Exp;
branches;
next	1.19;

1.19
date	2009.11.18.00.49.09;	author sthen;	state Exp;
branches;
next	1.18;

1.18
date	2009.11.02.22.53.27;	author jsg;	state Exp;
branches;
next	1.17;

1.17
date	2009.08.16.09.54.28;	author jsg;	state Exp;
branches;
next	1.16;

1.16
date	2009.08.09.20.16.41;	author jsg;	state Exp;
branches;
next	1.15;

1.15
date	2009.08.09.11.26.03;	author sthen;	state Exp;
branches;
next	1.14;

1.14
date	2009.06.29.13.42.54;	author sthen;	state Exp;
branches;
next	1.13;

1.13
date	2009.06.25.15.25.13;	author sthen;	state Exp;
branches;
next	1.12;

1.12
date	2009.06.24.20.23.12;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2009.06.22.00.19.01;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2009.06.21.23.13.48;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2009.05.17.09.40.53;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2009.03.15.12.49.35;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2009.02.08.22.55.43;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2008.11.28.10.38.38;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2008.11.28.10.23.39;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2008.11.13.08.29.13;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.12.15.46.32;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.10.12.17.54;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.10.11.25.33;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.11.10.11.25.33;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.146
log
@Use "COMPILER=base gcc4" for devel/llvm to give it a chance on aarch64.
From Brad. I haven't tested (too many hangs for ports building) but since
it currently fails because there's no gcc4 on the arch, it can't make
things worse than they already are.
@
text
@# $OpenBSD: Makefile,v 1.145 2017/07/17 18:07:41 landry Exp $

# XXX: Remember to bump MODCLANG_VERSION in lang/clang/clang.port.mk when
# updating this port.

ONLY_FOR_ARCHS = ${LLVM_ARCHS}
BROKEN-powerpc =	relocation truncated to fit: R_PPC_PLTREL24

DPB_PROPERTIES = parallel

MULTI_PACKAGES =	-main -python
COMMENT-main =	modular, fast C/C++/ObjC compiler, static analyzer and tools
COMMENT-python =	Python bindings for Clang

LLVM_V =	4.0.1
DISTNAME =	llvm-${LLVM_V}.src
PKGNAME =	llvm-${LLVM_V}
PKGNAME-main =	llvm-${LLVM_V}
PKGNAME-python =	py-llvm-${LLVM_V}
CATEGORIES =	devel
DISTFILES =	llvm-${LLVM_V}.src${EXTRACT_SUFX} \
		cfe-${LLVM_V}.src${EXTRACT_SUFX} \
		lld-${LLVM_V}.src${EXTRACT_SUFX}
MASTER_SITES =	http://www.llvm.org/releases/${LLVM_V}/
EXTRACT_SUFX =	.tar.xz

SHARED_LIBS =	clang		5.0 \
		LTO		2.0

# packager notes in http://llvm.org/docs/Packaging.html
HOMEPAGE =	http://www.llvm.org/

MAINTAINER=	Brad Smith <brad@@comstyle.com>

# BSD
PERMIT_PACKAGE_CDROM =	Yes

WANTLIB =	c m pthread z

MODULES =	devel/cmake \
		lang/python

COMPILER =	base gcc4

LLVM_GCC4_ARCHS =	amd64 arm i386 powerpc mips64 mips64el sparc64

TEST_DEPENDS =		devel/dejagnu \
			shells/bash
BUILD_DEPENDS +=	textproc/py-sphinx
RUN_DEPENDS +=		devel/gtest

.if ${MACHINE_ARCH:M${LLVM_GCC4_ARCHS}}
TEST_DEPENDS +=		lang/gcc/${MODGCC4_VERSION},-c++
RUN_DEPENDS +=		lang/gcc/${MODGCC4_VERSION},-c++
.endif

# clang python module loads libclang.so dynamically with cdll.LoadLibrary()
WANTLIB-python =	clang
RUN_DEPENDS-python =	${MODPY_RUN_DEPENDS}
LIB_DEPENDS-python =	${BUILD_PKGPATH},-main

SEPARATE_BUILD =	Yes
CONFIGURE_ARGS =	-DLLVM_ENABLE_FFI:Bool=False \
			-DLLVM_ENABLE_TERMINFO:Bool=False \
			-DLLVM_REQUIRES_RTTI:Bool=True \
			-DCMAKE_DISABLE_FIND_PACKAGE_LibXml2:Bool=True \
			-DGO_EXECUTABLE=GO_EXECUTABLE-NOTFOUND

# Workaround relocation overflow
#
# Have the build disable PIE to workaround breakage that was
# introduced when PIE was enabled
.if ${MACHINE_ARCH} == "powerpc"
CFLAGS +=		-mlongcall
CXXFLAGS +=		-mlongcall
CONFIGURE_ARGS +=	-DCMAKE_EXE_LINKER_FLAGS="-nopie"
CONFIGURE_ARGS +=	-DCMAKE_SHARED_LINKER_FLAGS="-nopie"
.elif ${MACHINE_ARCH} == "arm"
CFLAGS +=		-mlong-calls
CXXFLAGS +=		-mlong-calls
.endif

TEST_TARGET =		check

# XXX sync
GCC_VER =		4.9.4
.if ${MACHINE_ARCH} == "amd64"
GCC_CONFIG =		x86_64-unknown-openbsd${OSREV}
.else
GCC_CONFIG =		${MACHINE_ARCH}-unknown-openbsd${OSREV}
.endif
CLANG_INCLUDE_PATH =	lib/clang/${LLVM_V}/include
SUBST_VARS +=		CLANG_INCLUDE_PATH LLVM_V GCC_VER GCC_CONFIG

post-extract:
	mv ${WRKDIR}/cfe-${LLVM_V}.src ${WRKSRC}/tools/clang
	mv ${WRKDIR}/lld-${LLVM_V}.src ${WRKSRC}/tools/lld

pre-configure:
	@@${SUBST_CMD} ${WRKSRC}/tools/clang/lib/Driver/ToolChains.cpp \
	    ${WRKSRC}/tools/clang/lib/Driver/Tools.cpp
	-@@ln -s ${MODPY_BIN} ${WRKDIR}/bin/python

post-build:
	cd ${WRKSRC}/docs && make -f Makefile.sphinx man
	cd ${WRKSRC}/tools/clang/docs && make -f Makefile.sphinx man

post-install:
	${INSTALL_DATA_DIR} \
	    ${PREFIX}/lib/python${MODPY_VERSION}/site-packages/clang
	${INSTALL_DATA} ${WRKSRC}/tools/clang/bindings/python/clang/* \
	    ${PREFIX}/lib/python${MODPY_VERSION}/site-packages/clang
	${MODPY_BIN} ${MODPY_LIBDIR}/compileall.py \
	    ${PREFIX}/lib/python${MODPY_VERSION}/site-packages/clang
	${INSTALL_DATA} ${WRKSRC}/docs/_build/man/* \
	    ${PREFIX}/man/man1
	${INSTALL_DATA} ${WRKSRC}/tools/clang/docs/_build/man/clang.1 \
	    ${PREFIX}/man/man1
	# lit and FileCheck are not installed
	@@rm ${PREFIX}/man/man1/lit.1
	@@rm ${PREFIX}/man/man1/FileCheck.1

.include <bsd.port.mk>
@


1.145
log
@Mark llvm as BROKEN-powerpc, it never built fine there, and we're
uselessly wasting cpu cycles trying.

Fails when linking binaries with 'relocation truncated to fit:
R_PPC_PLTREL24' - jca@@ tried to fix ld at some point, or something else
has to be whacked.

See http://build-failures.rhaalovely.net/powerpc/2017-06-03/devel/llvm.log
or http://build-failures.rhaalovely.net/powerpc/2017-04-02/devel/llvm%2C-main.log
or the bazillions previous failures.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.144 2017/07/14 17:14:03 sthen Exp $
d43 1
a43 1
COMPILER =	gcc4
@


1.144
log
@update to LLVM-4.0.1, from Brad (maintainer)
been through i386 and amd64 bulks
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.143 2017/06/06 14:12:59 robert Exp $
d7 1
@


1.143
log
@enable TLS emulation by default just like in base clang

ok espie@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.142 2017/04/17 14:20:17 ajacoutot Exp $
d14 1
a14 1
LLVM_V =	4.0.0
a18 1
REVISION-main =	4
d40 1
a40 2
		lang/python \
		gcc4
d42 3
a44 2
MODGCC4_LANGS = c c++
MODGCC4_ARCHS = *
d47 1
a47 2
			shells/bash \
			lang/gcc/${MODGCC4_VERSION},-c++
d49 6
a54 2
RUN_DEPENDS +=		devel/gtest \
			lang/gcc/${MODGCC4_VERSION},-c++
@


1.142
log
@Disable colored diagnostics.

from Brad (MAINTAINER)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.141 2017/03/25 14:00:47 ajacoutot Exp $
d19 1
a19 1
REVISION-main =	3
@


1.141
log
@Updated diff for the "supported targets" change.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.140 2017/03/23 08:26:07 ajacoutot Exp $
d19 1
a19 1
REVISION-main =	2
@


1.140
log
@- Bring in an LLD workaround from base
- Add "(compatible with GNU linkers)" to the -version output
- Print out "supported targets".
- Update/fix PIE defaults
- -z nodlopen has been commited upstream

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.139 2017/03/18 20:49:42 ajacoutot Exp $
d19 1
a19 1
REVISION-main =	1
@


1.139
log
@Bring in some commits from base for Clang and lld.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.138 2017/03/14 17:29:45 ajacoutot Exp $
d19 1
a19 1
REVISION-main =	0
@


1.138
log
@Update to llvm-4.0.0.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.137 2017/03/01 08:55:28 ajacoutot Exp $
d19 1
@


1.137
log
@Fix types for OpenBSD/mips64.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.136 2017/02/26 13:34:23 ajacoutot Exp $
d14 1
a14 1
LLVM_V =	4.0.0rc2
a18 1
REVISION-main =	4
d20 4
a23 2
DISTFILES =	llvm-${LLVM_V}.src${EXTRACT_SUFX}
MASTER_SITES =	http://comstyle.com/source/
d88 1
a88 1
CLANG_INCLUDE_PATH =	lib/clang/${LLVM_V:S/rc2//}/include
d90 4
@


1.136
log
@Bring in from base:
Disable loop idiom recognition for _libc_memset and _libc_memcpy.  These are
the internal names we use in libc for memset and memcpy and having the
compiler optimize them as calls to memset and memcpy will lead to infinite
recursion.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.135 2017/02/22 09:06:11 ajacoutot Exp $
d19 1
a19 1
REVISION-main =	3
@


1.135
log
@Fix OpenBSD/aarch64 types.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.134 2017/02/20 07:04:00 ajacoutot Exp $
d19 1
a19 1
REVISION-main =	2
@


1.134
log
@Sync both the --eh-frame-hdr and float128 diffs to what was commited
upstream.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.133 2017/02/16 15:07:16 jca Exp $
d19 1
a19 1
REVISION-main =	1
@


1.133
log
@Use -mlong-calls on arm and powerpc to work around relocations overflow

On those architectures the .text section of the executables is too big
for the 32M immediate branch offset.  ld --relax is supposed to fix
things on powerpc, but it is actually ineffective here.  cc -mlong-calls
creates branches instructions using a full 32 bits register; FreeBSD
uses the same workaround.

A fix for lib/csu is still needed to avoid an overflow between .init
and .fini sections.  powerpc hasn't been tested, but we know that
devel/llvm is already broken there anyway.

ok Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.132 2017/02/12 11:25:19 ajacoutot Exp $
d19 1
a19 1
REVISION-main =	0
@


1.132
log
@Disable -Wpointer-sign warnings per default; base gcc does the same.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.131 2017/02/10 09:37:43 ajacoutot Exp $
d69 7
a75 2
CONFIGURE_ARGS +=	-DCMAKE_EXE_LINKER_FLAGS="-Wl,--relax -nopie"
CONFIGURE_ARGS +=	-DCMAKE_SHARED_LINKER_FLAGS="-Wl,--relax -nopie"
@


1.131
log
@Update to llvm-4.0.0rc2.
- survived a bulk on i386 and amd64

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.130 2017/01/08 01:59:49 bluhm Exp $
d19 1
@


1.130
log
@Create subpackage py-llvm that contains the Python bindings for Clang.
Bump revision of llvm main package and x11/gnome/builder.
OK Brad Smith (maintainer) ajacoutot@@ sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.129 2017/01/01 10:48:58 ajacoutot Exp $
d14 1
a14 2
LLVM_V =	3.9.1
REVISION-main =	0
d20 2
a21 4
DISTFILES =	llvm-${LLVM_V}.src${EXTRACT_SUFX} \
		cfe-${LLVM_V}.src${EXTRACT_SUFX} \
		lld-${LLVM_V}.src${EXTRACT_SUFX}
MASTER_SITES =	http://www.llvm.org/releases/${LLVM_V}/
d24 2
a25 2
SHARED_LIBS =	clang		4.0 \
		LTO		1.0
d81 1
a81 1
CLANG_INCLUDE_PATH =	lib/clang/${LLVM_V}/include
a82 13

post-extract:
	mv ${WRKDIR}/cfe-${LLVM_V}.src ${WRKSRC}/tools/clang
	mv ${WRKDIR}/lld-${LLVM_V}.src ${WRKSRC}/tools/lld

.if ${MACHINE_ARCH} != "i386" && ${MACHINE_ARCH} != "powerpc"
PKG_ARGS += -Dlld=1
.else
PKG_ARGS += -Dlld=0

post-patch:
	rm -r ${WRKSRC}/tools/lld
.endif
@


1.129
log
@Unbreak on powerpc: don't build lld there.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.128 2016/12/31 20:48:31 jca Exp $
d10 3
a12 1
COMMENT =	modular, fast C/C++/ObjC compiler, static analyzer and tools
d15 1
d18 2
d54 5
d110 6
@


1.128
log
@Broken on powerpc: undefined reference to `__atomic_load_8'
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.127 2016/12/22 11:07:13 ajacoutot Exp $
a6 1
BROKEN-powerpc = undefined reference to __atomic_load_8
d81 1
a81 1
.if ${MACHINE_ARCH} != "i386"
@


1.127
log
@Update to llvm-3.9.1.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.126 2016/12/21 09:27:57 jsg Exp $
d7 2
@


1.126
log
@Recognise an OpenBSD aarch64 triple.  This enables some OpenBSD specific
builtin defines such as __OpenBSD__.  Same patch that patrick committed
to llvm in base.

ok patrick@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.125 2016/11/02 07:46:33 ajacoutot Exp $
d11 1
a11 1
LLVM_V =	3.9.0
a13 1
REVISION =	3
@


1.125
log
@Sync with what was committed upstream (Disable the use of std::call_once
on OpenBSD with libstdc++).


from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.124 2016/10/12 11:04:38 sthen Exp $
d14 1
a14 1
REVISION =	2
@


1.124
log
@don't build lld on i386, it needs __atomic_load_8. ok aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.123 2016/10/09 06:47:10 ajacoutot Exp $
d14 1
a14 1
REVISION =	1
@


1.123
log
@Enable building lld.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.122 2016/10/07 08:55:30 ajacoutot Exp $
d14 1
a14 1
REVISION =	0
d80 9
@


1.122
log
@Update to LLVM 3.9.0.
Been through bulks on amd64 / i386 by sthen@@ and naddy@@ respectively.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.121 2016/09/28 07:16:23 ajacoutot Exp $
d14 1
d17 2
a18 1
		cfe-${LLVM_V}.src${EXTRACT_SUFX}
d79 1
@


1.121
log
@Disable -fstrict-aliasing per default on OpenBSD.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.120 2016/09/24 12:35:38 ajacoutot Exp $
d11 1
a11 2
LLVM_V =	3.8.1
REVISION =	4
d20 2
a21 2
SHARED_LIBS =	clang		3.0 \
		LTO		0.0
@


1.120
log
@Adjust default CPU for OpenBSD/arm and set proper ABI.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.119 2016/09/18 07:46:32 ajacoutot Exp $
d12 1
a12 1
REVISION =	3
@


1.119
log
@Merge in the fix clang types force soft-float on arm patches.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.118 2016/09/13 07:47:41 ajacoutot Exp $
d12 1
a12 1
REVISION =	2
@


1.118
log
@- Remove an obsolete patch that was for the GNU make build infrastructure
- Merge in the stack protector and EH frame header patches

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.117 2016/09/01 17:32:16 pascal Exp $
d12 1
a12 1
REVISION =	1
@


1.117
log
@adjust for GCC update.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.116 2016/07/31 17:49:38 ajacoutot Exp $
d12 1
a12 1
REVISION =	0
@


1.116
log
@Update to llvm-3.8.1.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.115 2016/07/06 16:33:35 stefan Exp $
d12 1
d67 1
a67 1
GCC_VER =		4.9.3
@


1.115
log
@Make clang build working binaries by linking against rcrt0 when
building static PIE binaries. This is also what Bitrig does

ok tobiasu@@ sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.114 2016/05/24 07:53:23 ajacoutot Exp $
d11 1
a11 1
LLVM_V =	3.8.0
a13 1
REVISION =	2
@


1.114
log
@Select proper SPARCv9 variant for the assembler.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.113 2016/05/15 07:07:52 ajacoutot Exp $
d14 1
a14 1
REVISION =	1
@


1.113
log
@Enable the integrated assembler on Mips64 and Sparc.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.112 2016/05/14 20:36:36 ajacoutot Exp $
d14 1
a14 1
REVISION =	0
@


1.112
log
@Update to llvm-3.8.0.

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.111 2016/04/29 08:40:07 sthen Exp $
d14 1
@


1.111
log
@don't allow llvm to pick up go
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.110 2016/03/07 17:03:04 pascal Exp $
d11 1
a11 1
LLVM_V =	3.7.1
a13 1
REVISION =	0
d20 1
a20 1
SHARED_LIBS =	clang		2.0 \
d79 2
a80 4
	@@${SUBST_CMD} ${WRKSRC}/tools/clang/tools/scan-build/scan-build \
		${WRKSRC}/tools/clang/lib/Driver/ToolChains.cpp
	@@${SUBST_CMD} ${WRKSRC}/tools/clang/tools/scan-build/scan-build \
		${WRKSRC}/tools/clang/lib/Driver/Tools.cpp
a87 6
	${INSTALL_SCRIPT} ${WRKSRC}/tools/clang/tools/scan-build/ccc-analyzer \
	    ${WRKSRC}/tools/clang/tools/scan-build/c++-analyzer \
	    ${WRKSRC}/tools/clang/tools/scan-build/scan-build ${PREFIX}/bin
	${INSTALL_DATA} ${WRKSRC}/tools/clang/tools/scan-build/sorttable.js \
	    ${WRKSRC}/tools/clang/tools/scan-build/scanview.css \
	    ${PREFIX}/share/llvm
a88 2
	    ${PREFIX}/man/man1
	${INSTALL_DATA} ${WRKSRC}/tools/clang/tools/scan-build/scan-build.1 \
@


1.110
log
@Correct LLVM linker patch: -L arguments passed on the command line need to be
processed *before* adding default -L directories.  Fixes
mail/mozilla-thunderbird.

ok landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.109 2016/03/05 15:31:40 pascal Exp $
d52 2
a53 1
			-DCMAKE_DISABLE_FIND_PACKAGE_LibXml2:Bool=True
@


1.109
log
@Update to LLVM 3.7.1.  This version is modified to use C++ includes from
ports GCC and link to libestdc++.

Currently, this still breaks mail/mozilla-thunderbird, which will be taken care
of shortly.

feedback/testing from jsg landry mmcc semarie aja naddy (hope I didn't forget
anyone)

ok landry robert
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.108 2015/08/24 07:45:56 ajacoutot Exp $
d14 1
@


1.108
log
@Backport commit from upstream LLVM:
r219009
[ISel] Keep matching state consistent when folding during X86 address match

from Brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.107 2015/06/15 06:20:48 ajacoutot Exp $
d11 3
a13 3
LLVM_V =	3.5
DISTNAME =	llvm-${LLVM_V}.20140228
REVISION =	35
d15 3
a17 1
MASTER_SITES =	http://comstyle.com/source/
d20 2
a21 1
SHARED_LIBS =	clang		1.0
d31 1
a31 1
WANTLIB =	c m pthread stdc++ z
d34 2
a35 1
		lang/python
d37 6
a42 2
TEST_DEPENDS =	devel/dejagnu \
		shells/bash
d44 2
a45 1
RUN_DEPENDS +=		devel/gtest
d59 1
d64 7
d72 4
a75 1
SUBST_VARS +=		CLANG_INCLUDE_PATH LLVM_V
d78 4
a81 1
	@@${SUBST_CMD} ${WRKSRC}/tools/clang/tools/scan-build/scan-build
d86 1
a86 3
	pod2man --release=CVS --center="LLVM" \
	    ${WRKSRC}/tools/clang/docs/tools/clang.pod \
	    ${WRKSRC}/docs/_build/man/clang.1
d99 3
a101 1
	# lit is not installed anymore
d103 1
@


1.107
log
@Backport commit from upstream LLVM:

r239046
[SPARC] Fix types of size_t, intptr_t, and ptrdiff_t on Linux.

from brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.106 2015/06/04 05:58:43 ajacoutot Exp $
d13 1
a13 1
REVISION =	34
@


1.106
log
@Backport commit from upstream LLVM:

r229911
MC: Allow multiple comma-separated expressions on the .uleb128 directive.

from brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.105 2015/06/03 06:23:21 ajacoutot Exp $
d13 1
a13 1
REVISION =	33
@


1.105
log
@Have sparc use -fPIE by default.

from brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.104 2015/05/21 05:37:50 ajacoutot Exp $
d13 1
a13 1
REVISION =	32
@


1.104
log
@Backport commit from upstream LLVM: r236179
Propagate a terrible hack to the sparc target feature handling code
by erasing the soft-float target feature if the rest of the front
end added it because of defaults or the soft float option.

from brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.103 2015/05/19 05:33:38 ajacoutot Exp $
d13 1
a13 1
REVISION =	31
@


1.103
log
@Backport commits from upstream LLVM.

r237580
Add support for the Sparc implementation-defined "ASR" registers.

r237581
Sparc: Add the "alternate address space" load/store instructions.

- Adds support for the asm syntax, which has an immediate integer
  "ASI" (address space identifier) appearing after an address, before
  a comma.

- Adds the various-width load, store, and swap in alternate address
  space instructions. (ldsba, ldsha, lduba, lduha, lda, stba, stha,
  sta, swapa)

r237582
Sparc: Support PSR, TBR, WIM read/write instructions

from brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.102 2015/05/11 23:21:51 ajacoutot Exp $
d13 1
a13 1
REVISION =	30
@


1.102
log
@Backport commits from upstream LLVM.

r236042
Sparc: Add alternate aliases for conditional branch instructions.

r236107
Sparc: Prefer reg+reg address encoding when only one register used.

r236137
Make Sparc assembler accept parenthesized constant expressions.

from brad (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.101 2015/04/09 22:25:02 sthen Exp $
d13 1
a13 1
REVISION =	29
@


1.101
log
@Backport commit from upstream Clang/LLVM, from Brad (maintainer).

r211785
Implement the -fuse-ld= option.

This commit implements the -fuse-ld= option, so that the user
can specify -fuse-ld=bfd to use ld.bfd.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.100 2015/02/11 00:29:05 brad Exp $
d13 1
a13 1
REVISION =	28
@


1.100
log
@r228507
Avoid integer overflows around realloc calls resulting in potential
heap. Problem identified by Guido Vranken.

r225819
Use the integrated assembler as default on PowerPC
r225957
Use the integrated assembler by default on SPARC.
r225958
Use the integrated assembler by default on 32-bit PowerPC and SPARC.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.99 2015/01/22 12:29:36 brad Exp $
d13 1
a13 1
REVISION =	27
@


1.99
log
@r202719
Don't emit a blank line when running llvm-config --system-libs.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.98 2015/01/03 00:54:12 brad Exp $
d13 1
a13 1
REVISION =	26
@


1.98
log
@Contrary to pascal@@'s disbelief there does seem to be an issue with PIE. Have
the build disable PIE on PowerPC as a workaround for the time being until it
can be determined what the issue is and fixed properly.

Workarounded provided by pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.97 2014/12/30 22:41:09 brad Exp $
d13 1
a13 1
REVISION =	25
@


1.97
log
@r223708
[PowerPC] Don't use a non-allocatable register to implement the 'cc' alias
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.96 2014/12/30 22:25:47 brad Exp $
d13 1
a13 1
REVISION =	24
d45 3
d49 1
a49 1
CONFIGURE_ARGS +=	-DCMAKE_EXE_LINKER_FLAGS=-Wl,--relax
@


1.96
log
@r223328
[PowerPC] 'cc' should be an alias only to 'cr0'
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.95 2014/12/30 05:23:32 brad Exp $
d13 1
a13 1
REVISION =	23
@


1.95
log
@r213890
Use the same .eh_frame encoding for 32bit PPC as on i386.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.94 2014/12/28 00:30:17 brad Exp $
d13 1
a13 1
REVISION =	22
@


1.94
log
@r203699
Allow exclamation and tilde to be parsed as a part of the ppc asm operand.

r209821
[PPC] Use alias symbols in address computation.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.93 2014/12/16 21:10:31 brad Exp $
d13 1
a13 1
REVISION =	21
@


1.93
log
@r221170
Implement vaarg lowering for ppc32. Lowering of scalars and
aggregates is supported. Complex numbers are not.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.92 2014/12/12 21:51:39 brad Exp $
d13 1
a13 1
REVISION =	20
@


1.92
log
@r223171
PR21302. Vectorize only bottom-tested loops.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.91 2014/11/15 03:26:40 brad Exp $
d13 1
a13 1
REVISION =	19
@


1.91
log
@r221709
Totally forget deallocated SDNodes in SDDbgInfo.

What would happen before that commit is that the SDDbgValues associated with
a deallocated SDNode would be marked Invalidated, but SDDbgInfo would keep
a map entry keyed by the SDNode pointer pointing to this list of invalidated
SDDbgNodes. As the memory gets reused, the list might get wrongly associated
with another new SDNode. As the SDDbgValues are cloned when they are transfered,
this can lead to an exponential number of SDDbgValues being produced during
DAGCombine like in http://llvm.org/bugs/show_bug.cgi?id=20893

Note that the previous behavior wasn't really buggy as the invalidation made
sure that the SDDbgValues won't be used. This commit can be considered a
memory optimization and as such is really hard to validate in a unit-test.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.90 2014/11/07 10:40:05 ajacoutot Exp $
d13 1
a13 1
REVISION =	18
@


1.90
log
@No need for default CMAKE_BUILD_TYPE.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.89 2014/10/28 17:52:05 brad Exp $
d13 1
a13 1
REVISION =	17
@


1.89
log
@Remove the .quad assembler workaround for i386 now that the external
assembler has been fixed. The integrated assembler already handled
this properly but the workaround didn't take that into consideration.

ok daniel@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.88 2014/10/11 20:23:46 brad Exp $
a41 1
			-DCMAKE_BUILD_TYPE:String=Release \
@


1.88
log
@take maintainer.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.87 2014/09/18 20:19:27 brad Exp $
d13 1
a13 1
REVISION =	16
@


1.87
log
@r208965
Sparc: disable printing on longer "brX,pt" aliases

r208966
Sparc: disable printing of jmp/call aliases (C++ does it)

r217801
Fix a lot of confusion around inserting nops on empty functions.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.86 2014/09/15 19:24:16 brad Exp $
d13 1
a13 1
REVISION =	15
d22 2
@


1.86
log
@r217410
Set trunc store action to Expand for all X86 targets.

When compiling without SSE2, isTruncStoreLegal(F64, F32) would return Legal, whereas
with SSE2 it would return Expand. And since the Target doesn't seem to actually
handle a truncstore for double -> float, it would just output a store of a full
double in the space for a float hence overwriting other bits on the stack.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.85 2014/09/12 12:39:47 brad Exp $
d13 1
a13 1
REVISION =	14
@


1.85
log
@r205331
Debug info: fix a crash when emitting IndirectFieldDecls, which were previously
not handled at all.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.84 2014/09/11 17:59:51 brad Exp $
d13 1
a13 1
REVISION =	13
@


1.84
log
@r215238 / r217611

Provide implementations of getNoopForMachoTarget for PowerPC / SPARC.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.83 2014/09/11 17:54:13 brad Exp $
d13 1
a13 1
REVISION =	12
@


1.83
log
@r213427
[PowerPC] 32-bit ELF PIC support

r213899
Don't use 128bit functions on PPC32.

This adds initial support for PPC32 ELF PIC (Position Independent Code; the
-fPIC variety), thus rectifying a long-standing deficiency in the PowerPC
backend.

r213960
[PowerPC] Support TLS on PPC32/ELF
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.82 2014/08/29 14:28:32 brad Exp $
d13 1
a13 1
REVISION =	11
@


1.82
log
@- Remove a local PowerPC patch we don't need.
- A fix for the SPARC float handling. Adding the missing & to the field allows
  the backend feature flag to be passed back which it was not without it.
- Add some patches to enable the integrated assembler on PowerPC / SPARC.
  I left these out before as I thought because Clang was not obeying this
  setting and had its own similar bits they were not necessary but turns
  out the backend has some code that does obey this setting.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.81 2014/08/14 01:08:09 brad Exp $
d13 1
a13 1
REVISION =	10
@


1.81
log
@r211435
Legalizer: Add support for splitting insert_subvectors.

We handle this by spilling the whole thing to the stack and doing the
insertion as a store.

PR19492. This happens in real code because the vectorizer creates v2i128 when AVX is
enabled.

ok matthew@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.80 2014/07/26 09:27:29 pascal Exp $
d13 1
a13 1
REVISION =	9
@


1.80
log
@Fix detection of arc4random.

ok brad@@ sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.79 2014/07/16 22:16:54 brad Exp $
d13 1
a13 1
REVISION =	8
@


1.79
log
@Bring in some commits from upstream..

r213105
Use the integrated assembler by default on OpenBSD/sparc

r212838
Handle SPARC float command line parameters for SPARCv9.

ok matthew@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.78 2014/07/11 01:05:24 brad Exp $
d13 1
a13 1
REVISION =	7
@


1.78
log
@Sync up the SPARC backend up to commit r203424.

ok matthew@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.77 2014/07/10 22:46:37 brad Exp $
d13 1
a13 1
REVISION =	6
@


1.77
log
@Bring in fixes from 3.4.1 / 3.4.2 that do not already exist in the
3.5 snapshot (which around 60% of them did)..

r203025, r203050, r203054, r203281, r203581, r203719, r203818, r204155, r204304,
r205067, r205630, r205738, r207990, r208501.

ok matthew@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.76 2014/07/10 19:26:48 brad Exp $
d13 1
a13 1
REVISION =	5
@


1.76
log
@r211624
Use appropriate default PIE settings for OpenBSD.

ok matthew@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.75 2014/06/13 22:29:40 brad Exp $
d13 1
a13 1
REVISION =	4
@


1.75
log
@Some fixes from uptream..

- Use dwarf-2 by default on OpenBSD and FreeBSD.
- Make VSELECT selection terminate in cases where the condition type has
  to be split and the result type widened.
  (fixes an OOM crash with the vectorizer on i386 if not utilizing SSE2
   or newer)
- The last step of _mm_cvtps_pi16 should use _mm_packs_pi32, which is a
  function that reads two __m64 values and packs four 32-bit values into
  four 16-bit values.

Fix profiling..

- Alias the command line parameter -p to -pg.

From Bitrig

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.74 2014/05/29 00:23:36 brad Exp $
d13 1
a13 1
REVISION =	3
@


1.74
log
@r209479
Don't reduce the stack protector level given -fstack-protector.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.73 2014/05/17 11:41:15 brad Exp $
d13 1
a13 1
REVISION =	2
@


1.73
log
@- Switch to stack protector strong by default
- Fix the --param ssp-buffer-size= support

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.72 2014/04/19 19:56:21 brad Exp $
d13 1
a13 1
REVISION =	1
@


1.72
log
@Disable the terminfo support which is used to determine if a terminal
has colours support, but the added dependency seems to cause issues
when linking the LLVM libraries as is. Probably an issue with the
build infrastructure but we don't care about colours.

Requeted by jsg@@

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.71 2014/04/18 09:30:48 brad Exp $
d13 1
a13 1
REVISION =	0
@


1.71
log
@Update to LLVM 3.5 (trunk) snapshot just before switching to an unconditional
C++11 codebase.

This brings in a number of improvements over 3.4 including..
X86 assembler with 16-bit support
Much improved SPARC backend
stack protector strong support

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.70 2013/12/16 20:34:46 brad Exp $
d13 1
d26 1
a26 1
WANTLIB =	c curses m pthread stdc++ z
d38 1
@


1.70
log
@lit wants a copy of bash around for the test framework.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.69 2013/12/07 10:30:39 brad Exp $
d11 2
a12 4
LLVM_V =	3.3
REVISION =	3
DISTNAME =	llvm-${LLVM_V}.src
PKGNAME =	llvm-${LLVM_V}
d14 2
a15 1
MASTER_SITES =	http://llvm.org/releases/${LLVM_V}/
d17 1
a17 3
DISTFILES =	${DISTNAME}${EXTRACT_SUFX} cfe-${LLVM_V}.src${EXTRACT_SUFX}

SHARED_LIBS =	clang		0.0 # 3.2
d25 1
a25 3
WANTLIB =	c m pthread stdc++ z

WRKDIST =	${WRKDIR}/llvm-${LLVM_V}.src
d33 1
d39 1
a39 2
			-DCMAKE_DISABLE_FIND_PACKAGE_LibXml2:Bool=True \
			-DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD:String=R600
a50 3
post-extract:
	@@mv ${WRKDIR}/cfe-${LLVM_V}.src ${WRKDIST}/tools/clang

d72 2
@


1.69
log
@- Fix the test target since the switch from GNU autoconf/make to CMake
- Add the scan-build man page
- Correct the capitalization of Clang in DESCR

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.68 2013/12/02 22:14:29 brad Exp $
d35 2
a36 1
TEST_DEPENDS = devel/dejagnu
@


1.68
log
@- Remove MAKE_FLAGS variables as they were only relevant for the GNU autoconf/make
  build infrastructure
- Remove the CMake patch as sebastia@@ says it did not actually work and should be
  removed
- Some frontend driver tweaks for the external assembler handling for 32-bit mode
  (-m32) on amd64, powerpc handling and bring the ABI determination bits in line
  with the other OS's to use the getGnuCompatibleMipsABIName function

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.67 2013/11/25 14:16:22 sthen Exp $
d12 1
a12 1
REVISION =	2
a37 2
TEST_FLAGS =	RUNTESTFLAGS=

d50 2
d76 2
@


1.67
log
@kill VMEM_WARNING
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.66 2013/10/31 21:12:13 sthen Exp $
d12 1
a12 1
REVISION =	1
a36 4

MAKE_FLAGS =	OPTIMIZE_OPTION="${CFLAGS}" \
		VERBOSE=Yes \
		INSTALL="install -c"
@


1.66
log
@bump REVISION for any ports using route messages. regen some distinfos and
remove unnecessary USE_GROFFs while there.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.65 2013/08/06 23:33:44 jsg Exp $
a36 2

VMEM_WARNING =	Yes
@


1.65
log
@enable the R600 target
ok sthen@@ brad@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.64 2013/06/28 11:14:38 naddy Exp $
d12 1
a12 1
REVISION =	0
@


1.64
log
@this profits a lot from parallel building under dpb
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.63 2013/06/21 22:09:12 brad Exp $
d12 1
d50 2
a51 1
			-DCMAKE_DISABLE_FIND_PACKAGE_LibXml2:Bool=True
@


1.63
log
@Update to LLVM 3.3.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.62 2013/05/02 15:41:57 sebastia Exp $
d7 1
@


1.62
log
@Allow upcoming libobjc2 to find LLVM-Config.cmake in its configure stage.

Fix from and OK zhuk@@
OK dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.61 2013/03/30 12:10:40 sthen Exp $
d10 1
a10 1
LLVM_V =	3.2
a12 1
REVISION =	3
d16 1
a16 1
DISTFILES =	${DISTNAME}${EXTRACT_SUFX} clang-${LLVM_V}.src${EXTRACT_SUFX}
d26 1
a26 1
WANTLIB =	c m pthread stdc++
d56 1
a56 1
SUBST_VARS +=		CLANG_INCLUDE_PATH
d59 1
a59 1
	@@mv ${WRKDIR}/clang-${LLVM_V}.src ${WRKDIST}/tools/clang
@


1.61
log
@Pull in r175057 from upstream LLVM, via FreeBSD, found by Wada Hiroyuki.

X86: Disable generation of rep;movsl when %esi is used as a base pointer.
This happens when there is both stack realignment and a dynamic alloca in the
function. If we overwrite %esi (rep;movsl uses fixed registers) we'll lose the
base pointer and the next register spill will write into oblivion.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.60 2013/03/11 10:50:11 espie Exp $
d13 1
a13 1
REVISION =	2
@


1.60
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.59 2013/01/08 10:14:13 brad Exp $
d13 1
a13 1
REVISION =	1
@


1.59
log
@Add some initial bits for mips64 to pass down the proper flags
to the assembler and linker. Still work in progress.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.58 2013/01/08 09:53:46 brad Exp $
a25 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM =Yes
PERMIT_DISTFILES_FTP =	Yes
d34 1
a34 1
REGRESS_DEPENDS = devel/dejagnu
d43 1
a43 1
REGRESS_FLAGS =	RUNTESTFLAGS=
@


1.58
log
@- Remove USE_LIBTOOL and explicit CONFIGURE_STYLE as the CMake
module does that for us
- Shuffle some of the Makefile bits around

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.57 2013/01/04 01:10:30 brad Exp $
d13 1
a13 1
REVISION =	0
@


1.57
log
@Silence some warnings and allow passing down some feature flags to the linker.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.56 2012/12/23 20:49:29 brad Exp $
d6 1
a6 1
SHARED_LIBS +=  clang                  0.0 # 3.2
d15 5
a23 7
VMEM_WARNING =	Yes

ONLY_FOR_ARCHS = ${LLVM_ARCHS}
#
# there is some chance of building on other GCC4 arch, but is known to be
# broken on alpha/sparc.

a31 3
MASTER_SITES =	http://llvm.org/releases/${LLVM_V}/

DISTFILES =	${DISTNAME}${EXTRACT_SUFX} clang-${LLVM_V}.src${EXTRACT_SUFX}
d40 2
a48 3
USE_LIBTOOL =		Yes

CONFIGURE_STYLE =	cmake
@


1.56
log
@Update to LLVM 3.2 and switces to __guard_local for stack protector support.

Initial work from landry@@ with some fixes and further tweaking from pascal@@ and brad@@

ok sthen@@ landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.55 2012/10/16 18:22:30 jasper Exp $
d13 1
@


1.55
log
@- drop the 'svn' suffix from llvm-config --version output.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.54 2012/09/30 09:16:36 sthen Exp $
d6 1
a6 1
SHARED_LIBS +=  libclang                  0.0 # 3.0
d10 1
a10 1
LLVM_V =	3.1
a12 1
REVISION =	9
a37 3
post-extract:
	@@mv ${WRKDIR}/clang-${LLVM_V}.src ${WRKDIST}/tools/clang

d42 1
d56 7
a62 1
			-DCMAKE_BUILD_TYPE:String=Release
d67 3
d75 2
a76 5
	cd ${WRKSRC}/docs/CommandGuide && for i in *.pod; do \
	pod2man --release=CVS --center="LLVM Command Guide" \
	    $$i man/man1/$${i%.pod}.1; \
	done
	pod2man --release=CVS --center="LLVM Command Guide" \
d78 1
a78 1
	    ${WRKSRC}/docs/CommandGuide/man/man1/clang.1
d87 1
a87 1
	${INSTALL_DATA} ${WRKSRC}/docs/CommandGuide/man/man1/* \
@


1.54
log
@don't .include <bsd.port.arch.mk> just to get definitions from arch-defines
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.53 2012/09/05 23:19:24 sthen Exp $
d13 1
a13 1
REVISION =	8
@


1.53
log
@fix RTTI building since moving to CMake - problem reported & fix tested
by Tony Sidaway, thanks!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.52 2012/08/31 16:21:20 pascal Exp $
a20 1
.include <bsd.port.arch.mk>
@


1.52
log
@Disable PIE for now in clang until someone is masochistic enough to figure
out how to best handle enabling it by default.  Manually speficying -fpie
-Wl,-pie will still work, of course.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.51 2012/08/29 00:45:47 sthen Exp $
d13 1
a13 1
REVISION =	7
a55 1
MAKE_ENV =		REQUIRES_RTTI=1
d59 1
@


1.51
log
@Re-sync CLang with the OBSD_LIB_SPEC now used in base (-lc for libs was
removed again). From Brad.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.50 2012/08/21 17:51:53 pascal Exp $
d13 1
a13 1
REVISION =	6
@


1.50
log
@Mimic the new gcc -pthread semantics.  From Brad.

looks good to matthew@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.49 2012/08/20 08:12:47 dcoppa Exp $
d13 1
a13 1
REVISION =	5
@


1.49
log
@Remove '-lpthread'->'-pthread' hacks
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.48 2012/08/08 09:35:24 sthen Exp $
d13 1
a13 1
REVISION =	4
@


1.48
log
@Sync with r161481 from upstream, "Revert part of r161175 which was wrong
for OpenBSD's PowerPC target". Problem pointed out by landry@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.47 2012/08/06 22:35:26 sthen Exp $
d13 1
a13 1
REVISION =	3
@


1.47
log
@Add several CLang patches from upstream via Brad.

- Only provide /usr/include in the default C header search path.
- OpenBSD does not support TLS.
- Provide target support for powerpc, arm, mips64, mips64el and sparc.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.46 2012/08/04 14:47:52 pascal Exp $
d13 1
a13 1
REVISION =	2
@


1.46
log
@Make stack smashing protection work with our native libc routines, and enable
it by default.

ok jsg@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.45 2012/07/08 18:36:12 sthen Exp $
d13 1
a13 1
REVISION =	1
@


1.45
log
@use LLVM_ARCHS to populate ONLY_FOR_ARCHS, better to have this in a
central place.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.44 2012/06/14 09:32:00 dcoppa Exp $
d13 1
a13 1
REVISION =	0
@


1.44
log
@Fix libpthread linking (use '-pthread' instead of '-lpthread') for
cmake-based ports that use "CHECK_LIBRARY_EXISTS(pthread ...)".

Fix libpthread linking for devel/llvm too (additional care was
needed).

No fallout in a bulk build: thanks landry!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.43 2012/05/26 09:14:34 jasper Exp $
d20 5
a24 2
ONLY_FOR_ARCHS = amd64 i386 powerpc sparc64
# some chance of building on other GCC4 arch, but is known to be
@


1.43
log
@- let g-c-a use the clang module to get the correct includes path
- add a reminder commennt in llvm/Makefile

discussed with and ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.42 2012/05/25 09:05:49 sthen Exp $
d13 1
a13 1

@


1.42
log
@Update to LLVM 3.1.
Thanks Brad for pointing out a few problems with my original diff.
@
text
@d1 4
a4 1
# $OpenBSD: Makefile,v 1.41 2012/05/05 19:24:01 dcoppa Exp $
@


1.41
log
@Fix CMake check for pthread_mutex_lock: use check_library_exists()
function instead of the buggy check_symbol_exists().

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.40 2012/04/23 23:11:01 sthen Exp $
d7 3
a9 3
LLVM_V =	3.0
REVISION =	2
DISTNAME =	llvm-${LLVM_V}
d31 1
a31 1
DISTFILES =	${DISTNAME}${EXTRACT_SUFX} clang-${LLVM_V}${EXTRACT_SUFX}
a59 1
	@@perl -pi -e s,-lpthread,-pthread,g ${WRKSRC}/configure
@


1.40
log
@Update Clang to use _REENTRANT instead of _POSIX_THREADS when using the
-pthread flag. From Brad.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.39 2012/04/11 13:05:45 sthen Exp $
d8 1
a8 1
REVISION =	1
@


1.39
log
@set ONLY_FOR_ARCHS to try and build only on arch where packages currently exist.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.38 2012/03/29 13:38:30 sthen Exp $
d8 1
a8 1
REVISION =	0
@


1.38
log
@Change SEPARATE_BUILD=(concurrent|simple) to Yes; bsd.port.mk doesn't
make a distinction between these.  ok aja@@ dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.37 2012/01/19 08:41:13 sthen Exp $
d17 3
a19 2
ONLY_FOR_ARCHS = ${GCC4_ARCHS}
NOT_FOR_ARCHS =	sparc # uses too much memory
@


1.37
log
@NOT_FOR_ARCHS=sparc, this uses too much memory, as found by phessler
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2011/12/15 08:39:51 sthen Exp $
d47 1
a47 1
SEPARATE_BUILD =	simple
@


1.36
log
@Remove unnecessary patch to ignore -Wbounded, it was included upstream
elsewhere in the file. Reported by Amit Kulkarni.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2011/12/14 22:58:23 sthen Exp $
d18 1
@


1.35
log
@update to LLVM/CLang 3.0, thanks sebastia@@ for testing.

- switch to cmake build
- add profiling support from jsg@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2011/09/16 09:24:52 espie Exp $
d8 1
@


1.34
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2011/06/30 19:57:14 jasper Exp $
d3 1
a3 1
COMMENT =	Low Level Virtual Machine (LLVM) compiler infrastructure
d5 3
a7 1
LLVM_V =	2.9
a8 1
REVISION =	3
d16 1
a16 2
ONLY_FOR_ARCHS =${GCC4_ARCHS}
BROKEN-sparc64 =not yet working on sparc64
d28 2
a29 1
DISTFILES= ${DISTNAME}.tgz clang-${LLVM_V}.tgz
d32 1
a32 3
	@@mv ${WRKDIR}/clang-${LLVM_V} ${WRKDIST}/tools/clang

MODULES =	lang/python
d34 2
a35 7
# graphviz can be optionally used to draw graphs, but adds heavy build and
# run dependencies, and this feature is often not needed. lie to autoconf
# so we can build consistent packages without pulling in a stack of gnome
# libraries; people wanting to use this can pkg_add graphviz.
CONFIGURE_ENV =	ac_cv_path_DOT=${LOCALBASE}/bin/dot \
		ac_cv_path_DOTTY=${LOCALBASE}/bin/dotty \
		ac_cv_path_GV="echo gv"
d37 1
a37 1
REGRESS_DEPENDS=devel/dejagnu
a45 1
USE_GMAKE =		Yes
a46 1
USE_GROFF =		Yes
d49 3
a51 7
# also supports cmake
CONFIGURE_STYLE =	gnu
CONFIGURE_ARGS =	--enable-bindings=no \
			--enable-libffi=no \
			--enable-optimized

MODGNU_CONFIG_GUESS_DIRS =  ${WRKSRC}/autoconf
d54 1
a54 1
SUBST_VARS +=	CLANG_INCLUDE_PATH
d59 10
a68 1
	@@ln -s ${MODPY_BIN} ${WRKDIR}/bin/python
d71 1
a71 3
	@@${INSTALL_DATA_DIR} ${PREFIX}/share/llvm
	@@${INSTALL_DATA_DIR} ${WRKINST}/${MODPY_SITEPKG}
	@@${INSTALL_SCRIPT} ${WRKSRC}/tools/clang/tools/scan-build/ccc-analyzer \
d74 1
a74 1
	@@${INSTALL_DATA} ${WRKSRC}/tools/clang/tools/scan-build/sorttable.js \
d77 2
@


1.33
log
@- update scan-build link in MESSAGE

from tim van der molen
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2011/06/08 17:40:08 jasper Exp $
d7 1
a7 1
REVISION =	2
@


1.32
log
@bump after default python version switch
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2011/05/03 15:03:03 chl Exp $
d7 1
a7 1
REVISION =	1
@


1.31
log
@No need to "make depend" anymore to build kernel.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2011/04/09 21:43:39 jsg Exp $
d7 1
a7 1
REVISION =	0
@


1.30
log
@update to 2.9
ok sthen@@ tested by matthew@@ jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2011/01/13 00:15:50 jeremy Exp $
d7 1
@


1.29
log
@Bump llvm version to 2.8.

OK @@sthen
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2010/11/15 19:46:00 espie Exp $
d5 1
a5 1
LLVM_V =	2.8
d23 1
a23 1
WANTLIB =	c elf m pthread stdc++
a32 2

LIB_DEPENDS =	devel/libelf
@


1.28
log
@move depends to new style
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2010/10/18 17:47:54 espie Exp $
d5 1
a5 1
LLVM_V =	2.7
a6 1
REVISION =	4
d65 3
@


1.27
log
@USE_GROFF=Yes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2010/09/28 07:38:24 sthen Exp $
d35 1
a35 1
LIB_DEPENDS =	::devel/libelf
d45 1
a45 1
REGRESS_DEPENDS=::devel/dejagnu
d56 1
a56 1
USE_GROFF =	Yes
@


1.26
log
@- enable RTTI, requested by jeremy@@ and suggested in LLVM packager notes

- add a comment referring to packager notes

- garbage-collect symlink which is no longer necessary and inclusion
of bsd.own.mk that was previously used to check the version of
the system compiler

tested by jeremy@@ and myself
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2010/08/30 22:09:45 jasper Exp $
d56 1
@


1.25
log
@bumps
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2010/07/31 11:04:48 sthen Exp $
d7 1
a7 1
REVISION =	3
d11 1
d56 1
a65 2
.include <bsd.own.mk>

a71 1
	@@ln -s ${TRUEPREFIX}/libexec/clang-cc ${PREFIX}/bin
@


1.24
log
@Doesn't build on sparc64 yet; set BROKEN-sparc64.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2010/07/21 22:19:01 sthen Exp $
d7 1
a7 1
REVISION =	2
@


1.23
log
@remove ports-tree-gcc4 workarounds, use REVISION, etc. ok jsg@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2010/07/09 08:45:11 naddy Exp $
d15 1
@


1.22
log
@bump after i386/hppa/powerpc gcc3->gcc4 switch
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2010/06/12 12:15:08 sthen Exp $
d7 1
a7 1
PKGNAME =	${DISTNAME}p1
d14 1
a14 4
# has built ok on these, at least at one point
ONLY_FOR_ARCHS =i386 amd64 powerpc hppa
# didn't work when tested
NOT_FOR_ARCHS =	sparc64
d22 1
a22 1
WANTLIB =	c m pthread
d31 1
a31 3
MODULES =	gcc4 lang/python
MODGCC4_LANGS =	c c++
MODGCC4_ARCHES =*
d33 1
a33 1
LIB_DEPENDS =	elf::devel/libelf
d55 1
a55 1
# also supports cmake, but requires v2.6.1
a64 4
.if ${COMPILER_VERSION} == "gcc3"
PATCH_LIST +=		patch-* gcc3-*
.endif

a68 7
.if ${COMPILER_VERSION:L} == "gcc3"
	@@perl -pi -e 's,-L/usr/lib/gcc-lib/,-L${LOCALBASE}/lib/gcc/,;' \
	    -e 's,  "/4.2.1,  "/4.2.4,;' \
	    ${WRKSRC}/tools/clang/lib/Driver/Tools.cpp
	@@perl -pi -e 's,/usr/include/g\+\+,${LOCALBASE}/include/c++/4.2.4,' \
	    ${WRKSRC}/tools/clang/lib/Frontend/InitHeaderSearch.cpp
.endif
@


1.21
log
@Adjust LLVM/CLang to work with GCC4 in base, while still working
with ports GCC4 for arch which haven't switched yet.

With/ok jsg@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2010/04/29 16:37:09 jsg Exp $
d7 1
a7 1
PKGNAME =	${DISTNAME}p0
@


1.20
log
@Update to LLVM/Clang 2.7
ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2009/11/18 00:49:09 sthen Exp $
d7 1
d68 6
d78 7
@


1.19
log
@- fix dependencies following libstdc++ bump from 4.2.4p3 to 4.2.4v0
- bump relevant PKGNAMEs
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2009/11/02 22:53:27 jsg Exp $
d5 1
a5 1
LLVM_V =	2.6
a6 1
PKGNAME =	${DISTNAME}p0
a25 2
#llvm+clang repackaged from SVN.
#MASTER_SITES =	http://spacehopper.org/mirrors/
a26 1
#MASTER_SITES = ${MASTER_SITE_FREEBSD_LOCAL:=brooks/}
d28 1
a28 1
DISTFILES= ${DISTNAME}.tar.gz clang-${LLVM_V}.tar.gz
d69 1
a69 1
	@@${SUBST_CMD} ${WRKSRC}/tools/clang/utils/scan-build
a71 2
# XXX googletest doesn't build

d76 6
a81 4
	@@${INSTALL_SCRIPT} ${WRKSRC}/tools/clang/utils/ccc-analyzer \
	    ${WRKSRC}/tools/clang/utils/scan-build ${PREFIX}/bin
	@@${INSTALL_DATA} ${WRKSRC}/tools/clang/utils/sorttable.js ${PREFIX}/share/llvm
	@@${INSTALL_DATA} ${WRKSRC}/tools/clang/utils/scanview.css ${PREFIX}/share/llvm
@


1.18
log
@update to 2.6
ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2009/08/16 09:54:28 jsg Exp $
d7 1
@


1.17
log
@Ignore bounded attribute and kprintf format for now, to reduce the number
of warnings we don't care about.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2009/08/09 20:16:41 jsg Exp $
d5 1
a5 1
LLVM_V =	2.6pre20090808
a6 2
PKGNAME =	${DISTNAME}p1
EXTRACT_SUFX =	.tar.bz2
d27 2
a28 2
MASTER_SITES =	http://spacehopper.org/mirrors/
#MASTER_SITES =	http://llvm.org/releases/${LLVM_V}/
d31 5
d78 1
@


1.16
log
@Enable release/optimised build and fix PLIST.
ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2009/08/09 11:26:03 sthen Exp $
d7 1
a7 1
PKGNAME =	${DISTNAME}p0
@


1.15
log
@Update to a newer snapshot, requested by jsg@@. Fixes building autoconf
projects, upstream rolled in the OpenBSD backend with proper target-specific
definitions etc.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2009/06/29 13:42:54 sthen Exp $
d7 1
d62 2
a63 1
			--enable-libffi=no
@


1.14
log
@set VMEM_WARNING; pointed out by jsg@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2009/06/25 15:25:13 sthen Exp $
d5 1
a5 1
LLVM_V =	2.6pre20090621
a7 1
PKGNAME =	${DISTNAME}p1
d38 7
a44 2
BUILD_DEPENDS =	::math/graphviz
RUN_DEPENDS =	::math/graphviz
a70 1
# XXX symlink to workaround problem finding the correct clang binary path
a72 1
	@@ln -s ${TRUEPREFIX}/libexec/clang-cc ${PREFIX}/bin
@


1.13
log
@- add OpenBSD config; from jsg@@.
- install a symlink as a workaround to a bug identifying the path to clang-cc.

commit approved by naddy.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2009/06/24 20:23:12 sthen Exp $
d14 1
@


1.12
log
@disable libffi; autoconf picks it up, and the build fails if it's there.
bump not necessary.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2009/06/22 00:19:01 sthen Exp $
d8 1
a8 1
PKGNAME =	${DISTNAME}p0
d66 1
d69 1
@


1.11
log
@fix manual page installation path. fixed in another tree but missed it
when I was updating; also pointed out with a diff by Moritz Grimm, thanks!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2009/06/21 23:13:48 sthen Exp $
d55 2
a56 1
CONFIGURE_ARGS =	--enable-bindings=no
@


1.10
log
@Update to a newer snapshot.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2009/05/17 09:40:53 sthen Exp $
d8 1
@


1.9
log
@bump for gcc4.port.mk LIB_DEPENDS change
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2009/03/15 12:49:35 espie Exp $
d5 2
a6 5
SVN_SNAPDATE =	2009-02-05
SNAPDATE =	${SVN_SNAPDATE:S/-//g}
V =		2.5.snap${SNAPDATE}
DISTNAME =	llvm-$V
PKGNAME =	${DISTNAME}p1
d13 4
a16 1
ONLY_FOR_ARCHS =i386 amd64 powerpc
d26 4
a29 3
# llvm+clang repackaged from SVN.
MASTER_SITES = http://spacehopper.org/mirrors/
#MASTER_SITES =	${MASTER_SITE_FREEBSD_LOCAL:=brooks/}
a30 1
# also supports cmake, but requires v2.6.1
d52 1
a59 2
	@@perl -pi -e 's,#!/usr/bin/env python,#!${MODPY_BIN},' \
	    ${WRKSRC}/tools/clang/tools/ccc/ccc
a71 2
	@@mv ${PREFIX}/bin/ccclib ${WRKINST}/${MODPY_SITEPKG}/ccclib
	@@chown -R ${SHAREOWN}:${SHAREGRP} ${WRKINST}/${MODPY_SITEPKG}/ccclib
@


1.8
log
@A few python deps updates
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2009/02/08 22:55:43 sthen Exp $
d9 1
a9 1
PKGNAME =	${DISTNAME}p0
@


1.7
log
@update to a newer snapshot; made after upstream's freeze in the
runup to 2.5 release towards the end of this month.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2008/11/28 10:38:38 sthen Exp $
d9 1
@


1.6
log
@change to ONLY_FOR_ARCHS suggested by brad@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2008/11/28 10:23:39 sthen Exp $
d5 1
a5 1
SVN_SNAPDATE =	2008-11-05
d7 1
a7 1
V =		2.4.snap${SNAPDATE}
a9 1
PKGNAME =	llvm-${V:S/2.4/2.5/}
d25 3
a27 1
MASTER_SITES =	${MASTER_SITE_FREEBSD_LOCAL:=brooks/}
d29 2
a30 1
MODULES =	gcc4
d36 3
d58 2
d61 3
d66 2
a67 2
	@@${INSTALL_SCRIPT} ${WRKSRC}/tools/clang/utils/ccc \
	    ${PREFIX}/bin
d69 1
a69 4
	    ${PREFIX}/bin
	@@${INSTALL_SCRIPT} ${WRKSRC}/tools/clang/utils/scan-build \
	    ${PREFIX}/bin
	@@${INSTALL_DATA_DIR} ${PREFIX}/share/llvm
d72 2
@


1.5
log
@NOT_FOR_ARCHS=sparc64, llvm hasn't been ported to it yet.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2008/11/13 08:29:13 sthen Exp $
d16 1
a16 2
# not yet ported to these: probably some missing.
NOT_FOR_ARCHS =	sparc64
@


1.4
log
@fix DISTNAME, pointed out by Dongsheng Song
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2008/11/12 15:46:32 sthen Exp $
d15 3
@


1.3
log
@- don't build Hello sample module, it builds a shared library with
an odd filename which doesn't get correctly identified by pkg tools,
and isn't really useful to provide in the package anyway
- cnst@@ points out this is actually a post-2.4 snapshot, change the
PKGNAME accordingly
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2008/11/10 12:17:54 sthen Exp $
d7 1
a7 1
V =		2.5.snap${SNAPDATE}
d10 1
@


1.2
log
@fix doc location, pointed out by ajacoutot
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2008/11/10 11:25:33 sthen Exp $
d7 1
a7 1
V =		2.4.snap${SNAPDATE}
a10 4
PKGNAME =	${DISTNAME}p0

SHARED_LIBS +=	LLVMHello      .0.0           # .0.0

a22 1
#MASTER_SITES =	${HOMEPAGE}releases/$V/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d11 2
a54 2
	@@perl -pi -e 's,\(PROJ_docsdir.*:=\).*$$,\1${PREFIX}/share/doc/llvm,g' \
		${WRKSRC}/Makefile.config.in
@


1.1.1.1
log
@import llvm/clang. not heavily tested yet but there's been a lot
of interest in the static analyser and it basically works, so put
it in now and link to the build later.

Low Level Virtual Machine (LLVM) is:
- A compilation strategy designed to enable effective program
  optimization across the entire lifetime of a program.
- A virtual instruction set.
- A compiler infrastructure.
- LLVM does not imply things that you would expect from a high-level
  virtual machine. It does not require garbage collection or run-time
  code generation.

some parts from chl@@ and the FreeBSD port.
@
text
@@
