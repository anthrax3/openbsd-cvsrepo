head	1.15;
access;
symbols
	OPENBSD_6_1:1.15.0.2
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.13.0.2
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.11.0.4
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.6
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.2
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.15
date	2017.02.10.09.37.43;	author ajacoutot;	state Exp;
branches;
next	1.14;
commitid	fevyFq3hanzfmR8U;

1.14
date	2016.10.07.08.55.30;	author ajacoutot;	state Exp;
branches;
next	1.13;
commitid	9CZYQ6vy0MJoEWYH;

1.13
date	2016.05.14.20.36.36;	author ajacoutot;	state Exp;
branches;
next	1.12;
commitid	Ww8D7gwHYMZAZd2q;

1.12
date	2016.03.05.15.31.41;	author pascal;	state Exp;
branches;
next	1.11;
commitid	Hqi865xYWk2i2UMI;

1.11
date	2015.02.11.00.29.05;	author brad;	state Exp;
branches;
next	1.10;
commitid	G7LA6Os0pseQPeE5;

1.10
date	2014.07.16.22.16.54;	author brad;	state Exp;
branches;
next	1.9;
commitid	R7yaqlRTZ3Ykxf8H;

1.9
date	2014.06.16.23.14.15;	author brad;	state Exp;
branches;
next	1.8;
commitid	UAtbSKfAjnv9Ei0S;

1.8
date	2014.05.22.13.30.23;	author brad;	state Exp;
branches;
next	1.7;

1.7
date	2014.05.17.11.41.15;	author brad;	state Exp;
branches;
next	1.6;

1.6
date	2014.04.18.09.30.48;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2013.06.21.22.09.12;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2012.12.23.20.49.29;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.04.14.47.52;	author pascal;	state Exp;
branches;
next	1.2;

1.2
date	2009.08.09.11.26.03;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2009.06.25.15.25.13;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Update to llvm-4.0.0rc2.
- survived a bulk on i386 and amd64

from Brad (maintainer)
@
text
@$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.14 2016/10/07 08:55:30 ajacoutot Exp $
--- tools/clang/lib/Driver/ToolChains.h.orig	Sat Jan  7 00:35:17 2017
+++ tools/clang/lib/Driver/ToolChains.h	Sat Jan  7 01:01:27 2017
@@@@ -755,6 +755,13 @@@@ class LLVM_LIBRARY_VISIBILITY OpenBSD : public Generic
   bool IsObjCNonFragileABIDefault() const override { return true; }
   bool isPIEDefault() const override { return true; }
 
+  CXXStdlibType GetCXXStdlibType(const llvm::opt::ArgList &Args) const override;
+  void AddClangCXXStdlibIncludeArgs(
+      const llvm::opt::ArgList &DriverArgs,
+      llvm::opt::ArgStringList &CC1Args) const override;
+  void AddCXXStdlibLibArgs(const llvm::opt::ArgList &Args,
+                           llvm::opt::ArgStringList &CmdArgs) const override;
+
   unsigned GetDefaultStackProtectorLevel(bool KernelOrKext) const override {
     return 2;
   }
@


1.14
log
@Update to LLVM 3.9.0.
Been through bulks on amd64 / i386 by sthen@@ and naddy@@ respectively.

from Brad (maintainer)
@
text
@d1 4
a4 4
$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.13 2016/05/14 20:36:36 ajacoutot Exp $
--- tools/clang/lib/Driver/ToolChains.h.orig	Sat Aug 13 16:43:56 2016
+++ tools/clang/lib/Driver/ToolChains.h	Sat Aug 27 00:02:43 2016
@@@@ -715,6 +715,13 @@@@ class LLVM_LIBRARY_VISIBILITY OpenBSD : public Generic
@


1.13
log
@Update to llvm-3.8.0.

from Brad (maintainer)
@
text
@d1 4
a4 4
$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.12 2016/03/05 15:31:41 pascal Exp $
--- tools/clang/lib/Driver/ToolChains.h.orig	Tue Feb 16 14:56:48 2016
+++ tools/clang/lib/Driver/ToolChains.h	Fri Mar 25 21:50:14 2016
@@@@ -676,6 +676,13 @@@@ class LLVM_LIBRARY_VISIBILITY OpenBSD : public Generic
@


1.12
log
@Update to LLVM 3.7.1.  This version is modified to use C++ includes from
ports GCC and link to libestdc++.

Currently, this still breaks mail/mozilla-thunderbird, which will be taken care
of shortly.

feedback/testing from jsg landry mmcc semarie aja naddy (hope I didn't forget
anyone)

ok landry robert
@
text
@d1 4
a4 4
$OpenBSD$
--- tools/clang/lib/Driver/ToolChains.h.orig	Mon Jul 27 22:42:22 2015
+++ tools/clang/lib/Driver/ToolChains.h	Fri Sep 11 12:53:22 2015
@@@@ -569,6 +569,13 @@@@ class LLVM_LIBRARY_VISIBILITY OpenBSD : public Generic
@


1.11
log
@r228507
Avoid integer overflows around realloc calls resulting in potential
heap. Problem identified by Guido Vranken.

r225819
Use the integrated assembler as default on PowerPC
r225957
Use the integrated assembler by default on SPARC.
r225958
Use the integrated assembler by default on 32-bit PowerPC and SPARC.
@
text
@d1 6
a6 12
$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.10 2014/07/16 22:16:54 brad Exp $

r209432
Use stack protector strong by default on OpenBSD

r225958
Use the integrated assembler by default on 32-bit PowerPC and SPARC.

--- tools/clang/lib/Driver/ToolChains.h.orig	Sun Mar  2 22:03:41 2014
+++ tools/clang/lib/Driver/ToolChains.h	Mon Feb  2 11:05:30 2015
@@@@ -538,7 +538,7 @@@@ class LLVM_LIBRARY_VISIBILITY OpenBSD : public Generic
   virtual bool isPIEDefault() const { return true; }
d8 9
a16 3
   virtual unsigned GetDefaultStackProtectorLevel(bool KernelOrKext) const {
-    return 1;
+    return 2;
a17 27
 
 protected:
@@@@ -582,12 +582,6 @@@@ class LLVM_LIBRARY_VISIBILITY FreeBSD : public Generic
   virtual void
   AddClangCXXStdlibIncludeArgs(const llvm::opt::ArgList &DriverArgs,
                                llvm::opt::ArgStringList &CC1Args) const;
-  virtual bool IsIntegratedAssemblerDefault() const {
-    if (getTriple().getArch() == llvm::Triple::ppc ||
-        getTriple().getArch() == llvm::Triple::ppc64)
-      return true;
-    return Generic_ELF::IsIntegratedAssemblerDefault();
-  }
 
   virtual bool UseSjLjExceptions() const;
   virtual bool isPIEDefault() const;
@@@@ -611,11 +605,6 @@@@ class LLVM_LIBRARY_VISIBILITY NetBSD : public Generic_
                                llvm::opt::ArgStringList &CC1Args) const;
   virtual bool IsUnwindTablesDefault() const {
     return true;
-  }
-  virtual bool IsIntegratedAssemblerDefault() const {
-    if (getTriple().getArch() == llvm::Triple::ppc)
-      return true;
-    return Generic_ELF::IsIntegratedAssemblerDefault();
   }
 
 protected:
@


1.10
log
@Bring in some commits from upstream..

r213105
Use the integrated assembler by default on OpenBSD/sparc

r212838
Handle SPARC float command line parameters for SPARCv9.

ok matthew@@
@
text
@d1 1
a1 1
$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.9 2014/06/16 23:14:15 brad Exp $
d6 2
a7 5
r211075
Use the integrated assembler by default on OpenBSD/powerpc

r213105
Use the integrated assembler by default on OpenBSD/sparc
d10 2
a11 2
+++ tools/clang/lib/Driver/ToolChains.h	Fri Jul 11 22:45:01 2014
@@@@ -538,7 +538,15 @@@@ class LLVM_LIBRARY_VISIBILITY OpenBSD : public Generic
d17 25
a41 8
+  }
+
+  virtual bool IsIntegratedAssemblerDefault() const {
+    if (getTriple().getArch() == llvm::Triple::ppc ||
+        getTriple().getArch() == llvm::Triple::sparc ||
+        getTriple().getArch() == llvm::Triple::sparcv9)
+      return true;
+    return Generic_ELF::IsIntegratedAssemblerDefault();
@


1.9
log
@Add SVN commit revision.
@
text
@d1 1
a1 1
$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.8 2014/05/22 13:30:23 brad Exp $
d9 3
d13 2
a14 2
+++ tools/clang/lib/Driver/ToolChains.h	Fri Apr 18 17:14:52 2014
@@@@ -538,7 +538,13 @@@@ class LLVM_LIBRARY_VISIBILITY OpenBSD : public Generic
d23 3
a25 1
+    if (getTriple().getArch() == llvm::Triple::ppc)
@


1.8
log
@Add SVN commit revision.
@
text
@d1 1
a1 1
$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.7 2014/05/17 11:41:15 brad Exp $
d5 3
@


1.7
log
@- Switch to stack protector strong by default
- Fix the --param ssp-buffer-size= support

ok sthen@@
@
text
@d1 5
a5 1
$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.6 2014/04/18 09:30:48 brad Exp $
@


1.6
log
@Update to LLVM 3.5 (trunk) snapshot just before switching to an unconditional
C++11 codebase.

This brings in a number of improvements over 3.4 including..
X86 assembler with 16-bit support
Much improved SPARC backend
stack protector strong support

ok sthen@@
@
text
@d1 5
a5 6
$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.5 2013/06/21 22:09:12 brad Exp $
--- tools/clang/lib/Driver/ToolChains.h.orig	Sun Feb 16 19:19:58 2014
+++ tools/clang/lib/Driver/ToolChains.h	Sun Feb 16 19:28:35 2014
@@@@ -541,6 +541,12 @@@@ class LLVM_LIBRARY_VISIBILITY OpenBSD : public Generic
     return 1;
   }
d7 5
d16 2
a17 2
+  }
+
a18 2
   virtual Tool *buildAssembler() const;
   virtual Tool *buildLinker() const;
@


1.5
log
@Update to LLVM 3.3.

ok sthen@@
@
text
@d1 6
a6 4
$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.4 2012/12/23 20:49:29 brad Exp $
--- tools/clang/lib/Driver/ToolChains.h.orig	Mon Apr 29 21:21:43 2013
+++ tools/clang/lib/Driver/ToolChains.h	Tue Jun  4 23:59:36 2013
@@@@ -427,6 +427,11 @@@@ class LLVM_LIBRARY_VISIBILITY OpenBSD : public Generic
d8 5
a12 3
   virtual bool IsMathErrnoDefault() const { return false; }
   virtual bool IsObjCNonFragileABIDefault() const { return true; }
+  virtual bool isPIEDefault() const { return true; }
a13 4
+  virtual unsigned GetDefaultStackProtectorLevel(bool KernelOrKext) const {
+    return 1;
+  }
 
d16 1
@


1.4
log
@Update to LLVM 3.2 and switces to __guard_local for stack protector support.

Initial work from landry@@ with some fixes and further tweaking from pascal@@ and brad@@

ok sthen@@ landry@@
@
text
@d1 4
a4 4
$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.3 2012/08/04 14:47:52 pascal Exp $
--- tools/clang/lib/Driver/ToolChains.h.orig	Wed Nov 21 09:33:40 2012
+++ tools/clang/lib/Driver/ToolChains.h	Mon Dec 10 21:27:25 2012
@@@@ -437,6 +437,10 @@@@ class LLVM_LIBRARY_VISIBILITY OpenBSD : public Generic
d6 4
a9 2
   virtual Tool &SelectTool(const Compilation &C, const JobAction &JA,
                            const ActionList &Inputs) const;
a10 1
+    // Default to -fstack-protector on OpenBSD
a12 1
 };
d14 2
a15 1
 class LLVM_LIBRARY_VISIBILITY Bitrig : public Generic_ELF {
@


1.3
log
@Make stack smashing protection work with our native libc routines, and enable
it by default.

ok jsg@@
@
text
@d1 4
a4 4
$OpenBSD$
--- tools/clang/lib/Driver/ToolChains.h.orig	Sat Jul 28 12:56:00 2012
+++ tools/clang/lib/Driver/ToolChains.h	Sat Jul 28 12:57:23 2012
@@@@ -471,6 +471,10 @@@@ class LLVM_LIBRARY_VISIBILITY OpenBSD : public Generic
d14 1
a14 1
 class LLVM_LIBRARY_VISIBILITY FreeBSD : public Generic_ELF {
@


1.2
log
@Update to a newer snapshot, requested by jsg@@. Fixes building autoconf
projects, upstream rolled in the OpenBSD backend with proper target-specific
definitions etc.
@
text
@d1 11
a11 5
$OpenBSD: patch-tools_clang_lib_Driver_ToolChains_h,v 1.1 2009/06/25 15:25:13 sthen Exp $
--- tools/clang/lib/Driver/ToolChains.h.orig	Tue Jun 23 13:16:32 2009
+++ tools/clang/lib/Driver/ToolChains.h	Tue Jun 23 13:17:32 2009
@@@@ -107,6 +107,13 @@@@ class VISIBILITY_HIDDEN Darwin_GCC : public Generic_GC
   virtual const char *GetDefaultRelocationModel() const { return "pic"; }
d14 1
a14 10
+class VISIBILITY_HIDDEN OpenBSD : public Generic_GCC {
+public:
+  OpenBSD(const HostInfo &Host, const llvm::Triple& Triple);
+
+  virtual Tool &SelectTool(const Compilation &C, const JobAction &JA) const;
+};
+
 class VISIBILITY_HIDDEN FreeBSD : public Generic_GCC {
 public:
   FreeBSD(const HostInfo &Host, const llvm::Triple& Triple, bool Lib32);
@


1.1
log
@- add OpenBSD config; from jsg@@.
- install a symlink as a workaround to a bug identifying the path to clang-cc.

commit approved by naddy.
@
text
@d1 1
a1 1
$OpenBSD$
@

