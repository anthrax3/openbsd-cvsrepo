head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2017.09.14.06.10.11;	author ajacoutot;	state Exp;
branches;
next	;
commitid	oGkwqxVk1n5fpbUA;


desc
@@


1.1
log
@A bug fix for sparc64.
Fix a logic error in DwarfExpression::addMachineReg()
This fixes PR34323 and thus splitting undescribable registers into
smaller, describable sub-registers.

from Brad (maintainer)
@
text
@$OpenBSD$

Fix a logic error in DwarfExpression::addMachineReg()

This fixes PR34323 and thus splitting undescribable registers into
smaller, describable sub-registers.

Index: lib/CodeGen/AsmPrinter/DwarfExpression.cpp
--- lib/CodeGen/AsmPrinter/DwarfExpression.cpp.orig
+++ lib/CodeGen/AsmPrinter/DwarfExpression.cpp
@@@@ -131,13 +131,12 @@@@ bool DwarfExpression::addMachineReg(const TargetRegist
 
     // Intersection between the bits we already emitted and the bits
     // covered by this subregister.
-    SmallBitVector Intersection(RegSize, false);
-    Intersection.set(Offset, Offset + Size);
-    Intersection ^= Coverage;
+    SmallBitVector CurSubReg(RegSize, false);
+    CurSubReg.set(Offset, Offset + Size);
 
     // If this sub-register has a DWARF number and we haven't covered
     // its range, emit a DWARF piece for it.
-    if (Reg >= 0 && Intersection.any()) {
+    if (Reg >= 0 && CurSubReg.test(Coverage)) {
       // Emit a piece for any gap in the coverage.
       if (Offset > CurPos)
         DwarfRegs.push_back({-1, Offset - CurPos, nullptr});
@
