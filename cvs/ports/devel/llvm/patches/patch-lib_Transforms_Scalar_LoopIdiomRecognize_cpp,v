head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.1.0.2
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.09.01.06.40.28;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	Z3UHKMH3qAZXhBfH;

1.1
date	2017.02.26.13.34.23;	author ajacoutot;	state Exp;
branches;
next	;
commitid	Zo4YCYjY6me9WYbn;


desc
@@


1.2
log
@Update to llvm-5.0.0rc4.

Tested on amd64, i386, sparc64
from Brad (maintainer)
@
text
@$OpenBSD: patch-lib_Transforms_Scalar_LoopIdiomRecognize_cpp,v 1.1 2017/02/26 13:34:23 ajacoutot Exp $

Disable loop idiom recognition for _libc_memset and _libc_memcpy.  These are
the internal names we use in libc for memset and memcpy and having the
compiler optimize them as calls to memset and memcpy will lead to infinite
recursion.

Index: lib/Transforms/Scalar/LoopIdiomRecognize.cpp
--- lib/Transforms/Scalar/LoopIdiomRecognize.cpp.orig
+++ lib/Transforms/Scalar/LoopIdiomRecognize.cpp
@@@@ -244,6 +244,8 @@@@ bool LoopIdiomRecognize::runOnLoop(Loop *L) {
   StringRef Name = L->getHeader()->getParent()->getName();
   if (Name == "memset" || Name == "memcpy")
     return false;
+  if (Name == "_libc_memset" || Name == "_libc_memcpy")
+    return false;
 
   // Determine if code size heuristics need to be applied.
   ApplyCodeSizeHeuristics =
@


1.1
log
@Bring in from base:
Disable loop idiom recognition for _libc_memset and _libc_memcpy.  These are
the internal names we use in libc for memset and memcpy and having the
compiler optimize them as calls to memset and memcpy will lead to infinite
recursion.

from Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
d8 4
a11 3
--- lib/Transforms/Scalar/LoopIdiomRecognize.cpp.orig	Sat Feb 25 12:12:05 2017
+++ lib/Transforms/Scalar/LoopIdiomRecognize.cpp	Sat Feb 25 13:03:56 2017
@@@@ -231,6 +231,8 @@@@ bool LoopIdiomRecognize::runOnLoop(Loop *L) {
@

