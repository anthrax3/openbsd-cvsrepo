head	1.3;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2017.07.28.10.58.23;	author sthen;	state Exp;
branches;
next	1.2;
commitid	wGayAPER4kU2bePV;

1.2
date	2017.03.14.17.29.45;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	XTiylXnMOG4h8Oxu;

1.1
date	2017.02.10.09.37.43;	author ajacoutot;	state Exp;
branches;
next	;
commitid	fevyFq3hanzfmR8U;


desc
@@


1.3
log
@regen patch, no actual change
@
text
@$OpenBSD: patch-lib_Target_AArch64_AArch64ISelLowering_cpp,v 1.2 2017/03/14 17:29:45 ajacoutot Exp $

Disable the Load Stack Guard for OpenBSD on AArch64.  We don't use it
on any other platform and it causes a segfault in combination with our
IR Stack Guard.

Index: lib/Target/AArch64/AArch64ISelLowering.cpp
--- lib/Target/AArch64/AArch64ISelLowering.cpp.orig
+++ lib/Target/AArch64/AArch64ISelLowering.cpp
@@@@ -10484,7 +10484,7 @@@@ void AArch64TargetLowering::ReplaceNodeResults(
 }
 
 bool AArch64TargetLowering::useLoadStackGuardNode() const {
-  if (!Subtarget->isTargetAndroid())
+  if (!Subtarget->isTargetAndroid() && !Subtarget->isTargetOpenBSD())
     return true;
   return TargetLowering::useLoadStackGuardNode();
 }
@


1.2
log
@Update to llvm-4.0.0.

from Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_Target_AArch64_AArch64ISelLowering_cpp,v 1.1 2017/02/10 09:37:43 ajacoutot Exp $
d7 4
a10 3
--- lib/Target/AArch64/AArch64ISelLowering.cpp.orig	Thu Mar  2 20:24:31 2017
+++ lib/Target/AArch64/AArch64ISelLowering.cpp	Thu Mar  2 21:34:58 2017
@@@@ -10483,7 +10483,7 @@@@ void AArch64TargetLowering::ReplaceNodeResults(
@


1.1
log
@Update to llvm-4.0.0rc2.
- survived a bulk on i386 and amd64

from Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
d7 3
a9 3
--- lib/Target/AArch64/AArch64ISelLowering.cpp.orig	Wed Feb  8 20:34:21 2017
+++ lib/Target/AArch64/AArch64ISelLowering.cpp	Wed Feb  8 22:07:21 2017
@@@@ -10482,7 +10482,7 @@@@ void AArch64TargetLowering::ReplaceNodeResults(
@

