head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.03.05.15.31.41;	author pascal;	state dead;
branches;
next	1.1;
commitid	Hqi865xYWk2i2UMI;

1.1
date	2014.12.12.21.51.39;	author brad;	state Exp;
branches;
next	;
commitid	17mFjo3L4SBSl4Zg;


desc
@@


1.2
log
@Update to LLVM 3.7.1.  This version is modified to use C++ includes from
ports GCC and link to libestdc++.

Currently, this still breaks mail/mozilla-thunderbird, which will be taken care
of shortly.

feedback/testing from jsg landry mmcc semarie aja naddy (hope I didn't forget
anyone)

ok landry robert
@
text
@$OpenBSD: patch-lib_Transforms_Vectorize_LoopVectorize_cpp,v 1.1 2014/12/12 21:51:39 brad Exp $

r223171
PR21302. Vectorize only bottom-tested loops.

--- lib/Transforms/Vectorize/LoopVectorize.cpp.orig	Thu Dec 11 11:41:59 2014
+++ lib/Transforms/Vectorize/LoopVectorize.cpp	Thu Dec 11 11:45:56 2014
@@@@ -3247,6 +3247,14 @@@@ bool LoopVectorizationLegality::canVectorize() {
   if (!TheLoop->getExitingBlock())
     return false;
 
+  // We only handle bottom-tested loops, i.e. loop in which the condition is
+  // checked at the end of each iteration. With that we can assume that all
+  // instructions in the loop are executed the same number of times.
+  if (TheLoop->getExitingBlock() != TheLoop->getLoopLatch()) {
+    DEBUG(dbgs() << "LV: loop control flow is not understood by vectorizer\n");
+    return false;
+  }
+
   // We need to have a loop header.
   DEBUG(dbgs() << "LV: Found a loop: " <<
         TheLoop->getHeader()->getName() << '\n');
@


1.1
log
@r223171
PR21302. Vectorize only bottom-tested loops.
@
text
@d1 1
a1 1
$OpenBSD$
@

