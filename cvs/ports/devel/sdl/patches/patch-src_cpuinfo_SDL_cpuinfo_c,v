head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.22
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.20
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.18
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.14
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.12
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2012.03.02.09.10.38;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2012.02.17.06.59.46;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to sdl-1.2.15.

From brad, with tweaks by ajacoutot@@ and me.

Tested by many on ports@@
Ok ajacoutot@@
@
text
@$OpenBSD: patch-src_cpuinfo_SDL_cpuinfo_c,v 1.1 2012/02/17 06:59:46 ajacoutot Exp $
--- src/cpuinfo/SDL_cpuinfo.c.orig	Thu Jan 19 01:30:06 2012
+++ src/cpuinfo/SDL_cpuinfo.c	Fri Feb 24 16:08:00 2012
@@@@ -28,6 +28,10 @@@@
 
 #if defined(__MACOSX__) && (defined(__ppc__) || defined(__ppc64__))
 #include <sys/sysctl.h> /* For AltiVec check */
+#elif defined(__OpenBSD__) && defined(__powerpc__)
+#include <sys/param.h>
+#include <sys/sysctl.h> /* For AltiVec check */
+#include <machine/cpu.h>
 #elif SDL_ALTIVEC_BLITTERS && HAVE_SETJMP
 #include <signal.h>
 #include <setjmp.h>
@@@@ -42,7 +46,7 @@@@
 #define CPU_HAS_SSE2	0x00000080
 #define CPU_HAS_ALTIVEC	0x00000100
 
-#if SDL_ALTIVEC_BLITTERS && HAVE_SETJMP && !__MACOSX__
+#if SDL_ALTIVEC_BLITTERS && HAVE_SETJMP && !__MACOSX__ && !__OpenBSD__
 /* This is the brute force way of detecting instruction sets...
    the idea is borrowed from the libmpeg2 library - thanks!
  */
@@@@ -359,8 +363,12 @@@@ static __inline__ int CPU_haveSSE2(void)
 static __inline__ int CPU_haveAltiVec(void)
 {
 	volatile int altivec = 0;
-#if defined(__MACOSX__) && (defined(__ppc__) || defined(__ppc64__))
-	int selectors[2] = { CTL_HW, HW_VECTORUNIT }; 
+#if (defined(__MACOSX__) && (defined(__ppc__) || defined(__ppc64__))) || (defined(__OpenBSD__) && defined(__powerpc__))
+# ifdef __OpenBSD__
+	int selectors[2] = { CTL_MACHDEP, CPU_ALTIVEC };
+# else
+	int selectors[2] = { CTL_HW, HW_VECTORUNIT };
+# endif
 	int hasVectorUnit = 0; 
 	size_t length = sizeof(hasVectorUnit); 
 	int error = sysctl(selectors, 2, &hasVectorUnit, &length, NULL, 0); 
@


1.1
log
@Re-enable altivec.

from Brad, tested by myself
@
text
@d1 3
a3 3
$OpenBSD$
--- src/cpuinfo/SDL_cpuinfo.c.orig	Wed Jan 25 10:22:20 2012
+++ src/cpuinfo/SDL_cpuinfo.c	Wed Jan 25 10:33:59 2012
d6 1
a6 1
 #if defined(__MACOSX__) && defined(__ppc__)
d15 10
a24 1
@@@@ -306,8 +310,12 @@@@ static __inline__ int CPU_haveSSE2(void)
d28 1
a28 1
-#if defined(__MACOSX__) && defined(__ppc__)
d30 1
a30 1
+#if defined(__MACOSX__) && defined(__ppc__) || defined(__OpenBSD__) && defined(__powerpc__)
@

