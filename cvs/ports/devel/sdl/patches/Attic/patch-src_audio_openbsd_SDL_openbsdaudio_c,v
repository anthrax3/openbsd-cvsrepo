head	1.9;
access;
symbols
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.5.0.12
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_TRACKING_SWITCH:1.3;
locks; strict;
comment	@# @;


1.9
date	2007.09.22.01.12.38;	author pvalchev;	state dead;
branches;
next	1.8;

1.8
date	2007.07.20.05.23.41;	author jakemsr;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.19.00.26.34;	author pvalchev;	state Exp;
branches;
next	1.6;

1.6
date	2006.10.18.17.54.33;	author pvalchev;	state dead;
branches;
next	1.5;

1.5
date	2003.12.28.22.26.18;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.28.23.42.27;	author pvalchev;	state dead;
branches;
next	1.3;

1.3
date	2001.07.27.00.04.47;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.03.01.00.15;	author pvalchev;	state dead;
branches;
next	1.1;

1.1
date	2001.06.23.19.05.40;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.9
log
@update to sdl-1.2.12. long due update, possible now since the macppc
X acceleration bug is now gone (thanks for ajacoutot for endless testing
of this issue), diff from brad
@
text
@$OpenBSD: patch-src_audio_openbsd_SDL_openbsdaudio_c,v 1.8 2007/07/20 05:23:41 jakemsr Exp $
--- src/audio/openbsd/SDL_openbsdaudio.c.orig	Sun Jan  4 08:49:15 2004
+++ src/audio/openbsd/SDL_openbsdaudio.c	Sat Jul  7 19:05:13 2007
@@@@ -262,21 +262,21 @@@@ OBSD_Status(_THIS)
 	return;
     }
 
-    fprintf(stderr,"
-[play/record info]
-buffer size	:   %d bytes
-sample rate	:   %i Hz
-channels	:   %i
-precision	:   %i-bit
-encoding	:   0x%x
-seek		:   %i
-sample count	:   %i
-EOF count	:   %i
-paused		:   %s
-error occured	:   %s
-waiting		:   %s
-active		:   %s
-",
+    fprintf(stderr,"\n"
+"[play/record info]\n"
+"buffer size	:   %d bytes\n"
+"sample rate	:   %i Hz\n"
+"channels	:   %i\n"
+"precision	:   %i-bit\n"
+"encoding	:   0x%x\n"
+"seek		:   %i\n"
+"sample count	:   %i\n"
+"EOF count	:   %i\n"
+"paused		:   %s\n"
+"error occured	:   %s\n"
+"waiting		:   %s\n"
+"active		:   %s\n"
+"",
     info.play.buffer_size,
     info.play.sample_rate,
     info.play.channels,
@@@@ -290,19 +290,19 @@@@ active		:   %s
     info.play.waiting ? "yes" : "no",
     info.play.active ? "yes": "no");
 
-    fprintf(stderr,"
-[audio info]
-monitor_gain	:   %i
-hw block size	:   %d bytes
-hi watermark	:   %i
-lo watermark	:   %i
-audio mode	:   %s
-",  
+    fprintf(stderr,"\n"
+"[audio info]\n"
+"monitor_gain	:   %i\n"
+"hw block size	:   %d bytes\n"
+"hi watermark	:   %i\n"
+"lo watermark	:   %i\n"
+"audio mode	:   %s\n"
+"",  
     info.monitor_gain,
     info.blocksize,
     info.hiwat, info.lowat,
     (info.mode == AUMODE_PLAY) ? "PLAY"
-    : (info.mode = AUMODE_RECORD) ? "RECORD"
+    : (info.mode == AUMODE_RECORD) ? "RECORD"
     : (info.mode == AUMODE_PLAY_ALL ? "PLAY_ALL"
     : "?"));
 }
@


1.8
log
@- use the sun audio interface instead of the OpenBSD interface
- sync patches with update-patches
- bump PKGNAME

the sun interface keeps fewer samples in the play buffer, and with
less fluctuation than the OpenBSD interface.  results in better
audio-video synchronization in e.g. ffplay and gnash

go for it -pval
@
text
@d1 1
a1 1
$OpenBSD: patch-src_audio_openbsd_SDL_openbsdaudio_c,v 1.7 2006/10/19 00:26:34 pvalchev Exp $
@


1.7
log
@revert to sdl-1.2.9 for now as this causes some breakage with
at least some macppc scenarios; discovered by ajacoutot
since it's only a few hour window of breakage, be careful reverting
things if you updated during that time
@
text
@d1 3
a3 3
$OpenBSD: patch-src_audio_openbsd_SDL_openbsdaudio_c,v 1.5 2003/12/28 22:26:18 espie Exp $
--- src/audio/openbsd/SDL_openbsdaudio.c.orig	2003-12-28 19:42:30.000000000 +0100
+++ src/audio/openbsd/SDL_openbsdaudio.c	2003-12-28 19:43:45.000000000 +0100
d41 1
a41 1
@@@@ -290,14 +290,14 @@@@ active		:   %s
d64 6
@


1.6
log
@update to sdl-1.2.11
sdl-config --libs is now fixed to pass just -lSDL and the needed deps
get pulled implicitly as is proper
feedback/testing by various and ports@@
XXX stupid cvs botched half of this commit
@
text
@@


1.5
log
@gcc3 doesn't like multi-line literals, and pval already knew it's
unhappy with nasm.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@Update to SDL-1.2.3.  thanks mark for the feedback
@
text
@d1 5
a5 85
$OpenBSD: patch-src_audio_openbsd_SDL_openbsdaudio_c,v 1.3 2001/07/27 00:04:47 pvalchev Exp $
--- src/audio/openbsd/SDL_openbsdaudio.c.orig	Sun Jul 22 20:58:42 2001
+++ src/audio/openbsd/SDL_openbsdaudio.c	Thu Jul 26 17:51:01 2001
@@@@ -312,8 +312,7 @@@@ static int
 OBSD_OpenAudio(_THIS, SDL_AudioSpec *spec)
 {
     char audiodev[64];
-    Uint16 setenc;
-    audio_encoding_t enc;
+    Uint16 format;
     audio_info_t info;
 
     AUDIO_INITINFO(&info);
@@@@ -340,66 +339,58 @@@@ OBSD_OpenAudio(_THIS, SDL_AudioSpec *spe
     }
     
     mixbuf = NULL;
-    setenc = 0;
-
-    for(enc.index = 0; (ioctl(audio_fd, AUDIO_GETENC, &enc)>=0)
-	&& (enc.encoding != setenc); enc.index++)
+    AUDIO_INITINFO(&info);
+    for (format = SDL_FirstAudioFormat(spec->format); 
+    	format; format = SDL_NextAudioFormat())
     {
-	switch(spec->format)
-	{
-	    case AUDIO_U8:	/* 8-bit unsigned linear */
-		setenc = AUDIO_ENCODING_PCM8;
-		break;
-	    case AUDIO_S8:	/* 8-bit signed linear */
-		setenc = AUDIO_ENCODING_SLINEAR;
-		break;
-	    case AUDIO_U16LSB:  /* 16-bit unsigned linear, LSB */
-		setenc = AUDIO_ENCODING_ULINEAR_LE;
-		break;
-	    case AUDIO_U16MSB:  /* 16-bit unsigned linear, MSB */
-		setenc = AUDIO_ENCODING_ULINEAR_BE;
-		break;
-	    case AUDIO_S16LSB:  /* 16-bit signed linear, LSB */
-		setenc = AUDIO_ENCODING_SLINEAR_LE;
-		break;
-	    case AUDIO_S16MSB:  /* 16-bit signed linear, MSB */
-		setenc = AUDIO_ENCODING_SLINEAR_BE;
-		break;
+	switch(format) {
+	case AUDIO_U8:
+	    info.play.encoding = AUDIO_ENCODING_ULINEAR;
+	    info.play.precision = 8;
+	    break;
+	case AUDIO_S8:
+	    info.play.encoding = AUDIO_ENCODING_SLINEAR;
+	    info.play.precision = 8;
+	    break;
+	case AUDIO_S16LSB:
+	    info.play.encoding = AUDIO_ENCODING_SLINEAR_LE;
+	    info.play.precision = 16;
+	    break;
+	case AUDIO_S16MSB:
+	    info.play.encoding = AUDIO_ENCODING_SLINEAR_BE;
+	    info.play.precision = 16;
+	    break;
+	case AUDIO_U16LSB:
+	    info.play.encoding = AUDIO_ENCODING_ULINEAR_LE;
+	    info.play.precision = 16;
+	    break;
+	case AUDIO_U16MSB:
+	    info.play.encoding = AUDIO_ENCODING_ULINEAR_BE;
+	    info.play.precision = 16;
+	    break;
+	default:
+	    continue;
 	}
-#ifdef DEBUG_AUDIO
-	fprintf(stderr,"encoding #%i: \"%s\" %i-bit (0x%x) flags=%i...\n",
-	    enc.index, enc.name, enc.precision, enc.encoding, enc.flags);
-#endif
+	if (ioctl(audio_fd, AUDIO_SETINFO, &info) == 0)
+	    break;
     }
 
-    if(!setenc) {
+    if(!format) {
 	SDL_SetError("No supported encoding for 0x%x", spec->format);
 	return(-1);
d8 36
a43 9
-    /* Set audio encoding */
-    info.play.encoding = enc.encoding;
-    info.play.precision = enc.precision;
-    if((ioctl(audio_fd, AUDIO_SETINFO, &info) < 0)) {
-	SDL_SetError("Couldn't set encoding to 0x%x %i-bit",
-	    enc.encoding, enc.precision);
-	return(-1);
-    }
+    spec->format = format;
d45 19
a63 24
-    /* Set audio channels */
+    AUDIO_INITINFO(&info);
     info.play.channels = spec->channels;
-    if(ioctl(audio_fd, AUDIO_SETINFO, &info) < 0) {
-	info.play.channels = (spec->channels > 1);
-	ioctl(audio_fd, AUDIO_SETINFO, &info);
-    }
-
-    /* Set the sample rate */
+    if (ioctl(audio_fd, AUDIO_SETINFO, &info) == -1)
+    	spec->channels = 1;
+    AUDIO_INITINFO(&info);
     info.play.sample_rate = spec->freq;
-    if(ioctl(audio_fd, AUDIO_SETINFO, &info) < 0) {
-	SDL_SetError("Couldn't set sample rate to %i Hz", spec->freq);
-	return(-1);
-    }
-
+    (void)ioctl(audio_fd, AUDIO_SETINFO, &info);
+    (void)ioctl(audio_fd, AUDIO_GETINFO, &info);
+    spec->freq  = info.play.sample_rate;
     /* Allocate mixing buffer */
     mixlen = spec->size;
     mixbuf = (Uint8*)SDL_AllocAudioMem(mixlen);
@


1.3
log
@fix audio format selection code for the native audio driver; from espie@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@simplify and remove unneeded stuff
@
text
@d1 11
a11 6
$OpenBSD: patch-src_audio_openbsd_SDL_openbsdaudio_c,v 1.1 2001/06/23 19:05:40 pvalchev Exp $
--- src/audio/openbsd/SDL_openbsdaudio.c.orig	Fri Jun 22 09:54:25 2001
+++ src/audio/openbsd/SDL_openbsdaudio.c	Fri Jun 22 09:54:42 2001
@@@@ -131,7 +131,7 @@@@ static SDL_AudioDevice
     return this;
 }
d13 109
a121 5
-AudioBootStrap OBSD_bootstrap = {
+AudioBootStrap AUDIO_bootstrap = {
 	OBSD_DRIVER_NAME, "Native OpenBSD audio",
 	Audio_Available, Audio_CreateDevice
 };
@


1.1
log
@Upgrade to SDL-1.2.1
Various improvements, including OpenBSD native audio.

* Fix audio device path.  This has caused audio not to work without the
esd flavor before, many people (including me) had link to /dev/dsp because
of linux emulation programs and haven't noticed the problem.
* Fix OSS audio.
* Sync libtool patches
* Properly include @@SYSTEM_LIBS@@ in sdl-config to ensure proper linking
of SDL applications.
@
text
@d1 1
a1 1
$OpenBSD$
@

