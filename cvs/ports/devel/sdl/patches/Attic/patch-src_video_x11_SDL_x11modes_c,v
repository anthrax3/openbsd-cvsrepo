head	1.11;
access;
symbols
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.14
	OPENBSD_5_0:1.10.0.12
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.10
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.8
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.6
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.4
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.2
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.11
date	2012.03.02.09.10.38;	author dcoppa;	state dead;
branches;
next	1.10;

1.10
date	2008.09.16.20.43.10;	author naddy;	state Exp;
branches;
next	1.9;

1.9
date	2007.09.22.01.12.38;	author pvalchev;	state dead;
branches;
next	1.8;

1.8
date	2007.07.20.05.23.41;	author jakemsr;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.19.00.26.34;	author pvalchev;	state Exp;
branches;
next	1.6;

1.6
date	2006.10.18.17.54.33;	author pvalchev;	state dead;
branches;
next	1.5;

1.5
date	2005.05.11.17.26.15;	author pvalchev;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.25.02.34.21;	author pvalchev;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.29.05.41.37;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.22.00.16.53;	author wcobb;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.02.02.57.16;	author wcobb;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Update to sdl-1.2.15.

From brad, with tweaks by ajacoutot@@ and me.

Tested by many on ports@@
Ok ajacoutot@@
@
text
@$OpenBSD: patch-src_video_x11_SDL_x11modes_c,v 1.10 2008/09/16 20:43:10 naddy Exp $
--- src/video/x11/SDL_x11modes.c.orig	Mon Dec 31 05:48:13 2007
+++ src/video/x11/SDL_x11modes.c	Mon Sep 15 23:36:02 2008
@@@@ -52,8 +52,25 @@@@ static int cmpmodelist(const void *va, const void *vb)
 #if SDL_VIDEO_DRIVER_X11_VIDMODE
 Bool SDL_NAME(XF86VidModeGetModeInfo)(Display *dpy, int scr, SDL_NAME(XF86VidModeModeInfo) *info)
 {
-    SDL_NAME(XF86VidModeModeLine) *l = (SDL_NAME(XF86VidModeModeLine)*)((char*)info + sizeof info->dotclock);
-    return SDL_NAME(XF86VidModeGetModeLine)(dpy, scr, (int*)&info->dotclock, l);
+    Bool retval;
+    int dotclock;
+    SDL_NAME(XF86VidModeModeLine) l;
+    SDL_memset(&l, 0, sizeof(l));
+    retval = SDL_NAME(XF86VidModeGetModeLine)(dpy, scr, &dotclock, &l);
+    info->dotclock = dotclock;
+    info->hdisplay = l.hdisplay;
+    info->hsyncstart = l.hsyncstart;
+    info->hsyncend = l.hsyncend;
+    info->htotal = l.htotal;
+    info->hskew = l.hskew;
+    info->vdisplay = l.vdisplay;
+    info->vsyncstart = l.vsyncstart;
+    info->vsyncend = l.vsyncend;
+    info->vtotal = l.vtotal;
+    info->flags = l.flags;
+    info->privsize = l.privsize;
+    info->private = l.private;
+    return retval;
 }
 #endif /* SDL_VIDEO_DRIVER_X11_VIDMODE */
 
@


1.10
log
@Fix alignment error in SDL display output from sparc64 to i386.
From upstream SVN.  ok pvalchev@@, brad@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.9
log
@update to sdl-1.2.12. long due update, possible now since the macppc
X acceleration bug is now gone (thanks for ajacoutot for endless testing
of this issue), diff from brad
@
text
@d1 5
a5 11
$OpenBSD: patch-src_video_x11_SDL_x11modes_c,v 1.8 2007/07/20 05:23:41 jakemsr Exp $
--- src/video/x11/SDL_x11modes.c.orig	Fri Nov 12 13:25:42 2004
+++ src/video/x11/SDL_x11modes.c	Sat Jul  7 18:07:10 2007
@@@@ -44,6 +44,8 @@@@ static char rcsid =
 #endif 
 
 #define MAX(a, b)        (a > b ? a : b)
+#define V_INTERLACE      0x010
+#define V_DBLSCAN        0x020
 
 #ifdef XFREE86_VM
d7 22
a28 1
@@@@ -92,6 +94,82 @@@@ static int cmpmodes(const void *va, const void *vb)
d30 1
a30 154
 #endif
 
+#ifdef XFREE86_VM
+static int get_vidmode_filter(SDL_NAME(XF86VidModeModeInfo) **modes, int nmodes, char **bitmap)
+{
+    int i, result = 0;
+    int use_all_modes, use_specific_mode;
+    const char *variable;
+    char *temp;
+
+    if (!nmodes)
+        return 0;
+
+    temp = (char *)malloc((nmodes)*sizeof(char));
+    if (!temp)
+        return 0;
+
+    for ( i = 0; i < nmodes; ++i )
+        temp[i] = 0;
+
+    variable = getenv("SDL_VIDEO_X11_USE_ALL_MODES");
+    use_all_modes = variable ? atoi(variable) : 0;
+    variable = getenv("SDL_VIDEO_X11_USE_SPECIFIC_MODE");
+    use_specific_mode = variable ? atoi(variable) : 0;
+
+    qsort(modes, nmodes, sizeof *modes, cmpmodes);
+
+    if ( use_all_modes ) {
+        for ( i = 0; i < nmodes; ++i )
+            temp[i] = 1;
+        result  = 1;
+/*    } else if ( use_specific_mode ) { ... */
+    } else {
+        int previous_refresh, current_refresh;
+        SDL_NAME(XF86VidModeModeInfo) *previous, *current;
+
+        previous = modes[0];
+        previous_refresh = (int)(previous->dotclock * 1000.0 /
+          (previous->htotal * previous->vtotal));
+        if ( previous->flags & V_INTERLACE ) previous_refresh *= 2;
+        else if ( previous->flags & V_DBLSCAN ) previous_refresh /= 2;
+
+        temp[0] = 1;
+        for ( i = 1; i < nmodes; ++i ) {
+            current = modes[i];
+            current_refresh = (int)(current->dotclock * 1000.0 /
+              (current->htotal * current->vtotal));
+            if ( current->flags & V_INTERLACE ) current_refresh *= 2;
+            else if ( current->flags & V_DBLSCAN ) current_refresh /= 2;
+
+            /* Compare this mode to the previous one */
+            if ( current->hdisplay == previous->hdisplay &&
+                 current->vdisplay == previous->vdisplay ) {
+#ifdef XFREE86_DEBUG
+		printf("Comparing %dx%d at %d Hz and %d Hz\n",
+			current->hdisplay, current->vdisplay,
+			current_refresh, previous_refresh);
+#endif
+                if ( current_refresh > previous_refresh ) {
+                    temp[i-1] = 0;
+                    temp[i]   = 1;
+                }
+                else
+                    temp[i] = 0;
+            }
+            else
+                temp[i] = 1;
+
+            previous = current;
+            previous_refresh = current_refresh;
+        }
+        result = 1;
+    }
+    *bitmap = temp;
+    return result;
+}
+#endif
+
 static void get_real_resolution(_THIS, int* w, int* h);
 
 static void set_best_resolution(_THIS, int width, int height)
@@@@ -103,9 +181,11 @@@@ static void set_best_resolution(_THIS, int width, int 
         int i;
         int best_width = 0, best_height = 0;
         int nmodes;
+	char *bitmap;
 
         if ( SDL_NAME(XF86VidModeGetModeLine)(SDL_Display, SDL_Screen, &i, &mode) &&
-             SDL_NAME(XF86VidModeGetAllModeLines)(SDL_Display,SDL_Screen,&nmodes,&modes)){
+             SDL_NAME(XF86VidModeGetAllModeLines)(SDL_Display,SDL_Screen,&nmodes,&modes) &&
+	     get_vidmode_filter(modes, nmodes, &bitmap) ){
 #ifdef XFREE86_DEBUG
             printf("Available modes (unsorted):\n");
             for ( i = 0; i < nmodes; ++i ) {
@@@@ -117,14 +197,16 @@@@ static void set_best_resolution(_THIS, int width, int 
 #endif
             for ( i = 0; i < nmodes ; i++ ) {
                 if ( (modes[i]->hdisplay == width) &&
-                     (modes[i]->vdisplay == height) )
+                     (modes[i]->vdisplay == height) &&
+		     (bitmap[i] == 1) )
                     goto match;
             }
             qsort(modes, nmodes, sizeof *modes, cmpmodes);
             for ( i = nmodes-1; i > 0 ; i-- ) {
 		if ( ! best_width ) {
                     if ( (modes[i]->hdisplay >= width) &&
-                         (modes[i]->vdisplay >= height) ) {
+                         (modes[i]->vdisplay >= height) &&
+			 (bitmap[i] == 1) ) {
                         best_width = modes[i]->hdisplay;
                         best_height = modes[i]->vdisplay;
                     }
@@@@ -142,6 +224,7 @@@@ static void set_best_resolution(_THIS, int width, int 
                 SDL_NAME(XF86VidModeSwitchToMode)(SDL_Display, SDL_Screen, modes[i]);
             }
             XFree(modes);
+            if (bitmap) free(bitmap);
         }
     }
 #endif /* XFREE86_VM */
@@@@ -289,6 +372,7 @@@@ int X11_GetVideoModes(_THIS)
     int vm_major, vm_minor;
     int nmodes;
     SDL_NAME(XF86VidModeModeInfo) **modes;
+    char *bitmap = (char*)0;
 #endif
 #ifdef HAVE_XIGXME
     int xme_major, xme_minor;
@@@@ -350,7 +434,8 @@@@ int X11_GetVideoModes(_THIS)
         }
     }
     if ( ! buggy_X11 &&
-         SDL_NAME(XF86VidModeGetAllModeLines)(SDL_Display, SDL_Screen,&nmodes,&modes) ) {
+         SDL_NAME(XF86VidModeGetAllModeLines)(SDL_Display, SDL_Screen,&nmodes,&modes)  &&
+         get_vidmode_filter(modes, nmodes, &bitmap) ) {
 
 #ifdef XFREE86_DEBUG
         printf("Available modes: (sorted)\n");
@@@@ -369,6 +454,9 @@@@ int X11_GetVideoModes(_THIS)
             for ( i=0; i<nmodes; ++i ) {
                 int w, h;
 
+                /* Exclude those vidmodes that have been filtered out */
+                if (!bitmap[i]) continue;
+
                 /* Check to see if we should add the screen size (Xinerama) */
                 w = modes[i]->hdisplay;
                 h = modes[i]->vdisplay;
@@@@ -401,6 +489,7 @@@@ int X11_GetVideoModes(_THIS)
             SDL_modelist[n] = NULL;
         }
         XFree(modes);
+        if (bitmap) free(bitmap);
a31 2
         use_vidmode = vm_major * 100 + vm_minor;
         save_mode(this);
@


1.8
log
@- use the sun audio interface instead of the OpenBSD interface
- sync patches with update-patches
- bump PKGNAME

the sun interface keeps fewer samples in the play buffer, and with
less fluctuation than the OpenBSD interface.  results in better
audio-video synchronization in e.g. ffplay and gnash

go for it -pval
@
text
@d1 1
a1 1
$OpenBSD: patch-src_video_x11_SDL_x11modes_c,v 1.7 2006/10/19 00:26:34 pvalchev Exp $
@


1.7
log
@revert to sdl-1.2.9 for now as this causes some breakage with
at least some macppc scenarios; discovered by ajacoutot
since it's only a few hour window of breakage, be careful reverting
things if you updated during that time
@
text
@d1 3
a3 3
$OpenBSD: patch-src_video_x11_SDL_x11modes_c,v 1.5 2005/05/11 17:26:15 pvalchev Exp $
--- src/video/x11/SDL_x11modes.c.orig	Mon Dec 13 18:54:37 2004
+++ src/video/x11/SDL_x11modes.c	Fri Dec 17 16:36:39 2004
d13 1
a13 1
@@@@ -92,6 +94,82 @@@@ static int cmpmodes(const void *va, cons
d96 1
a96 1
@@@@ -103,9 +181,11 @@@@ static void set_best_resolution(_THIS, i
d109 1
a109 1
@@@@ -117,14 +197,16 @@@@ static void set_best_resolution(_THIS, i
d128 1
a128 1
@@@@ -142,6 +224,7 @@@@ static void set_best_resolution(_THIS, i
@


1.6
log
@update to sdl-1.2.11
sdl-config --libs is now fixed to pass just -lSDL and the needed deps
get pulled implicitly as is proper
feedback/testing by various and ports@@
XXX stupid cvs botched half of this commit
@
text
@@


1.5
log
@update to SDL-1.2.8
@
text
@d1 1
a1 1
$OpenBSD: patch-src_video_x11_SDL_x11modes_c,v 1.4 2004/10/25 02:34:21 pvalchev Exp $
@


1.4
log
@Update to SDL-1.2.7; based on work by jsg@@
@
text
@d1 3
a3 3
$OpenBSD: patch-src_video_x11_SDL_x11modes_c,v 1.3 2003/09/29 05:41:37 pvalchev Exp $
--- src/video/x11/SDL_x11modes.c.orig	Thu Feb 19 04:22:09 2004
+++ src/video/x11/SDL_x11modes.c	Mon Sep 27 12:09:45 2004
d13 1
a13 1
@@@@ -91,6 +93,82 @@@@ static int cmpmodes(const void *va, cons
d96 1
a96 1
@@@@ -102,9 +180,11 @@@@ static void set_best_resolution(_THIS, i
d109 1
a109 1
@@@@ -116,14 +196,16 @@@@ static void set_best_resolution(_THIS, i
d128 1
a128 1
@@@@ -141,6 +223,7 @@@@ static void set_best_resolution(_THIS, i
d136 1
a136 1
@@@@ -288,6 +371,7 @@@@ int X11_GetVideoModes(_THIS)
d144 1
a144 1
@@@@ -349,7 +433,8 @@@@ int X11_GetVideoModes(_THIS)
d154 1
a154 1
@@@@ -368,6 +453,9 @@@@ int X11_GetVideoModes(_THIS)
d164 1
a164 1
@@@@ -400,6 +488,7 @@@@ int X11_GetVideoModes(_THIS)
@


1.3
log
@Update to SDL-1.2.6; mostly from espie, much testing by jolan, thanks!
@
text
@d1 3
a3 3
$OpenBSD: patch-src_video_x11_SDL_x11modes_c,v 1.2 2003/04/22 00:16:53 wcobb Exp $
--- src/video/x11/SDL_x11modes.c.orig	2003-08-30 21:13:12.000000000 +0200
+++ src/video/x11/SDL_x11modes.c	2003-09-21 14:51:18.000000000 +0200
d119 1
a119 1
             for ( i = nmodes-1; i >= 0 ; i-- ) {
@


1.2
log
@Deal with the different modelines of similar resolution introduced by
XFree 4.3 by picking up the modes with the highest refresh rates
(set SDL_VIDEO_X11_USE_ALL_MODES=1 to disable this behavior).
From SDL-current (patch by Stephen Anthony).
ok pvalchev@@, jolan@@
@
text
@d1 3
a3 3
$OpenBSD: patch-src_video_x11_SDL_x11modes_c,v 1.1 2003/03/02 02:57:16 wcobb Exp $
--- src/video/x11/SDL_x11modes.c.orig	Sun Sep 29 21:35:25 2002
+++ src/video/x11/SDL_x11modes.c	Mon Apr 21 20:37:47 2003
d96 1
a96 2
@@@@ -101,10 +179,11 @@@@ static void set_best_resolution(_THIS, i
         SDL_NAME(XF86VidModeModeInfo) **modes;
d98 1
d100 1
a100 1
+        char *bitmap;
a103 1
-            qsort(modes, nmodes, sizeof *modes, cmpmodes);
d105 1
a105 1
+             get_vidmode_filter(modes, nmodes, &bitmap) ) {
d107 1
a107 1
             printf("Available modes:\n");
d109 1
a109 2
@@@@ -113,15 +192,24 @@@@ static void set_best_resolution(_THIS, i
             }
d111 3
a113 2
             for ( i = nmodes-1; i > 0 ; --i ) {
+                if ( (modes[i]->hdisplay == width) &&
d115 2
a116 9
+                     (bitmap[i] == 1) )
+                    goto match;
+            }
+            for ( i = nmodes-1; i > 0 ; --i ) {
                 if ( (modes[i]->hdisplay >= width) &&
-                     (modes[i]->vdisplay >= height) )
+                     (modes[i]->vdisplay >= height) &&
+                     (bitmap[i] == 1) )
                     break;
d118 11
a128 3
+       match:
             if ( (modes[i]->hdisplay != mode.hdisplay) ||
                  (modes[i]->vdisplay != mode.vdisplay) ) {
d136 1
a136 1
@@@@ -269,6 +357,7 @@@@ int X11_GetVideoModes(_THIS)
d144 1
a144 12
@@@@ -304,8 +393,8 @@@@ int X11_GetVideoModes(_THIS)
             fclose(metro_fp);
         }
     }
-#if defined(__alpha__) || defined(__powerpc__)
-    /* The alpha and PPC XFree86 servers are also buggy */
+#if defined(__alpha__) || defined(__powerpc__) || defined(__sparc64__)
+    /* The alpha, sparc64 and PPC XFree86 servers are also buggy */
     buggy_X11 = 1;
 #endif
     /* Enumerate the available fullscreen modes */
@@@@ -330,15 +419,18 @@@@ int X11_GetVideoModes(_THIS)
d149 1
a149 1
+         SDL_NAME(XF86VidModeGetAllModeLines)(SDL_Display, SDL_Screen,&nmodes,&modes) &&
d152 3
a154 4
-        qsort(modes, nmodes, sizeof *modes, cmpmodes);
         SDL_modelist = (SDL_Rect **)malloc((nmodes+2)*sizeof(SDL_Rect *));
         if ( SDL_modelist ) {
             n = 0;
d164 1
a164 1
@@@@ -371,6 +463,7 @@@@ int X11_GetVideoModes(_THIS)
@


1.1
log
@Don't try obtain full-screen modelines on sparc64; ok pvalchev@@
@
text
@d1 144
a144 4
$OpenBSD$
--- src/video/x11/SDL_x11modes.c.orig	Sat Mar  1 16:47:38 2003
+++ src/video/x11/SDL_x11modes.c	Sat Mar  1 16:47:54 2003
@@@@ -304,8 +304,8 @@@@ int X11_GetVideoModes(_THIS)
d155 29
@

