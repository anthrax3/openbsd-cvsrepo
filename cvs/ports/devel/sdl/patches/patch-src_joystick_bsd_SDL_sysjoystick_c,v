head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.22
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.20
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.18
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.14
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.16
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.12
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.10
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.8
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.6
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.4
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.2
	OPENBSD_5_2_BASE:1.11
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.2
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.6.0.6
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.4
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2;
locks; strict;
comment	@# @;


1.11
date	2012.05.16.14.01.19;	author edd;	state Exp;
branches;
next	1.10;

1.10
date	2007.09.22.01.12.38;	author pvalchev;	state dead;
branches;
next	1.9;

1.9
date	2007.07.20.05.23.41;	author jakemsr;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.19.00.26.34;	author pvalchev;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.18.17.54.33;	author pvalchev;	state dead;
branches;
next	1.6;

1.6
date	2005.05.11.17.26.15;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.25.02.34.21;	author pvalchev;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.29.05.41.37;	author pvalchev;	state dead;
branches;
next	1.3;

1.3
date	2002.11.30.11.17.26;	author wcobb;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.14.02.10.29;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.03.03.07.52;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Bump the maximum number of uhid devices SDL can address from 4 to 16. It is
quite easy to exhaust the SDL default of 4.

OK jasper@@
@
text
@$OpenBSD$

It is easy to exhaust uhid devices in this day and age.

--- src/joystick/bsd/SDL_sysjoystick.c.orig	Tue May 15 17:09:10 2012
+++ src/joystick/bsd/SDL_sysjoystick.c	Tue May 15 17:09:29 2012
@@@@ -77,7 +77,7 @@@@
 #include "../SDL_sysjoystick.h"
 #include "../SDL_joystick_c.h"
 
-#define MAX_UHID_JOYS	4
+#define MAX_UHID_JOYS	16
 #define MAX_JOY_JOYS	2
 #define MAX_JOYS	(MAX_UHID_JOYS + MAX_JOY_JOYS)
 
@


1.10
log
@update to sdl-1.2.12. long due update, possible now since the macppc
X acceleration bug is now gone (thanks for ajacoutot for endless testing
of this issue), diff from brad
@
text
@d1 9
a9 6
$OpenBSD: patch-src_joystick_bsd_SDL_sysjoystick_c,v 1.9 2007/07/20 05:23:41 jakemsr Exp $
--- src/joystick/bsd/SDL_sysjoystick.c.orig	Fri Nov 12 13:24:46 2004
+++ src/joystick/bsd/SDL_sysjoystick.c	Sat Jul  7 18:07:10 2007
@@@@ -60,7 +60,7 @@@@ static char rcsid =
 #include <sys/joystick.h>
 #endif
d11 4
a14 4
-#if defined(__NetBSD__) || defined(__OpenBSD__)
+#if defined(__NetBSD__) || (defined(__OpenBSD__) && defined(__i386__))
 #include <machine/joystick.h>
 #endif
a15 9
@@@@ -370,7 +370,7 @@@@ SDL_SYS_JoystickUpdate(SDL_Joystick *joy)
 	int nbutton, naxe = -1;
 	Sint32 v;
 
-#if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__)
+#if defined(__FreeBSD__) || defined(__NetBSD__) || (defined(__OpenBSD__) && defined(__i386__))
 	struct joystick gameport;
 	static int x, y, xmin = 0xffff, ymin = 0xffff, xmax = 0, ymax = 0;
  
@


1.9
log
@- use the sun audio interface instead of the OpenBSD interface
- sync patches with update-patches
- bump PKGNAME

the sun interface keeps fewer samples in the play buffer, and with
less fluctuation than the OpenBSD interface.  results in better
audio-video synchronization in e.g. ffplay and gnash

go for it -pval
@
text
@d1 1
a1 1
$OpenBSD: patch-src_joystick_bsd_SDL_sysjoystick_c,v 1.8 2006/10/19 00:26:34 pvalchev Exp $
@


1.8
log
@revert to sdl-1.2.9 for now as this causes some breakage with
at least some macppc scenarios; discovered by ajacoutot
since it's only a few hour window of breakage, be careful reverting
things if you updated during that time
@
text
@d1 3
a3 3
$OpenBSD: patch-src_joystick_bsd_SDL_sysjoystick_c,v 1.6 2005/05/11 17:26:15 pvalchev Exp $
--- src/joystick/bsd/SDL_sysjoystick.c.orig	Mon Dec 13 18:54:32 2004
+++ src/joystick/bsd/SDL_sysjoystick.c	Fri Dec 17 16:36:39 2004
d13 1
a13 1
@@@@ -370,7 +370,7 @@@@ SDL_SYS_JoystickUpdate(SDL_Joystick *joy
@


1.7
log
@update to sdl-1.2.11
sdl-config --libs is now fixed to pass just -lSDL and the needed deps
get pulled implicitly as is proper
feedback/testing by various and ports@@
XXX stupid cvs botched half of this commit
@
text
@@


1.6
log
@update to SDL-1.2.8
@
text
@d1 1
a1 1
$OpenBSD: patch-src_joystick_bsd_SDL_sysjoystick_c,v 1.5 2004/10/25 02:34:21 pvalchev Exp $
@


1.5
log
@Update to SDL-1.2.7; based on work by jsg@@
@
text
@d1 3
a3 3
$OpenBSD$
--- src/joystick/bsd/SDL_sysjoystick.c.orig	Tue Oct 19 23:52:14 2004
+++ src/joystick/bsd/SDL_sysjoystick.c	Tue Oct 19 23:53:37 2004
d13 1
a13 1
@@@@ -369,7 +369,7 @@@@ SDL_SYS_JoystickUpdate(SDL_Joystick *joy
@


1.4
log
@Update to SDL-1.2.6; mostly from espie, much testing by jolan, thanks!
@
text
@d1 6
a6 5
$OpenBSD: patch-src_joystick_bsd_SDL_sysjoystick_c,v 1.3 2002/11/30 11:17:26 wcobb Exp $
--- src/joystick/bsd/SDL_sysjoystick.c.orig	Fri Nov  1 22:19:59 2002
+++ src/joystick/bsd/SDL_sysjoystick.c	Fri Nov  1 23:13:44 2002
@@@@ -136,17 +136,24 @@@@ SDL_SYS_JoystickInit(void)
 	memset(joydevnames, NULL, sizeof(joydevnames));
d8 4
a11 30
 	for (i = 0; i < MAX_UHID_JOYS; i++) {
+		SDL_Joystick nj;
+
 		sprintf(s, "/dev/uhid%d", i);
-		fd = open(s, O_RDWR);
-		if (fd > 0) {
-			joynames[SDL_numjoysticks++] = strdup(s);
-			close(fd);
+
+		nj.index = SDL_numjoysticks;
+		joynames[nj.index] = strdup(s);
+
+		if (SDL_SYS_JoystickOpen(&nj) == 0) {
+			SDL_SYS_JoystickClose(&nj);
+			SDL_numjoysticks++;
+		} else {
+			free(joynames[nj.index]);
 		}
 	}
 	for (i = 0; i < MAX_JOY_JOYS; i++) {
 		sprintf(s, "/dev/joy%d", i);
-		fd = open(s, O_RDWR);
-		if (fd > 0) {
+		fd = open(s, O_RDONLY);
+		if (fd != -1) {
 			joynames[SDL_numjoysticks++] = strdup(s);
 			close(fd);
 		}
@@@@ -178,7 +185,7 @@@@ SDL_SYS_JoystickOpen(SDL_Joystick *joy)
 	int fd;
d13 3
a15 8
 	fd = open(path, O_RDWR);
-	if (fd < 0) {
+	if (fd == -1) {
 		SDL_SetError("%s: %s", path, strerror(errno));
 		return (-1);
 	}
@@@@ -400,9 +407,9 @@@@ report_alloc(struct report *r, struct re
 	int len;
d17 5
a21 9
 #ifdef USBHID_NEW
-	len = hid_report_size(rd, repinfo[repind].kind, &r->rid);
-#else
 	len = hid_report_size(rd, repinfo[repind].kind, r->rid);
+#else
+	len = hid_report_size(rd, repinfo[repind].kind, &r->rid);
 #endif
 	if (len < 0) {
 		SDL_SetError("Negative HID report size");
@


1.3
log
@Update to SDL-1.2.5.
- sdl-config no longer provides -I${LOCALBASE}/include.
- add an `aa' flavor (ASCII art display).
- GNU make is not needed.
- don't use nasm with gcc 3.
- don't install a SEGV handler.
- prevent the joystick driver from picking up usb keyboards.
ok pvalchev@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@match libusbhid API changes; from aaron
@
text
@d2 23
a24 4
--- src/joystick/bsd/SDL_sysjoystick.c.orig	Sat Mar  9 20:49:25 2002
+++ src/joystick/bsd/SDL_sysjoystick.c	Mon May 13 20:04:44 2002
@@@@ -194,7 +194,7 @@@@ SDL_SYS_JoystickOpen(SDL_Joystick *joy)
 		goto usberr;
d26 11
d38 5
a42 12
-	hdata = hid_start_parse(hw->repdesc, 1 << hid_input);
+	hdata = hid_start_parse(hw->repdesc, 1 << hid_input, rep->rid);
 	if (hdata == NULL) {
 		SDL_SetError("%s: Cannot start HID parser", hw->path);
 		goto usberr;
@@@@ -275,10 +275,10 @@@@ SDL_SYS_JoystickUpdate(SDL_Joystick *joy
 	Sint32 v;
 	
 	rep = &joy->hwdata->inreport;
-	if (read(joy->hwdata->fd, rep->buf->data, rep->size) != rep->size) {
+	if (read(joy->hwdata->fd, rep->buf->ucr_data, rep->size) != rep->size) {
 		return;
d44 1
a44 25
-	hdata = hid_start_parse(joy->hwdata->repdesc, 1 << hid_input);
+	hdata = hid_start_parse(joy->hwdata->repdesc, 1 << hid_input, rep->rid);
 	if (hdata == NULL) {
 		fprintf(stderr, "%s: Cannot start HID parser\n",
 		    joy->hwdata->path);
@@@@ -310,7 +310,7 @@@@ SDL_SYS_JoystickUpdate(SDL_Joystick *joy
 					goto scaleaxe;
 				}
 scaleaxe:
-				v = (Sint32)hid_get_data(rep->buf->data, &hitem);
+				v = (Sint32)hid_get_data(rep->buf->ucr_data, &hitem);
 				if (v != 127) {
 					if (v < 127) {
 						v = -(256 - v);
@@@@ -329,7 +329,7 @@@@ scaleaxe:
 				}
 				break;
 			case HUP_BUTTON:
-				v = (Sint32)hid_get_data(rep->buf->data,
+				v = (Sint32)hid_get_data(rep->buf->ucr_data,
 				    &hitem);
 				if (joy->buttons[nbutton] != v) {
 					SDL_PrivateJoystickButton(joy,
@@@@ -381,7 +381,7 @@@@ report_alloc(struct report *r, struct re
 {
d47 1
d49 5
a53 1
+	len = hid_report_size(rd, repinfo[repind].kind, r->rid);
a55 10
 		return (-1);
@@@@ -389,7 +389,7 @@@@ report_alloc(struct report *r, struct re
 	r->size = len;
 
 	if (r->size > 0) {
-		r->buf = malloc(sizeof(*r->buf) - sizeof(r->buf->data) +
+		r->buf = malloc(sizeof(*r->buf) - sizeof(r->buf->ucr_data) +
 		    r->size);
 		if (r->buf == NULL) {
 			SDL_OutOfMemory();
@


1.1
log
@Sync with USB changes
@
text
@d3 11
a13 2
+++ src/joystick/bsd/SDL_sysjoystick.c	Thu May  2 20:59:56 2002
@@@@ -275,7 +275,7 @@@@ SDL_SYS_JoystickUpdate(SDL_Joystick *joy
d21 5
a25 1
 	hdata = hid_start_parse(joy->hwdata->repdesc, 1 << hid_input);
d44 9
@

