head	1.17;
access;
symbols
	OPENBSD_6_2:1.17.0.22
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.20
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.18
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.14
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.16
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.12
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.10
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.8
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.6
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.4
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.2
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.14
	OPENBSD_5_0:1.16.0.12
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.10
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.8
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.6
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.4
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.2
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.13.0.2
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.12.0.2
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_TRACKING_SWITCH:1.9
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	obecian_2001-Apr-19:1.1.1.1
	obecian:1.1.1;
locks; strict;
comment	@# @;


1.17
date	2012.03.02.09.10.38;	author dcoppa;	state Exp;
branches;
next	1.16;

1.16
date	2009.01.24.10.56.11;	author jakemsr;	state Exp;
branches;
next	1.15;

1.15
date	2008.12.30.02.15.20;	author jakemsr;	state Exp;
branches;
next	1.14;

1.14
date	2008.11.02.14.53.51;	author jakemsr;	state Exp;
branches;
next	1.13;

1.13
date	2008.03.19.13.33.29;	author jakemsr;	state Exp;
branches;
next	1.12;

1.12
date	2007.09.22.01.12.38;	author pvalchev;	state Exp;
branches;
next	1.11;

1.11
date	2007.08.14.15.51.07;	author naddy;	state Exp;
branches;
next	1.10;

1.10
date	2001.12.28.23.42.27;	author pvalchev;	state dead;
branches;
next	1.9;

1.9
date	2001.08.01.21.11.31;	author pvalchev;	state Exp;
branches;
next	1.8;

1.8
date	2001.07.25.07.58.32;	author pvalchev;	state dead;
branches;
next	1.7;

1.7
date	2001.07.20.03.07.07;	author pvalchev;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.06.15.25.21;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.04.20.17.29;	author pvalchev;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.03.01.00.15;	author pvalchev;	state dead;
branches;
next	1.3;

1.3
date	2001.06.23.19.05.37;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.24.05.54.57;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2001.04.19.18.55.40;	author obecian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.04.19.18.55.40;	author obecian;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Update to sdl-1.2.15.

From brad, with tweaks by ajacoutot@@ and me.

Tested by many on ports@@
Ok ajacoutot@@
@
text
@$OpenBSD: patch-src_audio_SDL_audio_c,v 1.16 2009/01/24 10:56:11 jakemsr Exp $
--- src/audio/SDL_audio.c.orig	Thu Jan 19 01:30:06 2012
+++ src/audio/SDL_audio.c	Wed Feb 22 13:41:58 2012
@@@@ -36,11 +36,15 @@@@
 
 /* Available audio drivers */
 static AudioBootStrap *bootstrap[] = {
+
 #if SDL_AUDIO_DRIVER_PULSE
 	&PULSE_bootstrap,
 #endif
 #if SDL_AUDIO_DRIVER_ALSA
 	&ALSA_bootstrap,
+#endif
+#if SDL_AUDIO_DRIVER_SNDIO
+	&SNDIO_bootstrap,
 #endif
 #if SDL_AUDIO_DRIVER_BSD
 	&BSD_AUDIO_bootstrap,
@


1.16
log
@cleanup sndio backend
- rename from "libsndio" to "sndio"
- remove support for "frame tick" synchronization; nothing uses it
- as with many other sndio backends, the audio device block size is the
  buffer-write-size the application wants and there are 2 blocks per
  device buffer
- if SDL will resample, increase the audio block and buffer size by
  the same ratio, so that device latency (or how much *time* the
  application has between write()s to not let the buffer underrun) does
  not change
- allow applications to disable conversions

tested with almost every port that uses this code (exceptions being some
games that require non-free game data) on a device most likely to be
affected by the changes (azalia(4) that only does 44.1 or 48 kHz s16)

unoverriding conversion disabling exposes brokenness in a few other
ports, those will be fixed soon
@
text
@d1 4
a4 4
$OpenBSD: patch-src_audio_SDL_audio_c,v 1.15 2008/12/30 02:15:20 jakemsr Exp $
--- src/audio/SDL_audio.c.orig	Sun Dec 30 20:47:59 2007
+++ src/audio/SDL_audio.c	Thu Jan 22 20:40:14 2009
@@@@ -36,6 +36,9 @@@@
d8 7
d17 1
a17 1
+#endif
a19 10
 #endif
@@@@ -532,7 +535,7 @@@@ int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpe
 			return(-1);
 		}
 		if ( audio->convert.needed ) {
-			audio->convert.len = (int) ( ((double) desired->size) /
+			audio->convert.len = (int) ( ((double) audio->spec.size) /
                                           audio->convert.len_ratio );
 			audio->convert.buf =(Uint8 *)SDL_AllocAudioMem(
 			   audio->convert.len*audio->convert.len_mult);
@


1.15
log
@remove arts and esd backends

from Brad, thanks
@
text
@d1 1
a1 1
$OpenBSD: patch-src_audio_SDL_audio_c,v 1.14 2008/11/02 14:53:51 jakemsr Exp $
d3 1
a3 1
+++ src/audio/SDL_audio.c	Sun Dec 28 00:45:48 2008
d8 2
a9 2
+#if SDL_AUDIO_DRIVER_LIBSNDIO
+	&LIBSNDIO_bootstrap,
d14 1
a14 13
@@@@ -518,8 +521,9 @@@@ int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpe
 
 	/* See if we need to do any conversion */
 	if ( obtained != NULL ) {
-		SDL_memcpy(obtained, &audio->spec, sizeof(audio->spec));
-	} else if ( desired->freq != audio->spec.freq ||
+		SDL_memcpy(obtained, desired, sizeof(audio->spec));
+	}
+	if ( desired->freq != audio->spec.freq ||
                     desired->format != audio->spec.format ||
 	            desired->channels != audio->spec.channels ) {
 		/* Build an audio conversion block */
@@@@ -532,7 +536,7 @@@@ int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpe
@


1.14
log
@add libsndio backend and use it by default.

take maintainership as suggested by current maintainer.

ok pvalchev@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_audio_SDL_audio_c,v 1.13 2008/03/19 13:33:29 jakemsr Exp $
d3 1
a3 1
+++ src/audio/SDL_audio.c	Sun Oct 26 19:32:21 2008
d14 1
a14 31
@@@@ -341,6 +344,7 @@@@ int SDL_AudioInit(const char *driver_name)
 	}
 #endif /* SDL_AUDIO_DRIVER_ESD */
 	if ( audio == NULL ) {
+		char *env_driver = getenv("SDL_AUDIO_DRIVER");
 		if ( driver_name != NULL ) {
 #if 0	/* This will be replaced with a better driver selection API */
 			if ( SDL_strrchr(driver_name, ':') != NULL ) {
@@@@ -357,12 +361,16 @@@@ int SDL_AudioInit(const char *driver_name)
 			}
 		} else {
 			for ( i=0; bootstrap[i]; ++i ) {
-				if ( bootstrap[i]->available() ) {
-					audio = bootstrap[i]->create(idx);
-					if ( audio != NULL ) {
-						break;
-					}
+				if (env_driver != NULL) {
+					if (SDL_strcasecmp(bootstrap[i]->name, env_driver) == 0)
+						audio = bootstrap[i]->create(idx);
+				} else {
+					if (bootstrap[i]->available())
+						audio = bootstrap[i]->create(idx);
 				}
+				if ( audio != NULL ) {
+					break;
+				}
 			}
 		}
 		if ( audio == NULL ) {
@@@@ -518,8 +526,9 @@@@ int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpe
d26 1
a26 1
@@@@ -532,7 +541,7 @@@@ int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpe
@


1.13
log
@- make artsd audio output work by linking with libartsc instead
  of trying to dlopen() it.  also fix a couple bugs in the artsd
  output module: when artsd is "suspended", it only means that
  it it not accessing the soundcard at the moment, not that it
  will not accept data.  fix output latency by setting parameters
  that actually are settable, instead of trying to set read-only(!)
  parameters.

- allow the default audio output method to be chosen with the
  SDL_AUDIO_DRIVER environment variable.  choices are 'arts',
  'esd' and 'audio'.  'audio' selects audio(4) output, and is
  the default if SDL_AUDIO_DRIVER is not set.

ok pvalchev@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_audio_SDL_audio_c,v 1.12 2007/09/22 01:12:38 pvalchev Exp $
d3 12
a14 2
+++ src/audio/SDL_audio.c	Mon Feb 18 01:41:22 2008
@@@@ -341,6 +341,7 @@@@ int SDL_AudioInit(const char *driver_name)
d22 1
a22 1
@@@@ -357,12 +358,16 @@@@ int SDL_AudioInit(const char *driver_name)
d44 1
a44 1
@@@@ -518,8 +523,9 @@@@ int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpe
d56 1
a56 1
@@@@ -532,7 +538,7 @@@@ int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpe
@


1.12
log
@update to sdl-1.2.12. long due update, possible now since the macppc
X acceleration bug is now gone (thanks for ajacoutot for endless testing
of this issue), diff from brad
@
text
@d1 34
a34 4
$OpenBSD: patch-src_audio_SDL_audio_c,v 1.11 2007/08/14 15:51:07 naddy Exp $
--- src/audio/SDL_audio.c.orig	Fri Jul 20 01:52:10 2007
+++ src/audio/SDL_audio.c	Sat Sep  8 21:39:59 2007
@@@@ -518,8 +518,9 @@@@ int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpe
d46 1
a46 1
@@@@ -532,7 +533,7 @@@@ int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpe
@


1.11
log
@various audio fixes; from jakemsr@@
@
text
@d1 4
a4 4
$OpenBSD$
--- src/audio/SDL_audio.c.orig	Fri Sep 17 15:20:10 2004
+++ src/audio/SDL_audio.c	Tue Aug 14 16:41:43 2007
@@@@ -467,8 +467,9 @@@@ int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpe
d8 1
a8 1
-		memcpy(obtained, &audio->spec, sizeof(audio->spec));
d10 1
a10 1
+		memcpy(obtained, desired, sizeof(audio->spec));
d16 1
a16 1
@@@@ -481,7 +482,8 @@@@ int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpe
d20 1
a20 1
-			audio->convert.len = desired->size;
d22 1
a22 1
+                                          audio->convert.len_ratio );
a24 1
 			if ( audio->convert.buf == NULL ) {
@


1.10
log
@Update to SDL-1.2.3.  thanks mark for the feedback
@
text
@d1 25
a25 12
$OpenBSD: patch-src_audio_SDL_audio_c,v 1.9 2001/08/01 21:11:31 pvalchev Exp $
--- src/audio/SDL_audio.c.orig	Sun Jul 22 20:58:42 2001
+++ src/audio/SDL_audio.c	Wed Aug  1 13:37:40 2001
@@@@ -50,7 +50,7 @@@@ static AudioBootStrap *bootstrap[] = {
 #ifdef ALSA_SUPPORT
 	&ALSA_bootstrap,
 #endif
-#if (defined(unix) && !defined(__CYGWIN32__)) && \
+#if (defined(unix) && !defined(__CYGWIN32__) && !defined(__OpenBSD__)) && \
     !defined(OSS_SUPPORT) && !defined(ALSA_SUPPORT)
 	&AUDIO_bootstrap,
 #endif
@


1.9
log
@fix for powerpc -stable.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.8
log
@Update to SDL-1.2.2
Includes OpenBSD fixes and cleanups.
Other changes that concern us:
* Now gets correct keyboard state when starting up on X11
* Improved X11 fullscreen support, works better with KDE
@
text
@d1 4
a4 4
$OpenBSD: patch-src_audio_SDL_audio_c,v 1.7 2001/07/20 03:07:07 pvalchev Exp $
--- src/audio/SDL_audio.c.orig	Fri Jun 15 19:51:42 2001
+++ src/audio/SDL_audio.c	Thu Jul 19 20:38:34 2001
@@@@ -47,7 +47,7 @@@@ static AudioBootStrap *bootstrap[] = {
d8 4
a11 3
-#ifdef __OpenBSD__
+#ifdef OPENBSD_SUPPORT
 	&OBSD_bootstrap,
a12 1
 #if (defined(unix) && !defined(__CYGWIN32__)) && \
@


1.7
log
@When native audio is enabled, define OPENBSD_SUPPORT.  This is simpler,
and makes it easier to know when to initialize the corresponding
structures, never touching them if they're empty.
Fits with SDL code-style, fixes things such as soundless builds.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_audio_SDL_audio_c,v 1.6 2001/07/06 15:25:21 pvalchev Exp $
@


1.6
log
@repair esd audio, thanks espie
@
text
@d1 1
a1 1
$OpenBSD: patch-src_audio_SDL_audio_c,v 1.5 2001/07/04 20:17:29 pvalchev Exp $
d3 1
a3 1
+++ src/audio/SDL_audio.c	Fri Jul  6 08:51:50 2001
d9 1
a9 1
+#if defined(__OpenBSD__) && !defined(OSS_SUPPORT) && !defined(ESD_SUPPORT)
@


1.5
log
@make oss audio work again
@
text
@d1 3
a3 3
$OpenBSD$
--- src/audio/SDL_audio.c.orig	Wed Jul  4 14:05:04 2001
+++ src/audio/SDL_audio.c	Wed Jul  4 14:05:20 2001
d9 1
a9 1
+#if defined(__OpenBSD__) && !defined(OSS_SUPPORT)
@


1.4
log
@simplify and remove unneeded stuff
@
text
@d1 4
a4 4
$OpenBSD: patch-src_audio_SDL_audio_c,v 1.3 2001/06/23 19:05:37 pvalchev Exp $
--- src/audio/SDL_audio.c.orig	Fri Jun 15 19:51:42 2001
+++ src/audio/SDL_audio.c	Fri Jun 22 09:52:25 2001
@@@@ -47,9 +47,6 @@@@ static AudioBootStrap *bootstrap[] = {
d9 3
a11 2
-	&OBSD_bootstrap,
-#endif
a12 2
     !defined(OSS_SUPPORT) && !defined(ALSA_SUPPORT)
 	&AUDIO_bootstrap,
@


1.3
log
@Upgrade to SDL-1.2.1
Various improvements, including OpenBSD native audio.

* Fix audio device path.  This has caused audio not to work without the
esd flavor before, many people (including me) had link to /dev/dsp because
of linux emulation programs and haven't noticed the problem.
* Fix OSS audio.
* Sync libtool patches
* Properly include @@SYSTEM_LIBS@@ in sdl-config to ensure proper linking
of SDL applications.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@- Implement a native audio driver by <vedge2@@vedge.com.ar> as a "sun"
flavor, being the default one (fetching distfile from an external site).
- Isolate esd as a separate flavor from oss -- a combination with either
"sun" or "oss" is possible.
@
text
@d1 13
a13 12
$OpenBSD: patch-src_audio_SDL_audio_c,v 1.1.1.1 2001/04/19 18:55:40 obecian Exp $
--- src/audio/SDL_audio.c.orig	Wed Mar 21 10:19:56 2001
+++ src/audio/SDL_audio.c	Sat May 19 12:01:58 2001
@@@@ -185,7 +185,7 @@@@ int SDL_AudioInit(const char *driver_nam
 	/* Select the proper audio driver */
 	audio = NULL;
 	idx = 0;
-#ifdef unix
+#if defined(unix) || defined (__OpenBSD__)
 	if ( (driver_name == NULL) && (getenv("ESPEAKER") != NULL) ) {
 		/* Ahem, we know that if ESPEAKER is set, user probably wants
 		   to use ESD, but don't start it if it's not already running.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
d3 1
a3 1
+++ src/audio/SDL_audio.c	Fri Mar 30 08:44:02 2001
@


1.1.1.1
log
@sdl-1.2.0 - Simple DirectMedia Layer
@
text
@@
