head	1.4;
access;
symbols
	shadchin_20161002:1.1.1.1 shadchin:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.02.11.17.02.45;	author shadchin;	state Exp;
branches;
next	1.3;
commitid	3Nxi6joo804oX35o;

1.3
date	2016.12.04.07.00.53;	author shadchin;	state Exp;
branches;
next	1.2;
commitid	kLNu7MhxCnaA1xxf;

1.2
date	2016.11.24.15.48.46;	author shadchin;	state Exp;
branches;
next	1.1;
commitid	1fnxqMnzyHLUbl7B;

1.1
date	2016.10.02.10.41.45;	author shadchin;	state Exp;
branches
	1.1.1.1;
next	;
commitid	WItWaDmm4eGNub0h;

1.1.1.1
date	2016.10.02.10.41.45;	author shadchin;	state Exp;
branches;
next	;
commitid	WItWaDmm4eGNub0h;


desc
@@


1.4
log
@Update to py-spark-parser 1.6.0
@
text
@SHA256 (spark_parser-1.6.0.tar.gz) = MxGtQMjgtKop7f0eyTpsgcP0BqTo7E0C2x7DlAL7YKk=
SIZE (spark_parser-1.6.0.tar.gz) = 133871
@


1.3
log
@Update to py-spark-parser 1.5.1
@
text
@d1 2
a2 2
SHA256 (spark_parser-1.5.1.tar.gz) = tnUxA/N0Te795/hBwnXk0V2BMFmltXXKffKPpFSA+Do=
SIZE (spark_parser-1.5.1.tar.gz) = 111933
@


1.2
log
@Update to py-spark-parser 1.4.3
@
text
@d1 2
a2 2
SHA256 (spark_parser-1.4.3.tar.gz) = TRqcWj4RzK8tFav4Tm2pJtKLl7EEgygS5cka/I0GHSk=
SIZE (spark_parser-1.4.3.tar.gz) = 100522
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
SHA256 (spark_parser-1.4.0.tar.gz) = KC/g0Z3kjV/aYUgDLkfIIuLwiKX/BQy3VE8rwucB7eQ=
SIZE (spark_parser-1.4.0.tar.gz) = 99006
@


1.1.1.1
log
@Import py-spark-parser 1.4.0, ok danj@@

SPARK stands for Scanning, Parsing, and Rewriting Kit. It uses Jay Earlyâ€™s
algorithm for parsing context free grammars, and comes with some generic
Abstract Syntax Tree routines. There is also a prototype scanner which does
its job by combining Python regular expressions.
@
text
@@
