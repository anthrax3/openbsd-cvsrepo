head	1.2;
access;
symbols
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	jolan_2003-oct-26:1.1.1.1
	jolan:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2006.01.06.08.36.18;	author steven;	state dead;
branches;
next	1.1;

1.1
date	2003.10.27.03.07.33;	author jolan;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.10.27.03.07.33;	author jolan;	state Exp;
branches;
next	;


desc
@@


1.2
log
@SHARED_LIBS, USE_LIBTOOL where necessary
@
text
@$OpenBSD: patch-ltmain_sh,v 1.1 2003/10/27 03:07:33 jolan Exp $
--- ltmain.sh.orig	2003-10-12 13:54:54.000000000 -0500
+++ ltmain.sh	2003-10-25 00:36:34.000000000 -0500
@@@@ -1060,6 +1060,17 @@@@ compiler."
 	continue
 	;;
 
+      -pthread)
+	case $host in
+	*-*-openbsd*)
+	  deplibs="$deplibs $arg"
+	  ;;
+	*)
+	  continue
+	  ;;
+	esac
+	;;
+
       -module)
 	module=yes
 	continue
@@@@ -1496,6 +1507,9 @@@@ compiler."
 	  fi
 	  continue
 	  ;;
+	-pthread)
+	  continue
+	  ;;
 	%DEPLIBS%)
 	  alldeplibs=yes
 	  continue
@@@@ -1737,11 +1751,6 @@@@ compiler."
 	    continue
 	  fi
 
-	  if test "$installed" = no; then
-	    notinst_deplibs="$notinst_deplibs $lib"
-	    need_relink=yes
-	  fi
-
 	  if test -n "$old_archive_from_expsyms_cmds"; then
 	    # figure out the soname
 	    set dummy $library_names
@@@@ -4191,8 +4200,8 @@@@ relink_command=\"$relink_command\""
 	    for linkname
 	    do
 	      if test "$linkname" != "$realname"; then
-		$show "(cd $destdir && $rm $linkname && $LN_S $realname $linkname)"
-		$run eval "(cd $destdir && $rm $linkname && $LN_S $realname $linkname)"
+		$show "(cd $destdir && $rm $linkname && $mv $realname $linkname)"	
+		$run eval "(cd $destdir && $rm $linkname && $mv $realname $linkname)"	
 	      fi
 	    done
 	  fi
@@@@ -4446,40 +4455,6 @@@@ relink_command=\"$relink_command\""
     # Exit here if they wanted silent mode.
     test "$show" = ":" && exit 0
 
-    echo "----------------------------------------------------------------------"
-    echo "Libraries have been installed in:"
-    for libdir in $libdirs; do
-      echo "   $libdir"
-    done
-    echo
-    echo "If you ever happen to want to link against installed libraries"
-    echo "in a given directory, LIBDIR, you must either use libtool, and"
-    echo "specify the full pathname of the library, or use the \`-LLIBDIR'"
-    echo "flag during linking and do at least one of the following:"
-    if test -n "$shlibpath_var"; then
-      echo "   - add LIBDIR to the \`$shlibpath_var' environment variable"
-      echo "     during execution"
-    fi
-    if test -n "$runpath_var"; then
-      echo "   - add LIBDIR to the \`$runpath_var' environment variable"
-      echo "     during linking"
-    fi
-    if test -n "$hardcode_libdir_flag_spec"; then
-      libdir=LIBDIR
-      eval flag=\"$hardcode_libdir_flag_spec\"
-
-      echo "   - use the \`$flag' linker flag"
-    fi
-    if test -n "$admincmds"; then
-      echo "   - have your system administrator run these commands:$admincmds"
-    fi
-    if test -f /etc/ld.so.conf; then
-      echo "   - have your system administrator add LIBDIR to \`/etc/ld.so.conf'"
-    fi
-    echo
-    echo "See any operating system documentation about shared libraries for"
-    echo "more information, such as the ld(1) and ld.so(8) manual pages."
-    echo "----------------------------------------------------------------------"
     exit 0
     ;;
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import of SDL_sound-1.0.1:

SDL_sound is a library that handles the decoding of several popular
sound file formats, such as .WAV and .MP3.  It is meant to make the
programmer's sound playback tasks simpler.  The programmer gives
SDL_sound a filename, or feeds it data directly from one of many
sources, and then reads the decoded waveform data back at their leisure.
If resource constraints are a concern, SDL_sound can process sound data
in programmer-specified blocks.  Alternately, SDL_sound can decode a
whole sound file and hand back a single pointer to the whole waveform.
SDL_sound can also handle sample rate, audio format, and channel
conversion on-the-fly and behind-the-scenes, if the programmer desires.

WWW: http://icculus.org/SDL_sound/
@
text
@@
