head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.0.10
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.12
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.8
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.03.09.18.20.02;	author jasper;	state dead;
branches;
next	1.1;
commitid	VxzuAbDsmRO4AfFt;

1.1
date	2013.07.22.16.54.56;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove vax-specific patches
@
text
@$OpenBSD: patch-mpn_vax_add_n_s,v 1.1 2013/07/22 16:54:56 espie Exp $
--- mpn/vax/add_n.s.orig	Sun May  8 03:49:29 2011
+++ mpn/vax/add_n.s	Mon Jul 22 02:58:33 2013
@@@@ -27,33 +27,33 @@@@
 
 .text
 	.align 1
-.globl ___gmpn_add_n
-___gmpn_add_n:
+.globl __gmpn_add_n
+__gmpn_add_n:
 	.word	0x0
-	movl	16(ap),r0
-	movl	12(ap),r1
-	movl	8(ap),r2
-	movl	4(ap),r3
-	mnegl	r0,r5
-	addl2	$3,r0
-	ashl	$-2,r0,r0	# unroll loop count
-	bicl2	$-4,r5		# mask out low 2 bits
-	movaq	(r5)[r5],r5	# 9x
-	jmp	Loop(r5)
+	movl	16(%ap),%r0
+	movl	12(%ap),%r1
+	movl	8(%ap),%r2
+	movl	4(%ap),%r3
+	mnegl	%r0,%r5
+	addl2	$3,%r0
+	ashl	$-2,%r0,%r0	# unroll loop count
+	bicl2	$-4,%r5		# mask out low 2 bits
+	movaq	(%r5)[%r5],%r5	# 9x
+	jmp	Loop(%r5)
 
-Loop:	movl	(r2)+,r4
-	adwc	(r1)+,r4
-	movl	r4,(r3)+
-	movl	(r2)+,r4
-	adwc	(r1)+,r4
-	movl	r4,(r3)+
-	movl	(r2)+,r4
-	adwc	(r1)+,r4
-	movl	r4,(r3)+
-	movl	(r2)+,r4
-	adwc	(r1)+,r4
-	movl	r4,(r3)+
-	sobgtr	r0,Loop
+Loop:	movl	(%r2)+,%r4
+	adwc	(%r1)+,%r4
+	movl	%r4,(%r3)+
+	movl	(%r2)+,%r4
+	adwc	(%r1)+,%r4
+	movl	%r4,(%r3)+
+	movl	(%r2)+,%r4
+	adwc	(%r1)+,%r4
+	movl	%r4,(%r3)+
+	movl	(%r2)+,%r4
+	adwc	(%r1)+,%r4
+	movl	%r4,(%r3)+
+	sobgtr	%r0,Loop
 
-	adwc	r0,r0
+	adwc	%r0,%r0
 	ret
@


1.1
log
@fix after transition to elf, conversion by miod@@ and me.
okay naddy@@, miod@@
(no bump, doesn't affect anything besides vax, on which it didn't even
compile after the breakage).
@
text
@d1 1
a1 1
$OpenBSD$
@

