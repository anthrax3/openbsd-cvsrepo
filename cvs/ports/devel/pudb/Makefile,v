head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.4
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.2
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.1.1.1.0.4
	OPENBSD_5_8_BASE:1.1.1.1
	jca_2015-Jul-17:1.1.1.1
	jca:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2017.01.03.19.19.48;	author landry;	state Exp;
branches;
next	1.6;
commitid	NkZaP5skFWQkYqhM;

1.6
date	2016.04.25.08.59.02;	author jca;	state Exp;
branches;
next	1.5;
commitid	SaUTAr7ohMBuWtWd;

1.5
date	2016.01.07.21.35.27;	author jasper;	state Exp;
branches;
next	1.4;
commitid	yiDwkEx5qtLmvGpL;

1.4
date	2015.10.21.16.23.50;	author jca;	state Exp;
branches;
next	1.3;
commitid	RcVLhSoHX06hYqea;

1.3
date	2015.09.29.10.51.43;	author sthen;	state Exp;
branches;
next	1.2;
commitid	NAa0n7dMfq2qVX1q;

1.2
date	2015.09.21.19.48.52;	author jca;	state Exp;
branches;
next	1.1;
commitid	ts5EHJV1AeTiGenc;

1.1
date	2015.07.18.00.31.07;	author jca;	state Exp;
branches
	1.1.1.1;
next	;
commitid	KNi5ac4yYQta2sdK;

1.1.1.1
date	2015.07.18.00.31.07;	author jca;	state Exp;
branches;
next	;
commitid	KNi5ac4yYQta2sdK;


desc
@@


1.7
log
@bump ports depending on python3 in devel
@
text
@# $OpenBSD: Makefile,v 1.6 2016/04/25 08:59:02 jca Exp $

COMMENT =		console-based visual debugger for Python

MODPY_EGG_VERSION =	2016.1
DISTNAME =		pudb-${MODPY_EGG_VERSION}
PKGNAME =		py-pudb-${MODPY_EGG_VERSION}
REVISION =		0

CATEGORIES =		devel

# MIT
PERMIT_PACKAGE_CDROM =	Yes

MODULES =		lang/python
MODPY_PI =		Yes
MODPY_SETUPTOOLS =	Yes

RUN_DEPENDS =		devel/py-urwid${MODPY_FLAVOR}>=1.1.1 \
			textproc/py-pygments${MODPY_FLAVOR}

TEST_DEPENDS =          ${RUN_DEPENDS}

FLAVORS =		python3
FLAVOR ?=

.if ${FLAVOR:Mpython3}
PUDB_SCRIPT_NAME =	pudb3
.else
PUDB_SCRIPT_NAME =	pudb
.endif

SUBST_VARS +=		PUDB_SCRIPT_NAME

.include <bsd.port.mk>
@


1.6
log
@Update to pudb-2016.1 and drop maintainership while here.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2016/01/07 21:35:27 jasper Exp $
d8 1
@


1.5
log
@bump ports that now have a pypi homepage
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2015/10/21 16:23:50 jca Exp $
d5 1
a5 1
MODPY_EGG_VERSION =	2015.4.1
a7 1
REVISION =		0
a9 2

MAINTAINER =		Jeremie Courreges-Anglas <jca@@wxcvbn.org>
@


1.4
log
@Update to pudb-2015.4.1

This update includes experimental remote debug support.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2015/09/29 10:51:43 sthen Exp $
d8 1
@


1.3
log
@bump REVISION for setuptools dep change.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2015/09/21 19:48:52 jca Exp $
d5 1
a5 2
MODPY_EGG_VERSION =	2015.3
REVISION =		1
d28 5
a32 1
PUDB_MODPY_BIN_SUFFIX =	${MODPY_BIN_SUFFIX:S/-//}
d34 1
a34 1
SUBST_VARS +=		PUDB_MODPY_BIN_SUFFIX
@


1.2
log
@Add python3 pudb flavor, and rename pkg to allow concurrent installs.

Discussed with rpointel@@, who convinced me that the standard py(3)-
prefix was preferable to the black magic needed to handle conflicts when
keeping "pudb" as the PKGNAME.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2015/07/18 00:31:07 jca Exp $
d6 1
a6 1
REVISION =		0
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d6 1
d8 1
d21 2
a22 2
RUN_DEPENDS =		devel/py-urwid>=1.1.1 \
			textproc/py-pygments
d25 7
@


1.1.1.1
log
@Import pudb, a console-based python debugger.  Input from and ok sthen@@

$ cat pkg/DESCR:
PuDB is a console-based python debugger which features:

- Syntax-highlighted source, the stack, breakpoints and variables are
  all visible at once and continuously updated. This helps you be more
  aware of what’s going on in your program. Variable displays can be
  expanded, collapsed and have various customization options.

- Simple, keyboard-based navigation using single keystrokes makes
  debugging quick and easy. PuDB understands cursor-keys and Vi
  shortcuts for navigation. Other keys are inspired by the
  corresponding pdb commands.

- Use search to find relevant source code, or use "m" to invoke
  the module browser that shows loaded modules, lets you load new ones
  and reload existing ones.

- Breakpoints can be set just by pointing at a source line and
  hitting "b" and then edited visually in the breakpoints window. Or
  hit "t" to run to the line under the cursor.

- Drop to a Python shell in the current environment by pressing
  "!".

- PuDB places special emphasis on exception handling.

- A post-mortem mode makes it easy to retrace a crashing program’s
  last steps.

- IPython integration (see wiki[1])

- Should work with Python 2.4 and newer, including Python 3.

[1] http://wiki.tiker.net/PuDB
@
text
@@
