head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.20
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.14
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.12
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.10
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.8
	OPENBSD_5_0:1.1.1.1.0.6
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.4
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	jasper_20100708:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.05.16.10.07.19;	author kettenis;	state Exp;
branches;
next	1.1;
commitid	pRQMI5JXSYXrwS8o;

1.1
date	2010.07.08.12.28.57;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.07.08.12.28.57;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Use $CC to link shared library to make sure crtbeginS.o gets linked in.

ok dcoppa@@
@
text
@$OpenBSD: patch-Makefile_linux,v 1.1.1.1 2010/07/08 12:28:57 jasper Exp $
--- Makefile.linux.orig	Mon Nov 27 19:32:11 2006
+++ Makefile.linux	Fri May 15 22:56:19 2015
@@@@ -1,10 +1,10 @@@@
-include config.linux
+include ../config.linux
 
-OBJS= src/clocks.o src/core_profiler.o src/function_meter.o src/stack.o src/lua50_profiler.o
+OBJS= clocks.o core_profiler.o function_meter.o stack.o lua50_profiler.o
 
 
 profiler: $(OBJS)
-	mkdir -p bin && $(LD) -Bshareable -o $(PROFILER_OUTPUT) $(OBJS)
+	mkdir -p bin && $(CC) -shared -o $(PROFILER_OUTPUT) $(OBJS)
 
 clean:
 	rm -f $(PROFILER_OUTPUT) src/*.o
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- Makefile.linux.orig	Mon Jul  5 02:43:01 2010
+++ Makefile.linux	Mon Jul  5 02:43:50 2010
@@@@ -1,6 +1,6 @@@@
d13 5
@


1.1.1.1
log
@import luaprofiler 2.0.2

LuaProfiler is a time profiler designed to help finding bottlenecks on
your Lua program.

If you use LuaProfiler into your program, it will generate a log of all
your function calls and their respective running times. You can use this
log to generate a summary of the functions your program uses, along with
how long it stayed in each of them, or you can import the log into a
spreadsheet for further analysis.
@
text
@@
