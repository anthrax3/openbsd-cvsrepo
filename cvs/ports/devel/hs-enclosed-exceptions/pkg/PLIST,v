head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	kili_20160201:1.1.1.1
	kili:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.02.01.14.22.43;	author kili;	state Exp;
branches
	1.1.1.1;
next	;
commitid	j37hVGqM8tbsQ2z9;

1.1.1.1
date	2016.02.01.14.22.43;	author kili;	state Exp;
branches;
next	;
commitid	j37hVGqM8tbsQ2z9;


desc
@@



1.1
log
@Initial revision
@
text
@@@comment $OpenBSD$
lib/ghc/${DISTNAME}/
lib/ghc/${DISTNAME}/Control/
lib/ghc/${DISTNAME}/Control/Exception/
lib/ghc/${DISTNAME}/Control/Exception/Enclosed.hi
lib/ghc/${DISTNAME}/Control/Exception/Enclosed.p_hi
lib/ghc/${DISTNAME}/HS${DISTNAME}-${MODGHC_PACKAGE_KEY}.o
lib/ghc/${DISTNAME}/libHS${DISTNAME}-${MODGHC_PACKAGE_KEY}.a
lib/ghc/${DISTNAME}/libHS${DISTNAME}-${MODGHC_PACKAGE_KEY}_p.a
lib/ghc/${DISTNAME}/register.sh
share/doc/hs-${DISTNAME}/
share/doc/hs-${DISTNAME}/LICENSE
share/doc/hs-${DISTNAME}/html/
share/doc/hs-${DISTNAME}/html/Control-Exception-Enclosed.html
share/doc/hs-${DISTNAME}/html/doc-index.html
share/doc/hs-${DISTNAME}/html/enclosed-exceptions.haddock
share/doc/hs-${DISTNAME}/html/frames.html
share/doc/hs-${DISTNAME}/html/haddock-util.js
share/doc/hs-${DISTNAME}/html/hslogo-16.png
share/doc/hs-${DISTNAME}/html/index-frames.html
share/doc/hs-${DISTNAME}/html/index.html
share/doc/hs-${DISTNAME}/html/mini_Control-Exception-Enclosed.html
share/doc/hs-${DISTNAME}/html/minus.gif
share/doc/hs-${DISTNAME}/html/ocean.css
share/doc/hs-${DISTNAME}/html/plus.gif
share/doc/hs-${DISTNAME}/html/synopsis.png
@@exec /usr/bin/env HOME=/nonexistent %D/lib/ghc/${DISTNAME}/register.sh -v0
@@unexec /usr/bin/env HOME=/nonexistent %D/lib/ghc/${DISTNAME}/unregister.sh -v0 --force
lib/ghc/${DISTNAME}/unregister.sh
@


1.1.1.1
log
@Import devel/hs-enclosed-exceptions.

ok sthen@@

Catching all exceptions raised within an enclosed computation, while
remaining responsive to (external) asynchronous exceptions.

@
text
@@
