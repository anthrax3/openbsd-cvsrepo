head	1.3;
access;
symbols
	OPENBSD_5_9:1.2.0.8
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.03.09.20.59.57;	author naddy;	state dead;
branches;
next	1.2;
commitid	O1bDFlwkcbv9N4XH;

1.2
date	2013.11.22.19.53.46;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2013.06.25.09.32.20;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@no more vax
@
text
@$OpenBSD: patch-lib_isnan_c,v 1.2 2013/11/22 19:53:46 brad Exp $
--- lib/isnan.c.orig	Sun Sep 22 02:15:20 2013
+++ lib/isnan.c	Thu Nov 21 01:48:42 2013
@@@@ -119,7 +119,8 @@@@ FUNC (DOUBLE x)
      because x may be a signaling NaN.  */
 #  if defined __SUNPRO_C || defined __ICC || defined _MSC_VER \
       || defined __DECC || defined __TINYC__ \
-      || (defined __sgi && !defined __GNUC__)
+      || (defined __sgi && !defined __GNUC__) \
+      || (defined __vax__ && defined __OpenBSD__)
   /* The Sun C 5.0, Intel ICC 10.0, Microsoft Visual C/C++ 9.0, Compaq (ex-DEC)
      6.4, and TinyCC compilers don't recognize the initializers as constant
      expressions.  The Compaq compiler also fails when constant-folding
@


1.2
log
@Update to m4 1.4.17.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_isnan_c,v 1.1 2013/06/25 09:32:20 espie Exp $
@


1.1
log
@fix vax
@
text
@d1 4
a4 5
$OpenBSD$
--- lib/isnan.c.orig	Tue Jun 25 11:11:20 2013
+++ lib/isnan.c	Tue Jun 25 11:13:06 2013
@@@@ -118,7 +118,8 @@@@ FUNC (DOUBLE x)
   /* Be careful to not do any floating-point operation on x, such as x == x,
d6 4
a9 3
 #  if defined __TINYC__ || defined __SUNPRO_C || defined __DECC \
-      || (defined __sgi && !defined __GNUC__) || defined __ICC
+      || (defined __sgi && !defined __GNUC__) || defined __ICC \
d11 3
a13 3
   /* The Sun C 5.0, Intel ICC 10.0, and Compaq (ex-DEC) 6.4 compilers don't
      recognize the initializers as constant expressions.  The latter compiler
      also fails when constant-folding 0.0 / 0.0 even when constant-folding is
@

