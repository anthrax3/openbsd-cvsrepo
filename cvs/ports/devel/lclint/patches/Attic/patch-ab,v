head	1.4;
access;
symbols
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_TRACKING_SWITCH:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	lclint-2_4b:1.1.1.1
	sds:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2002.03.24.23.07.25;	author brad;	state dead;
branches;
next	1.3;

1.3
date	2000.08.01.15.41.14;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.26.20.45.54;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	99.06.07.23.37.56;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.06.07.23.37.56;	author espie;	state Exp;
branches
	1.1.1.1.4.1;
next	;

1.1.1.1.4.1
date	2000.09.15.04.49.08;	author marc;	state Exp;
branches;
next	;


desc
@@


1.4
log
@really stub this out.
@
text
@--- src/Makefile.orig	Thu Jul 27 04:18:46 2000
+++ src/Makefile	Tue Aug  1 16:54:36 2000
@@@@ -60,7 +60,7 @@@@ all : dorelease
 
 quick: lclint
 
-lclint : $(OBJ) 
+lclint : signature.c cgrammar.c llgrammar.c cscanner.c $(OBJ) 
 	@@echo '// '
 	@@echo '//  Linking:'
 	@@echo '// '
@@@@ -75,7 +75,7 @@@@ lclint : $(OBJ) 
 ### this is probably NOT compatible with yacc.
 ###
 
-signature.c : signature.c.der signature.y
+signature.c : signature.y
 ifdef BISON
 	@@$(BISON) $(YFLAGS) -p lsl signature.y
 	@@$(CAT) bison.head signature.tab.c bison.reset > signature.c
@@@@ -85,7 +85,7 @@@@ else
 	$(CP) signature.c.der signature.c
 endif
 
-cgrammar.c : cgrammar.c.der cgrammar.y
+cgrammar.c : cgrammar.y
 ifdef BISON
 	$(BISON) $(YFLAGS) cgrammar.y
 	@@echo '//           Expect 119 shift/reduce conflicts and 114 reduce/reduce conflicts.'
@@@@ -94,13 +94,14 @@@@ ifdef BISON
 	@@$(MV) Headers/cgrammar_tokens.h Headers/cgrammar_tokens.bak
 	@@$(CAT) bison.head cgrammar.tab.h bison.reset > Headers/cgrammar_tokens.h
 else
+cgrammar.c : cgrammar.c.der 
 	$(CP) cgrammar.c.der cgrammar.c
 endif
 
 ### llgrammar2.h is necessary so +singleinclude may be used
 
-llgrammar.c  : llgrammar.c.der llgrammar.y
 ifdef BISON
+llgrammar.c  : llgrammar.y
 	$(BISON) $(YFLAGS) -p yl llgrammar.y
 	@@echo '//            Expect 2 shift/reduce conflicts.'
 	@@$(CAT) bison.head llgrammar.tab.c bison.reset > llgrammar.c
@@@@ -112,7 +113,7 @@@@ else
 	$(CP) llgrammar.c.der llgrammar.c
 endif
 
-cscanner.c : cscanner.c.der cscanner.l
+cscanner.c : cscanner.l
 ifdef FLEX				
 	$(FLEX) $(LFLAGS) cscanner.l 
 	$(CAT) flex.head lex.yy.c flex.reset > cscanner.c
@


1.3
log
@update to 2.5q
@
text
@@


1.2
log
@bug-fix version.
includes support for more gcc extensions, and a parser fix for
case :  without code.
@
text
@d1 2
a2 2
--- src/Makefile.orig	Tue May 23 21:59:58 2000
+++ src/Makefile	Fri May 26 02:34:56 2000
d12 1
a12 1
@@@@ -75,17 +75,18 @@@@ lclint : $(OBJ) 
d17 1
a18 1
+signature.c : signature.y
d20 2
a21 5
 	@@$(CAT) bison.head signature.tab.c > signature.c
 	@@$(MV) Headers/signature_gen.h Headers/signature_gen.bak
 	@@$(CAT) bison.head signature.tab.h > Headers/signature_gen.h
 else
+signature.c : signature.c.der 
d30 1
a30 1
@@@@ -94,13 +95,14 @@@@ ifdef BISON
d32 1
a32 1
 	@@$(CAT) bison.head cgrammar.tab.h > Headers/cgrammar_tokens.h
d45 2
a46 6
 	@@$(CAT) bison.head llgrammar.tab.c > llgrammar.c
@@@@ -109,14 +111,16 @@@@ ifdef BISON
 	@@$(MV) Headers/llgrammar_gen.h Headers/llgrammar_gen.bak
 	@@$(CAT) bison.head llgrammar.tab.h > Headers/llgrammar_gen.h
 else
+llgrammar.c  : llgrammar.c.der 
d51 1
a52 1
+cscanner.c : cscanner.l
d54 1
a54 6
 	$(CAT) flex.head lex.yy.c > cscanner.c
 else
+cscanner.c : cscanner.c.der 
 	$(CP) cscanner.c.der cscanner.c
 endif
 
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
--- src/Makefile.orig	Mon Jun  7 23:26:33 1999
+++ src/Makefile	Mon Jun  7 23:32:37 1999
@@@@ -60,7 +60,7 @@@@
d12 1
a12 1
@@@@ -75,17 +75,18 @@@@
d32 2
a33 2
 	@@echo '//           Expect 113 shift/reduce conflicts and 36 reduce/reduce conflicts.'
@@@@ -94,13 +95,14 @@@@
d49 1
a49 1
@@@@ -109,14 +111,16 @@@@
@


1.1.1.1
log
@rocket science meets lint.

Highly verbose, but can be toned down to a reasonable level using
the right flags, or the right annotations.

Knows something about such weird issues as ANSI C namespaces, and will
warn against E* or str* identifiers, for instance.

@
text
@@


1.1.1.1.4.1
log
@bring devel as of cut-over date into 2.7 branch
@
text
@d1 3
a3 3
--- src/Makefile.orig	Thu Jul 27 04:18:46 2000
+++ src/Makefile	Tue Aug  1 16:54:36 2000
@@@@ -60,7 +60,7 @@@@ all : dorelease
d12 1
a12 1
@@@@ -75,7 +75,7 @@@@ lclint : $(OBJ) 
d17 1
a18 1
 ifdef BISON
d20 5
a24 2
 	@@$(CAT) bison.head signature.tab.c bison.reset > signature.c
@@@@ -85,7 +85,7 @@@@ else
d32 2
a33 2
 	@@echo '//           Expect 119 shift/reduce conflicts and 114 reduce/reduce conflicts.'
@@@@ -94,13 +94,14 @@@@ ifdef BISON
d35 1
a35 1
 	@@$(CAT) bison.head cgrammar.tab.h bison.reset > Headers/cgrammar_tokens.h
d48 6
a53 2
 	@@$(CAT) bison.head llgrammar.tab.c bison.reset > llgrammar.c
@@@@ -112,7 +113,7 @@@@ else
d58 1
a59 1
 ifdef FLEX				
d61 6
a66 1
 	$(CAT) flex.head lex.yy.c flex.reset > cscanner.c
@

