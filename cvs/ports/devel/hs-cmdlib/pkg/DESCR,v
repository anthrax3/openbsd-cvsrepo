head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.20
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.18
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.14
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.16
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.12
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.10
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.8
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.6
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.4
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	kili_20120507:1.1.1.1
	kili:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2012.05.07.18.47.35;	author kili;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.05.07.18.47.35;	author kili;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@A commandline parsing library, based on getopt. Comes with a powerful
attribute system. Supports complex interfaces with many options and
commands, with option & command grouping, with simple and convenient
API. Even though quite powerful, it strives to keep simple things
simple. The library uses "System.Console.GetOpt" as its backend.

In comparison to the other commandline handling libraries:

Compared to cmdargs, cmdlib has a pure attribute system and is based
on GetOpt for help formatting & argument parsing. Cmdlib may also
be more extendable due to typeclass design, and can use user-supplied
types for option arguments.

Cmdargs >= 0.4 can optionally use a pure attribute system, although
this is clearly an add-on and the API is a second-class citizen in
relation to the impure version.

GetOpt and parseargs both require explicit flag representation, so
they live a level below cmdlib. GetOpt is in fact used as a backend
by cmdlib.
@


1.1.1.1
log
@A commandline parsing library, based on getopt. Comes with a powerful
attribute system. Supports complex interfaces with many options and
commands, with option & command grouping, with simple and convenient
API. Even though quite powerful, it strives to keep simple things
simple. The library uses "System.Console.GetOpt" as its backend.

In comparison to the other commandline handling libraries:

Compared to cmdargs, cmdlib has a pure attribute system and is based
on GetOpt for help formatting & argument parsing. Cmdlib may also
be more extendable due to typeclass design, and can use user-supplied
types for option arguments.

Cmdargs >= 0.4 can optionally use a pure attribute system, although
this is clearly an add-on and the API is a second-class citizen in
relation to the impure version.

GetOpt and parseargs both require explicit flag representation, so
they live a level below cmdlib. GetOpt is in fact used as a backend
by cmdlib.

ok sthen@@

@
text
@@
