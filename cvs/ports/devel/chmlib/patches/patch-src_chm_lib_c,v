head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.44
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.42
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.40
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.36
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.38
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.34
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.32
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.30
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.28
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.26
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.24
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.22
	OPENBSD_5_0:1.5.0.20
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.18
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.16
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.14
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.12
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.10
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.8
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	chm:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2007.01.31.21.42.03;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2006.06.19.18.14.59;	author bernd;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2005.11.13.17.35.58;	author pvalchev;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.11.13.09.22.28;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.08.10.40.17;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.11.08.10.40.17;	author espie;	state Exp;
branches;
next	;

1.3.2.1
date	2006.06.24.07.17.15;	author sturm;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2007.02.03.17.00.44;	author sturm;	state Exp;
branches;
next	;

1.4.2.1
date	2007.02.03.17.12.17;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Security update to chmlib 0.39

This update fixes a vulnerability which might lead to a code execution:
http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=468

from Martynas Venckus <martynas@@altroot.org>

ok sturm@@
@
text
@$OpenBSD: patch-src_chm_lib_c,v 1.4 2006/06/19 18:14:59 bernd Exp $
--- src/chm_lib.c.orig	Thu Jan 25 04:12:58 2007
+++ src/chm_lib.c	Mon Jan 29 18:29:00 2007
@@@@ -153,7 +153,8 @@@@ typedef unsigned __int64        UInt64;
 /* Sparc        */
 /* MIPS         */
 /* PPC          */
-#elif __i386__ || __sun || __sgi || __ppc__
+/* other non-64 bit */
+#elif !__LP64__
 typedef unsigned char           UChar;
 typedef short                   Int16;
 typedef unsigned short          UInt16;
@@@@ -163,8 +164,8 @@@@ typedef long long               Int64;
 typedef unsigned long long      UInt64;
 
 /* x86-64 */
-/* Note that these may be appropriate for other 64-bit machines. */
-#elif __x86_64__ || __ia64__
+/* other 64-bit machines. */
+#else
 typedef unsigned char           UChar;
 typedef short                   Int16;
 typedef unsigned short          UInt16;
@@@@ -172,11 +173,6 @@@@ typedef int                     Int32;
 typedef unsigned int            UInt32;
 typedef long                    Int64;
 typedef unsigned long           UInt64;
-
-#else
-
-/* yielding an error is preferable to yielding incorrect behavior */
-#error "Please define the sized types for your platform in chm_lib.c"
 #endif
 
 /* GCC */
@@@@ -726,7 +722,7 @@@@ static Int64 _chm_fetch_bytes(struct chm
 #ifdef CHM_USE_IO64
     readLen = pread64(h->fd, buf, (long)len, os);
 #else
-    readLen = pread(h->fd, buf, (long)len, (unsigned int)os);
+    readLen = pread(h->fd, buf, (size_t)len, (off_t)os);
 #endif
 #else
 #ifdef CHM_USE_IO64
@@@@ -736,9 +732,9 @@@@ static Int64 _chm_fetch_bytes(struct chm
     lseek64(h->fd, oldOs, SEEK_SET);
 #else
     oldOs = lseek(h->fd, 0, SEEK_CUR);
-    lseek(h->fd, (long)os, SEEK_SET);
+    lseek(h->fd, (off_t)os, SEEK_SET);
     readLen = read(h->fd, buf, len);
-    lseek(h->fd, (long)oldOs, SEEK_SET);
+    lseek(h->fd, (off_t)oldOs, SEEK_SET);
 #endif
 #endif
 #endif
@


1.4
log
@Security update to chmlib-0.38.

Fixes an input validation error in extract_chmLib example program.

Detailed information:
http://secunia.com/advisories/20734/

"go for it" espie@@
@
text
@d1 4
a4 4
$OpenBSD: patch-src_chm_lib_c,v 1.3 2005/11/13 17:35:58 pvalchev Exp $
--- src/chm_lib.c.orig	Mon Jun 19 16:29:18 2006
+++ src/chm_lib.c	Mon Jun 19 16:31:50 2006
@@@@ -160,7 +160,8 @@@@ typedef unsigned __int64        UInt64;
d14 1
a14 1
@@@@ -170,8 +171,8 @@@@ typedef long long               Int64;
d25 1
a25 1
@@@@ -179,11 +180,6 @@@@ typedef int                     Int32;
d37 1
a37 1
@@@@ -733,7 +729,7 @@@@ static Int64 _chm_fetch_bytes(struct chm
d46 1
a46 1
@@@@ -743,9 +739,9 @@@@ static Int64 _chm_fetch_bytes(struct chm
@


1.4.2.1
log
@MFC:
Security update to chmlib 0.39

This update fixes a vulnerability which might lead to a code execution:
http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=468
@
text
@d1 4
a4 4
$OpenBSD: patch-src_chm_lib_c,v 1.4 2006/06/19 18:14:59 bernd Exp $
--- src/chm_lib.c.orig	Thu Jan 25 03:12:58 2007
+++ src/chm_lib.c	Sat Feb  3 18:09:02 2007
@@@@ -153,7 +153,8 @@@@ typedef unsigned __int64        UInt64;
d14 1
a14 1
@@@@ -163,8 +164,8 @@@@ typedef long long               Int64;
d25 1
a25 1
@@@@ -172,11 +173,6 @@@@ typedef int                     Int32;
d37 1
a37 1
@@@@ -726,7 +722,7 @@@@ static Int64 _chm_fetch_bytes(struct chm
d46 1
a46 1
@@@@ -736,9 +732,9 @@@@ static Int64 _chm_fetch_bytes(struct chm
@


1.3
log
@split retarded per-arch type definitions (windows shit, what can you expect)
into __LP64__ vs !__LP64__; ok espie
@
text
@d1 3
a3 3
$OpenBSD: patch-src_chm_lib_c,v 1.2 2005/11/13 09:22:28 sturm Exp $
--- src/chm_lib.c.orig	Wed Oct 26 06:17:50 2005
+++ src/chm_lib.c	Sun Nov 13 10:15:17 2005
d19 1
a19 1
-#elif __x86_64__
d37 1
a37 1
@@@@ -731,7 +727,7 @@@@ static Int64 _chm_fetch_bytes(struct chm
d46 1
a46 1
@@@@ -741,9 +737,9 @@@@ static Int64 _chm_fetch_bytes(struct chm
@


1.3.2.1
log
@MFC:
Security update to chmlib-0.38.

Fixes an input validation error in extract_chmLib example program.

Detailed information:
http://secunia.com/advisories/20734/
@
text
@d1 3
a3 3
$OpenBSD: patch-src_chm_lib_c,v 1.3 2005/11/13 17:35:58 pvalchev Exp $
--- src/chm_lib.c.orig	Fri Jun 16 21:56:59 2006
+++ src/chm_lib.c	Sat Jun 24 09:07:59 2006
d19 1
a19 1
-#elif __x86_64__ || __ia64__
d37 1
a37 1
@@@@ -733,7 +729,7 @@@@ static Int64 _chm_fetch_bytes(struct chm
d46 1
a46 1
@@@@ -743,9 +739,9 @@@@ static Int64 _chm_fetch_bytes(struct chm
@


1.3.2.2
log
@MFC:
Security update to chmlib 0.39

This update fixes a vulnerability which might lead to a code execution:
http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=468
@
text
@d1 4
a4 4
$OpenBSD: patch-src_chm_lib_c,v 1.3.2.1 2006/06/24 07:17:15 sturm Exp $
--- src/chm_lib.c.orig	Thu Jan 25 03:12:58 2007
+++ src/chm_lib.c	Sat Feb  3 18:00:11 2007
@@@@ -153,7 +153,8 @@@@ typedef unsigned __int64        UInt64;
d14 1
a14 1
@@@@ -163,8 +164,8 @@@@ typedef long long               Int64;
d25 1
a25 1
@@@@ -172,11 +173,6 @@@@ typedef int                     Int32;
d37 1
a37 1
@@@@ -726,7 +722,7 @@@@ static Int64 _chm_fetch_bytes(struct chm
d46 1
a46 1
@@@@ -736,9 +732,9 @@@@ static Int64 _chm_fetch_bytes(struct chm
@


1.2
log
@build on sparc64
@
text
@d1 1
a1 1
$OpenBSD: patch-src_chm_lib_c,v 1.1.1.1 2005/11/08 10:40:17 espie Exp $
d3 13
a15 2
+++ src/chm_lib.c	Sun Nov 13 02:18:12 2005
@@@@ -171,7 +171,7 @@@@ typedef unsigned long long      UInt64;
d18 1
a18 1
 /* Note that these may be appropriate for other 64-bit machines. */
d20 2
a21 1
+#elif __x86_64__ || __sparc64__
d25 13
a37 1
@@@@ -731,7 +731,7 @@@@ static Int64 _chm_fetch_bytes(struct chm
d46 1
a46 1
@@@@ -741,9 +741,9 @@@@ static Int64 _chm_fetch_bytes(struct chm
@


1.1
log
@Initial revision
@
text
@d1 12
a12 3
$OpenBSD$
--- src/chm_lib.c.orig	Sun Nov  6 17:07:44 2005
+++ src/chm_lib.c	Sun Nov  6 17:16:20 2005
@


1.1.1.1
log
@chm microsoft parsing library, done as a demonstration at v2k5
@
text
@@
