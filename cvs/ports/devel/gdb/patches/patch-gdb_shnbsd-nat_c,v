head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.2
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.03.13.48.39;	author jca;	state Exp;
branches;
next	;
commitid	VCtpNXE2MpnYhMWp;


desc
@@


1.1
log
@Fix register handling of multithreaded programs on !(x86) platforms.

Initially implemented by jhb@@freebsd for i386 and amd64: replace ptid_get_pid
by get_ptrace_pid when fetching / setting registers.  The latter does the
right thing with multiple threads.

Issue reported by guenther@@ plus a few users.  ok pascal@@ (maintainer)
@
text
@$OpenBSD$
--- gdb/shnbsd-nat.c.orig	Wed Feb 10 04:19:39 2016
+++ gdb/shnbsd-nat.c	Sat May 14 22:54:35 2016
@@@@ -49,7 +49,7 @@@@ shnbsd_fetch_inferior_registers (struct target_ops *op
     {
       struct reg inferior_registers;
 
-      if (ptrace (PT_GETREGS, ptid_get_pid (inferior_ptid),
+      if (ptrace (PT_GETREGS, get_ptrace_pid (inferior_ptid),
 		  (PTRACE_TYPE_ARG3) &inferior_registers, 0) == -1)
 	perror_with_name (_("Couldn't get registers"));
 
@@@@ -70,7 +70,7 @@@@ shnbsd_store_inferior_registers (struct target_ops *op
     {
       struct reg inferior_registers;
 
-      if (ptrace (PT_GETREGS, ptid_get_pid (inferior_ptid),
+      if (ptrace (PT_GETREGS, get_ptrace_pid (inferior_ptid),
 		  (PTRACE_TYPE_ARG3) &inferior_registers, 0) == -1)
 	perror_with_name (_("Couldn't get registers"));
 
@@@@ -78,7 +78,7 @@@@ shnbsd_store_inferior_registers (struct target_ops *op
 				  (char *) &inferior_registers,
 				  SHNBSD_SIZEOF_GREGS);
 
-      if (ptrace (PT_SETREGS, ptid_get_pid (inferior_ptid),
+      if (ptrace (PT_SETREGS, get_ptrace_pid (inferior_ptid),
 		  (PTRACE_TYPE_ARG3) &inferior_registers, 0) == -1)
 	perror_with_name (_("Couldn't set registers"));
 
@
