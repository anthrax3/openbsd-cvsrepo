head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2012.12.29.14.04.54;	author bluhm;	state dead;
branches;
next	1.1;

1.1
date	2012.10.21.23.07.12;	author bluhm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update p5-BSD-stat to 1.34
- remove OpenBSD specific patches, they have been commited upstream
@
text
@$OpenBSD: patch-stat_xs,v 1.1 2012/10/21 23:07:12 bluhm Exp $
--- stat.xs.orig	Tue Aug 21 12:06:12 2012
+++ stat.xs	Wed Sep 26 00:42:32 2012
@@@@ -7,8 +7,9 @@@@
 #include "XSUB.h"
 #include <sys/types.h>
 #include <sys/stat.h>
-#include <unistd.h>
 #include <sys/time.h>
+#include <fcntl.h>
+#include <unistd.h>
 
 /*
  * Perl prior to 5.6.0 lacks newSVuv()
@@@@ -137,12 +138,21 @@@@ xs_utimes(double atime, double mtime, char *path){
 
 static int
 xs_lutimes(double atime, double mtime, char *path){
+#ifdef __OpenBSD__
+    struct timespec times[2];
+    times[0].tv_sec = (int)atime;
+    times[0].tv_nsec = (int)((atime - times[0].tv_sec) * 1e9);
+    times[1].tv_sec = (int)mtime;
+    times[1].tv_nsec = (int)((mtime - times[1].tv_sec) * 1e9);
+    int err = utimensat(AT_FDCWD, path, times, AT_SYMLINK_NOFOLLOW);
+#else
     struct timeval times[2];
     times[0].tv_sec = (int)atime;
     times[0].tv_usec = (int)((atime - times[0].tv_sec) * 1e6);
     times[1].tv_sec = (int)mtime;
     times[1].tv_usec = (int)((mtime - times[1].tv_sec) * 1e6);
     int err = lutimes(path, times);
+#endif
     return setbang(err);
 }
 
@


1.1
log
@Update BSD::stat to 1.33 which gives us the new functions utimes()
and lutimes().  Unfortunately lutimes() is specific to FreeBSD.
Emulate it with OpenBSD utimensat() and add a test for that.
OK sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@

