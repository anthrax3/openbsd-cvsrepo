head	1.10;
access;
symbols
	OPENBSD_6_1:1.9.0.2
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.12
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.8
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.10
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.6
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.2
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	giovanni-20100421:1.1.1.1
	giovanni:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2017.08.21.19.43.07;	author jasper;	state Exp;
branches;
next	1.9;
commitid	89ONh926paOIdKzX;

1.9
date	2016.10.01.11.54.15;	author naddy;	state Exp;
branches;
next	1.8;
commitid	VJ09Ih4WMjVIWTmz;

1.8
date	2013.08.07.21.31.43;	author naddy;	state Exp;
branches;
next	1.7;

1.7
date	2013.03.11.10.50.26;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2013.01.16.08.59.06;	author benoit;	state Exp;
branches;
next	1.5;

1.5
date	2011.09.16.09.24.55;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2011.06.08.17.39.25;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2011.01.14.22.42.52;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.08.30.22.24.15;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2010.04.21.06.48.49;	author giovanni;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.04.21.06.48.49;	author giovanni;	state Exp;
branches;
next	;


desc
@@


1.10
log
@switch to pypi
@
text
@# $OpenBSD: Makefile,v 1.9 2016/10/01 11:54:15 naddy Exp $

COMMENT =	Mox is a mock object framework for Python

MODPY_EGG_VERSION = 0.5.3
DISTNAME =	mox-${MODPY_EGG_VERSION}
PKGNAME =	py-${DISTNAME}
REVISION =	1
CATEGORIES =	devel

# Apache 2.0
PERMIT_PACKAGE_CDROM =	Yes

MODULES =	lang/python
MODPY_PI =	Yes

post-configure:
	@@perl -pi -e 's,/usr/bin/python2.4,${MODPY_BIN},' ${WRKSRC}/mox.py ${WRKSRC}/stubout.py

do-test:
	cd ${WRKSRC} && ${MODPY_BIN} mox_test.py

.include <bsd.port.mk>
@


1.9
log
@The ${PROJECT}.googlecode.com/files/ master sites are no longer
accessible, but the distfiles are still available at an archive URL.
Introduce MASTER_SITE_GOOGLECODE and use it for all affected ports.

ok czarkoff@@ danj@@ sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2013/08/07 21:31:43 naddy Exp $
d8 1
a8 1
REVISION =	0
a10 3
HOMEPAGE =	https://code.google.com/p/pymox/
MASTER_SITES =	${MASTER_SITE_GOOGLECODE:=pymox/}

d15 1
@


1.8
log
@move http://code.google.com, *.googlecode.com, and sites.google.com to https
suggested by bentley@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2013/03/11 10:50:26 espie Exp $
d12 1
a12 1
MASTER_SITES =	https://pymox.googlecode.com/files/
@


1.7
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2013/01/16 08:59:06 benoit Exp $
d8 1
d11 2
a12 2
HOMEPAGE =	http://code.google.com/p/pymox/
MASTER_SITES =	http://pymox.googlecode.com/files/
@


1.6
log
@- update py-mox to 0.5.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2011/09/16 09:24:55 espie Exp $
a14 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM =Yes
PERMIT_DISTFILES_FTP =	Yes
d21 1
a21 1
do-regress:
@


1.5
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2011/06/08 17:39:25 jasper Exp $
d5 1
a5 1
MODPY_EGG_VERSION =0.5.0
a7 1
REVISION =	3
@


1.4
log
@bump after default python version switch
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2011/01/14 22:42:52 ajacoutot Exp $
d8 1
a8 1
REVISION =	2
@


1.3
log
@Zap bogus category.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2010/08/30 22:24:15 jasper Exp $
d8 1
a8 1
REVISION =	1
@


1.2
log
@bumpski for python
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2010/04/21 06:48:49 giovanni Exp $
d8 2
a9 2
REVISION =	0
CATEGORIES =	devel python
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d8 1
@


1.1.1.1
log
@
Import py-mox, a mock object framework for Python

Mox will make mock objects for you, so you don't have to create
your own! It mocks the public/protected interfaces of Python objects.
You set up your mock objects expected behavior using a domain
specific language (DSL), which makes it easy to use, understand,
and refactor!
@
text
@@
