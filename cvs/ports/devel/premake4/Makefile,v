head	1.5;
access;
symbols
	jca_20161204:1.1.1.1 jca:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2017.02.27.11.17.29;	author jca;	state Exp;
branches;
next	1.4;
commitid	MCwD687JtnL3FaHG;

1.4
date	2016.12.05.10.35.10;	author jca;	state Exp;
branches;
next	1.3;
commitid	HjawvB7m1eSeaBka;

1.3
date	2016.12.05.10.33.22;	author jca;	state Exp;
branches;
next	1.2;
commitid	PA9WZ1biPv6jQcPl;

1.2
date	2016.12.04.11.43.09;	author jca;	state Exp;
branches;
next	1.1;
commitid	HW3KFSrR1jUO94dh;

1.1
date	2016.12.04.11.31.35;	author jca;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Tu7XrY2NWkwYWWp2;

1.1.1.1
date	2016.12.04.11.31.35;	author jca;	state Exp;
branches;
next	;
commitid	Tu7XrY2NWkwYWWp2;


desc
@@


1.5
log
@Don't hardcode gcc

...at build time only for now, let's hope that premake doesn't also
hardcode it at runtime.
@
text
@# $OpenBSD: Makefile,v 1.4 2016/12/05 10:35:10 jca Exp $

COMMENT=		build configuration tool

# XXX the C code embeds the lua sources that we have to patch. Use
# ''./bin/release/premake4 embed'' to regen the C files, and save a copy
# of the affected files in ${FILESDIR}.
DISTNAME=		premake-4.4-beta5-src
PKGNAME=		premake4-4.4beta5
REVISION=		0

CATEGORIES=		devel

HOMEPAGE=		https://premake.github.io

MAINTAINER=		Solene Rapenne <solene@@perso.pw>

MASTER_SITES=		${MASTER_SITE_SOURCEFORGE:=premake/}
EXTRACT_SUFX=		.zip

# BSD
PERMIT_PACKAGE_CDROM=	Yes
WANTLIB=		c m

USE_GMAKE=		Yes
MAKE_FLAGS=		CC="${CC}" \
			verbose=1

WRKDIST=		${WRKDIR}/${DISTNAME:S/-src$//}
WRKBUILD=		${WRKSRC}/build/gmake.unix

post-extract:
	perl -pi -e 's/\r$$//' ${WRKSRC}/src/base/os.lua
	cp ${FILESDIR}/scripts.c ${WRKSRC}/src/host/

do-install:
	${INSTALL_PROGRAM} ${WRKSRC}/bin/release/premake4 ${PREFIX}/bin/premake4

do-test:
	mkdir -p ${WRKSRC}/bin/debug/
	ln -sf ${WRKSRC}/bin/release/premake4 ${WRKSRC}/bin/debug/premake4
	cd ${WRKSRC}/tests ; /bin/sh test

.include <bsd.port.mk>
@


1.4
log
@In os.getversion() avoid using a pointer to invalid stack storage.

The comment is wrong, the issue is not specific to glibc...

ok Solene Rapenne (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2016/12/05 10:33:22 jca Exp $
d26 2
a27 1
MAKE_FLAGS=		verbose=1
@


1.3
log
@Use ln -sf in the test setup, so it can run multiple times

ok Solene Rapenne (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2016/12/04 11:43:09 jca Exp $
d10 1
@


1.2
log
@Err, port mostly from Solene Rapenne, who also takes maintainership.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2016/12/04 11:31:35 jca Exp $
d39 1
a39 1
	ln -s ${WRKSRC}/bin/release/premake4 ${WRKSRC}/bin/debug/premake4
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d14 2
@


1.1.1.1
log
@Import premake, a build configuration tool

ok awolk@@

pkg/DESCR:
Premake is a command line utility which reads a scripted definition of
a software project and, most commonly, uses it to generate project
files for toolsets like Visual Studio, Xcode, or GNU Make.

Official documentation
https://github.com/premake/premake-4.x/wiki
@
text
@@
