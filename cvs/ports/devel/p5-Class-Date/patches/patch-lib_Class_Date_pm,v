head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.12
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.10
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.11.14.02.00.22;	author bluhm;	state Exp;
branches;
next	;
commitid	Refj5Xqgbqui9A2e;


desc
@@


1.1
log
@- update p5-Class-Date to 1.1.15
- take maintainer
- sort according to Makefile.template
- use POSIX::strftime() which handles the time zone field correctly
- remove XS for strftime() implementation and disable dynamic linking
- disable NOTZ_TIMEZONE, it breaks in Europe/London during winter time
OK sthen@@
@
text
@$OpenBSD$
--- lib/Class/Date.pm.orig	Mon May  5 04:20:17 2014
+++ lib/Class/Date.pm	Thu Nov 13 23:13:02 2014
@@@@ -14,7 +14,6 @@@@ use vars qw(
 use Carp;
 
 use Exporter;
-use DynaLoader;
 use Time::Local;
 use Class::Date::Const;
 use Scalar::Util qw(blessed);
@@@@ -32,17 +31,13 @@@@ BEGIN { 
         *timegm = *Time::Local::timegm;
     }
 
-    @@ISA=qw(DynaLoader Exporter);
+    @@ISA=qw(Exporter);
     %EXPORT_TAGS = ( errors => $Class::Date::Const::EXPORT_TAGS{errors});
     @@EXPORT_OK = (qw( date localdate gmdate now @@ERROR_MESSAGES), 
         @@{$EXPORT_TAGS{errors}});
 
     our $VERSION = '1.1.15';
-    eval { Class::Date->bootstrap($VERSION); };
-    if ($@@) {
-        warn "Cannot find the XS part of Class::Date, \n".
-            "   using strftime, tzset and tzname from POSIX module.\n"
-                if $WARNINGS;
+    {
         require POSIX;
         *strftime_xs = *POSIX::strftime;
         *tzset_xs = *POSIX::tzset;
@@@@ -59,7 +54,7 @@@@ $DATE_FORMAT="%Y-%m-%d %H:%M:%S";
 
 sub _set_tz { my ($tz) = @@_;
     my $lasttz = $ENV{TZ};
-    if (!defined $tz || $tz eq $NOTZ_TIMEZONE) {
+    if (!defined $tz) {
         # warn "_set_tz: deleting TZ\n";
         delete $ENV{TZ};
         Env::C::unsetenv('TZ') if exists $INC{"Env/C.pm"};
@
