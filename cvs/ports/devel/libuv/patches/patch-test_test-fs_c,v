head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.4
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	edd_20170214:1.1.1.1
	edd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2017.02.14.09.37.16;	author edd;	state Exp;
branches
	1.1.1.1;
next	;
commitid	WOW0jZHUGWKjSlN4;

1.1.1.1
date	2017.02.14.09.37.16;	author edd;	state Exp;
branches;
next	;
commitid	WOW0jZHUGWKjSlN4;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

Workaround for a minor bug:
https://github.com/libuv/libuv/issues/1216

--- test/test-fs.c.orig	Wed Feb  1 00:38:56 2017
+++ test/test-fs.c	Thu Feb  9 22:06:12 2017
@@@@ -1621,7 +1621,7 @@@@ TEST_IMPL(fs_realpath) {
   uv_fs_t req;
 
   loop = uv_default_loop();
-  ASSERT(0 == uv_fs_realpath(loop, &req, "no_such_file", dummy_cb));
+  ASSERT(0 == uv_fs_realpath(loop, &req, "no_such_dir/no_such_file", dummy_cb));
   ASSERT(0 == uv_run(loop, UV_RUN_DEFAULT));
   ASSERT(dummy_cb_count == 1);
   ASSERT(req.ptr == NULL);
@@@@ -1637,7 +1637,7 @@@@ TEST_IMPL(fs_realpath) {
   ASSERT(req.result == UV_ENOENT);
   uv_fs_req_cleanup(&req);
 
-  ASSERT(UV_ENOENT == uv_fs_realpath(NULL, &req, "no_such_file", NULL));
+  ASSERT(UV_ENOENT == uv_fs_realpath(NULL, &req, "no_such_dir/no_such_file", NULL));
   ASSERT(req.ptr == NULL);
   ASSERT(req.result == UV_ENOENT);
   uv_fs_req_cleanup(&req);
@


1.1.1.1
log
@Import libuv: A cross-platform asynchronous I/O library.

Based on work by dcoppa@@. OK abieber@@, jca@@. Thanks.

@
text
@@
