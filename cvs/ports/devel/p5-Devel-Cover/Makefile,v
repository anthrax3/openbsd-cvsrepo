head	1.18;
access;
symbols
	OPENBSD_6_1:1.16.0.4
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.2
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.13.0.4
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.12.0.4
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.2
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.8.0.6
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.4
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	simon_20080906:1.1.1.1
	simon:1.1.1;
locks; strict;
comment	@# @;


1.18
date	2017.05.12.07.15.48;	author benoit;	state Exp;
branches;
next	1.17;
commitid	gX7WBPFMS2pPzxLO;

1.17
date	2017.05.06.21.36.02;	author benoit;	state Exp;
branches;
next	1.16;
commitid	5VIwIts5dLAL7PC2;

1.16
date	2016.03.20.19.56.20;	author naddy;	state Exp;
branches;
next	1.15;
commitid	WXJcpbKc0PauxEav;

1.15
date	2015.09.21.06.30.02;	author benoit;	state Exp;
branches;
next	1.14;
commitid	JlIm5adXzZepfUaq;

1.14
date	2015.09.01.07.04.04;	author benoit;	state Exp;
branches;
next	1.13;
commitid	6v7RJF7oacnRllfd;

1.13
date	2015.07.16.23.57.21;	author ajacoutot;	state Exp;
branches;
next	1.12;
commitid	tdKVYJOlplb8bzTQ;

1.12
date	2014.06.14.23.24.55;	author sthen;	state Exp;
branches;
next	1.11;
commitid	Df1iXE2gVS6WfgeA;

1.11
date	2013.03.23.22.24.34;	author benoit;	state Exp;
branches;
next	1.10;

1.10
date	2013.03.11.10.50.16;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2012.08.23.15.05.15;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2011.06.01.17.41.49;	author jasper;	state Exp;
branches;
next	1.7;

1.7
date	2010.12.03.11.44.30;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2010.11.15.19.46.02;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2010.10.18.17.47.59;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2010.09.24.15.23.07;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.13.19.46.11;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.02.20.35.09;	author simon;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.06.09.53.05;	author simon;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.06.09.53.05;	author simon;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Update to p5-Devel-Cover-1.25.
@
text
@# $OpenBSD: Makefile,v 1.17 2017/05/06 21:36:02 benoit Exp $

COMMENT =	code coverage metrics for Perl

MODULES =	cpan
DISTNAME =	Devel-Cover-1.25
CATEGORIES =	devel

# Perl
PERMIT_PACKAGE_CDROM =		Yes

WANTLIB += c perl

RUN_DEPENDS =	devel/p5-Pod-Coverage \
		devel/p5-Test-Differences \
		textproc/p5-PPI-HTML \
		textproc/p5-Template \
		converters/p5-JSON-MaybeXS
TEST_DEPENDS =	devel/p5-Test-Warn

.include <bsd.port.mk>
@


1.17
log
@Update to p5-Devel-Cover-1.24.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2016/03/20 19:56:20 naddy Exp $
d6 1
a6 1
DISTNAME =	Devel-Cover-1.24
d17 2
a18 1
		textproc/p5-Template
@


1.16
log
@Remove SHARED_ONLY from all CPAN Perl ports and the cpan and perl MODULES.
Add WANTLIB+=perl and PKG_ARCH=* as appropriate.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2015/09/21 06:30:02 benoit Exp $
d6 1
a6 1
DISTNAME =	Devel-Cover-1.21
@


1.15
log
@Update to p5-Devel-Cover-1.21.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2015/09/01 07:04:04 benoit Exp $
a3 1
SHARED_ONLY =	Yes
d12 1
a12 1
WANTLIB += c
@


1.14
log
@Update to p5-Devel-Cover-1.20.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2015/07/16 23:57:21 ajacoutot Exp $
d7 1
a7 1
DISTNAME =	Devel-Cover-1.20
d19 1
a19 1
TEST_DEPENDS=devel/p5-Test-Warn
@


1.13
log
@Remove the perl bullshit.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2014/06/14 23:24:55 sthen Exp $
d7 1
a7 1
DISTNAME =	Devel-Cover-1.00
a8 1
REVISION =	1
@


1.12
log
@@@comment zero-byte perl .bs files
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2013/03/23 22:24:34 benoit Exp $
d9 1
a9 1
REVISION =	0
@


1.11
log
@- update p5-Devel-Cover to 1.00
- remove USE_GROFF
- regen PLIST
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2013/03/11 10:50:16 espie Exp $
d9 1
@


1.10
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2012/08/23 15:05:15 sthen Exp $
d7 1
a7 2
DISTNAME =	Devel-Cover-0.78
REVISION =	0
a8 1
USE_GROFF =	Yes
@


1.9
log
@sync wantlib
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2011/06/01 17:41:49 jasper Exp $
a13 3
PERMIT_PACKAGE_FTP =		Yes
PERMIT_DISTFILES_CDROM =	Yes
PERMIT_DISTFILES_FTP =		Yes
d21 1
a21 1
REGRESS_DEPENDS=devel/p5-Test-Warn
@


1.8
log
@update to Devel-Cover-0.78
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2010/12/03 11:44:30 ajacoutot Exp $
d8 1
d17 2
@


1.7
log
@Bump after recent cpan.port.mk change.
ok jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2010/11/15 19:46:02 espie Exp $
d7 1
a7 2
DISTNAME =	Devel-Cover-0.64
REVISION =	2
d21 1
@


1.6
log
@move depends to new style
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2010/10/18 17:47:59 espie Exp $
d8 1
a8 1
REVISION =	1
@


1.5
log
@USE_GROFF=Yes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2010/09/24 15:23:07 sthen Exp $
d18 4
a21 4
RUN_DEPENDS =	::devel/p5-Pod-Coverage \
		::devel/p5-Test-Differences \
		::textproc/p5-PPI-HTML \
		::textproc/p5-Template
@


1.4
log
@bump
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2010/07/13 19:46:11 sthen Exp $
d10 1
@


1.3
log
@use REVISION
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2008/10/02 20:35:09 simon Exp $
d8 1
a8 1
REVISION =	0
@


1.2
log
@bump SHARED_ONLY ports so they get updated and work with the new perl

feedback and ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2008/09/06 09:53:05 simon Exp $
d8 1
a8 1
PKGNAME =	p5-${DISTNAME}p0
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d8 1
@


1.1.1.1
log
@import p5-Devel-Cover

This module provides code coverage metrics for Perl.  Code coverage
metrics describe how thoroughly tests exercise code.  By using
Devel::Cover you can discover areas of code not exercised by your tests
and determine which tests to create to increase coverage.  Code coverage
can be considered as an indirect measure of quality.
@
text
@@
