head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2016.06.29.10.10.48;	author dcoppa;	state dead;
branches;
next	1.2;
commitid	q31BdFO5S9A6MVRv;

1.2
date	2016.06.03.13.25.26;	author dcoppa;	state Exp;
branches;
next	1.1;
commitid	cmlVEYqCwkbceUVS;

1.1
date	2016.03.24.13.21.45;	author dcoppa;	state Exp;
branches;
next	;
commitid	Cwf714T7EFDOnB0j;


desc
@@


1.3
log
@
Update to jsoncpp-1.7.3
@
text
@$OpenBSD: patch-include_json_config_h,v 1.2 2016/06/03 13:25:26 dcoppa Exp $

Generalize setting of JSONCPP_OVERRIDE to all compilers
(upstream git commit ba6fa48d31091a151b10dd47986602889731a893)

--- include/json/config.h.orig	Fri Mar 25 21:09:15 2016
+++ include/json/config.h	Fri Jun  3 15:11:34 2016
@@@@ -77,12 +77,16 @@@@
 
 #endif // defined(_MSC_VER)
 
-#if defined(_MSC_VER) && _MSC_VER <= 1600 // MSVC <= 2010
-# define JSONCPP_OVERRIDE
-#else
+// In c++11 the override keyword allows you to explicity define that a function
+// is intended to override the base-class version.  This makes the code more
+// managable and fixes a set of common hard-to-find bugs.
+#if __cplusplus >= 201103L 
 # define JSONCPP_OVERRIDE override
-#endif // MSVC <= 2010
-
+#elif defined(_MSC_VER) && _MSC_VER > 1600
+# define JSONCPP_OVERRIDE override
+#else
+# define JSONCPP_OVERRIDE
+#endif
 
 #ifndef JSON_HAS_RVALUE_REFERENCES
 
@


1.2
log
@
Generalize setting of JSONCPP_OVERRIDE to all compilers
(upstream git commit ba6fa48d31091a151b10dd47986602889731a893)

Fix int->char conversions
(upstream git commit ea4af183171bcc1d775af301d9e8bd8db9405cc7)
@
text
@d1 1
a1 1
$OpenBSD: patch-include_json_config_h,v 1.1 2016/03/24 13:21:45 dcoppa Exp $
@


1.1
log
@
Update to jsoncpp-1.7.1
@
text
@d1 8
a8 4
$OpenBSD$
--- include/json/config.h.orig	Thu Mar 24 12:52:55 2016
+++ include/json/config.h	Thu Mar 24 12:55:39 2016
@@@@ -77,7 +77,7 @@@@
d13 6
a18 3
+#if defined(__OpenBSD__) || (defined(_MSC_VER) && _MSC_VER <= 1600) // MSVC <= 2010
 # define JSONCPP_OVERRIDE
 #else
d20 10
@

