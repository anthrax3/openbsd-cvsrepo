head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.10
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.8
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.6
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2015.03.16.19.39.45;	author landry;	state Exp;
branches;
next	1.2;
commitid	E2dWp233ZhTrt9El;

1.2
date	2015.01.15.21.50.19;	author landry;	state Exp;
branches;
next	1.1;
commitid	gx9tYPs1ziVDGJRr;

1.1
date	2013.06.23.18.36.50;	author landry;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to nspr 4.10.8.

- https://groups.google.com/forum/#!topic/mozilla.dev.tech.nspr/6yPZqtZhHzM
- remove rwlockrank.c patch, merged in #1072454
- remove chunk of patch-nspr_pr_src_pthreads_ptthread_c, merged upstream
  in #756047. Leave chunk about pthread_set_name_np() returning void, to
be upstreamed
- use PATH_MAX instead of MAXPATHLEN in patch-nspr_pr_src_linking_prlink_c
@
text
@$OpenBSD: patch-nspr_pr_src_linking_prlink_c,v 1.2 2015/01/15 21:50:19 landry Exp $
If dlopen() fails, retry with everything stripped after .so
https://bugzilla.mozilla.org/show_bug.cgi?id=650772
--- nspr/pr/src/linking/prlink.c.orig	Thu Jan 22 21:44:59 2015
+++ nspr/pr/src/linking/prlink.c	Mon Mar 16 20:25:03 2015
@@@@ -11,6 +11,10 @@@@
 #include <image.h>
 #endif
 
+#if defined(OPENBSD)
+#include <limits.h> /* for PATH_MAX */
+#endif
+
 #if defined(XP_MACOSX) && defined(USE_MACH_DYLD)
 #include <Carbon/Carbon.h>
 #include <CoreFoundation/CoreFoundation.h>
@@@@ -777,6 +781,10 @@@@ pr_LoadLibraryByPathname(const char *name, PRIntn flag
 #else
     int dl_flags = 0;
 #endif
+#if defined(OPENBSD)
+    char sname[PATH_MAX];
+    char *c;
+#endif
     void *h = NULL;
 
     if (flags & PR_LD_LAZY) {
@@@@ -801,7 +809,18 @@@@ pr_LoadLibraryByPathname(const char *name, PRIntn flag
         }
 #else
     h = dlopen(name, dl_flags);
+#if defined(OPENBSD)
+    /* On OpenBSD, we don't know what can be major.minor in libfoo.so.major.minor */
+    /* but ld.so is smart enough to open the correct lib when asked for libfoo.so */
+    /* so if the previous dlopen() failed, let's strip what's after .so and retry */
+    strncpy(sname, name, PATH_MAX);
+    if (!h) {
+        if ((c = strstr(sname,".so")) != NULL)
+            c[3] = '\0';
+        h = dlopen(sname, dl_flags);
+    }
 #endif
+#endif
 #elif defined(USE_HPSHL)
     int shl_flags = 0;
     shl_t h;
@@@@ -832,7 +851,11 @@@@ pr_LoadLibraryByPathname(const char *name, PRIntn flag
         PR_DELETE(lm);
         goto unlock;
     }
+#if defined(OPENBSD)
+    lm->name = strdup(sname);
+#else
     lm->name = strdup(name);
+#endif
     lm->dlh = h;
     lm->next = pr_loadmap;
     pr_loadmap = lm;
@


1.2
log
@Subtly fix a OpenBSD/OPENBSD mistake that crept in r1.1.
NSPR headers define OPENBSD (which is what we need to know what OS we're
on), sys/param.h defines OpenBSD. And MAXPATHLEN, which is used in that
patch. Oh well, fix it this way for now, pending a better fix.
@
text
@d1 1
a1 1
$OpenBSD: patch-nspr_pr_src_linking_prlink_c,v 1.1 2013/06/23 18:36:50 landry Exp $
d4 2
a5 2
--- nspr/pr/src/linking/prlink.c.orig	Tue May 28 23:39:29 2013
+++ nspr/pr/src/linking/prlink.c	Wed Jun 12 21:26:27 2013
d11 1
a11 1
+#include <sys/param.h> /* for MAXPATHLEN */
d22 1
a22 1
+    char sname[MAXPATHLEN];
d36 1
a36 1
+    strncpy(sname, name, MAXPATHLEN);
@


1.1
log
@Update to nspr 4.10.

http://mozilla.6506.n7.nabble.com/ANNOUNCE-NSPR-4-10-Release-td280660.html

After years of sticking to CVS, upstream finally switched to hg,
changing its directory layout while here. All our patches are actually
unchanged, but got renamed/moved. CVS doesn't handle moves :)

Tested in an amd64 bulk build.
@
text
@d1 1
a1 1
$OpenBSD$
d10 1
a10 1
+#if defined(OpenBSD)
d21 1
a21 1
+#if defined(OpenBSD)
@

