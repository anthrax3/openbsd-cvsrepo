head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.1.1.0.12
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.10
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.8
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.6
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.4
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.2
	OPENBSD_3_9_BASE:1.1.1.1
	aanriot_20050920:1.1.1.1
	aanriot:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.10.01.04.52.19;	author ckuethe;	state dead;
branches;
next	1.1;

1.1
date	2005.09.20.15.22.42;	author aanriot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.09.20.15.22.42;	author aanriot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to gcc-4.2.2. adds support for lots of new devices, makes it possible
to compile arduino compatible code. based on the freebsd port
@
text
@$OpenBSD: patch-gcc_Makefile_in,v 1.1 2005/09/20 15:22:42 aanriot Exp $
--- gcc/Makefile.in.orig	Thu Feb 24 10:26:57 2005
+++ gcc/Makefile.in	Sat Jun 25 18:22:28 2005
@@@@ -2963,12 +2963,7 @@@@ install-driver: installdirs xgcc$(exeext
 # Install the info files.
 # $(INSTALL_DATA) might be a relative pathname, so we can't cd into srcdir
 # to do the install.
-install-info:: doc installdirs \
-	$(DESTDIR)$(infodir)/cpp.info \
-	$(DESTDIR)$(infodir)/gcc.info \
-	$(DESTDIR)$(infodir)/cppinternals.info \
-	$(DESTDIR)$(infodir)/gccinstall.info \
-	$(DESTDIR)$(infodir)/gccint.info
+install-info::
 
 $(DESTDIR)$(infodir)/%.info: doc/%.info installdirs
 	rm -f $@@
@@@@ -3139,8 +3134,6 @@@@ uninstall: lang.uninstall
 	-rm -rf $(DESTDIR)$(man1dir)/cpp$(man1ext)
 	-rm -rf $(DESTDIR)$(man1dir)/protoize$(man1ext)
 	-rm -rf $(DESTDIR)$(man1dir)/unprotoize$(man1ext)
-	-rm -f $(DESTDIR)$(infodir)/cpp.info* $(DESTDIR)$(infodir)/gcc.info*
-	-rm -f $(DESTDIR)$(infodir)/cppinternals.info* $(DESTDIR)$(infodir)/gccint.info*
 #
 # These targets are for the dejagnu testsuites. The file site.exp
 # contains global variables that all the testsuites will use.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import avr, a Atmel AVR 8-bit RISC microcontrollers' framework.

It's composed by binutils, gcc, libc, and gdb, for these microcontrollers.

ok martin@@, review and ok espie@@

@
text
@@
