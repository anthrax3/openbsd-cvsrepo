head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.30
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.28
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.26
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.22
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.24
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.20
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.18
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.16
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.14
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.12
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.10
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2010.06.27.20.58.10;	author ckuethe;	state Exp;
branches;
next	1.2;

1.2
date	2009.12.09.16.55.52;	author ckuethe;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.01.04.46.20;	author ckuethe;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to the latest AVR gcc, binutils, libc and gdb. Based on the FreeBSD
port, which is also in sync with winavr/avrstudio. Among other things, this
adds support for atmega328... which means new arduino boards should work.
@
text
@$OpenBSD$
--- opcodes/avr-dis.c.orig	Sat Jun 26 11:22:38 2010
+++ opcodes/avr-dis.c	Sat Jun 26 11:31:17 2010
@@@@ -50,7 +50,7 @@@@ static const char * comment_start = "0x";
 
 static int
 avr_operand (unsigned int insn, unsigned int insn2, unsigned int pc, int constraint,
-             char *buf, char *comment, int regs, int *sym, bfd_vma *sym_addr)
+             char *opcode_str, char *buf, char *comment, int regs, int *sym, bfd_vma *sym_addr)
 {
   int ok = 1;
   *sym = 0;
@@@@ -118,8 +118,18 @@@@ avr_operand (unsigned int insn, unsigned int insn2, un
 
     case 'z':
       *buf++ = 'Z';
-      if (insn & 0x1)
-	*buf++ = '+';
+
+      /* Check for post-increment. */
+      char *s;
+      for (s = opcode_str; *s; ++s)
+        {
+          if (*s == '+')
+            {
+              *buf++ = '+';
+              break;
+            }
+        }
+
       *buf = '\0';
       if (AVR_UNDEF_P (insn))
 	sprintf (comment, _("undefined"));
@@@@ -226,6 +236,10 @@@@ avr_operand (unsigned int insn, unsigned int insn2, un
 	sprintf (comment, "%d", x);
       }
       break;
+
+    case 'E':
+      sprintf (buf, "%d", (insn >> 4) & 15);
+      break;
       
     case '?':
       *buf = '\0';
@@@@ -331,7 +345,8 @@@@ print_insn_avr (bfd_vma addr, disassemble_info *info)
 
   if (opcode->name)
     {
-      char *op = opcode->constraints;
+      char *constraints = opcode->constraints;
+      char *opcode_str = opcode->opcode;
 
       insn2 = 0;
       ok = 1;
@@@@ -342,14 +357,14 @@@@ print_insn_avr (bfd_vma addr, disassemble_info *info)
 	  cmd_len = 4;
 	}
 
-      if (*op && *op != '?')
+      if (*constraints && *constraints != '?')
 	{
-	  int regs = REGISTER_P (*op);
+	  int regs = REGISTER_P (*constraints);
 
-	  ok = avr_operand (insn, insn2, addr, *op, op1, comment1, 0, &sym_op1, &sym_addr1);
+	  ok = avr_operand (insn, insn2, addr, *constraints, opcode_str, op1, comment1, 0, &sym_op1, &sym_addr1);
 
-	  if (ok && *(++op) == ',')
-	    ok = avr_operand (insn, insn2, addr, *(++op), op2,
+	  if (ok && *(++constraints) == ',')
+	    ok = avr_operand (insn, insn2, addr, *(++constraints), opcode_str, op2,
 			      *comment1 ? comment2 : comment1, regs, &sym_op2, &sym_addr2);
 	}
     }
@


1.2
log
@based on the freebsd port, update to binutils 2.19.1. adds support for
a whole bunch of new devices.
@
text
@d2 2
a3 2
--- opcodes/avr-dis.c.orig	Thu Jul  5 02:49:00 2007
+++ opcodes/avr-dis.c	Sun Dec  6 21:48:54 2009
@


1.1
log
@update to binutils 2.18, plus some new devices. based on the freebsd port.
@
text
@d2 2
a3 2
--- opcodes/avr-dis.c.orig	Mon Aug  6 12:58:38 2007
+++ opcodes/avr-dis.c	Sat Sep 27 20:20:28 2008
@

