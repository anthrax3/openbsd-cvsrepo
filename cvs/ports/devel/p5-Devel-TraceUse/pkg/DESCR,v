head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.1.1.0.12
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.14
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.10
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	ports:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.04.28.14.13.44;	author rpe;	state Exp;
branches;
next	1.1;
commitid	dk0lFlOf8DNsA8cN;

1.1
date	2012.09.01.17.11.02;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.09.01.17.11.02;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update devel/p5-Devel-TraceUse to 2.094

OK aja@@, sthen@@
@
text
@Devel::TraceUse can analyze a program to see which part used which module.

Command-line usage:

$ perl -d:TraceUse myprog.pl

will display a tree of the modules ultimately used to run your
program. (It also runs your program all the way through to the end with
a small startup cost.)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
Devel::TraceUse can analyze a program to see which part used which module. 
@


1.1.1.1
log
@Devel::TraceUse, simple way to know whether your perl script pulls
the kitchen sink in.

landry@@ approved.
@
text
@@
