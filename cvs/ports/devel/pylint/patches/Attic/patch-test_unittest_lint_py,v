head	1.3;
access;
symbols
	OPENBSD_5_9:1.2.0.16
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.18
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.14
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.12
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.16
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.14
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	alek_20070504:1.1.1.1
	alek:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.04.27.12.05.02;	author shadchin;	state dead;
branches;
next	1.2;
commitid	EhWoOaZhMEZamjaK;

1.2
date	2011.08.31.12.42.24;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.04.17.43.27;	author alek;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.05.04.17.43.27;	author alek;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to pylint 1.5.5
Add python3 flavor and take maintainership.

ok danj@@
@
text
@$OpenBSD: patch-test_unittest_lint_py,v 1.2 2011/08/31 12:42:24 mpi Exp $
--- test/unittest_lint.py.orig	Mon Jul 18 16:42:45 2011
+++ test/unittest_lint.py	Fri Aug 19 10:16:23 2011
@@@@ -265,6 +265,12 @@@@
         os.environ.pop('PYLINTRC', None)
 
     def test_pylint_home(self):
+        if os.environ.has_key('PYLINTHOME'):
+            pylintd = os.environ['PYLINTHOME']
+            reload(config)
+            self.assertEquals(config.PYLINT_HOME, pylintd)
+            return
+
         uhome = os.path.expanduser('~')
         if uhome == '~':
             expected = '.pylint.d'
@


1.2
log
@update to pylint 0.24.0, maintainer timeout

ok rpointel@@, benoit@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d2 3
a4 12
--- test/unittest_lint.py.orig	Fri Aug 25 16:43:27 2006
+++ test/unittest_lint.py	Mon Apr  9 14:04:05 2007
@@@@ -82,7 +82,7 @@@@ class RunTC(TestCase):
         self._test_run([], 1)
         
     def test_no_ext_file(self):
-        self._test_run([join(INPUTDIR, 'noext')], no_exit_fail=False)
+        self._test_run(['--persistent=n', join(INPUTDIR, 'noext')], no_exit_fail=False)
 
         
 class PyLinterTC(TestCase):
@@@@ -232,6 +232,12 @@@@ class ConfigTC(TestCase):
@


1.1.1.1
log
@Import 0.13.1

Pylint is a lint-like tool for Python code. It performs almost all the
verifications that pychecker does, and additionally can perform some
stylistic verification and coding standard enforcements. The checked
code is assigned a mark based on the number and the severity of the
encountered problems. The previous mark of a given piece of code is
cached so that you can see if the code quality has improved since the
last check.

From Andreas Bihlmaier <andreas.bihlmaier@@gmx.de>                           
									
With help and one okey from bernd@@ and steven@@
@
text
@@
