head	1.2;
access;
symbols
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	jasper_20131801:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.09.24.22.17.39;	author jasper;	state dead;
branches;
next	1.1;
commitid	V2oHptolKsJ58SPo;

1.1
date	2013.01.18.17.07.33;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.01.18.17.07.33;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@i made you a patch, but i omitted it.

from rpe@@, ok jeremy@@
committing now so nobody else wastes 15Gb on pointless logfiles
@
text
@$OpenBSD: patch-ext_vector_complex_c,v 1.1 2013/01/18 17:07:33 jasper Exp $

Fix conflicting types.

--- ext/vector_complex.c.orig	Fri Jan 18 10:53:55 2013
+++ ext/vector_complex.c	Fri Jan 18 10:54:32 2013
@@@@ -1986,7 +1986,7 @@@@ static VALUE rb_gsl_vector_complex_zip(int argc, VALUE
   return ary;
 }
 
-static int gsl_vector_complex_equal(const gsl_vector_complex *v1,
+static int gsl_vector_complex_equal_with_eps(const gsl_vector_complex *v1,
   const gsl_vector_complex *v2, double eps)
 {
   gsl_complex z1, z2;
@@@@ -2019,7 +2019,7 @@@@ static VALUE rb_gsl_vector_complex_equal(int argc, VAL
   Data_Get_Struct(obj, gsl_vector_complex, v1);
   CHECK_VECTOR_COMPLEX(argv[0]);
   Data_Get_Struct(argv[0], gsl_vector_complex, v2);
-  ret = gsl_vector_complex_equal(v1, v2, eps);
+  ret = gsl_vector_complex_equal_with_eps(v1, v2, eps);
   if (ret == 1) return Qtrue;
   else return Qfalse;
 }
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import ruby-rb-gsl-1.14.7

Ruby/GSL is a Ruby interface to the GNU Scientific Library, for
numerical computing with Ruby.

ok jeremy@@
@
text
@@
