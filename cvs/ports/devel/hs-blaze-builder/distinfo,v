head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.12
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.10
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.8
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.4
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	jasper_20101312:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2014.11.27.21.30.16;	author kili;	state Exp;
branches;
next	1.6;
commitid	ejFPQvWIJzZbZQi7;

1.6
date	2013.07.18.22.07.18;	author kili;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.23.20.22.46;	author kili;	state Exp;
branches;
next	1.4;

1.4
date	2011.04.12.12.00.24;	author kili;	state Exp;
branches;
next	1.3;

1.3
date	2010.12.19.17.43.30;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.17.21.45.32;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.13.08.28.27;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.12.13.08.28.27;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to blaze-builder-0.3.3.4
@
text
@SHA256 (ghc/blaze-builder-0.3.3.4.tar.gz) = 5cEQHmoNtO6F4L9X/nl73W9e6VQu5zCmYwMOtlCsr4s=
SIZE (ghc/blaze-builder-0.3.3.4.tar.gz) = 67399
@


1.6
log
@Update to blaze-builder-0.3.1.1.
@
text
@d1 2
a2 2
SHA256 (ghc/blaze-builder-0.3.1.1.tar.gz) = oSUG+K/WUOTtkOHiN5dQA1+OgwMqLSYOrMN1f+Us3N4=
SIZE (ghc/blaze-builder-0.3.1.1.tar.gz) = 69061
@


1.5
log
@New distinfo after DIST_SUBDIR change in ghc.port.mk.
@
text
@d1 2
a2 5
MD5 (ghc/blaze-builder-0.2.1.4.tar.gz) = /v1bGnIQTINQNCh8pFkUYA==
RMD160 (ghc/blaze-builder-0.2.1.4.tar.gz) = 0fOJA7kpYVuPPSHthogd0bAkd9U=
SHA1 (ghc/blaze-builder-0.2.1.4.tar.gz) = lto6I9Yr3jIz+/1wObvQUtlnRNQ=
SHA256 (ghc/blaze-builder-0.2.1.4.tar.gz) = wohFYo4HGqQY7RPusDcm4HADnDKFptJfSjsoDrmQFGQ=
SIZE (ghc/blaze-builder-0.2.1.4.tar.gz) = 60358
@


1.4
log
@Update to 0.2.1.4.

ok jasper@@
@
text
@d1 5
a5 5
MD5 (blaze-builder-0.2.1.4.tar.gz) = /v1bGnIQTINQNCh8pFkUYA==
RMD160 (blaze-builder-0.2.1.4.tar.gz) = 0fOJA7kpYVuPPSHthogd0bAkd9U=
SHA1 (blaze-builder-0.2.1.4.tar.gz) = lto6I9Yr3jIz+/1wObvQUtlnRNQ=
SHA256 (blaze-builder-0.2.1.4.tar.gz) = wohFYo4HGqQY7RPusDcm4HADnDKFptJfSjsoDrmQFGQ=
SIZE (blaze-builder-0.2.1.4.tar.gz) = 60358
@


1.3
log
@- update hs-blade-builder to 0.2.1.3
@
text
@d1 5
a5 5
MD5 (blaze-builder-0.2.1.3.tar.gz) = tFR7XsDN1dcQMycGNlYRSw==
RMD160 (blaze-builder-0.2.1.3.tar.gz) = Bxi5rUPrtXEcFaavFJ8RLip1X5U=
SHA1 (blaze-builder-0.2.1.3.tar.gz) = x9ET0oU9AShtTRj0VOQieoAUNM0=
SHA256 (blaze-builder-0.2.1.3.tar.gz) = kAqxlMpFpKuhqak4OY/jrpmdwYoqOt6Jz1LNcHLjRQs=
SIZE (blaze-builder-0.2.1.3.tar.gz) = 60277
@


1.2
log
@- update hs-blaze-builder to 0.2.1.2
@
text
@d1 5
a5 5
MD5 (blaze-builder-0.2.1.2.tar.gz) = e0FlM/GfuYqnzN0fNF5bpg==
RMD160 (blaze-builder-0.2.1.2.tar.gz) = D559WleZ9Rs5MRAygrPBG6X06TA=
SHA1 (blaze-builder-0.2.1.2.tar.gz) = YJv2MW7wFWixG+o8umXEfiT93gs=
SHA256 (blaze-builder-0.2.1.2.tar.gz) = iV4lbOvwHPML6vd0RHP5gxGHa0Bvaa4oBRY437fnryg=
SIZE (blaze-builder-0.2.1.2.tar.gz) = 60214
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
MD5 (blaze-builder-0.2.1.1.tar.gz) = GwJpJqNsD/TSItlmtpmBqg==
RMD160 (blaze-builder-0.2.1.1.tar.gz) = /yg+0OZejRYEnZQn8/ncdcnto8c=
SHA1 (blaze-builder-0.2.1.1.tar.gz) = VhSdIg4AQFHVUEwEmPNpNYWo6z8=
SHA256 (blaze-builder-0.2.1.1.tar.gz) = iv/LE7tjK9wmcl243MLUMWkv08ntf84qaCsnkBHwDOk=
SIZE (blaze-builder-0.2.1.1.tar.gz) = 60193
@


1.1.1.1
log
@import hs-blaze-builder 0.2.1.1

This library provides an abstraction of buffered output of byte streams
and several convenience functions to exploit it. For example, it allows
to efficiently serialize Haskell values to lazy bytestrings with a large
average chunk size. The large average chunk size allows to make good use
of cache prefetching in later processing steps (e.g. compression) and
reduces the sytem call overhead when writing the resulting lazy
bytestring to a file or sending it over the network.

ok kili@@
@
text
@@
