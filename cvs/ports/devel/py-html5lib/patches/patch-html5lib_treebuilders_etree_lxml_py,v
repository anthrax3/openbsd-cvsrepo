head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.05.02.18.10.09;	author danj;	state Exp;
branches;
next	;
commitid	hc8lurOGCKi5HzlC;


desc
@@


1.1
log
@backport fixes for the tests with newer textproc/py-lxml

from new maintainer Sean Levy, ok landry@@
@
text
@$OpenBSD$

Backport patch from HEAD to stop test fails due to py-lxml update to 3.6.0
https://github.com/html5lib/html5lib-python/commit/0c551c9519e47f76f8f185089ed71cb9539b6e00
--- html5lib/treebuilders/etree_lxml.py.orig	Mon Sep  7 18:36:25 2015
+++ html5lib/treebuilders/etree_lxml.py	Fri Apr 22 18:50:50 2016
@@@@ -54,7 +54,7 @@@@ class Document(object):
 def testSerializer(element):
     rv = []
     finalText = None
-    infosetFilter = ihatexml.InfosetFilter()
+    infosetFilter = ihatexml.InfosetFilter(preventDoubleDashComments=True)
 
     def serializeElement(element, indent=0):
         if not hasattr(element, "tag"):
@@@@ -189,7 +189,7 @@@@ class TreeBuilder(_base.TreeBuilder):
 
     def __init__(self, namespaceHTMLElements, fullTree=False):
         builder = etree_builders.getETreeModule(etree, fullTree=fullTree)
-        infosetFilter = self.infosetFilter = ihatexml.InfosetFilter()
+        infosetFilter = self.infosetFilter = ihatexml.InfosetFilter(preventDoubleDashComments=True)
         self.namespaceHTMLElements = namespaceHTMLElements
 
         class Attributes(dict):
@@@@ -257,7 +257,7 @@@@ class TreeBuilder(_base.TreeBuilder):
             data = property(_getData, _setData)
 
         self.elementClass = Element
-        self.commentClass = builder.Comment
+        self.commentClass = Comment
         # self.fragmentClass = builder.DocumentFragment
         _base.TreeBuilder.__init__(self, namespaceHTMLElements)
 
@@@@ -344,7 +344,8 @@@@ class TreeBuilder(_base.TreeBuilder):
 
         # Append the initial comments:
         for comment_token in self.initial_comments:
-            root.addprevious(etree.Comment(comment_token["data"]))
+            comment = self.commentClass(comment_token["data"])
+            root.addprevious(comment._element)
 
         # Create the root document and add the ElementTree to it
         self.document = self.documentClass()
@
