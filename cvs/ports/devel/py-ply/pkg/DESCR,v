head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.4
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	sthen_20161007:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.10.07.10.27.30;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	r3w1Hwnalf5hQGYy;

1.1.1.1
date	2016.10.07.10.27.30;	author sthen;	state Exp;
branches;
next	;
commitid	r3w1Hwnalf5hQGYy;


desc
@@



1.1
log
@Initial revision
@
text
@PLY is an implementation of the lex and yacc parsing tools written
entirely in Python. It uses LR-parsing which is reasonably efficient and
well suited for larger grammars.

PLY provides most of the standard lex/yacc features including support
for empty productions, precedence rules, error recovery, and support for
ambiguous grammars.
@


1.1.1.1
log
@import devel/py-ply, ok/feedback (a while ago..) by danj@@, do-test from jca@@

PLY is an implementation of the lex and yacc parsing tools written
entirely in Python. It uses LR-parsing which is reasonably efficient and
well suited for larger grammars.

PLY provides most of the standard lex/yacc features including support
for empty productions, precedence rules, error recovery, and support for
ambiguous grammars.
@
text
@@
