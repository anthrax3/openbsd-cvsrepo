head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2010.03.23.21.27.03;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2009.01.17.12.30.08;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove pwlib, it has been superseded by ptlib.
@
text
@
#include <ptlib.h>
#include <ptlib/sound.h>
#include <ptlib/socket.h>

#include <sndio.h>

class PSoundChannelLIBSNDIO: public PSoundChannel
{
 public:
    PSoundChannelLIBSNDIO();
    void Construct();
    PSoundChannelLIBSNDIO(const PString &device,
                     PSoundChannel::Directions dir,
                     unsigned numChannels,
                     unsigned sampleRate,
		     unsigned bitsPerSample);
    ~PSoundChannelLIBSNDIO();
    static PStringArray GetDeviceNames(PSoundChannel::Directions = Player);
    static PString GetDefaultDevice(PSoundChannel::Directions);
    BOOL Open(const PString & _device,
              Directions _dir,
              unsigned _numChannels,
              unsigned _sampleRate,
              unsigned _bitsPerSample);
    BOOL Setup();
    BOOL Close();
    BOOL IsOpen() const;
    BOOL Write(const void * buf, PINDEX len);
    BOOL Read(void * buf, PINDEX len);
    BOOL SetFormat(unsigned numChannels,
                   unsigned sampleRate,
                   unsigned bitsPerSample);
    unsigned GetChannels() const;
    unsigned GetSampleRate() const;
    unsigned GetSampleSize() const;
    BOOL SetBuffers(PINDEX size, PINDEX count);
    BOOL GetBuffers(PINDEX & size, PINDEX & count);
    BOOL PlaySound(const PSound & sound, BOOL wait);
    BOOL PlayFile(const PFilePath & filename, BOOL wait);
    BOOL HasPlayCompleted();
    BOOL WaitForPlayCompletion();
    BOOL RecordSound(PSound & sound);
    BOOL RecordFile(const PFilePath & filename);
    BOOL StartRecording();
    BOOL IsRecordBufferFull();
    BOOL AreAllRecordBuffersFull();
    BOOL WaitForRecordBufferFull();
    BOOL WaitForAllRecordBuffersFull();
    BOOL Abort();
    BOOL SetVolume(unsigned newVal);
    BOOL GetVolume(unsigned &devVol);

  protected:
    struct sio_hdl *hdl;
    struct sio_par par;
    unsigned mNumChannels;
    unsigned mSampleRate;
    unsigned mBitsPerSample;
    unsigned mFragCount;
    unsigned mFragSize;
    unsigned mBytesPerFrame;
    Directions mDirection;
    PString mDevice;
    BOOL isInitialised;
};
@


1.1
log
@- add sndio backend
- remove OSS and esd support
ok ajacoutot@@ (MAINTAINER)
@
text
@@

