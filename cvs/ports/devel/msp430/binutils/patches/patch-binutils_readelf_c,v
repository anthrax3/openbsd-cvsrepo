head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.24
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.22
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.20
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.16
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.18
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.14
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.12
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2011.10.02.18.26.32;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Fix build with -Werror (which turns out -Wbounded).
  With and ok nicm@@
@
text
@$OpenBSD$

Fix -Wbounded warnings by using correct casts.

--- binutils/readelf.c.orig	Fri Sep 30 16:24:11 2011
+++ binutils/readelf.c	Fri Sep 30 16:28:53 2011
@@@@ -12202,8 +12202,10 @@@@ get_file_header (FILE * file)
   if (is_32bit_elf)
     {
       Elf32_External_Ehdr ehdr32;
+      /* Temporary var to prevent the GCC -Wbounded checker from firing. */
+      void *tmp = &ehdr32.e_type[0];
 
-      if (fread (ehdr32.e_type, sizeof (ehdr32) - EI_NIDENT, 1, file) != 1)
+      if (fread (tmp, sizeof (ehdr32) - EI_NIDENT, 1, file) != 1)
 	return 0;
 
       elf_header.e_type      = BYTE_GET (ehdr32.e_type);
@@@@ -12223,6 +12225,8 @@@@ get_file_header (FILE * file)
   else
     {
       Elf64_External_Ehdr ehdr64;
+      /* Temporary var to prevent the GCC -Wbounded checker from firing. */
+      void *tmp = &ehdr64.e_type[0];
 
       /* If we have been compiled with sizeof (bfd_vma) == 4, then
 	 we will not be able to cope with the 64bit data found in
@@@@ -12235,7 +12239,7 @@@@ get_file_header (FILE * file)
 	  return 0;
 	}
 
-      if (fread (ehdr64.e_type, sizeof (ehdr64) - EI_NIDENT, 1, file) != 1)
+      if (fread (tmp, sizeof (ehdr64) - EI_NIDENT, 1, file) != 1)
 	return 0;
 
       elf_header.e_type      = BYTE_GET (ehdr64.e_type);
@
