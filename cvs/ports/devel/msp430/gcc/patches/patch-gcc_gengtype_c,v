head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.8
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.6
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2015.03.15.19.56.36;	author jasper;	state Exp;
branches;
next	;
commitid	CS0X2sM8RFSHNotV;


desc
@@


1.1
log
@workaround the intermittent build failures and remove BROKEN marker.

no build failures in 132 builds on amd64
@
text
@$OpenBSD$

Quality workaround for quality code.
regcomp() would occasionally fail with REG_ESIZE for as of yet unknown
reasons. so retry it a few times..

--- gcc/gengtype.c.orig	Wed Feb 15 00:31:42 2012
+++ gcc/gengtype.c	Sun Mar 15 14:42:31 2015
@@@@ -1986,13 +1986,19 @@@@ get_output_file_with_visibility (input_file *inpf)
 	if (!files_rules[rulix].frul_re)
 	  {
 	    /* Compile the regexpr lazily.  */
-	    int err = 0;
+            int try = 1;
+again:
 	    files_rules[rulix].frul_re = XCNEW (regex_t);
-	    err = regcomp (files_rules[rulix].frul_re,
+	    if (regcomp (files_rules[rulix].frul_re,
 			   files_rules[rulix].frul_srcexpr,
-			   files_rules[rulix].frul_rflags);
-	    if (err)
+			   files_rules[rulix].frul_rflags))
 	      {
+		/* Reasonable number where it should work at least once... */
+		if (try < 10) {
+			printf("Round and round she goes, when she stops...nobody knows!\n");
+			try++;
+			goto again;
+		}
 		/* The regular expression compilation fails only when
 		   file_rules is buggy.  */
 		gcc_unreachable ();
@
