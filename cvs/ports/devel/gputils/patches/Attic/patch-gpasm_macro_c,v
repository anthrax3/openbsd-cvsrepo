head	1.3;
access;
symbols
	OPENBSD_4_5:1.2.0.22
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.20
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.18
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.16
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.14
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	naddy_20031103:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2009.06.01.23.05.32;	author benoit;	state dead;
branches;
next	1.2;

1.2
date	2004.01.30.01.01.11;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.03.01.02.35;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.03.01.02.35;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@- update gputils to 0.13.7
- remove patches & regen PLIST
- change maintainer (timeout old maintainer)
- update testsuite

ok ajacoutot@@
@
text
@$OpenBSD: patch-gpasm_macro_c,v 1.2 2004/01/30 01:01:11 naddy Exp $
--- gpasm/macro.c.orig	2004-01-21 17:17:52.000000000 +1100
+++ gpasm/macro.c	2004-01-25 20:43:22.000000000 +1100
@@@@ -150,9 +150,9 @@@@ node_to_string(struct pnode *p)
   switch(p->tag) {
   case constant:
     if (p->value.constant < 0) {
-      sprintf(constant_buffer, "-%#x", -p->value.constant);
+      snprintf(constant_buffer, sizeof(constant_buffer), "-%#x", -p->value.constant);
     } else {
-      sprintf(constant_buffer, "%#x", p->value.constant);
+      snprintf(constant_buffer, sizeof(constant_buffer), "%#x", p->value.constant);
     }
     cat_string(constant_buffer);
     break;
@@@@ -230,12 +230,12 @@@@ void setup_macro(struct macro_head *h, i
 
 /* Copy the macro body to a buffer. */
 
-void copy_macro_body(struct macro_body *b, char *buffer)
+void copy_macro_body(struct macro_body *b, char *buffer, size_t sizeof_buffer)
 {
   while (b) {
     if (b->src_line != NULL) {
-      strcat(buffer, b->src_line);
-      strcat(buffer, "\n");
+      strlcat(buffer, b->src_line, sizeof_buffer);
+      strlcat(buffer, "\n", sizeof_buffer);
     }
     b = b->next;
   }
@@@@ -265,10 +265,10 @@@@ make_macro_buffer(struct macro_head *h)
 
   /* Allocate memory for the new buffer. yy_delete_buffer frees it */
   macro_src = (char *)calloc(sizeof(char), macro_src_size);
-  macro_src[0] = '\0';
-
-  /* build the string to be scanned */  
-  copy_macro_body(h->body, macro_src);
+  if (macro_src) {
+    /* build the string to be scanned */  
+    copy_macro_body(h->body, macro_src, macro_src_size);
+  }
 
   return macro_src;
 }
@


1.2
log
@update to 0.12.0; from Andrew Dalgleish <openbsd@@ajd.net.au>
@
text
@d1 1
a1 1
$OpenBSD: patch-gpasm_macro_c,v 1.1.1.1 2003/11/03 01:02:35 naddy Exp $
@


1.1
log
@Initial revision
@
text
@d1 16
a16 23
$OpenBSD$
--- gpasm/macro.c.orig	2003-10-14 21:24:34.000000000 +1000
+++ gpasm/macro.c	2003-10-14 21:27:13.000000000 +1000
@@@@ -59,15 +59,15 @@@@ void setup_macro(struct macro_head *h, i
         if (pToH->tag == symbol) {
           annotate_symbol(sym, strdup(pToH->value.symbol));
         } else if (pToH->tag == string) {
-          sprintf(buffer, "\"%s\"", pToH->value.string);
+          snprintf(buffer, sizeof(buffer), "\"%s\"", pToH->value.string);
           annotate_symbol(sym, strdup(buffer));
         } else {
           int value = maybe_evaluate(pToH);
 
 	  if (value < 0)
-	    sprintf(buffer, "-%#x", -value);
+	    snprintf(buffer, sizeof(buffer), "-%#x", -value);
           else
-	    sprintf(buffer, "%#x", value);	  
+	    snprintf(buffer, sizeof(buffer), "%#x", value);	  
 	  annotate_symbol(sym, strdup(buffer));
         }
     
@@@@ -83,12 +83,12 @@@@ void setup_macro(struct macro_head *h, i
d32 1
a32 1
@@@@ -118,10 +118,10 @@@@ make_macro_buffer(struct macro_head *h)
@


1.1.1.1
log
@Import gputils 0.11.7.
Submitted by Andrew Dalgleish <openbsd@@ajd.net.au>.

GPUTILS is a collection of tools for the Microchip (TM) PIC
microcontrollers. It includes gpasm, gplink, and gplib.
@
text
@@
