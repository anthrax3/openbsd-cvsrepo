head	1.2;
access;
symbols
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	naddy_20031103:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2009.06.01.23.05.33;	author benoit;	state dead;
branches;
next	1.1;

1.1
date	2003.11.03.01.02.36;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.03.01.02.36;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update gputils to 0.13.7
- remove patches & regen PLIST
- change maintainer (timeout old maintainer)
- update testsuite

ok ajacoutot@@
@
text
@$OpenBSD: patch-libgputils_gpreadobj_c,v 1.1 2003/11/03 01:02:36 naddy Exp $
--- libgputils/gpreadobj.c.orig	2003-10-14 23:21:51.000000000 +1000
+++ libgputils/gpreadobj.c	2003-10-14 23:23:07.000000000 +1000
@@@@ -142,7 +142,7 @@@@ _read_section_header(gp_object_type *obj
                      char *file, 
                      char *string_table)
 {
-  char buffer[9];
+  char buffer[9];	/* the name can occupy all 8 chars without a null terminator */
   unsigned int offset;
 
   if (gp_getl32(&file[0]) == 0) {
@@@@ -150,9 +150,7 @@@@ _read_section_header(gp_object_type *obj
     offset = gp_getl32(&file[4]);
     section->name = strdup(&string_table[offset]);
   } else {
-    strncpy(buffer, &file[0], 8);
-    /* the name can occupy all 8 chars without a null terminator */
-    buffer[8] = '\0';
+    strlcpy(buffer, &file[0], sizeof(buffer));
     section->name = strdup(buffer);
   }
 
@@@@ -322,7 +320,7 @@@@ _read_aux(gp_aux_type *aux, int aux_type
 static void 
 _read_symbol(gp_symbol_type *symbol, char *file, char *string_table)
 {
-  char buffer[9];
+  char buffer[9];	/* the name can occupy all 8 chars without a null terminator */
   unsigned int offset;
 
   if (gp_getl32(&file[0]) == 0) {
@@@@ -330,9 +328,7 @@@@ _read_symbol(gp_symbol_type *symbol, cha
     offset = gp_getl32(&file[4]);
     symbol->name = strdup(&string_table[offset]);
   } else {
-    strncpy(buffer, &file[0], 8);
-    /* the name can occupy all 8 chars without a null terminator */
-    buffer[8] = '\0';
+    strlcpy(buffer, &file[0], sizeof(buffer));
     symbol->name = strdup(buffer);
   }
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import gputils 0.11.7.
Submitted by Andrew Dalgleish <openbsd@@ajd.net.au>.

GPUTILS is a collection of tools for the Microchip (TM) PIC
microcontrollers. It includes gpasm, gplink, and gplib.
@
text
@@
