head	1.2;
access;
symbols
	kili_20101024:1.1.1.1 kili:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.10.24.22.21.41;	author kili;	state dead;
branches;
next	1.1;

1.1
date	2010.10.24.20.10.33;	author kili;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.10.24.20.10.33;	author kili;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove devel/hood (wrong location).
@
text
@@@comment $OpenBSD: PLIST,v 1.1 2010/10/24 20:10:33 kili Exp $
lib/${DISTNAME}/
lib/${DISTNAME}/ghc-${MODGHC_VER}/
lib/${DISTNAME}/ghc-${MODGHC_VER}/Debug/
lib/${DISTNAME}/ghc-${MODGHC_VER}/Debug/Hood/
lib/${DISTNAME}/ghc-${MODGHC_VER}/Debug/Hood/Observe.hi
lib/${DISTNAME}/ghc-${MODGHC_VER}/HS${DISTNAME}.o
lib/${DISTNAME}/ghc-${MODGHC_VER}/libHS${DISTNAME}.a
lib/${DISTNAME}/register.sh
@@exec /usr/bin/env HOME=/nonexistent %D/lib/${DISTNAME}/register.sh -v0
@@unexec /usr/bin/env HOME=/nonexistent %D/lib/${DISTNAME}/unregister.sh -v0 --force
lib/${DISTNAME}/unregister.sh
share/doc/${DISTNAME}/
share/doc/${DISTNAME}/LICENSE
share/doc/${DISTNAME}/html/
share/doc/${DISTNAME}/html/Debug-Hood-Observe.html
share/doc/${DISTNAME}/html/doc-index.html
share/doc/${DISTNAME}/html/frames.html
share/doc/${DISTNAME}/html/haddock-util.js
share/doc/${DISTNAME}/html/haddock.css
share/doc/${DISTNAME}/html/haskell_icon.gif
share/doc/${DISTNAME}/html/hood.haddock
share/doc/${DISTNAME}/html/index-frames.html
share/doc/${DISTNAME}/html/index.html
share/doc/${DISTNAME}/html/mini_Debug-Hood-Observe.html
share/doc/${DISTNAME}/html/minus.gif
share/doc/${DISTNAME}/html/plus.gif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@comment $OpenBSD$
@


1.1.1.1
log
@HOOD is a small post-mortem debugger for the lazy functional language
]Haskell. It is based on the concept of observation of intermediate
data structures, rather than the more traditional stepping and
variable examination paradigm used by imperative language debuggers.

@
text
@@
