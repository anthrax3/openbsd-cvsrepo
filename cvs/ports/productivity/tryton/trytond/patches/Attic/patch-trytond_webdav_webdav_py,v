head	1.1;
access;
symbols
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_6:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2014.09.30.15.02.16;	author ajacoutot;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;
commitid	EaWh9ot6gcGLnG64;

1.1.2.1
date	2014.09.30.15.02.16;	author ajacoutot;	state Exp;
branches;
next	;
commitid	EaWh9ot6gcGLnG64;

1.1.4.1
date	2014.09.30.15.03.27;	author ajacoutot;	state Exp;
branches;
next	;
commitid	oMq0fepPPymetkRz;


desc
@@


1.1
log
@file patch-trytond_webdav_webdav_py was initially added on branch OPENBSD_5_6.
@
text
@@


1.1.4.1
log
@SECURITY fixes:
* Use literal_eval instead of safe_eval (CVE-2014-6633)
* Prevent double underscore in safe_eval (CVE-2014-6633)
@
text
@a0 41
$OpenBSD$

* Use literal_eval instead of safe_eval (CVE-2014-6633)
* Prevent double underscore in safe_eval (CVE-2014-6633)

--- trytond/webdav/webdav.py.orig	Mon Oct 21 17:13:38 2013
+++ trytond/webdav/webdav.py	Tue Sep 30 16:59:21 2014
@@@@ -8,12 +8,14 @@@@ import socket
 import encodings
 import uuid
 import datetime
+from ast import literal_eval
+
 from dateutil.relativedelta import relativedelta
 from sql.functions import Extract
 from sql.conditionals import Coalesce
 
 from trytond.model import ModelView, ModelSQL, fields
-from trytond.tools import reduce_ids, safe_eval
+from trytond.tools import reduce_ids
 from trytond.transaction import Transaction
 from trytond.pool import Pool
 from trytond.config import CONFIG
@@@@ -306,7 +308,7 @@@@ class Collection(ModelSQL, ModelView):
                 if not Model:
                     return res
                 models = Model.search(
-                        safe_eval(collection.domain or "[]"))
+                    literal_eval(collection.domain))
                 for child in models:
                     if '/' in child.rec_name:
                         continue
@@@@ -760,7 +762,7 @@@@ class Attachment(ModelSQL, ModelView):
             model_name = collection.model.model
             Model = pool.get(model_name)
             ids = list(resources[model_name])
-            domain = safe_eval(collection.domain or '[]')
+            domain = literal_eval(collection.domain)
             domain = [domain, ('id', 'in', ids)]
             records = Model.search(domain)
             for record in records:
@


1.1.2.1
log
@SECURITY fixes:
* Use literal_eval instead of safe_eval (CVE-2014-6633)
* Prevent double underscore in safe_eval (CVE-2014-6633)
@
text
@a0 41
$OpenBSD$

* Use literal_eval instead of safe_eval (CVE-2014-6633)
* Prevent double underscore in safe_eval (CVE-2014-6633)

--- trytond/webdav/webdav.py.orig	Sun Jun 15 18:55:33 2014
+++ trytond/webdav/webdav.py	Tue Sep 30 16:55:15 2014
@@@@ -8,12 +8,14 @@@@ import socket
 import encodings
 import uuid
 import datetime
+from ast import literal_eval
+
 from dateutil.relativedelta import relativedelta
 from sql.functions import Extract
 from sql.conditionals import Coalesce
 
 from trytond.model import ModelView, ModelSQL, fields
-from trytond.tools import reduce_ids, safe_eval
+from trytond.tools import reduce_ids
 from trytond.transaction import Transaction
 from trytond.pool import Pool
 from trytond.config import CONFIG
@@@@ -306,7 +308,7 @@@@ class Collection(ModelSQL, ModelView):
                 if not Model:
                     return res
                 models = Model.search(
-                        safe_eval(collection.domain or "[]"))
+                    literal_eval(collection.domain))
                 for child in models:
                     if '/' in child.rec_name:
                         continue
@@@@ -760,7 +762,7 @@@@ class Attachment(ModelSQL, ModelView):
             model_name = collection.model.model
             Model = pool.get(model_name)
             ids = list(resources[model_name])
-            domain = safe_eval(collection.domain or '[]')
+            domain = literal_eval(collection.domain)
             domain = [domain, ('id', 'in', ids)]
             records = Model.search(domain)
             for record in records:
@

