head	1.1;
access;
symbols
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_6:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2014.09.30.15.02.16;	author ajacoutot;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;
commitid	EaWh9ot6gcGLnG64;

1.1.2.1
date	2014.09.30.15.02.16;	author ajacoutot;	state Exp;
branches;
next	;
commitid	EaWh9ot6gcGLnG64;

1.1.4.1
date	2014.09.30.15.03.27;	author ajacoutot;	state Exp;
branches;
next	;
commitid	oMq0fepPPymetkRz;


desc
@@


1.1
log
@file patch-trytond_tools_misc_py was initially added on branch OPENBSD_5_6.
@
text
@@


1.1.4.1
log
@SECURITY fixes:
* Use literal_eval instead of safe_eval (CVE-2014-6633)
* Prevent double underscore in safe_eval (CVE-2014-6633)
@
text
@a0 18
$OpenBSD$

* Use literal_eval instead of safe_eval (CVE-2014-6633)
* Prevent double underscore in safe_eval (CVE-2014-6633)

--- trytond/tools/misc.py.orig	Mon Oct 21 17:13:38 2013
+++ trytond/tools/misc.py	Tue Sep 30 16:59:23 2014
@@@@ -396,8 +396,8 @@@@ def _compile_source(source):
 
 
 def safe_eval(source, data=None):
-    if '__subclasses__' in source:
-        raise ValueError('__subclasses__ not allowed')
+    if '__' in source:
+        raise ValueError('Double underscores not allowed')
 
     comp = _compile_source(source)
     return eval(comp, {'__builtins__': {
@


1.1.2.1
log
@SECURITY fixes:
* Use literal_eval instead of safe_eval (CVE-2014-6633)
* Prevent double underscore in safe_eval (CVE-2014-6633)
@
text
@a0 18
$OpenBSD$

* Use literal_eval instead of safe_eval (CVE-2014-6633)
* Prevent double underscore in safe_eval (CVE-2014-6633)

--- trytond/tools/misc.py.orig	Sun Jun 15 18:55:33 2014
+++ trytond/tools/misc.py	Tue Sep 30 16:56:02 2014
@@@@ -396,8 +396,8 @@@@ def _compile_source(source):
 
 
 def safe_eval(source, data=None):
-    if '__subclasses__' in source:
-        raise ValueError('__subclasses__ not allowed')
+    if '__' in source:
+        raise ValueError('Double underscores not allowed')
 
     comp = _compile_source(source)
     return eval(comp, {'__builtins__': {
@

