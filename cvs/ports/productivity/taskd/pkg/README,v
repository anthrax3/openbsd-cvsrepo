head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.6
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	landry_20140703:1.1.1.1
	vic:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.01.28.17.15.05;	author kspillner;	state Exp;
branches;
next	1.2;
commitid	ne0vn0YfCU59thCO;

1.2
date	2015.07.18.21.13.41;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	ulI2yjZGr10yH38X;

1.1
date	2014.07.12.22.08.35;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	BiP1NU93TY4KegGP;

1.1.1.1
date	2014.07.12.22.08.35;	author landry;	state Exp;
branches;
next	;
commitid	BiP1NU93TY4KegGP;


desc
@@


1.3
log
@Update to v1.1.0.

ok sthen@@
@
text
@$OpenBSD: README,v 1.2 2015/07/18 21:13:41 ajacoutot Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

NOTE:
=====
When running the taskd commands below you must either append the command
line argument '--data /var/taskd' to every taskd command, or else export
the TASKDDATA environment variable:

  # export TASKDDATA=/var/taskd


Generate certificates
=====================
Before starting taskd you need to generate certificates for it to use.
This procedure is described at:

http://taskwarrior.org/docs/taskserver/configure.html

Generate certificate files
--------------------------
Copy everything under ${PREFIX}/share/examples/taskd/pki to a directory
where you have write permission, edit the contents of the var file to
match your needs, and then run the generate script:

  $ ./generate

Copy certificates in place
--------------------------
Copy the following certificate files and keys to /var/taskd:

  # cp {client,server}.{cert,key}.pem server.crl.pem ca.cert.pem \
      /var/taskd
  # chown -R _taskd:_taskd /var/taskd


Running taskd
=============
taskd by default listens on 127.0.0.1 port 53589. You can change this
by editing /var/taskd/config, or with a command like:

  # su -m _taskd -c \
	"taskd config --force server localhost:12345 --data /var/taskd"

taskd comes with an rc.d script that can be used to start it manually,
or enable it to start automatically on boot.

  # rcctl start taskd
  # rcctl enable taskd


Adding users
============
Before you can sync with the server you must create at least one user
and organization.  This procedure is described at:

http://taskwarrior.org/docs/taskserver/user.html

Create organization
-------------------
First, you must create an organization (in this example it is named
Public):

  # su -m _taskd -c "taskd add org Public --data /var/taskd"

Create user
-----------
Next, create a user as part of that organization:

  # su -m _taskd -c \
	"taskd add user Public 'First Last' --data /var/taskd"

Be sure to remember the user key mentioned in the output of that
command.  It is required by the client configuration later in order
to authenticate with the server.

Create user certificate
-----------------------
Finally, you must generate a certificate for that user.  Go back to the
directory where you copied everything from
${PREFIX}/share/examples/taskd/pki and run (replacing first_last with
the filename you want for this user's certificate and key):

  $ ./generate.client first_last


Configure taskwarrior
=====================
Now taskwarrior must be configured to connect to this taskd server and
authenticate as this user.  This procedure is described at:

http://taskwarrior.org/docs/taskserver/taskwarrior.html

Copy the ca.cert.pem file and user certificate and key files
(first_last.cert.pem and first_last.key.pem in the example above) that
you just generated to the users' local task directory, ~./task:

  $ cp first_last.cert.pem ~/.task
  $ cp first_last.key.pem  ~/.task
  $ cp ca.cert.pem         ~/.task

Configure taskwarrior to use these certificates and connect to this
server by either editing ~/.taskrc, or with commands like:

  $ task config taskd.certificate ~/.task/first_last.cert.pem
  $ task config taskd.key         ~/.task/first_last.key.pem
  $ task config taskd.ca          ~/.task/ca.cert.pem
  $ task config taskd.server      host.domain:53589

Finally, configure taskwarrior to authenticate as the user created
above, replacing "Public" with the name of the organization you created,
"First Last" with the name of the user, and "cf31f287-..." with the
value of the user key that you remembered from the output of the "taskd
add user" command:

  $ task config taskd.credentials \
	'Public/First Last/cf31f287-ee9e-43a8-843e-e8bbd5de4294'


Syncing Taskwarrior
===================
You should now be able to sync with this taskd server.  This procedure
is described at: http://taskwarrior.org/docs/taskserver/sync.html

Very first sync
---------------
The very first sync is special, but only needs to be done once:

  $ task sync init

This will prompt you to confirm that you want to sync your existing
tasks with this server.

Subsequent syncs
----------------
After the very first sync you can sync again at any time by simply
running:

  $ task sync

Troubleshooting
---------------
If you encounter any problems syncing with this taskd server you
should check if your problem is already described at
http://taskwarrior.org/docs/taskserver/troubleshooting-sync.html
@


1.2
log
@sudo(8) -> su(1)
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1.1.1 2014/07/12 22:08:35 landry Exp $
d7 9
d19 3
a21 3
The procedure is described at
http://taskwarrior.org/docs/server_configure.html but has been somewhat
simplified on OpenBSD:
d25 3
a27 7
In ${PREFIX}/share/examples/taskd/pki/ is a set of scripts that can be
used to generate necessary files. Copy that directory somewhere safe and
adjust vars to your liking.
generate.server will automatically generate certificate with the
hostname and IPs of machine it is ran on, adjust the vars file to
override this.
Once you're satisfied with settings, run:
a30 1

d33 1
a33 1
Copy resulting certificates into taskd's directory:
d42 2
a43 2
taskd by default listens on all interfaces on port 53589. You can change
this with a command like:
d48 2
a49 6
To enable automatic startup on boot for taskd, add it to pkg_scripts
in ${BASESYSCONFDIR}/rc.conf.local, for example:

   pkg_scripts="${pkg_scripts} taskd"

To start taskd, reboot or start it manually:
d51 2
a52 1
   # rcctl restart taskd
d57 2
a58 4
As described at http://taskwarrior.org/docs/server_user.html

For most operations here you'll either have to
  # export TASKDDATA=/var/taskd
d60 1
a60 1
or run taskd with '--data /var/taskd' appended to it's options.
d62 4
a65 3
Create organization and user
----------------------------
First you need to create an organization to put user(s) into:
d69 3
a71 1
  Created organization 'Public'
d73 2
d76 3
a78 6
Then you can proceed with creating a user:

  # su -m _taskd -c "taskd add user 'Public' 'First Last' --data /var/taskd"
  New user key: cf31f287-ee9e-43a8-843e-e8bbd5de4294
  Created user 'First Last' for organization 'Public'

d82 4
a85 1
Go again to the directory where you copied the pki scripts, and run:
a88 4
This will generate a new key and cert, named first_last.cert.pem and
first_last.key.pem. It is not important that 'first_last' was used here,
just that it is something unique, and valid for use in a file name.

d92 4
a95 1
As described at http://taskwarrior.org/docs/server_taskwarrior.html
d97 3
a99 8
You will need following information from above processes:
  CA ca.cert.pem
  Client certificate: first_last.cert.pem
  Client key: first_last.key.pem
  User key (yours will be different): cf31f287-ee9e-43a8-843e-e8bbd5de4294
  Organization: Public
  Account name: First Last
  Server:port host.domain:53589
d104 4
d112 9
a120 1
  $ task config taskd.credentials 'Public/First Last/cf31f287-ee9e-43a8-843e-e8bbd5de4294'
d125 2
a126 1
As described at http://taskwarrior.org/docs/server_sync.html
d128 3
a130 1
First time sync is special, and needs to be done only once:
a132 4
  Please confirm that you wish to upload all your pending tasks to the
  Task Server (yes/no) yes
  Syncing with host.domain:53589
  Sync successful.  2 changes uploaded.
d134 2
d137 4
a140 1
Afterwards you simply run:
d143 6
a148 2
  Syncing with :
  Sync successful.  1 changes uploaded.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: README.template,v 1.4 2011/06/02 13:44:40 ajacoutot Exp $
d31 1
a31 1
  $ sudo cp {client,server}.{cert,key}.pem server.crl.pem ca.cert.pem \
d33 1
a33 1
  $ sudo chown -R _taskd:_taskd /var/taskd
d41 2
a42 2
  $ sudo -u _taskd taskd config --force server \
        localhost:12345 --data /var/taskd
d51 1
a51 1
   $ sudo /etc/rc.d/taskd start
d59 1
d61 1
a61 5
  $ export TASKDDATA=/var/taskd

and run commands with sudo -E to pass that variable to taskd, or run
taskd with '--data /var/taskd' appended to it's options. Both examples
below.
d67 2
a68 1
  $ sudo -u _taskd taskd add org Public --data /var/taskd
d74 1
a74 1
  $ sudo -E -u _taskd taskd add user 'Public' 'First Last'
@


1.1.1.1
log
@Import taskd 1.0.0, from vic

Taskserver is a lightweight, secure server providing multi-user,
multi-client access to task data. This allows true syncing between
desktop and mobile clients.

ok abieber@@ on a previous version, with tweaks from sthen@@
@
text
@@
