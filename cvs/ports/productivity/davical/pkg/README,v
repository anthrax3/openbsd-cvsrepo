head	1.7;
access;
symbols
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	landry_20120305:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2017.03.24.18.29.37;	author landry;	state Exp;
branches;
next	1.6;
commitid	4OLsNkjFaHLsYVGC;

1.6
date	2016.06.27.19.36.50;	author sthen;	state Exp;
branches;
next	1.5;
commitid	1RO6om9TZZ6Nb40O;

1.5
date	2014.11.23.08.48.27;	author landry;	state Exp;
branches;
next	1.4;
commitid	oZXT2Re2P7Z9b7qE;

1.4
date	2013.05.05.19.24.13;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2013.03.08.10.37.38;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2012.03.07.08.38.44;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.05.21.19.53;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.03.05.21.19.53;	author landry;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Add an example config for httpd(8), example from Michael Warmuth-Uhl,
diff from Marcus MERIGHI, thanks!
@
text
@$OpenBSD: README,v 1.6 2016/06/27 19:36:50 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Database Setup
==============
DAViCal needs two PostgreSQL users, one for administrative access and
one for daily use. Assuming you have an administrative account named
`postgres', you can create the users and davical database like this:

createuser -U postgres --pwprompt --no-superuser --no-createdb \
	--no-createrole davical_dba
createuser -U postgres --pwprompt --no-superuser --no-createdb \
	--no-createrole davical_app
createdb -U postgres -E UTF8 -T template0 -O davical_dba davical
createlang -U postgres plpgsql davical

Let's fill the database using the newly created dba user:

psql -U davical_dba -f ${TRUEPREFIX}/awl/dba/awl-tables.sql davical
psql -U davical_dba -f ${TRUEPREFIX}/awl/dba/schema-management.sql davical
psql -U davical_dba -f ${TINSTDIR}/dba/davical.sql davical

Run the administrative script to set permissions for the application DB
user on the database. This script should be used when upgrading DAViCal
too, so that the DB schema is consistent.

${TINSTDIR}/dba/update-davical-database --dbname davical \
	--appuser davical_app --nopatch --owner davical_dba \
	--dbpass "$davical_dba_password"

Finally, insert basic roles/users into the db:

psql -U davical_dba -f ${TINSTDIR}/dba/base-data.sql davical

Default temporary admin password is 'nimda', stored in database as
'**nimda', you can change it to 'temppass' with

psql -U davical_dba -c \
"UPDATE usr SET password = '**temppass' WHERE user_no = 1;" davical

This is only for initial setup, and it should be changed through the
web interface (which will crypt the new password) once logged in.


DAViCal Configuration
=====================

The DAViCal configuration resides in
${TINSTDIR}/config/config.php and is a regular PHP file which
sets (or overrides) some specific variables. You should only need to
set pg_connect value to configure database access.

httpd(8) Configuration
=====================

With httpd(8), it is easiest to run php-fpm and use the following 
for a distinct server block:

ext_addr="*"
server "default" {
    listen on $ext_addr port 80
    listen on $ext_addr tls port 443
    connection { max requests 500, timeout 3600 }
    location "/" { directory index index.php }
    location "/davical/*.php*" {
            fastcgi socket "/run/php-fpm.sock"
            root "/davical/htdocs"
    }
}

Apache Configuration
====================

With Apache, AllowOverride settings are required on the ${TINSTDIR}
directory. You can configure this as follows:

# ln -s ../modules.sample/davical.conf \
        /var/www/conf/modules
# /etc/rc.d/apache2 restart

Then point your browser at:
    http://<hostname>/davical/
and you should get a message telling you to configure DAViCal.

Nginx Configuration
===================

With Nginx, the simplest way is to run php-fpm, and use the following
configuration for a distinct server block:

server {
    server_name calendar.example.com;
    root ${TINSTDIR}/htdocs/;

    location / {
        index index.php;
    }
    location /images/ {
    }
    location ~ ^(.*\.php)(.*)$ {
        include fastcgi_params;
        fastcgi_pass unix:run/php-fpm.sock;
        fastcgi_split_path_info ^(.*\.php)(.*)$;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}

Client Setup
============

More information is available at http://wiki.davical.org/w/CalDAV_Clients.
@


1.6
log
@Replace httpd references with Apache, and fix rc script names.
From Caspar Schutijser, thanks!
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.5 2014/11/23 08:48:27 landry Exp $
d55 18
@


1.5
log
@Bugfix update to davical 1.1.3.1.
Development moved to gitlab.com.

Add a configuration snippet for Nginx, remove outdated suhosin references.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.4 2013/05/05 19:24:13 jasper Exp $
d64 1
a64 1
# /etc/rc.d/httpd restart
@


1.4
log
@modules.sample/ always lives in /var/www, so no need for ${PREFIX} here.

as discussed with aja@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.3 2013/03/08 10:37:38 jasper Exp $
d70 2
a71 2
PHP Configuration
=================
d73 2
a74 3
In order for Davical to function correctly, one needs to disable
suhosin.server.strip. This can be done either by editing
${SYSCONFDIR}/php-${MODPHP_VERSION}.ini and set:
d76 17
a92 5
    suhosin.server.strip to 0.

Or by adjusting your vhost configuration and set:

  php_admin_flag suhosin.server.strip off
@


1.3
log
@Add a "PHP configuration" section to the README.

ok landry@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.2 2012/03/07 08:38:44 ajacoutot Exp $
d63 1
a63 1
        ${TRUEPREFIX}/conf/modules
@


1.2
log
@Be consistent with the other www ports and install a davical.conf file
so that it works out of the box without the need to tweak httpd.conf.
Add missing --dbpass to the update-davical-database example in README.

ok landry@@ (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1.1.1 2012/03/05 21:19:53 landry Exp $
d69 13
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
a19 3
Now adjust /var/postgresql/data/pg_hba.conf to allow davical_dba and
davical_app db users to access davical database.

d22 3
a24 3
psql -U davical_dba -f ${PREFIX}/awl/dba/awl-tables.sql davical
psql -U davical_dba -f ${PREFIX}/awl/dba/schema-management.sql davical
psql -U davical_dba -f ${PREFIX}/davical/dba/davical.sql davical
d30 3
a32 2
${PREFIX}/davical/dba/update-davical-database --dbname davical \
	--appuser davical_app --nopatch --owner davical_dba
d36 1
a36 1
psql -U davical_dba -f ${PREFIX}/davical/dba/base-data.sql davical
a46 25
Apache VHost Configuration
==========================

Davical is meant to work in its own VirtualHost, a sample config to
adapt to fit your needs is provided below:

<VirtualHost *:80>
  DocumentRoot ${PREFIX}/davical/htdocs
  DirectoryIndex index.php index.html
  ServerName davical.example.net
  ServerAlias calendar.example.net
  Alias /images/ ${PREFIX}/davical/htdocs/images/

  <IfModule mod_php5.c>
    php_value include_path ${PREFIX}/davical/inc:${PREFIX}/awl/inc
    php_value magic_quotes_gpc 0
    php_value register_globals 0
    php_value error_reporting "E_ALL & ~E_NOTICE"
    php_value default_charset "utf-8"
  </IfModule>
</VirtualHost>

Copy it to your httpd.conf in the VirtualHost section, and restart
httpd. You should be able to browse to the new VHost and you should
get a message telling you to configure DAViCal.
d52 1
a52 1
${PREFIX}/davical/config/config.php and is a regular PHP file which
d55 14
@


1.1.1.1
log
@Import davical 1.0.2.

DAViCal is a server for calendar/contacts sharing. It is an
implementation of the CalDAV protocol which is designed for storing
calendaring resources (in iCalendar format) on a remote shared server.
It also provides CardDAV features for contact/vCard sharing.

ok ajacoutot@@
@
text
@@
