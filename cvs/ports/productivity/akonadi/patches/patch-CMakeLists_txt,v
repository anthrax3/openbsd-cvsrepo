head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2014.10.05.10.32.07;	author zhuk;	state Exp;
branches;
next	1.4;
commitid	Ayk0u0hZ8FGtBLWN;

1.4
date	2014.08.14.23.05.57;	author zhuk;	state Exp;
branches;
next	1.3;
commitid	dxQ14wC8nUr78jC7;

1.3
date	2014.07.10.14.05.00;	author zhuk;	state Exp;
branches;
next	1.2;
commitid	PYK5zoYxyTMVS76t;

1.2
date	2014.01.31.16.37.46;	author zhuk;	state Exp;
branches;
next	1.1;

1.1
date	2014.01.31.11.46.25;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update Akonadi to 1.13.0. KMail is still happy.
@
text
@$OpenBSD: patch-CMakeLists_txt,v 1.4 2014/08/14 23:05:57 zhuk Exp $
Use original SQLite driver instead of "tweaked" one, unbreaks runtime.
--- CMakeLists.txt.orig	Tue Apr  8 01:02:16 2014
+++ CMakeLists.txt	Wed Aug  6 01:31:15 2014
@@@@ -75,7 +75,7 @@@@ endif()
 macro(SET_DEFAULT_DB_BACKEND)
     set(_backend ${ARGV0})
     if("${_backend}" STREQUAL "SQLITE")
-        set(AKONADI_DATABASE_BACKEND QSQLITE3)
+        set(AKONADI_DATABASE_BACKEND QSQLITE)
         set(AKONADI_BUILD_QSQLITE TRUE)
     else()
         if("${_backend}" STREQUAL "POSTGRES")
@


1.4
log
@Use FindBacktrace.cmake here. Fixes floating dependency spotted by landry@@.

Patch went upstream already.
@
text
@d1 2
a2 6
$OpenBSD: patch-CMakeLists_txt,v 1.3 2014/07/10 14:05:00 zhuk Exp $
1. Use original SQLite driver instead of "tweaked" one,
   unbreaks runtime.
2. Use standard CMake module instead of rolling own logic,
   unbreaks build.
   REVIEW: https://git.reviewboard.kde.org/r/119630/
a13 20
@@@@ -245,15 +245,10 @@@@ add_definitions(-DQT_USE_FAST_CONCATENATION -DQT_USE_F
 
 set(AKONADI_SYSTEM_LIBS)
 
-check_include_files(execinfo.h HAVE_EXECINFO_H)
-if(HAVE_EXECINFO_H)
-  check_function_exists(backtrace BACKTRACE_IN_LIBC)
-  if(NOT BACKTRACE_IN_LIBC)
-    find_library(EXECINFO_LIBRARY NAMES execinfo)
-    if(EXECINFO_LIBRARY)
-      set(AKONADI_SYSTEM_LIBS ${AKONADI_SYSTEM_LIBS} ${EXECINFO_LIBRARY})
-    endif()
-  endif()
+find_package(Backtrace)
+if(Backtrace_FOUND)
+  include_directories(${Backtrace_INCLUDE_DIRS})
+  set(AKONADI_SYSTEM_LIBS ${AKONADI_SYSTEM_LIBS} ${Backtrace_LIBRARIES})
 endif()
 
 check_include_files(unistd.h HAVE_UNISTD_H)
@


1.3
log
@Update Akonadi to 1.12.1.
@
text
@d1 6
a6 2
$OpenBSD: patch-CMakeLists_txt,v 1.2 2014/01/31 16:37:46 zhuk Exp $
Does not require C++0x, actually.
d8 1
a8 1
+++ CMakeLists.txt	Wed May 14 11:22:41 2014
d18 20
@


1.2
log
@Use the SQLite driver provided with Qt (QSQLITE) instead of the one bundled
with Akonadi (QSQLITE3) by default. It behaves better for me, at least.

This won't affect existing installations. You can freely migrate from
QSQLITE to QSQLITE3 and back, just remember to stop Akonadi and make sure
that corresponding lines in ~/.config/akonadi/akonadiserverrc are pointing
to the same database file, then start Akonadi again.
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.1 2014/01/31 11:46:25 zhuk Exp $
d3 3
a5 3
--- CMakeLists.txt.orig	Thu Nov 28 18:25:03 2013
+++ CMakeLists.txt	Fri Jan 31 19:03:40 2014
@@@@ -82,7 +82,7 @@@@ endif()
a13 9
@@@@ -241,7 +241,7 @@@@ if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_C_COMPILER MATCHE
 
   # more aggressive warnings and C++11 support
   set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} -Wno-long-long -std=iso9899:1990 -Wundef -Wcast-align -Werror-implicit-function-declaration -Wchar-subscripts -Wall -Wextra -Wpointer-arith -Wwrite-strings -Wformat-security -Wmissing-format-attribute -fno-common")
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x -Wnon-virtual-dtor -Wundef -Wcast-align -Wchar-subscripts -Wall -Wextra -Wpointer-arith -Wformat-security -fno-check-new -fno-common")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wnon-virtual-dtor -Wundef -Wcast-align -Wchar-subscripts -Wall -Wextra -Wpointer-arith -Wformat-security -fno-check-new -fno-common")
 
   # debugfull target
   set(CMAKE_CXX_FLAGS_DEBUGFULL "-g3 -fno-inline" CACHE STRING "Flags used by the C++ compiler during debugfull builds." FORCE)
@


1.1
log
@Forgot to sync patches. Did not build => no bump.

Spotted by nigel@@, thanks!
@
text
@d1 1
a1 1
$OpenBSD$
d3 11
a13 2
--- CMakeLists.txt.orig	Fri Jan 31 15:44:22 2014
+++ CMakeLists.txt	Fri Jan 31 15:44:33 2014
@

