head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.16
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.14
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	zhuk_20130424:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.04.24.09.05.59;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.04.24.09.05.59;	author zhuk;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@Akonadi is a PIM layer, which provides an asynchronous API to access all kind
of PIM data (e.g. mails, contacts, events, todos etc.).

It consists of several processes (generally called the Akonadi server) and a
library (called client library) which encapsulates the communication
between the client and the server.
@


1.1.1.1
log
@Import Akonadi 1.9.1.

Akonadi is a PIM layer, which provides an asynchronous API to access all kind
of PIM data (e.g. mails, contacts, events, todos etc.).

It consists of several processes (generally called the Akonadi server) and a
library (called client library) which encapsulates the communication
between the client and the server.

Note: Akonadi creates a cache of different data in ~/.local/share/akonadi,
using one or the other DB backend. By default, it uses (own) SQLite backend,
it behaves best here. If you change DB backend, you will NOT lose your data,
just the cache will need to be regenerated.

The old version in x11/kde4/akonadi will bite the dust soon.

ok landry@@
@
text
@@
