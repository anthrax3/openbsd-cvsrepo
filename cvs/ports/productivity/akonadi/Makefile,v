head	1.16;
access;
symbols
	OPENBSD_6_1:1.15.0.2
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.14.0.6
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.4
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.6.0.2
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	zhuk_20130424:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.16
date	2017.07.27.10.05.20;	author sthen;	state Exp;
branches;
next	1.15;
commitid	GaeX7RvWvJNgCIJE;

1.15
date	2016.09.23.09.16.57;	author sthen;	state Exp;
branches;
next	1.14;
commitid	XLnI6AbHAmyVU5mO;

1.14
date	2015.05.28.10.17.24;	author pascal;	state Exp;
branches;
next	1.13;
commitid	020U4lCPk8wUkCOz;

1.13
date	2014.12.10.20.12.52;	author zhuk;	state Exp;
branches;
next	1.12;
commitid	P5aGtJqyPGYPgV2e;

1.12
date	2014.10.05.10.32.07;	author zhuk;	state Exp;
branches;
next	1.11;
commitid	Ayk0u0hZ8FGtBLWN;

1.11
date	2014.09.13.18.09.21;	author brad;	state Exp;
branches;
next	1.10;
commitid	PpbRjVZdAmlrmi8q;

1.10
date	2014.08.15.20.20.50;	author kili;	state Exp;
branches;
next	1.9;
commitid	JkXdRQ7NZ9vatNAa;

1.9
date	2014.08.14.23.05.57;	author zhuk;	state Exp;
branches;
next	1.8;
commitid	dxQ14wC8nUr78jC7;

1.8
date	2014.07.10.14.05.00;	author zhuk;	state Exp;
branches;
next	1.7;
commitid	PYK5zoYxyTMVS76t;

1.7
date	2014.07.10.08.06.04;	author espie;	state Exp;
branches;
next	1.6;
commitid	6hblQPwPXuvJ74G6;

1.6
date	2014.01.31.16.37.46;	author zhuk;	state Exp;
branches;
next	1.5;

1.5
date	2014.01.30.18.51.33;	author zhuk;	state Exp;
branches;
next	1.4;

1.4
date	2013.11.05.07.55.21;	author zhuk;	state Exp;
branches;
next	1.3;

1.3
date	2013.06.12.20.36.34;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2013.05.25.02.45.01;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2013.04.24.09.05.59;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.04.24.09.05.59;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.16
log
@add COMPILER_LIBCXX to WANTLIB and bump
@
text
@# $OpenBSD: Makefile,v 1.15 2016/09/23 09:16:57 sthen Exp $

CATEGORIES =	productivity
COMMENT =	PIM cache and access services
DISTNAME =	akonadi-1.13.0
HOMEPAGE =	http://community.kde.org/KDE_PIM/Akonadi
MAINTAINER =	KDE porting team <openbsd-kde@@googlegroups.com>
REVISION =	3

SHARED_LIBS = 	akonadiprotocolinternals 4.0	# 1.0

EXTRACT_SUFX =	.tar.bz2
MASTER_SITES =	${MASTER_SITE_KDE:=stable/akonadi/src/}

WANTLIB =  c m pthread X11
WANTLIB += lib/qt4/QtDBus lib/qt4/QtGui lib/qt4/QtNetwork
WANTLIB += lib/qt4/QtSql lib/qt4/QtXml
WANTLIB += boost_program_options-mt execinfo sqlite3
WANTLIB += ${COMPILER_LIBCXX}

# LGPLv2+
PERMIT_PACKAGE_CDROM =	Yes

MODULES =		x11/kde4
MODKDE4_USE =

# We build support for MySQL and PostgreSQL but SQLite
# is our default now.
BUILD_DEPENDS =		databases/mariadb,-server \
			x11/qt4,-mysql \
			x11/qt4,-postgresql

RUN_DEPENDS =		misc/shared-mime-info

LIB_DEPENDS =		databases/sqlite3 \
			devel/boost \
			devel/libexecinfo

# XXX (buggy) dbconfigtest fails due to SQLITE being default,
# and it doesn't worth to fix
CONFIGURE_ARGS =	-DDATABASE_BACKEND:String=SQLITE \
			-DINSTALL_QSQLITE_IN_QT_PREFIX:Bool=Yes \
			-DQT5_BUILD=No

TEST_IS_INTERACTIVE =	X11

.include <bsd.port.mk>
@


1.15
log
@Cope with moving sqlite3 back to ports.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2015/05/28 10:17:24 pascal Exp $
d8 1
a8 1
REVISION =	2
d19 1
@


1.14
log
@gcc4 bumps, reminded by aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2014/12/10 20:12:52 zhuk Exp $
d8 1
a8 1
REVISION =	1
d34 2
a35 1
LIB_DEPENDS =		devel/boost \
@


1.13
log
@Make sure Qt5 is not picked up by accident.

Set MAINTAINER while there, it was KDE-specific port always anyway.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2014/10/05 10:32:07 zhuk Exp $
d8 1
a8 1
REVISION =	0
@


1.12
log
@Update Akonadi to 1.13.0. KMail is still happy.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2014/09/13 18:09:21 brad Exp $
d7 2
d40 2
a41 1
			-DINSTALL_QSQLITE_IN_QT_PREFIX:Bool=Yes
@


1.11
log
@Switch from using MySQL to using MariaDB attempt #2. MariaDB is a drop-in replacement.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2014/08/15 20:20:50 kili Exp $
d5 1
a5 2
DISTNAME =	akonadi-1.12.1
REVISION =	1
d8 1
a8 1
SHARED_LIBS = 	akonadiprotocolinternals 3.0	# 1.0
d13 1
a13 1
WANTLIB =  c m pthread
d16 1
a16 1
WANTLIB += boost_program_options-mt execinfo sqlite3 soprano
d32 1
a32 2
LIB_DEPENDS =		databases/soprano>=2.9.0 \
			devel/boost \
@


1.10
log
@Missing bump.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2014/08/14 23:05:57 zhuk Exp $
d6 1
a6 1
REVISION =	0
d27 1
a27 1
BUILD_DEPENDS =		databases/mysql,-server \
@


1.9
log
@Use FindBacktrace.cmake here. Fixes floating dependency spotted by landry@@.

Patch went upstream already.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2014/07/10 14:05:00 zhuk Exp $
d6 1
@


1.8
log
@Update Akonadi to 1.12.1.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2014/07/10 08:06:04 espie Exp $
d16 1
a16 1
WANTLIB += boost_program_options-mt sqlite3 soprano
d33 2
a34 1
			devel/boost
@


1.7
log
@bump
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2014/01/31 16:37:46 zhuk Exp $
d5 1
a5 1
DISTNAME =	akonadi-1.11.0
a6 1
REVISION =	1
d8 1
a8 1
SHARED_LIBS = 	akonadiprotocolinternals 2.0	# 1.0
d13 1
a13 1
WANTLIB =  c m pthread stdc++
@


1.6
log
@Use the SQLite driver provided with Qt (QSQLITE) instead of the one bundled
with Akonadi (QSQLITE3) by default. It behaves better for me, at least.

This won't affect existing installations. You can freely migrate from
QSQLITE to QSQLITE3 and back, just remember to stop Akonadi and make sure
that corresponding lines in ~/.config/akonadi/akonadiserverrc are pointing
to the same database file, then start Akonadi again.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2014/01/30 18:51:33 zhuk Exp $
d7 1
a7 1
REVISION =	0
@


1.5
log
@Update Akonadi to 1.11. Fixes a problem in SQLite backend, which we use by
default. No regressions so far.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/11/05 07:55:21 zhuk Exp $
d7 1
@


1.4
log
@Update to latest stable Akonadi. KDE 4.10 seems to be happy. Needed by
upcoming KDE 4.11.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/06/12 20:36:34 brad Exp $
d5 1
a5 2
DISTNAME =	akonadi-1.10.3-1
PKGNAME =	akonadi-1.10.3.1
a40 2

WRKDIST =		${WRKDIR}/${PKGNAME:R}
@


1.3
log
@Revert back to using MySQL 5.1 for the time being. MariaDB 5.5 introduces
a new libmysqlclient non-blocking API which utilizes co-routines. The X86
specific GCC ASM co-routine support hid the fact that there was an issue.
The only fallback code so far is POSIX user contexts which OpenBSD does not
support.

Input from and Ok sthen@@ jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/05/25 02:45:01 brad Exp $
d5 2
a6 1
DISTNAME =	akonadi-1.9.1
d9 1
a9 1
SHARED_LIBS = 	akonadiprotocolinternals 1.0	# 1.0
d14 1
a14 1
WANTLIB =  c m stdc++
d42 2
@


1.2
log
@2 ports were missed with the move to MariaDB.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/04/24 09:05:59 zhuk Exp $
d26 1
a26 1
BUILD_DEPENDS =		databases/mariadb,-server \
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d26 1
a26 1
BUILD_DEPENDS =		databases/mysql,-server \
@


1.1.1.1
log
@Import Akonadi 1.9.1.

Akonadi is a PIM layer, which provides an asynchronous API to access all kind
of PIM data (e.g. mails, contacts, events, todos etc.).

It consists of several processes (generally called the Akonadi server) and a
library (called client library) which encapsulates the communication
between the client and the server.

Note: Akonadi creates a cache of different data in ~/.local/share/akonadi,
using one or the other DB backend. By default, it uses (own) SQLite backend,
it behaves best here. If you change DB backend, you will NOT lose your data,
just the cache will need to be regenerated.

The old version in x11/kde4/akonadi will bite the dust soon.

ok landry@@
@
text
@@
