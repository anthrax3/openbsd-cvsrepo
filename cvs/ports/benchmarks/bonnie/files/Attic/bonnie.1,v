head	1.3;
access;
symbols
	OPENBSD_5_7:1.2.0.50
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.48
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.46
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.44
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.42
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.40
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.38
	OPENBSD_5_0:1.2.0.36
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.34
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.32
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.30
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.28
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.26
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.24
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.22
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.20
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.18
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.16
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.14
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.12
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.1.0.12
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.10
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.8
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@.\" @;


1.3
date	2015.06.21.20.20.46;	author naddy;	state dead;
branches;
next	1.2;
commitid	Wz7LUfeAVOgOGqRl;

1.2
date	2003.02.26.02.57.55;	author david;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.08.20.01.35;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove obsolete ports that are no longer useful and that are unmaintained,
abandoned by upstream, and whose master sites are dead or disappearing.
ok jca@@, ajacoutot@@, dcoppa@@
@
text
@.\" The following requests are required for all man pages.
.Dd May 18, 1995
.Os UNIX
.Dt BONNIE 1
.Sh NAME
.Nm bonnie
.Nd Performance Test of Filesystem I/O
.Sh SYNOPSIS
.Nm bonnie
.Op Fl d Ar scratch-dir
.Op Fl s Ar size-in-MB
.Op Fl m Ar machine-label

.Sh DESCRIPTION
.Nm Bonnie 
tests the speed of file I/O from standard C library calls.
It reads and writes 8KB blocks to find the maximum sustained 
data rate (usually limited by the drive or controller) and additionally 
rewrites the file (better simulating normal operating conditions and 
quite dependent on drive and OS optimisations).

The per character read and write tests are generally limited by CPU speed
only on current generation hardware. It takes some 35 SPECint92 to read
or write a file at a rate of 1MB/s using getc() and putc().

The seek test results depend on the buffer cache size, since the fraction
of disk blocks that fits into the buffer cache will be found without any 
disk operation and will contribute zero seek time samples.
(See 
.Sx BUGS 
below.)

.Sh OPTIONS
.Bl -tag -width indent
.It Fl d Ar scratch-dir
Specify the directory where the test file gets written. The default 
is the current directory. Make sure there is sufficient free space 
available on the partition this directory resides in.
.It Fl s Ar size-in-MB
Specify the size of the test file in MByte. This much space must be 
available for the tests to complete.
.It Fl m Ar machine-label
Specify a label to be written in the first column of the result table.
.El

.Sh SEE ALSO
.Xr iozone 1 ,
.Xr iostat 8

.Sh AUTHOR
.Nm Bonnie
was written by Tim Bray <tbray@@watsol.waterloo.edu>.

.Sh BUGS
.Nm Bonnie 
tries hard to measure disk performance and not the quality of the 
buffer cache implementation. In merged buffer caches common today,
the buffer cache size is often only limited by total RAM on an otherwise
unloaded system. Be sure to use a file at least twice at large as 
available RAM to protect against artificially high results.

There is no way to keep the buffer cache from increasing the reported
seek rate. This is because the fraction of accesses corresponding to the 
amount of the file cached, will be done without seeks.
If your buffer cache is half the size of the file used, then half the 
requests will be satisfied immediately, and the seek rate printed 
will be twice the actual value. 

@


1.2
log
@remove double word stuttering
ok pvalchev@@ brad@@
@
text
@@


1.1
log
@Fake.
Handle patch differently.
@
text
@d66 1
a66 1
requests will be satisfied immediately, and and the seek rate printed 
@

