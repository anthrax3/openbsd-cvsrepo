head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.58
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.54
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.56
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.52
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.50
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.48
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.46
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.44
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.42
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.40
	OPENBSD_5_0:1.1.0.38
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.36
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.34
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.32
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.30
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.28
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.26
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.24
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.22
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.20
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.18
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.16
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.14
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.12
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.10
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.8
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.4
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2002.07.17.21.57.21;	author lebel;	state Exp;
branches;
next	;


desc
@@


1.1
log
@respect ${CC} and update patches
@
text
@$OpenBSD$
--- src/fstime.c.orig	Wed Feb  5 05:08:45 1992
+++ src/fstime.c	Wed Jul 17 17:36:08 2002
@@@@ -37,8 +37,8 @@@@ int			seconds = SECONDS;
 int			f;
 int			g;
 int			i;
-int			stop_count();
-int			clean_up();
+void			stop_count( int );
+void			clean_up( int );
 int			sigalarm = 0;
 
 /******************** MAIN ****************************/
@@@@ -86,11 +86,11 @@@@ char **argv;
     signal(SIGKILL,clean_up);
     if(w_test() || r_test() || c_test()) 
 	{ 
-	clean_up();
+	clean_up(0);
 	exit(1);
 	}
     /* else */
-    clean_up();
+    clean_up(0);
     exit(0);
 }
 
@@@@ -116,7 +116,7 @@@@ w_test() 
 		    if (errno != EINTR) {
 			perror("fstime: write");
 			return(-1);
-			} else stop_count();
+			} else stop_count( 0 );
 		    }
 		++ n_blocks;
 		}
@@@@ -156,7 +156,7 @@@@ r_test() 
 		continue;
 		break;
             case EINTR:
-		stop_count();
+		stop_count( 0 );
 		break;
             default:
                 perror("fstime: read");
@@@@ -200,7 +200,7 @@@@ c_test() 
 		continue;
 		break;
             case EINTR:
-		stop_count();
+		stop_count( 0 );
 		break;
             default:
                 perror("fstime: copy read");
@@@@ -212,7 +212,7 @@@@ c_test() 
             if (errno != EINTR) {
 	        perror("fstime: copy write");
 	        return(-1);
-                } else stop_count();
+                } else stop_count( 0 );
 	    }
 	++ n_blocks;
         }
@@@@ -223,17 +223,17 @@@@ c_test() 
 return(0);
 }
 
-stop_count()
+void
+stop_count( int sigraised)
 {
 extern int sigalarm;
+(void) sigraised;
 sigalarm = 1;
-return(0);
 }
 
-clean_up()
+void
+clean_up( int sigraised )
 {
-if( unlink(FNAME0) || unlink(FNAME1))
-	return(-1);
-else
-	return(0);
+    (void) sigraised;
+    unlink(FNAME0) || unlink(FNAME1);
 }
@
