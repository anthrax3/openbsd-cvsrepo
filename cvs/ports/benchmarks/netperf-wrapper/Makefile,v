head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.2
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.7.0.2
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	sthen_20130605:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2017.07.17.19.13.37;	author kili;	state Exp;
branches;
next	1.7;
commitid	PoPJlw2ek44na0Yx;

1.7
date	2017.03.09.18.55.47;	author sthen;	state Exp;
branches;
next	1.6;
commitid	U7ilQUFQKf6Q22Sk;

1.6
date	2015.11.06.20.42.26;	author sthen;	state Exp;
branches;
next	1.5;
commitid	Baud8yhE9j1MNOCa;

1.5
date	2015.11.06.17.10.05;	author bentley;	state Exp;
branches;
next	1.4;
commitid	Bj0po3vdAspKpnir;

1.4
date	2015.10.21.13.07.51;	author sthen;	state Exp;
branches;
next	1.3;
commitid	aEPQ3LZp0w6w3d5w;

1.3
date	2015.07.18.14.40.46;	author jasper;	state Exp;
branches;
next	1.2;
commitid	vbhTWLDtwt8oFkV8;

1.2
date	2015.04.02.14.21.13;	author jasper;	state Exp;
branches;
next	1.1;
commitid	4Dkfcsk2uZtFDSwy;

1.1
date	2013.06.04.23.45.43;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.06.04.23.45.43;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Bump -gui subpackage after the renaming of py-qt5,-main to py-qt5.
@
text
@# $OpenBSD: Makefile,v 1.7 2017/03/09 18:55:47 sthen Exp $

COMMENT-main=	test network latency under load via netperf
COMMENT-gui=	GUI for flent (test network latency under load via netperf)

MODPY_EGG_VERSION= 1.0.1
DISTNAME=	flent-${MODPY_EGG_VERSION}
PKGNAME-main=	flent-${MODPY_EGG_VERSION}
PKGNAME-gui=	flent-gui-${MODPY_EGG_VERSION}

REVISION-gui=	0

CATEGORIES=	benchmarks net

HOMEPAGE=	https://github.com/tohojo/netperf-wrapper

# GPLv3+
PERMIT_PACKAGE_CDROM=	Yes

MULTI_PACKAGES=	-main -gui

MODPY_PI=	Yes
MODPY_SETUPTOOLS= Yes
MODPY_VERSION=	${MODPY_DEFAULT_VERSION_3}

MODULES=	lang/python

RUN_DEPENDS-main= benchmarks/netperf \
		net/fping>=2.5 \
		graphics/py-matplotlib${MODPY_FLAVOR}

RUN_DEPENDS-gui= ${RUN_DEPENDS-main} \
		devel/desktop-file-utils \
		misc/shared-mime-info \
		x11/py-qt5${MODPY_FLAVOR}

NO_TEST=	Yes

post-build:
	sed -i 's,/usr/local,${TRUEPREFIX},' ${WRKSRC}/flent/build_info.py

.include <bsd.port.mk>
@


1.7
log
@update/rename netperf-wrapper-0.9.1 to flent-1.0.1, split -gui to a separate
package
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2015/11/06 20:42:26 sthen Exp $
d10 2
@


1.6
log
@fix netperf-wrapper manpage install location, spotted by bentley@@
adjust DESCR while there
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2015/11/06 17:10:05 bentley Exp $
d3 2
a4 1
COMMENT=	test network latency under load via netperf
d6 4
a9 3
MODPY_EGG_VERSION= 0.9.1
REVISION=	1
DISTNAME=	netperf-wrapper-${MODPY_EGG_VERSION}
d18 5
a22 1
MODPY_PI =	Yes
d25 6
a30 1
RUN_DEPENDS=	benchmarks/netperf \
d32 2
a33 2
		graphics/py-matplotlib>=1.2 \
		net/fping>=2.4b2p7
d38 1
a38 2
	sed -i 's,/usr/local,${TRUEPREFIX},' \
		${WRKSRC}/netperf_wrapper/build_info.py
@


1.5
log
@Add desktop goos.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2015/10/21 13:07:51 sthen Exp $
d6 1
a7 1
REVISION=	0
@


1.4
log
@update to netperf-wrapper-0.9.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2015/07/18 14:40:46 jasper Exp $
d7 1
d20 1
@


1.3
log
@use sed -i
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2015/04/02 14:21:13 jasper Exp $
d5 1
a5 1
MODPY_EGG_VERSION= 0.5.6
@


1.2
log
@- switch to MODPY_PI
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/06/04 23:45:43 sthen Exp $
d25 2
a26 2
	perl -pi -e 's,/usr/local,${TRUEPREFIX},' \
	    ${WRKSRC}/netperf_wrapper/build_info.py
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d15 1
a15 1
MASTER_SITES=	${MASTER_SITE_PYPI:=n/netperf-wrapper/}
@


1.1.1.1
log
@import benchmarks/netperf-wrapper, ok edd@@

This is a tool to run multiple simultaneous netperf/iperf/ping instances,
aggregate and plot the results. It is currently used as a main test tool by
the bufferbloat project investigating network performance under load with
active queue management mechanisms.

Several commands can be run in parallel and, provided they output
timestamped values, the test data points can be aligned with each other
in time, interpolating differences between the actual measurement points.
This makes it possible to graph (e.g.) ping times before, during and
after a link is loaded.

Aggregated data can be saved in a json format, output as csv values,
emacs org mode tables or, if py-matplotlib is installed, plots.
Each test can specify several different plots, including time-series
plots of the values against each other, as well as CDF plots of
(e.g.) ping times.
@
text
@@
