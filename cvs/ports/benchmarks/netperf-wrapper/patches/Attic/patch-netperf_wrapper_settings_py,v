head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	sthen_20130605:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.10.21.13.07.51;	author sthen;	state dead;
branches;
next	1.1;
commitid	aEPQ3LZp0w6w3d5w;

1.1
date	2013.06.04.23.45.43;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.06.04.23.45.43;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to netperf-wrapper-0.9.1
@
text
@$OpenBSD: patch-netperf_wrapper_settings_py,v 1.1 2013/06/04 23:45:43 sthen Exp $
--- netperf_wrapper/settings.py.orig	Thu Apr 18 20:43:47 2013
+++ netperf_wrapper/settings.py	Thu Apr 18 21:04:50 2013
@@@@ -147,7 +147,7 @@@@ class TestEnvironment(object):
                                     stdout=subprocess.PIPE,
                                     stderr=subprocess.PIPE)
             out,err = proc.communicate()
-            if "print timestamp before each output line" in str(out):
+            if "print timestamp before each output line" in str(err):
                 # fping has timestamp option, use it
                 # there's no timeout parameter for fping, calculate a total number
                 # of pings to send
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import benchmarks/netperf-wrapper, ok edd@@

This is a tool to run multiple simultaneous netperf/iperf/ping instances,
aggregate and plot the results. It is currently used as a main test tool by
the bufferbloat project investigating network performance under load with
active queue management mechanisms.

Several commands can be run in parallel and, provided they output
timestamped values, the test data points can be aligned with each other
in time, interpolating differences between the actual measurement points.
This makes it possible to graph (e.g.) ping times before, during and
after a link is loaded.

Aggregated data can be saved in a json format, output as csv values,
emacs org mode tables or, if py-matplotlib is installed, plots.
Each test can specify several different plots, including time-series
plots of the values against each other, as well as CDF plots of
(e.g.) ping times.
@
text
@@
