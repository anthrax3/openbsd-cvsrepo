head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.16
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.14
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	ajacoutot_20070510:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.07.02.06.22.27;	author rpe;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.10.11.17.20;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.05.10.11.17.20;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to 1.1

ok aja@@
@
text
@SHA256 (blogbench-1.1.tar.gz) = jN7QWb/bzLe+NbtqInLs/b4/vqQ9U8krpVcqwk8mxN8=
SIZE (blogbench-1.1.tar.gz) = 137664
@


1.1
log
@Initial revision
@
text
@d1 2
a2 5
MD5 (blogbench-1.0.tar.gz) = ga0k7FYkArz2G+tIgKUcUA==
RMD160 (blogbench-1.0.tar.gz) = BWfo2M2rYjKorR1w/bkivPsrC7U=
SHA1 (blogbench-1.0.tar.gz) = CmVTLXUDQW49io550Q95VW5o2DE=
SHA256 (blogbench-1.0.tar.gz) = 3CkmGhkGSo+2TTmydgfxnTszzjeVkI5xdAQWdofvM74=
SIZE (blogbench-1.0.tar.gz) = 129356
@


1.1.1.1
log
@Import blogbench-1.0

Blogbench is a portable filesystem benchmark that tries to reproduce the
load of a real-world busy file server.
It stresses the filesystem with multiple threads performing random
reads, writes and rewrites in order to get a realistic idea of the
scalability and the concurrency a system can handle.

ok bernd@@
@
text
@@
