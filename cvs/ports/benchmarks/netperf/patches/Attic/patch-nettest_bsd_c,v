head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.0.18
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.16
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.14
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.10
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.04.18.18.29.20;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2008.09.17.12.39.17;	author markus;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to netperf 2.6.0
@
text
@$OpenBSD: patch-nettest_bsd_c,v 1.1 2008/09/17 12:39:17 markus Exp $
--- nettest_bsd.c.orig	Wed Sep  3 20:35:56 2008
+++ nettest_bsd.c	Wed Sep  3 20:36:04 2008
@@@@ -4885,6 +4885,24 @@@@ recv_udp_stream()
     send_response();
     exit(1);
   }
+
+  if (!udp_stream_request->ipaddress && !udp_stream_request->port) {
+    struct sockaddr_in temp;
+
+    bzero(&temp,sizeof(temp));
+    temp.sin_port = 0;
+    temp.sin_family = AF_INET;
+    temp.sin_addr.s_addr = 0;
+    if (bind(s_data,
+	     (struct sockaddr *)&temp,
+	     sizeof(struct sockaddr_in)) < 0) {
+      fprintf(where,
+	      "netperf: recv_udp_stream: data socket bind failed errno %d\n",
+	      errno);
+      fprintf(where," port: %d\n",ntohs(temp.sin_port));
+      fflush(where);
+    }
+  }
   
   udp_stream_response->test_length = udp_stream_request->test_length;
   
@


1.1
log
@unbreak udp_stream test (missing bind(2)); ok jakob@@
@
text
@d1 1
a1 1
$OpenBSD$
@

