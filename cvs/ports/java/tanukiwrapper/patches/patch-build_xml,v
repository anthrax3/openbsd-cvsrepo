head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.16
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.14
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	jasper_20131007:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.10.14.40.29;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.07.10.14.40.29;	author jasper;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

Correctly recognize and handle OpenBSD.

--- build.xml.orig	Wed Apr 17 07:48:52 2013
+++ build.xml	Tue Jul  2 14:28:54 2013
@@@@ -95,6 +95,9 @@@@
         <condition property="dist.os" value="os400">
             <equals arg1="${os.name}" arg2="OS/400"/>
         </condition>
+        <condition property="dist.os" value="openbsd">
+            <equals arg1="${os.name}" arg2="OpenBSD"/>
+        </condition>
         <property name="dist.os" value="${os.name}"/>
         
         <!-- Resolve an architecture to use in release names. -->
@@@@ -395,6 +398,7 @@@@
             <or>
                 <isset property="is.osf1"/>
                 <isset property="is.freebsd"/>
+		<isset property="is.openbsd"/>
                 <isset property="is.irix"/>
                 <isset property="is.solaris"/>
             </or>
@@@@ -1833,6 +1837,8 @@@@ original tar distribution due to a lack of support for
         <release-delta-extract-platform osname="windows" osarch="x86" bits="32" wrapperbinhead="wrapper" wrapperbintail=".exe" wrapperlibhead="wrapper" wrapperlibtail=".dll" archivetype="zip"/>
         <release-delta-extract-platform osname="linux" osarch="armel" bits="32" wrapperbinhead="wrapper" wrapperbintail="" wrapperlibhead="libwrapper" wrapperlibtail=".so" archivetype="tar.gz"/>
         <release-delta-extract-platform osname="linux" osarch="armhf" bits="32" wrapperbinhead="wrapper" wrapperbintail="" wrapperlibhead="libwrapper" wrapperlibtail=".so" archivetype="tar.gz"/>
+        <release-delta-extract-platform osname="openbsd" osarch="x86" bits="32" wrapperbinhead="wrapper" wrapperbintail="" wrapperlibhead="libwrapper" wrapperlibtail=".so" archivetype="tar.gz"/>
+        <release-delta-extract-platform osname="openbsd" osarch="x86" bits="64" wrapperbinhead="wrapper" wrapperbintail="" wrapperlibhead="libwrapper" wrapperlibtail=".so" archivetype="tar.gz"/>
     </target>
     <target name="release-delta" depends="pre-release:check, release-delta:init, pre-release:restore-jdocs, release-delta:extract-platforms">
         <property name="deltareleasefile" value="wrapper-delta-pack-${version}"/>
@


1.1.1.1
log
@import tanukiwrapper, based on svn rev 1780

The Java Service Wrapper is an application which has evolved out of a
desire to solve a number of problems common to many Java applications:

  - Run as a Windows Service or Unix Daemon
  - Application Reliability
  - Standard, Out of the Box Scripting
  - On Demand Restarts
  - Flexible Configuration
  - Ease Application Installations
  - Logging

ok aja@@
@
text
@@
