head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.16
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.14
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.12
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.8
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	jasper_20131007:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.11.30.01.11.15;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	2013.07.10.14.40.29;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.07.10.14.40.29;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove -lcompat, which isn't even needed.
Inspired by and ok naddy@@
@
text
@# Copyright (c) 1999, 2013 Tanuki Software, Ltd.
# http://www.tanukisoftware.com
# All rights reserved.
#
# This software is the proprietary information of Tanuki Software.
# You shall use it only in accordance with the terms of the
# license agreement you entered into with Tanuki Software.
# http://wrapper.tanukisoftware.com/doc/english/licenseOverview.html

CC = ${CC} -Wall -pedantic -DOPENBSD -I${LOCALBASE}/include -L${LOCALBASE}/lib -liconv -DUNICODE -D_UNICODE

INCLUDE=$(JAVA_HOME)/include

CFLAGS = ${CFLAGS} -I$(INCLUDE) -I$(INCLUDE)/openbsd

wrapper_SOURCE = wrapper.c wrapperinfo.c wrappereventloop.c wrapper_unix.c property.c logger.c wrapper_file.c wrapper_i18n.c

libwrapper_so_OBJECTS = wrapper_i18n.o wrapperjni_unix.o wrapperinfo.o wrapperjni.o

BIN = ../../bin
LIB = ../../lib

all: init wrapper libwrapper.so

clean:
	rm -f *.o

cleanall: clean
	rm -rf *~ .deps
	rm -f $(BIN)/wrapper $(LIB)/libwrapper.so

init:
	if test ! -d .deps; then mkdir .deps; fi

wrapper: $(wrapper_SOURCE)
	$(CC) $(wrapper_SOURCE) -lm -pthread -o $(BIN)/wrapper

libwrapper.so: $(libwrapper_so_OBJECTS)
	$(CC) -shared $(libwrapper_so_OBJECTS) -o $(LIB)/libwrapper.so

#%.o: %.c
#	$(COMPILE) -c $(DEFS) $<
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
	$(CC) $(wrapper_SOURCE) -lm -lcompat -pthread -o $(BIN)/wrapper
@


1.1.1.1
log
@import tanukiwrapper, based on svn rev 1780

The Java Service Wrapper is an application which has evolved out of a
desire to solve a number of problems common to many Java applications:

  - Run as a Windows Service or Unix Daemon
  - Application Reliability
  - Standard, Out of the Box Scripting
  - On Demand Restarts
  - Flexible Configuration
  - Ease Application Installations
  - Logging

ok aja@@
@
text
@@
