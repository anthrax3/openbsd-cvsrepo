head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.6
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.20
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.18
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.16
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.14
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.12
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.10
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.06.17.19.06.58;	author jasper;	state Exp;
branches;
next	1.3;
commitid	xVl3W2AsMZz7n9ZZ;

1.3
date	2010.06.07.23.30.48;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.26.12.26.21;	author kevlo;	state dead;
branches;
next	1.1;

1.1
date	2004.01.28.20.39.44;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to jlint-3.1.2
@
text
@$OpenBSD: patch-jlint_cc,v 1.3 2010/06/07 23:30:48 espie Exp $
--- jlint.cc.orig	Tue Jan 11 03:42:33 2011
+++ jlint.cc	Wed Jun 17 21:04:30 2015
@@@@ -138,7 +138,7 @@@@ int get_type(utf_string const& str) 
 
 void format_message(int code, utf_string const& file, int line, __VALIST ap)
 {
-  static int loop_id;
+  static long loop_id;
   static message_node *first, *last;
   static char* compound_message;
   const void* parameter[MAX_MSG_PARAMETERS];
@@@@ -151,7 +151,7 @@@@ void format_message(int code, utf_string const& file, 
     if (compound_message != NULL
         && ((loop_id != 0 
              && ((code != msg_loop && code != msg_sync_loop)
-                 || (int)(long)parameter[2] != loop_id))
+                 || (long)parameter[2] != loop_id))
             || (loop_id == 0 && code != msg_wait_path)))
       {
         if (!message_node::find(compound_message)) { 
@@@@ -226,7 +226,7 @@@@ void format_message(int code, utf_string const& file, 
                            name.as_asciz()); 
             break;
           case 'd': // integer
-            dst += sprintf(dst, "%d", (int)(long)parameter[index]);  
+            dst += sprintf(dst, "%d", (long)parameter[index]);  
             break;
           default:
             assert(false/*bad message parameter format*/);
@@@@ -262,7 +262,7 @@@@ void format_message(int code, utf_string const& file, 
               compound_message = strdup(his_buf);
               first = last = new message_node(msg_buf);
               if (code != msg_wait) { 
-                loop_id = (int)(long)parameter[2];
+                loop_id = (long)parameter[2];
               }
             } else if (!message_node::find(his_buf)) { 
               fprintf(stdout, "%s\n", msg_buf);
@


1.3
log
@yet another piece of shit compiles on LP64+gcc4 again
@
text
@d1 4
a4 4
$OpenBSD$
--- jlint.cc.orig	Tue Jun  8 01:27:51 2010
+++ jlint.cc	Tue Jun  8 01:29:18 2010
@@@@ -137,7 +137,7 @@@@ int get_type(utf_string const& str) 
d13 1
a13 1
@@@@ -150,7 +150,7 @@@@ void format_message(int code, utf_string const& file, 
d17 1
a17 1
-                 || (int)parameter[2] != loop_id))
d22 1
a22 1
@@@@ -225,7 +225,7 @@@@ void format_message(int code, utf_string const& file, 
d26 2
a27 2
-            dst += sprintf(dst, "%d", (int)parameter[index]);  
+            dst += sprintf(dst, "%ld", (long)parameter[index]);  
d31 1
a31 1
@@@@ -261,7 +261,7 @@@@ void format_message(int code, utf_string const& file, 
d35 1
a35 1
-                loop_id = (int)parameter[2];
@


1.2
log
@upgrade to jlint 3.0
@
text
@d1 4
a4 4
$OpenBSD: patch-jlint_cc,v 1.1 2004/01/28 20:39:44 naddy Exp $
--- jlint.cc.orig	2004-01-28 21:32:42.000000000 +0100
+++ jlint.cc	2004-01-28 21:33:12.000000000 +0100
@@@@ -37,7 +37,7 @@@@ field_desc* is_const;
d6 34
a39 7
 message_descriptor msg_table[] = {
 #define MSG(category, code, position_dependent, format) \
-{cat_##category, MSG_LOCATION_PREFIX##format, #code, position_dependent, true},
+{cat_##category, MSG_LOCATION_PREFIX format, #code, position_dependent, true},
 #include "jlint.msg"
   {cat_all}
 };
@


1.1
log
@C++ and preprocessor fixes for gcc3; partly from FreeBSD
@
text
@d1 1
a1 1
$OpenBSD$
@

