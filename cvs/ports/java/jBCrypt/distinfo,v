head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.10
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.1.1.1.0.10
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.8
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.6
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.4
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	sthen_20120523:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.02.06.14.11.46;	author sthen;	state Exp;
branches;
next	1.2;
commitid	LEr1LbQF6z9izgng;

1.2
date	2015.01.18.03.14.17;	author naddy;	state Exp;
branches;
next	1.1;
commitid	INAcawJqik7lWSVj;

1.1
date	2012.05.23.15.02.52;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.05.23.15.02.52;	author sthen;	state Exp;
branches
	1.1.1.1.10.1;
next	;

1.1.1.1.10.1
date	2015.02.06.14.12.35;	author sthen;	state Exp;
branches;
next	;
commitid	HHt5hTu3Z79qDLyl;


desc
@@


1.3
log
@update to jBCrypt 0.4, fixing an integer overflow that occurs with very
large log_rounds values.
@
text
@SHA256 (jBCrypt-0.4.tar.gz) = HCDVsdF5+2PZpOspX3DJbinNvbYXMVCDhUAhAhBiMFM=
SIZE (jBCrypt-0.4.tar.gz) = 15167
@


1.2
log
@Drop remaining MD5/RMD160/SHA1 checksums.
@
text
@d1 2
a2 2
SHA256 (jBCrypt-0.3.tar.gz) = 6zl4Ax0ijEAQsf4jM8eGSAUEfomMR7/32cqDYJEdjco=
SIZE (jBCrypt-0.3.tar.gz) = 14340
@


1.1
log
@Initial revision
@
text
@a0 3
MD5 (jBCrypt-0.3.tar.gz) = hLyQRmn1MrelX8ZWwPXG1g==
RMD160 (jBCrypt-0.3.tar.gz) = 04DrElYzvY5K1OYfbpExWfp4FNI=
SHA1 (jBCrypt-0.3.tar.gz) = VhQo/McYU7+lpHUe35kNSpP7ZE4=
@


1.1.1.1
log
@import java/jBCrypt, ok okan@@

jBCrypt is a Java implementation of OpenBSD's Blowfish password
hashing code, compatible with the canonical C implementation of the
bcrypt algorithm.

This system hashes passwords using a version of Bruce Schneier's
Blowfish block cipher with modifications designed to raise the cost
of off-line password cracking and frustrate fast hardware implementation.
The computation cost of the algorithm is parametised, so it can be
increased as computers get faster. The intent is to make a compromise
of a password database less likely to result in an attacker gaining
knowledge of the plaintext passwords (e.g. using John the Ripper).
@
text
@@


1.1.1.1.10.1
log
@MFC update to jBCrypt 0.4, fixing an integer overflow that occurs with very
large log_rounds values.
@
text
@d1 5
a5 2
SHA256 (jBCrypt-0.4.tar.gz) = HCDVsdF5+2PZpOspX3DJbinNvbYXMVCDhUAhAhBiMFM=
SIZE (jBCrypt-0.4.tar.gz) = 15167
@

