head	1.3;
access;
symbols
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.6
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	mpegaudio:1.1.1.1
	angelos:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2003.04.14.09.46.06;	author avsm;	state dead;
branches;
next	1.2;

1.2
date	99.11.29.14.39.45;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	98.05.20.06.41.37;	author angelos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.05.20.06.41.37;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.3
log
@- fix another static buffer overflow in fgets
- use update-patches
@
text
@--- musicout.c.orig	Tue Jan  4 23:39:27 1994
+++ musicout.c	Mon Nov 29 08:57:11 1999
@@@@ -58,6 +58,8 @@@@
 #include        "common.h"
 #include        "decoder.h"
 
+#include <stdlib.h>
+
 /********************************************************************
 /*
 /*        This part contains the MPEG I decoder for Layers I & II.
@@@@ -139,7 +141,7 @@@@
     if(argc==1) {        /* no command line args -> interact */
        do {
           printf ("Enter encoded file name <required>: ");
-          gets (encoded_file_name);
+          fgets (encoded_file_name, MAX_NAME_SIZE-1, stdin);
           if (encoded_file_name[0] == NULL_CHAR)
              printf ("Encoded file name is required. \n");
        } while (encoded_file_name[0] == NULL_CHAR);
@@@@ -151,7 +153,7 @@@@
        printf ("Enter MPEG decoded file name <%s%s>: ", encoded_file_name,
                DFLT_OPEXT);
 #endif
-       gets (decoded_file_name);
+       fgets (decoded_file_name, MAX_NAME_SIZE-1,stdin);
        if (decoded_file_name[0] == NULL_CHAR) {
 #ifdef  MS_DOS
            /* replace old extension with new one, 92-08-19 shn */
@@@@ -164,7 +166,7 @@@@
 
        printf(
           "Do you wish to write an AIFF compatible sound file ? (y/<n>) : ");
-       gets(t);
+       fgets(t, 49, stdin);
        if (*t == 'y' || *t == 'Y') need_aiff = TRUE;
        else                        need_aiff = FALSE;
        if (need_aiff)
@@@@ -173,7 +175,7 @@@@
 
        printf(
           "Do you wish to exit (last chance before decoding) ? (y/<n>) : ");
-       gets(t);
+       fgets(t, 49, stdin);
        if (*t == 'y' || *t == 'Y') exit(0);
     }
     else {        /* interpret CL Args */
@


1.2
log
@- switch to using ${MASTER_SITE_BACKUP} for the dist site
- convert patches to unified diffs
@
text
@@


1.1
log
@Initial revision
@
text
@d1 47
a47 81
*** musicout.c.orig	Tue Jan  4 23:39:27 1994
--- musicout.c	Wed May 20 02:41:53 1998
***************
*** 58,63 ****
--- 58,65 ----
  #include        "common.h"
  #include        "decoder.h"
  
+ #include <stdlib.h>
+ 
  /********************************************************************
  /*
  /*        This part contains the MPEG I decoder for Layers I & II.
***************
*** 139,145 ****
      if(argc==1) {        /* no command line args -> interact */
         do {
            printf ("Enter encoded file name <required>: ");
!           gets (encoded_file_name);
            if (encoded_file_name[0] == NULL_CHAR)
               printf ("Encoded file name is required. \n");
         } while (encoded_file_name[0] == NULL_CHAR);
--- 141,147 ----
      if(argc==1) {        /* no command line args -> interact */
         do {
            printf ("Enter encoded file name <required>: ");
!           fgets (encoded_file_name, MAX_NAME_SIZE-1, stdin);
            if (encoded_file_name[0] == NULL_CHAR)
               printf ("Encoded file name is required. \n");
         } while (encoded_file_name[0] == NULL_CHAR);
***************
*** 151,157 ****
         printf ("Enter MPEG decoded file name <%s%s>: ", encoded_file_name,
                 DFLT_OPEXT);
  #endif
!        gets (decoded_file_name);
         if (decoded_file_name[0] == NULL_CHAR) {
  #ifdef  MS_DOS
             /* replace old extension with new one, 92-08-19 shn */
--- 153,159 ----
         printf ("Enter MPEG decoded file name <%s%s>: ", encoded_file_name,
                 DFLT_OPEXT);
  #endif
!        fgets (decoded_file_name, MAX_NAME_SIZE-1,stdin);
         if (decoded_file_name[0] == NULL_CHAR) {
  #ifdef  MS_DOS
             /* replace old extension with new one, 92-08-19 shn */
***************
*** 164,170 ****
  
         printf(
            "Do you wish to write an AIFF compatible sound file ? (y/<n>) : ");
!        gets(t);
         if (*t == 'y' || *t == 'Y') need_aiff = TRUE;
         else                        need_aiff = FALSE;
         if (need_aiff)
--- 166,172 ----
  
         printf(
            "Do you wish to write an AIFF compatible sound file ? (y/<n>) : ");
!        fgets(t, 49, stdin);
         if (*t == 'y' || *t == 'Y') need_aiff = TRUE;
         else                        need_aiff = FALSE;
         if (need_aiff)
***************
*** 173,179 ****
  
         printf(
            "Do you wish to exit (last chance before decoding) ? (y/<n>) : ");
!        gets(t);
         if (*t == 'y' || *t == 'Y') exit(0);
      }
      else {        /* interpret CL Args */
--- 175,181 ----
  
         printf(
            "Do you wish to exit (last chance before decoding) ? (y/<n>) : ");
!        fgets(t, 49, stdin);
         if (*t == 'y' || *t == 'Y') exit(0);
      }
      else {        /* interpret CL Args */
@


1.1.1.1
log
@mpegaudio port
@
text
@@
