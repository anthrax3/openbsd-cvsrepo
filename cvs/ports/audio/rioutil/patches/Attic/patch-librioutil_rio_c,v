head	1.2;
access;
symbols
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.03.22.06.34.08;	author ajacoutot;	state dead;
branches;
next	1.1;
commitid	LQaCz0tD6ZIoCaWU;

1.1
date	2010.05.20.09.58.36;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove unmaintained (and probably unused) rioutil.

As sthen@@ puts it: "It will always be in the attic (alongside those
dusty old mp3 players) if somebody desperately needs it.

ok sthen@@ jasper@@
@
text
@$OpenBSD: patch-librioutil_rio_c,v 1.1 2010/05/20 09:58:36 espie Exp $
--- librioutil/rio.c.orig	Thu May 20 11:56:03 2010
+++ librioutil/rio.c	Thu May 20 11:56:33 2010
@@@@ -373,7 +373,8 @@@@ int get_flist_riohd (rios_t *rio, u_int8_t memory_unit
     return ret;
   }
 
-  iptr = (u_int32_t *)read_buffer = (u_int8_t *) malloc (RIO_FTS);
+  read_buffer = (u_int8_t *) malloc (RIO_FTS);
+  iptr = (u_int32_t *)read_buffer;
   if (read_buffer == NULL) {
     rio_log (rio, errno, "Could not allocate read buffer\n");
     return errno;
@


1.1
log
@beurk. fix atrocious casts
@
text
@d1 1
a1 1
$OpenBSD$
@

