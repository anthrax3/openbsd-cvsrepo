head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	ajacoutot_20090603:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2012.06.09.09.46.18;	author pascal;	state dead;
branches;
next	1.3;

1.3
date	2010.06.01.12.47.10;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.24.17.37.54;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.03.18.25.25;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.03.18.25.25;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xmms2 0.8, with small tweaks from Brad.

ok aja@@, maintainer timeout
@
text
@$OpenBSD: patch-wafadmin_Tools_ccroot_py,v 1.3 2010/06/01 12:47:10 dcoppa Exp $

Don't create symlink for shared libraries versions.
Use good version numbers for libs.

--- wafadmin/Tools/ccroot.py.orig	Sun Mar 14 17:57:48 2010
+++ wafadmin/Tools/ccroot.py	Sun Mar 14 17:59:04 2010
@@@@ -580,7 +580,7 @@@@ def apply_vnum(self):
 		name2 = libname + '.' + nums[0]
 
 	if self.env.SONAME_ST:
-		v = self.env.SONAME_ST % name2
+		v = self.env.SONAME_ST % name3
 		self.env.append_value('LINKFLAGS', v.split())
 
 	bld = self.bld
@@@@ -590,13 +590,13 @@@@ def apply_vnum(self):
 	if not path: return
 
 	bld.install_as(path + os.sep + name3, node, env=self.env)
-	bld.symlink_as(path + os.sep + name2, name3)
-	bld.symlink_as(path + os.sep + libname, name3)
+	#bld.symlink_as(path + os.sep + name2, name3)
+	#bld.symlink_as(path + os.sep + libname, name3)
 
 	# the following task is just to enable execution from the build dir :-/
 	tsk = self.create_task('vnum')
 	tsk.set_inputs([node])
-	tsk.set_outputs(node.parent.find_or_declare(name2))
+	tsk.set_outputs(node.parent.find_or_declare(name3))
 
 def exec_vnum_link(self):
 	path = self.outputs[0].abspath(self.env)
@


1.3
log
@s/librairies/libraries/

OK ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-wafadmin_Tools_ccroot_py,v 1.2 2010/04/24 17:37:54 jasper Exp $
@


1.2
log
@- update xmms2 to 0.7

from maintainer
@
text
@d1 1
a1 1
$OpenBSD: patch-wafadmin_Tools_ccroot_py,v 1.1.1.1 2009/06/03 18:25:25 ajacoutot Exp $
d3 1
a3 1
Don't create symlink for shared librairies versions.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d4 1
a4 1
Don't put (wrong) SONAME in shared libraries.
d6 4
a9 10
--- wafadmin/Tools/ccroot.py.orig	Tue Apr 21 19:50:47 2009
+++ wafadmin/Tools/ccroot.py	Tue May 26 23:24:47 2009
@@@@ -113,8 +113,8 @@@@ def install_shlib(self):
 	filename = self.outputs[0].abspath(self.env)
 	bld = Build.bld
 	bld.install_as(os.path.join(path, name3), filename, env=self.env)
-	bld.symlink_as(os.path.join(path, name2), name3)
-	bld.symlink_as(os.path.join(path, name1), name3)
+	#bld.symlink_as(os.path.join(path, name2), name3)
+	#bld.symlink_as(os.path.join(path, name1), name3)
d11 4
a14 1
 # TODO reference the d programs, shlibs in d.py, not here
d16 3
a18 6
@@@@ -384,7 +384,7 @@@@ def apply_vnum(self):
 			try: name3 = self.soname
 			except AttributeError: name3 = self.link_task.outputs[0].name + '.' + nums[0]
 			self.link_task.outputs.append(self.link_task.outputs[0].parent.find_or_declare(name3))
-			self.env.append_value('LINKFLAGS', '-Wl,-h,'+name3)
+			self.env.append_value('LINKFLAGS', '-Wl')
d20 14
a33 2
 @@taskgen
 @@after('apply_link')
@


1.1.1.1
log
@Import xmms2-0.6

X-platform Music Multiplexing System 2 is a client-server audio player.
Client-server model allows XMMS2 to have various multiple (remote)
interfaces (as clients):
    * Command line interfaces
    * GTK clients (matching GNOME & Xfce4 look and feel)
    * KDE clients (matching KDE look and feel)
It has a wide format support and can play over different media.
It comes with Medialib, a database-driven media library which stores
metadata about songs as they're played, so songs can be quickly recalled
and new playlists easily made. The media library can be easily queried
and managed using Collections.

from Amaury Gauthier (maintainer) with several tweaks by me
@
text
@@
