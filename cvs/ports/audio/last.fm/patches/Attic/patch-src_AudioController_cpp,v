head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.05.28.10.03.00;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2011.03.30.14.00.48;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bye bye last.fm: marked broken since four months and nobody cared.
@
text
@$OpenBSD: patch-src_AudioController_cpp,v 1.1 2011/03/30 14:00:48 dcoppa Exp $
--- src/AudioController.cpp.orig	Wed Mar 30 13:37:45 2011
+++ src/AudioController.cpp	Wed Mar 30 13:38:36 2011
@@@@ -134,6 +134,8 @@@@ AudioControllerThread::run()
              this,    SLOT  ( onTimerTimeout() ),
              Qt::DirectConnection );
 
+    m_output->setBufferCapacity( kOutputBufferMinSize );
+    m_output->setDevice( The::settings().soundCard() );
 
     // What is this interval exactly?
     // It's how often we send out timeChanged signals (500 ms)
@@@@ -168,19 +170,10 @@@@ AudioControllerThread::loadPlugins()
 
     m_transcode->setBufferCapacity( kDecodedBufferMinSize );
 
-    #ifdef WIN32
-        m_output = qobject_cast<OutputInterface*>( loadPlugin( "rtaudioplayback" ) );
-    #elif defined LINUX
-        m_output = qobject_cast<OutputInterface*>( loadPlugin( "output_alsa" ) );
-    #else
-        m_output = qobject_cast<OutputInterface*>( loadPlugin( "output_portaudio" ) );
-    #endif
+    m_output = qobject_cast<OutputInterface*>( loadPlugin( "output_portaudio" ) );
 
     if ( m_output == 0 )
         return false;
-
-    m_output->setBufferCapacity( kOutputBufferMinSize );
-    m_output->setDevice( The::settings().soundCard() );
 
     m_proxyOutput = new ProxyOutput();
 
@


1.1
log
@Update to last.fm 1.5.4.27091

Still happy with gcc 3.3.5

Tested on sparc64 and i386
@
text
@d1 1
a1 1
$OpenBSD$
@

