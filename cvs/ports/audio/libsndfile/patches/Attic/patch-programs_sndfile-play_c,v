head	1.3;
access;
symbols
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2011.04.14.07.27.00;	author dcoppa;	state dead;
branches;
next	1.2;

1.2
date	2010.01.02.17.53.27;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.26.17.18.42;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to libsndfile-1.0.24

OK naddy@@
@
text
@$OpenBSD: patch-programs_sndfile-play_c,v 1.2 2010/01/02 17:53:27 naddy Exp $
--- programs/sndfile-play.c.orig	Wed Dec  2 10:45:39 2009
+++ programs/sndfile-play.c	Thu Dec 31 02:41:17 2009
@@@@ -57,6 +57,9 @@@@
 	#include <Carbon.h>
 	#include <CoreAudio/AudioHardware.h>
 
+#elif defined(USE_SNDIO)
+	#include <sndio.h>
+
 #elif (defined (sun) && defined (unix))
 	#include <fcntl.h>
 	#include <sys/ioctl.h>
@@@@ -820,6 +823,67 @@@@ win32_play (int argc, char *argv [])
 #endif /* Win32 */
 
 /*------------------------------------------------------------------------------
+**	Sndio.
+*/
+
+#if defined (USE_SNDIO)
+
+static void
+sndio_play (int argc, char *argv [])
+{
+	struct sio_hdl	*hdl;
+	struct sio_par  par;
+	short	 	buffer[BUFFER_LEN];
+	SNDFILE		*sndfile;
+	SF_INFO		sfinfo;
+	int		k, readcount;
+
+	for (k = 1; k < argc; k++)
+	{	printf ("Playing %s\n", argv [k]) ;
+		if (! (sndfile = sf_open (argv [k], SFM_READ, &sfinfo)))
+		{	puts (sf_strerror (NULL)) ;
+			continue ;
+			} ;
+
+		if (sfinfo.channels < 1 || sfinfo.channels > 2)
+		{	printf ("Error : channels = %d.\n", sfinfo.channels) ;
+			continue ;
+			} ;
+
+		if ((hdl = sio_open(NULL, SIO_PLAY, 0)) == NULL)
+		{	fprintf(stderr, "open sndio device failed") ;
+			return ;
+			} ;
+
+		sio_initpar(&par);
+		par.rate = sfinfo.samplerate ;
+		par.pchan = sfinfo.channels ;
+		par.bits = 16 ;
+		par.sig = 1;
+		par.le = SIO_LE_NATIVE;
+
+		if (!sio_setpar(hdl, &par) || !sio_getpar(hdl, &par))
+		{	fprintf (stderr, "set sndio params failed") ;
+			return ;
+			} ;
+
+		if (!sio_start(hdl))
+		{	fprintf (stderr, "sndio start failed") ;
+			return ;
+			} ;
+
+		while ((readcount = sf_read_short (sndfile, buffer, BUFFER_LEN)))
+			sio_write (hdl, buffer, readcount * sizeof (short)) ;
+
+		sio_close (hdl) ;
+		} ;
+
+	return ;
+} /* sndio_play */
+
+#endif /* sndio */
+
+/*------------------------------------------------------------------------------
 **	Solaris.
 */
 
@@@@ -941,6 +1005,8 @@@@ main (int argc, char *argv [])
 	opensoundsys_play (argc, argv) ;
 #elif (defined (__MACH__) && defined (__APPLE__))
 	macosx_play (argc, argv) ;
+#elif defined USE_SNDIO
+	sndio_play (argc, argv) ;
 #elif (defined (sun) && defined (unix))
 	solaris_play (argc, argv) ;
 #elif (OS_IS_WIN32 == 1)
@


1.2
log
@* update to 1.0.21
* use sndio instead of ossaudio

with jakemsr@@
@
text
@d1 1
a1 1
$OpenBSD: patch-programs_sndfile-play_c,v 1.1 2009/04/26 17:18:42 jasper Exp $
@


1.1
log
@- update libsndfile to 1.0.19
* includes a SECURITY FIX for CVE-2009-0186
- specify license version
- bump major

ok naddy@@ (MAINTAINER)
@
text
@d1 4
a4 4
$OpenBSD$
--- programs/sndfile-play.c.orig	Wed Apr 22 13:56:05 2009
+++ programs/sndfile-play.c	Wed Apr 22 14:00:49 2009
@@@@ -57,7 +57,7 @@@@
d8 4
a11 2
-#elif (defined (sun) && defined (unix))
+#elif (defined (__OpenBSD__) || (defined (sun) && defined (unix)))
d14 65
a78 2
 	#include <sys/audioio.h>
@@@@ -823,7 +823,7 @@@@ win32_play (int argc, char *argv [])
d82 2
a83 19
-#if (defined (sun) && defined (unix)) /* ie Solaris */
+#if (defined (__OpenBSD__) || (defined (sun) && defined (unix))) /* ie Solaris */
 
 static void
 solaris_play (int argc, char *argv [])
@@@@ -860,9 +860,10 @@@@ solaris_play (int argc, char *argv [])
 		audio_info.play.channels = sfinfo.channels ;
 		audio_info.play.precision = 16 ;
 		audio_info.play.encoding = AUDIO_ENCODING_LINEAR ;
+#if !defined(__OpenBSD__)
 		audio_info.play.gain = AUDIO_MAX_GAIN ;
 		audio_info.play.balance = AUDIO_MID_BALANCE ;
-
+#endif
 		if ((error = ioctl (audio_fd, AUDIO_SETINFO, &audio_info)))
 		{	perror ("ioctl (AUDIO_SETINFO) failed") ;
 			return ;
@@@@ -939,7 +940,7 @@@@ main (int argc, char *argv [])
 		linux_play (argc, argv) ;
d86 3
a88 2
-#elif (defined (sun) && defined (unix))
+#elif (defined (__OpenBSD__) || (defined (sun) && defined (unix)))
a90 1
 	win32_play (argc, argv) ;
@

