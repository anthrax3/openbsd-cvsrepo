head	1.4;
access;
symbols
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	jakemsr-20090111:1.1.1.1
	jakemsr:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2009.03.14.03.48.07;	author jakemsr;	state dead;
branches;
next	1.3;

1.3
date	2009.02.04.06.39.24;	author jakemsr;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.29.13.47.41;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.11.09.22.08;	author jakemsr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.01.11.09.22.08;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to vamp-plugin-sdk-2.0
@
text
@$OpenBSD: patch-Makefile,v 1.3 2009/02/04 06:39:24 jakemsr Exp $
--- Makefile.orig	Wed Jul  9 03:42:49 2008
+++ Makefile	Tue Feb  3 14:16:07 2009
@@@@ -28,7 +28,7 @@@@ default:	all
 
 # Compile flags
 #
-CXXFLAGS	:= $(CXXFLAGS) -O2 -Wall -I. -fPIC
+CXXFLAGS	:= $(CXXFLAGS) -Wall -I. -fPIC
 
 # ar, ranlib
 #
@@@@ -41,7 +41,7 @@@@ RANLIB		:= ranlib
 # compatibility problems.)
 #
 #PLUGIN_LIBS	= $(SDKDIR)/libvamp-sdk.a
-PLUGIN_LIBS	= $(SDKDIR)/libvamp-sdk.a $(shell g++ -print-file-name=libstdc++.a)
+PLUGIN_LIBS	= $(SDKDIR)/libvamp-sdk.a -lstdc++
 
 # File extension for a dynamically loadable object
 #
@@@@ -51,27 +51,27 @@@@ PLUGIN_EXT	= .so
 
 # Libraries required for the host.
 #
-HOST_LIBS	= $(SDKDIR)/libvamp-hostsdk.a -lsndfile -ldl
+HOST_LIBS	= -L$(SDKDIR) -lvamp-hostsdk -lsndfile
 
 # Locations for "make install".  This will need quite a bit of 
 # editing for non-Linux platforms.  Of course you don't necessarily
 # have to use "make install".
 #
-INSTALL_PREFIX	 	  := /usr/local
+INSTALL_PREFIX	 	  := $(PREFIX)
 INSTALL_API_HEADERS	  := $(INSTALL_PREFIX)/include/vamp
 INSTALL_SDK_HEADERS	  := $(INSTALL_PREFIX)/include/vamp-sdk
 INSTALL_HOSTEXT_HEADERS	  := $(INSTALL_PREFIX)/include/vamp-sdk/hostext
 INSTALL_SDK_LIBS	  := $(INSTALL_PREFIX)/lib
 
-INSTALL_SDK_LIBNAME	  := libvamp-sdk.so.1.1.1
-INSTALL_SDK_LINK_ABI	  := libvamp-sdk.so.1
-INSTALL_SDK_LINK_DEV	  := libvamp-sdk.so
+INSTALL_SDK_LIBNAME	  := libvamp-sdk.so.${LIBvamp-sdk_VERSION}
+INSTALL_SDK_LINK_ABI	  := $(INSTALL_SDK_LIBNAME)  #libvamp-sdk.so.1
+INSTALL_SDK_LINK_DEV	  := $(INSTALL_SDK_LIBNAME)  #libvamp-sdk.so
 INSTALL_SDK_STATIC        := libvamp-sdk.a
 INSTALL_SDK_LA            := libvamp-sdk.la
 
-INSTALL_HOSTSDK_LIBNAME   := libvamp-hostsdk.so.2.1.0
-INSTALL_HOSTSDK_LINK_ABI  := libvamp-hostsdk.so.2
-INSTALL_HOSTSDK_LINK_DEV  := libvamp-hostsdk.so
+INSTALL_HOSTSDK_LIBNAME   := libvamp-hostsdk.so.${LIBvamp-hostsdk_VERSION}
+INSTALL_HOSTSDK_LINK_ABI  := $(INSTALL_HOSTSDK_LIBNAME)  #libvamp-hostsdk.so.2
+INSTALL_HOSTSDK_LINK_DEV  := $(INSTALL_HOSTSDK_LIBNAME)  #libvamp-hostsdk.so
 INSTALL_HOSTSDK_STATIC    := libvamp-hostsdk.a
 INSTALL_HOSTSDK_LA        := libvamp-hostsdk.la
 
@@@@ -79,7 +79,7 @@@@ INSTALL_PKGCONFIG	  := $(INSTALL_PREFIX)/lib/pkgconfig
 
 # Flags required to tell the compiler to create a dynamically loadable object
 #
-DYNAMIC_LDFLAGS		= -static-libgcc -shared -Wl,-Bsymbolic
+DYNAMIC_LDFLAGS		= -shared -fPIC
 SDK_DYNAMIC_LDFLAGS	= $(DYNAMIC_LDFLAGS) -Wl,-soname=$(INSTALL_SDK_LINK_ABI)
 HOSTSDK_DYNAMIC_LDFLAGS	= $(DYNAMIC_LDFLAGS) -Wl,-soname=$(INSTALL_HOSTSDK_LINK_ABI)
 
@@@@ -141,10 +141,10 @@@@ HOSTSDK_STATIC	= \
 		$(SDKDIR)/libvamp-hostsdk.a
 
 SDK_DYNAMIC	= \
-		$(SDKDIR)/libvamp-sdk$(PLUGIN_EXT)
+		$(SDKDIR)/$(INSTALL_SDK_LIBNAME)
 
 HOSTSDK_DYNAMIC	= \
-		$(SDKDIR)/libvamp-hostsdk$(PLUGIN_EXT)
+		$(SDKDIR)/$(INSTALL_HOSTSDK_LIBNAME)
 
 SDK_LA		= \
 		$(SDKDIR)/libvamp-sdk.la
@@@@ -187,7 +187,7 @@@@ plugins:	$(PLUGIN_TARGET)
 
 host:		$(HOST_TARGET)
 
-all:		sdk plugins host test
+all:		sdk plugins
 
 $(SDK_STATIC):	$(SDK_OBJECTS) $(API_HEADERS) $(SDK_HEADERS)
 		$(AR) r $@@ $(SDK_OBJECTS)
@@@@ -208,7 +208,7 @@@@ $(HOST_TARGET):	$(HOST_OBJECTS) $(HOSTSDK_STATIC) $(HO
 		$(CXX) $(LDFLAGS) $(HOST_LDFLAGS) -o $@@ $(HOST_OBJECTS) $(HOST_LIBS)
 
 test:		plugins host
-		VAMP_PATH=$(EXAMPLEDIR) $(HOST_TARGET) -l
+		LD_LIBRARY_PATH="./vamp-sdk" VAMP_PATH=$(EXAMPLEDIR) $(HOST_TARGET) -l
 
 clean:		
 		rm -f $(SDK_OBJECTS) $(HOSTSDK_OBJECTS) $(PLUGIN_OBJECTS) $(HOST_OBJECTS)
@@@@ -216,11 +216,12 @@@@ clean:		
 distclean:	clean
 		rm -f $(SDK_STATIC) $(SDK_DYNAMIC) $(HOSTSDK_STATIC) $(HOSTSDK_DYNAMIC) $(PLUGIN_TARGET) $(HOST_TARGET) *~ */*~
 
-install:	$(SDK_STATIC) $(SDK_DYNAMIC) $(HOSTSDK_STATIC) $(HOSTSDK_DYNAMIC) $(PLUGIN_TARGET) $(HOST_TARGET)
+install:	$(SDK_STATIC) $(SDK_DYNAMIC) $(HOSTSDK_STATIC) $(HOSTSDK_DYNAMIC) $(PLUGIN_TARGET)
 		mkdir -p $(DESTDIR)$(INSTALL_API_HEADERS)
 		mkdir -p $(DESTDIR)$(INSTALL_SDK_HEADERS)
 		mkdir -p $(DESTDIR)$(INSTALL_HOSTEXT_HEADERS)
 		mkdir -p $(DESTDIR)$(INSTALL_SDK_LIBS)
+		mkdir -p $(DESTDIR)$(INSTALL_SDK_LIBS)/vamp
 		mkdir -p $(DESTDIR)$(INSTALL_PKGCONFIG)
 		cp $(API_HEADERS) $(DESTDIR)$(INSTALL_API_HEADERS)
 		cp $(SDK_HEADERS) $(DESTDIR)$(INSTALL_SDK_HEADERS)
@@@@ -229,15 +230,16 @@@@ install:	$(SDK_STATIC) $(SDK_DYNAMIC) $(HOSTSDK_STATIC
 		cp $(SDK_STATIC) $(DESTDIR)$(INSTALL_SDK_LIBS)
 		cp $(HOSTSDK_STATIC) $(DESTDIR)$(INSTALL_SDK_LIBS)
 		cp $(SDK_DYNAMIC) $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_SDK_LIBNAME)
+		cp $(PLUGIN_TARGET) $(DESTDIR)$(INSTALL_SDK_LIBS)/vamp/vamp-example-plugins$(PLUGIN_EXT)
 		cp $(HOSTSDK_DYNAMIC) $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_HOSTSDK_LIBNAME)
-		rm -f $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_SDK_LINK_ABI)
-		ln -s $(INSTALL_SDK_LIBNAME) $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_SDK_LINK_ABI)
-		rm -f $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_HOSTSDK_LINK_ABI)
-		ln -s $(INSTALL_HOSTSDK_LIBNAME) $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_HOSTSDK_LINK_ABI)
-		rm -f $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_SDK_LINK_DEV)
-		ln -s $(INSTALL_SDK_LIBNAME) $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_SDK_LINK_DEV)
-		rm -f $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_HOSTSDK_LINK_DEV)
-		ln -s $(INSTALL_HOSTSDK_LIBNAME) $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_HOSTSDK_LINK_DEV)
+		#rm -f $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_SDK_LINK_ABI)
+		#ln -s $(INSTALL_SDK_LIBNAME) $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_SDK_LINK_ABI)
+		#rm -f $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_HOSTSDK_LINK_ABI)
+		#ln -s $(INSTALL_HOSTSDK_LIBNAME) $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_HOSTSDK_LINK_ABI)
+		#rm -f $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_SDK_LINK_DEV)
+		#ln -s $(INSTALL_SDK_LIBNAME) $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_SDK_LINK_DEV)
+		#rm -f $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_HOSTSDK_LINK_DEV)
+		#ln -s $(INSTALL_HOSTSDK_LIBNAME) $(DESTDIR)$(INSTALL_SDK_LIBS)/$(INSTALL_HOSTSDK_LINK_DEV)
 		sed "s,%PREFIX%,$(INSTALL_PREFIX)," $(APIDIR)/vamp.pc.in \
 		> $(DESTDIR)$(INSTALL_PKGCONFIG)/vamp.pc
 		sed "s,%PREFIX%,$(INSTALL_PREFIX)," $(SDKDIR)/vamp-sdk.pc.in \
@


1.3
log
@the example host needs libsndfile.  the example host is used in the
regress target but is not packaged.  only build the sample host in
the regress target and register libsndfile as a REGRESS_DEPENDS.
@
text
@d1 1
a1 1
$OpenBSD: patch-Makefile,v 1.2 2009/01/29 13:47:41 jakemsr Exp $
@


1.2
log
@link with shared stdc++, should fix build on amd64.  I had this on
my amd64 but committed from my i386.

problem noticed by Joe Malcolm, thanks for the report.
@
text
@d1 1
a1 1
$OpenBSD: patch-Makefile,v 1.1.1.1 2009/01/11 09:22:08 jakemsr Exp $
d3 1
a3 1
+++ Makefile	Thu Jan 29 05:27:08 2009
d85 1
a85 1
+all:		sdk plugins host
d98 7
a104 1
@@@@ -221,6 +221,7 @@@@ install:	$(SDK_STATIC) $(SDK_DYNAMIC) $(HOSTSDK_STATIC
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ Makefile	Thu Nov 13 23:12:58 2008
d12 9
@


1.1.1.1
log
@import vamp-plugin-sdk-1.3

Vamp is an audio processing plugin system for plugins that extract
descriptive information from audio data - typically referred to as audio
analysis plugins or audio feature extraction plugins.
@
text
@@
