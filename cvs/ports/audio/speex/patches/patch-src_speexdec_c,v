head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.30
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.28
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.24
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.26
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.22
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.20
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.18
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.16
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.14
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.12
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.10
	OPENBSD_5_0:1.4.0.8
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	naddy_20030612:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2010.01.02.20.44.19;	author jakemsr;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.20.15.54.32;	author naddy;	state dead;
branches;
next	1.2;

1.2
date	2003.09.29.23.45.42;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.12.00.52.02;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.06.12.00.52.02;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@use sndio for audio
ok naddy@@ (MAINTAINER)
@
text
@$OpenBSD$
--- src/speexdec.c.orig	Fri May 30 00:34:16 2008
+++ src/speexdec.c	Sat Jan  2 12:40:42 2010
@@@@ -68,6 +68,9 @@@@
 #include <fcntl.h>
 #include <sys/ioctl.h>
 
+#elif defined USE_SNDIO
+#include <sndio.h>
+
 #elif defined HAVE_SYS_AUDIOIO_H
 #include <sys/types.h>
 #include <fcntl.h>
@@@@ -92,6 +95,10 @@@@
                            ((buf[base+1]<<8)&0xff00)| \
   	           	    (buf[base]&0xff))
 
+#ifdef USE_SNDIO
+struct sio_hdl *hdl;
+#endif
+
 static void print_comments(char *comments, int length)
 {
    char *c=comments;
@@@@ -187,6 +194,32 @@@@ FILE *out_file_open(char *outFile, int rate, int *chan
          exit(1);
       }
       fout = fdopen(audio_fd, "w");
+#elif defined USE_SNDIO
+      struct sio_par par;
+      
+      hdl = sio_open(NULL, SIO_PLAY, 0);
+      if (!hdl)
+      {
+         fprintf(stderr, "Cannot open sndio device\n");
+         exit(1);
+      }
+
+      sio_initpar(&par);
+      par.sig = 1;
+      par.bits = 16;
+      par.rate = rate;
+      par.pchan = *channels;
+
+      if (!sio_setpar(hdl, &par) || !sio_getpar(hdl, &par) ||
+        par.sig != 1 || par.bits != 16 || par.rate != rate) {
+          fprintf(stderr, "could not set sndio parameters\n");
+          exit(1);
+      }
+      *channels = par.pchan;
+      if (!sio_start(hdl)) {
+          fprintf(stderr, "could not start sndio\n");
+          exit(1);
+      }
 #elif defined HAVE_SYS_AUDIOIO_H
       audio_info_t info;
       int audio_fd;
@@@@ -746,6 +779,10 @@@@ int main(int argc, char **argv)
 #if defined WIN32 || defined _WIN32
                         if (strlen(outFile)==0)
                            WIN_Play_Samples (out+frame_offset*channels, sizeof(short) * new_frame_size*channels);
+                        else
+#elif defined USE_SNDIO
+                        if (strlen(outFile)==0)
+                           sio_write (hdl, out+frame_offset*channels, sizeof(short) * new_frame_size*channels);
                         else
 #endif
                            fwrite(out+frame_offset*channels, sizeof(short), new_frame_size*channels, fout);
@


1.3
log
@update to 1.0.3: minor fixes
@
text
@d1 66
a66 4
$OpenBSD: patch-src_speexdec_c,v 1.2 2003/09/29 23:45:42 naddy Exp $
--- src/speexdec.c.orig	2003-09-30 01:35:01.000000000 +0200
+++ src/speexdec.c	2003-09-30 01:35:39.000000000 +0200
@@@@ -194,6 +194,7 @@@@ FILE *out_file_open(char *outFile, int r
d68 1
a68 6
       info.play.encoding = AUDIO_ENCODING_SLINEAR;
       info.play.precision = 16;
+      info.play.sample_rate = rate;
       info.play.channels = *channels;
       
       if (ioctl(audio_fd, AUDIO_SETINFO, &info) < 0)
@


1.2
log
@Maintenance update to 1.0.2.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d2 3
a4 14
--- src/speexdec.c.orig	Thu Jun 12 01:11:28 2003
+++ src/speexdec.c	Thu Jun 12 01:14:31 2003
@@@@ -56,6 +56,14 @@@@
 #include <sys/stat.h>
 #include <fcntl.h>
 #include <sys/ioctl.h>
+#elif defined HAVE_SYS_AUDIOIO_H
+#include <sys/types.h>
+#include <sys/ioctl.h>
+#include <sys/audioio.h>
+#include <fcntl.h>
+#ifndef AUDIO_ENCODING_SLINEAR
+#define AUDIO_ENCODING_SLINEAR AUDIO_ENCODING_LINEAR	/* Solaris */
+#endif
d6 2
a7 24
 
 #include <string.h>
@@@@ -166,6 +174,32 @@@@ FILE *out_file_open(char *outFile, int r
          close(audio_fd);
          exit(1);
       }
+      fout = fdopen(audio_fd, "w");
+#elif defined HAVE_SYS_AUDIOIO_H
+      audio_info_t info;
+      int audio_fd;
+ 
+      audio_fd = open("/dev/audio", O_WRONLY);
+      if (audio_fd<0)
+      {
+         perror("Cannot open /dev/audio");
+         exit(1);
+      }
+
+      AUDIO_INITINFO(&info);
+#ifdef AUMODE_PLAY	/* NetBSD/OpenBSD */
+      info.mode = AUMODE_PLAY;
+#endif
+      info.play.encoding = AUDIO_ENCODING_SLINEAR;
+      info.play.precision = 16;
d9 3
a11 10
+      info.play.channels = *channels;
+
+      if (ioctl(audio_fd, AUDIO_SETINFO, &info) < 0)
+      {
+         perror("AUDIO_SETINFO");
+         exit(1);
+      } 
       fout = fdopen(audio_fd, "w");
 #elif defined WIN32 || defined _WIN32
       {
@


1.1.1.1
log
@Import speex 1.0.1.

Speex is a patent-free audio codec designed especially for voice
(unlike Vorbis which targets general audio) signals and providing
good narrowband and wideband quality.  This project aims to be
complementary to the Vorbis codec.
@
text
@@
