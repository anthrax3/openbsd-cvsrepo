head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.36
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.34
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.32
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.28
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.30
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.26
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.24
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.22
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.20
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.18
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.16
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.14
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.10
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2009.01.28.01.36.00;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@update to 7.3.2
@
text
@# $OpenBSD$

package Slim::Utils::OS::Custom;

use strict;
use Config;
use File::Spec::Functions qw(:ALL);
use FindBin qw($Bin);

use base qw(Slim::Utils::OS::Unix);

sub initDetails {
	my $class = shift;

	$class->{osDetails}->{'os'}     = 'OpenBSD';
	$class->{osDetails}->{'osName'} = 'OpenBSD';
	$class->{osDetails}->{'uid'}    = getpwuid($>);
	$class->{osDetails}->{'osArch'} = `arch -s`;
	$class->{osDetails}->{isOpenBSD}= 1 ;

	return $class->{osDetails};
}

sub name {
        return 'OpenBSD';
}

sub initSearchPath {
	my $class = shift;

	$class->SUPER::initSearchPath();

	my @@paths = (split(/:/, $ENV{'PATH'}), qw(/usr/bin ${LOCALBASE}/bin /usr/libexec ${LOCALBASE}/libexec /usr/sbin));

	Slim::Utils::Misc::addFindBinPaths(@@paths);
}

sub dirsFor {
	my ($class, $dir) = @@_;

	my @@dirs = ();

	if ($dir eq 'oldprefs') {

		push @@dirs, $class->SUPER::dirsFor($dir);

	} elsif ($dir =~ /^(?:Firmware|Graphics|HTML|IR|MySQL|SQL)$/) {

		push @@dirs, "${LOCALBASE}/share/squeezecenter/$dir";

	} elsif ($dir eq 'Plugins') {

		push @@dirs, $class->SUPER::dirsFor($dir);
		push @@dirs, "${LOCALBASE}/share/squeezecenter/Plugins";
		push @@dirs, "${LOCALBASE}/libdata/perl5/site_perl/Slim/Plugin";

	} elsif ($dir =~ /^(?:lib|Bin)$/) {

		push @@dirs, "${LOCALBASE}/libdata/squeezecenter";

	} elsif ($dir =~ /^(?:strings|revision)$/) {

		push @@dirs, "${LOCALBASE}/share/squeezecenter";

	} elsif ($dir eq 'libpath') {

		push @@dirs, "${LOCALBASE}/libdata/squeezecenter";

	# Because we use the system MySQL, we need to point to the right
	# directory for the errmsg. files. Default to english.
	} elsif ($dir eq 'mysql-language') {

		push @@dirs, "${LOCALBASE}/share/mysql/english";

	} elsif ($dir =~ /^(?:types|convert)$/) {

		push @@dirs, "/etc/squeezecenter";

	} elsif ($dir eq 'prefs') {

		push @@dirs, $::prefsdir || "/var/db/squeezecenter/prefs";

	} elsif ($dir eq 'log') {

		push @@dirs, $::logdir || "/var/log/squeezecenter";

	} elsif ($dir eq 'cache') {

		push @@dirs, $::cachedir || "/var/db/squeezecenter/cache";

	} elsif ($dir =~ /^(?:music|playlists)$/) {

		push @@dirs, '';

	} else {

		warn "dirsFor: Didn't find a match request: [$dir]\n";
	}

	return wantarray() ? @@dirs : $dirs[0];
}

sub scanner {
        return '${LOCALBASE}/bin/scanner.pl';
}

1;
@
