head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.12
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.10
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.8
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.4
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.2
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.1.0.4
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.2
	OPENBSD_4_4_BASE:1.1.1.1
	sthen_20080604:1.1.1.1
	girish:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2015.01.22.20.02.22;	author schwarze;	state Exp;
branches;
next	1.9;
commitid	08yexfB5fpaeCZAA;

1.9
date	2014.04.20.10.00.21;	author jasper;	state Exp;
branches;
next	1.8;

1.8
date	2013.03.10.22.55.03;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2012.10.23.09.44.02;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2011.09.16.08.26.10;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2011.06.08.17.31.33;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.18.16.52.45;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2010.08.30.21.36.14;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2009.03.10.21.52.44;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2008.06.04.07.33.20;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.06.04.07.33.20;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.10
log
@obvious cleanup, drop USE_GROFF, bump;
could also use addition of missing content,
but i'm not doing that right now
@
text
@# $OpenBSD: Makefile,v 1.9 2014/04/20 10:00:21 jasper Exp $

COMMENT=		creates playlists from directory trees

MODPY_EGG_VERSION=	0.4.5
DISTNAME=		mkplaylist-${MODPY_EGG_VERSION}
REVISION =		4
CATEGORIES=		audio
HOMEPAGE=		http://bj.spline.de/software.html

MAINTAINER=		Girish Venkatachalam <girish1729@@gmail.com>

# GPL
PERMIT_PACKAGE_CDROM=	Yes

MASTER_SITES=	http://bj.spline.de/download/mkplaylist/

MODULES=	lang/python
PKG_ARCH =	*

NO_TEST=	Yes

pre-patch:
	@@cp ${FILESDIR}/setup.py ${WRKSRC}/.
	@@mv ${WRKSRC}/mkplaylist.py ${WRKSRC}/mkplaylist

post-install:
	${INSTALL_MAN} ${FILESDIR}/mkplaylist.1 ${PREFIX}/man/man1/

.include <bsd.port.mk>
@


1.9
log
@use ${FILESDIR} instead of hardcoding 'files/'
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2013/03/10 22:55:03 espie Exp $
d7 1
a7 1
REVISION =		3
a20 1
USE_GROFF =	Yes
@


1.8
log
@PERMIT/REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2012/10/23 09:44:02 sthen Exp $
d29 1
a29 1
	${INSTALL_MAN} files/mkplaylist.1 ${PREFIX}/man/man1/
@


1.7
log
@whitespace
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2011/09/16 08:26:10 espie Exp $
a14 3
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes
d22 1
a22 1
NO_REGRESS=	Yes
@


1.6
log
@normalize pkgpath in bsd.port.mk
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2011/06/08 17:31:33 jasper Exp $
d5 1
a5 1
MODPY_EGG_VERSION= 	0.4.5
d13 1
a13 1
# GPL 
d21 1
a21 1
MODULES=	lang/python	
@


1.5
log
@bump after default python version switch
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2010/10/18 16:52:45 espie Exp $
d7 1
a7 1
REVISION =		2
@


1.4
log
@USE_GROFF=Yes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2010/08/30 21:36:14 fgsch Exp $
d7 1
a7 1
REVISION =		1
@


1.3
log
@Yet another round of bumps.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2009/03/10 21:52:44 espie Exp $
d24 1
@


1.2
log
@bump for python dep change
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2008/06/04 07:33:20 sthen Exp $
d7 1
a7 1
PKGNAME =		${DISTNAME}p0
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d7 1
@


1.1.1.1
log
@import mkplaylist:

The script scans the given directories for media files with known file
name extensions and writes the names into a playlist file in M3U,
extended M3U or PLS format. Those very simple formats are used or at
least understood by the vast majority of media players on different
platforms.

For huge collections which have to be rescanned after adding or
modifying some files, the program can cache the meta data to speed up
subsequent runs.

from maintainer Girish Venkatachalam,
reworked to use python.port.mk and setuptools by wcmaier@@
@
text
@@
