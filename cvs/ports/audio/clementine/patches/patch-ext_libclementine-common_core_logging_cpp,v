head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.12
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.8
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	zhuk_20130205:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.12.12.11.13.39;	author zhuk;	state Exp;
branches;
next	1.3;

1.3
date	2013.03.21.16.05.00;	author zhuk;	state Exp;
branches;
next	1.2;

1.2
date	2013.02.06.13.23.03;	author zhuk;	state Exp;
branches;
next	1.1;

1.1
date	2013.02.05.14.00.16;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.02.05.14.00.16;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update Clementine to 1.2.1, some features:

  * Support for indexing and playing music from Box, Dropbox, Skydrive,
    and Ubuntu One.
  * Support for Subsonic.
  * Remote control support for Android.
  * Playlist tab at the sidebar. Starred playlists are saved in here
    when their tabs are closed.
  * Opus support.
  * POPM and FMPS tags support.
  * Option to resume playback on startup.
  * ... and many others.
@
text
@$OpenBSD$
Use shiny CMake FindBacktrace module.
--- ext/libclementine-common/core/logging.cpp.orig	Sun Oct 13 04:27:04 2013
+++ ext/libclementine-common/core/logging.cpp	Sun Oct 20 05:28:07 2013
@@@@ -18,12 +18,11 @@@@
 // it is used by the Spotify blob which links against libspotify and is not GPL
 // compatible.
 
+#include <config.h>
+
 #include <QtGlobal>
 
 #include <cxxabi.h>
-#ifdef Q_OS_UNIX
-#include <execinfo.h>
-#endif
 
 #include <QCoreApplication>
 #include <QDateTime>
@@@@ -230,7 +229,7 @@@@ QString DemangleSymbol(const QString& symbol) {
 }
 
 void DumpStackTrace() {
-#ifdef Q_OS_UNIX
+#if Backtrace_FOUND
   void* callstack[128];
   int callstack_size = backtrace(reinterpret_cast<void**>(&callstack), sizeof(callstack));
   char** symbols = backtrace_symbols(reinterpret_cast<void**>(&callstack), callstack_size);
@@@@ -240,7 +239,7 @@@@ void DumpStackTrace() {
   }
   free(symbols);
 #else
-  qLog(Debug) << "FIXME: Implement printing stack traces on this platform";
+  qLog(Debug) << "FIXME: Implement printing stack traces on this platform, or port backtrace library";
 #endif
 }
 
@


1.3
log
@Switch Clementine to FindBacktrace.cmake that was recently committed to CMake.

prodded by dcoppa@@
@
text
@d1 10
a10 5
$OpenBSD: patch-ext_libclementine-common_core_logging_cpp,v 1.2 2013/02/06 13:23:03 zhuk Exp $
backtrace() is probably present on GNU and Solaris only.
--- ext/libclementine-common/core/logging.cpp.orig	Thu Oct 11 15:16:39 2012
+++ ext/libclementine-common/core/logging.cpp	Thu Feb  7 17:55:23 2013
@@@@ -21,9 +21,6 @@@@
d20 1
a20 9
@@@@ -31,6 +28,7 @@@@
 
 #include <glib.h>
 
+#include "config.h"
 #include "logging.h"
 
 
@@@@ -224,7 +222,7 @@@@ QString DemangleSymbol(const QString& symbol) {
d25 1
a25 1
+#if HAVE_BACKTRACE
d29 1
a29 1
@@@@ -234,7 +232,7 @@@@ void DumpStackTrace() {
d34 1
a34 1
+  qLog(Debug) << "FIXME: Implement printing stack traces on this platform or provide separate execinfo library";
@


1.2
log
@Unbreak Clementine build in wild environment (i.e., outta of my laptop):

  * Better handling of libexecinfo. I moved from adding some goo to
    CMakeLists.txt to writing proper FindExecinfo.cmake package.
  * Force source directory, or visualization presets could miss
    installation;
  * Force "plist" in WANTLIB, as it's being used by plugin;
  * Add back fftw3 dependency: while we use external libchromaprint now,
    fftw3 is also needed for so called "moodbar".
  * Nit: remove libnjb, it's use was actually gone in the last release;

Lots of input from sthen@@ and nigel@@, committing ASAP.
@
text
@d1 1
a1 1
$OpenBSD: patch-ext_libclementine-common_core_logging_cpp,v 1.1.1.1 2013/02/05 14:00:16 zhuk Exp $
d4 2
a5 2
+++ ext/libclementine-common/core/logging.cpp	Wed Feb  6 17:06:07 2013
@@@@ -21,7 +21,7 @@@@
d10 2
a11 3
+#ifdef EXECINFO_FOUND
 #include <execinfo.h>
 #endif
d13 11
a23 1
@@@@ -224,7 +224,7 @@@@ QString DemangleSymbol(const QString& symbol) {
d28 1
a28 1
+#ifdef HAVE_BACKTRACE
d32 1
a32 1
@@@@ -234,7 +234,7 @@@@ void DumpStackTrace() {
d37 1
a37 1
+  qLog(Debug) << "FIXME: Implement printing stack traces on this platform or port backtrace() from GNU libc";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 11
a13 2
--- ext/libclementine-common/core/logging.cpp.orig	Wed Nov 28 20:42:49 2012
+++ ext/libclementine-common/core/logging.cpp	Wed Nov 28 21:11:45 2012
@


1.1.1.1
log
@Clementine is a multiplatform music player. It is inspired by
Amarok 1.4, focusing on a fast and easy-to-use interface for searching
and playing your music.

"import as-is, i've seen those ports too much" landry@@
@
text
@@
