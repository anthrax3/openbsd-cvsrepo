head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.12
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.10
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	zhuk_20130205:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.10.01.20.52.48;	author dcoppa;	state Exp;
branches;
next	1.3;
commitid	qswBh9lTvGgaZGjX;

1.3
date	2014.09.11.09.02.13;	author zhuk;	state Exp;
branches;
next	1.2;
commitid	JwzeAdZX8wLsDm5L;

1.2
date	2013.12.12.11.13.39;	author zhuk;	state Exp;
branches;
next	1.1;

1.1
date	2013.02.05.14.00.16;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.02.05.14.00.16;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
Fix cmake-related issues; regen patch

no bump needed
@
text
@$OpenBSD: patch-src_core_utilities_cpp,v 1.3 2014/09/11 09:02:13 zhuk Exp $
1. Add support for OpenBSD sensors framework when checking if this PC
   is a laptop.
2. Make Clementine use system SHA-2 implementation.
--- src/core/utilities.cpp.orig	Wed Apr 23 12:16:44 2014
+++ src/core/utilities.cpp	Wed Oct  1 22:17:52 2014
@@@@ -67,6 +67,14 @@@@
 #  include <QProcess>
 #endif
 
+#ifdef Q_OS_OPENBSD
+#  include <sys/param.h>
+#  include <sys/sensors.h>
+#  include <sys/sysctl.h>
+#  include <errno.h>
+#  include <string.h>
+#endif
+
 namespace Utilities {
 
 static QString tr(const char* str) {
@@@@ -437,16 +445,26 @@@@ QByteArray HmacSha1(const QByteArray& key, const QByte
   return Hmac(key, data, Sha1_Algo);
 }
 
+#if !HAVE_SHA2_UNDERSCORED
+namespace clementine_sha2 {
+typedef ::SHA2_CTX SHA256_CTX;
+void SHA256_Init(SHA256_CTX *ctx) { SHA256Init(ctx); }
+void SHA256_Update(SHA256_CTX *ctx, const u_int8_t *data, size_t len) { SHA256Update(ctx, data, len); }
+void SHA256_Final(u_int8_t digest[SHA256_DIGEST_LENGTH], SHA256_CTX *ctx) { SHA256Final(digest, ctx); }
+}
+#endif   // !HAVE_SHA2_UNDERSCORED
+
+using namespace clementine_sha2;
+
 QByteArray Sha256(const QByteArray& data) {
-  clementine_sha2::SHA256_CTX context;
-  clementine_sha2::SHA256_Init(&context);
-  clementine_sha2::SHA256_Update(
+  SHA256_CTX context;
+  SHA256_Init(&context);
+  SHA256_Update(
       &context, reinterpret_cast<const quint8*>(data.constData()),
       data.length());
 
-  QByteArray ret(clementine_sha2::SHA256_DIGEST_LENGTH, '\0');
-  clementine_sha2::SHA256_Final(
-      reinterpret_cast<quint8*>(ret.data()), &context);
+  QByteArray ret(SHA256_DIGEST_LENGTH, '\0');
+  SHA256_Final(reinterpret_cast<quint8*>(ret.data()), &context);
 
   return ret;
 }
@@@@ -595,6 +613,23 @@@@ bool IsLaptop() {
     if (CFDictionaryContainsKey(description, CFSTR(kIOPSBatteryHealthKey))) {
       return true;
     }
+  }
+  return false;
+#elif defined(Q_OS_OPENBSD)
+  struct sensordev snsrdev;
+  size_t sdlen = sizeof(snsrdev);
+  int mib[3] = { CTL_HW, HW_SENSORS, 0 };
+  for (int i = 0; ; ++i) {
+    mib[2] = i;
+    if (::sysctl(mib, 3, &snsrdev, &sdlen, NULL, 0) == -1) {
+      if (errno == ENOENT)
+        break;
+      if (errno == EAGAIN)
+        i--;
+      continue;
+    }
+    if (::memcmp("acpibat", snsrdev.xname, 7) == 0)
+      return true;
   }
   return false;
 #else
@


1.3
log
@Maintaince update of Clementine to 1.2.3. Contains minor bugfixes.
Also adds support for GCC 4.9 and CMake 3.x.

Problem with CMake 3.x noticed by landry@@, fix from upstream repo via dcoppa@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_core_utilities_cpp,v 1.2 2013/12/12 11:13:39 zhuk Exp $
d5 2
a6 2
--- src/core/utilities.cpp.orig	Wed Apr 23 14:16:44 2014
+++ src/core/utilities.cpp	Thu Sep 11 12:34:08 2014
d55 3
a57 1
@@@@ -597,6 +615,23 @@@@ bool IsLaptop() {
d59 2
a60 2
   }
   return false;
d76 2
a77 2
+  }
+  return false;
a78 2
   return false;
 #endif
@


1.2
log
@Update Clementine to 1.2.1, some features:

  * Support for indexing and playing music from Box, Dropbox, Skydrive,
    and Ubuntu One.
  * Support for Subsonic.
  * Remote control support for Android.
  * Playlist tab at the sidebar. Starred playlists are saved in here
    when their tabs are closed.
  * Opus support.
  * POPM and FMPS tags support.
  * Option to resume playback on startup.
  * ... and many others.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_core_utilities_cpp,v 1.1.1.1 2013/02/05 14:00:16 zhuk Exp $
d5 3
a7 3
--- src/core/utilities.cpp.orig	Sun Oct 13 04:27:04 2013
+++ src/core/utilities.cpp	Wed Oct 30 16:23:55 2013
@@@@ -66,6 +66,14 @@@@
d22 1
a22 1
@@@@ -436,6 +444,13 @@@@ QByteArray HmacSha1(const QByteArray& key, const QByte
d27 6
a32 4
+# define SHA256_CTX           SHA2_CTX
+# define SHA256_Init(x)       SHA256Init((x))
+# define SHA256_Update(x,y,z)     SHA256Update((x) , (y) , (z))
+# define SHA256_Final(x,y)      SHA256Final((x) , (y))
d35 2
d38 18
a55 5
   SHA256_CTX context;
   SHA256_Init(&context);
@@@@ -592,6 +607,23 @@@@ bool IsLaptop() {
     if (CFDictionaryContainsKey(description, CFSTR(kIOPSBatteryHealthKey))) {
       return true;
d57 2
a58 2
+  }
+  return false;
d74 3
a76 1
   }
d78 1
a78 1
 #else
@


1.1
log
@Initial revision
@
text
@d1 8
a8 6
$OpenBSD$
Add support for OpenBSD sensors framework when checking if this PC is a laptop.
--- src/core/utilities.cpp.orig	Wed Nov 28 19:53:29 2012
+++ src/core/utilities.cpp	Wed Nov 28 20:07:07 2012
@@@@ -59,6 +59,14 @@@@
 #  include "IOKit/ps/IOPSKeys.h"
d19 6
a24 1
 #include <boost/scoped_array.hpp>
d26 11
a36 2
 namespace Utilities {
@@@@ -538,6 +546,24 @@@@ bool IsLaptop() {
d42 1
a42 3
+#endif
+
+#ifdef Q_OS_OPENBSD
a48 2
+      if (errno == ENXIO)
+        continue;
d51 3
d59 1
a59 1
 #endif
@


1.1.1.1
log
@Clementine is a multiplatform music player. It is inspired by
Amarok 1.4, focusing on a fast and easy-to-use interface for searching
and playing your music.

"import as-is, i've seen those ports too much" landry@@
@
text
@@
