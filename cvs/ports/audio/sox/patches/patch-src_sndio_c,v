head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.4
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.2
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.21.11.40.14;	author ratchov;	state Exp;
branches;
next	;
commitid	WT4rIpqxSkZnMD0S;


desc
@@


1.1
log
@Take into account encoding's bits_per_sample. Fixes recording
of 24-bit files. Tested by many.
@
text
@$OpenBSD$
--- src/sndio.c.orig	Mon Jan 30 04:01:44 2012
+++ src/sndio.c	Tue Feb  9 23:23:00 2016
@@@@ -113,8 +113,6 @@@@ static int startany(sox_format_t *ft, unsigned mode)
     else
       reqpar.rchan = ft->signal.channels;
   }
-  if (ft->signal.precision > 0)
-    reqpar.bits = ft->signal.precision;
   switch (ft->encoding.encoding) {
   case SOX_ENCODING_SIGN2:
     reqpar.sig = 1;
@@@@ -127,6 +125,12 @@@@ static int startany(sox_format_t *ft, unsigned mode)
   }
   if (ft->encoding.bits_per_sample > 0)
     reqpar.bits = ft->encoding.bits_per_sample;
+  else if (ft->signal.precision > 0)
+    reqpar.bits = ft->signal.precision;
+  else
+    reqpar.bits = SOX_DEFAULT_PRECISION;
+  reqpar.bps = (reqpar.bits + 7) / 8;
+  reqpar.msb = 1;
   if (ft->encoding.reverse_bytes != sox_option_default) {
     reqpar.le = SIO_LE_NATIVE;
     if (ft->encoding.reverse_bytes)
@
