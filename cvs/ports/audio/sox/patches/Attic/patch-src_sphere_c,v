head	1.4;
access;
symbols
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_4_4:1.1.0.14
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.12
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.10
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.03.18.13.13.08;	author naddy;	state dead;
branches;
next	1.3;
commitid	qLGTceqnoDeUj1ee;

1.3
date	2014.12.29.10.44.55;	author sthen;	state Exp;
branches;
next	1.2;
commitid	Ak5BZoeBZgWn80qq;

1.2
date	2009.01.08.19.48.21;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2005.07.02.16.27.56;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@* Update to SoX 14.4.2
* Remove cherry-picked patches as they are included now.
* Drop --without-ffmpeg as ffmpeg has finally been kicked out.
* Add the newly supported Opus format (--with-opus)
* Addresses some more ./configure --options explicitly.
* While there, reorder the LIB_DEPENDS alphabetically.
        and reorder WANTLIB by LIB_DEPENDS

From maintainer Jan Stary
@
text
@$OpenBSD: patch-src_sphere_c,v 1.3 2014/12/29 10:44:55 sthen Exp $

[7d3f38] Check for minimum size sphere headers

--- src/sphere.c.orig	Wed Dec 24 12:31:33 2014
+++ src/sphere.c	Wed Dec 24 12:31:53 2014
@@@@ -47,6 +47,11 @@@@ static int start_read(sox_format_t * ft)
 
   /* Determine header size, and allocate a buffer large enough to hold it. */
   sscanf(fldsval, "%lu", &header_size_ul);
+  if (header_size_ul < 16) {
+    lsx_fail_errno(ft, SOX_EHDR, "Error reading Sphere header");
+    return (SOX_EOF);
+  }
+
   buf = lsx_malloc(header_size = header_size_ul);
 
   /* Skip what we have read so far */
@


1.3
log
@cherry-pick audio/sox patches from git fixing problems with some bad input.
ok jasper@@, Jan Stary
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@- Large update to 14.2.0.
- Drop snprintf() patches that were not accepted upstream.
- Drop flavors and just add most external libraries sox supports.
- Don't modularize the format converters.
@
text
@d1 16
a16 5
$OpenBSD: patch-src_sphere_c,v 1.1 2005/07/02 16:27:56 naddy Exp $
--- src/sphere.c.orig	Tue Sep 28 04:33:09 2004
+++ src/sphere.c	Fri Jun 24 11:50:27 2005
@@@@ -276,27 +276,29 @@@@ int st_spherestopwrite(ft_t ft) 
     st_writes(ft, "   1024\n");
d18 1
a18 33
     samples = sphere->numSamples/ft->info.channels;
-    sprintf(buf, "sample_count -i %ld\n", samples);
+    snprintf(buf, sizeof(buf), "sample_count -i %ld\n", samples);
     st_writes(ft, buf);
 
-    sprintf(buf, "sample_n_bytes -i %d\n", ft->info.size);
+    snprintf(buf, sizeof(buf), "sample_n_bytes -i %d\n", ft->info.size);
     st_writes(ft, buf);
 
-    sprintf(buf, "channel_count -i %d\n", ft->info.channels);
+    snprintf(buf, sizeof(buf), "channel_count -i %d\n", ft->info.channels);
     st_writes(ft, buf);
 
     if (ft->swap)
     {
-        sprintf(buf, "sample_byte_format -s2 %s\n", ST_IS_BIGENDIAN ? "01" : "10");
+        snprintf(buf, sizeof(buf), "sample_byte_format -s2 %s\n",
+		 ST_IS_BIGENDIAN ? "01" : "10");
     }
     else
     {
-        sprintf(buf, "sample_byte_format -s2 %s\n", ST_IS_BIGENDIAN ? "10" : "01");
+        snprintf(buf, sizeof(buf), "sample_byte_format -s2 %s\n",
+		 ST_IS_BIGENDIAN ? "10" : "01");
     }
     st_writes(ft, buf);
 
     rate = ft->info.rate;
-    sprintf(buf, "sample_rate -i %ld\n", rate);
+    snprintf(buf, sizeof(buf), "sample_rate -i %ld\n", rate);
     st_writes(ft, buf);
 
     if (ft->info.encoding == ST_ENCODING_ULAW)
@


1.1
log
@* make sox work on platforms where char defaults to unsigned
* sprintf -> snprintf, and opportunistically get rid of some strcpy()s

From: Matthias Kilian <kili@@outback.escape.de>
@
text
@d1 1
a1 1
$OpenBSD$
@

