head	1.4;
access;
symbols
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2016.08.20.13.38.52;	author ajacoutot;	state dead;
branches;
next	1.3;
commitid	nRS6sDCqT91FUYvr;

1.3
date	2016.04.25.15.52.14;	author jasper;	state Exp;
branches;
next	1.2;
commitid	9zlyeK333TlcdvHi;

1.2
date	2012.09.30.14.58.39;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2012.09.29.12.20.14;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to rhythmbox-3.4.
- drop the gettext MODULE
@
text
@$OpenBSD: patch-plugins_grilo_rb-grilo-source_c,v 1.3 2016/04/25 15:52:14 jasper Exp $

https://bugzilla.gnome.org/show_bug.cgi?id=759589

--- plugins/grilo/rb-grilo-source.c.orig	Sun Apr  3 09:32:02 2016
+++ plugins/grilo/rb-grilo-source.c	Mon Apr 25 17:38:57 2016
@@@@ -524,7 +524,7 @@@@ make_operation_options (RBGriloSource *source, GrlSupp
 	grl_operation_options_set_count (options,
 					 CONTAINER_FETCH_SIZE);
 	grl_operation_options_set_type_filter (options, GRL_TYPE_FILTER_AUDIO);
-	grl_operation_options_set_flags (options, GRL_RESOLVE_NORMAL);
+	grl_operation_options_set_resolution_flags (options, GRL_RESOLVE_NORMAL);
 
 	return options;
 }
@@@@ -684,7 +684,7 @@@@ grilo_browse_cb (GrlSource *grilo_source, guint operat
 		source->priv->browse_position++;
 	}
 
-	if (media && GRL_IS_MEDIA_BOX (media)) {
+	if (media && grl_media_is_container (media)) {
 
 		GtkTreeIter new_row;
 		if (source->priv->browse_container == NULL) {
@@@@ -724,7 +724,7 @@@@ grilo_browse_cb (GrlSource *grilo_source, guint operat
 						   2, CONTAINER_MARKER,
 						   3, 0,
 						   -1);
-	} else if (media && GRL_IS_MEDIA_AUDIO (media)) {
+	} else if (media && grl_media_is_audio (media)) {
 		source->priv->browse_got_media = TRUE;
 	}
 
@@@@ -854,7 +854,7 @@@@ grilo_media_browse_cb (GrlSource *grilo_source, guint 
 		source->priv->media_browse_got_results = TRUE;
 		source->priv->media_browse_position++;
 
-		if (GRL_IS_MEDIA_AUDIO (media)) {
+		if (grl_media_is_audio (media)) {
 			RhythmDBEntry *entry;
 			entry = create_entry_for_media (source->priv->db,
 							source->priv->entry_type,
@@@@ -863,7 +863,7 @@@@ grilo_media_browse_cb (GrlSource *grilo_source, guint 
 			if (entry != NULL) {
 				rhythmdb_query_model_add_entry (source->priv->query_model, entry, -1);
 			}
-		} else if (GRL_IS_MEDIA_BOX (media)) {
+		} else if (grl_media_is_container (media)) {
 			source->priv->media_browse_got_containers = TRUE;
 		}
 	}
@


1.3
log
@apply patch from RH, via upstream bugzilla to unbreak with rygel 0.3
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to rhythmbox-2.98.
@
text
@d1 1
a1 1
$OpenBSD: patch-plugins_grilo_rb-grilo-source_c,v 1.1 2012/09/29 12:20:14 ajacoutot Exp $
d3 1
a3 4
From 86eb47f705b2f0e6e8ba8d90073c961d47dbfb95 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Fri, 17 Aug 2012 13:28:05 +0000
Subject: grilo: Port to the grilo 0.2 API
d5 8
a12 3
--- plugins/grilo/rb-grilo-source.c.orig	Thu May 31 00:51:09 2012
+++ plugins/grilo/rb-grilo-source.c	Sat Sep 29 14:05:14 2012
@@@@ -91,7 +91,7 @@@@ static RBEntryView *impl_get_entry_view (RBSource *sou
d14 1
a14 84
 struct _RBGriloSourcePrivate
 {
-	GrlMediaSource *grilo_source;
+	GrlSource *grilo_source;
 	GList *grilo_keys;
 
 	RhythmDBEntryType *entry_type;
@@@@ -189,7 +189,7 @@@@ rb_grilo_source_class_init (RBGriloSourceClass *klass)
 					 g_param_spec_object ("grilo-source",
 							      "grilo source",
 							      "grilo source object",
-							      GRL_TYPE_MEDIA_SOURCE,
+							      GRL_TYPE_SOURCE,
 							      G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY));
 
 	g_type_class_add_private (klass, sizeof (RBGriloSourcePrivate));
@@@@ -288,49 +288,49 @@@@ rb_grilo_source_constructed (GObject *object)
 
 	source_keys = grl_metadata_source_supported_keys (GRL_METADATA_SOURCE (source->priv->grilo_source));
 
-	if (g_list_find ((GList *)source_keys, GRL_METADATA_KEY_TRACK_NUMBER)) {
+	if (g_list_find ((GList *)source_keys, GUINT_TO_POINTER(GRL_METADATA_KEY_TRACK_NUMBER))) {
 		rb_entry_view_append_column (source->priv->entry_view, RB_ENTRY_VIEW_COL_TRACK_NUMBER, FALSE);
 		source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys,
-							   GRL_METADATA_KEY_TRACK_NUMBER);
+							   GUINT_TO_POINTER(GRL_METADATA_KEY_TRACK_NUMBER));
 	}
 
-	if (g_list_find ((GList *)source_keys, GRL_METADATA_KEY_TITLE)) {
+	if (g_list_find ((GList *)source_keys, GUINT_TO_POINTER(GRL_METADATA_KEY_TITLE))) {
 		rb_entry_view_append_column (source->priv->entry_view, RB_ENTRY_VIEW_COL_TITLE, TRUE);
 		source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys,
-							   GRL_METADATA_KEY_TITLE);
+							   GUINT_TO_POINTER(GRL_METADATA_KEY_TITLE));
 	}
 
-	if (g_list_find ((GList *)source_keys, GRL_METADATA_KEY_GENRE)) {
+	if (g_list_find ((GList *)source_keys, GUINT_TO_POINTER(GRL_METADATA_KEY_GENRE))) {
 		rb_entry_view_append_column (source->priv->entry_view, RB_ENTRY_VIEW_COL_GENRE, FALSE);
 		source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys,
-							   GRL_METADATA_KEY_GENRE);
+							   GUINT_TO_POINTER(GRL_METADATA_KEY_GENRE));
 	}
-	if (g_list_find ((GList *)source_keys, GRL_METADATA_KEY_ARTIST)) {
+	if (g_list_find ((GList *)source_keys, GUINT_TO_POINTER(GRL_METADATA_KEY_ARTIST))) {
 		rb_entry_view_append_column (source->priv->entry_view, RB_ENTRY_VIEW_COL_ARTIST, FALSE);
 		source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys,
-							   GRL_METADATA_KEY_ARTIST);
+							   GUINT_TO_POINTER(GRL_METADATA_KEY_ARTIST));
 	}
-	if (g_list_find ((GList *)source_keys, GRL_METADATA_KEY_ALBUM)) {
+	if (g_list_find ((GList *)source_keys, GUINT_TO_POINTER(GRL_METADATA_KEY_ALBUM))) {
 		rb_entry_view_append_column (source->priv->entry_view, RB_ENTRY_VIEW_COL_ALBUM, FALSE);
 		source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys,
-							   GRL_METADATA_KEY_ALBUM);
+							   GUINT_TO_POINTER(GRL_METADATA_KEY_ALBUM));
 	}
 	/*
-	if (g_list_find ((GList *)source_keys, GRL_METADATA_KEY_DATE)) {
+	if (g_list_find ((GList *)source_keys, GUINT_TO_POINTER(GRL_METADATA_KEY_DATE))) {
 		rb_entry_view_append_column (source->priv->entry_view, RB_ENTRY_VIEW_COL_YEAR, FALSE);
 		source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys,
-							   GRL_METADATA_KEY_DATE);
+							   GUINT_TO_POINTER(GRL_METADATA_KEY_DATE));
 	}
 	*/
-	if (g_list_find ((GList *)source_keys, GRL_METADATA_KEY_DURATION)) {
+	if (g_list_find ((GList *)source_keys, GUINT_TO_POINTER(GRL_METADATA_KEY_DURATION))) {
 		rb_entry_view_append_column (source->priv->entry_view, RB_ENTRY_VIEW_COL_DURATION, FALSE);
 		source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys,
-							   GRL_METADATA_KEY_DURATION);
+							   GUINT_TO_POINTER(GRL_METADATA_KEY_DURATION));
 	}
 
-	source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys, GRL_METADATA_KEY_CHILDCOUNT);
-	source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys, GRL_METADATA_KEY_URL);
-	source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys, GRL_METADATA_KEY_THUMBNAIL);
+	source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys, GUINT_TO_POINTER(GRL_METADATA_KEY_CHILDCOUNT));
+	source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys, GUINT_TO_POINTER(GRL_METADATA_KEY_URL));
+	source->priv->grilo_keys = g_list_prepend (source->priv->grilo_keys, GUINT_TO_POINTER(GRL_METADATA_KEY_THUMBNAIL));
 
 	/* probably add an image column too? */
 	source->priv->browser_model = gtk_tree_store_new (4, GRL_TYPE_MEDIA, G_TYPE_STRING, G_TYPE_INT, G_TYPE_INT);
@@@@ -405,7 +405,7 @@@@ rb_grilo_source_constructed (GObject *object)
d16 2
a17 14
 
 RBSource *
-rb_grilo_source_new (GObject *plugin, GrlMediaSource *grilo_source)
+rb_grilo_source_new (GObject *plugin, GrlSource *grilo_source)
 {
 	GObject *source;
 	RBShell *shell;
@@@@ -546,7 +546,7 @@@@ create_entry_for_media (RhythmDB *db, RhythmDBEntryTyp
 	set_string_prop_from_key (db, entry, RHYTHMDB_PROP_GENRE, data, GRL_METADATA_KEY_GENRE);
 	set_string_prop_from_key (db, entry, RHYTHMDB_PROP_TITLE, data, GRL_METADATA_KEY_TITLE);
 
-	if (grl_data_has_key (data, GRL_METADATA_KEY_DATE)) {
+	if (grl_data_has_key (data, GRL_METADATA_KEY_PUBLICATION_DATE)) {
 		/* something - grilo has this as a string? */
d20 2
a21 17
@@@@ -643,7 +643,7 @@@@ set_container_type (RBGriloSource *source, GtkTreeIter
 }
 
 static void
-grilo_browse_cb (GrlMediaSource *grilo_source, guint operation_id, GrlMedia *media, guint remaining, RBGriloSource *source, const GError *error)
+grilo_browse_cb (GrlSource *grilo_source, guint operation_id, GrlMedia *media, guint remaining, RBGriloSource *source, const GError *error)
 {
 	if (operation_id != source->priv->browse_op) {
 		return;
@@@@ -751,7 +751,7 @@@@ browse_next (RBGriloSource *source)
 							   source->priv->browse_position,
 							   CONTAINER_FETCH_SIZE,
 							   GRL_RESOLVE_NORMAL,
-							   (GrlMediaSourceResultCb) grilo_browse_cb,
+							   (GrlSourceResultCb) grilo_browse_cb,
 							   source);
 }
d23 28
a50 25
@@@@ -784,7 +784,7 @@@@ start_browse (RBGriloSource *source, GrlMedia *contain
 static void media_browse_next (RBGriloSource *source);
 
 static void
-grilo_media_browse_cb (GrlMediaSource *grilo_source, guint operation_id, GrlMedia *media, guint remaining, RBGriloSource *source, const GError *error)
+grilo_media_browse_cb (GrlSource *grilo_source, guint operation_id, GrlMedia *media, guint remaining, RBGriloSource *source, const GError *error)
 {
 	if (operation_id != source->priv->media_browse_op) {
 		return;
@@@@ -871,7 +871,7 @@@@ media_browse_next (RBGriloSource *source)
 						 source->priv->media_browse_position,
 						 CONTAINER_FETCH_SIZE,
 						 GRL_RESOLVE_NORMAL,
-						 (GrlMediaSourceResultCb) grilo_media_browse_cb,
+						 (GrlSourceResultCb) grilo_media_browse_cb,
 						 source);
 	} else {
 		source->priv->media_browse_op =
@@@@ -881,7 +881,7 @@@@ media_browse_next (RBGriloSource *source)
 						 source->priv->media_browse_position,
 						 CONTAINER_FETCH_SIZE,
 						 GRL_RESOLVE_NORMAL,
-						 (GrlMediaSourceResultCb) grilo_media_browse_cb,
+						 (GrlSourceResultCb) grilo_media_browse_cb,
 						 source);
a51 1
 }
@


1.1
log
@Unbreak after recent grilo update.
Enable the zeitgeist plugin.
@@comment -> post-install rm
@
text
@d1 1
a1 1
$OpenBSD$
@

