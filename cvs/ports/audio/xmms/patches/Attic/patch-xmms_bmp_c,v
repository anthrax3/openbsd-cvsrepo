head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2016.08.30.10.36.56;	author jasper;	state dead;
branches;
next	1.1;
commitid	D07bT1mi91GB9K8U;

1.1
date	2014.04.08.18.56.52;	author naddy;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2014.05.20.08.10.57;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove xmms, it's been unmaintained for years and it's in the way of
the removal of gtk+1, the toolkit from eons ago.

discussed with many for years, no objections from naddy@@
ok aja@@ dcoppa@@
@
text
@$OpenBSD: patch-xmms_bmp_c,v 1.1 2014/04/08 18:56:52 naddy Exp $

CVE-2007-0653, CVE-2007-0654
Integer overflow and underflow allows user-assisted remote attackers
to execute arbitrary code via crafted header information in a skin
bitmap image, which triggers memory corruption.

--- xmms/bmp.c.orig	Sun Jul 16 15:40:04 2006
+++ xmms/bmp.c	Tue Apr  8 18:47:07 2014
@@@@ -19,6 +19,12 @@@@
  */
 #include "xmms.h"
 
+#if HAVE_STDINT_H
+#include <stdint.h>
+#elif !defined(UINT32_MAX)
+#define UINT32_MAX 0xffffffffU
+#endif
+
 struct rgb_quad
 {
 	guchar rgbBlue;
@@@@ -183,7 +189,7 @@@@ GdkPixmap *read_bmp(gchar * filename)
 	}
 	else if (bitcount != 24 && bitcount != 16 && bitcount != 32)
 	{
-		gint ncols, i;
+		guint32 ncols, i;
 
 		ncols = offset - headSize - 14;
 		if (headSize == 12)
@@@@ -201,9 +207,17 @@@@ GdkPixmap *read_bmp(gchar * filename)
 		}
 	}
 	fseek(file, offset, SEEK_SET);
+	/* verify buffer size */
+	if (!h || !w ||
+	    w > (((UINT32_MAX - 3) / 3) / h) ||
+	    h > (((UINT32_MAX - 3) / 3) / w)) {
+		g_warning("read_bmp(): width(%u)*height(%u) too large", w, h);
+		fclose(file);
+		return NULL;
+	}
+	data = g_malloc0((w * 3 * h) + 3);	/* +3 is just for safety */
 	buffer = g_malloc(imgsize);
 	fread(buffer, imgsize, 1, file);
-	data = g_malloc0((w * 3 * h) + 3);	/* +3 is just for safety */
 
 	if (bitcount == 1)
 		read_1b_rgb(buffer, imgsize, data, w, h, rgb_quads);
@


1.1
log
@Fix CVE-2007-0653, CVE-2007-0654.
Integer overflow and underflow allows user-assisted remote attackers
to execute arbitrary code via crafted header information in a skin
bitmap image, which triggers memory corruption.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@Security fixes for CVE-2007-0653, CVE-2007-0654
@
text
@d1 1
a1 1
$OpenBSD: patch-xmms_bmp_c,v 1.1 2014/04/08 18:56:52 naddy Exp $
@

