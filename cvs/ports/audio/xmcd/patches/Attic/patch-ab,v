head	1.3;
access;
symbols
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	xmcd:1.1.1.1
	angelos:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2000.12.03.20.50.49;	author espie;	state dead;
branches;
next	1.2;

1.2
date	98.07.24.03.38.16;	author form;	state Exp;
branches;
next	1.1;

1.1
date	98.05.21.01.38.30;	author angelos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.05.21.01.38.30;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Half-fix xmcd.
Now, it configures AFTER the package installation.
All it needs is someone to look at the ioctl and find out what OpenBSD
is supposed to do.
@
text
@*** cda_d/Imakefile.orig	Thu Jul 23 20:22:55 1998
--- cda_d/Imakefile	Thu Jul 23 20:23:00 1998
***************
*** 98,104 ****
  LOCAL_LIBRARIES=
  #else
  #if defined(OpenBSDArchitecture)
! LOCAL_LIBRARIES=-lncurses -ltermlib
  #else
  #if defined(UltrixArchitecture)
  LOCAL_LIBRARIES=-lcursesX
--- 98,104 ----
  LOCAL_LIBRARIES=
  #else
  #if defined(OpenBSDArchitecture)
! LOCAL_LIBRARIES=-lcurses -ltermlib
  #else
  #if defined(UltrixArchitecture)
  LOCAL_LIBRARIES=-lcursesX
@


1.2
log
@update to 2.3
@
text
@@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
*** install.sh.orig	Tue Aug 12 19:12:27 1997
--- install.sh	Sun Sep  7 16:23:43 1997
d4 16
a19 135
*** 48,53 ****
--- 48,56 ----
  ERRFILE=/tmp/xmcd.err
  TMPFILE=/tmp/xmcdinst.$$
  
+ # Flag for indicating we do not want to prompt the user if possible.
+ NO_PROMPT=1
+ 
  #
  # Utility functions
  #
***************
*** 586,592 ****
  
  while :
  do
! 	if getstr "\nEnter X binary directory\n[${BINDIR}]:"
  	then
  		if [ -d "$ANS" ]
  		then
--- 589,599 ----
  
  while :
  do
! 	if [ -n "$NO_PROMPT" ]
! 	then
! 		$ECHO "X binary directory - using ${BINDIR}"
! 		break
! 	elif getstr "\nEnter X binary directory\n[${BINDIR}]:"
  	then
  		if [ -d "$ANS" ]
  		then
***************
*** 634,640 ****
  
  while :
  do
! 	if getstr "\nEnter X library directory\n[${LIBDIR}]:"
  	then
  		if [ -d "$ANS" ]
  		then
--- 641,651 ----
  
  while :
  do
! 	if [ -n "$NO_PROMPT" ]
! 	then
! 		$ECHO "X library directory - using ${LIBDIR}"
! 		break
! 	elif getstr "\nEnter X library directory\n[${LIBDIR}]:"
  	then
  		if [ -d "$ANS" ]
  		then
***************
*** 657,663 ****
  APPDEFAULTSDIR=$LIBDIR/app-defaults
  while :
  do
! 	if getstr "\nEnter X app-defaults directory\n[${APPDEFAULTSDIR}]:"
  	then
  		if [ -d "$ANS" ]
  		then
--- 668,678 ----
  APPDEFAULTSDIR=$LIBDIR/app-defaults
  while :
  do
! 	if [ -n "$NO_PROMPT" ]
! 	then
! 		$ECHO "X app-defaults directory - using ${LIBDIR}"
! 		break
! 	elif getstr "\nEnter X app-defaults directory\n[${APPDEFAULTSDIR}]:"
  	then
  		if [ -d "$ANS" ]
  		then
***************
*** 680,686 ****
  XMCDLIB=$LIBDIR/xmcd
  while :
  do
! 	if getstr "\nEnter xmcd library directory\n[${XMCDLIB}]:"
  	then
  		if [ -d "$ANS" ]
  		then
--- 695,705 ----
  XMCDLIB=$LIBDIR/xmcd
  while :
  do
! 	if [ -n "$NO_PROMPT" ]
! 	then
! 		$ECHO "xmcd library directory - using ${XMCDLIB}"
! 		break
! 	elif getstr "\nEnter xmcd library directory\n[${XMCDLIB}]:"
  	then
  		if [ -d "$ANS" ]
  		then
***************
*** 733,739 ****
  $ECHO "\n\nThe on-line manual directory is where the man pages in"
  $ECHO "in the xmcd package will be installed."
  
! if getstr "\nEnter on-line manual directory\n[${MANDIR}]:"
  then
  	MANDIR=$ANS
  fi
--- 752,761 ----
  $ECHO "\n\nThe on-line manual directory is where the man pages in"
  $ECHO "in the xmcd package will be installed."
  
! if [ -n "$NO_PROMPT" ]
! then
! 	$ECHO "xmcd on-line manual directory - using ${MANDIR}"
! elif getstr "\nEnter on-line manual directory\n[${MANDIR}]:"
  then
  	MANDIR=$ANS
  fi
***************
*** 758,764 ****
  		MANSUFFIX=1
  	fi
  
! 	if getstr "\nEnter on-line manual file name suffix\n[${MANSUFFIX}]:"
  	then
  		MANSUFFIX=$ANS
  	fi
--- 780,789 ----
  		MANSUFFIX=1
  	fi
  
! 	if [ -n "$NO_PROMPT" ]
! 	then
! 		$ECHO "xmcd on-line manual file name suffix - using ${MANSUFFIX}"
! 	elif getstr "\nEnter on-line manual file name suffix\n[${MANSUFFIX}]:"
  	then
  		MANSUFFIX=$ANS
  	fi
@


1.1.1.1
log
@xmcd port
@
text
@@
