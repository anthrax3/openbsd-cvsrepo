head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.0.10
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2013.10.11.17.28.19;	author bcallah;	state dead;
branches;
next	1.1;

1.1
date	2011.08.18.17.56.48;	author jasper;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2011.08.18.17.57.03;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update libmodplug to 0.8.8.4 - all the patches go away.
Bump minor.
Take MAINTAINER.
ok landry@@
@
text
@$OpenBSD: patch-src_load_wav_cpp,v 1.1 2011/08/18 17:56:48 jasper Exp $

Fix integer overflow (SA45131/A)
From upstream git: 2d4c56de314ab13e4437bd8b609f0b751066eee8

--- src/load_wav.cpp.orig	Thu Aug 18 19:37:38 2011
+++ src/load_wav.cpp	Thu Aug 18 19:37:57 2011
@@@@ -54,7 +54,7 @@@@ BOOL CSoundFile::ReadWav(const BYTE *lpStream, DWORD d
 	if ((Patterns[1] = AllocatePattern(64, 4)) == NULL) return TRUE;
 	UINT samplesize = (pfmt->channels * pfmt->bitspersample) >> 3;
 	UINT len = pdata->length, bytelen;
-	if (dwMemPos + len > dwMemLength - 8) len = dwMemLength - dwMemPos - 8;
+	if (len > dwMemLength - 8 - dwMemPos) len = dwMemLength - dwMemPos - 8;
 	len /= samplesize;
 	bytelen = len;
 	if (pfmt->bitspersample >= 16) bytelen *= 2;
@


1.1
log
@Security fixes for CVE-2011-291{1,2,3,4,5}
Various integer overflows and off-by-one errors in libmodplug.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@Security fixes for CVE-2011-291{1,2,3,4,5}
Various integer overflows and off-by-one errors in libmodplug.
@
text
@@

