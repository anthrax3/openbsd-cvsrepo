head	1.5;
access;
symbols
	OPENBSD_5_8:1.1.0.2;
locks; strict;
comment	@# @;


1.5
date	2016.12.11.12.59.40;	author dcoppa;	state dead;
branches;
next	1.4;
commitid	3orgrAlxXS6aJJ6m;

1.4
date	2016.11.24.08.27.28;	author dcoppa;	state Exp;
branches;
next	1.3;
commitid	NNwTedpjDUQi3i7B;

1.3
date	2015.10.28.19.01.39;	author dcoppa;	state dead;
branches;
next	1.2;
commitid	82xGBc2P5riezZud;

1.2
date	2015.10.26.16.03.56;	author dcoppa;	state Exp;
branches;
next	1.1;
commitid	Xb1peMOncFQBAFWp;

1.1
date	2015.10.23.07.53.05;	author dcoppa;	state Exp;
branches
	1.1.2.1;
next	;
commitid	CuA8xoxygTjqt3OG;

1.1.2.1
date	2015.10.23.08.15.51;	author dcoppa;	state Exp;
branches;
next	;
commitid	BsKdiOYUTIymlVoE;


desc
@@


1.5
log
@
Update to mpd-0.19.20
@
text
@$OpenBSD: patch-src_decoder_plugins_FfmpegDecoderPlugin_cxx,v 1.4 2016/11/24 08:27:28 dcoppa Exp $

commit 77a9940461f96a608b1f564f810b146980e63c4d
Author: Max Kellermann <max@@musicpd.org>
Date:   Wed Oct 26 18:06:56 2016 +0200

decoder/ffmpeg: ignore empty packets

An empty packet would be a command for avcodec_send_packet() to
finalize the codec.

Fixes https://bugs.musicpd.org/view.php?id=4588

--- src/decoder/plugins/FfmpegDecoderPlugin.cxx.orig	Wed Nov 23 16:04:04 2016
+++ src/decoder/plugins/FfmpegDecoderPlugin.cxx	Wed Nov 23 16:04:50 2016
@@@@ -643,7 +643,7 @@@@ FfmpegDecode(Decoder &decoder, InputStream &input,
 			/* end of file */
 			break;
 
-		if (packet.stream_index == audio_stream) {
+		if (packet.size > 0 && packet.stream_index == audio_stream) {
 			cmd = ffmpeg_send_packet(decoder, input,
 						 packet,
 						 *codec_context,
@


1.4
log
@
Merge fixes from branch 'v0.19.x' of git://git.musicpd.org/master/mpd

decoder/pcm: round buffer size down to nearest frame size
(upstream git commit 7019f6bea455f0d843131ec5b88cf057ebba5058)

decoder/ffmpeg: ignore empty packets
(upstream git commit 77a9940461f96a608b1f564f810b146980e63c4d)

fix comment in mpdconf.example ("can setting can" -> "setting can")
(upstream git commit 7c251fe19013d17f5ecd65361a560d433c0c19ef)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@
Update to mpd-0.19.11
@
text
@d1 1
a1 1
$OpenBSD: patch-src_decoder_plugins_FfmpegDecoderPlugin_cxx,v 1.2 2015/10/26 16:03:56 dcoppa Exp $
d3 3
a5 3
commit 1958f78cc1bd47ce1c9b57db41194f85aed942ab
Author: Max Kellermann <max@@duempel.org>
Date:   Mon Oct 26 13:06:29 2015 +0100
d7 1
a7 1
decoder/ffmpeg: fix crash due to wrong avio_alloc_context() call
d9 2
a10 3
Allocate the buffer dynamically using av_malloc(), and free
AVIOContext.buffer in the destructor, as mandated by the libavformat
documentation.
d12 1
a12 1
Fixes http://bugs.musicpd.org/view.php?id=4446
d14 5
a18 41
--- src/decoder/plugins/FfmpegDecoderPlugin.cxx.orig	Sat Jun 20 15:08:30 2015
+++ src/decoder/plugins/FfmpegDecoderPlugin.cxx	Mon Oct 26 16:42:44 2015
@@@@ -92,14 +92,14 @@@@ struct AvioStream {
 
 	AVIOContext *io;
 
-	unsigned char buffer[8192];
-
 	AvioStream(Decoder *_decoder, InputStream &_input)
 		:decoder(_decoder), input(_input), io(nullptr) {}
 
 	~AvioStream() {
-		if (io != nullptr)
+		if (io != nullptr) {
+			av_free(io->buffer);
 			av_free(io);
+		}
 	}
 
 	bool Open();
@@@@ -153,11 +153,20 @@@@ mpd_ffmpeg_stream_seek(void *opaque, int64_t pos, int 
 bool
 AvioStream::Open()
 {
-	io = avio_alloc_context(buffer, sizeof(buffer),
+	constexpr size_t BUFFER_SIZE = 8192;
+	auto buffer = (unsigned char *)av_malloc(BUFFER_SIZE);
+	if (buffer == nullptr)
+		return false;
+
+	io = avio_alloc_context(buffer, BUFFER_SIZE,
 				false, this,
 				mpd_ffmpeg_stream_read, nullptr,
 				input.IsSeekable()
 				? mpd_ffmpeg_stream_seek : nullptr);
+	/* If avio_alloc_context() fails, who frees the buffer?  The
+	   libavformat API documentation does not specify this, it
+	   only says that AVIOContext.buffer must be freed in the end,
+	   however no AVIOContext exists in that failure code path. */
 	return io != nullptr;
 }
d20 5
@


1.2
log
@
Merge fixes from the upstream stable 'v0.19.x' branch:

decoder/ffmpeg: fix crash due to wrong avio_alloc_context() call
(git commit 1958f78cc1bd47ce1c9b57db41194f85aed942ab)

decoder/gme: call decoder_seek_error() on seek error
(git commit 93c97972b9cb41284f8af8b653e056484bbf4717)

output/Command: flush the mixer cache when enabling/disabling output
(git commit ac61d43720393803cb3f6bc5c74aea588e1ca68d)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_decoder_plugins_FfmpegDecoderPlugin_cxx,v 1.1 2015/10/23 07:53:05 dcoppa Exp $
@


1.1
log
@
ffmpeg decoder: avoid a double free error while decoding a stream

bug reported and fix tested by "J. Scott Heppler"
@
text
@d1 1
a1 1
$OpenBSD$
d3 11
a13 2
Avoid a double free error while decoding a stream
http://stackoverflow.com/questions/9604633/reading-a-file-located-in-memory-with-libavformat
d16 2
a17 2
+++ src/decoder/plugins/FfmpegDecoderPlugin.cxx	Fri Oct 23 09:33:49 2015
@@@@ -92,14 +92,18 @@@@ struct AvioStream {
d22 1
a22 3
+	uint8_t *io_buffer = nullptr;
+	int io_buffer_size = 8192;
 
d29 1
a29 2
+			if (io->buffer != nullptr)
+				av_free(io->buffer);
d35 1
a35 1
@@@@ -153,7 +157,15 @@@@ mpd_ffmpeg_stream_seek(void *opaque, int64_t pos, int 
d40 3
a42 5
+	io_buffer = (uint8_t*)av_malloc(io_buffer_size);
+
+	if (!io_buffer) {
+		/* Not enough memory - shouldn't happen */
+		LogError(ffmpeg_domain, "av_malloc(io_buffer_size) failed");
a43 1
+	}
d45 1
a45 1
+	io = avio_alloc_context(io_buffer, io_buffer_size,
d49 8
@


1.1.2.1
log
@
MFC:

flac encoder: fix crash with 32 bit playback
(upstream git commit 4e3d1821895c92d060fc3a9059e83ac58c8c79a3)

tag/ApeLoader: fix buffer overflow after unterminated key
(upstream git commit 205fba74cffffb9df985cdf928101633ffc41772)

ffmpeg decoder: avoid a double free error while decoding a stream
@
text
@d1 1
a1 1
$OpenBSD: patch-src_decoder_plugins_FfmpegDecoderPlugin_cxx,v 1.1 2015/10/23 07:53:05 dcoppa Exp $
@

