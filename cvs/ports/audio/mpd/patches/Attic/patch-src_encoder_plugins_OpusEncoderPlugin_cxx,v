head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2015.06.22.08.09.28;	author dcoppa;	state dead;
branches;
next	1.1;
commitid	1tRavTcRq4FWrEgI;

1.1
date	2015.05.07.16.15.41;	author dcoppa;	state Exp;
branches;
next	;
commitid	yA4zPz32Xr0GHiuF;


desc
@@


1.2
log
@
Update to mpd-0.19.10
@
text
@$OpenBSD: patch-src_encoder_plugins_OpusEncoderPlugin_cxx,v 1.1 2015/05/07 16:15:41 dcoppa Exp $

commit 0d7ee2b014db4f5072ac17839d0c7f3535c60675
Author: Michal Nazarewicz <mina86@@mina86.com>
Date:   Mon Mar 23 19:14:54 2015 +0100

OpusEncoderPlugin: initialise granulepos so we end up with sane values

Not initialising granulepos leads to it having arbitrary values in the
encoded stream including possibly negative values which are not valid
and confuse opusdec.  Explicitly initialise opus_encoder::granulepos
to avoid that problem.

--- src/encoder/plugins/OpusEncoderPlugin.cxx.orig	Sat Oct 25 00:28:53 2014
+++ src/encoder/plugins/OpusEncoderPlugin.cxx	Thu May  7 18:05:01 2015
@@@@ -66,7 +66,7 @@@@ struct opus_encoder {
 
 	ogg_int64_t granulepos;
 
-	opus_encoder():encoder(opus_encoder_plugin) {}
+	opus_encoder():encoder(opus_encoder_plugin), granulepos(0) {}
 };
 
 static constexpr Domain opus_encoder_domain("opus_encoder");
@


1.1
log
@
Merge fix from the stable 'v0.19.x' branch:

OpusEncoderPlugin: initialise granulepos so we end up with sane values
(upstream git commit 0d7ee2b014db4f5072ac17839d0c7f3535c60675)
@
text
@d1 1
a1 1
$OpenBSD$
@

