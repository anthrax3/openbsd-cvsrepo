head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.28
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.24
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.26
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.22
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.20
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.18
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.16
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.14
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.12
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.10
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.01.11.07.51.26;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@- update to mp3blaster-3.2.5
- add sndio audio to mp3blaster and splay programs
- implement nmixer as a generic midi volume controller, that defaults to
using the aucat:0 midi device
- stop using multiple threads for mpeg decoding.  they are poorly
implmented, just spinning and using all available cpu cycles

with feedback from naddy@@ and ratchov@@
@
text
@$OpenBSD$
--- configure.ac.orig	Sat Dec 26 21:01:24 2009
+++ configure.ac	Sat Dec 26 21:14:11 2009
@@@@ -5,7 +5,7 @@@@ AC_CONFIG_SRCDIR([src/mp3blaster.h])
 AM_INIT_AUTOMAKE
 
 #Custom C++ flags - later options override earlier ones
-if [ -z "$CXXFLAGS" ] ; then
+if test -z "$CXXFLAGS" ; then
 	CXXFLAGS="-O2 -Wall -W -fno-strength-reduce"
 fi
 
@@@@ -128,6 +128,11 @@@@ AC_ARG_WITH(oss,
 	[  --with-oss              Support OSS for audio playback [default=yes]],
 	[ if test "$withval" = "yes" ; then WANT_OSS=1; REQ_OSS=1 ; else WANT_OSS=0 ; fi ])
 
+WANT_SNDIO=1
+AC_ARG_WITH(sndio,
+	[  --with-sndio            Support sndio for audio playback [default=yes]],
+	[ if test "$withval" = "yes" ; then WANT_SNDIO=1; REQ_SNDIO=1 ; else WANT_SNDIO=0 ; fi ])
+
 #Features 
 AC_ARG_ENABLE(static,
   [  --enable-static         Build static binaries instead [default=no]],
@@@@ -187,9 +192,9 @@@@ AC_LANG(C++)
 
 HAVE_OGG="no"
 if test "$WANT_OGG" = "1" ; then
-  AC_CHECK_LIB(vorbisfile,main,HAVE_OGG="yes",HAVE_OGG="no",-lvorbis)
+  AC_CHECK_LIB(vorbisfile,main,HAVE_OGG="yes",HAVE_OGG="no",-lvorbis -logg)
   if test "$HAVE_OGG" = "yes" ; then
-    OGG_LIBS="-lvorbisfile -lvorbis"
+    OGG_LIBS="-lvorbisfile -lvorbis -logg"
 		AC_SUBST(OGG_LIBS)
     AC_DEFINE(INCLUDE_OGG,1,[OGG playback support])
 	elif test "$REQ_OGG" = "1" ; then
@@@@ -305,6 +310,24 @@@@ if test "$WANT_ESD" = "1" ; then
 	fi
 fi
 
+#Use sndio ?
+HAVE_SNDIO="no"
+if test "$WANT_SNDIO" = "1" ; then
+	AC_CHECK_LIB(sndio,sio_open, [ HAVE_SNDIO="yes" ], [ HAVE_SNDIO="no" ])
+	AC_CHECK_HEADER(sndio.h, [], [ HAVE_SNDIO="no" ])
+
+	if test "$HAVE_SNDIO" = "yes"
+	then
+		AC_DEFINE(WANT_SNDIO,1,[sndio audio output support])
+		LIBSNDIO="-lsndio"
+		AC_SUBST(LIBSNDIO)
+		#We have an alternative to OSS!
+		HAVE_SOUNDOUTPUT=1
+	elif test "$REQ_SNDIO" = "1" ; then
+		AC_MSG_ERROR([you requested sndio support, but sndio library or includes cannot be found in your library path])
+	fi
+fi
+
 dnl Use SDL ?
 HAVE_SDL="no"
 
@@@@ -496,6 +519,7 @@@@ if test "$HAVE_OGG" = "yes" ; then AUDIO_FORMATS="$AUD
 if test "$HAVE_SID" = "yes" ; then AUDIO_FORMATS="$AUDIO_FORMATS sid" ; fi
 AUDIO_DRIVERS=""
 if test "$HAVE_OSS" = "yes" ; then AUDIO_DRIVERS="${AUDIO_DRIVERS}oss " ; fi
+if test "$HAVE_SNDIO" = "yes" ; then AUDIO_DRIVERS="${AUDIO_DRIVERS}sndio " ; fi
 if test "$HAVE_SDL" = "yes" ; then AUDIO_DRIVERS="${AUDIO_DRIVERS}sdl " ; fi
 if test "$HAVE_ESD" = "yes" ; then AUDIO_DRIVERS="${AUDIO_DRIVERS}esd " ; fi
 if test "$HAVE_NAS" = "yes" ; then AUDIO_DRIVERS="${AUDIO_DRIVERS}nas " ; fi
@
