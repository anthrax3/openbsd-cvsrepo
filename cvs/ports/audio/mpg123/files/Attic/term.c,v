head	1.5;
access;
symbols
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.14
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.12
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.10
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.8
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_TRACKING_SWITCH:1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3;
locks; strict;
comment	@ * @;


1.5
date	2008.11.11.20.35.48;	author naddy;	state dead;
branches;
next	1.4;

1.4
date	2003.06.12.22.15.26;	author pvalchev;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.12.17.58.08;	author ho;	state Exp;
branches;
next	1.2;

1.2
date	2000.01.12.15.47.14;	author ho;	state Exp;
branches;
next	1.1;

1.1
date	99.12.01.16.22.01;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@From scratch newly created port of mpg123 1.6.1 with sndio backend.
Help from ratchov@@, tested by many, ok sthen@@
@
text
@/* $OpenBSD: term.c,v 1.4 2003/06/12 22:15:26 pvalchev Exp $ */
/*-
 * Copyright (c) 1999 Marc Espie.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE OPENBSD PROJECT AND CONTRIBUTORS 
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
 * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENBSD
 * PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* Set terminal discipline to non blocking io and such.  */

#include <signal.h>
#include <ctype.h>
#include <unistd.h>
#include <stdlib.h>

#include <sys/types.h>
#include <sys/termios.h>	
#include <errno.h>

#include "mpg123.h"

#ifdef TERM_CONTROL

static void sane_tty(void);
static void suspend(int sig);
static int run_in_fg(void);
static void if_fg_sane_tty(void);
static int may_getchar(void);
static void set_raw(int);

static struct termios sanity;
static struct termios *psanity = NULL;

static int is_fg;

#ifdef SIGTSTP
static void suspend(int sig)
{
	sane_tty();
	signal(SIGTSTP, SIG_DFL);
	kill(0, SIGTSTP);
}
#endif

static int run_in_fg(void)
{
	pid_t val;

		/* this should work on every unix */
	if (!isatty(fileno(stdin)) || !isatty(fileno(stdout)))
		return 0;

	val = tcgetpgrp(fileno(stdin));
	if (val == -1) {
		if (errno == ENOTTY)
			return 0;
		else
			return 1;
	}
	if (val == getpgrp())
		return 1;
	else
		return 0;
}

/* if_fg_sane_tty():
 * restore tty modes, _only_ if running in foreground
 */
static void if_fg_sane_tty(void)
{
	if (run_in_fg())
		sane_tty();
}


static void set_raw(int sig)
{
	struct termios zap;

#ifdef SIGTSTP
	signal(SIGTSTP, suspend);
#endif
#ifdef SIGCONT
	signal(SIGCONT, set_raw);
#endif
	if (run_in_fg()) {
		tcgetattr(fileno(stdin), &zap);
		zap.c_cc[VMIN] = 0;     /* can't work with old */
		zap.c_cc[VTIME] = 0; /* FreeBSD versions    */
		zap.c_lflag &= ~(ICANON|ECHO|ECHONL);
		tcsetattr(fileno(stdin), TCSADRAIN, &zap);	
		is_fg = TRUE;
	} else
		is_fg = FALSE;
}

/* nonblocking_io():
 * try to setup the keyboard to non blocking io
 */
void term_init(void)
{
	if (!psanity) {
		psanity = &sanity;
		tcgetattr(fileno(stdin), psanity);
	}
	set_raw(0);
	atexit(if_fg_sane_tty);
}


/* sane_tty():
 * restores everything to a sane state before returning to shell */
static void sane_tty(void)
{
	tcsetattr(fileno(stdin), TCSADRAIN, psanity);
}

static int may_getchar(void)
{
	char buffer;

	if (run_in_fg() && !is_fg)
	       set_raw(0);
	if (run_in_fg() && read(fileno(stdin), &buffer, 1))
	       return buffer;
	return 0;
}

void term_control(void)
{
	int val = may_getchar();

	if (val == 'b' || val == 'B')
		rd->rewind(rd);
}

void term_restore(void)
{
}

#endif
@


1.4
log
@remove license term 3 for espie, ports tree appears clean of terms 3/4 now
@
text
@d1 1
a1 1
/* $OpenBSD: term.c,v 1.3 2000/01/12 17:58:08 ho Exp $ */
@


1.3
log
@term_restore() should do nothing. (from espie@@)
@
text
@d1 1
a1 1
/* $OpenBSD: term.c,v 1.2 2000/01/12 15:47:14 ho Exp $ */
a12 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Marc Espie for the OpenBSD
 * Project.
@


1.2
log
@Upgrade to mpg123-0.59r
Tested by niklas@@
@
text
@d1 1
a1 1
/* $OpenBSD: term.c,v 1.1 1999/12/01 16:22:01 espie Exp $ */
a160 1
        sane_tty();
@


1.1
log
@Restore TERM capability.
Code scavenged from tracker, since it's known to work...
removed all special cases, since it's needed only for OpenBSD.
Tweaks after some ho@@'s comments.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d113 1
a113 1
		tcsetattr(fileno(stdin), TCSADRAIN, &zap);
d148 1
a148 1
	return EOF;
d158 6
a163 1
	
@

