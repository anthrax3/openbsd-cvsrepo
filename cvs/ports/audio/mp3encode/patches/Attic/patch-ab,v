head	1.3;
access;
symbols
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	mp3encode:1.1.1.1
	angelos:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2003.04.20.22.40.14;	author naddy;	state dead;
branches;
next	1.2;

1.2
date	2000.01.27.14.04.55;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	99.05.23.01.42.35;	author angelos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.23.01.42.35;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fix sloppiness from previous commit
@
text
@--- musicin.c.orig	Wed Jan 22 04:43:17 1997
+++ musicin.c	Thu Jan 27 00:31:34 2000
@@@@ -161,7 +161,8 @@@@
 
     do  {
        printf("Enter PCM input file name <required>: ");
-       gets(original_file_name);
+       fgets(original_file_name,255,stdin);
+       original_file_name[strlen(original_file_name) - 1] = NULL_CHAR;
        if (original_file_name[0] == NULL_CHAR)
        printf("PCM input file name is required.\n");
     } while (original_file_name[0] == NULL_CHAR);
@@@@ -182,8 +183,9 @@@@
            original_file_name, DFLT_EXT);
 #endif
  
-    gets(encoded_file_name);
-    
+    fgets(encoded_file_name,255,stdin);
+    encoded_file_name[strlen(encoded_file_name) - 1] = NULL_CHAR;
+
     if (encoded_file_name[0] == NULL_CHAR) {
 #ifdef  MS_DOS
   strcpy(encoded_file_name, temp_str);
@@@@ -227,7 +229,8 @@@@
     else {    /* Not using Audio IFF sound file headers. */
 
        printf("What is the sampling frequency? <44100>[Hz]: ");
-       gets(t);
+       fgets(t,255,stdin);
+       t[strlen(t) - 1] = NULL_CHAR;
        freq = atol(t);
        switch (freq) {
           case 48000 : info->sampling_frequency = 1;
@@@@ -268,7 +271,8 @@@@
 
     printf("Which layer do you want to use?\n");
     printf("Available: Layer (1), Layer (<2>), Layer (3): ");
-    gets(t);
+    fgets(t,255,stdin);
+    t[strlen(t) - 1] = NULL_CHAR;
     switch(*t){
        case '1': info->lay = 1; printf(">>> Using Layer %s\n",t); break;
        case '2': info->lay = 2; printf(">>> Using Layer %s\n",t); break;
@@@@ -279,7 +283,8 @@@@
     printf("Which mode do you want?\n");
     printf("Available: (<s>)tereo, (j)oint stereo, ");
     printf("(d)ual channel, s(i)ngle Channel: ");
-    gets(t);
+    fgets(t,255,stdin);
+    t[strlen(t) - 1] = NULL_CHAR;
     switch(*t){
        case 's':
        case 'S':
@@@@ -308,7 +313,8 @@@@
     }
 
     printf("Which psychoacoustic model do you want to use? <1>: ");
-    gets(t);
+    fgets(t,255,stdin);
+    t[strlen(t) - 1] = NULL_CHAR;
     model = atoi(t);
     if (model > 2 || model < 1) {
        printf(">>> Default model 1 selected\n");
@@@@ -322,7 +328,8 @@@@
     /* set default bitrate to highest allowed, which is index 14 */
   brt = bitrate[info->version][info->lay-1][14];
     printf( "What is the total bitrate? <%u>[kbps]: ", brt );
-    gets( t );
+    fgets(t,255,stdin);
+    t[strlen(t) - 1] = NULL_CHAR;
     brt = atoi( t );
     if ( brt == 0 )
       j = 15;
@@@@ -348,7 +355,8 @@@@
  
     printf("What type of de-emphasis should the decoder use?\n");
     printf("Available: (<n>)one, (5)0/15 microseconds, (c)citt j.17: ");
-    gets(t);
+    fgets(t,255,stdin);
+    t[strlen(t) - 1] = NULL_CHAR;
     if (*t != 'n' && *t != '5' && *t != 'c') {
        printf(">>> Using default no de-emphasis\n");
        info->emphasis = 0;
@@@@ -363,7 +371,8 @@@@
 /*  Start 2. Part changes for CD Ver 3.2; jsp; 22-Aug-1991 */
  
     printf("Do you want to set the private bit? (y/<n>): ");
-    gets(t);
+    fgets(t,255,stdin);
+    t[strlen(t) - 1] = NULL_CHAR;
     if (*t == 'y' || *t == 'Y') info->extension = 1;
     else                        info->extension = 0;
     if(info->extension) printf(">>> Private bit set\n");
@@@@ -372,28 +381,33 @@@@
 /*  End changes for CD Ver 3.2; jsp; 22-Aug-1991 */
  
     printf("Do you want error protection? (y/<n>): ");
-    gets(t);
+    fgets(t,255,stdin);
+
+    t[strlen(t) - 1] = NULL_CHAR;
     if (*t == 'y' || *t == 'Y') info->error_protection = TRUE;
     else                        info->error_protection = FALSE;
     if(info->error_protection) printf(">>> Error protection used\n");
     else printf(">>> Error protection not used\n");
  
     printf("Is the material copyrighted? (y/<n>): ");
-    gets(t);
+    fgets(t,255,stdin);
+    t[strlen(t) - 1] = NULL_CHAR;
     if (*t == 'y' || *t == 'Y') info->copyright = 1;
     else                        info->copyright = 0;
     if(info->copyright) printf(">>> Copyrighted material\n");
     else                printf(">>> Material not copyrighted\n");
  
     printf("Is this the original? (y/<n>): ");
-    gets(t);
+    fgets(t,255,stdin);
+    t[strlen(t) - 1] = NULL_CHAR;
     if (*t == 'y' || *t == 'Y') info->original = 1;
     else                        info->original = 0;
     if(info->original) printf(">>> Original material\n");
     else               printf(">>> Material not original\n");
  
     printf("Do you wish to exit (last chance before encoding)? (y/<n>): ");
-    gets(t);
+    fgets(t,255,stdin);
+    t[strlen(t) - 1] = NULL_CHAR;
     if (*t == 'y' || *t == 'Y') exit(0);
 }
 
@


1.2
log
@- cleanup Makefile
- add missing RMD160 and SHA1 checksums
- convert patches to unified diffs
- make this port respect CC and CFLAGS
- remove some unnecedsary comments from DESCR
@
text
@@


1.1
log
@Initial revision
@
text
@d1 132
a132 230
*** musicin.c.orig	Wed Jan 22 18:43:17 1997
--- musicin.c	Sun Apr 11 01:44:39 1999
***************
*** 161,167 ****
  
      do  {
         printf("Enter PCM input file name <required>: ");
!        gets(original_file_name);
         if (original_file_name[0] == NULL_CHAR)
         printf("PCM input file name is required.\n");
      } while (original_file_name[0] == NULL_CHAR);
--- 161,168 ----
  
      do  {
         printf("Enter PCM input file name <required>: ");
!        fgets(original_file_name,255,stdin);
!        original_file_name[strlen(original_file_name) - 1] = NULL_CHAR;
         if (original_file_name[0] == NULL_CHAR)
         printf("PCM input file name is required.\n");
      } while (original_file_name[0] == NULL_CHAR);
***************
*** 182,189 ****
             original_file_name, DFLT_EXT);
  #endif
   
!     gets(encoded_file_name);
!     
      if (encoded_file_name[0] == NULL_CHAR) {
  #ifdef  MS_DOS
    strcpy(encoded_file_name, temp_str);
--- 183,191 ----
             original_file_name, DFLT_EXT);
  #endif
   
!     fgets(encoded_file_name,255,stdin);
!     encoded_file_name[strlen(encoded_file_name) - 1] = NULL_CHAR;
! 
      if (encoded_file_name[0] == NULL_CHAR) {
  #ifdef  MS_DOS
    strcpy(encoded_file_name, temp_str);
***************
*** 227,233 ****
      else {    /* Not using Audio IFF sound file headers. */
  
         printf("What is the sampling frequency? <44100>[Hz]: ");
!        gets(t);
         freq = atol(t);
         switch (freq) {
            case 48000 : info->sampling_frequency = 1;
--- 229,236 ----
      else {    /* Not using Audio IFF sound file headers. */
  
         printf("What is the sampling frequency? <44100>[Hz]: ");
!        fgets(t,255,stdin);
!        t[strlen(t) - 1] = NULL_CHAR;
         freq = atol(t);
         switch (freq) {
            case 48000 : info->sampling_frequency = 1;
***************
*** 268,274 ****
  
      printf("Which layer do you want to use?\n");
      printf("Available: Layer (1), Layer (<2>), Layer (3): ");
!     gets(t);
      switch(*t){
         case '1': info->lay = 1; printf(">>> Using Layer %s\n",t); break;
         case '2': info->lay = 2; printf(">>> Using Layer %s\n",t); break;
--- 271,278 ----
  
      printf("Which layer do you want to use?\n");
      printf("Available: Layer (1), Layer (<2>), Layer (3): ");
!     fgets(t,255,stdin);
!     t[strlen(t) - 1] = NULL_CHAR;
      switch(*t){
         case '1': info->lay = 1; printf(">>> Using Layer %s\n",t); break;
         case '2': info->lay = 2; printf(">>> Using Layer %s\n",t); break;
***************
*** 279,285 ****
      printf("Which mode do you want?\n");
      printf("Available: (<s>)tereo, (j)oint stereo, ");
      printf("(d)ual channel, s(i)ngle Channel: ");
!     gets(t);
      switch(*t){
         case 's':
         case 'S':
--- 283,290 ----
      printf("Which mode do you want?\n");
      printf("Available: (<s>)tereo, (j)oint stereo, ");
      printf("(d)ual channel, s(i)ngle Channel: ");
!     fgets(t,255,stdin);
!     t[strlen(t) - 1] = NULL_CHAR;
      switch(*t){
         case 's':
         case 'S':
***************
*** 308,314 ****
      }
  
      printf("Which psychoacoustic model do you want to use? <1>: ");
!     gets(t);
      model = atoi(t);
      if (model > 2 || model < 1) {
         printf(">>> Default model 1 selected\n");
--- 313,320 ----
      }
  
      printf("Which psychoacoustic model do you want to use? <1>: ");
!     fgets(t,255,stdin);
!     t[strlen(t) - 1] = NULL_CHAR;
      model = atoi(t);
      if (model > 2 || model < 1) {
         printf(">>> Default model 1 selected\n");
***************
*** 322,328 ****
      /* set default bitrate to highest allowed, which is index 14 */
    brt = bitrate[info->version][info->lay-1][14];
      printf( "What is the total bitrate? <%u>[kbps]: ", brt );
!     gets( t );
      brt = atoi( t );
      if ( brt == 0 )
        j = 15;
--- 328,335 ----
      /* set default bitrate to highest allowed, which is index 14 */
    brt = bitrate[info->version][info->lay-1][14];
      printf( "What is the total bitrate? <%u>[kbps]: ", brt );
!     fgets(t,255,stdin);
!     t[strlen(t) - 1] = NULL_CHAR;
      brt = atoi( t );
      if ( brt == 0 )
        j = 15;
***************
*** 348,354 ****
   
      printf("What type of de-emphasis should the decoder use?\n");
      printf("Available: (<n>)one, (5)0/15 microseconds, (c)citt j.17: ");
!     gets(t);
      if (*t != 'n' && *t != '5' && *t != 'c') {
         printf(">>> Using default no de-emphasis\n");
         info->emphasis = 0;
--- 355,362 ----
   
      printf("What type of de-emphasis should the decoder use?\n");
      printf("Available: (<n>)one, (5)0/15 microseconds, (c)citt j.17: ");
!     fgets(t,255,stdin);
!     t[strlen(t) - 1] = NULL_CHAR;
      if (*t != 'n' && *t != '5' && *t != 'c') {
         printf(">>> Using default no de-emphasis\n");
         info->emphasis = 0;
***************
*** 363,369 ****
  /*  Start 2. Part changes for CD Ver 3.2; jsp; 22-Aug-1991 */
   
      printf("Do you want to set the private bit? (y/<n>): ");
!     gets(t);
      if (*t == 'y' || *t == 'Y') info->extension = 1;
      else                        info->extension = 0;
      if(info->extension) printf(">>> Private bit set\n");
--- 371,378 ----
  /*  Start 2. Part changes for CD Ver 3.2; jsp; 22-Aug-1991 */
   
      printf("Do you want to set the private bit? (y/<n>): ");
!     fgets(t,255,stdin);
!     t[strlen(t) - 1] = NULL_CHAR;
      if (*t == 'y' || *t == 'Y') info->extension = 1;
      else                        info->extension = 0;
      if(info->extension) printf(">>> Private bit set\n");
***************
*** 372,399 ****
  /*  End changes for CD Ver 3.2; jsp; 22-Aug-1991 */
   
      printf("Do you want error protection? (y/<n>): ");
!     gets(t);
      if (*t == 'y' || *t == 'Y') info->error_protection = TRUE;
      else                        info->error_protection = FALSE;
      if(info->error_protection) printf(">>> Error protection used\n");
      else printf(">>> Error protection not used\n");
   
      printf("Is the material copyrighted? (y/<n>): ");
!     gets(t);
      if (*t == 'y' || *t == 'Y') info->copyright = 1;
      else                        info->copyright = 0;
      if(info->copyright) printf(">>> Copyrighted material\n");
      else                printf(">>> Material not copyrighted\n");
   
      printf("Is this the original? (y/<n>): ");
!     gets(t);
      if (*t == 'y' || *t == 'Y') info->original = 1;
      else                        info->original = 0;
      if(info->original) printf(">>> Original material\n");
      else               printf(">>> Material not original\n");
   
      printf("Do you wish to exit (last chance before encoding)? (y/<n>): ");
!     gets(t);
      if (*t == 'y' || *t == 'Y') exit(0);
  }
  
--- 381,413 ----
  /*  End changes for CD Ver 3.2; jsp; 22-Aug-1991 */
   
      printf("Do you want error protection? (y/<n>): ");
!     fgets(t,255,stdin);
! 
!     t[strlen(t) - 1] = NULL_CHAR;
      if (*t == 'y' || *t == 'Y') info->error_protection = TRUE;
      else                        info->error_protection = FALSE;
      if(info->error_protection) printf(">>> Error protection used\n");
      else printf(">>> Error protection not used\n");
   
      printf("Is the material copyrighted? (y/<n>): ");
!     fgets(t,255,stdin);
!     t[strlen(t) - 1] = NULL_CHAR;
      if (*t == 'y' || *t == 'Y') info->copyright = 1;
      else                        info->copyright = 0;
      if(info->copyright) printf(">>> Copyrighted material\n");
      else                printf(">>> Material not copyrighted\n");
   
      printf("Is this the original? (y/<n>): ");
!     fgets(t,255,stdin);
!     t[strlen(t) - 1] = NULL_CHAR;
      if (*t == 'y' || *t == 'Y') info->original = 1;
      else                        info->original = 0;
      if(info->original) printf(">>> Original material\n");
      else               printf(">>> Material not original\n");
   
      printf("Do you wish to exit (last chance before encoding)? (y/<n>): ");
!     fgets(t,255,stdin);
!     t[strlen(t) - 1] = NULL_CHAR;
      if (*t == 'y' || *t == 'Y') exit(0);
  }
  
@


1.1.1.1
log
@MP3 encoder software (adapted from FreeBSD)
@
text
@@
