head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.30
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.28
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.26
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.22
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.24
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.04.26.01.32.38;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@sndio supported as default audio output method

ok jolan@@ (MAINTAINER)
@
text
@$OpenBSD$
--- speech_tools/audio/gen_audio.cc.orig	Fri Apr 30 09:56:49 2004
+++ speech_tools/audio/gen_audio.cc	Sat Apr 24 18:40:17 2010
@@@@ -103,6 +103,8 @@@@ int play_wave(EST_Wave &inwave, EST_Option &al)
 	    protocol = "win32audio";
 	else if (mplayer_supported)
 	    protocol = "mplayeraudio";
+	else if (sndio_supported)
+	    protocol = "sndioaudio";
 	else
 	    protocol = "sunaudio";
     }
@@@@ -118,6 +120,8 @@@@ int play_wave(EST_Wave &inwave, EST_Option &al)
     else if ((upcase(protocol) == "FREEBSD16AUDIO") ||
 	     (upcase(protocol) == "LINUX16AUDIO"))
 	return play_voxware_wave(*toplay,al);
+    else if (upcase(protocol) == "SNDIOAUDIO")
+	return play_sndio_wave(*toplay,al);
     else if (upcase(protocol) == "IRIXAUDIO")
 	return play_irix_wave(*toplay,al);
     else if (upcase(protocol) == "MPLAYERAUDIO")
@@@@ -256,6 +260,8 @@@@ EST_String options_supported_audio(void)
 	audios += " win32audio";
     if (os2audio_supported)
 	audios += " os2audio";
+    if (sndio_supported)
+	audios += " sndioaudio";
 
     return audios;
 }
@@@@ -294,6 +300,8 @@@@ int record_wave(EST_Wave &wave, EST_Option &al)
 	    protocol = "win32audio";
 	else if (mplayer_supported)
 	    protocol = "mplayeraudio";
+	else if (sndio_supported)
+	    protocol = "sndioaudio";
 	else
 	    protocol = "sunaudio";
     }
@@@@ -307,6 +315,8 @@@@ int record_wave(EST_Wave &wave, EST_Option &al)
     else if ((upcase(protocol) == "FREEBSD16AUDIO") ||
 	     (upcase(protocol) == "LINUX16AUDIO"))
 	return record_voxware_wave(wave,al);
+    else if (upcase(protocol) == "SNDIOAUDIO")
+	return record_sndio_wave(wave,al);
     else if (upcase(protocol) == "SUNAUDIO")
 	return record_sunau_wave(wave,al);
     else
@
