head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.32
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.30
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.26
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.28
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.24
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.22
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.20
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.18
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.16
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.14
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.12
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.8
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.6
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	eric_2009_Jun_07:1.1.1.1
	eric:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2009.06.07.07.18.39;	author eric;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.07.07.18.39;	author eric;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@#!/usr/bin/perl
# ====================================================================
# Copyright (c) 2000 Carnegie Mellon University.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer. 
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
#
# This work was supported in part by funding from the Defense Advanced 
# Research Projects Agency and the National Science Foundation of the 
# United States of America, and the CMU Sphinx Speech Consortium.
#
# THIS SOFTWARE IS PROVIDED BY CARNEGIE MELLON UNIVERSITY ``AS IS'' AND 
# ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY
# NOR ITS EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

use strict;

die "$0 <file1> <file2> (tolerance) (fields)\n" unless @@ARGV >= 2;

my ($fn1, $fn2, $tolerance, $fields) = @@ARGV;
$tolerance = 0.002 unless defined($tolerance);
my @@fields;
@@fields = split /,/, $fields if defined($fields);

my $comparison = 0;

my $line1 = "";
my $line2 = "";
if ((open (FN1, "<$fn1")) and (open (FN2, "<$fn2"))) {
  $comparison = 1;
  while (($line1 = <FN1>) . ($line2 = <FN2>)) {
    chomp($line1);
    chomp($line2);
    next if ($line1 eq $line2);
    my @@field1 = split /[,:\s]+/, $line1;
    my @@field2 = split /[,:\s]+/, $line2;
    # If the number of tokens in each line is different, the lines,
    # and therefore the files, don't match.
    if ($#field1 != $#field2) {
      $comparison = 0;
      last;
    }
    @@fields = (0..$#field1) unless @@fields;
    foreach my $i (@@fields) {
      if (($field1[$i] !~ m/^([+-]?)(?=\d|\.\d)\d*(\.\d*)?([Ee]([+-]?\d+))?\)?$/) or
	  ($field2[$i] !~ m/^([+-]?)(?=\d|\.\d)\d*(\.\d*)?([Ee]([+-]?\d+))?\)?$/)) {
	# Check if any of the tokens in the line is a string rather
	# than a number, and compare the strings
	if ($field1[$i] ne $field2[$i]) {
	  $comparison = 0;
	  last;
	}
      } else {
	  # If the tokens are both numbers, check if they match within
	  # a tolerance
	  if (abs($field1[$i] - $field2[$i]) > $tolerance) {
	      $comparison = 0;
	      last;
	  }
      }
    }
    # If there was a mismatch, we can skip to the end of the loop
    last if ($comparison == 0);
  }
  # If the files don't have the same number of lines, one of the
  # lines will be EOF, and the other won't.
  $comparison = 0 if ($line1 != $line2);
}

close(FN1);
close(FN2);

if ($comparison) {
  print "Comparison: SUCCESS\n";
} else {
  print "Comparison: FAIL\n";
}
@


1.1.1.1
log
@Sphinx-3 is the successor to the Sphinx-II speech recognition system
from Carnegie Mellon University. It includes both an acoustic trainer
and various decoders, i.e., text recognition, phoneme recognition,
N-best list generation, etc.

ok ajacoutot@@
@
text
@@
