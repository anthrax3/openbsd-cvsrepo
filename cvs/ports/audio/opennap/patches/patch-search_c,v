head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.60
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.58
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.54
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.56
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.52
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.50
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.48
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.46
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.44
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.42
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.40
	OPENBSD_5_0:1.1.0.38
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.36
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.34
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.32
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.30
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.28
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.26
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.24
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.22
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.20
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.18
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.16
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.14
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.12
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.10
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.8
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.4
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2002.08.10.01.14.04;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to 0.44 with some patches from CVS.

Notable changes to the port:
- creates opennap user/group to run as
- tons of bugfixes, improved performance
- no longer hardcodes SYSCONFDIR to /etc/opennap

Submitted by Jolan Luff <jolan@@pellaeon.com>.
@
text
@$OpenBSD$
--- search.c.orig	Fri Sep 28 23:34:23 2001
+++ search.c	Tue Oct 16 18:14:04 2001
@@@@ -304,6 +304,9 @@@@ free_datum (DATUM * d)
 {
     int i;
     TokenRef *ref;
+#if RESUME
+    FileList *flist;
+#endif
 
     for (i = 0; i < d->numTokens; i++)
     {
@@@@ -342,13 +345,31 @@@@ free_datum (DATUM * d)
 
     FREE (d->tokens);
 
-    /* XXX broken */
 #if RESUME
     flist = hash_lookup (MD5, d->hash);
     if (flist)
     {
+	DList *list;
+
 	ASSERT (validate_flist (flist));
-	flist->list = list_delete (flist->list, d);
+	for (list = flist->list; list; list = list->next)
+	{
+	    if (list->data == d)
+	    {
+		if (list->prev)
+		    list->prev->next =  list->next;
+		else
+		{
+		    /* element is head of list, update the flist pointer */
+		    flist->list = list->next;
+		}
+		if (list->next)
+		    list->next->prev = list->prev;
+		FREE (list);
+		break;
+	    }
+	}
+
 	flist->count--;
 	/* if there are no more files in this bin, erase it */
 	if (flist->count == 0)
@@@@ -944,6 +965,13 @@@@ HANDLER (search)
 	return;
     }
 
+    /* NO SOUP FOR YOU!!! */
+    if (con->user->level == LEVEL_LEECH)
+    {
+	send_cmd (con, MSG_SERVER_SEARCH_END, "");
+	return;
+    }
+
     /* if Max_Searches is > 0, we only allow clients to have a certain small
      * number of pending search requests.  Some abusive clients will tend
      * to issues multiple search requests at a time.
@@@@ -1015,6 +1043,13 @@@@ HANDLER (remote_search)
     if (! option (ON_ALLOW_SHARE))
     {
 	/* sharing is not allowed on this server */
+	send_cmd (con, MSG_SERVER_REMOTE_SEARCH_END, "%s", id);
+	return;
+    }
+
+    if (user->level == LEVEL_LEECH)
+    {
+	/* user is not allowed to search this server */
 	send_cmd (con, MSG_SERVER_REMOTE_SEARCH_END, "%s", id);
 	return;
     }
@
