head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.60
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.58
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.54
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.56
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.52
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.50
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.48
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.46
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.44
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.42
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.40
	OPENBSD_5_0:1.1.0.38
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.36
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.34
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.32
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.30
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.28
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.26
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.24
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.22
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.20
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.18
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.16
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.14
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.12
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.10
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.8
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.4
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2002.08.10.01.14.04;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to 0.44 with some patches from CVS.

Notable changes to the port:
- creates opennap user/group to run as
- tons of bugfixes, improved performance
- no longer hardcodes SYSCONFDIR to /etc/opennap

Submitted by Jolan Luff <jolan@@pellaeon.com>.
@
text
@$OpenBSD$
--- main.c.orig	Sun Sep 30 17:12:37 2001
+++ main.c	Tue Oct 16 18:14:04 2001
@@@@ -51,6 +51,7 @@@@ LIST   *UserClass = 0;
 
 char    Buf[2048];		/* global scratch buffer */
 
+int	gBlockWinMX;
 HASH   *Channel_Db;
 int     Client_Queue_Length;
 HASH   *Channels = 0;		/* global channel list */
@@@@ -330,7 +331,7 @@@@ report_stats (int fd)
     int     n;
     struct sockaddr_in sin;
     socklen_t sinsize = sizeof (sin);
-    float   loadavg = 0;
+    double   loadavg = 0;
 
     n = accept (fd, (struct sockaddr *) &sin, &sinsize);
     if (n == -1)
@@@@ -340,7 +341,10 @@@@ report_stats (int fd)
     }
     log_message ("report_stats: connection from %s:%d", inet_ntoa (sin.sin_addr),
 	 htons (sin.sin_port));
-#ifdef linux
+#if HAVE_GETLOADAVG
+    if (getloadavg (&loadavg, 1) < 0)
+	log_message ("report_stats: getloadavg: %s (errno %d)", strerror (errno), errno);
+#elif defined(linux)
     {
 	FILE   *f = fopen ("/proc/loadavg", "r");
 
@@@@ -356,8 +360,8 @@@@ report_stats (int fd)
 	}
     }
 #endif /* linux */
-    snprintf (Buf, sizeof (Buf), "%d %d %.2f %.0f 0\n", Users->dbsize,
-	      Num_Files, loadavg, Num_Gigs * 1024.);
+    snprintf (Buf, sizeof (Buf), "%d %d %0.2f %.0f %d\n", Users->dbsize,
+	      Num_Files, loadavg, Num_Gigs * 1024., global.clients_num - list_count(Servers));
     WRITE (n, Buf, strlen (Buf));
     CLOSE (n);
 }
@
