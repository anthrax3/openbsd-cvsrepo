head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.30
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.28
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.24
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.26
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.22
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.20
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.18
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.16
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.14
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.12
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.10
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.01.11.05.11.32;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@-update to hydrogen-0.9.4: bugfixes, qt3->qt4, code cleanup & file renaming
-add sndio audio and midi support, drop OSS audio support
- take maintainership
maintainer change suggested by grange@@ (former maintainer), ok ratchov@@
@
text
@$OpenBSD$
--- gui/src/PreferencesDialog.cpp.orig	Wed Jul 22 20:10:25 2009
+++ gui/src/PreferencesDialog.cpp	Sat Jan  2 03:24:33 2010
@@@@ -63,6 +63,7 @@@@ PreferencesDialog::PreferencesDialog(QWidget* parent)
 	driverComboBox->addItem( "ALSA" );
 	driverComboBox->addItem( "OSS" );
 	driverComboBox->addItem( "PortAudio" );
+	driverComboBox->addItem( "SndioAudio" );
 #ifdef Q_OS_MACX
 	driverComboBox->addItem( "CoreAudio" );
 #endif
@@@@ -84,9 +85,12 @@@@ PreferencesDialog::PreferencesDialog(QWidget* parent)
 	else if ( sAudioDriver == "PortAudio" ) {
 		driverComboBox->setCurrentIndex(4);
 	}
-	else if ( sAudioDriver == "CoreAudio" ) {
+	else if ( sAudioDriver == "SndioAudio" ) {
 		driverComboBox->setCurrentIndex(5);
 	}
+	else if ( sAudioDriver == "CoreAudio" ) {
+		driverComboBox->setCurrentIndex(6);
+	}
 	else {
 		ERRORLOG( "Unknown audio driver from preferences [" + sAudioDriver + "]" );
 	}
@@@@ -95,6 +99,7 @@@@ PreferencesDialog::PreferencesDialog(QWidget* parent)
 	m_pMidiDriverComboBox->clear();
 	m_pMidiDriverComboBox->addItem( "ALSA" );
 	m_pMidiDriverComboBox->addItem( "PortMidi" );
+	m_pMidiDriverComboBox->addItem( "SndioMidi" );
 	m_pMidiDriverComboBox->addItem( "CoreMidi" );
 
 	if ( pPref->m_sMidiDriver == "ALSA" ) {
@@@@ -103,9 +108,12 @@@@ PreferencesDialog::PreferencesDialog(QWidget* parent)
 	else if ( pPref->m_sMidiDriver == "PortMidi" ) {
 		m_pMidiDriverComboBox->setCurrentIndex(1);
 	}
-	else if ( pPref->m_sMidiDriver == "CoreMidi" ) {
+	else if ( pPref->m_sMidiDriver == "SndioMidi" ) {
 		m_pMidiDriverComboBox->setCurrentIndex(2);
 	}
+	else if ( pPref->m_sMidiDriver == "CoreMidi" ) {
+		m_pMidiDriverComboBox->setCurrentIndex(3);
+	}
 	else {
 		ERRORLOG( "Unknown midi input from preferences [" + pPref->m_sMidiDriver + "]" );
 	}
@@@@ -297,6 +305,10 @@@@ void PreferencesDialog::on_okBtn_clicked()
 	else if (driverComboBox->currentText() == "PortAudio" ) {
 		pPref->m_sAudioDriver = "PortAudio";
 	}
+	else if (driverComboBox->currentText() == "SndioAudio" ) {
+		pPref->m_sAudioDriver = "SndioAudio";
+		pPref->m_sSndioDevice = m_pAudioDeviceTxt->text();
+	}
 	else if (driverComboBox->currentText() == "CoreAudio" ) {
 		pPref->m_sAudioDriver = "CoreAudio";
 	}
@@@@ -346,6 +358,9 @@@@ void PreferencesDialog::on_okBtn_clicked()
 	else if ( m_pMidiDriverComboBox->currentText() == "PortMidi" ) {
 		pPref->m_sMidiDriver = "PortMidi";
 	}
+	else if ( m_pMidiDriverComboBox->currentText() == "SndioMidi" ) {
+		pPref->m_sMidiDriver = "SndioMidi";
+	}
 	else if ( m_pMidiDriverComboBox->currentText() == "CoreMidi" ) {
 		pPref->m_sMidiDriver = "CoreMidi";
 	}
@@@@ -439,6 +454,11 @@@@ void PreferencesDialog::updateDriverInfo()
 	bPortAudio_support = true;
 	#endif
 
+	bool bSndio_support = false;
+	#ifdef SNDIO_SUPPORT
+	bSndio_support = true;
+	#endif
+
 	bool bCoreAudio_support = false;
 	#ifdef COREAUDIO_SUPPORT
 	bCoreAudio_support = true;
@@@@ -488,6 +508,19 @@@@ void PreferencesDialog::updateDriverInfo()
 		}
 		m_pAudioDeviceTxt->setEnabled(true);
 		m_pAudioDeviceTxt->setText( pPref->m_sAlsaAudioDevice );
+		bufferSizeSpinBox->setEnabled(true);
+		sampleRateComboBox->setEnabled(true);
+		trackOutputComboBox->setEnabled( false );
+		trackOutsCheckBox->setEnabled( false );
+		connectDefaultsCheckBox->setEnabled(false);
+	}
+	else if ( driverComboBox->currentText() == "SndioAudio" ) {
+		info += trUtf8("<b>sndio</b><br>audio driver");
+		if ( !bSndio_support ) {
+			info += trUtf8("<br><b><font color=\"red\">Not compiled</font></b>");
+		}
+		m_pAudioDeviceTxt->setEnabled(true);
+		m_pAudioDeviceTxt->setText( pPref->m_sSndioDevice );
 		bufferSizeSpinBox->setEnabled(true);
 		sampleRateComboBox->setEnabled(true);
 		trackOutputComboBox->setEnabled( false );
@
