head	1.6;
access;
symbols
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.8
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2013.02.04.16.20.53;	author brad;	state dead;
branches;
next	1.5;

1.5
date	2012.04.29.07.09.23;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.26.21.41.56;	author jakemsr;	state Exp;
branches;
next	1.3;

1.3
date	2008.07.09.02.07.36;	author jakemsr;	state Exp;
branches;
next	1.2;

1.2
date	2008.04.16.02.10.21;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.01.17.39.50;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Disable the FFmpeg support for Akode. Akode is unmaintained
bitrotting code and its getting in the way of updating FFmpeg.

ok sthen@@
@
text
@$OpenBSD: patch-akode_plugins_ffmpeg_decoder_ffmpeg_decoder_cpp,v 1.5 2012/04/29 07:09:23 ajacoutot Exp $
--- akode/plugins/ffmpeg_decoder/ffmpeg_decoder.cpp.orig	Thu Aug 10 14:37:20 2006
+++ akode/plugins/ffmpeg_decoder/ffmpeg_decoder.cpp	Sat Apr 28 23:59:11 2012
@@@@ -26,9 +26,11 @@@@
 #include "decoder.h"
 
 #include <assert.h>
-#include <ffmpeg/avcodec.h>
-#include <ffmpeg/avformat.h>
-#include <ffmpeg/avio.h>
+extern "C" {
+#include <libavcodec/avcodec.h>
+#include <libavformat/avformat.h>
+#include <libavformat/avio.h>
+}
 
 #include "ffmpeg_decoder.h"
 #include <iostream>
@@@@ -45,7 +47,7 @@@@ extern "C" {
         aKode::File *file = (aKode::File*)opaque;
         return file->write((char*)buf, size);
     }
-    static offset_t akode_seek(void* opaque, offset_t pos, int whence)
+    static int64_t akode_seek(void* opaque, int64_t pos, int whence)
     {
         aKode::File *file = (aKode::File*)opaque;
         return file->seek(pos, whence);
@@@@ -95,7 +97,8 @@@@ struct FFMPEGDecoder::private_data
     int retries;
 
     unsigned char file_buffer[FILE_BUFFER_SIZE];
-    char buffer[AVCODEC_MAX_AUDIO_FRAME_SIZE];
+    /* DECLARE_ALIGNED magic from ffplay.c */
+    DECLARE_ALIGNED(16,uint8_t,buffer)[(AVCODEC_MAX_AUDIO_FRAME_SIZE*3)/2];
     int buffer_size;
 };
 
@@@@ -200,10 +203,10 @@@@ bool FFMPEGDecoder::openFile() {
     d->audioStream = -1;
     d->videoStream = -1;
     for (int i = 0; i < d->ic->nb_streams; i++) {
-        if (d->ic->streams[i]->codec->codec_type == CODEC_TYPE_AUDIO)
+        if (d->ic->streams[i]->codec->codec_type == AVMEDIA_TYPE_AUDIO)
             d->audioStream = i;
         else
-        if (d->ic->streams[i]->codec->codec_type == CODEC_TYPE_VIDEO)
+        if (d->ic->streams[i]->codec->codec_type == AVMEDIA_TYPE_VIDEO)
             d->videoStream = i;
     }
     if (d->audioStream == -1)
@@@@ -313,10 +316,12 @@@@ bool FFMPEGDecoder::readFrame(AudioFrame* frame)
 
     assert(d->packet.stream_index == d->audioStream);
 
+    d->buffer_size = sizeof(d->buffer);
+
 retry:
-    int len = avcodec_decode_audio( d->ic->streams[d->audioStream]->codec,
-                                    (short*)d->buffer, &d->buffer_size,
-                                    d->packetData, d->packetSize );
+    int len = avcodec_decode_audio3( d->ic->streams[d->audioStream]->codec,
+                                    (int16_t*)d->buffer, &d->buffer_size,
+                                    &d->packet );
 
     if (len <= 0) {
         d->retries++;
@@@@ -349,7 +354,7 @@@@ retry:
             assert(false);
     }
     if (length == 0) return readFrame(frame);
-    std::cout << "akode: FFMPEG: Frame length: " << length << "\n";
+    // std::cout << "akode: FFMPEG: Frame length: " << length << "\n";
 
     if( d->packetSize <= 0 )
         av_free_packet( &d->packet );
@


1.5
log
@Update akode for newer FFmpeg API..
CODEC_TYPE_VIDEO == AVMEDIA_TYPE_VIDEO with the current snapshot of
FFmpeg, so no pkg change.

from Brad
@
text
@d1 1
a1 1
$OpenBSD: patch-akode_plugins_ffmpeg_decoder_ffmpeg_decoder_cpp,v 1.4 2010/05/26 21:41:56 jakemsr Exp $
@


1.4
log
@make it work with newer ffmpeg libs
@
text
@d1 3
a3 3
$OpenBSD: patch-akode_plugins_ffmpeg_decoder_ffmpeg_decoder_cpp,v 1.3 2008/07/09 02:07:36 jakemsr Exp $
--- akode/plugins/ffmpeg_decoder/ffmpeg_decoder.cpp.orig	Thu Aug 10 11:37:20 2006
+++ akode/plugins/ffmpeg_decoder/ffmpeg_decoder.cpp	Wed May 19 03:20:55 2010
d38 13
@


1.3
log
@
* FFmpeg headers moved
* FFmpeg LIB_DEPENDS/WANTLIB changes
* add @@bin markers in PLISTs
* bump PKGNAMEs

feedback/ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-akode_plugins_ffmpeg_decoder_ffmpeg_decoder_cpp,v 1.2 2008/04/16 02:10:21 jakemsr Exp $
d3 1
a3 1
+++ akode/plugins/ffmpeg_decoder/ffmpeg_decoder.cpp	Sat Jun 21 10:00:47 2008
d19 36
a54 1
@@@@ -349,7 +351,7 @@@@ retry:
@


1.2
log
@- fix automatic resampling
- disable the libsamplerate resampler, it clips and is horribly
inefficient
- fix WANTLIB
- stop ffmpeg decoder from spamming stdout
- enable jack output
@
text
@d1 1
a1 1
$OpenBSD: patch-akode_plugins_ffmpeg_decoder_ffmpeg_decoder_cpp,v 1.1 2007/10/01 17:39:50 jakemsr Exp $
d3 1
a3 1
+++ akode/plugins/ffmpeg_decoder/ffmpeg_decoder.cpp	Mon Mar 24 18:14:43 2008
d8 3
d12 3
a14 3
 #include <ffmpeg/avcodec.h>
 #include <ffmpeg/avformat.h>
 #include <ffmpeg/avio.h>
@


1.1
log
@build with ffmpeg and libsamplerate.

ok brad@@
@
text
@d1 3
a3 3
$OpenBSD$
--- akode/plugins/ffmpeg_decoder/ffmpeg_decoder.cpp.orig	Sun Sep 30 16:42:06 2007
+++ akode/plugins/ffmpeg_decoder/ffmpeg_decoder.cpp	Sun Sep 30 16:42:46 2007
d16 9
@

