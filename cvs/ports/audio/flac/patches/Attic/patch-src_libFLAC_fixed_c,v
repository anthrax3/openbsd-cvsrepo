head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2001.06.07.20.17.50;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2001.05.20.12.06.51;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to 0.10:
* both encoder and decoder are significantly faster
* flac now has gzip-like command-line usage (should be more intuitive)
* the -# options have been tweaked for efficiency; -5 is the new default
* flac now autodetects WAVE input
* flac now ignores (with warning) unsupported WAVE subchunks
* new -o and --delete-input-file options
* new SEEKTABLE metadata block for storing seek points (speeds up seeking)
@
text
@$OpenBSD: patch-src_libFLAC_fixed_c,v 1.1 2001/05/20 12:06:51 naddy Exp $
--- src/libFLAC/fixed.c.orig	Sun Apr  1 07:35:25 2001
+++ src/libFLAC/fixed.c	Sun May 20 13:42:24 2001
@@@@ -81,11 +81,11 @@@@ unsigned FLAC__fixed_compute_best_predic
 	residual_bits_per_sample[3] = (real)((data_len > 0) ? log(M_LN2 * (real)(int64)total_error_3  / (real) data_len) / M_LN2 : 0.0);
 	residual_bits_per_sample[4] = (real)((data_len > 0) ? log(M_LN2 * (real)(int64)total_error_4  / (real) data_len) / M_LN2 : 0.0);
 #else
-	residual_bits_per_sample[0] = (real)((data_len > 0) ? log(M_LN2 * (real)total_error_0  / (real) data_len) / M_LN2 : 0.0);
-	residual_bits_per_sample[1] = (real)((data_len > 0) ? log(M_LN2 * (real)total_error_1  / (real) data_len) / M_LN2 : 0.0);
-	residual_bits_per_sample[2] = (real)((data_len > 0) ? log(M_LN2 * (real)total_error_2  / (real) data_len) / M_LN2 : 0.0);
-	residual_bits_per_sample[3] = (real)((data_len > 0) ? log(M_LN2 * (real)total_error_3  / (real) data_len) / M_LN2 : 0.0);
-	residual_bits_per_sample[4] = (real)((data_len > 0) ? log(M_LN2 * (real)total_error_4  / (real) data_len) / M_LN2 : 0.0);
+	residual_bits_per_sample[0] = (real)((data_len > 0 && total_error_0 > 0) ? log(M_LN2 * (real)total_error_0  / (real) data_len) / M_LN2 : 0.0);
+	residual_bits_per_sample[1] = (real)((data_len > 0 && total_error_1 > 0) ? log(M_LN2 * (real)total_error_1  / (real) data_len) / M_LN2 : 0.0);
+	residual_bits_per_sample[2] = (real)((data_len > 0 && total_error_2 > 0) ? log(M_LN2 * (real)total_error_2  / (real) data_len) / M_LN2 : 0.0);
+	residual_bits_per_sample[3] = (real)((data_len > 0 && total_error_3 > 0) ? log(M_LN2 * (real)total_error_3  / (real) data_len) / M_LN2 : 0.0);
+	residual_bits_per_sample[4] = (real)((data_len > 0 && total_error_4 > 0) ? log(M_LN2 * (real)total_error_4  / (real) data_len) / M_LN2 : 0.0);
 #endif
 
 	return order;
@@@@ -152,7 +152,7 @@@@ unsigned FLAC__fixed_compute_best_predic
 
 void FLAC__fixed_compute_residual(const int32 data[], unsigned data_len, unsigned order, int32 residual[])
 {
-	unsigned i;
+	int i;
 
 	switch(order) {
 		case 0:
@@@@ -190,7 +190,7 @@@@ void FLAC__fixed_compute_residual(const 
 
 void FLAC__fixed_restore_signal(const int32 residual[], unsigned data_len, unsigned order, int32 data[])
 {
-	unsigned i;
+	int i;
 
 	switch(order) {
 		case 0:
@


1.1
log
@fix alpha; from Matt Zimmerman <mdz@@debian.org> on flac-dev
@
text
@d1 1
a1 1
$OpenBSD$
@

