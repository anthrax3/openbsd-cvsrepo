head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.26
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.22
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.24
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.20
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.18
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.16
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.14
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.12
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.10
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.1.1.1.0.22
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.20
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.18
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.16
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.14
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.12
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.10
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.8
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.6
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	niallo_20050308:1.1.1.1
	niallo:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2010.07.01.02.36.54;	author jakemsr;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.20.09.55.22;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.08.14.36.26;	author niallo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.03.08.14.36.26;	author niallo;	state Exp;
branches;
next	;


desc
@@


1.3
log
@convert to sndio(7), add @@bin makers
@
text
@$OpenBSD: patch-src_linux_main_linux_c,v 1.1.1.1 2005/03/08 14:36:26 niallo Exp $
--- src/linux/main_linux.c.orig	Sat May  1 16:53:54 2004
+++ src/linux/main_linux.c	Sun May  2 10:13:29 2010
@@@@ -15,11 +15,11 @@@@ UNIX systems */
 #include <termios.h>
 #include <unistd.h>
 
-#include <sys/ioctl.h>
-#include <sys/types.h>
-#include <sys/soundcard.h>
 #include <sys/stat.h>
+#include <signal.h>
 
+#include <sndio.h>
+
 #include "types.h"
 #include "nsf.h"
 
@@@@ -55,7 +55,7 @@@@ static int bits = 8;
 static int dataSize;
 static int bufferSize;
 static unsigned char *buffer = 0, *bufferPos = 0;
-static int audiofd;
+static struct sio_hdl *hdl;
 
 static int * plimit_frames = NULL;
 static int shm_id;
@@@@ -184,51 +184,13 @@@@ void handle_auto_calc(char * filename, int track, int 
 /* Open up the DSP, then drop the root permissions */
 static void open_hardware(const char *device)
 {
-   struct stat status;
-
    /* Open the file (with root permissions, if we have them) */
-   if(-1 == (audiofd = open(device, O_WRONLY, 0)))
+   if(NULL == (hdl = sio_open(device, SIO_PLAY, 0)))
    {
-      switch(errno)
-      {
-      case EBUSY:
-         printf("%s is busy.\n", device);
+         printf("Unable to open %s.\n", device);
          exit(1);
-      default:
-         printf("Unable to open %s.  Check the permissions.\n", device);
-         exit(1);
-      }
    }
 
-   /* For safety, we should check that device is, in fact, a device.
-      `nosefart -d /etc/passwd MegaMan2.nsf` wouldn't sound so pretty. */
-   if(-1 == fstat(audiofd, &status))
-   {
-      switch(errno)
-      {
-      case EFAULT:
-      case ENOMEM:
-         printf("Out of memory.\n");
-         exit(1);
-      case EBADF:
-      case ELOOP:
-      case EACCES:
-      default:
-         printf("Unable to stat %s.\n", device);
-         exit(1);
-      }
-   }
-   /* if it's not a char device and it's not /dev/dsp */
-   /* The second check is because when run with esddsp, /dev/dsp
-   doesn't show up as a char device. The original author (Matthew Conte) seems
-   to have thought that esddsp should work without this hack.  Is doing this 
-   bad? --Matthew Strait */
-   if( !S_ISCHR(status.st_mode) && strcmp("/dev/dsp", device))
-   {
-      printf("%s is not a character device.\n", device);
-      exit(1);
-   }
-
    /* Drop root permissions */
    if(geteuid() != getuid()) setuid(getuid());
 }
@@@@ -236,52 +198,38 @@@@ static void open_hardware(const char *device)
 /* Configure the DSP */
 static void init_hardware(void)
 {
-   int stereo = 0;
-   int param, retval, logDataSize;
-   int format = bits; /*AFMT_U8, AFMT_U16LE;*/
+   struct sio_par par;
+
    /* sound buffer */
    dataSize = freq / nsf->playback_rate;
 
-   /* Configure the DSP */
-   logDataSize = -1;
-   while((1 << ++logDataSize) < dataSize);
-   param = 0x10000 | logDataSize + 4;
-   retval = ioctl(audiofd, SNDCTL_DSP_SETFRAGMENT, &param);
-   if(-1 == retval)
+   sio_initpar(&par);
+   par.pchan = 1;
+   par.bits = bits;
+   par.sig = 0;
+   par.rate = freq;
+
+   if (!sio_setpar(hdl, &par) || !sio_getpar(hdl, &par))
    {
-      printf("Unable to set buffer size\n");
-   }
-   param = stereo;
-   retval = ioctl(audiofd, SNDCTL_DSP_STEREO, &param);
-   if(retval == -1 || param != stereo)
-   {
-      printf("Unable to set audio channels.\n");
+      printf("Error setting audio parameters.\n");
       exit(1);
    }
-   param = format;
-   retval = ioctl(audiofd, SNDCTL_DSP_SETFMT, &param);
-   if(retval == -1 || param != format)
+
+   if ((par.bits != bits) || (par.sig != 0) || (par.pchan != 1) ||
+     (abs (freq - par.rate) > (freq / 10)))
    {
-      printf("Unable to set audio format.\n");
-      printf("Wanted %i, got %i\n", format, param);
+      printf("Unable to set audio parameters as desired.\n");
       exit(1);
    }
-   param = freq;
-   retval = ioctl(audiofd, SNDCTL_DSP_SPEED, &param);
-   if(retval == -1 || (abs (param - freq) > (freq / 10)))
+
+   if (!sio_start(hdl))
    {
-      printf("Unable to set audio frequency.\n");
-      printf("Wanted %i, got %i\n", freq, param);
+      printf("Could not start sndio.\n");
       exit(1);
    }
-   retval = ioctl(audiofd, SNDCTL_DSP_GETBLKSIZE, &param);
-   if(-1 == retval)
-   {
-      printf("Unable to get buffer size\n");
-      exit(1);
-   }
+
    /* set up our data buffer */
-   bufferSize = param;
+   bufferSize = par.round * par.pchan * par.bps;
    buffer = malloc((bufferSize / dataSize + 1) * dataSize);
    bufferPos = buffer;
    memset(buffer, 0, bufferSize);
@@@@ -290,7 +238,7 @@@@ static void init_hardware(void)
 /* close what we've opened */
 static void close_hardware(void)
 {
-   close(audiofd);
+   sio_close(hdl);
    free(buffer);
    buffer = 0;
    bufferSize = 0;
@@@@ -305,7 +253,7 @@@@ static void show_help(void)
    printf("\t-h  \tHelp\n");
    printf("\t-v  \tVersion information\n");
    printf("\n\t-t x\tStart playing track x (default: 1)\n");
-   printf("\n\t-d x\tUse device x (default: /dev/dsp)\n");
+   printf("\n\t-d x\tUse device x (default: NULL)\n");
    printf("\t-s x\tPlay at x times the normal speed.\n");
    printf("\t-f x\tUse x sampling rate (default: 44100)\n");
    printf("\t-l x\tLimit total playing time to x seconds (0 = unlimited)\n");
@@@@ -538,7 +486,7 @@@@ static void play(char * filename, int track, int doaut
       if(bufferPos >= buffer + bufferSize)
       {
          if(frames >= starting_frame)
-           write(audiofd, buffer, bufferPos - buffer);
+           sio_write(hdl, buffer, bufferPos - buffer);
          bufferPos = buffer;
       }
 
@@@@ -565,7 +513,7 @@@@ static void close_nsf_file(void)
 /* HAS ROOT PERMISSIONS -- BE CAREFUL */
 int main(int argc, char **argv)
 {
-   char *device = "/dev/dsp";
+   char *device = NULL;
    char *filename;
    int track = 1;
    int done = 0;
@


1.2
log
@avoid lvalue cast
@
text
@d2 5
a6 3
--- src/linux/main_linux.c.orig	Sun May  2 01:53:54 2004
+++ src/linux/main_linux.c	Wed May 19 19:22:49 2010
@@@@ -17,8 +17,9 @@@@ UNIX systems */
d8 2
a9 2
 #include <sys/ioctl.h>
 #include <sys/types.h>
a10 1
+#include <soundcard.h>
d14 2
d18 55
a72 4
@@@@ -223,7 +224,7 @@@@ static void open_hardware(const char *device)
    doesn't show up as a char device. The original author (Matthew Conte) seems
    to have thought that esddsp should work without this hack.  Is doing this 
    bad? --Matthew Strait */
d74 33
a106 1
+   if( !S_ISCHR(status.st_mode) && strcmp("/dev/audio", device))
d108 8
a115 1
       printf("%s is not a character device.\n", device);
d117 47
a163 1
@@@@ -305,7 +306,7 @@@@ static void show_help(void)
d168 1
a168 1
+   printf("\n\t-d x\tUse device x (default: /dev/audio)\n");
d172 10
a181 1
@@@@ -565,7 +566,7 @@@@ static void close_nsf_file(void)
d186 1
a186 1
+   char *device = "/dev/audio";
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- src/linux/main_linux.c.orig	Fri Mar  4 10:57:15 2005
+++ src/linux/main_linux.c	Fri Mar  4 10:57:46 2005
d15 1
a15 1
@@@@ -223,7 +224,7 @@@@ static void open_hardware(const char *de
@


1.1.1.1
log
@audio/nosefart imported.
ok alek@@
@
text
@@
