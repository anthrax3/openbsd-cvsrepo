head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.22
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.20
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.16
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.18
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.14
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.12
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.1.1.0.2
	OPENBSD_5_0_BASE:1.1.1.1
	sebastia_2011_03_12:1.1.1.1
	sebastia:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2011.08.25.12.50.28;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.12.08.53.52;	author sebastia;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.03.12.08.53.52;	author sebastia;	state Exp;
branches;
next	;


desc
@@


1.2
log
@honor CFLAGS; ok sebastia@@
@
text
@$OpenBSD: patch-unix_configure,v 1.1.1.1 2011/03/12 08:53:52 sebastia Exp $

mostly sndio bits
don't clobber CFLAGS

--- unix/configure.orig	Wed Dec 14 12:29:39 2005
+++ unix/configure	Wed Aug 24 18:00:33 2011
@@@@ -308,7 +308,7 @@@@ ac_includes_default="\
 # include <unistd.h>
 #endif"
 
-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT CPP EGREP SHLIB_LD SHLIB_SUFFIX XINCLUDES TCL_INCLUDE_SPEC TCL_LIB_SPEC TK_LIB_SPEC TCL_SRC_DIR TK_SRC_DIR TK_LIBS SNACK_INSTALL_PATH SNACK_HINSTALL_PATH SNACK_LIB_SPEC AINC AFLAG ALIB AOBJ NISTINC NISTLIBS LIBNIST OGGINC OGGLIBS LIBOGG TCLAPI LD_SEARCH_FLAGS TCLVER STUBINITOBJ DOSTUBLIB SNACK_STUB_LIB_FLAG SNACK_VERSION LIBOBJS LTLIBOBJS'
+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT CPP EGREP SHLIB_LD SHLIB_SUFFIX XINCLUDES TCL_INCLUDE_SPEC TK_INCLUDE_SPEC TCL_LIB_SPEC TK_LIB_SPEC TCL_SRC_DIR TK_SRC_DIR TK_LIBS SNACK_INSTALL_PATH SNACK_HINSTALL_PATH SNACK_LIB_SPEC AINC AFLAG ALIB AOBJ NISTINC NISTLIBS LIBNIST OGGINC OGGLIBS LIBOGG TCLAPI LD_SEARCH_FLAGS TCLVER STUBINITOBJ DOSTUBLIB SNACK_STUB_LIB_FLAG SNACK_VERSION LIBOBJS LTLIBOBJS'
 ac_subst_files=''
 
 # Initialize some variables set by options.
@@@@ -1487,7 +1487,7 @@@@ if test "$TCL_SHARED_BUILD" = 0; then
 echo "$as_me: error: Tcl and Tk must be configured with the --enable-shared flag" >&2;}
    { (exit 1); exit 1; }; }
 fi
-CFLAGS=$TCL_SHLIB_CFLAGS
+CFLAGS="$CFLAGS $TCL_SHLIB_CFLAGS"
 LD_SEARCH_FLAGS=$TCL_LD_SEARCH_FLAGS
 SHLIB_LD=$TCL_SHLIB_LD
 SHLIB_SUFFIX=$TCL_SHLIB_SUFFIX
@@@@ -1554,11 +1554,16 @@@@ case $system in
 	AFLAG="-DOSS"
 	AOBJ="jkAudIO_oss.o"
 	;;
-    NetBSD*|OpenBSD-*)
+    NetBSD*)
 	AFLAG="-DOSS"
 	ALIB="-lossaudio"
 	AOBJ="jkAudIO_oss.o"
         ;;
+    OpenBSD-*)
+	AFLAG="-DSNDIO"
+	ALIB="-lsndio -lossaudio"
+	AOBJ="jkAudIO_sndio.o"
+	;;
     FreeBSD-*)
 	AFLAG="-DOSS"
 	ALIB=""
@@@@ -3729,6 +3734,7 @@@@ s,@@SHLIB_LD@@,$SHLIB_LD,;t t
 s,@@SHLIB_SUFFIX@@,$SHLIB_SUFFIX,;t t
 s,@@XINCLUDES@@,$XINCLUDES,;t t
 s,@@TCL_INCLUDE_SPEC@@,$TCL_INCLUDE_SPEC,;t t
+s,@@TK_INCLUDE_SPEC@@,$TK_INCLUDE_SPEC,;t t
 s,@@TCL_LIB_SPEC@@,$TCL_LIB_SPEC,;t t
 s,@@TK_LIB_SPEC@@,$TK_LIB_SPEC,;t t
 s,@@TCL_SRC_DIR@@,$TCL_SRC_DIR,;t t
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d4 1
d7 1
a7 1
+++ unix/configure	Mon Jan 17 13:55:12 2011
d17 9
@


1.1.1.1
log
@import snack: Tcl/Tk snack sound toolkit, and its python bindings

The Snack Sound Toolkit is designed to be used with a scripting language
such as Tcl/Tk or Python.  Snack has commands for basic sound handling,
such as playback, recording, file and socket I/O.  Snack also provides
primitives for sound visualization, e.g. waveforms and spectrograms.  It
was developed mainly to handle digital recordings of speech, but is just
as useful for general audio.  Snack has also successfully been applied
to other one-dimensional signals.

thanks to jakemsr@@ for making my unsuccessful attempt to port it to sndio working.
many comments from stu@@, landry@@, ajacoutot@@

finally OK ajacoutot@@


@
text
@@
