head	1.4;
access;
symbols
	OPENBSD_6_1:1.3.0.10
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.30
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.28
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.26
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.24
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.22
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.20
	OPENBSD_5_0:1.2.0.18
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.16
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.14
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.12
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.10
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	mp3gain_20060304:1.1.1.1
	mbalmer:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.09.17.16.45.29;	author sthen;	state dead;
branches;
next	1.3;
commitid	ajwl9qusctKt9zBd;

1.3
date	2014.09.16.12.02.05;	author sthen;	state Exp;
branches;
next	1.2;
commitid	bXMFRq4jSGfvjvo6;

1.2
date	2007.04.05.15.37.43;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.04.09.16.03;	author mbalmer;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.03.04.09.16.03;	author mbalmer;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove mp3gain, see http://www.openwall.com/lists/oss-security/2017/09/14/
Note that http://www.openwall.com/lists/oss-security/2017/09/14/12 has some
words in its defense; it might make sense to reintroduce if the forked mp3
decoder library is replaced.

link rgain.
@
text
@SHA256 (mp3gain-1_5_2-src.zip) = 263HpBqKO4fTohoZiXAc/nLSCQw+rQKws5ahmorPb8o=
SIZE (mp3gain-1_5_2-src.zip) = 129435
@


1.3
log
@update to mp3gain 1.5.2
@
text
@@


1.2
log
@base64 distinfo with SHA256
@
text
@d1 2
a2 5
MD5 (mp3gain-1_4_6-src.zip) = QycWc3Xc5bzpdiVympX9uQ==
RMD160 (mp3gain-1_4_6-src.zip) = 6eNAr+6EcG9DSyS+IpnBHmQWZuM=
SHA1 (mp3gain-1_4_6-src.zip) = cz7GQXIIcYHHScdDTXdLgEzi5Eg=
SHA256 (mp3gain-1_4_6-src.zip) = 4a2a6xhAPPnqVK+DDhNxUj1tU3O/7wGolk43Nd6vfU8=
SIZE (mp3gain-1_4_6-src.zip) = 111408
@


1.1
log
@Initial revision
@
text
@d1 4
a4 3
MD5 (mp3gain-1_4_6-src.zip) = 4327167375dce5bce97625729a95fdb9
RMD160 (mp3gain-1_4_6-src.zip) = e9e340afee84706f434b24be2299c11e641666e3
SHA1 (mp3gain-1_4_6-src.zip) = 733ec64172087181c749c7434d774b804ce2e448
@


1.1.1.1
log
@MP3Gain analyzes and adjusts mp3 files so that they have the same volume.
MP3Gain does not just do peak normalization, as many normalizers do.
Instead, it does some statistical analysis to determine how loud the file
actually sounds to the human ear. Also, the changes MP3Gain makes are
completely lossless. There is no quality lost in the change because the
program adjusts the mp3 file directly, without decoding and re-encoding.

From Chris Kuethe, <ckuethe@@ualberta.ca> (Maintainer)
@
text
@@
