head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.36
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.32
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.34
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.30
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.28
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.26
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.24
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.22
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.20
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.18
	OPENBSD_5_0:1.6.0.16
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.14
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.12
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.10
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.8
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.6
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.4
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.5.0.20
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.18
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.16
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.14
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.12
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.10
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.8
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.6
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.4
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.2
	OPENBSD_2_8_BASE:1.1.1.1
	espie:1.1.1.1
	a7r:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2007.10.27.15.01.53;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2003.01.23.23.45.24;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.21.21.53.02;	author naddy;	state dead;
branches;
next	1.3;

1.3
date	2002.09.16.13.35.52;	author lebel;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.25.11.19.25;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.21.16.07.22;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.09.21.16.07.22;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@sequential build of library/shared library unmesses parallel builds...
regen patches while there.
@
text
@$OpenBSD: patch-main_c,v 1.5 2003/01/23 23:45:24 espie Exp $
--- main.c.orig	Mon Mar 26 05:44:50 2001
+++ main.c	Sat Oct 27 16:57:49 2007
@@@@ -376,7 +376,7 @@@@ static void callback(long inpos, int function){
   int graph=30;
   char buffer[256];
   static long c_sector=0,v_sector=0;
-  static char dispcache[30]="                              ";
+  static char dispcache[31]="                              ";
   static int last=0;
   static long lasttime=0;
   long sector,osector=0;
@


1.5
log
@cdparanoia developers suck, this is stupid.
@
text
@d1 4
a4 4
$OpenBSD$
--- main.c.orig	Fri Jan 24 00:36:25 2003
+++ main.c	Fri Jan 24 00:38:12 2003
@@@@ -376,7 +376,7 @@@@ static void callback(long inpos, int fun
@


1.4
log
@drop getopt_long() workarounds
@
text
@d1 4
a4 71
$OpenBSD: patch-main_c,v 1.3 2002/09/16 13:35:52 lebel Exp $
--- main.c.orig	Mon Mar 26 05:44:50 2001
+++ main.c	Mon Sep 16 14:45:07 2002
@@@@ -49,7 +49,9 @@@@
 #include <unistd.h>
 #include <string.h>
 #include <fcntl.h>
+#ifdef GETOPT_LONG
 #include <getopt.h>
+#endif
 #include <errno.h>
 #include <math.h>
 #include <sys/time.h>
@@@@ -231,6 +233,7 @@@@ VERSION"\n"
 "  cdparanoia [options] <span> [outfile]\n\n"
 
 "OPTIONS:\n"
+#ifdef GETOPT_LONG
 "  -v --verbose                    : extra verbose operation\n"
 "  -q --quiet                      : quiet operation\n"
 "  -e --stderr-progress            : force output of progress information to\n"
@@@@ -276,6 +279,48 @@@@ VERSION"\n"
 "  -Z --disable-paranoia           : disable all paranoia checking\n"
 "  -Y --disable-extra-paranoia     : only do cdda2wav-style overlap checking\n"
 "  -X --abort-on-skip              : abort on imperfect reads/skips\n\n"
+#else
+"  -v         : extra verbose operation\n"
+"  -q         : quiet operation\n"
+"  -e         : force output of progress information to\n"
+"               stderr (for wrapper scripts)\n"
+"  -V         : print version info and quit\n"
+"  -Q         : autosense drive, query disc and quit\n"
+"  -B         : 'batch' mode (saves each track to a seperate file.\n"
+"  -s         : do an exhaustive search for drive\n"
+"  -h         : print help\n\n"
+
+"  -p         : output raw 16 bit PCM in host byte order\n"
+"  -r         : output raw 16 bit little-endian PCM\n"
+"  -R         : output raw 16 bit big-endian PCM\n"
+"  -w         : output as WAV file (default)\n"
+"  -f         : output as AIFF file\n"
+"  -a         : output as AIFF-C file\n"
+"  -i <file>  : output human readable ripping info to file\n\n"
+
+"  -c         : force treating drive as little endian\n"
+"  -C         : force treating drive as big endian\n"
+"  -n <n>     : force default number of sectors in read to n sectors\n"
+"  -o <n>     : force minimum overlap search during\n"
+"               verification to n sectors\n"
+"  -d <dev>   : use specified device; disallow autosense\n"
+"  -g <dev>   : use specified generic scsi device\n"
+"  -S <n>     : read from device at specified speed\n"
+"  -t <n>     : Add <n> sectors to the values reported\n"
+"               when addressing tracks. May be negative\n"
+"  -T         : Assume that the beginning offset of\n"
+"               track 1 as reported in the TOC will be\n"
+"               addressed as LBA 0.  Necessary for some\n"
+"               Toshiba drives to get track boundaries\n"
+"               correct\n"
+"  -z[=n]     : never accept any less than perfect\n"
+"               data reconstruction (don't allow 'V's)\n"
+"               but if [n] is given, skip after [n]\n"
+"               retries without progress.\n"
+"  -Z         : disable all paranoia checking\n"
+"  -Y         : only do cdda2wav-style overlap checking\n"
+"  -X         : abort on imperfect reads/skips\n\n"
+#endif
 
 "OUTPUT SMILIES:\n"
 "  :-)   Normal operation, low/no jitter\n"
@@@@ -376,7 +421,7 @@@@ static void callback(long inpos, int fun
d9 1
a9 1
+  static char dispcache[30 + 1]="                              ";
a12 30
@@@@ -587,6 +632,7 @@@@ static void callback(long inpos, int fun
 
 const char *optstring = "escCn:o:O:d:g:S:prRwafvqVQhZz::YXWBi:Tt:";
 
+#ifdef GETOPT_LONG
 struct option options [] = {
 	{"stderr-progress",no_argument,NULL,'e'},
 	{"search-for-drive",no_argument,NULL,'s'},
@@@@ -621,6 +667,7 @@@@ struct option options [] = {
 
 	{NULL,0,NULL,0}
 };
+#endif
 
 long blocking_write(int outf, char *buffer, long num){
   long words=0,temp;
@@@@ -673,7 +720,12 @@@@ int main(int argc,char *argv[]){
 
   atexit(cleanup);
 
-  while((c=getopt_long(argc,argv,optstring,options,&long_option_index))!=EOF){
+#ifdef GETOPT_LONG
+  while((c=getopt_long(argc,argv,optstring,options,&long_option_index))!=EOF)
+#else
+  while((c=getopt(argc,argv,optstring))!=EOF)
+#endif
+  {
     switch(c){
     case 'B':
       batch=1;
@


1.3
log
@update audio/cdparanoia to 3.a9.8;
from Bjorn Sandell <biorn@@dce.chalmers.se> and from NetBSD
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Repair part of the library. Reroute find_cooked to find_scsi since OpenBSD
always uses SCSI interface. Remove corresponding kludge :-P in main.c
@
text
@d1 3
a3 3
$OpenBSD: patch-main_c,v 1.1.1.1 2000/09/21 16:07:22 espie Exp $
--- main.c.orig	Tue Dec 14 09:18:44 1999
+++ main.c	Sat Aug 25 13:03:16 2001
d22 1
a22 1
@@@@ -274,6 +277,46 @@@@ VERSION"\n"
d60 1
a60 1
+"  -z         : never accept any less than perfect\n"
d62 2
d71 1
a71 1
@@@@ -374,7 +417,7 @@@@ static void callback(long inpos, int fun
d80 1
a80 1
@@@@ -585,6 +628,7 @@@@ static void callback(long inpos, int fun
d82 1
a82 1
 const char *optstring = "escCn:o:d:g:S:prRwafvqVQhZzYXWBi:Tt:";
d88 1
a88 1
@@@@ -618,6 +662,7 @@@@ struct option options [] = {
d96 1
a96 1
@@@@ -668,7 +713,12 @@@@ int main(int argc,char *argv[]){
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
d3 1
a3 1
+++ main.c	Tue Sep 19 16:45:23 2000
a107 14
@@@@ -797,6 +847,13 @@@@ int main(int argc,char *argv[]){
   report(VERSION);
 
   /* Query the cdrom/disc; we may need to override some settings */
+
+#if defined(__NetBSD__) || defined(__OpenBSD__)	/* XXX */
+  if (!force_generic_device)
+    force_generic_device = copystring("/dev/cd0c");
+  if (!force_cdrom_device)
+    force_cdrom_device=copystring(force_generic_device);
+#endif
 
   if(force_generic_device)
     d=cdda_identify_scsi(force_generic_device,force_cdrom_device,verbose,NULL);
@


1.1.1.1
log
@Based on the NetBSD port, initially brought to Open by
Alexander S . Guy.

Some minor packaging tweaks.

Uses cd0c by default, as this is the most likely place for a CD-Rom drive.
@
text
@@
