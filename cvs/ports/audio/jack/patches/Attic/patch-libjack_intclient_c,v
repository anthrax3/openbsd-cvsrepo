head	1.4;
access;
symbols
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_4:1.1.1.1.0.2
	OPENBSD_4_4_BASE:1.1.1.1
	jakemsr:1.1.1.1
	jakemsr-20080322:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2012.01.24.08.03.52;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2010.06.07.01.44.38;	author jakemsr;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.11.10.51.46;	author jakemsr;	state dead;
branches;
next	1.1;

1.1
date	2008.03.24.03.01.28;	author jakemsr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.03.24.03.01.28;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to jack-0.121.3.

README changes from rathov@@
tweaks and ok shadchin@@
@
text
@$OpenBSD: patch-libjack_intclient_c,v 1.3 2010/06/07 01:44:38 jakemsr Exp $
--- libjack/intclient.c.orig	Wed May 19 20:43:00 2010
+++ libjack/intclient.c	Wed May 19 20:45:49 2010
@@@@ -166,8 +166,9 @@@@ jack_internal_client_load (jack_client_t *client,
 			   jack_status_t *status, ...)
 {
     va_list ap;
+    jack_intclient_t res;
     va_start(ap, status);
-    jack_intclient_t res = jack_internal_client_load_aux(client, client_name, options, status, ap);
+    res = jack_internal_client_load_aux(client, client_name, options, status, ap);
     va_end(ap);
     return res;
 }
@


1.3
log
@* clean up sndio(7) driver
* update README.OpenBSD
* add patches to let it build on gcc2 archs (from Sebastian Reitenbach)
* disable audio(4) driver
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@- update to 0.116.1, mostly stability/reliability fixes
- add sndio backend

playback under aucat server is pretty solid.  for full-duplex,
starting aucat with 'aucat -l -b 2048' and jackd with just
'jackd -d sndio' seems to work best for me.  we want low latency
anyway, right ;)
@
text
@d1 5
a5 4
$OpenBSD: patch-libjack_intclient_c,v 1.1 2008/03/24 03:01:28 jakemsr Exp $
--- libjack/intclient.c.orig	Sun Mar 16 05:24:53 2008
+++ libjack/intclient.c	Sun Mar 16 05:25:45 2008
@@@@ -167,7 +167,7 @@@@ jack_internal_client_load (jack_client_t *client,
d7 2
a8 1
 	va_list ap;
d10 2
a11 2
-    jack_intclient_t* res = jack_internal_client_load_aux(client, client_name, options, status, ap);
+    jack_intclient_t res = jack_internal_client_load_aux(client, client_name, options, status, ap);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@
import jack (jack-audio-connection-kit)

JACK is a low-latency audio server, written for POSIX conformant
operating systems. It can connect a number of different applications to
an audio device, as well as allowing them to share audio between
themselves. Its clients can run in their own processes (ie. as normal
applications), or can they can run within the JACK server (ie. as a
"plugin").

JACK was designed from the ground up for professional audio work, and
its design focuses on two key areas: synchronous execution of all
clients, and low latency operation.

ok kili@@

@
text
@@
