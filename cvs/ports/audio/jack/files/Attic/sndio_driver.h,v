head	1.5;
access;
symbols
	OPENBSD_6_0:1.3.0.6
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.18
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.16
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2017.01.27.22.19.20;	author sthen;	state dead;
branches;
next	1.4;
commitid	O5YATwuKNZel55Yh;

1.4
date	2016.11.13.19.22.34;	author jca;	state Exp;
branches;
next	1.3;
commitid	P2tVKTVblSWgzQj7;

1.3
date	2015.05.05.19.45.19;	author sthen;	state Exp;
branches;
next	1.2;
commitid	fz8smaZvCGUbvSwh;

1.2
date	2010.06.07.01.44.38;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.11.10.51.46;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.5
log
@zap more zero-byte files, found by rsadowski, who also tested builds
without them present.
@
text
@@


1.4
log
@Update to jack-0.125.0

From David Carlier, input and ok danj@@ on a previous version.
@
text
@@


1.3
log
@update to JACK 0.124.1, from Eric Lalonde.
@
text
@a0 74
/*
 * Copyright (c) 2009 Jacob Meuser <jakemsr@@sdf.lonestar.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef __JACK_SNDIO_DRIVER_H__
#define __JACK_SNDIO_DRIVER_H__

#include <sys/types.h>
#include <pthread.h>
#include <semaphore.h>

#include <jack/types.h>
#include <jack/jslist.h>
#include <driver.h>
#include <jack/jack.h>

#define SNDIO_DRIVER_DEF_DEV		"default"
#define SNDIO_DRIVER_DEF_FS		44100
#define SNDIO_DRIVER_DEF_BLKSIZE	1024
#define SNDIO_DRIVER_DEF_NPERIODS	2
#define SNDIO_DRIVER_DEF_BITS		16
#define SNDIO_DRIVER_DEF_INS		2
#define SNDIO_DRIVER_DEF_OUTS		2

typedef jack_default_audio_sample_t jack_sample_t;

typedef struct _sndio_driver
{
	JACK_DRIVER_NT_DECL

	jack_nframes_t sample_rate;
	jack_nframes_t period_size;
	jack_nframes_t orig_period_size;
	unsigned int nperiods;
	int bits;
	unsigned int capture_channels;
	unsigned int playback_channels;
	jack_nframes_t sys_cap_latency;
	jack_nframes_t sys_play_latency;
	int ignorehwbuf;

	struct sio_hdl *hdl;
	char *dev;

	void *capbuf;
	size_t capbufsize;
	void *playbuf;
	size_t playbufsize;
	JSList *capture_ports;
	JSList *playback_ports;

	int sample_bytes;
	size_t pprime;

	int poll_timeout;
	jack_time_t poll_next;

	jack_client_t *client;

} sndio_driver_t;

#endif
@


1.2
log
@* clean up sndio(7) driver
* update README.OpenBSD
* add patches to let it build on gcc2 archs (from Sebastian Reitenbach)
* disable audio(4) driver
@
text
@d26 1
a26 1
#include <jack/driver.h>
@


1.1
log
@- update to 0.116.1, mostly stability/reliability fixes
- add sndio backend

playback under aucat server is pretty solid.  for full-duplex,
starting aucat with 'aucat -l -b 2048' and jackd with just
'jackd -d sndio' seems to work best for me.  we want low latency
anyway, right ;)
@
text
@d29 1
a29 1
#define SNDIO_DRIVER_DEF_DEV		"/dev/audio"
a46 1
	unsigned int orig_nperiods;
a47 1
	int sample_bytes;
d50 3
d54 1
a55 3
	struct sio_hdl *hdl;
	int format;
	int ignorehwbuf;
d57 1
d59 1
d61 5
a65 4
	size_t portbufsize;
	void *capbuf;
	void *playbuf;
	size_t buffer_fill;
a67 1
	jack_time_t poll_last;
a68 9
	float iodelay;

	long long realpos, playpos, cappos;

	jack_nframes_t sys_cap_latency;
	jack_nframes_t sys_play_latency;

	JSList *capture_ports;
	JSList *playback_ports;
a71 3
	int playback_drops;
	int capture_drops;

a73 1

a74 1

@

