head	1.5;
access;
symbols
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	gsm1_0_10:1.1.1.1
	angelos:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2000.09.16.15.24.35;	author brad;	state dead;
branches;
next	1.4;

1.4
date	99.06.19.05.26.54;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	98.02.26.20.34.33;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	98.02.12.20.21.08;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	97.12.05.02.07.59;	author angelos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.12.05.02.07.59;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.5
log
@use better filenames for patches
@
text
@--- Makefile.orig	Tue Jul  2 10:36:06 1996
+++ Makefile	Sat Jun 19 01:01:18 1999
@@@@ -7,11 +7,13 @@@@
 SASR	= -DSASR
 ######### Define SASR if >> is a signed arithmetic shift (-1 >> 1 == -1)
 
-MULHACK = -DUSE_FLOAT_MUL
+#MULHACK = -DUSE_FLOAT_MUL      # Don't define it for FreeBSD, cause SIGFPE
+MULHACK =
 ######### Define this if your host multiplies floats faster than integers,
 ######### e.g. on a SPARCstation.
 
-FAST	= -DFAST
+#FAST    = -DFAST
+FAST    =
 ######### Define together with USE_FLOAT_MUL to enable the GSM library's
 ######### approximation option for incorrect, but good-enough results.
 
@@@@ -43,8 +45,8 @@@@
 # CC		= /usr/lang/acc
 # CCFLAGS 	= -c -O
 
-CC		= gcc -ansi -pedantic
-CCFLAGS 	= -c -O2 -DNeedFunctionPrototypes=1
+#CC              = gcc -ansi -pedantic
+CCFLAGS         = -c -DNeedFunctionPrototypes=1
 
 LD 		= $(CC)
 
@@@@ -59,19 +61,19 @@@@
 ######### Includes needed by $(CC)
 
 # LDINC	= -L/usr/gnu/lib/gcc-2.1/gcc-lib/sparc-sun-sunos4.1.2/2.1
+LDINC = -L$(LIB)
 ######### Library paths needed by $(LD)
 
 # LDLIB	= -lgcc
 ######### Additional libraries needed by $(LD)
 
-
 # Where do you want to install libraries, binaries, a header file
 # and the manual pages?
 #
 # Leave INSTALL_ROOT empty (or just don't execute "make install") to
 # not install gsm and toast outside of this directory.
 
-INSTALL_ROOT	=
+INSTALL_ROOT    =       $(PREFIX)
 
 # Where do you want to install the gsm library, header file, and manpages?
 #
@@@@ -80,7 +82,7 @@@@
 
 GSM_INSTALL_ROOT = $(INSTALL_ROOT)
 GSM_INSTALL_LIB = $(GSM_INSTALL_ROOT)/lib
-GSM_INSTALL_INC = $(GSM_INSTALL_ROOT)/inc
+GSM_INSTALL_INC = $(GSM_INSTALL_ROOT)/include
 GSM_INSTALL_MAN = $(GSM_INSTALL_ROOT)/man/man3
 
 
@@@@ -106,6 +108,7 @@@@
 COMPRESSFLAGS 	= 
 # RANLIB 	= true
 RANLIB	 	= ranlib
+RM		= rm -f
 
 #
 #    You shouldn't have to configure below this line if you're porting.
@@@@ -129,18 +132,25 @@@@
 # DEBUG	= -DNDEBUG
 ######### Remove -DNDEBUG to enable assertions.
 
-CFLAGS	= $(CCFLAGS) $(SASR) $(DEBUG) $(MULHACK) $(FAST) $(LTP_CUT) \
+CFLAGS += $(CCFLAGS) $(SASR) $(DEBUG) $(MULHACK) $(FAST) $(LTP_CUT) \
 	$(WAV49) $(CCINC) -I$(INC)
 ######### It's $(CC) $(CFLAGS)
 
 LFLAGS	= $(LDFLAGS) $(LDINC)
 ######### It's $(LD) $(LFLAGS)
 
+.SUFFIXES: .c .so .o
 
 # Targets
 
 LIBGSM	= $(LIB)/libgsm.a
-
+.if defined(NO_SHARED_LIBS)
+LIBGSMSO =
+INSTALLED_LIBGSMSO =
+.else
+LIBGSMSO = $(LIB)/libgsm.so.1.0
+INSTALLED_LIBGSMSO = $(GSM_INSTALL_LIB)/libgsm.so.1.0
+.endif
 TOAST	= $(BIN)/toast
 UNTOAST	= $(BIN)/untoast
 TCAT	= $(BIN)/tcat
@@@@ -258,6 +268,7 @@@@
 
 GSM_INSTALL_TARGETS =	\
 		$(GSM_INSTALL_LIB)/libgsm.a		\
+		$(INSTALLED_LIBGSMSO)			\
 		$(GSM_INSTALL_INC)/gsm.h		\
 		$(GSM_INSTALL_MAN)/gsm.3		\
 		$(GSM_INSTALL_MAN)/gsm_explode.3	\
@@@@ -277,9 +288,12 @@@@
 		$(CC) $(CFLAGS) $?
 		@@-mv `$(BASENAME) $@@` $@@ > /dev/null 2>&1
 
+.c.so:
+		${CC} -fpic -DPIC ${CFLAGS} -c ${.IMPSRC} -o ${.TARGET}
+
 # Target rules
 
-all:		$(LIBGSM) $(TOAST) $(TCAT) $(UNTOAST)
+all:		$(LIBGSM) $(LIBGSMSO) $(TOAST) $(TCAT) $(UNTOAST)
 		@@-echo $(ROOT): Done.
 
 tst:		$(TST)/lin2cod $(TST)/cod2lin $(TOAST) $(TST)/test-result
@@@@ -299,8 +313,11 @@@@
 
 # The basic API: libgsm
 
+$(LIBGSMSO):	$(LIB) $(GSM_OBJECTS:S/o$/so/g)
+		ld -Bshareable -Bforcearchive -o $@@ $(GSM_OBJECTS:S/o$/so/g)
+
 $(LIBGSM):	$(LIB) $(GSM_OBJECTS)
-		-rm $(RMFLAGS) $(LIBGSM)
+		$(RM) $(RMFLAGS) $(LIBGSM)
 		$(AR) $(ARFLAGS) $(LIBGSM) $(GSM_OBJECTS)
 		$(RANLIB) $(LIBGSM)
 
@@@@ -308,14 +325,14 @@@@
 # Toast, Untoast and Tcat -- the compress-like frontends to gsm.
 
 $(TOAST):	$(BIN) $(TOAST_OBJECTS) $(LIBGSM)
-		$(LD) $(LFLAGS) -o $(TOAST) $(TOAST_OBJECTS) $(LIBGSM) $(LDLIB)
+		$(LD) $(LFLAGS) -o $(TOAST) $(TOAST_OBJECTS) -lgsm $(LDLIB)
 
 $(UNTOAST):	$(BIN) $(TOAST)
-		-rm $(RMFLAGS) $(UNTOAST)
+		$(RM) $(RMFLAGS) $(UNTOAST)
 		$(LN) $(TOAST) $(UNTOAST)
 
 $(TCAT):	$(BIN) $(TOAST)
-		-rm $(RMFLAGS) $(TCAT)
+		$(RM) $(RMFLAGS) $(TCAT)
 		$(LN) $(TOAST) $(TCAT)
 
 
@@@@ -342,59 +359,65 @@@@
 
 gsmuninstall:
 		-if [ x"$(GSM_INSTALL_ROOT)" != x ] ; then	\
-			rm $(RMFLAGS) $(GSM_INSTALL_TARGETS) ;	\
+			$(RM) $(RMFLAGS) $(GSM_INSTALL_TARGETS) ;	\
 		fi
 
 toastuninstall:
 		-if [ x"$(TOAST_INSTALL_ROOT)" != x ] ; then 	\
-			rm $(RMFLAGS) $(TOAST_INSTALL_TARGETS);	\
+			$(RM) $(RMFLAGS) $(TOAST_INSTALL_TARGETS);	\
 		fi
 
 $(TOAST_INSTALL_BIN)/toast:	$(TOAST)
-		-rm $@@
+		$(RM) $@@
 		cp $(TOAST) $@@
 		chmod 755 $@@
 
 $(TOAST_INSTALL_BIN)/untoast:	$(TOAST_INSTALL_BIN)/toast
-		-rm $@@
+		$(RM) $@@
 		ln $? $@@
 
 $(TOAST_INSTALL_BIN)/tcat:	$(TOAST_INSTALL_BIN)/toast
-		-rm $@@
+		$(RM) $@@
 		ln $? $@@
 
 $(TOAST_INSTALL_MAN)/toast.1:	$(MAN)/toast.1
-		-rm $@@
+		$(RM) $@@
 		cp $? $@@
 		chmod 444 $@@
 
 $(GSM_INSTALL_MAN)/gsm.3:	$(MAN)/gsm.3
-		-rm $@@
+		$(RM) $@@
 		cp $? $@@
 		chmod 444 $@@
 
 $(GSM_INSTALL_MAN)/gsm_option.3:	$(MAN)/gsm_option.3
-		-rm $@@
+		$(RM) $@@
 		cp $? $@@
 		chmod 444 $@@
 
 $(GSM_INSTALL_MAN)/gsm_explode.3:	$(MAN)/gsm_explode.3
-		-rm $@@
+		$(RM) $@@
 		cp $? $@@
 		chmod 444 $@@
 
 $(GSM_INSTALL_MAN)/gsm_print.3:	$(MAN)/gsm_print.3
-		-rm $@@
+		$(RM) $@@
 		cp $? $@@
 		chmod 444 $@@
 
 $(GSM_INSTALL_INC)/gsm.h:	$(INC)/gsm.h
-		-rm $@@
+		$(RM) $@@
 		cp $? $@@
 		chmod 444 $@@
 
 $(GSM_INSTALL_LIB)/libgsm.a:	$(LIBGSM)
-		-rm $@@
+		$(RM) $@@
+		cp $? $@@
+		chmod 444 $@@
+		$(RANLIB) $@@
+
+$(INSTALLED_LIBGSMSO):		$(LIBGSMSO)
+		$(RM) $@@
 		cp $? $@@
 		chmod 444 $@@
 
@@@@ -416,16 +439,16 @@@@
 		@@-echo uninstall: Done.
 
 semi-clean:
-		-rm $(RMFLAGS)  */*.o			\
+		$(RM) $(RMFLAGS)  */*.o			\
 			$(TST)/lin2cod $(TST)/lin2txt	\
 			$(TST)/cod2lin $(TST)/cod2txt	\
 			$(TST)/gsm2cod 			\
 			$(TST)/*.*.*
 		-$(FIND) . \( -name core -o -name foo \) \
-			-print | xargs rm $(RMFLAGS)
+			-print | xargs $(RM) $(RMFLAGS)
 
 clean:	semi-clean
-		-rm $(RMFLAGS) $(LIBGSM) $(ADDTST)/add		\
+		$(RM) $(RMFLAGS) $(LIBGSM) $(ADDTST)/add \
 			$(TOAST) $(TCAT) $(UNTOAST)	\
 			$(ROOT)/gsm-1.0.tar.Z
 
@


1.4
log
@- quiet down rm
- change from hard coded check for Alpha to using NO_SHARED_LIBS define
- really use $(PREFIX) instead of hard coding it to /usr/local
@
text
@@


1.3
log
@Install links to man page for untoast and tcat.
Fix makefile so shared library is installed (except for alpha).
Change packing list to clean up everything when package deleted.
@
text
@d1 2
a2 2
--- Makefile.orig	Tue Jul  2 07:36:06 1996
+++ Makefile	Thu Feb 26 12:11:00 1998
d30 1
a30 1
@@@@ -59,11 +61,13 @@@@
d40 1
a40 2
+PREFIX= /usr/local
 
d43 1
a43 1
@@@@ -71,7 +75,7 @@@@
d52 1
a52 1
@@@@ -80,7 +84,7 @@@@
d61 9
a69 1
@@@@ -129,18 +133,25 @@@@
d87 1
a87 1
+.if (${MACHINE_ARCH} == "alpha")
d97 1
a97 1
@@@@ -258,6 +269,7 @@@@
d105 1
a105 1
@@@@ -277,9 +289,12 @@@@
d115 1
a115 1
+all:            $(LIBGSM) $(LIBGSMSO) $(TOAST) $(TCAT) $(UNTOAST)
d119 1
a119 1
@@@@ -299,6 +314,9 @@@@
d124 1
a124 1
+		ld -Bshareable -o $@@ $(GSM_OBJECTS:S/o$/so/g)
d127 2
a128 1
 		-rm $(RMFLAGS) $(LIBGSM)
d130 3
a132 1
@@@@ -308,7 +326,7 @@@@
d140 74
a213 2
 		-rm $(RMFLAGS) $(UNTOAST)
@@@@ -394,6 +412,12 @@@@
d217 2
a218 1
+		-rm $@@
d221 1
a221 1
+		ranlib $@@
d224 1
a224 1
 		-rm $@@
d227 21
@


1.2
log
@Unbreak this port for alpha
@
text
@d1 2
a2 2
--- Makefile.orig	Tue Jul  2 16:36:06 1996
+++ Makefile	Wed Feb 11 21:43:14 1998
d80 1
a80 1
+.if ${MACHINE} == "alpha"
d82 1
a82 1
+INTALLED_LIBGSMSO =
d85 1
a85 1
+INTALLED_LIBGSMSO = $(GSM_INSTALL_LIB)/$(LIBGSMSO)
@


1.1
log
@Initial revision
@
text
@d1 143
a143 206
*** Makefile.orig	Tue Jul  2 18:36:06 1996
--- Makefile	Fri Oct 25 17:15:42 1996
***************
*** 7,17 ****
  SASR	= -DSASR
  ######### Define SASR if >> is a signed arithmetic shift (-1 >> 1 == -1)
  
! MULHACK = -DUSE_FLOAT_MUL
  ######### Define this if your host multiplies floats faster than integers,
  ######### e.g. on a SPARCstation.
  
! FAST	= -DFAST
  ######### Define together with USE_FLOAT_MUL to enable the GSM library's
  ######### approximation option for incorrect, but good-enough results.
  
--- 7,19 ----
  SASR	= -DSASR
  ######### Define SASR if >> is a signed arithmetic shift (-1 >> 1 == -1)
  
! #MULHACK = -DUSE_FLOAT_MUL      # Don't define it for FreeBSD, cause SIGFPE
! MULHACK =
  ######### Define this if your host multiplies floats faster than integers,
  ######### e.g. on a SPARCstation.
  
! #FAST    = -DFAST
! FAST    =
  ######### Define together with USE_FLOAT_MUL to enable the GSM library's
  ######### approximation option for incorrect, but good-enough results.
  
***************
*** 43,50 ****
  # CC		= /usr/lang/acc
  # CCFLAGS 	= -c -O
  
! CC		= gcc -ansi -pedantic
! CCFLAGS 	= -c -O2 -DNeedFunctionPrototypes=1
  
  LD 		= $(CC)
  
--- 45,52 ----
  # CC		= /usr/lang/acc
  # CCFLAGS 	= -c -O
  
! #CC              = gcc -ansi -pedantic
! CCFLAGS         = -c -DNeedFunctionPrototypes=1
  
  LD 		= $(CC)
  
***************
*** 59,69 ****
--- 61,73 ----
  ######### Includes needed by $(CC)
  
  # LDINC	= -L/usr/gnu/lib/gcc-2.1/gcc-lib/sparc-sun-sunos4.1.2/2.1
+ LDINC = -L$(LIB)
  ######### Library paths needed by $(LD)
  
  # LDLIB	= -lgcc
  ######### Additional libraries needed by $(LD)
  
+ PREFIX= /usr/local
  
  # Where do you want to install libraries, binaries, a header file
  # and the manual pages?
***************
*** 71,77 ****
  # Leave INSTALL_ROOT empty (or just don't execute "make install") to
  # not install gsm and toast outside of this directory.
  
! INSTALL_ROOT	=
  
  # Where do you want to install the gsm library, header file, and manpages?
  #
--- 75,81 ----
  # Leave INSTALL_ROOT empty (or just don't execute "make install") to
  # not install gsm and toast outside of this directory.
  
! INSTALL_ROOT    =       $(PREFIX)
  
  # Where do you want to install the gsm library, header file, and manpages?
  #
***************
*** 80,86 ****
  
  GSM_INSTALL_ROOT = $(INSTALL_ROOT)
  GSM_INSTALL_LIB = $(GSM_INSTALL_ROOT)/lib
! GSM_INSTALL_INC = $(GSM_INSTALL_ROOT)/inc
  GSM_INSTALL_MAN = $(GSM_INSTALL_ROOT)/man/man3
  
  
--- 84,90 ----
  
  GSM_INSTALL_ROOT = $(INSTALL_ROOT)
  GSM_INSTALL_LIB = $(GSM_INSTALL_ROOT)/lib
! GSM_INSTALL_INC = $(GSM_INSTALL_ROOT)/include
  GSM_INSTALL_MAN = $(GSM_INSTALL_ROOT)/man/man3
  
  
***************
*** 129,141 ****
  # DEBUG	= -DNDEBUG
  ######### Remove -DNDEBUG to enable assertions.
  
! CFLAGS	= $(CCFLAGS) $(SASR) $(DEBUG) $(MULHACK) $(FAST) $(LTP_CUT) \
  	$(WAV49) $(CCINC) -I$(INC)
  ######### It's $(CC) $(CFLAGS)
  
  LFLAGS	= $(LDFLAGS) $(LDINC)
  ######### It's $(LD) $(LFLAGS)
  
  
  # Targets
  
--- 133,146 ----
  # DEBUG	= -DNDEBUG
  ######### Remove -DNDEBUG to enable assertions.
  
! CFLAGS += $(CCFLAGS) $(SASR) $(DEBUG) $(MULHACK) $(FAST) $(LTP_CUT) \
  	$(WAV49) $(CCINC) -I$(INC)
  ######### It's $(CC) $(CFLAGS)
  
  LFLAGS	= $(LDFLAGS) $(LDINC)
  ######### It's $(LD) $(LFLAGS)
  
+ .SUFFIXES: .c .so .o
  
  # Targets
  
***************
*** 258,263 ****
--- 263,269 ----
  
  GSM_INSTALL_TARGETS =	\
  		$(GSM_INSTALL_LIB)/libgsm.a		\
+ 		$(GSM_INSTALL_LIB)/libgsm.so.1.0.10     \
  		$(GSM_INSTALL_INC)/gsm.h		\
  		$(GSM_INSTALL_MAN)/gsm.3		\
  		$(GSM_INSTALL_MAN)/gsm_explode.3	\
***************
*** 277,285 ****
  		$(CC) $(CFLAGS) $?
  		@@-mv `$(BASENAME) $@@` $@@ > /dev/null 2>&1
  
  # Target rules
  
! all:		$(LIBGSM) $(TOAST) $(TCAT) $(UNTOAST)
  		@@-echo $(ROOT): Done.
  
  tst:		$(TST)/lin2cod $(TST)/cod2lin $(TOAST) $(TST)/test-result
--- 283,294 ----
  		$(CC) $(CFLAGS) $?
  		@@-mv `$(BASENAME) $@@` $@@ > /dev/null 2>&1
  
+ .c.so:
+ 		${CC} -fpic -DPIC ${CFLAGS} -c ${.IMPSRC} -o ${.TARGET}
+ 
  # Target rules
  
! all:            $(LIBGSM) $(LIB)/libgsm.so.1.0.10 $(TOAST) $(TCAT) $(UNTOAST)
  		@@-echo $(ROOT): Done.
  
  tst:		$(TST)/lin2cod $(TST)/cod2lin $(TOAST) $(TST)/test-result
***************
*** 299,304 ****
--- 308,316 ----
  
  # The basic API: libgsm
  
+ $(LIB)/libgsm.so.1.0.10: $(LIB) $(GSM_OBJECTS:S/o$/so/g)
+ 		ld -Bshareable -o $@@ $(GSM_OBJECTS:S/o$/so/g)
+ 
  $(LIBGSM):	$(LIB) $(GSM_OBJECTS)
  		-rm $(RMFLAGS) $(LIBGSM)
  		$(AR) $(ARFLAGS) $(LIBGSM) $(GSM_OBJECTS)
***************
*** 308,314 ****
  # Toast, Untoast and Tcat -- the compress-like frontends to gsm.
  
  $(TOAST):	$(BIN) $(TOAST_OBJECTS) $(LIBGSM)
! 		$(LD) $(LFLAGS) -o $(TOAST) $(TOAST_OBJECTS) $(LIBGSM) $(LDLIB)
  
  $(UNTOAST):	$(BIN) $(TOAST)
  		-rm $(RMFLAGS) $(UNTOAST)
--- 320,326 ----
  # Toast, Untoast and Tcat -- the compress-like frontends to gsm.
  
  $(TOAST):	$(BIN) $(TOAST_OBJECTS) $(LIBGSM)
! 		$(LD) $(LFLAGS) -o $(TOAST) $(TOAST_OBJECTS) -lgsm $(LDLIB)
  
  $(UNTOAST):	$(BIN) $(TOAST)
  		-rm $(RMFLAGS) $(UNTOAST)
***************
*** 394,399 ****
--- 406,417 ----
  		chmod 444 $@@
  
  $(GSM_INSTALL_LIB)/libgsm.a:	$(LIBGSM)
+ 		-rm $@@
+ 		cp $? $@@
+ 		chmod 444 $@@
+ 		ranlib $@@
+ 
+ $(GSM_INSTALL_LIB)/libgsm.so.1.0.10:    $(LIB)/libgsm.so.1.0.10
  		-rm $@@
  		cp $? $@@
  		chmod 444 $@@
@


1.1.1.1
log
@Add gsm port.
@
text
@@

