head	1.4;
access;
symbols
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	libao_0_6_0:1.1.1.1
	libao:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2001.07.17.15.23.35;	author naddy;	state dead;
branches;
next	1.3;

1.3
date	2001.06.30.13.16.41;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.17.23.45.47;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.14.01.54.09;	author todd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.14.01.54.09;	author todd;	state Exp;
branches;
next	;


desc
@@


1.4
log
@various cleanups, reduce dependencies
automake die die die!
@
text
@$OpenBSD: patch-configure_in,v 1.3 2001/06/30 13:16:41 naddy Exp $
--- configure.in.orig	Mon Jun 18 03:02:46 2001
+++ configure.in	Sat Jun 30 13:16:26 2001
@@@@ -45,9 +45,9 @@@@ if test -z "$GCC"; then
                 CFLAGS="-xO4 -fast -w -fsimple -native -xcg92"
                 PROFILE="-v -xpg -g -xO4 -fast -native -fsimple -xcg92 -Dsuncc" ;;
         *)
-                DEBUG="-g"
-                CFLAGS="-O"
-                PROFILE="-g -p" ;;
+                DEBUG="$CFLAGS -g"
+                CFLAGS="$CFLAGS"
+                PROFILE="$CFLAGS -g -p" ;;
         esac
 else
 
@@@@ -61,9 +61,9 @@@@ else
                 CFLAGS="-O20 -ffast-math -D__NO_MATH_INLINES -fsigned-char -mv8"
                 PROFILE="-pg -g -O20 -D__NO_MATH_INLINES -fsigned-char -mv8" ;;
         *)
-                DEBUG="-g -Wall -D__NO_MATH_INLINES -fsigned-char"
-                CFLAGS="-O20 -D__NO_MATH_INLINES -fsigned-char"
-                PROFILE="-O20 -g -pg -D__NO_MATH_INLINES -fsigned-char" ;;
+                DEBUG="$CFLAGS -g -Wall -fsigned-char"
+                CFLAGS="$CFLAGS -fsigned-char"
+                PROFILE="$CFLAGS -g -pg -fsigned-char" ;;
         esac
 fi
 CFLAGS="$CFLAGS $cflags_save"
@


1.3
log
@Update to 0.7.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure_in,v 1.2 2001/03/17 23:45:47 naddy Exp $
@


1.2
log
@Remove OSS plug-in and replace with "sun" one for our native audio API.
@
text
@d1 4
a4 4
$OpenBSD$
--- configure.in.orig	Sat Feb 24 02:31:45 2001
+++ configure.in	Sat Mar 17 18:45:41 2001
@@@@ -43,9 +43,9 @@@@ if test -z "$GCC"; then
d17 1
a17 1
@@@@ -59,9 +59,9 @@@@ else
d29 1
a29 19
 
@@@@ -133,6 +133,11 @@@@ else
 fi
 AC_SUBST(ALSA_LIBS)
 
+dnl Check for Sun audio
+
+AC_CHECK_HEADERS(sys/audioio.h)
+AM_CONDITIONAL(HAVE_SUN_AUDIO,test "${ac_cv_header_sys_audioio_h}" = yes)
+
 dnl Check for aRts
 
 AC_PATH_PROG(ARTSC_CONFIG, artsc-config)
@@@@ -160,4 +165,4 @@@@ AM_CONDITIONAL(HAVE_SOLARIS,test "x$have
 
 CFLAGS="$CFLAGS -DAO_PLUGIN_PATH=\\\"$plugindir\\\""
 
-AC_OUTPUT(Makefile src/Makefile doc/Makefile include/Makefile include/ao/Makefile include/ao/os_types.h src/plugins/Makefile src/plugins/esd/Makefile src/plugins/oss/Makefile src/plugins/alsa/Makefile src/plugins/arts/Makefile debian/Makefile)
+AC_OUTPUT(Makefile src/Makefile doc/Makefile include/Makefile include/ao/Makefile include/ao/os_types.h src/plugins/Makefile src/plugins/esd/Makefile src/plugins/oss/Makefile src/plugins/alsa/Makefile src/plugins/arts/Makefile src/plugins/sun/Makefile debian/Makefile)
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
+++ configure.in	Tue Mar 13 02:29:46 2001
d30 3
a32 1
@@@@ -117,9 +117,10 @@@@ AM_CONDITIONAL(HAVE_ESD,test "x$have_esd
d34 6
a39 1
 dnl Check for OSS
d41 2
a42 5
+AC_CHECK_HEADERS(soundcard.h)
 AC_CHECK_HEADERS(sys/soundcard.h)
 AC_CHECK_HEADERS(machine/soundcard.h)
-AM_CONDITIONAL(HAVE_OSS,test "${ac_cv_header_sys_soundcard_h}" = "yes" || test "${ac_cv_header_machine_soundcard_h}" = "yes")
+AM_CONDITIONAL(HAVE_OSS,test "${ac_cv_header_soundcard_h}" = "yes" || "${ac_cv_header_sys_soundcard_h}" = "yes" || test "${ac_cv_header_machine_soundcard_h}" = "yes")
d44 1
a44 1
 dnl Check for ALSA
d46 2
@


1.1.1.1
log
@Libao is a cross-platform audio library that allows programs to output
audio using a simple API on a wide variety of platforms.  It currently
supports:
.   * Null output
.   * WAV files
.   * OSS (Open Sound System)
.   * ESD (ESounD or Enlighten Sound Daemon)
.   * ALSA (Advanced Linux Sound Architecture)
.   * Solaris (untested)
.   * IRIX (untested)

.. thanks to naddy@@ for beating oss into shape!
@
text
@@
