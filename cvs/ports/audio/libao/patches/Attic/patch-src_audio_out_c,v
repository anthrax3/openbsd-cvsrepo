head	1.4;
access;
symbols
	OPENBSD_2_9_TRACKING_SWITCH:1.3
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	libao_0_6_0:1.1.1.1
	libao:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2001.08.20.21.53.56;	author naddy;	state dead;
branches;
next	1.3;

1.3
date	2001.07.22.00.12.55;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.30.13.16.42;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.14.01.54.09;	author todd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.14.01.54.09;	author todd;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update Ogg Vorbis to 1.0rc2.
Adds channel coupling.
Miscellaneous changes to libao and vorbis-tools.
@
text
@$OpenBSD: patch-src_audio_out_c,v 1.3 2001/07/22 00:12:55 naddy Exp $
--- src/audio_out.c.orig	Sun May 13 05:30:40 2001
+++ src/audio_out.c	Sat Jun 30 13:16:26 2001
@@@@ -65,7 +65,7 @@@@ driver_tree_t *_get_plugin(char *plugin_
 	driver_tree_t *dt;
 	void *handle;
 	
-	handle = dlopen(plugin_file, RTLD_NOW);
+	handle = dlopen(plugin_file, RTLD_LAZY);
 	if (handle) {
 		dt = (driver_tree_t *)malloc(sizeof(driver_tree_t));
 		if (!dt) return NULL;
@@@@ -78,6 +78,9 @@@@ driver_tree_t *_get_plugin(char *plugin_
 			return NULL;
 		}
 
+#ifndef __ELF__
+#define dlsym(h,s) dlsym(h, "_" s)
+#endif
 		dt->functions->get_driver_info = dlsym(dt->handle, "plugin_get_driver_info");
 		if (dlerror()) { free(dt->functions); free(dt); return NULL; }
 		dt->functions->open = dlsym(dt->handle, "plugin_open");
@


1.3
log
@- change from flavors to multi-package; guided by espie@@
- simplify: switch to unversioned modules
@
text
@d1 1
a1 1
$OpenBSD: patch-src_audio_out_c,v 1.2 2001/06/30 13:16:42 naddy Exp $
@


1.2
log
@Update to 0.7.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_audio_out_c,v 1.1.1.1 2001/03/14 01:54:09 todd Exp $
a22 9
@@@@ -138,7 +141,7 @@@@ void ao_initialize(void)
 		if (plugindir != NULL) {
 			while ((plugin_dirent = readdir(plugindir)) != NULL) {
 				snprintf(fullpath, FILENAME_MAX, "%s/%s", AO_PLUGIN_PATH, plugin_dirent->d_name);
-				if (!stat(fullpath, &statbuf) && S_ISREG(statbuf.st_mode) && (ext = strrchr(plugin_dirent->d_name, '.')) != NULL) {
+				if (!stat(fullpath, &statbuf) && S_ISREG(statbuf.st_mode) && (ext = strchr(plugin_dirent->d_name, '.')) != NULL) {
 					if (strcmp(ext, SHARED_LIB_EXT) == 0) {
 						plugin = _get_plugin(fullpath);
 						if (plugin) {
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- src/audio_out.c.orig	Sat Feb 24 02:31:46 2001
+++ src/audio_out.c	Wed Mar 14 01:36:51 2001
@@@@ -63,7 +63,7 @@@@ driver_tree_t *_get_plugin(char *plugin_
d13 1
a13 1
@@@@ -76,6 +76,9 @@@@ driver_tree_t *_get_plugin(char *plugin_
d23 1
a23 1
@@@@ -126,7 +129,7 @@@@ void ao_initialize(void)
@


1.1.1.1
log
@Libao is a cross-platform audio library that allows programs to output
audio using a simple API on a wide variety of platforms.  It currently
supports:
.   * Null output
.   * WAV files
.   * OSS (Open Sound System)
.   * ESD (ESounD or Enlighten Sound Daemon)
.   * ALSA (Advanced Linux Sound Architecture)
.   * Solaris (untested)
.   * IRIX (untested)

.. thanks to naddy@@ for beating oss into shape!
@
text
@@
