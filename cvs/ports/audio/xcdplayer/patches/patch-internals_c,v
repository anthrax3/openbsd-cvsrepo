head	1.3;
access;
symbols
	OPENBSD_6_1:1.2.0.28
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.26
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.22
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.24
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.18
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.16
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.28
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.26
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.24
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.22
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.20
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.18
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.16
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.14
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.12
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.10
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.8
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.04.19.15.26.59;	author espie;	state Exp;
branches;
next	1.2;
commitid	DuNOXcbeK53AM1Tu;

1.2
date	2010.05.17.08.31.12;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.24.22.15.56;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@have cdrom_get_curtime return something, always.
fixes clang
@
text
@$OpenBSD: patch-internals_c,v 1.2 2010/05/17 08:31:12 espie Exp $
--- internals.c.orig	Tue Jan 12 19:59:45 1993
+++ internals.c	Wed Apr 19 17:25:18 2017
@@@@ -22,6 +22,9 @@@@
 
 # include "debug.h"
 # include "cdrom_globs.h"
+#if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__)
+# include "cdrom_freebsd.h"
+#endif
 #ifdef sun
 # include "cdrom_sun.h"
 #endif
@@@@ -29,13 +32,14 @@@@
 # include "cdrom_sgi.h"
 #endif
 
-
+static void     scan_update();
 static XtIntervalId	ivid			= -1;
 static XtIntervalId	scanivid		= -1;
 static XtIntervalId	stativid		= -1;
 static unsigned int	timer_mod		= 1000 / TIMER_PERIOD;
 unsigned int		timer_fsecs;
 
+extern AppData app_data;
 
 int
 cdrom_get_curtime() {
@@@@ -46,7 +50,7 @@@@ cdrom_get_curtime() {
 
 	if (cdrom_open() == -1) {
 		debug_printf(1, "cdrom_get_curtime: error from cdrom_open\n");
-		return;
+		return 0;
 	}
 
 	switch (cdrom_status()) {
@@@@ -54,7 +58,7 @@@@ cdrom_get_curtime() {
 	case CDROM_PLAYING:
 	    if (cdrom_get_curmsf(&curmsf) == -1) {
 		debug_printf(1, "get_curtime: error reading location\n");
-		return;
+		return 0;
 	    }
 
 	    if (((curtrack = cdrom_get_curtrack()) == -1) ||
@@@@ -77,13 +81,13 @@@@ cdrom_get_curtime() {
 }
 
 
+static void	update_track();
 /*
  * we poll the cd-rom drive every TIMER_PERIOD milliseconds to see where 
  * it is and if it's on a new track, and update the label widget.
  */
 void
 cdrom_timer_on() {
-	static void	update_track();
 
 	if (cdi.state & CDROM_STATE_PLAY)
 		ivid = XtAppAddTimeOut(appc, TIMER_PERIOD, update_track, NULL);
@@@@ -170,7 +174,6 @@@@ cdrom_rewind () {
 	struct msf	track_start;
         struct msf	start_addr, end_addr;
 	int		curtrack;
-	extern void 	scan_update();
 
 	if (cdrom_get_curmsf(&start_addr) == -1) {
 		debug_printf(1, "rew: error reading location\n");
@@@@ -196,11 +199,11 @@@@ cdrom_rewind () {
 	    if (((cdi.state & CDROM_STATE_PLAY) && 
 		 ((track_start.minute * 60) + track_start.second) >=
 		 ((start_addr.minute * 60) + start_addr.second - 
-		  scanSkipInterval)) ||
+		  app_data.scanSkipInterval)) ||
 		((cdi.state & CDROM_STATE_PAUSE) &&
 		 ((track_start.minute * 60) + track_start.second) >=
 		 ((start_addr.minute * 60) + start_addr.second -
-		  pauseSkipInterval)))
+		  app_data.pauseSkipInterval)))
 	    {
 	        start_addr = track_start;
 	        start_addr.second++; /* guarantee we never back up too far */
@@@@ -208,9 +211,9 @@@@ cdrom_rewind () {
 	    else
 	    {
 		if (cdi.state & CDROM_STATE_PAUSE) {
-			start_addr.second -= pauseSkipInterval; 
+			start_addr.second -= app_data.pauseSkipInterval; 
 		} else if (cdi.state & CDROM_STATE_PLAY) {
-			start_addr.second -= scanSkipInterval; 
+			start_addr.second -= app_data.scanSkipInterval; 
 		}
 	        if ((char) start_addr.second < 0)
 	        {
@@@@ -223,9 +226,9 @@@@ cdrom_rewind () {
 	else /* normal case */
 	{
 		if (cdi.state & CDROM_STATE_PAUSE) {
-			start_addr.second -= pauseSkipInterval; 
+			start_addr.second -= app_data.pauseSkipInterval; 
 		} else if (cdi.state & CDROM_STATE_PLAY) {
-			start_addr.second -= scanSkipInterval; 
+			start_addr.second -= app_data.scanSkipInterval; 
 		}
 		if ((char) start_addr.second < 0)
 		{
@@@@ -274,7 +277,7 @@@@ cdrom_rewind () {
 	{
 	    if (scanivid == -1)
 		scanivid = XtAppAddTimeOut(appc, 
-			(int)(pausePauseInterval * 1000.0), 
+			(int)(app_data.pausePauseInterval * 1000.0), 
 			scan_update, NULL);
 
 	    cdi.state &= ~CDROM_STATE_PAUSE;	/* allow timer to change */
@@@@ -304,7 +307,6 @@@@ cdrom_ff () {
         struct msf	start_addr, end_addr,  next_start;
 	char		t;
 	int		curtrack;
-	extern void 	scan_update();
 
 	if (cdrom_get_curmsf(&start_addr) == -1) {
 		debug_printf(1, "ff: error reading location\n");
@@@@ -332,11 +334,11 @@@@ cdrom_ff () {
 	    if (((cdi.state & CDROM_STATE_PLAY) && 
 		 ((next_start.minute * 60) + next_start.second) <=
 		 ((start_addr.minute * 60) + start_addr.second +
-		  scanSkipInterval)) ||
+		  app_data.scanSkipInterval)) ||
 		((cdi.state & CDROM_STATE_PAUSE) &&
 		 ((next_start.minute * 60) + next_start.second) <=
 		 ((start_addr.minute * 60) + start_addr.second +
-		  pauseSkipInterval)))
+		  app_data.pauseSkipInterval)))
 	    {
 	    
 	        /* start at end of current track */
@@@@ -346,9 +348,9 @@@@ cdrom_ff () {
 	    else
 	    {
 		    if (cdi.state & CDROM_STATE_PAUSE) {
-			    start_addr.second += pauseSkipInterval; 
+			    start_addr.second += app_data.pauseSkipInterval; 
 		    } else if (cdi.state & CDROM_STATE_PLAY) {
-			    start_addr.second += scanSkipInterval; 
+			    start_addr.second += app_data.scanSkipInterval; 
 		    }
 		    if (start_addr.second >= 60)
 		    {
@@@@ -360,9 +362,9 @@@@ cdrom_ff () {
 	else
 	{
 	    if (cdi.state & CDROM_STATE_PAUSE) {
-		start_addr.second += pauseSkipInterval; 
+		start_addr.second += app_data.pauseSkipInterval; 
 	    } else if (cdi.state & CDROM_STATE_PLAY) {
-		start_addr.second += scanSkipInterval; 
+		start_addr.second += app_data.scanSkipInterval; 
 	    }
 	    if (start_addr.second >= 60)
 	    {
@@@@ -413,7 +415,7 @@@@ cdrom_ff () {
 	{
 	    if (scanivid == -1)
 		scanivid = XtAppAddTimeOut(appc, 
-			(int)(pausePauseInterval * 1000.0), 
+			(int)(app_data.pausePauseInterval * 1000.0), 
 			scan_update, NULL);
 
 	    cdi.state &= ~CDROM_STATE_PAUSE;	/* allow timer to change */
@@@@ -557,7 +559,7 @@@@ scan_update(data, id)
 				 cdi.state &= ~CDROM_STATE_STOP;
 		}
 	        ivid = XtAppAddTimeOut(appc, 
-			(int)(scanPauseInterval * 1000.0), 
+			(int)(app_data.scanPauseInterval * 1000.0), 
 			scan_update, NULL);
 	}
 	else
@@@@ -574,7 +576,7 @@@@ scan_update(data, id)
 			}
 
 			ivid = XtAppAddTimeOut(appc,
-				(int)(scanPauseInterval * 1000.0),
+				(int)(app_data.scanPauseInterval * 1000.0),
 				scan_update, NULL);
 		}
 		else if (scanivid != -1) {
@@@@ -662,7 +664,7 @@@@ update_track(data, id)
 				 cdi.state &= ~CDROM_STATE_STOP;
 		}
 	        ivid = XtAppAddTimeOut(appc, 
-			(int)(scanPauseInterval * 1000.0), 
+			(int)(app_data.scanPauseInterval * 1000.0), 
 			update_track, NULL);
 	}
 	else
@@@@ -679,7 +681,7 @@@@ update_track(data, id)
 			}
 
 			ivid = XtAppAddTimeOut(appc,
-				(int)(scanPauseInterval * 1000.0),
+				(int)(app_data.scanPauseInterval * 1000.0),
 				update_track, NULL);
 		}
 		else
@


1.2
log
@cleanup for gcc 4
@
text
@d1 1
a1 1
$OpenBSD: patch-internals_c,v 1.1 2003/08/24 22:15:56 naddy Exp $
d3 1
a3 1
+++ internals.c	Mon May 17 10:24:16 2010
d30 18
@


1.1
log
@bring us into the 64-bit world; from NetBSD
@
text
@d1 3
a3 3
$OpenBSD$
--- internals.c.orig	1993-01-12 19:59:45.000000000 +0100
+++ internals.c	2003-08-24 23:13:27.000000000 +0200
d30 15
@

