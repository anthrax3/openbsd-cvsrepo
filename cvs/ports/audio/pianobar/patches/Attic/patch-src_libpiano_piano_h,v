head	1.13;
access;
symbols
	OPENBSD_5_8:1.12.0.4
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6;
locks; strict;
comment	@# @;


1.13
date	2015.08.26.05.56.22;	author dcoppa;	state dead;
branches;
next	1.12;
commitid	y9wqGRrrECd7SlET;

1.12
date	2015.03.20.14.59.36;	author dcoppa;	state Exp;
branches;
next	1.11;
commitid	tzaKvkdfFo0uzMlR;

1.11
date	2014.05.20.14.51.46;	author dcoppa;	state dead;
branches;
next	1.10;

1.10
date	2014.03.27.10.13.14;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2013.09.23.08.40.23;	author dcoppa;	state dead;
branches;
next	1.8;

1.8
date	2013.07.10.16.40.48;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.18.13.17.45;	author dcoppa;	state dead;
branches;
next	1.6;

1.6
date	2012.07.06.08.32.13;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2012.06.12.14.45.06;	author dcoppa;	state dead;
branches;
next	1.4;

1.4
date	2012.06.08.11.01.20;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2012.05.28.09.47.00;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2012.01.20.13.04.16;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2012.01.16.13.27.09;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.13
log
@
Update to a newer snapshot (2015.08.04)
@
text
@$OpenBSD: patch-src_libpiano_piano_h,v 1.12 2015/03/20 14:59:36 dcoppa Exp $

commit 1cd5c5ec77ea43088982a439b58499be87c62087
Author: Lars-Dominik Braun <lars@@6xq.net>
Date:   Sat Mar 7 16:01:26 2015 +0100

Fix upcoming songs assertion failure
This should not be an assertion, it is expected to happen.

--- src/libpiano/piano.h.orig	Sun Sep 28 08:17:29 2014
+++ src/libpiano/piano.h	Fri Mar 20 09:44:47 2015
@@@@ -317,7 +317,7 @@@@ void *PianoListDelete (PianoListHead_t * const l, Pian
 		__attribute__ ((warn_unused_result));
 #define PianoListDeleteP(l,e) PianoListDelete(((l) == NULL) ? NULL : &(l)->head, \
 		&(e)->head)
-#define PianoListNextP(e) ((void *) (e)->head.next)
+#define PianoListNextP(e) ((e) == NULL ? NULL : (void *) (e)->head.next)
 void *PianoListPrepend (PianoListHead_t * const l, PianoListHead_t * const e)
 		__attribute__ ((warn_unused_result));
 #define PianoListPrependP(l,e) PianoListPrepend (((l) == NULL) ? NULL : &(l)->head, \
@


1.12
log
@
Merge bugfixes from upstream:

Fix upcoming songs assertion failure
(git commit 1cd5c5ec77ea43088982a439b58499be87c62087)

player: Ignore volume change before playback started
(git commit 310900e4be52d11388792d776d9f6b89380bbecd)

player: Fix initial track volume
(git commit 0005ea3873202ddefaae6466a932c159c08fd1c3)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.11
log
@
Update to 2014.04.22 snapshot.

It now uses ffmpeg instead of faad+libmad.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libpiano_piano_h,v 1.10 2014/03/27 10:13:14 dcoppa Exp $
d3 1
a3 1
commit 90f6ffbdb7c7cc07cb02b69fcfb3a3844f0180b7
d5 1
a5 1
Date:   Fri Mar 14 11:47:26 2014 +0100
d7 2
a8 1
piano: Request track length
d10 11
a20 14
The returned length is used as first length estimate before enough
audio data arrives to show the real length and for the eventcmd
API.

--- src/libpiano/piano.h.orig	Sun Sep 15 15:54:04 2013
+++ src/libpiano/piano.h	Thu Mar 27 10:30:08 2014
@@@@ -95,6 +95,7 @@@@ typedef struct PianoSong {
 	char *detailUrl;
 	char *trackToken;
 	float fileGain;
+	unsigned int length; /* song length in seconds */
 	PianoSongRating_t rating;
 	PianoAudioFormat_t audioFormat;
 } PianoSong_t;
@


1.10
log
@
Bugfixes from upstream:

libpiano: Request track length
(upstream git commit 90f6ffbdb7c7cc07cb02b69fcfb3a3844f0180b7)

libwaitress: Increase the receive buffer
(upstream git commit 8e685c992516834e35bcccea1f61c39a9d847e2f)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.9
log
@Update to release 2013.09.15
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libpiano_piano_h,v 1.8 2013/07/10 16:40:48 dcoppa Exp $
d3 1
a3 1
commit f6df7d7e510f2d8879ec54dce32fee2b691dc32d
d5 1
a5 1
Date:   Tue Jul 2 17:13:47 2013 +0200
d7 1
a7 1
piano: Check for libgcrypt errors
d9 3
a11 1
Fixes mysterious segfaults from issue #369 and #293.
d13 10
a22 19
--- src/libpiano/piano.h.orig	Sun May 19 12:58:18 2013
+++ src/libpiano/piano.h	Wed Jul 10 18:20:12 2013
@@@@ -247,6 +247,7 @@@@ typedef enum {
 	PIANO_RET_OUT_OF_MEMORY = 4,
 	PIANO_RET_INVALID_LOGIN = 5,
 	PIANO_RET_QUALITY_UNAVAILABLE = 6,
+	PIANO_RET_GCRY_ERR = 7,
 
 	/* pandora error codes */
 	PIANO_RET_P_INTERNAL = PIANO_RET_OFFSET+0,
@@@@ -294,7 +295,7 @@@@ typedef enum {
 	PIANO_RET_P_RATE_LIMIT = PIANO_RET_OFFSET+1039,
 } PianoReturn_t;
 
-void PianoInit (PianoHandle_t *, const char *,
+PianoReturn_t PianoInit (PianoHandle_t *, const char *,
 		const char *, const char *, const char *,
 		const char *);
 void PianoDestroy (PianoHandle_t *);
@


1.8
log
@piano: Check for libgcrypt errors.
This fixes some rare segfaults (see issues #369 and #293).

From upstream git commit f6df7d7e510f2d8879ec54dce32fee2b691dc32d
@
text
@d1 1
a1 1
$OpenBSD$
@


1.7
log
@Use -DGCRYPT_NO_DEPRECATED (now that it has been fixed) and drop
my local patches

Zap useless include
(upstream git commit a1e73fc8d72a5253cae29c9bab5b260ad297c5e2)

Amend pkg/MESSAGE
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libpiano_piano_h,v 1.6 2012/07/06 08:32:13 dcoppa Exp $
d3 3
a5 2
Work around libgcrypt deprecation warnings. See:
http://lists.gnupg.org/pipermail/gcrypt-devel/2011-July/001830.html
d7 11
a17 4
--- src/libpiano/piano.h.orig	Fri Jul  6 10:09:52 2012
+++ src/libpiano/piano.h	Fri Jul  6 10:11:20 2012
@@@@ -25,7 +25,9 @@@@ THE SOFTWARE.
 #define _PIANO_H
d19 5
a23 4
 #include <stdbool.h>
+#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #include <gcrypt.h>
+#pragma GCC diagnostic warning "-Wdeprecated-declarations"
d25 5
a29 2
 /* this is our public API; don't expect this api to be stable as long as
  * pandora does not provide a stable api
@


1.6
log
@
Properly initialize libgcrypt
(upstream git commit 96db841a16670b52fa462337c657c6dc6bd2844a)

Work around libgcrypt deprecation warnings. See:
http://lists.gnupg.org/pipermail/gcrypt-devel/2011-July/001830.html
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@Update to snapshot 2012.06.10, chasing changes in pandora's api.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libpiano_piano_h,v 1.4 2012/06/08 11:01:20 dcoppa Exp $
d3 2
a4 3
Fix ambiguous error message "Invalid Partner Login" on wrong
email address/password failure
(upstream git commit 81bf363ac69e0036562434ca0e7153c3e624c8c3)
d6 4
a9 10
More error messages
(upstream git commit b32348d88f700f4a3b5fb3a95f7ee40336952230)

--- src/libpiano/piano.h.orig	Sun May  6 16:33:54 2012
+++ src/libpiano/piano.h	Fri Jun  8 12:38:08 2012
@@@@ -244,7 +244,9 @@@@ typedef enum {
 	PIANO_RET_INVALID_RESPONSE = 2,
 	PIANO_RET_CONTINUE_REQUEST = 3,
 	PIANO_RET_OUT_OF_MEMORY = 4,
+	PIANO_RET_INVALID_LOGIN = 5,
d11 4
a14 12
+	/* pandora error codes */
 	PIANO_RET_P_INTERNAL = PIANO_RET_OFFSET+0,
 	PIANO_RET_P_API_VERSION_NOT_SUPPORTED = PIANO_RET_OFFSET+11,
 	PIANO_RET_P_BIRTH_YEAR_INVALID = PIANO_RET_OFFSET+1025,
@@@@ -284,7 +286,7 @@@@ typedef enum {
 	PIANO_RET_P_URL_PARAM_MISSING_USER_ID = PIANO_RET_OFFSET+5,
 	PIANO_RET_P_USERNAME_ALREADY_EXISTS = PIANO_RET_OFFSET+1013,
 	PIANO_RET_P_USER_ALREADY_USED_TRIAL = PIANO_RET_OFFSET+1037,
-	PIANO_RET_P_USER_NOT_ACTIVE = PIANO_RET_OFFSET+1003,
+	PIANO_RET_P_LISTENER_NOT_AUTHORIZED = PIANO_RET_OFFSET+1003,
 	PIANO_RET_P_USER_NOT_AUTHORIZED = PIANO_RET_OFFSET+1004,
 	PIANO_RET_P_ZIP_CODE_INVALID = PIANO_RET_OFFSET+1024,
d16 2
@


1.4
log
@properly handle more error messages.
from upstream git.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libpiano_piano_h,v 1.3 2012/05/28 09:47:00 dcoppa Exp $
@


1.3
log
@Add libgcrypt CFLAGS to %.o target
(upstream git commit db4c66b2956a4da2745f16131fe573962c3fcbfb)

Fix ambiguous error message "Invalid Partner Login" on wrong
email address/password failure
(upstream git commit 81bf363ac69e0036562434ca0e7153c3e624c8c3)

Move mutex initalization to main thread
(upstream git commit ed7b2597a439c27e60d0b4cec85e801c9099173c)
@
text
@d1 1
a1 1
$OpenBSD$
d7 3
d11 2
a12 2
+++ src/libpiano/piano.h	Mon May 28 10:59:07 2012
@@@@ -244,6 +244,7 @@@@ typedef enum {
d18 1
d21 10
@


1.2
log
@Update to the latest snapshot from upstream git to unbreak pianobar
after pandora.com's API changes.
@
text
@d1 13
a13 9
$OpenBSD: patch-src_libpiano_piano_h,v 1.1 2012/01/16 13:27:09 dcoppa Exp $
--- src/libpiano/piano.h.orig	Mon Jan 16 14:02:04 2012
+++ src/libpiano/piano.h	Mon Jan 16 14:03:22 2012
@@@@ -253,6 +253,7 @@@@ typedef enum {
 	PIANO_RET_PLAYLIST_END = 14,
 	PIANO_RET_QUICKMIX_NOT_PLAYABLE = 15,
 	PIANO_RET_REMOVING_TOO_MANY_SEEDS = 16,
+	PIANO_RET_EXCESSIVE_ACTIVITY = 17,
 } PianoReturn_t;
d15 2
a16 1
 void PianoInit (PianoHandle_t *);
@


1.1
log
@Update to pianobar-2012.01.10
@
text
@d1 1
a1 1
$OpenBSD$
@

