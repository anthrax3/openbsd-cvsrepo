head	1.19;
access;
symbols
	OPENBSD_6_0:1.19.0.2
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	dcoppa_20100329:1.1.1.1
	dcoppa:1.1.1;
locks; strict;
comment	@# @;


1.19
date	2016.06.03.08.34.00;	author dcoppa;	state Exp;
branches;
next	1.18;
commitid	gTAib0kkJZyKT8FB;

1.18
date	2016.03.01.12.44.58;	author dcoppa;	state Exp;
branches;
next	1.17;
commitid	boFKQjjdIQ21DCEs;

1.17
date	2016.01.13.08.21.18;	author dcoppa;	state Exp;
branches;
next	1.16;
commitid	YEWHSPQ7fOgVeBme;

1.16
date	2014.05.20.14.51.46;	author dcoppa;	state dead;
branches;
next	1.15;

1.15
date	2014.03.27.09.28.06;	author dcoppa;	state Exp;
branches;
next	1.14;

1.14
date	2013.09.23.08.40.24;	author dcoppa;	state dead;
branches;
next	1.13;

1.13
date	2013.09.02.11.58.40;	author dcoppa;	state Exp;
branches;
next	1.12;

1.12
date	2012.12.05.12.20.43;	author dcoppa;	state dead;
branches;
next	1.11;

1.11
date	2012.09.18.12.35.03;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2012.04.20.08.22.34;	author dcoppa;	state dead;
branches;
next	1.9;

1.9
date	2012.04.16.13.09.26;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2012.03.20.14.27.45;	author dcoppa;	state dead;
branches;
next	1.7;

1.7
date	2012.03.02.11.42.56;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2012.01.16.13.27.09;	author dcoppa;	state dead;
branches;
next	1.5;

1.5
date	2011.12.19.12.44.37;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.04.07.48.04;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2011.04.21.10.02.09;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.13.18.35.51;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2010.03.29.21.12.20;	author dcoppa;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.03.29.21.12.20;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.19
log
@
Update to pianobar-2016.06.02
@
text
@$OpenBSD: patch-src_ui_c,v 1.18 2016/03/01 12:44:58 dcoppa Exp $
--- src/ui.c.orig	Thu Jun  2 08:49:26 2016
+++ src/ui.c	Fri Jun  3 10:16:34 2016
@@@@ -205,6 +205,7 @@@@ static CURLcode BarPianoHttpRequest (CURL * const http
 	setAndCheck (CURLOPT_PROGRESSDATA, &lint);
 	setAndCheck (CURLOPT_NOPROGRESS, 0);
 	setAndCheck (CURLOPT_POST, 1);
+	setAndCheck (CURLOPT_CAINFO, "${TRUEPREFIX}/share/pianobar/cert.pem");
 	if (settings->caBundle != NULL) {
 		setAndCheck (CURLOPT_CAINFO, settings->caBundle);
 	}
@


1.18
log
@
- update HOMEPAGE
- add default value for rpcTlsPort
  (upstream git commit bdc9dc727b0464bc17bed002d2a701cfc34b777a)
@
text
@d1 4
a4 24
$OpenBSD: patch-src_ui_c,v 1.17 2016/01/13 08:21:18 dcoppa Exp $

commit bdc9dc727b0464bc17bed002d2a701cfc34b777a
Author: Lars-Dominik Braun <lars@@6xq.net>
Date:   Thu Feb 11 19:50:55 2016 +0100

Add default value for rpcTlsPort

Passing NULL to printf and the result to curl may or may not work. YMMV.
Fixes #574.

--- src/ui.c.orig	Sun Nov 22 13:31:27 2015
+++ src/ui.c	Tue Mar  1 13:32:43 2016
@@@@ -179,6 +179,9 @@@@ static CURLcode BarPianoHttpRequest (CURL * const http
 	buffer buffer = {NULL, 0};
 	sig_atomic_t lint = 0, *prevint;
 	char url[2048];
+	assert (settings->rpcHost != NULL);
+	assert (settings->rpcTlsPort != NULL);
+	assert (req->urlPath != NULL);
 	int ret = snprintf (url, sizeof (url), "%s://%s:%s%s",
 		req->secure ? "https" : "http",
 		settings->rpcHost,
@@@@ -201,6 +204,7 @@@@ static CURLcode BarPianoHttpRequest (CURL * const http
@


1.17
log
@
Use an alternate CA root bundle for pianobar to work around a problem
with tuner.pandora.com and libressl

ok sthen@@
@
text
@d1 11
a11 1
$OpenBSD$
d13 12
a24 2
+++ src/ui.c	Tue Jan 12 11:34:42 2016
@@@@ -201,6 +201,7 @@@@ static CURLcode BarPianoHttpRequest (CURL * const http
@


1.16
log
@
Update to 2014.04.22 snapshot.

It now uses ffmpeg instead of faad+libmad.
@
text
@d1 11
a11 50
$OpenBSD: patch-src_ui_c,v 1.15 2014/03/27 09:28:06 dcoppa Exp $

commit ebfd7d45c6b8eb5b2a1ee6e97a3f21f5f5bf9b43
Author: Cody P Schafer <devel@@codyps.com>
Date:   Thu Mar 13 11:14:21 2014 -0700

fix warnings now noted due to format string checking

--- src/ui.c.orig	Sun Sep 15 15:54:04 2013
+++ src/ui.c	Thu Mar 27 10:18:13 2014
@@@@ -354,7 +354,7 @@@@ PianoStation_t *BarUiSelectStation (BarApp_t *app, Pia
 			const PianoStation_t *currStation = sortedStations[i];
 			/* filter stations */
 			if (BarStrCaseStr (currStation->name, buf) != NULL) {
-				BarUiMsg (&app->settings, MSG_LIST, "%2i) %c%c%c %s\n", i,
+				BarUiMsg (&app->settings, MSG_LIST, "%2zi) %c%c%c %s\n", i,
 						currStation->useQuickMix ? 'q' : ' ',
 						currStation->isQuickMix ? 'Q' : ' ',
 						!currStation->isCreator ? 'S' : ' ',
@@@@ -364,10 +364,10 @@@@ PianoStation_t *BarUiSelectStation (BarApp_t *app, Pia
 			}
 		}
 
-		BarUiMsg (&app->settings, MSG_QUESTION, prompt);
+		BarUiMsg (&app->settings, MSG_QUESTION, "%s", prompt);
 		if (autoselect && displayCount == 1 && stationCount != 1) {
 			/* auto-select last remaining station */
-			BarUiMsg (&app->settings, MSG_NONE, "%i\n", lastDisplayed);
+			BarUiMsg (&app->settings, MSG_NONE, "%zi\n", lastDisplayed);
 			retStation = sortedStations[lastDisplayed];
 		} else {
 			if (BarReadlineStr (buf, sizeof (buf), &app->input,
@@@@ -441,7 +441,7 @@@@ PianoArtist_t *BarUiSelectArtist (BarApp_t *app, Piano
 		tmpArtist = startArtist;
 		PianoListForeachP (tmpArtist) {
 			if (BarStrCaseStr (tmpArtist->name, buf) != NULL) {
-				BarUiMsg (&app->settings, MSG_LIST, "%2u) %s\n", i,
+				BarUiMsg (&app->settings, MSG_LIST, "%2lu) %s\n", i,
 						tmpArtist->name);
 			}
 			i++;
@@@@ -477,7 +477,7 @@@@ char *BarUiSelectMusicId (BarApp_t *app, PianoStation_
 	PianoArtist_t *tmpArtist;
 	PianoSong_t *tmpSong;
 
-	BarUiMsg (&app->settings, MSG_QUESTION, msg);
+	BarUiMsg (&app->settings, MSG_QUESTION, "%s", msg);
 	if (BarReadlineStr (lineBuf, sizeof (lineBuf), &app->input,
 			BAR_RL_DEFAULT) > 0) {
 		PianoReturn_t pRet;
@


1.15
log
@
format string fixes from upstream
(git commit ebfd7d45c6b8eb5b2a1ee6e97a3f21f5f5bf9b43)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.14
log
@Update to release 2013.09.15
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ui_c,v 1.13 2013/09/02 11:58:40 dcoppa Exp $
d3 3
a5 2
Increase buffer size to fix display of song lists with more than
999 items (upstream git commit bacc60b7a8e7854ca14b5a5f65429500831f20cb)
d7 38
a44 8
--- src/ui.c.orig	Sun May 19 12:58:18 2013
+++ src/ui.c	Mon Sep  2 11:28:16 2013
@@@@ -665,7 +665,7 @@@@ inline void BarUiPrintSong (const BarSettings_t *setti
 size_t BarUiListSongs (const BarSettings_t *settings,
 		const PianoSong_t *song, const char *filter) {
 	size_t i = 0;
-	char digits[4];
+	char digits[8];
d46 5
a50 2
 	while (song != NULL) {
 		if (filter == NULL ||
@


1.13
log
@
Increase buffer size to fix display of song lists with more than
999 items (upstream git commit bacc60b7a8e7854ca14b5a5f65429500831f20cb)

piano: replace station with same id.
(upstream git commit 6e82d7e6852fdac4a178445b3e2bcdb6d4e0fa63)

waitress: try all addresses returned by getaddrinfo.
Fix connection failures on mixed IPv4/IPv6 systems.
(upstream git commit f1ddd582ba5c314202fbed98d7aa491b06b2dee2)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.12
log
@Update to pianobar-2012.12.01
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ui_c,v 1.11 2012/09/18 12:35:03 dcoppa Exp $
d3 2
a4 3
Fix history memory leak
With 'history = 0' playlist items are discarded, but not freed
(upstream git commit e3d8f497baaf02daeddb060cd986681d0ee208de)
d6 8
a13 10
--- src/ui.c.orig	Tue Sep 18 14:26:06 2012
+++ src/ui.c	Tue Sep 18 14:28:26 2012
@@@@ -894,6 +894,8 @@@@ void BarUiHistoryPrepend (BarApp_t *app, PianoSong_t *
 				PianoDestroyPlaylist (delSong);
 			}
 		}
+	} else {
+		PianoDestroyPlaylist (song);
 	}
 }
d15 2
@


1.11
log
@Update to pianobar-2012.09.07
@
text
@d1 1
a1 1
$OpenBSD$
@


1.10
log
@Roll new distfile and gc local patches
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ui_c,v 1.9 2012/04/16 13:09:26 dcoppa Exp $
d3 3
a5 3
Add option to enable TLS for all actions (not just sending login
credentials). Useful to get around GeoIP restrictions.
(upstream git commit 35763dea799c96361e288a10eab0fbd16c36e880)
d7 9
a15 19
--- src/ui.c.orig	Tue Mar 20 14:47:07 2012
+++ src/ui.c	Mon Apr 16 14:57:08 2012
@@@@ -134,14 +134,15 @@@@ void BarUiMsg (const BarSettings_t *settings, const Ba
 /*	fetch http resource (post request)
  *	@@param waitress handle
  *	@@param piano request (initialized by PianoRequest())
+ *	@@param ignore libpiano TLS hint and use it always
  */
 static WaitressReturn_t BarPianoHttpRequest (WaitressHandle_t *waith,
-		PianoRequest_t *req) {
+		PianoRequest_t *req, bool forceTls) {
 	waith->extraHeaders = "Content-Type: text/xml\r\n";
 	waith->postData = req->postData;
 	waith->method = WAITRESS_METHOD_POST;
 	waith->url.path = req->urlPath;
-	waith->url.tls = req->secure;
+	waith->url.tls = req->secure || forceTls;
 
 	return WaitressFetchBuf (waith, &req->responseData);
a16 3
@@@@ -172,7 +173,7 @@@@ int BarUiPianoCall (BarApp_t * const app, PianoRequest
 			return 0;
 		}
a17 5
-		*wRet = BarPianoHttpRequest (&app->waith, &req);
+		*wRet = BarPianoHttpRequest (&app->waith, &req, app->settings.forceTls);
 		if (*wRet != WAITRESS_RET_OK) {
 			BarUiMsg (&app->settings, MSG_NONE, "Network error: %s\n", WaitressErrorToStr (*wRet));
 			if (req.responseData != NULL) {
@


1.9
log
@Add option to enable TLS for all actions (not just sending login
credentials). Useful to get around GeoIP restrictions.
(upstream git commit 35763dea799c96361e288a10eab0fbd16c36e880)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.8
log
@Update to snapshot dated 2012.03.17
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ui_c,v 1.7 2012/03/02 11:42:56 dcoppa Exp $
d3 3
a5 3
Don't use custom format output as format string: fixes a segmentation
fault when searching for a station named '%'
(upstream git commit e6a87e15043767c0f1f00a62110e4bbb53de4ece)
d7 17
a23 9
--- src/ui.c.orig	Fri Mar  2 12:33:15 2012
+++ src/ui.c	Fri Mar  2 12:34:56 2012
@@@@ -709,7 +709,7 @@@@ inline void BarUiPrintStation (const BarSettings_t *se
 	BarUiCustomFormat (outstr, sizeof (outstr), settings->npStationFormat,
 			"ni", vals);
 	BarUiAppendNewline (outstr, sizeof (outstr));
-	BarUiMsg (settings, MSG_PLAYING, outstr);
+	BarUiMsg (settings, MSG_PLAYING, "%s", outstr);
 }
d25 1
a25 7
 /*	Print song infos (artist, title, album, loved)
@@@@ -729,7 +729,7 @@@@ inline void BarUiPrintSong (const BarSettings_t *setti
 	BarUiCustomFormat (outstr, sizeof (outstr), settings->npSongFormat,
 			"talr@@su", vals);
 	BarUiAppendNewline (outstr, sizeof (outstr));
-	BarUiMsg (settings, MSG_PLAYING, outstr);
+	BarUiMsg (settings, MSG_PLAYING, "%s", outstr);
d27 3
d31 5
a35 10
 /*	Print list of songs
@@@@ -756,7 +756,7 @@@@ size_t BarUiListSongs (const BarSettings_t *settings,
 			BarUiCustomFormat (outstr, sizeof (outstr), settings->listSongFormat,
 					"iatr", vals);
 			BarUiAppendNewline (outstr, sizeof (outstr));
-			BarUiMsg (settings, MSG_LIST, outstr);
+			BarUiMsg (settings, MSG_LIST, "%s", outstr);
 		}
 		i++;
 		song = song->next;
@


1.7
log
@Don't use custom format output as format string: fixes a segmentation
fault when searching for a station named '%'
(upstream git commit e6a87e15043767c0f1f00a62110e4bbb53de4ece)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.6
log
@Update to pianobar-2012.01.10
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ui_c,v 1.5 2011/12/19 12:44:37 dcoppa Exp $
d3 3
a5 2
Fix genre selection segfault
(upstream git commit d20878bce0c0d84e5b49d1b9642e71bb0d18341a)
d7 27
a33 3
--- src/ui.c.orig	Sun Dec 11 19:39:27 2011
+++ src/ui.c	Mon Dec 19 13:37:33 2011
@@@@ -584,16 +584,19 @@@@ void BarStationFromGenre (BarApp_t *app) {
d35 1
a35 57
 		curCat = curCat->next;
 	}
-	/* select category or exit */
-	BarUiMsg (&app->settings, MSG_QUESTION, "Select category: ");
-	if (BarReadlineInt (&i, &app->input) == 0) {
-		return;
-	}
-	curCat = app->ph.genreStations;
-	while (curCat != NULL && i > 0) {
-		curCat = curCat->next;
-		i--;
-	}
+
+	do {
+		/* select category or exit */
+		BarUiMsg (&app->settings, MSG_QUESTION, "Select category: ");
+		if (BarReadlineInt (&i, &app->input) == 0) {
+			return;
+		}
+		curCat = app->ph.genreStations;
+		while (curCat != NULL && i > 0) {
+			curCat = curCat->next;
+			i--;
+		}
+	} while (curCat == NULL);
 	
 	/* print all available stations */
 	curGenre = curCat->genres;
@@@@ -603,15 +606,19 @@@@ void BarStationFromGenre (BarApp_t *app) {
 		i++;
 		curGenre = curGenre->next;
 	}
-	BarUiMsg (&app->settings, MSG_QUESTION, "Select genre: ");
-	if (BarReadlineInt (&i, &app->input) == 0) {
-		return;
-	}
-	curGenre = curCat->genres;
-	while (curGenre != NULL && i > 0) {
-		curGenre = curGenre->next;
-		i--;
-	}
+
+	do {
+		BarUiMsg (&app->settings, MSG_QUESTION, "Select genre: ");
+		if (BarReadlineInt (&i, &app->input) == 0) {
+			return;
+		}
+		curGenre = curCat->genres;
+		while (curGenre != NULL && i > 0) {
+			curGenre = curGenre->next;
+			i--;
+		}
+	} while (curGenre == NULL);
+
 	/* create station */
 	BarUiMsg (&app->settings, MSG_INFO, "Adding shared station \"%s\"... ", curGenre->name);
 	reqData.id = curGenre->musicId;
@


1.5
log
@Fix genre selection segfault
(upstream git commit d20878bce0c0d84e5b49d1b9642e71bb0d18341a)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@Update to pianobar-2011.04.27
@
text
@d1 66
a66 41
$OpenBSD: patch-src_ui_c,v 1.3 2011/04/21 10:02:09 dcoppa Exp $
--- src/ui.c.orig	Thu Apr 21 11:08:21 2011
+++ src/ui.c	Thu Apr 21 11:10:32 2011
@@@@ -62,7 +62,7 @@@@ static bool isnumeric (const char *s) {
 
 /*	find needle in haystack, ignoring case, and return first position
  */
-const char *strcasestr (const char *haystack, const char *needle) {
+const char *BarStrCaseStr (const char *haystack, const char *needle) {
 	const char *needlePos = needle;
 
 	assert (haystack != NULL);
@@@@ -364,7 +364,7 @@@@ PianoStation_t *BarUiSelectStation (PianoHandle_t *ph,
 	do {
 		for (i = 0; i < stationCount; i++) {
 			const PianoStation_t *currStation = sortedStations[i];
-			if (strcasestr (currStation->name, buf) != NULL) {
+			if (BarStrCaseStr (currStation->name, buf) != NULL) {
 				BarUiMsg (MSG_LIST, "%2i) %c%c%c %s\n", i,
 						currStation->useQuickMix ? 'q' : ' ',
 						currStation->isQuickMix ? 'Q' : ' ',
@@@@ -443,7 +443,7 @@@@ PianoArtist_t *BarUiSelectArtist (PianoArtist_t *start
 		i = 0;
 		tmpArtist = startArtist;
 		while (tmpArtist != NULL) {
-			if (strcasestr (tmpArtist->name, buf) != NULL) {
+			if (BarStrCaseStr (tmpArtist->name, buf) != NULL) {
 				BarUiMsg (MSG_LIST, "%2u) %s\n", i, tmpArtist->name);
 			}
 			i++;
@@@@ -653,8 +653,8 @@@@ size_t BarUiListSongs (const BarSettings_t *settings,
 
 	while (song != NULL) {
 		if (filter == NULL ||
-				(filter != NULL && (strcasestr (song->artist, filter) != NULL ||
-				strcasestr (song->title, filter) != NULL))) {
+				(filter != NULL && (BarStrCaseStr (song->artist, filter) != NULL ||
+				BarStrCaseStr (song->title, filter) != NULL))) {
 			BarUiMsg (MSG_LIST, "%2lu) %s - %s %s%s\n", i, song->artist,
 					song->title,
 					(song->rating == PIANO_RATE_LOVE) ? settings->loveIcon : "",
@


1.3
log
@Update to pianobar-2011.04.10

USE_GROFF no more needed.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update audio/pianobar: my fixes have been merged upstream.
While here, add a MESSAGE file and comment the patch.

OK jasper@@
@
text
@d1 41
a41 12
$OpenBSD: patch-src_ui_c,v 1.1 2010/03/29 21:12:20 dcoppa Exp $
--- src/ui.c.orig	Tue Mar 16 20:29:34 2010
+++ src/ui.c	Mon Mar 29 15:42:23 2010
@@@@ -420,7 +420,7 @@@@ void BarUiStartEventCmd (const BarSettings_t *settings
 		/* child */
 		close (pipeFd[1]);
 		dup2 (pipeFd[0], fileno (stdin));
-		execl (settings->eventCmd, settings->eventCmd, type, NULL);
+		execl (settings->eventCmd, settings->eventCmd, type, (char *)NULL);
 		BarUiMsg (MSG_ERR, "Cannot start eventcmd. (%s)\n", strerror (errno));
 		close (pipeFd[0]);
 		exit (1);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import audio/pianobar

pianobar is a console client for the personalized web radio pandora 
(http://www.pandora.com).

OK landry@@
@
text
@@
