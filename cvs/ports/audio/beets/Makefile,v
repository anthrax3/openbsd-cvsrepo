head	1.24;
access;
symbols
	OPENBSD_6_1:1.21.0.2
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.18.0.2
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	sthen_20140522:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.24
date	2017.06.11.21.20.30;	author sthen;	state Exp;
branches;
next	1.23;
commitid	jhTIui8ZuYiVGkNd;

1.23
date	2017.06.11.14.50.01;	author sthen;	state Exp;
branches;
next	1.22;
commitid	rCI2YFtnTJyAwhQL;

1.22
date	2017.06.11.14.08.39;	author sthen;	state Exp;
branches;
next	1.21;
commitid	McecnbAOf1ChB7bo;

1.21
date	2017.01.10.14.43.00;	author sthen;	state Exp;
branches;
next	1.20;
commitid	jQAkQgLix9dKwDez;

1.20
date	2016.12.16.11.22.39;	author sthen;	state Exp;
branches;
next	1.19;
commitid	eMpgk0R7Xd4EqHeV;

1.19
date	2016.08.26.18.25.34;	author danj;	state Exp;
branches;
next	1.18;
commitid	4sQnfH5AZYZJSeHw;

1.18
date	2016.06.27.14.21.31;	author sthen;	state Exp;
branches;
next	1.17;
commitid	6PJXA2cylYTB2T14;

1.17
date	2016.06.01.15.01.32;	author sthen;	state Exp;
branches;
next	1.16;
commitid	SRikjSsmNhVSwAwV;

1.16
date	2016.02.25.00.44.34;	author sthen;	state Exp;
branches;
next	1.15;
commitid	KO32EIlGiIXsdIPR;

1.15
date	2015.12.29.19.37.55;	author sthen;	state Exp;
branches;
next	1.14;
commitid	GVTtJWQWKrK8M9Rb;

1.14
date	2015.10.18.10.40.43;	author sthen;	state Exp;
branches;
next	1.13;
commitid	FdXHbua3NBeZvOGQ;

1.13
date	2015.09.29.10.51.14;	author sthen;	state Exp;
branches;
next	1.12;
commitid	0mMHGyUMEfafRiiY;

1.12
date	2015.09.23.21.14.32;	author sthen;	state Exp;
branches;
next	1.11;
commitid	nwZ2815YQ8JrFSfK;

1.11
date	2015.08.12.15.04.07;	author sthen;	state Exp;
branches;
next	1.10;
commitid	ZfjYXuiyui2jhNlE;

1.10
date	2015.06.15.08.49.03;	author sthen;	state Exp;
branches;
next	1.9;
commitid	bSzuyMx5pEtMVcqk;

1.9
date	2015.05.20.08.14.31;	author sthen;	state Exp;
branches;
next	1.8;
commitid	9hJdTk073HNMh6Gh;

1.8
date	2015.05.15.13.43.40;	author sthen;	state Exp;
branches;
next	1.7;
commitid	6xKbSVFN3ZZElARU;

1.7
date	2015.04.08.10.55.31;	author sthen;	state Exp;
branches;
next	1.6;
commitid	v3UKZ1aSRxNJG6Ut;

1.6
date	2015.04.02.14.21.12;	author jasper;	state Exp;
branches;
next	1.5;
commitid	4Dkfcsk2uZtFDSwy;

1.5
date	2015.01.09.17.15.29;	author sthen;	state Exp;
branches;
next	1.4;
commitid	8g449ucNlFzPKBwJ;

1.4
date	2014.11.20.01.43.59;	author sthen;	state Exp;
branches;
next	1.3;
commitid	kxIFVM8Z8FJYyz7h;

1.3
date	2014.10.31.13.39.22;	author sthen;	state Exp;
branches;
next	1.2;
commitid	z6RAJBQAo05kbwPc;

1.2
date	2014.09.16.11.55.04;	author sthen;	state Exp;
branches;
next	1.1;
commitid	8xekQgQiLiOSpiiy;

1.1
date	2014.05.22.14.16.55;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.05.22.14.16.55;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.24
log
@shuffle RDEPs again, we now have py3 flavours of everything needed to
be able to switch to py3 so no need to list them separately.
@
text
@# $OpenBSD: Makefile,v 1.23 2017/06/11 14:50:01 sthen Exp $

COMMENT =	CLI tools to manage music collections

MODPY_EGG_VERSION = 1.4.4
DISTNAME =	beets-${MODPY_EGG_VERSION}
CATEGORIES =	audio

MAINTAINER =	Stuart Henderson <sthen@@openbsd.org>

HOMEPAGE =	http://beets.io/

# MIT
PERMIT_PACKAGE_CDROM =  Yes

MODULES =	lang/python
MODPY_SETUPTOOLS = Yes
MODPY_PI =	Yes
USE_GROFF =	Yes

# not yet:
# MODPY_VERSION = ${MODPY_DEFAULT_VERSION_3}

# remove when switching to py3
RUN_DEPENDS+=	devel/py-enum34>=1.0.4

RUN_DEPENDS+=	audio/py-discogs-client${MODPY_FLAVOR}>=2.0.2 \
		audio/py-last${MODPY_FLAVOR} \
		audio/py-musicbrainzngs${MODPY_FLAVOR} \
		audio/py-mutagen${MODPY_FLAVOR} \
		devel/py-algorithm-munkres${MODPY_FLAVOR} \
		devel/py-six${MODPY_FLAVOR} \
		textproc/py-jellyfish${MODPY_FLAVOR} \
		textproc/py-unidecode${MODPY_FLAVOR} \
		textproc/py-yaml${MODPY_FLAVOR} \
		www/py-requests${MODPY_FLAVOR}

post-install:
	${INSTALL_MAN} ${WRKSRC}/man/beet.1 ${PREFIX}/man/man1
	${INSTALL_MAN} ${WRKSRC}/man/beetsconfig.5 ${PREFIX}/man/man5

# also wants responses, rarfile: currently fetches from pypi at test time
TEST_DEPENDS=	${RUN_DEPENDS} \
		audio/py-mpd2${MODPY_FLAVOR} \
		devel/py-mock${MODPY_FLAVOR} \
		devel/py-xdg${MODPY_FLAVOR} \
		www/py-beautifulsoup4${MODPY_FLAVOR} \
		www/py-flask${MODPY_FLAVOR}

do-test:
	${MODPY_TEST_TARGET}

.include <bsd.port.mk>
@


1.23
log
@adjust RUN_DEPENDS grouping, the only remaining dep for py3 support is py-discogs-client
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2017/06/11 14:08:39 sthen Exp $
d27 2
a28 1
RUN_DEPENDS+=	audio/py-last${MODPY_FLAVOR} \
a36 3

# XXX need py3 flavours for these before we can switch
RUN_DEPENDS+=	audio/py-discogs-client${MODPY_FLAVOR}>=2.0.2
@


1.22
log
@update to beets-1.4.4
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2017/01/10 14:43:00 sthen Exp $
d27 2
a28 2
RUN_DEPENDS+=	audio/py-discogs-client${MODPY_FLAVOR}>=2.0.2 \
		audio/py-last${MODPY_FLAVOR} \
d30 1
d38 1
a38 2
RUN_DEPENDS+=	audio/py-musicbrainzngs${MODPY_FLAVOR} \
		devel/py-algorithm-munkres${MODPY_FLAVOR}
@


1.21
log
@update to beets-1.4.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2016/12/16 11:22:39 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.4.3
a18 1
NO_TEST =	Yes
d21 1
a21 2
# py3 support is currently experimental; packagers are requested not
# to use it yet.
d24 4
a27 1
RUN_DEPENDS =	audio/py-discogs-client${MODPY_FLAVOR}>=2.0.2 \
d36 2
a37 2
# need py3 flavours for these before we can switch
RUN_DEPENDS +=	audio/py-musicbrainzngs${MODPY_FLAVOR} \
a39 3
# remove when switching to py3
RUN_DEPENDS+=	devel/py-enum34>=1.0.4

d43 11
@


1.20
log
@update to beets-1.4.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2016/08/26 18:25:34 danj Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.4.1
@


1.19
log
@add a missing entry in the plist (found while fiddling with py-setuptools
update)

ok sthen@@ (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2016/06/27 14:21:31 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.3.19
a7 1
REVISION =	0
d22 19
a40 10
RUN_DEPENDS =	audio/py-discogs-client>=2.0.2 \
		audio/py-musicbrainzngs \
		audio/py-last \
		audio/py-mutagen \
		devel/py-algorithm-munkres \
		devel/py-enum34>=1.0.4 \
		textproc/py-jellyfish \
		textproc/py-unidecode \
		textproc/py-yaml \
		www/py-requests
@


1.18
log
@update to beets-1.3.19
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2016/06/01 15:01:32 sthen Exp $
d8 1
@


1.17
log
@update to beets-1.3.18 (now that pypi.io updated..)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2016/02/25 00:44:34 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.3.18
@


1.16
log
@update to beets-1.3.17
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2015/12/29 19:37:55 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.3.17
@


1.15
log
@update to beets-1.3.16, lots of improvements including a nice new "edit"
plugin that allows editing tags in bulk in $EDITOR

release notes at https://github.com/sampsyo/beets/releases/tag/v1.3.16
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2015/10/18 10:40:43 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.3.16
d11 1
a11 1
HOMEPAGE =	http://beets.radbox.org/
a15 2
MODPY_PI =	Yes

d18 1
@


1.14
log
@update to beets-1.3.15
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2015/09/29 10:51:14 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.3.15
@


1.13
log
@bump REVISION for setuptools dep change.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2015/09/23 21:14:32 sthen Exp $
d5 1
a5 2
MODPY_EGG_VERSION = 1.3.14
REVISION =	1
@


1.12
log
@talk about OAuth in beets README; py-oauthlib update means a new token is needed
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2015/08/12 15:04:07 sthen Exp $
d6 1
a6 1
REVISION =	0
@


1.11
log
@update to beets-1.3.14
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2015/06/15 08:49:03 sthen Exp $
d6 1
@


1.10
log
@add missing rdep on py-jellyfish; from Johan Huldtgren
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2015/05/20 08:14:31 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.3.13
a7 1
REVISION =	0
@


1.9
log
@now that py-jellyfish is in, update to beets-1.3.13
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2015/04/08 10:55:31 sthen Exp $
d8 1
d30 1
@


1.8
log
@sprinkle some PORTROACH_COMMENTs
@
text
@a2 2
PORTROACH_COMMENT = 1.3.12+ needs py-jellyfish, waiting on OKs

d5 1
a5 1
MODPY_EGG_VERSION = 1.3.11
@


1.7
log
@update to beets-1.3.11
http://beets.readthedocs.org/en/latest/changelog.html#april-5-2015
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.6 2015/04/02 14:21:12 jasper Exp $
@


1.6
log
@- switch to MODPY_PI
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2015/01/09 17:15:29 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.3.10
d28 1
a28 1
		devel/py-enum34 \
@


1.5
log
@update to beets 1.3.10
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2014/11/20 01:43:59 sthen Exp $
d16 1
a16 1
MASTER_SITES =	${MASTER_SITE_PYPI:=b/beets/}
@


1.4
log
@update to beets 1.3.9
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/10/31 13:39:22 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.3.9
@


1.3
log
@update to beets 1.3.8

force a dependency on audio/py-discogs-client with a minimum version.
it's optional (only used by the discogs plugin) but the dep chain isn't
too bad and it's more userfriendly to prevent attempts to run it with
the old-API version that won't work.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2014/09/16 11:55:04 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.3.8
@


1.2
log
@update to beets 1.3.7, take maintainer
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2014/05/22 14:16:55 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.3.7
d23 2
a24 1
RUN_DEPENDS =	audio/py-musicbrainzngs \
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.68 2013/10/02 07:34:45 ajacoutot Exp $
d5 1
a5 1
MODPY_EGG_VERSION = 1.3.6
d8 2
@


1.1.1.1
log
@import ports/audio/beets, from Nils R with a few tweaks/feedback from various
including myself, bcallah, frantisek holop, Johan Huldtgren. ok abieber@@

The purpose of beets is to get your music collection right once and for
all. It catalogs your collection, automatically improving its metadata
as it goes using the MusicBrainz database. Then it provides a bouquet of
tools for manipulating and accessing your music.

Features include:

- Fetch or calculate metadata: album art, lyrics, genres, tempos,
ReplayGain levels, or acoustic fingerprints.

- Get metadata from MusicBrainz, Discogs, or Beatport. Or guess metadata
using songs' filenames or their acoustic fingerprints.

- Transcode audio.

- Check your library for duplicate tracks and albums or for albums
that are missing tracks.

- Browse your music library graphically through a Web browser and play
it in any browser that supports HTML5 Audio.
@
text
@@
