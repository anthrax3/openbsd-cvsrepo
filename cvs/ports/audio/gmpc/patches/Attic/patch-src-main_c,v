head	1.2;
access;
symbols
	OPENBSD_4_1:1.1.1.1.0.2
	OPENBSD_4_1_BASE:1.1.1.1
	jasper_20061027:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2007.03.23.23.42.00;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2006.10.27.14.11.16;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.10.27.14.11.16;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update to 0.14.0,
- pyr@@ drops maintainership.

based on a diff by Vlad Glagolev and Landry Breuil, with fixes by bernd@@

ok bernd@@, pyr@@
@
text
@--- src/main.c.orig	Wed Oct 25 19:53:00 2006
+++ src/main.c	Wed Oct 25 19:55:28 2006
@@@@ -379,6 +379,8 @@@@
 {
 	MpdData *data = NULL;
 	long long new_playlist_id = mpd_playlist_get_playlist_id(connection);
+	char *string;
+	
 	/*
 	 * so I don't have to check all the time
 	 */
@@@@ -387,7 +389,7 @@@@
 	gchar buffer[1024];
 	debug_printf(DEBUG_INFO, "playlist changed length: %i %i\n",info.playlist_length, mpd_playlist_get_playlist_length(mi));
 	old_length = info.playlist_length;
-	char *string = cfg_get_single_value_as_string_with_default(config,
+	string = cfg_get_single_value_as_string_with_default(config,
 			"playlist","markup", DEFAULT_PLAYLIST_MARKUP);
 
 	data = mpd_playlist_get_changes(mi,info.playlist_id);
@@@@ -804,6 +806,7 @@@@
 void error_callback(MpdObj *mi, int error_id, char *error_msg, gpointer data)
 {
 	int autoconnect = cfg_get_single_value_as_int_with_default(config, "connection","autoconnect", DEFAULT_AUTOCONNECT);
+	GtkWidget *dialog;
 	/* if we are not connected we show a reconnect */
 	if(!mpd_check_connected(mi))
 	{
@@@@ -816,7 +819,7 @@@@
 			gchar *path = gmpc_get_full_glade_path("gmpc.glade");
 			xml_error_window = glade_xml_new(path,"error_dialog",NULL);
 			g_free(path);
-			GtkWidget *dialog = glade_xml_get_widget(xml_error_window, "error_dialog");
+			dialog = glade_xml_get_widget(xml_error_window, "error_dialog");
 			gtk_label_set_markup(GTK_LABEL(glade_xml_get_widget(xml_error_window,"em_label")), str);
 			gtk_widget_show_all(dialog);
 			g_signal_connect(G_OBJECT(dialog), "response", G_CALLBACK(error_window_destroy), GINT_TO_POINTER(autoconnect));
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import gmpc 0.13.0

GMPC is a frontend for the mpd (Music Player Daemon).  It's focused on
being fast and easy to use, while still making optimal use of all the
functions in mpd.

from Pierre-Yves Ritschard <pyr at spootnik dot org>

feedback and ok steven
@
text
@@
