head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2012.05.22.18.38.48;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2010.06.14.17.44.46;	author sebastia;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.15.21.58.19;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.29.06.01.42;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to faad 2.7.

from Brad
@
text
@$OpenBSD: patch-plugins_xmms_src_libmp4_c,v 1.3 2010/06/14 17:44:46 sebastia Exp $
Some reordering of variable initialization fixes build with gcc-2.95
--- plugins/xmms/src/libmp4.c.orig	Tue Jun  5 21:00:18 2007
+++ plugins/xmms/src/libmp4.c	Mon Jun 14 18:30:32 2010
@@@@ -207,15 +207,17 @@@@ static void	mp4_getSongTitle(char *filename, char **ti
       mp4ff_callback_t*	mp4cb;
       mp4ff_t*		infile;
       gint		mp4track;
+      double 		track_duration;
+      unsigned long 	time_scale, length;
 
       mp4cb = getMP4FF_cb(mp4file);
       if ((infile = mp4ff_open_read_metaonly(mp4cb)) &&
           ((mp4track = getAACTrack(infile)) >= 0)){
         (*title) = getMP4title(infile, filename);
 
-        double track_duration = mp4ff_get_track_duration(infile, mp4track);
-        unsigned long time_scale = mp4ff_time_scale(infile, mp4track);
-        unsigned long length = (track_duration * 1000 / time_scale);
+        track_duration = mp4ff_get_track_duration(infile, mp4track);
+        time_scale = mp4ff_time_scale(infile, mp4track);
+        length = (track_duration * 1000 / time_scale);
         (*len) = length;
       }
       if(infile) mp4ff_close(infile);
@@@@ -290,7 +292,7 @@@@ static void *mp4Decode(void *args)
       NeAACDecHandle	decoder;
       unsigned char	*buffer	= NULL;
       guint		bufferSize = 0;
-      gulong		samplerate;
+      guint		samplerate;
       guchar		channels;
       //guint		avgBitrate;
       //MP4Duration	duration;
@@@@ -339,7 +341,7 @@@@ static void *mp4Decode(void *args)
       mp4_ip.output->open_audio(FMT_S16_NE, samplerate, channels);
       mp4_ip.output->flush(0);
       mp4_ip.set_info(xmmstitle, msDuration, -1, samplerate/1000, channels);
-      g_print("MP4 - %d channels @@ %ld Hz\n", channels, samplerate);
+      g_print("MP4 - %d channels @@ %d Hz\n", channels, samplerate);
 
       while(bPlaying){
 	void*			sampleBuffer;
@@@@ -414,8 +416,8 @@@@ end:
     FILE		*file = NULL;
     NeAACDecHandle	decoder = 0;
     guchar		*buffer = 0;
-    gulong		bufferconsumed = 0;
-    gulong		samplerate = 0;
+    gint		bufferconsumed = 0;
+    guint		samplerate = 0;
     guchar		channels;
     gulong		buffervalid = 0;
     TitleInput*		input;
@


1.3
log
@Fix build with gcc-2.95, bump pkgname
OKs from landry@@, jasper@@, sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-plugins_xmms_src_libmp4_c,v 1.2 2008/09/15 21:58:19 jakemsr Exp $
@


1.2
log
@- update to faad-2.6.1
- greatly simplify type-mismatch-correcting patches.  most of the
  mismatches actually match on size and signedness, so only fix the
  ones that don't match.  tested to work on sparc64 by naddy@@ a
  while back.
- libmp4v2 is no longer part of this package
@
text
@d1 26
a26 4
$OpenBSD$
--- plugins/xmms/src/libmp4.c.orig	Tue Jun  5 12:00:18 2007
+++ plugins/xmms/src/libmp4.c	Wed Jul 16 00:12:57 2008
@@@@ -290,7 +290,7 @@@@ static void *mp4Decode(void *args)
d35 1
a35 1
@@@@ -339,7 +339,7 @@@@ static void *mp4Decode(void *args)
d44 1
a44 1
@@@@ -414,8 +414,8 @@@@ end:
@


1.1
log
@problem:
libfaad uses data types with machine dependent bit width in
prototypes in its public headers, but in the corresponding library
code, machine independent exact width data types are used.

solution:
change libfaad headers to use the same machine independent exact
width data types in the prototypes as in the library.  since the
prototypes in the library headers are changed, users of libfaad
likely need to be modified to use exact width data types as well.

also:
- bump libfaad major version number
- update plugin code to use exact width data types for libfaad
  interaction, as per new prototypes
- bump package version
- sync patches with update-patches


problem discovered by, solution discussed with, reviewed, tested
and OK naddy@@
@
text
@d2 4
a5 27
--- plugins/xmms/src/libmp4.c.orig	Wed Dec  3 10:37:56 2003
+++ plugins/xmms/src/libmp4.c	Thu May 31 14:42:02 2007
@@@@ -22,6 +22,9 @@@@
 #define MP4_ABOUT	"Written by ciberfred"
 #define BUFFER_SIZE	FAAD_MIN_STREAMSIZE*64
 
+extern void     getMP4info(char* file);
+extern int      getAACTrack(MP4FileHandle file);
+
 static void	mp4_init(void);
 static void	mp4_about(void);
 static void	mp4_play(char *);
@@@@ -113,9 +116,9 @@@@ static int	mp4_isFile(char *filename)
 
     extention = strrchr(filename, '.');
     if (extention &&
-	!strcasecmp(extention, ".mp4") ||	// official extention
-	!strcasecmp(extention, ".m4a") ||	// Apple mp4 extention
-	!strcasecmp(extention, ".aac")		// old MPEG2/4-AAC extention
+	(!strcasecmp(extention, ".mp4") ||	// official extention
+	 !strcasecmp(extention, ".m4a") ||	// Apple mp4 extention
+	 !strcasecmp(extention, ".aac"))	// old MPEG2/4-AAC extention
 	){
       return (1);
     }
@@@@ -202,8 +205,8 @@@@ static void *mp4Decode(void *args)
       faacDecHandle	decoder;
d9 16
a24 8
-      guchar		channels;
+      guint32		samplerate;
+      guint8		channels;
       guint		avgBitrate;
       MP4Duration	duration;
       gulong		msDuration;
@@@@ -330,8 +333,8 @@@@ static void *mp4Decode(void *args)
     faacDecHandle	decoder = 0;
d26 1
a26 1
     gulong		bufferconsumed = 0;
d28 3
a30 3
-    guchar		channels;
+    guint32		samplerate = 0;
+    guint8		channels;
a32 1
     gchar		*temp = g_strdup(args);
@

