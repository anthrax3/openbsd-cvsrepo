head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.18
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.16
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.14
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.10
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.12
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.12
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.03.29.12.37.43;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.22.20.14.06;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.15.15.44.50;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.26.08.45.12;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@- update to FluidSynth 1.1.6

- disable jack dependency, it doesn't work (noticed by Jan Stary)

- add a note explaining that you need a soundfount and point people
at the generaluser-gs-soundfont package
@
text
@$OpenBSD$
--- configure.ac.orig	Thu Aug 16 05:01:13 2012
+++ configure.ac	Sun Mar 24 23:57:37 2013
@@@@ -94,7 +94,7 @@@@ dnl Check for GNU LD
 AC_LIB_PROG_LD_GNU
 AM_CONDITIONAL(GNU_LD_SUPPORT, test "x$with_gnu_ld" = "xyes")
 
-AM_CONDITIONAL(MINGW32_SUPPORT, test "$mingw32_support" == "yes")
+AM_CONDITIONAL(MINGW32_SUPPORT, test "$mingw32_support" = "yes")
 
 AC_ARG_ENABLE(double, AS_HELP_STRING([--enable-double],
 	[double floating point for dsp (default=float)]),
@@@@ -150,7 +150,7 @@@@ if test "$GCC" = yes; then
     CFLAGS="${CFLAGS} ${FCCFLAGS} -g -Wall -W -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wstrict-prototypes -Wno-unused-parameter -Wno-cast-qual"
     AC_DEFINE(DEBUG, 1, [Define to activate debugging message]) 
   else
-    CFLAGS="${CFLAGS} ${FCCFLAGS} -O2 -fomit-frame-pointer -funroll-all-loops -finline-functions -Wall -W -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wstrict-prototypes -Winline -Wno-unused-parameter -Wno-cast-qual"
+    CFLAGS="${CFLAGS} ${FCCFLAGS} -Wall -W -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wstrict-prototypes -Winline -Wno-unused-parameter -Wno-cast-qual"
     AC_DEFINE(DEBUG, 0, [Define to activate debugging message])
   fi
 fi
@@@@ -291,7 +291,27 @@@@ dnl - Check support for OSS audio
 AC_OSS_AUDIO
 AM_CONDITIONAL(OSS_SUPPORT, test "$OSS_SUPPORT" = "1")
 
+dnl - Check for sndio support
+AC_ARG_ENABLE(sndio-support, AS_HELP_STRING([--disable-sndio-support],
+	[disable sndio support (default=auto)]),
+  enable_sndio=$enableval, enable_sndio="yes")
 
+if test "x$enable_sndio" != "xno"; then
+  AC_CHECK_HEADER(sndio.h, SNDIO_SUPPORT=1, SNDIO_SUPPORT=0)
+else
+  SNDIO_SUPPORT=0
+fi
+
+if test "$SNDIO_SUPPORT" = "1"; then
+  AC_DEFINE(SNDIO_SUPPORT, 1, [Define to enable sndio driver])
+fi
+AM_CONDITIONAL(SNDIO_SUPPORT, test "$SNDIO_SUPPORT" = "1")
+SNDIO_CFLAGS=""
+AC_SUBST(SNDIO_CFLAGS)
+SNDIO_LIBS="-lsndio"
+AC_SUBST(SNDIO_LIBS)
+
+
 dnl - Check support for MidiShare
 AC_MIDISHARE
 
@@@@ -517,6 +537,12 @@@@ if test "${OSS_SUPPORT}" = "1"; then
   echo "OSS:                   yes"
 else 
   echo "OSS:                   no"
+fi
+
+if test "${SNDIO_SUPPORT}" = "1"; then
+  echo "sndio:                 yes"
+else 
+  echo "sndio:                 no"
 fi
 
 if test "${MIDISHARE_SUPPORT}" = "1"; then
@


1.3
log
@remove unneeded -pthread patches
@
text
@d1 6
a6 6
$OpenBSD: patch-configure_ac,v 1.2 2009/10/15 15:44:50 jakemsr Exp $
--- configure.ac.orig	Sun Apr 12 07:06:55 2009
+++ configure.ac	Tue Aug 21 17:28:07 2012
@@@@ -87,7 +87,7 @@@@ AC_SUBST(LIBFLUID_CPPFLAGS)
 AC_SUBST(LIBFLUID_LDFLAGS)
 AC_SUBST(FLUID_CPPFLAGS)
d13 8
a20 7
@@@@ -141,7 +141,7 @@@@ if test "$ENABLE_DEBUG" = "yes"; then
   CFLAGS="${CFLAGS} ${FCCFLAGS} -g -Wall -W -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wstrict-prototypes -Wno-unused"
   AC_DEFINE(DEBUG, 1, [Define to activate debugging message]) 
 else
-  CFLAGS="${CFLAGS} ${FCCFLAGS} -O2 -fomit-frame-pointer -funroll-all-loops -finline-functions -Wall -W -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wstrict-prototypes -Wno-unused -Winline"
+  CFLAGS="${CFLAGS} ${FCCFLAGS} -Wall -W -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wstrict-prototypes -Wno-unused -Winline"
   AC_DEFINE(DEBUG, 0, [Define to activate debugging message])
d22 1
a22 2
 
@@@@ -228,7 +228,27 @@@@ dnl - Check support for OSS audio
d50 1
a50 1
@@@@ -440,6 +460,12 @@@@ if test "${OSS_SUPPORT}" = "1"; then
@


1.2
log
@- update to 1.0.9
- inlude sndio(7) midi support from ratchov@@
- 'libsndio' -> 'sndio' renaming throughout
- completely disable OSS support
@
text
@d1 4
a4 14
$OpenBSD: patch-configure_ac,v 1.1 2008/12/26 08:45:12 jakemsr Exp $
--- configure.ac.orig	Sat Apr 11 22:06:55 2009
+++ configure.ac	Tue Oct 13 20:59:08 2009
@@@@ -50,7 +50,8 @@@@ AM_PROG_LIBTOOL
 AC_PROG_MAKE_SET
 
 dnl Check for libraries
-AC_CHECK_LIB(pthread, pthread_create)
+dnl AC_CHECK_LIB(pthread, pthread_create)
+LIBS="$LIBS -pthread"
 
 dnl Check for header files
 AC_HEADER_STDC
@@@@ -87,7 +88,7 @@@@ AC_SUBST(LIBFLUID_CPPFLAGS)
d13 1
a13 1
@@@@ -141,7 +142,7 @@@@ if test "$ENABLE_DEBUG" = "yes"; then
d22 1
a22 1
@@@@ -228,7 +229,27 @@@@ dnl - Check support for OSS audio
d50 1
a50 1
@@@@ -440,6 +461,12 @@@@ if test "${OSS_SUPPORT}" = "1"; then
@


1.1
log
@- add sndio backend
- drop OSS audio support but keep "OSS" midi support
@
text
@d1 4
a4 4
$OpenBSD$
--- configure.ac.orig	Sat Oct 18 20:58:26 2008
+++ configure.ac	Sat Oct 18 21:08:50 2008
@@@@ -49,7 +49,8 @@@@ AM_PROG_LIBTOOL
d14 1
a14 1
@@@@ -82,7 +83,7 @@@@ AC_SUBST(LIBFLUID_CPPFLAGS)
d23 1
a23 1
@@@@ -136,7 +137,7 @@@@ if test "$ENABLE_DEBUG" = "yes"; then
d32 1
a32 1
@@@@ -183,7 +184,27 @@@@ dnl - Check support for OSS audio
d36 4
a39 4
+dnl - Check for libsndio support
+AC_ARG_ENABLE(libsndio-support, AS_HELP_STRING([--disable-libsndio-support],
+	[disable libsndio support (default=auto)]),
+  enable_libsndio=$enableval, enable_libsndio="yes")
d41 2
a42 2
+if test "x$enable_libsndio" != "xno"; then
+  AC_CHECK_HEADER(sndio.h, LIBSNDIO_SUPPORT=1, LIBSNDIO_SUPPORT=0)
d44 1
a44 1
+  LIBSNDIO_SUPPORT=0
d47 2
a48 2
+if test "$LIBSNDIO_SUPPORT" = "1"; then
+  AC_DEFINE(LIBSNDIO_SUPPORT, 1, [Define to enable libsndio driver])
d50 5
a54 5
+AM_CONDITIONAL(LIBSNDIO_SUPPORT, test "$LIBSNDIO_SUPPORT" = "1")
+LIBSNDIO_CFLAGS=""
+AC_SUBST(LIBSNDIO_CFLAGS)
+LIBSNDIO_LIBS="-lsndio"
+AC_SUBST(LIBSNDIO_LIBS)
d60 1
a60 1
@@@@ -341,6 +362,12 @@@@ if test "${OSS_SUPPORT}" = "1"; then
d66 2
a67 2
+if test "${LIBSNDIO_SUPPORT}" = "1"; then
+  echo "libsndio:                 yes"
d69 1
a69 1
+  echo "libsndio:                 no"
@

