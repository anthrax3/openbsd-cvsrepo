head	1.4;
access;
symbols
	OPENBSD_5_3:1.3.0.14
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.12
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.10
	OPENBSD_5_0:1.3.0.8
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.03.29.12.37.43;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2009.12.24.10.34.43;	author jakemsr;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.15.15.44.50;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.26.08.45.12;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@- update to FluidSynth 1.1.6

- disable jack dependency, it doesn't work (noticed by Jan Stary)

- add a note explaining that you need a soundfount and point people
at the generaluser-gs-soundfont package
@
text
@$OpenBSD: patch-src_fluid_adriver_c,v 1.3 2009/12/24 10:34:43 jakemsr Exp $
--- src/fluid_adriver.c.orig	Sun Mar 15 18:02:15 2009
+++ src/fluid_adriver.c	Wed Dec 23 01:31:00 2009
@@@@ -64,6 +64,15 @@@@ int delete_fluid_oss_audio_driver(fluid_audio_driver_t
 void fluid_oss_audio_driver_settings(fluid_settings_t* settings);
 #endif
 
+#if SNDIO_SUPPORT
+fluid_audio_driver_t* new_fluid_sndio_audio_driver(fluid_settings_t* settings,
+						 fluid_synth_t* synth);
+fluid_audio_driver_t* new_fluid_sndio_audio_driver2(fluid_settings_t* settings,
+						fluid_audio_func_t func, void* data);
+int delete_fluid_sndio_audio_driver(fluid_audio_driver_t* p);
+void fluid_sndio_audio_driver_settings(fluid_settings_t* settings);
+#endif
+
 #if COREAUDIO_SUPPORT
 fluid_audio_driver_t* new_fluid_core_audio_driver(fluid_settings_t* settings,
 						  fluid_synth_t* synth);
@@@@ -122,6 +131,13 @@@@ void fluid_file_audio_driver_settings(fluid_settings_t
 
 /* Available audio drivers, listed in order of preference */
 fluid_audriver_definition_t fluid_audio_drivers[] = {
+#if SNDIO_SUPPORT
+  { "sndio",
+    new_fluid_sndio_audio_driver,
+    new_fluid_sndio_audio_driver2,
+    delete_fluid_sndio_audio_driver,
+    fluid_sndio_audio_driver_settings },
+#endif
 #if JACK_SUPPORT
   { "jack",
     new_fluid_jack_audio_driver,
@@@@ -222,7 +238,9 @@@@ void fluid_audio_driver_settings(fluid_settings_t* set
 #endif
 
   /* Set the default driver */
-#if JACK_SUPPORT
+#if SNDIO_SUPPORT
+  fluid_settings_register_str(settings, "audio.driver", "sndio", 0, NULL, NULL);
+#elif JACK_SUPPORT
   fluid_settings_register_str(settings, "audio.driver", "jack", 0, NULL, NULL);
 #elif ALSA_SUPPORT
   fluid_settings_register_str(settings, "audio.driver", "alsa", 0, NULL, NULL);
@@@@ -255,6 +273,9 @@@@ void fluid_audio_driver_settings(fluid_settings_t* set
 #endif
 #if OSS_SUPPORT
   fluid_settings_add_option(settings, "audio.driver", "oss");
+#endif
+#if SNDIO_SUPPORT
+  fluid_settings_add_option(settings, "audio.driver", "sndio");
 #endif
 #if COREAUDIO_SUPPORT
   fluid_settings_add_option(settings, "audio.driver", "coreaudio");
@


1.3
log
@make sndio audio and midi drivers the default.  remove patch to use
jackd default sample rate by default.  use SIO_LE_NATIVE.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_fluid_adriver_c,v 1.2 2009/10/15 15:44:50 jakemsr Exp $
@


1.2
log
@- update to 1.0.9
- inlude sndio(7) midi support from ratchov@@
- 'libsndio' -> 'sndio' renaming throughout
- completely disable OSS support
@
text
@d1 1
a1 1
$OpenBSD: patch-src_fluid_adriver_c,v 1.1 2008/12/26 08:45:12 jakemsr Exp $
d3 1
a3 1
+++ src/fluid_adriver.c	Tue Oct 13 20:55:26 2009
d20 4
a23 4
@@@@ -129,6 +138,13 @@@@ fluid_audriver_definition_t fluid_audio_drivers[] = {
     delete_fluid_jack_audio_driver,
     fluid_jack_audio_driver_settings },
 #endif
d31 9
a39 8
 #if ALSA_SUPPORT
   { "alsa",
     new_fluid_alsa_audio_driver,
@@@@ -230,6 +246,8 @@@@ void fluid_audio_driver_settings(fluid_settings_t* set
   fluid_settings_register_str(settings, "audio.driver", "pulseaudio", 0, NULL, NULL);
 #elif OSS_SUPPORT
   fluid_settings_register_str(settings, "audio.driver", "oss", 0, NULL, NULL);
+#elif SNDIO_SUPPORT
d41 4
a44 3
 #elif COREAUDIO_SUPPORT
   fluid_settings_register_str(settings, "audio.driver", "coreaudio", 0, NULL, NULL);
 #elif DSOUND_SUPPORT
@


1.1
log
@- add sndio backend
- drop OSS audio support but keep "OSS" midi support
@
text
@d1 4
a4 4
$OpenBSD$
--- src/fluid_adriver.c.orig	Sat Oct 18 20:34:27 2008
+++ src/fluid_adriver.c	Sat Oct 18 20:36:59 2008
@@@@ -56,6 +56,15 @@@@ int delete_fluid_oss_audio_driver(fluid_audio_driver_t
d8 2
a9 2
+#if LIBSNDIO_SUPPORT
+fluid_audio_driver_t* new_fluid_libsndio_audio_driver(fluid_settings_t* settings,
d11 1
a11 1
+fluid_audio_driver_t* new_fluid_libsndio_audio_driver2(fluid_settings_t* settings,
d13 2
a14 2
+int delete_fluid_libsndio_audio_driver(fluid_audio_driver_t* p);
+void fluid_libsndio_audio_driver_settings(fluid_settings_t* settings);
d20 3
a22 3
@@@@ -112,6 +121,13 @@@@ fluid_audriver_definition_t fluid_audio_drivers[] = {
     delete_fluid_oss_audio_driver,
     fluid_oss_audio_driver_settings },
d24 6
a29 6
+#if LIBSNDIO_SUPPORT
+  { "libsndio",
+    new_fluid_libsndio_audio_driver,
+    new_fluid_libsndio_audio_driver2,
+    delete_fluid_libsndio_audio_driver,
+    fluid_libsndio_audio_driver_settings },
d34 2
a35 6
@@@@ -193,6 +209,8 @@@@ void fluid_audio_driver_settings(fluid_settings_t* set
   /* Set the default driver */
 #if ALSA_SUPPORT
   fluid_settings_register_str(settings, "audio.driver", "alsa", 0, NULL, NULL);
+#elif LIBSNDIO_SUPPORT
+  fluid_settings_register_str(settings, "audio.driver", "libsndio", 0, NULL, NULL);
d38 2
d41 3
a43 1
@@@@ -217,6 +235,9 @@@@ void fluid_audio_driver_settings(fluid_settings_t* set
d48 2
a49 2
+#if LIBSNDIO_SUPPORT
+  fluid_settings_add_option(settings, "audio.driver", "libsndio");
@

