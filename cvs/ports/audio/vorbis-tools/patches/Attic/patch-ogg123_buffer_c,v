head	1.7;
access;
symbols
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_2_9_TRACKING_SWITCH:1.3
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	vorbis-tools_1_0beta4:1.1.1.1
	vorbis-tools:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2002.07.20.00.52.45;	author naddy;	state dead;
branches;
next	1.6;

1.6
date	2002.01.19.15.33.20;	author naddy;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.16.03.10.21;	author naddy;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.20.21.53.57;	author naddy;	state dead;
branches;
next	1.3;

1.3
date	2001.06.30.13.18.11;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.17.17.07.11;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.14.01.58.25;	author todd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.14.01.58.25;	author todd;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Welcome to Ogg Vorbis 1.0!
@
text
@$OpenBSD: patch-ogg123_buffer_c,v 1.6 2002/01/19 15:33:20 naddy Exp $
--- ogg123/buffer.c.orig	Thu Dec 20 01:24:53 2001
+++ ogg123/buffer.c	Sat Jan 19 16:08:26 2002
@@@@ -85,12 +85,6 @@@@ void buffer_thread_cleanup (void *arg)
   buf_t *buf = (buf_t *)arg;
 
   DEBUG("Enter buffer_thread_cleanup");
-
-  /* Cleanup thread data structures */
-  pthread_mutex_unlock(&buf->mutex);
-  pthread_mutex_destroy(&buf->mutex);
-  pthread_cond_destroy(&buf->playback_cond);
-  pthread_cond_destroy(&buf->write_cond);
 }
 
 
@@@@ -430,6 +424,12 @@@@ void buffer_reset (buf_t *buf)
 void buffer_destroy (buf_t *buf)
 {
   DEBUG("buffer_destroy");
+
+  /* Cleanup pthread variables */
+  pthread_mutex_destroy(&buf->mutex);
+  pthread_cond_destroy(&buf->write_cond);
+  pthread_cond_destroy(&buf->playback_cond);
+  
   free(buf);
 }
 
@


1.6
log
@proper threads fix from Xiph CVS
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@Upgrade to Ogg Vorbis RC3.

Note: When encoding, use -q for quality and bitrate control.  -b
has deen deprecated and will not do what you expect.
@
text
@d2 4
a5 3
--- ogg123/buffer.c.orig	Tue Jan 15 19:20:06 2002
+++ ogg123/buffer.c	Tue Jan 15 19:21:17 2002
@@@@ -88,9 +88,11 @@@@ void buffer_thread_cleanup (void *arg)
d7 7
a13 7
   /* Cleanup thread data structures */
   pthread_mutex_unlock(&buf->mutex);
+#if 0	/* KLUDGE: disabling this keeps ogg123 from crashing */
   pthread_mutex_destroy(&buf->mutex);
   pthread_cond_destroy(&buf->playback_cond);
   pthread_cond_destroy(&buf->write_cond);
+#endif
d16 13
@


1.4
log
@Update Ogg Vorbis to 1.0rc2.
Adds channel coupling.
Miscellaneous changes to libao and vorbis-tools.
@
text
@d1 11
a11 12
$OpenBSD: patch-ogg123_buffer_c,v 1.3 2001/06/30 13:18:11 naddy Exp $
--- ogg123/buffer.c.orig	Sat Jun 30 13:57:20 2001
+++ ogg123/buffer.c	Sat Jun 30 14:01:55 2001
@@@@ -6,16 +6,16 @@@@
  */
 
 #include <sys/types.h>
+#if HAVE_SMMAP
+#include <sys/mman.h>
+#else
 #include <sys/ipc.h>
 #include <sys/shm.h>
d13 1
a13 35
 #include <sys/time.h>
 #include <unistd.h> /* for fork and pipe*/
 #include <fcntl.h>
 
-#ifndef DARWIN
-#include <malloc.h>
-#endif
-
 #include "ogg123.h"
 #include "buffer.h"
 
@@@@ -72,6 +72,22 @@@@ buf_t *fork_writer (long size, devices_t
   int childpid;
   buf_t *buf;
 
+#if HAVE_SMMAP
+  int fd;
+
+  if ((fd = open("/dev/zero", O_RDWR)) < 0)
+    {
+      perror ("cannot open /dev/zero");
+      exit (1);
+    }
+  if ((buf = (buf_t *) mmap (0, sizeof(buf_t) + sizeof (chunk_t) * (size - 1),
+                             PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0)) < 0)
+    {
+      perror("mmap");
+      exit(1);
+    }
+  close(fd);
+#else
   /* Get the shared memory segment. */
   int shmid = shmget (IPC_PRIVATE,
 			  sizeof(buf_t) + sizeof (chunk_t) * (size - 1),
@@@@ -94,6 +110,7 @@@@ buf_t *fork_writer (long size, devices_t
a14 3
   /* Remove segment after last process detaches it or terminates. */
   shmctl(shmid, IPC_RMID, 0);
+#endif /* HAVE_SMMAP */
a15 2
   buffer_init (buf, size);
   
@


1.3
log
@Update Ogg Vorbis libs and tools to RC1.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Fix ogg123 buffering.  Prefer shared memory by mmap() over SYSVSHM
even after fixing the latter.
@
text
@d2 3
a4 3
--- ogg123/buffer.c.orig	Tue Jan 30 11:42:48 2001
+++ ogg123/buffer.c	Sat Mar 17 17:12:02 2001
@@@@ -6,17 +6,16 @@@@
a12 1
-#include <sys/stat.h>
d25 1
a25 1
@@@@ -73,10 +72,26 @@@@ buf_t *fork_writer (long size, devices_t
d48 1
a48 2
-			  IPC_CREAT|S_IREAD|S_IWRITE);
+			  IPC_CREAT|SHM_R|SHM_W);
d50 2
a51 10
   if (shmid == -1)
     {
@@@@ -92,7 +107,11 @@@@ buf_t *fork_writer (long size, devices_t
       perror ("shmat");
       exit (1);
     }
-  
+
+  /* Remove segment after last process detaches it or terminates. */
+  shmctl(shmid, IPC_RMID, 0);
d53 1
a53 1
+
a55 1
   /* Create a pipe for communication between the two processes. Unlike
@


1.1
log
@Initial revision
@
text
@d2 14
a15 3
--- ogg123/buffer.c.orig	Tue Mar 13 17:35:55 2001
+++ ogg123/buffer.c	Tue Mar 13 17:36:36 2001
@@@@ -13,10 +13,6 @@@@
d26 41
@


1.1.1.1
log
@These tools will allow you to play, encode and manage Ogg Vorbis
files.
@
text
@@
