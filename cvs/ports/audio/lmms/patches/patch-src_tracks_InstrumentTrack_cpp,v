head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.2
	OPENBSD_6_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2017.05.04.13.57.28;	author espie;	state Exp;
branches;
next	;
commitid	mbxAvsEfgMk8yBd4;


desc
@@


1.1
log
@fix build with clang
@
text
@$OpenBSD$
no separate scope -> different name

Index: src/tracks/InstrumentTrack.cpp
--- src/tracks/InstrumentTrack.cpp.orig
+++ src/tracks/InstrumentTrack.cpp
@@@@ -632,7 +632,7 @@@@ bool InstrumentTrack::play( const midiTime & _start,
 		// get all notes from the given pattern...
 		const NoteVector & notes = p->notes();
 		// ...and set our index to zero
-		NoteVector::ConstIterator it = notes.begin();
+		NoteVector::ConstIterator it2 = notes.begin();
 #if LMMS_SINGERBOT_SUPPORT
 		int note_idx = 0;
 #endif
@@@@ -644,10 +644,10 @@@@ bool InstrumentTrack::play( const midiTime & _start,
 		if( cur_start > 0 )
 		{
 			// skip notes which are posated before start-tact
-			while( it != notes.end() && ( *it )->pos() < cur_start )
+			while( it2 != notes.end() && ( *it2 )->pos() < cur_start )
 			{
 #if LMMS_SINGERBOT_SUPPORT
-				if( ( *it )->length() != 0 )
+				if( ( *it2 )->length() != 0 )
 				{
 					++note_idx;
 				}
@@@@ -657,8 +657,8 @@@@ bool InstrumentTrack::play( const midiTime & _start,
 		}
 
 		note * cur_note;
-		while( it != notes.end() &&
-					( cur_note = *it )->pos() == cur_start )
+		while( it2 != notes.end() &&
+					( cur_note = *it2 )->pos() == cur_start )
 		{
 			if( cur_note->length() != 0 )
 			{
@@@@ -681,7 +681,7 @@@@ bool InstrumentTrack::play( const midiTime & _start,
 				++note_idx;
 #endif
 			}
-			++it;
+			++it2;
 		}
 	}
 	return played_a_note;
@
