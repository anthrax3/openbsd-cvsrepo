head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.24
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.22
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.18
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.20
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.16
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.14
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.12
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_3_8:1.1.0.20
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.18
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.16
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.14
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.12
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.10
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.8
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.6
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2011.05.30.10.58.28;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.13.18.05.20;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2001.03.29.11.41.28;	author obecian;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fix build with gcc2
@
text
@$OpenBSD$
--- marc.c.orig	Mon May 30 04:53:15 2011
+++ marc.c	Mon May 30 04:53:49 2011
@@@@ -63,6 +63,7 @@@@ char *arg[];			       /* pointers to arguments */
     VOID exitpause();
 #endif
     int n;			       /* index */
+    int fd;
 #if	UNIX
     struct	stat	sbuf;
 #endif
@@@@ -123,7 +124,7 @@@@ char *arg[];			       /* pointers to arguments */
 #if	!MSDOS
 	{
 		strcat(arctemp, "AXXXXXX");
-		int fd = mkstemp(arctemp);
+		fd = mkstemp(arctemp);
 		if (fd == -1)
 		{
 			fprintf(stderr, "Unable to create temporary files: %s\n", strerror(errno));
@


1.2
log
@Update to 5.21n.
The upstream code now opens temporary files in a secure manner.
@
text
@d1 8
a8 3
--- ./marc.c.orig	Tue Apr 14 18:59:21 1992
+++ ./marc.c	Wed Aug 11 10:22:31 1999
@@@@ -28,12 +28,17 @@@@
d10 1
a10 26
 #include <sys/types.h>
 #include <sys/stat.h>
+#include <errno.h>
+#include <unistd.h>
+#include <string.h>
+#include <err.h>
 #endif
 
 #ifndef	__STDC__
 char *calloc(), *malloc(), *realloc(); /* memory managers */
 #endif
 VOID	arcdie();
+int move(),setstamp();
 static VOID expandlst(), merge();
 
 FILE *src;			       /* source archive */
@@@@ -50,7 +55,7 @@@@
     char *makefnam();		       /* filename fixup routine */
     char *envfind();
 #if	!_MTS
-    char *arctemp2, *mktemp();		/* temp file stuff */
+    char *arctemp2;		       /* temp file stuff */
 #endif
 #if	GEMDOS
     VOID exitpause();
@@@@ -114,8 +119,18 @@@@
d12 1
d15 6
a20 37
-		static char tempname[] = "AXXXXXX";
-		strcat(arctemp, mktemp(tempname));
+		static char tempname[] = "AXXXXXX.arc";
+		int fd=-1;
+		strcat(arctemp, tempname);
+		if((fd = mkstemps(arctemp,4)) == -1 ||
+		   (new = fdopen(fd, "w+")) == NULL) {
+			if (fd != -1) {
+				unlink(arctemp);
+				close(fd);
+			}
+			err(1, "can't create temp file %s", arctemp);
+		}
+
 	}
 #else
 	strcat(arctemp, "$ARCTEMP");
@@@@ -148,8 +163,10 @@@@
     arc = fopen(arcname,OPEN_R);	       /* open the archives */
     if(!(src=fopen(srcname,OPEN_R)))
 	 arcdie("Cannot read source archive %s",srcname);
+#ifndef __OpenBSD__ /* this is insecure, see mkstemp(3) */
     if(!(new=fopen(newname,OPEN_W)))
 	 arcdie("Cannot create new archive %s",newname);
+#endif
 
     if(!arc)
 	 printf("Creating new archive %s\n",arcname);
@@@@ -283,7 +300,7 @@@@
     else return 0;		       /* or fake end of archive */
 }
 
-copyfile(f,hdr,ver)		       /* copy a file from an archive */
+int copyfile(f,hdr,ver)		       /* copy a file from an archive */
 FILE *f;			       /* archive to copy from */
 struct heads *hdr;		       /* header data for file */
 int ver;			       /* header version */
@


1.1
log
@+ rename patches
+ integrate COMMENT
+ bump version

ports/archivers - ports@@ maintained ports
@
text
@@

