head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	98.03.27.04.51.58;	author marc;	state dead;
branches;
next	1.1;

1.1
date	98.01.20.22.27.09;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@removed: port was never completed, used out of date beta sources
and could not be tested as unzip with encryption was never ported.
@
text
@*** fileio.c.orig	Tue Jan 20 15:44:03 1998
--- fileio.c	Tue Jan 20 15:51:36 1998
***************
*** 633,643 ****
  }
  
  
! char *tempname(zip)
  char *zip;              /* path name of zip file to generate temp name for */
! 
  /* Return a temporary file name in its own malloc'ed space, using tempath. */
  {
    char *t = zip;   /* malloc'ed space for name (use zip to avoid warning) */
  
  #ifdef CMS_MVS
--- 633,645 ----
  }
  
  
! char *tempname(zip,fpfp)
  char *zip;              /* path name of zip file to generate temp name for */
! FILE **fpfp;
  /* Return a temporary file name in its own malloc'ed space, using tempath. */
  {
+   int fdfd;
+ 
    char *t = zip;   /* malloc'ed space for name (use zip to avoid warning) */
  
  #ifdef CMS_MVS
***************
*** 732,738 ****
    }
    else
    {
!     if ((t = malloc(12)) == NULL)
        return NULL;
      *t = 0;
    }
--- 734,740 ----
    }
    else
    {
!     if ((t = malloc(17)) == NULL)
        return NULL;
      *t = 0;
    }
***************
*** 744,750 ****
    }
  #else
    strcat(t, "ziXXXXXX"); /* must use lowercase for Linux dos file system */
!   return mktemp(t);
  #endif /* NO_MKTEMP */
  #endif /* TANDEM */
  #endif /* CMS_MVS */
--- 746,768 ----
    }
  #else
    strcat(t, "ziXXXXXX"); /* must use lowercase for Linux dos file system */
! 
!   fdfd = mkstemp(t);
!   if (fdfd == -1)
!   {
! 	free(t);
! 	return NULL;
!   }
! 
!   *fpfp = fdopen(fdfd, "w+");
!   if (*fpfp == NULL)
!   {
! 	free(t);
! 	close(fdfd);
! 	return NULL;
!   }
! 
!   return t;
  #endif /* NO_MKTEMP */
  #endif /* TANDEM */
  #endif /* CMS_MVS */
@


1.1
log
@fix tmpnam usage
@
text
@@

