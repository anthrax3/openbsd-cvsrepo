head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.42
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.40
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.36
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.38
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.34
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.32
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.30
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.28
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.26
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.24
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.22
	OPENBSD_5_0:1.2.0.20
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.18
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.16
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.10
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.8
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.6
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.1.1.0.6
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.4
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.2
	OPENBSD_3_8_BASE:1.1.1.1
	naddy_20050330:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2007.01.04.23.38.23;	author kili;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.30.00.02.08;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.03.30.00.02.08;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
Update to 2.1.
Also, change maintainer's address.

From maintainer (Lawrence Teo).

ok, steven@@
@
text
@$OpenBSD$
--- main.c.orig	Mon Feb 13 19:38:23 2006
+++ main.c	Mon Jan  1 18:26:21 2007
@@@@ -51,7 +51,7 @@@@ static void write_magic(int fd_in, int f
 	uint32_t v;
 
 	memset(magic, 0, sizeof(magic));
-	strcpy(magic, "RZIP");
+	strncpy(magic, "RZIP", 4);
 	magic[4] = RZIP_MAJOR_VERSION;
 	magic[5] = RZIP_MINOR_VERSION;
 
@@@@ -131,6 +131,9 @@@@ static void decompress_file(struct rzip_
 
 	if (control->outname) {
 		control->outfile = strdup(control->outname);
+		if (control->outfile == NULL) {
+			fatal("Failed to allocate memory for output filename");
+		}
 	} else {
 		if (strlen(control->suffix) >= strlen(control->infile) ||
 		    strcmp(control->suffix, 
@@@@ -140,6 +143,9 @@@@ static void decompress_file(struct rzip_
 		}
 		
 		control->outfile = strdup(control->infile);
+		if (control->outfile == NULL) {
+			fatal("Failed to allocate memory for output filename");
+		}
 		control->outfile[strlen(control->infile) - strlen(control->suffix)] = 0;
 	}
 
@@@@ -208,14 +214,19 @@@@ static void compress_file(struct rzip_co
 
 	if (control->outname) {
 		control->outfile = strdup(control->outname);
+		if (control->outfile == NULL) {
+			fatal("Failed to allocate memory for output filename");
+		}
 	} else {
-		control->outfile = malloc(strlen(control->infile) + 
-					  strlen(control->suffix) + 1);
+		size_t len;
+
+		len = strlen(control->infile) + strlen(control->suffix) + 1;
+		control->outfile = malloc(len);
 		if (!control->outfile) {
 			fatal("Failed to allocate outfile name\n");
 		}
-		strcpy(control->outfile, control->infile);
-		strcat(control->outfile, control->suffix);
+		strlcpy(control->outfile, control->infile, len);
+		strlcat(control->outfile, control->suffix, len);
 	}
 
 	fd_in = open(control->infile,O_RDONLY);
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
--- main.c.orig	Thu Feb 12 01:01:08 2004
+++ main.c	Tue Mar 29 22:53:26 2005
@@@@ -50,7 +50,7 @@@@ static void write_magic(int fd_in, int f
d13 1
a13 5
@@@@ -127,9 +127,13 @@@@ static void decompress_file(struct rzip_
 {
 	int fd_in, fd_out = -1, fd_hist = -1;
 	off_t expected_size;
+	size_t n;
d23 1
a23 2
@@@@ -138,9 +142,12 @@@@ static void decompress_file(struct rzip_
 			fatal("%s: unknown suffix\n", control->infile);
d26 1
a26 5
-		control->outfile = strndup(control->infile, 
-					   strlen(control->infile) - 
-					   strlen(control->suffix));
+		n = strlen(control->infile) - strlen(control->suffix) + 1;
+		control->outfile = malloc(n);
d30 1
a30 1
+		strlcpy(control->outfile, control->infile, n);
d33 1
a33 2
 	fd_in = open(control->infile,O_RDONLY);
@@@@ -208,6 +215,9 @@@@ static void compress_file(struct rzip_co
d41 13
a53 1
 		asprintf(&control->outfile, "%s%s", control->infile, control->suffix);
d55 2
@


1.1.1.1
log
@Import rzip 2.0; submitted by Lawrence Teo <lteo.openbsd1@@mailnull.com>.

rzip is a compression program that is similar to gzip and bzip2.
The primary difference is that rzip is able to exploit long
distance redundancies in files, which enables rzip to produce
much better compression ratios (sometimes).
@
text
@@
