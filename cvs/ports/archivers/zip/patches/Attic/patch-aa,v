head	1.8;
access;
symbols
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3;
locks; strict;
comment	@# @;


1.8
date	2000.07.24.02.06.59;	author brad;	state dead;
branches;
next	1.7;

1.7
date	2000.03.26.22.12.27;	author brad;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2000.03.16.03.34.05;	author kevlo;	state Exp;
branches;
next	1.5;

1.5
date	99.12.18.01.48.51;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	98.06.22.10.18.09;	author form;	state dead;
branches;
next	1.3;

1.3
date	97.11.25.22.22.42;	author angelos;	state Exp;
branches;
next	1.2;

1.2
date	97.11.25.21.33.33;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	97.11.24.23.36.23;	author angelos;	state Exp;
branches;
next	;

1.7.2.1
date	2000.09.15.04.40.56;	author marc;	state dead;
branches;
next	;


desc
@@


1.8
log
@use better filename for patch
@
text
@--- unix/Makefile.orig	Mon Nov 29 00:22:42 1999
+++ unix/Makefile	Sun Mar 26 17:07:23 2000
@@@@ -125,10 +125,10 @@@@
 # install
 install:        $(ZIPS)
 	-$(INSTALL_D) $(BINDIR)
-	$(INSTALL) $(ZIPS) $(BINDIR)
+	$(BSD_INSTALL_PROGRAM) $(ZIPS) $(BINDIR)
 	-cd $(BINDIR); $(CHMOD) $(BINFLAGS) $(ZIPS)
 	-$(INSTALL_D) $(MANDIR)
-	$(INSTALL) man/zip.1 $(MANDIR)/zip.$(manext)
+	$(BSD_INSTALL_MAN) man/zip.1 $(MANDIR)/zip.$(manext)
 	$(CHMOD) $(MANFLAGS) $(MANDIR)/zip.$(manext)
 
 uninstall:
@


1.7
log
@- make use of MAKE_FLAGS
- bump NEED_VERSION
@
text
@@


1.7.2.1
log
@bring cut-off archivers into 2.7 branch
@
text
@@


1.6
log
@- upgrade to version 2.3
- update the MASTER_SITES. The original site has been moved
- Fake
@
text
@d1 3
a3 29
--- unix/Makefile.orig	Mon Nov 29 13:22:42 1999
+++ unix/Makefile	Thu Mar 16 19:23:06 2000
@@@@ -17,7 +17,6 @@@@
 LN = ln -s
 
 # (to use the Gnu compiler, change cc to gcc in CC)
-CC = cc
 BIND = $(CC)
 AS = $(CC) -c
 E =
@@@@ -33,7 +32,7 @@@@
 MANFLAGS = 444
 
 # target directories - where to install executables and man pages to
-prefix = /usr/local
+prefix = ${PREFIX}
 BINDIR = $(prefix)/bin
 manext=1
 MANDIR = $(prefix)/man/man$(manext)
@@@@ -45,7 +44,7 @@@@
 #   CFLAGS    flags for C compile
 #   LFLAGS1   flags after output file spec, before obj file list
 #   LFLAGS2   flags after obj file list (libraries, etc)
-CFLAGS = -O2 -I. -DUNIX $(LOCAL_ZIP)
+CFLAGS += -I. -DUNIX
 LFLAGS1 =
 LFLAGS2 = -s
 
@@@@ -125,10 +124,10 @@@@
@


1.5
log
@- remove do-install target
- cleanup Makefile
- make this port respect CC and CFLAGS
- use zip's own install target and use BSD_INSTALL macros instead of just
copying the files
@
text
@d1 3
a3 3
--- unix/Makefile.orig	Fri Oct 24 14:38:04 1997
+++ unix/Makefile	Fri Dec 17 20:40:11 1999
@@@@ -16,7 +16,6 @@@@
d11 2
a12 2
@@@@ -28,7 +27,7 @@@@
 INSTALL_D = mkdir -p
d16 1
a16 1
+prefix = $(PREFIX)
d20 1
a20 1
@@@@ -40,7 +39,7 @@@@
d24 1
a24 1
-CFLAGS = -O -I. -DUNIX $(LOCAL_ZIP)
d29 1
a29 1
@@@@ -120,9 +119,9 @@@@
d35 1
d39 1
a41 1
 	-cd $(BINDIR); rm -f $(ZIPS)
@


1.4
log
@fix...
@
text
@d1 40
a40 104
*** zipnote.c.orig	Mon Apr  1 12:10:51 1996
--- zipnote.c	Tue Nov 25 17:19:01 1997
***************
*** 403,409 ****
  
    /* Process stdin, replacing comments */
    z = zfiles;
!   while (gets(a) != NULL && (a[0] != MARK || strcmp(a + 1, MARKZ)))
    {                                     /* while input and not file comment */
      if (a[0] != MARK || a[1] != ' ')    /* better be "@@ name" */
        ziperr(ZE_NOTE, "unexpected input");
--- 403,409 ----
  
    /* Process stdin, replacing comments */
    z = zfiles;
!   while (fgets(a, FNMAX, stdin) != NULL && (a[0] != MARK || strcmp(a + 1, MARKZ)))
    {                                     /* while input and not file comment */
      if (a[0] != MARK || a[1] != ' ')    /* better be "@@ name" */
        ziperr(ZE_NOTE, "unexpected input");
***************
*** 411,417 ****
        z = z->nxt;                       /* allow missing entries in order */
      if (z == NULL)
        ziperr(ZE_NOTE, "unknown entry name");
!     if (gets(a) != NULL && a[0] == MARK && a[1] == '=')
      {
        if (z->name != z->zname)
          free((zvoid *)z->zname);
--- 411,417 ----
        z = z->nxt;                       /* allow missing entries in order */
      if (z == NULL)
        ziperr(ZE_NOTE, "unknown entry name");
!     if (fgets(a, FNMAX, stdin) != NULL && a[0] == MARK && a[1] == '=')
      {
        if (z->name != z->zname)
          free((zvoid *)z->zname);
***************
*** 422,428 ****
   * Don't update z->nam here, we need the old value a little later.....
   * The update is handled in zipcopy().
   */
!       gets(a);
      }
      if (z->com)                         /* change zip entry comment */
        free((zvoid *)z->comment);
--- 422,428 ----
   * Don't update z->nam here, we need the old value a little later.....
   * The update is handled in zipcopy().
   */
!       fgets(a, FNMAX, stdin);
      }
      if (z->com)                         /* change zip entry comment */
        free((zvoid *)z->comment);
***************
*** 431,437 ****
      {
        if ((r = catalloc(&(z->comment), a)) != ZE_OK)
          ziperr(r, "was building new comments");
!       gets(a);
      }
      z->com = strlen(z->comment);
      z = z->nxt;                         /* point to next entry */
--- 431,437 ----
      {
        if ((r = catalloc(&(z->comment), a)) != ZE_OK)
          ziperr(r, "was building new comments");
!       fgets(a, FNMAX, stdin);
      }
      z->com = strlen(z->comment);
      z = z->nxt;                         /* point to next entry */
***************
*** 439,452 ****
    if (a != NULL)                        /* change zip file comment */
    {
      zcomment = malloc(1);  *zcomment = 0;
!     while (gets(a) != NULL)
        if ((r = catalloc(&zcomment, a)) != ZE_OK)
          ziperr(r, "was building new comments");
      zcomlen = strlen(zcomment);
    }
  
    /* Open output zip file for writing */
!   if ((tempzf = y = fopen(tempzip = tempname(zipfile), FOPW)) == NULL)
      ziperr(ZE_TEMP, tempzip);
  
    /* Open input zip file again, copy preamble if any */
--- 439,455 ----
    if (a != NULL)                        /* change zip file comment */
    {
      zcomment = malloc(1);  *zcomment = 0;
!     while (fgets(a, FNMAX, stdin) != NULL)
        if ((r = catalloc(&zcomment, a)) != ZE_OK)
          ziperr(r, "was building new comments");
      zcomlen = strlen(zcomment);
    }
  
    /* Open output zip file for writing */
!   tempzip = tempname(zipfile, &y);
!   tempzf = y;
! 
!   if ((tempzf == NULL) || (tempzip == NULL))
      ziperr(ZE_TEMP, tempzip);
  
    /* Open input zip file again, copy preamble if any */
@


1.3
log
@Fix for my fix :-)
@
text
@@


1.2
log
@Fix mktemp() race conditions.
@
text
@d2 1
a2 1
--- zipnote.c	Tue Nov 25 16:28:00 1997
d98 1
a98 1
!   tempzip = tempname(zipfile, y);
@


1.1
log
@Fix gets() usage.
@
text
@d1 2
a2 2
*** zipnote.c.orig	Mon Nov 24 18:28:46 1997
--- zipnote.c	Mon Nov 24 18:29:53 1997
d72 1
a72 1
*** 439,445 ****
d80 8
a87 1
--- 439,445 ----
d95 10
@
