head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2017.06.27.01.35.20;	author sthen;	state Exp;
branches;
next	;
commitid	9GbF4ACeofL09JTj;


desc
@@


1.1
log
@update to lz4-1.7.5 + upstream patch for https://github.com/lz4/lz4/issues/369
which reads a byte from invalid memory, crashing tests on OpenBSD. Info at
https://github.com/lz4/lz4/commit/6ad3a983dbf3a25273e04051d29022c72c469cd5
@
text
@$OpenBSD$

From 6ad3a983dbf3a25273e04051d29022c72c469cd5 Mon Sep 17 00:00:00 2001
From: Yann Collet <cyan@@fb.com>
Date: Mon, 26 Jun 2017 11:29:05 -0700
Subject: [PATCH] fix #369

The bug would make the bt search read one byte in an invalid memory region,
and make a branch decision based on its value.
Impact was small (missed compression opportunity).
It only happens in -BD mode, with extDict-prefix overlapping matches.

The bt match search is supposed to work also in extDict mode.
In which case, the match ptr can point into Dict.
When the match was overlapping Dict<->Prefix,
match[matchLength] would end up outside of Dict, in an invalid memory area.
The correction ensures that in such a case,
match[matchLength] ends up at intended location, inside prefix.
---
 lib/lz4.c    | 14 +++++++++++++-
 lib/lz4opt.h |  5 +++++
 2 files changed, 18 insertions(+), 1 deletion(-)

Index: lib/lz4.c
--- lib/lz4.c.orig
+++ lib/lz4.c
@@@@ -281,9 +281,21 @@@@ static const int LZ4_minLength = (MFLIMIT+1);
 
 
 /*-************************************
-*  Common Utils
+*  Error detection
 **************************************/
 #define LZ4_STATIC_ASSERT(c)    { enum { LZ4_static_assert = 1/(int)(!!(c)) }; }   /* use only *after* variable declarations */
+
+#if defined(LZ4_DEBUG) && (LZ4_DEBUG>=2)
+#  include <stdio.h>
+#  define DEBUGLOG(l, ...) {                          \
+                if (l<=LZ4_DEBUG) {                   \
+                    fprintf(stderr, __FILE__ ": ");   \
+                    fprintf(stderr, __VA_ARGS__);     \
+                    fprintf(stderr, " \n");           \
+            }   }
+#else
+#  define DEBUGLOG(l, ...)      {}    /* disabled */
+#endif
 
 
 /*-************************************
@
