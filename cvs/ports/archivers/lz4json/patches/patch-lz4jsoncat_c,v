head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.2
	OPENBSD_6_0_BASE:1.1.1.1
	jca_20160404:1.1.1.1
	jca:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.04.04.11.26.22;	author jca;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Z3ItOatjSGxNm2KQ;

1.1.1.1
date	2016.04.04.11.26.22;	author jca;	state Exp;
branches;
next	;
commitid	Z3ItOatjSGxNm2KQ;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

Fix little endian assumption.

--- lz4jsoncat.c.orig	Fri Apr  1 15:32:34 2016
+++ lz4jsoncat.c	Fri Apr  1 19:00:45 2016
@@@@ -27,6 +27,7 @@@@
 #include <string.h>
 #include <stdlib.h>
 #include <stdint.h>
+#include <endian.h>
 
 #include "lz4.h"
 
@@@@ -61,7 +62,7 @@@@ int main(int ac, char **av)
 			fprintf(stderr, "%s: not a mozLZ4a file\n", *av);
 			exit(1);
 		}
-		size_t outsz = *(uint32_t *) (map + 8);
+		size_t outsz = le32toh(*(uint32_t *) (map + 8));
 		char *out = malloc(outsz);
 		if (!out) {
 			fprintf(stderr, "Cannot allocate memory\n");
@


1.1.1.1
log
@Import lz4json; ok sthen@@

cat pkg/DESCR:
A little utility to unpack lz4json files as generated by Firefox's book
mark backups.  This is a different format from what the normal lz4
utility expects.  The data is dumped to stdout.

$ lz4jsoncat bookmarks-2014-12-27_151_0UCIWGB4x3hhQXpuSMs5WQ==.jsonlz4

@
text
@@
