head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.8
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.6
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.2
	OPENBSD_3_8:1.1.0.10
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.8
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_5:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2016.01.27.13.36.35;	author jasper;	state Exp;
branches
	1.3.2.1;
next	1.2;
commitid	EdbGALrx7lqxHPZB;

1.2
date	2005.12.04.17.05.50;	author alek;	state dead;
branches;
next	1.1;

1.1
date	2004.05.06.23.07.57;	author naddy;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2004.05.08.11.01.52;	author robert;	state Exp;
branches;
next	;

1.1.4.1
date	2004.05.08.11.06.56;	author robert;	state Exp;
branches;
next	;

1.3.2.1
date	2016.01.27.13.37.08;	author jasper;	state Exp;
branches;
next	;
commitid	a1LtsNygUjoOZ2Qv;


desc
@@


1.3
log
@Security fix for CVE-2016-1925; from upstream git
@
text
@$OpenBSD$

Security fix for CVE-2016-1925
http://seclists.org/oss-sec/2016/q1/132
https://osdn.jp/projects/lha/scm/git/lha/commits/bf2471f

--- src/header.c.orig	Wed Jan 27 14:31:45 2016
+++ src/header.c	Wed Jan 27 14:34:05 2016
@@@@ -688,6 +688,7 @@@@ get_header_level0(fp, hdr, data)
     char *data;
 {
     size_t header_size;
+    ssize_t remain_size;
     ssize_t extend_size;
     int checksum;
     int name_length;
@@@@ -697,9 +698,15 @@@@ get_header_level0(fp, hdr, data)
     hdr->header_size = header_size = get_byte();
     checksum = get_byte();
 
-    if (fread(data + COMMON_HEADER_SIZE,
-              header_size + 2 - COMMON_HEADER_SIZE, 1, fp) == 0) {
-        error("Invalid header (LHarc file ?)");
+    /* The data variable has been already read as COMMON_HEADER_SIZE bytes.
+       So we must read the remaining header size by the header_size. */
+    remain_size = header_size + 2 - COMMON_HEADER_SIZE;
+    if (remain_size <= 0) {
+      error("Invalid header size (LHarc file ?)");
+      return FALSE;
+    }
+    if (fread(data + COMMON_HEADER_SIZE, remain_size, 1, fp) == 0) {
+    	error("Invalid header (LHarc file ?)");
         return FALSE;   /* finish */
     }
 
@@@@ -804,6 +811,7 @@@@ get_header_level1(fp, hdr, data)
     char *data;
 {
     size_t header_size;
+    ssize_t remain_size;
     ssize_t extend_size;
     int checksum;
     int name_length;
@@@@ -813,9 +821,15 @@@@ get_header_level1(fp, hdr, data)
     hdr->header_size = header_size = get_byte();
     checksum = get_byte();
 
-    if (fread(data + COMMON_HEADER_SIZE,
-              header_size + 2 - COMMON_HEADER_SIZE, 1, fp) == 0) {
-        error("Invalid header (LHarc file ?)");
+    /* The data variable has been already read as COMMON_HEADER_SIZE bytes.
+       So we must read the remaining header size by the header_size. */
+    remain_size = header_size + 2 - COMMON_HEADER_SIZE;
+    if (remain_size <= 0) {
+        error("Invalid header size (LHarc file ?)");
+        return FALSE;
+    }
+    if (fread(data + COMMON_HEADER_SIZE, remain_size, 1, fp) == 0) {
+    	error("Invalid header (LHarc file ?)");
         return FALSE;   /* finish */
     }
 
@


1.3.2.1
log
@Security fix for CVE-2016-1925; from upstream git
@
text
@d1 1
a1 1
$OpenBSD: patch-src_header_c,v 1.3 2016/01/27 13:36:35 jasper Exp $
@


1.2
log
@Update to 1.14i.ac20050924

From Yozo Toda <yozo@@v007.vaio.ne.jp> (MAINTAINER)
@
text
@d1 62
a62 25
$OpenBSD: patch-src_header_c,v 1.1 2004/05/06 23:07:57 naddy Exp $
--- src/header.c.orig	2000-10-05 19:36:03.000000000 +0200
+++ src/header.c	2004-05-07 00:48:44.000000000 +0200
@@@@ -538,6 +538,10 @@@@ get_header(fp, hdr)
 				/*
 				 * filename
 				 */
+				if (header_size >= 256) {
+				  fprintf(stderr, "Possible buffer overflow hack attack, type #1\n");
+				  exit(109);
+				}
 				for (i = 0; i < header_size - 3; i++)
 					hdr->name[i] = (char) get_byte();
 				hdr->name[header_size - 3] = '\0';
@@@@ -547,6 +551,10 @@@@ get_header(fp, hdr)
 				/*
 				 * directory
 				 */
+				if (header_size >= FILENAME_LENGTH) {
+				  fprintf(stderr, "Possible buffer overflow hack attack, type #2\n");
+				  exit(110);
+				}
 				for (i = 0; i < header_size - 3; i++)
 					dirname[i] = (char) get_byte();
 				dirname[header_size - 3] = '\0';
@


1.1
log
@SECURITY:
Buffer overflow and directory traversal fixes; from Ulf Harnhammar.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.4.1
log
@SECURITY:
Buffer overflow and directory traversal fixes; from Ulf Harnhammar.
bump PKGNAME; ok brad@@
@
text
@@


1.1.2.1
log
@SECURITY:
Buffer overflow and directory traversal fixes; from Ulf Harnhammar.
bump PKGNAME; ok brad@@
@
text
@@

