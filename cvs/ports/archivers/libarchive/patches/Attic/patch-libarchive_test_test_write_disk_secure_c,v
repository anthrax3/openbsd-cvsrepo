head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2016.05.26.20.31.37;	author naddy;	state dead;
branches;
next	1.1;
commitid	yuLwDJAplWxLaCJO;

1.1
date	2016.01.30.23.34.44;	author naddy;	state Exp;
branches
	1.1.2.1;
next	;
commitid	5Su4CSv12sRKnjcv;

1.1.2.1
date	2016.01.31.00.25.32;	author naddy;	state Exp;
branches;
next	;
commitid	H7UZw8qKElWAuGQ4;


desc
@@


1.2
log
@Update to 3.2.0.  Notable changes include:
* Incorporate patches for crash and overflow bugs
* Add support for lz4 compression
* Add bsdcat command-line tool

Also avoid picking up ext2fs header; reported by rpe@@
@
text
@$OpenBSD: patch-libarchive_test_test_write_disk_secure_c,v 1.1 2016/01/30 23:34:44 naddy Exp $

CVE-2015-2304
Commit 5935715
    Add ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS option
    This fixes a directory traversal in the cpio tool.

--- libarchive/test/test_write_disk_secure.c.orig	Sun Jan 13 22:10:46 2013
+++ libarchive/test/test_write_disk_secure.c	Sat Jan 30 21:33:16 2016
@@@@ -178,6 +178,29 @@@@ DEFINE_TEST(test_write_disk_secure)
 	assert(S_ISDIR(st.st_mode));
 	archive_entry_free(ae);
 
+	/*
+	 * Without security checks, we should be able to
+	 * extract an absolute path.
+	 */
+	assert((ae = archive_entry_new()) != NULL);
+	archive_entry_copy_pathname(ae, "/tmp/libarchive_test-test_write_disk_secure-absolute_path.tmp");
+	archive_entry_set_mode(ae, S_IFREG | 0777);
+	assert(0 == archive_write_header(a, ae));
+	assert(0 == archive_write_finish_entry(a));
+	assertFileExists("/tmp/libarchive_test-test_write_disk_secure-absolute_path.tmp");
+	assert(0 == unlink("/tmp/libarchive_test-test_write_disk_secure-absolute_path.tmp"));
+
+	/* But with security checks enabled, this should fail. */
+	assert(archive_entry_clear(ae) != NULL);
+	archive_entry_copy_pathname(ae, "/tmp/libarchive_test-test_write_disk_secure-absolute_path.tmp");
+	archive_entry_set_mode(ae, S_IFREG | 0777);
+	archive_write_disk_set_options(a, ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS);
+	failure("Extracting an absolute path should fail here.");
+	assertEqualInt(ARCHIVE_FAILED, archive_write_header(a, ae));
+	archive_entry_free(ae);
+	assert(0 == archive_write_finish_entry(a));
+	assertFileNotExists("/tmp/libarchive_test-test_write_disk_secure-absolute_path.tmp");
+
 	assertEqualInt(ARCHIVE_OK, archive_write_free(a));
 
 	/* Test the entries on disk. */
@


1.1
log
@Apply patches for multiple security vulnerablities;
- CVE-2013-0211: denial of service via unspecified vectors
- CVE-2015-2304: directory traveral via absolute paths
- crash/infinite loop on malformed CPIO archives

From upstream git (commits 2253154, 5935715, 3865cf2, e6c9668, 24f5de6)
via FreeBSD.

Minor bump for the new ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS option.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@Apply patches for multiple security vulnerablities;
- CVE-2013-0211: denial of service via unspecified vectors
- CVE-2015-2304: directory traveral via absolute paths
- crash/infinite loop on malformed CPIO archives

From upstream git (commits 2253154, 5935715, 3865cf2, e6c9668, 24f5de6)
via FreeBSD.

Minor bump for the new ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS option.
@
text
@@

