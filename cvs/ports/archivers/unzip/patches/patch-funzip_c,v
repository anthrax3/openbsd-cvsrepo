head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2015.10.20.13.13.52;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	1yOrpJNjathxt7QZ;

1.1
date	2015.10.16.16.22.16;	author sthen;	state Exp;
branches;
next	;
commitid	XskTEemw8gNR4AEG;


desc
@@


1.2
log
@tame -> pledge

ok sthen@@
@
text
@$OpenBSD: patch-funzip_c,v 1.1 2015/10/16 16:22:16 sthen Exp $
--- funzip.c.orig	Wed Oct  7 12:11:04 2015
+++ funzip.c	Wed Oct  7 12:12:57 2015
@@@@ -294,6 +294,10 @@@@ char **argv;
 #else /* !CRYPT */
   char *s = "";
 #endif /* ?CRYPT */
+
+  if (pledge("stdio rpath wpath cpath fattr tty", NULL) == -1)
+      err(1, "pledge");
+
   CONSTRUCTGLOBALS();
 
   /* skip executable name */
@


1.1
log
@unzip can pledge to use the following: stdio rpath wpath cpath fattr tty.
This is possible now that pledge(2) treats TIOCGWINSZ like TIOCGETA, allowing
it to return ENOTTY rather than killing the process for a non-terminal device.
@
text
@d1 1
a1 1
$OpenBSD$
d9 2
a10 2
+  if (tame("stdio rpath wpath cpath fattr tty", NULL) == -1)
+      err(1, "tame");
@

