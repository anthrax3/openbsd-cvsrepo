head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_6:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2017.03.23.17.26.17;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	AKvOWgM1JlPfL9UC;

1.1
date	2015.02.06.21.37.04;	author naddy;	state Exp;
branches
	1.1.2.1
	1.1.4.1
	1.1.12.1;
next	;
commitid	brtKeMQtJb1XFQo4;

1.1.2.1
date	2015.02.07.16.09.53;	author naddy;	state Exp;
branches;
next	;
commitid	402Kj726Pf7WgFX2;

1.1.4.1
date	2015.02.07.16.10.12;	author naddy;	state Exp;
branches;
next	;
commitid	kdfxzaCb2rwAYF96;

1.1.12.1
date	2017.03.27.12.25.15;	author pirofti;	state Exp;
branches;
next	;
commitid	dwmOwe5VLIc9aQKL;


desc
@@


1.2
log
@Apply a bunch of CVE and other fixes for unzip from debian and
redhat bug tracker.  Add the links to the patch files.  The fix for
CVE-2014-9636 was improved.
OK jca@@
@
text
@$OpenBSD: patch-extract_c,v 1.1 2015/02/06 21:37:04 naddy Exp $

Fix CVE-2015-7696: prevent unsigned overflow on invalid input
    https://bugzilla.redhat.com/attachment.cgi?id=1075942
    https://bugzilla.redhat.com/show_bug.cgi?id=1260944
Fix CVE-2014-8139: CRC32 verification heap-based overflow
    https://bugzilla.redhat.com/show_bug.cgi?id=1174844
    https://bugzilla.redhat.com/attachment.cgi?id=989833
Fix CVE-2014-8140: out-of-bounds write issue in test_compr_eb()
Fix CVE-2014-9636: out-of-bounds read/write in test_compr_eb()
Fix CVE-2015-7697: infinite loop when extracting empty bzip2 data
    https://bugs.debian.org/802160
    https://bugzilla.redhat.com/show_bug.cgi?id=1260944
    https://bugzilla.redhat.com/attachment.cgi?id=1073339

--- extract.c.orig	Sat Mar 14 02:32:52 2009
+++ extract.c	Tue Mar 21 16:10:27 2017
@@@@ -1,5 +1,5 @@@@
 /*
-  Copyright (c) 1990-2009 Info-ZIP.  All rights reserved.
+  Copyright (c) 1990-2014 Info-ZIP.  All rights reserved.
 
   See the accompanying file LICENSE, version 2009-Jan-02 or later
   (the contents of which are also included in unzip.h) for terms of use.
@@@@ -298,6 +298,8 @@@@ char ZCONST Far TruncNTSD[] =
 #ifndef SFX
    static ZCONST char Far InconsistEFlength[] = "bad extra-field entry:\n \
      EF block length (%u bytes) exceeds remaining EF data (%u bytes)\n";
+   static ZCONST char Far TooSmallEBlength[] = "bad extra-field entry:\n \
+     EF block length (%u bytes) invalid (< %d)\n";
    static ZCONST char Far InvalidComprDataEAs[] =
      " invalid compressed data for EAs\n";
 #  if (defined(WIN32) && defined(NTSD_EAS))
@@@@ -1255,8 +1257,17 @@@@ static int extract_or_test_entrylist(__G__ numchunk,
         if (G.lrec.compression_method == STORED) {
             zusz_t csiz_decrypted = G.lrec.csize;
 
-            if (G.pInfo->encrypted)
+            if (G.pInfo->encrypted) {
+                if (csiz_decrypted < 12) {
+                    /* handle the error now to prevent unsigned overflow */
+                    Info(slide, 0x401, ((char *)slide,
+                      LoadFarStringSmall(ErrUnzipNoFile),
+                      LoadFarString(InvalidComprData),
+                      LoadFarStringSmall2(Inflate)));
+                    return PK_ERR;
+                }
                 csiz_decrypted -= 12;
+            }
             if (G.lrec.ucsize != csiz_decrypted) {
                 Info(slide, 0x401, ((char *)slide,
                   LoadFarStringSmall2(WrnStorUCSizCSizDiff),
@@@@ -2023,7 +2034,8 @@@@ static int TestExtraField(__G__ ef, ef_len)
         ebID = makeword(ef);
         ebLen = (unsigned)makeword(ef+EB_LEN);
 
-        if (ebLen > (ef_len - EB_HEADSIZE)) {
+        if (ebLen > (ef_len - EB_HEADSIZE))
+        {
            /* Discovered some extra field inconsistency! */
             if (uO.qflag)
                 Info(slide, 1, ((char *)slide, "%-22s ",
@@@@ -2158,11 +2170,19 @@@@ static int TestExtraField(__G__ ef, ef_len)
                 }
                 break;
             case EF_PKVMS:
-                if (makelong(ef+EB_HEADSIZE) !=
+                if (ebLen < 4)
+                {
+                    Info(slide, 1,
+                     ((char *)slide, LoadFarString(TooSmallEBlength),
+                     ebLen, 4));
+                }
+                else if (makelong(ef+EB_HEADSIZE) !=
                     crc32(CRCVAL_INITIAL, ef+(EB_HEADSIZE+4),
                           (extent)(ebLen-4)))
+                {
                     Info(slide, 1, ((char *)slide,
                       LoadFarString(BadCRC_EAs)));
+                }
                 break;
             case EF_PKW32:
             case EF_PKUNIX:
@@@@ -2217,15 +2237,32 @@@@ static int test_compr_eb(__G__ eb, eb_size, compr_offs
     ulg eb_ucsize;
     uch *eb_ucptr;
     int r;
+    ush eb_compr_method;
 
     if (compr_offset < 4)                /* field is not compressed: */
         return PK_OK;                    /* do nothing and signal OK */
 
+    /* Return no/bad-data error status if any problem is found:
+     *    1. eb_size is too small to hold the uncompressed size
+     *       (eb_ucsize).  (Else extract eb_ucsize.)
+     *    2. eb_ucsize is zero (invalid).  2014-12-04 SMS.
+     *    3. eb_ucsize is positive, but eb_size is too small to hold
+     *       the compressed data header.
+     */
     if ((eb_size < (EB_UCSIZE_P + 4)) ||
-        ((eb_ucsize = makelong(eb+(EB_HEADSIZE+EB_UCSIZE_P))) > 0L &&
-         eb_size <= (compr_offset + EB_CMPRHEADLEN)))
-        return IZ_EF_TRUNC;               /* no compressed data! */
+     ((eb_ucsize = makelong( eb+ (EB_HEADSIZE+ EB_UCSIZE_P))) == 0L) ||
+     ((eb_ucsize > 0L) && (eb_size <= (compr_offset + EB_CMPRHEADLEN))))
+        return IZ_EF_TRUNC;             /* no/bad compressed data! */
 
+    /* 2015-02-10 Mancha(?), Michal Zalewski, Tomas Hoger, SMS.
+     * For STORE method, compressed and uncompressed sizes must agree.
+     * http://www.info-zip.org/phpBB3/viewtopic.php?f=7&t=450
+     */
+    eb_compr_method = makeword( eb + (EB_HEADSIZE + compr_offset));
+    if ((eb_compr_method == STORED) &&
+     (eb_size != compr_offset + EB_CMPRHEADLEN + eb_ucsize))
+        return PK_ERR;
+
     if (
 #ifdef INT_16BIT
         (((ulg)(extent)eb_ucsize) != eb_ucsize) ||
@@@@ -2700,6 +2737,12 @@@@ __GDEF
     int err=BZ_OK;
     int repeated_buf_err;
     bz_stream bstrm;
+
+    if (G.incnt <= 0 && G.csize <= 0L) {
+        /* avoid an infinite loop */
+        Trace((stderr, "UZbunzip2() got empty input\n"));
+        return 2;
+    }
 
 #if (defined(DLL) && !defined(NO_SLIDE_REDIR))
     if (G.redirect_slide)
@


1.1
log
@Security fixes:
CVE-2014-8139: CRC32 verification heap-based overflow
CVE-2014-8140: out-of-bounds write issue in test_compr_eb()
CVE-2014-8141: out-of-bounds read issues in getZip64Data()
CVE-2014-9636: out-of-bounds read/write in test_compr_eb()

Via Debian; ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
d7 2
d11 4
d17 1
a17 1
+++ extract.c	Thu Feb  5 18:58:23 2015
d34 20
a53 1
@@@@ -2023,7 +2025,8 @@@@ static int TestExtraField(__G__ ef, ef_len)
d63 1
a63 1
@@@@ -2158,11 +2161,19 @@@@ static int TestExtraField(__G__ ef, ef_len)
d84 1
a84 1
@@@@ -2217,14 +2228,30 @@@@ static int test_compr_eb(__G__ eb, eb_size, compr_offs
d107 2
a108 2
+
+    /* 2014-11-03 Michal Zalewski, SMS.
d113 2
a114 1
+    if ((eb_compr_method == STORED) && (eb_size - compr_offset != eb_ucsize))
d116 1
a116 1
 
d119 14
@


1.1.12.1
log
@Backport the unzip CVE fixes committed by bluhm@@.

%-------------------------------------------------------------------
 Apply a bunch of CVE and other fixes for unzip from debian and
 redhat bug tracker.  Add the links to the patch files.  The fix for
 CVE-2014-9636 was improved.
 OK jca@@
%-------------------------------------------------------------------

OK robert@@.
@
text
@d1 1
a1 1
$OpenBSD: patch-extract_c,v 1.1 2015/02/06 21:37:04 naddy Exp $
a2 3
Fix CVE-2015-7696: prevent unsigned overflow on invalid input
    https://bugzilla.redhat.com/attachment.cgi?id=1075942
    https://bugzilla.redhat.com/show_bug.cgi?id=1260944
a3 2
    https://bugzilla.redhat.com/show_bug.cgi?id=1174844
    https://bugzilla.redhat.com/attachment.cgi?id=989833
a5 4
Fix CVE-2015-7697: infinite loop when extracting empty bzip2 data
    https://bugs.debian.org/802160
    https://bugzilla.redhat.com/show_bug.cgi?id=1260944
    https://bugzilla.redhat.com/attachment.cgi?id=1073339
d8 1
a8 1
+++ extract.c	Tue Mar 21 16:10:27 2017
d25 1
a25 20
@@@@ -1255,8 +1257,17 @@@@ static int extract_or_test_entrylist(__G__ numchunk,
         if (G.lrec.compression_method == STORED) {
             zusz_t csiz_decrypted = G.lrec.csize;
 
-            if (G.pInfo->encrypted)
+            if (G.pInfo->encrypted) {
+                if (csiz_decrypted < 12) {
+                    /* handle the error now to prevent unsigned overflow */
+                    Info(slide, 0x401, ((char *)slide,
+                      LoadFarStringSmall(ErrUnzipNoFile),
+                      LoadFarString(InvalidComprData),
+                      LoadFarStringSmall2(Inflate)));
+                    return PK_ERR;
+                }
                 csiz_decrypted -= 12;
+            }
             if (G.lrec.ucsize != csiz_decrypted) {
                 Info(slide, 0x401, ((char *)slide,
                   LoadFarStringSmall2(WrnStorUCSizCSizDiff),
@@@@ -2023,7 +2034,8 @@@@ static int TestExtraField(__G__ ef, ef_len)
d35 1
a35 1
@@@@ -2158,11 +2170,19 @@@@ static int TestExtraField(__G__ ef, ef_len)
d56 1
a56 1
@@@@ -2217,15 +2237,32 @@@@ static int test_compr_eb(__G__ eb, eb_size, compr_offs
d79 2
a80 2
 
+    /* 2015-02-10 Mancha(?), Michal Zalewski, Tomas Hoger, SMS.
d85 1
a85 2
+    if ((eb_compr_method == STORED) &&
+     (eb_size != compr_offset + EB_CMPRHEADLEN + eb_ucsize))
d87 1
a87 1
+
a89 14
         (((ulg)(extent)eb_ucsize) != eb_ucsize) ||
@@@@ -2700,6 +2737,12 @@@@ __GDEF
     int err=BZ_OK;
     int repeated_buf_err;
     bz_stream bstrm;
+
+    if (G.incnt <= 0 && G.csize <= 0L) {
+        /* avoid an infinite loop */
+        Trace((stderr, "UZbunzip2() got empty input\n"));
+        return 2;
+    }
 
 #if (defined(DLL) && !defined(NO_SLIDE_REDIR))
     if (G.redirect_slide)
@


1.1.4.1
log
@Security fixes:
CVE-2014-8139: CRC32 verification heap-based overflow
CVE-2014-8140: out-of-bounds write issue in test_compr_eb()
CVE-2014-8141: out-of-bounds read issues in getZip64Data()
CVE-2014-9636: out-of-bounds read/write in test_compr_eb()

Via Debian
@
text
@d1 1
a1 1
$OpenBSD: patch-extract_c,v 1.1 2015/02/06 21:37:04 naddy Exp $
@


1.1.2.1
log
@Security fixes:
CVE-2014-8139: CRC32 verification heap-based overflow
CVE-2014-8140: out-of-bounds write issue in test_compr_eb()
CVE-2014-8141: out-of-bounds read issues in getZip64Data()
CVE-2014-9636: out-of-bounds read/write in test_compr_eb()

Via Debian
@
text
@d1 1
a1 1
$OpenBSD: patch-extract_c,v 1.1 2015/02/06 21:37:04 naddy Exp $
@

