head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.6
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.06.13.17.32.27;	author semarie;	state Exp;
branches;
next	;
commitid	qP5XUOAaIzv0cfB2;


desc
@@


1.1
log
@archivers/par2cmdline: adds pledge(2) to par2 and its utilities

diff from Carlin Bingham
ok Mikolaj Kucharski (maintener)
@
text
@$OpenBSD$

pledge:
    'par2 create' - stdio rpath wpath cpath
        creates and writes par files

    'par2 repair' - stdio rpath wpath cpath
        renames and deletes partial/damaged files, writes repaired files

    'par2 verify' - stdio rpath cpath
        may delete par files, only if -p option was given, otherwise
        cpath is not required

--- par2cmdline.cpp.orig	Wed Jun  8 23:31:42 2016
+++ par2cmdline.cpp	Wed Jun  8 23:38:36 2016
@@@@ -34,6 +34,14 @@@@ int main(int argc, char *argv[])
   _CrtSetDbgFlag(_CrtSetDbgFlag(_CRTDBG_REPORT_FLAG) | _CRTDBG_ALLOC_MEM_DF | /*_CRTDBG_CHECK_CRT_DF | */_CRTDBG_DELAY_FREE_MEM_DF | _CRTDBG_LEAK_CHECK_DF);
 #endif
 
+#ifdef HAVE_PLEDGE
+  if (pledge("stdio rpath wpath cpath", NULL) == -1)
+  {
+    cerr << "pledge failed" << endl;
+    return eLogicError;
+  }
+#endif
+
   // Parse the command line
   CommandLine *commandline = new CommandLine;
 
@@@@ -55,6 +63,26 @@@@ int main(int argc, char *argv[])
         break;
       case CommandLine::opVerify:
         {
+#ifdef HAVE_PLEDGE
+          if (!commandline->GetPurgeFiles())
+          {
+            if (pledge("stdio rpath", NULL) == -1)
+            {
+              cerr << "pledge failed" << endl;
+              result = eLogicError;
+              break;
+            }
+          }
+          else
+          {
+            if (pledge("stdio rpath cpath", NULL) == -1)
+            {
+              cerr << "pledge failed" << endl;
+              result = eLogicError;
+              break;
+            }
+          }
+#endif
           // Verify damaged files
           switch (commandline->GetVersion())
           {
@
