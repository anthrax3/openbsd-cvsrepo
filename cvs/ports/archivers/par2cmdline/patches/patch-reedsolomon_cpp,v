head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.6
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.1.0.24
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.10.05.16.50.14;	author sthen;	state Exp;
branches;
next	1.1;
commitid	kVs6P9p0QqyoSbRx;

1.1
date	2010.05.09.15.30.53;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to par2cmdline-0.6.14, and add a patch to fix a byte order issue
(__BYTE_ORDER not being defined) causing 'repair' to fail on files from other
par2 implementations or from pre-5.6 OpenBSD. ok jca@@

From Mikolaj Kucharski, taking maintainer.
@
text
@$OpenBSD$

- c++: warning: suggest parentheses around arithmetic in operand of '|' [-Wparentheses]
  https://github.com/Parchive/par2cmdline/pull/60

--- reedsolomon.cpp.orig	Sun Aug  2 17:09:46 2015
+++ reedsolomon.cpp	Sun Oct  4 18:31:57 2015
@@@@ -294,7 +294,7 @@@@ template<> bool ReedSolomon<Galois16>::InternalProcess
     *pL = *LL + *HL;
 #else
     unsigned int temp = *LL + *HL;
-    *pL = (temp >> 8) & 0xff | (temp << 8) & 0xff00;
+    *pL = ((temp >> 8) & 0xff) | ((temp << 8) & 0xff00);
 #endif
 
     pL++;
@@@@ -305,7 +305,7 @@@@ template<> bool ReedSolomon<Galois16>::InternalProcess
     *pH = *LH + *HH;
 #else
     temp = *LH + *HH;
-    *pH = (temp >> 8) & 0xff | (temp << 8) & 0xff00;
+    *pH = ((temp >> 8) & 0xff) | ((temp << 8) & 0xff00);
 #endif
 
     pH++;
@


1.1
log
@pull gcc4 fix from freebsd
@
text
@d2 22
a23 55
--- reedsolomon.cpp.orig	Sun May  9 17:26:56 2010
+++ reedsolomon.cpp	Sun May  9 17:28:12 2010
@@@@ -51,7 +51,7 @@@@ u32 gcd(u32 a, u32 b)
   }
 }
 
-bool ReedSolomon<Galois8>::SetInput(const vector<bool> &present)
+template<> bool ReedSolomon<Galois8>::SetInput(const vector<bool> &present)
 {
   inputcount = (u32)present.size();
 
@@@@ -80,7 +80,7 @@@@ bool ReedSolomon<Galois8>::SetInput(const vector<bool>
   return true;
 }
 
-bool ReedSolomon<Galois8>::SetInput(u32 count)
+template<> bool ReedSolomon<Galois8>::SetInput(u32 count)
 {
   inputcount = count;
 
@@@@ -101,7 +101,7 @@@@ bool ReedSolomon<Galois8>::SetInput(u32 count)
   return true;
 }
 
-bool ReedSolomon<Galois8>::Process(size_t size, u32 inputindex, const void *inputbuffer, u32 outputindex, void *outputbuffer)
+template<> bool ReedSolomon<Galois8>::Process(size_t size, u32 inputindex, const void *inputbuffer, u32 outputindex, void *outputbuffer)
 {
   // Look up the appropriate element in the RS matrix
   Galois8 factor = leftmatrix[outputindex * (datapresent + datamissing) + inputindex];
@@@@ -189,7 +189,7 @@@@ bool ReedSolomon<Galois8>::Process(size_t size, u32 in
 
 // Set which of the source files are present and which are missing
 // and compute the base values to use for the vandermonde matrix.
-bool ReedSolomon<Galois16>::SetInput(const vector<bool> &present)
+template<> bool ReedSolomon<Galois16>::SetInput(const vector<bool> &present)
 {
   inputcount = (u32)present.size();
 
@@@@ -233,7 +233,7 @@@@ bool ReedSolomon<Galois16>::SetInput(const vector<bool
 
 // Record that the specified number of source files are all present
 // and compute the base values to use for the vandermonde matrix.
-bool ReedSolomon<Galois16>::SetInput(u32 count)
+template<> bool ReedSolomon<Galois16>::SetInput(u32 count)
 {
   inputcount = count;
 
@@@@ -267,7 +267,7 @@@@ bool ReedSolomon<Galois16>::SetInput(u32 count)
   return true;
 }
 
-bool ReedSolomon<Galois16>::Process(size_t size, u32 inputindex, const void *inputbuffer, u32 outputindex, void *outputbuffer)
+template<> bool ReedSolomon<Galois16>::Process(size_t size, u32 inputindex, const void *inputbuffer, u32 outputindex, void *outputbuffer)
 {
   // Look up the appropriate element in the RS matrix
d25 1
@

