head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6;
locks; strict;
comment	@# @;


1.6
date	2015.10.15.20.14.36;	author sthen;	state Exp;
branches;
next	1.5;
commitid	tQ0qKnMlBgGwmRFJ;

1.5
date	2015.10.15.00.17.48;	author sthen;	state Exp;
branches;
next	1.4;
commitid	8kamreRkC8LmJHzu;

1.4
date	2015.10.15.00.08.58;	author sthen;	state Exp;
branches;
next	1.3;
commitid	Vi21nns8PTgO8Z2J;

1.3
date	2015.10.11.21.07.32;	author sthen;	state Exp;
branches;
next	1.2;
commitid	kd2Bxk2j7k7s5Xrh;

1.2
date	2015.10.09.06.50.19;	author jasper;	state Exp;
branches;
next	1.1;
commitid	qsf20buHm8cnJHOr;

1.1
date	2015.10.07.11.06.49;	author sthen;	state Exp;
branches;
next	;
commitid	jPENlfiMNsIiS7wK;


desc
@@


1.6
log
@If bzip2 is used to compress or decompress a single file to stdout,
or if it's used in a pipeline, then it can further pledge to only use
stdio-related system calls while doing the actual de/compression.
Since ports uses 'bzip2 -dc [file] | tar xf -', it can benefit from
this added protection during file extraction.
@
text
@$OpenBSD: patch-bzip2_c,v 1.5 2015/10/15 00:17:48 sthen Exp $
--- bzip2.c.orig	Sat Sep 11 00:04:53 2010
+++ bzip2.c	Thu Oct 15 01:55:25 2015
@@@@ -1257,6 +1257,17 @@@@ void compress ( Char *name )
             setExit(1);
             return;
          };
+         if (numFileNames == 1) { /* stdout, and only one input file */
+            if (pledge("stdio", NULL) == -1) {
+               fprintf ( stderr, "%s: pledge\n", progName );
+               exit ( 1 );
+            }
+         } else {
+            if (pledge("stdio rpath", NULL) == -1) {
+               fprintf ( stderr, "%s: pledge\n", progName );
+               exit ( 1 );
+            }
+         }
          break;
 
       case SM_F2F:
@@@@ -1434,6 +1445,17 @@@@ void uncompress ( Char *name )
             setExit(1);
             return;
          };
+         if (numFileNames == 1) { /* stdout, and only one input file */
+            if (pledge("stdio", NULL) == -1) {
+               fprintf ( stderr, "%s: pledge\n", progName );
+               exit ( 1 );
+            }
+         } else {
+            if (pledge("stdio rpath", NULL) == -1) {
+               fprintf ( stderr, "%s: pledge\n", progName );
+               exit ( 1 );
+            }
+         }
          break;
 
       case SM_F2F:
@@@@ -1781,6 +1803,11 @@@@ IntNative main ( IntNative argc, Char *argv[] )
    Cell   *aa;
    Bool   decode;
 
+   if (pledge("stdio rpath wpath cpath fattr", NULL) == -1) {
+      fprintf ( stderr, "%s: pledge\n", progName );
+      exit ( 1 );
+   }
+
    /*-- Be really really really paranoid :-) --*/
    if (sizeof(Int32) != 4 || sizeof(UInt32) != 4  ||
        sizeof(Int16) != 2 || sizeof(UInt16) != 2  ||
@@@@ -1958,6 +1985,10 @@@@ IntNative main ( IntNative argc, Char *argv[] )
 
    if (opMode == OM_Z) {
      if (srcMode == SM_I2O) {
+        if (pledge("stdio", NULL) == -1) { /* stdin -> stdout */
+           fprintf ( stderr, "%s: pledge\n", progName );
+           exit ( 1 );
+        }
         compress ( NULL );
      } else {
         decode = True;
@@@@ -1974,6 +2005,10 @@@@ IntNative main ( IntNative argc, Char *argv[] )
    if (opMode == OM_UNZ) {
       unzFailsExist = False;
       if (srcMode == SM_I2O) {
+         if (pledge("stdio", NULL) == -1) { /* stdin -> stdout */
+            fprintf ( stderr, "%s: pledge\n", progName );
+            exit ( 1 );
+         }
          uncompress ( NULL );
       } else {
          decode = True;
@


1.5
log
@use standard "local" error handling (sprintf+exit/message_fatal) rather than
err() to avoid the need to pull in err.h, idea from deraadt
@
text
@d1 1
a1 1
$OpenBSD$
d3 38
a40 2
+++ bzip2.c	Thu Oct 15 01:14:51 2015
@@@@ -1781,6 +1781,11 @@@@ IntNative main ( IntNative argc, Char *argv[] )
d52 22
@


1.4
log
@err.h for bzip2 as well, pointed out by jca@@
@
text
@d1 1
a1 1
$OpenBSD: patch-bzip2_c,v 1.3 2015/10/11 21:07:32 sthen Exp $
d3 2
a4 11
+++ bzip2.c	Thu Oct 15 01:08:13 2015
@@@@ -54,6 +54,7 @@@@
 #include <math.h>
 #include <errno.h>
 #include <ctype.h>
+#include <err.h>
 #include "bzlib.h"
 
 #define ERROR_IF_EOF(i)       { if ((i) == EOF)  ioError(); }
@@@@ -1780,6 +1781,9 @@@@ IntNative main ( IntNative argc, Char *argv[] )
    Cell   *argList;
d7 5
a12 3
+   if (pledge("stdio rpath wpath cpath fattr", NULL) == -1)
+      err(1, "pledge");
 
d15 1
@


1.3
log
@bzip2 now also needs rpath
@
text
@d1 1
a1 1
$OpenBSD: patch-bzip2_c,v 1.2 2015/10/09 06:50:19 jasper Exp $
d3 11
a13 2
+++ bzip2.c	Sun Oct 11 22:02:53 2015
@@@@ -1781,6 +1781,9 @@@@ IntNative main ( IntNative argc, Char *argv[] )
d16 1
a16 1
 
d19 1
a19 1
+
a21 1
        sizeof(Int16) != 2 || sizeof(UInt16) != 2  ||
@


1.2
log
@tame -> pledge
@
text
@d1 3
a3 3
$OpenBSD: patch-bzip2_c,v 1.1 2015/10/07 11:06:49 sthen Exp $
--- bzip2.c.orig	Mon Oct  5 10:03:08 2015
+++ bzip2.c	Mon Oct  5 10:05:18 2015
d8 1
a8 1
+   if (pledge("stdio wpath cpath fattr", NULL) == -1)
@


1.1
log
@bzip2 only needs stdio and some file operations, so it can be tame()'d early
in main().
@
text
@d1 1
a1 1
$OpenBSD$
d8 2
a9 2
+   if (tame("stdio wpath cpath fattr", NULL) == -1)
+      err(1, "tame");
@

