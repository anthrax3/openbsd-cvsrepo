head	1.5;
access;
symbols
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	unrar2_01:1.1.1.1
	unrar:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2001.03.29.11.41.50;	author obecian;	state dead;
branches;
next	1.4;

1.4
date	2000.03.26.22.42.05;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	99.04.20.21.38.23;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	99.04.18.23.25.51;	author brad;	state dead;
branches;
next	1.1;

1.1
date	97.11.16.21.06.31;	author joey;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.11.16.21.06.31;	author joey;	state Exp;
branches;
next	;


desc
@@


1.5
log
@+ rename patches
+ integrate COMMENT
+ bump version

ports/archivers - ports@@ maintained ports
@
text
@--- os.c.orig	Sat Apr 17 10:53:01 1999
+++ os.c	Sun Mar 26 17:40:24 2000
@@@@ -82,7 +82,10 @@@@
   SetConsoleMode(hConIn,ConInMode);
   SetConsoleMode(hConOut,ConOutMode);
 #else
+  char *s;
   fgets(Str,sizeof(Password)-1,stdin);
+  if ((s = strchr(Str, '\n')) != NULL)
+      *s = '\0';
 #endif
 }
 
@@@@ -408,26 +411,33 @@@@
   }
 #endif
 #ifdef _UNIX
+  static mode_t mask = -1;
+
+  if (mask == (mode_t) -1)
+  {
+    mask = umask(022);
+    (void) umask(mask);
+  }
   switch(NewLhd.HostOS)
   {
     case MS_DOS:
     case OS2:
     case WIN_32:
       if (NewLhd.FileAttr & 0x10)
-        NewLhd.FileAttr=0x41ff;
+	NewLhd.FileAttr=0x41ff & ~mask;
       else
         if (NewLhd.FileAttr & 1)
-          NewLhd.FileAttr=0x816d;
+	  NewLhd.FileAttr=0x8124 & ~mask;
         else
-          NewLhd.FileAttr=0x81ff;
+	  NewLhd.FileAttr=0x81b6 & ~mask;
       break;
     case UNIX:
       break;
     default:
       if ((NewLhd.Flags & LHD_WINDOWMASK)==LHD_DIRECTORY)
-        NewLhd.FileAttr=0x41ff;
+	NewLhd.FileAttr=0x41ff & ~mask;
       else
-        NewLhd.FileAttr=0x81ff;
+	NewLhd.FileAttr=0x81b6 & ~mask;
       break;
   }
 #endif
@


1.4
log
@unified diffs
@
text
@@


1.3
log
@fix permissions when converting from DOS-type filesystem
@
text
@d1 52
a52 77
*** os.c.orig	Sat Apr 17 18:53:01 1999
--- os.c	Tue Apr 20 04:45:20 1999
***************
*** 82,88 ****
--- 82,91 ----
    SetConsoleMode(hConIn,ConInMode);
    SetConsoleMode(hConOut,ConOutMode);
  #else
+   char *s;
    fgets(Str,sizeof(Password)-1,stdin);
+   if ((s = strchr(Str, '\n')) != NULL)
+       *s = '\0';
  #endif
  }
  
***************
*** 408,433 ****
    }
  #endif
  #ifdef _UNIX
    switch(NewLhd.HostOS)
    {
      case MS_DOS:
      case OS2:
      case WIN_32:
        if (NewLhd.FileAttr & 0x10)
!         NewLhd.FileAttr=0x41ff;
        else
          if (NewLhd.FileAttr & 1)
!           NewLhd.FileAttr=0x816d;
          else
!           NewLhd.FileAttr=0x81ff;
        break;
      case UNIX:
        break;
      default:
        if ((NewLhd.Flags & LHD_WINDOWMASK)==LHD_DIRECTORY)
!         NewLhd.FileAttr=0x41ff;
        else
!         NewLhd.FileAttr=0x81ff;
        break;
    }
  #endif
--- 411,443 ----
    }
  #endif
  #ifdef _UNIX
+   static mode_t mask = -1;
+ 
+   if (mask == (mode_t) -1)
+   {
+     mask = umask(022);
+     (void) umask(mask);
+   }
    switch(NewLhd.HostOS)
    {
      case MS_DOS:
      case OS2:
      case WIN_32:
        if (NewLhd.FileAttr & 0x10)
! 	NewLhd.FileAttr=0x41ff & ~mask;
        else
          if (NewLhd.FileAttr & 1)
! 	  NewLhd.FileAttr=0x8124 & ~mask;
          else
! 	  NewLhd.FileAttr=0x81b6 & ~mask;
        break;
      case UNIX:
        break;
      default:
        if ((NewLhd.Flags & LHD_WINDOWMASK)==LHD_DIRECTORY)
! 	NewLhd.FileAttr=0x41ff & ~mask;
        else
! 	NewLhd.FileAttr=0x81b6 & ~mask;
        break;
    }
  #endif
@


1.2
log
@upgrade to unrar 2.50
@
text
@d1 2
a2 2
*** os.c.bak	Mon May 19 23:58:11 1997
--- os.c	Tue May 20 00:22:57 1997
d4 10
a13 5
*** 67,73 ****
  
  void GetPswStr(char *Str)
  {
!   gets(Str);
d16 62
a77 13
  
--- 67,77 ----
  
  void GetPswStr(char *Str)
  {
!   char *s;
!   *Str = '\0';
!   fgets(Str, 128, stdin);
!   if ((s = strchr(Str, '\n')) != NULL)
! 	*s = '\0';
  }
  
  
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@
@
text
@@
