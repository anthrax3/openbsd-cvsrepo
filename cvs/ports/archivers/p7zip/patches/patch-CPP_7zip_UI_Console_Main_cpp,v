head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.6
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4;
locks; strict;
comment	@# @;


1.5
date	2016.04.12.23.13.22;	author sthen;	state Exp;
branches;
next	1.4;
commitid	JN0luTaWnfSidvOJ;

1.4
date	2016.02.04.10.38.26;	author tb;	state Exp;
branches;
next	1.3;
commitid	8O9t8JV6KRlUaDL5;

1.3
date	2016.01.31.22.29.37;	author sthen;	state Exp;
branches;
next	1.2;
commitid	QvNaX4l26nMG3WDW;

1.2
date	2016.01.27.10.36.00;	author jasper;	state Exp;
branches;
next	1.1;
commitid	9Bayk4NrUSDHGouW;

1.1
date	2016.01.22.13.38.37;	author sthen;	state Exp;
branches;
next	;
commitid	GudY3kKl54V4AqU9;


desc
@@


1.5
log
@Use HW_PHYSMEM64 to retrieve memory, from Josh Grosse (maintainer). I found
this with a distfiles search following graphics/darktable fix earlier, and
Josh fixed my fix (I missed an ifdef, and he also found places which needed
a ps pledge after enabling this).
@
text
@$OpenBSD: patch-CPP_7zip_UI_Console_Main_cpp,v 1.4 2016/02/04 10:38:26 tb Exp $

Pledge archivers/p7zip main executables

--- CPP/7zip/UI/Console/Main.cpp.orig	Sat Oct 17 11:20:22 2015
+++ CPP/7zip/UI/Console/Main.cpp	Sun Jan 24 21:51:01 2016
@@@@ -484,6 +484,20 @@@@ int Main2(
   #endif
 )
 {
+
+#ifndef EXTERNAL_CODECS
+
+#ifdef PLEDGE_DEBUG
+  printf("initial pledge: 7za 7zr\n");
+#endif
+
+  if (pledge("stdio rpath wpath cpath fattr tty ps", NULL) == -1) {
+    perror("pledge");
+    exit(2);
+  }
+
+#endif
+
   #if defined(_WIN32) && !defined(UNDER_CE)
   SetFileApisToOEM();
   #endif
@@@@ -580,6 +594,19 @@@@ int Main2(
   codecs->CaseSensitive = options.CaseSensitive;
   ThrowException_if_Error(codecs->Load());
 
+#ifdef EXTERNAL_CODECS
+
+#ifdef PLEDGE_DEBUG
+  printf("initial pledge: 7z\n");
+#endif
+
+  if (pledge("stdio rpath wpath cpath fattr tty ps", NULL) == -1) {
+    perror("pledge");
+    exit(2);
+  }
+
+#endif
+
   bool isExtractGroupCommand = options.Command.IsFromExtractGroup();
 
   if (codecs->Formats.Size() == 0 &&
@@@@ -636,6 +663,16 @@@@ int Main2(
 
   if (options.Command.CommandType == NCommandType::kInfo)
   {
+
+#ifdef PLEDGE_DEBUG
+  printf("reduced pledge: info\n");
+#endif
+
+  if (pledge("stdio", NULL) == -1) {
+    perror("pledge");
+    exit(2);
+  }
+
     CStdOutStream &so = (g_StdStream ? *g_StdStream : g_StdOut);
     unsigned i;
 
@@@@ -802,6 +839,16 @@@@ int Main2(
   }
   else if (options.Command.CommandType == NCommandType::kBenchmark)
   {
+
+#ifdef PLEDGE_DEBUG
+  printf("reduced pledge: benchmark\n");
+#endif
+
+  if (pledge("stdio ps", NULL) == -1) {
+    perror("pledge");
+    exit(2);
+  }
+
     CStdOutStream &so = (g_StdStream ? *g_StdStream : g_StdOut);
     hresultMain = BenchCon(EXTERNAL_CODECS_VARS_L
         options.Properties, options.NumIterations, (FILE *)so);
@@@@ -869,6 +916,17 @@@@ int Main2(
     if (hresultMain == S_OK)
     if (isExtractGroupCommand)
     {
+
+      if (options.Command.IsTestCommand() || options.StdOutMode) {
+#ifdef PLEDGE_DEBUG
+          printf("reduced pledge: test stdout\n");
+#endif
+          if (pledge("stdio rpath tty", NULL) == -1) {
+              perror("pledge");
+              exit(2);
+	  }
+      }
+
       CExtractCallbackConsole *ecs = new CExtractCallbackConsole;
       CMyComPtr<IFolderArchiveExtractCallback> extractCallback = ecs;
 
@@@@ -1029,6 +1087,16 @@@@ int Main2(
     }
     else
     {
+
+#ifdef PLEDGE_DEBUG
+  printf("reduced pledge: list\n");
+#endif
+
+  if (pledge("stdio rpath tty", NULL) == -1) {
+    perror("pledge");
+    exit(2);
+  }
+
       UInt64 numErrors = 0;
       UInt64 numWarnings = 0;
       
@@@@ -1139,6 +1207,16 @@@@ int Main2(
   }
   else if (options.Command.CommandType == NCommandType::kHash)
   {
+
+#ifdef PLEDGE_DEBUG
+  printf("reduced pledge: hash\n");
+#endif
+
+  if (pledge("stdio rpath", NULL) == -1) {
+    perror("pledge");
+    exit(2);
+  }
+
     const CHashOptions &uo = options.HashOptions;
 
     CHashCallbackConsole callback;
@


1.4
log
@Further pledge(2) fallout due to password protected archives.
Listing or checking the integrity may call readpassphrase(3)
and thus requires a "tty" promise.

Report and fix by provided by Andre S, thanks!

ok czarkoff@@, Josh Grosse (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-CPP_7zip_UI_Console_Main_cpp,v 1.3 2016/01/31 22:29:37 sthen Exp $
d18 1
a18 1
+  if (pledge("stdio rpath wpath cpath fattr tty", NULL) == -1) {
d38 1
a38 1
+  if (pledge("stdio rpath wpath cpath fattr tty", NULL) == -1) {
d74 1
a74 1
+  if (pledge("stdio", NULL) == -1) {
@


1.3
log
@p7zip needs to pledge tty as well (in standard and SFX archives), it's needed
for password entry. Reported by Andre S, debugging tb@@, fix from Josh Grosse.
ok tb@@
@
text
@d1 1
a1 1
$OpenBSD: patch-CPP_7zip_UI_Console_Main_cpp,v 1.2 2016/01/27 10:36:00 jasper Exp $
d91 1
a91 1
+          if (pledge("stdio rpath", NULL) == -1) {
d109 1
a109 1
+  if (pledge("stdio rpath", NULL) == -1) {
@


1.2
log
@- extend pledge to handle self-extracting archives and the remaining main binaries

from Josh Grosse (MAINTAINER) and brynet@@
ok brynet@@ sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-CPP_7zip_UI_Console_Main_cpp,v 1.1 2016/01/22 13:38:37 sthen Exp $
d18 1
a18 1
+  if (pledge("stdio rpath wpath cpath fattr", NULL) == -1) {
d38 1
a38 1
+  if (pledge("stdio rpath wpath cpath fattr", NULL) == -1) {
@


1.1
log
@pledge p7zip, from maintainer Josh Grosse (thanks for digging into this Josh!).
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
Pledge archivers/p7zip binaries
d6 2
a7 2
+++ CPP/7zip/UI/Console/Main.cpp	Mon Jan 18 10:05:31 2016
@@@@ -484,6 +484,18 @@@@ int Main2(
d12 1
a12 1
+// pledge 7za and 7zr at this point, they take different paths than 7z.  
d14 3
a16 1
+#ifndef EXTERNAL_CODECS
d20 1
a20 1
+    exit(1);
d28 1
a28 2
@@@@ -579,6 +591,17 @@@@ int Main2(
   codecs->CaseSensitiveChange = options.CaseSensitiveChange;
d31 30
d62 7
a68 1
+// pledge 7z here
d70 3
a72 1
+#ifdef EXTERNAL_CODECS
d74 1
a74 1
+  if (pledge("stdio rpath wpath cpath fattr", NULL) == -1) {
d76 1
a76 1
+    exit(1);
d79 11
d91 8
d100 32
a131 1
   bool isExtractGroupCommand = options.Command.IsFromExtractGroup();
d133 1
@

