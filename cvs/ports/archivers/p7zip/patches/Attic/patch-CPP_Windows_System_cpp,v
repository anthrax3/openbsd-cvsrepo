head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.08.14.16.29.20;	author jca;	state dead;
branches;
next	1.1;
commitid	hzuojYU7AJDd860n;

1.1
date	2016.04.12.23.13.22;	author sthen;	state Exp;
branches;
next	;
commitid	JN0luTaWnfSidvOJ;


desc
@@


1.2
log
@Update to p7zip-16.02

Remove patches for security fixes now included in upstream tarball.

From maintainer Josh Grosse.
@
text
@$OpenBSD: patch-CPP_Windows_System_cpp,v 1.1 2016/04/12 23:13:22 sthen Exp $
--- CPP/Windows/System.cpp.orig	Fri Nov 20 16:33:04 2015
+++ CPP/Windows/System.cpp	Tue Apr 12 18:05:45 2016
@@@@ -122,10 +122,13 @@@@ namespace NWindows
 		  		}
 		  		fclose( f );
 			}
-#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__) || defined(__APPLE__)
+#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__) || defined(__APPLE__) || defined(__OpenBSD__)
 #ifdef HW_MEMSIZE
 			uint64_t val = 0; // support 2Gb+ RAM
 			int mib[2] = { CTL_HW, HW_MEMSIZE };
+#elif defined(HW_PHYSMEM64)
+			uint64_t val = 0; // support 2Gb+ RAM
+			int mib[2] = { CTL_HW, HW_PHYSMEM64 };
 #else // HW_MEMSIZE
 			unsigned int val = 0; // For old system
 			int mib[2] = { CTL_HW, HW_PHYSMEM };
@


1.1
log
@Use HW_PHYSMEM64 to retrieve memory, from Josh Grosse (maintainer). I found
this with a distfiles search following graphics/darktable fix earlier, and
Josh fixed my fix (I missed an ifdef, and he also found places which needed
a ps pledge after enabling this).
@
text
@d1 1
a1 1
$OpenBSD$
@

