head	1.2;
access;
symbols
	kevlo_2008-Oct-29:1.1.1.1 kevlo:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2009.01.09.07.36.20;	author kevlo;	state dead;
branches;
next	1.1;

1.1
date	2008.10.29.02.23.07;	author kevlo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.10.29.02.23.07;	author kevlo;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to 0.3.3

ok ajacoutot@@
@
text
@$OpenBSD: patch-src_scim_chewing_imengine_cpp,v 1.1 2008/10/29 02:23:07 kevlo Exp $
--- src/scim_chewing_imengine.cpp.orig	Wed Oct  1 17:53:55 2008
+++ src/scim_chewing_imengine.cpp	Sat Oct 25 16:48:55 2008
@@@@ -591,7 +591,7 @@@@ bool ChewingIMEngineInstance::commit( ChewingOutput *p
     SCIM_DEBUG_IMENGINE( 2 ) <<
         "IMEngine Instance Commit\n";
 	// commit string
-	m_commit_string = L"";
+	m_commit_string = WideString ();
 	if ( pgo->keystrokeRtn & KEYSTROKE_COMMIT ) {
 		for ( int i = 0; i < pgo->nCommitStr; i++ ) {
 			m_commit_string += utf8_mbstowcs((char *)pgo->commitStr[ i ].s, 
@@@@ -601,7 +601,7 @@@@ bool ChewingIMEngineInstance::commit( ChewingOutput *p
 		}
 		commit_string( m_commit_string );
 	}
-	m_preedit_string = L"";
+	m_preedit_string = WideString ();
 	// preedit string
 	// XXX show Interval
 	for ( int i = 0; i < pgo->chiSymbolCursor; i++ ) {
@@@@ -684,7 +684,7 @@@@ bool ChewingIMEngineInstance::commit( ChewingOutput *p
 	}
 	
 	// show aux string
-	m_aux_string = L"";
+	m_aux_string = WideString ();
 	if ( pgo->bShowMsg ) {
 		for ( int i = 0; i < pgo->showMsgLen; i++ ) {
             m_aux_string += utf8_mbstowcs((char *)pgo->showMsg[ i ].s, MAX_UTF8_SIZE);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Initial import of scim-chewing 0.3.2

scim-chewing is an scim IMEngine module for chewing.

ok ajacoutot@@
@
text
@@
