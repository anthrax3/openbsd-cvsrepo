head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.12
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.10
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.20
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.18
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.16
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.14
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.12
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.4
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	kevlo_2008-Oct-29:1.1.1.1
	kevlo:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.01.18.03.14.16;	author naddy;	state Exp;
branches;
next	1.2;
commitid	INAcawJqik7lWSVj;

1.2
date	2009.10.31.12.50.02;	author kevlo;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.29.02.21.46;	author kevlo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.10.29.02.21.46;	author kevlo;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Drop remaining MD5/RMD160/SHA1 checksums.
@
text
@SHA256 (scim-1.4.9.tar.gz) = 9y6XeeIgVl9gApI799aqmJG+K73c2RpOKi1eIK77qNA=
SIZE (scim-1.4.9.tar.gz) = 2928091
@


1.2
log
@Update to 1.4.9

ok ajacoutot@@
@
text
@a0 3
MD5 (scim-1.4.9.tar.gz) = l1ujSwEwTqgWasjqJ6qeiA==
RMD160 (scim-1.4.9.tar.gz) = +E1Rqtlv6MKzLvG5Iuv+lJn3DJA=
SHA1 (scim-1.4.9.tar.gz) = dxczlXX9v5CTCaeIguMMYMzp+Os=
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
MD5 (scim-1.4.7.tar.gz) = hA3P1CZKFENHjBiP90eYTg==
RMD160 (scim-1.4.7.tar.gz) = CyTiT1R845RpgRB2Qgv81B0ekGw=
SHA1 (scim-1.4.7.tar.gz) = VKsqsO8oqEwk+8MtN+mW7K5BbVA=
SHA256 (scim-1.4.7.tar.gz) = oIg7xZOEdrMyRxlP5hq1ziJOtPtovX+L78S6qKqoFgs=
SIZE (scim-1.4.7.tar.gz) = 3075769
@


1.1.1.1
log
@Initial import of scim 1.4.7

SCIM is a common IM platform written in C++. It abstracts input method
interface into several classes and try to make these classes as simple
and independent as possible. With such simple interfaces, developers
can write their own input method in a few lines of code very easily.

SCIM is highly modularized: most components can be implemented as
dynamically loadable modules, thus can be loaded at runtime as you wish.
For example, input methods written for SCIM could be IMEngine modules,
and users can use such IMEngine modules combined with different interface
modules (FrontEnd) in different environment without rewrite/recompile the

ok ajacoutot@@
@
text
@@
