head	1.3;
access;
symbols
	OPENBSD_6_1:1.2.0.6
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	bentley_20140906:1.1.1.1
	bentley:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.05.24.21.27.45;	author espie;	state Exp;
branches;
next	1.2;
commitid	5yHc5YrqDmr5bg4y;

1.2
date	2015.09.21.16.58.56;	author jasper;	state Exp;
branches;
next	1.1;
commitid	fukXtWomnXb4rTMr;

1.1
date	2014.09.06.07.03.52;	author bentley;	state Exp;
branches
	1.1.1.1;
next	;
commitid	QJ01GXrnpZD2YpyO;

1.1.1.1
date	2014.09.06.07.03.52;	author bentley;	state Exp;
branches;
next	;
commitid	QJ01GXrnpZD2YpyO;


desc
@@


1.3
log
@WANT_CXX + trivial C++ patches
@
text
@$OpenBSD: patch-src_synfig_main_cpp,v 1.2 2015/09/21 16:58:56 jasper Exp $
Index: src/synfig/main.cpp
--- src/synfig/main.cpp.orig
+++ src/synfig/main.cpp
@@@@ -289,14 +289,14 @@@@ synfig::Main::Main(const synfig::String& basepath,Prog
 		locations.push_back(getenv("SYNFIG_MODULE_LIST"));
 	else
 	{
-		locations.push_back("./"MODULE_LIST_FILENAME);
+		locations.push_back("./" MODULE_LIST_FILENAME);
 		if(getenv("HOME"))
 			locations.push_back(strprintf("%s/.local/share/synfig/%s", getenv("HOME"), MODULE_LIST_FILENAME));
 	#ifdef SYSCONFDIR
-		locations.push_back(SYSCONFDIR"/"MODULE_LIST_FILENAME);
+		locations.push_back(SYSCONFDIR "/" MODULE_LIST_FILENAME);
 	#endif
 		locations.push_back(prefix+ETL_DIRECTORY_SEPARATOR+"etc"+ETL_DIRECTORY_SEPARATOR+MODULE_LIST_FILENAME);
-		locations.push_back("/usr/local/etc/"MODULE_LIST_FILENAME);
+		locations.push_back("/usr/local/etc/" MODULE_LIST_FILENAME);
 	#ifdef __APPLE__
 		locations.push_back("/Library/Frameworks/synfig.framework/Resources/"MODULE_LIST_FILENAME);
 		locations.push_back("/Library/Synfig/"MODULE_LIST_FILENAME);
@@@@ -458,6 +458,10 @@@@ synfig::get_binary_path(const String &fallback_path)
 	result = String(path);
 	
 	free(path);
+
+#elif defined(__OpenBSD__)
+
+	result = String("${PREFIX}/bin/synfig");
 
 #elif defined(__APPLE__)
 	
@


1.2
log
@regen
@
text
@d1 24
a24 4
$OpenBSD: patch-src_synfig_main_cpp,v 1.1.1.1 2014/09/06 07:03:52 bentley Exp $
--- src/synfig/main.cpp.orig	Thu Jul  9 09:33:03 2015
+++ src/synfig/main.cpp	Mon Sep 21 18:58:47 2015
@@@@ -459,6 +459,10 @@@@ synfig::get_binary_path(const String &fallback_path)
d27 1
a27 1
 
d31 1
a31 1
+
a33 1
 	uint32_t buf_size = MAXPATHLEN;
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- src/synfig/main.cpp.orig	Fri Jul 18 13:25:34 2014
+++ src/synfig/main.cpp	Fri Jul 18 13:25:35 2014
@@@@ -433,6 +433,10 @@@@ synfig::get_binary_path(const String &fallback_path)
@


1.1.1.1
log
@Import synfig-0.64.1.

synfig is a vector based 2D animation package. It is designed to be
capable of producing feature-film quality animation. It eliminates the
need for tweening, preventing the need to hand-draw each frame. synfig
features spatial and temporal resolution independence (sharp and smooth
at any resolution or framerate), high dynamic range images, and a
flexible plugin system.

This package contains the renderer used to convert synfig .sif files to
raster images, videos and other formats. Layer types include geometric,
gradient, filter, distortion, transformation, fractal and others. Output
targets include JPEG, PNG, GIF, BMP, PPM, DV, OpenEXR, ffmpeg (MPEG1),
libavcodec (AVI), imagemagick (MIFF), yuv420p, MNG and others.

ok jca@@
@
text
@@
