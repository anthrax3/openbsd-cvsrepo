head	1.2;
access;
symbols
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	bentley_20150111:1.1.1.1
	bentley:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.05.06.06.51.03;	author czarkoff;	state dead;
branches;
next	1.1;
commitid	eRM13y7aEANkAHjo;

1.1
date	2015.01.11.08.21.39;	author bentley;	state Exp;
branches
	1.1.1.1;
next	;
commitid	nMjfhgeq0fXtAKP5;

1.1.1.1
date	2015.01.11.08.21.39;	author bentley;	state Exp;
branches;
next	;
commitid	nMjfhgeq0fXtAKP5;


desc
@@


1.2
log
@update to 0.9.1

OK bentley@@, brad@@, sthen@@.
@
text
@$OpenBSD: patch-audio_out_ao_sndio_c,v 1.1 2015/01/11 08:21:39 bentley Exp $
--- audio/out/ao_sndio.c.orig	Sat Dec 20 12:00:13 2014
+++ audio/out/ao_sndio.c	Fri Jan  2 14:34:21 2015
@@@@ -125,7 +125,7 @@@@ static int init(struct ao *ao)
     const struct af_to_par *ap;
     int i;
 
-    p->hdl = sio_open(p->dev, SIO_PLAY, 1);
+    p->hdl = sio_open(p->dev, SIO_PLAY, 0);
     if (p->hdl == NULL) {
         MP_ERR(ao, "can't open sndio %s\n", p->dev);
         goto error;
@@@@ -304,25 +304,7 @@@@ static void audio_pause(struct ao *ao)
  */
 static void audio_resume(struct ao *ao)
 {
-    struct priv *p = ao->priv;
-    int n, count, todo;
-
-    /*
-     * we want to start with buffers full, because mpv uses
-     * get_delay() as clock, which would cause video to
-     * accelerate while buffers are filled.
-     */
-    todo = p->par.bufsz * p->par.pchan * p->par.bps;
-    while (todo > 0) {
-        count = todo;
-        if (count > SILENCE_NMAX)
-            count = SILENCE_NMAX;
-        n = sio_write(p->hdl, p->silence, count);
-        if (n == 0)
-            break;
-        todo -= n;
-        p->delay += n;
-    }
+    return;
 }
 
 #define OPT_BASE_STRUCT struct priv
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import mpv-0.7.2.

mpv is a fork of mplayer2 and MPlayer.  Its option parser was improved
to behave more like other CLI programs, and many option names and
semantics were reworked to make them more intuitive and memorable.
Instead of default GUI it provides a small controller interface that is
triggered by mouse movement.  OpenGL video output is capable of many
features loved by videophiles, such as video scaling with popular high
quality algorithms, color management, and more, as well as of hardware
decoding using VDPAU and VAAPI.

From Dmitrij D. Czarkoff. ok sthen@@
@
text
@@
