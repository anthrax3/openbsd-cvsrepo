head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.8
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.6
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.11.19.13.53.34;	author zhuk;	state Exp;
branches;
next	1.3;
commitid	YHMryTM71Omi6xYR;

1.3
date	2014.11.05.12.49.22;	author dcoppa;	state Exp;
branches;
next	1.2;
commitid	H6kcwagi97yugLCx;

1.2
date	2014.07.10.19.50.26;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	QVQcP2pDNqjWtiP7;

1.1
date	2013.04.24.08.53.37;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.4
log
@First bits of qt5 FLAVOR for multimedia/phonon. Needed for KDE5 - do not
hold your breath, there is still a lot of things to do.

Main change is that relative paths in FindPhononInternal.cmake are kept
relative now; things worked only by accident before. This requires a bump,
though, as this file is included in package.

KDE4 builds fine still (at least major suspects like kdelibs and dragon).
@
text
@$OpenBSD: patch-cmake_FindPhononInternal_cmake,v 1.3 2014/11/05 12:49:22 dcoppa Exp $
Allow paths to be overriden.
Also, make sure that subdirectory paths do not expand to absolute ones automatically.
--- cmake/FindPhononInternal.cmake.orig	Thu Dec  4 12:30:26 2014
+++ cmake/FindPhononInternal.cmake	Thu Nov 19 16:09:36 2015
@@@@ -171,20 +171,20 @@@@ set(CMAKE_MODULE_PATH ${_phonon_cmake_module_path_back
 
 include(GNUInstallDirs)
 
-set(SHARE_INSTALL_PREFIX        "share")  #              CACHE PATH "Base directory for files which go to share/")
-set(INCLUDE_INSTALL_DIR         "include" ) #           CACHE PATH "The subdirectory to the header prefix")
+set(BIN_INSTALL_DIR             "bin"              CACHE STRING "The install dir for executables (default ${EXEC_INSTALL_PREFIX}/bin)")
+set(LIB_INSTALL_DIR             "${CMAKE_INSTALL_LIBDIR}"   CACHE STRING "The subdirectory relative to the install prefix where libraries will be installed")
+set(SHARE_INSTALL_PREFIX        "share"            CACHE STRING "Base directory for files which go to share/")
 if (PHONON_BUILD_PHONON4QT5)
-    set(INCLUDE_INSTALL_DIR         "include/${PHONON_LIB_SONAME}" ) #           CACHE PATH "The subdirectory to the header prefix")
-endif (PHONON_BUILD_PHONON4QT5)
-set(BIN_INSTALL_DIR             "bin"     ) #         CACHE PATH "The install dir for executables (default ${EXEC_INSTALL_PREFIX}/bin)")
-set(LIB_INSTALL_DIR             "${CMAKE_INSTALL_LIBDIR}" ) #  CACHE PATH "The subdirectory relative to the install prefix where libraries will be installed"
-set(PLUGIN_INSTALL_DIR          "${LIB_INSTALL_DIR}/kde4"                   CACHE PATH "The subdirectory relative to the install prefix where plugins will be installed (default is ${LIB_INSTALL_DIR}/kde4)")
-if (PHONON_BUILD_PHONON4QT5)
-    set(PLUGIN_INSTALL_DIR          "${LIB_INSTALL_DIR}/qt5"                   CACHE PATH "The subdirectory relative to the install prefix where plugins will be installed (default is ${LIB_INSTALL_DIR}/qt5)" FORCE)
-endif(PHONON_BUILD_PHONON4QT5)
-set(BACKEND_INSTALL_DIR "${PLUGIN_INSTALL_DIR}/plugins/${PHONON_LIB_SONAME}_backend")
+    set(INCLUDE_INSTALL_DIR         "include/${PHONON_LIB_SONAME}"       CACHE STRING "The subdirectory to the header prefix")
+    set(PLUGIN_INSTALL_DIR          "${LIB_INSTALL_DIR}/qt5"                   CACHE STRING "The subdirectory relative to the install prefix where plugins will be installed (default is ${LIB_INSTALL_DIR}/qt5)" FORCE)
+else ()
+    set(INCLUDE_INSTALL_DIR         "include"          CACHE STRING "The subdirectory to the header prefix")
+    set(PLUGIN_INSTALL_DIR          "${LIB_INSTALL_DIR}/kde4"                   CACHE STRING "The subdirectory relative to the install prefix where plugins will be installed (default is ${LIB_INSTALL_DIR}/kde4)")
+endif ()
 if(WIN32) # Imported from Phonon VLC
     set(BACKEND_INSTALL_DIR "bin/${PHONON_LIB_SONAME}_backend")
+else()
+    set(BACKEND_INSTALL_DIR "${PLUGIN_INSTALL_DIR}/plugins/${PHONON_LIB_SONAME}_backend")
 endif()
 set(ICON_INSTALL_DIR            "${SHARE_INSTALL_PREFIX}/icons"             CACHE PATH "The icon install dir (default ${SHARE_INSTALL_PREFIX}/share/icons/)")
 set(SERVICES_INSTALL_DIR        "${SHARE_INSTALL_PREFIX}/kde4/services"     CACHE PATH "The install dir for service (desktop, protocol, ...) files")
@@@@ -322,14 +322,14 @@@@ if (CMAKE_COMPILER_IS_GNUCXX)
 
    set (KDE4_ENABLE_EXCEPTIONS "-fexceptions -UQT_NO_EXCEPTIONS")
    # Select flags.
-   set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG -DQT_NO_DEBUG")
-   set(CMAKE_CXX_FLAGS_RELEASE        "-O2 -DNDEBUG -DQT_NO_DEBUG")
-   set(CMAKE_CXX_FLAGS_DEBUG          "-g -O2 -fno-reorder-blocks -fno-schedule-insns -fno-inline")
+   set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-g -DNDEBUG -DQT_NO_DEBUG")
+   set(CMAKE_CXX_FLAGS_RELEASE        "-DNDEBUG -DQT_NO_DEBUG")
+   set(CMAKE_CXX_FLAGS_DEBUG          "-g -fno-reorder-blocks -fno-schedule-insns -fno-inline")
    set(CMAKE_CXX_FLAGS_DEBUGFULL      "-g3 -fno-inline")
    set(CMAKE_CXX_FLAGS_PROFILE        "-g3 -fno-inline -ftest-coverage -fprofile-arcs")
-   set(CMAKE_C_FLAGS_RELWITHDEBINFO   "-O2 -g -DNDEBUG -DQT_NO_DEBUG")
-   set(CMAKE_C_FLAGS_RELEASE          "-O2 -DNDEBUG -DQT_NO_DEBUG")
-   set(CMAKE_C_FLAGS_DEBUG            "-g -O2 -fno-reorder-blocks -fno-schedule-insns -fno-inline")
+   set(CMAKE_C_FLAGS_RELWITHDEBINFO   "-g -DNDEBUG -DQT_NO_DEBUG")
+   set(CMAKE_C_FLAGS_RELEASE          "-DNDEBUG -DQT_NO_DEBUG")
+   set(CMAKE_C_FLAGS_DEBUG            "-g -fno-reorder-blocks -fno-schedule-insns -fno-inline")
    set(CMAKE_C_FLAGS_DEBUGFULL        "-g3 -fno-inline")
    set(CMAKE_C_FLAGS_PROFILE          "-g3 -fno-inline -ftest-coverage -fprofile-arcs")
 
@@@@ -444,14 +444,14 @@@@ if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    set(KDE4_ENABLE_EXCEPTIONS "-fexceptions -UQT_NO_EXCEPTIONS")
 
    # Select flags.
-   set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG -DQT_NO_DEBUG")
-   set(CMAKE_CXX_FLAGS_RELEASE        "-O2 -DNDEBUG -DQT_NO_DEBUG")
-   set(CMAKE_CXX_FLAGS_DEBUG          "-g -O2 -fno-inline")
+   set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-g -DNDEBUG -DQT_NO_DEBUG")
+   set(CMAKE_CXX_FLAGS_RELEASE        "-DNDEBUG -DQT_NO_DEBUG")
+   set(CMAKE_CXX_FLAGS_DEBUG          "-g -fno-inline")
    set(CMAKE_CXX_FLAGS_DEBUGFULL      "-g3 -fno-inline")
    set(CMAKE_CXX_FLAGS_PROFILE        "-g3 -fno-inline -ftest-coverage -fprofile-arcs")
-   set(CMAKE_C_FLAGS_RELWITHDEBINFO   "-O2 -g -DNDEBUG -DQT_NO_DEBUG")
-   set(CMAKE_C_FLAGS_RELEASE          "-O2 -DNDEBUG -DQT_NO_DEBUG")
-   set(CMAKE_C_FLAGS_DEBUG            "-g -O2 -fno-inline")
+   set(CMAKE_C_FLAGS_RELWITHDEBINFO   "-g -DNDEBUG -DQT_NO_DEBUG")
+   set(CMAKE_C_FLAGS_RELEASE          "-DNDEBUG -DQT_NO_DEBUG")
+   set(CMAKE_C_FLAGS_DEBUG            "-g -fno-inline")
    set(CMAKE_C_FLAGS_DEBUGFULL        "-g3 -fno-inline")
    set(CMAKE_C_FLAGS_PROFILE          "-g3 -fno-inline -ftest-coverage -fprofile-arcs")
 
@


1.3
log
@
Like kdelibs, drop optimizations
@
text
@d1 1
a1 1
$OpenBSD: patch-cmake_FindPhononInternal_cmake,v 1.2 2014/07/10 19:50:26 zhuk Exp $
d3 4
a6 3
--- cmake/FindPhononInternal.cmake.orig	Wed Oct 15 13:18:52 2014
+++ cmake/FindPhononInternal.cmake	Wed Nov  5 13:45:12 2014
@@@@ -171,13 +171,13 @@@@ set(CMAKE_MODULE_PATH ${_phonon_cmake_module_path_back
d12 3
a14 2
+set(SHARE_INSTALL_PREFIX        "share"            CACHE PATH "Base directory for files which go to share/")
+set(INCLUDE_INSTALL_DIR         "include"          CACHE PATH "The subdirectory to the header prefix")
d17 1
a17 2
+    set(INCLUDE_INSTALL_DIR         "include/${PHONON_LIB_SONAME}"       CACHE PATH "The subdirectory to the header prefix")
 endif (PHONON_BUILD_PHONON4QT5)
d20 18
a37 5
+set(BIN_INSTALL_DIR             "bin"              CACHE PATH "The install dir for executables (default ${EXEC_INSTALL_PREFIX}/bin)")
+set(LIB_INSTALL_DIR             "${CMAKE_INSTALL_LIBDIR}"   CACHE PATH "The subdirectory relative to the install prefix where libraries will be installed")
 set(PLUGIN_INSTALL_DIR          "${LIB_INSTALL_DIR}/kde4"                   CACHE PATH "The subdirectory relative to the install prefix where plugins will be installed (default is ${LIB_INSTALL_DIR}/kde4)")
 if (PHONON_BUILD_PHONON4QT5)
     set(PLUGIN_INSTALL_DIR          "${LIB_INSTALL_DIR}/qt5"                   CACHE PATH "The subdirectory relative to the install prefix where plugins will be installed (default is ${LIB_INSTALL_DIR}/qt5)" FORCE)
@


1.2
log
@Another meaningful update from KDE land: Phonon 4.7.2 and friends.
Main change is that VLC backend becames the default (and really performs
better than GStreamer one).

(now please get your children out of display)

Another change is that due the fact that Phonon now supports library
renaming upstream, libphononexperimental.so becomes
libphonon_sexperimental.so. This doesn't affect any ports imported as of now.

REVISION bumps for the dependant ports to follow.
@
text
@d1 1
a1 1
$OpenBSD: patch-cmake_FindPhononInternal_cmake,v 1.1 2013/04/24 08:53:37 zhuk Exp $
d3 2
a4 2
--- cmake/FindPhononInternal.cmake.orig	Fri Dec  6 14:22:44 2013
+++ cmake/FindPhononInternal.cmake	Wed May 14 12:20:09 2014
d24 42
@


1.1
log
@Update Phonon to 4.6.0. Major changes:
  * Main library renamed from "phonon" to "phonon_s", to avoid clashing
    with Qt4's one.
  * Backends now live in multimedia/phonon-backend port (committed earlier).
  * The multimedia/phonon module added, to avoid adding complicated
    RDEP strings to ports of Phonon users.
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 3
--- cmake/FindPhononInternal.cmake.orig	Thu Nov 15 15:47:01 2012
+++ cmake/FindPhononInternal.cmake	Thu Nov 15 15:46:55 2012
@@@@ -90,10 +90,10 @@@@ set(CMAKE_MODULE_PATH ${_phonon_cmake_module_path_back
d7 1
a7 1
 set(LIB_SUFFIX "" CACHE STRING "Define suffix of directory name (32/64)" )
d11 6
d18 1
a18 3
-set(LIB_INSTALL_DIR             "lib${LIB_SUFFIX}" ) #  CACHE PATH "The subdirectory relative to the install prefix where libraries will be installed (default is ${EXEC_INSTALL_PREFIX}/lib${LIB_SUFFIX})")
+set(SHARE_INSTALL_PREFIX        "share"              CACHE PATH "Base directory for files which go to share/")
+set(INCLUDE_INSTALL_DIR         "include"            CACHE PATH "The subdirectory to the header prefix")
d20 1
a20 1
+set(LIB_INSTALL_DIR             "lib${LIB_SUFFIX}"   CACHE PATH "The subdirectory relative to the install prefix where libraries will be installed (default is ${EXEC_INSTALL_PREFIX}/lib${LIB_SUFFIX})")
d22 2
a23 2
 set(ICON_INSTALL_DIR            "${SHARE_INSTALL_PREFIX}/icons"             CACHE PATH "The icon install dir (default ${SHARE_INSTALL_PREFIX}/share/icons/)")
 set(SERVICES_INSTALL_DIR        "${SHARE_INSTALL_PREFIX}/kde4/services"     CACHE PATH "The install dir for service (desktop, protocol, ...) files")
@

