head	1.6;
access;
symbols
	OPENBSD_5_9:1.5.0.6
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2016.04.29.21.10.22;	author zhuk;	state dead;
branches;
next	1.5;
commitid	u9TvebbKy1wgQMr9;

1.5
date	2014.04.23.20.14.40;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2013.01.19.09.51.30;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2012.05.05.07.49.28;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.26.22.33.36;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2008.07.09.02.13.01;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove KDE3 applications that have well-working KDE4+ counterparts.
@
text
@$OpenBSD: patch-plugins_decoder_ffmpeg_k3bffmpegwrapper_cpp,v 1.5 2014/04/23 20:14:40 brad Exp $

Update for newer FFmpeg API.

--- plugins/decoder/ffmpeg/k3bffmpegwrapper.cpp.orig	Fri Nov  2 05:55:03 2007
+++ plugins/decoder/ffmpeg/k3bffmpegwrapper.cpp	Wed Apr 23 16:07:07 2014
@@@@ -18,8 +18,8 @@@@
 #include "k3bffmpegwrapper.h"
 
 extern "C" {
-#include <ffmpeg/avcodec.h>
-#include <ffmpeg/avformat.h>
+#include <libavcodec/avcodec.h>
+#include <libavformat/avformat.h>
 }
 
 #include <string.h>
@@@@ -31,6 +31,11 @@@@ extern "C" {
 #define FFMPEG_BUILD_PRE_4629
 #endif
 
+#if LIBAVCODEC_VERSION_INT < AV_VERSION_INT(52, 64, 0)
+#define AVMEDIA_TYPE_AUDIO CODEC_TYPE_AUDIO
+#define AVMEDIA_TYPE_VIDEO CODEC_TYPE_VIDEO
+#define AVMEDIA_TYPE_SUBTITLE CODEC_TYPE_SUBTITLE
+#endif
 
 K3bFFMpegWrapper* K3bFFMpegWrapper::s_instance = 0;
 
@@@@ -44,7 +49,7 @@@@ class K3bFFMpegFile::Private (public)
   K3b::Msf length;
 
   // for decoding
-  char outputBuffer[AVCODEC_MAX_AUDIO_FRAME_SIZE];
+  char outputBuffer[192000];
   char* outputBufferPos;
   int outputBufferSize;
   AVPacket packet;
@@@@ -74,14 +79,22 @@@@ bool K3bFFMpegFile::open()
   close();
 
   // open the file
+# if LIBAVFORMAT_VERSION_INT >= AV_VERSION_INT(53, 2, 0)
+  int err = avformat_open_input( &d->formatContext, m_filename.local8Bit(), 0, 0);
+# else
   int err = av_open_input_file( &d->formatContext, m_filename.local8Bit(), 0, 0, 0 );
+# endif
   if( err < 0 ) {
     kdDebug() << "(K3bFFMpegFile) unable to open " << m_filename << " with error " << err << endl;
     return false;
   }
 
   // analyze the streams
+# if LIBAVFORMAT_VERSION_INT >= AV_VERSION_INT(53, 6, 0)
+  avformat_find_stream_info( d->formatContext, NULL );
+# else
   av_find_stream_info( d->formatContext );
+# endif
 
   // we only handle files containing one audio stream
   if( d->formatContext->nb_streams != 1 ) {
@@@@ -95,7 +108,9 @@@@ bool K3bFFMpegFile::open()
 #else
   AVCodecContext* codecContext =  d->formatContext->streams[0]->codec;
 #endif
-  if( codecContext->codec_type != CODEC_TYPE_AUDIO ) {
+
+  if( codecContext->codec_type != AVMEDIA_TYPE_AUDIO)
+  {
     kdDebug() << "(K3bFFMpegFile) not a simple audio stream: " << m_filename << endl;
     return false;
   }
@@@@ -109,7 +124,13 @@@@ bool K3bFFMpegFile::open()
 
   // open the codec on our context
   kdDebug() << "(K3bFFMpegFile) found codec for " << m_filename << endl;
-  if( avcodec_open( codecContext, d->codec ) < 0 ) {
+  if(
+#    if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(53, 8, 0)
+     avcodec_open2( codecContext, d->codec, NULL ) < 0
+#    else
+     avcodec_open( codecContext, d->codec ) < 0
+#    endif
+    ) {
     kdDebug() << "(K3bFFMpegDecoderFactory) could not open codec." << endl;
     return false;
   }
@@@@ -123,7 +144,11 @@@@ bool K3bFFMpegFile::open()
   }
 
   // dump some debugging info
+# if LIBAVFORMAT_VERSION_INT >= AV_VERSION_INT(52, 101, 0)
+  av_dump_format( d->formatContext, 0, m_filename.local8Bit(), 0 );
+# else
   dump_format( d->formatContext, 0, m_filename.local8Bit(), 0 );
+# endif
 
   return true;
 }
@@@@ -145,7 +170,11 @@@@ void K3bFFMpegFile::close()
   }
 
   if( d->formatContext ) {
+#   if LIBAVFORMAT_VERSION_INT >= AV_VERSION_INT(53, 17, 0)
+    avformat_close_input( &d->formatContext );
+#   else
     av_close_input_file( d->formatContext );
+#   endif
     d->formatContext = 0;
   }
 }
@@@@ -194,7 +223,11 @@@@ QString K3bFFMpegFile::typeComment() const
     return i18n("Windows Media v1");
   case CODEC_ID_WMAV2:
     return i18n("Windows Media v2");
+#if LIBAVCODEC_VERSION_MAJOR < 52
   case CODEC_ID_MP3LAME:
+#else
+  case CODEC_ID_MP3:
+#endif
     return i18n("MPEG 1 Layer III");
   case CODEC_ID_AAC:
     return i18n("Advanced Audio Coding (AAC)");
@@@@ -207,30 +240,39 @@@@ QString K3bFFMpegFile::typeComment() const
 QString K3bFFMpegFile::title() const
 {
   // FIXME: is this UTF8 or something??
-  if( d->formatContext->title[0] != '\0' )
-    return QString::fromLocal8Bit( d->formatContext->title );
+  AVDictionaryEntry *ade = av_dict_get( d->formatContext->metadata, "TITLE", NULL, 0 );
+  if( ade == NULL )
+    return QString();
+  if( ade->value != '\0' )
+    return QString::fromLocal8Bit( ade->value );
   else
-    return QString::null;
+    return QString();
 }
 
 
 QString K3bFFMpegFile::author() const
 {
   // FIXME: is this UTF8 or something??
-  if( d->formatContext->author[0] != '\0' )
-    return QString::fromLocal8Bit( d->formatContext->author );
+  AVDictionaryEntry *ade = av_dict_get( d->formatContext->metadata, "ARTIST", NULL, 0 );
+  if( ade == NULL )
+    return QString();
+  if( ade->value != '\0' )
+    return QString::fromLocal8Bit( ade->value );
   else
-    return QString::null;
+    return QString();
 }
 
 
 QString K3bFFMpegFile::comment() const
 {
   // FIXME: is this UTF8 or something??
-  if( d->formatContext->comment[0] != '\0' )
-    return QString::fromLocal8Bit( d->formatContext->comment );
+  AVDictionaryEntry *ade = av_dict_get( d->formatContext->metadata, "COMMENT", NULL, 0 );
+  if( ade == NULL )
+    return QString();
+  if( ade->value != '\0' )
+    return QString::fromLocal8Bit( ade->value );
   else
-    return QString::null;
+    return QString();
 }
 
 
@@@@ -287,13 +329,29 @@@@ int K3bFFMpegFile::fillOutputBuffer()
 
     d->outputBufferPos = d->outputBuffer;
 
+#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(52, 64, 0)
+    AVPacket avp;
+    av_init_packet( &avp );
+    avp.data = d->packetData;
+    avp.size = d->packetSize;
+#   if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(53, 25, 0)
+      int len = avcodec_decode_audio4( d->formatContext->streams[0]->codec,
+                                          (AVFrame*)d->outputBuffer, &d->outputBufferSize,
+                                          &avp );
+#   else
+      int len = avcodec_decode_audio3( d->formatContext->streams[0]->codec,
+                                          (short*)d->outputBuffer, &d->outputBufferSize,
+                                          &avp );
+#   endif
+#else
 #ifdef FFMPEG_BUILD_PRE_4629
-    int len = avcodec_decode_audio( &d->formatContext->streams[0]->codec,
+    int len = avcodec_decode_audio2( &d->formatContext->streams[0]->codec,
 #else
-    int len = avcodec_decode_audio( d->formatContext->streams[0]->codec,
+    int len = avcodec_decode_audio2( d->formatContext->streams[0]->codec,
 #endif
 				    (short*)d->outputBuffer, &d->outputBufferSize,
 				    d->packetData, d->packetSize );
+#endif
 
     d->packetSize -= len;
     d->packetData += len;
@


1.5
log
@Update k3b for newer FFmpeg API.

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-plugins_decoder_ffmpeg_k3bffmpegwrapper_cpp,v 1.4 2013/01/19 09:51:30 brad Exp $
@


1.4
log
@Update for newer FFmpeg API.

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-plugins_decoder_ffmpeg_k3bffmpegwrapper_cpp,v 1.3 2012/05/05 07:49:28 ajacoutot Exp $
d6 1
a6 1
+++ plugins/decoder/ffmpeg/k3bffmpegwrapper.cpp	Fri Jan 18 17:15:18 2013
d18 9
a26 1
@@@@ -43,8 +43,9 @@@@ class K3bFFMpegFile::Private (public)
d28 3
d33 1
a33 1
-  // for decoding
d35 1
a35 3
+  // for decoding. ffmpeg requires 16-byte alignment.
+  char outputBuffer[AVCODEC_MAX_AUDIO_FRAME_SIZE + 15];
+  char* alignedOutputBuffer;
d39 1
a39 10
@@@@ -59,6 +60,8 @@@@ K3bFFMpegFile::K3bFFMpegFile( const QString& filename 
   d = new Private;
   d->formatContext = 0;
   d->codec = 0;
+  int offset = 0x10 - (reinterpret_cast<intptr_t>(&d->outputBuffer) & 0xf);
+  d->alignedOutputBuffer = &d->outputBuffer[offset];
 }
 
 
@@@@ -74,14 +77,22 @@@@ bool K3bFFMpegFile::open()
d62 1
a62 1
@@@@ -95,7 +106,14 @@@@ bool K3bFFMpegFile::open()
d68 1
a68 6
+  if( codecContext->codec_type != 
+#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(52, 64, 0)
+        AVMEDIA_TYPE_AUDIO)
+#else
+        CODEC_TYPE_AUDIO)
+#endif
d73 1
a73 1
@@@@ -109,7 +127,13 @@@@ bool K3bFFMpegFile::open()
d88 1
a88 1
@@@@ -123,7 +147,11 @@@@ bool K3bFFMpegFile::open()
d100 1
a100 1
@@@@ -145,7 +173,11 @@@@ void K3bFFMpegFile::close()
d112 1
a112 1
@@@@ -194,7 +226,11 @@@@ QString K3bFFMpegFile::typeComment() const
d124 1
a124 1
@@@@ -207,30 +243,39 @@@@ QString K3bFFMpegFile::typeComment() const
d173 3
a175 7
@@@@ -285,15 +330,32 @@@@ int K3bFFMpegFile::fillOutputBuffer()
       return 0;
     }
 
-    d->outputBufferPos = d->outputBuffer;
+    d->outputBufferPos = d->alignedOutputBuffer;
+    d->outputBufferSize = AVCODEC_MAX_AUDIO_FRAME_SIZE;
@


1.3
log
@Update for newer FFmpeg API.

from upstream via Brad
@
text
@d1 1
a1 1
$OpenBSD: patch-plugins_decoder_ffmpeg_k3bffmpegwrapper_cpp,v 1.2 2010/05/26 22:33:36 jakemsr Exp $
d6 1
a6 1
+++ plugins/decoder/ffmpeg/k3bffmpegwrapper.cpp	Thu May  3 16:03:20 2012
d39 24
a62 1
@@@@ -95,7 +98,14 @@@@ bool K3bFFMpegFile::open()
d78 40
a117 1
@@@@ -194,7 +204,11 @@@@ QString K3bFFMpegFile::typeComment() const
d129 1
a129 1
@@@@ -207,30 +221,39 @@@@ QString K3bFFMpegFile::typeComment() const
d178 1
a178 1
@@@@ -285,15 +308,31 @@@@ int K3bFFMpegFile::fillOutputBuffer()
d186 14
a199 2
+#if LIBAVCODEC_VERSION_MAJOR < 52
+      int len = avcodec_decode_audio(
a200 7
+   #if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(52, 64, 0)
+      int len = avcodec_decode_audio3(
+   #else
+      int len = avcodec_decode_audio2(
+   #endif
+#endif
+
d203 1
a203 1
+          &d->formatContext->streams[0]->codec,
d206 1
a206 1
+          d->formatContext->streams[0]->codec,
d208 2
a209 8
-				    (short*)d->outputBuffer, &d->outputBufferSize,
-				    d->packetData, d->packetSize );
+          (short*)d->alignedOutputBuffer,
+          &d->outputBufferSize,
+#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(52, 64, 0)
+          &d->packet );
+#else
+          d->packetData, d->packetSize );
@


1.2
log
@make it work with newer ffmpeg, update wantlib/lib_depends
@
text
@d1 6
a6 3
$OpenBSD: patch-plugins_decoder_ffmpeg_k3bffmpegwrapper_cpp,v 1.1 2008/07/09 02:13:01 jakemsr Exp $
--- plugins/decoder/ffmpeg/k3bffmpegwrapper.cpp.orig	Fri Nov  2 02:55:03 2007
+++ plugins/decoder/ffmpeg/k3bffmpegwrapper.cpp	Wed May 19 05:59:07 2010
d18 2
a19 1
@@@@ -44,8 +44,8 @@@@ class K3bFFMpegFile::Private (public)
d22 1
a22 1
   // for decoding
d24 4
a27 3
-  char* outputBufferPos;
+  DECLARE_ALIGNED(16,uint8_t,outputBuffer)[(AVCODEC_MAX_AUDIO_FRAME_SIZE*3)/2];
+  uint8_t* outputBufferPos;
d30 26
a55 2
   Q_UINT8* packetData;
@@@@ -194,7 +194,7 @@@@ QString K3bFFMpegFile::typeComment() const
d59 3
a61 1
-  case CODEC_ID_MP3LAME:
d63 1
d67 47
a113 1
@@@@ -287,13 +287,11 @@@@ int K3bFFMpegFile::fillOutputBuffer()
a114 1
     d->outputBufferPos = d->outputBuffer;
d116 19
a134 1
-#ifdef FFMPEG_BUILD_PRE_4629
d136 2
a137 1
-#else
d139 2
a140 1
-#endif
d143 7
a149 5
+    d->outputBufferSize = sizeof(d->outputBuffer);
+
+    int len = avcodec_decode_audio3( d->formatContext->streams[0]->codec,
+				    (int16_t*)d->outputBuffer, &d->outputBufferSize,
+				    &d->packet );
@


1.1
log
@
* FFmpeg headers moved
* FFmpeg LIB_DEPENDS/WANTLIB changes
* add @@bin markers in PLISTs
* bump PKGNAMEs

feedback/ok brad@@
@
text
@d1 3
a3 3
$OpenBSD$
--- plugins/decoder/ffmpeg/k3bffmpegwrapper.cpp.orig	Sun Jun 22 01:24:57 2008
+++ plugins/decoder/ffmpeg/k3bffmpegwrapper.cpp	Sun Jun 22 01:25:20 2008
d15 39
@

