head	1.17;
access;
symbols
	OPENBSD_6_1:1.16.0.4
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.2
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.4
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.12.0.2
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.11.0.2
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.10.0.6
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.4
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.2
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	ajacoutot_20070408:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.17
date	2017.08.10.12.01.20;	author sthen;	state Exp;
branches;
next	1.16;
commitid	NZQ9L6batgbzxZbV;

1.16
date	2016.05.09.06.09.09;	author ajacoutot;	state Exp;
branches;
next	1.15;
commitid	OWktFjaK2UvrOJdD;

1.15
date	2015.08.13.07.35.21;	author ajacoutot;	state Exp;
branches;
next	1.14;
commitid	LNaY8oXb06bvpzg1;

1.14
date	2015.05.11.19.30.20;	author kettenis;	state Exp;
branches;
next	1.13;
commitid	6zuYHuedHbE4or8F;

1.13
date	2015.01.07.08.53.07;	author brad;	state Exp;
branches;
next	1.12;
commitid	c60Vyn40Z7Fnnzmm;

1.12
date	2014.06.02.22.01.02;	author brad;	state Exp;
branches;
next	1.11;
commitid	PxbSA5wQF4NDNHgd;

1.11
date	2013.10.06.20.38.52;	author brad;	state Exp;
branches;
next	1.10;

1.10
date	2012.05.25.07.45.33;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2011.11.07.15.53.08;	author ajacoutot;	state Exp;
branches;
next	1.8;

1.8
date	2011.09.14.09.23.49;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2011.03.12.21.07.09;	author jakemsr;	state Exp;
branches;
next	1.6;

1.6
date	2010.11.06.23.05.48;	author jakemsr;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.26.21.18.17;	author jakemsr;	state Exp;
branches;
next	1.4;

1.4
date	2009.04.14.19.50.47;	author kili;	state Exp;
branches;
next	1.3;

1.3
date	2008.07.22.20.24.04;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2007.07.20.20.11.48;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2007.04.08.17.31.01;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.04.08.17.31.01;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.17
log
@update to x264-20170717, from Brad
@
text
@$OpenBSD: patch-Makefile,v 1.16 2016/05/09 06:09:09 ajacoutot Exp $
Index: Makefile
--- Makefile.orig
+++ Makefile
@@@@ -199,7 +199,7 @@@@ example: example$(EXE)
 endif
 
 x264$(EXE): $(GENERATED) .depend $(OBJCLI) $(CLI_LIBX264)
-	$(LD)$@@ $(OBJCLI) $(CLI_LIBX264) $(LDFLAGSCLI) $(LDFLAGS)
+	$(LD)$@@ $(OBJCLI) -L. -lx264 $(LDFLAGSCLI) $(LDFLAGS)
 
 checkasm$(EXE): $(GENERATED) .depend $(OBJCHK) $(LIBX264)
 	$(LD)$@@ $(OBJCHK) $(LIBX264) $(LDFLAGS)
@@@@ -303,7 +303,6 @@@@ ifneq ($(IMPLIBNAME),)
 	$(INSTALL) -m 755 $(SONAME) $(DESTDIR)$(bindir)
 	$(INSTALL) -m 644 $(IMPLIBNAME) $(DESTDIR)$(libdir)
 else ifneq ($(SONAME),)
-	ln -f -s $(SONAME) $(DESTDIR)$(libdir)/libx264.$(SOSUFFIX)
 	$(INSTALL) -m 755 $(SONAME) $(DESTDIR)$(libdir)
 endif
 
@


1.16
log
@Update to x264-20160508.

from Brad (maintainer)
@
text
@d1 4
a4 3
$OpenBSD: patch-Makefile,v 1.15 2015/08/13 07:35:21 ajacoutot Exp $
--- Makefile.orig	Sun May  8 16:45:04 2016
+++ Makefile	Sun May  8 21:27:57 2016
d14 1
a14 1
@@@@ -302,7 +302,6 @@@@ ifneq ($(IMPLIBNAME),)
@


1.15
log
@Update to x264-20150728.

from brad (maintainer)
@
text
@d1 4
a4 4
$OpenBSD: patch-Makefile,v 1.14 2015/05/11 19:30:20 kettenis Exp $
--- Makefile.orig	Tue Jul 28 16:45:03 2015
+++ Makefile	Tue Jul 28 21:51:16 2015
@@@@ -197,7 +197,7 @@@@ example: example$(EXE)
d13 1
a13 1
@@@@ -300,7 +300,6 @@@@ ifneq ($(IMPLIBNAME),)
@


1.14
log
@Drop local changes that build the static library without -fPIC.  These days
most of our architectures default to PIE, which for all practical purpose
is equivalent to PIC.  This also brings back -Bsymbolic, which is needed
on amd64 to work around the fact that some of the assembler code generates
R_X86_64_PC32 relocations that binutils 2.17 complains about (rightly so).

Set REVISION to reflect that this actually changes the generated binaries.

ok ajacoutot@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Makefile,v 1.13 2015/01/07 08:53:07 brad Exp $
--- Makefile.orig	Thu Dec 18 22:45:04 2014
+++ Makefile	Sat May  9 22:01:09 2015
@@@@ -185,7 +185,7 @@@@ example: example$(EXE)
d13 1
a13 1
@@@@ -288,7 +288,6 @@@@ ifneq ($(IMPLIBNAME),)
@


1.13
log
@Update to x264-20141218.
@
text
@d1 4
a4 36
$OpenBSD: patch-Makefile,v 1.12 2014/06/02 22:01:02 brad Exp $
--- Makefile.orig	Thu Dec 18 16:45:04 2014
+++ Makefile	Wed Jan  7 01:11:42 2015
@@@@ -100,7 +100,9 @@@@ endif
 ifdef ARCH_X86
 SRCS   += common/x86/mc-c.c common/x86/predict-c.c
 OBJASM  = $(ASMSRC:%.asm=%.o)
+SOBJASM = $(ASMSRC:%.asm=%.so)
 $(OBJASM): common/x86/x86inc.asm common/x86/x86util.asm
+$(SOBJASM): common/x86/x86inc.asm common/x86/x86util.asm
 OBJCHK += tools/checkasm-a.o
 endif
 endif
@@@@ -160,8 +162,10 @@@@ SRCS += common/opencl.c encoder/slicetype-cl.c
 endif
 
 OBJS   += $(SRCS:%.c=%.o)
+SOBJS  += $(SRCS:%.c=%.so)
 OBJCLI += $(SRCCLI:%.c=%.o)
 OBJSO  += $(SRCSO:%.c=%.o)
+SOBJSO += $(SRCSO:%.c=%.so)
 
 .PHONY: all default fprofiled clean distclean install install-* uninstall cli lib-* etags
 
@@@@ -174,8 +178,8 @@@@ $(LIBX264): $(GENERATED) .depend $(OBJS) $(OBJASM)
 	$(AR)$@@ $(OBJS) $(OBJASM)
 	$(if $(RANLIB), $(RANLIB) $@@)
 
-$(SONAME): $(GENERATED) .depend $(OBJS) $(OBJASM) $(OBJSO)
-	$(LD)$@@ $(OBJS) $(OBJASM) $(OBJSO) $(SOFLAGS) $(LDFLAGS)
+$(SONAME): $(GENERATED) .depend $(SOBJS) $(SOBJASM) $(SOBJSO)
+	$(LD)$@@ $(SOBJS) $(SOBJASM) $(SOBJSO) $(SOFLAGS) $(LDFLAGS)
 
 ifneq ($(EXE),)
 .PHONY: x264 checkasm example
@@@@ -185,7 +189,7 @@@@ example: example$(EXE)
d13 1
a13 32
@@@@ -199,10 +203,21 @@@@ $(OBJS) $(OBJASM) $(OBJSO) $(OBJCLI) $(OBJCHK) $(OBJEX
 	$(AS) $(ASFLAGS) -o $@@ $<
 	-@@ $(if $(STRIP), $(STRIP) -x $@@) # delete local/anonymous symbols, so they don't show up in oprofile
 
+%.so: %.asm
+	$(AS) $(ASFLAGS) -DPIC -o $@@ $<
+	-@@ $(if $(STRIP), $(STRIP) -x $@@) # delete local/anonymous symbols, so they don't show up in oprofile
+
 %.o: %.S
 	$(AS) $(ASFLAGS) -o $@@ $<
 	-@@ $(if $(STRIP), $(STRIP) -x $@@) # delete local/anonymous symbols, so they don't show up in oprofile
 
+%.so: %.S
+	$(AS) $(ASFLAGS) -DPIC -o $@@ $<
+	-@@ $(if $(STRIP), $(STRIP) -x $@@) # delete local/anonymous symbols, so they don't show up in oprofile
+
+%.so: %.c
+	$(CC) $(CFLAGS) -fPIC -c -o $@@ $<
+
 %.dll.o: %.rc x264.h
 	$(RC) $(RCFLAGS)$@@ -DDLL $<
 
@@@@ -258,7 +273,7 @@@@ endif
 endif
 
 clean:
-	rm -f $(OBJS) $(OBJASM) $(OBJCLI) $(OBJSO) $(SONAME) *.a *.lib *.exp *.pdb x264 x264.exe .depend TAGS
+	rm -f $(OBJS) $(SOBJS) $(OBJASM) $(SOBJASM) $(OBJCLI) $(OBJSO) $(SOBJSO) $(SOBJSO) $(SONAME) *.a *.lib *.exp *.pdb x264 x264.exe .depend TAGS
 	rm -f checkasm checkasm.exe $(OBJCHK) $(GENERATED) x264_lookahead.clbin
 	rm -f example example.exe $(OBJEXAMPLE)
 	rm -f $(SRC2:%.c=%.gcda) $(SRC2:%.c=%.gcno) *.dyn pgopti.dpi pgopti.dpi.lock *.pgd *.pgc
@@@@ -288,7 +303,6 @@@@ ifneq ($(IMPLIBNAME),)
@


1.12
log
@Update to x264-20140525.

ok juan@@
@
text
@d1 5
a5 5
$OpenBSD: patch-Makefile,v 1.11 2013/10/06 20:38:52 brad Exp $
--- Makefile.orig	Sun May 25 16:45:05 2014
+++ Makefile	Mon May 26 15:16:54 2014
@@@@ -101,7 +101,9 @@@@ ifdef ARCH_X86
 ASFLAGS += -I$(SRCPATH)/common/x86/
d14 1
a14 1
@@@@ -154,8 +156,10 @@@@ SRCS += common/opencl.c encoder/slicetype-cl.c
d23 1
a23 1
 .PHONY: all default fprofiled clean distclean install uninstall lib-static lib-shared cli install-lib-dev install-lib-static install-lib-shared install-cli
d25 1
a25 1
@@@@ -168,8 +172,8 @@@@ $(LIBX264): $(GENERATED) .depend $(OBJS) $(OBJASM)
d35 2
a36 2
 .PHONY: x264 checkasm
@@@@ -178,7 +182,7 @@@@ checkasm: checkasm$(EXE)
d45 1
a45 1
@@@@ -189,10 +193,21 @@@@ $(OBJS) $(OBJASM) $(OBJSO) $(OBJCLI) $(OBJCHK): .depen
d67 1
a67 1
@@@@ -238,7 +253,7 @@@@ fprofiled:
d74 3
a76 3
 	rm -f $(SRC2:%.c=%.gcda) $(SRC2:%.c=%.gcno) *.dyn pgopti.dpi pgopti.dpi.lock
 
@@@@ -267,7 +282,6 @@@@ ifneq ($(IMPLIBNAME),)
@


1.11
log
@Update to x264-20131002.

ok ajacoutot@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Makefile,v 1.10 2012/05/25 07:45:33 ajacoutot Exp $
--- Makefile.orig	Wed Oct  2 16:45:04 2013
+++ Makefile	Wed Oct  2 22:00:35 2013
@@@@ -102,7 +102,9 @@@@ ifdef ARCH_X86
d14 1
a14 1
@@@@ -155,8 +157,10 @@@@ SRCS += common/opencl.c encoder/slicetype-cl.c
d25 1
a25 1
@@@@ -169,8 +173,8 @@@@ $(LIBX264): $(GENERATED) .depend $(OBJS) $(OBJASM)
d36 1
a36 1
@@@@ -179,7 +183,7 @@@@ checkasm: checkasm$(EXE)
d45 1
a45 1
@@@@ -190,10 +194,21 @@@@ $(OBJS) $(OBJASM) $(OBJSO) $(OBJCLI) $(OBJCHK): .depen
d67 1
a67 1
@@@@ -239,7 +254,7 @@@@ fprofiled:
d76 3
a78 3
@@@@ -268,7 +283,6 @@@@ ifneq ($(IMPLIBNAME),)
 	install -m 755 $(SONAME) $(DESTDIR)$(bindir)
 	install -m 644 $(IMPLIBNAME) $(DESTDIR)$(libdir)
d81 1
a81 1
 	install -m 755 $(SONAME) $(DESTDIR)$(libdir)
@


1.10
log
@Update to x264-20120520.

from Brad (maintainer)
@
text
@d1 4
a4 4
$OpenBSD: patch-Makefile,v 1.9 2011/11/07 15:53:08 ajacoutot Exp $
--- Makefile.orig	Sun May 20 16:45:03 2012
+++ Makefile	Sun May 20 20:23:07 2012
@@@@ -100,7 +100,9 @@@@ ifdef ARCH_X86
d14 1
a14 1
@@@@ -146,8 +148,10 @@@@ endif
d25 1
a25 1
@@@@ -160,8 +164,8 @@@@ $(LIBX264): .depend $(OBJS) $(OBJASM)
d29 1
a29 1
-$(SONAME): .depend $(OBJS) $(OBJASM) $(OBJSO)
d31 1
a31 1
+$(SONAME): .depend $(SOBJS) $(SOBJASM) $(SOBJSO)
d36 1
a36 1
@@@@ -170,7 +174,7 @@@@ checkasm: checkasm$(EXE)
d39 1
a39 1
 x264$(EXE): .depend $(OBJCLI) $(CLI_LIBX264)
d43 1
a43 1
 checkasm$(EXE): .depend $(OBJCHK) $(LIBX264)
d45 1
a45 1
@@@@ -181,10 +185,21 @@@@ $(OBJS) $(OBJASM) $(OBJSO) $(OBJCLI) $(OBJCHK): .depen
d67 1
a67 1
@@@@ -230,7 +245,7 @@@@ fprofiled:
d72 2
a73 2
+	rm -f $(OBJS) $(SOBJS) $(OBJASM) $(SOBJASM) $(OBJCLI) $(OBJSO) $(SOBJSO) $(SONAME) *.a *.lib *.exp *.pdb x264 x264.exe .depend TAGS
 	rm -f checkasm checkasm.exe $(OBJCHK)
d76 1
a76 1
@@@@ -259,7 +274,6 @@@@ ifneq ($(IMPLIBNAME),)
@


1.9
log
@Update to x264-20111027.

from Brad, maintainer
@
text
@d1 5
a5 5
$OpenBSD: patch-Makefile,v 1.8 2011/09/14 09:23:49 ajacoutot Exp $
--- Makefile.orig	Thu Oct 27 16:45:03 2011
+++ Makefile	Fri Oct 28 01:31:11 2011
@@@@ -87,7 +87,9 @@@@ ifdef ARCH_X86
 ASFLAGS += -Icommon/x86/
d11 1
a11 1
 checkasm: tools/checkasm-a.o
d14 1
a14 1
@@@@ -131,8 +133,10 @@@@ endif
d17 5
a21 6
 OBJS = $(SRCS:%.c=%.o)
+SOBJS = $(SRCS:%.c=%.so)
 OBJCLI = $(SRCCLI:%.c=%.o)
 OBJSO = $(SRCSO:%.c=%.o)
+SOBJSO = $(SRCSO:%.c=%.so)
 DEP  = depend
d23 3
a25 2
 .PHONY: all default fprofiled clean distclean install uninstall dox test testclean lib-static lib-shared cli install-lib-dev install-lib-static install-lib-shared install-cli
@@@@ -147,11 +151,11 @@@@ $(LIBX264): .depend $(OBJS) $(OBJASM)
d34 5
d43 3
a45 3
 checkasm: tools/checkasm.o $(LIBX264)
 	$(LD)$@@ $+ $(LDFLAGS)
@@@@ -160,10 +164,21 @@@@ checkasm: tools/checkasm.o $(LIBX264)
d64 4
a67 4
 .depend: config.mak
 	@@rm -f .depend
 	@@$(foreach SRC, $(SRCS) $(SRCCLI) $(SRCSO), $(CC) $(CFLAGS) $(SRC) $(DEPMT) $(SRC:%.c=%.o) $(DEPMM) 1>> .depend;)
@@@@ -203,7 +218,7 @@@@ fprofiled:
d72 2
a73 2
+	rm -f $(OBJS) $(SOBJS) $(OBJASM) $(SOBJASM) $(OBJCLI) $(OBJSO) $(SONAME) *.a *.lib *.exp *.pdb x264 x264.exe .depend TAGS
 	rm -f checkasm checkasm.exe tools/checkasm.o tools/checkasm-a.o
d76 1
a76 1
@@@@ -233,7 +248,6 @@@@ ifneq ($(IMPLIBNAME),)
@


1.8
log
@Update to x264-20110830.

from Brad (maintainer)
bulk testing by jasper@@
@
text
@d1 3
a3 3
$OpenBSD: patch-Makefile,v 1.7 2011/03/12 21:07:09 jakemsr Exp $
--- Makefile.orig	Tue Aug 30 16:45:04 2011
+++ Makefile	Thu Sep  1 00:21:08 2011
d71 6
a76 6
@@@@ -231,7 +246,6 @@@@ install-lib-shared: lib-shared install-lib-dev
 ifeq ($(SYS),WINDOWS)
 	$(if $(SONAME), install -m 755 $(SONAME) $(DESTDIR)$(bindir))
 else
-	$(if $(SONAME), ln -f -s $(SONAME) $(DESTDIR)$(libdir)/libx264.$(SOSUFFIX))
 	$(if $(SONAME), install -m 755 $(SONAME) $(DESTDIR)$(libdir))
d78 1
a78 1
 	$(if $(IMPLIBNAME), install -m 644 $(IMPLIBNAME) $(DESTDIR)$(libdir))
@


1.7
log
@update to x264-20110225

from Brad (MAINTAINER)
@
text
@d1 3
a3 3
$OpenBSD: patch-Makefile,v 1.6 2010/11/06 23:05:48 jakemsr Exp $
--- Makefile.orig	Fri Feb 25 16:45:04 2011
+++ Makefile	Fri Feb 25 22:17:05 2011
d24 4
a27 4
 .PHONY: all default fprofiled clean distclean install uninstall dox test testclean
@@@@ -143,8 +147,8 @@@@ libx264.a: .depend $(OBJS) $(OBJASM)
 	$(AR) rc libx264.a $(OBJS) $(OBJASM)
 	$(RANLIB) libx264.a
d30 1
a30 1
-	$(CC) -shared -o $@@ $(OBJS) $(OBJASM) $(OBJSO) $(SOFLAGS) $(LDFLAGS)
d32 1
a32 1
+	$(CC) -shared -fPIC -o $@@ $(SOBJS) $(SOBJASM) $(SOBJSO) $(SOFLAGS) $(LDFLAGS)
d34 7
a40 3
 x264$(EXE): $(OBJCLI) libx264.a
 	$(CC) -o $@@ $+ $(LDFLAGSCLI) $(LDFLAGS)
@@@@ -156,10 +160,21 @@@@ checkasm: tools/checkasm.o libx264.a
d42 1
a42 1
 	-@@ $(STRIP) -x $@@ # delete local/anonymous symbols, so they don't show up in oprofile
d45 2
a46 2
+	$(AS) $(ASFLAGS) -DPIC -o $@@ &<
+	-@@ $(STRIP) -x $@@ # delete local/anonymous symbols, so they don't show up in oprofile
d50 1
a50 1
 	-@@ $(STRIP) -x $@@ # delete local/anonymous symbols, so they don't show up in oprofile
d54 1
a54 1
+	-@@ $(STRIP) -x $@@ # delete local/anonymous symbols, so they don't show up in oprofile
d61 1
a61 1
 	@@$(foreach SRC, $(SRCS) $(SRCCLI) $(SRCSO), $(CC) $(CFLAGS) $(SRC) -MT $(SRC:%.c=%.o) -MM -g0 1>> .depend;)
d66 2
a67 2
-	rm -f $(OBJS) $(OBJASM) $(OBJCLI) $(OBJSO) $(SONAME) *.a x264 x264.exe .depend TAGS
+	rm -f $(OBJS) $(SOBJS) $(OBJASM) $(SOBJASM) $(OBJCLI) $(OBJSO) $(SONAME) *.a x264 x264.exe .depend TAGS
d69 4
a72 4
 	rm -f $(SRC2:%.c=%.gcda) $(SRC2:%.c=%.gcno)
 	- sed -e 's/ *-fprofile-\(generate\|use\)//g' config.mak > config.mak2 && mv config.mak2 config.mak
@@@@ -226,7 +241,6 @@@@ install: x264$(EXE) $(SONAME)
 ifeq ($(SYS),MINGW)
@


1.6
log
@update to x264-snapshot-20101023-2245
works with upcoming mplayer update as well as current ports
from Brad (MAINTAINER)
@
text
@d1 4
a4 4
$OpenBSD: patch-Makefile,v 1.5 2010/05/26 21:18:17 jakemsr Exp $
--- Makefile.orig	Sun Oct 31 17:45:08 2010
+++ Makefile	Sun Oct 31 18:53:02 2010
@@@@ -78,7 +78,9 @@@@ ifdef ARCH_X86
d14 1
a14 1
@@@@ -120,8 +122,10 @@@@ endif
d25 1
a25 1
@@@@ -132,8 +136,8 @@@@ libx264.a: .depend $(OBJS) $(OBJASM)
d36 1
a36 1
@@@@ -145,10 +149,21 @@@@ checkasm: tools/checkasm.o libx264.a
d58 1
a58 1
@@@@ -192,7 +207,7 @@@@ fprofiled:
d67 1
a67 1
@@@@ -214,7 +229,6 @@@@ install: x264$(EXE) $(SONAME)
@


1.5
log
@update to x264-snapshot-20100511-2245

this is an ABI/API change.  there will be fallout, but patches
exist and will be committed rsn ...

mostly from MAINTAINER
@
text
@d1 14
a14 4
$OpenBSD: patch-Makefile,v 1.4 2009/04/14 19:50:47 kili Exp $
--- Makefile.orig	Tue May 11 16:45:09 2010
+++ Makefile	Tue May 11 18:11:56 2010
@@@@ -112,6 +112,7 @@@@ endif
d21 1
d23 3
a25 1
@@@@ -124,8 +125,8 @@@@ libx264.a: .depend $(OBJS) $(OBJASM)
d31 2
a32 2
+$(SONAME): .depend $(SOBJS) $(OBJASM) $(OBJSO)
+	$(CC) -shared -o $@@ $(SOBJS) $(OBJASM) $(OBJSO) $(SOFLAGS) $(LDFLAGS)
d35 10
a44 2
 	$(CC) -o $@@ $+ $(LDFLAGS) $(LDFLAGSCLI)
@@@@ -141,6 +142,9 @@@@ checkasm: tools/checkasm.o libx264.a
d48 4
d58 10
a67 1
@@@@ -206,7 +210,6 @@@@ install: x264$(EXE) $(SONAME)
@


1.4
log
@
Update to a newer snapshot.

From Brad (new maintainer).

"theoretically ok" ajacoutot@@
@
text
@d1 4
a4 14
$OpenBSD: patch-Makefile,v 1.3 2008/07/22 20:24:04 brad Exp $
--- Makefile.orig	Wed Feb  4 16:45:09 2009
+++ Makefile	Thu Mar  5 10:44:49 2009
@@@@ -53,6 +53,9 @@@@ ALTIVECSRC += common/ppc/mc.c common/ppc/pixel.c commo
               common/ppc/predict.c
 SRCS += $(ALTIVECSRC)
 $(ALTIVECSRC:%.c=%.o): CFLAGS += $(ALTIVECFLAGS)
+$(ALTIVECSRC:%.c=%.so): CFLAGS += $(ALTIVECFLAGS)
+common/cpu.o: CFLAGS += $(ALTIVECFLAGS)
+common/cpu.so: CFLAGS += $(ALTIVECFLAGS)
 endif
 
 # VIS optims
@@@@ -66,6 +69,7 @@@@ SRCS += extras/getopt.c
d10 1
d12 14
a25 15
 
@@@@ -77,8 +81,8 @@@@ libx264.a: .depend $(OBJS) $(OBJASM)
 	ar rc libx264.a $(OBJS) $(OBJASM)
 	ranlib libx264.a
 
-$(SONAME): .depend $(OBJS) $(OBJASM)
-	$(CC) -shared -o $@@ $(OBJS) $(OBJASM) $(SOFLAGS) $(LDFLAGS)
+$(SONAME): .depend $(SOBJS) $(OBJASM)
+	$(CC) -shared -o $@@ $(SOBJS) $(OBJASM) $(SOFLAGS) $(LDFLAGS)
 
 x264$(EXE): $(OBJCLI) libx264.a 
 	$(CC) -o $@@ $+ $(LDFLAGS)
@@@@ -91,9 +95,12 @@@@ checkasm: tools/checkasm.o libx264.a
 # delete local/anonymous symbols, so they don't show up in oprofile
 	-@@ strip -x $@@
d31 3
a33 7
 	rm -f .depend
-	$(foreach SRC, $(SRCS) $(SRCCLI), $(CC) $(CFLAGS) $(ALTIVECFLAGS) $(SRC) -MT $(SRC:%.c=%.o) -MM -g0 1>> .depend;)
+	$(foreach SRC, $(SRCS) $(SRCCLI), ( $(ECHON) "`dirname $(SRC)`/" && $(CC) $(CFLAGS) $(ALTIVECFLAGS) $(SRC) -MM -g0 ) 1>> .depend;)
 
 config.mak:
 	./configure
@@@@ -154,7 +161,6 @@@@ install: x264$(EXE) $(SONAME)
d37 1
a37 1
-	$(if $(SONAME), ln -sf $(SONAME) $(DESTDIR)$(libdir)/libx264.$(SOSUFFIX))
@


1.3
log
@Upgrade to x264 snapshot 20080713.

Also remove ajacoutot@@ as maintainer per his request.

ok jakemsr@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Makefile,v 1.2 2007/07/20 20:11:48 ajacoutot Exp $
--- Makefile.orig	Fri Jul  4 16:45:05 2008
+++ Makefile	Wed Jul  9 00:15:36 2008
@@@@ -52,6 +52,9 @@@@ ALTIVECSRC += common/ppc/mc.c common/ppc/pixel.c commo
d14 1
a14 1
@@@@ -65,6 +68,7 @@@@ SRCS += extras/getopt.c
d22 1
a22 1
@@@@ -76,8 +80,8 @@@@ libx264.a: .depend $(OBJS) $(OBJASM)
d33 1
a33 1
@@@@ -93,6 +97,9 @@@@ checkasm: tools/checkasm.o libx264.a
d42 6
a47 2
 # Hacky - because gcc 2.9x doesn't have -MT
@@@@ -160,7 +167,6 @@@@ install: x264$(EXE) $(SONAME)
d51 1
a51 1
-	$(if $(SONAME), ln -sf $(SONAME) $(DESTDIR)$(libdir)/libx264.so)
@


1.2
log
@- really use nasm to build x264 under i386 and use yasm under amd64
- dont't add -fPIC to $CFLAGS automatically (even though we set --enable-pic) ;
this is handled in the Makefile so that we can build the static lib from
non-pic objects

Tested by sthen and myself
@
text
@d1 5
a5 23
$OpenBSD: patch-Makefile,v 1.1.1.1 2007/04/08 17:31:01 ajacoutot Exp $
--- Makefile.orig	Sun Mar 25 22:45:02 2007
+++ Makefile	Fri Jul 20 12:53:31 2007
@@@@ -18,7 +18,7 @@@@ SRCS   += common/visualize.c common/display-x11.c
 endif
 
 # MMX/SSE optims
-ifeq ($(ARCH),X86)
+ifeq ($(ARCH),X86) || ifeq ($(ARCH),i386)
 SRCS   += common/i386/mc-c.c common/i386/predict-c.c
 ASMSRC  = common/i386/dct-a.asm common/i386/cpu-a.asm \
           common/i386/pixel-a.asm common/i386/mc-a.asm \
@@@@ -30,7 +30,7 @@@@ ASFLAGS += -Icommon/i386/
 endif
 
 # MMX/SSE optims
-ifeq ($(ARCH),X86_64)
+ifeq ($(ARCH),X86_64) || ifeq ($(ARCH),amd64)
 SRCS   += common/i386/mc-c.c common/i386/predict-c.c
 ASMSRC  = common/amd64/dct-a.asm common/amd64/cpu-a.asm \
           common/amd64/pixel-a.asm common/amd64/mc-a.asm \
@@@@ -47,6 +47,9 @@@@ ALTIVECSRC += common/ppc/mc.c common/ppc/pixel.c commo
               common/ppc/quant.c
d14 1
a14 1
@@@@ -60,6 +63,7 @@@@ SRCS += extras/getopt.c
d22 1
a22 1
@@@@ -72,8 +76,8 @@@@ libx264.a: .depend $(OBJS) $(OBJASM)
d27 1
a27 1
-	$(CC) -shared -o $@@ $(OBJS) $(OBJASM) -Wl,-soname,$(SONAME) $(LDFLAGS)
d29 1
a29 1
+	$(CC) -shared -o $@@ $(SOBJS) $(OBJASM) -Wl,-soname,$(SONAME) $(LDFLAGS)
d33 3
a35 3
@@@@ -84,6 +88,9 @@@@ libx264gtk.a: muxers.o libx264.a
 checkasm: tools/checkasm.o libx264.a
 	$(CC) -o $@@ $+ $(LDFLAGS)
d40 7
a46 7
 common/amd64/*.o: common/amd64/amd64inc.asm
 common/i386/*.o: common/i386/i386inc.asm
 %.o: %.asm
@@@@ -150,7 +157,6 @@@@ install: x264 $(SONAME)
 	install -m 644 x264.pc $(DESTDIR)$(libdir)/pkgconfig
 	install x264 $(DESTDIR)$(bindir)
 	ranlib $(DESTDIR)$(libdir)/libx264.a
d49 2
a50 2
 
 install-gtk: libx264gtk.a
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 19
a21 1
+++ Makefile	Sat Apr  7 13:58:39 2007
@


1.1.1.1
log
@Import x264-20070325

x264 is a free library for encoding H264/AVC video streams.

This program requires a processor with recent instructions (MMX/SSE for
i386, AltiVec for powerpc).

Encoder features:
 * CAVLC/CABAC
 * Multi-references
 * Intra: all macroblock types (16x16, 8x8, and 4x4 with all predictions)
 * Inter P: all partitions (from 16x16 down to 4x4)
 * Inter B: partitions from 16x16 down to 8x8 (including skip/direct)
 * Ratecontrol: constant quantizer, single or multipass ABR, optional VBV
 * Scene cut detection
 * Adaptive B-frame placement
 * B-frames as references / arbitrary frame order
 * 8x8 and 4x4 adaptive spatial transform
 * Lossless mode
 * Custom quantization matrices
 * Parallel encoding of multiple slices
 * Interlacing


based on an original submission by Nikns Siankin <nikns at secure dot lv>
help and ok naddy@@ steven@@
@
text
@@
