head	1.2;
access;
symbols
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	naddy_20050125:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2005.11.13.21.11.13;	author jakemsr;	state dead;
branches;
next	1.1;

1.1
date	2005.01.25.21.58.59;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.25.21.58.59;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to version 1.0.2

transcode changes (annoted):
- lots of bug fixes and code cleanup
- i386 nasm code replaced
- several speed improvements
- new filters: facemask, ascii
- can read raw DVD ISO images
- new export profile: xvcd
- auto-probe support for bktr and sunau
- safer string functions
- much improved amd64 support
- removed local copies of bbmpeg, libdvenc, libmpeg2 and libpostproc
- uses external libmpeg2 and libpostproc
- fixed out-of-bounds memory access in VOB demuxer
- fixed double free() in AVI handling

port changes:
- most patches integrated
- USE_LIBTOOL
- update my email address


OK wilfried@@
@
text
@$OpenBSD: patch-filter_filter_unsharp_c,v 1.1 2005/01/25 21:58:59 naddy Exp $
--- filter/filter_unsharp.c.orig	Tue Nov  2 19:45:58 2004
+++ filter/filter_unsharp.c	Fri Dec 31 01:13:17 2004
@@@@ -60,6 +60,7 @@@@ typedef struct FilterParam {
     int msizeX, msizeY;
     double amount;
     uint32_t *SC[MAX_MATRIX_SIZE-1];
+    uint32_t *SC_unaligned[MAX_MATRIX_SIZE-1];
 } FilterParam;
 
 typedef struct vf_priv_s {
@@@@ -78,8 +79,18 @@@@ static void *bufalloc(size_t size)
    long buffer_align=16;
 #endif
 
-   char *buf = malloc(size + buffer_align);
+   return malloc(size + buffer_align);
+}
 
+static void *bufalign(char *buf)
+{
+
+#ifdef HAVE_GETPAGESIZE
+   long buffer_align=getpagesize();
+#else
+   long buffer_align=16;
+#endif
+
    long adjust;
 
    if (buf == NULL) {
@@@@ -311,7 +322,10 @@@@ int tc_filter(vframe_list_t *ptr, char *
     stepsX = fp->msizeX/2;
     stepsY = fp->msizeY/2;
     for( z=0; z<2*stepsY; z++ )
-	fp->SC[z] = bufalloc(sizeof(*(fp->SC[z])) * (width+2*stepsX) );
+        {
+	fp->SC_unaligned[z] = bufalloc(sizeof(*(fp->SC[z])) * (width+2*stepsX) );
+	fp->SC[z] = bufalign((char *)(fp->SC_unaligned[z]));
+        }
 
     fp = &mfd->chromaParam;
     effect = fp->amount == 0 ? "don't touch" : fp->amount < 0 ? "blur" : "sharpen";
@@@@ -320,7 +334,10 @@@@ int tc_filter(vframe_list_t *ptr, char *
     stepsX = fp->msizeX/2;
     stepsY = fp->msizeY/2;
     for( z=0; z<2*stepsY; z++ )
-	fp->SC[z] = bufalloc( sizeof(*(fp->SC[z])) * (width+2*stepsX) );
+        {
+	fp->SC_unaligned[z] = bufalloc( sizeof(*(fp->SC[z])) * (width+2*stepsX) );
+	fp->SC[z] = bufalign((char *)(fp->SC_unaligned[z]));
+        }
 
 
     if(verbose) printf("[%s] %s %s\n", MOD_NAME, MOD_VERSION, MOD_CAP);
@@@@ -336,12 +353,14 @@@@ int tc_filter(vframe_list_t *ptr, char *
 
       fp = &mfd->lumaParam;
       for( z=0; z<sizeof(fp->SC)/sizeof(fp->SC[0]); z++ ) {
-	  if( fp->SC[z] ) free( fp->SC[z] );
+	  if( fp->SC_unaligned[z] ) free( fp->SC_unaligned[z] );
+	  fp->SC_unaligned[z] = NULL;
 	  fp->SC[z] = NULL;
       }
       fp = &mfd->chromaParam;
       for( z=0; z<sizeof(fp->SC)/sizeof(fp->SC[0]); z++ ) {
-	  if( fp->SC[z] ) free( fp->SC[z] );
+	  if( fp->SC_unaligned[z] ) free( fp->SC_unaligned[z] );
+	  fp->SC_unaligned[z] = NULL;
 	  fp->SC[z] = NULL;
       }
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Reimport into new category (ok jolan@@, xsa@@, robert@@).

Update to 0.6.14; from new maintainer Jacob Meuser <jakemsr@@jakemsr.com>.

Notable changes:
- new import module for bktr(4) devices, import_bktr
- new import module for audio(4) devices, import_sunau
- export profiles
- better error checking
- uses YV12/I420 colorspace by default instead of RGB
- uses external ffmpeg/libavcodec
- optimized memcpy on i386
- many small bugs fixed
@
text
@@
