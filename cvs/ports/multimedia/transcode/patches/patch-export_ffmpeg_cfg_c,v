head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2014.05.05.11.51.37;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.26.12.47.44;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.19.08.42.35;	author brad;	state Exp;
branches;
next	;


desc
@@


1.3
log
@- Pull in some bits to deal with newer FFmpeg API. While testing I found
transcode was already broken as is due to it relying on certain functionality
with presets which is no longer relevant for more modern FFmpeg. Searching
via Google showed the same bug being reported with Debian, Gentoo and Arch.
They have eliminted the use of presets but that just exposed another bug.
So this builds with newer FFmpeg but it is essentially just as broken as
before. If anyone wants to take a look at this and figure out why it is
crashing go ahead.
- Merge the quicktime FLAVOR into the main port / package. IMO it doesn't
make sense to have an app like this that cannot work with the MP4 container

FFmpeg bits taken from FreeBSD and Debian packages.

ok ajacoutot@@
@
text
@$OpenBSD: patch-export_ffmpeg_cfg_c,v 1.2 2013/01/26 12:47:44 brad Exp $

Update for newer FFmpeg API.

--- export/ffmpeg_cfg.c.orig	Sat Nov 19 11:50:27 2011
+++ export/ffmpeg_cfg.c	Mon May  5 00:59:06 2014
@@@@ -126,7 +126,7 @@@@ int lavc_param_gmc = 0;
 //int lavc_param_atag = 0;
 //int lavc_param_abitrate = 224;
 
-char *lavc_param_video_preset = "medium";
+char *lavc_param_video_preset = NULL;
 char *lavc_param_ffmpeg_datadir = "/usr/share/ffmpeg";
 
 TCConfigEntry lavcopts_conf[]={
@@@@ -160,9 +160,9 @@@@ TCConfigEntry lavcopts_conf[]={
     {"vcelim", &lavc_param_chroma_elim_threshold, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, -99, 99},
     {"vpsize", &lavc_param_packet_size, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, 0, 100000000},
     {"vstrict", &lavc_param_strict, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, -99, 99},
-    {"vdpart", &lavc_param_data_partitioning, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_PART},
+    {"vdpart", &lavc_param_data_partitioning, TCCONF_TYPE_INT, 0, 0, 1},
 //    {"keyint", &lavc_param_keyint, TCCONF_TYPE_INT, 0, 0, 0},
-    {"gray", &lavc_param_gray, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_PART},
+    {"gray", &lavc_param_gray, TCCONF_TYPE_INT, 0, 0, CODEC_FLAG_GRAY},
     {"mpeg_quant", &lavc_param_mpeg_quant, TCCONF_TYPE_FLAG, 0, 0, 1},
     {"vi_qfactor", &lavc_param_vi_qfactor, TCCONF_TYPE_FLOAT, TCCONF_FLAG_RANGE, -31.0, 31.0},
     {"vi_qoffset", &lavc_param_vi_qoffset, TCCONF_TYPE_FLOAT, TCCONF_FLAG_RANGE, 0.0, 31.0},
@@@@ -211,21 +211,21 @@@@ TCConfigEntry lavcopts_conf[]={
 #else
     {"aic", &lavc_param_aic, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_AC_PRED},
 #endif    
-    {"umv", &lavc_param_umv, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_H263P_UMV},
+    {"umv", &lavc_param_umv, TCCONF_TYPE_INT, 0, 0, 1},   
     {"ibias", &lavc_param_ibias, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, -512, 512},
     {"pbias", &lavc_param_pbias, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, -512, 512},
     {"coder", &lavc_param_coder, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, 0, 10},
     {"context", &lavc_param_context, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, 0, 10},
     {"intra_matrix", &lavc_param_intra_matrix, TCCONF_TYPE_STRING, 0, 0, 0},
     {"inter_matrix", &lavc_param_inter_matrix, TCCONF_TYPE_STRING, 0, 0, 0},
-    {"cbp", &lavc_param_cbp, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_CBP_RD},
+    {"cbp", &lavc_param_cbp, TCCONF_TYPE_FLAG, 0, 0, 1},
     {"mv0", &lavc_param_mv0, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_MV0},
     {"nr", &lavc_param_noise_reduction, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, 0, 1000000},
-    {"qprd", &lavc_param_qp_rd, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_QP_RD},
+    {"qprd", &lavc_param_qp_rd, TCCONF_TYPE_FLAG, 0, 0, 1},
     {"threads", &lavc_param_threads, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, 1, 16},
-    {"ss", &lavc_param_ss, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_H263P_SLICE_STRUCT},
-    {"svcd_sof", &lavc_param_scan_offset, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_SVCD_SCAN_OFFSET},
-    {"alt", &lavc_param_alt, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_ALT_SCAN},
+    {"ss", &lavc_param_ss, TCCONF_TYPE_INT, 0, 0, 1},
+    {"svcd_sof", &lavc_param_scan_offset, TCCONF_TYPE_INT, 0, 0, 1},
+    {"alt", &lavc_param_alt, TCCONF_TYPE_INT, 0, 0, 1},
     {"ilme", &lavc_param_ilme, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_INTERLACED_ME},
     {"inter_threshold", &lavc_param_inter_threshold, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, -1000000, 1000000},
     {"sc_threshold", &lavc_param_sc_threshold, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, -1000000, 1000000},
@@@@ -237,7 +237,6 @@@@ TCConfigEntry lavcopts_conf[]={
     {"skip_top", &lavc_param_skip_top, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, 0, 1000},
     {"skip_bottom", &lavc_param_skip_bottom, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, 0, 1000},
     {"fps_code", &lavc_param_fps_code, TCCONF_TYPE_INT, TCCONF_FLAG_RANGE, 0, 9},
-    {"vpre", &lavc_param_video_preset, TCCONF_TYPE_STRING, 0, 0, 0},
     {"ffmpeg_datadir", &lavc_param_ffmpeg_datadir, TCCONF_TYPE_STRING, 0, 0, 0},
     {NULL, NULL, 0, 0, 0, 0}
 };
@


1.2
log
@Add a comment to the patches.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-export_ffmpeg_cfg_c,v 1.1 2013/01/19 08:42:35 brad Exp $
d6 10
a15 1
+++ export/ffmpeg_cfg.c	Fri Jan 18 22:38:18 2013
d24 1
a24 1
+    {"gray", &lavc_param_gray, TCCONF_TYPE_INT, 0, 0, 1},
d28 1
a28 1
@@@@ -211,7 +211,7 @@@@ TCConfigEntry lavcopts_conf[]={
d37 6
a42 1
@@@@ -223,9 +223,9 @@@@ TCConfigEntry lavcopts_conf[]={
d44 2
a45 1
     {"qprd", &lavc_param_qp_rd, TCCONF_TYPE_FLAG, 0, 0, CODEC_FLAG_QP_RD},
d56 8
@


1.1
log
@Update for newer FFmpeg API.

ok ajacoutot@@
@
text
@d1 4
a4 1
$OpenBSD$
@

