head	1.2;
access;
symbols
	OPENBSD_5_7:1.1.0.22
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.20
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.18
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.16
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.14
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.12
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.10
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.04.06.15.39.10;	author landry;	state dead;
branches;
next	1.1;
commitid	KvRb40vPeG4bdAok;

1.1
date	2009.10.15.15.44.41;	author landry;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove multimedia/moovida.

Even if i spent most of p2k9 working on it, the opensource version died
5+ years ago, and even the .NET successor disappeared from the
interwebs... those days, people should try to port XBMC/Kodi :)
@
text
@$OpenBSD: patch-elisa_core_utils_misc_py,v 1.1 2009/10/15 15:44:41 landry Exp $
We are not a 'distro', and we don't need to know which desktop our
user runs. get_user_desktop_name() is only used to choose the
gst audio sink, and autoaudiosink is the better choice.
--- elisa/core/utils/misc.py.orig	Mon Oct 12 13:38:32 2009
+++ elisa/core/utils/misc.py	Mon Oct 12 13:39:30 2009
@@@@ -203,11 +203,7 @@@@ def get_distro():
     return distro
 
 def get_os_name():
-    distro = get_distro()
-    if distro != "Unknown":
-        return distro
-    else:
-        return platform.system().lower()
+    return platform.system().lower()
 
 def linux_pidof(program_name):
     """
@@@@ -223,44 +219,7 @@@@ def linux_pidof(program_name):
     return [int(pid) for pid in output.split()]
 
 def get_user_desktop_name():
-    """ Detect the Desktop environment used by the user. On windows
-    this returns empty string. On other OSes we can currently detect
-    gnome, kde and xfce.
-
-    @@rtype: C{str}
-    @@returns: the desktop name used (either gnome, kde or xfce)
-    """
-    if platform.system() == 'Windows':
-        desktop_name = ""
-    else:
-        # first try to get the DESKTOP_SESSION env var, which is set
-        # by at least kdm and gdm
-        desktop_name = os.getenv("DESKTOP_SESSION")
-        if desktop_name in (None, 'default'):
-            # if that fails, try some KDE env var
-            if os.getenv('KDE_FULL_SESSION') is not None:
-                desktop_name = 'kde'
-            else:
-                # or scan running processes
-                # TODO: add more here
-                progs = {'gnome-session': 'gnome',
-                         # http://en.wikipedia.org/wiki/Gnome-panel
-                         'gnome-panel': 'gnome',
-                         'ksmserver': 'kde',
-                         # http://docs.kde.org/stable/en/kdebase-runtime/userguide/the-kdeinit-mystery.html
-                         'kdeinit': 'kde',
-                         # http://www.xfce.org/documentation/4.2/manuals/xfce-mcs-manager
-                         'xfce-mcs-manager': 'xfce',
-                         # http://www.xfce.org/documentation/4.2/manuals/xfwm4
-                         'xfwm4': 'xfce',
-                         }
-                for prog, name in progs.iteritems():
-                    if linux_pidof(prog) != []:
-                        desktop_name = name
-                        break
-            if desktop_name is None:
-                desktop_name = ''
-    return desktop_name
+    return "yourmom"
 
 def pkg_resources_copy_dir(resource_spec, resource_dir, dest_dir):
     """
@


1.1
log
@Add files for core/ subdirectory of Moovida, which provides the main
Moovida package.
@
text
@d1 1
a1 1
$OpenBSD$
@

