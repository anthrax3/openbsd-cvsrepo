head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.2
	OPENBSD_6_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2017.05.18.13.41.33;	author espie;	state Exp;
branches;
next	;
commitid	aXZeNFhp7jroirPy;


desc
@@


1.1
log
@steal modern compiler fixes from their git
@
text
@$OpenBSD$
namespace correctness, stolen from git commit e065581

Index: src/bmff/typebmff.cpp
--- src/bmff/typebmff.cpp.orig
+++ src/bmff/typebmff.cpp
@@@@ -23,19 +23,12 @@@@
 
 #include "impl.h"
 
-// VStudio idiocy prevents defining template instanced static data
-// in a namespace. Workaround it by defining in global scope.
-// Other platforms will continue to put things in the proper namespace.
-#if defined( _MSC_VER )
-using namespace mp4v2::impl::bmff;
-#else
-namespace mp4v2 { namespace impl { namespace bmff {
-#endif
+namespace mp4v2 { namespace impl {
 
 ///////////////////////////////////////////////////////////////////////////////
 
 template <>
-const EnumLanguageCode::Entry EnumLanguageCode::data[] = {
+const bmff::EnumLanguageCode::Entry bmff::EnumLanguageCode::data[] = {
     { mp4v2::impl::bmff::ILC_AAR,  "aar",  "Afar" },
     { mp4v2::impl::bmff::ILC_ABK,  "abk",  "Abkhazian" },
     { mp4v2::impl::bmff::ILC_ACE,  "ace",  "Achinese" },
@@@@ -526,9 +519,7 @@@@ const EnumLanguageCode::Entry EnumLanguageCode::data[]
 
 ///////////////////////////////////////////////////////////////////////////////
 
-#if defined( _MSC_VER )
-namespace mp4v2 { namespace impl { namespace bmff {
-#endif
+namespace bmff {
 
 ///////////////////////////////////////////////////////////////////////////////
 
@
