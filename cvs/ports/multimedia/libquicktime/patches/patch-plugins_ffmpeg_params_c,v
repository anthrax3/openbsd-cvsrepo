head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.14
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.12
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.04.06.20.24.01;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.29.21.22.14;	author kili;	state dead;
branches;
next	1.1;

1.1
date	2008.07.09.02.13.01;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update for newer FFmpeg API.

ok ajacoutot@@
@
text
@$OpenBSD$

Deal with newer FFmpeg API.

--- plugins/ffmpeg/params.c.orig	Thu Mar 27 17:09:20 2014
+++ plugins/ffmpeg/params.c	Thu Mar 27 17:14:09 2014
@@@@ -101,6 +101,17 @@@@ typedef struct
     }                                           \
   }
 
+#define PARAM_DICT_INT(name, dict_name)             \
+  {                                                 \
+  if(!strcasecmp(name, key))                        \
+    {                                               \
+    char buf[128];                                  \
+    snprintf(buf, sizeof(buf), "%d", *(int*)value); \
+    av_dict_set(options, dict_name, buf, 0);        \
+    found = 1;                                      \
+    }                                               \
+  }
+
 #define PARAM_DICT_FLAG(name, dict_name)        \
   {                                             \
   if(!strcasecmp(name, key))                    \
@@@@ -202,8 +213,15 @@@@ void lqt_ffmpeg_set_parameter(AVCodecContext * ctx,
   PARAM_INT("ff_max_b_frames",max_b_frames);
   PARAM_FLOAT("ff_b_quant_factor",b_quant_factor);
   PARAM_INT("ff_b_frame_strategy",b_frame_strategy);
+
+#if LIBAVCODEC_VERSION_MAJOR >= 55
+  PARAM_DICT_INT("ff_luma_elim_threshold","luma_elim_threshold");
+  PARAM_DICT_INT("ff_chroma_elim_threshold","chroma_elim_threshold");
+#else
   PARAM_INT("ff_luma_elim_threshold",luma_elim_threshold);
   PARAM_INT("ff_chroma_elim_threshold",chroma_elim_threshold);
+#endif
+
   PARAM_INT("ff_strict_std_compliance",strict_std_compliance);
   PARAM_QP2LAMBDA("ff_b_quant_offset",b_quant_offset);
   PARAM_INT("ff_rc_min_rate",rc_min_rate);
@@@@ -241,8 +259,15 @@@@ void lqt_ffmpeg_set_parameter(AVCodecContext * ctx,
   PARAM_QP2LAMBDA("ff_lmax", lmax);
   PARAM_INT("ff_noise_reduction",noise_reduction);
   PARAM_INT_SCALE("ff_rc_initial_buffer_occupancy",rc_initial_buffer_occupancy,1000);
+
+#if LIBAVCODEC_VERSION_MAJOR >= 55
+  PARAM_DICT_INT("ff_inter_threshold","inter_threshold");
+  PARAM_DICT_INT("ff_quantizer_noise_shaping","quantizer_noise_shaping");
+#else
   PARAM_INT("ff_inter_threshold",inter_threshold);
   PARAM_INT("ff_quantizer_noise_shaping",quantizer_noise_shaping);
+#endif
+
   PARAM_INT("ff_thread_count",thread_count);
   PARAM_INT("ff_me_threshold",me_threshold);
   PARAM_INT("ff_mb_threshold",mb_threshold);
@@@@ -272,8 +297,16 @@@@ void lqt_ffmpeg_set_parameter(AVCodecContext * ctx,
   PARAM_FLAG("ff_flag_bitexact",CODEC_FLAG_BITEXACT);
   PARAM_FLAG("ff_flag_ac_pred",CODEC_FLAG_AC_PRED);
   //  PARAM_FLAG("ff_flag_h263p_umv",CODEC_FLAG_H263P_UMV); // Unused
+
+#if LIBAVCODEC_VERSION_MAJOR >= 55
+  PARAM_DICT_FLAG("ff_flag_cbp_rd","cbp_rd");
+  PARAM_DICT_FLAG("ff_flag_qp_rd","qp_rd");
+  PARAM_DICT_FLAG("ff_flag2_strict_gop","strict_gop");
+#else
   PARAM_FLAG("ff_flag_cbp_rd",CODEC_FLAG_CBP_RD);
   PARAM_FLAG("ff_flag_qp_rd",CODEC_FLAG_QP_RD);
+  PARAM_FLAG2("ff_flag2_strict_gop",CODEC_FLAG2_STRICT_GOP);
+#endif
 
 #if LIBAVCODEC_VERSION_MAJOR >= 54
   PARAM_DICT_FLAG("ff_flag_h263p_aiv", "aiv");
@@@@ -288,7 +321,6 @@@@ void lqt_ffmpeg_set_parameter(AVCodecContext * ctx,
   PARAM_FLAG("ff_flag_loop_filter",CODEC_FLAG_LOOP_FILTER);
   PARAM_FLAG("ff_flag_closed_gop",CODEC_FLAG_CLOSED_GOP);
   PARAM_FLAG2("ff_flag2_fast",CODEC_FLAG2_FAST);
-  PARAM_FLAG2("ff_flag2_strict_gop",CODEC_FLAG2_STRICT_GOP);
   PARAM_ENUM("ff_coder_type",coder_type,coder_type);
   
   }
@


1.2
log
@Unbreak after the x264 update (problem first noticed by naddy@@, no
cookies for me).

Dependency improvements (x264 and doxygen) and whitespace cleanups
from Brad.

DOXYGEN_ENCODE_PATH_STRIP=${WRKSRC} trick pointed out by simon@@
(tested with two builds using different WRKOBJDIRs).


[kili@@petunia:libquicktime]$ head -30 libquicktime.diff
Unbreak after the x264 update (problem first noticed by naddy@@, no
cookies for me).

Dependency improvements (x264 and doxygen) and whitespace cleanups
from Brad.

DOXYGEN_ENCODE_PATH_STRIP=${WRKSRC} trick pointed out by simon@@
(tested with two builds using different WRKOBJDIRs).

ok jasper
@
text
@d1 9
a9 4
$OpenBSD: patch-plugins_ffmpeg_params_c,v 1.1 2008/07/09 02:13:01 jakemsr Exp $
--- plugins/ffmpeg/params.c.orig	Sat Jun 21 12:40:39 2008
+++ plugins/ffmpeg/params.c	Sat Jun 21 12:40:50 2008
@@@@ -24,7 +24,7 @@@@
d11 60
a70 5
 #include "lqt_private.h"
 #include "params.h"
-#include <ffmpeg/avcodec.h>
+#include <libavcodec/avcodec.h>
 #include <string.h>
d72 10
a81 1
 typedef struct
@


1.1
log
@
* FFmpeg headers moved
* FFmpeg LIB_DEPENDS/WANTLIB changes
* add @@bin markers in PLISTs
* bump PKGNAMEs

feedback/ok brad@@
@
text
@d1 1
a1 1
$OpenBSD$
@

