head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.14
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.12
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.10
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.6
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.8
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	zhuk_20140709:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2014.07.09.16.40.41;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	sJDllkC6wzE36ASX;

1.1.1.1
date	2014.07.09.16.40.41;	author zhuk;	state Exp;
branches;
next	;
commitid	sJDllkC6wzE36ASX;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- libk3bdevice/k3bdevice.cpp.orig	Sat Jan 19 19:40:37 2013
+++ libk3bdevice/k3bdevice.cpp	Sat Jan 19 20:02:21 2013
@@@@ -69,28 +69,27 @@@@ typedef unsigned char u8;
 #define CD_FRAMESIZE_RAW 2352
 #endif
 
-#ifdef Q_OS_NETBSD
+#if defined(Q_OS_NETBSD) || defined(Q_OS_OPENBSD)
 #include <sys/cdio.h>
 #endif
 
+#if defined(Q_OS_OPENBSD)
+#include <sys/dkio.h>
+#endif
+
 #ifdef HAVE_RESMGR
 extern "C" {
 #include <resmgr.h>
 }
 #endif
 
-#ifdef Q_OS_FREEBSD
-#define HANDLE_DEFAULT_VALUE 0
-#endif
-#ifdef Q_OS_WIN32
+#if defined(Q_OS_WIN32)
 #define HANDLE_DEFAULT_VALUE INVALID_HANDLE_VALUE
-#endif
-#ifdef Q_OS_LINUX
+#elif defined(Q_OS_FREEBSD)
+#define HANDLE_DEFAULT_VALUE 0
+#else
 #define HANDLE_DEFAULT_VALUE -1
 #endif
-#ifdef Q_OS_NETBSD
-#define HANDLE_DEFAULT_VALUE -1
-#endif
 
 //
 // Very evil hacking: force the speed values to be acurate
@@@@ -165,7 +164,7 @@@@ K3b::Device::Device::Handle K3b::Device::openDevice( c
 #endif
 
 
-#if defined(Q_OS_LINUX) || defined(Q_OS_NETBSD)
+#if defined(Q_OS_LINUX) || defined(Q_OS_NETBSD) || defined(Q_OS_OPENBSD)
 K3b::Device::Device::Handle K3b::Device::openDevice( const char* name, bool write )
 {
     K3b::Device::Device::Handle fd = HANDLE_DEFAULT_VALUE;
@@@@ -1631,7 +1630,7 @@@@ bool K3b::Device::Device::block( bool b ) const
     usageUnlock();
     if ( success )
         return success;
-#elif defined(Q_OS_NETBSD)
+#elif defined(Q_OS_NETBSD) || defined(Q_OS_OPENBSD)
     bool success = false;
     bool needToClose = !isOpen();
     int arg = b ? 1 : 0;
@@@@ -1679,14 +1678,18 @@@@ bool K3b::Device::Device::rewritable() const
 
 bool K3b::Device::Device::eject() const
 {
-#ifdef Q_OS_NETBSD
+#if defined(Q_OS_NETBSD) || defined(Q_OS_OPENBSD)
     bool success = false;
     bool needToClose = !isOpen();
     int arg = 0;
 
     usageLock();
     if( open() ) {
+// #if defined(Q_OS_NETBSD)
         if ( ::ioctl( d->deviceHandle, DIOCEJECT, &arg ) >= 0)
+// #else // e.g., Q_OS_OPENBSD
+//         if ( ::ioctl( d->deviceHandle, CDIOCEJECT, &arg ) >= 0)
+// #endif
             success = true;
         if( needToClose )
             close();
@@@@ -1724,7 +1727,7 @@@@ bool K3b::Device::Device::eject() const
 
 bool K3b::Device::Device::load() const
 {
-#ifdef Q_OS_NETBSD
+#if defined(Q_OS_NETBSD) || defined(Q_OS_OPENBSD)
     bool success = false;
     bool needToClose = !isOpen();
     int arg = 0;
@@@@ -3768,7 +3771,7 @@@@ QByteArray K3b::Device::Device::mediaId( int mediaType
 // int K3b::Device::Device::ioctl( int request, ... ) const
 // {
 //     int r = -1;
-// #if defined(Q_OS_LINUX) || defined(Q_OS_NETBSD)
+// #if defined(Q_OS_LINUX) || defined(Q_OS_NETBSD) || defined(Q_OS_OPENBSD)
 //     d->mutex.lock();
 
 //     va_list ap;
@


1.1.1.1
log
@K3b was created to be a feature-rich and easy to handle CD burning
application.  It can do many things, such as creating or copying audio,
data, video or mixed-mode CDs, CD ripping, and DVD ripping, burning and
blanking.

This is a KDE4 version of multimedia/k3b, thus SHARED_LIBS aren't 0.0.

Okay landry@@
@
text
@@
