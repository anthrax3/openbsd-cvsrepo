head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2015.02.17.01.28.01;	author brad;	state dead;
branches;
next	1.1;
commitid	RhoS12E7YKZiK2SX;

1.1
date	2014.12.08.08.25.05;	author brad;	state Exp;
branches;
next	;
commitid	mIrLklJyXjYVK6J1;


desc
@@


1.2
log
@Update to x265 1.5.

ok sthen@@
@
text
@$OpenBSD: patch-source_common_wavefront_h,v 1.1 2014/12/08 08:25:05 brad Exp $

threading: use 32bit atomic integer operations exclusively

--- source/common/wavefront.h.orig	Fri Oct 31 14:24:01 2014
+++ source/common/wavefront.h	Sun Dec  7 00:05:35 2014
@@@@ -43,8 +43,8 @@@@ class WaveFront : public JobProvider (private)
     // Dependencies are categorized as internal and external. Internal dependencies
     // are caused by neighbor block availability.  External dependencies are generally
     // reference frame reconstructed pixels being available.
-    uint64_t volatile *m_internalDependencyBitmap;
-    uint64_t volatile *m_externalDependencyBitmap;
+    uint32_t volatile *m_internalDependencyBitmap;
+    uint32_t volatile *m_externalDependencyBitmap;
 
     // number of words in the bitmap
     int m_numWords;
@@@@ -92,10 +92,6 @@@@ class WaveFront : public JobProvider (private)
     // Start or resume encode processing of this row, must be implemented by
     // derived classes.
     virtual void processRow(int row, int threadId) = 0;
-
-    // Returns true if a row above curRow is available for processing.  The processRow()
-    // method may call this function periodically and voluntarily exit
-    bool checkHigherPriorityRow(int curRow);
 };
 } // end namespace x265
 
@


1.1
log
@Two commits from upstream..

constants: remove init/destroyROM functions
threading: use 32bit atomic integer operations exclusively

Tested on amd64/i386/sparc64 now builds on powerpc.
@
text
@d1 1
a1 1
$OpenBSD$
@

