head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.1.0.8
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	pascal_20140914:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.09.01.16.50.14;	author pascal;	state Exp;
branches;
next	1.1;
commitid	SLN2dxKJh1nw9fdc;

1.1
date	2014.09.14.21.01.52;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	qTnyGevaWmGijpQu;

1.1.1.1
date	2014.09.14.21.01.52;	author pascal;	state Exp;
branches;
next	;
commitid	qTnyGevaWmGijpQu;


desc
@@


1.2
log
@Update to SFML 2.4.0.

ok bentley@@
@
text
@$OpenBSD: patch-cmake_Config_cmake,v 1.1.1.1 2014/09/14 21:01:52 pascal Exp $
--- cmake/Config.cmake.orig	Wed Aug 31 17:33:23 2016
+++ cmake/Config.cmake	Wed Aug 31 17:34:48 2016
@@@@ -31,6 +31,10 @@@@ elseif(${CMAKE_SYSTEM_NAME} STREQUAL "FreeBSD")
     set(SFML_OS_FREEBSD 1)
     # don't use the OpenGL ES implementation on FreeBSD
     set(OPENGL_ES 0)
+elseif(${CMAKE_SYSTEM_NAME} STREQUAL "OpenBSD")
+    set(SFML_OS_OPENBSD 1)
+    # don't use the OpenGL ES implementation on OpenBSD
+    set(OPENGL_ES 0)
 elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
     if(IOS)
         set(SFML_OS_IOS 1)
@@@@ -112,7 +116,7 @@@@ endif()
 # define the install directory for miscellaneous files
 if(SFML_OS_WINDOWS OR SFML_OS_IOS)
     set(INSTALL_MISC_DIR .)
-elseif(SFML_OS_LINUX OR SFML_OS_FREEBSD OR SFML_OS_MACOSX)
+elseif(SFML_OS_LINUX OR SFML_OS_FREEBSD OR SFML_OS_MACOSX OR SFML_OS_OPENBSD)
     set(INSTALL_MISC_DIR share/SFML)
 elseif(SFML_OS_ANDROID)
     set(INSTALL_MISC_DIR ${ANDROID_NDK}/sources/sfml)
@


1.1
log
@Initial revision
@
text
@d1 23
a23 13
$OpenBSD$
--- cmake/Config.cmake.orig	Wed Mar 19 23:29:50 2014
+++ cmake/Config.cmake	Wed Mar 19 23:30:08 2014
@@@@ -18,6 +18,9 @@@@ elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
 elseif(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")
     # FreeBSD compile path is the same as Linux
     set(LINUX 1)
+elseif(${CMAKE_SYSTEM_NAME} MATCHES "OpenBSD")
+    # OpenBSD compile path is the same as Linux
+    set(LINUX 1)
 elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
     set(MACOSX 1)
 
@


1.1.1.1
log
@Import multimedia/sfml, requested by and ok bcallah@@

SFML is a portable and easy to use multimedia API written in C++.
You can see it as a modern, object-oriented alternative to SDL.
SFML is composed of several packages to perfectly suit your needs.
You can use SFML as a minimal windowing system to interface with
OpenGL, or as a fully-featured multimedia library for building games
or interactive programs.
@
text
@@
