head	1.78;
access;
symbols
	OPENBSD_6_1:1.78.0.2
	OPENBSD_6_1_BASE:1.78
	OPENBSD_6_0:1.77.0.2
	OPENBSD_6_0_BASE:1.77
	OPENBSD_5_9:1.76.0.2
	OPENBSD_5_9_BASE:1.76
	OPENBSD_5_8:1.72.0.4
	OPENBSD_5_8_BASE:1.72
	OPENBSD_5_7:1.68.0.2
	OPENBSD_5_7_BASE:1.68
	OPENBSD_5_6:1.61.0.2
	OPENBSD_5_6_BASE:1.61
	OPENBSD_5_5:1.58.0.2
	OPENBSD_5_5_BASE:1.58
	OPENBSD_5_4:1.56.0.2
	OPENBSD_5_4_BASE:1.56
	OPENBSD_5_3:1.53.0.2
	OPENBSD_5_3_BASE:1.53
	OPENBSD_5_2:1.49.0.2
	OPENBSD_5_2_BASE:1.49
	OPENBSD_5_1_BASE:1.48
	OPENBSD_5_1:1.48.0.2
	OPENBSD_5_0:1.45.0.2
	OPENBSD_5_0_BASE:1.45
	OPENBSD_4_9:1.42.0.2
	OPENBSD_4_9_BASE:1.42
	OPENBSD_4_8:1.39.0.2
	OPENBSD_4_8_BASE:1.39
	OPENBSD_4_7:1.32.0.2
	OPENBSD_4_7_BASE:1.32
	OPENBSD_4_6:1.10.0.2
	OPENBSD_4_6_BASE:1.10
	sthen_20090417:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.78
date	2016.11.19.14.10.20;	author sthen;	state Exp;
branches;
next	1.77;
commitid	yQxWYlspmMGPe3wy;

1.77
date	2016.06.11.22.15.05;	author sthen;	state Exp;
branches;
next	1.76;
commitid	llf24R0x7KKG4U0W;

1.76
date	2016.01.31.21.27.10;	author sthen;	state Exp;
branches;
next	1.75;
commitid	7THYZVQvtQWW4kjq;

1.75
date	2016.01.25.17.05.49;	author sthen;	state Exp;
branches;
next	1.74;
commitid	TN4P1Bq5lJW0qP1c;

1.74
date	2016.01.19.00.20.59;	author sthen;	state Exp;
branches;
next	1.73;
commitid	iVBOiy3JjwDabSVJ;

1.73
date	2016.01.14.09.53.31;	author sthen;	state Exp;
branches;
next	1.72;
commitid	4gaR7FyvP6NPzvoo;

1.72
date	2015.06.03.15.22.07;	author sthen;	state Exp;
branches;
next	1.71;
commitid	OV2BvvtFzTkxvYpQ;

1.71
date	2015.06.02.15.29.45;	author sthen;	state Exp;
branches;
next	1.70;
commitid	XfWkScO8S06YLFLd;

1.70
date	2015.03.20.14.50.16;	author sthen;	state Exp;
branches;
next	1.69;
commitid	VtU9HNbeoTxXPeNK;

1.69
date	2015.03.14.20.45.42;	author sthen;	state Exp;
branches;
next	1.68;
commitid	aEYciFnRSB40Y6TU;

1.68
date	2014.12.22.14.57.11;	author sthen;	state Exp;
branches
	1.68.2.1;
next	1.67;
commitid	AcO0xjvCLcSGHuOK;

1.67
date	2014.12.16.11.32.11;	author sthen;	state Exp;
branches;
next	1.66;
commitid	i1zMzHmpADclreJ5;

1.66
date	2014.12.02.02.25.40;	author sthen;	state Exp;
branches;
next	1.65;
commitid	vjaOfPLZivcbizoO;

1.65
date	2014.11.03.10.17.09;	author sthen;	state Exp;
branches;
next	1.64;
commitid	NMDIEfXGOsaGLICy;

1.64
date	2014.10.20.11.45.29;	author sthen;	state Exp;
branches;
next	1.63;
commitid	9kR616FD71xqpECt;

1.63
date	2014.10.15.01.32.36;	author sthen;	state Exp;
branches;
next	1.62;
commitid	opALrVYPgxej1iNV;

1.62
date	2014.09.03.10.16.43;	author sthen;	state Exp;
branches;
next	1.61;
commitid	ea73iHpsceuIalIL;

1.61
date	2014.04.06.17.03.03;	author sthen;	state Exp;
branches;
next	1.60;

1.60
date	2014.03.28.16.18.21;	author sthen;	state Exp;
branches;
next	1.59;

1.59
date	2014.03.09.21.07.49;	author sthen;	state Exp;
branches;
next	1.58;

1.58
date	2013.09.30.22.43.31;	author sthen;	state Exp;
branches;
next	1.57;

1.57
date	2013.09.29.22.57.57;	author sthen;	state Exp;
branches;
next	1.56;

1.56
date	2013.06.22.22.53.14;	author sthen;	state Exp;
branches;
next	1.55;

1.55
date	2013.06.06.21.11.10;	author sthen;	state Exp;
branches;
next	1.54;

1.54
date	2013.05.04.09.24.34;	author sthen;	state Exp;
branches;
next	1.53;

1.53
date	2013.01.27.22.22.25;	author sthen;	state Exp;
branches
	1.53.2.1;
next	1.52;

1.52
date	2012.12.07.14.56.06;	author sthen;	state Exp;
branches;
next	1.51;

1.51
date	2012.10.18.12.27.51;	author sthen;	state Exp;
branches;
next	1.50;

1.50
date	2012.08.08.23.17.28;	author sthen;	state Exp;
branches;
next	1.49;

1.49
date	2012.06.28.15.40.25;	author sthen;	state Exp;
branches;
next	1.48;

1.48
date	2011.11.04.22.51.19;	author sthen;	state Exp;
branches;
next	1.47;

1.47
date	2011.11.01.16.33.19;	author sthen;	state Exp;
branches;
next	1.46;

1.46
date	2011.09.05.17.07.29;	author nigel;	state Exp;
branches;
next	1.45;

1.45
date	2011.05.28.20.42.17;	author sthen;	state Exp;
branches;
next	1.44;

1.44
date	2011.04.20.23.07.24;	author sthen;	state Exp;
branches;
next	1.43;

1.43
date	2011.04.19.16.39.47;	author sthen;	state Exp;
branches;
next	1.42;

1.42
date	2011.01.09.17.31.58;	author sthen;	state Exp;
branches;
next	1.41;

1.41
date	2010.10.18.13.52.30;	author sthen;	state Exp;
branches;
next	1.40;

1.40
date	2010.09.27.20.20.36;	author sthen;	state Exp;
branches;
next	1.39;

1.39
date	2010.06.04.23.04.32;	author sthen;	state Exp;
branches;
next	1.38;

1.38
date	2010.06.01.15.05.39;	author sthen;	state Exp;
branches;
next	1.37;

1.37
date	2010.05.28.15.46.02;	author sthen;	state Exp;
branches;
next	1.36;

1.36
date	2010.05.27.23.33.45;	author sthen;	state Exp;
branches;
next	1.35;

1.35
date	2010.05.26.20.24.23;	author sthen;	state Exp;
branches;
next	1.34;

1.34
date	2010.05.26.20.13.06;	author sthen;	state Exp;
branches;
next	1.33;

1.33
date	2010.05.01.21.17.25;	author sthen;	state Exp;
branches;
next	1.32;

1.32
date	2010.02.26.18.48.06;	author sthen;	state Exp;
branches;
next	1.31;

1.31
date	2010.01.12.12.46.15;	author sthen;	state Exp;
branches;
next	1.30;

1.30
date	2010.01.08.14.30.30;	author sthen;	state Exp;
branches;
next	1.29;

1.29
date	2010.01.04.11.15.35;	author sthen;	state Exp;
branches;
next	1.28;

1.28
date	2009.12.31.14.53.33;	author sthen;	state Exp;
branches;
next	1.27;

1.27
date	2009.12.21.21.52.27;	author sthen;	state Exp;
branches;
next	1.26;

1.26
date	2009.12.20.22.18.43;	author sthen;	state Exp;
branches;
next	1.25;

1.25
date	2009.11.21.23.15.03;	author sthen;	state Exp;
branches;
next	1.24;

1.24
date	2009.11.14.18.42.35;	author sthen;	state Exp;
branches;
next	1.23;

1.23
date	2009.11.09.19.47.42;	author sthen;	state Exp;
branches;
next	1.22;

1.22
date	2009.11.06.14.35.46;	author sthen;	state Exp;
branches;
next	1.21;

1.21
date	2009.10.25.20.01.12;	author sthen;	state Exp;
branches;
next	1.20;

1.20
date	2009.10.10.10.42.42;	author sthen;	state Exp;
branches;
next	1.19;

1.19
date	2009.09.27.23.47.15;	author sthen;	state Exp;
branches;
next	1.18;

1.18
date	2009.09.21.22.30.58;	author sthen;	state Exp;
branches;
next	1.17;

1.17
date	2009.09.10.17.09.48;	author sthen;	state Exp;
branches;
next	1.16;

1.16
date	2009.09.05.15.54.25;	author sthen;	state Exp;
branches;
next	1.15;

1.15
date	2009.08.30.12.58.14;	author sthen;	state Exp;
branches;
next	1.14;

1.14
date	2009.08.23.19.16.17;	author sthen;	state Exp;
branches;
next	1.13;

1.13
date	2009.08.17.13.52.20;	author sthen;	state Exp;
branches;
next	1.12;

1.12
date	2009.07.27.08.39.14;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2009.07.12.19.41.43;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2009.06.24.00.02.20;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2009.06.19.01.04.50;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2009.06.14.11.47.45;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2009.05.25.17.54.01;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2009.05.25.00.22.52;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2009.05.13.09.31.44;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.01.02.09.56;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2009.04.29.00.59.07;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.19.13.32.20;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.17.21.27.09;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.04.17.21.27.09;	author sthen;	state Exp;
branches;
next	;

1.53.2.1
date	2013.06.06.21.17.57;	author sthen;	state Exp;
branches;
next	;

1.68.2.1
date	2015.06.03.15.23.13;	author sthen;	state Exp;
branches;
next	;
commitid	Oq6JxQB0PzHVKwqy;


desc
@@


1.78
log
@update to get_iplayer-2.97
@
text
@$OpenBSD: patch-get_iplayer,v 1.77 2016/06/11 22:15:05 sthen Exp $
--- get_iplayer.orig	Sun Sep 25 17:32:57 2016
+++ get_iplayer	Sat Nov 19 14:05:06 2016
@@@@ -1,4 +1,4 @@@@
-#!/usr/bin/env perl
+#!/usr/bin/perl
 #
 # get_iplayer - Lists, Records and Streams BBC iPlayer TV and Radio programmes and BBC podcasts
 #
@@@@ -373,6 +373,7 @@@@ if ( $opt->{encodinglocale} =~ /UTF-?8/i ) {
 }
 
 # Copy a few options over to opt so that logger works
+$opt->{packagemanager}= 'pkg_add';
 $opt->{debug} = $opt->{verbose} = 1 if $opt_pre->{debug};
 $opt->{verbose} = 1 if $opt_pre->{verbose};
 $opt->{silent} = $opt->{quiet} = 1 if $opt_pre->{silent};
@@@@ -433,7 +434,7 @@@@ my $plugin_dir_system;
 if ( defined $ENV{ALLUSERSPROFILE} && $^O eq "MSWin32" ) {
 	$plugin_dir_system = $ENV{ALLUSERSPROFILE}.'/get_iplayer/plugins';
 } else {
-	$plugin_dir_system = '/usr/share/get_iplayer/plugins';
+	$plugin_dir_system = '${TRUEPREFIX}/share/get_iplayer/plugins';
 }
 my $plugin_dir_user = "$profile_dir/plugins";
 for my $plugin_dir ( ( $plugin_dir_user, $plugin_dir_system ) ) {
@


1.77
log
@update to newer get_iplayer snapshot
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.76 2016/01/31 21:27:10 sthen Exp $
--- get_iplayer.orig	Sat Jun 11 20:35:45 2016
+++ get_iplayer	Sat Jun 11 22:43:32 2016
d10 1
a10 1
@@@@ -372,6 +372,7 @@@@ if ( $opt->{encodinglocale} =~ /UTF-?8/i ) {
d18 1
a18 1
@@@@ -432,7 +433,7 @@@@ my $plugin_dir_system;
@


1.76
log
@update to a newer get_iplayer snapshot, fixing a problem reported by jmc
where tv listings were fetched unnecessarily
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.75 2016/01/25 17:05:49 sthen Exp $
--- get_iplayer.orig	Sat Jan 30 14:56:36 2016
+++ get_iplayer	Sun Jan 31 21:23:47 2016
d10 1
a10 1
@@@@ -392,6 +392,7 @@@@ if ( $opt->{encodinglocale} =~ /UTF-?8/i ) {
d18 1
a18 1
@@@@ -452,7 +453,7 @@@@ my $plugin_dir_system;
@


1.75
log
@get_iplayer doesn't need to depend on the crusty id3lib tagger, it prefers
perl MP3::Tag instead which is better (and already a dependency, so this
doesn't involve any runtime change). remove dep and associated patch.
tweak sample config while there.
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.74 2016/01/19 00:20:59 sthen Exp $
--- get_iplayer.orig	Sun Jan 17 19:44:34 2016
+++ get_iplayer	Tue Jan 19 00:18:54 2016
d10 1
a10 1
@@@@ -393,6 +393,7 @@@@ if ( $opt->{encodinglocale} =~ /UTF-?8/i ) {
d18 1
a18 1
@@@@ -453,7 +454,7 @@@@ my $plugin_dir_system;
@


1.74
log
@update to newer get_iplayer snapshot
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.73 2016/01/14 09:53:31 sthen Exp $
a26 18
@@@@ -916,7 +917,7 @@@@ sub init_search {
 	}
 
 
-	$bin->{id3v2}		= $opt->{id3v2} || 'id3v2';
+	$bin->{id3v2}		= $opt->{id3v2} || 'id3tag';
 	$bin->{atomicparsley}	= $opt->{atomicparsley} || 'AtomicParsley';
 
 	$bin->{rtmpdump}	= $opt->{rtmpdump} || 'rtmpdump';
@@@@ -12208,7 +12209,7 @@@@ sub tag_file_id3 {
 # add basic ID3 tag with id3v2
 sub tag_file_id3_basic {
 	my ($self, $meta, $tags) = @@_;
-	if ( main::exists_in_path('id3v2') ) {
+	if ( main::exists_in_path('id3tag') ) {
 		main::logger "INFO: ID3 BASIC tagging \U$meta->{ext}\E file\n";
 		# notify about limitations of basic tagging
 		if ( $opt->{verbose} ) {
@


1.73
log
@Switch to devel version of get_iplayer which has a minimal workaround to
reinstate --pid/--url downloading following removal of the old XML data
sources that it was using.
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.72 2015/06/03 15:22:07 sthen Exp $
--- get_iplayer.orig	Thu Jan 14 02:34:19 2016
+++ get_iplayer	Thu Jan 14 09:34:37 2016
d36 1
a36 1
@@@@ -12210,7 +12211,7 @@@@ sub tag_file_id3 {
@


1.72
log
@update to get_iplayer 2.93, coping with bbc changes
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.71 2015/06/02 15:29:45 sthen Exp $
--- get_iplayer.orig	Wed Jun  3 10:34:22 2015
+++ get_iplayer	Wed Jun  3 16:21:28 2015
d8 1
a8 1
 # get_iplayer - Lists, Records and Streams BBC iPlayer TV and Radio programmes + other Programmes via 3rd-party plugins
d10 1
a10 1
@@@@ -390,6 +390,7 @@@@ if ( $opt->{encodinglocale} =~ /UTF-?8/i ) {
d18 1
a18 1
@@@@ -442,7 +443,7 @@@@ my $plugin_dir_system;
d20 1
a20 1
     $plugin_dir_system = $ENV{ALLUSERSPROFILE}.'/get_iplayer/plugins';
d22 2
a23 2
-    $plugin_dir_system = '/usr/share/get_iplayer/plugins';
+    $plugin_dir_system = '${TRUEPREFIX}/share/get_iplayer/plugins';
d27 3
a29 3
@@@@ -924,7 +925,7 @@@@ sub init_search {
 	delete $binopts->{vlc};
 	push @@{ $binopts->{vlc} }, '-vv' if $opt->{debug};
d35 2
a36 11
 	$bin->{tee}		= 'tee';
@@@@ -2737,7 +2738,7 @@@@ sub request_url_retry {
 	}
 
 	# Malformed URL check
-	if ( $url !~ m{^\s*http\:\/\/}i ) {
+	if ( $url !~ m{^\s*(http|https)\:\/\/}i ) {
 		logger "ERROR: Malformed URL: '$url'\n";
 		return '';
 	}
@@@@ -12403,7 +12404,7 @@@@ sub tag_file_id3 {
@


1.71
log
@fix typos in get_iplayer warning messages resulting in 'Not a SCALAR reference'
being triggered by some radio programs following the move to audio factory / HLS
pointed out by nigel@@
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.70 2015/03/20 14:50:16 sthen Exp $
--- get_iplayer.orig	Fri Mar 13 19:14:58 2015
+++ get_iplayer	Tue Jun  2 16:28:04 2015
d10 1
a10 1
@@@@ -388,6 +388,7 @@@@ if ( $opt->{encodinglocale} =~ /UTF-?8/i ) {
d18 1
a18 1
@@@@ -440,7 +441,7 @@@@ my $plugin_dir_system;
d27 1
a27 1
@@@@ -908,7 +909,7 @@@@ sub init_search {
d36 1
a36 1
@@@@ -2721,7 +2722,7 @@@@ sub request_url_retry {
d45 1
a45 19
@@@@ -7096,7 +7097,7 @@@@ sub parse_hls_connection {
 				push @@streams, $last_stream;
 			} elsif ($line !~ /^#EXT/) {
 				if ( ! defined $last_stream ) {
-					main::logger "WARNING: Missing #EXT-X-STREAM-INF for URL: $line ($$conn->{href})\n" ;
+					main::logger "WARNING: Missing #EXT-X-STREAM-INF for URL: $line ($conn->{href})\n" ;
 					return
 				}
 				$last_stream->{'URL'} = $line;
@@@@ -7104,7 +7105,7 @@@@ sub parse_hls_connection {
 			}
 		}
 		if ( ! @@streams ) {
-			main::logger "WARNING: No streams found in HLS playlist ($$conn->{href})\n";
+			main::logger "WARNING: No streams found in HLS playlist ($conn->{href})\n";
 			return,
 		};
 
@@@@ -12328,7 +12329,7 @@@@ sub tag_file_id3 {
@


1.70
log
@/usr/bin/env perl -> /usr/bin/perl
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.69 2015/03/14 20:45:42 sthen Exp $
d3 1
a3 1
+++ get_iplayer	Fri Mar 20 14:49:50 2015
d45 18
@


1.69
log
@update to get_iplayer 2.92
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.68 2014/12/22 14:57:11 sthen Exp $
d3 7
a9 1
+++ get_iplayer	Sat Mar 14 20:44:59 2015
@


1.68
log
@update to get_iplayer 2.91
https://github.com/get-iplayer/get_iplayer/wiki/release291
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.67 2014/12/16 11:32:11 sthen Exp $
--- get_iplayer.orig	Sun Dec 21 18:58:18 2014
+++ get_iplayer	Mon Dec 22 14:56:08 2014
@@@@ -386,6 +386,7 @@@@ if ( $opt->{encodinglocale} =~ /UTF-?8/i ) {
d12 1
a12 1
@@@@ -438,7 +439,7 @@@@ my $plugin_dir_system;
d21 1
a21 1
@@@@ -901,7 +902,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -2715,7 +2716,7 @@@@ sub request_url_retry {
d39 1
a39 1
@@@@ -11683,7 +11684,7 @@@@ sub tag_file_id3 {
@


1.68.2.1
log
@MFC: update to get_iplayer 2.93, coping with bbc changes
@
text
@d1 4
a4 10
$OpenBSD: patch-get_iplayer,v 1.72 2015/06/03 15:22:07 sthen Exp $
--- get_iplayer.orig	Wed Jun  3 10:34:22 2015
+++ get_iplayer	Wed Jun  3 16:21:28 2015
@@@@ -1,4 +1,4 @@@@
-#!/usr/bin/env perl
+#!/usr/bin/perl
 #
 # get_iplayer - Lists, Records and Streams BBC iPlayer TV and Radio programmes + other Programmes via 3rd-party plugins
 #
@@@@ -390,6 +390,7 @@@@ if ( $opt->{encodinglocale} =~ /UTF-?8/i ) {
d12 1
a12 1
@@@@ -442,7 +443,7 @@@@ my $plugin_dir_system;
d21 1
a21 1
@@@@ -924,7 +925,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -2737,7 +2738,7 @@@@ sub request_url_retry {
d39 1
a39 1
@@@@ -12403,7 +12404,7 @@@@ sub tag_file_id3 {
@


1.67
log
@update to newer get_iplayer snapshot
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.66 2014/12/02 02:25:40 sthen Exp $
--- get_iplayer.orig	Mon Dec 15 20:35:41 2014
+++ get_iplayer	Tue Dec 16 11:21:19 2014
d21 1
a21 1
@@@@ -899,7 +900,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -2713,7 +2714,7 @@@@ sub request_url_retry {
d39 1
a39 1
@@@@ -11648,7 +11649,7 @@@@ sub tag_file_id3 {
@


1.66
log
@update to newer get_iplayer snapshot
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.65 2014/11/03 10:17:09 sthen Exp $
--- get_iplayer.orig	Tue Dec  2 01:49:43 2014
+++ get_iplayer	Tue Dec  2 02:22:18 2014
@@@@ -383,6 +383,7 @@@@ if ( $opt->{encodinglocale} =~ /UTF-?8/i ) {
d12 1
a12 1
@@@@ -435,7 +436,7 @@@@ my $plugin_dir_system;
d21 1
a21 1
@@@@ -896,7 +897,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -2710,7 +2711,7 @@@@ sub request_url_retry {
d39 1
a39 1
@@@@ -11004,7 +11005,7 @@@@ sub tag_file_id3 {
@


1.65
log
@update to get_iplayer 2.90, based on a diff from nigel@@

This switches to different programme data feeds following the BBC
removing the ones used previously. However, these are less useful than
the previous feeds, and may well also be removed. See release notes for
more: https://github.com/dinkypumpkin/get_iplayer/wiki/release289
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.64 2014/10/20 11:45:29 sthen Exp $
--- get_iplayer.orig	Mon Nov  3 01:26:48 2014
+++ get_iplayer	Mon Nov  3 10:11:44 2014
@@@@ -375,6 +375,7 @@@@ if ( $opt->{encodinglocale} =~ /UTF-?8/i ) {
d12 2
a13 2
@@@@ -427,7 +428,7 @@@@ my $plugin_dir_system;
 if ( defined $ENV{ALLUSERSPROFILE} ) {
d21 1
a21 1
@@@@ -883,7 +884,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -2697,7 +2698,7 @@@@ sub request_url_retry {
d39 1
a39 1
@@@@ -10595,7 +10596,7 @@@@ sub tag_file_id3 {
@


1.64
log
@update to get_iplayer 2.87
release notes at https://github.com/dinkypumpkin/get_iplayer/wiki/release287
(including details on how get_iplayer handles the new 30-day expiry; in short,
use pid/url for programmes past 7 days)
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.63 2014/10/15 01:32:36 sthen Exp $
--- get_iplayer.orig	Sat Oct 18 12:39:56 2014
+++ get_iplayer	Mon Oct 20 12:40:38 2014
@@@@ -370,6 +370,7 @@@@ if ( $opt->{encodinglocale} =~ /UTF-?8/i ) {
d12 1
a12 1
@@@@ -422,7 +423,7 @@@@ my $plugin_dir_system;
d21 1
a21 1
@@@@ -868,7 +869,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -2682,7 +2683,7 @@@@ sub request_url_retry {
d39 1
a39 1
@@@@ -10427,7 +10428,7 @@@@ sub tag_file_id3 {
@


1.63
log
@switch to git head, prompted by a warning message reported by nigel@@
@
text
@d1 6
a6 6
$OpenBSD: patch-get_iplayer,v 1.61 2014/04/06 17:03:03 sthen Exp $
--- get_iplayer.orig	Mon Oct 13 19:24:36 2014
+++ get_iplayer	Wed Oct 15 02:29:35 2014
@@@@ -321,6 +321,7 @@@@ my @@argv_save = @@ARGV;
 $opt_pre->parse( 1 );
 @@ARGV = @@argv_save;
d11 2
a12 2
 $opt->{quiet} = 1 if $opt_pre->{quiet};
@@@@ -368,7 +369,7 @@@@ my $plugin_dir_system;
d21 1
a21 1
@@@@ -788,7 +789,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -2597,7 +2598,7 @@@@ sub request_url_retry {
d39 1
a39 1
@@@@ -10063,7 +10064,7 @@@@ sub tag_file_id3 {
@


1.62
log
@pull up get_iplayer changes from git head
@
text
@d2 3
a4 12
--- get_iplayer.orig	Wed Sep  3 11:13:16 2014
+++ get_iplayer	Wed Sep  3 11:13:13 2014
@@@@ -71,8 +71,6 @@@@ use strict;
 #use warnings;
 use Time::Local;
 use URI;
-use open qw(:utf8);
-
 my %SIGORIG;
 # Save default SIG actions
 $SIGORIG{$_} = $SIG{$_} for keys %SIG;
@@@@ -321,6 +319,7 @@@@ my @@argv_save = @@ARGV;
d12 1
a12 1
@@@@ -368,7 +367,7 @@@@ my $plugin_dir_system;
d21 1
a21 1
@@@@ -788,7 +787,7 @@@@ sub init_search {
d30 1
a30 10
@@@@ -2376,7 +2375,7 @@@@ sub create_xml {
 			'J-L' => '[jkl]',
 			'M-N' => '[mn]',
 			'O-P' => '[op]',
-			'Q-R' => '[qt]',
+			'Q-R' => '[qr]',
 			'S-T' => '[st]',
 			'U-V' => '[uv]',
 			'W-Z' => '[wxyz]',
@@@@ -2597,7 +2596,7 @@@@ sub request_url_retry {
d39 1
a39 287
@@@@ -2622,10 +2621,9 @@@@ sub request_url_retry {
 
 	# Only return decoded content if gzip is used - otherwise this severely slows down stco scanning! Perl bug?
 	main::logger "DEBUG: ".($res->header('Content-Encoding') || 'No')." Encoding used on $url\n" if $opt->{debug};
-	# this appears to be obsolete
-	# return $res->decoded_content if defined $res->header('Content-Encoding') && $res->header('Content-Encoding') eq 'gzip';
-	# return $res->content;
-	return $res->decoded_content;
+	return $res->decoded_content if defined $res->header('Content-Encoding') && $res->header('Content-Encoding') eq 'gzip';
+
+	return $res->content;
 }
 
 
@@@@ -6082,7 +6080,7 @@@@ sub get_stream_data_cdn {
 		# Common attributes
 		# swfurl = Default iPlayer swf version
 		my $conn = {
-			swfurl		=> "http://www.bbc.co.uk/emp/releases/iplayer/revisions/617463_618125_4/617463_618125_4_emp.swf",
+			swfurl		=> "http://emp.bbci.co.uk/emp/releases/smp-flash/revisions/1.9.23/1.9.23_smp.swf?1.9.23",
 			ext		=> $ext,
 			streamer	=> $streamer,
 			bitrate		=> $mattribs->{bitrate},
@@@@ -6598,34 +6596,38 @@@@ sub channels_schedule {
 	return {
 		'bbcalba/programmes/schedules'		=> 'BBC Alba',
 		'bbcfour/programmes/schedules'		=> 'BBC Four',
-		'bbcnews/programmes/schedules'		=> 'BBC News 24',
+		'bbcnews/programmes/schedules'		=> 'BBC News',
 		'bbcone/programmes/schedules/cambridge'	=> 'BBC One Cambridgeshire',
 		'bbcone/programmes/schedules/channel_islands'	=> 'BBC One Channel Islands',
 		'bbcone/programmes/schedules/east'	=> 'BBC One East',
 		'bbcone/programmes/schedules/east_midlands'	=> 'BBC One East Midlands',
-		'bbcone/programmes/schedules/hd'	=> 'BBC One HD',
+		'bbcone/programmes/schedules/hd'	=> 'BBC One',
 		'bbcone/programmes/schedules/london'	=> 'BBC One London',
 		'bbcone/programmes/schedules/north_east'	=> 'BBC One North East & Cumbria',
 		'bbcone/programmes/schedules/north_west'	=> 'BBC One North West',
 		'bbcone/programmes/schedules/ni'	=> 'BBC One Northern Ireland',
+		'bbcone/programmes/schedules/ni_hd'	=> 'BBC One Northern Ireland',
 		'bbcone/programmes/schedules/oxford'	=> 'BBC One Oxfordshire',
 		'bbcone/programmes/schedules/scotland'	=> 'BBC One Scotland',
+		'bbcone/programmes/schedules/scotland_hd'	=> 'BBC One Scotland',
 		'bbcone/programmes/schedules/south'	=> 'BBC One South',
 		'bbcone/programmes/schedules/south_east'	=> 'BBC One South East',
 		'bbcone/programmes/schedules/south_west'	=> 'BBC One South West',
 		'bbcone/programmes/schedules/wales'	=> 'BBC One Wales',
+		'bbcone/programmes/schedules/wales_hd'	=> 'BBC One Wales',
 		'bbcone/programmes/schedules/west'	=> 'BBC One West',
 		'bbcone/programmes/schedules/west_midlands'	=> 'BBC One West Midlands',
 		'bbcone/programmes/schedules/east_yorkshire'	=> 'BBC One Yorks & Lincs',
 		'bbcone/programmes/schedules/yorkshire'	=> 'BBC One Yorkshire',
-		'parliament/programmes/schedules'	=> 'BBC Parliament',
 		'bbcthree/programmes/schedules'		=> 'BBC Three',
 		'bbctwo/programmes/schedules/england'	=> 'BBC Two England',
+		'bbctwo/programmes/schedules/hd'	=> 'BBC Two',
 		'bbctwo/programmes/schedules/ni'	=> 'BBC Two Northern Ireland',
 		'bbctwo/programmes/schedules/scotland'	=> 'BBC Two Scotland',
 		'bbctwo/programmes/schedules/wales'	=> 'BBC Two Wales',
 		'cbbc/programmes/schedules'		=> 'CBBC',
 		'cbeebies/programmes/schedules'		=> 'CBeebies',
+		'parliament/programmes/schedules'	=> 'BBC Parliament',
 	};
 }
 
@@@@ -7446,14 +7448,14 @@@@ sub index_min { return 10001 }
 sub index_max { return 19999 };
 sub channels {
 	return {
-		'bbc_1xtra'				=> 'BBC 1Xtra',
+		'bbc_1xtra'				=> 'BBC Radio 1Xtra',
 		'bbc_radio_one'				=> 'BBC Radio 1',
 		'bbc_radio_two'				=> 'BBC Radio 2',
 		'bbc_radio_three'			=> 'BBC Radio 3',
 		'bbc_radio_four'			=> 'BBC Radio 4',
 		'bbc_radio_four_extra'			=> 'BBC Radio 4 Extra',
 		'bbc_radio_five_live'			=> 'BBC Radio 5 live',
-		'bbc_radio_five_live_sports_extra'	=> 'BBC 5 live Sports Extra',
+		'bbc_radio_five_live_sports_extra'	=> 'BBC 5 live sports extra',
 		'bbc_6music'				=> 'BBC 6 Music',
 		'bbc_7'					=> 'BBC 7',
 		'bbc_asian_network'			=> 'BBC Asian Network',
@@@@ -7464,114 +7466,121 @@@@ sub channels {
 		'bbc_radio_wales'			=> 'BBC Radio Wales',
 		'bbc_radio_cymru'			=> 'BBC Radio Cymru',
 		'bbc_world_service'			=> 'BBC World Service',
-		'bbc_radio_cumbria'			=> 'BBC Cumbria',
+		'bbc_radio_cumbria'			=> 'BBC Radio Cumbria',
 		'bbc_radio_newcastle'			=> 'BBC Newcastle',
 		'bbc_tees'				=> 'BBC Tees',
-		'bbc_radio_lancashire'			=> 'BBC Lancashire',
-		'bbc_radio_merseyside'			=> 'BBC Merseyside',
-		'bbc_radio_manchester'			=> 'BBC Manchester',
-		'bbc_radio_leeds'			=> 'BBC Leeds',
-		'bbc_radio_sheffield'			=> 'BBC Sheffield',
-		'bbc_radio_york'			=> 'BBC York',
-		'bbc_radio_humberside'			=> 'BBC Humberside',
-		'bbc_radio_lincolnshire'		=> 'BBC Lincolnshire',
-		'bbc_radio_nottingham'			=> 'BBC Nottingham',
-		'bbc_radio_leicester'			=> 'BBC Leicester',
-		'bbc_radio_derby'			=> 'BBC Derby',
-		'bbc_radio_stoke'			=> 'BBC Stoke',
-		'bbc_radio_shropshire'			=> 'BBC Shropshire',
-		'bbc_wm'				=> 'BBC WM',
+		'bbc_radio_lancashire'			=> 'BBC Radio Lancashire',
+		'bbc_radio_merseyside'			=> 'BBC Radio Merseyside',
+		'bbc_radio_manchester'			=> 'BBC Radio Manchester',
+		'bbc_radio_leeds'			=> 'BBC Radio Leeds',
+		'bbc_radio_sheffield'			=> 'BBC Radio Sheffield',
+		'bbc_radio_york'			=> 'BBC Radio York',
+		'bbc_radio_humberside'			=> 'BBC Radio Humberside',
+		'bbc_radio_lincolnshire'		=> 'BBC Radio Lincolnshire',
+		'bbc_radio_nottingham'			=> 'BBC Radio Nottingham',
+		'bbc_radio_leicester'			=> 'BBC Radio Leicester',
+		'bbc_radio_derby'			=> 'BBC Radio Derby',
+		'bbc_radio_stoke'			=> 'BBC Radio Stoke',
+		'bbc_radio_shropshire'			=> 'BBC Radio Shropshire',
+		'bbc_wm'				=> 'BBC WM 95.6',
 		'bbc_radio_coventry_warwickshire'	=> 'BBC Coventry & Warwickshire',
 		'bbc_radio_hereford_worcester'		=> 'BBC Hereford & Worcester',
-		'bbc_radio_northampton'			=> 'BBC Northampton',
-		'bbc_three_counties_radio'		=> 'BBC Three Counties',
-		'bbc_radio_cambridge'			=> 'BBC Cambridgeshire',
-		'bbc_radio_norfolk'			=> 'BBC Norfolk',
-		'bbc_radio_suffolk'			=> 'BBC Suffolk',
+		'bbc_radio_northampton'			=> 'BBC Radio Northampton',
+		'bbc_three_counties_radio'		=> 'BBC Three Counties Radio',
+		'bbc_radio_cambridge'			=> 'BBC Radio Cambridgeshire',
+		'bbc_radio_norfolk'			=> 'BBC Radio Norfolk',
+		'bbc_radio_suffolk'			=> 'BBC Radio Suffolk',
 		'bbc_radio_essex'			=> 'BBC Essex',
-		'bbc_london'				=> 'BBC London',
-		'bbc_radio_kent'			=> 'BBC Kent',
+		'bbc_london'				=> 'BBC London 94.9',
+		'bbc_radio_kent'			=> 'BBC Radio Kent',
 		'bbc_radio_surrey'			=> 'BBC Surrey',
 		'bbc_radio_sussex'			=> 'BBC Sussex',
-		'bbc_radio_oxford'			=> 'BBC Oxford',
-		'bbc_radio_berkshire'			=> 'BBC Berkshire',
-		'bbc_radio_solent'			=> 'BBC Solent',
-		'bbc_radio_gloucestershire'		=> 'BBC Gloucestershire',
+		'bbc_radio_oxford'			=> 'BBC Radio Oxford',
+		'bbc_radio_berkshire'			=> 'BBC Radio Berkshire',
+		'bbc_radio_solent'			=> 'BBC Radio Solent',
+		'bbc_radio_gloucestershire'		=> 'BBC Radio Gloucestershire',
 		'bbc_radio_wiltshire'			=> 'BBC Wiltshire',
-		'bbc_radio_bristol'			=> 'BBC Bristol',
+		'bbc_radio_bristol'			=> 'BBC Radio Bristol',
 		'bbc_radio_somerset_sound'		=> 'BBC Somerset',
-		'bbc_radio_devon'			=> 'BBC Devon',
-		'bbc_radio_cornwall'			=> 'BBC Cornwall',
-		'bbc_radio_guernsey'			=> 'BBC Guernsey',
-		'bbc_radio_jersey'			=> 'BBC Jersey',
+		'bbc_radio_devon'			=> 'BBC Radio Devon',
+		'bbc_radio_cornwall'			=> 'BBC Radio Cornwall',
+		'bbc_radio_guernsey'			=> 'BBC Radio Guernsey',
+		'bbc_radio_jersey'			=> 'BBC Radio Jersey',
 		'popular/radio'				=> 'Popular',
 		'highlights/radio'			=> 'Highlights',
 	};
 }
 
 
-# channel ids be found on http://www.bbc.co.uk/bbcone/programmes/schedules/today
+# channel ids be found on http://www.bbc.co.uk/radio/stations
 sub channels_schedule {
 	return {
-		'1xtra/programmes/schedules'		=> 'BBC 1Xtra',
-		'radio1/programmes/schedules/england'	=> 'BBC Radio 1 England',
+		# national stations
+		'radio1/programmes/schedules/england'	=> 'BBC Radio 1',
+		'1xtra/programmes/schedules'		=> 'BBC Radio 1Xtra',
 		'radio2/programmes/schedules'		=> 'BBC Radio 2',
 		'radio3/programmes/schedules'		=> 'BBC Radio 3',
-		'radio4/programmes/schedules/fm'	=> 'BBC Radio 4 FM',
-		'radio4/programmes/schedules/lw'	=> 'BBC Radio 4 LW',
+		'radio4/programmes/schedules/fm'	=> 'BBC Radio 4',
+		'radio4/programmes/schedules/lw'	=> 'BBC Radio 4',
 		'radio4extra/programmes/schedules'	=> 'BBC Radio 4 Extra',
 		'5live/programmes/schedules'		=> 'BBC Radio 5 live',
-		'5livesportsextra/programmes/schedules'	=> 'BBC 5 live Sports Extra',
+		'5livesportsextra/programmes/schedules'	=> 'BBC 5 live sports extra',
 		'6music/programmes/schedules'		=> 'BBC 6 Music',
 		'asiannetwork/programmes/schedules'	=> 'BBC Asian Network',
-		'radiofoyle/programmes/schedules'	=> 'BBC Radio Foyle',
-		'radioscotland/programmes/schedules/fm'	=> 'BBC Radio Scotland', # fm,mw,orkney,shetland,highlandsandislands
-		'radionangaidheal/programmes/schedules'	=> 'BBC Radio Nan Gaidheal',
-		'radioulster/programmes/schedules'	=> 'BBC Radio Ulster',
-		'radiowales/programmes/schedules/fm'	=> 'BBC Radio Wales FM',
-		'radiowales/programmes/schedules/mw'	=> 'BBC Radio Wales MW',
-		'radiocymru/programmes/schedules'	=> 'BBC Radio Cymru',
 		'worldserviceradio/programmes/schedules'	=> 'BBC World Service',
-		'radiocumbria/programmes/schedules'		=> 'BBC Cumbria',
-		'bbcnewcastle/programmes/schedules'	=> 'BBC Newcastle',
-		'bbctees/programmes/schedules'		=> 'BBC Tees',
-		'radiolancashire/programmes/schedules'	=> 'BBC Lancashire',
-		'radiomerseyside/programmes/schedules'	=> 'BBC Merseyside',
-		'radiomanchester/programmes/schedules'	=> 'BBC Manchester',
-		'radioleeds/programmes/schedules'		=> 'BBC Leeds',
-		'radiosheffield/programmes/schedules'	=> 'BBC Sheffield',
-		'radioyork/programmes/schedules'		=> 'BBC York',
-		'radiohumberside/programmes/schedules'	=> 'BBC Humberside',
-		'bbclincolnshire/programmes/schedules'	=> 'BBC Lincolnshire',
-		'radionottingham/programmes/schedules'	=> 'BBC Nottingham',
-		'radioleicester/programmes/schedules'	=> 'BBC Leicester',
-		'radioderby/programmes/schedules'		=> 'BBC Derby',
-		'radiostoke/programmes/schedules'		=> 'BBC Stoke',
-		'radioshropshire/programmes/schedules'	=> 'BBC Shropshire',
-		'wm/programmes/schedules'		=> 'BBC WM',
-		'bbccoventryandwarwickshire/programmes/schedules'		=> 'BBC Coventry & Warwickshire',
-		'bbcherefordandworcester/programmes/schedules'=> 'BBC Hereford & Worcester',
-		'radionorthampton/programmes/schedules'	=> 'BBC Northampton',
-		'threecountiesradio/programmes/schedules'	=> 'BBC Three Counties',
-		'radiocambridgeshire/programmes/schedules'	=> 'BBC Cambridgeshire',
-		'radionorfolk/programmes/schedules'		=> 'BBC Norfolk',
-		'radiosuffolk/programmes/schedules'		=> 'BBC Suffolk',
-		'bbcessex/programmes/schedules'		=> 'BBC Essex',
-		'bbclondon/programmes/schedules'		=> 'BBC London',
-		'radiokent/programmes/schedules'		=> 'BBC Kent',
+		# nations
+		'radioscotland/programmes/schedules/fm'	=> 'BBC Radio Scotland',
+		'radioscotland/programmes/schedules/orkney'	=> 'BBC Radio Scotland',
+		'radioscotland/programmes/schedules/shetland'	=> 'BBC Radio Scotland',
+		'radioscotland/programmes/schedules/highlandsandislands'	=> 'BBC Radio Scotland',
+		'radioscotland/programmes/schedules/mw'	=> 'BBC Radio Scotland',
+		'radionangaidheal/programmes/schedules'	=> 'BBC Radio Nan Gaidheal',
+		'radioulster/programmes/schedules'		=> 'BBC Radio Ulster',
+		'radiofoyle/programmes/schedules'		=> 'BBC Radio Foyle',
+		'radiowales/programmes/schedules/fm'	=> 'BBC Radio Wales',
+		'radiowales/programmes/schedules/mw'	=> 'BBC Radio Wales',
+		'radiocymru/programmes/schedules'		=> 'BBC Radio Cymru',
+		# local
+		'radioberkshire/programmes/schedules'	=> 'BBC Radio Berkshire',
+		'radiobristol/programmes/schedules'		=> 'BBC Radio Bristol',
+		'radiocambridgeshire/programmes/schedules'	=> 'BBC Radio Cambridgeshire',
+		'radiocornwall/programmes/schedules'	=> 'BBC Radio Cornwall',
+		'bbccoventryandwarwickshire/programmes/schedules'	=> 'BBC Coventry & Warwickshire',
+		'radiocumbria/programmes/schedules'		=> 'BBC Radio Cumbria',
+		'radioderby/programmes/schedules'		=> 'BBC Radio Derby',
+		'radiodevon/programmes/schedules'		=> 'BBC Radio Devon',
+		'bbcessex/programmes/schedules'			=> 'BBC Essex',
+		'radiogloucestershire/programmes/schedules'	=> 'BBC Radio Gloucestershire',
+		'radioguernsey/programmes/schedules'		=> 'BBC Radio Guernsey',
+		'bbcherefordandworcester/programmes/schedules'	=> 'BBC Hereford & Worcester',
+		'radiohumberside/programmes/schedules'	=> 'BBC Radio Humberside',
+		'radiojersey/programmes/schedules'		=> 'BBC Radio Jersey',
+		'radiokent/programmes/schedules'		=> 'BBC Radio Kent',
+		'radiolancashire/programmes/schedules'	=> 'BBC Radio Lancashire',
+		'radioleeds/programmes/schedules'		=> 'BBC Radio Leeds',
+		'radioleicester/programmes/schedules'	=> 'BBC Radio Leicester',
+		'radiolincolnshire/programmes/schedules'	=> 'BBC Radio Lincolnshire',
+		'bbclondon/programmes/schedules'		=> 'BBC London 94.9',
+		'radiomanchester/programmes/schedules'	=> 'BBC Radio Manchester',
+		'radiomerseyside/programmes/schedules'	=> 'BBC Radio Merseyside',
+		'bbcnewcastle/programmes/schedules'		=> 'BBC Newcastle',
+		'radionorfolk/programmes/schedules'		=> 'BBC Radio Norfolk',
+		'radionorthampton/programmes/schedules'	=> 'BBC Radio Northampton',
+		'radionottingham/programmes/schedules'	=> 'BBC Radio Nottingham',
+		'radiooxford/programmes/schedules'		=> 'BBC Radio Oxford',
+		'radiosheffield/programmes/schedules'	=> 'BBC Radio Sheffield',
+		'radioshropshire/programmes/schedules'	=> 'BBC Radio Shropshire',
+		'radiosolent/programmes/schedules'		=> 'BBC Radio Solent',
+		'bbcsomerset/programmes/schedules'		=> 'BBC Somerset',
+		'radiostoke/programmes/schedules'		=> 'BBC Radio Stoke',
+		'radiosuffolk/programmes/schedules'		=> 'BBC Radio Suffolk',
 		'bbcsurrey/programmes/schedules'		=> 'BBC Surrey',
 		'bbcsussex/programmes/schedules'		=> 'BBC Sussex',
-		'bbcoxford/programmes/schedules'		=> 'BBC Oxford',
-		'radioberkshire/programmes/schedules'	=> 'BBC Berkshire',
-		'radiosolent/programmes/schedules'		=> 'BBC Solent',
-		'radiogloucestershire/programmes/schedules'	=> 'BBC Gloucestershire',
-		'bbcwiltshire/programmes/schedules'	=> 'BBC Wiltshire',
-		'radiobristol/programmes/schedules'		=> 'BBC Bristol',
-		'bbcsomerset/programmes/schedules'		=> 'BBC Somerset',
-		'radiodevon/programmes/schedules'		=> 'BBC Devon',
-		'radiocornwall/programmes/schedules'		=> 'BBC Cornwall',
-		'bbcguernsey/programmes/schedules'		=> 'BBC Guernsey',
-		'radiojersey/programmes/schedules'		=> 'BBC Jersey',
+		'bbctees/programmes/schedules'			=> 'BBC Tees',
+		'threecountiesradio/programmes/schedules'	=> 'BBC Three Counties Radio',
+		'bbcwiltshire/programmes/schedules'		=> 'BBC Wiltshire',
+		'wm/programmes/schedules'				=> 'BBC WM 95.6',
+		'radioyork/programmes/schedules'		=> 'BBC Radio York',
 	};
 }
 
@@@@ -9939,7 +9948,7 @@@@ sub tag_file_id3 {
@


1.61
log
@update to get_iplayer 2.86
@
text
@d1 13
a13 4
$OpenBSD: patch-get_iplayer,v 1.60 2014/03/28 16:18:21 sthen Exp $
--- get_iplayer.orig	Sat Apr  5 20:31:29 2014
+++ get_iplayer	Sun Apr  6 17:36:44 2014
@@@@ -321,6 +321,7 @@@@ my @@argv_save = @@ARGV;
d21 1
a21 1
@@@@ -368,7 +369,7 @@@@ my $plugin_dir_system;
d30 1
a30 1
@@@@ -788,7 +789,7 @@@@ sub init_search {
d39 10
a48 1
@@@@ -2597,7 +2598,7 @@@@ sub request_url_retry {
d57 287
a343 1
@@@@ -9939,7 +9940,7 @@@@ sub tag_file_id3 {
@


1.60
log
@add a patch from nigel@@ so that https urls aren't detected as being malformed
@
text
@d1 10
a10 4
$OpenBSD: patch-get_iplayer,v 1.59 2014/03/09 21:07:49 sthen Exp $
--- get_iplayer.orig	Wed Nov  6 20:12:35 2013
+++ get_iplayer	Fri Mar 28 16:16:29 2014
@@@@ -320,6 +320,7 @@@@ $opt->{verbose} = 1 if $opt_pre->{verbose};
d12 1
a12 7
 $opt->{pvr} = 1 if $opt_pre->{pvr};
 $opt->{stdout} = 1 if $opt_pre->{stdout} || $opt_pre->{stream};
+$opt->{packagemanager}= 'pkg_add';
 
 # show version and exit
 if ( $opt_pre->{showver} ) {
@@@@ -360,7 +361,7 @@@@ my $plugin_dir_system;
d21 1
a21 1
@@@@ -776,7 +777,7 @@@@ sub init_search {
d30 1
a30 26
@@@@ -1431,14 +1432,16 @@@@ sub user_agent {
 		update		=> [ "get_iplayer updater (v${version} - $^O - $^V)" ],
 		get_iplayer	=> [ "get_iplayer/$version $^O/$^V" ],
 		desktop		=> [
-				'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 2.0.50<RAND>; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30<RAND>; InfoPath.1)',
-				'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; YPC 3.2.0; SLCC1; .NET CLR 2.0.50<RAND>; .NET CLR 3.0.04<RAND>)',
-				'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50<RAND>; .NET CLR 3.5.30<RAND>; .NET CLR 3.0.30<RAND>; Media Center PC 6.0; InfoPath.2; MS-RTC LM 8)',
-				'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/<RAND>.8 (KHTML, like Gecko) Chrome/2.0.178.0 Safari/<RAND>.8',
-				'Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 6.0; SLCC1; .NET CLR 2.0.50<RAND>; Media Center PC 5.0; c .NET CLR 3.0.0<RAND>6; .NET CLR 3.5.30<RAND>; InfoPath.1; el-GR)',
-				'Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_4_11; tr) AppleWebKit/<RAND>.4+ (KHTML, like Gecko) Version/4.0dp1 Safari/<RAND>.11.2',
-				'Mozilla/6.0 (Windows; U; Windows NT 7.0; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.9 (.NET CLR 3.5.30<RAND>)',
-				'Opera/9.64 (X11; Linux i686; U; en) Presto/2.1.1',
+				'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.56 Safari/537.17',
+				'Mozilla/5.0 (Windows NT 6.1; rv:12.0) Gecko/20100101 Firefox/12.0',
+				'Opera/9.80 (Windows NT 5.1) Presto/2.12.388 Version/12.12',
+				'Mozilla/5.0 (Windows NT 7.1; rv:2.0) Gecko/20100101 Firefox/4.0 Opera 12.12',
+				'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.12',
+				'Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0',
+				'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.13+ (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2',
+				'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)',
+				'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 7.1; Trident/5.0)',
+				'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)',
 				],
 		safari		=> [
 				'Mozilla/5.0 (iPhone; U; CPU iPhone OS 2_0 like Mac OS X; en-us) AppleWebKit/525.18.1 (KHTML, like Gecko) Version/3.1.1 Mobile/5A345 Safari/525.20',
@@@@ -2583,7 +2586,7 @@@@ sub request_url_retry {
d39 1
a39 1
@@@@ -9808,7 +9811,7 @@@@ sub tag_file_id3 {
@


1.59
log
@update to get_iplayer 2.85
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.58 2013/09/30 22:43:31 sthen Exp $
d3 1
a3 1
+++ get_iplayer	Thu Nov  7 13:27:59 2013
d55 9
@


1.58
log
@update to get_iplayer-2.84
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.57 2013/09/29 22:57:57 sthen Exp $
--- get_iplayer.orig	Mon Sep 30 19:33:17 2013
+++ get_iplayer	Mon Sep 30 23:42:12 2013
d55 1
a55 1
@@@@ -9797,7 +9800,7 @@@@ sub tag_file_id3 {
@


1.57
log
@sync with upstream; mostly handle new subtitle format, and some fixes for radio
@
text
@d1 4
a4 24
$OpenBSD: patch-get_iplayer,v 1.56 2013/06/22 22:53:14 sthen Exp $
--- get_iplayer.orig	Sun Sep 29 23:41:40 2013
+++ get_iplayer	Sun Sep 29 23:41:32 2013
@@@@ -136,8 +136,10 @@@@ my $opt_format = {
 	stop		=> [ 1, "stop=s", 'Recording', '--stop <secs|hh:mm:ss>', "Recording/streaming stop offset (can be used to limit live rtmp recording length) rtmp and realaudio only"],
 	suboffset	=> [ 1, "suboffset=n", 'Recording', '--suboffset <offset>', "Offset the subtitle timestamps by the specified number of milliseconds"],
 	subtitles	=> [ 2, "subtitles|subs!", 'Recording', '--subtitles', "Download subtitles into srt/SubRip format if available and supported"],
+	subsfmt		=> [ 1, "subsfmt=s", 'Search', '--subsfmt <format>', "Subtitles format.  One of: default, compact.  Default: 'default'"],
 	subsonly	=> [ 1, "subtitlesonly|subsonly|subtitles-only|subs-only!", 'Recording', '--subtitles-only', "Only download the subtitles, not the programme"],
 	subsraw		=> [ 1, "subsraw!", 'Recording', '--subsraw', "Additionally save the raw subtitles file"],
+	subsrequired		=> [ 1, "subsrequired|subs-required|subtitles-required!", 'Recording', '--subtitles-required', "Do not download TV programme if subtitles are not available."],
 	tagonly		=> [ 1, "tagonly|tag-only!", 'Recording', '--tag-only', "Only update the programme tag and not download the programme (can also be used with --history)"],
 	test		=> [ 1, "test|t!", 'Recording', '--test, -t', "Test only - no recording (will show programme type)"],
 	thumb		=> [ 1, "thumb|thumbnail!", 'Recording', '--thumb', "Download Thumbnail image if available"],
@@@@ -153,7 +155,7 @@@@ my $opt_format = {
 	excludecategory	=> [ 0, "xcat|exclude-category=s", 'Search', '--exclude-category <string>', "Narrow search to exclude matched categories (regex or comma separated values)"],
 	excludechannel	=> [ 0, "xchan|exclude-channel=s", 'Search', '--exclude-channel <string>', "Narrow search to exclude matched channel(s) (regex or comma separated values)"],
 	fields		=> [ 0, "fields=s", 'Search', '--fields <field1>,<field2>,..', "Searches only in the specified comma separated fields"],
-	future		=> [ 1, "future!", 'Search', '--future', "Search future programme schedule if it has been indexed (refresh cache with: --refresh --refresh-future)."],
+	future		=> [ 1, "future!", 'Search', '--future', "Additionally search future programme schedule if it has been indexed (refresh cache with: --refresh --refresh-future)."],
 	long		=> [ 0, "long|l!", 'Search', '--long, -l', "Additionally search in programme descriptions and episode names (same as --fields=name,episode,desc )"],
 	search		=> [ 1, "search=s", 'Search', '--search <search term>', "GetOpt compliant way of specifying search args"],
 	history		=> [ 1, "history!", 'Search', '--history', "Search/show recordings history"],
@@@@ -318,6 +320,7 @@@@ $opt->{verbose} = 1 if $opt_pre->{verbose};
d12 1
a12 1
@@@@ -358,7 +361,7 @@@@ my $plugin_dir_system;
d21 1
a21 1
@@@@ -771,7 +774,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -1426,14 +1429,16 @@@@ sub user_agent {
d55 1
a55 296
@@@@ -2730,7 +2735,14 @@@@ sub run_cmd {
 	my $USE_SYSTEM = 0;
 	#my $system_suffix;
 
-	main::logger "\n\nINFO: Command: ".(join ' ', map {s/\"/\\\"/g; "\"$_\"";} @@cmd)."\n\n" if $opt->{verbose};
+	my $log_str;
+	my @@log_cmd = @@cmd;
+	if ( $#log_cmd > 0 ) {
+		$log_str = (join ' ', map {s/\"/\\\"/g; "\"$_\"";} @@log_cmd)
+	} else {
+		$log_str = $log_cmd[0]
+	}
+	main::logger "\n\nINFO: Command: $log_str\n\n" if $opt->{verbose};
 
 	# Define what to do with STDOUT and STDERR of the child process
 	my $fh_child_out = ">&STDOUT";
@@@@ -4018,7 +4030,11 @@@@ sub create_dir {
 	my $prog = shift;
 	if ( (! -d "$prog->{dir}") && (! $opt->{test}) ) {
 		main::logger "INFO: Creating dir '$prog->{dir}'\n" if $opt->{verbose};
-		mkpath("$prog->{dir}");
+		eval { mkpath("$prog->{dir}") };
+		if ( $@@ ) {
+			main::logger "ERROR: Could not create dir '$prog->{dir}': $@@";
+			exit 1;
+		}
 	}
 }
 
@@@@ -4273,6 +4289,14 @@@@ sub download_retry_loop {
 				# quit if successful or skip (unless --multimode selected)
 				last if ( $retcode == 0 || $retcode == 2 ) && ! $opt->{multimode};
 			}
+			if ( $retcode && ! $opt->{multimode} ) {
+				if ( $prog->{type} eq 'radio' || $prog->{type} eq 'liveradio' ) {
+					if ( grep(/wma/, @@available_modes) && ! grep(/wma/, @@modes) ) {
+						main::logger "INFO: You may wish to try --modes=wma for version $version\n";
+						main::logger "INFO: Note that wma mode is real-time only, and thus is generally only suitable for recording live radio.\n";
+					}
+				}
+			}
 		}
 		# Break out of loop if we have a successful recording for this version and mode
 		return 0 if not $retcode;
@@@@ -5028,6 +5052,9 @@@@ sub get_verpids {
 		} elsif ( $xml =~ m{href="http://www.bbc.co.uk/iplayer/episode/(b0[a-z0-9]{6})"} ) {
 			$prog->{pid} = $1;
 			$url = 'http://www.bbc.co.uk/iplayer/playlist/'.$1;
+		# playlist embedded in JSON
+		} elsif ( $xml =~ m{"href":"(http:\\/\\/playlists.bbc.co.uk\\/.+?\\/playlist.sxml)"} ) {
+ 			($url = $1) =~ s/\\//g;
 		} elsif ( $url =~ m{^http.+.xml$} ) {
 			# Just keep the url as it is probably already an xml playlist
 		## playlist: "http://www.bbc.co.uk/iplayer/playlist/bbc_radio_one",
@@@@ -5207,7 +5234,7 @@@@ sub get_metadata {
 	my $entry;
 	my $prog_feed_url = 'http://feeds.bbc.co.uk/iplayer/episode/'; # $pid
 
-	my ($name, $episode, $desc, $available, $channel, $expiry, $meddesc, $longdesc, $summary, $versions, $guidance, $prog_type, $categories, $player, $thumbnail, $seriestitle, $episodetitle, $nametitle, $seriesnum, $episodenum );
+	my ($name, $episode, $desc, $available, $channel, $expiry, $meddesc, $longdesc, $summary, $versions, $guidance, $prog_type, $categories, $category, $player, $thumbnail, $seriestitle, $episodetitle, $nametitle, $seriesnum, $episodenum );
 
 	# This URL works for all prog types:
 	# http://www.bbc.co.uk/iplayer/playlist/${pid}
@@@@ -5341,6 +5368,15 @@@@ sub get_metadata {
 			push @@cats, $1 if m{\s*label="(.+?)">\d+<\/media:category>};
 		}
 		$categories = join ',', @@cats;
+		# capture first category, skip generic values
+		my @@ignore_categories = ("Films", "Sign Zone", "Audio Described", "Northern Ireland", "Scotland", "Wales", "England");
+		foreach my $cat ( @@cats ) {
+			if ( ! grep(/$cat/i,  @@ignore_categories) ) {
+				$category = $cat;
+				last
+			}
+		}
+		$category ||= "get_iplayer";
 	}
 
 
@@@@ -5451,14 +5487,14 @@@@ sub get_metadata {
 		# Flatten
 		$rdf =~ s|\n| |g;
 		# Get min/max bcast dates from rdf
-		my ( $first, $last, $first_string, $last_string ) = ( 9999999999, 0, 'Never', 'Never' );
+		my ( $now, $first, $last, $first_string, $last_string ) = ( time(), 9999999999, 0, 'Never', 'Never' );
 
 		# <po:(First|Repeat)Broadcast>
 		#  <po:schedule_date rdf:datatype="http://www.w3.org/2001/XMLSchema#date">2009-06-06</po:schedule_date>
 		#    <event:time>
 		#        <timeline:Interval>
 		#              <timeline:start rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2009-06-06T21:30:00+01:00</timeline:start>
-		for ( split /<po:(First|Repeat)Broadcast>/, $rdf ) {
+		for ( split /<po:(First|Repeat)?Broadcast/, $rdf ) {
 			my $timestring;
 			my $epoch;
 			$timestring = $1 if m{<timeline:start\s+rdf:datatype=".+?">(20\d\d-\d\d-\d\dT\d\d:\d\d:\d\d([+-]\d\d:\d\d|Z))<};
@@@@ -5469,7 +5505,7 @@@@ sub get_metadata {
 				$first = $epoch;
 				$first_string = $timestring;
 			}
-			if ( $epoch > $last ) {
+			if ( $now > $epoch && $epoch > $last ) {
 				$last = $epoch;
 				$last_string = $timestring;
 			}
@@@@ -5480,6 +5516,8 @@@@ sub get_metadata {
 			$prog->{lastbcast}->{$version} = $last_string;
 			$prog->{firstbcastrel}->{$version} = Programme::get_time_string( $first_string, time() );
 			$prog->{lastbcastrel}->{$version} = Programme::get_time_string( $last_string, time() );
+			($prog->{firstbcastdate}->{$version} = $first_string) =~ s/T.*$//;
+			($prog->{lastbcastdate}->{$version} = $last_string) =~ s/T.*$//;
 		}
 	}
 
@@@@ -5547,6 +5585,7 @@@@ sub get_metadata {
 	$prog->{versions}	= $versions;
 	$prog->{guidance}	= $guidance || $prog->{guidance};
 	$prog->{categories}	= $categories || $prog->{categories};
+	$prog->{category}	= $category || $prog->{category};
 	$prog->{desc}		= $longdesc || $meddesc || $desc || $prog->{desc} || $summary;
 	$prog->{descmedium}	= $meddesc;
 	$prog->{descshort}	= $summary;
@@@@ -7080,7 +7119,10 @@@@ sub download {
 		$subfile_done = "$prog->{dir}/$prog->{fileprefix}.srt";
 		$subfile = "$prog->{dir}/$prog->{fileprefix}.partial.srt";
 		main::logger "\n";
-		$prog->download_subtitles( $ua, $subfile );
+		if ( $prog->download_subtitles( $ua, $subfile ) && $opt->{subsrequired} && $prog->{type} eq 'tv') {
+			main::logger "WARNING: Subtitles not available and --subsrequired specified.\n";
+			return 'skip';
+		}
 	}
 
 	my $return = 0;
@@@@ -7179,33 +7221,47 @@@@ sub download_subtitles {
 	#<p begin="0:01:12.400" end="0:01:13.880">Thinking.</p>
 	#<p begin="00:01:01.88" id="p15" end="00:01:04.80"><span tts:color="cyan">You're thinking of Hamburger Hill...<br /></span>Since we left...</p>
 	#<p begin="00:00:18.48" id="p0" end="00:00:20.52">APPLAUSE AND CHEERING</p>
+	# There is also a multiline form:
+	#<p region="speaker" begin="00:00:01.840" end="00:00:08.800"><span style="textStyle">  This programme contains  <br/>
+	#                  some strong language</span></p>
+
 	my $count = 1;
-	my @@lines = grep /<p\s.*begin=/, split /\n/, $subs;
-	for ( @@lines ) {
-		my ( $begin, $end, $sub );
-		# Remove <br /> elements
-		s|<br.*?>| |g;
-		# Remove >1 spaces
-		s|\s{2,}| |g;
-		( $begin, $end, $sub ) = ( $1, $2, $3 ) if m{<p\s+.*begin="(.+?)".+end="(.+?)".*?>(.+?)<\/p>};
-		if ($begin && $end && $sub ) {
-			# Format numerical field widths
-			$begin = sprintf( '%02d:%02d:%02d,%02d', split /[:\.,]/, $begin );
-			$end = sprintf( '%02d:%02d:%02d,%02d', split /[:\.,]/, $end );
-			# Add trailing zero if ttxt format only uses hundreths of a second
-			$begin .= '0' if $begin =~ m{,\d\d$};
-			$end .= '0' if $end =~ m{,\d\d$};
+	for ( $subs =~ m{<p\b.+?</p>}gis ) {
+		my ( $begin, $end, $sub ) = ( m{\bbegin="(.+?)".*?\bend="(.+?)".*?>(.+?)</p>}is );
+		if ( $begin && $end && $sub ) {
+			($begin = sprintf( '%02d:%02d:%06.3f', split /:/, $begin )) =~ s/\./,/;
+			($end = sprintf( '%02d:%02d:%06.3f', split /:/, $end )) =~ s/\./,/;
 			if ($opt->{suboffset}) {
 				$begin = main::subtitle_offset( $begin, $opt->{suboffset} );
 				$end = main::subtitle_offset( $end, $opt->{suboffset} );
 			}
-			# Separate individual lines based on <span>s
-			$sub =~ s|<span.*?>(.*?)</span>|\n$1\n|g;
+			# remove line breaks, squeeze whitespace, fix up <br> and <span>
+			$sub =~ s|\n+||g;
+			$sub =~ s/(^\s+|\s+$)//g;
+			$sub =~ s|\s+| |g;
+			$sub =~ s|(<br.*?>\s?)+|<br/>|gi;
+			$sub =~ s!(^<br/>|<br/>$)!!g;
+			$sub =~ s|<br/>(</span>)$|$1|i;
+			$sub =~ s|(<span.*?>)\s|$1|i;
+			# separate individual lines based on <span>s
+			$sub =~ s|<span.*?>(.*?)</span>|\n$1\n|gi;
 			if ($sub =~ m{\n}) {
-				chomp($sub);
-				$sub =~ s|^\n?|- |;
+				# fix up line breaks
+				$sub =~ s/(^\n|\n$)//g;
+				# add leading hyphens
 				$sub =~ s|\n+|\n- |g;
+				if ( $sub =~ m{\n-} ) {
+					$sub =~ s|^|- |;
+				}
 			}
+			if ( $opt->{subsfmt} eq 'compact' ) {
+				$sub =~ s|\n+||g;
+				# embed line breaks
+				$sub =~ s|<br/>|\n|g;
+			} else {
+				# remove <br/> elements
+				$sub =~ s|<br/>| |g;
+			}
 			decode_entities($sub);
 			# Write to file
 			print $fh "$count\n";
@@@@ -7318,9 +7374,6 @@@@ sub channels_schedule {
 	return {
 		'1xtra/programmes/schedules'		=> 'BBC 1Xtra',
 		'radio1/programmes/schedules/england'	=> 'BBC Radio 1 England',
-		'radio1/programmes/schedules/northernireland'=> 'BBC Radio 1 Northern Ireland',
-		'radio1/programmes/schedules/scotland'	=> 'BBC Radio 1 Scotland',
-		'radio1/programmes/schedules/wales'	=> 'BBC Radio 1 Wales',
 		'radio2/programmes/schedules'		=> 'BBC Radio 2',
 		'radio3/programmes/schedules'		=> 'BBC Radio 3',
 		'radio4/programmes/schedules/fm'	=> 'BBC Radio 4 FM',
@@@@ -7385,7 +7438,7 @@@@ sub channels_schedule {
 # Class cmdline Options
 sub opt_format {
 	return {
-		radiomode	=> [ 1, "radiomode|amode=s", 'Recording', '--radiomode <mode>,<mode>,...', "Radio recording modes: flashaachigh,flashaacstd,flashaudio,flashaaclow,wma. Shortcuts: default,good,better(=default),best,rtmp,flash,flashaac. ('default'=flashaachigh,flashaacstd,flashaudio,flashaaclow,wma)"],
+		radiomode	=> [ 1, "radiomode|amode=s", 'Recording', '--radiomode <mode>,<mode>,...', "Radio recording modes: flashaachigh,flashaacstd,flashaudio,flashaaclow,wma. Shortcuts: default,good,better(=default),best,rtmp,flash,flashaac. ('default'=flashaachigh,flashaacstd,flashaudio,flashaaclow)"],
 		bandwidth 	=> [ 1, "bandwidth=n", 'Recording', '--bandwidth', "In radio realaudio mode specify the link bandwidth in bps for rtsp streaming (default 512000)"],
 		lame		=> [ 0, "lame=s", 'External Program', '--lame <path>', "Location of lame binary"],
 		outputradio	=> [ 1, "outputradio=s", 'Output', '--outputradio <dir>', "Output directory for radio recordings"],
@@@@ -7436,11 +7489,6 @@@@ sub modelist {
 	if ( ! $mlist ) {
 		if ( ! main::exists_in_path('rtmpdump') ) {
 			main::logger "WARNING: Not using flash modes since rtmpdump is not found\n" if $opt->{verbose};
-			if ( ! main::exists_in_path('mplayer') ) {
-				main::logger "WARNING: Not using wma mode since mplayer is not found\n" if $opt->{verbose};
-			} else {
-				$mlist = 'wma';
-			}
 		} else {
 			$mlist = 'default';
 		}
@@@@ -7449,7 +7497,7 @@@@ sub modelist {
 	$mlist = main::expand_list($mlist, 'best', 'default');
 	$mlist = main::expand_list($mlist, 'better', 'default');
 	$mlist = main::expand_list($mlist, 'good', 'default');
-	$mlist = main::expand_list($mlist, 'default', 'flash,wma');
+	$mlist = main::expand_list($mlist, 'default', 'flash');
 	$mlist = main::expand_list($mlist, 'rtmp', 'flash');
 	$mlist = main::expand_list($mlist, 'flash', 'flashaachigh,flashaacstd,flashaudio,flashaaclow');
 	$mlist = main::expand_list($mlist, 'flashaac', 'flashaachigh,flashaacstd,flashaaclow');
@@@@ -7809,7 +7857,7 @@@@ sub channels {
 # Class cmdline Options
 sub opt_format {
 	return {
-		liveradiomode	=> [ 1, "liveradiomode=s", 'Recording', '--liveradiomode <mode>,<mode>,..', "Live Radio recording modes: flashaachigh,flashaacstd,flashaudio,flashaaclow,wma. Shortcuts: default,good,better(=default),best,rtmp,flash,flashaac. ('default'=flashaachigh,flashaacstd,flashaaclow,wma)"],
+		liveradiomode	=> [ 1, "liveradiomode=s", 'Recording', '--liveradiomode <mode>,<mode>,..', "Live Radio recording modes: flashaachigh,flashaacstd,flashaudio,flashaaclow,wma. Shortcuts: default,good,better(=default),best,rtmp,flash,flashaac. ('default'=flashaachigh,flashaacstd,flashaaclow)"],
 		outputliveradio	=> [ 1, "outputliveradio=s", 'Output', '--outputliveradio <dir>', "Output directory for live radio recordings"],
 		rtmpliveradioopts => [ 1, "rtmp-liveradio-opts|rtmpliveradioopts=s", 'Recording', '--rtmp-liveradio-opts <options>', "Add custom options to rtmpdump for liveradio"],
 		ffmpegliveradioopts => [ 1, "ffmpeg-liveradio-opts|ffmpegliveradioopts=s", 'Recording', '--ffmpeg-liveradio-opts <options>', "Add custom options to ffmpeg re-muxing for liveradio"],
@@@@ -7842,11 +7890,6 @@@@ sub modelist {
 	if ( ! $mlist ) {
 		if ( ! main::exists_in_path('rtmpdump') ) {
 			main::logger "WARNING: Not using flash modes since rtmpdump is not found\n" if $opt->{verbose};
-			if ( ! main::exists_in_path('mplayer') ) {
-				main::logger "WARNING: Not using wma mode since mplayer is not found\n" if $opt->{verbose};
-			} else {
-				$mlist = 'wma';
-			}
 		} else {
 			$mlist = 'default';
 		}
@@@@ -7855,7 +7898,7 @@@@ sub modelist {
 	$mlist = main::expand_list($mlist, 'best', 'default');
 	$mlist = main::expand_list($mlist, 'better', 'default');
 	$mlist = main::expand_list($mlist, 'good', 'default');
-	$mlist = main::expand_list($mlist, 'default', 'flash,wma');
+	$mlist = main::expand_list($mlist, 'default', 'flash');
 	$mlist = main::expand_list($mlist, 'rtmp', 'flash');
 	$mlist = main::expand_list($mlist, 'flash', 'flashaachigh,flashaacstd,flashaudio,flashaaclow');
 	$mlist = main::expand_list($mlist, 'flashaac', 'flashaachigh,flashaacstd,flashaaclow');
@@@@ -9578,12 +9621,7 @@@@ sub tags_from_metadata {
 	# composer references iPlayer
 	$tags->{composer} = "BBC iPlayer";
 	# extract genre as first category, use second if first too generic
-	my @@ignore = ("Films", "Sign Zone", "Audio Described", "Northern Ireland", "Scotland", "Wales", "England");
-	my ($genre, $genre2) = split(/\s*,\s*/, $meta->{categories}, 3);
-	if ( $genre && $genre2 && grep(/$genre/i, @@ignore) ) { $genre = $genre2; }
-	# fallback genre
-	$genre ||= "get_iplayer";
-	$tags->{genre} = $genre;
+	$tags->{genre} = $meta->{category};
 	$tags->{comment} = $meta->{descshort};
 	# fix up firstbcast if necessary
 	$tags->{year} = $meta->{firstbcast};
@@@@ -9686,6 +9724,9 @@@@ sub tag_file_id3 {
 		main::logger "INFO: ID3 tagging \U$meta->{ext}\E file\n";
 		# translate podcast flag
 		$tags->{podcastFlag} = "\x01";
+		for ( keys %$tags ) {
+			$tags->{$_} = '' if ! defined $tags->{$_};
+		}
 		# remove existing tag(s) to avoid decoding errors
 		my $mp3 = MP3::Tag->new($meta->{filename});
 		$mp3->get_tags();
@@@@ -9747,7 +9788,7 @@@@ sub tag_file_id3 {
@


1.56
log
@update to get_iplayer 2.83
@
text
@d1 24
a24 4
$OpenBSD: patch-get_iplayer,v 1.55 2013/06/06 21:11:10 sthen Exp $
--- get_iplayer.orig	Sat Jun 22 19:35:27 2013
+++ get_iplayer	Sat Jun 22 23:47:39 2013
@@@@ -318,6 +318,7 @@@@ $opt->{verbose} = 1 if $opt_pre->{verbose};
d32 1
a32 1
@@@@ -358,7 +359,7 @@@@ my $plugin_dir_system;
d41 1
a41 1
@@@@ -771,7 +772,7 @@@@ sub init_search {
d50 1
a50 1
@@@@ -1426,14 +1427,16 @@@@ sub user_agent {
d75 296
a370 1
@@@@ -9747,7 +9750,7 @@@@ sub tag_file_id3 {
@


1.55
log
@update SWF player url for swfVfy.
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.54 2013/05/04 09:24:34 sthen Exp $
--- get_iplayer.orig	Wed Apr 24 10:14:08 2013
+++ get_iplayer	Thu Jun  6 22:10:08 2013
@@@@ -316,6 +316,7 @@@@ $opt->{verbose} = 1 if $opt_pre->{verbose};
d12 7
a18 6
@@@@ -352,7 +353,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
 
 
 # get list of additional user plugins and load plugin
-my $plugin_dir_system = '/usr/share/get_iplayer/plugins';
+my $plugin_dir_system = '${TRUEPREFIX}/share/get_iplayer/plugins';
d21 1
a21 2
 	if ( opendir( DIR, $plugin_dir ) ) {
@@@@ -761,7 +762,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -1417,14 +1418,16 @@@@ sub user_agent {
d55 1
a55 10
@@@@ -5922,7 +5925,7 @@@@ sub get_stream_data_cdn {
 		# Common attributes
 		# swfurl = Default iPlayer swf version
 		my $conn = {
-			swfurl		=> "http://www.bbc.co.uk/emp/revisions/18269_21576_10player.swf?revision=18269_21576",
+			swfurl		=> "http://www.bbc.co.uk/emp/releases/iplayer/revisions/617463_618125_4/617463_618125_4_emp.swf",
 			ext		=> $ext,
 			streamer	=> $streamer,
 			bitrate		=> $mattribs->{bitrate},
@@@@ -9715,7 +9718,7 @@@@ sub tag_file_id3 {
@


1.54
log
@update get_iplayer to a newer snapshot, includes some fixes to the XML files
it optionally outputs
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.53 2013/01/27 22:22:25 sthen Exp $
d3 1
a3 1
+++ get_iplayer	Wed Apr 24 10:16:11 2013
d55 9
@


1.53
log
@update get_iplayer's User-Agent list, the ones it was masquerading as
are so 2009
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.52 2012/12/07 14:56:06 sthen Exp $
--- get_iplayer.orig	Wed Nov 14 19:24:55 2012
+++ get_iplayer	Sun Jan 27 22:08:50 2013
d30 1
a30 1
@@@@ -1416,14 +1417,16 @@@@ sub user_agent {
d55 1
a55 1
@@@@ -9736,7 +9739,7 @@@@ sub tag_file_id3 {
@


1.53.2.1
log
@MFC get_iplayer update; the SWF player URL changed, so the old one now breaks
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.55 2013/06/06 21:11:10 sthen Exp $
--- get_iplayer.orig	Wed Apr 24 10:14:08 2013
+++ get_iplayer	Thu Jun  6 22:10:08 2013
d30 1
a30 1
@@@@ -1417,14 +1418,16 @@@@ sub user_agent {
d55 1
a55 10
@@@@ -5922,7 +5925,7 @@@@ sub get_stream_data_cdn {
 		# Common attributes
 		# swfurl = Default iPlayer swf version
 		my $conn = {
-			swfurl		=> "http://www.bbc.co.uk/emp/revisions/18269_21576_10player.swf?revision=18269_21576",
+			swfurl		=> "http://www.bbc.co.uk/emp/releases/iplayer/revisions/617463_618125_4/617463_618125_4_emp.swf",
 			ext		=> $ext,
 			streamer	=> $streamer,
 			bitrate		=> $mattribs->{bitrate},
@@@@ -9715,7 +9718,7 @@@@ sub tag_file_id3 {
@


1.52
log
@update to newer get_iplayer snapshot, supports multiple default versions
of one programme (e.g. short and longer versions of Sky at Night).
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.51 2012/10/18 12:27:51 sthen Exp $
d3 1
a3 1
+++ get_iplayer	Fri Dec  7 14:51:28 2012
d30 26
a55 1
@@@@ -9736,7 +9737,7 @@@@ sub tag_file_id3 {
@


1.51
log
@update get_iplayer to a more recent snapshot
@
text
@d1 4
a4 4
$OpenBSD$
--- get_iplayer.orig	Thu Oct 18 12:38:15 2012
+++ get_iplayer	Thu Oct 18 12:39:33 2012
@@@@ -312,6 +312,7 @@@@ $opt->{verbose} = 1 if $opt_pre->{verbose};
d12 1
a12 1
@@@@ -348,7 +349,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d21 1
a21 1
@@@@ -757,7 +758,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -9669,7 +9670,7 @@@@ sub tag_file_id3 {
@


1.50
log
@add a few patches from get_iplayer git repo

- hh:mm:ss format for --start/stop
- add --no-artwork option
- fix live streaming broken by live rewind
@
text
@d1 4
a4 23
$OpenBSD: patch-get_iplayer,v 1.49 2012/06/28 15:40:25 sthen Exp $
--- get_iplayer.orig	Thu Aug  9 00:12:51 2012
+++ get_iplayer	Thu Aug  9 00:12:46 2012
@@@@ -130,8 +130,8 @@@@ my $opt_format = {
 	pidrecursive	=> [ 1, "pidrecursive|pid-recursive!", 'Recording', '--pid-recursive', "When used with --pid record all the embedded pids if the pid is a series or brand pid."],
 	proxy		=> [ 0, "proxy|p=s", 'Recording', '--proxy, -p <url>', "Web proxy URL e.g. 'http://USERNAME:PASSWORD\@@SERVER:PORT' or 'http://SERVER:PORT'"],
 	raw		=> [ 0, "raw!", 'Recording', '--raw', "Don't transcode or change the recording/stream in any way (i.e. radio/realaudio, rtmp/flv)"],
-	start		=> [ 1, "start=s", 'Recording', '--start <secs>', "Recording/streaming start offset (rtmp and realaudio only)"],
-	stop		=> [ 1, "stop=s", 'Recording', '--stop <secs>', "Recording/streaming stop offset (can be used to limit live rtmp recording length) rtmp and realaudio only"],
+	start		=> [ 1, "start=s", 'Recording', '--start <secs|hh:mm:ss>', "Recording/streaming start offset (rtmp and realaudio only)"],
+	stop		=> [ 1, "stop=s", 'Recording', '--stop <secs|hh:mm:ss>', "Recording/streaming stop offset (can be used to limit live rtmp recording length) rtmp and realaudio only"],
 	suboffset	=> [ 1, "suboffset=n", 'Recording', '--suboffset <offset>', "Offset the subtitle timestamps by the specified number of milliseconds"],
 	subtitles	=> [ 2, "subtitles|subs!", 'Recording', '--subtitles', "Download subtitles into srt/SubRip format if available and supported"],
 	subsonly	=> [ 1, "subtitlesonly|subsonly|subtitles-only|subs-only!", 'Recording', '--subtitles-only', "Only download the subtitles, not the programme"],
@@@@ -245,6 +245,7 @@@@ my $opt_format = {
 	mplayer		=> [ 1, "mplayer=s", 'External Program', '--mplayer <path>', "Location of mplayer binary"],
 
 	# Tagging
+	noartwork => [ 1, "noartwork|no-artwork!", 'Tagging', '--no-artwork', "Do not embed thumbnail image in output file.  All other metadata values will be written."],
 	notag => [ 1, "notag|no-tag!", 'Tagging', '--no-tag', "Do not tag downloaded programmes"],
 	tag_cnid => [ 1, "tagcnid|tag-cnid!", 'Tagging', '--tag-cnid', "AtomicParsley supports --cnID argument to add catalog ID used for combining HD and SD versions in iTunes"],
 	tag_fulltitle => [ 1, "tagfulltitle|tag-fulltitle!", 'Tagging', '--tag-fulltitle', "Use complete title (including series) instead of shorter episode title"],
@@@@ -311,6 +312,7 @@@@ $opt->{verbose} = 1 if $opt_pre->{verbose};
d12 1
a12 1
@@@@ -347,7 +349,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d21 1
a21 15
@@@@ -534,6 +536,13 @@@@ if ( $opt->{webrequest} ) {
 	delete $opt_cmdline->{webrequest};
 }
 
+# process --start and --stop if necessary
+foreach ('start', 'stop') {
+	if ($opt->{$_} && $opt->{$_} =~ /(\d\d):(\d\d)(:(\d\d))?/) {
+		$opt->{$_} = $1 * 3600 +  $2 * 60 + $4;
+	}
+}
+
 # Add --search option to @@search_args if specified
 if ( defined $opt->{search} ) {
 	push @@search_args, $opt->{search};
@@@@ -749,7 +758,7 @@@@ sub init_search {
d30 1
a30 67
@@@@ -4309,7 +4318,7 @@@@ sub tag_file {
 	# return if file does not exist
 	return if ! -f $prog->{filename};
 	# download thumbnail if necessary
-	$prog->download_thumbnail if ( ! -f $prog->{thumbfile} );
+	$prog->download_thumbnail if ( ! -f $prog->{thumbfile} && ! $opt->{noartwork} );
 	# create metadata
 	my $meta = $prog->tag_metadata;
 	# tag file
@@@@ -5033,9 +5042,19 @@@@ sub get_verpids {
 		# Live TV
 		if ( m{\s+simulcast="true"} ) {
 			$version = 'default';
-			$verpid = "http://www.bbc.co.uk/emp/simulcast/".$1.".xml" if m{\s+live="true"\s+identifier="(.+?)"};
+			# <item kind="programme" live="true" liverewind="true" identifier="bbc_two_england" group="bbc_two_england" simulcast="true" availability_class="liverewind">
+			$verpid = "http://open.live.bbc.co.uk/mediaselector/5/select/format/xml/version/2.0/vpid/".$2."/mediaset/pc/" if m{\s+live="true"\s+(liverewind="true"\s+)?identifier="(.+?)"};
+			# old media selector URL - above seems to work fine with simulcast tv channels
+			# $verpid = "http://www.bbc.co.uk/emp/simulcast/".$2.".xml" if m{\s+live="true"\s+(liverewind="true"\s+)?identifier="(.+?)"};
 			main::logger "INFO: Using Live TV: $verpid\n" if $opt->{verbose} && $verpid;
 
+		# Live TV - not simulcast
+		} elsif ( m{kind="programme"} && m{\s+live="true"\s} ) {
+			$version = 'default';
+			# <item kind="programme" duration="29400" identifier="p00w33n1" group="p00w2rxx" publisher="pips" live="true" availability_class="liverewind" >
+			$verpid = "http://open.live.bbc.co.uk/mediaselector/5/select/format/xml/version/2.0/vpid/".$2."/mediaset/pc/" if m{\s+live="true"\s+(liverewind="true"\s+)?identifier="(.+?)"};
+			main::logger "INFO: Using Live TV non-simulcast: $verpid\n" if $opt->{verbose} && $verpid;
+
 		# Live/Non-live EMP tv/radio XML URL
 		} elsif ( $prog->{pid} =~ /^http/i && $url =~ /^http.+xml$/ ) {
 			$version = 'default';
@@@@ -5059,7 +5078,7 @@@@ sub get_verpids {
 			main::logger "INFO: Using Live/Non-live EMP tv/radio: $verpid\n" if $opt->{verbose} && $verpid;
 
 		# Live radio
-		} elsif ( m{\s+live="true"\s} ) {
+		} elsif ( m{kind="radioProgramme"} && m{\s+live="true"\s} ) {
 			# Try to get live stream version and verpid
 			# <item kind="radioProgramme" live="true" identifier="bbc_radio_one" group="bbc_radio_one">
 			$verpid = $1 if m{\s+live="true"\s+identifier="(.+?)"};
@@@@ -5846,6 +5865,9 @@@@ sub get_stream_data_cdn {
 			priority	=> $cattribs->{priority},
 		};
 
+		# Allow for connections that have 'supplier' set and not 'kind'
+		$cattribs->{kind} = $cattribs->{supplier} if not defined $cattribs->{kind};
+
 		# Akamai CDN
 		if ( $cattribs->{kind} eq 'akamai' ) {
 			# Set the live flag if this is not an ondemand stream
@@@@ -6078,6 +6100,7 @@@@ sub get_stream_data {
 		push @@medias, $mattribs;
 
 	# Live simulcast verpid: http://www.bbc.co.uk/emp/simulcast/bbc_one_london.xml
+	# Live tv streams: http://open.live.bbc.co.uk/mediaselector/5/select/format/xml/version/2.0/vpid/p00w33n1/mediaset/pc/
 	} elsif ( $verpid =~ /http:/ ) {
 		$xml = main::request_url_retry( $ua, $verpid, 3, undef, undef, 1 );
 		main::logger "\n$xml\n" if $opt->{debug};
@@@@ -9622,7 +9645,7 @@@@ sub tag_file_id3 {
 			$mp3->select_id3v2_frame_by_descr('TGID', $tags->{podcastGUID});
 		}
 		# add artwork if available
-		if ( -f $meta->{thumbfile} ) {
+		if ( -f $meta->{thumbfile}  && ! $opt->{noartwork} ) {
 			my $data;
 			open(THUMB, $meta->{thumbfile});
 			binmode(THUMB);
@@@@ -9646,7 +9669,7 @@@@ sub tag_file_id3 {
a38 9
@@@@ -9767,7 +9790,7 @@@@ sub tag_file_mp4 {
 			);
 		}
 		# add artwork if available
-		push @@cmd, ( '--artwork', $meta->{thumbfile} ) if -f $meta->{thumbfile};
+		push @@cmd, ( '--artwork', $meta->{thumbfile} ) if ( -f $meta->{thumbfile} && ! $opt->{noartwork} );
 		# run atomicparsley command
 		if ( main::run_cmd( 'STDERR', @@cmd ) ) {
 			main::logger "WARNING: Failed to tag \U$meta->{ext}\E file\n";
@


1.49
log
@update to get_iplayer 2.82 and add a patch meant to fix livetv playing.
@
text
@d1 23
a23 4
$OpenBSD: patch-get_iplayer,v 1.48 2011/11/04 22:51:19 sthen Exp $
--- get_iplayer.orig	Sat Jun  2 17:37:17 2012
+++ get_iplayer	Thu Jun 28 16:08:52 2012
@@@@ -311,6 +311,7 @@@@ $opt->{verbose} = 1 if $opt_pre->{verbose};
d31 1
a31 1
@@@@ -347,7 +348,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d40 15
a54 1
@@@@ -749,7 +750,7 @@@@ sub init_search {
d63 67
a129 1
@@@@ -9646,7 +9647,7 @@@@ sub tag_file_id3 {
d138 9
@


1.48
log
@switch swf url again.
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.46 2011/09/05 17:07:29 nigel Exp $
--- get_iplayer.orig	Mon Aug 29 15:09:13 2011
+++ get_iplayer	Wed Aug 31 18:23:50 2011
@@@@ -308,6 +308,7 @@@@ $opt->{verbose} = 1 if $opt_pre->{verbose};
d12 1
a12 1
@@@@ -344,7 +345,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d21 1
a21 1
@@@@ -732,7 +733,7 @@@@ sub init_search {
d30 1
a30 10
@@@@ -2014,7 +2015,7 @@@@ sub update_script {
 		} elsif ( $opt->{packagemanager} =~ /disable/i ) {
 			logger "ERROR: get_iplayer should only be updated using your local package management system, for more information see http://linuxcentre.net/installation\n";
 		} else {
-			logger "ERROR: get_iplayer was installed using '$opt->{packagemanager}' package manager please refer to the update documentation at http://linuxcentre.net/getiplayer/installation/\n";
+			logger "ERROR: Please update get_iplayer using the '$opt->{packagemanager}' package manager\n";
 		}
 		exit 1;
 	} 
@@@@ -9543,7 +9544,7 @@@@ sub tag_file_id3 {
@


1.47
log
@Pass a newer swf url to rtmpdump, BBC updated things.
@
text
@d3 1
a3 1
+++ get_iplayer	Thu Oct 27 22:10:02 2011
a38 9
@@@@ -5786,7 +5787,7 @@@@ sub get_stream_data_cdn {
 		# Common attributes
 		# swfurl = Default iPlayer swf version
 		my $conn = {
-			swfurl		=> "http://www.bbc.co.uk/emp/revisions/18269_21576_10player.swf?revision=18269_21576",
+			swfurl		=> "http://www.bbc.co.uk/emp/iplayer/revisions/617463_618125_2/617463_618125_2_emp.swf",
 			ext		=> $ext,
 			streamer	=> $streamer,
 			bitrate		=> $mattribs->{bitrate},
@


1.46
log
@update to version 2.80

ok sthen@@ (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.45 2011/05/28 20:42:17 sthen Exp $
d3 1
a3 1
+++ get_iplayer	Wed Aug 31 18:23:50 2011
d39 9
@


1.45
log
@Move get_iplayer to a self-packaged tarball from git upstream, fixes include:
- ensure correct file extension is used if certain modes fail
- convert AAC radio recordings to m4a format with metadata tags
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.44 2011/04/20 23:07:24 sthen Exp $
--- get_iplayer.orig	Sat May 28 21:00:47 2011
+++ get_iplayer	Sat May 28 21:04:09 2011
@@@@ -296,6 +296,7 @@@@ $opt->{verbose} = 1 if $opt_pre->{verbose};
d12 1
a12 1
@@@@ -332,7 +333,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d21 1
a21 1
@@@@ -660,7 +661,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -1988,7 +1989,7 @@@@ sub update_script {
d39 9
a47 9
@@@@ -4254,7 +4255,7 @@@@ sub tag_file {
 		my ( $id3_name, $id3_episode, $id3_desc, $id3_channel ) = ( $prog->{name}, $prog->{episode}, $prog->{desc}, $prog->{channel} );
 		s|"|\\"|g for ($id3_name, $id3_episode, $id3_desc, $id3_channel);
 		# Only tag if the required tool exists
-		if ( main::exists_in_path('id3v2') ) {
+		if ( main::exists_in_path('id3tag') ) {
 			main::logger "INFO: id3 tagging $prog->{ext} file\n";
 			my @@cmd = (
 				$bin->{id3v2}, 
@


1.44
log
@"Radio 7" became "Radio 4 extra". from upstream via Nigel Taylor, thanks!
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.43 2011/04/19 16:39:47 sthen Exp $
--- get_iplayer.orig	Sun Jan  9 16:13:43 2011
+++ get_iplayer	Wed Apr 20 13:04:32 2011
@@@@ -295,6 +295,7 @@@@ $opt->{verbose} = 1 if $opt_pre->{verbose};
d12 1
a12 1
@@@@ -331,7 +332,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d21 1
a21 1
@@@@ -659,7 +660,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -1987,7 +1988,7 @@@@ sub update_script {
d39 1
a39 1
@@@@ -4253,7 +4254,7 @@@@ sub tag_file {
a47 33
@@@@ -5823,7 +5824,7 @@@@ sub get_stream_data_cdn {
 		# Common attributes
 		# swfurl = Default iPlayer swf version
 		my $conn = {
-			swfurl		=> "http://www.bbc.co.uk/emp/10player.swf?revision=18269_21576",
+			swfurl		=> "http://www.bbc.co.uk/emp/revisions/18269_21576_10player.swf?revision=18269_21576",
 			ext		=> $ext,
 			streamer	=> $streamer,
 			bitrate		=> $mattribs->{bitrate},
@@@@ -7086,6 +7087,7 @@@@ sub channels {
 		'bbc_radio_two'				=> 'BBC Radio 2',
 		'bbc_radio_three'			=> 'BBC Radio 3',
 		'bbc_radio_four'			=> 'BBC Radio 4',
+		'bbc_radio_four_extra'			=> 'BBC Radio 4 Extra',
 		'bbc_radio_five_live'			=> 'BBC Radio 5 live',
 		'bbc_radio_five_live_sports_extra'	=> 'BBC 5 live Sports Extra',
 		'bbc_6music'				=> 'BBC 6 Music',
@@@@ -7156,6 +7158,7 @@@@ sub channels_schedule {
 		'radio3/programmes/schedules'		=> 'BBC Radio 3',
 		'radio4/programmes/schedules/fm'	=> 'BBC Radio 4 FM',
 		'radio4/programmes/schedules/lw'	=> 'BBC Radio 4 LW',
+		'radio4extra/programmes/schedules'	=> 'BBC Radio 4 Extra',
 		'5live/programmes/schedules'		=> 'BBC Radio 5 live',
 		'5livesportsextra/programmes/schedules'	=> 'BBC 5 live Sports Extra',
 		'6music/programmes/schedules'		=> 'BBC 6 Music',
@@@@ -7565,6 +7568,7 @@@@ sub channels {
 		'bbc_radio_three'			=> 'BBC Radio 3',
 		'bbc_radio_fourfm'			=> 'BBC Radio 4 FM',
 		'bbc_radio_fourlw'			=> 'BBC Radio 4 LW',
+		'bbc_radio_four_extra'			=> 'BBC Radio 4 Extra',
 		'bbc_radio_five_live'			=> 'BBC Radio 5 live',
 		'bbc_radio_five_live_sports_extra'	=> 'BBC 5 live Sports Extra',
 		'bbc_6music'				=> 'BBC 6 Music',
@


1.43
log
@switch to a new url to the swf file passed to rtmpdump
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.42 2011/01/09 17:31:58 sthen Exp $
d3 1
a3 1
+++ get_iplayer	Tue Apr 19 17:33:53 2011
d57 24
@


1.42
log
@update to 2.79
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.41 2010/10/18 13:52:30 sthen Exp $
d3 1
a3 1
+++ get_iplayer	Sun Jan  9 17:29:21 2011
d48 9
@


1.41
log
@Update to newer swf player url.
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.40 2010/09/27 20:20:36 sthen Exp $
--- get_iplayer.orig	Fri May 28 15:24:50 2010
+++ get_iplayer	Mon Oct 18 12:58:35 2010
@@@@ -294,6 +294,7 @@@@ $opt->{verbose} = 1 if $opt_pre->{verbose};
d12 1
a12 1
@@@@ -330,7 +331,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d21 1
a21 1
@@@@ -658,7 +659,7 @@@@ sub init_search {
d30 1
a30 1
@@@@ -1986,7 +1987,7 @@@@ sub update_script {
d39 1
a39 1
@@@@ -4251,7 +4252,7 @@@@ sub tag_file {
a47 168
@@@@ -5557,7 +5558,7 @@@@ sub parse_rdf_episode {
 	# We don't really need the ver pids from here
 	if ( ref$rdf->{'po:Episode'}->{'po:version'} eq 'ARRAY' ) {
 		for my $verpid_element ( @@{ $rdf->{'po:Episode'}->{'po:version'} } ) {
-			main::logger "INFO:        With Version PID '".extract_pid( %{ $verpid_element }->{'rdf:resource'} )."'\n" if $opt->{debug};
+			main::logger "INFO:        With Version PID '".extract_pid( $verpid_element->{'rdf:resource'} )."'\n" if $opt->{debug};
 		}
 	} else {
 		main::logger "INFO:        With Version PID '".extract_pid( $rdf->{'po:Episode'}->{'po:version'}->{'rdf:resource'} )."'\n" if $opt->{debug};
@@@@ -5581,8 +5582,8 @@@@ sub parse_rdf_series {
 	main::logger "INFO:    Series: '".$rdf->{'po:Series'}->{'dc:title'}."' ($spid)\n";
 	main::logger "INFO:      From Brand PID '".$rdf->{'po:Brand'}->{'rdf:about'}."'\n" if $opt->{debug};
 	for my $episode_element ( @@{ $rdf->{'po:Series'}->{'po:episode'} } ) {
-		my $pid = extract_pid( %{ $episode_element }->{'po:Episode'}->{'rdf:about'} );
-		main::logger "INFO:      Episode '".%{ $episode_element }->{'po:Episode'}->{'dc:title'}."' ($pid)\n";
+		my $pid = extract_pid( $episode_element->{'po:Episode'}->{'rdf:about'} );
+		main::logger "INFO:      Episode '".$episode_element->{'po:Episode'}->{'dc:title'}."' ($pid)\n";
 		push @@pids, $pid;
 		#parse_rdf_episode( $ua, $pid );
 	}
@@@@ -5603,14 +5604,14 @@@@ sub parse_rdf_brand {
 	my $bpid = extract_pid( $uri );
 	main::logger "INFO:  Brand: '".$rdf->{'po:Brand'}->{'dc:title'}."' ($bpid)\n";
 	for my $series_element ( @@{ $rdf->{'po:Brand'}->{'po:series'} } ) {
-		main::logger "INFO: With Series pid '".%{ $series_element }->{'rdf:resource'}."'\n" if $opt->{debug};
-		push @@pids, parse_rdf_series( $ua, %{ $series_element }->{'rdf:resource'} );
+		main::logger "INFO: With Series pid '".$series_element->{'rdf:resource'}."'\n" if $opt->{debug};
+		push @@pids, parse_rdf_series( $ua, $series_element->{'rdf:resource'} );
 	}
 	main::logger "INFO:    Series: <None>\n" if $#{ $rdf->{'po:Brand'}->{'po:episode'} };
 	for my $episode_element ( @@{ $rdf->{'po:Brand'}->{'po:episode'} } ) {
-		main::logger "INFO:      Episode pid: ".%{ $episode_element }->{'rdf:resource'}."\n" if $opt->{debug};
-		push @@pids, extract_pid( %{ $episode_element }->{'rdf:resource'} );
-		parse_rdf_episode( $ua, %{ $episode_element }->{'rdf:resource'} );
+		main::logger "INFO:      Episode pid: ".$episode_element->{'rdf:resource'}."\n" if $opt->{debug};
+		push @@pids, extract_pid( $episode_element->{'rdf:resource'} );
+		parse_rdf_episode( $ua, $episode_element->{'rdf:resource'} );
 	}
 	return @@pids;
 }
@@@@ -5798,6 +5799,7 @@@@ sub get_stream_data_cdn {
 	#	$data->{$mode}->{bitrate} = 480; # ??
 
 	my $count = 1;
+	my $count_rtsp = 1;
 	for my $cattribs ( @@{ $mattribs->{connections} } ) {
 
 		# Get authstring from more specific mediaselector if this mode is specified - fails sometimes otherwise
@@@@ -5820,7 +5822,7 @@@@ sub get_stream_data_cdn {
 		# Common attributes
 		# swfurl = Default iPlayer swf version
 		my $conn = {
-			swfurl		=> "http://www.bbc.co.uk/emp/10player.swf?revision=18269_19216",
+			swfurl		=> "http://www.bbc.co.uk/emp/10player.swf?revision=18269_21576",
 			ext		=> $ext,
 			streamer	=> $streamer,
 			bitrate		=> $mattribs->{bitrate},
@@@@ -5860,7 +5862,7 @@@@ sub get_stream_data_cdn {
 
 				if ( $cattribs->{authString} !~ /&slist=/ ) {
 					$cattribs->{identifier} =~ s/^mp[34]://;
-					$cattribs->{authString} .= "&slist=&cattribs->{identifier}";
+					$cattribs->{authString} .= "&slist=$cattribs->{identifier}";
 				}
 
 				### ??? live and Live TV, Live EMP Video or Non-public EMP video:
@@@@ -5932,6 +5934,40 @@@@ sub get_stream_data_cdn {
 		# Add to data structure
 		$data->{$mode.$count} = $conn;
 		$count++;
+
+		# synthesized rtsp modes
+		if ( $mode =~ /^flash/ && ! $conn->{live} ) {
+			my $flashmode = $mode.$count_rtsp;
+			my $rtspmode = $flashmode;
+			$rtspmode =~ s/^flash/rtsp/g;
+			$data->{$rtspmode}->{bitrate} = $data->{$flashmode}->{bitrate};
+			$data->{$rtspmode}->{encoding} = $data->{$flashmode}->{encoding};
+			$data->{$rtspmode}->{type} = $data->{$flashmode}->{type};
+			$data->{$rtspmode}->{type} =~ s/streaming_/streaming_rtsp_/g;
+			$data->{$rtspmode}->{identifier} =  $data->{$flashmode}->{identifier};
+			# Audio
+			if ($mode =~ /(audio|aac)/) {
+				$data->{$rtspmode}->{identifier} =~ s|^mp[34]:secure/(\w+?)/(.+$)|$1/secure_auth/$2|;
+			# Video
+			} else {
+				# convert from akamai format
+				$data->{$rtspmode}->{identifier} =~ s|^mp[34]:secure/(\w+?/.+$)|iplayerstream/secure_auth/$1|;
+				# convert from level3
+				$data->{$rtspmode}->{identifier} =~ s|^mp[34]:(\d{3,4}\w+?/.+$)|iplayerstream/secure_auth/$1|;
+			}
+			$data->{$rtspmode}->{identifier} =~ s/^mp[34]://;
+			$data->{$rtspmode}->{ext} = $data->{$flashmode}->{identifier};
+			$data->{$rtspmode}->{ext} =~ s/^(mp[34]):.*$/$1/g;
+			# use .aac ext for audio mp4
+			$data->{$rtspmode}->{ext} = 'aac' if $data->{$rtspmode}->{ext} eq 'mp4' && $mode =~ /(audio|aac)/;
+			$data->{$rtspmode}->{streamurl} = "rtsp://3gp-acl.bbc.net.uk:554/".$data->{$rtspmode}->{identifier};
+			$data->{$rtspmode}->{streamurl} .= '.'.$data->{$rtspmode}->{ext} if $data->{$rtspmode}->{streamurl} !~ m{\.mp[34]$};
+			# Mplayer fails fo some reason - use vlc for now
+			# $data->{$rtspmode}->{streamer} = 'rtsp';
+			$data->{$rtspmode}->{streamer} = '3gp';
+			get_stream_set_type( $data->{$rtspmode} ) if ! $data->{$rtspmode}->{type};
+			$count_rtsp++;
+		}
 	}
 
 	# Add to data structure hased by priority
@@@@ -6026,6 +6062,11 @@@@ sub get_stream_data {
 	} elsif ( $verpid =~ /http:/ ) {
 		$xml = main::request_url_retry( $ua, $verpid, 3, undef, undef, 1 );
 		main::logger "\n$xml\n" if $opt->{debug};
+		if  ( $xml =~ m{<mediator identifier=\"(.+?)\"} ) {
+		    $verpid = $media_stream_data_prefix.$1;
+		    main::logger "new verpid $verpid" if $opt->{debug};
+		    $xml = main::request_url_retry( $ua, $verpid, 3, undef, undef, 1 );
+		}
 		@@medias = parse_metadata( $xml );
 
 	# Could also use Javascript based one: 'http://www.bbc.co.uk/iplayer/mediaselector/4/js/stream/$verpid?cb=NNNNN
@@@@ -6192,48 +6233,6 @@@@ sub get_stream_data {
 		} else {
 			new_stream_report($mattribs, undef) if $opt->{verbose};
 		}	
-	}
-
-	# if flashaaclow exists then rtspaaclow one usually does also.
-	if ( $data->{'flashaaclow1'} && $prog->{type} eq 'radio' ) {
-		my $mode = 'rtspaaclow1';
-		$data->{$mode}->{bitrate} = $data->{'flashaaclow1'}->{bitrate};
-		$data->{$mode}->{encoding} = $data->{'flashaaclow1'}->{encoding};
-		$data->{$mode}->{type} = "(iplayer_stream_aac_rtsp_lo) rtsp aac ".( $data->{$mode}->{bitrate} || '48' )."kbps stream";
-		$data->{$mode}->{identifier} =  $data->{'flashaaclow1'}->{identifier};
-		$data->{$mode}->{identifier} =~ s/^mp[34]://;
-		$data->{$mode}->{streamurl} = "rtsp://3gp-acl.bbc.net.uk:554/".$data->{$mode}->{identifier}.".mp4";
-		$data->{$mode}->{streamer} = 'rtsp';
-		$data->{$mode}->{ext} = 'aac';
-		get_stream_set_type( $data->{$mode} ) if ! $data->{$mode}->{type};
-	}
-
-	# if flashaacstd exists then rtspaacstd one usually does also.
-	if ( $data->{'flashaacstd1'} && $prog->{type} eq 'radio' ) {
-		my $mode = 'rtspaacstd1';
-		$data->{$mode}->{bitrate} = $data->{'flashaacstd1'}->{bitrate};
-		$data->{$mode}->{encoding} = $data->{'flashaacstd1'}->{encoding};
-		$data->{$mode}->{type} = "(iplayer_stream_aac_rtsp_med) rtsp aac ".( $data->{$mode}->{bitrate} || '128' )."kbps stream";
-		$data->{$mode}->{identifier} =  $data->{'flashaacstd1'}->{identifier};
-		$data->{$mode}->{identifier} =~ s/^mp[34]://;
-		$data->{$mode}->{streamurl} = "rtsp://3gp-acl.bbc.net.uk:554/".$data->{$mode}->{identifier}.".mp4";
-		$data->{$mode}->{streamer} = 'rtsp';
-		$data->{$mode}->{ext} = 'aac';
-		get_stream_set_type( $data->{$mode} ) if ! $data->{$mode}->{type};
-	}
-
-	# if flashaudio exists then rtspaudio one usually does also.
-	if ( $data->{'flashaudio1'} && $prog->{type} eq 'radio' ) {
-		my $mode = 'rtspaudio1';
-		$data->{$mode}->{bitrate} = $data->{'flashaudio1'}->{bitrate};
-		$data->{$mode}->{encoding} = $data->{'flashaudio1'}->{encoding};
-		$data->{$mode}->{type} = "(iplayer_stream_mp3_rtsp_med) rtsp mp3 ".( $data->{$mode}->{bitrate} || '128' )."kbps stream";
-		$data->{$mode}->{identifier} =  $data->{'flashaudio1'}->{identifier};
-		$data->{$mode}->{identifier} =~ s|^mp[34]:secure/(\w+?)/(.+$)|$1/secure_auth/$2|;
-		$data->{$mode}->{streamurl} = "rtsp://3gp-acl.bbc.net.uk:554/".$data->{$mode}->{identifier}.".mp3";
-		$data->{$mode}->{streamer} = 'rtsp';
-		$data->{$mode}->{ext} = 'mp3';
-		get_stream_set_type( $data->{$mode} ) if ! $data->{$mode}->{type};
 	}
 
 	# Do iphone redirect check regardless of an xml entry for iphone (except for EMP/Live) - sometimes the iphone streams exist regardless
@


1.40
log
@- add a fix for live streaming from upstream
- fix perl 5.12 warnings
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.39 2010/06/04 23:04:32 sthen Exp $
d3 1
a3 1
+++ get_iplayer	Mon Sep 27 21:15:02 2010
d96 9
@


1.39
log
@fix rtsp modes, from upstream repo.
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.38 2010/06/01 15:05:39 sthen Exp $
--- get_iplayer.orig	Sat Jun  5 00:01:57 2010
+++ get_iplayer	Sat Jun  5 00:01:54 2010
d48 40
d146 13
a158 1
@@@@ -6192,48 +6228,6 @@@@ sub get_stream_data {
@


1.38
log
@Fix typo in slist= generation for akamai. From upstream repo.
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.37 2010/05/28 15:46:02 sthen Exp $
--- get_iplayer.orig	Fri May 28 15:24:50 2010
+++ get_iplayer	Tue Jun  1 16:03:59 2010
d48 9
a56 1
@@@@ -5860,7 +5861,7 @@@@ sub get_stream_data_cdn {
d65 90
@


1.37
log
@update to 2.78, and roll RUN_DEPENDS into BUILD_DEPENDS to avoid the
bad idiom of RUN_DEPENDS=${BUILD_DEPENDS}.
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.36 2010/05/27 23:33:45 sthen Exp $
d3 1
a3 1
+++ get_iplayer	Fri May 28 16:43:57 2010
d48 9
@


1.36
log
@- add the manpage back in (generated from the script itself, so a
couple of RUN_DEPENDS move to BUILD_DEPENDS).

- cherrypick a couple of diffs from git (notably, automatically add
the correct swfVfy url to rtmpdump; if you've set this manually in
/etc/get_iplayer/options you can remove it).

- improve COMMENT, update HOMEPAGE.
@
text
@d1 12
a12 4
$OpenBSD: patch-get_iplayer,v 1.35 2010/05/26 20:24:23 sthen Exp $
--- get_iplayer.orig	Wed May 26 14:19:02 2010
+++ get_iplayer	Fri May 28 00:00:23 2010
@@@@ -327,7 +327,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d21 1
a21 1
@@@@ -645,12 +645,13 @@@@ sub init_search {
d30 10
a39 8
 
-	$bin->{flvstreamer}	= $opt->{flvstreamer} || 'flvstreamer';
+	$bin->{flvstreamer}	= $opt->{flvstreamer} || 'rtmpdump';
+
 	delete $binopts->{flvstreamer};
 	push @@{ $binopts->{flvstreamer} }, ( '--timeout', 10 );
 	push @@{ $binopts->{flvstreamer}	}, '--quiet' if $opt->{quiet};
@@@@ -4063,7 +4064,7 @@@@ sub tag_file {
a47 130
@@@@ -5611,10 +5612,28 @@@@ sub get_stream_data_cdn {
 
 	my $count = 1;
 	for my $cattribs ( @@{ $mattribs->{connections} } ) {
+
+		# Get authstring from more specific mediaselector if this mode is specified - fails sometimes otherwise
+		if ( $cattribs->{authString} && $cattribs->{kind} =~ /^(limelight|akamai|level3|sis|iplayertok)$/ && (grep /^$mode$/, (split /,/, $mattribs->{modelist})) ) {
+			# Build URL
+			my $media_stream_data_prefix = 'http://www.bbc.co.uk/mediaselector/4/mtis/stream/';
+			my $url = $media_stream_data_prefix."$mattribs->{verpid}/$mattribs->{service}/$cattribs->{kind}?cb=".( sprintf "%05.0f", 99999*rand(0) );
+			my $xml = main::request_url_retry( main::create_ua( 'desktop' ), $url, 3, undef, undef, 1 );
+			main::logger "\n$xml\n" if $opt->{debug};
+			# get new set of connection attributes from the new xml data
+			my $new_mattribs = (parse_metadata( $xml ))[0];
+			my $new_cattribs = $new_mattribs->{connections}[0];
+			# Override elemnts from more specific connection attribs if present
+			for my $element ( keys %{ $new_cattribs } ) {
+				$cattribs->{$element} = $new_cattribs->{$element} if $new_cattribs->{$element};
+			}
+		}
+		decode_entities($cattribs->{authString});
+
 		# Common attributes
 		# swfurl = Default iPlayer swf version
 		my $conn = {
-			swfurl		=> "http://www.bbc.co.uk/emp/10player.swf?revision=15501_15796",
+			swfurl		=> "http://www.bbc.co.uk/emp/10player.swf?revision=18269_19216",
 			ext		=> $ext,
 			streamer	=> $streamer,
 			bitrate		=> $mattribs->{bitrate},
@@@@ -5643,24 +5662,29 @@@@ sub get_stream_data_cdn {
 				$conn->{authstring} = $cattribs->{authString};
 			}
 
+			$conn->{playpath} = $cattribs->{identifier};
+			$conn->{streamurl} = "rtmp://$cattribs->{server}:1935/$cattribs->{application}?_fcs_vhost=$cattribs->{server}&undefined";
+			$conn->{application} = "$cattribs->{application}?_fcs_vhost=$cattribs->{server}&undefined";
+
 			if ( $cattribs->{authString} ) {
+				if ( $cattribs->{authString} !~ /&aifp=/ ) {
+					$cattribs->{authString} .= '&aifp=v001';
+				}
+
+				if ( $cattribs->{authString} !~ /&slist=/ ) {
+					$cattribs->{identifier} =~ s/^mp[34]://;
+					$cattribs->{authString} .= '&slist=&cattribs->{identifier}';
+				}
+
 				### ??? live and Live TV, Live EMP Video or Non-public EMP video:
-				$conn->{playpath} = "$cattribs->{identifier}?$cattribs->{authString}&aifp=v001";
+				$conn->{playpath} .= "?$cattribs->{authString}";
+				$conn->{streamurl} .= "&$cattribs->{authString}";
+				$conn->{application} .= "&$cattribs->{authString}";
 			} else {
-				$conn->{playpath} = $cattribs->{identifier};
+				$conn->{streamurl} .= "&undefined";
+				$conn->{application} .= "&undefined";
 			}
-			if ( $cattribs->{authString} ) {
-				$conn->{streamurl} = "rtmp://$cattribs->{server}:1935/$cattribs->{application}?_fcs_vhost=$cattribs->{server}&auth=$cattribs->{authString}&aifp=v001&slist=$cattribs->{identifier}";
-			} else {
-				$conn->{streamurl} = "rtmp://$cattribs->{server}:1935/$cattribs->{application}?_fcs_vhost=$cattribs->{server}&undefined";
-			}
-			# Remove offending mp3/mp4: at the start of the identifier (don't remove in stream url)
-			$cattribs->{identifier} =~ s/^mp[34]://;
-			if ( $cattribs->{authString} ) {
-				$conn->{application} = "$cattribs->{application}?_fcs_vhost=$cattribs->{server}&$cattribs->{authString}&aifp=v001&slist=$cattribs->{identifier}";
-			} else {
-				$conn->{application} = "$cattribs->{application}?_fcs_vhost=$cattribs->{server}&undefined";
-			}
+
 			# Port 1935? for live?
 			$conn->{tcurl} = "rtmp://$cattribs->{server}:80/$conn->{application}";
 
@@@@ -5828,6 +5852,10 @@@@ sub get_stream_data {
 	my $mode;
 	for my $mattribs ( @@medias ) {
 		
+		# Put verpid into mattribs
+		$mattribs->{verpid} = $verpid;
+		$mattribs->{modelist} = $prog->modelist;
+
 		# New iphone stream
 		if ( $mattribs->{service} eq 'iplayer_streaming_http_mp4' ) {
 			# Fix/remove some audio stream attribs
@@@@ -7944,12 +7972,15 @@@@ sub get {
 	my $playpath 	= $streamdata{playpath};
 	my $port 	= $streamdata{port} || $opt->{rtmpport} || 1935;
 	my $protocol	= $streamdata{protocol} || 0;
+	my $pageurl	= $prog->{player};
 	my $mode	= $prog->{mode};
 	push @@cmdopts, ( split /\s+/, $streamdata{extraopts} ) if $streamdata{extraopts};
 
 	my $file_tmp;
 	my @@cmd;
 	
+	my $swfarg = "--swfUrl";
+
 	if ( $opt->{raw} ) {
 		$file_tmp = $prog->{filepart};
 	} else {
@@@@ -7967,9 +7998,13 @@@@ sub get {
 	}
 
 	# flvstreamer version detection e.g. 'FLVStreamer v1.8a'
-	my $rtmpver;
-	chomp( $rtmpver = (grep /^\w+\s+v?[\.\d]+.*$/i, `"$bin->{flvstreamer}" 2>&1`)[0] );
-	$rtmpver =~ s/^\w+\s+v?([\.\d]+).*$/$1/g;
+	my $rtmpver = `"$bin->{flvstreamer}" --help 2>&1`;
+	if ( $rtmpver =~ /swfVfy/ ) {
+		$swfarg = "--swfVfy";
+	} else {
+		main::logger "WARNING: Your version of flvstreamer/rtmpdump does not support SWF Verification\n";
+	}
+	$rtmpver =~ s/^\w+\s+v?([\.\d]+)(.*\n)*$/$1/g;
 	main::logger "INFO: $bin->{flvstreamer} version $rtmpver\n" if $opt->{verbose};
 	main::logger "INFO: RTMP_URL: $url_2, tcUrl: $tcurl, application: $application, authString: $authstring, swfUrl: $swfurl, file: $prog->{filepart}, file_done: $prog->{filename}\n" if $opt->{verbose};
 
@@@@ -8012,9 +8047,10 @@@@ sub get {
 			'--protocol', $protocol,
 			'--playpath', $playpath,
 			'--host', $server,
-			'--swfUrl', $swfurl,
+			$swfarg, $swfurl,
 			'--tcUrl', $tcurl,
 			'--app', $application,
+			'--pageUrl', $pageurl,
 			@@cmdopts,
 		);
 	# Using just streamurl (i.e. no playpath defined)
@


1.35
log
@Add patches from upstream git repo. Fixes another cdn
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.34 2010/05/26 20:13:06 sthen Exp $
d3 1
a3 1
+++ get_iplayer	Wed May 26 21:23:26 2010
d38 1
a38 1
@@@@ -5611,6 +5612,24 @@@@ sub get_stream_data_cdn {
d63 5
d123 45
@


1.34
log
@update to infradead.org's v2.77, fixes flash streams following CDN changes
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.33 2010/05/01 21:17:25 sthen Exp $
d3 1
a3 1
+++ get_iplayer	Wed May 26 21:08:24 2010
d13 1
a13 1
@@@@ -645,12 +645,12 @@@@ sub init_search {
d25 1
d29 1
a29 1
@@@@ -4063,7 +4063,7 @@@@ sub tag_file {
d38 80
@


1.33
log
@cherrypick a couple of patches from github, including one which fixes iphone mode.
@
text
@d1 4
a4 12
$OpenBSD: patch-get_iplayer,v 1.32 2010/02/26 18:48:06 sthen Exp $

- use id3tag not id3v2
- switch default to rtmpdump
- increase max retries for flash modes, increasing the chance of
getting full downloads if you're not using SWFVerification
(see FILESDIR/options.sample for an example of how to use this).
- various fixes/tidyup from upstream 2.76 and github.com/jjl/get_iplayer

--- get_iplayer.orig	Fri Feb 26 11:59:42 2010
+++ get_iplayer	Sat May  1 22:07:24 2010
@@@@ -330,7 +330,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d13 1
a13 9
@@@@ -452,6 +452,7 @@@@ if ( ! keys %plugin_files ) {
 	$opt->{pluginsupdate} = 1;
 }
 # Update this script if required
+$opt->{packagemanager}='disable';
 update_script() if $opt->{update} || $opt->{pluginsupdate};
 
 
@@@@ -658,12 +659,12 @@@@ sub init_search {
d23 2
a24 2
-	$bin->{flvstreamer}	= $opt->{flvstreamer} || $opt->{rtmpdump} || 'flvstreamer';
+	$bin->{flvstreamer}	= $opt->{flvstreamer} || $opt->{rtmpdump} || 'rtmpdump';
d28 1
a28 72
@@@@ -1152,18 +1153,24 @@@@ sub list_progs {
 			$this->generate_filenames( $ua, $this->file_prefix_format() );
 			# info
 			$this->display_metadata( sort keys %{ $this } ) if $opt->{info};
-			# subs
-			if ( $opt->{subsonly} ) {
-				# skip for non-tv
-				$this->download_subtitles( $ua, "$this->{dir}/$this->{fileprefix}.srt" ) if $this->{type} eq 'tv';
+			# subs (only for tv)
+			if ( $opt->{subsonly} && $this->{type} eq 'tv') {
+				$this->create_dir();
+				$this->download_subtitles( $ua, "$this->{dir}/$this->{fileprefix}.srt" );
 			}
 			# metadata
-			$this->create_metadata_file if $opt->{metadataonly};
+			if ( $opt->{metadataonly} ) {
+				$this->create_dir();
+				$this->create_metadata_file;
+			}
 			# thumbnail
-			$this->download_thumbnail if $opt->{thumbonly} && $this->{thumbnail};
+			if ( $opt->{thumbonly} && $this->{thumbnail} ) {
+				$this->create_dir();
+				$this->download_thumbnail();
+			}
 			# streaminfo
 			if ( $opt->{streaminfo} ) {
-				main::display_stream_info( $this, $this->{verpids}->{$version}, $version );
+				main::display_stream_info( $this, $this->{verpids}->{$this->{version}}, $this->{version} );
 				$opt->{quiet} = 0;
 			}
 			# remove offending metadata
@@@@ -3872,6 +3879,16 @@@@ sub init {
 }
 
 
+# Create dir if it does not exist
+sub create_dir {
+	my $prog = shift;
+	if ( (! -d "$prog->{dir}") && (! $opt->{test}) ) {
+		main::logger "INFO: Creating dir '$prog->{dir}'\n" if $opt->{verbose};
+		mkpath("$prog->{dir}");
+	}
+}
+
+
 # Return metadata of the prog
 sub get_metadata {
 	my $prog = shift;
@@@@ -4182,11 +4199,17 @@@@ sub mode_ver_download_retry_loop {
 					$hist->add( $prog );
 					$prog->tag_file;
 				}
-				$prog->download_thumbnail if $opt->{thumb};
-				$prog->create_metadata_file if $opt->{metadata};
-				if ( ! $opt->{nowrite} ) {
-					$prog->run_user_command( $opt->{command} ) if $opt->{command};
+				if ( $opt->{thumb} ) {
+					$prog->create_dir();
+					$prog->download_thumbnail();
+                                }
+				if ( $opt->{metadata} ) {
+					$prog->create_dir();
+					$prog->create_metadata_file();
 				}
+				if ( $opt->{command} && ! $opt->{nowrite} ) {
+					$prog->run_user_command( $opt->{command});
+				}
 			}
 			$prog->report() if $opt->{pvr};
 			return 0;
@@@@ -4224,7 +4247,7 @@@@ sub tag_file {
a36 135
@@@@ -4592,9 +4615,6 @@@@ sub generate_filenames {
 		main::logger("INFO: Creating multi-part subdirectory $prog->{dir} for programme\n") if $opt->{verbose};
 	}
 
-	# Create dir if it does not exist
-	mkpath("$prog->{dir}") if (! -d "$prog->{dir}") && (! $opt->{test});
-
 	main::logger("\rINFO: File name prefix = $prog->{fileprefix}                 \n");
 
 	# Use a dummy file ext if one isn't set - helps with readability of metadata
@@@@ -4757,11 +4777,13 @@@@ sub create_symlink {
 	my $symlink = shift;
 	my $target = shift;
 
-	# remove old symlink
-	unlink $symlink if -l $symlink;
-	# Create symlink
-	symlink $target, $symlink;
-	main::logger "INFO: Created symlink from '$symlink' -> '$target'\n" if $opt->{verbose};
+	if ( ( ! ( $opt->{stdout} && $opt->{nowrite} ) ) && ( ! $opt->{test} ) ) {
+		# remove old symlink
+		unlink $symlink if -l $symlink;
+		# Create symlink
+		symlink $target, $symlink;
+		main::logger "INFO: Created symlink from '$symlink' -> '$target'\n" if $opt->{verbose};
+	}
 }
 
 
@@@@ -5615,7 +5637,6 @@@@ sub get_rdf_data {
 		main::logger "WARNING: rdf URL contained no data\n";
 		return '';
 	}
-	decode_entities( $entry );
 	# Flatten
 	$entry =~ s|[\n\r]| |g;
 	my $simple = new XML::Simple();
@@@@ -6789,14 +6810,19 @@@@ sub download {
 	# Override flash ext based on raw
 	$prog->{ext} = 'flv' if $opt->{raw} && $mode =~ /^flash/;
 
-
 	# Determine the correct filenames for this recording
 	if ( $prog->generate_filenames( $ua, $prog->file_prefix_format() ) ) {
-		# Create symlink if required
-		$prog->create_symlink( $prog->{symlink}, $prog->{filename}) if $opt->{symlink};
 		return 'skip';
 	}
-	
+
+	# Create symlink if required
+	$prog->create_symlink( $prog->{symlink}, $prog->{filename}) if $opt->{symlink};
+
+	# Create dir for prog if not streaming-only
+	if ( ( ! ( $opt->{stdout} && $opt->{nowrite} ) ) && ( ! $opt->{test} ) ) {
+		$prog->create_dir();
+	}
+
 	# Skip from here if we are only testing recordings
 	return 'skip' if $opt->{test};
 
@@@@ -7703,7 +7729,7 @@@@ sub get {
 	main::logger "INFO: Stage 3 URL = $url_2\n" if $opt->{verbose};
 
 	# Override the $rearrange value is --raw option is specified
-	$rearrange = 1 if $prog->{type} eq 'tv' && not $opt->{raw};
+	#$rearrange = 1 if $prog->{type} eq 'tv' && not $opt->{raw};
 	main::logger "DEBUG: Rearrang mov file mode = $rearrange (type: $prog->{type}, raw: $opt->{raw})\n" if $opt->{debug};
 		
 	# Use url prepend if required
@@@@ -8131,26 +8157,17 @@@@ sub get {
 	main::logger "INFO: $bin->{flvstreamer} version $rtmpver\n" if $opt->{verbose};
 	main::logger "INFO: RTMP_URL: $url_2, tcUrl: $tcurl, application: $application, authString: $authstring, swfUrl: $swfurl, file: $prog->{filepart}, file_done: $prog->{filename}\n" if $opt->{verbose};
 
-	# Save the effort and don't support < v1.5
-	if ( $rtmpver < 1.5 ) {
-		main::logger "WARNING: rtmpdump >= 1.5 or flvstreamer is required - please upgrade\n";
+	# Save the effort and don't support < v1.8
+	if ( $rtmpver < 1.8 ) {
+		main::logger "WARNING: rtmpdump or flvstreamer >= 1.8 is required - please upgrade\n";
 		return 'next';
 	}
 
 	# Add --live option if required
-	if ( $streamdata{live} ) {
-		if ( $rtmpver < 1.8 ) {
-			main::logger "WARNING: Please use flvstreamer v1.8 or later for more reliable live streaming\n";
-		}
-		push @@cmdopts, '--live';
-	}
+	push @@cmdopts, '--live' if $streamdata{live};
 
 	# Add start stop options if defined
 	if ( $opt->{start} || $opt->{stop} ) {
-		if ( $rtmpver < 1.8 ) {
-			main::logger "ERROR: Please use flvstreamer v1.8c or later for start/stop features\n";
-			exit 4;
-		}
 		push @@cmdopts, ( '--start', $opt->{start} ) if $opt->{start};
 		push @@cmdopts, ( '--stop', $opt->{stop} ) if $opt->{stop};
 	}
@@@@ -8166,13 +8183,7 @@@@ sub get {
 		main::logger "ERROR: Cannot stream RTMP to STDOUT and file simultaneously\n";
 		exit 4;
 	}
-	if ( $opt->{stdout} && $opt->{nowrite} ) {
-		if ( $rtmpver < 1.7) {
-			push @@cmdopts, ( '-o', '-' );
-		}
-	} else {
-		push @@cmdopts, ( '--resume', '-o', $file_tmp );
-	}
+	push @@cmdopts, ( '--resume', '-o', $file_tmp ) if ! ( $opt->{stdout} && $opt->{nowrite} );
 	push @@cmdopts, @@{ $binopts->{flvstreamer} } if $binopts->{flvstreamer};
 	
 	my $return;
@@@@ -8993,16 +9004,8 @@@@ sub get {
 
 	# Recording - disabled
 	} else {
-		# Commented out cos this is stream-only - don't want anything in history as a result
-		#main::logger "INFO: Copying $url to $prog->{filepart}\n" if $opt->{verbose};
-		#if ( ! copy( $url, $prog->{filepart} ) ) {
-		#	main::logger "\rERROR: Recording failed\n";
-			main::logger "\rERROR: Recording failed - this is a stream-only programme\n";
-			return 'next';
-		#}
-		#move $prog->{filepart}, $prog->{filename} if $prog->{filepart} ne $prog->{filename};
-		## symlink file
-		#$prog->create_symlink( $prog->{symlink}, $prog->{filename} ) if $opt->{symlink};
+		main::logger "\rERROR: Recording failed - this is a stream-only programme\n";
+		return 'next';
 	}
 
 	return 0;
@


1.32
log
@- update to 2.71, fixes things following some bbc changes
- better DESCR

ok jasper@@
(reminder, ports is not fully open, do not commit without specific permission)
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.31 2010/01/12 12:46:15 sthen Exp $
d8 1
d10 2
a11 2
--- get_iplayer.orig	Thu Feb 25 23:55:19 2010
+++ get_iplayer	Fri Feb 26 10:21:45 2010
d44 72
a115 1
@@@@ -4224,7 +4225,7 @@@@ sub tag_file {
d124 135
@


1.31
log
@update get_iplayer to 2.58
@
text
@d1 11
a11 4
$OpenBSD: patch-get_iplayer,v 1.30 2010/01/08 14:30:30 sthen Exp $
--- get_iplayer.orig	Fri Jan  8 15:15:27 2010
+++ get_iplayer	Sat Jan  9 21:43:05 2010
@@@@ -320,7 +320,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d20 1
a20 1
@@@@ -441,6 +441,7 @@@@ if ( ! keys %plugin_files ) {
d28 1
a28 1
@@@@ -666,7 +667,7 @@@@ sub find_matches {
d37 7
a43 1
@@@@ -3917,7 +3918,7 @@@@ sub tag_file {
@


1.30
log
@update to 2.56;

* Fix flvstreamer/rtmpdump version detection.
* Improved episode name extraction from meta-data to include episode
number where appropriate.
* Added episode and series numbers to caches.
* Added freevo as a metadata format.
* Added --email options to allow for scheduled html search results to be
sent by email (Credit: Stroller).
@
text
@d1 4
a4 8
$OpenBSD: patch-get_iplayer,v 1.29 2010/01/04 11:15:35 sthen Exp $

- default to using id3tag not id3v2
- follow hier(7) not Linux FHS for options file location

--- get_iplayer.orig	Thu Jan  7 15:39:17 2010
+++ get_iplayer	Fri Jan  8 14:25:11 2010
@@@@ -319,7 +319,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d13 1
a13 1
@@@@ -440,6 +440,7 @@@@ if ( ! keys %plugin_files ) {
d21 1
a21 1
@@@@ -665,7 +666,7 @@@@ sub find_matches {
d30 1
a30 1
@@@@ -3909,7 +3910,7 @@@@ sub tag_file {
@


1.29
log
@Update to 2.55, adds --pvrscheduler option to run the PVR at regular
intervals, various other bugfixes/improvements.
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.28 2009/12/31 14:53:33 sthen Exp $
d6 3
a8 3
--- get_iplayer.orig	Sat Jan  2 22:52:09 2010
+++ get_iplayer	Mon Jan  4 11:09:34 2010
@@@@ -316,7 +316,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d17 1
a17 1
@@@@ -437,6 +437,7 @@@@ if ( ! keys %plugin_files ) {
d25 1
a25 1
@@@@ -662,7 +663,7 @@@@ sub find_matches {
d34 1
a34 1
@@@@ -3775,7 +3776,7 @@@@ sub tag_file {
@


1.28
log
@update to 2.53 with various improvements and cleanups
N.B. deprecated options have been removed in this update.
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.27 2009/12/21 21:52:27 sthen Exp $
d6 2
a7 2
--- get_iplayer.orig	Thu Dec 31 13:19:15 2009
+++ get_iplayer	Thu Dec 31 14:33:56 2009
d25 1
a25 1
@@@@ -638,7 +639,7 @@@@ sub find_matches {
d34 1
a34 1
@@@@ -3751,7 +3752,7 @@@@ sub tag_file {
@


1.27
log
@Update to 2.51, fixes url encoding for prepend-type proxies, and fixes a bug
if only iphone mode is specified.
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.26 2009/12/20 22:18:43 sthen Exp $
d6 3
a8 14
--- get_iplayer.orig	Mon Dec 21 09:11:31 2009
+++ get_iplayer	Mon Dec 21 21:46:33 2009
@@@@ -312,17 +312,14 @@@@ if ( defined $ENV{GETIPLAYERUSERPREFS} && $ENV{GETIPLA
 # Options on unix-like systems
 } elsif ( defined $ENV{HOME} ) {
 	$profile_dir = $opt_pre->{profiledir} || $ENV{HOME}.'/.get_iplayer';
-	$optfile_system = '/var/lib/get_iplayer/options';
-	if ( -f '/etc/get_iplayer/options' ) {
-		logger "WARNING: System-wide options in /etc/get_iplayer/options are now ignored, please use /var/lib/get_iplayer/options instead\n";
-	}
+	$optfile_system = '${SYSCONFDIR}/get_iplayer/options';
 }
 # Make profile dir if it doesnt exist
 mkpath $profile_dir if ! -d $profile_dir;
d17 1
a17 1
@@@@ -443,6 +440,7 @@@@ if ( ! keys %plugin_files ) {
d25 1
a25 1
@@@@ -639,7 +637,7 @@@@ sub find_matches {
d34 1
a34 1
@@@@ -3721,7 +3719,7 @@@@ sub tag_file {
a42 9
@@@@ -5415,7 +5413,7 @@@@ sub optional_list_entry_format {
 # Returns the modes to try for this prog type
 sub modelist {
 	my $prog = shift;
-	my $mlist = $opt->{tvmode} || $opt->{modes};
+	my $mlist = $opt->{tvmode} || $opt->{vmode} || $opt->{modes};
 	
 	# Defaults
 	if ( ! $mlist ) {
@


1.26
log
@update to 2.50, fixes iphone mode and world service aac audio following bbc changes.
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.25 2009/11/21 23:15:03 sthen Exp $
d6 2
a7 2
--- get_iplayer.orig	Sun Dec 20 09:45:53 2009
+++ get_iplayer	Sun Dec 20 22:13:20 2009
d54 1
a54 1
@@@@ -5419,7 +5417,7 @@@@ sub optional_list_entry_format {
@


1.25
log
@update to 2.49, also bump flvstreamer RUN_DEPENDS to 1.9 (the new
flvstreamer fixes some problems with Flash Media Server 3.5.x)
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.24 2009/11/14 18:42:35 sthen Exp $
d6 2
a7 2
--- get_iplayer.orig	Wed Nov 18 11:45:52 2009
+++ get_iplayer	Sat Nov 21 23:08:24 2009
d45 1
a45 1
@@@@ -3640,7 +3638,7 @@@@ sub tag_file {
d54 1
a54 1
@@@@ -5360,7 +5358,7 @@@@ sub optional_list_entry_format {
@


1.24
log
@Update to 2.48
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.23 2009/11/09 19:47:42 sthen Exp $
d6 2
a7 2
--- get_iplayer.orig	Tue Nov 10 22:50:09 2009
+++ get_iplayer	Sat Nov 14 18:39:07 2009
d54 1
a54 1
@@@@ -5357,7 +5355,7 @@@@ sub optional_list_entry_format {
@


1.23
log
@update to 2.46
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.22 2009/11/06 14:35:46 sthen Exp $
d6 3
a8 3
--- get_iplayer.orig	Sun Nov  8 14:49:11 2009
+++ get_iplayer	Mon Nov  9 19:47:00 2009
@@@@ -311,17 +311,14 @@@@ if ( defined $ENV{GETIPLAYERUSERPREFS} && $ENV{GETIPLA
d28 1
a28 1
@@@@ -442,6 +439,7 @@@@ if ( ! keys %plugin_files ) {
d36 1
a36 1
@@@@ -638,7 +636,7 @@@@ sub find_matches {
d45 1
a45 1
@@@@ -3638,7 +3636,7 @@@@ sub tag_file {
d54 1
a54 1
@@@@ -5352,7 +5350,7 @@@@ sub optional_list_entry_format {
@


1.22
log
@update to 2.45, fixing a bug which caused iPlayer HD to fail with some CDNs.
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.21 2009/10/25 20:01:12 sthen Exp $
d6 2
a7 2
--- get_iplayer.orig	Fri Nov  6 10:15:08 2009
+++ get_iplayer	Fri Nov  6 14:31:24 2009
d45 1
a45 1
@@@@ -3637,7 +3635,7 @@@@ sub tag_file {
d54 1
a54 1
@@@@ -5330,7 +5328,7 @@@@ sub optional_list_entry_format {
@


1.21
log
@- update to 2.43
- take maintainer
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.20 2009/10/10 10:42:42 sthen Exp $
d6 3
a8 3
--- get_iplayer.orig	Sat Oct 24 18:03:56 2009
+++ get_iplayer	Sun Oct 25 19:52:53 2009
@@@@ -305,10 +305,7 @@@@ if ( defined $ENV{GETIPLAYERUSERPREFS} && $ENV{GETIPLA
d17 3
a19 4
 # Otherwise look for windows style file locations
 } elsif ( defined $ENV{USERPROFILE} ) {
 	$profile_dir = $opt_pre->{profiledir} || $ENV{USERPROFILE}.'/.get_iplayer';
@@@@ -319,7 +316,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d28 1
a28 1
@@@@ -440,6 +437,7 @@@@ if ( ! keys %plugin_files ) {
d36 1
a36 1
@@@@ -636,7 +634,7 @@@@ sub find_matches {
d42 1
a42 1
 	$bin->{AtomicParsley}	= $opt->{AtomicParsley} || 'AtomicParsley';
d45 1
a45 1
@@@@ -3631,7 +3629,7 @@@@ sub tag_file {
d54 1
a54 1
@@@@ -5311,7 +5309,7 @@@@ sub optional_list_entry_format {
@


1.20
log
@minor update to 2.41
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.19 2009/09/27 23:47:15 sthen Exp $
d6 3
a8 3
--- get_iplayer.orig	Fri Oct  2 14:04:23 2009
+++ get_iplayer	Sat Oct 10 12:39:11 2009
@@@@ -304,10 +304,7 @@@@ if ( defined $ENV{GETIPLAYERUSERPREFS} && $ENV{GETIPLA
d20 1
a20 1
@@@@ -318,7 +315,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d29 1
a29 1
@@@@ -439,6 +436,7 @@@@ if ( ! keys %plugin_files ) {
d37 2
a38 2
@@@@ -632,7 +630,7 @@@@ sub find_matches {
 	$bin->{vlc}		= $opt->{vlc} || 'cvlc';
d43 1
d46 10
a55 2
 
@@@@ -5189,7 +5187,7 @@@@ sub optional_list_entry_format {
@


1.19
log
@Bugfix update to 2.40
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.18 2009/09/21 22:30:58 sthen Exp $
d6 2
a7 2
--- get_iplayer.orig	Sat Sep 26 10:14:59 2009
+++ get_iplayer	Mon Sep 28 00:36:57 2009
d46 1
a46 1
@@@@ -5182,7 +5180,7 @@@@ sub optional_list_entry_format {
@


1.18
log
@update to 2.37, list myself as MAINTAINER.
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.17 2009/09/10 17:09:48 sthen Exp $
d6 2
a7 2
--- get_iplayer.orig	Mon Sep 21 17:21:01 2009
+++ get_iplayer	Mon Sep 21 23:29:02 2009
d46 1
a46 1
@@@@ -5180,7 +5178,7 @@@@ sub optional_list_entry_format {
@


1.17
log
@Update to 2.31; various fixes and improvements
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.16 2009/09/05 15:54:25 sthen Exp $
d6 3
a8 3
--- get_iplayer.orig	Wed Sep  9 23:06:57 2009
+++ get_iplayer	Thu Sep 10 18:04:57 2009
@@@@ -298,10 +298,7 @@@@ if ( defined $ENV{GETIPLAYERUSERPREFS} && $ENV{GETIPLA
d20 1
a20 1
@@@@ -312,7 +309,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d29 1
a29 1
@@@@ -431,6 +428,7 @@@@ if ( ! keys %plugin_files ) {
d37 1
a37 1
@@@@ -616,7 +614,7 @@@@ sub find_matches {
d46 1
a46 1
@@@@ -4882,7 +4880,7 @@@@ sub optional_list_entry_format {
@


1.16
log
@Update get_iplayer to 2.26
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.15 2009/08/30 12:58:14 sthen Exp $
d6 3
a8 3
--- get_iplayer.orig	Fri Sep  4 23:57:41 2009
+++ get_iplayer	Sat Sep  5 16:48:56 2009
@@@@ -275,10 +275,7 @@@@ if ( defined $ENV{GETIPLAYERUSERPREFS} && $ENV{GETIPLA
d20 1
a20 1
@@@@ -289,7 +286,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d29 1
a29 1
@@@@ -406,6 +403,7 @@@@ if ( ! keys %plugin_files ) {
d37 1
a37 1
@@@@ -592,7 +590,7 @@@@ sub find_matches {
d39 1
a39 1
 	push @@{ $binopts->{vlc} }, '-vv' if $opt->{verbose} || $opt->{debug};
d46 1
a46 1
@@@@ -4712,7 +4710,7 @@@@ sub optional_list_entry_format {
@


1.15
log
@- update to 2.22; minor bugfixes and improvements.

- set PKG_ARCH=*

- note that upstream moved to Linux FHS /var/lib/get_iplayer/options;
we patch to retain hier(7)-compatible /etc/get_iplayer/options
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.14 2009/08/23 19:16:17 sthen Exp $
d6 2
a7 2
--- get_iplayer.orig	Thu Aug 27 21:54:04 2009
+++ get_iplayer	Sun Aug 30 13:51:29 2009
d37 1
a37 2
@@@@ -587,7 +585,7 @@@@ sub find_matches {
 	$binopts->{lame}	.= ' --quiet ' if $opt->{quiet};
d39 2
a40 1
 	$binopts->{vlc}		= '-vv' if $opt->{verbose} || $opt->{debug};
d43 1
d45 2
a46 3
 	$bin->{flvstreamer}	= $opt->{flvstreamer} || $opt->{rtmpdump} || 'flvstreamer';
 	# quote binaries which allows for spaces in the path
@@@@ -4567,7 +4565,7 @@@@ sub optional_list_entry_format {
@


1.14
log
@update get_iplayer to 2.18
@
text
@d1 20
a20 4
$OpenBSD: patch-get_iplayer,v 1.13 2009/08/17 13:52:20 sthen Exp $
--- get_iplayer.orig	Sat Aug 22 19:14:38 2009
+++ get_iplayer	Sun Aug 23 20:10:35 2009
@@@@ -290,7 +290,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d29 1
a29 1
@@@@ -407,6 +407,7 @@@@ if ( ! keys %plugin_files ) {
d33 1
a33 1
+$opt->{packagemanager}='pkg_add';
d37 1
a37 1
@@@@ -590,7 +591,7 @@@@ sub find_matches {
d46 1
a46 1
@@@@ -4521,7 +4522,7 @@@@ sub optional_list_entry_format {
@


1.13
log
@Update to 2.16; various fixes, adds new flashstd iPlayer
TV mode (480kbps H.264 640x360).
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.12 2009/07/27 08:39:14 sthen Exp $
--- get_iplayer.orig	Sun Aug 16 15:29:01 2009
+++ get_iplayer	Mon Aug 17 14:45:41 2009
@@@@ -289,7 +289,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d13 1
a13 1
@@@@ -406,6 +406,7 @@@@ if ( ! keys %plugin_files ) {
d21 1
a21 1
@@@@ -589,7 +590,7 @@@@ sub find_matches {
d30 1
a30 1
@@@@ -4503,7 +4504,7 @@@@ sub optional_list_entry_format {
@


1.12
log
@update get_iplayer to 2.11
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.11 2009/07/12 19:41:43 sthen Exp $
--- get_iplayer.orig	Fri Jul 24 18:12:13 2009
+++ get_iplayer	Sat Jul 25 23:32:11 2009
@@@@ -288,7 +288,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d13 1
a13 1
@@@@ -405,6 +405,7 @@@@ if ( ! keys %plugin_files ) {
d21 1
a21 1
@@@@ -588,7 +589,7 @@@@ sub find_matches {
d30 1
a30 1
@@@@ -4501,7 +4502,7 @@@@ sub optional_list_entry_format {
@


1.11
log
@update to 2.09; note that "vmode" in /etc/options/get_iplayer should be
changed to "tvmode". (both are ok on the command line).
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.10 2009/06/24 00:02:20 sthen Exp $
--- get_iplayer.orig	Sun Jul 12 10:38:38 2009
+++ get_iplayer	Sun Jul 12 20:38:46 2009
@@@@ -286,7 +286,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d13 1
a13 1
@@@@ -403,6 +403,7 @@@@ if ( ! keys %plugin_files ) {
d21 1
a21 1
@@@@ -586,7 +587,7 @@@@ sub find_matches {
d30 1
a30 1
@@@@ -4490,7 +4491,7 @@@@ sub optional_list_entry_format {
@


1.10
log
@update to 2.03; adds support for BBC World Service live and bulletin AAC
streams from the worldservice page, bumps iPlayer swf version and fixes
some bugs.
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.9 2009/06/19 01:04:50 sthen Exp $
--- get_iplayer.orig	Sat Jun 20 16:42:34 2009
+++ get_iplayer	Wed Jun 24 00:48:07 2009
@@@@ -283,7 +283,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d13 1
a13 1
@@@@ -406,6 +406,7 @@@@ if ( ! keys %plugin_files ) {
d21 1
a21 1
@@@@ -576,9 +577,9 @@@@ sub find_matches {
d28 11
a38 14
-	$bin->{rtmpdump}	= $opt->{rtmpdump} || 'rtmpdump';
+	$bin->{rtmpdump}	= $opt->{rtmpdump} || 'flvstreamer';
 	$binopts->{rtmpdump}	= ' --quiet' if $opt->{quiet};
 	$binopts->{rtmpdump}	= ' --verbose' if $opt->{verbose};
 	$binopts->{rtmpdump}	= ' --debug' if $opt->{debug};
@@@@ -1408,7 +1409,7 @@@@ sub create_ua {
 	my $agent = $user_agent{ "$_[0]" } || random_ua();
 	my $nocookiejar = $_[1] || 0;
 	my $ua = LWP::UserAgent->new;
-	$ua->timeout([$lwp_request_timeout]);
+	$ua->timeout($lwp_request_timeout);
 	$ua->proxy( ['http'] => $opt->{proxy} ) if $opt->{proxy} && $opt->{proxy} !~ /^prepend:/;
 	$ua->agent( $agent );
 	main::logger "DEBUG: Using user-agent '$agent'\n" if $opt->{debug};
@


1.9
log
@update to 2.01; fixes and new features.
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.8 2009/06/14 11:47:45 sthen Exp $
--- get_iplayer.orig	Thu Jun 18 12:02:26 2009
+++ get_iplayer	Fri Jun 19 01:54:57 2009
d30 4
a33 4
 	# Set quiet, test and get options if we're asked for streaminfo
 	if ( $opt->{streaminfo} ) {
 		$opt->{test} 	= 1;
@@@@ -1405,7 +1406,7 @@@@ sub create_ua {
@


1.8
log
@Update to get_iplayer 1.99; adds support for live streams and embedded
media on many BBC web pages. Live streams tested by Pedro la Peu, thanks!
(he was seeing problems with mplayer stuttering about 50% of the time,
but perfect on reconnecting).

Try "get_iplayer --pid tv:<url or channel> --stdout --nowrite" piped
into "mplayer -cache 512 -" or "ffplay -".
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.7 2009/05/25 17:54:01 sthen Exp $
--- get_iplayer.orig	Sat Jun 13 00:46:46 2009
+++ get_iplayer	Sat Jun 13 11:59:13 2009
@@@@ -173,7 +173,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d13 1
a13 1
@@@@ -359,6 +359,7 @@@@ if ( ! keys %plugin_files ) {
d21 1
a21 1
@@@@ -524,9 +525,9 @@@@ sub find_matches {
d33 1
a33 1
@@@@ -1352,7 +1353,7 @@@@ sub create_ua {
@


1.7
log
@- update to 1.90
- add .../archive/ to MASTER_SITES, old files are moved there
- force packagemanager to be set to restrict updates from inside
the software, following conversation with oga@@.
@
text
@d1 4
a4 4
$OpenBSD: patch-get_iplayer,v 1.5 2009/05/13 09:31:44 sthen Exp $
--- get_iplayer.orig	Mon May 25 17:04:40 2009
+++ get_iplayer	Mon May 25 18:50:21 2009
@@@@ -174,7 +174,7 @@@@ mkpath $profile_dir if ! -d $profile_dir;
d13 1
a13 1
@@@@ -360,6 +360,7 @@@@ if ( ! keys %plugin_files ) {
d21 1
a21 1
@@@@ -515,9 +516,9 @@@@ sub find_matches {
d33 2
a34 2
@@@@ -1312,7 +1313,7 @@@@ sub create_ua {
 	my $agent = $user_agent{ $_[0] } || random_ua();
@


1.6
log
@update to 1.88 and switch to flvstreamer from rtmpdump.
@
text
@d2 2
a3 2
--- get_iplayer.orig	Sat May 23 13:35:21 2009
+++ get_iplayer	Mon May 25 01:12:59 2009
d13 9
a21 1
@@@@ -515,9 +515,9 @@@@ sub find_matches {
d33 1
a33 1
@@@@ -1312,7 +1312,7 @@@@ sub create_ua {
@


1.5
log
@update to 1.85; hulu and channel4 were removed, too much work keeping on
top of their changes. (channel4 were apparently showing one episode of
Countdown for every request to people using this....ho ho ho)
@
text
@d1 3
a3 3
$OpenBSD: patch-get_iplayer,v 1.4 2009/05/01 02:09:56 sthen Exp $
--- get_iplayer.orig	Mon May 11 19:29:30 2009
+++ get_iplayer	Wed May 13 10:04:13 2009
d8 4
a11 2
-for my $plugin_dir ( ("$profile_dir/plugins", '/usr/share/get_iplayer/plugins') ) {
+for my $plugin_dir ( ("$profile_dir/plugins", '${TRUEPREFIX}/share/get_iplayer/plugins') ) {
d13 1
a13 3
 		#logger "INFO: Checking for plugins in $plugin_dir\n";
 		my @@plugin_files = grep /^.+\.plugin$/, readdir DIR;
@@@@ -515,7 +515,7 @@@@ sub find_matches {
d20 2
a21 1
 	$bin->{rtmpdump}	= $opt->{rtmpdump} || 'rtmpdump';
d23 3
a25 1
@@@@ -1317,7 +1317,7 @@@@ sub create_ua {
@


1.4
log
@update to 1.72, channel five added
@
text
@d1 24
a24 19
$OpenBSD: patch-get_iplayer,v 1.3 2009/04/29 00:59:07 sthen Exp $

- use id3tag (from audio/id3lib) by default
- workaround requirement for newer p5-libwww

--- get_iplayer.orig	Wed Apr 29 17:31:27 2009
+++ get_iplayer	Fri May  1 03:06:21 2009
@@@@ -500,7 +500,7 @@@@ sub find_matches {
 	$lame_opts		.= ' --quiet ' if $opt->{quiet};
 	$vlc			= $opt->{vlc} || 'cvlc';
 	$vlc_opts		= '-vv' if $opt->{verbose} || $opt->{debug};
-	$id3v2			= $opt->{id3v2} || 'id3v2';
+	$id3v2			= $opt->{id3v2} || 'id3tag';
 	$tee			= 'tee';
 	$rtmpdump		= $opt->{rtmpdump} || 'rtmpdump';
 	$bandwidth		= $opt->{bandwidth} || 512000; # Download bandwidth bps used for rtsp streams
@@@@ -1252,7 +1252,7 @@@@ sub create_ua {
 	my $agent = shift;
 	my $nocookiejar = shift || 0;
d27 4
a30 4
+	#$ua->timeout([$lwp_request_timeout]);
 	$ua->proxy( ['http'] => $opt->{proxy} ) if $opt->{proxy};
 	$ua->agent( $user_agent{$agent} );
 	$ua->conn_cache(LWP::ConnCache->new());
@


1.3
log
@update to 1.70 with support for Channel4 4oD, based on a diff
from David Cathcart.
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.2 2009/04/19 13:32:20 sthen Exp $
d6 2
a7 2
--- get_iplayer.orig	Mon Apr 27 23:32:58 2009
+++ get_iplayer	Tue Apr 28 12:15:59 2009
d17 1
a17 2
@@@@ -1251,7 +1251,7 @@@@ sub download_block {
 sub create_ua {
d19 1
@


1.2
log
@update to 1.63, adding new CDN making flashhigh work again following
BBC changes. pointed out by David Cathcart.
@
text
@d1 1
a1 1
$OpenBSD: patch-get_iplayer,v 1.1.1.1 2009/04/17 21:27:09 sthen Exp $
d6 3
a8 3
--- get_iplayer.orig	Sun Apr 19 10:41:29 2009
+++ get_iplayer	Sun Apr 19 14:26:14 2009
@@@@ -455,7 +455,7 @@@@ sub find_matches {
d17 1
a17 1
@@@@ -1187,7 +1187,7 @@@@ sub download_block {
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d6 3
a8 3
--- get_iplayer.orig	Thu Apr  9 18:27:17 2009
+++ get_iplayer	Fri Apr 10 09:32:12 2009
@@@@ -457,7 +457,7 @@@@ sub find_matches {
d17 1
a17 1
@@@@ -1200,7 +1200,7 @@@@ sub download_block {
@


1.1.1.1
log
@import get_iplayer, port from David Cathcart with a few tweaks by myself:

This tool allows you to search, index and download/stream:

    * BBC iPlayer TV - H.264 / Quicktime / mov and Flash / AVI
    * BBC iPlayer Radio (Local and National) - 128+ kbps MP3 / AAC and 
       Realaudio
    * BBC Podcasts - 128 kb/s MP3 / AAC
    * BBC iPlayer TV subtitles - SubRip / srt
    * ITV player Catch-up or classic TV - WMV / ASF
    * Hulu.com* TV - MP4
    * Hulu.com* Closed-captions / subtitles - SubRip / srt

get_iplayer has PVR-like capabilities (like Sky+ / TiVo / Series-Link);
You can save lists of programme searches which are automatically
downloaded when they become available.
@
text
@@
