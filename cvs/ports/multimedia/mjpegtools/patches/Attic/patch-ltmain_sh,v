head	1.3;
access;
symbols
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	sturm_2004-Jul-09:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2006.01.10.02.23.37;	author jakemsr;	state dead;
branches;
next	1.2;

1.2
date	2004.08.13.08.09.23;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2004.07.09.11.58.39;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.07.09.11.58.39;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@SHARED_LIBS
USE_LIBTOOL

ok jolan@@
@
text
@$OpenBSD: patch-ltmain_sh,v 1.2 2004/08/13 08:09:23 pvalchev Exp $
--- ltmain.sh.orig	Tue Feb  3 14:58:07 2004
+++ ltmain.sh	Fri Aug 13 00:25:53 2004
@@@@ -1354,6 +1354,17 @@@@ EOF
 
       -o) prev=output ;;
 
+      -pthread)
+	case $host in
+	*-*-openbsd* | *-*-freebsd*)
+	  # These systems use the -pthread flag for pthreads.
+	  deplibs="$deplibs $arg"
+	  continue
+	  ;;
+	esac
+	continue
+	;;
+
       -release)
 	prev=release
 	continue
@@@@ -1898,6 +1909,22 @@@@ EOF
 	  esac # linkmode
 	  continue
 	  ;; # -L
+        -pthread)
+	  case $host in
+	  *-*-openbsd* | *-*-freebsd*)
+	    # These systems use the -pthread flag for pthreads.
+	    if test "$linkmode,$pass" = "prog,link"; then
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    else
+	      deplibs="$deplib $deplibs"
+	      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
+	    fi
+	    continue
+	    ;;
+	  esac
+          continue
+	  ;;
 	-R*)
 	  if test "$pass" = link; then
 	    dir=`$echo "X$deplib" | $Xsed -e 's/^-R//'`
@@@@ -2403,7 +2430,7 @@@@ EOF
 	    add_dir=
 	    add=
 	    # Finalize command for both is simple: just hardcode it.
-	    if test "$hardcode_direct" = yes; then
+	    if test "$hardcode_direct" = yes && test -f $libdir/$linklib; then
 	      add="$libdir/$linklib"
 	    elif test "$hardcode_minus_L" = yes; then
 	      add_dir="-L$libdir"
@@@@ -3337,7 +3364,7 @@@@ EOF
 	      if test -n "$a_deplib" ; then
 		libname=`eval \\$echo \"$libname_spec\"`
 		for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
-		  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
+		  potential_libs=`ls $i/$libname[.-]* $i/${libname}_pic.a 2>/dev/null`
 		  for potent_lib in $potential_libs; do
 		    potlib="$potent_lib" # see symlink-check above in file_magic test
 		    if eval $echo \"$potent_lib\" 2>/dev/null \
@


1.2
log
@sync libtool patches, fixes programs that can't find their libs; maintainer Jacob Meuser
@
text
@d1 1
a1 1
$OpenBSD: patch-ltmain_sh,v 1.1.1.1 2004/07/09 11:58:39 sturm Exp $
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- ltmain.sh.orig	2004-02-03 14:58:07.000000000 -0800
+++ ltmain.sh	2004-06-19 16:43:48.000000000 -0700
d45 9
a53 9
@@@@ -2211,7 +2238,7 @@@@ EOF
 	   { test "$prefer_static_libs" = no || test -z "$old_library"; }; then
 	  if test "$installed" = no; then
 	    notinst_deplibs="$notinst_deplibs $lib"
-	    need_relink=yes
+	    #need_relink=yes
 	  fi
 	  # This is a shared library
 	
@


1.1.1.1
log
@Initial import of mjpegtools 1.6.2

The mjpegtools are a set of programs that can do recording, playback,
editing and eventual MPEG compression of audio and video under Linux.

Although primarily intended for use with capture / playback boards
based on the Zoran ZR36067 MJPEG codec chip, the mjpegtools can easily
be used to process and compress MJPEG video streams captured using
xawtv using simple frame-buffer devices.

WWW: http://mjpeg.sourceforge.net/

from Jacob Meuser <jakemsr at jakemsr.com>
@
text
@@
