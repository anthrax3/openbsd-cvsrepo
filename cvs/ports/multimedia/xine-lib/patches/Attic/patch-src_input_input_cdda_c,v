head	1.8;
access;
symbols
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	jakemsr:1.1.1.1
	jakemsr-20060324:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2009.04.04.00.28.56;	author sthen;	state dead;
branches;
next	1.7;

1.7
date	2009.02.02.22.00.42;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2008.08.31.00.35.08;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2008.08.20.01.54.01;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.18.01.26.41;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2008.01.15.00.36.46;	author jakemsr;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.13.10.58.29;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.24.22.43.41;	author jakemsr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.03.24.22.43.41;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Security update to 1.1.16.3 from Brad (maintainer) - int overflows in
the 4XM demux (TKADV2009-004, CVE-2009-0385) and the Quicktime demux.
@
text
@$OpenBSD: patch-src_input_input_cdda_c,v 1.7 2009/02/02 22:00:42 sthen Exp $
--- src/input/input_cdda.c.orig	Sun Jan  4 10:47:28 2009
+++ src/input/input_cdda.c	Thu Jan  8 01:02:34 2009
@@@@ -72,7 +72,7 @@@@
 #elif defined(WIN32)
 #define DEFAULT_CDDA_DEVICE "d:\\"
 #else
-#define	DEFAULT_CDDA_DEVICE	"/dev/cdrom"
+#define	DEFAULT_CDDA_DEVICE	"/dev/rcd0c"
 #endif
 
 #define CDDB_SERVER             "freedb.freedb.org"
@@@@ -611,7 +611,7 @@@@ static int read_cdrom_frames(cdda_input_plugin_t *this
   return 0;
 }
 
-#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__) || defined(__OpenBSD__)
 
 #include <sys/cdio.h>
 
@@@@ -624,7 +624,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
   struct ioc_toc_header tochdr;
 #if defined(__FreeBSD_kernel__)
   struct ioc_read_toc_single_entry tocentry;
-#elif defined(__NetBSD__)
+#elif defined(__NetBSD__) || defined(__OpenBSD__)
   struct ioc_read_toc_entry tocentry;
   struct cd_toc_entry data;
 #endif
@@@@ -659,7 +659,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
       perror("CDIOREADTOCENTRY");
       return -1;
     }
-#elif defined(__NetBSD__)
+#elif defined(__NetBSD__) || defined(__OpenBSD__)
     memset(&data, 0, sizeof(data));
     tocentry.data_len = sizeof(data);
     tocentry.data = &data;
@@@@ -680,7 +680,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
       (tocentry.entry.addr.msf.minute * CD_SECONDS_PER_MINUTE * CD_FRAMES_PER_SECOND) +
       (tocentry.entry.addr.msf.second * CD_FRAMES_PER_SECOND) +
        tocentry.entry.addr.msf.frame;
-#elif defined(__NetBSD__)
+#elif defined(__NetBSD__) || defined(__OpenBSD__)
     toc->toc_entries[i-1].track_mode = (tocentry.data->control & 0x04) ? 1 : 0;
     toc->toc_entries[i-1].first_frame_minute = tocentry.data->addr.msf.minute;
     toc->toc_entries[i-1].first_frame_second = tocentry.data->addr.msf.second;
@@@@ -702,7 +702,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
     perror("CDIOREADTOCENTRY");
     return -1;
   }
-#elif defined(__NetBSD__)
+#elif defined(__NetBSD__) || defined(__OpenBSD__)
   memset(&data, 0, sizeof(data));
   tocentry.data_len = sizeof(data);
   tocentry.data = &data;
@@@@ -723,7 +723,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
     (tocentry.entry.addr.msf.minute * CD_SECONDS_PER_MINUTE * CD_FRAMES_PER_SECOND) +
     (tocentry.entry.addr.msf.second * CD_FRAMES_PER_SECOND) +
      tocentry.entry.addr.msf.frame;
-#elif defined(__NetBSD__)
+#elif defined(__NetBSD__) || defined(__OpenBSD__)
   toc->leadout_track.track_mode = (tocentry.data->control & 0x04) ? 1 : 0;
   toc->leadout_track.first_frame_minute = tocentry.data->addr.msf.minute;
   toc->leadout_track.first_frame_second = tocentry.data->addr.msf.second;
@@@@ -761,7 +761,7 @@@@ static int read_cdrom_frames(cdda_input_plugin_t *this
       perror("CDIOCREADAUDIO");
       return -1;
     }
-#elif defined(__NetBSD__)
+#elif defined(__NetBSD__) || defined(__OpenBSD__)
     scsireq_t req;
     int nblocks = 1;
 
@


1.7
log
@- SECURITY update to Xine-lib 1.1.16.1
  - Heap overflow in Quicktime atom parsing.  (CVE-2008-5234 vector 1)
  - Multiple buffer overflows.                (CVE-2008-5236)
  - Multiple integer overflows.               (CVE-2008-5237)
  - Unchecked read function results.          (CVE-2008-5239)
  - Unchecked malloc using untrusted values.  (CVE-2008-5240 vectors 3 & 4)
  - Buffer indexing using an untrusted value. (CVE-2008-5243)
- Clean up the Makefile
- Enable the Xv motion compensation support
- Remove the JACK sound support
- Remove the now unnecessary multi-packaging
- Remove an unnecessary patch for the Sun sound code
- Comment out some files in the PLIST that do not pertain to OpenBSD
- Add WavPack support

from Brad (taking MAINTAINER).
@
text
@d1 1
a1 1
$OpenBSD: patch-src_input_input_cdda_c,v 1.6 2008/08/31 00:35:08 brad Exp $
@


1.6
log
@Fix CDDB access on 64-bit architectures.

From Xine-lib source repo

ok jakemsr@@
@
text
@d1 3
a3 3
$OpenBSD: patch-src_input_input_cdda_c,v 1.5 2008/08/20 01:54:01 brad Exp $
--- src/input/input_cdda.c.orig	Wed Aug 13 12:33:05 2008
+++ src/input/input_cdda.c	Wed Aug 27 19:50:47 2008
a12 9
@@@@ -136,7 +136,7 @@@@ typedef struct {
     char              *disc_category;
 
     int                fd;
-    unsigned long      disc_id;
+    uint32_t           disc_id;
 
     int                disc_length;
     trackinfo_t       *track;
a75 18
@@@@ -1902,7 +1902,7 @@@@ static unsigned int _cdda_cddb_sum(int n) {
   }
   return ret;
 }
-static unsigned long _cdda_calc_cddb_id(cdda_input_plugin_t *this) {
+static uint32_t _cdda_calc_cddb_id(cdda_input_plugin_t *this) {
   int i, tsum = 0;
   
   if(this == NULL || (this->cddb.num_tracks <= 0))
@@@@ -1959,7 +1959,7 @@@@ static void _cdda_cdindex(cdda_input_plugin_t *this, c
 /*
  * return cbbd disc id.
  */
-static unsigned long _cdda_get_cddb_id(cdda_input_plugin_t *this) {
+static uint32_t _cdda_get_cddb_id(cdda_input_plugin_t *this) {
 
   if(this == NULL || (this->cddb.num_tracks <= 0))
     return 0;
@


1.5
log
@update to Xine-lib 1.1.15

This release contains some security fixes, notably a DoS via
corrupted Ogg files (CVS-2008-3231), some related fixes, and
fixes for a few possible buffer overflows.

ok jakemsr@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_input_input_cdda_c,v 1.4 2008/06/18 01:26:41 brad Exp $
d3 1
a3 1
+++ src/input/input_cdda.c	Thu Aug 14 18:48:39 2008
d13 9
d85 18
@


1.4
log
@update to Xine-lib 1.1.13

This release contains a security fix (buffer overflow in the NSF demuxer,
CVE-2008-1878). There are also a few bug fixes, and a new JACK output
plugin.

ok jakemsr@@
@
text
@d1 4
a4 4
$OpenBSD: patch-src_input_input_cdda_c,v 1.3 2008/01/15 00:36:46 jakemsr Exp $
--- src/input/input_cdda.c.orig	Sat Jun 14 19:15:00 2008
+++ src/input/input_cdda.c	Mon Jun 16 02:30:50 2008
@@@@ -71,7 +71,7 @@@@
d13 1
a13 1
@@@@ -610,7 +610,7 @@@@ static int read_cdrom_frames(cdda_input_plugin_t *this
d22 1
a22 1
@@@@ -623,7 +623,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d31 1
a31 1
@@@@ -658,7 +658,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d40 1
a40 1
@@@@ -679,7 +679,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d49 1
a49 1
@@@@ -701,7 +701,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d58 1
a58 1
@@@@ -722,7 +722,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d67 1
a67 1
@@@@ -760,7 +760,7 @@@@ static int read_cdrom_frames(cdda_input_plugin_t *this
@


1.3
log
@update to 1.1.9.1

security fix: CVE-2008-0225 - heap-based buffer overflow in libreal (RTSP)

also incorporates post release bug fix in WMV decoding

from brad, thanks
@
text
@d1 3
a3 3
$OpenBSD: patch-src_input_input_cdda_c,v 1.2 2007/06/13 10:58:29 jakemsr Exp $
--- src/input/input_cdda.c.orig	Tue Jan  1 08:30:08 2008
+++ src/input/input_cdda.c	Wed Jan  9 01:57:20 2008
d13 1
a13 1
@@@@ -612,7 +612,7 @@@@ static int read_cdrom_frames(cdda_input_plugin_t *this
d22 1
a22 1
@@@@ -625,7 +625,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d31 1
a31 1
@@@@ -661,7 +661,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d40 1
a40 1
@@@@ -682,7 +682,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d49 1
a49 1
@@@@ -704,7 +704,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d58 1
a58 1
@@@@ -725,7 +725,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d67 1
a67 1
@@@@ -763,7 +763,7 @@@@ static int read_cdrom_frames(cdda_input_plugin_t *this
@


1.2
log
@update to xine-lib-1.1.7

- use some CONFIGURE_ENV instead of patching
- rearrange/update CONFIGURE_ARGS
- many patches no longer relevant
- add CD audio support

input, tetsing and prodding from brad@@
@
text
@d1 4
a4 4
$OpenBSD$
--- src/input/input_cdda.c.orig	Fri May  4 07:46:43 2007
+++ src/input/input_cdda.c	Fri Jun  8 17:27:46 2007
@@@@ -73,7 +73,7 @@@@
d13 1
a13 1
@@@@ -614,7 +614,7 @@@@ static int read_cdrom_frames(cdda_input_plugin_t *this
d17 2
a18 2
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__)
d22 1
a22 1
@@@@ -627,7 +627,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d24 1
a24 1
 #if defined(__FreeBSD__)
d31 1
a31 1
@@@@ -663,7 +663,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d40 1
a40 1
@@@@ -684,7 +684,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d49 1
a49 1
@@@@ -706,7 +706,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d58 1
a58 1
@@@@ -727,7 +727,7 @@@@ static int read_cdrom_toc(int fd, cdrom_toc *toc) {
d67 1
a67 1
@@@@ -768,7 +768,7 @@@@ static int read_cdrom_frames(cdda_input_plugin_t *this
@


1.1
log
@Initial revision
@
text
@d2 2
a3 2
--- src/input/input_cdda.c.orig	Tue Nov 15 05:36:44 2005
+++ src/input/input_cdda.c	Thu Dec 29 23:39:05 2005
d9 1
a9 1
+#define	DEFAULT_CDDA_DEVICE	"/dev/cd0c"
d13 63
@


1.1.1.1
log
@initial import of xine-lib

xine is a free multimedia player. It plays back CDs, DVDs, and VCDs. It
also decodes multimedia files like AVI, MOV, WMV, and MP3 from local
disk drives, and displays multimedia streamed over the Internet. It
interprets many of the most common multimedia formats available - and
some of the most uncommon formats, too.

prodded by jolan@@ and bernd@@

@
text
@@
