head	1.8;
access;
symbols
	OPENBSD_4_8:1.7.0.8
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.6
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	jakemsr:1.1.1.1
	jakemsr-20060324:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2010.09.20.07.58.13;	author sthen;	state dead;
branches;
next	1.7;

1.7
date	2009.02.02.22.00.42;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.18.01.26.41;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2008.01.15.00.36.46;	author jakemsr;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.13.10.58.29;	author jakemsr;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.01.20.05.10;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2006.12.07.09.21.01;	author steven;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.24.22.43.41;	author jakemsr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.03.24.22.43.41;	author jakemsr;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	2006.12.07.21.46.58;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Garbage collect some patches for Xine-lib which are not necessary.
From Brad.
@
text
@$OpenBSD: patch-src_input_mms_c,v 1.7 2009/02/02 22:00:42 sthen Exp $
--- src/input/mms.c.orig	Sun Jan  4 10:47:28 2009
+++ src/input/mms.c	Thu Jan  8 01:06:20 2009
@@@@ -48,6 +48,7 @@@@
 #include <iconv.h>
 #include <locale.h>
 #include <langinfo.h>
+#include <localcharset.h>
 #endif
 
 /********** logging **********/
@@@@ -290,7 +291,7 @@@@ static int send_command (mms_t *this, int command,
 
 #ifdef USE_ICONV
 static iconv_t string_utf16_open() {
-    return iconv_open("UTF-16LE", "UTF-8");
+    return iconv_open("UTF-16LE", locale_charset());
 }
 
 static void string_utf16_close(iconv_t url_conv) {
@


1.7
log
@- SECURITY update to Xine-lib 1.1.16.1
  - Heap overflow in Quicktime atom parsing.  (CVE-2008-5234 vector 1)
  - Multiple buffer overflows.                (CVE-2008-5236)
  - Multiple integer overflows.               (CVE-2008-5237)
  - Unchecked read function results.          (CVE-2008-5239)
  - Unchecked malloc using untrusted values.  (CVE-2008-5240 vectors 3 & 4)
  - Buffer indexing using an untrusted value. (CVE-2008-5243)
- Clean up the Makefile
- Enable the Xv motion compensation support
- Remove the JACK sound support
- Remove the now unnecessary multi-packaging
- Remove an unnecessary patch for the Sun sound code
- Comment out some files in the PLIST that do not pertain to OpenBSD
- Add WavPack support

from Brad (taking MAINTAINER).
@
text
@d1 1
a1 1
$OpenBSD: patch-src_input_mms_c,v 1.6 2008/06/18 01:26:41 brad Exp $
@


1.6
log
@update to Xine-lib 1.1.13

This release contains a security fix (buffer overflow in the NSF demuxer,
CVE-2008-1878). There are also a few bug fixes, and a new JACK output
plugin.

ok jakemsr@@
@
text
@d1 3
a3 3
$OpenBSD: patch-src_input_mms_c,v 1.5 2008/01/15 00:36:46 jakemsr Exp $
--- src/input/mms.c.orig	Sat Jun 14 19:15:00 2008
+++ src/input/mms.c	Mon Jun 16 02:30:50 2008
d16 1
a16 1
-    return iconv_open("UTF-16LE", nl_langinfo(CODESET));
@


1.5
log
@update to 1.1.9.1

security fix: CVE-2008-0225 - heap-based buffer overflow in libreal (RTSP)

also incorporates post release bug fix in WMV decoding

from brad, thanks
@
text
@d1 3
a3 3
$OpenBSD: patch-src_input_mms_c,v 1.4 2007/06/13 10:58:29 jakemsr Exp $
--- src/input/mms.c.orig	Tue Jan  1 08:30:08 2008
+++ src/input/mms.c	Wed Jan  9 01:50:22 2008
d12 1
a12 1
@@@@ -288,7 +289,7 @@@@ static int send_command (mms_t *this, int command,
@


1.4
log
@update to xine-lib-1.1.7

- use some CONFIGURE_ENV instead of patching
- rearrange/update CONFIGURE_ARGS
- many patches no longer relevant
- add CD audio support

input, tetsing and prodding from brad@@
@
text
@d1 4
a4 4
$OpenBSD$
--- src/input/mms.c.orig	Sun Apr 15 10:42:16 2007
+++ src/input/mms.c	Sun May 20 22:40:02 2007
@@@@ -50,6 +50,7 @@@@
d12 1
a12 1
@@@@ -290,7 +291,7 @@@@ static int send_command (mms_t *this, int command,
@


1.3
log
@regen patches
@
text
@d1 3
a3 3
$OpenBSD: patch-src_input_mms_c,v 1.2 2006/12/07 09:21:01 steven Exp $
--- src/input/mms.c.orig	Sun Jul  9 16:37:35 2006
+++ src/input/mms.c	Tue May  1 22:03:06 2007
d12 1
a12 10
@@@@ -138,7 +139,7 @@@@ struct mms_s {
   int           num_stream_ids;
   int           stream_ids[ASF_MAX_NUM_STREAMS];
   int           stream_types[ASF_MAX_NUM_STREAMS];
-  int           asf_packet_len;
+  uint32_t      asf_packet_len;
   uint64_t      file_len;
   char          guid[37];
   uint32_t      bitrates[ASF_MAX_NUM_STREAMS];
@@@@ -299,7 +300,7 @@@@ static int send_command (mms_t *this, int command,
a20 44
@@@@ -371,13 +372,17 @@@@ static int get_packet_header (mms_t *this, mms_packet_
       goto error;
     
     header->packet_len = LE_32(this->buf + 8) + 4;
+    if (header->packet_len > BUF_SIZE - 12) {
+      header->packet_len = 0;
+      goto error;
+    }
     lprintf("mms command\n");
     packet_type = MMS_PACKET_COMMAND;
   } else {
     header->packet_seq     = LE_32(this->buf);
     header->packet_id_type = this->buf[4];
     header->flags          = this->buf[5];
-    header->packet_len     = LE_16(this->buf + 6) - 8;
+    header->packet_len     = (LE_16(this->buf + 6) - 8) & 0xffff;
     if (header->packet_id_type == ASF_HEADER_PACKET_ID_TYPE) {
       lprintf("asf header\n");
       packet_type = MMS_PACKET_ASF_HEADER;
@@@@ -497,6 +502,11 @@@@ static int get_asf_header (mms_t *this) {
         break;
       case MMS_PACKET_ASF_HEADER:
       case MMS_PACKET_ASF_PACKET:
+        if (header.packet_len + this->asf_header_len > ASF_HEADER_LEN) {
+            xprintf (this->stream->xine, XINE_VERBOSITY_LOG,
+                     "libmms: asf packet too large\n");
+            return 0;
+        }
         len = _x_io_tcp_read (this->stream, this->s,
                               (char*)(this->asf_header + this->asf_header_len), header.packet_len);
         if (len != header.packet_len) {
@@@@ -542,6 +552,12 @@@@ static void interp_asf_header (mms_t *this) {
       case GUID_ASF_FILE_PROPERTIES:
 
         this->asf_packet_len = LE_32(this->asf_header + i + 92 - 24);
+        if (this->asf_packet_len > BUF_SIZE) {
+          this->asf_packet_len = 0;
+          xprintf (this->stream->xine, XINE_VERBOSITY_LOG,
+                   "libmms: asf packet len too large\n");
+          break;
+        }
         this->file_len       = LE_64(this->asf_header + i + 40 - 24);
         lprintf ("file object, file_length = %lld, packet length = %d",
 		 this->file_len, this->asf_packet_len);
@


1.2
log
@Security fixes:
- Heap overflow in libmms (related to CVE-2006-2200)
- Buffer overrun in Real Media input plugin. [bug #1603458]
  Thanks to Roland Kay for reporting and JW for the patch.

from brad@@, tested by bernd@@ and me
@
text
@d1 3
a3 3
$OpenBSD: patch-src_input_mms_c,v 1.1.1.1 2006/03/24 22:43:41 jakemsr Exp $
--- src/input/mms.c.orig	Sun Jul  9 10:37:35 2006
+++ src/input/mms.c	Mon Dec  4 14:44:00 2006
d21 1
a21 1
@@@@ -299,7 +300,7 @@@@ static int send_command (mms_t *this, in
d30 1
a30 1
@@@@ -371,13 +372,17 @@@@ static int get_packet_header (mms_t *thi
d49 1
a49 1
@@@@ -497,6 +502,11 @@@@ static int get_asf_header (mms_t *this) 
d61 1
a61 1
@@@@ -542,6 +552,12 @@@@ static void interp_asf_header (mms_t *th
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- src/input/mms.c.orig	Sat Dec 24 23:39:48 2005
+++ src/input/mms.c	Sat Dec 24 23:40:23 2005
d12 9
d30 44
@


1.1.1.1
log
@initial import of xine-lib

xine is a free multimedia player. It plays back CDs, DVDs, and VCDs. It
also decodes multimedia files like AVI, MOV, WMV, and MP3 from local
disk drives, and displays multimedia streamed over the Internet. It
interprets many of the most common multimedia formats available - and
some of the most uncommon formats, too.

prodded by jolan@@ and bernd@@

@
text
@@


1.1.1.1.2.1
log
@MFC:
Security fixes:
- Heap overflow in libmms (related to CVE-2006-2200)
- Buffer overrun in Real Media input plugin. [bug #1603458]
Thanks to Roland Kay for reporting and JW for the patch.
@
text
@d1 3
a3 3
$OpenBSD: patch-src_input_mms_c,v 1.2 2006/12/07 09:21:01 steven Exp $
--- src/input/mms.c.orig	Sun Jul  9 10:37:35 2006
+++ src/input/mms.c	Mon Dec  4 14:44:00 2006
a11 9
@@@@ -138,7 +139,7 @@@@ struct mms_s {
   int           num_stream_ids;
   int           stream_ids[ASF_MAX_NUM_STREAMS];
   int           stream_types[ASF_MAX_NUM_STREAMS];
-  int           asf_packet_len;
+  uint32_t      asf_packet_len;
   uint64_t      file_len;
   char          guid[37];
   uint32_t      bitrates[ASF_MAX_NUM_STREAMS];
a20 44
@@@@ -371,13 +372,17 @@@@ static int get_packet_header (mms_t *thi
       goto error;
     
     header->packet_len = LE_32(this->buf + 8) + 4;
+    if (header->packet_len > BUF_SIZE - 12) {
+      header->packet_len = 0;
+      goto error;
+    }
     lprintf("mms command\n");
     packet_type = MMS_PACKET_COMMAND;
   } else {
     header->packet_seq     = LE_32(this->buf);
     header->packet_id_type = this->buf[4];
     header->flags          = this->buf[5];
-    header->packet_len     = LE_16(this->buf + 6) - 8;
+    header->packet_len     = (LE_16(this->buf + 6) - 8) & 0xffff;
     if (header->packet_id_type == ASF_HEADER_PACKET_ID_TYPE) {
       lprintf("asf header\n");
       packet_type = MMS_PACKET_ASF_HEADER;
@@@@ -497,6 +502,11 @@@@ static int get_asf_header (mms_t *this) 
         break;
       case MMS_PACKET_ASF_HEADER:
       case MMS_PACKET_ASF_PACKET:
+        if (header.packet_len + this->asf_header_len > ASF_HEADER_LEN) {
+            xprintf (this->stream->xine, XINE_VERBOSITY_LOG,
+                     "libmms: asf packet too large\n");
+            return 0;
+        }
         len = _x_io_tcp_read (this->stream, this->s,
                               (char*)(this->asf_header + this->asf_header_len), header.packet_len);
         if (len != header.packet_len) {
@@@@ -542,6 +552,12 @@@@ static void interp_asf_header (mms_t *th
       case GUID_ASF_FILE_PROPERTIES:
 
         this->asf_packet_len = LE_32(this->asf_header + i + 92 - 24);
+        if (this->asf_packet_len > BUF_SIZE) {
+          this->asf_packet_len = 0;
+          xprintf (this->stream->xine, XINE_VERBOSITY_LOG,
+                   "libmms: asf packet len too large\n");
+          break;
+        }
         this->file_len       = LE_64(this->asf_header + i + 40 - 24);
         lprintf ("file object, file_length = %lld, packet length = %d",
 		 this->file_len, this->asf_packet_len);
@

