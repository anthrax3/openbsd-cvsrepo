head	1.3;
access;
symbols
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.10
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.8
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2011.04.15.23.22.31;	author sthen;	state dead;
branches;
next	1.2;

1.2
date	2010.01.05.11.48.51;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.13.10.58.29;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove casts now that NULL is a void *
from Brad.
@
text
@$OpenBSD: patch-src_xine-engine_io_helper_c,v 1.2 2010/01/05 11:48:51 sthen Exp $
--- src/xine-engine/io_helper.c.orig	Mon Nov 30 15:55:52 2009
+++ src/xine-engine/io_helper.c	Wed Dec  2 20:37:52 2009
@@@@ -56,19 +56,19 @@@@ static int _x_io_tcp_connect_ipv4(xine_stream_t *strea
 
   h = gethostbyname(host);
   if (h == NULL) {
-    _x_message(stream, XINE_MSG_UNKNOWN_HOST, "unable to resolve", host, NULL);
+    _x_message(stream, XINE_MSG_UNKNOWN_HOST, "unable to resolve", host, (char *)NULL);
     return -1;
   }
 
   s = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);
   if (s == -1) {
-    _x_message(stream, XINE_MSG_CONNECTION_REFUSED, "failed to create socket", strerror(errno), NULL);
+    _x_message(stream, XINE_MSG_CONNECTION_REFUSED, "failed to create socket", strerror(errno), (char *)NULL);
     return -1;
   }
 
 #ifndef WIN32
   if (fcntl (s, F_SETFL, fcntl (s, F_GETFL) | O_NONBLOCK) == -1) {
-    _x_message(stream, XINE_MSG_CONNECTION_REFUSED, "can't put socket in non-blocking mode", strerror(errno), NULL);
+    _x_message(stream, XINE_MSG_CONNECTION_REFUSED, "can't put socket in non-blocking mode", strerror(errno), (char *)NULL);
     return -1;
   }
 #else
@@@@ -79,7 +79,7 @@@@ static int _x_io_tcp_connect_ipv4(xine_stream_t *strea
     rc = ioctlsocket(s, FIONBIO, &non_block);
 
     if (rc == SOCKET_ERROR) {
-      _x_message(stream, XINE_MSG_CONNECTION_REFUSED, "can't put socket in non-blocking mode", strerror(errno), NULL);
+      _x_message(stream, XINE_MSG_CONNECTION_REFUSED, "can't put socket in non-blocking mode", strerror(errno), (char *)NULL);
 	  return -1;
     }
   }
@@@@ -102,7 +102,7 @@@@ static int _x_io_tcp_connect_ipv4(xine_stream_t *strea
         xprintf(stream->xine, XINE_VERBOSITY_DEBUG, "io_helper: WSAGetLastError() = %d\n", WSAGetLastError());
 #endif /* WIN32 */
 
-      _x_message(stream, XINE_MSG_CONNECTION_REFUSED, strerror(errno), NULL);
+      _x_message(stream, XINE_MSG_CONNECTION_REFUSED, strerror(errno), (char *)NULL);
       close(s);
       continue;
     }
@@@@ -136,7 +136,7 @@@@ int _x_io_tcp_connect(xine_stream_t *stream, const cha
 
   if (error) {
     _x_message(stream, XINE_MSG_UNKNOWN_HOST,
-		 "unable to resolve", host, NULL);
+		 "unable to resolve", host, (char *)NULL);
     return -1;
   }
 
@@@@ -147,7 +147,7 @@@@ int _x_io_tcp_connect(xine_stream_t *stream, const cha
       s = socket(tmpaddr->ai_family, SOCK_STREAM, IPPROTO_TCP);
       if (s == -1) {
 	  _x_message(stream, XINE_MSG_CONNECTION_REFUSED,
-		       "failed to create socket", strerror(errno), NULL);
+		       "failed to create socket", strerror(errno), (char *)NULL);
 	  tmpaddr = tmpaddr->ai_next;
 	  continue;
       }
@@@@ -160,7 +160,7 @@@@ int _x_io_tcp_connect(xine_stream_t *stream, const cha
       if ( ! tmpaddr->ai_next ) {
 #ifndef WIN32
 	if (fcntl (s, F_SETFL, fcntl (s, F_GETFL) | O_NONBLOCK) == -1) {
-	  _x_message(stream, XINE_MSG_CONNECTION_REFUSED, "can't put socket in non-blocking mode", strerror(errno), NULL);
+	  _x_message(stream, XINE_MSG_CONNECTION_REFUSED, "can't put socket in non-blocking mode", strerror(errno), (char *)NULL);
 	  return -1;
 	}
 #else
@@@@ -170,7 +170,7 @@@@ int _x_io_tcp_connect(xine_stream_t *stream, const cha
 	rc = ioctlsocket(s, FIONBIO, &non_block);
 
 	if (rc == SOCKET_ERROR) {
-	  _x_message(stream, XINE_MSG_CONNECTION_REFUSED, "can't put socket in non-blocking mode", strerror(errno), NULL);
+	  _x_message(stream, XINE_MSG_CONNECTION_REFUSED, "can't put socket in non-blocking mode", strerror(errno), (char *)NULL);
 	  return -1;
 	}
 #endif
@@@@ -200,7 +200,7 @@@@ int _x_io_tcp_connect(xine_stream_t *stream, const cha
     tmpaddr = tmpaddr->ai_next;
   }
 
-  _x_message(stream, XINE_MSG_CONNECTION_REFUSED, strerror(error), NULL);
+  _x_message(stream, XINE_MSG_CONNECTION_REFUSED, strerror(error), (char *)NULL);
 
   return -1;
 #endif
@@@@ -311,11 +311,11 @@@@ int _x_io_tcp_connect_finish(xine_stream_t *stream, in
     int err;
 
     if ((getsockopt(fd, SOL_SOCKET, SO_ERROR, (void *)&err, &len)) == -1) {
-      _x_message(stream, XINE_MSG_CONNECTION_REFUSED, _("failed to get status of socket"), strerror(errno), NULL);
+      _x_message(stream, XINE_MSG_CONNECTION_REFUSED, _("failed to get status of socket"), strerror(errno), (char *)NULL);
       return XIO_ERROR;
     }
     if (err) {
-      _x_message(stream, XINE_MSG_CONNECTION_REFUSED, strerror(errno), NULL);
+      _x_message(stream, XINE_MSG_CONNECTION_REFUSED, strerror(errno), (char *)NULL);
       return XIO_ERROR;
     }
   }
@@@@ -383,15 +383,15 @@@@ static off_t xio_rw_abort(xine_stream_t *stream, int f
         continue;
 
       if (errno == EACCES) {
-        _x_message(stream, XINE_MSG_PERMISSION_ERROR, NULL, NULL);
+        _x_message(stream, XINE_MSG_PERMISSION_ERROR, NULL, (char *)NULL);
 	xine_log (stream->xine, XINE_LOG_MSG,
 		  _("io_helper: Permission denied\n"));
       } else if (errno == ENOENT) {
-        _x_message(stream, XINE_MSG_FILE_NOT_FOUND, NULL, NULL);
+        _x_message(stream, XINE_MSG_FILE_NOT_FOUND, NULL, (char *)NULL);
 	xine_log (stream->xine, XINE_LOG_MSG,
 		  _("io_helper: File not found\n"));
       } else if (errno == ECONNREFUSED) {
-	_x_message(stream, XINE_MSG_CONNECTION_REFUSED, NULL, NULL);
+	_x_message(stream, XINE_MSG_CONNECTION_REFUSED, NULL, (char *)NULL);
 	xine_log (stream->xine, XINE_LOG_MSG,
 		  _("io_helper: Connection Refused\n"));
       } else {
@


1.2
log
@Update to xine-lib 1.1.17 and disable win32 codecs. From Brad.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_xine-engine_io_helper_c,v 1.1 2007/06/13 10:58:29 jakemsr Exp $
@


1.1
log
@update to xine-lib-1.1.7

- use some CONFIGURE_ENV instead of patching
- rearrange/update CONFIGURE_ARGS
- many patches no longer relevant
- add CD audio support

input, tetsing and prodding from brad@@
@
text
@d1 3
a3 3
$OpenBSD$
--- src/xine-engine/io_helper.c.orig	Sun Apr 15 10:42:17 2007
+++ src/xine-engine/io_helper.c	Sun May 20 22:40:14 2007
d5 1
a5 1
   
d13 1
a13 1
   s = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);  
d48 1
a48 1
     _x_message(stream, XINE_MSG_UNKNOWN_HOST, 
d55 1
a55 1
       s = socket(tmpaddr->ai_family, SOCK_STREAM, IPPROTO_TCP);  
d57 1
a57 1
 	  _x_message(stream, XINE_MSG_CONNECTION_REFUSED, 
d87 1
a87 1
   
d92 1
a92 1
     
@

