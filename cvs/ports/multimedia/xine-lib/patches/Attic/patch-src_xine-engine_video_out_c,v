head	1.16;
access;
symbols
	OPENBSD_5_0:1.10.0.2
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.6
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	jakemsr:1.1.1.1
	jakemsr-20060324:1.1.1;
locks; strict;
comment	@# @;


1.16
date	2013.11.30.22.13.37;	author brad;	state dead;
branches;
next	1.15;

1.15
date	2013.08.28.15.30.35;	author brad;	state Exp;
branches;
next	1.14;

1.14
date	2012.06.10.07.35.30;	author ajacoutot;	state dead;
branches;
next	1.13;

1.13
date	2012.05.09.06.29.43;	author ajacoutot;	state Exp;
branches;
next	1.12;

1.12
date	2011.11.16.00.43.17;	author sthen;	state dead;
branches;
next	1.11;

1.11
date	2011.10.09.20.45.07;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2011.05.11.09.05.55;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2010.09.13.20.35.51;	author sthen;	state dead;
branches;
next	1.8;

1.8
date	2010.09.13.20.12.16;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2010.03.21.01.41.15;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2010.01.05.11.48.51;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2008.01.15.00.36.46;	author jakemsr;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.13.10.58.29;	author jakemsr;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.01.20.05.10;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.12.04.48.14;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.24.22.43.41;	author jakemsr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.03.24.22.43.41;	author jakemsr;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	2006.11.01.13.13.03;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Update to Xine-lib 1.2.4.

ok juanfra@@
@
text
@$OpenBSD: patch-src_xine-engine_video_out_c,v 1.15 2013/08/28 15:30:35 brad Exp $

Fix another potential xine_play() hang.

--- src/xine-engine/video_out.c.orig	Tue Aug 27 10:28:48 2013
+++ src/xine-engine/video_out.c	Tue Aug 27 10:32:21 2013
@@@@ -1364,21 +1364,11 @@@@ static void overlay_and_display_frame (vos_t *this,
     pthread_mutex_unlock( &img->stream->current_extra_info_lock );
   }
 
-  if (this->overlay_source) {
-    this->overlay_source->multiple_overlay_blend (this->overlay_source,
-						  vpts,
-						  this->driver, img,
-						  this->video_loop_running && this->overlay_enabled);
-  }
-
-  vo_grab_current_frame (this, img, vpts);
-
-  this->driver->display_frame (this->driver, img);
-
-  /*
-   * Wake up xine_play if it's waiting for a frame
+  /* xine_play() may be called from a thread that has the display device locked
+   * (eg an X window event handler). If it is waiting for a frame we better wake
+   * it up _before_ we start displaying, or the first 10 seconds of video are lost.
    */
-  if( this->last_frame->is_first ) {
+  if( img->is_first ) {
     pthread_mutex_lock(&this->streams_lock);
     for (ite = xine_list_front(this->streams); ite;
          ite = xine_list_next(this->streams, ite)) {
@@@@ -1393,6 +1383,17 @@@@ static void overlay_and_display_frame (vos_t *this,
     }
     pthread_mutex_unlock(&this->streams_lock);
   }
+
+  if (this->overlay_source) {
+    this->overlay_source->multiple_overlay_blend (this->overlay_source,
+						  vpts,
+						  this->driver, img,
+						  this->video_loop_running && this->overlay_enabled);
+  }
+
+  vo_grab_current_frame (this, img, vpts);
+
+  this->driver->display_frame (this->driver, img);
 
   this->redraw_needed = 0;
 }
@


1.15
log
@Several fixes from upstream:

- Fix multichannel playback.
- Default to square pixels.
- Avoid CODEC_FLAG_EMU_EDG.
- Use AV_CODEC_ID_MPEG2VIDEO.
- Fix another potential xine_play() hang.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.14
log
@Update to stable, xine-lib-1.1.21.

from Brad (maintainer)
@
text
@d1 9
a9 5
$OpenBSD: patch-src_xine-engine_video_out_c,v 1.13 2012/05/09 06:29:43 ajacoutot Exp $
--- src/xine-engine/video_out.c.orig	Tue May  8 23:19:12 2012
+++ src/xine-engine/video_out.c	Tue May  8 23:19:41 2012
@@@@ -1948,7 +1948,7 @@@@ xine_video_port_t *_x_vo_new_port (xine_t *xine, vo_dr
     this->grab_only            = 0;
d11 37
a47 5
     pthread_attr_init(&pth_attrs);
-#ifdef _POSIX_THREAD_PRIORITY_SCHEDULING
+#if defined(_POSIX_THREAD_PRIORITY_SCHEDULING) && (_POSIX_THREAD_PRIORITY_SCHEDULING > 0)
     pthread_attr_setscope(&pth_attrs, PTHREAD_SCOPE_SYSTEM);
 #endif
d49 2
@


1.13
log
@Correct the utilization of the _POSIX_THREAD_PRIORITY_SCHEDULING feature
test macro.

from Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.12
log
@update to xine-lib 1.1.20, from Brad
@
text
@d1 11
a11 13
$OpenBSD: patch-src_xine-engine_video_out_c,v 1.11 2011/10/09 20:45:07 sthen Exp $

- Disable decoder flush from video out to avoid decoding errors.
- Fixes two issues of video out standard cropping feature.
  Resulting left and right cropping parameters should be multiple of 2.
  Left cropping offset calculation to YUY2 frames fixed.
- Fix UI freeze.
- Fix video deadlock.

--- src/xine-engine/video_out.c.orig	Wed Jul 21 13:43:52 2010
+++ src/xine-engine/video_out.c	Wed Sep 28 01:45:14 2011
@@@@ -533,8 +533,8 @@@@ static int vo_frame_draw (vo_frame_t *img, xine_stream
     xine_list_iterator_t ite;
a12 151
     /* add cropping requested by frontend */
-    img->crop_left   += this->crop_left;
-    img->crop_right  += this->crop_right;
+    img->crop_left   = (img->crop_left + this->crop_left) & ~1;
+    img->crop_right  = (img->crop_right + this->crop_right) & ~1;
     img->crop_top    += this->crop_top;
     img->crop_bottom += this->crop_bottom;
 
@@@@ -571,25 +571,28 @@@@ static int vo_frame_draw (vo_frame_t *img, xine_stream
      * check for first frame after seek and mark it
      */
     img->is_first = 0;
-    pthread_mutex_lock(&this->streams_lock);
-    for (ite = xine_list_front(this->streams); ite;
-         ite = xine_list_next(this->streams, ite)) {
-      stream = xine_list_get_value(this->streams, ite);
-      if (stream == XINE_ANON_STREAM) continue;
-      pthread_mutex_lock (&stream->first_frame_lock);
-      if (stream->first_frame_flag == 2) {
-        if (this->grab_only) {
-          stream->first_frame_flag = 0;
-          pthread_cond_broadcast(&stream->first_frame_reached);
-        } else
-          stream->first_frame_flag = 1;
-        img->is_first = FIRST_FRAME_MAX_POLL;
+    /* avoid a complex deadlock situation caused by net_buf_control */
+    if (!pthread_mutex_trylock(&this->streams_lock)) {
+      for (ite = xine_list_front(this->streams); ite;
+           ite = xine_list_next(this->streams, ite)) {
+        stream = xine_list_get_value(this->streams, ite);
+        if (stream == XINE_ANON_STREAM) continue;
+        pthread_mutex_lock (&stream->first_frame_lock);
+        if (stream->first_frame_flag == 2) {
+          if (this->grab_only) {
+            stream->first_frame_flag = 0;
+            pthread_cond_broadcast(&stream->first_frame_reached);
+          } else {
+            stream->first_frame_flag = 1;
+          }
+          img->is_first = FIRST_FRAME_MAX_POLL;
 
-        lprintf ("get_next_video_frame first_frame_reached\n");
+          lprintf ("get_next_video_frame first_frame_reached\n");
+        }
+        pthread_mutex_unlock (&stream->first_frame_lock);
       }
-      pthread_mutex_unlock (&stream->first_frame_lock);
+      pthread_mutex_unlock(&this->streams_lock);
     }
-    pthread_mutex_unlock(&this->streams_lock);
 
     if (!img_already_locked)
       vo_frame_inc_lock( img );
@@@@ -801,7 +804,7 @@@@ static void expire_frames (vos_t *this, int64_t cur_vp
 
   while (img) {
 
-    if (img->is_first) {
+    if (img->is_first > 0) {
       lprintf("expire_frames: first_frame !\n");
 
       /*
@@@@ -818,6 +821,8 @@@@ static void expire_frames (vos_t *this, int64_t cur_vp
         img->vpts = cur_vpts + FIRST_FRAME_POLL_DELAY;
       }
       img->is_first--;
+      /* make sure to wake up xine_play even if this first frame gets discarded */
+      if (img->is_first == 0) img->is_first = -1;
       break;
     }
 
@@@@ -847,6 +852,24 @@@@ static void expire_frames (vos_t *this, int64_t cur_vp
 	pthread_mutex_lock( &img->stream->current_extra_info_lock );
 	_x_extra_info_merge( img->stream->current_extra_info, img->extra_info );
 	pthread_mutex_unlock( &img->stream->current_extra_info_lock );
+	/* wake up xine_play now if we just discarded first frame */
+	if (img->is_first != 0) {
+	  xine_list_iterator_t ite;
+	  pthread_mutex_lock (&this->streams_lock);
+	  for (ite = xine_list_front(this->streams); ite;
+	    ite = xine_list_next(this->streams, ite)) {
+	    xine_stream_t *stream = xine_list_get_value (this->streams, ite);
+	    if (stream == XINE_ANON_STREAM) continue;
+	    pthread_mutex_lock (&stream->first_frame_lock);
+	    if (stream->first_frame_flag) {
+	      stream->first_frame_flag = 0;
+	      pthread_cond_broadcast (&stream->first_frame_reached);
+	    }
+	    pthread_mutex_unlock (&stream->first_frame_lock);
+	  }
+	  pthread_mutex_unlock(&this->streams_lock);
+	  xine_log (this->xine, XINE_LOG_MSG, _("video_out: just discarded first frame after seek\n"));
+	}
       }
 
       /* when flushing frames, keep the first one as backup */
@@@@ -1124,6 +1147,11 @@@@ static void paused_loop( vos_t *this, int64_t vpts )
   pthread_mutex_unlock( &this->free_img_buf_queue->mutex );
 }
 
+static void video_out_update_disable_flush_from_video_out(void *disable_decoder_flush_from_video_out, xine_cfg_entry_t *entry)
+{
+  *(int *)disable_decoder_flush_from_video_out = entry->num_value;
+}
+
 static void *video_out_loop (void *this_gen) {
 
   int64_t            vpts, diff;
@@@@ -1131,6 +1159,7 @@@@ static void *video_out_loop (void *this_gen) {
   vos_t             *this = (vos_t *) this_gen;
   int64_t            next_frame_vpts = 0;
   int64_t            usec_to_sleep;
+  int                disable_decoder_flush_from_video_out;
 
 #ifndef WIN32
   /* nice(-value) will fail silently for normal users.
@@@@ -1141,6 +1170,16 @@@@ static void *video_out_loop (void *this_gen) {
   nice(-2);
 #endif /* WIN32 */
 
+  disable_decoder_flush_from_video_out = this->xine->config->register_bool(this->xine->config, "engine.decoder.disable_flush_from_video_out", 0,
+      _("disable decoder flush from video out"),
+      _("video out causes a decoder flush when video out runs out of frames for displaying,\n"
+        "because the decoder hasn't deliverd new frames for quite a while.\n"
+        "flushing the decoder causes decoding errors for images decoded after the flush.\n"
+        "to avoid the decoding errors, decoder flush at video out should be disabled.\n\n"
+        "WARNING: as the flush was introduced to fix some issues when playing DVD still images, it is\n"
+        "likely that these issues may reappear in case they haven't been fixed differently meanwhile.\n"),
+        20, video_out_update_disable_flush_from_video_out, &disable_decoder_flush_from_video_out);
+
   /*
    * here it is - the heart of xine (or rather: one of the hearts
    * of xine) : the video output loop
@@@@ -1191,7 +1230,7 @@@@ static void *video_out_loop (void *this_gen) {
            ite = xine_list_next(this->streams, ite)) {
 	xine_stream_t *stream = xine_list_get_value(this->streams, ite);
 	if (stream == XINE_ANON_STREAM) continue;
-        if (stream->video_decoder_plugin && stream->video_fifo) {
+        if (stream->video_decoder_plugin && stream->video_fifo && !disable_decoder_flush_from_video_out) {
           buf_element_t *buf;
 
 	  lprintf ("flushing current video decoder plugin\n");
@@@@ -1741,7 +1780,7 @@@@ static vo_frame_t * crop_frame( xine_video_port_t *thi
     yuy2_to_yuy2(
      /* src */
       img->base[0] + img->crop_top * img->pitches[0] +
-        img->crop_left/2, img->pitches[0],
+        img->crop_left*2, img->pitches[0],
      /* dst */
       dupl->base[0], dupl->pitches[0],
      /* width x height */
@


1.11
log
@Backport support to xine-lib for VP8 (WebM) and RealVideo 3/4, improved
24-bit LPCM support and various bug fixes. From Brad.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_xine-engine_video_out_c,v 1.10 2011/05/11 09:05:55 dcoppa Exp $
@


1.10
log
@- Get rid of the use of libtool's -tag=disable-static.

- Merge in a whole bunch of various fixes from upstream and add
  comments for the existing fixes which didn't have a comment in
  the patch.

From Brad; OK sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d7 2
d10 2
a11 2
--- src/xine-engine/video_out.c.orig	Mon May  9 21:02:46 2011
+++ src/xine-engine/video_out.c	Mon May  9 21:10:23 2011
d23 89
a111 1
@@@@ -1124,6 +1124,11 @@@@ static void paused_loop( vos_t *this, int64_t vpts )
d123 1
a123 1
@@@@ -1131,6 +1136,7 @@@@ static void *video_out_loop (void *this_gen) {
d131 1
a131 1
@@@@ -1141,6 +1147,16 @@@@ static void *video_out_loop (void *this_gen) {
d148 1
a148 1
@@@@ -1191,7 +1207,7 @@@@ static void *video_out_loop (void *this_gen) {
d157 1
a157 1
@@@@ -1741,7 +1757,7 @@@@ static vo_frame_t * crop_frame( xine_video_port_t *thi
@


1.9
log
@remove 0-byte files, spotted by Brad
@
text
@d1 75
@


1.8
log
@update xine-lib to 1.1.19 and switch to new-style LIB_DEPENDS/WANTLIB
from Brad, thanks landry@@ for testing in bulk build
@
text
@@


1.7
log
@update to 1.1.18.1, from Brad
@
text
@a0 13
$OpenBSD: patch-src_xine-engine_video_out_c,v 1.6 2010/01/05 11:48:51 sthen Exp $
--- src/xine-engine/video_out.c.orig	Tue Feb 23 16:57:24 2010
+++ src/xine-engine/video_out.c	Tue Feb 23 19:29:39 2010
@@@@ -1908,7 +1908,9 @@@@ xine_video_port_t *_x_vo_new_port (xine_t *xine, vo_dr
     this->grab_only            = 0;
 
     pthread_attr_init(&pth_attrs);
+#if !defined(__OpenBSD__)
     pthread_attr_setscope(&pth_attrs, PTHREAD_SCOPE_SYSTEM);
+#endif
 
     if ((err = pthread_create (&this->video_thread,
 			       &pth_attrs, video_out_loop, this)) != 0) {
@


1.6
log
@Update to xine-lib 1.1.17 and disable win32 codecs. From Brad.
@
text
@d1 4
a4 4
$OpenBSD: patch-src_xine-engine_video_out_c,v 1.5 2008/01/15 00:36:46 jakemsr Exp $
--- src/xine-engine/video_out.c.orig	Mon Nov 30 20:33:30 2009
+++ src/xine-engine/video_out.c	Wed Dec  2 20:39:23 2009
@@@@ -1905,7 +1905,9 @@@@ xine_video_port_t *_x_vo_new_port (xine_t *xine, vo_dr
@


1.5
log
@update to 1.1.9.1

security fix: CVE-2008-0225 - heap-based buffer overflow in libreal (RTSP)

also incorporates post release bug fix in WMV decoding

from brad, thanks
@
text
@d1 3
a3 3
$OpenBSD: patch-src_xine-engine_video_out_c,v 1.4 2007/06/13 10:58:29 jakemsr Exp $
--- src/xine-engine/video_out.c.orig	Tue Jan  1 10:36:02 2008
+++ src/xine-engine/video_out.c	Wed Jan  9 01:50:22 2008
d6 1
a6 1
     
d11 1
a11 1
     
@


1.4
log
@update to xine-lib-1.1.7

- use some CONFIGURE_ENV instead of patching
- rearrange/update CONFIGURE_ARGS
- many patches no longer relevant
- add CD audio support

input, tetsing and prodding from brad@@
@
text
@d1 4
a4 4
$OpenBSD$
--- src/xine-engine/video_out.c.orig	Tue Apr 17 08:44:03 2007
+++ src/xine-engine/video_out.c	Sun May 20 22:40:14 2007
@@@@ -1864,7 +1864,9 @@@@ xine_video_port_t *_x_vo_new_port (xine_t *xine, vo_dr
@


1.3
log
@regen patches
@
text
@d1 4
a4 4
$OpenBSD: patch-src_xine-engine_video_out_c,v 1.2 2006/10/12 04:48:14 brad Exp $
--- src/xine-engine/video_out.c.orig	Sat Mar 25 02:26:34 2006
+++ src/xine-engine/video_out.c	Tue May  1 22:03:06 2007
@@@@ -1848,7 +1848,9 @@@@ xine_video_port_t *_x_vo_new_port (xine_t *xine, vo_dr
@


1.2
log
@upgrade to xine-lib 1.1.2

* Security fixes:
  - CVE-2006-2802: possible buffer overflow in the HTTP plugin.
  - possible buffer overflow via bad indexes in specially-crafted AVI files
* Fix a potential crash with fixed-size lacing in the Matroska demuxer
* Enable AMD64 mmx/sse support in some plugins (tvtime, libmpeg2, goom...)
* Fix xxmc subpictures (broken since 1.1.1)
* Add support for RealPlayer 10 codecs

WANTLIB tweak from bernd@@

testing by steven@@ and bernd@@
@
text
@d1 4
a4 4
$OpenBSD: patch-src_xine-engine_video_out_c,v 1.1.1.1 2006/03/24 22:43:41 jakemsr Exp $
--- src/xine-engine/video_out.c.orig	Fri Mar 24 20:26:34 2006
+++ src/xine-engine/video_out.c	Fri Sep 15 17:53:21 2006
@@@@ -1848,7 +1848,9 @@@@ xine_video_port_t *_x_vo_new_port (xine_
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- src/xine-engine/video_out.c.orig	Mon Nov 14 15:48:19 2005
+++ src/xine-engine/video_out.c	Mon Jan  9 20:55:41 2006
@@@@ -1839,7 +1839,9 @@@@ xine_video_port_t *_x_vo_new_port (xine_
@


1.1.1.1
log
@initial import of xine-lib

xine is a free multimedia player. It plays back CDs, DVDs, and VCDs. It
also decodes multimedia files like AVI, MOV, WMV, and MP3 from local
disk drives, and displays multimedia streamed over the Internet. It
interprets many of the most common multimedia formats available - and
some of the most uncommon formats, too.

prodded by jolan@@ and bernd@@

@
text
@@


1.1.1.1.2.1
log
@MFC:
upgrade to xine-lib 1.1.2

* Security fixes:
- CVE-2006-2802: possible buffer overflow in the HTTP plugin.
- possible buffer overflow via bad indexes in specially-crafted AVI files
* Fix a potential crash with fixed-size lacing in the Matroska demuxer
* Enable AMD64 mmx/sse support in some plugins (tvtime, libmpeg2, goom...)
* Fix xxmc subpictures (broken since 1.1.1)
* Add support for RealPlayer 10 codecs

WANTLIB tweak from bernd@@
@
text
@d1 4
a4 4
$OpenBSD: patch-src_xine-engine_video_out_c,v 1.2 2006/10/12 04:48:14 brad Exp $
--- src/xine-engine/video_out.c.orig	Fri Mar 24 20:26:34 2006
+++ src/xine-engine/video_out.c	Fri Sep 15 17:53:21 2006
@@@@ -1848,7 +1848,9 @@@@ xine_video_port_t *_x_vo_new_port (xine_
@

