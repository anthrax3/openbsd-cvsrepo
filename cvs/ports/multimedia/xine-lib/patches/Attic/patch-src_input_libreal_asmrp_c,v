head	1.4;
access;
symbols
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2007.06.13.10.58.29;	author jakemsr;	state dead;
branches;
next	1.3;

1.3
date	2007.05.01.20.05.10;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2007.01.02.19.42.59;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.07.09.21.01;	author steven;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.12.07.21.46.58;	author sturm;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2007.01.03.21.20.53;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to xine-lib-1.1.7

- use some CONFIGURE_ENV instead of patching
- rearrange/update CONFIGURE_ARGS
- many patches no longer relevant
- add CD audio support

input, tetsing and prodding from brad@@
@
text
@$OpenBSD: patch-src_input_libreal_asmrp_c,v 1.3 2007/05/01 20:05:10 naddy Exp $
--- src/input/libreal/asmrp.c.orig	Fri Aug 27 20:34:16 2004
+++ src/input/libreal/asmrp.c	Tue May  1 22:03:06 2007
@@@@ -37,6 +37,7 @@@@
 #include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
+#include "asmrp.h"
 
 #define LOG_MODULE "asmrp"
 #define LOG_VERBOSE
@@@@ -604,7 +605,7 @@@@ static int asmrp_rule (asmrp_t *p) {
   return ret;
 }
 
-static int asmrp_eval (asmrp_t *p, int *matches) {
+static int asmrp_eval (asmrp_t *p, int *matches, int matchsize) {
 
   int rule_num, num_matches;
 
@@@@ -613,13 +614,15 @@@@ static int asmrp_eval (asmrp_t *p, int *matches) {
   asmrp_get_sym (p);
 
   rule_num = 0; num_matches = 0;
-  while (p->sym != ASMRP_SYM_EOF) {
+  while (p->sym != ASMRP_SYM_EOF && num_matches < matchsize -1) {
 
     if (asmrp_rule (p)) {
       lprintf ("rule #%d is true\n", rule_num);
 
-      matches[num_matches] = rule_num;
-      num_matches++;
+      if(num_matches < MAX_RULEMATCHES - 1)
+        matches[num_matches++] = rule_num;
+      else
+        printf("Ignoring matched asm rule %d, too many matched rules.\n", rule_num);
     }
 
     rule_num++;
@@@@ -629,7 +632,7 @@@@ static int asmrp_eval (asmrp_t *p, int *matches) {
   return num_matches;
 }
 
-int asmrp_match (const char *rules, int bandwidth, int *matches) {
+int asmrp_match (const char *rules, int bandwidth, int *matches, int matchsize) {
 
   asmrp_t *p;
   int      num_matches;
@@@@ -641,7 +644,7 @@@@ int asmrp_match (const char *rules, int bandwidth, int
   asmrp_set_id (p, "Bandwidth", bandwidth);
   asmrp_set_id (p, "OldPNMPlayer", 0);
 
-  num_matches = asmrp_eval (p, matches);
+  num_matches = asmrp_eval (p, matches, matchsize);
 
   asmrp_dispose (p);
 
@


1.3
log
@regen patches
@
text
@d1 1
a1 1
$OpenBSD: patch-src_input_libreal_asmrp_c,v 1.2 2007/01/02 19:42:59 robert Exp $
@


1.2
log
@fix a buffer overflow found in the code used to handle RealMedia RTSP
streams; bump PKNAME;

from Brad <brad@@comstyle.com>
@
text
@d1 3
a3 3
$OpenBSD: patch-src_input_libreal_asmrp_c,v 1.1 2006/12/07 09:21:01 steven Exp $
--- src/input/libreal/asmrp.c.orig	Fri Aug 27 14:34:16 2004
+++ src/input/libreal/asmrp.c	Mon Jan  1 15:27:04 2007
d21 1
a21 1
@@@@ -613,13 +614,15 @@@@ static int asmrp_eval (asmrp_t *p, int *
d40 1
a40 1
@@@@ -629,7 +632,7 @@@@ static int asmrp_eval (asmrp_t *p, int *
d49 1
a49 1
@@@@ -641,7 +644,7 @@@@ int asmrp_match (const char *rules, int 
@


1.1
log
@Security fixes:
- Heap overflow in libmms (related to CVE-2006-2200)
- Buffer overrun in Real Media input plugin. [bug #1603458]
  Thanks to Roland Kay for reporting and JW for the patch.

from brad@@, tested by bernd@@ and me
@
text
@d1 12
a12 4
$OpenBSD$
--- src/input/libreal/asmrp.c.orig	Mon Dec  4 14:27:53 2006
+++ src/input/libreal/asmrp.c	Mon Dec  4 14:30:49 2006
@@@@ -604,7 +604,7 @@@@ static int asmrp_rule (asmrp_t *p) {
d21 1
a21 1
@@@@ -613,7 +613,7 @@@@ static int asmrp_eval (asmrp_t *p, int *
d30 11
a40 1
@@@@ -629,7 +629,7 @@@@ static int asmrp_eval (asmrp_t *p, int *
d49 1
a49 1
@@@@ -641,7 +641,7 @@@@ int asmrp_match (const char *rules, int 
@


1.1.2.1
log
@MFC:
Security fixes:
- Heap overflow in libmms (related to CVE-2006-2200)
- Buffer overrun in Real Media input plugin. [bug #1603458]
Thanks to Roland Kay for reporting and JW for the patch.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_input_libreal_asmrp_c,v 1.1 2006/12/07 09:21:01 steven Exp $
@


1.1.2.2
log
@MFC:
fix a buffer overflow found in the code used to handle RealMedia RTSP
streams; bump PKNAME;
@
text
@d1 4
a4 12
$OpenBSD: patch-src_input_libreal_asmrp_c,v 1.2 2007/01/02 19:42:59 robert Exp $
--- src/input/libreal/asmrp.c.orig	Fri Aug 27 14:34:16 2004
+++ src/input/libreal/asmrp.c	Mon Jan  1 15:27:04 2007
@@@@ -37,6 +37,7 @@@@
 #include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
+#include "asmrp.h"
 
 #define LOG_MODULE "asmrp"
 #define LOG_VERBOSE
@@@@ -604,7 +605,7 @@@@ static int asmrp_rule (asmrp_t *p) {
d13 1
a13 1
@@@@ -613,13 +614,15 @@@@ static int asmrp_eval (asmrp_t *p, int *
d22 1
a22 11
 
-      matches[num_matches] = rule_num;
-      num_matches++;
+      if(num_matches < MAX_RULEMATCHES - 1)
+        matches[num_matches++] = rule_num;
+      else
+        printf("Ignoring matched asm rule %d, too many matched rules.\n", rule_num);
     }
 
     rule_num++;
@@@@ -629,7 +632,7 @@@@ static int asmrp_eval (asmrp_t *p, int *
d31 1
a31 1
@@@@ -641,7 +644,7 @@@@ int asmrp_match (const char *rules, int 
@


