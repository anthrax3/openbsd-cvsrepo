head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.2;
locks; strict;
comment	@# @;


1.3
date	2017.01.19.00.31.42;	author ajacoutot;	state Exp;
branches
	1.3.2.1;
next	1.2;
commitid	7AGTdG6bUNTutHxj;

1.2
date	2012.06.10.07.35.30;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2012.04.07.05.48.49;	author ajacoutot;	state Exp;
branches;
next	;

1.3.2.1
date	2017.01.22.03.53.43;	author ajacoutot;	state Exp;
branches;
next	;
commitid	CozkuJdUH9ySlyJA;


desc
@@


1.3
log
@memcpy: fix segfault in times(NULL).

from Brad (maintainer)
@
text
@$OpenBSD$

memcpy: fix segfault in times(NULL)

--- src/xine-utils/memcpy.c.orig	Wed Jan 18 06:13:19 2017
+++ src/xine-utils/memcpy.c	Wed Jan 18 06:13:59 2017
@@@@ -533,7 +533,8 @@@@ static int64_t rdtsc(int config_flags)
     __asm__ volatile (".byte 0x0f, 0x31" : "=A" (x));
     return x;
   } else {
-    return times(NULL);
+    struct tms tp;
+    return times(&tp);
   }
 }
 #else
@


1.3.2.1
log
@MFC:
memcpy: fix segfault in times(NULL).

prodded by Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_xine-utils_memcpy_c,v 1.3 2017/01/19 00:31:42 ajacoutot Exp $
@


1.2
log
@Update to stable, xine-lib-1.1.21.

from Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_xine-utils_memcpy_c,v 1.1 2012/04/07 05:48:49 ajacoutot Exp $
d3 1
a3 1
Use POSIX timers where available for determining which memcpy method to use.
d5 12
a16 35
--- src/xine-utils/memcpy.c.orig	Fri Feb 17 23:29:00 2012
+++ src/xine-utils/memcpy.c	Fri Feb 17 23:29:07 2012
@@@@ -408,7 +408,18 @@@@ static struct {
   { NULL, NULL, 0, 0 }
 };
 
-#if (defined(ARCH_X86) || defined(ARCH_X86_64)) && defined(HAVE_SYS_TIMES_H)
+#ifdef HAVE_POSIX_TIMERS
+/* Prefer clock_gettime() where available. */
+static int64_t _x_gettime(void)
+{
+  struct timespec tm;
+  return (clock_gettime (CLOCK_THREAD_CPUTIME_ID, &tm) == -1)
+       ? times (NULL)
+       : (int64_t)tm.tv_sec * 1e9 + tm.tv_nsec;
+}
+#  define rdtsc(x) _x_gettime()
+
+#elif (defined(ARCH_X86) || defined(ARCH_X86_64)) && defined(HAVE_SYS_TIMES_H)
 static int64_t rdtsc(int config_flags)
 {
   int64_t x;
@@@@ -510,6 +521,12 @@@@ void xine_probe_fast_memcpy(xine_t *xine)
   /* make sure buffers are present on physical memory */
   memset(buf1,0,BUFSIZE);
   memset(buf2,0,BUFSIZE);
+
+  /* some initial activity to ensure that we're not running slowly :-) */
+  for(j=0;j<50;j++) {
+    memcpy_method[1].function(buf2,buf1,BUFSIZE);
+    memcpy_method[1].function(buf1,buf2,BUFSIZE);
+  }
 
   for(i=1; memcpy_method[i].name; i++)
   {
@


1.1
log
@Bring a bunch of bugfixes from upstream.

from Brad
@
text
@d1 1
a1 1
$OpenBSD$
@

