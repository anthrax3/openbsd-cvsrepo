head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.6
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	sthen_20121010:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2015.10.13.10.34.00;	author sthen;	state Exp;
branches;
next	1.6;
commitid	YT5n6YS8po9Up6v3;

1.6
date	2015.09.11.09.51.12;	author sthen;	state Exp;
branches;
next	1.5;
commitid	VsU8l8YUUQw8T9Fs;

1.5
date	2015.09.11.09.16.23;	author sthen;	state dead;
branches;
next	1.4;
commitid	QQm7O2NbCQpzYgSl;

1.4
date	2015.07.23.16.29.02;	author sthen;	state Exp;
branches;
next	1.3;
commitid	E1GWadCNWnvzxVjh;

1.3
date	2015.07.16.21.46.54;	author sthen;	state Exp;
branches;
next	1.2;
commitid	UNnXiAL9mQfArHJf;

1.2
date	2013.05.07.20.37.23;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2012.10.10.10.45.05;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.10.10.10.45.05;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update the minidlna port to use a newer version of the 'rescan' patch
@
text
@$OpenBSD$

Support -r for incremental rescan
http://sourceforge.net/p/minidlna/patches/145/

--- minidlna.c.orig	Thu Sep 10 20:24:09 2015
+++ minidlna.c	Tue Oct 13 11:23:03 2015
@@@@ -351,12 +351,13 @@@@ check_db(sqlite3 *db, int new_db, pid_t *scanner_pid)
 	if (ret != 0)
 	{
 rescan:
+		rescan_db = 0;
 		if (ret < 0)
 			DPRINTF(E_WARN, L_GENERAL, "Creating new database at %s/files.db\n", db_path);
 		else if (ret == 1)
-			DPRINTF(E_WARN, L_GENERAL, "New media_dir detected; rescanning...\n");
+			DPRINTF(E_WARN, L_GENERAL, "New media_dir detected; rebuilding...\n");
 		else if (ret == 2)
-			DPRINTF(E_WARN, L_GENERAL, "Removed media_dir detected; rescanning...\n");
+			DPRINTF(E_WARN, L_GENERAL, "Removed media_dir detected; rebuilding...\n");
 		else
 			DPRINTF(E_WARN, L_GENERAL, "Database version mismatch (%d=>%d); need to recreate...\n",
 				ret, DB_VERSION);
@@@@ -369,6 +370,9 @@@@ rescan:
 		open_db(&db);
 		if (CreateDatabase() != 0)
 			DPRINTF(E_FATAL, L_GENERAL, "ERROR: Failed to create sqlite database!  Exiting...\n");
+	}
+	if (ret != 0 || rescan_db == 1)
+	{
 #if USE_FORK
 		scanning = 1;
 		sqlite3_close(db);
@@@@ -837,6 +841,9 @@@@ init(int argc, char **argv)
 		case 'h':
 			runtime_vars.port = -1; // triggers help display
 			break;
+		case 'r':
+			rescan_db = 1;
+			break;
 		case 'R':
 			snprintf(buf, sizeof(buf), "rm -rf %s/files.db %s/art_cache", db_path, db_path);
 			if (system(buf) != 0)
@@@@ -883,9 +890,9 @@@@ init(int argc, char **argv)
 			"\t\t[-t notify_interval] [-P pid_filename]\n"
 			"\t\t[-s serial] [-m model_number]\n"
 #ifdef __linux__
-			"\t\t[-w url] [-R] [-L] [-S] [-V] [-h]\n"
+			"\t\t[-w url] [-r] [-R] [-L] [-S] [-V] [-h]\n"
 #else
-			"\t\t[-w url] [-R] [-L] [-V] [-h]\n"
+			"\t\t[-w url] [-r] [-R] [-L] [-V] [-h]\n"
 #endif
 			"\nNotes:\n\tNotify interval is in seconds. Default is 895 seconds.\n"
 			"\tDefault pid file is %s.\n"
@@@@ -893,7 +900,8 @@@@ init(int argc, char **argv)
 			"\t-w sets the presentation url. Default is http address on port 80\n"
 			"\t-v enables verbose output\n"
 			"\t-h displays this text\n"
-			"\t-R forces a full rescan\n"
+			"\t-r forces a rescan\n"
+			"\t-R forces a rebuild\n"
 			"\t-L do not create playlists\n"
 #ifdef __linux__
 			"\t-S changes behaviour for systemd\n"
@


1.6
log
@Add the patchset from https://sourceforge.net/p/minidlna/patches/145/ to
support incremental rescans with the -r flag.
@
text
@d6 2
a7 2
--- minidlna.c.orig	Thu Sep 10 21:24:09 2015
+++ minidlna.c	Fri Sep 11 11:43:37 2015
d12 1
a12 1
+	  	rescan_db = 0;
@


1.5
log
@update to minidlna-1.1.5
@
text
@d1 1
a1 1
$OpenBSD: patch-minidlna_c,v 1.4 2015/07/23 16:29:02 sthen Exp $
d3 2
a4 3
Fix missing address in location string sent to minissdpd
http://miniupnp.tuxfamily.org/forum/viewtopic.php?p=4413
http://sourceforge.net/p/minidlna/patches/151/
d6 4
a9 4
--- minidlna.c.orig	Thu Jul 16 15:44:22 2015
+++ minidlna.c	Thu Jul 16 15:44:58 2015
@@@@ -1055,6 +1055,7 @@@@ main(int argc, char **argv)
 	if (sssdp < 0)
d11 55
a65 5
 		DPRINTF(E_INFO, L_GENERAL, "Failed to open socket for receiving SSDP. Trying to use MiniSSDPd\n");
+		reload_ifaces(0);	/* populate lan_addr[0].str */
 		if (SubmitServicesToMiniSSDPD(lan_addr[0].str, runtime_vars.port) < 0)
 			DPRINTF(E_FATAL, L_GENERAL, "Failed to connect to MiniSSDPd. EXITING");
 	}
@


1.4
log
@Add link to upstream bug report, no package change. From Daniel LEVAI.
@
text
@d1 1
a1 1
$OpenBSD: patch-minidlna_c,v 1.3 2015/07/16 21:46:54 sthen Exp $
@


1.3
log
@fix address sent to ssdp; reported by Daniel LEVAI, patch from
http://miniupnp.tuxfamily.org/forum/viewtopic.php?p=4413
@
text
@d1 1
a1 1
$OpenBSD$
d5 1
@


1.2
log
@update to MiniDLNA 1.1.0, rolling in a bunch of patches which have been committed upstream
@
text
@d1 9
a9 34
$OpenBSD: patch-minidlna_c,v 1.1 2012/10/10 10:45:05 sthen Exp $
--- minidlna.c.orig	Tue May  8 01:10:42 2012
+++ minidlna.c	Sat Sep 22 01:29:04 2012
@@@@ -46,6 +46,7 @@@@
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  * POSSIBILITY OF SUCH DAMAGE.
  */
+#include <sys/stat.h>
 #include <stdlib.h>
 #include <unistd.h>
 #include <string.h>
@@@@ -85,7 +86,9 @@@@
 #include "daemonize.h"
 #include "upnpevents.h"
 #include "scanner.h"
+#ifdef __linux__
 #include "inotify.h"
+#endif
 #include "log.h"
 #ifdef TIVO_SUPPORT
 #include "tivo_beacon.h"
@@@@ -960,11 +963,13 @@@@ main(int argc, char * * argv)
 #endif
 	}
 	signal(SIGCHLD, SIG_IGN);
+#if defined(__linux__)
 	if( sqlite3_threadsafe() && sqlite3_libversion_number() >= 3005001 &&
 	    GETFLAG(INOTIFY_MASK) && pthread_create(&inotify_thread, NULL, start_inotify, NULL) )
 	{
 		DPRINTF(E_FATAL, L_GENERAL, "ERROR: pthread_create() failed for start_inotify.\n");
 	}
+#endif
 
 	for( i = 0; i < n_lan_addr; i++ )
d11 4
a14 2
@@@@ -972,6 +977,7 @@@@ main(int argc, char * * argv)
 		        lan_addr[i].str, inet_ntoa(lan_addr[i].mask));
a15 5
 
+// freebsd does this:-	sudp = OpenAndConfSSDPReceiveSocket();
 	sudp = OpenAndConfSSDPReceiveSocket(n_lan_addr, lan_addr);
 	if(sudp < 0)
 	{
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import ports/multimedia/minidlna, ok/testing landry@@

MiniDLNA is lightweight server software written in C, capable of
serving media files to DLNA/UPnP-AV clients (televisions, tablets,
etc).
@
text
@@
