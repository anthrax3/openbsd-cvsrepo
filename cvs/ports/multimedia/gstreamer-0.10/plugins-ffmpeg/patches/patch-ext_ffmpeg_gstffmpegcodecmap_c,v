head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.16
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.14
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.10
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.12
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.8
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	yeah:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2013.03.27.11.41.11;	author brad;	state Exp;
branches;
next	1.6;

1.6
date	2012.03.03.10.33.42;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.26.22.39.02;	author jakemsr;	state dead;
branches;
next	1.4;

1.4
date	2009.01.24.12.39.11;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2008.07.09.02.22.59;	author jakemsr;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.05.02.38.56;	author deanna;	state dead;
branches;
next	1.1;

1.1
date	2008.05.13.15.34.02;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.05.13.15.34.02;	author espie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@More fixes from upstream..

- Don't flush buffers on DISCONT.
- Channel layouts are now set for DTS and (E)AC3 by libav.
- Add support for 10-bit YUV color formats.
- Add decode support for prores.

ok ajacoutot@@
@
text
@$OpenBSD: patch-ext_ffmpeg_gstffmpegcodecmap_c,v 1.6 2012/03/03 10:33:42 ajacoutot Exp $

From upstream:
- Channel layouts are now set for DTS and (E)AC3 by libav.
- Add mapping for Indeo 4 video codec.
- Add support for 10-bit YUV color formats.
- Add decode support for prores.

--- ext/ffmpeg/gstffmpegcodecmap.c.orig	Mon Oct 31 06:14:03 2011
+++ ext/ffmpeg/gstffmpegcodecmap.c	Mon Mar 25 22:41:45 2013
@@@@ -340,25 +340,6 @@@@ gst_ff_aud_caps_new (AVCodecContext * context, enum Co
     GstAudioChannelPosition *pos;
     guint64 channel_layout = context->channel_layout;
 
-    if (channel_layout == 0) {
-      const guint64 default_channel_set[] = {
-        0, 0, CH_LAYOUT_SURROUND, CH_LAYOUT_QUAD, CH_LAYOUT_5POINT0,
-        CH_LAYOUT_5POINT1, 0, CH_LAYOUT_7POINT1
-      };
-
-      switch (codec_id) {
-        case CODEC_ID_EAC3:
-        case CODEC_ID_AC3:
-        case CODEC_ID_DTS:
-          if (context->channels > 0
-              && context->channels < G_N_ELEMENTS (default_channel_set))
-            channel_layout = default_channel_set[context->channels - 1];
-          break;
-        default:
-          break;
-      }
-    }
-
     caps = gst_caps_new_simple (mimetype,
         "rate", G_TYPE_INT, context->sample_rate,
         "channels", G_TYPE_INT, context->channels, NULL);
@@@@ -925,6 +906,11 @@@@ gst_ffmpeg_codecid_to_caps (enum CodecID codec_id,
           "indeoversion", G_TYPE_INT, 5, NULL);
       break;
 
+    case CODEC_ID_INDEO4:
+      caps = gst_ff_vid_caps_new (context, codec_id, "video/x-indeo",
+          "indeoversion", G_TYPE_INT, 4, NULL);
+      break;
+
     case CODEC_ID_INDEO3:
       caps = gst_ff_vid_caps_new (context, codec_id, "video/x-indeo",
           "indeoversion", G_TYPE_INT, 3, NULL);
@@@@ -1214,6 +1200,11 @@@@ gst_ffmpeg_codecid_to_caps (enum CodecID codec_id,
       caps = gst_ff_vid_caps_new (context, codec_id, "video/x-dnxhd", NULL);
       break;
 
+    case CODEC_ID_PRORES:
+      caps =
+          gst_ff_vid_caps_new (context, codec_id, encode, "video/x-prores",
+          NULL);
+
     case CODEC_ID_MIMIC:
       caps = gst_ff_vid_caps_new (context, codec_id, "video/x-mimic", NULL);
       break;
@@@@ -1775,6 +1766,24 @@@@ gst_ffmpeg_pixfmt_to_caps (enum PixelFormat pix_fmt, A
     case PIX_FMT_YUV411P:
       fmt = GST_MAKE_FOURCC ('Y', '4', '1', 'B');
       break;
+    case PIX_FMT_YUV420P10BE:
+      fmt = GST_MAKE_FOURCC ('D', '4', '2', '0');
+      break;
+    case PIX_FMT_YUV420P10LE:
+      fmt = GST_MAKE_FOURCC ('d', '4', '2', '0');
+      break;
+    case PIX_FMT_YUV422P10BE:
+      fmt = GST_MAKE_FOURCC ('D', '4', '2', '2');
+      break;
+    case PIX_FMT_YUV422P10LE:
+      fmt = GST_MAKE_FOURCC ('d', '4', '2', '2');
+      break;
+    case PIX_FMT_YUV444P10BE:
+      fmt = GST_MAKE_FOURCC ('D', '4', '4', '4');
+      break;
+    case PIX_FMT_YUV444P10LE:
+      fmt = GST_MAKE_FOURCC ('d', '4', '4', '4');
+      break;
     case PIX_FMT_RGB565:
       bpp = depth = 16;
       endianness = G_BYTE_ORDER;
@@@@ -2146,11 +2155,27 @@@@ gst_ffmpeg_caps_to_pixfmt (const GstCaps * caps,
         case GST_MAKE_FOURCC ('Y', 'U', 'V', '9'):
           context->pix_fmt = PIX_FMT_YUV410P;
           break;
-#if 0
-        case FIXME:
+        case GST_MAKE_FOURCC ('Y', '4', '4', '4'):
           context->pix_fmt = PIX_FMT_YUV444P;
           break;
-#endif
+        case GST_MAKE_FOURCC ('D', '4', '2', '0'):
+          context->pix_fmt = PIX_FMT_YUV420P10BE;
+          break;
+        case GST_MAKE_FOURCC ('d', '4', '2', '0'):
+          context->pix_fmt = PIX_FMT_YUV420P10LE;
+          break;
+        case GST_MAKE_FOURCC ('D', '4', '2', '2'):
+          context->pix_fmt = PIX_FMT_YUV422P10BE;
+          break;
+        case GST_MAKE_FOURCC ('d', '4', '2', '2'):
+          context->pix_fmt = PIX_FMT_YUV422P10BE;
+          break;
+        case GST_MAKE_FOURCC ('D', '4', '4', '4'):
+          context->pix_fmt = PIX_FMT_YUV444P10BE;
+          break;
+        case GST_MAKE_FOURCC ('d', '4', '4', '4'):
+          context->pix_fmt = PIX_FMT_YUV444P10BE;
+          break;
       }
     }
   } else if (strcmp (gst_structure_get_name (structure),
@@@@ -3180,6 +3205,9 @@@@ gst_ffmpeg_caps_to_codecid (const GstCaps * caps, AVCo
       switch (indeoversion) {
         case 5:
           id = CODEC_ID_INDEO5;
+          break;
+        case 4:
+          id = CODEC_ID_INDEO4;
           break;
         case 3:
           id = CODEC_ID_INDEO3;
@


1.6
log
@Two fixes from upstream:
- Add mapping for Indeo 4 video codec.
- Only slice-threading (causes less latency).

from Brad
@
text
@d1 1
a1 1
$OpenBSD$
d3 5
a7 1
From upstream: add mapping for Indeo 4 video codec.
d10 28
a37 2
+++ ext/ffmpeg/gstffmpegcodecmap.c	Fri Mar  2 17:20:56 2012
@@@@ -925,6 +925,11 @@@@ gst_ffmpeg_codecid_to_caps (enum CodecID codec_id,
d49 69
a117 1
@@@@ -3180,6 +3185,9 @@@@ gst_ffmpeg_caps_to_codecid (const GstCaps * caps, AVCo
@


1.5
log
@update to gst-ffmpeg-0.10.10
for compatability with newer ffmpeg
@
text
@d1 9
a9 14
$OpenBSD: patch-ext_ffmpeg_gstffmpegcodecmap_c,v 1.4 2009/01/24 12:39:11 ajacoutot Exp $
--- ext/ffmpeg/gstffmpegcodecmap.c.orig	Sat Jan 24 12:24:37 2009
+++ ext/ffmpeg/gstffmpegcodecmap.c	Sat Jan 24 12:25:50 2009
@@@@ -26,7 +26,8 @@@@
 #ifdef HAVE_FFMPEG_UNINSTALLED
 #include <avcodec.h>
 #else
-#include <ffmpeg/avcodec.h>
+#include <libswscale/swscale.h>
+#include <libavcodec/avcodec.h>
 #endif
 #include <string.h>
 
@@@@ -360,6 +361,10 @@@@ gst_ffmpeg_codecid_to_caps (enum CodecID codec_id,
d11 3
a13 2
     case CODEC_ID_DTS:
       caps = gst_ff_aud_caps_new (context, codec_id, "audio/x-dts", NULL);
d16 13
a28 5
+    case CODEC_ID_VORBIS:
+      caps = gst_ff_aud_caps_new (context, codec_id, "audio/x-vorbis", NULL);
       break;
 
     case CODEC_ID_APE:
@


1.4
log
@- unbreak by updating to a more recent version

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-ext_ffmpeg_gstffmpegcodecmap_c,v 1.3 2008/07/09 02:22:59 jakemsr Exp $
@


1.3
log
@
* FFmpeg headers moved
* FFmpeg LIB_DEPENDS/WANTLIB changes
* make PKGNAME consistent with other gstreamer packages
* bump patch level and add @@conflict marker to ease updates

feedback ajacoutot@@ and brad@@, ok brad@@
@
text
@d1 5
a5 4
$OpenBSD$
--- ext/ffmpeg/gstffmpegcodecmap.c.orig	Mon May 19 12:58:09 2008
+++ ext/ffmpeg/gstffmpegcodecmap.c	Fri Jun 27 17:59:27 2008
@@@@ -27,8 +27,8 @@@@
a6 1
 #include <libswscale/swscale.h>
a7 1
-#include <ffmpeg/swscale.h>
d14 3
a16 1
@@@@ -326,6 +326,10 @@@@ gst_ffmpeg_codecid_to_caps (enum CodecID codec_id,
d18 4
a23 4
+    case CODEC_ID_VORBIS:
+      caps = gst_ff_aud_caps_new (context, codec_id, "audio/x-vorbis", NULL);
+      break;
+
a24 15
       caps =
           gst_ff_aud_caps_new (context, codec_id, "audio/x-ffmpeg-parsed-ape",
@@@@ -3306,10 +3310,10 @@@@ gst_ffmpeg_img_convert (AVPicture * dst, int dst_pix_f
   struct SwsContext *ctx;
   int res;
 
-  ctx = sws_getContext (src_width, src_height, src_pix_fmt, src_width, src_height, dst_pix_fmt, 2,      /* flags : bicubic */
+  ctx = sws_getContext (src_width, src_height, src_pix_fmt, src_width, src_height, dst_pix_fmt, 0,      /* flags : bicubic */
       NULL, NULL, NULL);
   res = sws_scale (ctx, (uint8_t **) src->data, (int *) src->linesize,
-      2, src_width, dst->data, dst->linesize);
+      0, src_height, dst->data, dst->linesize);
   sws_freeContext (ctx);
   return res;
 }
@


1.2
log
@Update to 0.10.4.

ok espie@@
@
text
@d1 16
a16 5
$OpenBSD: patch-ext_ffmpeg_gstffmpegcodecmap_c,v 1.1 2008/05/13 15:34:02 espie Exp $
--- ext/ffmpeg/gstffmpegcodecmap.c.orig	Tue May 13 17:01:09 2008
+++ ext/ffmpeg/gstffmpegcodecmap.c	Tue May 13 17:01:18 2008
@@@@ -558,7 +558,7 @@@@ gst_ffmpeg_codecid_to_caps (enum CodecID codec_id,
       caps = gst_ff_vid_caps_new (context, codec_id, "video/x-theora", NULL);
d19 20
a38 14
-    case CODEC_ID_AAC:
+    //case CODEC_ID_AAC:
     case CODEC_ID_MPEG4AAC:
       caps = gst_ff_aud_caps_new (context, codec_id, "audio/mpeg",
           "mpegversion", G_TYPE_INT, 4, NULL);
@@@@ -2570,7 +2570,7 @@@@ gst_ffmpeg_get_codecid_longname (enum CodecID codec_id
     case CODEC_ID_THEORA:
       name = "Theora video";
       break;
-    case CODEC_ID_AAC:
+    //case CODEC_ID_AAC:
     case CODEC_ID_MPEG4AAC:
       name = "MPEG-2/4 AAC audio";
       break;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@yeah, the gstreamer people finally made it possible to use the system
ffmpeg.

Note that their fuzzy warnings don't apply to us. This is so stupid.
Between the ffmpeg people, who only care for performance to the exclusion
of any sense (like, good luck making it work elsewhere), and the gstreamer
people, who don't care that stuff won't work elsewhere.
@
text
@@
