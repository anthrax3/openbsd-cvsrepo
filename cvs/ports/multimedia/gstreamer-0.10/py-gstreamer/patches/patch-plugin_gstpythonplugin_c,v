head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.22
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.20
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.18
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.14
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.16
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.12
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.10
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.8
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.02.21.15.26.58;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Load libutil along with libpython to prevent undefined symbols from
openpty().
@
text
@$OpenBSD$

Needed for loading libgstpython.so:
/usr/local/lib/libpythonX.Y.so.X.Y: undefined symbol 'forkpty'

--- plugin/gstpythonplugin.c.orig	Tue Feb 21 16:02:27 2012
+++ plugin/gstpythonplugin.c	Tue Feb 21 16:00:32 2012
@@@@ -346,7 +348,7 @@@@ plugin_init (GstPlugin * plugin)
   PyGILState_STATE state;
   PyObject *gst, *dict, *pyplugin;
   gboolean we_initialized = FALSE;
-  GModule *libpython;
+  GModule *libpython, *libutil;
   gpointer has_python = NULL;
 
   GST_DEBUG_CATEGORY_INIT (pyplugindebug, "pyplugin", 0,
@@@@ -364,6 +366,13 @@@@ plugin_init (GstPlugin * plugin)
   if (has_python) {
     GST_LOG ("libpython is already loaded");
   } else {
+    GST_LOG ("loading libutil");
+    libutil = g_module_open ("libutil.so", 0);
+    if (!libutil) {
+      GST_WARNING ("Couldn't g_module_open libutil. Reason: %s",
+          g_module_error ());
+      return FALSE;
+    }
     GST_LOG ("loading libpython");
     libpython =
         g_module_open (PY_LIB_LOC "/libpython" PYTHON_VERSION "."
@
