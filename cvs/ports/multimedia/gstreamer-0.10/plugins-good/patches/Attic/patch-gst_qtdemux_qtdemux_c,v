head	1.2;
access;
symbols
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2009.11.29.09.17.38;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2009.01.26.12.32.43;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Major update to GStreamer plugins-good 0.10.17.
Months (years?) of changes, refer to the source for changelog.

Simplify DESCR.
Remove -esd subpackage (idea from landry, and ok espie@@ naddy@@)
Remove sunaudio support (solaris) and enable ossaudio to have mixing
capabilities (audio still handled with sndio by default).

tested on a bulk by jasper@@
feedback and sparc64+macppc testing from landry@@

"commitski" jasper, ok landry@@
@
text
@$OpenBSD: patch-gst_qtdemux_qtdemux_c,v 1.1 2009/01/26 12:32:43 jasper Exp $

Security fix for SA33650, which could lead to heap based overflows and memory corruption.
http://secunia.com/advisories/33650/

Patch taken from upstream git:
http://cgit.freedesktop.org/gstreamer/gst-plugins-good/commit/?id=bdc20b9baf13564d9a061343416395f8f9a92b53

--- gst/qtdemux/qtdemux.c.orig	Mon Jan 26 13:04:23 2009
+++ gst/qtdemux/qtdemux.c	Mon Jan 26 13:06:26 2009
@@@@ -2842,13 +2842,13 @@@@ qtdemux_parse_samples (GstQTDemux * qtdemux, QtDemuxSt
     stream->min_duration = 0;
     time = 0;
     index = 0;
-    for (i = 0; i < n_sample_times; i++) {
+    for (i = 0; (i < n_sample_times) && (index < stream->n_samples); i++) {
       guint32 n;
       guint32 duration;
 
       n = QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i);
       duration = QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i + 4);
-      for (j = 0; j < n; j++) {
+      for (j = 0; (j < n) && (index < stream->n_samples); j++) {
         GST_DEBUG_OBJECT (qtdemux, "sample %d: timestamp %" GST_TIME_FORMAT,
             index, GST_TIME_ARGS (timestamp));
 
@@@@ -2876,7 +2876,7 @@@@ qtdemux_parse_samples (GstQTDemux * qtdemux, QtDemuxSt
         for (i = 0; i < n_sample_syncs; i++) {
           /* note that the first sample is index 1, not 0 */
           index = QT_UINT32 ((guint8 *) stss->data + offset);
-          if (index > 0) {
+          if (index > 0 && index <= stream->n_samples) {
             samples[index - 1].keyframe = TRUE;
             offset += 4;
           }
@@@@ -2975,7 +2975,7 @@@@ qtdemux_parse_samples (GstQTDemux * qtdemux, QtDemuxSt
     for (i = 0, j = 0; (j < stream->n_samples) && (i < n_entries); i++) {
       count = QT_UINT32 (ctts_data + 16 + i * 8);
       soffset = QT_UINT32 (ctts_data + 20 + i * 8);
-      for (k = 0; k < count; k++, j++) {
+      for (k = 0; (k < count) && (j < stream->n_samples); k++, j++) {
         /* we operate with very small soffset values here, it shouldn't overflow */
         samples[j].pts_offset = soffset * GST_SECOND / stream->timescale;
       }
@


1.1
log
@- roll in a SECURITY FIX for SA33650,
which could lead to heap based overflows and memory corruption.

patch taken from upstream git.

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
@

