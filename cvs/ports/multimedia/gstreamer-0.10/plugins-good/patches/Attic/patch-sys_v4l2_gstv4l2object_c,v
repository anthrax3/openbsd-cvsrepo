head	1.6;
access;
symbols
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2014.10.23.23.20.07;	author brad;	state dead;
branches;
next	1.5;
commitid	gny9wDO4hVeC4Brg;

1.5
date	2012.02.21.08.46.08;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.15.08.32.09;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.07.19.44.35;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.02.14.04.49;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.12.22.33.57;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove V4L2 anonymous unions workaround patch.

Diff sent to the MAINTAINER but it sounds like he is possibly
away travelling so put it in so it still builds.
@
text
@$OpenBSD: patch-sys_v4l2_gstv4l2object_c,v 1.5 2012/02/21 08:46:08 ajacoutot Exp $

No more anonymous unions in video(4).

--- sys/v4l2/gstv4l2object.c.orig	Fri Dec 30 14:59:13 2011
+++ sys/v4l2/gstv4l2object.c	Tue Feb 21 09:20:10 2012
@@@@ -1588,8 +1588,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
     g_value_init (&rate, GST_TYPE_FRACTION);
 
     do {
-      num = ival.discrete.numerator;
-      denom = ival.discrete.denominator;
+      num = ival.un.discrete.numerator;
+      denom = ival.un.discrete.denominator;
 
       if (num > G_MAXINT || denom > G_MAXINT) {
         /* let us hope we don't get here... */
@@@@ -1621,8 +1621,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
     g_value_init (&max, GST_TYPE_FRACTION);
 
     /* get the min */
-    minnum = ival.stepwise.min.numerator;
-    mindenom = ival.stepwise.min.denominator;
+    minnum = ival.un.stepwise.min.numerator;
+    mindenom = ival.un.stepwise.min.denominator;
     if (minnum > G_MAXINT || mindenom > G_MAXINT) {
       minnum >>= 1;
       mindenom >>= 1;
@@@@ -1632,8 +1632,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
     gst_value_set_fraction (&min, minnum, mindenom);
 
     /* get the max */
-    maxnum = ival.stepwise.max.numerator;
-    maxdenom = ival.stepwise.max.denominator;
+    maxnum = ival.un.stepwise.max.numerator;
+    maxdenom = ival.un.stepwise.max.denominator;
     if (maxnum > G_MAXINT || maxdenom > G_MAXINT) {
       maxnum >>= 1;
       maxdenom >>= 1;
@@@@ -1644,8 +1644,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
     gst_value_set_fraction (&max, maxnum, maxdenom);
 
     /* get the step */
-    num = ival.stepwise.step.numerator;
-    denom = ival.stepwise.step.denominator;
+    num = ival.un.stepwise.step.numerator;
+    denom = ival.un.stepwise.step.denominator;
     if (num > G_MAXINT || denom > G_MAXINT) {
       num >>= 1;
       denom >>= 1;
@@@@ -1696,15 +1696,15 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
 
     g_value_init (&rates, GST_TYPE_FRACTION_RANGE);
 
-    num = ival.stepwise.min.numerator;
-    denom = ival.stepwise.min.denominator;
+    num = ival.un.stepwise.min.numerator;
+    denom = ival.un.stepwise.min.denominator;
     if (num > G_MAXINT || denom > G_MAXINT) {
       num >>= 1;
       denom >>= 1;
     }
 
-    maxnum = ival.stepwise.max.numerator;
-    maxdenom = ival.stepwise.max.denominator;
+    maxnum = ival.un.stepwise.max.numerator;
+    maxdenom = ival.un.stepwise.max.denominator;
     if (maxnum > G_MAXINT || maxdenom > G_MAXINT) {
       maxnum >>= 1;
       maxdenom >>= 1;
@@@@ -1800,10 +1800,10 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
   if (size.type == V4L2_FRMSIZE_TYPE_DISCRETE) {
     do {
       GST_LOG_OBJECT (v4l2object->element, "got discrete frame size %dx%d",
-          size.discrete.width, size.discrete.height);
+          size.un.discrete.width, size.un.discrete.height);
 
-      w = MIN (size.discrete.width, G_MAXINT);
-      h = MIN (size.discrete.height, G_MAXINT);
+      w = MIN (size.un.discrete.width, G_MAXINT);
+      h = MIN (size.un.discrete.height, G_MAXINT);
 
       if (w && h) {
         tmp =
@@@@ -1821,21 +1821,21 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
   } else if (size.type == V4L2_FRMSIZE_TYPE_STEPWISE) {
     GST_DEBUG_OBJECT (v4l2object->element, "we have stepwise frame sizes:");
     GST_DEBUG_OBJECT (v4l2object->element, "min width:   %d",
-        size.stepwise.min_width);
+        size.un.stepwise.min_width);
     GST_DEBUG_OBJECT (v4l2object->element, "min height:  %d",
-        size.stepwise.min_height);
+        size.un.stepwise.min_height);
     GST_DEBUG_OBJECT (v4l2object->element, "max width:   %d",
-        size.stepwise.max_width);
+        size.un.stepwise.max_width);
     GST_DEBUG_OBJECT (v4l2object->element, "min height:  %d",
-        size.stepwise.max_height);
+        size.un.stepwise.max_height);
     GST_DEBUG_OBJECT (v4l2object->element, "step width:  %d",
-        size.stepwise.step_width);
+        size.un.stepwise.step_width);
     GST_DEBUG_OBJECT (v4l2object->element, "step height: %d",
-        size.stepwise.step_height);
+        size.un.stepwise.step_height);
 
-    for (w = size.stepwise.min_width, h = size.stepwise.min_height;
-        w <= size.stepwise.max_width && h <= size.stepwise.max_height;
-        w += size.stepwise.step_width, h += size.stepwise.step_height) {
+    for (w = size.un.stepwise.min_width, h = size.un.stepwise.min_height;
+        w <= size.un.stepwise.max_width && h <= size.un.stepwise.max_height;
+        w += size.un.stepwise.step_width, h += size.un.stepwise.step_height) {
       if (w == 0 || h == 0)
         continue;
 
@@@@ -1853,18 +1853,18 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
 
     GST_DEBUG_OBJECT (v4l2object->element, "we have continuous frame sizes:");
     GST_DEBUG_OBJECT (v4l2object->element, "min width:   %d",
-        size.stepwise.min_width);
+        size.un.stepwise.min_width);
     GST_DEBUG_OBJECT (v4l2object->element, "min height:  %d",
-        size.stepwise.min_height);
+        size.un.stepwise.min_height);
     GST_DEBUG_OBJECT (v4l2object->element, "max width:   %d",
-        size.stepwise.max_width);
+        size.un.stepwise.max_width);
     GST_DEBUG_OBJECT (v4l2object->element, "min height:  %d",
-        size.stepwise.max_height);
+        size.un.stepwise.max_height);
 
-    w = MAX (size.stepwise.min_width, 1);
-    h = MAX (size.stepwise.min_height, 1);
-    maxw = MIN (size.stepwise.max_width, G_MAXINT);
-    maxh = MIN (size.stepwise.max_height, G_MAXINT);
+    w = MAX (size.un.stepwise.min_width, 1);
+    h = MAX (size.un.stepwise.min_height, 1);
+    maxw = MIN (size.un.stepwise.max_width, G_MAXINT);
+    maxh = MIN (size.un.stepwise.max_height, G_MAXINT);
 
     tmp =
         gst_v4l2_object_probe_caps_for_format_and_size (v4l2object, pixelformat,
@


1.5
log
@Update to gstreamer-plugins-good-0.10.31.
Detail changelog available at:
http://download.gnome.org/sources/gst-plugins-good/0.10/gst-plugins-good-0.10.31.changes
@
text
@d1 1
a1 1
$OpenBSD: patch-sys_v4l2_gstv4l2object_c,v 1.4 2011/05/15 08:32:09 ajacoutot Exp $
@


1.4
log
@Update to gstreamer-plugins-good-0.10.29.
* amrparse, aacparse, ac3parse, flacparse, mpegaudioparse, dcaparse audio parsers
* muxers now mux based on running time
* ISO MP4 muxers: mp4mux/3gppmux/qtmux/mj2mux
* new matroskaparse element
* new v4l2radio element
* rtpsession: support RTCP Early Feedback (the AVPF profile)
@
text
@d1 7
a7 4
$OpenBSD: patch-sys_v4l2_gstv4l2object_c,v 1.3 2011/03/07 19:44:35 ajacoutot Exp $
--- sys/v4l2/gstv4l2object.c.orig	Tue Mar  8 12:34:55 2011
+++ sys/v4l2/gstv4l2object.c	Sun May 15 01:29:56 2011
@@@@ -1530,8 +1530,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d18 1
a18 1
@@@@ -1563,8 +1563,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d29 1
a29 1
@@@@ -1574,8 +1574,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d40 1
a40 1
@@@@ -1586,8 +1586,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d51 1
a51 1
@@@@ -1638,15 +1638,15 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d71 1
a71 1
@@@@ -1741,10 +1741,10 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
d85 1
a85 1
@@@@ -1762,21 +1762,21 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
d108 1
a108 1
-        w < size.stepwise.max_width && h < size.stepwise.max_height;
d111 1
a111 1
+        w < size.un.stepwise.max_width && h < size.un.stepwise.max_height;
d116 1
a116 1
@@@@ -1794,18 +1794,18 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
@


1.3
log
@Update to gstreamer-plugins-good-0.10.27.
@
text
@d1 4
a4 4
$OpenBSD: patch-sys_v4l2_gstv4l2object_c,v 1.2 2010/12/02 14:04:49 ajacoutot Exp $
--- sys/v4l2/gstv4l2object.c.orig	Wed Jan 12 23:40:29 2011
+++ sys/v4l2/gstv4l2object.c	Tue Jan 25 18:17:57 2011
@@@@ -1512,8 +1512,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d15 1
a15 1
@@@@ -1545,8 +1545,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d26 1
a26 1
@@@@ -1556,8 +1556,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d37 1
a37 1
@@@@ -1568,8 +1568,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d48 1
a48 1
@@@@ -1620,15 +1620,15 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d68 1
a68 1
@@@@ -1723,10 +1723,10 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
d82 1
a82 1
@@@@ -1744,21 +1744,21 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
d113 1
a113 1
@@@@ -1776,18 +1776,18 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
@


1.2
log
@Update to gstreamer-plugins-good-0.10.26.
Relase notes available at:
 http://gstreamer.freedesktop.org/releases/gst-plugins-good/0.10.26.html
@
text
@d1 4
a4 4
$OpenBSD: patch-sys_v4l2_gstv4l2object_c,v 1.1 2010/09/12 22:33:57 jakemsr Exp $
--- sys/v4l2/gstv4l2object.c.orig	Mon Nov 29 18:32:52 2010
+++ sys/v4l2/gstv4l2object.c	Thu Dec  2 12:16:39 2010
@@@@ -1490,8 +1490,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d15 1
a15 1
@@@@ -1523,8 +1523,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d26 1
a26 1
@@@@ -1534,8 +1534,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d37 1
a37 1
@@@@ -1546,8 +1546,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d48 1
a48 1
@@@@ -1598,15 +1598,15 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d68 1
a68 1
@@@@ -1704,10 +1704,10 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
d82 1
a82 1
@@@@ -1725,21 +1725,21 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
d113 1
a113 1
@@@@ -1757,18 +1757,18 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
@


1.1
log
@* no more anonymous unions in video(4)
* bump REVISION-main
@
text
@d1 4
a4 4
$OpenBSD$
--- sys/v4l2/gstv4l2object.c.orig	Wed Aug 25 09:18:40 2010
+++ sys/v4l2/gstv4l2object.c	Wed Aug 25 09:24:08 2010
@@@@ -1372,8 +1372,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d15 1
a15 1
@@@@ -1405,8 +1405,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d26 1
a26 1
@@@@ -1416,8 +1416,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d37 1
a37 1
@@@@ -1428,8 +1428,8 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d48 1
a48 1
@@@@ -1480,15 +1480,15 @@@@ gst_v4l2_object_probe_caps_for_format_and_size (GstV4l
d68 1
a68 1
@@@@ -1586,10 +1586,10 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
d82 1
a82 1
@@@@ -1607,21 +1607,21 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
d113 1
a113 1
@@@@ -1639,18 +1639,18 @@@@ gst_v4l2_object_probe_caps_for_format (GstV4l2Object *
@

