head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.18
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.16
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.12
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.10
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2012.09.09.06.38.09;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.21.13.40.10;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2012.01.25.14.06.27;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix i18n initialization (from upstream).
@
text
@/*
 * Copyright (C) <2008> Jacob Meuser <jakemsr@@sdf.lonestar.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif
#include "sndiosink.h"
#include "sndiosrc.h"

#include "gst/gst-i18n-plugin.h"

GST_DEBUG_CATEGORY (gst_sndio_debug);

static gboolean
plugin_init (GstPlugin * plugin)
{
  if (!gst_element_register (plugin, "sndiosrc", GST_RANK_PRIMARY,
          GST_TYPE_SNDIOSRC) ||
      !gst_element_register (plugin, "sndiosink", GST_RANK_PRIMARY,
          GST_TYPE_SNDIOSINK)) {
    return FALSE;
  }

  GST_DEBUG_CATEGORY_INIT (gst_sndio_debug, "sndio", 0, "sndio elements");

#ifdef ENABLE_NLS
  GST_DEBUG ("binding text domain %s to locale dir %s", GETTEXT_PACKAGE,
      LOCALEDIR);
  bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
  bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
#endif /* ENABLE_NLS */

  return TRUE;
}

GST_PLUGIN_DEFINE (GST_VERSION_MAJOR,
    GST_VERSION_MINOR,
    "sndio",
    "sndio support for GStreamer",
    plugin_init, VERSION, GST_LICENSE, GST_PACKAGE_NAME, GST_PACKAGE_ORIGIN)
@


1.2
log
@sndio_debug -> gst_sndio_debug to prevent symbol name clash with sndio(7).
@
text
@d40 2
a41 1
  setlocale (LC_ALL, "");
d43 1
@


1.1
log
@Rename libsndio{sink,src} to sndio{sink,src}.

from Brad
@
text
@d25 1
a25 1
GST_DEBUG_CATEGORY (sndio_debug);
d37 1
a37 1
  GST_DEBUG_CATEGORY_INIT (sndio_debug, "sndio", 0, "sndio elements");
@

