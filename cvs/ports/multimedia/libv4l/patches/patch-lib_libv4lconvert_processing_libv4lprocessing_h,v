head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	feinerer_2016-Jan-07:1.1.1.1
	feinerer:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.01.07.17.12.21;	author feinerer;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Q9Z5XWLw1kNh8PWn;

1.1.1.1
date	2016.01.07.17.12.21;	author feinerer;	state Exp;
branches;
next	;
commitid	Q9Z5XWLw1kNh8PWn;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- lib/libv4lconvert/processing/libv4lprocessing.h.orig	Sat Sep 19 20:54:17 2015
+++ lib/libv4lconvert/processing/libv4lprocessing.h	Sun Nov 22 10:50:26 2015
@@@@ -22,7 +22,11 @@@@
 #define __LIBV4LPROCESSING_H
 
 #include "../libv4lsyscall-priv.h"
+#if defined(__OpenBSD__)
+#include <sys/videoio.h>
+#else
 #include <linux/videodev2.h>
+#endif
 
 struct v4lprocessing_data;
 struct v4lcontrol_data;
@


1.1.1.1
log
@Import libv4l 1.8.1

libv4l is a collection of libraries which adds a thin abstraction layer on top
of video4linux2 devices. The purpose of this (thin) layer is to make it easy
for application writers to support a wide variety of devices without having to
write separate code for different devices in the same class.

OK ajacoutot@@, czarkoff@@
@
text
@@
