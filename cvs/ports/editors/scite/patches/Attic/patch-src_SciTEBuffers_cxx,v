head	1.3;
access;
symbols
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.1.1.0.14
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.12
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.10
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.8
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.6
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.4
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	sturm_2003-Aug-14:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2007.08.01.09.21.07;	author steven;	state dead;
branches;
next	1.2;

1.2
date	2007.01.18.10.56.27;	author steven;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.14.18.27.28;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.08.14.18.27.28;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to 1.74
remove strc*/sprintf patches

from maintainer Jeremy Evans <openbsd@@jeremyevans.net>
@
text
@$OpenBSD: patch-src_SciTEBuffers_cxx,v 1.2 2007/01/18 10:56:27 steven Exp $
--- src/SciTEBuffers.cxx.orig	Wed May 31 04:46:17 2006
+++ src/SciTEBuffers.cxx	Wed May 31 04:46:17 2006
@@@@ -774,15 +774,15 @@@@ void SciTEBase::BuffersMenu() {
 #if PLAT_WIN
 
 			if (pos < 10) {
-				sprintf(entry, "&%d ", (pos + 1) % 10 ); // hotkey 1..0
-				sprintf(titleTab, "&%d ", (pos + 1) % 10); // add hotkey to the tabbar
+				snprintf(entry, sizeof(entry), "&%d ", (pos + 1) % 10 ); // hotkey 1..0
+				snprintf(titleTab, sizeof(entry), "&%d ", (pos + 1) % 10); // add hotkey to the tabbar
 			}
 #endif
 
 			if (buffers.buffers[pos].IsUntitled()) {
 				SString untitled = LocaliseString("Untitled");
-				strcat(entry, untitled.c_str());
-				strcat(titleTab, untitled.c_str());
+				strlcat(entry, untitled.c_str(), sizeof(entry));
+				strlcat(titleTab, untitled.c_str(), sizeof(titleTab));
 			} else {
 				SString path = buffers.buffers[pos].AsInternal();
 #if PLAT_WIN
@@@@ -794,22 +794,22 @@@@ void SciTEBase::BuffersMenu() {
 					amp += 2;
 				}
 #endif
-				strcat(entry, path.c_str());
+				strlcat(entry, path.c_str(), sizeof(entry));
 
 				char *cpDirEnd = strrchr(entry, pathSepChar);
 				if (cpDirEnd) {
-					strcat(titleTab, cpDirEnd + 1);
+					strlcat(titleTab, cpDirEnd + 1, sizeof(titleTab));
 				} else {
-					strcat(titleTab, entry);
+					strlcat(titleTab, entry, sizeof(titleTab));
 				}
 			}
 			// For short file names:
 			//char *cpDirEnd = strrchr(buffers.buffers[pos]->fileName, pathSepChar);
-			//strcat(entry, cpDirEnd + 1);
+			//strlcat(entry, cpDirEnd + 1, sizeof(entry));
 
 			if (buffers.buffers[pos].isDirty) {
-				strcat(entry, " *");
-				strcat(titleTab, " *");
+				strlcat(entry, " *", sizeof(entry));
+				strlcat(titleTab, " *", sizeof(titleTab));
 			}
 
 			SetMenuItem(menuBuffers, menuStart + pos + 1, itemID, entry);
@@@@ -874,10 +874,10 @@@@ void SciTEBase::SetFileStackMenu() {
 				entry[0] = '\0';
 #if PLAT_WIN
 
-				sprintf(entry, "&%d ", (stackPos + 1) % 10);
+				snprintf(entry, sizeof(entry), "&%d ", (stackPos + 1) % 10);
 #endif
 
-				strcat(entry, recentFileStack[stackPos].AsInternal());
+				strlcat(entry, recentFileStack[stackPos].AsInternal(), sizeof(entry));
 				SetMenuItem(menuFile, MRU_START + stackPos + 1, itemID, entry);
 			}
 		}
@@@@ -1294,8 +1294,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 			char *endPath = strchr(startPath, '\"');
 			int length = endPath - startPath;
 			if (length > 0) {
-				strncpy(sourcePath, startPath, length);
-				sourcePath[length] = 0;
+				strlcpy(sourcePath, startPath, length);
 			}
 			endPath++;
 			while (*endPath && !isdigitchar(*endPath)) {
@@@@ -1314,8 +1313,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 				if (cdoc[i] == ':' && isdigitchar(cdoc[i + 1])) {
 					int sourceNumber = atoi(cdoc + i + 1) - 1;
 					if (i > 0) {
-						strncpy(sourcePath, cdoc, i);
-						sourcePath[i] = 0;
+						strlcpy(sourcePath, cdoc, i);
 					}
 					return sourceNumber;
 				}
@@@@ -1331,8 +1329,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 			char *endPath = strchr(start, '(');
 			int length = endPath - start;
 			if ((length > 0) && (length < MAX_PATH)) {
-				strncpy(sourcePath, start, length);
-				sourcePath[length] = 0;
+				strlcpy(sourcePath, start, length);
 			}
 			endPath++;
 			return atoi(endPath) - 1;
@@@@ -1369,8 +1366,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 					int length = space2 - space;
 
 					if (length > 0) {
-						strncpy(sourcePath, space, length);
-						sourcePath[length] = '\0';
+						strlcpy(sourcePath, space, length);
 						return atoi(space2) - 1;
 					}
 				}
@@@@ -1383,8 +1379,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 			char *line = strstr(cdoc, " line ");
 			int length = line - (at + 4);
 			if (at && line && length > 0) {
-				strncpy(sourcePath, at + 4, length);
-				sourcePath[length] = 0;
+				strlcpy(sourcePath, at + 4, length);
 				line += 6;
 				return atoi(line) - 1;
 			}
@@@@ -1396,8 +1391,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 			char *line = strstr(cdoc, ":line ");
 			if (in && line && (line > in)) {
 				in += 4;
-				strncpy(sourcePath, in, line - in);
-				sourcePath[line - in] = 0;
+				strlcpy(sourcePath, in, line - in);
 				line += 6;
 				return atoi(line) - 1;
 			}
@@@@ -1415,8 +1409,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 				char *quote = strstr(fileStart, "'");
 				size_t length = quote - fileStart;
 				if (quote && length > 0) {
-					strncpy(sourcePath, fileStart, length);
-					sourcePath[length] = '\0';
+					strlcpy(sourcePath, fileStart, length);
 				}
 				line += lenLine;
 				return atoi(line) - 1;
@@@@ -1434,8 +1427,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 					if (strchr("\t\n\r \"$%'*,;<>?[]^`{|}", cdoc[j])) {
 						j++;
 					}
-					strncpy(sourcePath, &cdoc[j], i - j);
-					sourcePath[i - j] = 0;
+					strlcpy(sourcePath, &cdoc[j], i - j);
 					// Because usually the address is a searchPattern, lineNumber has to be evaluated later
 					return 0;
 				}
@@@@ -1452,8 +1444,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 			if (line && file && (line > file)) {
 				file += lenFile;
 				size_t length = line - file;
-				strncpy(sourcePath, file, length);
-				sourcePath[length] = '\0';
+				strlcpy(sourcePath, file, length);
 				line += lenLine;
 				return atoi(line) - 1;
 			}
@@@@ -1476,8 +1467,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 						file++;
 					}
 					size_t length = strlen(file);
-					strncpy(sourcePath, file, length);
-					sourcePath[length] = '\0';
+					strlcpy(sourcePath, file, length);
 					return atoi(line) - 1;
 				}
 			}
@@@@ -1500,8 +1490,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 				file++;
 				char *endfile = strchr(file, ')');
 				size_t length = endfile - file;
-				strncpy(sourcePath, file, length);
-				sourcePath[length] = '\0';
+				strlcpy(sourcePath, file, length);
 				line++;
 				return atoi(line) - 1;
 			}
@@@@ -1521,11 +1510,10 @@@@ int DecodeMessage(char *cdoc, char *sour
 			if (line && file && (line > file)) {
 				file += lenFile;
 				size_t length = line - file;
-				strncpy(sourcePath, file, length);
-				sourcePath[length] = '\0';
+				strlcpy(sourcePath, file, length);
 				line += lenLine;
 				length = column - line;
-				strncpy(line, line, length);
+				strlcpy(line, line, length);
 				return atoi(line) - 1;
 			}
 			break;
@@@@ -1545,12 +1533,11 @@@@ int DecodeMessage(char *cdoc, char *sour
 			if (line && file && (line > file)) {
 				file += lenFile;
 				size_t length = line - file;
-				strncpy(sourcePath, file, length);
-				sourcePath[length] = '\0';
+				strlcpy(sourcePath, file, length);
 				line += lenLine;
 				if ((lineend > line)) {
 					length = lineend - line;
-					strncpy(line, line, length);
+					strlcpy(line, line, length);
 					return atoi(line) - 1;
 				}
 			}
@@@@ -1590,8 +1577,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 			char *endPath = strchr(startPath, ':');
 			int length = endPath - startPath;
 			if (length > 0) {
-				strncpy(sourcePath, startPath, length);
-				sourcePath[length] = 0;
+				strlcpy(sourcePath, startPath, length);
 				int sourceNumber = atoi(endPath+1) - 1;
 				return sourceNumber;
 			}
@@@@ -1605,8 +1591,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 			char *endPath = strchr(startPath, '\t');
 			if (endPath) {
 				int length = endPath - startPath;
-				strncpy(sourcePath, startPath, length);
-				sourcePath[length] = 0;
+				strlcpy(sourcePath, startPath, length);
 				return 0;
 			}
 			break;
@


1.2
log
@upgrade to 1.72

based on diffs from new maintainer Jeremy Evans <jeremyevans0 at gmail.com>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d2 3
a4 76
--- src/SciTEBuffers.cxx.orig	2003-08-14 01:31:52.000000000 +1000
+++ src/SciTEBuffers.cxx	2003-08-14 01:31:52.000000000 +1000
@@@@ -273,14 +273,14 @@@@ void SciTEBase::InitialiseBuffers() {
 	}
 }
 
-static void EnsureEndsWithPathSeparator(char *path) {
+static void EnsureEndsWithPathSeparator(char *path, size_t path_size) {
 	size_t pathLen = strlen(path);
 	if ((pathLen > 0) && path[pathLen - 1] != pathSepChar) {
-		strcat(path, pathSepString);
+		strlcat(path, pathSepString, path_size);
 	}
 }
 
-static void RecentFilePath(char *path, const char *name) {
+static void RecentFilePath(char *path, size_t path_size, const char *name) {
 	char *where = getenv("SciTE_HOME");
 	if (!where)
 		where = getenv("HOME");
@@@@ -296,16 +296,16 @@@@ static void RecentFilePath(char *path, c
 #endif
 
 	} else {
-		strcpy(path, where);
-		EnsureEndsWithPathSeparator(path);
+		strlcpy(path, where, path_size);
+		EnsureEndsWithPathSeparator(path, path_size);
 	}
-	strcat(path, configFileVisibilityString);
-	strcat(path, name);
+	strlcat(path, configFileVisibilityString, path_size);
+	strlcat(path, name, path_size);
 }
 
 void SciTEBase::LoadRecentMenu() {
 	char recentPathName[MAX_PATH + 1];
-	RecentFilePath(recentPathName, recentFileName);
+	RecentFilePath(recentPathName, sizeof(recentPathName), recentFileName);
 	FILE *recentFile = fopen(recentPathName, fileRead);
 	if (!recentFile) {
 		DeleteFileStackMenu();
@@@@ -325,7 +325,7 @@@@ void SciTEBase::LoadRecentMenu() {
 
 void SciTEBase::SaveRecentStack() {
 	char recentPathName[MAX_PATH + 1];
-	RecentFilePath(recentPathName, recentFileName);
+	RecentFilePath(recentPathName, sizeof(recentPathName), recentFileName);
 	FILE *recentFile = fopen(recentPathName, fileWrite);
 	if (!recentFile)
 		return;
@@@@ -346,9 +346,9 @@@@ void SciTEBase::SaveRecentStack() {
 void SciTEBase::LoadSession(const char *sessionName) {
 	char sessionPathName[MAX_PATH + 1];
 	if (sessionName[0] == '\0') {
-		RecentFilePath(sessionPathName, defaultSessionFileName);
+		RecentFilePath(sessionPathName, sizeof(sessionPathName), defaultSessionFileName);
 	} else {
-		strcpy(sessionPathName, sessionName);
+		strlcpy(sessionPathName, sessionName, sizeof(sessionPathName));
 	}
 	FILE *sessionFile = fopen(sessionPathName, fileRead);
 	if (!sessionFile)
@@@@ -379,9 +379,9 @@@@ void SciTEBase::LoadSession(const char *
 void SciTEBase::SaveSession(const char *sessionName) {
 	char sessionPathName[MAX_PATH + 1];
 	if (sessionName[0] == '\0') {
-		RecentFilePath(sessionPathName, defaultSessionFileName);
+		RecentFilePath(sessionPathName, sizeof(sessionPathName), defaultSessionFileName);
 	} else {
-		strcpy(sessionPathName, sessionName);
+		strlcpy(sessionPathName, sessionName, sizeof(sessionPathName));
 	}
 	FILE *sessionFile = fopen(sessionPathName, fileWrite);
 	if (!sessionFile)
@@@@ -615,15 +615,15 @@@@ void SciTEBase::BuffersMenu() {
d22 1
a22 1
 				SString path = buffers.buffers[pos].FullPath();
d24 1
a24 1
@@@@ -635,13 +635,13 @@@@ void SciTEBase::BuffersMenu() {
d41 3
a43 2
@@@@ -649,8 +649,8 @@@@ void SciTEBase::BuffersMenu() {
 			//strcat(entry, cpDirEnd + 1);
d53 1
a53 1
@@@@ -712,10 +712,10 @@@@ void SciTEBase::SetFileStackMenu() {
d61 2
a62 2
-				strcat(entry, recentFileStack[stackPos].FullPath());
+				strlcat(entry, recentFileStack[stackPos].FullPath(), sizeof(entry));
d66 1
a66 1
@@@@ -1015,8 +1015,7 @@@@ int DecodeMessage(char *cdoc, char *sour
d75 8
a82 8
 			while (*endPath && !isdigit(*endPath)) {
@@@@ -1036,8 +1035,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 					}
 					int sourceNumber = atoi(cdoc + j) - 1;
 					if (j > 0) {
-						strncpy(sourcePath, cdoc, j - 1);
-						sourcePath[j - 1] = 0;
+						strlcpy(sourcePath, cdoc, j - 1);
d86 3
a88 3
@@@@ -1049,8 +1047,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 			char *endPath = strchr(cdoc, '(');
 			int length = endPath - cdoc;
d90 1
a90 1
-				strncpy(sourcePath, cdoc, length);
d92 1
a92 1
+				strlcpy(sourcePath, cdoc, length);
d96 9
a104 8
@@@@ -1071,8 +1068,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 				char *space2 = strchr(space, ' ');
 				if (space2) {
 					unsigned int length = space2 - space;
-					strncpy(sourcePath, space, length);
-					sourcePath[length] = '\0';
+					strlcpy(sourcePath, space, length);
 					return atoi(space2) - 1;
d106 1
a106 2
 			}
@@@@ -1084,8 +1080,7 @@@@ int DecodeMessage(char *cdoc, char *sour
d116 1
a116 1
@@@@ -1097,8 +1092,7 @@@@ int DecodeMessage(char *cdoc, char *sour
d126 3
a128 3
@@@@ -1115,8 +1109,7 @@@@ int DecodeMessage(char *cdoc, char *sour
 				char *quote = strstr(file, "'");
 				size_t length = quote - (file + lenFile + 1);
d130 1
a130 1
-					strncpy(sourcePath, file + lenFile + 1, length);
d132 1
a132 1
+					strlcpy(sourcePath, file + lenFile + 1, length);
d136 1
a136 1
@@@@ -1140,8 +1133,7 @@@@ int DecodeMessage(char *cdoc, char *sour
d146 1
a146 1
@@@@ -1158,8 +1150,7 @@@@ int DecodeMessage(char *cdoc, char *sour
d156 1
a156 1
@@@@ -1182,8 +1173,7 @@@@ int DecodeMessage(char *cdoc, char *sour
d163 1
a163 1
 					return atoi(line)-1;
d166 1
a166 1
@@@@ -1206,8 +1196,7 @@@@ int DecodeMessage(char *cdoc, char *sour
d176 49
@


1.1.1.1
log
@Initial import of scite 1.54

SciTE is short for SCIntillla based Text Editor. It is a very
flexible but still small and fast editor providing block folding,
syntax highlighting, regular expression search & replace etc.

WWW: http://www.scintilla.org/SciTE.html

from Joerg Sonnenberger <joerg@@bec.de> with patches from Andrew Dalgleish
@
text
@@
