head	1.2;
access;
symbols
	OPENBSD_3_4:1.1.0.8
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2003.12.03.17.28.02;	author sturm;	state dead;
branches;
next	1.1;

1.1
date	2002.03.23.18.40.02;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove emacs 20 port as 21 is in-tree and works on all platforms that have
a working emacs 20, besides that emacs 20 was broken on sparc64, vax, hppa

emacs21 tested on most archs by pval (thanks!), rest by me
@
text
@$OpenBSD: patch-src_m_sparc_h,v 1.1 2002/03/23 18:40:02 pvalchev Exp $
--- src/m/sparc.h.orig	Sat Sep  6 12:51:04 1997
+++ src/m/sparc.h	Sun Mar 17 22:22:25 2002
@@@@ -83,9 +83,11 @@@@ NOTE-END  */
 /* Must use the system's termcap, if we use any termcap.
    It does special things.  */
 
+#if 0 /* not with OpenBSD 2.4 current */
 #ifndef TERMINFO
 #define LIBS_TERMCAP -ltermcap
 #endif
+#endif
 
 /* Mask for address bits within a memory segment */
 
@@@@ -117,3 +119,43 @@@@ NOTE-END  */
 #define A_TEXT_SEEK(HDR) (N_TXTOFF (hdr) + sizeof (hdr))
 
 #endif /* not __NetBSD__ and not __linux__ and not __OpenBSD__ */
+
+#ifdef __arch64__		/* GCC, 64-bit ABI.  */
+#define BITS_PER_LONG 64
+#ifdef __sparc64__
+#define UNEXEC unexelf.o
+#endif
+
+#ifdef __arch64__		/* GCC, 64-bit ABI.  */
+#define EMACS_INT long
+#define BITS_PER_LONG 64
+#define BITS_PER_EMACS_INT BITS_PER_LONG
+#define EMACS_UINT unsigned long
+#define SPECIAL_EMACS_INT
+
+/* On the 64 bit architecture, we can use 60 bits for addresses */
+
+#define VALBITS		60
+
+/* This definition of MARKBIT is necessary because of the comparison of
+   ARRAY_MARK_FLAG and MARKBIT in an #if in lisp.h, which cpp doesn't like. */
+
+#define MARKBIT		0x8000000000000000L
+
+/* Define XINT and XUINT so that they can take arguments of type int */
+
+#define XINT(a)  (((long) (a) << (BITS_PER_LONG - VALBITS)) >> (BITS_PER_LONG - VALBITS))
+#define XUINT(a) ((long) (a) & VALMASK)
+
+/* Define XPNTR to avoid or'ing with DATA_SEG_BITS */
+
+#define XPNTR(a) XUINT (a)
+
+#define PNTR_COMPARISON_TYPE unsigned long
+#ifndef _LP64
+#define _LP64			/* Done on Alpha -- not sure if it
+				   should be here.  -- fx */
+#endif
+#endif
+
+#endif
@


1.1
log
@pieces for sparc64 (now it builds, but doesn't work yet), some taken from netbsd
@
text
@d1 1
a1 1
$OpenBSD$
@

