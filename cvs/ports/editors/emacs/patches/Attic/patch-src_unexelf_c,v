head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.6
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.10.13.15.39.32;	author jca;	state dead;
branches;
next	1.1;
commitid	68L59ECdgcBl8hgz;

1.1
date	2015.07.12.19.06.22;	author jca;	state Exp;
branches;
next	;
commitid	REdE5kmT0Jl0Ugx3;


desc
@@


1.2
log
@Update to emacs-25.1

Announce: http://lists.gnu.org/archive/html/emacs-devel/2016-09/msg00451.html
NEWS file: https://www.gnu.org/software/emacs/news/NEWS.25.1

Fixes the focus problem seen with the gtk3 flavor.  The alignement fix
for sparc64 wasn't needed in 25.0.

Tested by Manuel Giraud, Ralf Horstmann (alpha), abieber@@ (macppc),
danj@@ (i386).  ok danj@@ abieber@@
@
text
@$OpenBSD: patch-src_unexelf_c,v 1.1 2015/07/12 19:06:22 jca Exp $
--- src/unexelf.c.orig	Sun Jul 12 16:07:40 2015
+++ src/unexelf.c	Sun Jul 12 16:14:03 2015
@@@@ -778,7 +778,12 @@@@ unexec (const char *new_name, const char *old_name)
      must be shifted in the image.  It can differ from new_data2_size if
      the end of the old .data section (and thus the offset of the .bss
      section) was unaligned.  */
+#ifdef __sparc64__
+  new_data2_incr = round_up(new_data2_size + (new_data2_offset - old_bss_offset),
+    sizeof(ElfW(Addr)));
+#else
   new_data2_incr = new_data2_size + (new_data2_offset - old_bss_offset);
+#endif
 
 #ifdef UNEXELF_DEBUG
   fprintf (stderr, "old_bss_index %td\n", old_bss_index);
@


1.1
log
@Fix SIGBUS at unexec() step on sparc64.

Most likely due to the switch to binutils-2.17, emacs crashes with SIGBUS
at the loadup build step on sparc64, because it puts the section headers
at an unaligned address.

I am not sure whether this is the True Proper Fix.  Also, other strict
architectures ought to be affected too.  But let's at least provide
a working emacs package for sparc64 users at c2k15.

To be revisited laterwith feedback from upstream.

Problem reported by sthen/dlg/naddy.
@
text
@d1 1
a1 1
$OpenBSD$
@

