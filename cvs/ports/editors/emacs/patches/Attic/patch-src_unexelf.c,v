head	1.5;
access;
symbols
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2003.12.03.17.28.02;	author sturm;	state dead;
branches;
next	1.4;

1.4
date	2003.07.06.15.27.52;	author naddy;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.17.08.06.44;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.18.02.59.14;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.08.00.32.10;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove emacs 20 port as 21 is in-tree and works on all platforms that have
a working emacs 20, besides that emacs 20 was broken on sparc64, vax, hppa

emacs21 tested on most archs by pval (thanks!), rest by me
@
text
@$OpenBSD: patch-src_unexelf.c,v 1.4 2003/07/06 15:27:52 naddy Exp $
--- src/unexelf.c.orig	Sun Jul  6 14:21:21 2003
+++ src/unexelf.c	Sun Jul  6 14:24:34 2003
@@@@ -500,7 +500,12 @@@@ typedef struct {
 
 #ifdef __OpenBSD__
 # include <sys/exec_elf.h>
-#endif
+# ifdef __alpha__
+#  include <sys/exec_ecoff.h>
+#  define HDRR		struct ecoff_symhdr
+#  define pHDRR		HDRR *
+# endif /* __alpha__ */
+#endif /* __OpenBSD__ */
 
 #if __GNU_LIBRARY__ - 0 >= 6
 # include <link.h>	/* get ElfW etc */
@@@@ -512,10 +517,12 @@@@ typedef struct {
 # else
 #  define ElfBitsW(bits, type) Elf/**/bits/**/_/**/type
 # endif
-# ifdef _LP64
-#  define ELFSIZE 64
-# else
-#  define ELFSIZE 32
+# ifndef __OpenBSD__
+#  ifdef _LP64
+#   define ELFSIZE 64
+#  else
+#   define ELFSIZE 32
+#  endif
 # endif
   /* This macro expands `bits' before invoking ElfBitsW.  */
 # define ElfExpandBitsW(bits, type) ElfBitsW (bits, type)
@@@@ -613,7 +620,7 @@@@ find_section (name, section_names, file_
       if (noerror)
 	return -1;
       else
-	fatal ("Can't find %s in %s.\n", name, file_name, 0);
+	fatal ("Can't find %s in %s.\n", name, file_name);
     }
 
   return idx;
@


1.4
log
@cleanup, fix build on alpha
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@elf fixens/workarounds, part from NetBSD so this works on i386/ELF
XXX note that sparc64 and possibly other ELF arches are still broken
@
text
@d1 4
a4 14
$NetBSD: patch-az,v 1.1.1.1 2003/04/11 00:31:45 uebayasi Exp $

--- src/unexelf.c.orig	Mon May 15 02:14:02 2000
+++ src/unexelf.c	Thu Apr 17 01:14:07 2003
@@@@ -470,7 +470,7 @@@@ typedef struct {
 /*
  * NetBSD does not have normal-looking user-land ELF support.
  */
-# ifdef __alpha__
+# if defined(__alpha__) || defined(__sparc_v9__)
 #  define ELFSIZE	64
 # else
 #  define ELFSIZE	32
@@@@ -479,6 +479,7 @@@@ typedef struct {
d6 7
a12 11
 # ifndef PT_LOAD
 #  define PT_LOAD	Elf_pt_load
+#  define SHT_PROGBITS	Elf_sht_progbits
 #  define SHT_SYMTAB	Elf_sht_symtab
 #  define SHT_DYNSYM	Elf_sht_dynsym
 #  define SHT_NULL	Elf_sht_null
@@@@ -495,7 +496,7 @@@@ typedef struct {
 #  include <sys/exec_ecoff.h>
 #  define HDRR		struct ecoff_symhdr
 #  define pHDRR		HDRR *
-# endif
d14 1
a14 1
 #endif /* __NetBSD__ */
d16 3
a18 2
 #ifdef __OpenBSD__
@@@@ -512,7 +513,7 @@@@ typedef struct {
d23 13
a35 5
+# if defined (_LP64) || defined(__alpha__)
 #  define ELFSIZE 64
 # else
 #  define ELFSIZE 32
@@@@ -613,12 +614,34 @@@@ find_section (name, section_names, file_
a43 77
 }
 
+#if defined(__alpha__)
+/* We are using  ECOFF symbols embedded in ELF. */
+
+void
+relocate_ecoff_symhdr(symhdr, diff)
+    HDRR *symhdr;
+    ElfW(Word) diff;
+{
+  symhdr->cbLineOffset += diff;
+  symhdr->cbDnOffset   += diff;
+  symhdr->cbPdOffset   += diff;
+  symhdr->cbSymOffset  += diff;
+  symhdr->cbOptOffset  += diff;
+  symhdr->cbAuxOffset  += diff;
+  symhdr->cbSsOffset   += diff;
+  symhdr->cbSsExtOffset += diff;
+  symhdr->cbFdOffset   += diff;
+  symhdr->cbRfdOffset  += diff;
+  symhdr->cbExtOffset  += diff;
+}
+#endif /* __alpha__ or __sony_news and systype_sysv */
+
 /* ****************************************************************
  * unexec
  *
@@@@ -1005,22 +1028,11 @@@@ unexec (new_name, old_name, data_start, 
 	  == 0)
 	{
 	  pHDRR symhdr = (pHDRR) (NEW_SECTION_H (nn).sh_offset + new_base);
-
-	  symhdr->cbLineOffset += new_data2_size;
-	  symhdr->cbDnOffset += new_data2_size;
-	  symhdr->cbPdOffset += new_data2_size;
-	  symhdr->cbSymOffset += new_data2_size;
-	  symhdr->cbOptOffset += new_data2_size;
-	  symhdr->cbAuxOffset += new_data2_size;
-	  symhdr->cbSsOffset += new_data2_size;
-	  symhdr->cbSsExtOffset += new_data2_size;
-	  symhdr->cbFdOffset += new_data2_size;
-	  symhdr->cbRfdOffset += new_data2_size;
-	  symhdr->cbExtOffset += new_data2_size;
+	  relocate_ecoff_symhdr(symhdr, new_data2_size);
 	}
 #endif /* __alpha__ */
 
-#if defined (__sony_news) && defined (_SYSTYPE_SYSV)
+#ifdef HAVE_MIPS_SBSS
       if (NEW_SECTION_H (nn).sh_type == SHT_MIPS_DEBUG
 	  && old_mdebug_index != -1) 
         {
@@@@ -1030,20 +1042,12 @@@@ unexec (new_name, old_name, data_start, 
 
 	  if (diff)
 	    {
-	      phdr->cbLineOffset += diff;
-	      phdr->cbDnOffset   += diff;
-	      phdr->cbPdOffset   += diff;
-	      phdr->cbSymOffset  += diff;
-	      phdr->cbOptOffset  += diff;
-	      phdr->cbAuxOffset  += diff;
-	      phdr->cbSsOffset   += diff;
-	      phdr->cbSsExtOffset += diff;
-	      phdr->cbFdOffset   += diff;
-	      phdr->cbRfdOffset  += diff;
-	      phdr->cbExtOffset  += diff;
+#ifdef DEBUG
+	      printf("Dont know how to relocate mdebug syms by %0x\n", diff);
+#endif
 	    }
 	}
-#endif /* __sony_news && _SYSTYPE_SYSV */
+#endif /* HAVE_MIPS_SBSS */
 
 #if __sgi
       /* Adjust  the HDRR offsets in .mdebug and copy the 
@


1.2
log
@fix some drug-ery, get patches in shape
@
text
@d1 2
d4 2
a5 7
+++ src/unexelf.c	Sun Mar 17 20:03:34 2002
@@@@ -466,7 +466,7 @@@@ typedef struct {
 #define hdrNil ((pHDRR)0)
 #endif
 
-#ifdef __NetBSD__
+#if __NetBSD__
d9 20
a28 1
@@@@ -500,6 +500,11 @@@@ typedef struct {
d31 1
a31 10
 # include <sys/exec_elf.h>
+# ifdef __alpha__
+#  include <sys/exec_ecoff.h>
+#  define HDRR           struct ecoff_symhdr
+#  define pHDRR          HDRR *
+# endif
 #endif
 
 #if __GNU_LIBRARY__ - 0 >= 6
@@@@ -512,10 +517,12 @@@@ typedef struct {
d36 90
a125 12
-#  define ELFSIZE 64
-# else
-#  define ELFSIZE 32
+# ifndef __OpenBSD__
+#  ifdef _LP64
+#   define ELFSIZE 64
+#  else
+#   define ELFSIZE 32
+#  endif
 # endif
   /* This macro expands `bits' before invoking ElfBitsW.  */
 # define ElfExpandBitsW(bits, type) ElfBitsW (bits, type)
@


1.1
log
@Make emacs work on alpha again after ELF introduction
@
text
@d1 3
a3 3
--- src/unexelf.c.orig	Sun Feb  7 17:49:47 2021
+++ src/unexelf.c	Sun Feb  7 20:08:48 2021
@@@@ -466,7 +466,7 @@@@
d12 1
a12 1
@@@@ -500,6 +500,11 @@@@
d24 1
a24 1
@@@@ -512,10 +517,12 @@@@
@

