head	1.6;
access;
symbols
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2011.11.16.13.38.22;	author robert;	state dead;
branches;
next	1.5;

1.5
date	2010.11.09.18.40.04;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2010.11.07.19.04.41;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2010.06.26.15.48.11;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2010.03.30.11.03.07;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.08.15.43.50;	author robert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove the dead openoffice ports
@
text
@--- configure.in.orig.port	Fri Oct 29 12:14:08 2010
+++ configure.in	Mon Nov  8 23:57:18 2010
@@@@ -1047,6 +1047,18 @@@@ case "$build_os" in
 		echo "AIX is an alpha port --- Use at own risk" >> warn
 		_os=AIX
 		;;
+        openbsd*)
+		test_x=yes
+		test_gtk=yes
+		build_cairo=yes
+		test_kde=yes
+		test_cups=yes
+		test_freetype=yes
+		test_randr=yes
+		PTHREAD_CFLAGS="-pthread -D_THREAD_SAFE"
+		PTHREAD_LIBS="-pthread"
+		_os=OpenBSD
+		;;
    *)
    AC_MSG_ERROR([$_os operating system is not suitable to build OpenOffice.org!])
    ;;
@@@@ -2422,6 +2434,8 @@@@ dnl ==================================================
       DEFAULT_TO_STLPORT="yes" 
    elif test "$_os" = "FreeBSD"; then
       DEFAULT_TO_STLPORT="yes"
+   elif test "$_os" = "OpenBSD"; then
+      DEFAULT_TO_STLPORT="no"
    fi
    if test "$DEFAULT_TO_STLPORT" = "yes"; then
       AC_MSG_RESULT([stlport])
@@@@ -3293,6 +3307,9 @@@@ if test "$enable_epm" = "yes"; then
 	AIX)
 		PKGFORMAT=aix
 		;;
+	OpenBSD)
+		PKGFORMAT=portable
+		;;
 	*BSD)
 		PKGFORMAT=bsd
 		;;
@@@@ -3767,8 +3784,9 @@@@ elif test -n "$with_system_python" -o -n "$with_system
 
    python_include=`$PYTHON -c "import distutils.sysconfig; print distutils.sysconfig.get_config_var('INCLUDEPY');"`
    python_version=`$PYTHON -c "import distutils.sysconfig; print distutils.sysconfig.get_config_var('VERSION');"`
+   python_libs=`$PYTHON -c "import distutils.sysconfig; print distutils.sysconfig.get_config_var('LIBS');"`
    PYTHON_CFLAGS="-I$python_include"
-   PYTHON_LIBS="-lpython$python_version"
+   PYTHON_LIBS="-lpython$python_version $python_libs"
 fi
 if test "$with_system_python" = "yes" ; then
    SYSTEM_PYTHON=YES
@@@@ -3808,15 +3826,12 @@@@ if test -n "$with_system_db" -o -n "$with_system_libs"
 	test "$with_system_db" != "no"; then
     SYSTEM_DB=YES
     AC_MSG_RESULT([external])
-    AC_CHECK_HEADER(db.h, [ DB_INCLUDES=/usr/include ],
-        [
-             CFLAGS=-I/usr/include/db4
-             AC_CHECK_HEADER(db4/db.h,
-             [ DB_INCLUDES=/usr/include/db4 ],
-             [ AC_MSG_ERROR(no. install the db4 libraries) ], []+             )
-        ], []
+    AC_CHECK_HEADER(db4/db.h, [ DB_INCLUDES=${prefix}/include/db4 ],
+        [ AC_MSG_ERROR(no. install the db4 libraries) ], []
     )
     AC_MSG_CHECKING([whether db is at least 4.1])
+    save_CPPFLAGS=$CPPFLAGS
+    CPPFLAGS=-I$DB_INCLUDES
     AC_TRY_RUN([
 #include <db.h>
 
@@@@ -3825,6 +3840,7 @@@@ int main(int argc, char **argv) {
        else return 1;
 }
     ], [AC_MSG_RESULT([yes])], [AC_MSG_ERROR([no. you need at least db 4.1])])
+    CPPFLAGS=$save_CPPFLAGS
     AC_HAVE_LIBRARY(db, [],
       [AC_MSG_ERROR([db not installed or functional])], [])
     SCPDEFS="$SCPDEFS -DSYSTEM_DB"
@@@@ -4703,11 +4719,11 @@@@ if test -n "$with_system_icu" -o -n "$with_system_libs
    if test -z "$SYSTEM_GENBRK"; then
       AC_MSG_ERROR([\"genbrk\" not found in \$PATH, install the icu development tool \"genbrk"\])
    fi
-   AC_PATH_PROG(SYSTEM_GENCCODE, genccode, [], [$PATH:/usr/sbin:/sbin])
+   AC_PATH_PROG(SYSTEM_GENCCODE, genccode, [], [$PATH:/usr/sbin:/sbin:/usr/local/sbin])
    if test -z "$SYSTEM_GENCCODE"; then
       AC_MSG_ERROR([\"genccode\" not found in \$PATH, install the icu development tool \"genccode"\])
    fi
-   AC_PATH_PROG(SYSTEM_GENCMN, gencmn, [], [$PATH:/usr/sbin:/sbin])
+   AC_PATH_PROG(SYSTEM_GENCMN, gencmn, [], [$PATH:/usr/sbin:/sbin:/usr/local/sbin])
    if test -z "$SYSTEM_GENCMN"; then
       AC_MSG_ERROR([\"gencmn\" not found in \$PATH, install the icu development tool \"gencmn"\])
    fi
@@@@ -4816,7 +4832,7 @@@@ elif test "$_os" != "WINNT" ; then
       AC_MSG_ERROR([No X includes found]) # Exit
    fi
    CFLAGS=$X_CFLAGS
-   LDFLAGS="$X_LDFLAGS $X_LIBS"
+   LDFLAGS="$LDFLAGS $X_LDFLAGS $X_LIBS"
    AC_CHECK_LIB(X11, XOpenDisplay, x_libs="-lX11 $X_EXTRA_LIBS", [AC_MSG_ERROR([X Development libraries not found])])
    dnl Check if the XauDisposeAuth symbol is provided by libXau.
    AC_CHECK_LIB(Xau, XauDisposeAuth, XAU_LIBS="-lXau", [])
@@@@ -4994,7 +5010,7 @@@@ if test -n "$with_system_openssl" -o -n "$with_system_
     AC_MSG_RESULT([external])
     # Mac OS builds should get out without extra stuff is the Mac porters'
     # wish. And pkg-config is although Xcode ships a .pc for openssl
-    if test "$_os" = "Darwin"; then
+    if test "$_os" = "Darwin" || test "$_os" = "OpenBSD"; then
         OPENSSL_CFLAGS=
         OPENSSL_LIBS="-lssl -lcrypto"
     else
@@@@ -6230,42 +6246,25 @@@@ KDE_LIBS=""
 MOC="moc"
 if test "$test_kde" = "yes" -a "$ENABLE_KDE" = "TRUE" ; then
     dnl Search paths for Qt and KDE
-    if test "$build_cpu" != "x86_64" ; then
-        qt_incdirs="$QTINC /usr/local/qt/include /usr/include/qt /usr/include /usr/X11R6/include/X11/qt /usr/X11R6/include/qt /usr/lib/qt3/include /usr/lib/qt/include /usr/share/qt3/include $x_includes"
-        qt_libdirs="$QTLIB /usr/local/qt/lib /usr/lib/qt /usr/lib /usr/X11R6/lib/X11/qt /usr/X11R6/lib/qt /usr/lib/qt3/lib /usr/lib/qt/lib /usr/share/qt3/lib $x_libraries"
-    else
-        qt_incdirs="$QTINC /usr/local/qt/include /usr/include/qt /usr/include /usr/X11R6/include/X11/qt /usr/X11R6/include/qt /usr/lib64/qt3/include /usr/lib64/qt/include /usr/share/qt3/include /usr/lib/qt3/include /usr/lib/qt/include $x_includes"
-        qt_libdirs="$QTLIB /usr/local/qt/lib64 /usr/lib64/qt /usr/lib64 /usr/X11R6/lib64/X11/qt /usr/X11R6/lib64/qt /usr/lib64/qt3/lib64 /usr/lib64/qt/lib64 /usr/share/qt3/lib64 /usr/local/qt/lib /usr/lib/qt /usr/lib /usr/X11R6/lib/X11/qt /usr/X11R6/lib/qt /usr/lib/qt3/lib /usr/lib/qt/lib /usr/share/qt3/lib $x_libraries"
-    fi
+    qt_incdirs="$QTINC /usr/local/qt/include /usr/include/qt /usr/include /usr/X11R6/include/X11/qt /usr/X11R6/include/qt /usr/lib/qt3/include /usr/lib/qt/include /usr/share/qt3/include /usr/lib/qt3/include /usr/lib/qt/include $x_includes"
+    qt_libdirs="$QTLIB /usr/local/qt/lib /usr/lib/qt /usr/lib /usr/X11R6/lib/X11/qt /usr/X11R6/lib/qt /usr/lib/qt3/lib /usr/lib/qt/lib /usr/share/qt3/lib /usr/local/qt/lib /usr/lib/qt /usr/lib /usr/X11R6/lib/X11/qt /usr/X11R6/lib/qt /usr/lib/qt3/lib /usr/lib/qt/lib /usr/share/q
+t3/lib $x_libraries"
     if test -n "$QTDIR" ; then
         qt_incdirs="$QTDIR/include $qt_incdirs"
-        if test "$build_cpu" != "x86_64" ; then
-            qt_libdirs="$QTDIR/lib $qt_libdirs"
-        else
-            qt_libdirs="$QTDIR/lib64 $QTDIR/lib $qt_libdirs"
-        fi
+	qt_libdirs="$QTDIR/lib $qt_libdirs"
     fi
-    if test "$build_cpu" != "x86_64" ; then
-        kde_incdirs="/usr/lib/kde/include /usr/local/kde/include /usr/local/include /usr/kde/include /usr/include/kde /opt/kde3/include /opt/kde/include $x_includes"
-        kde_libdirs="/usr/lib/kde/lib /usr/local/kde/lib /usr/kde/lib /usr/lib/kde /usr/lib/kde3 /usr/X11R6/lib /usr/local/lib /opt/kde3/lib /opt/kde/lib /usr/X11R6/kde/lib /usr/lib $x_libraries"
-    else
-        kde_incdirs="/usr/lib64/kde/include /usr/lib/kde/include /usr/local/kde/include /usr/local/include /usr/kde/include /usr/include/kde /opt/kde3/include /opt/kde/include $x_includes"
-        kde_libdirs="/usr/lib64/kde/lib64 /usr/local/kde/lib64 /usr/kde/lib64 /usr/lib64/kde /usr/lib64/kde3 /usr/X11R6/lib64 /usr/local/lib64 /opt/kde3/lib64 /opt/kde/lib64 /usr/X11R6/kde/lib64 /usr/lib/kde/lib /usr/local/kde/lib /usr/kde/lib /usr/lib/kde /usr/lib/kde3 /usr/lib /usr/X11R6/lib /usr/local/lib /opt/kde3/lib /opt/kde/lib /usr/X11R6/kde/lib /usr/lib64 $x_libraries"
-    fi
+    kde_incdirs="/usr/lib/kde/include /usr/local/kde/include /usr/local/include /usr/kde/include /usr/include/kde /usr/include /opt/kde3/include /opt/kde/include $x_includes"
+    kde_libdirs="/usr/local/lib /usr/lib/kde/lib /usr/local/kde/lib /usr/kde/lib /usr/lib/kde /usr/lib/kde3 /usr/lib /usr/X11R6/lib /opt/kde3/lib /opt/kde/lib /usr/X11R6/kde/lib $x_libraries"
     if test -n "$KDEDIR" ; then
         kde_incdirs="$KDEDIR/include $kde_incdirs"
-        if test "$build_cpu" != "x86_64" ; then
-            kde_libdirs="$KDEDIR/lib $kde_libdirs"
-        else
-            kde_libdirs="$KDEDIR/lib64 $KDEDIR/lib $kde_libdirs"
-        fi
+	kde_libdirs="$KDEDIR/lib $kde_libdirs"
     fi
 
     dnl What to test
     qt_test_include="qstyle.h"
-    qt_test_library="libqt-mt.so"
+    qt_test_library="libqt-mt.so*"
     kde_test_include="ksharedptr.h"
-    kde_test_library="libkdeui.so"
+    kde_test_library="libkdeui.so*"
 
     dnl Check for Qt headers
     AC_MSG_CHECKING([for Qt headers])
@@@@ -6286,7 +6285,7 @@@@ your Qt installation by exporting QTDIR before running
     AC_MSG_CHECKING([for Qt libraries])
     qt_libdir="no"
     for qt_check in $qt_libdirs ; do
-        if test -r "$qt_check/$qt_test_library" ; then
+	if test -r "`ls $qt_check/$qt_test_library | head -1`" ; then
             qt_libdir="$qt_check"
             break
         fi
@@@@ -6323,7 +6322,7 @@@@ your KDE installation by exporting KDEDIR before runni
     AC_MSG_CHECKING([for KDE libraries])
     kde_libdir="no"
     for kde_check in $kde_libdirs ; do
-        if test -r "$kde_check/$kde_test_library" ; then
+	if test -r "`ls $kde_check/$kde_test_library | head -1`" ; then
             kde_libdir="$kde_check"
             break
         fi
@@@@ -6564,7 +6563,7 @@@@ AC_SUBST(WITHOUT_AFMS)
 AC_SUBST(SCPDEFS)
 
 AC_MSG_CHECKING([whether and how to use Xinerama])
-if test "$_os" = "Darwin"; then
+if test "$_os" = "Darwin" -o "$_os" = "OpenBSD"; then
    USE_XINERAMA=YES
    XINERAMA_LINK=dynamic
    AC_MSG_RESULT([yes])
@@@@ -6733,7 +6732,6 @@@@ if test "$ANT_HOME" != "NO_ANT_HOME"; then
    AC_MSG_RESULT([Ant lib directory found.])
 fi
 AC_SUBST(ANT_LIB)
-fi
 
 ant_minver=1.6.0
 # update for more extensions...
@@@@ -6831,6 +6829,7 @@@@ location (/usr/share/java), specify its pathname via
     fi
 fi
 AC_SUBST(OOO_JUNIT_JAR)
+fi
 
 AC_MSG_CHECKING([which languages to be built])
 WITH_LANG="$with_lang"
@


1.5
log
@- update to openoffice.org 3.3rc3
- rework a port a little bit to be sync in the openoffice linux
  code and remove some hacks that we don't need anymore
- also use --as-needed while linking (which results in at least a 50% speed
  improovement)
- depend on more libraries from the system instead of using the internal
  ones
@
text
@@


1.4
log
@Adapt to the libwpd library named change
@
text
@d1 3
a3 4
$OpenBSD: patch-configure_in,v 1.3 2010/06/26 15:48:11 robert Exp $
--- configure.in.orig.port	Wed May 26 12:21:11 2010
+++ configure.in	Sat Nov  6 12:39:17 2010
@@@@ -1053,6 +1053,18 @@@@ case "$build_os" in
d8 11
a18 11
+                test_x=yes
+                test_gtk=yes
+                build_cairo=yes
+                test_kde=yes
+                test_cups=yes
+                test_freetype=yes
+                test_randr=yes
+                PTHREAD_CFLAGS="-pthread -D_THREAD_SAFE"
+                PTHREAD_LIBS="-pthread"
+                _os=OpenBSD
+                ;;
d22 1
a22 1
@@@@ -2499,6 +2511,8 @@@@ dnl ==================================================
d31 1
a31 1
@@@@ -3362,6 +3376,9 @@@@ if test "$_os" != "WINNT" -a \( "z$enable_epm" = "z" -
d35 3
a37 3
+        OpenBSD)
+                PKGFORMAT=portable
+                ;;
d41 1
a41 1
@@@@ -3811,12 +3828,13 @@@@ if test -n "$with_system_python" -o -n "$with_system_l
d47 6
a52 10
 
    if test "$_os" = "Darwin"; then
       PYTHON_LIBS="-framework Python"
    else
-      PYTHON_LIBS="-lpython$python_version"
+      PYTHON_LIBS="-lpython$python_version $python_libs"
    fi
    
    dnl check if the headers really work:
@@@@ -3855,16 +3873,13 @@@@ if test -n "$with_system_db" -o -n "$with_system_libs"
a66 1
-    for v in `seq 1 7`; do
d69 1
a69 2
+    for v in `jot - 1 7 1`; do
        AC_TRY_RUN([
d72 2
a73 1
@@@@ -3874,6 +3889,7 @@@@ int main(int argc, char **argv) {
d75 1
a75 2
        ], [DB_VERSION_MINOR=$v], [])
     done
d77 4
a80 4
     if test "$DB_VERSION_MINOR" -gt "1"; then
        AC_MSG_RESULT([OK])
        DB_VERSION=4.$DB_VERSION_MINOR
@@@@ -4661,11 +4677,11 @@@@ if test -n "$with_system_icu" -o -n "$with_system_libs
d94 1
a94 1
@@@@ -4780,7 +4796,7 @@@@ elif test "$_os" != "WINNT" ; then
d103 1
a103 1
@@@@ -4957,7 +4973,7 @@@@ if test -n "$with_system_openssl" -o -n "$with_system_
d112 1
a112 1
@@@@ -6125,42 +6141,24 @@@@ KDE_LIBS=""
d124 2
a125 1
+    qt_libdirs="$QTLIB /usr/local/qt/lib /usr/lib/qt /usr/lib /usr/X11R6/lib/X11/qt /usr/X11R6/lib/qt /usr/lib/qt3/lib /usr/lib/qt/lib /usr/share/qt3/lib /usr/local/qt/lib /usr/lib/qt /usr/lib /usr/X11R6/lib/X11/qt /usr/X11R6/lib/qt /usr/lib/qt3/lib /usr/lib/qt/lib /usr/share/qt3/lib $x_libraries"
d133 1
a133 1
+        qt_libdirs="$QTDIR/lib $qt_libdirs"
d164 1
a164 1
@@@@ -6181,7 +6179,7 @@@@ your Qt installation by exporting QTDIR before running
d173 1
a173 1
@@@@ -6218,7 +6216,7 @@@@ your KDE installation by exporting KDEDIR before runni
d182 1
a182 1
@@@@ -6459,7 +6457,7 @@@@ AC_SUBST(WITHOUT_AFMS)
d191 16
@


1.3
log
@Update to OpenOffice.Org 3.2.1
@
text
@d1 3
a3 3
$OpenBSD: patch-configure_in,v 1.2 2010/03/30 11:03:07 robert Exp $
--- configure.in.orig.port	Wed May 26 20:21:11 2010
+++ configure.in	Fri Jun 25 23:57:08 2010
a41 9
@@@@ -3691,7 +3708,7 @@@@ if test -n "$with_system_libwpd" -o -n "$with_system_l
         test "$with_system_libwpd" != "no"; then
     AC_MSG_RESULT([external])
     SYSTEM_LIBWPD=YES
-    PKG_CHECK_MODULES( LIBWPD, libwpd-0.8 )
+    PKG_CHECK_MODULES( LIBWPD, libwpd )
 else
     AC_MSG_RESULT([internal])
     SYSTEM_LIBWPD=NO
@


1.2
log
@Update to openoffice 3.2;
this is a major update that introduced many cool stuff and it's
speed is awesome compared to the previous versions
@
text
@d1 4
a4 4
$OpenBSD$
--- configure.in.orig.port	Sun Jan 24 16:14:31 2010
+++ configure.in	Sun Jan 24 16:24:10 2010
@@@@ -1036,6 +1036,18 @@@@ case "$build_os" in
d23 1
a23 1
@@@@ -2482,6 +2494,8 @@@@ dnl ==================================================
d32 1
a32 1
@@@@ -3345,6 +3359,9 @@@@ if test "$_os" != "WINNT" -a \( "z$enable_epm" = "z" -
d42 1
a42 1
@@@@ -3674,7 +3691,7 @@@@ if test -n "$with_system_libwpd" -o -n "$with_system_l
d51 1
a51 1
@@@@ -3794,12 +3811,13 @@@@ if test -n "$with_system_python" -o -n "$with_system_l
d66 1
a66 1
@@@@ -3838,16 +3856,13 @@@@ if test -n "$with_system_db" -o -n "$with_system_libs"
d88 1
a88 1
@@@@ -3857,6 +3872,7 @@@@ int main(int argc, char **argv) {
d96 1
a96 1
@@@@ -4522,11 +4538,11 @@@@ if test -n "$with_system_icu" -o -n "$with_system_libs
d110 1
a110 1
@@@@ -4641,7 +4657,7 @@@@ elif test "$_os" != "WINNT" ; then
d119 1
a119 1
@@@@ -4818,7 +4834,7 @@@@ if test -n "$with_system_openssl" -o -n "$with_system_
d128 1
a128 1
@@@@ -5986,42 +6002,24 @@@@ KDE_LIBS=""
d179 1
a179 1
@@@@ -6042,7 +6040,7 @@@@ your Qt installation by exporting QTDIR before running
d188 1
a188 1
@@@@ -6079,7 +6077,7 @@@@ your KDE installation by exporting KDEDIR before runni
d197 1
a197 1
@@@@ -6320,7 +6318,7 @@@@ AC_SUBST(WITHOUT_AFMS)
@


1.1
log
@update to openoffice-3.1.0

- introduce a no_java flavor because now we can build OOo w/o having jdk and
  other java dependencies installed
- introduce a parallel flavor that allows people to build OOo with parallel
  processes. to achieve this we use a so called "non-blocking" cat, so
  another distfile has been added in order two provide to pre-built static
  binaries with the needed modifications (for amd64 and i386)
  By default we run a parallel build with NCPU+1 processes.
- remove unneccessary patch files
- fix some dependencies
@
text
@d1 4
a4 3
--- configure.in.orig.port	Wed Apr 15 16:46:34 2009
+++ configure.in	Fri May  8 11:01:46 2009
@@@@ -1001,6 +1001,18 @@@@ case "$build_os" in
d23 1
a23 1
@@@@ -2310,6 +2322,8 @@@@ dnl ==================================================
d32 1
a32 1
@@@@ -3124,6 +3138,9 @@@@ if test "$_os" != "WINNT" -a \( "z$enable_epm" = "z" -
d36 3
a38 3
+	OpenBSD)
+		PKGFORMAT=portable
+		;;
d42 1
a42 1
@@@@ -3453,7 +3470,7 @@@@ if test -n "$with_system_libwpd" -o -n "$with_system_l
d51 1
a51 1
@@@@ -3573,12 +3590,13 @@@@ if test -n "$with_system_python" -o -n "$with_system_l
d66 1
a66 1
@@@@ -3617,16 +3635,13 @@@@ if test -n "$with_system_db" -o -n "$with_system_libs"
d78 1
a78 1
+            [ AC_MSG_ERROR(no. install the db4 libraries) ], []
d88 1
a88 1
@@@@ -3636,6 +3651,7 @@@@ int main(int argc, char **argv) {
d96 1
a96 1
@@@@ -4238,11 +4254,11 @@@@ if test -n "$with_system_icu" -o -n "$with_system_libs
d110 1
a110 1
@@@@ -4324,7 +4340,7 @@@@ elif test "$_os" != "WINNT" ; then
d119 1
a119 1
@@@@ -4495,7 +4511,7 @@@@ if test -n "$with_system_openssl" -o -n "$with_system_
d128 1
a128 1
@@@@ -5696,42 +5712,23 @@@@ KDE_LIBS=""
d148 1
a148 1
+	qt_libdirs="$QTDIR/lib $qt_libdirs"
d151 2
a152 2
-        kde_incdirs="/usr/lib/kde/include /usr/local/kde/include /usr/local/include /usr/kde/include /usr/include/kde /usr/include /opt/kde3/include /opt/kde/include $x_includes"
-        kde_libdirs="/usr/lib/kde/lib /usr/local/kde/lib /usr/kde/lib /usr/lib/kde /usr/lib/kde3 /usr/lib /usr/X11R6/lib /usr/local/lib /opt/kde3/lib /opt/kde/lib /usr/X11R6/kde/lib $x_libraries"
d154 2
a155 2
-        kde_incdirs="/usr/lib64/kde/include /usr/lib/kde/include /usr/local/kde/include /usr/local/include /usr/kde/include /usr/include/kde /usr/include /opt/kde3/include /opt/kde/include $x_includes"
-        kde_libdirs="/usr/lib64/kde/lib64 /usr/local/kde/lib64 /usr/kde/lib64 /usr/lib64/kde /usr/lib64/kde3 /usr/lib64 /usr/X11R6/lib64 /usr/local/lib64 /opt/kde3/lib64 /opt/kde/lib64 /usr/X11R6/kde/lib64 /usr/lib/kde/lib /usr/local/kde/lib /usr/kde/lib /usr/lib/kde /usr/lib/kde3 /usr/lib /usr/X11R6/lib /usr/local/lib /opt/kde3/lib /opt/kde/lib /usr/X11R6/kde/lib $x_libraries"
d160 1
a160 1
-        kde_incdirs="$KDEDIR/include $kde_incdirs"
d166 1
a166 1
+        kde_libdirs="$KDEDIR/lib $kde_libdirs"
d179 1
a179 1
@@@@ -5752,7 +5749,7 @@@@ your Qt installation by exporting QTDIR before running
d188 1
a188 1
@@@@ -5788,7 +5785,7 @@@@ your KDE installation by exporting KDEDIR before runni
d197 1
a197 1
@@@@ -5965,7 +5962,7 @@@@ AC_SUBST(WITHOUT_AFMS)
@

