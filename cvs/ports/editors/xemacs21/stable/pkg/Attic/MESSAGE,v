head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.0.12
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.8
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.01.03.10.44.27;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2007.09.18.18.56.03;	author aanriot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update xemacs to 21.4.22
@
text
@XEmacs is pretty useless as-is.  It is just an engine.
You need to install modules to provide your users full functionality.
There is two methods to achieve this :
1 - install the xemacs21-sumo package.  It contains all the 
    modules currently supported by the XEmacs team.
    It's fast, easy and your users won't ever bother you again about this.
    On the other hand the package is quite huge.
2 - you have to install by hand every XEmacs' modules as described
    in the XEmacs documentation. (Search for "packages" in the info tree.)
    There are a lot of interdependencies between XEmacs' modules
    and you may end up with everything installed just as method 1 would
    have (without the hassle).

Note: XEmacs modules are named "packages" by the XEmacs team, the term
      "module" is used here just to limit possible confusion with
      OpenBSD packages.
@


1.1
log
@move Xemacs 21.4 in xemacs21/stable, in order to import Xemacs 21.5
later (the actively developped branch, which has Xft support etc.)

help and ok matthieu@@, "looks ok" ajacoutot@@
@
text
@@

