head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2016.06.23.04.07.49;	author bentley;	state dead;
branches;
next	1.1;
commitid	mwxzNWKXxVl8nJla;

1.1
date	2016.05.28.21.16.43;	author naddy;	state Exp;
branches;
next	;
commitid	3sbRqs74diaLmSME;


desc
@@


1.2
log
@Update to nano-2.6.0.

Release notes:
http://git.savannah.gnu.org/cgit/nano.git/commit/?id=9536edfcc6826d42e99bdb24c1d501bd50a21f1a

ok naddy@@ (maintainer)
@
text
@$OpenBSD: patch-src_files_c,v 1.1 2016/05/28 21:16:43 naddy Exp $

Do not call free on the result of dirname.
http://git.savannah.gnu.org/cgit/nano.git/commit/src/files.c?id=33a6f6a1b643bac50ca59a4cbd861cb4e8a7c45d

--- src/files.c.orig	Thu Feb 25 21:47:10 2016
+++ src/files.c	Sat May 28 23:09:43 2016
@@@@ -36,15 +36,11 @@@@
 /* Verify that the containing directory of the given filename exists. */
 bool has_valid_path(const char *filename)
 {
-    char *parentdir;
+    char *namecopy = mallocstrcpy(NULL, filename);
+    char *parentdir = dirname(namecopy);
     struct stat parentinfo;
     bool validity = FALSE;
 
-    if (strrchr(filename, '/') == NULL)
-	parentdir = mallocstrcpy(NULL, ".");
-    else
-	parentdir = dirname(mallocstrcpy(NULL, filename));
-
     if (stat(parentdir, &parentinfo) == -1) {
 	if (errno == ENOENT)
 	    statusbar(_("Directory '%s' does not exist"), parentdir);
@@@@ -59,7 +55,7 @@@@ bool has_valid_path(const char *filename)
 	    validity = TRUE;
     }
 
-    free(parentdir);
+    free(namecopy);
 
     if (!validity)
 	beep();
@


1.1
log
@Fix crash when invoking nano with absolute file name.  From upstream git.
Problem reported by Scott Vanderbilt.
@
text
@d1 1
a1 1
$OpenBSD$
@

