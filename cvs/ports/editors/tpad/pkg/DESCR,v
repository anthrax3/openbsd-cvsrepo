head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.16
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	bcallah_2013-Apr-29:1.1.1.1
	bcallah:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.04.30.17.27.34;	author bcallah;	state Exp;
branches;
next	1.1;

1.1
date	2013.04.29.14.22.32;	author bcallah;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.04.29.14.22.32;	author bcallah;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Commit a better pkg/DESCR
Bump REVISION.
ok naddy@@
@
text
@Tpad is a simple, fast, and easy to use GTK-based text editor that is
intuitive for new users.

Features include automatic spell checking and parentheses and braces
highlighting.
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
Tpad was designed to be simple, fast, and easy to use.
d4 2
a5 15
We have lots of great text editors in the world. On one end of the
spectrum we have programs like gvim that are fast, feature loaded,
versatile and for users who are experienced with them they are easy to
use. Not so much for the rest of us. The problem: the number of features
can be overwhelming, making documentation difficult for newer/less
sophisticated users. They also tend to behave in ways that these users
do not expect. They are not intuitive for such users.

Then we have programs like the current gedit. Lots of features, plug-ins
and they behave in an intuitive manner. The problem: they are slow,
buggy, bloated and unstable.

The goal of Tpad: use GTK to create a text editor that is intuitive for
new users (easy to use) that is also fast and stable. We want all the
core features without the bloat.
@


1.1.1.1
log
@Import editors/tpad - a simple, fast GTK-based text editor.
tweak from and ok sthen@@
@
text
@@
