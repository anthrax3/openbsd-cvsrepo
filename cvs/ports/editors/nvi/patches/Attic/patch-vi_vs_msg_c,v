head	1.3;
access;
symbols
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2013.11.20.03.43.05;	author bentley;	state dead;
branches;
next	1.2;

1.2
date	2013.06.19.18.48.22;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2012.10.13.08.13.51;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to nvi-2.1.2.
@
text
@$OpenBSD: patch-vi_vs_msg_c,v 1.2 2013/06/19 18:48:22 sthen Exp $

Our timespecsub function takes three arguments, and CLOCK_PROF has been
removed.

--- vi/vs_msg.c.orig	Sun Oct  7 15:15:31 2012
+++ vi/vs_msg.c	Wed Jun 19 19:35:39 2013
@@@@ -91,7 +91,7 @@@@ vs_busy(SCR *sp, const char *msg, busy_t btype)
 
 		/* Initialize state for updates. */
 		vip->busy_ch = 0;
-		(void)clock_gettime(CLOCK_PROF, &vip->busy_ts);
+		(void)clock_gettime(CLOCK_MONOTONIC, &vip->busy_ts);
 
 		/* Save the current cursor. */
 		(void)gp->scr_cursor(sp, &vip->busy_oldy, &vip->busy_oldx);
@@@@ -124,9 +124,9 @@@@ vs_busy(SCR *sp, const char *msg, busy_t btype)
 			break;
 
 		/* Update no more than every 1/8 of a second. */
-		(void)clock_gettime(CLOCK_PROF, &ts);
+		(void)clock_gettime(CLOCK_MONOTONIC, &ts);
 		ts_diff = ts;
-		timespecsub(&ts_diff, &vip->busy_ts);
+		timespecsub(&ts_diff, &vip->busy_ts, &vip->busy_ts);
 		if (timespeccmp(&ts_diff, &ts_min, <))
 			return;
 		vip->busy_ts = ts;
@


1.2
log
@switch CLOCK_PROF to CLOCK_MONOTONIC to unbreak; ok naddy
@
text
@d1 1
a1 1
$OpenBSD: patch-vi_vs_msg_c,v 1.1 2012/10/13 08:13:51 dcoppa Exp $
@


1.1
log
@Update to nvi-2.1.1

ok naddy@@ (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 1
Our timespecsub function takes three arguments
d6 14
a19 3
--- vi/vs_msg.c.orig	Mon Oct  8 12:49:39 2012
+++ vi/vs_msg.c	Mon Oct  8 12:50:32 2012
@@@@ -126,7 +126,7 @@@@ vs_busy(SCR *sp, const char *msg, busy_t btype)
d21 2
a22 1
 		(void)clock_gettime(CLOCK_PROF, &ts);
@

