head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.4
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.2
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.34
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.30
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.32
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.28
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.26
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.24
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.22
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.20
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.18
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.16
	OPENBSD_5_0:1.3.0.14
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.12
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.10
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.8
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.2.0.18
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.16
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.14
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	margarida_2003-05-17:1.1.1.1
	margarida:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2016.09.23.14.40.10;	author feinerer;	state Exp;
branches;
next	1.3;
commitid	AxxUTd27g1UINcRB;

1.3
date	2008.05.04.20.43.55;	author okan;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.02.01.34.46;	author margarida;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.17.07.29.33;	author margarida;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.17.07.29.33;	author margarida;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to HT 2.1.0

ok benoit@@
@
text
@HT is a file editor/viewer/analyzer for executables.  The goal is to
combine the low-level functionality of a debugger and the usability of
IDEs.

Support includes the following file formats:

* Win32 portable executables (PE) (good support)
* Unix executable and linkable format (ELF) (good support)
* DOS standard executables (MZ) (supported)
* Win32 linear executables (LE) (supported)
* Windows/OS2 "new" executables (NE) (supported)
* Unix common object file format (COFF) + DJGPP COFF (supported)
* OS2 linear executables (LX)
* M$ object files (.obj)

Support means that HT will be able to correctly display and modify the
executable header, image and other extensions specific to the file
(import/export sections, relocations, debugging information etc.).

Supports 'copy', 'paste', histories, as well as 'undo'.
@


1.3
log
@- update to 2.0.13
- install ht as hte to remove conflict with print/texlive/base
  (note in pkg/MESSAGE)
- respect CFLAGS and X11BASE
- add OpenBSD target

based on patches from Paul Irofti and Genadijus Paleckis

feedback and ok merdely@@
@
text
@d5 1
a5 1
Support includes the following file formats: 
d7 8
a14 8
* Win32 portable executables (PE) (good support) 
* Unix executable and linkable format (ELF) (good support) 
* DOS standard executables (MZ) (supported) 
* Win32 linear executables (LE) (supported) 
* Windows/OS2 "new" executables (NE) (supported) 
* Unix common object file format (COFF) + DJGPP COFF (supported) 
* OS2 linear executables (LX) 
* M$ object files (.obj) 
@


1.2
log
@Update to version 0.7.3.
Bugfix release with minor enhancements.
@
text
@d1 3
a3 3
HT is a file editor/viewer/analyzer for executables. 
The goal is to combine the low-level functionality of a debugger 
and the usability of IDEs. 
a4 5
- Supported formats
Support means that HT will be able to correctly display and modify 
the executable header, image and other extensions specific to the 
file (import/export sections, relocations, debugging information 
etc.). 
d16 5
a20 1
Suports 'copy', 'paste', histories, as well as 'undo'.
@


1.1
log
@Initial revision
@
text
@a21 2

WWW: ${HOMEPAGE}
@


1.1.1.1
log
@Initial import of ht-0.7.1
--
HT is a file editor/viewer/analyzer for executables. 
The goal is to combine the low-level functionality of a debugger 
and the usability of IDEs.
Support includes the following file formats:
* Win32 portable executables (PE) (good support) 
* Unix executable and linkable format (ELF) (good support) 
* DOS standard executables (MZ) (supported) 
* Win32 linear executables (LE) (supported) 
* Windows/OS2 "new" executables (NE) (supported) 
* Unix common object file format (COFF) + DJGPP COFF (supported) 
* OS2 linear executables (LX) 
* M$ object files (.obj) 

WWW: http://hte.sourceforge.net/
@
text
@@
