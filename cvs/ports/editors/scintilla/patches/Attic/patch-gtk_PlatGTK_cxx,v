head	1.3;
access;
symbols
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.1.1.0.14
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.12
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.10
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.8
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.6
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.4
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	sturm_2003-Aug-14:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2007.08.01.09.21.06;	author steven;	state dead;
branches;
next	1.2;

1.2
date	2007.01.18.10.56.27;	author steven;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.14.18.24.30;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.08.14.18.24.30;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to 1.74
remove strc*/sprintf patches

from maintainer Jeremy Evans <openbsd@@jeremyevans.net>
@
text
@$OpenBSD: patch-gtk_PlatGTK_cxx,v 1.2 2007/01/18 10:56:27 steven Exp $
--- gtk/PlatGTK.cxx.orig	Tue Mar 28 17:31:51 2006
+++ gtk/PlatGTK.cxx	Tue Mar 28 17:31:51 2006
@@@@ -351,7 +351,7 @@@@ static void GenerateFontSpecStrings(cons
 	if (strchr(fontName, '-')) {
 		char tmp[300];
 		char *d1 = NULL, *d2 = NULL, *d3 = NULL;
-		strncpy(tmp, fontName, sizeof(tmp) - 1);
+		strlcpy(tmp, fontName, sizeof(tmp));
 		d1 = strchr(tmp, '-');
 		// we know the first dash exists
 		d2 = strchr(d1 + 1, '-');
@@@@ -362,25 +362,25 @@@@ static void GenerateFontSpecStrings(cons
 			*d2 = '\0';
 			foundary[0] = '-';
 			foundary[1] = '\0';
-			strncpy(faceName, tmp, foundary_len - 1);
-			strncpy(charset, d2 + 1, charset_len - 1);
+			strlcpy(faceName, tmp, foundary_len);
+			strlcpy(charset, d2 + 1, charset_len);
 		} else if (d2) {
 			// fontface-isoxxx-x
 			*d1 = '\0';
-			strcpy(foundary, "-*-");
-			strncpy(faceName, tmp, faceName_len - 1);
-			strncpy(charset, d1 + 1, charset_len - 1);
+			strlcpy(foundary, "-*-", foundary_len);
+			strlcpy(faceName, tmp, faceName_len);
+			strlcpy(charset, d1 + 1, charset_len);
 		} else {
 			// foundary-fontface
 			foundary[0] = '-';
 			foundary[1] = '\0';
-			strncpy(faceName, tmp, faceName_len - 1);
-			strncpy(charset, CharacterSetName(characterSet), charset_len - 1);
+			strlcpy(faceName, tmp, faceName_len);
+			strlcpy(charset, CharacterSetName(characterSet), charset_len);
 		}
 	} else {
-		strncpy(foundary, "-*-", foundary_len);
-		strncpy(faceName, fontName, faceName_len - 1);
-		strncpy(charset, CharacterSetName(characterSet), charset_len - 1);
+		strlcpy(foundary, "-*-", foundary_len);
+		strlcpy(faceName, fontName, faceName_len);
+		strlcpy(charset, CharacterSetName(characterSet), charset_len);
 	}
 }
 
@@@@ -390,7 +390,7 @@@@ static void SetLogFont(LOGFONT &lf, cons
 	lf.bold = bold;
 	lf.italic = italic;
 	lf.characterSet = characterSet;
-	strncpy(lf.faceName, faceName, sizeof(lf.faceName) - 1);
+	strlcpy(lf.faceName, faceName, sizeof(lf.faceName));
 }
 
 /**
@@@@ -552,9 +552,8 @@@@ FontID FontCached::CreateNewFont(const c
 	// eg. adobe-courier-iso10646-1,*-courier-iso10646-1,*-*-*-*
 	if (strchr(fontName, ',')) {
 		// build a fontspec and use gdk_fontset_load
-		int remaining = sizeof(fontset);
 		char fontNameCopy[1024];
-		strncpy(fontNameCopy, fontName, sizeof(fontNameCopy) - 1);
+		strlcpy(fontNameCopy, fontName, sizeof(fontNameCopy));
 		char *fn = fontNameCopy;
 		char *fp = strchr(fn, ',');
 		for (;;) {
@@@@ -585,8 +584,7 @@@@ FontID FontCached::CreateNewFont(const c
 			// we are doing italic, add an oblique font
 			// to the list
 			if (italic && fontset[0] == '\0') {
-				strncat(fontset, fontspec, remaining - 1);
-				remaining -= strlen(fontset);
+				strlcat(fontset, fontspec, sizeof(fontset));
 
 				snprintf(fontspec,
 				         sizeof(fontspec) - 1,
@@@@ -597,8 +595,7 @@@@ FontID FontCached::CreateNewFont(const c
 				         charset);
 			}
 
-			strncat(fontset, fontspec, remaining - 1);
-			remaining -= strlen(fontset);
+			strlcat(fontset, fontspec, sizeof(fontset));
 
 			if (!fp)
 				break;
@@@@ -2394,8 +2391,7 @@@@ void ListBoxX::GetValue(int n, char *val
 	}
 #endif
 	if (text && len > 0) {
-		strncpy(value, text, len);
-		value[len - 1] = '\0';
+		strlcpy(value, text, len);
 	} else {
 		value[0] = '\0';
 	}
@@@@ -2668,7 +2664,7 @@@@ void Platform::DebugPrintf(const char *f
 	char buffer[2000];
 	va_list pArguments;
 	va_start(pArguments, format);
-	vsprintf(buffer, format, pArguments);
+	vsnprintf(buffer, sizeof(buffer), format, pArguments);
 	va_end(pArguments);
 	Platform::DebugDisplay(buffer);
 }
@@@@ -2688,8 +2684,7 @@@@ bool Platform::ShowAssertionPopUps(bool 
 
 void Platform::Assert(const char *c, const char *file, int line) {
 	char buffer[2000];
-	sprintf(buffer, "Assertion [%s] failed at %s %d", c, file, line);
-	strcat(buffer, "\r\n");
+	snprintf(buffer, sizeof(buffer), "Assertion [%s] failed at %s %d\r\n", c, file, line);
 	Platform::DebugDisplay(buffer);
 	abort();
 }
@


1.2
log
@upgrade to 1.72

based on diffs from new maintainer Jeremy Evans <jeremyevans0 at gmail.com>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
--- gtk/PlatGTK.cxx.orig	2003-08-13 16:46:23.000000000 +1000
+++ gtk/PlatGTK.cxx	2003-08-13 17:01:38.000000000 +1000
@@@@ -332,7 +332,7 @@@@ static void GenerateFontSpecStrings(cons
d13 1
a13 1
@@@@ -343,25 +343,25 @@@@ static void GenerateFontSpecStrings(cons
d49 1
a49 1
@@@@ -371,7 +371,7 @@@@ static void SetLogFont(LOGFONT &lf, cons
d58 1
a58 1
@@@@ -533,9 +533,8 @@@@ FontID FontCached::CreateNewFont(const c
d69 1
a69 1
@@@@ -566,8 +565,7 @@@@ FontID FontCached::CreateNewFont(const c
d79 1
a79 1
@@@@ -578,8 +576,7 @@@@ FontID FontCached::CreateNewFont(const c
d89 1
a89 2
@@@@ -1967,8 +1964,7 @@@@ void ListBoxX::GetValue(int n, char *val
 		break;
d91 1
d99 1
a99 1
@@@@ -2197,7 +2193,7 @@@@ void Platform::DebugPrintf(const char *f
d108 1
a108 1
@@@@ -2217,8 +2213,7 @@@@ bool Platform::ShowAssertionPopUps(bool 
@


1.1.1.1
log
@Initial import of scintilla 1.54

Scintilla is a free source code editing component. As well as features
found in standard text editing components, Scintilla includes features
especially useful when editing and debugging source code. These include
support for syntax styling, error indicators, code completion and call
tips. The selection margin can contain markers like those used in debuggers
to indicate breakpoints and the current line. Styling choices are more open
than with many editors, allowing the use of proportional fonts, bold and
italics, multiple foreground and background colours and multiple fonts.

WWW: http://www.scintilla.org/

from Joerg Sonnenberger <joerg@@bec.de> with patches from Andrew Dalgleisch
@
text
@@
