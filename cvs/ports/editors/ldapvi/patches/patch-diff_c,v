head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.18
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.14
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.16
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.12
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.10
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.8
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.03.02.08.01.07;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add various patches to ldapvi from upstream git/mailing list submissions:

- add -y support to read password from a file
- remove useless header that vim whines about
- preserve order of attribute values
- fix possible LP64 issue (improper sentinel)
- allow editors/pagers with arguments
- getline namespace collision, upstream git 256ced029c
- fix hash generation

OK ajacoutot@@
@
text
@$OpenBSD$

preserve order of attribute values, from git upstream 3ae1458bb7

--- diff.c.orig	Sat May  5 11:17:26 2007
+++ diff.c	Thu Mar  1 22:19:30 2012
@@@@ -46,22 +46,32 @@@@ compare_ptr_arrays(GPtrArray *a, GPtrArray *b,
 		for (; i < a->len; i++) note(g_ptr_array_index(a, i), 0, x);
 }
 
-static void
-note_values(GArray *a, GArray *b, int *changed)
+static int
+ordered_array_equal(GPtrArray *a, GPtrArray *b,
+		  int (*cmp)(const void *, const void *))
 {
-	if (!(a && b)) *changed = 1;
+	int i;
+
+	if (a->len != b->len)
+		return 0;
+
+	for (i = 0; i < a->len; i++) {
+		void *ax = g_ptr_array_index(a, i);
+		void *bx = g_ptr_array_index(b, i);
+		if (cmp(&ax, &bx))
+			return 0;
+	}
+
+	return 1;
 }
 
 static void
 compare_attributes(tattribute *clean, tattribute *new, GPtrArray *mods)
 {
-	int changed = 0;
-	compare_ptr_arrays(attribute_values(clean),
-			   attribute_values(new),
-			   carray_ptr_cmp,
-			   (note_function) note_values,
-			   &changed);
-	if (changed) {
+	if (!ordered_array_equal(attribute_values(clean),
+				 attribute_values(new),
+				 carray_ptr_cmp))
+	{
 		LDAPMod *m = attribute2mods(new);
 		m->mod_op |= LDAP_MOD_REPLACE;
 		g_ptr_array_add(mods, m);
@
