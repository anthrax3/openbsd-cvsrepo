head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.18
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.14
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.16
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.12
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.10
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.8
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.03.02.08.01.07;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add various patches to ldapvi from upstream git/mailing list submissions:

- add -y support to read password from a file
- remove useless header that vim whines about
- preserve order of attribute values
- fix possible LP64 issue (improper sentinel)
- allow editors/pagers with arguments
- getline namespace collision, upstream git 256ced029c
- fix hash generation

OK ajacoutot@@
@
text
@$OpenBSD$

fix possible LP64 issue (improper sentinel)
allow editors/pagers with arguments
getline namespace collision, upstream git 256ced029c

--- misc.c.orig	Sat May  5 11:17:26 2007
+++ misc.c	Thu Mar  1 22:04:17 2012
@@@@ -172,9 +172,11 @@@@ edit(char *pathname, long line)
 		if (line > 0) {
 			char buf[20];
 			snprintf(buf, 20, "+%ld", line);
-			execlp(vi, vi, buf, pathname, 0);
+			execl("/bin/sh", "sh", "-c", "exec $0 \"$@@\"", vi,
+			      buf, pathname, (char *) NULL);
 		} else
-			execlp(vi, vi, pathname, 0);
+			execl("/bin/sh", "sh", "-c", "exec $0 \"$@@\"", vi,
+			      pathname, (char *) NULL);
 		syserr();
 	}
 
@@@@ -213,7 +215,8 @@@@ view(char *pathname)
 	case -1:
 		syserr();
 	case 0:
-		execlp(pg, pg, pathname, 0);
+		execl("/bin/sh", "sh", "-c", "exec $0 \"$@@\"", pg,
+		      pathname, (char *) NULL);
 		syserr();
 	}
 
@@@@ -245,7 +248,7 @@@@ pipeview(int *fd)
 		close(fds[1]);
 		dup2(fds[0], 0);
 		close(fds[0]);
-		execlp(pg, pg, 0);
+		execl("/bin/sh", "sh", "-c", "exec $0", pg, (char *) NULL);
 		syserr();
 	}
 
@@@@ -315,7 +318,7 @@@@ write_ldapvi_history()
 }
 
 char *
-getline(char *prompt, char *value)
+ldapvi_getline(char *prompt, char *value)
 {
 	tdialog d;
 	init_dialog(&d, DIALOG_DEFAULT, prompt, value);
@
