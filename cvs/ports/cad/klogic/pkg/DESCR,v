head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.50
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.48
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.44
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.46
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.42
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.40
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.38
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.36
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.34
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.32
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.22
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.20
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	espie:1.1.1.1
	klogic:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2005.03.15.01.57.02;	author db;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.15.21.42.14;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.08.12.48.23;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.02.08.12.48.23;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@typo and wording fixes; approved by pval

ok mbalmer@@ "that diff was fun to read"
@
text
@Application for building and simulating digital circuits easily.

Provides an easy way for building circuits containing standard
components like AND, OR, XOR and flipflops like RS and JK.  More complex 
and reusable circuits can be built from sub-circuits.

By default, the simulation is running permanently while building circuits.  
Also available is a single stepping simulation to recognize peaks.
@


1.2
log
@remove WWW lines
@
text
@d5 1
a5 1
and reuseable circuits can be built from sub-circuits.
@


1.1
log
@Initial revision
@
text
@a8 3

WWW: ${HOMEPAGE}

@


1.1.1.1
log
@reimport klogic, see x11/kde/klogic for previous history
@
text
@@
