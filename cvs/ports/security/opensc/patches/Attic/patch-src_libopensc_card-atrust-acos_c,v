head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.0.10
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.8
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.06.07.13.27.58;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2010.12.27.15.30.11;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to opensc-0.13.0.
Take maintainership.

OK sthen@@
@
text
@$OpenBSD: patch-src_libopensc_card-atrust-acos_c,v 1.1 2010/12/27 15:30:11 jasper Exp $

Security fix for SA42658
OpenSC Serial Number Processing Buffer Overflow Vulnerabilities.

Patch from upstream svn:
https://www.opensc-project.org/opensc/changeset/4913

--- src/libopensc/card-atrust-acos.c.orig	Mon Dec 27 13:04:23 2010
+++ src/libopensc/card-atrust-acos.c	Mon Dec 27 13:04:46 2010
@@@@ -853,8 +853,8 @@@@ static int acos_get_serialnr(sc_card_t *card, sc_seria
 	if (apdu.sw1 != 0x90 || apdu.sw2 != 0x00)
 		return SC_ERROR_INTERNAL;
 	/* cache serial number */
-	memcpy(card->serialnr.value, apdu.resp, apdu.resplen);
-	card->serialnr.len = apdu.resplen;
+	memcpy(card->serialnr.value, apdu.resp, MIN(apdu.resplen, SC_MAX_SERIALNR));
+	card->serialnr.len = MIN(apdu.resplen, SC_MAX_SERIALNR);
 	/* copy and return serial number */
 	memcpy(serial, &card->serialnr, sizeof(*serial));
 	return SC_SUCCESS;
@


1.1
log
@SECURITY FIX for SA42658,
OpenSC Serial Number Processing Buffer Overflow Vulnerabilities.

patches from upstream svn
ok maintainer
@
text
@d1 1
a1 1
$OpenBSD$
@

