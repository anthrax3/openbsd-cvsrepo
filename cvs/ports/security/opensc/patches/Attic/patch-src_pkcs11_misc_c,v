head	1.2;
access;
symbols
	OPENBSD_6_1:1.1.0.2
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.08.16.14.39.07;	author dcoppa;	state dead;
branches;
next	1.1;
commitid	sxlhCSaDJsyqyye2;

1.1
date	2016.11.24.09.54.51;	author dcoppa;	state Exp;
branches;
next	;
commitid	hMbZpwDfcbFUPrTP;


desc
@@


1.2
log
@
Update to OpenSC-0.17.0
@
text
@$OpenBSD: patch-src_pkcs11_misc_c,v 1.1 2016/11/24 09:54:51 dcoppa Exp $

commit 12f402616050e6ac943217b2170e865c1a297e77
Author: Jakuje <jakuje@@gmail.com>
Date:   Mon Oct 10 22:21:46 2016 +0200

Fix Coverity remarks

--- src/pkcs11/misc.c.orig	Fri Jun  3 11:19:51 2016
+++ src/pkcs11/misc.c	Thu Nov 24 09:58:03 2016
@@@@ -178,11 +178,10 @@@@ CK_RV push_login_state(struct sc_pkcs11_slot *slot,
 	struct sc_pkcs11_login *login = NULL;
 
 	if (!sc_pkcs11_conf.atomic || !slot) {
-		r = CKR_OK;
-		goto err;
+		return CKR_OK;
 	}
 
-	login = (struct sc_pkcs11_login *) malloc(sizeof *login);
+	login = (struct sc_pkcs11_login *) calloc(1, sizeof *login);
 	if (login == NULL) {
 		goto err;
 	}
@@@@ -199,12 +198,15 @@@@ CK_RV push_login_state(struct sc_pkcs11_slot *slot,
 		goto err;
 	}
 
+	login = NULL;
 	r = CKR_OK;
 
 err:
-	if (r != CKR_OK && login) {
-		sc_mem_clear(login->pPin, login->ulPinLen);
-		free(login->pPin);
+	if (login) {
+		if (login->pPin) {
+			sc_mem_clear(login->pPin, login->ulPinLen);
+			free(login->pPin);
+		}
 		free(login);
 	}
 
@


1.1
log
@
libpkcs11: Prevent double-free when the dlopen fails
(upstream git commit 24346062c01ad690addb0db55b74f9c53b394c0c)

Fix Coverity remarks
(upstream git commit 12f402616050e6ac943217b2170e865c1a297e77)
@
text
@d1 1
a1 1
$OpenBSD$
@

