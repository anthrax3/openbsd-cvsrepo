head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.6
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.7.0.24
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.22
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.20
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.18
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.16
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.14
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.12
	OPENBSD_5_0:1.7.0.10
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.8
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.6
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.4
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.2
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.6.0.18
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.16
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.14
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.12
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.10
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.8
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.6
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.8
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.6
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_TRACKING_SWITCH:1.4
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	avsm-2000-11-27:1.1.1.1
	avsm:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2015.03.16.18.07.54;	author naddy;	state Exp;
branches;
next	1.7;
commitid	IJdm3Zowcdkcxp5X;

1.7
date	2009.05.29.19.53.16;	author benoit;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.15.18.36.00;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2003.01.18.22.53.29;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.12.16.05.17;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.05.08.18.27;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.14.17.37.41;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2000.11.27.15.41.46;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.11.27.15.41.46;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.8
log
@fold lib-only PFRAG.shared into PLIST, regen PLIST, and bump
@
text
@@@comment $OpenBSD: PLIST,v 1.7 2009/05/29 19:53:16 benoit Exp $
bin/libmcrypt-config
include/mcrypt.h
include/mutils/
include/mutils/mcrypt.h
lib/libmcrypt/
lib/libmcrypt.a
lib/libmcrypt.la
@@lib lib/libmcrypt.so.${LIBmcrypt_VERSION}
@@man man/man3/mcrypt.3
share/aclocal/
share/aclocal/libmcrypt.m4
@


1.7
log
@- update libmcrypt to 2.5.8
- update patches & PLIST
- change maintainer

ok avsm@@, ajacoutot@@
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.6 2004/09/15 18:36:00 espie Exp $
d9 1
a12 1
%%SHARED%%
@


1.6
log
@new plists.
gnutls depends on lzo.
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.5 2003/01/18 22:53:29 avsm Exp $
d4 2
@


1.5
log
@Update to libmcrypt-2.5.5

For the moment, this disables dynamic module loading and bundles
together all the ciphers into the main library.  When libtool-1.4
hits our tree, the updated ltdl support can be used to re-enable
the dynloading.
@
text
@d1 1
a1 1
@@comment $OpenBSD$
d4 1
d7 2
a8 1
man/man3/mcrypt.3
@


1.4
log
@update to libmcrypt-2.4.15
@
text
@a5 58
lib/libmcrypt/arcfour.la
lib/libmcrypt/blowfish-compat.la
lib/libmcrypt/blowfish.la
lib/libmcrypt/cast-128.la
lib/libmcrypt/cast-256.la
lib/libmcrypt/cbc.la
lib/libmcrypt/cfb.la
lib/libmcrypt/des.la
lib/libmcrypt/ecb.la
lib/libmcrypt/enigma.la
lib/libmcrypt/gost.la
lib/libmcrypt/libarcfour.a
lib/libmcrypt/libblowfish-compat.a
lib/libmcrypt/libblowfish.a
lib/libmcrypt/libcast-128.a
lib/libmcrypt/libcast-256.a
lib/libmcrypt/libcbc.a
lib/libmcrypt/libcfb.a
lib/libmcrypt/libdes.a
lib/libmcrypt/libecb.a
lib/libmcrypt/libenigma.a
lib/libmcrypt/libgost.a
lib/libmcrypt/libloki97.a
lib/libmcrypt/libnofb.a
lib/libmcrypt/libofb.a
lib/libmcrypt/libpanama.a
lib/libmcrypt/librc2.a
lib/libmcrypt/librijndael-128.a
lib/libmcrypt/librijndael-192.a
lib/libmcrypt/librijndael-256.a
lib/libmcrypt/libsafer-sk128.a
lib/libmcrypt/libsafer-sk64.a
lib/libmcrypt/libsaferplus.a
lib/libmcrypt/libserpent.a
lib/libmcrypt/libstream.a
lib/libmcrypt/libthreeway.a
lib/libmcrypt/libtripledes.a
lib/libmcrypt/libtwofish.a
lib/libmcrypt/libwake.a
lib/libmcrypt/libxtea.a
lib/libmcrypt/loki97.la
lib/libmcrypt/nofb.la
lib/libmcrypt/ofb.la
lib/libmcrypt/panama.la
lib/libmcrypt/rc2.la
lib/libmcrypt/rijndael-128.la
lib/libmcrypt/rijndael-192.la
lib/libmcrypt/rijndael-256.la
lib/libmcrypt/safer-sk128.la
lib/libmcrypt/safer-sk64.la
lib/libmcrypt/saferplus.la
lib/libmcrypt/serpent.la
lib/libmcrypt/stream.la
lib/libmcrypt/threeway.la
lib/libmcrypt/tripledes.la
lib/libmcrypt/twofish.la
lib/libmcrypt/wake.la
lib/libmcrypt/xtea.la
a8 1
@@dirrm lib/libmcrypt
@


1.3
log
@- upgrade to libmcrypt-2.4.9

NEWS:
- Due to an endianness handling problem Blowfish algorithm was not compatible
  with other implementations. Now it has been corrected. If you want
  to access the old algorithm used use the "blowfish-compat" module.
- Fixes in mcrypt_list_algorithms() for some systems. Bugs pointed out by
  Jonathan Woolmington <jwool@@ind.tansu.com.au>
- Fixes in stream mode.
- mcrypt_generic_init() no longer fails if smaller key is used. It uses
  the most appropriate key size of the algorithm and pads with zeros.
- Fixes in wake algorithm (and support for IV).
- IV is now used in arcfour (arcfour-iv is now longer used).
  Speedups in Arcfour.
@
text
@d2 1
d65 1
@


1.2
log
@- cleanup Makefile
- remove USE_LIBTOOL
- sync patch-ltconfig with my original patch
- add missing patch-ltmain.sh
- fixup PLISTs
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.1.1.1 2000/11/27 15:41:46 avsm Exp $
a4 1
lib/libmcrypt/arcfour-iv.la
d6 1
a15 1
lib/libmcrypt/libarcfour-iv.a
d17 1
d63 1
a64 1
man/man3/mcrypt.3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@comment $OpenBSD$
d63 1
a64 1
%%SHARED%%
@


1.1.1.1
log
@import of libmcrypt-2.4.7
--

libmcrypt is the library which implements all the algorithms and
modes found in mcrypt. It is currently under development but it
seems to work pretty good.

Unlike most encryption libraries libmcrypt does not have everything
(random number generators, hashes, hmac implementation, key exchange,
public key encryption etc.).  Libmcrypt only implements an interface
to access block and stream encryption algorithms.

Its purpose was to assist in the development of mcrypt by providing
a uniform interface to access several different encryption algorithms,
so that the main program is independent of the encryption algorithms
and the modes used.

Libmcrypt supports the algorithms: BLOWFISH, TWOFISH, DES, TripleDES,
3-WAY, SAFER-sk64, SAFER-sk128, SAFER+, LOKI97, GOST, RC2, RC6,
MARS, IDEA, RIJNDAEL-128 (AES), RIJNDAEL-192, RIJNDAEL-256, SERPENT,
CAST-128 (known as CAST5), CAST-256, ARCFOUR and WAKE.  Block
algorithms can be used in: CBC, ECB, CFB and OFB (8 bit and n bit,
where n is the size of the algorithm's block length).

@
text
@@
