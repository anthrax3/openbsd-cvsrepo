head	1.2;
access;
symbols
	avsm-2000-11-27:1.1.1.1 avsm:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2001.01.06.11.17.38;	author avsm;	state dead;
branches;
next	1.1;

1.1
date	2000.11.27.15.41.46;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.11.27.15.41.46;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update to libmcrypt-2.4.8
- our patch has been incorporated into source; removed from here
- new MASTER_SITE, bump NEED_VERSION
@
text
@$OpenBSD: patch-lib_libdefs.h,v 1.1 2000/11/27 15:41:46 avsm Exp $
--- lib/libdefs.h.orig	Thu Nov  9 20:25:32 2000
+++ lib/libdefs.h	Thu Nov  9 20:25:45 2000
@@@@ -8,6 +8,10 @@@@
 # include <byteswap.h>
 #endif
 
+#ifdef HAVE_SYS_TYPES_H
+# include <sys/types.h>
+#endif
+
 #ifdef HAVE_SYS_ENDIAN_H
 # include <sys/endian.h>
 #endif
@@@@ -47,10 +51,6 @@@@
 # include <string.h>
 # include <stdlib.h>
 # include <stdio.h>
-#endif
-
-#ifdef HAVE_SYS_TYPES_H
-# include <sys/types.h>
 #endif
 
 #ifdef HAVE_DIRENT_H
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import of libmcrypt-2.4.7
--

libmcrypt is the library which implements all the algorithms and
modes found in mcrypt. It is currently under development but it
seems to work pretty good.

Unlike most encryption libraries libmcrypt does not have everything
(random number generators, hashes, hmac implementation, key exchange,
public key encryption etc.).  Libmcrypt only implements an interface
to access block and stream encryption algorithms.

Its purpose was to assist in the development of mcrypt by providing
a uniform interface to access several different encryption algorithms,
so that the main program is independent of the encryption algorithms
and the modes used.

Libmcrypt supports the algorithms: BLOWFISH, TWOFISH, DES, TripleDES,
3-WAY, SAFER-sk64, SAFER-sk128, SAFER+, LOKI97, GOST, RC2, RC6,
MARS, IDEA, RIJNDAEL-128 (AES), RIJNDAEL-192, RIJNDAEL-256, SERPENT,
CAST-128 (known as CAST5), CAST-256, ARCFOUR and WAKE.  Block
algorithms can be used in: CBC, ECB, CFB and OFB (8 bit and n bit,
where n is the size of the algorithm's block length).

@
text
@@
