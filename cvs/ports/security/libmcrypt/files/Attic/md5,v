head	1.7;
access;
symbols
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_TRACKING_SWITCH:1.6
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	avsm-2000-11-27:1.1.1.1
	avsm:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2002.03.21.20.11.25;	author espie;	state dead;
branches;
next	1.6;

1.6
date	2001.06.12.16.05.14;	author avsm;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.10.22.08.07;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.24.01.34.00;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.05.08.18.26;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.06.11.17.37;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2000.11.27.15.41.46;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.11.27.15.41.46;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.7
log
@md5->distinfo
@
text
@MD5 (libmcrypt-2.4.15.tar.gz) = 2fab8ff457ce59ca55b8301f389c4a7e
RMD160 (libmcrypt-2.4.15.tar.gz) = 6aaa677640cabc4bd8bdcfb3399172e79d18482a
SHA1 (libmcrypt-2.4.15.tar.gz) = dcad99877f1d6f7df6919a30f84845c827f46340
@


1.6
log
@update to libmcrypt-2.4.15
@
text
@@


1.5
log
@upgrade to libmcrypt-2.4.11

closes some memory leaks
@
text
@d1 3
a3 3
MD5 (libmcrypt-2.4.11.tar.gz) = 8ed84bc467939009fd6b21f7ddd2fc3d
RMD160 (libmcrypt-2.4.11.tar.gz) = db44a65fd3bc0234979a16d81fae565e44976c67
SHA1 (libmcrypt-2.4.11.tar.gz) = c5011b72f02aad84c8efd18032da40a53b7c3cb3
@


1.4
log
@- upgrade to libmcrypt-2.4.10
- bump NEED_vERSION
- move COMMENT file into Makefile

This update has bugfixes in the blowfish[-compat] modules
@
text
@d1 3
a3 3
MD5 (libmcrypt-2.4.10.tar.gz) = 591f9439f3b6712f4fe148d8d8d3d84a
RMD160 (libmcrypt-2.4.10.tar.gz) = fac73ebc9b78030223e8ddce3953dd70414dd069
SHA1 (libmcrypt-2.4.10.tar.gz) = 10e9fb692c111f5ceb80da657e85b29d12ee9260
@


1.3
log
@- upgrade to libmcrypt-2.4.9

NEWS:
- Due to an endianness handling problem Blowfish algorithm was not compatible
  with other implementations. Now it has been corrected. If you want
  to access the old algorithm used use the "blowfish-compat" module.
- Fixes in mcrypt_list_algorithms() for some systems. Bugs pointed out by
  Jonathan Woolmington <jwool@@ind.tansu.com.au>
- Fixes in stream mode.
- mcrypt_generic_init() no longer fails if smaller key is used. It uses
  the most appropriate key size of the algorithm and pads with zeros.
- Fixes in wake algorithm (and support for IV).
- IV is now used in arcfour (arcfour-iv is now longer used).
  Speedups in Arcfour.
@
text
@d1 3
a3 3
MD5 (libmcrypt-2.4.9.tar.gz) = 9721e80b7db85133585a64e649fcd51f
RMD160 (libmcrypt-2.4.9.tar.gz) = 8794f84cce4a76c84d7d8fc5dde062b1a288c59d
SHA1 (libmcrypt-2.4.9.tar.gz) = e31cb49cf5542435486fc6dae55699a09734ab8e
@


1.2
log
@- update to libmcrypt-2.4.8
- our patch has been incorporated into source; removed from here
- new MASTER_SITE, bump NEED_VERSION
@
text
@d1 3
a3 3
MD5 (libmcrypt-2.4.8.tar.gz) = 342d978c4d2be2ca527d715dccdf0363
RMD160 (libmcrypt-2.4.8.tar.gz) = 9002597147fe6feb7fc766d36e09d4f326e299a2
SHA1 (libmcrypt-2.4.8.tar.gz) = fe90da0057747cb26717c47c11ce17114bab6863
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
MD5 (libmcrypt-2.4.7.tar.gz) = ab5e6e4178252f0c78501462454199f9
RMD160 (libmcrypt-2.4.7.tar.gz) = 88edfdb298d2b3ba22d9b6120e1e0f4ea692687e
SHA1 (libmcrypt-2.4.7.tar.gz) = 83927b8c838e8a3d6d76e75c645f001f8396a10d
@


1.1.1.1
log
@import of libmcrypt-2.4.7
--

libmcrypt is the library which implements all the algorithms and
modes found in mcrypt. It is currently under development but it
seems to work pretty good.

Unlike most encryption libraries libmcrypt does not have everything
(random number generators, hashes, hmac implementation, key exchange,
public key encryption etc.).  Libmcrypt only implements an interface
to access block and stream encryption algorithms.

Its purpose was to assist in the development of mcrypt by providing
a uniform interface to access several different encryption algorithms,
so that the main program is independent of the encryption algorithms
and the modes used.

Libmcrypt supports the algorithms: BLOWFISH, TWOFISH, DES, TripleDES,
3-WAY, SAFER-sk64, SAFER-sk128, SAFER+, LOKI97, GOST, RC2, RC6,
MARS, IDEA, RIJNDAEL-128 (AES), RIJNDAEL-192, RIJNDAEL-256, SERPENT,
CAST-128 (known as CAST5), CAST-256, ARCFOUR and WAKE.  Block
algorithms can be used in: CBC, ECB, CFB and OFB (8 bit and n bit,
where n is the size of the algorithm's block length).

@
text
@@
