head	1.1;
access;
symbols
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_7:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2015.04.01.13.13.06;	author ajacoutot;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;
commitid	QeTrsrdLKTApozyW;

1.1.2.1
date	2015.04.01.13.13.06;	author ajacoutot;	state Exp;
branches;
next	;
commitid	QeTrsrdLKTApozyW;

1.1.4.1
date	2015.04.01.13.13.15;	author ajacoutot;	state Exp;
branches;
next	;
commitid	Isg7u466CIms5eYR;


desc
@@


1.1
log
@file patch-lib_parser_aux_c was initially added on branch OPENBSD_5_7.
@
text
@@


1.1.4.1
log
@SECURITY fix for an overflow in DER decoding.
@
text
@a0 27
$OpenBSD$

From: Nikos Mavrogiannopoulos <nmav@@gnutls.org>
Date: Thu, 26 Mar 2015 17:34:57 +0000 (+0100)
Subject: increased size of LTOSTR_MAX_SIZE to account for sign and null byte
This address an overflow found by Hanno Böck in DER decoding.

--- lib/parser_aux.c.orig	Thu Jun 26 19:57:17 2014
+++ lib/parser_aux.c	Wed Apr  1 15:09:25 2015
@@@@ -543,7 +543,7 @@@@ _asn1_delete_list_and_nodes (void)
 
 
 char *
-_asn1_ltostr (long v, char *str)
+_asn1_ltostr (long v, char str[LTOSTR_MAX_SIZE])
 {
   long d, r;
   char temp[LTOSTR_MAX_SIZE];
@@@@ -567,7 +567,7 @@@@ _asn1_ltostr (long v, char *str)
       count++;
       v = d;
     }
-  while (v);
+  while (v && ((start+count) < LTOSTR_MAX_SIZE-1));
 
   for (k = 0; k < count; k++)
     str[k + start] = temp[start + count - k - 1];
@


1.1.2.1
log
@SECURITY fix for an overflow in DER decoding.
@
text
@a0 27
$OpenBSD$

From: Nikos Mavrogiannopoulos <nmav@@gnutls.org>
Date: Thu, 26 Mar 2015 17:34:57 +0000 (+0100)
Subject: increased size of LTOSTR_MAX_SIZE to account for sign and null byte
This address an overflow found by Hanno Böck in DER decoding.

--- lib/parser_aux.c.orig	Mon Sep 15 20:45:01 2014
+++ lib/parser_aux.c	Wed Apr  1 15:09:13 2015
@@@@ -543,7 +543,7 @@@@ _asn1_delete_list_and_nodes (void)
 
 
 char *
-_asn1_ltostr (long v, char *str)
+_asn1_ltostr (long v, char str[LTOSTR_MAX_SIZE])
 {
   long d, r;
   char temp[LTOSTR_MAX_SIZE];
@@@@ -567,7 +567,7 @@@@ _asn1_ltostr (long v, char *str)
       count++;
       v = d;
     }
-  while (v);
+  while (v && ((start+count) < LTOSTR_MAX_SIZE-1));
 
   for (k = 0; k < count; k++)
     str[k + start] = temp[start + count - k - 1];
@

