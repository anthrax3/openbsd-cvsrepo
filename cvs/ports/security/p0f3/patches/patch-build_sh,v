head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.10
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	sthen_20150108:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.07.20.03.13.47;	author jca;	state Exp;
branches;
next	1.1;
commitid	OQxShEW8BS6IV63K;

1.1
date	2015.01.08.22.03.20;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	06wp5jpusgGBTAYl;

1.1.1.1
date	2015.01.08.22.03.20;	author sthen;	state Exp;
branches;
next	;
commitid	06wp5jpusgGBTAYl;


desc
@@


1.2
log
@Don't for the use of PIE, cc knows better.
@
text
@$OpenBSD: patch-build_sh,v 1.1.1.1 2015/01/08 22:03:20 sthen Exp $
--- build.sh.orig	Sun Jul 19 21:11:34 2015
+++ build.sh	Sun Jul 19 21:12:18 2015
@@@@ -18,10 +18,10 @@@@ BASIC_CFLAGS="-Wall -Wno-format -I/usr/local/include/ 
 
 BASIC_LDFLAGS="-L/usr/local/lib/ -L/opt/local/lib $LDFLAGS"
 
-USE_CFLAGS="-fstack-protector-all -fPIE -D_FORTIFY_SOURCE=2 -g -ggdb \
+USE_CFLAGS="-fstack-protector-all -D_FORTIFY_SOURCE=2 -g -ggdb \
             $BASIC_CFLAGS"
 
-USE_LDFLAGS="-Wl,-z,relro -pie $BASIC_LDFLAGS"
+USE_LDFLAGS="-Wl,-z,relro $BASIC_LDFLAGS"
 
 if [ "$OSTYPE" = "cygwin" ]; then
   USE_LIBS="-lwpcap $LIBS"
@@@@ -81,8 +81,8 @@@@ if [ "$1" = "clean" -o "$1" = "publish" ]; then
 elif [ "$1" = "all" -o "$1" = "" ]; then
 
   echo "[+] Configuring production build."
-  BASIC_CFLAGS="$BASIC_CFLAGS -O3"
-  USE_CFLAGS="$USE_CFLAGS -O3"
+  #BASIC_CFLAGS="$BASIC_CFLAGS -O3"
+  #USE_CFLAGS="$USE_CFLAGS -O3"
 
 elif [ "$1" = "debug" ]; then
 
@@@@ -318,7 +318,8 @@@@ echo -n "[*] Compiling $PROGNAME... "
 
 rm -f "$PROGNAME" || exit 1
 
-$CC $USE_CFLAGS $USE_LDFLAGS "$PROGNAME.c" $OBJFILES -o "$PROGNAME" $USE_LIBS &>"$TMP.log"
+echo $CC $USE_CFLAGS $USE_LDFLAGS "$PROGNAME.c" $OBJFILES -o "$PROGNAME" $USE_LIBS
+$CC $USE_CFLAGS $USE_LDFLAGS "$PROGNAME.c" $OBJFILES -o "$PROGNAME" $USE_LIBS 2>&1 | tee "$TMP.log"
 
 if [ ! -x "$PROGNAME" ]; then
 
@


1.1
log
@Initial revision
@
text
@d1 16
a16 3
$OpenBSD$
--- build.sh.orig	Wed Jan  7 15:09:18 2015
+++ build.sh	Wed Jan  7 15:10:36 2015
@


1.1.1.1
log
@import security/p0f3 (separate non-conflicting port to p0f as the rewrite uses
different database files than the earlier one / pf / tcpdump), ok giovanni@@

P0f is a tool that utilizes an array of sophisticated, purely passive
traffic fingerprinting mechanisms to identify the players behind any
incidental TCP/IP communications (often as little as a single normal SYN)
without interfering in any way. Version 3 is a complete rewrite of the
original codebase, incorporating a significant number of improvements to
network-level fingerprinting, and introducing the ability to reason about
application-level payloads (e.g., HTTP).

The tool can be operated in the foreground or as a daemon, and offers a
simple real-time API (via unix domain sockets) for third-party components
that wish to obtain additional information about the actors they are
talking to.
@
text
@@
