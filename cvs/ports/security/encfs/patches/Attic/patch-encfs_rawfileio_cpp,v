head	1.2;
access;
symbols
	stsp_20140117:1.1.1.1 stsp:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.01.21.15.41.27;	author syl;	state dead;
branches;
next	1.1;

1.1
date	2014.01.17.10.10.58;	author stsp;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.01.17.10.10.58;	author stsp;	state Exp;
branches;
next	;


desc
@@


1.2
log
@encfs does not need all these patches anymore.

OK ajacoutot@@
@
text
@$OpenBSD: patch-encfs_rawfileio_cpp,v 1.1 2014/01/17 10:10:58 stsp Exp $
--- encfs/RawFileIO.cpp.orig	Sun Nov 29 23:04:12 2009
+++ encfs/RawFileIO.cpp	Thu Jan 16 16:56:14 2014
@@@@ -122,7 +122,7 @@@@ static int open_readonly_workaround(const char *path, 
     -  Also keep the O_LARGEFILE flag, in case the underlying filesystem needs
        it..
 */
-int RawFileIO::open(int flags)
+int RawFileIO::open(int flags, mode_t mode)
 {
     bool requestWrite = ((flags & O_RDWR) || (flags & O_WRONLY));
 
@@@@ -139,6 +139,9 @@@@ int RawFileIO::open(int flags)
     {
 	int finalFlags = requestWrite ? O_RDWR : O_RDONLY;
 
+	if (flags & O_CREAT)
+		finalFlags = flags;
+
 #if defined(O_LARGEFILE)
 	if( flags & O_LARGEFILE )
 	    finalFlags |= O_LARGEFILE;
@@@@ -146,8 +149,13 @@@@ int RawFileIO::open(int flags)
 #warning O_LARGEFILE not supported
 #endif
 
-	int newFd = ::open( name.c_str(), finalFlags );
-	
+
+	int newFd;
+	if (flags & O_CREAT)
+		newFd = ::open( name.c_str(), finalFlags, mode);
+	else
+		newFd = ::open( name.c_str(), finalFlags);
+
 	rDebug("open file with flags %i, result = %i", finalFlags, newFd);
 
 	if((newFd == -1) && (errno == EACCES))
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Port of encfs, an encrypted filesystem based on FUSE and OpenSSL.
With lots of help and patches from syl@@.
@
text
@@
