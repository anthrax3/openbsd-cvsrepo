head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.12
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.10
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.8
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	henning_20141008:1.1.1.1
	henning:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2014.10.08.11.30.56;	author henning;	state Exp;
branches
	1.1.1.1;
next	;
commitid	LPbdxnd5FHrmLfqG;

1.1.1.1
date	2014.10.08.11.30.56;	author henning;	state Exp;
branches;
next	;
commitid	LPbdxnd5FHrmLfqG;


desc
@@



1.1
log
@Initial revision
@
text
@Crypt::OpenPGP is a pure-Perl implementation of the OpenPGP
standard. In addition to support for the standard itself,
Crypt::OpenPGP claims compatibility with many other PGP
implementations, both those that support the standard and those that
preceded it.

Crypt::OpenPGP provides signing/verification, encryption/decryption,
keyring management, and key-pair generation; in short it should
provide you with everything you need to PGP-enable yourself.
Alternatively it can be used as part of a larger system; for example,
perhaps you have a web-form-to-email generator written in Perl, and
you'd like to encrypt outgoing messages, because they contain
sensitive information. Crypt::OpenPGP can be plugged into such a
scenario, given your public key, and told to encrypt all messages;
they will then be readable only by you.

This module currently supports RSA and DSA for digital signatures, and
RSA and ElGamal for encryption/decryption. It supports the symmetric
ciphers 3DES, Blowfish, IDEA, Twofish, CAST5, and Rijndael (AES).
Rijndael is supported for key sizes of 128, 192, and 256 bits.
Crypt::OpenPGP supports the digest algorithms MD5, SHA-1, and
RIPE-MD/160. And it supports ZIP and Zlib compression.
@


1.1.1.1
log
@Crypt::OpenPGP is a pure-Perl implementation of the OpenPGP
standard. help sthen & landry, ok landry
@
text
@@
