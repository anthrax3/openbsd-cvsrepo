head	1.2;
access;
symbols
	OPENBSD_4_5:1.1.0.22
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.20
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.18
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.16
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.14
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2009.05.25.18.50.30;	author benoit;	state dead;
branches;
next	1.1;

1.1
date	2004.01.28.22.16.12;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update integrit to 4.1
- regen PLIST & patches
- change maintainer
- change MASTER_SITES & HOMEPAGE

ok ajacoutot@@
@
text
@$OpenBSD: patch-gnupg_md5_c,v 1.1 2004/01/28 22:16:12 naddy Exp $
--- gnupg/md5.c.orig	2004-01-28 22:57:29.000000000 +0100
+++ gnupg/md5.c	2004-01-28 22:57:45.000000000 +0100
@@@@ -330,8 +330,8 @@@@ void md5_final( MD5_CONTEXT *hd )
 
     p = hd->buf;
   #ifdef BIG_ENDIAN_HOST
-    #define X(a) do { *p++ = hd->##a	  ; *p++ = hd->##a >> 8;      \
-		      *p++ = hd->##a >> 16; *p++ = hd->##a >> 24; } while(0)
+    #define X(a) do { *p++ = hd->a	  ; *p++ = hd->a >> 8;      \
+		      *p++ = hd->a >> 16; *p++ = hd->a >> 24; } while(0)
   #else /* little endian */
     /*#define X(a) do { *(u32*)p = hd->##a ; p += 4; } while(0)*/
     /* Unixware's cpp doesn't like the above construct so we do it his way:
@


1.1
log
@fix preprocessor abuse for gcc3
@
text
@d1 1
a1 1
$OpenBSD$
@

