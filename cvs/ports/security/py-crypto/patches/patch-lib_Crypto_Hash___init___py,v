head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.2
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.7.0.10
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.6
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.8
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.2
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.2
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2;
locks; strict;
comment	@# @;


1.8
date	2017.03.14.00.43.28;	author danj;	state Exp;
branches;
next	1.7;
commitid	l78rtFUFpht4hr49;

1.7
date	2014.05.11.20.58.23;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2013.11.08.15.26.05;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.25.12.13.01;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2012.02.17.09.32.18;	author mpi;	state Exp;
branches;
next	1.3;

1.3
date	2011.10.10.10.08.05;	author mpi;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2011.10.09.15.09.55;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.08.14.56.34;	author mpi;	state Exp;
branches;
next	;

1.3.2.1
date	2012.05.25.07.20.56;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Regen patches

prodded by jca@@
@
text
@$OpenBSD: patch-lib_Crypto_Hash___init___py,v 1.7 2014/05/11 20:58:23 sthen Exp $

Patch with reduced context as otherwise CVS Id would get expanded.

--- lib/Crypto/Hash/__init__.py.orig	Mon Oct 14 17:38:10 2013
+++ lib/Crypto/Hash/__init__.py	Mon Mar 13 20:42:25 2017
@@@@ -46,10 +46,10 @@@@ The hashing modules here all support the interface des
 
 .. _`PEP 247` : http://www.python.org/dev/peps/pep-0247/
 
-:undocumented: _MD2, _MD4, _RIPEMD160, _SHA224, _SHA256, _SHA384, _SHA512
+:undocumented: _MD4, _RIPEMD160, _SHA224, _SHA256, _SHA384, _SHA512
 """
 
-__all__ = ['HMAC', 'MD2', 'MD4', 'MD5', 'RIPEMD', 'SHA',
+__all__ = ['HMAC', 'MD4', 'MD5', 'RIPEMD', 'SHA',
            'SHA224', 'SHA256', 'SHA384', 'SHA512']
 __revision__ = "$Id$"
 
@


1.7
log
@CVE-2013-1445 update to py-crypto 2.6.1, and drop mpi@@ as maintainer at
his request.  http://lists.dlitz.net/pipermail/pycrypto/2013q4/000702.html
(prng reseed problem at fork). ok mpi@@ rpe@@
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_Crypto_Hash___init___py,v 1.6 2013/11/08 15:26:05 ajacoutot Exp $
d5 2
a6 2
--- lib/Crypto/Hash/__init__.py.orig	Mon Oct 14 22:38:10 2013
+++ lib/Crypto/Hash/__init__.py	Sun May 11 19:56:54 2014
d18 2
@


1.6
log
@Fix comment.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_Crypto_Hash___init___py,v 1.5 2012/05/25 12:13:01 jasper Exp $
d5 13
a17 17
*** lib/Crypto/Hash/__init__.py.orig	Thu May 24 14:55:30 2012
--- lib/Crypto/Hash/__init__.py	Fri May 25 14:09:50 2012
*************** The hashing modules here all support the interface des
*** 48,53 ****
  
! :undocumented: _MD2, _MD4, _RIPEMD160, _SHA224, _SHA256, _SHA384, _SHA512
  """
  
! __all__ = ['HMAC', 'MD2', 'MD4', 'MD5', 'RIPEMD', 'SHA',
             'SHA224', 'SHA256', 'SHA384', 'SHA512']
--- 48,53 ----
  
! :undocumented: _MD4, _RIPEMD160, _SHA224, _SHA256, _SHA384, _SHA512
  """
  
! __all__ = ['HMAC', 'MD4', 'MD5', 'RIPEMD', 'SHA',
             'SHA224', 'SHA256', 'SHA384', 'SHA512']
@


1.5
log
@- security update of py-crypto to 2.6
Fixes  CVE-2012-2417, PyCrypto <= 2.5 insecure ElGamal key generation.

ok mpi@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
(Patch with reduced context as otherwise $Id$ would get expanded.)
@


1.4
log
@Update to py-crypto 2.5 and add a python3 flavor.

mostly from and ok rpointel@@
@
text
@d1 21
a21 19
$OpenBSD: patch-lib_Crypto_Hash___init___py,v 1.3 2011/10/10 10:08:05 mpi Exp $
--- lib/Crypto/Hash/__init__.py.orig	Fri Jan 13 15:57:33 2012
+++ lib/Crypto/Hash/__init__.py	Wed Feb  8 17:27:41 2012
@@@@ -34,8 +34,6 @@@@ Submodules:
 
 Crypto.Hash.HMAC
  RFC 2104. Keyed-Hashing for Message Authentication.
-Crypto.Hash.MD2
- RFC1319. Rivest's Message Digest algorithm, with a 128 bit digest. This algorithm is both slow and insecure.
 Crypto.Hash.MD4
  RFC1320. Rivest's Message Digest algorithm, with a 128 bit digest. This algorithm is insecure.
 Crypto.Hash.MD5
@@@@ -55,7 +53,7 @@@@ Crypto.Hash.SHA512
 
 """
 
-__all__ = ['HMAC', 'MD2', 'MD4', 'MD5', 'RIPEMD', 'SHA',
+__all__ = ['HMAC', 'MD4', 'MD5', 'RIPEMD', 'SHA',
            'SHA224', 'SHA256', 'SHA384', 'SHA512']
@


1.3
log
@Fix build, keywords were extended in patches
@
text
@d1 4
a4 4
$OpenBSD$
--- lib/Crypto/Hash/__init__.py.orig	Fri Aug 27 06:41:55 2010
+++ lib/Crypto/Hash/__init__.py	Sun Oct  9 17:06:47 2011
@@@@ -32,13 +32,12 @@@@ The hashing modules here all support the interface des
d6 2
a7 2
 Submodules:
 Crypto.Hash.HMAC          RFC 2104: Keyed-Hashing for Message Authentication
d9 1
d11 1
d13 2
a14 2
 Crypto.Hash.RIPEMD160
 Crypto.Hash.SHA
d17 3
a19 2
-__all__ = ['HMAC', 'MD2', 'MD4', 'MD5', 'RIPEMD', 'RIPEMD160', 'SHA', 'SHA256']
+__all__ = ['HMAC', 'MD4', 'MD5', 'RIPEMD', 'RIPEMD160', 'SHA', 'SHA256']
@


1.3.2.1
log
@regen, no pkg change.
@
text
@d1 3
a3 3
$OpenBSD: patch-lib_Crypto_Hash___init___py,v 1.3 2011/10/10 10:08:05 mpi Exp $
--- lib/Crypto/Hash/__init__.py.orig	Fri Nov  4 20:17:40 2011
+++ lib/Crypto/Hash/__init__.py	Fri May 25 09:20:11 2012
a16 2
 __revision__ = "$Id$"
 
@


1.2
log
@Unreak by recreating patches.
@
text
@d1 1
a16 2
 __revision__ = "$Id$"
 
@


1.1
log
@Update py-crypto to 2.3

take maintainership

ok benoit@@, wcmaier@@ (previous MAINTAINER)
@
text
@d1 3
a3 3
--- lib/Crypto/Hash/__init__.py.orig	Fri Sep 30 12:13:19 2011
+++ lib/Crypto/Hash/__init__.py	Fri Sep 30 12:13:38 2011
@@@@ -32,13 +32,12 @@@@
@

