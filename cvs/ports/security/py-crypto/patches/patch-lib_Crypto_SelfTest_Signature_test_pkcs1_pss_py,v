head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.20
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.18
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.14
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.12
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2012.05.25.12.13.01;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2012.02.17.09.32.18;	author mpi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- security update of py-crypto to 2.6
Fixes  CVE-2012-2417, PyCrypto <= 2.5 insecure ElGamal key generation.

ok mpi@@ (MAINTAINER)
@
text
@$OpenBSD$
--- lib/Crypto/SelfTest/Signature/test_pkcs1_pss.py.orig	Thu May 24 14:55:30 2012
+++ lib/Crypto/SelfTest/Signature/test_pkcs1_pss.py	Fri May 25 09:16:28 2012
@@@@ -394,7 +394,7 @@@@ class PKCS1_PSS_Tests(unittest.TestCase):
                             return bchr(0x00)*maskLen
 
                         # Verify that PSS is friendly to all ciphers
-                        for hashmod in (MD2,MD5,SHA,SHA224,SHA256,SHA384,RIPEMD):
+                        for hashmod in (MD5,SHA,SHA224,SHA256,SHA384,RIPEMD):
                             h = hashmod.new()
                             h.update(b('blah blah blah'))
 
@


1.1
log
@Update to py-crypto 2.5 and add a python3 flavor.

mostly from and ok rpointel@@
@
text
@d1 4
a4 3
--- lib/Crypto/SelfTest/Signature/test_pkcs1_pss.py.orig	Wed Feb 15 17:24:43 2012
+++ lib/Crypto/SelfTest/Signature/test_pkcs1_pss.py	Wed Feb 15 17:25:08 2012
@@@@ -394,7 +394,7 @@@@
@

