head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.2
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.10.0.4
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.2
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.9.0.8
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.10
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.6
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.2
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.10
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.8
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.6
	OPENBSD_5_0:1.7.0.4
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	steven-20080920:1.1.1.1
	steven:1.1.1;
locks; strict;
comment	@# @;


1.14
date	2017.07.26.22.45.29;	author sthen;	state Exp;
branches;
next	1.13;
commitid	tD4MFrpYYDDL2UFT;

1.13
date	2017.07.23.09.26.29;	author espie;	state Exp;
branches;
next	1.12;
commitid	FZPR2Emws5uDqXzb;

1.12
date	2017.07.16.19.19.01;	author espie;	state Exp;
branches;
next	1.11;
commitid	tt0GhWK5c4uf9ILG;

1.11
date	2017.04.10.11.46.33;	author sthen;	state Exp;
branches;
next	1.10;
commitid	HY6VNZxjJWzKQFDV;

1.10
date	2016.03.04.10.11.22;	author kirby;	state Exp;
branches;
next	1.9;
commitid	fuk4WSoYbEI5JByn;

1.9
date	2013.10.11.23.50.44;	author naddy;	state Exp;
branches;
next	1.8;

1.8
date	2013.03.11.11.41.26;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2010.11.20.17.22.44;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2010.10.18.21.41.45;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.21.21.34.08;	author steven;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.21.21.33.03;	author steven;	state Exp;
branches;
next	1.3;

1.3
date	2009.08.30.16.44.45;	author steven;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.21.10.31.34;	author steven;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.20.20.28.02;	author steven;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.20.20.28.02;	author steven;	state Exp;
branches;
next	;


desc
@@


1.14
log
@bump LIBCXX/LIBECXX/COMPILER_LIBCXX ports.
@
text
@# $OpenBSD: Makefile,v 1.13 2017/07/23 09:26:29 espie Exp $

COMMENT =		audit network device configuration

V =			0.12.0
DISTNAME =		nipper-cli-$V
PKGNAME =		nipper-$V
REVISION =		3
CATEGORIES =		security net

HOMEPAGE =		http://nipper.sf.net/

# GPLv3, but "cannot be used as part of a commercial product"
PERMIT_PACKAGE_CDROM =	No
PERMIT_PACKAGE_FTP =	Yes

EXTRACT_SUFX =		.tgz

WANTLIB =		c m ${COMPILER_LIBCXX} nipper

LIB_DEPENDS=		security/libnipper

MODULES +=		devel/cmake

NO_TEST =		Yes

pre-configure:
	@@${SUBST_CMD} ${WRKSRC}/CMakeLists.txt

.include <bsd.port.mk>
@


1.13
log
@add pthread to COMPILER_LIBCXX.
white lie, but it allows clang and gcc to be more similar
bump accordingly.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2017/07/16 19:19:01 espie Exp $
d8 1
a8 1
REVISION =		2
@


1.12
log
@use COMPILER_LIBCXX where applicable
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2017/04/10 11:46:33 sthen Exp $
d8 1
a8 1
REVISION =		1
@


1.11
log
@use LIBCXX
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2016/03/04 10:11:22 kirby Exp $
d19 1
a19 1
WANTLIB =		c m ${LIBCXX} nipper
@


1.10
log
@Remove explicitely set CONFIGURE_STYLE=cmake. It is already done via
MODULES=devel/cmake
OK dcoppa@@, czarkoff@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2013/10/11 23:50:44 naddy Exp $
d19 1
a19 1
WANTLIB =		c m stdc++ nipper
@


1.9
log
@Drop USE_GROFF since groff and mandoc produce identical output.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2013/03/11 11:41:26 espie Exp $
a22 1
CONFIGURE_STYLE =	cmake
@


1.8
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2010/11/20 17:22:44 espie Exp $
a25 1
USE_GROFF =		Yes
@


1.7
log
@new depends
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2010/10/18 21:41:45 espie Exp $
a15 2
PERMIT_DISTFILES_CDROM =No
PERMIT_DISTFILES_FTP =	Yes
d27 1
a27 1
NO_REGRESS =		Yes
@


1.6
log
@USE_GROFF=Yes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2010/07/21 21:34:08 steven Exp $
d23 1
a23 1
LIB_DEPENDS=		::security/libnipper
d28 1
a28 1
USE_GROFF =	Yes
@


1.5
log
@new WANTLIB/LIB_DEPENDS while here
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2010/07/21 21:33:03 steven Exp $
d28 1
@


1.4
log
@drop maintainership; this is the last free version of this software
anyway before it became commercial
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2009/08/30 16:44:45 steven Exp $
d21 1
a21 1
WANTLIB =		c m stdc++
d23 1
a23 1
LIB_DEPENDS=		nipper::security/libnipper
@


1.3
log
@nipper is no longer open source; remove the master site.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2008/09/21 10:31:34 steven Exp $
d7 2
a8 1
PKGNAME =		nipper-$Vp0
a11 1
MAINTAINER =		Steven Mestdagh <steven@@openbsd.org>
@


1.2
log
@license says it cannot be used as part of a commercial product.
hence, set PERMIT_*_CDROM = No.

pointed out by sturm@@
@
text
@d1 1
a1 1
# $OpenBSD$
a18 1
MASTER_SITES =		${MASTER_SITE_SOURCEFORGE:=nipper/}
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
PKGNAME =		nipper-$V
d13 2
a14 2
# GPLv3
PERMIT_PACKAGE_CDROM =	Yes
d16 1
a16 1
PERMIT_DISTFILES_CDROM =Yes
@


1.1.1.1
log
@import nipper 0.12.0

Nipper enables network administrators, security professionals and auditors
to quickly produce reports on key network infrastructure devices.

tested by rui and Nigel J. Taylor

ok rui@@
@
text
@@
