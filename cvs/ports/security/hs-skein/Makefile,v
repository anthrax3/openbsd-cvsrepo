head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.4
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	kili_20120122:1.1.1.1
	kili:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2016.01.20.16.26.20;	author kili;	state Exp;
branches;
next	1.8;
commitid	JrsvN5R3csmF5YPN;

1.8
date	2015.12.20.11.33.36;	author kili;	state Exp;
branches;
next	1.7;
commitid	DHoYQIuYiaeHnHcf;

1.7
date	2015.09.20.18.29.21;	author kili;	state Exp;
branches;
next	1.6;
commitid	YIpoHDeex0RUDlIN;

1.6
date	2014.12.18.21.13.21;	author kili;	state Exp;
branches;
next	1.5;
commitid	ycqz9WUXFMrCdFLl;

1.5
date	2013.03.11.11.41.25;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2013.01.20.18.05.35;	author kili;	state Exp;
branches;
next	1.3;

1.3
date	2012.10.28.23.30.36;	author kili;	state Exp;
branches;
next	1.2;

1.2
date	2012.10.21.18.27.49;	author kili;	state Exp;
branches;
next	1.1;

1.1
date	2012.01.22.17.17.51;	author kili;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.01.22.17.17.51;	author kili;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Bump after ghc changes.
@
text
@# $OpenBSD: Makefile,v 1.8 2015/12/20 11:33:36 kili Exp $

COMMENT =		a family of cryptographic hash functions

DISTNAME =		skein-1.0.9.2
REVISION =		2
CATEGORIES =		security

# BSD3
PERMIT_PACKAGE_CDROM =	Yes

MODULES =		lang/ghc

MODGHC_BUILD =		cabal hackage haddock register

MODGHC_PACKAGE_KEY =	4cmcSdqE4k4IDFpNaHNXzg

RUN_DEPENDS =		devel/hs-cereal>=0.3,<0.5 \
			devel/hs-tagged>=0.2,<0.8 \
			security/hs-crypto-api>=0.6,<0.14

BUILD_DEPENDS =		${RUN_DEPENDS}

.include <bsd.port.mk>
@


1.8
log
@Adjust MODGHC_PACKAGE_KEY.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2015/09/20 18:29:21 kili Exp $
d6 1
a6 1
REVISION =		1
@


1.7
log
@Set MODGHC_PACKAGE_KEY and adjust plist.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2014/12/18 21:13:21 kili Exp $
d6 1
a6 1
REVISION =		0
d16 1
a16 1
MODGHC_PACKAGE_KEY =	94qfMQ6UChnKuGjBUFxVaW
@


1.6
log
@Update to hs-skein-1.0.9.2.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2013/03/11 11:41:25 espie Exp $
d6 1
d15 2
@


1.5
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/01/20 18:05:35 kili Exp $
d5 1
a5 2
DISTNAME =		skein-0.1.0.9
REVISION =		1
d15 3
a17 3
RUN_DEPENDS =		devel/hs-cereal>=0.3,<0.4 \
			devel/hs-tagged>=0.2,<0.5 \
			security/hs-crypto-api>=0.6,<0.11
@


1.4
log
@Regenerate plist for profiling libs.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2012/10/28 23:30:36 kili Exp $
a10 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM =Yes
PERMIT_DISTFILES_FTP =	Yes
@


1.3
log
@Move the @@exec and @@unexec lines running the {,un}register.sh scripts
and the line with the unregister.sh script down to the bottom of
the plist. Silences all the blurb about ".../*.haddock doesn't exist
or isn't a file."
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2012/10/21 18:27:49 kili Exp $
d6 1
a6 1
REVISION =		0
@


1.2
log
@Update to hs-skein-0.1.0.9.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2012/01/22 17:17:51 kili Exp $
d6 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d5 1
a5 1
DISTNAME =		skein-0.1.0.4
d19 2
a20 2
			devel/hs-tagged>=0.2,<0.3 \
			security/hs-crypto-api>=0.6,<0.9
@


1.1.1.1
log
@Skein (http://www.skein-hash.info/) is a family of fast
secure cryptographic hash functions designed by Niels
Ferguson, Stefan Lucks, Bruce Schneier, Doug Whiting, Mihir
Bellare, Tadayoshi Kohno, Jon Callas and Jesse Walker.
This package uses bindings to the optimized C implementation of
Skein.  We provide a high-level interface (see module "Crypto.Skein")
to some of the Skein use cases.  We also provide a low-level interface
(see module "Crypto.Skein.Internal") should you need to use Skein
in a different way.
Currently we have support for Skein as cryptographic hash function
as Skein as a message authentication code (Skein-MAC).  For examples
of how to use this package, see "Crypto.Skein" module documentation.

ok sthen@@

@
text
@@
