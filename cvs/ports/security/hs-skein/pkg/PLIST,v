head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.6
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	kili_20120122:1.1.1.1
	kili:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2015.09.20.18.29.21;	author kili;	state Exp;
branches;
next	1.4;
commitid	YIpoHDeex0RUDlIN;

1.4
date	2014.12.18.21.13.21;	author kili;	state Exp;
branches;
next	1.3;
commitid	ycqz9WUXFMrCdFLl;

1.3
date	2013.01.20.18.05.35;	author kili;	state Exp;
branches;
next	1.2;

1.2
date	2012.10.28.23.30.36;	author kili;	state Exp;
branches;
next	1.1;

1.1
date	2012.01.22.17.17.51;	author kili;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.01.22.17.17.51;	author kili;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Set MODGHC_PACKAGE_KEY and adjust plist.
@
text
@@@comment $OpenBSD: PLIST,v 1.4 2014/12/18 21:13:21 kili Exp $
lib/ghc/${DISTNAME}/
lib/ghc/${DISTNAME}/Crypto/
lib/ghc/${DISTNAME}/Crypto/Skein/
lib/ghc/${DISTNAME}/Crypto/Skein.hi
lib/ghc/${DISTNAME}/Crypto/Skein.p_hi
lib/ghc/${DISTNAME}/Crypto/Skein/Internal.hi
lib/ghc/${DISTNAME}/Crypto/Skein/Internal.p_hi
lib/ghc/${DISTNAME}/HS${DISTNAME}-${MODGHC_PACKAGE_KEY}.o
lib/ghc/${DISTNAME}/libHS${DISTNAME}-${MODGHC_PACKAGE_KEY}.a
lib/ghc/${DISTNAME}/libHS${DISTNAME}-${MODGHC_PACKAGE_KEY}_p.a
lib/ghc/${DISTNAME}/register.sh
share/doc/hs-${DISTNAME}/
share/doc/hs-${DISTNAME}/LICENSE
share/doc/hs-${DISTNAME}/html/
share/doc/hs-${DISTNAME}/html/Crypto-Skein-Internal.html
share/doc/hs-${DISTNAME}/html/Crypto-Skein.html
share/doc/hs-${DISTNAME}/html/doc-index.html
share/doc/hs-${DISTNAME}/html/frames.html
share/doc/hs-${DISTNAME}/html/haddock-util.js
share/doc/hs-${DISTNAME}/html/hslogo-16.png
share/doc/hs-${DISTNAME}/html/index-frames.html
share/doc/hs-${DISTNAME}/html/index.html
share/doc/hs-${DISTNAME}/html/mini_Crypto-Skein-Internal.html
share/doc/hs-${DISTNAME}/html/mini_Crypto-Skein.html
share/doc/hs-${DISTNAME}/html/minus.gif
share/doc/hs-${DISTNAME}/html/ocean.css
share/doc/hs-${DISTNAME}/html/plus.gif
share/doc/hs-${DISTNAME}/html/skein.haddock
share/doc/hs-${DISTNAME}/html/synopsis.png
@@comment share/hs-${DISTNAME}/
@@comment share/hs-${DISTNAME}/tests/
@@comment share/hs-${DISTNAME}/tests/skein_golden_kat.txt
@@exec /usr/bin/env HOME=/nonexistent %D/lib/ghc/${DISTNAME}/register.sh -v0
@@unexec /usr/bin/env HOME=/nonexistent %D/lib/ghc/${DISTNAME}/unregister.sh -v0 --force
lib/ghc/${DISTNAME}/unregister.sh
@


1.4
log
@Update to hs-skein-1.0.9.2.
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.3 2013/01/20 18:05:35 kili Exp $
d9 3
a11 2
lib/ghc/${DISTNAME}/libHS${DISTNAME}.a
lib/ghc/${DISTNAME}/libHS${DISTNAME}_p.a
@


1.3
log
@Regenerate plist for profiling libs.
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.2 2012/10/28 23:30:36 kili Exp $
a8 1
lib/ghc/${DISTNAME}/HS${DISTNAME}.o
@


1.2
log
@Move the @@exec and @@unexec lines running the {,un}register.sh scripts
and the line with the unregister.sh script down to the bottom of
the plist. Silences all the blurb about ".../*.haddock doesn't exist
or isn't a file."
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.1.1.1 2012/01/22 17:17:51 kili Exp $
d6 1
d8 1
d11 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@comment $OpenBSD$
a9 3
@@exec /usr/bin/env HOME=/nonexistent %D/lib/ghc/${DISTNAME}/register.sh -v0
@@unexec /usr/bin/env HOME=/nonexistent %D/lib/ghc/${DISTNAME}/unregister.sh -v0 --force
lib/ghc/${DISTNAME}/unregister.sh
d31 3
@


1.1.1.1
log
@Skein (http://www.skein-hash.info/) is a family of fast
secure cryptographic hash functions designed by Niels
Ferguson, Stefan Lucks, Bruce Schneier, Doug Whiting, Mihir
Bellare, Tadayoshi Kohno, Jon Callas and Jesse Walker.
This package uses bindings to the optimized C implementation of
Skein.  We provide a high-level interface (see module "Crypto.Skein")
to some of the Skein use cases.  We also provide a low-level interface
(see module "Crypto.Skein.Internal") should you need to use Skein
in a different way.
Currently we have support for Skein as cryptographic hash function
as Skein as a message authentication code (Skein-MAC).  For examples
of how to use this package, see "Crypto.Skein" module documentation.

ok sthen@@

@
text
@@
