head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.10
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.8
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.6
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3;
locks; strict;
comment	@# @;


1.3
date	2015.05.02.10.25.47;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	oFMaAIAedvfce2AS;

1.2
date	2013.05.07.06.39.00;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2013.03.19.16.07.49;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix a couple of implicit declarations.
@
text
@$OpenBSD$

https://bugs.freedesktop.org/show_bug.cgi?id=86080

--- common/compat.c.orig	Sat May  2 12:13:40 2015
+++ common/compat.c	Sat May  2 12:15:41 2015
@@@@ -40,6 +40,11 @@@@
  */
 #define _XOPEN_SOURCE 700
 
+/*
+ * This is needed to expose issetugid since we define _XOPEN_SOURCE
+ */
+#define _BSD_SOURCE
+
 #include "compat.h"
 
 #include <assert.h>
@


1.2
log
@Update to p11-kit-0.18.1.
@
text
@d1 1
a1 1
$OpenBSD: patch-common_compat_c,v 1.1 2013/03/19 16:07:49 ajacoutot Exp $
d3 1
a3 4
From 7c27e9fbbe86b3268065f248eab2d6964983a715 Mon Sep 17 00:00:00 2001
From: Stef Walter <stefw@@gnome.org>
Date: Tue, 19 Mar 2013 13:50:32 +0000
Subject: trust: Don't use POSIX or GNU basename()
d5 10
a14 54
--- common/compat.c.orig	Mon Mar 11 18:06:27 2013
+++ common/compat.c	Tue Mar 19 14:55:13 2013
@@@@ -148,31 +148,39 @@@@ getprogname (void)
 
 #endif /* HAVE_GETPROGNAME */
 
-#ifndef HAVE_BASENAME
-
 char *
-basename (const char *name)
+p11_basename (const char *name)
 {
-	char *p;
 #ifdef OS_WIN32
-	char *p2;
+	static const char *delims = "/\\";
+#else
+	static const char *delims = "/";
 #endif
 
-	if (!name || name[0] == '\0')
-		return ".";
+	const char *end;
+	const char *beg;
 
-	p = strrchr (name, '/');
-#ifdef OS_WIN32
-	p2 = strrchr (name, '\\');
-	if (p2 > p)
-		p = p2;
-#endif
-	if (p != NULL)
-		return p + 1;
-	return (char *)name;
-}
+	if (name == NULL)
+		return NULL;
 
-#endif /* HAVE_BASENAME */
+	/* Any trailing slashes */
+	end = name + strlen (name);
+	while (end != name) {
+		if (!strchr (delims, *(end - 1)))
+			break;
+		end--;
+	}
+
+	/* Find the last slash after those */
+	beg = end;
+	while (beg != name) {
+		if (strchr (delims, *(beg - 1)))
+			break;
+		beg--;
+	}
d16 1
a16 2
+	return strndup (beg, end - beg);
+}
d18 1
a18 2
 #ifdef OS_UNIX
 #include <sys/stat.h>
@


1.1
log
@Fix a segfault when parsing certificates.
@
text
@d1 1
a1 1
$OpenBSD$
@

