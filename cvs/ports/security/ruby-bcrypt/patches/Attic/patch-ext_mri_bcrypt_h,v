head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.09.07.16.10.49;	author jeremy;	state dead;
branches;
next	1.1;

1.1
date	2010.01.01.20.35.34;	author jcs;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to version 3.0.0.  Take maintainership. Remove regression
tests as they now depend on RSpec 2, and ports still only supports
RSpec 1.

The bcrypt C implementation in 3.0.0 is new, so the previous patches
are no longer necessary.
@
text
@$OpenBSD: patch-ext_mri_bcrypt_h,v 1.1 2010/01/01 20:35:34 jcs Exp $
--- ext/mri/bcrypt.h.orig	Wed Dec 31 17:00:00 1969
+++ ext/mri/bcrypt.h	Thu Dec 31 16:30:45 2009
@@@@ -51,7 +51,7 @@@@
  *        cryptographically secure random source.
  * Returns: output
  */
-char *bcrypt_gensalt(char *output, uint8_t log_rounds, uint8_t *rseed);
+char *_bcrypt_gensalt(char *output, uint8_t log_rounds, uint8_t *rseed);
 
 /*
  * Given a secret and a salt, generates a salted hash (which you can then store safely).
@@@@ -62,6 +62,6 @@@@ char *bcrypt_gensalt(char *output, uint8_t log_rounds,
  * salt: The salt, as generated by bcrypt_gensalt().
  * Returns: output on success, NULL on error.
  */
-char *bcrypt(char *output, const char *key, const char *salt);
+char *_bcrypt(char *output, const char *key, const char *salt);
 
 #endif /* _BCRYPT_H_ */
@


1.1
log
@make this actually work again after the last update from pirofti

the authors changed the interfaces to the bcrypt() and
bcrypt_gensalt() routines, so rename them to avoid conflicting with
our own routines in libc
@
text
@d1 1
a1 1
$OpenBSD$
@

