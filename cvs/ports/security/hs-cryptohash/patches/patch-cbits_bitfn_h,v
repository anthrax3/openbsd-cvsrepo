head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.24
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.22
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.18
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.20
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.16
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.14
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.12
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	jasper_20100912:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2011.04.12.10.43.04;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.12.20.43.41;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.08.23.29.04;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.12.08.23.29.04;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@- update to 0.7.0
@
text
@$OpenBSD: patch-cbits_bitfn_h,v 1.2 2010/12/12 20:43:41 jasper Exp $

- Don't redefine swap32/swap64.

--- cbits/bitfn.h.orig	Tue Apr 12 12:34:26 2011
+++ cbits/bitfn.h	Tue Apr 12 12:36:53 2011
@@@@ -30,14 +30,17 @@@@
 /**********************************************************/
 # if (defined(__i386__))
 #  define ARCH_HAS_SWAP32
+#  ifndef swap32
 static inline uint32_t bitfn_swap32(uint32_t a)
 {
 	asm ("bswap %0" : "=r" (a) : "0" (a));
 	return a;
 }
+#  endif
 /**********************************************************/
 # elif (defined(__arm__))
 #  define ARCH_HAS_SWAP32
+#  ifndef swap32
 static inline uint32_t bitfn_swap32(uint32_t a)
 {
 	uint32_t tmp = a;
@@@@ -48,22 +51,28 @@@@ static inline uint32_t bitfn_swap32(uint32_t a)
 	             : "=r" (a), "=r" (tmp) : "0" (a), "1" (tmp));
 	return a;
 }
+#  endif
 /**********************************************************/
 # elif defined(__x86_64__)
 #  define ARCH_HAS_SWAP32
 #  define ARCH_HAS_SWAP64
+#  ifndef swap32
 static inline uint32_t bitfn_swap32(uint32_t a)
 {
 	asm ("bswap %0" : "=r" (a) : "0" (a));
 	return a;
 }
 
+#  endif
+#  ifndef swap64
+
 static inline uint64_t bitfn_swap64(uint64_t a)
 {
 	asm ("bswap %0" : "=r" (a) : "0" (a));
 	return a;
 }
 
+#  endif
 # endif
 #endif /* NO_INLINE_ASM */
 /**********************************************************/
@@@@ -111,12 +120,14 @@@@ static inline void array_swap32(uint32_t *d, uint32_t 
 }
 #endif
 
+#ifndef swap64
 #ifndef ARCH_HAS_SWAP64
 static inline uint64_t bitfn_swap64(uint64_t a)
 {
 	return ((uint64_t) bitfn_swap32((uint32_t) (a >> 32))) |
 	       (((uint64_t) bitfn_swap32((uint32_t) a)) << 32);
 }
+#endif
 #endif
 
 #ifndef ARCH_HAS_ARRAY_SWAP64
@


1.2
log
@- unbreak on i386. spotted by naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-cbits_bitfn_h,v 1.1.1.1 2010/12/08 23:29:04 jasper Exp $
d5 2
a6 2
--- cbits/bitfn.h.orig	Mon Nov  1 23:27:34 2010
+++ cbits/bitfn.h	Sun Dec 12 21:40:45 2010
d12 1
a12 1
 static inline uint32_t swap32(uint32_t a)
d22 1
a22 1
 static inline uint32_t swap32(uint32_t a)
d25 1
a25 1
@@@@ -48,22 +51,25 @@@@ static inline uint32_t swap32(uint32_t a)
d35 1
a35 1
 static inline uint32_t swap32(uint32_t a)
d40 1
a40 1
-
d43 2
a44 1
 static inline uint64_t swap64(uint64_t a)
d49 1
a49 1
-
d54 1
a54 1
@@@@ -111,6 +117,7 @@@@ static inline void array_swap32(uint32_t *d, uint32_t 
d60 1
a60 1
 static inline uint64_t swap64(uint64_t a)
d62 2
a63 2
@@@@ -118,6 +125,7 @@@@ static inline uint64_t swap64(uint64_t a)
 	       (((uint64_t) swap32((uint32_t) a)) << 32);
d65 1
a66 1
+#endif
a68 11
 static inline void array_swap64(uint64_t *d, uint64_t *s, uint32_t nb)
@@@@ -161,7 +169,8 @@@@ static inline void array_copy64(uint64_t *d, uint64_t 
 #ifdef __MINGW32__
   # define LITTLE_ENDIAN 1234
   # define BYTE_ORDER    LITTLE_ENDIAN
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD__) || defined(__OpenBSD__)
+  # include <sys/types.h>
   # include <sys/endian.h>
 #elif defined(__APPLE__)
   # include <machine/endian.h>
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d6 1
a6 1
+++ cbits/bitfn.h	Wed Dec  8 18:20:40 2010
d53 17
a69 1
@@@@ -161,7 +167,8 @@@@ static inline void array_copy64(uint64_t *d, uint64_t 
@


1.1.1.1
log
@import hs-cryptohash 0.6.1

Collection of crypto hashes, with a practical incremental and one-pass,
pure APIs, with performance close to the fastest implementations
available in others languages.

feedback and ok kili@@
@
text
@@
