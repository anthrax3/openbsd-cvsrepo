head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.28
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.26
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.24
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.18
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.16
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.14
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	sebastia_20100920:1.1.1.1
	sebastia:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2010.09.20.07.15.31;	author sebastia;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.20.07.15.31;	author sebastia;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- man/jk_init.8.orig	Sun Feb  7 17:13:06 2010
+++ man/jk_init.8	Tue Sep 14 19:12:38 2010
@@@@ -14,7 +14,7 @@@@ jk_init \- a utility to quicky create functional jail 
 It is not an easy task to setup a jail (a changed root) in a functional way. If you want the user to be able to run cvs for example, it will not work to simply copy the cvs binary into the users jail. You will find that cvs needs libraries as well. cvs also needs the /dev/null device. Finally you need something to start cvs: you need a shell too. And the shell might need files like /etc/passwd and /etc/nsswitch.conf.
 
 With jk_init you can automate these tasks. You can create a section in the configfile 
-.I /etc/jailkit/jk_init.ini
+.I ${SYSCONFDIR}/jailkit/jk_init.ini
 that has all the files, directories and devices, and you can use jk_init to setup such a jail with a single command. The default configfile has examples for cvs, sftp, scp, rsync and more for Debian and Ubuntu Linux. For other operating systems the defaults might need some (minor) updates. 
 
 .SH EXAMPLE
@@@@ -24,7 +24,7 @@@@ An example configfile section might look like this:
 .sp
 [jk_lsh]
 comment = Jailkit limited shell
-paths = /usr/sbin/jk_lsh, /etc/jailkit/jk_lsh.ini
+paths = ${PREFIX}/sbin/jk_lsh, ${SYSCONFDIR}/jailkit/jk_lsh.ini
 users = root
 groups = root
 need_logsocket = 1
@@@@ -32,7 +32,7 @@@@ includesections = uidbasics
 
 [sftp]
 comment = ssh secure ftp with Jailkit limited shell
-paths = /usr/lib/sftp-server
+paths = /usr/libexec/sftp-server
 includesections = netbasics, uidbasics
 devices = /dev/urandom, /dev/null
 emptydirs = /svr
@@@@ -104,7 +104,7 @@@@ Specify the jail directory to operate on. 
 The help screen
 
 .SH FILES
-.I /etc/jailkit/jk_init.ini
+.I ${SYSCONFDIR}/jailkit/jk_init.ini
 
 .SH "SEE ALSO"
 .BR jailkit(8)
@


1.1.1.1
log
@Import jailkit-2.12: utilities for jailing a user or process

Jailkit is a set of utilities to limit user accounts to specific
files using chroot() and or specific commands. Setting up a chroot
shell, a shell limited to some specific command, or a daemon inside
a chroot jail is a lot easier and can be automated using these utilities.

After merging in what ajacoutot@@ already had, and some final feedback from 
him, OK ajacoutot@@


@
text
@@
