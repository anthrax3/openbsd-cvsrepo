head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.38
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.36
	OPENBSD_5_0:1.2.0.34
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.32
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.30
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.28
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.26
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.24
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.22
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.20
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.18
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.16
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.14
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.12
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.10
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.8
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	avsm_2003-Jul-20:1.1.1.1
	avsm:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2012.08.18.22.40.36;	author avsm;	state dead;
branches;
next	1.2;

1.2
date	2003.07.22.20.11.47;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.21.02.39.46;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.07.21.02.39.46;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to ocaml-cryptokit-1.6
* new HOMEPAGE, new MASTER_SITE
* use new CONFIGURE_STYLE=oasis
* rename from cryptokit to ocaml-cryptokit

From: Christopher Zimmermann <madroach@@gmerlin.de>
@
text
@$OpenBSD: patch-Makefile,v 1.2 2003/07/22 20:11:47 sturm Exp $
--- Makefile.orig	Thu Jul 10 16:46:55 2003
+++ Makefile	Tue Jul 22 19:04:16 2003
@@@@ -14,9 +14,6 @@@@ ZLIB_LIBDIR=/usr/lib
 # The directory containing the Zlib header file (zlib.h)
 ZLIB_INCLUDE=/usr/include
 
-# Where to install the library. By default: OCaml's standard library directory.
-INSTALLDIR=`$(OCAMLC) -where`
-
 # Flags for the C compiler.
 CFLAGS=-O -I$(ZLIB_INCLUDE) $(ZLIB)
 
@@@@ -55,10 +52,10 @@@@ cryptokit.cmxa: $(CAML_OBJS:.cmo=.cmx)
 	$(MKLIB) -o cryptokit $(CAML_OBJS:.cmo=.cmx) -L$(ZLIB_LIBDIR) $(ZLIB_LIB)
 
 test: test.byt
-	$(OCAMLRUN) -I . ./test.byt
+	./test.byt
 
 test.byt: libcryptokit.a cryptokit.cma test.ml
-	$(OCAMLC) -o test.byt unix.cma nums.cma cryptokit.cma test.ml
+	$(OCAMLC) -I . -o test.byt unix.cma nums.cma cryptokit.cma test.ml
 
 clean::
 	rm -f test.byt
@


1.2
log
@- use ocaml module
- generate native code libary if possible
- fix regress

avsm@@ ok
@
text
@d1 1
a1 1
$OpenBSD: patch-Makefile,v 1.1.1.1 2003/07/21 02:39:46 avsm Exp $
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- Makefile.orig	Thu Jul 10 10:47:17 2003
+++ Makefile	Fri Jul 18 15:26:53 2003
d14 1
a14 1
@@@@ -55,7 +52,7 @@@@ cryptokit.cmxa: $(CAML_OBJS:.cmo=.cmx)
d22 5
a26 1
 	$(OCAMLC) -o test.byt unix.cma nums.cma cryptokit.cma test.ml
@


1.1.1.1
log
@initial import of cryptokit-1.2
--

The Cryptokit library for Objective Caml provides a variety of
cryptographic primitives that can be used to implement cryptographic
protocols in security-sensitive applications.  The primitives
provided include:

- Symmetric-key ciphers: AES, DES, Triple-DES, ARCfour,
  in ECB, CBC, CFB and OFB modes.
- Public-key cryptography: RSA encryption, Diffie-Hellman key
  agreement.
- Hash functions and MACs: SHA-1, MD5, and MACs based on 
  AES and DES.
- Random number generation.
- Encodings and compression: Base64, hexadecimal, Zlib compression.

Additional ciphers and hashes can easily be used in conjunction
with the library.  In particular, basic mechanisms such as chaining
modes, output buffering, and padding are provided by generic classes
that can easily be composed with user-provided ciphers.  More
generally, the library promotes a "Lego"-like style of constructing
and composing transformations over character streams.

@
text
@@
