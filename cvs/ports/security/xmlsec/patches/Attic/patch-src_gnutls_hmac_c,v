head	1.1;
access;
symbols
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_5:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2009.08.14.03.20.35;	author william;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2009.08.14.03.20.35;	author william;	state Exp;
branches;
next	;

1.1.4.1
date	2009.10.31.03.58.23;	author william;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-src_gnutls_hmac_c was initially added on branch OPENBSD_4_5.
@
text
@@


1.1.4.1
log
@Security fix for CVE-2009-0217:

XML Signature HMAC Truncation Spoofing
@
text
@a0 71
Security fix for CVE-2009-0217:

XML Signature HMAC Truncation Spoofing 


$OpenBSD$
--- src/gnutls/hmac.c.orig	Wed Nov  7 01:43:09 2007
+++ src/gnutls/hmac.c	Tue Aug 11 23:00:50 2009
@@@@ -23,10 +23,40 @@@@
 #include <xmlsec/gnutls/app.h>
 #include <xmlsec/gnutls/crypto.h>
 
+#define XMLSEC_GNUTLS_MIN_HMAC_SIZE		64
 #define XMLSEC_GNUTLS_MAX_HMAC_SIZE		128
 
 /**************************************************************************
  *
+ * Configuration
+ *
+ *****************************************************************************/
+static int g_xmlsec_gnutls_hmac_min_length = XMLSEC_GNUTLS_MIN_HMAC_SIZE;
+
+/**
+ * xmlSecGnuTLSHmacGetMinOutputLength: 
+ * 
+ * Returns the min HMAC output length
+ */
+int xmlSecGnuTLSHmacGetMinOutputLength()
+{
+    return g_xmlsec_gnutls_hmac_min_length;
+}
+
+/**
+ * xmlSecGnuTLSHmacSetMinOutputLength: 
+ *
+ * @@min_length: the new min length 
+ * 
+ * Sets the min HMAC output length
+ */
+void xmlSecGnuTLSHmacSetMinOutputLength(int min_length)
+{
+    g_xmlsec_gnutls_hmac_min_length = min_length;
+}
+
+/**************************************************************************
+ *
  * Internal GNUTLS HMAC CTX
  *
  *****************************************************************************/
@@@@ -178,7 +208,20 @@@@ xmlSecGnuTLSHmacNodeRead(xmlSecTransformPtr transform,
 	    ctx->dgstSize = atoi((char*)content);	    
 	    xmlFree(content);
 	}
-	/* todo: error if dgstSize == 0 ?*/
+	
+	/* Ensure that HMAC length is greater than min specified.
+	   Otherwise, an attacker can set this lenght to 0 or very 
+	   small value
+	*/
+	if(ctx->dgstSize < xmlSecGnuTLSHmacGetMinOutputLength()) {
+ 	   xmlSecError(XMLSEC_ERRORS_HERE,
+		    xmlSecErrorsSafeString(xmlSecTransformGetName(transform)),
+		    xmlSecNodeHMACOutputLength,
+		    XMLSEC_ERRORS_R_INVALID_NODE_ATTRIBUTE,
+		    "HMAC output length is too small");
+	   return(-1);
+	}
+
 	cur = xmlSecGetNextElementNode(cur->next);
     }
     
@


1.1.2.1
log
@SECURITY FIX

Resolves CVE-2009-0217:

XML Signature HMAC Truncation Spoofing

ok robert@@
@
text
@a0 71
Security fix for CVE-2009-0217:

XML Signature HMAC Truncation Spoofing 


$OpenBSD$
--- src/gnutls/hmac.c.orig	Wed Nov  7 01:43:09 2007
+++ src/gnutls/hmac.c	Tue Aug 11 23:00:50 2009
@@@@ -23,10 +23,40 @@@@
 #include <xmlsec/gnutls/app.h>
 #include <xmlsec/gnutls/crypto.h>
 
+#define XMLSEC_GNUTLS_MIN_HMAC_SIZE		64
 #define XMLSEC_GNUTLS_MAX_HMAC_SIZE		128
 
 /**************************************************************************
  *
+ * Configuration
+ *
+ *****************************************************************************/
+static int g_xmlsec_gnutls_hmac_min_length = XMLSEC_GNUTLS_MIN_HMAC_SIZE;
+
+/**
+ * xmlSecGnuTLSHmacGetMinOutputLength: 
+ * 
+ * Returns the min HMAC output length
+ */
+int xmlSecGnuTLSHmacGetMinOutputLength()
+{
+    return g_xmlsec_gnutls_hmac_min_length;
+}
+
+/**
+ * xmlSecGnuTLSHmacSetMinOutputLength: 
+ *
+ * @@min_length: the new min length 
+ * 
+ * Sets the min HMAC output length
+ */
+void xmlSecGnuTLSHmacSetMinOutputLength(int min_length)
+{
+    g_xmlsec_gnutls_hmac_min_length = min_length;
+}
+
+/**************************************************************************
+ *
  * Internal GNUTLS HMAC CTX
  *
  *****************************************************************************/
@@@@ -178,7 +208,20 @@@@ xmlSecGnuTLSHmacNodeRead(xmlSecTransformPtr transform,
 	    ctx->dgstSize = atoi((char*)content);	    
 	    xmlFree(content);
 	}
-	/* todo: error if dgstSize == 0 ?*/
+	
+	/* Ensure that HMAC length is greater than min specified.
+	   Otherwise, an attacker can set this lenght to 0 or very 
+	   small value
+	*/
+	if(ctx->dgstSize < xmlSecGnuTLSHmacGetMinOutputLength()) {
+ 	   xmlSecError(XMLSEC_ERRORS_HERE,
+		    xmlSecErrorsSafeString(xmlSecTransformGetName(transform)),
+		    xmlSecNodeHMACOutputLength,
+		    XMLSEC_ERRORS_R_INVALID_NODE_ATTRIBUTE,
+		    "HMAC output length is too small");
+	   return(-1);
+	}
+
 	cur = xmlSecGetNextElementNode(cur->next);
     }
     
@

