head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2015.10.22.16.21.07;	author dcoppa;	state dead;
branches;
next	1.3;
commitid	fXyupmTxW8FF3coI;

1.3
date	2015.10.20.09.51.09;	author dcoppa;	state Exp;
branches;
next	1.2;
commitid	vn23VFR8itjYtdmX;

1.2
date	2014.07.11.16.49.56;	author dcoppa;	state dead;
branches;
next	1.1;
commitid	nmqtc5MESHlVaHSh;

1.1
date	2014.03.27.13.55.43;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
Update to ccid-1.4.21
@
text
@$OpenBSD: patch-src_ccid_usb_c,v 1.3 2015/10/20 09:51:09 dcoppa Exp $

commit 7a46f702e3c4752304d94efc61a84618a0a566c9
Author: Ludovic Rousseau <ludovic.rousseau@@free.fr>
Date:   Thu Aug 27 09:51:13 2015 +0200

Use libusb_error_name() to display the error name

libusb provides libusb_error_name() to display a human readable
version of the error code returned by libusb.

LIBUSB_ERROR_BUSY is easier to understand than -6

commit 94142da9a4b11bf9cd2b429e1a15139936c751af
Author: Ludovic Rousseau <ludovic.rousseau@@free.fr>
Date:   Wed Sep 16 18:10:45 2015 +0200

OpenUSBByName(): fix the order of interfaces in log

The log message "Found interface %d but expecting %d" has the
parameters inverted.

--- src/ccid_usb.c.orig	Fri Apr 10 20:30:23 2015
+++ src/ccid_usb.c	Tue Oct 20 11:02:24 2015
@@@@ -307,7 +307,7 @@@@ status_t OpenUSBByName(unsigned int reader_index, /*@@n
 		rv = libusb_init(&ctx);
 		if (rv != 0)
 		{
-			DEBUG_CRITICAL2("libusb_init failed: %d", rv);
+			DEBUG_CRITICAL2("libusb_init failed: %s", libusb_error_name(rv));
 			return_value = STATUS_UNSUCCESSFUL;
 			goto end1;
 		}
@@@@ -496,8 +496,8 @@@@ status_t OpenUSBByName(unsigned int reader_index, /*@@n
 				r = libusb_open(dev, &dev_handle);
 				if (r < 0)
 				{
-					DEBUG_CRITICAL4("Can't libusb_open(%d/%d): %d",
-						bus_number, device_address, r);
+					DEBUG_CRITICAL4("Can't libusb_open(%d/%d): %s",
+						bus_number, device_address, libusb_error_name(r));
 
 					continue;
 				}
@@@@ -522,8 +522,9 @@@@ again:
 						if (r < 0)
 						{
 							(void)libusb_close(dev_handle);
-							DEBUG_CRITICAL4("Can't set configuration on %d/%d: %d",
-									bus_number, device_address, r);
+							DEBUG_CRITICAL4("Can't set configuration on %d/%d: %s",
+									bus_number, device_address,
+									libusb_error_name(r));
 							continue;
 						}
 					}
@@@@ -534,8 +535,8 @@@@ again:
 					{
 #endif
 						(void)libusb_close(dev_handle);
-						DEBUG_CRITICAL4("Can't get config descriptor on %d/%d: %d",
-							bus_number, device_address, r);
+						DEBUG_CRITICAL4("Can't get config descriptor on %d/%d: %s",
+							bus_number, device_address, libusb_error_name(r));
 						continue;
 					}
 #ifdef __APPLE__
@@@@ -570,7 +571,7 @@@@ again:
 					/* an interface was specified and it is not the
 					 * current one */
 					DEBUG_INFO3("Found interface %d but expecting %d",
-						interface_number, interface);
+						interface, interface_number);
 					DEBUG_INFO3("Wrong interface for USB device %d/%d."
 						" Checking next one.", bus_number, device_address);
 
@@@@ -584,8 +585,8 @@@@ again:
 				if (r < 0)
 				{
 					(void)libusb_close(dev_handle);
-					DEBUG_CRITICAL4("Can't claim interface %d/%d: %d",
-						bus_number, device_address, r);
+					DEBUG_CRITICAL4("Can't claim interface %d/%d: %s",
+						bus_number, device_address, libusb_error_name(r));
 					claim_failed = TRUE;
 					interface_number = -1;
 					continue;
@


1.3
log
@
Bugfixes from upstream:

Use libusb_error_name() to display the error name.
libusb provides libusb_error_name() to display a human readable
version of the error code returned by libusb.
LIBUSB_ERROR_BUSY is easier to understand than -6
(upstream git commit 7a46f702e3c4752304d94efc61a84618a0a566c9)

OpenUSBByName(): fix the order of interfaces in log
The log message "Found interface %d but expecting %d" has the
parameters inverted.
(upstream git commit 94142da9a4b11bf9cd2b429e1a15139936c751af)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@
Update to ccid-1.4.17
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ccid_usb_c,v 1.1 2014/03/27 13:55:43 dcoppa Exp $
d3 3
a5 2
Revert svn revision 6801, "Do not get the data rates if
bNumDataRatesSupported = 0", since it breaks (at least) my reader
d7 81
a87 17
--- src/ccid_usb.c.orig	Sun Mar 23 16:09:48 2014
+++ src/ccid_usb.c	Thu Mar 27 13:54:17 2014
@@@@ -635,13 +635,7 @@@@ again:
 				usbDevice[reader_index].ccid.bMaxSlotIndex = device_descriptor[4];
 				usbDevice[reader_index].ccid.bCurrentSlotIndex = 0;
 				usbDevice[reader_index].ccid.readTimeout = DEFAULT_COM_READ_TIMEOUT;
-				if (device_descriptor[27])
-					usbDevice[reader_index].ccid.arrayOfSupportedDataRates = get_data_rates(reader_index, config_desc, num);
-				else
-				{
-					usbDevice[reader_index].ccid.arrayOfSupportedDataRates = NULL;
-					DEBUG_INFO("bNumDataRatesSupported is 0");
-				}
+				usbDevice[reader_index].ccid.arrayOfSupportedDataRates = get_data_rates(reader_index, config_desc, num);
 				usbDevice[reader_index].ccid.bInterfaceProtocol = usb_interface->altsetting->bInterfaceProtocol;
 				usbDevice[reader_index].ccid.bNumEndpoints = usb_interface->altsetting->bNumEndpoints;
 				usbDevice[reader_index].ccid.dwSlotStatus = IFD_ICC_PRESENT;
@


1.1
log
@Update to ccid-1.4.16
@
text
@d1 1
a1 1
$OpenBSD$
@

