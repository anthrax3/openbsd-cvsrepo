head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	abieber_20160909:1.1.1.1
	abieber:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.05.29.22.41.32;	author abieber;	state Exp;
branches;
next	1.1;
commitid	6oOl1qbKgUCVlGHV;

1.1
date	2016.09.09.14.11.43;	author abieber;	state Exp;
branches
	1.1.1.1;
next	;
commitid	G3yzU7lffkTm3s0l;

1.1.1.1
date	2016.09.09.14.11.43;	author abieber;	state Exp;
branches;
next	;
commitid	G3yzU7lffkTm3s0l;


desc
@@


1.2
log
@Bump to latest version.

OK awolk@@
@
text
@$OpenBSD: patch-go_client_cmd_update_go,v 1.1.1.1 2016/09/09 14:11:43 abieber Exp $

Disabling this because we don't want the binary to update itself
out from under us.

Upstream doesn't seem interested in our hacky Path finding process:
https://github.com/keybase/go-ps/pull/7#discussion_r73917329

--- go/client/cmd_update.go.orig	Thu Apr 20 07:44:48 2017
+++ go/client/cmd_update.go	Thu Apr 20 07:45:03 2017
@@@@ -34,17 +34,7 @@@@ func newCmdUpdateCheck(cl *libcmdline.CommandLine, g *
 		Name:  "check",
 		Usage: "Check for update",
 		Action: func(c *cli.Context) {
-			if libkb.IsBrewBuild {
-				g.Log.Errorf("\nTo update, run:\n\n\tbrew upgrade keybase")
-				return
-			}
-
-			updaterPath, err := install.UpdaterBinPath()
-			if err != nil {
-				g.Log.Errorf("Error finding updater path: %s", err)
-				return
-			}
-			g.Log.Errorf("\nTo update, you can run:\n\n\t%s check", updaterPath)
+			g.Log.Errorf("Not supported on OpenBSD.")
 		},
 	}
 }
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d9 3
a11 3
--- go/client/cmd_update.go.orig	Wed Sep  7 09:23:58 2016
+++ go/client/cmd_update.go	Wed Sep  7 09:24:50 2016
@@@@ -35,12 +35,7 @@@@ func newCmdUpdateCheck(cl *libcmdline.CommandLine, g *
d13 1
a13 1
 		Usage: "Trigger an update check",
d15 5
d25 2
a26 2
-			g.Log.Errorf("This is no longer supported. Instead you can run:\n\n\t%s check", updaterPath)
+			g.Log.Error("Not supported on OpenBSD.")
@


1.1.1.1
log
@Import keybase client, a command line tool for working with keybase.io!

OK awolk@@, suggestions from edd@@
@
text
@@
