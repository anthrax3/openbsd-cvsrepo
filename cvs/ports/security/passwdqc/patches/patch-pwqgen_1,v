head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.18
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.14
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.16
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2012.03.08.12.13.01;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.07.17.18.11;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2010.07.07.21.29.58;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Garbage collect the /dev/arandom patches.

from Brad
ok landry@@ sthen@@
@
text
@$OpenBSD: patch-pwqgen_1,v 1.2 2011/07/07 17:18:11 jasper Exp $
--- pwqgen.1.orig	Sat Mar 13 16:29:15 2010
+++ pwqgen.1	Tue Mar  6 15:27:28 2012
@@@@ -69,8 +69,7 @@@@ randomness, and in any case when it fails to generate 
 .Sh SEE ALSO
 .Xr pwqcheck 1 ,
 .Xr urandom 4 ,
-.Xr passwdqc.conf 5 ,
-.Xr pam_passwdqc 8 .
+.Xr passwdqc.conf 5 .
 .Pp
 http://www.openwall.com/passwdqc/
 .Sh AUTHORS
@


1.2
log
@- remove unneeded patches, all the random devices have been providing the same
  output for a while now.
- fix a few license markers while here
@
text
@d1 4
a4 5
$OpenBSD: patch-pwqgen_1,v 1.1 2010/07/07 21:29:58 ajacoutot Exp $
--- pwqgen.1.orig	Sat Mar 13 22:29:15 2010
+++ pwqgen.1	Wed Jul  7 11:38:13 2010
@@@@ -68,9 +68,8 @@@@ randomness, and in any case when it fails to generate 
 .Pa /etc/passwdqc.conf .
d7 1
a7 1
-.Xr urandom 4 ,
a9 1
+.Xr arandom 4 ,
@


1.1
log
@Major update to passwdqc-1.2.2 which brings native OpenBSD support.

ok okan@@ sthen@@ millert@@
@
text
@d1 1
a1 1
$OpenBSD$
a3 9
@@@@ -32,7 +32,7 @@@@ The
 program generates a random passphrase using the libpasswdqc library.
 Strength of the generated passphrase depends on the amount of randomness
 read from
-.Pa /dev/urandom .
+.Pa /dev/arandom .
 .Sh OPTIONS
 .Bl -tag -width indent
 .It Cm random Ns = Ns Ar N
@

