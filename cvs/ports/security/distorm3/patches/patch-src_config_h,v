head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.12
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.10
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.09.27.16.53.53;	author miod;	state Exp;
branches;
next	;
commitid	2Bzo5eOl9wZhJEuU;


desc
@@


1.1
log
@Fix on big-endian platforms.

ok landry@@
@
text
@$OpenBSD$

Fix definitions for big-endian platforms.

--- src/config.h.orig	Sun Jul 29 12:18:41 2012
+++ src/config.h	Sat Sep 27 10:18:13 2014
@@@@ -144,27 +144,27 @@@@ along with this program.  If not, see <http://www.gnu.
  * These functions can read from the stream safely!
  * Swap endianity of input to little endian.
  */
-static _INLINE_ int16_t RSHORT(const uint8_t *s)
+_INLINE_ int16_t RSHORT(const uint8_t *s)
 {
 	return s[0] | (s[1] << 8);
 }
-static _INLINE_ uint16_t RUSHORT(const uint8_t *s)
+_INLINE_ uint16_t RUSHORT(const uint8_t *s)
 {
 	return s[0] | (s[1] << 8);
 }
-static _INLINE_ int32_t RLONG(const uint8_t *s)
+_INLINE_ int32_t RLONG(const uint8_t *s)
 {
 	return s[0] | (s[1] << 8) | (s[2] << 16) | (s[3] << 24);
 }
-static _INLINE_ uint32_t RULONG(const uint8_t *s)
+_INLINE_ uint32_t RULONG(const uint8_t *s)
 {
 	return s[0] | (s[1] << 8) | (s[2] << 16) | (s[3] << 24);
 }
-static _INLINE_ int64_t RLLONG(const uint8_t *s)
+_INLINE_ int64_t RLLONG(const uint8_t *s)
 {
 	return s[0] | (s[1] << 8) | (s[2] << 16) | (s[3] << 24) | ((uint64_t)s[4] << 32) | ((uint64_t)s[5] << 40) | ((uint64_t)s[6] << 48) | ((uint64_t)s[7] << 56);
 }
-static _INLINE_ uint64_t RULLONG(const uint8_t *s)
+_INLINE_ uint64_t RULLONG(const uint8_t *s)
 {
 	return s[0] | (s[1] << 8) | (s[2] << 16) | (s[3] << 24) | ((uint64_t)s[4] << 32) | ((uint64_t)s[5] << 40) | ((uint64_t)s[6] << 48) | ((uint64_t)s[7] << 56);
 }
@
