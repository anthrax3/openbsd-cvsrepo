head	1.2;
access;
symbols
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.07.20.07.02.58;	author sthen;	state dead;
branches;
next	1.1;
commitid	yBafMfEEJxY4nDCA;

1.1
date	2014.04.21.19.17.50;	author jca;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to pyOpenSSL-0.14 (switch to py-cryptography as a backend), and take
maintainer, ok eric@@
@
text
@$OpenBSD: patch-OpenSSL_rand_rand_c,v 1.1 2014/04/21 19:17:50 jca Exp $
Disable EGD support.
--- OpenSSL/rand/rand.c.orig	Fri Sep  2 17:46:13 2011
+++ OpenSSL/rand/rand.c	Mon Apr 21 18:57:05 2014
@@@@ -111,6 +111,7 @@@@ rand_screen(PyObject *spam, PyObject *args)
 }
 #endif
 
+#if 0
 static char rand_egd_doc[] = "\n\
 Query an entropy gathering daemon (EGD) for random data and add it to the\n\
 PRNG. I haven't found any problems when the socket is missing, the function\n\
@@@@ -133,6 +134,7 @@@@ rand_egd(PyObject *spam, PyObject *args)
 
     return PyLong_FromLong((long)RAND_egd_bytes(path, bytes));
 }
+#endif
 
 static char rand_cleanup_doc[] = "\n\
 Erase the memory used by the PRNG.\n\
@@@@ -245,7 +247,9 @@@@ static PyMethodDef rand_methods[] = {
 #ifdef MS_WINDOWS
     { "screen",    (PyCFunction)rand_screen,       METH_VARARGS, rand_screen_doc },
 #endif
+#if 0
     { "egd",       (PyCFunction)rand_egd,          METH_VARARGS, rand_egd_doc },
+#endif
     { "cleanup",   (PyCFunction)rand_cleanup,      METH_VARARGS, rand_cleanup_doc },
     { "load_file", (PyCFunction)rand_load_file,    METH_VARARGS, rand_load_file_doc },
     { "write_file",(PyCFunction)rand_write_file,   METH_VARARGS, rand_write_file_doc },
@


1.1
log
@Unbreak after RAND_egd_bytes removal. ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@

