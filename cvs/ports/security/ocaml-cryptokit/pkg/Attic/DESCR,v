head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.16
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.12
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.14
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.03.04.16.34.29;	author krw;	state dead;
branches;
next	1.1;
commitid	r7nDGfiBG5zpfKXp;

1.1
date	2012.08.18.22.40.36;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove unused, older library versions. Current ones
available via normal Ocaml ecosystem (a.k.a. opam).

ok chrisz@@ avsm@@ (maintainers)
@
text
@The Cryptokit library for Objective Caml provides a variety of
cryptographic primitives that can be used to implement cryptographic
protocols in security-sensitive applications.  The primitives
provided include:

- Symmetric-key ciphers: AES, DES, Triple-DES, ARCfour,
  in ECB, CBC, CFB and OFB modes.
- Public-key cryptography: RSA encryption, Diffie-Hellman key
  agreement.
- Hash functions and MACs: SHA-1, MD5, and MACs based on 
  AES and DES.
- Random number generation.
- Encodings and compression: Base64, hexadecimal, Zlib compression.

Additional ciphers and hashes can easily be used in conjunction
with the library.  In particular, basic mechanisms such as chaining
modes, output buffering, and padding are provided by generic classes
that can easily be composed with user-provided ciphers.  More
generally, the library promotes a "Lego"-like style of constructing
and composing transformations over character streams.
@


1.1
log
@update to ocaml-cryptokit-1.6
* new HOMEPAGE, new MASTER_SITE
* use new CONFIGURE_STYLE=oasis
* rename from cryptokit to ocaml-cryptokit

From: Christopher Zimmermann <madroach@@gmerlin.de>
@
text
@@

