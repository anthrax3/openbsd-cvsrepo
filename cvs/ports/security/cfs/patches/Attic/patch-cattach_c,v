head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.34
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.32
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.30
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.28
	OPENBSD_5_0:1.2.0.26
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.24
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.22
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.20
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.18
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.16
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.14
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.12
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.10
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.8
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.08.25.11.16.28;	author jca;	state dead;
branches;
next	1.3;
commitid	ZYz3xUSOJVyi0xdm;

1.3
date	2013.11.30.20.47.49;	author jca;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.07.20.23.44;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.15.18.32.22;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove security/cfs.  Unmaintained code, broken on 64 bits archs.

softraid CRYPTO, vnconfig and security/encfs provide much saner
alternatives.

ok tedu@@ steven@@ ajacoutot@@ sthen@@
@
text
@--- cattach.c.orig	Fri Dec 19 01:32:57 1997
+++ cattach.c	Sat Nov 30 21:44:12 2013
@@@@ -100,6 +100,7 @@@@ main(argc,argv)
 	char *dirarg=NULL;
 	char *namearg=NULL;
 	int keycheck=1;
+	int l;
 
 	ap.highsec=1;
 	while (--argc) if (**++argv == '-') {
@@@@ -164,17 +165,35 @@@@ main(argc,argv)
 			fprintf(stderr,"Can't stat current directory\n");
 			exit(1);
 		}
-		sprintf(dir,"%s/%s",buf,dirarg);
-	} else
-		strcpy(dir,dirarg);
-	sprintf(lname,"%s/..data",dir,1024);
-	sprintf(kname,"%s/..k",dir,1024);
+		l = snprintf(dir, sizeof(dir), "%s/%s", buf, dirarg);
+		if (l < 0 || l >= sizeof(dir)) {
+			fprintf(stderr, "File name too long\n");
+			exit(1);
+		}
+	} else {
+		if (strlcpy(dir, dirarg, sizeof(dir)) >= sizeof(dir)) {
+			fprintf(stderr, "File name too long\n");
+			exit(1);
+		}
+	}
+	l = snprintf(lname, sizeof(lname), "%s/..data", dir);
+	if (l < 0 || l >= sizeof(lname)) {
+	  fprintf(stderr, "File name too long\n");
+	  exit(1);
+	}
+	(void)snprintf(kname, sizeof(kname), "%s/..k", dir);
 	if (chdir(lname) >= 0)
 		strcpy(dir,lname);
 	else if (chdir(dir)<0) {
 		perror(dirarg);
 		exit(1);
 	}
+ 	l = snprintf(cname, sizeof(cname), "%s/..c", dir);
+	if (l < 0 || l >= sizeof(cname)) {
+	  fprintf(stderr, "File name too long\n");
+	  exit(1);
+	}
+	(void)snprintf(sname, sizeof(sname), "%s/..s", dir);
 #ifdef irix
 /* or (I hope) more or less any system with the 4 parameter statfs */
     if ((statfs(".",&sfb,sizeof sfb,0)<0) || (sfb.f_blocks==0)) {
@@@@ -188,7 +207,10 @@@@ main(argc,argv)
 	}
 #endif
 	ap.dirname=dir;
-	strcpy(ins,namearg);
+	if (strlcpy(ins, namearg, sizeof(ins)) >= sizeof(ins)) {
+		fprintf(stderr, "Name too long\n");
+		exit(1);
+	}
 	*namearg='\0'; /* weak attempt to hide .instance in ps output */
 	ap.name=ins;
 	if (keycheck) {
@@@@ -207,8 +229,6 @@@@ main(argc,argv)
 		if ((n>0) && (pw[n-1] == '\n'))
 			pw[n-1] = '\0';
 	}
- 	sprintf(cname,"%s/..c",dir);
-	sprintf(sname,"%s/..s",dir);
 	if ((fp=fopen(cname,"r")) == NULL) {
 		ciph=CFS_STD_DES;
 	} else {
@@@@ -237,7 +257,7 @@@@ main(argc,argv)
 	ap.expire = timeout;
 	ap.key.cipher=ciph;
 	if (smsize != LARGESMSIZE)
-		sprintf(pw,"%s%d",pw,smsize);
+		(void)snprintf(pw, 256, "%s%d", pw, smsize);
 
 	if (cfmt) {
 		if (new_pwcrunch(pw,&ap.key)!=0) {
@


1.3
log
@Regen patches and distinfo.
@
text
@@


1.2
log
@several patches from Debian
- cmkdir now uses /dev/srandom (actually changed to arandom by me)
- support for filenames w/ 8bit chars
- sprintf() replaced with snprintf()
- some bugfixes

from Andreas Voegele <voegelas at gmx.net>
@
text
@d2 2
a3 2
+++ cattach.c	Sun Mar 13 14:05:19 2005
@@@@ -100,6 +100,7 @@@@
d11 1
a11 1
@@@@ -164,17 +165,35 @@@@
d52 1
a52 1
@@@@ -188,7 +207,10 @@@@
d64 1
a64 1
@@@@ -207,8 +229,6 @@@@
d73 1
a73 1
@@@@ -237,7 +257,7 @@@@
@


1.1
log
@update to cfs 1.4.1

CFS was actually broken since at least 3.2 or so, but should work now
again on 32-bit archs. 64-bit archs are still broken and won't be
fixed anytime soon.

I also set PERMIT_*=Yes, as the "no fee" part of the license is clearly
due to bad english.

xsa@@ helped testing
@
text
@d1 17
a17 7
$OpenBSD$
--- cattach.c.orig	2004-06-09 15:12:55.000000000 +0200
+++ cattach.c	2004-06-09 15:23:40.000000000 +0200
@@@@ -167,8 +167,8 @@@@ main(argc,argv)
 		sprintf(dir,"%s/%s",buf,dirarg);
 	} else
 		strcpy(dir,dirarg);
d20 17
a36 2
+	sprintf(lname,"%s/..data",dir);
+	sprintf(kname,"%s/..k",dir);
d40 42
@

