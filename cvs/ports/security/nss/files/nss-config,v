head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.20
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.18
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.16
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.12
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.14
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.10
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.24
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.22
	OPENBSD_5_0:1.1.1.1.0.20
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.18
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.14
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.12
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.10
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.8
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.6
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.4
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.2
	OPENBSD_4_1_BASE:1.1.1.1
	kurt_nss:1.1.1.1
	kurt:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.11.12.20.43.09;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.04.17.19.54;	author kurt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.12.04.17.19.54;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to nss 3.14.

- use ${SUBST_CMD} instead of old-style perl -pi -e commands
- update nss-config from debian's nss-config.in, since apparently it
comes from there.. needed to fix detection by mozillas, otherwise the
current script returns 3.14 for --version while configure scripts
expect 3.14.0... grab version via awk on nss.h at runtime.

Tested on amd64/i386/powerpc and in an amd64 bulk build. Needed by
firefox 18.

ok sthen@@ ajacoutot@@ jasper@@
@
text
@#!/bin/sh
# taken from debian/nss-config.in
# adapted for OpenBSD's prefix/version substs
prefix=${TRUEPREFIX}

# inspired from debian Makefile
major_version=$(awk '/NSS_VMAJOR/ {print $3}' ${TRUEPREFIX}/include/nss/nss.h)
minor_version=$(awk '/NSS_VMINOR/ {print $3}' ${TRUEPREFIX}/include/nss/nss.h)
patch_version=$(awk '/NSS_VPATCH/ {print $3}' ${TRUEPREFIX}/include/nss/nss.h)

usage()
{
	cat <<EOF
Usage: nss-config [OPTIONS] [LIBRARIES]
Options:
	[--prefix[=DIR]]
	[--exec-prefix[=DIR]]
	[--includedir[=DIR]]
	[--libdir[=DIR]]
	[--version]
	[--libs]
	[--cflags]
Dynamic Libraries:
	nss
	nssutil
	ssl
	smime
EOF
	exit $1
}

if test $# -eq 0; then
	usage 1 1>&2
fi

lib_ssl=yes
lib_smime=yes
lib_nss=yes
lib_nssutil=yes

while test $# -gt 0; do
  case "$1" in
  -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
  *) optarg= ;;
  esac

  case $1 in
    --prefix=*)
      prefix=$optarg
      ;;
    --prefix)
      echo_prefix=yes
      ;;
    --exec-prefix=*)
      exec_prefix=$optarg
      ;;
    --exec-prefix)
      echo_exec_prefix=yes
      ;;
    --includedir=*)
      includedir=$optarg
      ;;
    --includedir)
      echo_includedir=yes
      ;;
    --libdir=*)
      libdir=$optarg
      ;;
    --libdir)
      echo_libdir=yes
      ;;
    --version)
      echo ${major_version}.${minor_version}.${patch_version}
      ;;
    --cflags)
      echo_cflags=yes
      ;;
    --libs)
      echo_libs=yes
      ;;
    ssl)
      lib_ssl=yes
      ;;
    smime)
      lib_smime=yes
      ;;
    nss)
      lib_nss=yes
      ;;
    nssutil)
      lib_nssutil=yes
      ;;
    *)
      usage 1 1>&2
      ;;
  esac
  shift
done

# Set variables that may be dependent upon other variables
if test -z "$exec_prefix"; then
    exec_prefix=${prefix}
fi
if test -z "$includedir"; then
    includedir=${prefix}/include/nss
fi
if test -z "$libdir"; then
    libdir=${exec_prefix}/lib
fi

if test "$echo_prefix" = "yes"; then
    echo $prefix
fi

if test "$echo_exec_prefix" = "yes"; then
    echo $exec_prefix
fi

if test "$echo_includedir" = "yes"; then
    echo $includedir
fi

if test "$echo_libdir" = "yes"; then
    echo $libdir
fi

if test "$echo_cflags" = "yes"; then
    echo -I$includedir
fi

if test "$echo_libs" = "yes"; then
      libdirs="-L$libdir"
      if test -n "$lib_ssl"; then
	libdirs="$libdirs -lssl${major_version}"
      fi
      if test -n "$lib_smime"; then
	libdirs="$libdirs -lsmime${major_version}"
      fi
      if test -n "$lib_nss"; then
	libdirs="$libdirs -lnss${major_version}"
      fi
      if test -n "$lib_nssutil"; then
	libdirs="$libdirs -lnssutil${major_version}"
      fi
      echo $libdirs
fi      

@


1.1
log
@Initial revision
@
text
@d2 8
a9 5

prefix=!!PREFIX!!
version=!!VERSION!!

major_version=`echo $version | cut -d'.' -f1`
d23 1
a23 1
Libraries:
d25 2
a27 2
	softokn
	ssl
d36 2
d39 1
a39 3
lib_smime=yes
lib_softokn=yes
lib_ssl=yes
d73 1
a73 1
      echo ${version}
d81 2
a82 2
    nss)
      lib_nss=yes
d85 1
a85 1
      lib_ssl=yes
d87 2
a88 2
    softokn)
      lib_softokn=yes
d90 2
a91 2
    ssl)
      lib_smime=yes
d132 3
a134 3
      libdirs=-L$libdir
      if test -n "$lib_nss"; then
	libdirs="$libdirs -lnss${major_version}"
d139 2
a140 2
      if test -n "$lib_softokn"; then
        libdirs="$libdirs -lsoftokn${major_version}"
d142 2
a143 2
      if test -n "$lib_ssl"; then
	libdirs="$libdirs -lssl${major_version}"
d145 1
a145 7
      os_ldflags=""
      for i in $os_ldflags ; do
	if echo $i | grep \^-L >/dev/null; then
	  libdirs="$libdirs $i"
        fi
      done
      echo $libdirs -pthread 
@


1.1.1.1
log
@import nss 3.11.4

Network Security Services (NSS) is a set of libraries designed to
support cross-platform development of security-enabled client and
server applications.

Applications built with NSS can support SSL v2 and v3, TLS, PKCS #5,
PKCS #7, PKCS #11, PKCS #12, S/MIME, X.509 v3 certificates, and other
security standards.

from MAINTAINER Martynas Venckus <martynas at altroot.org>. okay jolan@@
@
text
@@
