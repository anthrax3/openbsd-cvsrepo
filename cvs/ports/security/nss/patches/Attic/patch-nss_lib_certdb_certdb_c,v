head	1.1;
access;
symbols
	OPENBSD_5_5:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2014.09.30.13.59.23;	author jasper;	state dead;
branches
	1.1.2.1;
next	;
commitid	Hxt7gPx2BK9v2Ftf;

1.1.2.1
date	2014.09.30.13.59.23;	author jasper;	state Exp;
branches;
next	;
commitid	Hxt7gPx2BK9v2Ftf;


desc
@@


1.1
log
@file patch-nss_lib_certdb_certdb_c was initially added on branch OPENBSD_5_5.
@
text
@@


1.1.2.1
log
@Security fixes for CVE-2014-1492 and CVE-2014-1568

as discussed with sthen@@ and landry@@
@
text
@a0 40
$OpenBSD$

Security fix for CVE-2014-1492
http://sources.debian.net/src/nss/2:3.14.5-1%2Bdeb7u2/debian/patches/CVE-2014-1492.patch/

--- nss/lib/certdb/certdb.c.orig	Tue Sep 30 15:50:12 2014
+++ nss/lib/certdb/certdb.c	Tue Sep 30 15:52:16 2014
@@@@ -1381,7 +1381,7 @@@@ cert_TestHostName(char * cn, const char * hn)
 	    return rv;
 	}
     } else {
-	/* New approach conforms to RFC 2818. */
+	/* New approach conforms to RFC 6125. */
 	char *wildcard    = PORT_Strchr(cn, '*');
 	char *firstcndot  = PORT_Strchr(cn, '.');
 	char *secondcndot = firstcndot ? PORT_Strchr(firstcndot+1, '.') : NULL;
@@@@ -1390,14 +1390,17 @@@@ cert_TestHostName(char * cn, const char * hn)
 	/* For a cn pattern to be considered valid, the wildcard character...
 	 * - may occur only in a DNS name with at least 3 components, and
 	 * - may occur only as last character in the first component, and
-	 * - may be preceded by additional characters
+	 * - may be preceded by additional characters, and
+	 * - must not be preceded by an IDNA ACE prefix (xn--)
 	 */
-	if (wildcard && secondcndot && secondcndot[1] && firsthndot 
-	    && firstcndot  - wildcard  == 1
-	    && secondcndot - firstcndot > 1
-	    && PORT_Strrchr(cn, '*') == wildcard
+	if (wildcard && secondcndot && secondcndot[1] && firsthndot
+	    && firstcndot  - wildcard  == 1 /* wildcard is last char in first component */
+	    && secondcndot - firstcndot > 1 /* second component is non-empty */
+	    && PORT_Strrchr(cn, '*') == wildcard /* only one wildcard in cn */
 	    && !PORT_Strncasecmp(cn, hn, wildcard - cn)
-	    && !PORT_Strcasecmp(firstcndot, firsthndot)) {
+	    && !PORT_Strcasecmp(firstcndot, firsthndot)
+	    	/* If hn starts with xn--, then cn must start with wildcard */
+	    && (PORT_Strncasecmp(hn, "xn--", 4) || wildcard == cn)) {
 	    /* valid wildcard pattern match */
 	    return SECSuccess;
 	}
@

