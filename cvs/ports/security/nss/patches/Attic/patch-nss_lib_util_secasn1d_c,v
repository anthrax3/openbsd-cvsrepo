head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2016.03.04.16.29.24;	author landry;	state dead;
branches;
next	1.2;
commitid	sTPAUP7WKQu0cL9Y;

1.2
date	2016.02.22.20.10.37;	author landry;	state Exp;
branches
	1.2.4.1;
next	1.1;
commitid	B7bUN1XvnYHFKmx3;

1.1
date	2016.02.22.20.01.05;	author landry;	state Exp;
branches;
next	;
commitid	JP8BCg8iWwnnAE2s;

1.2.4.1
date	2016.03.01.08.20.42;	author jasper;	state Exp;
branches;
next	;
commitid	ihW2Mt9NC9qXQEKF;


desc
@@


1.3
log
@Update to nss 3.23.

See
https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.23_release_notes
for details.

Remove c++-comments patch, now that we remove -ansi from the build flags it
is allowed in C99. (see https://bugzilla.mozilla.org/show_bug.cgi?id=1250891)
@
text
@$OpenBSD: patch-nss_lib_util_secasn1d_c,v 1.2 2016/02/22 20:10:37 landry Exp $

c++-style comments.

--- nss/lib/util/secasn1d.c.orig	Mon Feb 22 20:58:24 2016
+++ nss/lib/util/secasn1d.c	Mon Feb 22 21:09:12 2016
@@@@ -1608,25 +1608,25 @@@@ sec_asn1d_parse_leaf (sec_asn1d_state *state,
 	}
         offset = item->len;
         if (state->underlying_kind == SEC_ASN1_BIT_STRING) {
-            // The previous bit string must have no unused bits.
+            /* The previous bit string must have no unused bits. */
             if (item->len & 0x7) {
                 PORT_SetError (SEC_ERROR_BAD_DER);
                 state->top->status = decodeError;
                 return 0;
             }
-            // If this is a bit string, the length is bits, not bytes.
+            /* If this is a bit string, the length is bits, not bytes. */
             offset = item->len >> 3;
         }
         if (state->underlying_kind == SEC_ASN1_BIT_STRING) {
             unsigned long len_in_bits;
-            // Protect against overflow during the bytes-to-bits conversion.
+            /* Protect against overflow during the bytes-to-bits conversion. */
             if (len >= (ULONG_MAX >> 3) + 1) {
                 PORT_SetError (SEC_ERROR_BAD_DER);
                 state->top->status = decodeError;
                 return 0;
             }
             len_in_bits = (len << 3) - state->bit_string_unused_bits;
-            // Protect against overflow when computing the total length in bits.
+            /* Protect against overflow when computing the total length in bits. */
             if (UINT_MAX - item->len < len_in_bits) {
                 PORT_SetError (SEC_ERROR_BAD_DER);
                 state->top->status = decodeError;
@


1.2
log
@Trololololol.
@
text
@d1 1
a1 1
$OpenBSD: patch-nss_lib_util_secasn1d_c,v 1.1 2016/02/22 20:01:05 landry Exp $
@


1.2.4.1
log
@missed in previous
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 4
secasn1d.c: In function 'sec_asn1d_parse_leaf':
secasn1d.c:1611: error: expected expression before '/' token
secasn1d.c:1622: error: expected expression before '/' token
secasn1d.c:1629: error: expected expression before '/' token
d5 2
a6 2
--- nss/lib/util/secasn1d.c.orig	Tue Mar  1 09:13:16 2016
+++ nss/lib/util/secasn1d.c	Tue Mar  1 09:13:47 2016
d12 1
a12 1
+	    /* The previous bit string must have no unused bits. */
@


1.1
log
@C++-style comments are bad. Srsly.
@
text
@d1 1
a1 1
$OpenBSD$
d6 2
a7 2
+++ nss/lib/util/secasn1d.c	Mon Feb 22 20:58:44 2016
@@@@ -1608,7 +1608,7 @@@@ sec_asn1d_parse_leaf (sec_asn1d_state *state,
d16 5
a20 1
@@@@ -1619,14 +1619,14 @@@@ sec_asn1d_parse_leaf (sec_asn1d_state *state,
@

