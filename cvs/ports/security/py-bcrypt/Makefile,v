head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.2
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	sthen_20130326:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2017.03.17.08.35.27;	author sthen;	state Exp;
branches;
next	1.12;
commitid	LUobF4hyefQLF8Cm;

1.12
date	2017.02.07.14.45.07;	author sthen;	state Exp;
branches;
next	1.11;
commitid	UOWXwkkVGP5ESdw3;

1.11
date	2017.01.03.19.26.14;	author landry;	state Exp;
branches;
next	1.10;
commitid	7jSGKkLWuce9oz5i;

1.10
date	2016.10.29.18.25.56;	author danj;	state Exp;
branches;
next	1.9;
commitid	t3QmKlDf1fooNkiA;

1.9
date	2016.10.11.13.57.08;	author sthen;	state Exp;
branches;
next	1.8;
commitid	Z3SYvW5Zt9I7tS95;

1.8
date	2016.07.01.15.28.44;	author sthen;	state Exp;
branches;
next	1.7;
commitid	6dIx1S61cn1o8I3d;

1.7
date	2016.01.15.19.58.25;	author sthen;	state Exp;
branches;
next	1.6;
commitid	0VPl2Dexpt3WyMsa;

1.6
date	2016.01.15.12.34.14;	author sthen;	state Exp;
branches;
next	1.5;
commitid	G0PHIskFXJHoS7Bf;

1.5
date	2015.09.29.10.52.34;	author sthen;	state Exp;
branches;
next	1.4;
commitid	kK00TsVxnVFlTJwI;

1.4
date	2014.09.29.07.02.02;	author jasper;	state Exp;
branches;
next	1.3;
commitid	HSD3ATzI3n4xDSVx;

1.3
date	2014.06.03.11.35.12;	author rpointel;	state Exp;
branches;
next	1.2;
commitid	apO8zBLYdhkoXkZO;

1.2
date	2014.03.19.11.15.56;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2013.03.26.21.37.26;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.26.21.37.26;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.13
log
@update to py-bcrypt-3.1.3
@
text
@# $OpenBSD: Makefile,v 1.12 2017/02/07 14:45:07 sthen Exp $

COMMENT=	bcrypt blowfish password hashing for Python

MODPY_EGG_VERSION= 3.1.3
DISTNAME=	bcrypt-${MODPY_EGG_VERSION}
PKGNAME=	py-${DISTNAME}

MAINTAINER=	Stuart Henderson <sthen@@openbsd.org>

CATEGORIES=	security

# Apache License 2.0
PERMIT_PACKAGE_CDROM=	Yes

WANTLIB += pthread ${MODPY_WANTLIB}

MODULES=	lang/python
MODPY_PI=	Yes
MODPY_SETUPTOOLS= Yes

FLAVORS=        python3
FLAVOR?=

RUN_DEPENDS=	devel/py-cffi${MODPY_FLAVOR} \
		devel/py-six${MODPY_FLAVOR}
BUILD_DEPENDS=	${RUN_DEPENDS}

# there's some test scaffolding in setup.py (using py-test), but I don't
# see any actual tests anywhere. trying to use it gives "collected 0 items".
# security/py-passlib has a decent test suite that includes tests of this.
NO_TEST=	Yes

.include <bsd.port.mk>
@


1.12
log
@update to py-bcrypt-3.1.2
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2017/01/03 19:26:14 landry Exp $
d5 1
a5 1
MODPY_EGG_VERSION= 3.1.2
@


1.11
log
@bump ports depending on python3 in security
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2016/10/29 18:25:56 danj Exp $
d5 1
a5 1
MODPY_EGG_VERSION= 3.1.1
a7 1
REVISION=	1
@


1.10
log
@Unbreak after py-setuptools update. This makes use of MODPY_ABI_TAG

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2016/10/11 13:57:08 sthen Exp $
d8 1
a8 1
REVISION=	0
@


1.9
log
@update to py-bcrypt-3.1.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2016/07/01 15:28:44 sthen Exp $
d8 1
@


1.8
log
@update to py-bcrypt-3.1.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2016/01/15 19:58:25 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION= 3.1.0
@


1.7
log
@BUILD_DEPENDS=${RUN_DEPENDS}, breakage found by kili
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2016/01/15 12:34:14 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION= 2.0.0
@


1.6
log
@update to py-bcrypt-2.0.0 (maybe a different codebase or fork; anyway
it supports $2b$ which the in-tree version doesn't) and take maintainer
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2015/09/29 10:52:34 sthen Exp $
d27 1
@


1.5
log
@bump REVISION for setuptools dep change.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2014/09/29 07:02:02 jasper Exp $
d5 3
a7 2
MODPY_EGG_VERSION= 0.4
DISTNAME=	py-bcrypt-${MODPY_EGG_VERSION}
d9 1
a9 1
REVISION =	2
d13 1
a13 3
HOMEPAGE=	https://code.google.com/p/py-bcrypt/

# ISC/BSD
a17 2
MASTER_SITES=	https://py-bcrypt.googlecode.com/files/

d19 1
d25 2
a26 1
TEST_DEPENDS=	${BUILD_PKGPATH}
d28 4
a31 2
do-test:
	cd ${WRKSRC}/test && ${MODPY_BIN} ./test.py
@


1.4
log
@bump after switch from py3-distribute to py3-setuptools

ok rpointel@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/06/03 11:35:12 rpointel Exp $
d8 1
a8 1
REVISION =	1
@


1.3
log
@changed python3 default version so bump revision.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2014/03/19 11:15:56 sthen Exp $
d8 1
a8 1
REVISION = 0
@


1.2
log
@SECURITY update to py-bcrypt 0.4, from Francisco de Borja Lopez Rio
- while there, fix WANTLIB and enable python 3 support; by me

Fix concurrency bug reported by Alan Fairless of spideroak.com:
Multiple threads may hash into the same memory area simultaneously.
This may manifest as occasional random authentication failures (as
user-a's password hash is compared to user-b's), but could potentially
be used to bypass password checking by an attacker (user-a attempts
login on user-b's account, while simultaneously flooding auth requests
against user-a's account to overwrite the hash).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/03/26 21:37:26 sthen Exp $
d7 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d5 1
a5 1
MODPY_EGG_VERSION= 0.3
d15 2
d21 4
@


1.1.1.1
log
@import ports/security/py-bcrypt, ok benoit@@

py-bcrypt is a Python wrapper of OpenBSD's Blowfish password hashing code,
as described in "A Future-Adaptable Password Scheme" by Niels Provos and
David Mazi√®res.

This system hashes passwords using a version of Bruce Schneier's
Blowfish block cipher with modifications designed to raise the cost of
off-line password cracking and frustrate fast hardware implementation.
The computation cost of the algorithm is parametised, so it can be
increased as computers get faster. The intent is to make a compromise
of a password database less likely to result in an attacker gaining
knowledge of the plaintext passwords (e.g. using John the Ripper).
@
text
@@
