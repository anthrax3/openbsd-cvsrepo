head	1.5;
access;
symbols
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	sthen_20130326:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2016.10.29.18.25.56;	author danj;	state Exp;
branches;
next	1.4;
commitid	t3QmKlDf1fooNkiA;

1.4
date	2016.07.01.15.28.44;	author sthen;	state Exp;
branches;
next	1.3;
commitid	6dIx1S61cn1o8I3d;

1.3
date	2016.01.15.12.34.14;	author sthen;	state Exp;
branches;
next	1.2;
commitid	G0PHIskFXJHoS7Bf;

1.2
date	2014.03.19.11.15.56;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2013.03.26.21.37.26;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.26.21.37.26;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Unbreak after py-setuptools update. This makes use of MODPY_ABI_TAG

ok sthen@@
@
text
@@@comment $OpenBSD: PLIST,v 1.4 2016/07/01 15:28:44 sthen Exp $
lib/python${MODPY_VERSION}/site-packages/bcrypt/
lib/python${MODPY_VERSION}/site-packages/bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/
lib/python${MODPY_VERSION}/site-packages/bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/PKG-INFO
lib/python${MODPY_VERSION}/site-packages/bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/SOURCES.txt
lib/python${MODPY_VERSION}/site-packages/bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/dependency_links.txt
lib/python${MODPY_VERSION}/site-packages/bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/not-zip-safe
lib/python${MODPY_VERSION}/site-packages/bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/requires.txt
lib/python${MODPY_VERSION}/site-packages/bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/top_level.txt
lib/python${MODPY_VERSION}/site-packages/bcrypt/__about__.py
lib/python${MODPY_VERSION}/site-packages/bcrypt/__init__.py
${MODPY_COMMENT}lib/python${MODPY_VERSION}/site-packages/bcrypt/${MODPY_PYCACHE}/
lib/python${MODPY_VERSION}/site-packages/bcrypt/${MODPY_PYCACHE}__about__.${MODPY_PYC_MAGIC_TAG}pyc
lib/python${MODPY_VERSION}/site-packages/bcrypt/${MODPY_PYCACHE}__init__.${MODPY_PYC_MAGIC_TAG}pyc
lib/python${MODPY_VERSION}/site-packages/bcrypt/_bcrypt${MODPY_ABI3SO}.so
@


1.4
log
@update to py-bcrypt-3.1.0
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.3 2016/01/15 12:34:14 sthen Exp $
d15 1
a15 1
lib/python${MODPY_VERSION}/site-packages/bcrypt/_bcrypt.so
@


1.3
log
@update to py-bcrypt-2.0.0 (maybe a different codebase or fork; anyway
it supports $2b$ which the in-tree version doesn't) and take maintainer
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.2 2014/03/19 11:15:56 sthen Exp $
a7 1
lib/python${MODPY_VERSION}/site-packages/bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/pbr.json
@


1.2
log
@SECURITY update to py-bcrypt 0.4, from Francisco de Borja Lopez Rio
- while there, fix WANTLIB and enable python 3 support; by me

Fix concurrency bug reported by Alan Fairless of spideroak.com:
Multiple threads may hash into the same memory area simultaneously.
This may manifest as occasional random authentication failures (as
user-a's password hash is compared to user-b's), but could potentially
be used to bypass password checking by an attacker (user-a attempts
login on user-b's account, while simultaneously flooding auth requests
against user-a's account to overwrite the hash).
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.1.1.1 2013/03/26 21:37:26 sthen Exp $
d3 9
d14 1
a16 5
lib/python${MODPY_VERSION}/site-packages/py_bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/
lib/python${MODPY_VERSION}/site-packages/py_bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/PKG-INFO
lib/python${MODPY_VERSION}/site-packages/py_bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/SOURCES.txt
lib/python${MODPY_VERSION}/site-packages/py_bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/dependency_links.txt
lib/python${MODPY_VERSION}/site-packages/py_bcrypt-${MODPY_EGG_VERSION}-py${MODPY_VERSION}.egg-info/top_level.txt
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@comment $OpenBSD$
d4 2
a5 1
lib/python${MODPY_VERSION}/site-packages/bcrypt/__init__.pyc
@


1.1.1.1
log
@import ports/security/py-bcrypt, ok benoit@@

py-bcrypt is a Python wrapper of OpenBSD's Blowfish password hashing code,
as described in "A Future-Adaptable Password Scheme" by Niels Provos and
David Mazi√®res.

This system hashes passwords using a version of Bruce Schneier's
Blowfish block cipher with modifications designed to raise the cost of
off-line password cracking and frustrate fast hardware implementation.
The computation cost of the algorithm is parametised, so it can be
increased as computers get faster. The intent is to make a compromise
of a password database less likely to result in an attacker gaining
knowledge of the plaintext passwords (e.g. using John the Ripper).
@
text
@@
