head	1.3;
access;
symbols
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.1.1.1.0.18
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.16
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.14
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.12
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.10
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.8
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.6
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	pgplib-1_1:1.1.1.1
	angelos:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2005.08.09.22.47.37;	author naddy;	state dead;
branches;
next	1.2;

1.2
date	2003.02.26.03.27.51;	author david;	state Exp;
branches;
next	1.1;

1.1
date	98.09.29.00.01.14;	author angelos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.29.00.01.14;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove ancient abandonware, broken for years, nothing uses it
@
text
@  PGPlib is a library that lets you generate (and manipulate) PGP
  packets without having to run PGP.  In particular there is code to
  generate and understand the following types of PGP packets:

  - Data can be signed with a private key
  - Data can be encrypted with a public key
  - Data encrypted with your public key can be decrypted
  - You can verify signatures on public keys and on buffers (files)
  - Convential encrypted (IDEA with Zimmermann's context sensitive
    feedback).  The library can both read (decrypt) and write
    (encrypt) convential packets (in PGP format)
  - Armor.  You can (de)armor a buffer or a file into a buffer or a
    file
  - UserID packets are read and written in a variety of formats
  - Literal with filename, mode, etc.  You can create literate
    packages from files, or from buffers, and create files from
    literate packets
  - Keys can be obtained from a database (which is provided) or by
    parsing keyrings.  Keys can be kept in buffers or on files
  - You can maintain a PGP public-key database (I use this library to
    maintain a database with ~40.000 keys).  There is code to use DBM
    as supplied from Berkeley.  A copy of DBM is included for your
    convenience

  In general, PGPlib operates on buffers in order for you to use it in
  your applications.

  I have made a small program that will (de)armor anything, a parser
  to parse PGP files (including decryption and so on), a shell to
  manipulate a keydatabase, a keyserver to run on top of such a
  database, a program to verify signatures on keys and/or files, a
  program to split keyrings in smaller parts and a program that will
  sign files for you.  You will find all these (and many more) in the
  PGPlib-1.1/applications/ directory.  None of these uses PGP as they 
  are linked with PGPlib, which provides all the functionality that is
  needed.

  I believe that all parts of the library is tested against PGP by the
  script PGPlib-1.1/applications/test.sh.  You need to edit it in 
  order to make it run (to ensure that you read my warnings, sorry 
  about this).


What is not there for you
=========================

  - Sufficient documentation.

  I have written this library because I need it.  In order to make
  life less hard for my students, I will have to provide some
  documentation.  Possibly even on-line.  However, quite a few manual
  pages are included in the PGPlib-1.1/man/ directory.
@


1.2
log
@spelling typos
ok pvalchev@@ brad@@
@
text
@@


1.1
log
@Initial revision
@
text
@d23 1
a23 1
    convinience
@


1.1.1.1
log
@PGPlib port, no patches were necessary.
@
text
@@
