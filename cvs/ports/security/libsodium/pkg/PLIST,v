head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.2
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	sthen_20131023:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2017.03.17.08.39.38;	author sthen;	state Exp;
branches;
next	1.7;
commitid	IBAAOKeER4FmbuPm;

1.7
date	2016.04.03.10.56.27;	author sthen;	state Exp;
branches;
next	1.6;
commitid	QsHGqXlAdxYgtvNK;

1.6
date	2015.10.18.13.58.32;	author sthen;	state Exp;
branches;
next	1.5;
commitid	DsK24RbVhBn1Rqf0;

1.5
date	2014.08.24.22.25.03;	author sthen;	state Exp;
branches;
next	1.4;
commitid	Fjm6QNv6dBDif1sf;

1.4
date	2014.07.16.13.45.01;	author sthen;	state Exp;
branches;
next	1.3;
commitid	KHgvZeprV29xujp1;

1.3
date	2014.07.02.08.49.42;	author sthen;	state Exp;
branches;
next	1.2;
commitid	gTW55x3VGBgVWV0L;

1.2
date	2014.05.14.10.06.08;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.23.12.07.52;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.10.23.12.07.52;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.8
log
@update to libsodium-1.0.12
@
text
@@@comment $OpenBSD: PLIST,v 1.7 2016/04/03 10:56:27 sthen Exp $
include/sodium/
include/sodium.h
include/sodium/core.h
include/sodium/crypto_aead_aes256gcm.h
include/sodium/crypto_aead_chacha20poly1305.h
include/sodium/crypto_aead_xchacha20poly1305.h
include/sodium/crypto_auth.h
include/sodium/crypto_auth_hmacsha256.h
include/sodium/crypto_auth_hmacsha512.h
include/sodium/crypto_auth_hmacsha512256.h
include/sodium/crypto_box.h
include/sodium/crypto_box_curve25519xchacha20poly1305.h
include/sodium/crypto_box_curve25519xsalsa20poly1305.h
include/sodium/crypto_core_hchacha20.h
include/sodium/crypto_core_hsalsa20.h
include/sodium/crypto_core_salsa20.h
include/sodium/crypto_core_salsa2012.h
include/sodium/crypto_core_salsa208.h
include/sodium/crypto_generichash.h
include/sodium/crypto_generichash_blake2b.h
include/sodium/crypto_hash.h
include/sodium/crypto_hash_sha256.h
include/sodium/crypto_hash_sha512.h
include/sodium/crypto_kdf.h
include/sodium/crypto_kdf_blake2b.h
include/sodium/crypto_kx.h
include/sodium/crypto_onetimeauth.h
include/sodium/crypto_onetimeauth_poly1305.h
include/sodium/crypto_pwhash.h
include/sodium/crypto_pwhash_argon2i.h
include/sodium/crypto_pwhash_scryptsalsa208sha256.h
include/sodium/crypto_scalarmult.h
include/sodium/crypto_scalarmult_curve25519.h
include/sodium/crypto_secretbox.h
include/sodium/crypto_secretbox_xchacha20poly1305.h
include/sodium/crypto_secretbox_xsalsa20poly1305.h
include/sodium/crypto_shorthash.h
include/sodium/crypto_shorthash_siphash24.h
include/sodium/crypto_sign.h
include/sodium/crypto_sign_ed25519.h
include/sodium/crypto_sign_edwards25519sha512batch.h
include/sodium/crypto_stream.h
include/sodium/crypto_stream_aes128ctr.h
include/sodium/crypto_stream_chacha20.h
include/sodium/crypto_stream_salsa20.h
include/sodium/crypto_stream_salsa2012.h
include/sodium/crypto_stream_salsa208.h
include/sodium/crypto_stream_xchacha20.h
include/sodium/crypto_stream_xsalsa20.h
include/sodium/crypto_verify_16.h
include/sodium/crypto_verify_32.h
include/sodium/crypto_verify_64.h
include/sodium/export.h
include/sodium/randombytes.h
include/sodium/randombytes_salsa20_random.h
include/sodium/randombytes_sysrandom.h
include/sodium/runtime.h
include/sodium/utils.h
include/sodium/version.h
lib/libsodium.a
lib/libsodium.la
@@lib lib/libsodium.so.${LIBsodium_VERSION}
lib/pkgconfig/libsodium.pc
share/doc/libsodium/
share/doc/libsodium/README.markdown
@


1.7
log
@update to libsodium-1.0.9, from Pablo Méndez Hernández, slight change
to SHARED_LIBS by me.
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.6 2015/10/18 13:58:32 sthen Exp $
d7 1
d13 1
d25 3
a27 2
include/sodium/crypto_int32.h
include/sodium/crypto_int64.h
d36 1
d49 1
a50 4
include/sodium/crypto_uint16.h
include/sodium/crypto_uint32.h
include/sodium/crypto_uint64.h
include/sodium/crypto_uint8.h
@


1.6
log
@update to libsodium-1.0.4
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.5 2014/08/24 22:25:03 sthen Exp $
d13 1
d27 2
@


1.5
log
@update to libsodium-0.70, for new features see
https://github.com/jedisct1/libsodium/releases/tag/0.7.0
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.4 2014/07/16 13:45:01 sthen Exp $
d5 1
@


1.4
log
@update to libsodium-0.6.1, adding suport for detached ed25519 signatures
and fixing a bug introduced in 0.5.0 (not updated in ports until post-5.5):

   "when crypto_sign_open() was given a signed message too short to even
   contain a signature, it was putting an unlimited amount of zeros into
   the target buffer instead of immediately returning -1."
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.3 2014/07/02 08:49:42 sthen Exp $
a36 1
include/sodium/crypto_stream_aes256estream.h
@


1.3
log
@update to libsodium-0.6.0
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.2 2014/05/14 10:06:08 sthen Exp $
a59 1
lib/pkgconfig/
@


1.2
log
@update to libsodium 0.50, openbsd-relevant entries from changelog are:

 - sodium_mlock()/sodium_munlock() have been introduced to lock pages
in memory before storing sensitive data, and to zero them before
unlocking them.
 - High-level wrappers for crypto_box and crypto_secretbox
(crypto_box_easy and crypto_secretbox_easy) can be used to avoid
dealing with the specific memory layout regular functions depend on.
 - crypto_pwhash_scryptxsalsa208sha256* functions have been added
to derive a key from a password, and for password storage.
 - Salsa20 and ed25519 implementations now support overlapping
inputs/keys/outputs (changes imported from supercop-20140505).
 - The poly1305-53 implementation has been replaced with Floodyberry's
poly1305-donna32 and poly1305-donna64 implementations.
 - sodium_hex2bin() has been added to complement sodium_bin2hex().
 - On OpenBSD and Bitrig, arc4random() is used instead of reading
/dev/urandom.
 - crypto_auth_hmac_sha512() has been implemented.
 - sha256 and sha512 now have a streaming interface.
 - hmacsha256, hmacsha512 and hmacsha512256 now support keys of
arbitrary length, and have a streaming interface.
 - crypto_verify_64() has been implemented.
 - CPU features are now detected at runtime.
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.1.1.1 2013/10/23 12:07:52 sthen Exp $
d5 1
d25 1
a25 2
include/sodium/crypto_onetimeauth_poly1305_donna.h
include/sodium/crypto_pwhash_scryptxsalsa208sha256.h
d38 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@comment $OpenBSD$
d7 1
a19 2
include/sodium/crypto_hashblocks_sha256.h
include/sodium/crypto_hashblocks_sha512.h
a23 1
include/sodium/crypto_onetimeauth_poly1305_53.h
d25 1
d48 1
d53 1
@


1.1.1.1
log
@import security/libsodium, ok benoit@@

NaCl (pronounced "salt") is a new easy-to-use high-speed software library
for network communication, encryption, decryption, signatures, etc.
NaCl's goal is to provide all of the core operations needed to build
higher-level cryptographic tools.

Sodium is a fork of NaCl with a compatible API. Unlike NaCl, Sodium
performs checks for hardware features at runtime instead of compile time,
making it suitable for packaging.
@
text
@@
