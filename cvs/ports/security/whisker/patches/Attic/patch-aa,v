head	1.3;
access;
symbols
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	dugsong_1999-Nov-01:1.1.1.1
	dugsong:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2000.08.07.04.38.09;	author obecian;	state dead;
branches;
next	1.2;

1.2
date	2000.01.06.18.56.58;	author dugsong;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	99.11.01.16.10.58;	author dugsong;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.01.16.10.58;	author dugsong;	state Exp;
branches;
next	;

1.2.2.1
date	2000.09.15.05.15.41;	author marc;	state dead;
branches;
next	;


desc
@@


1.3
log
@updated to whisker 1.4.0
@
text
@--- whisker.pl.orig	Thu Dec 23 20:25:05 1999
+++ whisker.pl	Thu Jan  6 13:42:58 2000
@@@@ -6,10 +6,8 @@@@
 
 $whisker_version="1.3.0a";
 
-# attempt to find where the script is; deal with both Unix and Win (/ vs \)
-$WHEREIS_WHISKER=$0; # this should be the path to the script
-$WHEREIS_WHISKER=~s/[^\/\\]+$//; # hack off the name of the script
-# we should be left over with the path
+# where the db files are
+$WHEREIS_WHISKER="y0y0y0/share/whisker/";
 
 use Socket; use Getopt::Std; # hopefully these are standard :)
 getopts("fs:n:vdp:h:l:H:Vu:iI:A:NS:EaF:B:PM:", \%args);
@@@@ -50,7 +48,7 @@@@
 	-h+ *scan single host (IP or domain)
 	-H+ *host list to scan (file)
 	-F+ *(for unix multi-threaded front end use only)
-	-s+  specifies the script database file (defaults to scan.db)
+	-s   specifies the script database file (defaults to scan.db)
 	-V   use virtual hosts when possible
 	-N   query Netcraft for server OS guess
 	-S+  force server version (e.g. -S "Apache/1.3.6")
@@@@ -93,7 +91,7 @@@@
 
 # new to v1.3--default to scan.db
 if(defined $args{s}){ $dbfile=$args{s};} 
-else {$dbfile="scan.db";}
+else {$dbfile=$WHEREIS_WHISKER."scan.db";}
 
 $nmapfile	=$args{n} if defined($args{n});
 $singlehost	=$args{h} if defined($args{h});
@@@@ -176,7 +174,7 @@@@
 
 # experimental SSL support; only available within scripts
 $D{'XXUseSSL'}=0;
-$D{'XXSSLPath'}="/usr/local/ssl/bin/openssl";
+$D{'XXSSLPath'}="/usr/sbin/openssl";
 
 if($proxy eq "1"){  #setup proxy stuff - icky icky, gross gross!
   verbose("- Proxy: $proxy_addy Port: $proxy_port");
@@@@ -205,18 +203,18 @@@@
 #	wprint("- Using Anonymizer bounce scan");}
 # I'm tired; I don't want to code this!
 elsif($args{B}==4){
-	if(!-e $WHEREIS_WHISKER."proxlist.txt"){
+	if(!-e "proxlist.txt"){
 		print "Whoa!  Run -P to get a proxy list first\n\n";
 		exit;}
 	wprint("- Using distributed proxy-bounce scan");
 	$D{'XXDistProxy'}=1;
 	wprint("- Randomizing proxlist.txt...");
-	open(IN,"<$WHEREIS_WHISKER".'proxlist.txt');
+	open(IN,"<proxlist.txt");
 	@@temp=<IN>; close(IN);
 	array_shuffle(\@@temp);
-	open(OUT,">$WHEREIS_WHISKER"."prox$$.txt");
+	open(OUT,">prox$$.txt");
 	print OUT @@temp; close(OUT); undef @@temp;	
-	open(PROXYIN,"<$WHEREIS_WHISKER"."prox$$.txt");}
+	open(PROXYIN,"<prox$$.txt");}
 else {
 	print "Unknown Bounce type.\n"; exit; }
 
@@@@ -563,7 +561,7 @@@@
 $GLOBAL_WHISKER_LOOP_CONTROL=1;
 $nmapfile=$singlehost="";
 $hostsfile="dumb$$.lst"; # we made a list of dumb servers
-$dbfile="dumb.db";
+$dbfile=$WHEREIS_WHISKER."dumb.db";
 $D{'XXRescanDumb'}=0; $GLOBAL_WHISKER_NOMORE_DUMB=1;}
 
 } # this is the $GLOBAL_WHISKER_LOOP_CONTROL while() loop
@@@@ -1055,7 +1053,7 @@@@
 		"\nTry again in a few minutes\n\n"; exit;}
 
 	array_shuffle(\@@lines);
-	open(OUT, ">$WHEREIS_WHISKER".'proxlist.txt');
+	open(OUT, ">proxlist.txt");
 	print OUT @@lines;
 	close(OUT); # all this ugly code for anonymous proxies..geez...
 
@


1.2
log
@update to 1.3.0a - 1.2.0 no longer available
@
text
@@


1.2.2.1
log
@bring security as of cut-over date into 2.7 branch
@
text
@@


1.1
log
@Initial revision
@
text
@d1 13
a13 8
--- whisker.pl.orig	Mon Nov  1 08:40:55 1999
+++ whisker.pl	Mon Nov  1 10:46:03 1999
@@@@ -5,6 +5,8 @@@@
 # (emphasis on massive) -- read the dox for usage infoz
 
 $whisker_version="1.2.0";
+$default_db="y0y0y0/lib/whisker/scan.db";
+
d15 16
d32 3
a34 2
 getopts("fs:n:vdp:h:l:H:Vu:iINS:EA", \%args);
@@@@ -33,11 +35,11 @@@@
d36 47
a82 1
 wprint("-- whisker / v$whisker_version / rain.forest.puppy / ADM / wiretrip --\n");
a83 25
-if((!defined $args{n} && !defined $args{h}) && !defined $args{H} || !defined $args{s}){
-print qq~Usage:  whisker -s script.file ((-n input.file) | (-h host) | (-H list))
+if((!defined $args{n} && !defined $args{h}) && !defined $args{H}){
+print qq~Usage:  whisker (-s script.file) ((-n input.file) | (-h host) | (-H list))
 		(-l log.file)
 
-	-s specifies the script database file     **
+	-s specifies the script database file
 	-n nmap output (machine format, v2.06+)   *
 	-h scan single host (IP or domain)        *
 	-H host list to scan (file)               *
@@@@ -54,11 +56,11 @@@@
 	-S force server version (e.g. -S "Apache/1.3.6")
 	-A bounce your scans off of altavista.com (using netcraft.com)
 
- 	** required     * optional; one must exist
+ 	* optional; one must exist
 ~; 
 exit;}
 
-$dbfile		=$args{s};
+if (defined($args{s})){$dbfile=$args{s};} else {$dbfile=$default_db;}
 $nmapfile	=$args{n} if defined($args{n});
 $singlehost	=$args{h} if defined($args{h});
 $hostsfile	=$args{H} if defined($args{H});
@


1.1.1.1
log
@whisker port
@
text
@@
