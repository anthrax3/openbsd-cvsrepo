head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.6
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_4_5:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2016.06.17.09.43.35;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	QMluTM7VFmOZ7Js4;

1.1
date	2009.06.28.03.18.56;	author william;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2009.06.28.03.18.56;	author william;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2009.06.30.22.35.46;	author william;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Unbreak getent LOGIN/PLAIN authentication: getpwnam -> getpwnam_shadow.
Fix a few time_t printf while here.
@
text
@$OpenBSD$

64-bit time_t

--- lib/saslutil.c.orig	Fri Jun 17 11:34:42 2016
+++ lib/saslutil.c	Fri Jun 17 11:37:28 2016
@@@@ -288,9 +288,9 @@@@ int sasl_mkchal(sasl_conn_t *conn,
   time(&now);
 
   if (hostflag && conn->serverFQDN)
-    snprintf(buf,maxlen, "<%lu.%lu@@%s>", randnum, now, conn->serverFQDN);
+    snprintf(buf,maxlen, "<%lu.%lld@@%s>", randnum, now, conn->serverFQDN);
   else
-    snprintf(buf,maxlen, "<%lu.%lu>", randnum, now);
+    snprintf(buf,maxlen, "<%lu.%lld>", randnum, now);
 
   return (int) strlen(buf);
 }
@


1.1
log
@file patch-lib_saslutil_c was initially added on branch OPENBSD_4_5.
@
text
@d1 18
@


1.1.2.1
log
@SECURITY FIX

Resolve CVE-2009-0688:  unsafe use of sasl_encode64()

ok robert@@
@
text
@a0 40
$OpenBSD$

Resolve CVE-2009-0688:  unsafe use of sasl_encode64()

--- lib/saslutil.c.orig	Mon Mar 13 13:26:36 2006
+++ lib/saslutil.c	Fri Jun 19 19:53:21 2009
@@@@ -1,7 +1,7 @@@@
 /* saslutil.c
  * Rob Siemborski
  * Tim Martin
- * $Id: saslutil.c,v 1.44 2006/03/13 18:26:36 mel Exp $
+ * $Id: saslutil.c,v 1.44.2.1 2009/04/27 17:47:17 murch Exp $
  */
 /* 
  * Copyright (c) 1998-2003 Carnegie Mellon University.  All rights reserved.
@@@@ -125,10 +125,12 @@@@ int sasl_encode64(const char *_in, unsigned inlen,
     
     /* Will it fit? */
     olen = (inlen + 2) / 3 * 4;
-    if (outlen)
+    if (outlen) {
       *outlen = olen;
-    if (outmax < olen)
+    }
+    if (outmax <= olen) {
       return SASL_BUFOVER;
+    }
 
     /* Do the work... */
     blah=(char *) out;
@@@@ -151,8 +153,7 @@@@ int sasl_encode64(const char *_in, unsigned inlen,
         *out++ = '=';
     }
 
-    if (olen < outmax)
-      *out = '\0';
+    *out = '\0';
     
     return SASL_OK;
 }
@


1.1.2.2
log
@Remove bad hunk; noticed by Moritz Grimm, thanks!
ok robert@@
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_saslutil_c,v 1.1.2.1 2009/06/28 03:18:56 william Exp $
d7 9
@


