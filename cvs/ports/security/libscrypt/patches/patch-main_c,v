head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	benoit_20140315:1.1.1.1
	benoit:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.05.08.20.49.41;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2014.03.15.13.37.18;	author benoit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.03.15.13.37.18;	author benoit;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to libscrypt 1.19, from maintainer LEVAI Daniel, edited by me to
bump shlib major as the function libscrypt_hexconvert is no longer exported
@
text
@$OpenBSD: patch-main_c,v 1.1.1.1 2014/03/15 13:37:18 benoit Exp $
Trivial change of strcpy() to strlcpy().
Size of stack variable mcf and mcf2 is well known.
`make check` runs fine with it.
--- main.c.orig	Tue May  6 11:42:07 2014
+++ main.c	Thu May  8 21:29:01 2014
@@@@ -148,7 +148,7 @@@@ int main()
 	printf("TEST EIGHT: SUCCESSFUL, calculated mcf\n%s\n", mcf);
 
 	/* Since later calls to scrypt_check() butcher mcf, make a second */
-	strcpy(mcf2, mcf);
+	strlcpy(mcf2, mcf, SCRYPT_MCF_LEN);
 
 	/* Couldn't be simpler - for a given mcf, check is the password is valid
 	* Returns < 0 on failure to calculate hash
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- main.c.orig	Thu Jan 23 02:32:17 2014
+++ main.c	Thu Jan 23 14:32:56 2014
@@@@ -147,7 +147,7 @@@@ int main()
@


1.1.1.1
log
@Import libscrypt.

Shared library that implements the scrypt key derivation function.

from maintainer Daniel Levai, ok sthen@@
@
text
@@
