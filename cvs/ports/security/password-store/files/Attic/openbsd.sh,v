head	1.3;
access;
symbols
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	bentley_20160121:1.1.1.1
	bentley:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.03.07.08.53.17;	author bentley;	state dead;
branches;
next	1.2;
commitid	zgl0qQxOYrqPWzNb;

1.2
date	2016.07.14.16.57.55;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	RsOPU3mNCAxIcXGq;

1.1
date	2016.01.21.10.52.57;	author bentley;	state Exp;
branches
	1.1.1.1;
next	;
commitid	3FYq8N5DQ1qmAUEg;

1.1.1.1
date	2016.01.21.10.52.57;	author bentley;	state Exp;
branches;
next	;
commitid	3FYq8N5DQ1qmAUEg;


desc
@@


1.3
log
@Update to password-store-1.7.

From David Dalhlberg (maintainer). Thanks!
@
text
@# Copyright (C) 2015 David Dahlberg <david+openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

tmpdir() {
	[[ -n $SECURE_TMPDIR ]] && return
	local warn=1
	[[ $1 == "nowarn" ]] && warn=0
	local template="$PROGRAM.XXXXXXXXXXXXX"
	[[ $warn -eq 1 ]] && yesno "$(cat <<-_EOF
	The sysctl kern.usermount is not available on OpenBSD,
	therefore it is not possible to create a tmpfs for
	temporary storage of files in memory. 
	This means that it may be difficult to entirely erase 
	the temporary non-encrypted password file after editing. 

	Are you sure you would like to continue?
	_EOF
	)"
	SECURE_TMPDIR="$(mktemp -d "${TMPDIR:-/tmp}/$template")"
	shred_tmpfile() {
		find "$SECURE_TMPDIR" -type f -exec $SHRED {} +
		rm -rf "$SECURE_TMPDIR"
	}
	trap shred_tmpfile INT TERM EXIT
}

GETOPT="gnugetopt"
SHRED="rm -P -f"
@


1.2
log
@No more kern.usermount.

ok sthen@@
@
text
@@


1.1
log
@Initial revision
@
text
@d20 6
a25 17
	if [ "`sysctl -n kern.usermount`" == 1 ]; then
		SECURE_TMPDIR="$(mktemp -d "${TMPDIR:-/tmp}/$template")"
		mount -t tmpfs -o -s16M tmpfs "$SECURE_TMPDIR" \
			|| die "Error: could not create tmpfs."
		unmount_tmpdir() {
			[[ -n $SECURE_TMPDIR && -d $SECURE_TMPDIR ]] || return
			umount "$SECURE_TMPDIR"
			rm -rf "$SECURE_TMPDIR"
		}
		trap unmount_tmpdir INT TERM EXIT
	else
		[[ $warn -eq 1 ]] && yesno "$(cat <<-_EOF
		The sysctl kern.usermount is disabled, therefore it is not
		possible to create a tmpfs for temporary storage of files 
		in memory. 
		This means that it may be difficult to entirely erase 
		the temporary non-encrypted password file after editing. 
d27 9
a35 10
		Are you sure you would like to continue?
		_EOF
		)"
		SECURE_TMPDIR="$(mktemp -d "${TMPDIR:-/tmp}/$template")"
		shred_tmpfile() {
			find "$SECURE_TMPDIR" -type f -exec $SHRED {} +
			rm -rf "$SECURE_TMPDIR"
		}
		trap shred_tmpfile INT TERM EXIT
	fi
@


1.1.1.1
log
@Import password-store-1.6.5.

Lightweight commandline-based password manager. Uses pwgen, gpg and git to
generate, securely store, synchronize and show stored passwords.

from David Dahlberg; thanks!

ok zhuk@@
@
text
@@
