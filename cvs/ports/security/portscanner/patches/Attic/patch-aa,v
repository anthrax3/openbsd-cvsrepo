head	1.3;
access;
symbols
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.2
	OPENBSD_2_5_BASE:1.1.1.1
	brad_1999-03-12:1.1.1.1
	brad:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2002.01.15.00.34.19;	author brad;	state dead;
branches;
next	1.2;

1.2
date	99.05.24.22.24.59;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	99.03.12.17.04.26;	author brad;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.03.12.17.04.26;	author brad;	state Exp;
branches;
next	;


desc
@@


1.3
log
@upgrade to PortScanner 1.2
--
Pointed out by: Horacio <homega@@wanadoo.es>
@
text
@--- portscanner.c.orig	Sun Aug  9 17:50:35 1998
+++ portscanner.c	Mon May 24 18:20:41 1999
@@@@ -24,18 +24,21 @@@@
 /***********************************************************/
 
 #include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
 #include <sys/socket.h>
 #include <sys/types.h>
 #include <netinet/in.h>
-#include <unistd.h>
+#include <arpa/inet.h>
 #include <netdb.h>
 #include <sys/time.h>
 #include <fcntl.h>
+#include <string.h>
 
 int sock = -1;
 struct sockaddr_in address;
 int result;
-extern char *sys_errlist[];
+/* extern char *sys_errlist[]; */
 extern int errno;
 int current_port = 0; 
 u_short base_port = 0;
@@@@ -49,7 +52,7 @@@@
 int main(int argc, char **argv)
 { 
    if (argc < 4) {
-    fprintf(stderr,"Usage: portscan [address] [start port] [end port] <-v or -vv>\n");
+    fprintf(stderr,"Usage: portscanner [address] [start port] [end port] <-v or -vv>\n");
     exit(1);
    }
    
@@@@ -58,13 +61,13 @@@@
                verbose = 1;
              else if (!strcmp(argv[4],"-vv"))
                     verbose = 2;
-               else { fprintf(stderr,"Usage: portscan [address] [start port] [end port] <-v or -vv>\n");
+               else { fprintf(stderr,"Usage: portscanner [address] [start port] [end port] <-v or -vv>\n");
                       exit(1); }
 
      case 4: base_port = (u_short)atoi(argv[2]);
              end_port = (u_short)atoi(argv[3]);
              break;
-     default: fprintf(stderr,"Usage: portscan [address] [start port] [end port] <-v>\n");
+     default: fprintf(stderr,"Usage: portscanner [address] [start port] [end port] <-v>\n");
               exit(1);
               break;
    }
@@@@ -83,7 +86,7 @@@@
           } else if (verbose == 2) printf(" address valid\n");
    
    if ((base_port > end_port) || ((short)base_port < 0)) { 
-     fprintf(stderr,"Bad port range : start=%d end=%d !\n");
+     fprintf(stderr,"Bad port range : start=%d end=%d !\n",base_port,end_port);
      exit(1);
    } else if (verbose == 2) {
             printf("Port range: %d to %d\n",base_port,end_port);
@


1.2
log
@- fix syntax usage message so it displays the correct program name
@
text
@@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
--- portscanner.c.orig	Sun Aug  9 14:50:35 1998
+++ portscanner.c	Thu Dec  3 11:15:05 1998
d27 25
@


1.1.1.1
log
@add portscanner port
@
text
@@
