head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.24
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.20
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.22
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.18
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.16
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.14
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.12
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.10
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.8
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.12.14.14.21.44;	author jca;	state dead;
branches;
next	1.1;
commitid	fhBJx5KWtYcMccFA;

1.1
date	2010.10.19.07.59.04;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove security/l0phtcrack

Reasons include:
- i386 only
- full of scary patches and build warnings, embeds old libcrypto code,
  readsmb is a pcap listener that needs to run as root...
- no licensing information for l0phtcrack itself
- LANMAN and NTLMv1 auth are so old and braindead it's not even funny.
  Yes, they are still used out there, no, they really shouldn't be.

ok mestre@@ sthen@@ ajacoutot@@
@
text
@$OpenBSD: patch-chal_resp_c,v 1.1 2010/10/19 07:59:04 jsg Exp $
--- chal_resp.c.orig	Sat Oct 16 15:11:53 2010
+++ chal_resp.c	Sat Oct 16 15:13:08 2010
@@@@ -93,16 +93,16 @@@@ void E_P24(uchar *p21, uchar *c8, uchar *p24)
 
 void D1(uchar *k, uchar *d, uchar *out)
 { 
-  des_key_schedule ks;
-  des_cblock deskey;
+  DES_key_schedule ks;
+  DES_cblock deskey;
 
   str_to_key(k,(uchar *)deskey);
 #ifdef __FreeBSD__
   des_set_key(&deskey,ks);
 #else /* __FreeBSD__ */
-  des_set_key((des_cblock *)deskey,ks);
+  DES_set_key((DES_cblock *)deskey,&ks);
 #endif /* __FreeBsd */
-  des_ecb_encrypt((des_cblock *)d,(des_cblock *)out, ks, DES_DECRYPT);
+  DES_ecb_encrypt((DES_cblock *)d,(des_cblock *)out, &ks, DES_DECRYPT);
 }    
 
 void E1(uchar *k, uchar *d, uchar *out)
@@@@ -112,11 +112,11 @@@@ void E1(uchar *k, uchar *d, uchar *out)
      
   str_to_key(k,(uchar *)deskey);
 #ifdef __FreeBSD__
-  des_set_key(&deskey,ks);
+  DES_set_key(&deskey,&ks);
 #else /* __FreeBsd__ */
-  des_set_key((des_cblock *)deskey,ks);
+  DES_set_key((des_cblock *)deskey,&ks);
 #endif /* __FreeBsd__ */
-  des_ecb_encrypt((des_cblock *)d,(des_cblock *)out, ks, DES_ENCRYPT);
+  DES_ecb_encrypt((des_cblock *)d,(des_cblock *)out, &ks, DES_ENCRYPT);
 }    
 
 void strupper(char *s)
@


1.1
log
@libdes -> libcrypto
ok benoit@@
@
text
@d1 1
a1 1
$OpenBSD$
@

