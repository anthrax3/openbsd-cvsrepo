head	1.11;
access;
symbols
	OPENBSD_6_0:1.11.0.4
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.2
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.14
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.12
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.10
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.8
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.8
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.6
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.11
date	2015.12.01.23.25.09;	author sthen;	state Exp;
branches;
next	1.10;
commitid	5o109GD5tokNSy5t;

1.10
date	2014.11.19.00.18.01;	author sthen;	state Exp;
branches;
next	1.9;
commitid	pdezdz7OMOBZNVdZ;

1.9
date	2014.06.17.09.12.45;	author sthen;	state Exp;
branches
	1.9.2.1;
next	1.8;
commitid	p7yH1ZFYrKyquue3;

1.8
date	2014.05.08.08.18.51;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2013.09.20.15.23.03;	author sthen;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2010.04.01.13.18.54;	author sthen;	state Exp;
branches
	1.6.14.1;
next	1.5;

1.5
date	2008.07.08.22.38.12;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2008.04.16.19.46.02;	author mbalmer;	state Exp;
branches;
next	1.3;

1.3
date	2007.12.30.22.42.39;	author bernd;	state Exp;
branches;
next	1.2;

1.2
date	2007.02.28.20.31.08;	author mbalmer;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.29.10.12.09;	author mbalmer;	state Exp;
branches
	1.1.4.1
	1.1.6.1;
next	;

1.1.4.1
date	2007.03.16.21.31.20;	author sturm;	state Exp;
branches;
next	;

1.1.6.1
date	2007.03.16.22.12.34;	author sturm;	state Exp;
branches;
next	;

1.6.14.1
date	2013.10.22.09.01.13;	author sthen;	state Exp;
branches;
next	;

1.7.2.1
date	2014.05.08.08.44.42;	author sthen;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2014.06.17.09.13.50;	author sthen;	state Exp;
branches;
next	;
commitid	cE4cmMu3TP6woNwS;

1.9.2.1
date	2014.11.19.00.20.46;	author sthen;	state Exp;
branches;
next	1.9.2.2;
commitid	DGem5UFIRRq0gSwq;

1.9.2.2
date	2015.01.28.15.15.32;	author sthen;	state Exp;
branches;
next	;
commitid	5gAPkX4w8fbgO0fn;


desc
@@


1.11
log
@update to clamav-0.99
@
text
@$OpenBSD: patch-libclamav_vba_extract_c,v 1.10 2014/11/19 00:18:01 sthen Exp $

allow for machine arch where char is unsigned by default (e.g. arm, powerpc)

--- libclamav/vba_extract.c.orig	Fri Sep 18 21:48:45 2015
+++ libclamav/vba_extract.c	Tue Dec  1 22:19:26 2015
@@@@ -99,7 +99,7 @@@@ vba_endian_convert_32(uint32_t value, int big_endian)
 
 
 static char *
-get_unicode_name(const char *name, int size, int big_endian)
+get_unicode_name(const signed char *name, int size, int big_endian)
 {
 	int i, increment;
 	char *newname, *ret;
@


1.10
log
@SECURITY update to clamav 0.98.5 (crash fixes for various maliciously crafted
files, improved detection of malicious PE files, new file formats)
@
text
@d1 1
a1 1
$OpenBSD: patch-libclamav_vba_extract_c,v 1.9 2014/06/17 09:12:45 sthen Exp $
d5 3
a7 3
--- libclamav/vba_extract.c.orig	Tue Jul  8 15:50:23 2014
+++ libclamav/vba_extract.c	Wed Jul  9 00:58:02 2014
@@@@ -98,7 +98,7 @@@@ vba_endian_convert_32(uint32_t value, int big_endian)
@


1.9
log
@update to clamav 0.98.4, fixes infinite loop in clamdscan when clamd
is not running (the fix for buffer underruns with multipart MIME was
already patched locally)
@
text
@d1 1
a1 1
$OpenBSD: patch-libclamav_vba_extract_c,v 1.8 2014/05/08 08:18:51 sthen Exp $
d5 3
a7 3
--- libclamav/vba_extract.c.orig	Tue May  6 19:42:41 2014
+++ libclamav/vba_extract.c	Thu May  8 00:45:57 2014
@@@@ -99,7 +99,7 @@@@ vba_endian_convert_32(uint32_t value, int big_endian)
@


1.9.2.1
log
@SECURITY update to clamav 0.98.5 (crash fixes for various maliciously crafted
files, improved detection of malicious PE files, new file formats)
@
text
@d1 1
a1 1
$OpenBSD: patch-libclamav_vba_extract_c,v 1.10 2014/11/19 00:18:01 sthen Exp $
d5 3
a7 3
--- libclamav/vba_extract.c.orig	Tue Jul  8 15:50:23 2014
+++ libclamav/vba_extract.c	Wed Jul  9 00:58:02 2014
@@@@ -98,7 +98,7 @@@@ vba_endian_convert_32(uint32_t value, int big_endian)
@


1.9.2.2
log
@MFC SECURITY update to clamav 0.98.6
http://blog.clamav.net/2015/01/clamav-0986-has-been-released.html
@
text
@@


1.8
log
@update to clamav 0.98.3 (there appears to have been no 0.98.2) - license is
updated to GPLv2 + openssl exemptions.

notably: "Change to circumvent possible denial of service when processing
icons within specially crafted PE files. Icon limits are now in place with
corresponding clamd and clamscan configuration parameters."

also:
- support for common raw disk image formats
- experimental support of OpenIOC files in the signature database location
  ("No OpenIOC files will be delivered through freshclam")
- IPv6 now supported on all network sockets
- use OpenSSL file hash functions
- improved detection of malware scripts within image files
- pattern matcher improvements
- opt-in collection of statistics (--enable-stats / StatsEnabled) - NOT default
- various other fixes and improvements

libclamav major bump.
@
text
@d1 4
a4 1
$OpenBSD: patch-libclamav_vba_extract_c,v 1.7 2013/09/20 15:23:03 sthen Exp $
@


1.7
log
@update to clamav 0.98:

- signature improvements, performance improvements, support for new file
types including ISO9660, Flash, self-extracting 7z files

- more configurable limits

- callbacks added to API

while there, drop run dependency on zoo; clamav actually switched from zoo
to unzoo (which we don't have in ports) in 0.60(!) so this was doing nothing.
@
text
@d1 4
a4 4
$OpenBSD$
--- libclamav/vba_extract.c.orig	Mon Sep 16 20:28:14 2013
+++ libclamav/vba_extract.c	Fri Sep 20 15:27:54 2013
@@@@ -95,7 +95,7 @@@@ vba_endian_convert_32(uint32_t value, int big_endian)
@


1.7.2.1
log
@MFC update to clamav 0.98.3 -

"Change to circumvent possible denial of service when processing icons
within specially crafted PE files. Icon limits are now in place with
corresponding clamd and clamscan configuration parameters."

libclamav major bump - ports with a library dependency (mail/dspam,
www/c-icap/modules, www/havp) will need rebuilding.

License is updated to GPLv2 + openssl exemptions.
@
text
@d1 4
a4 4
$OpenBSD: patch-libclamav_vba_extract_c,v 1.8 2014/05/08 08:18:51 sthen Exp $
--- libclamav/vba_extract.c.orig	Tue May  6 19:42:41 2014
+++ libclamav/vba_extract.c	Thu May  8 00:45:57 2014
@@@@ -99,7 +99,7 @@@@ vba_endian_convert_32(uint32_t value, int big_endian)
@


1.7.2.2
log
@MFC update to clamav 0.98.4, fixes infinite loop in clamdscan when clamd
is not running (the fix for buffer underruns with multipart MIME was
already patched locally)
@
text
@a1 3

allow for machine arch where char is unsigned by default (e.g. arm, powerpc)

@


1.6
log
@update to 0.96, ok pea@@
@
text
@d1 3
a3 3
$OpenBSD: patch-libclamav_vba_extract_c,v 1.5 2008/07/08 22:38:12 sthen Exp $
--- libclamav/vba_extract.c.orig	Thu Jan  7 17:09:18 2010
+++ libclamav/vba_extract.c	Wed Mar 10 21:28:42 2010
@


1.6.14.1
log
@Now that sparc64 is fixed, update clamav in 5.4 to 0.98 as requested by jasper@@.
No direct security fixes, but improvements in the scanning engine make this a
desirable update.
@
text
@d1 3
a3 3
$OpenBSD: patch-libclamav_vba_extract_c,v 1.7 2013/09/20 15:23:03 sthen Exp $
--- libclamav/vba_extract.c.orig	Mon Sep 16 20:28:14 2013
+++ libclamav/vba_extract.c	Fri Sep 20 15:27:54 2013
@


1.5
log
@update clamav to 0.93.3. possible SECURITY. since 0.93:

- fixes DoS with MailFollowURLs (CVE-2008-2713)
- improves handling of PDF, CAB, RTF, OLE2 and HTML files
and includes various bugfixes for 0.93 issues.

"if it works" mbalmer@@
@
text
@d1 4
a4 4
$OpenBSD: patch-libclamav_vba_extract_c,v 1.4 2008/04/16 19:46:02 mbalmer Exp $
--- libclamav/vba_extract.c.orig	Tue May 27 05:44:35 2008
+++ libclamav/vba_extract.c	Thu Jun 12 17:30:58 2008
@@@@ -99,7 +99,7 @@@@ vba_endian_convert_32(uint32_t value, int big_endian)
@


1.4
log
@Update ClamAV to version 0.93, which fixes mostly security problems, at
least one highly critical (remote). See http://secunia.com/advisories/29000
for details.

Thanks to kurt@@ for helping analyzing the threaded code issues.
@
text
@d1 5
a5 5
$OpenBSD: patch-libclamav_vba_extract_c,v 1.2 2007/02/28 20:31:08 mbalmer Exp $
--- libclamav/vba_extract.c.orig	Wed Apr  2 22:17:28 2008
+++ libclamav/vba_extract.c	Mon Apr 14 18:47:15 2008
@@@@ -115,7 +115,7 @@@@ vba_endian_convert_32(uint32_t value, int big_endian)
 }
@


1.3
log
@Security update to clamav-0.92. (CVE-2007-6335)

"ClamAV libclamav MEW PE File Integer Overflow Vulnerability"

More info:
http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=634

Similar diff submitted by grunk@@ on ports@@.

test & ok mbalmer@@ (MAINTAINER)
@
text
@d2 4
a5 4
--- libclamav/vba_extract.c.orig	Tue Dec 18 10:58:37 2007
+++ libclamav/vba_extract.c	Tue Dec 18 10:58:51 2007
@@@@ -128,7 +128,7 @@@@ static const vba_version_t vba_version[NUM_VBA_VERSION
 };
d8 2
a9 2
-get_unicode_name(const char *name, int size, int is_mac)
+get_unicode_name(const signed char *name, int size, int is_mac)
d11 2
a12 2
         int i, increment;
         char *newname, *ret;
@


1.2
log
@Update to ClamAV 0.90.  A lot of improvments and bugfixes, see www.clamav.net
for all details.

ok nikolay
@
text
@d1 5
a5 6
$OpenBSD: patch-libclamav_vba_extract_c,v 1.1 2005/06/29 10:12:09 mbalmer Exp $
--- libclamav/vba_extract.c.orig	Wed Jan 31 19:07:33 2007
+++ libclamav/vba_extract.c	Wed Feb 14 08:26:32 2007
@@@@ -101,7 +101,7 @@@@ vba_version_t vba_version[] = {
                                   2 +  /* type1 record count */ \
                                   2)   /* unknown */
d7 3
a9 2
-static char *get_unicode_name(char *name, int size, int is_mac)
+static char *get_unicode_name(signed char *name, int size, int is_mac)
d11 2
a12 2
         int i, j;
         char *newname;
@


1.1
log
@Update to version 0.86.1 and add patches to fix problems on macppc (comparisons
that are always true due to char not being signed on this platform).

This update fixes a possible crash, see
http://sourceforge.net/project/shownotes.php?release_id=337279
for details.
@
text
@d1 4
a4 4
$OpenBSD$
--- libclamav/vba_extract.c.orig	Wed Jun 29 11:36:26 2005
+++ libclamav/vba_extract.c	Wed Jun 29 11:36:48 2005
@@@@ -117,7 +117,7 @@@@ vba_version_t vba_version[] = {
@


1.1.6.1
log
@MFC:
Update to ClamAV 0.90.  A lot of improvments and bugfixes, see www.clamav.net
for all details.
@
text
@d1 4
a4 4
$OpenBSD: patch-libclamav_vba_extract_c,v 1.1 2005/06/29 10:12:09 mbalmer Exp $
--- libclamav/vba_extract.c.orig	Wed Jan 31 19:07:33 2007
+++ libclamav/vba_extract.c	Fri Mar 16 22:50:28 2007
@@@@ -101,7 +101,7 @@@@ vba_version_t vba_version[] = {
@


1.1.4.1
log
@MFC:
Update to ClamAV 0.90.  A lot of improvments and bugfixes, see www.clamav.net
for all details.
@
text
@d1 4
a4 4
$OpenBSD: patch-libclamav_vba_extract_c,v 1.1 2005/06/29 10:12:09 mbalmer Exp $
--- libclamav/vba_extract.c.orig	Wed Jan 31 19:07:33 2007
+++ libclamav/vba_extract.c	Fri Mar 16 19:08:38 2007
@@@@ -101,7 +101,7 @@@@ vba_version_t vba_version[] = {
@


