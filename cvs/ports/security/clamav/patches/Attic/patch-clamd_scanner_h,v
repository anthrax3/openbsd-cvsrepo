head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2008.09.14.15.00.43;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2008.04.16.19.46.01;	author mbalmer;	state Exp;
branches;
next	;


desc
@@


1.2
log
@SECURITY and other bug fixes.

- A vulnerability in ClamAV's chm-parser allowed remote attackers to
cause a denial of service (application crash) via a malformed CHM file
(CVE-2008-1389).

- A vulnerability in libclamav would allow attackers to cause a
denial of service via vectors related to an out-of-memory condition
(CVE-2008-3912).

- Multiple memory leaks were found in ClamAV that could possibly allow
attackers to cause a denial of service via excessive memory consumption
(CVE-2008-3913).

- A number of unspecified vulnerabilities in ClamAV were reported that
have an unknown impact and attack vectors related to file descriptor
leaks (CVE-2008-3914).

various OpenBSD patches rolled in upstream. thanks to sturm@@
for looking over systrace.filter (needed for the test of sendmsg()
in configure to enable FD passing).
@
text
@$OpenBSD: patch-clamd_scanner_h,v 1.1 2008/04/16 19:46:01 mbalmer Exp $
--- clamd/scanner.h.orig	Mon Apr 14 18:58:39 2008
+++ clamd/scanner.h	Mon Apr 14 18:59:33 2008
@@@@ -28,6 +28,8 @@@@
 
 int scan(const char *filename, unsigned long int *scanned, const struct cl_engine *engine, const struct cl_limits *limits, unsigned int options, const struct cfgstruct *copt, int odesc, unsigned int type);
 
+int scanfd(const int fd, unsigned long int *scanned, const struct cl_engine *engine, const struct cl_limits *limits, unsigned int options, const struct cfgstruct *copt, int odesc);
+
 int scanstream(int odesc, unsigned long int *scanned, const struct cl_engine *engine, const struct cl_limits *limits, unsigned int options, const struct cfgstruct *copt);
 
 #endif
@


1.1
log
@Update ClamAV to version 0.93, which fixes mostly security problems, at
least one highly critical (remote). See http://secunia.com/advisories/29000
for details.

Thanks to kurt@@ for helping analyzing the threaded code issues.
@
text
@d1 1
a1 1
$OpenBSD$
@

