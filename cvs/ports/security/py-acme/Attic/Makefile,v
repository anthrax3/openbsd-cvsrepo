head	1.4;
access;
symbols
	sthen_20151104:1.1.1.1 sthen:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.11.17.12.49.25;	author sthen;	state dead;
branches;
next	1.3;
commitid	0IXqlXsOq5LusLSu;

1.3
date	2015.11.17.12.36.10;	author sthen;	state Exp;
branches;
next	1.2;
commitid	e2LNfK0pa4YJ264e;

1.2
date	2015.11.12.21.53.56;	author sthen;	state Exp;
branches;
next	1.1;
commitid	qQb3HkwhflFOzfsw;

1.1
date	2015.11.04.09.53.09;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	RHSPSTjBouo5WYco;

1.1.1.1
date	2015.11.04.09.53.09;	author sthen;	state Exp;
branches;
next	;
commitid	RHSPSTjBouo5WYco;


desc
@@


1.4
log
@move py-acme under security/letsencrypt
@
text
@# $OpenBSD: Makefile,v 1.3 2015/11/17 12:36:10 sthen Exp $

COMMENT=	ACME protocol implementation

MODPY_EGG_VERSION=	0.0.0.dev20151114
DISTNAME=	acme-${MODPY_EGG_VERSION}
PKGNAME=	${MODPY_PY_PREFIX}${DISTNAME:S/.dev/pre/}
CATEGORIES=	security

MAINTAINER=	Stuart Henderson <sthen@@openbsd.org>

# Apache 2
PERMIT_PACKAGE_CDROM=	Yes

FLAVORS=	python3
FLAVOR?=

MODULES=	lang/python
MODPY_SETUPTOOLS= Yes
MODPY_PI=	Yes

RUN_DEPENDS=	devel/py-asn1${MODPY_FLAVOR} \
		devel/py-six${MODPY_FLAVOR} \
		devel/py-tz${MODPY_FLAVOR} \
		net/py-idna${MODPY_FLAVOR} \
		security/py-cryptography${MODPY_FLAVOR}>=0.8 \
		security/py-openssl${MODPY_FLAVOR}>=0.15 \
		textproc/py-pyRFC3339${MODPY_FLAVOR} \
		www/py-ndg-httpsclient${MODPY_FLAVOR} \
		www/py-requests${MODPY_FLAVOR} \
		www/py-werkzeug${MODPY_FLAVOR}

BUILD_DEPENDS=	${RUN_DEPENDS}

# weird hangs in network-listening tests.
TEST_IS_INTERACTIVE=	Yes

.if ${FLAVOR:Mpython3}
# no devel/py-mock for py3 yet
NO_TEST=	Yes
.else
TEST_DEPENDS=	devel/py-nose${MODPY_FLAVOR} \
		devel/py-mock${MODPY_FLAVOR}
# py-funcsigs not imported yet
#TEST_DEPENDS+=	devel/py-funcsigs${MODPY_FLAVOR}
NO_TEST=Yes
.endif

post-install:
	mv ${PREFIX}/bin/jws ${PREFIX}/bin/jws${MODPY_BIN_SUFFIX}

.include <bsd.port.mk>
@


1.3
log
@update to py-acme 20151114
loses tests for now (need funcsigs) but they didn't work quite properly anyway..
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2015/11/12 21:53:56 sthen Exp $
@


1.2
log
@update to py-acme 20151108
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2015/11/04 09:53:09 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION=	0.0.0.dev20151108
d35 12
a46 3
TEST_DEPENDS=	devel/py-nose${MODPY_FLAVOR}
.if ! ${FLAVOR:Mpython3}
TEST_DEPENDS+=	devel/py-mock
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2015/11/03 21:14:21 sthen Exp $
d5 1
a5 1
MODPY_EGG_VERSION=	0.0.0.dev20151030
@


1.1.1.1
log
@import ports/security/py-acme, ok landry@@
note, this is still devel code, but useful to have in tree

ACME (Automated Certificate Management Environment) is a protocol for
automating the management of domain-validation certificates, based on a
simple JSON-over-HTTPS interface.

The spec (https://github.com/letsencrypt/acme-spec) is a work in progress
but it is hoped to eventually move it to the IETF process to become an RFC.

This packages provides a Python implementation of the protocol.
@
text
@@
