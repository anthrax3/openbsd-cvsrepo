head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.10.06.20.47.06;	author sthen;	state dead;
branches;
next	1.1;
commitid	TODCnANvaIYp6pjn;

1.1
date	2015.06.23.16.18.46;	author sthen;	state Exp;
branches;
next	;
commitid	LJxdcIdIA9gAQV3i;


desc
@@


1.2
log
@update to py-cryptography 1.0.2
@
text
@$OpenBSD: patch-src_cryptography_hazmat_bindings_openssl_ec_py,v 1.1 2015/06/23 16:18:46 sthen Exp $

libressl added EC_curve_nid2nist, but since LIBRESSL_VERSION_NUMBER
was not bumped there's no easy way to test for it.

--- src/cryptography/hazmat/bindings/openssl/ec.py.orig	Sat Jun  6 21:29:18 2015
+++ src/cryptography/hazmat/bindings/openssl/ec.py	Tue Jun 23 16:53:25 2015
@@@@ -389,8 +389,7 @@@@ EC_GROUP *(*EC_GROUP_new_curve_GF2m)(
 static const long Cryptography_HAS_EC2M = 1;
 #endif
 
-#if defined(OPENSSL_NO_EC) || OPENSSL_VERSION_NUMBER < 0x1000200f || \
-    defined(LIBRESSL_VERSION_NUMBER)
+#if defined(OPENSSL_NO_EC) || OPENSSL_VERSION_NUMBER < 0x1000200f
 static const long Cryptography_HAS_EC_1_0_2 = 0;
 const char *(*EC_curve_nid2nist)(int) = NULL;
 #else
@


1.1
log
@update to py-cryptography 0.91, and patch to permit building with recent
libressl (py-cryptography was providing its own implementation of
EC_curve_nid2nist for libressl and for old openssl versions, this was
broken when libressl added it - since LIBRESSL_VERSION doesn't provide
anything useful for recognising this, simply delete the libressl check
from the ifdef).
@
text
@d1 1
a1 1
$OpenBSD$
@

