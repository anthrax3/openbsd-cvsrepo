head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.18
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.14
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.16
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.12
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.10
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.8
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.04.07.16.46.05;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Modify security/p5-Catalyst-Plugin-Authentication-Store-DBIC to use
MRO::Compat instead of the deprecated module NEXT.  Disable TEST_POD as
the POD coverage tests complain about undocumented code.
Catalyst::Plugin::Authentication::Store::DBIC is deprecated.  Use
Catalyst::Authentication::Store::DBIx::Class instead.
From Andreas Voegele's repo
@
text
@$OpenBSD$
--- lib/Catalyst/Plugin/Authentication/Store/DBIC.pm.orig	Wed Jul 16 11:21:52 2008
+++ lib/Catalyst/Plugin/Authentication/Store/DBIC.pm	Sun Nov  6 08:40:56 2011
@@@@ -7,6 +7,7 @@@@ our $VERSION = '0.11';
 
 use Catalyst::Plugin::Authentication::Store::DBIC::Backend;
 use Catalyst::Utils ();
+use MRO::Compat;
 
 sub setup {
     my $c = shift;
@@@@ -27,13 +28,13 @@@@ sub setup {
         } )
     );
 
-    $c->NEXT::setup(@@_);
+    $c->maybe::next::method(@@_);
 }
 
 sub setup_finished {
     my $c = shift;
 
-    return $c->NEXT::setup_finished unless @@_;
+    return $c->maybe::next::method unless @@_;
 
     my $config = $c->default_auth_store;
     if (my $user_class = $config->{auth}{user_class}) {
@@@@ -61,7 +62,7 @@@@ sub setup_finished {
         $config->{authz}{user_role_class} = _get_instance( $c, $user_role_class );
     }
 
-    $c->NEXT::setup_finished(@@_);
+    $c->maybe::next::method(@@_);
 }
 
 sub _get_instance {
@
