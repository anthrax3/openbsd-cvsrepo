head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.10
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	sthen_20121119:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2015.07.15.21.03.23;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	82U0wVCs3VDOCbj3;

1.1
date	2012.11.19.22.14.52;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.11.19.22.14.52;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix pexp.
@
text
@#!/bin/sh
#
# $OpenBSD: spiped.rc,v 1.1.1.1 2012/11/19 22:14:52 sthen Exp $

daemon="${TRUEPREFIX}/bin/spiped"
daemon_flags="-D -d -s '[0.0.0.0]:8022' -t '[127.0.0.1]:22' -k ${SYSCONFDIR}/spiped/spiped.key -p /var/run/spiped/spiped.pid"
daemon_user="_spiped"

. /etc/rc.d/rc.subr

pexp="${daemon} .*"
rc_reload=NO

rc_pre() {
	install -d -o _spiped /var/run/spiped
	if [ ! -f ${SYSCONFDIR}/spiped/spiped.key ]; then
		dd if=/dev/urandom bs=32 count=1 of=${SYSCONFDIR}/spiped/spiped.key
	fi
}

rc_cmd $1
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
# $OpenBSD$
d11 1
a11 1
pexp="${daemon}"
@


1.1.1.1
log
@import ports/security/spiped, from James Turner, ok landry@@

spiped (pronounced "ess-pipe-dee") is a utility for creating
symmetrically encrypted and authenticated pipes between socket
addresses, so that one may connect to one address (e.g., a UNIX socket
on localhost) and transparently have a connection established to another
address (e.g., a UNIX socket on a different system). This is similar to
'ssh -L' functionality, but does not use SSH and requires a pre-shared
symmetric key.

spipe (pronounced "ess-pipe") is a utility which acts as an spiped
protocol client (i.e., connects to an spiped daemon), taking input from
the standard input and writing data read back to the standard output.
@
text
@@
