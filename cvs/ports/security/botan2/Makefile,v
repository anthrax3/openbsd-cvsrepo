head	1.9;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	bluhm_20170313:1.1.1.1
	bluhm:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2017.08.13.14.40.18;	author bluhm;	state Exp;
branches;
next	1.8;
commitid	a0cwjD3whZQl6aJL;

1.8
date	2017.08.11.22.30.38;	author bluhm;	state Exp;
branches;
next	1.7;
commitid	ckE70xQWP6HltHYL;

1.7
date	2017.07.27.10.05.20;	author sthen;	state Exp;
branches;
next	1.6;
commitid	GaeX7RvWvJNgCIJE;

1.6
date	2017.05.31.08.08.17;	author espie;	state Exp;
branches;
next	1.5;
commitid	ij92FtFXiSiT1ani;

1.5
date	2017.05.13.09.49.50;	author espie;	state Exp;
branches;
next	1.4;
commitid	Qq9CIQtBjFqtn5SM;

1.4
date	2017.04.10.11.10.33;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	upbVYtsy6ktoFlzk;

1.3
date	2017.04.03.10.08.17;	author jca;	state Exp;
branches;
next	1.2;
commitid	psLIFTfliuhJKTHw;

1.2
date	2017.03.16.12.32.16;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	Ni6gfkUiMfqTXezB;

1.1
date	2017.03.13.15.00.39;	author bluhm;	state Exp;
branches
	1.1.1.1;
next	;
commitid	7cTkEjfHPHmxDt0p;

1.1.1.1
date	2017.03.13.15.00.39;	author bluhm;	state Exp;
branches;
next	;
commitid	7cTkEjfHPHmxDt0p;


desc
@@


1.9
log
@Enable the --with-openssl configure switch in botan2.  This allows
to use LibreSSL as backend for the Botan API.  Include the Botan
test program and samples in the package.  So we can test LibreSSL
using their tests scripts with botan-test --provider=openssl.
Currently only a fraction of the tests actually use the OpenSSL
provider, but that can be improved later.
OK doug@@
@
text
@# $OpenBSD: Makefile,v 1.8 2017/08/11 22:30:38 bluhm Exp $

COMMENT =	crypto and TLS for C++11

VERSION =	2.2.0
REVISION =	0
DISTNAME =	Botan-${VERSION}
PKGNAME =	botan2-${VERSION}

SHARED_LIBS =	botan-2		2.0

CATEGORIES =	security

HOMEPAGE =	https://botan.randombit.net/

MAINTAINER =		Alexander Bluhm <bluhm@@openbsd.org>

# BSD 2-Clause
PERMIT_PACKAGE_CDROM =	Yes

WANTLIB =		bz2 c crypto m lzma pthread z
WANTLIB +=		${COMPILER_LIBCXX}

MASTER_SITES =		${HOMEPAGE}releases/

SUPDISTFILES =		${DISTFILES}.asc
EXTRACT_SUFX =		.tgz

MODULES =		lang/python
MODPY_RUNDEP =		No

COMPILER =		gcc
LIB_DEPENDS =		archivers/bzip2 \
			archivers/xz

SEPARATE_BUILD =	Yes
CONFIGURE_STYLE =	simple
CONFIGURE_SCRIPT =	${WRKSRC}/configure.py
CONFIGURE_ARGS =	--with-build-dir=${WRKBUILD} \
			--prefix=${PREFIX} \
			--distribution-info="`uname -sr`" \
			--with-bzip2 \
			--with-lzma \
			--with-openssl \
			--with-zlib \
			--without-sphinx

.if ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "amd64"
PKG_ARGS =		-Dx86=1
.else
PKG_ARGS =		-Dx86=0
.endif

SUBST_VARS =		CXX CXXFLAGS LIBbotan-2_VERSION

pre-configure:
	${SUBST_CMD} ${WRKSRC}/src/build-data/cc/gcc.txt
	${SUBST_CMD} ${WRKSRC}/src/build-data/os/openbsd.txt
	${SUBST_CMD} ${WRKSRC}/src/tests/main.cpp
	ln -sf ${MODPY_BIN} ${WRKDIR}/bin/python

do-test:
	LD_LIBRARY_PATH=${WRKBUILD} ${WRKBUILD}/botan-test \
	    --data-dir=${WRKSRC}/src/tests/data

post-install:
	${MODPY_BIN} ${MODPY_LIBDIR}/compileall.py \
	    ${PREFIX}/lib/python${MODPY_VERSION}/site-packages/botan2.py
	cd ${PREFIX}/share/doc && mv botan-${VERSION} botan-2
	${INSTALL_PROGRAM} ${WRKBUILD}/botan-test ${PREFIX}/bin
	${INSTALL_DATA_DIR} ${PREFIX}/share/botan-2
	cd ${WRKSRC}/src/tests && find data \
	    -type d -exec ${INSTALL_DATA_DIR} ${PREFIX}/share/botan-2/{} \; -o \
	    -type f -exec ${INSTALL_DATA} {} ${PREFIX}/share/botan-2/{} \;

.include <bsd.port.mk>
# clang does not have ${LOCALBASE} in its path, but more importantly,
# if we don't explicitly configure for it, it passes as a good enough gcc,
# and then we get lots of warnings for unknown warning options...
.if ${PROPERTIES:Mclang}
CONFIGURE_ARGS += 	--with-external-includedir=${LOCALBASE}/include \
			--with-external-libdir=${LOCALBASE}/lib \
			--cc=clang
.endif
@


1.8
log
@update botan2 to 2.2.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2017/07/27 10:05:20 sthen Exp $
d6 1
d21 1
a21 1
WANTLIB =		bz2 c m lzma pthread z
d44 1
d59 1
d63 2
a64 1
	cd ${WRKSRC} && LD_LIBRARY_PATH=${WRKBUILD} ${WRKBUILD}/botan-test
d70 5
@


1.7
log
@add COMPILER_LIBCXX to WANTLIB and bump
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2017/05/31 08:08:17 espie Exp $
d5 1
a5 1
VERSION =	2.1.0
a7 1
REVISION =	0
d9 1
a9 1
SHARED_LIBS =	botan-2		1.0
d21 1
a21 1
WANTLIB += ${COMPILER_LIBCXX}
a39 1
			--destdir=${DESTDIR}${PREFIX} \
d68 1
a68 1
# clang does not have /usr/local in its path, but more importantly,
@


1.6
log
@switch everything to new COMPILER idiom, even stuff that won't build with clang
yet, but at least that part is done.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2017/05/13 09:49:50 espie Exp $
d8 1
d22 1
@


1.5
log
@first batch of WANT_CXX
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2017/04/10 11:10:33 bluhm Exp $
d30 1
a30 1
WANT_CXX =		base gcc
@


1.4
log
@update botan2 to version 2.1.0
fix CVE-2017-7252 CVE-2017-2801
major library bump, forgotten upstream, use LIBbotan-2_VERSION
keep patches local that are needed by port system
build patches have been accepted upstream
support for getentropy(2) and arc4random(3) accepted upstream
botan CLI has been renamed to botan2 upstream
rename doc dir to botan-2
OK sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2017/04/03 10:08:17 jca Exp $
d27 1
a27 2
MODULES =		lang/python \
			gcc4
d29 2
a30 2
MODGCC4_LANGS =		c++
MODGCC4_ARCHS =		*
d68 8
@


1.3
log
@Fix packaging on !(x86)

rdrand_rng.h is arch-specific.  ok bluhm@@ (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2017/03/16 12:32:16 bluhm Exp $
d5 1
a5 2
VERSION =	2.0.1
REVISION =	0
d9 1
a9 1
SHARED_LIBS =	botan-2		0.0
d53 1
a53 1
SUBST_VARS =		CXX CXXFLAGS
d57 1
d65 2
a66 1
	    ${PREFIX}/lib/python${MODPY_VERSION}/site-packages/botan.py
@


1.2
log
@patches have been commited upstream, put git log into comment
makefile beautification
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2017/03/13 15:00:39 bluhm Exp $
d6 1
d47 6
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d22 1
a22 1
MASTER_SITES =		https://botan.randombit.net/releases/
d43 1
a44 1
			--with-lzma \
@


1.1.1.1
log
@import botan2 2.0.1
input and OK jca@@

Comment:
crypto and TLS for C++11

Description:
Botan (Japanese for peony) is a cryptography library written in
C++11 and released under the permissive Simplified BSD license.
Botan's goal is to be the best option for cryptography in new C++
code by offering the tools necessary to implement a range of practical
systems, such as TLS/DTLS, PKIX certificate handling, PKCS#11 and
TPM hardware support, password hashing, and post quantum crypto
schemes.  In addition to the C++, botan has a C89 API specifically
designed to be easy to call from other languages.  A Python binding
using ctypes calling the C89 API is included.
@
text
@@
