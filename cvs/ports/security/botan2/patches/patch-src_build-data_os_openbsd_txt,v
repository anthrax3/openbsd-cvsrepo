head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	bluhm_20170313:1.1.1.1
	bluhm:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.03.16.12.32.16;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	Ni6gfkUiMfqTXezB;

1.1
date	2017.03.13.15.00.39;	author bluhm;	state Exp;
branches
	1.1.1.1;
next	;
commitid	7cTkEjfHPHmxDt0p;

1.1.1.1
date	2017.03.13.15.00.39;	author bluhm;	state Exp;
branches;
next	;
commitid	7cTkEjfHPHmxDt0p;


desc
@@


1.2
log
@patches have been commited upstream, put git log into comment
makefile beautification
@
text
@$OpenBSD: patch-src_build-data_os_openbsd_txt,v 1.1.1.1 2017/03/13 15:00:39 bluhm Exp $

commit 6eb7588d45b7b793b11f67788a2c27eeb0d7796e
Author: Alexander Bluhm <alexander.bluhm@@gmx.net>
Date:   Mon Mar 13 16:23:58 2017 +0100

    OpenBSD does not have 3 digit soname and library symlinks.
    
    Set library name for openbsd to libbotan-2.so.0.0 and do not install
    symlinks.

--- src/build-data/os/openbsd.txt.orig	Tue Jan 10 04:21:31 2017
+++ src/build-data/os/openbsd.txt	Fri Mar 10 01:54:13 2017
@@@@ -1,6 +1,8 @@@@
 os_type unix
 
-soname_suffix "so"
+soname_pattern_base  "libbotan-{version_major}.so"
+soname_pattern_abi   "libbotan-{version_major}.so.{abi_rev}"
+soname_pattern_patch "libbotan-{version_major}.so.{abi_rev}.{version_minor}"
 
 <target_features>
 clock_gettime
@


1.1
log
@Initial revision
@
text
@d1 11
a11 1
$OpenBSD$
@


1.1.1.1
log
@import botan2 2.0.1
input and OK jca@@

Comment:
crypto and TLS for C++11

Description:
Botan (Japanese for peony) is a cryptography library written in
C++11 and released under the permissive Simplified BSD license.
Botan's goal is to be the best option for cryptography in new C++
code by offering the tools necessary to implement a range of practical
systems, such as TLS/DTLS, PKIX certificate handling, PKCS#11 and
TPM hardware support, password hashing, and post quantum crypto
schemes.  In addition to the C++, botan has a C89 API specifically
designed to be easy to call from other languages.  A Python binding
using ctypes calling the C89 API is included.
@
text
@@
