head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.10
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.6
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.12.17.14.58.31;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	MFuneOA792oMhnFq;

1.1
date	2014.07.13.14.10.13;	author ajacoutot;	state Exp;
branches;
next	;
commitid	R7CQhUQNdJfZrGZj;


desc
@@


1.2
log
@Update to heimdal-7.0.3.
This is still an RC but the final version is supposed to come out in a
couple of days. Committing early to catch regressions and all.
Not much depends on this in ports anyway...
@
text
@$OpenBSD: patch-lib_hx509_softp11_c,v 1.1 2014/07/13 14:10:13 ajacoutot Exp $

Use HAVE_ARC4RANDOM and choose to call arc4random() instead of srand()
and rand() and friends.

--- lib/hx509/softp11.c.orig	Tue Nov 29 02:35:27 2016
+++ lib/hx509/softp11.c	Thu Dec 15 11:29:38 2016
@@@@ -33,6 +33,7 @@@@
 
 #define CRYPTOKI_EXPORTS 1
 
+#include <config.h>
 #include "hx_locl.h"
 #include "ref/pkcs11.h"
 
@@@@ -304,6 +305,7 @@@@ static struct st_object *
 add_st_object(void)
 {
     struct st_object *o, **objs;
+    u_int32_t rnd;
     int i;
 
     o = calloc(1, sizeof(*o));
@@@@ -326,8 +328,14 @@@@ add_st_object(void)
 	soft_token.object.objs = objs;
 	soft_token.object.objs[soft_token.object.num_objs++] = o;
     }
+#ifdef HAVE_ARC4RANDOM
+    rnd = arc4random();
+#else
+    rnd = random();
+#endif
+
     soft_token.object.objs[i]->object_handle =
-	(random() & (~OBJECT_ID_MASK)) | i;
+	(rnd & (~OBJECT_ID_MASK)) | i;
 
     return o;
 }
@@@@ -878,7 +886,9 @@@@ C_Initialize(CK_VOID_PTR a)
 
     OpenSSL_add_all_algorithms();
 
+#ifndef HAVE_ARC4RANDOM
     srandom(getpid() ^ (int) time(NULL));
+#endif
 
     for (i = 0; i < MAX_NUM_SESSION; i++) {
 	soft_token.state[i].session_handle = CK_INVALID_HANDLE;
@@@@ -1124,6 +1134,7 @@@@ C_OpenSession(CK_SLOT_ID slotID,
 	      CK_SESSION_HANDLE_PTR phSession)
 {
     size_t i;
+    u_int32_t rnd;
     INIT_CONTEXT();
     st_logf("OpenSession: slot: %d\n", (int)slotID);
 
@@@@ -1139,10 +1150,15 @@@@ C_OpenSession(CK_SLOT_ID slotID,
     if (i == MAX_NUM_SESSION)
 	abort();
 
-    soft_token.open_sessions++;
+#ifdef HAVE_ARC4RANDOM
+    rnd = arc4random();
+#else
+    rnd = random();
+#endif
 
+    soft_token.open_sessions++;
     soft_token.state[i].session_handle =
-	(CK_SESSION_HANDLE)(random() & 0xfffff);
+	(CK_SESSION_HANDLE)(rnd & 0xfffff);
     *phSession = soft_token.state[i].session_handle;
 
     return CKR_OK;
@


1.1
log
@Import heimdal-1.5.3; aka resurrect security/heimdal.

Heimdal is an implementation of Kerberos 5 (and some more stuff) largely
written in Sweden.

ok sthen@@

Note that it is not enabled yet because none of the requesters for this
port stood up to give me any feedback nor OK. Also this is still a WIP, it
may not even build with all the recent changes in base.
@
text
@d1 1
a1 1
$OpenBSD$
d6 2
a7 2
--- lib/hx509/softp11.c.orig	Sun Dec  9 23:06:44 2012
+++ lib/hx509/softp11.c	Thu Apr 24 14:15:52 2014
d14 1
a14 1
 #include "pkcs11.h"
d40 1
a40 1
@@@@ -868,7 +876,9 @@@@ C_Initialize(CK_VOID_PTR a)
d50 1
a50 1
@@@@ -1114,6 +1124,7 @@@@ C_OpenSession(CK_SLOT_ID slotID,
d58 1
a58 1
@@@@ -1129,10 +1140,15 @@@@ C_OpenSession(CK_SLOT_ID slotID,
@

