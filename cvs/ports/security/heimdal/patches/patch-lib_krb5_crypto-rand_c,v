head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.10
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.6
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.12.17.14.58.31;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	MFuneOA792oMhnFq;

1.1
date	2014.07.13.14.10.13;	author ajacoutot;	state Exp;
branches;
next	;
commitid	R7CQhUQNdJfZrGZj;


desc
@@


1.2
log
@Update to heimdal-7.0.3.
This is still an RC but the final version is supposed to come out in a
couple of days. Committing early to catch regressions and all.
Not much depends on this in ports anyway...
@
text
@$OpenBSD$

Simpler: just use arc4random_buf(3).

--- lib/krb5/crypto-rand.c.orig	Sat Dec 17 14:01:13 2016
+++ lib/krb5/crypto-rand.c	Sat Dec 17 14:21:27 2016
@@@@ -36,53 +36,6 @@@@
 #undef HEIMDAL_WARN_UNUSED_RESULT_ATTRIBUTE
 #define HEIMDAL_WARN_UNUSED_RESULT_ATTRIBUTE
 
-#define ENTROPY_NEEDED 128
-
-static HEIMDAL_MUTEX crypto_mutex = HEIMDAL_MUTEX_INITIALIZER;
-
-static int
-seed_something(void)
-{
-#ifndef NO_RANDFILE
-    char buf[1024], seedfile[256];
-
-    /* If there is a seed file, load it. But such a file cannot be trusted,
-       so use 0 for the entropy estimate */
-    if (RAND_file_name(seedfile, sizeof(seedfile))) {
-	int fd;
-	fd = open(seedfile, O_RDONLY | O_BINARY | O_CLOEXEC);
-	if (fd >= 0) {
-	    ssize_t ret;
-	    rk_cloexec(fd);
-	    ret = read(fd, buf, sizeof(buf));
-	    if (ret > 0)
-		RAND_add(buf, ret, 0.0);
-	    close(fd);
-	} else
-	    seedfile[0] = '\0';
-    } else
-	seedfile[0] = '\0';
-#endif
-
-    /* Calling RAND_status() will try to use /dev/urandom if it exists so
-       we do not have to deal with it. */
-    if (RAND_status() != 1) {
-	/* TODO: Once a Windows CryptoAPI RAND method is defined, we
-	   can use that and failover to another method. */
-    }
-
-    if (RAND_status() == 1)	{
-#ifndef NO_RANDFILE
-	/* Update the seed file */
-	if (seedfile[0])
-	    RAND_write_file(seedfile);
-#endif
-
-	return 0;
-    } else
-	return -1;
-}
-
 /**
  * Fill buffer buf with len bytes of PRNG randomness that is ok to use
  * for key generation, padding and public diclosing the randomness w/o
@@@@ -103,24 +56,8 @@@@ HEIMDAL_WARN_UNUSED_RESULT_ATTRIBUTE
 KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL
 krb5_generate_random(void *buf, size_t len)
 {
-    static int rng_initialized = 0;
-    int ret;
-
-    HEIMDAL_MUTEX_lock(&crypto_mutex);
-    if (!rng_initialized) {
-	if (seed_something()) {
-            HEIMDAL_MUTEX_unlock(&crypto_mutex);
-	    return HEIM_ERR_RANDOM_OFFLINE;
-        }
-	rng_initialized = 1;
-    }
-    if (RAND_bytes(buf, len) <= 0)
-	ret = HEIM_ERR_RANDOM_OFFLINE;
-    else
-	ret = 0;
-    HEIMDAL_MUTEX_unlock(&crypto_mutex);
-
-    return ret;
+    arc4random_buf(buf, len);
+    return (0); /* arc4random_buf(3) cannot fail */
 }
 
 /**
@


1.1
log
@Import heimdal-1.5.3; aka resurrect security/heimdal.

Heimdal is an implementation of Kerberos 5 (and some more stuff) largely
written in Sweden.

ok sthen@@

Note that it is not enabled yet because none of the requesters for this
port stood up to give me any feedback nor OK. Also this is still a WIP, it
may not even build with all the recent changes in base.
@
text
@d3 1
a3 1
Make it build with LibreSSL.
d5 5
a9 5
--- lib/krb5/crypto-rand.c.orig	Thu Apr 24 14:36:16 2014
+++ lib/krb5/crypto-rand.c	Thu Apr 24 14:36:12 2014
@@@@ -33,77 +33,8 @@@@
 
 #include "krb5_locl.h"
d18 1
d37 1
a41 13
-#ifndef _WIN32
-	krb5_context context;
-	const char *p;
-
-	/* Try using egd */
-	if (!krb5_init_context(&context)) {
-	    p = krb5_config_get_string(context, NULL, "libdefaults",
-				       "egd_socket", NULL);
-	    if (p != NULL)
-		RAND_egd_bytes(p, ENTROPY_NEEDED);
-	    krb5_free_context(context);
-	}
-#else
a43 1
-#endif
d47 1
d51 1
d58 6
a63 2
 KRB5_LIB_FUNCTION void KRB5_LIB_CALL
 krb5_generate_random_block(void *buf, size_t len)
d66 1
d70 4
a73 4
-	if (seed_something())
-	    krb5_abortx(NULL, "Fatal: could not seed the "
-			"random number generator");
-
d76 4
d81 4
a84 3
-    if (RAND_bytes(buf, len) <= 0)
-	krb5_abortx(NULL, "Failed to generate random block");
+	arc4random_buf(buf, len);
d86 2
@

