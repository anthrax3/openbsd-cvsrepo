head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.10
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.6
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.07.13.14.10.13;	author ajacoutot;	state Exp;
branches;
next	;
commitid	R7CQhUQNdJfZrGZj;


desc
@@


1.1
log
@Import heimdal-1.5.3; aka resurrect security/heimdal.

Heimdal is an implementation of Kerberos 5 (and some more stuff) largely
written in Sweden.

ok sthen@@

Note that it is not enabled yet because none of the requesters for this
port stood up to give me any feedback nor OK. Also this is still a WIP, it
may not even build with all the recent changes in base.
@
text
@$OpenBSD$

Use HAVE_ARC4RANDOM and choose to call arc4random() instead of srand()
and rand() and friends.

--- appl/xnlock/xnlock.c.orig	Sun Dec  9 23:06:44 2012
+++ appl/xnlock/xnlock.c	Thu Apr 24 15:41:58 2014
@@@@ -377,7 +377,9 @@@@ walk(int dir)
 static long
 my_random (void)
 {
-#ifdef HAVE_RANDOM
+#if defined (HAVE_ARC4RANDOM)
+    return arc4random();
+#elif defined (HAVE_RANDOM)
     return random();
 #else
     return rand();
@@@@ -938,7 +940,9 @@@@ main (int argc, char **argv)
       strlcpy(login, pw->pw_name, sizeof(login));
     }
 
-#if defined(HAVE_SRANDOMDEV)
+#if defined(HAVE_ARC4RANDOM)
+    /* do nothing */
+#elif defined(HAVE_SRANDOMDEV)
     srandomdev();
 #elif defined(HAVE_RANDOM)
     srandom(time(NULL));
@
