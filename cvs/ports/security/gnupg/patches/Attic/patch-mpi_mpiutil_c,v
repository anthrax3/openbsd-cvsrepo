head	1.1;
access;
symbols
	OPENBSD_5_6:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2015.03.03.14.09.18;	author jca;	state dead;
branches
	1.1.2.1;
next	;
commitid	PhE3mGcIv1AAclJy;

1.1.2.1
date	2015.03.03.14.09.18;	author jca;	state Exp;
branches;
next	;
commitid	PhE3mGcIv1AAclJy;


desc
@@


1.1
log
@file patch-mpi_mpiutil_c was initially added on branch OPENBSD_5_6.
@
text
@@


1.1.2.1
log
@SECURITY backport for gnupg-1.4.17

This merge two fixes from gnupg-1.4.19:

 * Use ciphertext blinding for Elgamal decryption [CVE-2014-3591].
   See http://www.cs.tau.ac.il/~tromer/radioexp/ for details.

 * Fixed data-dependent timing variations in modular exponentiation
   [related to CVE-2015-0837, Last-Level Cache Side-Channel Attacks
   are Practical].

ok jasper@@
@
text
@a0 42
$OpenBSD$

- CVE-2015-0837: Fixed data-dependent timing variations in modular exponentiation
  http://git.gnupg.org/cgi-bin/gitweb.cgi?p=gnupg.git;a=commit;h=6cbc75e71295f23431c4ab95edc7573f2fc28476

--- mpi/mpiutil.c.orig	Mon Jun 23 13:19:26 2014
+++ mpi/mpiutil.c	Sun Mar  1 17:24:58 2015
@@@@ -433,6 +433,34 @@@@ mpi_set( MPI w, MPI u)
 
 
 void
+mpi_set_cond( MPI w, MPI u, unsigned long set)
+{
+    mpi_size_t i;
+    mpi_size_t nlimbs = u->alloced;
+    mpi_limb_t mask = ((mpi_limb_t)0) - !!set;
+    mpi_limb_t x;
+
+    if (w->alloced != u->alloced)
+      log_bug ("mpi_set_cond: different sizes\n");
+
+    for (i = 0; i < nlimbs; i++)
+      {
+        x = mask & (w->d[i] ^ u->d[i]);
+        w->d[i] = w->d[i] ^ x;
+      }
+
+    x = mask & (w->nlimbs ^ u->nlimbs);
+    w->nlimbs = w->nlimbs ^ x;
+
+    x = mask & (w->nbits ^ u->nbits);
+    w->nbits = w->nbits ^ x;
+
+    x = mask & (w->sign ^ u->sign);
+    w->sign = w->sign ^ x;
+}
+
+
+void
 mpi_set_ui( MPI w, unsigned long u)
 {
     RESIZE_IF_NEEDED(w, 1);
@

