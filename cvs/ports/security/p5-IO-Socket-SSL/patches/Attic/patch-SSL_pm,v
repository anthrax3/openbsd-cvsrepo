head	1.1;
access;
symbols
	OPENBSD_4_8:1.1.0.6
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_5:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2009.10.18.03.01.42;	author william;	state dead;
branches
	1.1.2.1
	1.1.4.1
	1.1.6.1;
next	;

1.1.2.1
date	2009.10.18.03.01.42;	author william;	state Exp;
branches;
next	;

1.1.4.1
date	2009.10.26.03.18.45;	author william;	state Exp;
branches;
next	;

1.1.6.1
date	2010.12.08.18.44.51;	author jasper;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2010.12.09.17.51.16;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-SSL_pm was initially added on branch OPENBSD_4_5.
@
text
@@


1.1.6.1
log
@- Apply fix for SA42508
Perl IO::Socket::SSL "verify_mode" Security Bypass Security Issue
@
text
@a0 23
$OpenBSD$

Security fix for SA42508,
Perl IO::Socket::SSL "verify_mode" Security Bypass Security Issue

Backported from IO-Socket-SSL 1.35

--- SSL.pm.orig	Tue Dec  7 19:31:43 2010
+++ SSL.pm	Tue Dec  7 19:31:39 2010
@@@@ -1370,12 +1371,7 @@@@ sub new {
 	if ( $verify_mode != Net::SSLeay::VERIFY_NONE() and 
 		! Net::SSLeay::CTX_load_verify_locations( 
 			$ctx, $arg_hash->{SSL_ca_file} || '',$arg_hash->{SSL_ca_path} || '') ) {
-		if ( ! $arg_hash->{SSL_ca_file} && ! $arg_hash->{SSL_ca_path} ) {
-			carp("No certificate verification because neither SSL_ca_file nor SSL_ca_path known");
-			$verify_mode = Net::SSLeay::VERIFY_NONE();
-		} else {
-			return IO::Socket::SSL->error("Invalid certificate authority locations");
-		}
+		return IO::Socket::SSL->error("Invalid certificate authority locations");
 	}
 
 	if ($arg_hash->{'SSL_check_crl'}) {
@


1.1.6.2
log
@Apply a fix extracted from 1.37 for  fix with a fix from 1.37 for http://rt.cpa$
which was introduced with 1.35/SA42508 fix.
@
text
@d1 1
a1 1
$OpenBSD: patch-SSL_pm,v 1.1.6.1 2010/12/08 18:44:51 jasper Exp $
d6 1
a6 1
Backported from IO-Socket-SSL 1.35 and 1.37.
d10 1
a10 3
@@@@ -1368,14 +1369,10 @@@@ sub new {
 
 	my $verify_mode = $arg_hash->{SSL_verify_mode};
a11 1
+	    ( defined $arg_hash->{SSL_ca_file} || defined $arg_hash->{SSL_ca_path}) and
@


1.1.4.1
log
@SECURITY FIX

verify_hostname_of_cert could match a hostname's prefix when no
wildcard was given
@
text
@a0 25
Security fix:  verify_hostname_of_cert could match a hostname's prefix
when no wildcard was given


$OpenBSD$
--- SSL.pm.orig	Wed Apr  1 03:48:35 2009
+++ SSL.pm	Sun Oct 25 21:25:23 2009
@@@@ -1078,7 +1078,7 @@@@ sub dump_peer_certificate {
 			$ip4 = inet_aton( $identity ) or croak "'$identity' is not IPv4, but neither IPv6 nor hostname";
 		} else {
 			# assume hostname
-			if ( $identity !~m{^[a-zA-Z0-9-_\.]+$} ) {
+			if ( $identity !~m{^[\w\-\.]+$} ) {
 				$identity = idn_to_ascii($identity) or
 					croak "Warning: Given name '$identity' could not be converted to IDNA!";
 			}
@@@@ -1100,7 +1100,7 @@@@ sub dump_peer_certificate {
 			} elsif ( $wtyp eq 'leftmost' and $name =~m{^\*(\..+)$} ) {
 				$pattern = qr{^[\w\-]*\Q$1\E$}i;
 			} else {
-				$pattern = qr{^\Q$name}i;
+				$pattern = qr{^\Q$name\E$}i;
 			}
 			return $identity =~ $pattern;
 		};
@


1.1.2.1
log
@SECURITY FIX

verify_hostname_of_cert could match a hostname's prefix when no
wildcard was given

tweaked and ok bluhm@@
@
text
@a0 25
Security fix:  verify_hostname_of_cert could match a hostname's prefix
when no wildcard was given


$OpenBSD$
--- SSL.pm.orig	Sat Jan 24 01:30:08 2009
+++ SSL.pm	Fri Oct 16 21:01:35 2009
@@@@ -1077,7 +1077,7 @@@@ sub dump_peer_certificate {
 			$ip4 = inet_aton( $identity ) or croak "'$identity' is not IPv4, but neither IPv6 nor hostname";
 		} else {
 			# assume hostname
-			if ( $identity !~m{^[a-zA-Z0-9-_\.]+$} ) {
+			if ( $identity !~m{^[\w\-\.]+$} ) {
 				$identity = idn_to_ascii($identity) or
 					croak "Warning: Given name '$identity' could not be converted to IDNA!";
 			}
@@@@ -1099,7 +1099,7 @@@@ sub dump_peer_certificate {
 			} elsif ( $wtyp eq 'leftmost' and $name =~m{^\*(\..+)$} ) {
 				$pattern = qr{^[\w\-]*\Q$1\E$}i;
 			} else {
-				$pattern = qr{^\Q$name}i;
+				$pattern = qr{^\Q$name\E$}i;
 			}
 			return $identity =~ $pattern;
 		};
@

