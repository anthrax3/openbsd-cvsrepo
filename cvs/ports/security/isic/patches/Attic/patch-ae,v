head	1.2;
access;
symbols
	dugsong_2000-Jan-24:1.1.1.1 dugsong:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2000.02.23.22.57.49;	author dugsong;	state dead;
branches;
next	1.1;

1.1
date	2000.01.24.19.58.17;	author dugsong;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.01.24.19.58.17;	author dugsong;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to version 0.05
@
text
@--- tcpsic.c.orig	Tue Dec  7 16:09:04 1999
+++ tcpsic.c	Mon Jan 24 14:26:00 2000
@@@@ -91,7 +91,7 @@@@
 			dst_ip_rand = 1;
 			break;
 		}
-		if (!(dst_ip = name_resolve(optarg, 1))) {
+		if (!(dst_ip = libnet_name_resolve(optarg, 1))) {
 			fprintf(stderr, "Bad dest IP\n");
 			exit( -1 );
 		}
@@@@ -109,7 +109,7 @@@@
 			src_ip_rand = 1;
 			break;
 		}
-		if (!(src_ip = name_resolve(optarg, 1))) {
+		if (!(src_ip = libnet_name_resolve(optarg, 1))) {
 			fprintf(stderr, "Bad source IP\n");
 			exit( -1 );
 		}
@@@@ -180,7 +180,7 @@@@
 		exit( -1 );
 	}
 
-	if ( (sock = open_raw_sock(IPPROTO_RAW)) == -1 ) {
+	if ( (sock = libnet_open_raw_sock(IPPROTO_RAW)) == -1 ) {
 		perror("socket: ");
 		exit(EXIT_FAILURE);
 	}
@@@@ -302,7 +302,7 @@@@
 				(u_int16_t) payload[cx] = rand() & 0xffff;
 
 		if ( rand() <= (RAND_MAX * TCPCksm) )
-			do_checksum(buf, IPPROTO_TCP, (tcp->th_off << 2)
+			libnet_do_checksum(buf, IPPROTO_TCP, (tcp->th_off << 2)
 						+ payload_s);
 		else	tcp->th_sum = rand() & 0xffff;
 		
@@@@ -318,7 +318,7 @@@@
  		 
 		if ( skip <= acx ) {
 			for ( cx = 0; cx < repeat; cx++ ) {
-				c = write_ip(sock, buf, packet_len);
+				c = libnet_write_ip(sock, buf, packet_len);
 				datapushed+=c;
 			}
 			if (c < (packet_len) ) {
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@ISIC - IP stack integrity checker
@
text
@@
