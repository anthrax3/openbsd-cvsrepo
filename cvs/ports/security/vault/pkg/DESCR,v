head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.4
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.2
	OPENBSD_6_0_BASE:1.1.1.1
	ajacoutot_20160512:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.05.12.15.53.33;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;
commitid	jzrHdFW67bg62TFq;

1.1.1.1
date	2016.05.12.15.53.33;	author ajacoutot;	state Exp;
branches;
next	;
commitid	jzrHdFW67bg62TFq;


desc
@@



1.1
log
@Initial revision
@
text
@Vault is a tool for securely accessing secrets. A secret is anything that you
want to tightly control access to, such as API keys, passwords, certificates,
and more. Vault provides a unified interface to any secret, while providing
tight access control and recording a detailed audit log.

A modern system requires access to a multitude of secrets: database credentials,
API keys for external services, credentials for service-oriented architecture
communication, etc. Understanding who is accessing what secrets is already very
difficult and platform-specific. Adding on key rolling, secure storage, and
detailed audit logs is almost impossible without a custom solution. This is
where Vault steps in.
@


1.1.1.1
log
@Import vault-0.5.2.

Vault is a tool for securely accessing secrets. A secret is anything that you
want to tightly control access to, such as API keys, passwords, certificates,
and more. Vault provides a unified interface to any secret, while providing
tight access control and recording a detailed audit log.
<...>

ok jasper@@
@
text
@@
