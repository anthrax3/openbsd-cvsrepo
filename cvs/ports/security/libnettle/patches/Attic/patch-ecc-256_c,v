head	1.1;
access;
symbols
	OPENBSD_5_8:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2016.02.03.13.24.38;	author jasper;	state dead;
branches
	1.1.2.1;
next	;
commitid	KJwsKWcPeOdk2gHw;

1.1.2.1
date	2016.02.03.13.24.38;	author jasper;	state Exp;
branches;
next	;
commitid	KJwsKWcPeOdk2gHw;


desc
@@


1.1
log
@file patch-ecc-256_c was initially added on branch OPENBSD_5_8.
@
text
@@


1.1.2.1
log
@- Security fixes for CVE-2015-8803 - CVE-2015-8805
- -current is not affected after the update to 3.2

ok aja@@ (MAINTAINER)
@
text
@a0 50
$OpenBSD$

Security fix for CVE-2015-8803, CVE-2015-8805
https://git.lysator.liu.se/nettle/nettle/commit/c71d2c9d20eeebb985e3872e4550137209e3ce4d

--- ecc-256.c.orig	Fri Apr 24 19:22:03 2015
+++ ecc-256.c	Wed Feb  3 14:03:06 2016
@@@@ -113,8 +113,19 @@@@ ecc_256_modp (const struct ecc_modulo *p, mp_limb_t *r
 
       assert (q2 < 2);
 
-      /* We multiply by two low limbs of p, 2^96 - 1, so we could use
-	 shifts rather than mul. */
+      /*
+	 n-1 n-2 n-3 n-4
+        +---+---+---+---+
+        | u1| u0| u low |
+        +---+---+---+---+
+          - | q1(2^96-1)|
+            +-------+---+
+            |q2(2^.)|
+            +-------+
+
+	 We multiply by two low limbs of p, 2^96 - 1, so we could use
+	 shifts rather than mul.
+      */
       t = mpn_submul_1 (rp + n - 4, p->m, 2, q1);
       t += cnd_sub_n (q2, rp + n - 3, p->m, 1);
       t += (-q2) & 0xffffffff;
@@@@ -124,7 +135,10 @@@@ ecc_256_modp (const struct ecc_modulo *p, mp_limb_t *r
       u0 -= t;
       t = (u1 < cy);
       u1 -= cy;
-      u1 += cnd_add_n (t, rp + n - 4, p->m, 3);
+
+      cy = cnd_add_n (t, rp + n - 4, p->m, 2);
+      u0 += cy;
+      u1 += (u0 < cy);
       u1 -= (-t) & 0xffffffff;
     }
   rp[2] = u0;
@@@@ -211,7 +225,7 @@@@ ecc_256_modq (const struct ecc_modulo *q, mp_limb_t *r
 
       /* Conditional add of p */
       u1 += t;
-      u2 += (t<<32) + (u0 < t);
+      u2 += (t<<32) + (u1 < t);
 
       t = cnd_add_n (t, rp + n - 4, q->m, 2);
       u1 += t;
@

