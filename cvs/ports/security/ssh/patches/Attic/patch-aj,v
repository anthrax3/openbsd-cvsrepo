head	1.6;
access;
symbols
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2000.08.27.20.45.16;	author turan;	state dead;
branches;
next	1.5;

1.5
date	99.12.14.01.35.04;	author dugsong;	state Exp;
branches;
next	1.4;

1.4
date	99.05.14.18.35.30;	author brad;	state dead;
branches;
next	1.3;

1.3
date	98.12.20.21.04.34;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	98.06.02.18.10.02;	author marc;	state dead;
branches;
next	1.1;

1.1
date	97.11.17.05.58.44;	author todd;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove ssh port.  discussed with theo.
@
text
@--- sshd.c.orig	Mon Dec 13 20:27:21 1999
+++ sshd.c	Mon Dec 13 20:28:45 1999
@@@@ -1496,8 +1496,10 @@@@
   /* Read clients reply (cipher type and session key). */
   packet_read_expect(SSH_CMSG_SESSION_KEY);
 
-  /* Get cipher type. */
+  /* Get cipher type and check whether we accept this. */
   cipher_type = packet_get_char();
+  if (!(cipher_mask() & (1 << cipher_type)))
+    packet_disconnect("Warning: client selects unsupported cipher.");
 
   /* Get check bytes from the packet.  These must match those we sent earlier
      with the public key packet. */
@


1.5
log
@fix bug which allowed for unencrypted sessions - markus@@
@
text
@@


1.4
log
@upgrade to ssh 1.2.27
@
text
@d1 14
a14 133
--- auth-kerberos.c.orig	Wed Jul  8 11:40:35 1998
+++ auth-kerberos.c	Mon Dec  7 23:39:10 1998
@@@@ -63,11 +63,11 @@@@
 	  krb5_auth_con_free(ssh_context, auth_context);
 	  auth_context = 0;
 	}
-      log_msg("Kerberos ticket authentication of user %s failed: %s",
+      log_msg("Kerberos ticket authentication of user %.100s failed: %.100s",
 	      server_user, error_message(problem));
       
-      debug("Kerberos krb5_auth_con_genaddrs (%s).", error_message(problem));
-      packet_send_debug("Kerberos krb5_auth_con_genaddrs: %s",
+      debug("Kerberos krb5_auth_con_genaddrs (%.100s).", error_message(problem));
+      packet_send_debug("Kerberos krb5_auth_con_genaddrs: %.100s",
 			error_message(problem));
       return 0;
     }
@@@@ -80,11 +80,11 @@@@
 	  krb5_auth_con_free(ssh_context, auth_context);
 	  auth_context = 0;  
 	}
-      log_msg("Kerberos ticket authentication of user %s failed: %s",
+      log_msg("Kerberos ticket authentication of user %.100s failed: %.100s",
 	      server_user, error_message(problem));
       
-      debug("Kerberos V5 rd_req failed (%s).", error_message(problem));
-      packet_send_debug("Kerberos V5 krb5_rd_req: %s", error_message(problem));
+      debug("Kerberos V5 rd_req failed (%.100s).", error_message(problem));
+      packet_send_debug("Kerberos V5 krb5_rd_req: %.100s", error_message(problem));
       return 0;
     }
   
@@@@ -93,22 +93,22 @@@@
   if (problem)
     {
       krb5_free_ticket(ssh_context, ticket);
-      log_msg("Kerberos ticket authentication of user %s failed: %s",
+      log_msg("Kerberos ticket authentication of user %.100s failed: %.100s",
 	      server_user, error_message(problem));
       
-      debug("Kerberos krb5_unparse_name failed (%s).", error_message(problem));
-      packet_send_debug("Kerberos krb5_unparse_name: %s",
+      debug("Kerberos krb5_unparse_name failed (%.100s).", error_message(problem));
+      packet_send_debug("Kerberos krb5_unparse_name: %.100s",
 			error_message(problem));
       return 0;
     }
   if (strncmp(server, "host/", strlen("host/")))
     {
       krb5_free_ticket(ssh_context, ticket);
-      log_msg("Kerberos ticket authentication of user %s failed: invalid service name (%s)",
+      log_msg("Kerberos ticket authentication of user %.100s failed: invalid service name (%.100s)",
 	      server_user, server);
       
-      debug("Kerberos invalid service name (%s).", server);
-      packet_send_debug("Kerberos invalid service name (%s).", server);
+      debug("Kerberos invalid service name (%.100s).", server);
+      packet_send_debug("Kerberos invalid service name (%.100s).", server);
       krb5_xfree(server);
       return 0;
     }
@@@@ -122,11 +122,11 @@@@
   
   if (problem)
     {
-      log_msg("Kerberos ticket authentication of user %s failed: %s",
+      log_msg("Kerberos ticket authentication of user %.100s failed: %.100s",
 	      server_user, error_message(problem));
-      debug("Kerberos krb5_copy_principal failed (%s).", 
+      debug("Kerberos krb5_copy_principal failed (%.100s).", 
 	    error_message(problem));
-      packet_send_debug("Kerberos krb5_copy_principal: %s", 
+      packet_send_debug("Kerberos krb5_copy_principal: %.100s", 
 			error_message(problem));
       return 0;
     }
@@@@ -135,11 +135,11 @@@@
   /* Make the reply - so that mutual authentication can be done */
   if ((problem = krb5_mk_rep(ssh_context, auth_context, &reply)))
     {
-      log_msg("Kerberos ticket authentication of user %s failed: %s",
+      log_msg("Kerberos ticket authentication of user %.100s failed: %.100s",
 	      server_user, error_message(problem));
-      debug("Kerberos krb5_mk_rep failed (%s).",
+      debug("Kerberos krb5_mk_rep failed (%.100s).",
 	    error_message(problem));
-      packet_send_debug("Kerberos krb5_mk_rep failed: %s",
+      packet_send_debug("Kerberos krb5_mk_rep failed: %.100s",
 			error_message(problem));
       return 0;
     }
@@@@ -160,7 +160,7 @@@@
 {
   krb5_creds **creds;
   krb5_error_code retval;
-  static char ccname[128];
+  static char ccname[512];
   krb5_ccache ccache = NULL;
   struct passwd *pwd;
   extern char *ticket;
@@@@ -208,9 +208,9 @@@@
   
   if (retval = krb5_rd_cred(ssh_context, auth_context, krb5data, &creds, NULL))
     {
-      log_msg("Kerberos V5 tgt rejected for user %.100s : %s", server_user,
+      log_msg("Kerberos V5 tgt rejected for user %.100s : %.100s", server_user,
 	      error_message(retval));
-      packet_send_debug("Kerberos V5 tgt rejected for %.100s : %s",
+      packet_send_debug("Kerberos V5 tgt rejected for %.100s : %.100s",
 			server_user,
 			error_message(retval));
       packet_start(SSH_SMSG_FAILURE);
@@@@ -234,7 +234,7 @@@@
     goto errout;
   
   ticket = xmalloc(strlen(ccname) + 1);
-  (void) sprintf(ticket, "%s", ccname);
+  (void) sprintf(ticket, "%.100s", ccname);
   
   /* Successful */
   packet_start(SSH_SMSG_SUCCESS);
@@@@ -244,9 +244,9 @@@@
   
 errout:
   krb5_free_tgt_creds(ssh_context, creds);
-  log_msg("Kerberos V5 tgt rejected for user %.100s :%s", server_user,
+  log_msg("Kerberos V5 tgt rejected for user %.100s :%.100s", server_user,
 	  error_message(retval));
-  packet_send_debug("Kerberos V5 tgt rejected for %.100s : %s", server_user,
+  packet_send_debug("Kerberos V5 tgt rejected for %.100s : %.100s", server_user,
 		    error_message(retval));
   packet_start(SSH_SMSG_FAILURE);
   packet_send();
@


1.3
log
@kerberos *5* patches; Matt Riben <matter@@superlink.net>
@
text
@@


1.2
log
@update to ssh 1.2.23
@
text
@d1 133
a133 40
*** configure.in.orig	Wed Apr 23 08:40:06 1997
--- configure.in	Fri Apr 25 12:41:26 1997
***************
*** 616,624 ****
  
  export CFLAGS CC
  
! # Socket pairs appear to be broken on several systems.  I don't know exactly
! # where, so I'll use pipes everywhere for now.
! AC_DEFINE(USE_PIPES)
  
  AC_MSG_CHECKING([that the compiler works])
  AC_TRY_RUN([ main(int ac, char **av) { return 0; } ],
--- 616,624 ----
  
  export CFLAGS CC
  
! dnl # Socket pairs appear to be broken on several systems.  I don't know exactly
! dnl # where, so I'll use pipes everywhere for now.
! dnl AC_DEFINE(USE_PIPES)
  
  AC_MSG_CHECKING([that the compiler works])
  AC_TRY_RUN([ main(int ac, char **av) { return 0; } ],
***************
*** 671,677 ****
  
  AC_HEADER_STDC
  AC_HEADER_SYS_WAIT
! AC_CHECK_HEADERS(unistd.h rusage.h sys/time.h lastlog.h utmp.h shadow.h)
  AC_CHECK_HEADERS(sgtty.h sys/select.h sys/ioctl.h machine/endian.h)
  AC_CHECK_HEADERS(paths.h usersec.h utime.h netinet/in_systm.h netinet/in_system.h netinet/ip.h netinet/tcp.h ulimit.h)
  AC_HEADER_TIME
--- 671,677 ----
  
  AC_HEADER_STDC
  AC_HEADER_SYS_WAIT
! AC_CHECK_HEADERS(unistd.h rusage.h sys/time.h lastlog.h login_cap.h utmp.h shadow.h)
  AC_CHECK_HEADERS(sgtty.h sys/select.h sys/ioctl.h machine/endian.h)
  AC_CHECK_HEADERS(paths.h usersec.h utime.h netinet/in_systm.h netinet/in_system.h netinet/ip.h netinet/tcp.h ulimit.h)
  AC_HEADER_TIME
@


1.1
log
@+ ssh (1.2.21)
@
text
@@

