head	1.2;
access;
symbols
	obecian_2001-Feb-06:1.1.1.1 obecian:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2001.04.21.03.32.33;	author obecian;	state dead;
branches;
next	1.1;

1.1
date	2001.02.06.08.07.48;	author obecian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.02.06.08.07.48;	author obecian;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to crank-0.1.1
(BUGFIX: resolved segfault on execution)
@
text
@--- crank.h.orig	Mon Jan 29 23:44:56 2001
+++ crank.h	Mon Jan 29 23:47:29 2001
@@@@ -67,9 +67,9 @@@@ typedef struct {
 
 #define GLOBAL_TRANSFORMED_TEXT (gtk_editable_get_chars(GTK_EDITABLE(textarea), 0, -1))
 
-#define DEFAULT_SLFT "data/slft.dat"
-#define DEFAULT_BIFT "data/bift.dat"
-#define DEFAULT_TRIFT "data/trift.dat"
+#define DEFAULT_SLFT "!!LOCALBASE!!/share/crank/slft.dat"
+#define DEFAULT_BIFT "!!LOCALBASE!!/share/crank/bift.dat"
+#define DEFAULT_TRIFT "!!LOCALBASE!!/share/crank/trift.dat"
 
 #define STR_FREQUENCY "Frequency"
 #define STR_STANDARD_FREQUENCY "Standard Frequency"
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@
Crank is short for "CRyptANalysis toolKit", and its overall purpose
is to provide a powerful and extensible environment for solving
classical (pen-and-paper) ciphers, providing as much automation as
possible. Classical ciphers include common schemes like monoalphabetic
substitutions, where each letter of the alphabet is mapped to another
(usually different) letter consistently through the text. The first
version of Crank is restricting itself to these special ciphers. Other
algorithms forever devoid of Crank's attentions include Enigma, RSA,
DES, MurkelFish, or anything else invented after 1900.

@
text
@@
