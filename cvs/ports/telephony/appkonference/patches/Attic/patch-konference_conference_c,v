head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2012.12.07.13.01.05;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2012.10.24.09.37.21;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2012.03.22.21.31.18;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2011.01.24.08.23.27;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@rm appkonference, suggested a while ago by dhill; the built-in conferencing
in recent Asterisk works fine on OpenBSD, whereas appkonference  is somewhat
fragile, not well-maintained upstream, and only works with i386/amd64.
@
text
@$OpenBSD: patch-konference_conference_c,v 1.3 2012/10/24 09:37:21 sthen Exp $
--- konference/conference.c.orig	Mon Jul 16 14:12:48 2012
+++ konference/conference.c	Tue Oct 23 09:57:09 2012
@@@@ -122,7 +122,7 @@@@ static void conference_exec()
 		// check expirations
 		if ( outqueue.data != 1 ) 
 		{
-			ast_log(LOG_NOTICE, "kqueue expirations = %ld!?\n", outqueue.data);
+			ast_log(LOG_NOTICE, "kqueue expirations = %d!?\n", outqueue.data);
 		}
 #endif
 
@@@@ -466,6 +466,8 @@@@ static ast_conference* find_conf( const char* name )
 // This function should be called with conflist_lock held
 static ast_conference* create_conf( char* name, ast_conf_member* member )
 {
+	struct ast_format tmp_fmt;
+
 	//
 	// allocate memory for conference
 	//
@@@@ -497,7 +499,7 @@@@ static ast_conference* create_conf( char* name, ast_co
 	// initialize conference
 	//
 
-	conf->conference_thread = -1 ;
+	conf->conference_thread = NULL ;
 
 	// record start time
 	conf->time_entered = ast_tvnow();
@@@@ -511,27 +513,49 @@@@ static ast_conference* create_conf( char* name, ast_co
 	// build translation paths
 	conf->from_slinear_paths[ AC_SLINEAR_INDEX ] = NULL ;
 #ifndef AC_USE_G722
-	conf->from_slinear_paths[ AC_ULAW_INDEX ] = ast_translator_build_path( AST_FORMAT_ULAW, AST_FORMAT_SLINEAR ) ;
-	conf->from_slinear_paths[ AC_ALAW_INDEX ] = ast_translator_build_path( AST_FORMAT_ALAW, AST_FORMAT_SLINEAR ) ;
-	conf->from_slinear_paths[ AC_GSM_INDEX ] = ast_translator_build_path( AST_FORMAT_GSM, AST_FORMAT_SLINEAR ) ;
+	conf->from_slinear_paths[ AC_ULAW_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_ULAW, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR, 0) ) ;
+	conf->from_slinear_paths[ AC_ALAW_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_ALAW, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR, 0) ) ;
+	conf->from_slinear_paths[ AC_GSM_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_GSM, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR, 0) ) ;
 #ifdef	AC_USE_SPEEX
-	conf->from_slinear_paths[ AC_SPEEX_INDEX ] = ast_translator_build_path( AST_FORMAT_SPEEX, AST_FORMAT_SLINEAR ) ;
+	conf->from_slinear_paths[ AC_SPEEX_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_SPEEX, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR, 0) ) ;
 #endif
 #ifdef AC_USE_G729A
-	conf->from_slinear_paths[ AC_G729A_INDEX ] = ast_translator_build_path( AST_FORMAT_G729A, AST_FORMAT_SLINEAR ) ;
+	conf->from_slinear_paths[ AC_G729A_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_G729A, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR, 0) ) ;
 #endif
 #else
-	conf->from_slinear_paths[ AC_ULAW_INDEX ] = ast_translator_build_path( AST_FORMAT_ULAW, AST_FORMAT_SLINEAR16 ) ;
-	conf->from_slinear_paths[ AC_ALAW_INDEX ] = ast_translator_build_path( AST_FORMAT_ALAW, AST_FORMAT_SLINEAR16 ) ;
-	conf->from_slinear_paths[ AC_GSM_INDEX ] = ast_translator_build_path( AST_FORMAT_GSM, AST_FORMAT_SLINEAR16 ) ;
+	conf->from_slinear_paths[ AC_ULAW_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_ULAW, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
+	conf->from_slinear_paths[ AC_ALAW_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_ALAW, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
+	conf->from_slinear_paths[ AC_GSM_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_GSM, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
 #ifdef	AC_USE_SPEEX
-	conf->from_slinear_paths[ AC_SPEEX_INDEX ] = ast_translator_build_path( AST_FORMAT_SPEEX, AST_FORMAT_SLINEAR16 ) ;
+	conf->from_slinear_paths[ AC_SPEEX_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_SPEEX, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
 #endif
 #ifdef AC_USE_G729A
-	conf->from_slinear_paths[ AC_G729A_INDEX ] = ast_translator_build_path( AST_FORMAT_G729A, AST_FORMAT_SLINEAR16 ) ;
+	conf->from_slinear_paths[ AC_G729A_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_G729A, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
 #endif
 #ifdef AC_USE_G722
-	conf->from_slinear_paths[ AC_G722_INDEX ] = ast_translator_build_path( AST_FORMAT_G722, AST_FORMAT_SLINEAR16 ) ;
+	conf->from_slinear_paths[ AC_G722_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_G722, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
 #endif
 #endif
 
@


1.3
log
@Fix appkonference with Asterisk 10.x; from dhill.

Note: this port may be removed in the future; users are recommended to
migrate to ConfBridge, which is part of Asterisk itself and has improved
greatly in the rewrite for Asterisk 10.x.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to appkonference 2.1, from dhill with tweaks by me
@
text
@d1 10
a10 7
$OpenBSD: patch-konference_conference_c,v 1.1 2011/01/24 08:23:27 sthen Exp $

asterisk 1.8 support; https://gist.github.com/661206

--- konference/conference.c.orig	Wed Aug 18 15:56:23 2010
+++ konference/conference.c	Sat Jan 22 20:19:21 2011
@@@@ -1213,7 +1213,7 @@@@ void remove_member( struct ast_conf_member* member, st
a11 1
 	ast_rwlock_unlock( &conf->lock );
d13 12
a24 2
-	DEBUG("removed member from conference, name => %s, remaining => %d\n", member->conf_name, membercount) ;
+	DEBUG("removed member from conference, name => %s, remaining => %d\n", conf->name, membercount) ;
d26 2
a27 9
 	// remove member from channel table
 	if ( member->bucket != NULL )
@@@@ -1221,7 +1221,7 @@@@ void remove_member( struct ast_conf_member* member, st
 		AST_LIST_LOCK (member->bucket ) ;
 		AST_LIST_REMOVE (member->bucket, member, hash_entry) ;
 		AST_LIST_UNLOCK (member->bucket ) ;
-		DEBUG("Removed %s from the channel table, bucket => %ld\n", member->chan->name, member->bucket - channel_table) ;
+		DEBUG("Removed %s from the channel table, bucket => %d\n", member->chan->name, member->bucket - channel_table) ;
 	}
d29 62
a90 32
 	// output to manager...
@@@@ -1245,8 +1245,8 @@@@ void remove_member( struct ast_conf_member* member, st
 		member->id,
 		member->flags,
 		member->chan->name,
-		member->chan->cid.cid_num ? member->chan->cid.cid_num : "unknown",
-		member->chan->cid.cid_name ? member->chan->cid.cid_name: "unknown",
+		member->chan->caller.id.number.str ? member->chan->caller.id.number.str : "unknown",
+		member->chan->caller.id.name.str ? member->chan->caller.id.name.str: "unknown",
 		tt,
 		moderators,
 		membercount
@@@@ -1469,8 +1469,8 @@@@ int manager_conference_list( struct mansession *s, con
 						conf->name,
 						member->id,
 						member->chan->name,
-						member->chan->cid.cid_num ? member->chan->cid.cid_num : "unknown",
-						member->chan->cid.cid_name ? member->chan->cid.cid_name : "unknown",
+						member->chan->caller.id.number.str ? member->chan->caller.id.number.str : "unknown",
+						member->chan->caller.id.name.str ? member->chan->caller.id.name.str : "unknown",
 						member->mute_audio ? "YES" : "NO",
 #ifdef	VIDEO
 						member->mute_video ? "YES" : "NO",
@@@@ -2081,9 +2081,11 @@@@ static void do_VAD_switching(struct ast_conference *co
 	      member != NULL ;
 	      member = member->next )
 	{
+#if ( SILDET == 2 )
 		// If a member connects via telephone, they don't have video
 		if ( member->via_telephone )
 			continue;
+#endif
a91 2
 		// We check for no VAD switching, video-muted or camera disabled
 		// If yes, this member will not be considered as a candidate for switching
@


1.1
log
@update and patch appkonference to work with asterisk 1.8.
spotted by and diff ok with naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
@

