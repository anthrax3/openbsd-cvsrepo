head	1.12;
access;
symbols
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.2
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3;
locks; strict;
comment	@# @;


1.12
date	2012.03.07.12.35.39;	author dcoppa;	state dead;
branches;
next	1.11;

1.11
date	2011.11.29.12.31.25;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2011.11.29.12.18.11;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2010.12.22.14.58.53;	author dcoppa;	state dead;
branches;
next	1.8;

1.8
date	2010.11.08.10.56.02;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2010.10.22.14.36.12;	author dcoppa;	state dead;
branches;
next	1.6;

1.6
date	2010.09.24.10.46.47;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2010.09.24.07.52.37;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2010.09.14.07.37.19;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2010.05.14.10.16.32;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.03.14.30.19;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2010.04.02.11.48.24;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Zap incorrect patch.
noticed by brad, thanks
@
text
@$OpenBSD: patch-pjlib_src_pj_os_core_unix_c,v 1.11 2011/11/29 12:31:25 dcoppa Exp $
--- pjlib/src/pj/os_core_unix.c.orig	Thu May  5 08:14:19 2011
+++ pjlib/src/pj/os_core_unix.c	Tue Nov 29 13:19:48 2011
@@@@ -311,7 +311,7 @@@@ PJ_DEF(int) pj_thread_get_prio_min(pj_thread_t *thread
     if (rc != 0)
 	return -1;
 
-#if defined(_POSIX_PRIORITY_SCHEDULING)
+#if defined(_POSIX_PRIORITY_SCHEDULING) || defined(_POSIX_THREAD_PRIORITY_SCHEDULING)
     return sched_get_priority_min(policy);
 #elif defined __OpenBSD__
     /* Thread prio min/max are declared in OpenBSD private hdr */
@@@@ -336,7 +336,7 @@@@ PJ_DEF(int) pj_thread_get_prio_max(pj_thread_t *thread
     if (rc != 0)
 	return -1;
 
-#if defined(_POSIX_PRIORITY_SCHEDULING)
+#if defined(_POSIX_PRIORITY_SCHEDULING) || defined(_POSIX_THREAD_PRIORITY_SCHEDULING)
     return sched_get_priority_max(policy);
 #elif defined __OpenBSD__
     /* Thread prio min/max are declared in OpenBSD private hdr */
@


1.11
log
@grrr, missed one :(
@
text
@d1 1
a1 1
$OpenBSD: patch-pjlib_src_pj_os_core_unix_c,v 1.10 2011/11/29 12:18:11 dcoppa Exp $
@


1.10
log
@Proper fix for thread priority scheduling support
@
text
@d1 3
a3 3
$OpenBSD$
--- pjlib/src/pj/os_core_unix.c.orig	Tue Nov 29 12:41:19 2011
+++ pjlib/src/pj/os_core_unix.c	Tue Nov 29 12:43:53 2011
d11 9
@


1.9
log
@Bugfix update to pjsua-1.8.10
@
text
@d1 4
a4 4
$OpenBSD: patch-pjlib_src_pj_os_core_unix_c,v 1.8 2010/11/08 10:56:02 dcoppa Exp $
--- pjlib/src/pj/os_core_unix.c.orig	Fri Sep 24 09:49:32 2010
+++ pjlib/src/pj/os_core_unix.c	Sun Nov  7 20:32:24 2010
@@@@ -311,11 +311,8 @@@@ PJ_DEF(int) pj_thread_get_prio_min(pj_thread_t *thread
d8 2
a9 2
-#if defined _POSIX_PRIORITY_SCHEDULING
+#if defined (_POSIX_PRIORITY_SCHEDULING) || defined(_POSIX_THREAD_PRIORITY_SCHEDULING)
d11 2
a12 19
-#elif defined __OpenBSD__
-    /* Thread prio min/max are declared in OpenBSD private hdr */
-    return 0;
 #else
     pj_assert("pj_thread_get_prio_min() not supported!");
     return 0;
@@@@ -336,11 +333,8 @@@@ PJ_DEF(int) pj_thread_get_prio_max(pj_thread_t *thread
     if (rc != 0)
 	return -1;
 
-#if defined _POSIX_PRIORITY_SCHEDULING
+#if defined (_POSIX_PRIORITY_SCHEDULING) || defined(_POSIX_THREAD_PRIORITY_SCHEDULING)
     return sched_get_priority_max(policy);
-#elif defined __OpenBSD__
-    /* Thread prio min/max are declared in OpenBSD private hdr */
-    return 31;
 #else
     pj_assert("pj_thread_get_prio_max() not supported!");
     return 0;
@


1.8
log
@We now have sched_get_priority_(mix|max)

OK landry@@, jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.7
log
@Bugfix update to pjsua-1.8.5
@
text
@d1 9
a9 5
$OpenBSD: patch-pjlib_src_pj_os_core_unix_c,v 1.6 2010/09/24 10:46:47 dcoppa Exp $
--- pjlib/src/pj/os_core_unix.c.orig	Wed May 19 07:50:08 2010
+++ pjlib/src/pj/os_core_unix.c	Fri Sep 24 12:44:10 2010
@@@@ -311,7 +311,7 @@@@ PJ_DEF(int) pj_thread_get_prio_min(pj_thread_t *thread
 #if defined _POSIX_PRIORITY_SCHEDULING
d11 3
a13 4
 #elif defined __OpenBSD__
-    /* OpenBSD doesn't have sched_get_priority_min/_max */
+    /* Thread prio min/max are declared in OpenBSD private hdr */
     return 0;
d16 7
a22 2
@@@@ -336,8 +336,8 @@@@ PJ_DEF(int) pj_thread_get_prio_max(pj_thread_t *thread
 #if defined _POSIX_PRIORITY_SCHEDULING
d24 3
a26 5
 #elif defined __OpenBSD__
-    /* OpenBSD doesn't have sched_get_priority_min/_max */
-    return 0;
+    /* Thread prio min/max are declared in OpenBSD private hdr */
+    return 31;
@


1.6
log
@Better comments (aligned with upstream).

No functional changes, no bump
@
text
@d1 1
a1 1
$OpenBSD: patch-pjlib_src_pj_os_core_unix_c,v 1.5 2010/09/24 07:52:37 dcoppa Exp $
@


1.5
log
@After discussion with fgsch@@ and others, It's now clear that I was wrong
and 31 IS the correct value: shame on me...

"You need to revive the patch that was before 1.7" fgsch@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 12
a14 2
+++ pjlib/src/pj/os_core_unix.c	Fri Sep 24 09:27:00 2010
@@@@ -337,7 +337,7 @@@@ PJ_DEF(int) pj_thread_get_prio_max(pj_thread_t *thread
d17 1
a17 1
     /* OpenBSD doesn't have sched_get_priority_min/_max */
d19 1
@


1.4
log
@Update to pjsua-1.7

OK sthen@@
@
text
@d1 4
a4 8
$OpenBSD: patch-pjlib_src_pj_os_core_unix_c,v 1.3 2010/05/14 10:16:32 dcoppa Exp $

31 is FreeBSD-only. Return 0 for sched_get_priority_max()

--- pjlib/src/pj/os_core_unix.c.orig	Wed Jan 13 14:09:45 2010
+++ pjlib/src/pj/os_core_unix.c	Fri May 14 11:46:50 2010
@@@@ -335,7 +335,7 @@@@ PJ_DEF(int) pj_thread_get_prio_max(pj_thread_t *thread
 #if defined _POSIX_PRIORITY_SCHEDULING
d7 3
a9 2
-    return 31;
+    return 0;
@


1.3
log
@FreeBSD *does* have sched_get_priority_{min,max}, so my previous
patch was wrong

OK sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-pjlib_src_pj_os_core_unix_c,v 1.2 2010/05/03 14:30:19 dcoppa Exp $
@


1.2
log
@Update pjsua to 1.6

From MAINTAINER Christopher Zimmermann, with modifications by me
and sthen@@.

OK sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 2
a7 12
+++ pjlib/src/pj/os_core_unix.c	Mon May  3 10:34:25 2010
@@@@ -310,7 +310,7 @@@@ PJ_DEF(int) pj_thread_get_prio_min(pj_thread_t *thread
 
 #if defined _POSIX_PRIORITY_SCHEDULING
     return sched_get_priority_min(policy);
-#elif defined __OpenBSD__
+#elif defined __FreeBSD__ || defined __OpenBSD__
     return 0;
 #else
     pj_assert("pj_thread_get_prio_min() not supported!");
@@@@ -334,8 +334,10 @@@@ PJ_DEF(int) pj_thread_get_prio_max(pj_thread_t *thread
 
d10 2
a11 4
-#elif defined __OpenBSD__
+#elif defined __FreeBSD__
     return 31;
+#elif defined __OpenBSD__
@


1.1
log
@Update to pjsua-1.5.5

From (new) MAINTAINER Christopher Zimmermann with some modifications
by landry@@, ajacoutot@@, sthen@@ and myself.

Thanks!

OK landry@@, ajacoutot@@, sthen@@
@
text
@d3 1
a3 4
fix undefined sched_get_priority_max() and sched_get_priority_min() 
on OpenBSD
protect both functions with #ifdef _POSIX_PRIORITY_SCHEDULING and 
return 0 if __OpenBSD__ macro is declared
d5 3
a7 5
--- pjlib/src/pj/os_core_unix.c.orig	Wed Aug  5 12:58:02 2009
+++ pjlib/src/pj/os_core_unix.c	Wed Mar 31 10:28:45 2010
@@@@ -308,7 +308,14 @@@@ PJ_DEF(int) pj_thread_get_prio_min(pj_thread_t *thread
     if (rc != 0)
 	return -1;
d9 1
a9 1
+#if defined _POSIX_PRIORITY_SCHEDULING
d11 6
a16 8
+#elif defined __OpenBSD__
+    return 0;
+#else
+    pj_assert("pj_thread_get_prio_min() not supported!");
+    return 0;
+#endif
 }
 
d18 1
a18 5
@@@@ -325,7 +332,14 @@@@ PJ_DEF(int) pj_thread_get_prio_max(pj_thread_t *thread
     if (rc != 0)
 	return -1;
 
+#if defined _POSIX_PRIORITY_SCHEDULING
d20 3
d25 3
a27 7
+#else
+    pj_assert("pj_thread_get_prio_max() not supported!");
+    return 0;
+#endif
 }
 
 
@

