head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.1.1.0.10
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.8
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	deanna_20071028:1.1.1.1
	deanna:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.04.02.11.48.24;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2007.10.27.04.34.23;	author deanna;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.10.27.04.34.23;	author deanna;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to pjsua-1.5.5

From (new) MAINTAINER Christopher Zimmermann with some modifications
by landry@@, ajacoutot@@, sthen@@ and myself.

Thanks!

OK landry@@, ajacoutot@@, sthen@@
@
text
@$OpenBSD: patch-pjsip-apps_src_pjsua_pjsua_app_c,v 1.1 2007/10/27 04:34:23 deanna Exp $
--- pjsip-apps/src/pjsua/pjsua_app.c.orig	Mon May 14 12:45:20 2007
+++ pjsip-apps/src/pjsua/pjsua_app.c	Sun Jun  3 00:32:57 2007
@@@@ -3142,20 +3142,17 @@@@ pj_status_t app_destroy(void)
 static void stereo_demo()
 {
     pjmedia_port *conf, *splitter, *ch1;
-    unsigned clock;
     pj_status_t status;
 
     /* Disable existing sound device */
     conf = pjsua_set_no_snd_dev();
 
-    clock = app_config.media_cfg.clock_rate;
-
     /* Create stereo-mono splitter/combiner */
     status = pjmedia_splitcomb_create(app_config.pool, 
-				      clock /* clock rate */,
+				      conf->info.clock_rate /* clock rate */,
 				      2	    /* stereo */,
-				      clock*2*10/1000/* 10ms samples * 2ch */,
-				      16    /* bits */,
+				      2 * conf->info.samples_per_frame,
+				      conf->info.bits_per_sample,
 				      0	    /* options */,
 				      &splitter);
     pj_assert(status == PJ_SUCCESS);
@@@@ -3182,10 +3179,10 @@@@ static void stereo_demo()
     
     /* Create sound device */
     status = pjmedia_snd_port_create(app_config.pool, -1, -1, 
-				     clock  /* clock rate */,
+				     conf->info.clock_rate,
 				     2	    /* stereo */,
-				     clock*2*10/1000 /* 10 ms samples * 2ch */,
-				     16	    /* bits */,
+				     2 * conf->info.samples_per_frame,
+				     conf->info.bits_per_sample,
 				     0, &app_config.snd);
     pj_assert(status == PJ_SUCCESS);
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import pjsua 0.7.0

pjsua is an open source command line SIP user agent that is used as
the reference implementation for PJSIP and PJMEDIA. It has many
features, such as:

    * Mutiple identities/account registrations
    * Concurrent calls and conference (unlimited number, but only up
      to 254 sources can be mixed to a single destination)
    * Call features: call hold, call transfer (attended or unattended,
      with or without refersub).
    * SIP Presence/SIMPLE with PIDF and XPIDF support. PUBLISH support.
    * Instant messaging and message composing indication
    * DTMF digits transmission/receipt (RFC 2833)
    * WAV file playing, streaming, and recording.
    * Accoustic echo cancellation (AEC).
    * Auto-answer, auto-play file, auto-loop RTP
    * Support SIP UDP, TCP, and TLS transports. Support for DNS SRV
      resolution.
    * NAT traversal with rport and STUN.
    * Tone generation.
    * Codecs: PCMA, PCMU, GSM, Speex (including wideband/16KHz and
      ultra-wideband/32KHz), L16 (8-48KHz, mono or stereo), and iLBC.
    * Adaptive jitter buffer, adaptive silence detection, and packet
      lost concealment audio features.

With lots of testing and help from todd@@, sthen@@, jakemsr@@, jolan@@ and
Benny Prijono.

ok todd@@ sthen@@

@
text
@@
