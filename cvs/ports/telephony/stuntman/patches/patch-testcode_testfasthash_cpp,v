head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.12.24.13.57.18;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to stuntman 1.2.5, add patches to use arc4random.
From maintainer Roman Kravchuk.
@
text
@$OpenBSD$
--- testcode/testfasthash.cpp.orig	Sun Jun 23 20:45:16 2013
+++ testcode/testfasthash.cpp	Sat Dec 21 15:08:08 2013
@@@@ -233,11 +233,18 @@@@ HRESULT CTestFastHash::TestRemove()
     }
     
     // shuffle our array - this is the order in which we'll do removes
+#ifndef HAVE_ARC4RANDOM
     srand(99);
+#endif
     for (size_t x = 0; x < c_maxsize; x++)
     {
+#ifdef HAVE_ARC4RANDOM
+        int firstindex = arc4random_uniform(c_maxsize);
+        int secondindex = arc4random_uniform(c_maxsize);
+#else
         int firstindex = rand() % c_maxsize;
         int secondindex = rand() % c_maxsize;
+#endif
         
         int val1 = tracking[firstindex];
         int val2 = tracking[secondindex];
@
