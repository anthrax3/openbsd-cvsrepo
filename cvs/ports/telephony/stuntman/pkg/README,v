head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	sthen_20130618:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.07.22.10.55.41;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	3LzguPEQl5LkjlcD;

1.2
date	2014.07.12.11.25.00;	author sthen;	state Exp;
branches;
next	1.1;
commitid	76ij4rO0HAnPaXZj;

1.1
date	2013.06.18.14.28.37;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.06.18.14.28.37;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Tweak documentation according to recent rc changes.

ok jasper@@
@
text
@$OpenBSD: README,v 1.2 2014/07/12 11:25:00 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

To arrange for the standalone STUN server to run automatically
on reboot, add "stunserver" to the pkg_scripts line in /etc/rc.conf.local.

NOTE: This script runs stunserver(1) with default options.

If you want to add or change default options for stunserver(1) you can
add "stunserver_flags=..." into /etc/rc.conf.local(8).
@


1.2
log
@don't use "echo 'pkg_scripts="${pkg_scripts} icinga' >> /etc/rc.conf.local"
examples
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1.1.1 2013/06/18 14:28:37 sthen Exp $
d12 2
a13 2
If you want to add or change default options for stunserver(1) you can add
line stunserver_flags="..." into /etc/rc.conf.local(8).
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: $
d8 1
a8 3
on reboot, add "stunserver" to "pkg_scripts" in /etc/rc.conf.local, e.g.:

pkg_scripts="${pkg_scripts} stunserver"
@


1.1.1.1
log
@import ports/telephony/stuntman, from Roman Kravchuk, ok dcoppa

STUNTMAN is an open source, high performance STUN server, implementation
of the STUN protocol as specified in RFCs 5389, 5769, and 5780. It also
includes backwards compatibility for RFC 3489.
@
text
@@
