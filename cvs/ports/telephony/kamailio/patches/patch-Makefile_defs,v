head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.6
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.12
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.8
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2015.11.20.10.09.52;	author sthen;	state Exp;
branches;
next	1.5;
commitid	UZE2eJ0mBOI1OdIy;

1.5
date	2013.04.16.11.13.04;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2012.12.02.22.18.21;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2012.09.15.12.16.18;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2012.06.12.23.39.09;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2012.04.22.21.44.24;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.6
log
@update to Kamailio 4.3.3, from maintainer Roman Kravchuk
@
text
@$OpenBSD: patch-Makefile_defs,v 1.5 2013/04/16 11:13:04 sthen Exp $
--- Makefile.defs.orig	Fri Oct  2 15:35:19 2015
+++ Makefile.defs	Wed Oct 21 02:36:24 2015
@@@@ -300,9 +300,9 @@@@ ppc_macros= __powerpc __powerpc__ __POWERPC__ __ppc__ 
 ppc64_macros= __ppc64__ _ARCH_PPC64
 
 mips_macros= __mips__ __mips _MIPS_ARCH_MIPS1
-mips2_macros= _MIPS_ISA_MIPS2 _MIPS_ISA_MIPS3 _MIPS_ISA_MIPS4 \
+mips2_macros= _MIPS_ISA_MIPS2 _MIPS_ISA_MIPS4 \
 			_MIPS_ARCH_MIPS2 _MIPS_ARCH_MIPS3 _MIPS_ARCH_MIPS4
-mips64_macros= _MIPS_ISA_MIPS64 _MIPS_ARCH_MIPS64
+mips64_macros= _MIPS_ISA_MIPS64 _MIPS_ARCH_MIPS64 _MIPS_ISA_MIPS3
 
 alpha_macros= __alpha__ __alpha _M_ALPHA_
 
@@@@ -373,7 +373,7 @@@@ endif
 endif
 
 # dirs
-cfg_dir = etc/$(MAIN_NAME)/
+cfg_dir = share/examples/$(MAIN_NAME)/
 bin_dir = sbin/
 share_dir = share/$(MAIN_NAME)/
 # lib/$(MAIN_NAME)/modules , lib/$(MAIN_NAME)/modules-s, lib/$(MAIN_NAME)/modules-k
@@@@ -459,11 +459,11 @@@@ data_prefix = $(basedir)$(prefix)
 
 
 # target dirs for various stuff
-cfg_target = $(prefix)/$(cfg_dir)
+cfg_target = $(SYSCONFDIR)/$(MAIN_NAME)/
 bin_target = $(prefix)/$(bin_dir)
 #modules_target = $(prefix)/$(modules_dir)
 lib_target = $(prefix)/$(lib_dir)
-run_target = $(run_prefix)/$(run_dir)
+run_target = $(VARBASE)/run/$(MAIN_NAME)/
 doc_target = $(prefix)/$(doc_dir)
 data_target = $(prefix)/$(data_dir)
 
@@@@ -841,16 +841,12 @@@@ ifeq	($(ARCH), i386)
 ifeq		($(CC_NAME), gcc) 
 				C_DEFS+=-DCC_GCC_LIKE_ASM
 				#common stuff
-				CFLAGS=-g $(CC_OPT) -funroll-loops  -Wcast-align $(PROFILE)
+				CFLAGS=
 			#if gcc 5.0+, 4.5+ or 4.2+
 ifeq (,$(strip $(filter-out 4.2+ 4.5+ 5.0+,$(CC_SHORTVER))))
 $(call				set_if_empty,CPU,athlon64)
-					CFLAGS+=-m32 -minline-all-stringops \
-							-falign-loops \
-							-ftree-vectorize \
-							-fno-strict-overflow \
-							-mtune=$(CPU)
-					LDFLAGS+=-m32
+					CFLAGS+=
+					LDFLAGS+=
 else
 			#if gcc 4.0+
 ifeq			($(CC_SHORTVER), 4.x)
@@@@ -923,7 +919,7 @@@@ ifeq	($(ARCH), x86_64)
 ifeq		($(CC_NAME), gcc)
 				C_DEFS+=-DCC_GCC_LIKE_ASM
 				#common stuff
-				CFLAGS=-g $(CC_OPT) -funroll-loops  -Wcast-align $(PROFILE)
+				CFLAGS=
 			#if gcc 4.5+
 			# don't add '-mtune=$(CPU)' - gcc failure
 ifeq			($(CC_SHORTVER),$(filter $(CC_SHORTVER),4.5+ 5.0+))
@@@@ -937,12 +933,8 @@@@ else
 			#if gcc 4.2+
 ifeq			($(CC_SHORTVER), 4.2+)
 $(call				set_if_empty,CPU,opteron)
-					CFLAGS+=-m64 -minline-all-stringops \
-							-falign-loops \
-							-ftree-vectorize \
-							-fno-strict-overflow \
-							-mtune=$(CPU)
-					LDFLAGS+=-m64
+					CFLAGS+=
+					LDFLAGS+=
 else
 			#if gcc 4.0+
 ifeq			($(CC_SHORTVER), 4.x)
@@@@ -1848,9 +1840,10 @@@@ endif
 
 ifeq ($(OS), openbsd)
 	C_DEFS+=-DHAVE_SOCKADDR_SA_LEN  -DHAVE_GETHOSTBYNAME2 \
-		-DHAVE_UNION_SEMUN -DHAVE_MSGHDR_MSG_CONTROL \
-		-DHAVE_CONNECT_ECONNRESET_BUG -DHAVE_TIMEGM \
-		-DHAVE_NETINET_IN_SYSTM -DUSE_SIGWAIT
+		-DHAVE_UNION_SEMUN -DHAVE_SCHED_YIELD \
+		-DHAVE_MSGHDR_MSG_CONTROL -DHAVE_CONNECT_ECONNRESET_BUG \
+		-DHAVE_TIMEGM -DHAVE_NETINET_IN_SYSTM \
+		-DUSE_SIGWAIT
 	ifneq ($(found_lock_method), yes)
 		C_DEFS+= -DUSE_PTHREAD_MUTEX  # try pthread sems
 		found_lock_method=yes
@


1.5
log
@update to Kamailio 4.0.0, from maintainer Roman Kravchuk
@
text
@d1 4
a4 4
$OpenBSD: patch-Makefile_defs,v 1.4 2012/12/02 22:18:21 jasper Exp $
--- Makefile.defs.orig	Mon Mar 11 17:27:19 2013
+++ Makefile.defs	Thu Mar 14 15:52:28 2013
@@@@ -362,9 +362,9 @@@@ ppc_macros= __powerpc __powerpc__ __POWERPC__ __ppc__ 
d16 1
a16 1
@@@@ -435,7 +435,7 @@@@ endif
d25 1
a25 1
@@@@ -517,7 +517,7 @@@@ data_prefix = $(basedir)$(prefix)
d34 26
a59 1
@@@@ -976,7 +976,7 @@@@ ifeq	($(ARCH), x86_64)
d63 1
a63 1
-				CFLAGS=-g -O9 -funroll-loops  -Wcast-align $(PROFILE)
d67 2
a68 2
 ifeq			($(CC_SHORTVER), 4.5+)
@@@@ -990,12 +990,8 @@@@ else
d83 1
a83 10
@@@@ -1416,7 +1412,7 @@@@ ifeq		($(CC_NAME), gcc)
 				CFLAGS= -mips64 -O9 -funroll-loops $(PROFILE)
 			#if gcc 4.5+ or 4.2+
 ifeq (,$(strip $(filter-out 4.2+ 4.5+,$(CC_SHORTVER))))
-					CFLAGS+=-minline-all-stringops -ftree-vectorize \
+					CFLAGS+=-ftree-vectorize \
 							-fno-strict-overflow
 else
 			#if gcc 4.0+
@@@@ -1962,9 +1958,10 @@@@ endif
@


1.4
log
@- unbreak on mips64 by fixing recognition macros and unsupported GCC flag
@
text
@d1 4
a4 4
$OpenBSD: patch-Makefile_defs,v 1.3 2012/09/15 12:16:18 sthen Exp $
--- Makefile.defs.orig	Thu Aug  2 07:54:15 2012
+++ Makefile.defs	Sun Dec  2 14:41:06 2012
@@@@ -349,9 +349,9 @@@@ ppc_macros= __powerpc __powerpc__ __POWERPC__ __ppc__ 
d16 1
a16 1
@@@@ -422,7 +422,7 @@@@ endif
d25 1
a25 1
@@@@ -504,7 +504,7 @@@@ data_prefix = $(basedir)$(prefix)
d34 1
a34 1
@@@@ -944,7 +944,7 @@@@ ifeq	($(ARCH), x86_64)
d43 1
a43 1
@@@@ -958,12 +958,8 @@@@ else
d58 1
a58 1
@@@@ -1376,7 +1372,7 @@@@ ifeq		($(CC_NAME), gcc)
d67 1
a67 1
@@@@ -1904,9 +1900,10 @@@@ endif
@


1.3
log
@update to Kamailio 3.3.1, from maintainer Roman Kravchuk
* see http://www.kamailio.org/wiki/install/upgrade/3.2.x-to-3.3.0 for upgrade notes
@
text
@d1 15
a15 3
$OpenBSD: patch-Makefile_defs,v 1.2 2012/06/12 23:39:09 sthen Exp $
--- Makefile.defs.orig	Thu Aug  2 16:54:15 2012
+++ Makefile.defs	Sun Sep  2 18:52:42 2012
d58 9
@


1.2
log
@Kamailio fix from Brad, ok Roman Kravchuk (maintainer).

HAVE_SCHED_YIELD should be set since we have sched_yield(). The
sched_yield.h compatibility wrapper then does not try to create a
fallback macro which conflicts with the prototype of the syscall
wrapper.
@
text
@d1 3
a3 3
$OpenBSD: patch-Makefile_defs,v 1.1 2012/04/22 21:44:24 sthen Exp $
--- Makefile.defs.orig	Thu Apr 19 15:10:24 2012
+++ Makefile.defs	Tue Jun 12 23:10:37 2012
d22 1
a22 1
@@@@ -940,7 +940,7 @@@@ ifeq	($(ARCH), x86_64)
d31 1
a31 1
@@@@ -954,12 +954,8 @@@@ else
d46 1
a46 1
@@@@ -1899,9 +1895,10 @@@@ endif
@


1.1
log
@update to kamailio 3.2.3, mostly from Roman Kravchuk (taking maintainer,
previous maintainer ok).
@
text
@d1 3
a3 3
$OpenBSD$
--- Makefile.defs.orig	Tue Jan 31 16:47:59 2012
+++ Makefile.defs	Tue Feb  7 00:05:46 2012
d46 14
@

