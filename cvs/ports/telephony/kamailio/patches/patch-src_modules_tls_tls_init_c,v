head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2017.09.21.09.34.32;	author sthen;	state Exp;
branches;
next	1.1;
commitid	4zHkBJG59PPIdO4g;

1.1
date	2017.07.03.22.14.20;	author sthen;	state Exp;
branches;
next	;
commitid	3YCFei450KKbueMF;


desc
@@


1.2
log
@update to kamailio-5.0.3 and fix loading modules linked with srdb1, srdb2,
trie, srutils on clang arches, from Roman Kravchuk (maintainer)
@
text
@$OpenBSD: patch-src_modules_tls_tls_init_c,v 1.1 2017/07/03 22:14:20 sthen Exp $

Index: src/modules/tls/tls_init.c
--- src/modules/tls/tls_init.c.orig
+++ src/modules/tls/tls_init.c
@@@@ -119,7 +119,7 @@@@ to compile on the  _target_ system)"
 int openssl_kssl_malloc_bug=0; /* is openssl bug #1467 present ? */
 #endif
 
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
 const SSL_METHOD* ssl_methods[TLS_METHOD_MAX];
 #else
 sr_tls_methods_t sr_tls_methods[TLS_METHOD_MAX];
@@@@ -143,7 +143,7 @@@@ sr_tls_methods_t sr_tls_methods[TLS_METHOD_MAX];
 */
 
 
-
+#ifndef LIBRESSL_VERSION_NUMBER
 inline static char* buf_append(char* buf, char* end, char* str, int str_len)
 {
 	if ( (buf+str_len)<end){
@@@@ -321,6 +321,7 @@@@ static void ser_free(void *ptr, const char *fname, int
 }
 #endif
 
+#endif /* LIBRESSL_VERSION_NUMBER */
 
 /*
  * Initialize TLS socket
@@@@ -356,7 +357,7 @@@@ error:
  */
 static void init_ssl_methods(void)
 {
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
 	/* libssl < 1.1.0 */
 	memset(ssl_methods, 0, sizeof(ssl_methods));
 
@@@@ -366,7 +367,7 @@@@ static void init_ssl_methods(void)
 	ssl_methods[TLS_USE_SSLv23 - 1] = SSLv23_method();
 
 	/* only specific SSL or TLS version */
-#if OPENSSL_VERSION_NUMBER < 0x010100000L
+#if OPENSSL_VERSION_NUMBER < 0x010100000L || defined(LIBRESSL_VERSION_NUMBER)
 #ifndef OPENSSL_NO_SSL2
 	ssl_methods[TLS_USE_SSLv2_cli - 1] = SSLv2_client_method();
 	ssl_methods[TLS_USE_SSLv2_srv - 1] = SSLv2_server_method();
@@@@ -384,13 +385,13 @@@@ static void init_ssl_methods(void)
 	ssl_methods[TLS_USE_TLSv1_srv - 1] = TLSv1_server_method();
 	ssl_methods[TLS_USE_TLSv1 - 1] = TLSv1_method();
 
-#if OPENSSL_VERSION_NUMBER >= 0x1000100fL
+#if OPENSSL_VERSION_NUMBER >= 0x1000100fL && !defined(LIBRESSL_VERSION_NUMBER)
 	ssl_methods[TLS_USE_TLSv1_1_cli - 1] = TLSv1_1_client_method();
 	ssl_methods[TLS_USE_TLSv1_1_srv - 1] = TLSv1_1_server_method();
 	ssl_methods[TLS_USE_TLSv1_1 - 1] = TLSv1_1_method();
 #endif
 
-#if OPENSSL_VERSION_NUMBER >= 0x1000105fL
+#if OPENSSL_VERSION_NUMBER >= 0x1000105fL && !defined(LIBRESSL_VERSION_NUMBER)
 	ssl_methods[TLS_USE_TLSv1_2_cli - 1] = TLSv1_2_client_method();
 	ssl_methods[TLS_USE_TLSv1_2_srv - 1] = TLSv1_2_server_method();
 	ssl_methods[TLS_USE_TLSv1_2 - 1] = TLSv1_2_method();
@@@@ -399,11 +400,11 @@@@ static void init_ssl_methods(void)
 	/* ranges of TLS versions (require a minimum TLS version) */
 	ssl_methods[TLS_USE_TLSv1_PLUS - 1] = (void*)TLS_OP_TLSv1_PLUS;
 
-#if OPENSSL_VERSION_NUMBER >= 0x1000100fL
+#if OPENSSL_VERSION_NUMBER >= 0x1000100fL && !defined(LIBRESSL_VERSION_NUMBER)
 	ssl_methods[TLS_USE_TLSv1_1_PLUS - 1] = (void*)TLS_OP_TLSv1_1_PLUS;
 #endif
 
-#if OPENSSL_VERSION_NUMBER >= 0x1000105fL
+#if OPENSSL_VERSION_NUMBER >= 0x1000105fL && !defined(LIBRESSL_VERSION_NUMBER)
 	ssl_methods[TLS_USE_TLSv1_2_PLUS - 1] = (void*)TLS_OP_TLSv1_2_PLUS;
 #endif
 
@@@@ -477,6 +478,7 @@@@ static void init_ssl_methods(void)
  */
 static int init_tls_compression(void)
 {
+#ifndef LIBRESSL_VERSION_NUMBER
 #if OPENSSL_VERSION_NUMBER < 0x010100000L
 #if OPENSSL_VERSION_NUMBER >= 0x00908000L
 	int n, r;
@@@@ -563,6 +565,7 @@@@ static int init_tls_compression(void)
 end:
 #endif /* OPENSSL_VERSION_NUMBER >= 0.9.8 */
 #endif /* OPENSSL_VERSION_NUMBER < 1.1.0 */
+#endif /* LIBRESSL_VERSION_NUMBER */
 	return 0;
 }
 
@@@@ -573,6 +576,7 @@@@ end:
  */
 int tls_pre_init(void)
 {
+#ifndef LIBRESSL_VERSION_NUMBER
 #if OPENSSL_VERSION_NUMBER < 0x010100000L
 	void *(*mf)(size_t) = NULL;
 	void *(*rf)(void *, size_t) = NULL;
@@@@ -599,6 +603,7 @@@@ int tls_pre_init(void)
 				" (can be loaded first to be safe)\n");
 		return -1;
 	}
+#endif /* LIBRESSL_VERSION_NUMBER */
 
 	if (tls_init_locks()<0)
 		return -1;
@@@@ -632,7 +637,7 @@@@ int init_tls_h(void)
 {
 	/*struct socket_info* si;*/
 	long ssl_version;
-#if OPENSSL_VERSION_NUMBER < 0x010100000L
+#if OPENSSL_VERSION_NUMBER < 0x010100000L && !defined(LIBRESSL_VERSION_NUMBER)
 	int lib_kerberos;
 	int lib_zlib;
 	int kerberos_support;
@@@@ -676,7 +681,7 @@@@ int init_tls_h(void)
 	}
 
 /* check kerberos support using compile flags only for version < 1.1.0 */
-#if OPENSSL_VERSION_NUMBER < 0x010100000L
+#if OPENSSL_VERSION_NUMBER < 0x010100000L && !defined(LIBRESSL_VERSION_NUMBER)
 
 #ifdef TLS_KERBEROS_SUPPORT
 	kerberos_support=1;
@@@@ -847,7 +852,7 @@@@ void destroy_tls_h(void)
 	tls_destroy_cfg();
 	tls_destroy_locks();
 	tls_ct_wq_destroy();
-#if OPENSSL_VERSION_NUMBER >= 0x010100000L
+#if OPENSSL_VERSION_NUMBER >= 0x010100000L && !defined(LIBRESSL_VERSION_NUMBER)
 	/* explicit execution of libssl cleanup to avoid being executed again
 	 * by atexit(), when shm is gone */
 	DBG("executing openssl v1.1+ cleanup\n");
@


1.1
log
@update to Kamailio 5.0.2, from maintainer Roman Kravchuk,
plus minor wantlib cleanup by me
@
text
@d1 1
a1 1
$OpenBSD$
d6 10
a15 1
@@@@ -139,7 +139,7 @@@@ const SSL_METHOD* ssl_methods[TLS_METHOD_MAX];
d24 1
a24 1
@@@@ -317,6 +317,7 @@@@ static void ser_free(void *ptr, const char *fname, int
d32 10
a41 1
@@@@ -360,7 +361,7 @@@@ static void init_ssl_methods(void)
d50 1
a50 1
@@@@ -378,13 +379,13 @@@@ static void init_ssl_methods(void)
d66 1
a66 1
@@@@ -393,11 +394,11 @@@@ static void init_ssl_methods(void)
d79 2
a80 2
 }
@@@@ -408,6 +409,7 @@@@ static void init_ssl_methods(void)
d88 1
a88 1
@@@@ -494,6 +496,7 @@@@ static int init_tls_compression(void)
d96 1
a96 1
@@@@ -504,6 +507,7 @@@@ end:
d104 1
a104 1
@@@@ -530,6 +534,7 @@@@ int tls_pre_init(void)
d112 1
a112 1
@@@@ -563,7 +568,7 @@@@ int init_tls_h(void)
d121 1
a121 1
@@@@ -607,7 +612,7 @@@@ int init_tls_h(void)
d130 9
@

