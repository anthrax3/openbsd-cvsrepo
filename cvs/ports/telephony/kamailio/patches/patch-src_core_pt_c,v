head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2017.09.21.09.34.32;	author sthen;	state Exp;
branches;
next	1.1;
commitid	4zHkBJG59PPIdO4g;

1.1
date	2017.07.03.22.14.20;	author sthen;	state Exp;
branches;
next	;
commitid	3YCFei450KKbueMF;


desc
@@


1.2
log
@update to kamailio-5.0.3 and fix loading modules linked with srdb1, srdb2,
trie, srutils on clang arches, from Roman Kravchuk (maintainer)
@
text
@$OpenBSD: patch-src_core_pt_c,v 1.1 2017/07/03 22:14:20 sthen Exp $
Index: src/core/pt.c
--- src/core/pt.c.orig
+++ src/core/pt.c
@@@@ -249,8 +249,10 @@@@ int fork_process(int child_id, char *desc, int make_so
 {
 	int pid, child_process_no;
 	int ret;
+#ifndef HAVE_ARC4RANDOM
 	unsigned int new_seed1;
 	unsigned int new_seed2;
+#endif
 #ifdef USE_TCP
 	int sockfd[2];
 #endif
@@@@ -289,8 +291,10 @@@@ int fork_process(int child_id, char *desc, int make_so
 	}
 
 	child_process_no = *process_count;
+#ifndef HAVE_ARC4RANDOM
 	new_seed1=kam_rand();
 	new_seed2=random();
+#endif
 	pid = fork();
 	if (pid<0) {
 		lock_release(process_lock);
@@@@ -305,9 +309,11 @@@@ int fork_process(int child_id, char *desc, int make_so
 #ifdef USE_TCP
 		close_extra_socks(child_id, process_no);
 #endif /* USE_TCP */
+#ifndef HAVE_ARC4RANDOM
 		kam_srand(new_seed1);
 		fastrand_seed(kam_rand());
 		srandom(new_seed2+time(0));
+#endif
 		shm_malloc_on_fork();
 #ifdef PROFILING
 		monstartup((u_long) &_start, (u_long) &etext);
@@@@ -384,8 +390,10 @@@@ int fork_tcp_process(int child_id, char *desc, int r, 
 	int reader_fd[2]; /* for comm. with the tcp children read  */
 	int ret;
 	int i;
+#ifndef HAVE_ARC4RANDOM
 	unsigned int new_seed1;
 	unsigned int new_seed2;
+#endif
 
 	/* init */
 	sockfd[0]=sockfd[1]=-1;
@@@@ -423,8 +431,10 @@@@ int fork_tcp_process(int child_id, char *desc, int r, 
 	}
 
 	child_process_no = *process_count;
+#ifndef HAVE_ARC4RANDOM
 	new_seed1=kam_rand();
 	new_seed2=random();
+#endif
 	pid = fork();
 	if (pid<0) {
 		lock_release(process_lock);
@@@@ -446,9 +456,11 @@@@ int fork_tcp_process(int child_id, char *desc, int r, 
 			}
 		}
 		daemon_status_on_fork_cleanup();
+#ifndef HAVE_ARC4RANDOM
 		kam_srand(new_seed1);
 		fastrand_seed(kam_rand());
 		srandom(new_seed2+time(0));
+#endif
 		shm_malloc_on_fork();
 #ifdef PROFILING
 		monstartup((u_long) &_start, (u_long) &etext);
@


1.1
log
@update to Kamailio 5.0.2, from maintainer Roman Kravchuk,
plus minor wantlib cleanup by me
@
text
@d1 5
a5 4
$OpenBSD$
--- src/core/pt.c.orig	Mon May 15 22:43:07 2017
+++ src/core/pt.c	Mon May 15 22:48:08 2017
@@@@ -245,8 +245,10 @@@@ int fork_process(int child_id, char *desc, int make_so
d16 3
a18 3
@@@@ -285,8 +287,10 @@@@ int fork_process(int child_id, char *desc, int make_so
 	
 	
d27 1
a27 1
@@@@ -301,9 +305,11 @@@@ int fork_process(int child_id, char *desc, int make_so
d39 1
a39 1
@@@@ -380,8 +386,10 @@@@ int fork_tcp_process(int child_id, char *desc, int r, 
d47 1
a47 1
 	
d50 3
a52 3
@@@@ -420,8 +428,10 @@@@ int fork_tcp_process(int child_id, char *desc, int r, 
 	
 	
d61 1
a61 1
@@@@ -443,9 +453,11 @@@@ int fork_tcp_process(int child_id, char *desc, int r, 
@

