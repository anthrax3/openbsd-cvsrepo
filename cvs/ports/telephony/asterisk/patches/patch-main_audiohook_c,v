head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3;
locks; strict;
comment	@# @;


1.3
date	2017.02.14.12.31.38;	author sthen;	state Exp;
branches;
next	1.2;
commitid	quKKQrLn1snJOX5r;

1.2
date	2017.02.06.10.11.32;	author sthen;	state Exp;
branches;
next	1.1;
commitid	j5q6HCihnaAakz2P;

1.1
date	2017.02.02.14.04.07;	author sthen;	state Exp;
branches;
next	;
commitid	x8brg28oQZWYS2QP;


desc
@@


1.3
log
@update to asterisk-13.14.0
@
text
@$OpenBSD: patch-main_audiohook_c,v 1.2 2017/02/06 10:11:32 sthen Exp $

Raise level of audiohook debug messages, they are very frequent on OpenBSD
making any debug levels unusable.

--- main/audiohook.c.orig	Mon Feb 13 19:51:51 2017
+++ main/audiohook.c	Mon Feb 13 22:27:04 2017
@@@@ -269,19 +269,19 @@@@ static struct ast_frame *audiohook_read_frame_both(str
 
 	if (!usable_read && !usable_write) {
 		/* If both factories are unusable bail out */
-		ast_debug(1, "Read factory %p and write factory %p both fail to provide %zu samples\n", &audiohook->read_factory, &audiohook->write_factory, samples);
+		ast_debug(6, "Read factory %p and write factory %p both fail to provide %zu samples\n", &audiohook->read_factory, &audiohook->write_factory, samples);
 		return NULL;
 	}
 
 	/* If we want to provide only a read factory make sure we aren't waiting for other audio */
 	if (usable_read && !usable_write && (ast_tvdiff_ms(ast_tvnow(), audiohook->write_time) < (samples/8)*2)) {
-		ast_debug(3, "Write factory %p was pretty quick last time, waiting for them.\n", &audiohook->write_factory);
+		ast_debug(6, "Write factory %p was pretty quick last time, waiting for them.\n", &audiohook->write_factory);
 		return NULL;
 	}
 
 	/* If we want to provide only a write factory make sure we aren't waiting for other audio */
 	if (usable_write && !usable_read && (ast_tvdiff_ms(ast_tvnow(), audiohook->read_time) < (samples/8)*2)) {
-		ast_debug(3, "Read factory %p was pretty quick last time, waiting for them.\n", &audiohook->read_factory);
+		ast_debug(6, "Read factory %p was pretty quick last time, waiting for them.\n", &audiohook->read_factory);
 		return NULL;
 	}
 
@@@@ -306,7 +306,7 @@@@ static struct ast_frame *audiohook_read_frame_both(str
 			}
 		}
 	} else {
-		ast_debug(1, "Failed to get %d samples from read factory %p\n", (int)samples, &audiohook->read_factory);
+		ast_debug(6, "Failed to get %d samples from read factory %p\n", (int)samples, &audiohook->read_factory);
 	}
 
 	/* Move on to the write factory... if there are enough samples, read them in */
@@@@ -330,7 +330,7 @@@@ static struct ast_frame *audiohook_read_frame_both(str
 			}
 		}
 	} else {
-		ast_debug(1, "Failed to get %d samples from write factory %p\n", (int)samples, &audiohook->write_factory);
+		ast_debug(6, "Failed to get %d samples from write factory %p\n", (int)samples, &audiohook->write_factory);
 	}
 
 	frame.subclass.format = ast_format_cache_get_slin_by_rate(audiohook->hook_internal_samp_rate);
@


1.2
log
@raise debug level of other audiohook messages, even debug level 1 is unusable
on a busy system
@
text
@d1 1
a1 1
$OpenBSD: patch-main_audiohook_c,v 1.1 2017/02/02 14:04:07 sthen Exp $
d6 3
a8 3
--- main/audiohook.c.orig	Thu Dec  8 17:30:57 2016
+++ main/audiohook.c	Mon Feb  6 10:09:37 2017
@@@@ -273,19 +273,19 @@@@ static struct ast_frame *audiohook_read_frame_both(str
d40 1
a40 1
@@@@ -326,7 +326,7 @@@@ static struct ast_frame *audiohook_read_frame_both(str
@


1.1
log
@Patch to raise level of Asterisk's "Read factory %p and write factory %p
both fail to provide %zu samples" debug message which is triggering very
frequently, so that it's possible to get debug level 5 messages without
flattening the box.
@
text
@d1 8
a8 4
$OpenBSD$
--- main/audiohook.c.orig	Thu Feb  2 13:59:35 2017
+++ main/audiohook.c	Thu Feb  2 14:01:02 2017
@@@@ -273,7 +273,7 @@@@ static struct ast_frame *audiohook_read_frame_both(str
d17 32
@

