head	1.19;
access;
symbols
	OPENBSD_6_2:1.19.0.8
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.19.0.6
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.18.0.6
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.17.0.2
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.16.0.4
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.15.0.2
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.13.0.6
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.4
	OPENBSD_5_0:1.13.0.2
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.12.0.4
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.2
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.6
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.4
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_1:1.1.0.2;
locks; strict;
comment	@# @;


1.19
date	2015.10.12.22.07.29;	author sthen;	state Exp;
branches;
next	1.18;
commitid	s4D60mgjUjajPmDX;

1.18
date	2014.11.10.20.43.18;	author sthen;	state Exp;
branches;
next	1.17;
commitid	vGvjZWf0bu7xlils;

1.17
date	2014.07.12.01.32.13;	author sthen;	state Exp;
branches
	1.17.2.1;
next	1.16;
commitid	YbPHQia12Q6YsBuR;

1.16
date	2013.03.28.20.24.53;	author sthen;	state Exp;
branches;
next	1.15;

1.15
date	2013.01.22.23.26.30;	author sthen;	state Exp;
branches;
next	1.14;

1.14
date	2012.09.28.00.03.57;	author sthen;	state Exp;
branches;
next	1.13;

1.13
date	2011.07.12.19.54.39;	author sthen;	state Exp;
branches
	1.13.6.1;
next	1.12;

1.12
date	2010.06.07.20.03.55;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2010.04.08.16.18.00;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2010.03.25.12.01.47;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2009.12.13.12.11.29;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.14.16.00.10;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2008.05.27.22.14.34;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2008.04.02.23.18.11;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2007.10.04.11.25.44;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2007.09.05.22.42.52;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2007.07.25.08.55.48;	author robert;	state dead;
branches;
next	1.2;

1.2
date	2007.07.19.01.31.28;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	2007.07.02.14.03.34;	author jolan;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2007.07.06.13.52.18;	author sturm;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2007.08.02.08.24.38;	author ajacoutot;	state dead;
branches;
next	;

1.13.6.1
date	2013.03.17.12.53.09;	author sthen;	state Exp;
branches;
next	;

1.17.2.1
date	2014.11.21.12.42.59;	author sthen;	state Exp;
branches;
next	;
commitid	3vjlsjP3joK2hNK8;


desc
@@


1.19
log
@update to asterisk-13.6.0

this is a major update - upgrading users should review UPGRADE-12.txt and
UPGRADE.txt in /usr/local/share/doc/asterisk. some configurations will work
unchanged, but there have been big changes in other areas, notably AMI,
CDR and CEL.
@
text
@$OpenBSD$
--- contrib/scripts/safe_asterisk.orig	Thu Oct  9 09:08:43 2014
+++ contrib/scripts/safe_asterisk	Thu Feb 19 21:08:57 2015
@@@@ -6,21 +6,22 @@@@ ASTVARRUNDIR="__ASTERISK_VARRUN_DIR__"
 ASTVARLOGDIR="__ASTERISK_LOG_DIR__"
 
 CLIARGS="$*"			# Grab any args passed to safe_asterisk
-TTY=9				# TTY (if you want one) for Asterisk to run on
-CONSOLE=yes			# Whether or not you want a console
-#NOTIFY=root@@localhost		# Who to notify about crashes
+TTY=				# TTY (if you want one) for Asterisk to run on
+CONSOLE=no			# Whether or not you want a console
+NOTIFY=root			# Who to notify about crashes
 #EXEC=/path/to/somescript	# Run this command if Asterisk crashes
 #LOGFILE="${ASTVARLOGDIR}/safe_asterisk.log"	# Where to place the normal logfile (disabled if blank)
-#SYSLOG=local0			# Which syslog facility to use (disabled if blank)
+SYSLOG=daemon			# Which syslog facility to use (disabled if blank)
 MACHINE=`hostname`		# To specify which machine has crashed when getting the mail
 DUMPDROP="${DUMPDROP:-/tmp}"
 RUNDIR="${RUNDIR:-/tmp}"
 SLEEPSECS=4
 ASTPIDFILE="${ASTVARRUNDIR}/asterisk.pid"
+VARRUNOWNER="_asterisk:wheel"  # chown __ASTERISK_VARRUN_DIR__ if it's created.
 
 # comment this line out to have this script _not_ kill all mpg123 processes when
 # asterisk exits
-KILLALLMPG123=1
+# KILLALLMPG123=1
 
 # run asterisk with this priority
 PRIORITY=0
@@@@ -48,6 +49,19 @@@@ message() {
 	fi
 }
 
+# Create the directory for the control socket if required. As of 1.6.0.26,
+# Asterisk tries to create this itself at startup but doesn't give suitable
+# ownership. This must be created before the 'check if asterisk is already
+# running' below, since that is enough to get the dir created.
+if test `id -u` == 0 ; then
+	varrundir=`dirname $ASTPIDFILE`
+	if [ ! -d $varrundir ]; then
+		mkdir -p $varrundir
+		[ -n "$VARRUNOWNER" ] && chown $VARRUNOWNER $varrundir
+		chmod 770 $varrundir
+	fi
+fi
+
 # Check if Asterisk is already running.  If it is, then bug out, because
 # starting safe_asterisk when Asterisk is running is very bad.
 VERSION=`"${ASTSBINDIR}/asterisk" -nrx 'core show version' 2>/dev/null`
@@@@ -81,7 +95,7 @@@@ else
 			fi
 		fi
 		SYSCTL_MAXFILES="fs.file-max"
-	elif `uname -s | grep Darwin /dev/null 2>&1`; then
+	elif `uname -s | grep -E '(BSD|Darwin)' /dev/null 2>&1`; then
 		SYSCTL_MAXFILES="kern.maxfiles"
 	fi
 
@@@@ -92,8 +106,10 @@@@ else
 		fi
 	fi
 
-	# set the process's filemax to whatever set above
-	ulimit -n $MAXFILES
+	if ! test "x$MAXFILES" = "x" ; then
+		# set the process's filemax to whatever set above
+		ulimit -n $MAXFILES
+	fi
 
 	if test ! -d "${ASTVARRUNDIR}"; then
 		mkdir -p "${ASTVARRUNDIR}"
@


1.18
log
@update to asterisk-11.14.0
@
text
@d1 4
a4 8
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.17 2014/07/12 01:32:13 sthen Exp $

- more useful defaults
- create /var/run/asterisk with sane ownership/perms

--- contrib/scripts/safe_asterisk.orig	Thu Oct  9 09:06:26 2014
+++ contrib/scripts/safe_asterisk	Mon Nov 10 19:52:06 2014
@@@@ -5,21 +5,22 @@@@ ASTVARRUNDIR="__ASTERISK_VARRUN_DIR__"
d32 1
a32 1
@@@@ -47,6 +48,19 @@@@ message() {
d52 1
a52 1
@@@@ -80,7 +94,7 @@@@ else
d61 1
a61 1
@@@@ -91,8 +105,10 @@@@ else
@


1.17
log
@update to asterisk 11.11.0
http://downloads.asterisk.org/pub/telephony/asterisk/ChangeLog-11.11.0
@
text
@d1 1
a1 1
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.16 2013/03/28 20:24:53 sthen Exp $
d6 2
a7 2
--- contrib/scripts/safe_asterisk.orig	Mon Jun  9 12:57:09 2014
+++ contrib/scripts/safe_asterisk	Fri Jul 11 23:38:20 2014
d56 1
a56 1
@@@@ -75,7 +89,7 @@@@ else
d65 1
a65 1
@@@@ -86,8 +100,10 @@@@ else
@


1.17.2.1
log
@MFC:  SECURITY update to Asterisk 11.14.1

* AST-2014-012: Fix error with mixed address family ACLs.

* AST-2014-014: Fix race condition where channels may get stuck in
ConfBridge under load.

* AST-2014-017 - app_confbridge: permission escalation/class authorization.

* AST-2014-018 - func_db: DB Dialplan function permission escalation via AMI.
@
text
@d1 1
a1 1
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.18 2014/11/10 20:43:18 sthen Exp $
d6 2
a7 2
--- contrib/scripts/safe_asterisk.orig	Thu Oct  9 09:06:26 2014
+++ contrib/scripts/safe_asterisk	Mon Nov 10 19:52:06 2014
d56 1
a56 1
@@@@ -80,7 +94,7 @@@@ else
d65 1
a65 1
@@@@ -91,8 +105,10 @@@@ else
@


1.16
log
@update to Asterisk 11.3.0, various testing by myself and chris@@

- this is a major version update to the new long-term support version
- please review UPGRADE.txt
@
text
@d1 1
a1 1
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.14 2012/09/28 00:03:57 sthen Exp $
d6 19
a24 20
--- contrib/scripts/safe_asterisk.orig	Tue Jan 22 18:57:06 2013
+++ contrib/scripts/safe_asterisk	Tue Jan 22 22:36:09 2013
@@@@ -6,22 +6,23 @@@@ ASTVARRUNDIR=__ASTERISK_VARRUN_DIR__
 ASTVARLOGDIR=__ASTERISK_LOG_DIR__
 
 CLIARGS="$*"					# Grab any args passed to safe_asterisk
-TTY=9						# TTY (if you want one) for Asterisk to run on
-CONSOLE=yes					# Whether or not you want a console
+TTY=						# TTY (if you want one) for Asterisk to run on
+CONSOLE=no					# Whether or not you want a console
 #NOTIFY=root@@localhost.localdomain		# Who to notify about crashes
-NOTIFY=${NOTIFY:-}				# Who to notify about crashes
+NOTIFY=${NOTIFY:-root}			# Who to notify about crashes
 #EXEC=/path/to/somescript			# Run this command if Asterisk crashes
 #LOGFILE=${ASTVARLOGDIR}/safe_asterisk.log	# Where to place the normal logfile (disabled if blank)
-SYSLOG=${SYSLOG:-}				# Which syslog facility to use (disabled if blank)
+SYSLOG=${SYSLOG:-daemon}		# Which syslog facility to use (disabled if blank)
 MACHINE=`hostname`				# To specify which machine has crashed when getting the mail
 DUMPDROP=${DUMPDROP:-/tmp}
 RUNDIR=${RUNDIR:-/tmp}
d26 1
a26 1
 ASTPIDFILE=${ASTVARRUNDIR}/asterisk.pid
d29 1
a29 2
-# comment this line out to have this script _not_ kill all mpg123 processes when
+# uncomment this line to have this script kill all mpg123 processes when
d55 1
a55 1
 VERSION=`${ASTSBINDIR}/asterisk -nrx 'core show version' 2>/dev/null`
d76 2
a77 2
 	if test ! -d ${ASTVARRUNDIR} ; then
 		mkdir -p ${ASTVARRUNDIR}
@


1.15
log
@bugfix update to Asterisk 10.12.1, fix imap flavour while there (c-client moved)
@
text
@d6 3
a8 3
--- contrib/scripts/safe_asterisk.orig	Tue Jan 22 18:43:31 2013
+++ contrib/scripts/safe_asterisk	Tue Jan 22 22:33:33 2013
@@@@ -6,9 +6,9 @@@@ ASTVARRUNDIR=__ASTERISK_VARRUN_DIR__
d14 5
a18 4
-#NOTIFY=root@@localhost.localdomain		# Who to notify about crashes
+TTY=							# TTY (if you want one) for Asterisk to run on
+CONSOLE=no						# Whether or not you want a console
+NOTIFY=root						# Who to notify about crashes
d21 5
a25 3
 #SYSLOG=local0					# Which syslog facility to use (disabled if blank)
@@@@ -16,10 +16,11 @@@@ MACHINE=`hostname`				# To specify which machine has c
 DUMPDROP=/tmp
d38 1
a38 1
@@@@ -45,6 +46,19 @@@@ message() {
d58 1
a58 1
@@@@ -73,7 +87,7 @@@@ else
d67 1
a67 1
@@@@ -84,8 +98,10 @@@@ else
@


1.14
log
@Update the asterisk port to 10.8.0 - This is a major update, notable changes:

- If using ConfBridge, note that the dialplan arguments have changed.

- If using the built-in HTTP server, note that a bindaddr must now be given,
previously the default was 0.0.0.0 but this must now be given explicitly.

- Internal database now uses SQLite3 not BDB, conversion tools are provided.

See share/doc/asterisk/UPGRADE.txt for more.
@
text
@d1 1
a1 1
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.13 2011/07/12 19:54:39 sthen Exp $
d6 2
a7 2
--- contrib/scripts/safe_asterisk.orig	Thu May  5 16:06:59 2011
+++ contrib/scripts/safe_asterisk	Thu Jan  5 19:56:40 2012
d54 1
a54 1
 VERSION=`${ASTSBINDIR}/asterisk -nrx 'core show version'`
@


1.13
log
@update to asterisk 1.8.5.0, chan_unistim parts from & ok ian@@
@
text
@d1 1
a1 1
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.12 2010/06/07 20:03:55 sthen Exp $
d6 4
a9 4
--- contrib/scripts/safe_asterisk.orig	Thu May  5 16:04:24 2011
+++ contrib/scripts/safe_asterisk	Mon Jul 11 23:45:36 2011
@@@@ -2,9 +2,9 @@@@
 # vim:textwidth=80:tabstop=4:shiftwidth=4:smartindent:autoindent
d11 1
a11 1
 CLIARGS="$*"				# Grab any args passed to safe_asterisk
d14 10
a23 10
-#NOTIFY=ben@@alkaloid.net	# Who to notify about crashes
+TTY=""						# TTY (if you want one) for Asterisk to run on
+CONSOLE=no					# Whether or not you want a console
+NOTIFY=root					# Who to notify about crashes
 #EXEC=/path/to/somescript	# Run this command if Asterisk crashes
 #LOGFILE=/path/to/logfile	# Where to place the normal logfile (disabled if blank)
 #SYSLOG=local0				# Which syslog facility to use (disabled if blank)
@@@@ -14,10 +14,11 @@@@ SLEEPSECS=4
 ASTSBINDIR=__ASTERISK_SBIN_DIR__
 ASTVARRUNDIR=__ASTERISK_VARRUN_DIR__
d35 1
a35 1
@@@@ -43,6 +44,19 @@@@ message() {
d55 1
a55 1
@@@@ -71,7 +85,7 @@@@ else
d64 1
a64 1
@@@@ -82,8 +96,10 @@@@ else
@


1.13.6.1
log
@SECURITY update for Asterisk in 5.2-stable to 1.8.20.1, includes fixes for the
following (which were fixed in -current by the update to 10.11.1 in January).

AST-2012-014: large stack allocations in TCP; affects remote unauthenticated
SIP *over TCP* and remote authenticated XMPP/HTTP connections.

This was initially suspected to just be a DoS however pirofti@@ pointed me
at this write-up: http://blog.exodusintel.com/2013/01/07/who-was-phone/
(which sheds a bit of light on the increased scans on the default AMI port
that I've noticed recently..)

AST-2012-015: DoS through resource consumption by exploiting device
state caching; exploitable if anonymous calls are permitted.
@
text
@d1 1
a1 1
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.13 2011/07/12 19:54:39 sthen Exp $
d6 2
a7 2
--- contrib/scripts/safe_asterisk.orig	Tue Jan 22 18:20:38 2013
+++ contrib/scripts/safe_asterisk	Sun Mar 17 12:06:59 2013
d54 1
a54 1
 VERSION=`${ASTSBINDIR}/asterisk -nrx 'core show version' 2>/dev/null`
@


1.12
log
@Don't ulimit -n $MAXFILES if $MAXFILES is undefined. Spotted by fgsch@@
@
text
@d1 1
a1 1
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.11 2010/04/08 16:18:00 sthen Exp $
d6 2
a7 2
--- contrib/scripts/safe_asterisk.orig	Tue Jan 12 03:25:20 2010
+++ contrib/scripts/safe_asterisk	Mon Jun  7 17:32:16 2010
d54 1
a54 1
 VERSION=`${ASTSBINDIR}/asterisk -rx 'core show version'`
@


1.11
log
@Update Asterisk to 1.6.2.6, which will be the only of the 1.6.x branches
receiving most updates in the future; notably, compared to the in-tree
version, this adds a portable (pthread-based) clocking source rather
than relying on a non-portable zaptel timer.

Main functions tested and working well for myself and Diego Casati (thanks!)
Note that ConfBridge (added since 1.6.0) may need more work
@
text
@d1 1
a1 1
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.10 2010/03/25 12:01:47 sthen Exp $
d7 1
a7 1
+++ contrib/scripts/safe_asterisk	Fri Apr  2 00:55:43 2010
d35 1
a35 2
@@@@ -42,6 +43,19 @@@@ message() {
 	    echo "safe_asterisk[$$]: $1" >> "$LOGFILE"
d38 1
a38 1
+
d51 1
a51 1
 
d54 23
@


1.10
log
@update to 1.6.0.26 + a patch from a ticket upstream.
@
text
@d1 1
a1 1
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.9 2009/12/13 12:11:29 sthen Exp $
a4 2
- shell portability fix (s/function//)
- use pkill, it's slightly less unportable than killall
d6 2
a7 2
--- contrib/scripts/safe_asterisk.orig	Tue Jan 12 03:24:05 2010
+++ contrib/scripts/safe_asterisk	Thu Mar 25 11:47:50 2010
d21 1
a21 2
@@@@ -13,10 +13,11 @@@@ DUMPDROP=/tmp
 SLEEPSECS=4
d23 3
a25 2
 ASTPIDFILE=__ASTERISK_VARRUN_DIR__/asterisk.pid
+VARRUNOWNER="_asterisk:wheel"	# chown __ASTERISK_VARRUN_DIR__ if it's created.
d35 2
a36 10
@@@@ -32,7 +33,7 @@@@ PRIORITY=0
 # set to the system's maximum files open devided by two, if not set here.
 # MAXFILES=32768
 
-function message() {
+message() {
 	echo "$1" >&2
 	if test "x$SYSLOG" != "x" ; then
 	    logger -p "${SYSLOG}.warn" -t safe_asterisk[$$] "$1"
@@@@ -42,6 +43,19 @@@@ function message() {
d39 1
a39 1
 
d52 1
a52 1
+
a54 10
 VERSION=`${ASTSBINDIR}/asterisk -rx 'core show version'`
@@@@ -186,7 +200,7 @@@@ run_asterisk()
 		message "Automatically restarting Asterisk."
 		sleep $SLEEPSECS
 		if test "0$KILLALLMPG123" -gt "0" ; then
-			killall -9 mpg123
+			pkill -9 mpg123
 		fi
 	done
 }
@


1.9
log
@Major version update to 1.6.0.19. For more information about the
upgrade, see /usr/local/share/doc/asterisk/UPGRADE-1.6.txt

Particular thanks to fgsch@@, ian@@ and Michiel van Baak for help and testing.
@
text
@d1 9
a9 3
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.8 2008/06/14 16:00:10 sthen Exp $
--- contrib/scripts/safe_asterisk.orig	Tue Dec 16 19:55:38 2008
+++ contrib/scripts/safe_asterisk	Fri Apr 24 15:01:35 2009
d44 1
a44 1
 	if [ "$SYSLOG" != "" ]; then
d46 9
a54 4
@@@@ -91,6 +92,12 @@@@ else
 	# set the process's filemax to whatever set above
 	ulimit -n $MAXFILES
 
d61 7
a67 4
 fi
 
 if test "x$UMASK" != "x"; then
@@@@ -192,7 +199,7 @@@@ run_asterisk()
d69 1
a69 2
 		if [ $KILLALLMPG123 ]
 		then
@


1.8
log
@Update Asterisk to 1.4.21, lots of quality-control fixes
ok ian
@
text
@d1 4
a4 4
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.7 2008/05/27 22:14:34 sthen Exp $
--- contrib/scripts/safe_asterisk.orig	Fri May 30 17:44:39 2008
+++ contrib/scripts/safe_asterisk	Thu Jun 12 19:49:36 2008
@@@@ -2,19 +2,20 @@@@
d15 3
a17 2
 MACHINE=`hostname`			# To specify which machine has crashed when getting the mail
 DUMPDROP=/tmp
d31 10
a40 1
@@@@ -74,6 +75,12 @@@@ else
d52 2
a53 2
 #
@@@@ -170,7 +177,7 @@@@ run_asterisk()
@


1.7
log
@update to 1.4.20.1; thanks to Pedro la Peu for additional testing.
@
text
@d1 4
a4 6
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.6 2008/04/02 23:18:11 sthen Exp $
--- contrib/scripts/safe_asterisk.orig	Mon May  5 04:22:25 2008
+++ contrib/scripts/safe_asterisk	Wed May 21 12:36:13 2008
@@@@ -1,20 +1,21 @@@@
-#!/bin/bash
+#!/bin/sh
a29 9
@@@@ -29,7 +30,7 @@@@ PRIORITY=0
 # Check if Asterisk is already running.  If it is, then bug out, because
 # starting safe_asterisk when Asterisk is running is very bad.
 VERSION=`${ASTSBINDIR}/asterisk -rx 'core show version'`
-if [ "${VERSION:0:8}" = "Asterisk" ]; then # otherwise "Unable t"
+if [ "`echo $VERSION | cut -c 1-8`" = "Asterisk" ]; then
 	echo "Asterisk is already running.  $0 will exit now."
 	exit 1
 fi
@


1.6
log
@update to 1.4.19
ok ian@@
@
text
@d1 3
a3 3
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.5 2007/10/04 11:25:44 sthen Exp $
--- contrib/scripts/safe_asterisk.orig	Tue Feb 12 22:22:54 2008
+++ contrib/scripts/safe_asterisk	Tue Mar 18 09:45:42 2008
d32 10
a41 1
@@@@ -66,6 +67,12 @@@@ else
d54 1
a54 1
@@@@ -162,7 +169,7 @@@@ run_asterisk()
@


1.5
log
@bug-fix update to 1.4.12

ok ian@@
@
text
@d1 3
a3 3
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.4 2007/09/05 22:42:52 sthen Exp $
--- contrib/scripts/safe_asterisk.orig	Thu Sep 20 22:01:20 2007
+++ contrib/scripts/safe_asterisk	Wed Oct  3 21:15:26 2007
d45 1
a45 1
@@@@ -167,7 +174,7 @@@@ run_asterisk()
@


1.4
log
@major version update to 1.4.11, ok ian@@ jolan@@
@
text
@d1 6
a6 4
$OpenBSD$
--- contrib/scripts/safe_asterisk.orig	Mon Jun 18 18:46:40 2007
+++ contrib/scripts/safe_asterisk	Wed Aug  1 13:01:21 2007
@@@@ -2,19 +2,20 @@@@
@


1.3
log
@remove empty patch; noticed by Stuart Henderson <stu@@spacehopper.org>
@
text
@d1 51
@


1.2
log
@Upgrade to 1.2.22 to fix several remote exploits, from Stuart, tested by me
@
text
@@


1.1
log
@SECURITY: update to 1.2.19, from maintainer stuart henderson

ASA-2007-013: chan_iax2.c assumes strings are null-terminated without
validating them, potential buffer overrun/information disclosure
@
text
@a0 12
$OpenBSD$
--- contrib/scripts/safe_asterisk.orig	Fri May 11 11:31:03 2007
+++ contrib/scripts/safe_asterisk	Mon Jul  2 08:55:05 2007
@@@@ -39,7 +39,7 @@@@ ulimit -c unlimited
 #
 # Don't die if stdout/stderr can't be written to
 #
-trap '' SIGPIPE
+trap '' PIPE
 
 #
 # Run scripts to set any environment variables or do any other system-specific setup needed
@


1.1.2.1
log
@MFC:
SECURITY: update to 1.2.19, from maintainer stuart henderson

ASA-2007-013: chan_iax2.c assumes strings are null-terminated without
validating them, potential buffer overrun/information disclosure
@
text
@d1 1
a1 1
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.1 2007/07/02 14:03:34 jolan Exp $
@


1.1.2.2
log
@MFC (original commit naddy@@):
- upgrade to 1.2.22 to fix several remote exploits

ok sturm@@
@
text
@d1 1
a1 1
$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.1.2.1 2007/07/06 13:52:18 sturm Exp $
@


