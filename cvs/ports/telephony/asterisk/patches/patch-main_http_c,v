head	1.3;
access;
symbols
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.03.18.21.42.04;	author sthen;	state Exp;
branches;
next	1.2;
commitid	RxgFeqBeHktNBVUd;

1.2
date	2013.10.21.23.38.45;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2013.06.05.00.57.18;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Don't use thread-unsafe getprotobyname(), patch from jira ticket ASTERISK-26759.
Teach some helper scripts about common coredump paths in OpenBSD.
@
text
@$OpenBSD$

https://issues.asterisk.org/jira/browse/ASTERISK-26759

From 8b5fe54d9f46d1c2d16f97a727339f281d4139d3 Mon Sep 17 00:00:00 2001
From: Sean Bright <sean.bright@@gmail.com>
Date: Fri, 17 Mar 2017 21:43:48 -0400
Subject: [PATCH] http: getprotobyname() is not thread safe

Change-Id: I9dfc785d453053668b97886a8b25d202751d8f15

--- main/http.c.orig	Mon Feb 13 19:51:51 2017
+++ main/http.c	Sat Mar 18 14:52:29 2017
@@@@ -1915,8 +1915,7 @@@@ static int httpd_process_request(struct ast_tcptls_ses
 static void *httpd_helper_thread(void *data)
 {
 	struct ast_tcptls_session_instance *ser = data;
-	struct protoent *p;
-	int flags;
+	int flags = 1;
 	int timeout;
 
 	if (!ser || !ser->f) {
@@@@ -1936,16 +1935,8 @@@@ static void *httpd_helper_thread(void *data)
 	 * This is necessary to prevent delays (caused by buffering) as we
 	 * write to the socket in bits and pieces.
 	 */
-	p = getprotobyname("tcp");
-	if (p) {
-		int arg = 1;
-
-		if (setsockopt(ser->fd, p->p_proto, TCP_NODELAY, (char *) &arg, sizeof(arg) ) < 0) {
-			ast_log(LOG_WARNING, "Failed to set TCP_NODELAY on HTTP connection: %s\n", strerror(errno));
-			ast_log(LOG_WARNING, "Some HTTP requests may be slow to respond.\n");
-		}
-	} else {
-		ast_log(LOG_WARNING, "Failed to set TCP_NODELAY on HTTP connection, getprotobyname(\"tcp\") failed\n");
+	if (setsockopt(ser->fd, IPPROTO_TCP, TCP_NODELAY, (char *) &flags, sizeof(flags)) < 0) {
+		ast_log(LOG_WARNING, "Failed to set TCP_NODELAY on HTTP connection: %s\n", strerror(errno));
 		ast_log(LOG_WARNING, "Some HTTP requests may be slow to respond.\n");
 	}
 
@


1.2
log
@update to asterisk 11.6.0
@
text
@d1 1
a1 1
$OpenBSD: patch-main_http_c,v 1.1 2013/06/05 00:57:18 sthen Exp $
d3 1
a3 1
see https://issues.asterisk.org/jira/browse/ASTERISK-21789
d5 37
a41 4
--- main/http.c.orig	Fri May 24 15:05:50 2013
+++ main/http.c	Fri May 24 15:06:07 2013
@@@@ -843,7 +843,7 @@@@ struct ast_variable *ast_http_get_cookies(struct ast_v
 	struct ast_variable *v, *cookies=NULL;
a42 6
 	for (v = headers; v; v = v->next) {
-		if (!strncasecmp(v->name, "Cookie", 6)) {
+		if (!strcasecmp(v->name, "Cookie")) {
 			char *tmp = ast_strdupa(v->value);
 			if (cookies) {
 				ast_variables_destroy(cookies);
@


1.1
log
@Fix cookie parsing in Asterisk's HTTP request parser if an RFC2965 Cookie2
header is present. Needed for AMI/HTTP logins with some http clients.
@
text
@d1 1
a1 1
$OpenBSD$
@

