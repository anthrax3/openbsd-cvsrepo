head	1.2;
access;
symbols
	OPENBSD_4_0:1.2.0.2
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2006.06.12.19.04.10;	author naddy;	state dead;
branches
	1.2.2.1;
next	1.1;

1.1
date	2006.02.15.06.11.40;	author sturm;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.06.15.15.34.35;	author sturm;	state dead;
branches;
next	;

1.2.2.1
date	2007.07.06.13.53.36;	author sturm;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2007.08.09.17.11.03;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@SECURITY:
Update to 1.2.9.1 which addresses a security vulnerability in the IAX2
channel driver (chan_iax2). The vulnerability affects all users with
IAX2 clients that might be compromised or used by a malicious user, and
can lead to denial of service attacks and random Asterisk server crashes
via a relatively trivial exploit.

From: maintainer Stuart Henderson <stu@@spacehopper.org>
@
text
@$OpenBSD: patch-channels_chan_iax2_c,v 1.1 2006/02/15 06:11:40 sturm Exp $
--- channels/chan_iax2.c.orig	Thu Feb  9 15:17:15 2006
+++ channels/chan_iax2.c	Thu Feb  9 15:17:33 2006
@@@@ -5277,7 +5277,7 @@@@
 	
 	memset(&ied, 0, sizeof(ied));
 	if (ies->apparent_addr)
-		memcpy(&new, ies->apparent_addr, sizeof(new));
+		bcopy(ies->apparent_addr, &new, sizeof(new));
 	if (ies->callno)
 		newcall = ies->callno;
 	if (!newcall || !new.sin_addr.s_addr || !new.sin_port) {
@@@@ -5427,7 +5427,7 @@@@
 
 	memset(&us, 0, sizeof(us));
 	if (ies->apparent_addr)
-		memcpy(&us, ies->apparent_addr, sizeof(us));
+		bcopy(ies->apparent_addr, &us, sizeof(us));
 	if (ies->username)
 		ast_copy_string(peer, ies->username, sizeof(peer));
 	if (ies->refresh)
@


1.2.2.1
log
@backport a fix for ASA-2007-013:
chan_iax2.c assumes strings are null-terminated without validating them,
potential buffer overrun/information disclosure
@
text
@d1 13
a13 15
$OpenBSD$
--- channels/chan_iax2.c.orig	Tue Jun  6 17:48:00 2006
+++ channels/chan_iax2.c	Fri Jul  6 15:42:00 2007
@@@@ -6615,6 +6615,13 @@@@ static int socket_read(int *id, int fd, 
 			ast_mutex_unlock(&iaxsl[fr->callno]);
 			return 1;
 		}
+		/* Ensure text frames are NULL-terminated */
+		if (f.frametype == AST_FRAME_TEXT && buf[res - 1] != '\0') {
+			if (res < sizeof(buf))
+				buf[res++] = '\0';
+			else /* Trims one character from the text message, but that's better than overwriting the end of the buffer. */
+				buf[res - 1] = '\0';
+		}
 		f.datalen = res - sizeof(*fh);
d15 7
a21 1
 		/* Handle implicit ACKing unless this is an INVAL, and only if this is 
@


1.2.2.2
log
@- backport some security fixes for
ASA-2007-014 - Stack Buffer Overflow in IAX2 channel driver
ASA-2007-015 - Remote Crash Vulnerability in IAX2 Channel Driver
ASA-2007-016 - Remote Crash Vulnerability in Skinny channel driver from version 1.2.22

All work and testing by Stuart Henderson

ok sturm@@
@
text
@d1 4
a4 25
$OpenBSD: patch-channels_chan_iax2_c,v 1.2.2.1 2007/07/06 13:53:36 sturm Exp $
--- channels/chan_iax2.c.orig	Tue Jul 31 14:52:50 2007
+++ channels/chan_iax2.c	Tue Jul 31 14:52:44 2007
@@@@ -3966,7 +3966,9 @@@@ static int iax2_send(struct chan_iax2_pvt *pvt, struct
 	int sendmini=0;
 	unsigned int lastsent;
 	unsigned int fts;
-		
+
+	frb.fr2.afdatalen = sizeof(frb.buffer);
+
 	if (!pvt) {
 		ast_log(LOG_WARNING, "No private structure for packet?\n");
 		return -1;
@@@@ -6310,7 +6312,8 @@@@ static int socket_read(int *id, int fd, short events, 
 	/* allocate an iax_frame with 4096 bytes of data buffer */
 	fr = alloca(sizeof(*fr) + 4096);
 	fr->callno = 0;
-	
+	fr->afdatalen = 4096; /* From alloca() above */
+
 	res = recvfrom(fd, buf, sizeof(buf), 0,(struct sockaddr *) &sin, &len);
 	if (res < 0) {
 		if (errno != ECONNREFUSED)
@@@@ -6615,6 +6618,13 @@@@ static int socket_read(int *id, int fd, short events, 
a17 8
@@@@ -6679,6 +6689,7 @@@@ static int socket_read(int *id, int fd, short events, 
 					return 1;
 				}
 				f.data = NULL;
+				f.datalen = 0;
 			} else
 				f.data = buf + sizeof(*fh);
 		} else {
@


1.1
log
@use bcopy instead of memcpy to work around a gcc optimizer bug resulting
in unaligned accesses on sparc64
fix WANTLIB
honour CC, CFLAGS more or less

from Stuart Henderson <stu at spacehopper.org>
ok ian, jolan
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@MFC:
SECURITY:
Update to 1.2.9.1 which addresses a security vulnerability in the IAX2
channel driver (chan_iax2). The vulnerability affects all users with
IAX2 clients that might be compromised or used by a malicious user, and
can lead to denial of service attacks and random Asterisk server crashes
via a relatively trivial exploit.
@
text
@d1 1
a1 1
$OpenBSD: patch-channels_chan_iax2_c,v 1.1 2006/02/15 06:11:40 sturm Exp $
@


