head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2015.10.12.22.07.29;	author sthen;	state dead;
branches;
next	1.5;
commitid	s4D60mgjUjajPmDX;

1.5
date	2015.06.08.08.44.52;	author sthen;	state Exp;
branches;
next	1.4;
commitid	fpwQjZS08bdnhHwf;

1.4
date	2015.02.06.23.27.51;	author sthen;	state Exp;
branches;
next	1.3;
commitid	KgnZWoY0Ja6AhSwH;

1.3
date	2014.11.10.20.43.18;	author sthen;	state Exp;
branches;
next	1.2;
commitid	vGvjZWf0bu7xlils;

1.2
date	2014.04.26.11.59.51;	author sthen;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2013.03.28.21.25.17;	author sthen;	state Exp;
branches;
next	;

1.2.2.1
date	2014.11.21.12.42.59;	author sthen;	state Exp;
branches;
next	;
commitid	3vjlsjP3joK2hNK8;


desc
@@


1.6
log
@update to asterisk-13.6.0

this is a major update - upgrading users should review UPGRADE-12.txt and
UPGRADE.txt in /usr/local/share/doc/asterisk. some configurations will work
unchanged, but there have been big changes in other areas, notably AMI,
CDR and CEL.
@
text
@$OpenBSD: patch-res_res_fax_c,v 1.5 2015/06/08 08:44:52 sthen Exp $

https://issues.asterisk.org/jira/secure/attachment/46850/fax-deadlock-v2.patch-11.3.0

--- res/res_fax.c.orig	Thu Jun  4 01:44:42 2015
+++ res/res_fax.c	Fri Jun  5 10:41:19 2015
@@@@ -3398,10 +3398,13 @@@@ static struct ast_frame *fax_detect_framehook(struct a
 		switch (result) {
 		case 'f':
 		case 't':
+			if (!strcmp(ast_channel_exten(chan), "fax")) {
+				ast_debug(1, "Already in a fax extension, not redirecting\n");
+				break;
+			}
 			ast_channel_unlock(chan);
 			if (ast_exists_extension(chan, target_context, "fax", 1,
 			    S_COR(ast_channel_caller(chan)->id.number.valid, ast_channel_caller(chan)->id.number.str, NULL))) {
-				ast_channel_lock(chan);
 				ast_verb(2, "Redirecting '%s' to fax extension due to %s detection\n",
 					ast_channel_name(chan), (result == 'f') ? "CNG" : "T38");
 				pbx_builtin_setvar_helper(chan, "FAXEXTEN", ast_channel_exten(chan));
@@@@ -3411,10 +3414,10 @@@@ static struct ast_frame *fax_detect_framehook(struct a
 				ast_frfree(f);
 				f = &ast_null_frame;
 			} else {
-				ast_channel_lock(chan);
 				ast_log(LOG_NOTICE, "FAX %s detected but no fax extension in context (%s)\n",
 					(result == 'f') ? "CNG" : "T38", target_context);
 			}
+			ast_channel_lock(chan);
 		}
 		ast_framehook_detach(chan, details->faxdetect_id);
 		details->faxdetect_id = -1;
@


1.5
log
@update to asterisk-11.18.0
@
text
@d1 1
a1 1
$OpenBSD: patch-res_res_fax_c,v 1.4 2015/02/06 23:27:51 sthen Exp $
@


1.4
log
@update to asterisk-11.16.0
@
text
@d1 1
a1 1
$OpenBSD: patch-res_res_fax_c,v 1.3 2014/11/10 20:43:18 sthen Exp $
d5 3
a7 3
--- res/res_fax.c.orig	Fri Jan 23 14:51:03 2015
+++ res/res_fax.c	Fri Feb  6 23:03:35 2015
@@@@ -3406,10 +3406,13 @@@@ static struct ast_frame *fax_detect_framehook(struct a
d22 1
a22 1
@@@@ -3419,10 +3422,10 @@@@ static struct ast_frame *fax_detect_framehook(struct a
@


1.3
log
@update to asterisk-11.14.0
@
text
@d1 1
a1 1
$OpenBSD: patch-res_res_fax_c,v 1.2 2014/04/26 11:59:51 sthen Exp $
d5 3
a7 3
--- res/res_fax.c.orig	Tue Oct 28 20:50:55 2014
+++ res/res_fax.c	Mon Nov 10 19:52:06 2014
@@@@ -3396,10 +3396,13 @@@@ static struct ast_frame *fax_detect_framehook(struct a
d22 1
a22 1
@@@@ -3409,10 +3412,10 @@@@ static struct ast_frame *fax_detect_framehook(struct a
@


1.2
log
@update to asterisk 11.9.0
@
text
@d1 1
a1 1
$OpenBSD: patch-res_res_fax_c,v 1.1 2013/03/28 21:25:17 sthen Exp $
d5 3
a7 3
--- res/res_fax.c.orig	Thu Feb 27 16:03:56 2014
+++ res/res_fax.c	Wed Apr 23 22:09:43 2014
@@@@ -3391,10 +3391,13 @@@@ static struct ast_frame *fax_detect_framehook(struct a
d22 1
a22 1
@@@@ -3404,10 +3407,10 @@@@ static struct ast_frame *fax_detect_framehook(struct a
@


1.2.2.1
log
@MFC:  SECURITY update to Asterisk 11.14.1

* AST-2014-012: Fix error with mixed address family ACLs.

* AST-2014-014: Fix race condition where channels may get stuck in
ConfBridge under load.

* AST-2014-017 - app_confbridge: permission escalation/class authorization.

* AST-2014-018 - func_db: DB Dialplan function permission escalation via AMI.
@
text
@d1 1
a1 1
$OpenBSD: patch-res_res_fax_c,v 1.3 2014/11/10 20:43:18 sthen Exp $
d5 3
a7 3
--- res/res_fax.c.orig	Tue Oct 28 20:50:55 2014
+++ res/res_fax.c	Mon Nov 10 19:52:06 2014
@@@@ -3396,10 +3396,13 @@@@ static struct ast_frame *fax_detect_framehook(struct a
d22 1
a22 1
@@@@ -3409,10 +3412,10 @@@@ static struct ast_frame *fax_detect_framehook(struct a
@


1.1
log
@Add patches to resolve a T38 fax-related deadlock researched by chris@@
https://issues.asterisk.org/jira/secure/attachment/46850/fax-deadlock-v2.patch-11.3.0
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- res/res_fax.c.orig	Mon Dec 10 16:55:05 2012
+++ res/res_fax.c	Thu Mar 28 21:05:05 2013
@@@@ -3387,10 +3387,13 @@@@ static struct ast_frame *fax_detect_framehook(struct a
d22 1
a22 1
@@@@ -3400,10 +3403,10 @@@@ static struct ast_frame *fax_detect_framehook(struct a
@

