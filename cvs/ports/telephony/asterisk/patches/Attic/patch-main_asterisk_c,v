head	1.27;
access;
symbols
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.23.0.2
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.2
	OPENBSD_5_0:1.19.0.2
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.18.0.2
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.16.0.2
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_6:1.10.0.2
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4;
locks; strict;
comment	@# @;


1.27
date	2015.04.02.17.09.30;	author sthen;	state dead;
branches;
next	1.26;
commitid	pFawx8i9X16VMpMZ;

1.26
date	2015.02.06.23.27.51;	author sthen;	state Exp;
branches
	1.26.2.1;
next	1.25;
commitid	KgnZWoY0Ja6AhSwH;

1.25
date	2014.11.10.20.43.18;	author sthen;	state Exp;
branches;
next	1.24;
commitid	vGvjZWf0bu7xlils;

1.24
date	2014.09.30.00.19.18;	author sthen;	state Exp;
branches;
next	1.23;
commitid	CKlWs40vyHRtuY2a;

1.23
date	2014.07.12.01.32.13;	author sthen;	state Exp;
branches;
next	1.22;
commitid	YbPHQia12Q6YsBuR;

1.22
date	2014.07.08.10.23.18;	author sthen;	state Exp;
branches;
next	1.21;
commitid	wdCrlIh68jEiQoSB;

1.21
date	2012.03.13.23.17.46;	author sthen;	state dead;
branches;
next	1.20;

1.20
date	2011.09.09.15.29.21;	author sthen;	state Exp;
branches
	1.20.2.1;
next	1.19;

1.19
date	2011.07.12.19.54.39;	author sthen;	state Exp;
branches;
next	1.18;

1.18
date	2011.01.19.11.25.16;	author sthen;	state Exp;
branches;
next	1.17;

1.17
date	2010.11.16.21.58.52;	author sthen;	state Exp;
branches;
next	1.16;

1.16
date	2010.07.25.10.08.03;	author sthen;	state Exp;
branches;
next	1.15;

1.15
date	2010.07.05.22.03.22;	author sthen;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.18.22.10.44;	author sthen;	state Exp;
branches;
next	1.13;

1.13
date	2010.04.08.16.18.00;	author sthen;	state Exp;
branches;
next	1.12;

1.12
date	2010.03.25.12.01.47;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2009.12.13.12.11.29;	author sthen;	state dead;
branches;
next	1.10;

1.10
date	2009.05.22.09.05.10;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2009.03.29.22.23.35;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2008.10.07.09.57.52;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.14.16.00.10;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.27.22.14.34;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2008.04.02.23.18.11;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2008.02.07.22.08.30;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2007.11.27.10.41.04;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2007.10.04.11.25.44;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.05.22.42.52;	author sthen;	state Exp;
branches;
next	;

1.20.2.1
date	2012.04.11.15.12.47;	author sthen;	state dead;
branches;
next	;

1.26.2.1
date	2015.04.02.17.21.01;	author sthen;	state dead;
branches;
next	;
commitid	77NV89UWaeltDPPP;


desc
@@


1.27
log
@update to asterisk-11.17.0, which includes a fix from Ed Hynan for an
FD exhaustion problem he was seeing on OpenBSD.
@
text
@$OpenBSD: patch-main_asterisk_c,v 1.26 2015/02/06 23:27:51 sthen Exp $
--- main/asterisk.c.orig	Mon Dec 22 19:38:58 2014
+++ main/asterisk.c	Fri Feb  6 23:03:35 2015
@@@@ -87,11 +87,9 @@@@ ASTERISK_FILE_VERSION(__FILE__, "$Revision: 1.26 $")
 #elif defined(HAVE_SYSCTL)
 #include <sys/param.h>
 #include <sys/sysctl.h>
-#if !defined(__OpenBSD__)
 #include <sys/vmmeter.h>
 #if defined(__FreeBSD__)
 #include <vm/vm_param.h>
-#endif
 #endif
 #if defined(HAVE_SWAPCTL)
 #include <sys/swap.h>
@


1.26
log
@update to asterisk-11.16.0
@
text
@d1 1
a1 1
$OpenBSD: patch-main_asterisk_c,v 1.25 2014/11/10 20:43:18 sthen Exp $
d4 1
a4 1
@@@@ -87,11 +87,9 @@@@ ASTERISK_FILE_VERSION(__FILE__, "$Revision: 430009 $")
@


1.26.2.1
log
@MFC update to asterisk-11.17.0, including FD leak fix.
@
text
@d1 1
a1 1
$OpenBSD: patch-main_asterisk_c,v 1.26 2015/02/06 23:27:51 sthen Exp $
d4 1
a4 1
@@@@ -87,11 +87,9 @@@@ ASTERISK_FILE_VERSION(__FILE__, "$Revision: 1.26 $")
@


1.25
log
@update to asterisk-11.14.0
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.24 2014/09/30 00:19:18 sthen Exp $
--- main/asterisk.c.orig	Fri May  9 23:28:40 2014
+++ main/asterisk.c	Mon Nov 10 19:52:06 2014
@@@@ -87,11 +87,9 @@@@ ASTERISK_FILE_VERSION(__FILE__, "$Revision: 413587 $")
@


1.24
log
@update to asterisk 11.13.0
@
text
@d1 1
a1 1
$OpenBSD: patch-main_asterisk_c,v 1.23 2014/07/12 01:32:13 sthen Exp $
d3 1
a3 1
+++ main/asterisk.c	Mon Sep 29 11:49:58 2014
@


1.23
log
@update to asterisk 11.11.0
http://downloads.asterisk.org/pub/telephony/asterisk/ChangeLog-11.11.0
@
text
@d1 1
a1 1
$OpenBSD: patch-main_asterisk_c,v 1.22 2014/07/08 10:23:18 sthen Exp $
d3 1
a3 1
+++ main/asterisk.c	Fri Jul 11 23:27:19 2014
@


1.22
log
@add vmmeter.h, for struct vmtotal
@
text
@d1 3
a3 3
$OpenBSD$
--- main/asterisk.c.orig	Tue Jul  8 11:16:25 2014
+++ main/asterisk.c	Tue Jul  8 11:16:50 2014
@


1.21
log
@update to Asterisk 1.8.10.0

- includes the iLBC codec which now has a free copyright license; patent
licensing has a "no litigation" clause (see codecs/ilbc/LICENSE_ADDENDUM)
so mark as not permitted for CDs
@
text
@d1 12
a12 10
$OpenBSD: patch-main_asterisk_c,v 1.20 2011/09/09 15:29:21 sthen Exp $
--- main/asterisk.c.orig	Mon Jul 18 13:06:50 2011
+++ main/asterisk.c	Thu Sep  1 10:37:02 2011
@@@@ -1193,7 +1193,7 @@@@ static pthread_t lthread;
 static int read_credentials(int fd, char *buffer, size_t size, struct console *con)
 {
 #if defined(SO_PEERCRED)
-	struct ucred cred;
+	struct sockpeercred cred;
 	socklen_t len = sizeof(cred);
d14 2
a15 1
 #if defined(HAVE_GETPEEREID)
@


1.20
log
@update to asterisk 1.8.6.0
@
text
@d1 1
a1 1
$OpenBSD: patch-main_asterisk_c,v 1.19 2011/07/12 19:54:39 sthen Exp $
@


1.20.2.1
log
@MFC update to asterisk 1.8.11.0, relative to previous version this
includes fixes for various crash/deadlock problems and the following
SECURITY problems:

AST-2012-002: stack buffer overflow (remote unauthenticated sessions).
requires a dialplan using the Milliwatt application with the 'o' option,
and internal_timing off.  Affects all 1.4+ Asterisk versions.

AST-2012-003: stack buffer overflow (remote unauth'd sessions) in HTTP
manager interface; triggered by long digest authentication strings.
Code injection possibility.  Affects 1.8+.
@
text
@d1 1
a1 1
$OpenBSD: patch-main_asterisk_c,v 1.20 2011/09/09 15:29:21 sthen Exp $
@


1.19
log
@update to asterisk 1.8.5.0, chan_unistim parts from & ok ian@@
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.18 2011/01/19 11:25:16 sthen Exp $
--- main/asterisk.c.orig	Mon Jun 27 17:30:50 2011
+++ main/asterisk.c	Mon Jul 11 23:45:36 2011
@@@@ -1192,7 +1192,7 @@@@ static pthread_t lthread;
@


1.18
log
@SECURITY update to asterisk 1.8.2.1, fixes AST-2011-001 "an issue
when forming an outgoing SIP request while in pedantic mode, which
can cause a stack buffer to be made to overflow if supplied with
carefully crafted caller ID information"

http://downloads.asterisk.org/pub/security/AST-2011-001.html

This is also a major version update to the long-term support
1.8 branch, previous versions of this diff have been tested by
various ports@@ readers, thanks for testing.

Please review /usr/local/share/doc/asterisk/UPGRADE.txt
(also note that memory use has increased).

ok ajacoutot@@ jasper@@
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.17 2010/11/16 21:58:52 sthen Exp $
--- main/asterisk.c.orig	Thu Nov 11 19:42:06 2010
+++ main/asterisk.c	Mon Dec 13 20:33:41 2010
@@@@ -1186,7 +1186,7 @@@@ static pthread_t lthread;
@


1.17
log
@update Asterisk to 1.6.2.14
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.16 2010/07/25 10:08:03 sthen Exp $
--- main/asterisk.c.orig	Wed Sep  1 23:59:50 2010
+++ main/asterisk.c	Thu Nov 11 21:06:11 2010
@@@@ -1176,7 +1176,7 @@@@ static pthread_t lthread;
@


1.16
log
@update to 1.6.2.10, switch to new LIB_DEPENDS etc.
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.15 2010/07/05 22:03:22 sthen Exp $
--- main/asterisk.c.orig	Thu Jun 10 15:25:16 2010
+++ main/asterisk.c	Mon Jul  5 22:50:50 2010
@@@@ -1174,7 +1174,7 @@@@ static pthread_t lthread;
@


1.15
log
@adapt to our new SO_PEERCRED
@
text
@d1 1
a1 6
$OpenBSD: patch-main_asterisk_c,v 1.14 2010/06/18 22:10:44 sthen Exp $

from upstream ticket #17076; don't chgrp /var/run/asterisk
unless it was automatically created


a12 33
@@@@ -3134,7 +3134,7 @@@@ int main(int argc, char *argv[])
 	FILE *f;
 	sigset_t sigs;
 	int num;
-	int isroot = 1;
+	int isroot = 1, rundir_exists = 0;
 	char *buf;
 	const char *runuser = NULL, *rungroup = NULL;
 	char *remotesock = NULL;
@@@@ -3334,8 +3334,12 @@@@ int main(int argc, char *argv[])
 
 	/* It's common on some platforms to clear /var/run at boot.  Create the
 	 * socket file directory before we drop privileges. */
-	if (mkdir(ast_config_AST_RUN_DIR, 0755) && errno != EEXIST) {
-		ast_log(LOG_WARNING, "Unable to create socket file directory.  Remote consoles will not be able to connect! (%s)\n", strerror(x));
+	if (mkdir(ast_config_AST_RUN_DIR, 0755)) {
+		if (errno == EEXIST) {
+			rundir_exists = 1;
+		} else {
+			ast_log(LOG_WARNING, "Unable to create socket file directory.  Remote consoles will not be able to connect! (%s)\n", strerror(x));
+		}
 	}
 
 #ifndef __CYGWIN__
@@@@ -3351,7 +3355,7 @@@@ int main(int argc, char *argv[])
 			ast_log(LOG_WARNING, "No such group '%s'!\n", rungroup);
 			exit(1);
 		}
-		if (chown(ast_config_AST_RUN_DIR, -1, gr->gr_gid)) {
+		if (!rundir_exists && chown(ast_config_AST_RUN_DIR, -1, gr->gr_gid)) {
 			ast_log(LOG_WARNING, "Unable to chgrp run directory to %d (%s)\n", (int) gr->gr_gid, rungroup);
 		}
 		if (setgid(gr->gr_gid)) {
@


1.14
log
@update to 1.6.2.9; various crash fixes (including one with dtmf detection)
@
text
@d1 1
a1 1
$OpenBSD: patch-main_asterisk_c,v 1.13 2010/04/08 16:18:00 sthen Exp $
d7 12
a18 3
--- main/asterisk.c.orig	Tue Jun  1 16:20:14 2010
+++ main/asterisk.c	Wed Jun  9 15:03:29 2010
@@@@ -3130,7 +3130,7 @@@@ int main(int argc, char *argv[])
d27 1
a27 1
@@@@ -3330,8 +3330,12 @@@@ int main(int argc, char *argv[])
d42 1
a42 1
@@@@ -3347,7 +3351,7 @@@@ int main(int argc, char *argv[])
@


1.13
log
@Update Asterisk to 1.6.2.6, which will be the only of the 1.6.x branches
receiving most updates in the future; notably, compared to the in-tree
version, this adds a portable (pthread-based) clocking source rather
than relying on a non-portable zaptel timer.

Main functions tested and working well for myself and Diego Casati (thanks!)
Note that ConfBridge (added since 1.6.0) may need more work
@
text
@d1 1
a1 1
$OpenBSD: patch-main_asterisk_c,v 1.12 2010/03/25 12:01:47 sthen Exp $
d7 3
a9 3
--- main/asterisk.c.orig	Thu Feb 25 21:25:05 2010
+++ main/asterisk.c	Thu Apr  1 02:57:26 2010
@@@@ -3103,7 +3103,7 @@@@ int main(int argc, char *argv[])
d18 1
a18 1
@@@@ -3303,8 +3303,12 @@@@ int main(int argc, char *argv[])
d33 1
a33 1
@@@@ -3320,7 +3324,7 @@@@ int main(int argc, char *argv[])
@


1.12
log
@update to 1.6.0.26 + a patch from a ticket upstream.
@
text
@d1 1
a1 1
$OpenBSD$
d7 3
a9 3
--- main/asterisk.c.orig	Thu Feb 25 21:24:06 2010
+++ main/asterisk.c	Thu Mar 25 08:27:17 2010
@@@@ -2929,7 +2929,7 @@@@ int main(int argc, char *argv[])
d18 1
a18 1
@@@@ -3118,8 +3118,12 @@@@ int main(int argc, char *argv[])
d33 1
a33 1
@@@@ -3135,7 +3139,7 @@@@ int main(int argc, char *argv[])
@


1.11
log
@Major version update to 1.6.0.19. For more information about the
upgrade, see /usr/local/share/doc/asterisk/UPGRADE-1.6.txt

Particular thanks to fgsch@@, ian@@ and Michiel van Baak for help and testing.
@
text
@d1 41
a41 11
$OpenBSD: patch-main_asterisk_c,v 1.10 2009/05/22 09:05:10 sthen Exp $
--- main/asterisk.c.orig	Thu Apr  9 05:31:38 2009
+++ main/asterisk.c	Thu May 21 21:22:19 2009
@@@@ -2552,6 +2552,7 @@@@ static void ast_readconfig(void) 
 			snprintf(ast_config_AST_MONITOR_DIR, sizeof(ast_config_AST_MONITOR_DIR) - 1, "%s/monitor", v->value);
 		} else if (!strcasecmp(v->name, "astvarlibdir")) {
 			ast_copy_string(ast_config_AST_VAR_DIR, v->value, sizeof(ast_config_AST_VAR_DIR));
+		} else if (!strcasecmp(v->name, "astdbdir")) {
 			snprintf(ast_config_AST_DB, sizeof(ast_config_AST_DB), "%s/astdb", v->value);
 		} else if (!strcasecmp(v->name, "astdatadir")) {
 			ast_copy_string(ast_config_AST_DATA_DIR, v->value, sizeof(ast_config_AST_DATA_DIR));
@


1.10
log
@maintenance update to 1.4.25. disable building the speex plugin by default
for now, it causes a SIGBUS at startup (and also did in the previous version)
which hasn't been tracked down yet.
@
text
@d1 1
a1 1
$OpenBSD: patch-main_asterisk_c,v 1.9 2009/03/29 22:23:35 sthen Exp $
@


1.9
log
@maintenance update to 1.4.24
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.8 2008/10/07 09:57:52 sthen Exp $
--- main/asterisk.c.orig	Wed Feb 25 12:43:36 2009
+++ main/asterisk.c	Sat Mar 28 00:12:41 2009
@@@@ -2544,6 +2544,7 @@@@ static void ast_readconfig(void) 
a11 8
@@@@ -2858,6 +2859,7 @@@@ int main(int argc, char *argv[])
 		rungroup = ast_config_AST_RUN_GROUP;
 	if ((!runuser) && !ast_strlen_zero(ast_config_AST_RUN_USER))
 		runuser = ast_config_AST_RUN_USER;
+	chdir("/tmp");
 
 #ifndef __CYGWIN__
 
@


1.8
log
@maintenance update to 1.4.22; many fixes.
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.7 2008/06/14 16:00:10 sthen Exp $
--- main/asterisk.c.orig	Sat Jul 26 16:31:21 2008
+++ main/asterisk.c	Thu Oct  2 22:51:06 2008
@@@@ -2486,6 +2486,7 @@@@ static void ast_readconfig(void) 
d12 1
a12 1
@@@@ -2797,6 +2798,7 @@@@ int main(int argc, char *argv[])
@


1.7
log
@Update Asterisk to 1.4.21, lots of quality-control fixes
ok ian
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.6 2008/05/27 22:14:34 sthen Exp $
--- main/asterisk.c.orig	Tue May 27 19:58:09 2008
+++ main/asterisk.c	Thu Jun 12 19:49:36 2008
@@@@ -2478,6 +2478,7 @@@@ static void ast_readconfig(void) 
d12 1
a12 1
@@@@ -2775,6 +2776,7 @@@@ int main(int argc, char *argv[])
@


1.6
log
@update to 1.4.20.1; thanks to Pedro la Peu for additional testing.
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.5 2008/04/02 23:18:11 sthen Exp $
--- main/asterisk.c.orig	Wed May 21 19:52:07 2008
+++ main/asterisk.c	Sat May 24 08:35:33 2008
@@@@ -2462,6 +2462,7 @@@@ static void ast_readconfig(void) 
d12 1
a12 1
@@@@ -2759,6 +2760,7 @@@@ int main(int argc, char *argv[])
@


1.5
log
@update to 1.4.19
ok ian@@
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.4 2008/02/07 22:08:30 sthen Exp $
--- main/asterisk.c.orig	Fri Mar  7 06:36:33 2008
+++ main/asterisk.c	Tue Mar 18 09:45:42 2008
@@@@ -2412,6 +2412,7 @@@@ static void ast_readconfig(void) 
d12 1
a12 1
@@@@ -2709,6 +2710,7 @@@@ int main(int argc, char *argv[])
@


1.4
log
@update asterisk to 1.4.18 (following testing during RC period)
ok jolan
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.3 2007/11/27 10:41:04 sthen Exp $
--- main/asterisk.c.orig	Thu Jan 24 17:22:09 2008
+++ main/asterisk.c	Wed Jan 30 22:22:58 2008
@@@@ -2410,6 +2410,7 @@@@ static void ast_readconfig(void) 
d12 1
a12 1
@@@@ -2707,6 +2708,7 @@@@ int main(int argc, char *argv[])
@


1.3
log
@update Asterisk to 1.4.14 (with many bug fixes), and h323 flavor
(for interactive builds only).

ok jolan, ian
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.2 2007/10/04 11:25:44 sthen Exp $
--- main/asterisk.c.orig	Wed Oct 17 16:23:51 2007
+++ main/asterisk.c	Sat Nov 17 00:45:45 2007
@@@@ -2411,6 +2411,7 @@@@ static void ast_readconfig(void) 
d12 1
a12 1
@@@@ -2708,6 +2709,7 @@@@ int main(int argc, char *argv[])
@


1.2
log
@bug-fix update to 1.4.12

ok ian@@
@
text
@d1 4
a4 4
$OpenBSD: patch-main_asterisk_c,v 1.1 2007/09/05 22:42:52 sthen Exp $
--- main/asterisk.c.orig	Thu Sep 20 22:16:48 2007
+++ main/asterisk.c	Wed Oct  3 12:50:22 2007
@@@@ -2403,6 +2403,7 @@@@ static void ast_readconfig(void) 
d12 1
a12 1
@@@@ -2701,12 +2702,20 @@@@ int main(int argc, char *argv[])
a19 22
 	if (!is_child_of_nonroot) 
 		ast_set_priority(ast_opt_high_priority);
 
+	/*
+	 * don't try to setuid()/setgid() when only running as 'asterisk -r'
+	 * otherwise users must be root to reconnect to an existing instance,
+	 * even if they already have filesystem permissions on asterisk.ctl
+	 * (see asterisk.conf).
+	 */
+	if(!ast_opt_remote) {
 	if (!is_child_of_nonroot && rungroup) {
 		struct group *gr;
 		gr = getgrnam(rungroup);
@@@@ -2751,7 +2760,7 @@@@ int main(int argc, char *argv[])
 		if (option_verbose)
 			ast_verbose("Running as user '%s'\n", runuser);
 	}
-
+	}
 #endif /* __CYGWIN__ */
 
 #ifdef linux
@


1.1
log
@major version update to 1.4.11, ok ian@@ jolan@@
@
text
@d1 4
a4 4
$OpenBSD$
--- main/asterisk.c.orig	Thu Jun 28 00:29:14 2007
+++ main/asterisk.c	Mon Jul  2 15:45:09 2007
@@@@ -2394,6 +2394,7 @@@@ static void ast_readconfig(void) 
d12 1
a12 1
@@@@ -2692,12 +2693,20 @@@@ int main(int argc, char *argv[])
d33 1
a33 1
@@@@ -2742,7 +2751,7 @@@@ int main(int argc, char *argv[])
@

