head	1.3;
access;
symbols
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	sthen_20140910:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.05.13.01.52.38;	author espie;	state Exp;
branches;
next	1.2;
commitid	JJVdyXsQ7XzSKpfr;

1.2
date	2015.05.17.21.16.54;	author czarkoff;	state Exp;
branches;
next	1.1;
commitid	64ZOwHz2ukEysVE9;

1.1
date	2014.09.10.08.30.31;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	cJSLTV33uBarlFXh;

1.1.1.1
date	2014.09.10.08.30.31;	author sthen;	state Exp;
branches;
next	;
commitid	cJSLTV33uBarlFXh;


desc
@@


1.3
log
@tweak makefile so that we can substitute -lcompiler_rt for -lgcc
fixes build with clang
@
text
@$OpenBSD: patch-third_party_bnlib_Makefile_in,v 1.2 2015/05/17 21:16:54 czarkoff Exp $
Index: third_party/bnlib/Makefile.in
--- third_party/bnlib/Makefile.in.orig
+++ third_party/bnlib/Makefile.in
@@@@ -41,12 +41,9 @@@@ all: $(BNLIB) bntest32.c bntest64.c
 
 # for libzrtp support
 install: all
-	test -d /usr/local/include/libzrtp || mkdir /usr/local/include/libzrtp
-	cp *.h /usr/local/include/libzrtp
-	cp 'libbn.a' '/usr/local/lib/libbn.a'
-	chmod 644 /usr/local/lib/libbn.a
-	chown 0:0 /usr/local/lib/libbn.a
-	$(RANLIB) '/usr/local/lib/libbn.a'
+	${BSD_INSTALL_DATA_DIR} ${PREFIX}/include/libzrtp
+	${BSD_INSTALL_DATA} *.h ${PREFIX}/include/libzrtp
+	${RANLIB} libbn.a
 
 # for libzrtp support
 #check: bntest
@@@@ -60,9 +57,11 @@@@ germtest: germtest.o $(BNLIB)
 	$(LD) $(LDFLAGS) -o $@@ germtest.o $(BNLIB) $(LIBS)
 
 $(BNLIB): $(OBJS)
-	$(AR) r $@@ $?
+	$(AR) $(ARFLAGS) $@@ $?
 	$(RANLIB) $@@
 
+GCCMAGIC1=@@GCCMAGIC1@@
+GCCMAGIC2=@@GCCMAGIC2@@
 # Here we get tricky... if we're compiling with GCC, then GCCMAGIC1 and
 # GCCMAGIC2 are set so that we actually do a link, but with the -r flag
 # (produce relocatable output) and with -lgcc *only*.  This is so that
@@@@ -72,16 +71,16 @@@@ $(BNLIB): $(OBJS)
 # support-library function.
 
 lbn00.o: $(srcdir)/lbn00.c $(HDRS) bnconfig.h
-	$(CC) $(CPPFLAGS) $(CFLAGS) -I. -I$(srcdir) -o $@@ @@GCCMAGIC1@@ lbn00.c @@GCCMAGIC2@@
+	$(CC) $(CPPFLAGS) $(CFLAGS) -I. -I$(srcdir) -o $@@ ${GCCMAGIC1} lbn00.c ${GCCMAGIC2}
 
 lbn16.o: $(srcdir)/lbn16.c $(HDRS) bnconfig.h
-	$(CC) $(CPPFLAGS) $(CFLAGS) -I. -I$(srcdir) -o $@@ @@GCCMAGIC1@@ lbn16.c @@GCCMAGIC2@@
+	$(CC) $(CPPFLAGS) $(CFLAGS) -I. -I$(srcdir) -o $@@ ${GCCMAGIC1} lbn16.c ${GCCMAGIC2}
 
 lbn32.o: $(srcdir)/lbn32.c $(HDRS) bnconfig.h
-	$(CC) $(CPPFLAGS) $(CFLAGS) -I. -I$(srcdir) -o $@@ @@GCCMAGIC1@@ lbn32.c @@GCCMAGIC2@@
+	$(CC) $(CPPFLAGS) $(CFLAGS) -I. -I$(srcdir) -o $@@ ${GCCMAGIC1} lbn32.c ${GCCMAGIC2}
 
 lbn64.o: $(srcdir)/lbn64.c $(HDRS) bnconfig.h
-	$(CC) $(CPPFLAGS) $(CFLAGS) -I. -I$(srcdir) -o $@@ @@GCCMAGIC1@@ lbn64.c @@GCCMAGIC2@@
+	$(CC) $(CPPFLAGS) $(CFLAGS) -I. -I$(srcdir) -o $@@ ${GCCMAGIC1} lbn64.c ${GCCMAGIC2}
 
 # The default .o rule.
 .c.o: bnconfig.h
@


1.2
log
@Don't install libbn.a to avoid conflict with security/gpg5

OK sthen@@, "go for it" espie@@
@
text
@d1 4
a4 3
$OpenBSD: patch-third_party_bnlib_Makefile_in,v 1.1.1.1 2014/09/10 08:30:31 sthen Exp $
--- third_party/bnlib/Makefile.in.orig	Sun Mar 17 19:35:45 2013
+++ third_party/bnlib/Makefile.in	Sat May 16 22:24:15 2015
d21 1
a21 1
@@@@ -60,7 +57,7 @@@@ germtest: germtest.o $(BNLIB)
d29 2
d32 23
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- third_party/bnlib/Makefile.in.orig	Thu Aug 28 00:48:42 2014
+++ third_party/bnlib/Makefile.in	Thu Aug 28 00:51:24 2014
@@@@ -41,12 +41,10 @@@@ all: $(BNLIB) bntest32.c bntest64.c
d14 1
a14 1
+	${BSD_INSTALL_DATA_DIR} ${PREFIX}/include/libzrtp ${PREFIX}/lib
d16 1
a16 2
+	${BSD_INSTALL_DATA} libbn.a ${PREFIX}/lib
+	$(RANLIB) ${PREFIX}/lib/libbn.a
d20 9
@


1.1.1.1
log
@import ports/telephony/libzrtp, from maintainer Dmitrij D. Czarkoff, ok landry@@

Zfone is VoIP encryption software, designed by Phil Zimmermann of PGP. This
SDK is suitable for inclusion in software VoIP clients, firmware for hardware
VoIP phones, VoIP PBX servers, mobile VoIP clients, and SIP border control
servers. The SDK enables interoperation with the rest of the ZRTP community.
@
text
@@
