head     1.1;
branch   1.1.1;
access   ;
symbols  landry_20170620:1.1.1.1 landry:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2017.06.20.17.12.15;  author landry;  state Exp;
branches 1.1.1.1;
next     ;
commitid        kvW9UdtIy39opgEg;

1.1.1.1
date     2017.06.20.17.12.15;  author landry;  state Exp;
branches ;
next     ;
commitid        kvW9UdtIy39opgEg;


desc
@@



1.1
log
@Initial revision
@
text
@# $OpenBSD$

COMMENT =	translator library for point cloud formats

GH_TAGNAME =	1.5.0
GH_ACCOUNT =	PDAL
GH_PROJECT =	PDAL
DISTNAME =	${GH_PROJECT:L}-${GH_TAGNAME}

SHARED_LIBS =	pdal_base 0.0 # 5.1
SHARED_LIBS +=  pdal_plang 0.0 # 5.1
SHARED_LIBS +=  pdal_util 0.0 # 5.1

CATEGORIES =	geo devel textproc

HOMEPAGE =	https://pdal.io/

MAINTAINER =	Landry Breuil <landry@@openbsd.org>

# BSD
PERMIT_PACKAGE_CDROM =	Yes

MODULES =	devel/cmake lang/python

# uses std=c++0x
COMPILER =	clang

MODPY_VERSION =	${MODPY_DEFAULT_VERSION_3}
BUILD_DEPENDS =	math/py-numpy,${MODPY_FLAVOR}
LIB_DEPENDS =	${MODPY_LIB_DEPENDS} \
		geo/gdal \
		devel/jsoncpp \
		databases/postgresql \
		net/curl

WANTLIB +=	c curl gdal geos geotiff jsoncpp m pq pthread ${MODPY_WANTLIB}
WANTLIB +=	xml2 z


CONFIGURE_ARGS =	\
	-DJSONCPP_INCLUDE_DIR=${LOCALBASE}/include/jsoncpp/ \
	-DNUMPY_INCLUDE_DIR=${MODPY_SITEPKG}/numpy/core/include/ \
	-DNUMPY_VERSION=1.9 \
	-DBUILD_PLUGIN_PYTHON=ON

post-extract:
	rm ${WRKSRC}/cmake/modules/FindGDAL.cmake

# needs load extension
# -DBUILD_PLUGIN_SQLITE=ON

.include <bsd.port.mk>
@


1.1.1.1
log
@Import PDAL 1.5.0.

PDAL is a C++ BSD library for translating and manipulating point cloud
data. It is very much like the GDAL library which handles raster and
vector data.

In addition to the library code, PDAL provides a suite of command-line
applications that users can conveniently use to process, filter,
translate, and query point cloud data.

WWW: https://pdal.io

ok sthen@@ ajacoutot@@
@
text
@@
