head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	landry_20153010:1.1.1.1
	pkeshishian:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.04.27.17.02.34;	author danj;	state dead;
branches;
next	1.1;
commitid	nifdTv0HcLEPVWGC;

1.1
date	2015.10.30.17.18.53;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	y9V5N1cjeUSQa130;

1.1.1.1
date	2015.10.30.17.18.53;	author landry;	state Exp;
branches;
next	;
commitid	y9V5N1cjeUSQa130;


desc
@@


1.2
log
@update to osm2pgsql-0.90.0

enable tests but for now most of them fail because they can't connect to a DB

with/ok landry@@
@
text
@$OpenBSD: patch-node-ram-cache_cpp,v 1.1 2015/10/30 17:18:53 landry Exp $

https://github.com/openstreetmap/osm2pgsql/commit/6813ddaf61b6e62f641fc064b528945a46fd41b9

--- node-ram-cache.cpp.orig	Fri Oct 30 17:47:09 2015
+++ node-ram-cache.cpp	Fri Oct 30 17:48:13 2015
@@@@ -362,15 +362,11 @@@@ node_ram_cache::node_ram_cache( int strategy, int cach
         }
     }
 
-#ifdef __MINGW_H
-    fprintf( stderr, "Node-cache: cache=%ldMB, maxblocks=%d*%d, allocation method=%i\n", (cacheSize >> 20), maxBlocks, PER_BLOCK*sizeof(ramNode), allocStrategy );
-#else
-    fprintf( stderr, "Node-cache: cache=%ldMB, maxblocks=%d*%zd, allocation method=%i\n", (cacheSize >> 20), maxBlocks, PER_BLOCK*sizeof(ramNode), allocStrategy );
-#endif
+  fprintf( stderr, "Node-cache: cache=%" PRId64 "MB, maxblocks=%d*%" PRId64 ", allocation method=%i\n", (cacheSize >> 20), maxBlocks, (int64_t) PER_BLOCK*sizeof(ramNode), allocStrategy ); 
 }
 
 node_ram_cache::~node_ram_cache() {
-  fprintf( stderr, "node cache: stored: %" PRIdOSMID "(%.2f%%), storage efficiency: %.2f%% (dense blocks: %i, sparse nodes: %li), hit rate: %.2f%%\n",
+  fprintf( stderr, "node cache: stored: %" PRIdOSMID "(%.2f%%), storage efficiency: %.2f%% (dense blocks: %i, sparse nodes: %" PRId64 "), hit rate: %.2f%%\n",
            storedNodes, 100.0f*storedNodes/totalNodes, 100.0f*storedNodes*sizeof(ramNode)/cacheUsed,
            usedBlocks, sizeSparseTuples,
            100.0f*nodesCacheHits/nodesCacheLookups );
@@@@ -395,8 +391,8 @@@@ node_ram_cache::~node_ram_cache() {
 
 int node_ram_cache::set(osmid_t id, double lat, double lon, const taglist_t &) {
     if ((id > 0 && id >> BLOCK_SHIFT >> 32) || (id < 0 && ~id >> BLOCK_SHIFT >> 32 )) {
-        fprintf(stderr, "\nAbsolute node IDs must not be larger than %lld (got %lld)\n",
-                1ULL << 42, (long long) id);
+        fprintf(stderr, "\nAbsolute node IDs must not be larger than %" PRId64 " (got%" PRId64 " )\n",
+                (int64_t) 1 << 42, (int64_t) id);
         util::exit_nicely();
     }
     totalNodes++;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import osm2pgsql 0.88.1.

osm2pgsql is a tool for loading OpenStreetMap data into a PostgreSQL/PostGIS
database suitable for applications like rendering into a map, geocoding with
Nominatim, or general analysis.

From Patrick Keshishian with tweaks by sthen@@ & myself
ok sthen@@
@
text
@@
