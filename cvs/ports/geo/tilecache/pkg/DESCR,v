head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.30
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.28
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.24
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.26
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.22
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.20
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.18
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.16
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.14
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.12
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.10
	OPENBSD_5_0:1.1.1.1.0.8
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	landry_20091106:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2009.11.06.18.44.45;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.11.06.18.44.45;	author landry;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@TileCache provides a Python-based WMS-C/TMS server, with pluggable
caching mechanisms and rendering backends. In the simplest use case,
TileCache requires only write access to a disk, the ability to run
Python CGI scripts, and a WMS you want to be cached. With these
resources, you can create your own local disk-based cache of any WMS
server, and use the result in any WMS-C supporting client, like
OpenLayers, or any TMS supporting client, like OpenLayers and worldKit.

Note that you might need py-paste if you want to use Tilecache through
WSGI or FastCGI, and/or py-memcached if you plan to use a Memcached
caching backend. See http://tilecache.org/docs/README for details.
@


1.1.1.1
log
@Import Tilecache 2.10:

TileCache provides a Python-based WMS-C/TMS server, with pluggable
caching mechanisms and rendering backends. In the simplest use case,
TileCache requires only write access to a disk, the ability to run
Python CGI scripts, and a WMS you want to be cached. With these
resources, you can create your own local disk-based cache of any WMS
server, and use the result in any WMS-C supporting client, like
OpenLayers, or any TMS supporting client, like OpenLayers and worldKit.
@
text
@@
