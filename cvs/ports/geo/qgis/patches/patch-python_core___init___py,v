head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2016.08.08.17.45.40;	author landry;	state Exp;
branches;
next	;
commitid	kgtur4oqjelyjxc4;


desc
@@


1.1
log
@Update to QGIS 2.16.1.

See http://changelog.qgis.org/en/qgis/version/2.16.0/.

Add two patches reverting selected chunks of upstream commits leading to
segfaults in python/sip initializations, until if figure out what's
wrong in upstream ticket #15347, hopefully at g2k16. With those two
commits reverted, it runs fine...
@
text
@$OpenBSD$

Revert https://github.com/qgis/QGIS/commit/1bc17e6c4f40ab64a7d3443886e13f926dab23b7
http://hub.qgis.org/issues/15347

--- python/core/__init__.py.orig	Wed Aug  3 14:27:13 2016
+++ python/core/__init__.py	Wed Aug  3 14:33:26 2016
@@@@ -30,7 +30,7 @@@@ import string
 from qgis._core import *
 
 
-def register_function(function, arg_count, group, usesgeometry=False, referenced_columns=[QgsFeatureRequest.AllAttributes], **kwargs):
+def register_function(function, arg_count, group, usesgeometry=False, **kwargs):
     """
     Register a Python function to be used as a expression function.
 
@@@@ -59,8 +59,8 @@@@ def register_function(function, arg_count, group, uses
     """
     class QgsExpressionFunction(QgsExpression.Function):
 
-        def __init__(self, func, name, args, group, helptext='', usesgeometry=True, referencedColumns=QgsFeatureRequest.AllAttributes, expandargs=False):
-            QgsExpression.Function.__init__(self, name, args, group, helptext, usesgeometry, referencedColumns)
+        def __init__(self, func, name, args, group, helptext='', usesgeometry=True, expandargs=False):
+            QgsExpression.Function.__init__(self, name, args, group, helptext, usesgeometry)
             self.function = func
             self.expandargs = expandargs
 
@@@@ -100,7 +100,7 @@@@ def register_function(function, arg_count, group, uses
 
     function.__name__ = name
     helptext = helptemplate.safe_substitute(name=name, doc=helptext)
-    f = QgsExpressionFunction(function, name, arg_count, group, helptext, usesgeometry, referenced_columns, expandargs)
+    f = QgsExpressionFunction(function, name, arg_count, group, helptext, usesgeometry, expandargs)
 
     # This doesn't really make any sense here but does when used from a decorator context
     # so it can stay.
@
