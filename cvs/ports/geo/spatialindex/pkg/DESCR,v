head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.16
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.14
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	landry_20130320:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.03.20.21.47.34;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.20.21.47.34;	author landry;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@The purpose of this library is to provide:
* An extensible framework that will support robust spatial indexing
  methods.
* Support for sophisticated spatial queries. Range, point location,
  nearest neighbor and k-nearest neighbor as well as parametric queries
  (defined by spatial constraints) should be easy to deploy and run.
* Easy to use interfaces for inserting, deleting and updating
  information.
* Wide variety of customization capabilities. Basic index and storage
  characteristics like the page size, node capacity, minimum fan-out,
  splitting algorithm, etc. should be easy to customize.
* Index persistence. Internal memory and external memory structures
  should be supported. Clustered and non-clustered indices should be
  easy to be persisted.
@


1.1.1.1
log
@Import spatialindex 1.8.0, needed by upcoming QGis 1.8.0.

The purpose of this library is to provide:
* An extensible framework that will support robust spatial indexing
  methods.
* Support for sophisticated spatial queries. Range, point location,
  nearest neighbor and k-nearest neighbor as well as parametric queries
  (defined by spatial constraints) should be easy to deploy and run.
* Easy to use interfaces for inserting, deleting and updating
  information.
* Wide variety of customization capabilities. Basic index and storage
  characteristics like the page size, node capacity, minimum fan-out,
  splitting algorithm, etc. should be easy to customize.
* Index persistence. Internal memory and external memory structures
  should be supported. Clustered and non-clustered indices should be
  easy to be persisted.

ok ajacoutot@@
@
text
@@
