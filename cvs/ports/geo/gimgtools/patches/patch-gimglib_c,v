head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.18
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.16
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.14
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	jasper_20131305:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.05.13.06.57.01;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.05.13.06.57.01;	author jasper;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

prev_block may be used unitialized.

--- gimglib.c.orig	Sun Mar 10 22:19:00 2013
+++ gimglib.c	Sun Mar 10 22:19:09 2013
@@@@ -104,7 +104,7 @@@@ static int parse_img (struct gimg_struct *img)
 	struct garmin_img *img_header = (struct garmin_img *)(img->base);
 	struct subfile_struct *subfile, *subfiles, *subfiles_tail, *orphans, *orphans_tail;
 	struct submap_struct *submap, *submaps, *submaps_tail;
-	unsigned int block_size, fatstart, fatend, i, prev_block;
+	unsigned int block_size, fatstart, fatend, i, prev_block = 0;
 
 	if (img_header->xor_byte != 0) {
 		fprintf(stderr, "XOR is not 0. Fix it first.\n");
@


1.1.1.1
log
@import gimgtools-0.02

gimgtools is a set of command-line tools to examine and manipulate
Garmin IMG (the map format) files. The included tools are:

* gimgunlock: Unlock a locked map so that it can be used on ALL devices.
* gimgxor: Unscramble XOR'd map files.
* gimginfo: Print information of the map.
* gimgextract: Extract the IMG sections.
* gimgch: Hexdump and compare section header of two or more IMGs.

ok sebastia@@
@
text
@@
