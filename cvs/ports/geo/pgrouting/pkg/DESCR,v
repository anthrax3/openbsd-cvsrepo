head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.8
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	landry_20141216:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2014.12.16.21.34.35;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	mmSmEcR4utOOpGIq;

1.1.1.1
date	2014.12.16.21.34.35;	author landry;	state Exp;
branches;
next	;
commitid	mmSmEcR4utOOpGIq;


desc
@@



1.1
log
@Initial revision
@
text
@pgRouting extends the PostGIS / PostgreSQL geospatial database to provide
geospatial routing functionality.

Advantages of the database routing approach are:

* Data and attributes can be modified by many clients, like QGIS and
  uDig through JDBC, ODBC, or directly using Pl/pgSQL. The clients can
  either be PCs or mobile devices.
* Data changes can be reflected instantaneously through the routing
  engine. There is no need for precalculation.
* The "cost" parameter can be dynamically calculated through SQL and its
  value can come from multiple fields or tables.
@


1.1.1.1
log
@Import pgrouting 2.0.0

pgRouting extends the PostGIS / PostgreSQL geospatial database to provide
geospatial routing functionality.

Advantages of the database routing approach are:

* Data and attributes can be modified by many clients, like QGIS and
  uDig through JDBC, ODBC, or directly using Pl/pgSQL. The clients can
  either be PCs or mobile devices.
* Data changes can be reflected instantaneously through the routing
  engine. There is no need for precalculation.
* The "cost" parameter can be dynamically calculated through SQL and its
  value can come from multiple fields or tables.

ok sthen@@
@
text
@@
