head	1.11;
access;
symbols
	OPENBSD_6_1:1.10.0.2
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	landry_20141216:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2017.04.28.10.42.42;	author landry;	state Exp;
branches;
next	1.10;
commitid	SznjesOKDKkoHZuV;

1.10
date	2016.10.31.17.59.01;	author landry;	state Exp;
branches;
next	1.9;
commitid	7LmzgjVKGfJ1s129;

1.9
date	2016.07.09.09.09.10;	author sthen;	state Exp;
branches;
next	1.8;
commitid	6UTy3AiMgjyDIiRL;

1.8
date	2016.03.18.23.12.17;	author naddy;	state Exp;
branches;
next	1.7;
commitid	KZAl4KEiw6a3Jixw;

1.7
date	2015.09.19.15.44.12;	author landry;	state Exp;
branches;
next	1.6;
commitid	vvL3AIQSI9z8I7Ii;

1.6
date	2015.08.21.22.51.10;	author sthen;	state Exp;
branches;
next	1.5;
commitid	Ahig7CHjExrDzTdF;

1.5
date	2015.04.05.14.58.42;	author sthen;	state Exp;
branches;
next	1.4;
commitid	qIl2np7rf5XhG9ch;

1.4
date	2015.04.05.13.31.14;	author sthen;	state Exp;
branches;
next	1.3;
commitid	1hQJnDR1GYYQ0MPE;

1.3
date	2015.01.12.20.57.55;	author zhuk;	state Exp;
branches;
next	1.2;
commitid	GI7dBb23lfxvh7gv;

1.2
date	2014.12.19.21.16.55;	author landry;	state Exp;
branches;
next	1.1;
commitid	gnMKwUfrcF0mQNMt;

1.1
date	2014.12.16.21.34.35;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	mmSmEcR4utOOpGIq;

1.1.1.1
date	2014.12.16.21.34.35;	author landry;	state Exp;
branches;
next	;
commitid	mmSmEcR4utOOpGIq;


desc
@@


1.11
log
@Update to pgrouting 2.4.1.
@
text
@# $OpenBSD: Makefile,v 1.10 2016/10/31 17:59:01 landry Exp $

COMMENT =	geospatial routing extension for PostgreSQL

GH_TAGNAME =	v2.4.1
GH_PROJECT =	pgrouting
GH_ACCOUNT =	pgRouting

CATEGORIES =	geo databases

HOMEPAGE =	http://pgrouting.org/

MAINTAINER =	Landry Breuil <landry@@openbsd.org>

# GPLv2
PERMIT_PACKAGE_CDROM=	Yes

WANTLIB +=	CGAL boost_system-mt boost_thread-mt gmp m pthread
WANTLIB +=	boost_atomic-mt boost_chrono-mt boost_date_time-mt

MODULES =	databases/postgresql devel/cmake gcc4
MODGCC4_ARCHS =	*
MODGCC4_LANGS =	c c++

LIB_DEPENDS =	math/cgal
RUN_DEPENDS =	geo/postgis
BUILD_DEPENDS =	databases/postgresql,-server
TEST_DEPENDS =	${BUILD_PKGPATH}
TEST_ENV =	LD_PRELOAD=libpthread.so

MODPOSTGRESQL_TEST_CMD = \
	cd ${WRKSRC}; \
	./tools/testers/algorithm-tester.pl

.include <bsd.port.mk>
@


1.10
log
@Update to pgrouting 2.3.0.

http://docs.pgrouting.org/2.3/en/doc/src/changelog/release_notes.html#changelog-2-3-0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2016/07/09 09:09:10 sthen Exp $
d5 1
a5 1
GH_TAGNAME =	pgrouting-2.3.0
a8 1
DISTNAME =	${GH_TAGNAME}
@


1.9
log
@sync WANTLIB
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2016/03/18 23:12:17 naddy Exp $
d5 1
a5 1
GH_COMMIT =	6bb82c56e3c4a37ae6a18b5e3f1e551d8c9d10d8
d9 1
a9 2
DISTNAME =	pgrouting-2.1.0
REVISION =	0
d34 1
a34 5
	./tools/test-runner.pl

SUBST_VARS +=	MODPOSTGRESQL_TEST_PGHOST
pre-configure:
	${SUBST_CMD} ${WRKSRC}/tools/test-runner.pl
@


1.8
log
@remove SHARED_ONLY from ports that only use modules that neither set nor
read this variable
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2015/09/19 15:44:12 landry Exp $
d10 1
d20 3
a31 1
WANTLIB +=	CGAL boost_system-mt boost_thread-mt gmp m stdc++ pthread
@


1.7
log
@Update to pgrouting 2.1.0.

Tested with grenoble data from mapzen metro extracts, imported with
osm2pgrouting, and using pgRoutingLayer extension in QGIS.
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.6 2015/08/21 22:51:10 sthen Exp $

SHARED_ONLY =	Yes
@


1.6
log
@sync WANTLIB
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2015/04/05 14:58:42 sthen Exp $
d7 1
a7 2
#GH_TAGNAME =	v2.0.0
GH_COMMIT =	d6ed2cba4c574b8ac463632df451b6f011fd522d
a9 1
REVISION =	1
d11 1
a11 1
DISTNAME =	pgrouting-2.0.0
d21 3
a23 1
MODULES =	databases/postgresql devel/cmake
@


1.5
log
@this was GH_TAG not GH_TAGNAME so got caught by poisoning. comment-out for now,
rather than regenning distinfo.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2015/04/05 13:31:14 sthen Exp $
d11 1
a11 1
REVISION =	0
d30 1
a30 1
WANTLIB +=	CGAL boost_system-mt boost_thread-mt gmp m stdc++
@


1.4
log
@drop GH_COMMIT lines which are hidden behind GH_TAGNAME,
discussed with a few in the room.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2015/01/12 20:57:55 zhuk Exp $
d7 2
a8 1
GH_TAG =	v2.0.0
@


1.3
log
@Use new shiny postgresql.port.mk.

Input for pgrouting part and okay for it from landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2014/12/19 21:16:55 landry Exp $
a7 1
GH_COMMIT =	d6ed2cba4c574b8ac463632df451b6f011fd522d
@


1.2
log
@Enable the regress test like its done for postgis (prompted by zhuk@@,
thanks!) - fix RDEP while here, postgis is needed at runtime.
@
text
@d1 1
a1 1
# $OpenBSD$
d23 1
a23 1
MODULES =	devel/cmake
d29 1
d32 7
a38 7
do-test:
	regdir=$$(mktemp -t -d pgrouting-regress.XXXXXX) && \
	LC_CTYPE=C initdb -D $${regdir} && \
	LD_PRELOAD=libpthread.so pg_ctl -D $${regdir} -o '-p 12341' -l $${regdir}/log start && \
	cd ${WRKSRC} && perl tools/test-runner.pl -pgport 12341 || \
	pg_ctl -D $${regdir} -o '-p 12341'  stop -m fast
	#not all tests pass - ensure we stop the server
@


1.1
log
@Initial revision
@
text
@d11 1
d26 1
a26 1
RUN_DEPENDS =	databases/postgresql,-server
d28 1
d30 8
a37 1
NO_TEST =	Yes
@


1.1.1.1
log
@Import pgrouting 2.0.0

pgRouting extends the PostGIS / PostgreSQL geospatial database to provide
geospatial routing functionality.

Advantages of the database routing approach are:

* Data and attributes can be modified by many clients, like QGIS and
  uDig through JDBC, ODBC, or directly using Pl/pgSQL. The clients can
  either be PCs or mobile devices.
* Data changes can be reflected instantaneously through the routing
  engine. There is no need for precalculation.
* The "cost" parameter can be dynamically calculated through SQL and its
  value can come from multiple fields or tables.

ok sthen@@
@
text
@@
