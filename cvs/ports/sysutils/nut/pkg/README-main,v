head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.8
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.6
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2;
locks; strict;
comment	@# @;


1.9
date	2015.06.18.21.18.04;	author kirby;	state Exp;
branches;
next	1.8;
commitid	tFmXDPCX7JUcwD1U;

1.8
date	2015.05.02.21.52.19;	author sthen;	state Exp;
branches;
next	1.7;
commitid	830u3zozHoNUIv3a;

1.7
date	2015.01.22.16.42.09;	author sthen;	state Exp;
branches;
next	1.6;
commitid	8kubQlnh8Gi1cPTn;

1.6
date	2014.08.14.06.54.24;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	4WqjyVF6zYI56CYM;

1.5
date	2014.07.19.22.36.13;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	MSFt4PoL3vJ8bL97;

1.4
date	2014.07.12.14.55.40;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	e5XWMyIdQTiAJLnw;

1.3
date	2012.11.08.21.59.01;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2012.01.24.12.38.44;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2012.01.12.11.39.36;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.9
log
@tell people to disable uhidev not uhid.
input and ok from sthen@@ (MAINTAINER)
@
text
@$OpenBSD: README-main,v 1.8 2015/05/02 21:52:19 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

NUT is split into separate components. A hardware driver interfaces
with the device and sends information to upsd. A monitor (upsmon)
connects to upsd and shuts down the machine when necessary.

These components can reside on separate computers (i.e. UPS monitored
by various computers may communicate with a central upsd, and a whole
network may run upsmon to allow for shutdown).

On OpenBSD, daemons from packages are usually started by adding to the
pkg_scripts line in /etc/rc.conf.local. For NUT, machines running
upsd or the hardware driver should include "upsd" in this line, and all
machines should include "upsmon". Where you run both, upsd should
be started first. For example you could use this line:

	pkg_scripts=upsd upsmon [...any other daemons...]

Network devices
---------------
To reduce dependencies for the basic NUT package, some network devices
are supported by optional subpackages: nut-snmp (for SNMP-based devices),
nut-xml (for Eaton/MGE devices using an XML/HTTP protocol).

Connecting to a remote server running nutd(8) requires only the basic
NUT package which also includes the file you are reading now.

Configuring NUT
---------------
The following files must be edited for a typical installation.

* ups.conf

Details of UPS device/s are held here. These may either be directly
connected, or network devices (this can include a NUT server running on
another machine). Configuration sections for this file can be generated
for network and USB devices using nut-scanner(8). This is in the main
NUT package but picks up dependencies at runtime, so if you wish
to scan for network devices, just make sure the relevant package
is installed before you run the scanner.

To scan for network devices, specify start and end IP addresses:

	# nut-scanner -s 192.168.17.1 -e 192.168.17.20

* upsd.users

upsd(8) user authentication is configured here.

* upsmon.conf

This file informs upsmon(8) which devices (configured in ups.conf) it
should monitor. It also contains passwords to authenticate to upsd(8).

Device permissions
------------------
For locally connected UPS devices, the userid running NUT (normally
_ups) must have access to the relevant device nodes.

RS232: Either add _ups to group "dialer" or change the group ownership
of the relevant /dev/tty* device to _ups.

USB: Use "usbdevs -vd" (as root) to identify the specific controller
(/dev/usbXX) and ugen (/dev/ugenXX) device nodes, then chgrp these to _ups.

Special notice for APC USB devices
----------------------------------
Some APC USB devices are reported to only work with NUT if the device is
attached to ugen(4). Normally these devices attach to upd(4) to provide
system power sensors (see "sysctl hw.sensors"). If you are having problems
using such a device with NUT, you may need to prevent this attachment.
 
The option with fewest side-effects is to add the following entries to
the table in /sys/dev/usb/usb_quirks.c and build a new kernel:

{ USB_VENDOR_APC, USB_PRODUCT_APC_UPS, ANY, { UQ_BAD_HID }},
{ USB_VENDOR_APC, USB_PRODUCT_APC_UPS5G, ANY, { UQ_BAD_HID }},

Alternatively, if you do not use a USB keyboard/mouse, you could simply
disable the upd and uhidev drivers. The following line creates a new kernel
with the relevant changes:

  printf 'disable uhidev\ndisable upd\nquit\n' | config -e -o /bsd.no-uhid /bsd

Starting the daemons
--------------------
To start the daemons without rebooting you can use:

	# ${RCDIR}/upsd start
	# ${RCDIR}/upsmon start

NUT documentation refers to a nut.conf file; this can be ignored, it is
only used with their System V init scripts, and not OpenBSD's rc scripts.

It is recommended that you test a full cycle of rebooting, checking
that the daemons are running correctly ("upsc <upsname>" will display
information retrieved by NUT from the UPS), allowing the machine
to be shut down by the UPS, and returning power.
@


1.8
log
@Tweaks to sysutils/nut:

- Install libupsclient headers/pkgconfig files. landry@@ asked about
these; they needed a --with-dev configure flag to get them installed...

- Get rid of the useless ${NUT_USER} and ${NUT_ID} SUBST_VARS which are
now getting in the way of new files in the PLIST.

- Move some files from /usr/local/share/ups to a more easily recognisable
/usr/local/share/nut.
@
text
@d1 1
a1 1
$OpenBSD: README-main,v 1.7 2015/01/22 16:42:09 sthen Exp $
d84 1
a84 1
disable the upd and uhid drivers. The following line creates a new kernel
d87 1
a87 1
  printf 'disable uhid\ndisable upd\nquit\n' | config -e -o /bsd.no-uhid /bsd
@


1.7
log
@Add a note that some APC devices need ugen to work with NUT.
@
text
@d1 1
a1 1
$OpenBSD: README-main,v 1.6 2014/08/14 06:54:24 ajacoutot Exp $
d62 1
a62 1
${NUT_USER}) must have access to the relevant device nodes.
d64 2
a65 2
RS232: Either add ${NUT_USER} to group "dialer" or change the group
ownership of the relevant /dev/tty* device to ${NUT_USER}.
d67 2
a68 3
USB: Change the group of the relevant /dev/ugen* and /dev/usb* devices
to ${NUT_USER}; to identify the specific controller and ugen device
names, use "sudo usbdevs -vd".
@


1.6
log
@Drop configuration files only used by System V init scripts and add a
mention in the README.

input/ok sthen@@ (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: README-main,v 1.5 2014/07/19 22:36:13 ajacoutot Exp $
d70 19
@


1.5
log
@/etc/rc.d -> ${RCDIR}
(as pedantic and useless as /usr/local vs LOCALBASE|PREFIX but well...)

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README-main,v 1.4 2014/07/12 14:55:40 ajacoutot Exp $
d77 3
@


1.4
log
@pkg_scripts is not a variable anymore.
@
text
@d1 1
a1 1
$OpenBSD: README-main,v 1.3 2012/11/08 21:59:01 sthen Exp $
d75 2
a76 2
	# /etc/rc.d/upsd start
	# /etc/rc.d/upsmon start
@


1.3
log
@README tweak: show people how to start the daemons without rebooting.
@
text
@d1 1
a1 1
$OpenBSD: README-main,v 1.2 2012/01/24 12:38:44 sthen Exp $
d16 1
a16 1
pkg_scripts variable in /etc/rc.conf.local. For NUT, machines running
d21 1
a21 1
	pkg_scripts="upsd upsmon [...any other daemons...]"
@


1.2
log
@tweak README
@
text
@d1 1
a1 1
$OpenBSD: README-main,v 1.1 2012/01/12 11:39:36 sthen Exp $
d15 3
a17 3
On OpenBSD, daemons are usually started by adding to the pkg_scripts
variable in /etc/rc.conf.local. For NUT, machines running upsd or
the hardware driver should include "upsd" in this line, and all
d70 12
@


1.1
log
@bit of a tidy-up for NUT.

- move MESSAGE to README and flesh it out a bit

- fix libwrap detection in autoconf

- install the avahi service definition to the right place again; this got
broken when moving to using SYSCONFDIR overrides / BASESYSCONFDIR
@
text
@d1 1
a1 1
$OpenBSD: README.template,v 1.4 2011/06/02 13:44:40 ajacoutot Exp $
d23 36
d60 1
a60 1
==================
a69 20

Network devices
===============
To reduce dependencies for the basic NUT package, support for network
devices has been split into subpackages. Separate packages are provided
for SNMP-based devices, and for Eaton/MGE devices using an XML/HTTP
protocol. Install these with pkg_add if wanted:

# pkg_add nut-snmp
# pkg_add nut-xml

Configuration sections can be automatically generated for various
device types (network/USB) using the nut-scanner tool. This is in the
main nut package but picks up dependencies at runtime, so if you wish
to scan for network devices, just make sure the relevant package
is installed before you run the scanner.

To scan for network devices, specify start and end IP addresses:

# nut-scanner -s 192.168.17.1 -e 192.168.17.20
@

