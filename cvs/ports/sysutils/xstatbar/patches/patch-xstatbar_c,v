head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.8
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.6
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.02.09.12.00.16;	author sthen;	state Exp;
branches;
next	;
commitid	me2R3zaNQ8MbRM2R;


desc
@@


1.1
log
@Fix memory leak in xstatbar, from Gregor Best (thank you!), ok ajacoutot@@

"The problem is that XCopyArea generates either a GraphicsExpose or
a NoExpose event after it's done. Since xstatbar doesn't have the
traditional X event loop, the events just accumulate in the queue."
@
text
@--- xstatbar.c.orig	Tue Feb  9 11:18:02 2016
+++ xstatbar.c	Tue Feb  9 11:19:05 2016
@@@@ -297,6 +297,7 @@@@
 void
 draw()
 {
+   XEvent dummy;
    static int spacing = 10;
    int x, y;
    int cpu;
@@@@ -323,6 +324,7 @@@@
    /* copy the buffer to the window and flush */
    XCopyArea(XINFO.disp, XINFO.buf, XINFO.win, XINFO.gc,
       0, 0, XINFO.width, XINFO.height, 0, 0);
+   XNextEvent(XINFO.disp, &dummy);
    XFlush(XINFO.disp);
 }
 
@
