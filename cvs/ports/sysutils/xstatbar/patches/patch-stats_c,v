head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.8
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.6
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.7.0.14
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.12
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.10
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.8
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5;
locks; strict;
comment	@# @;


1.8
date	2015.07.03.08.42.19;	author sthen;	state Exp;
branches;
next	1.7;
commitid	vCcBj5AwYj93IOVK;

1.7
date	2011.11.17.14.23.36;	author robert;	state Exp;
branches;
next	1.6;

1.6
date	2011.11.17.14.16.51;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2011.08.02.15.17.43;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.12.18.01.20;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2010.05.12.17.20.22;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.12.13.06.54;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.03.21.11.37.17;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Buffer cache memory display was added to xstatbar in a local patch, which is
stored in an extra element of an array, however the array allocation size was
not increased to match. Fix. Found by valgrind while investigating a leak.
@
text
@$OpenBSD: patch-stats_c,v 1.7 2011/11/17 14:23:36 robert Exp $

If devinfo.type != AUDIO_MIXER_CLASS is true, xstatbar will never make
progress and loop forever. Fix it by trying the next device.

--- stats.c.orig	Tue Aug  3 18:04:34 2010
+++ stats.c	Fri Jul  3 09:36:16 2015
@@@@ -101,8 +101,10 @@@@ volume_init()
    devinfo.index = 0;
    while (ioctl(volume.dev_fd, AUDIO_MIXER_DEVINFO, &devinfo) >= 0) {
 
-      if (devinfo.type != AUDIO_MIXER_CLASS)
+      if (devinfo.type != AUDIO_MIXER_CLASS) {
+         devinfo.index++;
          continue;
+      }
 
       if (strncmp(devinfo.label.name, AudioCoutputs, MAX_AUDIO_DEV_LEN) == 0)
          oclass_idx = devinfo.index;
@@@@ -358,7 +360,7 @@@@ sysinfo_init(int hist_size)
       err(1, "sysinfo init: memory calloc failed");
 
    for (i = 0; i < hist_size; i++) {
-      if ((sysinfo.memory[i] = calloc(3, sizeof(int))) == NULL)
+      if ((sysinfo.memory[i] = calloc(4, sizeof(int))) == NULL)
          err(1, "sysinfo init: memory[%d] calloc failed", i);
 
       for (j = 0; j < 3; j++)
@@@@ -405,9 +407,11 @@@@ sysinfo_update()
    static int mib_nprocs[] = { CTL_KERN, KERN_NPROCS };
    static int mib_vm[] = { CTL_VM, VM_METER };
    static int mib_cpus[] = { CTL_KERN, 0, 0 };
+   static int mib_bcstats[] = {CTL_VFS, VFS_GENERIC, VFS_BCACHESTAT};
    static int diffs[CPUSTATES] = { 0 };
    struct vmtotal vminfo;
    struct swapent *swapdev;
+   struct bcachestats bcstats;
    size_t    size;
    int       cpu, state;
    int       cur, prev;
@@@@ -431,9 +435,16 @@@@ sysinfo_update()
    if (sysctl(mib_vm, 2, &vminfo, &size, NULL, 0) < 0)
       err(1, "sysinfo update: VM.METER failed");
 
+   /* update bufcache statistics */
+   size = sizeof(bcstats);
+   if (sysctl(mib_bcstats, 3, &bcstats, &size, NULL, 0) < 0)
+      err(1, "sysinfo update: VFS_BCACHESTAT failed");
+
+
    sysinfo.memory[cur][MEM_ACT] = vminfo.t_arm << sysinfo.pageshift;
    sysinfo.memory[cur][MEM_TOT] = vminfo.t_rm << sysinfo.pageshift;
    sysinfo.memory[cur][MEM_FRE] = vminfo.t_free << sysinfo.pageshift;
+   sysinfo.memory[cur][MEM_CCH] = bcstats.numbufpages << sysinfo.pageshift;
 
    /* get swap status */
    if ((nswaps = swapctl(SWAP_NSWAP, 0, 0)) == 0)
@@@@ -594,7 +605,8 @@@@ mem_draw(XColor color, int x, int y)
    /* determine total memory */
    total = sysinfo.memory[cur][MEM_ACT]
          + sysinfo.memory[cur][MEM_TOT]
-         + sysinfo.memory[cur][MEM_FRE];
+         + sysinfo.memory[cur][MEM_FRE]
+         + sysinfo.memory[cur][MEM_CCH];
 
    /* start drawing ... */
    x += render_text(color, x, y, "mem:") + 1;
@@@@ -610,7 +622,8 @@@@ mem_draw(XColor color, int x, int y)
 
       if ((sysinfo.memory[time][MEM_ACT] != 0)
       ||  (sysinfo.memory[time][MEM_TOT] != 0)
-      ||  (sysinfo.memory[time][MEM_FRE] != 0)) {
+      ||  (sysinfo.memory[time][MEM_FRE] != 0)
+      ||  (sysinfo.memory[time][MEM_CCH] != 0)) {
 
 
          /* draw yellow (total) bar */
@@@@ -627,6 +640,13 @@@@ mem_draw(XColor color, int x, int y)
          XDrawLine(XINFO.disp, XINFO.buf, XINFO.gc,
             x + col, XINFO.height - h,
             x + col, XINFO.height);
+
+         /* draw magenta (cache) bar */
+         h = sysinfo.memory[time][MEM_CCH] * XINFO.height / total;
+         XSetForeground(XINFO.disp, XINFO.gc, COLOR_MAGENTA.pixel);
+         XDrawLine(XINFO.disp, XINFO.buf, XINFO.gc,
+            x + col, XINFO.height - h,
+            x + col, XINFO.height);
       }
 
       time = (time + 1) % sysinfo.hist_size;
@@@@ -639,6 +659,8 @@@@ mem_draw(XColor color, int x, int y)
    x += render_text(COLOR_YELLOW, x, y, fmtmem(sysinfo.memory[cur][MEM_TOT]));
    x += render_text(color, x, y, "/");
    x += render_text(COLOR_GREEN, x, y, fmtmem(sysinfo.memory[cur][MEM_FRE]));
+   x += render_text(color, x, y, "/");
+   x += render_text(COLOR_MAGENTA, x, y, fmtmem(sysinfo.memory[cur][MEM_CCH]));
 
    /* draw swap, if any is used */
    if (sysinfo.swap_used > 0) {
@


1.7
log
@also draw the cache in the graph
@
text
@d1 1
a1 1
$OpenBSD: patch-stats_c,v 1.6 2011/11/17 14:16:51 robert Exp $
d6 2
a7 2
--- stats.c.orig	Tue Aug  3 19:04:34 2010
+++ stats.c	Thu Nov 17 15:22:44 2011
d20 9
@


1.6
log
@add buffercache support and show the cached amount of memory in magenta
ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-stats_c,v 1.5 2011/08/02 15:17:43 ajacoutot Exp $
d7 1
a7 1
+++ stats.c	Thu Nov 17 15:14:29 2011
d69 15
a83 1
@@@@ -639,6 +652,8 @@@@ mem_draw(XColor color, int x, int y)
@


1.5
log
@Prevent xstatbar to hang on startup with some audio chip:
if devinfo.type != AUDIO_MIXER_CLASS is true, xstatbar will never make
progress and loop forever. Fix it by trying the next device.

from Tobias Ulmer, thanks!
ok jasper@@ landry@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 2
a7 2
--- stats.c.orig	Tue Aug  2 17:10:04 2011
+++ stats.c	Tue Aug  2 17:11:47 2011
d20 58
@


1.4
log
@Smallish new release.
@
text
@d1 1
a1 1
$OpenBSD: patch-stats_c,v 1.3 2010/05/12 17:20:22 ajacoutot Exp $
d3 2
a4 2
Make correct use of open(2): the mode arg is only needed with the
O_CREAT flag.
d6 5
a10 4
--- stats.c.orig	Wed May 12 17:38:15 2010
+++ stats.c	Wed May 12 19:14:19 2010
@@@@ -83,7 +83,7 @@@@ volume_init()
    volume.is_setup = false;
d12 8
a19 6
    /* open mixer */
-   if ((volume.dev_fd = open("/dev/mixer", O_RDWR, "rw")) < 0) {
+   if ((volume.dev_fd = open("/dev/mixer", O_RDWR)) < 0) {
       warn("volume: failed to open /dev/mixer");
       return;
    }
@


1.3
log
@Update to xstatbar-0.4 that has most of the port patches.
@
text
@d1 1
a1 1
$OpenBSD: patch-stats_c,v 1.2 2010/05/12 13:06:54 ajacoutot Exp $
@


1.2
log
@Fix use of open(2).

based on an "obnoxious remark" from kili@@ ;-)
ok edd@@ dcoppa@@
@
text
@d1 1
a1 4
$OpenBSD: patch-stats_c,v 1.1 2010/03/21 11:37:17 ajacoutot Exp $

Fix cpu graph on single cores:
    sizeof(long) != sizeof(int64_t) on i386
d6 3
a8 3
--- stats.c.orig	Thu Jan  7 18:08:14 2010
+++ stats.c	Wed May 12 14:04:43 2010
@@@@ -85,7 +85,7 @@@@ volume_init()
a16 37
@@@@ -134,7 +134,7 @@@@ volume_init()
 
    /* finished... now close the device and reopen as read only */
    close(volume.dev_fd);
-   volume.dev_fd = open("/dev/mixer", O_RDONLY, "r");
+   volume.dev_fd = open("/dev/mixer", O_RDONLY);
    if (volume.dev_fd < 0) {
       warn("volume: failed to re-open /dev/mixer");
       return;
@@@@ -242,7 +242,7 @@@@ power_init()
 {
    power.is_setup = false;
 
-   power.dev_fd = open("/dev/apm", O_RDONLY, "r");
+   power.dev_fd = open("/dev/apm", O_RDONLY);
    if (power.dev_fd < 0) {
       warn("power: failed to open /dev/apm");
       return;
@@@@ -456,9 +456,16 @@@@ sysinfo_update()
             err(1, "sysinfo update: KERN.CPTIME2.%d failed", cpu);
       }
    } else {
+      int i;
+      long cpu_raw_tmp[CPUSTATES];
+      size = sizeof(cpu_raw_tmp);
       mib_cpus[1] = KERN_CPTIME;
-      if (sysctl(mib_cpus, 2, sysinfo.cpu_raw[0][cur], &size, NULL, 0) < 0)
-         err(1, "sysinfo update: KERN.CPTIME2 failed");
+
+      if (sysctl(mib_cpus, 2, cpu_raw_tmp, &size, NULL, 0) < 0)
+         err(1, "sysinfo update: KERN.CPTIME failed");
+
+      for (i = 0; i < CPUSTATES; i++)
+              sysinfo.cpu_raw[0][cur][i] = cpu_raw_tmp[i];
    }
 
    /* convert ticks to percentages */
@


1.1
log
@Fix cpu graph on single core.
(pushed upstream)
from Tobias Ulmer <tobiasu at tmux dot org>, thanks!

Use the new APM_ARCHS.
@
text
@d1 1
a1 1
$OpenBSD$
d6 3
d10 28
a37 1
+++ stats.c	Mon Feb  1 08:29:25 2010
@

