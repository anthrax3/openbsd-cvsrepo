head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.6
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.2
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	ajacoutot_20100701:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2015.07.20.20.16.59;	author ajacoutot;	state Exp;
branches;
next	1.7;
commitid	JWMCXULG2yOge18a;

1.7
date	2015.07.03.06.42.27;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	G0jaLtbt6OWP5rIj;

1.6
date	2014.03.09.22.26.56;	author ajacoutot;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2012.09.19.12.39.34;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2011.04.28.13.09.07;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.16.10.04.10;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.02.05.04.47;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.07.01.07.46.21;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.07.01.07.46.21;	author ajacoutot;	state Exp;
branches;
next	;

1.6.4.1
date	2015.07.03.06.52.45;	author ajacoutot;	state Exp;
branches;
next	;
commitid	Gin6w15UpxQjzlQ4;


desc
@@


1.8
log
@Pushed upstream.
@
text
@$OpenBSD: patch-src_polkitagent_polkitagenthelper-bsdauth_c,v 1.7 2015/07/03 06:42:27 ajacoutot Exp $

From 074df27827fd773f1c76545cd08da568440ca41f Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@gnome.org>
Date: Sun, 19 Jul 2015 02:19:08 +0200
Subject: Add support for OpenBSD

--- src/polkitagent/polkitagenthelper-bsdauth.c.orig	Fri Jul  3 08:35:33 2015
+++ src/polkitagent/polkitagenthelper-bsdauth.c	Fri Jul  3 08:37:24 2015
@@@@ -0,0 +1,163 @@@@
+/*
+ * Copyright (C) 2008 Red Hat, Inc.
+ * Copyright (C) 2009-2010 Andrew Psaltis <ampsaltis@@gmail.com>
+ * Copyright (C) 2010 Antoine Jacoutot <ajacoutot@@openbsd.org>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General
+ * Public License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 59 Temple Place, Suite 330,
+ * Boston, MA 02111-1307, USA.
+ *
+ * Authors: Andrew Psaltis <ampsaltis@@gmail.com>, based on
+ *            polkitagenthelper.c which was written by
+ *          David Zeuthen <davidz@@redhat.com>
+ */
+
+#include "config.h"
+#include "polkitagenthelperprivate.h"
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+#include <sys/types.h>
+#include <syslog.h>
+#include <pwd.h>
+#include <login_cap.h>
+#include <bsd_auth.h>
+
+#include <polkit/polkit.h>
+
+static gboolean bsdauth_authenticate (const char *user_to_auth);
+
+int
+main (int argc, char *argv[])
+{
+  struct passwd *pw;
+  const char *user_to_auth;
+  char *cookie;
+
+  /* clear the entire environment to avoid attacks with
+     libraries honoring environment variables */
+  if (_polkit_clearenv () != 0)
+    goto error;
+
+  /* set a minimal environment */
+  setenv ("PATH", "/usr/sbin:/usr/bin:/sbin:/bin", 1);
+
+  /* check that we are setuid root */
+  if (geteuid () != 0)
+    {
+      fprintf (stderr, "polkit-agent-helper-1: needs to be setuid root\n");
+      goto error;
+    }
+
+  openlog ("polkit-agent-helper-1", LOG_CONS | LOG_PID, LOG_AUTHPRIV);
+
+  /* check for correct invocation */
+  if (!(argc == 2 || argc == 3))
+    {
+      syslog (LOG_NOTICE, "inappropriate use of helper, wrong number of arguments [uid=%d]", getuid ());
+      fprintf (stderr, "polkit-agent-helper-1: wrong number of arguments. This incident has been logged.\n");
+      goto error;
+    }
+
+  if (getuid () != 0)
+    {
+    /* check we're running with a non-tty stdin */
+    if (isatty (STDIN_FILENO) != 0)
+      {
+        syslog (LOG_NOTICE, "inappropriate use of helper, stdin is a tty [uid=%d]", getuid ());
+        fprintf (stderr, "polkit-agent-helper-1: inappropriate use of helper, stdin is a tty. This incident has been logged.\n");
+        goto error;
+      }
+    }
+
+  user_to_auth = argv[1];
+  cookie = read_cookie (argc, argv);
+  if (!cookie)
+    goto error;
+
+#ifdef PAH_DEBUG
+  fprintf (stderr, "polkit-agent-helper-1: user to auth is '%s'.\n", user_to_auth);
+#endif /* PAH_DEBUG */
+
+  /* Search the password database for the user requesting authentication */
+  if ((pw = getpwnam (user_to_auth)) == NULL)
+    {
+      syslog (LOG_NOTICE, "password database information request for user %s [uid=%d] failed", user_to_auth, getuid());
+      fprintf(stderr, "polkit-agent-helper-1: could not get user information for '%s'", user_to_auth);
+      goto error;
+    }
+
+  /* Check the user's identity */
+  if (!bsdauth_authenticate (user_to_auth))
+    {
+      syslog (LOG_NOTICE, "authentication failure [uid=%d] trying to authenticate '%s'", getuid (), user_to_auth);
+      fprintf (stderr, "polkit-agent-helper-1: authentication failure. This incident has been logged.\n");
+      goto error;
+    }
+
+#ifdef PAH_DEBUG
+  fprintf (stderr, "polkit-agent-helper-1: sending D-Bus message to polkit daemon\n");
+#endif /* PAH_DEBUG */
+
+  /* now send a D-Bus message to the polkit daemon that
+   * includes a) the cookie; and b) the user we authenticated
+   */
+  if (!send_dbus_message (cookie, user_to_auth))
+    {
+#ifdef PAH_DEBUG
+      fprintf (stderr, "polkit-agent-helper-1: error sending D-Bus message to polkit daemon\n");
+#endif /* PAH_DEBUG */
+      goto error;
+    }
+
+  free (cookie);
+
+#ifdef PAH_DEBUG
+  fprintf (stderr, "polkit-agent-helper-1: successfully sent D-Bus message to polkit daemon\n");
+#endif /* PAH_DEBUG */
+
+  fprintf (stdout, "SUCCESS\n");
+  flush_and_wait ();
+  return 0;
+
+error:
+  free (cookie);
+  fprintf (stdout, "FAILURE\n");
+  flush_and_wait ();
+  return 1;
+}
+
+static gboolean
+bsdauth_authenticate (const char *user_to_auth)
+{
+  char passwd[512];
+
+  fprintf (stdout, "PAM_PROMPT_ECHO_OFF password:\n");
+  fflush (stdout);
+  usleep (10 * 1000); /* since fflush(3) seems buggy */
+
+  if (fgets (passwd, sizeof (passwd), stdin) == NULL)
+    goto error;
+
+  if (strlen (passwd) > 0 && passwd[strlen (passwd) - 1] == '\n')
+    passwd[strlen (passwd) - 1] = '\0';
+
+  if (auth_userokay((char *)user_to_auth, NULL, "auth-polkit", passwd) == 0)
+    goto error;
+  return 1;
+error:
+  return 0;
+}
@


1.7
log
@Fix runtime and bump to be ahead of (upcoming) stable.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_polkitagent_polkitagenthelper-bsdauth_c,v 1.6 2014/03/09 22:26:56 ajacoutot Exp $
d3 4
a6 1
https://bugs.freedesktop.org/show_bug.cgi?id=75187
@


1.6
log
@Merge some build patches from upstream and add BZ URLs.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_polkitagent_polkitagenthelper-bsdauth_c,v 1.5 2012/09/19 12:39:34 ajacoutot Exp $
d5 3
a7 3
--- src/polkitagent/polkitagenthelper-bsdauth.c.orig	Wed Feb 19 10:35:21 2014
+++ src/polkitagent/polkitagenthelper-bsdauth.c	Wed Feb 19 10:35:32 2014
@@@@ -0,0 +1,158 @@@@
d55 1
a55 1
+  const char *cookie;
d75 1
a75 1
+  if (argc != 3)
d94 3
a96 1
+  cookie = argv[2];
d133 2
d144 1
@


1.6.4.1
log
@SECURITY update to polkit-0.113.

Fixes CVE-2015-4625, a local privilege escalation due to predictable
authentication session cookie values. Thanks to Tavis Ormandy, Google Project
Zero for reporting this issue. For the future, authentication agents are
encouraged to use PolkitAgentSession instead of using the D-Bus agent response
API directly.

Fixes CVE-2015-3256, various memory corruption vulnerabilities in use of the
JavaScript interpreter, possibly leading to local privilege escalation.

Fixes CVE-2015-3255, a memory corruption vulnerability in handling duplicate
action IDs, possibly leading to local privilege escalation. Thanks to
Laurent Bigonville for reporting this issue.

Fixes CVE-2015-3218, which allowed any local user to crash polkitd. Thanks to
Tavis Ormandy, Google Project Zero, for reporting this issue.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_polkitagent_polkitagenthelper-bsdauth_c,v 1.7 2015/07/03 06:42:27 ajacoutot Exp $
d5 3
a7 3
--- src/polkitagent/polkitagenthelper-bsdauth.c.orig	Fri Jul  3 08:35:33 2015
+++ src/polkitagent/polkitagenthelper-bsdauth.c	Fri Jul  3 08:37:24 2015
@@@@ -0,0 +1,163 @@@@
d55 1
a55 1
+  char *cookie;
d75 1
a75 1
+  if (!(argc == 2 || argc == 3))
d94 1
a94 3
+  cookie = read_cookie (argc, argv);
+  if (!cookie)
+    goto error;
a130 2
+  free (cookie);
+
a139 1
+  free (cookie);
@


1.5
log
@Update to polkit-0.105.
@
text
@d1 7
a7 4
$OpenBSD: patch-src_polkitagent_polkitagenthelper-bsdauth_c,v 1.4 2011/04/28 13:09:07 ajacoutot Exp $
--- src/polkitagent/polkitagenthelper-bsdauth.c.orig	Sat Dec  4 09:39:18 2010
+++ src/polkitagent/polkitagenthelper-bsdauth.c	Sat Dec  4 09:40:52 2010
@@@@ -0,0 +1,190 @@@@
a40 1
+#include <sys/stat.h>
a42 1
+#include <time.h>
a55 1
+//  time_t tm;
a114 29
+
+#if 0
+  /* Check whether the user's password has expired */
+  now = time (NULL);
+  if (shadow->sp_max >= 0 && (shadow->sp_lstchg + shadow->sp_max) * 60 * 60 * 24 <= now)
+    {
+      syslog (LOG_NOTICE, "password expired for user '%s' [uid=%d] trying to authenticate", user_to_auth, getuid ());
+      fprintf (stderr, "polkit-agent-helper-1: authorization failure. This incident has been logged.\n");
+      goto error;
+    }
+
+  /* Check whether the user's password has aged (and account expired along
+   * with it)
+   */
+  if (shadow->sp_inact >= 0 && (shadow->sp_lstchg + shadow->sp_max + shadow->sp_inact) * 60 * 60 * 24 <= now)
+    {
+      syslog (LOG_NOTICE, "password aged for user '%s' [uid=%d] trying to authenticate", user_to_auth, getuid ());
+      fprintf (stderr, "polkit-agent-helper-1: authorization failure. This incident has been logged.\n");
+      goto error;
+    }
+
+  /* Check whether the user's account has expired */
+  if (shadow->sp_expire >= 0 && shadow->sp_expire * 60 * 60 * 24 <= now)
+    {
+      syslog (LOG_NOTICE, "account expired for user '%s' [uid=%d] trying to authenticate", user_to_auth, getuid ());
+      fprintf (stderr, "polkit-agent-helper-1: authorization failure. This incident has been logged.\n");
+      goto error;
+    }
+#endif
@


1.4
log
@Update to polkit-0.101.
Merge several patches from upstream to fix CVE-2011-1485.

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_polkitagent_polkitagenthelper-bsdauth_c,v 1.3 2010/07/16 10:04:10 ajacoutot Exp $
d146 1
a146 1
+  fprintf (stderr, "polkit-agent-helper-1: sending D-Bus message to PolicyKit daemon\n");
d149 1
a149 1
+  /* now send a D-Bus message to the PolicyKit daemon that
d155 1
a155 1
+      fprintf (stderr, "polkit-agent-helper-1: error sending D-Bus message to PolicyKit daemon\n");
d161 1
a161 1
+  fprintf (stderr, "polkit-agent-helper-1: successfully sent D-Bus message to PolicyKit daemon\n");
@


1.3
log
@Fix some warnings.
@
text
@d1 4
a4 4
$OpenBSD: patch-src_polkitagent_polkitagenthelper-bsdauth_c,v 1.2 2010/07/02 05:04:47 ajacoutot Exp $
--- src/polkitagent/polkitagenthelper-bsdauth.c.orig	Fri Jul 16 11:22:22 2010
+++ src/polkitagent/polkitagenthelper-bsdauth.c	Fri Jul 16 11:22:10 2010
@@@@ -0,0 +1,204 @@@@
d8 1
d31 2
a45 2
+#include "polkitagenthelperprivate.h"
+
d47 1
a47 13
+static int bsdauth_authenticate(const char *user_to_auth);
+
+#ifndef HAVE_CLEARENV
+extern char **environ;
+
+static int
+clearenv (void)
+{
+	if (environ != NULL)
+		environ[0] = NULL;
+	return 0;
+}
+#endif
d52 1
a52 1
+  struct passwd *shadow;
d59 1
a59 1
+  if (clearenv () != 0)
d100 2
a101 2
+  /* Ask shadow about the user requesting authentication */
+  if ((shadow = getpwnam (user_to_auth)) == NULL)
d104 1
a104 1
+      fprintf(stderr, "polkit-agent-helper-1: could not get shadow information for%.100s", user_to_auth);
d107 1
a107 1
+  
d109 1
a109 1
+  if(!bsdauth_authenticate (user_to_auth))
d116 1
d118 2
a119 3
+/*
+  time(&tm);
+  if( shadow->sp_max >= 0 && (shadow->sp_lstchg + shadow->sp_max) * 60 * 60 * 24 <= tm)
d121 1
a121 1
+      syslog (LOG_NOTICE, "password expired for user '%s' [uid=%d] trying to authenticate", user_to_auth, getuid () );
a124 1
+*/
d129 1
a129 2
+/*
+  if( shadow->sp_inact >= 0 && (shadow->sp_lstchg + shadow->sp_max + shadow->sp_inact) * 60 * 60 * 24           <= tm) 
d131 1
a131 1
+      syslog (LOG_NOTICE, "password aged for user '%s' [uid=%d] trying to authenticate", user_to_auth, getuid () );
a134 1
+*/
d137 1
a137 2
+/*
+  if(shadow->sp_expire >= 0 && shadow->sp_expire * 60 * 60 * 24 <= tm) 
d139 1
a139 1
+      syslog (LOG_NOTICE, "account expired for user '%s' [uid=%d] trying to authenticate", user_to_auth, getuid () );
d143 1
a143 1
+*/
d165 1
a165 1
+  flush_and_wait();
d170 1
a170 1
+  flush_and_wait();
d174 2
a175 2
+static int
+bsdauth_authenticate(const char *user_to_auth)
a176 1
+  /* Speak PAM to the daemon, thanks to David Zeuthen for the idea. */
d178 4
a181 2
+  fprintf(stdout, "PAM_PROMPT_ECHO_OFF password:\n");
+  flush_and_wait();
d188 1
a188 1
+  
@


1.2
log
@Fix authentication.
@
text
@d1 4
a4 4
$OpenBSD: patch-src_polkitagent_polkitagenthelper-bsdauth_c,v 1.1.1.1 2010/07/01 07:46:21 ajacoutot Exp $
--- src/polkitagent/polkitagenthelper-bsdauth.c.orig	Fri Jul  2 06:54:49 2010
+++ src/polkitagent/polkitagenthelper-bsdauth.c	Fri Jul  2 06:56:35 2010
@@@@ -0,0 +1,203 @@@@
d48 2
a49 1
+int clearenv(void);
d51 2
a52 2
+int
+clearenv(void)
d54 3
a56 4
+  extern char **environ;
+
+  environ[0] = NULL;
+  return 0;
d58 1
d203 1
a203 1
+  if (auth_userokay(user_to_auth, NULL, "auth-polkit", passwd) == 0)
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- src/polkitagent/polkitagenthelper-bsdauth.c.orig	Sun Jun 27 17:49:56 2010
+++ src/polkitagent/polkitagenthelper-bsdauth.c	Sun Jun 27 18:03:34 2010
@@@@ -0,0 +1,208 @@@@
a7 1
+ * Copyright (C) 2010 Antoine Jacoutot <ajacoutot@@openbsd.org>
d62 1
d73 1
a73 2
+//  setenv ("PATH", "/usr/sbin:/usr/bin:/sbin:/bin", 1);
+  setenv ("PATH", "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 1);
d111 1
a111 2
+/*
+  if ((shadow = getspnam (user_to_auth)) == NULL)
d113 1
a113 1
+      syslog (LOG_NOTICE, "shadow file data information request for user %s [uid=%d] failed", user_to_auth, getuid());
a116 1
+*/
d194 1
a194 2
+  fflush(stdout);
+  usleep (10 * 1000); /* since fflush(3) seems buggy */
d202 1
a202 2
+//  if (strcmp (shadow->sp_pwdp, crypt (passwd, shadow->sp_pwdp)) != 0)
+    if (auth_userokay(user_to_auth, NULL, "polkit", passwd) != 0)
@


1.1.1.1
log
@Import polkit-0.97.

PolicyKit is an application-level toolkit for defining and handling the
policy that allows unprivileged processes to speak to privileged
processes. It is a framework for centralizing the decision making
process with respect to granting access to privileged operations for
unprivileged applications. PolicyKit is specifically targeting
applications in rich desktop environments on multi-user UNIX-like
operating systems. It does not imply or rely on any exotic kernel
features.


bsd_auth(3) support is based on the Slackware Linux shadow
authentication port.
Several patches from FreeBSD and NetBSD.

*While basic functionnality works, this is NOT hooked up yet as more
things are coming*
@
text
@@
