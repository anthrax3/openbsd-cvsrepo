head	1.8;
access;
symbols
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.6
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.4
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.4
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	robert20070720:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2012.06.28.19.24.56;	author ajacoutot;	state dead;
branches;
next	1.7;

1.7
date	2012.03.06.20.11.33;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2011.11.17.23.45.56;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.20.14.38.39;	author merdely;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.02.02.34.05;	author merdely;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.19.03.44.42;	author merdely;	state Exp;
branches;
next	1.2;

1.2
date	2008.02.07.02.53.35;	author merdely;	state Exp;
branches;
next	1.1;

1.1
date	2007.07.20.11.02.14;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.07.20.11.02.14;	author robert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Add a chio-changer script in replacement for the mtx-changer script.
Adapted from NetBSD pkgsrc and FreeBSD ports.
@@sample the script so that people can apply local modifications if
needed.

Tested on an LTO-4, 8 slots.

Why do all chio(1) behave differently!!!???

ok sthen@@ merdely@@ (maintainer)
@
text
@$OpenBSD: patch-scripts_mtx-changer_in,v 1.7 2012/03/06 20:11:33 sthen Exp $
--- scripts/mtx-changer.in.orig	Tue Feb 21 15:59:33 2012
+++ scripts/mtx-changer.in	Mon Mar  5 12:43:07 2012
@@@@ -1,6 +1,6 @@@@
 #!/bin/sh
 #
-# Bacula interface to mtx autoloader
+# Bacula interface to chio autoloader
 #
 #  If you set in your Device resource
 #
@@@@ -39,10 +39,10 @@@@
 #    e.g.   mt -f $4 offline
 #
 #  Many changers need an offline after the unload. Also many
-#   changers need a sleep 60 after the mtx load.
+#   changers need a sleep 60 after the chio load.
 #
 #  N.B. If you change the script, take care to return either 
-#   the mtx exit code or a 0. If the script exits with a non-zero
+#   the chio exit code or a 0. If the script exits with a non-zero
 #   exit code, Bacula will assume the request failed.
 #
 
@@@@ -175,7 +175,7 @@@@ debug "Parms: $ctl $cmd $slot $device $drive"
 
 case $cmd in 
    unload)
-      debug "Doing mtx -f $ctl unload $slot $drive"
+      debug "Doing chio -f $ctl move drive $drive slot $slot"
 
       if test ${offline} -eq 1 ; then
 	mt -f $device offline
@@@@ -184,7 +184,7 @@@@ case $cmd in 
 	sleep ${offline_sleep}
       fi
       make_err_file
-      ${MTX} -f $ctl unload $slot $drive 2>${ERRFILE}
+      ${MTX} -f $ctl move slot $slot drive $drive 2>${ERRFILE}
       rtn=$?
       cat ${ERRFILE}
       rm -f ${ERRFILE} >/dev/null 2>&1
@@@@ -194,7 +194,7 @@@@ case $cmd in 
    load)
       debug "Doing mtx -f $ctl load $slot $drive"
       make_err_file
-      ${MTX} -f $ctl load $slot $drive 2>${ERRFILE}
+      ${MTX} -f $ctl slot $slot drive $drive 2>${ERRFILE}
       rtn=$?
       if test ${load_sleep} -ne 0 ; then
 	sleep ${load_sleep}
@@@@ -206,61 +206,21 @@@@ case $cmd in 
       ;;
 
    list) 
-      debug "Doing mtx -f $ctl -- to list volumes"
+      debug "Doing chio -f $ctl status -- to list volumes"
       make_temp_file
       if test ${inventory} -ne 0 ; then
 	${MTX} -f $ctl inventory
       fi
       ${MTX} -f $ctl status >${TMPFILE}
-      rtn=$?
-      if test ${vxa_packetloader} -ne 0 ; then
-	cat ${TMPFILE} | grep " *Storage Element [0-9]*:.*Full" | sed "s/ Storage Element //" | sed "s/Full :VolumeTag=//"
-      else
-	cat ${TMPFILE} | grep " Storage Element [0-9]*:.*Full" | awk "{print \$3 \$4}" | sed "s/Full *\(:VolumeTag=\)*//"
-      fi
-      cat ${TMPFILE} | grep "^Data Transfer Element [0-9]*:Full (Storage Element [0-9]" | awk '{printf "%s:%s\n",$7,$10}'
+      cat ${TMPFILE} | grep " *Storage Element [0-9]*:.*Full" | sed "s/ Storage Element //" | sed "s/Full :VolumeTag=//"
+      cat ${TMPFILE} | grep " *drive [0-9]*: <.*FULL.*>" | awk "{print \$2 \$4 \$5 \$6 \$7 \$8}" | sed "s/^/D/"
       rm -f ${TMPFILE} >/dev/null 2>&1
       exit $rtn
       ;;
 
    listall)
-#  Drive content:	  D:Drive num:F:Slot loaded:Volume Name
-#  D:0:F:2:vol2        or D:Drive num:E
-#  D:1:F:42:vol42   
-#  D:3:E
-# 
-#  Slot content:
-#  S:1:F:vol1		  S:Slot num:F:Volume Name
-#  S:2:E	       or S:Slot num:E
-#  S:3:F:vol4
-# 
-#  Import/Export tray slots:
-#  I:10:F:vol10 	  I:Slot num:F:Volume Name
-#  I:11:E	       or I:Slot num:E
-#  I:12:F:vol40
- 
-      debug "Doing mtx -f $ctl -- to list all"
-      make_temp_file
-      if test ${inventory} -ne 0 ; then
-	${MTX} -f $ctl inventory
-      fi
-      ${MTX} -f $ctl status >${TMPFILE}
-      rtn=$?
-      # can be converted to awk+sed+cut, see below
-      perl -ne '
-/Data Transfer Element (\d+):Empty/ && print "D:$1:E\n";
-/Data Transfer Element (\d+):Full \(Storage Element (\d+) Loaded\)(:VolumeTag =\s*(.+))?/ && print "D:$1:F:$2:$4\n";
-/Storage Element (\d+):Empty/ && print "S:$1:E\n";
-/Storage Element (\d+):Full( :VolumeTag=(.+))?/ && print "S:$1:F:$3\n";
-/Storage Element (\d+) IMPORT.EXPORT:Empty/ && print "I:$1:E\n";
-/Storage Element (\d+) IMPORT.EXPORT:Full( :VolumeTag=(.+))?/ && print "I:$1:F:$3\n";' ${TMPFILE}
-      # If perl isn't installed, you can use by those commands
-#cat ${TMPFILE} | grep "Data Transfer Element" | awk "{print \"D:\"\$4 \$7 \$9 \$10}" | sed "s/=/:/" | sed "s/Full/F:/" | sed "s/Empty/E/"
-#cat ${TMPFILE} | grep -v "Data Transfer Element" | grep "Storage Element" | grep -v "IMPORT/EXPORT" | awk "{print \"S:\"\$3 \$4 \$5}" | sed "s/IMPORT\/EXPORT//" | sed "s/Full *:VolumeTag=/F:/" | sed "s/Empty/E/"
-#cat ${TMPFILE} | grep -v "Data Transfer Element" | grep "Storage Element" | grep "IMPORT/EXPORT" | awk "{print \"I:\"\$3 \$4 \$5}" | sed "s/IMPORT\/EXPORT//" | sed "s/Full *:VolumeTag=/F:/" | sed "s/Empty/E/" 
-
-      rm -f ${TMPFILE} >/dev/null 2>&1
-      exit $rtn
+      echo "The listall command is not implemented on OpenBSD"
+      exit 1
       ;;
 
    transfer)
@@@@ -272,18 +232,19 @@@@ case $cmd in 
       ;;
 
    loaded)
-      debug "Doing mtx -f $ctl $drive -- to find what is loaded"
+      debug "Doing chio -f $ctl status -- to find what is loaded"
       make_temp_file
       ${MTX} -f $ctl status >${TMPFILE}
       rtn=$?
-      cat ${TMPFILE} | grep "^Data Transfer Element $drive:Full" | awk "{print \$7}"
-      cat ${TMPFILE} | grep "^Data Transfer Element $drive:Empty" | awk "{print 0}"
+      cat ${TMPFILE} | grep " *drive $drive: <.*FULL.*>" | awk "{print \$4}" | sed "s/^\[//" | sed "s/=\]$//"
+      cat ${TMPFILE} | grep " *drive $drive: <.*FULL.*>" > /dev/null 2>&1
+      if [ $? != 0 ]; then echo 0; fi
       rm -f ${TMPFILE} >/dev/null 2>&1
       exit $rtn
       ;;
 
    slots)
-      debug "Doing mtx -f $ctl -- to get count of slots"
-      ${MTX} -f $ctl status | grep " *Storage Changer" | awk "{print \$5}"
+      debug "Doing chio -f $ctl status -- to get count of slots"
+      ${MTX} -f $ctl status | grep -c "slot [0-9]*"
       ;;
 esac
@


1.7
log
@update to Bacula 5.2.6, ok ajacoutot@@ merdely@@
- don't use ports libtool, it passes invalid flags to the linker
- since libbaccats-${BACKEND} must have the same .so version as
libbaccats, use a variable to make sure they are kept in-sync
- mark as being SHARED_ONLY and sync/merge plists
@
text
@d1 1
a1 1
$OpenBSD: patch-scripts_mtx-changer_in,v 1.6 2011/11/17 23:45:56 ajacoutot Exp $
@


1.6
log
@Major update to bacula 5.2.1.

As usual with major version bump, do not forget to run the upgrade
script corresponding to your DB.
A new README is provided in the package.

Tested by sthen@@ and myself.
"Don't wait on me" merdely@@ (maintainer)

ok sthen@@
@
text
@d1 3
a3 6
$OpenBSD: patch-scripts_mtx-changer_in,v 1.5 2010/07/20 14:38:39 merdely Exp $

XXX first hunk hand-rolled for CVS keyword, Id

--- scripts/mtx-changer.in.orig	Sun Oct 30 13:03:42 2011
+++ scripts/mtx-changer.in	Mon Nov 14 10:19:54 2011
d25 1
a25 1
@@@@ -152,7 +152,7 @@@@ debug "Parms: $ctl $cmd $slot $device $drive"
d34 1
a34 2
@@@@ -160,12 +160,12 @@@@ case $cmd in 
       if test ${offline_sleep} -ne 0 ; then
d37 7
a43 4
-      ${MTX} -f $ctl unload $slot $drive
+      ${MTX} -f $ctl move drive $drive slot $slot
       ;;
 
d45 4
a48 4
-      debug "Doing mtx -f $ctl load $slot $drive"
-      ${MTX} -f $ctl load $slot $drive
+      debug "Doing chio -f $ctl move slot $slot drive $drive"
+      ${MTX} -f $ctl move slot $slot drive $drive
d52 1
a52 1
@@@@ -175,61 +175,21 @@@@ case $cmd in 
d119 1
a119 1
@@@@ -241,18 +201,19 @@@@ case $cmd in 
@


1.5
log
@Update bacula to 5.0.2.

Fixes the weird install issues with the bat binary

New features can be found here:
http://www.bacula.org/5.0.x-manuals/en/main/main/New_Features_in_5_0_0.html

Thanks to sthen for help with the new wantlib/lib_depends stuff,
removing the sqlite flavor, ...

Thanks to giovanni for pointing out a ${TRUEPREFIX} -> /usr/local that
crept into one of my patch files.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-scripts_mtx-changer_in,v 1.4 2009/10/02 02:34:05 merdely Exp $
d5 2
a6 2
--- scripts/mtx-changer.in.orig	Tue Apr 27 15:58:29 2010
+++ scripts/mtx-changer.in	Thu Jun 24 10:22:49 2010
d53 1
a53 1
@@@@ -175,56 +175,22 @@@@ case $cmd in 
d64 1
a64 1
       rtn=$?
d100 1
a100 1
-      # can be converted to awk+sed+cut, contributions are welcome
d108 5
d120 1
a120 1
@@@@ -236,18 +202,19 @@@@ case $cmd in 
@


1.4
log
@Update bacula to 3.0.2:
	* Shared objects
	* Virtual backups
	* Duplicate Job Control
	* TLS Authentication
	* Exclude Dir Containing = <filename-string>
	* Plugins including Exchange 2003/2007 Plugin
	* libdbi backend abstraction
	* Bat enhancements

Upgrading from 2.4.4 to 3.0.2 requires updating the database using
/usr/local/libexec/bacula/update_bacula_database.  Database upgrades
from older databases can be done with other scripts in
/usr/local/libexec/bacula/updatedb.  You can determine your database
version in mysql and postgresql with 'select * from version'.

As sthen@@ reminded me and the documentation points out, when upgrading
between major versions (2.x.x -> 3.x.x), you should upgrade all of your
components at the same time due to protocol changes.

a *lot* of help from and ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-scripts_mtx-changer_in,v 1.3 2008/10/19 03:44:42 merdely Exp $
d5 3
a7 3
--- scripts/mtx-changer.in.orig	Fri Jul 18 09:44:03 2008
+++ scripts/mtx-changer.in	Mon Sep 21 20:58:36 2009
@@@@ -1,4 +1,4 @@@@
d13 2
d28 1
a28 1
@@@@ -143,7 +143,7 @@@@ debug "Parms: $ctl $cmd $slot $device $drive"
d37 1
a37 1
@@@@ -151,12 +151,12 @@@@ case $cmd in 
d53 1
a53 1
@@@@ -166,36 +166,33 @@@@ case $cmd in 
d75 41
@


1.3
log
@Update to bacula 2.4.3.
Add no_server PSEUDO_FLAVOR
Reorganize the Makefile some.
Remove dependency on qwt.
Set FULLPKGPATH for -main and -bat to remove backend dependencies
   (found by and solution from naddy@@)
Use SUBST_CMD.

ok jdixon@@, okan@@
@
text
@d1 8
a8 4
$OpenBSD: patch-scripts_mtx-changer_in,v 1.2 2008/02/07 02:53:35 merdely Exp $
--- scripts/mtx-changer.in.orig	Wed Jul  2 16:49:44 2008
+++ scripts/mtx-changer.in	Tue Jul  1 19:28:12 2008
@@@@ -2,3 +2,3 @@@@
d26 1
a26 1
@@@@ -173,17 +173,17 @@@@ debug "Parms: $ctl $cmd $slot $device $drive"
d32 7
a38 4
 #
 # enable the following line if you need to eject the cartridge
 #     mt -f $device offline
 #     sleep 10
d49 3
a51 3
 #
 # Increase the sleep time if you have a slow device
@@@@ -194,36 +194,37 @@@@ case $cmd in 
d58 3
a60 2
 # Enable the following if you are using barcodes and need an inventory
 #     ${MTX} -f $ctl inventory
d63 5
a67 7
-      cat ${TMPFILE} | grep " Storage Element [0-9]*:.*Full" | awk "{print \$3 \$4}" | sed "s/Full *\(:VolumeTag=\)*//"
+      cat ${TMPFILE} | grep " *slot [0-9]*: <ACCESS,.*FULL.*>" | awk "{print \$2 \$4 \$5 \$6 \$7 \$8}"
 #
 # If you have a VXA PacketLoader and the above does not work, try
 #  turning it off and enabling the following line.
 #     cat ${TMPFILE} | grep " *Storage Element [0-9]*:.*Full" | sed "s/ Storage Element //" | sed "s/Full :VolumeTag=//"
 #
d69 1
@


1.2
log
@Update bacula to 2.2.8.

Bacula changelog:
http://bacula.svn.sourceforge.net/viewvc/bacula/branches/Branch-2.2/bacula/ChangeLog?revision=6309&view=markup

Major port change in this version:
-main subpackage is now bacula-client
-server subpackage remains bacula-server
-bat subpackage is new bacula admin tool
-client subpackage goes away.

If the old -main subpackage was installed, the upgrade path is to
install both bacula-client and bacula-server.

Lots of input and assistance from sthen and okan.
ok okan;  "if it works for you, go for it" sthen
@
text
@d1 3
a3 3
$OpenBSD: patch-scripts_mtx-changer_in,v 1.1.1.1 2007/07/20 11:02:14 robert Exp $
--- scripts/mtx-changer.in.orig	Thu Aug 16 09:01:19 2007
+++ scripts/mtx-changer.in	Wed Jan  9 16:17:45 2008
d22 1
a22 1
@@@@ -161,17 +161,17 @@@@ debug "Parms: $ctl $cmd $slot $device $drive"
d44 1
a44 1
@@@@ -182,36 +182,37 @@@@ case $cmd in 
@


1.1
log
@Initial revision
@
text
@d1 4
a4 5
$OpenBSD$
--- scripts/mtx-changer.in.orig	Wed Oct 11 17:34:24 2006
+++ scripts/mtx-changer.in	Sat May 26 15:33:25 2007
@@@@ -1,6 +1,6 @@@@
 #!/bin/sh
d9 1
a9 3
 #  $Id: mtx-changer.in 3547 2006-10-11 21:34:24Z kerns $
 #
@@@@ -27,10 +27,10 @@@@
d22 1
a22 1
@@@@ -149,17 +149,17 @@@@ debug "Parms: $ctl $cmd $slot $device $drive"
d44 1
a44 1
@@@@ -170,14 +170,14 @@@@ case $cmd in 
d55 7
a61 1
-      cat ${TMPFILE} | grep " *Storage Element [0-9]*:.*Full" | awk "{print \$3 \$4}" | sed "s/Full *\(:VolumeTag=\)*//"
a62 1
+      cat ${TMPFILE} | grep " *slot [0-9]*: <ACCESS,.*FULL.*>" | awk "{print \$2 \$4 \$5 \$6 \$7 \$8}"
d65 1
a65 3
 #
 # If you have a VXA PacketLoader and the above does not work, try
@@@@ -187,18 +187,19 @@@@ case $cmd in 
@


1.1.1.1
log
@import of bacula 2.0.3;

Bacula is a set of computer programs that permit you (or the system
administrator) to manage backup, recovery, and verification of
computer data across a network of computers of different kinds.
In technical terms, it is a network Client/Server based backup program.
Bacula is relatively easy to use and efficient, while offering many
advanced storage management features that make it easy to find and
recover lost or damaged files. Due to its modular design, Bacula is
scalable from small single computer systems to systems consisting of
hundreds of computers located over a large network.

from Mike Erdely <mike@@erdelynet.com>
@
text
@@
