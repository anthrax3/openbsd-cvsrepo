head	1.5;
access;
symbols
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4;
locks; strict;
comment	@// @;


1.5
date	2016.05.30.15.07.58;	author jasper;	state dead;
branches;
next	1.4;
commitid	mTPWHYxdzRBIjhfj;

1.4
date	2015.07.23.08.06.28;	author jasper;	state Exp;
branches;
next	1.3;
commitid	5WgcQJui5MfB8tna;

1.3
date	2015.07.17.22.51.06;	author jasper;	state Exp;
branches;
next	1.2;
commitid	Wubyr9mLDdFSDyNw;

1.2
date	2015.07.16.22.22.02;	author jasper;	state Exp;
branches;
next	1.1;
commitid	FRitfubr69KHjbNd;

1.1
date	2015.07.15.16.12.35;	author jasper;	state Exp;
branches;
next	;
commitid	qCIJzmqHfJYVKVjK;


desc
@@


1.5
log
@long overdue update to facter-3.1.7; all our patches have been merged upstream
however some new patches are needed to deal with the split-off leatherman lib.
@
text
@#include <internal/facts/openbsd/dmi_resolver.hpp>
#include <leatherman/logging/logging.hpp>

#include <sys/sysctl.h>

using namespace std;

namespace facter { namespace facts { namespace openbsd {

    dmi_resolver::data dmi_resolver::collect_data(collection& facts)
    {
        data result;
        result.bios_vendor = sysctl_lookup(HW_VENDOR);
        result.uuid = sysctl_lookup(HW_UUID);
        result.serial_number = sysctl_lookup(HW_SERIALNO);
        result.product_name = sysctl_lookup(HW_PRODUCT);
        result.bios_version = sysctl_lookup(HW_VERSION);

        return result;
    }

    string dmi_resolver::sysctl_lookup(int mib_2)
    {
        int mib[2];
        size_t len;
        char value[BUFSIZ];

        mib[0] = CTL_HW;
        mib[1] = mib_2;
        len = sizeof(value) - 1;

        if (sysctl(mib, 2, &value, &len, nullptr, 0) == -1) {
            LOG_DEBUG("sysctl_lookup failed: %1% (%2%).", strerror(errno), errno);
            return "";
        }

        return value;
    }

} } }  // namespace facter::facts::openbsd
@


1.4
log
@- update to facter-3.0.2
@
text
@@


1.3
log
@remove unused defines, no pkg change
@
text
@d22 1
a22 1
    string dmi_resolver::sysctl_lookup(uint64_t mib_2)
@


1.2
log
@appease cpplint; no functional change
@
text
@a2 3
#include <facter/util/file.hpp>
#include <boost/filesystem.hpp>
#include <boost/algorithm/string.hpp>
a6 3
using namespace facter::util;
using namespace boost::filesystem;
namespace bs = boost::system;
d33 1
a33 1
       	    LOG_DEBUG("sysctl_lookup failed: %1% (%2%).", strerror(errno), errno);
@


1.1
log
@implement dmi resolver (product name, version, etc)
@
text
@d19 5
a23 5
	result.bios_vendor = sysctl_lookup(HW_VENDOR);
	result.uuid = sysctl_lookup(HW_UUID);
	result.serial_number = sysctl_lookup(HW_SERIALNO);
	result.product_name = sysctl_lookup(HW_PRODUCT);
	result.bios_version = sysctl_lookup(HW_VERSION);
@

