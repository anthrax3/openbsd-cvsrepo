head	1.4;
access;
symbols
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2;
locks; strict;
comment	@// @;


1.4
date	2016.05.30.15.07.58;	author jasper;	state dead;
branches;
next	1.3;
commitid	mTPWHYxdzRBIjhfj;

1.3
date	2015.08.11.20.20.34;	author jasper;	state Exp;
branches;
next	1.2;
commitid	jFfnqkg1Zj2ANpFC;

1.2
date	2015.07.16.22.22.02;	author jasper;	state Exp;
branches;
next	1.1;
commitid	FRitfubr69KHjbNd;

1.1
date	2015.07.15.16.58.49;	author jasper;	state Exp;
branches;
next	;
commitid	ALmkWfM3DYnKIjh3;


desc
@@


1.4
log
@long overdue update to facter-3.1.7; all our patches have been merged upstream
however some new patches are needed to deal with the split-off leatherman lib.
@
text
@#include <internal/facts/openbsd/virtualization_resolver.hpp>
#include <facter/facts/scalar_value.hpp>
#include <facter/facts/collection.hpp>
#include <facter/facts/fact.hpp>
#include <facter/facts/vm.hpp>
#include <facter/execution/execution.hpp>
#include <boost/algorithm/string.hpp>

using namespace std;
using namespace facter::facts;
using namespace facter::execution;

namespace facter { namespace facts { namespace openbsd {

    string virtualization_resolver::get_hypervisor(collection& facts)
    {
        string value = get_product_name_vm(facts);

        return value;
    }

} } }  // namespace facter::facts::openbsd
@


1.3
log
@sync with what's been merged upstream
@
text
@@


1.2
log
@appease cpplint; no functional change
@
text
@a21 29
    string virtualization_resolver::get_product_name_vm(collection& facts)
    {
        static vector<tuple<string, string>> vms = {
            make_tuple("VMware",            string(vm::vmware)),
            make_tuple("VirtualBox",        string(vm::virtualbox)),
            make_tuple("Parallels",         string(vm::parallels)),
            make_tuple("KVM",               string(vm::kvm)),
            make_tuple("Virtual Machine",   string(vm::hyperv)),
            make_tuple("RHEV Hypervisor",   string(vm::redhat_ev)),
            make_tuple("oVirt Node",        string(vm::ovirt)),
            make_tuple("HVM domU",          string(vm::xen_hardware)),
            make_tuple("Bochs",             string(vm::bochs)),
        };

        auto product_name = facts.get<string_value>(fact::product_name);
        if (!product_name) {
            return {};
        }

        auto const& value = product_name->value();

        for (auto const& vm : vms) {
            if (value.find(get<0>(vm)) != string::npos) {
                return get<1>(vm);
            }
        }
        return {};
    }

@


1.1
log
@rudimentary support for virtualization recognition
@
text
@d19 1
a19 2
	return value;

d51 1
a51 1
} } } // namespace facter::facts::openbsd
@

