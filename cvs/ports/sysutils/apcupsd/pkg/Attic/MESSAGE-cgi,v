head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.8
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.6
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.1.1.1.0.6
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.4
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	sthen_20100525:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.01.08.20.46.18;	author kirby;	state dead;
branches;
next	1.3;

1.3
date	2011.11.28.10.46.19;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2011.08.30.09.59.30;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.25.21.56.33;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.05.25.21.56.33;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@ - split -main and -cgi packages (move apropriate configs to -cgi package)
 - switch from MESSAGEs to READMEs
 - update my e-mail
 - regen distinfo while here
with the input from espie@@ and sthen@@
OK sthen@@
@
text
@Before using multimon and the other CGI programs, first ensure that
apcupsd is configured to run the Network Information Server. This is
done by setting NETSERVER on in ${SYSCONFDIR}/apcupsd.conf. 
This switch is on by default.
To run scripts in chrooted apache (default behaviour), configuration
files must be available to the webserver:
# mv ${SYSCONFDIR} /var/www/${SYSCONFDIR}
# ln -s /var/www/${SYSCONFDIR} ${BASESYSCONFDIR}/
And some libraries must be copied in:
# ${WEB_ROOT}/cgi-bin/apcupsd/copy-libs.sh
@


1.3
log
@Better SYSCONFDIR handling (remove the CONFIGURE_STYLE=...old hack) now that
we have BASESYSCONFDIR. Maintainer timeout.
@
text
@@


1.2
log
@update apcupsd to 3.4.19, switch from net-snmp support to internal snmp
support (removing the separate snmp flavour), and add an rc file.

from maintainer Kirill Bychkov; wantlib-x11 synced by me.
@
text
@d3 1
a3 1
done by setting NETSERVER on in ${SYSCONFDIR}/apcupsd/apcupsd.conf. 
d7 2
a8 2
# mv ${SYSCONFDIR}/apcupsd /var/www/${SYSCONFDIR}/apcupsd
# ln -s /var/www/${SYSCONFDIR}/apcupsd ${SYSCONFDIR}/
@


1.1
log
@Initial revision
@
text
@d8 1
a8 1
# ln -s /var/www/${SYSCONFIDR}/apcupsd ${SYSCONFDIR}/
@


1.1.1.1
log
@Import ports/sysutils/apcupsd, a daemon for monitoring APC UPSes.
We already have sysutils/apc-upsd which hasn't been maintained upstream
in >10 years, which I intend to rm unless there are objections.

From maintainer Kirill Bychkov with various input from myself.

Apcupsd can be used for power mangement and controlling most of APC's
UPS models. Apcupsd works with most of APC's Smart-UPS models as well as
most simple signalling models such a Back-UPS, and BackUPS-Office.
During a power failure, apcupsd will inform the users about the power
failure and that a shutdown may occur. If power is not restored, a
system shutdown will follow when the battery is exhausted, a timeout
(seconds) expires, or runtime expires based on internal APC calculations
determined by power consumption rates.
@
text
@@
