head	1.4;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	landry_20161221:1.1.1.1
	pkorovin:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2017.05.27.19.57.07;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	H08QxD8pqoInz6Rz;

1.3
date	2017.05.27.13.53.07;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	SDpZdO8hfYIlMQ9j;

1.2
date	2016.12.31.15.25.18;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	JnlFSM5tndDG2Ivz;

1.1
date	2016.12.21.12.51.56;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	L3wBmztcE51zbp5e;

1.1.1.1
date	2016.12.21.12.51.56;	author landry;	state Exp;
branches;
next	;
commitid	L3wBmztcE51zbp5e;


desc
@@


1.4
log
@Bring rc_bg back.
@
text
@#!/bin/sh
#
# $OpenBSD: riemann.rc,v 1.3 2017/05/27 13:53:07 ajacoutot Exp $

daemon="${TRUEPREFIX}/bin/riemann"
daemon_user="_riemann"

. /etc/rc.d/rc.subr

java="$(${LOCALBASE}/bin/javaPathHelper -c clojure)"

pexp="${java}.*riemann.*"
rc_bg=YES

rc_start() {
	${rcexec} "JAVA_CMD=\"${java}\" ${daemon}"
}

rc_cmd $1
@


1.3
log
@Cope with recent rc.subr(8) change (removal of rc_bg etc.)
@
text
@d3 1
a3 1
# $OpenBSD: riemann.rc,v 1.2 2016/12/31 15:25:18 ajacoutot Exp $
d13 1
@


1.2
log
@Fix rc.d(8) script to comply to our template and habits.
While here, fix the @@extraunexec line; from sthen@@

"seems sensible" sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: riemann.rc,v 1.1.1.1 2016/12/21 12:51:56 landry Exp $
a12 1
rc_bg=YES
d15 1
a15 1
	${rcexec} "JAVA_CMD=\"${java}\" ${daemon} ${_bg}"
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
# $OpenBSD$
a6 3
daemon_log="${LOCALSTATEDIR}/log/riemann/riemann.log"

rc_bg=YES
d11 1
d13 1
d16 1
a16 1
    (${rcexec} "JAVA_CMD=\"${java}\" ${daemon} > ${daemon_log} 2>&1") &
@


1.1.1.1
log
@Import riemann 0.2.12, from MAINTAINER Pavel Korovin /p/tristero/se

Riemann provides low-latency, transient shared state for systems with many
moving parts.
Riemann aggregates events from your servers and applications with a powerful
stream processing language. Send an email for every exception raised by your
code. Track the latency distribution of your web app. See the top processes
on any host, by memory and CPU. Combine statistics from every Riak node in
your cluster and forward to Graphite. Send alerts when a key process fails
to check in. Know how many users signed up right this second.

ok sthen@@
@
text
@@
