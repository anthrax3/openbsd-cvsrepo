head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.6
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.03.28.20.08.56;	author kili;	state Exp;
branches;
next	;
commitid	Isn5BWw24sC7RBER;


desc
@@


1.1
log
@Protect us from #defining linux specific ioctls in ext2_fs.h which
may be picked up by autoconfigure scripts and even used at runtime.
Found by brynet@@ when building archivers/libarchive.  People agree
(at least brynet@@, zhuk@@, nadd6@@ iirc), the only bikeshed was wether
to remote the #defines completely, used #ifdef __linux__ or #ifndef
__OpenBSD__. I choose the latter for now, because I think i've seen
some consumers of this port where some non-linux systems apparently
*do* support the same ioctls.
@
text
@$OpenBSD$
--- lib/ext2fs/ext2_fs.h.orig	Sat Aug  2 22:26:22 2014
+++ lib/ext2fs/ext2_fs.h	Tue Mar 22 22:26:56 2016
@@@@ -344,6 +344,7 @@@@ struct ext4_new_group_input {
 #define _IOT_ext2_new_group_input _IOT (_IOTS(__u32), 5, _IOTS(__u16), 2, 0, 0)
 #endif
 
+#ifndef __OpenBSD__
 #define EXT2_IOC_GETFLAGS		_IOR('f', 1, long)
 #define EXT2_IOC_SETFLAGS		_IOW('f', 2, long)
 #define EXT2_IOC_GETVERSION		_IOR('v', 1, long)
@@@@ -354,6 +355,7 @@@@ struct ext4_new_group_input {
 #define EXT2_IOC_GROUP_ADD		_IOW('f', 8,struct ext2_new_group_input)
 #define EXT4_IOC_GROUP_ADD		_IOW('f', 8,struct ext4_new_group_input)
 #define EXT4_IOC_RESIZE_FS		_IOW('f', 16, __u64)
+#endif
 
 /*
  * Structure of an inode on the disk
@
