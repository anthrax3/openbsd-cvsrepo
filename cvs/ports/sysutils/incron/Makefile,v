head	1.7;
access;
symbols
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	landry_20160123:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2017.04.10.11.46.33;	author sthen;	state Exp;
branches;
next	1.6;
commitid	HY6VNZxjJWzKQFDV;

1.6
date	2017.02.27.19.18.19;	author jca;	state Exp;
branches;
next	1.5;
commitid	SjGexNxHad3imhIo;

1.5
date	2016.04.27.09.55.59;	author jca;	state Exp;
branches;
next	1.4;
commitid	lABr1JwlS4IyrRXJ;

1.4
date	2016.04.27.09.55.38;	author jca;	state Exp;
branches;
next	1.3;
commitid	fiz7S1zjEAQzVN4S;

1.3
date	2016.04.27.09.55.01;	author jca;	state Exp;
branches;
next	1.2;
commitid	gvyAJAcYmMFzusSg;

1.2
date	2016.04.27.09.52.46;	author jca;	state Exp;
branches;
next	1.1;
commitid	B0foNri89lveipUI;

1.1
date	2016.01.23.16.06.05;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	R7mj4Fv0IooJzs5R;

1.1.1.1
date	2016.01.23.16.06.05;	author landry;	state Exp;
branches;
next	;
commitid	R7mj4Fv0IooJzs5R;


desc
@@


1.7
log
@use LIBCXX
@
text
@# $OpenBSD: Makefile,v 1.6 2017/02/27 19:18:19 jca Exp $

COMMENT =	cron-like daemon but reacting to filesystem events

DISTNAME =	incron-0.5.10
REVISION =	0

CATEGORIES =	sysutils

HOMEPAGE =	http://inotify.aiken.cz/

MASTER_SITES =	http://inotify.aiken.cz/download/incron/

# GPLv2
PERMIT_PACKAGE_CDROM =	Yes

WANTLIB +=	lib/inotify/inotify c m pthread ${LIBCXX}

BUILD_DEPENDS =	devel/argp-standalone
LIB_DEPENDS =	devel/libinotify

MAKE_FLAGS =	CPPFLAGS="-I${LOCALBASE}/include -I${LOCALBASE}/include/inotify" \
		CXX="${CXX}" \
		CXXFLAGS="${CXXFLAGS}" \
		LDFLAGS="-L${LOCALBASE}/lib/inotify -linotify -Wl,-rpath,${LOCALBASE}/lib/inotify"

USE_GMAKE =	Yes

NO_TEST =	Yes

.include <bsd.port.mk>
@


1.6
log
@Respect CXX
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2016/04/27 09:55:59 jca Exp $
d17 1
a17 1
WANTLIB +=	lib/inotify/inotify c m pthread stdc++
@


1.5
log
@Bump after recent changes.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2016/04/27 09:55:38 jca Exp $
d23 1
@


1.4
log
@Tidy up and reorder makefile
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2016/01/23 16:06:05 landry Exp $
d6 1
@


1.3
log
@Respect CXXFLAGS, use CPPFLAGS to pass -I
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2016/04/27 09:52:46 jca Exp $
d4 1
d6 1
d8 1
d10 1
d16 5
a20 1
USE_GMAKE =	Yes
d25 2
a26 3
LIB_DEPENDS =	devel/libinotify
BUILD_DEPENDS =	devel/argp-standalone
WANTLIB +=	lib/inotify/inotify c m pthread stdc++
@


1.2
log
@Use the regular way to pass options to ld(1)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2016/01/23 16:06:05 landry Exp $
d13 2
a14 1
MAKE_FLAGS =	CXXFLAGS="-I${LOCALBASE}/include -I${LOCALBASE}/include/inotify" \
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d14 1
a14 1
		LDFLAGS="-L${LOCALBASE}/lib/inotify -linotify -Wl,-rpath ${LOCALBASE}/lib/inotify"
@


1.1.1.1
log
@Import incron 0.5.10.

This program is the "inotify cron" system. It consist of a daemon and
a table manipulator. You can use it a similar way as the regular cron.
The difference is that the inotify cron handles filesystem events
rather than time periods.

The incron daemon (incrond) must be run under root (typically from
runlevel script etc.). It loads the current user tables and hooks
them for later changes.

The incron table manipulator may be run under any regular user
since it SUIDs. For manipulation with the tables use basically
the same syntax as for the crontab program. You can import a table,
remove and edit the current table.

ok ajacoutot@@
@
text
@@
