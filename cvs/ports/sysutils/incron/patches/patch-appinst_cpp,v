head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.6
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	landry_20160123:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.01.23.16.06.05;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	R7mj4Fv0IooJzs5R;

1.1.1.1
date	2016.01.23.16.06.05;	author landry;	state Exp;
branches;
next	;
commitid	R7mj4Fv0IooJzs5R;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- appinst.cpp.orig	Wed Nov 26 21:48:29 2014
+++ appinst.cpp	Wed Nov 26 21:48:40 2014
@@@@ -26,6 +26,7 @@@@
 #include <errno.h>
 #include <signal.h>
 #include <cstdio>
+#include <sys/stat.h>
 
 #include "appinst.h"
 
@


1.1.1.1
log
@Import incron 0.5.10.

This program is the "inotify cron" system. It consist of a daemon and
a table manipulator. You can use it a similar way as the regular cron.
The difference is that the inotify cron handles filesystem events
rather than time periods.

The incron daemon (incrond) must be run under root (typically from
runlevel script etc.). It loads the current user tables and hooks
them for later changes.

The incron table manipulator may be run under any regular user
since it SUIDs. For manipulation with the tables use basically
the same syntax as for the crontab program. You can import a table,
remove and edit the current table.

ok ajacoutot@@
@
text
@@
