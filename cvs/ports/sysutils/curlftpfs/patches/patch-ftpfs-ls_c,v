head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.14
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.8
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.10
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.6
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	jasper_20131712:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.12.17.15.39.42;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.12.17.15.39.42;	author jasper;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

- Fix a memory leak when cache is disabled. Debian #614347
- Fix format string:
    [ftpfs-ls.c:57]: (warning) %lu in format string (no. 2) requires 'unsigned long *' but the argument type is 'long *'.
--- ftpfs-ls.c.orig	Wed Apr 23 12:55:41 2008
+++ ftpfs-ls.c	Mon Dec 16 10:44:08 2013
@@@@ -25,6 +25,13 @@@@
 #include "charset_utils.h"
 #include "ftpfs-ls.h"
 
+struct cache {
+    int on;
+    char incomplete[];
+};
+
+extern struct cache cache;
+
 static int parse_dir_unix(const char *line,
                           struct stat *sbuf,
                           char *file,
@@@@ -49,7 +56,7 @@@@ static int parse_dir_unix(const char *line,
 #define SPACES "%*[ \t]"
   res = sscanf(line,
                "%11s"
-               "%lu"  SPACES
+               "%ld"  SPACES
                "%32s" SPACES
                "%32s" SPACES
                "%llu" SPACES
@@@@ -243,8 +250,10 @@@@ int parse_dir(const char* list, const char* dir,
           reallink = g_strdup(link);
         }
         int linksize = strlen(reallink);
-        cache_add_link(full_path, reallink, linksize+1);
-        DEBUG(1, "cache_add_link: %s %s\n", full_path, reallink);
+        if (cache.on) {
+          cache_add_link(full_path, reallink, linksize+1);
+          DEBUG(1, "cache_add_link: %s %s\n", full_path, reallink);
+        }
         if (linkbuf && linklen) {
           if (linksize > linklen) linksize = linklen - 1;
           strncpy(linkbuf, reallink, linksize);
@@@@ -257,8 +266,10 @@@@ int parse_dir(const char* list, const char* dir,
         DEBUG(1, "filler: %s\n", file);
         filler(h, file, &stat_buf);
       } else {
-        DEBUG(1, "cache_add_attr: %s\n", full_path);
-        cache_add_attr(full_path, &stat_buf);
+        if (cache.on) {
+          DEBUG(1, "cache_add_attr: %s\n", full_path);
+          cache_add_attr(full_path, &stat_buf);
+        }
       }
 
       DEBUG(2, "comparing %s %s\n", name, file);
@


1.1.1.1
log
@import curlftpfs

CurlFtpFS is a filesystem for acessing ftp hosts based on FUSE and
libcurl.

ok aja@@ syl@@ (who also fixed an issue with 'create', thanks)
@
text
@@
