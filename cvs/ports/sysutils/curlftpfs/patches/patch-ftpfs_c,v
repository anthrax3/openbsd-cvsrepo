head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.16
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.14
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.8
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.10
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.6
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	jasper_20131712:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.12.17.15.39.42;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.12.17.15.39.42;	author jasper;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

- Fix input/output errors; from RedHat #671204
- Workaround for a working create.

--- ftpfs.c.orig	Wed Apr 30 01:05:47 2008
+++ ftpfs.c	Tue Dec 17 16:23:06 2013
@@@@ -503,7 +519,7 @@@@ static void *ftpfs_write_thread(void *data) {
   
   curl_easy_setopt_or_die(fh->write_conn, CURLOPT_URL, fh->full_path);
   curl_easy_setopt_or_die(fh->write_conn, CURLOPT_UPLOAD, 1);
-  curl_easy_setopt_or_die(fh->write_conn, CURLOPT_INFILESIZE, -1);
+  curl_easy_setopt_or_die(fh->write_conn, CURLOPT_INFILESIZE, (curl_off_t)-1);
   curl_easy_setopt_or_die(fh->write_conn, CURLOPT_READFUNCTION, write_data_bg);
   curl_easy_setopt_or_die(fh->write_conn, CURLOPT_READDATA, fh);
   curl_easy_setopt_or_die(fh->write_conn, CURLOPT_LOW_SPEED_LIMIT, 1);
@@@@ -611,10 +627,12 @@@@ static void free_ftpfs_file(struct ftpfs_file *fh) {
     curl_easy_cleanup(fh->write_conn);
   g_free(fh->full_path);
   g_free(fh->open_path);
-  sem_destroy(&fh->data_avail);
-  sem_destroy(&fh->data_need);
-  sem_destroy(&fh->data_written);
-  sem_destroy(&fh->ready);
+  if (fh->data_avail) {
+    sem_destroy(&fh->data_avail);
+    sem_destroy(&fh->data_need);
+    sem_destroy(&fh->data_written);
+    sem_destroy(&fh->ready);
+  }
   free(fh);
 }
 
@@@@ -813,12 +849,12 @@@@ static int ftpfs_open(const char* path, struct fuse_fi
   return ftpfs_open_common(path, 0, fi);
 }
 
-#if FUSE_VERSION >= 25
 static int ftpfs_create(const char* path, mode_t mode,
                         struct fuse_file_info* fi) {
-  return ftpfs_open_common(path, mode, fi);
+  fi->flags &= ~O_ACCMODE;
+  fi->flags |= O_RDONLY;
+  return ftpfs_open_common(path, (mode & ~O_ACCMODE) | O_RDONLY, fi);
 }
-#endif
 
 static int ftpfs_read(const char* path, char* rbuf, size_t size, off_t offset,
                       struct fuse_file_info* fi) {
@@@@ -1380,8 +1420,8 @@@@ static struct fuse_cache_operations ftpfs_oper = {
     .read       = ftpfs_read,
     .write      = ftpfs_write,
     .statfs     = ftpfs_statfs,
-#if FUSE_VERSION >= 25
     .create     = ftpfs_create,
+#if FUSE_VERSION >= 25
     .ftruncate  = ftpfs_ftruncate,
 //    .fgetattr   = ftpfs_fgetattr,
 #endif
@


1.1.1.1
log
@import curlftpfs

CurlFtpFS is a filesystem for acessing ftp hosts based on FUSE and
libcurl.

ok aja@@ syl@@ (who also fixed an issue with 'create', thanks)
@
text
@@
