head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.0.48
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.50
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.46
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.44
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.42
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.40
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.38
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.36
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.34
	OPENBSD_5_0:1.1.0.32
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.30
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.28
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.26
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.24
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.22
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.20
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.18
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.16
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.14
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.03.18.14.33.51;	author sebastia;	state dead;
branches;
next	1.1;
commitid	Y4SQOeItzEVDNJ9D;

1.1
date	2004.02.01.01.35.52;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove old not useful anymore port
@
text
@$OpenBSD: patch-libapm_h,v 1.1 2004/02/01 01:35:52 millert Exp $
--- libapm.h.orig	Mon May 11 20:05:49 1998
+++ libapm.h	Sat Jan 31 18:11:24 2004
@@@@ -32,34 +32,72 @@@@ static inline int port_inw( int port )
 #define outb(port, value) port_out(value, port)
 #define outw(port, value) port_outw(value, port)
 
+#ifdef __linux__
 int io_enable(void)
 {
   ioperm(0x70, 1, 1);
   ioperm(0x71, 1, 1);
   return 0;
 }
+#elif defined(__OpenBSD__) || defined(__NetBSD__)
+int io_enable(void)
+{
+  u_long iomap[32];
+
+  if (i386_get_ioperm(iomap))
+    return 1;
+  iomap[0x70 / 32] &= ~(1 << (0x70 % 32));
+  iomap[0x71 / 32] &= ~(1 << (0x71 % 32));
+  if (i386_set_ioperm(iomap))
+    return 1;
+
+  return 0;
+}
+#endif
 
+#ifdef __linux__
 int io_disable(void)
 {
   ioperm(0x70, 0, 1);
   ioperm(0x71, 0, 1);
   return 0;
 }
+#elif defined(__OpenBSD__) || defined(__NetBSD__)
+int io_disable(void)
+{
+  u_long iomap[32];
+
+  if (i386_get_ioperm(iomap))
+    return 1;
+  iomap[0x70 / 32] |= (1 << (0x70 % 32));
+  iomap[0x71 / 32] |= (1 << (0x71 % 32));
+  if (i386_set_ioperm(iomap))
+    return 1;
+
+  return 0;
+}
+#endif
 
 int get_cmos(int index)
 {
   int r;
 
+#ifndef __FreeBSD__
   io_enable();
+#endif
   outb(0x70, index);
   r = inb(0x71);
+#ifndef __FreeBSD__
   io_disable();
+#endif
   return r;
 }
 
 int set_cmos(int index, int value)
 {
+#ifndef __FreeBSD__
   io_enable();
+#endif
   outb(0x70, index);
   outb(0x71, value);
   return 0;
@


1.1
log
@We now have getopt_long so no need for a workaround.  Also fix multiline
strings to make gcc 3.x happy.
@
text
@d1 1
a1 1
$OpenBSD$
@

