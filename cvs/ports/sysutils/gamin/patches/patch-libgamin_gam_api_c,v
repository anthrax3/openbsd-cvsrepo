head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.26
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.22
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.24
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.20
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.18
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.16
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.14
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.12
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.10
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	ajacoutot_20091204:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2010.07.13.14.10.35;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2010.06.30.20.48.30;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.29.04.27.11;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2009.12.04.08.07.20;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.12.04.08.07.20;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Fix memleaks by including string.h where needed.
While here, switch to new REVISION/DEPENDS.
@
text
@$OpenBSD: patch-libgamin_gam_api_c,v 1.3 2010/06/30 20:48:30 ajacoutot Exp $
--- libgamin/gam_api.c.orig	Mon Aug 27 12:21:03 2007
+++ libgamin/gam_api.c	Tue Jul 13 15:52:47 2010
@@@@ -4,6 +4,7 @@@@
 
 #include "config.h"
 #include <pwd.h>
+#include <string.h>
 #include <stdlib.h>
 #include <stdio.h>
 #include <unistd.h>
@@@@ -712,7 +713,11 @@@@ retry:
 
     {
 #ifdef SO_PEERCRED
+#ifndef __OpenBSD__
         struct ucred cr;
+#else
+	struct sockpeercred cr;
+#endif
         socklen_t cr_len = sizeof(cr);
 
         if (getsockopt(fd, SOL_SOCKET, SO_PEERCRED, &cr, &cr_len) ==
@@@@ -1288,14 +1293,16 @@@@ FAMNextEvent(FAMConnection * fc, FAMEvent * fe)
 
     // FIXME: drop and reacquire lock while blocked?
     gamin_data_lock(conn);
-    if (!gamin_data_event_ready(conn)) {
+    while ((ret = gamin_data_event_ready(conn)) == 0) {
         if (gamin_read_data(conn, fc->fd, 1) < 0) {
 	    gamin_try_reconnect(conn, fc->fd);
 	    FAMErrno = FAM_CONNECT;
 	    return (-1);
 	}
     }
-    ret = gamin_data_read_event(conn, fe);
+    if (ret > 0)
+        ret = gamin_data_read_event(conn, fe);
+
     gamin_data_unlock(conn);
 
     if (ret < 0) {
@


1.3
log
@Make use of getsockopt(2) SO_PEERCRED so we can use c_pid.

Requires a very current current...
@
text
@d1 1
a1 1
$OpenBSD: patch-libgamin_gam_api_c,v 1.2 2010/06/29 04:27:11 ajacoutot Exp $
d3 10
a12 2
+++ libgamin/gam_api.c	Wed Jun 30 22:34:27 2010
@@@@ -712,7 +712,11 @@@@ retry:
d24 1
a24 1
@@@@ -1288,14 +1292,16 @@@@ FAMNextEvent(FAMConnection * fc, FAMEvent * fe)
@


1.2
log
@We don't want getpid() here.
@
text
@d1 1
a1 4
$OpenBSD: patch-libgamin_gam_api_c,v 1.1.1.1 2009/12/04 08:07:20 ajacoutot Exp $

Adapt socket credentials code to OpenBSD.

d3 9
a11 7
+++ libgamin/gam_api.c	Sat Nov 28 15:45:19 2009
@@@@ -7,6 +7,9 @@@@
 #include <stdlib.h>
 #include <stdio.h>
 #include <unistd.h>
+#if defined(__OpenBSD__)
+#include <string.h>
d13 4
a16 26
 #include <sys/types.h>
 #include <fcntl.h>
 #include <errno.h>
@@@@ -730,6 +733,21 @@@@ retry:
         c_pid = cmsg.cred.cmcred_pid;
         c_uid = cmsg.cred.cmcred_euid;
         c_gid = cmsg.cred.cmcred_groups[0];
+#elif defined(__OpenBSD__)
+        uid_t euid;
+        gid_t egid;
+        if (getpeereid (fd, &euid, &egid) == 0)
+            {
+                c_pid = -1;
+                c_uid = euid;
+                c_gid = egid;
+            }
+        else
+            {
+                GAM_DEBUG(DEBUG_INFO,
+                    "Failed to getpeereid() credentials: %d\n", fd);
+                goto failed;
+            }
 #else /* !SO_PEERCRED && !HAVE_CMSGCRED */
         GAM_DEBUG(DEBUG_INFO,
                   "Socket credentials not supported on this OS\n");
@@@@ -1288,14 +1306,16 @@@@ FAMNextEvent(FAMConnection * fc, FAMEvent * fe)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d26 1
a26 1
+                c_pid = getpid();
@


1.1.1.1
log
@Import (lib,py-)gamin-0.1.10

Gamin is a file and directory monitoring system defined to be a subset
of the FAM (File Alteration Monitor) system.
The main goals of the project are:
  * minimize the security model of FAM
  * simplify the code base
  * provide an API and ABI compatible replacement for FAM
  * try to fix some other issues like resource consumption

works for bernd@@
ok landry@@ jasper@@
@
text
@@
