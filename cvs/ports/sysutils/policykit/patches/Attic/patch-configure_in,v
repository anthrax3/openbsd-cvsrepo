head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	robert_20090606:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.06.26.03.42.59;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2009.06.07.02.53.06;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.07.02.53.06;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove non working policykit. It's been deprecated by polkit anyway.

ok robert@@
@
text
@$OpenBSD: patch-configure_in,v 1.1 2009/06/07 02:53:06 robert Exp $
--- configure.in.orig	Mon Jun 30 21:40:59 2008
+++ configure.in	Sat May 30 20:47:45 2009
@@@@ -300,7 +300,7 @@@@ dnl --------------------------------------------------
 
 AC_ARG_WITH([authfw],
 	    AS_HELP_STRING([--with-authfw=<name>], 
-                           [Authentication framework (none/pam/shadow)]))
+                           [Authentication framework (none/pam/shadow/bsdauth)]))
 if ! test -z "$with_authfw" ; then
   if test x$with_authdb = xdummy ; then
     if ! test x$with_authfw = xnone ; then
@@@@ -340,6 +340,10 @@@@ case $POLKIT_AUTHFW in
     AC_DEFINE(POLKIT_AUTHFW_SHADOW, 1, [If using the Shadow authentication framework])
     ;;
 
+  bsdauth)
+    need_pam=no
+    AC_DEFINE(POLKIT_AUTHFW_BSDAUTH, 1, [If using the BSD authentication framework])
+    ;;
   *)
     AC_MSG_ERROR([Unknown Authentication Framework: $POLKIT_AUTHFW])
     ;;
@@@@ -348,6 +352,7 @@@@ esac
 AM_CONDITIONAL(POLKIT_AUTHFW_NONE, [test x$POLKIT_AUTHFW = xnone], [Using no authfw])
 AM_CONDITIONAL(POLKIT_AUTHFW_PAM, [test x$POLKIT_AUTHFW = xpam], [Using PAM authfw])
 AM_CONDITIONAL(POLKIT_AUTHFW_SHADOW, [test x$POLKIT_AUTHFW = xshadow], [Using Shadow authfw])
+AM_CONDITIONAL(POLKIT_AUTHFW_BSDAUTH, [test x$POLKIT_AUTHFW = xbsdauth], [Using BSD authfw])
 
 
 dnl ---------------------------------------------------------------------------
@@@@ -473,6 +478,7 @@@@ AM_CONDITIONAL(OS_TYPE_GENTOO, test x$with_os_type = x
 AM_CONDITIONAL(OS_TYPE_PARDUS, test x$with_os_type = xpardus, [Running on Pardus OS'es])
 AM_CONDITIONAL(OS_TYPE_SOLARIS, test x$with_os_type = xsolaris, [Running os Solaris OS'es])
 AM_CONDITIONAL(OS_TYPE_FREEBSD, test x$with_os_type = xfreebsd, [Running on FreeBSD OS'es])
+AM_CONDITIONAL(OS_TYPE_OPENBSD, test x$with_os_type = xopenbsd, [Running on OpenBSD OS'es])
 
 AC_ARG_WITH(pam-include, [  --with-pam-include=<file>  pam file to include])
 
@@@@ -524,6 +530,9 @@@@ case "$host_os" in
 	;;
   *freebsd*)
   	AC_DEFINE([HAVE_FREEBSD], 1, [Is this a FreeBSD system?])
+	;;
+  *openbsd*)
+  	AC_DEFINE([HAVE_OPENBSD], 1, [Is this a OpenBSD system?])
 	;;
 esac
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import of PolicyKit-0.9;

PolicyKit is a framework for defining policy for system-wide components and
for desktop pieces to configure it. It is used by HAL.

@
text
@@
