head	1.4;
access;
symbols
	OPENBSD_5_3:1.3.0.6
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	ajacoutot_20100504:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.03.27.08.49.27;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2011.09.15.06.54.41;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.11.05.16.39.10;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.04.12.53.49;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.05.04.12.53.49;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove backintime; it depends on *very* outdated and unmaintained
GNOME 2 libs which are about to be removed.

ok jasper@@
@
text
@$OpenBSD: patch-common_snapshots_py,v 1.3 2011/09/15 06:54:41 ajacoutot Exp $

OpenBSD does not support extended attributes & ACLs.
Needs the "--link" option from gcp(1) for incremental backups.

--- common/snapshots.py.orig	Sun Jun  5 13:57:48 2011
+++ common/snapshots.py	Wed Sep 14 15:17:46 2011
@@@@ -561,14 +561,14 @@@@ class Snapshots:
 		#cmd = "chmod -R u+rwx \"%s\"" %  path
 		cmd = "find \"%s\" -type d -exec chmod u+wx {} \\;" % path #Debian patch
 		self._execute( cmd )
-		cmd = "rm -rfv \"%s\"" % path
+		cmd = "rm -rf \"%s\"" % path
 		self._execute( cmd )
 
 	def copy_snapshot( self, snapshot_id, new_folder ):
 		'''Copies a known snapshot to a new location'''
 		current.path = self.get_snapshot_path( snapshot_id )
 		#need to implement hardlinking to existing folder -> cp newest snapshot folder, rsync -aEAXHv --delete to this folder
-		cmd = "cp -dRl \"%s\"* \"%s\"" % ( current_path, new_folder )
+		cmd = "gcp -dRl \"%s\"* \"%s\"" % ( current_path, new_folder )
 		logger.info( '%s is copied to folder %s' %( snapshot_id, new_folder ) )
 		self._execute( cmd )
 
@@@@ -1092,7 +1092,7 @@@@ class Snapshots:
 			self._execute( "find \"%s\" -type d -exec chmod u+wx {} \\;" % prev_snapshot_path ) #Debian patch
 
 			#clone snapshot
-			cmd = "cp -aRl \"%s\"* \"%s\"" % ( prev_snapshot_path, new_snapshot_path_to )
+			cmd = "gcp -aRl \"%s\"* \"%s\"" % ( prev_snapshot_path, new_snapshot_path_to )
 			self.append_to_take_snapshot_log( '[I] ' + cmd, 3 )
 			cmd_ret_val = self._execute( cmd )
 			self.append_to_take_snapshot_log( "[I] returns: %s" % cmd_ret_val, 3 )
@@@@ -1141,7 +1141,7 @@@@ class Snapshots:
 		#backup config file
 		logger.info( 'Save config file' )
 		self.set_take_snapshot_message( 0, _('Save config file ...') )
-		self._execute( 'cp %s %s' % (self.config._LOCAL_CONFIG_PATH, new_snapshot_path_to + '..') )
+		self._execute( 'gcp %s %s' % (self.config._LOCAL_CONFIG_PATH, new_snapshot_path_to + '..') )
 		
 		#save permissions for sync folders
 		logger.info( 'Save permissions' )
@


1.3
log
@Update to backintime-1.0.8.
@
text
@d1 1
a1 1
$OpenBSD: patch-common_snapshots_py,v 1.2 2010/11/05 16:39:10 ajacoutot Exp $
@


1.2
log
@Update to backintime-common-1.0.4.
@
text
@d1 1
a1 1
$OpenBSD: patch-common_snapshots_py,v 1.1.1.1 2010/05/04 12:53:49 ajacoutot Exp $
d6 3
a8 3
--- common/snapshots.py.orig	Sun Oct 24 21:31:26 2010
+++ common/snapshots.py	Fri Nov  5 16:11:52 2010
@@@@ -507,14 +507,14 @@@@ class Snapshots:
d25 1
a25 1
@@@@ -1049,7 +1049,7 @@@@ class Snapshots:
d34 1
a34 1
@@@@ -1098,7 +1098,7 @@@@ class Snapshots:
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d6 5
a10 14
--- common/snapshots.py.orig	Mon May 18 10:24:21 2009
+++ common/snapshots.py	Tue May  4 10:36:57 2010
@@@@ -256,7 +256,7 @@@@ class Snapshots:
 
 		backup_suffix = '.backup.' + datetime.date.today().strftime( '%Y%m%d' )
 		#cmd = "rsync -avR --copy-unsafe-links --whole-file --backup --suffix=%s --chmod=+w %s/.%s %s" % ( backup_suffix, self.get_snapshot_path_to( snapshot_id ), path, '/' )
-		cmd = "rsync -avRAXE --whole-file --backup --suffix=%s " % backup_suffix
+		cmd = "rsync -avRE --whole-file --backup --suffix=%s " % backup_suffix
 		cmd = cmd + '--chmod=+w '
 		cmd = cmd + "\"%s.%s\" %s" % ( self.get_snapshot_path_to( snapshot_id ), path, '/' )
 		self._execute( cmd )
@@@@ -316,7 +316,7 @@@@ class Snapshots:
 		path = self.get_snapshot_path( snapshot_id )
 		cmd = "chmod -R a+rwx \"%s\"" %  path
d16 8
a23 3
 	def _get_last_snapshot_info( self ):
@@@@ -608,7 +608,7 @@@@ class Snapshots:
 		rsync_include2 = ' '.join( items2 )
d25 2
a26 5
 		#rsync prefix & suffix
-		rsync_prefix = 'rsync -aEAX '
+		rsync_prefix = 'rsync -aE '
 		rsync_exclude_backup_directory = " --exclude=\"%s\" --exclude=\"%s\" " % ( self.config.get_snapshots_path(), self.config._LOCAL_DATA_FOLDER )
 		rsync_suffix = ' --chmod=Fa-w,D+w --whole-file --delete ' + rsync_exclude_backup_directory  + rsync_include + ' ' + rsync_exclude + ' ' + rsync_include2 + ' --exclude=\"*\" / '
d28 12
a39 24
@@@@ -653,14 +653,14 @@@@ class Snapshots:
 			logger.info( "Create hard-links" )
 			
 			if force or len( ignore_folders ) == 0:
-				cmd = "cp -al \"%s\"* \"%s\"" % ( self.get_snapshot_path_to( prev_snapshot_id ), new_snapshot_path_to )
+				cmd = "gcp -al \"%s\"* \"%s\"" % ( self.get_snapshot_path_to( prev_snapshot_id ), new_snapshot_path_to )
 				self._execute( cmd )
 			else:
 				for folder in include_folders:
 					prev_path = self.get_snapshot_path_to( prev_snapshot_id, folder )
 					new_path = self.get_snapshot_path_to( new_snapshot_id, folder )
 					tools.make_dirs( new_path )
-					cmd = "cp -alb \"%s\"* \"%s\"" % ( prev_path, new_path )
+					cmd = "gcp -alb \"%s\"* \"%s\"" % ( prev_path, new_path )
 					self._execute( cmd )
 		else:
 			if not self._create_directory( new_snapshot_path_to ):
@@@@ -695,7 +695,7 @@@@ class Snapshots:
 				prev_path = self.get_snapshot_path_to( prev_snapshot_id, folder )
 				new_path = self.get_snapshot_path_to( new_snapshot_id, folder )
 				tools.make_dirs( new_path )
-				cmd = "cp -alb \"%s/\"* \"%s\"" % ( prev_path, new_path )
+				cmd = "gcp -alb \"%s/\"* \"%s\"" % ( prev_path, new_path )
 				self._execute( cmd )
d41 2
a42 1
 				if len( prev_fileinfo_dict ) > 0:
@


1.1.1.1
log
@Import backintime-0.9.26.

Back In Time is a simple backup tool for Linux inspired from the flyback
project and TimeVault. The backup is done by taking snapshots of a
specified set of directories.

ok jasper@@
@
text
@@
