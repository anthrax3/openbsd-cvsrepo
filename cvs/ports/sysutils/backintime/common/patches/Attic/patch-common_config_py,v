head	1.5;
access;
symbols
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	ajacoutot_20100504:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2013.03.27.08.49.27;	author ajacoutot;	state dead;
branches;
next	1.4;

1.4
date	2012.05.29.10.21.56;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.03.13.49.27;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.11.05.16.39.10;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.04.12.53.49;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.05.04.12.53.49;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove backintime; it depends on *very* outdated and unmaintained
GNOME 2 libs which are about to be removed.

ok jasper@@
@
text
@$OpenBSD: patch-common_config_py,v 1.4 2012/05/29 10:21:56 ajacoutot Exp $
--- common/config.py.orig	Wed Jan  5 21:08:29 2011
+++ common/config.py	Tue May 29 12:20:17 2012
@@@@ -29,13 +29,13 @@@@ import logger
 
 _=gettext.gettext
 
-gettext.bindtextdomain( 'backintime', '/usr/share/locale' )
+gettext.bindtextdomain( 'backintime', '${PREFIX}/share/locale' )
 gettext.textdomain( 'backintime' )
 
 
 class Config( configfile.ConfigFileWithProfiles ):
 	APP_NAME = 'Back In Time'
-	VERSION = '1.0.7'
+	VERSION = '1.0.8'
 	COPYRIGHT = 'Copyright (c) 2008-2009 Oprea Dan, Bart de Koning, Richard Bailey'
 	CONFIG_VERSION = 5
 
@@@@ -77,11 +77,11 @@@@ class Config( configfile.ConfigFileWithProfiles ):
 		configfile.ConfigFileWithProfiles.__init__( self, _('Main profile') )
 
 		self._APP_PATH =  os.path.dirname( os.path.abspath( os.path.dirname( __file__ ) ) )
-		self._DOC_PATH = '/usr/share/doc/backintime'
+		self._DOC_PATH = '${PREFIX}/share/doc/backintime'
 		if os.path.exists( os.path.join( self._APP_PATH, 'LICENSE' ) ):
 			self._DOC_PATH = self._APP_PATH
 
-		self._GLOBAL_CONFIG_PATH = '/etc/backintime/config'
+		self._GLOBAL_CONFIG_PATH = '${SYSCONFDIR}/backintime/config'
 
 		HOME_FOLDER = os.path.expanduser( '~' )
 		self._LOCAL_DATA_FOLDER = os.path.join( os.getenv( 'XDG_DATA_HOME', '$HOME/.local/share' ).replace( '$HOME', HOME_FOLDER ), 'backintime' )
@@@@ -587,18 +587,6 @@@@ class Config( configfile.ConfigFileWithProfiles ):
 	def set_run_nice_from_cron_enabled( self, value, profile_id = None ):
 		self.set_profile_bool_value( 'snapshots.cron.nice', value, profile_id )
 
-	def is_run_ionice_from_cron_enabled( self, profile_id = None ):
-		return self.get_profile_bool_value( 'snapshots.cron.ionice', True, profile_id )
-
-	def set_run_ionice_from_cron_enabled( self, value, profile_id = None ):
-		self.set_profile_bool_value( 'snapshots.cron.ionice', value, profile_id )
-
-	def is_run_ionice_from_user_enabled( self, profile_id = None ):
-		return self.get_profile_bool_value( 'snapshots.user_backup.ionice', False, profile_id )
-
-	def set_run_ionice_from_user_enabled( self, value, profile_id = None ):
-		self.set_profile_bool_value( 'snapshots.user_backup.ionice', value, profile_id )
-
 	def is_no_on_battery_enabled( self, profile_id = None ):
 		return self.get_profile_bool_value( 'snapshots.no_on_battery', False, profile_id )
 
@@@@ -820,9 +808,7 @@@@ class Config( configfile.ConfigFileWithProfiles ):
 				profile=''
 				if '1' != profile_id:
 					profile = "--profile-id %s" % profile_id
-				cmd = "/usr/bin/backintime %s --backup-job >/dev/null 2>&1" % profile
-				if self.is_run_ionice_from_cron_enabled():
-					cmd = 'ionice -c2 -n7 ' + cmd
+				cmd = "${PREFIX}/bin/backintime %s --backup-job >/dev/null 2>&1" % profile
 				if self.is_run_nice_from_cron_enabled( profile_id ):
 					cmd = 'nice -n 19 ' + cmd
 				cron_line = cron_line.replace( '{cmd}', cmd )
@


1.4
log
@Prepend the short hostname to the log line to have a compliant syslog(3)
entry allowing remote logging based on the host.
@
text
@d1 1
a1 1
$OpenBSD: patch-common_config_py,v 1.3 2011/03/03 13:49:27 ajacoutot Exp $
@


1.3
log
@Update to backintime 1.0.6.
@
text
@d1 4
a4 4
$OpenBSD: patch-common_config_py,v 1.2 2010/11/05 16:39:10 ajacoutot Exp $
--- common/config.py.orig	Sun Jan  2 15:03:07 2011
+++ common/config.py	Mon Feb 21 19:14:16 2011
@@@@ -29,7 +29,7 @@@@ import logger
d12 7
@


1.2
log
@Update to backintime-common-1.0.4.
@
text
@d1 3
a3 3
$OpenBSD: patch-common_config_py,v 1.1.1.1 2010/05/04 12:53:49 ajacoutot Exp $
--- common/config.py.orig	Wed Oct 27 21:56:06 2010
+++ common/config.py	Fri Nov  5 16:21:44 2010
d27 1
a27 1
@@@@ -579,18 +579,6 @@@@ class Config( configfile.ConfigFileWithProfiles ):
d46 5
a50 5
@@@@ -809,9 +797,7 @@@@ class Config( configfile.ConfigFileWithProfiles ):
 				cron_line = 'echo "{msg}\n0 ' + str(self.get_automatic_backup_time( profile_id ) / 100) + ' 1 * * {cmd}"'
 
 			if len( cron_line ) > 0:
-				cmd = "/usr/bin/backintime --profile \\\"%s\\\" --backup-job >/dev/null 2>&1" % profile_name
d53 1
a53 1
+				cmd = "${PREFIX}/bin/backintime --profile \\\"%s\\\" --backup-job >/dev/null 2>&1" % profile_name
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- common/config.py.orig	Tue May  4 10:28:34 2010
+++ common/config.py	Tue May  4 10:29:26 2010
@@@@ -27,7 +27,7 @@@@ import tools
d13 2
a14 1
@@@@ -70,11 +70,11 @@@@ class Config( configfile.ConfigFile ):
a15 1
 	def __init__( self ):
d27 30
a56 9
@@@@ -466,7 +466,7 @@@@ class Config( configfile.ConfigFile ):
 			cron_line = 'echo "@@monthly {cmd}"'
 
 		if len( cron_line ) > 0:
-			cmd = '/usr/bin/backintime --backup-job >/dev/null 2>&1'
+			cmd = '${PREFIX}/bin/backintime --backup-job >/dev/null 2>&1'
 			if self.is_run_nice_from_cron_enabled():
 				cmd = 'nice -n 19 ' + cmd
 			cron_line = cron_line.replace( '{cmd}', cmd )
@


1.1.1.1
log
@Import backintime-0.9.26.

Back In Time is a simple backup tool for Linux inspired from the flyback
project and TimeVault. The backup is done by taking snapshots of a
specified set of directories.

ok jasper@@
@
text
@@
