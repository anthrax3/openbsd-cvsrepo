head	1.6;
access;
symbols
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	sturm-2004_Jun_26:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2008.11.10.09.19.25;	author jasper;	state dead;
branches;
next	1.5;

1.5
date	2007.09.09.20.02.09;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2007.09.04.20.52.13;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.01.07.08.39;	author steven;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.26.00.33.30;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.26.19.00.48;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.06.26.19.00.48;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.6
log
@- update radmind to 1.13.0
- regen PLIST

from William Yodlowsky (MAINTAINER), thanks!
@
text
@$OpenBSD: patch-lapply_c,v 1.5 2007/09/09 20:02:09 jasper Exp $
--- lapply.c.orig	Tue Jul 31 04:55:36 2007
+++ lapply.c	Sun Sep  9 21:59:53 2007
@@@@ -85,7 +85,7 @@@@ create_node( char *path, char *tline )
     new_node = (struct node *) malloc( sizeof( struct node ));
     new_node->path = strdup( path );
     if ( tline != NULL ) {
-	sprintf( new_node->tline, "%s", tline );
+	(void)snprintf( new_node->tline, sizeof( new_node->tline ), "%s", tline );
 	new_node->doline = 1;
     } else {
 	new_node->doline = 0;
@@@@ -129,7 +129,7 @@@@ do_line( char *tline, int present, struct stat *st, SN
 	fprintf( stderr, "line %d: too long\n", linenum );
 	return( 1 );
     } 
-    strcpy( path, d_path );
+    (void)strlcpy( path, d_path, sizeof( path ) );
 
     /* DOWNLOAD */
     if ( *command == '+' ) {
@@@@ -138,7 +138,7 @@@@ do_line( char *tline, int present, struct stat *st, SN
 		    linenum, *targv[ 0 ] );
 	    return( 1 );
 	}
-	strcpy( cksum_b64, targv[ 7 ] );
+	(void)strlcpy( cksum_b64, targv[ 7 ], sizeof( cksum_b64 ) );
 
 	if ( special ) {
 	    if ( snprintf( pathdesc, MAXPATHLEN * 2, "SPECIAL %s",
@@@@ -473,7 +473,7 @@@@ main( int argc, char **argv )
 	    fprintf( stderr, "line %d: too long\n", linenum );
 	    goto error2;
 	}
-	strcpy( targvline, tline );
+	(void)strlcpy( targvline, tline, sizeof( targvline ) );
 
 	tac = acav_parse( acav, targvline, &targv );
 
@@@@ -483,7 +483,7 @@@@ main( int argc, char **argv )
         }
 
 	if ( tac == 1 ) {
-	    strcpy( transcript, targv[ 0 ] );
+	    (void)strlcpy( transcript, targv[ 0 ], sizeof( transcript ) );
 	    len = strlen( transcript );
 	    if ( transcript[ len - 1 ] != ':' ) { 
 		fprintf( stderr, "%s: line %d: invalid transcript name\n",
@@@@ -525,7 +525,7 @@@@ main( int argc, char **argv )
 	    fprintf( stderr, "line %d: too long\n", linenum );
 	    return( 1 );
 	} 
-	strcpy( path, d_path );
+	(void)strlcpy( path, d_path, sizeof( path ) );
 
 	/* Check transcript order */
 	if ( prepath != 0 ) {
@@@@ -539,7 +539,7 @@@@ main( int argc, char **argv )
 		    transcript, linenum );
 	    goto error2;
 	}
-	strcpy( prepath, path );
+	(void)strlcpy( prepath, path, sizeof( prepath ) );
 
 	/* Do type check on local file */
 	switch ( radstat( path, &st, &fstype, &afinfo )) {
@


1.5
log
@update radmind to 1.10.0

from William Yodlowsky (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-lapply_c,v 1.4 2007/09/04 20:52:13 jasper Exp $
@


1.4
log
@update radmind to 1.9.0

from William Yodlowsky (MAINTAINER)
@
text
@d1 4
a4 4
$OpenBSD: patch-lapply_c,v 1.2 2005/01/26 00:33:30 pvalchev Exp $
--- lapply.c.orig	Mon Jun 18 15:25:46 2007
+++ lapply.c	Wed Jul 18 09:41:16 2007
@@@@ -84,7 +84,7 @@@@ create_node( char *path, char *tline )
d13 1
a13 1
@@@@ -128,7 +128,7 @@@@ do_line( char *tline, int present, struct stat *st, SN
d22 1
a22 1
@@@@ -137,7 +137,7 @@@@ do_line( char *tline, int present, struct stat *st, SN
d31 1
a31 1
@@@@ -463,7 +463,7 @@@@ main( int argc, char **argv )
d40 1
a40 1
@@@@ -473,7 +473,7 @@@@ main( int argc, char **argv )
d49 1
a49 1
@@@@ -515,7 +515,7 @@@@ main( int argc, char **argv )
d58 1
a58 1
@@@@ -530,7 +530,7 @@@@ main( int argc, char **argv )
@


1.3
log
@USE_LIBTOOL, regen patches
@
text
@d2 3
a4 3
--- lapply.c.orig	Thu Dec 16 22:51:34 2004
+++ lapply.c	Sun Apr  1 08:18:32 2007
@@@@ -75,7 +75,7 @@@@ create_node( char *path, char *tline )
d13 1
a13 1
@@@@ -126,7 +126,7 @@@@ do_line( char *tline, int present, struct stat *st, SN
d22 1
a22 1
@@@@ -135,7 +135,7 @@@@ do_line( char *tline, int present, struct stat *st, SN
d31 1
a31 1
@@@@ -415,7 +415,7 @@@@ main( int argc, char **argv )
d40 1
a40 1
@@@@ -425,7 +425,7 @@@@ main( int argc, char **argv )
d49 1
a49 1
@@@@ -467,7 +467,7 @@@@ main( int argc, char **argv )
d58 1
a58 1
@@@@ -482,7 +482,7 @@@@ main( int argc, char **argv )
@


1.2
log
@Update to radmind-1.4.0
from maintainer William Yodlowsky <bsd@@openbsd.rutgers.edu>
@
text
@d1 3
a3 3
$OpenBSD: patch-lapply_c,v 1.1.1.1 2004/06/26 19:00:48 sturm Exp $
--- lapply.c.orig	Thu Dec 16 16:50:35 2004
+++ lapply.c	Thu Jan 20 12:57:27 2005
d13 1
a13 1
@@@@ -126,7 +126,7 @@@@ do_line( char *tline, int present, struc
d22 1
a22 1
@@@@ -135,7 +135,7 @@@@ do_line( char *tline, int present, struc
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- lapply.c.orig	2004-02-12 14:35:52.000000000 -0500
+++ lapply.c	2004-06-08 16:21:37.000000000 -0400
@@@@ -72,7 +72,7 @@@@ create_node( char *path, char *tline )
d13 1
a13 1
@@@@ -123,7 +123,7 @@@@ do_line( char *tline, int present, struc
d22 1
a22 1
@@@@ -132,7 +132,7 @@@@ do_line( char *tline, int present, struc
d31 10
a40 1
@@@@ -409,7 +409,7 @@@@ main( int argc, char **argv )
d49 1
a49 1
@@@@ -451,7 +451,7 @@@@ main( int argc, char **argv )
d58 9
@


1.1.1.1
log
@Initial import of radmind 1.3.0

A suite of Unix command-line tools and a server designed to remotely 
administer the file systems of multiple Unix machines.

At its core, radmind operates as a tripwire. It is able to detect 
changes to any managed filesystem object, e.g. files, directories, 
links, etc. However, radmind goes further than just integrity 
checking: once a change is detected, radmind can optionally reverse 
the change.

WWW: http://rsug.itd.umich.edu/software/radmind/

from William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@@
