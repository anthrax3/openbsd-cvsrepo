head	1.5;
access;
symbols
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.10
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2008.11.10.09.19.25;	author jasper;	state dead;
branches;
next	1.4;

1.4
date	2007.09.09.20.02.09;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2007.09.04.20.52.13;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.01.07.08.39;	author steven;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.26.00.33.30;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.5
log
@- update radmind to 1.13.0
- regen PLIST

from William Yodlowsky (MAINTAINER), thanks!
@
text
@$OpenBSD: patch-ktcheck_c,v 1.4 2007/09/09 20:02:09 jasper Exp $
--- ktcheck.c.orig	Tue Jul 31 04:55:36 2007
+++ ktcheck.c	Sun Sep  9 21:59:53 2007
@@@@ -240,7 +240,7 @@@@ clean_client_dir( void )
      * can't pass in kdir, since it has a trailing slash.
      * bounds checking done when creating kdir in main().
      */
-    strcpy( dir, kdir );
+    (void)strlcpy( dir, kdir, sizeof( dir ) );
     if (( p = strrchr( dir, '/' )) != NULL ) {
 	*p = '\0';
     }
@@@@ -284,7 +284,7 @@@@ getstat( SNET *sn, char *description, char *stats ) 
 	fprintf( stderr, "%s: line too long\n", line );
 	return( -1 );
     }
-    strcpy( stats, line );
+    (void)strlcpy( stats, line, MAXPATHLEN );
 
     if ( verbose ) printf( "<<< %s\n", stats );
 
@@@@ -435,7 +435,7 @@@@ check( SNET *sn, char *type, char *file )
 	    fprintf( stderr, "%s: too long\n", type );
 	    return( 2 );
 	}
-	strcpy( pathdesc, type );
+	(void)strlcpy( pathdesc, type, sizeof( pathdesc ) );
 
 	file = base_kfile;
 
@@@@ -444,7 +444,7 @@@@ check( SNET *sn, char *type, char *file )
 	    fprintf( stderr, "%s: path too long\n", base_kfile );
 	    return( 2 );
 	}
-	strcpy( path, base_kfile );
+	(void)strlcpy( path, base_kfile, sizeof( path ) );
     }
 
     if ( getstat( sn, (char *)&pathdesc, stats ) != 0 ) {
@@@@ -712,7 +712,7 @@@@ main( int argc, char **argv )
         p++;
         *p = (char)'\0';
     }
-    strcpy( path, base_kfile );
+    (void)strlcpy( path, base_kfile, sizeof( path ) );
 
     if (( sn = connectsn( host, port )) == NULL ) {
 	exit( 2 );
@


1.4
log
@update radmind to 1.10.0

from William Yodlowsky (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-ktcheck_c,v 1.3 2007/09/04 20:52:13 jasper Exp $
@


1.3
log
@update radmind to 1.9.0

from William Yodlowsky (MAINTAINER)
@
text
@d1 4
a4 4
$OpenBSD: patch-ktcheck_c,v 1.1 2005/01/26 00:33:30 pvalchev Exp $
--- ktcheck.c.orig	Mon Jun 18 15:25:46 2007
+++ ktcheck.c	Wed Jul 18 10:32:55 2007
@@@@ -238,7 +238,7 @@@@ clean_client_dir( void )
d13 1
a13 1
@@@@ -282,7 +282,7 @@@@ getstat( SNET *sn, char *description, char *stats ) 
d22 1
a22 1
@@@@ -433,7 +433,7 @@@@ check( SNET *sn, char *type, char *file )
d31 1
a31 1
@@@@ -442,7 +442,7 @@@@ check( SNET *sn, char *type, char *file )
d40 1
a40 1
@@@@ -705,7 +705,7 @@@@ main( int argc, char **argv )
@


1.2
log
@USE_LIBTOOL, regen patches
@
text
@d2 12
a13 3
--- ktcheck.c.orig	Thu Feb 10 19:22:52 2005
+++ ktcheck.c	Sun Apr  1 08:18:32 2007
@@@@ -95,7 +95,7 @@@@ getstat( SNET *sn, char *description, char *stats ) 
d22 1
a22 1
@@@@ -253,7 +253,7 @@@@ check( SNET *sn, char *type, char *file )
d31 1
a31 1
@@@@ -262,7 +262,7 @@@@ check( SNET *sn, char *type, char *file )
d40 1
a40 1
@@@@ -505,7 +505,7 @@@@ main( int argc, char **argv )
@


1.1
log
@Update to radmind-1.4.0
from maintainer William Yodlowsky <bsd@@openbsd.rutgers.edu>
@
text
@d1 4
a4 4
$OpenBSD$
--- ktcheck.c.orig	Thu Jan 20 13:09:09 2005
+++ ktcheck.c	Thu Jan 20 13:05:02 2005
@@@@ -95,7 +95,7 @@@@ getstat( SNET *sn, char *description, ch
d13 1
a13 1
@@@@ -253,7 +253,7 @@@@ check( SNET *sn, char *type, char *file 
d22 1
a22 1
@@@@ -262,7 +262,7 @@@@ check( SNET *sn, char *type, char *file 
@

