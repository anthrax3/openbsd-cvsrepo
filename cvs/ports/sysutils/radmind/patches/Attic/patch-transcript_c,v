head	1.5;
access;
symbols
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	sturm-2004_Jun_26:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2008.11.10.09.19.25;	author jasper;	state dead;
branches;
next	1.4;

1.4
date	2007.09.04.20.52.13;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.01.07.08.39;	author steven;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.26.00.33.30;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.26.19.00.48;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.06.26.19.00.48;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@- update radmind to 1.13.0
- regen PLIST

from William Yodlowsky (MAINTAINER), thanks!
@
text
@$OpenBSD: patch-transcript_c,v 1.4 2007/09/04 20:52:13 jasper Exp $
--- transcript.c.orig	Thu May 31 17:26:47 2007
+++ transcript.c	Wed Jul 18 09:41:17 2007
@@@@ -108,7 +108,7 @@@@ transcript_parse( struct transcript *tran ) 
 	exit( 2 );
     }
 
-    strcpy( tran->t_pinfo.pi_name, epath );
+    (void)strlcpy( tran->t_pinfo.pi_name, epath, sizeof( tran->t_pinfo.pi_name ) );
 
     /* reading and parsing the line */
     switch( *argv[ 0 ] ) {
@@@@ -178,7 +178,7 @@@@ transcript_parse( struct transcript *tran ) 
 		tran->t_fullname, tran->t_linenum );
 	    exit( 2 );
 	}
-	strcpy( tran->t_pinfo.pi_link, epath );
+	(void)strlcpy( tran->t_pinfo.pi_link, epath, sizeof( tran->t_pinfo.pi_link ) );
 	break;
 
     case 'a':				    /* hfs applefile */
@@@@ -200,7 +200,7 @@@@ transcript_parse( struct transcript *tran ) 
 		exit( 2 );
 	    }
 	}
-	strcpy( tran->t_pinfo.pi_cksum_b64, argv[ 7 ] );
+	(void)strlcpy( tran->t_pinfo.pi_cksum_b64, argv[ 7 ], sizeof( tran->t_pinfo.pi_cksum_b64 ) );
 	break;
 
     default:
@@@@ -631,7 +631,7 @@@@ transcript( char *path, struct stat *st, char *type, s
      * exhausted, to consume any remaining transcripts.
      */
     if ( path != NULL ) {
-	strcpy( pi.pi_name, path );
+	(void)strlcpy( pi.pi_name, path, sizeof( pi.pi_name ) );
 	pi.pi_stat = *st;
 	pi.pi_type = *type;
 	pi.pi_afinfo = *afinfo;
@@@@ -640,11 +640,11 @@@@ transcript( char *path, struct stat *st, char *type, s
 	if ( !S_ISDIR( pi.pi_stat.st_mode ) && ( pi.pi_stat.st_nlink > 1 ) &&
 		(( linkpath = hardlink( &pi )) != NULL )) {
 	    pi.pi_type = 'h';
-	    strcpy( pi.pi_link, linkpath );
+	    (void)strlcpy( pi.pi_link, linkpath, sizeof( pi.pi_link ) );
 	} else if ( S_ISLNK( pi.pi_stat.st_mode )) {
 	    len = readlink( pi.pi_name, epath, MAXPATHLEN );
 	    epath[ len ] = '\0';
-	    strcpy( pi.pi_link, epath );
+	    (void)strlcpy( pi.pi_link, epath, sizeof( pi.pi_link ) );
 	}
 
 	/* By default, go into directories */
@@@@ -655,7 +655,7 @@@@ transcript( char *path, struct stat *st, char *type, s
 	}
 
 	/* initialize cksum field. */
-	strcpy( pi.pi_cksum_b64, "-" );
+	(void)strlcpy( pi.pi_cksum_b64, "-", sizeof( pi.pi_cksum_b64 ) );
     }
 
     for (;;) {
@@@@ -708,9 +708,9 @@@@ t_new( int type, char *fullname, char *shortname, char
     case T_SPECIAL :
 	new->t_eof = 0; 
 	new->t_linenum = 0;
-	strcpy( new->t_shortname, shortname );
-	strcpy( new->t_fullname, fullname );
-	strcpy( new->t_kfile, kfile );
+	(void)strlcpy( new->t_shortname, shortname, sizeof( new->t_shortname ) );
+	(void)strlcpy( new->t_fullname, fullname, sizeof( new->t_fullname ) );
+	(void)strlcpy( new->t_kfile, kfile, sizeof( new->t_kfile ) );
 	if (( new->t_in = fopen( fullname, "r" )) == NULL ) {
 	    perror( fullname );
 	    exit( 2 );
@@@@ -844,7 +844,7 @@@@ transcript_init( char *kfile, int location )
 		    "special path too long: %s%s\n", kdir, special );
 	    exit( 2 );
 	}
-	sprintf( fullpath, "%s%s", kdir, special );
+	(void)snprintf( fullpath, sizeof( fullpath ), "%s%s", kdir, special );
 	t_new( T_SPECIAL, fullpath, special, "special" );
     }
 
@


1.4
log
@update radmind to 1.9.0

from William Yodlowsky (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-transcript_c,v 1.2 2005/01/26 00:33:30 pvalchev Exp $
@


1.3
log
@USE_LIBTOOL, regen patches
@
text
@d2 3
a4 3
--- transcript.c.orig	Thu Jan 20 23:44:35 2005
+++ transcript.c	Sun Apr  1 08:18:32 2007
@@@@ -105,7 +105,7 @@@@ transcript_parse( struct transcript *tran ) 
d13 1
a13 1
@@@@ -175,7 +175,7 @@@@ transcript_parse( struct transcript *tran ) 
d22 1
a22 1
@@@@ -197,7 +197,7 @@@@ transcript_parse( struct transcript *tran ) 
d31 4
a34 4
@@@@ -615,17 +615,17 @@@@ transcript( char *path )
 	    }
 	}
 
d37 4
a40 2
 
 	/* if it's multiply referenced, check if it's a hardlink */
d54 1
a54 1
@@@@ -636,7 +636,7 @@@@ transcript( char *path )
d63 2
a64 2
@@@@ -685,9 +685,9 @@@@ t_new( int type, char *fullname, char *shortname, char
     } else {
d76 1
a76 1
@@@@ -752,7 +752,7 @@@@ transcript_init( char *kfile, int location )
@


1.2
log
@Update to radmind-1.4.0
from maintainer William Yodlowsky <bsd@@openbsd.rutgers.edu>
@
text
@d1 4
a4 4
$OpenBSD: patch-transcript_c,v 1.1.1.1 2004/06/26 19:00:48 sturm Exp $
--- transcript.c.orig	Thu Jan  6 08:37:55 2005
+++ transcript.c	Thu Jan 20 13:02:32 2005
@@@@ -99,7 +99,7 @@@@ transcript_parse( struct transcript *tra
d13 1
a13 1
@@@@ -169,7 +169,7 @@@@ transcript_parse( struct transcript *tra
d22 1
a22 1
@@@@ -191,7 +191,7 @@@@ transcript_parse( struct transcript *tra
d31 1
a31 1
@@@@ -598,17 +598,17 @@@@ transcript( char *path )
d52 1
a52 1
@@@@ -619,7 +619,7 @@@@ transcript( char *path )
d61 1
a61 1
@@@@ -668,9 +668,9 @@@@ t_new( int type, char *fullname, char *s
d74 1
a74 1
@@@@ -735,7 +735,7 @@@@ transcript_init( char *kfile, int locati
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- transcript.c.orig	2004-03-25 12:45:41.000000000 -0500
+++ transcript.c	2004-06-08 16:29:21.000000000 -0400
@@@@ -92,7 +92,7 @@@@ transcript_parse( struct transcript *tra
d13 1
a13 1
@@@@ -162,7 +162,7 @@@@ transcript_parse( struct transcript *tra
d22 1
a22 1
@@@@ -184,7 +184,7 @@@@ transcript_parse( struct transcript *tra
d31 1
a31 1
@@@@ -581,17 +581,17 @@@@ transcript( char *path )
d52 1
a52 1
@@@@ -602,7 +602,7 @@@@ transcript( char *path )
d61 1
a61 1
@@@@ -651,8 +651,8 @@@@ t_new( int type, char *fullname, char *s
d67 1
d70 1
d74 1
a74 10
@@@@ -735,7 +735,7 @@@@ transcript_init( char *kfile, int kfilem
 		    linenum, kdir, av[ 1 ] );
 	    exit( 2 );
 	}
-	sprintf( fullpath, "%s%s", kdir, av[ 1 ] );
+	(void)snprintf( fullpath, sizeof( fullpath ), "%s%s", kdir, av[ 1 ] );
 
 	switch( *av[ 0 ] ) {
 	case 'p':				/* positive */
@@@@ -763,7 +763,7 @@@@ transcript_init( char *kfile, int kfilem
d80 1
a80 1
 	t_new( T_SPECIAL, fullpath, special );
@


1.1.1.1
log
@Initial import of radmind 1.3.0

A suite of Unix command-line tools and a server designed to remotely 
administer the file systems of multiple Unix machines.

At its core, radmind operates as a tripwire. It is able to detect 
changes to any managed filesystem object, e.g. files, directories, 
links, etc. However, radmind goes further than just integrity 
checking: once a change is detected, radmind can optionally reverse 
the change.

WWW: http://rsug.itd.umich.edu/software/radmind/

from William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@@
