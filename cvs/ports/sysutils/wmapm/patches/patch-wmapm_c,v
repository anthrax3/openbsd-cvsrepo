head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.50
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.48
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.44
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.46
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.42
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.40
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.38
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.36
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.34
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.32
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.30
	OPENBSD_5_0:1.2.0.28
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.26
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.24
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.22
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.20
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.18
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.16
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.14
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.12
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.1.1.0.16
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.14
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.12
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.10
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.8
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	naddy_20010111:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2005.03.07.05.37.20;	author mcbride;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.11.00.13.12;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.01.11.00.13.12;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Make wmapm work on the zaurus.

ok pvalchev@@
@
text
@$OpenBSD: patch-wmapm_c,v 1.1.1.1 2001/01/11 00:13:12 naddy Exp $
--- wmapm/wmapm.c.orig	Tue Jan 11 17:37:25 2000
+++ wmapm/wmapm.c	Wed Jan 10 17:35:20 2001
@@@@ -151,12 +151,17 @@@@
 #endif
 
 
-#ifdef FreeBSD
+#if defined(FreeBSD) || defined(__OpenBSD__)
 #include <err.h>
 #include <sys/file.h>
 #include <sys/ioctl.h>
+#endif 
+#if defined(FreeBSD)
 #include <machine/apm_bios.h>
+#elif defined(__OpenBSD__)
+#include <machine/apmvar.h>
 #endif 
+#include <errno.h>
 #include <stdio.h>
 #include <unistd.h>
 #include <stdlib.h>
@@@@ -173,10 +178,10 @@@@
 
 #ifdef Linux
 int apm_read(struct my_apm_info *i);
-#else
-# ifdef FreeBSD
+#elif defined(FreeBSD)
 int apm_read(apm_info_t temp_info);
-# endif
+#elif defined(__OpenBSD__)
+int apm_read(struct apm_power_info *temp_info);
 #endif
 int apm_exists();
 void ParseCMDLine(int argc, char *argv[]);
@@@@ -217,6 +222,8 @@@@ int main(int argc, char *argv[]) {
 			digit;
 #ifdef FreeBSD
     struct apm_info 	temp_info;
+#elif defined(__OpenBSD__)
+    struct apm_power_info 	temp_info;
 #endif
     XEvent		event;
     int			m, mMax, n, nMax, k, Toggle;
@@@@ -305,12 +312,10 @@@@ int main(int argc, char *argv[]) {
 
 #if defined(Linux) || defined(SunOS)
 	    if (apm_read(&my_cur_info)) {
-#else
-# ifdef FreeBSD
+#elif defined(FreeBSD) || defined(__OpenBSD__)
             if (apm_read(&temp_info)) {
-# endif
 #endif
-		fprintf(stderr, "Cannot read APM information: %i\n");
+		fprintf(stderr, "Cannot read APM information: %i\n", errno);
 		exit(1);
 	    }
 
@@@@ -320,6 +325,11 @@@@ int main(int argc, char *argv[]) {
 	    my_cur_info.battery_status     = (int)temp_info.ai_batt_stat;
 	    my_cur_info.battery_percentage = (int)temp_info.ai_batt_life;
 	    my_cur_info.battery_time       = (int)temp_info.ai_batt_time;
+#elif defined(__OpenBSD__)
+	    my_cur_info.ac_line_status     = (int)temp_info.ac_state;
+	    my_cur_info.battery_status     = (int)temp_info.battery_state;
+	    my_cur_info.battery_percentage = (int)temp_info.battery_life;
+	    my_cur_info.battery_time       = (int)temp_info.minutes_left;
 #endif
 	
 
@@@@ -399,10 +409,10 @@@@ int main(int argc, char *argv[]) {
 	     */
 #ifdef Linux
 	    if (my_cur_info.battery_time >= ((my_cur_info.using_minutes) ? 1440 : 86400) ) {
-#else
-# ifdef FreeBSD
+#elif defined(FreeBSD)
 	    if (my_cur_info.battery_time >= 86400) {
-# endif
+#elif defined(__OpenBSD__)
+	    if (my_cur_info.battery_time >= 1440) {
 #endif
 
 		/*
@@@@ -417,9 +427,10 @@@@ int main(int argc, char *argv[]) {
 
 #ifdef Linux
 		time_left = (my_cur_info.using_minutes) ? my_cur_info.battery_time : my_cur_info.battery_time / 60;
-#endif
-#ifdef FreeBSD
-		time_left = (my_cur_info.using_minutes) ? my_cur_info.battery_time / 60 : my_cur_info.battery_time / 3600;
+#elif defined(FreeBSD)
+		time_left = my_cur_info.battery_time / 3600;
+#elif defined(__OpenBSD__)
+		time_left = my_cur_info.battery_time;
 #endif
 
 	        hour_left = time_left / 60;
@@@@ -689,7 +700,7 @@@@ void pressEvent(XButtonEvent *xev){
 	copyXPMArea(21, 106, 13, 11, 46, 48);
 	RedrawWindow();
 #ifndef SunOS
-  	system("apm -s");
+  	system("apm -z");
 #endif
 	usleep(2000000L);
 
@@@@ -837,13 +848,12 @@@@ int apm_read(struct my_apm_info *i){
     return retcode;
 
 }
-#else
-# ifdef FreeBSD
+#elif defined(FreeBSD)
 int apm_read(apm_info_t temp_info) {
 
     int fd;
    
-    if ( (fd = open(APMDEV, O_RDWR)) < 0){
+    if ( (fd = open(APMDEV, O_RDONLY)) < 0){
 
 	return(1);
 
@@@@ -860,10 +870,28 @@@@ int apm_read(apm_info_t temp_info) {
     }
 
 }
-# endif
-#endif 
+#elif defined(__OpenBSD__)
+int apm_read(struct apm_power_info *temp_info) {
+
+    int fd;
+   
+    if ( (fd = open(APMDEV, O_RDONLY)) < 0){
+	return(1);
 
-#ifdef SunOS
+    } else if ( ioctl(fd, APM_IOC_GETPOWER, temp_info) == -1 ) {
+
+        close(fd);
+        return(1);
+
+    } else {
+
+	close(fd);
+	return(0);
+
+    }
+
+}
+#elif defined(SunOS)
 int apm_read(struct my_apm_info *i) {
 
 	int fd;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d17 1
a17 1
+#include <i386/apmvar.h>
@


1.1.1.1
log
@Import wmapm 3.1.
Submitted by Peter Stromberg <home@@wilfried.net>.

WMAPM is an APM/battery monitor.  It is used to visually display and
interpret details of APM/battery status from the system's BIOS.
@
text
@@
