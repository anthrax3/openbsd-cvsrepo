head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.22
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.18
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.20
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.16
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.07.06.12.50.15;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.26.16.13.40;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- move away from old kinfo_proc2
- add mising comment
@
text
@$OpenBSD: patch-psinfo_c,v 1.1 2010/10/26 16:13:40 sthen Exp $

Adapt to new OpenBSD kinfo_proc API.

--- psinfo.c.orig	Sun Mar 15 03:15:49 2009
+++ psinfo.c	Wed Jul  6 14:41:49 2011
@@@@ -90,7 +90,11 @@@@ char *getProcessNameByProcessID(int pid)
     {
         int found;
         kvm_t *kd;
+#if defined(__OpenBSD__)
         struct kinfo_proc *givenproc;
+#else
+        struct kinfo_procs *givenproc;
+#endif
     
         
         /* get kvm_t descriptor on /dev/mem */
@@@@ -103,7 +107,11 @@@@ char *getProcessNameByProcessID(int pid)
          * get kinfo_proc structure from kernel for our pid.
          * Since pids are had better be unique, we should only get one.
          */
+#if defined(__OpenBSD__)
+        givenproc = kvm_getprocs(kd, KERN_PROC_PID, pid, sizeof(struct kinfo_proc), &found);
+#else
         givenproc = kvm_getprocs(kd, KERN_PROC_PID, pid, &found);
+#endif
     
         switch (found) {
             case 0:
@@@@ -117,6 +125,8 @@@@ char *getProcessNameByProcessID(int pid)
                 name = xstrdup(givenproc->ki_comm);
                 #elif defined(__DragonFly_version)
                 name = xstrdup(givenproc->kp_comm);
+                #elif defined(__OpenBSD__)
+                name = xstrdup(givenproc->p_comm);
                 # else
                 name = xstrdup(givenproc->kp_proc.p_comm);
                 #endif	/* __FreeBSD__ */
@@@@ -249,10 +259,8 @@@@ float getProcessCPUPercentByProcessID(int pid)
     }
     #elif defined(USE_KVM)
     {
-        #if defined(__FreeBSD__) || defined(__DragonFly_version)
         struct kinfo_proc *givenproc;
-        #else
-        struct kinfo_proc2 *givenproc;
+        #if !defined(__FreeBSD__) && !defined(__DragonFly_version)
         struct nlist readnl[] = {{"_fscale"}, {NULL}};
         #endif	/* __FreeBSD__ or __DragonFly_version */
         kvm_t *kd;
@@@@ -294,7 +302,7 @@@@ float getProcessCPUPercentByProcessID(int pid)
 		#if defined(__FreeBSD__) || defined(__DragonFly_version)
 		givenproc = kvm_getprocs(kd, KERN_PROC_PID, pid, &found);
 		#else
-        givenproc = kvm_getproc2(kd, KERN_PROC_PID, pid, sizeof(struct kinfo_proc2), &found);
+        givenproc = kvm_getprocs(kd, KERN_PROC_PID, pid, sizeof(struct kinfo_proc), &found);
         #endif	/* __FreeBSD__ or __DragonFly_version */
         
         switch (found) {
@


1.1
log
@kinfo_procs->kinfo_proc2
@
text
@d1 4
a4 1
$OpenBSD$
d6 1
a6 1
+++ psinfo.c	Tue Oct 26 18:09:12 2010
a10 1
-        struct kinfo_proc *givenproc;
d12 1
a12 1
+        struct kinfo_proc2 *givenproc;
d24 1
a24 1
+        givenproc = kvm_getproc2(kd, KERN_PROC_PID, pid, sizeof(struct kinfo_proc2), &found);
d40 21
@

