head	1.6;
access;
symbols
	OPENBSD_4_2:1.5.0.8
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.6
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2007.10.12.20.12.19;	author sturm;	state dead;
branches;
next	1.5;

1.5
date	2005.10.27.21.47.28;	author sturm;	state Exp;
branches;
next	1.4;

1.4
date	2005.07.21.15.16.47;	author aanriot;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.01.21.22.15;	author sturm;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.08.14.02.11;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.17.11.21.43;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.6
log
@update to cfengine 2.2.1
simplify port drastically by removing str* patches, these might be
revived one day as an external patch

no objections from maintainer
@
text
@$OpenBSD: patch-src_item_c,v 1.5 2005/10/27 21:47:28 sturm Exp $
--- src/item.c.orig	Thu Aug 11 04:22:28 2005
+++ src/item.c	Fri Oct 21 16:35:56 2005
@@@@ -212,6 +212,7 @@@@ void PrependItem (struct Item **liststar
 
 { struct Item *ip;
   char *sp,*spe = NULL;
+  size_t splen, spelen = 0;
 
 if (!PARSING && (ACTION == editfiles))
    {
@@@@ -229,19 +230,24 @@@@ if ((ip = (struct Item *)malloc(sizeof(s
    FatalError("");
    }
 
-if ((sp = malloc(strlen(itemstring)+2)) == NULL)
+splen = strlen(itemstring) + 2;
+if ((sp = malloc(splen)) == NULL)
    {
    CfLog(cferror,"","malloc");
    FatalError("");
    }
 
-if ((classes != NULL) && (spe = malloc(strlen(classes)+2)) == NULL)
+if (classes != NULL)
    {
-   CfLog(cferror,"","malloc");
-   FatalError("");
+   spelen = strlen(classes) + 2;
+   if ((spe = malloc(spelen)) == NULL)
+      {
+      CfLog(cferror,"","malloc");
+      FatalError("");
+      }
    }
 
-strcpy(sp,itemstring);
+(void)strlcpy(sp,itemstring,splen);
 ip->name = sp;
 ip->next = *liststart;
 ip->counter = 0;
@@@@ -249,7 +255,7 @@@@ ip->counter = 0;
 
 if (classes != NULL)
    {
-   strcpy(spe,classes);
+   (void)strlcpy(spe,classes,spelen);
    ip->classes = spe;
    }
 else
@@@@ -302,6 +308,7 @@@@ void AppendItem (struct Item **liststart
 
 { struct Item *ip, *lp;
   char *sp,*spe = NULL;
+  size_t splen, spelen = 0;
 
 if (!PARSING && (ACTION == editfiles))
    {
@@@@ -319,7 +326,8 @@@@ if ((ip = (struct Item *)malloc(sizeof(s
    FatalError("");
    }
 
-if ((sp = malloc(strlen(itemstring)+CF_EXTRASPC)) == NULL)
+splen = strlen(itemstring) + CF_EXTRASPC;
+if ((sp = malloc(splen)) == NULL)
    {
    CfLog(cferror,"","malloc");
    FatalError("");
@@@@ -338,20 +346,24 @@@@ else
    lp->next = ip;
    }
 
-if ((classes != NULL) && (spe = malloc(strlen(classes)+2)) == NULL)
+if (classes != NULL)
    {
-   CfLog(cferror,"","malloc");
-   FatalError("");
+   spelen = strlen(classes) + 2;
+   if ((spe = malloc(spelen)) == NULL)
+      {
+      CfLog(cferror,"","malloc");
+      FatalError("");
+      }
    }
 
-strcpy(sp,itemstring);
+(void)strlcpy(sp,itemstring,splen);
 ip->name = sp;
 ip->next = NULL;
 ip->counter = 0;
  
 if (classes != NULL)
    {
-   strcpy(spe,classes);
+   (void)strlcpy(spe,classes,spelen);
    ip->classes = spe;
    }
 else
@@@@ -369,6 +381,7 @@@@ void InstallItem (struct Item **liststar
 
 { struct Item *ip, *lp;
   char *sp,*spe = NULL;
+  size_t splen, spelen = 0;
 
 if (!PARSING && (ACTION == editfiles))
    {
@@@@ -387,7 +400,8 @@@@ if ((ip = (struct Item *)malloc(sizeof(s
    FatalError("");
    }
 
-if ((sp = malloc(strlen(itemstring)+CF_EXTRASPC)) == NULL)
+splen = strlen(itemstring) + CF_EXTRASPC;
+if ((sp = malloc(splen)) == NULL)
    {
    CfLog(cferror,"","malloc");
    FatalError("");
@@@@ -406,13 +420,17 @@@@ else
    lp->next = ip;
    }
 
-if ((classes!= NULL) && (spe = malloc(strlen(classes)+2)) == NULL)
+if (classes!= NULL)
    {
-   CfLog(cferror,"","malloc");
-   FatalError("");
+   spelen = strlen(classes) + 2;
+   if ((spe = malloc(spelen)) == NULL)
+      {
+      CfLog(cferror,"","malloc");
+      FatalError("");
+      }
    }
 
-strcpy(sp,itemstring);
+(void)strlcpy(sp,itemstring,splen);
 
 if (PIFELAPSED != -1)
    {
@@@@ -437,7 +455,7 @@@@ ip->next = NULL;
 
 if (classes != NULL)
    {
-   strcpy(spe,classes);
+   (void)strlcpy(spe,classes,spelen);
    ip->classes = spe;
    }
 else
@@@@ -1072,7 +1090,7 @@@@ char *s1, *s2;
      return 1;
      }
   sscanf(sp,"%ld",&cmp);
-  Debug("SRDEBUG extracted int %d\n",cmp,sp);
+  Debug("SRDEBUG extracted int %d from %s\n",cmp,sp);
 
   /* HvB basename is */
   strncpy(host_basename, s2, strlen(s2) - strlen(sp));
@@@@ -1121,7 +1139,7 @@@@ struct Item *SplitStringAsItemList(char 
   
 Debug("SplitStringAsItemList(%s,%c)\n",string,sep);
 
-sprintf(format,"%%255[^%c]",sep);   /* set format string to search */
+(void)snprintf(format,sizeof(format),"%%255[^%c]",sep);   /* set format string to search */
 
 for (sp = string; *sp != '\0'; sp++)
    {
@


1.5
log
@update to 2.1.16, removing sbin/vicf which seems to have a security
problem but is not used anywhere and will probably be removed from
cfengine

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 1
a1 1
$OpenBSD: patch-src_item_c,v 1.4 2005/07/21 15:16:47 aanriot Exp $
@


1.4
log
@update to 2.1.15, from William Yodlowsky (maintainer).

inputs and ok naddy@@
@
text
@d1 3
a3 3
$OpenBSD: patch-src_item_c,v 1.3 2004/10/01 21:22:15 sturm Exp $
--- src/item.c.orig	Thu Feb 17 02:37:07 2005
+++ src/item.c	Fri Jul 15 12:24:01 2005
d148 1
a148 1
@@@@ -1061,7 +1079,7 @@@@ char *s1, *s2;
d157 1
a157 1
@@@@ -1110,7 +1128,7 @@@@ struct Item *SplitStringAsItemList(char 
@


1.3
log
@unbreak and update to 2.1.10

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 3
a3 3
$OpenBSD$
--- src/item.c.orig	Fri Aug 13 10:59:52 2004
+++ src/item.c	Fri Oct  1 23:14:48 2004
d148 1
a148 1
@@@@ -1059,7 +1077,7 @@@@ char *s1, *s2;
d154 4
a157 4
   
   if ( cmp < 0 )
      { 
@@@@ -1114,7 +1132,7 @@@@ struct Item *SplitStringAsItemList(char 
@


1.2
log
@update to cfengine 2.1.7p1

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 3
a3 3
$OpenBSD: patch-src_item_c,v 1.1 2004/06/17 11:21:43 sturm Exp $
--- src/item.c.orig	Tue May 18 02:09:20 2004
+++ src/item.c	Mon Aug  2 13:30:35 2004
d51 1
a51 1
@@@@ -303,6 +309,7 @@@@ void AppendItem (struct Item **liststart
d59 1
a59 1
@@@@ -320,7 +327,8 @@@@ if ((ip = (struct Item *)malloc(sizeof(s
d69 1
a69 1
@@@@ -339,20 +347,24 @@@@ else
d99 1
a99 1
@@@@ -370,6 +382,7 @@@@ void InstallItem (struct Item **liststar
d107 1
a107 1
@@@@ -388,7 +401,8 @@@@ if ((ip = (struct Item *)malloc(sizeof(s
d117 1
a117 1
@@@@ -407,13 +421,17 @@@@ else
d139 1
a139 1
@@@@ -438,7 +456,7 @@@@ ip->next = NULL;
d148 1
a148 1
@@@@ -1061,7 +1079,7 @@@@ char *s1, *s2;
d157 1
a157 1
@@@@ -1116,7 +1134,7 @@@@ struct Item *SplitStringAsItemList(char 
@


1.1
log
@revive cfengine port

this is version 2.1.6, from and maintained by
William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 3
a3 3
$OpenBSD$
--- src/item.c.orig	Sat Apr 17 16:11:01 2004
+++ src/item.c	Thu Jun 17 12:54:40 2004
d69 1
a69 1
@@@@ -339,13 +347,17 @@@@ else
a90 1
@@@@ -352,7 +364,7 @@@@ ip->counter = 0;
@

