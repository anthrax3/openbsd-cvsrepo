head	1.6;
access;
symbols
	OPENBSD_4_2:1.5.0.8
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.6
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2007.10.12.20.12.19;	author sturm;	state dead;
branches;
next	1.5;

1.5
date	2005.10.27.21.47.28;	author sturm;	state Exp;
branches;
next	1.4;

1.4
date	2005.07.21.15.16.46;	author aanriot;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.01.21.22.15;	author sturm;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.08.14.02.11;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.17.11.21.42;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.6
log
@update to cfengine 2.2.1
simplify port drastically by removing str* patches, these might be
revived one day as an external patch

no objections from maintainer
@
text
@$OpenBSD: patch-src_cfenvd_c,v 1.5 2005/10/27 21:47:28 sturm Exp $
--- src/cfenvd.c.orig	Fri Jul 15 11:16:04 2005
+++ src/cfenvd.c	Fri Oct 21 16:35:54 2005
@@@@ -187,10 +187,10 @@@@ void CheckOptsAndInit(int argc,char **ar
  int c, i,j,k;
 
 umask(077);
-sprintf(VPREFIX,"cfenvd"); 
+(void)snprintf(VPREFIX,40,"cfenvd"); 
 openlog(VPREFIX,LOG_PID|LOG_NOWAIT|LOG_ODELAY,LOG_DAEMON);
 
-strcpy(CFLOCK,"cfenvd");
+(void)strlcpy(CFLOCK,"cfenvd",sizeof(CFLOCK));
  
 IGNORELOCK = false; 
 OUTPUT[0] = '\0';
@@@@ -247,30 +247,30 @@@@ SetSignals();
 
 /* XXX Initialize workdir for non privileged users */
 
-strcpy(CFWORKDIR,WORKDIR);
+(void)strlcpy(CFWORKDIR,WORKDIR,sizeof(CFWORKDIR));
 
 if (getuid() > 0)
    {
    char *homedir;
    if ((homedir = getenv("HOME")) != NULL)
       {
-      strcpy(CFWORKDIR,homedir);
-      strcat(CFWORKDIR,"/.cfagent");
+      (void)strlcpy(CFWORKDIR,homedir,sizeof(CFWORKDIR));
+      (void)strlcat(CFWORKDIR,"/.cfagent",sizeof(CFWORKDIR));
       }
    }
  
-sprintf(VBUFF,"%s/test",CFWORKDIR);
+(void)snprintf(VBUFF,sizeof(VBUFF),"%s/test",CFWORKDIR);
 MakeDirectoriesFor(VBUFF,'y');
-sprintf(VBUFF,"%s/state/test",CFWORKDIR);
+(void)snprintf(VBUFF,sizeof(VBUFF),"%s/state/test",CFWORKDIR);
 MakeDirectoriesFor(VBUFF,'y');
 strncpy(VLOCKDIR,CFWORKDIR,CF_BUFSIZE-1);
 strncpy(VLOGDIR,CFWORKDIR,CF_BUFSIZE-1);
 
 for (i = 0; i < ATTR; i++)
    {
-   sprintf(VBUFF,"%s/state/cf_incoming.%s",CFWORKDIR,ECGSOCKS[i][1]);
+   (void)snprintf(VBUFF,sizeof(VBUFF),"%s/state/cf_incoming.%s",CFWORKDIR,ECGSOCKS[i][1]);
    CreateEmptyFile(VBUFF);
-   sprintf(VBUFF,"%s/state/cf_outgoing.%s",CFWORKDIR,ECGSOCKS[i][1]);
+   (void)snprintf(VBUFF,sizeof(VBUFF),"%s/state/cf_outgoing.%s",CFWORKDIR,ECGSOCKS[i][1]);
    CreateEmptyFile(VBUFF);
    }
 
@@@@ -280,7 +280,7 @@@@ for (i = 0; i < CF_NETATTR; i++)
    NETOUT_DIST[i] = NULL;
    }
  
-sprintf(VBUFF,"%s/state/cf_users",CFWORKDIR);
+(void)snprintf(VBUFF,sizeof(VBUFF),"%s/state/cf_users",CFWORKDIR);
 CreateEmptyFile(VBUFF);
  
 snprintf(AVDB,CF_MAXVARSIZE,"%s/state/%s",CFWORKDIR,CF_AVDB_FILE);
@@@@ -288,6 +288,7 @@@@ snprintf(STATELOG,CF_BUFSIZE,"%s/state/%
 snprintf(ENV_NEW,CF_BUFSIZE,"%s/state/%s",CFWORKDIR,CF_ENVNEW_FILE);
 snprintf(ENV,CF_BUFSIZE,"%s/state/%s",CFWORKDIR,CF_ENV_FILE);
 
+
 if (!BATCH_MODE)
    {
    GetDatabaseAge();
@@@@ -476,7 +477,7 @@@@ void StartServer(int argc,char **argv)
 
 if ((!NO_FORK) && (fork() != 0))
    {
-   sprintf(OUTPUT,"cfenvd: starting\n");
+   (void)snprintf(OUTPUT,sizeof(OUTPUT),"cfenvd: starting\n");
    CfLog(cfinform,OUTPUT,"");
    exit(0);
    }
@@@@ -650,7 +651,7 @@@@ if ((now = time((time_t *)NULL)) == -1)
    exit(1);
    }
 
-sprintf(str,"%s",ctime(&now));
+(void)snprintf(str,sizeof(str),"%s",ctime(&now));
 
 return ConvTimeKey(str); 
 }
@@@@ -816,14 +817,14 @@@@ SetVariable("loadavg",LOADAVG,av.expect_
 for (i = 0; i < ATTR; i++)
    {
    char name[256];
-   strcpy(name,ECGSOCKS[i][1]);
-   strcat(name,"_in");
+   (void)strlcpy(name,ECGSOCKS[i][1],sizeof(name));
+   (void)strlcat(name,"_in",sizeof(name));
    
    sig = SetClasses(name,INCOMING[i],av.expect_incoming[i],av.var_incoming[i],LOCALAV.expect_incoming[i],LOCALAV.var_incoming[i],&classlist,timekey);
    SetVariable(name,INCOMING[i],av.expect_incoming[i],sig,&classlist);
 
-   strcpy(name,ECGSOCKS[i][1]);
-   strcat(name,"_out");
+   (void)strlcpy(name,ECGSOCKS[i][1],sizeof(name));
+   (void)strlcat(name,"_out",sizeof(name));
 
    sig = SetClasses(name,OUTGOING[i],av.expect_outgoing[i],av.var_outgoing[i],LOCALAV.expect_outgoing[i],LOCALAV.var_outgoing[i],&classlist,timekey);
    SetVariable(name,OUTGOING[i],av.expect_outgoing[i],sig,&classlist);
@@@@ -843,13 +844,13 @@@@ for (i = 0; i < PH_LIMIT; i++)
 for (i = 0; i < CF_NETATTR; i++)
    {
    char name[256];
-   strcpy(name,TCPNAMES[i]);
-   strcat(name,"_in");
+   (void)strlcpy(name,TCPNAMES[i],sizeof(name));
+   (void)strlcat(name,"_in",sizeof(name));
    sig = SetClasses(name,NETIN[i],av.expect_netin[i],av.var_netin[i],LOCALAV.expect_netin[i],LOCALAV.var_netin[i],&classlist,timekey);
    SetVariable(name,NETIN[i],av.expect_netin[i],sig,&classlist);
 
-   strcpy(name,TCPNAMES[i]);
-   strcat(name,"_out");
+   (void)strlcpy(name,TCPNAMES[i],sizeof(name));
+   (void)strlcat(name,"_out",sizeof(name));
    sig = SetClasses(name,NETOUT[i],av.expect_netout[i],av.var_netout[i],LOCALAV.expect_netout[i],LOCALAV.var_netout[i],&classlist,timekey);
    SetVariable(name,NETOUT[i],av.expect_netout[i],sig,&classlist);
    }
@@@@ -1166,7 +1167,7 @@@@ if (ALL_OUTGOING != NULL)
  
 sscanf(VNETSTAT[VSYSTEMHARDCLASS],"%s",comm);
 
-strcat(comm," -n"); 
+(void)strlcat(comm," -n",sizeof(comm)); 
  
 if ((pp = cfpopen(comm,"r")) == NULL)
    {
@@@@ -1495,7 +1496,7 @@@@ struct Averages *GetCurrentAverages(char
  
 if ((errno = db_create(&dbp,NULL,0)) != 0)
    {
-   sprintf(OUTPUT,"Couldn't open average database %s\n",AVDB);
+   (void)snprintf(OUTPUT,sizeof(OUTPUT),"Couldn't open average database %s\n",AVDB);
    CfLog(cferror,OUTPUT,"db_open");
    return NULL;
    }
@@@@ -1506,7 +1507,7 @@@@ if ((errno = dbp->open(dbp,AVDB,NULL,DB_
 if ((errno = dbp->open(dbp,NULL,AVDB,NULL,DB_BTREE,DB_CREATE,0644)) != 0)    
 #endif
    {
-   sprintf(OUTPUT,"Couldn't open average database %s\n",AVDB);
+   (void)snprintf(OUTPUT,sizeof(OUTPUT),"Couldn't open average database %s\n",AVDB);
    CfLog(cferror,OUTPUT,"db_open");
    return NULL;
    }
@@@@ -1556,7 +1557,7 @@@@ void UpdateAverages(char *timekey,struct
  
 if ((errno = db_create(&dbp,NULL,0)) != 0)
    {
-   sprintf(OUTPUT,"Couldn't open average database %s\n",AVDB);
+   (void)snprintf(OUTPUT,sizeof(OUTPUT),"Couldn't open average database %s\n",AVDB);
    CfLog(cferror,OUTPUT,"db_open");
    return;
    }
@@@@ -1567,7 +1568,7 @@@@ if ((errno = dbp->open(dbp,AVDB,NULL,DB_
 if ((errno = dbp->open(dbp,NULL,AVDB,NULL,DB_BTREE,DB_CREATE,0644)) != 0)    
 #endif
    {
-   sprintf(OUTPUT,"Couldn't open average database %s\n",AVDB);
+   (void)snprintf(OUTPUT,sizeof(OUTPUT),"Couldn't open average database %s\n",AVDB);
    CfLog(cferror,OUTPUT,"db_open");
    return;
    }
@@@@ -1794,27 +1795,27 @@@@ if (fabs(delta) < cf_noise_threshold) /*
    Debug(" Sensitivity too high ..\n");
 
    buffer[0] = '\0';
-   strcpy(buffer,name);
+   (void)strlcpy(buffer,name,sizeof(buffer));
 
    if ((delta > 0) && (ldelta > 0))
       {
-      strcat(buffer,"_high");
+      (void)strlcat(buffer,"_high",sizeof(buffer));
       }
    else if ((delta < 0) && (ldelta < 0))
       {
-      strcat(buffer,"_low");
+      (void)strlcat(buffer,"_low",sizeof(buffer));
       }
    else
       {
-      strcat(buffer,"_normal");
+      (void)strlcat(buffer,"_normal",sizeof(buffer));
       }
         
     dev = sqrt(delta*delta/(1.0+sigma*sigma)+ldelta*ldelta/(1.0+lsigma*lsigma));
         
     if (dev > 2.0*sqrt(2.0))
        {
-       strcpy(buffer2,buffer);
-       strcat(buffer2,"_microanomaly");
+       (void)strlcpy(buffer2,buffer,sizeof(buffer2));
+       (void)strlcat(buffer2,"_microanomaly",sizeof(buffer2));
        AppendItem(classlist,buffer2,"2");
        AddPersistentClass(buffer2,40,cfpreserve); 
        }
@@@@ -1824,33 +1825,33 @@@@ if (fabs(delta) < cf_noise_threshold) /*
  else
     {
     buffer[0] = '\0';
-    strcpy(buffer,name);  
+    (void)strlcpy(buffer,name,sizeof(buffer));  
     
     if ((delta > 0) && (ldelta > 0))
        {
-       strcat(buffer,"_high");
+       (void)strlcat(buffer,"_high",sizeof(buffer));
        }
     else if ((delta < 0) && (ldelta < 0))
        {
-       strcat(buffer,"_low");
+       (void)strlcat(buffer,"_low",sizeof(buffer));
        }
     else
        {
-       strcat(buffer,"_normal");
+       (void)strlcat(buffer,"_normal",sizeof(buffer));
        }
     
     dev = sqrt(delta*delta/(1.0+sigma*sigma)+ldelta*ldelta/(1.0+lsigma*lsigma));
     
     if (dev <= sqrt(2.0))
        {
-       strcpy(buffer2,buffer);
-       strcat(buffer2,"_normal");
+       (void)strlcpy(buffer2,buffer,sizeof(buffer));
+       (void)strlcat(buffer2,"_normal",sizeof(buffer2));
        AppendItem(classlist,buffer2,"0");
        }
     else
        {
-       strcpy(buffer2,buffer);
-       strcat(buffer2,"_dev1");
+       (void)strlcpy(buffer2,buffer,sizeof(buffer2));
+       (void)strlcat(buffer2,"_dev1",sizeof(buffer2));
        AppendItem(classlist,buffer2,"0");
        }
     
@@@@ -1860,16 +1861,16 @@@@ if (fabs(delta) < cf_noise_threshold) /*
     
     if (dev > 2.0*sqrt(2.0))
        {
-       strcpy(buffer2,buffer);
-       strcat(buffer2,"_dev2");
+       (void)strlcpy(buffer2,buffer,sizeof(buffer2));
+       (void)strlcat(buffer2,"_dev2",sizeof(buffer2));
        AppendItem(classlist,buffer2,"2");
        AddPersistentClass(buffer2,40,cfpreserve); 
        }
     
     if (dev > 3.0*sqrt(2.0))
        {
-       strcpy(buffer2,buffer);
-       strcat(buffer2,"_anomaly");
+       (void)strlcpy(buffer2,buffer,sizeof(buffer2));
+       (void)strlcat(buffer2,"_anomaly",sizeof(buffer2));
        AppendItem(classlist,buffer2,"3");
        AddPersistentClass(buffer2,40,cfpreserve); 
        }
@@@@ -1884,13 +1885,13 @@@@ void SetVariable(char *name,double value
 
 { char var[CF_BUFSIZE];
 
-sprintf(var,"value_%s=%d",name,(int)value);
+(void)snprintf(var,sizeof(var),"value_%s=%d",name,(int)value);
 AppendItem(classlist,var,"");
 
-sprintf(var,"average_%s=%1.1f",name,average);
+(void)snprintf(var,sizeof(var),"average_%s=%1.1f",name,average);
 AppendItem(classlist,var,"");
 
-sprintf(var,"stddev_%s=%1.1f",name,stddev);
+(void)snprintf(var,sizeof(var),"stddev_%s=%1.1f",name,stddev);
 AppendItem(classlist,var,""); 
 }
 
@


1.5
log
@update to 2.1.16, removing sbin/vicf which seems to have a security
problem but is not used anywhere and will probably be removed from
cfengine

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 1
a1 1
$OpenBSD: patch-src_cfenvd_c,v 1.4 2005/07/21 15:16:46 aanriot Exp $
@


1.4
log
@update to 2.1.15, from William Yodlowsky (maintainer).

inputs and ok naddy@@
@
text
@d1 3
a3 3
$OpenBSD: patch-src_cfenvd_c,v 1.3 2004/10/01 21:22:15 sturm Exp $
--- src/cfenvd.c.orig	Wed May 25 07:38:54 2005
+++ src/cfenvd.c	Fri Jul 15 12:24:00 2005
d17 1
a17 1
@@@@ -243,30 +243,30 @@@@ LOGGING = true;                    /* Do
d55 1
a55 1
@@@@ -276,7 +276,7 @@@@ for (i = 0; i < CF_NETATTR; i++)
d64 1
a64 1
@@@@ -284,6 +284,7 @@@@ snprintf(STATELOG,CF_BUFSIZE,"%s/state/%
d72 1
a72 1
@@@@ -472,7 +473,7 @@@@ void StartServer(int argc,char **argv)
d81 1
a81 1
@@@@ -646,7 +647,7 @@@@ if ((now = time((time_t *)NULL)) == -1)
d90 1
a90 1
@@@@ -812,14 +813,14 @@@@ SetVariable("loadavg",LOADAVG,av.expect_
d109 1
a109 1
@@@@ -839,13 +840,13 @@@@ for (i = 0; i < PH_LIMIT; i++)
d127 1
a127 1
@@@@ -1162,7 +1163,7 @@@@ if (ALL_OUTGOING != NULL)
d136 1
a136 1
@@@@ -1491,7 +1492,7 @@@@ struct Averages *GetCurrentAverages(char
d145 1
a145 1
@@@@ -1502,7 +1503,7 @@@@ if ((errno = dbp->open(dbp,AVDB,NULL,DB_
d154 1
a154 1
@@@@ -1552,7 +1553,7 @@@@ void UpdateAverages(char *timekey,struct
d163 1
a163 1
@@@@ -1563,7 +1564,7 @@@@ if ((errno = dbp->open(dbp,AVDB,NULL,DB_
d172 1
a172 1
@@@@ -1790,27 +1791,27 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d206 1
a206 1
@@@@ -1820,33 +1821,33 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d248 1
a248 1
@@@@ -1856,16 +1857,16 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d269 1
a269 1
@@@@ -1880,13 +1881,13 @@@@ void SetVariable(char *name,double value
@


1.3
log
@unbreak and update to 2.1.10

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 4
a4 4
$OpenBSD$
--- src/cfenvd.c.orig	Wed Aug 11 22:46:48 2004
+++ src/cfenvd.c	Fri Oct  1 23:14:46 2004
@@@@ -188,10 +188,10 @@@@ void CheckOptsAndInit(int argc,char **ar
d17 1
a17 1
@@@@ -242,18 +242,18 @@@@ while ((c=getopt_long(argc,argv,"d:vhHFV
d19 16
a34 1
 LOGGING = true;                    /* Do output to syslog */
d36 2
a37 2
-sprintf(VBUFF,"%s/test",WORKDIR);
+(void)snprintf(VBUFF,sizeof(VBUFF),"%s/test",WORKDIR);
d39 2
a40 2
-sprintf(VBUFF,"%s/state/test",WORKDIR);
+(void)snprintf(VBUFF,sizeof(VBUFF),"%s/state/test",WORKDIR);
d42 2
a43 2
 strncpy(VLOCKDIR,WORKDIR,CF_BUFSIZE-1);
 strncpy(VLOGDIR,WORKDIR,CF_BUFSIZE-1);
d47 2
a48 2
-   sprintf(VBUFF,"%s/state/cf_incoming.%s",WORKDIR,ECGSOCKS[i][1]);
+   (void)snprintf(VBUFF,sizeof(VBUFF),"%s/state/cf_incoming.%s",WORKDIR,ECGSOCKS[i][1]);
d50 2
a51 2
-   sprintf(VBUFF,"%s/state/cf_outgoing.%s",WORKDIR,ECGSOCKS[i][1]);
+   (void)snprintf(VBUFF,sizeof(VBUFF),"%s/state/cf_outgoing.%s",WORKDIR,ECGSOCKS[i][1]);
d55 1
a55 1
@@@@ -263,13 +263,13 @@@@ for (i = 0; i < CF_NETATTR; i++)
d59 2
a60 2
-sprintf(VBUFF,"%s/state/cf_users",WORKDIR);
+(void)snprintf(VBUFF,sizeof(VBUFF),"%s/state/cf_users",WORKDIR);
d63 4
a66 8
-snprintf(AVDB,CF_BUFSIZE,"%s/state/%s",WORKDIR,CF_AVDB_FILE);
-snprintf(STATELOG,CF_BUFSIZE,"%s/state/%s",WORKDIR,CF_STATELOG_FILE);
-snprintf(ENV_NEW,CF_BUFSIZE,"%s/state/%s",WORKDIR,CF_ENVNEW_FILE);
-snprintf(ENV,CF_BUFSIZE,"%s/state/%s",WORKDIR,CF_ENV_FILE);
+snprintf(AVDB,sizeof(AVDB),"%s/state/%s",WORKDIR,CF_AVDB_FILE);
+snprintf(STATELOG,sizeof(AVDB),"%s/state/%s",WORKDIR,CF_STATELOG_FILE);
+snprintf(ENV_NEW,sizeof(AVDB),"%s/state/%s",WORKDIR,CF_ENVNEW_FILE);
+snprintf(ENV,sizeof(AVDB),"%s/state/%s",WORKDIR,CF_ENV_FILE);
d68 1
d71 2
a72 1
@@@@ -459,7 +459,7 @@@@ void StartServer(int argc,char **argv)
d81 1
a81 1
@@@@ -625,7 +625,7 @@@@ if ((now = time((time_t *)NULL)) == -1)
d90 1
a90 1
@@@@ -791,14 +791,14 @@@@ SetVariable("loadavg",LOADAVG,av.expect_
d109 1
a109 1
@@@@ -818,13 +818,13 @@@@ for (i = 0; i < PH_LIMIT; i++)
d127 1
a127 1
@@@@ -1141,7 +1141,7 @@@@ if (ALL_OUTGOING != NULL)
d136 1
a136 1
@@@@ -1472,7 +1472,7 @@@@ struct Averages *GetCurrentAverages(char
d145 1
a145 1
@@@@ -1483,7 +1483,7 @@@@ if ((errno = dbp->open(dbp,AVDB,NULL,DB_
d154 1
a154 1
@@@@ -1533,7 +1533,7 @@@@ void UpdateAverages(char *timekey,struct
d163 1
a163 1
@@@@ -1544,7 +1544,7 @@@@ if ((errno = dbp->open(dbp,AVDB,NULL,DB_
d172 1
a172 1
@@@@ -1771,27 +1771,27 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d206 1
a206 1
@@@@ -1801,33 +1801,33 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d248 1
a248 1
@@@@ -1837,16 +1837,16 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d269 1
a269 1
@@@@ -1861,13 +1861,13 @@@@ void SetVariable(char *name,double value
@


1.2
log
@update to cfengine 2.1.7p1

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 3
a3 3
$OpenBSD: patch-src_cfenvd_c,v 1.1 2004/06/17 11:21:42 sturm Exp $
--- src/cfenvd.c.orig	Fri Jun 18 06:43:37 2004
+++ src/cfenvd.c	Mon Aug  2 13:30:33 2004
d114 1
a114 1
@@@@ -1142,7 +1142,7 @@@@ if (ALL_OUTGOING != NULL)
d123 1
a123 1
@@@@ -1473,7 +1473,7 @@@@ struct Averages *GetCurrentAverages(char
d132 1
a132 1
@@@@ -1484,7 +1484,7 @@@@ if ((errno = dbp->open(dbp,AVDB,NULL,DB_
d141 1
a141 1
@@@@ -1534,7 +1534,7 @@@@ void UpdateAverages(char *timekey,struct
d150 1
a150 1
@@@@ -1545,7 +1545,7 @@@@ if ((errno = dbp->open(dbp,AVDB,NULL,DB_
d159 1
a159 1
@@@@ -1772,27 +1772,27 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d193 1
a193 1
@@@@ -1802,33 +1802,33 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d235 1
a235 1
@@@@ -1838,16 +1838,16 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d256 1
a256 1
@@@@ -1862,13 +1862,13 @@@@ void SetVariable(char *name,double value
@


1.1
log
@revive cfengine port

this is version 2.1.6, from and maintained by
William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 3
a3 3
$OpenBSD$
--- src/cfenvd.c.orig	Mon Apr 19 11:41:05 2004
+++ src/cfenvd.c	Thu Jun 17 12:54:38 2004
d17 1
a17 1
@@@@ -242,9 +242,9 @@@@ while ((c=getopt_long(argc,argv,"d:vhHFV
a28 1
@@@@ -251,9 +251,9 @@@@ strncpy(VLOGDIR,WORKDIR,CF_BUFSIZE-1);
d68 1
a68 1
@@@@ -618,7 +618,7 @@@@ if ((now = time((time_t *)NULL)) == -1)
d77 1
a77 1
@@@@ -784,14 +784,14 @@@@ SetVariable("loadavg",LOADAVG,av.expect_
d96 1
a96 1
@@@@ -811,13 +811,13 @@@@ for (i = 0; i < PH_LIMIT; i++)
d114 1
a114 1
@@@@ -1135,7 +1135,7 @@@@ if (ALL_OUTGOING != NULL)
d123 1
a123 1
@@@@ -1466,7 +1466,7 @@@@ struct Averages *GetCurrentAverages(char
d132 1
a132 1
@@@@ -1477,7 +1477,7 @@@@ if ((errno = dbp->open(dbp,AVDB,NULL,DB_
d141 1
a141 1
@@@@ -1527,7 +1527,7 @@@@ void UpdateAverages(char *timekey,struct
d150 1
a150 1
@@@@ -1538,7 +1538,7 @@@@ if ((errno = dbp->open(dbp,AVDB,NULL,DB_
d159 1
a159 1
@@@@ -1765,19 +1765,19 @@@@ if (fabs(delta) < cf_noise_threshold) /*
a182 1
@@@@ -1784,8 +1784,8 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d193 1
a193 1
@@@@ -1795,19 +1795,19 @@@@ if (fabs(delta) < cf_noise_threshold) /*
a216 1
@@@@ -1814,14 +1814,14 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d235 1
a235 1
@@@@ -1831,8 +1831,8 @@@@ if (fabs(delta) < cf_noise_threshold) /*
a245 1
@@@@ -1839,8 +1839,8 @@@@ if (fabs(delta) < cf_noise_threshold) /*
d256 1
a256 1
@@@@ -1855,13 +1855,13 @@@@ void SetVariable(char *name,double value
@

