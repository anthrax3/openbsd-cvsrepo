head	1.2;
access;
symbols
	OPENBSD_4_2:1.1.0.14
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.12
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.10
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.8
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.6
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2007.10.12.20.12.19;	author sturm;	state dead;
branches;
next	1.1;

1.1
date	2004.06.17.11.21.43;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to cfengine 2.2.1
simplify port drastically by removing str* patches, these might be
revived one day as an external patch

no objections from maintainer
@
text
@$OpenBSD: patch-src_comparray_c,v 1.1 2004/06/17 11:21:43 sturm Exp $
--- src/comparray.c.orig	2004-06-10 10:50:03.000000000 -0400
+++ src/comparray.c	2004-06-10 11:30:47.000000000 -0400
@@@@ -39,6 +39,7 @@@@ int FixCompressedArrayValue(int i,char *
 
 { struct CompressedArray *ap;
   char *sp;
+  size_t buflen;
 
 for (ap = *start; ap != NULL; ap = ap->next)
    {
@@@@ -57,13 +58,14 @@@@ if ((ap = (struct CompressedArray *)mall
    FatalError("");
    }
 
-if ((sp = malloc(strlen(value)+2)) == NULL)
+buflen = strlen(value) + 2;
+if ((sp = malloc(buflen)) == NULL)
    {
    CfLog(cferror,"Can't allocate memory in SetCompressedArray()","malloc");
    FatalError("");
    }
 
-strcpy(sp,value);
+(void)strlcpy(sp,value,buflen);
 ap->key = i;
 ap->value = sp;
 ap->next = *start;
@


1.1
log
@revive cfengine port

this is version 2.1.6, from and maintained by
William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 1
a1 1
$OpenBSD$
@

