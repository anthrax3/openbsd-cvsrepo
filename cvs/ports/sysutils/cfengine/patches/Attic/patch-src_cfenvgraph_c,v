head	1.5;
access;
symbols
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2007.10.12.20.12.19;	author sturm;	state dead;
branches;
next	1.4;

1.4
date	2005.07.21.15.16.46;	author aanriot;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.01.21.22.15;	author sturm;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.08.14.02.11;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.17.11.21.42;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to cfengine 2.2.1
simplify port drastically by removing str* patches, these might be
revived one day as an external patch

no objections from maintainer
@
text
@$OpenBSD: patch-src_cfenvgraph_c,v 1.4 2005/07/21 15:16:46 aanriot Exp $
--- src/cfenvgraph.c.orig	Wed May 25 10:17:00 2005
+++ src/cfenvgraph.c	Fri Jul 15 12:24:00 2005
@@@@ -177,7 +177,7 @@@@ for (sp = line; *sp != '\0'; sp++)
       }
    }
 
-strcpy(VFQNAME,line);
+(void)strlcpy(VFQNAME,line,sizeof(VFQNAME));
 
 if (strlen(VFQNAME) == 0)
    {
@@@@ -187,7 +187,7 @@@@ if (strlen(VFQNAME) == 0)
       perror("uname ");
       exit(0);
       }
-   strcpy(VFQNAME,sys.sysname);
+   (void)strlcpy(VFQNAME,sys.sysname,sizeof(VFQNAME));
    } 
 else
    {
@@@@ -285,7 +285,7 @@@@ for (NOW = CF_MONDAY_MORNING; NOW < CF_M
    memset(&value,0,sizeof(value));
    memset(&ENTRY,0,sizeof(ENTRY));
 
-   strcpy(TIMEKEY,GenTimeKey(NOW));
+   (void)strlcpy(TIMEKEY,GenTimeKey(NOW),sizeof(TIMEKEY));
 
    key.data = TIMEKEY;
    key.size = strlen(TIMEKEY)+1;
@@@@ -554,7 +554,7 @@@@ if (TIMESTAMPS)
       printf("Couldn't read system clock\n");
       }
      
-   sprintf(FLNAME,"cfenvgraphs-%s-%s",VFQNAME,ctime(&NOW));
+   (void)snprintf(FLNAME,sizeof(FLNAME),"cfenvgraphs-%s-%s",VFQNAME,ctime(&NOW));
 
    for (sp = FLNAME; *sp != '\0'; sp++)
       {
@@@@ -566,7 +566,7 @@@@ if (TIMESTAMPS)
    }
  else
    {
-   sprintf(FLNAME,"cfenvgraphs-snapshot-%s",VFQNAME);
+   (void)snprintf(FLNAME,sizeof(FLNAME),"cfenvgraphs-snapshot-%s",VFQNAME);
    }
 
 printf("Creating sub-directory %s\n",FLNAME);
@@@@ -588,7 +588,7 @@@@ if (chdir(FLNAME))
 printf("Writing data to sub-directory %s: \n   x,y1,y2,y3...\n ",FLNAME);
 
 
-sprintf(FLNAME,"cfenv-average");
+(void)snprintf(FLNAME,sizeof(FLNAME),"cfenv-average");
 
 if ((FPAV = fopen(FLNAME,"w")) == NULL)
    {
@@@@ -596,7 +596,7 @@@@ if ((FPAV = fopen(FLNAME,"w")) == NULL)
    exit(1);
    }
 
-sprintf(FLNAME,"cfenv-stddev"); 
+(void)snprintf(FLNAME,sizeof(FLNAME),"cfenv-stddev"); 
 
 if ((FPVAR = fopen(FLNAME,"w")) == NULL)
    {
@@@@ -609,31 +609,31 @@@@ if ((FPVAR = fopen(FLNAME,"w")) == NULL)
 
 if (SEPARATE)
    {
-   sprintf(FLNAME,"users.cfenv"); 
+   (void)snprintf(FLNAME,sizeof(FLNAME),"users.cfenv"); 
    if ((FPUSER = fopen(FLNAME,"w")) == NULL)
       {
       perror("fopen");
       exit(1);
       }
-   sprintf(FLNAME,"rootprocs.cfenv"); 
+   (void)snprintf(FLNAME,sizeof(FLNAME),"rootprocs.cfenv"); 
    if ((FPROOT = fopen(FLNAME,"w")) == NULL)
       {
       perror("fopen");
       exit(1);
       }
-   sprintf(FLNAME,"otherprocs.cfenv"); 
+   (void)snprintf(FLNAME,sizeof(FLNAME),"otherprocs.cfenv"); 
    if ((FPOTHER = fopen(FLNAME,"w")) == NULL)
       {
       perror("fopen");
       exit(1);
       }
-   sprintf(FLNAME,"freedisk.cfenv"); 
+   (void)snprintf(FLNAME,sizeof(FLNAME),"freedisk.cfenv"); 
    if ((FPDISK = fopen(FLNAME,"w")) == NULL)
       {
       perror("fopen");
       exit(1);
       }
-   sprintf(FLNAME,"loadavg.cfenv"); 
+   (void)snprintf(FLNAME,sizeof(FLNAME),"loadavg.cfenv"); 
    if ((FPLOAD = fopen(FLNAME,"w")) == NULL)
       {
       perror("fopen");
@@@@ -642,14 +642,14 @@@@ if (SEPARATE)
 
    for (i = 0; i < ATTR; i++)
       {
-      sprintf(FLNAME,"%s-in.cfenv",ECGSOCKS[i][1]); 
+      (void)snprintf(FLNAME,sizeof(FLNAME),"%s-in.cfenv",ECGSOCKS[i][1]); 
       if ((FPIN[i] = fopen(FLNAME,"w")) == NULL)
          {
          perror("fopen");
          exit(1);
          }
 
-      sprintf(FLNAME,"%s-out.cfenv",ECGSOCKS[i][1]); 
+      (void)snprintf(FLNAME,sizeof(FLNAME),"%s-out.cfenv",ECGSOCKS[i][1]); 
       if ((FPOUT[i] = fopen(FLNAME,"w")) == NULL)
          {
          perror("fopen");
@@@@ -659,14 +659,14 @@@@ if (SEPARATE)
 
    for (i = 0; i < CF_NETATTR; i++)
       {
-      sprintf(FLNAME,"%s-in.cfenv",TCPNAMES[i]); 
+      (void)snprintf(FLNAME,sizeof(FLNAME),"%s-in.cfenv",TCPNAMES[i]); 
       if ((FPNETIN[i] = fopen(FLNAME,"w")) == NULL)
          {
          perror("fopen");
          exit(1);
          }
 
-      sprintf(FLNAME,"%s-out.cfenv",TCPNAMES[i]); 
+      (void)snprintf(FLNAME,sizeof(FLNAME),"%s-out.cfenv",TCPNAMES[i]); 
       if ((FPNETOUT[i] = fopen(FLNAME,"w")) == NULL)
          {
          perror("fopen");
@@@@ -681,7 +681,7 @@@@ if (SEPARATE)
   continue;
   }
       
-      sprintf(FLNAME,"%s.cfenv",CanonifyName(PH_BINARIES[i])); 
+      (void)snprintf(FLNAME,sizeof(FLNAME),"%s.cfenv",CanonifyName(PH_BINARIES[i])); 
       if ((FPPH[i] = fopen(FLNAME,"w")) == NULL)
          {
          perror("fopen");
@@@@ -771,7 +771,7 @@@@ while (NOW < CF_MONDAY_MORNING+CF_WEEK)
       memset(&key,0,sizeof(key));       
       memset(&value,0,sizeof(value));
       
-      strcpy(TIMEKEY,GenTimeKey(NOW));
+      (void)strlcpy(TIMEKEY,GenTimeKey(NOW),sizeof(TIMEKEY));
       key.data = TIMEKEY;
       key.size = strlen(TIMEKEY)+1;
       
@@@@ -1023,7 +1023,7 @@@@ for (i = 0; i < 7; i++)
     int position,day;
     int weekly[CF_NETATTR*2+ATTR*2+5+PH_LIMIT][CF_GRAINS];
     
-    snprintf(FLNAME,CF_BUFSIZE,"%s/state/histograms",CFWORKDIR);
+    snprintf(FLNAME,sizeof(FLNAME),"%s/state/histograms",CFWORKDIR);
     
     if ((fp = fopen(FLNAME,"r")) == NULL)
        {
@@@@ -1076,31 +1076,31 @@@@ for (i = 0; i < 7; i++)
           }
        }
     
-    sprintf(FLNAME,"users.distr"); 
+    (void)snprintf(FLNAME,sizeof(FLNAME),"users.distr"); 
     if ((FPUSER = fopen(FLNAME,"w")) == NULL)
        {
        perror("fopen");
        exit(1);
        }
-    sprintf(FLNAME,"rootprocs.distr"); 
+    (void)snprintf(FLNAME,sizeof(FLNAME),"rootprocs.distr"); 
     if ((FPROOT = fopen(FLNAME,"w")) == NULL)
        {
        perror("fopen");
        exit(1);
        }
-    sprintf(FLNAME,"otherprocs.distr"); 
+    (void)snprintf(FLNAME,sizeof(FLNAME),"otherprocs.distr"); 
     if ((FPOTHER = fopen(FLNAME,"w")) == NULL)
        {
        perror("fopen");
        exit(1);
        }
-    sprintf(FLNAME,"freedisk.distr"); 
+    (void)snprintf(FLNAME,sizeof(FLNAME),"freedisk.distr"); 
     if ((FPDISK = fopen(FLNAME,"w")) == NULL)
        {
        perror("fopen");
        exit(1);
        }
-    sprintf(FLNAME,"loadavg.distr"); 
+    (void)snprintf(FLNAME,sizeof(FLNAME),"loadavg.distr"); 
     if ((FPLOAD = fopen(FLNAME,"w")) == NULL)
        {
        perror("fopen");
@@@@ -1109,14 +1109,14 @@@@ for (i = 0; i < 7; i++)
     
     for (i = 0; i < ATTR; i++)
        {
-       sprintf(FLNAME,"%s-in.distr",ECGSOCKS[i][1]); 
+       (void)snprintf(FLNAME,sizeof(FLNAME),"%s-in.distr",ECGSOCKS[i][1]); 
        if ((FPIN[i] = fopen(FLNAME,"w")) == NULL)
           {
           perror("fopen");
           exit(1);
           }
 
-       sprintf(FLNAME,"%s-out.distr",ECGSOCKS[i][1]); 
+       (void)snprintf(FLNAME,sizeof(FLNAME),"%s-out.distr",ECGSOCKS[i][1]); 
        if ((FPOUT[i] = fopen(FLNAME,"w")) == NULL)
           {
           perror("fopen");
@@@@ -1126,13 +1126,13 @@@@ for (i = 0; i < 7; i++)
     
        for (i = 0; i < CF_NETATTR; i++)
           {
-          sprintf(FLNAME,"%s-in.distr",TCPNAMES[i]); 
+          (void)snprintf(FLNAME,sizeof(FLNAME),"%s-in.distr",TCPNAMES[i]); 
           if ((FPNETIN[i] = fopen(FLNAME,"w")) == NULL)
              {
              perror("fopen");
              exit(1);
              }
-          sprintf(FLNAME,"%s-out.distr",TCPNAMES[i]); 
+          (void)snprintf(FLNAME,sizeof(FLNAME),"%s-out.distr",TCPNAMES[i]); 
 
           if ((FPNETOUT[i] = fopen(FLNAME,"w")) == NULL)
              {
@@@@ -1148,7 +1148,7 @@@@ for (i = 0; i < 7; i++)
           continue;
           }
        
-       sprintf(FLNAME,"%s.distr",CanonifyName(PH_BINARIES[i])); 
+       (void)snprintf(FLNAME,sizeof(FLNAME),"%s.distr",CanonifyName(PH_BINARIES[i])); 
        if ((FPPH[i] = fopen(FLNAME,"w")) == NULL)
           {
           perror("fopen");
@@@@ -1380,7 +1380,7 @@@@ for (dirp = readdir(dirh); dirp != NULL;
          memset(&key,0,sizeof(key));       
          memset(&value,0,sizeof(value));
          
-         strcpy(TIMEKEY,GenTimeKey(now));
+         (void)strlcpy(TIMEKEY,GenTimeKey(now),sizeof(TIMEKEY));
          
          key.data = TIMEKEY;
          key.size = strlen(TIMEKEY)+1;
@@@@ -1476,15 +1476,15 @@@@ void CheckOpts(int argc,char **argv)
 
  /* XXX Initialize workdir for non privileged users */
 
- strcpy(CFWORKDIR,WORKDIR);
+ (void)strlcpy(CFWORKDIR,WORKDIR,sizeof(CFWORKDIR));
 
  if (geteuid() > 0)
     {
     char *homedir;
     if ((homedir = getenv("HOME")) != NULL)
        {
-       strcpy(CFWORKDIR,homedir);
-       strcat(CFWORKDIR,"/.cfagent");
+       (void)strlcpy(CFWORKDIR,homedir,sizeof(CFWORKDIR));
+       (void)strlcat(CFWORKDIR,"/.cfagent",sizeof(CFWORKDIR));
        }
     }
  
@@@@ -1497,7 +1497,7 @@@@ while ((c=getopt_long(argc,argv,"Thtf:rs
       case 't': TITLES = true;
                 break;
 
-      case 'f': strcpy(FILENAME,optarg);
+      case 'f': (void)strlcpy(FILENAME,optarg,CF_BUFSIZE);
          break;
 
       case 'T': TIMESTAMPS = true;
@@@@ -1551,7 +1551,7 @@@@ char *CanonifyName(char *str)
   char *sp;
 
 memset(buffer,0,CF_BUFSIZE);
-strcpy(buffer,str);
+(void)strlcpy(buffer,str,sizeof(buffer));
 
 for (sp = buffer; *sp != '\0'; sp++)
     {
@@@@ -1623,7 +1623,7 @@@@ for (NOW = CF_MONDAY_MORNING; NOW < CF_M
    memset(&value,0,sizeof(value));
    memset(&ENTRY,0,sizeof(ENTRY));
 
-   strcpy(TIMEKEY,GenTimeKey(NOW));
+   (void)strlcpy(TIMEKEY,GenTimeKey(NOW),sizeof(TIMEKEY));
 
    key.data = TIMEKEY;
    key.size = strlen(TIMEKEY)+1;
@


1.4
log
@update to 2.1.15, from William Yodlowsky (maintainer).

inputs and ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_cfenvgraph_c,v 1.3 2004/10/01 21:22:15 sturm Exp $
@


1.3
log
@unbreak and update to 2.1.10

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 7
a7 7
$OpenBSD$
--- src/cfenvgraph.c.orig	Wed Aug 11 22:47:25 2004
+++ src/cfenvgraph.c	Fri Oct  1 23:14:46 2004
@@@@ -171,7 +171,7 @@@@ fgets(line,CF_BUFSIZE,pp); 
 fgets(line,CF_BUFSIZE,pp); 
 line[0] = '\0'; 
 fgets(line,CF_BUFSIZE,pp);  
d9 1
a9 1
+(void)strlcpy(VFQNAME,line,CF_MAXVARSIZE);
d13 1
a13 1
@@@@ -181,7 +181,7 @@@@ if (strlen(VFQNAME) == 0)
d18 1
a18 1
+   (void)strlcpy(VFQNAME,sys.sysname,CF_MAXVARSIZE);
d22 1
a22 1
@@@@ -279,7 +279,7 @@@@ for (NOW = CF_MONDAY_MORNING; NOW < CF_M
d31 1
a31 1
@@@@ -548,7 +548,7 @@@@ if (TIMESTAMPS)
d40 1
a40 1
@@@@ -560,7 +560,7 @@@@ if (TIMESTAMPS)
d49 1
a49 1
@@@@ -582,7 +582,7 @@@@ if (chdir(FLNAME))
d58 1
a58 1
@@@@ -590,7 +590,7 @@@@ if ((FPAV = fopen(FLNAME,"w")) == NULL)
d67 1
a67 1
@@@@ -603,31 +603,31 @@@@ if ((FPVAR = fopen(FLNAME,"w")) == NULL)
d104 1
a104 1
@@@@ -636,14 +636,14 @@@@ if (SEPARATE)
d121 1
a121 1
@@@@ -653,14 +653,14 @@@@ if (SEPARATE)
d138 1
a138 1
@@@@ -675,7 +675,7 @@@@ if (SEPARATE)
d147 1
a147 1
@@@@ -765,7 +765,7 @@@@ while (NOW < CF_MONDAY_MORNING+CF_WEEK)
d156 1
a156 1
@@@@ -1017,7 +1017,7 @@@@ for (i = 0; i < 7; i++)
d160 2
a161 2
-    snprintf(FLNAME,CF_BUFSIZE,"%s/state/histograms",WORKDIR);
+    snprintf(FLNAME,sizeof(FLNAME),"%s/state/histograms",WORKDIR);
d165 1
a165 1
@@@@ -1070,31 +1070,31 @@@@ for (i = 0; i < 7; i++)
d202 1
a202 1
@@@@ -1103,14 +1103,14 @@@@ for (i = 0; i < 7; i++)
d219 1
a219 1
@@@@ -1120,13 +1120,13 @@@@ for (i = 0; i < 7; i++)
d235 1
a235 1
@@@@ -1142,7 +1142,7 @@@@ for (i = 0; i < 7; i++)
d244 1
a244 1
@@@@ -1374,7 +1374,7 @@@@ for (dirp = readdir(dirh); dirp != NULL;
d253 20
a272 1
@@@@ -1477,7 +1477,7 @@@@ while ((c=getopt_long(argc,argv,"Thtf:rs
d281 1
a281 1
@@@@ -1531,7 +1531,7 @@@@ char *CanonifyName(char *str)
d290 1
a290 1
@@@@ -1603,7 +1603,7 @@@@ for (NOW = CF_MONDAY_MORNING; NOW < CF_M
@


1.2
log
@update to cfengine 2.1.7p1

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 3
a3 3
$OpenBSD: patch-src_cfenvgraph_c,v 1.1 2004/06/17 11:21:42 sturm Exp $
--- src/cfenvgraph.c.orig	Fri May  7 11:44:59 2004
+++ src/cfenvgraph.c	Mon Aug  2 13:30:33 2004
d165 1
a165 1
@@@@ -1074,31 +1074,31 @@@@ for (i = 0; i < 7; i++)
d202 1
a202 1
@@@@ -1107,14 +1107,14 @@@@ for (i = 0; i < 7; i++)
d219 1
a219 1
@@@@ -1124,13 +1124,13 @@@@ for (i = 0; i < 7; i++)
d235 1
a235 1
@@@@ -1146,7 +1146,7 @@@@ for (i = 0; i < 7; i++)
d244 1
a244 1
@@@@ -1378,7 +1378,7 @@@@ for (dirp = readdir(dirh); dirp != NULL;
d253 1
a253 1
@@@@ -1481,7 +1481,7 @@@@ while ((c=getopt_long(argc,argv,"Thtf:rs
d262 1
a262 1
@@@@ -1535,7 +1535,7 @@@@ char *CanonifyName(char *str)
d271 1
a271 1
@@@@ -1607,7 +1607,7 @@@@ for (NOW = CF_MONDAY_MORNING; NOW < CF_M
@


1.1
log
@revive cfengine port

this is version 2.1.6, from and maintained by
William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 3
a3 3
$OpenBSD$
--- src/cfenvgraph.c.orig	Mon Apr 19 12:00:16 2004
+++ src/cfenvgraph.c	Thu Jun 17 12:54:38 2004
d104 1
a104 1
@@@@ -636,7 +636,7 @@@@ if (SEPARATE)
a112 1
@@@@ -643,7 +643,7 @@@@ if (SEPARATE)
d121 1
a121 1
@@@@ -653,7 +653,7 @@@@ if (SEPARATE)
a129 1
@@@@ -660,7 +660,7 @@@@ if (SEPARATE)
d202 1
a202 1
@@@@ -1107,7 +1107,7 @@@@ for (i = 0; i < 7; i++)
a210 1
@@@@ -1114,7 +1114,7 @@@@ for (i = 0; i < 7; i++)
@

