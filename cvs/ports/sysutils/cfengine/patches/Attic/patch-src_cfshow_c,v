head	1.2;
access;
symbols
	OPENBSD_4_2:1.1.0.10
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2007.10.12.20.12.19;	author sturm;	state dead;
branches;
next	1.1;

1.1
date	2005.07.21.15.16.46;	author aanriot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to cfengine 2.2.1
simplify port drastically by removing str* patches, these might be
revived one day as an external patch

no objections from maintainer
@
text
@$OpenBSD: patch-src_cfshow_c,v 1.1 2005/07/21 15:16:46 aanriot Exp $
--- src/cfshow.c.orig	Thu Feb 10 15:19:37 2005
+++ src/cfshow.c	Tue Jul 19 12:02:08 2005
@@@@ -131,7 +131,7 @@@@ while ((c=getopt_long(argc,argv,"hdvaVls
   }
 
 
-strcpy(CFWORKDIR,WORKDIR);
+(void)strlcpy(CFWORKDIR,WORKDIR,sizeof(CFWORKDIR));
 
 if (getuid() > 0)
    {
@@@@ -139,8 +139,8 @@@@ if (getuid() > 0)
    
    if ((homedir = getenv("HOME")) != NULL)
       {
-      strcpy(CFWORKDIR,homedir);
-      strcat(CFWORKDIR,"/.cfagent");
+      (void)strlcpy(CFWORKDIR,homedir,sizeof(CFWORKDIR));
+      (void)strlcat(CFWORKDIR,"/.cfagent",sizeof(CFWORKDIR));
       }
    }
 }
@@@@ -248,7 +248,7 @@@@ while (dbcp->c_get(dbcp, &key, &value, D
    char tbuf[CF_BUFSIZE];
 
    memcpy(&then,value.data,sizeof(then));
-   strcpy(hostname,(char *)key.data);
+   (void)strlcpy(hostname,(char *)key.data,sizeof(hostname));
 
    if (value.data != NULL)
       {
@@@@ -444,6 +444,7 @@@@ char *ChecksumDump(unsigned char digest[
 { unsigned int i;
   static char buffer[EVP_MAX_MD_SIZE*4];
   int len = 1;
+  int s = 0;
 
 for (i = 0; buffer[i] != 0; i++)
    {
@@@@ -460,15 +461,17 @@@@ else
 
 switch(len)
    {
-   case 20: sprintf(buffer,"SHA=  ");
+   case 20: (void)snprintf(buffer,sizeof(buffer),"SHA=  ");
        break;
-   case 16: sprintf(buffer,"MD5=  ");
+   case 16: (void)snprintf(buffer,sizeof(buffer),"MD5=  ");
        break;
    }
   
 for (i = 0; i < len; i++)
    {
-   sprintf((char *)(buffer+4+2*i),"%02x", digest[i]);
+   s = sizeof(buffer) - (4+2*i);
+   if (s > 0)
+       (void)snprintf((char *)(buffer+4+2*i),s,"%02x", digest[i]);
    }
 
 return buffer; 
@


1.1
log
@update to 2.1.15, from William Yodlowsky (maintainer).

inputs and ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
@

