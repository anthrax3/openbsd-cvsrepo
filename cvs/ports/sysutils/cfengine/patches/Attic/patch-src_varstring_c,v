head	1.5;
access;
symbols
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2007.10.12.20.12.19;	author sturm;	state dead;
branches;
next	1.4;

1.4
date	2005.07.21.15.16.47;	author aanriot;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.01.21.22.15;	author sturm;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.08.14.02.11;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.17.11.21.43;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to cfengine 2.2.1
simplify port drastically by removing str* patches, these might be
revived one day as an external patch

no objections from maintainer
@
text
@$OpenBSD: patch-src_varstring_c,v 1.4 2005/07/21 15:16:47 aanriot Exp $
--- src/varstring.c.orig	Wed Apr 20 13:11:14 2005
+++ src/varstring.c	Fri Jul 15 13:36:19 2005
@@@@ -354,7 +354,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
       FatalError("Can't expand varstring");
       }
    
-   strcat(buffer,currentitem);
+   (void)strlcat(buffer,currentitem,CF_EXPANDSIZE);
    sp += strlen(currentitem);
 
    if (*sp == '$')
@@@@ -368,7 +368,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                    varstring = '}';
                    break;
          default: 
-                   strcat(buffer,"$");
+                   (void)strlcat(buffer,"$",CF_EXPANDSIZE);
                    continue;
          }
       sp++;
@@@@ -406,7 +406,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expand varstring");
                 }
-             strcat(buffer,VERSION);
+             (void)strlcat(buffer,VERSION,CF_EXPANDSIZE);
 	     break;
              
          case cffaculty:
@@@@ -420,7 +420,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expand varstring");
                 }
-             strcat(buffer,VFACULTY);
+             (void)strlcat(buffer,VFACULTY,CF_EXPANDSIZE);
              break;
              
              
@@@@ -431,7 +431,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                    {
                    FatalError("Can't expand varstring");
                    }
-                strcat(buffer,VDEFAULTBINSERVER.name);
+                (void)strlcat(buffer,VDEFAULTBINSERVER.name,CF_EXPANDSIZE);
                 }
              else
                 {
@@@@ -439,7 +439,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                    {
                    FatalError("Can't expand varstring");
                    }
-                strcat(buffer,VUQNAME);
+                (void)strlcat(buffer,VUQNAME,CF_EXPANDSIZE);
                 }
              break;
              
@@@@ -448,7 +448,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expand varstring");
                 }
-             strcat(buffer,VFQNAME);
+             (void)strlcat(buffer,VFQNAME,CF_MAXVARSIZE);
              break;
              
          case cfnetmask:
@@@@ -456,7 +456,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expand varstring");
                 }
-             strcat(buffer,VNETMASK);
+             (void)strlcat(buffer,VNETMASK,CF_EXPANDSIZE);
              break;
              
              
@@@@ -465,7 +465,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expand varstring");
                 }
-             strcat(buffer,VIPADDRESS);
+             (void)strlcat(buffer,VIPADDRESS,CF_EXPANDSIZE);
              break;
              
          case cfbinserver:
@@@@ -479,7 +479,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expand varstring");
                 }
-             strcat(buffer,"$(binserver)");
+             (void)strlcat(buffer,"$(binserver)",CF_EXPANDSIZE);
              break;
              
          case cfsysadm:
@@@@ -492,7 +492,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expand varstring");
                 }
-             strcat(buffer,VSYSADM);
+             (void)strlcat(buffer,VSYSADM,CF_EXPANDSIZE);
              break;
              
          case cfdomain:
@@@@ -505,7 +505,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,ToLowerStr(VDOMAIN));
+             (void)strlcat(buffer,ToLowerStr(VDOMAIN),CF_EXPANDSIZE);
              break;
              
          case cfnfstype:
@@@@ -513,7 +513,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,VNFSTYPE);
+             (void)strlcat(buffer,VNFSTYPE,CF_EXPANDSIZE);
              break;
              
          case cftimezone:
@@@@ -526,7 +526,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,VTIMEZONE->name);
+             (void)strlcat(buffer,VTIMEZONE->name,CF_EXPANDSIZE);
              break;
              
          case cfclass:
@@@@ -534,7 +534,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,CLASSTEXT[VSYSTEMHARDCLASS]);
+             (void)strlcat(buffer,CLASSTEXT[VSYSTEMHARDCLASS],CF_EXPANDSIZE);
              break;
              
          case cfarch:
@@@@ -542,7 +542,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,VARCH);
+             (void)strlcat(buffer,VARCH,CF_EXPANDSIZE);
              break;
              
          case cfarch2:
@@@@ -550,7 +550,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,VARCH2);
+             (void)strlcat(buffer,VARCH2,CF_EXPANDSIZE);
              break;
              
              
@@@@ -568,7 +568,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 }
              else
                 {
-                strcat(buffer,Space2Score(ctime(&tloc)));
+                (void)strlcat(buffer,Space2Score(ctime(&tloc)),CF_EXPANDSIZE);
                 Chop(buffer);
                 }
              
@@@@ -581,7 +581,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 }
              else
                 {
-                strcat(buffer,VYEAR);
+                (void)strlcat(buffer,VYEAR,CF_EXPANDSIZE);
                 }
              break;
              
@@@@ -592,7 +592,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 }
              else
                 {
-                strcat(buffer,VMONTH);
+                (void)strlcat(buffer,VMONTH,CF_EXPANDSIZE);
                 }
              break;
              
@@@@ -603,7 +603,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 }
              else
                 {
-                strcat(buffer,VDAY);
+                (void)strlcat(buffer,VDAY,CF_EXPANDSIZE);
                 }
              break;
          case cfhr:
@@@@ -613,7 +613,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 }
              else
                 {
-                strcat(buffer,VHR);
+                (void)strlcat(buffer,VHR,CF_EXPANDSIZE);
                 }
              break;
              
@@@@ -624,7 +624,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 }
              else
                 {
-                strcat(buffer,VMINUTE);
+                (void)strlcat(buffer,VMINUTE,CF_EXPANDSIZE);
                 }
              break;
              
@@@@ -632,14 +632,14 @@@@ for (sp = string; /* No exit */ ; sp++) 
              if (strlen(ALLCLASSBUFFER) == 0)
                 {
                 snprintf(name,CF_MAXVARSIZE,"$(%s)",currentitem);
-                strcat(buffer,name);
+                (void)strlcat(buffer,name,CF_EXPANDSIZE);
                 }
              
              if (ExpandOverflow(buffer,ALLCLASSBUFFER))
                 {
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,ALLCLASSBUFFER);
+             (void)strlcat(buffer,ALLCLASSBUFFER,CF_EXPANDSIZE);
              break;
              
          case cfspc:
@@@@ -647,7 +647,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer," ");
+             (void)strlcat(buffer," ",CF_EXPANDSIZE);
              break;
              
          case cftab:
@@@@ -655,7 +655,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,"\t");
+             (void)strlcat(buffer,"\t",CF_EXPANDSIZE);
              break;
              
          case cflf:
@@@@ -663,7 +663,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,"\012");
+             (void)strlcat(buffer,"\012",CF_EXPANDSIZE);
              break;
              
          case cfcr:
@@@@ -671,7 +671,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 { 
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,"\015");
+             (void)strlcat(buffer,"\015",CF_EXPANDSIZE);
              break;
              
          case cfn:
@@@@ -679,7 +679,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 { 
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,"\n");
+             (void)strlcat(buffer,"\n",CF_EXPANDSIZE);
              break;
              
          case cfdblquote:
@@@@ -687,14 +687,14 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 { 
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,"\"");
+             (void)strlcat(buffer,"\"",CF_EXPANDSIZE);
              break;
          case cfquote:
              if (ExpandOverflow(buffer," "))
                 { 
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,"\'");
+             (void)strlcat(buffer,"\'",CF_EXPANDSIZE);
              break;
 
 	 case cfcolon:
@@@@ -702,7 +702,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 { 
                 FatalError("Can't expandvarstring");
                 }
-             strcat(buffer,":");
+             (void)strlcat(buffer,":",CF_EXPANDSIZE);
              break;
 
              
@@@@ -714,7 +714,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                    { 
                    FatalError("Can't expandvarstring");
                    }
-                strcat(buffer,"$");
+                (void)strlcat(buffer,"$",CF_EXPANDSIZE);
                 }
              else
                 {
@@@@ -722,7 +722,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                    { 
                    FatalError("Can't expandvarstring");
                    }
-                strcat(buffer,"$(dollar)");
+                (void)strlcat(buffer,"$(dollar)",CF_EXPANDSIZE);
                 }
              break;
              
@@@@ -744,7 +744,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                    {
                    FatalError("Can't expandvarstring");
                    }
-                strcat(buffer,VREPOSITORY);
+                (void)strlcat(buffer,VREPOSITORY,CF_EXPANDSIZE);
                 }
              break;
              
@@@@ -766,7 +766,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                    {
                    FatalError("Can't expandvarstring");
                    }
-                strcat(buffer,env);
+                (void)strlcat(buffer,env,CF_EXPANDSIZE);
                 Debug("Expansion gave (%s)\n",buffer);             
 
                 break;
@@@@ -782,7 +782,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 snprintf(name,CF_MAXVARSIZE,"$(%s)",currentitem);
                 }
-             strcat(buffer,name);
+             (void)strlcat(buffer,name,CF_EXPANDSIZE);
          }
       
       sp += strlen(currentitem);
@@@@ -816,7 +816,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
 
    sscanf(sp,"%[^$]",currentitem);
 
-   strcat(buffer,currentitem);
+   (void)strlcat(buffer,currentitem,CF_EXPANDSIZE);
    sp += strlen(currentitem);
 
    if (*sp == '$')
@@@@ -830,7 +830,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                    varstring = '}';
                    break;
          default: 
-                   strcat(buffer,"$");
+                   (void)strlcat(buffer,"$",CF_EXPANDSIZE);
                    continue;
          }
       sp++;
@@@@ -844,7 +844,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
       }
    else
       {
-      sprintf(scanstr,"%%[^%c]",varstring);   /* select the correct terminator */
+      (void)snprintf(scanstr,sizeof(scanstr),"%%[^%c]",varstring);   /* select the correct terminator */
       sscanf(++sp,scanstr,currentitem);               /* reduce item */
       
       switch (ScanVariable(currentitem))
@@@@ -854,7 +854,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
                 {
                 FatalError("Can't expand varstring");
                 }
-             strcat(buffer,bserver);
+             (void)strlcat(buffer,bserver,CF_EXPANDSIZE);
              break;
          }
       
@@@@ -915,7 +915,7 @@@@ if (!IsVarString(varstring))
    return liststart;   
    }
 
-sprintf(format,"%%[^%c]",sep);   /* set format string to search */
+(void)snprintf(format,sizeof(format),"%%[^%c]",sep);   /* set format string to search */
 
 i = 0; /* extract variable */
 
@


1.4
log
@update to 2.1.15, from William Yodlowsky (maintainer).

inputs and ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_varstring_c,v 1.3 2004/10/01 21:22:15 sturm Exp $
@


1.3
log
@unbreak and update to 2.1.10

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 4
a4 4
$OpenBSD$
--- src/varstring.c.orig	Wed Aug 11 23:07:05 2004
+++ src/varstring.c	Fri Oct  1 23:14:50 2004
@@@@ -353,7 +353,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d13 1
a13 1
@@@@ -367,7 +367,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d22 1
a22 1
@@@@ -405,7 +405,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d31 1
a31 1
@@@@ -419,7 +419,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d40 1
a40 1
@@@@ -430,7 +430,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d49 1
a49 1
@@@@ -438,7 +438,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d58 1
a58 1
@@@@ -447,7 +447,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d63 1
a63 1
+             (void)strlcat(buffer,VFQNAME,CF_EXPANDSIZE);
d67 1
a67 1
@@@@ -455,7 +455,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d76 1
a76 1
@@@@ -464,7 +464,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d85 1
a85 1
@@@@ -478,7 +478,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d94 1
a94 1
@@@@ -491,7 +491,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d103 1
a103 1
@@@@ -504,7 +504,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d112 1
a112 1
@@@@ -512,7 +512,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d121 1
a121 1
@@@@ -525,7 +525,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d130 1
a130 1
@@@@ -533,7 +533,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d139 1
a139 1
@@@@ -541,7 +541,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d148 1
a148 1
@@@@ -549,7 +549,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d157 1
a157 1
@@@@ -567,7 +567,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d166 1
a166 1
@@@@ -580,7 +580,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d175 1
a175 1
@@@@ -591,7 +591,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d184 1
a184 1
@@@@ -602,7 +602,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d193 1
a193 1
@@@@ -612,7 +612,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d202 1
a202 1
@@@@ -623,7 +623,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d211 1
a211 1
@@@@ -631,14 +631,14 @@@@ for (sp = string; /* No exit */ ; sp++) 
d228 1
a228 1
@@@@ -646,7 +646,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d237 1
a237 1
@@@@ -654,7 +654,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d246 1
a246 1
@@@@ -662,7 +662,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d255 1
a255 1
@@@@ -670,7 +670,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d264 1
a264 1
@@@@ -678,7 +678,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d273 1
a273 1
@@@@ -686,14 +686,14 @@@@ for (sp = string; /* No exit */ ; sp++) 
d288 10
d299 1
a299 2
          case cfdollar:
@@@@ -704,7 +704,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d308 1
a308 1
@@@@ -712,7 +712,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d317 10
a326 1
@@@@ -745,7 +745,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d335 1
a335 1
@@@@ -761,7 +761,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d344 1
a344 1
@@@@ -795,7 +795,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d353 1
a353 1
@@@@ -809,7 +809,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d362 1
a362 1
@@@@ -823,7 +823,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d371 1
a371 1
@@@@ -833,7 +833,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d380 1
a380 1
@@@@ -894,7 +894,7 @@@@ if (!IsVarString(varstring))
@


1.2
log
@update to cfengine 2.1.7p1

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 4
a4 4
$OpenBSD: patch-src_varstring_c,v 1.1 2004/06/17 11:21:43 sturm Exp $
--- src/varstring.c.orig	Fri Jun 11 05:50:17 2004
+++ src/varstring.c	Mon Aug  2 13:42:04 2004
@@@@ -356,7 +356,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d13 1
a13 1
@@@@ -370,7 +370,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d22 1
a22 1
@@@@ -408,7 +408,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d31 1
a31 1
@@@@ -422,7 +422,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d40 1
a40 1
@@@@ -433,7 +433,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d49 1
a49 1
@@@@ -441,7 +441,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d58 1
a58 1
@@@@ -450,7 +450,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d67 1
a67 1
@@@@ -458,7 +458,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d76 1
a76 1
@@@@ -467,7 +467,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d85 1
a85 1
@@@@ -481,7 +481,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d94 1
a94 1
@@@@ -494,7 +494,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d103 1
a103 1
@@@@ -507,7 +507,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d112 1
a112 1
@@@@ -515,7 +515,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d121 1
a121 1
@@@@ -528,7 +528,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d130 1
a130 1
@@@@ -536,7 +536,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d139 1
a139 1
@@@@ -544,7 +544,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d148 1
a148 1
@@@@ -552,7 +552,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d157 1
a157 1
@@@@ -570,7 +570,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d166 1
a166 1
@@@@ -583,7 +583,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d175 1
a175 1
@@@@ -594,7 +594,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d184 1
a184 1
@@@@ -605,7 +605,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d193 1
a193 1
@@@@ -615,7 +615,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d202 1
a202 1
@@@@ -626,7 +626,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d211 1
a211 1
@@@@ -634,14 +634,14 @@@@ for (sp = string; /* No exit */ ; sp++) 
d228 1
a228 1
@@@@ -649,7 +649,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d237 1
a237 1
@@@@ -657,7 +657,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d246 1
a246 1
@@@@ -665,7 +665,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d255 1
a255 1
@@@@ -673,7 +673,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d264 1
a264 1
@@@@ -681,7 +681,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d273 1
a273 1
@@@@ -689,14 +689,14 @@@@ for (sp = string; /* No exit */ ; sp++) 
d290 1
a290 1
@@@@ -707,7 +707,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d299 1
a299 1
@@@@ -715,7 +715,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d308 1
a308 1
@@@@ -748,7 +748,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d317 1
a317 1
@@@@ -764,7 +764,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d326 1
a326 1
@@@@ -798,7 +798,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d335 1
a335 1
@@@@ -812,7 +812,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d344 1
a344 1
@@@@ -826,7 +826,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d353 1
a353 1
@@@@ -836,7 +836,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d362 1
a362 1
@@@@ -897,7 +897,7 @@@@ if (!IsVarString(varstring))
@


1.1
log
@revive cfengine port

this is version 2.1.6, from and maintained by
William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 4
a4 4
$OpenBSD$
--- src/varstring.c.orig	Tue Apr 20 07:49:29 2004
+++ src/varstring.c	Thu Jun 17 12:54:41 2004
@@@@ -354,7 +354,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d13 1
a13 1
@@@@ -368,7 +368,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d22 1
a22 1
@@@@ -403,7 +403,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d31 1
a31 1
@@@@ -417,7 +417,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d40 1
a40 1
@@@@ -428,7 +428,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d49 1
a49 1
@@@@ -436,7 +436,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d58 1
a58 1
@@@@ -445,7 +445,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d67 1
a67 1
@@@@ -453,7 +453,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d76 1
a76 1
@@@@ -462,7 +462,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d85 1
a85 1
@@@@ -476,7 +476,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d94 1
a94 1
@@@@ -489,7 +489,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d103 1
a103 1
@@@@ -502,7 +502,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d112 1
a112 1
@@@@ -510,7 +510,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d121 1
a121 1
@@@@ -523,7 +523,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d130 1
a130 1
@@@@ -531,7 +531,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d139 1
a139 1
@@@@ -539,7 +539,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d148 1
a148 1
@@@@ -547,7 +547,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d157 1
a157 1
@@@@ -565,7 +565,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d166 1
a166 1
@@@@ -578,7 +578,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d175 1
a175 1
@@@@ -589,7 +589,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d184 1
a184 1
@@@@ -600,7 +600,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d193 1
a193 1
@@@@ -610,7 +610,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d202 1
a202 1
@@@@ -621,7 +621,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d211 1
a211 1
@@@@ -629,7 +629,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
a219 1
@@@@ -636,7 +636,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d228 1
a228 1
@@@@ -644,7 +644,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d237 1
a237 1
@@@@ -652,7 +652,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d246 1
a246 1
@@@@ -660,7 +660,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d255 1
a255 1
@@@@ -668,7 +668,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d264 1
a264 1
@@@@ -676,7 +676,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d273 1
a273 1
@@@@ -684,7 +684,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
a281 1
@@@@ -691,7 +691,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d290 1
a290 1
@@@@ -702,7 +702,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d299 1
a299 1
@@@@ -710,7 +710,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d308 1
a308 1
@@@@ -743,7 +743,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d314 2
d317 1
a317 3
                 }
              
@@@@ -757,7 +757,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d326 1
a326 1
@@@@ -791,7 +791,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d335 1
a335 1
@@@@ -805,7 +805,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d344 1
a344 1
@@@@ -819,7 +819,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d353 1
a353 1
@@@@ -829,7 +829,7 @@@@ for (sp = string; /* No exit */ ; sp++) 
d362 1
a362 1
@@@@ -890,7 +890,7 @@@@ if (!IsVarString(varstring))
@

