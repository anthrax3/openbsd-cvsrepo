head	1.6;
access;
symbols
	OPENBSD_4_2:1.5.0.8
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.6
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2007.10.12.20.12.19;	author sturm;	state dead;
branches;
next	1.5;

1.5
date	2005.10.27.21.47.28;	author sturm;	state Exp;
branches;
next	1.4;

1.4
date	2005.07.21.15.16.47;	author aanriot;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.01.21.22.15;	author sturm;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.08.14.02.11;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.17.11.21.43;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.6
log
@update to cfengine 2.2.1
simplify port drastically by removing str* patches, these might be
revived one day as an external patch

no objections from maintainer
@
text
@$OpenBSD: patch-src_install_c,v 1.5 2005/10/27 21:47:28 sturm Exp $
--- src/install.c.orig	Thu Sep  8 09:43:45 2005
+++ src/install.c	Fri Oct 21 16:35:56 2005
@@@@ -113,7 +113,7 @@@@ else
            FatalError("Redefinition of basic system variable");
            }
         
-        strcpy(VFACULTY,value);
+        (void)strlcpy(VFACULTY,value,sizeof(VFACULTY));
         break;
         
     case cfdomain:
@@@@ -124,7 +124,7 @@@@ else
         
         if (strlen(value) > 0)
            {
-           strcpy(VDOMAIN,value);
+           (void)strlcpy(VDOMAIN,value,sizeof(VDOMAIN));
            }
         else
            {
@@@@ -134,12 +134,12 @@@@ else
         if (!StrStr(VSYSNAME.nodename,VDOMAIN))
            {
            snprintf(VFQNAME,CF_BUFSIZE,"%s.%s",VSYSNAME.nodename,ToLowerStr(VDOMAIN));
-           strcpy(VUQNAME,VSYSNAME.nodename);
+           (void)strlcpy(VUQNAME,VSYSNAME.nodename,CF_MAXVARSIZE);
            }
         else
            {
            int n = 0;
-           strcpy(VFQNAME,VSYSNAME.nodename);
+           (void)strlcpy(VFQNAME,VSYSNAME.nodename,CF_MAXVARSIZE);
            
            while(VSYSNAME.nodename[n++] != '.')
               {
@@@@ -155,7 +155,7 @@@@ else
               FatalError("The fully qualified name is longer than CF_MAXVARSIZE!!");
               }
            
-           strcpy(buffer,VFQNAME);
+           (void)strlcpy(buffer,VFQNAME,sizeof(buffer));
            
            AddClassToHeap(CanonifyName(buffer));
            }
@@@@ -170,7 +170,7 @@@@ else
            break;
            }
         
-        strcpy(VSYSADM,value);
+        (void)strlcpy(VSYSADM,value,sizeof(VSYSADM));
         break;
                   
     case cfnetmask:
@@@@ -185,7 +185,7 @@@@ else
            yyerror("Multiple declaration of variable netmask");
            FatalError("Redefinition of basic system variable");
            }
-        strcpy(VNETMASK,value);
+        (void)strlcpy(VNETMASK,value,sizeof(VNETMASK));
         AddNetworkClass(VNETMASK);
         break;
         
@@@@ -347,7 +347,7 @@@@ else
         break;
         
     case cfnfstype:
-        strcpy(VNFSTYPE,value); 
+        (void)strlcpy(VNFSTYPE,value,sizeof(VNFSTYPE)); 
         break;
         
     case cfmethodname:
@@@@ -427,7 +427,7 @@@@ else
               {
               }
            
-           sprintf(rename,"_%s",CLASSTEXT[VSYSTEMHARDCLASS]);
+           (void)snprintf(rename,sizeof(rename),"_%s",CLASSTEXT[VSYSTEMHARDCLASS]);
            
            AddClassToHeap(rename);
            break;
@@@@ -448,7 +448,7 @@@@ else
            yyerror("Silly interface name, (should be something link eth0)");
            }
         
-        strcpy(VIFNAMEOVERRIDE,value);
+        (void)strlcpy(VIFNAMEOVERRIDE,value,sizeof(VIFNAMEOVERRIDE));
         VIFDEV[VSYSTEMHARDCLASS] = VIFNAMEOVERRIDE; /* override */
         Debug("Overriding interface with %s\n",VIFDEV[VSYSTEMHARDCLASS]);
         break;
@@@@ -548,7 +548,7 @@@@ switch(GetCommAttribute(item))
    case cfowner:
        if (strlen(value) < CF_BUFSIZE)
           {
-          strcpy(VUIDNAME,value);
+          (void)strlcpy(VUIDNAME,value,CF_BUFSIZE);
           }
        else
           {
@@@@ -559,7 +559,7 @@@@ switch(GetCommAttribute(item))
    case cfgroup:
        if (strlen(value) < CF_BUFSIZE)
           {
-          strcpy(VGIDNAME,value);
+          (void)strlcpy(VGIDNAME,value,CF_MAXVARSIZE);
           }
        else
           {
@@@@ -641,13 +641,13 @@@@ switch(GetCommAttribute(item))
                    break;
    case cfflags:   ParseFlagString(value,&PLUSFLAG,&MINUSFLAG);
                    break;
-   case cfowner:   strcpy(VUIDNAME,value);
+   case cfowner:   (void)strlcpy(VUIDNAME,value,CF_BUFSIZE);
                    break;
-   case cfgroup:   strcpy(VGIDNAME,value);
+   case cfgroup:   (void)strlcpy(VGIDNAME,value,CF_BUFSIZE);
                    break;
-   case cfdest:    strcpy(DESTINATION,value);
+   case cfdest:    (void)strlcpy(DESTINATION,value,CF_BUFSIZE);
                    break;
-   case cfaction:  strcpy(IMAGEACTION,value);
+   case cfaction:  (void)strlcpy(IMAGEACTION,value,CF_BUFSIZE);
                    break;
    case cfcompat:  HandleCharSwitch("oldserver",value,&COMPATIBILITY);
                    break;
@@@@ -820,7 +820,7 @@@@ Debug1("HandleOptionalMountItem(%s)\n",v
 switch(GetCommAttribute(item))
    {
    case cfmountoptions: 
-      strcpy(MOUNTOPTS, value);
+      (void)strlcpy(MOUNTOPTS, value, CF_BUFSIZE);
       break; 
 
    case cfreadonly: 
@@@@ -1007,7 +1007,7 @@@@ switch(GetCommAttribute(item))
    case cfinclude: 
    case cfpattern:
 
-       strcpy(CURRENTITEM,value);
+       (void)strlcpy(CURRENTITEM,value,CF_BUFSIZE);
        if (*value == '/')
           {
           yyerror("search pattern begins with / must be a relative name");
@@@@ -1083,9 +1083,9 @@@@ switch(GetCommAttribute(item))
                    break;
    case cfflags:   ParseFlagString(value,&PLUSFLAG,&MINUSFLAG);
                    break;
-   case cfowner:   strcpy(VUIDNAME,value);
+   case cfowner:   (void)strlcpy(VUIDNAME,value,CF_BUFSIZE);
                    break;
-   case cfgroup:   strcpy(VGIDNAME,value);
+   case cfgroup:   (void)strlcpy(VGIDNAME,value,CF_BUFSIZE);
                    break;
    case cfdefine:  HandleDefine(value);
                    break;
@@@@ -1291,9 +1291,9 @@@@ switch(GetCommAttribute(item))
                    break;
    case cffilter:  PrependItem(&VFILTERBUILD,value,CF_ANYCLASS);
                    break;
-   case cfowner:   strcpy(VUIDNAME,value);
+   case cfowner:   (void)strlcpy(VUIDNAME,value,CF_BUFSIZE);
      break;
-   case cfgroup:   strcpy(VGIDNAME,value);
+   case cfgroup:   (void)strlcpy(VGIDNAME,value,CF_BUFSIZE);
                    break;
    case cfchdir:   HandleChDir(value);
                    break;
@@@@ -1333,7 +1333,7 @@@@ Debug1("HandleOptionalPackagesAttribute(
 
 switch(GetCommAttribute(item))
    {
-   case cfversion: strcpy(PKGVER,value);
+   case cfversion: (void)strlcpy(PKGVER,value,CF_BUFSIZE);
                    break;
    case cfcmp:     CMPSENSE = (enum cmpsense) GetCmpSense(value);
                    break;
@@@@ -1465,9 +1465,9 @@@@ switch(GetCommAttribute(item))
                      break;
    case cfsetinform: HandleCharSwitch("inform",value,&INFORMP);
                      break;
-   case cfowner:     strcpy(VUIDNAME,value);
+   case cfowner:     (void)strlcpy(VUIDNAME,value,CF_BUFSIZE);
        break;
-   case cfgroup:     strcpy(VGIDNAME,value);
+   case cfgroup:     (void)strlcpy(VGIDNAME,value,CF_BUFSIZE);
                      break;
    case cfdefine:    HandleDefine(value);
                      break;
@@@@ -1534,7 +1534,7 @@@@ if (!IsAbsoluteFileName(value))
    yyerror("chdir is not an absolute directory name");
    }
 
-strcpy(CHDIR,value); 
+(void)strlcpy(CHDIR,value,CF_BUFSIZE); 
 }
 
 /*******************************************************************/
@@@@ -1547,7 +1547,7 @@@@ if (!IsAbsoluteFileName(value))
    yyerror("chdir is not an absolute directory name");
    }
  
-strcpy(CHROOT,value);  
+(void)strlcpy(CHROOT,value,sizeof(CHROOT));  
 }
 
 /*******************************************************************/
@@@@ -1558,7 +1558,7 @@@@ void HandleFileItem(char *item)
 if (strcmp(item,"home") == 0)
    {
    ACTIONPENDING=true;
-   strcpy(CURRENTOBJECT,"home");
+   (void)strlcpy(CURRENTOBJECT,"home",CF_BUFSIZE);
    return;
    }
 
@@@@ -1588,19 +1588,19 @@@@ if (VBROADCAST[0] != '\0')
 
 if (strcmp("ones",item) == 0)
    {
-   strcpy(VBROADCAST,"one");
+   (void)strlcpy(VBROADCAST,"one",sizeof(VBROADCAST));
    return;
    }
 
 if (strcmp("zeroes",item) == 0)
    {
-   strcpy(VBROADCAST,"zero");
+   (void)strlcpy(VBROADCAST,"zero",sizeof(VBROADCAST));
    return;
    }
 
 if (strcmp("zeros",item) == 0)
    {
-   strcpy(VBROADCAST,"zero");
+   (void)strlcpy(VBROADCAST,"zero",sizeof(VBROADCAST));
    return;
    }
 
@@@@ -1880,7 +1880,7 @@@@ if (VMAILSERVER[0] != '\0')
    FatalError("Redefinition of mailserver");
    }
 
-strcpy(VMAILSERVER,path);
+(void)strlcpy(VMAILSERVER,path,sizeof(VMAILSERVER));
 
 Debug1("Installing mailserver (%s) for group (%s)",path,GROUPBUFF);
 }
@@@@ -2598,9 +2598,9 @@@@ switch (action)
           {
           switch (MOUNTMODE)
              {
-             case 'o': strcpy(MOUNTOPTS,"ro");
+             case 'o': (void)strlcpy(MOUNTOPTS,"ro",CF_BUFSIZE);
                  break;
-             case 'w': strcpy(MOUNTOPTS,"rw");
+             case 'w': (void)strlcpy(MOUNTOPTS,"rw",CF_BUFSIZE);
                  break;
              default:  printf("Install pending, miscmount, shouldn't happen\n");
                  MOUNTOPTS[0] = '\0'; /* no mount mode set! */
@@@@ -2616,8 +2616,8 @@@@ switch (action)
                           MOUNTFROM, MOUNTONTO);
                    return;
                    }
-                strcat(MOUNTOPTS,",");
-                strcat(MOUNTOPTS,op->name);
+                (void)strlcat(MOUNTOPTS,",",CF_BUFSIZE);
+                (void)strlcat(MOUNTOPTS,op->name,CF_BUFSIZE);
                 }
              AppendMiscMount(MOUNTFROM,MOUNTONTO,MOUNTOPTS);
              }
@@@@ -3481,11 +3481,11 @@@@ for (sp = Get2DListEnt(tp); sp != NULL; 
    
    if (strlen(type) == 0)
       {
-      sprintf(ebuff,"all");
+      (void)snprintf(ebuff,sizeof(ebuff),"all");
       }
    else
       {
-      sprintf(ebuff,"%s",type);
+      (void)snprintf(ebuff,sizeof(ebuff),"%s",type);
       }
    
    if ((ptr->type = strdup(ebuff)) == NULL)
@@@@ -3613,7 +3613,7 @@@@ if (!strstr(function,"("))
    }
 
 /* First look at bare args to cache an arg fingerprint */ 
-strcpy(work,function);
+(void)strlcpy(work,function,sizeof(work));
 
 if (work[strlen(work)-1] != ')')
    {
@@@@ -4857,12 +4857,12 @@@@ Debug1("InstallImageItem (%s) (+%o)(-%o)
 
 if (strlen(action) == 0)   /* default action */
    {
-   strcat(action,"fix");
+   (void)strlcat(action,"fix",CF_BUFSIZE);
    }
 
 if (!(strcmp(action,"silent") == 0 || strcmp(action,"warn") == 0 || strcmp(action,"fix") == 0))
    {
-   sprintf(VBUFF,"Illegal action in image/copy item: %s",action);
+   (void)snprintf(VBUFF,sizeof(VBUFF),"Illegal action in image/copy item: %s",action);
    yyerror(VBUFF);
    return;
    }
@@@@ -4953,7 +4953,7 @@@@ for (spl = Get2DListEnt(tp); spl != NULL
       
       if (strlen(destination) == 0)
          {
-         strcpy(buf2,spl);
+         (void)strlcpy(buf2,spl,sizeof(buf2));
          }
       else
          {
@@@@ -5284,11 +5284,11 @@@@ if (strlen(CURRENTITEM) != 0)
 
 if (strcmp(value,"link") == 0 || strcmp(value,"links") == 0)
    {
-   strcpy(CURRENTITEM,"link");
+   (void)strlcpy(CURRENTITEM,"link",CF_BUFSIZE);
    }
 else if (strcmp(value,"plain") == 0 || strcmp(value,"file") == 0)
    {
-   strcpy(CURRENTITEM,"file");
+   (void)strlcpy(CURRENTITEM,"file",CF_BUFSIZE);
    }
 else
    {
@@@@ -5407,7 +5407,7 @@@@ void HandleNetmask(char *value)
 {
  if (strlen(DESTINATION) == 0)
     {
-    strcpy(DESTINATION,value);
+    (void)strlcpy(DESTINATION,value,CF_BUFSIZE);
     }
  else
     {
@@@@ -5422,7 +5422,7 @@@@ void HandleIPAddress(char *value)
 {
  if (strlen(LINKTO) == 0)
     {
-    strcpy(LINKTO,value);
+    (void)strlcpy(LINKTO,value,CF_BUFSIZE);
     }
  else
     {
@@@@ -5443,19 +5443,19 @@@@ if (strlen(CURRENTOBJECT) != 0)
  
 if (strcmp("ones",value) == 0)
    {
-   strcpy(CURRENTOBJECT,"one");
+   (void)strlcpy(CURRENTOBJECT,"one",CF_BUFSIZE);
    return;
    }
 
 if (strcmp("zeroes",value) == 0)
    {
-   strcpy(CURRENTOBJECT,"zero");
+   (void)strlcpy(CURRENTOBJECT,"zero",CF_BUFSIZE);
    return;
    }
 
 if (strcmp("zeros",value) == 0)
    {
-   strcpy(CURRENTOBJECT,"zero");
+   (void)strlcpy(CURRENTOBJECT,"zero",CF_BUFSIZE);
    return;
    }
 
@@@@ -5468,6 +5468,7 @@@@ void AppendToActionSequence (char *actio
 
 { int j = 0;
   char *sp,cbuff[CF_BUFSIZE],actiontxt[CF_BUFSIZE];
+  size_t tmplen;
 
 Debug1("Installing item (%s) in the action sequence list\n",action);
 
@@@@ -5499,8 +5500,10 @@@@ while (*sp != '\0')
  
    if (IsHardClass(cbuff))
       {
-      char *tmp = malloc(strlen(action)+30);
-      sprintf(tmp,"Error in action sequence: %s\n",action);
+      char *tmp;
+      tmplen = strlen(action)+30;
+      tmp = malloc(tmplen);
+      (void)snprintf(tmp,tmplen,"Error in action sequence: %s\n",action);
       yyerror(tmp);
       free(tmp);
       yyerror("You cannot add a reserved class!");
@@@@ -5509,7 +5512,7 @@@@ while (*sp != '\0')
  
    if (j == 1)
       {
-      strcpy(actiontxt,cbuff);
+      (void)strlcpy(actiontxt,cbuff,sizeof(actiontxt));
       continue;
       }
    else if (!IsSpecialClass(cbuff))
@@@@ -5536,7 +5539,7 @@@@ if (isalpha((int)user[0]))
       return;
       }
 
-   sprintf(id,"%d",pw->pw_uid);
+   (void)snprintf(id,sizeof(id),"%d",pw->pw_uid);
    AppendItem(&VACCESSLIST,id,NULL);
    }
 else
@@@@ -5634,7 +5637,7 @@@@ void HandleServer(char *value)
 
 {
 Debug("Server in copy set to : %s\n",value);
-strcpy(CFSERVER,value);
+(void)strlcpy(CFSERVER,value,CF_MAXVARSIZE);
 }
 
 /*******************************************************************/
@@@@ -5656,7 +5659,7 @@@@ if (strlen(value) > CF_BUFSIZE)
    yyerror(OUTPUT);
    }
 */
-strcpy(ALLCLASSBUFFER,value);
+(void)strlcpy(ALLCLASSBUFFER,value,sizeof(ALLCLASSBUFFER));
 
 for (sp = value; *sp != '\0'; sp++)
    {
@@@@ -5686,7 +5689,7 @@@@ if (strlen(value) > CF_BUFSIZE)
    yyerror("class list too long - can't handle it!");
    }
 
-strcpy(ELSECLASSBUFFER,value);
+(void)strlcpy(ELSECLASSBUFFER,value,sizeof(ELSECLASSBUFFER));
 
 for (sp = value; *sp != '\0'; sp++)
    {
@@@@ -5716,7 +5719,7 @@@@ if (strlen(value) > CF_BUFSIZE)
    yyerror("class list too long - can't handle it!");
    }
 
-strcpy(FAILOVERBUFFER,value);
+(void)strlcpy(FAILOVERBUFFER,value,sizeof(FAILOVERBUFFER));
 
 for (sp = value; *sp != '\0'; sp++)
    {
@@@@ -6329,8 +6332,8 @@@@ switch(GetCommAttribute(attribute))
                 {
                 if (strlen(copyhost)+strlen(VDOMAIN) < CF_MAXVARSIZE-2)
                    {
-                   strcat(copyhost,".");
-                   strcat(copyhost,VDOMAIN);
+                   (void)strlcat(copyhost,".",sizeof(copyhost));
+                   (void)strlcat(copyhost,VDOMAIN,sizeof(copyhost));
                    }
                 else
                    {
@@@@ -6363,6 +6366,7 @@@@ void PrependTidy(struct TidyPattern **li
 
 { struct TidyPattern *tp;
   char *spe = NULL,*sp, buffer[CF_EXPANDSIZE];
+  size_t spelen = 0;
 
 if ((tp = (struct TidyPattern *)malloc(sizeof(struct TidyPattern))) == NULL)
    {
@@@@ -6392,10 +6396,14 @@@@ if ((tp->elsedef = strdup(buffer)) == NU
 AddInstallable(tp->defines);
 AddInstallable(tp->elsedef); 
  
-if ((classes!= NULL) && (spe = malloc(strlen(classes)+2)) == NULL)
+if (classes!= NULL)
    {
-   perror("Can't allocate memory in PrependItem()");
-   FatalError("");
+   spelen = strlen(classes)+2;
+   if ((spe = malloc(spelen)) == NULL)
+      {
+      perror("Can't allocate memory in PrependItem()");
+      FatalError("");
+      }
    }
 
 if (travlinks == '?')
@@@@ -6421,7 +6429,7 @@@@ tp->rmdirs =tidydirs;
 
 if (classes != NULL)
    {
-   strcpy(spe,classes);
+   (void)strlcpy(spe,classes,spelen);
    tp->classes = spe;
    }
 else
@


1.5
log
@update to 2.1.16, removing sbin/vicf which seems to have a security
problem but is not used anywhere and will probably be removed from
cfengine

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 1
a1 1
$OpenBSD: patch-src_install_c,v 1.4 2005/07/21 15:16:47 aanriot Exp $
@


1.4
log
@update to 2.1.15, from William Yodlowsky (maintainer).

inputs and ok naddy@@
@
text
@d1 3
a3 3
$OpenBSD: patch-src_install_c,v 1.3 2004/10/01 21:22:15 sturm Exp $
--- src/install.c.orig	Sun May 29 06:34:15 2005
+++ src/install.c	Fri Jul 15 12:24:01 2005
d295 1
a295 1
@@@@ -4848,12 +4848,12 @@@@ Debug1("InstallImageItem (%s) (+%o)(-%o)
d310 1
a310 1
@@@@ -4944,7 +4944,7 @@@@ for (spl = Get2DListEnt(tp); spl != NULL
d319 1
a319 1
@@@@ -5275,11 +5275,11 @@@@ if (strlen(CURRENTITEM) != 0)
d333 1
a333 1
@@@@ -5398,7 +5398,7 @@@@ void HandleNetmask(char *value)
d342 1
a342 1
@@@@ -5413,7 +5413,7 @@@@ void HandleIPAddress(char *value)
d351 1
a351 1
@@@@ -5434,19 +5434,19 @@@@ if (strlen(CURRENTOBJECT) != 0)
d374 1
a374 1
@@@@ -5459,6 +5459,7 @@@@ void AppendToActionSequence (char *actio
d382 1
a382 1
@@@@ -5490,8 +5491,10 @@@@ while (*sp != '\0')
d395 1
a395 1
@@@@ -5500,7 +5503,7 @@@@ while (*sp != '\0')
d404 1
a404 1
@@@@ -5527,7 +5530,7 @@@@ if (isalpha((int)user[0]))
d413 1
a413 1
@@@@ -5625,7 +5628,7 @@@@ void HandleServer(char *value)
d422 1
a422 1
@@@@ -5647,7 +5650,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d431 1
a431 1
@@@@ -5677,7 +5680,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d440 1
a440 1
@@@@ -5707,7 +5710,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d449 1
a449 1
@@@@ -6320,8 +6323,8 @@@@ switch(GetCommAttribute(attribute))
d460 1
a460 1
@@@@ -6354,6 +6357,7 @@@@ void PrependTidy(struct TidyPattern **li
d468 1
a468 1
@@@@ -6383,10 +6387,14 @@@@ if ((tp->elsedef = strdup(buffer)) == NU
d486 1
a486 1
@@@@ -6412,7 +6420,7 @@@@ tp->rmdirs =tidydirs;
@


1.3
log
@unbreak and update to 2.1.10

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 4
a4 4
$OpenBSD$
--- src/install.c.orig	Wed Aug 11 22:50:46 2004
+++ src/install.c	Fri Oct  1 23:14:48 2004
@@@@ -106,7 +106,7 @@@@ else
d13 1
a13 1
@@@@ -117,7 +117,7 @@@@ else
d22 1
a22 1
@@@@ -127,12 +127,12 @@@@ else
d33 1
a33 1
+           (void)strlcpy(VFQNAME,VSYSNAME.nodename,CF_BUFSIZE);
d37 1
a37 1
@@@@ -148,7 +148,7 @@@@ else
d46 1
a46 1
@@@@ -162,7 +162,7 @@@@ else
d52 1
a52 1
                   break;
d55 1
a55 1
@@@@ -176,7 +176,7 @@@@ else
d64 1
a64 1
@@@@ -338,7 +338,7 @@@@ else
d73 1
a73 1
@@@@ -418,7 +418,7 @@@@ else
d82 1
a82 1
@@@@ -439,7 +439,7 @@@@ else
d91 1
a91 1
@@@@ -539,7 +539,7 @@@@ switch(GetCommAttribute(item))
d100 1
a100 1
@@@@ -550,7 +550,7 @@@@ switch(GetCommAttribute(item))
d109 1
a109 1
@@@@ -632,13 +632,13 @@@@ switch(GetCommAttribute(item))
d127 1
a127 1
@@@@ -811,7 +811,7 @@@@ Debug1("HandleOptionalMountItem(%s)\n",v
d136 1
a136 1
@@@@ -998,7 +998,7 @@@@ switch(GetCommAttribute(item))
d145 1
a145 1
@@@@ -1074,9 +1074,9 @@@@ switch(GetCommAttribute(item))
d157 1
a157 1
@@@@ -1282,9 +1282,9 @@@@ switch(GetCommAttribute(item))
d169 1
a169 1
@@@@ -1324,7 +1324,7 @@@@ Debug1("HandleOptionalPackagesAttribute(
d178 1
a178 1
@@@@ -1454,9 +1454,9 @@@@ switch(GetCommAttribute(item))
d190 1
a190 1
@@@@ -1522,7 +1522,7 @@@@ if (!IsAbsoluteFileName(value))
d199 1
a199 1
@@@@ -1535,7 +1535,7 @@@@ if (!IsAbsoluteFileName(value))
d208 1
a208 1
@@@@ -1546,7 +1546,7 @@@@ void HandleFileItem(char *item)
d217 1
a217 1
@@@@ -1576,19 +1576,19 @@@@ if (VBROADCAST[0] != '\0')
d240 1
a240 16
@@@@ -1631,12 +1631,12 @@@@ ExpandVarstring(item,ebuff,NULL);
    else
       {
       memcpy(&inaddr,hp->h_addr, hp->h_length);
-      strncpy(VDEFAULTROUTE,inet_ntoa(inaddr),CF_MAXVARSIZE);
+      (void)strlcpy(VDEFAULTROUTE,inet_ntoa(inaddr),sizeof(VDEFAULTROUTE));
       }
    }
 else
    {
-   strncpy(VDEFAULTROUTE,ebuff,CF_MAXVARSIZE);
+   (void)strlcpy(VDEFAULTROUTE,ebuff,sizeof(VDEFAULTROUTE));
    }
 }
 
@@@@ -1874,7 +1874,7 @@@@ if (VMAILSERVER[0] != '\0')
d249 1
a249 1
@@@@ -2592,9 +2592,9 @@@@ switch (action)
d261 1
a261 1
@@@@ -2610,8 +2610,8 @@@@ switch (action)
d272 1
a272 1
@@@@ -3470,11 +3470,11 @@@@ for (sp = Get2DListEnt(tp); sp != NULL; 
d286 1
a286 1
@@@@ -3602,7 +3602,7 @@@@ if (!strstr(function,"("))
d295 1
a295 1
@@@@ -4796,12 +4796,12 @@@@ Debug1("InstallImageItem (%s) (+%o)(-%o)
d310 1
a310 1
@@@@ -4901,7 +4901,7 @@@@ for (spl = Get2DListEnt(tp); spl != NULL
d319 1
a319 1
@@@@ -5217,11 +5217,11 @@@@ if (strlen(CURRENTITEM) != 0)
d333 1
a333 1
@@@@ -5340,7 +5340,7 @@@@ void HandleNetmask(char *value)
d342 1
a342 1
@@@@ -5355,7 +5355,7 @@@@ void HandleIPAddress(char *value)
d351 1
a351 1
@@@@ -5376,19 +5376,19 @@@@ if (strlen(CURRENTOBJECT) != 0)
d374 1
a374 1
@@@@ -5401,6 +5401,7 @@@@ void AppendToActionSequence (char *actio
d382 1
a382 1
@@@@ -5432,8 +5433,10 @@@@ while (*sp != '\0')
d395 1
a395 1
@@@@ -5442,7 +5445,7 @@@@ while (*sp != '\0')
d404 1
a404 1
@@@@ -5469,7 +5472,7 @@@@ if (isalpha((int)user[0]))
d413 1
a413 1
@@@@ -5567,7 +5570,7 @@@@ void HandleServer(char *value)
d422 1
a422 1
@@@@ -5589,7 +5592,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d431 1
a431 1
@@@@ -5619,7 +5622,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d440 1
a440 1
@@@@ -5649,7 +5652,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d449 1
a449 1
@@@@ -6262,8 +6265,8 @@@@ switch(GetCommAttribute(attribute))
d460 1
a460 1
@@@@ -6296,6 +6299,7 @@@@ void PrependTidy(struct TidyPattern **li
d468 1
a468 1
@@@@ -6325,10 +6329,14 @@@@ if ((tp->elsedef = strdup(buffer)) == NU
d486 1
a486 1
@@@@ -6354,7 +6362,7 @@@@ tp->rmdirs =tidydirs;
@


1.2
log
@update to cfengine 2.1.7p1

from maintainer William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 3
a3 3
$OpenBSD: patch-src_install_c,v 1.1 2004/06/17 11:21:43 sturm Exp $
--- src/install.c.orig	Wed Jun 30 13:30:58 2004
+++ src/install.c	Mon Aug  2 13:40:59 2004
d178 1
a178 14
@@@@ -1376,10 +1376,10 @@@@ if (value[0] == '\0')
         strncpy(METHODFILENAME,value,CF_BUFSIZE-1);
         break;
     case cfretclasses:
-        strncpy(METHODRETURNCLASSES,value,CF_BUFSIZE-1);
+        (void)strlcpy(METHODRETURNCLASSES,value,sizeof(METHODRETURNCLASSES));
         break;
     case cfforcereplyto:
-        strncpy(METHODFORCE,value,CF_BUFSIZE-1);
+        (void)strlcpy(METHODFORCE,value,sizeof(METHODFORCE));
         break;
     case cfsendclasses:
         strncpy(METHODREPLYTO,value,CF_MAXVARSIZE-1);
@@@@ -1440,9 +1440,9 @@@@ switch(GetCommAttribute(item))
d190 1
a190 1
@@@@ -1508,7 +1508,7 @@@@ if (!IsAbsoluteFileName(value))
d199 1
a199 1
@@@@ -1521,7 +1521,7 @@@@ if (!IsAbsoluteFileName(value))
d208 1
a208 1
@@@@ -1532,7 +1532,7 @@@@ void HandleFileItem(char *item)
d217 1
a217 1
@@@@ -1562,19 +1562,19 @@@@ if (VBROADCAST[0] != '\0')
d240 1
a240 1
@@@@ -1617,12 +1617,12 @@@@ ExpandVarstring(item,ebuff,NULL);
d255 1
a255 1
@@@@ -1906,7 +1906,7 @@@@ if (VMAILSERVER[0] != '\0')
d264 1
a264 1
@@@@ -2622,9 +2622,9 @@@@ switch (action)
d276 1
a276 1
@@@@ -2640,8 +2640,8 @@@@ switch (action)
d287 1
a287 1
@@@@ -3500,11 +3500,11 @@@@ for (sp = Get2DListEnt(tp); sp != NULL; 
d301 1
a301 1
@@@@ -3629,7 +3629,7 @@@@ if (!strstr(function,"("))
d310 1
a310 1
@@@@ -4824,12 +4824,12 @@@@ Debug1("InstallImageItem (%s) (+%o)(-%o)
d325 1
a325 1
@@@@ -4937,7 +4937,7 @@@@ for (spl = Get2DListEnt(tp); spl != NULL
d334 1
a334 1
@@@@ -5245,11 +5245,11 @@@@ if (strlen(CURRENTITEM) != 0)
d348 1
a348 1
@@@@ -5368,7 +5368,7 @@@@ void HandleNetmask(char *value)
d357 1
a357 1
@@@@ -5383,7 +5383,7 @@@@ void HandleIPAddress(char *value)
d366 1
a366 1
@@@@ -5404,19 +5404,19 @@@@ if (strlen(CURRENTOBJECT) != 0)
d389 1
a389 1
@@@@ -5429,6 +5429,7 @@@@ void AppendToActionSequence (char *actio
d397 1
a397 1
@@@@ -5460,8 +5461,10 @@@@ while (*sp != '\0')
d410 1
a410 1
@@@@ -5470,7 +5473,7 @@@@ while (*sp != '\0')
d419 1
a419 1
@@@@ -5497,7 +5500,7 @@@@ if (isalpha((int)user[0]))
d428 1
a428 1
@@@@ -5595,7 +5598,7 @@@@ void HandleServer(char *value)
d437 1
a437 1
@@@@ -5617,7 +5620,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d446 1
a446 1
@@@@ -5647,7 +5650,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d455 1
a455 1
@@@@ -5677,7 +5680,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d464 1
a464 1
@@@@ -6290,8 +6293,8 @@@@ switch(GetCommAttribute(attribute))
d475 1
a475 1
@@@@ -6324,6 +6327,7 @@@@ void PrependTidy(struct TidyPattern **li
d483 1
a483 1
@@@@ -6353,10 +6357,14 @@@@ if ((tp->elsedef = strdup(buffer)) == NU
d501 1
a501 1
@@@@ -6382,7 +6390,7 @@@@ tp->rmdirs =tidydirs;
@


1.1
log
@revive cfengine port

this is version 2.1.6, from and maintained by
William Yodlowsky <bsd at openbsd.rutgers.edu>
@
text
@d1 3
a3 3
$OpenBSD$
--- src/install.c.orig	2004-05-01 15:53:44.000000000 +0200
+++ src/install.c	2004-06-15 10:36:49.000000000 +0200
d46 1
a46 1
@@@@ -161,7 +161,7 @@@@ else
d55 1
a55 1
@@@@ -175,7 +175,7 @@@@ else
d64 1
a64 1
@@@@ -337,7 +337,7 @@@@ else
d73 1
a73 1
@@@@ -417,7 +417,7 @@@@ else
d82 1
a82 1
@@@@ -438,7 +438,7 @@@@ else
d91 1
a91 1
@@@@ -538,7 +538,7 @@@@ switch(GetCommAttribute(item))
d100 1
a100 1
@@@@ -549,7 +549,7 @@@@ switch(GetCommAttribute(item))
d109 1
a109 1
@@@@ -631,13 +631,13 @@@@ switch(GetCommAttribute(item))
d127 1
a127 1
@@@@ -810,7 +810,7 @@@@ Debug1("HandleOptionalMountItem(%s)\n",v
d136 1
a136 1
@@@@ -997,7 +997,7 @@@@ switch(GetCommAttribute(item))
d145 1
a145 1
@@@@ -1073,9 +1073,9 @@@@ switch(GetCommAttribute(item))
d157 1
a157 1
@@@@ -1281,9 +1281,9 @@@@ switch(GetCommAttribute(item))
d169 1
a169 1
@@@@ -1323,7 +1323,7 @@@@ Debug1("HandleOptionalPackagesAttribute(
d178 2
a179 1
@@@@ -1378,11 +1378,11 @@@@ if (value[0] == '\0')
a180 1
         
d183 1
a183 1
+        strlcpy(METHODRETURNCLASSES,value,sizeof(METHODRETURNCLASSES));
a184 1
         
d187 1
a187 1
+        strlcpy(METHODFORCE,value,sizeof(METHODFORCE));
a188 1
 
d190 2
a191 1
@@@@ -1445,9 +1445,9 @@@@ switch(GetCommAttribute(item))
d203 1
a203 1
@@@@ -1513,7 +1513,7 @@@@ if (!IsAbsoluteFileName(value))
d212 1
a212 1
@@@@ -1526,7 +1526,7 @@@@ if (!IsAbsoluteFileName(value))
d221 1
a221 1
@@@@ -1537,7 +1537,7 @@@@ void HandleFileItem(char *item)
d230 1
a230 1
@@@@ -1567,19 +1567,19 @@@@ if (VBROADCAST[0] != '\0')
d253 1
a253 1
@@@@ -1622,12 +1622,12 @@@@ ExpandVarstring(item,ebuff,NULL);
d257 1
a257 1
-      strcpy(VDEFAULTROUTE,inet_ntoa(inaddr));
d263 1
a263 1
-   strcpy(VDEFAULTROUTE,ebuff);
d268 1
a268 1
@@@@ -1905,7 +1905,7 @@@@ if (VMAILSERVER[0] != '\0')
d277 1
a277 1
@@@@ -2621,9 +2621,9 @@@@ switch (action)
d289 1
a289 1
@@@@ -2639,8 +2639,8 @@@@ switch (action)
d300 1
a300 10
@@@@ -2857,7 +2857,7 @@@@ if (data == NULL)
    }
 else
    {
-   Debug1("InstallEditFile(%s,%s,%s) with classes\n",file,edit,data,CLASSBUFF);
+   Debug1("InstallEditFile(%s,%s,%s) with classes %s\n",file,edit,data,CLASSBUFF);
    }
 
 if (!IsInstallable(CLASSBUFF))
@@@@ -3479,11 +3479,11 @@@@ for (sp = Get2DListEnt(tp); sp != NULL; 
d314 1
a314 1
@@@@ -3606,7 +3606,7 @@@@ if (!strstr(function,"("))
d323 1
a323 1
@@@@ -4800,12 +4800,12 @@@@ Debug1("InstallImageItem (%s) (+%o)(-%o)
d338 10
a347 19
@@@@ -4821,7 +4821,7 @@@@ if (strlen(buf1) > 1)
 if (!FORCENETCOPY && ((strcmp(buf3,VFQNAME) == 0) || (strcmp(buf3,VUQNAME) == 0) || (strcmp(buf3,VSYSNAME.nodename) == 0)))
    {
    Debug("Swapping %s for localhost\n",server);
-   strcpy(buf3,"localhost");
+   (void)strlcpy(buf3,"localhost",sizeof(buf3));
    }
 
 Build2DListFromVarstring(&tp,path,'/');  /* Must split on space in comm string */
@@@@ -4880,7 +4880,7 @@@@ for (spl = Get2DListEnt(tp); spl != NULL
 
    if (strlen(destination) == 0)
       {
-      strcpy(buf2,spl);
+      (void)strlcpy(buf2,spl,sizeof(buf2));
       }
    else
       {
@@@@ -5211,11 +5211,11 @@@@ if (strlen(CURRENTITEM) != 0)
d361 1
a361 1
@@@@ -5334,7 +5334,7 @@@@ void HandleNetmask(char *value)
d370 1
a370 1
@@@@ -5349,7 +5349,7 @@@@ void HandleIPAddress(char *value)
d379 1
a379 1
@@@@ -5370,19 +5370,19 @@@@ if (strlen(CURRENTOBJECT) != 0)
d402 1
a402 1
@@@@ -5395,6 +5395,7 @@@@ void AppendToActionSequence (char *actio
d410 1
a410 1
@@@@ -5426,8 +5427,10 @@@@ while (*sp != '\0')
d423 1
a423 1
@@@@ -5436,7 +5439,7 @@@@ while (*sp != '\0')
d432 1
a432 1
@@@@ -5463,7 +5466,7 @@@@ if (isalpha((int)user[0]))
d441 1
a441 1
@@@@ -5561,7 +5564,7 @@@@ void HandleServer(char *value)
d450 1
a450 1
@@@@ -5583,7 +5586,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d459 1
a459 1
@@@@ -5613,7 +5616,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d468 1
a468 1
@@@@ -5643,7 +5646,7 @@@@ if (strlen(value) > CF_BUFSIZE)
d477 1
a477 1
@@@@ -6256,8 +6259,8 @@@@ switch(GetCommAttribute(attribute))
d488 1
a488 1
@@@@ -6290,6 +6293,7 @@@@ void PrependTidy(struct TidyPattern **li
d496 1
a496 1
@@@@ -6319,10 +6323,14 @@@@ if ((tp->elsedef = strdup(buffer)) == NU
d514 1
a514 1
@@@@ -6348,7 +6356,7 @@@@ tp->rmdirs =tidydirs;
@

