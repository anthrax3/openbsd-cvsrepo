head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.1.1.0.12
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.10
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.6
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.4
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	jasper_20081129:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2011.10.05.17.38.31;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2008.11.29.09.54.49;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.11.29.09.54.49;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@bluetooth on openbsd isn't really a moving target anymore with active
maintainers; and these ports were just rotting away. so move them to the
attic.

as discussed with and ok uwe@@ (MAINTAINER) and aja@@
@
text
@$OpenBSD: patch-src_bt_lib_c,v 1.1 2008/11/29 09:54:49 jasper Exp $
--- src/bt_lib.c.orig	Tue Aug 12 11:24:32 2008
+++ src/bt_lib.c	Tue Aug 12 11:25:26 2008
@@@@ -47,6 +47,7 @@@@ void baswap(bdaddr_t *dst, const bdaddr_t *src)
 		d[i] = s[5-i];
 }
 
+#if 0
 char *batostr(const bdaddr_t *ba)
 {
 	char *str = bt_malloc(18);
@@@@ -76,6 +77,7 @@@@ bdaddr_t *strtoba(const char *str)
 	}
 	return (bdaddr_t *) ba;
 }
+#endif
 
 int ba2str(const bdaddr_t *ba, char *str)
 {
@@@@ -86,6 +88,7 @@@@ int ba2str(const bdaddr_t *ba, char *str)
 		b[0], b[1], b[2], b[3], b[4], b[5]);
 }
 
+#if 0
 int str2ba(const char *str, bdaddr_t *ba)
 {
 	uint8_t b[6];
@@@@ -191,6 +194,7 @@@@ int basnprintf(char *str, size_t size, const char *for
 
 	return len;
 }
+#endif
 
 void *bt_malloc(size_t size)
 {
@@@@ -202,6 +206,7 @@@@ void bt_free(void *ptr)
 	free(ptr);
 }
 
+#if 0
 /* Bluetooth error codes to Unix errno mapping */
 int bt_error(uint16_t code)
 {
@@@@ -276,6 +281,7 @@@@ int bt_error(uint16_t code)
 		return ENOSYS;
 	}
 }
+#endif
 
 char *bt_compidtostr(int compid)
 {
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import bluez-hcidump 1.42

HCIdump reads raw HCI data coming from and going to a Bluetooth device
and prints to screen commands, events and data in a human-readable form.
Optionally, the dump can be written to a file rather than parsed, and
the dump file can be parsed in a subsequent moment.

from jcs@@, with some tweaks by me
requested by uwe@@
@
text
@@
