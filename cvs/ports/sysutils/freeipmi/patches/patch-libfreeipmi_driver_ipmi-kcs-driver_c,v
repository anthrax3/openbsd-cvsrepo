head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.12.30.17.39.22;	author jca;	state Exp;
branches;
next	1.2;
commitid	mU4HxX7fA27dM1B7;

1.2
date	2016.03.15.22.22.05;	author sthen;	state dead;
branches;
next	1.1;
commitid	QHflZOadJWRXd0Y6;

1.1
date	2015.08.11.21.12.45;	author sthen;	state Exp;
branches;
next	;
commitid	isJQq8Fh5d4gqZGJ;


desc
@@


1.3
log
@Stop limiting freeipmi to i386 and amd64.

sthen@@ points out that low-level io (inb/outb) isn't needed any more on
those archs, now that we have an ipmi driver.  ok sthen@@
@
text
@$OpenBSD$

Disable low-level IO code.

--- libfreeipmi/driver/ipmi-kcs-driver.c.orig	Wed Nov  2 23:50:21 2016
+++ libfreeipmi/driver/ipmi-kcs-driver.c	Thu Dec 29 22:55:58 2016
@@@@ -148,7 +148,7 @@@@
 #if defined(__FreeBSD__)
 # include <machine/cpufunc.h>
 # include <machine/sysarch.h>
-#elif defined(__NetBSD__) || defined(__OpenBSD__)
+#elif defined(__NetBSD__)
 # include <machine/pio.h>               /* inb/outb */
 # include <machine/sysarch.h>   /* sysarch call */
 #elif defined(HAVE_SYS_IO_H)
@@@@ -159,7 +159,7 @@@@
 # include <asm/io.h>
 #endif
 
-#if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__)
+#if defined(__FreeBSD__) || defined(__NetBSD__)
 # define _INB(port)  inb (port)
 # define _OUTB(data, port)  outb (port, data)
 #elif defined(HAVE_IOPL)
@


1.2
log
@Remove wilfried@@'s _iopl patches from freeipmi, in-band support is now
available via /dev/ipmi0 (if enabled in the kernel) which is less dangerous
than securelevel=-1 and direct io writes.
@
text
@d1 9
a9 4
$OpenBSD: patch-libfreeipmi_driver_ipmi-kcs-driver_c,v 1.1 2015/08/11 21:12:45 sthen Exp $
--- libfreeipmi/driver/ipmi-kcs-driver.c.orig	Fri Jan  3 16:45:22 2014
+++ libfreeipmi/driver/ipmi-kcs-driver.c	Thu Jul 30 15:04:29 2015
@@@@ -150,6 +150,7 @@@@
d11 2
a12 1
 #elif defined(__NetBSD__) || defined(__OpenBSD__)
a13 1
+# include <sys/types.h>
d16 3
a18 4
 /* Linux, _AXP_ */
@@@@ -488,7 +489,22 @@@@ ipmi_kcs_ctx_io_init (ipmi_kcs_ctx_t ctx)
   if (ctx->io_init)
     goto out;
d20 5
a24 20
-#ifdef __FreeBSD__
+#ifdef __OpenBSD__
+# if defined(__amd64__)
+  if (amd64_iopl (3) < 0)
+# elif defined(__i386__)
+  if (i386_iopl (3) < 0)
+# else
+  if (0)
+# endif
+    {
+      if (errno == EPERM || errno == EACCES)
+        ctx->errnum = IPMI_KCS_ERR_PERMISSION;
+      else
+        KCS_ERRNO_TO_KCS_ERRNUM (ctx, errno);
+      return (-1);
+    }
+#elif __FreeBSD__
 #ifdef USE_IOPERM
   /* i386_set_ioperm has known problems on FBSD 5.x (bus errors). */
   if (i386_set_ioperm (ctx->driver_address, 0x02, 0x01))
@


1.1
log
@update to freeipmi-1.4.9
@
text
@d1 1
a1 1
$OpenBSD$
@

