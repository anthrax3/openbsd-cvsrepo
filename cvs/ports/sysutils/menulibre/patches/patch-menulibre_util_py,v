head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.8
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.6
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.1.1.1.0.4
	OPENBSD_5_8_BASE:1.1.1.1
	landry_20150404:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.10.30.15.00.43;	author landry;	state Exp;
branches;
next	1.1;
commitid	rcskaj7hQgVDRWN3;

1.1
date	2015.04.04.18.37.11;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	WezCELG6SrTfwH9E;

1.1.1.1
date	2015.04.04.18.37.11;	author landry;	state Exp;
branches;
next	;
commitid	WezCELG6SrTfwH9E;


desc
@@


1.2
log
@update to menulibre 2.1.2
@
text
@$OpenBSD: patch-menulibre_util_py,v 1.1.1.1 2015/04/04 18:37:11 landry Exp $
--- menulibre/util.py.orig	Fri Oct  9 00:39:41 2015
+++ menulibre/util.py	Fri Oct 30 13:36:56 2015
@@@@ -19,8 +19,6 @@@@ import os
 import re
 
 import getpass
-import psutil
-old_psutil_format = isinstance(psutil.Process.username, property)
 
 from gi.repository import GLib, Gdk
 
@@@@ -40,58 +38,6 @@@@ MenuItemTypes = enum(
 )
 
 
-def getProcessUsername(process):
-    """Get the username of the process owner. Return None if fail."""
-    username = None
-
-    try:
-        if old_psutil_format:
-            username = process.username
-        else:
-            username = process.username()
-    except:
-        pass
-
-    return username
-
-
-def getProcessName(process):
-    """Get the process name. Return None if fail."""
-    p_name = None
-
-    try:
-        if old_psutil_format:
-            p_name = process.name
-        else:
-            p_name = process.name()
-    except:
-        pass
-
-    return p_name
-
-
-def getProcessList():
-    """Return a list of unique process names for the current user."""
-    username = getpass.getuser()
-    try:
-        pids = psutil.get_pid_list()
-    except AttributeError:
-        pids = psutil.pids()
-    processes = []
-    for pid in pids:
-        try:
-            process = psutil.Process(pid)
-            p_user = getProcessUsername(process)
-            if p_user == username:
-                p_name = getProcessName(process)
-                if p_name is not None and p_name not in processes:
-                    processes.append(p_name)
-        except:
-            pass
-    processes.sort()
-    return processes
-
-
 def getBasename(filename):
     if filename.endswith('.desktop'):
         basename = filename.split('/applications/', 1)[1]
@@@@ -102,23 +48,7 @@@@ def getBasename(filename):
 
 def getDefaultMenuPrefix():
     """Return the default menu prefix."""
-    prefix = os.environ.get('XDG_MENU_PREFIX', '')
-
-    # Cinnamon doesn't set this variable
-    if prefix == "":
-        if 'cinnamon' in os.environ.get('DESKTOP_SESSION', ''):
-            prefix = 'cinnamon-'
-
-    if prefix == "":
-        processes = getProcessList()
-        if 'xfce4-panel' in processes:
-            prefix = 'xfce-'
-
-    if len(prefix) == 0:
-        logger.warning("No menu prefix found, MenuLibre will not function "
-                       "properly.")
-
-    return prefix
+    return os.environ.get('XDG_MENU_PREFIX', '')
 
 
 def getItemPath(file_id):
@


1.1
log
@Initial revision
@
text
@d1 5
a5 4
$OpenBSD$
--- menulibre/util.py.orig	Sun Mar  1 19:56:49 2015
+++ menulibre/util.py	Sun Mar  1 19:57:16 2015
@@@@ -20,9 +20,6 @@@@ import re
a7 1
 
a9 2
-
 from gi.repository import GLib
d11 3
a13 2
 import logging
@@@@ -41,73 +38,9 @@@@ MenuItemTypes = enum(
d50 4
d55 1
a55 1
-    for pid in psutil.get_pid_list():
d69 5
@


1.1.1.1
log
@Import menulibre 2.0.6.

MenuLibre is an advanced FreeDesktop.org compliant menu editor.

All fields specified in the FreeDesktop.org Desktop Entry and Menu
specifications are available to quickly update.
Additionally, MenuLibre provides an editor for the launcher actions
used by applications such as Unity and Plank.

with tweaks & ok ajacoutot@@
@
text
@@
