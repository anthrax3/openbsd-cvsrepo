head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.34
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.30
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.32
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.28
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.26
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.24
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.22
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.20
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.18
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.16
	OPENBSD_5_0:1.2.0.14
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.12
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.8
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2008.06.28.16.36.21;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.26.23.54.56;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Include proper prototype for malloc() and all functions.
Fixes a segfault on LP64 archs, noticed by Aaron Stellman.
@
text
@$OpenBSD: patch-xbatt_c,v 1.1 2007/10/26 23:54:56 ajacoutot Exp $
--- xbatt.c.orig	Fri Sep 11 10:47:12 1998
+++ xbatt.c	Sat Jun 28 14:51:49 2008
@@@@ -43,12 +43,14 @@@@
  */
 
 #include <stdio.h>
+#include <stdlib.h>
 #include <errno.h>
 #include <time.h>
+#include <unistd.h>
 #include <sys/file.h>
 #include <sys/ioctl.h>
 #include <X11/StringDefs.h>
-#include <X11/Intrinsic.h>
+#include <X11/IntrinsicP.h>
 #include <X11/Shell.h>
 #include <X11/extensions/shape.h>
 #include <X11/Xaw/Cardinals.h>
@@@@ -65,6 +67,11 @@@@
 # define APMDEV22	"/dev/apm"
 #endif
 
+#ifdef __OpenBSD__
+# include <machine/apmvar.h>
+# define APMDEV                "/dev/apm"
+#endif /* __OpenBSD__ */
+
 #include "pixmaps/battery.xpm"
 #include "pixmaps/unknown.xpm"
 #include "bitmaps/full.xbm"
@@@@ -195,6 +202,14 @@@@ main(
     }
 #endif
 
+#ifdef __OpenBSD__
+     /* initialize APM Interface */
+     if ((apmfd = open(APMDEV, O_RDONLY)) == -1) {
+	fprintf(stderr, "xbatt: cannot open apm device\n");
+	exit(1);
+     }
+#endif /* __OpenBSD__ */
+
     /* start X-Window session */
     XtSetLanguageProc( NULL, NULL, NULL );
     toplevel = XtOpenApplication(&appContext, "XBatt",
@@@@ -371,6 +386,52 @@@@ struct status getBatteryStatus()
 						/* chrging or not.	*/
     }
 #endif	/* FreeBSD */
+
+#ifdef __OpenBSD__
+    struct apm_power_info info;
+
+    if (ioctl(apmfd, APM_IOC_GETPOWER, &info) == -1) {
+	fprintf(stderr, "xbatt: ioctl APM_IOC_GETPOWER failed\n");
+	exit(1);
+    }
+
+    /* get current status */
+    if (info.battery_life == APM_BATT_LIFE_UNKNOWN) {
+       switch (info.battery_state) {
+         case APM_BATT_HIGH:
+           ret.remain = 100;
+           break;
+         case APM_BATT_LOW:
+           ret.remain = 40;
+           break;
+         case APM_BATT_CRITICAL:
+           ret.remain = 10;
+           break;
+         default:        /* expected to be APM_STAT_UNKNOWN */
+           ret.remain = APM_STAT_UNKNOWN;
+       }
+    } else if (info.battery_life > 100) {
+       /* some APM BIOSes return values slightly > 100 */
+       ret.remain = 100;
+    } else {
+       ret.remain = info.battery_life;
+    }
+
+    /* get AC-line status */
+    if (info.ac_state == APM_AC_ON) {
+       ret.acline = APM_STAT_LINE_ON;
+    } else {
+       ret.acline = APM_STAT_LINE_OFF;
+    }
+
+    /* get charging status */
+    if (info.battery_state == APM_BATT_CHARGING) {
+       ret.charge = APM_STAT_BATT_CHARGING;
+    } else {
+       ret.charge = APM_STAT_BATT_HIGH;        /* I only want to know, */
+                                               /* chrging or not.      */
+    }
+#endif /* __OpenBSD__ */
 
 #ifdef	__linux__
     char	buffer[64];
@


1.1
log
@- use our naming scheme for patches
@
text
@d1 1
a1 1
$OpenBSD$
d3 18
a20 2
+++ xbatt.c	Sat Oct 27 01:47:34 2007
@@@@ -65,6 +65,11 @@@@
d32 1
a32 1
@@@@ -195,6 +200,12 @@@@ main(
d38 4
a41 2
+     if ((apmfd = open(APMDEV, O_RDONLY)) == -1)
+	err(1, "cannot open apm device");
d47 1
a47 1
@@@@ -371,6 +382,50 @@@@ struct status getBatteryStatus()
d55 4
a58 2
+    if (ioctl(apmfd, APM_IOC_GETPOWER, &info) == -1)
+      err(1, "ioctl APM_IOC_GETPOWER failed");
@

