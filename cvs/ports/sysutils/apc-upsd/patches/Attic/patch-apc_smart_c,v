head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.01.22.11.59.05;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2012.03.17.10.35.10;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove apc-upsd, requested by kirby@@ long ago, and I was just reminded of it
by blambert. suggested replacements: apcupsd (similar name different program)
or NUT, both of which support USB UPS and some newer RS232 UPS than apc-upsd.
@
text
@$OpenBSD: patch-apc_smart_c,v 1.1 2012/03/17 10:35:10 sthen Exp $
--- apc_smart.c.orig	Sat Mar 17 10:33:05 2012
+++ apc_smart.c	Sat Mar 17 10:33:19 2012
@@@@ -93,7 +93,7 @@@@ int     apc_smart_open  ()
 /* ------------------------------------------------------------------ */
 
 
-int getline(int fd, char *s)
+int get_line(int fd, char *s)
 {
         int     i       = 0;
         int     ending  = 0;
@@@@ -158,8 +158,8 @@@@ static  void    apc_smart_test()
 {
         char    answer[MAXLINE];
 
-        apc_send_ups( 'Y' );getline( ups->pd, answer ); 
-        apc_send_ups( 'A' );getline( ups->pd, answer ); 
+        apc_send_ups( 'Y' );get_line( ups->pd, answer ); 
+        apc_send_ups( 'A' );get_line( ups->pd, answer ); 
 
         syslog( LOG_INFO, "test started.");
 }
@@@@ -170,39 +170,39 @@@@ static  int     apc_ask_smart()
 {
         char    answer[MAXLINE];
 
-        apc_send_ups( 'Y' );getline( ups->pd, answer ); 
+        apc_send_ups( 'Y' );get_line( ups->pd, answer ); 
 
         if ( ups->extended )
         {
-                apc_send_ups( 'f' ); getline( ups->pd, answer ); 
+                apc_send_ups( 'f' ); get_line( ups->pd, answer ); 
                 ups->BatLoad  = atof(answer);  
 
-                apc_send_ups( 'N' ); getline( ups->pd, answer ); 
+                apc_send_ups( 'N' ); get_line( ups->pd, answer ); 
                 ups->LineMin  = atof(answer);
 
-                apc_send_ups( 'M' ); getline( ups->pd, answer ); 
+                apc_send_ups( 'M' ); get_line( ups->pd, answer ); 
                 ups->LineMax  = atof(answer);
 
-                apc_send_ups( 'P'); getline( ups->pd, answer ); 
+                apc_send_ups( 'P'); get_line( ups->pd, answer ); 
                 ups->UPSLoad  = atof(answer);
 
-                apc_send_ups('F'); getline( ups->pd, answer ); 
+                apc_send_ups('F'); get_line( ups->pd, answer ); 
                 ups->LineFreq = atof(answer);
 
-                apc_send_ups( 'L'); getline( ups->pd, answer ); 
+                apc_send_ups( 'L'); get_line( ups->pd, answer ); 
                 ups->LineVoltage = atof(answer);
 
-                apc_send_ups( 'O'); getline( ups->pd, answer ); 
+                apc_send_ups( 'O'); get_line( ups->pd, answer ); 
                 ups->OutputVoltage = atof(answer);
 
-                apc_send_ups( 'C' ); getline( ups->pd, answer ); 
+                apc_send_ups( 'C' ); get_line( ups->pd, answer ); 
                 ups->UPSTemp  = atof(answer);
 
-                apc_send_ups('B'); getline( ups->pd, answer ); 
+                apc_send_ups('B'); get_line( ups->pd, answer ); 
                 ups->BattVoltage = atof(answer);
         }
 
-        apc_send_ups('Q'); getline( ups->pd, answer ); 
+        apc_send_ups('Q'); get_line( ups->pd, answer ); 
         ups->Status    = atoi(answer);
 
         /* write info to syslog */   
@


1.1
log
@getline -> get_line, regen plist while there
@
text
@d1 1
a1 1
$OpenBSD$
@

