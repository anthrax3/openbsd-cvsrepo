head	1.3;
access;
symbols
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.1.1.1.0.4
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	sturm_2003-Aug-23:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2004.11.26.17.14.49;	author alek;	state dead;
branches;
next	1.2;

1.2
date	2004.05.17.00.22.54;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.23.19.24.50;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.08.23.19.24.50;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@- Replace DEINSTALL with UNMESSAGE
- Replace INSTALL with MESSAGE and @@sample
- Update @@extra
- Bump PKGNAME

ok naddy@@
@
text
@#!/bin/sh
# $OpenBSD: INSTALL,v 1.2 2004/05/17 00:22:54 naddy Exp $
#
# Pre/post-installation setup of anacron

PATH=/bin:/usr/bin:/sbin:/usr/sbin
PREFIX=${PKG_PREFIX:-/usr/local}
SPOOL_DIR=/var/spool/anacron

# Function: set up the anacron spool dir
do_spooldir()
{
    echo "-> Creating anacron spooldir under $SPOOL_DIR"
    if [ ! -d $SPOOL_DIR ]; then
	install -d -o root -g wheel -m 755 $SPOOL_DIR
    fi
}

# Function: tell the user what s/he needs to do to use the port
#	    just installed
#
do_notice()
{
    cat <<EOT
+----------
| To start using anacron:
| 
| Create the file ${SYSCONFDIR}/anacrontab (see anacrontab(5) for
| information about its format).
| 
| The following is a simple example which runs the standard
| OpenBSD daily, weekly, and monthly scripts:
| 
| -----Cut
| # ${SYSCONFDIR}/anacrontab example
| SHELL=/bin/sh
| PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
| # format: period delay job-identifier command
| 1  5  cron.daily   sh /etc/daily 2>&1   | tee /var/log/daily.out
| 7  10 cron.weekly  sh /etc/weekly 2>&1  | tee /var/log/weekly.out
| 30 15 cron.monthly sh /etc/monthly 2>&1 | tee /var/log/monthly.out
| -----Cut
| 
| Comment out the invocation of these jobs in root's crontab.
| 
| Invoke anacron from /etc/rc.local like this:
| 
| if [ X"\${anacron}" == X"YES" -a -x ${PREFIX}/sbin/anacron ]; then
|     echo -n ' anacron'
|     ${PREFIX}/sbin/anacron -s
| fi
| 
| (and add "anacron=YES" to /etc/rc.conf.local)
| 
| If your machine is left running for more than 24h at a time, you
| might also want to invoke anacron from an early morning cron job.
+----------

EOT
}

# Verify/process the command
#
case $2 in
    PRE-INSTALL)
	;;
    POST-INSTALL)
	do_spooldir
	do_notice
	;;
    *)
	echo "Usage: `basename $0` distname <PRE-INSTALL|POST-INSTALL>" >&2
	exit 1
	;;
esac

exit 0
@


1.2
log
@- Don't leave files behind in /tmp.
- Fix a number of compiler warnings.
- Clean INSTALL a bit.
- Point HOMEPAGE to a more useful place.

From: Andreas Kahari <ak+openbsd@@freeshell.org>
@
text
@d2 1
a2 1
# $OpenBSD: INSTALL,v 1.1.1.1 2003/08/23 19:24:50 sturm Exp $
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $OpenBSD$
a23 2
    # Text take from the README file of the anacron-2.3
    # distribution.
d39 3
a41 3
| 1  5  cron.daily   sh /etc/daily 2>&1   | tee /var/log/daily.out   | mail -s "\`hostname\` daily output" root
| 7  10 cron.weekly  sh /etc/weekly 2>&1  | tee /var/log/weekly.out  | mail -s "\`hostname\` weekly output" root
| 30 15 cron.monthly sh /etc/monthly 2>&1 | tee /var/log/monthly.out | mail -s "\`hostname\` monthly output" root
d44 1
a44 1
| Comment the invocation of these jobs in root's crontab.
d48 1
a48 1
| if [ X"\${anacron}" == X"YES" -a -x ${PREFIX}/sbin/anacron -a -f ${SYSCONFDIR}/anacrontab ]; then
d56 1
a56 3
| might also want to invoke anacron from a nightly cron job.
| 
| That's it.
@


1.1.1.1
log
@Initial import of anacron 2.3

Anacron is a periodic command scheduler. It executes
commands at intervals specified in days.  Unlike cron, it
does not assume that the system is running continuously.
It can therefore be used to control the execution of
daily, weekly and monthly jobs (or anything with a period
of n days), on systems that don't run 24 hours a day.
When installed and configured properly, Anacron will make
sure that the commands are run at the specified intervals
as closely as machine-uptime permits.

WWW: http://anacron.sourceforge.net/

from Andreas Kahari <andreas.kahari@@unix.net> with some cleanup by me
@
text
@@
