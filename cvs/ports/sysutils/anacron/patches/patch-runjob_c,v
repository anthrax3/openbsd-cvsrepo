head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.16
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.14
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.10
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.12
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.36
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.34
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.32
	OPENBSD_5_0:1.3.0.30
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.28
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.26
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.24
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.20
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.18
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.16
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.14
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.12
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.10
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	sturm_2003-Aug-23:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.06.04.13.47.10;	author giovanni;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.17.00.22.54;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.23.21.58.46;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.23.19.24.50;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.08.23.19.24.50;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
Update to 2.5.3 based on anacron2 fork which is still actively maintained
ok gonzalo@@
@
text
@$OpenBSD: patch-runjob_c,v 1.3 2004/05/17 00:22:54 naddy Exp $
--- runjob.c.orig	2000-06-21 00:12:18.000000000 +0100
+++ runjob.c	2004-05-12 20:50:11.000000000 +0100
@@@@ -34,11 +34,38 @@@@
 #include <stdio.h>
 #include <string.h>
 #include "global.h"
+#include <limits.h>
 
 static int
 temp_file()
 /* Open a temporary file and return its file descriptor */
 {
+    char template[PATH_MAX];
+    char *tmpdir = getenv("TMPDIR");
+
+    int fd = -1;
+
+    if (tmpdir == NULL) {
+       tmpdir = "/tmp";
+    }
+    if (strlcpy(template, tmpdir, sizeof template) >=
+	sizeof template) {
+	die_e("TMPDIR too long.");
+    }
+    if (strlcat(template, "/anacronXXXXXXXXXX", sizeof template) >=
+	sizeof template) {
+	die_e("Temporary filename too long.");
+    }
+    if ((fd = mkstemp(template)) == -1) { 
+	die_e("Could not create temporary file.");
+    }
+    if (unlink(template) == -1) {
+	complain("Tried to unlink temporary file '%s' but failed.",
+	    template);
+    }
+    return fd;
+
+#if 0
     const int max_retries = 50;
     char *name;
     int fd, i;
@@@@ -61,6 +88,7 @@@@ temp_file()
     free(name);
     fcntl(fd, F_SETFD, 1);    /* set close-on-exec flag */
     return fd;
+#endif
 }
 
 static off_t
@


1.3
log
@- Don't leave files behind in /tmp.
- Fix a number of compiler warnings.
- Clean INSTALL a bit.
- Point HOMEPAGE to a more useful place.

From: Andreas Kahari <ak+openbsd@@freeshell.org>
@
text
@d1 1
a1 1
$OpenBSD$
d26 1
a26 1
+    if (strlcat(template, "/anacronXXXXXXXX", sizeof template) >=
@


1.2
log
@if mkstemp() fails, don't return NULL but die

from maintainer andreas kahari
@
text
@d2 3
a4 3
--- runjob.c.orig	2000-06-21 01:11:56.000000000 +0200
+++ runjob.c	2003-08-23 23:52:52.000000000 +0200
@@@@ -34,11 +34,34 @@@@
d33 4
d43 1
a43 1
@@@@ -61,6 +84,7 @@@@ temp_file()
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
+++ runjob.c	2003-08-13 20:27:20.000000000 +0200
d31 1
a31 1
+	return (NULL);
@


1.1.1.1
log
@Initial import of anacron 2.3

Anacron is a periodic command scheduler. It executes
commands at intervals specified in days.  Unlike cron, it
does not assume that the system is running continuously.
It can therefore be used to control the execution of
daily, weekly and monthly jobs (or anything with a period
of n days), on systems that don't run 24 hours a day.
When installed and configured properly, Anacron will make
sure that the commands are run at the specified intervals
as closely as machine-uptime permits.

WWW: http://anacron.sourceforge.net/

from Andreas Kahari <andreas.kahari@@unix.net> with some cleanup by me
@
text
@@
