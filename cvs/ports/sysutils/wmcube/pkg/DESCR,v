head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.52
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.48
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.50
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.46
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.44
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.42
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.40
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.38
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.36
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.34
	OPENBSD_5_0:1.3.0.32
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.30
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.28
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.24
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.22
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.20
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.18
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.12
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.10
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.8
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.6
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	naddy_20010112:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2003.12.15.21.55.28;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.28.10.07.56;	author wilfried;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.12.15.24.42;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.01.12.15.24.42;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove WWW lines
@
text
@wmCube is a dockapp that displays a real time rotating 3d-object
and the current cpu-load.  The cpu-load also makes the object spin
faster/slower.  You can zoom in and out by clicking on the app and
you can design your own objects or use the objects that come with
the package.

* Objects can have infinite coordinates and lines/planes, your
  computers memory is the limit.

* If you're running a distributed.net client or some other
  application that keep you cpu at full load all the time you can
  make wmCube ignore "nice" processes.

* You can zoom out virtually to infinity and zoom in almost
  to the center of the object.

* You don't have to display the cpu-usage at the bottom of the
  dockapp, let the rotation speed be an intuitive way to determine
  cpu-load.  You can invert object speed vs. cpu-load.

* You can change objects at runtime by clicking the center
  of the app.  It will randomly choose a new object from the directory
  you specified at the command line.
@


1.2
log
@- integrate COMMENT
- bump NEED_VERSION
- run ispell & fmt on DESCR
@
text
@a23 2

WWW: ${HOMEPAGE}
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
wmCube is a dockapp that displays a realtime rotating 3d-object
and the current cpu-load.  The cpu-load also makes the object
spin faster/slower.  You can zoom in and out by clicking on
the app and you can design your own objects or use the objects
that come with the package.
d8 1
a8 1
  computers memory is the limit. 
d11 2
a12 2
  application that keep you cpu at full load all the time you
  can make wmCube ignore "nice" processes. 
d15 1
a15 1
  to the center of the object. 
d18 2
a19 2
  dockapp, let the rotation speed be an inituive way to determine
  cpu-load.  You can invert object speed vs. cpu-load. 
d22 2
a23 2
  of the app.  It will randomly choose a new object from the
  directory you specified at the command line. 
@


1.1.1.1
log
@Import os wmcube 0.98.
Submitted by Peter Stromberg <home@@wilfried.net>.

wmCube is a dockapp that displays a realtime rotating 3d-object
and the current cpu-load.  The cpu-load also makes the object
spin faster/slower.  You can zoom in and out by clicking on
the app and you can design your own objects or use the objects
that come with the package.
@
text
@@
