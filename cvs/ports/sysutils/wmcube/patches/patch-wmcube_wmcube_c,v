head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.54
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.52
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.50
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.48
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.46
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.44
	OPENBSD_5_0:1.3.0.42
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.40
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.38
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.36
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.34
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.32
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.30
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.28
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.26
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.24
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.22
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.20
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.18
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.16
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.14
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.12
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.10
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.8
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.6
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	naddy_20010112:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.09.17.14.34.39;	author espie;	state Exp;
branches;
next	1.3;
commitid	p2xRO9lT4VsQJLj0;

1.3
date	2001.08.28.14.08.57;	author wilfried;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.15.15.29.00;	author wilfried;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.12.15.24.42;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.01.12.15.24.42;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@dkstat.h
@
text
@$OpenBSD: patch-wmcube_wmcube_c,v 1.3 2001/08/28 14:08:57 wilfried Exp $
--- wmcube/wmcube.c.orig	Mon Oct 23 22:11:47 2000
+++ wmcube/wmcube.c	Wed Sep 17 16:33:06 2014
@@@@ -858,6 +858,10 @@@@ void print_help() {
 	printf("  -n  : exclude \"nice\" processes. (default OFF)\n");
 #endif
 
+#ifdef OPENBSD
+	printf("  -n  : exclude \"nice\" processes. (default OFF)\n");
+#endif
+
 	printf("  -b  : draw the cube in a brighter color. (default OFF)\n");
 	printf("  -i  : invert cube speed. (default OFF)\n");
 	printf("  -p  : do not display cpu-load (default OFF)\n");
@@@@ -913,7 +917,7 @@@@ int loadobj(char *filename) {
 		exit(0);
 	}
 
-	fscanf(fp,"%s",tmp);
+	fscanf(fp,"%63s",tmp);
 	
 	if (strcmp(tmp,"WMCUBE_COORDINATES") != 0) { 
 		printf("\nError in objectfile: it must start with WMCUBE_COORDINATES\n\n");
@@@@ -921,7 +925,7 @@@@ int loadobj(char *filename) {
 		exit(0);
 	}
 
-	fscanf(fp,"%s",tmp);
+	fscanf(fp,"%63s",tmp);
 	counter = atoi(tmp);
 
 	while ((strcmp(tmp,"WMCUBE_LINES") != 0) && (strcmp(tmp,"WMCUBE_PLANES") != 0)) {		
@@@@ -938,7 +942,7 @@@@ int loadobj(char *filename) {
 			fclose(fp);
 			exit(0);
 		}
-		fscanf(fp,"%s",tmp);
+		fscanf(fp,"%63s",tmp);
 
 		if (feof(fp)) {
 			printf("\nError in objectfile: you must have a section WMCUBE_LINES or WMCUBE_PLANES\n\n");
@@@@ -1272,17 +1276,45 @@@@ int calc_cpu_total() {
 }
 
 #elif defined OPENBSD
+#include <sys/param.h>
+#include <sys/sysctl.h>
+#include <sys/sched.h>
 
 int init_calc_cpu()
 {
 	return 0;
 }
 
-int calc_cpu_total() {
-        double avenrun[3];
-        
-        (void) getloadavg(avenrun, sizeof(avenrun) / sizeof(avenrun[0]));
-        return(((5.0*avenrun[0] + 0.5) > 50) ? 50 : (5.0*avenrun[0] + 0.5))*2;
+int calc_cpu_total()
+{
+	int total, used, t=0;
+	static int previous_total = 0, previous_used = 0;
+	int cpu,nice,system,idle;
+	unsigned long int cpu_time[CPUSTATES];
+
+	int mib[2];
+	size_t size;
+
+	mib[0] = CTL_KERN;
+	mib[1] = KERN_CPTIME;
+	size = sizeof (cpu_time);
+
+	if (sysctl(mib, 2, &cpu_time, &size, NULL, 0) < 0)
+		return 0;
+
+	cpu = cpu_time[CP_USER];
+	nice = cpu_time[CP_NICE];
+	system = cpu_time[CP_SYS];
+	idle = cpu_time[CP_IDLE];
+
+	used = cpu + system + use_nice*nice;
+	total = used + idle + (1-use_nice)*nice;
+
+	t = 100 * (double)(used - previous_used) / (double)(total - previous_total);
+	previous_total = total;
+	previous_used = used;
+
+	return t;
 }
 
 
@


1.3
log
@changed to use sysctl instead of kvm, no need for setgid
@
text
@d1 1
a1 1
$OpenBSD: patch-wmcube_wmcube_c,v 1.2 2001/05/15 15:29:00 wilfried Exp $
d3 1
a3 1
+++ wmcube/wmcube.c	Tue Aug 28 14:37:36 2001
d48 1
a48 1
+#include <sys/dkstat.h>
@


1.2
log
@fix buffer overflow in fscanfs, reported by Alexander Y. Yurchenko
@
text
@d1 1
a1 1
$OpenBSD: patch-wmcube_wmcube_c,v 1.1.1.1 2001/01/12 15:24:42 naddy Exp $
d3 2
a4 25
+++ wmcube/wmcube.c	Tue May 15 16:17:02 2001
@@@@ -53,6 +53,10 @@@@
 #include <kvm.h>
 #endif
 
+#ifdef OPENBSD
+#include <kvm.h>
+#endif
+
 #include "../wmgeneral/wmgeneral.h"
 #include "../wmgeneral/misc.h"
 
@@@@ -127,6 +131,11 @@@@ static kvm_t            *kd;
 static struct nlist     nlst[] = { {"_cp_time"}, {0} };
 #endif
 
+#ifdef OPENBSD
+static kvm_t            *kd;
+static struct nlist     nlst[] = { {"_cp_time"}, {0} };
+#endif
+
 int main(int argc, char **argv)
 {
 	int		j, i = 0, rot_speed = 0, cpu_usage = 0, rot_step = 1;
@@@@ -858,6 +867,10 @@@@ void print_help() {
d15 1
a15 1
@@@@ -913,7 +926,7 @@@@ int loadobj(char *filename) {
d24 1
a24 1
@@@@ -921,7 +934,7 @@@@ int loadobj(char *filename) {
d33 1
a33 1
@@@@ -938,7 +951,7 @@@@ int loadobj(char *filename) {
d42 2
a43 1
@@@@ -1273,16 +1286,54 @@@@ int calc_cpu_total() {
d46 3
a49 4
+#include <nlist.h>
+#include <fcntl.h>
+#include <sys/dkstat.h>
+
d52 1
a52 15
-	return 0;
+
+        if ((kd = kvm_open(NULL, NULL, NULL, O_RDONLY, "kvm_open")) == NULL)
+        {
+                printf("\nError: unable to open kvm\n\n");
+                exit(0);
+        }
+        kvm_nlist(kd, nlst);
+        if (nlst[0].n_type == 0) 
+        {
+                printf("\nError: unable to get nlist\n\n");
+                exit(1);
+        }
+
+        return 0;
d55 1
a55 1
 int calc_cpu_total() {
d60 28
a87 23
+        int total, used, t=0;
+        static int previous_total = 0, previous_used = 0;
+        int cpu,nice,system,idle;
+        unsigned long int cpu_time[CPUSTATES];
+
+        if (kvm_read(kd, nlst[0].n_value, &cpu_time, sizeof(cpu_time))
+                != sizeof(cpu_time))
+        {
+                printf("\nError reading kvm\n\n");
+                exit(0);
+        }
+
+        cpu = cpu_time[CP_USER];
+        nice = cpu_time[CP_NICE];
+        system = cpu_time[CP_SYS];
+        idle = cpu_time[CP_IDLE];
+
+        used = cpu + system + use_nice*nice;
+        total = used + idle + (1-use_nice)*nice;
+
+        t = 100 * (double)(used - previous_used) / (double)(total - previous_total);
+        previous_total = total;
+        previous_used = used;
d89 1
a89 1
+        return t;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: $
d3 1
a3 1
+++ wmcube/wmcube.c	Thu Jan 11 15:56:26 2001
d38 27
@


1.1.1.1
log
@Import os wmcube 0.98.
Submitted by Peter Stromberg <home@@wilfried.net>.

wmCube is a dockapp that displays a realtime rotating 3d-object
and the current cpu-load.  The cpu-load also makes the object
spin faster/slower.  You can zoom in and out by clicking on
the app and you can design your own objects or use the objects
that come with the package.
@
text
@@
