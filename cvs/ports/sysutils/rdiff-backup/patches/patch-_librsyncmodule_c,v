head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.8
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.6
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2015.08.21.19.43.27;	author sthen;	state Exp;
branches;
next	;
commitid	vAMhdDw9XosNt9sV;


desc
@@


1.1
log
@patch to fix with updated librsync
@
text
@$OpenBSD$

Fix with librsync v1.0.0; similar to
https://bugs.launchpad.net/duplicity/+bug/1416344

This uses the backwards-compatible format that uses the insecure
truncated MD4 hash.

--- _librsyncmodule.c.orig	Wed Aug 19 20:33:42 2015
+++ _librsyncmodule.c	Wed Aug 19 20:34:42 2015
@@@@ -59,8 +59,13 @@@@ _librsync_new_sigmaker(PyObject* self, PyObject* args)
   if (sm == NULL) return NULL;
   sm->x_attr = NULL;
 
+#ifdef RS_DEFAULT_STRONG_LEN
   sm->sig_job = rs_sig_begin((size_t)blocklen,
 							 (size_t)RS_DEFAULT_STRONG_LEN);
+#else
+  sm->sig_job = rs_sig_begin((size_t)blocklen,
+							 (size_t)8, RS_MD4_SIG_MAGIC);
+#endif
   return (PyObject*)sm;
 }
 
@
