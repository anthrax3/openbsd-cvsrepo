head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.7.0.4
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2016.04.05.10.21.22;	author sthen;	state Exp;
branches;
next	1.7;
commitid	Opbalh6bv8rbfKvM;

1.7
date	2014.11.11.21.48.40;	author sthen;	state Exp;
branches;
next	1.6;
commitid	QJHijlOokyfrZe81;

1.6
date	2014.08.23.09.53.18;	author landry;	state Exp;
branches;
next	1.5;
commitid	qjIsZMimfhR1r3vU;

1.5
date	2014.07.04.22.23.01;	author sthen;	state Exp;
branches;
next	1.4;
commitid	FKkGQ6G4kXE6XKlQ;

1.4
date	2010.06.15.10.47.08;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2009.03.11.01.55.07;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2007.02.06.14.46.25;	author henning;	state dead;
branches;
next	1.1;

1.1
date	2005.12.24.08.48.49;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.8
log
@add #include <sys/queue.h> to fix
@
text
@$OpenBSD: patch-platform_OpenBSD_sm_mbuf_c,v 1.7 2014/11/11 21:48:40 sthen Exp $
--- platform/OpenBSD/sm_mbuf.c.orig	Mon Nov  2 10:29:12 2009
+++ platform/OpenBSD/sm_mbuf.c	Tue Apr  5 11:18:29 2016
@@@@ -29,9 +29,11 @@@@
  */
 
 #include <sys/param.h>
+#include <sys/queue.h>
 #include <sys/mbuf.h>
 #include <sys/sysctl.h>
 #include <sys/errno.h>
+#include <sys/pool.h>
 
 #include <errno.h>
 #include <string.h>
@@@@ -64,7 +66,7 @@@@ get_mbuf(char *symon_buf, int maxlen, struct stream *s
 {
     struct mbstat mbstat;
     int npools;
-    struct pool pool, mbpool, mclpool;
+    struct kinfo_pool pool, mbpool, mclpool;
     int mib[4];
     size_t size;
     int i;
@@@@ -111,7 +113,7 @@@@ get_mbuf(char *symon_buf, int maxlen, struct stream *s
             warning("mbuf(%.200s) failed (sysctl() %.200s)", st->arg, strerror(errno));
             return (0);
         }
-        if (!strcmp(name, "mbpl")) {
+        if (!strcmp(name, "mbpl") || !strcmp(name, "mbufpl")) {
             bcopy(&pool, &mbpool, sizeof(pool));
             flag |= (1 << 0);
         } else if (!strcmp(name, "mclpl")) {
@


1.7
log
@cope with mbpl->mbufpl name change, problem reported by Atanas Vladimirov
@
text
@d1 1
a1 1
$OpenBSD: patch-platform_OpenBSD_sm_mbuf_c,v 1.6 2014/08/23 09:53:18 landry Exp $
d3 6
a8 2
+++ platform/OpenBSD/sm_mbuf.c	Tue Nov 11 21:47:25 2014
@@@@ -32,6 +32,7 @@@@
d16 1
a16 1
@@@@ -64,7 +65,7 @@@@ get_mbuf(char *symon_buf, int maxlen, struct stream *s
d25 1
a25 1
@@@@ -111,7 +112,7 @@@@ get_mbuf(char *symon_buf, int maxlen, struct stream *s
@


1.6
log
@fix build, now needs to include sys/pool.h
@
text
@d1 3
a3 3
$OpenBSD: patch-platform_OpenBSD_sm_mbuf_c,v 1.5 2014/07/04 22:23:01 sthen Exp $
--- platform/OpenBSD/sm_mbuf.c.orig	Mon Nov  2 11:29:12 2009
+++ platform/OpenBSD/sm_mbuf.c	Sat Aug 23 11:51:53 2014
d21 9
@


1.5
log
@fix following move from struct pool to struct kinfo_pool for userland
@
text
@d1 12
a12 4
$OpenBSD$
--- platform/OpenBSD/sm_mbuf.c.orig	Fri Jul  4 22:35:02 2014
+++ platform/OpenBSD/sm_mbuf.c	Fri Jul  4 22:40:21 2014
@@@@ -64,7 +64,7 @@@@ get_mbuf(char *symon_buf, int maxlen, struct stream *s
@


1.4
log
@update symon to 2.82, rolling in our patches. New version pointed out
by maintainer/upstream Willem Dijkstra.
@
text
@d1 12
a12 77
adapt to mbuf cluster changes in 4.4-current (mclpl -> mcl2k, mcl4k, [...]).

$OpenBSD: patch-platform_OpenBSD_sm_mbuf_c,v 1.3 2009/03/11 01:55:07 sthen Exp $
--- platform/OpenBSD/sm_mbuf.c.orig	Sun Feb 11 20:09:35 2007
+++ platform/OpenBSD/sm_mbuf.c	Wed Mar 11 01:42:38 2009
@@@@ -77,6 +77,8 @@@@ get_mbuf(char *symon_buf, int maxlen, struct stream *s
     int totmem, totused, totmbufs, totpct;
     u_int32_t stats[15];
 
+    totmem = totused = 0;
+
     mib[0] = CTL_KERN;
     mib[1] = KERN_MBSTAT;
     size = sizeof(mbstat);
@@@@ -114,24 +116,55 @@@@ get_mbuf(char *symon_buf, int maxlen, struct stream *s
         if (!strcmp(name, "mbpl")) {
             bcopy(&pool, &mbpool, sizeof(pool));
             flag |= 1;
-        } else if (!strcmp(name, "mclpl")) {
+        } else if (!strcmp(name, "mcl2k")) {
             bcopy(&pool, &mclpool, sizeof(pool));
+            totmem += mclpool.pr_npages * page_size;
+            totused += (mclpool.pr_nget - mclpool.pr_nput) * mclpool.pr_size;
             flag |= 2;
+        } else if (!strcmp(name, "mcl4k")) {
+            bcopy(&pool, &mclpool, sizeof(pool));
+            totmem += mclpool.pr_npages * page_size;
+            totused += (mclpool.pr_nget - mclpool.pr_nput) * mclpool.pr_size;
+            flag |= 4;
+        } else if (!strcmp(name, "mcl8k")) {
+            bcopy(&pool, &mclpool, sizeof(pool));
+            totmem += mclpool.pr_npages * page_size;
+            totused += (mclpool.pr_nget - mclpool.pr_nput) * mclpool.pr_size;
+            flag |= 8;
+        } else if (!strcmp(name, "mcl9k")) {
+            bcopy(&pool, &mclpool, sizeof(pool));
+            totmem += mclpool.pr_npages * page_size;
+            totused += (mclpool.pr_nget - mclpool.pr_nput) * mclpool.pr_size;
+            flag |= 16;
+        } else if (!strcmp(name, "mcl12k")) {
+            bcopy(&pool, &mclpool, sizeof(pool));
+            totmem += mclpool.pr_npages * page_size;
+            totused += (mclpool.pr_nget - mclpool.pr_nput) * mclpool.pr_size;
+            flag |= 32;
+        } else if (!strcmp(name, "mcl16k")) {
+            bcopy(&pool, &mclpool, sizeof(pool));
+            totmem += mclpool.pr_npages * page_size;
+            totused += (mclpool.pr_nget - mclpool.pr_nput) * mclpool.pr_size;
+            flag |= 64;
+        } else if (!strcmp(name, "mcl64k")) {
+            bcopy(&pool, &mclpool, sizeof(pool));
+            totmem += mclpool.pr_npages * page_size;
+            totused += (mclpool.pr_nget - mclpool.pr_nput) * mclpool.pr_size;
+            flag |= 128;
         }
-        if (flag == 3)
+        if (flag == 255)
             break;
     }
-    if (flag != 3) {
-        warning("mbuf(%.200s) failed (flag != 3)", st->arg);
+    if (flag != 255) {
+        warning("mbuf(%.200s) failed (flag != 255)", st->arg);
         return 0;
     }
 
     totmbufs = 0;
     for (i = 0; i < nmbtypes; ++i)
         totmbufs += mbstat.m_mtypes[i];
-    totmem = (mbpool.pr_npages + mclpool.pr_npages) * page_size;
-    totused = (mbpool.pr_nget - mbpool.pr_nput) * mbpool.pr_size +
-        (mclpool.pr_nget - mclpool.pr_nput) * mclpool.pr_size;
+    totmem += mbpool.pr_npages * page_size;
+    totused += (mbpool.pr_nget - mbpool.pr_nput) * mbpool.pr_size;
     totpct = (totmem == 0) ? 0 : ((totused * 100) / totmem);
 
     stats[0] = totmbufs;
@


1.3
log
@- update to symon 2.79
- fix mbuf monitor following h2k8 mclpl changes

no reply from the maintainer in a couple of days; my syslog server
isn't super-happy about how often the problem with mbuf gets logged,
so committing anyway. tests/feedback from Alexander Hall and Markus
Lude - thanks.
@
text
@d3 1
a3 1
$OpenBSD$
@


1.2
log
@update to 2.73, ok bernd
@
text
@d1 8
a8 8
$OpenBSD: patch-platform_OpenBSD_sm_mbuf_c,v 1.1 2005/12/24 08:48:49 pvalchev Exp $
--- platform/OpenBSD/sm_mbuf.c.orig	Fri Dec 23 23:49:41 2005
+++ platform/OpenBSD/sm_mbuf.c	Fri Dec 23 23:49:52 2005
@@@@ -33,8 +33,8 @@@@
 #include <sys/param.h>
 #include <sys/mbuf.h>
 #include <sys/sysctl.h>
-#include <sys/errno.h>
d10 56
a65 3
+#include <errno.h>
 #include <string.h>
 #include <unistd.h>
d67 11
@


1.1
log
@include errno.h not sys/errno.h
@
text
@d1 1
a1 1
$OpenBSD$
@

