head	1.8;
access;
symbols
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6;
locks; strict;
comment	@# @;


1.8
date	2016.05.26.12.22.40;	author ajacoutot;	state dead;
branches;
next	1.7;
commitid	NqaGjSxSblrBBora;

1.7
date	2015.09.11.07.19.12;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	HJShILPjWADOH5WP;

1.6
date	2015.07.15.19.43.26;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	HGG76OJu1bJsl4R4;

1.5
date	2015.07.15.03.09.35;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	hFBJkwfWJlkq0loz;

1.4
date	2015.07.11.16.29.25;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	Rx1yI2jHHhVUNF5f;

1.3
date	2015.07.08.08.16.18;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	8AFnyCdcUHXd1tr8;

1.2
date	2015.07.07.11.25.51;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	d246wCK8iRXv39hv;

1.1
date	2015.07.03.12.08.14;	author ajacoutot;	state Exp;
branches;
next	;
commitid	gHV34hVeB4o6a9Eb;


desc
@@


1.8
log
@Update to salt-2016.3.0.
@
text
@$OpenBSD: patch-salt_modules_openbsdrcctl_py,v 1.7 2015/09/11 07:19:12 ajacoutot Exp $

https://github.com/saltstack/salt/commit/487c05f9e6c427f10fc9cb37d3bbd81f84bd01c2

--- salt/modules/openbsdrcctl.py.orig	Wed Sep  9 19:00:15 2015
+++ salt/modules/openbsdrcctl.py	Fri Sep 11 09:12:29 2015
@@@@ -91,12 +91,9 @@@@ def get_all():
 
         salt '*' service.get_all
     '''
-    badvar = ("_timeout", "_user")
     ret = []
     service = _cmd()
-    for svc in __salt__['cmd.run']('{0} getall'.format(service)).splitlines():
-        svc = re.sub('(_flags|)=.*$', '', svc)
-        if not svc.endswith(badvar):
+    for svc in __salt__['cmd.run']('{0} ls all'.format(service)).splitlines():
             ret.append(svc)
     return sorted(ret)
 
@@@@ -111,14 +108,10 @@@@ def get_disabled():
 
         salt '*' service.get_disabled
     '''
-    badvar = ("_timeout", "_user")
     ret = []
     service = _cmd()
-    for svc in __salt__['cmd.run']('{0} getall'.format(service)).splitlines():
-        if svc.endswith("=NO"):
-            svc = re.sub('(_flags|)=.*$', '', svc)
-            if not svc.endswith(badvar):
-                ret.append(svc)
+    for svc in __salt__['cmd.run']('{0} ls off'.format(service)).splitlines():
+            ret.append(svc)
     return sorted(ret)
 
 
@@@@ -132,14 +125,10 @@@@ def get_enabled():
 
         salt '*' service.get_enabled
     '''
-    badvar = ("_timeout", "_user")
     ret = []
     service = _cmd()
-    for svc in __salt__['cmd.run']('{0} getall'.format(service)).splitlines():
-        if not svc.endswith("=NO"):
-            svc = re.sub('(_flags|)=.*$', '', svc)
-            if not svc.endswith(badvar):
-                ret.append(svc)
+    for svc in __salt__['cmd.run']('{0} ls on'.format(service)).splitlines():
+            ret.append(svc)
     return sorted(ret)
 
 
@


1.7
log
@Update to salt-2015.8.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-salt_modules_openbsdrcctl_py,v 1.6 2015/07/15 19:43:26 ajacoutot Exp $
@


1.6
log
@Pushed upstream.
@
text
@d1 1
a1 1
$OpenBSD: patch-salt_modules_openbsdrcctl_py,v 1.5 2015/07/15 03:09:35 ajacoutot Exp $
d5 3
a7 26
From 7ee5a53948d6db8fb2e06191cf6bbf779164e033 Mon Sep 17 00:00:00 2001
From: Justin Findlay <jfindlay@@gmail.com>
Date: Tue, 7 Jul 2015 16:15:47 -0600
Subject: [PATCH] replace shell code with native python code

From 113c56a8da7a5b8fcf9f634a2c197211fc78f0e7 Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@bsdfrog.org>
Date: Tue, 6 Jan 2015 16:23:11 +0100
Subject: [PATCH 1/2] openbsdrcctl: fix code to match new rcctl(8) syntax.

From 7b99eeb6abe96c714fe720a0b1beb5a4af14f29f Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@bsdfrog.org>
Date: Tue, 6 Jan 2015 18:14:23 +0100
Subject: [PATCH 2/2] openbsdrcctl: turn badvar into a tuple and fix lint warnings

--- salt/modules/openbsdrcctl.py.orig	Tue Jul  7 22:42:37 2015
+++ salt/modules/openbsdrcctl.py	Wed Jul 15 21:42:51 2015
@@@@ -6,7 +6,6 @@@@ from __future__ import absolute_import
 
 # Import python libs
 import os
-import re
 
 # Import salt libs
 import salt.utils
@@@@ -61,7 +60,7 @@@@ def available(name):
d9 1
a9 8
         salt '*' service.available sshd
     '''
-    cmd = '{0} status {1}'.format(_cmd(), name)
+    cmd = '{0} get {1}'.format(_cmd(), name)
     if __salt__['cmd.retcode'](cmd) == 2:
         return False
     return True
@@@@ -93,8 +92,7 @@@@ def get_all():
d11 1
d14 1
a14 1
-    for svc in __salt__['cmd.run']('{0} status'.format(service)).splitlines():
d16 1
d18 1
a18 1
         ret.append(svc)
d21 3
a23 1
@@@@ -111,10 +109,8 @@@@ def get_disabled():
d25 1
d28 1
a28 1
-    for svc in __salt__['cmd.run']('{0} status'.format(service)).splitlines():
d31 2
a32 1
-            ret.append(svc)
d34 1
a34 1
+        ret.append(svc)
d38 3
a40 1
@@@@ -130,10 +126,8 @@@@ def get_enabled():
d42 1
d45 1
a45 1
-    for svc in __salt__['cmd.run']('{0} status'.format(service)).splitlines():
d48 2
a49 1
-            ret.append(svc)
d51 1
a51 1
+        ret.append(svc)
a53 61
 
@@@@ -227,11 +221,19 @@@@ def enable(name, **kwargs):
         salt '*' service.enable <service name>
         salt '*' service.enable <service name> flags=<flags>
     '''
-    flags = _get_flags(**kwargs)
-    cmd = '{0} enable {1} flags {2}'.format(_cmd(), name, flags)
-    return not __salt__['cmd.retcode'](cmd)
+    stat_cmd = '{0} set {1} status on'.format(_cmd(), name)
+    stat_retcode = __salt__['cmd.retcode'](stat_cmd)
 
+    set_retcode = None
+    # only (re)set flags for services that have an rc.d(8) script
+    if os.path.exists('/etc/rc.d/{0}'.format(name)):
+        flags = _get_flags(**kwargs)
+        set_cmd = '{0} set {1} flags {2}'.format(_cmd(), name, flags)
+        set_retcode = __salt__['cmd.retcode'](set_cmd)
 
+    return not any([stat_retcode, set_retcode])
+
+
 def disable(name, **kwargs):
     '''
     Disable the named service to not start at boot.
@@@@ -242,7 +244,7 @@@@ def disable(name, **kwargs):
 
         salt '*' service.disable <service name>
     '''
-    cmd = '{0} disable {1}'.format(_cmd(), name)
+    cmd = '{0} set {1} status off'.format(_cmd(), name)
     return not __salt__['cmd.retcode'](cmd)
 
 
@@@@ -256,7 +258,7 @@@@ def disabled(name):
 
         salt '*' service.disabled <service name>
     '''
-    cmd = '{0} status {1}'.format(_cmd(), name)
+    cmd = '{0} get {1} status'.format(_cmd(), name)
     return not __salt__['cmd.retcode'](cmd) == 0
 
 
@@@@ -275,16 +277,16 @@@@ def enabled(name, **kwargs):
         salt '*' service.enabled <service name>
         salt '*' service.enabled <service name> flags=<flags>
     '''
-    cmd = '{0} status {1}'.format(_cmd(), name)
+    cmd = '{0} get {1} status'.format(_cmd(), name)
     if not __salt__['cmd.retcode'](cmd):
         # also consider a service disabled if the current flags are different
         # than the configured ones so we have a chance to update them
         flags = _get_flags(**kwargs)
-        cur_flags = __salt__['cmd.run_stdout']('{0} status {1}'.format(_cmd(), name))
+        cur_flags = __salt__['cmd.run_stdout']('{0} get {1} flags'.format(_cmd(), name))
         if format(flags) == format(cur_flags):
             return True
         if not flags:
-            def_flags = __salt__['cmd.run_stdout']('{0} default {1}'.format(_cmd(), name))
+            def_flags = __salt__['cmd.run_stdout']('{0} getdef {1} flags'.format(_cmd(), name))
             if format(cur_flags) == format(def_flags):
                 return True
@


1.5
log
@Use new rcctl syntax.
@
text
@d1 1
a1 1
$OpenBSD: patch-salt_modules_openbsdrcctl_py,v 1.4 2015/07/11 16:29:25 ajacoutot Exp $
d3 1
a3 1
https://github.com/saltstack/salt/pull/25442
d21 10
a30 2
+++ salt/modules/openbsdrcctl.py	Wed Jul 15 02:48:16 2015
@@@@ -61,7 +61,7 @@@@ def available(name):
d39 1
a39 1
@@@@ -93,9 +93,8 @@@@ def get_all():
a44 1
-        ret.append(svc)
d46 1
a46 1
+            ret.append(svc)
d49 1
a49 2
 
@@@@ -111,9 +110,7 @@@@ def get_disabled():
d56 1
d58 1
a58 1
             ret.append(svc)
d61 2
a62 1
@@@@ -130,9 +127,7 @@@@ def get_enabled():
d69 1
d71 1
a71 1
             ret.append(svc)
d74 2
a75 1
@@@@ -227,11 +222,19 @@@@ def enable(name, **kwargs):
d98 1
a98 1
@@@@ -242,7 +245,7 @@@@ def disable(name, **kwargs):
d107 1
a107 1
@@@@ -256,7 +259,7 @@@@ def disabled(name):
d116 1
a116 1
@@@@ -275,16 +278,16 @@@@ def enabled(name, **kwargs):
@


1.4
log
@Update to salt-2015.5.3.
@
text
@d1 3
a3 1
$OpenBSD: patch-salt_modules_openbsdrcctl_py,v 1.3 2015/07/08 08:16:18 ajacoutot Exp $
d20 2
a21 2
--- salt/modules/openbsdrcctl.py.orig	Thu Jun  4 18:38:15 2015
+++ salt/modules/openbsdrcctl.py	Wed Jul  8 10:10:03 2015
d31 1
a31 3
@@@@ -91,11 +91,13 @@@@ def get_all():
 
         salt '*' service.get_all
a32 1
+    badvar = ("_timeout", "_user")
d36 1
a36 2
+    for svc in __salt__['cmd.run']('{0} getall'.format(service)).splitlines():
         svc = re.sub('(_flags|)=.*$', '', svc)
d38 1
a38 1
+        if not svc.endswith(badvar):
d43 1
a43 3
@@@@ -109,12 +111,14 @@@@ def get_disabled():
 
         salt '*' service.get_disabled
a44 1
+    badvar = ("_timeout", "_user")
d48 4
a51 6
+    for svc in __salt__['cmd.run']('{0} getall'.format(service)).splitlines():
         if svc.endswith("=NO"):
             svc = re.sub('(_flags|)=.*$', '', svc)
-            ret.append(svc)
+            if not svc.endswith(badvar):
+                ret.append(svc)
d54 1
a54 4
 
@@@@ -128,12 +132,14 @@@@ def get_enabled():
 
         salt '*' service.get_enabled
a55 1
+    badvar = ("_timeout", "_user")
d59 4
a62 6
+    for svc in __salt__['cmd.run']('{0} getall'.format(service)).splitlines():
         if not svc.endswith("=NO"):
             svc = re.sub('(_flags|)=.*$', '', svc)
-            ret.append(svc)
+            if not svc.endswith(badvar):
+                ret.append(svc)
d65 1
a65 2
 
@@@@ -227,11 +233,19 @@@@ def enable(name, **kwargs):
d88 1
a88 1
@@@@ -242,7 +256,7 @@@@ def disable(name, **kwargs):
d97 1
a97 1
@@@@ -256,7 +270,7 @@@@ def disabled(name):
d106 1
a106 1
@@@@ -275,16 +289,16 @@@@ def enabled(name, **kwargs):
@


1.3
log
@Better patch.
@
text
@d1 1
a1 1
$OpenBSD: patch-salt_modules_openbsdrcctl_py,v 1.2 2015/07/07 11:25:51 ajacoutot Exp $
d16 1
a16 2
Subject: [PATCH 2/2] openbsdrcctl: turn badvar into a tuple and fix lint
 warnings
@


1.2
log
@Unbreak service.enable.
python_shell now defaults to False but we need it enabled  in this case to
combine commands.

from "viq", thanks!
@
text
@d1 1
a1 1
$OpenBSD: patch-salt_modules_openbsdrcctl_py,v 1.1 2015/07/03 12:08:14 ajacoutot Exp $
d3 4
a6 1
https://github.com/saltstack/salt/pull/25201
d20 1
a20 1
+++ salt/modules/openbsdrcctl.py	Tue Jul  7 13:17:54 2015
d80 1
a80 1
@@@@ -227,11 +233,15 @@@@ def enable(name, **kwargs):
d87 4
a90 1
+    cmd = '{0} set {1} status on'.format(_cmd(), name)
d94 2
a95 3
+        cmd = cmd + ' && {0} set {1} flags {2}'.format(_cmd(), name, flags)
 
+    return not __salt__['cmd.retcode'](cmd, python_shell=True)
d97 2
d103 1
a103 1
@@@@ -242,7 +252,7 @@@@ def disable(name, **kwargs):
d112 1
a112 1
@@@@ -256,7 +266,7 @@@@ def disabled(name):
d121 1
a121 1
@@@@ -275,16 +285,16 @@@@ def enabled(name, **kwargs):
@


1.1
log
@Unbreak rcctl(1) usage.
@
text
@d1 3
a3 1
$OpenBSD$
d16 2
a17 2
--- salt/modules/openbsdrcctl.py.orig	Fri Jul  3 14:05:51 2015
+++ salt/modules/openbsdrcctl.py	Fri Jul  3 14:06:26 2015
d77 1
a77 1
@@@@ -227,8 +233,12 @@@@ def enable(name, **kwargs):
d83 1
a88 2
+
     return not __salt__['cmd.retcode'](cmd)
d90 1
d92 4
@

