head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.22
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.18
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.20
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.16
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.14
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.12
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	jasper_20090913:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2011.03.31.14.01.49;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2010.09.27.13.00.13;	author stephan;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.13.19.46.32;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.09.13.19.46.32;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@- update to 0.10
- remove USE_GROFF
@
text
@@@comment $OpenBSD: PLIST,v 1.2 2010/09/27 13:00:13 stephan Exp $
${P5SITE}/Capture/
${P5SITE}/Capture/Tiny.pm
@@man man/man3p/Capture::Tiny.3p
share/examples/p5-Capture-Tiny/
share/examples/p5-Capture-Tiny/rt-58208.pl
share/examples/p5-Capture-Tiny/tee.pl
@


1.2
log
@update to 0.08, ok jasper@@, 'looks ok' sthen@@.
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.1.1.1 2009/09/13 19:46:32 jasper Exp $
a3 1
${P5SITE}/Capture/Tiny.pod
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@comment $OpenBSD$
d7 1
@


1.1.1.1
log
@import p5-Capture-Tiny 0.06

Capture::Tiny provides a simple, portable way to capture anything sent
to STDOUT or STDERR, regardless of whether it comes from Perl, from XS
code or from an external program. Optionally, output can be tee(1)'d so
that it is captured while being passed through to the original handles.

from Stephan A. Rickauer, with some tweaks by me
@
text
@@
