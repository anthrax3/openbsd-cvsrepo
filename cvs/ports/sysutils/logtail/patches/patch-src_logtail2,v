head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.20
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.18
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.14
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.12
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	william_20120507:1.1.1.1
	william:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.05.08.19.05.06;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.08.02.54.10;	author william;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.05.08.02.54.10;	author william;	state Exp;
branches;
next	;


desc
@@


1.2
log
@LOCALBASE->TRUEPREFIX, pointed out by aja@@
@
text
@$OpenBSD: patch-src_logtail2,v 1.1.1.1 2012/05/08 02:54:10 william Exp $
--- src/logtail2.orig	Sat Mar  3 23:02:29 2012
+++ src/logtail2	Sat Mar  3 23:02:10 2012
@@@@ -109,7 +109,7 @@@@ sub determine_rotated_logfile {
     # function with dateext magic added.
 
     #print "determine_rotated_logfile $filename $inode\n";
-    for my $codefile (glob("/usr/share/logtail/detectrotate/*.dtr")) {
+    for my $codefile (glob("${TRUEPREFIX}/share/logtail/detectrotate/*.dtr")) {
         my $func = do $codefile;
         if (!$func) {
 	    print STDERR "cannot compile $codefile: $!";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d9 1
a9 1
+    for my $codefile (glob("${LOCALBASE}/share/logtail/detectrotate/*.dtr")) {
@


1.1.1.1
log
@Import logtail (from logcheck-1.3.14)

logtail displays lines from a standard text file and keeps track of the
offset of the end of the file so that subsequent runs only display new
lines. The file's inode is also recorded so that rotated logs can be
detected.

ok sthen
@
text
@@
