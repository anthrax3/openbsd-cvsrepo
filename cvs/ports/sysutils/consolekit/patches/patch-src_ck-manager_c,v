head	1.9;
access;
symbols
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2017.02.06.08.15.02;	author ajacoutot;	state Exp;
branches;
next	1.8;
commitid	fUEJWR81ZmoKRXLR;

1.8
date	2017.01.25.03.19.26;	author ajacoutot;	state Exp;
branches;
next	1.7;
commitid	kxOv9VWoA1y0TX7G;

1.7
date	2016.01.15.14.20.02;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	HxIN7n2ZVebDy3XQ;

1.6
date	2015.08.15.11.12.54;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	RKWZWmWhKNwhuQQN;

1.5
date	2015.02.25.10.35.06;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	XZ9AaQFF6qTlVTj4;

1.4
date	2013.10.09.16.43.13;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2011.04.28.13.08.33;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.27.22.15.38;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.13.14.52.33;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Pushed upstream.
@
text
@$OpenBSD: patch-src_ck-manager_c,v 1.8 2017/01/25 03:19:26 ajacoutot Exp $

From 6dcb5b04ecca9fcdb13b518924f6835909038b1c Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@openbsd.org>
Date: Wed, 25 Jan 2017 04:26:43 +0100
Subject: [PATCH] Add a few more display manager users.

--- src/ck-manager.c.orig	Wed Jan 25 04:14:39 2017
+++ src/ck-manager.c	Wed Jan 25 04:15:58 2017
@@@@ -1112,9 +1112,12 @@@@ session_is_real_user (CkSession *session,
         username = get_user_name (uid);
 
         /* filter out GDM/SDDM/KDM user */
-        if (g_strcmp0 (username, "gdm")  == 0 ||
-            g_strcmp0 (username, "sddm") == 0 ||
-            g_strcmp0 (username, "kdm") == 0) {
+        if (g_strcmp0 (username, "gdm")   == 0 ||
+            g_strcmp0 (username, "_gdm")  == 0 ||
+            g_strcmp0 (username, "sddm")  == 0 ||
+            g_strcmp0 (username, "_sddm") == 0 ||
+            g_strcmp0 (username, "kdm")   == 0 ||
+            g_strcmp0 (username, "_kdm")  == 0) {
                 ret = FALSE;
                 goto out;
         }
@


1.8
log
@Fix for OpenBSD VT device naming scheme.
Tweak the display manager users list.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ck-manager_c,v 1.7 2016/01/15 14:20:02 ajacoutot Exp $
d3 4
a6 1
XXX add a proper check and push upstream (adapt to OpenBSD system users naming)
@


1.7
log
@Update to consolekit2-1.0.1.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ck-manager_c,v 1.6 2015/08/15 11:12:54 ajacoutot Exp $
d5 3
a7 3
--- src/ck-manager.c.orig	Wed Jan 13 10:12:10 2016
+++ src/ck-manager.c	Fri Jan 15 13:56:39 2016
@@@@ -1112,9 +1112,9 @@@@ session_is_real_user (CkSession *session,
d14 3
a16 1
+        if (g_strcmp0 (username, "_gdm")  == 0 ||
d18 2
a19 1
+            g_strcmp0 (username, "_kdm") == 0) {
@


1.6
log
@Move to the ConsoleKit2 project and update to the newly released stable version:
consolekit2-1.0.0.
Committing early in the cycle to have time to catch any regression.
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- src/ck-manager.c.orig	Sat Aug 15 11:57:59 2015
+++ src/ck-manager.c	Sat Aug 15 11:58:12 2015
@@@@ -1051,8 +1051,8 @@@@ session_is_real_user (CkSession *session,
d10 1
a10 1
         /* filter out GDM/SDDM user */
d12 2
a13 1
-            g_strcmp0 (username, "sddm") == 0) {
d15 2
a16 1
+            g_strcmp0 (username, "_sddm") == 0) {
@


1.5
log
@Unbreak ck-launch-session by properly initializing len in get_kinfo_proc().
from jmatthew@@

No need to call sysctl(3) twice since we know exactly how many
structures it wants back: just one.
from guenther@@

While here, drop a bogus chunk.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ck-manager_c,v 1.4 2013/10/09 16:43:13 ajacoutot Exp $
d3 1
a3 3
XXX revert 4f88228f31a63c026c424a92827f26ad7535275c
The Kit people assume the world runs Linux and PAM, see
https://bugs.freedesktop.org/show_bug.cgi?id=28377
d5 4
a8 5
--- src/ck-manager.c.orig	Fri Jul 19 06:15:28 2013
+++ src/ck-manager.c	Wed Oct  9 18:17:24 2013
@@@@ -1659,175 +1659,13 @@@@ open_session_for_leader (CkManager             *manage
         dbus_g_method_return (context, cookie);
 }
d10 8
a17 174
-enum {
-        PROP_STRING,
-        PROP_BOOLEAN,
-};
-
-#define CK_TYPE_PARAMETER_STRUCT (dbus_g_type_get_struct ("GValueArray", \
-                                                          G_TYPE_STRING,  \
-                                                          G_TYPE_VALUE, \
-                                                          G_TYPE_INVALID))
-
-static gboolean
-_get_parameter (GPtrArray  *parameters,
-                const char *name,
-                int         prop_type,
-                gpointer   *value)
-{
-        gboolean ret;
-        int      i;
-
-        if (parameters == NULL) {
-                return FALSE;
-        }
-
-        ret = FALSE;
-
-        for (i = 0; i < parameters->len && ret == FALSE; i++) {
-                gboolean    res;
-                GValue      val_struct = { 0, };
-                char       *prop_name;
-                GValue     *prop_val;
-
-                g_value_init (&val_struct, CK_TYPE_PARAMETER_STRUCT);
-                g_value_set_static_boxed (&val_struct, g_ptr_array_index (parameters, i));
-
-                res = dbus_g_type_struct_get (&val_struct,
-                                              0, &prop_name,
-                                              1, &prop_val,
-                                              G_MAXUINT);
-                if (! res) {
-                        g_debug ("Unable to extract parameter input");
-                        goto cont;
-                }
-
-                if (prop_name == NULL) {
-                        g_debug ("Skipping NULL parameter");
-                        goto cont;
-                }
-
-                if (strcmp (prop_name, name) != 0) {
-                        goto cont;
-                }
-
-                switch (prop_type) {
-                case PROP_STRING:
-                        if (value != NULL) {
-                                *value = g_value_dup_string (prop_val);
-                        }
-                        break;
-                case PROP_BOOLEAN:
-                        if (value != NULL) {
-                                *(gboolean *)value = g_value_get_boolean (prop_val);
-                        }
-                        break;
-                default:
-                        g_assert_not_reached ();
-                        break;
-                }
-
-                ret = TRUE;
-
-        cont:
-                g_free (prop_name);
-                if (prop_val != NULL) {
-                        g_value_unset (prop_val);
-                        g_free (prop_val);
-                }
-        }
-
-        return ret;
-}
-
-static gboolean
-_verify_login_session_id_is_local (CkManager  *manager,
-                                   const char *login_session_id)
-{
-        GHashTableIter iter;
-        const char    *id;
-        CkSession     *session;
-
-        g_return_val_if_fail (CK_IS_MANAGER (manager), FALSE);
-
-        /* If any local session exists for the given login session id
-           then that means a trusted party has vouched for the
-           original login */
-
-        g_debug ("Looking for local sessions for login-session-id=%s", login_session_id);
-
-        session = NULL;
-        g_hash_table_iter_init (&iter, manager->priv->sessions);
-        while (g_hash_table_iter_next (&iter, (gpointer *)&id, (gpointer *)&session)) {
-                if (session != NULL) {
-                        gboolean is_local;
-                        char    *sessid;
-
-                        sessid = NULL;
-                        g_object_get (session,
-                                      "login-session-id", &sessid,
-                                      "is-local", &is_local,
-                                      NULL);
-                        if (g_strcmp0 (sessid, login_session_id) == 0 && is_local) {
-                                g_debug ("CkManager: found is-local=true on %s", id);
-                                return TRUE;
-                        }
-                }
-        }
-
-        return FALSE;
-}
-
 static void
-add_param_boolean (GPtrArray  *parameters,
-                   const char *key,
-                   gboolean    value)
-{
-        GValue   val = { 0, };
-        GValue   param_val = { 0, };
-
-        g_value_init (&val, G_TYPE_BOOLEAN);
-        g_value_set_boolean (&val, value);
-        g_value_init (&param_val, CK_TYPE_PARAMETER_STRUCT);
-        g_value_take_boxed (&param_val,
-                            dbus_g_type_specialized_construct (CK_TYPE_PARAMETER_STRUCT));
-        dbus_g_type_struct_set (&param_val,
-                                0, key,
-                                1, &val,
-                                G_MAXUINT);
-        g_value_unset (&val);
-
-        g_ptr_array_add (parameters, g_value_get_boxed (&param_val));
-}
-
-static void
 verify_and_open_session_for_leader (CkManager             *manager,
                                     CkSessionLeader       *leader,
-                                    GPtrArray             *parameters,
+                                    const GPtrArray       *parameters,
                                     DBusGMethodInvocation *context)
 {
-        /* Only allow a local session if originating from an existing
-           local session.  Effectively this means that only trusted
-           parties can create local sessions. */
-
-        g_debug ("CkManager: verifying session for leader");
-
-        if (parameters != NULL && ! _get_parameter (parameters, "is-local", PROP_BOOLEAN, NULL)) {
-                gboolean is_local;
-                char    *login_session_id;
-
-                g_debug ("CkManager: is-local has not been set, will inherit from existing login-session-id if available");
-
-                is_local = FALSE;
-
-                if (_get_parameter (parameters, "login-session-id", PROP_STRING, (gpointer *) &login_session_id)) {
-                        is_local = _verify_login_session_id_is_local (manager, login_session_id);
-                        g_debug ("CkManager: found is-local=%s", is_local ? "true" : "false");
-                }
-
-                add_param_boolean (parameters, "is-local", is_local);
-        }
-
+        /* for now don't bother verifying since we protect OpenSessionWithParameters */
         open_session_for_leader (manager,
                                  leader,
                                  parameters,
@


1.4
log
@Fix deprecated use of polkit_authority_get().
time_t fixe: GLib has a 'struct GTimeVal' with a long tv_sec...
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ck-manager_c,v 1.3 2011/04/28 13:08:33 ajacoutot Exp $
a6 2
Fix deprecated use of polkit_authority_get().

a186 19
@@@@ -2423,10 +2261,16 @@@@ register_manager (CkManager *manager)
         GError *error = NULL;
 
 #ifdef HAVE_POLKIT
-        manager->priv->pol_ctx = polkit_authority_get ();
+        manager->priv->pol_ctx = polkit_authority_get_sync (NULL, &error);
+        if (manager->priv->pol_ctx == NULL) {
+                if (error != NULL) {
+                        g_critical ("error getting polkit authority: %s", error->message);
+                        g_error_free (error);
+                }
+                exit (1);
+        }
 #endif
 
-        error = NULL;
         manager->priv->connection = dbus_g_bus_get (DBUS_BUS_SYSTEM, &error);
         if (manager->priv->connection == NULL) {
                 if (error != NULL) {
@


1.3
log
@Update to consolekit-0.4.4.
Make sure we don't try and use /proc.
s/KERN_PROC2/KERN_PROC

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ck-manager_c,v 1.2 2010/06/27 22:15:38 ajacoutot Exp $
d7 4
a10 2
--- src/ck-manager.c.orig	Tue Oct 26 16:34:03 2010
+++ src/ck-manager.c	Sat Dec  4 12:18:29 2010
d189 19
@


1.2
log
@Update to consolekit-0.4.1.
WIP, need uncommited stuffs and does wrong things for now, so it is still
marked as BROKEN.
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 2
Don't segfault if the seats file is invalid.
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=561106
d7 5
a11 3
--- src/ck-manager.c.orig	Thu Sep 24 07:10:07 2009
+++ src/ck-manager.c	Sun Jun 27 23:11:30 2010
@@@@ -2434,6 +2434,10 @@@@ add_seat_for_file (CkManager  *manager,
d13 174
a186 9
         seat = ck_seat_new_from_file (sid, filename);
 
+        if (seat == NULL) {
+                return;
+        }
+
         connect_seat_signals (manager, seat);
         if (!ck_seat_register (seat)) {
                 /* returns false if connection to bus fails */
@


1.1
log
@Bring in several fixes from FreeBSD and fd.o bugzilla.
Fix tty names, cmd arguments... Install the stop/restart scripts.
Remove policykit support for now.
@
text
@d3 2
a4 2
Allow shutdown on systems not using policykit.
https://bugzilla.gnome.org/show_bug.cgi?id=549150
d6 3
a8 8
--- src/ck-manager.c.orig	Wed Jul 30 23:53:07 2008
+++ src/ck-manager.c	Fri Nov 13 12:41:12 2009
@@@@ -1349,7 +1349,6 @@@@ ck_manager_restart (CkManager             *manager,
         }
 #else
         g_warning ("Compiled without PolicyKit or RBAC support!");
-        goto out;
 #endif
d10 1
a10 7
         g_debug ("ConsoleKit preforming Restart: %s", action);
@@@@ -1409,7 +1408,6 @@@@ ck_manager_stop (CkManager             *manager,
         }
 #else
         g_warning ("Compiled without PolicyKit or RBAC support!");
-        goto out;
 #endif
d12 7
a18 1
         g_debug ("Stopping system");
@

