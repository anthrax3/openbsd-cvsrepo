head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	landry_20160123:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.01.23.19.30.38;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	sMRe4TqACOsFkkd3;

1.1
date	2016.01.23.19.15.13;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	pH7AP6dS2qhyaeQc;

1.1.1.1
date	2016.01.23.19.15.13;	author landry;	state Exp;
branches;
next	;
commitid	pH7AP6dS2qhyaeQc;


desc
@@


1.2
log
@Fix TEST_DEPENDS.
@
text
@# $OpenBSD: Makefile,v 1.1.1.1 2016/01/23 19:15:13 landry Exp $

COMMENT =	synchronizes directories with remote targets upon changes
GH_PROJECT =	lsyncd
GH_ACCOUNT =	axkibe
GH_COMMIT =	cce7db5ebd352690917792848c2aea92c08efdd5
DISTNAME =	lsyncd-2.1.6
CATEGORIES =	sysutils

# GPLv2
PERMIT_PACKAGE_CDROM =	Yes

MODULES =	lang/lua devel/cmake

CONFIGURE_ENV =	CFLAGS="${CFLAGS} -I${LOCALBASE}/include/inotify/" \
		LDFLAGS="${LDFLAGS} -L${LOCALBASE}/lib/inotify -linotify -Wl,-rpath ${LOCALBASE}/lib/inotify"

# uses a2x for the manpage but it fails
#BUILD_DEPENDS =	textproc/asciidoc
RUN_DEPENDS =	net/rsync
LIB_DEPENDS =	${MODLUA_LIB_DEPENDS} \
		devel/libinotify

TEST_DEPENDS =	${RUN_DEPENDS} \
		devel/luaposix

TESTS =	churn-direct churn-rsyncssh exclude-rsyncssh schedule \
	churn-rsync exclude-rsync l4rsyncdata

WANTLIB +=	${MODLUA_WANTLIB} lib/inotify/inotify c m pthread

pre-configure:
	${SUBST_CMD} ${WRKSRC}/default-rsync.lua ${WRKSRC}/CMakeLists.txt

post-install:
	${INSTALL_DATA_DIR} ${PREFIX}/share/examples/lsyncd
	${INSTALL_DATA} ${WRKSRC}/examples/*.lua ${PREFIX}/share/examples/lsyncd

do-test:
	ln -sf ${WRKBUILD}/lsyncd ${WRKSRC}/lsyncd
.for f in ${TESTS}
	cd ${WRKSRC} && ${MODLUA_BIN} tests/${f}.lua || echo ${f} failed
.endfor

.include <bsd.port.mk>
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d24 1
a24 1
TEST_DEPENDS =	${_MODLUA_RUN_DEPENDS} \
@


1.1.1.1
log
@Import lsyncd 2.1.6.

Lsyncd watches a local directory tree using libinotify.  It aggregates
and combines events for a few seconds and then spawns one (or more)
process(es) to synchronize the changes. By default this is rsync. Lsyncd
is thus a light-weight live mirror solution that is comparatively easy
to install not requiring new filesystems or blockdevices and does not
hamper local filesystem performance.

ok ajacoutot@@
@
text
@@
