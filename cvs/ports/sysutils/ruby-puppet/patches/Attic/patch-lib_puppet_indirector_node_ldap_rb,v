head	1.4;
access;
symbols
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.8
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2013.03.08.16.12.48;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2012.10.28.18.48.45;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2010.11.17.13.07.17;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.04.07.20.57;	author robert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Split ruby-puppet:
* move the current port to ruby-puppet/3
* add a new puppet-2.7.X port under ruby-puppet/2

This allows us to ship with 2 different versions of Puppet. Since the
Enterprise version is still running 2.7, we want to have a matching
client because running puppet3 against a puppet2 server is highly
discouraged and will mostly no work correctly.

ok jasper@@, robert@@ (maintainer)
@
text
@$OpenBSD: patch-lib_puppet_indirector_node_ldap_rb,v 1.3 2012/10/28 18:48:45 robert Exp $
--- lib/puppet/indirector/node/ldap.rb.orig	Sat Oct 20 06:57:51 2012
+++ lib/puppet/indirector/node/ldap.rb	Sun Oct 28 19:09:31 2012
@@@@ -1,3 +1,4 @@@@
+require 'facter'
 require 'puppet/node'
 require 'puppet/indirector/ldap'
 
@@@@ -29,6 +30,9 @@@@ class Puppet::Node::Ldap < Puppet::Indirector::Ldap
   def find(request)
     names = [request.key]
     names << request.key.sub(/\..+/, '') if request.key.include?(".") # we assume it's an fqdn
+
+    defnode = Puppet::Node::Facts.find(request.key).values['defnode']
+    names << defnode if defnode
     names << "default"
 
     node = nil
@@@@ -179,6 +183,14 @@@@ class Puppet::Node::Ldap < Puppet::Indirector::Ldap
     parent_info = name2hash(parent) || raise(Puppet::Error.new("Could not find parent node '#{parent}'"))
     information[:classes] += parent_info[:classes]
     parent_info[:parameters].each do |param, value|
+      if (param =~ /^puppet[^class].*$/)
+          if information[:parameters][param].kind_of? String
+              information[:parameters][param] = information[:parameters][param].split("\n")
+          end
+          if information[:parameters][param]
+              information[:parameters][param] += parent_info[:parameters][param].to_a
+          end
+      end
       # Specifically test for whether it's set, so false values are handled correctly.
       information[:parameters][param] = value unless information[:parameters].include?(param)
     end
@


1.3
log
@update to 3.0.1
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_indirector_node_ldap_rb,v 1.2 2010/11/17 13:07:17 robert Exp $
@


1.2
log
@Update to 2.6.3 and make it possible to tell the server from the client
which default node to use in case LDAP is used by setting the FACTER_defnode
environment variable.
@
text
@d1 3
a3 3
$OpenBSD$
--- lib/puppet/indirector/node/ldap.rb.orig	Thu Sep 23 01:17:21 2010
+++ lib/puppet/indirector/node/ldap.rb	Fri Nov 12 11:15:22 2010
d19 1
a19 1
@@@@ -174,6 +178,14 @@@@ class Puppet::Node::Ldap < Puppet::Indirector::Ldap
@


1.1
log
@Update to 2.6.3rc and fix a file locking issue while using LDAP.
Also add a patch for the LDAP connections to make puppet retry
instead of just erroring out.
@
text
@d2 18
a19 3
--- lib/puppet/indirector/node/ldap.rb.orig	Fri Oct 29 00:15:08 2010
+++ lib/puppet/indirector/node/ldap.rb	Fri Oct 29 00:15:57 2010
@@@@ -174,6 +174,14 @@@@ class Puppet::Node::Ldap < Puppet::Indirector::Ldap
@

