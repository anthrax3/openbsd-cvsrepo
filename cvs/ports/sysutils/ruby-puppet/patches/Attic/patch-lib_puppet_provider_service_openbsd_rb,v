head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.03.08.16.12.48;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2012.09.19.09.56.01;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Split ruby-puppet:
* move the current port to ruby-puppet/3
* add a new puppet-2.7.X port under ruby-puppet/2

This allows us to ship with 2 different versions of Puppet. Since the
Enterprise version is still running 2.7, we want to have a matching
client because running puppet3 against a puppet2 server is highly
discouraged and will mostly no work correctly.

ok jasper@@, robert@@ (maintainer)
@
text
@$OpenBSD: patch-lib_puppet_provider_service_openbsd_rb,v 1.1 2012/09/19 09:56:01 robert Exp $
--- lib/puppet/provider/service/openbsd.rb.orig	Wed Sep 19 11:53:39 2012
+++ lib/puppet/provider/service/openbsd.rb	Wed Sep 19 11:53:35 2012
@@@@ -0,0 +1,38 @@@@
+Puppet::Type.type(:service).provide :openbsd, :parent => :init do
+
+  desc "Provider for OpenBSD."
+
+  confine :operatingsystem => [:openbsd]
+  defaultfor :operatingsystem => [:openbsd]
+
+  class << self
+    attr_accessor :defpath
+  end
+
+  @@defpath = "/etc/rc.d"
+
+  def startcmd
+    [self.initscript, :start]
+  end
+
+  def stopcmd
+    [self.initscript, :stop]
+  end
+
+  def statuscmd
+    [self.initscript, :check]
+  end
+
+  # A simple wrapper so execution failures are a bit more informative.
+  # If an exception occurs, we show a warning instead of an error.
+  def texecute(type, command, fof = true)
+    begin
+      # #565: Services generally produce no output, so squelch them.
+      execute(command, :failonfail => fof, :squelch => true)
+    rescue Puppet::ExecutionFailure => detail
+      @@resource.warning "Could not #{type} #{@@resource.ref}: #{detail}"
+    end
+    nil
+  end
+
+end
@


1.1
log
@update to puppet-2.7.19 and add the default rc.d service provider
to be used on openbsd
@
text
@d1 1
a1 1
$OpenBSD$
@

