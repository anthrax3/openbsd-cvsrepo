head	1.29;
access;
symbols
	OPENBSD_6_1:1.29.0.6
	OPENBSD_6_1_BASE:1.29
	OPENBSD_6_0:1.29.0.4
	OPENBSD_6_0_BASE:1.29
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.28.0.4
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.27.0.2
	OPENBSD_5_7_BASE:1.27
	OPENBSD_5_6:1.22.0.2
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.9.0.2
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.7.0.2;
locks; strict;
comment	@# @;


1.29
date	2015.08.24.11.24.26;	author jasper;	state Exp;
branches;
next	1.28;
commitid	hElSF294s8pOIWcp;

1.28
date	2015.04.07.17.05.57;	author sebastia;	state Exp;
branches;
next	1.27;
commitid	yjZTE26CgYYekgxk;

1.27
date	2014.11.06.20.28.16;	author jasper;	state Exp;
branches;
next	1.26;
commitid	pVIHLxmGAPbPk88F;

1.26
date	2014.11.04.19.49.12;	author jasper;	state Exp;
branches;
next	1.25;
commitid	ikoL8419Z8mZ3xjP;

1.25
date	2014.11.02.20.06.18;	author jasper;	state Exp;
branches;
next	1.24;
commitid	SdaBbng48SVCAUN3;

1.24
date	2014.10.29.19.35.31;	author jasper;	state Exp;
branches;
next	1.23;
commitid	fgL558T1Y1YT2XqD;

1.23
date	2014.09.07.18.16.42;	author jasper;	state dead;
branches;
next	1.22;
commitid	STfu20c85fpA9ykS;

1.22
date	2014.07.10.22.13.09;	author jasper;	state Exp;
branches;
next	1.21;
commitid	vveesAFuQbdTwxDe;

1.21
date	2014.07.10.14.22.49;	author jasper;	state Exp;
branches;
next	1.20;
commitid	xW1he1p9wbBOvvc2;

1.20
date	2014.06.11.18.24.05;	author jasper;	state Exp;
branches;
next	1.19;
commitid	W9VqVxptU1efC81q;

1.19
date	2014.05.15.20.17.16;	author jasper;	state Exp;
branches;
next	1.18;

1.18
date	2014.05.15.10.47.54;	author jasper;	state Exp;
branches;
next	1.17;

1.17
date	2014.05.05.12.17.18;	author jasper;	state Exp;
branches;
next	1.16;

1.16
date	2014.05.04.12.32.26;	author jasper;	state Exp;
branches;
next	1.15;

1.15
date	2014.04.21.22.47.26;	author jasper;	state Exp;
branches;
next	1.14;

1.14
date	2014.04.21.22.39.26;	author jasper;	state Exp;
branches;
next	1.13;

1.13
date	2014.04.21.19.12.13;	author jasper;	state Exp;
branches;
next	1.12;

1.12
date	2014.04.21.18.17.00;	author jasper;	state Exp;
branches;
next	1.11;

1.11
date	2014.04.21.17.23.19;	author jasper;	state Exp;
branches;
next	1.10;

1.10
date	2014.04.04.14.31.26;	author jasper;	state Exp;
branches;
next	1.9;

1.9
date	2013.12.21.15.06.02;	author jasper;	state Exp;
branches;
next	1.8;

1.8
date	2013.12.20.14.10.41;	author jasper;	state Exp;
branches;
next	1.7;

1.7
date	2013.12.04.09.23.39;	author jasper;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2013.11.26.09.59.02;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2013.09.13.07.20.30;	author jasper;	state dead;
branches;
next	1.4;

1.4
date	2013.08.14.07.48.05;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2013.08.07.07.19.30;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2013.08.06.18.21.27;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2013.08.06.18.17.36;	author jasper;	state Exp;
branches;
next	;

1.7.2.1
date	2013.12.15.19.44.32;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.29
log
@pkg_add doesn't set a non-zero return value upon failure, so check it's output
to determine if a package cannot be installed and fail hard if that's the case
instead of stating the package was succesfully installed.

ok sebastia@@
@
text
@$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.28 2015/04/07 17:05:57 sebastia Exp $

From a85e6635d608a280a1766d21da8d5d114b04034e Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Wed, 29 Oct 2014 16:23:39 +0100
Subject: [PATCH] (PUP-3604) Rework handling of :ensure with a version

Handle the flavor as a property, not as a parameter.

Handle errors from pkg_add

--- lib/puppet/provider/package/openbsd.rb.orig	Thu Aug  6 18:17:42 2015
+++ lib/puppet/provider/package/openbsd.rb	Fri Aug 21 15:03:15 2015
@@@@ -20,48 +20,49 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
   has_feature :install_options
   has_feature :uninstall_options
   has_feature :upgradeable
+  has_feature :flavorable
 
+  mk_resource_methods
+
   def self.instances
-    packages = []
+    # our regex for matching pkg_info output
+    regex = /^(.*)-(\d[^-]*)[-]?(\w*)(.*)$/
+    fields = [:name, :ensure, :flavor ]
 
     begin
-      execpipe(listcmd) do |process|
-        # our regex for matching pkg_info output
-        regex = /^(.*)-(\d[^-]*)[-]?(\w*)(.*)$/
-        fields = [:name, :ensure, :flavor ]
-        hash = {}
-
-        # now turn each returned line into a package object
-        process.each_line { |line|
-          if match = regex.match(line.split[0])
-            fields.zip(match.captures) { |field,value|
-              hash[field] = value
-            }
-
-            hash[:provider] = self.name
-
-            packages << new(hash)
-            hash = {}
-          else
-            unless line =~ /Updating the pkgdb/
-              # Print a warning on lines we can't match, but move
-              # on, since it should be non-fatal
-              warning("Failed to match line #{line}")
-            end
+      packages = pkginfo('-a')
+      packages.split("\n").collect do |package|
+        if match = regex.match(package.split[0])
+	  new( :name => match.captures[0],
+               :ensure => match.captures[1],
+               :flavor => match.captures[2],
+          )
+        else
+          unless line =~ /Updating the pkgdb/
+            # Print a warning on lines we can't match, but move
+            # on, since it should be non-fatal
+            warning("Failed to match line #{line}")
           end
-        }
+        end
       end
-
-      return packages
     rescue Puppet::ExecutionFailure
       return nil
     end
   end
 
-  def self.listcmd
-    [command(:pkginfo), "-a"]
+  def self.prefetch(resources)
+    packages = instances
+    resources.keys.each do |name|
+      if provider = packages.find{ |pkg| pkg.name == name }
+        resources[name].provider = provider
+      end
+    end
   end
 
+  def flavor=(value)
+    install
+  end
+
   def latest
     parse_pkgconf
 
@@@@ -149,31 +150,51 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
 
     if @@resource[:source][-1,1] == ::File::SEPARATOR
       e_vars = { 'PKG_PATH' => @@resource[:source] }
-      # In case of a real update (i.e., the package already exists) then
-      # pkg_add(8) can handle the flavors. However, if we're actually
-      # installing with 'latest', we do need to handle the flavors.
-      # So we always need to handle flavors ourselves as to not break installs.
-      if latest and resource[:flavor]
-        full_name = "#{resource[:name]}--#{resource[:flavor]}"
-      elsif latest
-        # Don't depend on get_version for updates.
-        full_name = @@resource[:name]
-      else
-        full_name = [ @@resource[:name], get_version || @@resource[:ensure], @@resource[:flavor] ].join('-').chomp('-').chomp('-')
-      end
+      full_name = get_full_name(latest)
     else
       e_vars = {}
       full_name = @@resource[:source]
     end
 
+    cmd << '-r'
     cmd << install_options
     cmd << full_name
 
     if latest
-      cmd.unshift('-rz')
+      cmd.unshift('-z')
     end
 
-    Puppet::Util.withenv(e_vars) { pkgadd cmd.flatten.compact }
+    # pkg_add(1) doesn't set the return value upon failure so we have to peek
+    # at it's output to see if something went wrong.
+    output = Puppet::Util.withenv(e_vars) { pkgadd cmd.flatten.compact }
+    if output.nil? or output.size == 0 or output =~ /Can't find /
+      self.fail "pkg_add returned: #{output.chomp}"
+    end
+  end
+
+  def get_full_name(latest = false)
+    # In case of a real update (i.e., the package already exists) then
+    # pkg_add(8) can handle the flavors. However, if we're actually
+    # installing with 'latest', we do need to handle the flavors. This is
+    # done so we can feed pkg_add(8) the full package name to install to
+    # prevent ambiguity.
+    if latest && resource[:flavor]
+      "#{resource[:name]}--#{resource[:flavor]}"
+    elsif latest
+      # Don't depend on get_version for updates.
+      @@resource[:name]
+    else
+      # If :ensure contains a version, use that instead of looking it up.
+      # This allows for installing packages with the same stem, but multiple
+      # version such as openldap-server.
+      if /(\d[^-]*)$/.match(@@resource[:ensure].to_s)
+        use_version = @@resource[:ensure]
+      else
+        use_version = get_version
+      end
+
+      [ @@resource[:name], use_version, @@resource[:flavor]].join('-').gsub(/-+$/, '')
+    end
   end
 
   def get_version
@


1.28
log
@Better handling of package flavors, treat flavors as properties instead
of a parameter to the resources. Fixes detection of installed package flavors,
and adds the flavor of a package to "puppet resource package" output.

Better handling of service_flags on service configuration, now allow to configure/set
flags before starting a service the first time. That makes services work that require
parameters to start up, and prevents services from running with wrong parameters.

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.27 2014/11/06 20:28:16 jasper Exp $
d10 4
a13 2
--- lib/puppet/provider/package/openbsd.rb.orig	Tue Jan 27 00:46:47 2015
+++ lib/puppet/provider/package/openbsd.rb	Tue Apr  7 11:46:59 2015
d93 1
a93 1
@@@@ -149,31 +150,46 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d124 7
a130 1
     Puppet::Util.withenv(e_vars) { pkgadd cmd.flatten.compact }
@


1.27
log
@sync with what's been merged upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.26 2014/11/04 19:49:12 jasper Exp $
d8 84
a91 3
--- lib/puppet/provider/package/openbsd.rb.orig	Mon Nov  3 23:23:13 2014
+++ lib/puppet/provider/package/openbsd.rb	Thu Nov  6 21:27:12 2014
@@@@ -149,18 +149,7 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d111 9
a119 1
@@@@ -174,6 +163,31 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
@


1.26
log
@refactor the code that builds up a package name to install into it's
own method
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.25 2014/11/02 20:06:18 jasper Exp $
d3 4
a6 1
https://github.com/puppetlabs/puppet/pull/3266
d8 2
a9 2
--- lib/puppet/provider/package/openbsd.rb.orig	Tue Oct 21 23:52:27 2014
+++ lib/puppet/provider/package/openbsd.rb	Tue Nov  4 19:49:20 2014
d30 1
a30 1
@@@@ -174,6 +163,30 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d39 4
a42 3
+    # installing with 'latest', we do need to handle the flavors.
+    # So we always need to handle flavors ourselves as to not break installs.
+    if latest and resource[:flavor]
d57 1
a57 1
+      [ @@resource[:name], use_version, @@resource[:flavor] ].join('-').chomp('-').chomp('-')
@


1.25
log
@link to upstream PR
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.24 2014/10/29 19:35:31 jasper Exp $
d6 15
a20 5
+++ lib/puppet/provider/package/openbsd.rb	Wed Oct 29 16:57:28 2014
@@@@ -159,7 +159,16 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
         # Don't depend on get_version for updates.
         full_name = @@resource[:name]
       else
d22 2
a23 11
+        # If :ensure contains a version, use that instead of looking it up.
+        # This allows for installing packages with the same stem, but multiple
+        # version such as openldap-server.
+        if /(\d[^-]*)$/.match(@@resource[:ensure].to_s)
+          use_version = @@resource[:ensure]
+        else
+          use_version = get_version
+        end
+
+        full_name = [ @@resource[:name], use_version, @@resource[:flavor] ].join('-').chomp('-').chomp('-')
       end
d26 32
@


1.24
log
@Allow for installing a specific version if multiple are found.
This Unbreaks installing specific versions of openldap-server, php, python, etc.

initial report and patch by sebastia@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 2
Allow for installing a specific version if multiple are found. Unbreaks installing
specific versions of openldap-server, php, python, etc.
@


1.23
log
@- update to puppet-3.7.0
* https://docs.puppetlabs.com/puppet/3.7/reference/release_notes.html

testing/ok sebastia@@
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.22 2014/07/10 22:13:09 jasper Exp $
d3 2
a4 4
From 3637c48d97e4ed9fddbad883cc1cce571270e187 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Mon, 21 Apr 2014 20:02:27 +0200
Subject: [PATCH] (PUP-1069) Implement feature :upgradeable for OpenBSD package  provider.
d6 15
a20 55
From e59b8a725e1b6324c9c4db81d0017f76b924eb88 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Tue, 22 Apr 2014 00:40:25 +0200
Subject: [PATCH] (PUP-2311) OpenBSD uninstall broken when multiple uninstall_options given

--- lib/puppet/provider/package/openbsd.rb.orig	Mon Jun  9 23:08:19 2014
+++ lib/puppet/provider/package/openbsd.rb	Thu Jul 10 16:23:31 2014
@@@@ -4,7 +4,9 @@@@ require 'puppet/provider/package'
 Puppet::Type.type(:package).provide :openbsd, :parent => Puppet::Provider::Package do
   desc "OpenBSD's form of `pkg_add` support."
 
-  commands :pkginfo => "pkg_info", :pkgadd => "pkg_add", :pkgdelete => "pkg_delete"
+  commands :pkginfo   => "pkg_info",
+           :pkgadd    => "pkg_add",
+           :pkgdelete => "pkg_delete"
 
   defaultfor :operatingsystem => :openbsd
   confine :operatingsystem => :openbsd
@@@@ -12,6 +14,7 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
   has_feature :versionable
   has_feature :install_options
   has_feature :uninstall_options
+  has_feature :upgradeable
 
   def self.instances
     packages = []
@@@@ -54,6 +57,60 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
     [command(:pkginfo), "-a"]
   end
 
+  def latest
+    parse_pkgconf
+
+    if @@resource[:source][-1,1] == ::File::SEPARATOR
+      e_vars = { 'PKG_PATH' => @@resource[:source] }
+    else
+      e_vars = {}
+    end
+
+    if @@resource[:flavor]
+      query = "#{@@resource[:name]}--#{@@resource[:flavor]}"
+    else
+      query = @@resource[:name]
+    end
+
+    output = Puppet::Util.withenv(e_vars) {pkginfo "-Q", query}.split('\n')
+
+    if output.nil? or output.size == 0
+      debug "Failed to query for #{query}"
+      return properties[:ensure]
+    else
+      # Remove all fuzzy matches first.
+      output = output.select {|p| p =~ /^#{resource[:name]}-(\d[^-]*)[-]?(\w*)/}.join.chomp
+      debug "pkg_info -Q for #{query}: #{output}"
+    end
d22 2
a23 56
+    if output =~ /^#{resource[:name]}-(\d[^-]*)[-]?(\w*)(-#{resource[:flavor]})? \(installed\)$/
+      debug "Package is already the latest available"
+      return properties[:ensure]
+    else
+      # Flavors need a little nudge in the right direction
+      match = /(^#{resource[:name]})-(\d[^-]*)[-]?(\w*)(-#{resource[:flavor]})?/.match(output)
+      debug "Latest available for #{query}: #{match[2]}"
+      if properties[:ensure].to_sym == :absent
+        return match[2]
+      end
+
+      vcmp = properties[:ensure].split('.').map{|s|s.to_i} <=> match[2].split('.').map{|s|s.to_i}
+      if vcmp > 0
+        debug "ensure: #{properties[:ensure]}"
+        # The locally installed package may actually be newer than what a mirror
+        # has. Log it at debug, but ignore it otherwise.
+        debug "Package #{resource[:name]} #{properties[:ensure]} newer then available #{match[2]}"
+        return properties[:ensure]
+      else
+        return match[2]
+      end
+    end
+  end
+
+  def update
+    self.install(true)
+  end
+
   def parse_pkgconf
     unless @@resource[:source]
       if Puppet::FileSystem.exist?("/etc/pkg.conf")
@@@@ -80,14 +137,25 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
     end
   end
 
-  def install
+  def install(latest = false)
     cmd = []
 
     parse_pkgconf
 
     if @@resource[:source][-1,1] == ::File::SEPARATOR
       e_vars = { 'PKG_PATH' => @@resource[:source] }
-      full_name = [ @@resource[:name], get_version || @@resource[:ensure], @@resource[:flavor] ].join('-').chomp('-').chomp('-')
+      # In case of a real update (i.e., the package already exists) then
+      # pkg_add(8) can handle the flavors. However, if we're actually
+      # installing with 'latest', we do need to handle the flavors.
+      # So we always need to handle flavors ourselves as to not break installs.
+      if latest and resource[:flavor]
+        full_name = "#{resource[:name]}--#{resource[:flavor]}"
+      elsif latest
+        # Don't depend on get_version for updates.
+        full_name = @@resource[:name]
+      else
+        full_name = [ @@resource[:name], get_version || @@resource[:ensure], @@resource[:flavor] ].join('-').chomp('-').chomp('-')
+      end
a25 33
       full_name = @@resource[:source]
@@@@ -96,16 +164,19 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
     cmd << install_options
     cmd << full_name
 
-    Puppet::Util.withenv(e_vars) { pkgadd cmd.flatten.compact.join(' ') }
+    if latest
+      cmd.unshift('-rz')
+    end
+
+    Puppet::Util.withenv(e_vars) { pkgadd cmd.flatten.compact }
   end
 
   def get_version
     execpipe([command(:pkginfo), "-I", @@resource[:name]]) do |process|
       # our regex for matching pkg_info output
-      regex = /^(.*)-(\d[^-]*)[-]?(\D*)(.*)$/
+      regex = /^(.*)-(\d[^-]*)[-]?(\w*)(.*)$/
       master_version = 0
       version = -1
-
       process.each_line do |line|
         if match = regex.match(line.split[0])
           # now we return the first version, unless ensure is latest
@@@@ -142,7 +213,7 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
   end
 
   def uninstall
-    pkgdelete uninstall_options.flatten.compact.join(' '), @@resource[:name]
+    pkgdelete uninstall_options.flatten.compact, @@resource[:name]
   end
 
   def purge
@


1.22
log
@Teach 'ensure => latest' how to deal with flavored packages. It would install
them fine, but fail on updating them.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.21 2014/07/10 14:22:49 jasper Exp $
@


1.21
log
@Fix an overaggresive check which is supposed to remove fuzzy matches, but
instead lost the version information and therefore puppet wouldn't realize a
package was already the latest available.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.20 2014/06/11 18:24:05 jasper Exp $
d14 1
a14 1
+++ lib/puppet/provider/package/openbsd.rb	Thu Jul 10 15:18:54 2014
d34 1
a34 1
@@@@ -54,6 +57,59 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d60 1
a60 1
+      output = output.select {|p| p =~ /^#{resource[:name]}-(\d[^-]*)[-]?(\w*)/ }.join.chomp
d64 1
a64 1
+    if output =~ /^#{resource[:name]}-(\d[^-]*)[-]?(\w*?)\s+\(installed\)$/
d68 2
a69 1
+      match = /(^#{resource[:name]})-(\d[^-]*)[-]?(\w*)/.match(output)
d95 1
a95 1
@@@@ -80,14 +136,25 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d123 1
a123 1
@@@@ -96,13 +163,17 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d142 4
a145 1
 
@


1.20
log
@support for "ensure => latest" merged upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.19 2014/05/15 20:17:16 jasper Exp $
d13 2
a14 2
--- lib/puppet/provider/package/openbsd.rb.orig	Thu May 15 01:10:29 2014
+++ lib/puppet/provider/package/openbsd.rb	Thu May 15 21:07:14 2014
d53 1
a53 1
+    output = Puppet::Util.withenv(e_vars) {pkginfo "-Q", query}
d56 1
a56 1
+      debug "Failed to query for #{resource[:name]}"
d60 2
a61 2
+      output = output.split.select {|p| p =~ /^#{resource[:name]}-(\d[^-]*)[-]?(\w*)/ }.join
+      debug "pkg_info -Q for #{resource[:name]}: #{output}"
d64 1
a64 1
+    if output =~ /^#{resource[:name]}-(\d[^-]*)[-]?(\w*) \(installed\)$/
d68 2
a69 2
+      match = /^(.*)-(\d[^-]*)[-]?(\w*)$/.match(output)
+      debug "Latest available for #{resource[:name]}: #{match[2]}"
@


1.19
log
@* update to puppet 3.6.0
- release notes at http://docs.puppetlabs.com/puppet/3.6/reference/release_notes.html
- please note that this release deprecates the use of "config file
  environments". if you haven't already done so, please switch to "directory
  environments" as explained here: http://docs.puppetlabs.com/puppet/latest/reference/environments.html
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.18 2014/05/15 10:47:54 jasper Exp $
d3 4
a6 2
(PUP-660) Implement feature :upgradeable for OpenBSD package provider.
https://github.com/puppetlabs/puppet/pull/2558
@


1.18
log
@patch for PUP-2311 was committed upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.17 2014/05/05 12:17:18 jasper Exp $
d11 2
a12 2
--- lib/puppet/provider/package/openbsd.rb.orig	Wed Apr 16 01:06:55 2014
+++ lib/puppet/provider/package/openbsd.rb	Mon May  5 16:14:08 2014
d140 1
a140 1
@@@@ -166,7 +237,7 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
@


1.17
log
@Better detection of new packages
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.16 2014/05/04 12:32:26 jasper Exp $
d6 4
a9 2
(PUP-2311) OpenBSD uninstall broken when multiple uninstall_options given
https://github.com/puppetlabs/puppet/pull/2563
@


1.16
log
@Fix typo in #get_version to unbreak matching versions
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.15 2014/04/21 22:47:26 jasper Exp $
d10 1
a10 1
+++ lib/puppet/provider/package/openbsd.rb	Tue Apr 22 00:36:32 2014
d30 1
a30 1
@@@@ -54,6 +57,53 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d56 1
a56 1
+      output = output.split.select! {|p| p =~ /^#{resource[:name]}-(\d[^-]*)[-]?(\w*)/ }.join
d66 7
a72 1
+      if properties[:ensure] > match[2]
d90 1
a90 1
@@@@ -80,14 +130,25 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d118 1
a118 1
@@@@ -96,13 +157,17 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d138 1
a138 1
@@@@ -166,7 +231,7 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
@


1.15
log
@update comment with upstream PR and bug ids
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.14 2014/04/21 22:39:26 jasper Exp $
d128 1
a128 1
+      regex = /^(.*)-(\d[^-]*)[-]?(\*)(.*)$/
@


1.14
log
@unbreak removing a package when multiple uninstall_options are passed
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.13 2014/04/21 19:12:13 jasper Exp $
d3 1
a3 1
(#23078) Implement feature :upgradeable for OpenBSD package provider.
d6 2
a7 1
#uninstall: unbreak when multiple uninstall_options are passed.
@


1.13
log
@don't throw exceptions when a package cannot be queried for
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.12 2014/04/21 18:17:00 jasper Exp $
d6 2
d9 1
a9 1
+++ lib/puppet/provider/package/openbsd.rb	Mon Apr 21 21:10:58 2014
d131 9
@


1.12
log
@update PR url
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.11 2014/04/21 17:23:19 jasper Exp $
d7 1
a7 1
+++ lib/puppet/provider/package/openbsd.rb	Mon Apr 21 19:20:48 2014
d27 1
a27 1
@@@@ -54,6 +57,55 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
a47 3
+    # Remove all fuzzy matches first.
+    output = output.split.select! {|p| p =~ /^#{resource[:name]}-(\d[^-]*)[-]?(\w*)/ }.join
+
d52 2
a53 1
+      output.chomp!
d81 1
a81 1
@@@@ -80,14 +132,25 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d109 1
a109 1
@@@@ -96,13 +159,17 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
@


1.11
log
@improve ensure=>latest a great deal by avoiding fuzzy matches, but do use
fuzzy matching for updating. also avoid calling #get_version and just let
pkg_add -rz do the right thing.

also unbreak flavored package installation.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.10 2014/04/04 14:31:26 jasper Exp $
d4 1
a4 1
https://github.com/puppetlabs/puppet/pull/2033
@


1.10
log
@update to puppet-3.5.0, please refer to the release notes for detailed
information about the changes:
http://docs.puppetlabs.com/puppet/latest/reference/release_notes.html#puppet-350
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.9 2013/12/21 15:06:02 jasper Exp $
d6 14
a19 3
--- lib/puppet/provider/package/openbsd.rb.orig	Thu Apr  3 20:12:09 2014
+++ lib/puppet/provider/package/openbsd.rb	Fri Apr  4 16:12:46 2014
@@@@ -12,6 +12,7 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d27 1
a27 1
@@@@ -54,6 +55,46 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d40 10
a49 1
+    output = Puppet::Util.withenv(e_vars) {pkginfo "-Q", resource[:name]}
d51 2
a52 2
+    if output.nil? or output.size == 0 or output =~ /Error from /
+      Puppet.debug("Failed to query for #{resource[:name]}")
d56 1
a56 1
+      Puppet.debug("pkg_info -Q for #{resource[:name]}: #{output}")
d60 1
a60 1
+      Puppet.debug("Package is already the latest available")
d64 1
a64 1
+      Puppet.debug("Latest available for #{resource[:name]}: #{match[2]}")
d68 1
a68 1
+        Puppet.debug("Package #{resource[:name]} #{properties[:ensure]} newer then available #{match[2]}")
d83 1
a83 1
@@@@ -80,7 +121,7 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
a91 2
@@@@ -94,6 +135,15 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
     end
d93 19
d113 5
a117 7
+
+    # In case of a real update (i.e., the package already exists) then
+    # pkg_add(8) can handle the flavors. However, if we're actually
+    # installing with 'latest', we do need to handle the flavors.
+    # So we always need to handle flavors ourselves as to not break installs.
+    if latest and resource[:flavor]
+      full_name = "#{resource[:name]}--#{resource[:flavor]}"
d120 2
a121 1
     cmd << full_name
a122 2
     Puppet::Util.withenv(e_vars) { pkgadd cmd.flatten.compact.join(' ') }
@@@@ -102,14 +152,21 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d127 1
a127 1
+      regex = /^(.*)-(\d[^-]*)[-]?(\w*)(.*)$/
a130 14
       process.each_line do |line|
         if match = regex.match(line.split[0])
           # now we return the first version, unless ensure is latest
+          # also a flavor  needs to be taken into account as there
+          # may be a single package, which happens to be flavored.
           version = match.captures[1]
+          flavor = match.captures[2]
+          if !flavor.empty?
+            version = "#{version}-#{flavor}"
+          end
+
           return version unless @@resource[:ensure] == "latest"
 
           master_version = version unless master_version > version
@


1.9
log
@improve error handling for :upgradeable:
- if pkg_add reports one PKG_PATH is empty, don't cry wolf but just log it.
- if a locally installed package is newer than what is available on a mirror
  log it at debug level and don't try to pkg_add the locally installed version
  (only to have it fail).
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.8 2013/12/20 14:10:41 jasper Exp $
d6 2
a7 2
--- lib/puppet/provider/package/openbsd.rb.orig	Thu Dec 19 19:53:07 2013
+++ lib/puppet/provider/package/openbsd.rb	Sat Dec 21 15:51:53 2013
d16 1
a16 1
@@@@ -52,6 +53,46 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d62 2
a63 2
       if Puppet::FileSystem::File.exist?("/etc/pkg.conf")
@@@@ -78,7 +119,7 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d72 1
a72 1
@@@@ -92,6 +133,15 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d88 1
a88 1
@@@@ -100,14 +150,21 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
@


1.8
log
@- update to puppet-3.4.0
* full changelog http://docs.puppetlabs.com/puppet/3/reference/release_notes.html#puppet-340
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.7 2013/12/04 09:23:39 jasper Exp $
d7 1
a7 1
+++ lib/puppet/provider/package/openbsd.rb	Fri Dec 20 14:48:12 2013
d16 1
a16 1
@@@@ -52,6 +53,39 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d31 1
a31 1
+    if output.nil? or output.size == 0
d33 1
a33 1
+      return nil
d45 8
a52 1
+      return match[2]
d63 1
a63 1
@@@@ -78,7 +112,7 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d72 1
a72 1
@@@@ -92,6 +126,15 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d88 1
a88 1
@@@@ -100,14 +143,21 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
@


1.7
log
@- fix a small buglet when handling non-flavored packages; it didn't cause
any fallout (afaics), but it did break some spec tests.
- add link to upstream pr
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.6 2013/11/26 09:59:02 jasper Exp $
d6 2
a7 2
--- lib/puppet/provider/package/openbsd.rb.orig	Thu Nov  7 22:33:46 2013
+++ lib/puppet/provider/package/openbsd.rb	Wed Dec  4 10:21:37 2013
d55 1
a55 1
       if File.exist?("/etc/pkg.conf")
@


1.7.2.1
log
@update puppet to 3.3.2

this allows OpenBSD 5.4 agents to work correctly again with a puppet master
unning -current. puppet 3.3 has a new reporting format as well as support
for ensure => latest for packages. now one can use the same manifest for
5.4 and -current again.

note: libshadow was not imported into 5.4 so managing user passwords won't
work on 5.4 still.

discussed with sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.7 2013/12/04 09:23:39 jasper Exp $
@


1.6
log
@implement :upgradeable feature (ensure => latest) along with some fixes for flavor handling.
@
text
@d1 5
a5 1
$OpenBSD$
d7 1
a7 1
+++ lib/puppet/provider/package/openbsd.rb	Tue Nov 26 10:46:20 2013
d97 1
a97 1
+          if flavor
@


1.5
log
@- update to puppet-3.3.0
* all openbsd package provider features were merged upstream
@
text
@d1 12
a12 34
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.4 2013/08/14 07:48:05 jasper Exp $

From a5b8b96f703d932b90ce7461b18076bb32ee85b3 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Tue, 23 Jul 2013 16:55:55 +0200
Subject: [PATCH] Enhance OpenBSD pkg.conf handling

From ee14796e05bb05a6829644827e510b2b8e8076d4 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Thu, 1 Aug 2013 17:32:46 +0200
Subject: [PATCH] (22023) Implement :purgeable feature for OpenBSD package provider

From 19b0e78df7e010f0af111fda083fd7f87499f952 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Wed, 31 Jul 2013 12:20:15 +0200
Subject: [PATCH] (22004) Fix regex for retrieving flavor.

From 1b672b5d6c7e8976b3a79d52e8db5d0823f61144 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Wed, 31 Jul 2013 11:33:58 +0200
Subject: [PATCH] (22021) Implement (un)install_options for OpenBSD package provider.

--- lib/puppet/provider/package/openbsd.rb.orig	Fri Jul 12 02:15:45 2013
+++ lib/puppet/provider/package/openbsd.rb	Wed Aug 14 09:45:30 2013
@@@@ -17,7 +17,7 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
     begin
       execpipe(listcmd) do |process|
         # our regex for matching pkg_info output
-        regex = /^(.*)-(\d[^-]*)[-]?(\D*)(.*)$/
+        regex = /^(.*)-(\d[^-]*)[-]?(\w*)(.*)$/
         fields = [:name, :ensure, :flavor ]
         hash = {}
 
@@@@ -52,15 +52,18 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d16 27
a42 25
-  def install
-    should = @@resource.should(:ensure)
-
+  def parse_pkgconf
     unless @@resource[:source]
       if File.exist?("/etc/pkg.conf")
         File.open("/etc/pkg.conf", "rb").readlines.each do |line|
           if matchdata = line.match(/^installpath\s*=\s*(.+)\s*$/i)
             @@resource[:source] = matchdata[1]
-            break
+          elsif matchdata = line.match(/^installpath\s*\+=\s*(.+)\s*$/i)
+            if @@resource[:source].nil?
+              @@resource[:source] = matchdata[1]
+            else
+              @@resource[:source] += ":" + matchdata[1]
+            end
           end
         end
 
@@@@ -72,8 +75,16 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
         raise Puppet::Error,
         "You must specify a package source or configure an installpath in /etc/pkg.conf"
       end
-    end
+    end  
a43 3
 
+  def install
+    should = @@resource.should(:ensure)
d45 3
a47 1
+    cmd = []
d49 4
a52 7
+    parse_pkgconf
+
     if @@resource[:source][-1,1] == ::File::SEPARATOR
       e_vars = { 'PKG_PATH' => @@resource[:source] }
       full_name = [ @@resource[:name], get_version || @@resource[:ensure], @@resource[:flavor] ].join('-').chomp('-').chomp('-')
@@@@ -82,7 +93,10 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
       full_name = @@resource[:source]
d54 1
d56 3
a58 6
-     Puppet::Util.withenv(e_vars) { pkgadd full_name }
+    cmd << install_options
+    cmd << full_name
+
+    Puppet::Util.withenv(e_vars) { pkgadd cmd.flatten.compact.join(' ') }
   end
d60 2
a61 2
   def get_version
@@@@ -120,7 +134,43 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
a62 1
   end
d64 1
a64 3
+  def install_options
+    join_options(resource[:install_options])
+  end
d66 6
a71 25
+  def uninstall_options
+    join_options(resource[:uninstall_options])
+  end
+
+  # Turns a array of options into flags to be passed to pkg_add(8) and
+  # pkg_delete(8). The options can be passed as a string or hash. Note
+  # that passing a hash should only be used in case -Dfoo=bar must be passed,
+  # which can be accomplished with:
+  #     install_options => [ { '-Dfoo' => 'bar' } ]
+  # Regular flags like '-L' must be passed as a string.
+  # @@param options [Array]
+  # @@return Concatenated list of options
+  # @@api private
+  def join_options(options)
+    return unless options
+
+    options.collect do |val|
+      case val
+      when Hash
+        val.keys.sort.collect do |k|
+          "#{k}=#{val[k]}"
+        end.join(' ')
+      else
+        val
+      end
a72 1
+  end
d74 22
a95 4
   def uninstall
-    pkgdelete @@resource[:name]
+    pkgdelete uninstall_options.flatten.compact.join(' '), @@resource[:name]
+  end
d97 3
a99 4
+  def purge
+    pkgdelete "-c", "-q", @@resource[:name]
   end
 end
@


1.4
log
@implement (un)install_options for the openbsd package provider.

this allows to pass options directly to pkg_add/pkg_delete when needed.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.3 2013/08/07 07:19:30 jasper Exp $
@


1.3
log
@fix retrieving the flavor for packages in #instances

ok robert@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.2 2013/08/06 18:21:27 jasper Exp $
d6 1
a6 1
Subject: Enhance OpenBSD pkg.conf handling
d11 1
a11 1
Subject: (22023) Implement :purgeable feature for OpenBSD package provider
d16 1
a16 1
Subject: (22004) Fix regex for retrieving flavor.
d18 7
a24 2
--- lib/puppet/provider/package/openbsd.rb.orig	Wed Aug  7 09:16:36 2013
+++ lib/puppet/provider/package/openbsd.rb	Wed Aug  7 09:16:19 2013
d57 1
a57 1
@@@@ -72,8 +75,14 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d68 2
d75 15
a89 1
@@@@ -122,5 +131,9 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d91 32
d124 2
a125 1
     pkgdelete @@resource[:name]
@


1.2
log
@implement 'purgeable' feature for the OpenBSD package provider

ok robert@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.1 2013/08/06 18:17:36 jasper Exp $
d13 16
a28 2
--- lib/puppet/provider/package/openbsd.rb.orig	Tue Aug  6 20:19:30 2013
+++ lib/puppet/provider/package/openbsd.rb	Tue Aug  6 20:19:17 2013
@


1.1
log
@add a patch to improve pkg.conf handling in puppet; it can now deal with
appending to installpath with '+='.

ok robert@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD$
d8 4
a11 5
This moves the pkg.conf parsing into it's own method which allows for better
re-use. While here, support for parsing '+=' lines has been added. This allows
for appending to PKG_PATH, instead of merely setting it with '='.

(#21930) Enchance OpenBSD pkg.conf handling
d13 2
a14 2
--- lib/puppet/provider/package/openbsd.rb.orig	Mon Jul 29 21:35:19 2013
+++ lib/puppet/provider/package/openbsd.rb	Mon Jul 29 21:37:15 2013
d38 1
a38 1
@@@@ -72,7 +75,13 @@@@ Puppet::Type.type(:package).provide :openbsd, :parent 
d45 1
a45 1
+
d50 1
a50 1
 
d53 11
@

