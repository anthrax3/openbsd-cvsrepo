head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2;
locks; strict;
comment	@# @;


1.3
date	2013.01.11.16.47.28;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2011.11.14.19.16.51;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.09.03.07.54.33;	author landry;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to a newer unstable release: d-feet-0.3.2.
(upstream never released a stable version so far)
@
text
@$OpenBSD: patch-dfeet__util_py,v 1.2 2011/11/14 19:16:51 ajacoutot Exp $
--- dfeet/_util.py.orig	Tue Mar 15 22:45:55 2011
+++ dfeet/_util.py	Mon Nov 14 20:13:57 2011
@@@@ -1,18 +1,9 @@@@
 import os
+import subprocess
 
 # TODO: Check against other Unix's
 def get_proc_from_pid(pid):
-    procpath = '/proc/' + str(pid) + '/cmdline'
-    fullpath = ''
-
-    try:
-        f = open(procpath, 'r')
-        fullpath = f.readline().split('\0')
-        f.close()
-    except:
-        pass
-
-    return fullpath
+    return subprocess.Popen(['/bin/ps','-c', '-o', 'command=', '-p', str(pid)], stdout=subprocess.PIPE ).communicate()[0].strip().split('\0')
 
 # TODO: figure out more robust way to do this
 def get_ui_dir():
@


1.2
log
@Maintenance update to d-feet-0.1.14.
@
text
@d1 1
a1 1
$OpenBSD: patch-dfeet__util_py,v 1.1 2011/09/03 07:54:33 landry Exp $
@


1.1
log
@Replace an ugly use of procfs by a subprocess.Popen(ps) call to get the
pid of a given process name. Remove now useless MESSAGE and bump REVISION.
ok ok aja@@ (yes, 2 ok)
@
text
@d1 3
a3 3
$OpenBSD$
--- dfeet/_util.py.orig	Wed Feb  2 22:09:13 2011
+++ dfeet/_util.py	Wed Feb  2 22:34:04 2011
d24 1
a24 1
 def get_ui_di
@

