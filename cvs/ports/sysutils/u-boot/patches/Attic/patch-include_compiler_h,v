head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2017.01.10.02.35.52;	author jsg;	state dead;
branches;
next	1.3;
commitid	xJKBB2nDTUANekIM;

1.3
date	2016.10.30.04.16.34;	author jsg;	state Exp;
branches;
next	1.2;
commitid	BrsGlimLpCrs7QbF;

1.2
date	2016.09.14.05.52.25;	author jsg;	state dead;
branches;
next	1.1;
commitid	IxhhMkFIAZWITaCs;

1.1
date	2016.08.06.08.07.51;	author jsg;	state Exp;
branches;
next	;
commitid	Tav8CNJfHpo3msHO;


desc
@@


1.4
log
@Update to U-Boot 2017.01 and add/build a Sinovoip BPI-M2+ target
from kettenis along with a patch to remove use of a gnu sed
extension in a build command.

Tested on CuBox-i4Pro, BeagleBone Black and PandaBoard ES.
@
text
@$OpenBSD: patch-include_compiler_h,v 1.3 2016/10/30 04:16:34 jsg Exp $
--- include/compiler.h.orig	Sat Oct 22 12:27:18 2016
+++ include/compiler.h	Sat Oct 22 12:29:01 2016
@@@@ -52,6 +52,9 @@@@ typedef unsigned long ulong;
 # include <sys/endian.h> /* htole32 and friends */
 #elif defined(__OpenBSD__)
 # include <endian.h>
+# define __BYTE_ORDER BYTE_ORDER
+# define __LITTLE_ENDIAN LITTLE_ENDIAN
+# define __BIG_ENDIAN BIG_ENDIAN
 #endif
 
 #include <time.h>
@@@@ -84,20 +87,7 @@@@ typedef unsigned int uint;
 # define uswap_64(x) _uswap_64(x, )
 #endif
 
-#if defined(__OpenBSD__)
-#define cpu_to_le16(x)		htole16(x)
-#define cpu_to_le32(x)		htole32(x)
-#define cpu_to_le64(x)		htole64(x)
-#define le16_to_cpu(x)		letoh16(x)
-#define le32_to_cpu(x)		letoh32(x)
-#define le64_to_cpu(x)		letoh64(x)
-#define cpu_to_be16(x)		htobe16(x)
-#define cpu_to_be32(x)		htobe32(x)
-#define cpu_to_be64(x)		htobe64(x)
-#define be16_to_cpu(x)		betoh16(x)
-#define be32_to_cpu(x)		betoh32(x)
-#define be64_to_cpu(x)		betoh64(x)
-#elif __BYTE_ORDER == __LITTLE_ENDIAN
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 # define cpu_to_le16(x)		(x)
 # define cpu_to_le32(x)		(x)
 # define cpu_to_le64(x)		(x)
@


1.3
log
@fix the build of u-boot on big endian hosts

u-boot contains a static crc table with endian calls which requires the
endian calls to be macros.

lib/crc32.c:87: error: braced-group within expression allowed only inside a function

Define the glibc names in u-boot compiler.h as at least some parts of
the non-cross build assumes those names are present (ie crc32.c).

ok jca@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to U-Boot 2016.09

Remove patches to set board ids on novena and cubox/hummingboard we no
longer require.  Also remove some OpenBSD build fix patches that were
accepted upstream and the cm-fx6/utilite distro_bootcmd patch which
no longer cleanly applies.

Tested on CuBox-i4Pro, BeagleBone Black and PandaBoard ES.
@
text
@d1 4
a4 15
$OpenBSD: patch-include_compiler_h,v 1.1 2016/08/06 08:07:51 jsg Exp $
--- include/compiler.h.orig	Tue Jul 12 05:01:01 2016
+++ include/compiler.h	Sat Aug  6 17:11:46 2016
@@@@ -15,7 +15,7 @@@@
     defined(__sun__)	 || \
     defined(__APPLE__)
 # include <inttypes.h>
-#elif defined(__linux__) || defined(__WIN32__) || defined(__MINGW32__)
+#elif defined(__linux__) || defined(__WIN32__) || defined(__MINGW32__) || defined(__OpenBSD__)
 # include <stdint.h>
 #endif
 
@@@@ -50,6 +50,8 @@@@ typedef unsigned long ulong;
 #endif
 #ifdef __FreeBSD__
d6 5
a10 2
+#elif defined(__OpenBSD__)
+# include <endian.h>
d14 1
a14 1
@@@@ -82,7 +84,20 @@@@ typedef unsigned int uint;
d18 15
a32 15
-#if __BYTE_ORDER == __LITTLE_ENDIAN
+#if defined(__OpenBSD__)
+#define cpu_to_le16(x)		htole16(x)
+#define cpu_to_le32(x)		htole32(x)
+#define cpu_to_le64(x)		htole64(x)
+#define le16_to_cpu(x)		letoh16(x)
+#define le32_to_cpu(x)		letoh32(x)
+#define le64_to_cpu(x)		letoh64(x)
+#define cpu_to_be16(x)		htobe16(x)
+#define cpu_to_be32(x)		htobe32(x)
+#define cpu_to_be64(x)		htobe64(x)
+#define be16_to_cpu(x)		betoh16(x)
+#define be32_to_cpu(x)		betoh32(x)
+#define be64_to_cpu(x)		betoh64(x)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
@


1.1
log
@use endian.h macros and attempt to build on powerpc again
@
text
@d1 1
a1 1
$OpenBSD$
@

