head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.09.14.05.52.25;	author jsg;	state dead;
branches;
next	1.1;
commitid	IxhhMkFIAZWITaCs;

1.1
date	2016.06.18.03.04.44;	author jsg;	state Exp;
branches;
next	;
commitid	dbQLxAcI1nQ8ksjA;


desc
@@


1.2
log
@update to U-Boot 2016.09

Remove patches to set board ids on novena and cubox/hummingboard we no
longer require.  Also remove some OpenBSD build fix patches that were
accepted upstream and the cm-fx6/utilite distro_bootcmd patch which
no longer cleanly applies.

Tested on CuBox-i4Pro, BeagleBone Black and PandaBoard ES.
@
text
@$OpenBSD: patch-include_configs_cm_fx6_h,v 1.1 2016/06/18 03:04:44 jsg Exp $
--- include/configs/cm_fx6.h.orig	Tue May 17 00:40:32 2016
+++ include/configs/cm_fx6.h	Mon Jun 13 17:29:29 2016
@@@@ -11,6 +11,7 @@@@
 #ifndef __CONFIG_CM_FX6_H
 #define __CONFIG_CM_FX6_H
 
+#include <config_distro_defaults.h>
 #include "mx6_common.h"
 
 /* Machine config */
@@@@ -63,97 +64,43 @@@@
 #define CONFIG_ENV_SIZE			(8 * 1024)
 #define CONFIG_ENV_OFFSET		(768 * 1024)
 
+#ifndef CONFIG_SPL_BUILD
+#include <config_distro_defaults.h>
+#include <config_distro_bootcmd.h>
+
+#ifdef CONFIG_AHCI
+#define BOOT_TARGET_DEVICES_SCSI(func) func(SCSI, scsi, 0)
+#else
+#define BOOT_TARGET_DEVICES_SCSI(func)
+#endif
+
+#define BOOT_TARGET_DEVICES(func) \
+	func(MMC, mmc, 2) \
+	BOOT_TARGET_DEVICES_SCSI(func) \
+	func(PXE, pxe, na) \
+	func(DHCP, dhcp, na)
+
 #define CONFIG_EXTRA_ENV_SETTINGS \
 	"stdin=serial,usbkbd\0" \
 	"stdout=serial,vga\0" \
 	"stderr=serial,vga\0" \
 	"panel=HDMI\0" \
-	"autoload=no\0" \
-	"kernel=uImage-cm-fx6\0" \
-	"script=boot.scr\0" \
 	"dtb=cm-fx6.dtb\0" \
-	"bootm_low=18000000\0" \
 	"loadaddr=0x10800000\0" \
 	"fdtaddr=0x11000000\0" \
+        "fdt_addr_r=0x18000000\0" \
+        "pxefile_addr_r=0x17f00000\0" \
+        "scriptaddr=0x17e00000\0" \
+        "kernel_addr_r=0x11000000\0" \
+        "ramdisk_addr_r=0x18100000\0" \
+        "bootm_size=0x20000000\0" \
 	"console=ttymxc3,115200\0" \
 	"ethprime=FEC0\0" \
-	"video_hdmi=mxcfb0:dev=hdmi,1920x1080M-32@@50,if=RGB32\0" \
-	"video_dvi=mxcfb0:dev=dvi,1280x800M-32@@50,if=RGB32\0" \
-	"doboot=bootm ${loadaddr}\0" \
-	"doloadfdt=false\0" \
-	"setboottypez=setenv kernel zImage-cm-fx6;" \
-		"setenv doboot bootz ${loadaddr} - ${fdtaddr};" \
-		"setenv doloadfdt true;\0" \
-	"setboottypem=setenv kernel uImage-cm-fx6;" \
-		"setenv doboot bootm ${loadaddr};" \
-		"setenv doloadfdt false;\0"\
-	"mmcroot=/dev/mmcblk0p2 rw rootwait\0" \
-	"sataroot=/dev/sda2 rw rootwait\0" \
-	"nandroot=/dev/mtdblock4 rw\0" \
-	"nandrootfstype=ubifs\0" \
-	"mmcargs=setenv bootargs console=${console} root=${mmcroot} " \
-		"${video}\0" \
-	"sataargs=setenv bootargs console=${console} root=${sataroot} " \
-		"${video}\0" \
-	"nandargs=setenv bootargs console=${console} " \
-		"root=${nandroot} " \
-		"rootfstype=${nandrootfstype} " \
-		"${video}\0" \
-	"nandboot=if run nandloadkernel; then " \
-			"run nandloadfdt;" \
-			"run setboottypem;" \
-			"run storagebootcmd;" \
-			"run setboottypez;" \
-			"run storagebootcmd;" \
-		"fi;\0" \
-	"run_eboot=echo Starting EBOOT ...; "\
-		"mmc dev 2 && " \
-		"mmc rescan && mmc read 10042000 a 400 && go 10042000\0" \
-	"loadscript=load ${storagetype} ${storagedev} ${loadaddr} ${script};\0"\
-	"loadkernel=load ${storagetype} ${storagedev} ${loadaddr} ${kernel};\0"\
-	"loadfdt=load ${storagetype} ${storagedev} ${fdtaddr} ${dtb};\0" \
-	"bootscript=echo Running bootscript from ${storagetype} ...;" \
-		   "source ${loadaddr};\0" \
-	"nandloadkernel=nand read ${loadaddr} 0 780000;\0" \
-	"nandloadfdt=nand read ${fdtaddr} 780000 80000;\0" \
-	"setupmmcboot=setenv storagetype mmc; setenv storagedev 2;\0" \
-	"setupsataboot=setenv storagetype sata; setenv storagedev 0;\0" \
-	"setupnandboot=setenv storagetype nand;\0" \
-	"setupusbboot=setenv storagetype usb; setenv storagedev 0;\0" \
-	"storagebootcmd=echo Booting from ${storagetype} ...;" \
-			"run ${storagetype}args; run doboot;\0" \
-	"trybootk=if run loadkernel; then " \
-		"if ${doloadfdt}; then " \
-			"run loadfdt;" \
-		"fi;" \
-		"run storagebootcmd;" \
-		"fi;\0" \
-	"trybootsmz=if run loadscript; then " \
-			"run bootscript;" \
-		"fi;" \
-		"run setboottypem;" \
-		"run trybootk;" \
-		"run setboottypez;" \
-		"run trybootk;\0"
+	BOOTENV
 
-#define CONFIG_BOOTCOMMAND \
-	"run setupmmcboot;" \
-	"mmc dev ${storagedev};" \
-	"if mmc rescan; then " \
-		"run trybootsmz;" \
-	"fi;" \
-	"run setupusbboot;" \
-	"if usb start; then "\
-		"if run loadscript; then " \
-			"run bootscript;" \
-		"fi;" \
-	"fi;" \
-	"run setupsataboot;" \
-	"if sata init; then " \
-		"run trybootsmz;" \
-	"fi;" \
-	"run setupnandboot;" \
-	"run nandboot;"
+#else /* ifndef CONFIG_SPL_BUILD */
+#define CONFIG_EXTRA_ENV_SETTINGS
+#endif
 
 #define CONFIG_PREBOOT		"usb start"
 
@


1.1
log
@Patch u-boot targets to use "distro_bootcmd" so a u-boot script does not
have to be provided to load EFI payloads.  omap4/cubox-i/sunxi and many
others already default to this.  Only compile tested due to lack of hardware.

utilite
http://pkgs.fedoraproject.org/cgit/rpms/uboot-tools.git/plain/0005-port-utilite-to-distro-generic-boot-commands.patch
omap3 beagle
https://github.com/openSUSE/u-boot/commit/8ea945ff9d5f57f626167d41b1c59d9518fb60b2.patch
omap5/beagleboard x15
https://anonscm.debian.org/git/collab-maint/u-boot.git/plain/debian/patches/am57xx/omap5_distro_bootcmd?h=experimental-2016.07
@
text
@d1 1
a1 1
$OpenBSD$
@

