head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.4
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.1.1.1.0.2
	OPENBSD_6_0_BASE:1.1.1.1
	jsg_20160529:1.1.1.1
	jsg:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2016.12.11.14.08.39;	author patrick;	state Exp;
branches;
next	1.4;
commitid	zYBS7QFtr0N3LcvF;

1.4
date	2016.11.20.01.47.00;	author jsg;	state Exp;
branches;
next	1.3;
commitid	G0Ahrz7iXYG44YAS;

1.3
date	2016.11.01.04.13.52;	author jsg;	state Exp;
branches;
next	1.2;
commitid	mWAWEl7Wk8THJwFW;

1.2
date	2016.07.30.14.22.19;	author jsg;	state Exp;
branches;
next	1.1;
commitid	dk5OltKDeWXMfhC4;

1.1
date	2016.05.29.01.35.33;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bmQeGNtjT62xSFTz;

1.1.1.1
date	2016.05.29.01.35.33;	author jsg;	state Exp;
branches;
next	;
commitid	bmQeGNtjT62xSFTz;


desc
@@


1.5
log
@Split sysutils/u-boot into two FLAVORs so that we can use the same
port to compile 32- and 64-bit ARM u-boots.

ok and with help from jsg@@
@
text
@@@comment $OpenBSD: PLIST,v 1.4 2016/11/20 01:47:00 jsg Exp $
%%aarch64%%
%%arm%%
@


1.4
log
@update to u-boot 2016.11 and enable new Cubieboard4 target

Tested on cubox, panda and bbb.
@
text
@d1 3
a3 151
@@comment $OpenBSD: PLIST,v 1.3 2016/11/01 04:13:52 jsg Exp $
share/u-boot/
share/u-boot/A10-OLinuXino-Lime/
share/u-boot/A10-OLinuXino-Lime/u-boot
share/u-boot/A10-OLinuXino-Lime/u-boot-sunxi-with-spl.bin
share/u-boot/A10-OLinuXino-Lime/u-boot.bin
share/u-boot/A10-OLinuXino-Lime/u-boot.img
share/u-boot/A10s-OLinuXino-M/
share/u-boot/A10s-OLinuXino-M/u-boot
share/u-boot/A10s-OLinuXino-M/u-boot-sunxi-with-spl.bin
share/u-boot/A10s-OLinuXino-M/u-boot.bin
share/u-boot/A10s-OLinuXino-M/u-boot.img
share/u-boot/A20-OLinuXino-Lime/
share/u-boot/A20-OLinuXino-Lime/u-boot
share/u-boot/A20-OLinuXino-Lime/u-boot-sunxi-with-spl.bin
share/u-boot/A20-OLinuXino-Lime/u-boot.bin
share/u-boot/A20-OLinuXino-Lime/u-boot.img
share/u-boot/A20-OLinuXino-Lime2/
share/u-boot/A20-OLinuXino-Lime2/u-boot
share/u-boot/A20-OLinuXino-Lime2/u-boot-sunxi-with-spl.bin
share/u-boot/A20-OLinuXino-Lime2/u-boot.bin
share/u-boot/A20-OLinuXino-Lime2/u-boot.img
share/u-boot/A20-OLinuXino_MICRO/
share/u-boot/A20-OLinuXino_MICRO/u-boot
share/u-boot/A20-OLinuXino_MICRO/u-boot-sunxi-with-spl.bin
share/u-boot/A20-OLinuXino_MICRO/u-boot.bin
share/u-boot/A20-OLinuXino_MICRO/u-boot.img
share/u-boot/Bananapi/
share/u-boot/Bananapi/u-boot
share/u-boot/Bananapi/u-boot-sunxi-with-spl.bin
share/u-boot/Bananapi/u-boot.bin
share/u-boot/Bananapi/u-boot.img
share/u-boot/Bananapro/
share/u-boot/Bananapro/u-boot
share/u-boot/Bananapro/u-boot-sunxi-with-spl.bin
share/u-boot/Bananapro/u-boot.bin
share/u-boot/Bananapro/u-boot.img
share/u-boot/CHIP/
share/u-boot/CHIP/u-boot
share/u-boot/CHIP/u-boot-sunxi-with-spl.bin
share/u-boot/CHIP/u-boot.bin
share/u-boot/CHIP/u-boot.img
share/u-boot/Cubieboard/
share/u-boot/Cubieboard/u-boot
share/u-boot/Cubieboard/u-boot-sunxi-with-spl.bin
share/u-boot/Cubieboard/u-boot.bin
share/u-boot/Cubieboard/u-boot.img
share/u-boot/Cubieboard2/
share/u-boot/Cubieboard2/u-boot
share/u-boot/Cubieboard2/u-boot-sunxi-with-spl.bin
share/u-boot/Cubieboard2/u-boot.bin
share/u-boot/Cubieboard2/u-boot.img
share/u-boot/Cubieboard4/
share/u-boot/Cubieboard4/u-boot
share/u-boot/Cubieboard4/u-boot-sunxi-with-spl.bin
share/u-boot/Cubieboard4/u-boot.bin
share/u-boot/Cubieboard4/u-boot.img
share/u-boot/Cubietruck/
share/u-boot/Cubietruck/u-boot
share/u-boot/Cubietruck/u-boot-sunxi-with-spl.bin
share/u-boot/Cubietruck/u-boot.bin
share/u-boot/Cubietruck/u-boot.img
share/u-boot/Lamobo_R1/
share/u-boot/Lamobo_R1/u-boot
share/u-boot/Lamobo_R1/u-boot-sunxi-with-spl.bin
share/u-boot/Lamobo_R1/u-boot.bin
share/u-boot/Lamobo_R1/u-boot.img
share/u-boot/Linksprite_pcDuino/
share/u-boot/Linksprite_pcDuino/u-boot
share/u-boot/Linksprite_pcDuino/u-boot-sunxi-with-spl.bin
share/u-boot/Linksprite_pcDuino/u-boot.bin
share/u-boot/Linksprite_pcDuino/u-boot.img
share/u-boot/Linksprite_pcDuino3/
share/u-boot/Linksprite_pcDuino3/u-boot
share/u-boot/Linksprite_pcDuino3/u-boot-sunxi-with-spl.bin
share/u-boot/Linksprite_pcDuino3/u-boot.bin
share/u-boot/Linksprite_pcDuino3/u-boot.img
share/u-boot/Linksprite_pcDuino3_Nano/
share/u-boot/Linksprite_pcDuino3_Nano/u-boot
share/u-boot/Linksprite_pcDuino3_Nano/u-boot-sunxi-with-spl.bin
share/u-boot/Linksprite_pcDuino3_Nano/u-boot.bin
share/u-boot/Linksprite_pcDuino3_Nano/u-boot.img
share/u-boot/am335x_boneblack/
share/u-boot/am335x_boneblack/MLO
share/u-boot/am335x_boneblack/u-boot
share/u-boot/am335x_boneblack/u-boot.bin
share/u-boot/am335x_boneblack/u-boot.img
share/u-boot/am57xx_evm/
share/u-boot/am57xx_evm/MLO
share/u-boot/am57xx_evm/u-boot
share/u-boot/am57xx_evm/u-boot.bin
share/u-boot/am57xx_evm/u-boot.img
share/u-boot/cm_fx6/
share/u-boot/cm_fx6/SPL
share/u-boot/cm_fx6/u-boot
share/u-boot/cm_fx6/u-boot.bin
share/u-boot/cm_fx6/u-boot.img
share/u-boot/mx6cuboxi/
share/u-boot/mx6cuboxi/SPL
share/u-boot/mx6cuboxi/u-boot
share/u-boot/mx6cuboxi/u-boot.bin
share/u-boot/mx6cuboxi/u-boot.img
share/u-boot/mx6qsabrelite/
share/u-boot/mx6qsabrelite/u-boot
share/u-boot/mx6qsabrelite/u-boot.bin
share/u-boot/mx6qsabrelite/u-boot.imx
share/u-boot/nitrogen6q/
share/u-boot/nitrogen6q/u-boot
share/u-boot/nitrogen6q/u-boot.bin
share/u-boot/nitrogen6q/u-boot.imx
share/u-boot/novena/
share/u-boot/novena/SPL
share/u-boot/novena/u-boot
share/u-boot/novena/u-boot.bin
share/u-boot/novena/u-boot.img
share/u-boot/omap3_beagle/
share/u-boot/omap3_beagle/MLO
share/u-boot/omap3_beagle/u-boot
share/u-boot/omap3_beagle/u-boot.bin
share/u-boot/omap3_beagle/u-boot.img
share/u-boot/omap4_panda/
share/u-boot/omap4_panda/MLO
share/u-boot/omap4_panda/u-boot
share/u-boot/omap4_panda/u-boot.bin
share/u-boot/omap4_panda/u-boot.img
share/u-boot/riotboard/
share/u-boot/riotboard/u-boot
share/u-boot/riotboard/u-boot.bin
share/u-boot/riotboard/u-boot.imx
share/u-boot/rpi_2/
share/u-boot/rpi_2/u-boot
share/u-boot/rpi_2/u-boot.bin
share/u-boot/rpi_3_32b/
share/u-boot/rpi_3_32b/u-boot
share/u-boot/rpi_3_32b/u-boot.bin
share/u-boot/udoo/
share/u-boot/udoo/SPL
share/u-boot/udoo/u-boot
share/u-boot/udoo/u-boot.bin
share/u-boot/udoo/u-boot.img
share/u-boot/vexpress_ca15_tc2/
share/u-boot/vexpress_ca15_tc2/u-boot
share/u-boot/vexpress_ca15_tc2/u-boot.bin
share/u-boot/vexpress_ca9x4/
share/u-boot/vexpress_ca9x4/u-boot
share/u-boot/vexpress_ca9x4/u-boot.bin
share/u-boot/wandboard/
share/u-boot/wandboard/SPL
share/u-boot/wandboard/u-boot
share/u-boot/wandboard/u-boot.bin
share/u-boot/wandboard/u-boot.img
@


1.3
log
@disable the clearfog target until kwbimage is fixed

There is a use after free in kwbimage, found by building u-boot with the
use after free detection enabled in malloc.  When building the clearfog target:

  MKIMAGE u-boot-spl.kwb
Segmentation fault (core dumped)

kwbimage_generate -> image_version_file (alloc and free image_cfg global)
kwbimage_generate -> image_headersz_v1 -> image_count_options (image_cfg used)

It isn't clear to me if image_version_file should be inlined or another
approach taken, but as it stands it is clearly wrong.

The result of image_version_file is also never checked for -1 which multiple
paths in the function return.

I reported this on the u-boot list a week or so ago but no one has responded
so far.
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.2 2016/07/30 14:22:19 jsg Exp $
d53 5
@


1.2
log
@build some additional board configurations
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.1.1.1 2016/05/29 01:35:33 jsg Exp $
a87 5
share/u-boot/clearfog/
share/u-boot/clearfog/u-boot
share/u-boot/clearfog/u-boot-spl.kwb
share/u-boot/clearfog/u-boot.bin
share/u-boot/clearfog/u-boot.img
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@comment $OpenBSD$
d8 5
d38 5
d103 4
d126 4
@


1.1.1.1
log
@Import U-Boot 2016.05

U-Boot is a firmware for embedded boards based on PowerPC, ARM, MIPS and
several other processors, which can be installed in a boot ROM and used to
initialize and test the hardware or to download and run application code.

As ARM systems often do not come with firmware it must be supplied on
an SD card or MMC device to have a bootable system.

This port provides U-Boot for various boards using ARM processors.

armv7 requires the support for EFI payloads added in this release to run
the bootloader.  A proposed patch to prevent the EFI interface from
allocating pages from unpopulated memory by Alexander Graf is included
which will hopefully be part of future releases:
http://marc.info/?l=u-boot&m=146434472023891&w=2

Feedback from jca@@ and sthen@@.  ok sthen@@ on an earlier version without
the EFI patch.
@
text
@@
