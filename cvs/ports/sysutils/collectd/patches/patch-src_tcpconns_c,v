head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.2
	OPENBSD_6_1_BASE:1.12
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.12
date	2016.12.08.10.06.42;	author landry;	state Exp;
branches;
next	1.11;
commitid	sLC4CqWi31aPpIIY;

1.11
date	2016.12.04.16.56.53;	author jca;	state Exp;
branches;
next	1.10;
commitid	tOWzytmgr8lch7nR;

1.10
date	2016.12.03.11.44.41;	author landry;	state Exp;
branches;
next	1.9;
commitid	qj4URm0Db8feFZOv;

1.9
date	2016.12.02.15.50.29;	author jca;	state Exp;
branches;
next	1.8;
commitid	mADlZHEPibAUHfk6;

1.8
date	2016.06.13.09.12.40;	author landry;	state dead;
branches;
next	1.7;
commitid	i1EY2nNVfBI2xXZF;

1.7
date	2015.07.31.12.06.18;	author landry;	state Exp;
branches;
next	1.6;
commitid	ObMO1OkfbRwAOn4L;

1.6
date	2015.07.23.07.33.17;	author landry;	state dead;
branches;
next	1.5;
commitid	mFWJoll0XLJ4Rcdj;

1.5
date	2015.05.03.10.41.35;	author landry;	state Exp;
branches;
next	1.4;
commitid	BzZlj0UFCQtjwhCF;

1.4
date	2014.11.17.15.23.12;	author landry;	state Exp;
branches;
next	1.3;
commitid	HdF8K1MholO1YnwT;

1.3
date	2014.10.27.09.07.07;	author landry;	state Exp;
branches;
next	1.2;
commitid	6bTjJDhGm100kcqv;

1.2
date	2014.09.25.20.10.13;	author landry;	state Exp;
branches;
next	1.1;
commitid	ZsuZqR6aoW7tRgVV;

1.1
date	2013.12.28.20.44.21;	author krw;	state Exp;
branches;
next	;


desc
@@


1.12
log
@add link to upstream pull-request
@
text
@$OpenBSD: patch-src_tcpconns_c,v 1.11 2016/12/04 16:56:53 jca Exp $

https://github.com/collectd/collectd/issues/2061
https://github.com/collectd/collectd/pull/2088

--- src/tcpconns.c.orig	Wed Nov 30 09:52:01 2016
+++ src/tcpconns.c	Sun Dec  4 16:22:52 2016
@@@@ -62,11 +62,16 @@@@
 #include "common.h"
 #include "plugin.h"
 
-#if defined(__OpenBSD__) || defined(__NetBSD__)
+/* Maybe usable on NetBSD? */
+#if defined(__OpenBSD__)
+#define HAVE_KVM_GETFILES 1
+#endif
+
+#if defined(__NetBSD__)
 #undef HAVE_SYSCTLBYNAME /* force HAVE_LIBKVM_NLIST path */
 #endif
 
-#if !KERNEL_LINUX && !HAVE_SYSCTLBYNAME && !HAVE_LIBKVM_NLIST && !KERNEL_AIX
+#if !KERNEL_LINUX && !HAVE_SYSCTLBYNAME && !HAVE_KVM_GETFILES && !HAVE_LIBKVM_NLIST && !KERNEL_AIX
 #error "No applicable input method."
 #endif
 
@@@@ -105,15 +110,27 @@@@
 #include <netinet/tcpip.h>
 /* #endif HAVE_SYSCTLBYNAME */
 
-/* This is for OpenBSD and NetBSD. */
+#elif HAVE_KVM_GETFILES
+#include <sys/types.h>
+#include <sys/sysctl.h>
+#define _KERNEL /* for DTYPE_SOCKET */
+#include <sys/file.h>
+#undef _KERNEL
+
+#include <netinet/in.h>
+
+#include <kvm.h>
+/* #endif HAVE_KVM_GETFILES */
+
+/* This is for NetBSD. */
 #elif HAVE_LIBKVM_NLIST
 #include <arpa/inet.h>
 #include <net/route.h>
 #include <netdb.h>
 #include <netinet/in.h>
+#include <netinet/ip.h>
 #include <netinet/in_pcb.h>
 #include <netinet/in_systm.h>
-#include <netinet/ip.h>
 #include <netinet/ip_var.h>
 #include <netinet/tcp.h>
 #include <netinet/tcp_timer.h>
@@@@ -169,6 +186,19 @@@@ static const char *tcp_state[] = {"CLOSED",    "LISTEN
 #define TCP_STATE_MAX 10
 /* #endif HAVE_SYSCTLBYNAME */
 
+#elif HAVE_KVM_GETFILES
+static const char *tcp_state[] = {"CLOSED",    "LISTEN",      "SYN_SENT",
+                                  "SYN_RECV",  "ESTABLISHED", "CLOSE_WAIT",
+                                  "FIN_WAIT1", "CLOSING",     "LAST_ACK",
+                                  "FIN_WAIT2", "TIME_WAIT"};
+
+#define TCP_STATE_LISTEN 1
+#define TCP_STATE_MIN 0
+#define TCP_STATE_MAX 10
+
+static kvm_t *kvmd;
+/* #endif HAVE_KVM_GETFILES */
+
 #elif HAVE_LIBKVM_NLIST
 static const char *tcp_state[] = {"CLOSED",    "LISTEN",      "SYN_SENT",
                                   "SYN_RECV",  "ESTABLISHED", "CLOSE_WAIT",
@@@@ -775,6 +805,49 @@@@ static int conn_read(void) {
   return (0);
 } /* int conn_read */
   /* #endif HAVE_SYSCTLBYNAME */
+
+#elif HAVE_KVM_GETFILES
+
+static int conn_init(void) {
+  char buf[_POSIX2_LINE_MAX];
+
+  kvmd = kvm_openfiles(NULL, NULL, NULL, KVM_NO_FILES, buf);
+  if (kvmd == NULL) {
+    ERROR("tcpconns plugin: kvm_openfiles failed: %s", buf);
+    return (-1);
+  }
+
+  return (0);
+} /* int conn_init */
+
+static int conn_read(void) {
+  struct kinfo_file *kf;
+  int i, fcnt;
+
+  conn_reset_port_entry();
+
+  kf = kvm_getfiles(kvmd, KERN_FILE_BYFILE, DTYPE_SOCKET,
+		    sizeof(*kf), &fcnt);
+  if (kf == NULL) {
+    ERROR("tcpconns plugin: kvm_getfiles failed.");
+    return (-1);
+  }
+
+  for (i = 0; i < fcnt; i++) {
+    if (kf[i].so_protocol != IPPROTO_TCP)
+      continue;
+    if (kf[i].inp_fport == 0)
+      continue;
+    conn_handle_ports(ntohs(kf[i].inp_lport), ntohs(kf[i].inp_fport),
+                      kf[i].t_state);
+  }
+
+  conn_submit_all();
+
+  return (0);
+}
+/* int conn_read */
+/* #endif HAVE_KVM_GETFILES */
 
 #elif HAVE_LIBKVM_NLIST
 static int kread(u_long addr, void *buf, int size) {
@


1.11
log
@Unbreak the kvm(3) calls used by the processes and tcpconns plugins.

- patch the correct kvm_open call to use KVM_NO_FILES.  Also, use
  kvm_openfiles instead, as was probably intended
- add a new implementation for tcpconns, based on kvm_getfiles instead
  of peeking at kernel memory

ok landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_tcpconns_c,v 1.10 2016/12/03 11:44:41 landry Exp $
d4 1
@


1.10
log
@Update to collectd 5.6.2.

- put the write_riemann plugin in its own subpackage, depending on
  riemann-c-client.
- disable protobuf-c detection/dependency, used by two plugins we dont
  enable (pinba and grpc)
- fix some WANTLIB
- the processes and tcpconns plugin still seem to be busted, calling
  kvm_openfiles with O_RDONLY|KVM_NO_FILES is apparently not enough.
Interestingly, swap plugin (using the same code) works ?

Based on a diff from Pavel Korovin for 5.6.1, thanks!
@
text
@d1 45
a45 4
$OpenBSD$
--- src/tcpconns.c.orig	Sat Dec  3 11:49:16 2016
+++ src/tcpconns.c	Sat Dec  3 11:52:02 2016
@@@@ -111,9 +111,9 @@@@
d56 70
@


1.9
log
@Use KVM_NO_FILES to unbreak processes and swap plugins.

The tcpconns plugin needs more work, using kvm_getfiles(3) or sysctl(3).
Prodded by landry@@
@
text
@d2 13
a14 11
--- src/tcpconns.c.orig	Tue Nov 29 09:26:19 2016
+++ src/tcpconns.c	Tue Nov 29 09:27:06 2016
@@@@ -922,7 +922,7 @@@@ static int conn_init (void)
   };
   int status;
 
-  kvmd = kvm_openfiles (NULL, NULL, NULL, O_RDONLY, buf);
+  kvmd = kvm_openfiles (NULL, NULL, NULL, O_RDONLY|KVM_NO_FILES, buf);
   if (kvmd == NULL)
   {
     ERROR ("tcpconns plugin: kvm_openfiles failed: %s", buf);
@


1.8
log
@Update to collectd 5.5.1.

Remove patches merged upstream, add patch to fix the build from
https://github.com/collectd/collectd/issues/1674
@
text
@d1 10
a10 8
$OpenBSD: patch-src_tcpconns_c,v 1.7 2015/07/31 12:06:18 landry Exp $

https://github.com/collectd/collectd/commit/924c9af78d535f4920d73a2cd8e5090747479f0f

--- src/tcpconns.c.orig	Wed May 20 14:04:47 2015
+++ src/tcpconns.c	Fri Jul 31 13:58:04 2015
@@@@ -981,7 +981,9 @@@@ static int conn_read (void)
 #endif
d12 1
a12 19
     /* Read the pcb pointed to by `next' into `inpcb' */
-    kread ((u_long) next, &inpcb, sizeof (inpcb));
+    status = kread ((u_long) next, &inpcb, sizeof (inpcb));
+    if (status != 0)
+      return (-1);
 
     /* Advance `next' */
 #if defined(__OpenBSD__) || (defined(__NetBSD_Version__) && __NetBSD_Version__ > 699002700)
@@@@ -1004,7 +1006,9 @@@@ static int conn_read (void)
       continue;
 #endif
 
-    kread ((u_long) inpcb.inp_ppcb, &tcpcb, sizeof (tcpcb));
+    status = kread ((u_long) inpcb.inp_ppcb, &tcpcb, sizeof (tcpcb));
+    if (status != 0)
+      return (-1);
     conn_handle_ports (ntohs(inpcb.inp_lport), ntohs(inpcb.inp_fport), tcpcb.t_state);
   } /* while (next != head) */
 
@


1.7
log
@Backport fix for https://github.com/collectd/collectd/issues/1094

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.6
log
@Update to collectd 5.5.0.

Enable aggregation, curl_json, fhcount, log_logstash, memcached,
threshold, write_log & write_riemann plugins.
Add dependencies on devel/libyajl for curl_json & log_logstash and
devel/protobuf-c for write_riemann.
Add a README explaining how to run the daemon as _collectd user in case
you dont need the dns and ping plugins (the only ones requiring root).
Lots of patches merged upstream.

From Pavel Korovin with small tweaks by me, tested here on ppc.
@
text
@d1 8
a8 25
$OpenBSD: patch-src_tcpconns_c,v 1.5 2015/05/03 10:41:35 landry Exp $
https://github.com/collectd/collectd/pull/779
https://github.com/collectd/collectd/pull/808
--- src/tcpconns.c.orig	Thu Feb 26 11:43:48 2015
+++ src/tcpconns.c	Sat May  2 20:11:03 2015
@@@@ -909,7 +909,6 @@@@ static int conn_init (void)
 static int conn_read (void)
 {
   struct inpcbtable table;
-  struct inpcb *head;
   struct inpcb *next;
   struct inpcb inpcb;
   struct tcpcb tcpcb;
@@@@ -922,18 +921,16 @@@@ static int conn_read (void)
   if (status != 0)
     return (-1);
 
-  /* Get the `head' pcb */
-  head = (struct inpcb *) &(inpcbtable_ptr->inpt_queue);
   /* Get the first pcb */
-  next = (struct inpcb *)CIRCLEQ_FIRST (&table.inpt_queue);
+  next = (struct inpcb *)TAILQ_FIRST (&table.inpt_queue);
 
-  while (next != head)
+  while (next)
d11 4
a14 1
     kread ((u_long) next, &inpcb, sizeof (inpcb));
d17 9
a25 8
-    next = (struct inpcb *)CIRCLEQ_NEXT (&inpcb, inp_queue);
+    next = (struct inpcb *)TAILQ_NEXT (&inpcb, inp_queue);
 
     /* Ignore sockets, that are not connected. */
 #ifdef __NetBSD__
@@@@ -950,7 +947,7 @@@@ static int conn_read (void)
 
     kread ((u_long) inpcb.inp_ppcb, &tcpcb, sizeof (tcpcb));
d27 1
a27 4
-  } /* while (next != head) */
+  } /* while (next) */
 
   conn_submit_all ();
@


1.5
log
@Update to collectd 5.4.2.

See https://github.com/collectd/collectd/releases/tag/collectd-5.4.2 for details.

Enable memcachec, libvirt, python and nut plugins, each in its subpackage.

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_tcpconns_c,v 1.4 2014/11/17 15:23:12 landry Exp $
@


1.4
log
@More links to pull requests merged upstream.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_tcpconns_c,v 1.3 2014/10/27 09:07:07 landry Exp $
d4 3
a6 3
--- src/tcpconns.c.orig	Sun Jan 26 09:09:14 2014
+++ src/tcpconns.c	Mon Sep 22 16:59:13 2014
@@@@ -896,7 +896,6 @@@@ static int conn_init (void)
d14 1
a14 1
@@@@ -909,18 +908,16 @@@@ static int conn_read (void)
d36 1
a36 1
@@@@ -937,7 +934,7 @@@@ static int conn_read (void)
@


1.3
log
@add links to upstream github PR
@
text
@d1 1
a1 1
$OpenBSD: patch-src_tcpconns_c,v 1.2 2014/09/25 20:10:13 landry Exp $
d3 1
@


1.2
log
@Long awaited update to collectd 5.4.1.

- remove useless MESSAGE, provide an rc script instead
- enable pf, target_v5upgrade, tail_csv and write_graphite plugins
- backport fixes from FreeBSD and NetBSD to build with newer libstatgrab
  (upstream collectd github ticket #445)
- remove the check and inclusion of pcap-bpf.h, we dont have/need it
- users of the previous 4.x version should refer to
  https://collectd.org/wiki/index.php/V4_to_v5_migration_guide for the
upgrade path.

tested on ppc & amd64.
@
text
@d1 2
a2 1
$OpenBSD: patch-src_tcpconns_c,v 1.1 2013/12/28 20:44:21 krw Exp $
@


1.1
log
@Replace circleq inpt_queue with tailq, as inpt_queue is now a TAILQ.
Spotted in bulk build by sthen@@.
@
text
@d1 4
a4 4
$OpenBSD$
--- src/tcpconns.c.orig	Fri Dec 27 11:33:41 2013
+++ src/tcpconns.c	Fri Dec 27 11:37:20 2013
@@@@ -659,7 +659,6 @@@@ static int conn_init (void)
d12 1
a12 1
@@@@ -672,18 +671,16 @@@@ static int conn_read (void)
d34 1
a34 1
@@@@ -700,7 +697,7 @@@@ static int conn_read (void)
@

