head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2016.12.04.16.52.39;	author jca;	state dead;
branches;
next	1.2;
commitid	15obNNQS3mXuGlS9;

1.2
date	2016.12.03.11.44.41;	author landry;	state Exp;
branches;
next	1.1;
commitid	qj4URm0Db8feFZOv;

1.1
date	2016.12.02.15.50.29;	author jca;	state Exp;
branches;
next	;
commitid	mADlZHEPibAUHfk6;


desc
@@


1.3
log
@Kill useless patch.

This plugin uses swapctl(2), not kvm_getswapinfo(3) (which we don't
provide).
@
text
@$OpenBSD: patch-src_swap_c,v 1.2 2016/12/03 11:44:41 landry Exp $

https://github.com/collectd/collectd/issues/2061

--- src/swap.c.orig	Wed Nov 30 09:52:01 2016
+++ src/swap.c	Sat Dec  3 11:40:05 2016
@@@@ -168,7 +168,7 @@@@ static int swap_init(void) /* {{{ */
 
   kvm_pagesize = getpagesize();
 
-  kvm_obj = kvm_openfiles(NULL, "/dev/null", NULL, O_RDONLY, errbuf);
+  kvm_obj = kvm_openfiles(NULL, "/dev/null", NULL, O_RDONLY|KVM_NO_FILES, errbuf);
 
   if (kvm_obj == NULL) {
     ERROR("swap plugin: kvm_openfiles failed, %s", errbuf);
@


1.2
log
@Update to collectd 5.6.2.

- put the write_riemann plugin in its own subpackage, depending on
  riemann-c-client.
- disable protobuf-c detection/dependency, used by two plugins we dont
  enable (pinba and grpc)
- fix some WANTLIB
- the processes and tcpconns plugin still seem to be busted, calling
  kvm_openfiles with O_RDONLY|KVM_NO_FILES is apparently not enough.
Interestingly, swap plugin (using the same code) works ?

Based on a diff from Pavel Korovin for 5.6.1, thanks!
@
text
@d1 1
a1 1
$OpenBSD: patch-src_swap_c,v 1.1 2016/12/02 15:50:29 jca Exp $
@


1.1
log
@Use KVM_NO_FILES to unbreak processes and swap plugins.

The tcpconns plugin needs more work, using kvm_getfiles(3) or sysctl(3).
Prodded by landry@@
@
text
@d1 7
a7 4
$OpenBSD$
--- src/swap.c.orig	Tue Nov 29 09:16:14 2016
+++ src/swap.c	Tue Nov 29 09:26:05 2016
@@@@ -167,7 +167,8 @@@@ static int swap_init (void) /* {{{ */
d9 1
a9 1
 	kvm_pagesize = getpagesize ();
d11 2
a12 3
-	kvm_obj = kvm_openfiles (NULL, "/dev/null", NULL, O_RDONLY, errbuf);
+	kvm_obj = kvm_openfiles (NULL, "/dev/null", NULL, O_RDONLY|KVM_NO_FILES,
+	    errbuf);
d14 2
a15 2
 	if (kvm_obj == NULL)
 	{
@

