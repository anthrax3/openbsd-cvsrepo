head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.18
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.14
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.16
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.12
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	pea_20081216:1.1.1.1
	pea:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2012.06.08.13.59.08;	author pea;	state Exp;
branches;
next	1.4;

1.4
date	2010.04.23.11.18.43;	author pea;	state Exp;
branches;
next	1.3;

1.3
date	2009.02.11.13.17.28;	author pea;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.19.12.57.53;	author pea;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.16.21.07.55;	author pea;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.12.16.21.07.55;	author pea;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to 2.3.8

ok okan@@
@
text
@$OpenBSD$
--- bin/fnrancid.in.orig	Wed Mar  9 18:19:15 2011
+++ bin/fnrancid.in	Tue May 29 13:19:25 2012
@@@@ -172,6 +172,7 @@@@ sub GetSystem {
 
     while (<INPUT>) {
 	tr/\015//d;
+	s/exit//gi ;
 	next if /^\s*$/;
 	last if (/$prompt/);
 
@@@@ -215,6 +216,15 @@@@ sub GetConf {
 	    next;
 	}
 	ProcessHistory("","","","$_");
+	if (length($host) == 0) {
+    	   if ( $file) {
+	      print(STDERR "Too few arguments: file name required\n");
+	      exit(1);
+    	} else {
+	  print(STDERR "Too few arguments: host name required\n");
+	  exit(1);
+    	  }
+	}
     }
     $found_end = 1;
     return(1);
@


1.4
log
@Update to 2.3.3.

ok okan@@
@
text
@d1 3
a3 3
$OpenBSD: patch-bin_fnrancid_in,v 1.3 2009/02/11 13:17:28 pea Exp $
--- bin/fnrancid.in.orig	Wed Mar 24 00:33:50 2010
+++ bin/fnrancid.in	Fri Apr 16 10:34:08 2010
d10 3
a12 3
 	last if(/$prompt/);
 	ProcessHistory("","","","$_");
@@@@ -201,6 +202,15 @@@@ sub GetConf {
a27 66
@@@@ -212,7 +222,7 @@@@ sub DoNothing {print STDOUT;}
 # Main
 @@commandtable = (
 	{'get system status'	=> 'GetSystem'},
-	{'get conf'		=> 'GetConf'}
+	{'show'		=> 'GetConf'}
 );
 # Use an array to preserve the order of the commands and a hash for mapping
 # commands to the subroutine and track commands that have been completed.
@@@@ -241,13 +251,13 @@@@ if ($file) {
     print STDOUT "opening file $host\n" if ($log);
     open(INPUT,"<$host") || die "open failed for $host: $!\n";
 } else {
-    print STDERR "executing nlogin -t $timeo -c\"$cisco_cmds\" $host\n" if ($debug);
-    print STDOUT "executing nlogin -t $timeo -c\"$cisco_cmds\" $host\n" if ($log);
+    print STDERR "executing fnlogin -t $timeo -c\"$cisco_cmds\" $host\n" if ($debug);
+    print STDOUT "executing fnlogin -t $timeo -c\"$cisco_cmds\" $host\n" if ($log);
     if (defined($ENV{NOPIPE})) {
-	system "nlogin -t $timeo -c \"$cisco_cmds\" $host </dev/null > $host.raw 2>&1" || die "nlogin failed for $host: $!\n";
-	open(INPUT, "< $host.raw") || die "nlogin failed for $host: $!\n";
+	system "fnlogin -t $timeo -c \"$cisco_cmds\" $host </dev/null > $host.raw 2>&1" || die "fnlogin failed for $host: $!\n";
+	open(INPUT, "< $host.raw") || die "fnlogin failed for $host: $!\n";
     } else {
-	open(INPUT,"nlogin -t $timeo -c \"$cisco_cmds\" $host </dev/null |") || die "nlogin failed for $host: $!\n";
+	open(INPUT,"fnlogin -t $timeo -c \"$cisco_cmds\" $host </dev/null |") || die "fnlogin failed for $host: $!\n";
     }
 }
 
@@@@ -275,13 +285,32 @@@@ ProcessHistory("","","","!RANCID-CONTENT-TYPE: fortiga
 TOP: while(<INPUT>) {
     tr/\015//d;
     if (/^Error:/) {
-	print STDOUT ("$host nlogin error: $_");
-	print STDERR ("$host nlogin error: $_") if ($debug);
+	print STDOUT ("$host fnlogin error: $_");
+	print STDERR ("$host fnlogin error: $_") if ($debug);
 	last;
     }
-    while (/>\s*($cmds_regexp)\s*$/) {
-	$cmd = $1;
-	if (!defined($prompt)) { $prompt = " >\s*"; }
+    while (/^.+(#|\$)\s*($cmds_regexp)\s*$/) {
+		$cmd = $2;
+		# - FortiGate prompts end with either '#' or '$'. Further, they may
+# be prepended with a '~' if the hostname is too long. Therefore, 
+# we need to figure out what our prompt really is.
+		if (!defined($prompt)) {
+		    if ( $_ =~ m/^.+\~\$/ ) {
+			$prompt = '\~\$ .*' ;
+		    } else {
+			if ( $_ =~ m/^.+\$/ ) {
+			    $prompt = ' \$ .*' ;
+			} else {
+			    if ( $_ =~ m/^.+\~#/ ) {
+				 $prompt = '\~# .*' ;
+			     } else {
+				 if ( $_ =~ m/^.+#/ ) {
+				      $prompt = ' # .*' ;
+				  }
+			     }
+			}
+		    }
+		}
 	print STDERR ("HIT COMMAND:$_") if ($debug);
 	if (!defined($commands{$cmd})) {
 	    print STDERR "$host: found unexpected command - \"$cmd\"\n";
@


1.3
log
@Update to the latest alpha version (recommended version by upstream)

ok okan@@ ajacoutot@@
@
text
@d1 3
a3 3
$OpenBSD: patch-bin_fnrancid_in,v 1.2 2008/12/19 12:57:53 pea Exp $
--- bin/fnrancid.in.orig	Fri Feb  8 10:59:08 2008
+++ bin/fnrancid.in	Tue Feb 10 14:21:53 2009
d12 1
a12 1
@@@@ -202,6 +203,15 @@@@ sub GetConf {
d16 9
a24 10
+if (length($host) == 0) {
+    if ($file) {
+	print(STDERR "Too few arguments: file name required\n");
+	exit(1);
+    } else {
+	print(STDERR "Too few arguments: host name required\n");
+	exit(1);
+    }
+}
 	#print STDOUT "$_";
d26 3
a28 2
     $found_end=1;
@@@@ -214,7 +224,7 @@@@ sub DoNothing {print STDOUT;}
d37 1
a37 2
@@@@ -242,13 +252,13 @@@@ if ($file) {
     print STDERR "opening file $host\n" if ($debug);
d39 2
a40 1
     open(INPUT,"<$host") || die "open failed for $host: $!\n"; } else {
d56 1
a56 1
@@@@ -276,13 +286,32 @@@@ ProcessHistory("","","","!RANCID-CONTENT-TYPE: fortiga
@


1.2
log
@Fix patch-bin_fnrancid_in (cvs eats it) and typos in README.OpenBSD (from Frank Habicht <geier at geier.ne.tz>, thanks !).
Bump pkgname
ok ajacoutot@@
@
text
@d1 4
a4 23
$OpenBSD$
--- bin/fnrancid.in.orig	Sun Jan 11 04:49:13 2004
+++ bin/fnrancid.in	Fri Dec 19 11:46:52 2008
@@@@ -4,3 +4,4 @@@@
 ##
-## Copyright (C) 1997-2004 by Terrapin Communications, Inc.
+## rancid 2.3.2a7
+## Copyright (C) 1997-2006 by Terrapin Communications, Inc.
 ## All rights reserved.
@@@@ -22,3 +23,3 @@@@
 # A library built on Stephen Gill's Netscreen stuff to accomodate
-#  the Fortinet product line.  [d_pfleger@@juniper.net] 
+#  the Fortinet product line.  [d_pfleger@@juniper.net]
 #
@@@@ -26,3 +27,3 @@@@
 #
-# usage: rancid [-d] [-l] [-f filename | $host]
+# usage: rancid [-dV] [-l] [-f filename | hostname]
 #
@@@@ -36,5 +37,6 @@@@ $host = $ARGV[0];
 $found_end = 0;
-$timeo = 90;			# nlogin timeout in seconds
+$timeo = 90;				# fnlogin timeout in seconds
d6 1
a6 66
-my(%filter_pwds);		# password filtering mode
+my(@@commandtable, %commands, @@commands);# command lists
+my(%filter_pwds);			# password filtering mode
 
@@@@ -42,5 +44,5 @@@@ my(%filter_pwds);		# password filtering mode
 sub ProcessHistory {
-    my($new_hist_tag,$new_command,$command_string,@@string)=(@@_);
-    if((($new_hist_tag ne $hist_tag) || ($new_command ne $command))
-       && defined %history) {
+    my($new_hist_tag,$new_command,$command_string,@@string) = (@@_);
+    if ((($new_hist_tag ne $hist_tag) || ($new_command ne $command))
+	&& defined %history) {
 	print eval "$command \%history";
@@@@ -66,6 +68,6 @@@@ sub numerically { $a <=> $b; }
 
-# This is a sort routing that will sort numerically on the
+# This is a sort routine that will sort numerically on the
 # keys of a hash as if it were a normal array.
 sub keynsort {
-    local(%lines)=@@_;
+    local(%lines) = @@_;
     local($i) = 0;
@@@@ -79,6 +81,6 @@@@ sub keynsort {
 
-# This is a sort routing that will sort on the
+# This is a sort routine that will sort on the
 # keys of a hash as if it were a normal array.
 sub keysort {
-    local(%lines)=@@_;
+    local(%lines) = @@_;
     local($i) = 0;
@@@@ -92,6 +94,6 @@@@ sub keysort {
 
-# This is a sort routing that will sort on the
+# This is a sort routine that will sort on the
 # values of a hash as if it were a normal array.
 sub valsort{
-    local(%lines)=@@_;
+    local(%lines) = @@_;
     local($i) = 0;
@@@@ -99,4 +101,4 @@@@ sub valsort{
     foreach $key (sort values %lines) {
-        $sorted_lines[$i] = $key;
-        $i++;
+	$sorted_lines[$i] = $key;
+	$i++;
     }
@@@@ -105,5 +107,5 @@@@ sub valsort{
 
-# This is a numerical sort routing (ascending).
+# This is a numerical sort routine (ascending).
 sub numsort {
-    local(%lines)=@@_;
+    local(%lines) = @@_;
     local($i) = 0;
@@@@ -121,3 +123,3 @@@@ sub numsort {
 sub ipsort {
-    local(%lines)=@@_;
+    local(%lines) = @@_;
     local($i) = 0;
@@@@ -134,3 +136,3 @@@@ sub ipaddrval {
     my(@@a) = ($_[0] =~ m#^(\d+)\.(\d+)\.(\d+)\.(\d+)$#);
-    $a[3]+256*($a[2]+256*($a[1]+256*$a[0]));
+    $a[3] + 256 * ($a[2] + 256 * ($a[1] +256 * $a[0]));
 }
@@@@ -146,5 +148,6 @@@@ sub GetSystem {
a10 15
-	ProcessHistory("","","","$_"); 
+	ProcessHistory("","","","!$_");
 	#print STDOUT "$_";
@@@@ -169,2 +172,3 @@@@ sub GetConf {
 	tr/\015//d;
+	s/exit//gi ;
 	next if /^\s*$/;
@@@@ -172,5 +176,5 @@@@ sub GetConf {
 	if (/(^set.*)('Enc .*')(.*)/) {
-            ProcessHistory("ENC","","","!$1 'Enc **encoding removed**' $3\n");
-            next;
-        }
+	    ProcessHistory("ENC","","","!$1 'Enc **encoding removed**' $3\n");
+	    next;
+	}
d12 4
a15 23
@@@@ -186,12 +190,11 @@@@ sub DoNothing {print STDOUT;}
 # Main
-%commands=(
-	'get system status'	=> "GetSystem",
-	'get conf'		=> "GetConf"
+@@commandtable = (
+	{'get system status'	=> 'GetSystem'},
+	{'show'		=> 'GetConf'}
 );
-# keys() doesnt return things in the order entered and the order of the
-# cmds is important. pita
-@@commands=(
-	"get system status",
-	"get conf"
-);
+# Use an array to preserve the order of the commands and a hash for mapping
+# commands to the subroutine and track commands that have been completed.
+@@commands = map(keys(%$_), @@commandtable);
+%commands = map(%$_, @@commandtable);
+
 $cisco_cmds=join(";",@@commands);
@@@@ -199,2 +202,11 @@@@ $cmds_regexp=join("|",@@commands);
 
d25 15
a39 2
 open(OUTPUT,">$host.new") || die "Can't open $host.new for writing: $!\n";
@@@@ -208,9 +220,9 @@@@ if ($file) {
d47 3
a49 2
+	system "fnlogin -t $timeo -c \"$cisco_cmds\" $host </dev/null > $host.raw 2>&1" || die "nlogin failed for $host: $!\n";
 	open(INPUT, "< $host.raw") || die "nlogin failed for $host: $!\n";
d52 1
a52 1
+	open(INPUT,"fnlogin -t $timeo -c \"$cisco_cmds\" $host </dev/null |") || die "nlogin failed for $host: $!\n";
d54 5
a58 6
@@@@ -220,3 +232,3 @@@@ if ($file) {
 if ($ENV{"FILTER_PWDS"} =~ /no/i) {
-	$filter_pwds = 0;  
+	$filter_pwds = 0;
 } elsif ($ENV{"FILTER_PWDS"} =~ /all/i) {
@@@@ -231,9 +243,28 @@@@ TOP: while(<INPUT>) {
d92 2
@


1.1
log
@Initial revision
@
text
@d3 2
a4 6
+++ bin/fnrancid.in	Tue Dec 16 15:40:23 2008
@@@@ -1,8 +1,9 @@@@
 #! @@PERLV_PATH@@
 ##
-## $Id: fnrancid.in,v 1.3 2004/01/11 03:49:13 heas Exp $
+## $Id: fnrancid.in,v 1.11 2006/10/05 04:27:42 heas Exp $
d10 1
a10 5
 ##
 ## This software may be freely copied, modified and redistributed
@@@@ -20,11 +21,11 @@@@
 ##
 #
d15 1
a15 1
 #  RANCID - Really Awesome New Cisco confIg Differ
d20 1
a20 5
 use Getopt::Std;
 getopts('dfl');
@@@@ -34,15 +35,16 @@@@ $debug = $opt_d;
 $file = $opt_f;
 $host = $ARGV[0];
d29 1
a29 1
 # This routine is used to print out the router configuration
d38 1
a38 5
 	undef %history;
     }
@@@@ -64,10 +66,10 @@@@ sub ProcessHistory {
 
 sub numerically { $a <=> $b; }
d47 1
a47 5
     local(@@sorted_lines);
     foreach $key (sort numerically keys(%lines)) {
@@@@ -77,10 +79,10 @@@@ sub keynsort {
     @@sorted_lines;
 }
d56 1
a56 5
     local(@@sorted_lines);
     foreach $key (sort keys(%lines)) {
@@@@ -90,22 +92,22 @@@@ sub keysort {
     @@sorted_lines;
 }
d65 1
a65 1
     local(@@sorted_lines);
d72 1
a72 2
     @@sorted_lines;
 }
d80 1
a80 5
     local(@@sorted_lines);
     foreach $num (sort {$a <=> $b} keys %lines) {
@@@@ -119,7 +121,7 @@@@ sub numsort {
 # ip address when the ip address is anywhere in
 # the strings.
d85 1
a85 5
     local(@@sorted_lines);
     foreach $addr (sort sortbyipaddr keys %lines) {
@@@@ -132,7 +134,7 @@@@ sub ipsort {
 # These two routines will sort based upon IP addresses
 sub ipaddrval {
d90 1
a90 3
 sub sortbyipaddr {
     &ipaddrval($a) <=> &ipaddrval($b);
@@@@ -146,7 +148,7 @@@@ sub GetSystem {
d92 1
d98 1
a98 5
     }
     print STDOUT "Vendor: $vendor";
@@@@ -167,12 +169,11 @@@@ sub GetConf {
     print STDERR "    In GetConf: $_" if ($debug);
     while (<INPUT>) {
d100 3
a102 2
-	next if /^\s*$/;
 	last if(/$prompt/);
d111 1
a111 5
 	#print STDOUT "$_";
     }
@@@@ -184,19 +185,27 @@@@ sub GetConf {
 sub DoNothing {print STDOUT;}
 
d132 1
a132 1
 $cmds_regexp=join("|",@@commands);
d144 1
a144 5
 select(OUTPUT);
 # make OUTPUT unbuffered if debugging
@@@@ -206,19 +215,19 @@@@ if ($file) {
     print STDERR "opening file $host\n" if ($debug);
     print STDOUT "opening file $host\n" if ($log);
d158 1
a158 3
 }
 
 # determine password filtering mode
d163 1
a163 5
 	$filter_pwds = 2;
 } else {
@@@@ -229,13 +238,32 @@@@ ProcessHistory("","","","!RANCID-CONTENT-TYPE: Fortiga
 TOP: while(<INPUT>) {
     tr/\015//d;
a196 2
 	if (!defined($commands{$cmd})) {
 	    print STDERR "$host: found unexpected command - \"$cmd\"\n";
@


1.1.1.1
log
@Really Awesome New Cisco confIg Differ
RANCID monitors a router's (or more generally a device's)
configuration, including software and hardware (cards, serial numbers,
etc) and uses CVS (Concurrent Version System) to maintain history of 
changes.

With help and advices from okan@@ (thanks very much !)

ok okan@@ ajacoutot@@
@
text
@@
