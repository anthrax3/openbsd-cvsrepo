head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.1.1.1.0.54
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.52
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.48
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.50
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.46
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.44
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.42
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.40
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.38
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.36
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.34
	OPENBSD_5_0:1.1.1.1.0.32
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.30
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.28
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.26
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.24
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	naddy_20040226:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.04.23.22.18.32;	author sthen;	state Exp;
branches;
next	1.2;
commitid	Hv2zTP9fFpZfOAX1;

1.2
date	2017.04.23.22.02.29;	author sthen;	state Exp;
branches;
next	1.1;
commitid	JeHqqTY5T0XjvCQA;

1.1
date	2004.02.26.00.30.05;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.26.00.30.05;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@iostream.h -> iostream, etc.
@
text
@$OpenBSD: patch-Colorizer_cc,v 1.2 2017/04/23 22:02:29 sthen Exp $
--- Colorizer.cc.orig	Tue Aug  3 20:41:17 1999
+++ Colorizer.cc	Sun Apr 23 23:13:01 2017
@@@@ -23,8 +23,9 @@@@
 
 #include <assert.h>
 #include <stdio.h>
-#include <strstream.h>
+#include <strstream>
 
+using namespace std;
 
 Colorizer::Colorizer()
 {
@


1.2
log
@regen
@
text
@d1 1
a1 1
$OpenBSD: patch-Colorizer_cc,v 1.1.1.1 2004/02/26 00:30:05 naddy Exp $
d3 2
a4 2
+++ Colorizer.cc	Sun Apr 23 23:00:29 2017
@@@@ -23,7 +23,7 @@@@
d11 1
d14 1
a14 42
@@@@ -111,7 +111,7 @@@@ char* Colorizer::colorize(char *str)
    ListIterator<SearchData*> itr(*m_items_list);
 
    // will contain the new string
-   ostrstream newstr;
+   std::ostrstream newstr;
    
    SearchData *current;
    int i = 0;
@@@@ -172,7 +172,7 @@@@ char* Colorizer::colorize(char *str)
 	    }
 
 	    // write ansi reset str and a newline
-	    newstr << ANSI_RESET_STR << endl << ends;
+	    newstr << ANSI_RESET_STR << std::endl << std::ends;
 	    // return the new string
 	    return newstr.str();
 	 }
@@@@ -187,12 +187,12 @@@@ char* Colorizer::colorize(char *str)
       // check if str ends in '\n'
       if (str[strlen(str)] == '\n')
       {
-	 newstr << str << ends;
+	 newstr << str << std::ends;
       }
       else
       {
 	 // doesn't end in '\n'
-	 newstr << str << endl << ends;
+	 newstr << str << std::endl << std::ends;
       }
 
       // return the new string
@@@@ -240,7 +240,7 @@@@ char* Colorizer::colorize(char *str)
       
       // write newline and null
       //newstr << endl << ends;
-      newstr << ends;
+      newstr << std::ends;
       
       
       // return the new string
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- Colorizer.cc.orig	2004-01-11 16:15:16.000000000 -0500
+++ Colorizer.cc	2004-01-11 16:15:46.000000000 -0500
d13 1
a13 1
@@@@ -111,7 +111,7 @@@@
d22 1
a22 1
@@@@ -172,7 +172,7 @@@@
d31 1
a31 1
@@@@ -187,12 +187,12 @@@@
d46 1
a46 1
@@@@ -240,7 +240,7 @@@@
@


1.1.1.1
log
@Import colortail 0.3.0, submitted by Robert Nagy <thuglife@@bsd.hu>.

Colortail works like standard tail(1) but it can optionally read
one or more configuration files that specify which patterns result
in which colors.  It can be used to quickly get an overview of
interesting activity, e.g. by colorizing keywords bright red or
some other color of your choice.
@
text
@@
