head	1.4;
access;
symbols
	OPENBSD_4_9:1.3.0.10
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.8
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	jasper_20080414:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2011.06.02.10.01.22;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2008.09.30.08.15.06;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.26.13.14.06;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2008.04.14.13.39.51;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.04.14.13.39.51;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove, superseded by backintime{-gnome}. Newer versions are too Linux
centric anyway (hal, devices...).
@
text
@$OpenBSD: patch-backup_backend_py,v 1.3 2008/09/30 08:15:06 ajacoutot Exp $
--- backup_backend.py.orig	Thu Nov 15 07:22:16 2007
+++ backup_backend.py	Tue Sep 30 10:01:30 2008
@@@@ -229,7 +229,7 @@@@ class backup:
 
         if latest_backup_dir:
             last_backup = self.parent_backup_dir +'/'+ latest_backup_dir.strftime(BACKUP_DIR_DATE_FORMAT)
-            self.run_cmd_output_gui("cp -al '%s' '%s'" % (last_backup, new_backup))
+            self.run_cmd_output_gui("gcp -al '%s' '%s'" % (last_backup, new_backup))
             self.run_cmd_output_gui("chmod u+w '%s'" % new_backup)
         
         for dir in self.included_dirs:
@@@@ -290,9 +290,9 @@@@ class backup:
             file = src.rstrip('/') +'/'+ local_file
             print 'file', file
             if os.path.isdir(file):
-                cmd = 'cp -vR "%s" "%s"' % (file, dest)
+                cmd = 'gcp -vR "%s" "%s"' % (file, dest)
             else:
-                cmd = 'cp -v "%s" "%s"' % (file, dest)
+                cmd = 'gcp -v "%s" "%s"' % (file, dest)
             file_pairs = self.run_cmd_output_gui(cmd)
 #            for file_pair in file_pairs:
 #                to_f = file_pair.split(' -> ')[1].strip("'`\n")
@


1.3
log
@- GNU cp is needed all the way; fix restore function
@
text
@d1 1
a1 1
$OpenBSD: patch-backup_backend_py,v 1.2 2008/06/26 13:14:06 ajacoutot Exp $
@


1.2
log
@- make it use the GNU version of cp(1) because flyback needs the
"--link" option for its incremental backups handling

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-backup_backend_py,v 1.1.1.1 2008/04/14 13:39:51 jasper Exp $
d3 1
a3 1
+++ backup_backend.py	Mon Apr 14 13:08:35 2008
d13 12
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d9 1
a9 1
+            self.run_cmd_output_gui("cp -RPp '%s' '%s'" % (last_backup, new_backup))
@


1.1.1.1
log
@import flyback 0.4.0

Apple's Time Machine is a great feature in their OS, and UNIX has
almost all of the required technology already built in to recreate it.
This is a simple GUI to make it easy to use.

help and ok ajacoutot@@
@
text
@@
