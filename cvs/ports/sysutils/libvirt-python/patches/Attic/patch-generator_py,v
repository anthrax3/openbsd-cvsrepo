head	1.3;
access;
symbols
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2015.10.08.10.03.00;	author jasper;	state dead;
branches;
next	1.2;
commitid	cEIyvNzWjb46pSMt;

1.2
date	2015.09.02.06.35.26;	author jasper;	state Exp;
branches;
next	1.1;
commitid	Eepva5A3OC0eu6Rm;

1.1
date	2015.07.14.23.30.27;	author jasper;	state Exp;
branches;
next	;
commitid	os45dQGTKAchJl80;


desc
@@


1.3
log
@update to libvirt-python-1.2.20
@
text
@$OpenBSD: patch-generator_py,v 1.2 2015/09/02 06:35:26 jasper Exp $

https://bugzilla.redhat.com/show_bug.cgi?id=1222795

--- generator.py.orig	Wed Sep  2 08:33:58 2015
+++ generator.py	Wed Sep  2 08:34:11 2015
@@@@ -136,7 +136,7 @@@@ class docParser(xml.sax.handler.ContentHandler):
             elif attrs['file'] == "libvirt-qemu":
                 qemu_enum(attrs['type'],attrs['name'],attrs['value'])
         elif tag == "macro":
-            if "string" in attrs:
+            if "string" in attrs.keys():
                 params.append((attrs['name'], attrs['string']))
 
     def end(self, tag):
@


1.2
log
@Fix the generator issue with a patch proposed to upstream, instead of
reverting the offending commit
@
text
@d1 1
a1 1
$OpenBSD: patch-generator_py,v 1.1 2015/07/14 23:30:27 jasper Exp $
@


1.1
log
@- update to libvirt-python-1.2.17
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 5
- revert:
  From d3e2aff6a701480bf19bdfe748c1c6def2db0a50 Mon Sep 17 00:00:00 2001
  From: Jiri Denemark <jdenemar@@redhat.com>
  Date: Fri, 5 Jun 2015 10:17:53 +0200
  Subject: [PATCH] Provide symbolic names for typed parameters
d5 3
a7 14
  https://bugzilla.redhat.com/show_bug.cgi?id=1222795

--- generator.py.orig	Thu Jul  2 07:32:19 2015
+++ generator.py	Fri Jul 10 21:16:15 2015
@@@@ -10,7 +10,6 @@@@ enums = {} # { enumType: { enumConstant: enumValue } }
 lxc_enums = {} # { enumType: { enumConstant: enumValue } }
 qemu_enums = {} # { enumType: { enumConstant: enumValue } }
 event_ids = []
-params = [] # [ (parameName, paramValue)... ]
 
 import os
 import sys
@@@@ -135,9 +134,6 @@@@ class docParser(xml.sax.handler.ContentHandler):
                 lxc_enum(attrs['type'],attrs['name'],attrs['value'])
d10 1
a10 1
-        elif tag == "macro":
d12 2
a13 1
-                params.append((attrs['name'], attrs['string']))
a15 12
         if debug:
@@@@ -1884,10 +1880,6 @@@@ def buildWrappers(module):
         for name,value in items:
             classes.write("%s = %s\n" % (name,value))
         classes.write("\n")
-
-    classes.write("# typed parameter names\n")
-    for name, value in params:
-        classes.write("%s = \"%s\"\n" % (name, value))
 
     classes.close()
 
@

