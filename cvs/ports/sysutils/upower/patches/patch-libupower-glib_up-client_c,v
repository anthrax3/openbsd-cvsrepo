head	1.5;
access;
symbols
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3;
locks; strict;
comment	@# @;


1.5
date	2016.09.01.10.11.47;	author landry;	state Exp;
branches;
next	1.4;
commitid	aJ9y1R2kzjWxOeEZ;

1.4
date	2016.04.26.12.37.43;	author landry;	state dead;
branches;
next	1.3;
commitid	YfPO2FYz7DGW0Izs;

1.3
date	2015.04.03.12.08.10;	author landry;	state Exp;
branches;
next	1.2;
commitid	H8kXBXcxsmzBYfB9;

1.2
date	2013.10.18.16.43.51;	author landry;	state dead;
branches;
next	1.1;

1.1
date	2013.10.12.08.10.13;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Add proper error and cancellable handling to UpClient constructor

Backport https://cgit.freedesktop.org/upower/patch/?id=932a6a39e35754be571e1274aec4730fd42dba13
from https://bugs.freedesktop.org/show_bug.cgi?id=95350

First part of a larger fix for xfsettingsd crashes when systemwide dbus
isn't running.

ok/testing edd@@
@
text
@$OpenBSD$

Backport https://cgit.freedesktop.org/upower/patch/?id=932a6a39e35754be571e1274aec4730fd42dba13
https://bugs.freedesktop.org/show_bug.cgi?id=95350

--- libupower-glib/up-client.c.orig	Wed Jul 29 14:47:49 2015
+++ libupower-glib/up-client.c	Wed Aug 31 12:31:10 2016
@@@@ -39,9 +39,10 @@@@
 #include "up-daemon-generated.h"
 #include "up-device.h"
 
-static void	up_client_class_init	(UpClientClass	*klass);
-static void	up_client_init		(UpClient	*client);
-static void	up_client_finalize	(GObject	*object);
+static void	up_client_class_init		(UpClientClass	*klass);
+static void	up_client_initable_iface_init	(GInitableIface *iface);
+static void	up_client_init			(UpClient	*client);
+static void	up_client_finalize		(GObject	*object);
 
 #define UP_CLIENT_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UP_TYPE_CLIENT, UpClientPrivate))
 
@@@@ -73,7 +74,8 @@@@ enum {
 static guint signals [UP_CLIENT_LAST_SIGNAL] = { 0 };
 static gpointer up_client_object = NULL;
 
-G_DEFINE_TYPE (UpClient, up_client, G_TYPE_OBJECT)
+G_DEFINE_TYPE_WITH_CODE (UpClient, up_client, G_TYPE_OBJECT,
+                         G_IMPLEMENT_INTERFACE(G_TYPE_INITABLE, up_client_initable_iface_init))
 
 /**
  * up_client_get_devices:
@@@@ -434,11 +436,10 @@@@ up_client_class_init (UpClientClass *klass)
  * up_client_init:
  * @@client: This class instance
  */
-static void
-up_client_init (UpClient *client)
+static gboolean
+up_client_initable_init (GInitable *initable, GCancellable *cancellable, GError **error)
 {
-	GError *error = NULL;
-
+	UpClient *client = UP_CLIENT (initable);
 	client->priv = UP_CLIENT_GET_PRIVATE (client);
 
 	/* connect to main interface */
@@@@ -446,13 +447,10 @@@@ up_client_init (UpClient *client)
 									 G_DBUS_PROXY_FLAGS_NONE,
 									 "org.freedesktop.UPower",
 									 "/org/freedesktop/UPower",
-									 NULL,
-									 &error);
-	if (client->priv->proxy == NULL) {
-		g_warning ("Couldn't connect to proxy: %s", error->message);
-		g_error_free (error);
-		return;
-	}
+									 cancellable,
+									 error);
+	if (client->priv->proxy == NULL)
+		return FALSE;
 
 	/* all callbacks */
 	g_signal_connect (client->priv->proxy, "device-added",
@@@@ -461,9 +459,26 @@@@ up_client_init (UpClient *client)
 			  G_CALLBACK (up_device_removed_cb), client);
 	g_signal_connect (client->priv->proxy, "notify",
 			  G_CALLBACK (up_client_notify_cb), client);
+
+	return TRUE;
 }
 
+static void
+up_client_initable_iface_init (GInitableIface *iface)
+{
+	iface->init = up_client_initable_init;
+}
+
 /*
+ * up_client_init:
+ * @@client: This class instance
+ */
+static void
+up_client_init (UpClient *client)
+{
+}
+
+/*
  * up_client_finalize:
  */
 static void
@@@@ -482,23 +497,52 @@@@ up_client_finalize (GObject *object)
 }
 
 /**
- * up_client_new:
+ * up_client_new_full:
+ * @@cancellable: (allow-none): A #GCancellable or %NULL.
+ * @@error: Return location for error or %NULL.
  *
- * Creates a new #UpClient object.
+ * Creates a new #UpClient object. If connecting to upowerd on D-Bus fails,
+ % this returns %NULL and sets @@error.
  *
- * Return value: a new UpClient object.
+ * Return value: a new UpClient object, or %NULL on failure.
  *
- * Since: 0.9.0
+ * Since: 0.99.5
  **/
 UpClient *
-up_client_new (void)
+up_client_new_full (GCancellable *cancellable, GError **error)
 {
 	if (up_client_object != NULL) {
 		g_object_ref (up_client_object);
 	} else {
-		up_client_object = g_object_new (UP_TYPE_CLIENT, NULL);
-		g_object_add_weak_pointer (up_client_object, &up_client_object);
+		up_client_object = g_initable_new (UP_TYPE_CLIENT, cancellable, error, NULL);
+		if (up_client_object)
+			g_object_add_weak_pointer (up_client_object, &up_client_object);
 	}
 	return UP_CLIENT (up_client_object);
+}
+
+/**
+ * up_client_new:
+ *
+ * Creates a new #UpClient object. If connecting to upowerd on D-Bus fails,
+ * this returns %NULL and prints out a warning with the error message.
+ * Consider using up_client_new_full() instead which allows you to handle errors
+ * and cancelling long operations yourself.
+ *
+ * Return value: a new UpClient object, or %NULL on failure.
+ *
+ * Since: 0.9.0
+ **/
+UpClient *
+up_client_new (void)
+{
+	GError *error = NULL;
+	UpClient *client;
+	client = up_client_new_full (NULL, &error);
+	if (client == NULL) {
+		g_warning ("Couldn't connect to proxy: %s", error->message);
+		g_error_free (error);
+	}
+	return client;
 }
 
@


1.4
log
@Updqte to upower 0.99.4

https://lists.freedesktop.org/archives/devkit-devel/2016-February/001751.html

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-libupower-glib_up-client_c,v 1.3 2015/04/03 12:08:10 landry Exp $
d3 2
a4 1
https://bugs.freedesktop.org/show_bug.cgi?id=89890
d6 34
a39 20
--- libupower-glib/up-client.c.orig	Thu May  8 09:27:51 2014
+++ libupower-glib/up-client.c	Fri Apr  3 13:37:32 2015
@@@@ -96,6 +96,7 @@@@ up_client_get_devices (UpClient *client)
 	g_return_val_if_fail (UP_IS_CLIENT (client), NULL);
 
 	array = g_ptr_array_new ();
+	if (!UP_IS_CLIENT_GLUE (client->priv->proxy)) return array;
 
 	if (up_client_glue_call_enumerate_devices_sync (client->priv->proxy,
 							&devices,
@@@@ -166,6 +167,7 @@@@ up_client_get_critical_action (UpClient *client)
 	char *action;
 
 	g_return_val_if_fail (UP_IS_CLIENT (client), NULL);
+	if (!UP_IS_CLIENT_GLUE (client->priv->proxy)) return NULL;
 	if (!up_client_glue_call_get_critical_action_sync (client->priv->proxy,
 							   &action,
 							   NULL, NULL)) {
@@@@ -188,6 +190,7 @@@@ const gchar *
 up_client_get_daemon_version (UpClient *client)
d41 30
a70 3
 	g_return_val_if_fail (UP_IS_CLIENT (client), NULL);
+	if (!UP_IS_CLIENT_GLUE (client->priv->proxy)) return NULL;
 	return up_client_glue_get_daemon_version (client->priv->proxy);
d73 20
a92 14
@@@@ -205,6 +208,7 @@@@ gboolean
 up_client_get_lid_is_closed (UpClient *client)
 {
 	g_return_val_if_fail (UP_IS_CLIENT (client), FALSE);
+	if (!UP_IS_CLIENT_GLUE (client->priv->proxy)) return FALSE;
 	return up_client_glue_get_lid_is_closed (client->priv->proxy);
 }
 
@@@@ -222,6 +226,7 @@@@ gboolean
 up_client_get_lid_is_present (UpClient *client)
 {
 	g_return_val_if_fail (UP_IS_CLIENT (client), FALSE);
+	if (!UP_IS_CLIENT_GLUE (client->priv->proxy)) return FALSE;
 	return up_client_glue_get_lid_is_present (client->priv->proxy);
d95 19
a113 2
@@@@ -239,6 +244,7 @@@@ gboolean
 up_client_get_on_battery (UpClient *client)
d115 35
a149 3
 	g_return_val_if_fail (UP_IS_CLIENT (client), FALSE);
+	if (!UP_IS_CLIENT_GLUE (client->priv->proxy)) return FALSE;
 	return up_client_glue_get_on_battery (client->priv->proxy);
@


1.3
log
@Add a patch to improve error handling when the systemwide dbus is not
running. Applications using libupower-glib should "gracefully" handle that
situation now...
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Straightforward update to upower 0.9.23, mostly integrating our patches
before giving us the middle finger with the next release relying on
logind for hibernate/suspend code, thus deliberately breaking perfectly
working portable code, see
http://lists.freedesktop.org/archives/devkit-devel/2013-October/001519.html
@
text
@d1 1
a1 1
$OpenBSD: patch-libupower-glib_up-client_c,v 1.1 2013/10/12 08:10:13 ajacoutot Exp $
d3 1
a3 4
From e4858d94343bba2afbebcd1a4925c981a38a9579 Mon Sep 17 00:00:00 2001
From: Bastien Nocera <hadess@@hadess.net>
Date: Thu, 10 Oct 2013 16:32:41 +0000
Subject: up-client: Really don't overwrite retval with prop values
d5 49
a53 75
--- libupower-glib/up-client.c.orig	Tue Oct  8 17:02:57 2013
+++ libupower-glib/up-client.c	Fri Oct 11 15:49:09 2013
@@@@ -360,7 +360,7 @@@@ up_client_get_properties_sync (UpClient *client, GCanc
 
 	prop_val = g_value_get_boolean (value) && allowed;
 	if (prop_val != client->priv->can_suspend) {
-		client->priv->can_suspend = ret;
+		client->priv->can_suspend = prop_val;
 		g_object_notify (G_OBJECT(client), "can-suspend");
 	}
 
@@@@ -376,7 +376,7 @@@@ up_client_get_properties_sync (UpClient *client, GCanc
 
 	prop_val = g_value_get_boolean (value) && allowed;
 	if (prop_val != client->priv->can_hibernate) {
-		client->priv->can_hibernate = ret;
+		client->priv->can_hibernate = prop_val;
 		g_object_notify (G_OBJECT(client), "can-hibernate");
 	}
 #endif /* ENABLE_DEPRECATED */
@@@@ -388,7 +388,7 @@@@ up_client_get_properties_sync (UpClient *client, GCanc
 	}
 	prop_val = g_value_get_boolean (value);
 	if (prop_val != client->priv->lid_is_closed) {
-		client->priv->lid_is_closed = ret;
+		client->priv->lid_is_closed = prop_val;
 		g_object_notify (G_OBJECT(client), "lid-is-closed");
 	}
 
@@@@ -399,7 +399,7 @@@@ up_client_get_properties_sync (UpClient *client, GCanc
 	}
 	prop_val = g_value_get_boolean (value);
 	if (prop_val != client->priv->on_battery) {
-		client->priv->on_battery = ret;
+		client->priv->on_battery = prop_val;
 		g_object_notify (G_OBJECT(client), "on-battery");
 	}
 
@@@@ -410,7 +410,7 @@@@ up_client_get_properties_sync (UpClient *client, GCanc
 	}
 	prop_val = g_value_get_boolean (value);
 	if (prop_val != client->priv->on_low_battery) {
-		client->priv->on_low_battery = ret;
+		client->priv->on_low_battery = prop_val;
 		g_object_notify (G_OBJECT(client), "on-low-battery");
 	}
 
@@@@ -421,7 +421,7 @@@@ up_client_get_properties_sync (UpClient *client, GCanc
 	}
 	prop_val = g_value_get_boolean (value);
 	if (prop_val != client->priv->lid_is_present) {
-		client->priv->lid_is_present = ret;
+		client->priv->lid_is_present = prop_val;
 		g_object_notify (G_OBJECT(client), "lid-is-present");
 	}
 
@@@@ -431,8 +431,8 @@@@ up_client_get_properties_sync (UpClient *client, GCanc
 		goto out;
 	}
 	prop_val = g_value_get_boolean (value);
-	if (ret != client->priv->is_docked) {
-		client->priv->is_docked = ret;
+	if (prop_val != client->priv->is_docked) {
+		client->priv->is_docked = prop_val;
 		g_object_notify (G_OBJECT(client), "is-docked");
 	}
 
@@@@ -443,7 +443,7 @@@@ up_client_get_properties_sync (UpClient *client, GCanc
 	}
 	prop_val = g_value_get_boolean (value);
 	if (prop_val != client->priv->lid_force_sleep) {
-		client->priv->lid_force_sleep = ret;
+		client->priv->lid_force_sleep = prop_val;
 		g_object_notify (G_OBJECT(client), "lid-force-sleep");
 	}
@


1.1
log
@Update to upower-0.9.22.

ok landry@@ (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
@

