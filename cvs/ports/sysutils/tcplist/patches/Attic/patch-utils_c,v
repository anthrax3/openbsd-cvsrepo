head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.18
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.14
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.12
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.10
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.8
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.6
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.1.0.32
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.30
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.28
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.26
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.24
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.22
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.20
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.18
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.16
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.14
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.08.24.21.16.19;	author jca;	state dead;
branches;
next	1.3;
commitid	qHpzSTgXTmqpSY6u;

1.3
date	2012.01.17.17.08.16;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2012.01.17.17.05.14;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.04.18.58.44;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove tcplist; old, unsafe, broken on 64 bits archs, .shar, etc

ok naddy@@ sthen@@
@
text
@$OpenBSD: patch-utils_c,v 1.3 2012/01/17 17:08:16 sthen Exp $
--- utils.c.orig	Tue Jan 17 16:44:32 2012
+++ utils.c	Tue Jan 17 16:44:32 2012
@@@@ -17,7 +17,7 @@@@ static char rcsid[] = "$Id: utils.c,v 1.6 1997/04/24 1
 #else
 #include <strings.h>
 #endif
-#include <varargs.h>
+#include <stdarg.h>
 #include "utils.h"
 
 #ifdef lint
@@@@ -42,14 +42,11 @@@@ extern int d;
  *	    follows it.
  */
 /*VARARGS*/
-void Error(va_alist)
-va_dcl
+void Error(const char *format, ...)
 {
 	va_list args;
-	char *format;
 
-	va_start(args);
-	format = va_arg(args, char *);
+	va_start(args, format);
 	(void)fprintf(stderr, "%s: ", progname);
 	(void)vfprintf(stderr, format, args);
 	(void)fprintf(stderr, "\n");
@@@@ -63,18 +60,11 @@@@ va_dcl
  *            is equal to or greater than the debugging level.
  */
 /*VARARGS*/
-void dfprintf(va_alist)
-va_dcl
+void dfprintf(int debugLevel, FILE *stream, const char *format, ...)
 {
 	va_list args;
-	int debugLevel;
-	FILE *stream;
-	char *format;
 	
-	va_start(args);
-	debugLevel = va_arg(args, int);
-	stream = va_arg(args, FILE *);
-	format = va_arg(args, char *);
+	va_start(args, format);
 	if(d >= debugLevel){
 		(void)vfprintf(stream, format, args);
 	}
@@@@ -85,14 +75,11 @@@@ va_dcl
  * Warning(): behaves like Error, except returns rather than exits.
  */
 /*VARARGS*/
-void Warning(va_alist)
-va_dcl
+void Warning(const char *format, ...)
 {
 	va_list args;
-	char *format;
 
-	va_start(args);
-	format = va_arg(args, char *);
+	va_start(args, format);
     (void)fprintf(stderr, "%s: ", progname);
     (void)vfprintf(stderr, format, args);
     (void)fprintf(stderr, "\n");
@@@@ -186,22 +173,16 @@@@ int line;
  *        in malloc'ed space.
  */
 /*VARARGS*/
-char *cat(va_alist)
-va_dcl
+char *cat(char *one, ...)
 {
 	va_list args;
 	unsigned length=1;
 	char *str, *newstr;
 
 	/* get length */
-	va_start(args);
-	loop{
-		str = va_arg(args, char *);
-		if(NULL!=str){
-			 length+=strlen(str);
-		} else {
-			break;
-		}
+	va_start(args, one);
+	for (str = one; str != NULL; str = va_arg(args, char *)) {
+		length+=strlen(str);
 	}
 	va_end(args);
 
@@@@ -211,14 +192,9 @@@@ va_dcl
 	newstr[0]=(char)0;
 
 	/* create string */
-	va_start(args);
-	loop{
-		str = va_arg(args, char *);
-		if(NULL!=str) {
-			(void)strcat(newstr, str);
-		} else {
-			break;
-		}
+	va_start(args, one);
+	for (str = one; str != NULL; str = va_arg(args, char *)) {
+		(void)strcat(newstr, str);
 	}
  va_end(args);
 #ifdef lint
@@@@ -259,6 +235,7 @@@@ int hostresolv;
 				lastfail++;
 			}
 		}
+		iaddr=ntohl(iaddr);
 		sprintf(iaddrbuff, "%u.%u.%u.%u", (iaddr>>24)&0xff,
 		(iaddr>>16)&0xff, (iaddr>>8)&0xff,
 		iaddr&0xff);
@


1.3
log
@- add upstream patches (missing ntohl, adjust lsof parsing)
- add missing prototype
- unbreak lsof command line
- mark BROKEN on lp64

considering between these problems this port was totally useless, so
presumably nobody actually uses this and is a good candidate for removal.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@regen patches
@
text
@d2 2
a3 2
--- utils.c.orig	Tue Jan 17 17:04:32 2012
+++ utils.c	Tue Jan 17 17:04:33 2012
d113 8
@


1.1
log
@bring tcplist in 2004 (varargs stuff)
@
text
@d2 3
a4 3
--- utils.c.orig	2004-01-04 19:49:27.000000000 +0100
+++ utils.c	2004-01-04 19:53:29.000000000 +0100
@@@@ -17,7 +17,7 @@@@ static char rcsid[] = "$Id: utils.c,v 1.
@

