head	1.2;
access;
symbols
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	wilfried_20060506:1.1.1.1
	wilfried:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2007.10.25.17.15.28;	author wilfried;	state dead;
branches;
next	1.1;

1.1
date	2006.05.06.17.28.44;	author wilfried;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.05.06.17.28.44;	author wilfried;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update ipmitool to 1.8.9
@
text
@$OpenBSD: patch-src_plugins_imb_imbapi_c,v 1.1 2006/05/06 17:28:44 wilfried Exp $
--- src/plugins/imb/imbapi.c.orig	Wed May  3 13:21:34 2006
+++ src/plugins/imb/imbapi.c	Wed May  3 13:20:34 2006
@@@@ -1961,6 +1961,7 @@@@ UnmapPhysicalMemory (
 ACCESN_STATUS
 MapPhysicalMemory(int startAddress,int addressLength, int *virtualAddress )
 {
+#if 0
 	int 				fd; 
 	unsigned int 		length = addressLength;
 	off_t 				startpAddress = (off_t)startAddress;
@@@@ -2017,11 +2018,14 @@@@ MapPhysicalMemory(int startAddress,int a
 
 	*virtualAddress = (long)(startvAddress + diff);
 	return ACCESN_OK;
+#endif
+	return ACCESN_ERROR ;
 }
 
 ACCESN_STATUS
 UnmapPhysicalMemory( int virtualAddress, int Length )
 {
+#if 0
 	unsigned int diff = 0;
 
 	/* page align the virtual address and adjust length accordingly  */
@@@@ -2046,6 +2050,8 @@@@ UnmapPhysicalMemory( int virtualAddress,
 #endif
 
 	return ACCESN_OK;
+#endif
+	return ACCESN_ERROR;
 }
 #endif    /*unix*/
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import of ipmitool-1.8.7

ipmitool is a utility for managing and configuring devices that
support the Intelligent Platform Management Interface.
@
text
@@
