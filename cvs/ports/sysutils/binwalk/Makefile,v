head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.6
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	sthen_20131027:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2016.01.26.13.29.11;	author sthen;	state Exp;
branches;
next	1.4;
commitid	ZbK7lgCkkXx564V3;

1.4
date	2016.01.26.13.05.27;	author sthen;	state Exp;
branches;
next	1.3;
commitid	cMxRj4DrHN3KQ6NU;

1.3
date	2014.08.20.00.29.15;	author sthen;	state Exp;
branches;
next	1.2;
commitid	C5SrsUc4cidYO5jl;

1.2
date	2013.11.02.20.32.49;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.27.09.58.41;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.10.27.09.58.41;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.5
log
@use MODPY_PI MASTER_SITES where the files are the same as on googlecode.
update some HOMEPAGEs and add some comments.
@
text
@# $OpenBSD: Makefile,v 1.4 2016/01/26 13:05:27 sthen Exp $

COMMENT=	tool for reverse-engineering and analysing firmware blobs

MODPY_EGG_VERSION = 1.2.2_1
REVISION=	2
DISTNAME=	binwalk-1.2.2-1
PKGNAME=	binwalk-1.2.2.1

CATEGORIES=	sysutils

HOMEPAGE=	http://binwalk.org/

MAINTAINER=	Stuart Henderson <sthen@@openbsd.org>

# MIT
PERMIT_PACKAGE_CDROM=	Yes

MASTER_SITES=	http://binwalk.googlecode.com/files/

MODULES=	lang/python
BUILD_DEPENDS=	${RUN_DEPENDS}
RUN_DEPENDS=	devel/py-libmagic \
		graphics/py-matplotlib

NO_TEST=	Yes

WRKSRC=		${WRKDIST}/src

pre-configure:
	rm ${WRKSRC}/magic/*.orig # don't include pre-patched files in the generated amalgamation

post-install:
	${INSTALL_DATA_DIR} ${PREFIX}/share/doc/binwalk
	${INSTALL_DATA} ${WRKDIST}/docs/* ${PREFIX}/share/doc/binwalk/

.include <bsd.port.mk>
@


1.4
log
@Chase Location: header redirects for googlecode-hosted HOMEPAGEs and
bump REVISION.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/08/20 00:29:15 sthen Exp $
d6 1
a6 1
REVISION=	1
d12 1
a12 1
HOMEPAGE=	https://github.com/devttys0/binwalk
@


1.3
log
@handler new py-libmagic, breakage reported by chris@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/11/02 20:32:49 sthen Exp $
d6 1
a8 1
REVISION=	0
d12 1
a12 1
HOMEPAGE=	http://code.google.com/p/binwalk/
@


1.2
log
@minor update to binwalk 1.2.2-1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/10/27 09:58:41 sthen Exp $
d8 1
d29 3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d5 3
a7 2
MODPY_EGG_VERSION = 1.2.2
DISTNAME=	binwalk-1.2.2
@


1.1.1.1
log
@import sysutils/binwalk, req'd by chris@@, ok zhuk@@

Binwalk is a firmware analysis tool designed to assist in the analysis,
extraction, and reverse engineering of firmware images and other binary
blobs. It is simple to use, fully scriptable, and can be easily extended
via custom signatures, extraction rules, and plugin modules.

Binwalk supports various types of analysis useful for inspecting and
reverse engineering firmware, including:

    Embedded file identification and extraction
    Executable code identification
    Type casting
    Entropy analysis and graphing
    Heuristic data analysis
    "Smart" strings analysis

Binwalk's file signatures are (mostly) compatible with the magic signatures
used by the Unix file utility, and include customized/improved signatures
for files that are commonly found in firmware images such as compressed
files, firmware headers, kernels, bootloaders, filesystems, etc.
@
text
@@
