head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.20
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.18
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.12
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.14
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.10
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	edd_20120927:1.1.1.1
	edd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2012.09.27.15.04.22;	author edd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.09.27.15.04.22;	author edd;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@Unix's 'time' utility is a simple and often effective way of measuring how
long a command takes to run ('wall time'). Unfortunately, running a command
once can give misleading timings: the process may create a cache on its first
execution, running faster subsequently; other processes may cause the command
to be starved of CPU or IO time; etc. It is common to see people run 'time'
several times and take whichever values they feel most comfortable with.
Inevitably, this causes problems.

multitime is, in essence, a simple extension to time which runs a command
multiple times and prints the timing means, standard deviations, mins,
medians, and maxes having done so. This can give a much better understanding
of the command's performance.@


1.1.1.1
log
@Import sysutils/multitime, written by and ported by Laurence Tratt.

OK sthen@@

@
text
@@
