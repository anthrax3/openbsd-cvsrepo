head	1.9;
access;
symbols
	OPENBSD_5_0:1.8.0.4
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.6.0.10
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.8
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.4
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	todd_20080119:1.1.1.1
	todd:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2011.08.16.21.23.52;	author sthen;	state dead;
branches;
next	1.8;

1.8
date	2010.11.15.23.22.08;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2010.10.23.22.01.30;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.18.00.40.50;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	2008.04.29.20.38.03;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	2008.04.28.22.27.41;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2008.01.20.15.11.05;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2008.01.20.00.13.21;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2008.01.19.23.55.19;	author todd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.01.19.23.55.19;	author todd;	state Exp;
branches;
next	;


desc
@@


1.9
log
@remove kqemu (which was broken, reported by Alexander Schrijver and
probably others) and qemu-old; the current qemu version in emulators/qemu
works well now (kqemu is no longer supported upstream).

ok Brad (emulators/qemu maintainer) todd@@ and I think there were some others
@
text
@# $OpenBSD: Makefile,v 1.8 2010/11/15 23:22:08 espie Exp $

ONLY_FOR_ARCHS=	amd64 i386

COMMENT=		QEMU accelerator module

DISTNAME=		kqemu-1.3.0pre11
REVISION=		3
CATEGORIES=		emulators

HOMEPAGE=		http://bellard.org/qemu/

MAINTAINER=		Todd T. Fries <todd@@openbsd.org>

# GPL
PERMIT_PACKAGE_CDROM=	Yes
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes

MASTER_SITES=		${HOMEPAGE}

BUILD_DEPENDS=		devel/gmake

CONFIGURE_STYLE=	simple
CONFIGURE_ARGS=		--prefix=${PREFIX} \
			--cc=${CC} \
			--host-cc=${CC} \
			--make=${MAKE_PROGRAM}

INSTDIR=		${PREFIX}/lib/kqemu
SUBST_VARS=		INSTDIR

NO_REGRESS=		Yes

FILES=			Makefile.openbsd kqemu-openbsd.c

post-extract:
.for _f in ${FILES}
	@@cp ${FILESDIR}/${_f} ${WRKSRC}
.endfor
	@@cd ${WRKSRC} && cp kqemu-openbsd.c kqemu-openbsd-mp.c

do-build:
	@@cd ${WRKBUILD} && ${SETENV} ${MAKE_ENV} ${MAKE_PROGRAM} \
	    ${MAKE_FLAGS} -f Makefile.openbsd
	@@cd ${WRKBUILD} && ${SETENV} ${MAKE_ENV} ${MAKE_PROGRAM} \
	    ${MAKE_FLAGS} -f Makefile.openbsd MP=1

do-install:
	${INSTALL_DATA_DIR} ${INSTDIR}
	cd ${WRKBUILD} && ${INSTALL_DATA} kqemu.o kqemu_mp.o \
	    ${INSTDIR}

.include <bsd.port.mk>
@


1.8
log
@new depends
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2010/10/23 22:01:30 sthen Exp $
@


1.7
log
@revision/lib_depends
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2008/06/18 00:40:50 todd Exp $
d23 1
a23 1
BUILD_DEPENDS=		::devel/gmake
@


1.6
log
@update homepage, from naddy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2008/04/29 20:38:03 todd Exp $
d8 1
a8 1
PKGNAME=		${DISTNAME}p3
@


1.5
log
@o compile and install a MP lkm as well
o initial work by brad@@, polishing by me
o idea for MP detection shellcode from drahn@@

for those with MP systems, pay attention to the MESSAGE shellcode example,
and make sure to modify any existing shellcode you may have in
/etc/rc.securelevel lest you try to load a UP lkm on a MP kernel and have
unpleasant consequences.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2008/04/28 22:27:41 todd Exp $
d8 1
a8 1
PKGNAME=		${DISTNAME}p2
d11 1
a11 1
HOMEPAGE=		http://fabrice.bellard.free.fr/qemu/
@


1.4
log
@various cleanups/knf/etc from brad@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2008/01/20 15:11:05 ajacoutot Exp $
d8 1
a8 1
PKGNAME=		${DISTNAME}p1
a30 1
MAKE_FILE=		Makefile.openbsd
d36 1
a36 1
FILES= Makefile.openbsd kqemu-openbsd.c
d40 1
a40 1
	@@cp ${FILESDIR}/${_f} ${WRKBUILD}
d42 7
d52 2
a53 1
	${INSTALL_DATA} ${WRKBUILD}/kqemu.o ${INSTDIR}
@


1.3
log
@- add missing RCS tags
- respect $CC
- add NO_REGRESS
- s/$LOCALBASE/$PREFIX and don't hardcode paths
- lowercase MAINTAINER's email

ok jasper@@ sthen@@ marco@@ todd@@ (MAINTAINER)
@
text
@d1 1
a1 1
# $OpenBSD$
d3 1
a3 1
ONLY_FOR_ARCHS=	i386 amd64
d8 1
a8 1
PKGNAME=		${DISTNAME}p0
d25 3
a27 2
CONFIGURE_STYLE=	gnu
CONFIGURE_ARGS=		--cc=${CC} \
@


1.2
log
@as pointed out by marco@@, once imported cp ${FILESDIR}/* is not going to work
fix properly

Also, for the record, much thanks to Adrian Enache for originally
submitting this to ports@@, and Roberto Fernandez for getting it to a point
that I only needed to tweak it slighly to commit it
@
text
@d1 2
d8 1
d13 1
a13 1
MAINTAINER=		Todd T. Fries <todd@@OpenBSD.org>
d26 4
d31 4
a34 1
PREFIX=			${LOCALBASE}/lib/kqemu
d44 2
a45 2
	${INSTALL_DATA_DIR} ${PREFIX}
	${INSTALL_DATA} ${WRKBUILD}/kqemu.o ${PREFIX}
@


1.1
log
@Initial revision
@
text
@d26 2
d29 3
a31 1
	@@cp ${FILESDIR}/* ${WRKBUILD}
@


1.1.1.1
log
@Import kqemu, submitted in the past, slightly tweaked by me

The QEMU Accelerator (KQEMU) is a driver allowing a user application to
run x86 code in a Virtual Machine (VM). The code can be either user or
kernel code, in 64, 32 or 16 bit protected mode. KQEMU is very similar
in essence to the VM86 Linux syscall call, but it adds some new concepts
to improve memory handling.

KQEMU is ported on many host OSes (currently Linux, Windows, FreeBSD,
Solaris). It can execute code from many guest OSes (e.g. Linux, Windows
2000/XP) even if the host CPU does not support hardware virtualization.
@
text
@@
