head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.0.6
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_7:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2016.03.14.19.46.12;	author ajacoutot;	state dead;
branches;
next	1.1;
commitid	ZypCecrzOxeE8g1E;

1.1
date	2015.08.11.21.28.53;	author sthen;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;
commitid	bEQ3qdmOkJ4uPZfR;

1.1.2.1
date	2015.08.14.06.39.38;	author jasper;	state Exp;
branches;
next	;
commitid	Px3KHwTLTWPaYnGe;

1.1.4.1
date	2015.08.24.09.35.36;	author jasper;	state Exp;
branches;
next	;
commitid	U0ZAwVDx3wCcvGa4;


desc
@@


1.2
log
@Major update to qemu-2.5.0.
Please direct any runtime fallout to Brad.

from Brad (maintainer)
@
text
@$OpenBSD: patch-ui_vnc-ws_h,v 1.1 2015/08/11 21:28:53 sthen Exp $

CVE-2015-1779: incrementally decode websocket frames

The logic for decoding websocket frames wants to fully
decode the frame header and payload, before allowing the
VNC server to see any of the payload data. There is no
size limit on websocket payloads, so this allows a
malicious network client to consume 2^64 bytes in memory
in QEMU. It can trigger this denial of service before
the VNC server even performs any authentication.

The fix is to decode the header, and then incrementally
decode the payload data as it is needed. With this fix
the websocket decoder will allow at most 4k of data to
be buffered before decoding and processing payload.

--- ui/vnc-ws.h.orig	Tue Mar 10 13:38:32 2015
+++ ui/vnc-ws.h	Wed Aug  5 03:56:50 2015
@@@@ -83,7 +83,12 @@@@ long vnc_client_read_ws(VncState *vs);
 void vncws_process_handshake(VncState *vs, uint8_t *line, size_t size);
 void vncws_encode_frame(Buffer *output, const void *payload,
             const size_t payload_size);
-int vncws_decode_frame(Buffer *input, uint8_t **payload,
-                               size_t *payload_size, size_t *frame_size);
+int vncws_decode_frame_header(Buffer *input,
+                              size_t *header_size,
+                              size_t *payload_remain,
+                              WsMask *payload_mask);
+int vncws_decode_frame_payload(Buffer *input,
+                               size_t *payload_remain, WsMask *payload_mask,
+                               uint8_t **payload, size_t *payload_size);
 
 #endif /* __QEMU_UI_VNC_WS_H */
@


1.1
log
@Backport SECURITY fixes for qemu, from Brad.

ide/atapi: Fix START STOP UNIT command completion
rtl8139: avoid nested ifs in IP header parsing (CVE-2015-5165)
rtl8139: drop tautologous if (ip) {...} statement (CVE-2015-5165)
rtl8139: skip offload on short Ethernet/IP header (CVE-2015-5165)
rtl8139: check IP Header Length field (CVE-2015-5165)
rtl8139: check IP Total Length field (CVE-2015-5165)
rtl8139: skip offload on short TCP header (CVE-2015-5165)
rtl8139: check TCP Data Offset field (CVE-2015-5165)
scsi: fix buffer overflow in scsi_req_parse_cdb (CVE-2015-5158)
slirp: use less predictable directory name in /tmp for smb config (CVE-2015-4037)
i8254: fix out-of-bounds memory access in pit_ioport_read() (CVE-2015-3214)
incrementally decode websocket frames (CVE-2015-1779)
limit size of HTTP headers from websockets clients (CVE-2015-1779)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.4.1
log
@Backport SECURITY fixes for qemu

ide/atapi: Fix START STOP UNIT command completion
rtl8139: avoid nested ifs in IP header parsing (CVE-2015-5165)
rtl8139: drop tautologous if (ip) {...} statement (CVE-2015-5165)
rtl8139: skip offload on short Ethernet/IP header (CVE-2015-5165)
rtl8139: check IP Header Length field (CVE-2015-5165)
rtl8139: check IP Total Length field (CVE-2015-5165)
rtl8139: skip offload on short TCP header (CVE-2015-5165)
rtl8139: check TCP Data Offset field (CVE-2015-5165)
scsi: fix buffer overflow in scsi_req_parse_cdb (CVE-2015-5158)
slirp: use less predictable directory name in /tmp for smb config (CVE-2015-4037)
i8254: fix out-of-bounds memory access in pit_ioport_read() (CVE-2015-3214)
incrementally decode websocket frames (CVE-2015-1779)
limit size of HTTP headers from websockets clients (CVE-2015-1779)
@
text
@d1 1
a1 1
$OpenBSD: patch-ui_vnc-ws_h,v 1.1 2015/08/11 21:28:53 sthen Exp $
@


1.1.2.1
log
@backport security fixes from -current, ok brad

ide/atapi: Fix START STOP UNIT command completion
rtl8139: avoid nested ifs in IP header parsing (CVE-2015-5165)
rtl8139: drop tautologous if (ip) {...} statement (CVE-2015-5165)
rtl8139: skip offload on short Ethernet/IP header (CVE-2015-5165)
rtl8139: check IP Header Length field (CVE-2015-5165)
rtl8139: check IP Total Length field (CVE-2015-5165)
rtl8139: skip offload on short TCP header (CVE-2015-5165)
rtl8139: check TCP Data Offset field (CVE-2015-5165)
scsi: fix buffer overflow in scsi_req_parse_cdb (CVE-2015-5158)
slirp: use less predictable directory name in /tmp for smb config (CVE-2015-4037)
i8254: fix out-of-bounds memory access in pit_ioport_read() (CVE-2015-3214)
incrementally decode websocket frames (CVE-2015-1779)
limit size of HTTP headers from websockets clients (CVE-2015-1779)
@
text
@d1 1
a1 1
$OpenBSD: patch-ui_vnc-ws_h,v 1.1 2015/08/11 21:28:53 sthen Exp $
@

