head	1.3;
access;
symbols
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	todd_20050307:1.1.1.1
	todd:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2006.02.08.13.44.17;	author todd;	state dead;
branches;
next	1.2;

1.2
date	2005.12.27.07.56.15;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.07.16.41.28;	author todd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.03.07.16.41.28;	author todd;	state Exp;
branches;
next	;


desc
@@


1.3
log
@o from the qemu mailing list, prompted by brad@@, improve userland
  networking througput since otherwise the emulated NICs didn't
  have a way of indicating the receive queue is full and would
  drop packets.
o bump PKGNAME
o inttypes.h made irrelevent a few chunks of patches, so use it instead
@
text
@$OpenBSD: patch-audio_audio_c,v 1.2 2005/12/27 07:56:15 todd Exp $
--- audio/audio.c.orig	Mon Dec 19 16:51:53 2005
+++ audio/audio.c	Tue Dec 20 10:59:25 2005
@@@@ -55,6 +55,12 @@@@ static struct audio_driver *drvtab[] = {
     &wav_audio_driver
 };
 
+#ifdef __OpenBSD__
+#include <sys/limits.h>
+#define INT16_MAX	SHRT_MAX
+#define	UINT64_MAX	ULONG_MAX
+#endif
+
 struct fixed_settings {
     int enabled;
     int nb_voices;
@


1.2
log
@update to 0.8.0, see qemu.org for full ChangeLog
for OpenBSD, amd64 simulation on i386 appars to work ok now
@
text
@d1 1
a1 1
$OpenBSD: patch-audio_audio_c,v 1.1.1.1 2005/03/07 16:41:28 todd Exp $
@


1.1
log
@Initial revision
@
text
@d1 6
a6 6
$OpenBSD$
--- audio/audio.c.orig	Mon Nov 15 04:51:33 2004
+++ audio/audio.c	Tue Feb 15 22:07:06 2005
@@@@ -35,6 +35,10 @@@@
 #define ldebug(...)
 #endif
d9 3
a11 1
+#define INT16_MAX		(32767)
d14 3
a16 3
 #define QC_AUDIO_DRV    "QEMU_AUDIO_DRV"
 #define QC_VOICES       "QEMU_VOICES"
 #define QC_FIXED_FORMAT "QEMU_FIXED_FORMAT"
@


1.1.1.1
log
@Import qemu snapshot from 2005-02-27

QEMU is a generic and open source processor emulator 
which achieves a good emulation speed by using dynamic translation.

QEMU has two operating modes:

* Full system emulation. In this mode, QEMU emulates 
a full system (for example a PC), including a processor and 
various peripherials. It can be used to launch different
Operating Systems without rebooting the PC or to debug system code.

* User mode emulation (Linux host only). In this mode, 

.. many thanks for feedback from many people, and for Lars Hansson and 
   Michael Schmidt for posting early work on the port of qemu to ports@@

For now, only for macppc and i386, as these are currently the only archs
that have reported success building qemu.
QEMU can launch Linux processes compiled for one CPU on another CPU. 
@
text
@@
