head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2016.03.14.19.46.12;	author ajacoutot;	state dead;
branches;
next	1.1;
commitid	ZypCecrzOxeE8g1E;

1.1
date	2015.12.16.06.41.06;	author ajacoutot;	state Exp;
branches
	1.1.2.1;
next	;
commitid	Mr3TINbPs4mSz43P;

1.1.2.1
date	2015.12.24.09.44.14;	author jasper;	state Exp;
branches;
next	;
commitid	FaciMaYoEtARAEEx;


desc
@@


1.2
log
@Major update to qemu-2.5.0.
Please direct any runtime fallout to Brad.

from Brad (maintainer)
@
text
@$OpenBSD: patch-hw_pci_msix_c,v 1.1 2015/12/16 06:41:06 ajacoutot Exp $

msix: implement pba write (but read-only)

qpci_msix_pending() writes on pba region, causing qemu to SEGV

(without this patch, this can be reproduced with the ivshmem qtest)

Implement an empty mmio write to avoid the crash.

CVE-2015-7549

--- hw/pci/msix.c.orig	Tue Dec 15 20:03:17 2015
+++ hw/pci/msix.c	Tue Dec 15 20:04:53 2015
@@@@ -200,8 +200,14 @@@@ static uint64_t msix_pba_mmio_read(void *opaque, hwadd
     return pci_get_long(dev->msix_pba + addr);
 }
 
+static void msix_pba_mmio_write(void *opaque, hwaddr addr,
+                                uint64_t val, unsigned size)
+{
+}
+
 static const MemoryRegionOps msix_pba_mmio_ops = {
     .read = msix_pba_mmio_read,
+    .write = msix_pba_mmio_write,
     .endianness = DEVICE_LITTLE_ENDIAN,
     .valid = {
         .min_access_size = 4,
@


1.1
log
@SECURITY fixes for:
CVE-2015-7549, CVE-2015-8504, CVE-2015-8558, CVE-2015-8567 and CVE-2015-8568

from Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@Security fixes for CVE-2015-7549, CVE-2015-8504, CVE-2015-8558, CVE-2015-8567,
CVE-2015-8568, CVE-2015-8613
@
text
@d1 1
a1 1
$OpenBSD: patch-hw_pci_msix_c,v 1.1 2015/12/16 06:41:06 ajacoutot Exp $
@

