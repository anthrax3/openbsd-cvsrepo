head	1.7;
access;
symbols
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2008.04.28.22.52.38;	author todd;	state dead;
branches;
next	1.6;

1.6
date	2007.05.01.12.55.14;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	2006.12.22.17.31.45;	author todd;	state dead;
branches;
next	1.4;

1.4
date	2006.06.08.14.33.38;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.16.16.27.44;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.27.07.56.15;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.11.01.15.17;	author todd;	state Exp;
branches;
next	;


desc
@@


1.7
log
@o update to 0.9.1, lots from brad@@
o see http://qemu.org/changelog.html for details
o see README.OpenBSD for an intro to qemu on OpenBSD
o disable broken arm host support for now
@
text
@$OpenBSD: patch-hw_pc_c,v 1.6 2007/05/01 12:55:14 todd Exp $
--- hw/pc.c.orig	Mon Feb  5 17:01:54 2007
+++ hw/pc.c	Fri Apr  6 13:07:38 2007
@@@@ -711,23 +711,36 @@@@ static void pc_init1(int ram_size, int vga_ram_size, i
     if (i440fx_state) {
         i440fx_init_memory_mappings(i440fx_state);
     }
-#if 0
     /* ??? Need to figure out some way for the user to
        specify SCSI devices.  */
-    if (pci_enabled) {
+    if (pci_enabled && scsi_enabled) {
         void *scsi;
         BlockDriverState *bdrv;
 
         scsi = lsi_scsi_init(pci_bus, -1);
-        bdrv = bdrv_new("scsidisk");
-        bdrv_open(bdrv, "scsi_disk.img", 0);
+        bdrv = bdrv_new("scsidisk0");
+        bdrv_open(bdrv, "scsi_disk0.img", 0);
         lsi_scsi_attach(scsi, bdrv, -1);
-        bdrv = bdrv_new("scsicd");
-        bdrv_open(bdrv, "scsi_cd.iso", 0);
+        bdrv = bdrv_new("scsidisk1");
+        bdrv_open(bdrv, "scsi_disk1.img", 0);
+        lsi_scsi_attach(scsi, bdrv, -1);
+        bdrv = bdrv_new("scsidisk2");
+        bdrv_open(bdrv, "scsi_disk2.img", 0);
+        lsi_scsi_attach(scsi, bdrv, -1);
+        bdrv = bdrv_new("scsidisk3");
+        bdrv_open(bdrv, "scsi_disk3.img", 0);
+        lsi_scsi_attach(scsi, bdrv, -1);
+        bdrv = bdrv_new("scsidisk4");
+        bdrv_open(bdrv, "scsi_disk4.img", 0);
+        lsi_scsi_attach(scsi, bdrv, -1);
+        bdrv = bdrv_new("scsidisk5");
+        bdrv_open(bdrv, "scsi_disk5.img", 0);
+        lsi_scsi_attach(scsi, bdrv, -1);
+        bdrv = bdrv_new("scsicd0");
+        bdrv_open(bdrv, "scsi_cd0.iso", 0);
         bdrv_set_type_hint(bdrv, BDRV_TYPE_CDROM);
         lsi_scsi_attach(scsi, bdrv, -1);
     }
-#endif
 }
 
 static void pc_init_pci(int ram_size, int vga_ram_size, int boot_device,
@


1.6
log
@update to 0.9.0, thanks to all who gave feedback
see http://qemu.org/changelog.html for details
new in OpenBSD, support for raw block devices
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@update qemu to 0.8.2, from brad@@

See http://fabrice.bellard.free.fr/qemu/changelog.html for details.
@
text
@d1 6
a6 15
$OpenBSD: patch-hw_pc_c,v 1.4 2006/06/08 14:33:38 todd Exp $
--- hw/pc.c.orig	Wed May  3 15:32:58 2006
+++ hw/pc.c	Fri May  5 22:16:41 2006
@@@@ -609,7 +609,7 @@@@ static void pc_init1(int ram_size, int v
     char buf[1024];
     int ret, linux_boot, initrd_size, i;
     unsigned long bios_offset, vga_bios_offset;
-    int bios_size, isa_bios_size;
+    int bios_size, isa_bios_size, vga_bios_size;
     PCIBus *pci_bus;
     CPUState *env;
     NICInfo *nd;
@@@@ -662,8 +662,12 @@@@ static void pc_init1(int ram_size, int v
     } else {
         snprintf(buf, sizeof(buf), "%s/%s", bios_dir, VGABIOS_FILENAME);
d8 35
a42 12
+    vga_bios_size = get_image_size(buf);
+    if (vga_bios_size != 32768)
+	    goto bios_error;
+
     ret = load_image(buf, phys_ram_base + vga_bios_offset);
-    
+
     /* setup basic memory access */
     cpu_register_physical_memory(0xc0000, 0x10000, 
                                  vga_bios_offset | IO_MEM_ROM);
@@@@ -793,6 +797,7 @@@@ static void pc_init1(int ram_size, int v
         }
d44 2
d47 1
a47 4
+/* XXX where to insert pci_pcnet_init(pci_bus, &nd_table[i]); ??? */
     for(i = 0; i < nb_nics; i++) {
         nd = &nd_table[i];
         if (!nd->model) {
@


1.4
log
@update to 0.8.1, see http://qemu.org/changelog.html for details
@
text
@d1 1
a1 1
$OpenBSD: patch-hw_pc_c,v 1.3 2006/02/16 16:27:44 todd Exp $
@


1.3
log
@from Andrew Dalgleish openbsd at ajd dot net dot au
o sample qemu-ifup
o permit -net tap,ifname=/dev/tun1 to actually use tun1
from Reyk Floeter reyk at openbsd dot org
o re-enable pcnet

bump PKGNAME
@
text
@d1 4
a4 4
$OpenBSD: patch-hw_pc_c,v 1.2 2005/12/27 07:56:15 todd Exp $
--- hw/pc.c.orig	Mon Dec 19 16:51:53 2005
+++ hw/pc.c	Tue Dec 20 11:22:29 2005
@@@@ -616,7 +616,7 @@@@ static void pc_init1(int ram_size, int v
d6 1
a6 1
     int ret, linux_boot, initrd_size, i, nb_nics1;
d12 2
a13 2
 
@@@@ -668,8 +668,12 @@@@ static void pc_init1(int ram_size, int v
d27 3
a29 1
@@@@ -802,7 +806,12 @@@@ static void pc_init1(int ram_size, int v
d31 4
a34 12
     if (pci_enabled) {
         for(i = 0; i < nb_nics; i++) {
-            pci_ne2000_init(pci_bus, &nd_table[i]);
+#if 1
+            if (nic_pcnet)
+                pci_pcnet_init(pci_bus, &nd_table[i]);
+            else
+#endif
+                pci_ne2000_init(pci_bus, &nd_table[i]); 
         }
         pci_piix3_ide_init(pci_bus, bs_table);
     } else {
@


1.2
log
@update to 0.8.0, see qemu.org for full ChangeLog
for OpenBSD, amd64 simulation on i386 appars to work ok now
@
text
@d1 1
a1 1
$OpenBSD: patch-hw_pc_c,v 1.1 2005/08/11 01:15:17 todd Exp $
d32 1
a32 1
+#if 0
@


1.1
log
@update to 0.7.1 (http://qemu.org/changelog.html)
add pcnet nic support
@
text
@d1 4
a4 4
$OpenBSD$
--- hw/pc.c.orig	Sun Jul 24 13:52:08 2005
+++ hw/pc.c	Wed Aug 10 15:48:42 2005
@@@@ -414,7 +414,7 @@@@ static void pc_init1(int ram_size, int v
d11 1
d13 1
a13 2
     linux_boot = (kernel_filename != NULL);
@@@@ -446,8 +446,12 @@@@ static void pc_init1(int ram_size, int v
d27 1
a27 1
@@@@ -580,7 +584,10 @@@@ static void pc_init1(int ram_size, int v
d32 1
d36 1
@

