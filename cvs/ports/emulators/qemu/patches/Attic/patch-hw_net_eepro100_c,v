head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2016.03.14.19.46.12;	author ajacoutot;	state dead;
branches;
next	1.1;
commitid	ZypCecrzOxeE8g1E;

1.1
date	2015.12.08.06.55.13;	author ajacoutot;	state Exp;
branches
	1.1.2.1;
next	;
commitid	9Su6avHi3SEMpjSH;

1.1.2.1
date	2015.12.09.10.42.58;	author jasper;	state Exp;
branches;
next	;
commitid	v3AIAVQ5v2HwniSB;


desc
@@


1.2
log
@Major update to qemu-2.5.0.
Please direct any runtime fallout to Brad.

from Brad (maintainer)
@
text
@$OpenBSD: patch-hw_net_eepro100_c,v 1.1 2015/12/08 06:55:13 ajacoutot Exp $

eepro100: Prevent two endless loops

http://lists.nongnu.org/archive/html/qemu-devel/2015-11/msg04592.html
shows an example how an endless loop in function action_command can
be achieved.

During my code review, I noticed a 2nd case which can result in an
endless loop.

CVE-2015-8345

--- hw/net/eepro100.c.orig	Mon Dec  7 05:21:02 2015
+++ hw/net/eepro100.c	Mon Dec  7 05:25:42 2015
@@@@ -774,6 +774,11 @@@@ static void tx_command(EEPRO100State *s)
 #if 0
         uint16_t tx_buffer_el = lduw_le_pci_dma(&s->dev, tbd_address + 6);
 #endif
+        if (tx_buffer_size == 0) {
+            /* Prevent an endless loop. */
+            logout("loop in %s:%u\n", __FILE__, __LINE__);
+            break;
+        }
         tbd_address += 8;
         TRACE(RXTX, logout
             ("TBD (simplified mode): buffer address 0x%08x, size 0x%04x\n",
@@@@ -855,6 +860,10 @@@@ static void set_multicast_list(EEPRO100State *s)
 
 static void action_command(EEPRO100State *s)
 {
+    /* The loop below won't stop if it gets special handcrafted data.
+       Therefore we limit the number of iterations. */
+    unsigned max_loop_count = 16;
+
     for (;;) {
         bool bit_el;
         bool bit_s;
@@@@ -870,6 +879,13 @@@@ static void action_command(EEPRO100State *s)
 #if 0
         bool bit_sf = ((s->tx.command & COMMAND_SF) != 0);
 #endif
+
+        if (max_loop_count-- == 0) {
+            /* Prevent an endless loop. */
+            logout("loop in %s:%u\n", __FILE__, __LINE__);
+            break;
+        }
+
         s->cu_offset = s->tx.link;
         TRACE(OTHER,
               logout("val=(cu start), status=0x%04x, command=0x%04x, link=0x%08x\n",
@


1.1
log
@SECURITY fixes for CVE-2015-7504, CVE-2015-7512, CVE-2015-8345.

from Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@SECURITY fixes for CVE-2015-7504, CVE-2015-7512, CVE-2015-8345.
@
text
@d1 1
a1 1
$OpenBSD: patch-hw_net_eepro100_c,v 1.1 2015/12/08 06:55:13 ajacoutot Exp $
@

