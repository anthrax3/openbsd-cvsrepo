head	1.4;
access;
symbols
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.10.17.20.27.17;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2011.08.16.21.24.42;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.12.23.28.39;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.01.26.13.51.43;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to QEMU 0.15.1, from Brad (maintainer).
@
text
@$OpenBSD: patch-net_socket_c,v 1.3 2011/08/16 21:24:42 sthen Exp $
--- net/socket.c.orig	Fri Jul 29 18:14:49 2011
+++ net/socket.c	Sat Jul 30 15:32:58 2011
@@@@ -154,6 +154,12 @@@@ static int net_socket_mcast_create(struct sockaddr_in 
     struct ip_mreq imr;
     int fd;
     int val, ret;
+#ifdef __OpenBSD__
+    unsigned char loop;
+#else
+    int loop;
+#endif
+
     if (!IN_MULTICAST(ntohl(mcastaddr->sin_addr.s_addr))) {
 	fprintf(stderr, "qemu: error: specified mcastaddr \"%s\" (0x%08x) does not contain a multicast address\n",
 		inet_ntoa(mcastaddr->sin_addr),
@@@@ -197,9 +203,9 @@@@ static int net_socket_mcast_create(struct sockaddr_in 
     }
 
     /* Force mcast msgs to loopback (eg. several QEMUs in same host */
-    val = 1;
+    loop = 1;
     ret=setsockopt(fd, IPPROTO_IP, IP_MULTICAST_LOOP,
-                   (const char *)&val, sizeof(val));
+                   (const char *)&loop, sizeof(loop));
     if (ret < 0) {
 	perror("setsockopt(SOL_IP, IP_MULTICAST_LOOP)");
 	goto fail;
@


1.3
log
@update to qemu 0.15.0, from Brad (maintainer)
- handle qemu-old/kqemu removal in PLISTs, allowing seamless updates to
the new version
@
text
@d1 1
a1 1
$OpenBSD: patch-net_socket_c,v 1.2 2011/03/12 23:28:39 sthen Exp $
@


1.2
log
@update qemu to 0.14.0, from Brad.
@
text
@d1 4
a4 4
$OpenBSD: patch-net_socket_c,v 1.1 2011/01/26 13:51:43 sthen Exp $
--- net/socket.c.orig	Mon Feb 14 17:02:07 2011
+++ net/socket.c	Tue Feb 15 20:40:23 2011
@@@@ -154,6 +154,7 @@@@ static int net_socket_mcast_create(struct sockaddr_in 
d8 6
a13 1
+    u_char loop;
d17 1
a17 1
@@@@ -197,9 +198,9 @@@@ static int net_socket_mcast_create(struct sockaddr_in 
@


1.1
log
@- fix multicast virtual networks; setsockopt(SOL_IP, IP_MULTICAST_LOOP)
takes a u_char, not int as in the 0.13.0 qemu code. from mcbride@@ with
name change by fgsch@@.

- fix copy-and-pasto in the sample qemu-ifdown script resulting in
tun interface not being removed and errors when qemu closes. from me.

ok mcbride@@(first part) fgsch@@ ajacoutot@@ landry@@
@
text
@d1 3
a3 3
$OpenBSD$
--- net/socket.c.orig	Sat Oct 16 05:56:09 2010
+++ net/socket.c	Tue Jan 25 05:57:04 2011
d12 1
a12 1
@@@@ -193,9 +194,9 @@@@ static int net_socket_mcast_create(struct sockaddr_in 
@

