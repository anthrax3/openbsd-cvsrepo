head	1.5;
access;
symbols
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2008.04.28.22.52.38;	author todd;	state dead;
branches;
next	1.4;

1.4
date	2007.05.01.12.55.14;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2006.12.22.17.31.45;	author todd;	state dead;
branches;
next	1.2;

1.2
date	2006.06.08.14.33.38;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.08.13.44.17;	author todd;	state Exp;
branches;
next	;


desc
@@


1.5
log
@o update to 0.9.1, lots from brad@@
o see http://qemu.org/changelog.html for details
o see README.OpenBSD for an intro to qemu on OpenBSD
o disable broken arm host support for now
@
text
@$OpenBSD: patch-hw_ne2000_c,v 1.4 2007/05/01 12:55:14 todd Exp $
--- hw/ne2000.c.orig	Thu Apr  5 17:24:58 2007
+++ hw/ne2000.c	Thu Apr  5 17:25:11 2007
@@@@ -206,7 +206,7 @@@@ static int ne2000_buffer_full(NE2000State *s)
 
     index = s->curpag << 8;
     boundary = s->boundary << 8;
-    if (index <= boundary)
+    if (index < boundary)
         avail = boundary - index;
     else
         avail = (s->stop - s->start) - (index - boundary);
@


1.4
log
@update to 0.9.0, thanks to all who gave feedback
see http://qemu.org/changelog.html for details
new in OpenBSD, support for raw block devices
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@update qemu to 0.8.2, from brad@@

See http://fabrice.bellard.free.fr/qemu/changelog.html for details.
@
text
@d1 4
a4 4
$OpenBSD: patch-hw_ne2000_c,v 1.2 2006/06/08 14:33:38 todd Exp $
--- hw/ne2000.c.orig	Sun May 14 19:09:39 2006
+++ hw/ne2000.c	Sun May 14 19:09:12 2006
@@@@ -206,7 +206,7 @@@@ static int ne2000_buffer_full(NE2000Stat
d8 2
a9 2
-    if (index < boundary)
+    if (index <= boundary)
@


1.2
log
@update to 0.8.1, see http://qemu.org/changelog.html for details
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@o from the qemu mailing list, prompted by brad@@, improve userland
  networking througput since otherwise the emulated NICs didn't
  have a way of indicating the receive queue is full and would
  drop packets.
o bump PKGNAME
o inttypes.h made irrelevent a few chunks of patches, so use it instead
@
text
@d2 3
a4 5
--- hw/ne2000.c.orig	Mon Dec 19 17:51:53 2005
+++ hw/ne2000.c	Sat Jan 28 22:10:33 2006
@@@@ -200,14 +200,10 @@@@ static int compute_mcast_idx(const uint8
     return (crc >> 26);
 }
a5 10
-/* return the max buffer size if the NE2000 can receive more data */
-static int ne2000_can_receive(void *opaque)
+static int ne2000_buffer_full(NE2000State *s)
 {
-    NE2000State *s = opaque;
     int avail, index, boundary;
-    
-    if (s->cmd & E8390_STOP)
-        return 0;
+
d8 3
a10 2
     if (index < boundary)
@@@@ -215,10 +211,19 @@@@ static int ne2000_can_receive(void *opaq
a12 48
     if (avail < (MAX_ETH_FRAME_SIZE + 4))
-        return 0;
-    return MAX_ETH_FRAME_SIZE;
+        return 1;
+    return 0;
 }
 
+static int ne2000_can_receive(void *opaque)
+{
+    NE2000State *s = opaque;
+    
+    if (s->cmd & E8390_STOP)
+        return 1;
+    return !ne2000_buffer_full(s);
+}
+
 #define MIN_BUF_SIZE 60
 
 static void ne2000_receive(void *opaque, const uint8_t *buf, int size)
@@@@ -234,7 +239,7 @@@@ static void ne2000_receive(void *opaque,
     printf("NE2000: received len=%d\n", size);
 #endif
 
-    if (!ne2000_can_receive(s))
+    if (s->cmd & E8390_STOP || ne2000_buffer_full(s))
         return;
     
     /* XXX: check this */
@@@@ -715,7 +720,8 @@@@ void isa_ne2000_init(int base, int irq, 
 
     ne2000_reset(s);
 
-    s->vc = qemu_new_vlan_client(nd->vlan, ne2000_receive, s);
+    s->vc = qemu_new_vlan_client(nd->vlan, ne2000_receive,
+                                 ne2000_can_receive, s);
 
     snprintf(s->vc->info_str, sizeof(s->vc->info_str),
              "ne2000 macaddr=%02x:%02x:%02x:%02x:%02x:%02x",
@@@@ -784,7 +790,8 @@@@ void pci_ne2000_init(PCIBus *bus, NICInf
     s->pci_dev = (PCIDevice *)d;
     memcpy(s->macaddr, nd->macaddr, 6);
     ne2000_reset(s);
-    s->vc = qemu_new_vlan_client(nd->vlan, ne2000_receive, s);
+    s->vc = qemu_new_vlan_client(nd->vlan, ne2000_receive,
+                                 ne2000_can_receive, s);
 
     snprintf(s->vc->info_str, sizeof(s->vc->info_str),
              "ne2000 pci macaddr=%02x:%02x:%02x:%02x:%02x:%02x",
@

