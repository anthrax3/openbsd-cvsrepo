head	1.4;
access;
symbols
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	todd_20050307:1.1.1.1
	todd:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2007.05.01.12.55.14;	author todd;	state dead;
branches;
next	1.3;

1.3
date	2007.02.19.22.59.33;	author kili;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.11.01.15.17;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2005.03.07.16.41.28;	author todd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.03.07.16.41.28;	author todd;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to 0.9.0, thanks to all who gave feedback
see http://qemu.org/changelog.html for details
new in OpenBSD, support for raw block devices
@
text
@$OpenBSD: patch-target-sparc_op_helper_c,v 1.3 2007/02/19 22:59:33 kili Exp $
--- target-sparc/op_helper.c.orig	Fri Jan  5 18:29:09 2007
+++ target-sparc/op_helper.c	Fri Jan  5 18:29:28 2007
@@@@ -12,12 +12,12 @@@@ void raise_exception(int tt)
 #ifdef USE_INT_TO_FLOAT_HELPERS
 void do_fitos(void)
 {
-    FT0 = int32_to_float32(*((int32_t *)&FT1));
+    FT0 = int32_to_float32(*((int32_t *)&FT1), &env->fp_status);
 }
 
 void do_fitod(void)
 {
-    DT0 = int32_to_float64(*((int32_t *)&FT1));
+    DT0 = int32_to_float64(*((int32_t *)&FT1), &env->fp_status);
 }
 #endif
 
@


1.3
log
@
Fix build on powerpc.
Remove extra util from WANTLIB (spotted by ajacoutot), and bump the
PKGNAME.
ok robert@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to 0.7.1 (http://qemu.org/changelog.html)
add pcnet nic support
@
text
@d1 17
a17 9
$OpenBSD: patch-target-sparc_op_helper_c,v 1.1 2005/03/07 16:41:28 todd Exp $
--- target-sparc/op_helper.c.orig	Tue Feb 22 13:14:33 2005
+++ target-sparc/op_helper.c	Sun Feb 27 17:15:09 2005
@@@@ -1,5 +1,7 @@@@
 #include <math.h>
+#if !defined(_BSD) && !defined(__OpenBSD__)
 #include <fenv.h>
+#endif
 #include "exec.h"
a18 1
 //#define DEBUG_MMU
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import qemu snapshot from 2005-02-27

QEMU is a generic and open source processor emulator 
which achieves a good emulation speed by using dynamic translation.

QEMU has two operating modes:

* Full system emulation. In this mode, QEMU emulates 
a full system (for example a PC), including a processor and 
various peripherials. It can be used to launch different
Operating Systems without rebooting the PC or to debug system code.

* User mode emulation (Linux host only). In this mode, 

.. many thanks for feedback from many people, and for Lars Hansson and 
   Michael Schmidt for posting early work on the port of qemu to ports@@

For now, only for macppc and i386, as these are currently the only archs
that have reported success building qemu.
QEMU can launch Linux processes compiled for one CPU on another CPU. 
@
text
@@
