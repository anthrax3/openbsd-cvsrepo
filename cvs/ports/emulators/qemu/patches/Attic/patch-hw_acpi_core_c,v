head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2016.03.14.19.46.12;	author ajacoutot;	state dead;
branches;
next	1.1;
commitid	ZypCecrzOxeE8g1E;

1.1
date	2016.01.05.06.56.12;	author ajacoutot;	state Exp;
branches
	1.1.2.1;
next	;
commitid	z2cMvU8TlZZSH8m0;

1.1.2.1
date	2016.01.07.10.27.40;	author jasper;	state Exp;
branches;
next	;
commitid	Ciob9S8eFBoLGbjT;


desc
@@


1.2
log
@Major update to qemu-2.5.0.
Please direct any runtime fallout to Brad.

from Brad (maintainer)
@
text
@$OpenBSD: patch-hw_acpi_core_c,v 1.1 2016/01/05 06:56:12 ajacoutot Exp $

acpi: fix buffer overrun on migration

ich calls acpi_gpe_init with length ICH9_PMIO_GPE0_LEN so
ICH9_PMIO_GPE0_LEN/2 bytes are allocated, but then the full
ICH9_PMIO_GPE0_LEN bytes are migrated.

As a quick work-around, allocate twice the memory.
We'll probably want to tweak code to avoid
migrating the extra ICH9_PMIO_GPE0_LEN/2 bytes,
but that is a bit trickier to do without breaking
migration compatibility.

CVE-2015-8666

--- hw/acpi/core.c.orig	Thu Dec 24 21:36:26 2015
+++ hw/acpi/core.c	Thu Dec 24 21:36:59 2015
@@@@ -611,8 +611,12 @@@@ void acpi_pm1_cnt_reset(ACPIREGS *ar)
 void acpi_gpe_init(ACPIREGS *ar, uint8_t len)
 {
     ar->gpe.len = len;
-    ar->gpe.sts = g_malloc0(len / 2);
-    ar->gpe.en = g_malloc0(len / 2);
+    /* Only first len / 2 bytes are ever used,
+     * but the caller in ich9.c migrates full len bytes.
+     * TODO: fix ich9.c and drop the extra allocation.
+     */
+    ar->gpe.sts = g_malloc0(len);
+    ar->gpe.en = g_malloc0(len);
 }
 
 void acpi_gpe_reset(ACPIREGS *ar)
@


1.1
log
@SECURITY fixes for:
CVE-2015-8619, CVE-2015-8666, CVE-2015-8743, CVE-2015-8744, and CVE-2015-8745

from Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@SECURITY fixes for:
CVE-2015-8619, CVE-2015-8666, CVE-2015-8743, CVE-2015-8744, and CVE-2015-8745
@
text
@d1 1
a1 1
$OpenBSD: patch-hw_acpi_core_c,v 1.1 2016/01/05 06:56:12 ajacoutot Exp $
@

