head	1.9;
access;
symbols
	OPENBSD_5_2:1.8.0.4
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.2
	OPENBSD_4_8:1.6.0.10
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.8
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.4
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.3.0.8
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	todd_20050307:1.1.1.1
	todd:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2012.09.03.08.47.47;	author ajacoutot;	state dead;
branches;
next	1.8;

1.8
date	2011.12.12.10.56.56;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2010.11.12.14.43.13;	author jasper;	state dead;
branches;
next	1.6;

1.6
date	2008.05.12.07.47.22;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2008.04.28.22.52.38;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	2008.01.09.10.17.54;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.16.16.27.44;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.08.13.44.18;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.07.16.41.28;	author todd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.03.07.16.41.28;	author todd;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Remove MESSAGE, people have had several releases to adjust.

ok Brad (maintainer)
@
text
@As of QEMU 1.0 the i386 target has been renamed from qemu to qemu-system-i386.
@


1.8
log
@Update to QEMU 1.0, from Brad.

- disable the BSD userland emulation support for now, it's not widely useful yet
- workaround for incorrect time_t type assumption, from stsp@@

N.B. As of QEMU 1.0 the i386 target has been renamed from qemu to
qemu-system-i386, you will need to change scripts/command lines as necessary.

ok stsp@@ dcoppa@@
@
text
@@


1.7
log
@- switch to pkg-readmes
@
text
@d1 1
a1 2
Please see ${PREFIX}/share/doc/qemu/README.OpenBSD for
a brief intro to using qemu on OpenBSD.
@


1.6
log
@- s/LOCALBASE/PREFIX

maintainer timeout
ok landry@@
@
text
@@


1.5
log
@o update to 0.9.1, lots from brad@@
o see http://qemu.org/changelog.html for details
o see README.OpenBSD for an intro to qemu on OpenBSD
o disable broken arm host support for now
@
text
@d1 1
a1 1
Please see ${LOCALBASE}/share/doc/qemu/README.OpenBSD for
@


1.4
log
@o clean up output of qemu-ifup
o s/qcow/qcow2/ as that is now the recommended default
o bump pkgname
@
text
@d1 2
a2 14
+---------------
| Quick Start:
| 1. get a bootable floppy image
| 2. qemu-img create -f qcow2 virtual.hd 10G
| 3. qemu -m 32 -fda floppy.fs -boot a -monitor stdio virtual.hd
|      (initial install to hard drive)
| 4. qemu-img convert -c -O qcow2 virtual.hd tmp && mv tmp virtual.hd
|      (compress hard drive while qemu is not running)
| 5. qemu -m 32 -monitor stdio virtual.hd
|      (normal boot from hard drive)
|
| Note: Customize ${SYSCONFDIR}/qemu-ifup to use '-net tap' on your system.
+---------------

@


1.3
log
@from Andrew Dalgleish openbsd at ajd dot net dot au
o sample qemu-ifup
o permit -net tap,ifname=/dev/tun1 to actually use tun1
from Reyk Floeter reyk at openbsd dot org
o re-enable pcnet

bump PKGNAME
@
text
@d4 1
a4 1
| 2. qemu-img create -f qcow virtual.hd 10G
d7 1
a7 1
| 4. qemu-img convert -c -O qcow virtual.hd tmp && mv tmp virtual.hd
@


1.2
log
@o from the qemu mailing list, prompted by brad@@, improve userland
  networking througput since otherwise the emulated NICs didn't
  have a way of indicating the receive queue is full and would
  drop packets.
o bump PKGNAME
o inttypes.h made irrelevent a few chunks of patches, so use it instead
@
text
@d11 2
@


1.1
log
@Initial revision
@
text
@d5 6
a10 1
| 3. qemu -m 32 -fda floppy.fs -boot a virtual.hd
@


1.1.1.1
log
@Import qemu snapshot from 2005-02-27

QEMU is a generic and open source processor emulator 
which achieves a good emulation speed by using dynamic translation.

QEMU has two operating modes:

* Full system emulation. In this mode, QEMU emulates 
a full system (for example a PC), including a processor and 
various peripherials. It can be used to launch different
Operating Systems without rebooting the PC or to debug system code.

* User mode emulation (Linux host only). In this mode, 

.. many thanks for feedback from many people, and for Lars Hansson and 
   Michael Schmidt for posting early work on the port of qemu to ports@@

For now, only for macppc and i386, as these are currently the only archs
that have reported success building qemu.
QEMU can launch Linux processes compiled for one CPU on another CPU. 
@
text
@@
