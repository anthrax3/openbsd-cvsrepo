head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.12
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2014.06.27.06.19.43;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	sSPIJi52Fo4V8YpH;

1.3
date	2012.08.13.14.18.15;	author gsoares;	state Exp;
branches;
next	1.2;

1.2
date	2012.06.08.09.16.32;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.03.16.29.29;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to gns3-0.8.6.
@
text
@$OpenBSD: patch-src_GNS3_QemuManager_py,v 1.3 2012/08/13 14:18:15 gsoares Exp $
--- src/GNS3/QemuManager.py.orig	Wed Oct 23 04:57:46 2013
+++ src/GNS3/QemuManager.py	Fri Jun 27 08:04:56 2014
@@@@ -126,7 +126,7 @@@@ class QemuManager(object):
         if sys.platform.startswith('win') and (globals.GApp.systconf['qemu'].qemuwrapper_path.split('.')[-1] == 'exe'):
             self.proc.start('"' + globals.GApp.systconf['qemu'].qemuwrapper_path + '"', ['--listen', binding, '--port', str(self.port), '--no-path-check'])
         elif hasattr(sys, "frozen"):
-            self.proc.start('python',  [globals.GApp.systconf['qemu'].qemuwrapper_path, '--listen', binding, '--port', str(self.port), '--no-path-check'])
+            self.proc.start('${MODPY_BIN}',  [globals.GApp.systconf['qemu'].qemuwrapper_path, '--listen', binding, '--port', str(self.port), '--no-path-check'])
         else:
             self.proc.start(sys.executable,  [globals.GApp.systconf['qemu'].qemuwrapper_path, '--listen', binding, '--port', str(self.port), '--no-path-check'])
 
@@@@ -175,7 +175,7 @@@@ class QemuManager(object):
             # On Windows hosts, we remove python dependency by pre-compiling Qemuwrapper. (release mode)
             proc.start('"' + globals.GApp.systconf['qemu'].qemuwrapper_path + '"', ['--listen', binding, '--no-path-check'])
         elif hasattr(sys, "frozen"):
-            proc.start('python',  [globals.GApp.systconf['qemu'].qemuwrapper_path, '--listen', binding, '--no-path-check'])
+            proc.start('${MODPY_BIN}',  [globals.GApp.systconf['qemu'].qemuwrapper_path, '--listen', binding, '--no-path-check'])
         else:
             proc.start(sys.executable,  [globals.GApp.systconf['qemu'].qemuwrapper_path, '--listen', binding, '--no-path-check'])
 
@


1.3
log
@update to 0.8.3
add support for qemu
pkg/DESCR bits from sthen@@

ok sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-src_GNS3_QemuManager_py,v 1.2 2012/06/08 09:16:32 sthen Exp $
--- src/GNS3/QemuManager.py.orig	Fri Jul 13 00:23:30 2012
+++ src/GNS3/QemuManager.py	Fri Aug 10 16:44:14 2012
@@@@ -127,7 +127,7 @@@@ class QemuManager(object):
d13 1
a13 1
@@@@ -178,7 +178,7 @@@@ class QemuManager(object):
@


1.2
log
@update gns3 to 0.8.2, and remove armani@@ as maintainer at his request.
@
text
@d1 4
a4 4
$OpenBSD: patch-src_GNS3_QemuManager_py,v 1.1 2011/03/03 16:29:29 sthen Exp $
--- src/GNS3/QemuManager.py.orig	Wed Mar 14 02:12:51 2012
+++ src/GNS3/QemuManager.py	Wed May 23 00:23:28 2012
@@@@ -145,7 +145,7 @@@@ class QemuManager(object):
d13 1
a13 1
@@@@ -196,7 +196,7 @@@@ class QemuManager(object):
@


1.1
log
@- update gns3 to 0.7.3

- patch some hardcoded paths and binary names

- initial support for running qemu instances from gns3
(note that to work fully and connect qemu to network interfaces
on dynamips instances currently requires a qemu patched to support
udp unicast networking; see qemu-0.13.0-patches.zip in
http://sourceforge.net/projects/gns-3/files/Qemu/).

ok armani@@ (maintainer)
@
text
@d1 9
a9 6
$OpenBSD$
--- src/GNS3/QemuManager.py.orig	Sat Jan 29 12:28:23 2011
+++ src/GNS3/QemuManager.py	Sat Jan 29 12:28:45 2011
@@@@ -127,7 +127,7 @@@@ class QemuManager(object):
         if sys.platform.startswith('win'):
             self.proc.start('"' + globals.GApp.systconf['qemu'].qemuwrapper_path + '"', ['--listen', binding, '--port', str(self.port)])
d11 1
a11 2
-            self.proc.start('python',  [globals.GApp.systconf['qemu'].qemuwrapper_path, '--listen', binding, '--port', str(self.port)])
+            self.proc.start('${MODPY_BIN}',  [globals.GApp.systconf['qemu'].qemuwrapper_path, '--listen', binding, '--port', str(self.port)])
d13 6
a18 5
         if self.proc.waitForStarted() == False:
             QtGui.QMessageBox.critical(globals.GApp.mainWindow, 'Qemu Manager',  unicode(translate("QemuManager", "Can't start Qemu on port %i")) % self.port)
@@@@ -173,7 +173,7 @@@@ class QemuManager(object):
         if sys.platform.startswith('win'):
             proc.start('"' + globals.GApp.systconf['qemu'].qemuwrapper_path + '"')
d20 1
a20 2
-            proc.start('python',  [globals.GApp.systconf['qemu'].qemuwrapper_path])
+            proc.start('${MODPY_BIN}',  [globals.GApp.systconf['qemu'].qemuwrapper_path])
a21 2
         if proc.waitForStarted() == False:
             return False
@

