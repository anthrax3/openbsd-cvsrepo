head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.18
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.16
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.12
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.14
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.11.17.14.07.50;	author ratchov;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add support for midi output using libsndio, to allow dosbox to use
softsynths or remote midi hardware

ok jsg
@
text
@$OpenBSD$
--- configure.in.orig	Mon May 10 20:58:57 2010
+++ configure.in	Sun Nov 11 14:39:43 2012
@@@@ -182,6 +182,24 @@@@ if test x$alsa_midi = xtrue ; then 
   CXXFLAGS="$CXXFLAGS $ALSA_CFLAGS"
 fi
 
+dnl enable disable sndio and pass it's cflags to CXXFLAGS
+AH_TEMPLATE([HAVE_SNDIO],[Determines if sndio is available on the system.])
+AC_ARG_ENABLE(sndio-midi,
+AC_HELP_STRING([--enable-sndio-midi],[compile with sndio midi support (default yes)]),
+[ case "${enableval}" in
+ yes) sndio_midi=true;;
+ no)  sndio_midi=false;;
+esac],
+[sndio_midi=true])
+if test x$sndio_midi = xtrue ; then 
+  AC_CHECK_HEADER(sndio.h,have_sndio_h=yes,)
+  AC_CHECK_LIB(sndio, sio_initpar, have_sndio_lib=yes, , )
+  if test x$have_sndio_lib = xyes -a x$have_sndio_h = xyes ; then
+    LIBS="$LIBS -lsndio"
+    AC_DEFINE(HAVE_SNDIO,1)
+  fi
+fi
+
 #Check for big endian machine, should #define WORDS_BIGENDIAN if so
 AC_C_BIGENDIAN
 
@
