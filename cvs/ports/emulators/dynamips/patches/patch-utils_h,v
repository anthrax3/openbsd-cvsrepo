head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.6
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.28
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.26
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.24
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.22
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.20
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.18
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.16
	OPENBSD_5_0:1.2.0.14
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.12
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.8
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	sthen_20080118:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.05.01.14.17.37;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	O4BUcjK5VbK9Thzn;

1.2
date	2008.04.10.15.22.17;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2008.01.18.09.09.48;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.01.18.09.09.48;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@machine/endian.h, sys/endian.h -> endian.h
@
text
@$OpenBSD: patch-utils_h,v 1.2 2008/04/10 15:22:17 sthen Exp $
--- utils.h.orig	Sun Oct 14 09:43:07 2007
+++ utils.h	Wed Apr  9 11:05:18 2008
@@@@ -14,6 +14,7 @@@@
 #include <netinet/in.h>
 #include <pthread.h>
 #include <signal.h>
+#include <endian.h>
 
 /* True/False definitions */
 #ifndef FALSE
@@@@ -42,6 +43,9 @@@@
 #define ARCH_BIG_ENDIAN     0x4321
 #define ARCH_LITTLE_ENDIAN  0x1234
 
+#ifdef BYTE_ORDER
+#define ARCH_BYTE_ORDER BYTE_ORDER
+#else
 #if defined(PPC) || defined(__powerpc__) || defined(__ppc__)
 #define ARCH_BYTE_ORDER ARCH_BIG_ENDIAN
 #elif defined(__sparc) || defined(__sparc__)
@@@@ -55,6 +59,7 @@@@
 #elif defined(__ia64__)
 #define ARCH_BYTE_ORDER ARCH_LITTLE_ENDIAN
 #endif
+#endif
 
 #ifndef ARCH_BYTE_ORDER
 #error Please define your architecture in utils.h!
@@@@ -84,7 +89,7 @@@@
 #define fastcall   __attribute__((regparm(3)))
 
 #if __GNUC__ > 2
-#define forced_inline inline __attribute__((always_inline))
+#define forced_inline inline __attribute__ ((always_inline))
 #define no_inline __attribute__ ((noinline))
 #else
 #define forced_inline inline
@@@@ -255,12 +260,15 @@@@ static inline u_int normalize_size(u_int val,u_int nb,
    return(((val+nb-1) & ~(nb-1)) >> shift);
 }
 
+#ifndef swap16
 /* Convert a 16-bit number between little and big endian */
 static forced_inline m_uint16_t swap16(m_uint16_t value)
 {
    return((value >> 8) | ((value & 0xFF) << 8));
 }
+#endif
 
+#ifndef swap32
 /* Convert a 32-bit number between little and big endian */
 static forced_inline m_uint32_t swap32(m_uint32_t value)
 {
@@@@ -272,7 +280,9 @@@@ static forced_inline m_uint32_t swap32(m_uint32_t valu
    result |= (value & 0xff) << 24;
    return(result);
 }
+#endif
 
+#ifndef swap64
 /* Convert a 64-bit number between little and big endian */
 static forced_inline m_uint64_t swap64(m_uint64_t value)
 {
@@@@ -282,6 +292,7 @@@@ static forced_inline m_uint64_t swap64(m_uint64_t valu
    result |= swap32(value >> 32);
    return(result);
 }
+#endif
 
 /* Get current time in number of msec since epoch */
 static inline m_tmcnt_t m_gettime(void)
@


1.2
log
@dynamips uses its own endianness definitions which don't include
all our arch, so it doesn't build on at least hppa/arm. Fix build
by using the definitions from our system headers instead.

No effect on existing arch - package bump is probably unnecessary
but done anyway to be sure.

Thanks to Jonathan Armani for testing that dynamips/gns3 on i386
are still happy.

ok ajacoutot
@
text
@d1 1
a1 1
$OpenBSD: patch-utils_h,v 1.1.1.1 2008/01/18 09:09:48 sthen Exp $
d8 1
a8 1
+#include <machine/endian.h>
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 28
a30 2
+++ utils.h	Tue Jan 15 19:17:22 2008
@@@@ -84,7 +84,7 @@@@
d39 1
a39 1
@@@@ -255,12 +255,15 @@@@ static inline u_int normalize_size(u_int val,u_int nb,
d55 1
a55 1
@@@@ -272,7 +275,9 @@@@ static forced_inline m_uint32_t swap32(m_uint32_t valu
d65 1
a65 1
@@@@ -282,6 +287,7 @@@@ static forced_inline m_uint64_t swap64(m_uint64_t valu
@


1.1.1.1
log
@import dynamips:

Dynamips emulates various MIPS64 and PowerPC-based processors
and other hardware found in Cisco routers, including many NM/PA
modules e.g. Ethernet, fast Ethernet, serial, ATM, switch.

It is able to boot a large number of Cisco IOS releases
(not included) for the 7200, 3600, 3700 and 2600 platforms.

feedback and ok ajacoutot
@
text
@@
