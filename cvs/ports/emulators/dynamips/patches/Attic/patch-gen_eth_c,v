head	1.2;
access;
symbols
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.14
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.10
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.03.16.23.39.13;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2008.11.24.23.29.48;	author claudio;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove patch to force nonblocking on the bpf; we don't want this with rthreads
@
text
@$OpenBSD: patch-gen_eth_c,v 1.1 2008/11/24 23:29:48 claudio Exp $
--- gen_eth.c.orig	Sat Nov 22 11:36:00 2008
+++ gen_eth.c	Sat Nov 22 11:41:33 2008
@@@@ -47,6 +47,16 @@@@ pcap_t *gen_eth_init(char *device)
 
    /* Accept only incoming packets */
    pcap_setdirection(p,PCAP_D_IN);
+
+   /*
+    * on OpenBSD we need to force the bpf into non-blocking mode because
+    * userland threads need this (at the same time it will fuckup kthreads).
+    * Now pcap_open_live() would do this but it sets the device to non-blocking
+    * but resets the setting by issuing a BIOCSRTIMEOUT. So force it on again.
+    */
+   if (pcap_setnonblock(p, 1, pcap_errbuf) == -1)
+      goto pcap_error;
+
 #else
    p = pcap_open(device,2048,
                  PCAP_OPENFLAG_PROMISCUOUS | 
@


1.1
log
@Make the gen_eth netio_type work by adding a crude hack in the setup
function to ensure that the pcap fd is in non-blocking mode as expected
by the pthread lib. While doing that add plist bin markers and a new
MESSAGE (that came from sthen@@)
OK sthen@@, dlg@@ who forced me into the pain to run a cisco on my X40
@
text
@d1 1
a1 1
$OpenBSD$
@

