head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.1.1.0.6
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.4
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	fgsch_20100527:1.1.1.1
	fgsch:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2011.08.16.21.23.53;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.05.27.17.33.42;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.05.27.17.33.42;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove kqemu (which was broken, reported by Alexander Schrijver and
probably others) and qemu-old; the current qemu version in emulators/qemu
works well now (kqemu is no longer supported upstream).

ok Brad (emulators/qemu maintainer) todd@@ and I think there were some others
@
text
@$OpenBSD: patch-cpu-all_h,v 1.1 2010/05/27 17:33:42 fgsch Exp $
--- cpu-all.h.orig	Sun Jan  6 14:38:42 2008
+++ cpu-all.h	Tue Apr  1 01:43:57 2008
@@@@ -1008,13 +1008,22 @@@@ static inline int64_t cpu_get_real_ticks(void)
 }
 
 #else
-/* The host CPU doesn't have an easily accessible cycle counter.
-   Just return a monotonically increasing value.  This will be
-   totally wrong, but hopefully better than nothing.  */
+# warning non-optimized CPU
+#include <sys/time.h>
+#include <time.h>
+
 static inline int64_t cpu_get_real_ticks (void)
 {
-    static int64_t ticks = 0;
-    return ticks++;
+    struct timeval tv;
+    static int64_t i = 0;
+    int64_t j;
+
+    gettimeofday(&tv, NULL);
+    do {
+        j = (tv.tv_sec * (uint64_t) 1000000) + tv.tv_usec;
+    } while (i == j);
+    i = j;
+    return j;
 }
 #endif
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-cpu-all_h,v 1.3 2008/04/28 22:52:38 todd Exp $
@


1.1.1.1
log
@Move existing qemu to qemu-old in preparation for the update.
Agreed with espie.
@
text
@@
