head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.28
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.26
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.22
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.24
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.05.23.17.39.14;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@fix for gcc4
@
text
@$OpenBSD$
--- mc68k/memory.c.orig	Sun May 23 19:36:04 2010
+++ mc68k/memory.c	Sun May 23 19:37:33 2010
@@@@ -340,6 +340,7 @@@@ UWORD *rom_xlate(CPTR addr)
 static int
 verify_entrypoint(const void *rom)
 {
+    char *rp = rom;
     const unsigned char _bootsign[] = { 0x4e, 0xfa, 0x00, 0x00, 'b', 'o', 'o', 't',
 			       0x27, 0x10, 0xff };
     const unsigned char _bootmask[] = { 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
@@@@ -348,7 +349,7 @@@@ verify_entrypoint(const void *rom)
     const unsigned char *bootsign = _bootsign, *bootmask = _bootmask;
     
     while ((*bootsign & *bootmask) == *bootsign)
-	if ((*((char *)rom)++ & *bootmask++) != *bootsign++)
+	if ((*(rp)++ & *bootmask++) != *bootsign++)
 	    return 0;
 
     return 1;
@@@@ -446,7 +447,7 @@@@ static int load_rom(const char *dir, const char *romfi
 	  return PILOTCPU_ERROR_LOADING_ROM;
 
 	memcpy(((char *)rommemory) - offset, rommemory, 256);
-	((char *)rommemory) -= offset;
+	rommemory = (char *)rommemory - offset;
       }
     }
   }
@
