head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	awolk_20160801:1.1.1.1
	awolk:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.11.17.09.51.41;	author fcambus;	state Exp;
branches;
next	1.1;
commitid	iLaVZVogpbAuxJNt;

1.1
date	2016.07.31.23.53.35;	author awolk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	CdXJcTyJ9fBDxZ7j;

1.1.1.1
date	2016.07.31.23.53.35;	author awolk;	state Exp;
branches;
next	;
commitid	CdXJcTyJ9fBDxZ7j;


desc
@@


1.2
log
@Update hatari to 2.0.0.

Notable changes:

- Build switched to SDL2 as this is now upstream default
- We do not build the Python UI anymore

OK benoit@@
@
text
@$OpenBSD: patch-CMakeLists_txt,v 1.1.1.1 2016/07/31 23:53:35 awolk Exp $

Make PortAudio and CAPSImage detection conditional and disabled by default,
and disable building the Python GTK+2 user interface.

--- CMakeLists.txt.orig	Thu Nov  3 22:25:43 2016
+++ CMakeLists.txt	Sat Nov 12 17:20:14 2016
@@@@ -40,6 +40,12 @@@@ set(ENABLE_SMALL_MEM 0
     CACHE BOOL "Enable to use less memory - at the expense of emulation speed")
 set(ENABLE_WINUAE_CPU 1
     CACHE BOOL "Enable WinUAE CPU core")
+set(ENABLE_PORTAUDIO 0
+    CACHE BOOL "Enable building with PortAudio to enable microphone input in Falcon mode")
+set(ENABLE_CAPSIMAGE 0
+    CACHE BOOL "Enable building with CAPSImage for using .IPF, .RAW and .CTR disk images")
+set(ENABLE_UI 0
+    CACHE BOOL "Enable building the Python GTK+2 user interface, requires GTK+2 bindings")
 
 # Run-time checks with GCC "mudflap" etc features:
 # - stack protection
@@@@ -127,15 +133,19 @@@@ if (NOT ENABLE_OSX_BUNDLE)
 	endif(X11_FOUND)
 endif()
 
-find_package(PortAudio)
-if(PORTAUDIO_FOUND)
-	set(HAVE_PORTAUDIO 1)
-endif(PORTAUDIO_FOUND)
+if(ENABLE_PORTAUDIO)
+	find_package(PortAudio)
+	if(PORTAUDIO_FOUND)
+		set(HAVE_PORTAUDIO 1)
+	endif(PORTAUDIO_FOUND)
+endif(ENABLE_PORTAUDIO)
 
-find_package(CapsImage)
-if(CAPSIMAGE_FOUND)
-	set(HAVE_CAPSIMAGE 1)
-endif(CAPSIMAGE_FOUND)
+if(ENABLE_CAPSIMAGE)
+	find_package(CapsImage)
+	if(CAPSIMAGE_FOUND)
+		set(HAVE_CAPSIMAGE 1)
+	endif(CAPSIMAGE_FOUND)
+endif(ENABLE_CAPSIMAGE)
 
 find_package(Udev)
 if(UDEV_FOUND)
@@@@ -302,10 +312,12 @@@@ add_subdirectory(src)
 add_subdirectory(doc)
 add_subdirectory(tools)
 
-include(FindPythonInterp)
-if(PYTHONINTERP_FOUND)
-	add_subdirectory(python-ui)
-endif(PYTHONINTERP_FOUND)
+if(ENABLE_UI)
+	include(FindPythonInterp)
+	if(PYTHONINTERP_FOUND)
+		add_subdirectory(python-ui)
+	endif(PYTHONINTERP_FOUND)
+endif(ENABLE_UI)
 
 if(UNIX AND NOT ENABLE_OSX_BUNDLE)
 	add_subdirectory(share)
@@@@ -352,17 +364,20 @@@@ else()
   message( "  - png :\tnot found, install it to compress screenshot/avi files using png" )
 endif(PNG_FOUND)
 
-if(PORTAUDIO_FOUND)
-  message( "  - portaudio :\tfound, enables the microphone input in Falcon mode" )
-else()
-  message( "  - portaudio :\tnot found, install it to enable the Falcon microphone input" )
-endif(PORTAUDIO_FOUND)
+if(ENABLE_PORTAUDIO)
+  if(PORTAUDIO_FOUND)
+    message( "  - portaudio :\tfound, enables the microphone input in Falcon mode" )
+  else()
+    message( "  - portaudio :\tnot found, install it to enable the Falcon microphone input" )
+  endif(PORTAUDIO_FOUND)
+endif(ENABLE_PORTAUDIO)
 
-if(CAPSIMAGE_FOUND)
-  message( "  - capsimage :\tv${CAPSIMAGE_VERSION} found, allow to use .IPF, .RAW and .CTR disk images" )
-else()
-  message( "  - capsimage :\tv${CAPSIMAGE_VERSION} not found, install it to use .IPF, .RAW and .CTR disk images" )
-endif(CAPSIMAGE_FOUND)
+if(ENABLE_CAPSIMAGE)
+  if(CAPSIMAGE_FOUND)
+  else()
+    message( "  - capsimage :\tv${CAPSIMAGE_VERSION} not found, install it to use .IPF, .RAW and .CTR disk images" )
+  endif(CAPSIMAGE_FOUND)
+endif(ENABLE_CAPSIMAGE)
 
 if(UDEV_FOUND)
   message( "  - udev :\tfound, required for media change detection in NatFeats SCSI" )
@


1.1
log
@Initial revision
@
text
@d1 11
a11 7
$OpenBSD$
--- CMakeLists.txt.orig	Thu Sep 10 23:16:02 2015
+++ CMakeLists.txt	Wed Jun 22 14:18:20 2016
@@@@ -32,6 +32,10 @@@@ endif(NOT CMAKE_BUILD_TYPE)
 
 set(ENABLE_SDL2 0
     CACHE BOOL "Enable building with libSDL2 instead of v1.2")
d13 1
a13 1
+    CACHE BOOL "Enable building with portaudio to enable microphone input in Falcon mode")
d15 7
a21 5
+    CACHE BOOL "Enable building with capsimage for using .IPF, .RAW and .CTR disk images")
 set(ENABLE_DSP_EMU 1
     CACHE BOOL "Enable DSP 56k emulator for Falcon mode")
 set(ENABLE_TRACING 1
@@@@ -125,15 +129,19 @@@@ if (NOT ENABLE_OSX_BUNDLE)
d47 20
a66 3
 # ################
 # CPP Definitions:
@@@@ -344,17 +352,20 @@@@ else()
d95 2
a96 2
 message( "" )
 
@


1.1.1.1
log
@Import emulators/hatari from Frederic Cambus

Hatari is an Atari ST/STE/TT/Falcon emulator for Linux, FreeBSD, NetBSD,
BeOS, Mac-OSX and other Systems which are supported by the SDL library.
Unlike most other open source ST emulators which try to give you a good
environment for running GEM applications, Hatari tries to emulate the
hardware as close as possible so that it is able to run most of the old
Atari games and demos.  Because of this, it may be somewhat slower than
less accurate emulators.

OK bentley@@ on initial tarball
OK awolk@@, abieber@@ on latest tarball

@
text
@@
