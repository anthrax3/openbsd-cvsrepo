head	1.4;
access;
symbols
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2002.06.09.16.24.57;	author brad;	state dead;
branches;
next	1.3;

1.3
date	2001.09.19.20.44.53;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.26.06.02.10;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2001.02.02.16.59.06;	author todd;	state Exp;
branches;
next	;


desc
@@


1.4
log
@upgrade to Bochs 1.4
--
Ok'd by: MAINTAINER
@
text
@$OpenBSD: patch-configure_in,v 1.3 2001/09/19 20:44:53 todd Exp $
--- configure.in.orig	Wed Sep 19 15:27:16 2001
+++ configure.in	Wed Sep 19 15:26:41 2001
@@@@ -450,7 +450,7 @@@@ if test "$want_readline" = yes; then
       if test "$bx_debugger" = 1; then
 	# only add readline library if debugger is on
 	AC_DEFINE(HAVE_LIBREADLINE, 1)
-	READLINE_LIB='-lreadline'
+	READLINE_LIB='-lreadline -lcurses'
       fi
     ]
   )
@


1.3
log
@use autoconf to generate configure to use -lreadline -lcurses for debug
flavor.
Problem found by yanick@@qmkos.org
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@gone are the days when bochs feedback heads to /dev/null
did I mention I commit this inside of bochs?  Thanks, angelos, for networking!
@
text
@d1 11
a11 5
$OpenBSD: patch-configure_in,v 1.1 2001/02/02 16:59:06 todd Exp $
--- configure.in.orig	Thu Oct 19 18:30:05 2000
+++ configure.in	Thu Oct 19 18:38:13 2000
@@@@ -539,12 +539,17 @@@@ AC_ARG_WITH(nogui,
   [  --with-nogui                      no native GUI, just use blank stubs],
a12 26
 
+AC_ARG_WITH(term,
+  [  --with-term                       textmode terminal environment],
+  )
+
 dnl // make sure X Windows is default if no other chosen
 if (test "$with_x11" != yes) && \
    (test "$with_beos" != yes) && \
    (test "$with_win32" != yes) && \
    (test "$with_nogui" != yes) && \
    (test "$with_win32_vcpp" != yes) && \
+   (test "$with_term" != yes) && \
    (test "$with_macos" != yes); then
   with_x11=yes
 fi
@@@@ -609,6 +614,10 @@@@ elif test "$with_macos" = yes; then
   AC_DEFINE(BX_WITH_MACOS, 1)
   GUI_OBJS='$(GUI_OBJS_MACOS)'
   GUI_LINK_OPTS='$(GUI_LINK_OPTS_MACOS)'
+elif test "$with_term" = yes; then
+  AC_DEFINE(BX_WITH_TERM, 1)
+  GUI_OBJS='$(GUI_OBJS_TERM)'
+  GUI_LINK_OPTS='$(GUI_LINK_OPTS_TERM)'
 else
   AC_DEFINE(BX_WITH_NOGUI, 1)
   GUI_OBJS='$(GUI_OBJS_NOGUI)'
@


1.1
log
@o take over maintainership
o too many changes to mention specifically, but amongst them:
	- better error reporting
	- openbsd boots, freebsd boots
	- new 'term' flavor, I added a textmode interface, the only drawback
	  is that control-c is intercepted, and you must kill -9 it from
	  another tty if it doesn't exit normally
	- new flavors:
		- debugger -> debug (for shortness)
		- i386
		- pci
		- smp
		- net (compiles, does not yet provide networking, if anyone
			wants to help, I'd be ELATED to have this fixed!)
		- no_x11 (made it actually work)
		- term (make sure to use 'log: /dev/null' or something else
		  on the cmdline, otherwise, debugging and the screen will
		  start getting quite confusing!)
	- better error reporting (and no error reporting where it is not
	  necessary; a typicall boot of cdrom28.fs is a screenful of output now)
	- in general, if the hardware reaches an unknown state, fail
	  gracefully instead of calling exit(1) .. are we trying to work or
	  are we trying to .. fail?  I like working myself.
@
text
@d1 1
a1 1
$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
@

