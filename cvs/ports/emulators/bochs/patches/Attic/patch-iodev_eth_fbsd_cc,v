head	1.2;
access;
symbols
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2001.05.26.06.02.30;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2001.02.02.16.59.11;	author todd;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gone are the days when bochs feedback heads to /dev/null
did I mention I commit this inside of bochs?  Thanks, angelos, for networking!
@
text
@$OpenBSD: patch-iodev_eth_fbsd_cc,v 1.1 2001/02/02 16:59:11 todd Exp $
--- iodev/eth_fbsd.cc.orig	Sat Mar 25 21:28:48 2000
+++ iodev/eth_fbsd.cc	Tue Oct 17 12:04:02 2000
@@@@ -146,19 +146,19 @@@@ bx_fbsd_pktmover_c::bx_fbsd_pktmover_c(c
   } while (this->bpf_fd < 0);
   
   if (this->bpf_fd < 0) {
-    bx_printf ("eth_freebsd: could not open packet filter\n");
+    bio->printf ("eth_freebsd: could not open packet filter\n");
     return;
   }
 
   if (ioctl(this->bpf_fd, BIOCVERSION, (caddr_t)&bv) < 0) {
-    bx_printf("eth_freebsd: could not retrieve bpf version\n");
+    bio->printf("eth_freebsd: could not retrieve bpf version\n");
     close(this->bpf_fd);
     this->bpf_fd = -1;
     return;
   }
   if (bv.bv_major != BPF_MAJOR_VERSION ||
       bv.bv_minor < BPF_MINOR_VERSION) {
-    bx_printf("eth_freebsd: bpf version mismatch\n");
+    bio->printf("eth_freebsd: bpf version mismatch\n");
     close(this->bpf_fd);
     this->bpf_fd = -1;
     return;
@@@@ -167,7 +167,7 @@@@ bx_fbsd_pktmover_c::bx_fbsd_pktmover_c(c
   // Set buffer size
   v = BX_BPF_BUFSIZ;
   if (ioctl(this->bpf_fd, BIOCSBLEN, (caddr_t)&v) < 0) {
-    bx_printf("eth_freebsd: could not set buffer size\n");
+    bio->printf("eth_freebsd: could not set buffer size\n");
     close(this->bpf_fd);
     this->bpf_fd = -1;
     return;
@@@@ -175,20 +175,20 @@@@ bx_fbsd_pktmover_c::bx_fbsd_pktmover_c(c
 
   (void)strncpy(ifr.ifr_name, netif, sizeof(ifr.ifr_name));
   if (ioctl(this->bpf_fd, BIOCSETIF, (caddr_t)&ifr) < 0) {
-    bx_printf("eth_freebsd: could not enable interface %s\n", netif);
+    bio->printf("eth_freebsd: could not enable interface %s\n", netif);
     close(this->bpf_fd);
     this->bpf_fd == -1;
   }
   
   // Verify that the device is an ethernet.
   if (ioctl(this->bpf_fd, BIOCGDLT, (caddr_t)&v) < 0) {
-    bx_printf("eth_freebsd: could not retrieve datalink type\n");
+    bio->printf("eth_freebsd: could not retrieve datalink type\n");
     close(this->bpf_fd);
     this->bpf_fd = -1;
     return;
   }
   if (v != DLT_EN10MB) {
-    bx_printf("eth_freebsd: incorrect datalink type %d\n", v);
+    bio->printf("eth_freebsd: incorrect datalink type %d\n", v);
     close(this->bpf_fd);
     this->bpf_fd = -1;
     return;
@@@@ -199,7 +199,7 @@@@ bx_fbsd_pktmover_c::bx_fbsd_pktmover_c(c
   // but this will do for now.
   //
   if (ioctl(this->bpf_fd, BIOCPROMISC, NULL) < 0) {
-    bx_printf("eth_freebsd: could not enable promisc mode\n");
+    bio->printf("eth_freebsd: could not enable promisc mode\n");
     close(this->bpf_fd);
     this->bpf_fd = -1;
     return;
@@@@ -208,7 +208,7 @@@@ bx_fbsd_pktmover_c::bx_fbsd_pktmover_c(c
   // Set up non-blocking i/o
   v = 1;
   if (ioctl(this->bpf_fd, FIONBIO, &v) < 0) {
-    bx_printf("eth_freebsd: could not enable non-blocking i/o\n");
+    bio->printf("eth_freebsd: could not enable non-blocking i/o\n");
     close(this->bpf_fd);
     this->bpf_fd = -1;
     return;
@@@@ -229,7 +229,7 @@@@ bx_fbsd_pktmover_c::bx_fbsd_pktmover_c(c
   bp.bf_len   = 8;
   bp.bf_insns = &this->filter[0];
   if (ioctl(this->bpf_fd, BIOCSETF, &bp) < 0) {
-    bx_printf("eth_freebsd: could not set filter\n");
+    bio->printf("eth_freebsd: could not set filter\n");
     close(this->bpf_fd);
     this->bpf_fd = -1;
     return;
@


1.1
log
@o take over maintainership
o too many changes to mention specifically, but amongst them:
	- better error reporting
	- openbsd boots, freebsd boots
	- new 'term' flavor, I added a textmode interface, the only drawback
	  is that control-c is intercepted, and you must kill -9 it from
	  another tty if it doesn't exit normally
	- new flavors:
		- debugger -> debug (for shortness)
		- i386
		- pci
		- smp
		- net (compiles, does not yet provide networking, if anyone
			wants to help, I'd be ELATED to have this fixed!)
		- no_x11 (made it actually work)
		- term (make sure to use 'log: /dev/null' or something else
		  on the cmdline, otherwise, debugging and the screen will
		  start getting quite confusing!)
	- better error reporting (and no error reporting where it is not
	  necessary; a typicall boot of cdrom28.fs is a screenful of output now)
	- in general, if the hardware reaches an unknown state, fail
	  gracefully instead of calling exit(1) .. are we trying to work or
	  are we trying to .. fail?  I like working myself.
@
text
@d1 1
a1 1
$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
@

