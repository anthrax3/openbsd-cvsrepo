head	1.2;
access;
symbols
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2001.05.26.06.02.19;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2001.02.02.16.59.09;	author todd;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gone are the days when bochs feedback heads to /dev/null
did I mention I commit this inside of bochs?  Thanks, angelos, for networking!
@
text
@$OpenBSD: patch-cpu_paging_cc,v 1.1 2001/02/02 16:59:09 todd Exp $
--- cpu/paging.cc.orig	Sat Mar 25 21:39:26 2000
+++ cpu/paging.cc	Tue Oct 31 12:30:12 2000
@@@@ -315,23 +315,23 @@@@ static unsigned priv_check[BX_PRIV_CHECK
 BX_CPU_C::enable_paging(void)
 {
   TLB_flush();
-  if (bx_dbg.paging) bx_printf("enable_paging():\n");
-//fprintf(stderr, "#(%u)enable_paging():-------------------------\n", BX_SIM_ID);
+  if (bio->getdbg().paging) bio->printf("enable_paging():\n");
+//bio->printf("#(%u)enable_paging():-------------------------\n", BX_SIM_ID);
 }
 
   void
 BX_CPU_C::disable_paging(void)
 {
   TLB_flush();
-  if (bx_dbg.paging) bx_printf("disable_paging():\n");
+  if (bio->getdbg().paging) bio->printf("disable_paging():\n");
 }
 
   void
 BX_CPU_C::CR3_change(Bit32u value32)
 {
-  if (bx_dbg.paging) {
-    bx_printf("CR3_change(): flush TLB cache\n");
-    bx_printf("Page Directory Base %08x\n", (unsigned) value32);
+  if (bio->getdbg().paging) {
+    bio->printf("CR3_change(): flush TLB cache\n");
+    bio->printf("Page Directory Base %08x\n", (unsigned) value32);
     }
 
   // flush TLB even if value does not change
@@@@ -419,7 +419,7 @@@@ BX_CPU_C::INVLPG(BxInstruction_t* i)
 
   // Operand must not be a register
   if (i->mod == 0xc0) {
-    bx_printf("INVLPG: op is a register");
+    bio->printf("INVLPG: op is a register");
     UndefinedOpcode(i);
     }
   // Can not be executed in v8086 mode
@@@@ -429,7 +429,7 @@@@ BX_CPU_C::INVLPG(BxInstruction_t* i)
   // Protected instruction: CPL0 only
   if (BX_CPU_THIS_PTR cr0.pe) {
     if (CPL!=0) {
-      bx_printf("INVLPG: CPL!=0\n");
+      bio->printf("INVLPG: CPL!=0\n");
       exception(BX_GP_EXCEPTION, 0, 0);
       }
     }
@@@@ -912,20 +912,20 @@@@ BX_CPU_C::access_linear(Bit32u laddress,
   void
 BX_CPU_C::enable_paging(void)
 {
-  bx_panic("enable_paging(): not implemented\n");
+  bio->panic("enable_paging(): not implemented\n");
 }
 
   void
 BX_CPU_C::disable_paging(void)
 {
-  bx_panic("disable_paging() called\n");
+  bio->panic("disable_paging() called\n");
 }
 
   void
 BX_CPU_C::CR3_change(Bit32u value32)
 {
-  bx_printf("CR3_change(): flush TLB cache\n");
-  bx_printf("Page Directory Base %08x\n", (unsigned) value32);
+  bio->printf("CR3_change(): flush TLB cache\n");
+  bio->printf("Page Directory Base %08x\n", (unsigned) value32);
 }
 
 
@@@@ -944,7 +944,7 @@@@ BX_CPU_C::access_linear(Bit32u laddress,
     return;
     }
 
-  bx_panic("access_linear: paging not supported\n");
+  bio->panic("access_linear: paging not supported\n");
 }
 
 
@


1.1
log
@o take over maintainership
o too many changes to mention specifically, but amongst them:
	- better error reporting
	- openbsd boots, freebsd boots
	- new 'term' flavor, I added a textmode interface, the only drawback
	  is that control-c is intercepted, and you must kill -9 it from
	  another tty if it doesn't exit normally
	- new flavors:
		- debugger -> debug (for shortness)
		- i386
		- pci
		- smp
		- net (compiles, does not yet provide networking, if anyone
			wants to help, I'd be ELATED to have this fixed!)
		- no_x11 (made it actually work)
		- term (make sure to use 'log: /dev/null' or something else
		  on the cmdline, otherwise, debugging and the screen will
		  start getting quite confusing!)
	- better error reporting (and no error reporting where it is not
	  necessary; a typicall boot of cdrom28.fs is a screenful of output now)
	- in general, if the hardware reaches an unknown state, fail
	  gracefully instead of calling exit(1) .. are we trying to work or
	  are we trying to .. fail?  I like working myself.
@
text
@d1 1
a1 1
$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
@

