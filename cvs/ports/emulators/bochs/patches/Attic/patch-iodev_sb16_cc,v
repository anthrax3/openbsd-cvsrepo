head	1.2;
access;
symbols
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2001.05.26.06.02.33;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2001.02.02.16.59.11;	author todd;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gone are the days when bochs feedback heads to /dev/null
did I mention I commit this inside of bochs?  Thanks, angelos, for networking!
@
text
@$OpenBSD: patch-iodev_sb16_cc,v 1.1 2001/02/02 16:59:11 todd Exp $
--- iodev/sb16.cc.orig	Sat Mar 25 21:34:08 2000
+++ iodev/sb16.cc	Tue Oct 17 12:04:02 2000
@@@@ -104,7 +104,7 @@@@ void bx_sb16_c::init(bx_devices_c *d)
       LOGFILE = fopen(bx_options.sb16.logfile,"w"); // logfile for errors etc.
       if (LOGFILE == NULL)
 	{
-	  bx_printf("#SB16: Error opening file %s. Logging disabled.", bx_options.sb16.logfile);
+	  bio->printf("#SB16: Error opening file %s. Logging disabled.", bx_options.sb16.logfile);
 	  bx_options.sb16.loglevel = 0;
 	}
     }
@@@@ -156,7 +156,7 @@@@ void bx_sb16_c::init(bx_devices_c *d)
       bx_options.sb16.wavemode = 0;
     }
 
-  bx_printf("#SB16 options: midi=%d,%s  wave=%d,%s  log=%d,%s  dmatimer=%d\n",
+  bio->printf("#SB16 options: midi=%d,%s  wave=%d,%s  log=%d,%s  dmatimer=%d\n",
 	    bx_options.sb16.midimode, bx_options.sb16.midifile,
 	    bx_options.sb16.wavemode, bx_options.sb16.wavefile,
 	    bx_options.sb16.loglevel, bx_options.sb16.logfile,
@@@@ -3227,7 +3227,7 @@@@ Boolean bx_sb16_buffer::puts(char *data,
   va_end(ap);
 
   if ( (int) strlen(string) >= length)
-    bx_panic("bx_sb16_buffer: puts() too long!\n");
+    bio->panic("bx_sb16_buffer: puts() too long!\n");
 
   while (string[index] != 0)
     {
@


1.1
log
@o take over maintainership
o too many changes to mention specifically, but amongst them:
	- better error reporting
	- openbsd boots, freebsd boots
	- new 'term' flavor, I added a textmode interface, the only drawback
	  is that control-c is intercepted, and you must kill -9 it from
	  another tty if it doesn't exit normally
	- new flavors:
		- debugger -> debug (for shortness)
		- i386
		- pci
		- smp
		- net (compiles, does not yet provide networking, if anyone
			wants to help, I'd be ELATED to have this fixed!)
		- no_x11 (made it actually work)
		- term (make sure to use 'log: /dev/null' or something else
		  on the cmdline, otherwise, debugging and the screen will
		  start getting quite confusing!)
	- better error reporting (and no error reporting where it is not
	  necessary; a typicall boot of cdrom28.fs is a screenful of output now)
	- in general, if the hardware reaches an unknown state, fail
	  gracefully instead of calling exit(1) .. are we trying to work or
	  are we trying to .. fail?  I like working myself.
@
text
@d1 1
a1 1
$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
@

