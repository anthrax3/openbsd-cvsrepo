head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.4
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.01.04.09.30.38;	author uaa;	state Exp;
branches;
next	1.1;
commitid	Qa5HbhFWpvWoTtqF;

1.1
date	2014.01.08.15.43.41;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update xnp2-20140607 -> xnp2-0.86

ok by bentley@@
@
text
@$OpenBSD: patch-x11_soundmng_c,v 1.1 2014/01/08 15:43:41 sthen Exp $

disable asm on i386, PIE uses registers used by asm code.

--- x11/soundmng.c.orig	Wed Mar  9 02:25:50 2016
+++ x11/soundmng.c	Sat Dec 31 06:21:29 2016
@@@@ -401,7 +401,7 @@@@ soundmng_setreverse(BOOL reverse)
 	} else {
 		fnmix = satuation_s16x;
 	}
-#elif defined(GCC_CPU_ARCH_IA32)
+#elif defined(GCC_CPU_ARCH_IA32) && !defined(__OpenBSD__)
 	if (!reverse) {
 		if (mmxflag & (MMXFLAG_NOTSUPPORT|MMXFLAG_DISABLE)) {
 			fnmix = _saturation_s16;
@@@@ -801,7 +801,7 @@@@ saturation_s16mmx(SINT16 *dst, const SINT32 *src, UINT
 		: /* output */
 		: "m" (dst), "m" (src), "m" (size));
 }
-#elif defined(GCC_CPU_ARCH_IA32)
+#elif defined(GCC_CPU_ARCH_IA32) && !defined(__OpenBSD__)
 void PARTSCALL
 _saturation_s16(SINT16 *dst, const SINT32 *src, UINT size)
 {
@


1.1
log
@disable some asm on i386, which clobbers registers used by PIE
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- x11/soundmng.c.orig	Wed Jan  8 08:40:12 2014
+++ x11/soundmng.c	Wed Jan  8 08:40:30 2014
@@@@ -346,7 +346,7 @@@@ soundmng_setreverse(BOOL reverse)
d16 1
a16 1
@@@@ -727,7 +727,7 @@@@ saturation_s16mmx(SINT16 *dst, const SINT32 *src, UINT
@

