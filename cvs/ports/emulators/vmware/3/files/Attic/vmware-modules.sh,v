head	1.4;
access;
symbols
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	todd_20041005:1.1.1.1
	todd:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2008.09.30.17.39.24;	author brad;	state dead;
branches;
next	1.3;

1.3
date	2005.03.07.18.15.09;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.07.17.54.50;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2004.10.05.18.32.28;	author todd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.10.05.18.32.28;	author todd;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove this ancient VMware 3 port for the kernel LKMs. They have never
really worked very well and with newer kernels they do not work at all.

PR 5893.
@
text
@#!/bin/sh
#	$OpenBSD: vmware-modules.sh,v 1.3 2005/03/07 18:15:09 todd Exp $

modload=/sbin/modload
modunload=/sbin/modunload
prefix=@@PREFIX@@
lkmbase=$prefix/lib/vmware/modules
scriptbase=$prefix/libexec/vmware
sysctl=/sbin/sysctl

sl=`$sysctl -n kern.securelevel`

check_perms()
{
	if [ `id -u` -ne 0 ]; then
		echo "ERROR: You must be root to run this script."
		exit 1
	fi
}

check_securelevel()
{
if [ "$sl" -gt 0 ]; then
	echo "ERROR: The system's securelevel is currently $sl.  It must be"
	echo "       less than or equal to 0 to load kernel modules."
	echo "       Consult securelevel(7) and rc(8) for more information"
        echo "       on lowering the securelevel and its effects."
fi
}

load_modules()
{
	TMPFILE1=`mktemp /tmp/linuxrtc.XXXXXXXXXX` || exit 1
	TMPFILE2=`mktemp /tmp/vmmon.XXXXXXXXXX` || exit 1
	TMPFILE3=`mktemp /tmp/if_hub.XXXXXXXXXX` || exit 1
	$modload -e rtc_lkmentry -o $TMPFILE1 \
		-p $scriptbase-linuxrtc_load.sh $lkmbase/linuxrtc.o
	$modload -e vmmon_lkmentry -o $TMPFILE2 \
		-p $scriptbase-vmmon_load.sh $lkmbase/vmmon.o
	$modload -e vmnet_lkmentry -o $TMPFILE3 \
		-p $scriptbase-vmnet_load.sh $lkmbase/if_hub.o
}

unload_modules()
{
	$modunload -n linuxrtc -p $scriptbase-linuxrtc_unload.sh
	$modunload -n vmmon -p $scriptbase-vmmon_unload.sh
	$modunload -n vmnet -p $scriptbase-vmnet_unload.sh
}

check_perms
check_securelevel

case $1 in
	load)
		load_modules
		;;
	unload)
		unload_modules
		;;
	*)
		echo "usage: $0 $1 [ load | unload ]"
		exit 1
		;;
esac

exit 0
@


1.3
log
@I screwed up.  This was not ok to remove, perhaps another time, but not now,
and not without ok's and the proper process.
@
text
@d2 1
a2 1
#	$OpenBSD: vmware-modules.sh,v 1.1.1.1 2004/10/05 18:32:28 todd Exp $
@


1.2
log
@Now that qemu is in, and is comparable to vmware, good bye vmware.
A free license is preferred to a non-native no-source-available binary
requiring license keys, kernel lkm's, and root.
@
text
@d2 1
a2 1
#	$OpenBSD: vmware-modules.sh,v 1.1 2004/10/05 18:32:28 todd Exp $
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
#	$OpenBSD$
@


1.1.1.1
log
@Proprietary/commercial x86 machine emulator for x86.
based on work from others.
@
text
@@
