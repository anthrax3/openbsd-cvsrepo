head	1.5;
access;
symbols
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2008.09.30.17.39.24;	author brad;	state dead;
branches;
next	1.4;

1.4
date	2007.05.31.20.31.36;	author aanriot;	state Exp;
branches;
next	1.3;

1.3
date	2006.07.16.15.13.27;	author mcbride;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.10.21.33.36;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.08.01.44.38;	author aaron;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove this ancient VMware 3 port for the kernel LKMs. They have never
really worked very well and with newer kernels they do not work at all.

PR 5893.
@
text
@$OpenBSD: patch-source_vmmon_openbsd_drv_c,v 1.4 2007/05/31 20:31:36 aanriot Exp $
--- source/vmmon/openbsd/drv.c.orig	Sun Mar 14 14:58:50 2004
+++ source/vmmon/openbsd/drv.c	Wed May 30 22:53:16 2007
@@@@ -414,6 +414,7 @@@@ vmmon_fake_clonedev(dev_t dev, int flag, struct proc *
 #endif 
 
 	p->p_dupfd = fd;
+	p->p_descfd = p->p_dupfd;	/* XXX */
 
 	return ENXIO;
 }
@@@@ -436,6 +437,7 @@@@ vmmon_alloc_low_pages(struct vmx86_softc *vmxsc, unsig
 	int error, n;
 	extern paddr_t avail_end;
 	struct rmem_pgrange *pgrp;
+#if !defined(__OpenBSD__)
 #if 0
 #define ISA_DMA_BOUNCE_THRESHOLD (16UL * 1024 * 1024)
 #else
@@@@ -445,6 +447,7 @@@@ vmmon_alloc_low_pages(struct vmx86_softc *vmxsc, unsig
 	 * So just use any pages we can get.
 	 */
 #define ISA_DMA_BOUNCE_THRESHOLD (3072UL * 1024 * 1024)
+#endif
 #endif
 
 	if (numPages == 0)
@


1.4
log
@- unbreak vmmon/vmnet removing the PHOLD/PRELE calls that are not
present anymore.
- while there, regen patches.

ok todd@@
@
text
@d1 1
a1 1
$OpenBSD: patch-source_vmmon_openbsd_drv_c,v 1.3 2006/07/16 15:13:27 mcbride Exp $
@


1.3
log
@Make vmware work with pae. Most of the fixups from drahn@@

ok todd@@
@
text
@d1 4
a4 4
$OpenBSD: patch-source_vmmon_openbsd_drv_c,v 1.2 2006/04/10 21:33:36 todd Exp $
--- source/vmmon/openbsd/drv.c.orig	Sun Mar 14 15:58:50 2004
+++ source/vmmon/openbsd/drv.c	Fri Jul 14 11:15:49 2006
@@@@ -414,6 +414,7 @@@@ vmmon_fake_clonedev(dev_t dev, int flag,
d12 1
a12 1
@@@@ -436,6 +437,7 @@@@ vmmon_alloc_low_pages(struct vmx86_softc
d20 1
a20 1
@@@@ -445,6 +447,7 @@@@ vmmon_alloc_low_pages(struct vmx86_softc
@


1.2
log
@permit vmware to compile since bpf changes
from Frank Dennis
bump pkgname
@
text
@d1 1
a1 1
$OpenBSD: patch-source_vmmon_openbsd_drv_c,v 1.1 2006/01/08 01:44:38 aaron Exp $
d3 1
a3 1
+++ source/vmmon/openbsd/drv.c	Mon Apr 10 16:13:41 2006
d12 16
@


1.1
log
@Workaround a new security restriction in the kernel that won't allow the
/dev/fd/# mechanism to be used by setugid processes.  The vmmon and vmnet
kernel modules have hacks which use this feature to implement "poor man's
device cloning".  Since vmware setgid's itself (even when run as root),
this broke.  Deal with this in {vmmon,hub}_fake_clonedev() by fooling
dupfdopen() into thinking vmware is a setuid script.

Now vmware will work again in -current.  Tested by myself.  Diff was
eyeballed by deraadt@@ and tedu@@.
@
text
@d1 4
a4 4
$OpenBSD$
--- source/vmmon/openbsd/drv.c.orig	Sat Jan  7 08:02:50 2006
+++ source/vmmon/openbsd/drv.c	Sat Jan  7 08:27:00 2006
@@@@ -414,6 +414,7 @@@@
@

