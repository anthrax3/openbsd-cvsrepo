head	1.4;
access;
symbols
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2008.09.30.17.39.24;	author brad;	state dead;
branches;
next	1.3;

1.3
date	2007.05.31.20.31.36;	author aanriot;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.10.21.33.36;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.08.01.44.38;	author aaron;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove this ancient VMware 3 port for the kernel LKMs. They have never
really worked very well and with newer kernels they do not work at all.

PR 5893.
@
text
@$OpenBSD: patch-source_vmnet_if_hubmod_c,v 1.3 2007/05/31 20:31:36 aanriot Exp $
--- source/vmnet/if_hubmod.c.orig	Sun Mar 14 14:58:51 2004
+++ source/vmnet/if_hubmod.c	Wed May 30 23:02:25 2007
@@@@ -399,7 +399,6 @@@@ port_mappoll(struct hubport_softc *portsc, vaddr_t uad
 	kpage = uvm_km_valloc_wait(kernel_map, PAGE_SIZE);
 	kaddr = kpage + off;
 
-	PHOLD(CURLWP);
 	error = uvm_vslock(curproc, (void *)upage, PAGE_SIZE,
 	    VM_PROT_READ|VM_PROT_WRITE);
 	if (error)
@@@@ -411,14 +410,12 @@@@ port_mappoll(struct hubport_softc *portsc, vaddr_t uad
 #if 1
 	pmap_update(pmap_kernel());
 #endif
-	PRELE(CURLWP);
 	portsc->port_kpollpage = kpage;
 	portsc->port_upollpage = upage;
 	portsc->port_pollptr = (u_int32_t *)kaddr;
 	return 0;
 
     err:
-	PRELE(CURLWP);
 	uvm_km_free_wakeup(kernel_map, kpage, PAGE_SIZE);
 	return (error);
 }
@@@@ -431,9 +428,7 @@@@ port_unmappoll(struct hubport_softc *portsc)
 	pmap_update(pmap_kernel());
 #endif
 	uvm_km_free_wakeup(kernel_map, portsc->port_kpollpage, PAGE_SIZE);
-	PHOLD(CURLWP);
 	uvm_vsunlock(curproc, (void *)portsc->port_upollpage, PAGE_SIZE);
-	PRELE(CURLWP);
 	portsc->port_pollptr = NULL;
 	portsc->port_kpollpage = 0;
 	portsc->port_upollpage = 0;
@@@@ -604,6 +599,7 @@@@ hub_fake_clonedev(dev_t dev, int flag, struct proc *p)
 #endif
 
 	p->p_dupfd = fd;
+	p->p_descfd = p->p_dupfd;	/* XXX */
 
 	return ENXIO;
 }
@@@@ -651,7 +647,7 @@@@ hub_sendchain(struct hubport_softc *portsc, struct mbu
 			 */
 #if NBPFILTER > 0
 			if (ifp2->if_bpf)
-				bpf_mtap(ifp2->if_bpf, m2);
+				bpf_mtap(ifp2->if_bpf, m2, BPF_DIRECTION_OUT);
 #endif
 			s = splnet();
 			drops1 = ifp2->if_snd.ifq_drops;
@@@@ -732,7 +728,7 @@@@ hub_ifstart(struct ifnet *ifp)
 	hub_sendchain(portsc, m);
 #if NBPFILTER > 0
 	if (ifp->if_bpf)
-		bpf_mtap(ifp->if_bpf, m);
+		bpf_mtap(ifp->if_bpf, m, BPF_DIRECTION_OUT);
 #endif
 	m_freem(m);
 
@


1.3
log
@- unbreak vmmon/vmnet removing the PHOLD/PRELE calls that are not
present anymore.
- while there, regen patches.

ok todd@@
@
text
@d1 1
a1 1
$OpenBSD: patch-source_vmnet_if_hubmod_c,v 1.2 2006/04/10 21:33:36 todd Exp $
@


1.2
log
@permit vmware to compile since bpf changes
from Frank Dennis
bump pkgname
@
text
@d1 37
a37 4
$OpenBSD: patch-source_vmnet_if_hubmod_c,v 1.1 2006/01/08 01:44:38 aaron Exp $
--- source/vmnet/if_hubmod.c.orig	Sun Mar 14 15:58:51 2004
+++ source/vmnet/if_hubmod.c	Mon Apr 10 16:17:15 2006
@@@@ -604,6 +604,7 @@@@ hub_fake_clonedev(dev_t dev, int flag, s
d45 1
a45 1
@@@@ -651,7 +652,7 @@@@ hub_sendchain(struct hubport_softc *port
d54 1
a54 1
@@@@ -732,7 +733,7 @@@@ hub_ifstart(struct ifnet *ifp)
@


1.1
log
@Workaround a new security restriction in the kernel that won't allow the
/dev/fd/# mechanism to be used by setugid processes.  The vmmon and vmnet
kernel modules have hacks which use this feature to implement "poor man's
device cloning".  Since vmware setgid's itself (even when run as root),
this broke.  Deal with this in {vmmon,hub}_fake_clonedev() by fooling
dupfdopen() into thinking vmware is a setuid script.

Now vmware will work again in -current.  Tested by myself.  Diff was
eyeballed by deraadt@@ and tedu@@.
@
text
@d1 4
a4 4
$OpenBSD$
--- source/vmnet/if_hubmod.c.orig	Sat Jan  7 08:27:56 2006
+++ source/vmnet/if_hubmod.c	Sat Jan  7 08:27:18 2006
@@@@ -604,6 +604,7 @@@@
d12 18
@

