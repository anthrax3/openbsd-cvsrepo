head	1.2;
access;
symbols
	OPENBSD_3_1:1.1.1.1.0.2
	OPENBSD_3_1_BASE:1.1.1.1
	naddy_20020304:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2002.06.25.16.14.51;	author wcobb;	state dead;
branches;
next	1.1;

1.1
date	2002.03.04.00.58.00;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.03.04.00.58.00;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@zsnes 1.35 update; ok naddy@@
@
text
@$OpenBSD: patch-src_linux_protect_c,v 1.1 2002/03/04 00:58:00 naddy Exp $
--- src/linux/protect.c.orig	Sun Mar  3 06:08:13 2002
+++ src/linux/protect.c	Sun Mar  3 06:09:35 2002
@@@@ -39,6 +39,8 @@@@ extern void Sa1RegsAsmStart();
 extern void Sa1RegsAsmEnd();
 extern void WinIntRFAsmStart();
 extern void WinIntRFAsmEnd();
+extern void SDLDrawAsmStart();
+extern void SDLDrawAsmEnd();
 extern void ProcVidAsmStart();
 extern void ProcVidAsmEnd();
 extern void CfgLoadAsmStart();
@@@@ -157,6 +159,7 @@@@ void UnProtectMemory(void)
 	MakeCodeWriteable((long) Sa1ProcAsmStart, (long) Sa1ProcAsmEnd - (long) Sa1ProcAsmStart);
 	MakeCodeWriteable((long) Sa1RegsAsmStart, (long) Sa1RegsAsmEnd - (long) Sa1RegsAsmStart);
 	MakeCodeWriteable((long) WinIntRFAsmStart, (long) WinIntRFAsmEnd - (long) WinIntRFAsmStart);
+	MakeCodeWriteable((long) SDLDrawAsmStart, (long) SDLDrawAsmEnd - (long) SDLDrawAsmStart);
 	MakeCodeWriteable((long) GuiAsmStart, (long) GuiAsmEnd - (long) GuiAsmStart);
 	MakeCodeWriteable((long) ProcVidAsmStart, (long) ProcVidAsmEnd - (long) ProcVidAsmStart);
 	MakeCodeWriteable((long) CfgLoadAsmStart, (long) CfgLoadAsmEnd - (long) CfgLoadAsmStart);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import zsnes 1.337; submitted by Wilbern Cobb <vedge@@csoft.org>.

ZSNES is a complete, featureful and highly optimized Super Nintendo
emulator written mostly in x86 assembler. It requires a CPU which
understands MMX instructions.
@
text
@@
