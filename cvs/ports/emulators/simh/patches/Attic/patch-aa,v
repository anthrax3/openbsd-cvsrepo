head	1.3;
access;
symbols
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.4
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.2
	OPENBSD_2_5_BASE:1.1.1.1
	form_19981112:1.1.1.1
	form:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2002.02.04.05.10.29;	author form;	state dead;
branches;
next	1.2;

1.2
date	2000.01.26.13.52.40;	author form;	state Exp;
branches;
next	1.1;

1.1
date	98.11.12.13.13.09;	author form;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.11.12.13.13.09;	author form;	state Exp;
branches;
next	;


desc
@@


1.3
log
@upgrade to 2.8.5
@
text
@# $NetBSD: patch-aa,v 1.2 1998/08/12 22:44:52 tv Exp $
# $OpenBSD: patch-aa,v 1.2 2000/01/26 13:52:40 form Exp $

--- scp.c.orig	Fri Sep  4 02:10:14 1998
+++ scp.c	Wed Jan 26 19:44:10 2000
@@@@ -248,7 +248,10 @@@@
 do {	printf ("sim> ");				/* prompt */
 	cptr = read_line (cbuf, CBUFSIZE, stdin);	/* read command line */
 	stat = SCPE_UNK;
-	if (cptr == NULL) continue;			/* ignore EOF */
+	if (cptr == NULL) {				/* ignore EOF */
+		puts("");
+		continue;
+	}
 	if (*cptr == 0) continue;			/* ignore blank */
 	cptr = get_glyph (cptr, gbuf, 0);		/* get command glyph */
 	for (i = 0; cmd_table[i].name != NULL; i++) {
@@@@ -903,7 +906,7 @@@@
 		    (UNIT_ATT + UNIT_SEQ))
 			fseek (uptr -> fileref, uptr -> pos, SEEK_SET);  }  }
 stop_cpu = 0;
-if ((int) signal (SIGINT, int_handler) == -1) {		/* set WRU */
+if (signal (SIGINT, int_handler) == (void *)-1) {		/* set WRU */
 	printf ("Simulator interrupt handler setup failed\n");
 	return SCPE_OK;  }
 if (ttrunstate () != SCPE_OK) {				/* set console */
@


1.2
log
@Update to 2.3d
@
text
@d2 1
a2 1
# $OpenBSD: $
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
$NetBSD: patch-aa,v 1.2 1998/08/12 22:44:52 tv Exp $
d4 3
a6 4
--- scp.c.orig	Wed Aug 12 18:21:13 1998
+++ scp.c	Wed Aug 12 18:24:25 1998
@@@@ -240,6 +240,7 @@@@
 
a8 1
+	if (cptr == NULL) break;			/* exit on eof */
d10 5
a14 1
 	if (cptr == NULL) continue;			/* ignore EOF */
d16 3
a18 9
@@@@ -254,6 +255,7 @@@@
 
 detach_all (0);
 ttclose ();
+puts("");
 return 0;
 }
 
@@@@ -879,7 +881,7 @@@@
d23 1
a23 1
+if (signal (SIGINT, int_handler) == (void *)-1) {	/* set WRU */
@


1.1.1.1
log
@A PDP, IBM 1401, and Nova CPU simulator
@
text
@@
