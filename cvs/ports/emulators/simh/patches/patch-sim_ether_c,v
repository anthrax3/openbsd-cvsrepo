head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.20
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.18
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.14
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.16
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.12
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.10
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.8
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.6
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.4
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.2
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.8
	OPENBSD_5_0:1.12.0.6
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.4
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.2
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.9.0.10
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.8
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.6
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.7.0.6
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.4
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3;
locks; strict;
comment	@# @;


1.13
date	2012.07.10.00.07.45;	author sthen;	state Exp;
branches;
next	1.12;

1.12
date	2010.03.21.09.26.49;	author jasper;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.29.10.09.14;	author form;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.29.09.07.22;	author form;	state Exp;
branches;
next	1.9;

1.9
date	2007.07.24.20.45.41;	author kili;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.10.21.01.15;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.09.11.31.11;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.21.02.24.56;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2005.12.21.01.32.29;	author fgsch;	state dead;
branches;
next	1.4;

1.4
date	2005.10.24.15.53.26;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2005.06.19.03.47.25;	author david;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.28.16.41.12;	author fgsch;	state dead;
branches;
next	1.1;

1.1
date	2002.10.29.23.55.01;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.13
log
@update to simh 3.9.0, from Brad, tested by me and william@@
@
text
@$OpenBSD: patch-sim_ether_c,v 1.12 2010/03/21 09:26:49 jasper Exp $
--- sim_ether.c.orig	Fri Mar 30 16:30:26 2012
+++ sim_ether.c	Wed Jun 13 06:47:21 2012
@@@@ -1750,14 +1750,19 @@@@ strcpy(dev->name, savname);
 dev->dptr = dptr;
 dev->dbit = dbit;
 
-#if !defined(HAS_PCAP_SENDPACKET) && defined (xBSD) && !defined (__APPLE__)
+#if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__)
 /* Tell the kernel that the header is fully-formed when it gets it.
    This is required in order to fake the src address. */
 if (dev->eth_api == ETH_API_PCAP) {
   int one = 1;
   ioctl(pcap_fileno(dev->handle), BIOCSHDRCMPLT, &one);
+#ifdef __OpenBSD__
+    /* set direction filter */
+    one = BPF_DIRECTION_OUT;
+    ioctl(pcap_fileno(dev->handle), BIOCSDIRFILT, &one);
+#endif /* __OpenBSD__ */
   }
-#endif /* xBSD */
+#endif /* __FreeBSD__ || __NetBSD__ || __OpenBSD__ */
 
 #if defined (USE_READER_THREAD)
 if (1) {
@


1.12
log
@- tweak master sites
- set license version
- honor cflags
- regen patches

maintainer timed-out.
@
text
@d1 6
a6 15
$OpenBSD: patch-sim_ether_c,v 1.11 2009/10/29 10:09:14 form Exp $
--- sim_ether.c.orig	Thu Apr 24 17:11:42 2008
+++ sim_ether.c	Tue Jan 26 13:12:30 2010
@@@@ -919,7 +919,7 @@@@ t_stat eth_open(ETH_DEV* dev, char* name, DEVICE* dptr
       /* probably is not ethX and has no description */
       savname = eth_getname_byname(name, temp);
       if (savname == 0) /* didn't translate */
-        return SCPE_OPENERR;
+        savname = name;
     }
   }
 
@@@@ -945,14 +945,19 @@@@ t_stat eth_open(ETH_DEV* dev, char* name, DEVICE* dptr
   dev->dptr = dptr;
   dev->dbit = dbit;
d10 5
a14 5
   /* Tell the kernel that the header is fully-formed when it gets it.
      This is required in order to fake the src address. */
   {
     int one = 1;
     ioctl(pcap_fileno(dev->handle), BIOCSHDRCMPLT, &one);
d25 1
a25 1
   {
@


1.11
log
@set direction filter
@
text
@d1 1
a1 1
$OpenBSD: patch-sim_ether_c,v 1.10 2009/10/29 09:07:22 form Exp $
d3 2
a4 2
+++ sim_ether.c	Thu Oct 29 15:54:38 2009
@@@@ -919,7 +919,7 @@@@
d13 1
a13 1
@@@@ -945,14 +945,19 @@@@
@


1.10
log
@Tell the kernel that the header is fully-formed when it gets it.
Makes DECnet work.
@
text
@d1 1
a1 1
$OpenBSD: patch-sim_ether_c,v 1.9 2007/07/24 20:45:41 kili Exp $
d3 1
a3 1
+++ sim_ether.c	Thu Oct 29 14:53:26 2009
d13 1
a13 1
@@@@ -945,14 +945,14 @@@@
d24 5
@


1.9
log
@
Update to 3.7.2.

ok, fgsch (maintainer), kurt@@
@
text
@d1 4
a4 4
$OpenBSD: patch-sim_ether_c,v 1.8 2007/05/10 21:01:15 matthieu Exp $
--- sim_ether.c.orig	Thu May 17 12:08:20 2007
+++ sim_ether.c	Sun Jul 22 19:37:59 2007
@@@@ -919,7 +919,7 @@@@ t_stat eth_open(ETH_DEV* dev, char* name, DEVICE* dptr
d13 17
@


1.8
log
@Update to 3.7. todd@@ sent me an almost identical patch. Tested and ok kili@@
@
text
@d1 4
a4 4
$OpenBSD: patch-sim_ether_c,v 1.7 2006/02/09 11:31:11 fgsch Exp $
--- sim_ether.c.orig	Sun Oct 15 14:58:04 2006
+++ sim_ether.c	Tue May  8 21:33:31 2007
@@@@ -729,7 +729,7 @@@@ t_stat eth_open(ETH_DEV* dev, char* name, DEVICE* dptr
@


1.7
log
@Update to 3.5.2; see http://simh.trailing-edge.com/changes35.html
for changelog.
@
text
@d1 4
a4 4
$OpenBSD: patch-sim_ether_c,v 1.6 2005/12/21 02:24:56 fgsch Exp $
--- sim_ether.c.orig	Tue Dec 27 13:26:54 2005
+++ sim_ether.c	Wed Feb  8 18:42:28 2006
@@@@ -727,7 +727,7 @@@@ t_stat eth_open(ETH_DEV* dev, char* name
@


1.6
log
@and make this backwards compatible regarding interface names; found the
hard way by matthieu@@.
@
text
@d1 10
a10 9
$OpenBSD$
--- sim_ether.c.orig	Wed Dec 21 02:13:18 2005
+++ sim_ether.c	Wed Dec 21 02:13:57 2005
@@@@ -656,7 +656,7 @@@@ t_stat eth_open(ETH_DEV* dev, char* name
     /* are they trying to use device description? */
     savname = eth_getname_bydesc(name, temp);
     if (savname == 0) /* didn't translate */
-      return SCPE_OPENERR;
+      savname = name;
a12 1
   /* attempt to connect device */
@


1.5
log
@remove unneeded patches; pcap now includes these functions.
@
text
@d1 10
a10 6
$OpenBSD: patch-sim_ether_c,v 1.4 2005/10/24 15:53:26 fgsch Exp $
--- sim_ether.c.orig	Wed Sep  7 08:50:26 2005
+++ sim_ether.c	Mon Oct 24 12:14:39 2005
@@@@ -588,6 +588,12 @@@@ int pcap_sendpacket(pcap_t* handle, cons
 }
 #endif /* !HAS_PCAP_SENDPACKET */
d12 1
a12 25
+int pcap_setnonblock(pcap_t* handle, int nonblock, char *errbuf)
+{
+  fcntl(pcap_fileno(handle), F_SETFL, fcntl(pcap_fileno(handle), F_GETFL, 0) | O_NONBLOCK);
+  return 0;
+}
+
 #if defined (USE_READER_THREAD)
 #include <pthread.h>
 
@@@@ -1155,12 +1161,13 @@@@ int eth_host_devices(int used, int max, 
 
 int eth_devices(int max, ETH_LIST* list)
 {
+  int i = 0;
+
+#ifndef DONT_USE_PCAP_FINDALLDEVS
   pcap_if_t* alldevs;
   pcap_if_t* dev;
-  int i = 0;
   char errbuf[PCAP_ERRBUF_SIZE];
 
-#ifndef DONT_USE_PCAP_FINDALLDEVS
   /* retrieve the device list */
   if (pcap_findalldevs(&alldevs, errbuf) == -1) {
     char* msg = "Eth: error in pcap_findalldevs: %s\r\n";
@


1.4
log
@update to simh 3.5-1. mentioned by pedro@@.
@
text
@d1 1
a1 1
$OpenBSD: patch-sim_ether_c,v 1.3 2005/06/19 03:47:25 david Exp $
@


1.3
log
@update to simh-3.4-0; ok fgsch@@ kettenis@@
adds extended memory support for VAX allowing up to 512MB of memory
@
text
@d1 4
a4 4
$OpenBSD$
--- sim_ether.c.orig	Wed Mar 31 14:38:58 2004
+++ sim_ether.c	Wed Oct 20 19:46:41 2004
@@@@ -557,6 +557,12 @@@@ int pcap_sendpacket(pcap_t* handle, cons
d17 1
a17 1
@@@@ -1080,12 +1086,13 @@@@ int eth_host_devices(int used, int max, 
@


1.2
log
@Update to simh 2.10-1; interdata and sds simulators are not included.
@
text
@d1 6
a6 15
$OpenBSD: patch-sim_ether_c,v 1.1 2002/10/29 23:55:01 fgsch Exp $
--- sim_ether.c.orig	Fri Oct 25 16:27:11 2002
+++ sim_ether.c	Fri Oct 25 16:30:31 2002
@@@@ -99,7 +99,8 @@@@ void eth_zero(ETH_DEV* dev)
 /*                        Non-implemented versions                            */
 /*============================================================================*/
 
-#if !defined (WIN32) && !defined(linux) && !defined(__NetBSD__)
+#if !defined (WIN32) && !defined(linux) && !defined(__NetBSD__) && \
+    !defined(__OpenBSD__)
 t_stat eth_open (ETH_DEV* dev, char* name)
   {return SCPE_NOFNC;}
 t_stat eth_close (ETH_DEV* dev)
@@@@ -116,20 +117,21 @@@@ int eth_devices (int max, ETH_LIST* dev)
 #else	 /* endif unimplemented */
d8 8
a15 5
 /*============================================================================*/
-/*   Win32, Linux, and NetBSD routines - Uses WinPCAP and libpcap packages    */
+/*   Win32, Linux, NetBSD and OpenSBD routines - Uses WinPCAP and libpcap     */
+/*   packages                                                                 */
 /*============================================================================*/
d17 1
a17 15
 #include <pcap.h>
 #ifdef WIN32
 #include <packet32.h>
 #endif /*WIN32*/
-#ifdef __NetBSD__
+#if defined(__NetBSD__) || defined(__OpenBSD__)
 #include <sys/ioctl.h>
 #include <net/bpf.h>
-#endif /* __NetBSD__ */
-#if defined(linux) || defined(__NetBSD__)
+#endif /* __NetBSD__ || __OpenBSD__ */
+#if defined(linux) || defined(__NetBSD__) || defined(__OpenBSD__)
 #include <fcntl.h>
-#endif /*linux || __NetBSD__*/
+#endif /*linux || __NetBSD__ || __OpenBSD__*/
d19 1
a19 1
 t_stat eth_open(ETH_DEV* dev, char* name)
d21 12
a32 47
@@@@ -166,17 +168,17 @@@@ t_stat eth_open(ETH_DEV* dev, char* name
   dev->name = malloc(strlen(savname)+1);
   strcpy(dev->name, savname);
 
-#ifdef __NetBSD__
+#if defined(__NetBSD__) || defined(__OpenBSD__)
   /* tell the kernel that the header is fully-formed when it gets it.
      this is required in order to fake the src address.  */
   i = 1;
   ioctl(pcap_fileno(dev->handle), BIOCSHDRCMPLT, &i);
-#endif /* __NetBSD__ */
+#endif /* __NetBSD__ || __OpenBSD__ */
 
-#if defined(linux) || defined(__NetBSD__)
+#if defined(linux) || defined(__NetBSD__) || defined(__OpenBSD__)
   /* set file non-blocking */
   fcntl(pcap_fileno(dev->handle), F_SETFL, fcntl(pcap_fileno(dev->handle), F_GETFL, 0) | O_NONBLOCK);
-#endif /*linux || __NetBSD__*/
+#endif /*linux || __NetBSD__ || __OpenBSD__*/
 
   return SCPE_OK;
 }
@@@@ -364,7 +366,7 @@@@ int eth_devices(int max, ETH_LIST* list)
   return index; /* count of devices */
 }
 
-#endif /* Win32 || linux || __NetBSD__ */
+#endif /* Win32 || linux || __NetBSD__ || __OpenBSD__ */
 
 /*============================================================================*/
 /*                          linux-specific code                               */
@@@@ -422,7 +424,7 @@@@ int PacketGetAdapterNames(char* buffer, 
 /*                          NetBSD-specific code                              */
 /*============================================================================*/
 
-#ifdef __NetBSD__
+#if defined(__NetBSD__) || defined(__OpenBSD__)
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <net/if_dl.h>
@@@@ -470,5 +472,5 @@@@ int PacketGetAdapterNames(char* buffer, 
   return (ptr);
 }
 
-#endif /* __NetBSD__ */
+#endif /* __NetBSD__ || __OpenBSD__ */
 
@


1.1
log
@o update to simh 2.10b3.
o include DELQA and DEQNA ethernet support for vax and pdp11.

some diffs have been submited for future inclusion.
@
text
@d1 1
a1 1
$OpenBSD$
@

