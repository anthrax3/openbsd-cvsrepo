head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	edd_20120123:1.1.1.1
	edd:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2012.03.13.11.15.02;	author edd;	state dead;
branches;
next	1.3;

1.3
date	2012.02.29.21.38.31;	author edd;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.18.01.16.08;	author edd;	state dead;
branches;
next	1.1;

1.1
date	2012.01.23.09.22.59;	author edd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.01.23.09.22.59;	author edd;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to dgen-1.30

OK jeremy@@
@
text
@$OpenBSD: patch-md-phil_cpp,v 1.3 2012/02/29 21:38:31 edd Exp $

Fix joystick when not /dev/uhid0

--- md-phil.cpp.orig	Sun Jan 29 20:58:52 2012
+++ md-phil.cpp	Wed Feb 29 20:45:29 2012
@@@@ -168,11 +168,12 @@@@ void md::read_joysticks()
 #include <SDL_joystick.h>
 
 static SDL_Joystick *js_handle[2] = { NULL, NULL };
+int js_index[2] = { -1, -1 };
 
 void md::init_joysticks(int js1, int js2) {
   // Initialize the joystick support
   // Thanks to Cameron Moore <cameron@@unbeatenpath.net>
-  if(SDL_Init(SDL_INIT_JOYSTICK) < 0)
+  if(SDL_InitSubSystem(SDL_INIT_JOYSTICK) < 0)
     {
       fprintf(stderr, "joystick: Unable to initialize joystick system\n");
       return;
@@@@ -191,9 +192,15 @@@@ void md::init_joysticks(int js1, int js2) {
 
   // Print the joystick names
   printf("joystick: Using ");
-  if(js_handle[0]) printf("%s (#%d) as pad1 ", SDL_JoystickName(js1), js1);
+  if(js_handle[0]) {
+    printf("%s (#%d) as pad1 ", SDL_JoystickName(js1), js1);
+    js_index[0] = js1;
+  }
   if(js_handle[0] && js_handle[1]) printf("and ");
-  if(js_handle[1]) printf("%s (#%d) as pad2 ", SDL_JoystickName(js2), js2);
+  if(js_handle[1]) {
+    printf("%s (#%d) as pad2 ", SDL_JoystickName(js2), js2);
+    js_index[1] = js2;
+  }
   printf("\n");
 
   // Enable joystick events
@


1.3
log
@Fix usb joysticks when the device is not /dev/ugen0

From zamaz (upstream), many thanks.

OK ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to dgen-sdl-1.29.

Upstream took our joystick patches for this release, so they are gone.

Fixes some odd display bugs reported by rfreeman@@ and fixes some games for me also.

OK rfreeman@@
@
text
@d1 1
a1 1
$OpenBSD: patch-md-phil_cpp,v 1.1 2012/01/23 09:22:59 edd Exp $
d3 1
a3 1
Make joystick devices configurable via config file
d5 4
a8 3
--- md-phil.cpp.orig	Thu Nov 17 21:49:02 2011
+++ md-phil.cpp	Sun Jan 22 16:50:21 2012
@@@@ -165,7 +165,7 @@@@ void md::read_joysticks()
d11 1
d13 1
a13 2
-void md::init_joysticks() {
+void md::init_joysticks(int js1, int js2) {
d16 4
a19 2
   if(SDL_Init(SDL_INIT_JOYSTICK) < 0)
@@@@ -174,9 +174,11 @@@@ void md::init_joysticks() {
d21 1
a21 13
     }
 
+  printf("Initialising SDL system joysticks %d and %d\n", js1, js2);
+
   // Open the first couple of joysticks, if possible
-  js_handle[0] = SDL_JoystickOpen(0);
-  js_handle[1] = SDL_JoystickOpen(1);
+  js_handle[0] = SDL_JoystickOpen(js1);
+  js_handle[1] = SDL_JoystickOpen(js2);
 
   // If neither opened, quit
   if(!(js_handle[0] || js_handle[1]))
@@@@ -187,9 +189,9 @@@@ void md::init_joysticks() {
d24 6
a29 3
   printf("Using ");
-  if(js_handle[0]) printf("%s (#0) as pad1 ", SDL_JoystickName(0));
+  if(js_handle[0]) printf("%s (#0) as pad1 ", SDL_JoystickName(js1));
d31 5
a35 2
-  if(js_handle[1]) printf("%s (#1) as pad2 ", SDL_JoystickName(1));
+  if(js_handle[1]) printf("%s (#1) as pad2 ", SDL_JoystickName(js2));
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import dgen-sdl-1.28; A Sega Megadrive/Genesis emulator.

Hopefully this can replace emulators/generator.

OK jeremy@@

@
text
@@
