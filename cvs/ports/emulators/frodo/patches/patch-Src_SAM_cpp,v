head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.68
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.66
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.64
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.60
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.62
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.58
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.56
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.54
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.52
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.50
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.48
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.46
	OPENBSD_5_0:1.1.0.44
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.42
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.40
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.38
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.36
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.34
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.32
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.30
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.28
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.26
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.24
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.22
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.20
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.18
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.16
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.14
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.12
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.10
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.8
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.6
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2001.01.14.21.10.50;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Repair SAM. Add an y command to save large programs, useful to go from
*.d64 -> directory.
@
text
@--- Src/SAM.cpp.orig	Sun Jan 14 02:20:30 2001
+++ Src/SAM.cpp	Sun Jan 14 02:55:01 2001
@@@@ -13,6 +13,7 @@@@
 #include "VIC.h"
 #include "SID.h"
 #include "CIA.h"
+#include <errno.h>
 
 
 // Pointers to chips
@@@@ -261,6 +262,7 @@@@ static void view_1541_state(void);
 static void dump_via_ints(uint8 i);
 static void load_data(void);
 static void save_data(void);
+static void save_program(void);
 
 
 /*
@@@@ -391,6 +393,10 @@@@ void SAM(C64 *the_c64)
 				get_token();
 				save_data();
 				break;
+			case 'y':		// Save program
+				get_token();
+				save_program();
+				break;
 
 			case 't':		// Transfer
 				get_token();
@@@@ -527,7 +533,9 @@@@ static void read_line(void)
 #ifdef __riscos__
 	OS_ReadLine(in_ptr = input, INPUT_LENGTH, 0, 255, 0);
 #else
-	fgets(in_ptr = input, INPUT_LENGTH, fin);
+	while (fgets(in_ptr = input, INPUT_LENGTH, fin) == NULL && 
+		errno == EINTR)
+		;
 #endif
 }
 
@@@@ -2137,6 +2145,45 @@@@ static void load_data(void)
 	}
 }
 
+/*
+ *  Save program
+ *  s end "file"
+ */
+
+static void save_program(void)
+{
+	bool done = false;
+	uint16 adr, end_adr;
+	FILE *file;
+
+	int keep = TheCPU->ExtConfig;
+
+	adr = 0x801;
+
+
+	TheCPU->ExtConfig = 0;
+	if (!expression(&end_adr))
+		return;
+	if (the_token == T_END) {
+		error("Missing file name");
+		return;
+	}
+	if (the_token != T_STRING) {
+		error("'\"' around file name expected");
+		return;
+	}
+
+	if (!(file = fopen(the_string, "wb")))
+		error("Unable to create file");
+	else {
+		fputc(adr & 0xff, file);
+		fputc(adr >> 8U, file);
+		while (adr != end_adr)
+			fputc(SAMReadByte(adr++), file);
+		fclose(file);
+	}
+	TheCPU->ExtConfig = keep;
+}
 
 /*
  *  Save data
@
