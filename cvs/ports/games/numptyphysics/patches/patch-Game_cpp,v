head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.18
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.16
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.12
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.10
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.8
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2012.12.12.14.58.00;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.14.12.01.18;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2009.10.22.23.07.54;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to the latest svn snapshots:

numptyphysics -> 2010/09/16

npcomplete -> 2010/01/24

Kudos to sthen@@ for mirroring the distfiles
@
text
@$OpenBSD: patch-Game_cpp,v 1.2 2011/01/14 12:01:18 dcoppa Exp $
--- Game.cpp.orig	Wed Dec  5 15:53:11 2012
+++ Game.cpp	Thu Dec  6 11:11:27 2012
@@@@ -22,7 +22,6 @@@@
 #include "Canvas.h"
 #include "Font.h"
 #include "Levels.h"
-#include "Http.h"
 #include "Os.h"
 #include "Scene.h"
 #include "Script.h"
@@@@ -33,11 +32,11 @@@@
 #include <SDL/SDL_image.h>
 
 #include <cstdio>
+#include <cerrno>
 #include <iostream>
 #include <sstream>
 #include <fstream>
 #include <memory.h>
-#include <errno.h>
 #include <sys/stat.h>
 
 using namespace std;
@@@@ -58,9 +57,9 @@@@ class Game : public GameControl, public Container
   Widget           *m_pauseLabel;
   Widget           *m_editLabel;
   Widget           *m_completedDialog;
+  bool              m_isCompleted;
   Widget           *m_options;
   Os               *m_os;
-  bool              m_isCompleted;
   Path              m_jointCandidates;
   Path              m_jointInd;
 public:
@@@@ -148,28 +147,6 @@@@ class Game : public GameControl, public Container
     return false;
   }
 
-
-  bool send()
-  {
-    if ( save( SEND_TEMP_FILE ) ) {
-      Http h;
-      if ( h.post( (Config::planetRoot()+"/upload").c_str(),
-		   "data", SEND_TEMP_FILE, "type=1" ) ) {
-	std::string id = h.getHeader("NP-Upload-Id");
-	if ( id.length() > 0 ) {
-	  printf("uploaded as id %s\n",id.c_str());
-	  if ( !m_os->openBrowser((Config::planetRoot()+"/editlevel?id="+id).c_str()) ) {
-	    showMessage("Unable to launch browser");
-	  }
-	} else {
-	  showMessage("UploadFailed: unknown error");
-	}
-      } else {
-	showMessage(std::string("UploadFailed: ")+h.errorMessage());
-      }
-    }
-    return false;
-  }
 
   void saveDemo()
   {
@


1.2
log
@Do not build the HTTP client code since it's unused and poorly written.
@
text
@d1 4
a4 5
$OpenBSD: patch-Game_cpp,v 1.1 2009/10/22 23:07:54 sthen Exp $
--- Game.cpp.orig	Tue Nov 11 17:54:38 2008
+++ Game.cpp	Thu Jan 13 10:48:15 2011
@@@@ -22,18 +22,17 @@@@
 #include "Path.h"
d6 1
d10 3
a12 2
 
 #include <SDL/SDL.h>
d25 10
a34 37
@@@@ -80,7 +79,7 @@@@ class Transform (public)
     }
   }
 private:
-  Transform() {}
+  Transform() : m_bypass(false) {}
   bool m_bypass;
   b2Mat22 m_rot;
   b2Mat22 m_invrot;
@@@@ -176,6 +175,7 @@@@ class Stroke (public)
     m_attributes = 0;
     m_origin = m_rawPath.point(0);
     m_rawPath.translate( -m_origin );
+    m_body = NULL;
     reset();
   }  
 
@@@@ -185,6 +185,7 @@@@ class Stroke (public)
     m_colour = brushColours[DEFAULT_BRUSH];
     m_attributes = 0;
     m_origin = Vec2(400,240);
+    m_body = NULL;
     reset();
     const char *s = str.c_str();
     while ( *s && *s!=':' && *s!='\n' ) {
@@@@ -866,7 +867,7 @@@@ class DemoLog : public Array<DemoEntry> (public)
   void appendFromString( const std::string& str ) 
   {
     const char *s = str.c_str();
-    int t, o, v1, v2, v3;
+    int t, o = 0, v1, v2, v3;
     char c;
     SDL_Event ev = {0};
     ev.type = 0xff;
@@@@ -944,6 +945,12 @@@@ class DemoRecorder (private)
 class DemoPlayer
 {
d36 1
a36 10
+  DemoPlayer()
+    : m_playing(false),
+      m_log(0),
+      m_index(0),
+      m_lastTick(0),
+      m_lastTickTime(0) {}
 
   void start( const DemoLog* log ) 
   {
@@@@ -1076,26 +1083,6 @@@@ class Game : public GameControl (public)
d40 1
d45 2
a46 1
-      if ( h.post( Config::planetRoot().c_str(), "upload", SEND_TEMP_FILE ) ) {
d49 2
a50 1
-	  if ( !m_os->openBrowser((Config::planetRoot()+"?level="+id).c_str()) ) {
d62 2
a63 2
-
   void setTool( int t )
a64 14
     m_colour = t;
@@@@ -1555,11 +1542,7 @@@@ int npmain(int argc, char** argv)
 	}
       } else {
 	struct stat st;
-	if ( stat("Game.cpp",&st)==0 ) {
-	  game.levels().addPath( "data" );
-	} else {
-	  game.levels().addPath( DEFAULT_LEVEL_PATH );
-	}
+	game.levels().addPath( DEFAULT_LEVEL_PATH );
 	game.levels().addPath( Config::userDataDir().c_str() );
       }
       game.gotoLevel(0);
@


1.1
log
@Various patches to improve the game engine and allow all the npcomplete
levels to work. Some from Erik Hovland via the numptyphysics bug tracker,
some from David Coppa. Port diff from David Coppa (maintainer).
@
text
@d1 1
a1 1
$OpenBSD$
d3 9
a11 2
+++ Game.cpp	Fri Oct 16 13:39:01 2009
@@@@ -29,11 +29,11 @@@@
d24 1
a24 1
@@@@ -80,7 +80,7 @@@@ class Transform (public)
d33 1
a33 1
@@@@ -176,6 +176,7 @@@@ class Stroke (public)
d41 1
a41 1
@@@@ -185,6 +186,7 @@@@ class Stroke (public)
d49 1
a49 1
@@@@ -866,7 +868,7 @@@@ class DemoLog : public Array<DemoEntry> (public)
d58 1
a58 1
@@@@ -944,6 +946,12 @@@@ class DemoRecorder (private)
d71 28
a98 1
@@@@ -1555,11 +1563,7 @@@@ int npmain(int argc, char** argv)
@

