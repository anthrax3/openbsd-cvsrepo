head	1.4;
access;
symbols
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	sthen_20090128:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2011.01.14.12.01.18;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2009.10.22.23.07.54;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.28.15.14.55;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.28.10.12.35;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.01.28.10.12.35;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Do not build the HTTP client code since it's unused and poorly written.
@
text
@$OpenBSD: patch-Http_cpp,v 1.3 2009/10/22 23:07:54 sthen Exp $
--- Http.cpp.orig	Thu Oct 23 10:51:17 2008
+++ Http.cpp	Thu Oct 15 17:59:28 2009
@@@@ -15,6 +15,7 @@@@
  */
 
 #include <cstdlib>
+#include <cerrno>
 #include <stdio.h>
 #include <string.h>
 
@@@@ -41,7 +42,10 @@@@ static void http_begin_cb( const Response* r, void* us
 static void http_data_cb( const Response* r, void* userdata,
 		   const unsigned char* data, int numbytes )
 {
-  fwrite( data, 1, numbytes, ((Http*)userdata)->m_file );
+  size_t byteswritten;
+  if ( ( byteswritten = fwrite( data, 1, numbytes, ((Http*)userdata)->m_file ) ) != numbytes )
+    fprintf(stderr, "Wrote %d, should have written %d, http status=%d %s\n",
+	    byteswritten, numbytes, r->getstatus(), r->getreason());
   ((Http*)userdata)->m_size += numbytes;
 }
 
@@@@ -60,7 +64,11 @@@@ static bool parseUri( const char * uri,
   if ( strncmp(uri,"http://",strlen("http://"))==0 ) {
     uri += strlen("http://");
   }
-  strcpy(outHost,uri);
+  if (strlcpy(outHost,uri,sizeof(outHost)) >= sizeof(outHost)) {
+	errno = ENAMETOOLONG;
+	perror("strlcpy");
+  	return false;
+  }
   char* e = strchr(outHost,'/');
   *outPort = 80;
 
@@@@ -72,7 +80,11 @@@@ static bool parseUri( const char * uri,
     *e = '\0';
     *outPort=atoi(e+1);
   }
-  strcpy( outPath, strchr(uri,'/') );
+  if (strlcpy( outPath, strchr(uri,'/'), sizeof(outPath)) >= sizeof(outPath)) {
+	errno = ENAMETOOLONG;
+	perror("strlcpy");
+  	return false;
+  }
   fprintf(stderr,"Http::get host=%s port=%d file=%s\n",outHost,*outPort,outPath);
   return true;
 }
@@@@ -97,13 +109,12 @@@@ bool Http::get( const char* uri,
 	fprintf(stderr,"http_get pump\n");
 	con.pump();
       }
-    } catch ( Wobbly w ) {
+    } catch ( const Wobbly& w ) {
       fprintf(stderr,"http_get wobbly: %s\n",w.what());
     }
   }
 
   fclose ( m_file );
-  free( host );
   return m_size > 0;
 }
 
@@@@ -126,10 +137,12 @@@@ bool Http::post( const char* uri, const char*putname, 
 	fprintf(stderr,"http_get pump\n");
 	con.pump();
       }
-    } catch ( Wobbly w ) {
+    } catch ( const Wobbly& w ) {
       fprintf(stderr,"http_get wobbly: %s\n",w.what());
+      return false;
     }
   }
+  return true;
 }
 
 
@


1.3
log
@Various patches to improve the game engine and allow all the npcomplete
levels to work. Some from Erik Hovland via the numptyphysics bug tracker,
some from David Coppa. Port diff from David Coppa (maintainer).
@
text
@d1 1
a1 1
$OpenBSD: patch-Http_cpp,v 1.2 2009/01/28 15:14:55 sthen Exp $
@


1.2
log
@- fix implicit casts, from maintainer
- remove an attempt to free() static memory.
- better COMMENT

ok David Coppa (maintainer)
@
text
@d1 24
a24 4
$OpenBSD: patch-Http_cpp,v 1.1.1.1 2009/01/28 10:12:35 sthen Exp $
--- Http.cpp.orig	Thu Oct 23 09:51:17 2008
+++ Http.cpp	Wed Jan 28 14:23:33 2009
@@@@ -60,7 +60,7 @@@@ static bool parseUri( const char * uri,
d29 5
a33 1
+  strlcpy(outHost,uri,strlen(uri));
d37 1
a37 1
@@@@ -72,7 +72,7 @@@@ static bool parseUri( const char * uri,
d42 5
a46 1
+  strlcpy( outPath, strchr(uri,'/'), strlen(strchr(uri,'/')));
d50 8
a57 1
@@@@ -103,7 +103,6 @@@@ bool Http::get( const char* uri,
d64 14
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ Http.cpp	Tue Jan 27 13:47:09 2009
d22 8
@


1.1.1.1
log
@import games/numptyphysics, from maintainer David Coppa with a few
Makefile simplifications by me.

Harness gravity with your crayon and set about creating blocks, 
ramps, levers, pulleys and whatever else you fancy to get the little 
red thing to the little yellow thing.

Numpty Physics is a drawing puzzle game in the spirit (and style?) 
of Crayon Physics using the same excellent Box2D engine.
@
text
@@
