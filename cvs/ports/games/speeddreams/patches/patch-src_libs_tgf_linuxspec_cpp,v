head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	pascal_20130823:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.09.20.18.18.52;	author pascal;	state Exp;
branches;
next	1.2;
commitid	IyF6x1oe8oORsBvL;

1.2
date	2014.07.11.15.10.39;	author pascal;	state Exp;
branches;
next	1.1;
commitid	WMFuGm9fKhVyyWr0;

1.1
date	2013.08.23.11.16.26;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.08.23.11.16.26;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to Speeddreams 2.2.1.
@
text
@$OpenBSD: patch-src_libs_tgf_linuxspec_cpp,v 1.2 2014/07/11 15:10:39 pascal Exp $
--- src/libs/tgf/linuxspec.cpp.orig	Mon Apr 18 17:37:10 2016
+++ src/libs/tgf/linuxspec.cpp	Tue Sep 20 11:45:53 2016
@@@@ -632,9 +632,9 @@@@ unsigned linuxGetNumberOfCPUs()
 	{
 		
 		// MacOS X, FreeBSD, OpenBSD, NetBSD, etc ...
-#if (defined(__APPLE__) && !defined(USE_MACPORTS)) || defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__)
+#if (defined(__APPLE__) && !defined(USE_MACPORTS)) || defined(__FreeBSD__) || defined(__NetBSD__)
 		
-		nt mib[4];
+		int mib[4];
 		size_t len; 
 		
 		// Set the mib for hw.ncpu
@@@@ -642,7 +642,7 @@@@ unsigned linuxGetNumberOfCPUs()
 		// Get the number of CPUs from the system
 		// 1) Try HW_AVAILCPU first.
 		mib[0] = CTL_HW;
-		mib[1] = HW_AVAILCPU;  // alternatively, try HW_NCPU;
+		mib[1] = HW_AVAILCPU;
 		sysctl(mib, 2, &nCPUs, &len, NULL, 0);
 		
 		if (nCPUs < 1) 
@@@@ -653,7 +653,8 @@@@ unsigned linuxGetNumberOfCPUs()
 		}
 		
 		// Linux, Solaris, AIX
-#elif defined(linux) || defined(__linux__) || defined(USE_MACPORTS)
+#elif defined(linux) || defined(__linux__) || defined(USE_MACPORTS) || \
+	defined(__OpenBSD__)
 		
 		nCPUs = (unsigned)sysconf(_SC_NPROCESSORS_ONLN);
 		
@@@@ -692,7 +693,7 @@@@ unsigned linuxGetNumberOfCPUs()
 * Remarks
 *    
 */
-#if !defined(USE_MACPORTS)
+#if !defined(USE_MACPORTS) && !defined(__OpenBSD__)
 std::string cpuSet2String(const cpu_set_t* pCPUSet)
 {
 	std::ostringstream ossCPUSet;
@


1.2
log
@Update to 2.1.
@
text
@d1 4
a4 4
$OpenBSD: patch-src_libs_tgf_linuxspec_cpp,v 1.1.1.1 2013/08/23 11:16:26 pascal Exp $
--- src/libs/tgf/linuxspec.cpp.orig	Wed Jun 18 16:20:38 2014
+++ src/libs/tgf/linuxspec.cpp	Fri Jul 11 14:36:38 2014
@@@@ -631,9 +631,9 @@@@ unsigned linuxGetNumberOfCPUs()
d8 2
a9 2
-#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__NetBSD__)
d16 1
a16 1
@@@@ -641,7 +641,7 @@@@ unsigned linuxGetNumberOfCPUs()
d25 1
a25 1
@@@@ -652,7 +652,7 @@@@ unsigned linuxGetNumberOfCPUs()
d29 3
a31 2
-#elif defined(linux) || defined(__linux__)
+#elif defined(linux) || defined(__linux__) || defined(__OpenBSD__) 
d35 1
a35 1
@@@@ -691,6 +691,7 @@@@ unsigned linuxGetNumberOfCPUs()
d39 2
a40 1
+#if !(defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__))
a43 8
@@@@ -704,6 +705,7 @@@@ std::string cpuSet2String(const cpu_set_t* pCPUSet)
 	
 	return ossCPUSet.str();
 }
+#endif
 
 bool
 linuxSetThreadAffinity(int nCPUId)
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- src/libs/tgf/linuxspec.cpp.orig	Tue Jul 30 00:23:09 2013
+++ src/libs/tgf/linuxspec.cpp	Tue Jul 30 00:31:06 2013
@@@@ -630,9 +630,9 @@@@ unsigned linuxGetNumberOfCPUs()
d6 2
a7 2
 	
 // MacOS X, FreeBSD, OpenBSD, NetBSD, etc ...
d10 1
a10 1
 
d14 1
a14 1
 
d16 1
a16 1
@@@@ -640,7 +640,7 @@@@ unsigned linuxGetNumberOfCPUs()
d23 1
a23 1
 
d25 1
a25 1
@@@@ -651,7 +651,7 @@@@ unsigned linuxGetNumberOfCPUs()
d27 2
a28 2
 
 // Linux, Solaris, AIX
d30 2
a31 2
+#elif defined(linux) || defined(__linux__) || defined(__OpenBSD__)
 
d33 2
a34 2
 
@@@@ -690,6 +690,7 @@@@ unsigned linuxGetNumberOfCPUs()
d42 1
a42 1
@@@@ -703,6 +704,7 @@@@ std::string cpuSet2String(const cpu_set_t* pCPUSet)
@


1.1.1.1
log
@Import Speed Dreams.

Speed Dreams is a fork of the famous open racing car simulator
Torcs, aiming to implement exciting new features, cars, tracks and
AI opponents to make a more enjoyable game for the player, as well
as constantly improving visual and physics realism.

tweaks by sthen@@ and zhuk@@, ok sthen@@
@
text
@@
