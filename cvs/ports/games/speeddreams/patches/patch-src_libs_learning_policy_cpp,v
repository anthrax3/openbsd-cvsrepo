head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.8
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.10
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.6
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	pascal_20130823:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.09.20.18.18.52;	author pascal;	state Exp;
branches;
next	1.1;
commitid	IyF6x1oe8oORsBvL;

1.1
date	2013.08.23.11.16.26;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.08.23.11.16.26;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to Speeddreams 2.2.1.
@
text
@$OpenBSD: patch-src_libs_learning_policy_cpp,v 1.1.1.1 2013/08/23 11:16:26 pascal Exp $
--- src/libs/learning/policy.cpp.orig	Mon Apr 18 17:37:10 2016
+++ src/libs/learning/policy.cpp	Tue Sep 20 01:28:40 2016
@@@@ -437,7 +437,7 @@@@ int DiscretePolicy::SelectAction (int s, real r, int f
 					// if P[][] remains unchanged between updates.
 					// -- removed because it doesn't work! --
 					//P[i][j] += 0.01*delta * e[i][j] * (1.-P[i][j]);
-					if ((fabs (Q[i][j])>1000.0)||(isnan(Q[i][j]))) {
+					if ((fabs (Q[i][j])>1000.0)||(std::isnan(Q[i][j]))) {
 						printf ("u: %d %d %f %f\n", i,j,Q[i][j], ad * e[i][j]);
 					}
 					
@@@@ -523,7 +523,7 @@@@ void DiscretePolicy::loadFile (char* f)
 		if( readSize < (int unsigned)n_actions )
 			fprintf(stderr, "Error when reading file");
 		for (j=0; j<n_actions; j++) {
-			if ((fabs (Q[i][j])>100.0)||(isnan(Q[i][j]))) {
+			if ((fabs (Q[i][j])>100.0)||(std::isnan(Q[i][j]))) {
 				printf ("l: %d %d %f\n", i,j,Q[i][j]);
 				Q[i][j] = 0.0;
 			}
@@@@ -586,7 +586,7 @@@@ void DiscretePolicy::saveFile (char* f) {
 		if( writeSize < (int unsigned)n_actions)
 			fprintf( stderr, "Failed to write all data to file %s\n", f);
 		for (int j=0; j<n_actions; j++) {
-			if ((fabs (Q[i][j])>100.0)||(isnan(Q[i][j]))) {
+			if ((fabs (Q[i][j])>100.0)||(std::isnan(Q[i][j]))) {
 				printf ("s: %d %d %f\n", i,j,Q[i][j]);
 			}
 		}
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- src/libs/learning/policy.cpp.orig	Tue Jul 30 00:16:58 2013
+++ src/libs/learning/policy.cpp	Tue Jul 30 00:22:04 2013
@@@@ -436,7 +436,7 @@@@ int DiscretePolicy::SelectAction (int s, real r, int f
d13 1
a13 1
@@@@ -522,7 +522,7 @@@@ void DiscretePolicy::loadFile (char* f)
d22 1
a22 1
@@@@ -585,7 +585,7 @@@@ void DiscretePolicy::saveFile (char* f) {
@


1.1.1.1
log
@Import Speed Dreams.

Speed Dreams is a fork of the famous open racing car simulator
Torcs, aiming to implement exciting new features, cars, tracks and
AI opponents to make a more enjoyable game for the player, as well
as constantly improving visual and physics realism.

tweaks by sthen@@ and zhuk@@, ok sthen@@
@
text
@@
