head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.06.29.15.11.45;	author dcoppa;	state Exp;
branches;
next	;
commitid	sNH9Fi4RSw7U3hDH;


desc
@@


1.1
log
@
Fix cmake_modules/CMakePascalInformation.cmake, so that hedgewars
can be built using ninja (and remove USE_NINJA=No)
@
text
@$OpenBSD$
--- cmake_modules/CMakePascalInformation.cmake.orig	Thu Oct  2 17:53:26 2014
+++ cmake_modules/CMakePascalInformation.cmake	Wed Jun 29 16:58:20 2016
@@@@ -191,8 +191,13 @@@@ if(NOT CMAKE_Pascal_COMPILE_OBJECT)
     endif(UNIX)
 
     #-Cn is mandatory as it's what creates the ppas.* script
-    set(CMAKE_Pascal_COMPILE_OBJECT
-        "<CMAKE_Pascal_COMPILER> -Cn -FE${EXECUTABLE_OUTPUT_PATH} -FU${CMAKE_CURRENT_BINARY_DIR}/<OBJECT_DIR> ${CMAKE_Pascal_UNIX_FLAGS} <FLAGS> <CMAKE_Pascal_LINK_FLAGS> <SOURCE>")
+    if(CMAKE_GENERATOR MATCHES "Ninja")
+        set(CMAKE_Pascal_COMPILE_OBJECT
+            "<CMAKE_Pascal_COMPILER> -Cn -FE${EXECUTABLE_OUTPUT_PATH} -Fi${CMAKE_CURRENT_BINARY_DIR} -FU${CMAKE_BINARY_DIR}/<OBJECT_DIR> ${CMAKE_Pascal_UNIX_FLAGS} <FLAGS> <CMAKE_Pascal_LINK_FLAGS> <SOURCE>")
+    else()
+        set(CMAKE_Pascal_COMPILE_OBJECT
+            "<CMAKE_Pascal_COMPILER> -Cn -FE${EXECUTABLE_OUTPUT_PATH} -FU${CMAKE_CURRENT_BINARY_DIR}/<OBJECT_DIR> ${CMAKE_Pascal_UNIX_FLAGS} <FLAGS> <CMAKE_Pascal_LINK_FLAGS> <SOURCE>")
+    endif()
 endif(NOT CMAKE_Pascal_COMPILE_OBJECT)
 
 # link Pascal objects in a single executable
@
