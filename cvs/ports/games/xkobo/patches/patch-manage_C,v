head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.54
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.50
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.52
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.48
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.46
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.44
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.42
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.40
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.38
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.36
	OPENBSD_5_0:1.1.0.34
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.32
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.30
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.28
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.26
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.24
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.22
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.20
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.18
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.16
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.14
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.12
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.10
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.8
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2003.08.22.17.57.20;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@sprintf bad
@
text
@$OpenBSD$
--- manage.C.orig	2003-08-22 19:46:19.000000000 +0200
+++ manage.C	2003-08-22 19:47:34.000000000 +0200
@@@@ -127,18 +127,18 @@@@ void _manage::put_info()
     int posx = MARGIN * 2 + (WSIZE << scale_log2) + 2;
     
     wbase.string(posx, 25, "SCORE");
-    sprintf(s, "%09d", score);
+    snprintf(s, sizeof s, "%09d", score);
     wbase.string(posx, 40, s);
     
     wbase.string(posx, 55, "STAGE");
-    sprintf(s, "%09d", scene_num + 1);
+    snprintf(s, sizeof s, "%09d", scene_num + 1);
     wbase.string(posx, 70, s);
     
     wbase.string(posx, 85, "SHIPS");
     if (!cheat_mode)
-        sprintf(s, "%09d", ships);
+        snprintf(s, sizeof s, "%09d", ships);
     else
-        sprintf(s, "999999999");
+        snprintf(s, sizeof s, "999999999");
     wbase.string(posx, 100, s);
 }
 
@@@@ -147,7 +147,7 @@@@ void _manage::put_score()
     static char s[1024];
     int posx = MARGIN * 2 + (WSIZE << scale_log2) + 2;
     
-    sprintf(s, "%09d", score);
+    snprintf(s, sizeof s, "%09d", score);
     wbase.string(posx, 40, s);
     score_changed = 0;
 }
@@@@ -165,7 +165,7 @@@@ void _manage::flush_score()
     }
     else {
         wbase.string(posx, 25, "SCORE");
-        sprintf(s, "%09d", score);
+        snprintf(s, sizeof s, "%09d", score);
         wbase.string(posx, 40, s);
     }
     if (flush_score_count == 0) flush_score_count = -1;
@@@@ -184,7 +184,7 @@@@ void _manage::flush_ships()
     }
     else {
         wbase.string(posx, 85, "SHIPS");
-        sprintf(s, "%09d", ships);
+        snprintf(s, sizeof s, "%09d", ships);
         wbase.string(posx, 100, s);
     }
 }
@@@@ -343,7 +343,7 @@@@ void _manage::add_score(int sc)
     score_changed = 1;
 }
 
-void _manage::get_highscore(char *s)
+void _manage::get_highscore(char *s, size_t n)
 {
-    sprintf(s, "high score : %09d", highscore);
+    snprintf(s, n, "high score : %09d", highscore);
 }    
@
