head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.26
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.24
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.22
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.18
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.20
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.16
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.14
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.12
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.10
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.07.08.20.38.01;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Fix build with png-1.5.
All fixes by yours truly.
@
text
@$OpenBSD$

Fix build with png-1.5.

--- src/common/image/ImagePng.cpp.orig	Wed Jul  6 17:27:07 2011
+++ src/common/image/ImagePng.cpp	Wed Jul  6 17:28:23 2011
@@@@ -150,7 +150,7 @@@@ struct user_read_struct
 
 static void user_png_error(png_structp png_ptr, png_const_charp msg) 
 {
-	longjmp(png_ptr->jmpbuf,1);
+	png_longjmp(png_ptr,1);
 }
 
 static void user_png_warning(png_structp png_ptr, png_const_charp msg) 
@@@@ -189,7 +189,7 @@@@ bool ImagePng::loadFromBuffer(NetBuffer &buffer, bool 
 	info_ptr = png_create_info_struct(png_ptr);
 	if (info_ptr == NULL)
 	{
-	  png_destroy_read_struct(&png_ptr, png_infopp_NULL, png_infopp_NULL);
+	  png_destroy_read_struct(&png_ptr, NULL, NULL);
 	  return false;
 	}
 
@@@@ -200,7 +200,7 @@@@ bool ImagePng::loadFromBuffer(NetBuffer &buffer, bool 
 	if (setjmp(png_jmpbuf(png_ptr)))
 	{
 	  /* Free all of the memory associated with the png_ptr and info_ptr */
-	  png_destroy_read_struct(&png_ptr, &info_ptr, png_infopp_NULL);
+	  png_destroy_read_struct(&png_ptr, &info_ptr, NULL);
 	  /* If we get here, we had a problem reading the file */
 	  return false;
 	}
@@@@ -258,7 +258,7 @@@@ bool ImagePng::loadFromBuffer(NetBuffer &buffer, bool 
 	}
 	else
 	{
-		png_destroy_read_struct(&png_ptr, &info_ptr, png_infopp_NULL);
+		png_destroy_read_struct(&png_ptr, &info_ptr, NULL);
 
 		Logger::log(S3D::formatStringBuffer(
 			"Invalid PNG format.\n"
@@@@ -272,7 +272,7 @@@@ bool ImagePng::loadFromBuffer(NetBuffer &buffer, bool 
 	// END NEW CODE
 
 	/* clean up after the read, and free any memory allocated - REQUIRED */
-	png_destroy_read_struct(&png_ptr, &info_ptr, png_infopp_NULL);
+	png_destroy_read_struct(&png_ptr, &info_ptr, NULL);
 
 	/* that's it */
 	return true;
@
