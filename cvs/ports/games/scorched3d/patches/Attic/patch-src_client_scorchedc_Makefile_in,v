head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	phessler_20101026:1.1.1.1
	phessler:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.06.04.15.41.20;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2010.10.26.10.34.00;	author phessler;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.10.26.10.34.00;	author phessler;	state Exp;
branches;
next	;


desc
@@


1.2
log
@the png headers are now directly under include/
@
text
@$OpenBSD: patch-src_client_scorchedc_Makefile_in,v 1.1 2010/10/26 10:34:00 phessler Exp $
--- src/client/scorchedc/Makefile.in.orig	Mon May  3 03:31:01 2010
+++ src/client/scorchedc/Makefile.in	Sat Oct 23 17:22:52 2010
@@@@ -6065,14 +6065,14 @@@@ ImageLuminance.obj: ../../common/image/ImageLuminance.
 @@am__fastdepCXX_FALSE@@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ImageLuminance.obj `if test -f '../../common/image/ImageLuminance.cpp'; then $(CYGPATH_W) '../../common/image/ImageLuminance.cpp'; else $(CYGPATH_W) '$(srcdir)/../../common/image/ImageLuminance.cpp'; fi`
 
 ImagePng.o: ../../common/image/ImagePng.cpp
-@@am__fastdepCXX_TRUE@@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ImagePng.o -MD -MP -MF $(DEPDIR)/ImagePng.Tpo -c -o ImagePng.o `test -f '../../common/image/ImagePng.cpp' || echo '$(srcdir)/'`../../common/image/ImagePng.cpp
+@@am__fastdepCXX_TRUE@@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) -I$(PREFIX)/include/libpng $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ImagePng.o -MD -MP -MF $(DEPDIR)/ImagePng.Tpo -c -o ImagePng.o `test -f '../../common/image/ImagePng.cpp' || echo '$(srcdir)/'`../../common/image/ImagePng.cpp
 @@am__fastdepCXX_TRUE@@	$(am__mv) $(DEPDIR)/ImagePng.Tpo $(DEPDIR)/ImagePng.Po
 @@AMDEP_TRUE@@@@am__fastdepCXX_FALSE@@	source='../../common/image/ImagePng.cpp' object='ImagePng.o' libtool=no @@AMDEPBACKSLASH@@
 @@AMDEP_TRUE@@@@am__fastdepCXX_FALSE@@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
 @@am__fastdepCXX_FALSE@@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ImagePng.o `test -f '../../common/image/ImagePng.cpp' || echo '$(srcdir)/'`../../common/image/ImagePng.cpp
 
 ImagePng.obj: ../../common/image/ImagePng.cpp
-@@am__fastdepCXX_TRUE@@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ImagePng.obj -MD -MP -MF $(DEPDIR)/ImagePng.Tpo -c -o ImagePng.obj `if test -f '../../common/image/ImagePng.cpp'; then $(CYGPATH_W) '../../common/image/ImagePng.cpp'; else $(CYGPATH_W) '$(srcdir)/../../common/image/ImagePng.cpp'; fi`
+@@am__fastdepCXX_TRUE@@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) -I$(PREFIX)/include/libpng $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ImagePng.obj -MD -MP -MF $(DEPDIR)/ImagePng.Tpo -c -o ImagePng.obj `if test -f '../../common/image/ImagePng.cpp'; then $(CYGPATH_W) '../../common/image/ImagePng.cpp'; else $(CYGPATH_W) '$(srcdir)/../../common/image/ImagePng.cpp'; fi`
 @@am__fastdepCXX_TRUE@@	$(am__mv) $(DEPDIR)/ImagePng.Tpo $(DEPDIR)/ImagePng.Po
 @@AMDEP_TRUE@@@@am__fastdepCXX_FALSE@@	source='../../common/image/ImagePng.cpp' object='ImagePng.obj' libtool=no @@AMDEPBACKSLASH@@
 @@AMDEP_TRUE@@@@am__fastdepCXX_FALSE@@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Scorched 3D is a modernization of the classic DOS game Scorched Earth
"The Mother Of All Games" on which it is based. Scorched 3D incorporates
a lively three dimensional landscape that includes animated jets, naval
vessels, water, and even birds, in addition to detailed tanks and
projectiles. Other enhancements include LAN and internet play and music.
Scorched 3D is totally free to play and is available for both Microsoft
Windows and Unix (Linux, FreeBSD, Mac OS X, Solaris etc.) operating
systems.

OK edd@@, armani@@
@
text
@@
