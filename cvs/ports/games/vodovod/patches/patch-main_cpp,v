head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.34
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.36
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.16
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.14
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	simon_20070705:1.1.1.1
	simon:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2007.07.05.16.13.27;	author simon;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.07.05.16.13.27;	author simon;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- main.cpp.orig	Sun Jun 10 16:15:27 2007
+++ main.cpp	Thu Jul  5 15:17:36 2007
@@@@ -101,38 +101,38 @@@@ int main(int /* argc */, char ** /* argv */)
         InitVideo(Fullscreen);
         audio = InitAudio();
 
-        SDL_Surface *vodovod = Data->getGfx("vodovod", "data/vodovod.png");
-        Data->getGfx("dirt", "data/slate.png");
-        Data->getGfx("queue", "data/queue.png");
-        Data->getGfx("blocks", "data/block.png");
+        SDL_Surface *vodovod = Data->getGfx("vodovod", DATADIR "/data/vodovod.png");
+        Data->getGfx("dirt", DATADIR "/data/slate.png");
+        Data->getGfx("queue", DATADIR "/data/queue.png");
+        Data->getGfx("blocks", DATADIR "/data/block.png");
 
         // house
-        SDL_Surface *house = Data->getGfx("house", "data/house.png");
+        SDL_Surface *house = Data->getGfx("house", DATADIR "/data/house.png");
         Uint32 green = SDL_MapRGB(house->format, 0, 255, 0);
         SDL_SetColorKey(house, SDL_SRCCOLORKEY, green);
 
         // tree
-        SDL_Surface *tree = Data->getGfx("tree1", "data/tree1.png");
+        SDL_Surface *tree = Data->getGfx("tree1", DATADIR "/data/tree1.png");
         Uint32 red = SDL_MapRGB(tree->format, 255, 0, 0);
         SDL_SetColorKey(tree, SDL_SRCCOLORKEY, red);
 
         // human walking
-        SDL_Surface *human = Data->getGfx("human", "data/walk.png");
+        SDL_Surface *human = Data->getGfx("human", DATADIR "/data/walk.png");
         Uint32 back = SDL_MapRGB(human->format, 223, 232, 255);
         SDL_SetColorKey(human, SDL_SRCCOLORKEY, back);
 
         // preload music
 		if (audio)
 		{
-			Data->getMusic("walk", "data/walk.xm");
-			Data->getMusic("flow", "data/flow.xm");
-			Data->getMusic("tune", "data/vodovod.xm");
+			Data->getMusic("walk", DATADIR "/data/walk.xm");
+			Data->getMusic("flow", DATADIR "/data/flow.xm");
+			Data->getMusic("tune", DATADIR "/data/vodovod.xm");
 
 			// preload sounds
-			Data->getSfx("drop", "data/drop.wav");
-			Data->getSfx("levelend", "data/mapend.wav");
-			Data->getSfx("bubbles", "data/bubbles.wav");
-			Data->getSfx("metal", "data/metal.wav");
+			Data->getSfx("drop", DATADIR "/data/drop.wav");
+			Data->getSfx("levelend", DATADIR "/data/mapend.wav");
+			Data->getSfx("bubbles", DATADIR "/data/bubbles.wav");
+			Data->getSfx("metal", DATADIR "/data/metal.wav");
 		}
 
         // render some background picture for menu
@@@@ -143,7 +143,7 @@@@ int main(int /* argc */, char ** /* argv */)
         SDL_BlitSurface(vodovod, 0, Screen, &r);
         SDL_Flip(Screen);
 
-        NjamFont font("data/font-yellow.bmp", 11, 22);
+        NjamFont font(DATADIR "/data/font-yellow.bmp", 11, 22);
         MainMenu m(&font, 95, 280);
         m.start();
     }
@


1.1.1.1
log
@import vodovod-1.10

The goal of vodovod is to reach the highest possible score. You get a
limited number of pipes on each level and need to combine them to lead
the water from the house at the top of the screen to the storage tank at
the bottom.

help & ok jasper@@
@
text
@@
