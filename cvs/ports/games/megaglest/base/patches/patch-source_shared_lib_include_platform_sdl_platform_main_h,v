head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.04.06.12.49.52;	author stsp;	state Exp;
branches;
next	1.1;
commitid	1pin1hbzBcDwHRhj;

1.1
date	2014.01.31.09.46.51;	author jca;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to megaglest 3.11.1; ok ajacoutot
@
text
@$OpenBSD: patch-source_shared_lib_include_platform_sdl_platform_main_h,v 1.1 2014/01/31 09:46:51 jca Exp $
Fix for i386 PIE (ebx is reserved).
--- source/shared_lib/include/platform/sdl/platform_main.h.orig	Mon Mar  9 00:09:09 2015
+++ source/shared_lib/include/platform/sdl/platform_main.h	Mon Apr  6 09:51:53 2015
@@@@ -597,9 +597,16 @@@@ int mainSetup(int argc, char **argv) {
 
 #define CHECK_BIT(var,pos) ((var) & (1<<(pos)))
 
+#if defined(__i386__) && defined(__PIE__)
 #define cpuid(func,ax,bx,cx,dx)\
+	__asm__ __volatile__ (\
+	"xchg %%ebx, %%esi; cpuid; xchg %%ebx, %%esi":\
+	"=a" (ax), "=S" (bx), "=c" (cx), "=d" (dx) : "a" (func));
+#else
+#define cpuid(func,ax,bx,cx,dx)\
 	__asm__ __volatile__ ("cpuid":\
 	"=a" (ax), "=b" (bx), "=c" (cx), "=d" (dx) : "a" (func));
+#endif
 
 	int ax=0,bx=0,cx=0,dx=0;
 	cpuid(0x0000001,ax,bx,cx,dx)
@


1.1
log
@Unbreak on i386, by using %esi as temporary storage for %ebx across the
cpuid call.  ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-source_shared_lib_include_platform_sdl_platform_main_h,v 1.1 2014/01/31 09:43:04 jca Exp $
d3 3
a5 3
--- source/shared_lib/include/platform/sdl/platform_main.h.orig	Wed Nov 14 20:20:08 2012
+++ source/shared_lib/include/platform/sdl/platform_main.h	Wed Jan 29 07:29:15 2014
@@@@ -582,9 +582,16 @@@@ int mainSetup(int argc, char **argv) {
@

