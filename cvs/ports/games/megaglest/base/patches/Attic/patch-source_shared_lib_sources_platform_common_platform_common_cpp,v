head	1.3;
access;
symbols
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.10
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	stsp_20130128:1.1.1.1
	stsp:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.09.14.04.43.57;	author kirby;	state dead;
branches;
next	1.2;
commitid	Maor91j8EGYqqVdo;

1.2
date	2015.04.06.12.49.52;	author stsp;	state Exp;
branches;
next	1.1;
commitid	1pin1hbzBcDwHRhj;

1.1
date	2013.01.28.13.58.49;	author stsp;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.01.28.13.58.49;	author stsp;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to megaglest-3.13.0
 - Switch to GH_*
 - Drop gettext from MODULES
 - Stop hardcoding Lua-5.1. Also works with 5.2 and 5.3
Tested on amd64 and i386.
ok bentley@@ on a previous diff.
@
text
@$OpenBSD: patch-source_shared_lib_sources_platform_common_platform_common_cpp,v 1.2 2015/04/06 12:49:52 stsp Exp $
--- source/shared_lib/sources/platform/common/platform_common.cpp.orig	Mon Mar  9 00:09:09 2015
+++ source/shared_lib/sources/platform/common/platform_common.cpp	Mon Apr  6 10:27:35 2015
@@@@ -1057,7 +1057,7 @@@@ uint32 getFolderTreeContentsCheckSumRecursively(const 
 	glob_t globbuf;
 
 	int res = glob(mypath.c_str(), 0, 0, &globbuf);
-#if !defined(__APPLE__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__) && !defined(__OpenBSD__)
 	if(res < 0) {
 		std::stringstream msg;
 		msg << "#2 Couldn't scan directory '" << mypath << "': " << strerror(errno);
@@@@ -1091,13 +1091,13 @@@@ uint32 getFolderTreeContentsCheckSumRecursively(const 
 	globfree(&globbuf);
 
     // Look recursively for sub-folders
-#if defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__)
 	res = glob(mypath.c_str(), 0, 0, &globbuf);
 #else
 	res = glob(mypath.c_str(), GLOB_ONLYDIR, 0, &globbuf);
 #endif
 
-#if !defined(__APPLE__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__) && !defined(__OpenBSD__)
 	if(res < 0) {
 		std::stringstream msg;
 		msg << "#3 Couldn't scan directory '" << mypath << "': " << strerror(errno);
@@@@ -1106,7 +1106,7 @@@@ uint32 getFolderTreeContentsCheckSumRecursively(const 
 #endif
 
 	for(int i = 0; i < (int)globbuf.gl_pathc; ++i) {
-#if defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__)
 		struct stat statStruct;
 		// only process if dir..
 		int actStat = lstat( globbuf.gl_pathv[i], &statStruct);
@@@@ -1238,7 +1238,7 @@@@ vector<string> getFolderTreeContentsListRecursively(co
 	}
 
 	int res = glob(mypath.c_str(), globFlags, 0, &globbuf);
-#if !defined(__APPLE__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__) && !defined(__OpenBSD__)
 	if(res < 0) {
 		std::stringstream msg;
 		msg << "#4 Couldn't scan directory '" << mypath << "': " << strerror(errno);
@@@@ -1271,14 +1271,14 @@@@ vector<string> getFolderTreeContentsListRecursively(co
 	globfree(&globbuf);
 
     // Look recursively for sub-folders
-#if defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__)
 	res = glob(mypath.c_str(), 0, 0, &globbuf);
 #else //APPLE doesn't have the GLOB_ONLYDIR definition..
 	globFlags |= GLOB_ONLYDIR;
 	res = glob(mypath.c_str(), globFlags, 0, &globbuf);
 #endif
 
-#if !defined(__APPLE__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__) && !defined(__OpenBSD__)
 	if(res < 0) {
 		std::stringstream msg;
 		msg << "#5 Couldn't scan directory '" << mypath << "': " << strerror(errno);
@@@@ -1287,7 +1287,7 @@@@ vector<string> getFolderTreeContentsListRecursively(co
 #endif
 
 	for(int i = 0; i < (int)globbuf.gl_pathc; ++i) {
-#if defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__)
 		struct stat statStruct;
 		// only get if dir..
 		int actStat = lstat( globbuf.gl_pathv[ i], &statStruct);
@@@@ -1379,7 +1379,7 @@@@ vector<std::pair<string,uint32> > getFolderTreeContent
 
 	int res = glob(mypath.c_str(), 0, 0, &globbuf);
 
-#if !defined(__APPLE__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__) && !defined(__OpenBSD__)
 	if(res < 0) {
 		std::stringstream msg;
 		msg << "#6 Couldn't scan directory '" << mypath << "': " << strerror(errno);
@@@@ -1411,13 +1411,13 @@@@ vector<std::pair<string,uint32> > getFolderTreeContent
 	globfree(&globbuf);
 
     // Look recursively for sub-folders
-#if defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__)
 	res = glob(mypath.c_str(), 0, 0, &globbuf);
 #else //APPLE doesn't have the GLOB_ONLYDIR definition..
 	res = glob(mypath.c_str(), GLOB_ONLYDIR, 0, &globbuf);
 #endif
 
-#if !defined(__APPLE__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__) && !defined(__OpenBSD__)
 	if(res < 0) {
 		std::stringstream msg;
 		msg << "#7 Couldn't scan directory '" << mypath << "': " << strerror(errno);
@@@@ -1426,7 +1426,7 @@@@ vector<std::pair<string,uint32> > getFolderTreeContent
 #endif
 
 	for(int i = 0; i < (int)globbuf.gl_pathc; ++i) {
-#if defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__)
 		struct stat statStruct;
 		// only get if dir..
 		int actStat = lstat( globbuf.gl_pathv[ i], &statStruct);
@


1.2
log
@update to megaglest 3.11.1; ok ajacoutot
@
text
@d1 1
a1 1
$OpenBSD: patch-source_shared_lib_sources_platform_common_platform_common_cpp,v 1.1.1.1 2013/01/28 13:58:49 stsp Exp $
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- source/shared_lib/sources/platform/common/platform_common.cpp.orig	Wed Jan  9 16:26:09 2013
+++ source/shared_lib/sources/platform/common/platform_common.cpp	Wed Jan  9 16:29:40 2013
@@@@ -946,7 +946,7 @@@@ uint32 getFolderTreeContentsCheckSumRecursively(const 
d13 1
a13 1
@@@@ -980,13 +980,13 @@@@ uint32 getFolderTreeContentsCheckSumRecursively(const 
d29 1
a29 1
@@@@ -995,7 +995,7 @@@@ uint32 getFolderTreeContentsCheckSumRecursively(const 
d32 1
a32 1
 	for(int i = 0; i < globbuf.gl_pathc; ++i) {
d38 1
a38 1
@@@@ -1127,7 +1127,7 @@@@ vector<string> getFolderTreeContentsListRecursively(co
d47 1
a47 1
@@@@ -1160,14 +1160,14 @@@@ vector<string> getFolderTreeContentsListRecursively(co
d64 1
a64 1
@@@@ -1176,7 +1176,7 @@@@ vector<string> getFolderTreeContentsListRecursively(co
d67 1
a67 1
 	for(int i = 0; i < globbuf.gl_pathc; ++i) {
d73 1
a73 1
@@@@ -1268,7 +1268,7 @@@@ vector<std::pair<string,uint32> > getFolderTreeContent
d82 1
a82 1
@@@@ -1300,13 +1300,13 @@@@ vector<std::pair<string,uint32> > getFolderTreeContent
d98 1
a98 1
@@@@ -1315,7 +1315,7 @@@@ vector<std::pair<string,uint32> > getFolderTreeContent
d101 1
a101 1
 	for(int i = 0; i < globbuf.gl_pathc; ++i) {
@


1.1.1.1
log
@Import megaglest port.

MegaGlest is an entertaining free and open source cross-platform 3D
real-time strategy game, where you control the armies of one of seven
different factions: Tech, Magic, Egypt, Indians, Norsemen, Persian or
Romans. The game is set in one of 17 naturally looking settings,
which are crafted with great appreciation for detail.

With tweaks from kirby@@, bentley@@, and sthen@@.
ok sthen@@
@
text
@@
