head	1.3;
access;
symbols
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.0.2
	OPENBSD_4_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2007.07.07.01.37.53;	author jsg;	state dead;
branches;
next	1.2;

1.2
date	2006.11.02.07.48.59;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.08.04.14.30;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to 0.10.0
@
text
@$OpenBSD: patch-engines_simon_simon_cpp,v 1.2 2006/11/02 07:48:59 jsg Exp $
--- engines/simon/simon.cpp.orig	Mon Oct 23 06:58:08 2006
+++ engines/simon/simon.cpp	Wed Nov  1 15:28:02 2006
@@@@ -97,10 +97,6 @@@@ SimonEngine::SimonEngine(OSystem *syst)
 	_itemArraySize = 0;
 	_itemArrayInited = 0;
 
-	_itemHeapPtr = 0;
-	_itemHeapCurPos = 0;
-	_itemHeapSize = 0;
-
 	_iconFilePtr = 0;
 
 	_tblList = 0;
@@@@ -587,7 +583,12 @@@@ SimonEngine::~SimonEngine() {
 
 	midi.close();
 
-	free(_itemHeapPtr - _itemHeapCurPos);
+	for (uint i = 0; i < _itemHeap.size(); i++) {
+		delete [] _itemHeap[i];
+	}
+
+	_itemHeap.clear();
+
 	free(_tablesHeapPtr - _tablesHeapCurPos);
 
 	free(_gameOffsetsPtr);
@@@@ -653,16 +654,10 @@@@ void SimonEngine::paletteFadeOut(byte *p
 }
 
 byte *SimonEngine::allocateItem(uint size) {
-	byte *org = _itemHeapPtr;
-	size = (size + 3) & ~3;
-
-	_itemHeapPtr += size;
-	_itemHeapCurPos += size;
-
-	if (_itemHeapCurPos > _itemHeapSize)
-		error("allocateItem: Itemheap overflow");
-
-	return org;
+	byte *item = new byte[size];
+	memset(item, 0, size);
+	_itemHeap.push_back(item);
+	return item;
 }
 
 void SimonEngine::setUserFlag(Item *item, int a, int b) {
@@@@ -727,9 +722,7 @@@@ Child *SimonEngine::allocateChildBlock(I
 }
 
 void SimonEngine::allocItemHeap() {
-	_itemHeapSize = 10000;
-	_itemHeapCurPos = 0;
-	_itemHeapPtr = (byte *)calloc(10000, 1);
+	_itemHeap.clear();
 }
 
 void SimonEngine::allocTablesHeap() {
@@@@ -1961,8 +1954,13 @@@@ void SimonEngine::shutdown() {
 
 	free(_stringTabPtr);
 	free(_itemArrayPtr);
-	free(_itemHeapPtr - _itemHeapCurPos);
-	free(_tablesHeapPtr - _tablesHeapCurPos);
+
+	for (uint i = 0; i < _itemHeap.size(); i++) {
+		delete [] _itemHeap[i];
+	}
+
+	_itemHeap.clear();
+
 	free(_tblList);
 	free(_zoneBuffers);
 	free(_iconFilePtr);
@


1.2
log
@Update to 0.9.1
@
text
@d1 1
a1 1
$OpenBSD: patch-engines_simon_simon_cpp,v 1.1 2006/07/08 04:14:30 jsg Exp $
@


1.1
log
@Update to 0.9.0
@
text
@d1 3
a3 3
$OpenBSD$
--- engines/simon/simon.cpp.orig	Thu Jun 22 07:14:03 2006
+++ engines/simon/simon.cpp	Fri Jul  7 18:55:58 2006
d15 1
a15 1
@@@@ -588,7 +584,12 @@@@ SimonEngine::~SimonEngine() {
d29 1
a29 1
@@@@ -654,16 +655,11 @@@@ void SimonEngine::paletteFadeOut(byte *p
d35 1
a35 2
+	byte *item = new byte[size];
 
d40 1
a40 1
-		error("Itemheap overflow");
d43 1
d50 1
a50 1
@@@@ -728,9 +724,7 @@@@ Child *SimonEngine::allocateChildBlock(I
d61 1
a61 1
@@@@ -1961,8 +1955,13 @@@@ void SimonEngine::shutdown() {
@

