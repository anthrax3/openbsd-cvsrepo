head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.16
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.1.1.0.48
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.46
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.44
	OPENBSD_5_0:1.1.1.1.0.42
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.40
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.38
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.36
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.34
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.32
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.30
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.28
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.26
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.24
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.22
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.20
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.18
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.16
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.14
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.12
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.10
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.8
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.6
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.4
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	lebel_2001-Jul-04:1.1.1.1
	lebel:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.04.05.20.36.27;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.04.16.57.50;	author lebel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.07.04.16.57.50;	author lebel;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fix time_t abuses in twenty-year-old code
@
text
@$OpenBSD: patch-source_save_c,v 1.1.1.1 2001/07/04 16:57:50 lebel Exp $
--- source/save.c.orig	Fri Jul 22 03:47:40 1994
+++ source/save.c	Fri Apr  5 22:25:03 2013
@@@@ -102,12 +102,8 @@@@ static void rd_monster();
 #endif
 
 #if !defined(ATARIST_MWC)
-#ifdef MAC
 #include <time.h>
 #else
-long time();
-#endif
-#else
 char *malloc();
 #endif
 
@@@@ -331,11 +327,7 @@@@ static int sv_write()
     }
 
   /* save the current time in the savefile */
-#ifdef MAC
   l = time((time_t *)0);
-#else
-  l = time((long *)0);
-#endif
   if (l < start_time)
     {
       /* someone is messing with the clock!, assume that we have been
@@@@ -1029,11 +1021,7 @@@@ int *generate;
 	      || (version_min == 2 && patch_level >= 2))
 	    rd_long ((int32u *)&birth_date);
 	  else
-#ifdef MAC
 	    birth_date = time((time_t *)0);
-#else
-	    birth_date = time((long *)0);
-#endif
 	}
       if ((c = getc(fileptr)) == EOF || (l & 0x80000000L))
 	{
@@@@ -1253,11 +1241,7 @@@@ scoreboard; it will not be scored again.");
 	      /* rotate store inventory, depending on how old the save file */
 	      /* is foreach day old (rounded up), call store_maint */
 	      /* calculate age in seconds */
-#ifdef MAC
 	      start_time = time((time_t *)0);
-#else
-	      start_time = time((long *)0);
-#endif
 	      /* check for reasonable values of time here ... */
 	      if (start_time < time_saved)
 		age = 0;
@


1.1
log
@Initial revision
@
text
@d1 8
a8 5
$OpenBSD$
--- source/save.c.orig	Wed Jul  4 11:31:30 2001
+++ source/save.c	Wed Jul  4 11:32:25 2001
@@@@ -105,7 +105,6 @@@@ static void rd_monster();
 #ifdef MAC
d12 3
d16 6
a21 4
 #else
 char *malloc();
@@@@ -334,7 +333,7 @@@@ static int sv_write()
 #ifdef MAC
d23 1
a23 1
 #else
d25 1
a25 2
+  l = time((time_t *)0);
 #endif
d28 6
a33 2
@@@@ -1032,7 +1031,7 @@@@ int *generate;
 #ifdef MAC
d35 1
a35 1
 #else
d37 1
a37 2
+	    birth_date = time((time_t *)0);
 #endif
d40 6
a45 2
@@@@ -1256,7 +1255,7 @@@@ scoreboard; it will not be scored again.
 #ifdef MAC
d47 1
a47 1
 #else
d49 1
a49 2
+	      start_time = time((time_t *)0);
 #endif
d52 1
@


1.1.1.1
log
@initial import of moria-5.5.2:
--
The game is set in Moria and the goal is to kill off the balrog.
Apart from this, the game is almost completely based on Dungeons &
Dragons. The game is a true classic and every true gamer should
have played it.

It was originally written by Robert Alan Koeneke with some help
from Jimmy Wayne Todd. Further development of the game has almost
ceased, but The Pits of Angband, which is based on its code, is
still very much in development.

WWW: http://www-math.bgsu.edu/~grabine/moria.html

@
text
@@
