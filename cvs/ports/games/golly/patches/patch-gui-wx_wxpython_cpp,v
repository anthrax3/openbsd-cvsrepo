head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.14
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.09.09.15.43.25;	author landry;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to golly 2.5, from MAINTAINER Donovan Watteau.
@
text
@$OpenBSD$
--- gui-wx/wxpython.cpp.orig	Wed Jun 12 21:23:56 2013
+++ gui-wx/wxpython.cpp	Sun Aug 25 11:15:51 2013
@@@@ -258,6 +258,8 @@@@ static void GetPythonExceptions()
     Py_XDECREF(exmod);
 }
 
+// handle for libutil
+static wxDllType libutildll = NULL;
 // handle for Python lib
 static wxDllType pythondll = NULL;
 
@@@@ -267,15 +269,37 @@@@ static void FreePythonLib()
         wxDynamicLibrary::Unload(pythondll);
         pythondll = NULL;
     }
+    
+    if ( libutildll ) {
+        wxDynamicLibrary::Unload(libutildll);
+        libutildll = NULL;
+    }
 }
 
 static bool LoadPythonLib()
 {
+    // load libutil
+    wxDynamicLibrary dynlibUtil;
     // load the Python library
     wxDynamicLibrary dynlib;
     
     // don't log errors in here
     wxLogNull noLog;
+    
+    // Load libutil first, needed for openpty() and forkpty() symbols
+    if ( !dynlibUtil.Load(wxT("libutil.so"), wxDL_NOW | wxDL_VERBATIM | wxDL_GLOBAL) ) {
+        return false;
+    }
+    
+    if ( dynlibUtil.IsLoaded() ) {
+        libutildll = dynlibUtil.Detach();
+    }
+    
+    if ( libutildll == NULL ) {
+        // should never happen
+        Warning(_("Oh dear, libutil is not loaded!"));
+        return false;
+    }
     
     // wxDL_GLOBAL corresponds to RTLD_GLOBAL on Linux (ignored on Windows) and
     // is needed to avoid an ImportError when importing some modules (eg. time)
@
