head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.48
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.46
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.44
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.40
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.42
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.38
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.36
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.34
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.32
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.30
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.28
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.26
	OPENBSD_5_0:1.1.1.1.0.24
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.22
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.20
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.18
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.16
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.14
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.12
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.10
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.8
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.6
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.4
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.2
	OPENBSD_3_9_BASE:1.1.1.1
	espie:1.1.1.1
	oldies:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.09.09.08.26.58;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.09.09.08.26.58;	author espie;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- spatial/spatial.h.orig	Mon Aug 23 20:48:54 1993
+++ spatial/spatial.h	Thu Sep  8 23:42:22 2005
@@@@ -87,14 +87,45 @@@@ extern long score, dropticks;
 extern double boardscale;
 extern int halfboard, halfboard2;
 
-extern void clearfield();
+extern void clearfield(void);
 /* zero out field[][][] */
-extern void setup_fieldpm();
+extern void setup_fieldpm(void);
 /* clear, draw field box and side text. Also set
  shape{x,y}{1,2} to window size */
-extern void startpiece();
+extern void startpiece(void);
 /* pick a piece and put it in the pipeline */
-extern long current_usec();
-extern int elapsed();
+extern long current_usec(void);
+extern int elapsed(long, long);
 
-extern long random();
+extern int checkmod_scores();
+extern int collision(int);
+extern void add_cubie(int, int, int);
+extern void add_cubies(int);
+extern void add_one_cubie(fieldplist, int, int, int);
+extern void back_to_disp(int);
+extern void draw_curpiece(Drawable);
+extern void draw_score(Drawable);
+extern void dumppiece(short);
+extern void gameloop(void);
+extern void get_names(void); 
+extern void initgame(void);
+extern void initintro(void); 
+extern void intro_redraw(void);
+extern void introloop(void); 
+extern void load_hscores(int);
+extern void loadpieces(char *); 
+extern void pause_redraw(void);
+extern void pauseloop(void);
+extern void plop_piece(void); 
+extern void redo_board_globals(void);
+extern void redraw_cubies(void);
+extern void rotate_piece(int, double);
+extern void round_piece(void);
+extern void setup_backpm(void);
+extern void setup_cubies(void);
+extern void setup_one_fieldpm(fieldplist);
+extern void update_meter(void);
+extern void updatepiece(void); 
+extern void updatetemp_tra(short, short, short, short, short);
+extern void xinit(void); 
+extern void init_scores();
@


1.1.1.1
log
@3D tetris
@
text
@@
