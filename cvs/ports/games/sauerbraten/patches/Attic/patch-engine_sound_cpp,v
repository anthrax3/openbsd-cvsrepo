head	1.2;
access;
symbols
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	jsg_20130429:1.1.1.1
	jsg:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.04.11.13.49.14;	author jsg;	state dead;
branches;
next	1.1;
commitid	vllcndKeon610C6y;

1.1
date	2013.04.29.01.56.43;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.04.29.01.56.43;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@enet_address_set_host() is not thread safe on OpenBSD
due to lack of gethostbyname_r().

Retain the resolver mutex when calling it to avoid
crashes in the multiplayer server browser.

Remove a now uneeded patch while here.
@
text
@$OpenBSD: patch-engine_sound_cpp,v 1.1 2013/04/29 01:56:43 jsg Exp $
--- engine/sound.cpp.orig	Mon Jan 21 02:55:10 2013
+++ engine/sound.cpp	Sat Mar 30 22:35:47 2013
@@@@ -674,7 +674,7 @@@@ COMMAND(resetsound, "");
 
 #include <unistd.h>
 
-#ifdef _POSIX_SHARED_MEMORY_OBJECTS
+#if _POSIX_SHARED_MEMORY_OBJECTS > 0
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <sys/mman.h>
@@@@ -684,7 +684,7 @@@@ COMMAND(resetsound, "");
 
 #endif
 
-#if defined(WIN32) || defined(_POSIX_SHARED_MEMORY_OBJECTS)
+#if defined(WIN32) || _POSIX_SHARED_MEMORY_OBJECTS > 0
 struct MumbleInfo
 {
     int version, timestamp;
@@@@ -697,7 +697,7 @@@@ struct MumbleInfo
 static HANDLE mumblelink = NULL;
 static MumbleInfo *mumbleinfo = NULL;
 #define VALID_MUMBLELINK (mumblelink && mumbleinfo)
-#elif defined(_POSIX_SHARED_MEMORY_OBJECTS)
+#elif _POSIX_SHARED_MEMORY_OBJECTS > 0
 static int mumblelink = -1;
 static MumbleInfo *mumbleinfo = (MumbleInfo *)-1; 
 #define VALID_MUMBLELINK (mumblelink >= 0 && mumbleinfo != (MumbleInfo *)-1)
@@@@ -722,7 +722,7 @@@@ void initmumble()
             mumbleinfo = (MumbleInfo *)MapViewOfFile(mumblelink, FILE_MAP_ALL_ACCESS, 0, 0, sizeof(MumbleInfo));
             if(mumbleinfo) wcsncpy(mumbleinfo->name, L"Sauerbraten", 256);
         }
-    #elif defined(_POSIX_SHARED_MEMORY_OBJECTS)
+    #elif _POSIX_SHARED_MEMORY_OBJECTS > 0
         defformatstring(shmname)("/MumbleLink.%d", getuid());
         mumblelink = shm_open(shmname, O_RDWR, 0);
         if(mumblelink >= 0)
@@@@ -742,7 +742,7 @@@@ void closemumble()
 #ifdef WIN32
     if(mumbleinfo) { UnmapViewOfFile(mumbleinfo); mumbleinfo = NULL; }
     if(mumblelink) { CloseHandle(mumblelink); mumblelink = NULL; }
-#elif defined(_POSIX_SHARED_MEMORY_OBJECTS)
+#elif _POSIX_SHARED_MEMORY_OBJECTS > 0
     if(mumbleinfo != (MumbleInfo *)-1) { munmap(mumbleinfo, sizeof(MumbleInfo)); mumbleinfo = (MumbleInfo *)-1; } 
     if(mumblelink >= 0) { close(mumblelink); mumblelink = -1; }
 #endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import Cube 2: Sauerbraten Collect Edition

Cube 2: Sauerbraten is a free multiplayer/singleplayer first person
shooter, built as a major redesign of the Cube FPS.

Much like the original Cube, the aim of this game is not necessarily
to produce the most features & eyecandy possible, but rather to allow
map/geometry editing to be done dynamically in-game, to create fun
gameplay and an elegant engine. 

help from and ok ajacoutot@@, ok rfreeman@@
@
text
@@
