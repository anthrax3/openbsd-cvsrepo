head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.0.30
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.26
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.24
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.22
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.20
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.18
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.16
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.14
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.10
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.12.27.17.56.22;	author jasper;	state dead;
branches;
next	1.1;
commitid	AJrMdFpPPAX7nioA;

1.1
date	2009.02.10.00.32.43;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@from new maintainer Donovan Watteau:
"- update from 0.5.2 to 0.6.3, which fixes a lot of security issues and
  which makes the game playable online again.
- don't bother building on strict-alignment archs.  On loongson, both
  the client and the server SIGBUS during startup, and looking at the
  code it seems that it will crash on anything not x86 or ppc.
- don't include an extra copy of DejaVuSans.ttf.
- use audio/wavpack, not an internal copy.
- make sure an internal zlib is never used.
- invoke "bam" with -a, to make sure that it will abort on error.
- don't enforce stack protector, base gcc(1) enables it wherever
  it's possible.
- fix endianness detection (confirmed to work on macppc).
- drop patch-src_engine_client_ec_snd_c.  At first, I ported it to
  teeworlds-0.6.2, but actually this patch makes audio much worse
  for me, and I can't observe anymore the crash it was supposed
  to fix."

ok armani@@
@
text
@$OpenBSD: patch-src_engine_client_ec_snd_c,v 1.1 2009/02/10 00:32:43 sthen Exp $
--- src/engine/client/ec_snd.c.orig	Tue Jan 27 11:41:17 2009
+++ src/engine/client/ec_snd.c	Tue Jan 27 12:30:08 2009
@@@@ -139,10 +139,19 @@@@ static int iabs(int i)
 
 static void mix(short *final_out, unsigned frames)
 {
-	int mix_buffer[MAX_FRAMES*2] = {0};
-	int i, s;
+	int *mix_buffer;
+	int i, s, mix_buffer_size;
 	int master_vol;
 
+	mix_buffer_size = frames * 2 * sizeof(int);
+	mix_buffer = malloc(mix_buffer_size);
+	if (mix_buffer == NULL)
+	{
+		printf("malloc failed");
+		return;
+	}
+	bzero(mix_buffer, mix_buffer_size);
+
 	/* aquire lock while we are mixing */
 	lock_wait(sound_lock);
 	
@@@@ -239,6 +248,12 @@@@ static void mix(short *final_out, unsigned frames)
 #if defined(CONF_ARCH_ENDIAN_BIG)
 	swap_endian(final_out, sizeof(short), frames * 2);
 #endif
+
+	if(mix_buffer != NULL) {
+		free(mix_buffer);
+		mix_buffer = NULL;
+	}
+	
 }
 
 static void sdlcallback(void *unused, Uint8 *stream, int len)
@


1.1
log
@fix segfault; from jakemsr@@, maintainer ok.
@
text
@d1 1
a1 1
$OpenBSD$
@

