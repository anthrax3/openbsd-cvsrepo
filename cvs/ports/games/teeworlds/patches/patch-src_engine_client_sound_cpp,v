head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.11.30.18.19.33;	author jca;	state Exp;
branches;
next	1.1;
commitid	6XZ2NwiSXogZIYYY;

1.1
date	2015.12.27.17.56.22;	author jasper;	state Exp;
branches;
next	;
commitid	AJrMdFpPPAX7nioA;


desc
@@


1.2
log
@regen patch
@
text
@$OpenBSD: patch-src_engine_client_sound_cpp,v 1.1 2015/12/27 17:56:22 jasper Exp $

Make it possible to compile with an external and newer wavpack.
From Debian.

--- src/engine/client/sound.cpp.orig	Sun Nov 13 16:41:35 2016
+++ src/engine/client/sound.cpp	Wed Nov 30 19:18:11 2016
@@@@ -13,7 +13,7 @@@@
 #include "sound.h"
 
 extern "C" { // wavpack
-	#include <engine/external/wavpack/wavpack.h>
+	#include <wavpack/wavpack.h>
 }
 #include <math.h>
 
@@@@ -328,17 +328,14 @@@@ void CSound::RateConvert(int SampleID)
 	pSample->m_NumFrames = NumFrames;
 }
 
-int CSound::ReadData(void *pBuffer, int Size)
-{
-	return io_read(ms_File, pBuffer, Size);
-}
-
 int CSound::LoadWV(const char *pFilename)
 {
 	CSample *pSample;
 	int SampleID = -1;
 	char aError[100];
 	WavpackContext *pContext;
+	char aWholePath[1024];
+	IOHANDLE File;
 
 	// don't waste memory on sound when we are stress testing
 	if(g_Config.m_DbgStress)
@@@@ -351,19 +348,23 @@@@ int CSound::LoadWV(const char *pFilename)
 	if(!m_pStorage)
 		return -1;
 
-	ms_File = m_pStorage->OpenFile(pFilename, IOFLAG_READ, IStorage::TYPE_ALL);
-	if(!ms_File)
+	File = m_pStorage->OpenFile(pFilename, IOFLAG_READ, IStorage::TYPE_ALL, aWholePath, sizeof(aWholePath));
+	if(!File)
 	{
 		dbg_msg("sound/wv", "failed to open file. filename='%s'", pFilename);
 		return -1;
 	}
+	else
+	{
+		io_close(File);
+	}
 
 	SampleID = AllocID();
 	if(SampleID < 0)
 		return -1;
 	pSample = &m_aSamples[SampleID];
 
-	pContext = WavpackOpenFileInput(ReadData, aError);
+	pContext = WavpackOpenFileInput(aWholePath, aError, OPEN_2CH_MAX, 0);
 	if (pContext)
 	{
 		int m_aSamples = WavpackGetNumSamples(pContext);
@@@@ -419,9 +420,6 @@@@ int CSound::LoadWV(const char *pFilename)
 		dbg_msg("sound/wv", "failed to open %s: %s", pFilename, aError);
 	}
 
-	io_close(ms_File);
-	ms_File = NULL;
-
 	if(g_Config.m_Debug)
 		dbg_msg("sound/wv", "loaded %s", pFilename);
 
@@@@ -526,8 +524,6 @@@@ void CSound::StopAll()
 	}
 	lock_unlock(m_SoundLock);
 }
-
-IOHANDLE CSound::ms_File = 0;
 
 IEngineSound *CreateEngineSound() { return new CSound; }
 
@


1.1
log
@from new maintainer Donovan Watteau:
"- update from 0.5.2 to 0.6.3, which fixes a lot of security issues and
  which makes the game playable online again.
- don't bother building on strict-alignment archs.  On loongson, both
  the client and the server SIGBUS during startup, and looking at the
  code it seems that it will crash on anything not x86 or ppc.
- don't include an extra copy of DejaVuSans.ttf.
- use audio/wavpack, not an internal copy.
- make sure an internal zlib is never used.
- invoke "bam" with -a, to make sure that it will abort on error.
- don't enforce stack protector, base gcc(1) enables it wherever
  it's possible.
- fix endianness detection (confirmed to work on macppc).
- drop patch-src_engine_client_ec_snd_c.  At first, I ported it to
  teeworlds-0.6.2, but actually this patch makes audio much worse
  for me, and I can't observe anymore the crash it was supposed
  to fix."

ok armani@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 2
a7 2
--- src/engine/client/sound.cpp.orig	Wed May  1 13:47:39 2013
+++ src/engine/client/sound.cpp	Thu May  8 16:00:47 2014
d76 1
a76 1
 	lock_release(m_SoundLock);
@

