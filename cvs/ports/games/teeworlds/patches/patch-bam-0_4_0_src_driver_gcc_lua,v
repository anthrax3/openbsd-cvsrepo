head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.8
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.6
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2015.12.27.17.56.22;	author jasper;	state Exp;
branches;
next	;
commitid	AJrMdFpPPAX7nioA;


desc
@@


1.1
log
@from new maintainer Donovan Watteau:
"- update from 0.5.2 to 0.6.3, which fixes a lot of security issues and
  which makes the game playable online again.
- don't bother building on strict-alignment archs.  On loongson, both
  the client and the server SIGBUS during startup, and looking at the
  code it seems that it will crash on anything not x86 or ppc.
- don't include an extra copy of DejaVuSans.ttf.
- use audio/wavpack, not an internal copy.
- make sure an internal zlib is never used.
- invoke "bam" with -a, to make sure that it will abort on error.
- don't enforce stack protector, base gcc(1) enables it wherever
  it's possible.
- fix endianness detection (confirmed to work on macppc).
- drop patch-src_engine_client_ec_snd_c.  At first, I ported it to
  teeworlds-0.6.2, but actually this patch makes audio much worse
  for me, and I can't observe anymore the crash it was supposed
  to fix."

ok armani@@
@
text
@$OpenBSD$

Don't hardcode compiler path and flags.

--- bam-0.4.0/src/driver_gcc.lua.orig	Mon Aug  9 20:08:24 2010
+++ bam-0.4.0/src/driver_gcc.lua	Sat Mar 17 15:14:24 2012
@@@@ -13,7 +13,6 @@@@ function DriverGCC_Get(exe, cache_name, flags_name)
 			local f = cc.flags:ToString()
 			f = f .. cc[flags_name]:ToString()
 			if settings.debug > 0 then f = f .. "-g " end
-			if settings.optimize > 0 then f = f .. "-O2 " end
 			
 			cache.str = cc[exe] .. " " .. f .. "-c " .. d .. i .. " -o "
 		end
@@@@ -27,7 +26,7 @@@@ function DriverGCC_CTest(code, options)
 	f:write(code)
 	f:write("\n")
 	f:close()
-	local ret = ExecuteSilent("gcc _test.c -o _test " .. options)
+	local ret = ExecuteSilent("${CC} _test.c -o _test " .. options)
 	os.remove("_test.c")
 	os.remove("_test")
 	return ret==0
@@@@ -80,8 +79,8 @@@@ end
 function SetDriversGCC(settings)
 	if settings.cc then
 		settings.cc.extension = ".o"
-		settings.cc.exe_c = "gcc"
-		settings.cc.exe_cxx = "g++"
+		settings.cc.exe_c = "${CC} ${CFLAGS}"
+		settings.cc.exe_cxx = "${CXX} ${CXXFLAGS}"
 		settings.cc.DriverCTest = DriverGCC_CTest
 		settings.cc.DriverC = DriverGCC_Get("exe_c", "_c_cache", "flags_c")
 		settings.cc.DriverCXX = DriverGCC_Get("exe_cxx", "_cxx_cache", "flags_cxx")
@@@@ -89,7 +88,7 @@@@ function SetDriversGCC(settings)
 	
 	if settings.link then
 		settings.link.extension = ""
-		settings.link.exe = "g++"
+		settings.link.exe = "${CXX}"
 		settings.link.Driver = DriverGCC_Link
 	end
 	
@@@@ -108,7 +107,7 @@@@ function SetDriversGCC(settings)
 			settings.dll.prefix = ""
 			settings.dll.extension = ".so"
 		end
-		settings.dll.exe = "g++"
+		settings.dll.exe = "${CXX}"
 		settings.dll.Driver = DriverGCC_DLL
 	end
 end
@
