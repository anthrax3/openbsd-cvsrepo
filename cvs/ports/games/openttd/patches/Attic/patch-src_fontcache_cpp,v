head	1.2;
access;
symbols
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.04.15.01.39.16;	author bentley;	state dead;
branches;
next	1.1;
commitid	nM7qOBaaAEdytgiH;

1.1
date	2014.12.23.11.32.30;	author dcoppa;	state Exp;
branches;
next	;
commitid	n2ad5foZ0wTncxqp;


desc
@@


1.2
log
@Update to openttd-1.5.0.

Changelog:
http://us.binaries.openttd.org/binaries/releases/1.5.0/changelog.txt

ok daniel@@
@
text
@$OpenBSD: patch-src_fontcache_cpp,v 1.1 2014/12/23 11:32:30 dcoppa Exp $

Fix compilation with freetype2 version 2.5.4 and newer
(upstream svn revision r27079)

--- src/fontcache.cpp.orig	Tue Oct 21 13:36:35 2014
+++ src/fontcache.cpp	Tue Dec 23 05:09:17 2014
@@@@ -527,8 +527,8 @@@@ const Sprite *FreeTypeFontCache::GetGlyph(GlyphID key)
 	aa = (slot->bitmap.pixel_mode == FT_PIXEL_MODE_GRAY);
 
 	/* Add 1 pixel for the shadow on the medium font. Our sprite must be at least 1x1 pixel */
-	int width  = max(1, slot->bitmap.width + (this->fs == FS_NORMAL));
-	int height = max(1, slot->bitmap.rows  + (this->fs == FS_NORMAL));
+	unsigned int width  = max(1U, (unsigned int)slot->bitmap.width + (this->fs == FS_NORMAL));
+	unsigned int height = max(1U, (unsigned int)slot->bitmap.rows  + (this->fs == FS_NORMAL));
 
 	/* Limit glyph size to prevent overflows later on. */
 	if (width > 256 || height > 256) usererror("Font glyph is too large");
@@@@ -544,8 +544,8 @@@@ const Sprite *FreeTypeFontCache::GetGlyph(GlyphID key)
 
 	/* Draw shadow for medium size */
 	if (this->fs == FS_NORMAL && !aa) {
-		for (int y = 0; y < slot->bitmap.rows; y++) {
-			for (int x = 0; x < slot->bitmap.width; x++) {
+		for (unsigned int y = 0; y < (unsigned int)slot->bitmap.rows; y++) {
+			for (unsigned int x = 0; x < (unsigned int)slot->bitmap.width; x++) {
 				if (aa ? (slot->bitmap.buffer[x + y * slot->bitmap.pitch] > 0) : HasBit(slot->bitmap.buffer[(x / 8) + y * slot->bitmap.pitch], 7 - (x % 8))) {
 					sprite.data[1 + x + (1 + y) * sprite.width].m = SHADOW_COLOUR;
 					sprite.data[1 + x + (1 + y) * sprite.width].a = aa ? slot->bitmap.buffer[x + y * slot->bitmap.pitch] : 0xFF;
@@@@ -554,8 +554,8 @@@@ const Sprite *FreeTypeFontCache::GetGlyph(GlyphID key)
 		}
 	}
 
-	for (int y = 0; y < slot->bitmap.rows; y++) {
-		for (int x = 0; x < slot->bitmap.width; x++) {
+	for (unsigned int y = 0; y < (unsigned int)slot->bitmap.rows; y++) {
+		for (unsigned int x = 0; x < (unsigned int)slot->bitmap.width; x++) {
 			if (aa ? (slot->bitmap.buffer[x + y * slot->bitmap.pitch] > 0) : HasBit(slot->bitmap.buffer[(x / 8) + y * slot->bitmap.pitch], 7 - (x % 8))) {
 				sprite.data[x + y * sprite.width].m = FACE_COLOUR;
 				sprite.data[x + y * sprite.width].a = aa ? slot->bitmap.buffer[x + y * slot->bitmap.pitch] : 0xFF;
@


1.1
log
@
Fix compilation with freetype2 version 2.5.4 and newer
(upstream svn revision r27079)
@
text
@d1 1
a1 1
$OpenBSD$
@

