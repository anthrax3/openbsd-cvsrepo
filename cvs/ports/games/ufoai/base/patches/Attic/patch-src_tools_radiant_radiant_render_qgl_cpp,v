head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.1.1.0.8
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.6
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.4
	OPENBSD_5_0:1.1.1.1.0.2
	OPENBSD_5_0_BASE:1.1.1.1
	ajacoutot_20100527:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.05.16.10.10.35;	author kirby;	state dead;
branches;
next	1.1;

1.1
date	2011.05.27.07.20.11;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.05.27.07.20.11;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to ufoai 2.4
From now all textures have permissive licenses, so we can ship packages.

Here are just a few of the changes in 2.4:
 - A dozen new maps to battle aliens
 - Rescue soldiers in dropships shot down by aliens and retreat from battles
 - New particle and sound effects for weapons
 - Support for smoke and incendiary effects
 - New skirmish options to save squads and respawn aliens
 - Battlescape render speed dramatically improved

Full changelog: http://ufoai.org/wiki/Changelog/2.4

With input from sthen@@ and bentley@@. Thanks guys!
Tested by me and bentley@@
OK bentley@@
@
text
@$OpenBSD: patch-src_tools_radiant_radiant_render_qgl_cpp,v 1.1 2011/05/27 07:20:11 ajacoutot Exp $
--- src/tools/radiant/radiant/render/qgl.cpp.orig	Mon Apr 25 19:47:45 2011
+++ src/tools/radiant/radiant/render/qgl.cpp	Mon Apr 25 19:48:56 2011
@@@@ -34,7 +34,7 @@@@
 # include <wtypes.h>
 PROC ( WINAPI * qwglGetProcAddress)(LPCSTR);
 
-#elif defined(__linux__) || defined (__FreeBSD__) || defined(__APPLE__)
+#elif defined(__linux__) || defined (__FreeBSD__) || defined(__APPLE__) || defined (__OpenBSD__)
 
 # include <GL/glx.h>
 # include <dlfcn.h>
@@@@ -55,7 +55,7 @@@@ void QGL_Shutdown (OpenGLBinding& table)
 
 #if defined(WIN32)
 	qwglGetProcAddress = 0;
-#elif defined(__linux__) || defined (__FreeBSD__) || defined(__APPLE__)
+#elif defined(__linux__) || defined (__FreeBSD__) || defined(__APPLE__) || defined (__OpenBSD__)
 	qglXQueryExtension = 0;
 	qglXGetProcAddressARB = 0;
 #else
@@@@ -133,7 +133,7 @@@@ typedef int (QGL_DLLEXPORT *QGLFunctionPointer) ();
 
 QGLFunctionPointer QGL_getExtensionFunc (const char* symbol)
 {
-#if defined(__linux__) || defined (__FreeBSD__) || defined(__APPLE__)
+#if defined(__linux__) || defined (__FreeBSD__) || defined(__APPLE__) || defined (__OpenBSD__)
 	if (qglXGetProcAddressARB == 0) {
 		return reinterpret_cast<QGLFunctionPointer> (glInvalidFunction);
 	} else {
@@@@ -170,7 +170,7 @@@@ int QGL_Init (OpenGLBinding& table)
 
 #if defined(WIN32)
 	qwglGetProcAddress = wglGetProcAddress;
-#elif defined(__linux__) || defined (__FreeBSD__) || defined(__APPLE__)
+#elif defined(__linux__) || defined (__FreeBSD__) || defined(__APPLE__) || defined (__OpenBSD__)
 	qglXQueryExtension = glXQueryExtension;
 	qglXGetProcAddressARB = (glXGetProcAddressARBProc) dlsym(RTLD_DEFAULT, "glXGetProcAddressARB");
 	if ((qglXQueryExtension == 0) || (qglXQueryExtension(GDK_DISPLAY(), 0, 0) != True))
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import ufoai-2.3.1.

"UFO: Alien Invasion" is a squad-based tactical strategy game in the
tradition of the old X-COM PC games, but with a twist. This game
combines military realism with hard science-fiction and the weirdness
of an alien invasion. The carefully constructed turn-based system gives
you pin-point control of your squad while maintaining a sense of pace
and danger.

prodded by oga@@
from Antti Harri and Kirill Bychkov (maintainer) with several tweaks from me
ok jasper@@
@
text
@@
