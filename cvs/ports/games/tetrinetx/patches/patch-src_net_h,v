head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.40
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.38
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.36
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.32
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.30
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.28
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.26
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.24
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.22
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.20
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.18
	OPENBSD_5_0:1.1.1.1.0.16
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.12
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.10
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.8
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	simon_20070906:1.1.1.1
	simon:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2007.09.06.17.58.56;	author simon;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.09.06.17.58.56;	author simon;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- src/net.h.orig	Tue Apr 24 04:31:29 2001
+++ src/net.h	Thu Sep  6 10:08:07 2007
@@@@ -37,6 +37,9 @@@@
 #define SOCK_NONSOCK    0x10    /* used for file i/o on debug */
 #define SOCK_STRONGCONN 0x20    /* don't report success until sure */   
 
+/* some hard-coded values are better with #define :) */
+#define MYMAXHOSTNAMELEN	80
+
 /* this is used by the net module to keep track of sockets and what's
    queued on them */
 struct sock_list {
@@@@ -51,15 +54,10 @@@@ struct sock_list {
 /*#define MAXSOCKS MAXNET*2*/
 struct sock_list *socklist;  /* enough to be safe */   
 
-/* i read somewhere that memcpy() is broken on some machines */
-/* it's easy to replace, so i'm not gonna take any chances, because it's
-*/
-/* pretty important that it work correctly here */
+/* XXX: deleted, see .c for explanations.
 void my_memcpy(char *dest,char *src,int len);
-
-
-/* bzero() is bsd-only, so here's one for non-bsd systems */
 void my_bzero(char *dest,int len);
+*/
 
 
 /* initialize the socklist */
@@@@ -75,7 +73,11 @@@@ void getmyhostname(char *s);
 
 
 /* get my ip number */
+#ifdef USE_IPV6
+void getmyip(struct in6_addr *ip);
+#else
 IP getmyip(void);
+#endif
 
 
 void neterror(char *s);
@@@@ -106,7 +108,11 @@@@ char *hostnamefromip(unsigned long ip);
 */
 /* by open_listen ... returns hostname of the caller & the new socket */
 /* does NOT dispose of old "public" socket! */
+#ifdef USE_IPV6
+int answer(int sock,struct in6_addr *ip,int binary);
+#else
 int answer(int sock,unsigned long *ip,int binary);
+#endif
 
 
 /* attempts to read from all the sockets in socklist */
@


1.1.1.1
log
@import tetrinetx

tetrinetx provides a server for hosting TetriNet games (a multiplayer
variant of Tetris for up to six players).

When the ipv6 flavor is used, IPv4 support is disabled.

ok jasper@@
@
text
@@
