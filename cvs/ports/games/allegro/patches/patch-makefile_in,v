head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.24
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.22
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.18
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.20
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.16
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.14
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.12
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	phessler_20091015:1.1.1.1
	phessler:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2011.04.15.19.29.54;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.26.02.56.30;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2009.10.15.14.38.06;	author phessler;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.15.14.38.06;	author phessler;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fix GNU Makefile syntax for gmake 3.82
@
text
@$OpenBSD: patch-makefile_in,v 1.2 2010/04/26 02:56:30 jakemsr Exp $
--- makefile.in.orig	Wed Sep 19 15:19:25 2007
+++ makefile.in	Fri Apr 15 01:18:25 2011
@@@@ -406,8 +406,6 @@@@ examples: $(EXAMPLE_FILES)
 
 # -------- rules for deleting the generated files --------
 
-clean:
-
    define RM_OBJ_CLEAN_FILES
       $(foreach file, $(OBJ_CLEAN_FILES), rm -f $(file)
       )
@@@@ -418,25 +416,24 @@@@ clean:
       )
    endef
 
+clean:
 	$(RM_OBJ_CLEAN_FILES)
 	$(RM_OTHER_CLEAN_FILES)
 
-distclean: clean
-
    define RM_DISTCLEAN_FILES
       $(foreach file, $(DISTCLEAN_FILES) $(ALLEGRO_LIB_X_EXES), rm -f $(file)
       )
    endef
 
+distclean: clean
 	$(RM_DISTCLEAN_FILES)
 
-veryclean: distclean
-
    define RM_VERYCLEAN_FILES
       $(foreach file, $(VERYCLEAN_FILES), rm -f $(file)
       )
    endef
 
+veryclean: distclean
 	$(RM_VERYCLEAN_FILES)
 	rm -f makefile
 
@@@@ -472,9 +469,9 @@@@ install-lib: lib modules
 	  fi; \
 	done
 	@@for l in alleg alld allp; do \
-	  if test -f $(LIBDIR)/lib$${l}-$(shared_version).so; then \
-	    echo Installing $(LIBDIR)/lib$${l}-$(shared_version).so to $(DESTDIR)$(libdir); \
-	    $(INSTALL_PROGRAM) $(LIBDIR)/lib$${l}-$(shared_version).so $(DESTDIR)$(libdir)/; \
+	  if test -f $(LIBDIR)/lib$${l}.so.$(shared_major_minor); then \
+	    echo Installing $(LIBDIR)/lib$${l}.so.$(shared_major_minor) to $(DESTDIR)$(libdir); \
+	    $(INSTALL_PROGRAM) $(LIBDIR)/lib$${l}.so.$(shared_major_minor) $(DESTDIR)$(libdir)/; \
 	    $(INSTALL_DATA) $(LIBDIR)/lib$${l}_unsharable.a $(DESTDIR)$(libdir)/; \
 	  fi; \
 	done
@@@@ -489,21 +486,6 @@@@ install-lib: lib modules
 	$(mkinstalldirs) $(DESTDIR)$(bindir)
 	@@echo Installing allegro-config to $(DESTDIR)$(bindir)
 	@@$(INSTALL_PROGRAM) allegro-config $(DESTDIR)$(bindir)
-	@@if test -n "$(LIBDIR)/liball*-$(shared_version).so"; then \
-		(cat /etc/ld.so.conf | grep $(libdir) >/dev/null || \
-		 test $(libdir) = /lib || test $(libdir) = /usr/lib) \
-		&& ($(LDCONFIG) $(libdir) || true) || (\
-			echo "" ; \
-			echo "Warning: shared library destination $(libdir) is not in ldd search path." ; \
-			echo "Unless you add it to /etc/ld.so.conf, you must set LD_LIBRARY_PATH to include"; \
-			echo "$(libdir) each time you want to run an Allegro program." ; \
-		) ; \
-	fi
-	@@for l in alleg alld allp; do \
-	  if test -f $(DESTDIR)$(libdir)/lib$${l}-$(shared_version).so -a \! -h $(DESTDIR)$(libdir)/lib$${l}.so.${shared_major_minor}; then \
-	    (cd $(DESTDIR)$(libdir); ln -s lib$${l}-$(shared_version).so lib$${l}.so.${shared_major_minor}); \
-	  fi; \
-	done
 	$(mkinstalldirs) $(DESTDIR)$(prefix)/share/aclocal
 	@@echo Installing allegro.m4 to $(DESTDIR)$(prefix)/share/aclocal
 	@@$(INSTALL_DATA) misc/allegro.m4 $(DESTDIR)$(prefix)/share/aclocal
@@@@ -687,6 +669,7 @@@@ depend:
 	$(SHELL) -c 'cd $(srcdir) && misc/depmod.sh esddigi "\`esd-config --libs\`" $(ALLEGRO_MODULE_ESD_FILES)' >>makefile.dep
 	$(SHELL) -c 'cd $(srcdir) && misc/depmod.sh artsdigi "\`artsc-config --libs\`" $(ALLEGRO_MODULE_ARTS_FILES)' >>makefile.dep
 	$(SHELL) -c 'cd $(srcdir) && misc/depmod.sh sgialdigi -laudio $(ALLEGRO_MODULE_SGIAL_FILES)' >>makefile.dep
+	$(SHELL) -c 'cd $(srcdir) && misc/depmod.sh sndiodigi -lsndio $(ALLEGRO_MODULE_SNDIO_FILES)' >>makefile.dep
 	$(SHELL) -c 'cd $(srcdir) && misc/depmod.sh jackdigi "\`pkg-config --libs jack\`" $(ALLEGRO_MODULE_JACK_FILES)' >>makefile.dep
 	@@echo "Generating dependencies for simple programs"
 	$(SHELL) -c 'cd $(srcdir) && misc/deplexe.sh -- $(ALLEGRO_LIB_EXE_SOURCES) $(ALLEGRO_EXAMPLE_FILES)' >>makefile.dep
@


1.2
log
@- sndio supported as default audio output method
- build with -pthread in LDFLAGS instead of -lpthread in LIBS;
  allegro-config passes LDFLAGS on, so dependent ports build correctly
  (WANTLIB changes in dependent ports coming soon)
- don't build modules in liballegro: we don't ship an allegrorc to
  be able to choose which modules to use

"sndio bits look ok" ratchov@@
@
text
@d1 42
a42 4
$OpenBSD: patch-makefile_in,v 1.1.1.1 2009/10/15 14:38:06 phessler Exp $
--- makefile.in.orig	Wed Sep 19 06:19:25 2007
+++ makefile.in	Tue Jan 12 02:03:00 2010
@@@@ -472,9 +472,9 @@@@ install-lib: lib modules
d55 1
a55 1
@@@@ -489,21 +489,6 @@@@ install-lib: lib modules
d77 1
a77 1
@@@@ -687,6 +672,7 @@@@ depend:
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- makefile.in.orig	Wed Sep 19 15:19:25 2007
+++ makefile.in	Thu Oct 15 13:12:42 2009
d39 8
@


1.1.1.1
log
@Allegro is a cross-platform library intended for use in computer games
and other types of multimedia programming.

right now this does not use sndio, will convert in-tree.

originally from & "that's an okay if you promise to take care of allegro
sndio backend ;)" landry@@
@
text
@@
