head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.28
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.26
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.22
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.24
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.18
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.16
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	phessler_20091015:1.1.1.1
	phessler:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.04.26.02.56.30;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2009.10.15.14.38.06;	author phessler;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.15.14.38.06;	author phessler;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- sndio supported as default audio output method
- build with -pthread in LDFLAGS instead of -lpthread in LIBS;
  allegro-config passes LDFLAGS on, so dependent ports build correctly
  (WANTLIB changes in dependent ports coming soon)
- don't build modules in liballegro: we don't ship an allegrorc to
  be able to choose which modules to use

"sndio bits look ok" ratchov@@
@
text
@$OpenBSD: patch-aclocal_m4,v 1.1.1.1 2009/10/15 14:38:06 phessler Exp $
--- aclocal.m4.orig	Sun Sep 27 21:57:48 2009
+++ aclocal.m4	Wed Jan 13 01:27:22 2010
@@@@ -438,19 +438,19 @@@@ allegro_enable_ossdigi=yes)
 
 if test -n "$allegro_enable_ossdigi"; then
   AC_CHECK_HEADER(soundcard.h, [
-    AC_DEFINE(ALLEGRO_HAVE_SOUNDCARD_H, 1)
+    AC_DEFINE(ALLEGRO_HAVE_SOUNDCARD_H, 1, [soundcard.h])
     allegro_support_ossdigi=yes
   ])
   AC_CHECK_HEADER(sys/soundcard.h, [
-    AC_DEFINE(ALLEGRO_HAVE_SYS_SOUNDCARD_H, 1)
+    AC_DEFINE(ALLEGRO_HAVE_SYS_SOUNDCARD_H, 1, [sys/soundcard.h])
     allegro_support_ossdigi=yes
   ])
   AC_CHECK_HEADER(machine/soundcard.h, [
-    AC_DEFINE(ALLEGRO_HAVE_MACHINE_SOUNDCARD_H, 1)
+    AC_DEFINE(ALLEGRO_HAVE_MACHINE_SOUNDCARD_H, 1, [machine/soundcard.h])
     allegro_support_ossdigi=yes
   ])
   AC_CHECK_HEADER(linux/soundcard.h, [
-    AC_DEFINE(ALLEGRO_HAVE_LINUX_SOUNDCARD_H, 1)
+    AC_DEFINE(ALLEGRO_HAVE_LINUX_SOUNDCARD_H, 1, [linux/soundcard.h])
     allegro_support_ossdigi=yes
   ])
 
@@@@ -473,15 +473,15 @@@@ allegro_enable_ossmidi=yes)
 
 if test -n "$allegro_enable_ossmidi"; then
   AC_CHECK_HEADER(soundcard.h,
-    AC_DEFINE(ALLEGRO_HAVE_SOUNDCARD_H, 1))
+    AC_DEFINE(ALLEGRO_HAVE_SOUNDCARD_H, 1, [soundcard.h]))
   AC_CHECK_HEADER(sys/soundcard.h,
-    AC_DEFINE(ALLEGRO_HAVE_SYS_SOUNDCARD_H, 1))
+    AC_DEFINE(ALLEGRO_HAVE_SYS_SOUNDCARD_H, 1, [sys/soundcard.h]))
   AC_CHECK_HEADER(machine/soundcard.h,
-    AC_DEFINE(ALLEGRO_HAVE_MACHINE_SOUNDCARD_H, 1))
+    AC_DEFINE(ALLEGRO_HAVE_MACHINE_SOUNDCARD_H, 1, [machine/soundcard.h]))
   AC_CHECK_HEADER(linux/soundcard.h,
-    AC_DEFINE(ALLEGRO_HAVE_LINUX_SOUNDCARD_H, 1))
+    AC_DEFINE(ALLEGRO_HAVE_LINUX_SOUNDCARD_H, 1, [linux/soundcard.h]))
   AC_CHECK_HEADER(linux/awe_voice.h,
-    AC_DEFINE(ALLEGRO_HAVE_LINUX_AWE_VOICE_H, 1))
+    AC_DEFINE(ALLEGRO_HAVE_LINUX_AWE_VOICE_H, 1, [linux/awe_voice.h]))
 
   dnl Link with libossaudio if necessary, used by some BSD systems.
   AC_CHECK_LIB(ossaudio, _oss_ioctl)
@@@@ -683,6 +683,27 @@@@ if test -n "$allegro_enable_sgialdigi"; then
 fi])
 
 dnl
+dnl Test for sndio driver.
+dnl
+dnl Variables:
+dnl  allegro_enable_sndiodigi=(yes|)
+dnl  allegro_cv_support_sndiodigi=(yes|)
+dnl
+AC_DEFUN(ALLEGRO_ACTEST_SNDIODIGI,
+[AC_ARG_ENABLE(sndiodigi,
+[  --enable-sndiodigi[=x]  enable building sndio driver [default=yes]],
+test "X$enableval" != "Xno" && allegro_enable_sndiodigi=yes,
+allegro_enable_sndiodigi=yes)
+ 
+if test "X$allegro_enable_sndiodigi" = "Xyes"; then
+  AC_CHECK_LIB(sndio, sio_open,
+  allegro_cv_support_sndiodigi=yes)
+  if test "X$allegro_cv_support_sndiodigi" = "Xyes" ; then
+    LIBS="-lsndio $LIBS"
+  fi
+fi])
+
+dnl
 dnl Test for JACK driver.
 dnl
 dnl Variables:
@@@@ -744,10 +765,22 @@@@ dnl
 dnl LIBS can be modified.
 dnl
 AC_DEFUN(ALLEGRO_ACTEST_PTHREADS,
-[AC_CHECK_HEADER(pthread.h,
-AC_CHECK_LIB(pthread, pthread_create,
-LIBS="-lpthread $LIBS"
-allegro_cv_support_pthreads=yes))])
+[AC_CHECK_HEADER(pthread.h, have_pthread_h=yes)
+if test "X$have_pthread_h" = "Xyes" ; then
+    save_LDFLAGS="$LDFLAGS";
+    LDFLAGS="$LDFLAGS -pthread"
+    AC_LINK_IFELSE(
+      [AC_LANG_PROGRAM(
+        [[#include <pthread.h>
+        pthread_t thr;]],
+        [pthread_create(&thr, NULL, NULL, NULL);])],
+      [allegro_cv_support_pthreads=yes],
+      [LDFLAGS="$save_LDFLAGS"])
+    if test "X$allegro_cv_support_pthreads" != "Xyes" ; then
+      AC_CHECK_LIB(pthread, pthread_create,
+        LIBS="-lpthread $LIBS" allegro_cv_support_pthreads=yes)
+    fi
+fi])
 
 dnl
 dnl Test for sched_yield (SunOS).
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- aclocal.m4.orig	Mon Sep 28 06:57:48 2009
+++ aclocal.m4	Thu Oct 15 13:13:11 2009
d49 1
a49 3
@@@@ -623,6 +623,7 @@@@ if test -n "$allegro_enable_esddigi"; then
     fi
   fi
d51 21
d73 28
d103 1
a103 1
 dnl Test for ARTS DIGI driver.
@


1.1.1.1
log
@Allegro is a cross-platform library intended for use in computer games
and other types of multimedia programming.

right now this does not use sndio, will convert in-tree.

originally from & "that's an okay if you promise to take care of allegro
sndio backend ;)" landry@@
@
text
@@
