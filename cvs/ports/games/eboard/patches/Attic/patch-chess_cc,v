head	1.4;
access;
symbols
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2003.05.02.22.21.22;	author fgsch;	state dead;
branches;
next	1.3;

1.3
date	2003.01.28.20.52.37;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.13.14.56.43;	author fgsch;	state dead;
branches;
next	1.1;

1.1
date	2002.09.28.20.26.48;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to eboard 0.8.0
@
text
@$OpenBSD: patch-chess_cc,v 1.3 2003/01/28 20:52:37 fgsch Exp $
--- chess.cc.orig	Tue Jan 28 14:01:37 2003
+++ chess.cc	Tue Jan 28 14:03:35 2003
@@@@ -1092,14 +1092,21 @@@@ bool ChessGame::ParsePgnGame(zifstream &
 	    }
 
 	    if (alpha[0]=='$') {
+	      int i;
               t.set((char *) alpha);
               if (! gl.empty() ) {
                 if (! global.annotator.isOpen() ) {
-                  gl.back().addAnnotation( global.annotator.open() );
-		  global.annotator.append(* (Glyphs[t.tokenvalue("$")]));
-		  global.annotator.close();
+		  i = t.tokenvalue("$");
+		  if (i < Glyphs.size()) {
+                    gl.back().addAnnotation( global.annotator.open() );
+		    global.annotator.append(* (Glyphs[i]));
+		    global.annotator.close();
+		  }
                 } else {
-		  global.annotator.append(* (Glyphs[t.tokenvalue("$")]));
+		  i = t.tokenvalue("$");
+		  if (i < Glyphs.size()) {
+		    global.annotator.append(* (Glyphs[i]));
+                  }
                 }
               }
 
@


1.3
log
@fix crashes with not-standard nag values.
game provided by naddy@@, fix by author.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to eboard 0.7.0.
@
text
@d1 5
a5 4
$OpenBSD: patch-chess_cc,v 1.1 2002/09/28 20:26:48 naddy Exp $
--- chess.cc.orig	Sat Sep 28 21:00:15 2002
+++ chess.cc	Sat Sep 28 21:01:05 2002
@@@@ -257,7 +257,7 @@@@ void ChessGame::fixExamineZigZag(Positio
d7 22
a28 5
 void ChessGame::updatePosition(Position &p,int movenum,int blacktomove,
 			       int wclock,int bclock,char *infoline, 
-			       bool sndflag=false) {
+			       bool sndflag) {
   char z[32];
a29 21
   global.debug("ChessGame","updatePosition");
@@@@ -738,7 +738,7 @@@@ void ChessGame::guessPGNFromInfo() {
     pgn.set("FEN", moves.front().getFEN() );
 }
 
-bool ChessGame::savePGN(char *filename, bool append=false) {
+bool ChessGame::savePGN(char *filename, bool append) {
   char z[512];
   const char *cp;
   list<Position>::iterator li;
@@@@ -827,8 +827,8 @@@@ bool ChessGame::ParsePgnGame(istream &f,
 			     char * filename,
 			     bool indexonly, 
 			     int gameid,
-			     variant v = REGULAR,
-			     ChessGame *updatee = NULL) {
+			     variant v,
+			     ChessGame *updatee) {
   /* 
      ok, now (0.4.x) we do this in a DFA-like manner
      0  = state 0 (whitespace before movetext)
@


1.1
log
@Remove multiple declarations of default arguments; required for compiling
with gcc3.
@
text
@d1 1
a1 1
$OpenBSD$
@

