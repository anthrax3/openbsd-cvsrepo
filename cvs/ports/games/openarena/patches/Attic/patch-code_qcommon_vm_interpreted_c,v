head	1.2;
access;
symbols
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.14
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.10
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.03.18.16.53.04;	author kirby;	state dead;
branches;
next	1.1;

1.1
date	2009.02.03.19.48.42;	author kili;	state Exp;
branches;
next	;


desc
@@


1.2
log
@(sigh) And this one...
@
text
@$OpenBSD: patch-code_qcommon_vm_interpreted_c,v 1.1 2009/02/03 19:48:42 kili Exp $
--- code/qcommon/vm_interpreted.c.orig	Sat Aug  9 18:28:20 2008
+++ code/qcommon/vm_interpreted.c	Sat Jan 10 21:23:02 2009
@@@@ -532,8 +532,8 @@@@ nextInstruction2:
 
 //VM_LogSyscalls( (int *)&image[ programStack + 4 ] );
 				{
-					intptr_t* argptr = (intptr_t *)&image[ programStack + 4 ];
-				#if __WORDSIZE == 64
+					intptr_t* argptr;
+				#if LONG_BIT == 64
 				// the vm has ints on the stack, we expect
 				// longs so we have to convert it
 					intptr_t argarr[16];
@@@@ -542,6 +542,8 @@@@ nextInstruction2:
 						argarr[i] = *(int*)&image[ programStack + 4 + 4*i ];
 					}
 					argptr = argarr;
+				#else
+					argptr = (intptr_t *)&image[ programStack + 4 ];
 				#endif
 					r = vm->systemCall( argptr );
 				}
@


1.1
log
@
Unbreak for amd64.  Initial fix (for amd64 only) from Jordi Beltran
Creix (jbcreix.mail at gmail.com). Generalized for all LP64
architectures by me. At least in theory. Some tests on sparc64
didn't go very well, and nobody tested on other archs, so just keep
ONLY_FOR_ARCHS (with amd64 added) for now.

Antti Harri (MAINTAINER) agrees.
@
text
@d1 1
a1 1
$OpenBSD$
@

