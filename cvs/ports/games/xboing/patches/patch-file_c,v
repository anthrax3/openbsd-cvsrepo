head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.54
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.52
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.48
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.50
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.46
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.44
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.42
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.40
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.38
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.36
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.34
	OPENBSD_5_0:1.1.0.32
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.30
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.28
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.26
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.24
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.22
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.20
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.18
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.16
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.14
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2004.03.06.02.41.00;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.1
log
@* Prevent environment variables from overflowing buffers.
  Adapted from Debian via Robert Nagy <thuglife@@bsd.hu>.
* Fix high score file handling.
@
text
@$OpenBSD$
--- file.c.orig	2004-03-06 01:56:25.000000000 +0100
+++ file.c	2004-03-06 01:58:32.000000000 +0100
@@@@ -139,7 +139,7 @@@@ void SetupStage(display, window)
 
     /* Construct the level filename */
     if ((str = getenv("XBOING_LEVELS_DIR")) != NULL)
-        sprintf(levelPath, "%s/level%02ld.data", str, newLevel);
+        sprintf(levelPath, sizeof(levelPath), "%s/level%02ld.data", str, newLevel);
     else
         sprintf(levelPath, "%s/level%02ld.data", LEVEL_INSTALL_DIR, newLevel);
 
@@@@ -177,7 +177,7 @@@@ int LoadSavedGame(display, window)
     static int bgrnd = 1;
 
 	/* Save the file in home directory - construct path */
-	sprintf(levelPath, "%s/.xboing-saveinfo", GetHomeDir());
+	snprintf(levelPath, sizeof(levelPath), "%s/.xboing-saveinfo", GetHomeDir());
 
     /* Open the save file info for reading */
     if ((saveFile = fopen(levelPath, "r+")) == NULL)
@@@@ -239,7 +239,7 @@@@ int LoadSavedGame(display, window)
     DisplayLevelInfo(display, levelWindow, level);
 
 	/* Load the saved file in home directory - construct path */
-	sprintf(levelPath, "%s/.xboing-savelevel", GetHomeDir());
+	snprintf(levelPath, sizeof(levelPath), "%s/.xboing-savelevel", GetHomeDir());
 
 	/* Read in the saved level data */
     if (ReadNextLevel(display, window, levelPath, True) == False)
@@@@ -283,7 +283,7 @@@@ int SaveCurrentGame(display, window)
 	saveGame.numBullets	= GetNumberBullets();
 
 	/* Save the file in home directory - construct path */
-	sprintf(levelPath, "%s/.xboing-saveinfo", GetHomeDir());
+	snprintf(levelPath, sizeof(levelPath), "%s/.xboing-saveinfo", GetHomeDir());
 
     /* Open the save file info for writing */
     if ((saveFile = fopen(levelPath, "w+")) == NULL)
@@@@ -309,7 +309,7 @@@@ int SaveCurrentGame(display, window)
     	WarningMessage("Cannot close save game info file.");
 
 	/* Save the file in home directory - construct path */
-	sprintf(levelPath, "%s/.xboing-savelevel", GetHomeDir());
+	snprintf(levelPath, sizeof(levelPath), "%s/.xboing-savelevel", GetHomeDir());
 
 	if (SaveLevelDataFile(display, levelPath) == True)
 	{
@
