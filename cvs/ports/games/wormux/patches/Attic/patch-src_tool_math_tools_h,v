head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2008.10.01.11.24.08;	author landry;	state dead;
branches;
next	1.1;

1.1
date	2008.05.28.18.44.33;	author landry;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to wormux 0.8.1.
All previous patches integrated upstream, and newer patches already
commited in svn too. see http://gna.org/bugs/?11751, 11754 and 12340.
@
text
@$OpenBSD: patch-src_tool_math_tools_h,v 1.1 2008/05/28 18:44:33 landry Exp $
--- src/tool/math_tools.h.orig	Wed May 21 14:35:20 2008
+++ src/tool/math_tools.h	Wed May 21 14:36:10 2008
@@@@ -39,31 +39,31 @@@@ T BorneTpl (const T &valeur, const T &min, const T &ma
 }
 
 // Force a value into range [min;max]
-long inline InRange_Long (const long &valeur, const long &min, const long &max) {
+inline long InRange_Long (const long &valeur, const long &min, const long &max) {
   return BorneTpl (valeur, min, max);
 }
-double inline InRange_Double (const double &valeur, const double &min, const double &max) {
+inline double InRange_Double (const double &valeur, const double &min, const double &max) {
   return BorneTpl (valeur, min, max);
 }
 
 // Invert an angle along the vertical axis
-double inline InverseAngle (const double &angle) {
+inline double InverseAngle (const double &angle) {
   if (angle < 0)
     return -M_PI -angle;
   return M_PI - angle;
 }
 
-double inline InverseAngleDeg (const double &angle) {
+inline double InverseAngleDeg (const double &angle) {
   if (angle < 0)
     return -180 - angle;
   return 180 - angle;
 }
 
-double inline InverseAngleRad (const double &angle) { return InverseAngle(angle); }
+inline double InverseAngleRad (const double &angle) { return InverseAngle(angle); }
 
 // Absolute value
-double inline AbsoluteValue (const double x) { return fabs(x); }
-bool inline EqualsZero (const double x) { return AbsoluteValue(x) <= EPS_ZERO; }
+inline double AbsoluteValue (const double x) { return fabs(x); }
+inline bool EqualsZero (const double x) { return AbsoluteValue(x) <= EPS_ZERO; }
 
 #ifdef _MSC_VER
 // MIT licensed from http://opensource.adobe.com/cmath_8hpp-source.html
@


1.1
log
@Update to wormux 0.8, this release adds network play feature.

Rework the way we deal with #define NAN, discussed with upstream.
patch-src_tool_math_tools_h and patch-src_network_network_cpp are already
integrated upstream, and a bug has been reported to integrate
patch-src_map_tileitem_cpp.

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
@

