head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.28
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.26
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.22
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.24
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.20
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.18
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.16
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.14
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.12
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.10
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.8
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2010.06.15.19.04.05;	author landry;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.22.11.38.57;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2007.12.07.15.54.56;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Add a bunch of patch chunks shamelessly stolen from FreeBSD to allow this
to build (and even run!) on gcc4 archs. While here, precise licence marker
and bump PKGNAME.
@
text
@$OpenBSD: patch-cmn_utils_cpp,v 1.2 2010/05/22 11:38:57 espie Exp $
--- cmn/utils.cpp.orig	Wed Mar 19 10:05:12 2003
+++ cmn/utils.cpp	Tue Jun 15 20:42:21 2010
@@@@ -30,18 +30,21 @@@@
 
 // Include Files
 #include "stdafx.h"
-#include <iostream.h>
-#include <limits.h>
-#include <string.h>
-#include <ctype.h>
-#include <fstream.h>
+#include <iostream>
+
+#include <climits>
+#include <cstring>
+#include <cctype>
+#include <fstream>
 #if WIN32
 #include <strstrea.h>
 #endif
 #if X11
-#include <strstream.h>
+#include <strstream>
 #endif
 
+using namespace std;
+
 #ifdef WIN32
 // For file manipulation routines.
 #include <direct.h>
@@@@ -605,7 +608,7 @@@@ void PtrList::write(OutStreamP out) const{
   // Not tested.
   out->write_int(len);
   for (int n = 0; n < len; n++) {
-    out->write_int((int)data[n]);
+    out->write_int((intptr_t)data[n]);
   }
 }
 
@@@@ -761,7 +764,7 @@@@ class HashTable: public IDictionary { (public)
 
 
 private:
-  Bucket* HashTable::_get(int &index,void* key);
+  Bucket* _get(int &index,void* key);
   /* MODIFIES: index */
   /* EFFECTS: Internal helper function.  Return the Bucket containing key
      or NULL if not found.  Set index to the bucket list for key whether
@@@@ -944,7 +947,7 @@@@ Bucket* HashTable::_get(int &index,void* key) {  
 // Pretty crappy hash function, I know.
 // Careful if bucketsNum is a power of 2.
 int HashTable::defaultHash(void* key,int bucketsNum) {
-  return ((unsigned int)key) % bucketsNum;
+  return ((unsigned intptr_t)key) % bucketsNum;
 }
 
 
@


1.2
log
@fix syntax
@
text
@d1 1
a1 1
$OpenBSD: patch-cmn_utils_cpp,v 1.1 2007/12/07 15:54:56 ajacoutot Exp $
d3 1
a3 1
+++ cmn/utils.cpp	Sat May 22 13:36:31 2010
d32 9
d50 9
@


1.1
log
@- update to xevil-2.02r2
- fix HOMEPAGE and MASTER_SITES
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ cmn/utils.cpp	Fri Dec  7 14:27:50 2007
d32 9
@

