head	1.2;
access;
symbols
	deanna_20080117:1.1.1.1 deanna:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.01.27.16.34.32;	author deanna;	state dead;
branches;
next	1.1;

1.1
date	2008.01.18.03.36.32;	author deanna;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.01.18.03.36.32;	author deanna;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- Build from a recent snapshot of the repository at git.zerfleddert.de
  instead of the tarball from laptop.org.  Lets us get rid of many
  patches.

- Enable shared memory (run without -w) since kurt@@'s patch has fixed
  it.

This gives us many bugfixes and goodies such as a fix for the numlock
freeze bug and re-enabling the air crash disaster.  Full changelog at

http://git.zerfleddert.de/cgi-bin/gitweb.cgi/micropolis
@
text
@$OpenBSD: patch-src_sim_g_map_c,v 1.1 2008/01/18 03:36:32 deanna Exp $
--- src/sim/g_map.c.orig	Fri Nov 30 21:49:55 2007
+++ src/sim/g_map.c	Tue Jan 15 20:28:31 2008
@@@@ -406,25 +406,15 @@@@ drawRect(SimView *view, int pixel, int solid,
 	unsigned char *image = 
 	  &data[(line * y) + (x * pixelBytes)];
 
-	if (solid) {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
+	for (i = h; i > 0; i--) {
+	  for (j = w; j > 0; j--) {
+	    if (solid || stipple++ & 1)
 	      *image = pixel;
-	      image++;
-	    }
-	    image += line - w;
+	    image++;
 	  }
-	} else {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
-	      if (stipple++ & 1)
-		*image = pixel;
-	      image++;
-	    }
-	    if (!(w & 1))
-	      stipple++;
-	    image += line - w;
-	  }
+	  if (!(w & 1))
+	    stipple++;
+	  image += line - w;
 	}
       }
       break;
@@@@ -438,26 +428,22 @@@@ drawRect(SimView *view, int pixel, int solid,
 	image = 
 	  &data[(line * y) + x];
 
-	if (solid) {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
-	      *image = pixel;
-	      image++;
+	for (i = h; i > 0; i--) {
+	  for (j = w; j > 0; j--) {
+	    if (solid || stipple++ & 1) {
+	      if (view->x->x_big_endian) {
+	        *image = ((pixel & 0xff) << 8) | ((pixel & 0xff00) >> 8);
+	      } else {
+	        *image = pixel;
+	      }
 	    }
-	    image += line - w;
+	    image++;
 	  }
-	} else {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
-	      if (stipple++ & 1)
-		*image = pixel;
-	      image++;
-	    }
-	    if (!(w & 1))
-	      stipple++;
-	    image += line - w;
-	  }
+	  if (!(w & 1))
+	    stipple++;
+	  image += line - w;
 	}
+
       }
       break;
 
@@@@ -467,41 +453,39 @@@@ drawRect(SimView *view, int pixel, int solid,
 	unsigned char *data = 
 	  (unsigned char *)view->data;
 	unsigned char *image;
-	int bitmapPad = view->x->small_tile_image->bitmap_pad;
-	int rowBytes = view->x->small_tile_image->bytes_per_line;
-	line = rowBytes >> 1; /* Convert from byte offset to short offset */
 	image = 
-	  &data[(line * y) + x];
+	  &data[(line * y) + x * pixelBytes];
 
-	if (solid) {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
-	      *(image++) = (pixel >> 0) & 0xff;
-	      *(image++) = (pixel >> 8) & 0xff;
-	      *(image++) = (pixel >> 16) & 0xff;
-	      if (bitmapPad == 32) {
+	for (i = h; i > 0; i--) {
+	  for (j = w; j > 0; j--) {
+	    if (view->x->x_big_endian) {
+	      if (pixelBytes == 4) {
 	        image++;
 	      }
-	    }
-	    image += line - w;
-	  }
-	} else {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
+	      if (solid || stipple++ & 1) {
+	        *(image++) = (pixel >> 16) & 0xff;
+	        *(image++) = (pixel >> 8) & 0xff;
+	        *(image++) = (pixel >> 0) & 0xff;
+	      } else {
+	        image += 3;
+	      }
+	    } else {
 	      if (stipple++ & 1) {
-		*(image++) = (pixel >> 0) & 0xff;
-		*(image++) = (pixel >> 8) & 0xff;
-		*(image++) = (pixel >> 16) & 0xff;
-	        if (bitmapPad == 32) {
-		  image++;
-		}
+	        *(image++) = (pixel >> 0) & 0xff;
+	        *(image++) = (pixel >> 8) & 0xff;
+	        *(image++) = (pixel >> 16) & 0xff;
+	      } else {
+	        image += 3;
 	      }
+	      if (pixelBytes == 4) {
+	        image++;
+	      }
 	    }
-	    if (!(w & 1)) {
-	      stipple++;
-	    }
-	    image += line - w;
 	  }
+	  if (!(w & 1)) {
+	    stipple++;
+	  }
+	  image += line - w * pixelBytes;
 	}
       }
       break;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import micropolis

Micropolis, Unix Version, (A.K.A. "S*mC*ty"). This game was released
for the Unix platform in or about 1990 and has been modified for
inclusion in the One Laptop Per Child program. Copyright (C) 1989 -
2007 Electronic Arts Inc.

This port is based on patches written by Michael Gernoth, located at
http://git.zerfleddert.de/cgi-bin/gitweb.cgi/micropolis

Help from kurt@@ and ian@@, tested by lots of people, thanks!

ok ian@@, espie@@

@
text
@@
