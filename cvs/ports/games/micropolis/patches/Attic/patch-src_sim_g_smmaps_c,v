head	1.2;
access;
symbols
	deanna_20080117:1.1.1.1 deanna:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.01.27.16.34.32;	author deanna;	state dead;
branches;
next	1.1;

1.1
date	2008.01.18.03.36.32;	author deanna;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.01.18.03.36.32;	author deanna;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- Build from a recent snapshot of the repository at git.zerfleddert.de
  instead of the tarball from laptop.org.  Lets us get rid of many
  patches.

- Enable shared memory (run without -w) since kurt@@'s patch has fixed
  it.

This gives us many bugfixes and goodies such as a fix for the numlock
freeze bug and re-enabling the air crash disaster.  Full changelog at

http://git.zerfleddert.de/cgi-bin/gitweb.cgi/micropolis
@
text
@$OpenBSD: patch-src_sim_g_smmaps_c,v 1.1 2008/01/18 03:36:32 deanna Exp $
--- src/sim/g_smmaps.c.orig	Fri Nov 30 21:49:55 2007
+++ src/sim/g_smmaps.c	Tue Jan 15 20:28:31 2008
@@@@ -84,64 +84,68 @@@@ int DynamicData[32];
       if (tile >= TILE_COUNT) tile -= TILE_COUNT;
 
 
-#if defined(MSDOS) || defined(OSF1) || defined(IS_INTEL)
-
-#define ROW1_8(n) \
+#define LE_ROW1_8(n) \
       l = mem[n]; \
       image[0] = l; \
       image[1] = l >>8; \
       image[2] = l >>16; \
       image += lineBytes;
 
-#define ROW1_16(n) \
+#define LE_ROW1_16(n) \
       memcpy((char *)image, ((char *)mem) + (n * 4 * 2), (3 * 2)); \
       image += lineBytes;
 
-#define ROW1_24(n) \
+#define LE_ROW1_24(n) \
       memcpy((char *)image, ((char *)mem) + (n * 4 * 3), (3 * 3)); \
       image += lineBytes;
 
-#define ROW1_32(n) \
+#define LE_ROW1_32(n) \
       memcpy((char *)image, ((char *)mem) + (n * 4 * 4), (3 * 4)); \
       image += lineBytes;
 
-#else
-
-#define ROW1_8(n) \
+#define BE_ROW1_8(n) \
       l = mem[n]; \
       image[0] = l >>24; \
       image[1] = l >>16; \
       image[2] = l >>8; \
       image += lineBytes;
 
-#define ROW1_16(n) \
+#define BE_ROW1_16(n) \
       l = mem[n]; /* XXX: WRONG. handle depth */ \
       image[0] = l >>24; \
       image[1] = l >>16; \
       image[2] = l >>8; \
       image += lineBytes;
 
-#define ROW1_24(n) \
+#define BE_ROW1_24(n) \
       l = mem[n]; /* XXX: WRONG. handle depth */ \
       image[0] = l >>24; \
       image[1] = l >>16; \
       image[2] = l >>8; \
       image += lineBytes;
 
-#define ROW1_32(n) \
+#define BE_ROW1_32(n) \
       l = mem[n]; /* XXX: WRONG. handle depth */ \
       image[0] = l >>24; \
       image[1] = l >>16; \
       image[2] = l >>8; \
       image += lineBytes;
 
-#endif
+#define LE_ROW3_8 LE_ROW1_8(0) LE_ROW1_8(1) LE_ROW1_8(2)
+#define LE_ROW3_16 LE_ROW1_16(0) LE_ROW1_16(1) LE_ROW1_16(2)
+#define LE_ROW3_24 LE_ROW1_24(0) LE_ROW1_24(1) LE_ROW1_24(2)
+#define LE_ROW3_32 LE_ROW1_32(0) LE_ROW1_32(1) LE_ROW1_32(2)
 
-#define ROW3_8 ROW1_8(0) ROW1_8(1) ROW1_8(2)
-#define ROW3_16 ROW1_16(0) ROW1_16(1) ROW1_16(2)
-#define ROW3_24 ROW1_24(0) ROW1_24(1) ROW1_24(2)
-#define ROW3_32 ROW1_32(0) ROW1_32(1) ROW1_32(2)
+#define BE_ROW3_8 BE_ROW1_8(0) BE_ROW1_8(1) BE_ROW1_8(2)
+#define BE_ROW3_16 BE_ROW1_16(0) BE_ROW1_16(1) BE_ROW1_16(2)
+#define BE_ROW3_24 BE_ROW1_24(0) BE_ROW1_24(1) BE_ROW1_24(2)
+#define BE_ROW3_32 BE_ROW1_32(0) BE_ROW1_32(1) BE_ROW1_32(2)
 
+#define ROW3_8 if (view->x->needs_swap) { BE_ROW3_8 } else { LE_ROW3_8 }
+#define ROW3_16 LE_ROW3_16
+#define ROW3_24 LE_ROW3_24
+#define ROW3_32 LE_ROW3_32
+
 #define ROW3 \
 	  switch (view->x->depth) { \
 		case 1: \
@@@@ -153,8 +157,6 @@@@ int DynamicData[32];
 		  ROW3_16 \
 		  break; \
 		case 24: \
-		  ROW3_24 \
-		  break; \
 		case 32: \
 		  ROW3_32 \
 		  break; \
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import micropolis

Micropolis, Unix Version, (A.K.A. "S*mC*ty"). This game was released
for the Unix platform in or about 1990 and has been modified for
inclusion in the One Laptop Per Child program. Copyright (C) 1989 -
2007 Electronic Arts Inc.

This port is based on patches written by Michael Gernoth, located at
http://git.zerfleddert.de/cgi-bin/gitweb.cgi/micropolis

Help from kurt@@ and ian@@, tested by lots of people, thanks!

ok ian@@, espie@@

@
text
@@
