head	1.4;
access;
symbols
	deanna_20080117:1.1.1.1 deanna:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.05.09.13.01.42;	author espie;	state Exp;
branches;
next	1.3;
commitid	FofH9KkwRtpIk4FP;

1.3
date	2017.04.22.19.49.18;	author espie;	state Exp;
branches;
next	1.2;
commitid	Q8sdUrlidIAMs9MD;

1.2
date	2008.01.27.16.34.32;	author deanna;	state dead;
branches;
next	1.1;

1.1
date	2008.01.18.03.36.32;	author deanna;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.01.18.03.36.32;	author deanna;	state Exp;
branches;
next	;


desc
@@


1.4
log
@use modern idioms for subst, pass X11BASE on the command line.
regen all patches for newer headers.
@
text
@$OpenBSD: patch-src_sim_s_fileio_c,v 1.3 2017/04/22 19:49:18 espie Exp $
Index: src/sim/s_fileio.c
--- src/sim/s_fileio.c.orig
+++ src/sim/s_fileio.c
@@@@ -68,6 +68,13 @@@@
 
 #define NOOP_ON_BE	{ int test = 1; if (!(*(unsigned char*) (&test))) return; }
 
+void DidLoadScenario(void);
+void DidLoadCity(void);
+void DidntLoadCity(char *);
+void DoSaveCityAs(void);
+void DidSaveCity(void);
+void DidntSaveCity(char *msg);
+
 static void
 _swap_shorts(short *buf, int len)
 {
@@@@ -373,6 +380,7 @@@@ int saveFile(char *filename)
 }
 
 
+void
 LoadScenario(short s)
 {
   char *name, *fname;
@@@@ -468,6 +476,7 @@@@ LoadScenario(short s)
 }
 
 
+void
 DidLoadScenario()
 {
   Eval("UIDidLoadScenario");
@@@@ -485,12 +494,12 @@@@ int LoadCity(char *filename)
     CityFileName = (char *)ckalloc(strlen(filename) + 1);
     strcpy(CityFileName, filename);
 
-    if (cp = (char *)rindex(filename, '.'))
+    if ((cp = (char *)rindex(filename, '.')))
       *cp = 0;
 #ifdef MSDOS
-    if (cp = (char *)rindex(filename, '\\'))
+    if ((cp = (char *)rindex(filename, '\\')))
 #else
-    if (cp = (char *)rindex(filename, '/'))
+    if ((cp = (char *)rindex(filename, '/')))
 #endif
       cp++;
     else
@@@@ -514,20 +523,23 @@@@ int LoadCity(char *filename)
 }
 
 
+void
 DidLoadCity()
 {
   Eval("UIDidLoadCity");
 }
 
 
+void
 DidntLoadCity(char *msg)
 {
   char buf[1024];
-  sprintf(buf, "UIDidntLoadCity {%s}", msg);
+  snprintf(buf, 1024, "UIDidntLoadCity {%s}", msg);
   Eval(buf);
 }
 
 
+void
 SaveCity()
 {
   char msg[256];
@@@@ -538,7 +550,7 @@@@ SaveCity()
     if (saveFile(CityFileName))
       DidSaveCity();
     else {
-      sprintf(msg, "Unable to save the city to the file named \"%s\". %s",
+      snprintf(msg, 256, "Unable to save the city to the file named \"%s\". %s",
 	      CityFileName ? CityFileName : "(null)",
 	      errno ? strerror(errno) : "");
       DidntSaveCity(msg);
@@@@ -547,26 +559,30 @@@@ SaveCity()
 }
 
 
+void
 DoSaveCityAs()
 {
   Eval("UISaveCityAs");
 }
 
 
+void
 DidSaveCity()
 {
   Eval("UIDidSaveCity");
 }
 
 
+void
 DidntSaveCity(char *msg)
 {
   char buf[1024];
-  sprintf(buf, "UIDidntSaveCity {%s}", msg);
+  snprintf(buf, 1024, "UIDidntSaveCity {%s}", msg);
   Eval(buf);
 }
 
 
+void
 SaveCityAs(char *filename)
 {
   char msg[256];
@@@@ -578,12 +594,12 @@@@ SaveCityAs(char *filename)
   strcpy(CityFileName, filename);
 
   if (saveFile(CityFileName)) {
-    if (cp = (char *)rindex(filename, '.'))
+    if ((cp = (char *)rindex(filename, '.')))
       *cp = 0;
 #ifdef MSDOS
-    if (cp = (char *)rindex(filename, '\\'))
+    if ((cp = (char *)rindex(filename, '\\')))
 #else
-    if (cp = (char *)rindex(filename, '/'))
+    if ((cp = (char *)rindex(filename, '/')))
 #endif
       cp++;
     else
@@@@ -593,7 +609,7 @@@@ SaveCityAs(char *filename)
     setCityName(cp);
     DidSaveCity();
   } else {
-    sprintf(msg, "Unable to save the city to the file named \"%s\". %s",
+    snprintf(msg, 256, "Unable to save the city to the file named \"%s\". %s",
 	    CityFileName ? CityFileName : "(null)",
 	    errno ? strerror(errno) : "");
     DidntSaveCity(msg);
@


1.3
log
@silence a lot more warnings by adding prototypes, not yet finished
@
text
@d1 4
a4 3
$OpenBSD$
--- src/sim/s_fileio.c.orig	Mon Feb  4 03:52:26 2008
+++ src/sim/s_fileio.c	Sat Apr 22 21:30:19 2017
@


1.2
log
@- Build from a recent snapshot of the repository at git.zerfleddert.de
  instead of the tarball from laptop.org.  Lets us get rid of many
  patches.

- Enable shared memory (run without -w) since kurt@@'s patch has fixed
  it.

This gives us many bugfixes and goodies such as a fix for the numlock
freeze bug and re-enabling the air crash disaster.  Full changelog at

http://git.zerfleddert.de/cgi-bin/gitweb.cgi/micropolis
@
text
@d1 68
a68 5
$OpenBSD: patch-src_sim_s_fileio_c,v 1.1 2008/01/18 03:36:32 deanna Exp $
--- src/sim/s_fileio.c.orig	Fri Nov 30 21:49:55 2007
+++ src/sim/s_fileio.c	Tue Jan 15 20:28:31 2008
@@@@ -62,17 +62,19 @@@@
 #include "sim.h"
d71 15
a85 5
-#if defined(MSDOS) || defined(OSF1) || defined(IS_INTEL)
-
 #define SWAP_SHORTS(a,b)	_swap_shorts(a,b)
 #define SWAP_LONGS(a,b)		_swap_longs(a,b)
 #define HALF_SWAP_LONGS(a,b)	_half_swap_longs(a,b)
d87 3
a89 4
+#define NOOP_ON_BE	{ int test = 1; if (!(*(unsigned char*) (&test))) return; }
+
 static void
 _swap_shorts(short *buf, int len)
d91 3
a93 1
   int i;
d95 2
a96 6
+  NOOP_ON_BE;
+
   /* Flip bytes in each short! */
   for (i = 0; i < len; i++) {	
     *buf = ((*buf & 0xFF) <<8) | ((*buf &0xFF00) >>8);
@@@@ -85,6 +87,8 @@@@ _swap_longs(long *buf, int len)
d98 3
a100 1
   int i;
d102 2
a103 6
+  NOOP_ON_BE;
+
   /* Flip bytes in each long! */
   for (i = 0; i < len; i++) {	
     long l = *buf;
@@@@ -102,6 +106,8 @@@@ _half_swap_longs(long *buf, int len)
d105 5
a109 1
   int i;
a110 18
+  NOOP_ON_BE
+
   /* Flip bytes in each long! */
   for (i = 0; i < len; i++) {	
     long l = *buf;
@@@@ -111,15 +117,6 @@@@ _half_swap_longs(long *buf, int len)
     buf++;
   }
 }
-
-#else
-
-#define SWAP_SHORTS(a, b)
-#define SWAP_LONGS(a, b)
-#define HALF_SWAP_LONGS(a, b)
-
-#endif
-
d112 29
a140 2
 static int
 _load_short(short *buf, int len, FILE *f)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import micropolis

Micropolis, Unix Version, (A.K.A. "S*mC*ty"). This game was released
for the Unix platform in or about 1990 and has been modified for
inclusion in the One Laptop Per Child program. Copyright (C) 1989 -
2007 Electronic Arts Inc.

This port is based on patches written by Michael Gernoth, located at
http://git.zerfleddert.de/cgi-bin/gitweb.cgi/micropolis

Help from kurt@@ and ian@@, tested by lots of people, thanks!

ok ian@@, espie@@

@
text
@@
