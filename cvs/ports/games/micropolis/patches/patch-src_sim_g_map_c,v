head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.2
	OPENBSD_6_2_BASE:1.5
	deanna_20080117:1.1.1.1
	deanna:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2017.05.09.13.01.42;	author espie;	state Exp;
branches;
next	1.4;
commitid	FofH9KkwRtpIk4FP;

1.4
date	2017.04.22.19.49.18;	author espie;	state Exp;
branches;
next	1.3;
commitid	Q8sdUrlidIAMs9MD;

1.3
date	2017.04.20.15.52.29;	author espie;	state Exp;
branches;
next	1.2;
commitid	bZR21d9nt8deHgED;

1.2
date	2008.01.27.16.34.32;	author deanna;	state dead;
branches;
next	1.1;

1.1
date	2008.01.18.03.36.32;	author deanna;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.01.18.03.36.32;	author deanna;	state Exp;
branches;
next	;


desc
@@


1.5
log
@use modern idioms for subst, pass X11BASE on the command line.
regen all patches for newer headers.
@
text
@$OpenBSD: patch-src_sim_g_map_c,v 1.4 2017/04/22 19:49:18 espie Exp $
Index: src/sim/g_map.c
--- src/sim/g_map.c.orig
+++ src/sim/g_map.c
@@@@ -83,24 +83,22 @@@@ short valGrayMap[] = { 
 };
 
 
-int (*mapProcs[NMAPS])();
+void (*mapProcs[NMAPS])();
 
-int drawAll(SimView *view);
-int drawRes(SimView *view);
-int drawCom(SimView *view);
-int drawInd(SimView *view);
-int drawPower(SimView *view);
-int drawLilTransMap(SimView *view);
-int drawPopDensity(SimView *view);
-int drawRateOfGrowth(SimView *view);
-int drawTrafMap(SimView *view);
-int drawPolMap(SimView *view);
-int drawCrimeMap(SimView *view);
-int drawLandMap(SimView *view);
-int drawFireRadius(SimView *view);
-int drawPoliceRadius(SimView *view);
-int drawDynamic(SimView *view);
+void maybeDrawRect(SimView *view, int val,
+	    int x, int y, int w, int h);
 
+void drawPopDensity(SimView *view);
+void drawRateOfGrowth(SimView *view);
+void drawTrafMap(SimView *view);
+void drawPolMap(SimView *view);
+void drawCrimeMap(SimView *view);
+void drawLandMap(SimView *view);
+void drawFireRadius(SimView *view);
+void drawPoliceRadius(SimView *view);
+void ditherMap(SimView *view);
+void drawRect(SimView *view, int pixel, int solid,
+	 int x, int y, int w, int h);
 
 short GetCI(short x)
 {
@@@@ -112,6 +110,7 @@@@ short GetCI(short x)
 }
 
 
+void
 drawPopDensity(SimView *view)
 {
   short x, y;
@@@@ -126,6 +125,7 @@@@ drawPopDensity(SimView *view)
 }
 
 
+void
 drawRateOfGrowth(SimView *view)
 {
   short x, y;
@@@@ -153,6 +153,7 @@@@ drawRateOfGrowth(SimView *view)
 }
 
 
+void
 drawTrafMap(SimView *view)
 {
   short x;
@@@@ -169,6 +170,7 @@@@ drawTrafMap(SimView *view)
 }
 
 
+void
 drawPolMap(SimView *view)
 {
   short x, y;
@@@@ -184,6 +186,7 @@@@ drawPolMap(SimView *view)
 }
 
 
+void
 drawCrimeMap(SimView *view)
 {
   short x, y;
@@@@ -199,6 +202,7 @@@@ drawCrimeMap(SimView *view)
 }
 
 
+void
 drawLandMap(SimView *view)
 {
   short x, y;
@@@@ -213,7 +217,7 @@@@ drawLandMap(SimView *view)
   }
 }
 
-
+void
 drawFireRadius(SimView *view)
 {
   short x, y;
@@@@ -227,7 +231,7 @@@@ drawFireRadius(SimView *view)
   }
 }
 
-
+void
 drawPoliceRadius(SimView *view)
 {
   short x, y;
@@@@ -242,6 +246,7 @@@@ drawPoliceRadius(SimView *view)
 }
 
 
+void
 setUpMapProcs(void)
 {
   mapProcs[ALMAP] = drawAll;
@@@@ -262,6 +267,7 @@@@ setUpMapProcs(void)
 }
 
 
+void
 MemDrawMap(SimView *view)
 {
   (*mapProcs[view->map_state])(view);
@@@@ -275,6 +281,7 @@@@ MemDrawMap(SimView *view)
 }
 
 
+void
 ditherMap(SimView *view)
 {
   int i, x, y, width, height;
@@@@ -346,6 +353,7 @@@@ ditherMap(SimView *view)
 }
 
 
+void
 maybeDrawRect(SimView *view, int val,
 	    int x, int y, int w, int h)
 {
@@@@ -359,6 +367,7 @@@@ maybeDrawRect(SimView *view, int val,
 }
 
 
+void
 drawRect(SimView *view, int pixel, int solid,
 	 int x, int y, int w, int h)
 {
@


1.4
log
@silence a lot more warnings by adding prototypes, not yet finished
@
text
@d1 4
a4 3
$OpenBSD: patch-src_sim_g_map_c,v 1.3 2017/04/20 15:52:29 espie Exp $
--- src/sim/g_map.c.orig	Mon Feb  4 03:52:26 2008
+++ src/sim/g_map.c	Sat Apr 22 21:42:06 2017
@


1.3
log
@declare a shitload of functions void to appease clang who definitely
does not like void returns in non void functions.
@
text
@d1 25
a25 7
$OpenBSD$
--- src/sim/g_map.c.orig	Thu Apr 20 17:26:57 2017
+++ src/sim/g_map.c	Thu Apr 20 17:28:02 2017
@@@@ -100,6 +100,8 @@@@ int drawLandMap(SimView *view);
 int drawFireRadius(SimView *view);
 int drawPoliceRadius(SimView *view);
 int drawDynamic(SimView *view);
d29 11
d42 92
a133 1
@@@@ -346,6 +348,7 @@@@ ditherMap(SimView *view)
d140 8
@


1.2
log
@- Build from a recent snapshot of the repository at git.zerfleddert.de
  instead of the tarball from laptop.org.  Lets us get rid of many
  patches.

- Enable shared memory (run without -w) since kurt@@'s patch has fixed
  it.

This gives us many bugfixes and goodies such as a fix for the numlock
freeze bug and re-enabling the air crash disaster.  Full changelog at

http://git.zerfleddert.de/cgi-bin/gitweb.cgi/micropolis
@
text
@d1 9
a9 6
$OpenBSD: patch-src_sim_g_map_c,v 1.1 2008/01/18 03:36:32 deanna Exp $
--- src/sim/g_map.c.orig	Fri Nov 30 21:49:55 2007
+++ src/sim/g_map.c	Tue Jan 15 20:28:31 2008
@@@@ -406,25 +406,15 @@@@ drawRect(SimView *view, int pixel, int solid,
 	unsigned char *image = 
 	  &data[(line * y) + (x * pixelBytes)];
a10 32
-	if (solid) {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
+	for (i = h; i > 0; i--) {
+	  for (j = w; j > 0; j--) {
+	    if (solid || stipple++ & 1)
 	      *image = pixel;
-	      image++;
-	    }
-	    image += line - w;
+	    image++;
 	  }
-	} else {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
-	      if (stipple++ & 1)
-		*image = pixel;
-	      image++;
-	    }
-	    if (!(w & 1))
-	      stipple++;
-	    image += line - w;
-	  }
+	  if (!(w & 1))
+	    stipple++;
+	  image += line - w;
 	}
       }
       break;
@@@@ -438,26 +428,22 @@@@ drawRect(SimView *view, int pixel, int solid,
 	image = 
 	  &data[(line * y) + x];
d12 3
a14 35
-	if (solid) {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
-	      *image = pixel;
-	      image++;
+	for (i = h; i > 0; i--) {
+	  for (j = w; j > 0; j--) {
+	    if (solid || stipple++ & 1) {
+	      if (view->x->x_big_endian) {
+	        *image = ((pixel & 0xff) << 8) | ((pixel & 0xff00) >> 8);
+	      } else {
+	        *image = pixel;
+	      }
 	    }
-	    image += line - w;
+	    image++;
 	  }
-	} else {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
-	      if (stipple++ & 1)
-		*image = pixel;
-	      image++;
-	    }
-	    if (!(w & 1))
-	      stipple++;
-	    image += line - w;
-	  }
+	  if (!(w & 1))
+	    stipple++;
+	  image += line - w;
 	}
+
       }
       break;
a15 10
@@@@ -467,41 +453,39 @@@@ drawRect(SimView *view, int pixel, int solid,
 	unsigned char *data = 
 	  (unsigned char *)view->data;
 	unsigned char *image;
-	int bitmapPad = view->x->small_tile_image->bitmap_pad;
-	int rowBytes = view->x->small_tile_image->bytes_per_line;
-	line = rowBytes >> 1; /* Convert from byte offset to short offset */
 	image = 
-	  &data[(line * y) + x];
+	  &data[(line * y) + x * pixelBytes];
d17 4
a20 56
-	if (solid) {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
-	      *(image++) = (pixel >> 0) & 0xff;
-	      *(image++) = (pixel >> 8) & 0xff;
-	      *(image++) = (pixel >> 16) & 0xff;
-	      if (bitmapPad == 32) {
+	for (i = h; i > 0; i--) {
+	  for (j = w; j > 0; j--) {
+	    if (view->x->x_big_endian) {
+	      if (pixelBytes == 4) {
 	        image++;
 	      }
-	    }
-	    image += line - w;
-	  }
-	} else {
-	  for (i = h; i > 0; i--) {
-	    for (j = w; j > 0; j--) {
+	      if (solid || stipple++ & 1) {
+	        *(image++) = (pixel >> 16) & 0xff;
+	        *(image++) = (pixel >> 8) & 0xff;
+	        *(image++) = (pixel >> 0) & 0xff;
+	      } else {
+	        image += 3;
+	      }
+	    } else {
 	      if (stipple++ & 1) {
-		*(image++) = (pixel >> 0) & 0xff;
-		*(image++) = (pixel >> 8) & 0xff;
-		*(image++) = (pixel >> 16) & 0xff;
-	        if (bitmapPad == 32) {
-		  image++;
-		}
+	        *(image++) = (pixel >> 0) & 0xff;
+	        *(image++) = (pixel >> 8) & 0xff;
+	        *(image++) = (pixel >> 16) & 0xff;
+	      } else {
+	        image += 3;
 	      }
+	      if (pixelBytes == 4) {
+	        image++;
+	      }
 	    }
-	    if (!(w & 1)) {
-	      stipple++;
-	    }
-	    image += line - w;
 	  }
+	  if (!(w & 1)) {
+	    stipple++;
+	  }
+	  image += line - w * pixelBytes;
 	}
       }
       break;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import micropolis

Micropolis, Unix Version, (A.K.A. "S*mC*ty"). This game was released
for the Unix platform in or about 1990 and has been modified for
inclusion in the One Laptop Per Child program. Copyright (C) 1989 -
2007 Electronic Arts Inc.

This port is based on patches written by Michael Gernoth, located at
http://git.zerfleddert.de/cgi-bin/gitweb.cgi/micropolis

Help from kurt@@ and ian@@, tested by lots of people, thanks!

ok ian@@, espie@@

@
text
@@
