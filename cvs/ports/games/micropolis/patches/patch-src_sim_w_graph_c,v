head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2017.05.09.13.01.42;	author espie;	state Exp;
branches;
next	1.2;
commitid	FofH9KkwRtpIk4FP;

1.2
date	2017.04.22.19.49.18;	author espie;	state Exp;
branches;
next	1.1;
commitid	Q8sdUrlidIAMs9MD;

1.1
date	2017.04.20.15.52.29;	author espie;	state Exp;
branches;
next	;
commitid	bZR21d9nt8deHgED;


desc
@@


1.3
log
@use modern idioms for subst, pass X11BASE on the command line.
regen all patches for newer headers.
@
text
@$OpenBSD: patch-src_sim_w_graph_c,v 1.2 2017/04/22 19:49:18 espie Exp $
Index: src/sim/w_graph.c
--- src/sim/w_graph.c.orig
+++ src/sim/w_graph.c
@@@@ -71,6 +71,8 @@@@ short Graph10Max, Graph120Max;
 Tcl_HashTable GraphCmds;
 int GraphUpdateTime = 100;
 
+void DoResizeGraph(SimGraph *graph, int w, int h);
+void DoUpdateGraph(SimGraph *graph);
 
 #define DEF_GRAPH_FONT	"-Adobe-Helvetica-Bold-R-Normal-*-140-*"
 #define DEF_GRAPH_BG_COLOR	"#b0b0b0"
@@@@ -568,9 +570,10 @@@@ initGraphs(void)
 
 
 /* comefrom: InitWillStuff */
+void
 InitGraphMax(void)
 {
-  register x;
+  register int x;
 
   ResHisMax = 0;
   ComHisMax = 0;
@@@@ -666,6 +669,7 @@@@ DestroyGraph(SimGraph *graph)
 }
 
 
+void
 DoResizeGraph(SimGraph *graph, int w, int h)
 {
   int resize = 0;
@@@@ -698,6 +702,7 @@@@ DoNewGraph(SimGraph *graph)
 
 #define BORDER 5
 
+void
 DoUpdateGraph(SimGraph *graph)
 {
   Display *dpy;
@


1.2
log
@silence a lot more warnings by adding prototypes, not yet finished
@
text
@d1 4
a4 3
$OpenBSD: patch-src_sim_w_graph_c,v 1.1 2017/04/20 15:52:29 espie Exp $
--- src/sim/w_graph.c.orig	Mon Feb  4 03:52:26 2008
+++ src/sim/w_graph.c	Sat Apr 22 19:53:43 2017
@


1.1
log
@declare a shitload of functions void to appease clang who definitely
does not like void returns in non void functions.
@
text
@d1 3
a3 3
$OpenBSD$
--- src/sim/w_graph.c.orig	Thu Apr 20 17:32:00 2017
+++ src/sim/w_graph.c	Thu Apr 20 17:33:14 2017
d13 13
a25 1
@@@@ -666,6 +668,7 @@@@ DestroyGraph(SimGraph *graph)
d33 1
a33 1
@@@@ -698,6 +701,7 @@@@ DoNewGraph(SimGraph *graph)
@

