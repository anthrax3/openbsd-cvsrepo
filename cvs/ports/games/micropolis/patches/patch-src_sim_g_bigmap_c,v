head	1.5;
access;
symbols
	deanna_20080117:1.1.1.1 deanna:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2017.05.09.13.01.42;	author espie;	state Exp;
branches;
next	1.4;
commitid	FofH9KkwRtpIk4FP;

1.4
date	2017.04.22.19.49.18;	author espie;	state Exp;
branches;
next	1.3;
commitid	Q8sdUrlidIAMs9MD;

1.3
date	2017.04.20.15.52.29;	author espie;	state Exp;
branches;
next	1.2;
commitid	bZR21d9nt8deHgED;

1.2
date	2008.01.27.16.34.32;	author deanna;	state dead;
branches;
next	1.1;

1.1
date	2008.01.18.03.36.32;	author deanna;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.01.18.03.36.32;	author deanna;	state Exp;
branches;
next	;


desc
@@


1.5
log
@use modern idioms for subst, pass X11BASE on the command line.
regen all patches for newer headers.
@
text
@$OpenBSD: patch-src_sim_g_bigmap_c,v 1.4 2017/04/22 19:49:18 espie Exp $
Index: src/sim/g_bigmap.c
--- src/sim/g_bigmap.c.orig
+++ src/sim/g_bigmap.c
@@@@ -63,14 +63,16 @@@@
 
 
 int dynamicFilter(int c, int r);
-int WireDrawBeegMapRect(SimView *view, short x, short y, short w, short h);
+void WireDrawBeegMapRect(SimView *view, short x, short y, short w, short h);
 
+void
 drawBeegMaps()
 {
   sim_update_editors();
 }
 
 
+void
 MemDrawBeegMapRect(SimView *view, int x, int y, int w, int h)
 {
   int lineBytes = view->line_bytes;
@@@@ -264,6 +266,7 @@@@ MemDrawBeegMapRect(SimView *view, int x, int y, int w,
 }
 
 
+void
 WireDrawBeegMapRect(SimView *view, short x, short y, short w, short h)
 {
   unsigned short *map;
@


1.4
log
@silence a lot more warnings by adding prototypes, not yet finished
@
text
@d1 4
a4 3
$OpenBSD: patch-src_sim_g_bigmap_c,v 1.3 2017/04/20 15:52:29 espie Exp $
--- src/sim/g_bigmap.c.orig	Mon Feb  4 03:52:26 2008
+++ src/sim/g_bigmap.c	Sat Apr 22 21:31:18 2017
@


1.3
log
@declare a shitload of functions void to appease clang who definitely
does not like void returns in non void functions.
@
text
@d1 4
a4 4
$OpenBSD$
--- src/sim/g_bigmap.c.orig	Thu Apr 20 17:26:02 2017
+++ src/sim/g_bigmap.c	Thu Apr 20 17:26:38 2017
@@@@ -63,7 +63,7 @@@@
d11 1
d14 1
a14 1
@@@@ -71,6 +71,7 @@@@ drawBeegMaps()
d22 1
a22 1
@@@@ -264,6 +265,7 @@@@ MemDrawBeegMapRect(SimView *view, int x, int y, int w,
@


1.2
log
@- Build from a recent snapshot of the repository at git.zerfleddert.de
  instead of the tarball from laptop.org.  Lets us get rid of many
  patches.

- Enable shared memory (run without -w) since kurt@@'s patch has fixed
  it.

This gives us many bugfixes and goodies such as a fix for the numlock
freeze bug and re-enabling the air crash disaster.  Full changelog at

http://git.zerfleddert.de/cgi-bin/gitweb.cgi/micropolis
@
text
@d1 28
a28 29
$OpenBSD: patch-src_sim_g_bigmap_c,v 1.1 2008/01/18 03:36:32 deanna Exp $
--- src/sim/g_bigmap.c.orig	Fri Nov 30 21:49:55 2007
+++ src/sim/g_bigmap.c	Tue Jan 15 20:28:31 2008
@@@@ -169,6 +169,15 @@@@ MemDrawBeegMapRect(SimView *view, int x, int y, int w,
 #define ROW8_16(n) ROW4_16(n) ROW4_16(n+4)
 #define ROW16_16() ROW8_16(0) ROW8_16(8)
 
+#define ROW1_32(n) \
+      memcpy((char *)image, (char *)mem + (4 * 16 * (n)), 4 * 16); \
+      image = (unsigned QUAD *)(((unsigned char *)image) + lineBytes);
+
+#define ROW2_32(n) ROW1_32(n) ROW1_32(n+1)
+#define ROW4_32(n) ROW2_32(n) ROW2_32(n+2)
+#define ROW8_32(n) ROW4_32(n) ROW4_32(n+4)
+#define ROW16_32() ROW8_32(0) ROW8_32(8)
+
 	  switch (view->x->depth) {
 
 	  case 8:
@@@@ -182,6 +191,9 @@@@ MemDrawBeegMapRect(SimView *view, int x, int y, int w,
 
 	  case 24:
 	  case 32:
+	    ROW16_32();
+	    break;
+
 	  default:
 	    /* XXX: handle different depths */
 	    break;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import micropolis

Micropolis, Unix Version, (A.K.A. "S*mC*ty"). This game was released
for the Unix platform in or about 1990 and has been modified for
inclusion in the One Laptop Per Child program. Copyright (C) 1989 -
2007 Electronic Arts Inc.

This port is based on patches written by Michael Gernoth, located at
http://git.zerfleddert.de/cgi-bin/gitweb.cgi/micropolis

Help from kurt@@ and ian@@, tested by lots of people, thanks!

ok ian@@, espie@@

@
text
@@
