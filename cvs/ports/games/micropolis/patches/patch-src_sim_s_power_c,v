head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2017.04.22.19.49.18;	author espie;	state Exp;
branches;
next	1.1;
commitid	Q8sdUrlidIAMs9MD;

1.1
date	2017.04.20.15.52.29;	author espie;	state Exp;
branches;
next	;
commitid	bZR21d9nt8deHgED;


desc
@@


1.2
log
@silence a lot more warnings by adding prototypes, not yet finished
@
text
@$OpenBSD: patch-src_sim_s_power_c,v 1.1 2017/04/20 15:52:29 espie Exp $
--- src/sim/s_power.c.orig	Mon Feb  4 03:52:26 2008
+++ src/sim/s_power.c	Sat Apr 22 20:54:34 2017
@@@@ -68,9 +68,11 @@@@
 int PowerStackNum;
 char PowerStackX[PWRSTKSIZE], PowerStackY[PWRSTKSIZE];
 QUAD MaxPower, NumPower;
+void PullPowerStack(void);
 
 
 /* comefrom: TestForCond DoPowerScan TryGo */
+int
 MoveMapSim (short MDir)
 {
   switch (MDir) {
@@@@ -183,6 +185,7 @@@@ short TestForCond(short TFDir)
 
 
 /* comefrom: Simulate SpecialInit InitSimMemory */
+void
 DoPowerScan()
 {	
   short ADir;
@@@@ -230,6 +233,7 @@@@ DoPowerScan()
 
 
 /* comefrom: DoPowerScan DoSPZone */
+void
 PushPowerStack(void) 
 { 	
   if (PowerStackNum < (PWRSTKSIZE - 2)) {
@@@@ -241,6 +245,7 @@@@ PushPowerStack(void) 
 
 
 /* comefrom: DoPowerScan */
+void
 PullPowerStack(void)
 { 	
   if (PowerStackNum > 0)  {
@


1.1
log
@declare a shitload of functions void to appease clang who definitely
does not like void returns in non void functions.
@
text
@d1 16
a16 4
$OpenBSD$
--- src/sim/s_power.c.orig	Thu Apr 20 17:12:14 2017
+++ src/sim/s_power.c	Thu Apr 20 17:13:15 2017
@@@@ -183,6 +183,7 @@@@ short TestForCond(short TFDir)
d24 16
@

