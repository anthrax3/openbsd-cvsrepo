head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.0.24
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.09.20.12.12.11;	author ajacoutot;	state dead;
branches;
next	1.1;
commitid	g8B2EI5aiFhVw3zv;

1.1
date	2010.06.07.14.48.32;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove ivan; segfaults, development stopped >10 years ago.

ok rpointel@@
@
text
@$OpenBSD: patch-Main_Include_stack_h,v 1.1 2010/06/07 14:48:32 espie Exp $
--- Main/Include/stack.h.orig	Mon Jun  7 16:41:04 2010
+++ Main/Include/stack.h	Mon Jun  7 16:41:09 2010
@@@@ -56,7 +56,7 @@@@ class stackiterator
   stackiterator(stackslot* Slot) : Slot(Slot) { }
   stackiterator& operator++() { Slot = Slot->Next; return *this; }
   stackiterator& operator--() { Slot = Slot->Last; return *this; }
-  truth HasItem() const { return truth(Slot); }
+  truth HasItem() const { return truth(Slot != NULL); }
   item* operator->() const { return Slot->Item; }
   item* operator*() const { return Slot->Item; }
   const stackslot& GetSlot() const { return *Slot; }
@


1.1
log
@fix on LP64 + gcc4  bool(pointer) => bool(pointer != NULL)
@
text
@d1 1
a1 1
$OpenBSD$
@

