head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.24
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.18
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.16
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.14
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.12
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.10
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.8
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.6
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.4
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.2
	OPENBSD_4_1_BASE:1.1.1.1
	ajacoutot_20070204:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.09.20.12.12.11;	author ajacoutot;	state dead;
branches;
next	1.2;
commitid	g8B2EI5aiFhVw3zv;

1.2
date	2010.05.23.15.58.02;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2007.02.04.18.56.38;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.02.04.18.56.38;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove ivan; segfaults, development stopped >10 years ago.

ok rpointel@@
@
text
@$OpenBSD: patch-FeLib_Source_festring_cpp,v 1.2 2010/05/23 15:58:02 espie Exp $
--- FeLib/Source/festring.cpp.orig	Thu Nov 11 18:27:44 2004
+++ FeLib/Source/festring.cpp	Sat May 22 07:28:38 2010
@@@@ -52,7 +52,7 @@@@ festring& festring::operator=(const char* CStr)
     }
 
     if(!REFS(Ptr)--)
-      delete [] &REFS(Ptr);
+      delete [] (Ptr - sizeof(ulong));
   }
 
   Data = const_cast<char*>(CStr);
@@@@ -78,7 +78,7 @@@@ festring& festring::operator=(const festring& Str)
     }
 
     if(!REFS(Ptr)--)
-      delete [] &REFS(Ptr);
+      delete [] (Ptr - sizeof(ulong));
   }
 
   if((Data = StrPtr) && (OwnsData = Str.OwnsData))
@@@@ -116,7 +116,7 @@@@ void festring::CreateOwnData(const char* CStr, sizetyp
 {
   Size = N;
   Reserved = N|FESTRING_PAGE;
-  char* Ptr = 4 + new char[Reserved + 5];
+  char* Ptr = sizeof(ulong) + new char[Reserved + sizeof(ulong) + 1];
   REFS(Ptr) = 0;
   Data = Ptr;
   memcpy(Ptr, CStr, N);
@@@@ -131,13 +131,13 @@@@ void festring::SlowAppend(char Char)
   {
     sizetype OldSize = Size++;
     sizetype NewSize = OldSize + 1;
-    ulong* DeletePtr = 0;
+    char* DeletePtr = 0;
 
     if(OwnsData && !REFS(OldPtr)--)
-      DeletePtr = &REFS(OldPtr);
+      DeletePtr = OldPtr - sizeof(ulong);
 
     Reserved = NewSize|FESTRING_PAGE;
-    char* NewPtr = 4 + new char[Reserved + 5];
+    char* NewPtr = sizeof(ulong) + new char[Reserved + sizeof(ulong) + 1];
     REFS(NewPtr) = 0;
     Data = NewPtr;
     memcpy(NewPtr, OldPtr, OldSize);
@@@@ -150,7 +150,7 @@@@ void festring::SlowAppend(char Char)
   {
     Size = 1;
     Reserved = FESTRING_PAGE;
-    char* Ptr = 4 + new char[FESTRING_PAGE + 5];
+    char* Ptr = sizeof(ulong) + new char[FESTRING_PAGE + sizeof(ulong) + 1];
     REFS(Ptr) = 0;
     Ptr[0] = Char;
     Data = Ptr;
@@@@ -168,13 +168,13 @@@@ void festring::SlowAppend(const char* CStr, sizetype N
     sizetype OldSize = Size;
     sizetype NewSize = OldSize + N;
     Size = NewSize;
-    ulong* DeletePtr = 0;
+    char* DeletePtr = 0;
 
     if(OwnsData && !REFS(OldPtr)--)
-      DeletePtr = &REFS(OldPtr);
+      DeletePtr = OldPtr - sizeof(ulong);
 
     Reserved = NewSize|FESTRING_PAGE;
-    char* NewPtr = 4 + new char[Reserved + 5];
+    char* NewPtr = sizeof(ulong) + new char[Reserved + sizeof(ulong) + 1];
     REFS(NewPtr) = 0;
     Data = NewPtr;
     memcpy(NewPtr, OldPtr, OldSize);
@@@@ -201,11 +201,11 @@@@ void festring::Assign(sizetype N, char C)
       return;
     }
     else
-      delete [] &REFS(Ptr);
+      delete [] (Ptr - sizeof(ulong));
   }
 
   Reserved = N|FESTRING_PAGE;
-  Ptr = 4 + new char[Reserved + 5];
+  Ptr = sizeof(ulong) + new char[Reserved + sizeof(ulong) + 1];
   REFS(Ptr) = 0;
   Data = Ptr;
   memset(Ptr, C, N);
@@@@ -221,7 +221,7 @@@@ void festring::Resize(sizetype N, char C)
 
   if(OldSize < N)
   {
-    ulong* DeletePtr = 0;
+    char* DeletePtr = 0;
 
     if(OwnsData && OldPtr)
     {
@@@@ -233,14 +233,14 @@@@ void festring::Resize(sizetype N, char C)
 	  return;
 	}
 	else
-	  DeletePtr = &REFS(OldPtr);
+	  DeletePtr = OldPtr - sizeof(ulong);
       }
       else
 	--REFS(OldPtr);
     }
 
     Reserved = N|FESTRING_PAGE;
-    NewPtr = 4 + new char[Reserved + 5];
+    NewPtr = sizeof(ulong) + new char[Reserved + sizeof(ulong) + 1];
     REFS(NewPtr) = 0;
     Data = NewPtr;
     memcpy(NewPtr, OldPtr, OldSize);
@@@@ -259,7 +259,7 @@@@ void festring::Resize(sizetype N, char C)
 	--REFS(OldPtr);
 
     Reserved = N|FESTRING_PAGE;
-    NewPtr = 4 + new char[Reserved + 5];
+    NewPtr = sizeof(ulong) + new char[Reserved + sizeof(ulong) + 1];
     REFS(NewPtr) = 0;
     Data = NewPtr;
     memcpy(NewPtr, OldPtr, N);
@@@@ -362,7 +362,7 @@@@ void festring::Erase(sizetype Pos, sizetype Length)
       sizetype NewSize = MoveReq ? OldSize - Length : Pos;
       Size = NewSize;
       Reserved = NewSize|FESTRING_PAGE;
-      char* Ptr = 4 + new char[Reserved + 5];
+      char* Ptr = sizeof(ulong) + new char[Reserved + sizeof(ulong) + 1];
       REFS(Ptr) = 0;
       Data = Ptr;
       OwnsData = true;
@@@@ -388,7 +388,7 @@@@ void festring::Insert(sizetype Pos, const char* CStr, 
     if(Pos < OldSize) // this implies Data != 0
     {
       char* OldPtr = Data;
-      ulong* DeletePtr = 0;
+      char* DeletePtr = 0;
       sizetype NewSize = OldSize + N;
       Size = NewSize;
 
@@@@ -404,14 +404,14 @@@@ void festring::Insert(sizetype Pos, const char* CStr, 
 	    return;
 	  }
 	  else
-	    DeletePtr = &REFS(OldPtr);
+	    DeletePtr = OldPtr - sizeof(ulong);
 	}
 	else
 	  --REFS(OldPtr);
       }
 
       Reserved = NewSize|FESTRING_PAGE;
-      char* NewPtr = 4 + new char[Reserved + 5];
+      char* NewPtr = sizeof(ulong) + new char[Reserved + sizeof(ulong) + 1];
       REFS(NewPtr) = 0;
       Data = NewPtr;
       memcpy(NewPtr, OldPtr, Pos);
@


1.2
log
@template ctor is A<T>::A()
both gcc3 and 4 agree
@
text
@d1 1
a1 1
$OpenBSD: patch-FeLib_Source_festring_cpp,v 1.1.1.1 2007/02/04 18:56:38 ajacoutot Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 2
+++ FeLib/Source/festring.cpp	Thu Jan 11 15:53:34 2007
@@@@ -52,7 +52,7 @@@@ festring& festring::operator=(const char
d13 1
a13 1
@@@@ -78,7 +78,7 @@@@ festring& festring::operator=(const fest
d22 1
a22 1
@@@@ -116,7 +116,7 @@@@ void festring::CreateOwnData(const char*
d57 1
a57 1
@@@@ -168,13 +168,13 @@@@ void festring::SlowAppend(const char* CS
d74 1
a74 1
@@@@ -201,11 +201,11 @@@@ void festring::Assign(sizetype N, char C
d88 1
a88 1
@@@@ -221,7 +221,7 @@@@ void festring::Resize(sizetype N, char C
d97 1
a97 1
@@@@ -233,14 +233,14 @@@@ void festring::Resize(sizetype N, char C
d114 1
a114 1
@@@@ -259,7 +259,7 @@@@ void festring::Resize(sizetype N, char C
d123 1
a123 1
@@@@ -362,7 +362,7 @@@@ void festring::Erase(sizetype Pos, sizet
d132 1
a132 1
@@@@ -388,7 +388,7 @@@@ void festring::Insert(sizetype Pos, cons
d141 1
a141 1
@@@@ -404,14 +404,14 @@@@ void festring::Insert(sizetype Pos, cons
@


1.1.1.1
log
@Import ivan-0.50.

Iter Vehemens ad Necem (IVAN) is a graphical roguelike game.
It features advanced bodypart and material handling, multi-colored
lighting and, above all, deep gameplay.


- thanks to Martynas Venckus <martynas at altroot dot org> and steven@@ for
their patches to make this work under amd64.
- note that this game does not work under sparc64.

"looks reasonable" steven@@
@
text
@@
