head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.56
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.54
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.50
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.52
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.48
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.46
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.44
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.42
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.40
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.38
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.36
	OPENBSD_5_0:1.4.0.34
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.32
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.30
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.28
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.26
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.24
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_TRACKING_SWITCH:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2003.06.23.19.11.10;	author sturm;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.28.15.13.03;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.21.00.36.06;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2000.04.16.21.53.28;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@new user naming schema

bump PKGNAME where necessary

rohee@@ ok leafnode
"you don't have to wait for oks" pval@@
@
text
@#!/bin/sh
# installation script for Japanese Wnn 4.2

DICDIR=/var/dict/Wnn

yesno() {
    local question answer

    question=$1
    while :; do
    	read answer?"${question} (y/n) [y]"
	case "${answer}" in
	[Nn]*)		return 1;;
	[Yy]*)		return 0;;
	"")		return 0;;
	esac
	echo "Please answer yes or no."
    done
}

create_wnn() {
	local uname begin gid
	uname='_wnn'
	begin=517
	while [ X`id -u $begin 2>/dev/null` == X$begin ]
	do
		begin=`expr $begin + 1`
	done
	echo "Creating user _wnn ($begin)"
	gid=`id -g bin`
	chpass -a "_wnn:*:${begin}:${gid}::::Wnn server:/root:/sbin/nologin" || exit 1
}
	
for i in japanese chinese korean
do
    case "$i" in
    japanese)
	    name=ja
	    base="$DICDIR/ja_JP"
	    sys_dirs="$DICDIR/ja_JP/pubdic $DICDIR/ja_JP/wnncons"
	    wnntouch=/usr/local/bin/wnntouch
	    wnnserver=/usr/local/bin/jserver;;
    chinese)
	    name=zh
	    base="$DICDIR/zh_CN $DICDIR/zh_TW"
	    sys_dirs="$DICDIR/zh_CN/sys $DICDIR/zh_TW/sys"
	    wnntouch=/usr/local/bin/cwnntouch
	    wnnserver=/usr/local/bin/cserver;;
    korean)
	    name=ko
	    base="$DICDIR/ko_KR"
	    sys_dirs="$DICDIR/ko_KR/sys"
	    wnntouch=/usr/local/bin/kwnntouch
	    wnnserver=/usr/local/bin/kserver;;
    esac
# no base package present yet, bail out
    [ -e $wnntouch ] || continue

    if id -u _wnn >/dev/null 2>/dev/null
    then
	echo "So, user _wnn already exists !"
    else
	echo "You need a user named _wnn"
	if yesno "Would you like to create it automatically now"; then
	    create_wnn
	else
	    echo "You still need to run /usr/local/lib/wnn/install-script"
	    echo "to finish Wnn installation later"
	    exit 0
	fi
    fi

    chown _wnn $wnnserver
    chmod u+s $wnnserver

    # base directory not yet present, bail out

    for dir in $base; do
    	if [ -d $dir ]; then
	    if [ `ls -ld $dir |awk '{print $3}'` == _wnn ]; then
	    # already installed
		continue 2
	    else
		chown -R _wnn $dir
	    fi
	else
	    echo "For a complete server, you need $name-Wnn-dict-4.2 as well"
	    continue 2
	fi
    done

    for dir in $sys_dirs; do
      $wnntouch $dir/*
    done

    for dir in $base; do
      if [ ! -d $dir/usr ]; then
	mkdir -p $dir/usr
      fi
      chown _wnn $dir/usr
      chmod u+w $dir/usr
    done
done
@


1.3
log
@The only reason for Wnn-data was the inability to do subpackage
dependencies. This no longer holds.
@
text
@d23 2
a24 2
	uname='wnn'
	begin=128
d29 1
a29 1
	echo "Creating user wnn ($begin)"
d31 1
a31 1
	chpass -a "wnn:*:${begin}:${gid}::::Wnn server:/root:/sbin/nologin" || exit 1
d59 1
a59 1
    if id -u wnn >/dev/null 2>/dev/null
d61 1
a61 1
	echo "So, user wnn already exists !"
d63 1
a63 1
	echo "You need a user named wnn"
d73 1
a73 1
    chown wnn $wnnserver
d80 1
a80 1
	    if [ `ls -ld $dir |awk '{print $3}'` == wnn ]; then
d84 1
a84 1
		chown -R wnn $dir
d100 1
a100 1
      chown wnn $dir/usr
@


1.2
log
@Prepare to add chinese and korean to multi-package framework
@
text
@d4 1
a4 1
PKG_PREFIX=${PREFIX:-/usr/local}
d34 38
d73 2
d76 1
a76 14
echo ""
if id -u wnn >/dev/null 2>/dev/null
then
    echo "So, user wnn already exists !"
else
    echo "You need a user named wnn"
    if yesno "Would you like to create it automatically now"; then
	create_wnn
    else
	echo "You still need to run $PKG_PREFIX/lib/wnn/install-script"
	echo "to finish ja-Wnn installation later"
	exit 0
    fi
fi
d78 13
a90 5
sys_dirs="${PKG_PREFIX}/lib/wnn/ja_JP/dic/pubdic ${PKG_PREFIX}/lib/wnn/ja_JP/dic/wnncons"
usr_dirs=${PKG_PREFIX}/lib/wnn/ja_JP/dic/usr
wnntouch=${PKG_PREFIX}/bin/wnntouch
wnnserver=${PKG_PREFIX}/bin/jserver
wnnname=Wnn
d92 3
a94 3
for dir in $sys_dirs; do
  $wnntouch $dir/*
done
d96 7
a102 5
for dir in $usr_dirs; do
  if [ ! -d $dir ]; then
    mkdir -p $dir
  fi
  chown wnn $dir
a103 3
chmod -R u+w $dir
chown wnn $wnnserver
chmod u+s $wnnserver
@


1.1
log
@Loads of changes, not quite finished yet.

- format man pages using new jgroff, so that we can install a full set
of documentation.
- move INSTALL script into a separate script, so that adding a new user
need not be done at the time of INSTALL.
- add a few strlcpy to fix a few holes. This stuff is rather bad, though.
- use terminfo instead of termcap, for better keycap names, fixing quite
a few bugs that made it impossible to build that version along the way...
- move scripts into /usr/local/bin instead of /usr/local/bin/Wnn4.

- use @@comment no checksum
in packing list, even though pkg_add does not support that yet.
Not quite completely ready, but getting there...
@
text
@@

