head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.1.0.8
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.6
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.04.29.14.31.40;	author espie;	state Exp;
branches;
next	1.1;
commitid	BANaREjfB2FZ9POp;

1.1
date	2015.07.25.16.47.12;	author espie;	state Exp;
branches;
next	;
commitid	lfUoLFpbeIFyf3Ry;


desc
@@


1.2
log
@fixes for clang: don't compile a clone of getopt.
while there, fix system includes, implicit ints, and void main.
@
text
@$OpenBSD: patch-Xwnmo_xwnmo_killxwnmo_c,v 1.1 2015/07/25 16:47:12 espie Exp $
--- Xwnmo/xwnmo/killxwnmo.c.orig
+++ Xwnmo/xwnmo/killxwnmo.c
@@@@ -33,6 +33,9 @@@@ static char rcs_id[] = "$Id: killxwnmo.c,v 1.3 1994/10
  *				kuwa%omron.co.jp@@uunet.uu.net
  */				
 #include <signal.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
 #include <pwd.h>
 #include "wnn_os.h"
 #include <X11/Xlib.h>
@@@@ -48,7 +51,7 @@@@ signal_catch()
     exit(1);
 }
 
-void
+int
 main(argc, argv)
 int argc;
 char **argv;
@@@@ -59,7 +62,6 @@@@ char **argv;
     Atom atom_im, prop_id = (Atom)0;
     char uname[128], *p;
     int force = 0;
-    extern int getuid();
 
     if (argc > 1) {
 	if (argv[1][0] == '-' && argv[1][1] == '9') force = 1;
@


1.1
log
@move to new auth checks. Add "a few" includes to placate a lot of warnings.
(and bump affected packages of course)
@
text
@d1 4
a4 4
$OpenBSD$
--- Xwnmo/xwnmo/killxwnmo.c.orig	Tue Oct  4 00:17:35 1994
+++ Xwnmo/xwnmo/killxwnmo.c	Sat Jul 25 17:01:22 2015
@@@@ -33,6 +33,8 @@@@ static char rcs_id[] = "$Id: killxwnmo.c,v 1.3 1994/10
d10 1
d14 1
a14 1
@@@@ -48,7 +50,7 @@@@ signal_catch()
d23 8
@

