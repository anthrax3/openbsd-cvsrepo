head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.72
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.70
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.68
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.64
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.66
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.62
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.60
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.58
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.56
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.54
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.52
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.50
	OPENBSD_5_0:1.1.1.1.0.48
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.46
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.44
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.42
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.40
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.38
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.36
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.34
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.32
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.30
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.28
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.26
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.24
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.22
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.20
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.18
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.16
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.14
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.12
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.10
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.8
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	SUZUKI:1.1.1.1
	kinput2:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2000.04.26.00.43.13;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.26.00.43.13;	author espie;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD: update-patches,v 1.1 2000/04/19 11:16:27 espie Exp $
--- lib/IMProto.c.orig	Thu May 27 01:55:23 1999
+++ lib/IMProto.c	Wed Apr 26 02:18:47 2000
@@@@ -298,7 +298,7 @@@@ Cardinal *num_args;
 #else
 	(void)chmod(UNIX_SOCKET_DIR, 0777);
 #endif
-	(void)sprintf(path, "%s/%s", UNIX_SOCKET_DIR,
+	(void)snprintf(path, sizeof(path), "%s/%s", UNIX_SOCKET_DIR,
 		      DisplayString(XtDisplay(new)));
 	/*
 	 * Omit screen number and the preceding period.
@@@@ -312,8 +312,8 @@@@ Cardinal *num_args;
 	/*
 	 * Append language part.
 	 */
-	(void)strcat(path, "-");
-	(void)strcat(path, ipw->imp.language);
+	(void)strlcat(path, "-", sizeof(path));
+	(void)strlcat(path, ipw->imp.language, sizeof(path));
 	/*
 	 * Change every ':' in the path name to '_', since ':' is not
 	 * included in POSIX Portable Filename Character Set.
@@@@ -454,8 +454,8 @@@@ IMProtocolWidget ipw;
 
     TRACE(("IMProtocolWidget:getAtoms()\n"));
 
-    (void)strcpy(buf, "@@server=");
-    (void)strcat(buf, ipw->imp.server_name);
+    (void)strlcpy(buf, "@@server=", sizeof(buf));
+    (void)strlcat(buf, ipw->imp.server_name, sizeof(buf));
 #define MAKEATOM(s)	XInternAtom(dpy, s, False)
     ipw->imp.server_atom = MAKEATOM(buf);
     ipw->imp.ctext_atom = MAKEATOM("COMPOUND_TEXT");
@@@@ -599,8 +599,8 @@@@ int *formatp;
 	char buf[1024];
 
 	TRACE(("target is \"LOCALES\"\n"));
-	(void)strcpy(buf, "@@locale=");
-	(void)strcat(buf, ipw->imp.locales);
+	(void)strlcpy(buf, "@@locale=", sizeof(buf));
+	(void)strlcat(buf, ipw->imp.locales, sizeof(buf));
 	TRACE(("\ttype: STRING, value: %s\n", buf));
 	/*
 	 * The protocol spec is unclear on the type of the
@@@@ -621,27 +621,27 @@@@ int *formatp;
 
 	XmuGetHostname(hostname, 256);
 
-	(void)strcpy(buf, "@@transport=");
+	(void)strlcpy(buf, "@@transport=", sizeof(buf));
 
 #ifdef IM_X_TRANSPORT
 	if (ipw->imp.use_x_transport) {
-	    (void)strcat(buf, "X/,");
+	    (void)strlcat(buf, "X/,", sizeof(buf));
 	}
 #endif /* IM_X_TRANSPORT */
 
 #ifdef IM_TCP_TRANSPORT
 	if (ipw->imp.use_tcp_transport) {
 	    char t_buf[1024];
-	    (void)sprintf(t_buf, "tcp/%s:%d,", hostname, ipw->imp.tcp_port);
-	    (void)strcat(buf, t_buf);
+	    (void)snprintf(t_buf, sizeof(t_buf), "tcp/%s:%d,", hostname, ipw->imp.tcp_port);
+	    (void)strlcat(buf, t_buf, sizeof(buf));
 	}
 #endif /* IM_TCP_TRANSPORT */
 
 #ifdef IM_UNIX_TRANSPORT
 	if (ipw->imp.use_unix_transport) {
 	    char u_buf[1024];
-	    (void)sprintf(u_buf, "local/%s:%s,", hostname, ipw->imp.unix_path);
-	    (void)strcat(buf, u_buf);
+	    (void)snprintf(u_buf, sizeof(u_buf), "local/%s:%s,", hostname, ipw->imp.unix_path);
+	    (void)strlcat(buf, u_buf, sizeof(buf));
 	}
 #endif /* IM_UNIX_TRANSPORT */
 
@


1.1.1.1
log
@X input method for japanese.
Port by Hitoshi Suzuki <sigh@@kuzirabekon.econ.nagasaki-u.ac.jp>, 
with a few flavor tricks by me.

Domo arigato, Suzuki san !
@
text
@@
