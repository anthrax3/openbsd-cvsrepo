head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.8
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.4
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.24
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.22
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.20
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.18
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.16
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.14
	OPENBSD_5_0:1.6.0.12
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.10
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.8
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.6
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.4
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.5.0.6
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.4
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	kevlo_2005-Jan-14:1.1.1.1
	kevlo:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2015.01.18.03.13.51;	author naddy;	state Exp;
branches;
next	1.6;
commitid	INAcawJqik7lWSVj;

1.6
date	2008.12.21.11.51.01;	author kevlo;	state Exp;
branches;
next	1.5;

1.5
date	2007.04.05.15.38.08;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2005.06.09.01.19.36;	author kevlo;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.13.01.27.42;	author kevlo;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.18.02.20.55;	author kevlo;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.14.03.02.16;	author kevlo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.14.03.02.16;	author kevlo;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Drop remaining MD5/RMD160/SHA1 checksums.
@
text
@SHA256 (algotutor-0.8.6.tgz) = eOR3l3nlp174QZxmDMy+n81KrGebvUeOgBM/+RVBSIY=
SIZE (algotutor-0.8.6.tgz) = 176802
@


1.6
log
@update to 0.8.6

ok ajacoutot@@
@
text
@a0 3
MD5 (algotutor-0.8.6.tgz) = WLhnyzGe0+b4sL1DS02RRQ==
RMD160 (algotutor-0.8.6.tgz) = 3zqWNgBJ763xq7uyhyRxzztIldo=
SHA1 (algotutor-0.8.6.tgz) = mrVnGnZQi8cIq2gGCgKB8BzIHro=
@


1.5
log
@base64 distinfo with SHA256
@
text
@d1 5
a5 5
MD5 (algotutor-0.8.5.tgz) = v2nev3YkMsU1V52slNsO/A==
RMD160 (algotutor-0.8.5.tgz) = 4BPKrVrqtHPU5gVpQIa+EfJMHHI=
SHA1 (algotutor-0.8.5.tgz) = ngSojWIrSl1pv0yJNKHD9pb3u1k=
SHA256 (algotutor-0.8.5.tgz) = FSAsokOb/ZXo8JWrvjzYoexP3gAxFsoZcj64aKEzknw=
SIZE (algotutor-0.8.5.tgz) = 106432
@


1.4
log
@upgrade to algotutor 0.8.5
@
text
@d1 4
a4 3
MD5 (algotutor-0.8.5.tgz) = bf69debf762432c535579dac94db0efc
RMD160 (algotutor-0.8.5.tgz) = e013caad5aeab473d4e605694086be11f24c1c72
SHA1 (algotutor-0.8.5.tgz) = 9e04a88d622b4a5d69bf4c8934a1c3f696f7bb59
@


1.3
log
@upgrade to algotutor 0.8.2
@
text
@d1 4
a4 4
MD5 (algotutor-0.8.2.tgz) = 22e39de94c8c40b25a53b9a90735d887
RMD160 (algotutor-0.8.2.tgz) = 67cc0e6afd82c1d62c4ac3d4c446d65591aa1c3d
SHA1 (algotutor-0.8.2.tgz) = 2da1d4b7cf92e82df79e485471478a33263cec51
SIZE (algotutor-0.8.2.tgz) = 104425
@


1.2
log
@upgrade to 0.7
@
text
@d1 4
a4 4
MD5 (algotutor-0.7.tgz) = b0e6f2fd093c587a77536934e8b7cdaa
RMD160 (algotutor-0.7.tgz) = cfd505d3b05510534ed12f5fb3d8ee09c2003718
SHA1 (algotutor-0.7.tgz) = d83be8055c20a00528532f708154a46cbca32340
SIZE (algotutor-0.7.tgz) = 102620
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
MD5 (algotutor-0.6.2.tgz) = ad85c604ab689fa4b4c38daf35803935
RMD160 (algotutor-0.6.2.tgz) = b92e3f2da48183b59a3dbc77c44a8821a02ad37e
SHA1 (algotutor-0.6.2.tgz) = 7ffb85436d69595fd95437050677274aabd9d3cf
SIZE (algotutor-0.6.2.tgz) = 110169
@


1.1.1.1
log
@Initial import of algotutor 0.6.2

Algotutor is an interactive program for observing the intermediate
steps of algorithms. The target audience is computer science students
and/or anyone who studies algorithms and/or data structures.
@
text
@@
