head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.40
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.38
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.34
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.32
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.30
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.28
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.26
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.24
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.22
	OPENBSD_5_0:1.1.1.1.0.20
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.18
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.14
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.12
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.10
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.8
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.6
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.4
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.2
	OPENBSD_4_1_BASE:1.1.1.1
	kili_20070129:1.1.1.1
	kili:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2007.01.29.20.14.29;	author kili;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.01.29.20.14.29;	author kili;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

# Those tests are supposed to bail out with exit code 2 (confirmed by
# upstream).

--- tests/agrep/exitstatus.ok.orig	Fri Dec  8 20:07:03 2006
+++ tests/agrep/exitstatus.ok	Thu Jan  4 15:12:26 2007
@@@@ -524,65 +524,64 @@@@ Exit status 1.
 Exit status 1.
 #### TEST: agrep  -d .* dummy exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep  -d .* dummy < exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -c -d .* dummy exitstatus.in
-exitstatus.in:0
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -c -d .* dummy < exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -H -d .* dummy exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -H -d .* dummy < exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -l -d .* dummy exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -l -d .* dummy < exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -n -d .* dummy exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -n -d .* dummy < exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -s -d .* dummy exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -s -d .* dummy < exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -M -d .* dummy exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -M -d .* dummy < exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep --show-position -d .* dummy exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep --show-position -d .* dummy < exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep --color -d .* dummy exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep --color -d .* dummy < exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -H -n -s --color --show-position -d .* dummy exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep -H -n -s --color --show-position -d .* dummy < exitstatus.in
 
-Exit status 1.
+Exit status 2.
 #### TEST: agrep  -d {1 dummy exitstatus.in
 
 Exit status 2.
@


1.1.1.1
log
@TRE is a lightweight, robust, and efficient POSIX compliant regexp
matching library with some exciting features such as approximate
(fuzzy) matching. It includes a version of the agrep (approximate
grep) command line tool for approximate regexp matching in the style
of grep.

ok, simon@@
@
text
@@
