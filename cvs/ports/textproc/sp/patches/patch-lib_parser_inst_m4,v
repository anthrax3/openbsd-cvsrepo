head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.14
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.10
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.12
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.30
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.28
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.26
	OPENBSD_5_0:1.3.0.24
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.22
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.20
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.18
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.16
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.14
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.12
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.10
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.8
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.1.0.6
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.05.06.13.53.40;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.14.15.49.48;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.15.14.54.24;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.03.17.02.33;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@if the filesystem is fast enough, there is a race condition while building
also annotate "force" targets as phony to make sure they actually get
built.
@
text
@$OpenBSD: patch-lib_parser_inst_m4,v 1.3 2006/01/14 15:49:48 espie Exp $
--- lib/parser_inst.m4.orig	Thu Oct 14 09:26:20 1999
+++ lib/parser_inst.m4	Mon May  6 15:50:18 2013
@@@@ -164,9 +164,7 @@@@ __instantiate(Vector<NamedResourceTable<Entity> >)
 __instantiate(Vector<ContentModelAmbiguity>)
 __instantiate(Vector<Transition>)
 __instantiate(Vector<LeafContentToken*>)
-#if 0
 __instantiate(Vector<size_t>)
-#endif
 __instantiate(Vector<unsigned int>)
 
 __instantiate(NamedTable<Id>)
@


1.3
log
@fix instantiation issue now that size_t != unsigned int everywhere
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_parser_inst_m4,v 1.2 2004/05/15 14:54:24 naddy Exp $
d3 2
a4 2
+++ lib/parser_inst.m4	Sat Jan 14 16:45:13 2006
@@@@ -164,9 +164,7 @@@@ __instantiate(Vector<NamedResourceTable<
@


1.2
log
@check for __LP64__ rather than enumerating individual LP64 archs
and forgetting, say, amd64
@
text
@d1 4
a4 4
$OpenBSD: patch-lib_parser_inst_m4,v 1.1 2003/02/03 17:02:33 naddy Exp $
--- lib/parser_inst.m4.orig	1999-10-14 09:26:20.000000000 +0200
+++ lib/parser_inst.m4	2004-05-15 16:48:34.000000000 +0200
@@@@ -164,7 +164,7 @@@@ __instantiate(Vector<NamedResourceTable<
a8 1
+#if defined(__LP64__)
d10 1
a10 1
 #endif
d12 2
@


1.1
log
@Fix build on our 64-bit archs.
@
text
@d1 3
a3 3
$OpenBSD$
--- lib/parser_inst.m4.orig	Mon Feb  3 16:49:27 2003
+++ lib/parser_inst.m4	Mon Feb  3 16:49:54 2003
d9 1
a9 1
+#if defined(__alpha__) || defined(__sparc64__)
@

