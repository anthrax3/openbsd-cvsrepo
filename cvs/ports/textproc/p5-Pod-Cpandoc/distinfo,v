head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.10
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.8
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.6
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.4
	OPENBSD_5_8_BASE:1.1.1.1
	afresh1_20150703:1.1.1.1
	afresh1:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.07.03.19.23.08;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	vbmKu4lkgUX8vM9S;

1.1.1.1
date	2015.07.03.19.23.08;	author afresh1;	state Exp;
branches;
next	;
commitid	vbmKu4lkgUX8vM9S;


desc
@@



1.1
log
@Initial revision
@
text
@SHA256 (Pod-Cpandoc-0.15.tar.gz) = gv09KNFcYvIY0zmEasydIVoAj4lZw5GRWPKUWgwZ28w=
SIZE (Pod-Cpandoc-0.15.tar.gz) = 23627
@


1.1.1.1
log
@Import textproc/p5-Pod-Cpandoc 0.15

"cpandoc" is a perl script that acts like "perldoc" except that if it
would have bailed out with "No documentation found for
"Uninstalled::Module"", it will instead scrape a CPAN index for the
module's documentation.

One important feature of "cpandoc" is that it *only* scrapes the live
index if you do not have the module installed. So if you use "cpandoc"
on a module you already have installed, then it will just read the
already-installed documentation. This means that the version of the
documentation matches up with the version of the code you have. As a
fringe benefit, "cpandoc" will be fast for modules you've installed. :)

OK sthen@@

@
text
@@
