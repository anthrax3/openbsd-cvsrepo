head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2;
locks; strict;
comment	@# @;


1.2
date	2014.12.02.12.22.05;	author jasper;	state Exp;
branches
	1.2.2.1;
next	1.1;
commitid	IPw0Ej4LY1x3pF7R;

1.1
date	2014.12.01.17.35.34;	author sthen;	state Exp;
branches;
next	;
commitid	uLgiYwhmgn3QUzK5;

1.2.2.1
date	2014.12.02.12.23.44;	author jasper;	state Exp;
branches;
next	;
commitid	utpl3txMHVc17fqg;


desc
@@


1.2
log
@add CVE number
@
text
@$OpenBSD: patch-wordole_c,v 1.1 2014/12/01 17:35:34 sthen Exp $

Prevent overflow of atPPSlist[].szName[] (CVE-2014-8123)
http://seclists.org/oss-sec/2014/q4/870

--- wordole.c.orig	Fri Aug 26 20:49:57 2005
+++ wordole.c	Mon Dec  1 17:06:15 2014
@@@@ -259,6 +259,11 @@@@ bGetPPS(FILE *pFile,
 		}
 		tNameSize = (size_t)usGetWord(0x40, aucBytes);
 		tNameSize = (tNameSize + 1) / 2;
+		if (tNameSize >= sizeof(atPPSlist[0].szName)) {
+			werr(0, "PPS %d appears to be invalid.", iIndex);
+			atPPSlist = xfree(atPPSlist);
+			return FALSE;
+		}
 		vName2String(atPPSlist[iIndex].szName, aucBytes, tNameSize);
 		atPPSlist[iIndex].ucType = ucGetByte(0x42, aucBytes);
 		if (atPPSlist[iIndex].ucType == 5) {
@


1.2.2.1
log
@- security fix for CVE-2014-8123
- reset maintainer
@
text
@@


1.1
log
@patch antiword to fix a buffer overflow in antiword found by american fuzzy lop
sync plist etc while there, reset maintainer address (account no longer active)
ok benoit@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
Prevent overflow of atPPSlist[].szName[]
@

