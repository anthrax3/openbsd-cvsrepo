head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.4
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.2
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.9
date	2017.02.06.22.39.05;	author sthen;	state Exp;
branches;
next	1.8;
commitid	xEraAPnHyqawl4H4;

1.8
date	2017.01.12.23.39.53;	author sthen;	state Exp;
branches;
next	1.7;
commitid	AAriHPkAcJr5uEmM;

1.7
date	2015.12.15.22.03.59;	author sthen;	state Exp;
branches;
next	1.6;
commitid	YVifzObgrxC3tP3Z;

1.6
date	2014.08.10.19.50.37;	author sthen;	state Exp;
branches;
next	1.5;
commitid	GwLEv8A5CXHwEolj;

1.5
date	2014.07.15.23.33.48;	author sthen;	state Exp;
branches;
next	1.4;
commitid	1DVGqIbJU1ebUv5d;

1.4
date	2014.03.19.02.15.46;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2014.01.16.09.16.31;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2013.11.09.15.02.14;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.09.05.12.38.36;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.9
log
@update to calibre-2.78.0
@
text
@$OpenBSD: patch-src_calibre_linux_py,v 1.8 2017/01/12 23:39:53 sthen Exp $

- skip uninstaller parts

--- src/calibre/linux.py.orig	Fri Jan 27 03:46:08 2017
+++ src/calibre/linux.py	Sun Feb  5 13:34:05 2017
@@@@ -702,18 +702,6 @@@@ class PostInstall:
             self.setup_completion()
         if islinux or isbsd:
             self.setup_desktop_integration()
-        self.create_uninstaller()
-
-        from calibre.utils.config import config_dir
-        if os.path.exists(config_dir):
-            os.chdir(config_dir)
-            if islinux or isbsd:
-                for f in os.listdir('.'):
-                    if os.stat(f).st_uid == 0:
-                        import shutil
-                        shutil.rmtree(f) if os.path.isdir(f) else os.unlink(f)
-                if os.stat(config_dir).st_uid == 0:
-                    os.rmdir(config_dir)
 
         if warn is None and self.warnings:
             self.info('\n\nThere were %d warnings\n'%len(self.warnings))
@


1.8
log
@update to calibre-2.76.0
@
text
@d1 1
a1 1
$OpenBSD: patch-src_calibre_linux_py,v 1.7 2015/12/15 22:03:59 sthen Exp $
d5 3
a7 3
--- src/calibre/linux.py.orig	Fri Dec 30 03:16:06 2016
+++ src/calibre/linux.py	Thu Jan 12 23:27:17 2017
@@@@ -700,18 +700,6 @@@@ class PostInstall:
@


1.7
log
@major update to calibre-2.46.0 (now that we have poppler-qt5 / py-qt5)

- working for my use case and some other things I've thought of checking,
but please test and let me know if you run into problems.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_calibre_linux_py,v 1.6 2014/08/10 19:50:37 sthen Exp $
d5 3
a7 3
--- src/calibre/linux.py.orig	Sun Nov 15 04:15:13 2015
+++ src/calibre/linux.py	Mon Nov 23 22:17:09 2015
@@@@ -693,18 +693,6 @@@@ class PostInstall:
@


1.6
log
@update to Calibre 1.48.0
@
text
@d1 1
a1 1
$OpenBSD: patch-src_calibre_linux_py,v 1.5 2014/07/15 23:33:48 sthen Exp $
d5 3
a7 3
--- src/calibre/linux.py.orig	Fri Aug  8 04:21:35 2014
+++ src/calibre/linux.py	Sun Aug 10 20:27:19 2014
@@@@ -691,18 +691,6 @@@@ class PostInstall:
@


1.5
log
@update to calibre 1.44.0
@
text
@d1 1
a1 1
$OpenBSD: patch-src_calibre_linux_py,v 1.4 2014/03/19 02:15:46 sthen Exp $
d5 3
a7 3
--- src/calibre/linux.py.orig	Fri Jul 11 03:19:43 2014
+++ src/calibre/linux.py	Mon Jul 14 13:24:14 2014
@@@@ -644,18 +644,6 @@@@ class PostInstall:
@


1.4
log
@update to calibre 1.28.0 and replace a nasty block of patching with a helper
script that mimics various xdg-* utils to install under the fake dir.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_calibre_linux_py,v 1.3 2014/01/16 09:16:31 sthen Exp $
a3 1
- correct path for bash completion samples
d5 3
a7 12
--- src/calibre/linux.py.orig	Fri Mar 14 04:21:05 2014
+++ src/calibre/linux.py	Wed Mar 19 00:37:52 2014
@@@@ -8,7 +8,7 @@@@ from subprocess import check_call
 from functools import partial
 
 from calibre import __appname__, prints, guess_type
-from calibre.constants import islinux, isnetbsd, isbsd
+from calibre.constants import islinux, isnetbsd, isopenbsd, isbsd
 from calibre.customize.ui import all_input_formats
 from calibre.ptempfile import TemporaryDirectory
 from calibre import CurrentDir
@@@@ -495,19 +495,7 @@@@ class PostInstall:
d12 1
a12 1
 
d23 1
a23 1
-
a25 10
             for args, kwargs in self.warnings:
@@@@ -561,7 +549,7 @@@@ class PostInstall:
             if os.path.exists(bc):
                 f = os.path.join(bc, 'calibre')
             else:
-                if isnetbsd:
+                if isnetbsd or isopenbsd:
                     f = os.path.join(self.opts.staging_root, 'share/bash_completion.d/calibre')
                 else:
                     f = os.path.join(self.opts.staging_etc, 'bash_completion.d/calibre')
@


1.3
log
@update to calibre-1.19.0, ok dcoppa@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_calibre_linux_py,v 1.2 2013/11/09 15:02:14 sthen Exp $
d3 2
a4 3
Saves mime and desktop files on disk instead of trying to add them directly.
Adapted from archlinux patch:
https://projects.archlinux.org/svntogit/community.git/tree/trunk?h=packages/calibre
d6 2
a7 2
--- src/calibre/linux.py.orig	Fri Jan 10 04:08:21 2014
+++ src/calibre/linux.py	Tue Jan 14 22:47:52 2014
d17 1
a17 1
@@@@ -451,19 +451,7 @@@@ class PostInstall:
d35 1
a35 1
             self.info('There were %d warnings'%len(self.warnings))
d37 1
a37 1
@@@@ -510,7 +498,7 @@@@ class PostInstall:
a45 104
@@@@ -655,73 +643,50 @@@@ class PostInstall:
                 env['LD_LIBRARY_PATH'] = os.pathsep.join(npaths)
                 cc = partial(check_call, env=env)
 
-            with TemporaryDirectory() as tdir, CurrentDir(tdir), \
-                                PreserveMIMEDefaults():
-                render_img('mimetypes/lrf.png', 'calibre-lrf.png')
-                cc('xdg-icon-resource install --noupdate --context mimetypes --size 128 calibre-lrf.png application-lrf', shell=True)
-                self.icon_resources.append(('mimetypes', 'application-lrf', '128'))
-                cc('xdg-icon-resource install --noupdate --context mimetypes --size 128 calibre-lrf.png text-lrs', shell=True)
-                self.icon_resources.append(('mimetypes', 'application-lrs',
-                '128'))
-                render_img('mimetypes/mobi.png', 'calibre-mobi.png')
-                cc('xdg-icon-resource install --noupdate --context mimetypes --size 128 calibre-mobi.png application-x-mobipocket-ebook', shell=True)
-                self.icon_resources.append(('mimetypes', 'application-x-mobipocket-ebook', '128'))
-                render_img('mimetypes/tpz.png', 'calibre-tpz.png')
-                cc('xdg-icon-resource install --noupdate --context mimetypes --size 128 calibre-tpz.png application-x-topaz-ebook', shell=True)
-                self.icon_resources.append(('mimetypes', 'application-x-topaz-ebook', '128'))
-                render_img('mimetypes/azw2.png', 'calibre-azw2.png')
-                cc('xdg-icon-resource install --noupdate --context mimetypes --size 128 calibre-azw2.png application-x-kindle-application', shell=True)
-                self.icon_resources.append(('mimetypes', 'application-x-kindle-application', '128'))
-                render_img('mimetypes/azw3.png', 'calibre-azw3.png')
-                cc('xdg-icon-resource install --noupdate --context mimetypes --size 128 calibre-azw3.png application-x-mobi8-ebook', shell=True)
-                self.icon_resources.append(('mimetypes', 'application-x-mobi8-ebook', '128'))
-                render_img('lt.png', 'calibre-gui.png', width=256, height=256)
-                cc('xdg-icon-resource install --noupdate --size 256 calibre-gui.png calibre-gui', shell=True)
-                self.icon_resources.append(('apps', 'calibre-gui', '128'))
-                render_img('viewer.png', 'calibre-viewer.png')
-                cc('xdg-icon-resource install --size 128 calibre-viewer.png calibre-viewer', shell=True)
-                self.icon_resources.append(('apps', 'calibre-viewer', '128'))
-                render_img('tweak.png', 'calibre-ebook-edit.png')
-                cc('xdg-icon-resource install --size 128 calibre-ebook-edit.png calibre-ebook-edit', shell=True)
-                self.icon_resources.append(('apps', 'calibre-ebook-edit', '128'))
+            with TemporaryDirectory() as tdir, CurrentDir(tdir):
+                dir = os.path.join(self.opts.staging_sharedir,'../pixmaps')
+                os.mkdir(dir)
+                render_img('mimetypes/lrf.png', os.path.join(dir,'calibre-lrf.png'))
+                render_img('mimetypes/mobi.png', os.path.join(dir,'calibre-mobi.png')) #  application-x-mobipocket-ebook
+                render_img('mimetypes/tpz.png', os.path.join(dir,'calibre-tpz.png')) #  application-x-topaz-ebook
+                render_img('mimetypes/azw2.png', os.path.join(dir,'calibre-azw2.png')) #  application-x-kindle-application
+                render_img('mimetypes/azw3.png', os.path.join(dir,'calibre-azw3.png')) #  application-x-mobi8-ebook
+                render_img('lt.png', os.path.join(dir,'calibre-gui.png'), width=256, height=256)
+                render_img('viewer.png', os.path.join(dir,'calibre-viewer.png'))
+                render_img('tweak.png', os.path.join(dir,'calibre-ebook-edit.png'))
 
                 mimetypes = set([])
                 for x in all_input_formats():
                     mt = guess_type('dummy.'+x)[0]
-                    if mt and 'chemical' not in mt and 'ctc-posml' not in mt:
+                    if mt and 'chemical' not in mt and 'ctc-posml' not in mt and 'text' not in mt and 'pdf' not in mt and 'xhtml' not in mt:
                         mimetypes.add(mt)
 
                 def write_mimetypes(f):
                     f.write('MimeType=%s;\n'%';'.join(mimetypes))
 
                 from calibre.ebooks.oeb.polish.main import SUPPORTED
-                f = open('calibre-lrfviewer.desktop', 'wb')
+                dir = os.path.join(self.opts.staging_sharedir,'../applications')
+                os.mkdir(dir)
+                f = open(os.path.join(dir, 'calibre-lrfviewer.desktop'), 'wb')
                 f.write(VIEWER)
                 f.close()
-                f = open('calibre-ebook-viewer.desktop', 'wb')
+                f = open(os.path.join(dir, 'calibre-ebook-viewer.desktop'), 'wb')
                 f.write(EVIEWER)
                 write_mimetypes(f)
-                f = open('calibre-ebook-edit.desktop', 'wb')
+                f = open(os.path.join(dir, 'calibre-ebook-edit.desktop'), 'wb')
                 f.write(ETWEAK)
                 mt = [guess_type('a.' + x.lower())[0] for x in SUPPORTED]
                 f.write('MimeType=%s;\n'%';'.join(mt))
                 f.close()
-                f = open('calibre-gui.desktop', 'wb')
+                f = open(os.path.join(dir, 'calibre-gui.desktop'), 'wb')
                 f.write(GUI)
                 write_mimetypes(f)
                 f.close()
-                des = ('calibre-gui.desktop', 'calibre-lrfviewer.desktop',
-                        'calibre-ebook-viewer.desktop', 'calibre-ebook-edit.desktop')
-                for x in des:
-                    cmd = ['xdg-desktop-menu', 'install', '--noupdate', './'+x]
-                    cc(' '.join(cmd), shell=True)
-                    self.menu_resources.append(x)
-                cc(['xdg-desktop-menu', 'forceupdate'])
-                f = open('calibre-mimetypes.xml', 'wb')
+                dir = os.path.join(self.opts.staging_sharedir,'../mime/packages/')
+                os.makedirs(dir)
+                f = open(os.path.join(dir, 'calibre.xml'), 'wb')
                 f.write(MIME)
                 f.close()
-                self.mime_resources.append('calibre-mimetypes.xml')
-                cc('xdg-mime install ./calibre-mimetypes.xml', shell=True)
         except Exception:
             if self.opts.fatal_errors:
                 raise
@@@@ -881,7 +846,7 @@@@ GUI = '''\
 [Desktop Entry]
 Version=1.0
 Type=Application
-Name=calibre
+Name=Calibre
 GenericName=E-book library management
 Comment=E-book library management: Convert, view, share, catalogue all your e-books
 TryExec=calibre
@


1.2
log
@Update calibre to 1.10.0, unbreaking the port. This removes various
diffs to fix with newer poppler/png.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_calibre_linux_py,v 1.1 2011/09/05 12:38:36 jasper Exp $
d7 2
a8 2
--- src/calibre/linux.py.orig	Fri Nov  8 03:44:31 2013
+++ src/calibre/linux.py	Sat Nov  9 14:27:11 2013
d18 1
a18 1
@@@@ -450,19 +450,7 @@@@ class PostInstall:
d38 1
a38 1
@@@@ -507,7 +495,7 @@@@ class PostInstall:
d47 1
a47 1
@@@@ -651,65 +639,44 @@@@ class PostInstall:
d77 3
d88 3
a90 2
+                render_img('lt.png', os.path.join(dir, 'calibre-gui.png'))
+                render_img('viewer.png', os.path.join(dir, 'calibre-viewer.png'))
d102 1
d113 5
d125 1
a125 1
-                        'calibre-ebook-viewer.desktop')
d142 1
a142 1
@@@@ -857,7 +824,7 @@@@ GUI = '''\
@


1.1
log
@major update to 0.8.17

from viq
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 2
Lifted from ArchLinux, saves mime and desktop files on disk
instead of trying to add them directly.
d7 13
a19 4
--- src/calibre/linux.py.orig	Sun Jul 17 13:26:34 2011
+++ src/calibre/linux.py	Sun Jul 17 13:37:59 2011
@@@@ -140,19 +140,7 @@@@ class PostInstall:
         self.install_man_pages()
d38 7
a44 3
@@@@ -321,7 +309,7 @@@@ class PostInstall:
                 if isbsd:
                     manfile = os.path.join(manpath, prog+'.1')
d46 83
a128 68
-                    manfile = os.path.join(manpath, prog+'.1'+__appname__+'.bz2')
+                    manfile = os.path.join(manpath, prog+'.1'+'.bz2')
                 self.info('\tInstalling MAN page for', prog)
                 open(manfile, 'wb').write(raw)
                 self.manifest.append(manfile)
@@@@ -339,51 +327,39 @@@@ class PostInstall:
 
             with TemporaryDirectory() as tdir:
                 with CurrentDir(tdir):
-                    render_img('mimetypes/lrf.png', 'calibre-lrf.png')
-                    check_call('xdg-icon-resource install --noupdate --context mimetypes --size 128 calibre-lrf.png application-lrf', shell=True)
-                    self.icon_resources.append(('mimetypes', 'application-lrf', '128'))
-                    check_call('xdg-icon-resource install --noupdate --context mimetypes --size 128 calibre-lrf.png text-lrs', shell=True)
-                    self.icon_resources.append(('mimetypes', 'application-lrs',
-                    '128'))
-                    render_img('lt.png', 'calibre-gui.png')
-                    check_call('xdg-icon-resource install --noupdate --size 128 calibre-gui.png calibre-gui', shell=True)
-                    self.icon_resources.append(('apps', 'calibre-gui', '128'))
-                    render_img('viewer.png', 'calibre-viewer.png')
-                    check_call('xdg-icon-resource install --size 128 calibre-viewer.png calibre-viewer', shell=True)
-                    self.icon_resources.append(('apps', 'calibre-viewer', '128'))
+                    dir = os.path.join(self.opts.staging_sharedir,'../pixmaps')
+                    os.mkdir(dir)
+                    render_img('mimetypes/lrf.png', os.path.join(dir,'calibre-lrf.png'))
+                    render_img('lt.png', os.path.join(dir, 'calibre-gui.png'))
+                    render_img('viewer.png', os.path.join(dir, 'calibre-viewer.png'))
 
                     mimetypes = set([])
                     for x in all_input_formats():
                         mt = guess_type('dummy.'+x)[0]
-                        if mt and 'chemical' not in mt and 'ctc-posml' not in mt:
+                        if mt and 'chemical' not in mt and 'text' not in mt and 'pdf' not in mt and 'xhtml' not in mt:
                             mimetypes.add(mt)
 
                     def write_mimetypes(f):
                         f.write('MimeType=%s;\n'%';'.join(mimetypes))
 
-                    f = open('calibre-lrfviewer.desktop', 'wb')
+                    dir = os.path.join(self.opts.staging_sharedir,'../applications')
+                    os.mkdir(dir)
+                    f = open(os.path.join(dir, 'calibre-lrfviewer.desktop'), 'wb')
                     f.write(VIEWER)
                     f.close()
-                    f = open('calibre-ebook-viewer.desktop', 'wb')
+                    f = open(os.path.join(dir, 'calibre-ebook-viewer.desktop'), 'wb')
                     f.write(EVIEWER)
                     write_mimetypes(f)
                     f.close()
-                    f = open('calibre-gui.desktop', 'wb')
+                    f = open(os.path.join(dir, 'calibre-gui.desktop'), 'wb')
                     f.write(GUI)
                     write_mimetypes(f)
                     f.close()
-                    des = ('calibre-gui.desktop', 'calibre-lrfviewer.desktop',
-                            'calibre-ebook-viewer.desktop')
-                    for x in des:
-                        cmd = ['xdg-desktop-menu', 'install', '--noupdate', './'+x]
-                        check_call(' '.join(cmd), shell=True)
-                        self.menu_resources.append(x)
-                    check_call(['xdg-desktop-menu', 'forceupdate'])
-                    f = open('calibre-mimetypes', 'wb')
+                    dir = os.path.join(self.opts.staging_sharedir,'../mime/packages/')
+                    os.makedirs(dir)
+                    f = open(os.path.join(dir, 'calibre.xml'), 'wb')
                     f.write(MIME)
                     f.close()
-                    self.mime_resources.append('calibre-mimetypes')
-                    check_call('xdg-mime install ./calibre-mimetypes', shell=True)
d132 1
a132 1
@@@@ -521,7 +497,7 @@@@ GUI = '''\
@

