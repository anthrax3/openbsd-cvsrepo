head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.10.28.14.17.20;	author jca;	state Exp;
branches;
next	1.1;
commitid	XKl7JGZeaV5SCyFA;

1.1
date	2016.03.11.02.27.26;	author sthen;	state Exp;
branches;
next	;
commitid	p7PuovnfQl3WWfcS;


desc
@@


1.2
log
@Fix build on (at least) sparc64.

The offending code uses various methods to define the size and limits of
custom *intptr_t types.  Alas, the most generic method, using
inttypes.h, isn't used because the ifdefs assume that cc(1) defines
__STDC_VERSION__ to 199901L by default.  The easiest fix is to always
use inttypes.h.

ok sthen@@ (maintainer)
@
text
@$OpenBSD: patch-src_duktape_duktape_duk_config_h,v 1.1 2016/03/11 02:27:26 sthen Exp $

We *do* have inttypes.h, but our compiler doesn't default to C99 and
doesn't #define __STDC_VERSION__ 199901L.

--- src/duktape/duktape/duk_config.h.orig	Fri Jun 24 03:54:27 2016
+++ src/duktape/duktape/duk_config.h	Fri Oct 28 05:55:26 2016
@@@@ -1337,6 +1337,10 @@@@
 #define DUK_F_HAVE_INTTYPES
 #endif
 
+#ifndef DUK_F_HAVE_INTTYPES
+#define DUK_F_HAVE_INTTYPES
+#endif
+
 /* Basic integer typedefs and limits, preferably from inttypes.h, otherwise
  * through automatic detection.
  */
@


1.1
log
@attempt at fixing calibre build on sparc64
@
text
@d1 9
a9 4
$OpenBSD$
--- src/duktape/duktape/duk_config.h.orig	Fri Mar 11 02:26:34 2016
+++ src/duktape/duktape/duk_config.h	Fri Mar 11 02:26:35 2016
@@@@ -255,7 +255,7 @@@@
d12 7
a18 6
 /* SPARC */
-#if defined(sparc) || defined(__sparc) || defined(__sparc__)
+#if defined(sparc) || defined(__sparc) || defined(__sparc__) || defined(__sparc64__)
 #define DUK_F_SPARC
 #if defined(__LP64__) || defined(_LP64)
 #define DUK_F_SPARC64
@

