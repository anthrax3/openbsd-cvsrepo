head	1.3;
access;
symbols
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_6:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2015.04.25.10.16.15;	author ajacoutot;	state dead;
branches;
next	1.2;
commitid	vkmEw5EEro5AaW7u;

1.2
date	2015.04.19.09.02.06;	author ajacoutot;	state Exp;
branches
	1.2.2.1;
next	1.1;
commitid	5uPzB3hnhuvth5lG;

1.1
date	2015.04.19.09.01.18;	author ajacoutot;	state dead;
branches
	1.1.2.1;
next	;
commitid	IJ5dAIf62RTKA2sy;

1.1.2.1
date	2015.04.19.09.01.18;	author ajacoutot;	state Exp;
branches;
next	;
commitid	IJ5dAIf62RTKA2sy;

1.2.2.1
date	2015.04.19.09.14.28;	author ajacoutot;	state Exp;
branches;
next	;
commitid	vyrwCevrgBTfNoRR;


desc
@@


1.3
log
@Update to icu4c-55.1.
@
text
@$OpenBSD: patch-source_layout_CursiveAttachmentSubtables_cpp,v 1.2 2015/04/19 09:02:06 ajacoutot Exp $

CVE-2014-7923 CVE-2014-7926 CVE-2014-9654
https://ssl.icu-project.org/trac/changeset/37086

--- source/layout/CursiveAttachmentSubtables.cpp.orig	Fri Oct  3 18:18:36 2014
+++ source/layout/CursiveAttachmentSubtables.cpp	Sun Apr 19 10:25:11 2015
@@@@ -1,5 +1,5 @@@@
 /*
- * (C) Copyright IBM Corp. 1998 - 2013 - All Rights Reserved
+ * (C) Copyright IBM Corp. 1998 - 2015 - All Rights Reserved
  *
  */
 
@@@@ -20,7 +20,10 @@@@ le_uint32 CursiveAttachmentSubtable::process(const LER
     le_int32  coverageIndex = getGlyphCoverage(base, glyphID, success);
     le_uint16 eeCount       = SWAPW(entryExitCount);
 
-    if (coverageIndex < 0 || coverageIndex >= eeCount) {
+    LEReferenceToArrayOf<EntryExitRecord>
+        entryExitRecordsArrayRef(base, success, entryExitRecords, coverageIndex);
+
+    if (coverageIndex < 0 || coverageIndex >= eeCount || LE_FAILURE(success)) {
         glyphIterator->setCursiveGlyph();
         return 0;
     }
@


1.2
log
@SECURITY fixes for:
CVE-2014-6585
CVE-2014-6591
CVE-2014-7923
CVE-2014-7926
CVE-2014-9654
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2.2.1
log
@Fixes for:
CVE-2014-6585
CVE-2014-6591
CVE-2014-7923
CVE-2014-7926
CVE-2014-9654
@
text
@@


1.1
log
@file patch-source_layout_CursiveAttachmentSubtables_cpp was initially added on branch OPENBSD_5_6.
@
text
@d1 26
@


1.1.2.1
log
@Fixes for:
CVE-2014-6585
CVE-2014-6591
CVE-2014-7923
CVE-2014-7926
CVE-2014-9654
@
text
@a0 26
$OpenBSD$

CVE-2014-7923 CVE-2014-7926 CVE-2014-9654
https://ssl.icu-project.org/trac/changeset/37086

--- source/layout/CursiveAttachmentSubtables.cpp.orig	Fri Oct  3 18:18:36 2014
+++ source/layout/CursiveAttachmentSubtables.cpp	Sun Apr 19 10:25:11 2015
@@@@ -1,5 +1,5 @@@@
 /*
- * (C) Copyright IBM Corp. 1998 - 2013 - All Rights Reserved
+ * (C) Copyright IBM Corp. 1998 - 2015 - All Rights Reserved
  *
  */
 
@@@@ -20,7 +20,10 @@@@ le_uint32 CursiveAttachmentSubtable::process(const LER
     le_int32  coverageIndex = getGlyphCoverage(base, glyphID, success);
     le_uint16 eeCount       = SWAPW(entryExitCount);
 
-    if (coverageIndex < 0 || coverageIndex >= eeCount) {
+    LEReferenceToArrayOf<EntryExitRecord>
+        entryExitRecordsArrayRef(base, success, entryExitRecords, coverageIndex);
+
+    if (coverageIndex < 0 || coverageIndex >= eeCount || LE_FAILURE(success)) {
         glyphIterator->setCursiveGlyph();
         return 0;
     }
@

