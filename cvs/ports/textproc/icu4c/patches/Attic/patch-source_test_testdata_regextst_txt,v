head	1.3;
access;
symbols
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_6:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2015.04.25.10.16.15;	author ajacoutot;	state dead;
branches;
next	1.2;
commitid	vkmEw5EEro5AaW7u;

1.2
date	2015.04.19.09.02.06;	author ajacoutot;	state Exp;
branches
	1.2.2.1;
next	1.1;
commitid	5uPzB3hnhuvth5lG;

1.1
date	2015.04.19.09.01.18;	author ajacoutot;	state dead;
branches
	1.1.2.1;
next	;
commitid	IJ5dAIf62RTKA2sy;

1.1.2.1
date	2015.04.19.09.01.18;	author ajacoutot;	state Exp;
branches;
next	;
commitid	IJ5dAIf62RTKA2sy;

1.2.2.1
date	2015.04.19.09.14.28;	author ajacoutot;	state Exp;
branches;
next	;
commitid	vyrwCevrgBTfNoRR;


desc
@@


1.3
log
@Update to icu4c-55.1.
@
text
@$OpenBSD: patch-source_test_testdata_regextst_txt,v 1.2 2015/04/19 09:02:06 ajacoutot Exp $

CVE-2014-6585, CVE-2014-6591:
https://ssl.icu-project.org/trac/changeset/36724

CVE-2014-7923 CVE-2014-7926 CVE-2014-9654
https://ssl.icu-project.org/trac/changeset/36727

--- source/test/testdata/regextst.txt.orig	Sun Apr 19 10:13:58 2015
+++ source/test/testdata/regextst.txt	Sun Apr 19 10:15:25 2015
@@@@ -1201,6 +1201,24 @@@@
 "A|B|\U00012345"                "hello <0>\U00012345</0>"
 "A|B|\U00010000"                "hello \ud800"
 
+# Bug 11369
+#   Incorrect optimization of patterns with a zero length quantifier {0}
+
+"(.|b)(|b){0}\$(?#xxx){3}(?>\D*)"   "AAAAABBBBBCCCCCDDDDEEEEE"
+"(|b)ab(c)"                     "<0><1></1>ab<2>c</2></0>"
+"(|b){0}a{3}(D*)"               "<0>aaa<2></2></0>"
+"(|b){0,1}a{3}(D*)"             "<0><1></1>aaa<2></2></0>"
+"((|b){0})a{3}(D*)"             "<0><1></1>aaa<3></3></0>"
+
+# Bug 11370
+#   Max match length computation of look-behind expression gives result that is too big to fit in the
+#   in the 24 bit operand portion of the compiled code. Expressions should fail to compile
+#   (Look-behind match length must be bounded. This case is treated as unbounded, an error.)
+
+"(?<!(0123456789a){10000000})x"         E  "no match"
+"(?<!\\ubeaf(\\ubeaf{11000}){11000})"   E  "no match"
+
+
 #  Random debugging, Temporary
 #
 
@


1.2
log
@SECURITY fixes for:
CVE-2014-6585
CVE-2014-6591
CVE-2014-7923
CVE-2014-7926
CVE-2014-9654
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2.2.1
log
@Fixes for:
CVE-2014-6585
CVE-2014-6591
CVE-2014-7923
CVE-2014-7926
CVE-2014-9654
@
text
@@


1.1
log
@file patch-source_test_testdata_regextst_txt was initially added on branch OPENBSD_5_6.
@
text
@d1 35
@


1.1.2.1
log
@Fixes for:
CVE-2014-6585
CVE-2014-6591
CVE-2014-7923
CVE-2014-7926
CVE-2014-9654
@
text
@a0 35
$OpenBSD$

CVE-2014-6585, CVE-2014-6591:
https://ssl.icu-project.org/trac/changeset/36724

CVE-2014-7923 CVE-2014-7926 CVE-2014-9654
https://ssl.icu-project.org/trac/changeset/36727

--- source/test/testdata/regextst.txt.orig	Wed Jun 26 02:27:11 2013
+++ source/test/testdata/regextst.txt	Sun Apr 19 10:53:14 2015
@@@@ -1173,6 +1173,24 @@@@
 "(?<=(?:){11})bc"                "<0>bc</0>"          # Empty (?:) expression.
 
 
+# Bug 11369
+#   Incorrect optimization of patterns with a zero length quantifier {0}
+
+"(.|b)(|b){0}\$(?#xxx){3}(?>\D*)"   "AAAAABBBBBCCCCCDDDDEEEEE"
+"(|b)ab(c)"                     "<0><1></1>ab<2>c</2></0>"
+"(|b){0}a{3}(D*)"               "<0>aaa<2></2></0>"
+"(|b){0,1}a{3}(D*)"             "<0><1></1>aaa<2></2></0>"
+"((|b){0})a{3}(D*)"             "<0><1></1>aaa<3></3></0>"
+
+# Bug 11370
+#   Max match length computation of look-behind expression gives result that is too big to fit in the
+#   in the 24 bit operand portion of the compiled code. Expressions should fail to compile
+#   (Look-behind match length must be bounded. This case is treated as unbounded, an error.)
+
+"(?<!(0123456789a){10000000})x"         E  "no match"
+"(?<!\\ubeaf(\\ubeaf{11000}){11000})"   E  "no match"
+
+
 #  Random debugging, Temporary
 #
 #"^(?:a?b?)*$"	                  "a--"
@

