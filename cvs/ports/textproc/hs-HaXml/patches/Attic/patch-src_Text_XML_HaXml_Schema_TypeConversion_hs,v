head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2015.01.08.11.06.27;	author dcoppa;	state dead;
branches;
next	1.1;
commitid	ae2Ypg1fhLXFWXkO;

1.1
date	2014.10.30.09.40.39;	author dcoppa;	state Exp;
branches;
next	;
commitid	dRsu8d5IG4sTdkOF;


desc
@@


1.2
log
@
Update to HaXml-1.25.2
@
text
@$OpenBSD: patch-src_Text_XML_HaXml_Schema_TypeConversion_hs,v 1.1 2014/10/30 09:40:39 dcoppa Exp $

parse errors from Haddock

src/Text/XML/HaXml/Schema/TypeConversion.hs:41:51:
    parse error (possibly incorrect indentation or mismatched brackets)

src/Text/XML/HaXml/Schema/TypeConversion.hs:81:5:
    parse error on input `renameLocals'

--- src/Text/XML/HaXml/Schema/TypeConversion.hs.orig	Tue Oct 28 16:53:24 2014
+++ src/Text/XML/HaXml/Schema/TypeConversion.hs	Wed Oct 29 20:23:44 2014
@@@@ -38,7 +38,6 @@@@ typeLift s = s{ schema_items =
                                                   Just (Right
                                                     (ComplexType
                                                        {complex_name=Just t'}))
-                                                  {-| t==t'-}
                                                     -> (e:)
                                                   _ -> id
                   _                          -> id
@@@@ -79,8 +78,8 @@@@ typeLift s = s{ schema_items =
 --   previously locally-typed, we will instead assume in the pretty-printer
 --   that it can always replace a missing typename with the element name, and
 --   have it resolve to something sensible.
-    renameLocals :: SchemaItem -> SchemaItem
-    renameLocals s = s
+renameLocals :: SchemaItem -> SchemaItem
+renameLocals s = s
 --  renameLocals (SchemaElement e)
 --                 | Left (NT{theName=n,theType=Nothing}) <- elem_nameOrRef e
 --                 = SchemaElement e{ elem_nameOrRef = Left (NT{theName=n
@


1.1
log
@
Some hs updates:

hs-ConfigFile:	1.1.2 -> 1.1.4
hs-HaXml:	1.24.1 -> 1.25
hs-MissingH:	1.2.1.0 -> 1.3.0.1
hs-polyparse:	1.9 -> 1.10
@
text
@d1 1
a1 1
$OpenBSD$
@

