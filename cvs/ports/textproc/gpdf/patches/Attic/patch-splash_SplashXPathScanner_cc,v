head	1.2;
access;
symbols
	OPENBSD_4_1:1.1.0.10
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_8:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2007.08.05.15.20.48;	author steven;	state dead;
branches;
next	1.1;

1.1
date	2006.02.05.09.59.38;	author bernd;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2006.02.06.22.16.23;	author sturm;	state Exp;
branches;
next	;

1.1.4.1
date	2006.02.06.22.16.40;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove gpdf, superseded by evince.

pointed out by Daniel Dickman (didickman@@gmail)

ok naddy, espie, kili
@
text
@$OpenBSD: patch-splash_SplashXPathScanner_cc,v 1.1 2006/02/05 09:59:38 bernd Exp $
--- splash/SplashXPathScanner.cc.orig	Sat Feb  4 14:44:27 2006
+++ splash/SplashXPathScanner.cc	Sat Feb  4 14:46:44 2006
@@@@ -182,7 +182,7 @@@@ GBool SplashXPathScanner::getNextSpan(in
 }
 
 void SplashXPathScanner::computeIntersections(int y) {
-  SplashCoord ySegMin, ySegMax, xx0, xx1;
+  SplashCoord xSegMin, xSegMax, ySegMin, ySegMax, xx0, xx1;
   SplashXPathSeg *seg;
   int i, j;
 
@@@@ -232,19 +232,27 @@@@ void SplashXPathScanner::computeIntersec
     } else if (seg->flags & splashXPathVert) {
       xx0 = xx1 = seg->x0;
     } else {
-      if (ySegMin <= y) {
-	// intersection with top edge
-	xx0 = seg->x0 + (y - seg->y0) * seg->dxdy;
+      if (seg->x0 < seg->x1) {
+       xSegMin = seg->x0;
+       xSegMax = seg->x1;
       } else {
-	// x coord of segment endpoint with min y coord
-	xx0 = (seg->flags & splashXPathFlip) ? seg->x1 : seg->x0;
+       xSegMin = seg->x1;
+       xSegMax = seg->x0;
       }
-      if (ySegMax >= y + 1) {
-	// intersection with bottom edge
-	xx1 = seg->x0 + (y + 1 - seg->y0) * seg->dxdy;
-      } else {
-	// x coord of segment endpoint with max y coord
-	xx1 = (seg->flags & splashXPathFlip) ? seg->x0 : seg->x1;
+      // intersection with top edge
+      xx0 = seg->x0 + ((SplashCoord)y - seg->y0) * seg->dxdy;
+      // intersection with bottom edge
+      xx1 = seg->x0 + ((SplashCoord)y + 1 - seg->y0) * seg->dxdy;
+      // the segment may not actually extend to the top and/or bottom edges
+      if (xx0 < xSegMin) {
+       xx0 = xSegMin;
+      } else if (xx0 > xSegMax) {
+       xx0 = xSegMax;
+      }
+      if (xx1 < xSegMin) {
+       xx1 = xSegMin;
+      } else if (xx1 > xSegMax) {
+       xx1 = xSegMax;
       }
     }
     if (xx0 < xx1) {
@


1.1
log
@Fix heap based buffer overflow.

From KDE. http://www.kde.org/info/security/advisory-20060202-1.txt

ok steven@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.4.1
log
@MFC:
Fix heap based buffer overflow.

From KDE. http://www.kde.org/info/security/advisory-20060202-1.txt
@
text
@d1 1
a1 1
$OpenBSD: patch-splash_SplashXPathScanner_cc,v 1.1 2006/02/05 09:59:38 bernd Exp $
@


1.1.2.1
log
@MFC:
Fix heap based buffer overflow.

From KDE. http://www.kde.org/info/security/advisory-20060202-1.txt
@
text
@d1 1
a1 1
$OpenBSD: patch-splash_SplashXPathScanner_cc,v 1.1 2006/02/05 09:59:38 bernd Exp $
@

