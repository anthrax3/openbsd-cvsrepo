head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	matthieu_20130711:1.1.1.1
	matthieu:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.11.02.12.01.00;	author sthen;	state Exp;
branches;
next	1.1;
commitid	NHuKrAW6eclAz6Pl;

1.1
date	2013.07.11.21.02.23;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.07.11.21.02.23;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to jq 1.4
@
text
@@@comment $OpenBSD: PLIST,v 1.1.1.1 2013/07/11 21:02:23 matthieu Exp $
@@bin bin/jq
include/jq.h
include/jv.h
lib/libjq.a
lib/libjq.la
@@lib lib/libjq.so.${LIBjq_VERSION}
@@man man/man1/jq.1
share/doc/jq/
share/doc/jq/AUTHORS
share/doc/jq/COPYING
share/doc/jq/README
share/doc/jq/README.md
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@comment $OpenBSD$
d3 5
@


1.1.1.1
log
@Import jq 1.3 

jq is like sed for JSON data - you can use it to slice and filter and
map and transform structured data with the same ease that sed, awk,
grep and friends let you play with text.

Tested and tweaks by Donovan Watteau and giovanni@@, ok giovanni@@
@
text
@@
