head	1.4;
access;
symbols
	OPENBSD_6_0:1.1.0.6
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.03.03.09.41.02;	author landry;	state dead;
branches;
next	1.3;
commitid	iwnmmQgx2gDIZx56;

1.3
date	2016.12.13.13.15.18;	author sthen;	state Exp;
branches;
next	1.2;
commitid	cOSzPbviKwimNHZ3;

1.2
date	2016.10.16.13.51.21;	author sthen;	state Exp;
branches;
next	1.1;
commitid	PfmY67MChrkF8Tl5;

1.1
date	2015.04.25.23.05.41;	author sthen;	state Exp;
branches;
next	;
commitid	0NAeZu2Dnp1Fjged;


desc
@@


1.4
log
@Update to zathura 0.3.7 (and its associated plugins)
@
text
@$OpenBSD: patch-document_c,v 1.3 2016/12/13 13:15:18 sthen Exp $

From e3e49d206fbe5761c53a85b9499c940a0d718c8a Mon Sep 17 00:00:00 2001
From: Christian Hesse <mail@@eworm.de>
Date: Thu, 28 Apr 2016 09:59:31 +0200
Subject: [PATCH] mupdf 1.9 compatibility

From 518fd77c351fa1bac37679e195dc14fa76c8e895 Mon Sep 17 00:00:00 2001
From: Moritz Lipp <mlq@@pwmt.org>
Date: Thu, 24 Nov 2016 00:51:45 +0100
Subject: [PATCH] Make compatible to mupdf 1.10

--- document.c.orig	Tue Dec 13 13:11:06 2016
+++ document.c	Tue Dec 13 13:11:00 2016
@@@@ -3,7 +3,6 @@@@
 #define _POSIX_C_SOURCE 1
 
 #include <mupdf/fitz.h>
-#include <mupdf/xps.h>
 #include <mupdf/pdf.h>
 
 #include <glib-2.0/glib.h>
@@@@ -109,12 +108,12 @@@@ pdf_document_save_as(zathura_document_t* document, mup
   }
 
   fz_try (mupdf_document->ctx) {
-    /* fz_write_document claims to accepts NULL as third argument but doesn't.
+    /* pdf_save_document claims to accepts NULL as third argument but doesn't.
      * pdf_write_document does not check if the third arguments is NULL for some
      * options. */
 
-    fz_write_options opts = { 0 }; /* just use the default options */
-    fz_write_document(mupdf_document->ctx, mupdf_document->document, (char*) path, &opts);
+    pdf_write_options opts = { 0 }; /* just use the default options */
+    pdf_save_document(mupdf_document->ctx, (pdf_document*) mupdf_document->document, (char*) path, &opts);
   } fz_catch (mupdf_document->ctx) {
     return ZATHURA_ERROR_UNKNOWN;
   }
@


1.3
log
@chase mupdf 1.10 api changes; breakage reported by naddy
@
text
@d1 1
a1 1
$OpenBSD: patch-document_c,v 1.2 2016/10/16 13:51:21 sthen Exp $
@


1.2
log
@use ports compiler for c11, remove devel/gettext MODULES, remove unnecessary PERMIT_*
@
text
@d1 1
a1 1
$OpenBSD$
d8 16
a23 3
--- document.c.orig	Sun Feb 14 22:49:46 2016
+++ document.c	Sun Oct 16 13:48:04 2016
@@@@ -109,12 +109,12 @@@@ pdf_document_save_as(zathura_document_t* document, mup
@


1.1
log
@add patches from zathura-pdf-mupdf upstream, mostly to cope with new MuPDF
@
text
@d3 4
a6 4
From 00792eae08aafb5ba2f429b1cdee0a5fe9c25c61 Mon Sep 17 00:00:00 2001
From: Moritz Lipp <mlq@@pwmt.org>
Date: Sun, 19 Apr 2015 10:49:20 +0200
Subject: [PATCH] Enable EPUB support
d8 3
a10 23
From f96dd48825c049bbccb2e25a814c49d03fedf86c Mon Sep 17 00:00:00 2001
From: Moritz Lipp <mlq@@pwmt.org>
Date: Sun, 19 Apr 2015 10:39:02 +0200
Subject: [PATCH] Update for 1.7 API changes

--- document.c.orig	Sat Apr 25 23:50:55 2015
+++ document.c	Sat Apr 25 23:50:29 2015
@@@@ -34,11 +34,9 @@@@ pdf_document_open(zathura_document_t* document)
   const char* password = zathura_document_get_password(document);
 
   fz_try(mupdf_document->ctx){
-    if (strstr(path, ".xps") != 0 || strstr(path, ".XPS") != 0 || strstr(path, ".rels") != 0) {
-      mupdf_document->document = (fz_document*) xps_open_document(mupdf_document->ctx, (char*) path);
-    } else {
-      mupdf_document->document = (fz_document*) pdf_open_document(mupdf_document->ctx, (char*) path);
-    }
+    fz_register_document_handlers(mupdf_document->ctx);
+
+    mupdf_document->document = fz_open_document(mupdf_document->ctx, path);
   }
   fz_catch(mupdf_document->ctx){
     error = ZATHURA_ERROR_UNKNOWN;
@@@@ -51,14 +49,14 @@@@ pdf_document_open(zathura_document_t* document)
d13 4
a16 40
   /* authenticate if password is required and given */
-  if (fz_needs_password(mupdf_document->document) != 0) {
-    if (password == NULL || fz_authenticate_password(mupdf_document->document, (char*) password) == 0) {
+  if (fz_needs_password(mupdf_document->ctx, mupdf_document->document) != 0) {
+    if (password == NULL || fz_authenticate_password(mupdf_document->ctx, mupdf_document->document, (char*) password) == 0) {
       error = ZATHURA_ERROR_INVALID_PASSWORD;
       goto error_free;
     }
   }
 
-  zathura_document_set_number_of_pages(document, fz_count_pages(mupdf_document->document));
+  zathura_document_set_number_of_pages(document, fz_count_pages(mupdf_document->ctx, mupdf_document->document));
   zathura_document_set_data(document, mupdf_document);
 
   return error;
@@@@ -67,10 +65,10 @@@@ error_free:
 
   if (mupdf_document != NULL) {
     if (mupdf_document->document != NULL) {
-      fz_close_document(mupdf_document->document);
+      fz_drop_document(mupdf_document->ctx, mupdf_document->document);
     }
     if (mupdf_document->ctx != NULL) {
-      fz_free_context(mupdf_document->ctx);
+      fz_drop_context(mupdf_document->ctx);
     }
 
     free(mupdf_document);
@@@@ -90,8 +88,8 @@@@ pdf_document_free(zathura_document_t* document, mupdf_
     return ZATHURA_ERROR_INVALID_ARGUMENTS;
   }
 
-  fz_close_document(mupdf_document->document);
-  fz_free_context(mupdf_document->ctx);
+  fz_drop_document(mupdf_document->ctx, mupdf_document->document);
+  fz_drop_context(mupdf_document->ctx);
   free(mupdf_document);
   zathura_document_set_data(document, NULL);
 
@@@@ -112,7 +110,7 @@@@ pdf_document_save_as(zathura_document_t* document, mup
d19 4
a22 3
     fz_write_options opts = { 0 }; /* just use the default options */
-    fz_write_document(mupdf_document->document, (char*) path, &opts);
+    fz_write_document(mupdf_document->ctx, mupdf_document->document, (char*) path, &opts);
@

