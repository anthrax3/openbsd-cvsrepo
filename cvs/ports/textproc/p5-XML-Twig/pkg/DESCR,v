head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.42
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.40
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.36
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.38
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.34
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.32
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.30
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.28
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.26
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.24
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.22
	OPENBSD_5_0:1.2.0.20
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.18
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.16
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.10
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.8
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.6
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.1.1.0.10
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.8
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.6
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.4
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	avsm_2004-May-29:1.1.1.1
	avsm:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2007.01.11.15.40.54;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.29.21.14.40;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.29.21.14.40;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update to 3.28
- CPAN'ify
- re-format DESCR while there
@
text
@XML::Twig provides a way to process XML documents.  It is built on top
of XML::Parser.

The module offers a tree interface to the document, while allowing you
to output the parts of it that have been completely processed.

It allows minimal resource (CPU and memory) usage by building the tree
only for the parts of the documents that need actual processing.

XML::Twig tries to make simple things easy so it tries its best to takes
care of a lot of the (usually) annoying (but sometimes necessary)
features that come with XML and XML::Parser.
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
XML::Twig provides a way to process XML documents.  It is built on
top of XML::Parser.
d4 2
a5 2
The module offers a tree interface to the document, while allowing
you to output the parts of it that have been completely processed.
d7 2
a8 2
It allows minimal resource (CPU and memory) usage by building the
tree only for the parts of the documents that need actual processing.
d10 3
a12 3
XML::Twig tries to make simple things easy so it tries its best to
takes care of a lot of the (usually) annoying (but sometimes
necessary) features that come with XML and XML::Parser.
@


1.1.1.1
log
@initial import of p5-XML-Twig-3.15
--
XML::Twig provides a way to process XML documents.  It is built on
top of XML::Parser.

The module offers a tree interface to the document, while allowing
you to output the parts of it that have been completely processed.

It allows minimal resource (CPU and memory) usage by building the
tree only for the parts of the documents that need actual processing.

XML::Twig tries to make simple things easy so it tries its best to
takes care of a lot of the (usually) annoying (but sometimes
necessary) features that come with XML and XML::Parser.

@
text
@@
