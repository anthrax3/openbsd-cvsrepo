head	1.4;
access;
symbols
	OPENBSD_5_0:1.3.0.18
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.16
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.14
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.12
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.10
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_6:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2011.10.01.19.46.35;	author kili;	state dead;
branches;
next	1.3;

1.3
date	2007.03.30.04.09.42;	author ckuethe;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.09.17.34.53;	author brad;	state Exp;
branches
	1.2.2.1
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	2004.10.23.02.24.37;	author brad;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2004.12.27.12.19.00;	author robert;	state Exp;
branches;
next	;

1.1.4.1
date	2004.12.27.12.21.44;	author robert;	state Exp;
branches;
next	;

1.2.2.1
date	2007.04.03.12.16.22;	author sturm;	state Exp;
branches;
next	;

1.2.4.1
date	2007.04.03.12.03.20;	author sturm;	state Exp;
branches;
next	;

1.2.6.1
date	2007.05.01.16.28.30;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xpdf-3.03.
@
text
@$OpenBSD: patch-xpdf_Catalog_cc,v 1.3 2007/03/30 04:09:42 ckuethe Exp $
--- xpdf/Catalog.cc.orig	Tue Feb 27 22:05:52 2007
+++ xpdf/Catalog.cc	Fri Mar 30 00:31:19 2007
@@@@ -65,6 +65,15 @@@@ Catalog::Catalog(XRef *xrefA) {
   }
   pagesSize = numPages0 = (int)obj.getNum();
   obj.free();
+  // The gcc doesnt optimize this away, so this check is ok,
+  // even if it looks like a pagesSize != pagesSize check
+  if (pagesSize*sizeof(Page *)/sizeof(Page *) != pagesSize ||
+      pagesSize*sizeof(Ref)/sizeof(Ref) != pagesSize) {
+    error(-1, "Invalid 'pagesSize'");
+    ok = gFalse;
+    return;
+  }
+
   pages = (Page **)gmallocn(pagesSize, sizeof(Page *));
   pageRefs = (Ref *)gmallocn(pagesSize, sizeof(Ref));
   for (i = 0; i < pagesSize; ++i) {
@@@@ -217,6 +226,11 @@@@ int Catalog::readPageTree(Dict *pagesDict, PageAttrs *
       }
       if (start >= pagesSize) {
 	pagesSize += 32;
+         if (pagesSize*sizeof(Page *)/sizeof(Page *) != pagesSize ||
+                pagesSize*sizeof(Ref)/sizeof(Ref) != pagesSize) {
+           error(-1, "Invalid 'pagesSize' parameter.");
+           goto err3;
+         }
 	pages = (Page **)greallocn(pages, pagesSize, sizeof(Page *));
 	pageRefs = (Ref *)greallocn(pageRefs, pagesSize, sizeof(Ref));
 	for (j = pagesSize - 32; j < pagesSize; ++j) {
@


1.3
log
@Update to xpdf 3.0.2, from Stuart Henderson and Brad Smith
Includes some security fixes

ok pvalchev, todd
@
text
@d1 1
a1 1
$OpenBSD: patch-xpdf_Catalog_cc,v 1.2 2005/09/09 17:34:53 brad Exp $
@


1.2
log
@upgrade to xpdf 3.01

Most of the update is from Bernd Ahlers <bernd at ba-net dot org>
@
text
@d1 4
a4 4
$OpenBSD: patch-xpdf_Catalog_cc,v 1.1 2004/10/23 02:24:37 brad Exp $
--- xpdf/Catalog.cc.orig	Wed Aug 17 07:34:31 2005
+++ xpdf/Catalog.cc	Thu Aug 18 10:15:28 2005
@@@@ -64,6 +64,15 @@@@ Catalog::Catalog(XRef *xrefA) {
d20 1
a20 1
@@@@ -195,6 +204,11 @@@@ int Catalog::readPageTree(Dict *pagesDic
@


1.2.6.1
log
@MFC:
Update to xpdf 3.0.2, from Stuart Henderson and Brad Smith
Includes some security fixes
@
text
@d1 4
a4 4
$OpenBSD: patch-xpdf_Catalog_cc,v 1.2 2005/09/09 17:34:53 brad Exp $
--- xpdf/Catalog.cc.orig	Tue Feb 27 23:05:52 2007
+++ xpdf/Catalog.cc	Sat Apr 14 23:07:36 2007
@@@@ -65,6 +65,15 @@@@ Catalog::Catalog(XRef *xrefA) {
d20 1
a20 1
@@@@ -217,6 +226,11 @@@@ int Catalog::readPageTree(Dict *pagesDic
@


1.2.2.1
log
@MFC:
Update to xpdf 3.0.2, from Stuart Henderson and Brad Smith
Includes some security fixes
@
text
@d1 4
a4 4
$OpenBSD: patch-xpdf_Catalog_cc,v 1.2 2005/09/09 17:34:53 brad Exp $
--- xpdf/Catalog.cc.orig	Tue Feb 27 23:05:52 2007
+++ xpdf/Catalog.cc	Tue Apr  3 14:11:57 2007
@@@@ -65,6 +65,15 @@@@ Catalog::Catalog(XRef *xrefA) {
d20 1
a20 1
@@@@ -217,6 +226,11 @@@@ int Catalog::readPageTree(Dict *pagesDic
@


1.2.4.1
log
@MFC:
Update to xpdf 3.0.2, from Stuart Henderson and Brad Smith
Includes some security fixes
@
text
@d1 4
a4 4
$OpenBSD: patch-xpdf_Catalog_cc,v 1.2 2005/09/09 17:34:53 brad Exp $
--- xpdf/Catalog.cc.orig	Tue Feb 27 23:05:52 2007
+++ xpdf/Catalog.cc	Mon Apr  2 23:37:33 2007
@@@@ -65,6 +65,15 @@@@ Catalog::Catalog(XRef *xrefA) {
d20 1
a20 1
@@@@ -217,6 +226,11 @@@@ int Catalog::readPageTree(Dict *pagesDic
@


1.1
log
@Chris Evans discovered numerous vulnerabilities in the xpdf package:

Multiple integer overflow issues affecting xpdf.
These can result in writing an arbitrary byte to an attacker controlled
location which probably could lead to arbitrary code execution.
CAN-2004-0888

Multiple integer overflow issues.
These can result in DoS or possibly arbitrary code execution.
CAN-2004-0889

Chris also discovered issues with infinite loop logic error.
@
text
@d1 3
a3 3
$OpenBSD$
--- xpdf/Catalog.cc.orig	Wed Jan 21 20:26:45 2004
+++ xpdf/Catalog.cc	Fri Oct 22 21:54:48 2004
d17 2
a18 2
   pages = (Page **)gmalloc(pagesSize * sizeof(Page *));
   pageRefs = (Ref *)gmalloc(pagesSize * sizeof(Ref));
d20 1
a20 1
@@@@ -191,6 +200,11 @@@@ int Catalog::readPageTree(Dict *pagesDic
d24 7
a30 7
+        if (pagesSize*sizeof(Page *)/sizeof(Page *) != pagesSize ||
+		pagesSize*sizeof(Ref)/sizeof(Ref) != pagesSize) {
+          error(-1, "Invalid 'pagesSize' parameter.");
+          goto err3;
+        }
 	pages = (Page **)grealloc(pages, pagesSize * sizeof(Page *));
 	pageRefs = (Ref *)grealloc(pageRefs, pagesSize * sizeof(Ref));
@


1.1.4.1
log
@SECURITY:
fixed integer overflows:
http://www.vuxml.org/openbsd/d79a032a-2763-11d9-a0f4-00065bd5b0b6.html

fixed buffer overflow vulnerability:
http://www.vuxml.org/openbsd/9317ac06-5441-11d9-8ad2-00065bd5b0b6.html

ok brad@@
@
text
@@


1.1.2.1
log
@SECURITY:
fixed integer overflows:
http://www.vuxml.org/openbsd/d79a032a-2763-11d9-a0f4-00065bd5b0b6.html

fixed buffer overflow vulnerability:
http://www.vuxml.org/openbsd/9317ac06-5441-11d9-8ad2-00065bd5b0b6.html

ok brad@@
@
text
@@

