head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.12
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.10
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.8
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.6
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2014.06.08.18.56.33;	author kili;	state Exp;
branches;
next	1.3;
commitid	CUa2uqR5lFKyLFM8;

1.3
date	2011.10.01.19.46.35;	author kili;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.04.10.45.21;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.30.22.35.57;	author miod;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2009.08.15.13.40.18;	author william;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xpdf-3.04.
@
text
@$OpenBSD: patch-splash_SplashXPath_cc,v 1.3 2011/10/01 19:46:35 kili Exp $

Replace Miod's fix from 2009 by some assert's, because the bug
*should* have been fixed in a different way and I'm too lazy to
verify it. (needs a change to strokeAdjust(), which is private)

--- splash/SplashXPath.cc.orig	Wed May 28 20:50:50 2014
+++ splash/SplashXPath.cc	Fri May 30 15:31:49 2014
@@@@ -8,6 +8,8 @@@@
 
 #include <aconf.h>
 
+#include <assert.h>
+
 #ifdef USE_GCC_PRAGMAS
 #pragma implementation
 #endif
@@@@ -69,7 +71,7 @@@@ SplashXPath::SplashXPath(SplashPath *path, SplashCoord
 
   // do stroke adjustment
   if (path->hints) {
-    strokeAdjust(pts, path->hints, path->hintsLength);
+    strokeAdjust(pts, path->hints, path->hintsLength, path->length);
   }
 
   segs = NULL;
@@@@ -176,7 +178,8 @@@@ SplashXPath::SplashXPath(SplashPath *path, SplashCoord
 }
 
 void SplashXPath::strokeAdjust(SplashXPathPoint *pts,
-			       SplashPathHint *hints, int nHints) {
+			       SplashPathHint *hints, int nHints,
+			       int plength) {
   SplashXPathAdjust *adjusts, *adjust;
   SplashPathHint *hint;
   SplashCoord x0, y0, x1, y1, x2, y2, x3, y3;
@@@@ -188,9 +191,12 @@@@ void SplashXPath::strokeAdjust(SplashXPathPoint *pts,
   adjusts = (SplashXPathAdjust *)gmallocn(nHints, sizeof(SplashXPathAdjust));
   for (i = 0; i < nHints; ++i) {
     hint = &hints[i];
+    assert(hint->firstPt < plength && hint->lastPt < plength);
     x0 = pts[hint->ctrl0    ].x;    y0 = pts[hint->ctrl0    ].y;
+    assert(hint->ctrl0 + 1 < plength);
     x1 = pts[hint->ctrl0 + 1].x;    y1 = pts[hint->ctrl0 + 1].y;
     x2 = pts[hint->ctrl1    ].x;    y2 = pts[hint->ctrl1    ].y;
+    assert(hint->ctrl1 + 1 < plength);
     x3 = pts[hint->ctrl1 + 1].x;    y3 = pts[hint->ctrl1 + 1].y;
     if (x0 == x1 && x2 == x3) {
       adjusts[i].vert = gTrue;
@


1.3
log
@Update to xpdf-3.03.
@
text
@d1 49
a49 32
$OpenBSD: patch-splash_SplashXPath_cc,v 1.2 2010/12/04 10:45:21 miod Exp $
--- splash/SplashXPath.cc.orig	Mon Aug 15 23:08:53 2011
+++ splash/SplashXPath.cc	Thu Aug 18 21:10:22 2011
@@@@ -73,10 +73,26 @@@@ SplashXPath::SplashXPath(SplashPath *path, SplashCoord
 					    sizeof(SplashXPathAdjust));
     for (i = 0; i < path->hintsLength; ++i) {
       hint = &path->hints[i];
+      if (hint->firstPt >= path->length || hint->lastPt >= path->length) {
+	path->hintsLength = i;
+	if (i == 0) {
+	  gfree(adjusts);
+	  adjusts = NULL;
+	}
+	break;
+      }
       x0 = pts[hint->ctrl0    ].x;    y0 = pts[hint->ctrl0    ].y;
-      x1 = pts[hint->ctrl0 + 1].x;    y1 = pts[hint->ctrl0 + 1].y;
+      if (hint->ctrl0 + 1 >= path->length) {
+	x1 = x0; y1 = y0;
+      } else {
+	x1 = pts[hint->ctrl0 + 1].x;    y1 = pts[hint->ctrl0 + 1].y;
+      }
       x2 = pts[hint->ctrl1    ].x;    y2 = pts[hint->ctrl1    ].y;
-      x3 = pts[hint->ctrl1 + 1].x;    y3 = pts[hint->ctrl1 + 1].y;
+      if (hint->ctrl1 + 1 >= path->length) {
+	x3 = x2; y3 = y2;
+      } else {
+	x3 = pts[hint->ctrl1 + 1].x;    y3 = pts[hint->ctrl1 + 1].y;
+      }
       if (x0 == x1 && x2 == x3) {
 	adjusts[i].vert = gTrue;
 	adj0 = x0;
@


1.2
log
@Prevent more out-of-bounds aray accesses by ignoring hints referencing point
numbers out of the correct range; ok kili@@, riding on the update.
@
text
@d1 4
a4 4
$OpenBSD: patch-splash_SplashXPath_cc,v 1.1 2009/05/30 22:35:57 miod Exp $
--- splash/SplashXPath.cc.orig	Tue Feb 27 22:05:52 2007
+++ splash/SplashXPath.cc	Fri Dec  3 21:16:36 2010
@@@@ -76,10 +76,26 @@@@ SplashXPath::SplashXPath(SplashPath *path, SplashCoord
@


1.1
log
@Fix possible out of bounds access in xpath code, reported upstream; bump
package name. ok kili@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 2
+++ splash/SplashXPath.cc	Sat May 30 19:51:56 2009
@@@@ -77,9 +77,17 @@@@ SplashXPath::SplashXPath(SplashPath *path, SplashCoord
d8 8
@


1.1.4.1
log
@MFC:

SECURITY FIX

----------------------------
revision 1.65
date: 2009/05/30 22:35:56;  author: miod;  state: Exp;  lines: +2 -2
Fix possible out of bounds access in xpath code, reported upstream
----------------------------
revision 1.64
date: 2009/04/17 20:55:46;  author: kili;  state: Exp;  lines: +6 -5
SECURITY: update to xpdf-3.02pl3 which fixes multiple vulnerabilities.
See http://rhn.redhat.com/errata/RHSA-2009-0430.html for details.
----------------------------
@
text
@d1 1
a1 1
$OpenBSD: patch-splash_SplashXPath_cc,v 1.1 2009/05/30 22:35:57 miod Exp $
@

