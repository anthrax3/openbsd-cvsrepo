head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.26
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.24
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.22
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.18
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.20
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.16
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.14
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.12
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.10
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.06.07.18.47.59;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.1
log
@fix build with upcoming MODPY_VERSION bump to 2.7.

ok landry@@
@
text
@$OpenBSD$

Assignment to __debug__, even as an attribute, is not allowed in
Python 2.7. See upstream tracker issue
<http://bugs.python.org/issue9438>. (LP: #719188)

--- jaxml.py.orig	Thu Jun 26 08:59:38 2003
+++ jaxml.py	Tue Jun  7 09:14:33 2011
@@@@ -955,13 +955,21 @@@@ class CGI_document(HTML_document) :
 
     it inherits from the HTML_document class, but more methods are present
     """
-    __possibleargs = {"version": "1.0", "encoding": "iso-8859-1", "content_type": "text/html", "content_disposition": "", "expires": "", "pragma": "", "redirect": "", "status": "", "statmes": "", "debug": None}
+    __possibleargs = {"version": "1.0", "encoding": "iso-8859-1", "content_type": "text/html", "content_disposition": "", "expires": "", "pragma": "", "redirect": "", "status": "", "statmes": "", "debug_file": None}
 
     def __init__(self, **args) :
         """
         Initialise local datas.
         """
         HTML_document.__init__(self)
+        #translate keyword argument 'debug' to 'debug_file' to not break API
+        if args.has_key("debug") :
+            if args.has_key("debug_file"):
+                #in case both arguments 'debug' and 'debug_file' are given, the latter wins
+                args.pop("debug")
+            else :
+                args["debug_file"] = args.pop("debug")
+ 
         for key in self.__possibleargs.keys() :
                 if args.has_key(key) :
                         value = args[key]
@@@@ -987,7 +995,7 @@@@ class CGI_document(HTML_document) :
 
     def _set_debug(self, file) :
         """Sets the flag to send the output to a file too."""
-        self.__debug__ = file
+        self.__debug_file__ = file
 
     def _set_pragma(self, pragma) :
         """Defines the pragma value.
@@@@ -1145,12 +1153,12 @@@@ class CGI_document(HTML_document) :
     def _output(self, file = "-") :
         """Prints the CGI script output to stdout or file.
 
-           If self.__debug__ is defined it is used as a file
+           If self.__debug_file__ is defined it is used as a file
            to which send the output to too.
         """
         HTML_document._output(self, file)
-        if self.__debug__ :
-                HTML_document._output(self, self.__debug__)
+        if self.__debug_file__ :
+                HTML_document._output(self, self.__debug_file__)
 
 class Html_document :
         """This class warns the programmer when used, and exits the program.
@
