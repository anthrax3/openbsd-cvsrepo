head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.10
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	sthen_20121112:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.06.28.05.46.12;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	FdmxZU3LetJ7mp9z;

1.1
date	2012.11.12.13.36.55;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.11.12.13.36.55;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to rasqal-0.9.33.
@
text
@$OpenBSD: patch-configure_ac,v 1.1.1.1 2012/11/12 13:36:55 sthen Exp $
--- configure.ac.orig	Sun Nov 23 23:11:33 2014
+++ configure.ac	Fri Jun 26 16:25:57 2015
@@@@ -618,26 +618,26 @@@@ if test "X$libgcrypt_config" != "Xno" ; then
   fi
 fi
 
-AC_CHECK_HEADERS(gcrypt.h)
-
-AC_MSG_CHECKING(for gcrypt)
 GCRYPT_VERSION=`$LIBGCRYPT_CONFIG --version 2>/dev/null`
-if test "X$GCRYPT_VERSION" = X; then
-  have_digest_gcrypt=no
-elif test "$ac_cv_header_gcrypt_h" = "yes"; then
+if test "X$GCRYPT_VERSION" != X; then
   oCPPFLAGS="$CPPFLAGS"
   oLIBS="$LIBS"
   CPPFLAGS="$CPPFLAGS `$LIBGCRYPT_CONFIG --cflags`"
   LIBS="$LIBS `$LIBGCRYPT_CONFIG --libs`"
 
-  AC_LINK_IFELSE([AC_LANG_PROGRAM([[
-  #include <gcrypt.h>]], [[ gcry_md_hd_t hash; gcry_md_open(hash, GCRY_MD_MD5, 0); ]])],[have_digest_gcrypt=yes],[have_digest_gcrypt=no])
+  AC_CHECK_HEADERS(gcrypt.h)
+  if test "$ac_cv_header_gcrypt_h" = "yes"; then
+    AC_TRY_LINK([
+    #include <gcrypt.h>],
+    [ gcry_md_hd_t hash; gcry_md_open(hash, GCRY_MD_MD5, 0); ],
+      have_digest_gcrypt=yes,
+      have_digest_gcrypt=no)
+  fi
 
   CPPFLAGS="$oCPPFLAGS"
   LIBS="$oLIBS"
-else
-  have_digest_gcrypt=no
 fi
+AC_MSG_CHECKING(for gcrypt)
 AC_MSG_RESULT($have_digest_gcrypt)
 
 
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
$OpenBSD$
--- configure.ac.orig	Thu May  3 05:35:11 2012
+++ configure.ac	Fri Oct 12 16:06:31 2012
@@@@ -590,29 +590,25 @@@@ if test "X$LIBGCRYPT_CONFIG" = "X"; then
   AC_CHECK_PROGS(LIBGCRYPT_CONFIG, libgcrypt-config)
d20 3
a22 7
-
-  AC_TRY_LINK([
-  #include <gcrypt.h>],
-  [ gcry_md_hd_t hash; gcry_md_open(hash, GCRY_MD_MD5, 0); ],
-    have_digest_gcrypt=yes,
-    have_digest_gcrypt=no)
-
d31 2
a32 1
   CPPFLAGS="$LIBRDF_CPPFLAGS"
a36 1
+
@


1.1.1.1
log
@import textproc/rasqal, split from redland. ok landry@@
- merged from openbsd-wip and dlg@@ diffs.

Rasqal is a C library that handles Resource Description Framework
(RDF) query language syntaxes, query construction and execution of
queries returning results as bindings, boolean, RDF graphs/triples
or syntaxes. The supported query languages are SPARQL 1.0, RDQL,
Draft SPARQL Query 1.1, Update 1.1 Syntax and Experimental SPARQL
extensions (LAQRS). Rasqal can write binding query results in the
SPARQL XML, SPARQL JSON, CSV, TSV, HTML, ASCII tables, RDF/XML and
Turtle / N3 and read them in SPARQL XML, RDF/XML and Turtle / N3.

Rasqal was designed to work closely with the Redland RDF library
and the Raptor RDF Syntax Library but is entirely separate from
both.
@
text
@@
