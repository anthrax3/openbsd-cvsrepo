head	1.2;
access;
symbols
	OPENBSD_6_1:1.1.0.2
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.07.02.22.20.22;	author bcallah;	state dead;
branches;
next	1.1;
commitid	Y1NnMyaWfb4NxDZl;

1.1
date	2017.01.05.13.50.49;	author tb;	state Exp;
branches;
next	;
commitid	jOcUACC4TpAvcliX;


desc
@@


1.2
log
@Update to 2.0.0 -- Please note that this breaks backwards compatibility as
.agignore was renamed to .ignore!
ok Florian Stinglmayr (MAINTAINER)
@
text
@$OpenBSD: patch-src_ignore_c,v 1.1 2017/01/05 13:50:49 tb Exp $

Fix heap overflow.
https://github.com/ggreer/the_silver_searcher/pull/1040/

--- src/ignore.c.orig	Sat Dec  3 21:46:47 2016
+++ src/ignore.c	Tue Jan  3 22:16:05 2017
@@@@ -295,15 +295,7 @@@@ int filename_filter(const char *path, const struct dir
     }
 
     scandir_baton_t *scandir_baton = (scandir_baton_t *)baton;
-    const char *base_path = scandir_baton->base_path;
-    const size_t base_path_len = scandir_baton->base_path_len;
-    const char *path_start = path;
-
-    for (i = 0; base_path[i] == path[i] && i < base_path_len; i++) {
-        /* base_path always ends with "/\0" while path doesn't, so this is safe */
-        path_start = path + i + 2;
-    }
-    log_debug("path_start %s filename %s", path_start, filename);
+    const char *path_start = scandir_baton->path_start;
 
     const char *extension = strchr(filename, '.');
     if (extension) {
@


1.1
log
@Fix a buffer overrun and subsequent crash that may occur when ag is given
an absolute path as root of the tree to search: it's looking for a trailing
slash that isn't always there.

Fix by Allen Wild, https://github.com/ggreer/the_silver_searcher/pull/1040/

ok awolk, sthen, jca
@
text
@d1 1
a1 1
$OpenBSD$
@

