head	1.3;
access;
symbols
	OPENBSD_6_0:1.1.0.4
	OPENBSD_5_9:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2016.12.12.10.54.39;	author sthen;	state dead;
branches;
next	1.2;
commitid	Enu3DDXVVc0luyIA;

1.2
date	2016.10.16.09.16.52;	author sthen;	state Exp;
branches;
next	1.1;
commitid	dEwglaqKyYstWUzR;

1.1
date	2016.08.27.20.58.48;	author jca;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;
commitid	7TTHy8bFvHVkME08;

1.1.2.1
date	2016.08.28.08.29.52;	author jca;	state Exp;
branches;
next	;
commitid	UZ2weo3fxxKMyZsI;

1.1.4.1
date	2016.08.28.08.48.51;	author jca;	state Exp;
branches;
next	;
commitid	9lONBNUglSNwbwFH;


desc
@@


1.3
log
@update to mupdf-1.10a
@
text
@$OpenBSD: patch-source_pdf_pdf-xref_c,v 1.2 2016/10/16 09:16:52 sthen Exp $

  CVE-2016-6265

  http://git.ghostscript.com/?p=mupdf.git;a=commitdiff;h=fa1936405b6a84e5c9bb440912c23d532772f958

--- source/pdf/pdf-xref.c.orig	Thu Apr 21 12:14:32 2016
+++ source/pdf/pdf-xref.c	Sun Oct 16 10:07:02 2016
@@@@ -1191,8 +1191,14 @@@@ pdf_load_xref(fz_context *ctx, pdf_document *doc, pdf_
 				fz_throw(ctx, FZ_ERROR_GENERIC, "object offset out of range: %d (%d 0 R)", (int)entry->ofs, i);
 		}
 		if (entry->type == 'o')
-			if (entry->ofs <= 0 || entry->ofs >= xref_len || pdf_get_xref_entry(ctx, doc, entry->ofs)->type != 'n')
-				fz_throw(ctx, FZ_ERROR_GENERIC, "invalid reference to an objstm that does not exist: %d (%d 0 R)", (int)entry->ofs, i);
+		{
+			/* Read this into a local variable here, because pdf_get_xref_entry
+			 * may solidify the xref, hence invalidating "entry", meaning we
+			 * need a stashed value for the throw. */
+			fz_off_t ofs = entry->ofs;
+			if (ofs <= 0 || ofs >= xref_len || pdf_get_xref_entry(ctx, doc, ofs)->type != 'n')
+				fz_throw(ctx, FZ_ERROR_GENERIC, "invalid reference to an objstm that does not exist: %d (%d 0 R)", (int)ofs, i);
+		}
 	}
 }
 
@@@@ -1578,8 +1584,10 @@@@ pdf_close_document(fz_context *ctx, pdf_document *doc)
 	 * glyph cache at this point. */
 	fz_purge_glyph_cache(ctx);
 
+#ifdef WITH_JS
 	if (doc->js)
 		pdf_drop_js(ctx, doc->js);
+#endif
 
 	pdf_drop_xref_sections(ctx, doc);
 	fz_free(ctx, doc->xref_index);
@


1.2
log
@update to mupdf-1.9a
@
text
@d1 1
a1 1
$OpenBSD: patch-source_pdf_pdf-xref_c,v 1.1 2016/08/27 20:58:48 jca Exp $
@


1.1
log
@SECURITY fixes for CVE-2016-6525 & CVE-2016-6265

CVE-2016-6525 heap overflow in pdf_load_mesh_params()
CVE-2016-6265 use-after-free

Reported by & looks good to stsp@@, ok sthen@@ (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
d7 3
a9 3
--- source/pdf/pdf-xref.c.orig	Sat Aug 27 13:05:41 2016
+++ source/pdf/pdf-xref.c	Sat Aug 27 13:06:53 2016
@@@@ -1199,8 +1199,14 @@@@ pdf_load_xref(fz_context *ctx, pdf_document *doc, pdf_
d26 11
@


1.1.4.1
log
@SECURITY fixes for CVE-2016-6525 & CVE-2016-6265

CVE-2016-6525 heap overflow in pdf_load_mesh_params()
CVE-2016-6265 use-after-free

Reported by & looks good to stsp@@, ok sthen@@ (maintainer)
Tests on 6.0 by kili@@
@
text
@d1 1
a1 1
$OpenBSD: patch-source_pdf_pdf-xref_c,v 1.1.2.1 2016/08/28 08:29:52 jca Exp $
@


1.1.2.1
log
@SECURITY fixes for CVE-2016-6525 & CVE-2016-6265

CVE-2016-6525 heap overflow in pdf_load_mesh_params()
CVE-2016-6265 use-after-free

Reported by & looks good to stsp@@, ok sthen@@ (maintainer)
Tests on 6.0 by kili@@
@
text
@d1 1
a1 1
$OpenBSD: patch-source_pdf_pdf-xref_c,v 1.1 2016/08/27 20:58:48 jca Exp $
@

