head	1.5;
access;
symbols
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.10.29.22.08.59;	author sthen;	state dead;
branches;
next	1.4;

1.4
date	2013.04.29.12.54.00;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2013.04.07.11.38.06;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.21.01.26.03;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2012.11.24.09.55.54;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to MuPDF 1.3, and enable cURL support (separate binary, not subpackaged
here as cURL is a fairly common package).

Earlier version without cURL support ok rpe@@, additional tests on various
arch from brett@@, Florian Stinglmayr and Donovan Watteau (who also reminded
me about a change of name for mubusy needed in DESCR).
@
text
@$OpenBSD: patch-apps_x11_main_c,v 1.4 2013/04/29 12:54:00 sthen Exp $

From a20d6a58ebc6c60ff44f0f385cf399ee6fca55bf Mon Sep 17 00:00:00 2001
From: Robin Watts <Robin.Watts@@artifex.com>
Date: Fri, 26 Apr 2013 12:21:17 +0100
Subject: [PATCH] Fix dirty flag handling bug in X11 event loop.

--- apps/x11_main.c.orig	Mon Apr 29 13:48:12 2013
+++ apps/x11_main.c	Mon Apr 29 13:49:12 2013
@@@@ -79,6 +79,7 @@@@ static int mapped = 0;
 static Cursor xcarrow, xchand, xcwait, xccaret;
 static int justcopied = 0;
 static int dirty = 0;
+static int transition_dirty = 0;
 static int dirtysearch = 0;
 static char *password = "";
 static XColor xbgcolor;
@@@@ -504,6 +505,8 @@@@ static void winblit(pdfapp_t *app)
 void winrepaint(pdfapp_t *app)
 {
 	dirty = 1;
+	if (app->in_transit)
+		transition_dirty = 1;
 }
 
 void winrepaintsearch(pdfapp_t *app)
@@@@ -779,7 +782,7 @@@@ int main(int argc, char **argv)
 
 	while (!closing)
 	{
-		while (!closing && XPending(xdpy) && !dirty)
+		while (!closing && XPending(xdpy) && !transition_dirty)
 		{
 			XNextEvent(xdpy, &xevt);
 
@@@@ -886,6 +889,7 @@@@ int main(int argc, char **argv)
 			else if (dirtysearch)
 				winblitsearch(&gapp);
 			dirty = 0;
+			transition_dirty = 0;
 			dirtysearch = 0;
 			pdfapp_postblit(&gapp);
 		}
@@@@ -899,7 +903,7 @@@@ int main(int argc, char **argv)
 			timeradd(&now, &tmo, &tmo_at);
 		}
 
-		if (XPending(xdpy) || dirty)
+		if (XPending(xdpy) || transition_dirty)
 			continue;
 
 		timeout = NULL;
@


1.4
log
@better fix for slow scrolling, from upstream repo
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@add patch from http://bugs.ghostscript.com/show_bug.cgi?id=693679 fixing
painfully slow scrolling at higher dpi
@
text
@d3 4
a6 1
http://bugs.ghostscript.com/show_bug.cgi?id=693679
d8 17
a24 4
--- apps/x11_main.c.orig	Sun Apr  7 12:28:50 2013
+++ apps/x11_main.c	Sun Apr  7 12:29:05 2013
@@@@ -840,6 +840,7 @@@@ int main(int argc, char **argv)
 				break;
d26 27
a52 5
 			case MotionNotify:
+				while(XCheckTypedEvent(xdpy,MotionNotify,&xevt));
 				oldx = xevt.xmotion.x;
 				oldy = xevt.xmotion.y;
 				onmouse(xevt.xmotion.x, xevt.xmotion.y, 0, xevt.xmotion.state, 0);
@


1.2
log
@update to MuPDF 1.2 (just the base for now, I may add a flavour for the
form support later; that needs v8 so won't be in the standard package)
@
text
@d1 8
a8 6
$OpenBSD: patch-apps_x11_main_c,v 1.1 2012/11/24 09:55:54 sthen Exp $
--- apps/x11_main.c.orig	Sat Nov 24 09:45:52 2012
+++ apps/x11_main.c	Sat Nov 24 09:45:57 2012
@@@@ -667,9 +667,10 @@@@ int main(int argc, char **argv)
 	if (argc - fz_optind == 1)
 		pageno = atoi(argv[fz_optind++]);
d10 5
a14 8
+	pdfapp_init(ctx, &gapp);
+
 	winopen();
 
-	pdfapp_init(ctx, &gapp);
 	if (resolution == -1)
 		resolution = winresolution();
 	if (resolution < MINRES)
@


1.1
log
@don't segfault if run with DISPLAY unset, reported by bentley@@
@
text
@d1 1
a1 1
$OpenBSD$
@

