head	1.2;
access;
symbols
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.04.06.06.50.32;	author kevlo;	state dead;
branches
	1.2.2.1;
next	1.1;

1.1
date	2004.03.15.22.00.55;	author naddy;	state Exp;
branches;
next	;

1.2.2.1
date	2004.07.21.19.25.39;	author brad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@upgrade to 2.6.8
@
text
@$OpenBSD: patch-nanoftp_c,v 1.1 2004/03/15 22:00:55 naddy Exp $
--- nanoftp.c.orig	2003-10-29 14:27:37.000000000 +0100
+++ nanoftp.c	2004-03-08 23:51:02.000000000 +0100
@@@@ -111,6 +111,8 @@@@
 #define FTP_GET_PASSWD		331
 #define FTP_BUF_SIZE		512
 
+#define XML_NANO_MAX_URLBUF     4096
+
 typedef struct xmlNanoFTPCtxt {
     char *protocol;	/* the protocol name */
     char *hostname;	/* the host name */
@@@@ -287,7 +289,7 @@@@ static void
 xmlNanoFTPScanURL(void *ctx, const char *URL) {
     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
     const char *cur = URL;
-    char buf[4096];
+    char buf[XML_NANO_MAX_URLBUF];
     int indx = 0;
     int port = 0;
 
@@@@ -305,7 +307,7 @@@@ xmlNanoFTPScanURL(void *ctx, const char 
     }
     if (URL == NULL) return;
     buf[indx] = 0;
-    while (*cur != 0) {
+    while ((*cur != 0) && (indx < XML_NANO_MAX_URLBUF - 1)) {
         if ((cur[0] == ':') && (cur[1] == '/') && (cur[2] == '/')) {
 	    buf[indx] = 0;
 	    ctxt->protocol = xmlMemStrdup(buf);
@@@@ -322,7 +324,7 @@@@ xmlNanoFTPScanURL(void *ctx, const char 
     {
 	const char *p = strchr(cur, '@@');
 	if(p) {
-	    while(1) {
+	    while(indx < XML_NANO_MAX_URLBUF-1) {
 		if(cur[0] == ':' || cur[0] == '@@') break;
 		buf[indx++] = *cur++;
 	    }
@@@@ -331,7 +333,7 @@@@ xmlNanoFTPScanURL(void *ctx, const char 
 	    indx = 0;
 	    if(cur[0] == ':') {
 		cur++;
-		while(1) {
+		while(indx < XML_NANO_MAX_URLBUF-1) {
 		    if(cur[0] == '@@') break;
 		    buf[indx++] = *cur++;
 		}
@@@@ -343,7 +345,7 @@@@ xmlNanoFTPScanURL(void *ctx, const char 
 	}
     }
 
-    while (1) {
+    while (indx < XML_NANO_MAX_URLBUF - 1) {
 	if ((strchr (cur, '[') && !strchr (cur, ']')) ||
 		(!strchr (cur, '[') && strchr (cur, ']'))) {
 	    xmlGenericError (xmlGenericErrorContext, "\nxmlNanoFTPScanURL: %s",
@@@@ -410,7 +412,7 @@@@ xmlNanoFTPScanURL(void *ctx, const char 
     else {
         indx = 0;
         buf[indx] = 0;
-	while (*cur != 0)
+	while ((*cur != 0) && (indx < XML_NANO_MAX_URLBUF-1))
 	    buf[indx++] = *cur++;
 	buf[indx] = 0;
 	ctxt->path = xmlMemStrdup(buf);
@@@@ -435,7 +437,7 @@@@ int
 xmlNanoFTPUpdateURL(void *ctx, const char *URL) {
     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
     const char *cur = URL;
-    char buf[4096];
+    char buf[XML_NANO_MAX_URLBUF];
     int indx = 0;
     int port = 0;
 
@@@@ -448,7 +450,7 @@@@ xmlNanoFTPUpdateURL(void *ctx, const cha
     if (ctxt->hostname == NULL)
 	return(-1);
     buf[indx] = 0;
-    while (*cur != 0) {
+    while ((*cur != 0) && (indx < XML_NANO_MAX_URLBUF-1)) {
         if ((cur[0] == ':') && (cur[1] == '/') && (cur[2] == '/')) {
 	    buf[indx] = 0;
 	    if (strcmp(ctxt->protocol, buf))
@@@@ -463,7 +465,7 @@@@ xmlNanoFTPUpdateURL(void *ctx, const cha
 	return(-1);
 
     buf[indx] = 0;
-    while (1) {
+    while (indx < XML_NANO_MAX_URLBUF-1) {
 	if ((strchr (cur, '[') && !strchr (cur, ']')) ||
 		(!strchr (cur, '[') && strchr (cur, ']'))) {
 	    xmlGenericError (xmlGenericErrorContext, "\nxmlNanoFTPUpdateURL: %s",
@@@@ -473,7 +475,7 @@@@ xmlNanoFTPUpdateURL(void *ctx, const cha
 
 	if (cur[0] == '[') {
 	    cur++;
-	    while (cur[0] != ']')
+	    while ((cur[0] != ']') && (indx < XML_NANO_MAX_URLBUF-1))
 		buf[indx++] = *cur++;
 
 	    if (!strchr (buf, ':')) {
@@@@ -540,7 +542,7 @@@@ xmlNanoFTPUpdateURL(void *ctx, const cha
     else {
         indx = 0;
         buf[indx] = 0;
-	while (*cur != 0)
+	while ((*cur != 0) && (indx < XML_NANO_MAX_URLBUF-1))
 	    buf[indx++] = *cur++;
 	buf[indx] = 0;
 	ctxt->path = xmlMemStrdup(buf);
@@@@ -561,7 +563,7 @@@@ xmlNanoFTPUpdateURL(void *ctx, const cha
 void
 xmlNanoFTPScanProxy(const char *URL) {
     const char *cur = URL;
-    char buf[4096];
+    char buf[XML_NANO_MAX_URLBUF];
     int indx = 0;
     int port = 0;
 
@@@@ -580,7 +582,7 @@@@ xmlNanoFTPScanProxy(const char *URL) {
 #endif
     if (URL == NULL) return;
     buf[indx] = 0;
-    while (*cur != 0) {
+    while ((*cur != 0) && (indx < XML_NANO_MAX_URLBUF-1)) {
         if ((cur[0] == ':') && (cur[1] == '/') && (cur[2] == '/')) {
 	    buf[indx] = 0;
 	    indx = 0;
@@@@ -592,7 +594,7 @@@@ xmlNanoFTPScanProxy(const char *URL) {
     if (*cur == 0) return;
 
     buf[indx] = 0;
-    while (1) {
+    while (indx < XML_NANO_MAX_URLBUF-1) {
 	if ((strchr (cur, '[') && !strchr (cur, ']')) ||
 		(!strchr (cur, '[') && strchr (cur, ']'))) {
 	    xmlGenericError (xmlGenericErrorContext, "\nxmlNanoFTPScanProxy: %s",
@


1.2.2.1
log
@Buffer overflow fixes.

http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2004-0110
@
text
@d1 4
a4 4
$OpenBSD$
--- nanoftp.c.orig	Wed Aug 13 21:18:06 2003
+++ nanoftp.c	Wed Jul 21 14:39:17 2004
@@@@ -102,6 +102,8 @@@@
d13 1
a13 1
@@@@ -266,7 +268,7 @@@@ static void
d22 1
a22 1
@@@@ -284,7 +286,7 @@@@ xmlNanoFTPScanURL(void *ctx, const char 
d31 1
a31 1
@@@@ -301,7 +303,7 @@@@ xmlNanoFTPScanURL(void *ctx, const char 
d40 1
a40 1
@@@@ -310,7 +312,7 @@@@ xmlNanoFTPScanURL(void *ctx, const char 
d49 1
a49 1
@@@@ -322,7 +324,7 @@@@ xmlNanoFTPScanURL(void *ctx, const char 
d58 1
a58 1
@@@@ -389,7 +391,7 @@@@ xmlNanoFTPScanURL(void *ctx, const char 
d67 1
a67 1
@@@@ -414,7 +416,7 @@@@ int
d76 1
a76 1
@@@@ -427,7 +429,7 @@@@ xmlNanoFTPUpdateURL(void *ctx, const cha
d85 1
a85 1
@@@@ -442,7 +444,7 @@@@ xmlNanoFTPUpdateURL(void *ctx, const cha
d94 1
a94 1
@@@@ -452,7 +454,7 @@@@ xmlNanoFTPUpdateURL(void *ctx, const cha
d103 1
a103 1
@@@@ -519,7 +521,7 @@@@ xmlNanoFTPUpdateURL(void *ctx, const cha
d112 1
a112 1
@@@@ -540,7 +542,7 @@@@ xmlNanoFTPUpdateURL(void *ctx, const cha
d121 1
a121 1
@@@@ -559,7 +561,7 @@@@ xmlNanoFTPScanProxy(const char *URL) {
d130 1
a130 1
@@@@ -571,7 +573,7 @@@@ xmlNanoFTPScanProxy(const char *URL) {
@


1.1
log
@Buffer overflow fixes.
From upstream CVS repository via Robert Nagy <thuglife@@bsd.hu>; ok pvalchev@@
@
text
@d1 1
a1 1
$OpenBSD$
@

