head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.8
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.6
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.01.06.16.50.35;	author sthen;	state Exp;
branches;
next	;
commitid	MxCFzeISQmJbcaWC;


desc
@@


1.1
log
@Build wkhtmltopdf against patched Qt4; from maintainer Frank Groeneveld
with tweaks by me. This allows printing multiple documents into one PDF,
headless operation, adding a document outline, ToC, headers/footers and
links, using the "screen" media-type, and disabling smart-shrink.
@
text
@$OpenBSD$
--- qt/src/corelib/codecs/qiconvcodec.cpp.orig	Wed Dec  9 20:22:51 2015
+++ qt/src/corelib/codecs/qiconvcodec.cpp	Wed Dec  9 20:23:50 2015
@@@@ -219,12 +219,7 @@@@ QString QIconvCodec::convertToUnicode(const char* char
     IconvState *state = *pstate;
     size_t inBytesLeft = len;
     // best case assumption, each byte is converted into one UTF-16 character, plus 2 bytes for the BOM
-#ifdef GNU_LIBICONV
-    // GNU doesn't disagree with POSIX :/
-    const char *inBytes = chars;
-#else
     char *inBytes = const_cast<char *>(chars);
-#endif
 
     QByteArray in;
     if (remainingCount) {
@@@@ -318,11 +313,7 @@@@ static bool setByteOrder(iconv_t cd)
     size_t outBytesLeft = sizeof buf;
     size_t inBytesLeft = sizeof bom;
 
-#if defined(GNU_LIBICONV)
-    const char **inBytesPtr = const_cast<const char **>(&inBytes);
-#else
     char **inBytesPtr = &inBytes;
-#endif
 
     if (iconv(cd, inBytesPtr, &inBytesLeft, &outBytes, &outBytesLeft) == (size_t) -1) {
         return false;
@@@@ -338,11 +329,7 @@@@ QByteArray QIconvCodec::convertFromUnicode(const QChar
     char *outBytes;
     size_t inBytesLeft;
 
-#if defined(GNU_LIBICONV)
-    const char **inBytesPtr = const_cast<const char **>(&inBytes);
-#else
     char **inBytesPtr = &inBytes;
-#endif
 
     IconvState *temporaryState = 0;
     QThreadStorage<QIconvCodec::IconvState *> *ts = fromUnicodeState();
@
