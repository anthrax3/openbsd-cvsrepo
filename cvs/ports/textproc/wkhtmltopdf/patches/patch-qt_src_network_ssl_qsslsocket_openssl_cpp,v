head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2016.01.06.17.13.48;	author sthen;	state Exp;
branches;
next	1.1;
commitid	5sy72Dsua8h4RBTn;

1.1
date	2016.01.06.16.50.35;	author sthen;	state Exp;
branches;
next	;
commitid	MxCFzeISQmJbcaWC;


desc
@@


1.2
log
@drop part of the ssl patch in wkhtmltopdf that was restricting https to tls1.0
@
text
@$OpenBSD: patch-qt_src_network_ssl_qsslsocket_openssl_cpp,v 1.1 2016/01/06 16:50:35 sthen Exp $
--- qt/src/network/ssl/qsslsocket_openssl.cpp.orig	Thu Jul  2 12:46:37 2015
+++ qt/src/network/ssl/qsslsocket_openssl.cpp	Wed Jan  6 17:06:15 2016
@@@@ -267,7 +267,11 @@@@ init_context:
 #endif
         break;
     case QSsl::SslV3:
+#ifndef OPENSSL_NO_SSL3
         ctx = q_SSL_CTX_new(client ? q_SSLv3_client_method() : q_SSLv3_server_method());
+#else
+        ctx = 0; // SSL 3 not supported by the system, but chosen deliberately -> error
+#endif
         break;
     case QSsl::SecureProtocols: // SslV2 will be disabled below
     case QSsl::TlsV1SslV3: // SslV2 will be disabled below
@


1.1
log
@Build wkhtmltopdf against patched Qt4; from maintainer Frank Groeneveld
with tweaks by me. This allows printing multiple documents into one PDF,
headless operation, adding a document outline, ToC, headers/footers and
links, using the "screen" media-type, and disabling smart-shrink.
@
text
@d1 4
a4 4
$OpenBSD$
--- qt/src/network/ssl/qsslsocket_openssl.cpp.orig	Thu Jul  2 13:46:37 2015
+++ qt/src/network/ssl/qsslsocket_openssl.cpp	Tue Jan  5 22:55:31 2016
@@@@ -267,15 +267,19 @@@@ init_context:
d14 2
a15 13
-    case QSsl::SecureProtocols: // SslV2 will be disabled below
-    case QSsl::TlsV1SslV3: // SslV2 will be disabled below
     case QSsl::AnyProtocol:
-    default:
         ctx = q_SSL_CTX_new(client ? q_SSLv23_client_method() : q_SSLv23_server_method());
         break;
     case QSsl::TlsV1:
+    case QSsl::SecureProtocols:
+    case QSsl::TlsV1SslV3:
+    default:
         ctx = q_SSL_CTX_new(client ? q_TLSv1_client_method() : q_TLSv1_server_method());
         break;
     }
@

