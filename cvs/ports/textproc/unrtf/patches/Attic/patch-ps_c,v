head	1.3;
access;
symbols
	OPENBSD_5_6:1.2.0.38
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.36
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.34
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.32
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.30
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.28
	OPENBSD_5_0:1.2.0.26
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.24
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.22
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.20
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.18
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.16
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.14
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.12
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.10
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.8
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.12.30.15.02.32;	author sthen;	state dead;
branches;
next	1.2;
commitid	GI8r6U53xUmkVguh;

1.2
date	2005.05.15.18.09.41;	author db;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.06.02.11.33;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to unrtf 0.21.8, fixing some issues discovered with afl
@
text
@$OpenBSD: patch-ps_c,v 1.2 2005/05/15 18:09:41 db Exp $
--- ps.c.orig	Thu Feb 19 00:35:03 2004
+++ ps.c	Thu May 12 12:46:35 2005
@@@@ -116,352 +116,350 @@@@ static char* cp850 [] = {
 
 
 
-#define PS_END "\
-%% --------- \n\n\
-  didShowPage not { \n\
-    showpage \n\
-  } if\n\n\
-%%%%EOF\n"
+#define PS_END \
+"%% --------- \n\n"\
+"  didShowPage not { \n"\
+"    showpage \n"\
+"  } if\n\n"\
+"%%%%EOF\n"
 
 
 
 
-#define PS_START "\
-%%%%!PS\n\
-%%--------------------------------------------------------------------------\n\
-%% GNU UnRTF, a command-line program to convert RTF documents to other formats.\n\
-%% Copyright (C) 2000,2001 Zachary Thayer Smith\n\
-%%\n\
-%% This program is free software; you can redistribute it and/or modify\n\
-%% it under the terms of the GNU General Public License as published by\n\
-%% the Free Software Foundation; either version 2 of the License, or\n\
-%% (at your option) any later version.\n\
-%%\n\
-%% This program is distributed in the hope that it will be useful,\n\
-%% but WITHOUT ANY WARRANTY; without even the implied warranty of\n\
-%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\
-%% GNU General Public License for more details.\n\
-%%\n\
-%% You should have received a copy of the GNU General Public License\n\
-%% along with this program; if not, write to the Free Software\n\
-%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\
-%%\n\
-%% The author is reachable by electronic mail at tuorfa@@yahoo.com.\n\
-%%--------------------------------------------------------------------------\n\
-%%%%EndComments \n\
-%%\n\
-%%         --------- Note, this PS code is unfinished -------- \n\
-%%         --------- Note, this PS code is unfinished -------- \n\
-%%         --------- Note, this PS code is unfinished -------- \n\
-%%         --------- Note, this PS code is unfinished -------- \n\
-%%         --------- Note, this PS code is unfinished -------- \n\
-%%\n\
-%% ----------- Variables ------------\n\
-/fontFamily /Times def\n\
-/fontAscent 0 def %% ascent for current font\n\
-/fontDescent 0 def %% descent for current font\n\
-/lineAscent 0 def \n\
-/lineDescent 0 def \n\
-/pageWidthInches 8.5 def \n\
-/pageHeightInches 11 def \n\
-/leftMargin 20 def \n\
-/rightMargin 20 def \n\
-/topMargin 20 def \n\
-/bottomMargin 20 def \n\
-/DPI 72 def \n\
-/pageWidth pageWidthInches DPI mul def \n\
-/rightLimit pageWidth rightMargin sub def \n\
-/pageHeight pageHeightInches DPI mul def \n\
-/x 0 def \n\
-/y 0 def \n\
-/bold false def \n\
-/italic false def \n\
-/underline false def \n\
-/overline false def \n\
-/intercharSpace 0 def \n\
-/strike false def \n\
-/outline false def \n\
-/shadow false def \n\
-/fontSize 12 def \n\
-/didBR false def \n\
-/didParSkip false def \n\
-/didShowPage false def \n\
-%%------------------------------------------------------\n\
-%% Set up the ISO fonts \n\
-\n\
-%% Times \n\
-%% ----- \n\
-/Times-Roman findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/TRomanISO exch definefont pop			\n\n\
-/Times-Bold findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/TBoldISO exch definefont pop			\n\n\
-/Times-BoldItalic findfont dup length dict begin {	\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/TBoldItalicISO exch definefont pop			\n\n\
-/Times-Italic findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/TItalicISO exch definefont pop			\n\n\
-%% Courier \n\
-%% ----- \n\
-/Courier-Roman findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/CRomanISO exch definefont pop			\n\n\
-/Courier-Bold findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/CBoldISO exch definefont pop			\n\n\
-/Courier-BoldItalic findfont dup length dict begin {	\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/CBoldItalicISO exch definefont pop			\n\n\
-/Courier-Italic findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/CItalicISO exch definefont pop			\n\n\
-%% Symbol \n\
-%% ----- \n\
-/Symbol-Roman findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/SRomanISO exch definefont pop			\n\n\
-/Symbol-Bold findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/SBoldISO exch definefont pop			\n\n\
-/Symbol-BoldItalic findfont dup length dict begin {	\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/SBoldItalicISO exch definefont pop			\n\n\
-/Symbol-Italic findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/SItalicISO exch definefont pop			\n\n\
-%% Helvetica \n\
-%% --------- \n\
-/Helvetica-Roman findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/HRomanISO exch definefont pop			\n\n\
-/Helvetica-Bold findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/HBoldISO exch definefont pop			\n\n\
-/Helvetica-BoldOblique findfont dup length dict begin {	\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/HBoldItalicISO exch definefont pop			\n\n\
-/Helvetica-Oblique findfont dup length dict begin {		\n\
-	1 index /FID ne { def } { pop pop } ifelse	\n\
-} forall						\n\
-/Encoding ISOLatin1Encoding def 			\n\
-currentdict end						\n\
-/HItalicISO exch definefont pop			\n\n\
-%% \n\
-%% Ideally, before we can draw a line of text, we need to collect all the\n\
-%% words that will be on it, just as I do in my Beest HTML viewer, as well\n\
-%% as character attributes for each word. But for now, this implementation \n\
-%% does not bother. It determines the maximize ascent and descent after\n\
-%% drawing the text, not before. XX\n\
-%% \n\
-%% ----------- Functions ------------\n\
-/updateFont { \n\
-	/f0 null def \n\
-	(Times) fontFamily eq (Times New Roman) fontFamily eq or { \n\
-		bold { \n\
-			italic { /TBoldItalicISO } { /TBoldISO } ifelse \n\
-		} { \n\
-			italic { /TItalicISO } { /TRomanISO } ifelse \n\
-		} \n\
-		ifelse \n\
-	} if \n\
-	(Helvetica) fontFamily eq (Arial) fontFamily eq or { \n\
-		bold { \n\
-			italic { /HBoldItalicISO } { /HBoldISO } ifelse \n\
-		} { \n\
-			italic { /HItalicISO } { /HRomanISO } ifelse \n\
-		} \n\
-		ifelse \n\
-	} if \n\
-	(Courier) fontFamily eq (Courier New) fontFamily eq or { \n\
-		bold { \n\
-			italic { /CBoldItalicISO } { /CBoldISO } ifelse \n\
-		} { \n\
-			italic { /CItalicISO } { /CRomanISO } ifelse \n\
-		} \n\
-		ifelse \n\
-	} if \n\
-	(Symbol) fontFamily eq { \n\
-		bold { \n\
-			italic { /SBoldItalicISO } { /SBoldISO } ifelse \n\
-		} { \n\
-			italic { /SItalicISO } { /SRomanISO } ifelse \n\
-		} \n\
-		ifelse \n\
-	} if \n\n\
-	findfont /f0 exch def  \n\
-	/bboxBottom f0 /FontBBox get 1 get 1000 div fontSize mul -1 mul def \n\
-	/bboxTop    f0 /FontBBox get 3 get 1000 div fontSize mul def \n\
-	f0 fontSize scalefont setfont \n\
-	lineAscent bboxTop lt { /lineAscent bboxTop def } if  \n\
-	lineDescent bboxBottom lt { /lineDescent bboxBottom def } if  \n\
-	/fontAscent bboxTop def \n\
-	/fontDescent bboxBottom def \n\
-} def\n\
-/FS { \n\
-	/fontSize exch def updateFont \n\
-} def \n\
-/F { \n\
-	/fontFamily exch def updateFont \n\
-} def \n\
-/resetX { \n\
-	/x leftMargin def\n\
-} def \n\
-/resetY { \n\
-	/y pageHeight topMargin sub def \n\
-} def \n\
-/BR {  \n\
-	/oldx x def \n\
-	/y y lineAscent lineDescent add sub def  \n\
-	resetX \n\
-	y bottomMargin lt { \n\
-		showpage \n\
-		/didShowPage true \n\
-		resetY \n\
-	} if \n\
-	oldx 0 eq didBR and { /didParSkip true def } if \n\
-	/didBR true def \n\
-	% /lineAscent 0 def \n\
-	% /lineDescent 0 def \n\
-} def \n\
-/P { \n\
-	didParSkip not { BR } if \n\
-	didParSkip not { BR } if \n\
-} \n\
-def \n\
-/acharpath { \n\
-	/acstr exch def pop /acsp exch def \n\
-	newpath  \n\
-	str { \n\
-		/ch exch def \n\
-		1 string 0 ch put false charpath \n\
-		acsp 0 rmoveto \n\
-	} forall \n\
-} def \n\
-/A { \n\
-	/str exch def \n\
-	/w str stringwidth pop \n\
-		str length intercharSpace mul add \n\
-		def \n\
-		x w add rightLimit ge { BR } if \n\
-	x y moveto \n\
-	outline {                                           \n\
-		shadow {                                    \n\
-			1 -0.1 0 {                        \n\
-				/offset exch def \n\
-				offset setgray                 \n\
-				x offset 3 mul add y offset 3 mul sub moveto \n\
-				intercharSpace 0 str acharpath \n\
-				%% str false charpath \n\
-				fontSize 30 div setlinewidth stroke \n\
-			} for                               \n\
-			0 setgray \n\
-		} {                                         \n\
-			intercharSpace 0 str acharpath      \n\
-			%% str false charpath \n\
-			fontSize 30 div setlinewidth stroke \n\
-		} ifelse                                    \n\
-	} {                                                 \n\
-		shadow {                                    \n\
-			1 -0.1 0 {                        \n\
-				/offset exch def \n\
-				offset setgray                 \n\
-				x offset 3 mul add y offset 3 mul sub moveto \n\
-				intercharSpace 0 str ashow  \n\
-				%% str show \n\
-			} for                               \n\
-			0 setgray \n\
-		} {                                         \n\
-			intercharSpace 0 str ashow          \n\
-			%% str show \n\
-		} ifelse                                    \n\
-	} ifelse                                            \n\
-	strike {							\n\
-		newpath fontSize 20 div setlinewidth			\n\
-		x y fontAscent 0.32 mul add dup /y2 exch def moveto	\n\
-		x w add y2 lineto stroke				\n\
-	} if								\n\
-	underline {							\n\
-		newpath fontSize 20 div setlinewidth			\n\
-		x y fontAscent 0.2 mul sub dup /y2 exch def moveto	\n\
-		x w add y2 lineto stroke				\n\
-	} if								\n\
-	overline {							\n\
-		%% I don't think RTF supports this, but it can be used later. \n\
-		newpath fontSize 20 div setlinewidth			\n\
-		x y fontAscent 1.2 mul add dup /y2 exch def moveto	\n\
-		x w add y2 lineto stroke				\n\
-	} if					\n\
-	/x x w add def  			\n\
-	/didBR false def 			\n\
-	/didShowPage false def 			\n\
-} def \n\
-\n\
-%% These are only binary for now \n\
-/X1 { /intercharSpace exch def } def\n\
-/X0 { /intercharSpace 0 def } def\n\
-/O1 { /outline false def } def\n\
-/O0 { /outline false def } def\n\
-/H1 { /shadow true def } def\n\
-/H0 { /shadow false def } def\n\
-/S1 { /strike true def } def\n\
-/S0 { /strike false def } def\n\
-/B1 { /bold true def updateFont } def\n\
-/B0 { /bold false def updateFont } def\n\
-/I1 { /italic true def updateFont } def\n\
-/I0 { /italic false def updateFont } def\n\
-/U1 { /underline true def } def\n\
-/U0 { /underline false def } def\n\
-updateFont \n\
-resetX resetY \n\
-\n\
-"
+#define PS_START \
+"%%%%!PS\n"\
+"%%--------------------------------------------------------------------------\n"\
+"%% GNU UnRTF, a command-line program to convert RTF documents to other formats.\n"\
+"%% Copyright (C) 2000,2001 Zachary Thayer Smith\n"\
+"%%\n"\
+"%% This program is free software; you can redistribute it and/or modify\n"\
+"%% it under the terms of the GNU General Public License as published by\n"\
+"%% the Free Software Foundation; either version 2 of the License, or\n"\
+"%% (at your option) any later version.\n"\
+"%%\n"\
+"%% This program is distributed in the hope that it will be useful,\n"\
+"%% but WITHOUT ANY WARRANTY; without even the implied warranty of\n"\
+"%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"\
+"%% GNU General Public License for more details.\n"\
+"%%\n"\
+"%% You should have received a copy of the GNU General Public License\n"\
+"%% along with this program; if not, write to the Free Software\n"\
+"%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n"\
+"%%\n"\
+"%% The author is reachable by electronic mail at tuorfa@@yahoo.com.\n"\
+"%%--------------------------------------------------------------------------\n"\
+"%%%%EndComments \n"\
+"%%\n"\
+"%%         --------- Note, this PS code is unfinished -------- \n"\
+"%%         --------- Note, this PS code is unfinished -------- \n"\
+"%%         --------- Note, this PS code is unfinished -------- \n"\
+"%%         --------- Note, this PS code is unfinished -------- \n"\
+"%%\n"\
+"%% ----------- Variables ------------\n"\
+"/fontFamily /Times def\n"\
+"/fontAscent 0 def %% ascent for current font\n"\
+"/fontDescent 0 def %% descent for current font\n"\
+"/lineAscent 0 def \n"\
+"/lineDescent 0 def \n"\
+"/pageWidthInches 8.5 def \n"\
+"/pageHeightInches 11 def \n"\
+"/leftMargin 20 def \n"\
+"/rightMargin 20 def \n"\
+"/topMargin 20 def \n"\
+"/bottomMargin 20 def \n"\
+"/DPI 72 def \n"\
+"/pageWidth pageWidthInches DPI mul def \n"\
+"/rightLimit pageWidth rightMargin sub def \n"\
+"/pageHeight pageHeightInches DPI mul def \n"\
+"/x 0 def \n"\
+"/y 0 def \n"\
+"/bold false def \n"\
+"/italic false def \n"\
+"/underline false def \n"\
+"/overline false def \n"\
+"/intercharSpace 0 def \n"\
+"/strike false def \n"\
+"/outline false def \n"\
+"/shadow false def \n"\
+"/fontSize 12 def \n"\
+"/didBR false def \n"\
+"/didParSkip false def \n"\
+"/didShowPage false def \n"\
+"%%------------------------------------------------------\n"\
+"%% Set up the ISO fonts \n"\
+"\n"\
+"%% Times \n"\
+"%% ----- \n"\
+"/Times-Roman findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/TRomanISO exch definefont pop			\n\n"\
+"/Times-Bold findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/TBoldISO exch definefont pop			\n\n"\
+"/Times-BoldItalic findfont dup length dict begin {	\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/TBoldItalicISO exch definefont pop			\n\n"\
+"/Times-Italic findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/TItalicISO exch definefont pop			\n\n"\
+"%% Courier \n"\
+"%% ----- \n"\
+"/Courier-Roman findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/CRomanISO exch definefont pop			\n\n"\
+"/Courier-Bold findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/CBoldISO exch definefont pop			\n\n"\
+"/Courier-BoldItalic findfont dup length dict begin {	\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/CBoldItalicISO exch definefont pop			\n\n"\
+"/Courier-Italic findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/CItalicISO exch definefont pop			\n\n"\
+"%% Symbol \n"\
+"%% ----- \n"\
+"/Symbol-Roman findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/SRomanISO exch definefont pop			\n\n"\
+"/Symbol-Bold findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/SBoldISO exch definefont pop			\n\n"\
+"/Symbol-BoldItalic findfont dup length dict begin {	\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/SBoldItalicISO exch definefont pop			\n\n"\
+"/Symbol-Italic findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/SItalicISO exch definefont pop			\n\n"\
+"%% Helvetica \n"\
+"%% --------- \n"\
+"/Helvetica-Roman findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/HRomanISO exch definefont pop			\n\n"\
+"/Helvetica-Bold findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/HBoldISO exch definefont pop			\n\n"\
+"/Helvetica-BoldOblique findfont dup length dict begin {	\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/HBoldItalicISO exch definefont pop			\n\n"\
+"/Helvetica-Oblique findfont dup length dict begin {		\n"\
+"	1 index /FID ne { def } { pop pop } ifelse	\n"\
+"} forall						\n"\
+"/Encoding ISOLatin1Encoding def 			\n"\
+"currentdict end						\n"\
+"/HItalicISO exch definefont pop			\n\n"\
+"%% \n"\
+"%% Ideally, before we can draw a line of text, we need to collect all the\n"\
+"%% words that will be on it, just as I do in my Beest HTML viewer, as well\n"\
+"%% as character attributes for each word. But for now, this implementation \n"\
+"%% does not bother. It determines the maximize ascent and descent after\n"\
+"%% drawing the text, not before. XX\n"\
+"%% \n"\
+"%% ----------- Functions ------------\n"\
+"/updateFont { \n"\
+"	/f0 null def \n"\
+"	(Times) fontFamily eq (Times New Roman) fontFamily eq or { \n"\
+"		bold { \n"\
+"			italic { /TBoldItalicISO } { /TBoldISO } ifelse \n"\
+"		} { \n"\
+"			italic { /TItalicISO } { /TRomanISO } ifelse \n"\
+"		} \n"\
+"		ifelse \n"\
+"	} if \n"\
+"	(Helvetica) fontFamily eq (Arial) fontFamily eq or { \n"\
+"		bold { \n"\
+"			italic { /HBoldItalicISO } { /HBoldISO } ifelse \n"\
+"		} { \n"\
+"			italic { /HItalicISO } { /HRomanISO } ifelse \n"\
+"		} \n"\
+"		ifelse \n"\
+"	} if \n"\
+"	(Courier) fontFamily eq (Courier New) fontFamily eq or { \n"\
+"		bold { \n"\
+"			italic { /CBoldItalicISO } { /CBoldISO } ifelse \n"\
+"		} { \n"\
+"			italic { /CItalicISO } { /CRomanISO } ifelse \n"\
+"		} \n"\
+"		ifelse \n"\
+"	} if \n"\
+"	(Symbol) fontFamily eq { \n"\
+"		bold { \n"\
+"			italic { /SBoldItalicISO } { /SBoldISO } ifelse \n"\
+"		} { \n"\
+"			italic { /SItalicISO } { /SRomanISO } ifelse \n"\
+"		} \n"\
+"		ifelse \n"\
+"	} if \n\n"\
+"	findfont /f0 exch def  \n"\
+"	/bboxBottom f0 /FontBBox get 1 get 1000 div fontSize mul -1 mul def \n"\
+"	/bboxTop    f0 /FontBBox get 3 get 1000 div fontSize mul def \n"\
+"	f0 fontSize scalefont setfont \n"\
+"	lineAscent bboxTop lt { /lineAscent bboxTop def } if  \n"\
+"	lineDescent bboxBottom lt { /lineDescent bboxBottom def } if  \n"\
+"	/fontAscent bboxTop def \n"\
+"	/fontDescent bboxBottom def \n"\
+"} def\n"\
+"/FS { \n"\
+"	/fontSize exch def updateFont \n"\
+"} def \n"\
+"/F { \n"\
+"	/fontFamily exch def updateFont \n"\
+"} def \n"\
+"/resetX { \n"\
+"	/x leftMargin def\n"\
+"} def \n"\
+"/resetY { \n"\
+"	/y pageHeight topMargin sub def \n"\
+"} def \n"\
+"/BR {  \n"\
+"	/oldx x def \n"\
+"	/y y lineAscent lineDescent add sub def  \n"\
+"	resetX \n"\
+"	y bottomMargin lt { \n"\
+"		showpage \n"\
+"		/didShowPage true \n"\
+"		resetY \n"\
+"	} if \n"\
+"	oldx 0 eq didBR and { /didParSkip true def } if \n"\
+"	/didBR true def \n"\
+"	% /lineAscent 0 def \n"\
+"	% /lineDescent 0 def \n"\
+"} def \n"\
+"/P { \n"\
+"	didParSkip not { BR } if \n"\
+"	didParSkip not { BR } if \n"\
+"} \n"\
+"def \n"\
+"/acharpath { \n"\
+"	/acstr exch def pop /acsp exch def \n"\
+"	newpath  \n"\
+"	str { \n"\
+"		/ch exch def \n"\
+"		1 string 0 ch put false charpath \n"\
+"		acsp 0 rmoveto \n"\
+"	} forall \n"\
+"} def \n"\
+"/A { \n"\
+"	/str exch def \n"\
+"	/w str stringwidth pop \n"\
+"		str length intercharSpace mul add \n"\
+"		def \n"\
+"		x w add rightLimit ge { BR } if \n"\
+"	x y moveto \n"\
+"	outline {                                           \n"\
+"		shadow {                                    \n"\
+"			1 -0.1 0 {                        \n"\
+"				/offset exch def \n"\
+"				offset setgray                 \n"\
+"				x offset 3 mul add y offset 3 mul sub moveto \n"\
+"				intercharSpace 0 str acharpath \n"\
+"				%% str false charpath \n"\
+"				fontSize 30 div setlinewidth stroke \n"\
+"			} for                               \n"\
+"			0 setgray \n"\
+"		} {                                         \n"\
+"			intercharSpace 0 str acharpath      \n"\
+"			%% str false charpath \n"\
+"			fontSize 30 div setlinewidth stroke \n"\
+"		} ifelse                                    \n"\
+"	} {                                                 \n"\
+"		shadow {                                    \n"\
+"			1 -0.1 0 {                        \n"\
+"				/offset exch def \n"\
+"				offset setgray                 \n"\
+"				x offset 3 mul add y offset 3 mul sub moveto \n"\
+"				intercharSpace 0 str ashow  \n"\
+"				%% str show \n"\
+"			} for                               \n"\
+"			0 setgray \n"\
+"		} {                                         \n"\
+"			intercharSpace 0 str ashow          \n"\
+"			%% str show \n"\
+"		} ifelse                                    \n"\
+"	} ifelse                                            \n"\
+"	strike {							\n"\
+"		newpath fontSize 20 div setlinewidth			\n"\
+"		x y fontAscent 0.32 mul add dup /y2 exch def moveto	\n"\
+"		x w add y2 lineto stroke				\n"\
+"	} if								\n"\
+"	underline {							\n"\
+"		newpath fontSize 20 div setlinewidth			\n"\
+"		x y fontAscent 0.2 mul sub dup /y2 exch def moveto	\n"\
+"		x w add y2 lineto stroke				\n"\
+"	} if								\n"\
+"	overline {							\n"\
+"		%% I don't think RTF supports this, but it can be used later. \n"\
+"		newpath fontSize 20 div setlinewidth			\n"\
+"		x y fontAscent 1.2 mul add dup /y2 exch def moveto	\n"\
+"		x w add y2 lineto stroke				\n"\
+"	} if					\n"\
+"	/x x w add def  			\n"\
+"	/didBR false def 			\n"\
+"	/didShowPage false def 			\n"\
+"} def \n"\
+"\n"\
+"%% These are only binary for now \n"\
+"/X1 { /intercharSpace exch def } def\n"\
+"/X0 { /intercharSpace 0 def } def\n"\
+"/O1 { /outline false def } def\n"\
+"/O0 { /outline false def } def\n"\
+"/H1 { /shadow true def } def\n"\
+"/H0 { /shadow false def } def\n"\
+"/S1 { /strike true def } def\n"\
+"/S0 { /strike false def } def\n"\
+"/B1 { /bold true def updateFont } def\n"\
+"/B0 { /bold false def updateFont } def\n"\
+"/I1 { /italic true def updateFont } def\n"\
+"/I0 { /italic false def updateFont } def\n"\
+"/U1 { /underline true def } def\n"\
+"/U0 { /underline false def } def\n"\
+"updateFont \n"\
+"resetX resetY \n"\
+"\n"
 
 
 
@


1.2
log
@update to version 0.19.3
ok maintainer, sturm@@
@
text
@d1 1
a1 1
$OpenBSD: patch-ps_c,v 1.1 2004/01/06 02:11:33 espie Exp $
@


1.1
log
@zap multiline string constant
@
text
@d1 4
a4 4
$OpenBSD$
--- ps.c.orig	2004-01-05 18:13:22.000000000 +0100
+++ ps.c	2004-01-06 03:09:04.000000000 +0100
@@@@ -115,370 +115,368 @@@@ static char* cp850 [] = {
d14 10
a23 4
-
-
-
-
d86 1
a86 1
-
d94 1
a94 2
-/TRomanISO exch definefont pop			\n\
-
d100 1
a100 2
-/TBoldISO exch definefont pop			\n\
-
d106 1
a106 2
-/TBoldItalicISO exch definefont pop			\n\
-
d112 1
a112 2
-/TItalicISO exch definefont pop			\n\
-
d120 1
a120 2
-/CRomanISO exch definefont pop			\n\
-
d126 1
a126 2
-/CBoldISO exch definefont pop			\n\
-
d132 1
a132 2
-/CBoldItalicISO exch definefont pop			\n\
-
d138 1
a138 2
-/CItalicISO exch definefont pop			\n\
-
d146 1
a146 2
-/SRomanISO exch definefont pop			\n\
-
d152 1
a152 2
-/SBoldISO exch definefont pop			\n\
-
d158 1
a158 2
-/SBoldItalicISO exch definefont pop			\n\
-
d164 1
a164 2
-/SItalicISO exch definefont pop			\n\
-
d172 1
a172 2
-/HRomanISO exch definefont pop			\n\
-
d178 1
a178 2
-/HBoldISO exch definefont pop			\n\
-
d184 1
a184 2
-/HBoldItalicISO exch definefont pop			\n\
-
d190 1
a190 2
-/HItalicISO exch definefont pop			\n\
-
d201 1
a201 1
-	(Times) fontFamily eq (Times New Roman) fontFamily eq or {
d208 2
a209 2
-	} if
-	(Helvetica) fontFamily eq (Arial) fontFamily eq or {
d216 2
a217 2
-	} if
-	(Courier) fontFamily eq (Courier New) fontFamily eq or {
d224 2
a225 2
-	} if
-	(Symbol) fontFamily eq {
d232 1
a232 2
-	} if
-
d274 7
a280 7
-	/acstr exch def pop /acsp exch def
-	newpath 
-	str {
-		/ch exch def
-		1 string 0 ch put false charpath
-		acsp 0 rmoveto
-	} forall
d294 1
a294 1
-				x offset 3 mul add y offset 3 mul sub moveto
d310 1
a310 1
-				x offset 3 mul add y offset 3 mul sub moveto
d314 1
a314 1
-			0 setgray
a359 11
-
+#define PS_END \
+"%% --------- \n\n"\
+"  didShowPage not { \n"\
+"    showpage \n"\
+"  } if\n\n"\
+"%%%%EOF\n"
+
+
+
+
a387 1
+"%%         --------- Note, this PS code is unfinished -------- \n"\
d429 1
a429 2
+"/TRomanISO exch definefont pop			\n"\
+"\n"\
d435 1
a435 2
+"/TBoldISO exch definefont pop			\n"\
+"\n"\
d441 1
a441 2
+"/TBoldItalicISO exch definefont pop			\n"\
+"\n"\
d447 1
a447 2
+"/TItalicISO exch definefont pop			\n"\
+"\n"\
d455 1
a455 2
+"/CRomanISO exch definefont pop			\n"\
+"\n"\
d461 1
a461 2
+"/CBoldISO exch definefont pop			\n"\
+"\n"\
d467 1
a467 2
+"/CBoldItalicISO exch definefont pop			\n"\
+"\n"\
d473 1
a473 2
+"/CItalicISO exch definefont pop			\n"\
+"\n"\
d481 1
a481 2
+"/SRomanISO exch definefont pop			\n"\
+"\n"\
d487 1
a487 2
+"/SBoldISO exch definefont pop			\n"\
+"\n"\
d493 1
a493 2
+"/SBoldItalicISO exch definefont pop			\n"\
+"\n"\
d499 1
a499 2
+"/SItalicISO exch definefont pop			\n"\
+"\n"\
d507 1
a507 2
+"/HRomanISO exch definefont pop			\n"\
+"\n"\
d513 1
a513 2
+"/HBoldISO exch definefont pop			\n"\
+"\n"\
d519 1
a519 2
+"/HBoldItalicISO exch definefont pop			\n"\
+"\n"\
d525 1
a525 2
+"/HItalicISO exch definefont pop			\n"\
+"\n"\
d536 1
a536 1
+"	(Times) fontFamily eq (Times New Roman) fontFamily eq or "\
d543 2
a544 2
+"	} i"\
+"	(Helvetica) fontFamily eq (Arial) fontFamily eq or "\
d551 2
a552 2
+"	} i"\
+"	(Courier) fontFamily eq (Courier New) fontFamily eq or "\
d559 2
a560 2
+"	} i"\
+"	(Symbol) fontFamily eq "\
d567 1
a567 2
+"	} i"\
+"\n"\
d609 7
a615 7
+"	/acstr exch def pop /acsp exch de"\
+"	newpath"\
+"	str "\
+"		/ch exch de"\
+"		1 string 0 ch put false charpat"\
+"		acsp 0 rmovet"\
+"	} foral"\
d629 1
a629 1
+"				x offset 3 mul add y offset 3 mul sub movet"\
d645 1
a645 1
+"				x offset 3 mul add y offset 3 mul sub movet"\
d649 1
a649 1
+"			0 setgra"\
@

