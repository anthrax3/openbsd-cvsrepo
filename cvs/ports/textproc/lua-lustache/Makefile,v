head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.1.1.1.0.2
	OPENBSD_6_0_BASE:1.1.1.1
	awolk_20160424:1.1.1.1
	awolk:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.10.16.23.21.23;	author jca;	state Exp;
branches;
next	1.2;
commitid	sOqqEJCjNHgeOrYE;

1.2
date	2016.09.22.12.57.18;	author fcambus;	state Exp;
branches;
next	1.1;
commitid	mgPOgZNo5YzYtJy2;

1.1
date	2016.04.23.22.22.01;	author awolk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	gzMIgzZG6Zz3SgtP;

1.1.1.1
date	2016.04.23.22.22.01;	author awolk;	state Exp;
branches;
next	;
commitid	gzMIgzZG6Zz3SgtP;


desc
@@


1.3
log
@Add explicit lua52/lua53 FLAVORS where supported.

Discussed on ports@@, sthen@@ agrees with the direction.
@
text
@# $OpenBSD: Makefile,v 1.2 2016/09/22 12:57:18 fcambus Exp $

COMMENT =	implementation of the mustache template system in Lua

V =		1.3.1
DISTNAME =	lustache-${V}
PKGNAME =	lua-${DISTNAME}
REVISION =	0

GH_ACCOUNT =	olivine-labs
GH_PROJECT =	lustache
GH_TAGNAME =	v${V}-0

CATEGORIES =	textproc

MAINTAINER =	Frederic Cambus <fcambus@@openbsd.org>

# MIT
PERMIT_PACKAGE_CDROM =	Yes

PKG_ARCH =	*

MODULES =	lang/lua

FLAVORS =	lua52 lua53
FLAVOR ?=

NO_BUILD =	Yes
NO_TEST =	Yes

do-install:
	${INSTALL_DATA_DIR} ${MODLUA_DATADIR} ${MODLUA_DATADIR}/lustache
	${INSTALL_DATA} ${WRKSRC}/src/*.lua ${MODLUA_DATADIR}
	${INSTALL_DATA} ${WRKSRC}/src/lustache/*.lua ${MODLUA_DATADIR}/lustache

.include <bsd.port.mk>
@


1.2
log
@Update my mail address
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2016/04/23 22:22:01 awolk Exp $
d24 3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.template,v 1.74 2016/03/11 20:32:23 naddy Exp $
d8 1
d16 1
a16 1
MAINTAINER =	Frederic Cambus <fred@@statdns.com>
@


1.1.1.1
log
@Import textproc/lua-lustache

lustache is an implementation of the mustache template system in Lua.

Mustache is a logic-less template syntax. It can be used for HTML, config
files, source code - anything. It works by expanding tags in a template
using values provided in a hash or object.

We call it "logic-less" because there are no if statements, else clauses,
or for loops. Instead there are only tags. Some tags are replaced with a
value, some nothing, and others a series of values.

Maintained in OpenBSD by Frederic Cambus

OK abieber@@

@
text
@@
