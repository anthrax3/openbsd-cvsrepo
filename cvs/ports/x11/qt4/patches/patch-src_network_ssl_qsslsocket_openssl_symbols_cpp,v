head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2015.09.17.12.24.42;	author dcoppa;	state Exp;
branches;
next	1.2;
commitid	Ow5BMo0nT8Lu9TE0;

1.2
date	2009.09.01.18.24.28;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2009.04.18.17.25.43;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
Fix libQtNetwork warnings following SSLv3 removal

OK sthen@@, zhuk@@
@
text
@$OpenBSD$
--- src/network/ssl/qsslsocket_openssl_symbols.cpp.orig	Wed Sep 16 13:27:39 2015
+++ src/network/ssl/qsslsocket_openssl_symbols.cpp	Wed Sep 16 13:33:06 2015
@@@@ -228,13 +228,17 @@@@ DEFINEFUNC(int, SSL_shutdown, SSL *a, a, return -1, re
 #ifndef OPENSSL_NO_SSL2
 DEFINEFUNC(const SSL_METHOD *, SSLv2_client_method, DUMMYARG, DUMMYARG, return 0, return)
 #endif
+#ifndef OPENSSL_NO_SSL3
 DEFINEFUNC(const SSL_METHOD *, SSLv3_client_method, DUMMYARG, DUMMYARG, return 0, return)
+#endif
 DEFINEFUNC(const SSL_METHOD *, SSLv23_client_method, DUMMYARG, DUMMYARG, return 0, return)
 DEFINEFUNC(const SSL_METHOD *, TLSv1_client_method, DUMMYARG, DUMMYARG, return 0, return)
 #ifndef OPENSSL_NO_SSL2
 DEFINEFUNC(const SSL_METHOD *, SSLv2_server_method, DUMMYARG, DUMMYARG, return 0, return)
 #endif
+#ifndef OPENSSL_NO_SSL3
 DEFINEFUNC(const SSL_METHOD *, SSLv3_server_method, DUMMYARG, DUMMYARG, return 0, return)
+#endif
 DEFINEFUNC(const SSL_METHOD *, SSLv23_server_method, DUMMYARG, DUMMYARG, return 0, return)
 DEFINEFUNC(const SSL_METHOD *, TLSv1_server_method, DUMMYARG, DUMMYARG, return 0, return)
 #else
@@@@ -822,13 +826,17 @@@@ bool q_resolveOpenSslSymbols()
 #ifndef OPENSSL_NO_SSL2
     RESOLVEFUNC(SSLv2_client_method)
 #endif
+#ifndef OPENSSL_NO_SSL3
     RESOLVEFUNC(SSLv3_client_method)
+#endif
     RESOLVEFUNC(SSLv23_client_method)
     RESOLVEFUNC(TLSv1_client_method)
 #ifndef OPENSSL_NO_SSL2
     RESOLVEFUNC(SSLv2_server_method)
 #endif
+#ifndef OPENSSL_NO_SSL3
     RESOLVEFUNC(SSLv3_server_method)
+#endif
     RESOLVEFUNC(SSLv23_server_method)
     RESOLVEFUNC(TLSv1_server_method)
     RESOLVEFUNC(X509_NAME_entry_count)
@


1.2
log
@4.5.2
@
text
@d1 9
a9 9
$OpenBSD: patch-src_network_ssl_qsslsocket_openssl_symbols_cpp,v 1.1 2009/04/18 17:25:43 espie Exp $
--- src/network/ssl/qsslsocket_openssl_symbols.cpp.orig	Fri Apr 17 14:03:42 2009
+++ src/network/ssl/qsslsocket_openssl_symbols.cpp	Fri Apr 17 14:11:40 2009
@@@@ -364,11 +364,14 @@@@ static QPair<QLibrary*, QLibrary*> loadOpenSsl()
     // DT_RPATH tags on our library header as well as other system-specific search
     // paths. See the man page for dlopen(3) on your system for more information.
 
+#ifdef Q_OS_OPENBSD
+    libcrypto->setLoadHints(QLibrary::ExportExternalSymbolsHint);
d11 29
a39 27
 #ifdef SHLIB_VERSION_NUMBER
     // first attempt: the canonical name is libssl.so.<SHLIB_VERSION_NUMBER>
     libssl->setFileNameAndVersion(QLatin1String("ssl"), QLatin1String(SHLIB_VERSION_NUMBER));
     libcrypto->setFileNameAndVersion(QLatin1String("crypto"), QLatin1String(SHLIB_VERSION_NUMBER));
-    if (libssl->load() && libcrypto->load()) {
+    if (libcrypto->load() && libssl->load()) {
         // libssl.so.<SHLIB_VERSION_NUMBER> and libcrypto.so.<SHLIB_VERSION_NUMBER> found
         return pair;
     } else {
@@@@ -380,7 +383,7 @@@@ static QPair<QLibrary*, QLibrary*> loadOpenSsl()
     // second attempt: find the development files libssl.so and libcrypto.so
     libssl->setFileNameAndVersion(QLatin1String("ssl"), -1);
     libcrypto->setFileNameAndVersion(QLatin1String("crypto"), -1);
-    if (libssl->load() && libcrypto->load()) {
+    if (libcrypto->load() && libssl->load()) {
         // libssl.so.0 and libcrypto.so.0 found
         return pair;
     } else {
@@@@ -395,7 +398,7 @@@@ static QPair<QLibrary*, QLibrary*> loadOpenSsl()
         crypto.replace(QLatin1String("ssl"), QLatin1String("crypto"));
         libssl->setFileNameAndVersion(ssl, -1);
         libcrypto->setFileNameAndVersion(crypto, -1);
-        if (libssl->load() && libcrypto->load()) {
+        if (libcrypto->load() && libssl->load()) {
             // libssl.so.0 and libcrypto.so.0 found
             return pair;
         } else {
@


1.1
log
@update to 4.5.0
(ready for a gcc4 switch to enable webkit)

notice -phonon got scraped, because it becomes too hard to keep phonon out
of main qt tools way (like assistant on top of qtconfig)
@
text
@d1 1
a1 1
$OpenBSD$
@

