head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.16
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.12
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.14
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.11.05.16.29.51;	author landry;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Fix QtWebkit on amd64. With the default 512Mb datasize ulimit, any app
using it crashes right away at startup, since it tries to preallocate
1Gb of memory.

From webkit's patch-Source_JavaScriptCore_jit_ExecutableAllocatorFixedVMPool_cpp
tested with mnemosyne & arora.
@
text
@$OpenBSD$

https://bugs.webkit.org/show_bug.cgi?id=61137
from www/webkit/patches/patch-Source_JavaScriptCore_jit_ExecutableAllocatorFixedVMPool_cpp
--- src/3rdparty/webkit/Source/JavaScriptCore/jit/ExecutableAllocatorFixedVMPool.cpp.orig	Mon Nov  5 15:21:42 2012
+++ src/3rdparty/webkit/Source/JavaScriptCore/jit/ExecutableAllocatorFixedVMPool.cpp	Mon Nov  5 15:21:57 2012
@@@@ -392,7 +392,8 @@@@ typedef AllocationTableDirectory<LazyAllocationTable<P
 
 #if CPU(ARM)
 typedef PageTables16MB FixedVMPoolPageTables;
-#elif CPU(X86_64)
+// We don't want an initial allocation of 1GB, it's above the default ulimit
+#elif CPU(X86_64) && !defined(__OpenBSD__)
 typedef PageTables1GB FixedVMPoolPageTables;
 #else
 typedef PageTables32MB FixedVMPoolPageTables;
@
