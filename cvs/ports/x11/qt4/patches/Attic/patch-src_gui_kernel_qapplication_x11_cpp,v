head	1.9;
access;
symbols
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2007.05.22.09.09.32;	author espie;	state dead;
branches;
next	1.8;

1.8
date	2007.03.17.17.58.17;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2006.12.06.08.32.44;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2006.10.08.21.43.50;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2006.06.04.09.37.43;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.05.21.58.07;	author espie;	state dead;
branches;
next	1.3;

1.3
date	2005.12.31.15.59.50;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.19.20.40.16;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.07.05.17.44.46;	author espie;	state Exp;
branches;
next	;


desc
@@


1.9
log
@update to 4.3.0rc1.
@
text
@$OpenBSD: patch-src_gui_kernel_qapplication_x11_cpp,v 1.8 2007/03/17 17:58:17 espie Exp $
--- src/gui/kernel/qapplication_x11.cpp.orig	Wed Feb 21 10:58:48 2007
+++ src/gui/kernel/qapplication_x11.cpp	Sat Mar 17 10:47:27 2007
@@@@ -4715,7 +4715,7 @@@@ static void sm_performSaveYourself(QSessionManagerPriv
     sm_setProperty(QString::fromLatin1(SmProgram), argument0);
     // tell the session manager about our user as well.
     struct passwd *entryPtr = 0;
-#if !defined(QT_NO_THREAD) && defined(_POSIX_THREAD_SAFE_FUNCTIONS)
+#if !defined(QT_NO_THREAD) && defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_OPENBSD)
     QVarLengthArray<char, 1024> buf(sysconf(_SC_GETPW_R_SIZE_MAX));
     struct passwd entry;
     getpwuid_r(geteuid(), &entry, buf.data(), buf.size(), &entryPtr);
@


1.8
log
@update to 4.2.3
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_kernel_qapplication_x11_cpp,v 1.7 2006/12/06 08:32:44 espie Exp $
@


1.7
log
@maintainance update to 4.2.2, no binary interface change, improvements in
about all libraries -> minor bumps.
@
text
@d1 4
a4 4
$OpenBSD: patch-src_gui_kernel_qapplication_x11_cpp,v 1.6 2006/10/08 21:43:50 espie Exp $
--- src/gui/kernel/qapplication_x11.cpp.orig	Mon Nov 27 18:26:13 2006
+++ src/gui/kernel/qapplication_x11.cpp	Wed Dec  6 01:16:14 2006
@@@@ -4712,7 +4712,7 @@@@ static void sm_performSaveYourself(QSess
@


1.6
log
@qt 4.2.0, lots of improvements.
@
text
@d1 4
a4 4
$OpenBSD: patch-src_gui_kernel_qapplication_x11_cpp,v 1.5 2006/06/04 09:37:43 espie Exp $
--- src/gui/kernel/qapplication_x11.cpp.orig	Fri Sep 29 16:45:03 2006
+++ src/gui/kernel/qapplication_x11.cpp	Sat Oct  7 13:10:23 2006
@@@@ -4707,7 +4707,7 @@@@ static void sm_performSaveYourself(QSess
@


1.5
log
@qt 4.1.3
@
text
@d1 5
a5 5
$OpenBSD$
--- src/gui/kernel/qapplication_x11.cpp.orig	Mon May 22 12:31:11 2006
+++ src/gui/kernel/qapplication_x11.cpp	Mon May 22 12:31:28 2006
@@@@ -5554,7 +5554,7 @@@@ static void sm_performSaveYourself(QSess
     sm_setProperty(QString::fromLatin1(SmProgram), QString::fromLocal8Bit(qApp->argv()[0]));
@


1.4
log
@update to qt 4.1.1
@
text
@d1 12
a12 26
$OpenBSD: patch-src_gui_kernel_qapplication_x11_cpp,v 1.3 2005/12/31 15:59:50 espie Exp $
--- src/gui/kernel/qapplication_x11.cpp.orig	Fri Dec 16 12:52:04 2005
+++ src/gui/kernel/qapplication_x11.cpp	Thu Dec 29 15:06:27 2005
@@@@ -417,7 +417,7 @@@@ static int qt_x_errhandler(Display *dpy,
     XGetErrorText( dpy, err->error_code, errstr, 256 );
     char buffer[256];
     char request_str[256];
-    sprintf(buffer, "%d", err->request_code);
+    snprintf(buffer, 256, "%d", err->request_code);
     XGetErrorDatabaseText(dpy, "XRequest", buffer, "", request_str, 256);
     if (err->request_code < 128) {
         // X error for a normal protocol request
@@@@ -440,11 +440,11 @@@@ static int qt_x_errhandler(Display *dpy,
 
         char minor_str[256];
         if (extensionName) {
-            sprintf(buffer, "%s.%d", extensionName, err->minor_code);
+            snprintf(buffer, 256, "%s.%d", extensionName, err->minor_code);
             XGetErrorDatabaseText(dpy, "XRequest", buffer, "", minor_str, 256);
         } else {
             extensionName = "Uknown extension";
-            sprintf(minor_str, "Unknown request");
+            snprintf(minor_str, 256, "Unknown request");
         }
         qWarning( "X Error: %s %d\n"
                   "  Extension:    %d (%s)\n"
@


1.3
log
@update to qt 4.1.0, heavily patch qmake to handle SHARED_LIBS.
patch a lot of Makefiles to avoid debug stuff entirely.
fix a few tests so that libmng gets picked up, and some various NIS
and IPv6 stuff.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_kernel_qapplication_x11_cpp,v 1.2 2005/09/19 20:40:16 espie Exp $
@


1.2
log
@Update to 4.0.1
@
text
@d1 4
a4 4
$OpenBSD: patch-src_gui_kernel_qapplication_x11_cpp,v 1.1 2005/07/05 17:44:46 espie Exp $
--- src/gui/kernel/qapplication_x11.cpp.orig	Tue Aug 16 10:41:12 2005
+++ src/gui/kernel/qapplication_x11.cpp	Sun Sep 18 15:42:27 2005
@@@@ -410,7 +410,7 @@@@ static int qt_x_errhandler(Display *dpy,
d13 1
a13 1
@@@@ -433,11 +433,11 @@@@ static int qt_x_errhandler(Display *dpy,
@


1.1
log
@fix a few building nits
@
text
@d1 4
a4 4
$OpenBSD$
--- src/gui/kernel/qapplication_x11.cpp.orig	Tue Jul  5 11:39:26 2005
+++ src/gui/kernel/qapplication_x11.cpp	Tue Jul  5 11:39:51 2005
@@@@ -417,7 +417,7 @@@@ static int qt_x_errhandler(Display *dpy,
d13 1
a13 1
@@@@ -440,11 +440,11 @@@@ static int qt_x_errhandler(Display *dpy,
@

