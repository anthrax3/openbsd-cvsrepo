head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.6
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2015.06.03.07.28.01;	author dcoppa;	state Exp;
branches;
next	1.4;
commitid	oaVrPQqHD3DHzE8M;

1.4
date	2014.07.12.11.10.14;	author dcoppa;	state Exp;
branches;
next	1.3;
commitid	u1HNNgYLVo9RYshW;

1.3
date	2012.06.14.09.38.35;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.28.14.55.47;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.04.19.09.36.30;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@
Bugfixing update to qt-4.8.7.
And use the new "qt.io" for HOMEPAGE / MASTER_SITES.

No fallout in a bulk build (ajacoutot@@)

OK espie@@ (maintainer)
@
text
@$OpenBSD: patch-src_3rdparty_javascriptcore_JavaScriptCore_wtf_Threading_h,v 1.4 2014/07/12 11:10:14 dcoppa Exp $
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h.orig	Thu May  7 16:14:48 2015
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h	Sun May 31 13:28:28 2015
@@@@ -241,7 +241,7 @@@@ inline int atomicDecrement(int volatile* addend) { ret
 inline int atomicIncrement(int volatile* addend) { return (int) atomic_add_value((unsigned volatile*)addend, 1); }
 inline int atomicDecrement(int volatile* addend) { return (int) atomic_sub_value((unsigned volatile*)addend, 1); }
 
-#elif COMPILER(GCC) && !CPU(SPARC64) && !OS(SYMBIAN) // sizeof(_Atomic_word) != sizeof(int) on sparc64 gcc
+#elif COMPILER(GCC) && !CPU(SPARC64) && !OS(SYMBIAN) && !OS(OPENBSD) // sizeof(_Atomic_word) != sizeof(int) on sparc64 gcc
 #define WTF_USE_LOCKFREE_THREADSAFESHARED 1
 
 inline int atomicIncrement(int volatile* addend) { return __sync_add_and_fetch(addend, 1); }
@


1.4
log
@
Update qt4 to version 4.8.6.

OK espie@@, jasper@@, bcallah@@ some time ago
@
text
@d1 4
a4 4
$OpenBSD: patch-src_3rdparty_javascriptcore_JavaScriptCore_wtf_Threading_h,v 1.3 2012/06/14 09:38:35 espie Exp $
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h.orig	Thu Apr 10 20:37:12 2014
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h	Tue May 13 11:25:32 2014
@@@@ -247,7 +247,7 @@@@ inline int atomicDecrement(int volatile* addend) { ret
@


1.3
log
@update to 4.8.2
- since we no longer have GCC3_ARCHES, simplify, no way it's gonna compile
on a GCC2_ARCH anyways (size matters)
- so, we have only SHARED_ONLY arches, remove those frags as well.
- fold back qt4-sqlite since sqlite is part of core now.
@
text
@d1 3
a3 3
$OpenBSD: patch-src_3rdparty_javascriptcore_JavaScriptCore_wtf_Threading_h,v 1.2 2010/10/28 14:55:47 espie Exp $
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h.orig	Thu Apr 26 21:46:22 2012
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h	Sun Jun 10 13:25:08 2012
d12 1
a12 1
 inline int atomicIncrement(int volatile* addend) { return __gnu_cxx::__exchange_and_add(addend, 1) + 1; }
@


1.2
log
@qt 4.7.0
@
text
@d1 6
a6 6
$OpenBSD: patch-src_3rdparty_javascriptcore_JavaScriptCore_wtf_Threading_h,v 1.1 2010/04/19 09:36:30 espie Exp $
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h.orig	Fri Sep 10 11:05:23 2010
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h	Sun Oct 24 14:18:33 2010
@@@@ -239,7 +239,7 @@@@ inline int atomicDecrement(int volatile* addend) { ret
 inline int atomicIncrement(int volatile* addend) { return android_atomic_inc(addend); }
 inline int atomicDecrement(int volatile* addend) { return android_atomic_dec(addend); }
@


1.1
log
@update to 4.6.2. things work apart from eventsview...
@
text
@d1 6
a6 6
$OpenBSD$
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h.orig	Sun Dec  6 12:38:14 2009
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h	Sun Dec  6 12:39:49 2009
@@@@ -228,7 +228,7 @@@@ inline int atomicDecrement(int volatile* addend) { ret
 inline int atomicIncrement(int volatile* addend) { return OSAtomicIncrement32Barrier(const_cast<int*>(addend)); }
 inline int atomicDecrement(int volatile* addend) { return OSAtomicDecrement32Barrier(const_cast<int*>(addend)); }
d8 2
a9 2
-#elif COMPILER(GCC) && !PLATFORM(SPARC64) // sizeof(_Atomic_word) != sizeof(int) on sparc64 gcc
+#elif COMPILER(GCC) && !PLATFORM(SPARC64) && !PLATFORM(OPENBSD) // sizeof(_Atomic_word) != sizeof(int) on sparc64 gcc
@

