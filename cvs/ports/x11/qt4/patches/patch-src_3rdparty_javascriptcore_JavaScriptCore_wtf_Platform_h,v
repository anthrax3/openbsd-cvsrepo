head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.10
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.6
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.8
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3;
locks; strict;
comment	@# @;


1.8
date	2014.07.12.11.10.14;	author dcoppa;	state Exp;
branches;
next	1.7;
commitid	u1HNNgYLVo9RYshW;

1.7
date	2013.10.04.13.15.40;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2013.01.14.22.09.43;	author bcallah;	state Exp;
branches;
next	1.5;

1.5
date	2012.06.14.09.38.35;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.28.14.55.47;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2010.06.21.16.40.52;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.30.09.09.14;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.04.23.16.22.25;	author espie;	state Exp;
branches;
next	;


desc
@@


1.8
log
@
Update qt4 to version 4.8.6.

OK espie@@, jasper@@, bcallah@@ some time ago
@
text
@$OpenBSD: patch-src_3rdparty_javascriptcore_JavaScriptCore_wtf_Platform_h,v 1.7 2013/10/04 13:15:40 dcoppa Exp $
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h.orig	Tue May 13 11:54:48 2014
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	Tue May 13 11:59:49 2014
@@@@ -333,27 +333,32 @@@@
 
 #endif /* ARM */
 
+#if CPU(ARM) || CPU(MIPS) || CPU(SH4) || CPU(MIPS64) || CPU(SPARC64)
+#define WTF_CPU_NEEDS_ALIGNED_ACCESS 1
+#endif
+
 /* CPU(MIPS) - MIPS, any version */
-#if (defined(mips) || defined(__mips__) || defined(MIPS) || defined(_MIPS_))
+#if (defined(mips) || defined(__mips__) || defined(MIPS) || defined(_MIPS_) || defined(__mips64__))
+#if defined(_ABIO32)
 #define WTF_CPU_MIPS 1
-#include <sgidefs.h>
+#endif
 #if defined(__MIPSEB__)
 #define WTF_CPU_BIG_ENDIAN 1
 #endif
-/* CPU(MIPS64) - MIPS 64-bit both BIG and LITTLE endian */
-#if defined(_MIPS_SIM_ABI64) && (_MIPS_SIM == _MIPS_SIM_ABI64)
+#if defined(__mips64__)
 #define WTF_CPU_MIPS64 1
+#define USE_SYSTEM_MALLOC 1
 #endif
-
-/* CPU(MIPSN32) - MIPS N32 ABI both BIG and LITTLE endian */
-#if defined(_MIPS_SIM_ABIN32) && (_MIPS_SIM == _MIPS_SIM_ABIN32)
-#define WTF_CPU_MIPSN32 1
-#endif
-
-/* CPU(MIPS32) - MIPS O32 ABI both BIG and LITTLE endian */
-#if defined(_MIPS_SIM_ABI32) && (_MIPS_SIM == _MIPS_SIM_ABI32)
-#define WTF_CPU_MIPS32 1
-#endif
+#define WTF_MIPS_PIC (defined __PIC__)
+#define WTF_MIPS_ARCH __mips
+#define WTF_MIPS_ISA(v) (defined WTF_MIPS_ARCH && WTF_MIPS_ARCH == v)
+#define WTF_MIPS_ISA_AT_LEAST(v) (defined WTF_MIPS_ARCH && WTF_MIPS_ARCH >= v)
+#define WTF_MIPS_ARCH_REV __mips_isa_rev
+#define WTF_MIPS_ISA_REV(v) (defined WTF_MIPS_ARCH_REV && WTF_MIPS_ARCH_REV == v)
+#define WTF_MIPS_DOUBLE_FLOAT (defined __mips_hard_float && !defined __mips_single_float)
+#define WTF_MIPS_FP64 (defined __mips_fpr && __mips_fpr == 64)
+/* MIPS requires allocators to use aligned memory */
+#define WTF_USE_ARENA_ALLOC_ALIGNMENT_INTEGER 1
 #endif /* __mips__ */
 
 
@@@@ -903,7 +908,7 @@@@
 #endif
 
 #if !defined(WTF_USE_JSVALUE64) && !defined(WTF_USE_JSVALUE32) && !defined(WTF_USE_JSVALUE32_64)
-#if (CPU(X86_64) && (OS(UNIX) || OS(WINDOWS) || OS(SOLARIS) || OS(HPUX))) || (CPU(IA64) && !CPU(IA64_32)) || CPU(ALPHA) || CPU(AIX64) || CPU(SPARC64) || CPU(MIPS64) || CPU(AARCH64)
+#if (CPU(X86_64) && (OS(UNIX) || OS(WINDOWS) || OS(SOLARIS) || OS(HPUX) || OS(OPENBSD))) || (CPU(IA64) && !CPU(IA64_32)) || CPU(ALPHA) || CPU(AIX64) || CPU(SPARC64) || CPU(MIPS64) || CPU(AARCH64)
 #define WTF_USE_JSVALUE64 1
 #elif CPU(ARM) || CPU(PPC64)
 #define WTF_USE_JSVALUE32 1
@


1.7
log
@Maintenance update to qt-4.8.5 (plus three bugfixes from upstream
via Arch Linux).
Feedback from zhuk@@, espie@@, and Amit Kulkarni.
ABI/API compatibility analysis done with abi-compliance-checker.

ok espie@@ (MAINTAINER)
@
text
@d1 6
a6 6
$OpenBSD: patch-src_3rdparty_javascriptcore_JavaScriptCore_wtf_Platform_h,v 1.6 2013/01/14 22:09:43 bcallah Exp $
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h.orig	Fri Jun  7 07:16:58 2013
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	Fri Sep 27 10:10:55 2013
@@@@ -142,6 +142,30 @@@@
 #endif
 #endif
d8 6
a13 1
+/* CPU(MIPS) and CPU(MIPS64) */
d16 2
a17 1
+#define WTF_CPU_MIPS 1
d19 5
d25 1
a25 1
+#define WTF_CPU_MIPS64 1
d27 11
a37 4
+#endif
+#if defined(__MIPSEB__)
+#define WTF_CPU_BIG_ENDIAN 1
+#endif
d48 1
a48 8
+#endif /* MIPS */
+
 /* CPU(HPPA) - a.k.a. PA-RISC */
 #if defined(__hppa) || defined(__hppa__)
 #define WTF_CPU_HPPA 1
@@@@ -325,8 +349,10 @@@@
 
 #endif /* ARM */
a49 7
+#if CPU(ARM) || CPU(MIPS) || CPU(SH4) || CPU(MIPS64) || CPU(SPARC64)
+#define WTF_CPU_NEEDS_ALIGNED_ACCESS 1
+#endif
 
-
 /* ==== OS() - underlying operating system; only to be used for mandated low-level services like 
    virtual memory, not to choose a GUI toolkit ==== */
d51 1
a51 1
@@@@ -873,7 +899,7 @@@@
d55 2
a56 2
-#if (CPU(X86_64) && (OS(UNIX) || OS(WINDOWS) || OS(SOLARIS) || OS(HPUX))) || (CPU(IA64) && !CPU(IA64_32)) || CPU(ALPHA) || CPU(AIX64) || CPU(SPARC64)
+#if (CPU(X86_64) && (OS(UNIX) || OS(WINDOWS) || OS(SOLARIS) || OS(HPUX) || OS(OPENBSD))) || (CPU(IA64) && !CPU(IA64_32)) || CPU(ALPHA) || CPU(AIX64) || CPU(SPARC64) || CPU(MIPS64)
@


1.6
log
@Allow qt4 to build on mips64* - note that build is quite literal here.
The resulting qt4 does not work.

ok espie@@ landry@@ jasper@@
@
text
@d1 3
a3 3
$OpenBSD: patch-src_3rdparty_javascriptcore_JavaScriptCore_wtf_Platform_h,v 1.5 2012/06/14 09:38:35 espie Exp $
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h.orig	Thu Apr 26 15:46:22 2012
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	Wed Jan  9 13:47:38 2013
d47 1
a47 1
@@@@ -884,7 +910,7 @@@@
@


1.5
log
@update to 4.8.2
- since we no longer have GCC3_ARCHES, simplify, no way it's gonna compile
on a GCC2_ARCH anyways (size matters)
- so, we have only SHARED_ONLY arches, remove those frags as well.
- fold back qt4-sqlite since sqlite is part of core now.
@
text
@d1 47
a47 4
$OpenBSD: patch-src_3rdparty_javascriptcore_JavaScriptCore_wtf_Platform_h,v 1.4 2010/10/28 14:55:47 espie Exp $
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h.orig	Thu Apr 26 21:46:22 2012
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	Sun Jun 10 13:25:08 2012
@@@@ -884,7 +884,7 @@@@
d52 1
a52 1
+#if (CPU(X86_64) && (OS(UNIX) || OS(WINDOWS) || OS(SOLARIS) || OS(HPUX) || OS(OPENBSD))) || (CPU(IA64) && !CPU(IA64_32)) || CPU(ALPHA) || CPU(AIX64) || CPU(SPARC64)
@


1.4
log
@qt 4.7.0
@
text
@d1 4
a4 4
$OpenBSD: patch-src_3rdparty_javascriptcore_JavaScriptCore_wtf_Platform_h,v 1.3 2010/06/21 16:40:52 espie Exp $
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h.orig	Fri Sep 10 11:05:23 2010
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	Sun Oct 24 14:17:40 2010
@@@@ -870,7 +870,7 @@@@
@


1.3
log
@minor update to 4.6.3
while there, clean up wantlibs.
- fix bug with new phonon (pick up ours and not it)
- fix a bug in qdbuscpp2xml (timeout)
- more patches for gcc3: sse code ICES, new demo doesn't compile.

spectrum not installed, seems to be macosX or something ? I can't get
a thing out of it.

Tested on gcc4 and gcc3...
@
text
@d1 4
a4 4
$OpenBSD: patch-src_3rdparty_javascriptcore_JavaScriptCore_wtf_Platform_h,v 1.2 2010/04/30 09:09:14 espie Exp $
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h.orig	Wed Jun  2 04:03:12 2010
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	Mon Jun 21 11:32:32 2010
@@@@ -723,7 +723,7 @@@@
d8 2
a9 4
-#if PLATFORM(X86_64) && (PLATFORM(DARWIN) || PLATFORM(LINUX) || PLATFORM(SOLARIS) || PLATFORM(HPUX))
+#if PLATFORM(X86_64) && (PLATFORM(DARWIN) || PLATFORM(LINUX) || PLATFORM(SOLARIS) || PLATFORM(HPUX) || PLATFORM(OPENBSD))
 #define WTF_USE_JSVALUE64 1
 #elif (PLATFORM(IA64) && !PLATFORM(IA64_32)) || PLATFORM(SPARC64) || PLATFORM(ALPHA)
d11 2
@


1.2
log
@fuck
@
text
@d1 4
a4 4
$OpenBSD: patch-src_3rdparty_javascriptcore_JavaScriptCore_wtf_Platform_h,v 1.1 2010/04/23 16:22:25 espie Exp $
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h.orig	Thu Feb 11 16:55:20 2010
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	Fri Apr 30 11:02:31 2010
@@@@ -718,7 +718,7 @@@@
d11 1
a11 1
 #elif (PLATFORM(IA64) && !PLATFORM(IA64_32)) || PLATFORM(SPARC64)
@


1.1
log
@fix for amd64, get the javascript idiotic library to compile the right
whatthefuck code.
common work with landry@@
@
text
@d1 3
a3 3
$OpenBSD$
--- src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h.orig	Fri Apr 23 15:48:40 2010
+++ src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	Fri Apr 23 15:49:35 2010
d9 1
a9 1
+#if PLATFORM(X86_64) && (PLATFORM(DARWIN) || PLATFORM(LINUX) || PLATFORM(SOLARIS) || PLATFORM(HPUX)) || PLATFORM(OPENBSD)
@

