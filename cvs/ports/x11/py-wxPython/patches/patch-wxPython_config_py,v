head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.22
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.18
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.20
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.16
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.14
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.12
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.14
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.12
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.10
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.6
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.4
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.1.1.1.0.4
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.2
	OPENBSD_4_1_BASE:1.1.1.1
	alek_20061017:1.1.1.1
	alek:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2011.05.22.08.21.34;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2007.10.23.11.45.14;	author steven;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.17.10.04.17;	author alek;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.10.17.10.04.17;	author alek;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to wxPython-2.8.12.0.

Based on a diff for 2.8.11.0 by rpointel@@
Tested in a bulk build by landry@@
OK rpointel@@, landry@@, alek@@ (maintainer)
@
text
@$OpenBSD: patch-wxPython_config_py,v 1.2 2007/10/23 11:45:14 steven Exp $
--- wxPython/config.py.orig	Wed Oct  3 11:20:46 2007
+++ wxPython/config.py	Wed Oct  3 11:21:52 2007
@@@@ -132,7 +132,7 @@@@ UNDEF_NDEBUG = 1   # Python 2.2 on Unix/Linux by defau
 NO_SCRIPTS = 0     # Don't install the tool scripts
 NO_HEADERS = 0     # Don't install the wxPython *.h and *.i files
 
-INSTALL_MULTIVERSION = 1 # Install the packages such that multiple versions
+INSTALL_MULTIVERSION = 0 # Install the packages such that multiple versions
                    # can co-exist.  When turned on the wx and wxPython
                    # pacakges will be installed in a versioned subdir
                    # of site-packages, and a *.pth file will be
@@@@ -145,7 +145,7 @@@@ INSTALL_MULTIVERSION = 1 # Install the packages such t
 FLAVOUR = ""       # Optional flavour string to be appended to VERSION
                    # in MULTIVERSION installs
 
-EP_ADD_OPTS = 1    # When doing MULTIVERSION installs the wx port and
+EP_ADD_OPTS = 0    # When doing MULTIVERSION installs the wx port and
                    # ansi/unicode settings can optionally be added to the
                    # subdir path used in site-packages
 
@@@@ -520,7 +520,7 @@@@ class wx_install_headers(distutils.command.install_hea
         if not headers:
             return
 
-        root = self.root
+        root = '${WRKINST}'
         #print "WXPREFIX is %s, root is %s" % (WXPREFIX, root)
         # hack for universal builds, which append i386/ppc
         # to the root
@@@@ -529,7 +529,7 @@@@ class wx_install_headers(distutils.command.install_hea
         for header, location in headers:
             install_dir = os.path.normpath(root +
                                            WXPREFIX +
-                                           '/include/wx-%d.%d/wx' % (VER_MAJOR, VER_MINOR) +
+                                           '/include/wx' +
                                            location)
             self.mkpath(install_dir)
             (out, _) = self.copy_file(header, install_dir)
@@@@ -594,7 +594,7 @@@@ def find_data_files(srcdir, *wildcards, **kw):
 
 def makeLibName(name):
     if os.name == 'posix' or COMPILER == 'mingw32':
-        libname = '%s_%s-%s' % (WXBASENAME, name, WXRELEASE)
+        libname = '%s_%s' % (WXBASENAME, name)
     elif name:
         libname = 'wxmsw%s%s_%s' % (WXDLLVER, libFlag(), name)
     else:
@@@@ -1013,8 +1013,6 @@@@ elif os.name == 'posix' or COMPILER == 'mingw32':
     if debug:
         cflags.append('-g')
         cflags.append('-O0')
-    else:
-        cflags.append('-O3')
 
     lflags = os.popen(WX_CONFIG + ' --libs', 'r').read()[:-1]
     MONOLITHIC = (lflags.find("_xrc") == -1)
@


1.2
log
@update to 2.8.6.0

tested by mbalmer
@
text
@d1 1
a1 1
$OpenBSD$
d4 1
a4 1
@@@@ -121,7 +121,7 @@@@ UNDEF_NDEBUG = 1   # Python 2.2 on Unix/Linux by defau
d13 1
a13 1
@@@@ -134,7 +134,7 @@@@ INSTALL_MULTIVERSION = 1 # Install the packages such t
d22 1
a22 1
@@@@ -486,7 +486,7 @@@@ class wx_install_headers(distutils.command.install_hea
d27 1
a27 1
+        root = "!!WRKINST!!"
d31 1
a31 1
@@@@ -495,7 +495,7 @@@@ class wx_install_headers(distutils.command.install_hea
d40 1
a40 1
@@@@ -549,7 +549,7 @@@@ def find_data_files(srcdir, *wildcards):
d43 1
a43 1
     if os.name == 'posix':
d49 1
a49 1
@@@@ -893,8 +893,6 @@@@ elif os.name == 'posix':
@


1.1
log
@Initial revision
@
text
@d2 3
a4 12
--- wxPython/config.py.orig	Tue Apr  4 06:00:19 2006
+++ wxPython/config.py	Fri Oct 13 12:46:25 2006
@@@@ -107,7 +107,7 @@@@ FULL_DOCS = 0      # Some docstrings are
                    # cause the two strings to be combined and output
                    # as the full docstring.
 
-UNICODE = 0        # This will pass the 'wxUSE_UNICODE' flag to SWIG and
+UNICODE = 1        # This will pass the 'wxUSE_UNICODE' flag to SWIG and
                    # will ensure that the right headers are found and the
                    # right libs are linked.
 
@@@@ -123,7 +123,7 @@@@ UNDEF_NDEBUG = 1   # Python 2.2 on Unix/
d13 1
a13 1
@@@@ -136,7 +136,7 @@@@ INSTALL_MULTIVERSION = 1 # Install the p
d22 1
a22 10
@@@@ -179,7 +179,7 @@@@ CONTRIBS_INC = ""  # A dir to add as an 
 
 # Some MSW build settings
 
-MONOLITHIC = 1     # The core wxWidgets lib can be built as either a
+MONOLITHIC = 0     # The core wxWidgets lib can be built as either a
                    # single monolithic DLL or as a collection of DLLs.
                    # This flag controls which set of libs will be used
                    # on Windows.  (For other platforms it is automatic
@@@@ -512,13 +512,13 @@@@ class wx_install_headers(distutils.comma
d28 4
a31 2
         if root is None or WXPREFIX.startswith(root):
             root = ''
d40 1
a40 1
@@@@ -573,7 +573,7 @@@@ def find_data_files(srcdir, *wildcards):
d49 1
a49 1
@@@@ -780,8 +780,6 @@@@ elif os.name == 'posix':
d57 1
a57 1
     lflags = lflags.split()
@


1.1.1.1
log
@Import py-wxPython 2.6.3.2

wxPython is a GUI toolkit for the Python programming language. It allows
Python programmers to create programs with a robust, highly functional
graphical user interface, simply and easily. It is implemented as a
Python extension module (native code) that wraps the popular wxWidgets
cross platform GUI library, which is written in C++.
@
text
@@
