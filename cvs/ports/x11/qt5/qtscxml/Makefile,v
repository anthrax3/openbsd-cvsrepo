head	1.2;
access;
symbols
	zhuk_20170615:1.1.1.1 zhuk:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.07.16.19.19.05;	author espie;	state Exp;
branches;
next	1.1;
commitid	tt0GhWK5c4uf9ILG;

1.1
date	2017.06.15.08.35.15;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	apdP5Zbk7v5KVpgt;

1.1.1.1
date	2017.06.15.08.35.15;	author zhuk;	state Exp;
branches;
next	;
commitid	apdP5Zbk7v5KVpgt;


desc
@@


1.2
log
@use COMPILER_LIBCXX where applicable
@
text
@# $OpenBSD: Makefile,v 1.1.1.1 2017/06/15 08:35:15 zhuk Exp $

QT5NAME =		QtScxml
COMMENT-main =		create state machines from SCXML files

MULTI_PACKAGES =	-main -examples -qch -html -docindex

SHARED_LIBS =	Qt5Scxml		0.0

WANTLIB =  ${COMPILER_LIBCXX} Qt5Core Qt5Network Qt5Qml c m pthread

LIB_DEPENDS =		x11/qt5/qtdeclarative>=${QT5_VERSION},<${QT5_NEXT_VERSION}

FLAVORS =		debug
PSEUDO_FLAVORS =	no_examples no_qch no_html
FLAVOR ?=

.include <bsd.port.mk>
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d10 1
a10 1
WANTLIB =  ${LIBCXX} Qt5Core Qt5Network Qt5Qml c m pthread
@


1.1.1.1
log
@The Qt SCXML module provides functionality to create state machines from SCXML
files. This includes both dynamically creating state machines (loading the SCXML
file and instantiating states and transitions) and generating a C++ file that
has a class implementing the state machine. It also contains functionality to
support data models and executable content.

This is a part of upcoming Qt 5.9.
@
text
@@
