head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2017.07.19.22.30.12;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	cT4jucPRqxgWtJA0;

1.1
date	2017.07.17.08.34.37;	author zhuk;	state Exp;
branches;
next	;
commitid	3tUsNizeEEvC87c0;


desc
@@


1.2
log
@Return back QMAKE_INCDIR_PREPEND hack for clang until a better solution
is found.

Hardly prodded by espie@@
@
text
@#
# qmake configuration for openbsd-clang
#

MAKEFILE_GENERATOR      = UNIX
QMAKE_PLATFORM          = openbsd

include(../common/gcc-base-unix.conf)
include(../common/clang.conf)
include(../common/bsd/bsd.conf)

# Addon software goes into /usr/local on OpenBSD, by default we will look there
LOCALBASE               = $$(LOCALBASE)
isEmpty(LOCALBASE) {
  LOCALBASE             = /usr/local
}
QMAKE_INCDIR_PREPEND    = /usr/include/c++/v1
QMAKE_INCDIR            = $$LOCALBASE/include
QMAKE_LIBDIR            = $$LOCALBASE/lib

# System provided X11 defaults to X11R6 path on OpenBSD
X11BASE                 = $$(X11BASE)
isEmpty(X11BASE) {
  X11BASE               = /usr/X11R6
}
QMAKE_INCDIR_X11        = $$X11BASE/include
QMAKE_LIBDIR_X11        = $$X11BASE/lib
QMAKE_INCDIR_OPENGL     = $$X11BASE/include
QMAKE_LIBDIR_OPENGL     = $$X11BASE/lib

QMAKE_RPATHDIR         += $$QMAKE_LIBDIR_X11

QMAKE_OPENBSD_SHLIB	= 1

# Reset g++-unix.conf's NOUNDEF flags as OpenBSD libc can't handle environ
QMAKE_LFLAGS_NOUNDEF    =
QMAKE_LFLAGS_SONAME	=
QMAKE_LFLAGS_NEW_DTAGS  =

load(qt_config)
@


1.1
log
@Update from Qt 5.6.2 (LTS) to Qt 5.9.1 (LTS).

Tested with both GCC and CLang (less through).

This forces updating x11/py-qt5, which forces update of devel/py-sip,
which forces update of x11/py-qt4, but, thankfully, no breakage detected.
@
text
@d17 1
@

