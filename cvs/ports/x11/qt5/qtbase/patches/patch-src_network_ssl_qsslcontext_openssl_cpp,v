head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	zhuk_20161225:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.07.17.08.34.37;	author zhuk;	state Exp;
branches;
next	1.2;
commitid	3tUsNizeEEvC87c0;

1.2
date	2017.01.27.16.13.08;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	QZuellQgImf7lyCn;

1.1
date	2016.12.25.14.13.11;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	QPfzuwiSTmth4MkN;

1.1.1.1
date	2016.12.25.14.13.11;	author zhuk;	state Exp;
branches;
next	;
commitid	QPfzuwiSTmth4MkN;


desc
@@


1.3
log
@Update from Qt 5.6.2 (LTS) to Qt 5.9.1 (LTS).

Tested with both GCC and CLang (less through).

This forces updating x11/py-qt5, which forces update of devel/py-sip,
which forces update of x11/py-qt4, but, thankfully, no breakage detected.
@
text
@$OpenBSD: patch-src_network_ssl_qsslcontext_openssl_cpp,v 1.2 2017/01/27 16:13:08 zhuk Exp $
Unbreak build with LibreSSL.
See also https://github.com/libressl-portable/openbsd/issues/33
Index: src/network/ssl/qsslcontext_openssl.cpp
--- src/network/ssl/qsslcontext_openssl.cpp.orig
+++ src/network/ssl/qsslcontext_openssl.cpp
@@@@ -356,10 +356,9 @@@@ init_context:
         if (q_SSLeay() >= 0x10002000L) {
             // SSL_CTX_ctrl wants a non-const pointer as last argument,
             // but let's avoid a copy into a temporary array
-            if (!q_SSL_CTX_ctrl(sslContext->ctx,
-                                SSL_CTRL_SET_CURVES,
-                                qcurves.size(),
-                                const_cast<int *>(reinterpret_cast<const int *>(qcurves.data())))) {
+            if (!q_SSL_CTX_set1_curves(sslContext->ctx,
+                                const_cast<int *>(reinterpret_cast<const int *>(qcurves.data())),
+                                qcurves.size())) {
                 sslContext->errorStr = msgErrorSettingEllipticCurves(QSslSocketBackendPrivate::getErrorsFromOpenSsl());
                 sslContext->errorCode = QSslError::UnspecifiedError;
             }
@


1.2
log
@Fix after recent LibreSSL changes.

Nowadays we have fake SSL_CTRL_SET_CURVES macro, and SSL_CTX_set1_curves
defined as synonym to SSL_CTX_set1_groups. So use the latter instead
of the former.

The patch should be tweaked furthermore before proposing it upstream,
but for now we can at least build things again.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_network_ssl_qsslcontext_openssl_cpp,v 1.1.1.1 2016/12/25 14:13:11 zhuk Exp $
d4 4
a7 3
--- src/network/ssl/qsslcontext_openssl.cpp.orig	Fri Sep 16 08:49:42 2016
+++ src/network/ssl/qsslcontext_openssl.cpp	Fri Jan 27 18:57:24 2017
@@@@ -345,10 +345,9 @@@@ init_context:
d20 1
a20 1
                 return sslContext;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-qtbase_src_network_ssl_qsslcontext_openssl_cpp,v 1.1 2016/03/06 11:56:42 zhuk Exp $
d4 3
a6 9
--- src/network/ssl/qsslcontext_openssl.cpp.orig	Wed May 25 18:46:17 2016
+++ src/network/ssl/qsslcontext_openssl.cpp	Sun Jul 10 14:15:13 2016
@@@@ -340,7 +340,7 @@@@ init_context:
 
     const QVector<QSslEllipticCurve> qcurves = sslContext->sslConfiguration.ellipticCurves();
     if (!qcurves.isEmpty()) {
-#if OPENSSL_VERSION_NUMBER >= 0x10002000L && !defined(OPENSSL_NO_EC)
+#if OPENSSL_VERSION_NUMBER >= 0x10002000L && !defined(OPENSSL_NO_EC) && defined(SSL_CTRL_SET_CURVES)
         // Set the curves to be used
d9 11
@


1.1.1.1
log
@Import Qt 5.6.2.

The port is now being split into pieces. Cleanup and conflict resolving
to follow.
@
text
@@
