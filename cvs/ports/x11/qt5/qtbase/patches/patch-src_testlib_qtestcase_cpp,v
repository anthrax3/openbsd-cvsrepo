head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	zhuk_20161225:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.07.17.08.34.37;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	3tUsNizeEEvC87c0;

1.1
date	2016.12.25.14.13.11;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	QPfzuwiSTmth4MkN;

1.1.1.1
date	2016.12.25.14.13.11;	author zhuk;	state Exp;
branches;
next	;
commitid	QPfzuwiSTmth4MkN;


desc
@@


1.2
log
@Update from Qt 5.6.2 (LTS) to Qt 5.9.1 (LTS).

Tested with both GCC and CLang (less through).

This forces updating x11/py-qt5, which forces update of devel/py-sip,
which forces update of x11/py-qt4, but, thankfully, no breakage detected.
@
text
@$OpenBSD: patch-src_testlib_qtestcase_cpp,v 1.1.1.1 2016/12/25 14:13:11 zhuk Exp $
Get rid of qstrcpy.
Index: src/testlib/qtestcase.cpp
--- src/testlib/qtestcase.cpp.orig
+++ src/testlib/qtestcase.cpp
@@@@ -2432,37 +2432,37 @@@@ template <> Q_TESTLIB_EXPORT char *QTest::toString<cha
     char *msg = new char[16];
     switch (c) {
     case 0x00:
-        qstrcpy(msg, "'\\0'");
+        strlcat(msg, "'\\0'", 16);
         break;
     case 0x07:
-        qstrcpy(msg, "'\\a'");
+        strlcat(msg, "'\\a'", 16);
         break;
     case 0x08:
-        qstrcpy(msg, "'\\b'");
+        strlcat(msg, "'\\b'", 16);
         break;
     case 0x09:
-        qstrcpy(msg, "'\\t'");
+        strlcat(msg, "'\\t'", 16);
         break;
     case 0x0a:
-        qstrcpy(msg, "'\\n'");
+        strlcat(msg, "'\\n'", 16);
         break;
     case 0x0b:
-        qstrcpy(msg, "'\\v'");
+        strlcat(msg, "'\\v'", 16);
         break;
     case 0x0c:
-        qstrcpy(msg, "'\\f'");
+        strlcat(msg, "'\\f'", 16);
         break;
     case 0x0d:
-        qstrcpy(msg, "'\\r'");
+        strlcat(msg, "'\\r'", 16);
         break;
     case 0x22:
-        qstrcpy(msg, "'\\\"'");
+        strlcat(msg, "'\\\"'", 16);
         break;
     case 0x27:
-        qstrcpy(msg, "'\\\''");
+        strlcat(msg, "'\\\''", 16);
         break;
     case 0x5c:
-        qstrcpy(msg, "'\\\\'");
+        strlcat(msg, "'\\\\'", 16);
         break;
     default:
         if (c < 0x20 || c >= 0x7F)
@@@@ -2479,8 +2479,7 @@@@ char *QTest::toString(const char *str)
 {
     if (!str)
         return 0;
-    char *msg = new char[strlen(str) + 1];
-    return qstrcpy(msg, str);
+    return qstrdup(str);
 }
 
 /*! \internal
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-qtbase_src_testlib_qtestcase_cpp,v 1.3 2016/03/06 11:56:42 zhuk Exp $
d3 53
a55 3
--- src/testlib/qtestcase.cpp.orig	Fri Sep 16 08:49:42 2016
+++ src/testlib/qtestcase.cpp	Wed Nov 23 00:38:31 2016
@@@@ -3584,8 +3584,7 @@@@ char *QTest::toString(const char *str)
@


1.1.1.1
log
@Import Qt 5.6.2.

The port is now being split into pieces. Cleanup and conflict resolving
to follow.
@
text
@@
