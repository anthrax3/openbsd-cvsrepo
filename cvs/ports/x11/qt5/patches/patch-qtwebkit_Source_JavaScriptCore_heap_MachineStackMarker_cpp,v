head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	zhuk_20141208:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.01.10.22.02.56;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	kmHto80K1TNpKl6l;

1.1
date	2014.12.08.20.33.38;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	T3VSUps0elxgCqso;

1.1.1.1
date	2014.12.08.20.33.38;	author zhuk;	state Exp;
branches;
next	;
commitid	T3VSUps0elxgCqso;


desc
@@


1.2
log
@Better patch (likely to fix at least some crashes seen in Qt5Webkit),
similar to what real upstream (i.e, WebKitGTK) has.
@
text
@$OpenBSD: patch-qtwebkit_Source_JavaScriptCore_heap_MachineStackMarker_cpp,v 1.1.1.1 2014/12/08 20:33:38 zhuk Exp $
Unbreak build.
Synchronized with WebKit upsteam.
--- qtwebkit/Source/JavaScriptCore/heap/MachineStackMarker.cpp.ports.orig	Thu Sep 11 14:48:22 2014
+++ qtwebkit/Source/JavaScriptCore/heap/MachineStackMarker.cpp	Wed Jan  7 01:01:51 2015
@@@@ -45,6 +45,10 @@@@
 
 #elif OS(UNIX)
 
+#if OS(OPENBSD)
+#include<sys/param.h>
+#endif
+
 #include <sys/mman.h>
 #include <unistd.h>
 
@@@@ -311,6 +315,8 @@@@ typedef arm_thread_state_t PlatformThreadRegisters;
 typedef CONTEXT PlatformThreadRegisters;
 #elif OS(QNX)
 typedef struct _debug_thread_info PlatformThreadRegisters;
+#elif OS(OPENBSD)
+typedef pthread_t PlatformThreadRegisters;
 #elif USE(PTHREADS)
 typedef pthread_attr_t PlatformThreadRegisters;
 #else
@@@@ -369,6 +375,8 @@@@ static size_t getPlatformThreadRegisters(const Platfor
     }
     close(fd);
     return sizeof(struct _debug_thread_info);
+#elif OS(OPENBSD)
+    regs = platformThread;
 #elif USE(PTHREADS)
     pthread_attr_init(&regs);
 #if HAVE(PTHREAD_NP_H) || OS(NETBSD)
@@@@ -437,7 +445,14 @@@@ static inline void* otherThreadStackPointer(const Plat
 #elif USE(PTHREADS)
     void* stackBase = 0;
     size_t stackSize = 0;
+#if OS(OPENBSD)
+    stack_t ss;
+    int rc = pthread_stackseg_np(regs, &ss);
+    stackBase = (void*)((size_t) ss.ss_sp - ss.ss_size);
+    stackSize = ss.ss_size;
+#else
     int rc = pthread_attr_getstack(&regs, &stackBase, &stackSize);
+#endif
     (void)rc; // FIXME: Deal with error code somehow? Seems fatal.
     ASSERT(stackBase);
     return static_cast<char*>(stackBase) + stackSize;
@@@@ -448,7 +463,7 @@@@ static inline void* otherThreadStackPointer(const Plat
 
 static void freePlatformThreadRegisters(PlatformThreadRegisters& regs)
 {
-#if USE(PTHREADS) && !OS(WINDOWS) && !OS(DARWIN) && !OS(QNX)
+#if USE(PTHREADS) && !OS(WINDOWS) && !OS(DARWIN) && !OS(QNX) && !OS(OPENBSD)
     pthread_attr_destroy(&regs);
 #else
     UNUSED_PARAM(regs);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 2
--- qtwebkit/Source/JavaScriptCore/heap/MachineStackMarker.cpp.ports.orig	Thu Nov  6 10:32:50 2014
+++ qtwebkit/Source/JavaScriptCore/heap/MachineStackMarker.cpp	Thu Nov  6 12:35:05 2014
d35 1
a35 10
@@@@ -434,6 +442,12 @@@@ static inline void* otherThreadStackPointer(const Plat
 #elif OS(QNX)
     return reinterpret_cast<void*>((uintptr_t) regs.sp);
 
+#elif OS(OPENBSD)
+    stack_t ss;
+    // FIXME: Deal with error code below somehow? Seems fatal.
+    (void)pthread_stackseg_np(regs, &ss);
+    return ss.ss_sp;
+
d39 12
a50 1
@@@@ -448,7 +462,7 @@@@ static inline void* otherThreadStackPointer(const Plat
@


1.1.1.1
log
@Import Qt 5.3.2.

Qt is a full development framework with tools designed to streamline
the creation of applications and user interfaces for desktop,
embedded, and mobile platforms.

This port is not enabled yet, because some ports will pick up Qt5
instead of Qt4, breaking build. Those will be fixed separately soon.

There are some non-critical things left to do:

1. Support for OpenBSD sensors framework.
2. V4L2 support.
3. -L${LOCALBASE}/* could come before -L${WRKBUILD}/* when linking is
   done across Qt module boundaries. This means that builds of Qt 5.y
   while having Qt 5.x installed (x < y) will be busted.

Volunteers are welcome to come in and help fixing those problems.

Last note: don't even try to build "debug" FLAVOR unless you know
what you're doing and you have about 20GB of free space. You've
been warned.

landry@@ agrees on continuing working in-tree
@
text
@@
