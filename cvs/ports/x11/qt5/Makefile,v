head	1.59;
access;
symbols
	OPENBSD_6_2:1.59.0.2
	OPENBSD_6_2_BASE:1.59
	OPENBSD_6_1:1.57.0.2
	OPENBSD_6_1_BASE:1.57
	zhuk_20161225:1.1.1.2
	OPENBSD_6_0:1.51.0.2
	OPENBSD_6_0_BASE:1.51
	OPENBSD_5_9:1.47.0.2
	OPENBSD_5_9_BASE:1.47
	OPENBSD_5_8:1.41.0.4
	OPENBSD_5_8_BASE:1.41
	OPENBSD_5_7:1.22.0.2
	OPENBSD_5_7_BASE:1.22
	zhuk_20141208:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.59
date	2017.07.29.00.07.13;	author zhuk;	state Exp;
branches;
next	1.58;
commitid	PLavWrVVGir1L8eQ;

1.58
date	2017.07.17.08.34.37;	author zhuk;	state Exp;
branches;
next	1.57;
commitid	3tUsNizeEEvC87c0;

1.57
date	2016.12.28.01.41.23;	author zhuk;	state Exp;
branches;
next	1.56;
commitid	zznJcJZGYlX0U9PC;

1.56
date	2016.12.25.14.18.55;	author zhuk;	state Exp;
branches;
next	1.55;
commitid	FpatVGCqyz79ORU8;

1.55
date	2016.11.08.14.47.22;	author sthen;	state Exp;
branches;
next	1.54;
commitid	qGaHmkJtxS4XlPIq;

1.54
date	2016.09.23.15.22.49;	author jeremy;	state Exp;
branches;
next	1.53;
commitid	7vwrMgzxfvJqDiBf;

1.53
date	2016.09.23.09.16.58;	author sthen;	state Exp;
branches;
next	1.52;
commitid	XLnI6AbHAmyVU5mO;

1.52
date	2016.09.06.09.00.19;	author dcoppa;	state Exp;
branches;
next	1.51;
commitid	SCXEv0HIjbx7iuA8;

1.51
date	2016.03.20.15.58.26;	author naddy;	state Exp;
branches;
next	1.50;
commitid	kD9ZPBluLnwfHdUE;

1.50
date	2016.03.19.12.04.05;	author landry;	state Exp;
branches;
next	1.49;
commitid	nMRU2L3hQn7qat7V;

1.49
date	2016.03.17.11.49.08;	author sthen;	state Exp;
branches;
next	1.48;
commitid	ocFGrF5ivajId7wF;

1.48
date	2016.03.06.11.56.41;	author zhuk;	state Exp;
branches;
next	1.47;
commitid	BJQWSohFrHUH1Fq7;

1.47
date	2016.02.22.20.38.08;	author zhuk;	state Exp;
branches;
next	1.46;
commitid	2fwGFzoZqRbBGFIx;

1.46
date	2015.11.20.11.24.04;	author sthen;	state Exp;
branches;
next	1.45;
commitid	xESrXKEQBEZ66Kvo;

1.45
date	2015.10.22.17.26.18;	author zhuk;	state Exp;
branches;
next	1.44;
commitid	SSd7q3iCmzljI2YR;

1.44
date	2015.10.20.21.58.27;	author zhuk;	state Exp;
branches;
next	1.43;
commitid	265LWUGHLTdAk4Jz;

1.43
date	2015.10.20.21.37.26;	author zhuk;	state Exp;
branches;
next	1.42;
commitid	Kw0gZvtvCCO6gSWv;

1.42
date	2015.09.04.22.08.25;	author sthen;	state Exp;
branches;
next	1.41;
commitid	1TpnCQEQe9sASVJG;

1.41
date	2015.05.29.07.14.44;	author ajacoutot;	state Exp;
branches;
next	1.40;
commitid	vgp8FxznlDBhV660;

1.40
date	2015.05.28.10.17.31;	author pascal;	state Exp;
branches;
next	1.39;
commitid	020U4lCPk8wUkCOz;

1.39
date	2015.05.05.17.43.42;	author zhuk;	state Exp;
branches;
next	1.38;
commitid	R7i75XcGoDTnrITI;

1.38
date	2015.05.04.21.31.27;	author ajacoutot;	state Exp;
branches;
next	1.37;
commitid	BLrnsw5a30UNSpkA;

1.37
date	2015.05.04.10.37.01;	author zhuk;	state Exp;
branches;
next	1.36;
commitid	y1NHrMLTRHgXhzt5;

1.36
date	2015.05.03.13.10.59;	author zhuk;	state Exp;
branches;
next	1.35;
commitid	3MH5yLSkJJjOXq1K;

1.35
date	2015.05.03.13.00.53;	author zhuk;	state Exp;
branches;
next	1.34;
commitid	B0U3GJPSHck9o7KK;

1.34
date	2015.04.30.21.39.35;	author zhuk;	state Exp;
branches;
next	1.33;
commitid	gShnOIQmrN8YGok3;

1.33
date	2015.04.25.18.41.30;	author zhuk;	state Exp;
branches;
next	1.32;
commitid	rutTgoDSgapQtGbf;

1.32
date	2015.04.24.16.16.39;	author zhuk;	state Exp;
branches;
next	1.31;
commitid	KkG9uAOud6sKNavI;

1.31
date	2015.04.24.07.27.34;	author zhuk;	state Exp;
branches;
next	1.30;
commitid	DOd2DjOsy4tJaYZs;

1.30
date	2015.04.24.07.16.39;	author zhuk;	state Exp;
branches;
next	1.29;
commitid	pdwmk9FOQW5dgJT6;

1.29
date	2015.04.23.11.49.07;	author zhuk;	state Exp;
branches;
next	1.28;
commitid	57t04e33OEc698IQ;

1.28
date	2015.04.22.14.12.03;	author zhuk;	state Exp;
branches;
next	1.27;
commitid	pSSDyt7RNPms0n3j;

1.27
date	2015.04.22.12.29.34;	author zhuk;	state Exp;
branches;
next	1.26;
commitid	BdVmtHemf7A64jSA;

1.26
date	2015.04.20.19.32.38;	author zhuk;	state Exp;
branches;
next	1.25;
commitid	l3XeASFew7AvPR2M;

1.25
date	2015.04.19.13.18.28;	author zhuk;	state Exp;
branches;
next	1.24;
commitid	2KOIQzUUZQrQrGt0;

1.24
date	2015.04.04.09.21.08;	author ajacoutot;	state Exp;
branches;
next	1.23;
commitid	kS3kwKZogsvzYmEY;

1.23
date	2015.03.27.16.02.32;	author ajacoutot;	state Exp;
branches;
next	1.22;
commitid	dSlXW8DqhAdFFwWN;

1.22
date	2015.01.24.22.09.40;	author zhuk;	state Exp;
branches;
next	1.21;
commitid	c8mqSKjMwIRhmzjd;

1.21
date	2015.01.21.20.49.50;	author zhuk;	state Exp;
branches;
next	1.20;
commitid	ahHq0sSC1XkFd3Ko;

1.20
date	2015.01.21.20.40.46;	author zhuk;	state Exp;
branches;
next	1.19;
commitid	boxR393OdGLuwUz0;

1.19
date	2015.01.20.13.38.42;	author zhuk;	state Exp;
branches;
next	1.18;
commitid	88BW50cLQACROyMk;

1.18
date	2015.01.20.13.27.59;	author zhuk;	state Exp;
branches;
next	1.17;
commitid	q7vRE4NDWoLL3NDK;

1.17
date	2015.01.15.11.10.02;	author zhuk;	state Exp;
branches;
next	1.16;
commitid	j5zrNCRTHEZzBqFg;

1.16
date	2015.01.12.20.30.18;	author landry;	state Exp;
branches;
next	1.15;
commitid	D8Dz2tgSAntV2x8o;

1.15
date	2015.01.10.22.02.56;	author zhuk;	state Exp;
branches;
next	1.14;
commitid	kmHto80K1TNpKl6l;

1.14
date	2015.01.09.08.10.56;	author pascal;	state Exp;
branches;
next	1.13;
commitid	2fxGksvg79q7P21L;

1.13
date	2015.01.06.21.32.41;	author zhuk;	state Exp;
branches;
next	1.12;
commitid	dgtikNg4Qq0I1FcL;

1.12
date	2015.01.05.18.13.32;	author landry;	state Exp;
branches;
next	1.11;
commitid	Jofqjzy4gbqMxRC6;

1.11
date	2014.12.26.00.02.32;	author zhuk;	state Exp;
branches;
next	1.10;
commitid	dyya5e6wkIrVihje;

1.10
date	2014.12.25.23.35.44;	author zhuk;	state Exp;
branches;
next	1.9;
commitid	tBQGMRfAEuyUguHg;

1.9
date	2014.12.22.21.30.41;	author zhuk;	state Exp;
branches;
next	1.8;
commitid	xZYnHYjFAwaUL44o;

1.8
date	2014.12.22.18.51.58;	author espie;	state Exp;
branches;
next	1.7;
commitid	ki4cGE7MfolZ6usv;

1.7
date	2014.12.22.18.00.13;	author naddy;	state Exp;
branches;
next	1.6;
commitid	zk79FJpk6ybsYgUC;

1.6
date	2014.12.11.17.50.03;	author zhuk;	state Exp;
branches;
next	1.5;
commitid	M5neAI0AqPUVHfJZ;

1.5
date	2014.12.11.17.48.44;	author zhuk;	state Exp;
branches;
next	1.4;
commitid	CLQwYHTUFUZbdMKZ;

1.4
date	2014.12.11.13.24.27;	author zhuk;	state Exp;
branches;
next	1.3;
commitid	rU7jwHKxnnrq01hI;

1.3
date	2014.12.10.22.42.17;	author zhuk;	state Exp;
branches;
next	1.2;
commitid	a3CkgEBubggoSTTG;

1.2
date	2014.12.10.21.22.46;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	lYZzCuFVnm7ouuwP;

1.1
date	2014.12.08.20.33.38;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	T3VSUps0elxgCqso;

1.1.1.1
date	2014.12.08.20.33.38;	author zhuk;	state Exp;
branches;
next	1.1.1.2;
commitid	T3VSUps0elxgCqso;

1.1.1.2
date	2016.12.25.14.13.11;	author zhuk;	state Exp;
branches;
next	;
commitid	QPfzuwiSTmth4MkN;


desc
@@


1.59
log
@Rework the process of building Qt5 documentation:

Now all documentation is built using a separate port using
the --single-exec option of qdoc. This gaves significant speedup
as well as fixing quiet a few interlinking problems.

All -qch, -html and -docindex subpackages of Qt modules ports are
removed. The qt5-html and qt5-qch are now provided by x11/qt5/docs
instead of meta/qt5, thus REVISION set from the start.

This commit should fix problems with building Qt5 documentation
that people started seeing after switching to Clang. We also could
zap some interdependencies between Qt5 modules as well, but that's
a different story.
@
text
@# $OpenBSD: Makefile,v 1.58 2017/07/17 08:34:37 zhuk Exp $

     SUBDIR =
     SUBDIR += docs
     SUBDIR += qt3d
     SUBDIR += qtbase
     SUBDIR += qtcanvas3d
     SUBDIR += qtcharts
     SUBDIR += qtconnectivity
     SUBDIR += qtdatavis3d
     SUBDIR += qtdeclarative,
     SUBDIR += qtgamepad
     SUBDIR += qtgraphicaleffects
     SUBDIR += qtimageformats
     SUBDIR += qtlocation
     SUBDIR += qtmultimedia,
     SUBDIR += qtnetworkauth
     SUBDIR += qtpurchasing
     SUBDIR += qtquickcontrols
     SUBDIR += qtquickcontrols2
     SUBDIR += qtremoteobjects
     SUBDIR += qtscript
     SUBDIR += qtscxml
     SUBDIR += qtsensors
     SUBDIR += qtserialbus
     SUBDIR += qtserialport
     SUBDIR += qtspeech
     SUBDIR += qtsvg
     SUBDIR += qttools,
     SUBDIR += qttranslations
     SUBDIR += qtvirtualkeyboard
     SUBDIR += qtwebchannel
     SUBDIR += qtwebkit
     SUBDIR += qtwebkit-examples
     SUBDIR += qtwebsockets
     SUBDIR += qtx11extras
     SUBDIR += qtxmlpatterns

# no support for Wayland in Xenocara
#     SUBDIR += qtwayland
# not ported yet
#     SUBDIR += qtwebengine
# requires qtwebengine
#     SUBDIR += qtwebview

.include <bsd.port.subdir.mk>
@


1.58
log
@Update from Qt 5.6.2 (LTS) to Qt 5.9.1 (LTS).

Tested with both GCC and CLang (less through).

This forces updating x11/py-qt5, which forces update of devel/py-sip,
which forces update of x11/py-qt4, but, thankfully, no breakage detected.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.57 2016/12/28 01:41:23 zhuk Exp $
d4 1
a5 1
     SUBDIR += qtactiveqt
a6 1
     SUBDIR += qtbase-docs
a11 1
     SUBDIR += qtdoc
@


1.57
log
@Rework Qt5 documentation handling:

  * Move share/qt5/doc/* in qtbase from -main to a separate subpackage,
    -global, which (as a bonus) "owns" share/doc/qt5/ directory;

  * Move FOO.index files from -html to a separate subpackage, -docindex,
    and make 'em depend on qtbase,-global;

  * Make DEP,-docindex automatically added as BDEP for each DEP in
    LDEP and BDEP mentioned for -main;

  * Make it clear that building -qch without -html is impossible;

While there, fixed a few minor issues.

This make at least qtenginio,-html build correctly, which failed before
due to missing .index files during qdoc run. Initial report from kili@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.56 2016/12/25 14:18:55 zhuk Exp $
d9 1
d11 1
d14 1
a14 1
     SUBDIR += qtenginio
d18 3
a20 1
     SUBDIR += qtmultimedia
d23 1
d25 1
d29 1
d33 1
d36 1
@


1.56
log
@Resolve conflicts after Qt 5.6.2 import.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.55 2016/11/08 14:47:22 sthen Exp $
d7 1
@


1.55
log
@WANTLIB += lzma
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.54 2016/09/23 15:22:49 jeremy Exp $
d3 34
a36 1
USE_WXNEEDED =		Yes # Qt5WebKit
d38 1
a38 498
ONLY_FOR_ARCHS =	${GCC4_ARCHS}
BROKEN-powerpc =	never built - gcc ICE

VERSION =		5.5.1
ENGINIO_VERSION =	1.2.1
DISTNAME =		qt-everywhere-opensource-src-${VERSION}

COMMENT-main =		C++ general-purpose toolkit
COMMENT-examples =	examples for Qt5
COMMENT-html =		offline HTML documentation for Qt5
COMMENT-mysql =		MySQL plugin for Qt5
COMMENT-psql =		PostgresSQL plugin for Qt5
COMMENT-qch =		offline QCH documentation for Qt5
COMMENT-sqlite2 =	SQLite 2.x plugin for Qt5
COMMENT-tds =		TDS plugin for Qt5

PKGNAME-main =		qt5-${VERSION}
REVISION-main =		4
PKGNAME-examples =	qt5-examples-${VERSION}
REVISION-examples =	0
PKGNAME-html =		qt5-html-${VERSION}
PKGNAME-mysql =		qt5-mysql-${VERSION}
REVISION-mysql =	0
PKGNAME-psql =		qt5-postgresql-${VERSION}
REVISION-psql =		0
PKGNAME-qch =		qt5-qch-${VERSION}
PKGNAME-sqlite2 =	qt5-sqlite2-${VERSION}
REVISION-sqlite2 =	0
PKGNAME-tds =		qt5-tds-${VERSION}
REVISION-tds =		0

PKG_ARCH-html =		*
PKG_ARCH-qch =		*

DPB_PROPERTIES =	parallel nojunk

SHARED_LIBS =	Enginio			1.1
SHARED_LIBS +=	Qt5Bluetooth		1.1
SHARED_LIBS +=	Qt5CLucene		1.1
SHARED_LIBS +=	Qt5Concurrent		1.1
SHARED_LIBS +=	Qt5Core			1.1
SHARED_LIBS +=	Qt5DBus			1.1
SHARED_LIBS +=	Qt5Declarative		1.1
SHARED_LIBS +=	Qt5Designer		1.1
SHARED_LIBS +=	Qt5DesignerComponents	1.1
SHARED_LIBS +=	Qt5Gui			1.1
SHARED_LIBS +=	Qt5Help			1.1
SHARED_LIBS +=	Qt5Multimedia		1.1
SHARED_LIBS +=	Qt5MultimediaQuick_p	1.1
SHARED_LIBS +=	Qt5MultimediaWidgets	1.1
SHARED_LIBS +=	Qt5Network		1.1
SHARED_LIBS +=	Qt5Nfc			1.1
SHARED_LIBS +=	Qt5OpenGL		1.1
SHARED_LIBS +=	Qt5Positioning		1.1
SHARED_LIBS +=	Qt5PrintSupport		1.1
SHARED_LIBS +=	Qt5Qml			1.1
SHARED_LIBS +=	Qt5Quick		1.1
SHARED_LIBS +=	Qt5QuickParticles	1.1
SHARED_LIBS +=	Qt5QuickTest		1.1
SHARED_LIBS +=	Qt5QuickWidgets		1.1
SHARED_LIBS +=	Qt5Script		1.1
SHARED_LIBS +=	Qt5ScriptTools		1.1
SHARED_LIBS +=	Qt5Sensors		1.1
SHARED_LIBS +=	Qt5SerialPort		1.1
SHARED_LIBS +=	Qt5Sql			1.1
SHARED_LIBS +=	Qt5Svg			1.1
SHARED_LIBS +=	Qt5Test			1.1
SHARED_LIBS +=	Qt5WebKit		1.1
SHARED_LIBS +=	Qt5WebKitWidgets	1.1
SHARED_LIBS +=	Qt5WebSockets		1.1
SHARED_LIBS +=	Qt5Widgets		1.1
SHARED_LIBS +=	Qt5X11Extras		1.1
SHARED_LIBS +=	Qt5Xml			1.1
SHARED_LIBS +=	Qt5XmlPatterns		1.1
#SHARED_LIBS +=	qgsttools_p		0.0

SHARED_LIBS-examples =	fftreal			1.1
SHARED_LIBS-examples +=	gruesensor		1.1
SHARED_LIBS +=		${SHARED_LIBS-examples}

# since 5.4
SHARED_LIBS +=	Qt5Location		0.1
SHARED_LIBS +=	Qt5WebChannel		0.1

# since 5.5
SHARED_LIBS +=	Qt53DCollision		0.0
SHARED_LIBS +=	Qt53DCore		0.0
SHARED_LIBS +=	Qt53DInput		0.0
SHARED_LIBS +=	Qt53DLogic		0.0
SHARED_LIBS +=	Qt53DQuick		0.0
SHARED_LIBS +=	Qt53DQuickRenderer	0.0
SHARED_LIBS +=	Qt53DRenderer		0.0
SHARED_LIBS +=	Qt5EglDeviceIntegration	0.0
SHARED_LIBS +=	Qt5XcbQpa		0.0

CATEGORIES =		x11 devel
HOMEPAGE =		http://www.qt-project.org/
MAINTAINER =		KDE porting team <openbsd-kde@@googlegroups.com>


WANTLIB-main =  ${WANTLIB}
WANTLIB-main += EGL GL ICE SM X11 X11-xcb Xcomposite Xcursor Xdamage
WANTLIB-main += Xext Xfixes Xi Xinerama Xrandr Xrender atk-1.0 c cairo
WANTLIB-main += cups fontconfig freetype gdk-x11-2.0 gdk_pixbuf-2.0
WANTLIB-main += gio-2.0 glib-2.0 gobject-2.0 gstapp-1.0 execinfo
WANTLIB-main += gstaudio-1.0 gstbase-1.0 gstpbutils-1.0 gstreamer-1.0
WANTLIB-main += gstvideo-1.0 gthread-2.0 gtk-x11-2.0 icudata icui18n icuuc
WANTLIB-main += iodbc jasper jpeg lzma m mng openal pango-1.0 pangocairo-1.0
WANTLIB-main += pangoft2-1.0 pcre16 png pthread pulse sqlite3 tiff
WANTLIB-main += webp xcb xcb-glx xcb-icccm xcb-image xcb-keysyms xcb-randr
WANTLIB-main += xcb-render xcb-render-util xcb-shape xcb-shm xcb-sync
WANTLIB-main += xcb-xfixes xcb-xkb xkbcommon xkbcommon-x11 xml2 xslt z
WANTLIB-main += dbus-1 dbus-glib-1 geoclue harfbuzz proxy

WANTLIB-examples =  ${MODGCC4_CPPWANTLIB} GL c m pthread
WANTLIB-examples += Qt5Bluetooth Qt5Concurrent Qt5Core Qt5DBus Qt5Declarative
WANTLIB-examples += Qt5Gui Qt5Help Qt5Multimedia Qt5MultimediaWidgets Qt5Network
WANTLIB-examples += Qt5Nfc Qt5OpenGL Qt5Positioning Qt5PrintSupport Qt5Qml
WANTLIB-examples += Qt5Quick Qt5QuickTest Qt5Script Qt5ScriptTools Qt5Sensors
WANTLIB-examples += Qt5Sql Qt5Svg Qt5Test Qt5WebKit Qt5WebKitWidgets Qt5Widgets
WANTLIB-examples += Qt5Xml Qt5XmlPatterns Qt5Designer
WANTLIB-examples += Qt53DCore Qt53DInput Qt53DQuick Qt53DRenderer Qt5Location

WANTLIB-html =

WANTLIB-mysql =		${MODGCC4_CPPWANTLIB} Qt5Core Qt5Sql
WANTLIB-mysql +=	crypto m pthread mysqlclient_r ssl z

WANTLIB-psql =		${MODGCC4_CPPWANTLIB} Qt5Core Qt5Sql
WANTLIB-psql +=		m pthread pq

WANTLIB-qch =

WANTLIB-sqlite2 =	${MODGCC4_CPPWANTLIB} Qt5Core Qt5Sql
WANTLIB-sqlite2 +=	m pthread sqlite

WANTLIB-tds =		${MODGCC4_CPPWANTLIB} Qt5Core Qt5Sql
WANTLIB-tds +=		m pthread sybdb


# Mostly LGPLv2.1 or LGPLv3 for code; FDLv1.3 for documentation.
# Some third-party parts are BSD-licensed.
# Also, many parts have are dual-licensed having either commercial, GPL,
# Apache 2.0 or other type of license as an alternative option.
# A few components, including QtWebEngine, are LGPLv3 only, no LGPLv2.1.
PERMIT_PACKAGE_CDROM =	Yes

MULTI_PACKAGES =	-main -examples -html -mysql -psql -qch -sqlite2 -tds

MASTER_SITES =		http://master.qt-project.org/archive/qt/${VERSION:R}/${VERSION}/single/

MODULES =		gcc4 devel/gettext perl lang/python lang/ruby
MODGCC4_LANGS =		c++
MODGCC4_ARCHS =		*
MODPY_RUNDEP =		No
MODRUBY_RUNDEP =	No

# no leveldb dependency, requires -lmemenv; QtWebKit uses internal version
LIB_DEPENDS-main =	${LIB_DEPENDS} \
			audio/openal \
			audio/pulseaudio \
			databases/iodbc \
			databases/sqlite3 \
			devel/atk \
			devel/harfbuzz \
			devel/libexecinfo \
			devel/pango \
			graphics/cairo \
			graphics/gdk-pixbuf2 \
			graphics/jasper \
			graphics/libmng \
			graphics/libwebp \
			multimedia/gstreamer1/core \
			multimedia/gstreamer1/plugins-base \
			print/cups,-libs \
			textproc/icu4c \
			textproc/libxslt \
			x11/gtk+2 \
			x11/xkbcommon

LIB_DEPENDS-examples =	${BUILD_PKGPATH},-main>=${VERSION:R} \
			${MODGCC4_CPPLIBDEP}

LIB_DEPENDS-html =

LIB_DEPENDS-mysql =	${BUILD_PKGPATH},-main>=${VERSION:R} \
			${MODGCC4_CPPLIBDEP} \
			databases/mariadb

LIB_DEPENDS-psql =	${BUILD_PKGPATH},-main>=${VERSION:R} \
			${MODGCC4_CPPLIBDEP} \
			databases/postgresql

LIB_DEPENDS-qch =

LIB_DEPENDS-sqlite2 =	${BUILD_PKGPATH},-main>=${VERSION:R} \
			${MODGCC4_CPPLIBDEP} \
			databases/sqlite

LIB_DEPENDS-tds =	${BUILD_PKGPATH},-main>=${VERSION:R} \
			${MODGCC4_CPPLIBDEP} \
			databases/freetds

BUILD_DEPENDS =		geo/geoclue \
			x11/dbus
# QtWebKit & Co. requirements
BUILD_DEPENDS +=	devel/bison

RUN_DEPENDS-main =	${RUN_DEPENDS} \
			geo/geoclue \
			x11/dbus
RUN_DEPENDS-examples =
RUN_DEPENDS-html =
RUN_DEPENDS-mysql =
RUN_DEPENDS-psql =
RUN_DEPENDS-qch =
RUN_DEPENDS-sqlite2 =
RUN_DEPENDS-tds =

# Not used in Qt itself (implementation considered unstable),
# but used in QtWebKit.
BUILD_DEPENDS +=	devel/gperf \
			devel/libsoup
RUN_DEPENDS-main +=	devel/gperf \
			devel/libsoup

DESTDIRNAME =		INSTALL_ROOT

MAKE_ENV =		LD_LIBRARY_PATH=${WRKBUILD}/qtbase/lib \
			NINJA_PATH="${LOCALBASE}/bin/ninja" \
			PYTHON=${MODPY_BIN} \
			RUBY=${RUBY} \
			REAL_BUILD_ROOT=${WRKBUILD}

MAKE_FLAGS =		-B -j ${MAKE_JOBS} \
			PYTHON=${MODPY_BIN} \
			RUBY=${RUBY}
.for _l _v in ${SHARED_LIBS}
  MAKE_FLAGS +=		LIB${_l}_VERSION=${_v}
.endfor

# qmake supports so-called "shadow" builds: it's like normal
# out-of-source build but build directory is required to be located
# under source root.
SEPARATE_BUILD =	Yes
WRKBUILD =		${WRKSRC}/build

CONFIGURE_STYLE =	simple

FLAVORS =		debug
PSEUDO_FLAVORS =	no_examples no_html no_tests
FLAVOR ?=

# readability macros
QT_BASEDIR =	${PREFIX}/lib/qt5
QT_INCDIR =	${PREFIX}/include/X11/qt5
QT_EXAMPLES =	${QT_BASEDIR}/examples
QT_DOC =	${PREFIX}/share/doc/qt5
QT_PLUGINSDIR =	${QT_BASEDIR}/plugins
QT_BINDIR =	${QT_BASEDIR}/bin
QT_PKGCFGDIR =	${QT_BASEDIR}/pkgconfig
QT_CMAKEDIR =	${QT_BASEDIR}/cmake

# generic args
CONFIGURE_ARGS =	-confirm-license \
			-opensource \
			-rpath \
			-shared \
			-verbose

.if ${FLAVOR:Mdebug}
CONFIGURE_ARGS +=	-debug
.else
CONFIGURE_ARGS +=	-release
.endif

# paths
CONFIGURE_ARGS +=	-sysconfdir ${SYSCONFDIR} \
			-prefix ${QT_BASEDIR} \
			-plugindir ${QT_PLUGINSDIR} \
			-libdir ${QT_BASEDIR} \
			-headerdir ${QT_INCDIR} \
			-examplesdir ${QT_EXAMPLES} \
			-docdir ${QT_DOC} \
			-datadir ${QT_BASEDIR} \
			-bindir ${QT_BINDIR} \
			-R${X11BASE}/lib \
			-L${X11BASE}/lib

# other options
CONFIGURE_ARGS +=	-c++11 \
			-no-alsa \
			-no-journald \
			-no-mtdev \
			-opengl desktop \
			-system-harfbuzz \
			-system-sqlite \
			-system-xcb \

CONFIGURE_ENV =		MAKE=make \
			MAKEFLAGS="-j ${MAKE_JOBS}" \
			EXTRA_CPPFLAGS="-DLOCALBASE=\\\"${LOCALBASE}\\\" -DX11BASE=\\\"${X11BASE}\\\""

.if ${MACHINE_ARCH} == "powerpc"
CONFIGURE_ENV += LDFLAGS="-Wl,--relax"
.endif

.if ${MACHINE_ARCH} == "amd64" || ${MACHINE_ARCH} == "i386"
# AVX:    Sandy Bridge/Haswell, but not all models. AMD Bulldozer/Jaguar.
# SSE4.2: Nehalem, Silvermont Atom, AMD Bulldozer/Jaguar.
# SSE4.1: Core 2 (Penryn), Nehalem, Silvermont Atom, AMD Bulldozer/Jaguar.
# SSSE3:  Core 2 Duo, Atom, AMD Bulldozer/Bobcat.
# SSE3:   missing on very early 64-bit AMD.
CONFIGURE_ARGS +=	-no-sse4.1 -no-sse4.2 -no-avx -no-avx2
CONFIGURE_ARGS +=	-no-ssse3 -no-sse3
.endif

.if ${MACHINE_ARCH} == "i386"
CONFIGURE_ARGS +=	-no-sse2
.endif

.include <bsd.port.arch.mk>

# QtWebkit (at least, maybe others) plays dirty games with inter-target
# dependencies, so we'd better use the target qmake always creates
# first, named "first".
ALL_TARGET =		first
FAKE_TARGET =		install

# Force re-running qmake before generating documentation
# to allow qdoc and qhelpgenerator do their work.
.if ${BUILD_PACKAGES:M-html} || ${BUILD_PACKAGES:M-qch}
ALL_TARGET +=		qmake_all
.endif

.if ${BUILD_PACKAGES:M-html}
ALL_TARGET +=		html_docs
FAKE_TARGET +=		install_html_docs
.endif

.if ${BUILD_PACKAGES:M-qch}
ALL_TARGET +=		qch_docs
FAKE_TARGET +=		install_qch_docs
.endif

.if !${BUILD_PACKAGES:M-examples}
CONFIGURE_ARGS +=	-nomake examples
.endif

.if ${FLAVOR:Mno_tests}
NO_TEST =		Yes
CONFIGURE_ARGS +=	-nomake tests
.endif

PROGRAMS5 =	assistant designer linguist lrelease lupdate moc pixeltool \
		qcollectiongenerator qdbus qdoc qmake qml qtdiag rcc uic

# still need to check if those should get it into ${PREFIX}/bin
PROGRAMS_IGN =	lconvert \
		qcollectiongenerator \
		qdbuscpp2xml \
		qdbusviewer \
		qdbusxml2cpp \
		qdoc \
		qhelpconverter \
		qhelpgenerator \
		qlalr \
		qml \
		qml1plugindump \
		qmlbundle \
		qmlimportscanner \
		qmlmin \
		qmlplugindump \
		qmlprofiler \
		qmlscene \
		qmltestrunner \
		qmlviewer \
		qtdiag \
		qtpaths \
		syncqt.pl \
		xmlpatterns \
		xmlpatternsvalidator

# See qtbase/tests/README for details
TEST_IS_INTERACTIVE =	X11
TEST_TARGET =		check
TEST_DEPENDS =		${MODPY_RUN_DEPENDS} \
			${MODRUBY_RUN_DEPENDS} \
			audio/sox \
			kde4-minimal-*|kdebase-*:meta/kde4,-minimal

PATCHORIG =		.ports.orig

SUBST_VARS =		VERSION ENGINIO_VERSION

post-extract:
.if ${FLAVOR:Mno_examples}
	rm -f ${WRKDIST}/qtbase/examples/examples.pro
.endif
.if ${FLAVOR:Mno_tests}
	rm -f ${WRKDIST}/qtbase/tests/tests.pro
.endif

post-install:
	# programs
.for p in ${PROGRAMS5}
	ln -sf ../lib/qt5/bin/$p ${PREFIX}/bin/$p-qt5
.endfor
	# shared libraries
.for l v in ${SHARED_LIBS}
	cd ${PREFIX}/lib; \
	f=qt5/lib$l.so.$v; \
	! test -f $$f || ln -sf $$f .
.endfor
.for l v in ${SHARED_LIBS-examples}
	cd ${PREFIX}/lib; \
	f=qt5/examples/*/*/lib$l.so.$v; \
	! test -f $$f || ln -sf $$f .
.endfor
	# pkg-config files
	@@if [ -d ${QT_PKGCFGDIR} ]; then \
		for f in ${QT_PKGCFGDIR}/*; do \
			echo $${f##*/}; \
			perl -p -e 's@@ -L$${WRKBUILD}\S+@@@@g;' \
			        -e 's@@ -Wl,-whole-archive.*@@@@;' \
			    $$f >${PREFIX}/lib/pkgconfig/$${f##*/}; \
		done; \
	fi
	@@sed -i -e s/"-lQt5WebKit"/"-lQt5WebKit -Wl,-z,wxneeded"/ \
		${QT_PKGCFGDIR}/Qt5WebKit.pc
	@@sed -i -e s/"-lQt5WebKit"/"-lQt5WebKit -Wl,-z,wxneeded"/ \
		${PREFIX}/lib/pkgconfig/Qt5WebKit.pc
	# CMake files get values from QMake config "as is"
	find ${QT_CMAKEDIR} -type f -print0 | xargs -0 perl -pi \
		-e 's,\$$\(LOCALBASE\),${LOCALBASE},g;' \
		-e 's,\$$\(X11BASE\),${X11BASE},g;'
	# remove unpatched files
	find ${QT_BASEDIR}/mkspecs -name '*${PATCHORIG}' | xargs rm
	# often-used includes directory
	cd ${PREFIX}/lib/qt5 && ln -sf ../../include/X11/qt5 include

pre-configure:
	# Python and Ruby are used for building mainly, those paths
	# do not get into final packages.
	ln -sf ${MODPY_BIN} ${WRKDIR}/bin/python
	ln -sf ${RUBY} ${WRKDIR}/bin/ruby

	cd ${WRKSRC}; ${MODPY_BIN_ADJ} \
		`find . -name '*.py'` \
		`egrep -Rl '(env |bin/)python' qtwebkit/Tools` \
		qtscript/src/3rdparty/javascriptcore/JavaScriptCore/wscript \
		qtwebkit/Source/WebCore/inspector/generate-inspector-protocol-version \
		qtwebkit/Source/WebCore/html/parser/create-html-entity-table

	cd ${WRKSRC}; ${MODRUBY_RUBY_ADJ} \
		`find qtwebkit -name '*.rb'` \
		qtwebkit/Tools/Scripts/check-for-webkit-framework-include-consistency \
		qtwebkit/Tools/Scripts/display-profiler-output \
		qtwebkit/Tools/Scripts/check-for-inappropriate-macros-in-external-headers \
		qtwebkit/Tools/Scripts/roll-over-ChangeLogs \
		qtwebkit/Tools/Scripts/check-for-inappropriate-files-in-framework \
		qtwebkit/Tools/Scripts/test-webkitruby \
		qtwebkit/Tools/Scripts/clean-header-guards \
		qtwebkit/Tools/Scripts/bencher \
		qtwebkit/Source/WebKit/WebKit.vcxproj/WebKitExportGenerator/make-export-file-generator \
		qtwebkit/Source/WebCore/make-export-file-generator \
		qtwebkit/Source/JavaScriptCore/JavaScriptCore.vcxproj/LLInt/LLIntDesiredOffsets/build-LLIntDesiredOffsets.sh \
		qtwebkit/Source/JavaScriptCore/JavaScriptCore.vcxproj/LLInt/LLIntAssembly/build-LLIntAssembly.sh

	cd ${WRKSRC}; perl -pi.otheradj \
		-e 's,/usr/bin/(env )?python\b,${MODPY_BIN},g;' \
		-e 's,/usr/bin/(env )?ruby\b,${RUBY},g;' \
		-e 's,(/usr)?/bin/(env )?bash\b,/bin/ksh,g;' \
		qtdeclarative/tests/auto/qml/runall.sh \
		qtmultimedia/tests/auto/unit/qwavedecoder/data/gendata.sh \
		qtscript/util/mkdist-javascriptcore \
		qtwebkit/Tools/BuildSlaveSupport/gtk/pulseaudio/run \
		qtwebkit/Tools/Scripts/old-run-webkit-tests \
		qtwebkit/Tools/Scripts/run-webkit-websocketserver \
		qtwebkit/Tools/Scripts/webkitpy/common/system/executive_unittest.py \
		qtxmlpatterns/src/xmlpatterns/parser/createParser.sh \
		qtgraphicaleffects/tools/pngdumper/pngdumper.sh

	cd ${WRKSRC}; perl -pi.symname \
		-e 's/^__/_/;' \
		qtscript/src/3rdparty/javascriptcore/JavaScriptCore/JavaScriptCore.order \
		qtwebkit/Source/JavaScriptCore/JavaScriptCore.order

	cd ${WRKSRC}/qtwebkit/Tools/qmake/config.tests; perl -pi.objdir \
		-e 's/^OBJECTS_DIR/#$$&/;' \
		*/*.pro

	@@gccbasedir=`ecpp -print-search-dirs | awk '/^install:/{print $$2}'`; \
	perl ${PORTSDIR}/infrastructure/bin/pkg_subst \
	    -D OPENBSD_INCDIR_PREPEND="$${gccbasedir}include" \
	    ${WRKSRC}/qtbase/mkspecs/openbsd-g++/qmake.conf

.include <bsd.port.mk>
@


1.54
log
@Fix SIGFPE when using Xvfb, backported from Qt 5.6

OK dcoppa@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.53 2016/09/23 09:16:58 sthen Exp $
d22 1
a22 1
REVISION-main =		3
d111 2
a112 2
WANTLIB-main += gstvideo-1.0 gthread-2.0 gtk-x11-2.0 icudata icui18n
WANTLIB-main += icuuc iodbc jasper jpeg m mng openal pango-1.0 pangocairo-1.0
@


1.53
log
@Cope with moving sqlite3 back to ports.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.52 2016/09/06 09:00:19 dcoppa Exp $
d22 1
a22 1
REVISION-main =		2
@


1.52
log
@
USE_WXNEEDED, add "-Wl,-z,wxneeded" to Qt5WebKit and QtWebKit
pkg-config files.

Similar commit to what was done to www/webkit, and www/webkitgtk4.

OK ajacoutot@@, landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.51 2016/03/20 15:58:26 naddy Exp $
d22 1
a22 1
REVISION-main =		1
d167 1
@


1.51
log
@remove SHARED_ONLY
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.50 2016/03/19 12:04:05 landry Exp $
d22 1
a22 1
REVISION-main =		0
d432 4
@


1.50
log
@Mark qt5 BROKEN-powerpc, it never built there (gcc does ICE's) and it
takes hours/days to fail in bulk builds.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.49 2016/03/17 11:49:08 sthen Exp $
a2 1
SHARED_ONLY =		Yes
d103 1
a103 1
WANTLIB-main =  ${WANTLIB:Nperl}
@


1.49
log
@Adjust qt5 configuration: disable build-time detection of sse3, ssse3,
sse4.1, sse4.2, avx, avx2 on amd64/i386, and additionally sse2 on i386.
Problem report from Peter Kay, input from zhuk@@ naddy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.48 2016/03/06 11:56:41 zhuk Exp $
d5 1
@


1.48
log
@Update to Qt 5.5.1.

Some updates, unbreaking stuff, to follow.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.47 2016/02/22 20:38:08 zhuk Exp $
d20 1
d22 1
d25 1
d27 1
d30 1
d32 1
d308 15
@


1.47
log
@Fix fd_set handling bug in Qt5 as well.

okay naddy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.46 2015/11/20 11:24:04 sthen Exp $
d6 2
a7 2
VERSION =		5.4.1
ENGINIO_VERSION =	1.1.1
a26 8
REVISION-main =		10
REVISION-examples =	2
REVISION-html =		1
REVISION-mysql =	0
REVISION-psql =		0
REVISION-qch =		0
REVISION-sqlite2 =	0
REVISION-tds =		0
d33 39
a71 39
SHARED_LIBS =		Enginio			1.0
SHARED_LIBS +=		Qt5Bluetooth		1.0
SHARED_LIBS +=		Qt5CLucene		1.0
SHARED_LIBS +=		Qt5Concurrent		1.0
SHARED_LIBS +=		Qt5Core			1.0
SHARED_LIBS +=		Qt5DBus			1.0
SHARED_LIBS +=		Qt5Declarative		1.0
SHARED_LIBS +=		Qt5Designer		1.0
SHARED_LIBS +=		Qt5DesignerComponents	1.0
SHARED_LIBS +=		Qt5Gui			1.0
SHARED_LIBS +=		Qt5Help			1.0
SHARED_LIBS +=		Qt5Multimedia		1.0
SHARED_LIBS +=		Qt5MultimediaQuick_p	1.0
SHARED_LIBS +=		Qt5MultimediaWidgets	1.0
SHARED_LIBS +=		Qt5Network		1.0
SHARED_LIBS +=		Qt5Nfc			1.0
SHARED_LIBS +=		Qt5OpenGL		1.0
SHARED_LIBS +=		Qt5Positioning		1.0
SHARED_LIBS +=		Qt5PrintSupport		1.0
SHARED_LIBS +=		Qt5Qml			1.0
SHARED_LIBS +=		Qt5Quick		1.0
SHARED_LIBS +=		Qt5QuickParticles	1.0
SHARED_LIBS +=		Qt5QuickTest		1.0
SHARED_LIBS +=		Qt5QuickWidgets		1.0
SHARED_LIBS +=		Qt5Script		1.0
SHARED_LIBS +=		Qt5ScriptTools		1.0
SHARED_LIBS +=		Qt5Sensors		1.0
SHARED_LIBS +=		Qt5SerialPort		1.0
SHARED_LIBS +=		Qt5Sql			1.0
SHARED_LIBS +=		Qt5Svg			1.0
SHARED_LIBS +=		Qt5Test			1.0
SHARED_LIBS +=		Qt5WebKit		1.0
SHARED_LIBS +=		Qt5WebKitWidgets	1.0
SHARED_LIBS +=		Qt5WebSockets		1.0
SHARED_LIBS +=		Qt5Widgets		1.0
SHARED_LIBS +=		Qt5X11Extras		1.0
SHARED_LIBS +=		Qt5Xml			1.0
SHARED_LIBS +=		Qt5XmlPatterns		1.0
#SHARED_LIBS +=		qgsttools_p		0.0
d73 2
a74 2
SHARED_LIBS-examples =	fftreal			1.0
SHARED_LIBS-examples +=	gruesensor		1.0
d78 13
a90 2
SHARED_LIBS +=		Qt5Location		0.0
SHARED_LIBS +=		Qt5WebChannel		0.0
d97 1
a97 1
WANTLIB-main =  ${WANTLIB}
d109 1
d118 1
d160 1
a217 1
			devel/harfbuzz \
a219 1
			devel/harfbuzz \
d291 1
d336 1
a336 1
		qdbus qdoc qmake qml qtdiag rcc uic
@


1.46
log
@remove devel/flex dep, these are ok with base flex
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.45 2015/10/22 17:26:18 zhuk Exp $
d27 1
a27 1
REVISION-main =		9
@


1.45
log
@Better later than never: actually update right REVISION-main, and not
the one that went to libastral yesterday.

From Caspar Schutijser, thanks!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.44 2015/10/20 21:58:27 zhuk Exp $
d196 1
a196 2
BUILD_DEPENDS +=	devel/flex \
			devel/bison \
@


1.44
log
@Remove extra REVISION-main.

Pointed out by Caspar Schutijser, thanks!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.43 2015/10/20 21:37:26 zhuk Exp $
d27 1
a27 1
REVISION-main =		8
@


1.43
log
@Allow COPTS/CXXOPTS ha^Wfeature to work in qmake-generated makefiles.
Similar feature existed in qt4 port, but was lost during Qt5 porting.

Inspired by conversation with Caspar Schutijser, should help him on
updating Qt Creator port.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.42 2015/09/04 22:08:25 sthen Exp $
a8 1
REVISION-main =		1
@


1.42
log
@Qt dlopen()s various libraries including libssl and does runtime
resolution of symbols. It does guard with #ifdefs but since it doesn't
record a hard dependency on the libssl version, an installed package
doesn't automatically get updated to a newer version that notices the
change, so bump qt5's REVISION-main to force an update.

It does fallback sensibly (no crash, just a Warning printf), but since
the change to headers results in a code change to Qt, we need to bump.

Noticed while testing the otter-browser udpate.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.41 2015/05/29 07:14:44 ajacoutot Exp $
d9 1
a9 1
REVISION-main =		0
@


1.41
log
@Unbreak: libexecinfo header seems to be picked up after the switch to gcc4.9, so
add the corresponding QMAKE_LIBS_EXECINFO to qmake.conf for the time being.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.40 2015/05/28 10:17:31 pascal Exp $
d9 1
@


1.40
log
@gcc4 bumps, reminded by aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.39 2015/05/05 17:43:42 zhuk Exp $
d27 1
a27 1
REVISION-main =		7
d98 1
a98 1
WANTLIB-main += gio-2.0 glib-2.0 gobject-2.0 gstapp-1.0
d155 1
@


1.39
log
@Oops, put back backslash that somehow disappeared in r1.37.

Noticed by aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.38 2015/05/04 21:31:27 ajacoutot Exp $
d27 8
a34 3
REVISION-main =		6
REVISION-examples =	1
REVISION-html =		0
@


1.38
log
@Unbreak: pkg_subst(1) is not in the default path and may not be executable
either.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.37 2015/05/04 10:37:01 zhuk Exp $
d459 1
a459 1
	@@gccbasedir=`ecpp -print-search-dirs | awk '/^install:/{print $$2}'`
@


1.37
log
@Improve hack that avoids picking up compiler intrinsics from
/usr/include in favor of /usr/local/lib/gcc ones by Qt5: now it
helps all qmake-qt5-based software as well.

Fixes problems aja@@ was seeing with games/gottcode/tanglet at least.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2015/05/03 13:10:59 zhuk Exp $
d460 2
a461 1
	pkg_subst -D OPENBSD_INCDIR_PREPEND="$${gccbasedir}include" \
@


1.36
log
@Oops, -examples should be bumped, too.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2015/05/03 13:00:53 zhuk Exp $
d27 1
a27 1
REVISION-main =		5
d219 1
a219 3
			REAL_BUILD_ROOT=${WRKBUILD} \
			OPENBSD_CPPFLAGS="-isystem ${WRKDIR}/gcc-include"
#MAKE_ENV +=		CCACHE_RECACHE=1
d459 3
a461 6
	@@gccbasedir=`echo ${LOCALBASE}/lib/gcc/*-openbsd${OSREV}/${MODGCC4_VERSION}.*`; \
	cd ${WRKSRC}/qtwebkit/Source/WebCore; \
	for f in $$gccbasedir/include/*; do \
		echo ln -sf $$f >&2; \
		ln -sf $$f; \
	done;
@


1.35
log
@Fix a few more glitches in Qt5:

  * Add missing Qt5Designer in WANTLIB-examples;
  * Add a gross hack for pkgconfig files being generated to avoid
    value of WRKBUILD mentioned in them;
  * Unhide dependency on geo/geoclue (used by Qt5Location).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2015/04/30 21:39:35 zhuk Exp $
d28 1
a28 1
REVISION-examples =	0
@


1.34
log
@It looks like packaging problems naddy@@ and aja@@ see happen with two files
only. So let's @@comment those until the issue is found and fixed.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2015/04/25 18:41:30 zhuk Exp $
d27 1
a27 1
REVISION-main =		4
d108 1
a108 1
WANTLIB-examples += Qt5Xml Qt5XmlPatterns
d187 2
a188 1
BUILD_DEPENDS =		x11/dbus
d194 1
d395 4
a398 2
			echo "mv -- $$f ${PREFIX}/lib/pkgconfig"; \
			mv -- "$$f" ${PREFIX}/lib/pkgconfig; \
@


1.33
log
@It's always better to run update-patches BEFORE commit...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2015/04/24 16:16:39 zhuk Exp $
d29 1
@


1.32
log
@Add a deubg printout for qhelpgenerator, which should help to find the root
cause of packaging bug naddy@@ observes.

Enable documentation generation again.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2015/04/24 07:27:34 zhuk Exp $
d27 1
a27 1
REVISION-main =		3
@


1.31
log
@Oops, forgot to remove a few files went to -examples from PLIST-main
during previous commit.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2015/04/24 07:16:39 zhuk Exp $
a4 2
IGNORE-html =		possible hidden dependency, packaging problems
IGNORE-qch =		missing one more LD_LIBRARY_PATH
d27 1
a27 1
REVISION-main =		2
@


1.30
log
@Sneak in more Qt5 tweaks:

  * Replace gross hack named post-configure with a qmake_all target call
    before building documentation. The downside is that rebuild part will
    run in a single process mode; the upside is that qdoc, qhelpgenerator
    and anyone else will work as intended, without need of explicit
    Qt build modules tweaking.

  * Move a few files to -examples. QCounter sensor plugin is commented out
    as it doesn't get installed in case qmake is rerun (see above). It looks
    like this file shouldn't be installed in the first place, but I'm not
    sure, thus using @@comment for now.

Documentation building will be disabled until the issue seen by naddy@@ gets
fixed.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2015/04/23 11:49:07 zhuk Exp $
d29 1
a29 1
REVISION-main =		1
@


1.29
log
@Disable documentation again, bulk builds done by sthen@@ and naddy@@
continue to reveal dragons here and there. Freinds^WHacking never ends...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2015/04/22 14:12:03 zhuk Exp $
d29 2
a30 1
REVISION-main =		0
d220 1
d300 7
d311 1
a373 14

post-configure:
	# Fake configuration to make sure no Makefile will
	# try to use /usr/local/lib/qt5/bin/qdoc or
	# /usr/local/lib/qt5/bin/qhelpgenerator instead of
	# ${WRKBUILD}/qtbase/bin/* ones.
	mkdir -p ${WRKBUILD}/qtbase/mkspecs/modules
	(   echo "QT_TOOL.qdoc.binary  = ${WRKBUILD}/qtbase/bin/qdoc"; \
	    echo "QT_TOOL.qdoc.depends = core xml") \
	    >>${WRKBUILD}/qtbase/mkspecs/modules/qt_tool_qdoc.pri
	mkdir -p ${WRKBUILD}/qtbase/mkspecs/modules
	(   echo "QT_TOOL.qhelpgenerator.binary  = ${WRKBUILD}/qttools/bin/qhelpgenerator"; \
	    echo "QT_TOOL.qhelpgenerator.depends = core gui network help_private") \
	    >>${WRKBUILD}/qtbase/mkspecs/modules/qt_tool_qhelpgenerator.pri
@


1.28
log
@Add another gross hack to make sure qhelpgenerator, when we ask for building
Qt5 documentation, is always picked up from build directory.

Remove IGNORE-qch as things should build fine again (unless a problem naddy@@
seen today is unrelated).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2015/04/22 12:29:34 zhuk Exp $
d5 2
@


1.27
log
@Drop the patch not needed anymore. Bump REVISION because the affected file
goes into package.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2015/04/20 19:32:38 zhuk Exp $
a4 1
IGNORE-qch =		tries to run ${LOCALBASE}/qt5/bin/qhelpgenerator
d364 4
a367 3
	# Fake qdoc configuration to make sure no Makefile will
	# try to use /usr/local/lib/qt5/bin/qdoc instead of
	# ${WRKBUILD}/qtbase/bin/qdoc.
d372 4
@


1.26
log
@Add IGNORE-qch for now, until the issue with trying to run qhelpgenerator
from LOCALBASE is resolved.

Found by sthen@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2015/04/19 13:18:28 zhuk Exp $
d28 1
@


1.25
log
@Update x11/qt5 to 5.4.1. Improvements included:

  * Builds fine when another version being installed;
  * Start building documentation, HTML generator bug was fixed (patch is
    waiting for inclusion upstream);

This update do NOT include QtWebEngine: it relies on building from
Chromium sources (bundled with Qt5) and is a real pain to proceed; so lets
concentrate on what we already have.

All dependant ports are checked by building and running.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2015/04/04 09:21:08 ajacoutot Exp $
d5 1
@


1.24
log
@Bump after the recent changes in packaging dbus and dconf.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2015/03/27 16:02:32 ajacoutot Exp $
a4 2
IGNORE-html =		qdoc segfaults
BROKEN-sparc64 =	tries to include a non-existent qatomic_sparc.h in src/corelib/thread/qbasicatomic.h
d6 2
a7 1
VERSION =		5.3.2
d15 1
d24 1
a27 8
REVISION-main =		12
REVISION-mysql =	1
REVISION-psql =		1
REVISION-sqlite2 =	1
REVISION-tds =		1
REVISION-examples =	0
REVISION-html =		0

d29 1
d33 38
a70 38
SHARED_LIBS =		Enginio			0.0
SHARED_LIBS +=		Qt5Bluetooth		0.0
SHARED_LIBS +=		Qt5CLucene		0.0
SHARED_LIBS +=		Qt5Concurrent		0.0
SHARED_LIBS +=		Qt5Core			0.0
SHARED_LIBS +=		Qt5DBus			0.0
SHARED_LIBS +=		Qt5Declarative		0.0
SHARED_LIBS +=		Qt5Designer		0.0
SHARED_LIBS +=		Qt5DesignerComponents	0.0
SHARED_LIBS +=		Qt5Gui			0.0
SHARED_LIBS +=		Qt5Help			0.0
SHARED_LIBS +=		Qt5Multimedia		0.0
SHARED_LIBS +=		Qt5MultimediaQuick_p	0.0
SHARED_LIBS +=		Qt5MultimediaWidgets	0.0
SHARED_LIBS +=		Qt5Network		0.0
SHARED_LIBS +=		Qt5Nfc			0.0
SHARED_LIBS +=		Qt5OpenGL		0.0
SHARED_LIBS +=		Qt5Positioning		0.0
SHARED_LIBS +=		Qt5PrintSupport		0.0
SHARED_LIBS +=		Qt5Qml			0.0
SHARED_LIBS +=		Qt5Quick		0.0
SHARED_LIBS +=		Qt5QuickParticles	0.0
SHARED_LIBS +=		Qt5QuickTest		0.0
SHARED_LIBS +=		Qt5QuickWidgets		0.0
SHARED_LIBS +=		Qt5Script		0.0
SHARED_LIBS +=		Qt5ScriptTools		0.0
SHARED_LIBS +=		Qt5Sensors		0.0
SHARED_LIBS +=		Qt5SerialPort		0.0
SHARED_LIBS +=		Qt5Sql			0.0
SHARED_LIBS +=		Qt5Svg			0.0
SHARED_LIBS +=		Qt5Test			0.0
SHARED_LIBS +=		Qt5WebKit		0.0
SHARED_LIBS +=		Qt5WebKitWidgets	0.0
SHARED_LIBS +=		Qt5WebSockets		0.0
SHARED_LIBS +=		Qt5Widgets		0.0
SHARED_LIBS +=		Qt5X11Extras		0.0
SHARED_LIBS +=		Qt5Xml			0.0
SHARED_LIBS +=		Qt5XmlPatterns		0.0
d73 2
a74 2
SHARED_LIBS-examples =	fftreal			0.0
SHARED_LIBS-examples +=	gruesensor		0.0
d77 4
d89 2
a90 2
WANTLIB-main += cups dbus-1 fontconfig freetype gdk-x11-2.0 gdk_pixbuf-2.0
WANTLIB-main += gio-2.0 glib-2.0 gmodule-2.0 gobject-2.0 gstapp-1.0
d115 2
d124 1
a124 1
# Mostly LGPLv2.1 for code; FDLv1.3 for documentation.
d128 1
d131 1
a131 1
MULTI_PACKAGES =	-main -examples -html -mysql -psql -sqlite2 -tds
d161 1
a161 1
LIB_DEPENDS-examples =	${BUILD_PKGPATH},-main \
d166 1
a166 1
LIB_DEPENDS-mysql =	${BUILD_PKGPATH},-main \
d170 1
a170 1
LIB_DEPENDS-psql =	${BUILD_PKGPATH},-main \
d174 3
a176 1
LIB_DEPENDS-sqlite2 =	${BUILD_PKGPATH},-main \
d180 1
a180 1
LIB_DEPENDS-tds =	${BUILD_PKGPATH},-main \
d184 1
d186 2
a187 2
BUILD_DEPENDS =		devel/flex \
			devel/bison
d189 2
a190 1
RUN_DEPENDS-main =
d195 1
d211 1
d294 1
d296 6
a301 1
ALL_TARGET +=		docs
d352 1
a352 1
SUBST_VARS =		VERSION
@


1.23
log
@Fix qtWebkit build with new GLib.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2015/01/24 22:09:40 zhuk Exp $
d27 7
a33 5
REVISION-main =		11
REVISION-mysql =	0
REVISION-psql =		0
REVISION-sqlite2 =	0
REVISION-tds =		0
@


1.22
log
@Try to allow Qt5 to get compiled on SPARC: native atomics implementation
was dropped in Qt 5.2, but Qt could use GCC ones - why not?

Initial report from landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2015/01/21 20:49:50 zhuk Exp $
d27 1
a27 1
REVISION-main =		10
@


1.21
log
@Avoid last bits of rand() usage in Qt5 libraries.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2015/01/21 20:40:46 zhuk Exp $
d27 1
a27 1
REVISION-main =		9
@


1.20
log
@More strcpy() fixes for Qt5. Now, if you see warnings from linker, you
can't reassure yourself that "it's Qt5, not my app" anymore.

Noticed by Adam Wolk (hope now I thank the right person), thanks!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2015/01/20 13:38:42 zhuk Exp $
d27 1
a27 1
REVISION-main =		8
@


1.19
log
@Enable W^X in JIT for Qt5 WebKit.

Tested using Otter Browser on amd64.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2015/01/20 13:27:59 zhuk Exp $
d27 1
a27 1
REVISION-main =		7
@


1.18
log
@Make Qt5 pick up certs from /etc/ssl. Fixes annoying warnings in browsers.
Similar (but less invasive) patch was done for Qt4 as well. There is no
valid point for allowing Qt5 to look at many other places, which could
happen be accessible by unauthorized users by occasion, thus we hardcode
the /etc/ssl/ as the only vaild place.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2015/01/15 11:10:02 zhuk Exp $
d27 1
a27 1
REVISION-main =		6
@


1.17
log
@/tmp/cvszOZN00
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2015/01/12 20:30:18 landry Exp $
d27 1
a27 1
REVISION-main =		5
@


1.16
log
@BROKEN-sparc64 =        tries to include a non-existent qatomic_sparc.h in src/corelib/thread/qbasicatomic.h
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2015/01/10 22:02:56 zhuk Exp $
d27 1
a27 1
REVISION-main =		4
@


1.15
log
@Better patch (likely to fix at least some crashes seen in Qt5Webkit),
similar to what real upstream (i.e, WebKitGTK) has.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2015/01/09 08:10:56 pascal Exp $
d6 1
@


1.14
log
@Fix in powerpc by linking with --relax.

ok toolchain@@ via landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2015/01/06 21:32:41 zhuk Exp $
d26 1
a26 1
REVISION-main =		3
@


1.13
log
@Fix problem with all SQL drivers being probed during CMake-based configure
stage, when not all of them get installed. Actually, it was a matter of
shuffling a few .cmake files between packages.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2015/01/05 18:13:32 landry Exp $
a5 1
BROKEN-powerpc =	relocation overflow when linking libQt5WebKit
d275 3
@


1.12
log
@Surprisingly, qt5 fails to build on powerpc, relocation overflow when
linking libQt5WebKit. All hail our glorious binutils!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2014/12/26 00:02:32 zhuk Exp $
d27 5
a31 1
REVISION-main =		2
@


1.11
log
@Enable W^X in Qt5WebKit/QtDeclarative JIT.

The code looks like initially developed for iOS, but compiles perfectly
on OpenBSD as well. No reason to avoid another hardening that comes
for free, right?
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2014/12/25 23:35:44 zhuk Exp $
d6 1
@


1.10
log
@On OpenBSD, we override shared library versions. This breaks Qt-GTK
interaction, as found by Adam Wolk (thanks!).

Fix by stopping requiring exact major version of GTK+ libraries.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2014/12/22 21:30:41 zhuk Exp $
d26 1
a26 1
REVISION-main =		1
@


1.9
log
@My CMake-related expiriments left out Qt5LinguistTools CMake files out
of package; fix that. Should fix the problem aja@@ see with new Stellarium.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2014/12/22 18:51:58 espie Exp $
d26 1
a26 1
REVISION-main =		0
@


1.8
log
@same issue as qt4's qmake. requires nojunk
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2014/12/22 18:00:13 naddy Exp $
d25 2
@


1.7
log
@enable parallel building; ok zhuk@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2014/12/11 17:50:03 zhuk Exp $
d28 1
a28 1
DPB_PROPERTIES =	parallel
@


1.6
log
@Since GStreamer 0.10 support is disabled in Qt5, there is no libgsttools_p.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2014/12/11 17:48:44 zhuk Exp $
d27 2
@


1.5
log
@Tweak comments. No functional changes.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2014/12/11 13:24:27 zhuk Exp $
d66 1
a66 1
SHARED_LIBS +=		qgsttools_p		0.0
@


1.4
log
@Fix usage of Qt5 from CMake.

CMake files are not installed in ${PREFIX}/lib anymore; instead,
the qt5.port.mk will provide necessary environment variables to help
CMake to find the Qt5 packages.

Not connected to build, so no bump.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/12/10 22:42:17 zhuk Exp $
d349 1
a349 2
	# this helps qdbuscpp2xml
	#cd ${QT_BINDIR} && ln -sf moc moc-qt5
d371 1
a371 1
	# cleanup
d373 1
@


1.3
log
@Enable C++11 in Qt5. Needed, e.g., in modern Qt Creator.

With help from espie@@ in alloca(3)-related bits.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2014/12/10 21:22:46 zhuk Exp $
d368 4
a371 3
	# CMake files
	rm -Rf ${PREFIX}/lib/cmake
	mv ${QT_CMAKEDIR} ${PREFIX}/lib/cmake
@


1.2
log
@PLIST-main tweaks. Not connected to builds, so no bump.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2014/12/08 20:33:38 zhuk Exp $
d255 1
a255 1
CONFIGURE_ARGS +=	-no-c++11 \
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.template,v 1.71 2014/07/10 12:33:17 sthen Exp $
d372 1
a372 1
	rm -f share/qt5/mkspecs/openbsd-g++/qmake.conf${PATCHORIG}
@


1.1.1.1
log
@Import Qt 5.3.2.

Qt is a full development framework with tools designed to streamline
the creation of applications and user interfaces for desktop,
embedded, and mobile platforms.

This port is not enabled yet, because some ports will pick up Qt5
instead of Qt4, breaking build. Those will be fixed separately soon.

There are some non-critical things left to do:

1. Support for OpenBSD sensors framework.
2. V4L2 support.
3. -L${LOCALBASE}/* could come before -L${WRKBUILD}/* when linking is
   done across Qt module boundaries. This means that builds of Qt 5.y
   while having Qt 5.x installed (x < y) will be busted.

Volunteers are welcome to come in and help fixing those problems.

Last note: don't even try to build "debug" FLAVOR unless you know
what you're doing and you have about 20GB of free space. You've
been warned.

landry@@ agrees on continuing working in-tree
@
text
@@


1.1.1.2
log
@Import Qt 5.6.2.

The port is now being split into pieces. Cleanup and conflict resolving
to follow.
@
text
@d1 1
a1 1
# $OpenBSD$
d3 3
a5 34
     SUBDIR =
     SUBDIR += qt3d
     SUBDIR += qtactiveqt
     SUBDIR += qtbase
     SUBDIR += qtcanvas3d
     SUBDIR += qtconnectivity
     SUBDIR += qtdeclarative,
     SUBDIR += qtdoc
     SUBDIR += qtenginio
     SUBDIR += qtgraphicaleffects
     SUBDIR += qtimageformats
     SUBDIR += qtlocation
     SUBDIR += qtmultimedia
     SUBDIR += qtquickcontrols
     SUBDIR += qtquickcontrols2
     SUBDIR += qtscript
     SUBDIR += qtsensors
     SUBDIR += qtserialbus
     SUBDIR += qtserialport
     SUBDIR += qtsvg
     SUBDIR += qttools,
     SUBDIR += qttranslations
     SUBDIR += qtwebchannel
     SUBDIR += qtwebkit
     SUBDIR += qtwebsockets
     SUBDIR += qtx11extras
     SUBDIR += qtxmlpatterns

# no support for Wayland in Xenocara
#     SUBDIR += qtwayland
# not ported yet
#     SUBDIR += qtwebengine
# requires qtwebengine
#     SUBDIR += qtwebview
d7 427
a433 1
.include <bsd.port.subdir.mk>
@

