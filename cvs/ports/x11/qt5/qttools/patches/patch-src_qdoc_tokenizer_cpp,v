head     1.1;
branch   1.1.1;
access   ;
symbols  zhuk_20161225:1.1.1.1 zhuk:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2016.12.25.14.13.14;  author zhuk;  state Exp;
branches 1.1.1.1;
next     ;
commitid        QPfzuwiSTmth4MkN;

1.1.1.1
date     2016.12.25.14.13.14;  author zhuk;  state Exp;
branches ;
next     ;
commitid        QPfzuwiSTmth4MkN;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
No strcpy in Qt on OpenBSD.
--- src/qdoc/tokenizer.cpp.orig	Tue Jul 19 14:53:38 2016
+++ src/qdoc/tokenizer.cpp	Tue Jul 19 14:55:45 2016
@@@@ -484,7 +484,7 @@@@ int Tokenizer::getToken()
         }
     }
 
-    strcpy(yyLex, "end-of-input");
+    strlcpy(yyLex, "end-of-input", yyLexBufSize);
     yyLexLen = strlen(yyLex);
     return Tok_Eoi;
 }
@@@@ -582,8 +582,8 @@@@ void Tokenizer::start(const Location& loc)
     yyTokLoc = loc;
     yyCurLoc = loc;
     yyCurLoc.start();
-    strcpy(yyPrevLex, "beginning-of-input");
-    strcpy(yyLex, "beginning-of-input");
+    strlcpy(yyPrevLex, "beginning-of-input", yyLexBufSize);
+    strlcpy(yyLex, "beginning-of-input", yyLexBufSize);
     yyLexLen = strlen(yyLex);
     yyBraceDepth = 0;
     yyParenDepth = 0;
@@@@ -675,7 +675,7 @@@@ int Tokenizer::getTokenAfterPreprocessor()
           yyPrevLex. This way, we skip over the preprocessor
           directive.
         */
-        qstrcpy(yyLex, yyPrevLex);
+        strlcpy(yyLex, yyPrevLex, yyLexBufSize);
 
         /*
           If getToken() meets another #, it will call
@


1.1.1.1
log
@Import Qt 5.6.2.

The port is now being split into pieces. Cleanup and conflict resolving
to follow.
@
text
@@
