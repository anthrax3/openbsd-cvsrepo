head	1.2;
access;
symbols
	zhuk_20161225:1.1.1.1 zhuk:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.12.25.14.37.19;	author zhuk;	state dead;
branches;
next	1.1;
commitid	wvCaJmeGD2Gumyqu;

1.1
date	2016.12.25.14.13.21;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	QPfzuwiSTmth4MkN;

1.1.1.1
date	2016.12.25.14.13.21;	author zhuk;	state Exp;
branches;
next	;
commitid	QPfzuwiSTmth4MkN;


desc
@@


1.2
log
@Oops, remove WIP files that should be left in openbsd-wip.
@
text
@$OpenBSD: patch-src_chrome_browser_extensions_api_music_manager_private_device_id_linux_cc,v 1.1 2016/12/25 14:13:21 zhuk Exp $
--- src/chrome/browser/extensions/api/music_manager_private/device_id_linux.cc.orig.port	Wed Feb 24 00:01:58 2016
+++ src/chrome/browser/extensions/api/music_manager_private/device_id_linux.cc	Sat Mar  5 19:12:21 2016
@@@@ -4,6 +4,15 @@@@
 
 #include "chrome/browser/extensions/api/music_manager_private/device_id.h"
 
+#include "build/build_config.h"
+
+#if defined(OS_BSD)
+#include <sys/types.h>
+#include <net/if_dl.h>
+#include <netinet/in.h>
+#include <sys/socket.h>
+#endif
+
 #include <ifaddrs.h>
 #include <net/if.h>
 #include <stddef.h>
@@@@ -105,11 +114,33 @@@@ class MacAddressProcessor {
                         const char* const prefixes[],
                         size_t prefixes_count) {
     const int MAC_LENGTH = 6;
+#if defined(OS_BSD)
+    struct ifaddrs *ifap, *ifinfo;
+#else
     struct ifreq ifinfo;
+#endif
 
     memset(&ifinfo, 0, sizeof(ifinfo));
-    strncpy(ifinfo.ifr_name, ifaddr->ifa_name, sizeof(ifinfo.ifr_name) - 1);
 
+#if defined(OS_BSD)
+    int result = getifaddrs(&ifap);
+    if (result != 0)
+      return true;
+    result = 1; // no MAC found yet
+    for (ifinfo = ifap; ifinfo != NULL; ifinfo = ifinfo->ifa_next) {
+      struct sockaddr* sa = ifinfo->ifa_addr;
+      if (sa->sa_family == AF_LINK &&
+        !strncmp(ifinfo->ifa_name, ifaddr->ifa_name,
+        sizeof(ifinfo->ifa_name) - 1)) { 
+          result = 0;
+	  break;
+      }
+    }
+
+    char mac_address[6];
+    strncpy(mac_address, (const char*)LLADDR((struct sockaddr_dl*)ifinfo->ifa_addr), sizeof(mac_address));
+#else
+    strncpy(ifinfo.ifr_name, ifaddr->ifa_name, sizeof(ifinfo.ifr_name) - 1);
     int sd = socket(AF_INET, SOCK_DGRAM, 0);
     int result = ioctl(sd, SIOCGIFHWADDR, &ifinfo);
     close(sd);
@@@@ -119,11 +150,17 @@@@ class MacAddressProcessor {
 
     const char* mac_address =
         static_cast<const char*>(ifinfo.ifr_hwaddr.sa_data);
+#endif
     if (!is_valid_mac_address_.Run(mac_address, MAC_LENGTH))
       return true;
 
+#if defined(OS_BSD)
+    if (!IsValidPrefix(ifinfo->ifa_name, prefixes, prefixes_count))
+      return true;
+#else
     if (!IsValidPrefix(ifinfo.ifr_name, prefixes, prefixes_count))
       return true;
+#endif
 
     // Got one!
     found_mac_address_ =
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import Qt 5.6.2.

The port is now being split into pieces. Cleanup and conflict resolving
to follow.
@
text
@@
