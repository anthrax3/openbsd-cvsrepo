head	1.2;
access;
symbols
	zhuk_20161225:1.1.1.1 zhuk:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.12.25.14.37.19;	author zhuk;	state dead;
branches;
next	1.1;
commitid	wvCaJmeGD2Gumyqu;

1.1
date	2016.12.25.14.13.22;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	QPfzuwiSTmth4MkN;

1.1.1.1
date	2016.12.25.14.13.22;	author zhuk;	state Exp;
branches;
next	;
commitid	QPfzuwiSTmth4MkN;


desc
@@


1.2
log
@Oops, remove WIP files that should be left in openbsd-wip.
@
text
@$OpenBSD: patch-src_media_base_video_frame_h,v 1.1 2016/12/25 14:13:22 zhuk Exp $
--- src/media/base/video_frame.h.orig.port	Wed May 25 21:01:03 2016
+++ src/media/base/video_frame.h	Thu May 26 08:09:47 2016
@@@@ -61,7 +61,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
     STORAGE_UNOWNED_MEMORY = 2,  // External, non owned data pointers.
     STORAGE_OWNED_MEMORY = 3,  // VideoFrame has allocated its own data buffer.
     STORAGE_SHMEM = 4,         // Pixels are backed by Shared Memory.
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
     // TODO(mcasas): Consider turning this type into STORAGE_NATIVE or another
     // meaningful name and handle it appropriately in all cases.
     STORAGE_DMABUFS = 5,  // Each plane is stored into a DmaBuf.
@@@@ -207,7 +207,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
       const gfx::GpuMemoryBufferHandle& v_handle,
       base::TimeDelta timestamp);
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   // Wraps provided dmabufs
   // (https://www.kernel.org/doc/Documentation/dma-buf-sharing.txt) with a
   // VideoFrame. The dmabuf fds are dup()ed on creation, so that the VideoFrame
@@@@ -362,7 +362,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
   const std::vector<gfx::GpuMemoryBufferHandle>& gpu_memory_buffer_handles()
       const;
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   // Returns backing DmaBuf file descriptor for given |plane|, if present, or
   // -1 if not.
   // TODO(mcasas): Rename to DmabufFd() to comply with Style Guide.
@@@@ -543,7 +543,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
   // GpuMemoryBuffer handles attached to the video_frame.
   std::vector<gfx::GpuMemoryBufferHandle> gpu_memory_buffer_handles_;
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   // Dmabufs for each plane. If set, this frame has DmaBuf backing in some way.
   base::ScopedFD dmabuf_fds_[kMaxPlanes];
 #endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import Qt 5.6.2.

The port is now being split into pieces. Cleanup and conflict resolving
to follow.
@
text
@@
