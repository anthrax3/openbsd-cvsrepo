head     1.1;
branch   1.1.1;
access   ;
symbols  zhuk_20161225:1.1.1.1 zhuk:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2016.12.25.14.13.19;  author zhuk;  state Exp;
branches 1.1.1.1;
next     ;
commitid        QPfzuwiSTmth4MkN;

1.1.1.1
date     2016.12.25.14.13.19;  author zhuk;  state Exp;
branches ;
next     ;
commitid        QPfzuwiSTmth4MkN;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- src/3rdparty/chromium/third_party/zlib/fill_window_sse.c.orig.port	Sat Aug  6 14:22:30 2016
+++ src/3rdparty/chromium/third_party/zlib/fill_window_sse.c	Sun Aug  7 08:06:14 2016
@@@@ -173,3 +173,37 @@@@ void fill_window_sse(deflate_state *s)
     Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
            "not enough room for search");
 }
+
+/* Safe to inline this as GCC/clang will use inline asm and Visual Studio will
+ * use intrinsic without extra params
+ */
+Pos insert_string_sse(deflate_state *const s, const Pos str)
+{
+    Pos ret;
+    unsigned *ip, val, h = 0;
+
+    ip = (unsigned *)&s->window[str];
+    val = *ip;
+
+    if (s->level >= 6)
+        val &= 0xFFFFFF;
+
+/* Windows clang should use inline asm */
+#if defined(_MSC_VER) && !defined(__clang__)
+    h = _mm_crc32_u32(h, val);
+#elif defined(__i386__) || defined(__amd64__)
+    __asm__ __volatile__ (
+        "crc32 %1,%0\n\t"
+    : "+r" (h)
+    : "r" (val)
+    );
+#else
+    /* This should never happen */
+    assert(0);
+#endif
+
+    ret = s->head[h & s->hash_mask];
+    s->head[h & s->hash_mask] = str;
+    s->prev[str & s->w_mask] = ret;
+    return ret;
+}
@


1.1.1.1
log
@Import Qt 5.6.2.

The port is now being split into pieces. Cleanup and conflict resolving
to follow.
@
text
@@
