head	1.2;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	zhuk_20161225:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.07.17.08.34.39;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	3tUsNizeEEvC87c0;

1.1
date	2016.12.25.14.13.19;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	QPfzuwiSTmth4MkN;

1.1.1.1
date	2016.12.25.14.13.19;	author zhuk;	state Exp;
branches;
next	;
commitid	QPfzuwiSTmth4MkN;


desc
@@


1.2
log
@Update from Qt 5.6.2 (LTS) to Qt 5.9.1 (LTS).

Tested with both GCC and CLang (less through).

This forces updating x11/py-qt5, which forces update of devel/py-sip,
which forces update of x11/py-qt4, but, thankfully, no breakage detected.
@
text
@$OpenBSD$
Automatically copied from www/chromium.

Index: src/3rdparty/chromium/third_party/webrtc/base/physicalsocketserver.cc
--- src/3rdparty/chromium/third_party/webrtc/base/physicalsocketserver.cc.orig
+++ src/3rdparty/chromium/third_party/webrtc/base/physicalsocketserver.cc
@@@@ -57,7 +57,7 @@@@ typedef void* SockOptArg;
 
 #endif  // WEBRTC_POSIX
 
-#if defined(WEBRTC_POSIX) && !defined(WEBRTC_MAC) && !defined(__native_client__)
+#if defined(WEBRTC_POSIX) && !defined(WEBRTC_MAC) && !defined(__native_client__) && !defined(WEBRTC_BSD)
 
 int64_t GetSocketRecvTimestamp(int socket) {
   struct timeval tv_ioctl;
@@@@ -274,7 +274,7 @@@@ int PhysicalSocket::GetOption(Option opt, int* value) 
   socklen_t optlen = sizeof(*value);
   int ret = ::getsockopt(s_, slevel, sopt, (SockOptArg)value, &optlen);
   if (ret != -1 && opt == OPT_DONTFRAGMENT) {
-#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID)
+#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID) && !defined(WEBRTC_BSD)
     *value = (*value != IP_PMTUDISC_DONT) ? 1 : 0;
 #endif
   }
@@@@ -287,7 +287,7 @@@@ int PhysicalSocket::SetOption(Option opt, int value) {
   if (TranslateOption(opt, &slevel, &sopt) == -1)
     return -1;
   if (opt == OPT_DONTFRAGMENT) {
-#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID)
+#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID) && !defined(WEBRTC_BSD)
     value = (value) ? IP_PMTUDISC_DO : IP_PMTUDISC_DONT;
 #endif
   }
@@@@ -569,7 +569,7 @@@@ int PhysicalSocket::TranslateOption(Option opt, int* s
       *slevel = IPPROTO_IP;
       *sopt = IP_DONTFRAGMENT;
       break;
-#elif defined(WEBRTC_MAC) || defined(BSD) || defined(__native_client__)
+#elif defined(WEBRTC_MAC) || defined(WEBRTC_BSD) || defined(__native_client__)
       LOG(LS_WARNING) << "Socket::OPT_DONTFRAGMENT not supported.";
       return -1;
 #elif defined(WEBRTC_POSIX)
@


1.1
log
@Initial revision
@
text
@d2 18
a19 6
--- src/3rdparty/chromium/third_party/webrtc/base/physicalsocketserver.cc.orig.port	Sat Aug  6 15:50:24 2016
+++ src/3rdparty/chromium/third_party/webrtc/base/physicalsocketserver.cc	Sat Aug  6 15:53:30 2016
@@@@ -242,7 +242,7 @@@@ class PhysicalSocket : public AsyncSocket, public sigs
     socklen_t optlen = sizeof(*value);
     int ret = ::getsockopt(s_, slevel, sopt, (SockOptArg)value, &optlen);
     if (ret != -1 && opt == OPT_DONTFRAGMENT) {
d22 1
a22 1
       *value = (*value != IP_PMTUDISC_DONT) ? 1 : 0;
d24 5
a28 5
     }
@@@@ -255,7 +255,7 @@@@ class PhysicalSocket : public AsyncSocket, public sigs
     if (TranslateOption(opt, &slevel, &sopt) == -1)
       return -1;
     if (opt == OPT_DONTFRAGMENT) {
d31 1
a31 1
       value = (value) ? IP_PMTUDISC_DO : IP_PMTUDISC_DONT;
d33 10
a42 10
     }
@@@@ -442,7 +442,7 @@@@ class PhysicalSocket : public AsyncSocket, public sigs
     // and let the caller pick a default MTU.
     SetError(EINVAL);
     return -1;
-#elif defined(WEBRTC_LINUX)
+#elif defined(WEBRTC_LINUX) && !defined(WEBRTC_BSD)
     // Gets the path MTU.
     int value;
     socklen_t vlen = sizeof(value);
@


1.1.1.1
log
@Import Qt 5.6.2.

The port is now being split into pieces. Cleanup and conflict resolving
to follow.
@
text
@@
