head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	zhuk_20161225:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.07.17.08.34.39;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	3tUsNizeEEvC87c0;

1.1
date	2016.12.25.14.13.19;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	QPfzuwiSTmth4MkN;

1.1.1.1
date	2016.12.25.14.13.19;	author zhuk;	state Exp;
branches;
next	;
commitid	QPfzuwiSTmth4MkN;


desc
@@


1.2
log
@Update from Qt 5.6.2 (LTS) to Qt 5.9.1 (LTS).

Tested with both GCC and CLang (less through).

This forces updating x11/py-qt5, which forces update of devel/py-sip,
which forces update of x11/py-qt4, but, thankfully, no breakage detected.
@
text
@$OpenBSD$
Automatically copied from www/chromium.

Index: src/3rdparty/chromium/third_party/skia/src/gpu/GrAutoLocaleSetter.h
--- src/3rdparty/chromium/third_party/skia/src/gpu/GrAutoLocaleSetter.h.orig
+++ src/3rdparty/chromium/third_party/skia/src/gpu/GrAutoLocaleSetter.h
@@@@ -22,7 +22,7 @@@@
 #include <xlocale.h>
 #endif
 
-#if defined(SK_BUILD_FOR_ANDROID) || defined(__UCLIBC__) || defined(_NEWLIB_VERSION)
+#if defined(SK_BUILD_FOR_ANDROID) || defined(__UCLIBC__) || defined(_NEWLIB_VERSION) || defined(__OpenBSD__)
 #define HAVE_LOCALE_T 0
 #else
 #define HAVE_LOCALE_T 1
@


1.1
log
@Initial revision
@
text
@d2 6
a7 3
--- src/3rdparty/chromium/third_party/skia/src/gpu/GrAutoLocaleSetter.h.orig.port	Sat Aug  6 12:09:46 2016
+++ src/3rdparty/chromium/third_party/skia/src/gpu/GrAutoLocaleSetter.h	Sat Aug  6 12:15:44 2016
@@@@ -18,6 +18,10 @@@@
d11 5
a15 34
+#if !defined(SK_BUILD_FOR_WIN) && !defined(SK_BUILD_FOR_ANDROID) && !defined(__UCLIBC__) && !defined(__OpenBSD__)
+# define SK_OTHER_LOCALE
+#endif
+
 /**
  * Helper class for ensuring that we don't use the wrong locale when building shaders. Android
  * doesn't support locale in the NDK, so this is a no-op there.
@@@@ -28,7 +32,7 @@@@ class GrAutoLocaleSetter { (public)
 #if defined(SK_BUILD_FOR_WIN)
         fOldPerThreadLocale = _configthreadlocale(_ENABLE_PER_THREAD_LOCALE);
         fOldLocale = setlocale(LC_ALL, name);
-#elif !defined(SK_BUILD_FOR_ANDROID) && !defined(__UCLIBC__)
+#elif defined(SK_OTHER_LOCALE)
         fLocale = newlocale(LC_ALL, name, 0);
         if (fLocale) {
             fOldLocale = uselocale(fLocale);
@@@@ -42,7 +46,7 @@@@ class GrAutoLocaleSetter { (public)
 #if defined(SK_BUILD_FOR_WIN)
         setlocale(LC_ALL, fOldLocale);
         _configthreadlocale(fOldPerThreadLocale);
-#elif !defined(SK_BUILD_FOR_ANDROID) && !defined(__UCLIBC__)
+#elif defined(SK_OTHER_LOCALE)
         if (fLocale) {
              uselocale(fOldLocale);
              freelocale(fLocale);
@@@@ -54,7 +58,7 @@@@ class GrAutoLocaleSetter { (public)
 #if defined(SK_BUILD_FOR_WIN)
     int fOldPerThreadLocale;
     const char* fOldLocale;
-#elif !defined(SK_BUILD_FOR_ANDROID) && !defined(__UCLIBC__)
+#elif defined(SK_OTHER_LOCALE)
     locale_t fOldLocale;
     locale_t fLocale;
 #endif
@


1.1.1.1
log
@Import Qt 5.6.2.

The port is now being split into pieces. Cleanup and conflict resolving
to follow.
@
text
@@
