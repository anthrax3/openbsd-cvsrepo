head	1.4;
access;
symbols
	OPENBSD_4_7:1.3.0.8
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2010.04.22.22.00.45;	author kili;	state dead;
branches;
next	1.3;

1.3
date	2008.04.16.21.00.56;	author kili;	state Exp;
branches;
next	1.2;

1.2
date	2008.02.03.18.17.51;	author kili;	state Exp;
branches;
next	1.1;

1.1
date	2008.01.18.21.51.13;	author kili;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xmonad-0.9.1
@
text
@$OpenBSD: patch-XMonad_Operations_hs,v 1.3 2008/04/16 21:00:56 kili Exp $

Backport for ghc-6.6 and X11-extras.

--- XMonad/Operations.hs.orig	Sat Mar 29 21:59:44 2008
+++ XMonad/Operations.hs	Mon Mar 31 23:05:12 2008
@@@@ -172,7 +172,7 @@@@ windows f = do
     -- all windows that are no longer in the windowset are marked as
     -- withdrawn, it is important to do this after the above, otherwise 'hide'
     -- will overwrite withdrawnState with iconicState
-    mapM_ (flip setWMState withdrawnState) (W.allWindows old \\ W.allWindows ws)
+    mapM_ (flip setWMState 0) (W.allWindows old \\ W.allWindows ws)
 
     clearEvents enterWindowMask
 
@@@@ -188,7 +188,7 @@@@ hide w = whenX (gets (S.member w . mapped)) $ withDisp
     io $ do selectInput d w (clientMask .&. complement structureNotifyMask)
             unmapWindow d w
             selectInput d w clientMask
-    setWMState w iconicState
+    setWMState w 3
     -- this part is key: we increment the waitingUnmap counter to distinguish
     -- between client and xmonad initiated unmaps.
     modify (\s -> s { waitingUnmap = M.insertWith (+) w 1 (waitingUnmap s)
@@@@ -198,7 +198,7 @@@@ hide w = whenX (gets (S.member w . mapped)) $ withDisp
 -- this is harmless if the window was already visible
 reveal :: Window -> X ()
 reveal w = withDisplay $ \d -> do
-    setWMState w normalState
+    setWMState w 1
     io $ mapWindow d w
     modify (\s -> s { mapped = S.insert w (mapped s) })
 
@@@@ -209,7 +209,7 @@@@ clientMask = structureNotifyMask .|. enterWindowMask .
 -- | Set some properties when we initially gain control of a window
 setInitialProperties :: Window -> X ()
 setInitialProperties w = asks normalBorder >>= \nb -> withDisplay $ \d -> do
-    setWMState w iconicState
+    setWMState w 3
     io $ selectInput d w $ clientMask
     bw <- asks (borderWidth . config)
     io $ setWindowBorderWidth d w bw
@


1.3
log
@
Update to 0.7.
@
text
@d1 1
a1 1
$OpenBSD: patch-XMonad_Operations_hs,v 1.2 2008/02/03 18:17:51 kili Exp $
@


1.2
log
@
Update to 0.6. Thanks to Simon Kuhnle and Jona Joachim for testing.
@
text
@d1 1
a1 1
$OpenBSD: patch-XMonad_Operations_hs,v 1.1 2008/01/18 21:51:13 kili Exp $
d5 3
a7 3
--- XMonad/Operations.hs.orig	Sun Jan 27 23:02:10 2008
+++ XMonad/Operations.hs	Mon Jan 28 20:37:49 2008
@@@@ -170,7 +170,7 @@@@ windows f = do
d16 1
a16 1
@@@@ -186,7 +186,7 @@@@ hide w = whenX (gets (S.member w . mapped)) $ withDisp
d25 1
a25 1
@@@@ -196,7 +196,7 @@@@ hide w = whenX (gets (S.member w . mapped)) $ withDisp
d34 1
a34 1
@@@@ -207,7 +207,7 @@@@ clientMask = structureNotifyMask .|. enterWindowMask .
@


1.1
log
@
Update to 0.5, and split up into subpackages -main and -lib.

Thanks to Simon Kuhnle for testing.
@
text
@d1 1
a1 1
$OpenBSD$
d5 8
a12 9
--- XMonad/Operations.hs.orig	Mon Dec 10 00:25:43 2007
+++ XMonad/Operations.hs	Sat Jan  5 09:24:33 2008
@@@@ -76,7 +76,7 @@@@ manage w = whenX (not <$> isClient w) $ withDisplay $ 
 unmanage :: Window -> X ()
 unmanage w = do
     windows (W.delete w)
-    setWMState w withdrawnState
+    setWMState w 0
     modify (\s -> s {mapped = S.delete w (mapped s), waitingUnmap = M.delete w (waitingUnmap s)})
d14 3
a16 2
 -- | Modify the size of the status gap at the top of the current screen
@@@@ -185,7 +185,7 @@@@ hide w = whenX (gets (S.member w . mapped)) $ withDisp
d25 1
a25 1
@@@@ -195,7 +195,7 @@@@ hide w = whenX (gets (S.member w . mapped)) $ withDisp
d34 1
a34 1
@@@@ -206,7 +206,7 @@@@ clientMask = structureNotifyMask .|. enterWindowMask .
@

