head	1.3;
access;
symbols
	kili_20070902:1.1.1.1 kili:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2008.01.18.21.51.13;	author kili;	state dead;
branches;
next	1.2;

1.2
date	2007.11.18.20.13.31;	author kili;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.01.22.18.41;	author kili;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.09.01.22.18.41;	author kili;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
Update to 0.5, and split up into subpackages -main and -lib.

Thanks to Simon Kuhnle for testing.
@
text
@xmonad is a tiling window manager for X. Windows are arranged
automatically to tile the screen without gaps or overlap, maximising
screen use. All features of the window manager are accessible from
the keyboard: a mouse is strictly optional. xmonad is written and
extensible in Haskell. Custom layout algorithms, and other extensions,
may be written by the user in config files. Layouts are applied
dynamically, and different layouts may be used on each workspace.
Xinerama is fully supported, allowing windows to be tiled on several
screens.
@


1.2
log
@
Update to 0.4. From Dmitri Alenitchev.
@
text
@@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
Xmonad is a tiling window manager for X. Windows are arranged
d4 1
a4 1
the keyboard: a mouse is strictly optional. Xmonad is written and
d9 1
a9 3
screens. A guiding principle of the design is predictability: users
should know in advance precisely the window arrangement that will
result from any action, leading to a simpler user interface.
@


1.1.1.1
log
@
Xmonad is a tiling window manager for X. Windows are arranged
automatically to tile the screen without gaps or overlap, maximising
screen use. All features of the window manager are accessible from
the keyboard: a mouse is strictly optional. Xmonad is written and
extensible in Haskell. Custom layout algorithms, and other extensions,
may be written by the user in config files. Layouts are applied
dynamically, and different layouts may be used on each workspace.
Xinerama is fully supported, allowing windows to be tiled on several
screens. A guiding principle of the design is predictability: users
should know in advance precisely the window arrangement that will
result from any action, leading to a simpler user interface.

@
text
@@
