head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.60
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.58
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.54
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.56
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.52
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.50
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.48
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.46
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.44
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.42
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.40
	OPENBSD_5_0:1.5.0.38
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.36
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.34
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.32
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.30
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.28
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.26
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.24
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.22
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.20
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.18
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.16
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.14
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.12
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5;
locks; strict;
comment	@# @;


1.5
date	2002.11.23.15.45.19;	author espie;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	2001.04.20.15.07.39;	author espie;	state dead;
branches;
next	1.3;

1.3
date	2001.03.05.02.07.44;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.19.12.59.16;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2000.05.19.19.12.11;	author espie;	state Exp;
branches;
next	;

1.5.4.1
date	2003.04.19.19.38.52;	author brad;	state Exp;
branches;
next	;


desc
@@


1.5
log
@work-around for qt3 bug (xglobe burps when faced with oversized images
otherwise... seems this has to do with plugins initialization order).
@
text
@$OpenBSD$
--- renderer.cpp.orig	Sat Nov 23 16:34:35 2002
+++ renderer.cpp	Sat Nov 23 16:34:49 2002
@@@@ -91,6 +91,8 @@@@ Renderer::Renderer(const QSize &size, co
   mapcloud = NULL;
   track_clouds = NULL;
   
+  map = loadImage(mapfile ? mapfile : "map.bmp");
+  
   renderedImage = new QImage(size, 32);
   if(!renderedImage)
   {
@@@@ -98,8 +100,6 @@@@ Renderer::Renderer(const QSize &size, co
     ::exit(1);
   }
 
-  map = loadImage(mapfile ? mapfile : "map.bmp");
-  
   // fprintf(stderr, "Map size: %dx%d\n", map->width(), map->height());
  
   this->radius = 1000.;
@


1.5.4.1
log
@MFC:
work-around for qt3 bug (xglobe burps when faced with oversized images
otherwise... seems this has to do with plugins initialization order).
@
text
@d1 1
a1 1
$OpenBSD: patch-renderer_cpp,v 1.5 2002/11/23 15:45:19 espie Exp $
@


1.4
log
@0.5p2, all my changes, including QT_XFT support.
@
text
@d1 21
a21 17
$OpenBSD: patch-renderer_cpp,v 1.3 2001/03/05 02:07:44 espie Exp $
--- renderer.cpp.orig	Mon Mar  5 02:56:24 2001
+++ renderer.cpp	Mon Mar  5 02:56:59 2001
@@@@ -1170,8 +1170,13 @@@@ void Renderer::drawLabel()
   labelstring.sprintf("%s, %s %d. %d, %d:%02d %s\n"
                       "View pos %2.2f° %c %2.2f° %c\n"
                       "Sun pos %2.2f° %c %2.2f° %c",
+#if QT_VERSION >= 200
+                      dt.date().dayName(dt.date().dayOfWeek()).latin1(),
+                      dt.date().monthName(dt.date().month()).latin1(),
+#else
                       dt.date().dayName(dt.date().dayOfWeek()),
                       dt.date().monthName(dt.date().month()),
+#endif
                       dt.date().day(), dt.date().year(),
                       dt.time().hour(), dt.time().minute(),
                       tzname[tm->tm_isdst],
@


1.3
log
@Better qt2 support (need to convert QStrings to latin1 for sprintf...)
@
text
@d1 1
a1 1
$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
@


1.2
log
@Incorporate my changes to xglobe, make a temporary 0.5p1 release,
until Thorsten finds time to make a real 0.6 release.
This includes:
- much improved cloud cover code,
- slightly faster rendering,
- fixed stars position,
- label placement to avoid collisions,
- auto-calibration of ambient light for night maps.
@
text
@d1 17
a17 16
$OpenBSD: patch-renderer_cpp,v 1.1 2000/05/19 19:12:11 espie Exp $
--- renderer.cpp.orig	Fri May 19 21:07:11 2000
+++ renderer.cpp	Fri May 19 21:07:24 2000
@@@@ -1562,9 +1562,9 @@@@ void Renderer::drawStars()
   
   for(int i=0; i<numstars; i++)
   {
-    x = rand() % renderedImage->width();
-    y = rand() % renderedImage->height();
-    brightness = 150+ (rand() % 106);
+    x = random() % renderedImage->width();
+    y = random() % renderedImage->height();
+    brightness = 150+ (random() % 106);
     p = (unsigned int *)renderedImage->scanLine(y);
     p += x;
     *p = qRgb(brightness, brightness, brightness);
@


1.1
log
@Use random(), OpenBSD rand() is not suitable for %.
Makes for less funny stars.
@
text
@d1 1
a1 1
$OpenBSD: update-patches,v 1.1 2000/04/19 11:16:27 espie Exp $
@

