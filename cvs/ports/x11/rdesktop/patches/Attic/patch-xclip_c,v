head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.0.10
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.08.07.19.13.12;	author gsoares;	state dead;
branches;
next	1.1;

1.1
date	2011.06.23.15.17.13;	author sebastia;	state Exp;
branches;
next	;


desc
@@


1.2
log
@zap gcc2 patches

OK naddy@@
@
text
@$OpenBSD: patch-xclip_c,v 1.1 2011/06/23 15:17:13 sebastia Exp $

fix build with gcc-2.95

--- xclip.c.orig	Wed Jun 22 16:17:57 2011
+++ xclip.c	Wed Jun 22 16:18:21 2011
@@@@ -158,6 +158,7 @@@@ utf16_lf2crlf(uint8 * data, uint32 * size)
 	uint8 *result;
 	uint16 *inptr, *outptr;
 	RD_BOOL swap_endianess;
+	uint16 uvalue_previous = 0;	/* Kept so we'll avoid translating CR-LF to CR-CR-LF */
 
 	/* Worst case: Every char is LF */
 	result = xmalloc((*size * 2) + 2);
@@@@ -170,7 +171,6 @@@@ utf16_lf2crlf(uint8 * data, uint32 * size)
 	/* Check for a reversed BOM */
 	swap_endianess = (*inptr == 0xfffe);
 
-	uint16 uvalue_previous = 0;	/* Kept so we'll avoid translating CR-LF to CR-CR-LF */
 	while ((uint8 *) inptr < data + *size)
 	{
 		uint16 uvalue = *inptr;
@


1.1
log
@Fix build with gcc-2.95

OK jasper@@, landry@@, gsoares@@
@
text
@d1 1
a1 1
$OpenBSD$
@

