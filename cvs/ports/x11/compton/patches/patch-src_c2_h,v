head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.8
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	sthen_20141027:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2014.10.27.11.21.49;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Y1ZJQVC2yFK3u0u6;

1.1.1.1
date	2014.10.27.11.21.49;	author sthen;	state Exp;
branches;
next	;
commitid	Y1ZJQVC2yFK3u0u6;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

anonymous unions aren't part of c99, but code is compiled with --std=c99
(and uses other c99 features that need this).

--- src/c2.h.orig	Sat Oct 25 22:13:48 2014
+++ src/c2.h	Sat Oct 25 22:14:01 2014
@@@@ -38,13 +38,13 @@@@ typedef struct {
   union {
     c2_b_t *b;
     c2_l_t *l;
-  };
+  } u;
 } c2_ptr_t;
 
 /// Initializer for c2_ptr_t.
 #define C2_PTR_INIT { \
   .isbranch = false, \
-  .l = NULL, \
+  .u.l = NULL, \
 }
 
 const static c2_ptr_t C2_PTR_NULL = C2_PTR_INIT;
@@@@ -233,7 +233,7 @@@@ strcmp_wd(const char *needle, const char *src) {
  */
 static inline bool
 c2_ptr_isempty(const c2_ptr_t p) {
-  return !(p.isbranch ? (bool) p.b: (bool) p.l);
+  return !(p.isbranch ? (bool) p.u.b: (bool) p.u.l);
 }
 
 /**
@@@@ -252,12 +252,12 @@@@ static inline c2_ptr_t
 c2h_comb_tree(c2_b_op_t op, c2_ptr_t p1, c2_ptr_t p2) {
  c2_ptr_t p = {
    .isbranch = true,
-   .b = malloc(sizeof(c2_b_t))
+   .u.b = malloc(sizeof(c2_b_t))
  };
 
- p.b->opr1 = p1;
- p.b->opr2 = p2;
- p.b->op = op;
+ p.u.b->opr1 = p1;
+ p.u.b->opr2 = p2;
+ p.u.b->op = op;
 
  return p;
 }
@


1.1.1.1
log
@import x11/compton, from maintainer Sunil Nimmagadda, ok landry@@

Compton is a lightweight, standalone composite manager, suitable for use
with window managers that do not natively provide compositing functionality.

Compton itself is a fork of xcompmgr-dana, in turn a fork of xcompmgr.

Compton in particular is notable for fixing numerous bugs found in
its predecessors, and as such, is popular due to its reliability and
stability. Numerous additional improvements and configuration options
have also been implemented, including a faster GLX (OpenGL) backend
(disabled by default), default inactive/active window opacity, window
frame transparency, window background blur, window color inversion,
painting rate throttling, VSync, condition-based fine-tune control,
configuration file reading, and D-Bus control.
@
text
@@
