head	1.2;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.66
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.64
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.60
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.62
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.58
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.56
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.54
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.52
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.50
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.48
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.46
	OPENBSD_5_0:1.1.1.1.0.44
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.42
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.40
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.38
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.36
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.34
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.32
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.30
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.28
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.26
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.24
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.22
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.20
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.18
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.16
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.14
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.12
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.10
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.8
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	naddy_20010125:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.04.23.16.14.35;	author espie;	state Exp;
branches;
next	1.1;
commitid	cxP7uzilePgyBAtm;

1.1
date	2001.01.25.17.03.05;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.01.25.17.03.05;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fix really old C, make it build with clang, fix old varargs functions
@
text
@$OpenBSD: patch-xwit_c,v 1.1.1.1 2001/01/25 17:03:05 naddy Exp $
--- xwit.c.orig	Tue Oct 21 03:32:54 1997
+++ xwit.c	Sun Apr 23 18:07:19 2017
@@@@ -30,10 +30,13 @@@@
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
 #include <X11/Xproto.h>
+#include <X11/Xmu/WinUtil.h>
 #include <stdio.h>
+#include <stdlib.h>
 #include <sys/time.h>
 #include "dsimple.h"
 
 /* note: called by dsimple.c code, must be global */
+void
 usage()
 {
@@@@ -127,20 +130,20 @@@@ static void doit();
 /*
  * sleep for given millisecs for those without usleep
  */
-static
+static void
 mssleep(ms)
 int ms;
 {
     struct timeval tv;
     tv.tv_sec = ms/1000;
     tv.tv_usec = (ms%1000)*1000;
-    select(0,(int*)0,(int*)0,(int*)0,&tv);
+    select(0,NULL,NULL,NULL,&tv);
 }
 
 /*
  * find all windows below this and if name matches call doit on it
  */
-static
+static void
 downtree(top)
 Window top;
 {
@@@@ -164,7 +167,7 @@@@ Window top;
 /*
  * [un]set autorepeat for individual keys
  */
-static
+static void
 setrepeat()
 {
     unsigned long value_mask;
@@@@ -186,7 +189,7 @@@@ setrepeat()
  * get window position, compensating for decorations
  * (based on xwininfo.c)
  */
-static
+static void
 getpos(window, xp, yp)
 	Window window;
 	int *xp, *yp;
@@@@ -209,7 +212,7 @@@@ getpos(window, xp, yp)
 /*
  * get window size
  */
-static
+static void
 getsize(window, wp, hp)
 	Window window;
 	int *wp, *hp;
@@@@ -226,7 +229,7 @@@@ getsize(window, wp, hp)
 /*
  * set window position
  */
-static
+static void
 domove(window, x, y, right, bottom)
 	Window window;
 	int x, y;
@@@@ -299,7 +302,7 @@@@ domove(window, x, y, right, bottom)
 /*
  * set window size
  */
-static
+static void
 doresize(window, w, h)
     Window window;
     int w, h;
@@@@ -343,7 +346,7 @@@@ doresize(window, w, h)
 /*
  * set row/column size
  */
-static
+static void
 rcresize(what, window)
     enum functions what;
     Window window;
@@@@ -375,7 +378,7 @@@@ rcresize(what, window)
     XFree(hints);
 }
 
-static
+static void
 loadbitmap(window, file, pmp)
 	Window window;
 	char *file;
@@@@ -389,7 +392,7 @@@@ loadbitmap(window, file, pmp)
 		Fatal_Error("XReadBitmapFile failed");
 }
 
-static
+static void
 setbitmap(window)
 	Window window;
 {
@@@@ -418,7 +421,7 @@@@ setbitmap(window)
 		XSetCloseDownMode(dpy, RetainTemporary);
 	}
 
-	if (ohints = XGetWMHints(dpy, window)) {
+	if ((ohints = XGetWMHints(dpy, window))) {
 		if (ohints->icon_pixmap && hints->icon_pixmap)
 			XFreePixmap(dpy, ohints->icon_pixmap);
 		if (ohints->icon_mask && hints->icon_mask)
@@@@ -429,7 +432,7 @@@@ setbitmap(window)
 	XSetWMHints(dpy, window, hints);
 }
 
-static
+static void
 setwinattr(window)
 	Window window;
 {
@@@@ -709,6 +712,7 @@@@ matchopt(key, nargs, argc, argv)
 	return match;
 }
 
+int
 main(argc, argv)
 	int argc;
 	char **argv;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 24
a26 2
+++ xwit.c	Mon Jan 22 22:21:10 2001
@@@@ -134,7 +134,7 @@@@ int ms;
d35 105
@


1.1.1.1
log
@Import xwit-3.4.
Patch by deraadt@@

xwit ("x window interface tool") is a hodge-podge collection of
simple routines to call some of those X11 functions that don't
already have any utility commands built around them.
@
text
@@
