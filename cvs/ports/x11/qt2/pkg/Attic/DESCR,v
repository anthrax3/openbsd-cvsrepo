head	1.7;
access;
symbols
	OPENBSD_4_0:1.6.0.18
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.16
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.14
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.12
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.10
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_TRACKING_SWITCH:1.4
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	espie:1.1.1.1
	trolltech:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2006.11.20.12.02.29;	author espie;	state dead;
branches;
next	1.6;

1.6
date	2002.04.16.19.28.20;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.03.16.52.48;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.31.00.09.57;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.12.16.21.34;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.23.14.17.40;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.22.23.53.44;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.22.23.53.44;	author espie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@convert to the new MULTI_PACKAGES setup
@
text
@Qt is a toolkit for building a GUI for X in C++. 
There are some user documentation files in ${QT_DOC}, but
the main documentation is in the qt2-html package, 
or on the web (${HOMEPAGE}).

There is also a qt2-examples package, that contains a tutorial and 
simple example programs (source + binaries).


People who want to use qt2 to compile applications outside the ports tree
should note that qt2's installation conforms to OpenBSD habits, not
TrollTech's recommendations.
Accordingly:
- libs are separated from includes.
- moc is installed as ${PREFIX}/bin/moc2, in order not to conflict with
  other qt versions.

Generally, it's just a question of invoking 

env MOC=moc2 configure --with-qt-includes=${PREFIX}/include/X11/qt2 
	--with-qt-libraries=${PREFIX}/lib/qt2

Or to force MOC in your make/gmake invocation:
make MOC=moc2
will override the Makefile contents.

Warning: the qt2 library also appears under ${PREFIX}/lib, but you
*must* make sure your application sees ${PREFIX}/lib/qt2 *first*, because
${PREFIX}/lib may also contain qt3, in which case the linker will pick up
the most recent library.

The qt packages currently do not include mt versions of qt, because of
insufficient testing.
@


1.6
log
@typo, Jedi/Sector One <j@@pureftpd.org>
@
text
@@


1.5
log
@Fix long-standing FAQ, explain to people how to use those packages to
compile their own applications.
@
text
@d20 1
a20 1
env MOC=moc2 configure --with-qt-includes=${PREFIX}/include/x11/qt2 
@


1.4
log
@Flavor gl does no longer exist, since gl is standard in XFree 4.
@
text
@d8 26
@


1.3
log
@Update to qt 2.3.0.
@
text
@a7 4

Available flavor:
gl
	includes limited OpenGL support. Not actually required for kde2.
@


1.2
log
@Don't try to be smart with examples and tutorial, moving those files
around doesn't work, as there are cross-dependencies.

Move LOCALBASE/X11BASE setting to post-patch, as this allows having
complete, independent Makefiles for examples/tutorial.

Package the full tutorial/example along.

Install qt1 to qt2 conversion tools along.

Provide a link to /usr/local/bin/moc2, to ease getting FreeBSD ports.
@
text
@d8 4
@


1.1
log
@Initial revision
@
text
@d1 4
a4 2
Qt is a toolkit for building a GUI for X in C++. The main
documentation is in the qt2-html package, or on the web (${HOMEPAGE}).
d6 2
a7 2
There is also a qt2-examples package, that contains a tutorial and simple
example programs (source + binaries).
@


1.1.1.1
log
@First cut at a qt2 port. 
Probably needs some polish, but it compiles and runs.
@
text
@@
