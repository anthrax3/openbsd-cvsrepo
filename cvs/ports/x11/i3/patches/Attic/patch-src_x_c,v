head	1.18;
access;
symbols
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.2
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2;
locks; strict;
comment	@# @;


1.18
date	2015.03.17.15.39.48;	author dcoppa;	state dead;
branches;
next	1.17;
commitid	WQl7M1uD6B2NjHh4;

1.17
date	2014.08.18.08.46.27;	author dcoppa;	state Exp;
branches;
next	1.16;
commitid	Bi02IjLxhs8ESxGu;

1.16
date	2014.07.11.15.49.58;	author dcoppa;	state Exp;
branches;
next	1.15;
commitid	dpkYaZL7eWFGPiTd;

1.15
date	2014.01.11.16.04.43;	author dcoppa;	state dead;
branches;
next	1.14;

1.14
date	2013.09.02.06.15.34;	author dcoppa;	state Exp;
branches;
next	1.13;

1.13
date	2013.06.02.11.24.06;	author dcoppa;	state dead;
branches;
next	1.12;

1.12
date	2013.05.16.18.42.30;	author dcoppa;	state Exp;
branches;
next	1.11;

1.11
date	2012.12.27.19.58.05;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2012.12.13.12.10.14;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2012.11.13.08.44.02;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2012.11.02.13.59.21;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2012.10.01.08.12.17;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2012.09.21.17.16.14;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.09.11.56.49;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2012.02.21.14.05.39;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2012.01.20.15.53.18;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.12.01.16.00.01;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2011.11.06.20.23.25;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.18
log
@
Update to i3-4.9.1

new dependency on x11/xkbcommon
@
text
@$OpenBSD: patch-src_x_c,v 1.17 2014/08/18 08:46:27 dcoppa Exp $

commit 56c284af8e281d9d5657e55b3edb7f7c673fc747
Author: Tony Crisci <tony@@dubstepdish.com>
Date:   Tue Jun 24 17:27:01 2014 -0400

Bugfix: missed case for decoration rerender

Rerender the decoration when the container requires a pixmap and does
not have one.

commit 1f9057bc4b0b7695589fbba88bee2b33ae47f169
Author: Michael Stapelberg <michael@@stapelberg.de>
Date:   Sat Jun 28 13:04:52 2014 +0200

Revert "Disable render-time pointer warps if asked"

This reverts commit b109b1b20dd51401dc929407453d3acdd8ff5566.

Turns out the change in behavior was unexpected by a number of users, so
let's revert it and make those users that want this behavior configure
it explicitly.

--- src/x.c.orig	Sun Jun 15 19:12:43 2014
+++ src/x.c	Mon Aug 18 10:04:39 2014
@@@@ -659,10 +659,18 @@@@ void x_push_node(Con *con) {
              con, con->window->id, con->ignore_unmap);
     }
 
+    /* The pixmap of a borderless leaf container will not be used except
+     * for the titlebar in a stack or tabs (issue #1013). */
+    bool is_pixmap_needed = (con->border_style != BS_NONE ||
+                             !con_is_leaf(con) ||
+                             con->parent->layout == L_STACKED ||
+                             con->parent->layout == L_TABBED);
+
     bool fake_notify = false;
-    /* Set new position if rect changed (and if height > 0) */
-    if (memcmp(&(state->rect), &rect, sizeof(Rect)) != 0 &&
-        rect.height > 0) {
+    /* Set new position if rect changed (and if height > 0) or if the pixmap
+     * needs to be recreated */
+    if ((is_pixmap_needed && con->pixmap == XCB_NONE) || (memcmp(&(state->rect), &rect, sizeof(Rect)) != 0 &&
+                                                          rect.height > 0)) {
         /* We first create the new pixmap, then render to it, set it as the
          * background and only afterwards change the window size. This reduces
          * flickering. */
@@@@ -673,13 +681,6 @@@@ void x_push_node(Con *con) {
          * (height == 0) or when it is not needed. */
         bool has_rect_changed = (state->rect.width != rect.width || state->rect.height != rect.height);
 
-        /* The pixmap of a borderless leaf container will not be used except
-         * for the titlebar in a stack or tabs (issue #1013). */
-        bool is_pixmap_needed = (con->border_style != BS_NONE ||
-                                 !con_is_leaf(con) ||
-                                 con->parent->layout == L_STACKED ||
-                                 con->parent->layout == L_TABBED);
-
         /* Check if the container has an unneeded pixmap left over from
          * previously having a border or titlebar. */
         if (!is_pixmap_needed && con->pixmap != XCB_NONE) {
@@@@ -687,7 +688,7 @@@@ void x_push_node(Con *con) {
             con->pixmap = XCB_NONE;
         }
 
-        if (has_rect_changed && is_pixmap_needed) {
+        if (is_pixmap_needed && (has_rect_changed || con->pixmap == XCB_NONE)) {
             if (con->pixmap == 0) {
                 con->pixmap = xcb_generate_id(conn);
                 con->pm_gc = xcb_generate_id(conn);
@@@@ -1140,8 +1141,7 @@@@ void x_set_i3_atoms(void) {
  *
  */
 void x_set_warp_to(Rect *rect) {
-    if (!config.disable_focus_follows_mouse &&
-        config.mouse_warping != POINTER_WARPING_NONE)
+    if (config.mouse_warping != POINTER_WARPING_NONE)
         warp_to = rect;
 }
 
@


1.17
log
@
Fixes from upstream:

Bugfix: properly restore workspace containers
(upstream git commit 679a5de8cfb9211afb1a1dd882e53bd672084754)

Bugfix: missed case for decoration rerender
(upstream git commit 56c284af8e281d9d5657e55b3edb7f7c673fc747)

Bugfix: add a sync call to i3bar to confirm reparents before exiting
(upstream git commit 4699c714b33afb1c264f3d19911b880267165b94)

Bugfix: don't set focus in con_set_layout() on invisible workspaces
(upstream git commit fc886315342b3a2292ad0c08394b6bb452663bb1)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_x_c,v 1.16 2014/07/11 15:49:58 dcoppa Exp $
@


1.16
log
@
Update to i3-4.8 plus fixes.

Initial diff by Theo Buehler <theo AT math DOT ethz DOT ch>
@
text
@d1 10
a10 1
$OpenBSD$
d25 47
a71 2
+++ src/x.c	Fri Jul 11 16:48:41 2014
@@@@ -1140,8 +1140,7 @@@@ void x_set_i3_atoms(void) {
@


1.15
log
@Update to i3-4.7
@
text
@d1 1
a1 1
$OpenBSD: patch-src_x_c,v 1.14 2013/09/02 06:15:34 dcoppa Exp $
d3 1
a3 1
commit 103ab83131d30614ea9337e752548a834773bfc6
d5 1
a5 1
Date:   Tue Aug 27 20:21:11 2013 +0200
d7 1
a7 1
Revert "raise fullscreen windows on top of all other X11 windows"
d9 1
a9 1
This reverts commit 0659a0d98ca98fcd134c277c6a61ca3c9a04544e.
d11 3
a13 3
It was a fix for dzen2 setups, but broke several other use cases.
Because dzen2 is not really important since most people use i3bar
nowadays, let's revert this.
d15 3
a17 24
--- src/x.c.orig	Wed Aug  7 20:50:24 2013
+++ src/x.c	Mon Sep  2 07:42:58 2013
@@@@ -36,7 +36,6 @@@@ typedef struct con_state {
     bool mapped;
     bool unmap_now;
     bool child_mapped;
-    bool above_all;
 
     /** The con for which this state is. */
     Con *con;
@@@@ -900,10 +899,6 @@@@ void x_push_changes(Con *con) {
 
             xcb_configure_window(conn, prev->id, mask, values);
         }
-        if (state->above_all) {
-            DLOG("above all: 0x%08x\n", state->id);
-            xcb_configure_window(conn, state->id, XCB_CONFIG_WINDOW_STACK_MODE, (uint32_t[]){ XCB_STACK_MODE_ABOVE });
-        }
         state->initial = false;
     }
 
@@@@ -1029,17 +1024,11 @@@@ void x_push_changes(Con *con) {
  * Raises the specified container in the internal stack of X windows. The
  * next call to x_push_changes() will make the change visible in X11.
a18 4
- * If above_all is true, the X11 window will be raised to the top
- * of the stack. This should only be used for precisely one fullscreen
- * window per output.
- *
d20 6
a25 7
-void x_raise_con(Con *con, bool above_all) {
+void x_raise_con(Con *con) {
     con_state *state;
     state = state_for_frame(con->frame);
     //DLOG("raising in new stack: %p / %s / %s / xid %08x\n", con, con->name, con->window ? con->window->name_json : "", state->id);
-
-    state->above_all = above_all;
a26 2
     CIRCLEQ_REMOVE(&state_head, state, state);
     CIRCLEQ_INSERT_HEAD(&state_head, state, state);
@


1.14
log
@
Revert "raise fullscreen windows on top of all other X11 windows"
It was a fix for dzen2 setups, but broke several other use cases
(upstream git commit 103ab83131d30614ea9337e752548a834773bfc6)

Bugfix: update root geometry on output changes for "fullscreen global"
(upstream git commit 93463bc3932e820bc86383fc4de1a07c82356967)

Bugfix: don't flatten tabbed/stacked containers
(upstream git commit 2481b9dcd73e91969033abb2b6f83aed608aeea1)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.13
log
@Enable SHM logging, now that we have shm_open() and friends.

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_x_c,v 1.12 2013/05/16 18:42:30 dcoppa Exp $
d3 3
a5 1
OpenBSD lacks POSIX shared memory support (shm_open() and friends)
d7 45
a51 11
--- src/x.c.orig	Mon Mar 18 22:43:36 2013
+++ src/x.c	Mon May 13 08:27:23 2013
@@@@ -1064,8 +1064,10 @@@@ void x_set_i3_atoms(void) {
     xcb_change_property(conn, XCB_PROP_MODE_REPLACE, root, A_I3_PID, XCB_ATOM_CARDINAL, 32, 1, &pid);
     xcb_change_property(conn, XCB_PROP_MODE_REPLACE, root, A_I3_CONFIG_PATH, A_UTF8_STRING, 8,
                         strlen(current_configpath), current_configpath);
+#if !defined(__OpenBSD__)
     xcb_change_property(conn, XCB_PROP_MODE_REPLACE, root, A_I3_SHMLOG_PATH, A_UTF8_STRING, 8,
                         strlen(shmlogname), shmlogname);
+#endif
 }
d53 2
a54 1
 /*
@


1.12
log
@Update to i3-4.5.1

ok jasper@@, abieber@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_x_c,v 1.11 2012/12/27 19:58:05 dcoppa Exp $
@


1.11
log
@Fixes, fixes, fixes:

i3-input: restore input focus on exit()
(upstream git commit 5779f573e7316664e4bff9d3ff17a234edc9d337)

Repect AR environment variable
(upstream git commit ef81bd183b579688b9f1a46a41c817b577d0b39e)

Fix scrolling on a tabbed titlebar which contains split cons
(upstream git commit 721fa7bdadac6d7f0c78f8c1eac0e66252ba2dc6)

Bugfix: ignore ConfigureRequests for scratchpad windows
(upstream git commit 36b106a9d39727b06909113e3f11552f2f1b6abe)

Bugfix: handle MapRequests sent between i3 registering as a wm and
handling events
(upstream git commit 625401d1628757a67a2ab4eeaa68be965683889c)

Bugfix: draw right tab border for split containers
(upstream git commit ae605bdd394bdf83a8015ac626b222fd40e35b04)
@
text
@d1 1
a1 4
$OpenBSD: patch-src_x_c,v 1.10 2012/12/13 12:10:14 dcoppa Exp $

Bugfix: draw right tab border for split containers
(upstream git commit ae605bdd394bdf83a8015ac626b222fd40e35b04)
d5 3
a7 20
--- src/x.c.orig	Wed Dec 12 00:08:17 2012
+++ src/x.c	Thu Dec 27 15:19:49 2012
@@@@ -505,7 +505,7 @@@@ void x_draw_decoration(Con *con) {
                 con->deco_rect.width - 2);
         free(title);
 
-        goto copy_pixmaps;
+        goto after_title;
     }
 
     if (win->name == NULL)
@@@@ -533,6 +533,7 @@@@ void x_draw_decoration(Con *con) {
             con->deco_rect.x + 2 + indent_px, con->deco_rect.y + text_offset_y,
             con->deco_rect.width - 2 - indent_px);
 
+after_title:
     /* Since we don’t clip the text at all, it might in some cases be painted
      * on the border pixels on the right side of a window. Therefore, we draw
      * the right border again after rendering the text (and the unconnected
@@@@ -1057,8 +1058,10 @@@@ void x_set_i3_atoms(void) {
@


1.10
log
@Update to i3-4.4
@
text
@d1 4
a4 1
$OpenBSD: patch-src_x_c,v 1.9 2012/11/13 08:44:02 dcoppa Exp $
d9 19
a27 2
+++ src/x.c	Thu Dec 13 09:45:54 2012
@@@@ -1057,8 +1057,10 @@@@ void x_set_i3_atoms(void) {
@


1.9
log
@Bugfix: fix workspace back_and_forth after displaying a scratchpad
window (upstream git commit 81393c93c2810e098966fe4089f3c8ea09f9cbe6)
@
text
@d1 1
a1 13
$OpenBSD: patch-src_x_c,v 1.8 2012/11/02 13:59:21 dcoppa Exp $

From e7a4580c5f5f895df2990dae0f26a8662d58d80f Mon Sep 17 00:00:00 2001
From: Michael Stapelberg <michael@@stapelberg.de>
Date: Mon, 29 Oct 2012 15:41:16 +0000
Subject: Bugfix: force rendering when the parent's orientation changed
Otherwise, the split indicator might not be refreshed even though
it should be.

From a082cf8c65225678af782187e4b6f3ba85a0701a Mon Sep 17 00:00:00 2001
From: Michael Stapelberg <michael@@stapelberg.de>
Date: Fri, 28 Sep 2012 17:46:50 +0000
Subject: Bugfix: Draw h-split indicator at the right position
d5 3
a7 32
--- src/x.c.orig	Wed Sep 19 18:08:09 2012
+++ src/x.c	Fri Nov  2 14:34:47 2012
@@@@ -350,6 +350,7 @@@@ void x_draw_decoration(Con *con) {
     p->con_deco_rect = con->deco_rect;
     p->background = config.client.background;
     p->con_is_leaf = con_is_leaf(con);
+    p->parent_orientation = con_orientation(parent);
 
     if (con->deco_render_params != NULL &&
         (con->window == NULL || !con->window->name_x_changed) &&
@@@@ -444,9 +445,9 @@@@ void x_draw_decoration(Con *con) {
             TAILQ_PREV(con, nodes_head, nodes) == NULL &&
             con->parent->type != CT_FLOATING_CON) {
             xcb_change_gc(conn, con->pm_gc, XCB_GC_FOREGROUND, (uint32_t[]){ p->color->indicator });
-            if (con_orientation(con->parent) == HORIZ)
+            if (p->parent_orientation == HORIZ)
                 xcb_poly_fill_rectangle(conn, con->pixmap, con->pm_gc, 1, (xcb_rectangle_t[]){
-                        { r->width + br.width + br.x, 0, r->width, r->height + br.height } });
+                        { r->width + br.width + br.x, br.y, r->width, r->height + br.height } });
             else
                 xcb_poly_fill_rectangle(conn, con->pixmap, con->pm_gc, 1, (xcb_rectangle_t[]){
                         { br.x, r->height + br.height + br.y, r->width - (2 * br.x), r->height } });
@@@@ -792,7 +793,7 @@@@ static void x_push_node_unmaps(Con *con) {
         }
 
         cookie = xcb_unmap_window(conn, con->frame);
-        DLOG("unmapping container (serial %d)\n", cookie.sequence);
+        DLOG("unmapping container %p / %s (serial %d)\n", con, con->name, cookie.sequence);
         /* we need to increase ignore_unmap for this container (if it
          * contains a window) and for every window "under" this one which
          * contains a window */
@@@@ -1037,8 +1038,10 @@@@ void x_set_i3_atoms(void) {
@


1.8
log
@Bugfix: force rendering when the parent's orientation changed.
Otherwise, the split indicator might not be refreshed even though
it should be.
(upstream git commit e7a4580c5f5f895df2990dae0f26a8662d58d80f)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_x_c,v 1.7 2012/10/01 08:12:17 dcoppa Exp $
a6 1

a9 1

a13 1

@


1.7
log
@
Bugfix: don't crash when dragged floating window close

Bugfix: draw h-split indicator at the right position

Bugfix: Correctly move floating windows to invisible workspaces
cross-output

From upstream git
@
text
@d1 10
a10 1
$OpenBSD: patch-src_x_c,v 1.6 2012/09/21 17:16:14 dcoppa Exp $
d21 12
a32 2
+++ src/x.c	Mon Oct  1 09:44:02 2012
@@@@ -446,7 +446,7 @@@@ void x_draw_decoration(Con *con) {
d34 2
a35 1
             if (con_orientation(con->parent) == HORIZ)
d42 1
a42 1
@@@@ -792,7 +792,7 @@@@ static void x_push_node_unmaps(Con *con) {
d51 1
a51 1
@@@@ -1037,8 +1037,10 @@@@ void x_set_i3_atoms(void) {
@


1.6
log
@Update to i3-4.3

OK jasper@@
@
text
@d1 7
a7 1
$OpenBSD: patch-src_x_c,v 1.5 2012/05/09 11:56:49 dcoppa Exp $
d12 19
a30 1
+++ src/x.c	Thu Sep 20 14:12:10 2012
@


1.5
log
@Update to i3-4.2

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 4
a8 4
--- src/x.c.orig	Wed Apr 25 23:21:25 2012
+++ src/x.c	Wed May  9 12:27:20 2012
@@@@ -1019,8 +1019,10 @@@@ void x_set_i3_atoms(void) {
                         current_socketpath);
@


1.4
log
@Update to i3-4.1.2
@
text
@d1 1
a1 1
$OpenBSD: patch-src_x_c,v 1.3 2012/01/20 15:53:18 dcoppa Exp $
d3 1
a3 3
Bugfix: either use SetInputFocus *or* send WM_TAKE_FOCUS, not both.
This fixes problems with Oracle/OpenJDK JRE 7.0
(upstream git commit 21a2971b2442ab0881cf79553cc6b65bbb44afa7)
d5 11
a15 33
Bugfix: respect WM_HINTS.input for WM_TAKE_FOCUS clients. This fixes
problems with some Qt apps
(upstream git commit 2d14ced024416e2074b57290bf7dade7d08899e5)

--- src/x.c.orig	Sat Dec 24 16:25:08 2011
+++ src/x.c	Fri Jan 20 14:29:56 2012
@@@@ -849,26 +849,34 @@@@ void x_push_changes(Con *con) {
             /* Invalidate focused_id to correctly focus new windows with the same ID */
             focused_id = XCB_NONE;
         } else {
-            DLOG("Updating focus (focused: %p / %s)\n", focused, focused->name);
-            /* We remove XCB_EVENT_MASK_FOCUS_CHANGE from the event mask to get
-             * no focus change events for our own focus changes. We only want
-             * these generated by the clients. */
-            if (focused->window != NULL) {
-                values[0] = CHILD_EVENT_MASK & ~(XCB_EVENT_MASK_FOCUS_CHANGE);
-                xcb_change_window_attributes(conn, focused->window->id, XCB_CW_EVENT_MASK, values);
-            }
-            xcb_set_input_focus(conn, XCB_INPUT_FOCUS_POINTER_ROOT, to_focus, XCB_CURRENT_TIME);
-            if (focused->window != NULL) {
-                values[0] = CHILD_EVENT_MASK;
-                xcb_change_window_attributes(conn, focused->window->id, XCB_CW_EVENT_MASK, values);
-            }
-
+            bool set_focus = true;
             if (focused->window != NULL &&
                 focused->window->needs_take_focus) {
+                DLOG("Updating focus by sending WM_TAKE_FOCUS to window 0x%08x (focused: %p / %s)\n",
+                     to_focus, focused, focused->name);
                 send_take_focus(to_focus);
+                set_focus = !focused->window->doesnt_accept_focus;
+                DLOG("set_focus = %d\n", set_focus);
             }
d17 1
a17 22
-            ewmh_update_active_window(to_focus);
+            if (set_focus) {
+                DLOG("Updating focus (focused: %p / %s)\n", focused, focused->name);
+                /* We remove XCB_EVENT_MASK_FOCUS_CHANGE from the event mask to get
+                 * no focus change events for our own focus changes. We only want
+                 * these generated by the clients. */
+                if (focused->window != NULL) {
+                    values[0] = CHILD_EVENT_MASK & ~(XCB_EVENT_MASK_FOCUS_CHANGE);
+                    xcb_change_window_attributes(conn, focused->window->id, XCB_CW_EVENT_MASK, values);
+                }
+                xcb_set_input_focus(conn, XCB_INPUT_FOCUS_POINTER_ROOT, to_focus, XCB_CURRENT_TIME);
+                if (focused->window != NULL) {
+                    values[0] = CHILD_EVENT_MASK;
+                    xcb_change_window_attributes(conn, focused->window->id, XCB_CW_EVENT_MASK, values);
+                }
+
+                ewmh_update_active_window(to_focus);
+            }
+
             focused_id = to_focus;
         }
     }
@


1.3
log
@Bugfix: respect WM_HINTS.input for WM_TAKE_FOCUS clients. This fixes
problems with some Qt apps
(upstream git commit 2d14ced024416e2074b57290bf7dade7d08899e5)

Bugfix: either use SetInputFocus *or* send WM_TAKE_FOCUS, not both.
This fixes problems with Oracle/OpenJDK JRE 7.0
(upstream git commit 21a2971b2442ab0881cf79553cc6b65bbb44afa7)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Major update to i3-4.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_x_c,v 1.1 2011/11/06 20:23:25 dcoppa Exp $
d3 3
a5 2
bugfix: don't warp the pointer if it already is on the target output
(upstream git commit 755c618cd41815c72d30fd0d3c4770557e952df2)
d7 33
a39 7
--- src/x.c.orig	Sun Aug 28 19:48:13 2011
+++ src/x.c	Fri Nov  4 16:18:18 2011
@@@@ -759,7 +759,12 @@@@ static void x_push_node_unmaps(Con *con) {
  */
 void x_push_changes(Con *con) {
     con_state *state;
+    xcb_query_pointer_cookie_t pointercookie;
d41 15
a55 3
+    if (warp_to) {
+        pointercookie = xcb_query_pointer(conn, root);
+    }
d57 2
a58 14
     DLOG("-- PUSHING WINDOW STACK --\n");
     //DLOG("Disabling EnterNotify\n");
     uint32_t values[1] = { XCB_NONE };
@@@@ -868,7 +873,18 @@@@ void x_push_changes(Con *con) {
     }
 
     if (warp_to) {
-        xcb_warp_pointer_rect(conn, warp_to);
+        xcb_query_pointer_reply_t *pointerreply = xcb_query_pointer_reply(conn, pointercookie, NULL);
+        if (!pointerreply) {
+            ELOG("Could not query pointer position, not warping pointer\n");
+        } else {
+            int mid_x = warp_to->x + (warp_to->width / 2);
+            int mid_y = warp_to->y + (warp_to->height / 2);
d60 2
a61 6
+            Output *current = get_output_containing(pointerreply->root_x, pointerreply->root_y);
+            Output *target = get_output_containing(mid_x, mid_y);
+            if (current != target)
+                xcb_warp_pointer(conn, XCB_NONE, root, 0, 0, 0, 0, mid_x, mid_y);
+        }
         warp_to = NULL;
a62 1
 
@


1.1
log
@Update to i3-4.0.2 (plus patches from upstream git).
i3bar is now part of i3 itself and i3-wsbar is gone.
@
text
@d1 1
a1 1
$OpenBSD$
@

