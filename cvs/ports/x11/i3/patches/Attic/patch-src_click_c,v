head	1.11;
access;
symbols
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.11
date	2016.03.09.09.25.51;	author dcoppa;	state dead;
branches;
next	1.10;
commitid	5e0lb25PYzcoURwg;

1.10
date	2015.12.18.15.53.09;	author dcoppa;	state Exp;
branches;
next	1.9;
commitid	0OqseA58UoyREWdQ;

1.9
date	2013.05.16.18.42.30;	author dcoppa;	state dead;
branches;
next	1.8;

1.8
date	2012.12.27.19.58.05;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2012.05.09.11.56.49;	author dcoppa;	state dead;
branches;
next	1.6;

1.6
date	2012.02.21.14.05.39;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2011.12.27.09.05.17;	author dcoppa;	state dead;
branches;
next	1.4;

1.4
date	2011.12.01.16.00.01;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.06.20.23.25;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.14.12.55.18;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2011.01.05.12.45.04;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.11
log
@
Update to i3-4.12
Added halex@@'s window hints fix
Fixed trailing whitespace in pkg/DESCR (spotted by Josh Grosse)

Tested by tb@@ and Josh Grosse
OK tb@@
@
text
@$OpenBSD: patch-src_click_c,v 1.10 2015/12/18 15:53:09 dcoppa Exp $

Bugfix: ignore XKB group bits in floating_modifier

--- src/click.c.orig	Wed Sep 30 08:55:10 2015
+++ src/click.c	Fri Dec 18 13:58:58 2015
@@@@ -356,7 +356,7 @@@@ int handle_button_press(xcb_button_press_event_t *even
 
     last_timestamp = event->time;
 
-    const uint32_t mod = config.floating_modifier;
+    const uint32_t mod = (config.floating_modifier & 0xFFFF);
     const bool mod_pressed = (mod != 0 && (event->state & mod) == mod);
     DLOG("floating_mod = %d, detail = %d\n", mod_pressed, event->detail);
     if ((con = con_by_window_id(event->event)))
@


1.10
log
@
Merge all the fixes from the git stable branch of i3
Regen WANTLIB while here
@
text
@d1 1
a1 1
$OpenBSD$
@


1.9
log
@Update to i3-4.5.1

ok jasper@@, abieber@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_click_c,v 1.8 2012/12/27 19:58:05 dcoppa Exp $
d3 1
a3 2
Fix scrolling on a tabbed titlebar which contains split cons
(upstream git commit 721fa7bdadac6d7f0c78f8c1eac0e66252ba2dc6)
d5 11
a15 20
--- src/click.c.orig	Wed Dec 12 00:08:17 2012
+++ src/click.c	Thu Dec 27 15:26:45 2012
@@@@ -211,9 +211,16 @@@@ static int route_click(Con *con, xcb_button_press_even
          event->detail == XCB_BUTTON_INDEX_5)) {
         DLOG("Scrolling on a window decoration\n");
         orientation_t orientation = (con->parent->layout == L_STACKED ? VERT : HORIZ);
+        /* Focus the currently focused container on the same level that the
+         * user scrolled on. e.g. the tabbed decoration contains
+         * "urxvt | i3: V[xterm geeqie] | firefox",
+         * focus is on the xterm, but the user scrolled on urxvt.
+         * The splitv container will be focused. */
+        Con *focused = con->parent;
+        focused = TAILQ_FIRST(&(focused->focus_head));
+        con_focus(focused);
         /* To prevent scrolling from going outside the container (see ticket
          * #557), we first check if scrolling is possible at all. */
-        Con *focused = con_descend_focused(con->parent);
         bool scroll_prev_possible = (TAILQ_PREV(focused, nodes_head, nodes) != NULL);
         bool scroll_next_possible = (TAILQ_NEXT(focused, nodes) != NULL);
         if (event->detail == XCB_BUTTON_INDEX_4 && scroll_prev_possible)
@


1.8
log
@Fixes, fixes, fixes:

i3-input: restore input focus on exit()
(upstream git commit 5779f573e7316664e4bff9d3ff17a234edc9d337)

Repect AR environment variable
(upstream git commit ef81bd183b579688b9f1a46a41c817b577d0b39e)

Fix scrolling on a tabbed titlebar which contains split cons
(upstream git commit 721fa7bdadac6d7f0c78f8c1eac0e66252ba2dc6)

Bugfix: ignore ConfigureRequests for scratchpad windows
(upstream git commit 36b106a9d39727b06909113e3f11552f2f1b6abe)

Bugfix: handle MapRequests sent between i3 registering as a wm and
handling events
(upstream git commit 625401d1628757a67a2ab4eeaa68be965683889c)

Bugfix: draw right tab border for split containers
(upstream git commit ae605bdd394bdf83a8015ac626b222fd40e35b04)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.7
log
@Update to i3-4.2

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_click_c,v 1.6 2012/02/21 14:05:39 dcoppa Exp $
d3 2
a4 2
Bugfix: highlight i3bar workspace when changing output with mouse
(upstream git commit 51e6e489927f93e265f3258b309d2e23d07b65ad)
d6 20
a25 23
--- src/click.c.orig	Tue Feb 21 14:13:05 2012
+++ src/click.c	Tue Feb 21 14:13:48 2012
@@@@ -199,12 +199,18 @@@@ static int route_click(Con *con, xcb_button_press_even
         goto done;
     }
 
-    /* 2: focus this con */
+    /* 2: focus this con. If the workspace is on another output we need to
+     * do a workspace_show in order for i3bar (and others) to notice the
+     * change in workspace. */
+    Con *ws = con_get_workspace(con);
+    Con *focused_workspace = con_get_workspace(focused);
+
+    if (ws != focused_workspace)
+        workspace_show(ws);
     con_focus(con);
 
     /* 3: For floating containers, we also want to raise them on click.
      * We will skip handling events on floating cons in fullscreen mode */
-    Con *ws = con_get_workspace(con);
     Con *fs = (ws ? con_get_fullscreen_con(ws, CF_OUTPUT) : NULL);
     if (floatingcon != NULL && fs == NULL) {
         floating_raise_con(floatingcon);
@


1.6
log
@Update to i3-4.1.2
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@Bugfixing update to i3-4.1.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_click_c,v 1.4 2011/12/01 16:00:01 dcoppa Exp $
d3 2
a4 2
Bugfix: fix resizing for v-split containers in h-split containers
(upstream git commit 59283cce93dc1e468e3ad714a2f561aba8575180)
d6 4
a9 25
--- src/click.c.orig	Fri Nov 11 23:41:20 2011
+++ src/click.c	Thu Dec  1 14:01:12 2011
@@@@ -26,7 +26,7 @@@@ typedef enum { CLICK_BORDER = 0, CLICK_DECORATION = 1,
  *
  */
 static bool tiling_resize_for_border(Con *con, border_t border, const xcb_button_press_event_t *event) {
-    DLOG("border = %d\n", border);
+    DLOG("border = %d, con = %p\n", border, con);
     char way = (border == BORDER_TOP || border == BORDER_LEFT ? 'p' : 'n');
     orientation_t orientation = (border == BORDER_TOP || border == BORDER_BOTTOM ? VERT : HORIZ);
 
@@@@ -38,6 +38,7 @@@@ static bool tiling_resize_for_border(Con *con, border_
            resize_con->parent->orientation != orientation)
         resize_con = resize_con->parent;
 
+    DLOG("resize_con = %p\n", resize_con);
     if (resize_con->type != CT_WORKSPACE &&
         resize_con->type != CT_FLOATING_CON &&
         resize_con->parent->orientation == orientation) {
@@@@ -51,6 +52,8 @@@@ static bool tiling_resize_for_border(Con *con, border_
             first = second;
             second = tmp;
         }
+        DLOG("first = %p, second = %p, resize_con = %p\n",
+                first, second, resize_con);
d12 10
a21 10
     if (first == NULL || second == NULL) {
@@@@ -130,13 +133,14 @@@@ static bool tiling_resize(Con *con, const xcb_button_p
         /* Since the container might either be the child *or* already a split
          * container (in the case of a nested split container), we need to make
          * sure that we are dealing with the split container here. */
-        if (con_is_leaf(con) && con->parent->type == CT_CON)
-            con = con->parent;
+        Con *check_con = con;
+        if (con_is_leaf(check_con) && check_con->parent->type == CT_CON)
+            check_con = check_con->parent;
d23 6
a28 11
-        if ((con->layout == L_STACKED ||
-             con->layout == L_TABBED ||
-             con->orientation == HORIZ) &&
-            con_num_children(con) > 1) {
+        if ((check_con->layout == L_STACKED ||
+             check_con->layout == L_TABBED ||
+             check_con->orientation == HORIZ) &&
+            con_num_children(check_con) > 1) {
             DLOG("Not handling this resize, this container has > 1 child.\n");
             return false;
         }
@


1.4
log
@Major update to i3-4.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_click_c,v 1.3 2011/11/06 20:23:25 dcoppa Exp $
@


1.3
log
@Update to i3-4.0.2 (plus patches from upstream git).
i3bar is now part of i3 itself and i3-wsbar is gone.
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 2
bugfix: skip dragging of floating containers in fullscreen mode
(upstream git commit 0c367f9e4c67b77420b98a93b5d0e7ab08e695af)
d6 10
a15 4
--- src/click.c.orig	Sun Aug 28 19:48:13 2011
+++ src/click.c	Fri Nov  4 16:12:53 2011
@@@@ -179,7 +179,9 @@@@ static int route_click(Con *con, xcb_button_press_even
     con_focus(con);
d17 3
a19 6
     /* 3: for floating containers, we also want to raise them on click */
-    if (floatingcon != NULL) {
+    Con *ws = con_get_workspace(con);
+    Con *fs = (ws ? con_get_fullscreen_con(ws, CF_OUTPUT) : NULL);
+    if (floatingcon != NULL && fs == NULL) {
         floating_raise_con(floatingcon);
d21 34
a54 1
         /* 4: floating_modifier plus left mouse button drags */
@


1.2
log
@Update to i3-3.e-bf2 (aka i3-3.5.2)
@
text
@d1 9
a9 5
$OpenBSD: patch-src_click_c,v 1.1 2011/01/05 12:45:04 dcoppa Exp $
--- src/click.c.orig	Wed Jan  5 13:08:30 2011
+++ src/click.c	Wed Jan  5 13:09:07 2011
@@@@ -309,6 +309,8 @@@@ int handle_button_press(void *ignored, xcb_connection_
                         return 1;
d11 6
a16 5
                 DLOG("Could not handle this button press\n");
+                xcb_allow_events(conn, XCB_ALLOW_REPLAY_POINTER, event->time);
+                xcb_flush(conn);
                 return 1;
         }
d18 1
@


1.1
log
@Various bugfixes for fullscreen windows, xcb, xinerama, and configfile
parsing.
All from upstream git.
@
text
@d1 1
a1 1
$OpenBSD$
@

