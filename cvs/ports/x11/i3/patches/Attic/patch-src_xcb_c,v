head	1.4;
access;
symbols
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.12.01.16.00.01;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2011.11.06.20.23.25;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.14.12.55.18;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2011.01.05.12.45.04;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Major update to i3-4.1
@
text
@$OpenBSD: patch-src_xcb_c,v 1.3 2011/11/06 20:23:25 dcoppa Exp $

bugfix: send the correct X11 border_width in faked ConfigureNotifys
(upstream git commit deab3ac33864875476476093b5e835dfcce31497)

--- src/xcb.c.orig	Sun Aug 28 19:48:13 2011
+++ src/xcb.c	Mon Oct 31 12:44:02 2011
@@@@ -168,7 +168,7 @@@@ void xcb_draw_rect(xcb_connection_t *conn, xcb_drawabl
  * The truth is, however, that we will manage them.
  *
  */
-void fake_configure_notify(xcb_connection_t *conn, Rect r, xcb_window_t window) {
+void fake_configure_notify(xcb_connection_t *conn, Rect r, xcb_window_t window, int border_width) {
     /* Every X11 event is 32 bytes long. Therefore, XCB will copy 32 bytes.
      * In order to properly initialize these bytes, we allocate 32 bytes even
      * though we only need less for an xcb_configure_notify_event_t */
@@@@ -184,7 +184,7 @@@@ void fake_configure_notify(xcb_connection_t *conn, Rec
     generated_event->width = r.width;
     generated_event->height = r.height;
 
-    generated_event->border_width = 0;
+    generated_event->border_width = border_width;
     generated_event->above_sibling = XCB_NONE;
     generated_event->override_redirect = false;
 
@@@@ -211,7 +211,7 @@@@ void fake_absolute_configure_notify(Con *con) {
 
     DLOG("fake rect = (%d, %d, %d, %d)\n", absolute.x, absolute.y, absolute.width, absolute.height);
 
-    fake_configure_notify(conn, absolute, con->window->id);
+    fake_configure_notify(conn, absolute, con->window->id, con->border_width);
 }
 
 /*
@


1.3
log
@Update to i3-4.0.2 (plus patches from upstream git).
i3bar is now part of i3 itself and i3-wsbar is gone.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to i3-3.e-bf2 (aka i3-3.5.2)
@
text
@d1 10
a10 4
$OpenBSD: patch-src_xcb_c,v 1.1 2011/01/05 12:45:04 dcoppa Exp $
--- src/xcb.c.orig	Wed Jan  5 13:03:28 2011
+++ src/xcb.c	Wed Jan  5 13:04:56 2011
@@@@ -92,7 +92,6 @@@@ uint32_t get_colorpixel(xcb_connection_t *conn, char *
d12 8
a19 5
 xcb_window_t create_window(xcb_connection_t *conn, Rect dims, uint16_t window_class, int cursor,
                            bool map, uint32_t mask, uint32_t *values) {
-        xcb_window_t root = xcb_setup_roots_iterator(xcb_get_setup(conn)).data->root;
         xcb_window_t result = xcb_generate_id(conn);
         xcb_cursor_t cursor_id = xcb_generate_id(conn);
d21 14
@


1.1
log
@Various bugfixes for fullscreen windows, xcb, xinerama, and configfile
parsing.
All from upstream git.
@
text
@d1 1
a1 1
$OpenBSD$
@

