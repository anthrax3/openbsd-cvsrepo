head	1.3;
access;
symbols
	OPENBSD_6_0:1.2.0.12
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.8
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.11.13.20.46.23;	author dcoppa;	state dead;
branches;
next	1.2;
commitid	YWcsP0rJp2QqdVhK;

1.2
date	2014.01.11.16.04.43;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2013.06.02.11.24.06;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
Update to i3-4.13

OK tb@@, jasper@@
@
text
@$OpenBSD: patch-man_i3-dump-log_1,v 1.2 2014/01/11 16:04:43 dcoppa Exp $
--- man/i3-dump-log.1.orig	Sun Dec 22 21:12:52 2013
+++ man/i3-dump-log.1	Fri Jan 10 17:03:23 2014
@@@@ -31,14 +31,12 @@@@
 i3-dump-log \- dumps the i3 SHM log
 .SH "SYNOPSIS"
 .sp
-i3\-dump\-log [\-s <socketpath>] [\-f]
+i3\-dump\-log [\-hVv]
 .SH "DESCRIPTION"
 .sp
 Debug versions of i3 automatically use 1% of your RAM (but 25 MiB max) to store full debug log output\&. This is extremely helpful for bugreports and figuring out what is going on, without permanently logging to a file\&.
 .sp
 With i3\-dump\-log, you can dump the SHM log to stdout\&.
-.sp
-The \-f flag works like tail \-f, i\&.e\&. the process does not terminate after dumping the log, but prints new lines as they appear\&.
 .SH "EXAMPLE"
 .sp
 i3\-dump\-log | gzip \-9 > /tmp/i3\-log\&.gz
@


1.2
log
@Update to i3-4.7
@
text
@d1 1
a1 1
$OpenBSD: patch-man_i3-dump-log_1,v 1.1 2013/06/02 11:24:06 dcoppa Exp $
@


1.1
log
@Enable SHM logging, now that we have shm_open() and friends.

ok jasper@@
@
text
@d1 4
a4 4
$OpenBSD$
--- man/i3-dump-log.1.orig	Thu May 23 13:55:30 2013
+++ man/i3-dump-log.1	Thu May 23 13:56:12 2013
@@@@ -31,7 +31,7 @@@@
d8 1
a8 1
-i3\-dump\-log [\-s <socketpath>]
d13 7
@

