head	1.18;
access;
symbols
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_7:1.12.0.4
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.2
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.18
date	2016.03.09.09.25.51;	author dcoppa;	state dead;
branches;
next	1.17;
commitid	5e0lb25PYzcoURwg;

1.17
date	2016.01.26.09.42.35;	author dcoppa;	state Exp;
branches;
next	1.16;
commitid	mkjgRfx7SCNrsHTR;

1.16
date	2016.01.18.10.04.29;	author tb;	state Exp;
branches;
next	1.15;
commitid	DwS9YwHVqZTIrLW3;

1.15
date	2015.12.21.10.16.03;	author tb;	state Exp;
branches;
next	1.14;
commitid	XDQAgjfWDUj16XBG;

1.14
date	2015.12.18.15.53.09;	author dcoppa;	state Exp;
branches;
next	1.13;
commitid	0OqseA58UoyREWdQ;

1.13
date	2015.03.17.15.39.48;	author dcoppa;	state dead;
branches;
next	1.12;
commitid	WQl7M1uD6B2NjHh4;

1.12
date	2014.07.11.15.49.58;	author dcoppa;	state Exp;
branches;
next	1.11;
commitid	dpkYaZL7eWFGPiTd;

1.11
date	2014.01.22.13.48.38;	author dcoppa;	state dead;
branches;
next	1.10;

1.10
date	2013.08.13.10.01.57;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2013.06.02.11.24.06;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2013.05.16.18.42.30;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2012.12.27.19.58.05;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2012.12.13.12.10.14;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2012.09.21.17.16.14;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.28.09.33.06;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2012.05.09.11.56.49;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.21.14.05.39;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2012.01.25.10.29.30;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.18
log
@
Update to i3-4.12
Added halex@@'s window hints fix
Fixed trailing whitespace in pkg/DESCR (spotted by Josh Grosse)

Tested by tb@@ and Josh Grosse
OK tb@@
@
text
@$OpenBSD: patch-src_main_c,v 1.17 2016/01/26 09:42:35 dcoppa Exp $

Bugfix: add keymap fall back (_XKB_RULES_NAMES, then defaults)

commit a1d1f456a1fbf44bfa5c6a9d041023ac498b0c46
Author: Theo Buehler <theo@@math.ethz.ch>
Date:   Thu Jan 14 10:06:34 2016 +0100

Add pledge(2) support for OpenBSD

pledges for i3:
"stdio rpath unix" for talking to the i3 socket usually in /tmp
"proc exec" for executing programs
"wpath cpath" are needed for the restart-in-place functionality

To make this work, @@semarie pointed out that it is sufficient to ensure
that we get physical_mem_bytes only once, namely in init_logging().

pledges for i3-msg:
"stdio rpath unix" are needed for talking to the i3-socket

pledges for i3-nagbar
"rpath getpw" to find the home directory
"wpath cpath" to write the script
"proc exec" to execute the script
"unix" for talking to the i3 socket

--- src/main.c.orig	Wed Sep 30 08:55:10 2015
+++ src/main.c	Sun Jan 17 17:55:53 2016
@@@@ -87,6 +87,7 @@@@ struct ws_assignments_head ws_assignments = TAILQ_HEAD
 
 /* We hope that those are supported and set them to true */
 bool xcursor_supported = true;
+bool xkb_supported = true;
 
 /*
  * This callback is only a dummy, see xcb_prepare_cb and xcb_check_cb.
@@@@ -543,6 +544,7 @@@@ int main(int argc, char *argv[]) {
 
     const xcb_query_extension_reply_t *extreply;
     extreply = xcb_get_extension_data(conn, &xcb_xkb_id);
+    xkb_supported = extreply->present;
     if (!extreply->present) {
         DLOG("xkb is not present on this server\n");
     } else {
@@@@ -784,6 +786,11 @@@@ int main(int argc, char *argv[]) {
         xcb_free_gc(conn, gc);
         xcb_free_pixmap(conn, pixmap);
     }
+
+#if defined(__OpenBSD__)
+    if (pledge("stdio rpath wpath cpath proc exec unix", NULL) == -1)
+        err(EXIT_FAILURE, "pledge");
+#endif
 
     struct sigaction action;
 
@


1.17
log
@
Sync with upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.16 2016/01/18 10:04:29 tb Exp $
@


1.16
log
@Backport semarie@@'s improvement of the pledge patch which is now
upstream.  i3 is now pledged unconditionally and the shmlog can
again be enabled at runtime.

ok dcoppa@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.15 2015/12/21 10:16:03 tb Exp $
d5 3
a7 1
add pledge:
d9 5
a13 1
"stdio rpath unix" for talking to the i3 socket in /tmp
d15 12
a26 1
"proc exec" for executing programs
@


1.15
log
@add pledge support to three constituents of i3 for wider testing:
i3 itself, i3-msg and i3-nagbar.  Unfortunately, i3bar's design
is incompatible with pledge.

Tested by David Coppa (maintainer), Ralf Horstmann and myself.
Thanks for the great feedback!

ok dcoppa@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.14 2015/12/18 15:53:09 dcoppa Exp $
d12 1
a12 1
+++ src/main.c	Sun Dec 20 14:58:54 2015
d29 1
a29 1
@@@@ -784,6 +786,13 @@@@ int main(int argc, char *argv[]) {
d35 2
a36 4
+    /* can't use pledge if shm* calls are used */
+    if (shmlog_size == 0)
+        if (pledge("stdio rpath wpath cpath proc exec unix", NULL) == -1)
+            err(EXIT_FAILURE, "pledge");
@


1.14
log
@
Merge all the fixes from the git stable branch of i3
Regen WANTLIB while here
@
text
@d1 1
a1 1
$OpenBSD$
d5 6
d12 1
a12 1
+++ src/main.c	Fri Dec 18 13:58:58 2015
d29 14
@


1.13
log
@
Update to i3-4.9.1

new dependency on x11/xkbcommon
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.12 2014/07/11 15:49:58 dcoppa Exp $
d3 1
a3 3
commit 5c30c6ca80e3694bbde5ba46c5a297f104d818dc
Author: Michael Stapelberg <michael@@stapelberg.de>
Date:   Tue Jun 24 09:56:31 2014 +0200
d5 7
a11 9
add log messages for the detected DPI

Currently, the DPI is only logged when pango fonts are used, which is
often not the case when people report problems with the DPI detection.

--- src/main.c.orig	Sun Jun 15 19:12:43 2014
+++ src/main.c	Fri Jul 11 16:37:49 2014
@@@@ -558,6 +558,10 @@@@ int main(int argc, char *argv[]) {
     colormap = root_screen->default_colormap;
d13 3
a15 5
     DLOG("root_depth = %d, visual_id = 0x%08x.\n", root_depth, visual_id);
+    DLOG("root_screen->height_in_pixels = %d, root_screen->height_in_millimeters = %d, dpi = %d\n",
+         root_screen->height_in_pixels, root_screen->height_in_millimeters,
+         (int)((double)root_screen->height_in_pixels * 25.4 / (double)root_screen->height_in_millimeters));
+    DLOG("One logical pixel corresponds to %d physical pixels on this display.\n", logical_px(1));
d17 6
a22 2
     xcb_get_geometry_cookie_t gcookie = xcb_get_geometry(conn, root);
     xcb_query_pointer_cookie_t pointercookie = xcb_query_pointer(conn, root);
@


1.12
log
@
Update to i3-4.8 plus fixes.

Initial diff by Theo Buehler <theo AT math DOT ethz DOT ch>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.11
log
@Bugfix update to i3-4.7.1
@
text
@d1 15
a15 6
$OpenBSD: patch-src_main_c,v 1.10 2013/08/13 10:01:57 dcoppa Exp $
--- src/main.c.orig	Wed Aug  7 20:50:24 2013
+++ src/main.c	Mon Aug 12 15:27:40 2013
@@@@ -294,8 +294,7 @@@@ int main(int argc, char *argv[]) {
      * (file) logging. */
     init_logging();
d17 5
a21 5
-    /* On release builds, disable SHM logging by default. */
-    shmlog_size = (is_debug_build() ? default_shmlog_size : 0);
+    shmlog_size = default_shmlog_size;
 
     start_argv = argv;
d23 2
@


1.10
log
@Update to i3-4.6

ok tobiasu@@, abieber@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.9 2013/06/02 11:24:06 dcoppa Exp $
@


1.9
log
@Enable SHM logging, now that we have shm_open() and friends.

ok jasper@@
@
text
@d1 4
a4 4
$OpenBSD: patch-src_main_c,v 1.8 2013/05/16 18:42:30 dcoppa Exp $
--- src/main.c.orig	Mon Mar 18 22:43:36 2013
+++ src/main.c	Thu May 23 13:09:14 2013
@@@@ -290,8 +290,7 @@@@ int main(int argc, char *argv[]) {
d8 3
a10 3
-    /* On non-release builds, disable SHM logging by default. */
-    shmlog_size = (is_debug_build() ? 25 * 1024 * 1024 : 0);
+    shmlog_size = (25 * 1024 * 1024);
@


1.8
log
@Update to i3-4.5.1

ok jasper@@, abieber@@
@
text
@d1 1
a1 4
$OpenBSD: patch-src_main_c,v 1.7 2012/12/27 19:58:05 dcoppa Exp $

OpenBSD lacks POSIX shared memory support (shm_open() and friends)

d3 2
a4 39
+++ src/main.c	Mon May 13 08:27:23 2013
@@@@ -219,11 +219,13 @@@@ static void i3_exit(void) {
     ev_loop_destroy(main_loop);
 #endif
 
+#if !defined(__OpenBSD__)
     if (*shmlogname != '\0') {
         fprintf(stderr, "Closing SHM log \"%s\"\n", shmlogname);
         fflush(stderr);
         shm_unlink(shmlogname);
     }
+#endif
 }
 
 /*
@@@@ -233,9 +235,11 @@@@ static void i3_exit(void) {
  *
  */
 static void handle_signal(int sig, siginfo_t *info, void *data) {
+#if !defined(__OpenBSD__)
     if (*shmlogname != '\0') {
         shm_unlink(shmlogname);
     }
+#endif
     raise(sig);
 }
 
@@@@ -263,8 +267,10 @@@@ int main(int argc, char *argv[]) {
         {"force-xinerama", no_argument, 0, 0},
         {"force_xinerama", no_argument, 0, 0},
         {"disable-signalhandler", no_argument, 0, 0},
+#if !defined(__OpenBSD__)
         {"shmlog-size", required_argument, 0, 0},
         {"shmlog_size", required_argument, 0, 0},
+#endif
         {"get-socketpath", no_argument, 0, 0},
         {"get_socketpath", no_argument, 0, 0},
         {"fake_outputs", required_argument, 0, 0},
@@@@ -290,8 +296,10 @@@@ int main(int argc, char *argv[]) {
d8 3
a10 4
+#if !defined(__OpenBSD__)
     /* On non-release builds, disable SHM logging by default. */
     shmlog_size = (is_debug_build() ? 25 * 1024 * 1024 : 0);
+#endif
a13 41
@@@@ -355,6 +363,7 @@@@ int main(int argc, char *argv[]) {
                     }
 
                     exit(EXIT_FAILURE);
+#if !defined(__OpenBSD__)
                 } else if (strcmp(long_options[option_index].name, "shmlog-size") == 0 ||
                            strcmp(long_options[option_index].name, "shmlog_size") == 0) {
                     shmlog_size = atoi(optarg);
@@@@ -363,6 +372,7 @@@@ int main(int argc, char *argv[]) {
                     init_logging();
                     LOG("Limiting SHM log size to %d bytes\n", shmlog_size);
                     break;
+#endif
                 } else if (strcmp(long_options[option_index].name, "restart") == 0) {
                     FREE(layout_path);
                     layout_path = sstrdup(optarg);
@@@@ -398,11 +408,13 @@@@ int main(int argc, char *argv[]) {
                 fprintf(stderr, "\t--get-socketpath\n"
                                 "\tRetrieve the i3 IPC socket path from X11, print it, then exit.\n");
                 fprintf(stderr, "\n");
+#if !defined(__OpenBSD__)
                 fprintf(stderr, "\t--shmlog-size <limit>\n"
                                 "\tLimits the size of the i3 SHM log to <limit> bytes. Setting this\n"
                                 "\tto 0 disables SHM logging entirely.\n"
                                 "\tThe default is %d bytes.\n", shmlog_size);
                 fprintf(stderr, "\n");
+#endif
                 fprintf(stderr, "If you pass plain text arguments, i3 will interpret them as a command\n"
                                 "to send to a currently running i3 (like i3-msg). This allows you to\n"
                                 "use nice and logical commands, such as:\n"
@@@@ -474,8 +486,10 @@@@ int main(int argc, char *argv[]) {
         return 0;
     }
 
+#if !defined(__OpenBSD__)
     /* Enable logging to handle the case when the user did not specify --shmlog-size */
     init_logging();
+#endif
 
     /* Try to enable core dumps by default when running a debug build */
     if (is_debug_build()) {
@


1.7
log
@Fixes, fixes, fixes:

i3-input: restore input focus on exit()
(upstream git commit 5779f573e7316664e4bff9d3ff17a234edc9d337)

Repect AR environment variable
(upstream git commit ef81bd183b579688b9f1a46a41c817b577d0b39e)

Fix scrolling on a tabbed titlebar which contains split cons
(upstream git commit 721fa7bdadac6d7f0c78f8c1eac0e66252ba2dc6)

Bugfix: ignore ConfigureRequests for scratchpad windows
(upstream git commit 36b106a9d39727b06909113e3f11552f2f1b6abe)

Bugfix: handle MapRequests sent between i3 registering as a wm and
handling events
(upstream git commit 625401d1628757a67a2ab4eeaa68be965683889c)

Bugfix: draw right tab border for split containers
(upstream git commit ae605bdd394bdf83a8015ac626b222fd40e35b04)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.6 2012/12/13 12:10:14 dcoppa Exp $
d5 2
a6 6
Bugfix: handle MapRequests sent between i3 registering as a wm and
handling events
(upstream git commit 625401d1628757a67a2ab4eeaa68be965683889c)

--- src/main.c.orig	Wed Dec 12 00:08:17 2012
+++ src/main.c	Thu Dec 27 19:02:25 2012
d71 1
a71 1
@@@@ -399,11 +409,13 @@@@ int main(int argc, char *argv[]) {
d85 1
a85 1
@@@@ -473,8 +485,10 @@@@ int main(int argc, char *argv[]) {
a95 21
@@@@ -777,6 +791,20 @@@@ int main(int argc, char *argv[]) {
         xcb_aux_sync(conn);
         xcb_generic_event_t *event;
         while ((event = xcb_poll_for_event(conn)) != NULL) {
+            if (event->response_type == 0) {
+                free(event);
+                continue;
+            }
+
+            /* Strip off the highest bit (set if the event is generated) */
+            int type = (event->response_type & 0x7F);
+
+            /* We still need to handle MapRequests which are sent in the
+             * timespan starting from when we register as a window manager and
+             * this piece of code which drops events. */
+            if (type == XCB_MAP_REQUEST)
+                handle_event(type, event);
+
             free(event);
         }
         manage_existing_windows(root);
@


1.6
log
@Update to i3-4.4
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.5 2012/09/21 17:16:14 dcoppa Exp $
d5 4
d10 1
a10 1
+++ src/main.c	Thu Dec 13 10:26:26 2012
d100 21
@


1.5
log
@Update to i3-4.3

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.4 2012/06/28 09:33:06 dcoppa Exp $
d5 2
a6 2
--- src/main.c.orig	Wed Sep 19 18:08:09 2012
+++ src/main.c	Thu Sep 20 11:56:52 2012
d21 2
a22 1
@@@@ -234,10 +236,12 @@@@ static void i3_exit(void) {
a24 1
     fprintf(stderr, "Received signal %d, terminating\n", sig);
a26 1
         fprintf(stderr, "Closing SHM log \"%s\"\n", shmlogname);
a29 1
     fflush(stderr);
d32 2
a33 1
@@@@ -266,8 +270,10 @@@@ int main(int argc, char *argv[]) {
d44 1
a44 1
@@@@ -292,8 +298,10 @@@@ int main(int argc, char *argv[]) {
d55 1
a55 1
@@@@ -357,6 +365,7 @@@@ int main(int argc, char *argv[]) {
d63 1
a63 1
@@@@ -365,6 +374,7 @@@@ int main(int argc, char *argv[]) {
d71 1
a71 1
@@@@ -397,11 +407,13 @@@@ int main(int argc, char *argv[]) {
d85 1
a85 1
@@@@ -471,8 +483,10 @@@@ int main(int argc, char *argv[]) {
@


1.4
log
@
Parser fix: reorder v/h/vertical/horizontal
This eliminates an error message upon split horizontal which did
not occur in older i3 versions.
(upstream git commit f0b56c5e98a152cb65e8d1935a83707b5d87e30d)

Bugfix: fix reload crashes in rare cases
Depending on the memory layout, it could happen that bind->command
was exchanged with something else while the parser still accessed
it.
Therefore, copy the command and let the parser use that copy.
(upstream git commit 6e9bbe67ce5f02ff6ac24889e5a215ee46247c32)

Fix: when using i3 -C, don't send remaining arguments via IPC
(upstream git commit 6146f39b8a253bc84bc5ce1feb2e3cabc50d71ba)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.3 2012/05/09 11:56:49 dcoppa Exp $
d5 3
a7 8
From 6146f39b8a253bc84bc5ce1feb2e3cabc50d71ba Mon Sep 17 00:00:00 2001
From: Michael Stapelberg <michael@@stapelberg.de>
Date: Mon, 25 Jun 2012 19:43:41 +0000
Subject: when using i3 -C, don't send remaining arguments via IPC

--- src/main.c.orig	Wed Apr 25 23:21:25 2012
+++ src/main.c	Thu Jun 28 10:55:31 2012
@@@@ -220,11 +220,13 @@@@ static void i3_exit(void) {
d21 1
a21 1
@@@@ -235,10 +237,12 @@@@ static void i3_exit(void) {
d34 1
a34 1
@@@@ -264,8 +268,10 @@@@ int main(int argc, char *argv[]) {
d45 3
a47 3
@@@@ -299,8 +305,10 @@@@ int main(int argc, char *argv[]) {
      * determine whether this is a git version or a release version. */
     debug_build = ((strchr(i3_version, '(') - i3_version) > 10);
d51 1
a51 1
     shmlog_size = (debug_build ? 25 * 1024 * 1024 : 0);
d56 1
a56 1
@@@@ -358,6 +366,7 @@@@ int main(int argc, char *argv[]) {
d59 1
a59 1
                     return 1;
d64 1
a64 1
@@@@ -366,6 +375,7 @@@@ int main(int argc, char *argv[]) {
a85 9
@@@@ -417,7 +429,7 @@@@ int main(int argc, char *argv[]) {
     /* If the user passes more arguments, we act like i3-msg would: Just send
      * the arguments as an IPC message to i3. This allows for nice semantic
      * commands such as 'i3 border none'. */
-    if (optind < argc) {
+    if (!only_check_config && optind < argc) {
         /* We enable verbose mode so that the user knows what’s going on.
          * This should make it easier to find mistakes when the user passes
          * arguments by mistake. */
d96 1
a96 1
     if (debug_build) {
@


1.3
log
@Update to i3-4.2

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 5
d11 1
a11 1
+++ src/main.c	Wed May  9 12:26:49 2012
d91 9
@


1.2
log
@Update to i3-4.1.2
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.1 2012/01/25 10:29:30 dcoppa Exp $
d3 1
a3 4
Bugfix: setup the _NET_SUPPORTING_WM_CHECK atom in a standards-compliant
way. This makes chrome (and probably other apps, too) receive changes
of the _NET_ACTIVE_WINDOW and thus show its bookmark dialog properly
(upstream git commit 4f26d6f2a1a0efb7fa15999f9cc00d8673220e97)
d5 5
a9 17
--- src/main.c.orig	Sat Dec 24 16:25:08 2011
+++ src/main.c	Wed Jan 25 09:27:25 2012
@@@@ -544,16 +544,7 @@@@ int main(int argc, char *argv[]) {
 
     property_handlers_init();
 
-    /* Set up the atoms we support */
-    xcb_atom_t supported_atoms[] = {
-#define xmacro(atom) A_ ## atom,
-#include "atoms.xmacro"
-#undef xmacro
-    };
-    xcb_change_property(conn, XCB_PROP_MODE_REPLACE, root, A__NET_SUPPORTED, XCB_ATOM_ATOM, 32, 16, supported_atoms);
-    /* Set up the window manager’s name */
-    xcb_change_property(conn, XCB_PROP_MODE_REPLACE, root, A__NET_SUPPORTING_WM_CHECK, XCB_ATOM_WINDOW, 32, 1, &root);
-    xcb_change_property(conn, XCB_PROP_MODE_REPLACE, root, A__NET_WM_NAME, A_UTF8_STRING, 8, strlen("i3"), "i3");
+    ewmh_setup_hints();
d11 8
a18 1
     keysyms = xcb_key_symbols_alloc(conn);
d20 77
@


1.1
log
@Bugfix: setup the _NET_SUPPORTING_WM_CHECK atom in a standards-compliant
way. This makes chrome (and probably other apps, too) receive changes
of the _NET_ACTIVE_WINDOW and thus show its bookmark dialog properly
(upstream git commit 4f26d6f2a1a0efb7fa15999f9cc00d8673220e97)

Bugfix: only ignore EnterNotify events after UnmapNotifies from
managed windows. This fixes some focus follows mouse problems
(upstream git commit 47fd15649ad63f3becef8870276e51c6214300fc)

Bugfix: force a new sequence number after UnmapNotify. This fixes
the problem where legitimate EnterNotify arrived with the same
sequence as the UnmapNotify and was ignored
(upstream git commit 7a4d8ed6ed67c4d0d958458f58e4db1598c9cd75)

Bugfix: position floating windows exactly where their geometry
specified
(upstream git commit cb4c9b9d27a095047a5ac22ae75f6ee17475ba18)

Bugfix: fix coordinates when the rect of an output changes
(upstream git commit 077d2433a7186550ee349284b1849ec2048af69c)
@
text
@d1 1
a1 1
$OpenBSD$
@

