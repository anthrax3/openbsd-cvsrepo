head	1.18;
access;
symbols
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_5:1.14.0.2
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_2:1.8.0.2
	OPENBSD_5_2_BASE:1.8;
locks; strict;
comment	@# @;


1.18
date	2015.03.17.15.39.47;	author dcoppa;	state dead;
branches;
next	1.17;
commitid	WQl7M1uD6B2NjHh4;

1.17
date	2015.02.12.08.43.07;	author dcoppa;	state Exp;
branches;
next	1.16;
commitid	3YT4CciYWjiAPMAJ;

1.16
date	2014.08.18.08.46.27;	author dcoppa;	state Exp;
branches;
next	1.15;
commitid	Bi02IjLxhs8ESxGu;

1.15
date	2014.07.11.15.49.58;	author dcoppa;	state dead;
branches;
next	1.14;
commitid	dpkYaZL7eWFGPiTd;

1.14
date	2014.02.03.09.54.17;	author dcoppa;	state Exp;
branches;
next	1.13;

1.13
date	2014.01.22.13.48.38;	author dcoppa;	state dead;
branches;
next	1.12;

1.12
date	2014.01.11.16.04.43;	author dcoppa;	state Exp;
branches;
next	1.11;

1.11
date	2013.08.13.10.01.54;	author dcoppa;	state dead;
branches;
next	1.10;

1.10
date	2013.05.17.10.21.42;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2012.09.21.17.16.14;	author dcoppa;	state dead;
branches;
next	1.8;

1.8
date	2012.07.16.14.38.22;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2012.07.11.09.34.54;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2012.06.11.07.22.28;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.28.13.37.50;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2012.05.09.11.56.49;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2012.03.23.08.43.54;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.12.01.16.00.01;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2011.11.06.20.23.25;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.18
log
@
Update to i3-4.9.1

new dependency on x11/xkbcommon
@
text
@$OpenBSD: patch-i3bar_src_xcb_c,v 1.17 2015/02/12 08:43:07 dcoppa Exp $

commit 594b29f83d73b9d4a781d2c33cc6fb06f649dc45
Author: Ingo Buerk <ingo.buerk@@tngtech.com>
Date:   Wed Feb 11 20:34:43 2015 +0100

Make click events on status blocks work if 'workspace_buttons no' is set.

1. Always subscribe to click events for i3bar.
2. Exit the click event handler if no current workspace was found only after clicks on status blocks have been handled.

commit 4699c714b33afb1c264f3d19911b880267165b94
Author: Michael Stapelberg <michael@@stapelberg.de>
Date:   Thu Jul 24 10:09:53 2014 +0200

Bugfix: add a sync call to i3bar to confirm reparents before exiting

Without this call, sometimes the tray icon windows are reparented into
i3's container around the i3bar window, i.e. into the next remaining
window in the window hierarchy. Since i3 then closes that container
(since the i3bar window itself was closed), the tray window will also
get closed. In general, this weird interaction (getting reparented and
then closed) is not well received by tray icon providers).

--- i3bar/src/xcb.c.orig	Sun Jun 15 19:12:43 2014
+++ i3bar/src/xcb.c	Thu Feb 12 09:35:19 2015
@@@@ -314,18 +314,6 @@@@ void handle_button(xcb_button_press_event_t *event) {
         return;
     }
 
-    /* TODO: Move this to extern get_ws_for_output() */
-    TAILQ_FOREACH (cur_ws, walk->workspaces, tailq) {
-        if (cur_ws->visible) {
-            break;
-        }
-    }
-
-    if (cur_ws == NULL) {
-        DLOG("No Workspace active?\n");
-        return;
-    }
-
     int32_t x = event->event_x >= 0 ? event->event_x : 0;
     int32_t original_x = x;
 
@@@@ -364,6 +352,18 @@@@ void handle_button(xcb_button_press_event_t *event) {
         x = original_x;
     }
 
+    /* TODO: Move this to extern get_ws_for_output() */
+    TAILQ_FOREACH (cur_ws, walk->workspaces, tailq) {
+        if (cur_ws->visible) {
+            break;
+        }
+    }
+
+    if (cur_ws == NULL) {
+        DLOG("No Workspace active?\n");
+        return;
+    }
+
     switch (event->detail) {
         case 4:
             /* Mouse wheel up. We select the previous ws, if any.
@@@@ -1290,6 +1290,7 @@@@ void clean_xcb(void) {
     FREE(outputs);
 
     xcb_flush(xcb_connection);
+    xcb_aux_sync(xcb_connection);
     xcb_disconnect(xcb_connection);
 
     ev_check_stop(main_loop, xcb_chk);
@@@@ -1459,10 +1460,8 @@@@ void reconfig_windows(bool redraw_bars) {
              * BUTTON_PRESS, to handle clicks on the workspace buttons
              * */
             values[2] = XCB_EVENT_MASK_EXPOSURE |
-                        XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT;
-            if (!config.disable_ws) {
-                values[2] |= XCB_EVENT_MASK_BUTTON_PRESS;
-            }
+                        XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT |
+                        XCB_EVENT_MASK_BUTTON_PRESS;
             xcb_void_cookie_t win_cookie = xcb_create_window_checked(xcb_connection,
                                                                      root_screen->root_depth,
                                                                      walk->bar,
@


1.17
log
@
Merge fixes from upstream:

i3bar/src/child.c: remove one level of indentation
(git commit bf0e8c2862631d41963fdb6bcb3f41667a7eccc9)

Make click events on status blocks work if 'workspace_buttons no' is set.
(git commit 594b29f83d73b9d4a781d2c33cc6fb06f649dc45)
@
text
@d1 1
a1 1
$OpenBSD: patch-i3bar_src_xcb_c,v 1.16 2014/08/18 08:46:27 dcoppa Exp $
@


1.16
log
@
Fixes from upstream:

Bugfix: properly restore workspace containers
(upstream git commit 679a5de8cfb9211afb1a1dd882e53bd672084754)

Bugfix: missed case for decoration rerender
(upstream git commit 56c284af8e281d9d5657e55b3edb7f7c673fc747)

Bugfix: add a sync call to i3bar to confirm reparents before exiting
(upstream git commit 4699c714b33afb1c264f3d19911b880267165b94)

Bugfix: don't set focus in con_set_layout() on invisible workspaces
(upstream git commit fc886315342b3a2292ad0c08394b6bb452663bb1)
@
text
@d1 10
a10 1
$OpenBSD$
d26 39
a64 1
+++ i3bar/src/xcb.c	Mon Aug 18 10:17:08 2014
d73 13
@


1.15
log
@
Update to i3-4.8 plus fixes.

Initial diff by Theo Buehler <theo AT math DOT ethz DOT ch>
@
text
@d1 1
a1 1
$OpenBSD: patch-i3bar_src_xcb_c,v 1.14 2014/02/03 09:54:17 dcoppa Exp $
d3 1
a3 1
commit a4d504485139dc9bf4c846c26a38968a920dfcb1
d5 1
a5 1
Date:   Sun Feb 2 11:22:42 2014 +0100
d7 1
a7 1
i3bar: fix resource leak: statusline_ctx needs to be freed first
d9 6
a14 2
In practice this is rarely noticeable, unless you very often switch
screen resolutions, I think.
d16 4
a19 3
--- i3bar/src/xcb.c.orig	Thu Jan 23 22:52:24 2014
+++ i3bar/src/xcb.c	Mon Feb  3 10:46:27 2014
@@@@ -1395,8 +1395,8 @@@@ void realloc_sl_buffer(void) {
d21 5
a25 8
     mask |= XCB_GC_BACKGROUND;
     vals[0] = colors.bar_fg;
-    statusline_ctx = xcb_generate_id(xcb_connection);
     xcb_free_gc(xcb_connection, statusline_ctx);
+    statusline_ctx = xcb_generate_id(xcb_connection);
     xcb_void_cookie_t sl_ctx_cookie = xcb_create_gc_checked(xcb_connection,
                                                             statusline_ctx,
                                                             xcb_root,
@


1.14
log
@
i3bar: fix resource leak: statusline_ctx needs to be freed first
(upstream git commit a4d504485139dc9bf4c846c26a38968a920dfcb1)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.13
log
@Bugfix update to i3-4.7.1
@
text
@d1 1
a1 1
$OpenBSD: patch-i3bar_src_xcb_c,v 1.12 2014/01/11 16:04:43 dcoppa Exp $
d3 3
a5 3
commit 23b1da598ebac70d82070abb557bef0fd3fabce9
Author: Tony Crisci <tony@@dubstepdish.com>
Date:   Thu Dec 26 00:30:21 2013 -0500
d7 1
a7 1
i3bar: Set `mapped` flag on trayclient creation
d9 2
a10 4
When a trayclient is first created as a structure in memory, explicitly
set the `mapped` flag to false. Otherwise it may initialize to `true` in
some circumstances without actually being mapped, causing a request to
be mapped from the client to be ignored.
d12 3
a14 8
Create the trayclient in memory before handling a request to be mapped
immediately.

--- i3bar/src/xcb.c.orig	Sun Dec 22 21:12:41 2013
+++ i3bar/src/xcb.c	Fri Jan 10 20:18:08 2014
@@@@ -603,17 +603,18 @@@@ static void handle_client_message(xcb_client_message_e
              * exits/crashes. */
             xcb_change_save_set(xcb_connection, XCB_SET_MODE_INSERT, client);
d16 8
a23 20
+            trayclient *tc = smalloc(sizeof(trayclient));
+            tc->win = client;
+            tc->xe_version = xe_version;
+            tc->mapped = false;
+            TAILQ_INSERT_TAIL(output->trayclients, tc, tailq);
+
             if (map_it) {
                 DLOG("Mapping dock client\n");
                 xcb_map_window(xcb_connection, client);
             } else {
                 DLOG("Not mapping dock client yet\n");
             }
-            trayclient *tc = smalloc(sizeof(trayclient));
-            tc->win = client;
-            tc->xe_version = xe_version;
-            TAILQ_INSERT_TAIL(output->trayclients, tc, tailq);
-
             /* Trigger an update to copy the statusline text to the appropriate
              * position */
             configure_trayclients();
@


1.12
log
@Update to i3-4.7
@
text
@d1 1
a1 1
$OpenBSD$
@


1.11
log
@Update to i3-4.6

ok tobiasu@@, abieber@@
@
text
@d1 1
a1 1
$OpenBSD: patch-i3bar_src_xcb_c,v 1.10 2013/05/17 10:21:42 dcoppa Exp $
d3 3
a5 3
commit 72c279bc39953c04ddee1d8934a488388b30c3b4
Author: Michael Stapelberg <michael@@stapelberg.de>
Date:   Sun Apr 14 22:54:15 2013 +0200
d7 1
a7 1
Bugfix: fix crash when not having tray_output configured
d9 25
a33 3
--- i3bar/src/xcb.c.orig	Mon Mar 18 22:43:36 2013
+++ i3bar/src/xcb.c	Fri May 17 11:36:13 2013
@@@@ -505,7 +505,9 @@@@ static void handle_client_message(xcb_client_message_e
d35 8
a42 9
             /* In case of tray_output == primary and there is no primary output
              * configured, we fall back to the first available output. */
-            if (output == NULL && strcasecmp("primary", config.tray_output) == 0) {
+            if (output == NULL &&
+                config.tray_output &&
+                strcasecmp("primary", config.tray_output) == 0) {
                 SLIST_FOREACH(walk, outputs, slist) {
                     if (!walk->active)
                         continue;
@


1.10
log
@Bunch of fixes from upstream:

Fix crash when not having tray_output configured

libi3: mark IPC fd CLOEXEC

Ensure that resize will take place even if pixel is smaller than
size increments

Fix floating window size with hide_edge_borders

render_con: fix height rounding in aspect ratio computation

tabbed: floor(), put extra pixels into the last tab
@
text
@d1 1
a1 1
$OpenBSD$
@


1.9
log
@Update to i3-4.3

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-i3bar_src_xcb_c,v 1.8 2012/07/16 14:38:22 dcoppa Exp $
d3 3
a5 4
From 3daa3e052f2388f95ef525bdcb6cca840d4f9a32 Mon Sep 17 00:00:00 2001
From: Marcel Hellwig <keks@@cookiesoft.de>
Date: Sun, 08 Jul 2012 19:31:34 +0000
Subject: Don't display empty strings from i3status in i3bar
d7 1
a7 4
From 599f7cc2a4ad0536759203cbdb03680389ae5e7b Mon Sep 17 00:00:00 2001
From: Michael Stapelberg <michael@@stapelberg.de>
Date: Sun, 10 Jun 2012 19:04:51 +0000
Subject: i3bar: handle clicks with negative coordinates
d9 3
a11 59
From 4f93e0587a849de00a1f50bfcd48a549009178c0 Mon Sep 17 00:00:00 2001
From: TunnelWicht <MilkFreeze@@web.de>
Date: Tue, 01 May 2012 11:35:34 +0000
Subject: don't wrap when changing workspaces by mouse wheel scrolling

From 8a3574f301725ba48484c05408e35ecec27aad65 Mon Sep 17 00:00:00 2001
From: Michael Stapelberg <michael@@stapelberg.de>
Date: Tue, 10 Jul 2012 20:52:14 +0000
Subject: i3bar: inform _all_ clients of new tray selection owner

--- i3bar/src/xcb.c.orig	Wed Apr 25 23:21:25 2012
+++ i3bar/src/xcb.c	Mon Jul 16 16:30:28 2012
@@@@ -117,6 +117,9 @@@@ void refresh_statusline() {
     /* Convert all blocks from UTF-8 to UCS-2 and predict the text width (in
      * pixels). */
     TAILQ_FOREACH(block, &statusline_head, blocks) {
+        if (strlen(block->full_text) == 0)
+            continue;
+
         block->ucs2_full_text = (xcb_char2b_t*)convert_utf8_to_ucs2(block->full_text, &(block->glyph_count_full_text));
         block->width = predict_text_width((char*)block->ucs2_full_text, block->glyph_count_full_text, true);
         /* If this is not the last block, add some pixels for a separator. */
@@@@ -138,6 +141,9 @@@@ void refresh_statusline() {
     /* Draw the text of each block. */
     uint32_t x = 0;
     TAILQ_FOREACH(block, &statusline_head, blocks) {
+        if (strlen(block->full_text) == 0)
+            continue;
+
         uint32_t colorpixel = (block->color ? get_colorpixel(block->color) : colors.bar_fg);
         set_font_colors(statusline_ctx, colorpixel, colors.bar_bg);
         draw_text((char*)block->ucs2_full_text, block->glyph_count_full_text,
@@@@ -281,7 +287,7 @@@@ void handle_button(xcb_button_press_event_t *event) {
         return;
     }
 
-    int32_t x = event->event_x;
+    int32_t x = event->event_x >= 0 ? event->event_x : 0;
 
     DLOG("Got Button %d\n", event->detail);
 
@@@@ -302,17 +308,13 @@@@ void handle_button(xcb_button_press_event_t *event) {
             break;
         case 4:
             /* Mouse wheel down. We select the next ws */
-            if (cur_ws == TAILQ_FIRST(walk->workspaces)) {
-                cur_ws = TAILQ_LAST(walk->workspaces, ws_head);
-            } else {
+            if (cur_ws != TAILQ_FIRST(walk->workspaces)) {
                 cur_ws = TAILQ_PREV(cur_ws, ws_head, tailq);
             }
             break;
         case 5:
             /* Mouse wheel up. We select the previos ws */
-            if (cur_ws == TAILQ_LAST(walk->workspaces, ws_head)) {
-                cur_ws = TAILQ_FIRST(walk->workspaces);
-            } else {
+            if (cur_ws != TAILQ_LAST(walk->workspaces, ws_head)) {
                 cur_ws = TAILQ_NEXT(cur_ws, tailq);
d13 9
a21 10
             break;
@@@@ -1046,7 +1048,7 @@@@ void init_tray() {
     xcb_send_event(xcb_connection,
                    0,
                    xcb_root,
-                   XCB_EVENT_MASK_STRUCTURE_NOTIFY,
+                   0xFFFFFF,
                    (char*)ev);
     free(event);
     free(tray_reply);
@


1.8
log
@Bugfix: don't display empty strings from i3status in i3bar
(upstream git commit 3daa3e052f2388f95ef525bdcb6cca840d4f9a32)
@
text
@d1 1
a1 1
$OpenBSD: patch-i3bar_src_xcb_c,v 1.7 2012/07/11 09:34:54 dcoppa Exp $
@


1.7
log
@i3bar: inform _all_ clients of new tray selection owner.
This fixes a problem with X-chat (and possibly others).
(upstream git commit 8a3574f301725ba48484c05408e35ecec27aad65)
@
text
@d1 6
a6 1
$OpenBSD: patch-i3bar_src_xcb_c,v 1.6 2012/06/11 07:22:28 dcoppa Exp $
d24 22
a45 2
+++ i3bar/src/xcb.c	Wed Jul 11 10:52:37 2012
@@@@ -281,7 +281,7 @@@@ void handle_button(xcb_button_press_event_t *event) {
d54 1
a54 1
@@@@ -302,17 +302,13 @@@@ void handle_button(xcb_button_press_event_t *event) {
d74 1
a74 1
@@@@ -1046,7 +1042,7 @@@@ void init_tray() {
@


1.6
log
@i3bar: handle clicks with negative coordinates
(upstream git commit 599f7cc2a4ad0536759203cbdb03680389ae5e7b)
@
text
@d1 1
a1 1
$OpenBSD: patch-i3bar_src_xcb_c,v 1.5 2012/05/28 13:37:50 dcoppa Exp $
d13 5
d19 1
a19 1
+++ i3bar/src/xcb.c	Mon Jun 11 09:15:19 2012
d49 9
@


1.5
log
@
Bugfix: less differentiation between named and numbered workspaces
(upstream git commit b88ab981fd0a5725ed886a9f9788a5b1e721534c)

Bugfix: fix stray workspaces "number 1" being created when having
workspace number 1 in your config (upstream git commit
ec4e6d1cdf5b76c79da2879635e4094e25a01f3d)

Fix for i3bar: don't wrap when changing workspaces by mouse wheel
scrolling (upstream git commit 4f93e0587a849de00a1f50bfcd48a549009178c0)
@
text
@d1 6
a6 1
$OpenBSD$
d14 10
a23 1
+++ i3bar/src/xcb.c	Mon May 28 12:39:58 2012
@


1.4
log
@Update to i3-4.2

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-i3bar_src_xcb_c,v 1.3 2012/03/23 08:43:54 dcoppa Exp $
d3 4
a6 2
Fix i3bar when using multiple displays
(upstream git commit 8b4ad8c6bdc73d8950b9ac67316811377acbf7b3)
d8 22
a29 19
--- i3bar/src/xcb.c.orig	Fri Mar 23 09:13:28 2012
+++ i3bar/src/xcb.c	Fri Mar 23 09:15:28 2012
@@@@ -10,6 +10,7 @@@@
 #include <xcb/xcb.h>
 #include <xcb/xproto.h>
 #include <xcb/xcb_atom.h>
+#include <xcb/xcb_aux.h>
 
 #ifdef XCB_COMPAT
 #include "xcb_compat.h"
@@@@ -784,7 +785,7 @@@@ char *init_xcb_early() {
     #define ATOM_DO(name) atom_cookies[name] = xcb_intern_atom(xcb_connection, 0, strlen(#name), #name);
     #include "xcb_atoms.def"
 
-    xcb_screen = xcb_setup_roots_iterator(xcb_get_setup(xcb_connection)).data;
+    xcb_screen = xcb_aux_get_screen(xcb_connection, screen);
     xcb_root = xcb_screen->root;
 
     /* We draw the statusline to a seperate pixmap, because it looks the same on all bars and
@


1.3
log
@
Fix i3bar when using multiple displays
(upstream git commit 8b4ad8c6bdc73d8950b9ac67316811377acbf7b3)

Fix cfgparse: leave EAT_WHITESPACE and BINDSYM_COND states on EOL
(upstream git commit 1f6fbaf240351a3559f25bc47286c47b29c1047f)

Fix restart with for_window floating configuration
(upstream git commit afed6da0e5f555003ace074bf627c9a7e1c14106)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Major update to i3-4.1
@
text
@d1 1
a1 1
$OpenBSD: patch-i3bar_src_xcb_c,v 1.1 2011/11/06 20:23:25 dcoppa Exp $
d3 2
a4 2
bugfix: check if the X11 connection is unavailable
(upstream git commit 7064cfc2a07c71a6efce8462e40e789ef8d90908)
d6 19
a24 15
--- i3bar/src/xcb.c.orig	Sun Aug 28 19:48:13 2011
+++ i3bar/src/xcb.c	Mon Oct 31 12:44:02 2011
@@@@ -406,6 +406,12 @@@@ void xcb_prep_cb(struct ev_loop *loop, ev_prepare *wat
  */
 void xcb_chk_cb(struct ev_loop *loop, ev_check *watcher, int revents) {
     xcb_generic_event_t *event;
+
+    if (xcb_connection_has_error(xcb_connection)) {
+        ELOG("X11 connection was closed unexpectedly - maybe your X server terminated / crashed?\n");
+        exit(1);
+    }
+
     while ((event = xcb_poll_for_event(xcb_connection)) == NULL) {
         return;
     }
@


1.1
log
@Update to i3-4.0.2 (plus patches from upstream git).
i3bar is now part of i3 itself and i3-wsbar is gone.
@
text
@d1 1
a1 1
$OpenBSD$
@

