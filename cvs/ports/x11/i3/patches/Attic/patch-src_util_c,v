head	1.9;
access;
symbols
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	landry_20090902:1.1.1.1
	bapt:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2015.03.17.15.39.48;	author dcoppa;	state dead;
branches;
next	1.8;
commitid	WQl7M1uD6B2NjHh4;

1.8
date	2014.07.11.15.49.58;	author dcoppa;	state Exp;
branches;
next	1.7;
commitid	dpkYaZL7eWFGPiTd;

1.7
date	2011.12.01.16.00.01;	author dcoppa;	state dead;
branches;
next	1.6;

1.6
date	2011.11.06.20.23.25;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2011.05.09.11.03.40;	author dcoppa;	state dead;
branches;
next	1.4;

1.4
date	2011.04.07.08.58.10;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2010.09.14.08.54.18;	author dcoppa;	state dead;
branches;
next	1.2;

1.2
date	2009.09.14.17.19.29;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.02.19.26.17;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.09.02.19.26.17;	author landry;	state Exp;
branches;
next	;


desc
@@


1.9
log
@
Update to i3-4.9.1

new dependency on x11/xkbcommon
@
text
@$OpenBSD: patch-src_util_c,v 1.8 2014/07/11 15:49:58 dcoppa Exp $

commit c159fc4197ad06d603ba404add501ac02d76c64f
Author: Michael Stapelberg <michael@@stapelberg.de>
Date:   Fri Jun 27 09:04:51 2014 +0200

Bugfix: create the directory for storing the restart state

--- src/util.c.orig	Sun Jun 15 19:12:43 2014
+++ src/util.c	Fri Jul 11 16:39:36 2014
@@@@ -249,6 +249,15 @@@@ char *store_restart_layout(void) {
         filename = resolve_tilde(config.restart_state_path);
     }
 
+    /* create the directory, it could have been cleaned up before restarting or
+     * may not exist at all in case it was user-specified. */
+    char *filenamecopy = sstrdup(filename);
+    char *base = dirname(filenamecopy);
+    DLOG("Creating \"%s\" for storing the restart layout\n", base);
+    if (!mkdirp(base))
+        ELOG("Could not create \"%s\" for storing the restart layout, layout will be lost.\n", base);
+    free(filenamecopy);
+
     int fd = open(filename, O_WRONLY | O_CREAT | O_TRUNC, S_IRUSR | S_IWUSR);
     if (fd == -1) {
         perror("open()");
@


1.8
log
@
Update to i3-4.8 plus fixes.

Initial diff by Theo Buehler <theo AT math DOT ethz DOT ch>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.7
log
@Major update to i3-4.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_util_c,v 1.6 2011/11/06 20:23:25 dcoppa Exp $
d3 3
a5 2
bugfix: properly free memory/close fd upon errors
(upstream git commit e1631d6320cf6b47c3b46f0b56ae970986c9c20c)
d7 20
a26 16
--- src/util.c.orig	Sun Aug 28 19:48:13 2011
+++ src/util.c	Mon Oct 31 12:44:02 2011
@@@@ -374,11 +374,13 @@@@ char *store_restart_layout() {
         if (n == -1) {
             perror("write()");
             free(filename);
+            close(fd);
             return NULL;
         }
         if (n == 0) {
             printf("write == 0?\n");
             free(filename);
+            close(fd);
             return NULL;
         }
         written += n;
@


1.6
log
@Update to i3-4.0.2 (plus patches from upstream git).
i3bar is now part of i3 itself and i3-wsbar is gone.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@Update to i3-3.e-bf3 (i3-3.5.3)
@
text
@d1 21
a21 39
$OpenBSD: patch-src_util_c,v 1.4 2011/04/07 08:58:10 dcoppa Exp $
--- src/util.c.orig	Wed Apr  6 12:52:10 2011
+++ src/util.c	Wed Apr  6 12:53:48 2011
@@@@ -222,7 +222,26 @@@@ Client *get_last_focused_client(xcb_connection_t *conn
         return NULL;
 }
 
+/*
+ * Sends WM_TAKE_FOCUS to the client
+ *
+ */
+void take_focus(xcb_connection_t *conn, Client *client) {
+    xcb_client_message_event_t ev;
 
+    memset(&ev, 0, sizeof(xcb_client_message_event_t));
+
+    ev.response_type = XCB_CLIENT_MESSAGE;
+    ev.window = client->child;
+    ev.type = atoms[WM_PROTOCOLS];
+    ev.format = 32;
+    ev.data.data32[0] = atoms[WM_TAKE_FOCUS];
+    ev.data.data32[1] = XCB_CURRENT_TIME;
+
+    DLOG("Sending WM_TAKE_FOCUS to the client\n");
+    xcb_send_event(conn, false, client->child, XCB_EVENT_MASK_NO_EVENT, (char*)&ev);
+}
+
 /*
  * Sets the given client as focused by updating the data structures correctly,
  * updating the X input focus and finally re-decorating both windows (to signalize
@@@@ -261,6 +280,8 @@@@ void set_focus(xcb_connection_t *conn, Client *client,
         CLIENT_LOG(client);
         /* Set focus to the entered window, and flush xcb buffer immediately */
         xcb_set_input_focus(conn, XCB_INPUT_FOCUS_POINTER_ROOT, client->child, XCB_CURRENT_TIME);
+        if (client->needs_take_focus)
+                take_focus(conn, client);
         ewmh_update_active_window(client->child);
         //xcb_warp_pointer(conn, XCB_NONE, client->child, 0, 0, 0, 0, 10, 10);
 
@


1.4
log
@Fix problems with Java apps (backported from upstream git)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@Update to i3-3.5.1

resolve_tilde() function by Christopher Zimmermann
(madroach AT zakweb DOT de): thanks!

OK landry@@
@
text
@d1 6
a6 15
$OpenBSD: patch-src_util_c,v 1.2 2009/09/14 17:19:29 naddy Exp $
--- src/util.c.orig	Wed Aug 19 14:39:09 2009
+++ src/util.c	Mon Sep 14 19:15:36 2009
@@@@ -15,6 +15,9 @@@@
 #include <unistd.h>
 #include <string.h>
 #include <sys/wait.h>
+#if defined(__OpenBSD__)
+#include <sys/cdefs.h>
+#endif
 #include <stdarg.h>
 #include <assert.h>
 #include <iconv.h>
@@@@ -145,7 +148,7 @@@@ void start_application(const char *command) {
                                         shell = "/bin/sh";
a7 14
                         /* This is the child */
-                        execl(shell, shell, "-c", command, NULL);
+                        execl(shell, shell, "-c", command, (void *)NULL);
                         /* not reached */
                 }
                 exit(0);
@@@@ -466,3 +469,43 @@@@ done:
         FREE(to_title_ucs);
         return matching;
 }
+
+
+#if defined(__OpenBSD__)
+
d9 2
a10 2
+ * Taken from FreeBSD
+ * Find the first occurrence of the byte string s in byte string l.
d12 4
d17 6
a22 10
+void *
+memmem(const void *l, size_t l_len, const void *s, size_t s_len)
+{
+        register char *cur, *last;
+        const char *cl = (const char *)l;
+        const char *cs = (const char *)s;
+
+        /* we need something to compare */
+        if (l_len == 0 || s_len == 0)
+                return NULL;
d24 2
a25 16
+        /* "s" must be smaller or equal to "l" */
+        if (l_len < s_len)
+                return NULL;
+
+        /* special case where s_len == 1 */
+        if (s_len == 1)
+                return memchr(l, (int)*cs, l_len);
+
+        /* the last position where its possible to find "s" in "l" */
+        last = (char *)cl + l_len - s_len;
+
+        for (cur = (char *)cl; cur <= last; cur++)
+                if (cur[0] == cs[0] && memcmp(cur, cs, s_len) == 0)
+                        return cur;
+
+        return NULL; 
d28 12
a39 2
+#endif
+
@


1.2
log
@force pointer interpretation for final argument to execl()
@
text
@d1 1
a1 1
$OpenBSD: patch-src_util_c,v 1.1.1.1 2009/09/02 19:26:17 landry Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ src/util.c	Mon Aug 31 14:01:38 2009
d14 9
@


1.1.1.1
log
@Import (really, this time) i3 3.c, from MAINTAINER Baptiste Daroussin,
with tweaks by me.

i3 is an improved dynamic, tiling window manager.

note: It is still young, so some debug options are still enable by
default, and it's a bit verbose.

ok ajacoutot@@
@
text
@@
