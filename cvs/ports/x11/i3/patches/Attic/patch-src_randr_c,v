head	1.12;
access;
symbols
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.12
date	2016.03.09.09.25.51;	author dcoppa;	state dead;
branches;
next	1.11;
commitid	5e0lb25PYzcoURwg;

1.11
date	2015.12.18.15.53.09;	author dcoppa;	state Exp;
branches;
next	1.10;
commitid	0OqseA58UoyREWdQ;

1.10
date	2012.09.21.17.16.14;	author dcoppa;	state dead;
branches;
next	1.9;

1.9
date	2012.08.08.14.33.25;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2012.05.09.11.56.49;	author dcoppa;	state dead;
branches;
next	1.7;

1.7
date	2012.02.21.14.05.39;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2012.01.25.10.29.30;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2011.12.27.09.05.17;	author dcoppa;	state dead;
branches;
next	1.4;

1.4
date	2011.12.01.16.00.01;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.06.20.23.25;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.14.12.55.18;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2010.11.18.12.20.54;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.12
log
@
Update to i3-4.12
Added halex@@'s window hints fix
Fixed trailing whitespace in pkg/DESCR (spotted by Josh Grosse)

Tested by tb@@ and Josh Grosse
OK tb@@
@
text
@$OpenBSD: patch-src_randr_c,v 1.11 2015/12/18 15:53:09 dcoppa Exp $

Activate root output if RandR request fails.

--- src/randr.c.orig	Wed Sep 30 08:55:10 2015
+++ src/randr.c	Fri Dec 18 13:58:58 2015
@@@@ -604,7 +604,6 @@@@ void randr_query_outputs(void) {
     Output *output, *other, *first;
     xcb_randr_get_output_primary_cookie_t pcookie;
     xcb_randr_get_screen_resources_current_cookie_t rcookie;
-    resources_reply *res;
 
     /* timestamp of the configuration so that we get consistent replies to all
      * requests (if the configuration changes between our different calls) */
@@@@ -621,28 +620,31 @@@@ void randr_query_outputs(void) {
         ELOG("Could not get RandR primary output\n");
     else
         DLOG("primary output is %08x\n", primary->output);
-    if ((res = xcb_randr_get_screen_resources_current_reply(conn, rcookie, NULL)) == NULL)
-        return;
 
-    cts = res->config_timestamp;
+    resources_reply *res = xcb_randr_get_screen_resources_current_reply(conn, rcookie, NULL);
+    if (res == NULL) {
+        ELOG("Could not query screen resources.\n");
+    } else {
+        cts = res->config_timestamp;
 
-    int len = xcb_randr_get_screen_resources_current_outputs_length(res);
-    randr_outputs = xcb_randr_get_screen_resources_current_outputs(res);
+        int len = xcb_randr_get_screen_resources_current_outputs_length(res);
+        randr_outputs = xcb_randr_get_screen_resources_current_outputs(res);
 
-    /* Request information for each output */
-    xcb_randr_get_output_info_cookie_t ocookie[len];
-    for (int i = 0; i < len; i++)
-        ocookie[i] = xcb_randr_get_output_info(conn, randr_outputs[i], cts);
+        /* Request information for each output */
+        xcb_randr_get_output_info_cookie_t ocookie[len];
+        for (int i = 0; i < len; i++)
+            ocookie[i] = xcb_randr_get_output_info(conn, randr_outputs[i], cts);
 
-    /* Loop through all outputs available for this X11 screen */
-    for (int i = 0; i < len; i++) {
-        xcb_randr_get_output_info_reply_t *output;
+        /* Loop through all outputs available for this X11 screen */
+        for (int i = 0; i < len; i++) {
+            xcb_randr_get_output_info_reply_t *output;
 
-        if ((output = xcb_randr_get_output_info_reply(conn, ocookie[i], NULL)) == NULL)
-            continue;
+            if ((output = xcb_randr_get_output_info_reply(conn, ocookie[i], NULL)) == NULL)
+                continue;
 
-        handle_output(conn, randr_outputs[i], output, cts, res);
-        free(output);
+            handle_output(conn, randr_outputs[i], output, cts, res);
+            free(output);
+        }
     }
 
     /* If there's no randr output, enable the output covering the root window. */
@


1.11
log
@
Merge all the fixes from the git stable branch of i3
Regen WANTLIB while here
@
text
@d1 1
a1 1
$OpenBSD$
@


1.10
log
@Update to i3-4.3

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_randr_c,v 1.9 2012/08/08 14:33:25 dcoppa Exp $
d3 1
a3 4
From e36674c5b8389ff93537fdc9ad32d23bd7add61d Mon Sep 17 00:00:00 2001
From: Michael Stapelberg <michael@@stapelberg.de>
Date: Sat, 04 Aug 2012 13:19:11 +0000
Subject: Fix a crash when the current output cannot be determined
d5 58
a62 39
From d57d51da6d040e8572159332224615f232c4645a Mon Sep 17 00:00:00 2001
From: Michael Stapelberg <michael@@stapelberg.de>
Date: Sat, 04 Aug 2012 13:21:16 +0000
Subject: Bugfix: Properly fix floating coordinates when disabling outputs

Since the content containers are not yet updated (they will be when
rendering), we need to use the output containers.s rects instead.

--- src/randr.c.orig	Wed Apr 25 23:21:25 2012
+++ src/randr.c	Wed Aug  8 15:36:52 2012
@@@@ -359,6 +359,19 @@@@ void init_ws_for_output(Output *output, Con *content) 
             workspace_show(previous);
         }
 
+        /* Render the output on which the workspace was to get correct Rects.
+         * Then, we need to work with the "content" container, since we cannot
+         * be sure that the workspace itself was rendered at all (in case it's
+         * invisible, it won't be rendered). */
+        render_con(workspace_out, false);
+        Con *ws_out_content = output_get_content(workspace_out);
+
+        Con *floating_con;
+        TAILQ_FOREACH(floating_con, &(workspace->floating_head), floating_windows)
+            /* NB: We use output->con here because content is not yet rendered,
+             * so it has a rect of {0, 0, 0, 0}. */
+            floating_fix_coordinates(floating_con, &(ws_out_content->rect), &(output->con->rect));
+
         con_detach(workspace);
         con_attach(workspace, content, false);
 
@@@@ -682,7 +695,7 @@@@ void randr_query_outputs(void) {
                     DLOG("Fixing the coordinates of floating containers\n");
                     Con *floating_con;
                     TAILQ_FOREACH(floating_con, &(current->floating_head), floating_windows)
-                        floating_fix_coordinates(floating_con, &(old_content->rect), &(first_content->rect));
+                        floating_fix_coordinates(floating_con, &(output->con->rect), &(first->con->rect));
                     DLOG("Done, next\n");
                 }
                 DLOG("re-attached all workspaces\n");
@


1.9
log
@
Bugfix: fix duplicate return value for 'resize' command
(upstream git commit 83dc5d5cb6c71d365cd79b376fcb073e9120144d)

floating_fix_coordinates: properly deal with negative positions
(upstream git commit 74510c59c7db676f1228d054791e1e37456f6660)

randr: fix a crash when the current output cannot be determined
(upstream git commit e867fd810516431f06af0799c90c0f833bf61219)

randr: properly fix floating coordinates when disabling outputs
(upstream git commit d57d51da6d040e8572159332224615f232c4645a)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.8
log
@Update to i3-4.2

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_randr_c,v 1.7 2012/02/21 14:05:39 dcoppa Exp $
d3 4
a6 2
Bugfix: fix coords of floating containers when the output is disabled
(upstream git commit 55525015cc6b1a2e41fdaf85e9f03301dd7bd63b)
d8 29
a36 5
--- src/randr.c.orig	Tue Feb 21 14:04:58 2012
+++ src/randr.c	Tue Feb 21 14:08:43 2012
@@@@ -754,7 +754,8 @@@@ void randr_query_outputs() {
                     DLOG("next = %p\n", next);
                 }
d38 6
a43 14
-                /* 2: iterate through workspaces and re-assign them */
+                /* 2: iterate through workspaces and re-assign them, fixing the coordinates
+                 * of floating containers as we go */
                 Con *current;
                 Con *old_content = output_get_content(output->con);
                 while (!TAILQ_EMPTY(&(old_content->nodes_head))) {
@@@@ -763,6 +764,10 @@@@ void randr_query_outputs() {
                     con_detach(current);
                     DLOG("Re-attaching current = %p / %s\n", current, current->name);
                     con_attach(current, first_content, false);
+                    DLOG("Fixing the coordinates of floating containers\n");
+                    Con *floating_con;
+                    TAILQ_FOREACH(floating_con, &(current->floating_head), floating_windows)
+                        floating_fix_coordinates(floating_con, &(old_content->rect), &(first_content->rect));
@


1.7
log
@Update to i3-4.1.2
@
text
@d1 1
a1 1
$OpenBSD: patch-src_randr_c,v 1.6 2012/01/25 10:29:30 dcoppa Exp $
@


1.6
log
@Bugfix: setup the _NET_SUPPORTING_WM_CHECK atom in a standards-compliant
way. This makes chrome (and probably other apps, too) receive changes
of the _NET_ACTIVE_WINDOW and thus show its bookmark dialog properly
(upstream git commit 4f26d6f2a1a0efb7fa15999f9cc00d8673220e97)

Bugfix: only ignore EnterNotify events after UnmapNotifies from
managed windows. This fixes some focus follows mouse problems
(upstream git commit 47fd15649ad63f3becef8870276e51c6214300fc)

Bugfix: force a new sequence number after UnmapNotify. This fixes
the problem where legitimate EnterNotify arrived with the same
sequence as the UnmapNotify and was ignored
(upstream git commit 7a4d8ed6ed67c4d0d958458f58e4db1598c9cd75)

Bugfix: position floating windows exactly where their geometry
specified
(upstream git commit cb4c9b9d27a095047a5ac22ae75f6ee17475ba18)

Bugfix: fix coordinates when the rect of an output changes
(upstream git commit 077d2433a7186550ee349284b1849ec2048af69c)
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 2
Bugfix: fix coordinates when the rect of an output changes
(upstream git commit 077d2433a7186550ee349284b1849ec2048af69c)
d6 5
a10 5
--- src/randr.c.orig	Sat Dec 24 16:25:08 2011
+++ src/randr.c	Mon Jan 23 09:51:06 2012
@@@@ -522,6 +522,14 @@@@ static void output_change_mode(xcb_connection_t *conn,
     /* Point content to the container of the workspaces */
     content = output_get_content(output->con);
d12 17
a28 11
+    /* Fix the position of all floating windows on this output.
+     * The 'rect' of each workspace will be updated in src/render.c. */
+    TAILQ_FOREACH(workspace, &(content->nodes_head), nodes) {
+        TAILQ_FOREACH(child, &(workspace->floating_head), floating_windows) {
+            floating_fix_coordinates(child, &(workspace->rect), &(output->con->rect));
+        }
+    }
+
     /* If default_orientation is NO_ORIENTATION, we change the orientation of
      * the workspaces and their childs depending on output resolution. This is
      * only done for workspaces with maximum one child. */
@


1.5
log
@Bugfixing update to i3-4.1.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_randr_c,v 1.4 2011/12/01 16:00:01 dcoppa Exp $
d3 2
a4 3
Bugfix: don't create a workspace named "back_and_forth" on
startup (unintended behaviour)
(upstream git commit d686f2f8731a1b7a9c4524a30d4413200d768621)
d6 5
a10 45
Do not set the _NET_WM_WORKAREA hint: fix incorrect transient
geometry with wxwidgets
(upstream git commit d25e77ce7597bf0736c610a04185c8c27694c890)

Bugfix: fix crash at startup when RandR is not present
(upstream git commit 227a58b0c30a438e36ee8318c0d20079777f063d)

--- src/randr.c.orig	Fri Nov 11 23:41:20 2011
+++ src/randr.c	Thu Dec  1 14:07:37 2011
@@@@ -420,11 +420,12 @@@@ void init_ws_for_output(Output *output, Con *content) 
             continue;
         DLOG("relevant command = %s\n", bind->command);
         char *target = bind->command + strlen("workspace ");
-        /* We check if this is the workspace next/prev command. Beware: The
-         * workspace names "next" and "prev" are OK, so we check before
-         * stripping the double quotes */
+        /* We check if this is the workspace next/prev/back_and_forth command.
+         * Beware: The workspace names "next", "prev" and "back_and_forth" are
+         * OK, so we check before stripping the double quotes */
         if (strncasecmp(target, "next", strlen("next")) == 0 ||
-            strncasecmp(target, "prev", strlen("prev")) == 0)
+            strncasecmp(target, "prev", strlen("prev")) == 0 ||
+            strncasecmp(target, "back_and_forth", strlen("back_and_forth")) == 0)
             continue;
         if (*target == '"')
             target++;
@@@@ -807,8 +808,6 @@@@ void randr_query_outputs() {
         disable_randr(conn);
     }
 
-    ewmh_update_workarea();
-
     /* Just go through each active output and assign one workspace */
     TAILQ_FOREACH(output, &outputs, outputs) {
         if (!output->active)
@@@@ -845,9 +844,10 @@@@ void randr_init(int *event_base) {
     const xcb_query_extension_reply_t *extreply;
 
     extreply = xcb_get_extension_data(conn, &xcb_randr_id);
-    if (!extreply->present)
+    if (!extreply->present) {
         disable_randr(conn);
-    else randr_query_outputs();
+        return;
+    } else randr_query_outputs();
d12 11
a22 2
     if (event_base != NULL)
         *event_base = extreply->first_event;
@


1.4
log
@Major update to i3-4.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_randr_c,v 1.3 2011/11/06 20:23:25 dcoppa Exp $
@


1.3
log
@Update to i3-4.0.2 (plus patches from upstream git).
i3bar is now part of i3 itself and i3-wsbar is gone.
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 2
bugfix: correctly revert focus to other floating windows when closing
a floating window (git commit 4dbda7311480c231332a9dab9ed23d00abecb7e9)
d7 45
a51 4
--- src/randr.c.orig	Sun Aug 28 19:48:13 2011
+++ src/randr.c	Mon Oct 31 12:44:02 2011
@@@@ -789,7 +789,7 @@@@ void randr_query_outputs() {
                 }
d53 2
a54 6
                 DLOG("destroying disappearing con %p\n", output->con);
-                tree_close(output->con, DONT_KILL_WINDOW, true);
+                tree_close(output->con, DONT_KILL_WINDOW, true, false);
                 DLOG("Done. Should be fine now\n");
                 output->con = NULL;
             }
@


1.2
log
@Update to i3-3.e-bf2 (aka i3-3.5.2)
@
text
@d1 9
a9 5
$OpenBSD: patch-src_randr_c,v 1.1 2010/11/18 12:20:54 dcoppa Exp $
--- src/randr.c.orig	Wed Jun  9 09:58:15 2010
+++ src/randr.c	Thu Nov 18 12:16:53 2010
@@@@ -523,9 +523,13 @@@@ void initialize_randr(xcb_connection_t *conn, int *eve
         const xcb_query_extension_reply_t *extreply;
d11 6
a16 13
         extreply = xcb_get_extension_data(conn, &xcb_randr_id);
-        if (!extreply->present)
+        if (!extreply->present) {
                 disable_randr(conn);
-        else randr_query_outputs(conn);
+                init_workspaces();
+                return;
+        }
+
+        randr_query_outputs(conn);
 
         if (event_base != NULL)
                 *event_base = extreply->first_event;
@


1.1
log
@Bump after libev update.

While here, add two patches from upstream:

"Don't setup event handler when RandR base event is not set"
"Properly call init_workspaces() when RandR is known but not present"

I've found that they are needed (the hard way) when tried to run i3
under Xnest.
@
text
@d1 1
a1 1
$OpenBSD$
@

