head	1.20;
access;
symbols
	OPENBSD_6_2:1.20.0.2
	OPENBSD_6_2_BASE:1.20
	OPENBSD_6_1:1.19.0.2
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.18.0.2
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_7:1.15.0.4
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.2
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.20
date	2017.09.04.14.33.07;	author dcoppa;	state Exp;
branches;
next	1.19;
commitid	glpPfWV0OjZxSF4Z;

1.19
date	2016.11.13.20.46.23;	author dcoppa;	state Exp;
branches;
next	1.18;
commitid	YWcsP0rJp2QqdVhK;

1.18
date	2016.03.09.09.25.51;	author dcoppa;	state Exp;
branches;
next	1.17;
commitid	5e0lb25PYzcoURwg;

1.17
date	2015.12.18.15.53.09;	author dcoppa;	state Exp;
branches;
next	1.16;
commitid	0OqseA58UoyREWdQ;

1.16
date	2015.03.17.15.39.48;	author dcoppa;	state dead;
branches;
next	1.15;
commitid	WQl7M1uD6B2NjHh4;

1.15
date	2014.07.11.15.49.58;	author dcoppa;	state Exp;
branches;
next	1.14;
commitid	dpkYaZL7eWFGPiTd;

1.14
date	2014.01.11.16.04.43;	author dcoppa;	state dead;
branches;
next	1.13;

1.13
date	2013.09.25.09.58.14;	author dcoppa;	state Exp;
branches;
next	1.12;

1.12
date	2013.05.16.18.42.30;	author dcoppa;	state dead;
branches;
next	1.11;

1.11
date	2013.01.11.09.44.12;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2012.12.13.12.10.14;	author dcoppa;	state dead;
branches;
next	1.9;

1.9
date	2012.11.13.08.44.02;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2012.09.27.10.57.46;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2012.09.25.15.06.35;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2012.02.21.14.05.39;	author dcoppa;	state dead;
branches;
next	1.5;

1.5
date	2012.01.20.15.53.18;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.09.11.03.40;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2011.04.07.08.58.10;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.14.12.55.18;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2010.09.14.08.54.18;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.20
log
@
Update to i3-4.14

Tested by Josh Grosse
Tests, feedback and ok tb@@
@
text
@$OpenBSD: patch-src_manage_c,v 1.19 2016/11/13 20:46:23 dcoppa Exp $

Fix size hints for ssh-askpass

--- src/manage.c.orig	Tue Nov  8 19:54:01 2016
+++ src/manage.c	Thu Nov 10 18:04:35 2016
@@@@ -480,10 +480,16 @@@@ void manage_window(xcb_window_t window, xcb_get_window
     if (cwindow->dock)
         want_floating = false;
 
-    /* Plasma windows set their geometry in WM_SIZE_HINTS. */
+    /*
+     * Plasma windows set their geometry in WM_SIZE_HINTS.  Note that
+     * these fields are obsolete, so ignore unless there is a width and
+     * a height specified.
+     */
     if ((wm_size_hints.flags & XCB_ICCCM_SIZE_HINT_US_POSITION || wm_size_hints.flags & XCB_ICCCM_SIZE_HINT_P_POSITION) &&
-        (wm_size_hints.flags & XCB_ICCCM_SIZE_HINT_US_SIZE || wm_size_hints.flags & XCB_ICCCM_SIZE_HINT_P_SIZE)) {
-        DLOG("We are setting geometry according to wm_size_hints x=%d y=%d w=%d h=%d\n",
+        (wm_size_hints.flags & XCB_ICCCM_SIZE_HINT_US_SIZE || wm_size_hints.flags & XCB_ICCCM_SIZE_HINT_P_SIZE) &&
+        wm_size_hints.width != 0 && wm_size_hints.height != 0) {
+        DLOG("We are setting geometry according to the obsolete wm_size_hints "
+             "x=%d y=%d w=%d h=%d\n",
              wm_size_hints.x, wm_size_hints.y, wm_size_hints.width, wm_size_hints.height);
         geom->x = wm_size_hints.x;
         geom->y = wm_size_hints.y;
@


1.19
log
@
Update to i3-4.13

OK tb@@, jasper@@
@
text
@d1 4
a4 1
$OpenBSD: patch-src_manage_c,v 1.18 2016/03/09 09:25:51 dcoppa Exp $
@


1.18
log
@
Update to i3-4.12
Added halex@@'s window hints fix
Fixed trailing whitespace in pkg/DESCR (spotted by Josh Grosse)

Tested by tb@@ and Josh Grosse
OK tb@@
@
text
@d1 4
a4 4
$OpenBSD: patch-src_manage_c,v 1.17 2015/12/18 15:53:09 dcoppa Exp $
--- src/manage.c.orig	Sun Mar  6 16:17:18 2016
+++ src/manage.c	Tue Mar  8 13:31:05 2016
@@@@ -468,10 +468,16 @@@@ void manage_window(xcb_window_t window, xcb_get_window
@


1.17
log
@
Merge all the fixes from the git stable branch of i3
Regen WANTLIB while here
@
text
@d1 6
a6 15
$OpenBSD$

Suppress no_focus for first window on a workspace.

Fix multiple memory leaks with regular expressions.

--- src/manage.c.orig	Wed Sep 30 08:55:10 2015
+++ src/manage.c	Fri Dec 18 13:58:58 2015
@@@@ -294,6 +294,7 @@@@ void manage_window(xcb_window_t window, xcb_get_window
         if (match != NULL && match->insert_where != M_BELOW) {
             DLOG("Removing match %p from container %p\n", match, nc);
             TAILQ_REMOVE(&(nc->swallow_head), match, matches);
+            match_free(match);
         }
     }
d8 16
a23 28
@@@@ -524,13 +525,23 @@@@ void manage_window(xcb_window_t window, xcb_get_window
     /* Send an event about window creation */
     ipc_send_window_event("new", nc);
 
+    if (set_focus && assignment_for(cwindow, A_NO_FOCUS) != NULL) {
+        /* The first window on a workspace should always be focused. We have to
+         * compare with == 1 because the container has already been inserted at
+         * this point. */
+        if (con_num_children(ws) == 1) {
+            DLOG("This is the first window on this workspace, ignoring no_focus.\n");
+        } else {
+            DLOG("no_focus was set for con = %p, not setting focus.\n", nc);
+            set_focus = false;
+        }
+    }
+
     /* Defer setting focus after the 'new' event has been sent to ensure the
      * proper window event sequence. */
     if (set_focus && !nc->window->doesnt_accept_focus && nc->mapped) {
-        if (assignment_for(cwindow, A_NO_FOCUS) == NULL) {
-            DLOG("Now setting focus.\n");
-            con_focus(nc);
-        }
+        DLOG("Now setting focus.\n");
+        con_focus(nc);
     }
 
     tree_render();
@


1.16
log
@
Update to i3-4.9.1

new dependency on x11/xkbcommon
@
text
@d1 1
a1 1
$OpenBSD: patch-src_manage_c,v 1.15 2014/07/11 15:49:58 dcoppa Exp $
d3 1
a3 3
commit 7afe9cc78b4d22dfd5a0c5866382a0e001ea38b6
Author: Tony Crisci <tony@@dubstepdish.com>
Date:   Fri Jun 27 21:20:12 2014 -0400
d5 1
a5 1
Explicitly set current border width when BS_PIXEL
d7 7
a13 19
When a window becomes managed, if the config specifies a pixel border
style, explicitly set the current border width so it does not change
when the container changes from tiling to floating.

commit 1d100d6e168d13752e79918f2410ccc7c492d700
Author: Tony Crisci <tony@@dubstepdish.com>
Date:   Mon Jun 23 17:25:23 2014 -0400

Bugfix: don't focus unmapped container on manage

A window may become unmapped on manage when an assignment command unmaps
the window, such as moving it to the scratchpad or killing it.

This can cause i3 focus to be an unmapped window and different than X
focus which can lead to complications

--- src/manage.c.orig	Sun Jun 15 19:12:43 2014
+++ src/manage.c	Fri Jul 11 16:48:23 2014
@@@@ -450,6 +450,12 @@@@ void manage_window(xcb_window_t window, xcb_get_window
d17 14
a30 4
+    if (nc->border_style == BS_PIXEL) {
+        /* if the border style is BS_PIXEL, explicitly set the border width of
+         * the new container */
+        nc->current_border_width = (want_floating ? config.default_floating_border_width : config.default_border_width);
a32 5
     /* to avoid getting an UnmapNotify event due to reparenting, we temporarily
      * declare no interest in any state change event of this window */
     values[0] = XCB_NONE;
@@@@ -505,7 +511,7 @@@@ void manage_window(xcb_window_t window, xcb_get_window
 
d35 7
a41 4
-    if (set_focus) {
+    if (set_focus && nc->mapped) {
         DLOG("Now setting focus.\n");
         con_focus(nc);
d43 2
@


1.15
log
@
Update to i3-4.8 plus fixes.

Initial diff by Theo Buehler <theo AT math DOT ethz DOT ch>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.14
log
@Update to i3-4.7
@
text
@d1 1
a1 1
$OpenBSD: patch-src_manage_c,v 1.13 2013/09/25 09:58:14 dcoppa Exp $
d3 27
a29 19
commit 1a1d42153408822d267d0cb4718b22d8ff116f27
Author: Michael Stapelberg <michael@@stapelberg.de>
Date:   Tue Sep 24 07:47:36 2013 +0200

Bugfix: correctly recognize assigned windows as urgent

--- src/manage.c.orig	Wed Aug  7 20:50:24 2013
+++ src/manage.c	Wed Sep 25 11:37:50 2013
@@@@ -220,7 +220,8 @@@@ void manage_window(xcb_window_t window, xcb_get_window
     window_update_transient_for(cwindow, xcb_get_property_reply(conn, transient_cookie, NULL));
     window_update_strut_partial(cwindow, xcb_get_property_reply(conn, strut_cookie, NULL));
     window_update_role(cwindow, xcb_get_property_reply(conn, role_cookie, NULL), true);
-    window_update_hints(cwindow, xcb_get_property_reply(conn, wm_hints_cookie, NULL));
+    bool urgency_hint;
+    window_update_hints(cwindow, xcb_get_property_reply(conn, wm_hints_cookie, NULL), &urgency_hint);
 
     xcb_get_property_reply_t *startup_id_reply;
     startup_id_reply = xcb_get_property_reply(conn, startup_id_cookie, NULL);
@@@@ -468,6 +469,12 @@@@ void manage_window(xcb_window_t window, xcb_get_window
d31 5
a35 2
     /* Send an event about window creation */
     ipc_send_window_new_event(nc);
d37 4
a40 5
+    /* Windows might get managed with the urgency hint already set (Pidgin is
+     * known to do that), so check for that and handle the hint accordingly.
+     * This code needs to be in this part of manage_window() because the window
+     * needs to be on the final workspace first. */
+    con_set_urgency(nc, urgency_hint);
d42 7
a48 2
 geom_out:
     free(geom);
@


1.13
log
@
Bugfix: correctly recognize assigned windows as urgent

http://bugs.i3wm.org/report/ticket/1086

upstream git commit 1a1d42153408822d267d0cb4718b22d8ff116f27
@
text
@d1 1
a1 1
$OpenBSD$
@


1.12
log
@Update to i3-4.5.1

ok jasper@@, abieber@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_manage_c,v 1.11 2013/01/11 09:44:12 dcoppa Exp $
d3 3
a5 4
From 138e04fd4d50e5f80d445761de86c0c9617916b3 Mon Sep 17 00:00:00 2001
From: Michael Stapelberg <michael@@stapelberg.de>
Date: Tue, 01 Jan 2013 15:31:08 +0000
Subject: Bugfix: Fix for_window moving of assigned windows (Thanks bafain)
d7 1
a7 1
This fixes a segfault when creating assigned and to be moved windows
d9 9
a17 5
--- src/manage.c.orig	Wed Dec 12 00:08:17 2012
+++ src/manage.c	Fri Jan 11 09:58:48 2013
@@@@ -402,6 +402,10 @@@@ void manage_window(xcb_window_t window, xcb_get_window
     /* Check if any assignments match */
     run_assignments(cwindow);
d19 6
a24 3
+    /* 'ws' may be invalid because of the assignments, e.g. when the user uses
+     * "move window to workspace 1", but had it assigned to workspace 2. */
+    ws = con_get_workspace(nc);
d26 8
a33 3
     /* If this window was put onto an invisible workspace (via assignments), we
      * render this workspace. It wouldn’t be rendered in our normal code path
      * because only the visible workspaces get rendered.
@


1.11
log
@Bugfix for a segfault when creating assigned and to be moved windows
(upstream git commit 138e04fd4d50e5f80d445761de86c0c9617916b3)

While here, do not mention '--shmlog-size' in the i3 manpage: we
don't have this option due to lack of POSIX shared memory support.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.10
log
@Update to i3-4.4
@
text
@d1 1
a1 1
$OpenBSD: patch-src_manage_c,v 1.9 2012/11/13 08:44:02 dcoppa Exp $
d3 1
a3 1
From a3f3d5670ca8ec0414805a4613a20d7b87b78630 Mon Sep 17 00:00:00 2001
d5 2
a6 4
Date: Thu, 27 Sep 2012 10:09:06 +0000
Subject: Bugfix: properly react to windows being unmapped before we can reparent
We need to verify that setting the event mask works, and we need
to include StructureNotify to get unmap events at any point in time.
d8 1
a8 7
From 372d47842e7d71fde0a194761bf77dceed6e724c Mon Sep 17 00:00:00 2001
From: Michael Stapelberg <michael@@stapelberg.de>
Date: Mon, 24 Sep 2012 21:57:58 +0000
Subject: Bugfix: Render workspaces created by assignments to use correct coordinates
Previously, i3 would send width=0, height=0 to windows which were
put on workspaces created by an assignment (that is, invisible
workspaces, which do not get rendered normally).
d10 3
a12 31
--- src/manage.c.orig	Wed Sep 19 18:08:09 2012
+++ src/manage.c	Thu Sep 27 12:50:16 2012
@@@@ -126,11 +126,22 @@@@ void manage_window(xcb_window_t window, xcb_get_window
     uint32_t values[1];
 
     /* Set a temporary event mask for the new window, consisting only of
-     * PropertyChange. We need to be notified of PropertyChanges because the
-     * client can change its properties *after* we requested them but *before*
-     * we actually reparented it and have set our final event mask. */
-    values[0] = XCB_EVENT_MASK_PROPERTY_CHANGE;
-    xcb_change_window_attributes(conn, window, XCB_CW_EVENT_MASK, values);
+     * PropertyChange and StructureNotify. We need to be notified of
+     * PropertyChanges because the client can change its properties *after* we
+     * requested them but *before* we actually reparented it and have set our
+     * final event mask.
+     * We need StructureNotify because the client may unmap the window before
+     * we get to re-parent it.
+     * If this request fails, we assume the client has already unmapped the
+     * window between the MapRequest and our event mask change. */
+    values[0] = XCB_EVENT_MASK_PROPERTY_CHANGE |
+                XCB_EVENT_MASK_STRUCTURE_NOTIFY;
+    xcb_void_cookie_t event_mask_cookie =
+        xcb_change_window_attributes_checked(conn, window, XCB_CW_EVENT_MASK, values);
+    if (xcb_request_check(conn, event_mask_cookie) != NULL) {
+        LOG("Could not change event mask, the window probably already disappeared.\n");
+        goto out;
+    }
 
 #define GET_PROPERTY(atom, len) xcb_get_property(conn, false, window, atom, XCB_GET_PROPERTY_TYPE_ANY, 0, len)
 
@@@@ -381,6 +392,22 @@@@ void manage_window(xcb_window_t window, xcb_get_window
d16 7
a22 19
+    /* If this window was put onto an invisible workspace (via assignments), we
+     * render this workspace. It wouldn't be rendered in our normal code path
+     * because only the visible workspaces get rendered.
+     *
+     * By rendering the workspace, we assign proper coordinates (read: not
+     * width=0, height=0) to the window, which is important for windows who
+     * actually use them to position their GUI elements, e.g. rhythmbox. */
+    if (ws && !workspace_is_visible(ws)) {
+        /* This is a bit hackish: we need to copy the content container's rect
+         * to the workspace, because calling render_con() on the content
+         * container would also take the shortcut and not render the invisible
+         * workspace at all. However, just calling render_con() on the
+         * workspace isn't enough either - it needs the rect. */
+        ws->rect = ws->parent->rect;
+        render_con(ws, true);
+    }
     tree_render();
 
 geom_out:
@


1.9
log
@Bugfix: fix workspace back_and_forth after displaying a scratchpad
window (upstream git commit 81393c93c2810e098966fe4089f3c8ea09f9cbe6)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_manage_c,v 1.8 2012/09/27 10:57:46 dcoppa Exp $
@


1.8
log
@Bugfix: properly react to windows being unmapped before we can
reparent.
We need to verify that setting the event mask works, and we need
to include StructureNotify to get unmap events at any point in time.

From upstream git
@
text
@d1 1
a1 1
$OpenBSD: patch-src_manage_c,v 1.7 2012/09/25 15:06:35 dcoppa Exp $
a6 1

a13 1

@


1.7
log
@Bugfix: Render workspaces created by assignments to use correct
coordinates.
Previously, i3 would send width=0, height=0 to windows which were
put on workspaces created by an assignment (that is, invisible
workspaces, which do not get rendered normally).

from upstream git
@
text
@d1 9
a9 1
$OpenBSD$
d21 30
a50 2
+++ src/manage.c	Tue Sep 25 16:58:40 2012
@@@@ -381,6 +381,22 @@@@ void manage_window(xcb_window_t window, xcb_get_window
@


1.6
log
@Update to i3-4.1.2
@
text
@d1 1
a1 1
$OpenBSD: patch-src_manage_c,v 1.5 2012/01/20 15:53:18 dcoppa Exp $
d3 4
a6 3
Bugfix: respect WM_HINTS.input for WM_TAKE_FOCUS clients. This fixes
problems with some Qt apps
(upstream git commit 2d14ced024416e2074b57290bf7dade7d08899e5)
d8 9
a16 17
--- src/manage.c.orig	Sat Dec 24 16:25:08 2011
+++ src/manage.c	Fri Jan 20 14:29:55 2012
@@@@ -80,7 +80,7 @@@@ void manage_window(xcb_window_t window, xcb_get_window
     xcb_get_property_cookie_t wm_type_cookie, strut_cookie, state_cookie,
                               utf8_title_cookie, title_cookie,
                               class_cookie, leader_cookie, transient_cookie,
-                              role_cookie, startup_id_cookie;
+                              role_cookie, startup_id_cookie, wm_hints_cookie;
 
 
     geomc = xcb_get_geometry(conn, d);
@@@@ -142,6 +142,7 @@@@ void manage_window(xcb_window_t window, xcb_get_window
     class_cookie = GET_PROPERTY(XCB_ATOM_WM_CLASS, 128);
     role_cookie = GET_PROPERTY(A_WM_WINDOW_ROLE, 128);
     startup_id_cookie = GET_PROPERTY(A__NET_STARTUP_ID, 512);
+    wm_hints_cookie = xcb_icccm_get_wm_hints(conn, window);
     /* TODO: also get wm_normal_hints here. implement after we got rid of xcb-event */
d18 17
a34 6
     DLOG("Managing window 0x%08x\n", window);
@@@@ -169,6 +170,7 @@@@ void manage_window(xcb_window_t window, xcb_get_window
     window_update_transient_for(cwindow, xcb_get_property_reply(conn, transient_cookie, NULL));
     window_update_strut_partial(cwindow, xcb_get_property_reply(conn, strut_cookie, NULL));
     window_update_role(cwindow, xcb_get_property_reply(conn, role_cookie, NULL), true);
+    window_update_hints(cwindow, xcb_get_property_reply(conn, wm_hints_cookie, NULL));
d36 1
a36 2
     xcb_get_property_reply_t *startup_id_reply;
     startup_id_reply = xcb_get_property_reply(conn, startup_id_cookie, NULL);
@


1.5
log
@Bugfix: respect WM_HINTS.input for WM_TAKE_FOCUS clients. This fixes
problems with some Qt apps
(upstream git commit 2d14ced024416e2074b57290bf7dade7d08899e5)

Bugfix: either use SetInputFocus *or* send WM_TAKE_FOCUS, not both.
This fixes problems with Oracle/OpenJDK JRE 7.0
(upstream git commit 21a2971b2442ab0881cf79553cc6b65bbb44afa7)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@Update to i3-3.e-bf3 (i3-3.5.3)
@
text
@d1 14
a14 6
$OpenBSD: patch-src_manage_c,v 1.3 2011/04/07 08:58:10 dcoppa Exp $
--- src/manage.c.orig	Wed Jan 19 21:26:37 2011
+++ src/manage.c	Wed Apr  6 13:44:57 2011
@@@@ -477,6 +477,7 @@@@ void reparent_window(xcb_connection_t *conn, xcb_windo
                 redecorate_window(conn, new);
         }
a15 2
+        new->needs_take_focus = client_supports_protocol(conn, new, atoms[WM_TAKE_FOCUS]);
         new->initialized = true;
d17 17
a33 10
         /* Check if the window already got the fullscreen hint set */
@@@@ -512,6 +513,8 @@@@ map:
                         }
                         if (new->container == CUR_CELL || client_is_floating(new)) {
                                 xcb_set_input_focus(conn, XCB_INPUT_FOCUS_POINTER_ROOT, new->child, XCB_CURRENT_TIME);
+                                if (new->needs_take_focus)
+                                        take_focus(conn, new);
                                 ewmh_update_active_window(new->child);
                         }
                 }
@


1.3
log
@Fix problems with Java apps (backported from upstream git)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to i3-3.e-bf2 (aka i3-3.5.2)
@
text
@d1 20
a20 12
$OpenBSD: patch-src_manage_c,v 1.1 2010/09/14 08:54:18 dcoppa Exp $
--- src/manage.c.orig	Wed Jun  9 09:58:15 2010
+++ src/manage.c	Thu Jul 15 14:43:03 2010
@@@@ -273,6 +273,8 @@@@ void reparent_window(xcb_connection_t *conn, xcb_windo
                         if (atom[i] == atoms[_NET_WM_WINDOW_TYPE_DOCK]) {
                                 DLOG("Window is a dock.\n");
                                 Output *t_out = get_output_containing(x, y);
+                                if (t_out == NULL)
+                                        t_out = c_ws->output;
                                 if (t_out != c_ws->output) {
                                         DLOG("Dock client requested to be on output %s by geometry (%d, %d)\n",
                                                         t_out->name, x, y);
@


1.1
log
@Update to i3-3.5.1

resolve_tilde() function by Christopher Zimmermann
(madroach AT zakweb DOT de): thanks!

OK landry@@
@
text
@d1 1
a1 1
$OpenBSD$
@

