head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2017.09.13.12.50.33;	author dcoppa;	state Exp;
branches;
next	1.1;
commitid	ygjP2ceTncTZ5BPk;

1.1
date	2017.09.04.14.33.07;	author dcoppa;	state Exp;
branches;
next	;
commitid	glpPfWV0OjZxSF4Z;


desc
@@


1.2
log
@
Merge fixes from upstream:

Check if con_id exists in cmd_swap
(git commit 369c9ed50f2b9fc2dc904db07907cd5f95f0a5ad)

Set marks to NULL after freeing
realloc() was being called on an already freed pointer.
(git commit b48cbe42af94cf69700843922e57c68b81f3fddd)

Properly initialize sigaction struct
(git commit 09ee12d8e5e1cd219493fde3393dbca10c0cc23f)
@
text
@$OpenBSD: patch-libi3_dpi_c,v 1.1 2017/09/04 14:33:07 dcoppa Exp $

commit e8dbf0171de8c7399dcdfc3c42610e5f3bf418d1
Author: Theo Buehler <tb@@openbsd.org>
Date:   Wed Aug 23 13:48:58 2017

Avoid use of uninitialized in init_dpi_end

If conn == NULL or display == NULL, init_dpi() jumps to init_dpi_end
before (declaring and) initializing resource. In init_dpi_end, there
is a free(resource) call conditionally on resource != NULL, so this
may lead to a bogus free. Found by clang -Wsometimes-uninitialized.

Index: libi3/dpi.c
--- libi3/dpi.c.orig
+++ libi3/dpi.c
@@@@ -24,6 +24,7 @@@@ static long init_dpi_fallback(void) {
  */
 void init_dpi(void) {
     xcb_xrm_database_t *database = NULL;
+    char *resource = NULL;
 
     if (conn == NULL) {
         goto init_dpi_end;
@@@@ -35,7 +36,6 @@@@ void init_dpi(void) {
         goto init_dpi_end;
     }
 
-    char *resource;
     xcb_xrm_resource_get_string(database, "Xft.dpi", NULL, &resource);
     if (resource == NULL) {
         DLOG("Resource Xft.dpi not specified, skipping.\n");
@


1.1
log
@
Update to i3-4.14

Tested by Josh Grosse
Tests, feedback and ok tb@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 10
a12 2
Silence a clang -Wsometimes-uninitialized warning
https://github.com/i3/i3/pull/2875
@

