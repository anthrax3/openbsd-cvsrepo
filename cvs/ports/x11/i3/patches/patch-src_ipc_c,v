head	1.16;
access;
symbols
	OPENBSD_6_0:1.16.0.2
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.4
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.13.0.4
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.2
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.11.0.2
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.16
date	2016.03.09.09.25.51;	author dcoppa;	state Exp;
branches;
next	1.15;
commitid	5e0lb25PYzcoURwg;

1.15
date	2015.12.18.15.53.09;	author dcoppa;	state Exp;
branches;
next	1.14;
commitid	0OqseA58UoyREWdQ;

1.14
date	2015.03.17.15.39.48;	author dcoppa;	state Exp;
branches;
next	1.13;
commitid	WQl7M1uD6B2NjHh4;

1.13
date	2014.07.11.15.49.58;	author dcoppa;	state Exp;
branches;
next	1.12;
commitid	dpkYaZL7eWFGPiTd;

1.12
date	2014.03.12.12.34.27;	author dcoppa;	state Exp;
branches;
next	1.11;

1.11
date	2014.01.22.13.48.38;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2014.01.19.10.25.30;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2012.12.13.12.10.14;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2012.09.21.17.16.14;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2012.05.09.11.56.49;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2011.12.01.16.00.01;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.06.20.23.25;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.09.11.03.40;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2011.05.05.12.19.36;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.29.09.18.53;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.14.08.54.18;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.16
log
@
Update to i3-4.12
Added halex@@'s window hints fix
Fixed trailing whitespace in pkg/DESCR (spotted by Josh Grosse)

Tested by tb@@ and Josh Grosse
OK tb@@
@
text
@$OpenBSD: patch-src_ipc_c,v 1.15 2015/12/18 15:53:09 dcoppa Exp $

Add missing header

--- src/ipc.c.orig	Sun Jun 15 19:12:43 2014
+++ src/ipc.c	Fri Jul 11 16:39:36 2014
@@@@ -12,6 +12,7 @@@@
 #include "all.h"
 #include "yajl_utils.h"
 
+#include <sys/types.h>
 #include <sys/socket.h>
 #include <sys/un.h>
 #include <fcntl.h>
@


1.15
log
@
Merge all the fixes from the git stable branch of i3
Regen WANTLIB while here
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.14 2015/03/17 15:39:48 dcoppa Exp $
d5 2
a6 4
fix a memory leak in handle_get_bar_config

--- src/ipc.c.orig	Wed Sep 30 08:55:10 2015
+++ src/ipc.c	Fri Dec 18 13:58:58 2015
a14 19
@@@@ -894,8 +895,8 @@@@ IPC_HANDLER(get_bar_config) {
 
     /* To get a properly terminated buffer, we copy
      * message_size bytes out of the buffer */
-    char *bar_id = scalloc(message_size + 1, 1);
-    strncpy(bar_id, (const char *)message, message_size);
+    char *bar_id = NULL;
+    sasprintf(&bar_id, "%.*s", message_size, message);
     LOG("IPC: looking for config for bar ID \"%s\"\n", bar_id);
     Barconfig *current, *config = NULL;
     TAILQ_FOREACH(current, &barconfigs, configs) {
@@@@ -905,6 +906,7 @@@@ IPC_HANDLER(get_bar_config) {
         config = current;
         break;
     }
+    free(bar_id);
 
     if (!config) {
         /* If we did not find a config for the given ID, the reply will contain
@


1.14
log
@
Update to i3-4.9.1

new dependency on x11/xkbcommon
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.13 2014/07/11 15:49:58 dcoppa Exp $
d5 4
a8 2
--- src/ipc.c.orig	Sun Jun 15 19:12:43 2014
+++ src/ipc.c	Fri Jul 11 16:39:36 2014
d17 19
@


1.13
log
@
Update to i3-4.8 plus fixes.

Initial diff by Theo Buehler <theo AT math DOT ethz DOT ch>
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.12 2014/03/12 12:34:27 dcoppa Exp $
a4 6
commit c159fc4197ad06d603ba404add501ac02d76c64f
Author: Michael Stapelberg <michael@@stapelberg.de>
Date:   Fri Jun 27 09:04:51 2014 +0200

Bugfix: create the directory for storing the restart state

a14 9
@@@@ -41,7 +42,7 @@@@ static void set_nonblock(int sockfd) {
  * Emulates mkdir -p (creates any missing folders)
  *
  */
-static bool mkdirp(const char *path) {
+bool mkdirp(const char *path) {
     if (mkdir(path, S_IRWXU | S_IRGRP | S_IXGRP | S_IROTH | S_IXOTH) == 0)
         return true;
     if (errno != ENOENT) {
@


1.12
log
@
Bugfix: ipc_receive_message reply memleak
(upstream git commit a16dfdb15e2767d9753d45982b189de6edfdf70b)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.11 2014/01/22 13:48:38 dcoppa Exp $
d5 3
a7 3
commit a16dfdb15e2767d9753d45982b189de6edfdf70b
Author: Tony Crisci <tony@@dubstepdish.com>
Date:   Fri Mar 7 23:56:25 2014 -0500
d9 1
a9 1
Bugfix: ipc_receive_message reply leak
d11 2
a12 6
The function ipc_recv_message in libi3 allocates memory to the location
of the `message` reply in src/ipc_receive_message.c with malloc and must
be freed.

--- src/ipc.c.orig	Thu Jan 23 22:52:24 2014
+++ src/ipc.c	Wed Mar 12 13:16:56 2014
d21 9
a29 36
@@@@ -833,14 +834,16 @@@@ handler_t handlers[8] = {
 static void ipc_receive_message(EV_P_ struct ev_io *w, int revents) {
     uint32_t message_type;
     uint32_t message_length;
-    uint8_t *message;
+    uint8_t *message = NULL;
 
     int ret = ipc_recv_message(w->fd, &message_type, &message_length, &message);
     /* EOF or other error */
     if (ret < 0) {
         /* Was this a spurious read? See ev(3) */
-        if (ret == -1 && errno == EAGAIN)
+        if (ret == -1 && errno == EAGAIN) {
+            FREE(message);
             return;
+        }
 
         /* If not, there was some kind of error. We donâ€™t bother
          * and close the connection */
@@@@ -863,6 +866,7 @@@@ static void ipc_receive_message(EV_P_ struct ev_io *w,
 
         ev_io_stop(EV_A_ w);
         free(w);
+        FREE(message);
 
         DLOG("IPC: client disconnected\n");
         return;
@@@@ -874,6 +878,8 @@@@ static void ipc_receive_message(EV_P_ struct ev_io *w,
         handler_t h = handlers[message_type];
         h(w->fd, message, 0, message_length, message_type);
     }
+
+    FREE(message);
 }
 
 /*
@


1.11
log
@Bugfix update to i3-4.7.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.10 2014/01/19 10:25:30 dcoppa Exp $
d5 12
a16 2
--- src/ipc.c.orig	Sun Dec 22 21:12:41 2013
+++ src/ipc.c	Sat Jan 18 23:05:20 2014
d25 36
@


1.10
log
@
i3bar Bugfix: don't show "EOF" status line error
(upstream git commit 612d25c12cd1bd9ff4167e8530fe9a2c54a619e4)

Bugfix: `move <direction>` sends workspace focus
(upstream git commit 76393377160ffd043757ca2dd8d947aa25f69716)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.9 2012/12/13 12:10:14 dcoppa Exp $
a4 12
commit 76393377160ffd043757ca2dd8d947aa25f69716
Author: Tony Crisci <tony@@dubstepdish.com>
Date:   Mon Jan 13 15:36:11 2014 -0500

Bugfix: `move <direction>` sends workspace focus

Make sure the command `move <direction>` properly sends the workspace
focus ipc event required for i3bar to be properly updated and redrawn.

Make `ipc_send_workspace_focus_event publicly available from ipc.h for
more flexible event sending.

a14 39
@@@@ -960,4 +961,38 @@@@ int ipc_create_socket(const char *filename) {
 
     current_socketpath = resolved;
     return sockfd;
+}
+
+/*
+ * For the workspace "focus" event we send, along the usual "change" field,
+ * also the current and previous workspace, in "current" and "old"
+ * respectively.
+ */
+void ipc_send_workspace_focus_event(Con *current, Con *old) {
+    setlocale(LC_NUMERIC, "C");
+    yajl_gen gen = ygenalloc();
+
+    y(map_open);
+
+    ystr("change");
+    ystr("focus");
+
+    ystr("current");
+    dump_node(gen, current, false);
+
+    ystr("old");
+    if (old == NULL)
+        y(null);
+    else
+        dump_node(gen, old, false);
+
+    y(map_close);
+
+    const unsigned char *payload;
+    ylength length;
+    y(get_buf, &payload, &length);
+
+    ipc_send_event("workspace", I3_IPC_EVENT_WORKSPACE, (const char *)payload);
+    y(free);
+    setlocale(LC_NUMERIC, "");
 }
@


1.9
log
@Update to i3-4.4
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.8 2012/09/21 17:16:14 dcoppa Exp $
d5 14
a18 2
--- src/ipc.c.orig	Wed Dec 12 00:08:17 2012
+++ src/ipc.c	Thu Dec 13 09:45:54 2012
d27 39
@


1.8
log
@Update to i3-4.3

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.7 2012/05/09 11:56:49 dcoppa Exp $
d5 3
a7 4
--- src/ipc.c.orig	Wed Sep 19 18:08:09 2012
+++ src/ipc.c	Thu Sep 20 14:12:10 2012
@@@@ -11,6 +11,7 @@@@
  */
d9 1
@


1.7
log
@Update to i3-4.2

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.6 2011/12/01 16:00:01 dcoppa Exp $
d5 3
a7 3
--- src/ipc.c.orig	Mon May  7 17:04:44 2012
+++ src/ipc.c	Mon May  7 17:04:58 2012
@@@@ -9,6 +9,7 @@@@
@


1.6
log
@Major update to i3-4.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.5 2011/11/06 20:23:25 dcoppa Exp $
d3 1
a3 1
missing header
d5 2
a6 2
--- src/ipc.c.orig	Wed Nov 30 17:03:50 2011
+++ src/ipc.c	Wed Nov 30 17:04:05 2011
@


1.5
log
@Update to i3-4.0.2 (plus patches from upstream git).
i3bar is now part of i3 itself and i3-wsbar is gone.
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 11
bugfix: properly free memory/close fd upon errors
(upstream git commit e1631d6320cf6b47c3b46f0b56ae970986c9c20c)

bugfix: IPC: Correctly dump the 'focus' array
(upstream git commit abaa8c23564410ce4037ecb550b253a0e37bcbf0)

--- src/ipc.c.orig	Sun Aug 28 19:48:13 2011
+++ src/ipc.c	Mon Oct 31 12:53:38 2011
@@@@ -10,6 +10,7 @@@@
  * ipc.c: Everything about the UNIX domain sockets for IPC
  *
d9 2
a14 21
@@@@ -59,8 +60,10 @@@@ static bool mkdirp(const char *path) {
         copy[strlen(copy)-1] = '\0';
 
     char *sep = strrchr(copy, '/');
-    if (sep == NULL)
+    if (sep == NULL) {
+        FREE(copy);
         return false;
+    }
     *sep = '\0';
     bool result = false;
     if (mkdirp(copy))
@@@@ -277,7 +280,7 @@@@ void dump_node(yajl_gen gen, struct Con *con, bool inp
 
     ystr("focus");
     y(array_open);
-    TAILQ_FOREACH(node, &(con->focus_head), nodes) {
+    TAILQ_FOREACH(node, &(con->focus_head), focused) {
         y(integer, (long int)node);
     }
     y(array_close);
@


1.4
log
@Update to i3-3.e-bf3 (i3-3.5.3)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.3 2011/05/05 12:19:36 dcoppa Exp $
d3 39
a41 55
--- src/ipc.c.orig	Sun May  8 14:20:41 2011
+++ src/ipc.c	Mon May  9 11:30:45 2011
@@@@ -92,7 +92,7 @@@@ static void ipc_send_message(int fd, const unsigned ch
         char msg[buffer_size];
         char *walk = msg;
 
-        strcpy(walk, "i3-ipc");
+        strncpy(walk, "i3-ipc", buffer_size - 1);
         walk += strlen("i3-ipc");
         memcpy(walk, &message_size, sizeof(uint32_t));
         walk += sizeof(uint32_t);
@@@@ -530,20 +530,20 @@@@ void ipc_new_client(EV_P_ struct ev_io *w, int revents
 int ipc_create_socket(const char *filename) {
         int sockfd;
 
-        char *globbed = glob_path(filename);
-        DLOG("Creating IPC-socket at %s\n", globbed);
-        char *copy = sstrdup(globbed);
+        char *resolved = resolve_tilde(filename);
+        DLOG("Creating IPC-socket at %s\n", resolved);
+        char *copy = sstrdup(resolved);
         const char *dir = dirname(copy);
         if (!path_exists(dir))
                 mkdirp(dir);
         free(copy);
 
         /* Unlink the unix domain socket before */
-        unlink(globbed);
+        unlink(resolved);
 
         if ((sockfd = socket(AF_LOCAL, SOCK_STREAM, 0)) < 0) {
                 perror("socket()");
-                free(globbed);
+                free(resolved);
                 return -1;
         }
 
@@@@ -552,14 +552,14 @@@@ int ipc_create_socket(const char *filename) {
         struct sockaddr_un addr;
         memset(&addr, 0, sizeof(struct sockaddr_un));
         addr.sun_family = AF_LOCAL;
-        strcpy(addr.sun_path, globbed);
+        strncpy(addr.sun_path, resolved, sizeof(addr.sun_path) - 1);
         if (bind(sockfd, (struct sockaddr*)&addr, sizeof(struct sockaddr_un)) < 0) {
                 perror("bind()");
-                free(globbed);
+                free(resolved);
                 return -1;
         }
 
-        free(globbed);
+        free(resolved);
         set_nonblock(sockfd);
 
         if (listen(sockfd, 5) < 0) {
@


1.3
log
@libyajl-2.0 compatibility fixes (API got changed)

OK landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ipc_c,v 1.2 2011/04/29 09:18:53 dcoppa Exp $
d3 3
a5 5
Make code compatible with libyajl-2.0 (API got changed)

--- src/ipc.c.orig	Wed Jan 19 21:26:37 2011
+++ src/ipc.c	Mon May  2 11:35:58 2011
@@@@ -91,7 +91,7 @@@@ static void ipc_send_message(int fd, const unsigned ch
d14 1
a14 75
@@@@ -182,7 +182,7 @@@@ IPC_HANDLER(get_workspaces) {
         if (last_focused == SLIST_END(&(c_ws->focus_stack)))
                 last_focused = NULL;
 
-        yajl_gen gen = yajl_gen_alloc(NULL, NULL);
+        yajl_gen gen = yajl_gen_alloc(NULL);
         y(array_open);
 
         TAILQ_FOREACH(ws, workspaces, workspaces) {
@@@@ -226,7 +226,7 @@@@ IPC_HANDLER(get_workspaces) {
         y(array_close);
 
         const unsigned char *payload;
-        unsigned int length;
+        size_t length;
         y(get_buf, &payload, &length);
 
         ipc_send_message(fd, payload, I3_IPC_REPLY_TYPE_WORKSPACES, length);
@@@@ -241,7 +241,7 @@@@ IPC_HANDLER(get_workspaces) {
 IPC_HANDLER(get_outputs) {
         Output *output;
 
-        yajl_gen gen = yajl_gen_alloc(NULL, NULL);
+        yajl_gen gen = yajl_gen_alloc(NULL);
         y(array_open);
 
         TAILQ_FOREACH(output, &outputs, outputs) {
@@@@ -276,7 +276,7 @@@@ IPC_HANDLER(get_outputs) {
         y(array_close);
 
         const unsigned char *payload;
-        unsigned int length;
+        size_t length;
         y(get_buf, &payload, &length);
 
         ipc_send_message(fd, payload, I3_IPC_REPLY_TYPE_OUTPUTS, length);
@@@@ -288,7 +288,7 @@@@ IPC_HANDLER(get_outputs) {
  *
  */
 static int add_subscription(void *extra, const unsigned char *s,
-                            unsigned int len) {
+                            size_t len) {
         ipc_client *client = extra;
 
         DLOG("should add subscription to extra %p, sub %.*s\n", client, len, s);
@@@@ -338,7 +338,7 @@@@ IPC_HANDLER(subscribe) {
         memset(&callbacks, 0, sizeof(yajl_callbacks));
         callbacks.yajl_string = add_subscription;
 
-        p = yajl_alloc(&callbacks, NULL, NULL, (void*)client);
+        p = yajl_alloc(&callbacks, NULL, (void*)client);
         stat = yajl_parse(p, (const unsigned char*)message, message_size);
         if (stat != yajl_status_ok) {
                 unsigned char *err;
@@@@ -437,7 +437,8 @@@@ static void ipc_receive_message(EV_P_ struct ev_io *w,
                 n -= strlen(I3_IPC_MAGIC);
 
                 /* The next 32 bit after the magic are the message size */
-                uint32_t message_size = *((uint32_t*)message);
+                uint32_t message_size;
+                memcpy(&message_size, (uint32_t*)message, sizeof(uint32_t));
                 message += sizeof(uint32_t);
                 n -= sizeof(uint32_t);
 
@@@@ -447,7 +448,8 @@@@ static void ipc_receive_message(EV_P_ struct ev_io *w,
                 }
 
                 /* The last 32 bits of the header are the message type */
-                uint32_t message_type = *((uint32_t*)message);
+                uint32_t message_type;
+                memcpy(&message_type, (uint32_t*)message, sizeof(uint32_t));
                 message += sizeof(uint32_t);
                 n -= sizeof(uint32_t);
 
@@@@ -502,20 +504,20 @@@@ void ipc_new_client(EV_P_ struct ev_io *w, int revents
d40 1
a40 1
@@@@ -524,14 +526,14 @@@@ int ipc_create_socket(const char *filename) {
@


1.2
log
@Fix unaligned memory access on sparc.
Patch already committed upstream
@
text
@d1 4
a4 1
$OpenBSD: patch-src_ipc_c,v 1.1 2010/09/14 08:54:18 dcoppa Exp $
d6 1
a6 1
+++ src/ipc.c	Wed Apr 27 16:56:21 2011
d16 54
@


1.1
log
@Update to i3-3.5.1

resolve_tilde() function by Christopher Zimmermann
(madroach AT zakweb DOT de): thanks!

OK landry@@
@
text
@d1 3
a3 3
$OpenBSD$
--- src/ipc.c.orig	Wed Jun  9 09:58:15 2010
+++ src/ipc.c	Thu Jul 15 14:43:03 2010
d13 21
a33 1
@@@@ -502,20 +502,20 @@@@ void ipc_new_client(EV_P_ struct ev_io *w, int revents
d59 1
a59 1
@@@@ -524,14 +524,14 @@@@ int ipc_create_socket(const char *filename) {
@

