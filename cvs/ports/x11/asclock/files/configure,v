head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.66
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.64
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.60
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.62
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.58
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.56
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.54
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.52
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.50
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.48
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.46
	OPENBSD_5_0:1.1.0.44
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.42
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.40
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.38
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.36
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.34
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.32
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.30
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.28
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.26
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.24
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.22
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.20
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.18
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.16
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.14
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.12
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.10
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.8
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.6
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2001.01.06.16.43.44;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to 2.0.12; requested and tested by Joshua Stein <jcs@@rt.fm>.
- Docks under WindowMaker.
- The port now supports three themes with 19 localizations each, plus
  five fixed themes, for a total of 62 different flavors.
@
text
@#!/usr/bin/perl -w
#
# $OpenBSD$

use strict;

my @@themes = split " ", $ENV{THEMES} or die "$0: must define THEMES\n";
my @@classics = split " ", $ENV{CLASSICS} or die "$0: must define CLASSICS\n";
my @@languages = split " ", $ENV{LANGUAGES} or die "$0: must define LANGUAGES\n";
my @@flavor = split " ", $ENV{FLAVOR} or die "$0: must define FLAVOR\n";
my (%theme, %classic, %lang);
my $action;

if ($ARGV[0] eq 'chk') {
    $action = 0;
} elsif ($ARGV[0] eq 'conf') {
    $action = 1;
} else {
    die "usage: $0 chk|conf\n";
}

my $wrksrc = $ENV{WRKSRC} or die "$0: must define WRKSRC\n" if $action;

foreach my $i (@@themes) { $theme{lc $i} = $i };
foreach my $i (@@classics) { $classic{lc $i} = 1 };
foreach my $i (@@languages) { $lang{$i} = 1 };

chdir $wrksrc or die "$0: can't chdir to $wrksrc: $!\n" if $action;

if ($#flavor == 0) {
    &invalid_flavor if !$theme{$flavor[0]} || $classic{$flavor[0]};
    symlink "themes/$theme{$flavor[0]}", "default_theme" if $action;
} elsif ($#flavor == 1) {
    if ($classic{$flavor[0]} && $lang{$flavor[1]}) {
	;
    } elsif ($classic{$flavor[1]} && $lang{$flavor[0]}) {
	@@flavor = ($flavor[1], $flavor[0]);
    } else {
	&invalid_flavor;
    }
    mkdir "default_theme" if $action;
    foreach my $i (qw(config date.xpm clock.xpm led.xpm hour.xpm
		      minute.xpm second.xpm beats.xpm)) {
	symlink "../themes/$theme{$flavor[0]}/$i","default_theme/$i" if $action;
    }
    foreach my $i (qw(month.xpm weekday.xpm)) {
	symlink "../languages/$flavor[1]/$i", "default_theme/$i" if $action;
    }
} else {
    &invalid_flavor;
}

sub invalid_flavor {
    my (@@a, $i);

    print STDERR "$0: invalid FLAVOR: @@flavor\n\n";
    print STDERR "Available flavors are:\n";
    @@a = sort keys %theme;
    for ($i = 0; $i <= $#a; $i++) {
	print STDERR "\t" if $i % 4 == 0;
	print STDERR $a[$i];
	print STDERR " <lang>" if $classic{$a[$i]};
	print STDERR ($i % 4 == 3) ? "\n" : ", " if $i != $#a;
    }
    print STDERR "\nwhere <lang> is a choice from\n";
    @@a = sort keys %lang;
    for ($i = 0; $i <= $#a; $i++) {
	print STDERR "\t" if $i % 6 == 0;
	print STDERR $a[$i];
	print STDERR ($i % 6 == 5) ? "\n" : ", " if $i != $#a;
    }
    print STDERR "\n";
    exit 2;
}
@
