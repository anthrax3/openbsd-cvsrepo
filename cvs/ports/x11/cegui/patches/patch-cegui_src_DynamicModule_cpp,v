head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.4
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.1.0.8
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	pascal_20140820:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.08.31.16.18.58;	author pascal;	state Exp;
branches;
next	1.1;
commitid	HOx88xnklWJ1RqDB;

1.1
date	2014.08.19.22.35.01;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	LyTwgb8GsYoIUoKI;

1.1.1.1
date	2014.08.19.22.35.01;	author pascal;	state Exp;
branches;
next	;
commitid	LyTwgb8GsYoIUoKI;


desc
@@


1.2
log
@Update to CEGUI 0.8.5.
@
text
@$OpenBSD: patch-cegui_src_DynamicModule_cpp,v 1.1.1.1 2014/08/19 22:35:01 pascal Exp $
--- cegui/src/DynamicModule.cpp.orig.port	Sun Feb 28 00:48:50 2016
+++ cegui/src/DynamicModule.cpp	Fri Apr  1 11:39:44 2016
@@@@ -42,7 +42,7 @@@@
     typedef HMODULE DYNLIB_HANDLE;
 #endif
 
-#if defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__HAIKU__) || defined(__CYGWIN__)
+#if defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__HAIKU__) || defined(__CYGWIN__)
 #   include "dlfcn.h"
 #   define DYNLIB_LOAD( a ) dlopen( (a).c_str(), RTLD_LAZY )
 #   define DYNLIB_GETSYM( a, b ) dlsym( a, (b).c_str() )
@@@@ -200,7 +200,7 @@@@ DynamicModule::DynamicModule(const String& name) :
 
     d_pimpl->d_handle = DynLibLoad(d_pimpl->d_moduleName);
 
-#if defined(__linux__) || defined(__APPLE__) || defined(__MINGW32__) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__HAIKU__)
+#if defined(__linux__) || defined(__APPLE__) || defined(__MINGW32__) || defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__) || defined(__HAIKU__)
     // see if adding a leading 'lib' helps us to open the library
     if (!d_pimpl->d_handle && d_pimpl->d_moduleName.compare(0, 3, "lib") != 0)
     {
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- cegui/src/DynamicModule.cpp.orig.port	Mon Jul  7 09:06:18 2014
+++ cegui/src/DynamicModule.cpp	Mon Jul 14 09:53:20 2014
d13 1
a13 1
@@@@ -198,7 +198,7 @@@@ DynamicModule::DynamicModule(const String& name) :
@


1.1.1.1
log
@Import x11/cegui.  feedback bentley@@/kirby@@, ok kirby@@

Crazy Eddie's GUI System is a free library providing windowing and
widgets for graphics APIs / engines where such functionality is not
natively available, or severely lacking. The library is object
orientated, written in C++, and targeted at games developers who
should be spending their time creating great games, not building
GUI sub-systems!
@
text
@@
