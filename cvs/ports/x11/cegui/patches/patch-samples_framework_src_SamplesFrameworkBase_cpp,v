head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.8
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	pascal_20140820:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.08.31.16.18.58;	author pascal;	state Exp;
branches;
next	1.1;
commitid	HOx88xnklWJ1RqDB;

1.1
date	2014.08.19.22.35.01;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	LyTwgb8GsYoIUoKI;

1.1.1.1
date	2014.08.19.22.35.01;	author pascal;	state Exp;
branches;
next	;
commitid	LyTwgb8GsYoIUoKI;


desc
@@


1.2
log
@Update to CEGUI 0.8.5.
@
text
@$OpenBSD: patch-samples_framework_src_SamplesFrameworkBase_cpp,v 1.1.1.1 2014/08/19 22:35:01 pascal Exp $
--- samples_framework/src/SamplesFrameworkBase.cpp.orig.port	Sun Feb 28 00:48:50 2016
+++ samples_framework/src/SamplesFrameworkBase.cpp	Fri Apr  1 11:39:44 2016
@@@@ -34,7 +34,7 @@@@
 // includes for renderer selector classes
 #if defined( __WIN32__ ) || defined( _WIN32 )
 #   include "Win32CEGuiRendererSelector.h"
-#elif defined(__linux__) || defined(__FreeBSD__) || defined(__NetBSD__)  || defined(__HAIKU__)
+#elif defined(__linux__) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__HAIKU__)
 #   ifdef CEGUI_SAMPLES_USE_GTK2
 #       include "GTK2CEGuiRendererSelector.h"
 #   else
@@@@ -180,7 +180,7 @@@@ bool SamplesFrameworkBase::initialise
     d_rendererSelector->setRendererAvailability(Direct3D11GuiRendererType);
 #endif
 
-#elif defined(__linux__) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__HAIKU__)
+#elif defined(__linux__) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__HAIKU__)
     // decide which method to use for renderer selection
 #   ifdef CEGUI_SAMPLES_USE_GTK2
         d_rendererSelector = new GTK2CEGuiRendererSelector();
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- samples_framework/src/SamplesFrameworkBase.cpp.orig.port	Mon Jul  7 09:06:18 2014
+++ samples_framework/src/SamplesFrameworkBase.cpp	Sat Jul 12 22:00:56 2014
d13 2
a14 1
@@@@ -168,7 +168,7 @@@@ bool SamplesFrameworkBase::runApplication()
a16 1
 
a21 7
@@@@ -323,4 +323,4 @@@@ void SamplesFrameworkBase::setApplicationWindowSize(in
 {
     d_appWindowWidth = width;
     d_appWindowHeight = height;
-}
\ No newline at end of file
+}
@


1.1.1.1
log
@Import x11/cegui.  feedback bentley@@/kirby@@, ok kirby@@

Crazy Eddie's GUI System is a free library providing windowing and
widgets for graphics APIs / engines where such functionality is not
natively available, or severely lacking. The library is object
orientated, written in C++, and targeted at games developers who
should be spending their time creating great games, not building
GUI sub-systems!
@
text
@@
