head	1.6;
access;
symbols
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.2
	OPENBSD_4_4_BASE:1.1.1.1
	jasper_20080317:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2010.10.01.07.09.11;	author ajacoutot;	state dead;
branches;
next	1.5;

1.5
date	2009.10.13.14.21.16;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2009.03.23.11.29.36;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2009.03.19.12.04.39;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.21.19.05.30;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2008.03.17.19.11.58;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.03.17.19.11.58;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Forgot to cvs rm, spotted by landry@@
@
text
@$OpenBSD: patch-src_orca_orca_in,v 1.5 2009/10/13 14:21:16 jasper Exp $
--- src/orca/orca.in.orig	Tue Oct 13 15:58:07 2009
+++ src/orca/orca.in	Tue Oct 13 15:59:10 2009
@@@@ -28,11 +28,6 @@@@
 # __copyright__ = "Copyright (c) 2006-2008 Sun Microsystems Inc."
 # __license__   = "LGPL"
 
-# Set the user's $PATH for this script.
-#
-PATH="${PATH}:/usr/ccs/bin:/usr/bin:/usr/sbin:/bin:/usr/sfw/bin:/usr/openwin/bin:/usr/X11R6/bin"
-export PATH
-
 # Save the arguments away.
 #
 ARGS="$*"
@@@@ -84,7 +79,7 @@@@ restoreXmodmap()
 cleanup()
 {
     USERID=`id | cut -f2 -d= | cut -f1 -d\(`
-    PIDS=`ps -eo pid,ruid,args | grep $USERID | \
+    PIDS=`ps -xo pid,ruid,args | grep $USERID | \
 	egrep "orca[.]orca|OAFIID[:]GNOME_Speech|OAFIID[:]GNOME_Magnifier|festival [-][-]server"|\
 	grep -v grep | awk '{ print $1 }'`
     IFS='
@


1.5
log
@- update orca to 2.28.0
@
text
@d1 1
a1 1
$OpenBSD: patch-src_orca_orca_in,v 1.4 2009/03/23 11:29:36 ajacoutot Exp $
@


1.4
log
@- missing `|'
@
text
@d1 4
a4 10
$OpenBSD: patch-src_orca_orca_in,v 1.3 2009/03/19 12:04:39 ajacoutot Exp $
--- src/orca/orca.in.orig	Fri Jan 23 22:35:24 2009
+++ src/orca/orca.in	Thu Mar 19 12:12:37 2009
@@@@ -1,4 +1,4 @@@@
-#!/bin/bash
+#!/bin/sh
 #
 # Orca
 #
@@@@ -28,10 +28,6 @@@@
d10 2
a11 1
-export PATH="${PATH}:/usr/ccs/bin:/usr/bin:/usr/sbin:/bin:/usr/sfw/bin:/usr/openwin/bin:/usr/X11R6/bin"
d16 1
a16 1
@@@@ -83,7 +79,7 @@@@ restoreXmodmap()
a24 18
@@@@ -137,7 +133,7 @@@@ if [ "x$LOGNAME" != "xgdm" ] ; then
     fi
 fi
 
-if [ `grep -c "\-q" <<< $ARGS` -gt 0 ] ; then
+if [ `echo $ARGS | grep -c "\-q"` -gt 0 ] ; then
     # If the user has done -q or --quit, that means to tell any
     # existing orca process to quit.  So, we just do a cleanup.
     #
@@@@ -154,7 +150,7 @@@@ else
     if [ "x$ARGS" = "x" ] ; then
         CLEANUP=1
     else
-        CLEANUP=`egrep -c "\-s|\-t|\-n|\-u|\-e|\-d" <<< $ARGS`
+        CLEANUP=`echo $ARGS | egrep -c "\-s|\-t|\-n|\-u|\-e|\-d"`
     fi
 
     # Clean up before running orca to get anything that might
@


1.3
log
@- give this a chance to work
@
text
@d1 1
a1 1
$OpenBSD: patch-src_orca_orca_in,v 1.2 2008/11/21 19:05:30 jasper Exp $
d44 1
a44 1
+        CLEANUP=`echo $ARGS egrep -c "\-s|\-t|\-n|\-u|\-e|\-d"`
@


1.2
log
@- update orca to 2.24.1
- specify license version
- shorten BUILD_DEPENDS

feedback and ok ajacoutot@@
@
text
@d1 3
a3 3
$OpenBSD: patch-src_orca_orca_in,v 1.1.1.1 2008/03/17 19:11:58 jasper Exp $
--- src/orca/orca.in.orig	Tue Nov 18 13:08:42 2008
+++ src/orca/orca.in	Tue Nov 18 13:12:43 2008
d21 9
d35 1
a35 1
+if [ `echo $ARGS | grep -c "\-q"` -gt 0 ]
d44 1
a44 1
+        CLEANUP=`echo $ARGS | egrep -c "\-s|\-t|\-n|\-u|\-e|\-d"" <<< $ARGS`
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- src/orca/orca.in.orig	Fri Dec 28 12:30:02 2007
+++ src/orca/orca.in	Fri Dec 28 12:31:02 2007
d10 3
a12 1
@@@@ -30,7 +30,7 @@@@
d14 5
a18 1
 # Set the user's $PATH for this script.
d20 4
a23 2
-export PATH="/usr/ccs/bin:/usr/bin:/usr/sbin:/bin:/usr/sfw/bin:/usr/openwin/bin:/usr/X11R6/bin"
+#export PATH="/usr/ccs/bin:/usr/bin:/usr/sbin:/bin:/usr/sfw/bin:/usr/openwin/bin:/usr/X11R6/bin"
d25 8
a32 10
 # If you set RUNONCE to "true", then this will just run Orca once and quit.
 #
@@@@ -258,7 +258,7 @@@@ if [ "x$RUNONCE" = "xfalse" -a "x$ARGS" = "x" ]
 then
     main
 else
-    if [ `grep -c "\-q" <<< $ARGS` -gt 0 ]
+    if [ `echo $ARGS | grep -c "\-q"` -gt 0 ]
     then
         cleanup
d34 5
a38 9
@@@@ -270,7 +270,7 @@@@ else
         # erroneously types an illegal command line argument, the
         # help text is emitted and the other orca is not killed.
         #
-        if [ `egrep -c "\-s|\-g|\-t|\-n|\-u|\-e|\-d" <<< $ARGS` -eq 0 ]
+        if [ `echo $ARGS | egrep -c "\-s|\-g|\-t|\-n|\-u|\-e|\-d"` -eq 0 ]
         then
             runOrca "NO_CLEANUP"
         else
@


1.1.1.1
log
@import orca 2.20.2

Orca is a free, open source, flexible, extensible, and powerful
assistive technology for people with visual impairments. Using various
combinations of speech synthesis, braille, and magnification, Orca helps
provide access to applications and toolkits that support the AT-SPI
(e.g., the GNOME desktop).

feedback and ok ajacoutot@@
@
text
@@
