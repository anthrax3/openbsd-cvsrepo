head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.11.04.10.11.02;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	6sXkc2esPiHHuFGK;

1.2
date	2016.10.31.16.15.09;	author jasper;	state Exp;
branches;
next	1.1;
commitid	qS83CxPWE9UbPuo1;

1.1
date	2014.10.21.13.11.03;	author ajacoutot;	state Exp;
branches;
next	;
commitid	POd27gW2X0jVtpbK;


desc
@@


1.3
log
@Drop a systemd specific function that's in the way.
@
text
@$OpenBSD: patch-js_misc_loginManager_js,v 1.2 2016/10/31 16:15:09 jasper Exp $

REVERT:
From ddea54a5398c123a4711243e55811c8ba26f8b85 Mon Sep 17 00:00:00 2001
From: Victor Toso <victortoso@@redhat.com>
Date: Thu, 12 May 2016 09:25:49 +0200
Subject: ScreenShield: set LockedHint property from systemd

REVERT:
From a244c1e987502e359c45c0a9bc0012b5bc635553 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Florian=20M=C3=BCllner?= <fmuellner@@gnome.org>
Date: Thu, 24 Apr 2014 17:55:56 +0200
Subject: loginManager: Kill ConsoleKit support

--- js/misc/loginManager.js.orig	Sat Aug 20 01:42:50 2016
+++ js/misc/loginManager.js	Fri Nov  4 10:57:19 2016
@@@@ -40,15 +40,38 @@@@ const SystemdLoginSessionIface = '<node> \
 <signal name="Lock" /> \
 <signal name="Unlock" /> \
 <property name="Active" type="b" access="read" /> \
-<method name="SetLockedHint"> \
-    <arg type="b" direction="in"/> \
-</method> \
 </interface> \
 </node>';
 
 const SystemdLoginManager = Gio.DBusProxy.makeProxyWrapper(SystemdLoginManagerIface);
 const SystemdLoginSession = Gio.DBusProxy.makeProxyWrapper(SystemdLoginSessionIface);
 
+const ConsoleKitManagerIface = '<node> \
+<interface name="org.freedesktop.ConsoleKit.Manager"> \
+<method name="CanRestart"> \
+    <arg type="b" direction="out"/> \
+</method> \
+<method name="CanStop"> \
+    <arg type="b" direction="out"/> \
+</method> \
+<method name="Restart" /> \
+<method name="Stop" /> \
+<method name="GetCurrentSession"> \
+    <arg type="o" direction="out" /> \
+</method> \
+</interface> \
+</node>';
+
+const ConsoleKitSessionIface = '<node> \
+<interface name="org.freedesktop.ConsoleKit.Session"> \
+<signal name="Lock" /> \
+<signal name="Unlock" /> \
+</interface> \
+</node>';
+
+const ConsoleKitSession = Gio.DBusProxy.makeProxyWrapper(ConsoleKitSessionIface);
+const ConsoleKitManager = Gio.DBusProxy.makeProxyWrapper(ConsoleKitManagerIface);
+
 function haveSystemd() {
     return GLib.access("/run/systemd/seats", 0) >= 0;
 }
@@@@ -78,7 +101,7 @@@@ function canLock() {
                                                -1, null);
 
         let version = result.deep_unpack()[0].deep_unpack();
-        return haveSystemd() && versionCompare('3.5.91', version);
+        return versionCompare('3.5.91', version);
     } catch(e) {
         return false;
     }
@@@@ -96,7 +119,7 @@@@ function getLoginManager() {
         if (haveSystemd())
             _loginManager = new LoginManagerSystemd();
         else
-            _loginManager = new LoginManagerDummy();
+            _loginManager = new LoginManagerConsoleKit();
     }
 
     return _loginManager;
@@@@ -113,6 +136,9 @@@@ const LoginManagerSystemd = new Lang.Class({
                                   Lang.bind(this, this._prepareForSleep));
     },
 
+    // Having this function is a bit of a hack since the Systemd and ConsoleKit
+    // session objects have different interfaces - but in both cases there are
+    // Lock/Unlock signals, and that's all we count upon at the moment.
     getCurrentSessionProxy: function(callback) {
         if (this._currentSession) {
             callback (this._currentSession);
@@@@ -183,13 +209,35 @@@@ const LoginManagerSystemd = new Lang.Class({
 });
 Signals.addSignalMethods(LoginManagerSystemd.prototype);
 
-const LoginManagerDummy = new Lang.Class({
-    Name: 'LoginManagerDummy',
+const LoginManagerConsoleKit = new Lang.Class({
+    Name: 'LoginManagerConsoleKit',
 
+    _init: function() {
+        this._proxy = new ConsoleKitManager(Gio.DBus.system,
+                                            'org.freedesktop.ConsoleKit',
+                                            '/org/freedesktop/ConsoleKit/Manager');
+    },
+
+    // Having this function is a bit of a hack since the Systemd and ConsoleKit
+    // session objects have different interfaces - but in both cases there are
+    // Lock/Unlock signals, and that's all we count upon at the moment.
     getCurrentSessionProxy: function(callback) {
-        // we could return a DummySession object that fakes whatever callers
-        // expect (at the time of writing: connect() and connectSignal()
-        // methods), but just never calling the callback should be safer
+        if (this._currentSession) {
+            callback (this._currentSession);
+            return;
+        }
+
+        this._proxy.GetCurrentSessionRemote(Lang.bind(this,
+            function(result, error) {
+                if (error) {
+                    logError(error, 'Could not get a proxy for the current session');
+                } else {
+                    this._currentSession = new ConsoleKitSession(Gio.DBus.system,
+                                                                 'org.freedesktop.ConsoleKit',
+                                                                 result[0]);
+                    callback(this._currentSession);
+                }
+            }));
     },
 
     canSuspend: function(asyncCallback) {
@@@@ -209,4 +257,4 @@@@ const LoginManagerDummy = new Lang.Class({
         callback(null);
     }
 });
-Signals.addSignalMethods(LoginManagerDummy.prototype);
+Signals.addSignalMethods(LoginManagerConsoleKit.prototype);
@


1.2
log
@update to gnome-shell-3.22.1

there may be some runtime issues that will be dealt with shortly,
as discussed with aja@@
@
text
@d1 7
a7 1
$OpenBSD: patch-js_misc_loginManager_js,v 1.1 2014/10/21 13:11:03 ajacoutot Exp $
d16 11
a26 2
+++ js/misc/loginManager.js	Mon Oct 31 16:02:40 2016
@@@@ -49,6 +49,32 @@@@ const SystemdLoginSessionIface = '<node> \
d59 1
a59 1
@@@@ -78,7 +104,7 @@@@ function canLock() {
d68 1
a68 1
@@@@ -96,7 +122,7 @@@@ function getLoginManager() {
d77 1
a77 1
@@@@ -113,6 +139,9 @@@@ const LoginManagerSystemd = new Lang.Class({
d87 1
a87 1
@@@@ -183,13 +212,35 @@@@ const LoginManagerSystemd = new Lang.Class({
d128 1
a128 1
@@@@ -209,4 +260,4 @@@@ const LoginManagerDummy = new Lang.Class({
@


1.1
log
@Revert "loginManager: Kill ConsoleKit support" to unbreak GDM login screen.
@
text
@d1 1
a1 1
$OpenBSD$
d9 3
a11 3
--- js/misc/loginManager.js.orig	Tue Oct 21 14:59:33 2014
+++ js/misc/loginManager.js	Tue Oct 21 15:02:21 2014
@@@@ -46,6 +46,32 @@@@ const SystemdLoginSessionIface = '<node> \
d44 1
a44 1
@@@@ -75,7 +101,7 @@@@ function canLock() {
d53 1
a53 1
@@@@ -93,7 +119,7 @@@@ function getLoginManager() {
d62 1
a62 1
@@@@ -110,6 +136,9 @@@@ const LoginManagerSystemd = new Lang.Class({
d72 1
a72 1
@@@@ -177,13 +206,35 @@@@ const LoginManagerSystemd = new Lang.Class({
d113 1
a113 1
@@@@ -203,4 +254,4 @@@@ const LoginManagerDummy = new Lang.Class({
@

