head	1.5;
access;
symbols
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2005.05.26.03.39.30;	author marcm;	state dead;
branches;
next	1.4;

1.4
date	2004.12.10.20.36.42;	author marcm;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.23.03.26.11;	author marcm;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.22.05.33.53;	author marcm;	state Exp;
branches;
next	1.1;

1.1
date	2003.12.01.04.13.05;	author marcm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Gnome 2.10.0/2.10.1
@
text
@--- wireless/wireless-applet.c.orig	Sat Oct 30 06:46:28 2004
+++ wireless/wireless-applet.c	Fri Dec 10 10:16:59 2004
@@@@ -30,12 +30,30 @@@@
 #include <math.h>
 #include <dirent.h>
 
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+#include <sys/socket.h>
+#include <sys/ioctl.h>
+#include <net/if.h>
+#endif
+#if defined(__FreeBSD__)
+#include <net/if_var.h>
+#include <dev/an/if_aironet_ieee.h>
+#include <dev/wi/if_wavelan_ieee.h>
+#elif defined(__OpenBSD__)
+#include <dev/ic/if_wi_ieee.h>
+#include <dev/ic/anvar.h>
+#endif
+
 #include <gnome.h>
 #include <panel-applet.h>
 #include <panel-applet-gconf.h>
 #include <glade/glade.h>
 
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+#define CFG_DEVICE "an0"
+#else
 #define CFG_DEVICE "eth0"
+#endif
 #define CFG_UPDATE_INTERVAL 2
 
 typedef enum {
@@@@ -92,6 +110,12 @@@@ static void wireless_applet_help_cb (Bon
 		WirelessApplet *applet);
 static void wireless_applet_about_cb (BonoboUIComponent *uic,
 		WirelessApplet *applet);
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+static int an_getval(WirelessApplet *applet, char *device, struct an_req *areq);
+static void get_an_data(WirelessApplet *applet, char *device, long int *level);
+static int wi_getval(WirelessApplet *applet, char *device, struct wi_req *areq);
+static void get_wi_data(WirelessApplet *applet, char *device, long int *level);
+#endif
 static void prefs_response_cb (GtkDialog *dialog, gint response, gpointer data);
 
 static const BonoboUIVerb wireless_menu_verbs [] = {
@@@@ -161,7 +185,7 @@@@ wireless_applet_draw (WirelessApplet *ap
 	/* Update the image */
 	percent = CLAMP (percent, -1, 100);
 
-	if (percent < 0)
+	if (percent < 0 || percent > 100)
 		state = PIX_BROKEN;
 	else if (percent == 0)
 		state = PIX_NO_LINK;
@@@@ -192,6 +216,7 @@@@ wireless_applet_update_state (WirelessAp
 	int percent;
 
 	/* Calculate the percentage based on the link quality */
+#if !defined(__FreeBSD__) && !defined(__OpenBSD__)
 	if (level < 0) {
 		percent = -1;
 	} else {
@@@@ -202,6 +227,9 @@@@ wireless_applet_update_state (WirelessAp
 			percent = CLAMP (percent, 0, 100);
 		}
 	}
+#else
+	percent = (int)level;
+#endif
 
 	wireless_applet_draw (applet, percent);
 }
@@@@ -244,14 +272,152 @@@@ wireless_applet_set_show_percent (Wirele
 	}
 }
 
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+static int
+wi_getval(WirelessApplet *applet, char *device, struct wi_req *wreq)
+{
+	struct ifreq	ifr;
+	int		s;
+ 
+	bzero((char *)&ifr, sizeof(ifr));
+ 
+	strlcpy(ifr.ifr_name, device, sizeof(ifr.ifr_name));
+	ifr.ifr_data = (caddr_t)wreq;
+ 
+	s = socket(AF_INET, SOCK_DGRAM, 0);
+ 
+	if (s == -1)
+	{
+		gtk_tooltips_set_tip (applet->tips,
+				GTK_WIDGET (applet),
+				"Socket Error",
+				NULL);
+		return 0;
+	}
+ 
+	if (ioctl(s, SIOCGWAVELAN, &ifr) == -1)
+	{
+		gtk_tooltips_set_tip (applet->tips,
+				GTK_WIDGET (applet),
+				"ioctl Error",
+				NULL);
+		close (s);
+		return 0;
+	}
+ 
+	close(s);
+                                                                 
+	return 1;
+}
+
+static void
+get_wi_data (WirelessApplet *applet, char *device, long int *level)
+{
+    	struct wi_req wreq;
+	long int signal_strength;
+
+	bzero((char *)&wreq, sizeof(wreq));
+
+	wreq.wi_len  = WI_MAX_DATALEN;
+	wreq.wi_type = WI_RID_COMMS_QUALITY;
+
+	(void)wi_getval(applet, device, &wreq);
+
+#ifdef __OpenBSD__
+	/* This seems to be scaled from 0 to 180 */
+	signal_strength = htole16(wreq.wi_val[1]) * 10 / 18;
+#else
+	signal_strength = (long int) (wreq.wi_val[1]);
+#endif
+
+	memcpy(level, &signal_strength, sizeof(level));
+
+	return;
+}
+
+static int
+an_getval(WirelessApplet *applet, char *device, struct an_req *areq)
+{
+	struct ifreq  ifr;
+	int s;
+
+	bzero((char *)&ifr, sizeof(ifr));
+
+	strlcpy(ifr.ifr_name, device, sizeof(ifr.ifr_name));
+	ifr.ifr_data = (caddr_t)areq;
+
+	s = socket(AF_INET, SOCK_DGRAM, 0);
+
+	if (s == -1) {
+		gtk_tooltips_set_tip (applet->tips,
+				GTK_WIDGET (applet),
+				"Socket Error",
+				NULL);
+		return 0;
+	}
+
+	if (ioctl(s, SIOCGAIRONET, &ifr) == -1) {
+		gtk_tooltips_set_tip (applet->tips,
+				GTK_WIDGET (applet),
+				"ioctl Error",
+				NULL);
+		close (s);
+		return 0;
+	}
+
+	close(s);
+	return 1;
+}
+
+static void
+get_an_data (WirelessApplet *applet, char *device, long int *level)
+{
+    	struct an_req areq;
+	struct an_ltv_status *sts;
+#ifdef AN_RID_RSSI_MAP
+	struct an_ltv_rssi_map an_rssimap;
+#endif
+	long int signal_strength;
+	int rssimap_valid = 0;
+
+#ifdef AN_RID_RSSI_MAP
+	an_rssimap.an_len = sizeof(an_rssimap);
+	an_rssimap.an_type = AN_RID_RSSI_MAP;
+	rssimap_valid = an_getval(applet, device, (struct an_req*)&an_rssimap);
+#endif
+
+	areq.an_len = sizeof(areq);
+	areq.an_type = AN_RID_STATUS;
+
+	(void)an_getval(applet, device, &areq);
+
+	sts = (struct an_ltv_status *)&areq;
+#ifdef AN_RID_RSSI_MAP
+	if (rssimap_valid)
+	    signal_strength = (long int)(an_rssimap.an_entries[
+		    sts->an_normalized_strength].an_rss_pct);
+	else
+	    signal_strength = (long int)(sts->an_normalized_strength);
+#else
+	signal_strength = (long int)(sts->an_normalized_rssi);
+#endif
+	memcpy(level, &signal_strength, sizeof(level));
+}
+#endif
+
 /* check stats, modify the state attribute */
 static void
 wireless_applet_read_device_state (WirelessApplet *applet)
 {
-	long int level, noise;
-	double link;
+	long int level;
 	char device[256];
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+	struct if_nameindex *ifstart, *ifs;
+#else
+	long int noise;
+	double link;
 	char line[256];
+#endif
 	gboolean found = FALSE;
 
 	/* resest list of available wireless devices */
@@@@ -259,8 +425,35 @@@@ wireless_applet_read_device_state (Wirel
 	g_list_free (applet->devices);
 	applet->devices = NULL;
 
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+	ifs = ifstart = if_nameindex ();
+#endif
+
 	/* Here we begin to suck... */
 	do {
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+		if (ifs == NULL || ifs->if_name == NULL) {
+				break;
+		}
+		strlcpy (device, ifs->if_name, 6);
+		if (g_strncasecmp (device, "an", 2)==0) {
+				applet->devices = g_list_prepend (applet->devices, g_strdup (device));
+				if (g_strcasecmp (applet->device, device)==0) {
+						get_an_data (applet, device, &level);
+						wireless_applet_update_state (applet, device, 0, level, 0);
+						found = TRUE;
+				}
+		}
+		else if (g_strncasecmp (device, "wi", 2)==0 || g_strncasecmp (device, "ath", 3)==0) {
+				applet->devices = g_list_prepend (applet->devices, g_strdup (device));
+				if (g_strcasecmp (applet->device, device)==0) {
+						get_wi_data (applet, device, &level);
+						wireless_applet_update_state (applet, device, 0, level, 0);
+						found = TRUE;
+				}
+		}
+		ifs++;
+#else
 		char *ptr;
 
 		fgets (line, 256, applet->file);
@@@@ -294,6 +487,7 @@@@ wireless_applet_read_device_state (Wirel
 				found = TRUE;
 			}
 		}
+#endif
 	} while (1);
 
 	if (g_list_length (applet->devices)==1) {
@@@@ -305,17 +499,23 @@@@ wireless_applet_read_device_state (Wirel
 	}
 
 	/* rewind the /proc/net/wireless file */
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+	if_freenameindex(ifstart);
+#else
 	rewind (applet->file);
+#endif
 }
 
 static int
 wireless_applet_timeout_handler (WirelessApplet *applet)
 {
+#if !defined(__FreeBSD__) && !defined(__OpenBSD__)
 	if (applet->file == NULL) {
 		wireless_applet_update_state (applet,
 				applet->device, -1, -1, -1);
 		return FALSE;
 	}
+#endif
 
 	wireless_applet_read_device_state (applet);
 
@@@@ -364,10 +564,12 @@@@ show_warning_dialog (gchar *mesg,...) 
 static void
 start_file_read (WirelessApplet *applet)
 {
+#if !defined(__FreeBSD__) && !defined(__OpenBSD__)
 	applet->file = fopen ("/proc/net/wireless", "rt");
 	if (applet->file == NULL) {
 		show_error_dialog (applet, _("There doesn't seem to be any wireless devices configured on your system.\nPlease verify your configuration if you think this is incorrect."));
 	}
+#endif
 }
 
 static void
@@@@ -670,8 +872,10 @@@@ wireless_applet_destroy (WirelessApplet 
 		applet->prefs = NULL;
 	}
 
+#if !defined(__FreeBSD__) && !defined(__OpenBSD__)
 	if (applet->file)
 		fclose (applet->file);
+#endif
 	if (applet->tips)
 		g_object_unref (applet->tips);
 }
@


1.4
log
@Update to Gnome 2.8 (.1).

Work done primarily by Francois Briere, thanks Francois.
@
text
@@


1.3
log
@Monster update to Gnome 2.6.  See, I am not slacking, really!

Change info on a Gnome mirror near you.
@
text
@d1 3
a3 3
--- wireless/wireless-applet.c.orig	Tue Apr 13 04:39:46 2004
+++ wireless/wireless-applet.c	Tue Jun 22 13:48:18 2004
@@@@ -30,6 +30,20 @@@@
d24 1
a24 3
@@@@ -37,7 +51,11 @@@@
 
 #include <egg-screen-help.h>
d34 1
a34 1
@@@@ -94,6 +112,12 @@@@ static void wireless_applet_help_cb (Bon
d47 1
a47 1
@@@@ -159,7 +183,7 @@@@ wireless_applet_draw (WirelessApplet *ap
d56 1
a56 1
@@@@ -190,6 +214,7 @@@@ wireless_applet_update_state (WirelessAp
d64 1
a64 1
@@@@ -200,6 +225,9 @@@@ wireless_applet_update_state (WirelessAp
d74 1
a74 1
@@@@ -242,14 +270,152 @@@@ wireless_applet_set_show_percent (Wirele
d229 1
a229 1
@@@@ -257,8 +423,35 @@@@ wireless_applet_read_device_state (Wirel
d265 1
a265 1
@@@@ -292,6 +485,7 @@@@ wireless_applet_read_device_state (Wirel
d273 1
a273 1
@@@@ -303,17 +497,23 @@@@ wireless_applet_read_device_state (Wirel
d297 1
a297 1
@@@@ -360,6 +560,7 @@@@ show_warning_dialog (gchar *mesg,...) 
d304 1
a304 4
 		gtk_tooltips_set_tip (applet->tips,
@@@@ -368,6 +569,7 @@@@ start_file_read (WirelessApplet *applet)
 				NULL);
 		show_error_dialog (_("There doesn't seem to be any wireless devices configured on your system.\nPlease verify your configuration if you think this is incorrect."));
@


1.2
log
@Update to Gnome 2.4.2
@
text
@d1 3
a3 4
$OpenBSD: patch-wireless_wireless-applet_c,v 1.1 2003/12/01 04:13:05 marcm Exp $
--- wireless/wireless-applet.c.orig	2003-10-27 12:52:14.000000000 -0800
+++ wireless/wireless-applet.c	2004-02-20 22:26:32.000000000 -0800
@@@@ -30,6 +30,21 @@@@
a11 1
+
d24 1
a24 1
@@@@ -37,7 +52,11 @@@@
d36 1
a36 1
@@@@ -93,6 +112,12 @@@@ static void wireless_applet_help_cb (Bon
d49 1
a49 3
@@@@ -150,9 +175,11 @@@@ wireless_applet_draw (WirelessApplet *ap
 	g_free (tmp);
 
a50 1
+#if !defined(__FreeBSD__) && !defined(__OpenBSD__)
a51 1
+#endif
d58 1
a58 1
@@@@ -183,6 +210,7 @@@@ wireless_applet_update_state (WirelessAp
d66 1
a66 1
@@@@ -193,6 +221,9 @@@@ wireless_applet_update_state (WirelessAp
d76 1
a76 1
@@@@ -235,22 +266,184 @@@@ wireless_applet_set_show_percent (Wirele
d109 1
d132 2
a133 2
+	/* This seems to be scaled from 0 to 160 */
+	signal_strength = htole16(wreq.wi_val[1]) * 10 / 16;
d169 1
a208 1
+	
d228 1
d231 1
a231 1
 	g_list_foreach (applet->devices, (GFunc)g_free, NULL);
d236 1
a236 1
+	ifs = ifstart = if_nameindex();
d238 1
d242 2
a243 2
+	    	if (ifs == NULL || ifs->if_name == NULL) {
+		    break;
d245 8
a252 7
+	    	strlcpy(device, ifs->if_name, 6);
+		if (g_strncasecmp(device, "an", 2)==0) {
+			applet->devices = g_list_prepend (applet->devices, g_strdup (device));
+			if (g_strcasecmp(applet->device, device)==0) {
+		    		get_an_data(applet, device, &level);
+				wireless_applet_update_state (applet, device, 0, level, 0);
+			}
d254 7
a260 7
+		else
+		if (g_strncasecmp(device, "wi", 2)==0) {
+			applet->devices = g_list_prepend (applet->devices, g_strdup (device));
+			if (g_strcasecmp(applet->device, device)==0) {
+		    		get_wi_data(applet, device, &level);
+				wireless_applet_update_state (applet, device, 0, level, 0);
+			}
d267 2
a268 2
@@@@ -283,6 +476,7 @@@@ wireless_applet_read_device_state (Wirel
 				wireless_applet_update_state (applet, device, link, level, noise);
d275 1
a275 1
@@@@ -294,17 +488,23 @@@@ wireless_applet_read_device_state (Wirel
d299 1
a299 1
@@@@ -351,6 +551,7 @@@@ show_warning_dialog (gchar *mesg,...) 
d307 1
a307 1
@@@@ -359,6 +560,7 @@@@ start_file_read (WirelessApplet *applet)
d315 11
@


1.1
log
@Gnome 2.4.1.

Sync versions with the Gnome 2.4.1 release.  Mostly bugfixes, too numerous
to list :).

This also addresses systrace issues and some config file issues from
sturm@@, and wireless applet support from djm@@.
@
text
@d1 3
a3 3
$OpenBSD$
--- wireless/wireless-applet.c.orig	2003-09-23 09:06:44.000000000 +1000
+++ wireless/wireless-applet.c	2003-11-09 22:27:36.000000000 +1100
a312 11
+#endif
 }
 
 static void
@@@@ -641,8 +843,10 @@@@ wireless_applet_destroy (WirelessApplet 
 		applet->prefs = NULL;
 	}
 
+#if !defined(__FreeBSD__) && !defined(__OpenBSD__)
 	if (applet->file)
 		fclose (applet->file);
@

