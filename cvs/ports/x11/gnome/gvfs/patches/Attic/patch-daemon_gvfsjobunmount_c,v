head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2012.03.29.06.34.16;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2012.02.16.22.17.38;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.17.13.24.59;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2011.10.05.13.56.08;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to gvfs-1.11.5.
@
text
@$OpenBSD: patch-daemon_gvfsjobunmount_c,v 1.3 2012/02/16 22:17:38 ajacoutot Exp $

From e523572e14a9042696e1c5ccd4f30cb3240fa0df Mon Sep 17 00:00:00 2001
From: Giovanni Campagna <gcampagna@@src.gnome.org>
Date: Tue, 07 Feb 2012 14:25:05 +0000
Subject: GVfsJobUnmount: check that vfunc is implemented before calling it

--- daemon/gvfsjobunmount.c.orig	Mon Oct 17 14:40:15 2011
+++ daemon/gvfsjobunmount.c	Tue Feb  7 16:03:41 2012
@@@@ -130,6 +130,9 @@@@ run (GVfsJob *job)
   GVfsJobUnmount *op_job = G_VFS_JOB_UNMOUNT (job);
   GVfsBackendClass *class = G_VFS_BACKEND_GET_CLASS (op_job->backend);
 
+  if (class->unmount == NULL)
+    return;
+
   class->unmount (op_job->backend,
 		  op_job,
                   op_job->flags,
@@@@ -218,11 +221,13 @@@@ try (GVfsJob *job)
 
   if (job_finish_immediately_if_possible (op_job))
     return TRUE;
-  else
+  else if (class->try_unmount != NULL)
     return class->try_unmount (op_job->backend,
 			       op_job,
 			       op_job->flags,
 			       op_job->mount_source);
+  else
+    return FALSE;
 }
 
 static void
@


1.3
log
@Sync some patches with upstream.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to gvfs-1.10.1.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gvfsjobunmount_c,v 1.1 2011/10/05 13:56:08 ajacoutot Exp $
d3 4
a6 4
From 1f5c16b8ac679b322f2bed33c8e6cc5ed6096ff3 Mon Sep 17 00:00:00 2001
From: Michael Terry <michael.terry@@canonical.com>
Date: Thu, 29 Sep 2011 15:57:32 +0000
Subject: daemon: Grab a pointer to the GvfsBackend before unref'ing a job source, preventing a crash.
d8 5
a12 8
--- daemon/gvfsjobunmount.c.orig	Mon Sep 26 15:14:03 2011
+++ daemon/gvfsjobunmount.c	Wed Oct  5 15:49:04 2011
@@@@ -231,6 +231,7 @@@@ unregister_mount_callback (DBusMessage *unmount_reply,
 			   gpointer user_data)
 {
   GVfsBackend *backend;
+  GVfsDaemon *daemon;
   GVfsJobUnmount *op_job = G_VFS_JOB_UNMOUNT (user_data);
d14 7
a20 3
   g_debug ("unregister_mount_callback, unmount_reply: %p, error: %p\n", unmount_reply, error);
@@@@ -239,9 +240,10 @@@@ unregister_mount_callback (DBusMessage *unmount_reply,
   (*G_VFS_JOB_CLASS (g_vfs_job_unmount_parent_class)->send_reply) (G_VFS_JOB (op_job));
d22 10
a31 6
   /* Unlink job source from daemon */
+  daemon = g_vfs_backend_get_daemon (backend);
   g_vfs_job_source_closed (G_VFS_JOB_SOURCE (backend));
 
-  g_vfs_daemon_close_active_channels (g_vfs_backend_get_daemon ((backend)));
+  g_vfs_daemon_close_active_channels (daemon);
d34 1
a34 1
 /* Might be called on an i/o thread */
@


1.1
log
@Fix a couple of crashers, from upstream.
@
text
@d1 1
a1 1
$OpenBSD$
@

