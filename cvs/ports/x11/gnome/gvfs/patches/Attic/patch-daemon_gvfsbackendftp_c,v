head	1.6;
access;
symbols
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2012.02.16.22.17.38;	author ajacoutot;	state dead;
branches;
next	1.5;

1.5
date	2011.10.20.15.35.29;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.26.14.32.35;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2011.08.29.15.12.50;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.08.29.08.50.56;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.02.18.34.16;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Sync some patches with upstream.
@
text
@$OpenBSD: patch-daemon_gvfsbackendftp_c,v 1.5 2011/10/20 15:35:29 ajacoutot Exp $

https://bugzilla.gnome.org/show_bug.cgi?id=662301

--- daemon/gvfsbackendftp.c.orig	Thu Oct 20 17:15:18 2011
+++ daemon/gvfsbackendftp.c	Thu Oct 20 17:15:29 2011
@@@@ -689,28 +689,7 @@@@ try_mount (GVfsBackend *backend,
   return FALSE;
 }
 
-static void
-do_unmount (GVfsBackend *   backend,
-            GVfsJobUnmount *job,
-            GMountUnmountFlags flags,
-            GMountSource *mount_source)
-{
-  GVfsBackendFtp *ftp = G_VFS_BACKEND_FTP (backend);
-  GVfsFtpConnection *conn;
 
-  g_mutex_lock (ftp->mutex);
-  while ((conn = g_queue_pop_head (ftp->queue)))
-    {
-      /* FIXME: properly quit */
-      g_vfs_ftp_connection_free (conn);
-    }
-  g_queue_free (ftp->queue);
-  ftp->queue = NULL;
-  g_cond_broadcast (ftp->cond);
-  g_mutex_unlock (ftp->mutex);
-  g_vfs_job_succeeded (G_VFS_JOB (job));
-}
-
 /* NB: sets EPERM if file exists, ENOENT if not - an error will _always_ be set */
 static void
 error_550_permission_or_not_found (GVfsFtpTask *task, gpointer file)
@@@@ -1670,7 +1649,6 @@@@ g_vfs_backend_ftp_class_init (GVfsBackendFtpClass *kla
 
   backend_class->mount = do_mount;
   backend_class->try_mount = try_mount;
-  backend_class->unmount = do_unmount;
   backend_class->open_for_read = do_open_for_read;
   backend_class->close_read = do_close_read;
   backend_class->read = do_read;
@


1.5
log
@Add a workaround to be able to unmount FTP shares without crashing
nautilus.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@Update to gvfs-1.10.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gvfsbackendftp_c,v 1.3 2011/08/29 15:12:50 ajacoutot Exp $
d3 1
a3 4
From a94b84592163bc727ba15467d0fdf3ca7782f334 Mon Sep 17 00:00:00 2001
From: Chris Wulff <crwulff@@rochester.rr.com>
Date: Mon, 29 Aug 2011 14:08:04 +0000
Subject: ftp: Fix return value of try_get_settable_attributes() on failure
d5 5
a9 9
--- daemon/gvfsbackendftp.c.orig	Mon May 23 16:38:05 2011
+++ daemon/gvfsbackendftp.c	Mon Aug 29 10:43:50 2011
@@@@ -1078,7 +1078,7 @@@@ try_query_settable_attributes (GVfsBackend *backend,
                         G_IO_ERROR,
                         G_IO_ERROR_NOT_SUPPORTED,
                         _("Operation unsupported"));
-      return FALSE;
+      return TRUE;
     }    
d11 33
a43 1
   list = g_file_attribute_info_list_new ();
@


1.3
log
@Ignore SIGPIPE signals to avoid process termination on cancelled transfer,
from upstream.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gvfsbackendftp_c,v 1.2 2011/08/29 08:50:56 ajacoutot Exp $
@


1.2
log
@Better patch for gvfsbackendftp.c and regen patches while here.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gvfsbackendftp_c,v 1.1 2011/06/02 18:34:16 ajacoutot Exp $
d3 4
a6 1
https://bugzilla.gnome.org/show_bug.cgi?id=651729
@


1.1
log
@Don't kill the mount if g_vfs_backend_ftp_has_feature() (for chmod)
fails. Now I can upload stuffs with nautilus to my freebox again...
@
text
@d1 1
a1 1
$OpenBSD$
d5 6
a10 11
--- daemon/gvfsbackendftp.c.orig	Thu Jun  2 20:16:07 2011
+++ daemon/gvfsbackendftp.c	Thu Jun  2 20:19:05 2011
@@@@ -1073,13 +1073,7 @@@@ try_query_settable_attributes (GVfsBackend *backend,
   GFileAttributeInfoList *list;
 
   if (!g_vfs_backend_ftp_has_feature (ftp, G_VFS_FTP_FEATURE_CHMOD))
-    {    
-      g_vfs_job_failed (G_VFS_JOB (job),
-                        G_IO_ERROR,
-                        G_IO_ERROR_NOT_SUPPORTED,
-                        _("Operation unsupported"));
d12 2
a13 2
-    }    
+    return FALSE;
a15 1
 
@

