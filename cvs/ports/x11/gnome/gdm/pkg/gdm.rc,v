head	1.41;
access;
symbols
	OPENBSD_6_1:1.37.0.6
	OPENBSD_6_1_BASE:1.37
	OPENBSD_6_0:1.37.0.4
	OPENBSD_6_0_BASE:1.37
	OPENBSD_5_9:1.37.0.2
	OPENBSD_5_9_BASE:1.37
	OPENBSD_5_8:1.33.0.4
	OPENBSD_5_8_BASE:1.33
	OPENBSD_5_7:1.31.0.2
	OPENBSD_5_7_BASE:1.31
	OPENBSD_5_6:1.30.0.2
	OPENBSD_5_6_BASE:1.30
	OPENBSD_5_5:1.28.0.2
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.19.0.2
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.17.0.2
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.13.0.4
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.2
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10;
locks; strict;
comment	@ * @;


1.41
date	2017.05.27.21.00.51;	author ajacoutot;	state Exp;
branches;
next	1.40;
commitid	lxGPgT5UKFnbHMXJ;

1.40
date	2017.05.27.19.57.08;	author ajacoutot;	state Exp;
branches;
next	1.39;
commitid	H08QxD8pqoInz6Rz;

1.39
date	2017.05.27.13.53.07;	author ajacoutot;	state Exp;
branches;
next	1.38;
commitid	SDpZdO8hfYIlMQ9j;

1.38
date	2017.04.16.12.43.20;	author ajacoutot;	state Exp;
branches;
next	1.37;
commitid	63W5LV3b3zfwkOvg;

1.37
date	2015.12.21.10.17.32;	author ajacoutot;	state Exp;
branches;
next	1.36;
commitid	mtNXgqH8qNXf2w4k;

1.36
date	2015.12.21.09.32.01;	author ajacoutot;	state Exp;
branches;
next	1.35;
commitid	89yBmxf8zl7f4edS;

1.35
date	2015.12.20.09.38.14;	author ajacoutot;	state Exp;
branches;
next	1.34;
commitid	SUL8g4c0gjEg4ZTf;

1.34
date	2015.12.19.14.13.45;	author ajacoutot;	state Exp;
branches;
next	1.33;
commitid	jNmUMRLbxGUrj246;

1.33
date	2015.07.16.01.51.26;	author ajacoutot;	state Exp;
branches;
next	1.32;
commitid	imUaFke3zCg92r6G;

1.32
date	2015.06.11.11.56.15;	author ajacoutot;	state Exp;
branches;
next	1.31;
commitid	NqCUDgdGV2daWnaK;

1.31
date	2014.11.01.15.27.52;	author ajacoutot;	state Exp;
branches;
next	1.30;
commitid	KqIpDQ8sxRkLYt8W;

1.30
date	2014.04.25.14.37.19;	author ajacoutot;	state Exp;
branches;
next	1.29;

1.29
date	2014.04.14.07.54.51;	author ajacoutot;	state Exp;
branches;
next	1.28;

1.28
date	2014.01.30.16.58.58;	author ajacoutot;	state Exp;
branches;
next	1.27;

1.27
date	2014.01.29.14.00.46;	author ajacoutot;	state Exp;
branches;
next	1.26;

1.26
date	2014.01.29.14.00.04;	author ajacoutot;	state Exp;
branches;
next	1.25;

1.25
date	2013.12.26.15.38.29;	author ajacoutot;	state Exp;
branches;
next	1.24;

1.24
date	2013.12.01.17.54.13;	author ajacoutot;	state Exp;
branches;
next	1.23;

1.23
date	2013.11.13.09.30.53;	author ajacoutot;	state Exp;
branches;
next	1.22;

1.22
date	2013.10.29.11.08.24;	author ajacoutot;	state Exp;
branches;
next	1.21;

1.21
date	2013.09.28.16.22.40;	author ajacoutot;	state Exp;
branches;
next	1.20;

1.20
date	2013.09.28.15.51.19;	author ajacoutot;	state Exp;
branches;
next	1.19;

1.19
date	2013.04.03.15.45.47;	author ajacoutot;	state Exp;
branches;
next	1.18;

1.18
date	2013.03.30.09.52.17;	author ajacoutot;	state Exp;
branches;
next	1.17;

1.17
date	2012.10.16.16.38.13;	author ajacoutot;	state Exp;
branches;
next	1.16;

1.16
date	2012.09.13.08.38.12;	author ajacoutot;	state Exp;
branches;
next	1.15;

1.15
date	2012.09.12.08.54.52;	author ajacoutot;	state Exp;
branches;
next	1.14;

1.14
date	2012.08.04.15.31.45;	author ajacoutot;	state Exp;
branches;
next	1.13;

1.13
date	2011.09.12.07.39.21;	author ajacoutot;	state Exp;
branches;
next	1.12;

1.12
date	2011.05.01.16.23.18;	author ajacoutot;	state Exp;
branches;
next	1.11;

1.11
date	2011.03.09.18.51.49;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2011.01.05.16.05.54;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2010.12.27.14.50.24;	author ajacoutot;	state Exp;
branches;
next	1.8;

1.8
date	2010.12.24.10.40.06;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2010.12.13.16.13.04;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2010.12.11.12.57.37;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2010.12.11.09.59.25;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2010.12.11.07.40.21;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2010.11.25.15.27.30;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.29.12.54.44;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.28.11.01.18;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.41
log
@Let's experiment for a bit; it seems that we don't need to wait for
/usr/libexec/getty to be available before starting gdm; it's probably
because gdm takes so long to start...
@
text
@#!/bin/sh
#
# $OpenBSD: gdm.rc,v 1.40 2017/05/27 19:57:08 ajacoutot Exp $

daemon="${TRUEPREFIX}/sbin/gdm"

. /etc/rc.d/rc.subr

rc_bg=YES
rc_reload=NO

rc_pre() {
	# XXX OpenBSD needs an implementation of XDG_RUNTIME_DIR
	rm -rf /var/db/gdm/.cache/gnome-shell/runtime-state-*
}

rc_stop() {
	pkill -9 -xf "${pexp}"
	pkill -f gdm-session-worker
	pkill -u _x11 -f "^/usr/X11R6/bin/X.*/var/run/gdm"
	# _gdm owned processed may already be gone... or not
	pkill -u _gdm || return 0
}

# /etc/X11/xenodm/TakeConsole, fbtab(5)
rc_post() {
	if [ -c /dev/drm0 ]; then
		chown root /dev/drm0
	fi
	# XXX OpenBSD needs an implementation of XDG_RUNTIME_DIR
	rm -rf /var/db/gdm/.cache/gnome-shell/runtime-state-*
}

rc_cmd $1
@


1.40
log
@Bring rc_bg back.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.39 2017/05/27 13:53:07 ajacoutot Exp $
a15 13

if [ -n "${INRC}" ]; then
# on boot: wait for ttys to be initialized in bg so we we don't hang in _rc_wait
rc_start() {
	( local i=0
	while ! pgrep -qf "^/usr/libexec/getty "; do
		sleep 1
		[ $((i++)) -ge 10 ] && return 1
	done
	${rcexec} "${daemon} ${daemon_flags}" ) &
	rc_check() { return 0; } # ignore status, we're waiting for getty
}
fi
@


1.39
log
@Cope with recent rc.subr(8) change (removal of rc_bg etc.)
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.38 2017/04/16 12:43:20 ajacoutot Exp $
d9 1
@


1.38
log
@xdm -> xenodm.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.37 2015/12/21 10:17:32 ajacoutot Exp $
a8 1
rc_bg=YES
d17 1
a17 5
# on boot: make sure we don't hang in _rc_wait
_rc_wait() {
	return 0
}
# on boot: wait for ttys to be initialized
a18 1
	unset rc_bg
d24 2
a25 1
	${rcexec} "${daemon} ${daemon_flags} &" ) &
@


1.37
log
@Override _rc_wait(); these scripts are a bit hackish because they need
/usr/libexec/getty to be started but it is started later in the boot
process.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.36 2015/12/21 09:32:01 ajacoutot Exp $
d42 1
a42 1
# /etc/X11/xdm/TakeConsole, fbtab(5)
@


1.36
log
@Revert, this breaks rc_stop() for these daemons.
I'm working on a better fix.

spotted by dcoppa@@
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.35 2015/12/20 09:38:14 ajacoutot Exp $
a16 2
# on boot: wait for ttys to be initialized and make sure we don't hang in
# "_rc_wait start" by hacking pexp
d18 5
@


1.35
log
@Move pexp where it belongs.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.34 2015/12/19 14:13:45 ajacoutot Exp $
a20 1
	pexp="/sbin/init"
@


1.34
log
@Cope with new rc.subr behavior so that we don't end hanging in _rc_wait
start.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.33 2015/07/16 01:51:26 ajacoutot Exp $
d20 1
a22 1
rc_start() {
@


1.33
log
@Tweak pkill invocation.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.32 2015/06/11 11:56:15 ajacoutot Exp $
d17 2
a18 1
# on boot: wait for ttys to be initialized
d20 1
@


1.32
log
@Start ${daemon} in the background to prevent '/etc/rc.d/gdm start' from
never ending.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.31 2014/11/01 15:27:52 ajacoutot Exp $
d31 1
a31 1
	pkill -9 -f "^${pexp}"
@


1.31
log
@When I tell you to stop, you stop!
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.30 2014/04/25 14:37:19 ajacoutot Exp $
d19 1
a19 1
unset rc_bg
d26 1
a26 1
	${rcexec} "${daemon} ${daemon_flags}" ) &
@


1.30
log
@Since we are missing an XDG_RUNTIME_DIR implementation, make sure we clean
the locked files in the .cache/gnome-shell/ directory so that we are not
left in 'locked' mode (i.e. black screen).
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.29 2014/04/14 07:54:51 ajacoutot Exp $
d31 1
a31 1
	pkill -f "^${pexp}"
@


1.29
log
@Extend rc_stop() to kill all gdm initiated processes.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.28 2014/01/30 16:58:58 ajacoutot Exp $
d12 5
d43 2
@


1.28
log
@Sync rc_start() between these 3 daemons since they do the same.
Keeping the sleep 2 in kdm.rc -- not sure why this is needed, zhuk@@ probably
knows.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.27 2014/01/29 14:00:46 ajacoutot Exp $
d27 2
@


1.27
log
@Missed in previous.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.26 2014/01/29 14:00:04 ajacoutot Exp $
d17 1
a17 2
	while [ $i -le 10 ]; do
		pgrep -qf "^/usr/libexec/getty " && break
d19 1
a19 1
		i=$((i+1))
a20 1
	[[ $i -gt 10 ]] && return 1
@


1.26
log
@Only loop for getty during boot, not when the system is already running.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.25 2013/12/26 15:38:29 ajacoutot Exp $
d16 1
a16 1
	( i=0
@


1.25
log
@Do the proper chown(1) $USER, root or _gdm dance according to the situation.

prodded by kettenis@@
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.24 2013/12/01 17:54:13 ajacoutot Exp $
d9 1
d12 3
d25 1
@


1.24
log
@rc_pre() not needed anymore.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.23 2013/11/13 09:30:53 ajacoutot Exp $
d24 9
a32 1
	pkill -u _gdm
@


1.23
log
@No need for expr (rpe@@).
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.22 2013/10/29 11:08:24 ajacoutot Exp $
a9 5

rc_pre() {
	install -d -g _gdm -m 0711 /var/run/gdm
	install -d -o _gdm -g _gdm /var/run/gdm/greeter
}
@


1.22
log
@Do not blindly sleep but instead wait to ttys initialization before
starting.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.21 2013/09/28 16:22:40 ajacoutot Exp $
d21 1
a21 1
		i=`expr $i + 1`
@


1.21
log
@Make starting less of a hack.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.20 2013/09/28 15:51:19 ajacoutot Exp $
d17 8
a24 1
	${rcexec} "sleep 5; ${daemon} ${daemon_flags}" &
@


1.20
log
@Make stop/restart work.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.19 2013/04/03 15:45:47 ajacoutot Exp $
d17 1
a17 1
	(sleep 5; ${rcexec} "${daemon} ${daemon_flags}")&
@


1.19
log
@Make the rc script a little bit less horrible.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.18 2013/03/30 09:52:17 ajacoutot Exp $
a9 1
rc_stop=NO
d18 5
@


1.18
log
@Update to gdm-3.8.0.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.17 2012/10/16 16:38:13 ajacoutot Exp $
a8 1
rc_bg=YES
d10 1
a14 1
	sleep 5
d17 2
a18 2
rc_post() {
	pkill -f "^gdm-session-worker"
@


1.17
log
@Add an rc_post to fix rc_stop and rc_restart.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.16 2012/09/13 08:38:12 ajacoutot Exp $
d9 1
a9 1
pexp="${TRUEPREFIX}/sbin/gdm-binary"
d15 1
@


1.16
log
@Start GDM is a better way so that it doesn't leave hanging processes.
Default LANG to "C".
Remove one XXX.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.15 2012/09/12 08:54:52 ajacoutot Exp $
d15 4
@


1.15
log
@Bring GDM in a working state (still broken because it requires PAM for
now).
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.14 2012/08/04 15:31:45 ajacoutot Exp $
a14 4
}

rc_start() {
	(sleep 5; ${rcexec} "${daemon} ${daemon_flags}")&
@


1.14
log
@Fix rc_check; no bump since this pkg is BROKEN.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.13 2011/09/12 07:39:21 ajacoutot Exp $
d12 4
a15 8
#rc_check() {
#	pgrep -q -u _gdm -f "^${X11BASE}/bin/X.*gdm/auth.*"
#}

#rc_pre() {
#	install -d -g _gdm -m 0711 /var/run/gdm
#	install -d -o _gdm -g _gdm /var/run/gdm/greeter
#}
@


1.13
log
@Update to gdm-3.0.4 but mark BROKEN for now.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.12 2011/05/01 16:23:18 ajacoutot Exp $
d13 1
a13 1
#	pkill -0 -u _gdm -f "^${X11BASE}/bin/X.*gdm/auth.*"
@


1.12
log
@Add an rc_check because checking on gdm-binary is not enough: at reboot
or shutdown time, we may be left with a hanging gdm-binary process (that
is because X is killed before the rc script has a chance to run).
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.11 2011/03/09 18:51:49 ajacoutot Exp $
d12 8
a19 3
rc_check() {
	pkill -0 -u _x11 -f "^${X11BASE}/bin/X.*vt5.*gdm.*"
}
@


1.11
log
@Remove now uneeded redirection.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.10 2011/01/05 16:05:54 ajacoutot Exp $
d11 4
@


1.10
log
@Make use of rcexec.
While here, force postgresql to quit in rc_stop, ok pea@@
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.9 2010/12/27 14:50:24 ajacoutot Exp $
d13 1
a13 1
	(sleep 5; ${rcexec} "${daemon} ${daemon_flags}" >/dev/null)&
@


1.9
log
@Simplify after recent rc.subr change.
The framework is now stable and we will start documenting it (at last).
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.8 2010/12/24 10:40:06 ajacoutot Exp $
d13 1
a13 2
	(sleep 5; su -l -c ${daemon_class} -s ${daemon_shell} ${daemon_user} \
		-c "${daemon} ${daemon_flags}" >/dev/null)&
@


1.8
log
@Cope with recent rc.subr changes.
@
text
@d3 3
a5 1
# $OpenBSD: gdm.rc,v 1.7 2010/12/13 16:13:04 ajacoutot Exp $
a8 1
daemon="${TRUEPREFIX}/sbin/gdm"
@


1.7
log
@Cope with recent rc.subr changes.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.6 2010/12/11 12:57:37 ajacoutot Exp $
d12 2
a13 2
	(sleep 5; su -l -c ${daemon_class:-daemon} -s ${daemon_shell:-/bin/sh} \
		${daemon_user:-root} -c "${daemon} ${daemon_flags}" >/dev/null)&
@


1.6
log
@Move these to rc_reload=NO.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.5 2010/12/11 09:59:25 ajacoutot Exp $
d12 1
a12 1
	(sleep 5; su -c ${daemon_class:-daemon} -s ${daemon_shell:-/bin/sh} \
@


1.5
log
@Cope again with rc.subr changes.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.4 2010/12/11 07:40:21 ajacoutot Exp $
d9 1
a13 4
}

rc_reload() {
	rc_err "$0: reload is not supported."
@


1.4
log
@Adapt after recent rc.subr changes.
You will need a very current su(1) and /etc/rc.subr.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.3 2010/11/25 15:27:30 ajacoutot Exp $
d11 2
a12 2
	(sleep 5; su -c ${_rcclass:-daemon} -s ${_rcshell:-/bin/sh} \
		${_rcuser:-root} -c "${daemon} ${daemon_flags}" >/dev/null)&
@


1.3
log
@rc reload is not supported.
@
text
@d3 1
a3 1
# $OpenBSD: gdm.rc,v 1.2 2010/10/29 12:54:44 ajacoutot Exp $
d11 2
a12 1
	(sleep 5; ${daemon})&
@


1.2
log
@Add RCS IDs to rc scripts.
@
text
@d3 1
a3 1
# $OpenBSD$
d12 4
@


1.1
log
@Add an rc script for gdm.

ok robert@@
@
text
@d2 2
@

