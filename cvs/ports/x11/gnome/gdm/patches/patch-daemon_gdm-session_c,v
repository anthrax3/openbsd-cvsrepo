head	1.11;
access;
symbols
	OPENBSD_6_1:1.10.0.2
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.2
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3;
locks; strict;
comment	@# @;


1.11
date	2017.04.17.13.17.07;	author ajacoutot;	state Exp;
branches;
next	1.10;
commitid	jKsCTviiCSXwN30M;

1.10
date	2017.03.11.00.22.27;	author ajacoutot;	state Exp;
branches;
next	1.9;
commitid	wTOKIz3zLsuh6oyz;

1.9
date	2017.03.03.13.01.26;	author ajacoutot;	state Exp;
branches;
next	1.8;
commitid	yUSOqvnIs3zvjqyw;

1.8
date	2016.04.26.08.25.04;	author ajacoutot;	state Exp;
branches;
next	1.7;
commitid	U2wyfq8sPYBn4Lxu;

1.7
date	2016.04.15.14.11.09;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	Mbx3T92O3F2i3yTU;

1.6
date	2015.11.17.17.48.40;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	DLgevWL5LU1VuGWp;

1.5
date	2015.10.18.13.25.54;	author ajacoutot;	state Exp;
branches
	1.5.2.1;
next	1.4;
commitid	hskL6TnJZ8GALNPe;

1.4
date	2014.03.27.19.19.17;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2013.11.12.08.16.52;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2013.06.14.18.18.38;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2013.05.17.14.55.58;	author ajacoutot;	state Exp;
branches;
next	;

1.5.2.1
date	2015.11.17.17.48.04;	author ajacoutot;	state Exp;
branches;
next	;
commitid	ItfEwzpjPOBbTg3T;


desc
@@


1.11
log
@Update to gdm-3.24.1.
@
text
@$OpenBSD: patch-daemon_gdm-session_c,v 1.10 2017/03/11 00:22:27 ajacoutot Exp $

REVERT - OpenBSD does not have a systemd implementation (we need ConsoleKit)
From 9be58c9ec9a3a411492a5182ac4b0d51fdc3a323 Mon Sep 17 00:00:00 2001
From: Ray Strode <rstrode@@redhat.com>
Date: Fri, 12 Jun 2015 13:48:52 -0400
Subject: require logind support

REVERT - OpenBSD does not have a systemd implementation (we need ConsoleKit)
From a9cacb929470eb82582396984c61d5b611bfeb1a Mon Sep 17 00:00:00 2001
From: Ray Strode <rstrode@@redhat.com>
Date: Fri, 12 Jun 2015 14:33:40 -0400
Subject: session: drop session-type property

--- daemon/gdm-session.c.orig	Wed Apr 12 15:46:29 2017
+++ daemon/gdm-session.c	Mon Apr 17 14:17:28 2017
@@@@ -3074,6 +3074,10 @@@@ gdm_session_bypasses_xsession (GdmSession *self)
         g_return_val_if_fail (self != NULL, FALSE);
         g_return_val_if_fail (GDM_IS_SESSION (self), FALSE);
 
+        if (!LOGIND_RUNNING()) {
+                return GDM_SESSION_DISPLAY_MODE_REUSE_VT;
+        }
+
 #ifdef ENABLE_WAYLAND_SUPPORT
         if (gdm_session_is_wayland_session (self)) {
                 bypasses_xsession = TRUE;
@@@@ -3166,6 +3170,27 @@@@ gdm_session_select_program (GdmSession *self,
         g_free (self->priv->selected_program);
 
         self->priv->selected_program = g_strdup (text);
+}
+
+void
+gdm_session_select_session_type (GdmSession *self,
+                                 const char *text)
+{
+        GHashTableIter iter;
+        gpointer key, value;
+
+        g_debug ("GdmSession: selecting session type '%s'", text);
+
+        g_hash_table_iter_init (&iter, self->priv->conversations);
+        while (g_hash_table_iter_next (&iter, &key, &value)) {
+                GdmSessionConversation *conversation;
+
+                conversation = (GdmSessionConversation *) value;
+
+                gdm_dbus_worker_call_set_session_type (conversation->worker_proxy,
+                                                       text,
+                                                       NULL, NULL, NULL);
+        }
 }
 
 void
@


1.10
log
@Update to gdm-3.22.3.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gdm-session_c,v 1.9 2017/03/03 13:01:26 ajacoutot Exp $
d15 3
a17 3
--- daemon/gdm-session.c.orig	Fri Mar  3 21:31:20 2017
+++ daemon/gdm-session.c	Tue Mar  7 09:17:45 2017
@@@@ -3066,6 +3066,10 @@@@ gdm_session_bypasses_xsession (GdmSession *self)
d28 1
a28 1
@@@@ -3158,6 +3162,27 @@@@ gdm_session_select_program (GdmSession *self,
@


1.9
log
@Update to gdm-3.22.2.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gdm-session_c,v 1.8 2016/04/26 08:25:04 ajacoutot Exp $
d15 3
a17 3
--- daemon/gdm-session.c.orig	Wed Mar  1 16:58:36 2017
+++ daemon/gdm-session.c	Fri Mar  3 11:46:46 2017
@@@@ -3064,6 +3064,10 @@@@ gdm_session_bypasses_xsession (GdmSession *self)
d28 1
a28 1
@@@@ -3156,6 +3160,27 @@@@ gdm_session_select_program (GdmSession *self,
@


1.8
log
@Update to gdm-3.20.1.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gdm-session_c,v 1.7 2016/04/15 14:11:09 ajacoutot Exp $
d15 3
a17 3
--- daemon/gdm-session.c.orig	Tue Apr 19 07:00:04 2016
+++ daemon/gdm-session.c	Tue Apr 26 10:02:48 2016
@@@@ -3055,6 +3055,10 @@@@ gdm_session_bypasses_xsession (GdmSession *self)
d28 1
a28 1
@@@@ -3134,6 +3138,27 @@@@ gdm_session_select_program (GdmSession *self,
@


1.7
log
@Update to gdm-3.18.3.
Drop the gettext module while here.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gdm-session_c,v 1.6 2015/11/17 17:48:40 ajacoutot Exp $
d15 5
a19 5
--- daemon/gdm-session.c.orig	Thu Apr 14 07:56:26 2016
+++ daemon/gdm-session.c	Fri Apr 15 15:05:26 2016
@@@@ -3060,6 +3060,10 @@@@ gdm_session_get_display_mode (GdmSession *self)
                  self->priv->is_program_session? "yes" : "no",
                  self->priv->display_seat_id);
d26 3
a28 3
         /* Wayland sessions are for now assumed to run in a
          * mutter-launch-like environment, so we allocate
@@@@ -3098,6 +3102,27 @@@@ gdm_session_select_program (GdmSession *self,
@


1.6
log
@SECURITY update to gdm-3.18.2.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gdm-session_c,v 1.5 2015/10/18 13:25:54 ajacoutot Exp $
d15 3
a17 3
--- daemon/gdm-session.c.orig	Tue Nov 17 18:14:16 2015
+++ daemon/gdm-session.c	Tue Nov 17 18:39:14 2015
@@@@ -3071,6 +3071,10 @@@@ gdm_session_get_display_mode (GdmSession *self)
d28 1
a28 1
@@@@ -3109,6 +3113,27 @@@@ gdm_session_select_program (GdmSession *self,
@


1.5
log
@Update to gdm-3.18.0.
@
text
@d1 1
a1 1
$OpenBSD$
d15 3
a17 3
--- daemon/gdm-session.c.orig	Sun Oct 18 14:26:49 2015
+++ daemon/gdm-session.c	Sun Oct 18 14:23:39 2015
@@@@ -3041,6 +3041,10 @@@@ gdm_session_get_display_mode (GdmSession *self)
d28 1
a28 1
@@@@ -3079,6 +3083,27 @@@@ gdm_session_select_program (GdmSession *self,
@


1.5.2.1
log
@SECURITY fix for CVE-2015-7496 - lock screen bypass when holding escape key
@
text
@d3 2
a4 1
From 40bbaff5274d499b931037e7adb28683ff1f02b5 Mon Sep 17 00:00:00 2001
d6 2
a7 2
Date: Fri, 13 Nov 2015 11:14:59 -0500
Subject: session: disconnect signals from worker proxy when conversation is freed
d9 5
a13 4
From f3f7d09e0557bf52bccb58a4323c5fe2db32ecd1 Mon Sep 17 00:00:00 2001
From: Rui Matos <tiagomatos@@gmail.com>
Date: Sun, 15 Nov 2015 14:07:53 -0500
Subject: session: Cancel worker proxy async ops when freeing conversations
d15 5
a19 9
--- daemon/gdm-session.c.orig	Thu Jul  2 15:54:42 2015
+++ daemon/gdm-session.c	Tue Nov 17 18:46:20 2015
@@@@ -73,6 +73,7 @@@@ typedef struct
         GDBusMethodInvocation *pending_invocation;
         GdmDBusWorkerManager  *worker_manager_interface;
         GdmDBusWorker         *worker_proxy;
+        GCancellable          *worker_cancellable;
         char                  *session_id;
         guint32                is_stopping : 1;
d21 9
a29 1
@@@@ -1031,6 +1032,8 @@@@ register_worker (GdmDBusWorkerManager  *worker_manager
d31 17
a47 3
         g_dbus_proxy_set_default_timeout (G_DBUS_PROXY (conversation->worker_proxy), G_MAXINT);
 
+        conversation->worker_cancellable = g_cancellable_new ();
d49 3
a51 32
         g_signal_connect (conversation->worker_proxy,
                           "username-changed",
                           G_CALLBACK (worker_on_username_changed), conversation);
@@@@ -1666,7 +1669,31 @@@@ free_conversation (GdmSessionConversation *conversatio
         g_free (conversation->starting_username);
         g_free (conversation->session_id);
         g_clear_object (&conversation->worker_manager_interface);
-        g_clear_object (&conversation->worker_proxy);
+
+        g_cancellable_cancel (conversation->worker_cancellable);
+        g_clear_object (&conversation->worker_cancellable);
+
+        if (conversation->worker_proxy != NULL) {
+                g_signal_handlers_disconnect_by_func (conversation->worker_proxy,
+                                                      G_CALLBACK (worker_on_username_changed),
+                                                      conversation);
+                g_signal_handlers_disconnect_by_func (conversation->worker_proxy,
+                                                      G_CALLBACK (worker_on_session_exited),
+                                                      conversation);
+                g_signal_handlers_disconnect_by_func (conversation->worker_proxy,
+                                                      G_CALLBACK (worker_on_reauthenticated),
+                                                      conversation);
+                g_signal_handlers_disconnect_by_func (conversation->worker_proxy,
+                                                      G_CALLBACK (worker_on_saved_language_name_read),
+                                                      conversation);
+                g_signal_handlers_disconnect_by_func (conversation->worker_proxy,
+                                                      G_CALLBACK (worker_on_saved_session_name_read),
+                                                      conversation);
+                g_signal_handlers_disconnect_by_func (conversation->worker_proxy,
+                                                      G_CALLBACK (worker_on_cancel_pending_query),
+                                                      conversation);
+                g_clear_object (&conversation->worker_proxy);
a52 84
         g_clear_object (&conversation->session);
         g_free (conversation);
 }
@@@@ -1996,7 +2023,7 @@@@ send_setup (GdmSession *self,
                                             display_hostname,
                                             self->priv->display_is_local,
                                             self->priv->display_is_initial,
-                                            NULL,
+                                            conversation->worker_cancellable,
                                             (GAsyncReadyCallback) on_setup_complete_cb,
                                             conversation);
         }
@@@@ -2062,7 +2089,7 @@@@ send_setup_for_user (GdmSession *self,
                                                      display_hostname,
                                                      self->priv->display_is_local,
                                                      self->priv->display_is_initial,
-                                                     NULL,
+                                                     conversation->worker_cancellable,
                                                      (GAsyncReadyCallback) on_setup_complete_cb,
                                                      conversation);
         }
@@@@ -2124,7 +2151,7 @@@@ send_setup_for_program (GdmSession *self,
                                                         self->priv->display_is_local,
                                                         self->priv->display_is_initial,
                                                         log_file,
-                                                        NULL,
+                                                        conversation->worker_cancellable,
                                                         (GAsyncReadyCallback) on_setup_complete_cb,
                                                         conversation);
         }
@@@@ -2182,7 +2209,7 @@@@ gdm_session_authenticate (GdmSession *self,
         conversation = find_conversation_by_name (self, service_name);
         if (conversation != NULL) {
                 gdm_dbus_worker_call_authenticate (conversation->worker_proxy,
-                                                   NULL,
+                                                   conversation->worker_cancellable,
                                                    (GAsyncReadyCallback) on_authenticate_cb,
                                                    conversation);
         }
@@@@ -2199,7 +2226,7 @@@@ gdm_session_authorize (GdmSession *self,
         conversation = find_conversation_by_name (self, service_name);
         if (conversation != NULL) {
                 gdm_dbus_worker_call_authorize (conversation->worker_proxy,
-                                                NULL,
+                                                conversation->worker_cancellable,
                                                 (GAsyncReadyCallback) on_authorize_cb,
                                                 conversation);
         }
@@@@ -2216,7 +2243,7 @@@@ gdm_session_accredit (GdmSession *self,
         conversation = find_conversation_by_name (self, service_name);
         if (conversation != NULL) {
                 gdm_dbus_worker_call_establish_credentials (conversation->worker_proxy,
-                                                            NULL,
+                                                            conversation->worker_cancellable,
                                                             (GAsyncReadyCallback) on_establish_credentials_cb,
                                                             conversation);
         }
@@@@ -2230,7 +2257,8 @@@@ send_environment_variable (const char             *key
 {
         gdm_dbus_worker_call_set_environment_variable (conversation->worker_proxy,
                                                        key, value,
-                                                       NULL, NULL, NULL);
+                                                       conversation->worker_cancellable,
+                                                       NULL, NULL);
 }
 
 static void
@@@@ -2418,7 +2446,8 @@@@ send_display_mode (GdmSession *self,
         mode = gdm_session_get_display_mode (self);
         gdm_dbus_worker_call_set_session_display_mode (conversation->worker_proxy,
                                                        gdm_session_display_mode_to_string (mode),
-                                                       NULL, NULL, NULL);
+                                                       conversation->worker_cancellable,
+                                                       NULL, NULL);
 }
 
 static void
@@@@ -2434,7 +2463,8 @@@@ send_session_type (GdmSession *self,
         gdm_dbus_worker_call_set_environment_variable (conversation->worker_proxy,
                                                        "XDG_SESSION_TYPE",
                                                        session_type,
-                                                       NULL, NULL, NULL);
+                                                       conversation->worker_cancellable,
+                                                       NULL, NULL);
a55 37
@@@@ -2452,7 +2482,7 @@@@ gdm_session_open_session (GdmSession *self,
                 send_session_type (self, conversation);
 
                 gdm_dbus_worker_call_open (conversation->worker_proxy,
-                                           NULL,
+                                           conversation->worker_cancellable,
                                            (GAsyncReadyCallback) on_opened, conversation);
         }
 }
@@@@ -2638,7 +2668,7 @@@@ gdm_session_start_session (GdmSession *self,
 
         gdm_dbus_worker_call_start_program (conversation->worker_proxy,
                                             program,
-                                            NULL,
+                                            conversation->worker_cancellable,
                                             (GAsyncReadyCallback) on_start_program_cb,
                                             conversation);
         g_free (program);
@@@@ -2770,7 +2800,7 @@@@ gdm_session_start_reauthentication (GdmSession *sessio
         gdm_dbus_worker_call_start_reauthentication (conversation->worker_proxy,
                                                      (int) pid_of_caller,
                                                      (int) uid_of_caller,
-                                                     NULL,
+                                                     conversation->worker_cancellable,
                                                      (GAsyncReadyCallback) on_reauthentication_started_cb,
                                                      conversation);
 }
@@@@ -3032,7 +3062,8 @@@@ gdm_session_select_session (GdmSession *self,
 
                 gdm_dbus_worker_call_set_session_name (conversation->worker_proxy,
                                                        get_session_name (self),
-                                                       NULL, NULL, NULL);
+                                                       conversation->worker_cancellable,
+                                                       NULL, NULL);
         }
 }
 
@


1.4
log
@Update to gdm-3.12.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gdm-session_c,v 1.3 2013/11/12 08:16:52 ajacoutot Exp $
d3 5
a7 4
From 87f181489983bb8d640a6a227caa8cbfc0fff853 Mon Sep 17 00:00:00 2001
From: Laurent Bigonville <bigon@@bigon.be>
Date: Sun, 10 Nov 2013 23:21:37 +0000
Subject: Use g_credentials_get_unix_pid() instead of home baked function
d9 44
a52 4
--- daemon/gdm-session.c.orig	Thu Sep 19 21:29:48 2013
+++ daemon/gdm-session.c	Tue Nov 12 09:01:43 2013
@@@@ -970,28 +970,6 @@@@ allow_worker_function (GDBusAuthObserver *observer,
         return FALSE;
d55 1
a55 52
-static GPid
-credentials_get_unix_pid (GCredentials *credentials)
-{
-        GPid pid = 0;
-        gpointer native_credentials = NULL;
-
-#ifdef __linux__
-        native_credentials = g_credentials_get_native (credentials, G_CREDENTIALS_TYPE_LINUX_UCRED);
-        pid = (GPid) ((struct ucred *) native_credentials)->pid;
-#elif defined (__FreeBSD__)
-        native_credentials = g_credentials_get_native (credentials, G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED);
-        pid = (GPid) ((struct cmsgcred *) native_credentials)->cmcred_pid;
-#elif defined (__OpenBSD__)
-        native_credentials = g_credentials_get_native (credentials, G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED);
-        pid = (GPid) ((struct sockpeercred *) native_credentials)->pid;
-#else
-#error "platform not supported, need mechanism to detect pid of connected process"
-#endif
-
-        return pid;
-}
-
 static gboolean
 register_worker (GdmDBusWorkerManager  *worker_manager_interface,
                  GDBusMethodInvocation *invocation,
@@@@ -1021,7 +999,7 @@@@ register_worker (GdmDBusWorkerManager  *worker_manager
                                     connection_node);
 
         credentials = g_dbus_connection_get_peer_credentials (connection);
-        pid = credentials_get_unix_pid (credentials);
+        pid = g_credentials_get_unix_pid (credentials, NULL);
 
         conversation = find_conversation_by_pid (self, (GPid) pid);
 
@@@@ -1479,7 +1457,7 @@@@ on_outside_connection_closed (GDBusConnection *connect
                             connection);
 
         credentials = g_dbus_connection_get_peer_credentials (connection);
-        pid_of_client = credentials_get_unix_pid (credentials);
+        pid_of_client = g_credentials_get_unix_pid (credentials, NULL);
 
         g_signal_emit (G_OBJECT (self),
                        signals [CLIENT_DISCONNECTED],
@@@@ -1531,7 +1509,7 @@@@ handle_connection_from_outside (GDBusServer      *serv
         }
 
         credentials = g_dbus_connection_get_peer_credentials (connection);
-        pid_of_client = credentials_get_unix_pid (credentials);
+        pid_of_client = g_credentials_get_unix_pid (credentials, NULL);
 
         g_signal_emit (G_OBJECT (self),
                        signals [CLIENT_CONNECTED],
@


1.3
log
@Use g_credentials_get_unix_pid() instead of home baked function (upstream).
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to gdm-3.8.3.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gdm-session_c,v 1.1 2013/05/17 14:55:58 ajacoutot Exp $
d3 4
a6 4
From 8b0fbe27f0fbaa09dfcfd0485c4ca06982c0ffe9 Mon Sep 17 00:00:00 2001
From: Colin Walters <walters@@verbum.org>
Date: Mon, 29 Apr 2013 20:49:46 +0000
Subject: session: Don't accept empty string as saved language
d8 5
a12 12
--- daemon/gdm-session.c.orig	Wed Jan  2 00:36:25 2013
+++ daemon/gdm-session.c	Fri May 17 16:40:21 2013
@@@@ -887,8 +887,8 @@@@ worker_on_saved_language_name_read (GdmDBusWorker     
 {
         GdmSession *self = conversation->session;
 
-        if (strcmp (language_name,
-                    get_default_language_name (self)) != 0) {
+        if (strlen (language_name) > 0 &&
+            strcmp (language_name, get_default_language_name (self)) != 0) {
                 g_free (self->priv->saved_language);
                 self->priv->saved_language = g_strdup (language_name);
d14 52
@


1.1
log
@Fix a crash on logout (from upstream).
@
text
@d1 1
a1 1
$OpenBSD$
@

