head	1.6;
access;
symbols
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2017.03.03.13.01.26;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	yUSOqvnIs3zvjqyw;

1.5
date	2016.10.31.16.15.46;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	NJnOZaVXR2tBRWDk;

1.4
date	2016.04.26.08.25.04;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	U2wyfq8sPYBn4Lxu;

1.3
date	2015.10.18.13.25.54;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	hskL6TnJZ8GALNPe;

1.2
date	2015.09.18.20.30.07;	author ajacoutot;	state dead;
branches;
next	1.1;
commitid	2LWggoIZKSMFZmLi;

1.1
date	2015.09.18.13.38.45;	author ajacoutot;	state Exp;
branches;
next	;
commitid	MvwiF4ldCPegnE0r;


desc
@@


1.6
log
@Update to gdm-3.22.2.
@
text
@$OpenBSD: patch-daemon_gdm-local-display-factory_c,v 1.5 2016/10/31 16:15:46 ajacoutot Exp $

REVERT - OpenBSD does not have a systemd implementation (we need ConsoleKit)
From 1ac67f522f5690c27023d98096ca817f12f7eb88 Mon Sep 17 00:00:00 2001
From: Ray Strode <rstrode@@redhat.com>
Date: Fri, 12 Jun 2015 13:28:01 -0400
Subject: drop consolekit support

REVERT - OpenBSD does not have a systemd implementation (we need ConsoleKit)
From 9be58c9ec9a3a411492a5182ac4b0d51fdc3a323 Mon Sep 17 00:00:00 2001
From: Ray Strode <rstrode@@redhat.com>
Date: Fri, 12 Jun 2015 13:48:52 -0400
Subject: require logind support

--- daemon/gdm-local-display-factory.c.orig	Wed Mar  1 16:58:36 2017
+++ daemon/gdm-local-display-factory.c	Fri Mar  3 12:00:56 2017
@@@@ -42,6 +42,8 @@@@
 
 #define GDM_LOCAL_DISPLAY_FACTORY_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), GDM_TYPE_LOCAL_DISPLAY_FACTORY, GdmLocalDisplayFactoryPrivate))
 
+#define CK_SEAT1_PATH                       "/org/freedesktop/ConsoleKit/Seat1"
+
 #define GDM_DBUS_PATH                       "/org/gnome/DisplayManager"
 #define GDM_LOCAL_DISPLAY_FACTORY_DBUS_PATH GDM_DBUS_PATH "/LocalDisplayFactory"
 #define GDM_MANAGER_DBUS_NAME               "org.gnome.DisplayManager.LocalDisplayFactory"
@@@@ -57,8 +59,10 @@@@ struct GdmLocalDisplayFactoryPrivate
         /* FIXME: this needs to be per seat? */
         guint            num_failures;
 
+#ifdef WITH_SYSTEMD
         guint            seat_new_id;
         guint            seat_removed_id;
+#endif
 };
 
 enum {
@@@@ -206,8 +210,10 @@@@ gdm_local_display_factory_create_transient_display (Gd
 
         g_debug ("GdmLocalDisplayFactory: Creating transient display");
 
-#ifdef ENABLE_USER_DISPLAY_SERVER
-        display = gdm_local_display_new ();
+#if defined ENABLE_USER_DISPLAY_SERVER && defined WITH_SYSTEMD
+	if (LOGIND_RUNNING() > 0) {
+	        display = gdm_local_display_new ();
+	}
 #else
         if (display == NULL) {
                 guint32 num;
@@@@ -289,7 +295,7 @@@@ on_display_status_changed (GdmDisplay             *dis
                         /* reset num failures */
                         factory->priv->num_failures = 0;
 
-                        gdm_local_display_factory_sync_seats (factory);
+			create_display (factory, seat_id, session_type, is_initial);
                 }
                 break;
         case GDM_DISPLAY_FAILED:
@@@@ -368,7 +374,7 @@@@ create_display (GdmLocalDisplayFactory *factory,
 
         g_debug ("GdmLocalDisplayFactory: Adding display on seat %s", seat_id);
 
-#ifdef ENABLE_USER_DISPLAY_SERVER
+#if defined ENABLE_USER_DISPLAY_SERVER && defined WITH_SYSTEMD
         if (g_strcmp0 (seat_id, "seat0") == 0) {
                 display = gdm_local_display_new ();
                 if (session_type != NULL) {
@@@@ -400,6 +406,8 @@@@ create_display (GdmLocalDisplayFactory *factory,
         return display;
 }
 
+#ifdef WITH_SYSTEMD
+
 static void
 delete_display (GdmLocalDisplayFactory *factory,
                 const char             *seat_id) {
@@@@ -536,6 +544,7 @@@@ gdm_local_display_factory_stop_monitor (GdmLocalDispla
                 factory->priv->seat_removed_id = 0;
         }
 }
+#endif
 
 static void
 on_display_added (GdmDisplayStore        *display_store,
@@@@ -576,6 +585,7 @@@@ static gboolean
 gdm_local_display_factory_start (GdmDisplayFactory *base_factory)
 {
         GdmLocalDisplayFactory *factory = GDM_LOCAL_DISPLAY_FACTORY (base_factory);
+        GdmDisplay             *display;
         GdmDisplayStore *store;
 
         g_return_val_if_fail (GDM_IS_LOCAL_DISPLAY_FACTORY (factory), FALSE);
@@@@ -594,8 +604,17 @@@@ gdm_local_display_factory_start (GdmDisplayFactory *ba
                                  factory,
                                  0);
 
-        gdm_local_display_factory_start_monitor (factory);
-        return gdm_local_display_factory_sync_seats (factory);
+#ifdef WITH_SYSTEMD
+        if (LOGIND_RUNNING()) {
+                gdm_local_display_factory_start_monitor (factory);
+                return gdm_local_display_factory_sync_seats (factory);
+        }
+#endif
+
+        /* On ConsoleKit just create Seat1, and that's it. */
+        display = create_display (factory, CK_SEAT1_PATH, NULL, TRUE);
+
+        return display != NULL;
 }
 
 static gboolean
@@@@ -606,7 +625,9 @@@@ gdm_local_display_factory_stop (GdmDisplayFactory *bas
 
         g_return_val_if_fail (GDM_IS_LOCAL_DISPLAY_FACTORY (factory), FALSE);
 
+#ifdef WITH_SYSTEMD
         gdm_local_display_factory_stop_monitor (factory);
+#endif
 
         store = gdm_display_factory_get_display_store (GDM_DISPLAY_FACTORY (factory));
 
@@@@ -762,7 +783,9 @@@@ gdm_local_display_factory_finalize (GObject *object)
 
         g_hash_table_destroy (factory->priv->used_display_numbers);
 
+#ifdef WITH_SYSTEMD
         gdm_local_display_factory_stop_monitor (factory);
+#endif
 
         G_OBJECT_CLASS (gdm_local_display_factory_parent_class)->finalize (object);
 }
@


1.5
log
@Update to gdm-3.22.1.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gdm-local-display-factory_c,v 1.4 2016/04/26 08:25:04 ajacoutot Exp $
d15 2
a16 2
--- daemon/gdm-local-display-factory.c.orig	Wed Sep 21 21:27:20 2016
+++ daemon/gdm-local-display-factory.c	Mon Oct 31 15:06:42 2016
d37 1
a37 1
@@@@ -206,10 +210,22 @@@@ gdm_local_display_factory_create_transient_display (Gd
d41 1
d43 8
a50 21
+#ifdef WITH_SYSTEMD
+        if (LOGIND_RUNNING() > 0) {
+                display = gdm_local_display_new ();
+        }
+#endif
 
+        if (display == NULL) {
+                guint32 num;
+
+                num = take_next_display_number (factory);
+
+                display = gdm_legacy_display_new (num);
+        }
+
         g_object_set (display,
-                      "seat-id", "seat0"
+                      "seat-id", "seat-0",
                       "allow-timed-login", FALSE,
                       NULL);
 
@@@@ -279,7 +295,7 @@@@ on_display_status_changed (GdmDisplay             *dis
d59 2
a60 1
@@@@ -359,12 +375,14 @@@@ create_display (GdmLocalDisplayFactory *factory,
d63 2
a64 2
 
+#ifdef WITH_SYSTEMD
d68 1
a68 8
                         g_object_set (G_OBJECT (display), "session-type", session_type, NULL);
                 }
         }
+#endif
 
         if (display == NULL) {
                 guint32 num;
@@@@ -389,6 +407,8 @@@@ create_display (GdmLocalDisplayFactory *factory,
d77 1
a77 1
@@@@ -525,6 +545,7 @@@@ gdm_local_display_factory_stop_monitor (GdmLocalDispla
d85 1
a85 1
@@@@ -565,6 +586,7 @@@@ static gboolean
d93 1
a93 1
@@@@ -583,8 +605,17 @@@@ gdm_local_display_factory_start (GdmDisplayFactory *ba
d113 1
a113 1
@@@@ -595,7 +626,9 @@@@ gdm_local_display_factory_stop (GdmDisplayFactory *bas
d123 1
a123 1
@@@@ -751,7 +784,9 @@@@ gdm_local_display_factory_finalize (GObject *object)
@


1.4
log
@Update to gdm-3.20.1.
@
text
@d1 1
a1 1
$OpenBSD$
d15 2
a16 2
--- daemon/gdm-local-display-factory.c.orig	Tue Apr 19 07:00:04 2016
+++ daemon/gdm-local-display-factory.c	Tue Apr 26 10:11:57 2016
d103 1
a103 1
@@@@ -563,6 +584,7 @@@@ static gboolean
d111 3
a113 3
@@@@ -579,8 +601,17 @@@@ gdm_local_display_factory_start (GdmDisplayFactory *ba
                           G_CALLBACK (on_display_removed),
                           factory);
d131 1
a131 1
@@@@ -591,7 +622,9 @@@@ gdm_local_display_factory_stop (GdmDisplayFactory *bas
d141 1
a141 1
@@@@ -747,7 +780,9 @@@@ gdm_local_display_factory_finalize (GObject *object)
@


1.3
log
@Update to gdm-3.18.0.
@
text
@d15 3
a17 3
--- daemon/gdm-local-display-factory.c.orig	Mon Sep 21 16:12:33 2015
+++ daemon/gdm-local-display-factory.c	Sun Oct 18 15:06:12 2015
@@@@ -42,6 +42,7 @@@@
d22 1
a22 2
 #define SYSTEMD_SEAT0_PATH                  "seat0"
 
d24 3
a26 1
@@@@ -59,8 +60,10 @@@@ struct GdmLocalDisplayFactoryPrivate
d37 1
a37 23
@@@@ -190,8 +193,20 @@@@ store_display (GdmLocalDisplayFactory *factory,
 static const char *
 get_seat_of_transient_display (GdmLocalDisplayFactory *factory)
 {
+        const char *seat_id = NULL;
+
         /* FIXME: don't hardcode seat */
-        return SYSTEMD_SEAT0_PATH;
+#ifdef WITH_SYSTEMD
+        if (LOGIND_RUNNING() > 0) {
+                seat_id = SYSTEMD_SEAT0_PATH;
+        }
+#endif
+
+        if (seat_id == NULL) {
+                seat_id = CK_SEAT1_PATH;
+        }
+
+        return seat_id;
 }
 
 /*
@@@@ -216,8 +231,20 @@@@ gdm_local_display_factory_create_transient_display (Gd
a55 1
         seat_id = get_seat_of_transient_display (factory);
d57 6
a62 2
                       "seat-id", seat_id,
@@@@ -290,7 +317,7 @@@@ on_display_status_changed (GdmDisplay             *dis
d71 1
a71 1
@@@@ -372,12 +399,14 @@@@ create_display (GdmLocalDisplayFactory *factory,
d86 1
a86 1
@@@@ -402,6 +431,8 @@@@ create_display (GdmLocalDisplayFactory *factory,
d95 1
a95 1
@@@@ -538,6 +569,7 @@@@ gdm_local_display_factory_stop_monitor (GdmLocalDispla
d103 1
a103 1
@@@@ -576,6 +608,7 @@@@ static gboolean
d111 1
a111 1
@@@@ -592,8 +625,17 @@@@ gdm_local_display_factory_start (GdmDisplayFactory *ba
d131 1
a131 1
@@@@ -604,7 +646,9 @@@@ gdm_local_display_factory_stop (GdmDisplayFactory *bas
d141 1
a141 1
@@@@ -760,7 +804,9 @@@@ gdm_local_display_factory_finalize (GObject *object)
@


1.2
log
@Updatet o gdm-3.16.4.
@
text
@d1 1
a1 1
$OpenBSD: patch-daemon_gdm-local-display-factory_c,v 1.1 2015/09/18 13:38:45 ajacoutot Exp $
d3 5
a7 1
https://bugzilla.gnome.org/show_bug.cgi?id=749418
d9 46
a54 4
--- daemon/gdm-local-display-factory.c.orig	Wed Sep 16 15:27:06 2015
+++ daemon/gdm-local-display-factory.c	Fri Sep 18 15:34:09 2015
@@@@ -271,6 +271,26 @@@@ gdm_local_display_factory_create_transient_display (Gd
         return ret;
d57 6
a62 5
+static gboolean
+ensure_initial_display_configuration (GdmLocalDisplayFactory *factory)
+{
+        GdmDisplay *display;
+
d64 2
a65 5
+        if (LOGIND_RUNNING()) {
+                if (!factory->priv->seat_new_id) {
+                        gdm_local_display_factory_start_monitor (factory);
+                }
+                return gdm_local_display_factory_sync_seats (factory);
d68 3
d72 1
a72 2
+        /* On ConsoleKit just create Seat1, and that's it. */
+        display = create_display (factory, CK_SEAT1_PATH, NULL, TRUE);
d74 2
a75 2
+        return display != NULL;
+}
d77 4
a80 4
 static void
 on_display_status_changed (GdmDisplay             *display,
                            GParamSpec             *arg1,
@@@@ -317,7 +337,7 @@@@ on_display_status_changed (GdmDisplay             *dis
d85 1
a85 1
+                        ensure_initial_display_configuration (factory);
d89 33
a121 1
@@@@ -609,7 +629,7 @@@@ static gboolean
d125 1
a125 2
-        GdmDisplay             *display;
+        gboolean                display_started;
d129 1
a129 1
@@@@ -626,17 +646,9 @@@@ gdm_local_display_factory_start (GdmDisplayFactory *ba
d133 13
a145 13
-#ifdef WITH_SYSTEMD
-        if (LOGIND_RUNNING()) {
-                gdm_local_display_factory_start_monitor (factory);
-                return gdm_local_display_factory_sync_seats (factory);
-        }
-#endif
+        display_started = ensure_initial_display_configuration (factory);
 
-        /* On ConsoleKit just create Seat1, and that's it. */
-        display = create_display (factory, CK_SEAT1_PATH, NULL, TRUE);
-
-        return display != NULL;
+        return display_started;
d149 20
@


1.1
log
@Update to gdm-3.16.3.
@
text
@d1 1
a1 1
$OpenBSD$
@

