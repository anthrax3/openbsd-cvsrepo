head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2013.04.04.07.05.06;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2013.03.11.09.37.03;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.09.27.10.28.22;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2011.09.13.07.20.37;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to alacarte-3.7.90 to unbreak runtime.

ok jasper@@
@
text
@$OpenBSD: patch-Alacarte_MenuEditor_py,v 1.3 2013/03/11 09:37:03 ajacoutot Exp $

From fe7211f2eb4c8bcf7cbddca75bf4e28ee7b98659 Mon Sep 17 00:00:00 2001
From: Jasper St. Pierre <jstpierre@@mecheye.net>
Date: Tue, 23 Oct 2012 03:08:38 +0000
Subject: MenuEditor: deal with the case of having no $XDG_MENU_PREFIX

From f7835d7dcd37b10f25e208581ec52919cf68e732 Mon Sep 17 00:00:00 2001
From: Jasper St. Pierre <jstpierre@@mecheye.net>
Date: Sat, 17 Nov 2012 04:22:14 +0000
Subject: Fix crashes when writing out files

From 10f611c074ae7b2ab0ec48ff3b8946c5f8e19970 Mon Sep 17 00:00:00 2001
From: Jasper St. Pierre <jstpierre@@mecheye.net>
Date: Sat, 17 Nov 2012 04:26:14 +0000
Subject: Use with statements for management

--- Alacarte/MenuEditor.py.orig	Mon Mar 11 09:45:45 2013
+++ Alacarte/MenuEditor.py	Mon Mar 11 09:45:33 2013
@@@@ -16,6 +16,7 @@@@
 #   License along with this library; if not, write to the Free Software
 #   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
+import codecs
 import os
 import xml.dom.minidom
 import xml.parsers.expat
@@@@ -23,7 +24,7 @@@@ from gi.repository import GMenu, GLib
 from Alacarte import util
 
 class MenuEditor(object):
-    def __init__(self, name=os.environ['XDG_MENU_PREFIX'] + 'applications.menu'):
+    def __init__(self, name=os.environ.get('XDG_MENU_PREFIX', '') + 'applications.menu'):
         self.name = name
 
         self.tree = GMenu.Tree.new(name, GMenu.TreeFlags.SHOW_EMPTY|GMenu.TreeFlags.INCLUDE_EXCLUDED|GMenu.TreeFlags.INCLUDE_NODISPLAY|GMenu.TreeFlags.SHOW_ALL_SEPARATORS|GMenu.TreeFlags.SORT_DISPLAY_NAME)
@@@@ -48,9 +49,8 @@@@ class MenuEditor(object):
         self.load()
 
     def save(self):
-        fd = open(self.path, 'w')
-        fd.write(self.dom.toprettyxml())
-        fd.close()
+        with codecs.open(self.path, 'w', 'utf8') as f:
+            f.write(self.dom.toprettyxml())
 
     def restoreToSystem(self):
         self.restoreTree(self.tree.get_root_directory())
@@@@ -259,9 +259,8 @@@@ class MenuEditor(object):
 
         contents, length = keyfile.to_data()
 
-        f = open(out_path, 'w')
-        f.write(contents)
-        f.close()
+        with codecs.open(out_path, 'w', 'utf8') as f:
+            f.write(contents)
 
         self.addItem(new_parent, file_id, dom)
         self.positionItem(new_parent, ('Item', file_id), before, after)
@@@@ -400,9 +399,10 @@@@ class MenuEditor(object):
 
         contents, length = keyfile.to_data()
 
-        f = open(os.path.join(util.getUserItemPath(), file_id), 'w')
-        f.write(contents)
-        f.close()
+        path = os.path.join(util.getUserItemPath(), file_id)
+        with codecs.open(path, 'w', 'utf8') as f:
+            f.write(contents)
+
         return file_id
 
     def writeMenu(self, menu, **kwargs):
@@@@ -421,9 +421,9 @@@@ class MenuEditor(object):
 
         contents, length = keyfile.to_data()
 
-        f = open(os.path.join(util.getUserDirectoryPath(), file_id), 'w')
-        f.write(contents)
-        f.close()
+        path = os.path.join(util.getUserDirectoryPath(), file_id)
+        with codecs.open(path, 'w', 'utf8') as f:
+            f.write(contents)
         return file_id
 
     def getXmlNodesByName(self, name, element):
@


1.3
log
@Resurrect alacarte now that's it's being maintained again and update to
alacarte-3.6.1.
(manually addings the dirs and not importing since the hierarchy exists
in CVS)

Alacarte is a menu editor for GNOME using the freedesktop.org menu
specification.

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@remove, this app is broken and deprecated in several ways:
- still hasn't been ported to the new libgnome-menus api
- hasn't had a real release in two years
- uses old pygobject2 with pygi support, which has been moved to
  py-gobject3 to facilitate other development in the tree.

  (at least gmenu-simple-editor works again..)

  as discussed with aja@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Alacarte_MenuEditor_py,v 1.1 2011/09/13 07:20:37 ajacoutot Exp $
d3 4
a6 4
From 8c33986006604f4fa308c439466f7de9b5c9227a Mon Sep 17 00:00:00 2001
From: Josselin Mouette <joss@@debian.org>
Date: Mon, 22 Aug 2011 18:47:47 +0000
Subject: Fix Python error on startup with gnome-menus 2.91.6+
d8 80
a87 104
--- Alacarte/MenuEditor.py.orig	Tue Sep  8 12:04:27 2009
+++ Alacarte/MenuEditor.py	Tue Sep 13 08:54:29 2011
@@@@ -48,22 +48,10 @@@@ class MenuEditor:
 			self.applications.dom = xml.dom.minidom.parse(self.applications.path)
 		self.__remove_whilespace_nodes(self.applications.dom)
 
-		self.settings = Menu() 	 
-		self.settings.tree = gmenu.lookup_tree('settings.menu', gmenu.FLAGS_SHOW_EMPTY|gmenu.FLAGS_INCLUDE_EXCLUDED|gmenu.FLAGS_INCLUDE_NODISPLAY|gmenu.FLAGS_SHOW_ALL_SEPARATORS)
-		self.settings.visible_tree = gmenu.lookup_tree('settings.menu') 	 
-		self.settings.tree.sort_key = gmenu.SORT_DISPLAY_NAME
-		self.settings.visible_tree.sort_key = gmenu.SORT_DISPLAY_NAME
-		self.settings.path = os.path.join(util.getUserMenuPath(), self.settings.tree.get_menu_file()) 	 
-		if not os.path.isfile(self.settings.path): 	 
-			self.settings.dom = xml.dom.minidom.parseString(util.getUserMenuXml(self.settings.tree)) 	 
-		else: 	 
-			self.settings.dom = xml.dom.minidom.parse(self.settings.path) 	 
-		self.__remove_whilespace_nodes(self.settings.dom)
-
 		self.save(True)
 
 	def save(self, from_loading=False):
-		for menu in ('applications', 'settings'):
+		for menu in ('applications',):
 			fd = open(getattr(self, menu).path, 'w')
 			fd.write(re.sub("\n[\s]*([^\n<]*)\n[\s]*</", "\\1</", getattr(self, menu).dom.toprettyxml().replace('<?xml version="1.0" ?>\n', '')))
 			fd.close()
@@@@ -85,7 +73,7 @@@@ class MenuEditor:
 				os.unlink(file_path)
 
 	def revert(self):
-		for name in ('applications', 'settings'):
+		for name in ('applications',):
 			menu = getattr(self, name)
 			self.revertTree(menu.tree.root)
 			path = os.path.join(util.getUserMenuPath(), menu.tree.get_menu_file())
@@@@ -126,7 +114,7 @@@@ class MenuEditor:
 			os.unlink(file_path)
 			redo.append(redo_path)
 		#reload DOM to make changes stick
-		for name in ('applications', 'settings'):
+		for name in ('applications',):
 			menu = getattr(self, name)
 			if not os.path.isfile(menu.path):
 				menu.dom = xml.dom.minidom.parseString(util.getUserMenuXml(menu.tree))
@@@@ -150,7 +138,7 @@@@ class MenuEditor:
 			os.unlink(file_path)
 			undo.append(undo_path)
 		#reload DOM to make changes stick
-		for name in ('applications', 'settings'):
+		for name in ('applications',):
 			menu = getattr(self, name)
 			if not os.path.isfile(menu.path):
 				menu.dom = xml.dom.minidom.parseString(util.getUserMenuXml(menu.tree))
@@@@ -162,7 +150,6 @@@@ class MenuEditor:
 	def getMenus(self, parent=None):
 		if parent == None:
 			yield self.applications.tree.root
-			yield self.settings.tree.root
 		else:
 			for menu in parent.get_contents():
 				if menu.get_type() == gmenu.TYPE_DIRECTORY:
@@@@ -430,31 +417,13 @@@@ class MenuEditor:
 			self.__undo[-1].append(undo_path)
 
 	def __getMenu(self, item):
-		root = item.get_parent()
-		if not root:
-			#already at the top
-			root = item
-		else:
-			while True:
-				if root.get_parent():
-					root = root.get_parent()
-				else:
-					break
-		if root.menu_id == self.applications.tree.root.menu_id:
-			return self.applications
-		return self.settings
+		return self.applications
 
 	def __findMenu(self, menu_id, parent=None):
 		if parent == None:
-			menu = self.__findMenu(menu_id, self.applications.tree.root)
-			if menu != None:
-				return menu
-			else:
-				return self.__findMenu(menu_id, self.settings.tree.root)
+			return self.__findMenu(menu_id, self.applications.tree.root)
 		if menu_id == self.applications.tree.root.menu_id:
 			return self.applications.tree.root
-		if menu_id == self.settings.tree.root.menu_id:
-			return self.settings.tree.root
 		for item in parent.get_contents():
 			if item.get_type() == gmenu.TYPE_DIRECTORY:
 				if item.menu_id == menu_id:
@@@@ -469,8 +438,6 @@@@ class MenuEditor:
 		menu = self.__getMenu(item)
 		if menu == self.applications:
 			root = self.applications.visible_tree.root
-		elif menu == self.settings:
-			root = self.settings.visible_tree.root
 		if item.get_type() == gmenu.TYPE_DIRECTORY:
 			if self.__findMenu(item.menu_id, root) == None:
 				return False
@


1.1
log
@Fix Alacarte on GNOME 3 and add missing category to the desktop file.
@
text
@d1 1
a1 1
$OpenBSD$
@

