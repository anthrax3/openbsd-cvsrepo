head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2013.03.29.08.46.00;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2013.03.28.19.32.27;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to gcr-3.8.0.
@
text
@$OpenBSD: patch-gck_gck-misc_c,v 1.1 2013/03/28 19:32:27 ajacoutot Exp $

From 0b889388a7f45258fa2291dd577b2ea7ca8d42c0 Mon Sep 17 00:00:00 2001
From: Stef Walter <stefw@@gnome.org>
Date: Mon, 11 Feb 2013 16:43:54 +0000
Subject: Use GObject.Object instead of GLib.Object in introspection annotations

--- gck/gck-misc.c.orig	Sat Oct 27 15:03:06 2012
+++ gck/gck-misc.c	Thu Mar 28 09:38:57 2013
@@@@ -261,7 +261,7 @@@@ gck_list_get_boxed_type (void)
 
 /**
  * gck_list_unref_free: (skip)
- * @@reflist: (element-type GLib.Object): list of Gobject reference counted pointers
+ * @@reflist: (element-type GObject.Object): list of Gobject reference counted pointers
  *
  * Free a list of GObject based pointers. All objects in the list
  * will be unreffed and then the list itself will be freed.
@@@@ -279,13 +279,13 @@@@ gck_list_unref_free (GList *reflist)
 
 /**
  * gck_list_ref_copy: (skip)
- * @@reflist: (element-type GLib.Object): list of GObject reference counted
+ * @@reflist: (element-type GObject.Object): list of GObject reference counted
  *           objects
  *
  * Copy a list of GObject based pointers. All objects
  * in the list will be reffed and the list will be copied.
  *
- * Return value: (transfer full) (element-type GLib.Object): the copied and
+ * Return value: (transfer full) (element-type GObject.Object): the copied and
  *               reffed list, when done, free it with gck_list_unref_free ()
  **/
 GList *
@


1.1
log
@Fix build with new gobject-introspection.
@
text
@d1 1
a1 1
$OpenBSD$
@

