head	1.10;
access;
symbols
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.10
date	2015.04.03.09.57.12;	author ajacoutot;	state dead;
branches;
next	1.9;
commitid	HEOEilWeU1oPqIPF;

1.9
date	2014.10.29.14.21.37;	author ajacoutot;	state Exp;
branches;
next	1.8;
commitid	BegGx7EdXktycY40;

1.8
date	2014.04.14.17.29.58;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2014.04.11.19.11.47;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2013.10.15.17.49.33;	author ajacoutot;	state dead;
branches;
next	1.5;

1.5
date	2013.10.02.16.07.46;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2013.09.02.16.04.20;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2013.08.28.09.45.12;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2013.08.28.09.33.30;	author stsp;	state Exp;
branches;
next	1.1;

1.1
date	2013.05.30.17.12.35;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Update to gnome-desktop-3.16.0.
@
text
@$OpenBSD: patch-libgnome-desktop_gnome-languages_c,v 1.9 2014/10/29 14:21:37 ajacoutot Exp $

From 093e0a549c2ab2e465494105126ea7046f26e047 Mon Sep 17 00:00:00 2001
From: Rui Matos <tiagomatos@@gmail.com>
Date: Mon, 20 Jan 2014 22:38:10 +0100
Subject: languages: Use a more broadly compatible locale codeset suffix

--- libgnome-desktop/gnome-languages.c.orig	Tue Jun  3 17:05:02 2014
+++ libgnome-desktop/gnome-languages.c	Wed Oct 29 15:17:19 2014
@@@@ -88,27 +88,14 @@@@ gnome_locale_free (GnomeLocale *locale)
 static char *
 normalize_codeset (const char *codeset)
 {
-        char *normalized_codeset;
-        const char *p;
-        char *q;
+        if (codeset == NULL)
+                return NULL;
 
-        normalized_codeset = g_strdup (codeset);
+        if (g_str_equal (codeset, "UTF-8") ||
+            g_str_equal (codeset, "utf8"))
+                return g_strdup ("UTF-8");
 
-        if (codeset != NULL) {
-                for (p = codeset, q = normalized_codeset;
-                     *p != '\0'; p++) {
-
-                        if (*p == '-' || *p == '_') {
-                                continue;
-                        }
-
-                        *q = g_ascii_tolower (*p);
-                        q++;
-                }
-                *q = '\0';
-        }
-
-        return normalized_codeset;
+        return g_strdup (codeset);
 }
 
 /**
@@@@ -340,7 +327,7 @@@@ language_name_get_codeset_details (const char  *langua
         if (is_utf8 != NULL) {
                 codeset = normalize_codeset (codeset);
 
-                *is_utf8 = strcmp (codeset, "utf8") == 0;
+                *is_utf8 = strcmp (codeset, "UTF-8") == 0;
                 g_free (codeset);
         }
 
@@@@ -411,7 +398,15 @@@@ add_locale (const char *language_name,
         if (is_utf8) {
                 name = g_strdup (language_name);
         } else if (utf8_only) {
-                name = g_strdup_printf ("%s.utf8", language_name);
+
+                if (strchr (language_name, '.'))
+                        return FALSE;
+
+                /* If the locale name has no dot, assume that its
+                 * encoding part is missing and try again after adding
+                 * ".UTF-8". This catches locale names like "de_DE".
+                 */
+                name = g_strdup_printf ("%s.UTF-8", language_name);
 
                 language_name_get_codeset_details (name, NULL, &is_utf8);
                 if (!is_utf8) {
@


1.9
log
@Sync with what has been committed upstream.
@
text
@d1 1
a1 1
$OpenBSD: patch-libgnome-desktop_gnome-languages_c,v 1.8 2014/04/14 17:29:58 ajacoutot Exp $
@


1.8
log
@Sync with most recetn revision of this patch.
@
text
@d1 1
a1 1
$OpenBSD: patch-libgnome-desktop_gnome-languages_c,v 1.7 2014/04/11 19:11:47 ajacoutot Exp $
d3 4
a6 1
https://bugzilla.gnome.org/show_bug.cgi?id=710412
d8 2
a9 2
--- libgnome-desktop/gnome-languages.c.orig	Mon Feb  3 16:41:40 2014
+++ libgnome-desktop/gnome-languages.c	Mon Apr 14 19:14:49 2014
d59 1
a59 1
+                if (strchr(language_name, '.'))
@


1.7
log
@Better locale patch (GNOME BZ #710412).

courtesy of Rui Matos (GNOME) and stsp@@
Thank you Stephan for addressing my rants...
@
text
@d1 1
a1 1
$OpenBSD$
d5 2
a6 2
--- libgnome-desktop/gnome-languages.c.orig	Fri Apr 11 20:33:21 2014
+++ libgnome-desktop/gnome-languages.c	Fri Apr 11 20:35:27 2014
d41 1
a41 19
@@@@ -150,6 +137,7 @@@@ gnome_parse_locale (const char *locale,
 
         if (re == NULL) {
                 GError *error = NULL;
+                /* Assume a locale name as used by GNU libc. */
                 re = g_regex_new ("^(?P<language>[^_.@@[:space:]]+)"
                                   "(_(?P<territory>[[:upper:]]+))?"
                                   "(\\.(?P<codeset>[-_0-9a-zA-Z]+))?"
@@@@ -164,7 +152,8 @@@@ gnome_parse_locale (const char *locale,
 
         if (!g_regex_match (re, locale, 0, &match_info) ||
             g_match_info_is_partial_match (match_info)) {
-                g_warning ("locale '%s' isn't valid\n", locale);
+                g_warning ("locale name '%s' doesn't match GNU libc "
+                           "conventions\n", locale);
                 goto out;
         }
 
@@@@ -340,7 +329,7 @@@@ language_name_get_codeset_details (const char  *langua
d50 1
a50 1
@@@@ -411,13 +400,20 @@@@ add_locale (const char *language_name,
d55 8
a62 5
-
-                language_name_get_codeset_details (name, NULL, &is_utf8);
-                if (!is_utf8) {
-                        g_free (name);
-                        return FALSE;
d64 3
a66 16
+                /* If the locale name has no dot, assume that its encoding
+                 * part is missing and try again after adding ".UTF-8".
+                 * This catches locale names like "de_DE". */
+                if (strchr(language_name, '.') == NULL) {
+                        name = g_strdup_printf ("%s.UTF-8", language_name);
+                        language_name_get_codeset_details (name, NULL,
+                                                           &is_utf8);
+                        if (!is_utf8) {
+                                g_free (name);
+                                return FALSE;
+                        }
                 }
+                return FALSE;
         } else {
                 name = g_strdup (language_name);
         }
@


1.6
log
@Update to gnome-desktop-3.10.1.
@
text
@d1 1
a1 1
$OpenBSD: patch-libgnome-desktop_gnome-languages_c,v 1.5 2013/10/02 16:07:46 ajacoutot Exp $
d3 1
a3 4
From 91082e8d0ef7dc3fe372fb5228fd3bb5a26efa81 Mon Sep 17 00:00:00 2001
From: Stefan Sperling <stsp@@openbsd.org>
Date: Wed, 28 Aug 2013 16:25:34 +0000
Subject: Obtain supported locales from "locale -a" output.
d5 5
a9 14
--- libgnome-desktop/gnome-languages.c.orig	Sat Mar  2 16:55:49 2013
+++ libgnome-desktop/gnome-languages.c	Wed Oct  2 17:32:35 2013
@@@@ -44,10 +44,7 @@@@
 #ifndef __LC_LAST
 #define __LC_LAST       13
 #endif
-#include "locarchive.h"
 
-#define ARCHIVE_FILE LIBLOCALEDIR "/locale-archive"
-#define SYSTEM_ARCHIVE_FILE "/usr/lib/locale/locale-archive"
 #define ISO_CODES_DATADIR ISO_CODES_PREFIX "/share/xml/iso-codes"
 #define ISO_CODES_LOCALESDIR ISO_CODES_PREFIX "/share/locale"
 
@@@@ -310,11 +307,7 @@@@ language_name_is_valid (const char *language_name)
d11 18
a28 23
         char     *old_locale;
         gboolean  is_valid;
-#ifdef WITH_INCOMPLETE_LOCALES
-        int lc_type_id = LC_CTYPE;
-#else
         int lc_type_id = LC_MESSAGES;
-#endif
 
         old_locale = g_strdup (setlocale (lc_type_id, NULL));
         is_valid = setlocale (lc_type_id, language_name) != NULL;
@@@@ -445,22 +438,11 @@@@ add_locale (const char *language_name,
         g_free (name);
         name = NULL;
 
-#ifdef WITH_INCOMPLETE_LOCALES
-        if (utf8_only) {
-                if (locale->territory_code == NULL || locale->modifier) {
-                        g_debug ("Ignoring '%s' as a locale, since it lacks territory code or modifier", name);
-                        gnome_locale_free (locale);
-                        return FALSE;
-                }
-        }
-#endif
d30 2
a31 39
         locale->id = construct_language_name (locale->language_code, locale->territory_code,
                                               NULL, locale->modifier);
         locale->name = construct_language_name (locale->language_code, locale->territory_code,
                                                 locale->codeset, locale->modifier);
 
-#ifndef WITH_INCOMPLETE_LOCALES
         if (!gnome_language_has_translations (locale->name) &&
             !gnome_language_has_translations (locale->id) &&
             !gnome_language_has_translations (locale->language_code) &&
@@@@ -469,7 +451,6 @@@@ add_locale (const char *language_name,
                 gnome_locale_free (locale);
                 return FALSE;
         }
-#endif
 
         if (!utf8_only) {
                 g_free (locale->id);
@@@@ -492,94 +473,9 @@@@ add_locale (const char *language_name,
 struct nameent
 {
         char    *name;
-        uint32_t locrec_offset;
+        guint32 locrec_offset;
 };
 
-static gboolean
-mapped_file_new_allow_noent (const char   *path,
-                             GMappedFile **out_mfile,
-                             GError      **error)
-{
-        gboolean ret = FALSE;
-        GError *tmp_error = NULL;
-        GMappedFile *mfile = NULL;
-
-        mfile = g_mapped_file_new (path, FALSE, &tmp_error);
-        if (mfile == NULL) {
-                if (!g_error_matches (tmp_error, G_FILE_ERROR, G_FILE_ERROR_NOENT)) {
-                        g_propagate_error (error, tmp_error);
-                        goto out;
d33 1
a33 29
-                g_clear_error (&tmp_error);
-        }
-
-        ret = TRUE;
- out:
-        *out_mfile = mfile;
-        return ret;
-}
-
-static gboolean
-collect_locales_from_archive (gboolean  *out_found_locales,
-                              GError   **error)
-{
-        gboolean            ret = FALSE;
-        GMappedFile        *mapped;
-        char               *addr;
-        struct locarhead   *head;
-        struct namehashent *namehashtab;
-        struct nameent     *names = NULL;
-        uint32_t            used;
-        uint32_t            cnt;
-        gsize               len;
-        gboolean            locales_collected = FALSE;
-
-        if (!mapped_file_new_allow_noent (ARCHIVE_FILE, &mapped, error))
-                goto out;
-        if (!mapped) {
-                if (!mapped_file_new_allow_noent (SYSTEM_ARCHIVE_FILE, &mapped, error))
-                        goto out;
a34 6
-        if (!mapped) {
-                goto out_success;
-        }
-
-        addr = g_mapped_file_get_contents (mapped);
-        len = g_mapped_file_get_length (mapped);
d36 2
a37 38
-        head = (struct locarhead *) addr;
-        if (head->namehash_offset + head->namehash_size > len
-            || head->string_offset + head->string_size > len
-            || head->locrectab_offset + head->locrectab_size > len
-            || head->sumhash_offset + head->sumhash_size > len) {
-                goto out;
-        }
-
-        namehashtab = (struct namehashent *) (addr + head->namehash_offset);
-
-        names = (struct nameent *) g_new0 (struct nameent, head->namehash_used);
-        for (cnt = used = 0; cnt < head->namehash_size; ++cnt) {
-                if (namehashtab[cnt].locrec_offset != 0) {
-                        names[used].name = addr + namehashtab[cnt].name_offset;
-                        names[used++].locrec_offset = namehashtab[cnt].locrec_offset;
-                }
-        }
-
-        for (cnt = 0; cnt < used; ++cnt) {
-                if (add_locale (names[cnt].name, TRUE))
-                        locales_collected = TRUE;
-        }
-
-
- out_success:
-        ret = TRUE;
-        *out_found_locales = locales_collected;
- out:
-        g_free (names);
-        g_clear_pointer (&mapped, g_mapped_file_unref);
-        return ret;
-}
-
 static int
 select_dirs (const struct dirent *dirent)
 {
@@@@ -631,6 +527,37 @@@@ collect_locales_from_directory (void)
         return found_locales;
d40 2
a41 42
+static gboolean
+collect_locales_from_localebin (void)
+{
+        gboolean found_locales = FALSE;
+        gchar    *argv[] = { "locale", "-a", NULL };
+        gchar    *output;
+        gchar    **lines, **linep;
+
+        if (g_spawn_sync (NULL, argv, NULL,
+                          G_SPAWN_SEARCH_PATH|G_SPAWN_STDERR_TO_DEV_NULL,
+                          NULL, NULL, &output, NULL, NULL, NULL) == FALSE)
+                return FALSE;
+
+        g_return_val_if_fail (output != NULL, FALSE);
+
+        lines = g_strsplit (output, "\n", 0);
+        if (lines) {
+                linep = lines;
+                while (*linep) {
+                        if (*linep[0] && add_locale (*linep, TRUE))
+                                found_locales = TRUE;
+                        linep++;
+                }
+                g_strfreev(lines);
+        }
+
+        g_free(output);
+
+        return found_locales;
+}
+
 static void
 count_languages_and_territories (void)
 {
@@@@ -667,28 +594,21 @@@@ count_languages_and_territories (void)
 static void
 collect_locales (void)
 {
-        gboolean found_archive_locales = FALSE;
+        gboolean found_localebin_locales = FALSE;
         gboolean found_dir_locales = FALSE;
-        GError *error = NULL;
d43 14
a56 2
         if (gnome_available_locales_map == NULL) {
                 gnome_available_locales_map = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, (GDestroyNotify) gnome_locale_free);
d59 8
a66 1
+        found_localebin_locales = collect_locales_from_localebin ();
d68 26
a93 14
-        if (!collect_locales_from_archive (&found_archive_locales, &error)) {
-                g_warning ("Failed to load locales from archive: %s", error->message);
-                g_clear_error (&error);
-        }
-
         found_dir_locales = collect_locales_from_directory ();
 
-        if (!(found_archive_locales || found_dir_locales)) {
-#ifndef WITH_INCOMPLETE_LOCALES
+        if (!(found_localebin_locales || found_dir_locales)) {
                 g_warning ("Could not read list of available locales from libc, "
                            "guessing possible locales from available translations, "
                            "but list may be incomplete!");
-#endif
a94 2
 
 	count_languages_and_territories ();
@


1.5
log
@Sync stsp@@'s patch with what was committed upstream.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@Sync with recent version of BZ patch from stsp@@
@
text
@d3 4
a6 1
https://bugzilla.gnome.org/show_bug.cgi?id=698383
d8 2
a9 2
--- libgnome-desktop/gnome-languages.c.orig	Sun Mar 17 02:49:53 2013
+++ libgnome-desktop/gnome-languages.c	Mon Sep  2 17:48:15 2013
d64 6
a69 2
@@@@ -495,91 +476,6 @@@@ struct nameent
         uint32_t locrec_offset;
@


1.3
log
@Some part of this patch is not needed anymore.
@
text
@d1 1
a1 1
$OpenBSD: patch-libgnome-desktop_gnome-languages_c,v 1.1 2013/05/30 17:12:35 ajacoutot Exp $
d6 13
a18 2
+++ libgnome-desktop/gnome-languages.c	Wed Aug 28 10:48:56 2013
@@@@ -310,11 +310,7 @@@@ language_name_is_valid (const char *language_name)
d23 1
a23 1
         int lc_type_id = LC_CTYPE;
d25 1
a25 1
-        int lc_type_id = LC_MESSAGES;
d30 1
a30 1
@@@@ -445,22 +441,11 @@@@ add_locale (const char *language_name,
d53 1
a53 1
@@@@ -469,7 +454,6 @@@@ add_locale (const char *language_name,
d61 93
a153 1
@@@@ -631,6 +615,40 @@@@ collect_locales_from_directory (void)
d161 16
a176 20
+        FILE *p;
+        char *buf, *lbuf;
+        size_t len;
+
+        p = popen("locale -a", "r");
+
+        lbuf = NULL;
+        while ((buf = fgetln(p, &len))) {
+                if (buf[len - 1] == '\n') {
+                        buf[len - 1] = '\0';
+                        if (add_locale (buf, TRUE))
+                                found_locales = TRUE;
+                } else {
+                        /* EOF without EOL, copy and add the NUL */
+                        lbuf = malloc(len + 1);
+                        if (lbuf == NULL)
+                                break;
+                        memcpy(lbuf, buf, len);
+                        lbuf[len] = '\0';
+                        if (add_locale (lbuf, TRUE))
d178 1
a178 1
+                        free(lbuf);
d180 1
d183 1
a183 1
+        pclose(p);
d191 3
a193 1
@@@@ -669,6 +687,7 @@@@ collect_locales (void)
d195 2
a196 1
         gboolean found_archive_locales = FALSE;
d198 1
a198 2
+        gboolean found_localebin_locales = FALSE;
         GError *error = NULL;
d201 4
a204 1
@@@@ -683,12 +702,12 @@@@ collect_locales (void)
d206 5
d215 1
a215 3
+        found_localebin_locales = collect_locales_from_localebin ();
+
+        if (!(found_archive_locales || found_dir_locales || found_localebin_locales)) {
@


1.2
log
@Make GNOME detect supported locales from 'locale -a' output (which is
POSIX compliant), in addition to looking for linux-specific locale
archive files and rummaging around in the /usr/share/locale directory
with unportable assumptions about its contents.

Fixes GNOME's language/keyboard settings and makes locales work as
expected in the GNOME desktop.

ok aja
@
text
@d6 1
a6 1
+++ libgnome-desktop/gnome-languages.c	Tue Aug 27 23:51:10 2013
d19 1
a19 1
@@@@ -445,7 +441,6 @@@@ add_locale (const char *language_name,
d24 7
a30 7
         if (utf8_only) {
                 if (locale->territory_code == NULL || locale->modifier) {
                         g_debug ("Ignoring '%s' as a locale, since it lacks territory code or modifier", name);
@@@@ -453,14 +448,12 @@@@ add_locale (const char *language_name,
                         return FALSE;
                 }
         }
d32 1
a32 1
 
d42 1
a42 1
@@@@ -469,7 +462,6 @@@@ add_locale (const char *language_name,
d50 1
a50 1
@@@@ -631,6 +623,40 @@@@ collect_locales_from_directory (void)
d91 1
a91 1
@@@@ -669,6 +695,7 @@@@ collect_locales (void)
d99 1
a99 1
@@@@ -683,12 +710,12 @@@@ collect_locales (void)
@


1.1
log
@Deal with our lack our proper locale support in a simpler way.
@
text
@d1 1
a1 1
$OpenBSD$
d5 2
a6 2
--- libgnome-desktop/gnome-languages.c.orig	Thu May 30 18:46:45 2013
+++ libgnome-desktop/gnome-languages.c	Thu May 30 18:47:24 2013
d50 51
a100 1
@@@@ -684,11 +676,9 @@@@ collect_locales (void)
d103 1
a103 1
         if (!(found_archive_locales || found_dir_locales)) {
d105 3
@

