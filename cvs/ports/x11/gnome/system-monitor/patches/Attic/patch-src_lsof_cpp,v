head	1.4;
access;
symbols
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2014.10.15.13.37.13;	author jasper;	state dead;
branches;
next	1.3;
commitid	u6DAkzNoFdaTYWDd;

1.3
date	2014.07.12.20.03.09;	author robert;	state Exp;
branches;
next	1.2;
commitid	v4oiKLvk5LDuAo6m;

1.2
date	2012.03.29.07.14.28;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2012.03.23.13.28.25;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to gnome-system-monitor-3.14.1
@
text
@$OpenBSD: patch-src_lsof_cpp,v 1.3 2014/07/12 20:03:09 robert Exp $
--- src/lsof.cpp.orig	Sat Jul 12 22:02:07 2014
+++ src/lsof.cpp	Sat Jul 12 22:02:18 2014
@@@@ -103,20 +103,6 @@@@ namespace
         }
 
 
-        void clear_results()
-        {
-            gtk_list_store_clear(this->model);
-            gtk_label_set_text(this->count, "");
-        }
-
-
-        void clear()
-        {
-            this->clear_results();
-            gtk_entry_set_text(this->entry, "");
-        }
-
-
         void display_regex_error(const Glib::RegexError& error)
         {
             char * msg = g_strdup_printf ("<b>%s</b>\n%s\n%s",
@@@@ -137,8 +123,14 @@@@ namespace
 
         void update_count(unsigned count)
         {
-            string s = static_cast<std::ostringstream&>(std::ostringstream() << count).str();
-            gtk_label_set_text(this->count, s.c_str());
+            gchar *title;
+            if (this->pattern().length() == 0) {
+                title = g_strdup_printf (ngettext("%d open file", "%d open files", count), count);
+            } else {
+                title = g_strdup_printf (ngettext("%d matching open file", "%d matching open files", count), count);
+            }
+            gtk_window_set_title(this->window, title);
+            g_free (title);
         }
 
 
@@@@ -153,9 +145,7 @@@@ namespace
             typedef std::set<string> MatchSet;
             typedef MatchSet::const_iterator iterator;
 
-            this->clear_results();
-
-
+            gtk_list_store_clear(this->model);
             try {
                 Lsof lsof(this->pattern(), this->case_insensitive);
 
@@@@ -188,24 +178,12 @@@@ namespace
         }
 
 
-        static void search_button_clicked(GtkButton *, gpointer data)
+        static void search_changed(GtkSearchEntry *, gpointer data)
         {
             static_cast<GUI*>(data)->search();
         }
 
 
-        static void search_entry_activate(GtkEntry *, gpointer data)
-        {
-            static_cast<GUI*>(data)->search();
-        }
-
-
-        static void clear_button_clicked(GtkButton *, gpointer data)
-        {
-            static_cast<GUI*>(data)->clear();
-        }
-
-
         static void close_button_clicked(GtkButton *, gpointer data)
         {
             GUI *gui = static_cast<GUI*>(data);
@@@@ -308,12 +286,8 @@@@ void procman_lsof(GsmApplication *app)
     gtk_window_set_transient_for(GTK_WINDOW(dialog), GTK_WINDOW(app->main_window));
 
     GtkWidget *entry =  GTK_WIDGET (gtk_builder_get_object (builder, "entry"));
-    GtkWidget *search_button =  GTK_WIDGET (gtk_builder_get_object (builder, "search_button"));
-    GtkWidget *clear_button =  GTK_WIDGET (gtk_builder_get_object (builder, "clear_button"));
 
     GtkWidget *case_button =  GTK_WIDGET (gtk_builder_get_object (builder, "case_button"));
-    GtkWidget *count_label =  GTK_WIDGET (gtk_builder_get_object (builder, "count_label"));
-    GtkWidget *close_button =  GTK_WIDGET (gtk_builder_get_object (builder, "close_button"));
 
     // Scrolled TreeView
     GtkWidget *scrolled = GTK_WIDGET (gtk_builder_get_object (builder, "scrolled"));
@@@@ -325,16 +299,10 @@@@ void procman_lsof(GsmApplication *app)
     gui->model = model;
     gui->window = GTK_WINDOW(dialog);
     gui->entry = GTK_ENTRY(entry);
-    gui->count = GTK_LABEL(count_label);
+    gui->case_insensitive = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON (case_button));
 
-    g_signal_connect(G_OBJECT(entry), "activate",
-                     G_CALLBACK(GUI::search_entry_activate), gui);
-    g_signal_connect(G_OBJECT(clear_button), "clicked",
-                     G_CALLBACK(GUI::clear_button_clicked), gui);
-    g_signal_connect(G_OBJECT(search_button), "clicked",
-                     G_CALLBACK(GUI::search_button_clicked), gui);
-    g_signal_connect(G_OBJECT(close_button), "clicked",
-                     G_CALLBACK(GUI::close_button_clicked), gui);
+    g_signal_connect(G_OBJECT(entry), "search-changed",
+                     G_CALLBACK(GUI::search_changed), gui);
     g_signal_connect(G_OBJECT(case_button), "toggled",
                      G_CALLBACK(GUI::case_button_toggled), gui);
     g_signal_connect(G_OBJECT(dialog), "delete-event",
@@@@ -343,6 +311,7 @@@@ void procman_lsof(GsmApplication *app)
     gtk_builder_connect_signals (builder, NULL);
 
     gtk_widget_show_all(dialog);
+    gui->search ();
     
     g_object_unref (G_OBJECT (builder));
 }
@


1.3
log
@fix searching for open files by pulling the fixes from the system-monitor git repo
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to gnome-system-monitor-3.4.0.
@
text
@d1 5
a5 12
$OpenBSD: patch-src_lsof_cpp,v 1.1 2012/03/23 13:28:25 ajacoutot Exp $

From 9b2489dafe3cb0a8792bed564f27f3f168a55b6a Mon Sep 17 00:00:00 2001
From: Chris KÃ¼hl <chrisk@@openismus.com>
Date: Wed, 23 Nov 2011 14:50:13 +0000
Subject: Fix build by changing include in lsof.cpp

--- src/lsof.cpp.orig	Mon Mar 19 08:01:07 2012
+++ src/lsof.cpp	Mon Mar 19 08:01:18 2012
@@@@ -14,7 +14,7 @@@@
 #include <sstream>
 #include <iterator>
a6 2
-#include "regex.h"
+#include <glibmm/regex.h>
d8 112
a119 2
 #include "procman.h"
 #include "lsof.h"
@


1.1
log
@Fix build with glib >= 2.31.20.
@
text
@d1 1
a1 1
$OpenBSD$
@

