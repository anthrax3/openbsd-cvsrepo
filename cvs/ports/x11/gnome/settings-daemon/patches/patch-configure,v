head	1.12;
access;
symbols
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2;
locks; strict;
comment	@# @;


1.12
date	2017.04.21.18.39.23;	author ajacoutot;	state Exp;
branches;
next	1.11;
commitid	DV2DMZPazN2l028W;

1.11
date	2017.04.18.17.47.14;	author ajacoutot;	state Exp;
branches;
next	1.10;
commitid	6vUC7GLS2Z5OYgtj;

1.10
date	2017.04.17.10.40.28;	author ajacoutot;	state Exp;
branches;
next	1.9;
commitid	Gn9bbOrMLN6Hvd8f;

1.9
date	2012.04.27.10.59.31;	author ajacoutot;	state dead;
branches;
next	1.8;

1.8
date	2012.04.17.10.48.01;	author jasper;	state Exp;
branches;
next	1.7;

1.7
date	2012.03.29.06.47.51;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2011.11.02.16.42.21;	author ajacoutot;	state dead;
branches;
next	1.5;

1.5
date	2011.09.27.15.14.27;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.27.09.35.06;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.11.22.53.22;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2008.12.14.18.46.46;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.22.10.57.26;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Pushed upstream.
@
text
@$OpenBSD: patch-configure,v 1.11 2017/04/18 17:47:14 ajacoutot Exp $

From c4450208d463c271c043364aa2542291877d53ae Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@gnome.org>
Date: Tue, 18 Apr 2017 19:41:32 +0200
Subject: housekeeping: Fix libnotify version check

--- configure.orig	Mon Apr 17 12:10:50 2017
+++ configure	Mon Apr 17 12:11:43 2017
@@@@ -19464,16 +19464,16 @@@@ if test -n "$HOUSEKEEPING_CFLAGS"; then
     if test -n "$PKG_CONFIG" && \
     { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"gtk+-3.0
 		  gio-unix-2.0
-		  libnotify >= LIBNOTIFY_REQUIRED_VERSION\""; } >&5
+		  libnotify >= $LIBNOTIFY_REQUIRED_VERSION\""; } >&5
   ($PKG_CONFIG --exists --print-errors "gtk+-3.0
 		  gio-unix-2.0
-		  libnotify >= LIBNOTIFY_REQUIRED_VERSION") 2>&5
+		  libnotify >= $LIBNOTIFY_REQUIRED_VERSION") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
   pkg_cv_HOUSEKEEPING_CFLAGS=`$PKG_CONFIG --cflags "gtk+-3.0
 		  gio-unix-2.0
-		  libnotify >= LIBNOTIFY_REQUIRED_VERSION" 2>/dev/null`
+		  libnotify >= $LIBNOTIFY_REQUIRED_VERSION" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@@@ -19487,16 +19487,16 @@@@ if test -n "$HOUSEKEEPING_LIBS"; then
     if test -n "$PKG_CONFIG" && \
     { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"gtk+-3.0
 		  gio-unix-2.0
-		  libnotify >= LIBNOTIFY_REQUIRED_VERSION\""; } >&5
+		  libnotify >= $LIBNOTIFY_REQUIRED_VERSION\""; } >&5
   ($PKG_CONFIG --exists --print-errors "gtk+-3.0
 		  gio-unix-2.0
-		  libnotify >= LIBNOTIFY_REQUIRED_VERSION") 2>&5
+		  libnotify >= $LIBNOTIFY_REQUIRED_VERSION") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
   pkg_cv_HOUSEKEEPING_LIBS=`$PKG_CONFIG --libs "gtk+-3.0
 		  gio-unix-2.0
-		  libnotify >= LIBNOTIFY_REQUIRED_VERSION" 2>/dev/null`
+		  libnotify >= $LIBNOTIFY_REQUIRED_VERSION" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@@@ -19519,18 +19519,18 @@@@ fi
         if test $_pkg_short_errors_supported = yes; then
 	        HOUSEKEEPING_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "gtk+-3.0
 		  gio-unix-2.0
-		  libnotify >= LIBNOTIFY_REQUIRED_VERSION" 2>&1`
+		  libnotify >= $LIBNOTIFY_REQUIRED_VERSION" 2>&1`
         else
 	        HOUSEKEEPING_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "gtk+-3.0
 		  gio-unix-2.0
-		  libnotify >= LIBNOTIFY_REQUIRED_VERSION" 2>&1`
+		  libnotify >= $LIBNOTIFY_REQUIRED_VERSION" 2>&1`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$HOUSEKEEPING_PKG_ERRORS" >&5
 
 	as_fn_error $? "Package requirements (gtk+-3.0
 		  gio-unix-2.0
-		  libnotify >= LIBNOTIFY_REQUIRED_VERSION) were not met:
+		  libnotify >= $LIBNOTIFY_REQUIRED_VERSION) were not met:
 
 $HOUSEKEEPING_PKG_ERRORS
 
@


1.11
log
@Add BZ URL.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.10 2017/04/17 10:40:28 ajacoutot Exp $
d3 4
a6 1
https://bugzilla.gnome.org/show_bug.cgi?id=781463
@


1.10
log
@Update to gnome-settings-daemon-3.24.1.
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
*facepalm*
@


1.9
log
@Properly disable wacom support.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.8 2012/04/17 10:48:01 jasper Exp $
d3 1
a3 1
No libwacom on OpenBSD (depends on gudev).
d5 56
a60 3
--- configure.orig	Mon Apr 16 14:37:16 2012
+++ configure	Tue Apr 17 12:42:32 2012
@@@@ -19009,98 +19009,6 @@@@ fi
d62 4
d67 1
a68 95
-pkg_failed=no
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for WACOM" >&5
-$as_echo_n "checking for WACOM... " >&6; }
-
-if test -n "$WACOM_CFLAGS"; then
-    pkg_cv_WACOM_CFLAGS="$WACOM_CFLAGS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libwacom >= \$LIBWACOM_REQUIRED_VERSION x11 xi xtst \$GUDEV_PKG gnome-desktop-3.0 >= \$GNOME_DESKTOP_REQUIRED_VERSION xorg-wacom\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "libwacom >= $LIBWACOM_REQUIRED_VERSION x11 xi xtst $GUDEV_PKG gnome-desktop-3.0 >= $GNOME_DESKTOP_REQUIRED_VERSION xorg-wacom") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_WACOM_CFLAGS=`$PKG_CONFIG --cflags "libwacom >= $LIBWACOM_REQUIRED_VERSION x11 xi xtst $GUDEV_PKG gnome-desktop-3.0 >= $GNOME_DESKTOP_REQUIRED_VERSION xorg-wacom" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-if test -n "$WACOM_LIBS"; then
-    pkg_cv_WACOM_LIBS="$WACOM_LIBS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libwacom >= \$LIBWACOM_REQUIRED_VERSION x11 xi xtst \$GUDEV_PKG gnome-desktop-3.0 >= \$GNOME_DESKTOP_REQUIRED_VERSION xorg-wacom\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "libwacom >= $LIBWACOM_REQUIRED_VERSION x11 xi xtst $GUDEV_PKG gnome-desktop-3.0 >= $GNOME_DESKTOP_REQUIRED_VERSION xorg-wacom") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_WACOM_LIBS=`$PKG_CONFIG --libs "libwacom >= $LIBWACOM_REQUIRED_VERSION x11 xi xtst $GUDEV_PKG gnome-desktop-3.0 >= $GNOME_DESKTOP_REQUIRED_VERSION xorg-wacom" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-
-
-
-if test $pkg_failed = yes; then
-   	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi
-        if test $_pkg_short_errors_supported = yes; then
-	        WACOM_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "libwacom >= $LIBWACOM_REQUIRED_VERSION x11 xi xtst $GUDEV_PKG gnome-desktop-3.0 >= $GNOME_DESKTOP_REQUIRED_VERSION xorg-wacom" 2>&1`
-        else
-	        WACOM_PKG_ERRORS=`$PKG_CONFIG --print-errors "libwacom >= $LIBWACOM_REQUIRED_VERSION x11 xi xtst $GUDEV_PKG gnome-desktop-3.0 >= $GNOME_DESKTOP_REQUIRED_VERSION xorg-wacom" 2>&1`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$WACOM_PKG_ERRORS" >&5
-
-	as_fn_error $? "Package requirements (libwacom >= $LIBWACOM_REQUIRED_VERSION x11 xi xtst $GUDEV_PKG gnome-desktop-3.0 >= $GNOME_DESKTOP_REQUIRED_VERSION xorg-wacom) were not met:
-
-$WACOM_PKG_ERRORS
-
-Consider adjusting the PKG_CONFIG_PATH environment variable if you
-installed software in a non-standard prefix.
-
-Alternatively, you may set the environment variables WACOM_CFLAGS
-and WACOM_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details." "$LINENO" 5
-
-elif test $pkg_failed = untried; then
-     	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
-as_fn_error $? "The pkg-config script could not be found or is too old.  Make sure it
-is in your PATH or set the PKG_CONFIG environment variable to the full
-path to pkg-config.
-
-Alternatively, you may set the environment variables WACOM_CFLAGS
-and WACOM_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details.
-
-To get pkg-config, see <http://pkg-config.freedesktop.org/>.
-See \`config.log' for more details" "$LINENO" 5; }
-
-else
-	WACOM_CFLAGS=$pkg_cv_WACOM_CFLAGS
-	WACOM_LIBS=$pkg_cv_WACOM_LIBS
-        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-
-fi
-
-
 have_packagekit=false
 # Check whether --enable-packagekit was given.
 if test "${enable_packagekit+set}" = set; then :
@


1.8
log
@- update to 3.4.1
* bug fixes and translation updates
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.7 2012/03/29 06:47:51 ajacoutot Exp $
@


1.7
log
@Update to gnome-settings-daemon-3.4.0.
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- configure.orig	Mon Mar 26 18:16:51 2012
+++ configure	Mon Mar 26 18:33:34 2012
@@@@ -19121,98 +19121,6 @@@@ fi
@


1.6
log
@Enable colord.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.5 2011/09/27 15:14:27 ajacoutot Exp $
d3 1
a3 1
No colord on OpenBSD.
d5 4
a8 4
--- configure.orig	Mon Sep 26 17:50:30 2011
+++ configure	Tue Sep 27 17:12:16 2011
@@@@ -17995,98 +17995,7 @@@@ $as_echo "yes" >&6; }
 fi
d12 5
a16 5
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for COLORD" >&5
-$as_echo_n "checking for COLORD... " >&6; }
 
-if test -n "$COLORD_CFLAGS"; then
-    pkg_cv_COLORD_CFLAGS="$COLORD_CFLAGS"
d19 2
a20 2
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"colord >= 0.1.12\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "colord >= 0.1.12") 2>&5
d24 1
a24 2
-  pkg_cv_COLORD_CFLAGS=`$PKG_CONFIG --cflags "colord >= 0.1.12" 2>/dev/null`
-		      test "x$?" != "x0" && pkg_failed=yes
d31 2
a32 2
-if test -n "$COLORD_LIBS"; then
-    pkg_cv_COLORD_LIBS="$COLORD_LIBS"
d35 2
a36 2
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"colord >= 0.1.12\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "colord >= 0.1.12") 2>&5
d40 1
a40 2
-  pkg_cv_COLORD_LIBS=`$PKG_CONFIG --libs "colord >= 0.1.12" 2>/dev/null`
-		      test "x$?" != "x0" && pkg_failed=yes
d60 1
a60 1
-	        COLORD_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "colord >= 0.1.12" 2>&1`
d62 1
a62 1
-	        COLORD_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "colord >= 0.1.12" 2>&1`
d65 1
a65 1
-	echo "$COLORD_PKG_ERRORS" >&5
d67 1
a67 1
-	as_fn_error $? "Package requirements (colord >= 0.1.12) were not met:
d69 1
a69 1
-$COLORD_PKG_ERRORS
d74 2
a75 2
-Alternatively, you may set the environment variables COLORD_CFLAGS
-and COLORD_LIBS to avoid the need to call pkg-config.
d77 1
d87 2
a88 2
-Alternatively, you may set the environment variables COLORD_CFLAGS
-and COLORD_LIBS to avoid the need to call pkg-config.
a92 74
-else
-	COLORD_CFLAGS=$pkg_cv_COLORD_CFLAGS
-	COLORD_LIBS=$pkg_cv_COLORD_LIBS
-        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-
-fi
-
-
 pkg_failed=no
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for LIBCANBERRA" >&5
 $as_echo_n "checking for LIBCANBERRA... " >&6; }
@@@@ -18169,174 +18078,6 @@@@ else
 fi
 
 
-
-pkg_failed=no
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for LCMS" >&5
-$as_echo_n "checking for LCMS... " >&6; }
-
-if test -n "$LCMS_CFLAGS"; then
-    pkg_cv_LCMS_CFLAGS="$LCMS_CFLAGS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lcms2 >= 2.2\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "lcms2 >= 2.2") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_LCMS_CFLAGS=`$PKG_CONFIG --cflags "lcms2 >= 2.2" 2>/dev/null`
-		      test "x$?" != "x0" && pkg_failed=yes
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-if test -n "$LCMS_LIBS"; then
-    pkg_cv_LCMS_LIBS="$LCMS_LIBS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lcms2 >= 2.2\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "lcms2 >= 2.2") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_LCMS_LIBS=`$PKG_CONFIG --libs "lcms2 >= 2.2" 2>/dev/null`
-		      test "x$?" != "x0" && pkg_failed=yes
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-
-
-
-if test $pkg_failed = yes; then
-   	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi
-        if test $_pkg_short_errors_supported = yes; then
-	        LCMS_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "lcms2 >= 2.2" 2>&1`
-        else
-	        LCMS_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "lcms2 >= 2.2" 2>&1`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$LCMS_PKG_ERRORS" >&5
a93 5
-	have_new_lcms=no
-elif test $pkg_failed = untried; then
-     	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-	have_new_lcms=no
d95 2
a96 2
-	LCMS_CFLAGS=$pkg_cv_LCMS_CFLAGS
-	LCMS_LIBS=$pkg_cv_LCMS_LIBS
a98 11
-	have_new_lcms=yes
-fi
-if test x$have_new_lcms = xyes; then
-
-$as_echo "#define HAVE_NEW_LCMS 1" >>confdefs.h
-
-else
-
-pkg_failed=no
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for LCMS" >&5
-$as_echo_n "checking for LCMS... " >&6; }
a99 33
-if test -n "$LCMS_CFLAGS"; then
-    pkg_cv_LCMS_CFLAGS="$LCMS_CFLAGS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lcms2\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "lcms2") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_LCMS_CFLAGS=`$PKG_CONFIG --cflags "lcms2" 2>/dev/null`
-		      test "x$?" != "x0" && pkg_failed=yes
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-if test -n "$LCMS_LIBS"; then
-    pkg_cv_LCMS_LIBS="$LCMS_LIBS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lcms2\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "lcms2") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_LCMS_LIBS=`$PKG_CONFIG --libs "lcms2" 2>/dev/null`
-		      test "x$?" != "x0" && pkg_failed=yes
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
d103 3
a105 54
-
-if test $pkg_failed = yes; then
-   	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi
-        if test $_pkg_short_errors_supported = yes; then
-	        LCMS_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "lcms2" 2>&1`
-        else
-	        LCMS_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "lcms2" 2>&1`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$LCMS_PKG_ERRORS" >&5
-
-	as_fn_error $? "Package requirements (lcms2) were not met:
-
-$LCMS_PKG_ERRORS
-
-Consider adjusting the PKG_CONFIG_PATH environment variable if you
-installed software in a non-standard prefix.
-
-Alternatively, you may set the environment variables LCMS_CFLAGS
-and LCMS_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details." "$LINENO" 5
-elif test $pkg_failed = untried; then
-     	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
-as_fn_error $? "The pkg-config script could not be found or is too old.  Make sure it
-is in your PATH or set the PKG_CONFIG environment variable to the full
-path to pkg-config.
-
-Alternatively, you may set the environment variables LCMS_CFLAGS
-and LCMS_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details.
-
-To get pkg-config, see <http://pkg-config.freedesktop.org/>.
-See \`config.log' for more details" "$LINENO" 5; }
-else
-	LCMS_CFLAGS=$pkg_cv_LCMS_CFLAGS
-	LCMS_LIBS=$pkg_cv_LCMS_LIBS
-        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-
-fi
-fi
 
 
 
@


1.5
log
@No need to check for lcms2 until we have colord; spotted by jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.4 2011/09/27 09:35:06 ajacoutot Exp $
@


1.4
log
@Update to gnome-settings-daemon-3.2.0.
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- configure.orig	Mon Sep 26 18:17:54 2011
+++ configure	Mon Sep 26 18:18:18 2011
@@@@ -17995,97 +17995,6 @@@@ $as_echo "yes" >&6; }
d14 1
a14 1
-
d102 1
a102 1
 
d105 176
@


1.3
log
@Major update to gnome-settings-daemon-2.28.0.
Make this run_depends on gnome-icon-theme so that we have a minimal
working configuration.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.2 2008/12/14 18:46:46 ajacoutot Exp $
d3 1
a3 2
There is no --disable-pulseaudio switch, but we don't want to pick it up.
So forse it the hard way.
d5 65
a69 6
--- configure.orig	Tue Nov 25 00:21:30 2008
+++ configure	Sun Dec 14 17:36:33 2008
@@@@ -22915,7 +22915,7 @@@@ fi
 # ---------------------------------------------------------------------------
 # Enable Legacy Sound Preference
 # ---------------------------------------------------------------------------
d71 32
a102 1
+if false; then # Don't just pickup pulseaudio.
d104 1
a104 13
 { $as_echo "$as_me:$LINENO: checking for PULSEAUDIO" >&5
 $as_echo_n "checking for PULSEAUDIO... " >&6; }
@@@@ -22982,6 +22982,10 @@@@ else
 $as_echo "yes" >&6; }
 	have_pulseaudio=yes
 fi
+
+fi # Don't just pickup pulseaudio.
+have_pulseaudio=no
+
 if test x$have_pulseaudio = xyes; then
 	default_enable_legacy_sound_pref=no
 else
@


1.2
log
@- remove all run_depends, there are not needed (control-center2 already
references these)
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.1 2008/11/22 10:57:26 jasper Exp $
@


1.1
log
@- remove some bogus configure switches
- make it more clear why we choose gstreamer and not oss (we can't have both)
- explicitly disable pulseaudio

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 3
a8 3
--- configure.orig	Tue Sep 23 11:43:04 2008
+++ configure	Sat Nov 22 11:36:59 2008
@@@@ -27675,7 +27675,7 @@@@ fi
d17 1
a17 1
@@@@ -27742,6 +27742,10 @@@@ else
@

