head	1.4;
access;
symbols
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	ajacoutot_20090621:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2010.06.30.00.15.03;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2009.11.07.09.01.43;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2009.07.16.20.14.20;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.21.11.14.54;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.21.11.14.54;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to krb5-auth-dialog-0.16.
@
text
@$OpenBSD: patch-src_krb5-auth-dialog_c,v 1.3 2009/11/07 09:01:43 ajacoutot Exp $

XXX these should be handled by configure checks.
  krb5_get_init_creds_opt_set_pkinit: does not take 11 arguments.
  krb5_get_init_creds_opt_free: the context argument is an MIT extension.

--- src/krb5-auth-dialog.c.orig	Tue Sep 29 13:37:14 2009
+++ src/krb5-auth-dialog.c	Sat Nov  7 09:54:39 2009
@@@@ -25,6 +25,7 @@@@
 #include <stdlib.h>
 #include <time.h>
 #include <krb5.h>
+#include <com_err.h>
 #include <stdio.h>
 #include <sys/wait.h>
 #include <string.h>
@@@@ -165,8 +166,6 @@@@ ka_get_error_message(krb5_context context, krb5_error_
 	krberr = krb5_get_error_message(context, err);
 	msg = g_strdup(krberr);
 	ka_krb5_free_error_message(context, krberr);
-#else
-#	error No detailed error message information
 #endif
 	if (msg == NULL)
 		msg = g_strdup(_("unknown error"));
@@@@ -619,8 +618,6 @@@@ ka_auth_heimdal_pkinit(KaApplet* applet, krb5_creds* c
 						    kprincipal,
 						    pk_userid,
 						    pkinit_anchors,
-						    NULL,
-						    NULL,
 						    0,	  /* pk_use_enc_key */
 						    auth_dialog_prompter,
 						    applet, /* data */
@@@@ -634,7 +631,7 @@@@ ka_auth_heimdal_pkinit(KaApplet* applet, krb5_creds* c
 		                              0, NULL, opts);
 out:
 	if (opts)
-		krb5_get_init_creds_opt_free(kcontext, opts);
+		krb5_get_init_creds_opt_free(opts);
 	return retval;
 }
 #endif /* ! ENABLE_PKINIT */
@@@@ -656,7 +653,7 @@@@ ka_auth_password(KaApplet* applet, krb5_creds* creds,
 					      0, NULL, opts);
 out:
 	if (opts)
-		krb5_get_init_creds_opt_free(kcontext, opts);
+		krb5_get_init_creds_opt_free(opts);
 	return retval;
 }
 
@


1.3
log
@Update to krb5-auth-dialog-0.14
@
text
@d1 1
a1 1
$OpenBSD: patch-src_krb5-auth-dialog_c,v 1.2 2009/07/16 20:14:20 ajacoutot Exp $
@


1.2
log
@Update to krb5-auth-dialog-0.12.
Enable pkinit support.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_krb5-auth-dialog_c,v 1.1.1.1 2009/06/21 11:14:54 ajacoutot Exp $
d7 2
a8 2
--- src/krb5-auth-dialog.c.orig	Thu Jul  2 15:04:35 2009
+++ src/krb5-auth-dialog.c	Wed Jul 15 14:34:40 2009
d17 10
a26 1
@@@@ -483,8 +484,6 @@@@ ka_auth_heimdal_pkinit(KaApplet* applet, krb5_creds* c
d35 1
a35 1
@@@@ -498,7 +497,7 @@@@ ka_auth_heimdal_pkinit(KaApplet* applet, krb5_creds* c
d44 1
a44 1
@@@@ -520,7 +519,7 @@@@ ka_auth_password(KaApplet* applet, krb5_creds* creds,
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d7 3
a9 3
--- src/krb5-auth-dialog.c.orig	Sun Jan 11 22:46:19 2009
+++ src/krb5-auth-dialog.c	Sun Jun 21 12:14:51 2009
@@@@ -23,6 +23,7 @@@@
d17 1
a17 1
@@@@ -527,8 +528,6 @@@@ ka_auth_pkinit(Krb5AuthApplet* applet, krb5_creds* cre
d19 2
a20 2
 						    applet->pk_userid,
 						    NULL, /* x509 anchors */
d26 1
a26 2
@@@@ -541,7 +540,7 @@@@ ka_auth_pkinit(Krb5AuthApplet* applet, krb5_creds* cre
 	                                      NULL, auth_dialog_prompter, applet,
d29 3
a31 2
-	krb5_get_init_creds_opt_free(kcontext, opts);
+	krb5_get_init_creds_opt_free(opts);
d33 4
a36 4
 #else  /* ENABLE_PKINIT */
 	return 0;
@@@@ -617,7 +616,7 @@@@ grab_credentials (Krb5AuthApplet* applet)
 
d38 5
a42 5
 	if (opt)
-		krb5_get_init_creds_opt_free(kcontext, opt);
+		krb5_get_init_creds_opt_free(opt);
 	krb5_free_cred_contents (kcontext, &my_creds);
 	krb5_cc_close (kcontext, ccache);
@


1.1.1.1
log
@Import krb5-auth-dialog-0.8

Krb5-auth-dialog is a tray applet for the GNOME Desktop that monitors
Kerberos tickets.

  * it can alert the user via notifications when the ticket is about to expire
  * renewable tickets are being refreshed automatically
  * tickets can be acquired/refreshed at any time by clicking on the tray icon
  * the ticket cache can be removed via the context menu
@
text
@@
