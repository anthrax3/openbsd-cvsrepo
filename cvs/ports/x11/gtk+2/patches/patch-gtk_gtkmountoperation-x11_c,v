head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.04.25.15.11.55;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.05.18.13.56;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Properly set len for gtkmountoperation-x11.
@
text
@$OpenBSD: patch-gtk_gtkmountoperation-x11_c,v 1.1 2013/01/05 18:13:56 ajacoutot Exp $

From ad9da2727d3e3243fd052c9feb0c55645e87d384 Mon Sep 17 00:00:00 2001
From: Jonathan Matthew <jmatthew@@openbsd.org>
Date: Fri, 8 Jul 2011 10:24:32 +1000
Subject: GMountOperation::show-processes support for OpenBSD using kvm(3)

From 3d165c1a902fc0a5f32898e406a79e53ed4bcc97 Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@openbsd.org>
Date: Tue, 20 Sep 2011 11:57:49 +0200
Subject: gtkmountoperation-x11: unbreak compilation on OpenBSD.

From d987a01d80126ee351727d1603a599c4edb66eca Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@openbsd.org>
Date: Sat, 15 Oct 2011 11:27:47 +0200
Subject: GMountOperation on OpenBSD: remove the need for kvm(3)

From 974212ec825d8d50bdea8ab955b6f19b8ed1672f Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@gnome.org>
Date: Mon, 9 Jul 2012 18:20:34 +0200
Subject: OpenBSD: use G_N_ELEMENTS instead of nitems

From 8935d2f123878c31af69b6c6034069ad540b13c7 Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@@gnome.org>
Date: Fri, 25 Apr 2014 14:37:59 +0200
Subject: openbsd: properly set len for gtkmountoperation-x11

--- gtk/gtkmountoperation-x11.c.orig	Wed Apr 16 16:16:11 2014
+++ gtk/gtkmountoperation-x11.c	Wed Apr 16 16:17:59 2014
@@@@ -43,9 +43,6 @@@@
 #include <errno.h>
 
 #if defined(__OpenBSD__)
-#include <sys/param.h>
-#include <kvm.h>
-#include <fcntl.h>
 #include <sys/sysctl.h>
 #endif
 
@@@@ -724,6 +721,100 @@@@ pid_get_command_line (GPid pid)
 }
 
 /* ---------------------------------------------------------------------------------------------------- */
+
+#elif defined(__OpenBSD__)
+
+/* ---------------------------------------------------------------------------------------------------- */
+
+static GPid
+pid_get_parent (GPid pid)
+{
+  struct kinfo_proc kp;
+  size_t len;
+  GPid ppid;
+
+  int mib[] = { CTL_KERN, KERN_PROC, KERN_PROC_PID, pid,
+                sizeof(struct kinfo_proc), 0 };
+
+  if (sysctl (mib, G_N_ELEMENTS (mib), NULL, &len, NULL, 0) == -1)
+      return (-1);
+  mib[5] = (len / sizeof(struct kinfo_proc));
+
+  if (sysctl (mib, G_N_ELEMENTS (mib), &kp, &len, NULL, 0) < 0)
+      return -1;
+
+  ppid = kp.p_ppid;
+
+  return ppid;
+}
+
+static gchar *
+pid_get_env (GPid pid, const gchar *key)
+{
+  size_t len;
+  char **strs;
+  char *ret = NULL;
+  char *end;
+  int key_len;
+  int i;
+
+  int mib[] = { CTL_KERN, KERN_PROC_ARGS, pid, KERN_PROC_ENV };
+
+  if (sysctl (mib, G_N_ELEMENTS (mib), NULL, &len, NULL, 0) == -1)
+    return ret;
+
+  strs = g_malloc0 (len);
+
+  key_len = strlen (key);
+
+  if (sysctl (mib, G_N_ELEMENTS (mib), strs, &len, NULL, 0) != -1)
+    {
+      for (i = 0; strs[i] != NULL; i++)
+	{
+	  if (g_str_has_prefix (strs[i], key) && (*(strs[i] + key_len) == '='))
+	    {
+	      ret = g_strdup (strs[i] + key_len + 1);
+
+	      /* skip invalid UTF-8 */
+	      if (!g_utf8_validate (ret, -1, (const gchar **) &end))
+		*end = '\0';
+	      break;
+	    }
+	}
+    }
+
+  g_free (strs);
+  return ret;
+}
+
+static gchar *
+pid_get_command_line (GPid pid)
+{
+  size_t len;
+  char **strs;
+  char *ret, *end;
+
+  int mib[] = { CTL_KERN, KERN_PROC_ARGS, pid, KERN_PROC_ARGV };
+
+  if (sysctl (mib, G_N_ELEMENTS (mib), NULL, &len, NULL, 0) == -1)
+    return NULL;
+
+  strs = g_malloc0 (len);
+
+  if (sysctl (mib, G_N_ELEMENTS (mib), strs, &len, NULL, 0) == -1) {
+    g_free (strs);
+    return NULL;
+  }
+
+  ret = g_strjoinv (" ", strs);
+  /* skip invalid UTF-8 */
+  if (!g_utf8_validate (ret, -1, (const gchar **) &end))
+    *end = '\0';
+
+  g_free (strs);
+  return ret;
+}
+
 #else
 
 /* TODO: please implement for your OS - must return valid UTF-8 */
@


1.1
log
@Implement GMountOperation from gtk+3.
@
text
@d1 1
a1 1
$OpenBSD$
d5 1
a5 1
Date: Fri, 08 Jul 2011 00:24:32 +0000
d8 23
a30 3
--- gtk/gtkmountoperation-x11.c.orig	Tue Nov  8 18:31:30 2011
+++ gtk/gtkmountoperation-x11.c	Sat Jan  5 19:08:34 2013
@@@@ -43,8 +43,8 @@@@
d34 1
a34 2
+#include <stdlib.h>
 #include <sys/param.h>
d36 1
a36 1
 #include <fcntl.h>
d39 2
a40 1
@@@@ -724,6 +724,96 @@@@ pid_get_command_line (GPid pid)
d59 1
a59 1
+  if (sysctl(mib, G_N_ELEMENTS (mib), NULL, &len, NULL, 0) == -1)
d63 1
a63 1
+  if (sysctl(mib, G_N_ELEMENTS (mib), &kp, &len, NULL, 0) < 0)
d74 3
a76 3
+  size_t len = PATH_MAX;
+  char **strs = NULL;
+  char *ret;
d83 4
a86 1
+  strs = (char **)realloc(strs, len);
d90 1
a90 2
+  ret = NULL;
+  if (sysctl(mib, G_N_ELEMENTS (mib), strs, &len, NULL, 0) != -1)
d113 3
a115 4
+  size_t len = PATH_MAX;
+  char **strs = NULL;
+  char *ret = NULL;
+  char *end;
d119 4
a122 1
+  strs = (char **)realloc(strs, len);
d124 1
a124 1
+  if (sysctl(mib, G_N_ELEMENTS (mib), strs, &len, NULL, 0) == -1) {
d126 1
a126 1
+    return ret;
@

