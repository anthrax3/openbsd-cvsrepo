head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.2.0.48
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.46
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.44
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.42
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.40
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.38
	OPENBSD_5_0:1.2.0.36
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.34
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.32
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.30
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.28
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.26
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.24
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.22
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.20
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.18
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.16
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.14
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.12
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.1.1.1.0.6
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.4
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	wilfried_2001-08-28:1.1.1.1
	wilfried:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.10.07.09.10.07;	author dcoppa;	state Exp;
branches;
next	1.3;
commitid	Rzg39x7UW16lF1JR;

1.3
date	2014.10.03.13.28.40;	author dcoppa;	state Exp;
branches;
next	1.2;
commitid	HeOKnmqXRiiMAqld;

1.2
date	2002.12.25.11.03.19;	author wilfried;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.28.14.28.19;	author wilfried;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.08.28.14.28.19;	author wilfried;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
More fixes; from pkgsrc
@
text
@$OpenBSD: patch-fishmon_c,v 1.3 2014/10/03 13:28:40 dcoppa Exp $

Unbreak with GTK+ >= 2.18

--- fishmon.c.orig	Thu May 13 01:55:59 2004
+++ fishmon.c	Tue Oct  7 10:58:48 2014
@@@@ -24,7 +24,7 @@@@
  */
 
 #define _GNU_SOURCE
-#define VERSION "1.23"
+#define VERSION "1.24"
 
 /* general includes */
 #include <stdio.h>
@@@@ -152,6 +152,7 @@@@ static char month[12][4] = { "JAN", "FEB", "MAR", "APR
 
 int main(int argc, char **argv)
 {
+    setenv("GDK_NATIVE_WINDOWS", "1", 0);
     int ch;
     GdkEvent *event;
 #ifdef PRO
@@@@ -564,7 +565,7 @@@@ static void prepare_backbuffer(int solid)
     curr_time = time(NULL);
     data = localtime(&curr_time);
 
-    sprintf(buffer, "%s %02d-%s", weekday[data->tm_wday],
+    snprintf(buffer, sizeof(buffer), "%s %02d-%s", weekday[data->tm_wday],
 	    data->tm_mday, month[data->tm_mon]);
 
     draw_string(2, 47, buffer);
@@@@ -648,6 +649,7 @@@@ static void make_new_fishmon_dockapp(void)
 
     /* make a copy for the iconwin - parameters are the same */
     memcpy(&attri, &attr, sizeof(GdkWindowAttr));
+    attri.window_type = GDK_WINDOW_CHILD;
 
     sizehints.flags = USSize;
     sizehints.width = 64;
@@@@ -679,7 +681,6 @@@@ static void make_new_fishmon_dockapp(void)
     wmhints.window_group = win;
     wmhints.flags =
 	StateHint | IconWindowHint | IconPositionHint | WindowGroupHint;
-    XSetWMHints(GDK_WINDOW_XDISPLAY(bm.win), win, &wmhints);
 
     bm.gc = gdk_gc_new(bm.win);
 
@@@@ -693,6 +694,10 @@@@ static void make_new_fishmon_dockapp(void)
 
     gdk_window_show(bm.win);
 
+    XSetWMHints(GDK_WINDOW_XDISPLAY(bm.win), win, &wmhints);
+
+    gdk_window_show(bm.iconwin);
+
 #undef MASK
 }				/* make_new_fishmon_dockapp */
 
@@@@ -1019,6 +1024,8 @@@@ static void check_mail(void)
 static void parse_options(int argc, char **argv)
 {
     static int ch = 0;
+
+#if 0
     static struct option long_opts[] = {
 	{ "h",		no_argument, NULL, 1 },
 	{ "help",	no_argument, NULL, 1 },
@@@@ -1043,15 +1050,43 @@@@ static void parse_options(int argc, char **argv)
 		break;
 	}
     }
+#else
+     extern char *optarg;
+     extern int optind;
+     extern int optopt;
+     extern int opterr;
+     extern int optreset;
+
+ 	while((ch = getopt(argc, argv, "bchv")) != -1)
+		{
+		switch(ch)
+			{
+			case 'b':
+				broken_wm = 1;
+				break;
+			case 'c':
+				enable_check_mail = 1;
+				break;
+			case 'v':
+				do_version();
+				exit(0);
+			case 'h':
+			default:
+				do_help();
+				exit(1);
+			}
+		} 
+
+#endif
 }
 
 static void do_help(void)
 {
     printf("Usage: wmfishtime [options]\n\n"
-	   " -h\t--help\t\tshow this message and exit\n"
-	   " -v\t--version\tshow version and exit\n"
-	   " -c\t--check-mail\tenables check for new mail\n"
-	   " -b\t--broken\tactivates broken window manager fix\n\n"
+	   " -h\tshow this message and exit\n"
+	   " -v\tshow version and exit\n"
+	   " -c\tenables check for new mail\n"
+	   " -b\tactivates broken window manager fix\n\n"
 	   "Yet Another Waste of CPU Cycles! Dock app clock with\n"
 	   "shy fish, bubbles and mail check functionality (disabled by default).\n"
 	   "Try out the man page wmfishtime (1x).\n");
@


1.3
log
@
Update to wmfishtime-1.24, which fixes a gdk memory leak in the
event handling code

Unbreak with GTK+ >= 2.18 (patch stolen from Gentoo Linux)

Regen WANTLIB
@
text
@d1 1
a1 1
$OpenBSD: patch-fishmon_c,v 1.2 2002/12/25 11:03:19 wilfried Exp $
d6 10
a15 1
+++ fishmon.c	Fri Oct  3 15:11:09 2014
d49 1
a49 2
@@@@ -692,6 +693,9 @@@@ static void make_new_fishmon_dockapp(void)
     gdk_window_set_back_pixmap(bm.iconwin, bm.pixmap, False);
d52 2
a54 1
+    XSetWMHints(GDK_WINDOW_XDISPLAY(bm.win), win, &wmhints);
d56 1
a56 1
 
d59 58
@


1.2
log
@drop getopt_long() patch
@
text
@d1 15
a15 4
$OpenBSD: patch-fishmon_c,v 1.1.1.1 2001/08/28 14:28:19 wilfried Exp $
--- fishmon.c.orig	Sat May 26 22:53:09 2001
+++ fishmon.c	Wed Dec 25 11:58:52 2002
@@@@ -562,7 +562,7 @@@@ static void prepare_backbuffer(int solid
d24 26
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 10
+++ fishmon.c	Mon Aug 27 15:43:00 2001
@@@@ -36,7 +36,6 @@@@
 #include <stdlib.h>
 #include <string.h>
 #include <assert.h>
-#include <getopt.h>
 
 /* x11 includes */
 #include <gdk/gdk.h>
@@@@ -562,7 +561,7 @@@@ static void prepare_backbuffer(int solid
a12 55
@@@@ -1017,28 +1016,25 @@@@ static void check_mail(void)
 static void parse_options(int argc, char **argv)
 {
     static int ch = 0;
-    static struct option long_opts[] = {
-	{ "h",		no_argument, NULL, 1 },
-	{ "help",	no_argument, NULL, 1 },
-	{ "v",		no_argument, NULL, 2 },
-	{ "version",	no_argument, NULL, 2 },
-	{ "c",		no_argument, &enable_check_mail, 1 },
-	{ "check-mail", no_argument, &enable_check_mail, 1 },
-	{ "b",		no_argument, &broken_wm, 1 },
-	{ "broken",	no_argument, &broken_wm, 1 },
-	{ 0, 0, 0, 0 }
-    };
 
-    while ((ch = getopt_long_only(argc, argv, "", long_opts, NULL)) != -1) {
+    while ((ch = getopt(argc, argv, "hvcb")) != -1) {
 	switch (ch) {
-	    case 1:
+	    case 'h':
+	    case '?':
+	    default:
 		do_help();
 		exit(0);
 		break;
-	    case 2:
+	    case 'v':
 		do_version();
 		exit(0);
 		break;
+	    case 'c':
+		enable_check_mail=1;
+		break;
+	    case 'b':
+		broken_wm=1;
+		break;
 	}
     }
 }
@@@@ -1046,10 +1042,10 @@@@ static void parse_options(int argc, char
 static void do_help(void)
 {
     printf("Usage: wmfishtime [options]\n\n"
-	   " -h\t--help\t\tshow this message and exit\n"
-	   " -v\t--version\tshow version and exit\n"
-	   " -c\t--check-mail\tenables check for new mail\n"
-	   " -b\t--broken\tactivates broken window manager fix\n\n"
+	   " -h\t\tshow this message and exit\n"
+	   " -v\tshow version and exit\n"
+	   " -c\tenables check for new mail\n"
+	   " -b\tactivates broken window manager fix\n\n"
 	   "Yet Another Waste of CPU Cycles! Dock app clock with\n"
 	   "shy fish, bubbles and mail check functionality (disabled by default).\n"
 	   "Try out the man page wmfishtime (1x).\n");
@


1.1.1.1
log
@The last clock dockapp you'll ever need!  Features sexy gradient
background, antialiased clock hands, alpha-blended bubbles, and
cool fish swimming around behind the clock. Displays current time
with up-to-the-second accuracy, and today's date and day of the
week. But wait, there is more! Move your mouse inside the screen,
and the fish will get scared and run away! (Only if your Window
Manager doesn't suck). Oh yeah, and it checks your mail, too!
@
text
@@
