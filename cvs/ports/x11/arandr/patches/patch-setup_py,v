head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.6
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.1.1.0.8
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.10
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.6
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	edd_20131018:1.1.1.1
	edd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.06.04.20.24.54;	author giovanni;	state Exp;
branches;
next	1.1;
commitid	2saEmLu8JRFHmB8l;

1.1
date	2013.11.18.21.51.11;	author edd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.11.18.21.51.11;	author edd;	state Exp;
branches;
next	;


desc
@@


1.2
log
@unbreak after xrandr(1) update by updating to 0.1.9
ok edd@@ (Maintainer)
@
text
@$OpenBSD: patch-setup_py,v 1.1.1.1 2013/11/18 21:51:11 edd Exp $

Do not compress manual pages and install them in the right place.

--- setup.py.orig	Wed Feb 24 13:47:08 2016
+++ setup.py	Wed Jun  1 12:20:09 2016
@@@@ -20,7 +20,6 @@@@ import os
 import operator
 import subprocess
 import glob
-import gzip
 import datetime
 
 import docutils.core
@@@@ -100,20 +99,19 @@@@ class build_man(NoOptionCommand):
     def run(self):
         self.mkpath('build')
 
-        for (sourcefile, gzfile) in [
-                ('data/arandr.1.txt', os.path.join('build', 'arandr.1.gz')),
-                ('data/unxrandr.1.txt', os.path.join('build', 'unxrandr.1.gz')),
+        for (sourcefile, manfile) in [
+                ('data/arandr.1.txt', os.path.join('build', 'arandr.1')),
+                ('data/unxrandr.1.txt', os.path.join('build', 'unxrandr.1')),
                 ]:
 
-            if newer(sourcefile, gzfile):
+            if newer(sourcefile, manfile):
                 rst_source = open(sourcefile).read()
                 manpage = docutils.core.publish_string(rst_source, writer=docutils.writers.manpage.Writer())
-                info('compressing man page to %s', gzfile)
+                info('writing man page to %s', manfile)
 
                 if not self.dry_run:
-                    compressed = gzip.open(gzfile, 'w', 9)
-                    compressed.write(manpage)
-                    compressed.close()
+                    with open(manfile, 'w') as fh:
+                        fh.write(manpage)
 
 class update_translator_credits(NoOptionCommand):
     description = 'Examine the git history to produce an updated metadata file.'
@@@@ -212,7 +210,7 @@@@ class clean(_clean):
     def run(self):
         if self.all:
             dirs = ['build/locale']
-            files = ['build/arandr.1.gz', 'build/unxrandr.1.gz']
+            files = ['build/arandr.1', 'build/unxrandr.1']
             for directory in dirs:
                 if os.path.exists(directory):
                     remove_tree(directory, dry_run=self.dry_run)
@@@@ -253,7 +251,7 @@@@ setup(name = PACKAGENAME,
             },
         data_files = [
             ('share/applications', ['data/arandr.desktop']), # FIXME: use desktop-file-install?
-            ('share/man/man1', ['build/arandr.1.gz', 'build/unxrandr.1.gz']),
+            ('man/man1', ['build/arandr.1', 'build/unxrandr.1']),
             ],
         scripts = ['arandr', 'unxrandr'],
 )
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d5 2
a6 2
--- setup.py.orig	Mon Mar  4 17:22:25 2013
+++ setup.py	Mon Nov 18 20:56:56 2013
d12 1
d15 1
a15 2
 import docutils.writers.manpage
@@@@ -99,20 +98,19 @@@@ class build_man(NoOptionCommand):
d41 3
a43 3
 class build(_build):
     sub_commands = _build.sub_commands + [('build_trans', None), ('build_man', None)]
@@@@ -137,7 +135,7 @@@@ class clean(_clean):
d52 1
a52 1
@@@@ -177,7 +175,7 @@@@ setup(name = PACKAGENAME,
@


1.1.1.1
log
@Import arandr, a Python xrandr GUI.

OK sthen@@

@
text
@@
