head	1.7;
access;
symbols
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2011.10.30.15.16.13;	author dcoppa;	state dead;
branches;
next	1.6;

1.6
date	2011.09.20.09.59.38;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.24.17.32.24;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.06.00.28.41;	author brad;	state dead;
branches;
next	1.3;

1.3
date	2002.11.27.17.48.52;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.19.18.26.08;	author lebel;	state dead;
branches;
next	1.1;

1.1
date	2002.03.11.14.02.12;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to fluxbox-1.3.2
@
text
@$OpenBSD: patch-src_Screen_cc,v 1.6 2011/09/20 09:59:38 dcoppa Exp $

Use 'unsigned long' to feed XChangeProperty: fix crash at startup
on sparc64 (commit 870d4d02ee9085f1d0910db3f6e6838749d6a1ce)

Fix a use-after-free crash on restart/exit
(commit 0b6c860fa0067c73216209878ed1ae46f541f571)

Fix a bug in the BScreen constructor
(commit 3ad611928a86db3fdb4a8818da1394aa53eaeac7)

--- src/Screen.cc.orig	Tue Sep 20 11:49:54 2011
+++ src/Screen.cc	Tue Sep 20 11:50:28 2011
@@@@ -361,7 +361,7 @@@@ BScreen::BScreen(FbTk::ResourceManager &rm,
 
     // we're going to manage the screen, so now add our pid
 #ifdef HAVE_GETPID
-    pid_t bpid = getpid();
+    unsigned long bpid = static_cast<unsigned long>(getpid());
 
     rootWindow().changeProperty(fluxbox->getFluxboxPidAtom(), XA_CARDINAL,
                                 sizeof(pid_t) * 8, PropModeReplace,
@@@@ -376,7 +376,7 @@@@ BScreen::BScreen(FbTk::ResourceManager &rm,
     unsigned char *ret_prop;
     if (rootWindow().property(wm_check, 0l, 1l,
             False, XA_WINDOW, &xa_ret_type, &ret_format, &ret_nitems,
-            &ret_bytes_after, &ret_prop) == Success) {
+            &ret_bytes_after, &ret_prop) ) {
         m_restart = (ret_prop != NULL);
         XFree(ret_prop);
     }
@@@@ -504,6 +504,8 @@@@ BScreen::~BScreen() {
     if (! managed)
         return;
 
+    m_configmenu.reset(0);
+
     m_toolbar.reset(0);
 
     FbTk::EventManager *evm = FbTk::EventManager::instance();
@@@@ -573,6 +575,10 @@@@ BScreen::~BScreen() {
     // slit must be destroyed before headAreas (Struts)
     m_slit.reset(0);
 
+    delete m_rootmenu.release();
+    delete m_workspacemenu.release();
+    delete m_windowmenu.release();
+
     // TODO fluxgen: check if this is the right place
     for (size_t i = 0; i < m_head_areas.size(); i++)
         delete m_head_areas[i];
@@@@ -1468,7 +1474,8 @@@@ void BScreen::rereadWindowMenu() {
 
 void BScreen::addConfigMenu(const FbTk::FbString &label, FbTk::Menu &menu) {
     m_configmenu_list.push_back(make_pair(label, &menu));
-    setupConfigmenu(*m_configmenu.get());
+    if (m_configmenu.get())
+	setupConfigmenu(*m_configmenu.get());
 }
 
 void BScreen::removeConfigMenu(FbTk::Menu &menu) {
@@@@ -1479,7 +1486,7 @@@@ void BScreen::removeConfigMenu(FbTk::Menu &menu) {
     if (erase_it != m_configmenu_list.end())
         m_configmenu_list.erase(erase_it);
 
-    if (!isShuttingdown())
+    if (!isShuttingdown() && m_configmenu.get())
         setupConfigmenu(*m_configmenu.get());
 
 }
@


1.6
log
@Fix a bug in the BScreen constructor:
it was testing for FbWindow.property() == Success, where it should
have tested for == true
(upstream git commit 3ad611928a86db3fdb4a8818da1394aa53eaeac7)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_Screen_cc,v 1.5 2011/04/24 17:32:24 dcoppa Exp $
@


1.5
log
@Update to fluxbox-1.3.1 plus some patches to fix a couple of crashers
(above all, a use-after-free crash on restart/exit).

OK landry@@
Maintainer timed out
@
text
@d1 1
a1 1
$OpenBSD$
d9 5
a13 2
--- src/Screen.cc.orig	Tue Apr 19 11:33:07 2011
+++ src/Screen.cc	Tue Apr 19 11:33:51 2011
d23 9
@


1.4
log
@use patch from distsite.
--
From: MAINTAINER
@
text
@d1 1
a1 1
$OpenBSD: patch-src_Screen_cc,v 1.3 2002/11/27 17:48:52 brad Exp $
d3 44
a46 16
--- src/Screen.cc.orig	Sun Nov 17 12:27:28 2002
+++ src/Screen.cc	Sun Nov 24 07:21:51 2002
@@@@ -284,7 +284,7 @@@@ resource(rm, screenname, altscreenname)
 	image_control->setDither(*resource.image_dither);
 	theme = new Theme(getBaseDisplay()->getXDisplay(), getRootWindow(), colormap(), getScreenNumber(), 
 			image_control, fluxbox->getStyleFilename(), getRootCommand().c_str());
-
+	theme->reconfigure(*resource.antialias);
 
 	const char *s =	i18n->getMessage(
 		FBNLS::ScreenSet, FBNLS::ScreenPositionLength,
@@@@ -447,7 +447,6 @@@@ resource(rm, screenname, altscreenname)
 
 	XFree(children);
 	XFlush(getBaseDisplay()->getXDisplay());
-	theme->reconfigure(*resource.antialias);
d49 10
a58 1
 namespace {
@


1.3
log
@add a few patches I missed in the upgrade to 0.1.13.

second try, gooo CVS!

--
From: MAINTAINER
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update x11/fluxbox to 0.1.8; from maintainer Han <han@@mijncomputer.nl>
@
text
@d1 21
a21 14
$OpenBSD: patch-src_Screen_cc,v 1.1 2002/03/11 14:02:12 naddy Exp $
--- src/Screen.cc.orig	Sat Mar  9 21:22:15 2002
+++ src/Screen.cc	Sat Mar  9 21:22:47 2002
@@@@ -877,8 +877,9 @@@@ void BScreen::removeNetizen(Window w) {
 	Netizens::iterator it_end = netizenList.end();
 	for (; it != it_end; ++it) {
 		if ((*it)->getWindowID() == w) {
-			Netizen *n = *netizenList.erase(it);
+			Netizen *n = *it;
 			delete n;
+			netizenList.erase(it);
 			break;
 		}
 	}
@


1.1
log
@Patch from author; submitted by Han Boetes <han@@mijncomputer.nl>.
@
text
@d1 1
a1 1
$OpenBSD$
@

