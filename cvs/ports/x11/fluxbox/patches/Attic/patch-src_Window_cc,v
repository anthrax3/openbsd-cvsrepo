head	1.9;
access;
symbols
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8;
locks; strict;
comment	@# @;


1.9
date	2013.04.16.15.27.03;	author bcallah;	state dead;
branches;
next	1.8;

1.8
date	2013.01.11.08.11.26;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2012.08.27.10.45.44;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.06.19.22.24;	author brad;	state dead;
branches;
next	1.5;

1.5
date	2002.05.03.13.47.10;	author lebel;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.03.13.30.23;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.27.13.25.59;	author lebel;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.02.17.36.24;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2002.01.30.15.03.48;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update x11/fluxbox to 1.3.5
ok gonzalo@@
@
text
@$OpenBSD: patch-src_Window_cc,v 1.8 2013/01/11 08:11:26 dcoppa Exp $

Reduce lagging behind of windows on slower displays
(upstream git commit 79fe2fca1de5140f538e68f6981b27cf7f917e7a)

--- src/Window.cc.orig	Sat Oct 29 15:46:15 2011
+++ src/Window.cc	Mon Aug 27 11:52:37 2012
@@@@ -2393,6 +2393,7 @@@@ void FluxboxWindow::motionNotifyEvent(XMotionEvent &me
     Fluxbox::instance()->keys()->doAction(me.type, me.state, m_last_pressed_button, context, &winClient(), me.time);
 
     if (moving) {
+        XEvent e;
 
         // Warp to next or previous workspace?, must have moved sideways some
         int moved_x = me.x_root - m_last_resize_x;
@@@@ -2428,7 +2429,6 @@@@ void FluxboxWindow::motionNotifyEvent(XMotionEvent &me
             if (new_id != cur_id) {
 
                 // remove motion events from queue to avoid repeated warps
-                XEvent e;
                 while (XCheckTypedEvent(display, MotionNotify, &e)) {
                     // might as well update the y-coordinate
                     m_last_resize_y = e.xmotion.y_root;
@@@@ -2453,6 +2453,12 @@@@ void FluxboxWindow::motionNotifyEvent(XMotionEvent &me
 
         // dx = current left side, dy = current top
         doSnapping(dx, dy);
+
+        // do not update display if another motion event is already pending
+        if (XCheckTypedEvent(display, MotionNotify, &e)) {
+            XPutBackEvent(display, &e);
+            return;
+        }
 
         if (!screen().doOpaqueMove()) {
             parent().drawRectangle(screen().rootTheme()->opGC(),
@


1.8
log
@Update to fluxbox-1.3.3.

Tested on sparc64.
Tested by bcallah@@ on amd64 and loongson.

OK bcallah@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_Window_cc,v 1.7 2012/08/27 10:45:44 dcoppa Exp $
@


1.7
log
@Fix sanity check for transient and explicitly placed windows
(upstream git commit 60a53113e05db443af4d520883ec3145680642a8)
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 5
When a screen has more heads and some part of the screen is not on
any head and some window is placed into this invisible area then
the window is invisible which sucks. This patch repositions such
windows so that they are visible.
(upstream git commit 60a53113e05db443af4d520883ec3145680642a8)
d8 2
a9 3
@@@@ -446,11 +446,15 @@@@ void FluxboxWindow::init() {
         int real_x = frame().x();
         int real_y = frame().y();
d11 22
a32 13
-        if (real_x >= 0 &&
-            real_y >= 0 &&
-            real_x <= (signed) screen().width() &&
-            real_y <= (signed) screen().height())
-            m_placed = true;
+        if (screen().hasXinerama()) { // xinerama available => use head info
+            if (0 != screen().getHead(real_x, real_y)) // if visible on some head
+                m_placed = true;
+        } else { // no xinerama available => use screen info
+            if (real_x >= 0 && real_y >= 0 &&
+                real_x <= (signed) screen().width() &&
+                real_y <= (signed) screen().height()) // if visible on the screen
+                m_placed = true;
d35 2
a36 2
     } else
         setOnHead(screen().getCurrHead());
@


1.6
log
@grab the fluxbox patches from the website.
--
Based on patches from the MAINTAINER and lebel@@
@
text
@d1 13
a13 4
$OpenBSD: patch-src_Window_cc,v 1.5 2002/05/03 13:47:10 lebel Exp $
--- src/Window.cc.orig	Fri May  3 12:26:27 2002
+++ src/Window.cc	Fri May  3 12:27:19 2002
@@@@ -239,8 +239,9 @@@@ tab(0)
d15 17
a31 10
 	// adjust the window decorations based on transience and window sizes
 	if (transient) {
-		decorations.maximize = decorations.handle =
-			decorations.border = functions.maximize = false;
+		decorations.maximize =  functions.maximize = false;
+		//we can still use the handles to resize it
+		decorations.handle = decorations.border = true;
 	}	
 	
 	if ((client.normal_hint_flags & PMinSize) &&
@


1.5
log
@insert missing $OpenBSD$
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@apply fluxbox's 0.1.8 bugfix 2 patch
--
From: MAINTAINER
@
text
@d1 1
@


1.3
log
@fluxbox's 0.1.8 bugfix 1 applied; bump patchlevel to p1;
from maintainer Han <han@@mijncomputer.nl>
@
text
@d1 14
a14 11
--- src/Window.cc.orig	Wed Apr 17 09:24:59 2002
+++ src/Window.cc	Sat Apr 27 06:06:23 2002
@@@@ -3348,7 +3348,7 @@@@ void FluxboxWindow::motionNotifyEvent(XM
 					int cur_id = screen->getCurrentWorkspaceID();
 					int new_id = cur_id;
 					const int warpPad = screen->getEdgeSnapThreshold();
-					if (me->x_root >= int(screen->getWidth()) - warpPad &&
+					if (me->x_root >= int(screen->getWidth()) - warpPad - 1 &&
 							frame.x < int(me->x_root - frame.grab_x - screen->getBorderWidth())) {
 						new_id = (cur_id + 1) % screen->getCount();
 						dx = -me->x_root;
@


1.2
log
@Update to 0.1.7; from maintainer Han Boetes <han@@mijncomputer.nl>.
@
text
@d1 11
a11 25
$OpenBSD: patch-src_Window_cc,v 1.1 2002/01/30 15:03:48 naddy Exp $
--- src/Window.cc.orig	Fri Jan 11 13:21:59 2002
+++ src/Window.cc	Wed Jan 30 06:54:54 2002
@@@@ -441,7 +441,9 @@@@ FluxboxWindow::FluxboxWindow(Window w, B
 
 FluxboxWindow::~FluxboxWindow(void) {
 	Fluxbox *fluxbox = Fluxbox::instance();
-	
+	//TODO: Move this to Workspace::removeWindow
+	if (client.transient_for)	
+		fluxbox->setFocusedWindow(client.transient_for);	
 	
 	if (moving || resizing) {
 		screen->hideGeometry();
@@@@ -556,9 +558,7 @@@@ FluxboxWindow::~FluxboxWindow(void) {
 		fluxbox->removeWindowSearch(client.window);
 		screen->removeNetizen(client.window);
 	}
-	//TODO: Move this to Workspace::removeWindow
-	if (client.transient_for)	
-		fluxbox->setFocusedWindow(client.transient_for);	
+	
 	#ifdef DEBUG	
 	fprintf(stderr, "%s(%d): ~FluxboxWindow(this=%p) done\n", __FILE__, __LINE__, this);
 	#endif
@


1.1
log
@Upstream bug fixes.
Submitted by maintainer Han Boetes <han@@mijncomputer.nl>.
@
text
@d1 1
a1 1
$OpenBSD$
@

