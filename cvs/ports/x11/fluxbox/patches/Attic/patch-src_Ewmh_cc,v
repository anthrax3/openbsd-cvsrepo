head	1.6;
access;
symbols
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2011.10.30.15.16.13;	author dcoppa;	state dead;
branches;
next	1.5;

1.5
date	2011.09.13.09.31.47;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2005.05.25.06.59.56;	author david;	state dead;
branches;
next	1.3;

1.3
date	2005.01.23.12.44.10;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.06.00.28.41;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2002.11.27.17.39.12;	author brad;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to fluxbox-1.3.2
@
text
@$OpenBSD: patch-src_Ewmh_cc,v 1.5 2011/09/13 09:31:47 dcoppa Exp $

Fix a bug causing argb32 application icons to appear garbled
(upstream git commit 1da473bab9fa7b18ae925f8e084465c4c81bc3c9)

--- src/Ewmh.cc.orig	Thu Feb 24 17:00:37 2011
+++ src/Ewmh.cc	Mon Sep 12 20:57:19 2011
@@@@ -198,13 +198,23 @@@@ void extractNetWmIcon(Atom net_wm_icon, WinClient& win
     Display* dpy = FbTk::App::instance()->display();
     int scrn = winclient.screen().screenNumber();
 
+    // the icon will not be used by the client but by
+    // 'menu', 'iconbar', 'titlebar'. all these entities
+    // are created based upon the rootwindow and
+    // the default depth. if we would use winclient.depth()
+    // and winclient.drawable() here we might get into trouble
+    // (xfce4-terminal, skype .. 32bit visuals vs 24bit fluxbox
+    // entities)
+    Drawable parent = winclient.screen().rootWindow().drawable();
+    unsigned int depth = DefaultDepth(dpy, scrn);
+
     // pick the smallest icon size atm
     // TODO: find a better criteria
     width = icon_data.begin()->first.first;
     height = icon_data.begin()->first.second;
 
     // tmp image for the pixmap
-    XImage* img_pm = XCreateImage(dpy, DefaultVisual(dpy, scrn), winclient.depth(),
+    XImage* img_pm = XCreateImage(dpy, DefaultVisual(dpy, scrn), depth,
                                   ZPixmap,
                                   0, NULL, width, height, 32, 0);
     if (!img_pm) {
@@@@ -280,8 +290,8 @@@@ void extractNetWmIcon(Atom net_wm_icon, WinClient& win
 
     // the final icon
     FbTk::PixmapWithMask icon;
-    icon.pixmap() = FbTk::FbPixmap(winclient.drawable(), width, height, winclient.depth());
-    icon.mask() = FbTk::FbPixmap(winclient.drawable(), width, height, 1);
+    icon.pixmap() = FbTk::FbPixmap(parent, width, height, depth);
+    icon.mask() = FbTk::FbPixmap(parent, width, height, 1);
 
     FbTk::GContext gc_pm(icon.pixmap());
     FbTk::GContext gc_mask(icon.mask());
@


1.5
log
@Various bugfixes from upstream git:

Fix a bug causing argb32 application icons to appear garbled

Remap keysyms to keycodes after 'MappingNotify' (fix keybindings
with non-qwerty keyboard layouts)

Do not change workspaces when using NextWindow / PrevWindow buttons
in toolbar

Fix a race condition between copying the default config files
to ~/.fluxbox/ and executing 'fluxbox-update_configs'
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@update to fluxbox-0.9.13; ok niallo@@; testing by Maxim Bourmistrov
@
text
@d1 10
a10 50
$OpenBSD: patch-src_Ewmh_cc,v 1.3 2005/01/23 12:44:10 matthieu Exp $
--- src/Ewmh.cc.orig	Mon Jan 17 19:37:46 2005
+++ src/Ewmh.cc	Sat Jan 22 12:00:25 2005
@@@@ -415,7 +415,7 @@@@ void Ewmh::updateCurrentWorkspace(BScree
      * This MUST be set and updated by the Window Manager.
      *
      */
-    unsigned int workspace = screen.currentWorkspaceID();
+    unsigned long workspace = screen.currentWorkspaceID();
     screen.rootWindow().changeProperty(m_net_current_desktop,
                                        XA_CARDINAL, 32,
                                        PropModeReplace,
@@@@ -432,7 +432,7 @@@@ void Ewmh::updateWorkspaceCount(BScreen 
      * Window Manager to indicate the number of virtual
      * desktops.
      */
-    unsigned int numworkspaces = screen.getCount();
+    unsigned long numworkspaces = screen.getCount();
     screen.rootWindow().changeProperty(m_net_number_of_desktops,
                                        XA_CARDINAL, 32,
                                        PropModeReplace,
@@@@ -450,7 +450,7 @@@@ void Ewmh::updateViewPort(BScreen &scree
      * desktops, this MUST always be set to (0,0).
      *
      */
-    int value[2] = {0, 0}; // we dont support large desktops
+    long value[2] = {0, 0}; // we dont support large desktops
     screen.rootWindow().changeProperty(m_net_desktop_viewport,
                                        XA_CARDINAL, 32,
                                        PropModeReplace,
@@@@ -470,7 +470,7 @@@@ void Ewmh::updateGeometry(BScreen &scree
      * Window Manager.
      *
      */
-    int value[2] = {screen.width(), screen.height()};
+    long value[2] = {screen.width(), screen.height()};
     screen.rootWindow().changeProperty(m_net_desktop_geometry,
                                        XA_CARDINAL, 32,
                                        PropModeReplace,
@@@@ -497,7 +497,7 @@@@ void Ewmh::updateWorkarea(BScreen &scree
      * Not sure how to handle xinerama stuff here.
      * So i'm just doing this on the first head.
      */
-    unsigned int *coords = new unsigned int[4*screen.getCount()];
+    unsigned long *coords = new unsigned long[4*screen.getCount()];
     for (unsigned int i=0; i<screen.getCount()*4; i+=4) {
         // x, y
         coords[i] = screen.maxLeft(0);
@@@@ -568,7 +568,7 @@@@ void Ewmh::updateHints(FluxboxWindow &wi
 }
d12 14
a25 5
 void Ewmh::updateWorkspace(FluxboxWindow &win) {
-    int workspace = win.workspaceNumber();
+    long workspace = win.workspaceNumber();
     if (win.isStuck())
         workspace = 0xFFFFFFFF; // appear on all desktops/workspaces
d27 17
@


1.3
log
@update to 0.9.12. work by espie and me, lots of feedback by david@@. ok david@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@use patch from distsite.
--
From: MAINTAINER
@
text
@d1 50
a50 6
This patch fixes font issues with OpenOffice 

--- src/Ewmh.cc.orig	Thu Oct 17 01:31:55 2002
+++ src/Ewmh.cc	Sun Nov 24 07:21:51 2002
@@@@ -329,6 +329,9 @@@@ void Ewmh::createAtoms() {
 	m_net_virtual_roots = XInternAtom(disp, "_NET_VIRTUAL_ROOTS", False);
d52 5
a56 5
 	m_net_close_window = XInternAtom(disp, "_NET_CLOSE_WINDOW", False);
+	m_net_moveresize_window = XInternAtom(disp, "_NET_MOVERESIZE_WINDOW", False);
+	
+	// TODO: implement this one
 	m_net_wm_moveresize = XInternAtom(disp, "_NET_WM_MOVERESIZE", False);
a57 1
 	m_net_properties = XInternAtom(disp, "_NET_PROPERTIES", False);
@


1.1
log
@add a few patches I missed in the upgrade to 0.1.13.
--
From: MAINTAINER
@
text
@@

