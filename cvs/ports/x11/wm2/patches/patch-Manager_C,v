head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.34
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.36
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.16
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.14
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v2_4p0:1.1.1.1
	v2_4:1.1.1.1
	wm2:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2007.04.27.18.31.12;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.04.27.18.31.12;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@$OpenBSD$
--- Manager.C.orig	Fri Mar 21 12:12:30 1997
+++ Manager.C	Wed Apr 11 22:29:23 2007
@@@@ -191,11 +191,11 @@@@ int WindowManager::errorHandler(Display *d, XErrorEven
 
     char msg[100], number[30], request[100];
     XGetErrorText(d, e->error_code, msg, 100);
-    sprintf(number, "%d", e->request_code);
+    snprintf(number, sizeof(number), "%d", e->request_code);
     XGetErrorDatabaseText(d, "XRequest", number, "", request, 100);
 
-    if (request[0] == '\0') sprintf(request, "<request-code-%d>",
-				    e->request_code);
+    if (request[0] == '\0') snprintf(request, sizeof(request), 
+	"<request-code-%d>", e->request_code);
 
     fprintf(stderr, "wm2: %s (0x%lx): %s\n", request, e->resourceid, msg);
 
@@@@ -321,7 +321,7 @@@@ unsigned long WindowManager::allocateColour(char *name
 	 &nearest, &ideal)) {
 
 	char error[100];
-	sprintf(error, "couldn't load %s colour", desc);
+	snprintf(error, sizeof(error), "couldn't load %s colour", desc);
 	fatal(error);
 
     } else return nearest.pixel;
@@@@ -368,7 +368,7 @@@@ Time WindowManager::timestamp(Boolean reset)
     return m_currentTime;
 }
 
-void WindowManager::sigHandler()
+void WindowManager::sigHandler(int)
 {
     m_signalled = True;
 }
@@@@ -521,11 +521,6 @@@@ Boolean WindowManager::raiseTransients(Client *c)
     }
 }
 
-#ifdef sgi
-extern "C" {
-extern int putenv(char *);	/* not POSIX */
-}
-#endif
 
 void WindowManager::spawn()
 {
@@@@ -543,8 +538,8 @@@@ void WindowManager::spawn()
 
 	    if (displayName && (displayName[0] != '\0')) {
 
-		char *pstring = (char *)malloc(strlen(displayName) + 10);
-		sprintf(pstring, "DISPLAY=%s", displayName);
+		char *pstring;
+		asprintf(&pstring, "DISPLAY=%s", displayName);
 		putenv(pstring);
 	    }
 
@


1.1.1.1
log
@wm2 port. ok and tweaks sturm@@
@
text
@@
