head	1.8;
access;
symbols
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.8
date	2016.01.18.09.50.09;	author dcoppa;	state dead;
branches;
next	1.7;
commitid	lrRI65aKSWqF9Rnn;

1.7
date	2015.09.07.10.30.01;	author dcoppa;	state Exp;
branches;
next	1.6;
commitid	WUqbLhpCG8h9lOEo;

1.6
date	2015.01.12.09.00.17;	author dcoppa;	state dead;
branches;
next	1.5;
commitid	ZXrBV9TNCMLtawvr;

1.5
date	2014.09.02.10.52.43;	author dcoppa;	state Exp;
branches;
next	1.4;
commitid	pCHaYTYuFdaHdQSk;

1.4
date	2014.08.18.10.34.02;	author dcoppa;	state Exp;
branches;
next	1.3;
commitid	n45Bs8ADsrhGbZ0H;

1.3
date	2014.04.15.10.32.36;	author dcoppa;	state dead;
branches;
next	1.2;

1.2
date	2013.05.22.15.05.50;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.30.11.50.58;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.8
log
@
Update to awesome-3.5.7
@
text
@$OpenBSD: patch-systray_c,v 1.7 2015/09/07 10:30:01 dcoppa Exp $

commit f320cc74d0ec4111ef04b3523a55970167d28f36
Author: Uli Schlachter <psychon@@znc.in>
Date:   Wed Aug 12 10:26:27 2015 +0200

Force systray redraw on BG color change

This commit makes awesome track the current background color of the systray
window. When Lua applies another color, a redraw of all icons is forced.

Fixes: https://github.com/awesomeWM/awesome/issues/359
Closes: https://github.com/awesomeWM/awesome/pull/402

Signed-off-by: Uli Schlachter <psychon@@znc.in>

--- systray.c.orig	Sat Jan 10 20:36:35 2015
+++ systray.c	Mon Sep  7 11:33:47 2015
@@@@ -45,12 +45,14 @@@@ systray_init(void)
     xcb_screen_t *xscreen = globalconf.screen;
 
     globalconf.systray.window = xcb_generate_id(globalconf.connection);
+    globalconf.systray.background_pixel = xscreen->black_pixel;
     xcb_create_window(globalconf.connection, xscreen->root_depth,
                       globalconf.systray.window,
                       xscreen->root,
                       -1, -1, 1, 1, 0,
                       XCB_COPY_FROM_PARENT, xscreen->root_visual,
-                      0, NULL);
+                      XCB_CW_BACK_PIXEL, (const uint32_t [])
+                      { xscreen->black_pixel });
 
     atom_name = xcb_atom_name_by_screen("_NET_SYSTEM_TRAY", globalconf.default_screen);
     if(!atom_name)
@@@@ -255,7 +257,7 @@@@ luaA_systray_invalidate(void)
 }
 
 static void
-systray_update(int base_size, bool horizontal, bool reverse)
+systray_update(int base_size, bool horizontal, bool reverse, bool force_redraw)
 {
     if(base_size <= 0)
         return;
@@@@ -287,6 +289,8 @@@@ systray_update(int base_size, bool horizontal, bool re
                              XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y | XCB_CONFIG_WINDOW_WIDTH | XCB_CONFIG_WINDOW_HEIGHT,
                              config_vals);
         xcb_map_window(globalconf.connection, em->win);
+        if (force_redraw)
+            xcb_clear_area(globalconf.connection, 1, em->win, 0, 0, 0, 0);
         if(horizontal)
             config_vals[0] += base_size;
         else
@@@@ -322,13 +326,18 @@@@ luaA_systray(lua_State *L)
         const char *bg = luaL_checklstring(L, 6, &bg_len);
         bool revers = lua_toboolean(L, 7);
         color_t bg_color;
+        bool force_redraw = false;
 
-        if(color_init_reply(color_init_unchecked(&bg_color, bg, bg_len)))
+        if(color_init_reply(color_init_unchecked(&bg_color, bg, bg_len))
+                && globalconf.systray.background_pixel != bg_color.pixel)
         {
             uint32_t config_back[] = { bg_color.pixel };
+            globalconf.systray.background_pixel = bg_color.pixel;
             xcb_change_window_attributes(globalconf.connection,
                                          globalconf.systray.window,
                                          XCB_CW_BACK_PIXEL, config_back);
+            xcb_clear_area(globalconf.connection, 1, globalconf.systray.window, 0, 0, 0, 0);
+            force_redraw = true;
         }
 
         if(globalconf.systray.parent != w)
@@@@ -349,7 +358,7 @@@@ luaA_systray(lua_State *L)
 
         if(globalconf.embedded.len != 0)
         {
-            systray_update(base_size, horiz, revers);
+            systray_update(base_size, horiz, revers, force_redraw);
             xcb_map_window(globalconf.connection,
                            globalconf.systray.window);
         }
@


1.7
log
@
Merge several fixes from the stable '3.5' branch
@
text
@d1 1
a1 1
$OpenBSD$
@


1.6
log
@
Update to awesome-3.5.6, codename "For Those About To Rock"
@
text
@d1 1
a1 1
$OpenBSD: patch-systray_c,v 1.5 2014/09/02 10:52:43 dcoppa Exp $
d3 1
a3 1
commit 9846a3274abe2569f342bb68af9b290799a8617e
d5 1
a5 1
Date:   Wed Aug 20 11:40:50 2014 +0200
d7 1
a7 1
systray: Only intern the atom once
d9 2
a10 2
Let's just save the systray atom and keep it around. Why should we redo this
every time this atom is needed?
d12 2
a13 7
Signed-off-by: Uli Schlachter <psychon@@znc.in>

commit e21119023473fb45a11beb838d935b1c53cb550d
Author: Uli Schlachter <psychon@@znc.in>
Date:   Wed Aug 20 11:47:47 2014 +0200

systray: Only register/unregister when needed
d17 3
a19 26
commit aec8e2944a220f8cb46f37826acd88506af5b243
Author: memeplex <carlosjosepita@@gmail.com>
Date:   Mon Aug 18 02:32:11 2014 -0300

Fix for FS#1293

FS#1293 - Systray won't show with margin layout

commit a250dcdbe12a3afa6ffa9fbb26f8c48c7e9cc049
Author: Uli Schlachter <psychon@@znc.in>
Date:   Sun May 11 17:21:57 2014 +0200

systray: Small consistency fixes

Use lua's *integer instead of *number functions, because we are dealing with
integers. That is, "numbers which do not have a fractional part".

--- systray.c.orig	Fri Apr 11 11:07:10 2014
+++ systray.c	Tue Sep  2 12:21:42 2014
@@@@ -39,6 +39,9 @@@@
 void
 systray_init(void)
 {
+    xcb_intern_atom_cookie_t atom_systray_q;
+    xcb_intern_atom_reply_t *atom_systray_r;
+    char *atom_name;
d23 4
a26 1
@@@@ -48,6 +51,22 @@@@ systray_init(void)
d29 7
a35 17
                       0, NULL);
+
+    atom_name = xcb_atom_name_by_screen("_NET_SYSTEM_TRAY", globalconf.default_screen);
+    if(!atom_name)
+        fatal("error getting systray atom name");
+
+    atom_systray_q = xcb_intern_atom_unchecked(globalconf.connection, false,
+                                               a_strlen(atom_name), atom_name);
+
+    p_delete(&atom_name);
+
+    atom_systray_r = xcb_intern_atom_reply(globalconf.connection, atom_systray_q, NULL);
+    if(!atom_systray_r)
+        fatal("error getting systray atom");
+
+    globalconf.systray.atom = atom_systray_r->atom;
+    p_delete(&atom_systray_r);
d38 3
a40 2
 /** Register systray in X.
@@@@ -57,23 +76,12 @@@@ systray_register(void)
d42 1
a42 67
     xcb_client_message_event_t ev;
     xcb_screen_t *xscreen = globalconf.screen;
-    char *atom_name;
-    xcb_intern_atom_cookie_t atom_systray_q;
-    xcb_intern_atom_reply_t *atom_systray_r;
-    xcb_atom_t atom_systray;
 
-    /* Send requests */
-    if(!(atom_name = xcb_atom_name_by_screen("_NET_SYSTEM_TRAY", globalconf.default_screen)))
-    {
-        warn("error getting systray atom");
+    if(globalconf.systray.registered)
         return;
-    }
 
-    atom_systray_q = xcb_intern_atom_unchecked(globalconf.connection, false,
-                                               a_strlen(atom_name), atom_name);
+    globalconf.systray.registered = true;
 
-    p_delete(&atom_name);
-
     /* Fill event */
     p_clear(&ev, 1);
     ev.response_type = XCB_CLIENT_MESSAGE;
@@@@ -81,22 +89,13 @@@@ systray_register(void)
     ev.format = 32;
     ev.type = MANAGER;
     ev.data.data32[0] = XCB_CURRENT_TIME;
+    ev.data.data32[1] = globalconf.systray.atom;
     ev.data.data32[2] = globalconf.systray.window;
     ev.data.data32[3] = ev.data.data32[4] = 0;
 
-    if(!(atom_systray_r = xcb_intern_atom_reply(globalconf.connection, atom_systray_q, NULL)))
-    {
-        warn("error getting systray atom");
-        return;
-    }
-
-    ev.data.data32[1] = atom_systray = atom_systray_r->atom;
-
-    p_delete(&atom_systray_r);
-
     xcb_set_selection_owner(globalconf.connection,
                             globalconf.systray.window,
-                            atom_systray,
+                            globalconf.systray.atom,
                             XCB_CURRENT_TIME);
 
     xcb_send_event(globalconf.connection, false, xscreen->root, 0xFFFFFF, (char *) &ev);
@@@@ -107,31 +106,16 @@@@ systray_register(void)
 void
 systray_cleanup(void)
 {
-    xcb_intern_atom_reply_t *atom_systray_r;
-    char *atom_name;
-
-    if(!(atom_name = xcb_atom_name_by_screen("_NET_SYSTEM_TRAY", globalconf.default_screen))
-       || !(atom_systray_r = xcb_intern_atom_reply(globalconf.connection,
-                                                   xcb_intern_atom_unchecked(globalconf.connection,
-                                                                             false,
-                                                                             a_strlen(atom_name),
-                                                                             atom_name),
-                                                   NULL)))
-    {
-        warn("error getting systray atom");
-        p_delete(&atom_name);
+    if(!globalconf.systray.registered)
d44 10
a53 33
-    }
 
-    p_delete(&atom_name);
+    globalconf.systray.registered = false;
 
     xcb_set_selection_owner(globalconf.connection,
                             XCB_NONE,
-                            atom_systray_r->atom,
+                            globalconf.systray.atom,
                             XCB_CURRENT_TIME);
 
-    p_delete(&atom_systray_r);
-
     xcb_unmap_window(globalconf.connection,
                      globalconf.systray.window);
 }
@@@@ -325,13 +309,15 @@@@ systray_update(int base_size, bool horizontal, bool re
 int
 luaA_systray(lua_State *L)
 {
+    systray_register();
+
     if(lua_gettop(L) != 0)
     {
         size_t bg_len;
         drawin_t *w = luaA_checkudata(L, 1, &drawin_class);
-        int x = luaL_checknumber(L, 2);
-        int y = luaL_checknumber(L, 3);
-        int base_size = luaL_checknumber(L, 4);
+        int x = luaL_checkinteger(L, 2);
+        int y = luaL_checkinteger(L, 3);
+        int base_size = luaL_checkinteger(L, 4);
         bool horiz = lua_toboolean(L, 5);
d56 11
a66 1
@@@@ -345,9 +331,6 @@@@ luaA_systray(lua_State *L)
d68 2
a71 3
-        if(globalconf.systray.parent == NULL)
-            systray_register();
-
d73 9
a81 11
             xcb_reparent_window(globalconf.connection,
                                 globalconf.systray.window,
@@@@ -375,7 +358,7 @@@@ luaA_systray(lua_State *L)
                              globalconf.systray.window);
     }
 
-    lua_pushnumber(L, globalconf.embedded.len);
+    lua_pushinteger(L, globalconf.embedded.len);
     luaA_object_push(L, globalconf.systray.parent);
     return 2;
 }
@


1.5
log
@
Merge fixes from the stable branch.

systray: Only intern the atom once
systray: Only register/unregister when needed
systray: Systray won't show with margin layout
lib.awful.taglist: fix multiple tag selection
menubar: Menubar should check all standard directories
wibox: Make :find_widgets() easily accessible
@
text
@d1 1
a1 1
$OpenBSD: patch-systray_c,v 1.4 2014/08/18 10:34:02 dcoppa Exp $
@


1.4
log
@
Fixes from upstream:

Fix check against clients in taglist
(upstream git commit aedcd90d4da41132303636ba15170b6a43cc231f)

wibox.widget.systray: Special case the empty systray
(upstream git commit 3dd0c442a031f174000950981154139879933ab0)

systray: Small consistency fixes
(upstream git commit a250dcdbe12a3afa6ffa9fbb26f8c48c7e9cc049)
@
text
@d1 28
a28 1
$OpenBSD$
d40 127
a166 2
+++ systray.c	Mon Aug 18 12:26:29 2014
@@@@ -329,9 +329,9 @@@@ luaA_systray(lua_State *L)
d179 11
a189 1
@@@@ -375,7 +375,7 @@@@ luaA_systray(lua_State *L)
@


1.3
log
@
Cleanup following libxcb/xcb-util updates
@
text
@d1 1
a1 1
$OpenBSD: patch-systray_c,v 1.2 2013/05/22 15:05:50 dcoppa Exp $
d3 3
a5 1
Revert to the old xcb-util-0.3.6 API
d7 23
a29 8
--- systray.c.orig	Mon May 20 13:46:18 2013
+++ systray.c	Mon May 20 13:46:38 2013
@@@@ -164,7 +164,7 @@@@ systray_request_handle(xcb_window_t embed_win, xembed_
 
     xcb_change_window_attributes(globalconf.connection, embed_win, XCB_CW_EVENT_MASK,
                                  select_input_val);
-    xwindow_set_state(embed_win, XCB_ICCCM_WM_STATE_WITHDRAWN);
+    xwindow_set_state(embed_win, XCB_WM_STATE_WITHDRAWN);
d31 5
a35 2
     /* we grab the window, but also make sure it's automatically reparented back
      * to the root window if we should die.
@


1.2
log
@Major update to awesome-3.5.1

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-systray_c,v 1.1 2011/11/30 11:50:58 dcoppa Exp $
@


1.1
log
@Update to awesome v3.4.11 (Pickapart)

ChangeLog at http://awesome.naquadah.org/changelogs/short/v3.4.11
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- systray.c.orig	Wed Nov 30 11:29:38 2011
+++ systray.c	Wed Nov 30 11:29:51 2011
@@@@ -197,7 +197,7 @@@@ systray_request_handle(xcb_window_t embed_win, int phy
d11 2
a12 2
-    window_state_set(embed_win, XCB_ICCCM_WM_STATE_WITHDRAWN);
+    window_state_set(embed_win, XCB_WM_STATE_WITHDRAWN);
@

