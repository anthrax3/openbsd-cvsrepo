head	1.6;
access;
symbols
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2015.01.12.09.00.17;	author dcoppa;	state dead;
branches;
next	1.5;
commitid	ZXrBV9TNCMLtawvr;

1.5
date	2014.10.13.09.00.48;	author dcoppa;	state Exp;
branches;
next	1.4;
commitid	4hWjioLZIJYAAe7b;

1.4
date	2014.04.15.11.16.04;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2014.04.15.10.32.36;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2014.01.14.13.33.37;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.15.09.28.46;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.6
log
@
Update to awesome-3.5.6, codename "For Those About To Rock"
@
text
@$OpenBSD: patch-objects_drawin_c,v 1.5 2014/10/13 09:00:48 dcoppa Exp $

commit f236a5f0c70015c0c2b3a57a8aec9dcc5dc49bdc
Author: Uli Schlachter <psychon@@znc.in>
Date:   Sat Oct 11 13:27:29 2014 +0200

drawin_update_drawing: Remove optimization for invisible drawins

This fixes the following code:

   local d = drawin({})
   d.visible = true

The drawin now has a cairo surface assigned

   d.visible = false
   d.width = 1234
   d.visible = true

The width change while the drawin was not visible would not get propagated to
the drawable because of the code that this patch removes. The expectation was
that drawin_map() would update the drawable later.

However, because the drawin was already visible, its drawable also already has
a surface assigned. Thus, drawin_map() wouldn't update the drawable either.

Fix this by just removing this optimizations.

Signed-off-by: Uli Schlachter <psychon@@znc.in>

commit 6673ecb167c5a5d85c8bacab15c1b6c0c7f65e80
Author: Uli Schlachter <psychon@@znc.in>
Date:   Sat Oct 11 13:12:57 2014 +0200

drawin: Don't special-case moves

The code in drawin_moveresize() tries to be clever and only updates the drawing
state of the drawable when it is resized, not when it is moved around. This used
to be necessary because once upon a time, drawin_update_drawing() threw away all
of the drawing state and thus forcing a repaint. These days it just calls
drawable_set_geometry() as well and that function special-cases moves.

So this old code in drawin_moveresize() is no longer necessary and actually
caused problems.

These problems occurred because drawin_update_drawing() is being clever and
doesn't do anything for .visible = false drawins, because their drawing state
will be updated once they become visible. However, not skipping
drawable_set_geometry() means that this broke, because drawin_map() thought that
the drawing state was up to date while in reality it wasn't.

References: http://article.gmane.org/gmane.comp.window-managers.awesome/10852
Signed-off-by: Uli Schlachter <psychon@@znc.in>

--- objects/drawin.c.orig	Fri Apr 11 11:07:10 2014
+++ objects/drawin.c	Mon Oct 13 10:39:02 2014
@@@@ -82,11 +82,6 @@@@ drawin_unref_simplified(drawin_t **item)
 static void
 drawin_update_drawing(drawin_t *w, int widx)
 {
-    /* If this drawin isn't visible, we don't need an up-to-date cairo surface
-     * for it. (drawin_map() will later make sure we are called again) */
-    if(!w->visible)
-        return;
-
     luaA_object_push_item(globalconf.L, widx, w->drawable);
     drawable_set_geometry(w->drawable, -1, w->geometry);
     lua_pop(globalconf.L, 1);
@@@@ -137,14 +132,7 @@@@ drawin_moveresize(lua_State *L, int udx, area_t geomet
         mask_vals |= XCB_CONFIG_WINDOW_HEIGHT;
     }
 
-    if(mask_vals & (XCB_CONFIG_WINDOW_WIDTH | XCB_CONFIG_WINDOW_HEIGHT))
-        drawin_update_drawing(w, udx);
-    else {
-        /* We still have to set x/y */
-        luaA_object_push_item(L, udx, w->drawable);
-        drawable_set_geometry(w->drawable, -1, w->geometry);
-        lua_pop(L, 1);
-    }
+    drawin_update_drawing(w, udx);
 
     /* Activate BMA */
     client_ignore_enterleave_events();
@


1.5
log
@
Sync with '3.5' maintenance branch:

drawin: Don't special-case moves
(upstream git commit 6673ecb167c5a5d85c8bacab15c1b6c0c7f65e80)

drawin_update_drawing: Remove optimization for invisible drawins
(upstream git commit f236a5f0c70015c0c2b3a57a8aec9dcc5dc49bdc)

wibox.layout.base.rect_to_device_geometry: Fix for "weird" rotations
(upstream git commit 983d094c76c5ddb6fe7deeec2f977a981c057a8a)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@
Update to awesome-3.5.5
@
text
@d1 1
a1 1
$OpenBSD: patch-objects_drawin_c,v 1.3 2014/04/15 10:32:36 dcoppa Exp $
d3 82
a84 17
Fix a bug in luaA_drawin_set_shape_bounding() which forgot to include
the drawin's border in its size calculation
(part of upstream git commit 56c57979056ec23cbd4982f3b81f6d80895fbe46)

--- objects/drawin.c.orig	Sat Oct 12 18:48:49 2013
+++ objects/drawin.c	Tue Jan 14 10:36:22 2014
@@@@ -547,7 +547,9 @@@@ luaA_drawin_set_shape_bounding(lua_State *L, drawin_t 
     cairo_surface_t *surf = NULL;
     if(!lua_isnil(L, -1))
         surf = (cairo_surface_t *)lua_touserdata(L, -1);
-    xwindow_set_shape(drawin->window, drawin->geometry.width, drawin->geometry.height,
+    xwindow_set_shape(drawin->window,
+            drawin->geometry.width + 2*drawin->border_width,
+            drawin->geometry.height + 2*drawin->border_width,
             XCB_SHAPE_SK_BOUNDING, surf, -drawin->border_width);
     return 0;
 }
@


1.3
log
@
Cleanup following libxcb/xcb-util updates
@
text
@d1 1
a1 1
$OpenBSD: patch-objects_drawin_c,v 1.2 2014/01/14 13:33:37 dcoppa Exp $
@


1.2
log
@Bugfixes from upstream:

awesomerc: Fix set menu clients width
(upstream git commit 843a36aa6e7fdb5e1e76fbb9879328c92adc77f7)

awful.menu.clients: Fix API
(upstream git commit 479f7b990cf411bc116f728eea8edc0ea6b4b8d3)

menu: do not double escape name in 'menu:clients()'
(upstream git commit 77e92e17a1ec1711233f42560b5b339944ce71b2)

awful.tag.delete: Deactivate tags
(upstream git commit d4b12bb1b2b8365d7c1b9be365dc5843303ba828)

awful.tag.viewmore: Make screen optional
(upstream git commit 5cd8c7e540c91b575581c7958ec82903bb646058)

tasklist: Add default colors for broken themes
(upstream git commit 15f088196699857cdac28250d7a3857fe8b57cee)

menubar: Fix API docs
(upstream git commit aa51379be0a9317a5549034bc9be149f41ad9201)

Fix a bug in luaA_drawin_set_shape_bounding() which forgot to include
the drawin's border in its size calculation
(part of upstream git commit 56c57979056ec23cbd4982f3b81f6d80895fbe46)

Really ignore loops in transient_for
(upstream git commit 389a54e356f700a4f2a621e05dbdbafab4a3a03a)
@
text
@d1 1
a1 3
$OpenBSD: patch-objects_drawin_c,v 1.1 2013/10/15 09:28:46 dcoppa Exp $

Revert to libXcursor
a8 18
@@@@ -142,7 +142,7 @@@@ drawin_init(drawin_t *w)
                           | XCB_EVENT_MASK_POINTER_MOTION | XCB_EVENT_MASK_EXPOSURE
                           | XCB_EVENT_MASK_PROPERTY_CHANGE,
                           globalconf.default_cmap,
-                          xcursor_new(globalconf.cursor_ctx, xcursor_font_fromstr(w->cursor))
+                          xcursor_new(globalconf.display, xcursor_font_fromstr(w->cursor))
                       });
 
     /* Set the right properties */
@@@@ -502,7 +502,7 @@@@ luaA_drawin_set_cursor(lua_State *L, drawin_t *drawin)
         uint16_t cursor_font = xcursor_font_fromstr(buf);
         if(cursor_font)
         {
-            xcb_cursor_t cursor = xcursor_new(globalconf.cursor_ctx, cursor_font);
+            xcb_cursor_t cursor = xcursor_new(globalconf.display, cursor_font);
             p_delete(&drawin->cursor);
             drawin->cursor = a_strdup(buf);
             xwindow_set_cursor(drawin->window, cursor);
@


1.1
log
@Update to awesome-3.5.2, codename "The Fox".
@
text
@d1 1
a1 1
$OpenBSD$
d5 4
d10 1
a10 1
+++ objects/drawin.c	Tue Oct 15 10:18:16 2013
d29 11
@

