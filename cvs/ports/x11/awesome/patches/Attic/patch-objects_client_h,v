head	1.8;
access;
symbols
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2016.03.07.11.33.59;	author dcoppa;	state dead;
branches;
next	1.7;
commitid	7zUqqCR47GCkIAqa;

1.7
date	2016.03.01.11.42.24;	author dcoppa;	state Exp;
branches;
next	1.6;
commitid	QAoVD7PgkclyraIQ;

1.6
date	2015.01.12.09.00.17;	author dcoppa;	state dead;
branches;
next	1.5;
commitid	ZXrBV9TNCMLtawvr;

1.5
date	2014.12.16.11.16.05;	author dcoppa;	state Exp;
branches;
next	1.4;
commitid	4UkLQ4p6HUpxFojY;

1.4
date	2014.04.15.10.32.36;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2013.10.15.09.28.46;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2013.10.07.14.28.52;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2013.05.22.15.05.50;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.8
log
@
Update to awesome-3.5.9
@
text
@$OpenBSD: patch-objects_client_h,v 1.7 2016/03/01 11:42:24 dcoppa Exp $

commit e54d911a94697eb5fd5b7d5ac2a72e4d3be6194b
Author: Uli Schlachter <psychon@@znc.in>
Date:   Sun Feb 28 13:29:25 2016 +0100

Make client key bindings for e.g. xeyes work again

Instead of focusing the root window, we now create a "focus window" inside of
our frame window. This window is placed so that it is not visible, but we can
grab key bindings on it to simulate the window having the input focus.

Fixes: https://github.com/awesomeWM/awesome/issues/699
Signed-off-by: Uli Schlachter <psychon@@znc.in>

--- objects/client.h.orig	Sat Jan 30 14:55:18 2016
+++ objects/client.h	Tue Mar  1 11:24:18 2016
@@@@ -56,6 +56,8 @@@@ typedef enum {
 struct client_t
 {
     WINDOW_OBJECT_HEADER
+    /** Window we use for input focus and no-input clients */
+    xcb_window_t nofocus_window;
     /** Client logical screen */
     screen_t *screen;
     /** Client name */
@@@@ -137,6 +139,7 @@@@ LUA_OBJECT_FUNCS(client_class, client_t, client)
 
 bool client_maybevisible(client_t *);
 client_t * client_getbywin(xcb_window_t);
+client_t * client_getbynofocuswin(xcb_window_t);
 client_t * client_getbyframewin(xcb_window_t);
 
 void client_ban(client_t *);
@


1.7
log
@
Merge several fixes from the stable '3.5' branch
@
text
@d1 1
a1 1
$OpenBSD$
@


1.6
log
@
Update to awesome-3.5.6, codename "For Those About To Rock"
@
text
@d1 1
a1 1
$OpenBSD: patch-objects_client_h,v 1.5 2014/12/16 11:16:05 dcoppa Exp $
d3 1
a3 1
commit ed3d0489ced8c4f56d2af990979ba75cfa5107b8
d5 1
a5 1
Date:   Sun Dec 7 14:09:35 2014 +0100
d7 1
a7 1
Implement icon_pixmap and icon_mask from WM_HINTS (FS#1297)
d9 3
a11 4
Fun fact: ICCCM specifies that icon_pixmap must have depth 1. Xterm uses a
pixmap with depth 24. Yay... As such, I don't have any test for the depth == 1
case and will just assume that it does the right thing. If it doesn't, I bet no
one will notice anyway.
d13 1
d16 19
a34 21
--- objects/client.h.orig	Fri Apr 11 04:07:10 2014
+++ objects/client.h	Tue Dec 16 04:47:13 2014
@@@@ -106,6 +106,8 @@@@ struct client_t
     key_array_t keys;
     /** Icon */
     cairo_surface_t *icon;
+    /** True if we ever got an icon from _NET_WM_ICON */
+    bool have_ewmh_icon;
     /** Size hints */
     xcb_size_hints_t size_hints;
     bool size_hints_honor;
@@@@ -166,7 +168,8 @@@@ void client_set_transient_for(lua_State *L, int, clien
 void client_set_name(lua_State *L, int, char *);
 void client_set_alt_name(lua_State *L, int, char *);
 void client_set_group_window(lua_State *, int, xcb_window_t);
-void client_set_icon(client_t *c, cairo_surface_t *s);
+void client_set_icon(client_t *, cairo_surface_t *);
+void client_set_icon_from_pixmaps(client_t *, xcb_pixmap_t, xcb_pixmap_t);
 void client_set_skip_taskbar(lua_State *, int, bool);
 void client_focus(client_t *);
 void client_focus_update(client_t *);
@


1.5
log
@
Merge fixes from the stable '3.5' branch:

Don't move clients on ConfigureRequests

Implement icon_pixmap and icon_mask from WM_HINTS

Don't set a background-pixel for our client frame windows
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@
Cleanup following libxcb/xcb-util updates
@
text
@d1 1
a1 1
$OpenBSD: patch-objects_client_h,v 1.3 2013/10/15 09:28:46 dcoppa Exp $
d3 3
a5 1
Revert to the old xcb-util-0.3.6 API
d7 12
a18 9
--- objects/client.h.orig	Sat Oct 12 18:48:49 2013
+++ objects/client.h	Tue Oct 15 09:51:13 2013
@@@@ -99,7 +99,7 @@@@ struct client_t
     /** Window holding command needed to start it (session management related) */
     xcb_window_t leader_window;
     /** Client's WM_PROTOCOLS property */
-    xcb_icccm_get_wm_protocols_reply_t protocols;
+    xcb_get_wm_protocols_reply_t protocols;
     /** Key bindings */
d21 16
a36 11
@@@@ -212,8 +212,8 @@@@ client_raise(client_t *c)
 static inline bool
 client_isfixed(client_t *c)
 {
-    return (c->size_hints.flags & XCB_ICCCM_SIZE_HINT_P_MAX_SIZE
-            && c->size_hints.flags & XCB_ICCCM_SIZE_HINT_P_MIN_SIZE
+    return (c->size_hints.flags & XCB_SIZE_HINT_P_MAX_SIZE
+            && c->size_hints.flags & XCB_SIZE_HINT_P_MIN_SIZE
             && c->size_hints.max_width == c->size_hints.min_width
             && c->size_hints.max_height == c->size_hints.min_height
             && c->size_hints.max_width
@


1.3
log
@Update to awesome-3.5.2, codename "The Fox".
@
text
@d1 1
a1 1
$OpenBSD: patch-objects_client_h,v 1.2 2013/10/07 14:28:52 dcoppa Exp $
@


1.2
log
@Bunch of bugfixes from upstream:

Fix possible deadlock during startup
awful.client.tiled: Ignore fullscreen clients
awful.screen.focus: Don't move mouse to (0, 0) first
naughty: Verify image parameters coming from dbus
wibox.layout.fixed: Fix fill space
Revert "client: add a limit to the loop"
client: Ignore transient_for causing loops
screen: Fix screen equality comparison
@
text
@d1 1
a1 1
$OpenBSD: patch-objects_client_h,v 1.1 2013/05/22 15:05:50 dcoppa Exp $
d5 2
a6 12
commit e858163a0fc7226a7299af65083a6fea0824fa9a
Author: David Mohr <david@@mcbf.net>
Date:   Sat Mar 16 15:25:54 2013 -0600

Revert "client: add a limit to the loop (FS#573)"

This reverts commit b8de5f2d43e1c560d3b8cad2eb63b379ae547b9c.

Signed-off-by: Uli Schlachter <psychon@@znc.in>

--- objects/client.h.orig	Mon Apr  1 13:44:46 2013
+++ objects/client.h	Mon Oct  7 15:18:11 2013
d16 1
a16 14
@@@@ -188,10 +188,8 @@@@ client_raise(client_t *c)
     client_t *tc = c;
     int counter = 0;
 
-    /* Find number of transient layers.
-     * We limit the counter to the stack length: if some case, a buggy
-     * application might set transient_for as a loopâ€¦ */
-    for(counter = 0; tc->transient_for && counter <= globalconf.stack.len; counter++)
+    /* Find number of transient layers. */
+    for(counter = 0; tc->transient_for; counter++)
         tc = tc->transient_for;
 
     /* Push them in reverse order. */
@@@@ -214,8 +212,8 @@@@ client_raise(client_t *c)
@


1.1
log
@Major update to awesome-3.5.1

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 12
a16 2
--- objects/client.h.orig	Mon May 20 13:38:07 2013
+++ objects/client.h	Mon May 20 13:38:31 2013
d26 14
a39 1
@@@@ -214,8 +214,8 @@@@ client_raise(client_t *c)
@

