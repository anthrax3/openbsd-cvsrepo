head	1.11;
access;
symbols
	OPENBSD_6_0:1.11.0.10
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.6
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.8
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.4
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.2
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.10.0.2
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2;
locks; strict;
comment	@# @;


1.11
date	2014.04.15.11.16.04;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2014.01.14.13.33.37;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2013.10.15.09.28.44;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2013.10.07.14.28.52;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2013.09.23.14.14.29;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2013.05.22.15.05.50;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2012.12.31.17.41.44;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2012.11.22.08.53.32;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.30.11.50.58;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.05.17.11.30.54;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2011.03.13.18.07.23;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.11
log
@
Update to awesome-3.5.5
@
text
@$OpenBSD: patch-lib_naughty_lua_in,v 1.10 2014/01/14 13:33:37 dcoppa Exp $
--- lib/naughty.lua.in.orig	Sat Oct 12 18:48:49 2013
+++ lib/naughty.lua.in	Tue Jan 14 13:10:28 2014
@@@@ -38,8 +38,8 @@@@ naughty.config.padding = 4
 --- Spacing between popups. Default: 1
 naughty.config.spacing = 1
 --- List of directories that will be checked by getIcon()
---   Default: { "/usr/share/pixmaps/", }
-naughty.config.icon_dirs = { "/usr/share/pixmaps/", }
+--   Default: { "${LOCALBASE}/share/pixmaps/", }
+naughty.config.icon_dirs = { "${LOCALBASE}/share/pixmaps/", }
 --- List of formats that will be checked by getIcon()
 --   Default: { "png", "gif" }
 naughty.config.icon_formats = { "png", "gif" }
@


1.10
log
@Bugfixes from upstream:

awesomerc: Fix set menu clients width
(upstream git commit 843a36aa6e7fdb5e1e76fbb9879328c92adc77f7)

awful.menu.clients: Fix API
(upstream git commit 479f7b990cf411bc116f728eea8edc0ea6b4b8d3)

menu: do not double escape name in 'menu:clients()'
(upstream git commit 77e92e17a1ec1711233f42560b5b339944ce71b2)

awful.tag.delete: Deactivate tags
(upstream git commit d4b12bb1b2b8365d7c1b9be365dc5843303ba828)

awful.tag.viewmore: Make screen optional
(upstream git commit 5cd8c7e540c91b575581c7958ec82903bb646058)

tasklist: Add default colors for broken themes
(upstream git commit 15f088196699857cdac28250d7a3857fe8b57cee)

menubar: Fix API docs
(upstream git commit aa51379be0a9317a5549034bc9be149f41ad9201)

Fix a bug in luaA_drawin_set_shape_bounding() which forgot to include
the drawin's border in its size calculation
(part of upstream git commit 56c57979056ec23cbd4982f3b81f6d80895fbe46)

Really ignore loops in transient_for
(upstream git commit 389a54e356f700a4f2a621e05dbdbafab4a3a03a)
@
text
@d1 1
a1 4
$OpenBSD: patch-lib_naughty_lua_in,v 1.9 2013/10/15 09:28:44 dcoppa Exp $

Unbreak build with LDoc>=1.4.0

a14 8
@@@@ -61,7 +61,6 @@@@ naughty.config.notify_callback = nil
 -- @@field low The preset for notifications with low urgency level
 -- @@field normal The default preset for every notification without a preset that will also be used for normal urgency level
 -- @@field critical The preset for notifications with a critical urgency level
--- @@class table
 naughty.config.presets = {
     normal = {},
     low = {
@


1.9
log
@Update to awesome-3.5.2, codename "The Fox".
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_naughty_lua_in,v 1.8 2013/10/07 14:28:52 dcoppa Exp $
d3 1
a3 1
Fixes for LDoc>=1.4.0
d5 4
a8 13
--- lib/naughty.lua.in.orig	Mon Apr  1 13:44:46 2013
+++ lib/naughty.lua.in	Mon Oct  7 14:54:32 2013
@@@@ -33,35 +33,39 @@@@ local naughty = {}
 
 --- Naughty configuration - a table containing common popup settings.
 naughty.config = {}
---- Space between popups and edge of the workarea. Default: 4
+--- Space between popups and edge of the workarea. 
+--   **Default:** `4`
 naughty.config.padding = 4
---- Spacing between popups. Default: 1
+--- Spacing between popups.
+--   **Default:** `1`
d13 1
a13 1
+--   **Default:** `{ "${LOCALBASE}/share/pixmaps/", }`
d16 1
a16 2
---   Default: { "png", "gif" }
+--   **Default:** `{ "png", "gif" }`
d18 1
a18 24
 --- Callback used to modify or reject notifications.
---   Default: nil
---   Example:
---      naughty.config.notify_callback = function(args)
---          args.text = 'prefix: ' .. args.text
---          return args
---      end
+--   **Default:** `nil`
+--  @@usage
+--naughty.config.notify_callback = function(args)
+--    args.text = 'prefix: ' .. args.text
+--    return args
+--end
 naughty.config.notify_callback = nil
 
 
 --- Notification Presets - a table containing presets for different purposes
 -- Preset is a table of any parameters available to notify(), overriding default
--- values (@@see defaults)
+-- values.
 -- You have to pass a reference of a preset in your notify() call to use the preset
 -- The presets "low", "normal" and "critical" are used for notifications over DBUS
+--
+-- @@table naughty.config.presets
a22 1
+-- @@see naughty.config.defaults
a25 131
@@@@ -76,6 +80,13 @@@@ naughty.config.presets = {
 
 --- Default values for the params to notify().
 -- These can optionally be overridden by specifying a preset
+-- @@param timeout `5`
+-- @@param text `""`
+-- @@param screen `1`
+-- @@param ontop `true`
+-- @@param margin `"5"`
+-- @@param border_width `"1"`
+-- @@param position `"top_right"`
 -- @@see naughty.config.presets
 -- @@see naughty.notify
 naughty.config.defaults = {
@@@@ -100,7 +111,6 @@@@ local urgency = {
 -- If the rules in the filter matches the associated preset will be applied
 -- The rules object can contain: urgency, category, appname
 -- The second element is the preset
-
 naughty.config.mapping = {
     {{urgency = urgency.low}, naughty.config.presets.low},
     {{urgency = urgency.normal}, naughty.config.presets.normal},
@@@@ -114,13 +124,13 @@@@ local counter = 1
 -- True if notifying is suspended
 local suspended = false
 
---- Index of notifications per screen and position. See config table for valid
--- 'position' values. Each element is a table consisting of:
--- @@field box Wibox object containing the popup
--- @@field height Popup height
--- @@field width Popup width
--- @@field die Function to be executed on timeout
--- @@field id Unique notification id based on a counter
+--- Index of notifications per screen and position. @@see naughty.config table
+-- for valid 'position' values. Each element is a table consisting of:
+--   * box Wibox object containing the popup
+--   * height Popup height
+--   * width Popup width
+--   * die Function to be executed on timeout
+--   * id Unique notification id based on a counter
 naughty.notifications = { suspended = { } }
 for s = 1, capi.screen.count() do
     naughty.notifications[s] = {
@@@@ -157,7 +167,7 @@@@ end
 
 -- Evaluate desired position of the notification by index - internal
 -- @@param idx Index of the notification
--- @@param position top_right | top_left | bottom_right | bottom_left
+-- @@param position `"top_right"` | `"top_left"` | `"bottom_right"` | `"bottom_left"`
 -- @@param height Popup height
 -- @@param width Popup width (optional)
 -- @@return Absolute position and index in { x = X, y = Y, idx = I } table
@@@@ -211,8 +221,11 @@@@ local function arrange(screen)
 end
 
 --- Destroy notification by notification object
--- @@param notification Notification object to be destroyed
+-- @@tparam notification notification Notification object to be destroyed
 -- @@return True if the popup was successfully destroyed, nil otherwise
+-- @@usage
+--mynotification = naughty.notify({ text = "An example" })
+--naughty.destroy(mynotification)
 function naughty.destroy(notification)
     if notification and notification.box.visible then
         if suspended then
@@@@ -250,36 +263,37 @@@@ local function getById(id)
     end
 end
 
---- Create notification. args is a dictionary of (optional) arguments.
--- @@param text Text of the notification. Default: ''
--- @@param title Title of the notification. Default: nil
--- @@param timeout Time in seconds after which popup expires.
---   Set 0 for no timeout. Default: 5
--- @@param hover_timeout Delay in seconds after which hovered popup disappears.
---   Default: nil
--- @@param screen Target screen for the notification. Default: 1
--- @@param position Corner of the workarea displaying the popups.
---   Values: "top_right" (default), "top_left", "bottom_left", "bottom_right".
--- @@param ontop Boolean forcing popups to display on top. Default: true
--- @@param height Popup height. Default: nil (auto)
--- @@param width Popup width. Default: nil (auto)
--- @@param font Notification font. Default: beautiful.font or awesome.font
--- @@param icon Path to icon. Default: nil
--- @@param icon_size Desired icon size in px. Default: nil
--- @@param fg Foreground color. Default: beautiful.fg_focus or '#ffffff'
--- @@param bg Background color. Default: beautiful.bg_focus or '#535d6c'
--- @@param border_width Border width. Default: 1
--- @@param border_color Border color.
---   Default: beautiful.border_focus or '#535d6c'
--- @@param run Function to run on left click. Default: nil
--- @@param preset Table with any of the above parameters. Note: Any parameters
---   specified directly in args will override ones defined in the preset.
--- @@param replaces_id Replace the notification with the given ID
--- @@param callback function that will be called with all arguments
---  the notification will only be displayed if the function returns true
---  note: this function is only relevant to notifications sent via dbus
+--- Create notification.
+-- @@param args a dictionary of (optional) arguments:
+-- @@string args.text Text of the notification.
+-- @@string args.title Title of the notification.
+-- @@int args.timeout Time in seconds after which popup expires. Set `0` for no
+-- timeout.
+-- @@int args.hover_timeout Delay in seconds after which hovered popup disappears.
+-- @@int args.screen Target screen for the notification.
+-- @@string args.position Corner of the workarea displaying the popups.
+-- **Values:** `"top_right"`, `"top_left"`, `"bottom_left"`, `"bottom_right"`.
+-- @@bool args.ontop Boolean forcing popups to display on top.
+-- @@int args.height Popup height.
+-- @@int args.width Popup width.
+-- @@string args.font Notification font.
+-- @@string args.icon Path to icon.
+-- @@int args.icon_size Desired icon size in px.
+-- @@string args.fg Foreground color.
+-- @@string args.bg Background color.
+-- @@int args.border_width Border width.
+-- @@string args.border_color Border color.
+-- @@tparam function args.run Function to run on left click.
+-- @@tparam table args.preset Table with any of the above parameters. Note: Any
+-- parameters specified directly in args will override ones defined in the
+-- preset.
+-- @@int args.replaces_id Replace the notification with the given ID
+-- @@tparam function args.callback function that will be called with all arguments the
+-- notification will only be displayed if the function returns true note: this
+-- function is only relevant to notifications sent via dbus
 -- @@usage naughty.notify({ title = "Achtung!", text = "You're idling", timeout = 0 })
 -- @@return The notification object
+-- @@see naughty.config.defaults
 function naughty.notify(args)
     if naughty.config.notify_callback then
         args = naughty.config.notify_callback(args)
@


1.8
log
@Bunch of bugfixes from upstream:

Fix possible deadlock during startup
awful.client.tiled: Ignore fullscreen clients
awful.screen.focus: Don't move mouse to (0, 0) first
naughty: Verify image parameters coming from dbus
wibox.layout.fixed: Fix fill space
Revert "client: add a limit to the loop"
client: Ignore transient_for causing loops
screen: Fix screen equality comparison
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_naughty_lua_in,v 1.7 2013/09/23 14:14:29 dcoppa Exp $
a4 8
commit 436862983604aee6840ba5034db5ad150dbd42f1
Author: Uli Schlachter <psychon@@znc.in>
Date:   Fri Oct 4 11:21:47 2013 +0200

naughty: Verify image parameters coming from dbus (FS#1162)

Signed-off-by: Uli Schlachter <psychon@@znc.in>

a190 15
@@@@ -555,6 +569,14 @@@@ if capi.dbus then
                 -- 6 -> channels
                 -- 7 -> data
                 local w, h, rowstride, _, _, channels, data = unpack(hints.icon_data)
+
+                -- Do the arguments look sane? (e.g. we have enough data)
+                local expected_length = rowstride * (h - 1) + w * channels
+                if w < 0 or h < 0 or rowstride < 0 or (channels ~= 3 and channels ~= 4) or
+                    string.len(data) < expected_length then
+                    w = 0
+                    h = 0
+                end
 
                 local format = cairo.Format[channels == 4 and 'ARGB32' or 'RGB24']
 
@


1.7
log
@
Unbreak building with LDoc-1.4.0

client.content: Use correct client size
https://awesome.naquadah.org/bugs/index.php?do=details&task_id=1150
(upstream git commit 11bef0795a450865b589c1c906bf97141436d314)
@
text
@d1 12
a12 1
$OpenBSD: patch-lib_naughty_lua_in,v 1.6 2013/05/22 15:05:50 dcoppa Exp $
d14 1
a14 1
+++ lib/naughty.lua.in	Mon Sep 23 15:59:56 2013
d199 15
@


1.6
log
@Major update to awesome-3.5.1

OK jasper@@
@
text
@d1 14
a14 5
$OpenBSD: patch-lib_naughty_lua_in,v 1.5 2012/12/31 17:41:44 dcoppa Exp $
--- lib/naughty.lua.in.orig	Mon May 20 13:49:52 2013
+++ lib/naughty.lua.in	Mon May 20 13:50:20 2013
@@@@ -38,8 +38,8 @@@@ naughty.config.padding = 4
 --- Spacing between popups. Default: 1
d19 1
a19 1
+--   Default: { "${LOCALBASE}/share/pixmaps/", }
d22 2
a23 1
 --   Default: { "png", "gif" }
d25 163
@


1.5
log
@Update awesome to v3.4.14 (White Christmas)
@
text
@d1 7
a7 7
$OpenBSD: patch-lib_naughty_lua_in,v 1.4 2012/11/22 08:53:32 dcoppa Exp $
--- lib/naughty.lua.in.orig	Mon Dec 24 15:36:05 2012
+++ lib/naughty.lua.in	Mon Dec 31 17:05:35 2012
@@@@ -30,7 +30,7 @@@@ module("naughty")
 -- @@field padding Space between popups and edge of the workarea. Default: 4
 -- @@field spacing Spacing between popups. Default: 1
 -- @@field icon_dirs List of directories that will be checked by getIcon()
d9 1
d11 2
a12 1
 -- @@field icon_formats List of formats that will be checked by getIcon()
d14 1
a14 10
 -- @@field default_preset Preset to be used by default.
@@@@ -47,7 +47,7 @@@@ module("naughty")
 config = {}
 config.padding = 4
 config.spacing = 1
-config.icon_dirs = { "/usr/share/pixmaps/", }
+config.icon_dirs = { "${LOCALBASE}/share/pixmaps/", }
 config.icon_formats = { "png", "gif" }
 config.notify_callback = nil
 
@


1.4
log
@naughty: Correctly handle rowstride on icons
(upstream git commit ec714276ec9516afa690a207013866527fb37beb)
@
text
@d1 12
a12 7
$OpenBSD: patch-lib_naughty_lua_in,v 1.3 2011/11/30 11:50:58 dcoppa Exp $

naughty: Correctly handle rowstride on icons
(upstream git commit ec714276ec9516afa690a207013866527fb37beb)

--- lib/naughty.lua.in.orig	Sun Jul 15 12:12:21 2012
+++ lib/naughty.lua.in	Thu Nov 22 09:30:47 2012
a21 37
@@@@ -501,24 +501,23 @@@@ if capi.dbus then
                 -- icon_data is an array:
                 -- 1 -> width, 2 -> height, 3 -> rowstride, 4 -> has alpha
                 -- 5 -> bits per sample, 6 -> channels, 7 -> data
+                local width, height, rowstride = hints.icon_data[1], hints.icon_data[2], hints.icon_data[3]
 
                 local imgdata = ""
-                -- If has alpha (ARGB32)
-                if hints.icon_data[6] == 4 then
-                    for i = 1, #hints.icon_data[7], 4 do
+                local bpp = hints.icon_data[6]
+                local offset = 0
+                for y = 1, height do
+                    for i = 1 + offset, width * bpp + offset, bpp do
                         imgdata = imgdata .. hints.icon_data[7]:sub(i, i + 2):reverse()
-                        imgdata = imgdata .. hints.icon_data[7]:sub(i + 3, i + 3)
+                        if bpp == 4 then
+                            imgdata = imgdata .. hints.icon_data[7]:sub(i + 3, i + 3)
+                        else
+                            imgdata = imgdata .. string.format("%c", 255)
+                        end
                     end
-                -- If has not alpha (RGB24)
-                elseif hints.icon_data[6] == 3 then
-                    for i = 1, #hints.icon_data[7], 3 do
-                        imgdata = imgdata .. hints.icon_data[7]:sub(i , i + 2):reverse()
-                        imgdata = imgdata .. string.format("%c", 255) -- alpha is 255
-                    end
+                    offset = offset + rowstride
                 end
-                if imgdata then
-                    args.icon = capi.image.argb32(hints.icon_data[1], hints.icon_data[2], imgdata)
-                end
+                args.icon = capi.image.argb32(width, height, imgdata)
             end
             if replaces_id and replaces_id ~= "" and replaces_id ~= 0 then
                 args.replaces_id = replaces_id
@


1.3
log
@Update to awesome v3.4.11 (Pickapart)

ChangeLog at http://awesome.naquadah.org/changelogs/short/v3.4.11
@
text
@d1 7
a7 3
$OpenBSD$
--- lib/naughty.lua.in.orig	Wed Nov 30 11:39:37 2011
+++ lib/naughty.lua.in	Wed Nov 30 11:41:42 2011
d17 37
@


1.2
log
@Update to awesome-3.4.10 (codename "Exploder")
@
text
@d1 12
a12 12
$OpenBSD: patch-lib_naughty_lua_in,v 1.1 2011/03/13 18:07:23 dcoppa Exp $
--- lib/naughty.lua.in.orig	Thu Mar 10 17:13:27 2011
+++ lib/naughty.lua.in	Thu Mar 10 17:14:36 2011
@@@@ -462,7 +462,7 @@@@ end
 -- Notify
 if capi.dbus then
     capi.dbus.add_signal("org.freedesktop.Notifications", function (data, appname, replaces_id, icon, title, text, actions, hints, expire)
-    args = { preset = { } }
+    args = { preset = config.default_preset }
     if data.member == "Notify" then
         if text ~= "" then
             args.text = text
@


1.1
log
@From upstream git:
- Various bugfixes to Lua code.
- Fix a bug causing building with cmake 2.8.4 to fail (remove double
  slashes from icon path names).
@
text
@d1 1
a1 1
$OpenBSD$
@

