head	1.7;
access;
symbols
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2017.02.28.13.27.15;	author dcoppa;	state Exp;
branches;
next	1.6;
commitid	LK24Dq2Oc5IWnvdk;

1.6
date	2016.03.07.11.33.59;	author dcoppa;	state dead;
branches;
next	1.5;
commitid	7zUqqCR47GCkIAqa;

1.5
date	2016.03.01.11.42.24;	author dcoppa;	state Exp;
branches;
next	1.4;
commitid	QAoVD7PgkclyraIQ;

1.4
date	2016.01.18.09.50.09;	author dcoppa;	state dead;
branches;
next	1.3;
commitid	lrRI65aKSWqF9Rnn;

1.3
date	2015.11.09.14.36.12;	author dcoppa;	state Exp;
branches;
next	1.2;
commitid	LYfZ9mVasxXSCMq6;

1.2
date	2013.10.15.09.28.45;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2013.06.10.12.28.43;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.7
log
@
Update to awesome v4.0 (Harder, Better, Faster, Stronger)

To migrate a custom rc.lua from version 3.5.x to version 4.0, see
https://awesomewm.org/apidoc/documentation/17-porting-tips.md.html#v4
@
text
@$OpenBSD$
--- luaa.c.orig	Sun Dec 25 22:17:14 2016
+++ luaa.c	Tue Feb 28 13:21:20 2017
@@@@ -576,6 +576,9 @@@@ setup_awesome_signals(lua_State *L)
 #ifdef SIGUNUSED
     SETUP_SIGNAL(SIGUNUSED);
 #endif
+#ifdef SIGPOLL
+    SETUP_SIGNAL(SIGPOLL);
+#endif
 
     /* POSIX.1-1990, according to man 7 signal */
     SETUP_SIGNAL(SIGHUP);
@@@@ -600,7 +603,6 @@@@ setup_awesome_signals(lua_State *L)
 
     /* POSIX.1-2001, according to man 7 signal */
     SETUP_SIGNAL(SIGBUS);
-    SETUP_SIGNAL(SIGPOLL);
     SETUP_SIGNAL(SIGPROF);
     SETUP_SIGNAL(SIGSYS);
     SETUP_SIGNAL(SIGTRAP);
@


1.6
log
@
Update to awesome-3.5.9
@
text
@d1 10
a10 83
$OpenBSD: patch-luaa_c,v 1.5 2016/03/01 11:42:24 dcoppa Exp $

commit 333cfaf0a580c78ad92c7215dc46517b4c349e62
Author: Uli Schlachter <psychon@@znc.in>
Date:   Wed Feb 17 19:03:48 2016 +0100

Balance the stack in luaA_loadrc()

In various conditions, luaA_loadrc() left luaA_dofunction_on_error and an error
message on the Lua stack. Also, it used LUA_MULTRET without looking at the
return values. Fix all of this and reorder the code a bit to make it easier to
follow.

Signed-off-by: Uli Schlachter <psychon@@znc.in>

--- luaa.c.orig	Sat Jan 30 14:55:18 2016
+++ luaa.c	Tue Mar  1 11:24:18 2016
@@@@ -498,39 +498,40 @@@@ luaA_startup_error(const char *err)
 static bool
 luaA_loadrc(const char *confpath, bool run)
 {
-    if(!luaL_loadfile(globalconf.L, confpath))
+    if(luaL_loadfile(globalconf.L, confpath))
     {
-        if(run)
-        {
-            /* Set the conffile right now so it can be used inside the
-             * configuration file. */
-            conffile = a_strdup(confpath);
-            /* Move error handling function before function */
-            lua_pushcfunction(globalconf.L, luaA_dofunction_on_error);
-            lua_insert(globalconf.L, -2);
-            if(lua_pcall(globalconf.L, 0, LUA_MULTRET, -2))
-            {
-                const char *err = lua_tostring(globalconf.L, -1);
-                luaA_startup_error(err);
-                fprintf(stderr, "%s\n", err);
-                /* An error happened, so reset this. */
-                conffile = NULL;
-            }
-            else
-                return true;
-        }
-        else
-        {
-            lua_pop(globalconf.L, 1);
-            return true;
-        }
-    }
-    else
-    {
         const char *err = lua_tostring(globalconf.L, -1);
         luaA_startup_error(err);
         fprintf(stderr, "%s\n", err);
+        return false;
     }
+
+    if(!run)
+    {
+        lua_pop(globalconf.L, 1);
+        return true;
+    }
+
+    /* Set the conffile right now so it can be used inside the
+     * configuration file. */
+    conffile = a_strdup(confpath);
+    /* Move error handling function before function */
+    lua_pushcfunction(globalconf.L, luaA_dofunction_on_error);
+    lua_insert(globalconf.L, -2);
+    if(!lua_pcall(globalconf.L, 0, 0, -2))
+    {
+        /* Pop luaA_dofunction_on_error */
+        lua_pop(globalconf.L, 1);
+        return true;
+    }
+
+    const char *err = lua_tostring(globalconf.L, -1);
+    luaA_startup_error(err);
+    fprintf(stderr, "%s\n", err);
+    /* An error happened, so reset this. */
+    conffile = NULL;
+    /* Pop luaA_dofunction_on_error() and the error message */
+    lua_pop(globalconf.L, 2);
d12 10
a21 2
     return false;
 }
@


1.5
log
@
Merge several fixes from the stable '3.5' branch
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@
Update to awesome-3.5.7
@
text
@d1 1
a1 1
$OpenBSD: patch-luaa_c,v 1.3 2015/11/09 14:36:12 dcoppa Exp $
d3 1
a3 1
commit 821e3e7e2cf1f301f83b790d66452913f92324ef
d5 1
a5 1
Date:   Sat Oct 10 22:25:56 2015 +0200
d7 6
a12 1
Make awesome.quit() during startup work
d16 5
a20 5
--- luaa.c.orig	Sat Jan 10 20:36:35 2015
+++ luaa.c	Mon Nov  9 13:54:50 2015
@@@@ -107,6 +107,8 @@@@ composite_manager_running(void)
 static int
 luaA_quit(lua_State *L)
d22 64
a85 4
+    if (globalconf.loop == NULL)
+        globalconf.loop = g_main_loop_new(NULL, FALSE);
     g_main_loop_quit(globalconf.loop);
     return 0;
@


1.3
log
@
Merge fixes from upstream (from the stable '3.5' branch)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to awesome-3.5.2, codename "The Fox".
@
text
@d1 1
a1 1
$OpenBSD: patch-luaa_c,v 1.1 2013/06/10 12:28:43 dcoppa Exp $
d3 1
a3 1
commit 0c62831eea5e651577928ef8b09c947565eaed7d
d5 1
a5 1
Date:   Sat Jun 8 13:21:14 2013 +0200
d7 1
a7 10
lua: Print traceback on startup errors

We do some special magic so that we can have tracebacks on errors
messages. However, the code for parsing the rc.lua called it without
this magic and thus errors didn't have tracebacks.

This is bad, because if something goes wrong in e.g. wibox.widget.textbox,
you don't really have any clue where this error is coming from.

Fix this by adding our "print traceback on error"-magic here, too.
d11 11
a21 14
--- luaa.c.orig	Mon Apr  1 13:44:46 2013
+++ luaa.c	Mon Jun 10 14:18:32 2013
@@@@ -666,7 +666,10 @@@@ luaA_loadrc(const char *confpath, bool run)
             /* Set the conffile right now so it can be used inside the
              * configuration file. */
             conffile = a_strdup(confpath);
-            if(lua_pcall(globalconf.L, 0, LUA_MULTRET, 0))
+            /* Move error handling function before function */
+            lua_pushcfunction(globalconf.L, luaA_dofunction_on_error);
+            lua_insert(globalconf.L, -2);
+            if(lua_pcall(globalconf.L, 0, LUA_MULTRET, -2))
             {
                 const char *err = lua_tostring(globalconf.L, -1);
                 luaA_startup_error(err);
@


1.1
log
@lua: Print traceback on startup errors
(upstream git commit 0c62831eea5e651577928ef8b09c947565eaed7d)
@
text
@d1 1
a1 1
$OpenBSD$
@

