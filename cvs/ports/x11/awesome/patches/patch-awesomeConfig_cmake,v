head	1.22;
access;
symbols
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.13.0.2
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.12.0.2
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.8.0.2
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2;
locks; strict;
comment	@# @;


1.22
date	2017.03.22.17.35.26;	author dcoppa;	state Exp;
branches;
next	1.21;
commitid	I0UoCo4cbcfz4ete;

1.21
date	2017.03.21.19.48.01;	author dcoppa;	state Exp;
branches;
next	1.20;
commitid	cDxCvtATslZZ0ZDt;

1.20
date	2017.02.28.13.27.15;	author dcoppa;	state Exp;
branches;
next	1.19;
commitid	LK24Dq2Oc5IWnvdk;

1.19
date	2016.10.17.19.33.38;	author jca;	state Exp;
branches;
next	1.18;
commitid	W7zCESIhFDqeQRHq;

1.18
date	2016.08.22.13.45.09;	author dcoppa;	state Exp;
branches;
next	1.17;
commitid	PXJZuiUW95KBwUHh;

1.17
date	2016.01.18.09.50.09;	author dcoppa;	state Exp;
branches;
next	1.16;
commitid	lrRI65aKSWqF9Rnn;

1.16
date	2015.09.07.10.30.01;	author dcoppa;	state Exp;
branches;
next	1.15;
commitid	WUqbLhpCG8h9lOEo;

1.15
date	2014.09.11.10.27.17;	author dcoppa;	state Exp;
branches;
next	1.14;
commitid	e99JHPq0fBLbKEN8;

1.14
date	2014.08.18.10.34.02;	author dcoppa;	state Exp;
branches;
next	1.13;
commitid	n45Bs8ADsrhGbZ0H;

1.13
date	2014.04.15.10.32.36;	author dcoppa;	state Exp;
branches;
next	1.12;

1.12
date	2013.10.15.09.28.40;	author dcoppa;	state Exp;
branches;
next	1.11;

1.11
date	2013.05.22.15.05.50;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2012.12.31.19.21.45;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2012.12.31.17.41.44;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2012.07.17.11.32.00;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2012.07.12.15.36.20;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2012.07.10.15.21.01;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.30.11.50.58;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2011.01.17.13.23.06;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2010.09.14.08.51.24;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.28.21.27.28;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2010.06.02.15.07.50;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.22
log
@
Unbreak build (doh!)
@
text
@$OpenBSD: patch-awesomeConfig_cmake,v 1.21 2017/03/21 19:48:01 dcoppa Exp $
--- awesomeConfig.cmake.orig	Sat Mar 18 10:49:46 2017
+++ awesomeConfig.cmake	Wed Mar 22 18:25:36 2017
@@@@ -269,11 +269,7 @@@@ endif()
 # {{{ Install path and configuration variables
 #If a sysconfdir is specified, use it instead
 #of the default configuration dir.
-if(DEFINED SYSCONFDIR)
-    set(SYSCONFDIR ${SYSCONFDIR} CACHE PATH "config directory")
-else()
-    set(SYSCONFDIR ${CMAKE_INSTALL_PREFIX}/etc CACHE PATH "config directory")
-endif()
+set(SYSCONFDIR ${SYSCONFDIR} CACHE PATH "config directory")
 
 #If an XDG Config Dir is specificed, use it instead
 #of the default XDG configuration dir.
@@@@ -308,7 +304,7 @@@@ endif()
 if(DEFINED AWESOME_MAN_PATH)
    set(AWESOME_MAN_PATH ${AWESOME_MAN_PATH} CACHE PATH "awesome manpage directory")
 else()
-   set(AWESOME_MAN_PATH ${CMAKE_INSTALL_PREFIX}/share/man CACHE PATH "awesome manpage directory")
+   set(AWESOME_MAN_PATH ${CMAKE_INSTALL_PREFIX}/man CACHE PATH "awesome manpage directory")
 endif()
 
 # Hide to avoid confusion
@@@@ -394,15 +390,14 @@@@ file(MAKE_DIRECTORY ${BUILD_DIR}/script_files/)
 
 add_custom_command(
         OUTPUT ${BUILD_DIR}/docs/06-appearance.md
-        COMMAND lua ${SOURCE_DIR}/docs/06-appearance.md.lua
+        COMMAND ${MODLUA_BIN} ${SOURCE_DIR}/docs/06-appearance.md.lua
         ${BUILD_DIR}/docs/06-appearance.md
-        DEPENDS lgi-check
 )
 
 add_custom_command(
         OUTPUT ${BUILD_DIR}/awesomerc.lua ${BUILD_DIR}/docs/05-awesomerc.md
             ${BUILD_DIR}/script_files/rc.lua
-        COMMAND lua ${SOURCE_DIR}/docs/05-awesomerc.md.lua
+        COMMAND ${MODLUA_BIN} ${SOURCE_DIR}/docs/05-awesomerc.md.lua
         ${BUILD_DIR}/docs/05-awesomerc.md ${SOURCE_DIR}/awesomerc.lua
         ${BUILD_DIR}/awesomerc.lua
         ${BUILD_DIR}/script_files/rc.lua
@@@@ -410,7 +405,7 @@@@ add_custom_command(
 
 add_custom_command(
         OUTPUT ${BUILD_DIR}/script_files/theme.lua
-        COMMAND lua ${SOURCE_DIR}/docs/sample_theme.lua ${BUILD_DIR}/script_files/
+        COMMAND ${MODLUA_BIN} ${SOURCE_DIR}/docs/sample_theme.lua ${BUILD_DIR}/script_files/
 )
 
 # Create a target for the auto-generated awesomerc.lua and other files
@


1.21
log
@
Update to awesome-4.1
@
text
@d1 1
a1 1
$OpenBSD: patch-awesomeConfig_cmake,v 1.20 2017/02/28 13:27:15 dcoppa Exp $
d3 1
a3 1
+++ awesomeConfig.cmake	Tue Mar 21 18:11:59 2017
d26 1
a26 1
@@@@ -394,7 +390,7 @@@@ file(MAKE_DIRECTORY ${BUILD_DIR}/script_files/)
d33 1
a33 1
         DEPENDS lgi-check
d35 1
a35 1
@@@@ -402,7 +398,7 @@@@ add_custom_command(
d44 1
a44 1
@@@@ -410,7 +406,7 @@@@ add_custom_command(
@


1.20
log
@
Update to awesome v4.0 (Harder, Better, Faster, Stronger)

To migrate a custom rc.lua from version 3.5.x to version 4.0, see
https://awesomewm.org/apidoc/documentation/17-porting-tips.md.html#v4
@
text
@d1 4
a4 4
$OpenBSD: patch-awesomeConfig_cmake,v 1.19 2016/10/17 19:33:38 jca Exp $
--- awesomeConfig.cmake.orig	Sun Dec 25 22:17:14 2016
+++ awesomeConfig.cmake	Tue Feb 28 13:56:37 2017
@@@@ -261,11 +261,7 @@@@ endif()
d17 1
a17 1
@@@@ -300,7 +296,7 @@@@ endif()
d26 2
a27 2
@@@@ -357,13 +353,13 @@@@ endforeach()
 # {{{ Generate some aggregated documentation from lua script
d33 1
d35 1
a35 1
 
d38 1
d43 7
d51 2
@


1.19
log
@Stop packaging lualdoc as a library that supports lua FLAVORS.

It is a standalone tool so no need to have several versions of it.
Make it depend on lua52, since this is what x11/awesome uses.  Adapt
x11/awesome while here.

ok dcoppa@@ (maintainer)
@
text
@d1 17
a17 69
$OpenBSD: patch-awesomeConfig_cmake,v 1.18 2016/08/22 13:45:09 dcoppa Exp $
--- awesomeConfig.cmake.orig	Sun Mar  6 15:05:54 2016
+++ awesomeConfig.cmake	Mon Oct 17 19:27:40 2016
@@@@ -16,12 +16,11 @@@@ option(COMPRESS_MANPAGES "compress manpages" ON)
 option(GENERATE_DOC "generate API documentation" ON)
 
 # {{{ CFLAGS
-add_definitions(-O1 -std=gnu99 -ggdb3 -rdynamic -fno-strict-aliasing -Wall -Wextra
-    -Wchar-subscripts -Wundef -Wshadow -Wcast-align -Wwrite-strings
-    -Wsign-compare -Wunused -Wno-unused-parameter -Wuninitialized -Winit-self
-    -Wpointer-arith -Wformat-nonliteral
-    -Wno-format-zero-length -Wmissing-format-attribute -Wmissing-prototypes
-    -Wstrict-prototypes)
+add_definitions(-std=gnu99 -fgnu89-inline -fno-strict-aliasing
+    -Wchar-subscripts -Wcast-align -Wwrite-strings -Wsign-compare
+    -Wunused -Wno-unused-parameter -Wuninitialized -Wpointer-arith
+    -Wno-format-zero-length -Wmissing-format-attribute
+    -Wmissing-prototypes -Wstrict-prototypes)
 # }}}
 
 # {{{ Endianness
@@@@ -43,11 +42,7 @@@@ macro(a_find_program var prg req)
     endif()
 endmacro()
 
-a_find_program(CAT_EXECUTABLE cat TRUE)
-a_find_program(LN_EXECUTABLE ln TRUE)
-a_find_program(GREP_EXECUTABLE grep TRUE)
 a_find_program(GIT_EXECUTABLE git FALSE)
-a_find_program(HOSTNAME_EXECUTABLE hostname FALSE)
 # programs needed for man pages
 a_find_program(ASCIIDOC_EXECUTABLE asciidoc FALSE)
 a_find_program(XMLTO_EXECUTABLE xmlto FALSE)
@@@@ -64,8 +59,8 @@@@ a_find_program(CONVERT_EXECUTABLE convert TRUE)
 include(FindDoxygen)
 # pkg-config
 include(FindPkgConfig)
-# lua 5.1
-include(FindLua51)
+# lua
+include(FindLua)
 # }}}
 
 # {{{ Check if documentation can be build
@@@@ -113,14 +108,6 @@@@ elseif( EXISTS ${SOURCE_DIR}/.version_stamp )
 endif()
 # }}}
 
-# {{{ Get hostname
-execute_process(
-    COMMAND ${HOSTNAME_EXECUTABLE}
-    WORKING_DIRECTORY ${SOURCE_DIR}
-    OUTPUT_VARIABLE BUILDHOSTNAME
-    OUTPUT_STRIP_TRAILING_WHITESPACE)
-# }}}
-
 # {{{ Required libraries
 #
 # this sets up:
@@@@ -189,7 +176,7 @@@@ else()
 endif()
 
 # Error check
-if(NOT LUA51_FOUND AND NOT LUA50_FOUND) # This is a workaround to a cmake bug
+if(NOT LUA_FOUND)
     message(FATAL_ERROR "lua library not found")
 endif()
 
@@@@ -264,16 +251,13 @@@@ endif()
d26 16
a41 9
 mark_as_advanced(CMAKE_INSTALL_CMAKE_INSTALL_PREFIX)
 
 set(AWESOME_VERSION          ${VERSION})
-set(AWESOME_COMPILE_MACHINE  ${CMAKE_SYSTEM_PROCESSOR})
-set(AWESOME_COMPILE_HOSTNAME ${BUILDHOSTNAME})
-set(AWESOME_COMPILE_BY       $ENV{USER})
 set(AWESOME_RELEASE          ${CODENAME})
 set(AWESOME_SYSCONFDIR       ${XDG_CONFIG_DIR}/${PROJECT_AWE_NAME})
 set(AWESOME_LUA_LIB_PATH     ${AWESOME_DATA_PATH}/lib)
@


1.18
log
@
Remove useless informations from 'awesome -v'
(upstream git commit a93dc75cd677d3eb7dc06fb9e055f6422d444f44)
@
text
@d1 1
a1 1
$OpenBSD: patch-awesomeConfig_cmake,v 1.17 2016/01/18 09:50:09 dcoppa Exp $
d3 1
a3 1
+++ awesomeConfig.cmake	Mon Aug 22 15:33:26 2016
d22 1
a22 1
@@@@ -43,29 +42,21 @@@@ macro(a_find_program var prg req)
d34 1
a34 11
 a_find_program(GZIP_EXECUTABLE gzip FALSE)
 # lua documentation
-a_find_program(LUA_EXECUTABLE lua FALSE)
-a_find_program(LDOC_EXECUTABLE ldoc FALSE)
-if(NOT LDOC_EXECUTABLE)
-    a_find_program(LDOC_EXECUTABLE ldoc.lua FALSE)
-endif()
+a_find_program(LDOC_EXECUTABLE ldoc${MODLUA_DEP_VERSION} FALSE)
 # theme graphics
 a_find_program(CONVERT_EXECUTABLE convert TRUE)
 # doxygen
d45 1
a45 1
@@@@ -113,14 +104,6 @@@@ elseif( EXISTS ${SOURCE_DIR}/.version_stamp )
d60 1
a60 1
@@@@ -189,7 +172,7 @@@@ else()
d69 1
a69 1
@@@@ -264,16 +247,13 @@@@ endif()
@


1.17
log
@
Update to awesome-3.5.7
@
text
@d1 3
a3 3
$OpenBSD: patch-awesomeConfig_cmake,v 1.15 2014/09/11 10:27:17 dcoppa Exp $
--- awesomeConfig.cmake.orig	Fri Jan 15 16:51:19 2016
+++ awesomeConfig.cmake	Mon Jan 18 09:47:55 2016
d22 1
a22 1
@@@@ -43,9 +42,6 @@@@ macro(a_find_program var prg req)
d30 1
a30 1
 a_find_program(HOSTNAME_EXECUTABLE hostname FALSE)
d32 1
a32 1
@@@@ -53,19 +49,15 @@@@ a_find_program(ASCIIDOC_EXECUTABLE asciidoc FALSE)
d55 16
a70 1
@@@@ -189,7 +181,7 @@@@ else()
d79 1
a79 1
@@@@ -264,7 +256,7 @@@@ endif()
d88 9
@


1.16
log
@
Merge several fixes from the stable '3.5' branch
@
text
@d2 2
a3 2
--- awesomeConfig.cmake.orig	Sat Jan 10 20:36:35 2015
+++ awesomeConfig.cmake	Mon Sep  7 11:20:25 2015
d64 1
a64 1
@@@@ -257,7 +249,7 @@@@ endif()
a72 9
@@@@ -290,7 +282,7 @@@@ macro(a_configure_file file)
     message(STATUS "Configuring ${outfile}")
     configure_file(${SOURCE_DIR}/${file}
                    ${BUILD_DIR}/${outfile}
-                   ESCAPE_QUOTE
+                   ESCAPE_QUOTES
                    @@ONLY)
 endmacro()
 
@


1.15
log
@
Unbreak build with cmake-3.0.1
@
text
@d1 3
a3 3
$OpenBSD: patch-awesomeConfig_cmake,v 1.14 2014/08/18 10:34:02 dcoppa Exp $
--- awesomeConfig.cmake.orig	Fri Apr 11 11:07:10 2014
+++ awesomeConfig.cmake	Wed Sep  3 10:53:42 2014
d73 9
@


1.14
log
@
Fixes from upstream:

Fix check against clients in taglist
(upstream git commit aedcd90d4da41132303636ba15170b6a43cc231f)

wibox.widget.systray: Special case the empty systray
(upstream git commit 3dd0c442a031f174000950981154139879933ab0)

systray: Small consistency fixes
(upstream git commit a250dcdbe12a3afa6ffa9fbb26f8c48c7e9cc049)
@
text
@d1 1
a1 1
$OpenBSD: patch-awesomeConfig_cmake,v 1.13 2014/04/15 10:32:36 dcoppa Exp $
d3 1
a3 1
+++ awesomeConfig.cmake	Mon Aug 18 12:06:33 2014
d50 2
a51 2
+# lua libraries
+include(FindLuaLibs)
d60 1
a60 1
+if(NOT LUALIBS_FOUND)
@


1.13
log
@
Cleanup following libxcb/xcb-util updates
@
text
@d1 3
a3 3
$OpenBSD: patch-awesomeConfig_cmake,v 1.12 2013/10/15 09:28:40 dcoppa Exp $
--- awesomeConfig.cmake.orig	Sat Oct 12 18:48:49 2013
+++ awesomeConfig.cmake	Tue Apr 15 11:42:58 2014
d22 11
a32 1
@@@@ -53,19 +52,15 @@@@ a_find_program(ASCIIDOC_EXECUTABLE asciidoc FALSE)
d55 1
a55 1
@@@@ -189,7 +184,7 @@@@ else()
d64 1
a64 1
@@@@ -257,7 +252,7 @@@@ endif()
@


1.12
log
@Update to awesome-3.5.2, codename "The Fox".
@
text
@d1 1
a1 1
$OpenBSD: patch-awesomeConfig_cmake,v 1.11 2013/05/22 15:05:50 dcoppa Exp $
d3 1
a3 1
+++ awesomeConfig.cmake	Tue Oct 15 10:23:15 2013
d45 1
a45 21
@@@@ -136,14 +131,16 @@@@ pkg_check_modules(AWESOME_REQUIRED REQUIRED
     gdk-pixbuf-2.0
     cairo
     x11
-    xcb-cursor
+    x11-xcb
+    xcursor
     xcb-randr
     xcb-xtest
     xcb-xinerama
     xcb-shape
-    xcb-util>=0.3.8
+    xcb-aux>=0.3.6
+    xcb-atom>=0.3.6
     xcb-keysyms>=0.3.4
-    xcb-icccm>=0.3.8
+    xcb-icccm>=0.3.6
     cairo-xcb
     libstartup-notification-1.0>=0.10
     xproto>=7.0.15
@@@@ -189,7 +186,7 @@@@ else()
d54 1
a54 1
@@@@ -257,7 +254,7 @@@@ endif()
@


1.11
log
@Major update to awesome-3.5.1

OK jasper@@
@
text
@d1 3
a3 3
$OpenBSD: patch-awesomeConfig_cmake,v 1.10 2012/12/31 19:21:45 dcoppa Exp $
--- awesomeConfig.cmake.orig	Mon May 20 13:19:31 2013
+++ awesomeConfig.cmake	Mon May 20 13:27:36 2013
d22 1
a22 1
@@@@ -53,16 +52,15 @@@@ a_find_program(ASCIIDOC_EXECUTABLE asciidoc FALSE)
d27 4
a30 1
-a_find_program(LDOC_EXECUTABLE ldoc.lua FALSE)
d45 8
a52 1
@@@@ -139,9 +137,10 @@@@ pkg_check_modules(AWESOME_REQUIRED REQUIRED
a61 1
     xcb-image>=0.3.0
d64 2
a65 1
@@@@ -188,7 +187,7 @@@@ else()
d74 1
a74 1
@@@@ -256,7 +255,7 @@@@ endif()
@


1.10
log
@Simplify ; no bump needed
@
text
@d1 3
a3 3
$OpenBSD: patch-awesomeConfig_cmake,v 1.9 2012/12/31 17:41:44 dcoppa Exp $
--- awesomeConfig.cmake.orig	Mon Dec 24 15:36:05 2012
+++ awesomeConfig.cmake	Mon Dec 31 19:57:06 2012
d5 1
a5 1
 option(GENERATE_LUADOC "generate luadoc" ON)
d8 1
a8 1
-add_definitions(-std=gnu99 -ggdb3 -fno-strict-aliasing -Wall -Wextra
d11 1
a11 1
-    -Wpointer-arith -Wredundant-decls -Wformat-nonliteral
d22 1
a22 1
@@@@ -54,7 +53,6 @@@@ a_find_program(ASCIIDOC_EXECUTABLE asciidoc FALSE)
d27 2
a28 1
 a_find_program(LUADOC_EXECUTABLE luadoc FALSE)
d31 1
a31 1
@@@@ -62,8 +60,8 @@@@ a_find_program(CONVERT_EXECUTABLE convert TRUE)
d42 1
a42 1
@@@@ -141,9 +139,10 @@@@ pkg_check_modules(AWESOME_REQUIRED REQUIRED
d55 1
a55 1
@@@@ -194,7 +193,7 @@@@ else()
d64 1
a64 1
@@@@ -263,7 +262,7 @@@@ endif()
@


1.9
log
@Update awesome to v3.4.14 (White Christmas)
@
text
@d1 1
a1 1
$OpenBSD: patch-awesomeConfig_cmake,v 1.8 2012/07/17 11:32:00 dcoppa Exp $
d3 1
a3 1
+++ awesomeConfig.cmake	Mon Dec 31 17:18:32 2012
d63 1
a63 9
@@@@ -231,6 +230,7 @@@@ endif()
 # {{{ Install path and configuration variables
 #If a sysconfdir is specified, use it instead
 #of the default configuration dir.
+set(SYSCONFDIR $ENV{SYSCONFDIR})
 if(DEFINED SYSCONFDIR)
     set(SYSCONFDIR ${SYSCONFDIR} CACHE PATH "config directory")
 else()
@@@@ -263,7 +263,7 @@@@ endif()
@


1.8
log
@Bugfix update to awesome v3.4.13 (Octopus)
@
text
@d1 4
a4 4
$OpenBSD: patch-awesomeConfig_cmake,v 1.7 2012/07/12 15:36:20 dcoppa Exp $
--- awesomeConfig.cmake.orig	Sun Jul 15 12:12:21 2012
+++ awesomeConfig.cmake	Tue Jul 17 13:16:29 2012
@@@@ -16,11 +16,11 @@@@ option(COMPRESS_MANPAGES "compress manpages" ON)
d13 1
d15 4
a18 5
+    -Wchar-subscripts -Wcast-align -Wwrite-strings
+    -Wsign-compare -Wunused -Wno-unused-parameter -Wuninitialized
+    -Wpointer-arith -Wformat-nonliteral -Wno-format-zero-length
+    -Wmissing-format-attribute -Wmissing-prototypes
     -Wstrict-prototypes)
d21 2
a22 1
@@@@ -54,7 +54,6 @@@@ a_find_program(ASCIIDOC_EXECUTABLE asciidoc FALSE)
d30 1
a30 1
@@@@ -62,8 +61,8 @@@@ a_find_program(CONVERT_EXECUTABLE convert TRUE)
d35 1
a35 1
-include(FindLua51) #Due to a cmake bug, you will see Lua50 on screen
d41 1
a41 1
@@@@ -139,9 +138,10 @@@@ pkg_check_modules(AWESOME_REQUIRED REQUIRED
d54 1
a54 1
@@@@ -192,7 +192,7 @@@@ else()
d63 5
a67 1
@@@@ -232,7 +232,7 @@@@ endif()
d71 1
a71 6
-    set(SYSCONFDIR ${CMAKE_INSTALL_PREFIX}/etc CACHE PATH "config directory")
+    set(SYSCONFDIR /etc CACHE PATH "config directory")
 endif()
 
 #If an XDG Config Dir is specificed, use it instead
@@@@ -261,7 +261,7 @@@@ endif()
@


1.7
log
@Finish the work with lua and cmake: it's nicer and more compact now.
@
text
@d1 3
a3 3
$OpenBSD: patch-awesomeConfig_cmake,v 1.6 2012/07/10 15:21:01 jasper Exp $
--- awesomeConfig.cmake.orig	Mon Jun 11 13:57:35 2012
+++ awesomeConfig.cmake	Thu Jul 12 16:05:02 2012
d62 1
a62 1
@@@@ -239,7 +239,7 @@@@ endif()
d66 1
a66 1
-    set(SYSCONFDIR ${PREFIX}/etc CACHE PATH "config directory")
d71 1
a71 1
@@@@ -268,7 +268,7 @@@@ endif()
d75 2
a76 2
-   set(AWESOME_MAN_PATH ${PREFIX}/share/man CACHE PATH "awesome manpage directory")
+   set(AWESOME_MAN_PATH ${PREFIX}/man CACHE PATH "awesome manpage directory")
@


1.6
log
@fixes for lua

from dcoppa@@
@
text
@d1 1
a1 1
$OpenBSD: patch-awesomeConfig_cmake,v 1.5 2011/11/30 11:50:58 dcoppa Exp $
d3 1
a3 1
+++ awesomeConfig.cmake	Tue Jul 10 13:44:30 2012
d21 1
a21 1
@@@@ -54,7 +54,8 @@@@ a_find_program(ASCIIDOC_EXECUTABLE asciidoc FALSE)
a25 2
+include(FindLuaInterp)
+a_find_program(LUA_EXECUTABLE ${LUA_EXECUTABLE} FALSE)
d29 1
a29 1
@@@@ -62,8 +63,8 @@@@ a_find_program(CONVERT_EXECUTABLE convert TRUE)
d40 1
a40 1
@@@@ -139,9 +140,10 @@@@ pkg_check_modules(AWESOME_REQUIRED REQUIRED
d53 1
a53 1
@@@@ -192,7 +194,7 @@@@ else()
d62 1
a62 1
@@@@ -239,7 +241,7 @@@@ endif()
d71 1
a71 1
@@@@ -268,7 +270,7 @@@@ endif()
@


1.5
log
@Update to awesome v3.4.11 (Pickapart)

ChangeLog at http://awesome.naquadah.org/changelogs/short/v3.4.11
@
text
@d1 3
a3 3
$OpenBSD: patch-awesomeConfig_cmake,v 1.4 2011/01/17 13:23:06 dcoppa Exp $
--- awesomeConfig.cmake.orig	Wed Nov 23 15:08:50 2011
+++ awesomeConfig.cmake	Wed Nov 30 10:43:32 2011
d21 22
a42 1
@@@@ -139,9 +139,10 @@@@ pkg_check_modules(AWESOME_REQUIRED REQUIRED
d55 10
a64 1
@@@@ -239,7 +240,7 @@@@ endif()
d73 1
a73 1
@@@@ -268,7 +269,7 @@@@ endif()
@


1.4
log
@Update to awesome v3.4.9 (Smack)
Fix WANTLIB while here...
@
text
@d1 3
a3 3
$OpenBSD: patch-awesomeConfig_cmake,v 1.3 2010/09/14 08:51:24 dcoppa Exp $
--- awesomeConfig.cmake.orig	Mon Jan 17 12:38:13 2011
+++ awesomeConfig.cmake	Mon Jan 17 13:07:59 2011
d21 14
a34 1
@@@@ -240,7 +240,7 @@@@ endif()
d43 1
a43 1
@@@@ -269,7 +269,7 @@@@ endif()
@


1.3
log
@Update to awesome-3.4.7.
Added luadoc documentation.

OK landry@@
@
text
@d1 5
a5 5
$OpenBSD: patch-awesomeConfig_cmake,v 1.2 2010/07/28 21:27:28 dcoppa Exp $
--- awesomeConfig.cmake.orig	Wed Aug 25 10:50:48 2010
+++ awesomeConfig.cmake	Fri Sep 10 13:47:47 2010
@@@@ -18,11 +18,11 @@@@ option(GENERATE_LUADOC "generate luadoc" ON)
 link_directories(/usr/local/lib)
d13 1
a13 1
+add_definitions(-std=gnu99 -ggdb3 -fno-strict-aliasing -Wall
d21 1
a21 19
@@@@ -166,6 +166,9 @@@@ endmacro()
 # Check for libev
 a_find_library(LIB_EV ev)
 
+# Check for libexecinfo on non Glibc systems
+a_find_library(LIB_EXECINFO execinfo)
+
 # Error check
 if(NOT LUA51_FOUND AND NOT LUA50_FOUND) # This is a workaround to a cmake bug
     message(FATAL_ERROR "lua library not found")
@@@@ -175,6 +178,7 @@@@ set(AWESOME_REQUIRED_LIBRARIES
     ${AWESOME_COMMON_REQUIRED_LDFLAGS}
     ${AWESOME_REQUIRED_LIBRARIES}
     ${LIB_EV}
+    ${LIB_EXECINFO}
     ${LUA_LIBRARIES})
 
 set(AWESOME_REQUIRED_INCLUDE_DIRS
@@@@ -214,7 +218,7 @@@@ endif()
d30 1
a30 1
@@@@ -243,7 +247,7 @@@@ endif()
@


1.2
log
@Bugfix update to awesome v3.4.6 (Hooch).

While here:

Zap -Wredundant-decls from CFLAGS to avoid a lot of harmless but
noisy warnings during compilation (cluestick by landry@@ for this).

Switch to new-style LIB_DEPENDS/WANTLIB.
@
text
@d1 3
a3 3
$OpenBSD: patch-awesomeConfig_cmake,v 1.1 2010/06/02 15:07:50 dcoppa Exp $
--- awesomeConfig.cmake.orig	Wed Jul 14 08:30:09 2010
+++ awesomeConfig.cmake	Wed Jul 28 22:57:53 2010
d21 1
a21 1
@@@@ -168,6 +168,9 @@@@ endmacro()
d31 1
a31 1
@@@@ -177,6 +180,7 @@@@ set(AWESOME_REQUIRED_LIBRARIES
d39 1
a39 1
@@@@ -216,7 +220,7 @@@@ endif()
d48 1
a48 1
@@@@ -245,7 +249,7 @@@@ endif()
@


1.1
log
@Update to awesome 3.4.4 (I also take maintainership).

OK sthen@@, D. Adam Karim (previous maintainer)
@
text
@d1 4
a4 4
$OpenBSD$
--- awesomeConfig.cmake.orig	Tue Mar  2 16:54:05 2010
+++ awesomeConfig.cmake	Mon May 10 11:25:40 2010
@@@@ -18,9 +18,9 @@@@ option(GENERATE_LUADOC "generate luadoc" ON)
d11 2
d16 2
a17 2
     -Wpointer-arith -Wredundant-decls -Wformat-nonliteral
     -Wno-format-zero-length -Wmissing-format-attribute -Wmissing-prototypes
d19 2
@

