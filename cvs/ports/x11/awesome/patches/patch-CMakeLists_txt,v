head	1.19;
access;
symbols
	OPENBSD_6_1:1.18.0.2
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.16.0.8
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.4
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.6
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.14.0.2
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.13.0.2
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.2
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3;
locks; strict;
comment	@# @;


1.19
date	2017.08.05.20.18.11;	author dcoppa;	state Exp;
branches;
next	1.18;
commitid	K7CvFk0XIa50TSEt;

1.18
date	2017.03.21.19.48.01;	author dcoppa;	state Exp;
branches;
next	1.17;
commitid	cDxCvtATslZZ0ZDt;

1.17
date	2017.02.28.13.27.15;	author dcoppa;	state Exp;
branches;
next	1.16;
commitid	LK24Dq2Oc5IWnvdk;

1.16
date	2014.09.02.10.52.43;	author dcoppa;	state Exp;
branches;
next	1.15;
commitid	pCHaYTYuFdaHdQSk;

1.15
date	2013.05.22.15.05.50;	author dcoppa;	state Exp;
branches;
next	1.14;

1.14
date	2012.12.31.17.41.44;	author dcoppa;	state Exp;
branches;
next	1.13;

1.13
date	2012.06.19.11.18.53;	author dcoppa;	state Exp;
branches;
next	1.12;

1.12
date	2011.11.30.11.50.58;	author dcoppa;	state Exp;
branches;
next	1.11;

1.11
date	2011.07.06.15.17.39;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2011.07.06.09.58.16;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2011.05.17.14.03.30;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2011.05.17.11.30.54;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2011.03.13.18.07.23;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2011.01.19.12.41.08;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2011.01.15.22.20.32;	author dcoppa;	state dead;
branches;
next	1.4;

1.4
date	2010.10.07.12.30.08;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.28.21.27.28;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.07.06.13.56;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2010.06.02.15.07.50;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.19
log
@
Update to awesome-4.2
@
text
@$OpenBSD: patch-CMakeLists_txt,v 1.18 2017/03/21 19:48:01 dcoppa Exp $

These auto-generated (db2man.xsl) manpages contain a mixture of ISO
latin-1 characters and numerical HTML entities that neither mandoc
nor groff can fully understand: do not install them.

Fix usage of -export-dynamic

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@@@ -97,7 +97,6 @@@@ set(AWE_MAN_SRCS
     ${SOURCE_DIR}/manpages/awesome.1.txt
     ${SOURCE_DIR}/manpages/awesome-client.1.txt
     ${SOURCE_DIR}/manpages/awesomerc.5.txt)
-set(AWE_MAN_LANGS it es fr de ru)
 
 # Don't strip RPATH if compiling on Solaris
 if (${CMAKE_SYSTEM_NAME} MATCHES "SunOS")
@@@@ -111,12 +110,11 @@@@ add_executable(${PROJECT_AWE_NAME}
 
 # CFLAGS
 set(AWESOME_C_FLAGS
-    -O1 -std=gnu99 -ggdb3 -fno-strict-aliasing -Wall -Wextra
-    -Wchar-subscripts -Wundef -Wshadow -Wcast-align -Wwrite-strings
-    -Wsign-compare -Wunused -Wno-unused-parameter -Wuninitialized -Winit-self
-    -Wpointer-arith -Wformat-nonliteral
-    -Wno-format-zero-length -Wmissing-format-attribute -Wmissing-prototypes
-    -Wstrict-prototypes
+    -std=gnu99 -fgnu89-inline -fno-strict-aliasing
+    -Wchar-subscripts -Wcast-align -Wwrite-strings -Wsign-compare
+    -Wunused -Wno-unused-parameter -Wuninitialized -Wpointer-arith
+    -Wno-format-zero-length -Wmissing-format-attribute
+    -Wmissing-prototypes -Wstrict-prototypes
     CACHE STRING "CFLAGS used to compile ${PROJECT_AWE_NAME}")
 mark_as_advanced(AWESOME_C_FLAGS)
 target_compile_options(${PROJECT_AWE_NAME} PRIVATE ${AWESOME_C_FLAGS})
@@@@ -124,23 +122,11 @@@@ target_compile_options(${PROJECT_AWE_NAME} PRIVATE ${A
 # Make sure awesomerc.lua is generated
 add_dependencies(${PROJECT_AWE_NAME} generate_awesomerc)
 
-# Linux w/ GCC requires -rdynamic to get backtrace to fully work.
-#
-# For "historical reasons", CMake adds the option to the linker flags
-# unnoticeably for Linux w/ GCC through its modules Linux-GNU.cmake
-# and Linux-GNU-C.cmake.  Our build system has counted on that.  But
-# just in case CMake should do away with the convention suddenly...
-if(DEFINED CMAKE_SHARED_LIBRARY_LINK_C_FLAGS AND
-        NOT CMAKE_SHARED_LIBRARY_LINK_C_FLAGS MATCHES "-rdynamic")
-    target_link_libraries(${PROJECT_AWE_NAME}
-        $<$<AND:$<PLATFORM_ID:Linux>,$<C_COMPILER_ID:GNU>>:-rdynamic>)
-endif()
-
-# FreeBSD requires dynamic linking
-if(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")
+# FreeBSD and OpenBSD require dynamic linking
+if(CMAKE_SYSTEM_NAME MATCHES "FreeBSD" OR CMAKE_SYSTEM_NAME MATCHES "OpenBSD")
     set_target_properties(${PROJECT_AWE_NAME}
         PROPERTIES
-        LINK_FLAGS -export-dynamic)
+        LINK_FLAGS -Wl,--export-dynamic)
 endif()
 
 target_link_libraries(${PROJECT_AWE_NAME}
@@@@ -148,10 +134,6 @@@@ target_link_libraries(${PROJECT_AWE_NAME}
     ${AWESOME_REQUIRED_LDFLAGS}
     ${AWESOME_OPTIONAL_LDFLAGS})
 
-# check for lgi and the needed gobject introspection files
-add_custom_target(lgi-check ALL
-    COMMAND ${SOURCE_DIR}/build-utils/lgi-check.sh)
-
 # {{{ Generated sources
 # atoms
 file(MAKE_DIRECTORY ${BUILD_DIR}/common)
@@@@ -202,68 +184,45 @@@@ if(GENERATE_MANPAGES)
     if(NOT BUILD_DIR STREQUAL SOURCE_DIR)
         file(MAKE_DIRECTORY ${BUILD_DIR}/manpages)
     endif()
+    foreach(txtfile ${AWE_MAN_SRCS})
+        string(REGEX REPLACE ".txt\$" ".xml" xmlfile ${txtfile})
+        string(REPLACE ${SOURCE_DIR}
+                       ${BUILD_DIR} xmlfile ${xmlfile})
+        string(REGEX REPLACE ".xml\$" ".gz" gzfile ${xmlfile})
+        string(REGEX REPLACE ".gz\$" "" manfile ${gzfile})
 
-    # add the default translation to the list of languages
-    set(AWE_MAN_LANGS default ${AWE_MAN_LANGS})
+        add_custom_command(
+            COMMAND ${ASCIIDOC_EXECUTABLE} -d manpage -b docbook -o ${xmlfile} - < ${txtfile}
+            WORKING_DIRECTORY ${BUILD_DIR}/manpages
+            OUTPUT  ${xmlfile}
+            DEPENDS ${txtfile}
+            VERBATIM)
+        add_custom_command(
+            COMMAND ${XMLTO_EXECUTABLE} --skip-validation man ${xmlfile}
+            OUTPUT  ${manfile}
+            WORKING_DIRECTORY ${BUILD_DIR}/manpages
+            DEPENDS ${xmlfile})
 
-    foreach(lang ${AWE_MAN_LANGS})
-
-        foreach(txtfile ${AWE_MAN_SRCS})
-            # figure the base name of the file (ie "awesome.1")
-            GET_FILENAME_COMPONENT(tmpname ${txtfile} NAME)
-            string(REGEX REPLACE ".txt\$" "" basename ${tmpname})
-
-            # figure the relative path of the file
-            GET_FILENAME_COMPONENT(tmppath ${txtfile} PATH)
-            string(REPLACE ${SOURCE_DIR}/ "" relpath ${tmppath})
-
-            # figure the manpage section to install to from filename
-            string(REGEX REPLACE "^.*\\.([0-9])$" "\\1" section ${basename})
-
-            # construct the language specific versions of the basename and path
-            if (lang STREQUAL default)
-                set(basename2 ${basename})
-                set(relpath2 ${relpath}/man${section})
-            else()
-                set(basename2 ${basename}.${lang})
-                set(relpath2 ${relpath}/${lang}/man${section})
-            endif()
-
-            # create the build directory (if it does not exist)
-            file(MAKE_DIRECTORY ${BUILD_DIR}/${relpath2})
-
-            # set the final filenames
-            set(txtfile ${SOURCE_DIR}/${relpath}/${basename2}.txt)
-            set(xmlfile ${BUILD_DIR}/${relpath2}/${basename}.xml)
-            set(gzfile  ${BUILD_DIR}/${relpath2}/${basename}.gz)
-            set(manfile ${BUILD_DIR}/${relpath2}/${basename})
-
+        if(COMPRESS_MANPAGES)
             add_custom_command(
-                COMMAND ${ASCIIDOC_EXECUTABLE} -d manpage -b docbook -o ${xmlfile} - < ${txtfile}
-                WORKING_DIRECTORY ${BUILD_DIR}/${relpath2}
-                OUTPUT  ${xmlfile}
-                DEPENDS ${txtfile}
+                COMMAND ${GZIP_EXECUTABLE} < ${manfile} > ${gzfile}
+                OUTPUT  ${gzfile}
+                WORKING_DIRECTORY ${BUILD_DIR}/manpages
+                DEPENDS ${manfile}
                 VERBATIM)
-            add_custom_command(
-                COMMAND ${XMLTO_EXECUTABLE} man ${xmlfile}
-                OUTPUT  ${manfile}
-                WORKING_DIRECTORY ${BUILD_DIR}/${relpath2}
-                DEPENDS ${xmlfile})
 
-            if(COMPRESS_MANPAGES)
-                add_custom_command(
-                    COMMAND ${GZIP_EXECUTABLE} < ${manfile} > ${gzfile}
-                    OUTPUT  ${gzfile}
-                    WORKING_DIRECTORY ${BUILD_DIR}/${relpath2}
-                    DEPENDS ${manfile}
-                    VERBATIM)
+            set(MAN_FILES ${MAN_FILES} ${gzfile})
+        else()
+            set(MAN_FILES ${MAN_FILES} ${manfile})
+        endif()
 
-                set(MAN_FILES ${MAN_FILES} ${gzfile})
-            else()
-                set(MAN_FILES ${MAN_FILES} ${manfile})
-            endif()
-        endforeach()
-
+        # figure out in what section to install to from filename
+        string(REGEX REPLACE "^.*\\.([0-9])\\.gz\$" "\\1" section ${gzfile})
+        if(COMPRESS_MANPAGES)
+            set(AWE_MAN${section}_FILES ${AWE_MAN${section}_FILES} ${gzfile})
+        else()
+            set(AWE_MAN${section}_FILES ${AWE_MAN${section}_FILES} ${manfile})
+        endif()
     endforeach()
 
     add_custom_target(man ALL DEPENDS ${MAN_FILES})
@@@@ -374,13 +333,8 @@@@ install(DIRECTORY ${BUILD_DIR}/lib DESTINATION ${AWESO
 install(FILES ${BUILD_DIR}/awesomerc.lua DESTINATION ${AWESOME_SYSCONFDIR}
         RENAME rc.lua)
 if(GENERATE_MANPAGES)
-    if(COMPRESS_MANPAGES)
-        set(regex "\\.(xml|txt|[0-9])$")
-    else()
-        set(regex "\\.(xml|txt|gz)$")
-    endif()
-    install(DIRECTORY ${BUILD_DIR}/${relpath}/ DESTINATION ${AWESOME_MAN_PATH}
-            REGEX ${regex} EXCLUDE )
+    install(FILES ${AWE_MAN1_FILES} DESTINATION ${AWESOME_MAN_PATH}/man1)
+    install(FILES ${AWE_MAN5_FILES} DESTINATION ${AWESOME_MAN_PATH}/man5)
 endif()
 install(DIRECTORY ${AWE_ICON_DIR} DESTINATION ${AWESOME_DATA_PATH})
 install(DIRECTORY ${SOURCE_DIR}/themes DESTINATION ${AWESOME_DATA_PATH}
@@@@ -394,6 +348,7 @@@@ if(GENERATE_DOC)
 endif()
 # }}}
 
+#[[
 # {{{ Tests
 add_executable(test-gravity tests/test-gravity.c)
 target_link_libraries(test-gravity
@@@@ -450,5 +405,6 @@@@ add_custom_target(check DEPENDS ${CHECK_TARGETS} check
 # }}}
 
 INCLUDE(${CMAKE_SOURCE_DIR}/Packaging.cmake)
+]]
 
 # vim: filetype=cmake:expandtab:shiftwidth=4:tabstop=8:softtabstop=4:textwidth=80:foldmethod=marker
@


1.18
log
@
Update to awesome-4.1
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.17 2017/02/28 13:27:15 dcoppa Exp $
d9 4
a12 3
--- CMakeLists.txt.orig	Sat Mar 18 10:49:46 2017
+++ CMakeLists.txt	Tue Mar 21 18:07:44 2017
@@@@ -81,7 +81,6 @@@@ set(AWE_MAN_SRCS
d20 1
a20 1
@@@@ -95,12 +94,11 @@@@ add_executable(${PROJECT_AWE_NAME}
d38 1
a38 1
@@@@ -108,23 +106,11 @@@@ target_compile_options(${PROJECT_AWE_NAME} PRIVATE ${A
d65 1
a65 1
@@@@ -132,10 +118,6 @@@@ target_link_libraries(${PROJECT_AWE_NAME}
d76 1
a76 1
@@@@ -186,68 +168,45 @@@@ if(GENERATE_MANPAGES)
d178 1
a178 1
@@@@ -354,13 +313,8 @@@@ install(DIRECTORY ${BUILD_DIR}/lib DESTINATION ${AWESO
d194 1
a194 1
@@@@ -374,6 +328,7 @@@@ if(GENERATE_DOC)
d200 3
a202 3
 add_custom_target(check-integration
     sh -c "CMAKE_BINARY_DIR='${CMAKE_BINARY_DIR}' ${CMAKE_SOURCE_DIR}/tests/run.sh"
@@@@ -422,5 +377,6 @@@@ add_custom_target(check DEPENDS ${CHECK_TARGETS} check
@


1.17
log
@
Update to awesome v4.0 (Harder, Better, Faster, Stronger)

To migrate a custom rc.lua from version 3.5.x to version 4.0, see
https://awesomewm.org/apidoc/documentation/17-porting-tips.md.html#v4
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.16 2014/09/02 10:52:43 dcoppa Exp $
d9 3
a11 3
--- CMakeLists.txt.orig	Sun Dec 25 22:17:14 2016
+++ CMakeLists.txt	Tue Feb 28 12:48:09 2017
@@@@ -84,7 +84,6 @@@@ set(AWE_MAN_SRCS
d19 1
a19 1
@@@@ -98,12 +97,11 @@@@ add_executable(${PROJECT_AWE_NAME}
d37 1
a37 1
@@@@ -111,23 +109,11 @@@@ target_compile_options(${PROJECT_AWE_NAME} PRIVATE ${A
d64 1
a64 1
@@@@ -135,10 +121,6 @@@@ target_link_libraries(${PROJECT_AWE_NAME}
d75 1
a75 1
@@@@ -189,68 +171,45 @@@@ if(GENERATE_MANPAGES)
d177 3
a179 3
@@@@ -357,13 +316,8 @@@@ install(DIRECTORY ${BUILD_DIR}/lib DESTINATION ${AWESO
 install(FILES ${AWE_CONF_FILE_DEFAULT} DESTINATION ${AWESOME_SYSCONFDIR}
         RENAME ${AWE_CONF_FILE})
d193 1
a193 1
@@@@ -377,6 +331,7 @@@@ if(GENERATE_DOC)
d201 1
a201 1
@@@@ -418,5 +373,6 @@@@ add_custom_target(check DEPENDS ${CHECK_TARGETS} check
@


1.16
log
@
Merge fixes from the stable branch.

systray: Only intern the atom once
systray: Only register/unregister when needed
systray: Systray won't show with margin layout
lib.awful.taglist: fix multiple tag selection
menubar: Menubar should check all standard directories
wibox: Make :find_widgets() easily accessible
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.15 2013/05/22 15:05:50 dcoppa Exp $
d9 3
a11 3
--- CMakeLists.txt.orig	Fri Apr 11 11:07:10 2014
+++ CMakeLists.txt	Tue Sep  2 12:28:04 2014
@@@@ -79,7 +79,6 @@@@ set(AWE_MAN_SRCS
d19 1
a19 3
@@@@ -91,11 +90,11 @@@@ endif()
 add_executable(${PROJECT_AWE_NAME}
     ${AWE_SRCS})
d21 32
d64 1
a64 1
@@@@ -103,10 +102,7 @@@@ target_link_libraries(${PROJECT_AWE_NAME}
d72 1
a72 1
+# {{{ Generated sources
d75 1
a75 2
 add_custom_command(
@@@@ -155,68 +151,45 @@@@ if(GENERATE_MANPAGES)
d177 1
a177 1
@@@@ -304,13 +277,8 @@@@ install(DIRECTORY ${BUILD_DIR}/lib DESTINATION ${AWESO
d192 16
a207 1
 install(DIRECTORY ${BUILD_DIR}/themes DESTINATION ${AWESOME_DATA_PATH}
@


1.15
log
@Major update to awesome-3.5.1

OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.14 2012/12/31 17:41:44 dcoppa Exp $
d9 2
a10 2
--- CMakeLists.txt.orig	Mon Apr  1 13:44:46 2013
+++ CMakeLists.txt	Tue May 21 07:33:13 2013
d34 1
a34 1
@@@@ -103,10 +102,6 @@@@ target_link_libraries(${PROJECT_AWE_NAME}
d42 1
d46 1
a46 1
@@@@ -155,68 +150,45 @@@@ if(GENERATE_MANPAGES)
d148 1
a148 1
@@@@ -304,13 +276,8 @@@@ install(DIRECTORY ${BUILD_DIR}/lib DESTINATION ${AWESO
@


1.14
log
@Update awesome to v3.4.14 (White Christmas)
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.13 2012/06/19 11:18:53 dcoppa Exp $
d9 4
a12 4
--- CMakeLists.txt.orig	Mon Dec 24 15:36:05 2012
+++ CMakeLists.txt	Mon Dec 31 12:34:14 2012
@@@@ -88,17 +88,16 @@@@ set(AWE_MAN_SRCS
     ${SOURCE_DIR}/manpages/awsetbg.1.txt
d17 3
d21 1
a21 2
     ${AWE_SRCS}
     ${BUILD_DIR}/common/tokenize.c)
d34 12
a45 1
@@@@ -175,68 +174,45 @@@@ if(GENERATE_MANPAGES)
d147 1
a147 1
@@@@ -334,13 +310,8 @@@@ install(DIRECTORY ${BUILD_DIR}/lib DESTINATION ${AWESO
@


1.13
log
@Bugfixing update to awesome 3.4.12 (codename "Starlight")
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.12 2011/11/30 11:50:58 dcoppa Exp $
d7 5
a11 3
--- CMakeLists.txt.orig	Mon May 16 16:35:17 2011
+++ CMakeLists.txt	Tue May 17 14:22:25 2011
@@@@ -88,7 +88,6 @@@@ set(AWE_MAN_SRCS
d19 14
a32 1
@@@@ -172,68 +171,45 @@@@ if(GENERATE_MANPAGES)
d134 1
a134 1
@@@@ -331,13 +307,8 @@@@ install(DIRECTORY ${BUILD_DIR}/lib DESTINATION ${AWESO
@


1.12
log
@Update to awesome v3.4.11 (Pickapart)

ChangeLog at http://awesome.naquadah.org/changelogs/short/v3.4.11
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.11 2011/07/06 15:17:39 dcoppa Exp $
d13 1
a13 1
-set(AWE_MAN_LANGS es fr de ru)
@


1.11
log
@small rewording
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.10 2011/07/06 09:58:16 dcoppa Exp $
d13 1
a13 1
-set(AWE_MAN_LANGS es fr de)
@


1.10
log
@Don't move clients with fixed positions
(upstream git commit 45576b6c6f8255e979187b034a73385d508c9223)

Add a comment about why I chose to not install auto-generated
non-English manpages (thanks schwarze@@)
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.9 2011/05/17 14:03:30 dcoppa Exp $
d3 1
a3 1
These auto-generated manpages (db2man.xsl) contain a mixture of ISO
@


1.9
log
@Again, do not install foreign language man pages: too many mandoc
errors with letters containing diacritics.

Zap USE_GROFF.
@
text
@d1 6
a6 1
$OpenBSD: patch-CMakeLists_txt,v 1.8 2011/05/17 11:30:54 dcoppa Exp $
@


1.8
log
@Update to awesome-3.4.10 (codename "Exploder")
@
text
@d1 78
a78 5
$OpenBSD: patch-CMakeLists_txt,v 1.7 2011/03/13 18:07:23 dcoppa Exp $
--- CMakeLists.txt.orig	Tue May 17 12:21:10 2011
+++ CMakeLists.txt	Tue May 17 12:22:03 2011
@@@@ -215,7 +215,7 @@@@ if(GENERATE_MANPAGES)
                 DEPENDS ${txtfile}
d80 1
a80 1
             add_custom_command(
d82 48
a129 4
+                COMMAND ${XMLTO_EXECUTABLE} --skip-validation man ${xmlfile}
                 OUTPUT  ${manfile}
                 WORKING_DIRECTORY ${BUILD_DIR}/${relpath2}
                 DEPENDS ${xmlfile})
@


1.7
log
@From upstream git:
- Various bugfixes to Lua code.
- Fix a bug causing building with cmake 2.8.4 to fail (remove double
  slashes from icon path names).
@
text
@d1 3
a3 3
$OpenBSD: patch-CMakeLists_txt,v 1.6 2011/01/19 12:41:08 dcoppa Exp $
--- CMakeLists.txt.orig	Mon Jan 17 12:38:13 2011
+++ CMakeLists.txt	Wed Mar  9 13:44:50 2011
a12 17
@@@@ -274,14 +274,15 @@@@ endif()
 
 # {{{ Theme icons
 file(GLOB icon_sources RELATIVE ${SOURCE_DIR} ${SOURCE_DIR}/themes/*/titlebar/*.png)
-set(ALL_ICONS ${icon_sources})
 
 foreach(icon ${icon_sources})
     # Copy all icons to the build dir to simplify the following code.
     # Source paths are interpreted relative to ${SOURCE_DIR}, target paths
     # relative to ${BUILD_DIR}.
     get_filename_component(icon_path ${icon} PATH)
+    get_filename_component(icon_name ${icon} NAME)
     file(COPY ${icon} DESTINATION ${icon_path})
+    set(ALL_ICONS ${ALL_ICONS} "${icon_path}/${icon_name}")
 endforeach()
 
 macro(a_icon_convert match replacement input)
@


1.6
log
@re-add "--skip-validation" to xmlto command line, erroneously removed
in previous commit.

fix a bug where untagging causes the client to lose the input focus
(from upstream git).
@
text
@d1 3
a3 3
$OpenBSD$
--- CMakeLists.txt.orig	Wed Jan 19 13:24:14 2011
+++ CMakeLists.txt	Wed Jan 19 13:24:42 2011
d13 17
@


1.5
log
@Generate and install de, es, and fr manpages, now that we have a
recent asciidoc. Thanks jasper@@
@
text
@d1 6
a6 69
$OpenBSD: patch-CMakeLists_txt,v 1.4 2010/10/07 12:30:08 dcoppa Exp $
--- CMakeLists.txt.orig	Mon Oct  4 10:51:54 2010
+++ CMakeLists.txt	Thu Oct  7 14:12:42 2010
@@@@ -88,7 +88,6 @@@@ set(AWE_MAN_SRCS
     ${SOURCE_DIR}/manpages/awsetbg.1.txt
     ${SOURCE_DIR}/manpages/awesome-client.1.txt
     ${SOURCE_DIR}/manpages/awesomerc.5.txt)
-set(AWE_MAN_LANGS es fr de)
 
 add_executable(${PROJECT_AWE_NAME}
     ${AWE_SRCS}
@@@@ -172,68 +171,45 @@@@ if(GENERATE_MANPAGES)
     if(NOT BUILD_DIR STREQUAL SOURCE_DIR)
         file(MAKE_DIRECTORY ${BUILD_DIR}/manpages)
     endif()
+    foreach(txtfile ${AWE_MAN_SRCS})
+        string(REGEX REPLACE ".txt\$" ".xml" xmlfile ${txtfile})
+        string(REPLACE ${SOURCE_DIR}
+                       ${BUILD_DIR} xmlfile ${xmlfile})
+        string(REGEX REPLACE ".xml\$" ".gz" gzfile ${xmlfile})
+        string(REGEX REPLACE ".gz\$" "" manfile ${gzfile})
 
-    # add the default translation to the list of languages
-    set(AWE_MAN_LANGS default ${AWE_MAN_LANGS})
+        add_custom_command(
+            COMMAND ${ASCIIDOC_EXECUTABLE} -d manpage -b docbook -o ${xmlfile} - < ${txtfile}
+            WORKING_DIRECTORY ${BUILD_DIR}/manpages
+            OUTPUT  ${xmlfile}
+            DEPENDS ${txtfile}
+            VERBATIM)
+        add_custom_command(
+            COMMAND ${XMLTO_EXECUTABLE} --skip-validation man ${xmlfile}
+            OUTPUT  ${manfile}
+            WORKING_DIRECTORY ${BUILD_DIR}/manpages
+            DEPENDS ${xmlfile})
 
-    foreach(lang ${AWE_MAN_LANGS})
-
-        foreach(txtfile ${AWE_MAN_SRCS})
-            # figure the base name of the file (ie "awesome.1")
-            GET_FILENAME_COMPONENT(tmpname ${txtfile} NAME)
-            string(REGEX REPLACE ".txt\$" "" basename ${tmpname})
-
-            # figure the relative path of the file
-            GET_FILENAME_COMPONENT(tmppath ${txtfile} PATH)
-            string(REPLACE ${SOURCE_DIR}/ "" relpath ${tmppath})
-
-            # figure the manpage section to install to from filename
-            string(REGEX REPLACE "^.*\\.([0-9])$" "\\1" section ${basename})
-
-            # construct the language specific versions of the basename and path
-            if (lang STREQUAL default)
-                set(basename2 ${basename})
-                set(relpath2 ${relpath}/man${section})
-            else()
-                set(basename2 ${basename}.${lang})
-                set(relpath2 ${relpath}/${lang}/man${section})
-            endif()
-
-            # create the build directory (if it does not exist)
-            file(MAKE_DIRECTORY ${BUILD_DIR}/${relpath2})
-
-            # set the final filenames
-            set(txtfile ${SOURCE_DIR}/${relpath}/${basename2}.txt)
-            set(xmlfile ${BUILD_DIR}/${relpath2}/${basename}.xml)
-            set(gzfile  ${BUILD_DIR}/${relpath2}/${basename}.gz)
-            set(manfile ${BUILD_DIR}/${relpath2}/${basename})
-
+        if(COMPRESS_MANPAGES)
a7 10
-                COMMAND ${ASCIIDOC_EXECUTABLE} -d manpage -b docbook -o ${xmlfile} - < ${txtfile}
-                WORKING_DIRECTORY ${BUILD_DIR}/${relpath2}
-                OUTPUT  ${xmlfile}
-                DEPENDS ${txtfile}
+                COMMAND ${GZIP_EXECUTABLE} < ${manfile} > ${gzfile}
+                OUTPUT  ${gzfile}
+                WORKING_DIRECTORY ${BUILD_DIR}/manpages
+                DEPENDS ${manfile}
                 VERBATIM)
-            add_custom_command(
d9 4
a12 48
-                OUTPUT  ${manfile}
-                WORKING_DIRECTORY ${BUILD_DIR}/${relpath2}
-                DEPENDS ${xmlfile})
 
-            if(COMPRESS_MANPAGES)
-                add_custom_command(
-                    COMMAND ${GZIP_EXECUTABLE} < ${manfile} > ${gzfile}
-                    OUTPUT  ${gzfile}
-                    WORKING_DIRECTORY ${BUILD_DIR}/${relpath2}
-                    DEPENDS ${manfile}
-                    VERBATIM)
+            set(MAN_FILES ${MAN_FILES} ${gzfile})
+        else()
+            set(MAN_FILES ${MAN_FILES} ${manfile})
+        endif()
 
-                set(MAN_FILES ${MAN_FILES} ${gzfile})
-            else()
-                set(MAN_FILES ${MAN_FILES} ${manfile})
-            endif()
-        endforeach()
-
+        # figure out in what section to install to from filename
+        string(REGEX REPLACE "^.*\\.([0-9])\\.gz\$" "\\1" section ${gzfile})
+        if(COMPRESS_MANPAGES)
+            set(AWE_MAN${section}_FILES ${AWE_MAN${section}_FILES} ${gzfile})
+        else()
+            set(AWE_MAN${section}_FILES ${AWE_MAN${section}_FILES} ${manfile})
+        endif()
     endforeach()
 
     add_custom_target(man ALL DEPENDS ${MAN_FILES})
@@@@ -330,13 +306,8 @@@@ install(DIRECTORY ${BUILD_DIR}/lib DESTINATION ${AWESO
 install(FILES ${AWE_CONF_FILE_DEFAULT} DESTINATION ${AWESOME_SYSCONFDIR}
         RENAME ${AWE_CONF_FILE})
 if(GENERATE_MANPAGES)
-    if(COMPRESS_MANPAGES)
-        set(regex "\\.(xml|txt|[0-9])$")
-    else()
-        set(regex "\\.(xml|txt|gz)$")
-    endif()
-    install(DIRECTORY ${BUILD_DIR}/${relpath}/ DESTINATION ${AWESOME_MAN_PATH}
-            REGEX ${regex} EXCLUDE )
+    install(FILES ${AWE_MAN1_FILES} DESTINATION ${AWESOME_MAN_PATH}/man1)
+    install(FILES ${AWE_MAN5_FILES} DESTINATION ${AWESOME_MAN_PATH}/man5)
 endif()
 install(DIRECTORY ${AWE_ICON_DIR} DESTINATION ${AWESOME_DATA_PATH})
 install(DIRECTORY ${BUILD_DIR}/themes DESTINATION ${AWESOME_DATA_PATH}
@


1.4
log
@Bugfix update to awesome v3.4.8 (Never Know)
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.3 2010/07/28 21:27:28 dcoppa Exp $
@


1.3
log
@Bugfix update to awesome v3.4.6 (Hooch).

While here:

Zap -Wredundant-decls from CFLAGS to avoid a lot of harmless but
noisy warnings during compilation (cluestick by landry@@ for this).

Switch to new-style LIB_DEPENDS/WANTLIB.
@
text
@d1 3
a3 3
$OpenBSD: patch-CMakeLists_txt,v 1.2 2010/06/07 06:13:56 dcoppa Exp $
--- CMakeLists.txt.orig	Mon May 10 10:46:04 2010
+++ CMakeLists.txt	Mon May 10 10:46:23 2010
d114 1
a114 1
@@@@ -329,13 +305,8 @@@@ install(DIRECTORY ${BUILD_DIR}/lib DESTINATION ${AWESO
@


1.2
log
@Update to awesome 3.4.5
@
text
@d1 1
a1 1
$OpenBSD: patch-CMakeLists_txt,v 1.1 2010/06/02 15:07:50 dcoppa Exp $
d119 1
a119 1
-        set(regex "\\.(xml|[0-9])$")
d121 1
a121 1
-        set(regex "\\.(xml|gz)$")
@


1.1
log
@Update to awesome 3.4.4 (I also take maintainership).

OK sthen@@, D. Adam Karim (previous maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
d4 28
a31 5
@@@@ -185,7 +185,7 @@@@ if(GENERATE_MANPAGES)
             DEPENDS ${txtfile}
             VERBATIM)
         add_custom_command(
-            COMMAND ${XMLTO_EXECUTABLE} man ${xmlfile}
d33 97
a129 3
             OUTPUT  ${manfile}
             WORKING_DIRECTORY ${BUILD_DIR}/manpages
             DEPENDS ${xmlfile})
@

