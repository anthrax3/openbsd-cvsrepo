head	1.6;
access;
symbols
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4;
locks; strict;
comment	@# @;


1.6
date	2015.05.24.07.16.31;	author ajacoutot;	state dead;
branches;
next	1.5;
commitid	ppIzpTyUJwYSsnNW;

1.5
date	2015.04.30.06.32.21;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	XOAdGwSQ6H9ZhKOk;

1.4
date	2014.05.05.08.34.08;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2014.04.12.20.41.26;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2013.04.11.17.58.42;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2013.03.09.09.32.03;	author brad;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to vlc-2.2.1.

from brad (maintainer)
@
text
@$OpenBSD: patch-modules_codec_avcodec_encoder_c,v 1.5 2015/04/30 06:32:21 ajacoutot Exp $

Deal with newer FFmpeg API.

--- modules/codec/avcodec/encoder.c.orig	Fri Feb 21 10:27:16 2014
+++ modules/codec/avcodec/encoder.c	Wed Apr 29 00:41:48 2015
@@@@ -257,6 +257,12 @@@@ int OpenEncoder( vlc_object_t *p_this )
         i_codec_id = CODEC_ID_MP2;
         psz_namecodec = "MPEG I/II Layer 2";
     }
+    else if( p_enc->fmt_out.i_codec == VLC_CODEC_MP1V )
+    {
+        i_cat = VIDEO_ES;
+        i_codec_id = CODEC_ID_MPEG1VIDEO;
+        psz_namecodec = "MPEG-1 video";
+    }
     else if( !GetFfmpegCodec( p_enc->fmt_out.i_codec, &i_cat, &i_codec_id,
                              &psz_namecodec ) )
     {
@@@@ -347,37 +353,12 @@@@ int OpenEncoder( vlc_object_t *p_this )
     p_sys->p_interleave_buffer = NULL;
     p_sys->i_buffer_out = 0;
 
-#if LIBAVCODEC_VERSION_MAJOR < 54
-    p_context = avcodec_alloc_context();
-#else
     p_context = avcodec_alloc_context3(p_codec);
-#endif
     p_sys->p_context = p_context;
     p_sys->p_context->codec_id = p_sys->p_codec->id;
     p_context->debug = var_InheritInteger( p_enc, "ffmpeg-debug" );
     p_context->opaque = (void *)p_this;
 
-    /* Set CPU capabilities */
-    unsigned i_cpu = vlc_CPU();
-    p_context->dsp_mask = 0;
-    if( !(i_cpu & CPU_CAPABILITY_MMX) )
-    {
-        p_context->dsp_mask |= AV_CPU_FLAG_MMX;
-    }
-    if( !(i_cpu & CPU_CAPABILITY_MMXEXT) )
-    {
-        p_context->dsp_mask |= AV_CPU_FLAG_MMX2;
-    }
-    if( !(i_cpu & CPU_CAPABILITY_3DNOW) )
-    {
-        p_context->dsp_mask |= AV_CPU_FLAG_3DNOW;
-    }
-    if( !(i_cpu & CPU_CAPABILITY_SSE) )
-    {
-        p_context->dsp_mask |= AV_CPU_FLAG_SSE;
-        p_context->dsp_mask |= AV_CPU_FLAG_SSE2;
-    }
-
     p_sys->i_key_int = var_GetInteger( p_enc, ENC_CFG_PREFIX "keyint" );
     p_sys->i_b_frames = var_GetInteger( p_enc, ENC_CFG_PREFIX "bframes" );
     p_sys->i_vtolerance = var_GetInteger( p_enc, ENC_CFG_PREFIX "vt" ) * 1000;
@@@@ -497,8 +478,10 @@@@ int OpenEncoder( vlc_object_t *p_this )
         p_context->dark_masking = p_sys->f_dark_masking;
         p_context->p_masking = p_sys->f_p_masking;
         p_context->border_masking = p_sys->f_border_masking;
+#if (LIBAVCODEC_VERSION_MAJOR < 55)
         p_context->luma_elim_threshold = p_sys->i_luma_elim;
         p_context->chroma_elim_threshold = p_sys->i_chroma_elim;
+#endif
 
         if( p_sys->i_key_int > 0 )
             p_context->gop_size = p_sys->i_key_int;
@@@@ -507,13 +490,9 @@@@ int OpenEncoder( vlc_object_t *p_this )
         p_context->b_frame_strategy = 0;
         if( !p_context->max_b_frames  &&
             (  p_enc->fmt_out.i_codec == VLC_CODEC_MPGV ||
-               p_enc->fmt_out.i_codec == VLC_CODEC_MP2V ||
-               p_enc->fmt_out.i_codec == VLC_CODEC_MP1V ) )
+               p_enc->fmt_out.i_codec == VLC_CODEC_MP2V ) )
             p_context->flags |= CODEC_FLAG_LOW_DELAY;
 
-        if( p_enc->fmt_out.i_codec == VLC_CODEC_MP2V )
-            p_context->idct_algo = FF_IDCT_LIBMPEG2MMX;
-
         av_reduce( &p_context->sample_aspect_ratio.num,
                    &p_context->sample_aspect_ratio.den,
                    p_enc->fmt_in.video.i_sar_num,
@@@@ -674,7 +653,6 @@@@ int OpenEncoder( vlc_object_t *p_this )
     /* Misc parameters */
     p_context->bit_rate = p_enc->fmt_out.i_bitrate;
 
-#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT( 52, 69, 2 )
     /* Set reasonable defaults to VP8, based on
        libvpx-720p preset from libvpx ffmpeg-patch */
     if( i_codec_id == CODEC_ID_VP8 )
@@@@ -722,7 +700,6 @@@@ int OpenEncoder( vlc_object_t *p_this )
         p_context->mb_static_threshold = 0;
 #endif
     }
-#endif
 
     if( i_codec_id == CODEC_ID_RAWVIDEO )
     {
@@@@ -743,11 +720,7 @@@@ int OpenEncoder( vlc_object_t *p_this )
 
     int ret;
     vlc_avcodec_lock();
-#if LIBAVCODEC_VERSION_MAJOR < 54
-    ret = avcodec_open( p_context, p_codec );
-#else
     ret = avcodec_open2( p_context, p_codec, NULL /* options */ );
-#endif
     vlc_avcodec_unlock();
     if( ret )
     {
@@@@ -801,11 +774,7 @@@@ int OpenEncoder( vlc_object_t *p_this )
 
             p_context->codec = NULL;
             vlc_avcodec_lock();
-#if LIBAVCODEC_VERSION_MAJOR < 54
-            ret = avcodec_open( p_context, p_codec );
-#else
             ret = avcodec_open2( p_context, p_codec, NULL /* options */ );
-#endif
             vlc_avcodec_unlock();
             if( ret )
             {
@@@@ -885,7 +854,7 @@@@ int OpenEncoder( vlc_object_t *p_this )
         p_enc->fmt_out.audio.i_bitspersample = aout_BitsPerSample( vlc_fourcc_GetCodec( AUDIO_ES, p_enc->fmt_out.i_codec ) );
 
         if( p_context->frame_size > 1 )
-            p_sys->i_buffer_out = 8 * AVCODEC_MAX_AUDIO_FRAME_SIZE;
+            p_sys->i_buffer_out = 8 * MAX_AUDIO_FRAME_SIZE;
         else
             p_sys->i_buffer_out = p_sys->i_frame_size * p_sys->i_sample_bytes;
         p_sys->p_buffer_out = malloc( p_sys->i_buffer_out );
@


1.5
log
@Garbage collect old code for older FFmpeg releases and some cleanup.

from brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: patch-modules_codec_avcodec_encoder_c,v 1.4 2014/05/05 08:34:08 brad Exp $
@


1.4
log
@Add a comment to the top of the patches.
@
text
@d1 1
a1 1
$OpenBSD: patch-modules_codec_avcodec_encoder_c,v 1.3 2014/04/12 20:41:26 brad Exp $
d6 26
a31 2
+++ modules/codec/avcodec/encoder.c	Thu Apr 10 21:35:17 2014
@@@@ -358,25 +358,11 @@@@ int OpenEncoder( vlc_object_t *p_this )
d34 1
a34 1
     /* Set CPU capabilities */
d54 1
a54 6
+#if LIBAVUTIL_VERSION_INT >= AV_VERSION_INT( 51, 25, 0 )
+    av_set_cpu_flags_mask( INT_MAX & ~GetVlcDspMask() );
+#else
+    p_context->dsp_mask = GetVlcDspMask();
+#endif
 
d57 2
a58 1
@@@@ -497,8 +483,10 @@@@ int OpenEncoder( vlc_object_t *p_this )
d69 7
a75 2
@@@@ -511,9 +499,6 @@@@ int OpenEncoder( vlc_object_t *p_this )
                p_enc->fmt_out.i_codec == VLC_CODEC_MP1V ) )
d84 41
a124 1
@@@@ -885,7 +870,7 @@@@ int OpenEncoder( vlc_object_t *p_this )
@


1.3
log
@Pull some bits from 2.1 to deal with newer FFmpeg API.

ok sthen@@
@
text
@d1 4
a4 1
$OpenBSD$
@


1.2
log
@Update to VLC 2.0.6.

ok sthen@@
@
text
@d1 61
a61 95
$OpenBSD: patch-modules_codec_avcodec_encoder_c,v 1.1 2013/03/09 09:32:03 brad Exp $
--- modules/codec/avcodec/encoder.c.orig	Fri Mar  8 16:31:00 2013
+++ modules/codec/avcodec/encoder.c	Fri Mar  8 16:31:07 2013
@@@@ -32,6 +32,8 @@@@
 # include "config.h"
 #endif
 
+#include <assert.h>
+
 #include <vlc_common.h>
 #include <vlc_aout.h>
 #include <vlc_sout.h>
@@@@ -188,6 +190,42 @@@@ static const uint16_t mpeg4_default_non_intra_matrix[6
  23, 24, 25, 27, 28, 30, 31, 33,
 };
 
+/**
+ * Deinterleaves audio samples within a block of samples.
+ * \param dst destination buffer for planar samples
+ * \param src source buffer with interleaved samples
+ * \param samples number of samples (per channel/per plane)
+ * \param chans channels/planes count
+ * \param fourcc sample format (must be a linear sample format)
+ * \note The samples must be naturally aligned in memory.
+ * \warning Destination and source buffers MUST NOT overlap.
+ */
+static void Deinterleave( void *restrict dst, const void *restrict src,
+                      unsigned samples, unsigned chans, vlc_fourcc_t fourcc )
+{
+#define DEINTERLEAVE_TYPE(type) \
+do { \
+    type *d = dst; \
+    const type *s = src; \
+    for( size_t i = 0; i < chans; i++ ) { \
+        for( size_t j = 0, k = 0; j < samples; j++, k += chans ) \
+            *(d++) = s[k]; \
+        s++; \
+    } \
+} while(0)
+
+    switch( fourcc )
+    {
+        case VLC_CODEC_U8:   DEINTERLEAVE_TYPE(uint8_t);  break;
+        case VLC_CODEC_S16N: DEINTERLEAVE_TYPE(uint16_t); break;
+        case VLC_CODEC_FL32: DEINTERLEAVE_TYPE(float);    break;
+        case VLC_CODEC_S32N: DEINTERLEAVE_TYPE(int32_t);  break;
+        case VLC_CODEC_FL64: DEINTERLEAVE_TYPE(double);   break;
+        default:             assert(0);
+    }
+#undef DEINTERLEAVE_TYPE
+}
+
 /*****************************************************************************
  * OpenEncoder: probe the encoder
  *****************************************************************************/
@@@@ -612,7 +650,8 @@@@ int OpenEncoder( vlc_object_t *p_this )
         p_context->sample_fmt  = p_codec->sample_fmts ?
                                     p_codec->sample_fmts[0] :
                                     AV_SAMPLE_FMT_S16;
-        p_enc->fmt_in.i_codec  = VLC_CODEC_S16N;
+        p_enc->fmt_in.i_codec  = GetVlcAudioFormat( p_context->sample_fmt );
+
         p_context->sample_rate = p_enc->fmt_out.audio.i_rate;
         p_context->time_base.num = 1;
         p_context->time_base.den = p_context->sample_rate;
@@@@ -826,9 +865,9 @@@@ int OpenEncoder( vlc_object_t *p_this )
 
     if( p_enc->fmt_in.i_cat == AUDIO_ES )
     {
-        GetVlcAudioFormat( &p_enc->fmt_in.i_codec,
-                           &p_enc->fmt_in.audio.i_bitspersample,
-                           p_sys->p_context->sample_fmt );
+        p_enc->fmt_in.i_codec = GetVlcAudioFormat( p_sys->p_context->sample_fmt );
+        p_enc->fmt_in.audio.i_bitspersample = aout_BitsPerSample( p_enc->fmt_in.i_codec );
+
         p_sys->i_sample_bytes = (p_enc->fmt_in.audio.i_bitspersample / 8) *
                                 p_context->channels;
         p_sys->i_frame_size = p_context->frame_size > 1 ?
@@@@ -1105,8 +1144,12 @@@@ static block_t *EncodeAudio( encoder_t *p_enc, aout_bu
             int i_size = (p_sys->i_frame_size - i_delay_size) *
                          p_sys->i_sample_bytes;
 
-            memcpy( p_sys->p_buffer + i_delay_size * p_sys->i_sample_bytes,
-                    p_buffer, i_size );
+            if( av_sample_fmt_is_planar( p_sys->p_context->sample_fmt ) )
+                Deinterleave( &p_sys->p_buffer[i_delay_size * p_sys->i_sample_bytes],
+                        p_buffer, i_samples_delay, p_enc->fmt_in.audio.i_channels, p_enc->fmt_in.i_codec );
+            else
+                memcpy( p_sys->p_buffer + i_delay_size * p_sys->i_sample_bytes,
+                        p_buffer, i_size );
             p_buffer -= i_delay_size * p_sys->i_sample_bytes;
             i_samples += i_samples_delay;
             i_samples_delay = 0;
@@@@ -1115,7 +1158,14 @@@@ static block_t *EncodeAudio( encoder_t *p_enc, aout_bu
         }
d63 2
a64 30
         {
-            p_samples = p_buffer;
+            if( av_sample_fmt_is_planar( p_sys->p_context->sample_fmt ) ) {
+                Deinterleave( p_sys->p_buffer,
+                        p_buffer, p_sys->i_frame_size,
+                        p_enc->fmt_in.audio.i_channels,
+                        p_enc->fmt_in.i_codec );
+                p_samples = p_sys->p_buffer;
+            } else
+                p_samples = p_buffer;
         }
 
         i_out = avcodec_encode_audio( p_sys->p_context, p_sys->p_buffer_out,
@@@@ -1148,9 +1198,13 @@@@ static block_t *EncodeAudio( encoder_t *p_enc, aout_bu
     /* Backup the remaining raw samples */
     if( i_samples )
     {
-        memcpy( &p_sys->p_buffer[i_samples_delay * p_sys->i_sample_bytes],
-                p_buffer,
-                i_samples * p_sys->i_sample_bytes );
+        if( av_sample_fmt_is_planar( p_sys->p_context->sample_fmt ) )
+            Deinterleave( &p_sys->p_buffer[i_samples_delay * p_sys->i_sample_bytes],
+                    p_buffer, i_samples, p_enc->fmt_in.audio.i_channels, p_enc->fmt_in.i_codec );
+        else
+            memcpy( &p_sys->p_buffer[i_samples_delay * p_sys->i_sample_bytes],
+                    p_buffer,
+                    i_samples * p_sys->i_sample_bytes );
     }
 
     return p_chain;
@


1.1
log
@Sync up the FFmpeg backend with upstream to bring in some
bug fixes.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@

