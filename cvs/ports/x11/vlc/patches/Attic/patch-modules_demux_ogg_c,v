head	1.8;
access;
symbols
	OPENBSD_4_7:1.7.0.6
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.6.0.4
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_1:1.5.0.2
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2010.05.05.08.43.35;	author edd;	state dead;
branches;
next	1.7;

1.7
date	2008.09.04.22.58.23;	author brad;	state Exp;
branches;
next	1.6;

1.6
date	2008.03.02.02.27.04;	author jakemsr;	state Exp;
branches;
next	1.5;

1.5
date	2007.04.22.13.21.12;	author aanriot;	state Exp;
branches
	1.5.2.1
	1.5.4.1;
next	1.4;

1.4
date	2005.12.22.03.45.36;	author jolan;	state dead;
branches;
next	1.3;

1.3
date	2005.07.31.19.07.11;	author jolan;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.16.07.40.20;	author jolan;	state Exp;
branches;
next	1.1;

1.1
date	2004.07.10.01.49.42;	author jolan;	state Exp;
branches;
next	;

1.5.2.1
date	2007.06.26.19.19.33;	author sturm;	state Exp;
branches;
next	;

1.5.4.1
date	2007.06.26.19.26.04;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to vlc-1.0.6 from maintainer Brad Smith.
OK dcoppa@@, sthen@@.
@
text
@$OpenBSD: patch-modules_demux_ogg_c,v 1.7 2008/09/04 22:58:23 brad Exp $
--- modules/demux/ogg.c.orig	Tue Jul  8 16:59:23 2008
+++ modules/demux/ogg.c	Tue Sep  2 02:07:40 2008
@@@@ -105,20 +105,21 @@@@ struct demux_sys_t
 };
 
 /* OggDS headers for the new header format (used in ogm files) */
-typedef struct stream_header_video
+typedef struct
 {
     ogg_int32_t width;
     ogg_int32_t height;
-} stream_header_video;
+} stream_header_video_t;
 
-typedef struct stream_header_audio
+typedef struct
 {
     ogg_int16_t channels;
+    ogg_int16_t padding;
     ogg_int16_t blockalign;
     ogg_int32_t avgbytespersec;
-} stream_header_audio;
+} stream_header_audio_t;
 
-typedef struct stream_header
+typedef struct
 {
     char        streamtype[8];
     char        subtype[4];
@@@@ -131,15 +132,16 @@@@ typedef struct stream_header
 
     ogg_int32_t buffersize;
     ogg_int16_t bits_per_sample;
+    ogg_int16_t padding;
 
     union
     {
         /* Video specific */
-        stream_header_video video;
+        stream_header_video_t video;
         /* Audio specific */
-        stream_header_audio audio;
+        stream_header_audio_t audio;
     } sh;
-} stream_header;
+} stream_header_t;
 
 #define OGG_BLOCK_SIZE 4096
 
@@@@ -193,6 +195,8 @@@@ static int Open( vlc_object_t * p_this )
     p_demux->pf_demux = Demux;
     p_demux->pf_control = Control;
     p_demux->p_sys = p_sys = malloc( sizeof( demux_sys_t ) );
+    if( !p_sys )
+        return VLC_ENOMEM;
 
     memset( p_sys, 0, sizeof( demux_sys_t ) );
     p_sys->i_bitrate = 0;
@@@@ -506,7 +510,7 @@@@ static void Ogg_DecodePacket( demux_t *p_demux,
 
     if( p_stream->b_force_backup )
     {
-        uint8_t *p_extra;
+        uint8_t *p_sav;
         vlc_bool_t b_store_size = VLC_TRUE;
 
         p_stream->i_packets_backup++;
@@@@ -543,27 +547,34 @@@@ static void Ogg_DecodePacket( demux_t *p_demux,
 
         /* Backup the ogg packet (likely an header packet) */
         p_stream->p_headers =
-            realloc( p_stream->p_headers, p_stream->i_headers +
+            realloc( p_sav = p_stream->p_headers, p_stream->i_headers +
                      p_oggpacket->bytes + (b_store_size ? 2 : 0) );
-        p_extra = p_stream->p_headers + p_stream->i_headers;
-        if( b_store_size )
+        if( p_stream->p_headers )
         {
-            *(p_extra++) = p_oggpacket->bytes >> 8;
-            *(p_extra++) = p_oggpacket->bytes & 0xFF;
-        }
-        memcpy( p_extra, p_oggpacket->packet, p_oggpacket->bytes );
-        p_stream->i_headers += p_oggpacket->bytes + (b_store_size ? 2 : 0);
+            uint8_t *p_extra = p_stream->p_headers + p_stream->i_headers;
+            if( b_store_size )
+            {
+                *(p_extra++) = p_oggpacket->bytes >> 8;
+                *(p_extra++) = p_oggpacket->bytes & 0xFF;
+            }
+            memcpy( p_extra, p_oggpacket->packet, p_oggpacket->bytes );
+            p_stream->i_headers += p_oggpacket->bytes + (b_store_size ? 2 : 0);
 
-        if( !p_stream->b_force_backup )
+            if( !p_stream->b_force_backup )
+            {
+                /* Last header received, commit changes */
+                p_stream->fmt.i_extra = p_stream->i_headers;
+                p_stream->fmt.p_extra =
+                    realloc( p_stream->fmt.p_extra, p_stream->i_headers );
+                memcpy( p_stream->fmt.p_extra, p_stream->p_headers,
+                        p_stream->i_headers );
+                es_out_Control( p_demux->out, ES_OUT_SET_FMT,
+                                p_stream->p_es, &p_stream->fmt );
+            }
+        }
+        else
         {
-            /* Last header received, commit changes */
-            p_stream->fmt.i_extra = p_stream->i_headers;
-            p_stream->fmt.p_extra =
-                realloc( p_stream->fmt.p_extra, p_stream->i_headers );
-            memcpy( p_stream->fmt.p_extra, p_stream->p_headers,
-                    p_stream->i_headers );
-            es_out_Control( p_demux->out, ES_OUT_SET_FMT,
-                            p_stream->p_es, &p_stream->fmt );
+            p_stream->p_headers = p_sav;
         }
 
         b_selected = VLC_FALSE; /* Discard the header packet */
@@@@ -728,8 +739,6 @@@@ static int Ogg_FindLogicalStreams( demux_t *p_demux )
     ogg_page oggpage;
     int i_stream;
 
-#define p_stream p_ogg->pp_stream[p_ogg->i_streams - 1]
-
     while( Ogg_ReadPage( p_demux, &oggpage ) == VLC_SUCCESS )
     {
         if( ogg_page_bos( &oggpage ) )
@@@@ -739,12 +748,15 @@@@ static int Ogg_FindLogicalStreams( demux_t *p_demux )
              * We found the beginning of our first logical stream. */
             while( ogg_page_bos( &oggpage ) )
             {
-                p_ogg->i_streams++;
-                p_ogg->pp_stream =
-                    realloc( p_ogg->pp_stream, p_ogg->i_streams *
-                             sizeof(logical_stream_t *) );
+                logical_stream_t **pp_sav = p_ogg->pp_stream;
+                logical_stream_t *p_stream;
 
                 p_stream = malloc( sizeof(logical_stream_t) );
+                if( !p_stream )
+                    return VLC_ENOMEM;
+
+                TAB_APPEND( p_ogg->i_streams, p_ogg->pp_stream, p_stream );
+
                 memset( p_stream, 0, sizeof(logical_stream_t) );
                 p_stream->p_headers = 0;
                 p_stream->secondary_header_packets = 0;
@@@@ -916,12 +928,15 @@@@ static int Ogg_FindLogicalStreams( demux_t *p_demux )
                         p_stream->fmt.i_cat = AUDIO_ES;
 
                         i_extra_size = GetWLE((oggpacket.packet+140));
-                        if( i_extra_size )
+                        if( i_extra_size > 0 && i_extra_size < oggpacket.bytes - 142 )
                         {
                             p_stream->fmt.i_extra = i_extra_size;
                             p_stream->fmt.p_extra = malloc( i_extra_size );
-                            memcpy( p_stream->fmt.p_extra,
-                                    oggpacket.packet + 142, i_extra_size );
+                            if( p_stream->fmt.p_extra )
+                                memcpy( p_stream->fmt.p_extra,
+                                        oggpacket.packet + 142, i_extra_size );
+                            else
+                                p_stream->fmt.i_extra = 0;
                         }
 
                         i_format_tag = GetWLE((oggpacket.packet+124));
@@@@ -966,15 +981,27 @@@@ static int Ogg_FindLogicalStreams( demux_t *p_demux )
                         p_ogg->i_streams--;
                     }
                 }
-                else if( (*oggpacket.packet & PACKET_TYPE_BITS )
-                         == PACKET_TYPE_HEADER &&
-                         oggpacket.bytes >= (int)sizeof(stream_header)+1 )
+                else if( (*oggpacket.packet & PACKET_TYPE_BITS ) == PACKET_TYPE_HEADER &&
+                         oggpacket.bytes >= 56+1 )
                 {
-                    stream_header *st = (stream_header *)(oggpacket.packet+1);
+                    stream_header_t tmp;
+                    stream_header_t *st = &tmp;
 
+                    memcpy( st->streamtype, &oggpacket.packet[1+0], 8 );
+                    memcpy( st->subtype, &oggpacket.packet[1+8], 4 );
+                    st->size = GetDWLE( &oggpacket.packet[1+12] );
+                    st->time_unit = GetQWLE( &oggpacket.packet[1+16] );
+                    st->samples_per_unit = GetQWLE( &oggpacket.packet[1+24] );
+                    st->default_len = GetDWLE( &oggpacket.packet[1+32] );
+                    st->buffersize = GetDWLE( &oggpacket.packet[1+36] );
+                    st->bits_per_sample = GetWLE( &oggpacket.packet[1+40] ); // (padding 2)
+
                     /* Check for video header (new format) */
                     if( !strncmp( st->streamtype, "video", 5 ) )
                     {
+                        st->sh.video.width = GetDWLE( &oggpacket.packet[1+44] );
+                        st->sh.video.height = GetDWLE( &oggpacket.packet[1+48] );
+
                         p_stream->fmt.i_cat = VIDEO_ES;
 
                         /* We need to get rid of the header packet */
@@@@ -987,16 +1014,13 @@@@ static int Ogg_FindLogicalStreams( demux_t *p_demux )
                                  (char *)&p_stream->fmt.i_codec );
 
                         p_stream->fmt.video.i_frame_rate = 10000000;
-                        p_stream->fmt.video.i_frame_rate_base =
-                            GetQWLE(&st->time_unit);
-                        p_stream->f_rate = 10000000.0 /
-                            GetQWLE(&st->time_unit);
-                        p_stream->fmt.video.i_bits_per_pixel =
-                            GetWLE(&st->bits_per_sample);
-                        p_stream->fmt.video.i_width =
-                            GetDWLE(&st->sh.video.width);
-                        p_stream->fmt.video.i_height =
-                            GetDWLE(&st->sh.video.height);
+                        p_stream->fmt.video.i_frame_rate_base = st->time_unit;
+                        if( st->time_unit <= 0 )
+                            st->time_unit = 400000;
+                        p_stream->f_rate = 10000000.0 / st->time_unit;
+                        p_stream->fmt.video.i_bits_per_pixel = st->bits_per_sample;
+                        p_stream->fmt.video.i_width = st->sh.video.width;
+                        p_stream->fmt.video.i_height = st->sh.video.height;
 
                         msg_Dbg( p_demux,
                                  "fps: %f, width:%i; height:%i, bitcount:%i",
@@@@ -1009,36 +1033,42 @@@@ static int Ogg_FindLogicalStreams( demux_t *p_demux )
                     else if( !strncmp( st->streamtype, "audio", 5 ) )
                     {
                         char p_buffer[5];
+                        unsigned int i_extra_size;
                         int i_format_tag;
 
+                        st->sh.audio.channels = GetWLE( &oggpacket.packet[1+44] );
+                        st->sh.audio.blockalign = GetWLE( &oggpacket.packet[1+48] );
+                        st->sh.audio.avgbytespersec = GetDWLE( &oggpacket.packet[1+52] );
+
                         p_stream->fmt.i_cat = AUDIO_ES;
 
                         /* We need to get rid of the header packet */
                         ogg_stream_packetout( &p_stream->os, &oggpacket );
 
-                        p_stream->fmt.i_extra = GetQWLE(&st->size) -
-                            sizeof(stream_header);
-                        if( p_stream->fmt.i_extra )
+                        i_extra_size = st->size - 56;
+
+                        if( i_extra_size > 0 &&
+                            i_extra_size < oggpacket.bytes - 1 - 56 )
                         {
-                            p_stream->fmt.p_extra =
-                                malloc( p_stream->fmt.i_extra );
-                            memcpy( p_stream->fmt.p_extra, st + 1,
-                                    p_stream->fmt.i_extra );
+                            p_stream->fmt.i_extra = i_extra_size;
+                            p_stream->fmt.p_extra = malloc( p_stream->fmt.i_extra );
+                            if( p_stream->fmt.p_extra )
+                                memcpy( p_stream->fmt.p_extra, st + 1,
+                                        p_stream->fmt.i_extra );
+                            else
+                                p_stream->fmt.i_extra = 0;
                         }
 
                         memcpy( p_buffer, st->subtype, 4 );
                         p_buffer[4] = '\0';
                         i_format_tag = strtol(p_buffer,NULL,16);
-                        p_stream->fmt.audio.i_channels =
-                            GetWLE(&st->sh.audio.channels);
-                        p_stream->f_rate = p_stream->fmt.audio.i_rate =
-                            GetQWLE(&st->samples_per_unit);
-                        p_stream->fmt.i_bitrate =
-                            GetDWLE(&st->sh.audio.avgbytespersec) * 8;
-                        p_stream->fmt.audio.i_blockalign =
-                            GetWLE(&st->sh.audio.blockalign);
-                        p_stream->fmt.audio.i_bitspersample =
-                            GetWLE(&st->bits_per_sample);
+                        p_stream->fmt.audio.i_channels = st->sh.audio.channels;
+                        if( st->time_unit <= 0 )
+                            st->time_unit = 10000000;
+                        p_stream->f_rate = p_stream->fmt.audio.i_rate = st->samples_per_unit * 10000000 / st->time_unit;
+                        p_stream->fmt.i_bitrate = st->sh.audio.avgbytespersec * 8;
+                        p_stream->fmt.audio.i_blockalign = st->sh.audio.blockalign;
+                        p_stream->fmt.audio.i_bitspersample = st->bits_per_sample;
 
                         wf_tag_to_fourcc( i_format_tag,
                                           &p_stream->fmt.i_codec, 0 );
@@@@ -1116,7 +1146,6 @@@@ static int Ogg_FindLogicalStreams( demux_t *p_demux )
             return VLC_SUCCESS;
         }
     }
-#undef p_stream
 
     return VLC_EGENERIC;
 }
@@@@ -1374,7 +1403,7 @@@@ static void Ogg_ReadAnnodexHeader( vlc_object_t *p_thi
             uint8_t *p = memchr( &p_oggpacket->packet[42], '\r',
                                  p_oggpacket->bytes - 1 );
             if( p && p[0] == '\r' && p[1] == '\n' )
-                sscanf( (char*)(&p_oggpacket->packet[42]), "%1024s\r\n",
+                sscanf( (char*)(&p_oggpacket->packet[42]), "%1023s\r\n",
                         content_type_string );
         }
 
@


1.7
log
@Pull in integer overflow fixes for TTA, MMS and Ogg.

CVE-2008-3732, CVE-2008-3794

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-modules_demux_ogg_c,v 1.6 2008/03/02 02:27:04 jakemsr Exp $
@


1.6
log
@update to vlc-0.8.6e

This is a bugfix release. VLC media player 0.8.6d and earlier versions
suffer from security vulnerabilities in the Web interface, Subtitle
demuxer, Real RTSP demuxer, SDL_image library and MP4 demuxer.

See http://www.videolan.org/security/sa0801.php and
http://www.videolan.org/security/sa0802.php for more details.

from brad, OK naddy
@
text
@d1 293
a293 4
$OpenBSD: patch-modules_demux_ogg_c,v 1.5 2007/04/22 13:21:12 aanriot Exp $
--- modules/demux/ogg.c.orig	Sun Feb 24 14:01:53 2008
+++ modules/demux/ogg.c	Thu Feb 28 11:18:09 2008
@@@@ -1374,7 +1374,7 @@@@ static void Ogg_ReadAnnodexHeader( vlc_object_t *p_thi
@


1.5
log
@fix a format string by keeping a place for the terminating NUL
character.

ok avsm@@
@
text
@d1 4
a4 4
$OpenBSD$
--- modules/demux/ogg.c.orig	Sun Apr 22 10:52:35 2007
+++ modules/demux/ogg.c	Sun Apr 22 10:53:24 2007
@@@@ -1365,7 +1365,7 @@@@ static void Ogg_ReadAnnodexHeader( vlc_object_t *p_thi
@


1.5.4.1
log
@MFC:
- SECURITY update to 0.8.6c (and various bugfixes, memory leaks)
VideoLAN-SA-0702: format string injection in Vorbis, Theora, SAP and CDDA
plugins
@
text
@d1 4
a4 4
$OpenBSD: patch-modules_demux_ogg_c,v 1.5 2007/04/22 13:21:12 aanriot Exp $
--- modules/demux/ogg.c.orig	Sat Jun 16 16:25:08 2007
+++ modules/demux/ogg.c	Tue Jun 26 20:54:43 2007
@@@@ -1365,7 +1365,7 @@@@ static void Ogg_ReadAnnodexHeader( vlc_o
@


1.5.2.1
log
@MFC:
- SECURITY update to 0.8.6c (and various bugfixes, memory leaks)
VideoLAN-SA-0702: format string injection in Vorbis, Theora, SAP and CDDA
plugins
@
text
@d1 4
a4 4
$OpenBSD: patch-modules_demux_ogg_c,v 1.5 2007/04/22 13:21:12 aanriot Exp $
--- modules/demux/ogg.c.orig	Sat Jun 16 16:25:08 2007
+++ modules/demux/ogg.c	Tue Jun 26 20:59:18 2007
@@@@ -1365,7 +1365,7 @@@@ static void Ogg_ReadAnnodexHeader( vlc_o
@


1.4
log
@update to 0.8.4a
@
text
@d1 10
a10 10
$OpenBSD: patch-modules_demux_ogg_c,v 1.3 2005/07/31 19:07:11 jolan Exp $
--- modules/demux/ogg.c.orig	Sat Jun 25 23:43:06 2005
+++ modules/demux/ogg.c	Sun Jul 10 11:34:56 2005
@@@@ -1345,7 +1345,7 @@@@ static void Ogg_ReadAnnodexHeader( vlc_o
          * the content-type (by the Annodex standard) */
         if( !strncasecmp( &p_oggpacket->packet[28], "Content-Type: ", 14 ) )
         {
-            sscanf( &p_oggpacket->packet[42], "%1024s\r\n",
+            sscanf( &p_oggpacket->packet[42], "%1023s\r\n",
                     content_type_string );
@


1.3
log
@update to 0.8.2

main diff from jsg@@ with some tweaks from me
@
text
@d1 1
a1 1
$OpenBSD: patch-modules_demux_ogg_c,v 1.2 2004/12/16 07:40:20 jolan Exp $
@


1.2
log
@update to 0.8.1
@
text
@d1 4
a4 6
$OpenBSD: patch-modules_demux_ogg_c,v 1.1 2004/07/10 01:49:42 jolan Exp $
--- modules/demux/ogg.c.orig	Sat Nov  6 10:35:11 2004
+++ modules/demux/ogg.c	Wed Dec 15 22:42:47 2004
@@@@ -1317,7 +1317,7 @@@@ static void Ogg_ReadAnnodexHeader( vlc_o
 
         /* we are guaranteed that the first header field will be
d6 6
a11 3
-        sscanf( &p_oggpacket->packet[28], "Content-Type: %1024s\r\n",
+        sscanf( &p_oggpacket->packet[28], "Content-Type: %1023s\r\n",
                 content_type_string );
a12 1
         p_stream->f_rate = (float) granule_rate_numerator /
@


1.1
log
@update to 0.7.2
@
text
@d1 4
a4 4
$OpenBSD$
--- modules/demux/ogg.c.orig	2004-04-28 12:57:49.000000000 -0500
+++ modules/demux/ogg.c	2004-05-25 21:33:16.000000000 -0500
@@@@ -1379,7 +1379,7 @@@@ static void Ogg_ReadAnnodexHeader( vlc_o
@

