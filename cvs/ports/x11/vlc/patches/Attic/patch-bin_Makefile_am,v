head	1.4;
access;
symbols
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2016.01.25.08.00.18;	author sthen;	state dead;
branches;
next	1.3;
commitid	b7LxKyCg6NFdJSJb;

1.3
date	2016.01.05.23.50.56;	author sthen;	state Exp;
branches;
next	1.2;
commitid	cEWCtHf8QKXsx2dF;

1.2
date	2015.11.17.20.26.39;	author sthen;	state dead;
branches;
next	1.1;
commitid	eomrPC6W442kIlp4;

1.1
date	2015.07.13.19.48.13;	author sthen;	state Exp;
branches;
next	;
commitid	p4M00yu7as0klZrF;


desc
@@


1.4
log
@Remove dirty patches now that ld.so's nodelete handling has been improved.
@
text
@$OpenBSD: patch-bin_Makefile_am,v 1.3 2016/01/05 23:50:56 sthen Exp $

XXX Attempt to avoid an intermittent crash in ld.so when running vlc-cache-gen.
See https://marc.info/?t=145123666100001&r=1&w=2

The LD_PRELOAD alone seems to help i386 quite a lot, but doesn't do much
on amd64. But adding the LD_DEBUG=1 seems to improve things a lot there....

--- bin/Makefile.am.orig	Sat Jun 14 16:14:12 2014
+++ bin/Makefile.am	Tue Jan  5 23:30:42 2016
@@@@ -83,6 +83,7 @@@@ MOSTLYCLEANFILES = $(noinst_DATA)
 ../modules/plugins.dat: vlc-cache-gen$(EXEEXT)
 	$(AM_V_at)rm -f ../modules/plugins.dat
 	$(AM_V_GEN)if test "$(build)" = "$(host)"; then \
+		LD_DEBUG=1 LD_PRELOAD=${LOCALBASE}/lib/libgobject-2.0.so:${LOCALBASE}/lib/libnotify.so:${LOCALBASE}/lib/libgmodule-2.0.so \
 		./vlc-cache-gen$(EXEEXT) ../modules ; \
 	else \
 		echo "Cross-compilation: cache generation skipped!" ; \
@


1.3
log
@Add a dirty hack with a combination of LD_PRELOAD and LD_DEBUG that seems
to at least reduce the number of segfaults/bus errors seen when running
vlc-cache-gen as part of the VLC build.

The LD_PRELOAD alone seems to help i386, but doesn't do much for amd64
The LD_DEBUG alone seems to help amd64, but doesn't do much for i386

Not nice, but this is getting to be a big problem in bulk builds (not
least because a bunch of kde4-land depends on this), so trying anything
that might help...

More notes in https://marc.info/?t=145123666100001&r=1&w=2
@
text
@d1 1
a1 1
$OpenBSD: patch-bin_Makefile_am,v 1.1 2015/07/13 19:48:13 sthen Exp $
@


1.2
log
@Remove the LD_PRELOAD workarounds for vlc-cache-gen. I suspect this may have
been due to the recently-fixed ld.so bug with unloading/reloading that was
figured out with SDL2. Also something has changed very recently causing vlc
to fail on i386 ("lazy binding failed") if these patches are *in*.

If the segfaults recur we can figure something else out but I haven't hit
them in hundreds of vlc-cache-gen runs.

OK brad (maintainer).
@
text
@d3 2
a4 1
Seems to avoid an intermittent crash when running vlc-cache-gen.
d6 2
a7 2
Appears related to https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=752544
though in glib2 we do already have -Wl,nodelete when linking libgobject.
d9 3
a11 3
--- bin/Makefile.am.orig	Mon Jul 13 10:09:43 2015
+++ bin/Makefile.am	Mon Jul 13 10:09:58 2015
@@@@ -83,7 +83,7 @@@@ MOSTLYCLEANFILES = $(noinst_DATA)
d15 2
a16 2
-		./vlc-cache-gen$(EXEEXT) ../modules ; \
+		LD_PRELOAD=${LOCALBASE}/lib/libgobject-2.0.so ./vlc-cache-gen$(EXEEXT) ../modules ; \
a18 1
 	fi
@


1.1
log
@Force LD_PRELOAD=/usr/local/lib/libgobject-2.0.so when running vlc-cache-gen,
working around an intermittent crash during build. ok brad@@ aja@@ robert@@

"Some of the plugins are linked (indirectly) to gobject. During the generation
of the plugin cache, these plugins are loaded and unloaded again. In some
circumstances this causes gobject to be unloaded at the wrong time and
vlc-cache-gen crashes." (debian bug 752544)
@
text
@d1 1
a1 1
$OpenBSD$
@

