head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.28
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.26
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.24
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.20
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.22
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.18
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.16
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.14
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.12
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.10
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.8
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	jasper_20100111:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2011.01.16.00.45.56;	author laurent;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.11.15.05.49;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.01.11.15.05.49;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update. Fixes by fabien@@, armani@@, Azwaw OUSADOU and jasper@@ .
@
text
@$OpenBSD: patch-src_lib_dbus_e_dbus_c,v 1.1.1.1 2010/01/11 15:05:49 jasper Exp $

dbus_message_get_path() could return NULL.

--- src/lib/dbus/e_dbus.c.orig	Mon Aug 23 16:28:31 2010
+++ src/lib/dbus/e_dbus.c	Mon Aug 23 16:34:19 2010
@@@@ -371,12 +371,19 @@@@ static DBusHandlerResult
 e_dbus_filter(DBusConnection *conn __UNUSED__, DBusMessage *message, void *user_data)
 {
   E_DBus_Connection *cd = user_data;
+  const char *path;
+
   DBG("-----------------");
   DBG("Message!");
 
   DBG("type: %s", dbus_message_type_to_string(dbus_message_get_type(message)));
+  path = dbus_message_get_path (message);
+  if (path == NULL)
+  path = "";
+
   DBG("path: %s", dbus_message_get_path(message));
-  DBG("interface: %s", dbus_message_get_interface(message));
+/*  DBG("interface: %s", dbus_message_get_interface(message)); */
+  DBG("interface: %s\n", path);
   DBG("member: %s", dbus_message_get_member(message));
   DBG("sender: %s", dbus_message_get_sender(message));
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d5 4
a8 4
--- src/lib/dbus/e_dbus.c.orig	Thu Nov 12 11:08:19 2009
+++ src/lib/dbus/e_dbus.c	Thu Nov 12 11:10:19 2009
@@@@ -371,11 +371,18 @@@@ static DBusHandlerResult
 e_dbus_filter(DBusConnection *conn, DBusMessage *message, void *user_data)
d13 2
a14 1
   DEBUG(3, "-----------------\nMessage!\n\n");
d16 1
a16 2
   DEBUG(3, "type: %s\n", dbus_message_type_to_string(dbus_message_get_type(message)));
+
d19 1
a19 1
+    path = "";
d21 6
a26 5
   DEBUG(3, "path: %s\n", dbus_message_get_path(message));
-  DEBUG(3, "interface: %s\n", dbus_message_get_interface(message));
+  DEBUG(3, "interface: %s\n", path);
   DEBUG(3, "member: %s\n", dbus_message_get_member(message));
   DEBUG(3, "sender: %s\n", dbus_message_get_sender(message));
@


1.1.1.1
log
@import e_dbus 0.5.0.061

This is the start of some basic convenience wrappers around dbus 
to ease integrating dbus with EFL based applications.
When using e_dbus, direct use of the low level dbus api is still 
heavily required for processing messages.

with feedback and tweaks by me.
committing on behalf of laurent@@ 

@
text
@@
