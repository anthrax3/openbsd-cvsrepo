head	1.28;
access;
symbols
	OPENBSD_6_1:1.24.0.2
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.23.0.2
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.20.0.2
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.17.0.4
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.12.0.2
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.11.0.2
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	pascal_20121803:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.28
date	2017.08.22.11.55.01;	author sthen;	state Exp;
branches;
next	1.27;
commitid	ESMR8dTTdSFGVAWV;

1.27
date	2017.07.27.10.15.29;	author sthen;	state Exp;
branches;
next	1.26;
commitid	PsrWOVPIFbDYJl8Z;

1.26
date	2017.05.31.08.08.18;	author espie;	state Exp;
branches;
next	1.25;
commitid	ij92FtFXiSiT1ani;

1.25
date	2017.05.22.08.04.39;	author espie;	state Exp;
branches;
next	1.24;
commitid	TgNhUVn3vmGzVQzX;

1.24
date	2016.12.31.00.29.41;	author jsg;	state Exp;
branches;
next	1.23;
commitid	sBTHqFIXa3FVDnC4;

1.23
date	2016.05.07.12.40.58;	author pascal;	state Exp;
branches;
next	1.22;
commitid	Fec0PsLcTwj1Q99H;

1.22
date	2016.03.18.23.12.21;	author naddy;	state Exp;
branches;
next	1.21;
commitid	KZAl4KEiw6a3Jixw;

1.21
date	2016.02.25.02.19.14;	author jsg;	state Exp;
branches;
next	1.20;
commitid	7EqluVlje3WtS3zf;

1.20
date	2016.01.06.06.39.14;	author ajacoutot;	state Exp;
branches;
next	1.19;
commitid	nWBtAw4JQOBDW9dL;

1.19
date	2015.12.28.08.28.55;	author jasper;	state Exp;
branches;
next	1.18;
commitid	74RGTE0ZacwsFR9u;

1.18
date	2015.08.19.20.34.33;	author sthen;	state Exp;
branches;
next	1.17;
commitid	u0p8xTHc4ptteIkB;

1.17
date	2015.05.28.12.03.57;	author ajacoutot;	state Exp;
branches;
next	1.16;
commitid	4DPiHrL3tpLcbnDL;

1.16
date	2015.05.28.10.17.31;	author pascal;	state Exp;
branches;
next	1.15;
commitid	020U4lCPk8wUkCOz;

1.15
date	2015.01.24.11.11.15;	author landry;	state Exp;
branches;
next	1.14;
commitid	PsGTcgcyUQBd6YGM;

1.14
date	2014.12.30.21.50.25;	author landry;	state Exp;
branches;
next	1.13;
commitid	S07Q8URJzYgrU6Yg;

1.13
date	2014.11.07.10.40.05;	author ajacoutot;	state Exp;
branches;
next	1.12;
commitid	QYJaNcIko4VHoTIl;

1.12
date	2014.07.11.21.20.31;	author pascal;	state Exp;
branches;
next	1.11;
commitid	TWxovmufjvkjJXYy;

1.11
date	2014.01.10.14.47.10;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2013.11.25.14.16.24;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2013.07.09.10.41.36;	author pascal;	state Exp;
branches;
next	1.8;

1.8
date	2013.06.20.14.16.03;	author landry;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.20.13.51.54;	author bcallah;	state Exp;
branches;
next	1.6;

1.6
date	2013.06.19.21.13.15;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2013.06.03.18.50.06;	author pascal;	state Exp;
branches;
next	1.4;

1.4
date	2013.03.11.11.46.14;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2012.10.07.09.37.45;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2012.08.13.10.38.25;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.18.14.31.00;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.03.18.14.31.00;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.28
log
@mark x11/ogre as BROKEN-i386, problem with the mmx code in a clang build on
i386 and no straightforward way to disable.
@
text
@# $OpenBSD: Makefile,v 1.27 2017/07/27 10:15:29 sthen Exp $

BROKEN-hppa =		missing atomic ops
BROKEN-alpha =		missing atomic ops
BROKEN-i386 =		MMX-related problems with clang build

COMMENT-main =		3D rendering engine
COMMENT-samples =	3D rendering engine, demos

V =			1.9.0
DISTNAME =		ogre-$V
PKGNAME-main =		ogre-${V}
PKGNAME-samples =	ogre-samples-${V}
REVISION-main =		4
REVISION-samples =	4

MULTI_PACKAGES =	-main -samples

SHARED_LIBS +=  OgreMain                  2.0 # 1.7
SHARED_LIBS +=  OgrePaging                2.0 # 1.7
SHARED_LIBS +=  OgreProperty              2.0 # 1.7
SHARED_LIBS +=  OgreRTShaderSystem        2.0 # 1.7
SHARED_LIBS +=  OgreTerrain               2.0 # 1.7
SHARED_LIBS +=  OgreOverlay               0.0 # 1.9
SHARED_LIBS +=  OgreVolume                0.0 # 1.9

CATEGORIES =		x11

HOMEPAGE =		http://www.ogre3d.org

MAINTAINER =		Pascal Stumpf <pascal@@stumpf.co>

# MIT
PERMIT_PACKAGE_CDROM =	Yes

WANTLIB += ICE SM X11 Xaw Xext Xt $(MODGCC4_ATOMICWANTLIB)
WANTLIB += boost_atomic-mt boost_date_time-mt
WANTLIB += boost_chrono-mt boost_system-mt boost_thread-mt c
WANTLIB += freeimage freetype m pthread z zzip
WANTLIB += ${COMPILER_LIBCXX}

WANTLIB-main = ${WANTLIB} GL GLU Xrandr tinyxml
WANTLIB-samples += ${WANTLIB} OIS OgreMain OgrePaging OgreRTShaderSystem
WANTLIB-samples += OgreTerrain OgreOverlay OgreVolume


MASTER_SITES =		https://bitbucket.org/sinbad/ogre/get/
DISTFILES =		ogre-$V${EXTRACT_SUFX}{v${V:S/./-/g}${EXTRACT_SUFX}}
#EXTRACT_SUFX =		.tar.bz2

CONFIGURE_ARGS +=	-DOGRE_INSTALL_SAMPLES=1

MODULES =		devel/cmake
COMPILER =		gcc
LIB_DEPENDS =		graphics/freeimage \
			archivers/zziplib \
			devel/boost
LIB_DEPENDS-main =	${LIB_DEPENDS} \
			textproc/tinyxml
LIB_DEPENDS-samples =	${LIB_DEPENDS} \
			devel/ois \
			x11/ogre,-main

NO_TEST =		Yes

WRKDIST =		${WRKDIR}/sinbad-ogre-dd30349ea667

pre-configure:
# Remove obsolete local FindFreetype.cmake module which is not
# compatible with Freetype 2.5
	rm -f ${WRKSRC}/CMake/Packages/FindFreetype.cmake

.include <bsd.port.mk>
@


1.27
log
@add COMPILER_LIBCXX to WANTLIB and bump
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2017/05/31 08:08:18 espie Exp $
d5 1
@


1.26
log
@switch everything to new COMPILER idiom, even stuff that won't build with clang
yet, but at least that part is done.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2017/05/22 08:04:39 espie Exp $
d13 2
a14 2
REVISION-main =		3
REVISION-samples =	3
d39 1
@


1.25
log
@fix packaging with clang, requires -current gcc4.port.mk for gcc4
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2016/12/31 00:29:41 jsg Exp $
d52 1
a52 1
WANT_CXX =		base gcc
@


1.24
log
@ogre already builds with ports gcc, now that the arm baseline is armv6k
builtin atomics are available on arm and this builds so stop marking it
as BROKEN on arm.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2016/05/07 12:40:58 pascal Exp $
d35 2
a36 1
WANTLIB += ICE SM X11 Xaw Xext Xt atomic boost_atomic-mt boost_date_time-mt
d51 2
a52 3
MODULES =		devel/cmake gcc4
MODGCC4_LANGS =		c c++
MODGCC4_ARCHS =		*
@


1.23
log
@Update my mail address.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2016/03/18 23:12:21 naddy Exp $
a2 1
BROKEN-arm =		missing atomic ops
@


1.22
log
@remove SHARED_ONLY from ports that only use modules that neither set nor
read this variable
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2016/02/25 02:19:14 jsg Exp $
d14 2
a15 2
REVISION-main =		2
REVISION-samples =	2
d31 1
a31 1
MAINTAINER =		Pascal Stumpf <Pascal.Stumpf@@cubes.de>
@


1.21
log
@Don't attempt to build on arm.  sync atomic builtins required.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2016/01/06 06:39:14 ajacoutot Exp $
a5 2

SHARED_ONLY =		Yes
@


1.20
log
@Builds fine on sparc64.

from Brad
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2015/12/28 08:28:55 jasper Exp $
d3 1
@


1.19
log
@enable on mips64
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2015/08/19 20:34:33 sthen Exp $
a4 1
BROKEN-sparc64 =	missing atomic ops
@


1.18
log
@sync WANTLIB
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2015/05/28 12:03:57 ajacoutot Exp $
a2 2
BROKEN-mips64 =		missing atomic ops
BROKEN-mips64el =	missing atomic ops
@


1.17
log
@No need to LIB_DEPENDS on lang/gcc/...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2015/05/28 10:17:31 pascal Exp $
d18 2
a19 2
REVISION-main =		1
REVISION-samples =	1
d40 1
a40 1
WANTLIB += ICE SM X11 Xaw Xext Xt atomic boost_date_time-mt
@


1.16
log
@gcc4 bumps, reminded by aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2015/01/24 11:11:15 landry Exp $
d18 2
a19 2
REVISION-main =		0
REVISION-samples =	0
d60 1
a60 2
			devel/boost \
			lang/gcc/${MODGCC4_VERSION},-main
@


1.15
log
@yadada yadada atomic
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2014/12/30 21:50:25 landry Exp $
d18 2
@


1.14
log
@Mark BROKEN-alpha a bunch of ports that reliably failed (!) to build in
the past 3 bulks, or forever.

Various reasons: no d^Hrecent compiler available, base gcc generating
nice internal compiler errors, no atomic ops, etc, etc.

While here, mark all webkits as BROKEN-hppa, since this also requires
clang or g++ 4.7. Our g++ 4.8 port only builds on
i386|amd64|powerpc|sparc64 anyway...

if you're interested^Wbored to death, full past logs at
http://build-failures.rhaalovely.net/alpha/...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2014/11/07 10:40:05 ajacoutot Exp $
d7 1
@


1.13
log
@No need for default CMAKE_BUILD_TYPE.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2014/07/11 21:20:31 pascal Exp $
d6 1
@


1.12
log
@Update to ogre 1.9.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2014/01/10 14:47:10 dcoppa Exp $
d49 1
a49 2
CONFIGURE_ARGS +=	-DCMAKE_BUILD_TYPE:STRING=Release \
			-DOGRE_INSTALL_SAMPLES=1
@


1.11
log
@Fix build with newer FreeType for cmake-based ports
OK naddy@@, landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2013/11/25 14:16:24 sthen Exp $
d12 2
a13 2
V =			1.8.1
DISTNAME =		ogre_src_v${V:S/./-/g}
a15 1
REVISION-main =		0
d19 7
a25 5
SHARED_LIBS +=  OgreMain                  1.0 # 1.7
SHARED_LIBS +=  OgrePaging                1.0 # 1.7
SHARED_LIBS +=  OgreProperty              1.0 # 1.7
SHARED_LIBS +=  OgreRTShaderSystem        1.0 # 1.7
SHARED_LIBS +=  OgreTerrain               1.0 # 1.7
d36 1
a36 1
WANTLIB += ICE SM X11 Xaw Xext Xt boost_date_time-mt
d38 1
a38 1
WANTLIB += freeimage freetype m pthread stdc++ z zzip
d40 1
a40 1
WANTLIB-main = ${WANTLIB} GL GLU Xrandr
d42 1
a42 1
WANTLIB-samples += OgreTerrain
d45 3
a47 2
MASTER_SITES =		${MASTER_SITE_SOURCEFORGE:=ogre/}
EXTRACT_SUFX =		.tar.bz2
d52 3
a54 1
MODULES =		devel/cmake
d57 4
a60 1
			devel/boost
d67 2
d72 1
a72 1
	rm ${WRKSRC}/CMake/Packages/FindFreetype.cmake
@


1.10
log
@kill VMEM_WARNING
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2013/07/09 10:41:36 pascal Exp $
d59 5
@


1.9
log
@* do not pick up tinyxml headers when installed (breaking the build)
* use the default allocator (prevents crashes at runtime for me)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2013/06/20 14:16:03 landry Exp $
a48 2

VMEM_WARNING =		Yes
@


1.8
log
@Surprise b^W! ogre doesnt build on hppa either due to missing atomic bombs..
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2013/06/20 13:51:54 bcallah Exp $
d16 1
d48 1
a48 2
			-DOGRE_INSTALL_SAMPLES=1 \
			-DOGRE_CONFIG_ALLOCATOR=1
@


1.7
log
@This is broken on mips64el as well: missing atomic ops
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2013/06/19 21:13:15 jasper Exp $
d5 1
@


1.6
log
@mark broken on mips64 due to missing atomic ops, i reckon landry
will follow with hppa shortly...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2013/06/03 18:50:06 pascal Exp $
d4 1
@


1.5
log
@Update to 1.8.1; WANTLIB changes by dcoppa@@

ok dcoppa@@ landry@@
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.4 2013/03/11 11:46:14 espie Exp $
@


1.4
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2012/10/07 09:37:45 dcoppa Exp $
d8 1
a8 1
V =			1.7.4
a12 3
REVISION-main =		0
REVISION-samples =	0

d15 5
a19 5
SHARED_LIBS +=  OgreMain                  0.0 # 1.7
SHARED_LIBS +=  OgrePaging                0.0 # 1.7
SHARED_LIBS +=  OgreProperty              0.0 # 1.7
SHARED_LIBS +=  OgreRTShaderSystem        0.0 # 1.7
SHARED_LIBS +=  OgreTerrain               0.0 # 1.7
d31 2
a32 2
WANTLIB += boost_thread-mt c freeimage freetype m pthread stdc++
WANTLIB += z zzip
d43 2
a44 1
			-DOGRE_INSTALL_SAMPLES=1
d50 2
a51 2
			devel/boost \
			archivers/zziplib
@


1.3
log
@
Fix misuse of CMake

While here, install *.cfg files in a location where SampleBrowser
can find them by default and remove obsolete pthread-related
patches...

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2012/08/13 10:38:25 jasper Exp $
a31 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM =Yes
PERMIT_DISTFILES_FTP =	Yes
d58 1
a58 1
NO_REGRESS =		Yes
@


1.2
log
@set VMEM_WARNING
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2012/03/18 14:31:00 pascal Exp $
d13 3
d48 2
a49 1
CONFIGURE_ARGS +=	-DOGRE_INSTALL_SAMPLES=1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d46 2
@


1.1.1.1
log
@OGRE (Object-Oriented Graphics Rendering Engine) is a scene-oriented,
flexible 3D engine written in C++ designed to make it easier and
more intuitive for developers to produce applications utilising
hardware-accelerated 3D graphics. The class library abstracts all
the details of using the underlying system libraries like Direct3D
and OpenGL and provides an interface based on world objects and
other intuitive classes.

lots of feedback & macppc testing mpi@@, also tested by kirby@@ and Antti Harri.

ok kirby@@
@
text
@@
