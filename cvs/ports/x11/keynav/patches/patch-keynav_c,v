head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.2
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.3.0.6
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.05.03.12.32.55;	author jca;	state Exp;
branches;
next	1.3;
commitid	QgvY0OaPSN59oAca;

1.3
date	2016.01.07.19.03.19;	author jasper;	state Exp;
branches;
next	1.2;
commitid	dx1q8isJTVJrgbJY;

1.2
date	2016.01.07.18.40.43;	author jasper;	state Exp;
branches;
next	1.1;
commitid	LJEpN6ZUXtdaovKj;

1.1
date	2015.01.26.12.54.01;	author jca;	state Exp;
branches;
next	;
commitid	uGjvCXOOU6VVA4HX;


desc
@@


1.4
log
@Pull bug fix and missing ctype.h include from upstream.

Fixes build with clang
@
text
@$OpenBSD: patch-keynav_c,v 1.3 2016/01/07 19:03:19 jasper Exp $

From c822edfbc71a23e9710f00a670f353e3b614084c Mon Sep 17 00:00:00 2001
From: Krister Svanlund <krister.svanlund@@gmail.com>
Date: Sat, 26 May 2012 00:02:03 +0200
Subject: [PATCH] Updated keynav to comply with new naming convention of xdotool

From 4372b9f710391ff58ba67c618569da438df382ad Mon Sep 17 00:00:00 2001
From: Krister Svanlund <krister.svanlund@@gmail.com>
Date: Sat, 26 May 2012 00:05:22 +0200
Subject: [PATCH] Replaced XKeycodeToKeysym with XkbKeycodeToKeysym

--- keynav.c.orig
+++ keynav.c
@@@@ -10,10 +10,12 @@@@
 #include <unistd.h>
 #include <string.h>
 #include <errno.h>
+#include <ctype.h>
 #include <sys/types.h>
 #include <sys/wait.h>
 #include <signal.h>
 #include <X11/Xlib.h>
+#include <X11/XKBlib.h>
 #include <X11/Xresource.h>
 #include <X11/Xutil.h>
 #include <X11/keysym.h>
@@@@ -287,7 +289,7 @@@@ int parse_mods(char *keyseq) {
 
   int i = 0;
   /* Use all but the last token as modifiers */
-  const char **symbol_map = xdo_symbol_map();
+  const char **symbol_map = xdo_get_symbol_map();
   for (i = 0; i < mods->len; i++) {
     KeySym keysym = 0;
     int j = 0;
@@@@ -526,7 +528,7 @@@@ int parse_config_line(char *orig_line) {
 
   tokctx = line;
   keyseq = strdup(strtok_r(line, " ", &tokctx));
-  commands = strdup(tokctx);
+  commands = (tokctx != NULL) ? strdup(tokctx) : NULL;
 
   /* A special config option that will clear all keybindings */
   if (strcmp(keyseq, "clear") == 0) {
@@@@ -849,7 +851,7 @@@@ void cmd_start(char *args) {
 
     zone = XCreateSimpleWindow(dpy, viewport->root,
                                wininfo.x, wininfo.y, wininfo.w, wininfo.h, 0, 0, 0);
-    xdo_window_setclass(xdo, zone, "keynav", "keynav");
+    xdo_set_window_class(xdo, zone, "keynav", "keynav");
     canvas_gc = XCreateGC(dpy, zone, 0, NULL);
 
     canvas = XCreatePixmap(dpy, zone, viewport->w, viewport->h,
@@@@ -1012,7 +1014,7 @@@@ void cmd_cursorzoom(char *args) {
     height = width;
   }
 
-  xdo_mouselocation(xdo, &xloc, &yloc, NULL);
+  xdo_get_mouse_location(xdo, &xloc, &yloc, NULL);
 
   wininfo.x = xloc - (width / 2);
   wininfo.y = yloc - (height / 2);
@@@@ -1026,7 +1028,7 @@@@ void cmd_windowzoom(char *args) {
   Window dummy_win;
   int x, y, width, height, border_width, depth;
 
-  xdo_window_get_active(xdo, &curwin);
+  xdo_get_active_window(xdo, &curwin);
   XGetGeometry(xdo->xdpy, curwin, &rootwin, &x, &y, &width, &height,
                &border_width, &depth);
   XTranslateCoordinates(xdo->xdpy, curwin, rootwin, 
@@@@ -1055,8 +1057,8 @@@@ void cmd_warp(char *args) {
   mouseinfo.y = y - wininfo.y;
   openpixel(dpy, zone, &mouseinfo);
 
-  xdo_mousemove(xdo, x, y, viewports[wininfo.curviewport].screen_num);
-  xdo_mouse_wait_for_move_to(xdo, x, y);
+  xdo_move_mouse(xdo, x, y, viewports[wininfo.curviewport].screen_num);
+  xdo_wait_for_mouse_move_to(xdo, x, y);
 
   /* TODO(sissel): do we need to open again? */
   openpixel(dpy, zone, &mouseinfo);
@@@@ -1069,7 +1071,7 @@@@ void cmd_click(char *args) {
   int button;
   button = atoi(args);
   if (button > 0)
-    xdo_click(xdo, CURRENTWINDOW, button);
+    xdo_click_window(xdo, CURRENTWINDOW, button);
   else
     fprintf(stderr, "Negative mouse button is invalid: %d\n", button);
 }
@@@@ -1107,19 +1109,19 @@@@ void cmd_drag(char *args) {
 
   if (ISDRAGGING) { /* End dragging */
     appstate.dragging = False;
-    xdo_mouseup(xdo, CURRENTWINDOW, button);
+    xdo_mouse_up(xdo, CURRENTWINDOW, button);
   } else { /* Start dragging */
     cmd_warp(NULL);
     appstate.dragging = True;
-    xdo_keysequence_down(xdo, 0, drag_modkeys, 12000);
-    xdo_mousedown(xdo, CURRENTWINDOW, button);
+    xdo_send_keysequence_window_down(xdo, 0, drag_modkeys, 12000);
+    xdo_mouse_down(xdo, CURRENTWINDOW, button);
 
     /* Sometimes we need to move a little to tell the app we're dragging */
     /* TODO(sissel): Make this a 'mousewiggle' command */
-    xdo_mousemove_relative(xdo, 1, 0);
-    xdo_mousemove_relative(xdo, -1, 0);
+    xdo_move_mouse_relative(xdo, 1, 0);
+    xdo_move_mouse_relative(xdo, -1, 0);
     XSync(xdo->xdpy, 0);
-    xdo_keysequence_up(xdo, 0, drag_modkeys, 12000);
+    xdo_send_keysequence_window_up(xdo, 0, drag_modkeys, 12000);
   }
 }
 
@@@@ -1464,7 +1466,7 @@@@ handler_info_t handle_recording(XKeyEvent *e) {
 
   //printf("Recording as keycode:%d\n", e->keycode);
   active_recording->keycode = e->keycode;
-  return;
+  return HANDLE_CONTINUE;
 }
 
 handler_info_t handle_gridnav(XKeyEvent *e) {
@@@@ -1477,7 +1479,7 @@@@ handler_info_t handle_gridnav(XKeyEvent *e) {
     index += 1;
   }
 
-  KeySym sym = XKeycodeToKeysym(dpy, e->keycode, index);
+  KeySym sym = XkbKeycodeToKeysym(dpy, e->keycode, 0, index);
   char *key = XKeysymToString(sym);
 
   if (sym == XK_Escape) {
@


1.3
log
@merge another patch from upstream to stop using a deprecated function
@
text
@d1 1
a1 1
$OpenBSD: patch-keynav_c,v 1.2 2016/01/07 18:40:43 jasper Exp $
d13 8
a20 3
--- keynav.c.orig	Wed Oct 13 09:27:51 2010
+++ keynav.c	Thu Jan  7 20:01:01 2016
@@@@ -14,6 +14,7 @@@@
d28 1
a28 1
@@@@ -287,7 +288,7 @@@@ int parse_mods(char *keyseq) {
d37 1
a37 1
@@@@ -526,7 +527,7 @@@@ int parse_config_line(char *orig_line) {
d46 1
a46 1
@@@@ -849,7 +850,7 @@@@ void cmd_start(char *args) {
d55 1
a55 1
@@@@ -1012,7 +1013,7 @@@@ void cmd_cursorzoom(char *args) {
d64 1
a64 1
@@@@ -1026,7 +1027,7 @@@@ void cmd_windowzoom(char *args) {
d73 1
a73 1
@@@@ -1055,8 +1056,8 @@@@ void cmd_warp(char *args) {
d84 1
a84 1
@@@@ -1069,7 +1070,7 @@@@ void cmd_click(char *args) {
d93 1
a93 1
@@@@ -1107,19 +1108,19 @@@@ void cmd_drag(char *args) {
d119 10
a128 1
@@@@ -1477,7 +1478,7 @@@@ handler_info_t handle_gridnav(XKeyEvent *e) {
@


1.2
log
@sync with xdo api
@
text
@d1 1
a1 1
$OpenBSD: patch-keynav_c,v 1.1 2015/01/26 12:54:01 jca Exp $
d8 5
d14 10
a23 2
+++ keynav.c	Thu Jan  7 19:39:24 2016
@@@@ -287,7 +287,7 @@@@ int parse_mods(char *keyseq) {
d32 1
a32 1
@@@@ -526,7 +526,7 @@@@ int parse_config_line(char *orig_line) {
d41 1
a41 1
@@@@ -849,7 +849,7 @@@@ void cmd_start(char *args) {
d50 1
a50 1
@@@@ -1012,7 +1012,7 @@@@ void cmd_cursorzoom(char *args) {
d59 1
a59 1
@@@@ -1026,7 +1026,7 @@@@ void cmd_windowzoom(char *args) {
d68 1
a68 1
@@@@ -1055,8 +1055,8 @@@@ void cmd_warp(char *args) {
d79 1
a79 1
@@@@ -1069,7 +1069,7 @@@@ void cmd_click(char *args) {
d88 1
a88 1
@@@@ -1107,19 +1107,19 @@@@ void cmd_drag(char *args) {
d114 9
@


1.1
log
@Update to keynav-0.20101014.3067.

- upstream versioning change -> use EPOCH
- MAKE_FLAGS instead of Makefile patching (bonus: respect DEBUG=-g)
- patch to avoid a segfault at runtime

This now uses libxdo from x11/xdotool instead of a bundled version, and
cairo for drawing.

Missing gettext MODULE spotted by ajacoutot@@.  ok landry@@
@
text
@d1 7
a7 1
$OpenBSD$
d9 10
a18 1
+++ keynav.c	Mon Jan 26 01:39:45 2015
d28 73
@

