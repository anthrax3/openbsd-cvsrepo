head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.36
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.32
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.34
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.30
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.28
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.26
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.24
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.22
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.20
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.18
	OPENBSD_5_0:1.2.0.16
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.14
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.12
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.10
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.6
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.4
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2
	ajacoutot_20071219:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2007.12.20.11.53.24;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2007.12.19.16.09.34;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.12.19.16.09.34;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- add a patch from Debian to automatically copy the default openbox menu
if none exist in the user's homedir
- remove trailing space from shebang that would prevent obm-nav from
working

requested by and ok sthen@@
@
text
@$OpenBSD: patch-obmenu,v 1.1.1.1 2007/12/19 16:09:34 ajacoutot Exp $
--- obmenu.orig	Thu Feb  2 13:03:38 2006
+++ obmenu	Thu Dec 20 09:49:59 2007
@@@@ -462,9 +462,12 @@@@ class App:
 			self.remove(None)
 	
 	def show_about(self, args):
-		#gtk.glade.XML("/usr/local/share/obmenu/obmenu.glade", "aboutdialog1")
-		gtk.glade.XML(self.gladefile, "aboutdialog1")
-		
+		self.aboutdialog.show()
+
+	def close_about(self, *args):
+		self.aboutdialog.hide()	
+		return True
+
 	# application init
 	def init(self):
 		if len(sys.argv) == 2:
@@@@ -472,6 +475,36 @@@@ class App:
 			self.menu_path = sys.argv[1]
 		elif len(sys.argv) == 1:
 			self.menu_path = os.getenv("HOME") + "/.config/openbox/menu.xml"
+			if not os.path.isfile("%s/.config/openbox/menu.xml" % (os.getenv("HOME"))):				
+				if not os.path.isdir("%s/.config/" % (os.getenv("HOME"))):
+					try:
+						os.mkdir("%s/.config/" % (os.getenv("HOME")))
+					except:
+						print "Error: Can't create ~/.config directory!"
+						return
+					
+				if not os.path.isdir("%s/.config/openbox" % (os.getenv("HOME"))):
+					try:
+						os.mkdir("%s/.config/openbox" % (os.getenv("HOME")))
+					except:
+						print "Error: Can't create ~/.config/openbox directory!"
+						return
+			
+				if not os.path.isfile("!!SYSCONFDIR!!/xdg/openbox/menu.xml"):
+					print "Error: Couldn't find default menu file!"
+					return
+				
+				try:
+					orig = open("!!SYSCONFDIR!!/xdg/openbox/menu.xml", "r")
+					dest = open("%s/.config/openbox/menu.xml" % (os.getenv("HOME")), "w")
+					dest.write(orig.read())
+					orig.close()
+					dest.close()
+				except:
+					print "Error: Couldn't create default menu file!"
+					return
+		elif len(sys.argv) == 1:
+			self.menu_path = os.getenv("HOME") + "/.config/openbox/menu.xml"
 		else:
 			print "Error: Wrong number of arguments"
 			print "Usage: obmenu /path/to/menu.xml"
@@@@ -503,6 +536,10 @@@@ class App:
 		
 		# Set the basics for GTK
 		self.arbol = gtk.glade.XML(self.gladefile, "window1")
+		self.about = gtk.glade.XML(self.gladefile, "aboutdialog1")
+		self.aboutdialog=self.about.get_widget("aboutdialog1")
+		self.aboutdialog.connect ('delete-event', self.close_about)
+		self.aboutdialog.connect ('response', self.close_about)
 		
 		self.treeview=self.arbol.get_widget("treeview1")
 		self.label_entry = self.arbol.get_widget("entry1")
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ obmenu	Wed Dec 19 15:10:23 2007
d20 38
a57 1
@@@@ -503,6 +506,10 @@@@ class App:
@


1.1.1.1
log
@Import obmenu-1.0

Obmenu is a menu editor designed for openbox. It's easy to use, allowing
to get the most out of the powerful Openbox menu system, while hiding
the xml layout from the user.
It also (optionally) installs a bunch of dynamic menus (pipe menus),
such as Gnome menus or a quick-navigator.
You can also use the obxml module to easily write pipe menus of your own
in Python.

"looks fine" sthen@@, ok jasper@@
@
text
@@
