head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.2
	OPENBSD_6_2_BASE:1.1.1.1
	robert_20170430:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2017.04.30.19.01.28;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	xFEC3HxT1BdvNwMZ;

1.1.1.1
date	2017.04.30.19.01.28;	author robert;	state Exp;
branches;
next	;
commitid	xFEC3HxT1BdvNwMZ;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- configure.ac.orig	Mon Mar 13 12:16:31 2017
+++ configure.ac	Tue Mar 28 20:28:07 2017
@@@@ -532,6 +532,44 @@@@ if test "x$have_libgl" = "xyes"; then
 fi
 
 dnl ---------------------------------------------------------------------------
+dnl - Check for bsd_auth(3) (OpenBSD)
+dnl ---------------------------------------------------------------------------
+have_bsdauth=no
+with_bsdauth_req=unspecified
+NEED_SETUID=no
+
+case "$host" in
+  *-openbsd*)
+    with_bsdauth=yes
+    AUTH_SCHEME=bsdauth
+    NEED_SETUID=no
+    if test "x$enable_locking" = "xyes"; then
+      with_bsdauth_req=yes
+      NEED_SETUID=yes
+    fi
+esac
+
+if test "$with_bsdauth" = yes ; then
+  AC_CACHE_CHECK([for BSD Authentication], ac_cv_bsdauth,
+    [AC_TRY_X_COMPILE([#include <stdlib.h>
+                       #include <unistd.h>
+                       #include <sys/types.h>
+                       #include <bsd_auth.h>],
+      [int ok = auth_userokay("x", 0, "x", "x");],
+      [ac_cv_bsdauth=yes],
+      [ac_cv_bsdauth=no])])
+  if test "$ac_cv_bsdauth" = yes; then
+    have_bsdauth=yes
+  fi
+fi
+
+if test "$have_bsdauth" = yes; then
+  AC_DEFINE(HAVE_BSDAUTH, 1, [Define to 1 if using bsd_auth(3) authentication])
+fi
+
+AC_SUBST(NEED_SETUID)
+
+dnl ---------------------------------------------------------------------------
 dnl - Check for PAM
 dnl ---------------------------------------------------------------------------
 
@@@@ -540,7 +578,7 @@@@ AC_ARG_ENABLE(pam, AC_HELP_STRING([--enable-pam],
                    [Enable PAM support @@<:@@default=auto@@:>@@],
                    ),,enable_pam=auto)
 
-if test "x$enable_locking" = "xyes" -a  "x$enable_pam" != "xno"; then
+if test "x$enable_locking" = "xyes" -a "x$enable_pam" != "xno" -a "x$have_bsdauth" = "xno"; then
 AC_CHECK_LIB(pam, pam_start, have_pam=yes)
 fi
 if test "x$have_pam" = "xyes"; then
@@@@ -823,7 +861,7 @@@@ dnl  Authentication scheme
 dnl ---------------------------------------------------------------------------
 
 AC_ARG_ENABLE(authentication-scheme,
-  [  --enable-authentication-scheme=[auto/pam/helper/pwent]  Choose a specific
+  [  --enable-authentication-scheme=[auto/pam/helper/pwent/bsdauth]  Choose a specific
                           authentication scheme [default=auto]],,
   enable_authentication_scheme=auto)
 
@@@@ -835,6 +873,9 @@@@ fi
 if test x$enable_authentication_scheme = xhelper -a x$have_passwd_helper = xno ; then
 	AC_MSG_ERROR(Password helper support requested but not available)
 fi
+if test x$enable_authentication_scheme = xbsdauth -a x$have_bsdauth = xno ; then
+	AC_MSG_ERROR(bsd_auth(3) support requested but not available)
+fi
 
 if test x$enable_authentication_scheme = xpam ; then
         AUTH_SCHEME="pam"
@@@@ -842,11 +883,15 @@@@ elif test x$enable_authentication_scheme = xhelper ; t
         AUTH_SCHEME="helper"
 elif test x$enable_authentication_scheme = xpwent ; then
         AUTH_SCHEME="pwent"
+elif test x$enable_authentication_scheme = xbsdauth ; then
+	AUTH_SCHEME="bsdauth"
 elif test x$enable_authentication_scheme = xauto ; then
 	if test x$have_pam != xno ; then
 		AUTH_SCHEME="pam"
 	elif test x$have_passwd_helper != xno ; then
 		AUTH_SCHEME="helper"
+	elif test x$have_bsdauth != xno ; then
+		AUTH_SCHEME="bsdauth"
 	else
 		AUTH_SCHEME="pwent"
         fi
@@@@ -1127,6 +1172,7 @@@@ echo "
         ConsoleKit support:       ${use_console_kit}
         libnotify support:        ${have_libnotify}
         PAM support:              ${have_pam}
+        bsd_auth(3) support:      ${have_bsdauth}
         Have shadow passwords:    ${have_shadow}
         Have adjunct shadow:      ${have_shadow_adjunct}
         Have enhanced shadow:     ${have_shadow_enhanced}
@


1.1.1.1
log
@Initial import of the MATE Desktop Environment (version 1.18)...

The MATE Desktop Environment is the continuation of GNOME 2.
It provides an intuitive and attractive desktop environment, using
traditional metaphors for Linux and other Unix-like operating systems.

This is imported as WIP (almost done though) to ease review.

ok @@ajacoutot

This import contains the following parts of MATE (not hooked up yet):

- mate/atril
document viewer for the MATE desktop

- mate/calc
MATE calculator

- mate/caja
file manager for the MATE desktop

- mate/caja-extensions
extensions for Caja, the MATE file manager

- mate/control-center
MATE control center

- mate/desktop
components for the MATE desktop

- mate/engrampa
file archiver for the MATE desktop

- mate/eom
image viewer for the MATE desktop

- mate/icon-theme
base icon theme for MATE

- mate/libmatekbd
MATE keyboard configuration library

- mate/libmatemixer
mixer library for MATE desktop

- mate/libmateweather
weather library for MATE

- mate/marco
the MATE window manager

- mate/media
media tools for the MATE desktop

- mate/menus
implementation of the FreeDesktop menu spec for MATE

- mate/notification-daemon
MATE notification daemon

- mate/panel
panel component for MATE

- mate/pluma
powerful text editor for the MATE desktop

- mate/power-manager
MATE power manager

- mate/screensaver
MATE screensaver

- mate/session-manager
MATE session manager

- mate/settings-daemon
MATE settings daemon

- mate/terminal
MATE terminal

- mate/themes
standard MATE themes

- mate/utils
MATE support utilities
@
text
@@
