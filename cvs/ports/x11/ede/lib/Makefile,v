head	1.15;
access;
symbols
	OPENBSD_6_1:1.12.0.2
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	pascal_20130714:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.15
date	2017.07.16.19.19.04;	author espie;	state Exp;
branches;
next	1.14;
commitid	tt0GhWK5c4uf9ILG;

1.14
date	2017.05.08.15.40.05;	author naddy;	state Exp;
branches;
next	1.13;
commitid	D234cq3g1dd8RySh;

1.13
date	2017.04.10.11.46.35;	author sthen;	state Exp;
branches;
next	1.12;
commitid	HY6VNZxjJWzKQFDV;

1.12
date	2017.02.04.23.50.28;	author jca;	state Exp;
branches;
next	1.11;
commitid	wlw75EgWUT3RlO2S;

1.11
date	2016.12.23.20.59.58;	author naddy;	state Exp;
branches;
next	1.10;
commitid	zjIYq2JywYS7jDRB;

1.10
date	2016.11.12.20.50.41;	author jca;	state Exp;
branches;
next	1.9;
commitid	th66k4baTD5nVdHy;

1.9
date	2016.05.07.12.40.58;	author pascal;	state Exp;
branches;
next	1.8;
commitid	Fec0PsLcTwj1Q99H;

1.8
date	2016.03.20.16.12.26;	author naddy;	state Exp;
branches;
next	1.7;
commitid	guiZq8cnNbVyyHzx;

1.7
date	2016.03.11.11.48.28;	author naddy;	state Exp;
branches;
next	1.6;
commitid	me9dZDhw9spZRyJ6;

1.6
date	2016.03.01.20.36.40;	author jca;	state Exp;
branches;
next	1.5;
commitid	Nl10DDuJoZCwTwMi;

1.5
date	2015.08.17.19.10.11;	author sthen;	state Exp;
branches;
next	1.4;
commitid	4CippZtWcqcVBaoK;

1.4
date	2015.06.28.13.34.54;	author bcallah;	state Exp;
branches;
next	1.3;
commitid	wcAdbsxokIP3M9Fb;

1.3
date	2015.04.04.09.21.05;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	kS3kwKZogsvzYmEY;

1.2
date	2014.07.11.21.39.04;	author pascal;	state Exp;
branches;
next	1.1;
commitid	2GOZeWCKfslubvwH;

1.1
date	2013.07.14.00.36.30;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.07.14.00.36.30;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.15
log
@use COMPILER_LIBCXX where applicable
@
text
@# $OpenBSD: Makefile,v 1.14 2017/05/08 15:40:05 naddy Exp $

COMMENT =		equinox desktop library

DISTNAME =		edelib-${V}
REVISION =		7

API_VER =		1.0
.for l in edelib edelib_dbus edelib_gui
SHARED_LIBS +=		$l	${API_VER}
.endfor

WANTLIB += X11 Xau Xcursor Xdmcp Xext Xfixes Xft Xinerama c dbus-1
WANTLIB += fltk fltk_images fontconfig jpeg m png pthread ${COMPILER_LIBCXX} z

MODULES =		lang/python
BUILD_DEPENDS =		devel/jam
LIB_DEPENDS =		x11/fltk \
			x11/dbus

MAKE_ENV =		EDE_VERSION="${FULL_V}"

CONFIGURE_STYLE =	gnu
CONFIGURE_ARGS +=	--enable-shared
CONFIGURE_ENV =		API_VER="${API_VER}" \
			ac_cv_path_DOXYGEN=""

NO_TEST =		Yes

MODPY_ADJ_FILES =	tools/edelib-convert-icontheme \
			tools/edelib-mk-indextheme \
			tools/edelib-mime-find

do-build:
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} jam -d x

do-install:
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${ALL_FAKE_FLAGS} \
		DESTDIR=${WRKINST} jam -d x install

.include <bsd.port.mk>
@


1.14
log
@add missing non-inline declarations for clang
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2017/04/10 11:46:35 sthen Exp $
d14 1
a14 1
WANTLIB += fltk fltk_images fontconfig jpeg m png pthread ${LIBCXX} z
@


1.13
log
@use LIBCXX
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2017/02/04 23:50:28 jca Exp $
d6 1
a6 1
REVISION =		6
@


1.12
log
@Remove doxygen docs.

Tweaked diff from Rafael Sadowski.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2016/12/23 20:59:58 naddy Exp $
d14 1
a14 1
WANTLIB += fltk fltk_images fontconfig jpeg m png pthread stdc++ z
@


1.11
log
@devel/doxygen,-main -> devel/doxygen
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2016/11/12 20:50:41 jca Exp $
d6 1
a6 1
REVISION =		5
d17 1
a17 2
BUILD_DEPENDS =		devel/jam \
			devel/doxygen
d25 2
a26 1
CONFIGURE_ENV =		API_VER="${API_VER}"
@


1.10
log
@Update to doxygen-1.8.12 and switch the gui to Qt5

From Rafael Sadowski, who takes maintainership.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2016/05/07 12:40:58 pascal Exp $
d18 1
a18 1
			devel/doxygen,-main
@


1.9
log
@Update my mail address.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2016/03/20 16:12:26 naddy Exp $
d6 1
a6 1
REVISION =		4
@


1.8
log
@drop SHARED_ONLY from python and ruby ports
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2016/03/11 11:48:28 naddy Exp $
d6 1
a6 1
REVISION =		3
@


1.7
log
@requires --enable-shared
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.6 2016/03/01 20:36:40 jca Exp $

SHARED_ONLY =		Yes
@


1.6
log
@Update to doxygen-1.8.11 (latest)

This switches doxygen to the cmake build system.

All the hard work done by Rafael Sadowski, thanks!

Bulk build and ok ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2015/08/17 19:10:11 sthen Exp $
d27 1
a27 1
CONFIGURE_ARGS +=	${CONFIGURE_SHARED}
@


1.5
log
@sync WANTLIB
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2015/06/28 13:34:54 bcallah Exp $
d8 1
a8 1
REVISION =		2
@


1.4
log
@Bring in some upstream patches that allow EDE to build with FLTK 1.3.3
ok aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2015/04/04 09:21:05 ajacoutot Exp $
d8 1
a8 1
REVISION =		1
d15 2
a16 2
WANTLIB += X11 Xau Xdmcp Xext Xft Xinerama c dbus-1 fltk fltk_images
WANTLIB += fontconfig jpeg m png pthread stdc++ z
@


1.3
log
@Bump after the recent changes in packaging dbus and dconf.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2014/07/11 21:39:04 pascal Exp $
d8 1
a8 1
REVISION =		0
@


1.2
log
@Update to EDE 2.1.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/07/14 00:36:30 pascal Exp $
d8 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d9 1
a9 1
API_VER =		0.0
d32 2
a33 1
			tools/edelib-mk-indextheme
@


1.1.1.1
log
@Import EDE.

EDE (Equinox Desktop Environment) is simple and fast desktop
environment with familiar look and feel. EDE uses FLTK toolkit for
GUI presentation and UNIX philosophy for its design.

With UNIX philosophy, EDE splits each component in separate executable
entity to do one job and do it good. This makes EDE very easy to
alter for user needs and requirements.

EDE is light and fast. It uses C++ carefully yielding fast startup,
low memory usage and great portability. Also, we care not only about
how fast EDE runs, but how much time is needed to compile it.

These facts makes EDE a perfect desktop environment for older
computers and embedded devices. But, you can use it on your everyday
hardware too.

Comments landry@@ jca@@

ok landry@@
@
text
@@
