head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.12
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.10
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	pascal_20130714:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.09.17.07.47.38;	author espie;	state Exp;
branches;
next	1.2;
commitid	VPObhB2w3dPzkAFj;

1.2
date	2014.07.11.21.39.04;	author pascal;	state Exp;
branches;
next	1.1;
commitid	2GOZeWCKfslubvwH;

1.1
date	2013.07.14.00.36.31;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.07.14.00.36.31;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.3
log
@dkstat.h again
@
text
@$OpenBSD: patch-ede-panel_applets_cpu-monitor_CpuMonitor_cpp,v 1.2 2014/07/11 21:39:04 pascal Exp $
--- ede-panel/applets/cpu-monitor/CpuMonitor.cpp.orig	Sat Jun 21 15:24:21 2014
+++ ede-panel/applets/cpu-monitor/CpuMonitor.cpp	Wed Sep 17 01:46:03 2014
@@@@ -36,20 +36,24 @@@@
 # include <string.h> /* strncmp */
 #endif
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
 # include <sys/param.h>
 # include <sys/sysctl.h>
+#if defined(__OpenBSD__)
+#include <sys/sched.h>
+#else
 # if __FreeBSD_version < 500101
 #  include <sys/dkstat.h>
 # else
 #  include <sys/resource.h>
 # endif
+#endif
 # include <sys/stat.h>
 #endif
 
 #include "CpuMonitor.h"
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
 
 /* The part ripped from top... */
 /*
@@@@ -481,15 +485,18 @@@@ void CPUMonitor::get_cpu_info() {
 
 #endif /* have_kstat_h */
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
 	size_t len = sizeof(cp_time);
+	int mib[2];
 
 	cpu[samples()-1][IWM_USER] = 0;
 	cpu[samples()-1][IWM_NICE] = 0;
 	cpu[samples()-1][IWM_SYS] = 0;
 	cpu[samples()-1][IWM_IDLE] = 0;
 
-	if (sysctlbyname("kern.cp_time", &cp_time, &len, NULL, 0) == -1)
+	mib[0] = CTL_KERN;
+	mib[1] = KERN_CPTIME;
+	if (sysctl(mib, 2, &cp_time, &len, NULL, 0) == -1)
 		return; /* FIXME : need err handler? */
 
 	percentages(CPUSTATES, cpu_states, cp_time, cp_old, cp_diff);
@


1.2
log
@Update to EDE 2.1.
@
text
@d1 4
a4 4
$OpenBSD: patch-ede-panel_applets_cpu-monitor_CpuMonitor_cpp,v 1.1.1.1 2013/07/14 00:36:31 pascal Exp $
--- ede-panel/applets/cpu-monitor/CpuMonitor.cpp.orig	Sat Jun 21 23:24:21 2014
+++ ede-panel/applets/cpu-monitor/CpuMonitor.cpp	Fri Jul 11 19:07:04 2014
@@@@ -36,7 +36,7 @@@@
d12 3
d16 7
a22 1
@@@@ -49,7 +49,7 @@@@
d31 1
a31 1
@@@@ -481,15 +481,18 @@@@ void CPUMonitor::get_cpu_info() {
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
$OpenBSD$
--- ede-panel/applets/cpu-monitor/CpuMonitor.cpp.orig	Fri May 18 14:51:27 2012
+++ ede-panel/applets/cpu-monitor/CpuMonitor.cpp	Wed Jul 10 17:49:45 2013
@@@@ -30,7 +30,7 @@@@
 # include <kstat.h>
d13 2
a14 2
@@@@ -44,7 +44,7 @@@@
 #include "Applet.h"
d22 1
a22 1
@@@@ -477,15 +477,18 @@@@ void CPUMonitor::get_cpu_info() {
@


1.1.1.1
log
@Import EDE.

EDE (Equinox Desktop Environment) is simple and fast desktop
environment with familiar look and feel. EDE uses FLTK toolkit for
GUI presentation and UNIX philosophy for its design.

With UNIX philosophy, EDE splits each component in separate executable
entity to do one job and do it good. This makes EDE very easy to
alter for user needs and requirements.

EDE is light and fast. It uses C++ carefully yielding fast startup,
low memory usage and great portability. Also, we care not only about
how fast EDE runs, but how much time is needed to compile it.

These facts makes EDE a perfect desktop environment for older
computers and embedded devices. But, you can use it on your everyday
hardware too.

Comments landry@@ jca@@

ok landry@@
@
text
@@
