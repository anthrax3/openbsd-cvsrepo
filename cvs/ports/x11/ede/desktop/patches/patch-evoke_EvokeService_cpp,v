head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	pascal_20130714:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.07.11.21.39.04;	author pascal;	state Exp;
branches;
next	1.1;
commitid	2GOZeWCKfslubvwH;

1.1
date	2013.07.14.00.36.31;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.07.14.00.36.31;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to EDE 2.1.
@
text
@$OpenBSD: patch-evoke_EvokeService_cpp,v 1.1.1.1 2013/07/14 00:36:31 pascal Exp $

Don't provide shutdown and restart options.  They do not work without HAL.

--- evoke/EvokeService.cpp.orig	Sat Jun 21 23:24:42 2014
+++ evoke/EvokeService.cpp	Fri Jul 11 19:07:10 2014
@@@@ -66,8 +66,11 @@@@ EDELIB_NS_USING(EDBUS_SYSTEM)
 #endif
 
 /* stolen from xfce's xfsm-shutdown-helper */
-#if defined(__DragonFly__) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__)
+#if defined(__DragonFly__) || defined(__FreeBSD__) || defined(__NetBSD__)
 # define POWEROFF_CMD  "/sbin/shutdown -p now"
+# define REBOOT_CMD    "/sbin/shutdown -r now"
+#elif defined(__OpenBSD__)
+# define POWEROFF_CMD  "/sbin/shutdown -hp now"
 # define REBOOT_CMD    "/sbin/shutdown -r now"
 #elif defined(sun) || defined(__sun)
 # define POWEROFF_CMD  "/usr/sbin/shutdown -i 5 -g 0 -y"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- evoke/EvokeService.cpp.orig	Fri May 18 14:51:51 2012
+++ evoke/EvokeService.cpp	Sat Jul 13 13:29:49 2013
@@@@ -58,9 +58,12 @@@@ EDELIB_NS_USING(FILE_TEST_IS_REGULAR)
d14 1
a14 1
 # define REBOOT_CMD    "/sbin/shutdown -r now"
d17 1
a17 1
+# define REBOOT_CMD    "/sbin/shutdown -r now"
a19 25
 # define REBOOT_CMD    "/usr/sbin/shutdown -i 6 -g 0 -y"
@@@@ -100,7 +103,9 @@@@ static void send_dbus_ede_quit(void) {
 
 static bool do_shutdown_or_restart(bool restart) {
 	const char *action;
+	int r;
 
+#ifndef __OpenBSD__
 	EdbusConnection c;
 	if(!c.connect(EDBUS_SYSTEM)) {
 		alert(_("Unable to connect to HAL daemon. Make sure both D-BUS and HAL daemons are running"));
@@@@ -131,11 +136,12 @@@@ static bool do_shutdown_or_restart(bool restart) {
 	if((*it).to_bool() == true)
 		return true;
 
-	int r = ask(_("You are not allowed to execute this command. Please consult ConsoleKit documentation on how to allow privileged actions. "
+	r = ask(_("You are not allowed to execute this command. Please consult ConsoleKit documentation on how to allow privileged actions. "
 				  "Would you like to try to execute system commands?"));
 
 	/* try to do things manually */
 	if(!r) return false;
+#endif
 	const char *cmd = _("restart");
 
 	if(restart) {
@


1.1.1.1
log
@Import EDE.

EDE (Equinox Desktop Environment) is simple and fast desktop
environment with familiar look and feel. EDE uses FLTK toolkit for
GUI presentation and UNIX philosophy for its design.

With UNIX philosophy, EDE splits each component in separate executable
entity to do one job and do it good. This makes EDE very easy to
alter for user needs and requirements.

EDE is light and fast. It uses C++ carefully yielding fast startup,
low memory usage and great portability. Also, we care not only about
how fast EDE runs, but how much time is needed to compile it.

These facts makes EDE a perfect desktop environment for older
computers and embedded devices. But, you can use it on your everyday
hardware too.

Comments landry@@ jca@@

ok landry@@
@
text
@@
