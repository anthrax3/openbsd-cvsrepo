head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	pascal_20130714:1.1.1.1
	pascal:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.07.11.21.39.04;	author pascal;	state Exp;
branches;
next	1.1;
commitid	2GOZeWCKfslubvwH;

1.1
date	2013.07.14.00.36.31;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.07.14.00.36.31;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to EDE 2.1.
@
text
@$OpenBSD: patch-configure,v 1.1.1.1 2013/07/14 00:36:31 pascal Exp $
--- configure.orig	Sat Jun 21 23:24:54 2014
+++ configure	Fri Jul 11 19:07:04 2014
@@@@ -5171,12 +5171,7 @@@@ $as_echo "$COMPOSITE_CFLAGS" >&6; }
             { $as_echo "$as_me:${as_lineno-$LINENO}: checking COMPOSITE_LIBS" >&5
 $as_echo_n "checking COMPOSITE_LIBS... " >&6; }
             ## don't use --libs since that can do evil things like add -Wl,--export-dynamic
-            if test "$SHELL" = "/bin/ksh"; then
-                ## ksh does not do escaping properly
-                COMPOSITE_LIBS="`$PKG_CONFIG --libs-only-L "xcomposite, xdamage, xext"` `$PKG_CONFIG --libs-only-l "xcomposite, xdamage, xext"`"
-            else
-                COMPOSITE_LIBS="`$PKG_CONFIG --libs-only-L \"xcomposite, xdamage, xext\"` `$PKG_CONFIG --libs-only-l \"xcomposite, xdamage, xext\"`"
-            fi
+            COMPOSITE_LIBS="`$PKG_CONFIG --libs-only-L 'xcomposite, xdamage, xext'` `$PKG_CONFIG --libs-only-l 'xcomposite, xdamage, xext'`"
 
             COMPOSITE_VERSION=`$PKG_CONFIG --modversion "xcomposite, xdamage, xext"`
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: $COMPOSITE_LIBS" >&5
@@@@ -5408,12 +5403,7 @@@@ $as_echo "$LIBSTARTUP_NOTIFICATION_CFLAGS" >&6; }
             { $as_echo "$as_me:${as_lineno-$LINENO}: checking LIBSTARTUP_NOTIFICATION_LIBS" >&5
 $as_echo_n "checking LIBSTARTUP_NOTIFICATION_LIBS... " >&6; }
             ## don't use --libs since that can do evil things like add -Wl,--export-dynamic
-            if test "$SHELL" = "/bin/ksh"; then
-                ## ksh does not do escaping properly
-                LIBSTARTUP_NOTIFICATION_LIBS="`$PKG_CONFIG --libs-only-L "libstartup-notification-1.0"` `$PKG_CONFIG --libs-only-l "libstartup-notification-1.0"`"
-            else
-                LIBSTARTUP_NOTIFICATION_LIBS="`$PKG_CONFIG --libs-only-L \"libstartup-notification-1.0\"` `$PKG_CONFIG --libs-only-l \"libstartup-notification-1.0\"`"
-            fi
+            LIBSTARTUP_NOTIFICATION_LIBS="`$PKG_CONFIG --libs-only-L 'libstartup-notification-1.0'` `$PKG_CONFIG --libs-only-l 'libstartup-notification-1.0'`"
 
             LIBSTARTUP_NOTIFICATION_VERSION=`$PKG_CONFIG --modversion "libstartup-notification-1.0"`
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIBSTARTUP_NOTIFICATION_LIBS" >&5
@@@@ -5531,12 +5521,7 @@@@ $as_echo "$EDELIB_CFLAGS" >&6; }
             { $as_echo "$as_me:${as_lineno-$LINENO}: checking EDELIB_LIBS" >&5
 $as_echo_n "checking EDELIB_LIBS... " >&6; }
             ## don't use --libs since that can do evil things like add -Wl,--export-dynamic
-            if test "$SHELL" = "/bin/ksh"; then
-                ## ksh does not do escaping properly
-                EDELIB_LIBS="`$PKG_CONFIG --libs-only-L "edelib"` `$PKG_CONFIG --libs-only-l "edelib"`"
-            else
-                EDELIB_LIBS="`$PKG_CONFIG --libs-only-L \"edelib\"` `$PKG_CONFIG --libs-only-l \"edelib\"`"
-            fi
+            EDELIB_LIBS="`$PKG_CONFIG --libs-only-L 'edelib'` `$PKG_CONFIG --libs-only-l 'edelib'`"
 
             EDELIB_VERSION=`$PKG_CONFIG --modversion "edelib"`
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: $EDELIB_LIBS" >&5
@@@@ -5645,12 +5630,7 @@@@ $as_echo "$EDELIB_GUI_CFLAGS" >&6; }
             { $as_echo "$as_me:${as_lineno-$LINENO}: checking EDELIB_GUI_LIBS" >&5
 $as_echo_n "checking EDELIB_GUI_LIBS... " >&6; }
             ## don't use --libs since that can do evil things like add -Wl,--export-dynamic
-            if test "$SHELL" = "/bin/ksh"; then
-                ## ksh does not do escaping properly
-                EDELIB_GUI_LIBS="`$PKG_CONFIG --libs-only-L "edelib-gui"` `$PKG_CONFIG --libs-only-l "edelib-gui"`"
-            else
-                EDELIB_GUI_LIBS="`$PKG_CONFIG --libs-only-L \"edelib-gui\"` `$PKG_CONFIG --libs-only-l \"edelib-gui\"`"
-            fi
+            EDELIB_GUI_LIBS="`$PKG_CONFIG --libs-only-L 'edelib-gui'` `$PKG_CONFIG --libs-only-l 'edelib-gui'`"
 
             EDELIB_GUI_VERSION=`$PKG_CONFIG --modversion "edelib-gui"`
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: $EDELIB_GUI_LIBS" >&5
@@@@ -5759,12 +5739,7 @@@@ $as_echo "$EDELIB_GUI_NO_IMAGES_CFLAGS" >&6; }
             { $as_echo "$as_me:${as_lineno-$LINENO}: checking EDELIB_GUI_NO_IMAGES_LIBS" >&5
 $as_echo_n "checking EDELIB_GUI_NO_IMAGES_LIBS... " >&6; }
             ## don't use --libs since that can do evil things like add -Wl,--export-dynamic
-            if test "$SHELL" = "/bin/ksh"; then
-                ## ksh does not do escaping properly
-                EDELIB_GUI_NO_IMAGES_LIBS="`$PKG_CONFIG --libs-only-L "edelib-gui-no-images"` `$PKG_CONFIG --libs-only-l "edelib-gui-no-images"`"
-            else
-                EDELIB_GUI_NO_IMAGES_LIBS="`$PKG_CONFIG --libs-only-L \"edelib-gui-no-images\"` `$PKG_CONFIG --libs-only-l \"edelib-gui-no-images\"`"
-            fi
+            EDELIB_GUI_NO_IMAGES_LIBS="`$PKG_CONFIG --libs-only-L 'edelib-gui-no-images'` `$PKG_CONFIG --libs-only-l 'edelib-gui-no-images'`"
 
             EDELIB_GUI_NO_IMAGES_VERSION=`$PKG_CONFIG --modversion "edelib-gui-no-images"`
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: $EDELIB_GUI_NO_IMAGES_LIBS" >&5
@@@@ -5873,12 +5848,7 @@@@ $as_echo "$EDELIB_DBUS_CFLAGS" >&6; }
             { $as_echo "$as_me:${as_lineno-$LINENO}: checking EDELIB_DBUS_LIBS" >&5
 $as_echo_n "checking EDELIB_DBUS_LIBS... " >&6; }
             ## don't use --libs since that can do evil things like add -Wl,--export-dynamic
-            if test "$SHELL" = "/bin/ksh"; then
-                ## ksh does not do escaping properly
-                EDELIB_DBUS_LIBS="`$PKG_CONFIG --libs-only-L "edelib-dbus"` `$PKG_CONFIG --libs-only-l "edelib-dbus"`"
-            else
-                EDELIB_DBUS_LIBS="`$PKG_CONFIG --libs-only-L \"edelib-dbus\"` `$PKG_CONFIG --libs-only-l \"edelib-dbus\"`"
-            fi
+            EDELIB_DBUS_LIBS="`$PKG_CONFIG --libs-only-L 'edelib-dbus'` `$PKG_CONFIG --libs-only-l 'edelib-dbus'`"
 
             EDELIB_DBUS_VERSION=`$PKG_CONFIG --modversion "edelib-dbus"`
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: $EDELIB_DBUS_LIBS" >&5
@@@@ -6904,8 +6874,6 @@@@ else
 		LIBICONV="-L$iconv_path/lib -liconv"
 		INCICONV="-I$iconv_path/include"
 
-$as_echo "#define ICONV_CONST 1" >>confdefs.h
-
 	fi
 fi
 
@@@@ -7044,12 +7012,7 @@@@ $as_echo "$xft_CFLAGS" >&6; }
             { $as_echo "$as_me:${as_lineno-$LINENO}: checking xft_LIBS" >&5
 $as_echo_n "checking xft_LIBS... " >&6; }
             ## don't use --libs since that can do evil things like add -Wl,--export-dynamic
-            if test "$SHELL" = "/bin/ksh"; then
-                ## ksh does not do escaping properly
-                xft_LIBS="`$PKG_CONFIG --libs-only-L "xft >= 2.0.0"` `$PKG_CONFIG --libs-only-l "xft >= 2.0.0"`"
-            else
-                xft_LIBS="`$PKG_CONFIG --libs-only-L \"xft >= 2.0.0\"` `$PKG_CONFIG --libs-only-l \"xft >= 2.0.0\"`"
-            fi
+            xft_LIBS="`$PKG_CONFIG --libs-only-L 'xft >= 2.0.0'` `$PKG_CONFIG --libs-only-l 'xft >= 2.0.0'`"
 
             xft_VERSION=`$PKG_CONFIG --modversion "xft >= 2.0.0"`
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: $xft_LIBS" >&5
@@@@ -7175,12 +7138,7 @@@@ $as_echo "$xrandr_CFLAGS" >&6; }
             { $as_echo "$as_me:${as_lineno-$LINENO}: checking xrandr_LIBS" >&5
 $as_echo_n "checking xrandr_LIBS... " >&6; }
             ## don't use --libs since that can do evil things like add -Wl,--export-dynamic
-            if test "$SHELL" = "/bin/ksh"; then
-                ## ksh does not do escaping properly
-                xrandr_LIBS="`$PKG_CONFIG --libs-only-L "xrandr >= 1.2.0"` `$PKG_CONFIG --libs-only-l "xrandr >= 1.2.0"`"
-            else
-                xrandr_LIBS="`$PKG_CONFIG --libs-only-L \"xrandr >= 1.2.0\"` `$PKG_CONFIG --libs-only-l \"xrandr >= 1.2.0\"`"
-            fi
+            xrandr_LIBS="`$PKG_CONFIG --libs-only-L 'xrandr >= 1.2.0'` `$PKG_CONFIG --libs-only-l 'xrandr >= 1.2.0'`"
 
             xrandr_VERSION=`$PKG_CONFIG --modversion "xrandr >= 1.2.0"`
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: $xrandr_LIBS" >&5
@@@@ -7782,12 +7740,7 @@@@ $as_echo "$libpng_CFLAGS" >&6; }
             { $as_echo "$as_me:${as_lineno-$LINENO}: checking libpng_LIBS" >&5
 $as_echo_n "checking libpng_LIBS... " >&6; }
             ## don't use --libs since that can do evil things like add -Wl,--export-dynamic
-            if test "$SHELL" = "/bin/ksh"; then
-                ## ksh does not do escaping properly
-                libpng_LIBS="`$PKG_CONFIG --libs-only-L "libpng >= 1.0.0"` `$PKG_CONFIG --libs-only-l "libpng >= 1.0.0"`"
-            else
-                libpng_LIBS="`$PKG_CONFIG --libs-only-L \"libpng >= 1.0.0\"` `$PKG_CONFIG --libs-only-l \"libpng >= 1.0.0\"`"
-            fi
+            libpng_LIBS="`$PKG_CONFIG --libs-only-L 'libpng >= 1.0.0'` `$PKG_CONFIG --libs-only-l 'libpng >= 1.0.0'`"
 
             libpng_VERSION=`$PKG_CONFIG --modversion "libpng >= 1.0.0"`
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: $libpng_LIBS" >&5
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- configure.orig	Fri May 18 14:52:16 2012
+++ configure	Fri May 25 18:33:02 2012
@@@@ -5087,12 +5087,7 @@@@ $as_echo "$COMPOSITE_CFLAGS" >&6; }
d18 1
a18 1
@@@@ -5324,12 +5319,7 @@@@ $as_echo "$LIBSTARTUP_NOTIFICATION_CFLAGS" >&6; }
d32 1
a32 1
@@@@ -5449,12 +5439,7 @@@@ $as_echo "$EDELIB_CFLAGS" >&6; }
d46 1
a46 1
@@@@ -5563,12 +5548,7 @@@@ $as_echo "$EDELIB_GUI_CFLAGS" >&6; }
d60 1
a60 1
@@@@ -5677,12 +5657,7 @@@@ $as_echo "$EDELIB_GUI_NO_IMAGES_CFLAGS" >&6; }
d74 1
a74 1
@@@@ -5791,12 +5766,7 @@@@ $as_echo "$EDELIB_DBUS_CFLAGS" >&6; }
d88 1
a88 1
@@@@ -6764,8 +6734,6 @@@@ else
d97 1
a97 1
@@@@ -6904,12 +6872,7 @@@@ $as_echo "$xft_CFLAGS" >&6; }
d111 1
a111 1
@@@@ -7035,12 +6998,7 @@@@ $as_echo "$xrandr_CFLAGS" >&6; }
d125 1
a125 1
@@@@ -7642,12 +7600,7 @@@@ $as_echo "$libpng_CFLAGS" >&6; }
@


1.1.1.1
log
@Import EDE.

EDE (Equinox Desktop Environment) is simple and fast desktop
environment with familiar look and feel. EDE uses FLTK toolkit for
GUI presentation and UNIX philosophy for its design.

With UNIX philosophy, EDE splits each component in separate executable
entity to do one job and do it good. This makes EDE very easy to
alter for user needs and requirements.

EDE is light and fast. It uses C++ carefully yielding fast startup,
low memory usage and great portability. Also, we care not only about
how fast EDE runs, but how much time is needed to compile it.

These facts makes EDE a perfect desktop environment for older
computers and embedded devices. But, you can use it on your everyday
hardware too.

Comments landry@@ jca@@

ok landry@@
@
text
@@
