head	1.5;
access;
symbols
	jasoni_1998_DEC_3:1.1.1.1 jasoni:1.1.1;
locks; strict;
comment	@# @;


1.5
date	99.02.07.02.32.37;	author jasoni;	state dead;
branches;
next	1.4;

1.4
date	98.12.28.22.51.49;	author jasoni;	state Exp;
branches;
next	1.3;

1.3
date	98.12.20.18.24.44;	author jasoni;	state Exp;
branches;
next	1.2;

1.2
date	98.12.18.08.13.40;	author jasoni;	state Exp;
branches;
next	1.1;

1.1
date	98.12.04.00.29.20;	author jasoni;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.12.04.00.29.20;	author jasoni;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to 0.51.0
@
text
@--- libPropList/filehandling.c.orig	Sat Oct 17 15:58:37 1998
+++ libPropList/filehandling.c	Fri Dec 25 15:04:44 1998
@@@@ -17,6 +17,10 @@@@
 #include <string.h>
 #include <unistd.h>
 
+#ifdef HAVE_MKSTEMP
+#	include <limits.h>
+#endif
+
 #define pl_scan_string(c) yy_scan_string(c)
 #define plparse() yyparse()
 #define pl_delete_buffer(b) yy_delete_buffer(b)
@@@@ -345,22 +349,34 @@@@
 
 BOOL PLSave(proplist_t pl, BOOL atomically)
 {
+#ifdef HAVE_MKSTEMP
+  char theFileName[ PATH_MAX+1 ] = "\0";
+  const char *tempmask = ".XXXXXXXXXX";
+#else
   const char *theFileName;
-  const char *theRealFileName = NULL;
   char tmp_fileName[255];
   char tmp_realFileName[255];
   char dirname[255];
   char *tmp_dirname, *tmp2_dirname;
   char *basename, *tmp_basename;
+#endif
+  const char *theRealFileName = NULL;
   FILE *theFile;
   int c;
   char *desc = NULL;
   
   theRealFileName = PLGetString(PLGetFilename(pl));
   if(!theRealFileName) return NO;
-  
+
   if (atomically)
     {
+#ifdef HAVE_MKSTEMP 
+       if (strlen( theRealFileName )+strlen( tempmask ) > PATH_MAX)
+         goto failure;  /* path too long to create temporary file */
+       strncpy( theFileName, theRealFileName, PATH_MAX );
+       strncat( theFileName, tempmask, PATH_MAX - strlen( theFileName ) );
+       theFile = fdopen( mkstemp( theFileName ), "w" );	
+#else
       theFileName = tmpnam(NULL);
       strcpy(tmp_fileName, theFileName);
 
@@@@ -389,14 +405,21 @@@@
 	} 
       
       theFileName = strcat(dirname, basename);
+#endif
     } 
   else
     { 
+#ifdef HAVE_MKSTEMP
+      theFile = fopen( theRealFileName, "w" );
+#else
       theFileName = theRealFileName;
+#endif
     } 
 
+#ifndef HAVE_MKSTEMP
   /* Open the file (whether temp or real) for writing. */
   theFile = fopen(theFileName, "w");
+#endif
 
   if (theFile == NULL)          /* Something went wrong; we weren't
                                  * even able to open the file. */
@


1.4
log
@Some cleanup: krw@@tcn.net
@
text
@@


1.3
log
@Fixes: krw@@tcn.net
@
text
@d2 2
a3 3
+++ libPropList/filehandling.c	Sat Dec 19 23:04:09 1998
@@@@ -16,6 +16,7 @@@@
 #include <stdlib.h>
a5 1
+#include <limits.h>
d7 4
d13 2
a14 1
@@@@ -345,58 +346,30 @@@@
d18 1
a18 1
-  const char *theFileName;
d21 11
a31 8
   const char *theRealFileName = NULL;
-  char tmp_fileName[255];
-  char tmp_realFileName[255];
-  char dirname[255];
-  char *tmp_dirname, *tmp2_dirname;
-  char *basename, *tmp_basename;
-  FILE *theFile;
+  FILE *theFile = NULL;
d36 2
a38 3
   if(!theRealFileName) return NO;
   
+  /* Open the file (whether temp or real) for writing. */
d41 1
a41 28
-      theFileName = tmpnam(NULL);
-      strcpy(tmp_fileName, theFileName);
-
-      if((tmp_basename=strtok(tmp_fileName, "/")))
-	do
-	  basename=tmp_basename;
-	while((tmp_basename=strtok(NULL, "/")));
-      else
-	basename=(char *)theFileName;
-	
-      strcpy(tmp_realFileName, theRealFileName);
-      dirname[0]='\0';
-
-      if((tmp_dirname=strtok(tmp_realFileName, "/")))
- 	{
-	  if(theRealFileName[0]=='/')
-	    strcat(dirname, "/");
-	  tmp2_dirname = strtok(NULL, "/");
-	  while((tmp2_dirname)) 
-	    { 
-	      strcat(dirname, tmp_dirname); 
-	      strcat(dirname, "/"); 
-	      tmp_dirname = tmp2_dirname; 
-	      tmp2_dirname = strtok(NULL, "/"); 
-	    } 
-	} 
-      
-      theFileName = strcat(dirname, basename);
d45 1
a45 1
+       strncpy( theFileName, tempmask, PATH_MAX - strlen( theRealFileName ) );
d47 9
d59 5
a63 2
-      theFileName = theRealFileName;
+       theFile = fopen( theRealFileName, "w" );
d65 5
a69 3
-
-  /* Open the file (whether temp or real) for writing. */
-  theFile = fopen(theFileName, "w");
a72 1

@


1.2
log
@New patch: apollo@@slcnet.net
@
text
@d1 2
a2 2
--- libPropList/filehandling.c.orig	Fri Dec 18 01:58:03 1998
+++ libPropList/filehandling.c	Fri Dec 18 01:58:16 1998
d7 1
a7 1
+#include <dirent.h>
d11 15
a25 9
@@@@ -350,45 +351,80 @@@@
   char tmp_fileName[255];
   char tmp_realFileName[255];
   char dirname[255];
+  char dirbase[50]={"/tmp"};
+  char mkstmpname[20]={"/tmp/wmaker.XXXXXX"};
   char *tmp_dirname, *tmp2_dirname;
   char *basename, *tmp_basename;
   FILE *theFile;
d28 2
a29 5
-  
+  int i,temp_safe; 
+  DIR *diro; 
+  struct dirent *dire;
+  struct stat safe_stat;
a30 1
   theRealFileName = PLGetString(PLGetFilename(pl));
d33 1
d38 1
a38 27
+#ifdef HAVE_MKSTEMP /* THIS IS THE MKSTEMP STUFF. FOR OPENBSD, ETC. */
+	/* im an idiot. this made wmaker crash. */ 
+	temp_safe = mkstemp(mkstmpname);
+	if((fstat(temp_safe,&safe_stat))!=0)
+		goto failure;
+	desc=PLGetDescriptionIndent(pl,0);
+	theFile=fdopen(temp_safe,"r+");
+	c=fwrite(desc,sizeof(char),strlen(desc),theFile);
+	if(c<strlen(desc))
+		goto failure;
+	fwrite("\n",sizeof(char),strlen("\n"),theFile);
+	diro=opendir(dirbase);
+	dire=readdir(diro);
+	while(safe_stat.st_ino!=dire->d_ino)
+		dire=readdir(diro);
+	fclose(theFile);
+	strncpy(tmp_fileName,dirbase,4);
+	tmp_fileName[5]='\0';
+	strncat(tmp_fileName,"/",1);
+	strncat(tmp_fileName,dire->d_name,15); /* should normally be under 15 */
+	c=rename(tmp_fileName,theRealFileName);
+	closedir(diro);
+	if(c!=0)
+		goto failure;
+	else
+		goto success;
 
d64 5
a68 30
+#else /* the old code for the tmp file */ 
+
+  theFileName = tmpnam(NULL);
+  strcpy(tmp_fileName, theFileName);
+	      
+   if((tmp_basename=strtok(tmp_fileName, "/")))
+    do
+      basename=tmp_basename;
+    while((tmp_basename=strtok(NULL, "/")));
+   else
+    basename=(char *)theFileName;
+				      
+  strcpy(tmp_realFileName, theRealFileName);
+  dirname[0]='\0';
+						    
+  if((tmp_dirname=strtok(tmp_realFileName, "/")))
+  {
+	if(theRealFileName[0]=='/')
+	  strcat(dirname, "/");
+	tmp2_dirname = strtok(NULL, "/");
+    while((tmp2_dirname))
+	{
+	strcat(dirname, tmp_dirname);
+    	strcat(dirname, "/");
+  	tmp_dirname = tmp2_dirname;
+	tmp2_dirname = strtok(NULL, "/");
+	}
+    }
+   theFileName = strcat(dirname, basename);
+#endif
d72 6
a77 9
@@@@ -436,9 +472,10 @@@@
 	goto failure;
     }
 
-  /* success: */
+ success:
   MyFree(__FILE__, __LINE__, desc);
   return YES;
+
d79 3
a81 2
   /* Just in case the failure action needs to be changed. */
  failure:
@


1.1
log
@Initial revision
@
text
@d1 29
a29 3
--- libPropList/filehandling.c.orig	Thu Dec  3 17:13:17 1998
+++ libPropList/filehandling.c	Thu Dec  3 17:23:01 1998
@@@@ -361,9 +361,15 @@@@
d33 1
a33 6
+	  int tmpfd;
+	  char tmpfilename[] = "/var/tmp/tmp.XXXXXXXXXX";
+	  tmpfd = mkstemp(tmpfilename);
+	  strcpy(theFileName, tmpfilename);
+	  /*
       theFileName = tmpnam(NULL);
d35 36
d72 60
a131 6
+      */
+	  strcpy(tmp_fileName, theFileName);
+	  close(tmpfd);
       if((tmp_basename=strtok(tmp_fileName, "/")))
 	do
 	  basename=tmp_basename;
@


1.1.1.1
log
@Add WindowMaker window manager to ports.
@
text
@@
