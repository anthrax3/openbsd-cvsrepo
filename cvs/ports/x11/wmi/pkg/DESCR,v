head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.52
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.50
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.48
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.44
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.46
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.42
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.40
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.38
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.36
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.34
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.32
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.30
	OPENBSD_5_0:1.1.1.1.0.28
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.26
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.24
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.22
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.20
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.18
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.16
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.14
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.12
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.10
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.8
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.6
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	sturm_2004-Oct-17:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2004.10.17.07.36.55;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.10.17.07.36.55;	author sturm;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@WMI is a new lightweight window manager for X11, which attempts to
combine the best features of LarsWM, Ion , evilwm and ratpoison
into one window manager.

WMI is new: it is developed from scratch with C++ without any ancient
code and design dependencies to antiquated window managers.

WMI is lightweight: it has no build- or runtime dependencies except the
C++ Standard Template Library (STL) and the X11 Library (XLib).

WMI is highly customizable: it is designed with keyboard users in mind.
Each action (e.g. resizing the frame, creating a new workspace,
launching an app, note that WMI provides hundreds of actions) can be
bound to a shortcut. So say good-bye to the rodent :)

WMI is the vim among the window managers: its main user interaction is
oriented on the two modes of the famous vi editor - command mode and
normal mode. In WMI the command mode is called input mode and supports
the context-sensitive execution of actions. Outside this mode, only
actions which are bound to a shortcut can be invoked.

WMI is flexible: it is able to arrange multiple clients in one frame in
a maximized way, like Ion does, or to arrange them floating within
groups of the workspace. The track behavior of larswm can be emulated
through using two or more frames in a neighbor arrangement.

WMI is evil: The snap to border behavior of evilwm and its fast window
moving through mouse grabbing can be emulated with floating clients too
(just try Alt + mouse move over floating clients).

WMI is simple to customize: there's no need to learn Lua for
customization of the WMI, like Ion or TrsWM does. Only simple property
files, which are maintainable without the knowledge of yet another
Turing-complete scripting language.
@


1.1.1.1
log
@Initial import of wmi-10

WMI is a new lightweight window manager for X11, which attempts to
combine the best features of LarsWM, Ion , evilwm and ratpoison
into one window manager.

WWW: http://wmi.modprobe.de/

from Julian Frede <julian.frede at gmail.com>
@
text
@@
