head	1.2;
access;
symbols
	OPENBSD_6_1:1.1.0.14
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.04.25.15.00.55;	author espie;	state Exp;
branches;
next	1.1;
commitid	lzpgkRtLUAKmJ9Ww;

1.1
date	2013.09.01.12.49.11;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@you can cheat only so far with not declaring timeval, so use the actual
definition.

clang++ pedantically figures out that operator ::timeval  isn't callable
(how would you name it!) so it emits warnings all the time, so just
kill it out.
@
text
@$OpenBSD: patch-lib_Timer_hh,v 1.1 2013/09/01 12:49:11 sthen Exp $

64bit time_t fix.

--- lib/Timer.hh.orig	Fri Mar 18 10:07:09 2005
+++ lib/Timer.hh	Tue Apr 25 16:42:58 2017
@@@@ -31,23 +31,17 @@@@
 #include <queue>
 #include <vector>
 
-// forward declare to avoid the header
-struct timeval;
+#include <sys/time.h>
 
 namespace bt {
 
   // use a wrapper class to avoid the header as well
-  struct timeval {
-    long tv_sec;
-    long tv_usec;
+  struct timeval : public ::timeval {
 
     inline timeval(void)
-      : tv_sec(0l), tv_usec(0l)
-    { }
-    inline timeval(long s, long u)
-      : tv_sec(s), tv_usec(u)
-    { }
-
+    { tv_sec = 0; tv_usec = 0; }
+    inline timeval(time_t s, long u)
+    { tv_sec = s; tv_usec = u; }
     bool operator<(const timeval &);
     timeval operator+(const timeval &);
     timeval &operator+=(const timeval &tv);
@@@@ -57,7 +51,7 @@@@ namespace bt {
     // POSIX<->bt conversion
     timeval(const ::timeval &);
     timeval &operator=(const ::timeval &);
-    operator ::timeval() const;
+//    operator ::timeval() const;
   };
 
   timeval normalizeTimeval(const timeval &tm);
@@@@ -106,7 +100,7 @@@@ namespace bt {
     inline void recurring(bool b)
     { recur = b; }
 
-    void setTimeout(long t);
+    void setTimeout(time_t t);
     void setTimeout(const timeval &t);
 
     void start(void);  // manager acquires timer
@


1.1
log
@blackbox patches from patrick keshishian,

- improvement in handling of UTF-8 window titles, see
http://marc.info/?l=openbsd-ports&m=137339931231574&w=2

- 64-bit time_t fix

- avoid "deprecated conversion from string constant to 'char*'" warnings

also sync wantlib and drop USE_GROFF while there.
@
text
@d1 1
a1 1
$OpenBSD$
d5 10
a14 3
--- lib/Timer.hh.orig	Fri Mar 18 01:07:09 2005
+++ lib/Timer.hh	Sat Aug 17 22:43:03 2013
@@@@ -37,16 +37,12 @@@@ struct timeval;
d29 1
a32 1
 
d35 11
a45 1
@@@@ -106,7 +102,7 @@@@ namespace bt {
@

