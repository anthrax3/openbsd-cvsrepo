head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.14
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.09.01.12.49.11;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@blackbox patches from patrick keshishian,

- improvement in handling of UTF-8 window titles, see
http://marc.info/?l=openbsd-ports&m=137339931231574&w=2

- 64-bit time_t fix

- avoid "deprecated conversion from string constant to 'char*'" warnings

also sync wantlib and drop USE_GROFF while there.
@
text
@$OpenBSD$

64bit time_t fix.

--- lib/Timer.hh.orig	Fri Mar 18 01:07:09 2005
+++ lib/Timer.hh	Sat Aug 17 22:43:03 2013
@@@@ -37,16 +37,12 @@@@ struct timeval;
 namespace bt {
 
   // use a wrapper class to avoid the header as well
-  struct timeval {
-    long tv_sec;
-    long tv_usec;
+  struct timeval : public ::timeval {
 
     inline timeval(void)
-      : tv_sec(0l), tv_usec(0l)
-    { }
-    inline timeval(long s, long u)
-      : tv_sec(s), tv_usec(u)
-    { }
+    { tv_sec = 0; tv_usec = 0; }
+    inline timeval(time_t s, long u)
+    { tv_sec = s; tv_usec = u; }
 
     bool operator<(const timeval &);
     timeval operator+(const timeval &);
@@@@ -106,7 +102,7 @@@@ namespace bt {
     inline void recurring(bool b)
     { recur = b; }
 
-    void setTimeout(long t);
+    void setTimeout(time_t t);
     void setTimeout(const timeval &t);
 
     void start(void);  // manager acquires timer
@
