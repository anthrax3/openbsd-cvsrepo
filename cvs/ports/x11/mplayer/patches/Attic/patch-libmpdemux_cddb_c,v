head	1.4;
access;
symbols
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_1:1.3.0.2
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2008.02.08.17.32.42;	author jakemsr;	state dead;
branches;
next	1.3;

1.3
date	2007.06.07.07.28.36;	author robert;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2002.10.14.09.50.48;	author pvalchev;	state dead;
branches;
next	1.1;

1.1
date	2002.08.18.13.17.51;	author espie;	state Exp;
branches;
next	;

1.3.2.1
date	2007.06.17.09.29.08;	author sturm;	state Exp;
branches;
next	;

1.3.4.1
date	2007.06.17.09.29.23;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
maintenence update to mplayer-1.0rc2

ok biorn@@ (MAINTAINER), ajacoutot@@, brad@@
@
text
@$OpenBSD: patch-libmpdemux_cddb_c,v 1.3 2007/06/07 07:28:36 robert Exp $
--- libmpdemux/cddb.c.orig	Thu Jun  7 09:09:01 2007
+++ libmpdemux/cddb.c	Thu Jun  7 09:09:52 2007
@@@@ -437,7 +437,7 @@@@ cddb_read_parse(HTTP_header_t *http_hdr, cddb_data_t *
 
 	switch(status) {
 		case 210:
-			ret = sscanf( http_hdr->body, "%d %s %08lx", &status, category, &disc_id);
+			ret = sscanf( http_hdr->body, "%d %99s %08lx", &status, category, &disc_id);
 			if( ret!=3 ) {
 				mp_msg(MSGT_DEMUX, MSGL_ERR, MSGTR_ParseError);
 				return -1;
@@@@ -498,7 +498,7 @@@@ cddb_parse_matches_list(HTTP_header_t *http_hdr, cddb_
 	ptr++;
 	// We have a list of exact/inexact matches, so which one do we use?
 	// So let's take the first one.
-	ret = sscanf(ptr, "%s %08lx %s", cddb_data->category, &(cddb_data->disc_id), album_title);
+	ret = sscanf(ptr, "%99s %08lx %99s", cddb_data->category, &(cddb_data->disc_id), album_title);
 	if( ret!=3 ) {
 		mp_msg(MSGT_DEMUX, MSGL_ERR, MSGTR_ParseError);
 		return -1;
@@@@ -535,7 +535,7 @@@@ cddb_query_parse(HTTP_header_t *http_hdr, cddb_data_t 
 	switch(status) {
 		case 200:
 			// Found exact match
-			ret = sscanf(http_hdr->body, "%d %s %08lx %s", &status, cddb_data->category, &(cddb_data->disc_id), album_title);
+			ret = sscanf(http_hdr->body, "%d %99s %08lx %99s", &status, cddb_data->category, &(cddb_data->disc_id), album_title);
 			if( ret!=4 ) {
 				mp_msg(MSGT_DEMUX, MSGL_ERR, MSGTR_ParseError);
 				return -1;
@


1.3
log
@fix a buffer overflow in mplayer's CDDB parsing code;
http://secunia.com/advisories/24302/

from Brad
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3.4.1
log
@MFC:
fix a buffer overflow in mplayer's CDDB parsing code;
http://secunia.com/advisories/24302/
@
text
@d1 4
a4 4
$OpenBSD: patch-libmpdemux_cddb_c,v 1.3 2007/06/07 07:28:36 robert Exp $
--- libmpdemux/cddb.c.orig	Sun Jun 11 20:35:46 2006
+++ libmpdemux/cddb.c	Sun Jun 17 10:55:45 2007
@@@@ -437,7 +437,7 @@@@ cddb_read_parse(HTTP_header_t *http_hdr,
d13 1
a13 1
@@@@ -498,7 +498,7 @@@@ cddb_parse_matches_list(HTTP_header_t *h
d22 1
a22 1
@@@@ -535,7 +535,7 @@@@ cddb_query_parse(HTTP_header_t *http_hdr
@


1.3.2.1
log
@MFC:
fix a buffer overflow in mplayer's CDDB parsing code;
http://secunia.com/advisories/24302/
@
text
@d1 4
a4 4
$OpenBSD: patch-libmpdemux_cddb_c,v 1.3 2007/06/07 07:28:36 robert Exp $
--- libmpdemux/cddb.c.orig	Sun Jun 11 20:35:46 2006
+++ libmpdemux/cddb.c	Sun Jun 17 10:55:51 2007
@@@@ -437,7 +437,7 @@@@ cddb_read_parse(HTTP_header_t *http_hdr,
d13 1
a13 1
@@@@ -498,7 +498,7 @@@@ cddb_parse_matches_list(HTTP_header_t *h
d22 1
a22 1
@@@@ -535,7 +535,7 @@@@ cddb_query_parse(HTTP_header_t *http_hdr
@


1.2
log
@Update to mplayer-0.90pre8; from biorn@@dce.chalmers.se
@
text
@d1 4
a4 6
$OpenBSD: patch-libmpdemux_cddb_c,v 1.1 2002/08/18 13:17:51 espie Exp $
--- libmpdemux/cddb.c.orig	Wed Jul 10 10:51:11 2002
+++ libmpdemux/cddb.c	Sun Aug 18 14:58:04 2002
@@@@ -28,14 +28,20 @@@@
 #include <sys/types.h>
 #include <sys/stat.h>
d6 25
a30 70
-#if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__) || defined(__bsdi__)
+#if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__bsdi__)
 #define SYS_BSD 1
 #endif
+#if defined(__OpenBSD__)
+#define SYS_OBSD 1
+#endif
 
 #if defined(__linux__)
 #include <linux/cdrom.h>
 #elif defined(SYS_BSD)
 #include <sys/cdio.h>
+#elif defined(SYS_OBSD)
+#include <util.h>
+#include <sys/cdio.h>
 #endif
 
 #include "cdd.h"
@@@@ -111,8 +117,50 @@@@ read_toc(void) {
 	close(drive);
 	return tochdr.ending_track;
 }
-#endif
 
+#elif defined(SYS_OBSD)
+int 
+read_toc(void) {
+	int drive;
+	struct ioc_toc_header tochdr;
+	struct ioc_read_toc_entry tocentry;
+	int i;
+	char *drivename;
+	char *realdev;
+	struct cd_toc_entry toc_buffer;
+
+	drivename = getenv("CDROM");
+	if (!drivename)
+		drivename = "cd0";
+	drive = opendev(drivename, O_RDONLY, OPENDEV_PART, &realdev);
+	if (!drive)
+		return -1;
+
+	ioctl(drive, CDIOREADTOCHEADER, &tochdr);
+	for (i = tochdr.starting_track; i <= tochdr.ending_track; i++) {
+		tocentry.starting_track = i;
+		tocentry.address_format = CD_MSF_FORMAT;
+		tocentry.data = &toc_buffer;
+		tocentry.data_len = sizeof(toc_buffer);
+		ioctl(drive, CDIOREADTOCENTRYS, &tocentry);
+		cdtoc[i-1].min = toc_buffer.addr.msf.minute;
+		cdtoc[i-1].sec = toc_buffer.addr.msf.second;
+		cdtoc[i-1].frame = toc_buffer.addr.msf.frame;
+		cdtoc[i-1].frame += cdtoc[i-1].min*60*75;
+		cdtoc[i-1].frame += cdtoc[i-1].sec*75;
+	}
+	tocentry.starting_track = 0xAA;
+	tocentry.address_format = CD_MSF_FORMAT;
+	ioctl(drive, CDIOREADTOCENTRYS, &tocentry);
+	cdtoc[tochdr.ending_track].min = toc_buffer.addr.msf.minute;
+	cdtoc[tochdr.ending_track].sec = toc_buffer.addr.msf.second;
+	cdtoc[tochdr.ending_track].frame = toc_buffer.addr.msf.frame;
+	cdtoc[tochdr.ending_track].frame += cdtoc[tochdr.ending_track].min*60*75;
+	cdtoc[tochdr.ending_track].frame += cdtoc[tochdr.ending_track].sec*75;
+	close(drive);
+	return tochdr.ending_track;
+}
+#endif
 unsigned int 
 cddb_sum(int n) {
 	unsigned int ret;
@


1.1
log
@cdparanoia support, actually needs correct cddb support for OpenBSD...
(seems it's not quite used yet, as it insists on going thru a cache)
@
text
@d1 1
a1 1
$OpenBSD$
@

