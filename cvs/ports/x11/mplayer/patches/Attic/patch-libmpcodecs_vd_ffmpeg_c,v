head	1.6;
access;
symbols
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2016.10.08.20.14.06;	author ajacoutot;	state dead;
branches;
next	1.5;
commitid	YbWVo3dl0aAWXN48;

1.5
date	2016.04.04.12.54.32;	author espie;	state Exp;
branches;
next	1.4;
commitid	DRlywiSarU181q5y;

1.4
date	2014.05.16.01.34.50;	author brad;	state dead;
branches;
next	1.3;

1.3
date	2014.01.10.21.52.29;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.21.16.23.05;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2013.01.14.02.20.41;	author brad;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to mplayer-20161008.

from Brad (maintainer)
@
text
@$OpenBSD: patch-libmpcodecs_vd_ffmpeg_c,v 1.5 2016/04/04 12:54:32 espie Exp $
--- libmpcodecs/vd_ffmpeg.c.orig	Sat Apr  2 15:35:36 2016
+++ libmpcodecs/vd_ffmpeg.c	Sat Apr  2 15:36:27 2016
@@@@ -476,7 +476,8 @@@@ static int init(sh_video_t *sh){
             break;
         avctx->extradata_size = sh->bih->biSize-sizeof(*sh->bih);
         avctx->extradata = av_mallocz(avctx->extradata_size + FF_INPUT_BUFFER_PADDING_SIZE);
-        memcpy(avctx->extradata, sh->bih+1, avctx->extradata_size);
+	if (avctx->extradata)
+		memcpy(avctx->extradata, sh->bih+1, avctx->extradata_size);
         break;
     }
 
@


1.5
log
@grumble cvs and dead files
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@Update to FFmpeg 20140412 snapshot. From 2.2 branch.

Update to MPlayer 20140412 snapshot.

Take MAINTAINER for MPlayer. ok edd@@

ok ajacoutot@@
@
text
@d1 12
a12 7
$OpenBSD: patch-libmpcodecs_vd_ffmpeg_c,v 1.3 2014/01/10 21:52:29 brad Exp $

Deal with older FFmpeg.

--- libmpcodecs/vd_ffmpeg.c.orig	Mon Jan  6 17:31:30 2014
+++ libmpcodecs/vd_ffmpeg.c	Mon Jan  6 17:51:42 2014
@@@@ -254,8 +254,12 @@@@ static void set_dr_slice_settings(struct AVCodecContex
a13 20
     ctx->do_dr1 = (lavc_codec->capabilities & CODEC_CAP_DR1) &&
         lavc_codec->id != AV_CODEC_ID_INTERPLAY_VIDEO &&
+#if 0
         lavc_codec->id != AV_CODEC_ID_H264 &&
         lavc_codec->id != AV_CODEC_ID_HEVC;
+#else
+        lavc_codec->id != AV_CODEC_ID_H264;
+#endif
     ctx->nonref_dr = 0;
     // TODO: fix and enable again. This currently causes issues when using filters
     // and seeking, usually failing with the "Ran out of numbered images" message,
@@@@ -940,7 +944,7 @@@@ static mp_image_t *decode(sh_video_t *sh, void *data, 
     ret = avcodec_decode_video2(avctx, pic, &got_picture, &pkt);
     pkt.data = NULL;
     pkt.size = 0;
-    av_packet_free_side_data(&pkt);
+    av_destruct_packet(&pkt);
 
     // even when we do dr we might actually get a buffer we had
     // FFmpeg allocate - this mostly happens with nonref_dr.
@


1.3
log
@Update to MPlayer 20140106 snapshot.

ok edd@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to MPlayer 20120725 snapshot.

Testing by naddy@@ sthen@@ landry@@ dcoppa@@
OK naddy@@ dcoppa@@
@
text
@d1 7
a7 9
$OpenBSD: patch-libmpcodecs_vd_ffmpeg_c,v 1.1 2013/01/14 02:20:41 brad Exp $
--- libmpcodecs/vd_ffmpeg.c.orig	Sun Apr 29 01:38:02 2012
+++ libmpcodecs/vd_ffmpeg.c	Sun Apr 29 01:50:45 2012
@@@@ -103,6 +103,8 @@@@ static char *lavc_param_skip_frame_str = NULL;
 static int lavc_param_threads=1;
 static int lavc_param_bitexact=0;
 static char *lavc_avopt = NULL;
+static enum AVDiscard skip_idct;
+static enum AVDiscard skip_frame;
d9 17
a25 5
 static const mp_image_t mpi_no_picture =
 {
@@@@ -352,6 +354,9 @@@@ static int init(sh_video_t *sh){
         }
     }
d27 2
a28 38
+    skip_idct = avctx->skip_idct;
+    skip_frame = avctx->skip_frame;
+
     mp_dbg(MSGT_DECVIDEO, MSGL_DBG2, "libavcodec.size: %d x %d\n", avctx->width, avctx->height);
     switch (sh->format) {
     case mmioFOURCC('S','V','Q','3'):
@@@@ -603,13 +608,13 @@@@ static int get_buffer(AVCodecContext *avctx, AVFrame *
             type = MP_IMGTYPE_STATIC;
             flags |= MP_IMGFLAG_PRESERVE;
         }
-        flags|=(!avctx->hurry_up && ctx->do_slices) ?
+        flags|=(avctx->skip_idct<=AVDISCARD_DEFAULT && avctx->skip_frame<=AVDISCARD_DEFAULT && ctx->do_slices) ?
                  MP_IMGFLAG_DRAW_CALLBACK:0;
         mp_msg(MSGT_DECVIDEO, MSGL_DBG2, type == MP_IMGTYPE_STATIC ? "using STATIC\n" : "using TEMP\n");
     } else {
         if(!pic->reference){
             ctx->b_count++;
-            flags|=(!avctx->hurry_up && ctx->do_slices) ?
+            flags|=(avctx->skip_idct<=AVDISCARD_DEFAULT && avctx->skip_frame<=AVDISCARD_DEFAULT && ctx->do_slices) ?
                      MP_IMGFLAG_DRAW_CALLBACK:0;
         }else{
             ctx->ip_count++;
@@@@ -826,7 +831,14 @@@@ static mp_image_t *decode(sh_video_t *sh, void *data, 
         }
     }
 
-    avctx->hurry_up=(flags&3)?((flags&2)?2:1):0;
+    avctx->skip_idct = skip_idct;
+    avctx->skip_frame = skip_frame;
+
+    if (flags&3) {
+        avctx->skip_frame = AVDISCARD_NONREF;
+        if (flags&2)
+            avctx->skip_idct = AVDISCARD_ALL;
+    }
 
     mp_msg(MSGT_DECVIDEO, MSGL_DBG2, "vd_ffmpeg data: %04x, %04x, %04x, %04x\n",
            ((int *)data)[0], ((int *)data)[1], ((int *)data)[2], ((int *)data)[3]);
@


1.1
log
@Update after FFmpeg 20121026 update.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@

