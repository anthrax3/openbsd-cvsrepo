head	1.2;
access;
symbols
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2003.09.25.20.59.01;	author sturm;	state dead;
branches
	1.2.2.1
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	2003.06.18.14.03.36;	author avsm;	state Exp;
branches;
next	;

1.2.2.1
date	2005.01.22.10.44.54;	author robert;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2005.09.22.20.46.25;	author robert;	state Exp;
branches;
next	;

1.2.4.1
date	2005.01.22.10.50.59;	author robert;	state Exp;
branches;
next	;

1.2.6.1
date	2005.09.22.20.43.25;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@SECURITY UPDATE to 0.92

fixes a remotely exploitable buffer overflow in ASX headers that could
be used to make mplayer run arbitrary code

from maintainer Bjoern Sandell
@
text
@$OpenBSD: patch-libmpdemux_asf_mmst_streaming_c,v 1.1 2003/06/18 14:03:36 avsm Exp $
--- libmpdemux/asf_mmst_streaming.c.orig	Wed Oct 30 14:10:36 2002
+++ libmpdemux/asf_mmst_streaming.c	Wed Jun 18 14:56:30 2003
@@@@ -424,7 +424,7 @@@@ asf_mmst_streaming_seek( int fd, off_t p
 int asf_mmst_streaming_start(stream_t *stream)
 {
   char                 str[1024];
-  char                 data[1024];
+  char                 data[BUF_SIZE];
   uint8_t              asf_header[8192];
   int                  asf_header_len;
   int                  len, i, packet_length;
@@@@ -455,7 +455,7 @@@@ int asf_mmst_streaming_start(stream_t *s
   * cmd 1 0x01 
   * */
 
-  sprintf (str, "\034\003NSPlayer/7.0.0.1956; {33715801-BAB3-9D85-24E9-03B90328270A}; Host: %s", url1->hostname);
+  snprintf (str, 1023, "\034\003NSPlayer/7.0.0.1956; {33715801-BAB3-9D85-24E9-03B90328270A}; Host: %s", url1->hostname);
   string_utf16 (data, str, strlen(str)+2);
 // send_command(s, commandno ....)
   send_command (s, 1, 0, 0x0004000b, strlen(str) * 2+8, data);
@


1.2.6.1
log
@SECURITY:
finally fix the RTSP & MMST heap overflows. from biorn@@

ok brad@@
@
text
@d1 15
a15 4
$OpenBSD$
--- libmpdemux/asf_mmst_streaming.c.orig	Wed Dec 15 20:12:46 2004
+++ libmpdemux/asf_mmst_streaming.c	Fri May  6 19:45:33 2005
@@@@ -334,8 +334,12 @@@@ static int interp_header (uint8_t *heade
d17 5
a21 11
       printf ("stream object, stream id: %d\n", stream_id);
 
+      if (num_stream_ids < 20) {
       stream_ids[num_stream_ids] = stream_id;
       num_stream_ids++;
+      } else {
+        printf ("too many id, stream skipped");
+      }
       
     } else {
       printf ("unknown object\n");
@


1.2.4.1
log
@SECURITY:
fix multiple overflow vulnerabilties; bump PKGNAME;
http://www.vuxml.org/openbsd/4a667f60-5468-11d9-a47f-00065bd5b0b6.html

ok brad@@
@
text
@d1 5
a5 63
$OpenBSD$
--- libmpdemux/asf_mmst_streaming.c.orig	Sat Nov  8 01:26:48 2003
+++ libmpdemux/asf_mmst_streaming.c	Wed Dec 29 14:51:46 2004
@@@@ -35,6 +35,7 @@@@
 #include "network.h"
 
 #define BUF_SIZE 102400
+#define HDR_BUF_SIZE 8192
 
 typedef struct 
 {
@@@@ -209,6 +210,11 @@@@ static int get_header (int s, uint8_t *h
 
 //      printf ("asf header packet detected, len=%d\n", packet_len);
 
+      if (packet_len < 0 || packet_len > HDR_BUF_SIZE - header_len) {
+        mp_msg(MSGT_NETWORK, MSGL_FATAL, "Invalid header size, giving up\n");
+        return 0;
+      }
+
       if (!get_data (s, &header[header_len], packet_len)) {
 	printf ("header data read failed\n");
 	return 0;
@@@@ -243,6 +249,12 @@@@ static int get_header (int s, uint8_t *h
       packet_len = get_32 ((unsigned char*)&packet_len, 0) + 4;
       
 //      printf ("command packet detected, len=%d\n", packet_len);
+
+      if (packet_len < 0 || packet_len > BUF_SIZE) {
+        mp_msg(MSGT_NETWORK, MSGL_FATAL,
+                "Invalid rtsp packet size, giving up\n");
+        return 0;
+      }
       
       if (!get_data (s, data, packet_len)) {
 	printf ("command data read failed\n");
@@@@ -354,6 +366,12 @@@@ static int get_media_packet (int s, int 
 
 //    printf ("asf media packet detected, len=%d\n", packet_len);
 
+    if (packet_len < 0 || packet_len > BUF_SIZE) {
+      mp_msg(MSGT_NETWORK, MSGL_FATAL,
+              "Invalid rtsp packet size, giving up\n");
+      return 0;
+    }
+      
     if (!get_data (s, data, packet_len)) {
       printf ("media data read failed\n");
       return 0;
@@@@ -373,6 +391,12 @@@@ static int get_media_packet (int s, int 
 
     packet_len = get_32 ((unsigned char*)&packet_len, 0) + 4;
 
+    if (packet_len < 0 || packet_len > BUF_SIZE) {
+      mp_msg(MSGT_NETWORK, MSGL_FATAL,
+              "Invalid rtsp packet size, giving up\n");
+      return 0;
+    }
+
     if (!get_data (s, data, packet_len)) {
       printf ("command data read failed\n");
       return 0;
@@@@ -456,7 +480,7 @@@@ int asf_mmst_streaming_start(stream_t *s
d8 3
a10 3
   char                 data[BUF_SIZE];
-  uint8_t              asf_header[8192];
+  uint8_t              asf_header[HDR_BUF_SIZE];
d13 9
a21 1
   char                *path;
@


1.2.2.1
log
@SECURITY:
fix multiple overflow vulnerabilties; bump PKGNAME;
http://www.vuxml.org/openbsd/4a667f60-5468-11d9-a47f-00065bd5b0b6.html

ok bra@@
@
text
@d1 5
a5 63
$OpenBSD$
--- libmpdemux/asf_mmst_streaming.c.orig	Mon Apr  5 23:31:27 2004
+++ libmpdemux/asf_mmst_streaming.c	Wed Dec 29 15:34:38 2004
@@@@ -35,6 +35,7 @@@@
 #include "network.h"
 
 #define BUF_SIZE 102400
+#define HDR_BUF_SIZE 8192
 
 typedef struct 
 {
@@@@ -209,6 +210,11 @@@@ static int get_header (int s, uint8_t *h
 
 //      printf ("asf header packet detected, len=%d\n", packet_len);
 
+      if (packet_len < 0 || packet_len > HDR_BUF_SIZE - header_len) {
+        mp_msg(MSGT_NETWORK, MSGL_FATAL, "Invalid header size, giving up\n");
+        return 0;
+      }
+
       if (!get_data (s, &header[header_len], packet_len)) {
 	printf ("header data read failed\n");
 	return 0;
@@@@ -243,6 +249,12 @@@@ static int get_header (int s, uint8_t *h
       packet_len = get_32 ((unsigned char*)&packet_len, 0) + 4;
       
 //      printf ("command packet detected, len=%d\n", packet_len);
+
+      if (packet_len < 0 || packet_len > BUF_SIZE) {
+        mp_msg(MSGT_NETWORK, MSGL_FATAL,
+                "Invalid rtsp packet size, giving up\n");
+        return 0;
+      }
       
       if (!get_data (s, data, packet_len)) {
 	printf ("command data read failed\n");
@@@@ -354,6 +366,12 @@@@ static int get_media_packet (int s, int 
 
 //    printf ("asf media packet detected, len=%d\n", packet_len);
 
+    if (packet_len < 0 || packet_len > BUF_SIZE) {
+      mp_msg(MSGT_NETWORK, MSGL_FATAL,
+              "Invalid rtsp packet size, giving up\n");
+      return 0;
+    }
+      
     if (!get_data (s, data, packet_len)) {
       printf ("media data read failed\n");
       return 0;
@@@@ -373,6 +391,12 @@@@ static int get_media_packet (int s, int 
 
     packet_len = get_32 ((unsigned char*)&packet_len, 0) + 4;
 
+    if (packet_len < 0 || packet_len > BUF_SIZE) {
+      mp_msg(MSGT_NETWORK, MSGL_FATAL,
+              "Invalid rtsp packet size, giving up\n");
+      return 0;
+    }
+
     if (!get_data (s, data, packet_len)) {
       printf ("command data read failed\n");
       return 0;
@@@@ -457,7 +481,7 @@@@ int asf_mmst_streaming_start(stream_t *s
d8 3
a10 3
   char                 data[BUF_SIZE];
-  uint8_t              asf_header[8192];
+  uint8_t              asf_header[HDR_BUF_SIZE];
d13 9
a21 1
   char                *path;
@


1.2.2.2
log
@SECURITY:
finally fix the RTSP & MMST heap overflows. from biorn@@

ok brad@@
@
text
@d1 3
a3 3
$OpenBSD: patch-libmpdemux_asf_mmst_streaming_c,v 1.2.2.1 2005/01/22 10:44:54 robert Exp $
--- libmpdemux/asf_mmst_streaming.c.orig	Fri May  6 20:02:47 2005
+++ libmpdemux/asf_mmst_streaming.c	Fri May  6 20:02:55 2005
d37 1
a37 14
@@@@ -315,8 +327,12 @@@@ static int interp_header (uint8_t *heade
 
       printf ("stream object, stream id: %d\n", stream_id);
 
+      if (num_stream_ids < 20) {
       stream_ids[num_stream_ids] = stream_id;
       num_stream_ids++;
+      } else {
+        printf ("too many id, stream skipped");
+      }
       
     } else {
       printf ("unknown object\n");
@@@@ -354,6 +370,12 @@@@ static int get_media_packet (int s, int 
d50 1
a50 1
@@@@ -373,6 +395,12 @@@@ static int get_media_packet (int s, int 
d63 1
a63 1
@@@@ -457,7 +485,7 @@@@ int asf_mmst_streaming_start(stream_t *s
@


1.1
log
@backport a patch from mplayer-cvs to plug a bad buffer boundary
pointed out by Bjorn Sandell <biorn@@dce.chalmers.se>
bump PKGNAME
@
text
@d1 1
a1 1
$OpenBSD$
@

