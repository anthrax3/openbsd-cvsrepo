head	1.4;
access;
symbols
	OPENBSD_4_6:1.3.0.8
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.6
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2009.10.11.13.36.23;	author edd;	state dead;
branches;
next	1.3;

1.3
date	2008.02.11.00.22.03;	author jakemsr;	state Exp;
branches;
next	1.2;

1.2
date	2006.07.19.21.40.47;	author robert;	state dead;
branches;
next	1.1;

1.1
date	2006.01.22.06.28.25;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@New version of mplayer based upon a snapshot (20090708).
  * fixes some flv playback
  * removed ggi output - broken i386/sparc64.
  * removed gui (deprecated) - use gnome-mplayer instead.
  * removed win32 codecs - opensource codecs are good quality.

OK, naddy@@, sthen@@
@
text
@$OpenBSD: patch-libmpdemux_demux_mov_c,v 1.3 2008/02/11 00:22:03 jakemsr Exp $
--- libmpdemux/demux_mov.c.orig	Fri Feb  8 13:29:41 2008
+++ libmpdemux/demux_mov.c	Fri Feb  8 13:31:59 2008
@@@@ -173,11 +173,12 @@@@ void mov_build_index(mov_track_t* trak,int timescale){
     i=trak->chunkmap_size;
     while(i>0){
 	--i;
-	for(j=trak->chunkmap[i].first;j<last;j++){
+	j=FFMAX(trak->chunkmap[i].first, 0);
+	for(;j<last;j++){
 	    trak->chunks[j].desc=trak->chunkmap[i].sdid;
 	    trak->chunks[j].size=trak->chunkmap[i].spc;
 	}
-	last=trak->chunkmap[i].first;
+	last=FFMIN(trak->chunkmap[i].first, trak->chunks_size);
     }
 
 #if 0
@@@@ -235,6 +236,8 @@@@ void mov_build_index(mov_track_t* trak,int timescale){
     s=0;
     for(j=0;j<trak->durmap_size;j++){
 	for(i=0;i<trak->durmap[j].num;i++){
+	    if (s >= trak->samples_size)
+		break;
 	    trak->samples[s].pts=pts;
 	    ++s;
 	    pts+=trak->durmap[j].dur;
@@@@ -246,6 +249,8 @@@@ void mov_build_index(mov_track_t* trak,int timescale){
     for(j=0;j<trak->chunks_size;j++){
 	off_t pos=trak->chunks[j].pos;
 	for(i=0;i<trak->chunks[j].size;i++){
+	    if (s >= trak->samples_size)
+		break;
 	    trak->samples[s].pos=pos;
 	    mp_msg(MSGT_DEMUX, MSGL_DBG3, "Sample %5d: pts=%8d  off=0x%08X  size=%d\n",s,
 		trak->samples[s].pts,
@


1.3
log
@security patches for
- buffer overflow in stream_cddb.c
- buffer overflow in url.c
- buffer overflow in demux_mov.c
- stack overflow in demux_audio.c

from brad@@, ok maintainer

also remove reference to rtunes_ao.diff from distinfo.  this patch is
not used now because it does not apply.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to versio 1.0pre8; include the speex and mpcdec codecs by default;
this version of mplayer now uses gtk2;

ok biorn@@ and tested by many
@
text
@d1 16
a16 10
$OpenBSD: patch-libmpdemux_demux_mov_c,v 1.1 2006/01/22 06:28:25 biorn Exp $
--- libmpdemux/demux_mov.c.orig	Thu Mar 31 00:10:07 2005
+++ libmpdemux/demux_mov.c	Wed Jan 18 22:05:11 2006
@@@@ -865,6 +865,7 @@@@ static void lschunks(demuxer_t* demuxer,
 		   // ([int32_t size,int32_t type,some data ],repeat)
 		} my_stdata;		  
 #endif		
+		int version, adjust;
 		sh_audio_t* sh=new_sh_audio(demuxer,priv->track_db);
 		sh->format=trak->fourcc;
d18 19
a36 50
@@@@ -911,8 +912,27 @@@@ static void lschunks(demuxer_t* demuxer,
 //      32  char[4]	atom type (fourc charater code -> esds)		
 //      36  char[]  	atom data (len=size-8)
 
+		version=char2short(trak->stdata,8);
+		if (version > 1)
+		  mp_msg(MSGT_DEMUX, MSGL_WARN, "MOV: version %d sound atom may not parse correctly!\n", version);
 		trak->samplebytes=sh->samplesize=char2short(trak->stdata,18)/8;
-		trak->nchannels=sh->channels=char2short(trak->stdata,16);
+
+		/* I can't find documentation, but so far this is the case. -Corey */
+		switch (char2short(trak->stdata,16)) {
+		  case 1:
+		    trak->nchannels = 1; break;
+		  case 2:
+		    trak->nchannels = 2; break;
+		  case 3:
+		    trak->nchannels = 6; break;
+		  default:
+		    mp_msg(MSGT_DEMUX, MSGL_WARN,
+			"MOV: unable to determine audio channels, assuming 2 (got %d)\n",
+			char2short(trak->stdata,16));
+		    trak->nchannels = 2;
+		}
+		sh->channels = trak->nchannels;
+
 		/*printf("MOV: timescale: %d samplerate: %d durmap: %d (%d) -> %d (%d)\n",
 		    trak->timescale, char2short(trak->stdata,24), trak->durmap[0].dur,
 		    trak->durmap[0].num, trak->timescale/trak->durmap[0].dur,
@@@@ -966,8 +986,18 @@@@ static void lschunks(demuxer_t* demuxer,
 		  }
 		}
 
-		if((trak->stdata[9]==0 || trak->stdata[9]==1) && trak->stdata_len >= 36) { // version 0 with extra atoms
-        int adjust = (trak->stdata[9]==1)?48:0;
+		switch (version) {
+		  case 0:
+		    adjust =  0; break;
+		  case 1:
+		    adjust = 48; break;
+		  case 2:
+		    adjust = 68; break;
+		  default:
+		    mp_msg(MSGT_DEMUX, MSGL_WARN, "MOV: unknown sound atom version (%d); may not work!\n", version);
+		    adjust = 68;
+		}
+		if (trak->stdata_len >= 36 + adjust) {
 		    int atom_len = char2int(trak->stdata,28+adjust);
 		    switch(char2int(trak->stdata,32+adjust)) { // atom type
 		      case MOV_FOURCC('e','s','d','s'): {
@


1.1
log
@Add support for
- version 2 audio atoms in QuickTime containers, from mplayer cvs requested by
   David Hill (dhill at mindcry org)
- setting volumem via /dev/mixer, from Mike Belopuhov (mkb at crypt org ru)
@
text
@d1 1
a1 1
$OpenBSD$
@

