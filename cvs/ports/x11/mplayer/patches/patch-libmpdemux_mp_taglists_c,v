head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_5:1.6.0.2
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2;
locks; strict;
comment	@# @;


1.8
date	2016.03.14.19.50.13;	author ajacoutot;	state Exp;
branches;
next	1.7;
commitid	qy3kOZbBj36dlQSa;

1.7
date	2014.05.16.01.34.50;	author brad;	state dead;
branches;
next	1.6;

1.6
date	2014.01.10.21.52.29;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2013.09.06.23.14.40;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2013.04.08.17.08.36;	author brad;	state dead;
branches;
next	1.3;

1.3
date	2013.03.13.02.28.11;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.21.16.23.05;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.14.02.20.41;	author brad;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to mplayer-20160306.

from Brad (maintainer)
@
text
@$OpenBSD$

Allow building with FFmpeg 2.8.

--- libmpdemux/mp_taglists.c.orig	Sun Mar 13 21:35:58 2016
+++ libmpdemux/mp_taglists.c	Sun Mar 13 21:36:42 2016
@@@@ -34,7 +34,6 @@@@ struct AVCodecTag {
 static const struct AVCodecTag mp_wav_tags[] = {
     { AV_CODEC_ID_ADPCM_4XM,         MKTAG('4', 'X', 'M', 'A') },
     { AV_CODEC_ID_ADPCM_ADX,         MKTAG('S', 'a', 'd', 'x') },
-    { AV_CODEC_ID_ADPCM_AICA,        MKTAG('A', 'I', 'C', 'A') },
     { AV_CODEC_ID_ADPCM_AFC,         MKTAG('A', 'F', 'C', ' ') },
     { AV_CODEC_ID_ADPCM_DTK,         MKTAG('D', 'T', 'K', ' ') },
     { AV_CODEC_ID_ADPCM_IMA_APC,     MKTAG('A', 'P', 'C', 'A') },
@@@@ -47,7 +46,6 @@@@ static const struct AVCodecTag mp_wav_tags[] = {
     { AV_CODEC_ID_ADPCM_IMA_EA_EACS, MKTAG('E', 'A', 'C', 'S') },
     { AV_CODEC_ID_ADPCM_IMA_ISS,     MKTAG('A', 'I', 'S', 'S') },
     { AV_CODEC_ID_ADPCM_IMA_WS,      MKTAG('A', 'I', 'W', 'S') },
-    { AV_CODEC_ID_ADPCM_PSX,         MKTAG('A', 'P', 'S', 'X') },
     { AV_CODEC_ID_ADPCM_SBPRO_2,     0x3253 },
     { AV_CODEC_ID_ADPCM_SBPRO_3,     0x3353 },
     { AV_CODEC_ID_ADPCM_SBPRO_4,     0x3453 },
@@@@ -70,7 +68,6 @@@@ static const struct AVCodecTag mp_wav_tags[] = {
     { AV_CODEC_ID_EVRC,              MKTAG('s', 'e', 'v', 'c') },
     { AV_CODEC_ID_FFWAVESYNTH,       MKTAG('F', 'F', 'W', 'S') },
     { AV_CODEC_ID_G723_1,            MKTAG('7', '2', '3', '1') },
-    { AV_CODEC_ID_INTERPLAY_ACM,     0x97280301 },
     { AV_CODEC_ID_INTERPLAY_DPCM,    MKTAG('I', 'N', 'P', 'A') },
     { AV_CODEC_ID_ILBC,              MKTAG('i', 'l', 'b', 'c') },
     { AV_CODEC_ID_MLP,               MKTAG('M', 'L', 'P', ' ') },
@


1.7
log
@Update to FFmpeg 20140412 snapshot. From 2.2 branch.

Update to MPlayer 20140412 snapshot.

Take MAINTAINER for MPlayer. ok edd@@

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-libmpdemux_mp_taglists_c,v 1.6 2014/01/10 21:52:29 brad Exp $
d3 1
a3 1
Deal with older FFmpeg.
d5 3
a7 3
--- libmpdemux/mp_taglists.c.orig	Mon Jan  6 17:03:23 2014
+++ libmpdemux/mp_taglists.c	Mon Jan  6 17:31:04 2014
@@@@ -29,8 +29,8 @@@@
d11 1
a11 1
-#if LIBAVUTIL_VERSION_MICRO >= 100
a12 1
+#if 0
a13 1
 #endif
d15 16
a30 18
@@@@ -109,7 +109,7 @@@@ static const struct AVCodecTag mp_codecid_override_tag
     { AV_CODEC_ID_ESCAPE130,         MKTAG('E', '1', '3', '0') },
 #endif
     { AV_CODEC_ID_FLV1,              MKTAG('F', 'L', 'V', '1') },
-#if LIBAVUTIL_VERSION_MICRO >= 100
+#if 0
     { AV_CODEC_ID_ADPCM_G726LE,      MKTAG('6', '2', '7', 'G') },
 #endif
     { AV_CODEC_ID_G729,              MKTAG('G', '7', '2', '9') },
@@@@ -158,7 +158,7 @@@@ static const struct AVCodecTag mp_bmp_tags[] = {
     { AV_CODEC_ID_DSICINVIDEO,       MKTAG('D', 'C', 'I', 'V') },
     { AV_CODEC_ID_DXA,               MKTAG('D', 'X', 'A', '1') },
     { AV_CODEC_ID_FLIC,              MKTAG('f', 'l', 'i', 'c') },
-#if LIBAVUTIL_VERSION_MICRO >= 100
+#if 0
     { AV_CODEC_ID_HEVC,              MKTAG('H', 'E', 'V', 'C') },
 #endif
     { AV_CODEC_ID_IDCIN,             MKTAG('I', 'D', 'C', 'I') },
@


1.6
log
@Update to MPlayer 20140106 snapshot.

ok edd@@
@
text
@d1 1
a1 1
$OpenBSD: patch-libmpdemux_mp_taglists_c,v 1.5 2013/09/06 23:14:40 brad Exp $
@


1.5
log
@Update to MPlayer 20130819 snapshot.

ok gonzalo@@ sthen@@ edd@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 2
a6 2
--- libmpdemux/mp_taglists.c.orig	Tue Aug 20 03:11:43 2013
+++ libmpdemux/mp_taglists.c	Tue Aug 20 03:12:27 2013
d17 18
@


1.4
log
@Update after FFmpeg 20130319 update.

ok sthen@@
@
text
@d1 10
a10 7
$OpenBSD: patch-libmpdemux_mp_taglists_c,v 1.3 2013/03/13 02:28:11 brad Exp $
--- libmpdemux/mp_taglists.c.orig	Thu Feb 14 14:46:38 2013
+++ libmpdemux/mp_taglists.c	Thu Feb 14 18:45:13 2013
@@@@ -51,10 +51,10 @@@@ static const struct AVCodecTag mp_wav_tags[] = {
     { AV_CODEC_ID_COOK,              MKTAG('c', 'o', 'o', 'k') },
     { AV_CODEC_ID_DSICINAUDIO,       MKTAG('D', 'C', 'I', 'A') },
     { AV_CODEC_ID_EAC3,              MKTAG('E', 'A', 'C', '3') },
d12 3
a14 3
+#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(54, 90, 100)
     { AV_CODEC_ID_EVRC,              MKTAG('s', 'e', 'v', 'c') },
-    { AV_CODEC_ID_FFWAVESYNTH,       MKTAG('F', 'F', 'W', 'S') },
d16 1
a16 4
+    { AV_CODEC_ID_FFWAVESYNTH,       MKTAG('F', 'F', 'W', 'S') },
     { AV_CODEC_ID_G723_1,            MKTAG('7', '2', '3', '1') },
     { AV_CODEC_ID_INTERPLAY_DPCM,    MKTAG('I', 'N', 'P', 'A') },
     { AV_CODEC_ID_ILBC,              MKTAG('i', 'l', 'b', 'c') },
@


1.3
log
@Update to MPlayer 20130214 snapshot.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-libmpdemux_mp_taglists_c,v 1.2 2013/01/21 16:23:05 brad Exp $
@


1.2
log
@Update to MPlayer 20120725 snapshot.

Testing by naddy@@ sthen@@ landry@@ dcoppa@@
OK naddy@@ dcoppa@@
@
text
@d1 7
a7 17
$OpenBSD: patch-libmpdemux_mp_taglists_c,v 1.1 2013/01/14 02:20:41 brad Exp $
--- libmpdemux/mp_taglists.c.orig	Sat Jan 19 01:19:06 2013
+++ libmpdemux/mp_taglists.c	Sat Jan 19 04:04:54 2013
@@@@ -59,7 +59,9 @@@@ static const struct AVCodecTag mp_wav_tags[] = {
     { CODEC_ID_MUSEPACK7,         MKTAG('M', 'P', 'C', ' ')},
     { CODEC_ID_MUSEPACK8,         MKTAG('M', 'P', 'C', '8')},
     { CODEC_ID_NELLYMOSER,        MKTAG('n', 'm', 'o', 's')},
+#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(54, 29, 0)
     { CODEC_ID_OPUS,              MKTAG('o', 'p', 'u', 's')},
+#endif
     { CODEC_ID_PCM_LXF,           MKTAG('P', 'L', 'X', 'F')},
     { CODEC_ID_PCM_S16LE_PLANAR,  MKTAG('1', '6', 'P', 'L')},
     { CODEC_ID_QCELP,             MKTAG('Q', 'c', 'l', 'p')},
@@@@ -71,7 +73,7 @@@@ static const struct AVCodecTag mp_wav_tags[] = {
     { CODEC_ID_SPEEX,             MKTAG('s', 'p', 'x', ' ')},
     { CODEC_ID_TTA,               MKTAG('T', 'T', 'A', '1')},
     { CODEC_ID_TWINVQ,            MKTAG('T', 'W', 'I', '2')},
d9 3
a11 2
+#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(54, 28, 100)
     { CODEC_ID_VIMA,              MKTAG('V', 'I', 'M', 'A')},
d13 4
a16 29
     { CODEC_ID_VMDAUDIO,          MKTAG('V', 'M', 'D', 'A')},
@@@@ -102,7 +104,7 @@@@ static const struct AVCodecTag mp_codecid_override_tag
     { CODEC_ID_H264,              MKTAG('H', '2', '6', '4')},
     { CODEC_ID_MP3,               0x55},
     { CODEC_ID_MPEG4,             MKTAG('M', 'P', '4', 'V')},
-#if LIBAVUTIL_VERSION_MICRO >= 100
+#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(54, 33, 0)
     { CODEC_ID_PAF_AUDIO,         MKTAG('P', 'A', 'F', 'A')},
     { CODEC_ID_PAF_VIDEO,         MKTAG('P', 'A', 'F', 'V')},
 #endif
@@@@ -134,7 +136,9 @@@@ static const struct AVCodecTag mp_bmp_tags[] = {
     { CODEC_ID_BMV_VIDEO,         MKTAG('B', 'M', 'V', 'V')},
     { CODEC_ID_C93,               MKTAG('C', '9', '3', 'V')},
     { CODEC_ID_CDGRAPHICS,        MKTAG('C', 'D', 'G', 'R')},
+#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(54, 1, 0)
     { CODEC_ID_CDXL,              MKTAG('C', 'D', 'X', 'L')},
+#endif
     { CODEC_ID_CMV,               MKTAG('M', 'V', 'I', 'f')},
     { CODEC_ID_DFA,               MKTAG('C', 'D', 'F', 'A')},
     { CODEC_ID_DNXHD,             MKTAG('A', 'V', 'd', 'n')},
@@@@ -156,7 +160,7 @@@@ static const struct AVCodecTag mp_bmp_tags[] = {
     { CODEC_ID_RV20,              MKTAG('R', 'V', '2', '0')},
     { CODEC_ID_RV30,              MKTAG('R', 'V', '3', '0')},
     { CODEC_ID_RV40,              MKTAG('R', 'V', '4', '0')},
-#if LIBAVUTIL_VERSION_MICRO >= 100
+#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(54, 35, 100)
     { CODEC_ID_SANM,              MKTAG('S', 'A', 'N', 'M')},
 #endif
     { CODEC_ID_SVQ3,              MKTAG('S', 'V', 'Q', '3')},
@


1.1
log
@Update after FFmpeg 20121026 update.

ok sthen@@
@
text
@d1 50
a50 60
$OpenBSD$
--- libmpdemux/mp_taglists.c.orig	Thu May  3 01:23:16 2012
+++ libmpdemux/mp_taglists.c	Thu May  3 01:35:04 2012
@@@@ -20,7 +20,8 @@@@
 
 #include "mp_taglists.h"
 #include "libavformat/avformat.h"
-#include "libavformat/riff.h"
+// for AVCodecTag
+#include "libavformat/internal.h"
 
 static const AVCodecTag mp_wav_tags[] = {
     { CODEC_ID_ADPCM_4XM,         MKTAG('4', 'X', 'M', 'A')},
@@@@ -59,8 +60,6 @@@@ static const AVCodecTag mp_wav_tags[] = {
     { 0, 0 },
 };
 
-const struct AVCodecTag * const mp_wav_taglists[] = {ff_codec_wav_tags, mp_wav_tags, 0};
-
 static const AVCodecTag mp_codecid_override_tags[] = {
     { CODEC_ID_AAC,               MKTAG('M', 'P', '4', 'A')},
     { CODEC_ID_AAC_LATM,          MKTAG('M', 'P', '4', 'L')},
@@@@ -122,4 +121,36 @@@@ static const AVCodecTag mp_bmp_tags[] = {
     { 0, 0 },
 };
 
-const struct AVCodecTag * const mp_bmp_taglists[] = {ff_codec_bmp_tags, mp_bmp_tags, 0};
+static void get_taglists(const struct AVCodecTag *dst[3], int audio)
+{
+    dst[0] = audio ? mp_wav_tags : mp_bmp_tags;
+    dst[1] = audio ? avformat_get_riff_audio_tags() : avformat_get_riff_video_tags();
+    dst[2] = NULL;
+}
+
+enum CodecID mp_tag2codec_id(uint32_t tag, int audio)
+{
+    const struct AVCodecTag *taglists[3];
+    get_taglists(taglists, audio);
+    return av_codec_get_id(taglists, tag);
+}
+
+uint32_t mp_codec_id2tag(enum CodecID codec_id, uint32_t old_tag, int audio)
+{
+    const struct AVCodecTag *taglists[3];
+    // For some formats (like PCM) always trust CODEC_ID_* more than codec_tag
+    uint32_t tag = av_codec_get_tag(mp_codecid_override_taglists, codec_id);
+    if (tag)
+        return tag;
+
+    // mp4a tag is used for all mp4 files no matter what they actually contain
+    // mp4v is sometimes also used for files containing e.g. mjpeg
+    if (audio  && old_tag != MKTAG('m', 'p', '4', 'a') ||
+        !audio && old_tag != MKTAG('m', 'p', '4', 'v'))
+        tag = old_tag;
+    if (tag)
+        return tag;
+
+    get_taglists(taglists, audio);
+    return av_codec_get_tag(taglists, codec_id);
+}
@

