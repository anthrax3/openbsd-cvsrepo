head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.6
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.4
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.8
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.10
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.2
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.4.0.12
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.10
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.8
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.8
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2016.03.14.19.50.13;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	qy3kOZbBj36dlQSa;

1.5
date	2013.09.06.23.14.40;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2010.11.08.21.25.44;	author edd;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.26.21.29.56;	author jakemsr;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.11.13.36.23;	author edd;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2008.02.08.17.32.42;	author jakemsr;	state Exp;
branches;
next	;

1.2.2.1
date	2010.07.25.23.58.20;	author william;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to mplayer-20160306.

from Brad (maintainer)
@
text
@$OpenBSD: patch-stream_tvi_bsdbt848_c,v 1.5 2013/09/06 23:14:40 brad Exp $
--- stream/tvi_bsdbt848.c.orig	Sun Mar  6 20:23:31 2016
+++ stream/tvi_bsdbt848.c	Sun Mar  6 20:29:00 2016
@@@@ -53,9 +53,10 @@@@
 #include <signal.h>
 #include <string.h>
 #include <errno.h>
+#include <sys/ioctl.h>
 
 #include <sys/param.h>
-#ifdef CONFIG_SUN_AUDIO
+#if defined(CONFIG_SUN_AUDIO) && !defined(CONFIG_SNDIO_AUDIO)
 #include <sys/audioio.h>
 #endif
 
@@@@ -67,6 +68,9 @@@@
 #include IOCTL_BT848_H_NAME
 #endif
 
+#if defined(CONFIG_SNDIO_AUDIO)
+#include <sndio.h>
+#else
 #ifdef HAVE_SYS_SOUNDCARD_H
 #include <sys/soundcard.h>
 #else
@@@@ -76,6 +80,7 @@@@
 #include <machine/soundcard.h>
 #endif
 #endif
+#endif
 
 #include "libaf/af_format.h"
 #include "libmpcodecs/img_format.h"
@@@@ -105,7 +110,13 @@@@ typedef struct priv {
 /* Audio */
     char *dspdev;
     int dspready;
+#if defined(CONFIG_SNDIO_AUDIO)
+    struct sio_hdl *hdl;
+    struct sio_par par;
+    int round, appbufsz; /* sizes in bytes */
+#else
     int dspfd;
+#endif
     int dspsamplesize;
     int dspstereo;
     int dspspeed;
@@@@ -113,6 +124,9 @@@@ typedef struct priv {
     int dspframesize;
     int dsprate;
     long long dspbytesread;
+#if defined(CONFIG_SNDIO_AUDIO)
+    long long realpos;
+#endif
 
 /* Video */
     char *btdev;
@@@@ -162,6 +176,15 @@@@ static priv_t *G_private=NULL;
 
 static int getinput(int innumber);
 
+#if defined(CONFIG_SNDIO_AUDIO)
+void movecb(void *addr, int delta)
+{
+    priv_t *priv = addr;
+
+    priv->realpos += delta * priv->dspsamplesize/8 * (priv->dspstereo+1);
+}
+#endif
+
 static void processframe(int signal)
 {
 struct timeval curtime;
@@@@ -222,7 +245,9 @@@@ static tvi_handle_t *tvi_init_bsdbt848(tv_param_t* tv_
 
     /* set audio device name */
     if (!tv_param->adevice)
-#ifdef CONFIG_SUN_AUDIO
+#if defined(CONFIG_SNDIO_AUDIO)
+        priv->dspdev = NULL;
+#elif defined(CONFIG_SUN_AUDIO)
         priv->dspdev = strdup("/dev/sound");
 #else
         priv->dspdev = strdup("/dev/dsp");
@@@@ -331,12 +356,39 @@@@ static int control(priv_t *priv, int cmd, void *arg)
         {
         int dspspeed = *(int *)arg;
 
+#if defined(CONFIG_SNDIO_AUDIO)
+        if (!sio_stop(priv->hdl))
+            {
+            mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848InvalidAudioRate, "sio_stop failed");
+            return TVI_CONTROL_FALSE;
+            }
+        sio_initpar(&priv->par);
+        priv->par.rate = dspspeed;
+        priv->par.round = 4096 / (priv->dspsamplesize/8 * (priv->dspstereo + 1));
+        if(!sio_setpar(priv->hdl, &priv->par) || !sio_getpar(priv->hdl, &priv->par))
+            {
+            mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848InvalidAudioRate, "sio_[s|g]etpar failed");
+            return TVI_CONTROL_FALSE;
+            }
+        priv->round = priv->par.round * priv->par.bps * priv->par.rchan;
+        priv->appbufsz = priv->par.appbufsz * priv->par.bps * priv->par.rchan;
+        if(priv->par.rate != dspspeed)
+            {
+            mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848InvalidAudioRate, "returned rate != requested rate");
+            return TVI_CONTROL_FALSE;
+            }
+        if (!sio_start(priv->hdl))
+            {
+            mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848InvalidAudioRate, "sio_start failed");
+            return TVI_CONTROL_FALSE;
+            }
+#else
            if(ioctl(priv->dspfd, SNDCTL_DSP_SPEED, &dspspeed) == -1)
             {
             mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848InvalidAudioRate, strerror(errno));
             return TVI_CONTROL_FALSE;
             }
-
+#endif
         priv->dspspeed = dspspeed;
 
         priv->dspframesize = priv->dspspeed*priv->dspsamplesize/8/
@@@@ -645,12 +697,76 @@@@ priv->dspready = 1;
 priv->dspsamplesize = 16;
 priv->dspstereo = 1;
 priv->dspspeed = 44100;
+#if !defined(CONFIG_SNDIO_AUDIO)
 priv->dspfmt = AFMT_S16_LE;
+#endif
 priv->dspbytesread = 0;
 priv->dsprate = priv->dspspeed * priv->dspsamplesize/8*(priv->dspstereo+1);
 priv->dspframesize = priv->dspspeed*priv->dspsamplesize/8/priv->fps *
                      (priv->dspstereo+1);
 
+#if defined(CONFIG_SNDIO_AUDIO)
+
+if((priv->hdl = sio_open(priv->dspdev, SIO_REC, 0)) == NULL)
+    {
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorOpeningDspDev, "sio_open failed");
+    priv->dspready = FALSE;
+    }
+
+sio_initpar(&priv->par);
+priv->par.rchan = priv->dspstereo + 1;
+priv->par.rate = priv->dspspeed;
+priv->par.bits = priv->dspsamplesize;
+priv->par.sig = 1;
+//priv->par.round = FRAGSIZE / (priv->dspsamplesize/8 * (priv->dspstereo + 1));
+priv->par.round = priv->dspspeed / 100; /* 10 ms */
+priv->par.appbufsz = priv->dspspeed / 4; /* 250 ms */
+
+if(priv->dspready && (!sio_setpar(priv->hdl, &priv->par) || !sio_getpar(priv->hdl, &priv->par)))
+    {
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, "sio_[s|g]etpar failed");
+    priv->dspready = FALSE;
+    }
+
+priv->round = priv->par.round * priv->par.bps * priv->par.rchan;
+priv->appbufsz = priv->par.appbufsz * priv->par.bps * priv->par.rchan;
+
+if(priv->par.rchan != priv->dspstereo + 1)
+    {
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, "returned channels != requested channels");
+    priv->dspready = FALSE;
+    }
+if (priv->par.bits != priv->dspsamplesize || priv->par.sig != 1 || priv->par.le != SIO_LE_NATIVE)
+    {
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, "returned format != requested format");
+    priv->dspready = FALSE;
+    }
+if(priv->par.rate != priv->dspspeed)
+    {
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, "returned rate != requested rate");
+    // this may be overridden later with command line options, so it's not necessarily a problem
+    //priv->dspready = FALSE;
+    }
+
+priv->realpos = 0;
+
+if(priv->dspready == TRUE)
+    {
+    sio_onmove(priv->hdl, movecb, priv);
+    if(!sio_start(priv->hdl))
+        {
+        mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, "sio_start failed");
+        priv->dspready = FALSE;
+        }
+    }
+
+if(priv->dspready == FALSE)
+    {
+    sio_close(priv->hdl);
+    }
+
+#else
+
 if((priv->dspfd = open (priv->dspdev, O_RDONLY, 0)) < 0)
     {
     mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorOpeningDspDev, strerror(errno));
@@@@ -676,6 +792,8 @@@@ if(priv->dspready &&
     priv->dspready = 0;
     }
 
+#endif
+
 return 1;
 }
 
@@@@ -699,7 +817,9 @@@@ if(ioctl(priv->btfd, METEORSSIGNAL, &marg) < 0)
     return 0;
     }
 
+#if !defined(CONFIG_SNDIO_AUDIO)
 read(priv->dspfd, &tmp, 2);
+#endif
 
 gettimeofday(&curtime, NULL);
 
@@@@ -738,10 +858,15 @@@@ if(ioctl(priv->btfd, METEORCAPTUR, &marg) < 0 )
     return 0;
     }
 
-close(priv->btfd);
+#if defined(CONFIG_SNDIO_AUDIO)
+sio_close(priv->hdl);
+priv->hdl = NULL;
+#else
 close(priv->dspfd);
-
 priv->dspfd = -1;
+#endif
+
+close(priv->btfd);
 priv->btfd = -1;
 
 priv->dspready = priv->videoready = 0;
@@@@ -821,13 +946,21 @@@@ gettimeofday(&curtime, NULL);
 
 /* Get exactly one frame of audio, which forces video sync to audio.. */
 
+#if defined(CONFIG_SNDIO_AUDIO)
+bytesread=sio_read(priv->hdl, buffer, len);
+#else
 bytesread=read(priv->dspfd, buffer, len);
+#endif
 
 while(bytesread < len)
     {
+#if defined(CONFIG_SNDIO_AUDIO)
+    ret=sio_read(priv->hdl, &buffer[bytesread], len-bytesread);
+    if(ret == 0)
+#else
     ret=read(priv->dspfd, &buffer[bytesread], len-bytesread);
-
     if(ret == -1)
+#endif
         {
         mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorReadingAudio, strerror(errno));
         return 0;
@@@@ -860,13 +993,19 @@@@ return priv->dspbytesread * 1.0 / priv->dsprate;
 static int get_audio_framesize(priv_t *priv)
 {
 int bytesavail;
-#ifdef CONFIG_SUN_AUDIO
+#if defined(CONFIG_SUN_AUDIO) && !defined(CONFIG_SNDIO_AUDIO)
 struct audio_info auinf;
 #endif
 
 if(!priv->dspready) return 0;
 
-#ifdef CONFIG_SUN_AUDIO
+#if defined(CONFIG_SNDIO_AUDIO)
+bytesavail = priv->realpos - priv->dspbytesread;
+if(bytesavail > priv->appbufsz)
+    bytesavail = priv->appbufsz;
+if(bytesavail < priv->round)
+    bytesavail = priv->round;
+#elif defined(CONFIG_SUN_AUDIO)
 if(ioctl(priv->dspfd, AUDIO_GETINFO, &auinf) < 0)
     {
     mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848IoctlFailed, "AUDIO_GETINFO", strerror(errno));
@


1.5
log
@Update to MPlayer 20130819 snapshot.

ok gonzalo@@ sthen@@ edd@@
@
text
@d1 4
a4 4
$OpenBSD: patch-stream_tvi_bsdbt848_c,v 1.4 2010/11/08 21:25:44 edd Exp $
--- stream/tvi_bsdbt848.c.orig	Mon Aug 19 10:49:11 2013
+++ stream/tvi_bsdbt848.c	Tue Aug 20 02:51:59 2013
@@@@ -51,9 +51,10 @@@@
d16 1
a16 1
@@@@ -65,6 +66,9 @@@@
d26 1
a26 1
@@@@ -74,6 +78,7 @@@@
d34 1
a34 1
@@@@ -103,7 +108,13 @@@@ typedef struct priv {
d48 1
a48 1
@@@@ -111,6 +122,9 @@@@ typedef struct priv {
d58 1
a58 1
@@@@ -160,6 +174,15 @@@@ static priv_t *G_private=NULL;
d74 1
a74 1
@@@@ -220,7 +243,9 @@@@ static tvi_handle_t *tvi_init_bsdbt848(tv_param_t* tv_
d85 1
a85 1
@@@@ -329,12 +354,39 @@@@ static int control(priv_t *priv, int cmd, void *arg)
d126 1
a126 1
@@@@ -643,12 +695,76 @@@@ priv->dspready = 1;
d203 1
a203 1
@@@@ -674,6 +790,8 @@@@ if(priv->dspready &&
d212 1
a212 1
@@@@ -697,7 +815,9 @@@@ if(ioctl(priv->btfd, METEORSSIGNAL, &marg) < 0)
d222 1
a222 1
@@@@ -736,10 +856,15 @@@@ if(ioctl(priv->btfd, METEORCAPTUR, &marg) < 0 )
d240 1
a240 1
@@@@ -819,13 +944,21 @@@@ gettimeofday(&curtime, NULL);
d263 1
a263 1
@@@@ -858,13 +991,19 @@@@ return priv->dspbytesread * 1.0 / priv->dsprate;
@


1.4
log
@Update to mplayer-20101024. Noteworthy improvements include vpx
(webm) support and alpha support. This work is a joint effort from
myself, naddy@@ and jakemsr@@. Cheers.

OK jakemsr@@
@
text
@d1 4
a4 4
$OpenBSD: patch-stream_tvi_bsdbt848_c,v 1.3 2010/05/26 21:29:56 jakemsr Exp $
--- stream/tvi_bsdbt848.c.orig	Mon Sep 13 19:09:29 2010
+++ stream/tvi_bsdbt848.c	Sun Oct 24 10:40:01 2010
@@@@ -54,9 +54,10 @@@@
d16 1
a16 1
@@@@ -68,6 +69,9 @@@@
d26 1
a26 1
@@@@ -77,6 +81,7 @@@@
d34 1
a34 1
@@@@ -106,7 +111,13 @@@@ typedef struct priv {
d48 1
a48 1
@@@@ -114,6 +125,9 @@@@ typedef struct priv {
d58 1
a58 1
@@@@ -163,6 +177,15 @@@@ static priv_t *G_private=NULL;
d74 1
a74 1
@@@@ -223,7 +246,9 @@@@ static tvi_handle_t *tvi_init_bsdbt848(tv_param_t* tv_
d85 1
a85 1
@@@@ -332,12 +357,39 @@@@ static int control(priv_t *priv, int cmd, void *arg)
d126 1
a126 1
@@@@ -646,12 +698,76 @@@@ priv->dspready = TRUE;
d203 2
a204 2
@@@@ -677,6 +793,8 @@@@ if((priv->dspready == TRUE) &&
     priv->dspready = FALSE;
d212 1
a212 1
@@@@ -701,7 +819,9 @@@@ if(ioctl(priv->btfd, METEORSSIGNAL, &marg) < 0)
d222 1
a222 1
@@@@ -740,10 +860,15 @@@@ if(ioctl(priv->btfd, METEORCAPTUR, &marg) < 0 )
d239 2
a240 2
 priv->dspready = priv->videoready = FALSE;
@@@@ -823,13 +948,21 @@@@ gettimeofday(&curtime, NULL);
d263 1
a263 1
@@@@ -862,13 +995,19 @@@@ return priv->dspbytesread * 1.0 / priv->dsprate;
d272 1
a272 1
 if(priv->dspready == FALSE) return 0;
@


1.3
log
@update to mplayer-export-snapshot-20100308

locally:
* fix audio when using bsdbt848 video driver (problems noted by simon@@)
* allow 24-bit audio output formats in the sndio backend (from ratchov@@)

mostly from edd@@ (MAINTAINER)
@
text
@d1 3
a3 3
$OpenBSD: patch-stream_tvi_bsdbt848_c,v 1.2 2009/10/11 13:36:23 edd Exp $
--- stream/tvi_bsdbt848.c.orig	Sat Jan 30 14:26:47 2010
+++ stream/tvi_bsdbt848.c	Wed May 19 15:25:37 2010
d34 1
a34 1
@@@@ -106,7 +111,13 @@@@ typedef struct {
d48 1
a48 1
@@@@ -114,6 +125,9 @@@@ typedef struct {
@


1.2
log
@New version of mplayer based upon a snapshot (20090708).
  * fixes some flv playback
  * removed ggi output - broken i386/sparc64.
  * removed gui (deprecated) - use gnome-mplayer instead.
  * removed win32 codecs - opensource codecs are good quality.

OK, naddy@@, sthen@@
@
text
@d1 4
a4 4
$OpenBSD$
--- stream/tvi_bsdbt848.c.orig	Tue May 12 19:58:57 2009
+++ stream/tvi_bsdbt848.c	Sat Jul 11 06:45:32 2009
@@@@ -37,9 +37,10 @@@@
d16 1
a16 1
@@@@ -51,6 +52,9 @@@@
d26 1
a26 1
@@@@ -60,6 +64,7 @@@@
d34 1
a34 1
@@@@ -89,7 +94,12 @@@@ typedef struct {
d40 2
a41 1
+    struct sio_par spar, gpar;
d48 27
a74 1
@@@@ -206,7 +216,9 @@@@ static tvi_handle_t *tvi_init_bsdbt848(tv_param_t* tv_
d85 1
a85 1
@@@@ -315,12 +327,19 @@@@ static int control(priv_t *priv, int cmd, void *arg)
d90 25
a114 5
+           sio_initpar(&priv->spar);
+           priv->spar.rate = dspspeed;
+           if(!sio_setpar(priv->hdl, &priv->spar)) { printf("sio_setpar failed at %d\n", __LINE__); }
+           if(!sio_getpar(priv->hdl, &priv->gpar)) { printf("sio_getpar failed at %d\n", __LINE__); }
+           dspspeed = priv->gpar.rate;
d126 1
a126 1
@@@@ -629,12 +648,46 @@@@ priv->dspready = TRUE;
d140 16
a155 1
+if((priv->hdl = sio_open(priv->dspdev, SIO_REC, 0) == NULL))
d157 1
a157 1
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorOpeningDspDev, strerror(errno));
d161 2
a162 6
+sio_initpar(&priv->spar);
+priv->spar.rchan = priv->dspstereo + 1;
+priv->spar.rate = priv->dspspeed;
+priv->spar.bits = priv->dspsamplesize;
+priv->spar.le = 1;
+priv->spar.sig = 1;
d164 1
a164 2
+if((priv->dspready == TRUE) &&
+    (!sio_setpar(priv->hdl, &priv->spar)))
d166 6
a171 2
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, strerror(errno));
+    sio_close(priv->hdl);
d174 6
d181 13
a193 1
+if(!sio_start(priv->hdl))
a194 1
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, strerror(errno));
a195 1
+    priv->dspready = FALSE;
d203 1
a203 1
@@@@ -660,6 +713,8 @@@@ if((priv->dspready == TRUE) &&
d212 1
a212 1
@@@@ -684,7 +739,9 @@@@ if(ioctl(priv->btfd, METEORSSIGNAL, &marg) < 0)
d222 1
a222 1
@@@@ -723,10 +780,15 @@@@ if(ioctl(priv->btfd, METEORCAPTUR, &marg) < 0 )
d240 1
a240 1
@@@@ -806,11 +868,19 @@@@ gettimeofday(&curtime, NULL);
d254 1
d257 2
a259 2
 
     if(ret == -1)
d261 3
a263 1
@@@@ -845,13 +915,16 @@@@ return priv->dspbytesread * 1.0 / priv->dsprate;
d276 5
a280 2
+sio_getpar(priv->hdl, &priv->gpar);
+bytesavail = priv->gpar.round * priv->gpar.bps;
@


1.2.2.1
log
@MFC:

"fix audio when using bsdbt848 video driver"

"looks ok" to edd@@, ok jakemsr@@
@
text
@d1 3
a3 3
$OpenBSD: patch-stream_tvi_bsdbt848_c,v 1.2 2009/10/11 13:36:23 edd Exp $
--- stream/tvi_bsdbt848.c.orig	Tue May 12 22:58:57 2009
+++ stream/tvi_bsdbt848.c	Wed Jul 21 22:55:11 2010
d34 1
a34 1
@@@@ -89,7 +94,13 @@@@ typedef struct {
d40 1
a40 2
+    struct sio_par par;
+    int round, appbufsz; /* sizes in bytes */
d47 1
a47 27
@@@@ -97,6 +108,9 @@@@ typedef struct {
     int dspframesize;
     int dsprate;
     long long dspbytesread;
+#if defined(CONFIG_SNDIO_AUDIO)
+    long long realpos;
+#endif
 
 /* Video */
     char *btdev;
@@@@ -146,6 +160,15 @@@@ static priv_t *G_private=NULL;
 
 static int getinput(int innumber);
 
+#if defined(CONFIG_SNDIO_AUDIO)
+void movecb(void *addr, int delta)
+{
+    priv_t *priv = addr;
+
+    priv->realpos += delta * priv->dspsamplesize/8 * (priv->dspstereo+1);
+}
+#endif
+
 static void processframe(int signal)
 {
 struct timeval curtime;
@@@@ -206,7 +229,9 @@@@ static tvi_handle_t *tvi_init_bsdbt848(tv_param_t* tv_
d58 1
a58 1
@@@@ -315,12 +340,39 @@@@ static int control(priv_t *priv, int cmd, void *arg)
d63 5
a67 25
+        if (!sio_stop(priv->hdl))
+            {
+            mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848InvalidAudioRate, "sio_stop failed");
+            return TVI_CONTROL_FALSE;
+            }
+        sio_initpar(&priv->par);
+        priv->par.rate = dspspeed;
+        priv->par.round = 4096 / (priv->dspsamplesize/8 * (priv->dspstereo + 1));
+        if(!sio_setpar(priv->hdl, &priv->par) || !sio_getpar(priv->hdl, &priv->par))
+            {
+            mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848InvalidAudioRate, "sio_[s|g]etpar failed");
+            return TVI_CONTROL_FALSE;
+            }
+        priv->round = priv->par.round * priv->par.bps * priv->par.rchan;
+        priv->appbufsz = priv->par.appbufsz * priv->par.bps * priv->par.rchan;
+        if(priv->par.rate != dspspeed)
+            {
+            mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848InvalidAudioRate, "returned rate != requested rate");
+            return TVI_CONTROL_FALSE;
+            }
+        if (!sio_start(priv->hdl))
+            {
+            mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848InvalidAudioRate, "sio_start failed");
+            return TVI_CONTROL_FALSE;
+            }
d79 1
a79 1
@@@@ -629,12 +681,76 @@@@ priv->dspready = TRUE;
d93 1
a93 1
+if((priv->hdl = sio_open(priv->dspdev, SIO_REC, 0)) == NULL)
d95 1
a95 1
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorOpeningDspDev, "sio_open failed");
d99 6
a104 8
+sio_initpar(&priv->par);
+priv->par.rchan = priv->dspstereo + 1;
+priv->par.rate = priv->dspspeed;
+priv->par.bits = priv->dspsamplesize;
+priv->par.sig = 1;
+//priv->par.round = FRAGSIZE / (priv->dspsamplesize/8 * (priv->dspstereo + 1));
+priv->par.round = priv->dspspeed / 100; /* 10 ms */
+priv->par.appbufsz = priv->dspspeed / 4; /* 250 ms */
d106 2
a107 1
+if(priv->dspready && (!sio_setpar(priv->hdl, &priv->par) || !sio_getpar(priv->hdl, &priv->par)))
d109 2
a110 1
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, "sio_[s|g]etpar failed");
d114 1
a114 4
+priv->round = priv->par.round * priv->par.bps * priv->par.rchan;
+priv->appbufsz = priv->par.appbufsz * priv->par.bps * priv->par.rchan;
+
+if(priv->par.rchan != priv->dspstereo + 1)
d116 2
a117 6
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, "returned channels != requested channels");
+    priv->dspready = FALSE;
+    }
+if (priv->par.bits != priv->dspsamplesize || priv->par.sig != 1 || priv->par.le != SIO_LE_NATIVE)
+    {
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, "returned format != requested format");
a119 23
+if(priv->par.rate != priv->dspspeed)
+    {
+    mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, "returned rate != requested rate");
+    // this may be overridden later with command line options, so it's not necessarily a problem
+    //priv->dspready = FALSE;
+    }
+
+priv->realpos = 0;
+
+if(priv->dspready == TRUE)
+    {
+    sio_onmove(priv->hdl, movecb, priv);
+    if(!sio_start(priv->hdl))
+        {
+        mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorConfiguringDsp, "sio_start failed");
+        priv->dspready = FALSE;
+        }
+    }
+
+if(priv->dspready == FALSE)
+    {
+    sio_close(priv->hdl);
+    }
d126 1
a126 1
@@@@ -660,6 +776,8 @@@@ if((priv->dspready == TRUE) &&
d135 1
a135 1
@@@@ -684,7 +802,9 @@@@ if(ioctl(priv->btfd, METEORSSIGNAL, &marg) < 0)
d145 1
a145 1
@@@@ -723,10 +843,15 @@@@ if(ioctl(priv->btfd, METEORCAPTUR, &marg) < 0 )
d163 1
a163 1
@@@@ -806,13 +931,21 @@@@ gettimeofday(&curtime, NULL);
a176 1
+    if(ret == 0)
d179 2
a180 1
-
a181 1
+#endif
d183 1
a183 3
         mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848ErrorReadingAudio, strerror(errno));
         return 0;
@@@@ -845,13 +978,19 @@@@ return priv->dspbytesread * 1.0 / priv->dsprate;
d196 2
a197 5
+bytesavail = priv->realpos - priv->dspbytesread;
+if(bytesavail > priv->appbufsz)
+    bytesavail = priv->appbufsz;
+if(bytesavail < priv->round)
+    bytesavail = priv->round;
@


1.1
log
@
maintenence update to mplayer-1.0rc2

ok biorn@@ (MAINTAINER), ajacoutot@@, brad@@
@
text
@d2 3
a4 4
--- stream/tvi_bsdbt848.c.orig	Sun Oct  7 12:49:26 2007
+++ stream/tvi_bsdbt848.c	Mon Dec 17 14:49:10 2007
@@@@ -36,6 +36,7 @@@@
 #include <sys/time.h>
d7 2
a8 1
+#include <errno.h>
d11 6
a16 2
 #ifdef USE_SUN_AUDIO
@@@@ -50,6 +51,7 @@@@
d20 3
a22 1
+#ifndef __OpenBSD__
d26 1
a26 1
@@@@ -59,6 +61,7 @@@@
d34 25
a58 16
@@@@ -141,9 +144,14 @@@@ typedef struct {
 
 #include "tvi_def.h"
 
+static int sources[6] = { METEOR_INPUT_DEV1, METEOR_INPUT_DEV0, METEOR_INPUT_DEV2,
+    METEOR_INPUT_DEV3, METEOR_INPUT_DEV_RGB, METEOR_INPUT_DEV_SVIDEO };
+
+
 static priv_t *G_private=NULL;
 
 static int getinput(int innumber);
+static int getsource(int insrc);
 
 static void processframe(int signal)
 {
@@@@ -314,7 +322,14 @@@@ static int control(priv_t *priv, int cmd, void *arg)
d62 6
a67 5
+#if defined(__OpenBSD__)
+           audio_info_t audio_if;
+           AUDIO_INITINFO(&audio_if);
+           audio_if.record.sample_rate = dspspeed;
+           if (ioctl(priv->dspfd, AUDIO_SETINFO, &audio_if) == -1)
d69 1
a69 2
            if(ioctl(priv->dspfd, SNDCTL_DSP_SPEED, &dspspeed) == -1) 
+#endif
d72 3
a74 8
             return(TVI_CONTROL_FALSE);
@@@@ -525,7 +540,12 @@@@ static int init(priv_t *priv)
 int marg;
 int count;
 u_short tmp_fps;
+int tuner_audio;
+#if defined(__OpenBSD__)
+audio_info_t audio_if;
d76 1
d78 2
a79 36
+
 G_private = priv; /* Oooh, sick */
 
 /* Video Configuration */
@@@@ -536,7 +556,7 @@@@ priv->iformat = METEOR_FMT_PAL;
 priv->maxheight = PAL_HEIGHT;
 priv->maxwidth = PAL_WIDTH;
 priv->maxfps = PAL_FPS;
-priv->source = METEOR_INPUT_DEV0;
+priv->source = METEOR_INPUT_DEV1;
 priv->fps = priv->maxfps;
 
 priv->starttime=0;
@@@@ -622,13 +642,33 @@@@ if(priv->tunerfd < 0)
     priv->tunerready = FALSE;
     }
 
+if(ioctl(priv->tunerfd, BT848_GAUDIO, &tuner_audio) < 0)
+    {
+    perror("tuner get audio");
+    priv->tunerready = FALSE;
+    }
+if(tuner_audio & AUDIO_MUTE)
+    {
+    tuner_audio = AUDIO_UNMUTE;
+    if(ioctl(priv->tunerfd, BT848_SAUDIO, &tuner_audio) < 0)
+        {
+        perror("tuner unmute");
+        priv->tunerready = FALSE;
+        }
+    }
+
+
 /* Audio Configuration */
 
 priv->dspready = TRUE;
d83 1
a83 3
+#if defined (__OpenBSD__)
+priv->dspfmt = AUDIO_ENCODING_SLINEAR_LE;
+#else
d88 2
a89 2
 priv->dspframesize = priv->dspspeed*priv->dspsamplesize/8/priv->fps * 
@@@@ -642,6 +682,26 @@@@ if((priv->dspfd = open (priv->dspdev, O_RDONLY, 0)) < 
d91 1
a91 3
 marg = (256 << 16) | 12;
 
+#if defined(__OpenBSD__)
d93 5
a97 1
+    AUDIO_INITINFO(&audio_if);
d99 6
a104 4
+    audio_if.record.precision = priv->dspsamplesize;
+    audio_if.record.channels = priv->dspstereo+1;
+    audio_if.record.sample_rate = priv->dspspeed;
+    audio_if.record.encoding = priv->dspfmt;
d106 7
a112 1
+    audio_if.mode = AUMODE_RECORD;
d114 6
a119 6
+    if (ioctl(priv->dspfd, AUDIO_SETINFO, &audio_if) < 0)
+        {
+        perror ("AUDIO_SETINFO:ioctl");
+        close(priv->dspfd);
+        priv->dspready = FALSE;
+        }
d123 1
a123 1
 if (ioctl(priv->dspfd, SNDCTL_DSP_SETFRAGMENT, &marg ) < 0 ) 
d125 2
a126 2
     mp_msg(MSGT_TV, MSGL_ERR, MSGTR_TV_Bt848IoctlFailed, "SNDCTL_DSP_SETFRAGMENT", strerror(errno));
@@@@ -659,6 +719,8 @@@@ if((priv->dspready == TRUE) &&
d132 1
a132 1
 return(1);
d135 9
a143 5
@@@@ -703,6 +765,7 @@@@ return(1);
 static int uninit(priv_t *priv)
 {
 int marg;
+int tuner_audio;
d145 3
a147 1
 if(priv->videoready == FALSE) return(0);
d149 5
a153 2
@@@@ -725,6 +788,15 @@@@ if(ioctl(priv->btfd, METEORCAPTUR, &marg) < 0 ) 
 close(priv->btfd);
d155 3
a157 9
 
+tuner_audio = AUDIO_MUTE;
+if(ioctl(priv->tunerfd, BT848_SAUDIO, &tuner_audio) < 0)
+    {
+    perror("tuner mute");
+    priv->tunerready = FALSE;
+    }
+
+close(priv->tunerfd);
d159 1
a159 1
 priv->dspfd = -1;
d162 4
a165 3
@@@@ -869,22 +941,15 @@@@ if(ioctl(priv->dspfd, FIONREAD, &bytesavail) < 0) 
 /* When mencoder wants audio data, it wants data..
    it won't go do anything else until it gets it :( */
d167 5
a171 2
-if(bytesavail == 0) return FRAGSIZE;
+// if(bytesavail == 0) return FRAGSIZE;
d173 7
a179 2
 return(bytesavail);
 }
d181 4
a184 1
 static int getinput(int innumber)
d186 16
a201 15
-switch(innumber)
-    {
-    case 0: return METEOR_INPUT_DEV0;     /* RCA   */
-    case 1: return METEOR_INPUT_DEV1;     /* Tuner */
-    case 2: return METEOR_INPUT_DEV2;     /* In 1  */
-    case 3: return METEOR_INPUT_DEV3;     /* In 2  */
-    case 4: return METEOR_INPUT_DEV_RGB;     /* RGB   */
-    case 5: return METEOR_INPUT_DEV_SVIDEO; /* SVid  */
-    }
-
+if (sources[innumber])
+    return sources[innumber];
+    
 return 0;
 }
@

