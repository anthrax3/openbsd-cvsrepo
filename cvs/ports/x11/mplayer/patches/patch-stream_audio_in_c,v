head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.30
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.28
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.26
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.22
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.24
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.18
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.16
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2010.05.26.21.29.56;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2009.10.11.13.36.23;	author edd;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to mplayer-export-snapshot-20100308

locally:
* fix audio when using bsdbt848 video driver (problems noted by simon@@)
* allow 24-bit audio output formats in the sndio backend (from ratchov@@)

mostly from edd@@ (MAINTAINER)
@
text
@$OpenBSD: patch-stream_audio_in_c,v 1.1 2009/10/11 13:36:23 edd Exp $
--- stream/audio_in.c.orig	Sat Jan 30 22:26:47 2010
+++ stream/audio_in.c	Mon Mar  8 14:28:42 2010
@@@@ -54,6 +54,12 @@@@ int audio_in_init(audio_in_t *ai, int type)
 	ai->oss.device = strdup("/dev/dsp");
 	return 0;
 #endif
+#ifdef CONFIG_SNDIO_AUDIO
+    case AUDIO_IN_SNDIO:
+	ai->sndio.hdl = NULL;
+	ai->sndio.device = strdup("default");
+	return 0;
+#endif
     default:
 	return -1;
     }
@@@@ -75,6 +81,12 @@@@ int audio_in_setup(audio_in_t *ai)
 	ai->setup = 1;
 	return 0;
 #endif
+#ifdef CONFIG_SNDIO_AUDIO
+    case AUDIO_IN_SNDIO:
+	if (ai_sndio_init(ai) < 0) return -1;
+	ai->setup = 1;
+	return 0;
+#endif
     default:
 	return -1;
     }
@@@@ -97,6 +109,13 @@@@ int audio_in_set_samplerate(audio_in_t *ai, int rate)
 	if (ai_oss_set_samplerate(ai) < 0) return -1;
 	return ai->samplerate;
 #endif
+#ifdef CONFIG_SNDIO_AUDIO
+    case AUDIO_IN_SNDIO:
+	ai->req_samplerate = rate;
+	if (!ai->setup) return 0;
+	if (ai_sndio_setup(ai) < 0) return -1;
+	return ai->samplerate;
+#endif
     default:
 	return -1;
     }
@@@@ -119,6 +138,13 @@@@ int audio_in_set_channels(audio_in_t *ai, int channels
 	if (ai_oss_set_channels(ai) < 0) return -1;
 	return ai->channels;
 #endif
+#ifdef CONFIG_SNDIO_AUDIO
+    case AUDIO_IN_SNDIO:
+	ai->req_channels = channels;
+	if (!ai->setup) return 0;
+	if (ai_sndio_setup(ai) < 0) return -1;
+	return ai->channels;
+#endif
     default:
 	return -1;
     }
@@@@ -147,6 +173,12 @@@@ int audio_in_set_device(audio_in_t *ai, char *device)
 	ai->oss.device = strdup(device);
 	return 0;
 #endif
+#ifdef CONFIG_SNDIO_AUDIO
+    case AUDIO_IN_SNDIO:
+	if (ai->sndio.device) free(ai->sndio.device);
+	ai->sndio.device = strdup(device);
+	return 0;
+#endif
     default:
 	return -1;
     }
@@@@ -172,6 +204,13 @@@@ int audio_in_uninit(audio_in_t *ai)
 	    ai->setup = 0;
 	    return 0;
 #endif
+#ifdef CONFIG_SNDIO_AUDIO
+	case AUDIO_IN_SNDIO:
+	    if (ai->sndio.hdl)
+	        sio_close(ai->sndio.hdl);
+	    ai->setup = 0;
+	    return 0;
+#endif
 	}
     }
     return -1;
@@@@ -188,6 +227,12 @@@@ int audio_in_start_capture(audio_in_t *ai)
     case AUDIO_IN_OSS:
 	return 0;
 #endif
+#ifdef CONFIG_SNDIO_AUDIO
+    case AUDIO_IN_SNDIO:
+	if (!sio_start(ai->sndio.hdl))
+	    return -1;
+	return 0;
+#endif
     default:
 	return -1;
     }
@@@@ -221,6 +266,19 @@@@ int audio_in_read_chunk(audio_in_t *ai, unsigned char 
 #ifdef CONFIG_OSS_AUDIO
     case AUDIO_IN_OSS:
 	ret = read(ai->oss.audio_fd, buffer, ai->blocksize);
+	if (ret != ai->blocksize) {
+	    if (ret < 0) {
+		mp_msg(MSGT_TV, MSGL_ERR, MSGTR_MPDEMUX_AUDIOIN_ErrReadingAudio, strerror(errno));
+	    } else {
+		mp_msg(MSGT_TV, MSGL_ERR, MSGTR_MPDEMUX_AUDIOIN_NotEnoughSamples);
+	    }
+	    return -1;
+	}
+	return ret;
+#endif
+#ifdef CONFIG_SNDIO_AUDIO
+    case AUDIO_IN_SNDIO:
+	ret = sio_read(ai->sndio.hdl, buffer, ai->blocksize);
 	if (ret != ai->blocksize) {
 	    if (ret < 0) {
 		mp_msg(MSGT_TV, MSGL_ERR, MSGTR_MPDEMUX_AUDIOIN_ErrReadingAudio, strerror(errno));
@


1.1
log
@New version of mplayer based upon a snapshot (20090708).
  * fixes some flv playback
  * removed ggi output - broken i386/sparc64.
  * removed gui (deprecated) - use gnome-mplayer instead.
  * removed win32 codecs - opensource codecs are good quality.

OK, naddy@@, sthen@@
@
text
@d1 4
a4 4
$OpenBSD$
--- stream/audio_in.c.orig	Tue Jul 21 14:38:14 2009
+++ stream/audio_in.c	Tue Jul 21 14:52:10 2009
@@@@ -36,6 +36,12 @@@@ int audio_in_init(audio_in_t *ai, int type)
d17 1
a17 1
@@@@ -57,6 +63,12 @@@@ int audio_in_setup(audio_in_t *ai)
d30 1
a30 1
@@@@ -79,6 +91,13 @@@@ int audio_in_set_samplerate(audio_in_t *ai, int rate)
d44 1
a44 1
@@@@ -101,6 +120,13 @@@@ int audio_in_set_channels(audio_in_t *ai, int channels
d58 1
a58 1
@@@@ -129,6 +155,12 @@@@ int audio_in_set_device(audio_in_t *ai, char *device)
d71 1
a71 1
@@@@ -154,6 +186,13 @@@@ int audio_in_uninit(audio_in_t *ai)
d85 1
a85 1
@@@@ -170,6 +209,12 @@@@ int audio_in_start_capture(audio_in_t *ai)
d98 1
a98 1
@@@@ -203,6 +248,19 @@@@ int audio_in_read_chunk(audio_in_t *ai, unsigned char 
@

