head	1.4;
access;
symbols
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2016.04.10.10.00.32;	author robert;	state dead;
branches;
next	1.3;
commitid	37LdD5Q0cOGzB2jJ;

1.3
date	2015.03.28.16.06.48;	author sthen;	state Exp;
branches;
next	1.2;
commitid	FQZhFx5o32GR3pY6;

1.2
date	2014.07.18.16.00.28;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	5DapSLvTKu250Kkt;

1.1
date	2013.09.25.07.58.50;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove patches missed by previous commit
@
text
@$OpenBSD: patch-src_gifcodec_c,v 1.3 2015/03/28 16:06:48 sthen Exp $

giflib 5.1+
http://cvsweb.netbsd.org/bsdweb.cgi/~checkout~/pkgsrc/graphics/libgdiplus/patches/patch-src_gifcodec.c?rev=1.2

--- src/gifcodec.c.orig	Fri Dec  2 17:23:12 2011
+++ src/gifcodec.c	Sat Mar 28 16:04:03 2015
@@@@ -39,8 +39,12 @@@@ GUID gdip_gif_image_format_guid = {0xb96b3cb0U, 0x0728
 
 #include "gifcodec.h"
 
-/* giflib declares this incorrectly as EgifOpen */
+/* giflib declares this incorrectly as EgifOpen up to 4.1.2
+   GIF_LIB_VERSION is defined up to 4.1.6, and prototype is changed in 5.0,
+   so it is safe to use it as check condition */
+#ifdef GIF_LIB_VERSION
 extern GifFileType *EGifOpen(void *userData, OutputFunc writeFunc);
+#endif
 
 /* Data structure used for callback */
 typedef struct
@@@@ -129,7 +133,11 @@@@ AddExtensionBlockMono(SavedImage *New, int Len, BYTE E
 
 	if (ExtData) {
 		memcpy(ep->Bytes, ExtData, Len);
+#if GIFLIB_MAJOR >= 5
+		ep->Function = New->ExtensionBlocks[New->ExtensionBlockCount++].Function;
+#else
 		ep->Function = New->Function;
+#endif
 	}
 
 	return (GIF_OK);
@@@@ -232,7 +240,11 @@@@ DGifSlurpMono(GifFileType * GifFile, SavedImage *Trail
 			}
 
 			case EXTENSION_RECORD_TYPE: {
+#if GIFLIB_MAJOR >= 5
+				if (DGifGetExtension(GifFile, &temp_save.ExtensionBlocks[temp_save.ExtensionBlockCount].Function, &ExtData) == GIF_ERROR) {
+#else
 				if (DGifGetExtension(GifFile, &temp_save.Function, &ExtData) == GIF_ERROR) {
+#endif
 					return (GIF_ERROR);
 				}
 
@@@@ -245,7 +257,9 @@@@ DGifSlurpMono(GifFileType * GifFile, SavedImage *Trail
 					if (DGifGetExtensionNext(GifFile, &ExtData) == GIF_ERROR) {
 						return (GIF_ERROR);
 					}
+#if GIFLIB_MAJOR < 5
 					temp_save.Function = 0;
+#endif
 				}
 				break;
 			}
@@@@ -304,9 +318,17 @@@@ gdip_load_gif_image (void *stream, GpImage **image, BO
 	loop_counter = FALSE;
 
 	if (from_file) {
+#if GIFLIB_MAJOR >= 5
+		gif = DGifOpen(stream, &gdip_gif_fileinputfunc, NULL);
+#else 
 		gif = DGifOpen(stream, &gdip_gif_fileinputfunc);
+#endif
 	} else {
+#if GIFLIB_MAJOR >= 5
+		gif = DGifOpen (stream, &gdip_gif_inputfunc, NULL);
+#else
 		gif = DGifOpen (stream, &gdip_gif_inputfunc);
+#endif
 	}
 	
 	if (gif == NULL) {
@@@@ -581,7 +603,7 @@@@ gdip_load_gif_image (void *stream, GpImage **image, BO
 	}
 
 	FreeExtensionMono(&global_extensions);
-	DGifCloseFile (gif);
+	DGifCloseFile (gif, NULL);
 
 	*image = result;
 	return Ok;
@@@@ -597,7 +619,7 @@@@ error:	
 
 	if (gif != NULL) {
 		FreeExtensionMono (&global_extensions);
-		DGifCloseFile (gif);
+		DGifCloseFile (gif, NULL);
 	}
 
 	*image = NULL;
@@@@ -661,9 +683,17 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
 	}
 
 	if (from_file) {
+#if GIFLIB_MAJOR >= 5
+		fp = EGifOpenFileName (stream, 0, NULL);
+#else
 		fp = EGifOpenFileName (stream, 0);
+#endif
 	} else {
+#if GIFLIB_MAJOR >= 5
+		fp = EGifOpen (stream, gdip_gif_outputfunc, NULL);
+#else
 		fp = EGifOpen (stream, gdip_gif_outputfunc);
+#endif
 	}
 		
 	if (!fp) {
@@@@ -702,7 +732,11 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
 					goto error; 
 				}
 
+#if GIFLIB_MAJOR >= 5
+				cmap = GifMakeMapObject(cmap_size, 0);
+#else
 				cmap = MakeMapObject(cmap_size, 0);
+#endif
 
 				pixbuf = GdipAlloc(pixbuf_size);
 				if (pixbuf == NULL) {
@@@@ -793,7 +827,11 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
 				pixbuf = pixbuf_org;
 			} else {
 				cmap_size = 256;
+#if GIFLIB_MAJOR >= 5
+				cmap  = GifMakeMapObject (cmap_size, 0);
+#else
 				cmap  = MakeMapObject (cmap_size, 0);
+#endif
 
 				red = GdipAlloc(pixbuf_size);
 				green = GdipAlloc(pixbuf_size);
@@@@ -824,13 +862,21 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
 						v += 4;
 					}
 				}
+#if GIFLIB_MAJOR >= 5
+				if (GifQuantizeBuffer(bitmap_data->width, bitmap_data->height, &cmap_size, 
+#else
 				if (QuantizeBuffer(bitmap_data->width, bitmap_data->height, &cmap_size, 
+#endif
 						red,  green, blue, pixbuf, cmap->Colors) == GIF_ERROR) {
 					goto error;
 				}
 			}
 
+#if GIFLIB_MAJOR >= 5
+			cmap->BitsPerPixel = GifBitSize (cmap_size);
+#else
 			cmap->BitsPerPixel = BitSize (cmap_size);
+#endif
 			cmap->ColorCount = 1 << cmap->BitsPerPixel;
 
 			if ((frame == 0) && (k == 0)) {
@@@@ -848,8 +894,15 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
 						Buffer[0] = 1;
 						Buffer[1] = ptr[0];
 						Buffer[2] = ptr[1];
+#if GIFLIB_MAJOR >= 5
+						EGifPutExtensionLeader(fp, APPLICATION_EXT_FUNC_CODE);
+						EGifPutExtensionBlock(fp, 11, "NETSCAPE2.0");
+						EGifPutExtensionBlock(fp, 3, Buffer);
+						EGifPutExtensionTrailer(fp);
+#else
 						EGifPutExtensionFirst(fp, APPLICATION_EXT_FUNC_CODE, 11, "NETSCAPE2.0");
 						EGifPutExtensionLast(fp, APPLICATION_EXT_FUNC_CODE, 3, Buffer);
+#endif
 					}
 				}
 
@@@@ -901,7 +954,11 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
 				pixbuf += bitmap_data->width;
 			}
 
+#if GIFLIB_MAJOR >= 5
+			GifFreeMapObject (cmap);
+#else
 			FreeMapObject (cmap);
+#endif
 			if (red != NULL) {
 				GdipFree (red);
 			}
@@@@ -923,13 +980,17 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
 		}
 	}
 
-	EGifCloseFile (fp);	
+	EGifCloseFile (fp, NULL);	
 	
 	return Ok;
 
 error:
 	if (cmap != NULL) {
+#if GIFLIB_MAJOR >= 5
+		GifFreeMapObject (cmap);
+#else
 		FreeMapObject (cmap);
+#endif
 	}
 
 	if (red != NULL) {
@


1.3
log
@handle giflib api change, reported by naddy
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gifcodec_c,v 1.2 2014/07/18 16:00:28 ajacoutot Exp $
@


1.2
log
@Update to libgdiplus-2.10.9.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gifcodec_c,v 1.1 2013/09/25 07:58:50 sthen Exp $
d3 1
a3 1
giflib 5.0+
d6 2
a7 2
--- src/gifcodec.c.orig	Fri Dec  2 18:23:12 2011
+++ src/gifcodec.c	Fri Jul 18 15:30:15 2014
d74 18
d184 8
a191 1
@@@@ -929,7 +986,11 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
@


1.1
log
@libungif->giflib and patch where necessary, ok jasper@@ aja@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 2
a7 2
--- src/gifcodec.c.orig	Thu Jan 13 15:28:19 2011
+++ src/gifcodec.c	Thu Sep 19 06:38:40 2013
d74 1
a74 1
@@@@ -662,9 +684,17 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
d92 1
a92 1
@@@@ -703,7 +733,11 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
d104 1
a104 1
@@@@ -794,7 +828,11 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
d116 1
a116 1
@@@@ -825,13 +863,21 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
d138 1
a138 1
@@@@ -849,8 +895,15 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
d154 1
a154 1
@@@@ -902,7 +955,11 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
d166 1
a166 1
@@@@ -930,7 +987,11 @@@@ gdip_save_gif_image (void *stream, GpImage *image, BOO
@

