head	1.2;
access;
symbols
	jasper_20171504:1.1.1.1 jasper:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.07.09.18.18.37;	author jasper;	state dead;
branches;
next	1.1;
commitid	TnUOMpK7uDfFCc1J;

1.1
date	2017.04.15.12.53.02;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;
commitid	yml1wCKdUWvvD519;

1.1.1.1
date	2017.04.15.12.53.02;	author jasper;	state Exp;
branches;
next	;
commitid	yml1wCKdUWvvD519;


desc
@@


1.2
log
@update to i3lock-2.9.1 and remove all bsd_auth patches that have been merged upstream

from Kaashif Hymabaccus
@
text
@$OpenBSD: patch-unlock_indicator_h,v 1.1 2017/04/15 12:53:02 jasper Exp $

Add bsd_auth(3) support.

--- unlock_indicator.h.orig	Sun Mar 26 15:01:23 2017
+++ unlock_indicator.h	Fri Apr 14 19:42:14 2017
@@@@ -11,12 +11,12 @@@@ typedef enum {
 } unlock_state_t;
 
 typedef enum {
-    STATE_PAM_IDLE = 0,          /* no PAM interaction at the moment */
-    STATE_PAM_VERIFY = 1,        /* currently verifying the password via PAM */
-    STATE_PAM_LOCK = 2,          /* currently locking the screen */
-    STATE_PAM_WRONG = 3,         /* the password was wrong */
+    STATE_AUTH_IDLE = 0,          /* no authenticator interaction at the moment */
+    STATE_AUTH_VERIFY = 1,        /* currently verifying the password via authenticator */
+    STATE_AUTH_LOCK = 2,          /* currently locking the screen */
+    STATE_AUTH_WRONG = 3,         /* the password was wrong */
     STATE_I3LOCK_LOCK_FAILED = 4 /* i3lock failed to load */
-} pam_state_t;
+} auth_state_t;
 
 xcb_pixmap_t draw_image(uint32_t* resolution);
 void redraw_screen(void);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import i3lock-2.9 (git master) with bsd_auth(3) support

i3lock is a simple screen locker like slock. After starting it, you will
see a white screen (you can configure the color/an image). You can return
to your screen by entering your password.

ok aja@@
@
text
@@
