head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.6
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.24
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.20
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.18
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.16
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.14
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.12
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.10
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2016.01.08.21.31.32;	author jasper;	state Exp;
branches;
next	1.3;
commitid	eLjxsiix84gPWFSG;

1.3
date	2010.06.28.23.01.14;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.01.19.16.39;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.20.21.05.30;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to mowitz-0.3.1
@
text
@$OpenBSD: patch-Mowitz_MwFilesel_c,v 1.3 2010/06/28 23:01:14 ajacoutot Exp $
--- Mowitz/MwFilesel.c.orig	Thu Aug 30 08:22:14 2007
+++ Mowitz/MwFilesel.c	Fri Jan  8 22:27:00 2016
@@@@ -80,7 +80,7 @@@@ getdirent(char ***ldirp, int *ndirp, char ***lfilep, i
 {
 	DIR *dird;
 	struct dirent *dire;
-	char fn[1024];
+	char fn[PATH_MAX];
 	struct stat buf;
 	char **ldir = NULL, **lfile = NULL;
 	int ndir = 0, mdir = 0, nfile = 0, mfile = 0;
@@@@ -90,7 +90,10 @@@@ getdirent(char ***ldirp, int *ndirp, char ***lfilep, i
 		return 1;
 	}
 	while ((dire = readdir(dird))) {
-		sprintf(fn, "%s/%s", path, dire->d_name);
+		if (snprintf(fn, PATH_MAX, "%s/%s", path, dire->d_name) >= PATH_MAX) {
+			fprintf(stderr, "Path too long %s/%s\n", path, dire->d_name);
+			continue;
+		}
 		if ((stat(fn, &buf))) {
 			fprintf(stderr, "Can't stat %s\n", fn);
 			continue;
@@@@ -169,13 +172,17 @@@@ static void make_dirmenu(char *);
 static void fsel_scan(void)
 {
 	String string;
-	char dir[1024];
+	char dir[PATH_MAX];
 	char pattern[1024];
 	char *pst;
 
 	if (files != NULL)
 		freedirent(dirs, ndirs, files, nfiles);
-	
+
+	if (strnlen(MwLabelGet(fsel_dirbutton), PATH_MAX)>=PATH_MAX) {
+		fprintf(stderr, "Path too long %s\n", MwLabelGet(fsel_dirbutton));
+		return;
+	}
 	strcpy(dir, MwLabelGet(fsel_dirbutton));
 	string = MwLabelGet(fsel_formatbutton);
 	pst = strchr(string, '(');
@@@@ -183,15 +190,20 @@@@ static void fsel_scan(void)
 		/* apparently no pattern here; use foolproof default */
 		strcpy(pattern, "*");
 	} else {
+		if (strnlen(pst+1, 1024) >= 1024) {
+			fprintf(stderr, "Pattern too long %s\n", pattern);
+			return;
+		}
 		strcpy(pattern, pst+1);
 		if ((pst = strchr(pattern, ')')))
 			*pst = '\0';
 	}
 	if (getdirent(&dirs, &ndirs, &files, &nfiles, dir, pattern)) {
 		fprintf(stderr, "Grmbl. getdirent() failed\n");
+	} else {
+		make_files(files, nfiles);
+		make_dirs(dirs, ndirs);
 	}
-	make_files(files, nfiles);
-	make_dirs(dirs, ndirs);
 	make_dirmenu(dir);
 }
 
@@@@ -248,22 +260,24 @@@@ static void file_select(Widget w, XtPointer client_dat
 
 static void dir_select(Widget w, XtPointer client_data, XtPointer call_data)
 {
-	char path[1024];
-	char newpath[1024];
+	char path[PATH_MAX];
+	char newpath[PATH_MAX];
 
 	XawListReturnStruct *list_struct = (XawListReturnStruct *)call_data;
 	String string = list_struct->string;
 
-	sprintf(path, "%s/%s", MwLabelGet(fsel_dirbutton), string);
-
-	if (!realpath(path, newpath))
-		fprintf(stderr, "Couldn't realpath %s\n", path);
-
-	MwLabelSet(fsel_dirbutton, newpath);
-
-	XawListUnhighlight(fsel_filelist);
-	XawListUnhighlight(fsel_dirlist);
-	fsel_scan();
+	if(snprintf(path, PATH_MAX, "%s/%s", MwLabelGet(fsel_dirbutton), string) >= PATH_MAX) {
+		fprintf(stderr, "Path too long %s/%s\n", MwLabelGet(fsel_dirbutton), string);
+	} else {
+		if (!realpath(path, newpath)) {
+			fprintf(stderr, "Couldn't realpath %s\n", path);
+		} else {
+			MwLabelSet(fsel_dirbutton, newpath);
+			XawListUnhighlight(fsel_filelist);
+			XawListUnhighlight(fsel_dirlist);
+			fsel_scan();
+		}
+	}
 }
 
 static void make_menu(char **menu_entry_names, Widget menu)
@@@@ -299,17 +313,14 @@@@ static struct {
 
 static void change_dir(Widget w, XtPointer client_data, XtPointer call_data)
 {
-	char path[1024];
-	char newpath[1024];
+	char newpath[PATH_MAX];
 
-	strcpy(path, (char *)client_data);
-
-	if (!realpath(path, newpath))
-		fprintf(stderr, "Couldn't realpath %s\n", path);
-
-	MwLabelSet(fsel_dirbutton, newpath);
-
-	fsel_scan();
+	if (!realpath((char *)client_data, newpath)) {
+		fprintf(stderr, "Couldn't realpath %s\n", (char *)client_data);
+	} else {
+		MwLabelSet(fsel_dirbutton, newpath);
+		fsel_scan();
+	}
 }
 
 static void make_dirmenu(char *dir)
@@@@ -357,16 +368,33 @@@@ static int status;
 
 static void fsel_done(Widget w, XtPointer client_data, XtPointer call_data)
 {
-	char path[1024], newpath[1024];
+	char path[PATH_MAX], newpath[PATH_MAX];
 	struct stat buf;
 	String string;
+	int failed = 0;
 	XtVaGetValues(fsel_filetext,
 		XtNstring, &string, (char *)0);
-	if (string[0] == '/') strcpy(path, string);
-	else sprintf(path, "%s/%s", MwLabelGet(fsel_dirbutton), string);
-	realpath(path, newpath);
-	if (!stat(newpath, &buf) &&
-		(S_IFDIR & buf.st_mode)) {
+
+	if (string[0] == '/') {
+		if (strlen(string) >= PATH_MAX) {
+			fprintf(stderr, "Filename too long %s\n", string);
+			failed = 1;
+		} else {
+			strcpy(path, string);
+		}
+	} else {
+		if (snprintf(path, PATH_MAX, "%s/%s", MwLabelGet(fsel_dirbutton), string) >= PATH_MAX) {
+			fprintf(stderr, "Path too long %s/%s\n", MwLabelGet(fsel_dirbutton), string);
+			failed = 1;
+		}
+	}
+	if(!failed && !realpath(path, newpath)) {
+		newpath[0] = '\0';
+		fprintf(stderr, "Couldn't realpath %s\n", path);
+		failed = 1;
+	}
+	if (failed ||
+	    (!stat(newpath, &buf) && (S_IFDIR & buf.st_mode))) {
 		MwLabelSet(fsel_dirbutton, newpath);
 		XtVaSetValues(fsel_filetext,
 			XtNstring, "", (char *)0);
@


1.3
log
@Remove local implementation of strnlen(3).
@
text
@d1 3
a3 3
$OpenBSD: patch-Mowitz_MwFilesel_c,v 1.2 2008/12/01 19:16:39 jasper Exp $
--- Mowitz/MwFilesel.c.orig	Thu Jan 16 21:31:13 2003
+++ Mowitz/MwFilesel.c	Tue Jun 29 00:57:02 2010
a169 9
@@@@ -690,7 +718,7 @@@@ int MwFileselInput(Widget pw, char *path, char *name, 
 	String string;
 	XtAppContext app_context = XtWidgetToApplicationContext(pw);
 	int i;
-	char newpath[1024];
+	char newpath[PATH_MAX];
 
 	if (!realpath(path, newpath))
 		getcwd(newpath, sizeof newpath);
@


1.2
log
@- fix some potentiel 64-bit issues due to missing headers
- specify licences
@
text
@d1 1
a1 1
$OpenBSD: patch-Mowitz_MwFilesel_c,v 1.1 2007/11/20 21:05:30 jasper Exp $
d3 2
a4 18
+++ Mowitz/MwFilesel.c	Mon Dec  1 13:19:37 2008
@@@@ -64,6 +64,15 @@@@ static Widget fsel_pshell, fsel_form, fsel_topframe, f
 	fsel_okbutton, fsel_cancelbutton, fsel_findbutton,
 	fsel_helpbutton, fsel_extra[10], below;
 
+
+size_t
+strnlen (const char *string, size_t maxlen)
+{
+	const char *end = memchr (string, '\0', maxlen);
+	return end ? (size_t) (end - string) : maxlen;
+}
+
+
 static int nextra;
 static int ch_ext;
 
@@@@ -80,7 +89,7 @@@@ getdirent(char ***ldirp, int *ndirp, char ***lfilep, i
d13 1
a13 1
@@@@ -90,7 +99,10 @@@@ getdirent(char ***ldirp, int *ndirp, char ***lfilep, i
d25 1
a25 1
@@@@ -169,13 +181,17 @@@@ static void make_dirmenu(char *);
d45 1
a45 1
@@@@ -183,15 +199,20 @@@@ static void fsel_scan(void)
d68 1
a68 1
@@@@ -248,22 +269,24 @@@@ static void file_select(Widget w, XtPointer client_dat
d105 1
a105 1
@@@@ -299,17 +322,14 @@@@ static struct {
d130 1
a130 1
@@@@ -357,16 +377,33 @@@@ static int status;
d170 1
a170 1
@@@@ -690,7 +727,7 @@@@ int MwFileselInput(Widget pw, char *path, char *name, 
a178 5
@@@@ -745,4 +782,3 @@@@ int MwFileselInput(Widget pw, char *path, char *name, 
 	strcpy(fmt, MwLabelGet(fsel_formatbutton));
 	return status;
 }
-
@


1.1
log
@- plug a bunch of mem. leaks

from pterjan @@ mandriva, via landry@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 18
a20 2
+++ Mowitz/MwFilesel.c	Tue Nov 20 21:54:19 2007
@@@@ -80,7 +80,7 @@@@ getdirent(char ***ldirp, int *ndirp, char ***lfilep, i
d29 1
a29 1
@@@@ -90,7 +90,10 @@@@ getdirent(char ***ldirp, int *ndirp, char ***lfilep, i
d41 1
a41 1
@@@@ -169,13 +172,17 @@@@ static void make_dirmenu(char *);
d61 1
a61 1
@@@@ -183,15 +190,20 @@@@ static void fsel_scan(void)
d84 1
a84 1
@@@@ -248,22 +260,24 @@@@ static void file_select(Widget w, XtPointer client_dat
d121 1
a121 1
@@@@ -299,17 +313,14 @@@@ static struct {
d146 1
a146 1
@@@@ -357,16 +368,33 @@@@ static int status;
d186 1
a186 1
@@@@ -690,7 +718,7 @@@@ int MwFileselInput(Widget pw, char *path, char *name, 
d195 1
a195 2
@@@@ -744,5 +772,12 @@@@ int MwFileselInput(Widget pw, char *path, char *name, 
 	strcpy(path, MwLabelGet(fsel_dirbutton));
a197 7
+}
+
+size_t
+strnlen (const char *string, size_t maxlen)
+{
+	const char *end = memchr (string, '\0', maxlen);
+	return end ? (size_t) (end - string) : maxlen;
d199 1
a199 1
 
@

