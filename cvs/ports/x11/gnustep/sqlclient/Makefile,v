head	1.22;
access;
symbols
	OPENBSD_6_2:1.22.0.2
	OPENBSD_6_2_BASE:1.22
	OPENBSD_6_1:1.21.0.2
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.20.0.2
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.14.0.2
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.11.0.2
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	sebastia_20110917:1.1.1.1
	sebastia:1.1.1;
locks; strict;
comment	@# @;


1.22
date	2017.07.27.11.01.33;	author sthen;	state Exp;
branches;
next	1.21;
commitid	00NY8EKxRV5VulAq;

1.21
date	2016.09.23.09.16.58;	author sthen;	state Exp;
branches;
next	1.20;
commitid	XLnI6AbHAmyVU5mO;

1.20
date	2016.06.03.11.57.58;	author sebastia;	state Exp;
branches;
next	1.19;
commitid	CbrwYXQRnCpA568H;

1.19
date	2016.03.05.16.04.09;	author pascal;	state Exp;
branches;
next	1.18;
commitid	EJSWd5DpdfEFGBlM;

1.18
date	2015.10.26.11.53.15;	author sebastia;	state Exp;
branches;
next	1.17;
commitid	8SlQsiN4RMOVHG0B;

1.17
date	2014.11.21.18.21.22;	author sebastia;	state Exp;
branches;
next	1.16;
commitid	JgRcMcc8jVuhOKjw;

1.16
date	2014.11.09.11.46.00;	author sebastia;	state Exp;
branches;
next	1.15;
commitid	JZqKgdFqyCWDptLV;

1.15
date	2014.09.13.18.09.22;	author brad;	state Exp;
branches;
next	1.14;
commitid	PpbRjVZdAmlrmi8q;

1.14
date	2014.05.30.09.55.34;	author sebastia;	state Exp;
branches;
next	1.13;

1.13
date	2014.05.22.17.54.28;	author sebastia;	state Exp;
branches;
next	1.12;

1.12
date	2014.05.22.09.48.57;	author sebastia;	state Exp;
branches;
next	1.11;

1.11
date	2013.10.19.13.25.04;	author sebastia;	state Exp;
branches;
next	1.10;

1.10
date	2013.09.08.16.33.20;	author sebastia;	state Exp;
branches;
next	1.9;

1.9
date	2013.06.12.20.36.34;	author brad;	state Exp;
branches;
next	1.8;

1.8
date	2013.05.25.00.33.10;	author brad;	state Exp;
branches;
next	1.7;

1.7
date	2013.04.25.16.33.27;	author sebastia;	state Exp;
branches;
next	1.6;

1.6
date	2013.01.13.17.52.33;	author sebastia;	state Exp;
branches;
next	1.5;

1.5
date	2012.08.22.07.15.52;	author sebastia;	state Exp;
branches;
next	1.4;

1.4
date	2012.07.08.14.15.11;	author sebastia;	state Exp;
branches;
next	1.3;

1.3
date	2012.04.23.17.15.19;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.15.08.02.23;	author sebastia;	state Exp;
branches;
next	1.1;

1.1
date	2011.09.17.07.26.08;	author sebastia;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.09.17.07.26.08;	author sebastia;	state Exp;
branches;
next	;


desc
@@


1.22
log
@bump REVISION on gnustep ports where libestdc++ has been removed due to
switching to clang in base.

add COMPILER_LIBCXX where c++abi is used. there will be some "Extra"s but
this is the simplest way to use c++abi on base=clang and estdc++ on base=gcc
arches.
@
text
@# $OpenBSD: Makefile,v 1.21 2016/09/23 09:16:58 sthen Exp $

COMMENT =	GNUstep database abstraction layer

VERSION =	1.8.1
REVISION =	5
DISTNAME =	SQLClient-${VERSION}
PKGNAME =	gnustep-sqlclient-${VERSION}

SHLIB_VERSION =	2.0
SHARED_LIBS +=  SQLClient	${SHLIB_VERSION}

CATEGORIES =	databases

HOMEPAGE =	http://wiki.gnustep.org/index.php/SQLClient

MASTER_SITES =	${MASTER_SITE_GNUSTEP:=libs/}

MODULES =		x11/gnustep
MODGNUSTEP_NEEDS_GUI = 	No
WANTLIB +=		Performance pq ecpg mysqlclient sqlite3
WANTLIB += ${COMPILER_LIBCXX}
LIB_DEPENDS +=		x11/gnustep/performance \
			databases/mariadb \
			databases/postgresql \
			databases/sqlite3

CONFIGURE_STYLE =	gnu
CONFIGURE_ARGS =	--with-additional-include="-I${LOCALBASE}/include \
				-I${LOCALBASE}/include/postgresql" \
			--with-additional-lib=-L${LOCALBASE}/lib
MAKE_FLAGS +=	SQLClient_INTERFACE_VERSION=${LIBSQLClient_VERSION}

SUBST_VARS +=	SHLIB_VERSION

.include <bsd.port.mk>
@


1.21
log
@Cope with moving sqlite3 back to ports.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2016/06/03 11:57:58 sebastia Exp $
d6 1
a6 1
REVISION =	4
d22 1
@


1.20
log
@Bump after gnustep make/base update
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2016/03/05 16:04:09 pascal Exp $
d6 1
a6 1
REVISION =	3
d24 2
a25 1
			databases/postgresql
@


1.19
log
@Bump REVISION for lang/clang MODULE changes.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2015/10/26 11:53:15 sebastia Exp $
d6 1
a6 1
REVISION =	2
@


1.18
log
@Add OBJCFLAGS=-fgnustep-runtime to gnustep.port.mk CONFIGURE_ENV
and MAKE_FLAGS for clang build platforms, and bump all ports for that.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2014/11/21 18:21:22 sebastia Exp $
d6 1
a6 1
REVISION =	1
@


1.17
log
@adapt/simplify gnustep.port.mk after gnustep-base update, bump REVISION
of all dependencies
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2014/11/09 11:46:00 sebastia Exp $
d6 1
a7 1
REVISION =	0
@


1.16
log
@Update SQLClient to 1.8.1, besides bug fixes and smaller enhancements,
most notably the connection pool handling.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2014/09/13 18:09:22 brad Exp $
d7 1
@


1.15
log
@Switch from using MySQL to using MariaDB attempt #2. MariaDB is a drop-in replacement.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2014/05/30 09:55:34 sebastia Exp $
d5 1
a5 1
VERSION =	1.7.3
a7 1
REVISION =	0
d9 2
a10 1
SHARED_LIBS +=  SQLClient	1.2
d30 2
@


1.14
log
@Minor bugfix release 1.7.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2014/05/22 17:54:28 sebastia Exp $
d8 1
d22 1
a22 1
			databases/mysql \
@


1.13
log
@update sqlclient to 1.7.2, minor bump, adding a few new methods
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2014/05/22 09:48:57 sebastia Exp $
d5 1
a5 1
VERSION =	1.7.2
@


1.12
log
@overhaul gnustep.port.mk with regard to fix WANTLIBS and LIB_DEPENDS of
dependent ports, so that port-lib-depends-check is happy with all of them.
Also make portcheck happy too.

feedback and OK aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2013/10/19 13:25:04 sebastia Exp $
d5 1
a5 2
VERSION =	1.7.0
REVISION =	1
d9 1
a9 1
SHARED_LIBS +=  SQLClient	1.1
@


1.11
log
@build gnustep related packages on amd64 and i386 with clang,
macppc still stays on using gcc due to too many problems there.
On amd64 and i386 now use the non-fragile-abi.

Now that allows on amd64 and i386 to use newer objective-c 2.0
features.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2013/09/08 16:33:20 sebastia Exp $
d6 1
a6 1
REVISION =	0
a20 1
WANTLIB +=		gnustep-base m objc2 pthread
@


1.10
log
@Minor bugfix update to sqlclient 1.7.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2013/06/12 20:36:34 brad Exp $
d6 1
@


1.9
log
@Revert back to using MySQL 5.1 for the time being. MariaDB 5.5 introduces
a new libmysqlclient non-blocking API which utilizes co-routines. The X86
specific GCC ASM co-routine support hid the fact that there was an issue.
The only fallback code so far is POSIX user contexts which OpenBSD does not
support.

Input from and Ok sthen@@ jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2013/05/25 00:33:10 brad Exp $
d5 1
a5 1
VERSION =	1.6.1
a7 1
REVISION =	1
@


1.8
log
@Switch from using MySQL to using MariaDB. MariaDB is a drop-in replacement.


ok sthen aja
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2013/04/25 16:33:27 sebastia Exp $
d8 1
a8 1
REVISION =	0
d23 1
a23 1
			databases/mariadb \
@


1.7
log
@update sqlclient to 1.6.1

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2013/01/13 17:52:33 sebastia Exp $
d8 1
d23 1
a23 1
			databases/mysql \
@


1.6
log
@Update to 1.6.0


* Change execute methods to return a count of the rows to which the
executed operation applies, or -1 if not supported.
Implement for postgresql and mysql.
* Add support for asynchronous notifications

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2012/08/22 07:15:52 sebastia Exp $
d5 1
a5 1
VERSION =	1.6.0
d9 1
a9 1
SHARED_LIBS +=  SQLClient	1.0
@


1.5
log
@Since we now have libobjc2, tweak gnustep-make to build/link against it.
gnustep-base doesn't need to install the compatibility layer anymore,
which requires a major lib bump.
Bump revision of all dependent packages, and remove double REVISION
in webservices

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2012/07/08 14:15:11 sebastia Exp $
d5 1
a5 1
VERSION =	1.5.3
a7 1
REVISION =	2
d9 1
a9 1
SHARED_LIBS +=  SQLClient	0.0
d20 1
a20 1
WANTLIB +=		gnustep-base m objc2
@


1.4
log
@Bump revisions after gnustep-base update
regen patches for gnustep-examples
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2012/04/23 17:15:19 espie Exp $
d8 1
a8 1
REVISION =	1
d21 1
a21 1
WANTLIB +=		gnustep-base m objc
@


1.3
log
@first pass at handling sqlite3 move
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2011/10/15 08:02:23 sebastia Exp $
d8 1
a8 1
REVISION =	0
@


1.2
log
@update gnustep-sqlclient to 1.5.3

most important change is a fix:
Postgres.m: Fix to handle new bytea with \x format

OK jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2011/09/17 07:26:08 sebastia Exp $
d8 1
d24 1
a24 2
			databases/postgresql \
			databases/sqlite3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d5 1
a5 1
VERSION =	1.5.2
@


1.1.1.1
log
@import GNUstep SQLClient framework:

The SQLClient library is designed to provide a simple interface to SQL
databases for GNUstep applications. It does not attempt the sort of
abstraction provided by the much more sophisticated GDL2 library but
rather allows applications to directly execute SQL queries and
statements.

SQLClient provides for the Objective-C programmer much the same thing
that JDBC provides for the Java programmer.

OK landry@@

@
text
@@
