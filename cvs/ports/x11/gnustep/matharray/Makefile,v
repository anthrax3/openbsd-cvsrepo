head	1.13;
access;
symbols
	OPENBSD_6_1:1.12.0.4
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.6.0.2
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	sebastia_20111118:1.1.1.1
	sebastia:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2017.07.27.11.01.33;	author sthen;	state Exp;
branches;
next	1.12;
commitid	00NY8EKxRV5VulAq;

1.12
date	2016.06.03.11.57.57;	author sebastia;	state Exp;
branches;
next	1.11;
commitid	CbrwYXQRnCpA568H;

1.11
date	2016.03.05.16.04.09;	author pascal;	state Exp;
branches;
next	1.10;
commitid	EJSWd5DpdfEFGBlM;

1.10
date	2015.10.26.11.53.15;	author sebastia;	state Exp;
branches;
next	1.9;
commitid	8SlQsiN4RMOVHG0B;

1.9
date	2014.11.21.18.21.22;	author sebastia;	state Exp;
branches;
next	1.8;
commitid	JgRcMcc8jVuhOKjw;

1.8
date	2014.05.23.22.27.26;	author kili;	state Exp;
branches;
next	1.7;

1.7
date	2014.05.22.09.48.57;	author sebastia;	state Exp;
branches;
next	1.6;

1.6
date	2013.10.19.13.25.02;	author sebastia;	state Exp;
branches;
next	1.5;

1.5
date	2013.09.01.12.31.55;	author sebastia;	state Exp;
branches;
next	1.4;

1.4
date	2013.04.25.16.40.11;	author sebastia;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.22.07.15.52;	author sebastia;	state Exp;
branches;
next	1.2;

1.2
date	2012.07.08.13.51.54;	author sebastia;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.17.23.42.51;	author sebastia;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.11.17.23.42.51;	author sebastia;	state Exp;
branches;
next	;


desc
@@


1.13
log
@bump REVISION on gnustep ports where libestdc++ has been removed due to
switching to clang in base.

add COMPILER_LIBCXX where c++abi is used. there will be some "Extra"s but
this is the simplest way to use c++abi on base=clang and estdc++ on base=gcc
arches.
@
text
@# $OpenBSD: Makefile,v 1.12 2016/06/03 11:57:57 sebastia Exp $

COMMENT =	GNUstep library to manipulate matrices

VERSION =	1.3
REVISION =	6
DISTNAME =	MathArray-${VERSION}
PKGNAME =	gnustep-matharray-${VERSION}
CATEGORIES =	math
SHARED_LIBS +=  MathArray	0.0

HOMEPAGE =	http://wiki.gnustep.org/index.php/MathArray
MASTER_SITES =	${MASTER_SITE_GNUSTEP:=contrib/}

WANTLIB += 		pthread
MODULES =		x11/gnustep
MODGNUSTEP_IS_FRAMEWORK = Yes

CONFIGURE_STYLE +=	gnu
MAKE_FLAGS +=	libMathArray_INTERFACE_VERSION=${LIBMathArray_VERSION}

.include <bsd.port.mk>
@


1.12
log
@Bump after gnustep make/base update
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2016/03/05 16:04:09 pascal Exp $
d6 1
a6 1
REVISION =	5
@


1.11
log
@Bump REVISION for lang/clang MODULE changes.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2015/10/26 11:53:15 sebastia Exp $
d6 1
a6 1
REVISION =	4
@


1.10
log
@Add OBJCFLAGS=-fgnustep-runtime to gnustep.port.mk CONFIGURE_ENV
and MAKE_FLAGS for clang build platforms, and bump all ports for that.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2014/11/21 18:21:22 sebastia Exp $
d6 1
a6 1
REVISION =	3
@


1.9
log
@adapt/simplify gnustep.port.mk after gnustep-base update, bump REVISION
of all dependencies
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2014/05/23 22:27:26 kili Exp $
d6 1
a6 1
REVISION =	2
@


1.8
log
@More bumps needed after the gnustep.port.mk changes.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2014/05/22 09:48:57 sebastia Exp $
d6 1
a6 1
REVISION =	1
@


1.7
log
@overhaul gnustep.port.mk with regard to fix WANTLIBS and LIB_DEPENDS of
dependent ports, so that port-lib-depends-check is happy with all of them.
Also make portcheck happy too.

feedback and OK aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2013/10/19 13:25:02 sebastia Exp $
d6 1
a6 1
REVISION =	0
@


1.6
log
@build gnustep related packages on amd64 and i386 with clang,
macppc still stays on using gcc due to too many problems there.
On amd64 and i386 now use the non-fragile-abi.

Now that allows on amd64 and i386 to use newer objective-c 2.0
features.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2013/09/01 12:31:55 sebastia Exp $
d17 1
a17 1
MODGNUSTEP_NEEDS_GUI = 	No
@


1.5
log
@minor bugfix update to 1.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/04/25 16:40:11 sebastia Exp $
d6 1
@


1.4
log
@bump after gnustep update
as pointed out from Landry, while there, regen PLIST and update distinfo

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2012/08/22 07:15:52 sebastia Exp $
d5 1
a5 1
VERSION =	1.2
a6 1
REVISION =	2
d14 1
@


1.3
log
@Since we now have libobjc2, tweak gnustep-make to build/link against it.
gnustep-base doesn't need to install the compatibility layer anymore,
which requires a major lib bump.
Bump revision of all dependent packages, and remove double REVISION
in webservices

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2012/07/08 13:51:54 sebastia Exp $
d7 1
a7 1
REVISION =	1
@


1.2
log
@we do need to run configure for matharray, do so,
and bump revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2011/11/17 23:42:51 sebastia Exp $
d7 1
a7 1
REVISION =	0
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d7 1
d18 1
@


1.1.1.1
log
@import matharray: a library to manipulate matrices

MathArray is a general library of classes for performing mathematical
operations on arrays (vectors, matrices, etc) of values. It can operate
on any standard 'C' number type plus numbers of complex type. MathArray
knows implicitly what types of operations can be performed on what types
of numbers and will automatically cast itself to the correct number type
representation to handle the specific operation. Standard operations
include addition, scalar and matrix multiplication and logical
operations. Mathematical operations in the standard C math library are
also supported, as well as user-defined functions.

OK rpointel@@, who also OKed aclock and gomoku, forgot there, sorry

@
text
@@
