head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.38
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.34
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.36
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.32
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.30
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.28
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.26
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.24
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.22
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.20
	OPENBSD_5_0:1.2.0.18
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.16
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.14
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.12
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.10
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.6
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.4
	OPENBSD_3_9:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2007.03.31.22.49.46;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.18.18.05.31;	author espie;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2006.10.29.17.48.55;	author sturm;	state Exp;
branches;
next	;

1.1.4.1
date	2006.11.01.08.59.09;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@regen patches.
handle utf8 encoding better.
@
text
@$OpenBSD: patch-src_tools_qfile_unix_cpp,v 1.1 2006/10/18 18:05:31 espie Exp $
--- src/tools/qfile_unix.cpp.orig	Thu Oct 19 16:25:03 2006
+++ src/tools/qfile_unix.cpp	Sat Mar 31 14:51:25 2007
@@@@ -53,6 +53,17 @@@@ static inline int qt_open(const char *pathname, int fl
 #include <errno.h>
 #include <limits.h>
 
+class QFilePrivate
+{
+public:
+    QString errorString;
+    int lastAccess;
+};
+
+#define ACCESS_NONE -1
+#define ACCESS_READ 0
+#define ACCESS_WRITE 1
+
 extern const char* qt_fileerr_read;
 
 bool qt_file_access( const QString& fn, int t )
@@@@ -522,6 +533,7 @@@@ bool QFile::at( Offset pos )
 #else
 	ok = ( ::fseek(fh, pos, SEEK_SET) == 0 );
 #endif
+	d->lastAccess = ACCESS_NONE;
     }
     if ( ok )
 #if defined(QT_LARGEFILE_SUPPORT) && !defined(QT_ABI_QT4)
@@@@ -590,6 +602,10 @@@@ Q_LONG QFile::readBlock( char *p, Q_ULONG len )
 		setErrorStringErrno( errno );
 	    }
 	} else {					// buffered file
+	    if (d->lastAccess == ACCESS_WRITE) {
+		::fseek(fh, 0, SEEK_CUR);
+		d->lastAccess = ACCESS_READ;
+	    }
 	    nread += fread( p, 1, len-nread, fh );
 	    if ( (uint)nread != len ) {
 		if ( ferror( fh ) || nread==0 ) {
@@@@ -641,8 +657,13 @@@@ Q_LONG QFile::writeBlock( const char *p, Q_ULONG len )
     Q_ULONG nwritten;				// number of bytes written
     if ( isRaw() )				// raw file
 	nwritten = ::write( fd, (void *)p, len );
-    else					// buffered file
+    else {					// buffered file
+	if (d->lastAccess == ACCESS_READ) {
+	    ::fseek(fh, 0, SEEK_CUR);
+	    d->lastAccess = ACCESS_WRITE;
+	}
 	nwritten = fwrite( p, 1, len, fh );
+    }
     if ( nwritten != len ) {		// write error
 	if ( errno == ENOSPC )			// disk is full
 	    setStatus( IO_ResourceError );
@


1.1
log
@Let qfile synch IO between read and write by using fflush, a bit like qt4
does.

This is hidden behind a pimpl, so there's no ABI change.

This should allow people to use QDataStream for input AND output with
impunity.
@
text
@d1 4
a4 4
$OpenBSD$
--- src/tools/qfile_unix.cpp.orig	Wed Oct 18 13:23:15 2006
+++ src/tools/qfile_unix.cpp	Wed Oct 18 13:36:59 2006
@@@@ -53,6 +53,17 @@@@ static inline int qt_open(const char *pa
d30 1
a30 1
@@@@ -590,6 +602,10 @@@@ Q_LONG QFile::readBlock( char *p, Q_ULON
d41 1
a41 1
@@@@ -641,8 +657,13 @@@@ Q_LONG QFile::writeBlock( const char *p,
@


1.1.4.1
log
@MFC:
Let qfile synch IO between read and write by using fflush, a bit like qt4
does.

This is hidden behind a pimpl, so there's no ABI change.

This should allow people to use QDataStream for input AND output with
impunity.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_tools_qfile_unix_cpp,v 1.1 2006/10/18 18:05:31 espie Exp $
@


1.1.2.1
log
@MFC:
Let qfile synch IO between read and write by using fflush, a bit like qt4
does.

This is hidden behind a pimpl, so there's no ABI change.

This should allow people to use QDataStream for input AND output with
impunity.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_tools_qfile_unix_cpp,v 1.1 2006/10/18 18:05:31 espie Exp $
@

