head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.16
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.14
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.10
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.12
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.8
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.04.29.10.44.44;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@allow qtextstream to serialize long long integers out.

For completion, qt3 should also serialize long long in, but that's
a more intrusive change, and it's not really needed to keep existing
things compiling.

Obviously, this code is totally different and 64 bits capable in qt4.

this fixes the build of kdepim3 post 64 bits time_t.

problem noticed by sthen@@.
@
text
@$OpenBSD$
--- src/tools/qtextstream.h.orig	Sat Apr 27 11:28:31 2013
+++ src/tools/qtextstream.h	Sat Apr 27 11:30:45 2013
@@@@ -99,6 +99,8 @@@@ class Q_EXPORT QTextStream				// text stream class (pu
     QTextStream &operator<<( unsigned int );
     QTextStream &operator<<( signed long );
     QTextStream &operator<<( unsigned long );
+    QTextStream &operator<<( signed long long );
+    QTextStream &operator<<( unsigned long long );
     QTextStream &operator<<( float );
     QTextStream &operator<<( double );
     QTextStream &operator<<( const char* );
@@@@ -152,7 +154,7 @@@@ class Q_EXPORT QTextStream				// text stream class (pu
 private:
     long	input_int();
     void	init();
-    QTextStream &output_int( int, ulong, bool );
+    QTextStream &output_int( int, unsigned long long, bool );
     QIODevice	*dev;
 
     int		fflags;
@
