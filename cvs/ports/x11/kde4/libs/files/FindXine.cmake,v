head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.14
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.10
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.12
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.8
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.04.25.21.17.28;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add files missed on kdelibs-4 update.

Found by nigel@@
@
text
@# - Try to find the XINE library
# This is a wrapper for pkg_check_modules() function, with additional define:
#   XINE_XCB_FOUND - if Xine was conifugured to use XCB

# Copyright (c) 2006,2007 Laurent Montel, <montel@@kde.org>
# Copyright (c) 2006, Matthias Kretz, <kretz@@kde.org>
# Copyright (c) 2011, Vadim Zhukov, <persgray@@gmail.com>
#
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.

if (XINE_LIBRARY)
  # Already in cache, be silent
  set(Xine_FIND_QUIETLY TRUE)
endif (XINE_LIBRARY)

find_package(PkgConfig)
if (PKG_CONFIG_FOUND)
   pkg_check_modules(XINE libxine>=1.1.1)
endif (PKG_CONFIG_FOUND)

if (XINE_FOUND)
   # CMake 2.8+ has nice CMakePushCheckState module...
   set(_XINE_CMAKE_REQUIRED_FLAGS_SAVE     ${CMAKE_REQUIRED_FLAGS})
   set(_XINE_CMAKE_REQUIRED_LIBRARIES_SAVE ${CMAKE_REQUIRED_LIBRARIES})
   set(CMAKE_REQUIRED_FLAGS     ${CMAKE_REQUIRED_FLAGS}     ${XINE_CFLAGS})
   set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${XINE_LDFLAGS})

   include(CheckCSourceCompiles)
   check_c_source_compiles("#include <xine.h>\nint main()\n{\n  xine_open_video_driver(xine_new(), \"auto\", XINE_VISUAL_TYPE_XCB, NULL);\n  return 0;\n}\n" XINE_XCB_FOUND)

   set(CMAKE_REQUIRED_FLAGS     ${_XINE_CMAKE_REQUIRED_FLAGS_SAVE})
   set(CMAKE_REQUIRED_LIBRARIES ${_XINE_CMAKE_REQUIRED_LIBRARIES_SAVE})
endif (XINE_FOUND)

# backward compatibility with previous version of this module
# (do not advertise those variables at the top)
set(XINE_INCLUDE_DIR ${XINE_CFLAGS})
set(XINE_LIBRARY ${XINE_LDFLAGS})

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(Xine  "Could NOT find XINE 1.1.1 or greater"  XINE_FOUND)

mark_as_advanced(XINE_XCB_FOUND XINE_INCLUDE_DIR XINE_LIBRARY)
@
