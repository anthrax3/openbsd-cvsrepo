head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.10
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2014.11.01.21.09.45;	author zhuk;	state Exp;
branches;
next	1.4;
commitid	yISoHfVgp7MFifJl;

1.4
date	2014.10.03.10.02.23;	author dcoppa;	state Exp;
branches;
next	1.3;
commitid	YqaLbImdHYG4D0Eb;

1.3
date	2014.07.12.16.38.10;	author zhuk;	state Exp;
branches;
next	1.2;
commitid	exE0wl39xAeRrNJO;

1.2
date	2013.12.08.19.13.32;	author zhuk;	state Exp;
branches;
next	1.1;

1.1
date	2013.04.24.19.45.29;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Welcome, KDE 4.14.2!

Many patches went upstream, but even more patches are still there...
To be continued!
@
text
@$OpenBSD: patch-kdecore_CMakeLists_txt,v 1.4 2014/10/03 10:02:23 dcoppa Exp $
Add some CMake checks, prodding upstream slowly. Includes libinotify support.
--- kdecore/CMakeLists.txt.orig	Thu Oct  9 22:40:29 2014
+++ kdecore/CMakeLists.txt	Thu Oct 30 23:34:17 2014
@@@@ -11,11 +11,10 @@@@ configure_file(util/kdeversion.h.cmake ${CMAKE_CURRENT
 
 # Configure checks for kdirwatch
 macro_optional_find_package(FAM)
+macro_optional_find_package(Inotify)
 macro_bool_to_01(FAM_FOUND HAVE_FAM)
+macro_bool_to_01(Inotify_FOUND HAVE_INOTIFY)
 
-check_include_files(sys/inotify.h SYS_INOTIFY_H_FOUND)
-macro_bool_to_01(SYS_INOTIFY_H_FOUND HAVE_SYS_INOTIFY_H)
-
 # Generate io/config-kdirwatch.h
 configure_file(io/config-kdirwatch.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/io/config-kdirwatch.h )
 
@@@@ -38,6 +37,11 @@@@ include_directories( ${CMAKE_CURRENT_BINARY_DIR}/compr
 include(auth/ConfigureChecks.cmake)
 include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/auth/ )
 
+# Some defines used by KSharedDataCache locks
+configure_file(util/config-util.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/util/config-util.h )
+include(util/ConfigureChecks.cmake)
+include_directories( ${CMAKE_CURRENT_BINARY_DIR}/util/ )
+
 # Configure a small file to tell BackendsManager what to use
 configure_file(auth/BackendsConfig.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/BackendsConfig.h)
 
@@@@ -417,20 +421,31 @@@@ if(WINCE)
   target_link_libraries(kdecore ${WCECOMPAT_LIBRARIES} Ceshell.lib)
 endif(WINCE)
 
-set(SYS_INOTIFY_H_FOUND 0)
-if(SYS_INOTIFY_H_FOUND)
+if(Inotify_FOUND)
+   include_directories(${Inotify_INCLUDE_DIRS})
+   target_link_libraries(kdecore ${Inotify_LIBRARIES})
+   if (Inotify_RPATH)
+      set_target_properties(kdecore PROPERTIES LINK_FLAGS "-Wl,-rpath,${Inotify_RPATH}")
+   endif ()
+
+   set_package_properties(Inotify PROPERTIES DESCRIPTION "File alteration notification support in kernel"
+                          URL "http://en.wikipedia.org/wiki/Inotify"
+                          TYPE OPTIONAL
+                          PURPOSE "Provides file alteration notification facilities using in-kernel support."
+                         )
+
    set_package_properties(FAM PROPERTIES DESCRIPTION "File alteration notification support via a separate service"
                           URL "http://oss.sgi.com/projects/fam"
                           TYPE OPTIONAL
                           PURPOSE "You have file alteration notification support built into your kernel, however you might consider installing FAM as it also supports NFS."
                          )
-else(SYS_INOTIFY_H_FOUND)
+else(Inotify_FOUND)
    set_package_properties(FAM PROPERTIES DESCRIPTION "File alteration notification support via a separate service"
                           URL "http://oss.sgi.com/projects/fam"
                           TYPE OPTIONAL
                           PURPOSE "Provides file alteration notification facilities using a separate service."
                          )
-endif(SYS_INOTIFY_H_FOUND)
+endif(Inotify_FOUND)
 
 if(FAM_FOUND)
    include_directories(${FAM_INCLUDE_DIR})
@@@@ -453,7 +468,7 @@@@ set_target_properties(kdecore PROPERTIES
                               VERSION ${KDE_NON_GENERIC_LIB_VERSION}
                               SOVERSION ${KDE_NON_GENERIC_LIB_SOVERSION}
                      )
-
+#set_target_properties( kdecore PROPERTIES COMPILE_FLAGS "--coverage" LINK_FLAGS "--coverage" )
 
 install(TARGETS kdecore EXPORT kdelibsLibraryTargets ${INSTALL_TARGETS_DEFAULT_ARGS})
 
@


1.4
log
@
Fix libinotify linkage in preparation of my cmake patch to not
register full paths to shared libraries in the ELF "NEEDED" sections
@
text
@d1 1
a1 1
$OpenBSD: patch-kdecore_CMakeLists_txt,v 1.3 2014/07/12 16:38:10 zhuk Exp $
d3 2
a4 2
--- kdecore/CMakeLists.txt.orig	Sun Jun  8 15:41:32 2014
+++ kdecore/CMakeLists.txt	Fri Jul 11 13:09:06 2014
d31 1
a31 13
@@@@ -409,6 +413,11 @@@@ if (NOT Q_WS_X11 AND NOT Q_WS_QWS)
    add_definitions(-DNO_DISPLAY)
 endif (NOT Q_WS_X11 AND NOT Q_WS_QWS)
 
+if(Inotify_FOUND)
+   include_directories(${Inotify_INCLUDE_DIRS})
+   link_directories(${Inotify_LIBRARY_DIRS})
+endif()
+
 kde4_add_library(kdecore ${LIBRARY_TYPE} ${kdecore_LIB_SRCS})
 
 target_link_libraries(kdecore ${QT_QTCORE_LIBRARY} ${QT_QTNETWORK_LIBRARY} ${QT_QTDBUS_LIBRARY} ${QT_QTXML_LIBRARY} ${ZLIB_LIBRARY} ${kdecore_OPTIONAL_LIBS})
@@@@ -417,20 +426,27 @@@@ if(WINCE)
d38 5
a42 1
+   target_link_libraries(kdecore PRIVATE ${Inotify_LIBRARIES})
d67 1
a67 1
@@@@ -453,7 +469,7 @@@@ set_target_properties(kdecore PROPERTIES
@


1.3
log
@Add support for kqueue through libinotify in KDirWatch and use it by
default. Makes long-standing problem with spinning kded4 (and probably
others like akonadi_mailbox_resource) go away. In other words, this
patch shrinks your electricity bill, so it can't be wrong.

With help from kirby@@. Putting in now to gather some statistics.
@
text
@d1 1
a1 1
$OpenBSD: patch-kdecore_CMakeLists_txt,v 1.2 2013/12/08 19:13:32 zhuk Exp $
d31 13
a43 1
@@@@ -417,20 +421,28 @@@@ if(WINCE)
d50 1
a50 2
+   include_directories(${Inotify_INCLUDE_DIRS})
+   target_link_libraries(kdecore ${Inotify_LIBRARIES})
d75 1
a75 1
@@@@ -453,7 +465,7 @@@@ set_target_properties(kdecore PROPERTIES
@


1.2
log
@Move on to KDE 4.11.4.

In this release, four "fat" packages were split:

  * kdeadmin
  * kdenetwork
  * kdesdk
  * kdetoys

To make updates reliable, we provide corresponding meta-packages now.

Many new patches in x11/kde4 correspond to the linking problems detected.
Those are planned to integrate upstream but probably we'll have to keep
some of them until KDE 5.

For information about major KDE 4.11 features, look at the official site:
http://www.kde.org/announcements/4.11/

Kopete Jingle support is disabled for now, until googletalk-call gets
cured from permanent coredumping.

This update involved a lot of help and patience for my mistakes from
many people, including ajacoutot@@, espie@@, naddy@@... but most of the
times this was landry@@ who definitely deserves personal "thank you"!
@
text
@d1 19
a19 5
$OpenBSD: patch-kdecore_CMakeLists_txt,v 1.1 2013/04/24 19:45:29 zhuk Exp $
Add some CMake checks, prodding upstream slowly.
--- kdecore/CMakeLists.txt.orig	Wed Aug 28 20:57:06 2013
+++ kdecore/CMakeLists.txt	Tue Nov  5 11:05:21 2013
@@@@ -38,6 +38,11 @@@@ include_directories( ${CMAKE_CURRENT_BINARY_DIR}/compr
d31 34
a64 1
@@@@ -453,7 +458,7 @@@@ set_target_properties(kdecore PROPERTIES
@


1.1
log
@Update KDE4 libs package.
@
text
@d1 4
a4 3
$OpenBSD$
--- kdecore/CMakeLists.txt.orig	Fri Aug 17 11:37:02 2012
+++ kdecore/CMakeLists.txt	Fri Aug 17 11:49:29 2012
d16 9
@

