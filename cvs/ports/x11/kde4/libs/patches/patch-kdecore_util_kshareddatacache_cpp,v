head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.07.11.11.13.10;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	e1BO2Z8Rynr5Dlrm;

1.1
date	2013.12.08.19.13.32;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Regen patches (non-critical, but lowers level of spam in my cvs diff output)
@
text
@$OpenBSD: patch-kdecore_util_kshareddatacache_cpp,v 1.1 2013/12/08 19:13:32 zhuk Exp $
More correct implementation of random() & Co., using arc4random().
--- kdecore/util/kshareddatacache.cpp.orig	Sun Jun  8 15:41:32 2014
+++ kdecore/util/kshareddatacache.cpp	Fri Jul 11 09:12:19 2014
@@@@ -449,19 +449,13 @@@@ struct SharedMemory
             return false;
         }
 
-        bool isProcessShared = false;
         QSharedPointer<KSDCLock> tempLock(createLockFromId(shmLock.type, shmLock));
 
-        if (!tempLock->initialize(isProcessShared)) {
+        if (!tempLock->initialize()) {
             kError(ksdcArea()) << "Unable to initialize the lock for the cache!";
             return false;
         }
 
-        if (!isProcessShared) {
-            kWarning(ksdcArea()) << "Cache initialized, but does not support being"
-                          << "shared across processes.";
-        }
-
         // These must be updated to make some of our auxiliary functions
         // work right since their values will be based on the cache size.
         cacheSize = _cacheSize;
@@@@ -1180,9 +1174,8 @@@@ class KSharedDataCache::Private
 
         m_expectedType = shm->shmLock.type;
         m_lock = QSharedPointer<KSDCLock>(createLockFromId(m_expectedType, shm->shmLock));
-        bool isProcessSharingSupported = false;
 
-        if (!m_lock->initialize(isProcessSharingSupported)) {
+        if (!m_lock->initialize()) {
             kError(ksdcArea()) << "Unable to setup shared cache lock, although it worked when created.";
             detachFromSharedMemory();
         }
@@@@ -1474,7 +1467,7 @@@@ bool KSharedDataCache::insert(const QString &key, cons
         }
         else if (loadFactor > startCullPoint) {
             const int tripWireValue = RAND_MAX * (loadFactor - startCullPoint) / (mustCullPoint - startCullPoint);
-            if (KRandom::random() >= tripWireValue) {
+            if ((int)KRandom::uniform(RAND_MAX) >= tripWireValue) {
                 cullCollisions = true;
             }
         }
@


1.1
log
@Move on to KDE 4.11.4.

In this release, four "fat" packages were split:

  * kdeadmin
  * kdenetwork
  * kdesdk
  * kdetoys

To make updates reliable, we provide corresponding meta-packages now.

Many new patches in x11/kde4 correspond to the linking problems detected.
Those are planned to integrate upstream but probably we'll have to keep
some of them until KDE 5.

For information about major KDE 4.11 features, look at the official site:
http://www.kde.org/announcements/4.11/

Kopete Jingle support is disabled for now, until googletalk-call gets
cured from permanent coredumping.

This update involved a lot of help and patience for my mistakes from
many people, including ajacoutot@@, espie@@, naddy@@... but most of the
times this was landry@@ who definitely deserves personal "thank you"!
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 3
--- kdecore/util/kshareddatacache.cpp.orig	Wed Aug 28 20:57:06 2013
+++ kdecore/util/kshareddatacache.cpp	Tue Nov  5 11:05:21 2013
@@@@ -451,19 +451,13 @@@@ struct SharedMemory
d26 1
a26 1
@@@@ -1178,9 +1172,8 @@@@ class KSharedDataCache::Private
d37 1
a37 1
@@@@ -1500,7 +1493,7 @@@@ bool KSharedDataCache::insert(const QString &key, cons
@

