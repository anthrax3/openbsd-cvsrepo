head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.10
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.6
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	experimental:1.1.1.1
	KDE:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2014.07.11.11.13.10;	author zhuk;	state Exp;
branches;
next	1.4;
commitid	e1BO2Z8Rynr5Dlrm;

1.4
date	2013.12.08.19.13.32;	author zhuk;	state Exp;
branches;
next	1.3;

1.3
date	2008.02.09.13.18.16;	author espie;	state dead;
branches;
next	1.2;

1.2
date	2008.01.21.21.47.56;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.22.22.24.33;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.03.22.22.24.33;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Regen patches (non-critical, but lowers level of spam in my cvs diff output)
@
text
@$OpenBSD: patch-kjs_math_object_cpp,v 1.4 2013/12/08 19:13:32 zhuk Exp $
More correct implementation of random() & Co., using arc4random().
--- kjs/math_object.cpp.orig	Sun Jun  8 15:41:32 2014
+++ kjs/math_object.cpp	Fri Jul 11 09:12:21 2014
@@@@ -138,7 +138,9 @@@@ JSValue *MathObjectImp::getValueProperty(ExecState *, 
 
 // ------------------------------ MathObjectImp --------------------------------
 
+#if !HAVE_ARC4RANDOM
 static bool randomSeeded = false;
+#endif
 
 MathFuncImp::MathFuncImp(ExecState* exec, int i, int l, const Identifier& name)
   : InternalFunctionImp(static_cast<FunctionPrototype*>(exec->lexicalInterpreter()->builtinFunctionPrototype()), name)
@@@@ -228,11 +230,15 @@@@ JSValue *MathFuncImp::callAsFunction(ExecState *exec, 
       result = ::pow(arg, arg2);
     break;
   case MathObjectImp::Random:
+#if HAVE_ARC4RANDOM
+      result = (double)arc4random() / (double)0xFFFFFFFF;
+#else
       if (!randomSeeded) {
           srand(static_cast<unsigned>(time(0)));
           randomSeeded = true;
       }
       result = (double)rand() / RAND_MAX;
+#endif
       break;
   case MathObjectImp::Round:
     if (signbit(arg) && arg >= -0.5)
@


1.4
log
@Move on to KDE 4.11.4.

In this release, four "fat" packages were split:

  * kdeadmin
  * kdenetwork
  * kdesdk
  * kdetoys

To make updates reliable, we provide corresponding meta-packages now.

Many new patches in x11/kde4 correspond to the linking problems detected.
Those are planned to integrate upstream but probably we'll have to keep
some of them until KDE 5.

For information about major KDE 4.11 features, look at the official site:
http://www.kde.org/announcements/4.11/

Kopete Jingle support is disabled for now, until googletalk-call gets
cured from permanent coredumping.

This update involved a lot of help and patience for my mistakes from
many people, including ajacoutot@@, espie@@, naddy@@... but most of the
times this was landry@@ who definitely deserves personal "thank you"!
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 3
--- kjs/math_object.cpp.orig	Wed Oct 16 15:52:18 2013
+++ kjs/math_object.cpp	Wed Oct 16 16:04:57 2013
@@@@ -109,7 +109,9 @@@@ JSValue *MathObjectImp::getValueProperty(ExecState *, 
d15 1
a15 1
@@@@ -199,11 +201,15 @@@@ JSValue *MathFuncImp::callAsFunction(ExecState *exec, 
@


1.3
log
@update to 4.0.1, include a few more components and dependencies
@
text
@d1 5
a5 6
$OpenBSD: patch-kjs_math_object_cpp,v 1.2 2008/01/21 21:47:56 espie Exp $
--- kjs/math_object.cpp.orig	Sat Jan  5 00:59:52 2008
+++ kjs/math_object.cpp	Sat Jan 19 15:44:04 2008
@@@@ -35,6 +35,11 @@@@ static inline int signbit(double x)
 }
 #endif
d7 24
a30 8
+static __inline int signbit(double x)
+{
+	return x < 0.0;
+}
+
 #ifndef M_PI
 #define M_PI 3.14159265358979323846
 #endif  /*  M_PI  */
@


1.2
log
@update `core' kde4 to 4.0.0.

Warning: thoroughly untested so far, most pieces probably do not work.
@
text
@d1 1
a1 1
$OpenBSD: patch-kjs_math_object_cpp,v 1.1.1.1 2007/03/22 22:24:33 espie Exp $
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
$OpenBSD$
--- kjs/math_object.cpp.orig	Wed Aug 23 13:26:53 2006
+++ kjs/math_object.cpp	Wed Aug 23 13:28:00 2006
@@@@ -47,6 +47,11 @@@@ static __inline int signbit(double x)
 
@


1.1.1.1
log
@partial port of the kde4 beta.
this is totally experimental and not working yet !
it's in so that experimental people can look at it and play with it.
do not even think of building it if you don't know what you're doing.
@
text
@@
