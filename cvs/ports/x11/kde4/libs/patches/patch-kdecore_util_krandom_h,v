head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.14
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.12.08.19.13.32;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Move on to KDE 4.11.4.

In this release, four "fat" packages were split:

  * kdeadmin
  * kdenetwork
  * kdesdk
  * kdetoys

To make updates reliable, we provide corresponding meta-packages now.

Many new patches in x11/kde4 correspond to the linking problems detected.
Those are planned to integrate upstream but probably we'll have to keep
some of them until KDE 5.

For information about major KDE 4.11 features, look at the official site:
http://www.kde.org/announcements/4.11/

Kopete Jingle support is disabled for now, until googletalk-call gets
cured from permanent coredumping.

This update involved a lot of help and patience for my mistakes from
many people, including ajacoutot@@, espie@@, naddy@@... but most of the
times this was landry@@ who definitely deserves personal "thank you"!
@
text
@$OpenBSD$
More correct implementation of random() & Co., using arc4random().
--- kdecore/util/krandom.h.orig	Fri Jun 28 21:03:40 2013
+++ kdecore/util/krandom.h	Wed Oct 16 21:59:30 2013
@@@@ -22,6 +22,8 @@@@
 #ifndef KRANDOM_H
 #define KRANDOM_H
 
+#include <sys/types.h>
+
 #include <kdecore_export.h>
 
 #include <QtCore/QString>
@@@@ -36,10 +38,24 @@@@
 namespace KRandom {
     /**
      * Generates a uniform random number.
-     * @@return A random number in the range [0, RAND_MAX). The RNG is seeded
-     *   on first use.
+     * @@return A random integer number in the range [0, RAND_MAX - 1].
+     *   The RNG is seeded on first use.
      */
     KDECORE_EXPORT int random();
+
+    /**
+     * Generates a uniform 32-bit random number.
+     * @@return A random number in the range [0, 2^32 - 1].
+     *   The RNG is seeded on first use.
+     */
+    KDECORE_EXPORT uint32_t random32();
+
+    /**
+     * Generates a uniform 32-bit random number.
+     * @@return A random number in the range [0, upperBound].
+     *   The RNG is seeded on first use.
+     */
+    KDECORE_EXPORT uint32_t uniform(uint32_t upperBound);
 
     /**
      * Generates a random string.  It operates in the range [A-Za-z0-9]
@
