head	1.3;
access;
symbols
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_5:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2014.11.01.21.09.45;	author zhuk;	state dead;
branches;
next	1.2;
commitid	yISoHfVgp7MFifJl;

1.2
date	2014.08.26.23.14.27;	author zhuk;	state Exp;
branches
	1.2.2.1;
next	1.1;
commitid	ztsb9zwMRZkzvbYk;

1.1
date	2014.08.26.23.08.45;	author zhuk;	state dead;
branches
	1.1.2.1;
next	;
commitid	TetGMFzlN46J8X6g;

1.1.2.1
date	2014.08.26.23.08.45;	author zhuk;	state Exp;
branches;
next	;
commitid	TetGMFzlN46J8X6g;

1.2.2.1
date	2014.09.18.14.35.18;	author zhuk;	state Exp;
branches;
next	;
commitid	As8K9H0mWtkmveko;


desc
@@


1.3
log
@Welcome, KDE 4.14.2!

Many patches went upstream, but even more patches are still there...
To be continued!
@
text
@$OpenBSD: patch-kdecore_auth_backends_polkit-1_Polkit1Backend_cpp,v 1.2 2014/08/26 23:14:27 zhuk Exp $
Fix for auth race condition.
REVIEW: https://git.reviewboard.kde.org/r/119323/
--- kdecore/auth/backends/polkit-1/Polkit1Backend.cpp.orig	Thu Jan  2 23:26:51 2014
+++ kdecore/auth/backends/polkit-1/Polkit1Backend.cpp	Thu Aug  7 18:08:58 2014
@@@@ -144,7 +144,7 @@@@ void Polkit1Backend::setupAction(const QString &action
 
 Action::AuthStatus Polkit1Backend::actionStatus(const QString &action)
 {
-    PolkitQt1::UnixProcessSubject subject(QCoreApplication::applicationPid());
+    PolkitQt1::SystemBusNameSubject subject(QString::fromUtf8(callerID()));
     PolkitQt1::Authority::Result r = PolkitQt1::Authority::instance()->checkAuthorizationSync(action, subject,
                                                                                               PolkitQt1::Authority::None);
     switch (r) {
@@@@ -160,21 +160,12 @@@@ Action::AuthStatus Polkit1Backend::actionStatus(const 
 
 QByteArray Polkit1Backend::callerID() const
 {
-    QByteArray a;
-    QDataStream s(&a, QIODevice::WriteOnly);
-    s << QCoreApplication::applicationPid();
-
-    return a;
+    return QDBusConnection::systemBus().baseService().toUtf8();
 }
 
 bool Polkit1Backend::isCallerAuthorized(const QString &action, QByteArray callerID)
 {
-    QDataStream s(&callerID, QIODevice::ReadOnly);
-    qint64 pid;
-
-    s >> pid;
-
-    PolkitQt1::UnixProcessSubject subject(pid);
+    PolkitQt1::SystemBusNameSubject subject(QString::fromUtf8(callerID));
     PolkitQt1::Authority *authority = PolkitQt1::Authority::instance();
 
     PolkitResultEventLoop e;
@


1.2
log
@Security fix for kdelibs 4.13 branch, CVE-2014-5033:

The KAuth framework uses polkit-1 API which tries to authenticate using the
requestors PID. This is prone to PID reuse race conditions.

More details here: http://www.kde.org/info/security/advisory-20140730-1.txt
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2.2.1
log
@Security fix for kdelibs 4.13 branch, CVE-2014-5033:

The KAuth framework uses polkit-1 API which tries to authenticate using the
requestors PID. This is prone to PID reuse race conditions.

More details here: http://www.kde.org/info/security/advisory-20140730-1.txt

reminded by jasper@@
@
text
@@


1.1
log
@file patch-kdecore_auth_backends_polkit-1_Polkit1Backend_cpp was initially added on branch OPENBSD_5_5.
@
text
@d1 38
@


1.1.2.1
log
@Security fix for kdelibs 4.11 branch, CVE-2014-5033:

The KAuth framework uses polkit-1 API which tries to authenticate using the
requestors PID. This is prone to PID reuse race conditions.

More details here: http://www.kde.org/info/security/advisory-20140730-1.txt

okay jca@@, "I trust you" naddy@@
@
text
@a0 38
$OpenBSD$
Fix for auth race condition.
REVIEW: https://git.reviewboard.kde.org/r/119323/
--- kdecore/auth/backends/polkit-1/Polkit1Backend.cpp.orig	Thu Jan  2 23:26:51 2014
+++ kdecore/auth/backends/polkit-1/Polkit1Backend.cpp	Thu Aug  7 18:08:58 2014
@@@@ -144,7 +144,7 @@@@ void Polkit1Backend::setupAction(const QString &action
 
 Action::AuthStatus Polkit1Backend::actionStatus(const QString &action)
 {
-    PolkitQt1::UnixProcessSubject subject(QCoreApplication::applicationPid());
+    PolkitQt1::SystemBusNameSubject subject(QString::fromUtf8(callerID()));
     PolkitQt1::Authority::Result r = PolkitQt1::Authority::instance()->checkAuthorizationSync(action, subject,
                                                                                               PolkitQt1::Authority::None);
     switch (r) {
@@@@ -160,21 +160,12 @@@@ Action::AuthStatus Polkit1Backend::actionStatus(const 
 
 QByteArray Polkit1Backend::callerID() const
 {
-    QByteArray a;
-    QDataStream s(&a, QIODevice::WriteOnly);
-    s << QCoreApplication::applicationPid();
-
-    return a;
+    return QDBusConnection::systemBus().baseService().toUtf8();
 }
 
 bool Polkit1Backend::isCallerAuthorized(const QString &action, QByteArray callerID)
 {
-    QDataStream s(&callerID, QIODevice::ReadOnly);
-    qint64 pid;
-
-    s >> pid;
-
-    PolkitQt1::UnixProcessSubject subject(pid);
+    PolkitQt1::SystemBusNameSubject subject(QString::fromUtf8(callerID));
     PolkitQt1::Authority *authority = PolkitQt1::Authority::instance();
 
     PolkitResultEventLoop e;
@

