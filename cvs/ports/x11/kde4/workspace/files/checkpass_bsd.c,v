head	1.3;
access;
symbols
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	zhuk_20130424:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2017.01.11.13.30.34;	author zhuk;	state Exp;
branches;
next	1.2;
commitid	VwORmtLhxWcoG0tz;

1.2
date	2016.07.16.10.38.50;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	xscLvzvQPEvCiClI;

1.1
date	2013.04.24.19.17.42;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.04.24.19.17.42;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Pass NULL instead of forcing "passwd" in auth_userokay(3). The latter
won't run interactive auth styles anyway, and focing "passwd" breaks for
users willing to use other styles without fallback to "passwd".

Report and patch from Daniele Mazzocchio, thanks!
@
text
@/*
 * $OpenBSD: checkpass_bsd.c,v 1.2 2016/07/16 10:38:50 zhuk Exp $
 *
 * Copyright (c) 2012 Vadim Zhukov <persgray@@gmail.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include "kcheckpass.h"

#ifdef HAVE_BSDAUTH

/*******************************************************************
 * This is the authentication code for BSD Authentication system
 *******************************************************************/

#include <sys/types.h>
#include <string.h>

#include <login_cap.h>
#include <bsd_auth.h>


AuthReturn Authenticate(const char *method, const char *login,
        char *(*conv) (ConvRequest, const char *))
{
  char *passwd;

  if (strcmp(method, "classic"))
    return AuthError;

  if (!(passwd = conv(ConvGetHidden, 0)))
    return AuthAbort;

  return (auth_userokay((char*)login, NULL, NULL, passwd) ? AuthOk : AuthBad);
}

#endif
@


1.2
log
@Finish & actually enable BSD authentication support in KDE4.
This overcomes tweaking getpw* calls: KDM and kcheckpass code did it wrong
on OpenBSD anyway (for example, compared the whole pw_passwd with "*",
instead of checking first character only). And we support other types
of password-based authentication as a bonus now (hello, login_-ldap!).

Also, we now create directory for persistent data of KDM by default,
and it's /var/kdm (previously KDM tried to access /var/lib/kdm).
The persistent data means "the name of the previous user" etc.
Previously features like "remember last user logged in" didn't work.

KDE3 bits to follow a bit later.

generic approvement from sthen@@
@
text
@d2 1
a2 1
 * $OpenBSD: checkpass_bsd.c,v 1.1.1.1 2013/04/24 19:17:42 zhuk Exp $
d45 1
a45 1
  return (auth_userokay((char*)login, (char*)"passwd", NULL, passwd) ? AuthOk : AuthBad);
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * $OpenBSD$
d28 2
d34 1
a34 1
AuthReturn Authenticate(const char *login,
d39 3
d45 1
a45 1
  return (auth_userokay(login, "passwd", NULL, passwd) ? AuthOk : AuthBad);
@


1.1.1.1
log
@Provides the interface and basic tools for the KDE workspace.
This package contains desktop manager, Plasma panels and other
KDE 4 bells and whistles.
@
text
@@
