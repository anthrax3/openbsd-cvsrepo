head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.16
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.14
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.8
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.10
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.6
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	zhuk_20131208:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.12.08.18.17.49;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.12.08.18.17.49;	author zhuk;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- kasten/controllers/test/scriptvalueconvertertest.cpp.orig	Thu Jan 24 02:14:54 2013
+++ kasten/controllers/test/scriptvalueconvertertest.cpp	Wed Feb  6 23:37:53 2013
@@@@ -18,6 +18,11 @@@@
  *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
  */
 
+#define __STDC_CONSTANT_MACROS
+
+#include <sys/types.h>
+#include <stdint.h>
+
 #include "view/structures/script/scriptengineinitializer.h"
 #include "view/structures/allprimitivetypes.h"
 
@@@@ -300,13 +305,13 @@@@ void ScriptValueConverterTest::testParseEnum_data()
     QTest::newRow("float2int32") << arg2(baseStr, "uint32()", "1234.1234") << 1 << quint64(1234);
     QTest::newRow("float2int32_range") << arg2(baseStr, "uint32()", "5294967296.234") << 0 << quint64(0);
     QTest::newRow("float2int64") << arg2(baseStr, "uint64()", "5294967296.234") << 1
-            << quint64(5294967296UL);
+            << quint64(UINT64_C(5294967296));
     QTest::newRow("double_overflow") << arg2(baseStr, "uint64()", "9007199254740993.0") << 0
-            << quint64(9007199254740993UL); //only 992 and 994 can be represented as a double
+            << quint64(UINT64_C(9007199254740993)); //only 992 and 994 can be represented as a double
     QTest::newRow("uint64_max_hex") << arg2(baseStr, "uint64()", "new String(\"0xFFFFFFFFFFFFFFFF\")") << 1
-            << quint64(0xFFFFFFFFFFFFFFFFL);
+            << quint64(UINT64_C(0xFFFFFFFFFFFFFFFF));
     QTest::newRow("uint64_max") << arg2(baseStr, "uint64()", "new String(\"18446744073709551615\")") << 1
-            << quint64(18446744073709551615UL);
+            << quint64(UINT64_C(18446744073709551615));
 }
 
 QTEST_MAIN(ScriptValueConverterTest)
@


1.1.1.1
log
@KDE hex editor for viewing and editing the raw data of files.

This is ex-kdesdk member. Importing as a part of KDE 4.11.4 update.
This port won't work until update is finished, thus not hooking it up.
@
text
@@
