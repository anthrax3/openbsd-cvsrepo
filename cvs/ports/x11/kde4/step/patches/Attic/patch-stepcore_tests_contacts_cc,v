head	1.3;
access;
symbols
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	zhuk_20130424:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.07.18.08.17.13;	author zhuk;	state dead;
branches;
next	1.2;
commitid	J5DCiA9lBlWutwst;

1.2
date	2014.07.09.20.03.31;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	VIGhneE7m6586cHK;

1.1
date	2013.04.24.19.06.28;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.04.24.19.06.28;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Small bugfix KDE 4.13.3. Release announcement:
http://www.kde.org/announcements/announce-4.13.3.php
@
text
@$OpenBSD: patch-stepcore_tests_contacts_cc,v 1.2 2014/07/09 20:03:31 zhuk Exp $
Review: https://git.reviewboard.kde.org/r/119026/
--- stepcore_tests/contacts.cc.orig	Tue Oct 11 05:47:23 2011
+++ stepcore_tests/contacts.cc	Tue Oct 11 06:00:36 2011
@@@@ -67,7 +67,7 @@@@ void MainTest::testCollisionDetection_data()
     QTest::newRow("vertex-edge-2")
             << vertexes << StepCore::Vector2d(0,0) << 0.0
             << vertexes << StepCore::Vector2d(3,0) << M_PI_4
-            << int(StepCore::Contact::Separated) << StepCore::Vector2d(2-M_SQRT2,0);
+            << int(StepCore::Contact::Separated) << StepCore::Vector2d(2-M_SQRT2,0.);
 
     QTest::newRow("edge-edge-1")
             << vertexes << StepCore::Vector2d(0,0) << 0.0
@@@@ -93,32 +93,32 @@@@ void MainTest::testCollisionDetection_data()
 
     QTest::newRow("contact-vertex-edge-2")
             << vertexes << StepCore::Vector2d(0,0) << 0.0
-            << vertexes << StepCore::Vector2d(1.001+M_SQRT2,0) << M_PI_4
-            << int(StepCore::Contact::Contacted) << StepCore::Vector2d(0.001,0)
+            << vertexes << StepCore::Vector2d(1.001+M_SQRT2,0.) << M_PI_4
+            << int(StepCore::Contact::Contacted) << StepCore::Vector2d(0.001,0.)
             << 1 << StepCore::Vector2d(1,0);
 
     QTest::newRow("contact-edge-edge-1")
             << vertexes << StepCore::Vector2d(0,0) << 0.0
-            << vertexes << StepCore::Vector2d(2.001,0) << 0.0
-            << int(StepCore::Contact::Contacted) << StepCore::Vector2d(0.001,0)
+            << vertexes << StepCore::Vector2d(2.001,0.) << 0.0
+            << int(StepCore::Contact::Contacted) << StepCore::Vector2d(0.001,0.)
             << 2 << StepCore::Vector2d(1,1) << StepCore::Vector2d(1,-1);
 
     QTest::newRow("contact-edge-edge-2")
             << vertexes << StepCore::Vector2d(0,0) << 0.0
-            << vertexes << StepCore::Vector2d(2.001,0) << 0.00001
-            << int(StepCore::Contact::Contacted) << StepCore::Vector2d(0.00099,0)
+            << vertexes << StepCore::Vector2d(2.001,0.) << 0.00001
+            << int(StepCore::Contact::Contacted) << StepCore::Vector2d(0.00099,0.)
             << 2 << StepCore::Vector2d(1.000990,0.999990) << StepCore::Vector2d(1,-1);
 
     QTest::newRow("contact-edge-edge-3")
             << vertexes << StepCore::Vector2d(0,0) << 0.0
-            << vertexes << StepCore::Vector2d(2.001,1) << 0.0
-            << int(StepCore::Contact::Contacted) << StepCore::Vector2d(0.001,0)
+            << vertexes << StepCore::Vector2d(2.001,1.) << 0.0
+            << int(StepCore::Contact::Contacted) << StepCore::Vector2d(0.001,0.)
             << 2 << StepCore::Vector2d(1,1) << StepCore::Vector2d(1,0);
 
     QTest::newRow("contact-edge-edge-4")
             << vertexes << StepCore::Vector2d(0,0) << 0.0
-            << vertexes << StepCore::Vector2d(2.001,1) << 0.00001
-            << int(StepCore::Contact::Contacted) << (StepCore::Vector2d(1,1e-5)*9.999999e-04).eval()
+            << vertexes << StepCore::Vector2d(2.001,1.) << 0.00001
+            << int(StepCore::Contact::Contacted) << (StepCore::Vector2d(1.,1e-5)*9.999999e-04).eval()
             << 2 << StepCore::Vector2d(1,1) << StepCore::Vector2d(1.001010,-0.000010);
 
     QTest::newRow("intersection-vertex-vertex-1")
@


1.2
log
@"small update" (c) tedu@@

Here KDE 4.13.2 comes. Big release changelogs could be read here:

  http://www.kde.org/announcements/4.12/
  http://www.kde.org/announcements/4.13/

Critical things you should be aware of:

  1. Nepomuk is gone, it's superseeded by Baloo. Nepomuk libraries
     are still here, though, but they do rely on Baloo internally.

  2. kdnssd was renamed to zeroconf-ioslave;

  3. kwallet was renamed to kwalletmanager;

  4. Akonadi cache will be rebuilt; this could result in change
     of PIM folder indexes, which in turn could mess up your
     mail filters - beware.

  5. ... a lot of other little problems that always happen during
     update.

Things could be broken for a day or two in subtle ways - don't
hesistate on reporting them!
@
text
@d1 1
a1 1
$OpenBSD: patch-stepcore_tests_contacts_cc,v 1.1.1.1 2013/04/24 19:06:28 zhuk Exp $
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
$OpenBSD$
a4 15
@@@@ -15,12 +15,12 @@@@
    along with StepCore; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */
+#include <cmath>
+#include <stepcore/types.h>
 #include "maintest.h"
 
 #include <stepcore/collisionsolver.h>
 #include <stepcore/rigidbody.h>
-#include <stepcore/types.h>
-#include <cmath>
 
 class CollisionSolver: public StepCore::GJKCollisionSolver
 {
@


1.1.1.1
log
@Step is an interactive physics simulator. It works like this: you
place some bodies on the scene, add some forces such as gravity or
springs, then click "Simulate" and Step shows you how your scene
will evolve according to the laws of physics. You can change every
property of bodies/forces in your experiment (even during simulation)
and see how this will change the outcome of the experiment. With
Step you can not only learn but feel how physics works.
@
text
@@
