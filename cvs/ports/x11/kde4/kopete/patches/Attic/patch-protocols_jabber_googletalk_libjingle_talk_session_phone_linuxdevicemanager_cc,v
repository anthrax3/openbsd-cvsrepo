head	1.2;
access;
symbols
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	zhuk_20131208:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.11.03.13.23.52;	author zhuk;	state dead;
branches;
next	1.1;
commitid	PkTNh1PwbRj7gaT8;

1.1
date	2013.12.08.18.39.44;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.12.08.18.39.44;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Zap patches that aren't needed until Jingle support is ready and that need
adjusting. Forgot to remove them at the commit time, noticed by naddy@@.

Just verified that build goes fine on amd64.
@
text
@$OpenBSD: patch-protocols_jabber_googletalk_libjingle_talk_session_phone_linuxdevicemanager_cc,v 1.1 2013/12/08 18:39:44 zhuk Exp $
Quick hack to make it compile on OpenBSD. No V4L support, sorry.
--- protocols/jabber/googletalk/libjingle/talk/session/phone/linuxdevicemanager.cc.orig	Thu Dec  5 02:01:35 2013
+++ protocols/jabber/googletalk/libjingle/talk/session/phone/linuxdevicemanager.cc	Thu Dec  5 02:03:59 2013
@@@@ -39,7 +39,9 @@@@
 #include "talk/base/thread.h"
 #include "talk/session/phone/libudevsymboltable.h"
 #include "talk/session/phone/mediacommon.h"
+#ifndef __OpenBSD__
 #include "talk/session/phone/v4llookup.h"
+#endif
 #include "talk/sound/platformsoundsystem.h"
 #include "talk/sound/platformsoundsystemfactory.h"
 #include "talk/sound/sounddevicelocator.h"
@@@@ -146,10 +148,12 @@@@ static void ScanDeviceDirectory(const std::string& dev
       std::string filename = directoryIterator->Name();
       std::string device_name = devdir + filename;
       if (!directoryIterator->IsDots()) {
+#ifndef __OpenBSD__
         if (filename.find("video") == 0 &&
             V4LLookup::IsV4L2Device(device_name)) {
           devices->push_back(Device(device_name, device_name));
         }
+#endif
       }
     } while (directoryIterator->Next());
   }
@@@@ -241,6 +245,7 @@@@ static std::string GetVideoDeviceName(MetaType meta,
   return Trim(device_name);
 }
 
+#ifndef __OpenBSD__
 static void ScanV4L2Devices(std::vector<Device>* devices) {
   LOG(LS_INFO) << ("Enumerating V4L2 devices");
 
@@@@ -287,10 +292,13 @@@@ static void ScanV4L2Devices(std::vector<Device>* devic
 
   LOG(LS_INFO) << "Total V4L2 devices found : " << devices->size();
 }
+#endif    // __OpenBSD__
 
 bool LinuxDeviceManager::GetVideoCaptureDevices(std::vector<Device>* devices) {
   devices->clear();
+#ifndef __OpenBSD__
   ScanV4L2Devices(devices);
+#endif
   return FilterDevices(devices, kFilteredVideoDevicesName);
 }
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Kopete is an instant messenger supporting AIM, Bonjour, Gadu-Gadu,
GroupWise, ICQ, Jabber (XMPP, Google Talk, Facebook, ...), Meanwhile,
QQ, Skype, Windows Live Messenger, WinPopup, Yahoo and more. It is
designed to be a flexible and extensible multi-protocol system
suitable for personal and enterprise use.

The goal of Kopete is to provide users with a single easy-to-use
way to access all of their instant messaging systems. The interface
puts people first, and is integrated with the system address book
to let you access your contacts from other KDE applications. Instant
messaging can be intrusive, but Kopete's notification system can
be tuned so that only important contacts interrupt you.

Kopete also features tools to enhance your instant messaging
experience, such as message encryption, archiving, and many other
fun and useful effects.

This is ex-kdenetwork member. Importing as a part of KDE 4.11.4 update.
This port won't work until update is finished, thus not hooking it up.
@
text
@@
