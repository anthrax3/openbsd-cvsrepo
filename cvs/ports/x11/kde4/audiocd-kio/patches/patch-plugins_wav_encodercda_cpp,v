head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.18
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.16
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.14
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	zhuk_20130424:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.04.24.11.24.28;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.04.24.11.24.28;	author zhuk;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- plugins/wav/encodercda.cpp.orig	Wed Oct 17 20:23:02 2012
+++ plugins/wav/encodercda.cpp	Wed Oct 17 20:23:21 2012
@@@@ -48,10 +48,12 @@@@ extern "C"
   #undef private
 }
 
+#ifndef swap16
 inline int16_t swap16 (int16_t i)
 {
   return (((i >> 8) & 0xFF) | ((i << 8) & 0xFF00));
 }
+#endif
 
 long EncoderCda::read(int16_t * buf, int frames){ 
   QByteArray output;
@


1.1.1.1
log
@KIO slave that allows treating audio CDs like a "real" filesystem,
where tracks are represented as files and, when copied from the
folder, are digitally extracted from the CD. This ensures a perfect
copy of the audio data.
@
text
@@
