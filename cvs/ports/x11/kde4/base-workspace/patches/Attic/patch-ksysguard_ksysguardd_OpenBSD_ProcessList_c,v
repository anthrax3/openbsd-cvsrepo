head	1.4;
access;
symbols
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.8
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.04.24.10.42.53;	author zhuk;	state dead;
branches;
next	1.3;

1.3
date	2011.07.08.10.27.23;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.18.18.15.51;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2008.01.21.21.47.56;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove stuff that got renamed, split or moved out of KDE4 SC.
@
text
@$OpenBSD: patch-ksysguard_ksysguardd_OpenBSD_ProcessList_c,v 1.3 2011/07/08 10:27:23 dcoppa Exp $

Adapt to new OpenBSD kinfo_proc API.

--- ksysguard/ksysguardd/OpenBSD/ProcessList.c.orig	Fri Jul  8 11:38:52 2011
+++ ksysguard/ksysguardd/OpenBSD/ProcessList.c	Fri Jul  8 11:40:10 2011
@@@@ -155,7 +155,7 @@@@ findProcessInList(int pid)
 }
 
 static void
-fillProcessCmdline(char *cmdline, struct kinfo_proc2 *p, size_t maxlen)
+fillProcessCmdline(char *cmdline, struct kinfo_proc *p, size_t maxlen)
 {
 	int mib[4];
 	int ret = -1;
@@@@ -204,7 +204,7 @@@@ fillProcessCmdline(char *cmdline, struct kinfo_proc2 *
 }
 
 static int
-updateProcess(struct kinfo_proc2 *p)
+updateProcess(struct kinfo_proc *p)
 {
 	static const char * const statuses[] = { "idle","run","sleep","stop","zombie" };
 	
@@@@ -317,14 +317,14 @@@@ updateProcessList(void)
         int mib[6];
         size_t len;
         size_t num;
-        struct kinfo_proc2 *p;
+        struct kinfo_proc *p;
 
 
         mib[0] = CTL_KERN;
-        mib[1] = KERN_PROC2;
+        mib[1] = KERN_PROC;
         mib[2] = KERN_PROC_ALL;
 	mib[3] = 0;
-	mib[4] = sizeof(struct kinfo_proc2);
+	mib[4] = sizeof(struct kinfo_proc);
 	mib[5] = 0;
         if (sysctl(mib, 6, NULL, &len, NULL, 0) == -1)
 		return 0;
@@@@ -332,11 +332,11 @@@@ updateProcessList(void)
 	p = malloc(len);
 	if (!p)
 		return 0;
-	mib[5] = len/ sizeof(struct kinfo_proc2);
+	mib[5] = len/ sizeof(struct kinfo_proc);
         if (sysctl(mib, 6, p, &len, NULL, 0) == -1)
 		return 0;
 
-	for (num = 0; num < len / sizeof(struct kinfo_proc2); num++)
+	for (num = 0; num < len / sizeof(struct kinfo_proc); num++)
 		updateProcess(&p[num]);
 	free(p);
 	cleanupProcessList();
@


1.3
log
@Adapt to new OpenBSD kinfo_proc API.

Untested diff, but this is not linked to the build and we suspect
it does not even compile anymore.

'looks plausible' sthen@@
'go ahead' jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@this builds, more or less
@
text
@d1 8
a8 4
$OpenBSD: patch-ksysguard_ksysguardd_OpenBSD_ProcessList_c,v 1.1 2008/01/21 21:47:56 espie Exp $
--- ksysguard/ksysguardd/OpenBSD/ProcessList.c.orig	Sun Jan 20 05:23:24 2008
+++ ksysguard/ksysguardd/OpenBSD/ProcessList.c	Sun Jan 20 05:23:38 2008
@@@@ -20,8 +20,6 @@@@
d10 8
a17 1
 */
d19 38
a56 5
-#include <config.h>
-
 #include <ctype.h>
 #include <dirent.h>
 #include <pwd.h>
@


1.1
log
@update `core' kde4 to 4.0.0.

Warning: thoroughly untested so far, most pieces probably do not work.
@
text
@d1 1
a1 1
$OpenBSD$
@

