head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.04.24.10.42.53;	author zhuk;	state dead;
branches;
next	1.1;

1.1
date	2010.06.23.13.11.34;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove stuff that got renamed, split or moved out of KDE4 SC.
@
text
@$OpenBSD: patch-kcheckpass_kcheckpass_c,v 1.1 2010/06/23 13:11:34 espie Exp $
--- kcheckpass/kcheckpass.c.orig	Wed Jun 23 11:51:26 2010
+++ kcheckpass/kcheckpass.c	Wed Jun 23 11:54:29 2010
@@@@ -57,6 +57,10 @@@@
 #include <errno.h>
 #include <time.h>
 
+#ifdef HAVE_READPASSPHRASE
+#include <readpassphrase.h>
+#endif
+
 /* Compatibility: accept some options from environment variables */
 #define ACCEPT_ENV
 
@@@@ -91,11 +95,15 @@@@ conv_legacy (ConvRequest what, const char *prompt)
 	if (havetty) {
 #ifdef HAVE_GETPASSPHRASE
 	    p = getpassphrase(prompt ? prompt : "Password: ");
+#elif defined HAVE_READPASSPHRASE
+	    p = readpassphrase(prompt ? prompt : "Password: ",
+	    	buf, sizeof buf, RPP_REQUIRE_TTY);
 #else
 	    p = getpass(prompt ? prompt : "Password: ");
 #endif
 	    p2 = strdup(p);
 	    memset(p, 0, strlen(p));
+	    memset(buf, 0, sizeof buf);
 	    return p2;
 	} else {
 	    if (prompt)
@


1.1
log
@get network to build.
use qca2 where applicable.
get crypt in kdm (from Laurence Tratt) and use readpassphrase.
@
text
@d1 1
a1 1
$OpenBSD$
@

