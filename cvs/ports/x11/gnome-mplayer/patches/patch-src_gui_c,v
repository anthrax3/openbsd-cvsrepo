head	1.42;
access;
symbols
	OPENBSD_6_2:1.42.0.14
	OPENBSD_6_2_BASE:1.42
	OPENBSD_6_1:1.42.0.12
	OPENBSD_6_1_BASE:1.42
	OPENBSD_6_0:1.42.0.10
	OPENBSD_6_0_BASE:1.42
	OPENBSD_5_9:1.42.0.6
	OPENBSD_5_9_BASE:1.42
	OPENBSD_5_8:1.42.0.8
	OPENBSD_5_8_BASE:1.42
	OPENBSD_5_7:1.42.0.4
	OPENBSD_5_7_BASE:1.42
	OPENBSD_5_6:1.42.0.2
	OPENBSD_5_6_BASE:1.42
	OPENBSD_5_5:1.40.0.2
	OPENBSD_5_5_BASE:1.40
	OPENBSD_5_4:1.36.0.2
	OPENBSD_5_4_BASE:1.36
	OPENBSD_5_3:1.33.0.2
	OPENBSD_5_3_BASE:1.33
	OPENBSD_5_2:1.27.0.2
	OPENBSD_5_2_BASE:1.27
	OPENBSD_5_0:1.16.0.2
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.12.0.2
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	ajacoutot_20090316:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.42
date	2014.04.29.13.39.22;	author dcoppa;	state Exp;
branches;
next	1.41;

1.41
date	2014.03.18.06.50.18;	author dcoppa;	state Exp;
branches;
next	1.40;

1.40
date	2014.02.07.10.26.38;	author dcoppa;	state Exp;
branches;
next	1.39;

1.39
date	2014.01.13.11.28.03;	author dcoppa;	state Exp;
branches;
next	1.38;

1.38
date	2013.11.06.07.29.30;	author dcoppa;	state Exp;
branches;
next	1.37;

1.37
date	2013.10.07.10.22.38;	author dcoppa;	state Exp;
branches;
next	1.36;

1.36
date	2013.05.27.11.43.08;	author dcoppa;	state Exp;
branches;
next	1.35;

1.35
date	2013.05.24.13.34.11;	author dcoppa;	state Exp;
branches;
next	1.34;

1.34
date	2013.05.24.08.31.37;	author dcoppa;	state Exp;
branches;
next	1.33;

1.33
date	2013.02.04.10.05.53;	author dcoppa;	state Exp;
branches;
next	1.32;

1.32
date	2013.01.31.11.56.36;	author dcoppa;	state Exp;
branches;
next	1.31;

1.31
date	2013.01.11.13.20.50;	author dcoppa;	state Exp;
branches;
next	1.30;

1.30
date	2012.12.31.10.27.17;	author dcoppa;	state Exp;
branches;
next	1.29;

1.29
date	2012.12.19.15.04.36;	author dcoppa;	state Exp;
branches;
next	1.28;

1.28
date	2012.10.31.13.22.03;	author dcoppa;	state dead;
branches;
next	1.27;

1.27
date	2012.05.09.14.19.37;	author dcoppa;	state Exp;
branches;
next	1.26;

1.26
date	2012.05.03.15.19.08;	author dcoppa;	state Exp;
branches;
next	1.25;

1.25
date	2012.04.10.13.30.37;	author dcoppa;	state dead;
branches;
next	1.24;

1.24
date	2012.04.06.10.14.44;	author dcoppa;	state Exp;
branches;
next	1.23;

1.23
date	2012.04.06.07.01.38;	author dcoppa;	state Exp;
branches;
next	1.22;

1.22
date	2012.01.09.12.10.22;	author dcoppa;	state dead;
branches;
next	1.21;

1.21
date	2011.12.06.16.05.44;	author dcoppa;	state Exp;
branches;
next	1.20;

1.20
date	2011.10.17.13.50.34;	author dcoppa;	state Exp;
branches;
next	1.19;

1.19
date	2011.09.29.11.03.19;	author dcoppa;	state Exp;
branches;
next	1.18;

1.18
date	2011.09.21.13.10.36;	author dcoppa;	state Exp;
branches;
next	1.17;

1.17
date	2011.09.21.12.20.07;	author dcoppa;	state Exp;
branches;
next	1.16;

1.16
date	2011.07.12.08.12.29;	author dcoppa;	state Exp;
branches;
next	1.15;

1.15
date	2011.07.04.13.32.55;	author dcoppa;	state Exp;
branches;
next	1.14;

1.14
date	2011.04.28.11.47.48;	author dcoppa;	state dead;
branches;
next	1.13;

1.13
date	2011.04.21.07.07.26;	author ajacoutot;	state Exp;
branches;
next	1.12;

1.12
date	2011.01.18.11.03.20;	author dcoppa;	state Exp;
branches;
next	1.11;

1.11
date	2010.12.31.12.03.55;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2010.11.15.11.11.34;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2010.11.08.15.04.15;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2010.07.08.06.29.12;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2010.05.10.08.30.55;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2010.03.29.12.16.07;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2009.11.06.16.57.23;	author edd;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.31.12.26.25;	author edd;	state Exp;
branches;
next	1.3;

1.3
date	2009.04.14.09.38.39;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2009.03.16.11.27.21;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.16.09.53.18;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.03.16.09.53.18;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.42
log
@
Update to final 1.0.9 release.
@
text
@$OpenBSD: patch-src_gui_c,v 1.41 2014/03/18 06:50:18 dcoppa Exp $

Fix problem with remembered softvol not being loaded

--- src/gui.c.orig	Tue Apr 29 14:47:07 2014
+++ src/gui.c	Tue Apr 29 14:48:09 2014
@@@@ -1708,11 +1708,6 @@@@ gboolean set_volume(void *data)
         if (!(softvol || audio_device.type == AUDIO_TYPE_SOFTVOL)) {
             gm_audio_get_volume(&audio_device);
         }
-        if (pref_volume != -1) {
-            audio_device.volume = (gdouble) pref_volume / 100.0;
-            gmtk_media_player_set_volume(GMTK_MEDIA_PLAYER(media), audio_device.volume);
-            pref_volume = -1;
-        }
         gm_log(verbose, G_LOG_LEVEL_DEBUG, "data is null new volume is %f", audio_device.volume);
 #ifdef GTK2_12_ENABLED
         gtk_scale_button_set_value(GTK_SCALE_BUTTON(vol_slider), audio_device.volume);
@


1.41
log
@
Prevent window from going fullscreen on startup when embedded
(upstream svn revision r2468)

Fix fullscreen mode hanging when control menu goes thru show/hide
(upstream svn revision r2469)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.40 2014/02/07 10:26:38 dcoppa Exp $
d5 2
a6 8
Fix fullscreen mode hanging when control menu goes thru show/hide
(upstream svn revision r2469)

Tracker size adjustments so that it does not look wrong in gecko-mediaplayer
(upstream svn revision r2467)

--- src/gui.c.orig	Thu Mar 13 12:21:33 2014
+++ src/gui.c	Thu Mar 13 12:26:59 2014
a18 190
@@@@ -4141,8 +4136,7 @@@@ void menuitem_fs_callback(GtkMenuItem * menuitem, void
             if (window_x < 170) {
                 gtk_widget_hide(GTK_WIDGET(tracker));
             }
-            gtk_widget_destroy(fs_window);
-            fs_window = NULL;
+            gtk_widget_hide(fs_window);
 
         }
         gtk_widget_show(menubar);
@@@@ -4201,21 +4195,22 @@@@ void menuitem_fs_callback(GtkMenuItem * menuitem, void
 
             gtk_window_fullscreen(GTK_WINDOW(window));
         } else {
-            fs_window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
-            gtk_window_set_resizable(GTK_WINDOW(window), TRUE);
-            gtk_widget_add_events(fs_window, GDK_BUTTON_PRESS_MASK);
-            gtk_widget_add_events(fs_window, GDK_BUTTON_RELEASE_MASK);
-            gtk_widget_add_events(fs_window, GDK_KEY_PRESS_MASK);
-            gtk_widget_add_events(fs_window, GDK_KEY_RELEASE_MASK);
-            gtk_widget_add_events(fs_window, GDK_ENTER_NOTIFY_MASK);
-            gtk_widget_add_events(fs_window, GDK_LEAVE_NOTIFY_MASK);
-            gtk_widget_add_events(fs_window, GDK_KEY_PRESS_MASK);
-            gtk_widget_add_events(fs_window, GDK_VISIBILITY_NOTIFY_MASK);
-            gtk_widget_add_events(fs_window, GDK_STRUCTURE_MASK);
-            gtk_widget_add_events(fs_window, GDK_POINTER_MOTION_MASK);
-            g_signal_connect(G_OBJECT(fs_window), "key_press_event", G_CALLBACK(window_key_callback), NULL);
-            g_signal_connect(G_OBJECT(fs_window), "motion_notify_event", G_CALLBACK(motion_notify_callback), NULL);
-            gtk_widget_realize(fs_window);
+            if (fs_window == NULL) {
+                fs_window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
+                gtk_window_set_resizable(GTK_WINDOW(window), TRUE);
+                gtk_widget_add_events(fs_window, GDK_BUTTON_PRESS_MASK);
+                gtk_widget_add_events(fs_window, GDK_BUTTON_RELEASE_MASK);
+                gtk_widget_add_events(fs_window, GDK_KEY_PRESS_MASK);
+                gtk_widget_add_events(fs_window, GDK_KEY_RELEASE_MASK);
+                gtk_widget_add_events(fs_window, GDK_ENTER_NOTIFY_MASK);
+                gtk_widget_add_events(fs_window, GDK_LEAVE_NOTIFY_MASK);
+                gtk_widget_add_events(fs_window, GDK_KEY_PRESS_MASK);
+                gtk_widget_add_events(fs_window, GDK_VISIBILITY_NOTIFY_MASK);
+                gtk_widget_add_events(fs_window, GDK_STRUCTURE_MASK);
+                gtk_widget_add_events(fs_window, GDK_POINTER_MOTION_MASK);
+                g_signal_connect(G_OBJECT(fs_window), "key_press_event", G_CALLBACK(window_key_callback), NULL);
+                g_signal_connect(G_OBJECT(fs_window), "motion_notify_event", G_CALLBACK(motion_notify_callback), NULL);
+                gtk_widget_realize(fs_window);
 #ifdef GTK2_18_ENABLED
             gdk_window_ensure_native(gtk_widget_get_window(fs_window));
 #else
@@@@ -4225,6 +4220,7 @@@@ void menuitem_fs_callback(GtkMenuItem * menuitem, void
 #endif
 #endif
 #endif
+            }
 
             screen = gtk_window_get_screen(GTK_WINDOW(window));
             gtk_window_set_screen(GTK_WINDOW(fs_window), screen);
@@@@ -4257,6 +4253,10 @@@@ void menuitem_fs_callback(GtkMenuItem * menuitem, void
     }
 
     fullscreen = !fullscreen;
+    if (!fullscreen) {
+        hide_fs_controls();
+        gtk_window_present(GTK_WINDOW(window));
+    }
 
 }
 
@@@@ -7099,7 +7099,7 @@@@ void player_media_state_changed_callback(GtkButton * b
         icon_start = "media-playback-start-symbolic";
 #endif
 
-    gm_log(verbose, G_LOG_LEVEL_MESSAGE, "in media state change with state = %s dontplaynext = %i",
+    gm_log(verbose, G_LOG_LEVEL_DEBUG, "in media state change with state = %s dontplaynext = %i",
            gmtk_media_state_to_string(media_state), dontplaynext);
     switch (media_state) {
         // mplayer is dead, need the next item off the playlist
@@@@ -7639,6 +7639,7 @@@@ GtkWidget *create_window(gint windowid)
 #endif
     in_button = FALSE;
     last_movement_time = -1;
+    fs_controls_lock = g_mutex_new();
     window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
     gtk_window_set_title(GTK_WINDOW(window), _("GNOME MPlayer"));
     if (windowid > 0 && embedding_disabled == FALSE) {
@@@@ -8535,6 +8536,9 @@@@ void show_window(gint windowid)
                 gtk_window_resize(GTK_WINDOW(window), window_x, window_y);
                 gtk_widget_set_size_request(window, window_x, window_y);
             }
+        } else {
+            gtk_widget_set_size_request(window, -1, -1);
+            gtk_widget_set_size_request(GTK_WIDGET(tracker), 200, -1);
         }
 
     } else {
@@@@ -8859,13 +8863,17 @@@@ void show_fs_controls()
     GtkIconTheme *icon_theme = gtk_icon_theme_get_default();
 #endif
 
+
+    g_mutex_lock(fs_controls_lock);
     if (fs_controls == NULL && fullscreen) {
         fs_controls = gtk_window_new(GTK_WINDOW_POPUP);
         gtk_widget_add_events(fs_controls, GDK_ENTER_NOTIFY_MASK);
         gtk_widget_add_events(fs_controls, GDK_LEAVE_NOTIFY_MASK);
         g_signal_connect(G_OBJECT(fs_controls), "enter_notify_event", G_CALLBACK(fs_controls_entered), NULL);
         g_signal_connect(G_OBJECT(fs_controls), "leave_notify_event", G_CALLBACK(fs_controls_left), NULL);
-        g_object_ref(hbox);
+        gtk_window_set_transient_for(GTK_WINDOW(fs_controls), GTK_WINDOW(fs_window));
+    }
+    if (fs_controls != NULL && fullscreen) {
 #ifdef GTK3_ENABLED
         if (gtk_icon_theme_has_icon(icon_theme, "view-restore-symbolic")) {
             gtk_image_set_from_icon_name(GTK_IMAGE(image_fs), "view-restore-symbolic", button_size);
@@@@ -8875,18 +8883,21 @@@@ void show_fs_controls()
 #else
         gtk_image_set_from_stock(GTK_IMAGE(image_fs), GTK_STOCK_LEAVE_FULLSCREEN, button_size);
 #endif
-        gtk_container_remove(GTK_CONTAINER(controls_box), hbox);
-        gtk_container_add(GTK_CONTAINER(fs_controls), hbox);
-        gtk_window_set_transient_for(GTK_WINDOW(fs_controls), GTK_WINDOW(fs_window));
-        g_object_unref(hbox);
+        if (gtk_widget_get_parent(GTK_WIDGET(hbox)) == controls_box) {
+            g_object_ref(hbox);
+            gtk_container_remove(GTK_CONTAINER(controls_box), hbox);
+            gtk_container_add(GTK_CONTAINER(fs_controls), hbox);
+            g_object_unref(hbox);
+        }
         gtk_widget_show(fs_controls);
+#ifdef GTK3_ENABLED
+        gtk_widget_set_opacity(GTK_WIDGET(fs_controls), 0.75);
+#else
 #ifdef GTK2_12_ENABLED
         gtk_window_set_opacity(GTK_WINDOW(fs_controls), 0.75);
 #endif
-        //gm_log(verbose, G_LOG_LEVEL_DEBUG, "waiting for all events to drain");
-        //while (gtk_events_pending())
-        //    gtk_main_iteration();
-        // center fs_controls
+#endif
+
         screen = gtk_window_get_screen(GTK_WINDOW(window));
         gtk_window_set_screen(GTK_WINDOW(fs_controls), screen);
         gdk_screen_get_monitor_geometry(screen, gdk_screen_get_monitor_at_window(screen, gmtk_get_window(window)),
@@@@ -8897,6 +8908,8 @@@@ void show_fs_controls()
         y = rect.y + rect.height - alloc.height;
         gtk_window_move(GTK_WINDOW(fs_controls), x, y);
     }
+    g_mutex_unlock(fs_controls_lock);
+
 }
 
 void hide_fs_controls()
@@@@ -8905,8 +8918,8 @@@@ void hide_fs_controls()
     GtkIconTheme *icon_theme = gtk_icon_theme_get_default();
 #endif
 
+    g_mutex_lock(fs_controls_lock);
     if (fs_controls != NULL) {
-        g_object_ref(hbox);
 #ifdef GTK3_ENABLED
         if (gtk_icon_theme_has_icon(icon_theme, "view-fullscreen-symbolic")) {
             gtk_image_set_from_icon_name(GTK_IMAGE(image_fs), "view-fullscreen-symbolic", button_size);
@@@@ -8916,13 +8929,19 @@@@ void hide_fs_controls()
 #else
         gtk_image_set_from_stock(GTK_IMAGE(image_fs), GTK_STOCK_FULLSCREEN, button_size);
 #endif
-        gtk_container_remove(GTK_CONTAINER(fs_controls), hbox);
-        gtk_container_add(GTK_CONTAINER(controls_box), hbox);
-        g_object_unref(hbox);
-        //gm_log(verbose, G_LOG_LEVEL_DEBUG, "waiting for all events to drain");
-        //while (gtk_events_pending())
-        //    gtk_main_iteration();
-        gtk_widget_destroy(fs_controls);
-        fs_controls = NULL;
+        if (gtk_widget_get_parent(GTK_WIDGET(hbox)) == fs_controls) {
+            g_object_ref(hbox);
+            gtk_container_remove(GTK_CONTAINER(fs_controls), hbox);
+            gtk_container_add(GTK_CONTAINER(controls_box), hbox);
+            g_object_unref(hbox);
+        }
+        if (fullscreen) {
+            gtk_widget_hide(GTK_WIDGET(fs_controls));
+        } else {
+            gtk_widget_destroy(GTK_WIDGET(fs_controls));
+            fs_controls = NULL;
+        }
     }
+    g_mutex_unlock(fs_controls_lock);
+
 }
@


1.40
log
@Tracker size adjustments so that it does not look wrong in gecko-mediaplayer
(upstream svn revision r2467)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.39 2014/01/13 11:28:03 dcoppa Exp $
d5 3
d11 2
a12 2
--- src/gui.c.orig	Fri Jan  3 18:08:33 2014
+++ src/gui.c	Fri Feb  7 11:18:01 2014
d25 68
a92 1
@@@@ -7099,7 +7094,7 @@@@ void player_media_state_changed_callback(GtkButton * b
d101 9
a109 1
@@@@ -8535,7 +8530,10 @@@@ void show_window(gint windowid)
a112 1
-        }
d114 3
a116 3
+			gtk_widget_set_size_request(window,-1,-1);
+			gtk_widget_set_size_request(GTK_WIDGET(tracker), 100, -1);
+		}
d119 61
d181 34
@


1.39
log
@Update to 1.0.9b
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.38 2013/11/06 07:29:30 dcoppa Exp $
d5 3
d9 1
a9 1
+++ src/gui.c	Mon Jan 13 11:27:17 2014
d22 21
@


1.38
log
@Set window properties to be common for all the created windows
(upstream svn revision r2461)
@
text
@d1 1
a1 4
$OpenBSD: patch-src_gui_c,v 1.37 2013/10/07 10:22:38 dcoppa Exp $

Set window properties to be common for all the created windows
(upstream svn revision r2461)
d5 3
a7 14
--- src/gui.c.orig	Fri Aug 16 16:40:22 2013
+++ src/gui.c	Wed Nov  6 08:16:23 2013
@@@@ -1377,7 +1377,9 @@@@ void create_folder_progress_window()
     cancel_folder_load = FALSE;
 
     folder_progress_window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
-    gtk_window_set_modal(GTK_WINDOW(folder_progress_window), TRUE);
+    gtk_window_set_type_hint(GTK_WINDOW(folder_progress_window), GDK_WINDOW_TYPE_HINT_UTILITY);
+    gtk_window_set_transient_for(GTK_WINDOW(folder_progress_window), GTK_WINDOW(window));
+    gtk_window_set_position(GTK_WINDOW(folder_progress_window), GTK_WIN_POS_CENTER_ON_PARENT);
     gtk_window_set_icon(GTK_WINDOW(folder_progress_window), pb_icon);
     gtk_window_set_resizable(GTK_WINDOW(folder_progress_window), FALSE);
     gtk_widget_set_size_request(folder_progress_window, 400, -1);
@@@@ -1706,11 +1708,6 @@@@ gboolean set_volume(void *data)
a18 33
@@@@ -3236,6 +3233,10 @@@@ void menuitem_open_location_callback(GtkMenuItem * men
     GtkWidget *open_button;
 
     open_window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
+    gtk_window_set_type_hint(GTK_WINDOW(open_window), GDK_WINDOW_TYPE_HINT_UTILITY);
+    gtk_window_set_resizable(GTK_WINDOW(open_window), FALSE);
+    gtk_window_set_transient_for(GTK_WINDOW(open_window), GTK_WINDOW(window));
+    gtk_window_set_position(GTK_WINDOW(open_window), GTK_WIN_POS_CENTER_ON_PARENT);
     gtk_window_set_icon(GTK_WINDOW(open_window), pb_icon);
 
     gtk_window_set_resizable(GTK_WINDOW(open_window), FALSE);
@@@@ -4827,6 +4828,10 @@@@ void menuitem_advanced_callback(GtkMenuItem * menuitem
     adv_window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
     gtk_window_set_type_hint(GTK_WINDOW(adv_window), GDK_WINDOW_TYPE_HINT_UTILITY);
     gtk_window_set_resizable(GTK_WINDOW(adv_window), FALSE);
+    gtk_window_set_icon(GTK_WINDOW(adv_window), pb_icon);
+    gtk_window_set_transient_for(GTK_WINDOW(adv_window), GTK_WINDOW(window));
+    gtk_window_set_position(GTK_WINDOW(adv_window), GTK_WIN_POS_CENTER_ON_PARENT);
+
     gtk_window_set_title(GTK_WINDOW(adv_window), _("Video Picture Adjustments"));
 
 #if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
@@@@ -5310,6 +5315,10 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
     GdkModifierType modifier;
 
     config_window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
+    gtk_window_set_type_hint(GTK_WINDOW(config_window), GDK_WINDOW_TYPE_HINT_UTILITY);
+    gtk_window_set_resizable(GTK_WINDOW(config_window), FALSE);
+    gtk_window_set_transient_for(GTK_WINDOW(config_window), GTK_WINDOW(window));
+    gtk_window_set_position(GTK_WINDOW(config_window), GTK_WIN_POS_CENTER_ON_PARENT);
     gtk_window_set_icon(GTK_WINDOW(config_window), pb_icon);
 
     gtk_window_set_resizable(GTK_WINDOW(config_window), FALSE);
@


1.37
log
@Update to gnome-mplayer-1.0.9alpha
@
text
@d1 4
a4 1
$OpenBSD: patch-src_gui_c,v 1.36 2013/05/27 11:43:08 dcoppa Exp $
d9 13
a21 2
+++ src/gui.c	Mon Oct  7 10:31:41 2013
@@@@ -1706,11 +1706,6 @@@@ gboolean set_volume(void *data)
d33 33
@


1.36
log
@I've changed my mind: disable cover art support, it's fubar.

While here, simplify volume-related patches.
@
text
@d1 1
a1 4
$OpenBSD: patch-src_gui_c,v 1.35 2013/05/24 13:34:11 dcoppa Exp $

Make fullscreen work under tiling window managers
(upstream svn revision r2428)
a3 4
(upstream svn revision r2424)

Fix problem with screenshot being done twice
(upstream svn revision r2430)
d5 5
a9 29
--- src/gui.c.orig	Thu Feb 28 18:07:49 2013
+++ src/gui.c	Mon May 27 12:58:01 2013
@@@@ -634,7 +634,8 @@@@ void adjust_layout()
         if (!enable_global_menu) {
             gmtk_get_allocation(menubar, &alloc);
             gm_log(verbose, G_LOG_LEVEL_DEBUG, "menubar = %i", alloc.height);
-            total_height += alloc.height;
+			if (!fullscreen)
+	            total_height += alloc.height;
             gm_log(verbose, G_LOG_LEVEL_DEBUG, "total_height = %i", total_height);
         }
     }
@@@@ -1673,13 +1674,17 @@@@ gboolean set_software_volume(gdouble * data)
 
 gboolean hookup_volume(void *data)
 {
-    if (gm_audio_update_device(&audio_device)) {
-        if (softvol || audio_device.type == AUDIO_TYPE_SOFTVOL) {
-            gm_audio_set_server_volume_update_callback(&audio_device, NULL);
-        } else {
-            gm_audio_set_server_volume_update_callback(&audio_device, set_volume);
+    gm_log(verbose, G_LOG_LEVEL_DEBUG, "hookup_volume is %f", audio_device.volume);
+    if (softvol == FALSE) {
+        if (gm_audio_update_device(&audio_device)) {
+            if (audio_device.type == AUDIO_TYPE_SOFTVOL) {
+                gm_audio_set_server_volume_update_callback(&audio_device, NULL);
+            } else {
+                gm_audio_set_server_volume_update_callback(&audio_device, set_volume);
+            }
d11 6
a16 18
     }
+    gm_log(verbose, G_LOG_LEVEL_DEBUG, "out hookup_volume is %f", audio_device.volume);
     return FALSE;
 }
 
@@@@ -1689,10 +1694,13 @@@@ gboolean set_volume(void *data)
     IdleData *idle = (IdleData *) data;
     gchar *buf = NULL;
 
+    gm_log(verbose, G_LOG_LEVEL_DEBUG, "set_volume new volume is %f", audio_device.volume);
     if (data == NULL) {
         gm_log(verbose, G_LOG_LEVEL_DEBUG, "in set_volume without data");
-        gm_audio_get_volume(&audio_device);
-        gm_log(verbose, G_LOG_LEVEL_DEBUG, "new volume is %f", audio_device.volume);
+        if (!(softvol || audio_device.type == AUDIO_TYPE_SOFTVOL)) {
+            gm_audio_get_volume(&audio_device);
+        }
+        gm_log(verbose, G_LOG_LEVEL_DEBUG, "data is null new volume is %f", audio_device.volume);
a18 24
 #else
@@@@ -2108,7 +2116,8 @@@@ gboolean window_key_callback(GtkWidget * widget, GdkEv
         case FILE_OPEN_LOCATION:
             break;
         case EDIT_SCREENSHOT:
-            gmtk_media_player_send_command(GMTK_MEDIA_PLAYER(media), COMMAND_TAKE_SCREENSHOT);
+            if (fullscreen)
+                gmtk_media_player_send_command(GMTK_MEDIA_PLAYER(media), COMMAND_TAKE_SCREENSHOT);
             return FALSE;
         case EDIT_PREFERENCES:
             break;
@@@@ -4304,11 +4313,11 @@@@ void config_apply(GtkWidget * widget, void *data)
     }
     audio_device.description = g_strdup(audio_device_name);
     gm_audio_update_device(&audio_device);
-    gm_audio_get_volume(&audio_device);
     if (softvol || audio_device.type == AUDIO_TYPE_SOFTVOL) {
         gm_audio_set_server_volume_update_callback(&audio_device, NULL);
         gmtk_media_player_set_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SOFTVOL, TRUE);
     } else {
+        gm_audio_get_volume(&audio_device);
         gm_audio_set_server_volume_update_callback(&audio_device, set_volume);
         gmtk_media_player_set_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SOFTVOL, FALSE);
     }
@


1.35
log
@
Unbreak cover art support
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.34 2013/05/24 08:31:37 dcoppa Exp $
a8 6
Make --volume work with and without softvol enabled
(upstream svn revision r2426)

Set initial volume in gmtk_media_player when passed on command line
(upstream svn revision r2432)

a11 3
Allow "Default Volume" (alsa disabled) to be changed
(upstream svn revision r2433)

d13 1
a13 1
+++ src/gui.c	Fri May 24 09:24:24 2013
d36 1
a36 1
+            if (softvol || audio_device.type == AUDIO_TYPE_SOFTVOL) {
d47 1
a47 1
@@@@ -1689,10 +1694,18 @@@@ gboolean set_volume(void *data)
a58 5
+        if (pref_volume != -1) {
+            audio_device.volume = (gdouble) pref_volume / 100.0;
+            gmtk_media_player_set_volume (GMTK_MEDIA_PLAYER(media),audio_device.volume);
+            pref_volume = -1;
+        }
d63 1
a63 1
@@@@ -2108,7 +2121,8 @@@@ gboolean window_key_callback(GtkWidget * widget, GdkEv
d73 1
a73 1
@@@@ -4304,11 +4318,11 @@@@ void config_apply(GtkWidget * widget, void *data)
a85 9
@@@@ -5817,7 +5831,7 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
     gtk_spin_button_set_value(GTK_SPIN_BUTTON(config_volume), gm_pref_store_get_int(gm_store, VOLUME));
     gm_pref_store_free(gm_store);
     gtk_entry_set_width_chars(GTK_ENTRY(config_volume), 6);
-    gtk_editable_set_editable(GTK_EDITABLE(config_volume), FALSE);
+    gtk_editable_set_editable(GTK_EDITABLE(config_volume), TRUE);
     gtk_entry_set_alignment(GTK_ENTRY(config_volume), 1);
     gtk_widget_show(config_volume);
     i++;
@


1.34
log
@Update to gnome-mplayer-1.0.8
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.33 2013/02/04 10:05:53 dcoppa Exp $
a8 3
Allow "Default Volume" (alsa disabled) to be changed
(upstream svn revision r2433)

d17 3
@


1.33
log
@Hide some items on the context menu, when not under plugin control
(upstream svn revision r2401)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.32 2013/01/31 11:56:36 dcoppa Exp $
d3 2
a4 2
Fix some layout issues when playing audio only files
(upstream svn revision r2390)
d6 2
a7 4
Clean up some deprecated GTK2 calls in GTK3 mode
Clean up unused variable messages
Fix usage of symbolic icons
(upstream svn revisions r2357, r2363, r2364, r2381, r2383 and r2384)
d9 2
a10 2
Hide some items on the context menu, when not under plugin control
(upstream svn revision r2401)
d12 2
a13 2
Resize player when on 'videopresent' event
(upstream svn revision r2391)
d15 2
a16 2
Bugfix: subtitles not hidden by default when specified
(upstream svn revision r2397)
d18 2
a19 2
Fix some problems on initial volume setup
(upstream svn revision r2378)
d21 3
a23 50
Don't monitor system volume when running in softvol mode
(upstream svn revision r2377)

--- src/gui.c.orig	Fri Oct 26 19:22:31 2012
+++ src/gui.c	Mon Feb  4 10:46:36 2013
@@@@ -497,6 +497,7 @@@@ void adjust_layout()
     gint total_width;
     gint handle_size;
     GtkAllocation alloc = { 0 };
+    GtkAllocation alloc2 = { 0 };
 
     gm_log(verbose, G_LOG_LEVEL_DEBUG, "media size = %i x %i", non_fs_width, non_fs_height);
     total_height = non_fs_height;
@@@@ -543,7 +544,9 @@@@ void adjust_layout()
             //    gtk_main_iteration();
         }
         gmtk_get_allocation(media_hbox, &alloc);
+        gm_log(verbose, G_LOG_LEVEL_DEBUG, "media height = %i", alloc.height);
         total_height += alloc.height;
+        gm_log(verbose, G_LOG_LEVEL_DEBUG, "total_height = %i", total_height);
     } else {
         gtk_widget_hide(media_hbox);
     }
@@@@ -555,7 +558,9 @@@@ void adjust_layout()
             //return;
         }
         gmtk_get_allocation(details_vbox, &alloc);
+        gm_log(verbose, G_LOG_LEVEL_DEBUG, "detail height = %i", alloc.height);
         total_height += alloc.height;
+        gm_log(verbose, G_LOG_LEVEL_DEBUG, "total_height = %i", total_height);
     } else {
         gtk_widget_hide(details_vbox);
     }
@@@@ -589,7 +594,12 @@@@ void adjust_layout()
             //gtk_paned_set_position(GTK_PANED(pane), total_height);
             total_height += alloc.height + handle_size;
         } else {
-            total_width += alloc.width + handle_size;
+            if (gmtk_get_visible(media_hbox) && idledata->videopresent == FALSE) {
+                gmtk_get_allocation(media_hbox, &alloc2);
+                total_width = alloc2.width + handle_size + alloc.width;
+            } else {
+                total_width += handle_size + alloc.width;
+            }
         }
 
         if (non_fs_height == 0) {
@@@@ -616,15 +626,18 @@@@ void adjust_layout()
 
     if (!fullscreen) {
a24 1
-            gm_log(verbose, G_LOG_LEVEL_DEBUG, "menubar = %i", alloc.height);
d26 5
a30 3
+            gm_log(verbose, G_LOG_LEVEL_DEBUG, "menubar = %i", alloc.height);
             total_height += alloc.height;
+            gm_log(verbose, G_LOG_LEVEL_DEBUG, "total_height = %i", total_height);
d33 1
d35 1
a35 10
     if (showcontrols) {
         gmtk_get_allocation(controls_box, &alloc);
+        gm_log(verbose, G_LOG_LEVEL_DEBUG, "controls height = %i", alloc.height);
         total_height += alloc.height;
+        gm_log(verbose, G_LOG_LEVEL_DEBUG, "total_height = %i", total_height);
     }
     gm_log(verbose, G_LOG_LEVEL_DEBUG, "total = %i x %i video = %s", total_width, total_height,
            gm_bool_to_string(idledata->videopresent));
@@@@ -1182,13 +1195,20 @@@@ static const gchar *PLAYSTATE_to_string(const PLAYSTAT
 gboolean set_gui_state(void *data)
d37 10
a46 13
     gchar *tip_text = NULL;
+#ifdef GTK3_ENABLED
+    GtkIconTheme *icon_theme = gtk_icon_theme_get_default();
+#endif
 
     gm_log(verbose, G_LOG_LEVEL_MESSAGE, "setting gui state to %s", PLAYSTATE_to_string(guistate));
 
     if (lastguistate != guistate) {
         if (guistate == PLAYING) {
 #ifdef GTK3_ENABLED
-            gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-pause-symbolic", button_size);
+            if (gtk_icon_theme_has_icon(icon_theme, "media-playback-pause-symbolic")) {
+                gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-pause-symbolic", button_size);
d48 1
a48 1
+                gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PAUSE, button_size);
d50 3
a52 83
 #else
             gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PAUSE, button_size);
 #endif
@@@@ -1214,7 +1234,11 @@@@ gboolean set_gui_state(void *data)
 
         if (guistate == PAUSED) {
 #ifdef GTK3_ENABLED
-            gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+            if (gtk_icon_theme_has_icon(icon_theme, "media-playback-start-symbolic")) {
+                gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+            } else {
+                gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
+            }
 #else
             gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
 #endif
@@@@ -1239,7 +1263,11 @@@@ gboolean set_gui_state(void *data)
 
         if (guistate == STOPPED) {
 #ifdef GTK3_ENABLED
-            gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+            if (gtk_icon_theme_has_icon(icon_theme, "media-playback-start-symbolic")) {
+                gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+            } else {
+                gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
+            }
 #else
             gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
 #endif
@@@@ -1352,7 +1380,12 @@@@ void create_folder_progress_window()
     gtk_window_set_resizable(GTK_WINDOW(folder_progress_window), FALSE);
     gtk_widget_set_size_request(folder_progress_window, 400, -1);
 
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(vbox), FALSE);
+#else
     vbox = gtk_vbox_new(FALSE, 10);
+#endif
     folder_progress_bar = gtk_progress_bar_new();
     gtk_progress_bar_set_pulse_step(GTK_PROGRESS_BAR(folder_progress_bar), 0.10);
     folder_progress_label = gtk_label_new("");
@@@@ -1360,7 +1393,11 @@@@ void create_folder_progress_window()
 
     cancel = gtk_button_new_from_stock(GTK_STOCK_CANCEL);
     g_signal_connect(G_OBJECT(cancel), "clicked", G_CALLBACK(cancel_clicked), NULL);
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    hbox = gtk_button_box_new(GTK_ORIENTATION_HORIZONTAL);
+#else
     hbox = gtk_hbutton_box_new();
+#endif
     gtk_button_box_set_layout(GTK_BUTTON_BOX(hbox), GTK_BUTTONBOX_END);
     gtk_container_add(GTK_CONTAINER(hbox), cancel);
 
@@@@ -1445,13 +1482,17 @@@@ gboolean resize_window(void *data)
     IdleData *idle = (IdleData *) data;
     GTimeVal currenttime;
     GValue resize_value = { 0 };
+    GValue shrink_value = { 0 };
 
     g_value_init(&resize_value, G_TYPE_BOOLEAN);
+    g_value_init(&shrink_value, G_TYPE_BOOLEAN);
 
     if (GTK_IS_WIDGET(window)) {
         if (idle->videopresent) {
             g_value_set_boolean(&resize_value, TRUE);
+            g_value_set_boolean(&shrink_value, TRUE);
             gtk_container_child_set_property(GTK_CONTAINER(pane), vbox, "resize", &resize_value);
+            gtk_container_child_set_property(GTK_CONTAINER(pane), vbox, "shrink", &shrink_value);
             gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(menuitem_view_info), FALSE);
             g_get_current_time(&currenttime);
             last_movement_time = currenttime.tv_sec;
@@@@ -1508,7 +1549,9 @@@@ gboolean resize_window(void *data)
             // audio only file
 
             g_value_set_boolean(&resize_value, FALSE);
+            g_value_set_boolean(&shrink_value, FALSE);
             gtk_container_child_set_property(GTK_CONTAINER(pane), vbox, "resize", &resize_value);
+            gtk_container_child_set_property(GTK_CONTAINER(pane), vbox, "shrink", &shrink_value);
             non_fs_height = 0;
             non_fs_width = 0;
             gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(menuitem_view_fullscreen), FALSE);
@@@@ -1633,6 +1676,18 @@@@ gboolean set_software_volume(gdouble * data)
d56 1
a56 18
+gboolean hookup_volume(void *data)
+{
+    if (gm_audio_update_device(&audio_device)) {
+        if (softvol || audio_device.type == AUDIO_TYPE_SOFTVOL) {
+            gm_audio_set_server_volume_update_callback(&audio_device, NULL);
+        } else {
+            gm_audio_set_server_volume_update_callback(&audio_device, set_volume);
+        }
+    }
+    return FALSE;
+}
+
 gboolean set_volume(void *data)
 {
     IdleData *idle = (IdleData *) data;
@@@@ -2577,6 +2632,9 @@@@ gboolean play_callback(GtkWidget * widget, GdkEventExp
 gboolean stop_callback(GtkWidget * widget, GdkEventExpose * event, void *data)
 {
d58 1
a58 3
+#ifdef GTK3_ENABLED
+    GtkIconTheme *icon_theme = gtk_icon_theme_get_default();
+#endif
d60 29
a88 107
     if (gmtk_media_player_get_media_state(GMTK_MEDIA_PLAYER(media)) == MEDIA_STATE_PLAY ||
         gmtk_media_player_get_media_state(GMTK_MEDIA_PLAYER(media)) == MEDIA_STATE_PAUSE) {
@@@@ -2585,7 +2643,11 @@@@ gboolean stop_callback(GtkWidget * widget, GdkEventExp
         gmtk_media_tracker_set_percentage(tracker, 0.0);
         gtk_widget_set_sensitive(play_event_box, TRUE);
 #ifdef GTK3_ENABLED
-        gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+        if (gtk_icon_theme_has_icon(icon_theme, "media-playback-start-symbolic")) {
+            gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+        } else {
+            gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
+        }
 #else
         gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
 #endif
@@@@ -2599,7 +2661,11 @@@@ gboolean stop_callback(GtkWidget * widget, GdkEventExp
     if (gmtk_media_player_get_media_state(GMTK_MEDIA_PLAYER(media)) == MEDIA_STATE_QUIT) {
         gmtk_media_tracker_set_percentage(tracker, 0.0);
 #ifdef GTK3_ENABLED
-        gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+        if (gtk_icon_theme_has_icon(icon_theme, "media-playback-start-symbolic")) {
+            gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+        } else {
+            gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
+        }
 #else
         gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
 #endif
@@@@ -2672,6 +2738,9 @@@@ gboolean prev_callback(GtkWidget * widget, GdkEventExp
     GtkTreePath *path;
     GtkTreeIter previter;
     GtkTreeIter localiter;
+#ifdef GTK3_ENABLED
+    GtkIconTheme *icon_theme = gtk_icon_theme_get_default();
+#endif
 
     if (gtk_list_store_iter_is_valid(playliststore, &iter)) {
         if (gmtk_media_player_get_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_HAS_CHAPTERS)) {
@@@@ -2706,7 +2775,11 @@@@ gboolean prev_callback(GtkWidget * widget, GdkEventExp
             autopause = FALSE;
             gtk_widget_set_sensitive(play_event_box, TRUE);
 #ifdef GTK3_ENABLED
-            gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+            if (gtk_icon_theme_has_icon(icon_theme, "media-playback-start-symbolic")) {
+                gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+            } else {
+                gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
+            }
 #else
             gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
 #endif
@@@@ -2733,6 +2806,9 @@@@ gboolean next_callback(GtkWidget * widget, GdkEventExp
 {
     gboolean valid = FALSE;
     GtkTreePath *path;
+#ifdef GTK3_ENABLED
+    GtkIconTheme *icon_theme = gtk_icon_theme_get_default();
+#endif
 
     if (gtk_list_store_iter_is_valid(playliststore, &iter)) {
         if (gmtk_media_player_get_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_HAS_CHAPTERS)) {
@@@@ -2756,7 +2832,11 @@@@ gboolean next_callback(GtkWidget * widget, GdkEventExp
             autopause = FALSE;
             gtk_widget_set_sensitive(play_event_box, TRUE);
 #ifdef GTK3_ENABLED
-            gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+            if (gtk_icon_theme_has_icon(icon_theme, "media-playback-start-symbolic")) {
+                gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+            } else {
+                gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
+            }
 #else
             gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
 #endif
@@@@ -3086,16 +3166,31 @@@@ void menuitem_open_location_callback(GtkMenuItem * men
 
     gtk_window_set_resizable(GTK_WINDOW(open_window), FALSE);
     gtk_window_set_title(GTK_WINDOW(open_window), _("Open Location"));
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 6);
+    gtk_box_set_homogeneous(GTK_BOX(vbox), FALSE);
+#else
     vbox = gtk_vbox_new(FALSE, 6);
+#endif
     label = gtk_label_new(_("Location:"));
     open_location = gtk_entry_new();
     gtk_entry_set_width_chars(GTK_ENTRY(open_location), 50);
     gtk_entry_set_activates_default(GTK_ENTRY(open_location), TRUE);
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    item_box = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 6);
+    gtk_box_set_homogeneous(GTK_BOX(item_box), FALSE);
+#else
     item_box = gtk_hbox_new(FALSE, 6);
+#endif
     gtk_box_pack_start(GTK_BOX(item_box), label, FALSE, FALSE, 12);
     gtk_box_pack_end(GTK_BOX(item_box), open_location, TRUE, TRUE, 0);
 
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    button_box = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 6);
+    gtk_box_set_homogeneous(GTK_BOX(button_box), FALSE);
+#else
     button_box = gtk_hbox_new(FALSE, 6);
+#endif
     cancel_button = gtk_button_new_from_stock(GTK_STOCK_CANCEL);
     open_button = gtk_button_new_from_stock(GTK_STOCK_OPEN);
 #ifdef GTK2_22_ENABLED
@@@@ -4145,11 +4240,15 @@@@ void config_apply(GtkWidget * widget, void *data)
d91 18
a108 345
     gm_audio_get_volume(&audio_device);
-    gm_audio_set_server_volume_update_callback(&audio_device, set_volume);
+    if (softvol || audio_device.type == AUDIO_TYPE_SOFTVOL) {
+        gm_audio_set_server_volume_update_callback(&audio_device, NULL);
+        gmtk_media_player_set_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SOFTVOL, TRUE);
+    } else {
+        gm_audio_set_server_volume_update_callback(&audio_device, set_volume);
+        gmtk_media_player_set_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SOFTVOL, FALSE);
+    }
 
     gmtk_media_player_set_attribute_string(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_AO, audio_device.mplayer_ao);
-    gmtk_media_player_set_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SOFTVOL,
-                                            audio_device.type == AUDIO_TYPE_SOFTVOL);
 
 #ifdef HAVE_ASOUNDLIB
     if (audio_device.alsa_mixer != NULL) {
@@@@ -4625,7 +4724,12 @@@@ void menuitem_advanced_callback(GtkMenuItem * menuitem
     gtk_window_set_resizable(GTK_WINDOW(adv_window), FALSE);
     gtk_window_set_title(GTK_WINDOW(adv_window), _("Video Picture Adjustments"));
 
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    adv_vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(adv_vbox), FALSE);
+#else
     adv_vbox = gtk_vbox_new(FALSE, 10);
+#endif
     adv_hbutton_box = gtk_hbutton_box_new();
     gtk_button_box_set_layout(GTK_BUTTON_BOX(adv_hbutton_box), GTK_BUTTONBOX_END);
     adv_table = gtk_table_new(20, 2, FALSE);
@@@@ -5110,14 +5214,54 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
     gtk_window_set_icon(GTK_WINDOW(config_window), pb_icon);
 
     gtk_window_set_resizable(GTK_WINDOW(config_window), FALSE);
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    conf_vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(conf_vbox), FALSE);
+#else
     conf_vbox = gtk_vbox_new(FALSE, 10);
+#endif
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    conf_page1 = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(conf_page1), FALSE);
+#else
     conf_page1 = gtk_vbox_new(FALSE, 10);
+#endif
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    conf_page2 = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(conf_page2), FALSE);
+#else
     conf_page2 = gtk_vbox_new(FALSE, 10);
+#endif
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    conf_page3 = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(conf_page3), FALSE);
+#else
     conf_page3 = gtk_vbox_new(FALSE, 10);
+#endif
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    conf_page4 = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(conf_page4), FALSE);
+#else
     conf_page4 = gtk_vbox_new(FALSE, 10);
+#endif
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    conf_page5 = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(conf_page5), FALSE);
+#else
     conf_page5 = gtk_vbox_new(FALSE, 10);
+#endif
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    conf_page6 = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(conf_page6), FALSE);
+#else
     conf_page6 = gtk_vbox_new(FALSE, 10);
+#endif
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    conf_page7 = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(conf_page7), FALSE);
+#else
     conf_page7 = gtk_vbox_new(FALSE, 10);
+#endif
     conf_hbutton_box = gtk_hbutton_box_new();
     gtk_button_box_set_layout(GTK_BUTTON_BOX(conf_hbutton_box), GTK_BUTTONBOX_END);
     conf_table = gtk_table_new(20, 2, FALSE);
@@@@ -6498,6 +6642,11 @@@@ void player_attribute_changed_callback(GmtkMediaTracke
         gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_angle), idledata->videopresent);
         gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_advanced), idledata->videopresent);
         gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_details), TRUE);
+        if (resize_on_new_media || idledata->videopresent == FALSE) {
+            if (idledata->width > 0 && idledata->height > 0)
+                idledata->videopresent = TRUE;
+            g_idle_add(resize_window, idledata);
+        }
         break;
     case ATTRIBUTE_AUDIO_TRACK:
         name = gmtk_media_player_get_attribute_string(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_AUDIO_TRACK);
@@@@ -6547,9 +6696,11 @@@@ void player_attribute_changed_callback(GmtkMediaTracke
 
         break;
     case ATTRIBUTE_SUB_VISIBLE:
-        gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(menuitem_view_subtitles),
-                                       gmtk_media_player_get_attribute_boolean(GMTK_MEDIA_PLAYER(media),
-                                                                               ATTRIBUTE_SUB_VISIBLE));
+        if (showsubtitles) {
+            gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(menuitem_view_subtitles),
+                                           gmtk_media_player_get_attribute_boolean(GMTK_MEDIA_PLAYER(media),
+                                                                                   ATTRIBUTE_SUB_VISIBLE));
+        }
         break;
     case ATTRIBUTE_HAS_CHAPTERS:
         if (gmtk_media_player_get_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_HAS_CHAPTERS)
@@@@ -6718,6 +6869,9 @@@@ void player_media_state_changed_callback(GtkButton * b
     gchar *tip_text = NULL;
 #endif
     gchar *short_filename = NULL;
+#ifdef GTK3_ENABLED
+    GtkIconTheme *icon_theme = gtk_icon_theme_get_default();
+#endif
 
     gm_log(verbose, G_LOG_LEVEL_MESSAGE, "in media state change with state = %s dontplaynext = %i",
            gmtk_media_state_to_string(media_state), dontplaynext);
@@@@ -6774,7 +6928,11 @@@@ void player_media_state_changed_callback(GtkButton * b
         // break purposely not put here, so gui is properly updated
     case MEDIA_STATE_STOP:
 #ifdef GTK3_ENABLED
-        gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+        if (gtk_icon_theme_has_icon(icon_theme, "media-playback-start-symbolic")) {
+            gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+        } else {
+            gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
+        }
 #else
         gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
 #endif
@@@@ -6810,7 +6968,11 @@@@ void player_media_state_changed_callback(GtkButton * b
         if (idledata->mapped_af_export == NULL)
             map_af_export_file(idledata);
 #ifdef GTK3_ENABLED
-        gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-pause-symbolic", button_size);
+        if (gtk_icon_theme_has_icon(icon_theme, "media-playback-pause-symbolic")) {
+            gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-pause-symbolic", button_size);
+        } else {
+            gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PAUSE, button_size);
+        }
 #else
         gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PAUSE, button_size);
 #endif
@@@@ -6837,6 +6999,7 @@@@ void player_media_state_changed_callback(GtkButton * b
         if (idledata->videopresent)
             dbus_disable_screensaver();
         gmtk_media_tracker_set_text(GMTK_MEDIA_TRACKER(tracker), _("Playing"));
+        gmtk_media_player_set_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SUB_VISIBLE, showsubtitles);
         dbus_send_event("MediaPlaying", 0);
         g_idle_add(set_media_label, idledata);
         if (gmtk_media_player_get_attribute_string(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_TITLE) != NULL) {
@@@@ -6855,7 +7018,11 @@@@ void player_media_state_changed_callback(GtkButton * b
         break;
     case MEDIA_STATE_PAUSE:
 #ifdef GTK3_ENABLED
-        gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+        if (gtk_icon_theme_has_icon(icon_theme, "media-playback-start-symbolic")) {
+            gtk_image_set_from_icon_name(GTK_IMAGE(image_play), "media-playback-start-symbolic", button_size);
+        } else {
+            gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
+        }
 #else
         gtk_image_set_from_stock(GTK_IMAGE(image_play), GTK_STOCK_MEDIA_PLAY, button_size);
 #endif
@@@@ -7301,10 +7468,12 @@@@ GtkWidget *create_window(gint windowid)
     gtk_widget_show(GTK_WIDGET(menuitem_copyurl));
     menuitem_sep2 = GTK_MENU_ITEM(gtk_separator_menu_item_new());
     gtk_menu_shell_append(GTK_MENU_SHELL(popup_menu), GTK_WIDGET(menuitem_sep2));
-    gtk_widget_show(GTK_WIDGET(menuitem_sep2));
+    if (control_id != 0)
+        gtk_widget_show(GTK_WIDGET(menuitem_sep2));
     menuitem_config = GTK_MENU_ITEM(gtk_image_menu_item_new_from_stock(GTK_STOCK_PREFERENCES, NULL));
     gtk_menu_shell_append(GTK_MENU_SHELL(popup_menu), GTK_WIDGET(menuitem_config));
-    gtk_widget_show(GTK_WIDGET(menuitem_config));
+    if (control_id != 0)
+        gtk_widget_show(GTK_WIDGET(menuitem_config));
     menuitem_sep4 = GTK_MENU_ITEM(gtk_separator_menu_item_new());
     gtk_menu_shell_append(GTK_MENU_SHELL(popup_menu), GTK_WIDGET(menuitem_sep4));
     menuitem_save = GTK_MENU_ITEM(gtk_image_menu_item_new_from_stock(GTK_STOCK_SAVE, accel_group));
@@@@ -7319,10 +7488,13 @@@@ GtkWidget *create_window(gint windowid)
 
     menuitem_sep3 = GTK_MENU_ITEM(gtk_separator_menu_item_new());
     gtk_menu_shell_append(GTK_MENU_SHELL(popup_menu), GTK_WIDGET(menuitem_sep3));
-    gtk_widget_show(GTK_WIDGET(menuitem_sep3));
+    if (control_id != 0)
+        gtk_widget_show(GTK_WIDGET(menuitem_sep3));
     menuitem_quit = GTK_MENU_ITEM(gtk_image_menu_item_new_from_stock(GTK_STOCK_QUIT, accel_group));
     gtk_menu_shell_append(GTK_MENU_SHELL(popup_menu), GTK_WIDGET(menuitem_quit));
-    gtk_widget_show(GTK_WIDGET(menuitem_quit));
+    if (control_id != 0)
+        gtk_widget_show(GTK_WIDGET(menuitem_quit));
+
     g_signal_connect(G_OBJECT(menuitem_open), "activate", G_CALLBACK(menuitem_open_callback), NULL);
     g_signal_connect(G_OBJECT(menuitem_play), "activate", G_CALLBACK(menuitem_pause_callback), NULL);
     g_signal_connect(G_OBJECT(menuitem_stop), "activate", G_CALLBACK(menuitem_stop_callback), NULL);
@@@@ -7664,9 +7836,24 @@@@ GtkWidget *create_window(gint windowid)
     gtk_drag_dest_add_uri_targets(window);
     //Connect the signal for DnD
     g_signal_connect(G_OBJECT(window), "drag_data_received", G_CALLBACK(drop_callback), NULL);
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 0);
+    gtk_box_set_homogeneous(GTK_BOX(vbox), FALSE);
+#else
     vbox = gtk_vbox_new(FALSE, 0);
+#endif
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    hbox = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 0);
+    gtk_box_set_homogeneous(GTK_BOX(hbox), FALSE);
+#else
     hbox = gtk_hbox_new(FALSE, 0);
+#endif
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    controls_box = gtk_box_new(GTK_ORIENTATION_VERTICAL, 0);
+    gtk_box_set_homogeneous(GTK_BOX(controls_box), FALSE);
+#else
     controls_box = gtk_vbox_new(FALSE, 0);
+#endif
     media = gmtk_media_player_new();
     g_signal_connect_swapped(G_OBJECT(media), "media_state_changed",
                              G_CALLBACK(player_media_state_changed_callback), NULL);
@@@@ -7682,10 +7869,20 @@@@ GtkWidget *create_window(gint windowid)
     media_label = gtk_label_new("");
     gtk_widget_set_size_request(media_label, 300, 100);
     gtk_label_set_ellipsize(GTK_LABEL(media_label), PANGO_ELLIPSIZE_END);
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    media_hbox = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(media_hbox), FALSE);
+#else
     media_hbox = gtk_hbox_new(FALSE, 10);
+#endif
     g_signal_connect(media_hbox, "show", G_CALLBACK(view_option_show_callback), NULL);
     g_signal_connect(media_hbox, "size_allocate", G_CALLBACK(view_option_size_allocate_callback), NULL);
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    details_vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
+    gtk_box_set_homogeneous(GTK_BOX(details_vbox), FALSE);
+#else
     details_vbox = gtk_vbox_new(FALSE, 10);
+#endif
     details_table = gtk_table_new(20, 2, FALSE);
     g_signal_connect(details_vbox, "show", G_CALLBACK(view_option_show_callback), NULL);
     g_signal_connect(details_vbox, "size_allocate", G_CALLBACK(view_option_size_allocate_callback), NULL);
@@@@ -7717,7 +7914,12 @@@@ GtkWidget *create_window(gint windowid)
     g_signal_connect(plvbox, "size_allocate", G_CALLBACK(view_option_size_allocate_callback), NULL);
     //if (remember_loc)
     //      gtk_paned_set_position(GTK_PANED(pane),loc_panel_position);
+#if GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION >= 2
+    vbox_master = gtk_box_new(GTK_ORIENTATION_VERTICAL, 0);
+    gtk_box_set_homogeneous(GTK_BOX(vbox_master), FALSE);
+#else
     vbox_master = gtk_vbox_new(FALSE, 0);
+#endif
     if (windowid == 0)
         gtk_box_pack_start(GTK_BOX(vbox_master), menubar, FALSE, FALSE, 0);
     gtk_widget_show(menubar);
@@@@ -7726,15 +7928,33 @@@@ GtkWidget *create_window(gint windowid)
     gtk_container_add(GTK_CONTAINER(window), vbox_master);
     icon_theme = gtk_icon_theme_get_default();
 #ifdef GTK3_ENABLED
-    image_play = gtk_image_new_from_icon_name("media-playback-start-symbolic", button_size);
-    image_stop = gtk_image_new_from_icon_name("media-playback-stop-symbolic", button_size);
-    image_pause = gtk_image_new_from_icon_name("media-playback-pause-symbolic", button_size);
-    image_ff = gtk_image_new_from_icon_name("media-seek-forward-symbolic", button_size);
-    image_rew = gtk_image_new_from_icon_name("media-seek-backward-symbolic", button_size);
-    image_prev = gtk_image_new_from_icon_name("media-skip-backward-symbolic", button_size);
-    image_next = gtk_image_new_from_icon_name("media-skip-forward-symbolic", button_size);
-    image_menu = gtk_image_new_from_icon_name("view-sidebar-symbolic", button_size);
-    image_fs = gtk_image_new_from_icon_name("view-fullscreen-symbolic", button_size);
+    if (gtk_icon_theme_has_icon(icon_theme, "media-playback-start-symbolic") &&
+        gtk_icon_theme_has_icon(icon_theme, "media-playback-stop-symbolic") &&
+        gtk_icon_theme_has_icon(icon_theme, "media-playback-pause-symbolic") &&
+        gtk_icon_theme_has_icon(icon_theme, "media-seek-forward-symbolic") &&
+        gtk_icon_theme_has_icon(icon_theme, "media-seek-backward-symbolic") &&
+        gtk_icon_theme_has_icon(icon_theme, "view-sidebar-symbolic") &&
+        gtk_icon_theme_has_icon(icon_theme, "view-fullscreen-symbolic")) {
+        image_play = gtk_image_new_from_icon_name("media-playback-start-symbolic", button_size);
+        image_stop = gtk_image_new_from_icon_name("media-playback-stop-symbolic", button_size);
+        image_pause = gtk_image_new_from_icon_name("media-playback-pause-symbolic", button_size);
+        image_ff = gtk_image_new_from_icon_name("media-seek-forward-symbolic", button_size);
+        image_rew = gtk_image_new_from_icon_name("media-seek-backward-symbolic", button_size);
+        image_prev = gtk_image_new_from_icon_name("media-skip-backward-symbolic", button_size);
+        image_next = gtk_image_new_from_icon_name("media-skip-forward-symbolic", button_size);
+        image_menu = gtk_image_new_from_icon_name("view-sidebar-symbolic", button_size);
+        image_fs = gtk_image_new_from_icon_name("view-fullscreen-symbolic", button_size);
+    } else {
+        image_play = gtk_image_new_from_stock(GTK_STOCK_MEDIA_PLAY, button_size);
+        image_stop = gtk_image_new_from_stock(GTK_STOCK_MEDIA_STOP, button_size);
+        image_pause = gtk_image_new_from_stock(GTK_STOCK_MEDIA_PAUSE, button_size);
+        image_ff = gtk_image_new_from_stock(GTK_STOCK_MEDIA_FORWARD, button_size);
+        image_rew = gtk_image_new_from_stock(GTK_STOCK_MEDIA_REWIND, button_size);
+        image_prev = gtk_image_new_from_stock(GTK_STOCK_MEDIA_PREVIOUS, button_size);
+        image_next = gtk_image_new_from_stock(GTK_STOCK_MEDIA_NEXT, button_size);
+        image_menu = gtk_image_new_from_stock(GTK_STOCK_INDEX, button_size);
+        image_fs = gtk_image_new_from_stock(GTK_STOCK_FULLSCREEN, button_size);
+    }
 #else
     image_play = gtk_image_new_from_stock(GTK_STOCK_MEDIA_PLAY, button_size);
     image_stop = gtk_image_new_from_stock(GTK_STOCK_MEDIA_STOP, button_size);
@@@@ -8390,6 +8610,10 @@@@ void show_fs_controls()
     GdkScreen *screen;
     GdkRectangle rect;
     GtkAllocation alloc;
+#ifdef GTK3_ENABLED
+    GtkIconTheme *icon_theme = gtk_icon_theme_get_default();
+#endif
+
     if (fs_controls == NULL && fullscreen) {
         fs_controls = gtk_window_new(GTK_WINDOW_POPUP);
         gtk_widget_add_events(fs_controls, GDK_ENTER_NOTIFY_MASK);
@@@@ -8398,7 +8622,11 @@@@ void show_fs_controls()
         g_signal_connect(G_OBJECT(fs_controls), "leave_notify_event", G_CALLBACK(fs_controls_left), NULL);
         g_object_ref(hbox);
 #ifdef GTK3_ENABLED
-        gtk_image_set_from_icon_name(GTK_IMAGE(image_fs), "view-restore-symbolic", button_size);
+        if (gtk_icon_theme_has_icon(icon_theme, "view-restore-symbolic")) {
+            gtk_image_set_from_icon_name(GTK_IMAGE(image_fs), "view-restore-symbolic", button_size);
+        } else {
+            gtk_image_set_from_stock(GTK_IMAGE(image_fs), GTK_STOCK_LEAVE_FULLSCREEN, button_size);
+        }
 #else
         gtk_image_set_from_stock(GTK_IMAGE(image_fs), GTK_STOCK_LEAVE_FULLSCREEN, button_size);
 #endif
@@@@ -8428,11 +8656,18 @@@@ void show_fs_controls()
 
 void hide_fs_controls()
 {
+#ifdef GTK3_ENABLED
+    GtkIconTheme *icon_theme = gtk_icon_theme_get_default();
+#endif
 
     if (fs_controls != NULL) {
         g_object_ref(hbox);
 #ifdef GTK3_ENABLED
-        gtk_image_set_from_icon_name(GTK_IMAGE(image_fs), "view-fullscreen-symbolic", button_size);
+        if (gtk_icon_theme_has_icon(icon_theme, "view-fullscreen-symbolic")) {
+            gtk_image_set_from_icon_name(GTK_IMAGE(image_fs), "view-fullscreen-symbolic", button_size);
+        } else {
+            gtk_image_set_from_stock(GTK_IMAGE(image_fs), GTK_STOCK_FULLSCREEN, button_size);
+        }
 #else
         gtk_image_set_from_stock(GTK_IMAGE(image_fs), GTK_STOCK_FULLSCREEN, button_size);
 #endif
@


1.32
log
@Bugfix: subtitles not hidden by default when specified
(upstream svn revision r2397)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.31 2013/01/11 13:20:50 dcoppa Exp $
d11 3
d27 1
a27 1
+++ src/gui.c	Thu Jan 31 12:39:22 2013
d495 32
a526 1
@@@@ -7664,9 +7831,24 @@@@ GtkWidget *create_window(gint windowid)
d551 1
a551 1
@@@@ -7682,10 +7864,20 @@@@ GtkWidget *create_window(gint windowid)
d572 1
a572 1
@@@@ -7717,7 +7909,12 @@@@ GtkWidget *create_window(gint windowid)
d585 1
a585 1
@@@@ -7726,15 +7923,33 @@@@ GtkWidget *create_window(gint windowid)
d628 1
a628 1
@@@@ -8390,6 +8605,10 @@@@ void show_fs_controls()
d639 1
a639 1
@@@@ -8398,7 +8617,11 @@@@ void show_fs_controls()
d652 1
a652 1
@@@@ -8428,11 +8651,18 @@@@ void show_fs_controls()
@


1.31
log
@Fix some layout issues when playing audio only files
(upstream svn revision r2390)

Resize player when on 'videopresent' event
(upstream svn revision r2391)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.30 2012/12/31 10:27:17 dcoppa Exp $
d14 3
d24 1
a24 1
+++ src/gui.c	Fri Jan 11 11:53:21 2013
d420 16
a435 1
@@@@ -6718,6 +6867,9 @@@@ void player_media_state_changed_callback(GtkButton * b
d445 1
a445 1
@@@@ -6774,7 +6926,11 @@@@ void player_media_state_changed_callback(GtkButton * b
d458 1
a458 1
@@@@ -6810,7 +6966,11 @@@@ void player_media_state_changed_callback(GtkButton * b
d471 9
a479 1
@@@@ -6855,7 +7015,11 @@@@ void player_media_state_changed_callback(GtkButton * b
d492 1
a492 1
@@@@ -7664,9 +7828,24 @@@@ GtkWidget *create_window(gint windowid)
d517 1
a517 1
@@@@ -7682,10 +7861,20 @@@@ GtkWidget *create_window(gint windowid)
d538 1
a538 1
@@@@ -7717,7 +7906,12 @@@@ GtkWidget *create_window(gint windowid)
d551 1
a551 1
@@@@ -7726,15 +7920,33 @@@@ GtkWidget *create_window(gint windowid)
d594 1
a594 1
@@@@ -8390,6 +8602,10 @@@@ void show_fs_controls()
d605 1
a605 1
@@@@ -8398,7 +8614,11 @@@@ void show_fs_controls()
d618 1
a618 1
@@@@ -8428,11 +8648,18 @@@@ void show_fs_controls()
@


1.30
log
@Various cleanup to the gui code, adapted from upstream svn.
Tighten up dependency on gnome-icon-theme.
@
text
@d1 4
a4 1
$OpenBSD: patch-src_gui_c,v 1.29 2012/12/19 15:04:36 dcoppa Exp $
d11 3
d21 10
a30 2
+++ src/gui.c	Mon Dec 31 10:24:25 2012
@@@@ -543,7 +543,9 @@@@ void adjust_layout()
d40 1
a40 1
@@@@ -555,7 +557,9 @@@@ void adjust_layout()
d50 15
a64 1
@@@@ -616,15 +620,18 @@@@ void adjust_layout()
d84 1
a84 1
@@@@ -1182,13 +1189,20 @@@@ static const gchar *PLAYSTATE_to_string(const PLAYSTAT
d106 1
a106 1
@@@@ -1214,7 +1228,11 @@@@ gboolean set_gui_state(void *data)
d119 1
a119 1
@@@@ -1239,7 +1257,11 @@@@ gboolean set_gui_state(void *data)
d132 1
a132 1
@@@@ -1352,7 +1374,12 @@@@ void create_folder_progress_window()
d145 1
a145 1
@@@@ -1360,7 +1387,11 @@@@ void create_folder_progress_window()
d157 29
a185 1
@@@@ -1633,6 +1664,18 @@@@ gboolean set_software_volume(gdouble * data)
d204 1
a204 1
@@@@ -2577,6 +2620,9 @@@@ gboolean play_callback(GtkWidget * widget, GdkEventExp
d214 1
a214 1
@@@@ -2585,7 +2631,11 @@@@ gboolean stop_callback(GtkWidget * widget, GdkEventExp
d227 1
a227 1
@@@@ -2599,7 +2649,11 @@@@ gboolean stop_callback(GtkWidget * widget, GdkEventExp
d240 1
a240 1
@@@@ -2672,6 +2726,9 @@@@ gboolean prev_callback(GtkWidget * widget, GdkEventExp
d250 1
a250 1
@@@@ -2706,7 +2763,11 @@@@ gboolean prev_callback(GtkWidget * widget, GdkEventExp
d263 1
a263 1
@@@@ -2733,6 +2794,9 @@@@ gboolean next_callback(GtkWidget * widget, GdkEventExp
d273 1
a273 1
@@@@ -2756,7 +2820,11 @@@@ gboolean next_callback(GtkWidget * widget, GdkEventExp
d286 1
a286 1
@@@@ -3086,16 +3154,31 @@@@ void menuitem_open_location_callback(GtkMenuItem * men
d318 1
a318 1
@@@@ -4145,11 +4228,15 @@@@ void config_apply(GtkWidget * widget, void *data)
d337 1
a337 1
@@@@ -4625,7 +4712,12 @@@@ void menuitem_advanced_callback(GtkMenuItem * menuitem
d350 1
a350 1
@@@@ -5110,14 +5202,54 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d405 13
a417 1
@@@@ -6718,6 +6850,9 @@@@ void player_media_state_changed_callback(GtkButton * b
d427 1
a427 1
@@@@ -6774,7 +6909,11 @@@@ void player_media_state_changed_callback(GtkButton * b
d440 1
a440 1
@@@@ -6810,7 +6949,11 @@@@ void player_media_state_changed_callback(GtkButton * b
d453 1
a453 1
@@@@ -6855,7 +6998,11 @@@@ void player_media_state_changed_callback(GtkButton * b
d466 1
a466 1
@@@@ -7664,9 +7811,24 @@@@ GtkWidget *create_window(gint windowid)
d491 1
a491 1
@@@@ -7682,10 +7844,20 @@@@ GtkWidget *create_window(gint windowid)
d512 1
a512 1
@@@@ -7717,7 +7889,12 @@@@ GtkWidget *create_window(gint windowid)
d525 1
a525 1
@@@@ -7726,15 +7903,33 @@@@ GtkWidget *create_window(gint windowid)
d568 1
a568 1
@@@@ -8390,6 +8585,10 @@@@ void show_fs_controls()
d579 1
a579 1
@@@@ -8398,7 +8597,11 @@@@ void show_fs_controls()
d592 1
a592 1
@@@@ -8428,11 +8631,18 @@@@ void show_fs_controls()
@


1.29
log
@Some improvements in the audio department:

Fix some problems on initial volume setup
(upstream svn revision r2378)

Don't monitor system volume when running in softvol mode
(upstream svn revision r2377)
@
text
@d1 6
a6 1
$OpenBSD$
d14 116
a129 3
--- src/gui.c.orig	Wed Dec 19 13:32:44 2012
+++ src/gui.c	Wed Dec 19 15:21:21 2012
@@@@ -1633,6 +1633,18 @@@@ gboolean set_software_volume(gdouble * data)
d148 115
a262 1
@@@@ -4145,11 +4157,15 @@@@ void config_apply(GtkWidget * widget, void *data)
d281 263
@


1.28
log
@Update to gnome-mplayer-1.0.7.
Switch to gtk+3.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.27 2012/05/09 14:19:37 dcoppa Exp $
d3 2
a4 2
Initialize a variable to NULL
(upstream svn revision r2243)
d6 2
a7 2
Fix a couple of keyboard shortcuts as they were in the wrong shift
state (upstream svn revision r2245)
d9 5
a13 17
Monitor subtitle visibility better
(upstream svn revision r2248)

Fix button sensitivity based on state
(upstream svn revision r2239)

Add mouse events to capture over the media window
(upstream svn revision r2247)

--- src/gui.c.orig	Fri Apr  6 15:19:25 2012
+++ src/gui.c	Wed May  9 15:40:09 2012
@@@@ -604,7 +604,7 @@@@ gboolean set_progress_value(void *data)
     gchar *text;
     struct stat buf = { 0 };
     gchar *iterfilename;
-    gchar *iteruri;
+    gchar *iteruri = NULL;
d15 11
a25 72
     if (idle == NULL)
         return FALSE;
@@@@ -1916,12 +1916,6 @@@@ gboolean window_key_callback(GtkWidget * widget, GdkEv
         case GDK_bracketright:
             gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_MULTIPLIER, 1.10);
             return FALSE;
-        case GDK_braceleft:
-            gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_MULTIPLIER, 0.50);
-            return FALSE;
-        case GDK_braceright:
-            gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_MULTIPLIER, 2.0);
-            return FALSE;
         case GDK_BackSpace:
             gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_SET, 1.0);
             return FALSE;
@@@@ -1941,9 +1935,6 @@@@ gboolean window_key_callback(GtkWidget * widget, GdkEv
             gtk_range_set_value(GTK_RANGE(vol_slider), gtk_range_get_value(GTK_RANGE(vol_slider)) + 0.01);
 #endif
             return FALSE;
-        case GDK_numbersign:
-            gmtk_media_player_send_command(GMTK_MEDIA_PLAYER(media), COMMAND_SWITCH_AUDIO);
-            return FALSE;
         case GDK_period:
             if (gmtk_media_player_get_state(GMTK_MEDIA_PLAYER(media)) == MEDIA_STATE_PAUSE)
                 gmtk_media_player_send_command(GMTK_MEDIA_PLAYER(media), COMMAND_FRAME_STEP);
@@@@ -1965,7 +1956,6 @@@@ gboolean window_key_callback(GtkWidget * widget, GdkEv
                }
              */
             return FALSE;
-        case GDK_plus:
         case GDK_KP_Add:
             gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_AUDIO_DELAY,
                                                    gmtk_media_player_get_attribute_double(GMTK_MEDIA_PLAYER(media),
@@@@ -2060,6 +2050,21 @@@@ gboolean window_key_callback(GtkWidget * widget, GdkEv
         case GDK_S:
             gmtk_media_player_send_command(GMTK_MEDIA_PLAYER(media), COMMAND_TAKE_SCREENSHOT);
             return FALSE;
+        case GDK_numbersign:
+            gmtk_media_player_send_command(GMTK_MEDIA_PLAYER(media), COMMAND_SWITCH_AUDIO);
+            return FALSE;
+        case GDK_plus:
+            gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_AUDIO_DELAY,
+                                                   gmtk_media_player_get_attribute_double(GMTK_MEDIA_PLAYER(media),
+                                                                                          ATTRIBUTE_AUDIO_DELAY) + 0.1);
+
+            return FALSE;
+        case GDK_braceleft:
+            gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_MULTIPLIER, 0.50);
+            return FALSE;
+        case GDK_braceright:
+            gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_MULTIPLIER, 2.0);
+            return FALSE;
         default:
             gmtk_media_player_send_key_press_event(GMTK_MEDIA_PLAYER(media), event, data);
             return FALSE;
@@@@ -6136,6 +6141,9 @@@@ void player_attribute_changed_callback(GmtkMediaTracke
         gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_subtitles),
                                  gmtk_media_player_get_attribute_boolean(GMTK_MEDIA_PLAYER(media),
                                                                          ATTRIBUTE_SUBS_EXIST));
+
+        break;
+    case ATTRIBUTE_SUB_VISIBLE:
         gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(menuitem_view_subtitles),
                                        gmtk_media_player_get_attribute_boolean(GMTK_MEDIA_PLAYER(media),
                                                                                ATTRIBUTE_SUB_VISIBLE));
@@@@ -6358,6 +6366,10 @@@@ void player_media_state_changed_callback(GtkButton * b
 #endif
         gtk_widget_set_sensitive(ff_event_box, FALSE);
         gtk_widget_set_sensitive(rew_event_box, FALSE);
+        gtk_widget_set_sensitive(prev_event_box, FALSE);
+        gtk_widget_set_sensitive(next_event_box, FALSE);
+        gtk_widget_set_sensitive(stop_event_box, FALSE);
d27 15
a41 56
         if (GTK_WIDGET(gtk_widget_get_parent(GTK_WIDGET(menuitem_play))) == GTK_WIDGET(popup_menu))
             gtk_container_remove(GTK_CONTAINER(popup_menu), GTK_WIDGET(menuitem_play));
         menuitem_play = GTK_MENU_ITEM(gtk_image_menu_item_new_from_stock(GTK_STOCK_MEDIA_PLAY, NULL));
@@@@ -6381,6 +6393,10 @@@@ void player_media_state_changed_callback(GtkButton * b
 #endif
         gtk_widget_set_sensitive(ff_event_box, TRUE);
         gtk_widget_set_sensitive(rew_event_box, TRUE);
+        gtk_widget_set_sensitive(prev_event_box, TRUE);
+        gtk_widget_set_sensitive(next_event_box, TRUE);
+        gtk_widget_set_sensitive(stop_event_box, TRUE);
+
         if (GTK_WIDGET(gtk_widget_get_parent(GTK_WIDGET(menuitem_play))) == GTK_WIDGET(popup_menu))
             gtk_container_remove(GTK_CONTAINER(popup_menu), GTK_WIDGET(menuitem_play));
         menuitem_play = GTK_MENU_ITEM(gtk_image_menu_item_new_from_stock(GTK_STOCK_MEDIA_PAUSE, NULL));
@@@@ -6404,6 +6420,10 @@@@ void player_media_state_changed_callback(GtkButton * b
 #endif
         gtk_widget_set_sensitive(ff_event_box, FALSE);
         gtk_widget_set_sensitive(rew_event_box, FALSE);
+        gtk_widget_set_sensitive(prev_event_box, FALSE);
+        gtk_widget_set_sensitive(next_event_box, FALSE);
+        gtk_widget_set_sensitive(stop_event_box, FALSE);
+
         if (GTK_WIDGET(gtk_widget_get_parent(GTK_WIDGET(menuitem_play))) == GTK_WIDGET(popup_menu))
             gtk_container_remove(GTK_CONTAINER(popup_menu), GTK_WIDGET(menuitem_play));
         menuitem_play = GTK_MENU_ITEM(gtk_image_menu_item_new_from_stock(GTK_STOCK_MEDIA_PLAY, NULL));
@@@@ -7257,6 +7277,9 @@@@ GtkWidget *create_window(gint windowid)
     hbox = gtk_hbox_new(FALSE, 0);
     controls_box = gtk_vbox_new(FALSE, 0);
     media = gmtk_media_player_new();
+    gtk_widget_set_events(media, GDK_KEY_PRESS_MASK | GDK_KEY_RELEASE_MASK |
+                          GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK |
+                          GDK_POINTER_MOTION_MASK | GDK_LEAVE_NOTIFY_MASK | GDK_ENTER_NOTIFY_MASK);
     g_signal_connect_swapped(G_OBJECT(media), "media_state_changed",
                              G_CALLBACK(player_media_state_changed_callback), NULL);
     g_signal_connect_swapped(G_OBJECT(media), "button_press_event", G_CALLBACK(popup_handler), G_OBJECT(popup_menu));
@@@@ -7407,6 +7430,7 @@@@ GtkWidget *create_window(gint windowid)
     gtk_box_pack_start(GTK_BOX(hbox), prev_event_box, FALSE, FALSE, 0);
     gtk_widget_show(image_prev);
     gtk_widget_show(prev_event_box);
+    gtk_widget_set_sensitive (prev_event_box, FALSE);
 
     rew_event_box = gtk_button_new();
     gtk_button_set_image(GTK_BUTTON(rew_event_box), image_rew);
@@@@ -7427,6 +7451,7 @@@@ GtkWidget *create_window(gint windowid)
     gtk_box_pack_start(GTK_BOX(hbox), rew_event_box, FALSE, FALSE, 0);
     gtk_widget_show(image_rew);
     gtk_widget_show(rew_event_box);
+    gtk_widget_set_sensitive (rew_event_box, FALSE);
 
     play_event_box = gtk_button_new();
     gtk_button_set_image(GTK_BUTTON(play_event_box), image_play);
@@@@ -7467,6 +7492,7 @@@@ GtkWidget *create_window(gint windowid)
     gtk_box_pack_start(GTK_BOX(hbox), stop_event_box, FALSE, FALSE, 0);
     gtk_widget_show(image_stop);
     gtk_widget_show(stop_event_box);
+    gtk_widget_set_sensitive (stop_event_box, FALSE);
d43 3
a45 7
     ff_event_box = gtk_button_new();
     gtk_button_set_image(GTK_BUTTON(ff_event_box), image_ff);
@@@@ -7487,6 +7513,7 @@@@ GtkWidget *create_window(gint windowid)
     gtk_box_pack_start(GTK_BOX(hbox), ff_event_box, FALSE, FALSE, 0);
     gtk_widget_show(image_ff);
     gtk_widget_show(ff_event_box);
+    gtk_widget_set_sensitive (ff_event_box, FALSE);
d47 2
a48 11
     next_event_box = gtk_button_new();
     gtk_button_set_image(GTK_BUTTON(next_event_box), image_next);
@@@@ -7507,6 +7534,8 @@@@ GtkWidget *create_window(gint windowid)
     gtk_box_pack_start(GTK_BOX(hbox), next_event_box, FALSE, FALSE, 0);
     gtk_widget_show(image_next);
     gtk_widget_show(next_event_box);
+    gtk_widget_set_sensitive (next_event_box, FALSE);
+	
     // progress bar
     tracker = GMTK_MEDIA_TRACKER(gmtk_media_tracker_new());
     gtk_box_pack_start(GTK_BOX(hbox), GTK_WIDGET(tracker), TRUE, TRUE, 2);
@


1.27
log
@
Monitor subtitle visibility better

From upstream svn
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.26 2012/05/03 15:19:08 dcoppa Exp $
@


1.26
log
@Several bugfixes from upstream svn (see patches for details)
@
text
@d1 1
a1 1
$OpenBSD$
d9 3
d18 2
a19 2
--- src/gui.c.orig	Thu May  3 16:54:44 2012
+++ src/gui.c	Thu May  3 16:54:53 2012
d82 11
a92 1
@@@@ -6358,6 +6363,10 @@@@ void player_media_state_changed_callback(GtkButton * b
d103 1
a103 1
@@@@ -6381,6 +6390,10 @@@@ void player_media_state_changed_callback(GtkButton * b
d114 1
a114 1
@@@@ -6404,6 +6417,10 @@@@ void player_media_state_changed_callback(GtkButton * b
d125 1
a125 1
@@@@ -7257,6 +7274,9 @@@@ GtkWidget *create_window(gint windowid)
d135 1
a135 1
@@@@ -7407,6 +7427,7 @@@@ GtkWidget *create_window(gint windowid)
d143 1
a143 1
@@@@ -7427,6 +7448,7 @@@@ GtkWidget *create_window(gint windowid)
d151 1
a151 1
@@@@ -7467,6 +7489,7 @@@@ GtkWidget *create_window(gint windowid)
d159 1
a159 1
@@@@ -7487,6 +7510,7 @@@@ GtkWidget *create_window(gint windowid)
d167 1
a167 1
@@@@ -7507,6 +7531,8 @@@@ GtkWidget *create_window(gint windowid)
@


1.25
log
@Update to 1.0.6
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.24 2012/04/06 10:14:44 dcoppa Exp $
d3 2
a4 2
Separate delete and destroy events
(upstream svn revisions r2232 & r2233)
d6 2
a7 2
Remove deprecated slide_away code to unbreak with glib-2.32
(upstream svn revision r2234)
d9 59
a67 19
--- src/gui.c.orig	Thu Mar 22 05:58:16 2012
+++ src/gui.c	Fri Apr  6 11:44:16 2012
@@@@ -1274,6 +1274,7 @@@@ gboolean set_quit(void *data)
 {
 
     delete_callback(NULL, NULL, NULL);
+    g_idle_add(set_destroy, NULL);
     return FALSE;
 }
 
@@@@ -1516,6 +1517,18 @@@@ gboolean notification_handler(GtkWidget * widget, GdkE
     return FALSE;
 }
 
+gboolean set_destroy(gpointer data)
+{
+    gtk_widget_destroy(window);
+    return FALSE;
+}
d69 17
d87 10
a96 4
+static void destroy_callback(GtkWidget * widget, gpointer data)
+{
+    gtk_main_quit();
+}
d98 4
a101 29
 gboolean delete_callback(GtkWidget * widget, GdkEvent * event, void *data)
 {
     loop = 0;
@@@@ -1568,7 +1581,6 @@@@ gboolean delete_callback(GtkWidget * widget, GdkEvent 
     if (use_defaultpl && embed_window == 0)
         save_playlist_pls(default_playlist);
 
-    gtk_main_quit();
     return FALSE;
 }
 
@@@@ -1940,6 +1952,7 @@@@ gboolean window_key_callback(GtkWidget * widget, GdkEv
             return FALSE;
         case GDK_q:
             delete_callback(NULL, NULL, NULL);
+            g_idle_add(set_destroy, NULL);
             return FALSE;
         case GDK_v:
             /*
@@@@ -1980,6 +1993,7 @@@@ gboolean window_key_callback(GtkWidget * widget, GdkEv
                     gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(menuitem_fullscreen), !fullscreen);
             } else {
                 delete_callback(NULL, NULL, NULL);
+                g_idle_add(set_destroy, NULL);
             }
             return FALSE;
         case GDK_f:
@@@@ -2453,51 +2467,6 @@@@ void vol_button_value_changed_callback(GtkScaleButton 
 }
d103 60
a162 84
 
-gboolean slide_panel_away(gpointer data)
-{
-    if (!showcontrols)
-        return FALSE;
-
-    if (fs_controls == NULL) {
-        return FALSE;
-    }
-
-    if (!(fullscreen || always_hide_after_timeout)) {
-        //gtk_widget_set_size_request(fs_controls, -1, -1);
-        return FALSE;
-    }
-
-    if (g_mutex_trylock(slide_away)) {
-        // mutex is locked now, unlock it and exit function
-        g_mutex_unlock(slide_away);
-        return FALSE;
-    }
-    // mutex was already locked, this is good since we only want to do the animation if locked
-
-    if (GTK_IS_WIDGET(fs_controls) && gmtk_get_visible(fs_controls) && mouse_over_controls == FALSE) {
-        gtk_widget_hide(fs_controls);
-        g_mutex_unlock(slide_away);
-        return FALSE;
-        /*
-           if (fs_controls->allocation.height <= 1) {
-           gtk_widget_hide(fs_controls);
-           g_mutex_unlock(slide_away);
-           return FALSE;
-           } else {
-           //if (disable_animation) {
-           gtk_widget_set_size_request(fs_controls, fs_controls->allocation.width, 0);
-           //} else {
-           //    gtk_widget_set_size_request(fs_controls, fs_controls->allocation.width,
-           //                                fs_controls->allocation.height - 1);
-           //}
-           return TRUE;
-           }
-         */
-    }
-    g_mutex_unlock(slide_away);
-    return FALSE;
-}
-
 gboolean make_panel_and_mouse_invisible(gpointer data)
 {
     GTimeVal currenttime;
@@@@ -2515,10 +2484,6 @@@@ gboolean make_panel_and_mouse_invisible(gpointer data)
         g_get_current_time(&currenttime);
         g_time_val_add(&currenttime, -auto_hide_timeout * G_USEC_PER_SEC);
         if (last_movement_time > 0 && currenttime.tv_sec > last_movement_time) {
-            //if (g_mutex_trylock(slide_away)) {
-            //    g_timeout_add(40, slide_panel_away, NULL);
-            //}
-            // gtk_widget_hide(controls_box);
             hide_fs_controls();
         }
 
@@@@ -2569,7 +2534,6 @@@@ gboolean make_panel_and_mouse_invisible(gpointer data)
 gboolean make_panel_and_mouse_visible(gpointer data)
 {
 
-    g_mutex_unlock(slide_away);
     if (showcontrols && GTK_IS_WIDGET(controls_box)) {
         //gtk_widget_set_size_request(controls_box, -1, -1);
         //gtk_widget_show(controls_box);
@@@@ -3247,6 +3211,7 @@@@ void menuitem_save_callback(GtkMenuItem * menuitem, vo
 void menuitem_quit_callback(GtkMenuItem * menuitem, void *data)
 {
     delete_callback(NULL, NULL, NULL);
+    gtk_widget_destroy(window);
 }
 
 void menuitem_prev_callback(GtkMenuItem * menuitem, void *data)
@@@@ -6888,6 +6853,7 @@@@ GtkWidget *create_window(gint windowid)
     gtk_widget_add_events(window, GDK_STRUCTURE_MASK);
     gtk_widget_add_events(window, GDK_POINTER_MOTION_MASK);
     delete_signal_id = g_signal_connect(G_OBJECT(window), "delete_event", G_CALLBACK(delete_callback), NULL);
+    g_signal_connect(G_OBJECT(window), "destroy", G_CALLBACK(destroy_callback), NULL);
     g_signal_connect(G_OBJECT(window), "motion_notify_event", G_CALLBACK(motion_notify_callback), NULL);
     g_signal_connect(G_OBJECT(window), "window_state_event", G_CALLBACK(window_state_callback), NULL);
     g_signal_connect(G_OBJECT(window), "configure_event", G_CALLBACK(configure_callback), NULL);
@


1.24
log
@Bugfixes from upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.23 2012/04/06 07:01:38 dcoppa Exp $
@


1.23
log
@Remove deprecated slide_away code to unbreak with glib-2.32

committed upstream
@
text
@d1 4
a4 1
$OpenBSD$
d7 1
d9 54
a62 3
--- src/gui.c.orig	Fri Apr  6 08:48:48 2012
+++ src/gui.c	Fri Apr  6 08:50:42 2012
@@@@ -2453,51 +2453,6 @@@@ void vol_button_value_changed_callback(GtkScaleButton 
d114 1
a114 1
@@@@ -2515,10 +2470,6 @@@@ gboolean make_panel_and_mouse_invisible(gpointer data)
d125 1
a125 1
@@@@ -2569,7 +2520,6 @@@@ gboolean make_panel_and_mouse_invisible(gpointer data)
d133 16
@


1.22
log
@Update to gnome-mplayer-1.0.5
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.21 2011/12/06 16:05:44 dcoppa Exp $
d3 1
a3 2
Fix an issue when alsa is not being used
(upstream svn revision r2151)
d5 3
a7 39
Raise event on incomplete QuickTime file, and mark it for retry
(fix apple.com/trailers) - upstream svn revision r2152

Bugfix: ATTRIBUTE_FORCE_CACHE not being processed
(upstream svn revision r2172)

Bugfix: correctly set/initialize the media_device attribute
(upstream svn revision r2165)

Fix handling of mouse, panel and controls visibility when
going to/returning from fullscreen (upstream svn r2167 - r2169)

Bugfix: 'f' not going to/returning from fullscreen
(upstream svn revision r2161)

Add 50% larger display of video
(upstream svn revision r2187)

Fix problem with seeking in the tracker
(upstream svn revision r2176)

Fix speed multipliers and speed reset (upstream svn revision r2180)

--- src/gui.c.orig	Mon Jun 27 16:59:45 2011
+++ src/gui.c	Tue Dec  6 16:55:32 2011
@@@@ -106,6 +106,7 @@@@ PLAYSTATE media_state_to_playstate(GmtkMediaPlayerMedi
 void set_media_player_attributes(GtkWidget * widget)
 {
     gmtk_media_player_set_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_ENABLE_DEBUG, verbose);
+    gmtk_media_player_set_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_FORCE_CACHE, forcecache);
     gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_CACHE_SIZE, cache_size);
     gmtk_media_player_set_attribute_string(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_VO, vo);
     gmtk_media_player_set_attribute_string(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_EXTRA_OPTS, extraopts);
@@@@ -146,6 +147,7 @@@@ void set_media_player_attributes(GtkWidget * widget)
     } else {
         gmtk_media_player_set_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_DISABLE_UPSCALING, FALSE);
     }
+    gmtk_media_player_set_media_device(GMTK_MEDIA_PLAYER(media), idledata->device);
 
d9 1
d11 46
a56 2
@@@@ -1608,6 +1610,8 @@@@ void status_icon_context_callback(GtkStatusIcon * stat
 gboolean motion_notify_callback(GtkWidget * widget, GdkEventMotion * event, gpointer data)
d59 10
a68 102
+    GtkAllocation fs_allocation;
+    GtkAllocation fs_controls_allocation;
 
     g_get_current_time(&currenttime);
     last_movement_time = currenttime.tv_sec;
@@@@ -1617,7 +1621,17 @@@@ gboolean motion_notify_callback(GtkWidget * widget, Gd
 		printf("motion noticed at %li\n",currenttime.tv_sec);
 	}
 */
-    g_idle_add(make_panel_and_mouse_visible, NULL);
+    if (fullscreen) {
+	get_allocation(window, &fs_allocation);
+	get_allocation(controls_box, &fs_controls_allocation);
+	if (event->y > (fs_allocation.height - fs_controls_allocation.height)) {
+	    g_idle_add(make_panel_and_mouse_visible, NULL);
+	} else {
+	    hide_fs_controls();
+	}
+    } else {
+	g_idle_add(make_panel_and_mouse_visible, NULL);
+    }
     return FALSE;
 }
 
@@@@ -1826,7 +1840,7 @@@@ gboolean window_key_callback(GtkWidget * widget, GdkEv
             gmtk_media_player_set_attribute_integer_delta(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SATURATION, 5);
             return FALSE;
         case GDK_bracketleft:
-            gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_MULTIPLIER, 0.90);
+            gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_MULTIPLIER, 0.9091);
             return FALSE;
         case GDK_bracketright:
             gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_MULTIPLIER, 1.10);
@@@@ -1838,7 +1852,7 @@@@ gboolean window_key_callback(GtkWidget * widget, GdkEv
             gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_MULTIPLIER, 2.0);
             return FALSE;
         case GDK_BackSpace:
-            gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_MULTIPLIER, 1.0);
+            gmtk_media_player_set_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SPEED_SET, 1.0);
             return FALSE;
         case GDK_9:
 #ifdef GTK2_12_ENABLED
@@@@ -1908,6 +1922,10 @@@@ gboolean window_key_callback(GtkWidget * widget, GdkEv
                 delete_callback(NULL, NULL, NULL);
             }
             return FALSE;
+        case GDK_f:
+            if (idledata->videopresent)
+                gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(menuitem_fullscreen), !fullscreen);
+            return FALSE;
         case GDK_a:
             if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(menuitem_view_aspect_follow_window))) {
                 gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(menuitem_view_aspect_default), TRUE);
@@@@ -3315,6 +3333,16 @@@@ void menuitem_view_onetoone_callback(GtkMenuItem * men
 
 }
 
+void menuitem_view_onetoonepointfive_callback(GtkMenuItem * menuitem, void *data)
+{
+    IdleData *idle = (IdleData *) data;
+    idle->width = (gint) gmtk_media_player_get_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_WIDTH) * 1.5;
+    idle->height = (gint) gmtk_media_player_get_attribute_double(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_HEIGHT) * 1.5;
+    non_fs_width = 0;
+    non_fs_height = 0;
+    resize_window(idle);
+}
+
 void menuitem_view_twotoone_callback(GtkMenuItem * menuitem, void *data)
 {
     IdleData *idle = (IdleData *) data;
@@@@ -5073,7 +5101,7 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
     gtk_spin_button_set_value(GTK_SPIN_BUTTON(config_volume), gm_pref_store_get_int(gm_store, VOLUME));
     gm_pref_store_free(gm_store);
     gtk_entry_set_width_chars(GTK_ENTRY(config_volume), 6);
-    gtk_entry_set_editable(GTK_ENTRY(config_volume), FALSE);
+    gtk_editable_set_editable(GTK_EDITABLE(config_volume), FALSE);
     gtk_entry_set_alignment(GTK_ENTRY(config_volume), 1);
     gtk_widget_show(config_volume);
     i++;
@@@@ -5845,6 +5873,7 @@@@ void player_attribute_changed_callback(GmtkMediaTracke
         gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_onetoone), idledata->videopresent);
         gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_onetotwo), idledata->videopresent);
         gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_twotoone), idledata->videopresent);
+        gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_onetoonepointfive), idledata->videopresent);
         gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_advanced), idledata->videopresent);
         gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_aspect), idledata->videopresent);
         gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_aspect_default), idledata->videopresent);
@@@@ -6052,6 +6081,11 @@@@ void player_attribute_changed_callback(GmtkMediaTracke
         g_strlcpy(idledata->media_info, text, 1024);
         g_thread_create(get_cover_art, metadata, FALSE, NULL);
         break;
+
+    case ATTRIBUTE_RETRY_ON_FULL_CACHE:
+        idledata->retry_on_full_cache = gmtk_media_player_get_attribute_boolean (GMTK_MEDIA_PLAYER(media), ATTRIBUTE_RETRY_ON_FULL_CACHE);
+        break;
+
     default:
         if (verbose) {
             printf("Unhandled attribute change %i\n", attribute);
@@@@ -6229,6 +6263,19 @@@@ void player_position_changed_callback(GmtkMediaTracker
     }
 }
d70 2
a71 14
+gboolean tracker_value_changed_callback(GtkWidget * widget, gint value, gpointer data)
+{
+    if (gmtk_media_player_get_attribute_boolean(GMTK_MEDIA_PLAYER(media), ATTRIBUTE_SEEKABLE)) {
+	if (!autopause) {
+	    if (gmtk_media_player_get_state(GMTK_MEDIA_PLAYER(media)) != MEDIA_STATE_STOP) {
+                gmtk_media_player_seek(GMTK_MEDIA_PLAYER(media), value * 1.0, SEEK_PERCENT);
+            }
+        }
+    }
+
+    return FALSE;
+}
+
 gboolean tracker_difference_callback(GtkWidget * widget, gdouble difference, void *data)
d74 4
a77 35
@@@@ -6787,6 +6834,8 @@@@ GtkWidget *create_window(gint windowid)
     gtk_menu_shell_append(GTK_MENU_SHELL(menu_view), GTK_WIDGET(menuitem_view_twotoone));
     menuitem_view_onetotwo = GTK_MENU_ITEM(gtk_image_menu_item_new_with_mnemonic(_("_Half Size (1:2)")));
     gtk_menu_shell_append(GTK_MENU_SHELL(menu_view), GTK_WIDGET(menuitem_view_onetotwo));
+    menuitem_view_onetoonepointfive = GTK_MENU_ITEM(gtk_image_menu_item_new_with_mnemonic(_("_50% larger (1.5:1)")));
+    gtk_menu_shell_append(GTK_MENU_SHELL(menu_view), GTK_WIDGET(menuitem_view_onetoonepointfive));
     menuitem_view_aspect = GTK_MENU_ITEM(gtk_menu_item_new_with_mnemonic(_("_Aspect")));
     menu_view_aspect = GTK_MENU(gtk_menu_new());
     gtk_widget_show(GTK_WIDGET(menuitem_view_aspect));
@@@@ -6840,6 +6889,8 @@@@ GtkWidget *create_window(gint windowid)
                      G_CALLBACK(menuitem_view_twotoone_callback), idledata);
     g_signal_connect(G_OBJECT(menuitem_view_onetotwo), "activate",
                      G_CALLBACK(menuitem_view_onetotwo_callback), idledata);
+    g_signal_connect(G_OBJECT(menuitem_view_onetoonepointfive), "activate",
+                     G_CALLBACK(menuitem_view_onetoonepointfive_callback), idledata);
     g_signal_connect(G_OBJECT(menuitem_view_aspect_default),
                      "activate", G_CALLBACK(menuitem_view_aspect_callback), NULL);
     g_signal_connect(G_OBJECT(menuitem_view_aspect_four_three),
@@@@ -7146,6 +7197,7 @@@@ GtkWidget *create_window(gint windowid)
     tracker = GMTK_MEDIA_TRACKER(gmtk_media_tracker_new());
     gtk_box_pack_start(GTK_BOX(hbox), GTK_WIDGET(tracker), TRUE, TRUE, 2);
     g_signal_connect(G_OBJECT(tracker), "difference-changed", G_CALLBACK(tracker_difference_callback), NULL);
+    g_signal_connect(G_OBJECT(tracker), "value-changed", G_CALLBACK(tracker_value_changed_callback), NULL);
     g_signal_connect(G_OBJECT(tracker), "button_press_event", G_CALLBACK(progress_callback), NULL);
     g_signal_connect_swapped(G_OBJECT(media), "position_changed",
                              G_CALLBACK(player_position_changed_callback), tracker);
@@@@ -7372,7 +7424,7 @@@@ void show_window(gint windowid)
     gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_onetoone), FALSE);
     gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_onetotwo), FALSE);
     gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_twotoone), FALSE);
-    gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_twotoone), FALSE);
+    gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_onetoonepointfive), FALSE);
     gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_aspect), FALSE);
     gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_aspect_default), FALSE);
     gtk_widget_set_sensitive(GTK_WIDGET(menuitem_view_aspect_four_three), FALSE);
@


1.21
log
@
Add 50% larger display of video
(upstream svn revision r2187)

Fix seeking in the media_tracker when the mouse button is released
(upstream svn revision r66 of gmtk)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.20 2011/10/17 13:50:34 dcoppa Exp $
@


1.20
log
@Even more bugfixes backported from upstream svn:

fix speed multipliers and speed reset
fix segfaults in gmtk_media_player when defining a specific font
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.19 2011/09/29 11:03:19 dcoppa Exp $
d21 3
d30 1
a30 1
+++ src/gui.c	Mon Oct 17 14:53:08 2011
d104 18
a121 1
@@@@ -5073,7 +5091,7 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d130 9
a138 1
@@@@ -6052,6 +6070,11 @@@@ void player_attribute_changed_callback(GmtkMediaTracke
d150 1
a150 1
@@@@ -6229,6 +6252,19 @@@@ void player_position_changed_callback(GmtkMediaTracker
d170 19
a188 1
@@@@ -7146,6 +7182,7 @@@@ GtkWidget *create_window(gint windowid)
d196 9
@


1.19
log
@More bugfixes backported from upstream svn:

fix issue with not being able to play media off an SFTP share

when mplayer reports that it has video, resize the media
window so that mplayer has something to draw to

fix problem with seeking in the tracker

While here, regen WANTLIB.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.18 2011/09/21 13:10:36 dcoppa Exp $
d24 2
d27 1
a27 1
+++ src/gui.c	Wed Sep 28 15:34:17 2011
d72 18
@


1.18
log
@fix spacing; no binary changes
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.17 2011/09/21 12:20:07 dcoppa Exp $
d21 3
d25 1
a25 1
+++ src/gui.c	Wed Sep 21 15:05:50 2011
d102 28
@


1.17
log
@Backport some bugfixes from upstream svn:

Bugfix: ATTRIBUTE_FORCE_CACHE not being processed
(upstream svn revision r2172)

Bugfix: correctly set/initialize the media_device attribute
(upstream svn revision r2165)

Fix handling of mouse, panel and controls visibility when
going to/returning from fullscreen (upstream svn r2167 - r2169)

Bugfix: 'f' not going to/returning from fullscreen
(upstream svn revision r2161)

Set CDDB media type as TYPE_CD
(upstream svn revision r2165)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.16 2011/07/12 08:12:29 dcoppa Exp $
d22 1
a22 1
+++ src/gui.c	Wed Sep 21 12:29:37 2011
d92 4
a95 4
+	case ATTRIBUTE_RETRY_ON_FULL_CACHE:
+		idledata->retry_on_full_cache = gmtk_media_player_get_attribute_boolean (GMTK_MEDIA_PLAYER(media), ATTRIBUTE_RETRY_ON_FULL_CACHE);
+		break;		
+			
@


1.16
log
@Fix trailers.apple.com. It works well now (yay!)

From upstream svn
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.15 2011/07/04 13:32:55 dcoppa Exp $
d9 12
d22 57
a78 2
+++ src/gui.c	Mon Jul 11 10:19:19 2011
@@@@ -5073,7 +5073,7 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d87 1
a87 1
@@@@ -6052,6 +6052,11 @@@@ void player_attribute_changed_callback(GmtkMediaTracke
@


1.15
log
@Update to gnome-mplayer-1.0.4
@
text
@d1 1
a1 1
$OpenBSD$
d6 5
a10 2
--- src/gui.c.orig	Mon Jul  4 14:43:40 2011
+++ src/gui.c	Mon Jul  4 14:44:57 2011
d20 12
@


1.14
log
@Update to gnome-mplayer-1.0.3.
This now uses gsettings/dconf configuration system.
Most of my local patches have been merged upstream.

dconf clue stick by ajacoutot@@

Tested by Antti Harri on YouTube using the flashvideoreplacer
extension for firefox (thanks!)

please go ahead fgsch@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.13 2011/04/21 07:07:26 ajacoutot Exp $
d3 2
a4 3
Fix with libnotify>=0.7
(notify_notification_new has lost its widget argument)
(notify_notification_attach_to_status_icon is gone)
d6 10
a15 176
adapt audio/video device selection gui
set DVD device to /dev/rcd0c instead of /dev/dvd
use the right icon for the "Open iPod" menu

fixes from upstream:
don't hide controls and mouse in fullscreen mode when mouse is over
controls
plug a memory leak
adjust audio and video cache size minimum and incremental values

--- src/gui.c.orig	Fri Nov  5 17:16:22 2010
+++ src/gui.c	Tue Apr 19 16:58:55 2011
@@@@ -472,10 +472,10 @@@@ gboolean set_media_label(void *data)
             notify_init("gnome-mplayer");
             notification =
                 notify_notification_new(idle->display_name, idle->media_notification,
-                                        "gnome-mplayer", NULL);
+                                        "gnome-mplayer");
 #ifdef GTK2_12_ENABLED
-            if (show_status_icon)
-                notify_notification_attach_to_status_icon(notification, status_icon);
+//            if (show_status_icon)
+//                notify_notification_attach_to_status_icon(notification, status_icon);
 #endif
             notify_notification_show(notification, NULL);
             notify_uninit();
@@@@ -2716,7 +2716,7 @@@@ gboolean slide_panel_away(gpointer data)
     }
     // mutex was already locked, this is good since we only want to do the animation if locked
 
-    if (GTK_IS_WIDGET(fs_controls) && get_visible(fs_controls)) {
+    if (GTK_IS_WIDGET(fs_controls) && get_visible(fs_controls) && mouse_over_controls == FALSE) {
         gtk_widget_hide(fs_controls);
         g_mutex_unlock(slide_away);
         return FALSE;
@@@@ -2748,7 +2748,8 @@@@ gboolean make_panel_and_mouse_invisible(gpointer data)
     GTimeVal currenttime;
 
     if ((fullscreen || always_hide_after_timeout) && auto_hide_timeout > 0
-        && (get_visible(controls_box) || fs_controls != NULL)) {
+        && (get_visible(controls_box) || fs_controls != NULL)
+        && mouse_over_controls == FALSE) {
         g_get_current_time(&currenttime);
         g_time_val_add(&currenttime, -auto_hide_timeout * G_USEC_PER_SEC);
         if (last_movement_time > 0 && currenttime.tv_sec > last_movement_time) {
@@@@ -2835,6 +2836,19 @@@@ gboolean leave_button_callback(GtkWidget * widget, Gdk
     return FALSE;
 }
 
+gboolean fs_controls_entered(GtkWidget * widget, GdkEventCrossing * event, gpointer data)
+{
+	mouse_over_controls = TRUE;
+	return FALSE;
+}
+
+gboolean fs_controls_left(GtkWidget * widget, GdkEventCrossing * event, gpointer data)
+{
+	mouse_over_controls = FALSE;
+	return FALSE;
+}
+
+
 void menuitem_open_callback(GtkMenuItem * menuitem, void *data)
 {
 
@@@@ -3303,9 +3317,11 @@@@ void parseChannels(FILE * f)
 
 void menuitem_open_dtv_callback(GtkMenuItem * menuitem, void *data)
 {
-    gtk_list_store_clear(playliststore);
     FILE *fi;                   // FILE pointer to use to open the conf file
     gchar *mpconf;
+
+    gtk_list_store_clear(playliststore);
+	
     mpconf = g_strdup_printf("%s/.mplayer/channels.conf", g_getenv("HOME"));
     fi = fopen(mpconf, "r");    // Make sure this is pointing to
     // the appropriate file
@@@@ -3315,7 +3331,8 @@@@ void menuitem_open_dtv_callback(GtkMenuItem * menuitem
     } else {
         printf("Unable to open the config file\n");     //can change this to whatever error message system is used
     }
-
+	g_free(mpconf);
+	
     gtk_tree_model_get_iter_first(GTK_TREE_MODEL(playliststore), &iter);
     if (gtk_list_store_iter_is_valid(playliststore, &iter)) {
         play_iter(&iter, 0);
@@@@ -5053,9 +5070,6 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
         gtk_combo_box_append_text(GTK_COMBO_BOX(config_vo), "gl2");
         gtk_combo_box_append_text(GTK_COMBO_BOX(config_vo), "x11");
         gtk_combo_box_append_text(GTK_COMBO_BOX(config_vo), "xv");
-        gtk_combo_box_append_text(GTK_COMBO_BOX(config_vo), "xvmc");
-        gtk_combo_box_append_text(GTK_COMBO_BOX(config_vo), "vaapi");
-        gtk_combo_box_append_text(GTK_COMBO_BOX(config_vo), "vdpau");
 
         if (vo != NULL) {
             if (strcmp(vo, "gl") == 0)
@@@@ -5066,16 +5080,10 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
                 gtk_combo_box_set_active(GTK_COMBO_BOX(config_vo), 2);
             if (strcmp(vo, "xv") == 0)
                 gtk_combo_box_set_active(GTK_COMBO_BOX(config_vo), 3);
-            if (strcmp(vo, "xvmc") == 0)
-                gtk_combo_box_set_active(GTK_COMBO_BOX(config_vo), 4);
-            if (strcmp(vo, "vaapi") == 0)
-                gtk_combo_box_set_active(GTK_COMBO_BOX(config_vo), 5);
-            if (strcmp(vo, "vdpau") == 0)
-                gtk_combo_box_set_active(GTK_COMBO_BOX(config_vo), 6);
             if (gtk_combo_box_get_active(GTK_COMBO_BOX(config_vo))
                 == -1) {
                 gtk_combo_box_append_text(GTK_COMBO_BOX(config_vo), vo);
-                gtk_combo_box_set_active(GTK_COMBO_BOX(config_vo), 7);
+                gtk_combo_box_set_active(GTK_COMBO_BOX(config_vo), 4);
             }
         }
     }
@@@@ -5145,39 +5153,36 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
 #ifdef GTK2_12_ENABLED
     gtk_widget_set_tooltip_text(config_ao,
                                 _
-                                ("mplayer audio output device\nalsa or oss should always work, try esd in gnome, arts in kde, or pulse on newer distributions"));
+                                ("mplayer audio output device\nsndio should always work\nTry esd under GNOME, arts under KDE\nTry jack if you use the JACK sound server\nUse rtunes if you want to stream to an Apple AirPort Express"));
 
 #else
     tooltip = gtk_tooltips_new();
     gtk_tooltips_set_tip(tooltip, config_ao,
                          _
-                         ("mplayer audio output device\nalsa or oss should always work, try esd in gnome, arts in kde, or pulse on newer distributions"),
+                         ("mplayer audio output device\nsndio should always work\nTry esd under GNOME, arts under KDE\nTry jack if you use the JACK sound server\nUse rtunes if you want to stream to an Apple AirPort Express"),
                          NULL);
 #endif
     if (config_ao != NULL) {
-        gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "alsa");
-        gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "arts");
+        gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "sndio");
         gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "esd");
+        gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "arts");
         gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "jack");
-        gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "oss");
-        gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "pulse");
+        gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "rtunes");
         if (ao != NULL) {
-            if (strcmp(ao, "alsa") == 0)
+            if (strcmp(ao, "sndio") == 0)
                 gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 0);
-            if (strcmp(ao, "arts") == 0)
-                gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 1);
             if (strcmp(ao, "esd") == 0)
+                gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 1);
+            if (strcmp(ao, "arts") == 0)
                 gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 2);
             if (strcmp(ao, "jack") == 0)
                 gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 3);
-            if (strcmp(ao, "oss") == 0)
+            if (strcmp(ao, "rtunes") == 0)
                 gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 4);
-            if (strcmp(ao, "pulse") == 0)
-                gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 5);
             if (gtk_combo_box_get_active(GTK_COMBO_BOX(config_ao))
                 == -1) {
                 gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), ao);
-                gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 6);
+                gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 5);
             }
         }
     }
@@@@ -5264,8 +5269,8 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
     j = -1;
 
     config_mplayer_dvd_device = gtk_combo_box_entry_new_text();
-    gtk_combo_box_append_text(GTK_COMBO_BOX(config_mplayer_dvd_device), "/dev/dvd");
-    if (mplayer_dvd_device == NULL || g_ascii_strcasecmp("/dev/dvd", mplayer_dvd_device) == 0) {
+    gtk_combo_box_append_text(GTK_COMBO_BOX(config_mplayer_dvd_device), "/dev/rcd0c");
+    if (mplayer_dvd_device == NULL || g_ascii_strcasecmp("/dev/rcd0c", mplayer_dvd_device) == 0) {
         j = i;
     }
a16 34
@@@@ -5492,8 +5497,8 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
     gtk_misc_set_padding(GTK_MISC(conf_label), 12, 0);
     gtk_table_attach(GTK_TABLE(conf_table), conf_label, 0, 1, i, i + 1, GTK_FILL, GTK_SHRINK, 0, 0);
     gtk_widget_show(conf_label);
-    config_plugin_audio_cache_size = gtk_spin_button_new_with_range(32, 256 * 1024, 128);
-    config_plugin_video_cache_size = gtk_spin_button_new_with_range(32, 256 * 1024, 512);
+    config_plugin_audio_cache_size = gtk_spin_button_new_with_range(64, 256 * 1024, 64);
+    config_plugin_video_cache_size = gtk_spin_button_new_with_range(256, 256 * 1024, 256);
 #ifdef GTK2_12_ENABLED
     gtk_widget_set_tooltip_text(config_plugin_audio_cache_size,
                                 _
@@@@ -6634,9 +6639,9 @@@@ GtkWidget *create_window(gint windowid)
     gtk_menu_append(menu_file_tv, GTK_WIDGET(menuitem_file_open_dtv));
 #ifdef HAVE_GPOD
     menuitem_file_open_ipod =
-        GTK_MENU_ITEM(gtk_image_menu_item_new_with_mnemonic(_("Open _iPod™")));
+        GTK_MENU_ITEM(gtk_image_menu_item_new_with_mnemonic(_("Open _iPod")));
     gtk_image_menu_item_set_image(GTK_IMAGE_MENU_ITEM(menuitem_file_open_ipod),
-                                  gtk_image_new_from_icon_name("ipod", GTK_ICON_SIZE_MENU));
+                                  gtk_image_new_from_icon_name("multimedia-player", GTK_ICON_SIZE_MENU));
 
     gtk_menu_append(menu_file, GTK_WIDGET(menuitem_file_open_ipod));
 #endif
@@@@ -7658,6 +7663,10 @@@@ void show_fs_controls()
 
     if (fs_controls == NULL && fullscreen) {
         fs_controls = gtk_window_new(GTK_WINDOW_POPUP);
+		gtk_widget_add_events(fs_controls, GDK_ENTER_NOTIFY_MASK);
+		gtk_widget_add_events(fs_controls, GDK_LEAVE_NOTIFY_MASK);
+		g_signal_connect(G_OBJECT(fs_controls), "enter_notify_event", G_CALLBACK(fs_controls_entered), NULL);
+		g_signal_connect(G_OBJECT(fs_controls), "leave_notify_event", G_CALLBACK(fs_controls_left), NULL);
         g_object_ref(hbox);
         gtk_container_remove(GTK_CONTAINER(controls_box), hbox);
         gtk_container_add(GTK_CONTAINER(fs_controls), hbox);
@


1.13
log
@Fix build/run with new libnotify.

tested in a bulk by landry, thanks!
ok landry@@ jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.12 2011/01/18 11:03:20 dcoppa Exp $
@


1.12
log
@From upstream svn:

adjust audio and video cache size minimum and incremental values
plug a memory leak
bump QuickTime emulation to 7.6.9 (fix apple.com movie trailers)
@
text
@d1 5
a5 1
$OpenBSD: patch-src_gui_c,v 1.11 2010/12/31 12:03:55 dcoppa Exp $
d18 15
a32 1
+++ src/gui.c	Tue Jan 18 10:29:24 2011
@


1.11
log
@Sync patch comments with reality
No functional changes, no bump.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.10 2010/11/15 11:11:34 dcoppa Exp $
d7 5
a11 2
fix from upstream: don't hide controls and mouse in fullscreen mode
when mouse is over controls
d13 2
a14 2
--- src/gui.c.orig	Mon Nov 15 08:35:34 2010
+++ src/gui.c	Mon Nov 15 08:35:10 2010
d54 24
a77 1
@@@@ -5053,9 +5067,6 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d87 1
a87 1
@@@@ -5066,16 +5077,10 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d105 1
a105 1
@@@@ -5145,39 +5150,36 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d155 1
a155 1
@@@@ -5264,8 +5266,8 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d166 12
a177 1
@@@@ -6634,9 +6636,9 @@@@ GtkWidget *create_window(gint windowid)
d189 1
a189 1
@@@@ -7658,6 +7660,10 @@@@ void show_fs_controls()
@


1.10
log
@Backport a fix from upstream: don't hide controls and mouse in
fullscreen mode when mouse is over controls.

While here, make our defaults really work as it was intended.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.9 2010/11/08 15:04:15 dcoppa Exp $
d5 1
@


1.9
log
@Update to gnome-mplayer 1.0.0 and drop GConf dependency.

Suggestions about volume defaults by landry@@

OK landry@@
"go ahead" jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.8 2010/07/08 06:29:12 dcoppa Exp $
d6 45
a50 3
--- src/gui.c.orig	Mon Nov  8 11:15:15 2010
+++ src/gui.c	Mon Nov  8 11:24:41 2010
@@@@ -5053,9 +5053,6 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d60 1
a60 1
@@@@ -5066,16 +5063,10 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d78 1
a78 1
@@@@ -5145,39 +5136,36 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d128 1
a128 1
@@@@ -5264,8 +5252,8 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d139 1
a139 1
@@@@ -6634,9 +6622,9 @@@@ GtkWidget *create_window(gint windowid)
d151 11
@


1.8
log
@Apply some small bugfixes from upstream: see patches for descriptions.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.7 2010/05/10 08:30:55 dcoppa Exp $
d3 1
a3 6
fixes from upstream svn:
add missing icons to the file menu
activate Open on enter in Open->Location (fix upstream bug #381)
NULL check on retrieve_metadata_pool clear process

revised audio/video device selection gui
d6 3
a8 37
--- src/gui.c.orig	Thu Feb 25 17:01:41 2010
+++ src/gui.c	Wed May  5 08:58:26 2010
@@@@ -1555,11 +1555,13 @@@@ gboolean delete_callback(GtkWidget * widget, GdkEvent 
 
     if (control_id == 0) {
         g_thread_pool_stop_unused_threads();
-        while (gtk_events_pending() || thread != NULL
-               || g_thread_pool_unprocessed(retrieve_metadata_pool)) {
-            gtk_main_iteration();
+        if (retrieve_metadata_pool != NULL) {
+            while (gtk_events_pending() || thread != NULL
+                   || g_thread_pool_unprocessed(retrieve_metadata_pool)) {
+                gtk_main_iteration();
+            }
+            g_thread_pool_free(retrieve_metadata_pool, TRUE, TRUE);
         }
-        g_thread_pool_free(retrieve_metadata_pool, TRUE, TRUE);
     } else {
         while (gtk_events_pending() || thread != NULL) {
             gtk_main_iteration();
@@@@ -2766,6 +2768,7 @@@@ void menuitem_open_location_callback(GtkMenuItem * men
     label = gtk_label_new(_("Location:"));
     open_location = gtk_entry_new();
     gtk_entry_set_width_chars(GTK_ENTRY(open_location), 50);
+    gtk_entry_set_activates_default(GTK_ENTRY(open_location),TRUE);
     item_box = gtk_hbox_new(FALSE, 6);
     gtk_box_pack_start(GTK_BOX(item_box), label, FALSE, FALSE, 12);
     gtk_box_pack_end(GTK_BOX(item_box), open_location, TRUE, TRUE, 0);
@@@@ -4796,15 +4799,13 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
     tooltip = gtk_tooltips_new();
     gtk_tooltips_set_tip(tooltip, config_vo,
                          _
-                         ("mplayer video output device\nx11 should always work, try xv or gl for better performance"),
+                         ("mplayer video output device\nx11 should always work\nTry xv or gl for better performance"),
                          NULL);
     if (config_vo != NULL) {
         gtk_combo_box_append_text(GTK_COMBO_BOX(config_vo), "gl");
d13 1
d15 1
d18 1
a18 2
                 gtk_combo_box_set_active(GTK_COMBO_BOX(config_vo), 0);
@@@@ -4814,14 +4815,10 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d24 2
d27 1
a27 1
-                gtk_combo_box_set_active(GTK_COMBO_BOX(config_vo), 5);
d31 1
a31 1
-                gtk_combo_box_set_active(GTK_COMBO_BOX(config_vo), 6);
d36 8
a43 1
@@@@ -4891,32 +4888,29 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d50 1
d86 1
a86 1
@@@@ -4995,8 +4989,8 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d97 1
a97 22
@@@@ -6222,12 +6216,19 @@@@ GtkWidget *create_window(gint windowid)
     gtk_menu_append(menu_file, GTK_WIDGET(menuitem_file_open));
     menuitem_file_open_folder =
         GTK_MENU_ITEM(gtk_image_menu_item_new_with_mnemonic(_("Open _Folder")));
+	gtk_image_menu_item_set_image(GTK_IMAGE_MENU_ITEM(menuitem_file_open_folder), 
+	gtk_image_new_from_icon_name("folder",GTK_ICON_SIZE_MENU));
     gtk_menu_append(menu_file, GTK_WIDGET(menuitem_file_open_folder));
     menuitem_file_open_location =
         GTK_MENU_ITEM(gtk_image_menu_item_new_with_mnemonic(_("Open _Location")));
+	gtk_image_menu_item_set_image(GTK_IMAGE_MENU_ITEM(menuitem_file_open_location), 
+	gtk_image_new_from_icon_name("network-server",GTK_ICON_SIZE_MENU));
     gtk_menu_append(menu_file, GTK_WIDGET(menuitem_file_open_location));
 
-    menuitem_file_disc = GTK_MENU_ITEM(gtk_menu_item_new_with_mnemonic(_("_Disc")));
+    menuitem_file_disc = 
+	GTK_MENU_ITEM(gtk_image_menu_item_new_with_mnemonic(_("_Disc")));
+	gtk_image_menu_item_set_image(GTK_IMAGE_MENU_ITEM(menuitem_file_disc), 
+	gtk_image_new_from_icon_name("media-optical",GTK_ICON_SIZE_MENU));
     menu_file_disc = GTK_MENU(gtk_menu_new());
     gtk_widget_show(GTK_WIDGET(menuitem_file_disc));
     gtk_menu_shell_append(GTK_MENU_SHELL(menu_file), GTK_WIDGET(menuitem_file_disc));
@@@@ -6276,7 +6277,9 @@@@ GtkWidget *create_window(gint windowid)
d103 4
a106 2
+       gtk_image_menu_item_set_image(GTK_IMAGE_MENU_ITEM(menuitem_file_open_ipod),
+       gtk_image_new_from_icon_name("multimedia-player",GTK_ICON_SIZE_MENU));
a108 1
 #ifdef GTK2_12_ENABLED
@


1.7
log
@Bring two useful bugfixes in (from upstream).
While here, adjust WANTLIB.

OK landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.6 2010/03/29 12:16:07 dcoppa Exp $
d3 1
a3 1
fix from upstream svn:
d6 1
d13 19
a31 1
@@@@ -2766,6 +2766,7 @@@@ void menuitem_open_location_callback(GtkMenuItem * men
d39 1
a39 1
@@@@ -4796,15 +4797,13 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d56 1
a56 1
@@@@ -4814,14 +4813,10 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d72 1
a72 1
@@@@ -4891,32 +4886,29 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d114 1
a114 1
@@@@ -4995,8 +4987,8 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d125 1
a125 1
@@@@ -6222,12 +6214,19 @@@@ GtkWidget *create_window(gint windowid)
d146 1
a146 1
@@@@ -6276,7 +6275,9 @@@@ GtkWidget *create_window(gint windowid)
@


1.6
log
@update to 0.9.9.2

OK landry@@, ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 1
d11 10
a20 2
+++ src/gui.c	Mon Mar 29 12:04:50 2010
@@@@ -4796,15 +4796,13 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d37 1
a37 1
@@@@ -4814,14 +4812,10 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d53 1
a53 1
@@@@ -4891,32 +4885,29 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d95 1
a95 1
@@@@ -4995,8 +4986,8 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d106 1
a106 1
@@@@ -6222,12 +6213,19 @@@@ GtkWidget *create_window(gint windowid)
d127 1
a127 1
@@@@ -6276,7 +6274,9 @@@@ GtkWidget *create_window(gint windowid)
@


1.5
log
@Several fixes for gnome-mplayer volume control from maintainer David
Coppa.

OK sthen@@, landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.4 2009/10/31 12:26:25 edd Exp $
d3 2
a4 4
fixes from upstream svn:
add disable_animation config option
fix hidden cursor over menus
update volume control
d6 2
a7 1
add sun, sndio and rtunes to available audio backends
d9 33
a41 37
--- src/gui.c.orig	Thu Sep 17 10:05:35 2009
+++ src/gui.c	Fri Nov  6 05:04:23 2009
@@@@ -94,7 +94,9 @@@@ static void drawing_area_realized(GtkWidget * widget, 
      * onwards, requesting the native window in a thread causes a BadWindowID,
      * so we need to request it now. We could call gdk_window_ensure_native(),
      * but that would mean we require GTK+ 2.18, so instead we call this */
+#ifdef GTK2_14_ENABLED
     GDK_WINDOW_XID(gtk_widget_get_window(GTK_WIDGET(widget)));
+#endif
 }
 
 gint get_player_window()
@@@@ -108,6 +110,23 @@@@ gint get_player_window()
     }
 }
 
+gboolean update_volume(gpointer data)
+{
+	if (use_pulse_flat_volume && !softvol) {
+		if (state != QUIT) {
+			if (idledata->mplayer_volume + 1 != idledata->volume) {
+#ifdef GTK2_12_ENABLED
+				gtk_scale_button_set_value(GTK_SCALE_BUTTON(vol_slider), idledata->mplayer_volume);
+#else
+				gtk_range_set_value(GTK_RANGE(vol_slider), idledata->mplayer_volume);
+#endif
+			}
+		}
+	}
+
+	return FALSE;
+}
+
 gboolean set_adjust_layout(gpointer data)
 {
     adjusting = FALSE;
@@@@ -435,7 +454,7 @@@@ gboolean set_progress_value(void *data)
a42 101
         if (idle->cachepercent < 1.0 && state == PAUSED) {
             text =
-                g_strdup_printf(_("Paused | %2i%% \342\226\274"),
+                g_strdup_printf(_("Paused | %2i%%"),
                                 (gint) (idle->cachepercent * 100));
             gmtk_media_tracker_set_text(tracker, text);
             g_free(text);
@@@@ -561,7 +580,7 @@@@ gboolean set_progress_time(void *data)
 
     if (idle->cachepercent > 0 && idle->cachepercent < 1.0 && !(playlist) && !forcecache
         && !idle->streaming) {
-        g_snprintf(idle->progress_text, 128, "%s | %2i%% \342\226\274", text,
+        g_snprintf(idle->progress_text, 128, "%s | %2i%%", text,
                    (int) (idle->cachepercent * 100));
     } else {
         g_snprintf(idle->progress_text, 128, "%s", text);
@@@@ -595,17 +614,9 @@@@ gboolean set_volume_from_slider(gpointer data)
     vol = (gint) gtk_range_get_value(GTK_RANGE(vol_slider));
 #endif
     if (!idledata->mute) {
-        if (use_pulse_flat_volume && !softvol) {
-            set_alsa_volume(TRUE, vol);
-        } else {
-            cmd = g_strdup_printf("volume %i 1\n", vol);
-            send_command(cmd, FALSE);
-            g_free(cmd);
-        }
-        send_command("get_property volume\n", FALSE);
-        if (state == PAUSED || state == STOPPED) {
-            send_command("pause\n", FALSE);
-        }
+	cmd = g_strdup_printf("volume %i 1\n", vol);
+	send_command(cmd, FALSE);
+	g_free(cmd);
     }
 
     return FALSE;
@@@@ -1416,6 +1427,8 @@@@ gboolean delete_callback(GtkWidget * widget, GdkEvent 
     ok_to_play = FALSE;
     dontplaynext = TRUE;
 
+    g_idle_remove_by_data(idledata);
+
     if (remember_loc && !fullscreen && embed_window == 0) {
         gm_store = gm_pref_store_new("gnome-mplayer");
         gtk_window_get_position(GTK_WINDOW(window), &loc_window_x, &loc_window_y);
@@@@ -2308,13 +2321,9 @@@@ void vol_slider_callback(GtkRange * range, gpointer us
         g_free(cmd);
         idledata->mute = TRUE;
     } else {
-        if (use_pulse_flat_volume && !softvol) {
-            set_alsa_volume(TRUE, vol);
-        } else {
-            cmd = g_strdup_printf("volume %i 1\n", vol);
-            send_command(cmd, TRUE);
-            g_free(cmd);
-        }
+        cmd = g_strdup_printf("volume %i 1\n", vol);
+        send_command(cmd, TRUE);
+        g_free(cmd);
     }
     if (idledata->volume != vol) {
 
@@@@ -2323,24 +2332,18 @@@@ void vol_slider_callback(GtkRange * range, gpointer us
         g_idle_add(set_volume_tip, idledata);
         g_free(buf);
     }
-    send_command("get_property volume\n", TRUE);
 
     dbus_send_rpsignal_with_double("RP_Volume", gtk_range_get_value(GTK_RANGE(vol_slider)));
 
 }
 
 #ifdef GTK2_12_ENABLED
-void vol_button_callback(GtkVolumeButton * volume, gpointer user_data)
+void vol_button_value_changed_callback(GtkScaleButton * volume, gdouble value, gpointer data)
 {
-    gint vol;
+    gint vol = value;
     gchar *cmd;
     gchar *buf;
 
-    if (rpcontrols != NULL && g_strcasecmp(rpcontrols, "volumeslider") == 0) {
-        vol = (gint) gtk_range_get_value(GTK_RANGE(vol_slider));
-    } else {
-        vol = (gint) gtk_scale_button_get_value(GTK_SCALE_BUTTON(volume));
-    }
     if (idledata->mute && vol > 0) {
         cmd = g_strdup_printf("mute 0\n");
         send_command(cmd, TRUE);
@@@@ -2356,6 +2359,7 @@@@ void vol_button_callback(GtkVolumeButton * volume, gpo
         cmd = g_strdup_printf("volume %i 1\n", vol);
         send_command(cmd, TRUE);
         g_free(cmd);
+	idledata->volume = vol;
     }
     if (idledata->volume != vol) {
 
@@@@ -2364,11 +2368,8 @@@@ void vol_button_callback(GtkVolumeButton * volume, gpo
         g_idle_add(set_volume_tip, idledata);
         g_free(buf);
d44 1
a44 71
-    send_command("get_property volume\n", TRUE);
 
-    dbus_send_rpsignal_with_double("RP_Volume",
-                                   gtk_scale_button_get_value(GTK_SCALE_BUTTON(vol_slider)));
-
+    dbus_send_rpsignal_with_double("RP_Volume", vol);
 }
 #endif
 
@@@@ -2427,23 +2428,26 @@@@ gboolean make_panel_and_mouse_invisible(gpointer data)
 
     g_get_current_time(&currenttime);
     g_time_val_add(&currenttime, -auto_hide_timeout * G_USEC_PER_SEC);
-    if (last_movement_time > 0 && currenttime.tv_sec > last_movement_time) {
-        cursor_source = gdk_pixmap_new(NULL, 1, 1, 1);
-        cursor =
-            gdk_cursor_new_from_pixmap(cursor_source, cursor_source, &cursor_color,
-                                       &cursor_color, 0, 0);
-        gdk_pixmap_unref(cursor_source);
-        gdk_window_set_cursor(window->window, cursor);
-        gdk_cursor_unref(cursor);
-
-        if (use_pulse_flat_volume && !softvol) {
-            if (idledata->mplayer_volume != idledata->volume) {
-                idledata->volume = idledata->mplayer_volume;
-                set_volume(idledata);
-            }
-        }
-    }
-
+	if (GTK_WIDGET_VISIBLE(menu_file)
+		|| GTK_WIDGET_VISIBLE(menu_edit)
+		|| GTK_WIDGET_VISIBLE(menu_view)
+		|| GTK_WIDGET_VISIBLE(menu_help)) {
+			
+		gdk_window_set_cursor(window->window, NULL);
+			
+	} else {
+		
+		if (last_movement_time > 0 && currenttime.tv_sec > last_movement_time) {
+		    cursor_source = gdk_pixmap_new(NULL, 1, 1, 1);
+		    cursor =
+		        gdk_cursor_new_from_pixmap(cursor_source, cursor_source, &cursor_color,
+		                                   &cursor_color, 0, 0);
+		    gdk_pixmap_unref(cursor_source);
+		    gdk_window_set_cursor(window->window, cursor);
+		    gdk_cursor_unref(cursor);
+		}
+	} 
+	
     return FALSE;
 }
 
@@@@ -3671,6 +3675,8 @@@@ void config_apply(GtkWidget * widget, void *data)
         !(gboolean) gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(config_embeddedfonts));
     disable_pause_on_click =
         !(gboolean) gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(config_pause_on_click));
+    disable_animation =
+	(gboolean) gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(config_disable_animation));
     oldosd = osdlevel;
     osdlevel = (gint) gtk_range_get_value(GTK_RANGE(config_osdlevel));
     pplevel = (gint) gtk_range_get_value(GTK_RANGE(config_pplevel));
@@@@ -3774,6 +3780,7 @@@@ void config_apply(GtkWidget * widget, void *data)
     gm_pref_store_set_boolean(gm_store, DISABLEDEINTERLACE, disable_deinterlace);
     gm_pref_store_set_boolean(gm_store, DISABLEFRAMEDROP, disable_framedrop);
     gm_pref_store_set_boolean(gm_store, DISABLEPAUSEONCLICK, disable_pause_on_click);
+    gm_pref_store_set_boolean(gm_store, DISABLEANIMATION, disable_animation);
     gm_pref_store_set_boolean(gm_store, SHOWPLAYLIST, playlist_visible);
     gm_pref_store_set_boolean(gm_store, SHOWDETAILS, details_visible);
     gm_pref_store_set_boolean(gm_store, USE_MEDIAKEYS, use_mediakeys);
@@@@ -4697,32 +4704,41 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d49 1
a49 1
+                         ("mplayer audio output device\nOn Linux, alsa or oss should always work\nTry esd in gnome, arts in kde, or pulse on newer Linux distributions\nOn OpenBSD, use sndio"),
d52 2
a53 1
         gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "alsa");
a54 2
+        gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "sun");
         gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "arts");
d56 1
d58 2
a59 2
         gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "oss");
         gtk_combo_box_append_text(GTK_COMBO_BOX(config_ao), "pulse");
d62 2
a63 1
             if (strcmp(ao, "alsa") == 0)
d66 4
a69 4
+            if (strcmp(ao, "sndio") == 0)
                 gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 1);
-            if (strcmp(ao, "esd") == 0)
+            if (strcmp(ao, "sun") == 0)
d71 1
a71 2
-            if (strcmp(ao, "jack") == 0)
+            if (strcmp(ao, "arts") == 0)
d74 1
a74 1
+            if (strcmp(ao, "esd") == 0)
d77 1
a77 8
+            if (strcmp(ao, "jack") == 0)
                 gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 5);
+            if (strcmp(ao, "oss") == 0)
+                gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 6);
+            if (strcmp(ao, "pulse") == 0)
+                gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 7);
+            if (strcmp(ao, "rtunes") == 0)
+                gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 8);
d82 1
a82 1
+                gtk_combo_box_set_active(GTK_COMBO_BOX(config_ao), 9);
d86 10
a95 2
@@@@ -5311,6 +5327,12 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
                      GTK_SHRINK, 0, 0);
d97 30
a126 43
 
+    config_disable_animation = gtk_check_button_new_with_label(_("Disable Fullscreen Control Bar Animation"));
+    gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(config_disable_animation), disable_animation);
+    gtk_table_attach(GTK_TABLE(conf_table), config_disable_animation, 0, 2, i, i + 1, GTK_FILL,
+                     GTK_SHRINK, 0, 0);
+    i++;
+
     config_verbose = gtk_check_button_new_with_label(_("Verbose Debug Enabled"));
     tooltip = gtk_tooltips_new();
     gtk_tooltips_set_tip(tooltip, config_verbose,
@@@@ -6235,7 +6257,6 @@@@ GtkWidget *create_window(gint windowid)
     drawing_area = gtk_socket_new();
     g_signal_connect(drawing_area, "realize", G_CALLBACK(drawing_area_realized), NULL);
 
-
     cover_art = gtk_image_new();
     media_label = gtk_label_new("");
     gtk_widget_set_size_request(media_label, 300, -1);
@@@@ -6291,7 +6312,6 @@@@ GtkWidget *create_window(gint windowid)
 
 
     // ok if the theme has all the icons we need, use them, otherwise use the default GNOME ones
-
     if (gtk_icon_theme_has_icon(icon_theme, "media-playback-start")
         && gtk_icon_theme_has_icon(icon_theme, "media-playback-pause")
         && gtk_icon_theme_has_icon(icon_theme, "media-playback-stop")
@@@@ -6534,8 +6554,8 @@@@ GtkWidget *create_window(gint windowid)
         else
             gtk_object_set(GTK_OBJECT(vol_slider), "size", GTK_ICON_SIZE_MENU, NULL);
 
-        g_signal_connect(G_OBJECT(vol_slider), "value_changed", G_CALLBACK(vol_button_callback),
-                         NULL);
+        g_signal_connect(G_OBJECT(vol_slider), "value_changed", G_CALLBACK(vol_button_value_changed_callback),
+                         idledata);
         gtk_button_set_relief(GTK_BUTTON(vol_slider), GTK_RELIEF_NONE);
 #else
         vol_slider = gtk_hscale_new_with_range(0.0, 100.0, 1.0);
@@@@ -6543,7 +6563,7 @@@@ GtkWidget *create_window(gint windowid)
         gtk_scale_set_draw_value(GTK_SCALE(vol_slider), FALSE);
         gtk_range_set_value(GTK_RANGE(vol_slider), idledata->volume);
         g_signal_connect(G_OBJECT(vol_slider), "value_changed", G_CALLBACK(vol_slider_callback),
-                         NULL);
+                         idledata);
d128 1
a128 2
     }
     volume_tip = gtk_tooltips_new();
@


1.4
log
@update to gnome-mplayer-0.9.8

From MAINTAINER David Coppa with some reccommendations from landry@@ and
myself, namely:

 - comments in patches.
 - remove fullscreen bar animation by default.
 - fix an issue regarding the volume defaulting to zero.
 - message regarding gconfd-2

OK landry@@

Thanks
@
text
@d1 1
a1 1
$OpenBSD$
d6 1
d10 2
a11 2
--- src/gui.c.orig	Thu Sep 17 18:05:35 2009
+++ src/gui.c	Sun Oct 18 17:51:31 2009
d22 25
a46 1
@@@@ -435,7 +437,7 @@@@ gboolean set_progress_value(void *data)
d55 1
a55 1
@@@@ -561,7 +563,7 @@@@ gboolean set_progress_time(void *data)
d64 96
a159 1
@@@@ -2427,23 +2429,33 @@@@ gboolean make_panel_and_mouse_invisible(gpointer data)
d171 9
a196 15
 
-        if (use_pulse_flat_volume && !softvol) {
-            if (idledata->mplayer_volume != idledata->volume) {
-                idledata->volume = idledata->mplayer_volume;
-                set_volume(idledata);
-            }
-        }
-    }
-
+		    if (use_pulse_flat_volume && !softvol) {
+		        if (idledata->mplayer_volume != idledata->volume) {
+		            idledata->volume = idledata->mplayer_volume;
+		            set_volume(idledata);
+		        }
+		    }
d203 1
a203 1
@@@@ -3671,6 +3683,8 @@@@ void config_apply(GtkWidget * widget, void *data)
d212 1
a212 1
@@@@ -3774,6 +3788,7 @@@@ void config_apply(GtkWidget * widget, void *data)
d220 1
a220 1
@@@@ -4697,32 +4712,41 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d269 7
a275 4
@@@@ -5308,6 +5332,12 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
     config_pause_on_click = gtk_check_button_new_with_label(_("Pause playback on mouse click"));
     gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(config_pause_on_click), !disable_pause_on_click);
     gtk_table_attach(GTK_TABLE(conf_table), config_pause_on_click, 0, 2, i, i + 1, GTK_FILL,
d279 22
a300 5
+    config_disable_animation = gtk_check_button_new_with_label(_("Disable Fullscreen Control Bar Animation"));
+    gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(config_disable_animation), disable_animation);
+    gtk_table_attach(GTK_TABLE(conf_table), config_disable_animation, 0, 2, i, i + 1, GTK_FILL,
                      GTK_SHRINK, 0, 0);
     i++;
d302 16
@


1.3
log
@- Change bitrate divisor from 1024 to 1000
Fix cache display problem when used as browser plugin

- Fix problem with default auto_hide value

adapted from upstream svn by David Coppa (maintainer)
@
text
@d1 106
a106 31
$OpenBSD: patch-src_gui_c,v 1.2 2009/03/16 11:27:21 ajacoutot Exp $
--- src/gui.c.orig	Sun Mar  8 01:29:15 2009
+++ src/gui.c	Mon Apr 13 17:41:59 2009
@@@@ -3550,7 +3550,7 @@@@ void menuitem_details_callback(GtkMenuItem * menuitem,
             gtk_misc_set_alignment(GTK_MISC(label), 0.0, 0.0);
             gtk_misc_set_padding(GTK_MISC(label), 12, 0);
             gtk_table_attach_defaults(GTK_TABLE(details_table), label, 0, 1, i, i + 1);
-            buf = g_strdup_printf("%i Kb/s", (gint) (g_strtod(idle->video_bitrate, NULL) / 1024));
+            buf = g_strdup_printf("%i Kb/s", (gint) (g_strtod(idle->video_bitrate, NULL) / 1000));
             label = gtk_label_new(buf);
             g_free(buf);
             gtk_misc_set_alignment(GTK_MISC(label), 0.0, 0.0);
@@@@ -3621,7 +3621,7 @@@@ void menuitem_details_callback(GtkMenuItem * menuitem,
             gtk_table_attach_defaults(GTK_TABLE(details_table), label, 0, 1, i, i + 1);
             if (idle != NULL) {
                 buf =
-                    g_strdup_printf("%i Kb/s", (gint) (g_strtod(idle->audio_bitrate, NULL) / 1024));
+                    g_strdup_printf("%i Kb/s", (gint) (g_strtod(idle->audio_bitrate, NULL) / 1000));
                 label = gtk_label_new(buf);
                 g_free(buf);
                 gtk_misc_set_alignment(GTK_MISC(label), 0.0, 0.0);
@@@@ -3636,7 +3636,7 @@@@ void menuitem_details_callback(GtkMenuItem * menuitem,
             if (idle != NULL) {
                 buf =
                     g_strdup_printf("%i Kb/s",
-                                    (gint) (g_strtod(idle->audio_samplerate, NULL) / 1024));
+                                    (gint) (g_strtod(idle->audio_samplerate, NULL) / 1000));
                 label = gtk_label_new(buf);
                 g_free(buf);
                 gtk_misc_set_alignment(GTK_MISC(label), 0.0, 0.0);
@@@@ -4104,32 +4104,41 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
d155 13
@


1.2
log
@- update to gnome-mplayer-0.9.5
(missed it in previous import)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_gui_c,v 1.1.1.1 2009/03/16 09:53:18 ajacoutot Exp $
d3 28
a30 1
+++ src/gui.c	Mon Mar 16 12:01:26 2009
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD$
--- src/gui.c.orig	Sat Jan 31 01:18:04 2009
+++ src/gui.c	Fri Feb  6 11:26:59 2009
@@@@ -3947,32 +3947,41 @@@@ void menuitem_config_callback(GtkMenuItem * menuitem, 
@


1.1.1.1
log
@Import gnome-mplayer-0.9.4

GNOME MPlayer is a simple GUI for MPlayer.
It has a rich API that is exposed via DBus.  It is not highly dependent
on the GNOME libraries, but its look and feel is based on the GNOME HIG.

The player can be used to play media on websites when used 
with Gecko Mediaplayer.


Note that despites its name, it is not a GNOME application but rather a
simple gtk one, this is why it is not under x11/gnome. It is completely
usable on !GNOME.

from David Coppa (MAINTAINER) with some tweaks.
@
text
@@
