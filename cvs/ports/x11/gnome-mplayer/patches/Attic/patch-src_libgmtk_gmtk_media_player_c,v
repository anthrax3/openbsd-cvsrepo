head	1.6;
access;
symbols
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2012.01.09.12.10.22;	author dcoppa;	state dead;
branches;
next	1.5;

1.5
date	2011.10.17.13.50.34;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.29.11.03.19;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.21.13.10.36;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2011.09.21.12.20.07;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.12.08.12.29;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to gnome-mplayer-1.0.5
@
text
@$OpenBSD: patch-src_libgmtk_gmtk_media_player_c,v 1.5 2011/10/17 13:50:34 dcoppa Exp $

Raise event on incomplete QuickTime file, and mark it for retry
(fix apple.com/trailers) - upstream svn revision r2152

Bugfix: ATTRIBUTE_FORCE_CACHE not being processed
(upstream svn revision r44 of gmtk)

Wait for the socket_id to be valid, but in plugin mode it may
not so timeout (upstream svn revision r41 of gmtk)

Fix issue with not being able to play media off an SFTP share
(upstream svn revision r45 of gmtk)

When mplayer reports that it has video, resize the media
window so that mplayer has something to draw to
(upstream svn revision r46 of gmtk)

Fix speed multipliers and speed reset (upstream svn revisions r54
and r55 of gmtk)

Fix potential segfaults in gmtk_media_player when defining a specific
font (upstream svn revisions r53 and r56 of gmtk)

--- src/libgmtk/gmtk_media_player.c.orig	Tue Jun 28 18:19:18 2011
+++ src/libgmtk/gmtk_media_player.c	Mon Oct 17 14:40:06 2011
@@@@ -69,15 +69,22 @@@@ gboolean signal_event(gpointer data)
 
     if (event && event->event_name != NULL 
         && (event->player->restart == FALSE || event->event_data_int == ATTRIBUTE_AF_EXPORT_FILENAME)) {
-        if (g_strcasecmp(event->event_name, "position-changed") == 0 ||
-            g_strcasecmp(event->event_name, "cache-percent-changed") == 0) {
-            g_signal_emit_by_name(event->player, event->event_name, event->event_data_double);
-        } else if (g_strcasecmp(event->event_name, "size_allocate") == 0) {
-            g_signal_emit_by_name(event->player, event->event_name, event->event_allocation);
-        } else {
-            g_signal_emit_by_name(event->player, event->event_name, event->event_data_int);
-        }
-
+		switch (event->type) {
+		case EVENT_TYPE_INT:
+	            g_signal_emit_by_name(event->player, event->event_name, event->event_data_int);
+		    break;
+		case EVENT_TYPE_DOUBLE:
+	            g_signal_emit_by_name(event->player, event->event_name, event->event_data_double);
+		    break;
+		case EVENT_TYPE_BOOLEAN:
+	            g_signal_emit_by_name(event->player, event->event_name, event->event_data_boolean);
+		    break;
+		case EVENT_TYPE_ALLOCATION:
+    		    g_signal_emit_by_name(event->player, event->event_name, event->event_allocation);
+		    break;
+		default:
+		    printf("undefined event %s\n", event->event_name);
+		}
         g_free(event->event_name);
     }
     if (event)
@@@@ -93,6 +100,7 @@@@ void create_event_int(GmtkMediaPlayer * player, const 
 
     event = g_new0(GmtkMediaPlayerEvent, 1);
     event->player = player;
+    event->type = EVENT_TYPE_INT;
     event->event_name = g_strdup(name);
     event->event_data_int = value;
     g_idle_add(signal_event, event);
@@@@ -104,17 +112,31 @@@@ void create_event_double(GmtkMediaPlayer * player, con
 
     event = g_new0(GmtkMediaPlayerEvent, 1);
     event->player = player;
+    event->type = EVENT_TYPE_DOUBLE;
     event->event_name = g_strdup(name);
     event->event_data_double = value;
     g_idle_add(signal_event, event);
 }
 
+void create_event_boolean(GmtkMediaPlayer * player, const gchar * name, gboolean value)
+{
+    GmtkMediaPlayerEvent *event;
+
+    event = g_new0(GmtkMediaPlayerEvent, 1);
+    event->player = player;
+    event->type = EVENT_TYPE_BOOLEAN;
+    event->event_name = g_strdup(name);
+    event->event_data_boolean = value;
+    g_idle_add(signal_event, event);
+}
+
 void create_event_allocation(GmtkMediaPlayer * player, const gchar * name, GtkAllocation * allocation)
 {
     GmtkMediaPlayerEvent *event;
 
     event = g_new0(GmtkMediaPlayerEvent, 1);
     event->player = player;
+    event->type = EVENT_TYPE_ALLOCATION;
     event->event_name = g_strdup(name);
     event->event_allocation = allocation;
     g_idle_add(signal_event, event);
@@@@ -300,6 +322,7 @@@@ static void gmtk_media_player_init(GmtkMediaPlayer * p
     player->channel_in = NULL;
     player->channel_out = NULL;
     player->channel_err = NULL;
+    player->retry_on_full_cache = FALSE;
 }
 
 static void gmtk_media_player_dispose(GObject * object)
@@@@ -908,6 +931,10 @@@@ void gmtk_media_player_set_attribute_boolean(GmtkMedia
         player->hardware_ac3 = value;
         break;
 
+    case ATTRIBUTE_FORCE_CACHE:
+        player->force_cache = value;
+        break;
+
     default:
         if (player->debug)
             printf("Unsupported Attribute\n");
@@@@ -993,6 +1020,14 @@@@ gboolean gmtk_media_player_get_attribute_boolean(GmtkM
         ret = player->hardware_ac3;
         break;
 
+    case ATTRIBUTE_RETRY_ON_FULL_CACHE:
+	ret = player->retry_on_full_cache;
+	break;
+
+    case ATTRIBUTE_FORCE_CACHE:
+	ret = player->force_cache;
+	break;
+
     default:
         if (player->debug)
             printf("Unsupported Attribute\n");
@@@@ -1029,12 +1064,25 @@@@ void gmtk_media_player_set_attribute_double(GmtkMediaP
     case ATTRIBUTE_SPEED_MULTIPLIER:
         player->speed_multiplier = CLAMP(value, 0.1, 10.0);
         if (player->player_state == PLAYER_STATE_RUNNING) {
-            cmd = g_strdup_printf("speed_mult %f\n", player->speed_multiplier);
+            if (player->speed_multiplier == 1.0) {
+                cmd = g_strdup_printf("speed_set %f\n", player->speed_multiplier);
+            } else {
+                cmd = g_strdup_printf("speed_mult %f\n", player->speed_multiplier);
+            }
             write_to_mplayer(player, cmd);
             g_free(cmd);
         }
         break;
 
+    case ATTRIBUTE_SPEED_SET:
+        player->speed_multiplier = CLAMP(value, 0.1, 10.0);
+        if (player->player_state == PLAYER_STATE_RUNNING) {
+            cmd = g_strdup_printf("speed_set %f\n", player->speed_multiplier);
+            write_to_mplayer(player, cmd);
+            g_free(cmd);
+        }
+        break;
+
     case ATTRIBUTE_SUBTITLE_SCALE:
         player->subtitle_scale = CLAMP(value, 0.2, 100.0);
         if (player->player_state == PLAYER_STATE_RUNNING) {
@@@@ -1779,6 +1827,9 @@@@ gpointer launch_mplayer(gpointer data)
     GList *list;
     GmtkMediaPlayerSubtitle *subtitle;
     GmtkMediaPlayerAudioTrack *track;
+#ifdef GIO_ENABLED
+    GFile *file;
+#endif
 
     player->seekable = FALSE;
     player->has_chapters = FALSE;
@@@@ -1788,6 +1839,7 @@@@ gpointer launch_mplayer(gpointer data)
     player->title_is_menu = FALSE;
     player->enable_divx = TRUE;
     player->disable_xvmc = FALSE;
+    player->retry_on_full_cache = FALSE;
 
     g_mutex_lock(player->thread_running);
 
@@@@ -1818,7 +1870,17 @@@@ gpointer launch_mplayer(gpointer data)
         argn = 0;
         player->playback_error = NO_ERROR;
         if (player->uri != NULL) {
+#ifdef GIO_ENABLED
+            file = g_file_new_for_uri(player->uri);
+            if (file != NULL) {
+		filename = g_file_get_path(file);
+		g_object_unref(file);
+            }
+#else
             filename = g_filename_from_uri(player->uri, NULL, NULL);
+#endif
+            if (filename != NULL)
+		player->type = TYPE_FILE;
         }
 
         player->minimum_mplayer = detect_mplayer_features(player);
@@@@ -1976,8 +2038,11 @@@@ gpointer launch_mplayer(gpointer data)
         argv[argn++] = g_strdup_printf("-sub-fuzziness");
         argv[argn++] = g_strdup_printf("%i", player->subtitle_fuzziness);
 
-        while (player->socket_id == 0)
+        // wait for the socket_id to be valid, but in plugin mode it may not so timeout
+        i = 0;
+        while (player->socket_id == 0 && (i++ < 10))
             g_usleep(100);
+
         argv[argn++] = g_strdup_printf("-wid");
         argv[argn++] = g_strdup_printf("0x%x", player->socket_id);
 
@@@@ -2027,7 +2092,8 @@@@ gpointer launch_mplayer(gpointer data)
                 if (player->subtitle_font != NULL && strlen(player->subtitle_font) > 0) {
                     fontname = g_strdup(player->subtitle_font);
                     size = g_strrstr(fontname, " ");
-                    size[0] = '\0';
+                    if (size)
+                        size[0] = '\0';
                     size = g_strrstr(fontname, " Bold");
                     if (size)
                         size[0] = '\0';
@@@@ -2063,7 +2129,8 @@@@ gpointer launch_mplayer(gpointer data)
             if (player->subtitle_font != NULL && strlen(player->subtitle_font) > 0) {
                 fontname = g_strdup(player->subtitle_font);
                 size = g_strrstr(fontname, " ");
-                size[0] = '\0';
+                if (size)
+               	    size[0] = '\0';
                 argv[argn++] = g_strdup_printf("-subfont");
                 argv[argn++] = g_strdup_printf("%s", fontname);
                 g_free(fontname);
@@@@ -2477,6 +2544,11 @@@@ gboolean thread_reader_error(GIOChannel * source, GIOC
         error_msg = g_strdup_printf(_("Compressed SWF format not supported"));
     }
 
+    if (strstr(mplayer_output->str, "MOV: missing header (moov/cmov) chunk") != NULL) {
+        player->retry_on_full_cache = TRUE;
+        create_event_boolean(player, "attribute-changed", ATTRIBUTE_RETRY_ON_FULL_CACHE);
+    }
+
     if (strstr(mplayer_output->str, "Title: ") != 0) {
         buf = strstr(mplayer_output->str, "Title:");
         buf = strstr(mplayer_output->str, "Title: ") + strlen("Title: ");
@@@@ -2875,6 +2947,13 @@@@ gboolean thread_reader(GIOChannel * source, GIOConditi
             }
             player->video_format = g_strdup(buf);
             create_event_int(player, "attribute-changed", ATTRIBUTE_VIDEO_FORMAT);
+            if (player->video_width == 0 && player->video_height == 0) {
+		if (player->debug)
+		    printf("Setting to minimum size so that mplayer has something to draw to\n");
+		allocation.width = 32;
+		allocation.height = 16;
+		create_event_allocation(player, "size_allocate", &allocation);
+            }
         }
 
         if (strstr(mplayer_output->str, "ID_VIDEO_CODEC") != 0) {
@


1.5
log
@Even more bugfixes backported from upstream svn:

fix speed multipliers and speed reset
fix segfaults in gmtk_media_player when defining a specific font
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libgmtk_gmtk_media_player_c,v 1.4 2011/09/29 11:03:19 dcoppa Exp $
@


1.4
log
@More bugfixes backported from upstream svn:

fix issue with not being able to play media off an SFTP share

when mplayer reports that it has video, resize the media
window so that mplayer has something to draw to

fix problem with seeking in the tracker

While here, regen WANTLIB.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libgmtk_gmtk_media_player_c,v 1.3 2011/09/21 13:10:36 dcoppa Exp $
d19 6
d26 1
a26 1
+++ src/libgmtk/gmtk_media_player.c	Wed Sep 28 14:54:04 2011
d133 28
a160 1
@@@@ -1779,6 +1814,9 @@@@ gpointer launch_mplayer(gpointer data)
d170 1
a170 1
@@@@ -1788,6 +1826,7 @@@@ gpointer launch_mplayer(gpointer data)
d178 1
a178 1
@@@@ -1818,7 +1857,17 @@@@ gpointer launch_mplayer(gpointer data)
d196 1
a196 1
@@@@ -1976,8 +2025,11 @@@@ gpointer launch_mplayer(gpointer data)
d209 21
a229 1
@@@@ -2477,6 +2529,11 @@@@ gboolean thread_reader_error(GIOChannel * source, GIOC
d241 1
a241 1
@@@@ -2875,6 +2932,13 @@@@ gboolean thread_reader(GIOChannel * source, GIOConditi
@


1.3
log
@fix spacing; no binary changes
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libgmtk_gmtk_media_player_c,v 1.2 2011/09/21 12:20:07 dcoppa Exp $
d12 7
d20 1
a20 1
+++ src/libgmtk/gmtk_media_player.c	Wed Sep 21 15:00:39 2011
d127 11
a137 1
@@@@ -1788,6 +1823,7 @@@@ gpointer launch_mplayer(gpointer data)
d145 19
a163 1
@@@@ -1976,8 +2012,11 @@@@ gpointer launch_mplayer(gpointer data)
d176 3
a178 1
@@@@ -2475,6 +2514,11 @@@@ gboolean thread_reader_error(GIOChannel * source, GIOC
a179 4
     if (strstr(mplayer_output->str, "Compressed SWF format not supported") != NULL) {
         error_msg = g_strdup_printf(_("Compressed SWF format not supported"));
+    }
+
d183 17
a199 1
     }
d201 1
a201 1
     if (strstr(mplayer_output->str, "Title: ") != 0) {
@


1.2
log
@Backport some bugfixes from upstream svn:

Bugfix: ATTRIBUTE_FORCE_CACHE not being processed
(upstream svn revision r2172)

Bugfix: correctly set/initialize the media_device attribute
(upstream svn revision r2165)

Fix handling of mouse, panel and controls visibility when
going to/returning from fullscreen (upstream svn r2167 - r2169)

Bugfix: 'f' not going to/returning from fullscreen
(upstream svn revision r2161)

Set CDDB media type as TYPE_CD
(upstream svn revision r2165)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_libgmtk_gmtk_media_player_c,v 1.1 2011/07/12 08:12:29 dcoppa Exp $
d13 2
a14 2
+++ src/libgmtk/gmtk_media_player.c	Wed Sep 21 13:05:46 2011
@@@@ -69,15 +69,27 @@@@ gboolean signal_event(gpointer data)
d26 1
a26 1
 
d28 1
a28 1
+			case EVENT_TYPE_INT:
d30 2
a31 3
+				break;
+
+			case EVENT_TYPE_DOUBLE:
d33 2
a34 3
+				break;
+
+			case EVENT_TYPE_BOOLEAN:
d36 2
a37 3
+				break;
+				
+			case EVENT_TYPE_ALLOCATION:
d39 3
a41 4
+				break;
+				
+			default:
+				printf("undefined event %s\n", event->event_name);
d46 1
a46 1
@@@@ -93,6 +105,7 @@@@ void create_event_int(GmtkMediaPlayer * player, const 
d54 1
a54 1
@@@@ -104,17 +117,31 @@@@ void create_event_double(GmtkMediaPlayer * player, con
d86 1
a86 1
@@@@ -300,6 +327,7 @@@@ static void gmtk_media_player_init(GmtkMediaPlayer * p
d94 1
a94 1
@@@@ -908,6 +936,10 @@@@ void gmtk_media_player_set_attribute_boolean(GmtkMedia
d105 1
a105 1
@@@@ -993,6 +1025,14 @@@@ gboolean gmtk_media_player_get_attribute_boolean(GmtkM
d120 1
a120 1
@@@@ -1788,6 +1828,7 @@@@ gpointer launch_mplayer(gpointer data)
d128 1
a128 1
@@@@ -1976,8 +2017,11 @@@@ gpointer launch_mplayer(gpointer data)
d141 3
a143 1
@@@@ -2477,6 +2521,11 @@@@ gboolean thread_reader_error(GIOChannel * source, GIOC
d145 5
a151 5
+	if (strstr(mplayer_output->str, "MOV: missing header (moov/cmov) chunk") != NULL) {
+        player->retry_on_full_cache = TRUE;
+		create_event_boolean(player, "attribute-changed", ATTRIBUTE_RETRY_ON_FULL_CACHE);
+    }
+	
a152 2
         buf = strstr(mplayer_output->str, "Title:");
         buf = strstr(mplayer_output->str, "Title: ") + strlen("Title: ");
@


1.1
log
@Fix trailers.apple.com. It works well now (yay!)

From upstream svn
@
text
@d1 1
a1 1
$OpenBSD$
d6 6
d13 1
a13 1
+++ src/libgmtk/gmtk_media_player.c	Mon Jul 11 10:19:19 2011
d54 1
a54 1
+	event->type = EVENT_TYPE_INT;
d62 1
a62 1
+	event->type = EVENT_TYPE_DOUBLE;
d74 1
a74 1
+	event->type = EVENT_TYPE_BOOLEAN;
d86 1
a86 1
+	event->type = EVENT_TYPE_ALLOCATION;
d94 1
a94 1
+	player->retry_on_full_cache = FALSE;
d98 12
a109 1
@@@@ -993,6 +1021,10 @@@@ gboolean gmtk_media_player_get_attribute_boolean(GmtkM
d113 8
a120 4
+	case ATTRIBUTE_RETRY_ON_FULL_CACHE:
+		ret = player->retry_on_full_cache;
+		break;
+			
d124 1
a124 1
@@@@ -1788,6 +1820,7 @@@@ gpointer launch_mplayer(gpointer data)
d128 1
a128 1
+	player->retry_on_full_cache = FALSE;
d132 14
a145 1
@@@@ -2477,6 +2510,11 @@@@ gboolean thread_reader_error(GIOChannel * source, GIOC
@

