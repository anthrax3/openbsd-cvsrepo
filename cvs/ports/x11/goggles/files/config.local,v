head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.40
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.36
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.38
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.34
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.32
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.30
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.28
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.26
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.24
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.22
	OPENBSD_5_0:1.2.0.20
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.18
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.16
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.10
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.8
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.6
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.02.28.03.11.37;	author jca;	state Exp;
branches;
next	1.2;
commitid	mWeQT1uxlHE8e0fU;

1.2
date	2007.02.27.11.15.25;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.05.07.11.53.04;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Respect CC/CXX
@
text
@#----------------------------------------------------------------------------------------------------------------
# Basic File extensions
export BINEXT=""                     # Executable Extension
export LIBEXT=".a"                   # Static Library Extension
export DLLEXT=".so"                  # Dynamic Library Extension
export OBJEXT=".o"                   # Object Extension
export LIBPREFIX="lib"               # Standard Library Prefix
export LIBDIR="lib"                  # Name of the library directory

# Compiler and Linker
[ -z "$CC" ]  && export CC="cc"       # C Compiler
[ -z "$CXX" ] && export CXX="c++"     # C++ Compiler
export LINK=$CXX                      # Executable Linker
export DLLLINK="$CXX -shared"         # Dynamic Library Linker
export LIBLINK="ar cru"               # Static Library Linker
export DLLRPATH="-Wl,-rpath "         # Search Path for Dynamic Libs

# Compiler and Linker Flags
export OUTPUTOBJ="-o"                 # Compiler flag to specify output object filename
export OUTPUTBIN="-o "                   # Compiler flag to specify output executable filename
export PICFLAG=""                     # Compiler flag to generate position independent code

if [ $DEFS == "-DDEBUG" ] ; then
  export CFLAGS="${CFLAGS:--Wall -g -pipe }"
	export CXXFLAGS="${CXXFLAGS:--Wall -g -pipe}"
	export LDFLAGS=""
elif [ $DEFS == "-DNDEBUG" ] ; then
	export CFLAGS="${CFLAGS:--Wall -O3 -pipe}"
	export CXXFLAGS="${CXXFLAGS:--Wall -O3 -pipe}"
	export LDFLAGS="-s"
else
	export CFLAGS="${CFLAGS:--Wall -pipe}"
	export CXXFLAGS="${CXXFLAGS:--Wall -pipe}"
	export LDFLAGS=""
fi

export CPPFLAGS="-I./include -I${LOCALBASE}/include -I${X11BASE}/include ${CPPFLAGS}"
export LIBS=""
export DEFS="${DEFS}"
#----------------------------------------------------------------------------------------------------------------

























@


1.2
log
@synch goggles to the fox update.
took me forever to remember that goggles starts up at the previous
bookmark, which was broken on the dvd I was testing.

Also, clean up the startup script while I'm there...
@
text
@d11 2
a12 2
export CC="gcc"                       # C Compiler
export CXX="g++"                      # C++ Compiler
@


1.1
log
@new versions.

Build system of goggles entirely changed. Totally funky, but still
more fun than autoconf junk !
@
text
@a0 29

# Search and Installation Directories
#-------------------------------------------------------------------------------
MENU_FILE_DIR="${LOCALBASE}/share/applications"
MENU_ICON_DIR="${LOCALBASE}/share/icons"
MENU_LINK_DIR="${LOCALBASE}/share/applnk-mdk/Multimedia/Video"

# Device
#-------------------------------------------------------------------------------
CONFIG_DVD_DEVICE="/dev/dvd"

# Possible defaults for other platforms.
#CONFIG_DVD_DEVICE="/cdrom/cdrom0"                      # Solaris
#CONFIG_DVD_DEVICE="/dev/acd0c"                         # FreeBSD
#CONFIG_DVD_DEVICE="/dev/rcd0d"                         # NetBSD (Intel x86)
#CONFIG_DVD_DEVICE="/dev/rcd0c"                         # NetBSD
#CONFIG_DVD_DEVICE="/dev/rcd0c"                         # OpenBSD
#CONFIG_DVD_DEVICE="/dev/sr0c"                          # BSDi

# 64 bit Programming Model
#----------------------------------------------------------------------------------------------------------------
CONFIG_LP64=0
for i in ${LP64_ARCHS}
do
	test $i = $OSMACHINE && CONFIG_LP64=1
done
CONFIG_LLP64=0
CONFIG_ILP64=0

d5 1
a5 1
export DLLEXT=".so.0.0"              # Dynamic Library Extension
d8 1
d23 13
a35 2
# General Linker Flags (probably need to distinguish between Libs and Executables.
export LDFLAGS=""
d37 1
a37 3
export CFLAGS="${CFLAGS:--Wall -O2}"
export CXXFLAGS="${CXXFLAGS:--Wall -O2}"
export CPPFLAGS="-I../include -I${X11BASE}/include ${CPPFLAGS}"
d39 1
a39 1
export DEFS="-DLINUX"
d41 25
@

