head	1.19;
access;
symbols
	OPENBSD_5_8:1.18.0.6
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.2
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.12.0.2
	OPENBSD_5_3_BASE:1.12
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.19
date	2015.08.27.06.46.46;	author ajacoutot;	state dead;
branches;
next	1.18;
commitid	GN27yyASOEVOa5We;

1.18
date	2014.09.17.05.49.15;	author ajacoutot;	state Exp;
branches;
next	1.17;
commitid	wd01ekpidxm29t3U;

1.17
date	2014.01.24.10.43.16;	author ajacoutot;	state Exp;
branches
	1.17.4.1;
next	1.16;

1.16
date	2013.10.09.11.11.49;	author ajacoutot;	state Exp;
branches;
next	1.15;

1.15
date	2013.10.09.11.10.49;	author ajacoutot;	state dead;
branches;
next	1.14;

1.14
date	2013.06.13.13.08.53;	author ajacoutot;	state Exp;
branches;
next	1.13;

1.13
date	2013.05.07.07.00.01;	author ajacoutot;	state Exp;
branches;
next	1.12;

1.12
date	2013.01.08.09.30.27;	author ajacoutot;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2012.10.10.17.20.36;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2011.03.07.19.20.28;	author ajacoutot;	state dead;
branches;
next	1.9;

1.9
date	2010.12.21.14.59.49;	author ajacoutot;	state Exp;
branches;
next	1.8;

1.8
date	2010.12.21.05.57.42;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2010.12.16.07.13.58;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2010.12.13.10.41.22;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2010.06.30.20.48.57;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2010.06.29.03.36.30;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2010.06.29.02.14.57;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.10.14.30.47;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2009.04.24.15.06.05;	author kurt;	state Exp;
branches;
next	;

1.12.2.1
date	2013.06.13.14.50.27;	author ajacoutot;	state Exp;
branches;
next	;

1.17.4.1
date	2014.09.17.06.05.41;	author ajacoutot;	state Exp;
branches;
next	;
commitid	hdVt85C2kJKF843B;


desc
@@


1.19
log
@Update to dbus-1.10.0.
@
text
@$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.18 2014/09/17 05:49:15 ajacoutot Exp $

From pkgsrc:
_dbus_poll: set the timeout value argument to poll to -1 whenever it is
less than -1 to avoid an infinite EINVAL loop.

--- dbus/dbus-sysdeps-unix.c.orig	Mon Sep 15 13:31:12 2014
+++ dbus/dbus-sysdeps-unix.c	Wed Sep 17 07:40:27 2014
@@@@ -2592,6 +2592,10 @@@@ _dbus_poll (DBusPollFD *fds,
       _DBUS_STRUCT_OFFSET (DBusPollFD, revents) ==
       _DBUS_STRUCT_OFFSET (struct pollfd, revents))
     {
+      if (timeout_milliseconds < -1) {
+        _dbus_warn("_dbus_poll: timeout = %d (fixed)\n", timeout_milliseconds);
+        timeout_milliseconds = -1;
+      }
       return poll ((struct pollfd*) fds,
                    n_fds,
                    timeout_milliseconds);
@


1.18
log
@SECURITY update to dbus-1.8.8.
@
text
@d1 1
a1 1
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.17 2014/01/24 10:43:16 ajacoutot Exp $
@


1.17
log
@Update to dbus-1.8.0.

bulk testing by landry@@
runtime testing by myself
@
text
@d1 1
a1 1
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.16 2013/10/09 11:11:49 ajacoutot Exp $
d7 3
a9 3
--- dbus/dbus-sysdeps-unix.c.orig	Fri Jan 17 17:59:48 2014
+++ dbus/dbus-sysdeps-unix.c	Wed Jan 22 12:00:04 2014
@@@@ -2555,6 +2555,10 @@@@ _dbus_poll (DBusPollFD *fds,
@


1.17.4.1
log
@SECURITY update to dbus-1.8.8.
Fixes: CVE-2014-3635 CVE-2014-3636 CVE-2014-3637 CVE-2014-3638 CVE-2014-3639
@
text
@d1 1
a1 1
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.17 2014/01/24 10:43:16 ajacoutot Exp $
d7 3
a9 3
--- dbus/dbus-sysdeps-unix.c.orig	Mon Sep 15 13:31:12 2014
+++ dbus/dbus-sysdeps-unix.c	Wed Sep 17 07:58:26 2014
@@@@ -2592,6 +2592,10 @@@@ _dbus_poll (DBusPollFD *fds,
@


1.16
log
@Missed.
@
text
@d1 1
a1 1
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.14 2013/06/13 13:08:53 ajacoutot Exp $
d7 3
a9 3
--- dbus/dbus-sysdeps-unix.c.orig	Mon Sep 16 14:57:59 2013
+++ dbus/dbus-sysdeps-unix.c	Wed Oct  9 13:11:28 2013
@@@@ -2543,6 +2543,10 @@@@ _dbus_poll (DBusPollFD *fds,
@


1.15
log
@Update to dbus-1.6.16.
@
text
@d7 3
a9 8
From b8b3feb98646c8294c86f8391d243aaf3f8ac684 Mon Sep 17 00:00:00 2001
From: Michel HERMIER <hermier@@frugalware.org>
Date: Fri, 09 Nov 2012 15:53:46 +0000
Subject: Remove redundant close() calls

--- dbus/dbus-sysdeps-unix.c.orig	Wed Jun 12 14:55:53 2013
+++ dbus/dbus-sysdeps-unix.c	Thu Jun 13 15:02:56 2013
@@@@ -2528,6 +2528,10 @@@@ _dbus_poll (DBusPollFD *fds,
a19 19
@@@@ -3312,15 +3316,12 @@@@ _read_subprocess_line_argv (const char *progpath,
       /* set-up stdXXX */
       close (result_pipe[READ_END]);
       close (errors_pipe[READ_END]);
-      close (0);                /* close stdin */
-      close (1);                /* close stdout */
-      close (2);                /* close stderr */
 
-      if (dup2 (fd, 0) == -1)
+      if (dup2 (fd, 0) == -1) /* setup stdin */
         _exit (1);
-      if (dup2 (result_pipe[WRITE_END], 1) == -1)
+      if (dup2 (result_pipe[WRITE_END], 1) == -1) /* setup stdout */
         _exit (1);
-      if (dup2 (errors_pipe[WRITE_END], 2) == -1)
+      if (dup2 (errors_pipe[WRITE_END], 2) == -1) /* setup stderr */
         _exit (1);
 
       _dbus_close_all ();
@


1.14
log
@SECURITY update to DBus 1.6.12:
CVE-2013-2168: fix misuse of va_list that could be used as a denial of
service for system services.
@
text
@d1 1
a1 1
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.13 2013/05/07 07:00:01 ajacoutot Exp $
@


1.13
log
@Update to dbus-1.6.10.
@
text
@d1 1
a1 1
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.12 2013/01/08 09:30:27 ajacoutot Exp $
d12 2
a13 2
--- dbus/dbus-sysdeps-unix.c.orig	Mon Apr 22 16:10:32 2013
+++ dbus/dbus-sysdeps-unix.c	Tue May  7 08:47:04 2013
d25 1
a25 1
@@@@ -3302,15 +3306,12 @@@@ _read_subprocess_line_argv (const char *progpath,
@


1.12
log
@Bring some fixes from upstream:
* sync configure.ac patch
* dbus-spawn: set SIGPIPE to SIG_IGN before activating services
* dbus-sysdeps-pthread.c: don't fail if !HAVE_MONOTONIC_CLOCK under -Werror=unused
* Remove redundant close() calls
* Don't leak temporary fds pointing to /dev/null
@
text
@d1 1
a1 1
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.11 2012/10/10 17:20:36 ajacoutot Exp $
d12 3
a14 3
--- dbus/dbus-sysdeps-unix.c.orig	Fri Sep 28 21:31:47 2012
+++ dbus/dbus-sysdeps-unix.c	Tue Jan  8 09:55:49 2013
@@@@ -2525,6 +2525,10 @@@@ _dbus_poll (DBusPollFD *fds,
d25 1
a25 1
@@@@ -3299,15 +3303,12 @@@@ _read_subprocess_line_argv (const char *progpath,
@


1.12.2.1
log
@CVE-2013-2168: Fix misuse of va_list that could be used as a denial of
service for system services.
@
text
@d1 1
a1 1
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.12 2013/01/08 09:30:27 ajacoutot Exp $
d12 2
a13 7
From 954d75b2b64e4799f360d2a6bf9cff6d9fee37e7 Mon Sep 17 00:00:00 2001
From: Simon McVittie <simon.mcvittie@@collabora.co.uk>
Date: Mon, 10 Jun 2013 17:06:47 +0000
Subject: CVE-2013-2168: _dbus_printf_string_upper_bound: copy the va_list for each use

--- dbus/dbus-sysdeps-unix.c.orig	Thu Jun 13 16:45:09 2013
+++ dbus/dbus-sysdeps-unix.c	Thu Jun 13 16:45:19 2013
d25 1
a25 40
@@@@ -3118,8 +3122,11 @@@@ _dbus_printf_string_upper_bound (const char *format,
   char static_buf[1024];
   int bufsize = sizeof (static_buf);
   int len;
+  va_list args_copy;
 
-  len = vsnprintf (static_buf, bufsize, format, args);
+  DBUS_VA_COPY (args_copy, args);
+  len = vsnprintf (static_buf, bufsize, format, args_copy);
+  va_end (args_copy);
 
   /* If vsnprintf() returned non-negative, then either the string fits in
    * static_buf, or this OS has the POSIX and C99 behaviour where vsnprintf
@@@@ -3135,8 +3142,12 @@@@ _dbus_printf_string_upper_bound (const char *format,
        * or the real length could be coincidentally the same. Which is it?
        * If vsnprintf returns the truncated length, we'll go to the slow
        * path. */
-      if (vsnprintf (static_buf, 1, format, args) == 1)
+      DBUS_VA_COPY (args_copy, args);
+
+      if (vsnprintf (static_buf, 1, format, args_copy) == 1)
         len = -1;
+
+      va_end (args_copy);
     }
 
   /* If vsnprintf() returned negative, we have to do more work.
@@@@ -3152,7 +3163,10 @@@@ _dbus_printf_string_upper_bound (const char *format,
       if (buf == NULL)
         return -1;
 
-      len = vsnprintf (buf, bufsize, format, args);
+      DBUS_VA_COPY (args_copy, args);
+      len = vsnprintf (buf, bufsize, format, args_copy);
+      va_end (args_copy);
+
       dbus_free (buf);
 
       /* If the reported length is exactly the buffer size, round up to the
@@@@ -3299,15 +3313,12 @@@@ _read_subprocess_line_argv (const char *progpath,
@


1.11
log
@Simpler patch; from pkgsrc.
@
text
@d1 1
a1 1
$OpenBSD$
d7 5
d13 1
a13 1
+++ dbus/dbus-sysdeps-unix.c	Wed Oct 10 17:53:43 2012
d25 19
@


1.10
log
@Update to dbus-1.4.6.
@
text
@d1 19
a19 58
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.9 2010/12/21 14:59:49 ajacoutot Exp $
--- dbus/dbus-sysdeps-unix.c.orig	Thu Dec 16 14:53:48 2010
+++ dbus/dbus-sysdeps-unix.c	Tue Dec 21 15:18:05 2010
@@@@ -204,7 +204,7 @@@@ _dbus_write_socket (int               fd,
                     int               start,
                     int               len)
 {
-#ifdef HAVE_DECL_MSG_NOSIGNAL
+#if HAVE_DECL_MSG_NOSIGNAL
   const char *data;
   int bytes_written;
 
@@@@ -442,7 +442,7 @@@@ _dbus_write_socket_with_unix_fds_two(int              
  again:
 
   bytes_written = sendmsg (fd, &m, 0
-#ifdef HAVE_DECL_MSG_NOSIGNAL
+#if HAVE_DECL_MSG_NOSIGNAL
                            |MSG_NOSIGNAL
 #endif
                            );
@@@@ -481,7 +481,7 @@@@ _dbus_write_socket_two (int               fd,
                         int               start2,
                         int               len2)
 {
-#ifdef HAVE_DECL_MSG_NOSIGNAL
+#if HAVE_DECL_MSG_NOSIGNAL
   struct iovec vectors[2];
   const char *data1;
   const char *data2;
@@@@ -1494,13 +1494,13 @@@@ write_credentials_byte (int             server_fd,
 
 #if defined(HAVE_CMSGCRED)
   bytes_written = sendmsg (server_fd, &msg, 0
-#ifdef HAVE_DECL_MSG_NOSIGNAL
+#if HAVE_DECL_MSG_NOSIGNAL
                            |MSG_NOSIGNAL
 #endif
                            );
 #else
   bytes_written = send (server_fd, buf, 1, 0
-#ifdef HAVE_DECL_MSG_NOSIGNAL
+#if HAVE_DECL_MSG_NOSIGNAL
                         |MSG_NOSIGNAL
 #endif
                         );
@@@@ -1658,7 +1658,11 @@@@ _dbus_read_credentials_socket  (int              clien
 
   {
 #ifdef SO_PEERCRED
+#ifndef __OpenBSD__
     struct ucred cr;
+#else
+    struct sockpeercred cr;
+#endif
     int cr_len = sizeof (cr);
 
     if (getsockopt (client_fd, SOL_SOCKET, SO_PEERCRED, &cr, &cr_len) == 0 &&
@


1.9
log
@Bugfix update to dbus-1.4.1.
@
text
@d1 1
a1 1
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.8 2010/12/21 05:57:42 ajacoutot Exp $
@


1.8
log
@Update to dbus-1.4.0... second try.
Previously missed regression is fixed.
@
text
@d1 47
a47 4
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.6 2010/12/13 10:41:22 ajacoutot Exp $
--- dbus/dbus-sysdeps-unix.c.orig	Mon Sep  6 19:30:26 2010
+++ dbus/dbus-sysdeps-unix.c	Mon Dec 20 19:16:38 2010
@@@@ -1650,7 +1650,11 @@@@ _dbus_read_credentials_socket  (int              clien
@


1.7
log
@There seems to be an annoying runtime regression with session bus after
the last update which I failed to see in my tests.
While this is being worked on, let's revert for now so that people don't
run into it. Other parts of the D-DBus gang update are fine (glib and
python). Also keep the recent rc script tweak.

Sorry about that...
@
text
@d1 4
a4 4
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.5 2010/06/30 20:48:57 ajacoutot Exp $
--- dbus/dbus-sysdeps-unix.c.orig	Tue Mar 23 20:01:27 2010
+++ dbus/dbus-sysdeps-unix.c	Wed Jun 30 21:41:34 2010
@@@@ -1224,7 +1224,11 @@@@ _dbus_read_credentials_socket  (int              clien
d9 1
a9 1
     struct ucred cr;   
d14 1
a14 1
     
@


1.6
log
@Update to dbus-1.4.0.
@
text
@d2 3
a4 3
--- dbus/dbus-sysdeps-unix.c.orig	Mon Sep  6 19:30:26 2010
+++ dbus/dbus-sysdeps-unix.c	Mon Dec 13 10:44:38 2010
@@@@ -1650,7 +1650,11 @@@@ _dbus_read_credentials_socket  (int              clien
d9 1
a9 1
     struct ucred cr;
d14 1
a14 1
 
@


1.5
log
@Make use of getsockopt(2) SO_PEERCRED.
This fixes GetConnectionUnixProcessID().

Requires a very current current...
@
text
@d1 4
a4 4
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.4 2010/06/29 03:36:30 ajacoutot Exp $
--- dbus/dbus-sysdeps-unix.c.orig	Tue Mar 23 20:01:27 2010
+++ dbus/dbus-sysdeps-unix.c	Wed Jun 30 21:41:34 2010
@@@@ -1224,7 +1224,11 @@@@ _dbus_read_credentials_socket  (int              clien
d9 1
a9 1
     struct ucred cr;   
d14 1
a14 1
     
@


1.4
log
@Better.
@
text
@d1 1
a1 1
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.3 2010/06/29 02:14:57 ajacoutot Exp $
d3 13
a15 9
+++ dbus/dbus-sysdeps-unix.c	Tue Jun 29 05:35:34 2010
@@@@ -1255,6 +1255,7 @@@@ _dbus_read_credentials_socket  (int              clien
     gid_t egid;
     if (getpeereid (client_fd, &euid, &egid) == 0)
       {
+        pid_read = DBUS_PID_UNSET;
         uid_read = euid;
       }
     else
@


1.3
log
@Fix the GetConnectionUnixProcessID() function.
@
text
@d1 5
a5 4
$OpenBSD$
--- dbus/dbus-sysdeps-unix.c.orig	Tue Jun 29 04:12:50 2010
+++ dbus/dbus-sysdeps-unix.c	Tue Jun 29 04:13:23 2010
@@@@ -1256,6 +1256,7 @@@@ _dbus_read_credentials_socket  (int              clien
d8 1
a9 1
+        pid_read = getpid();
a11 1
       {
@


1.2
log
@Update to dbus-1.2.16.

ok jasper@@
@
text
@d1 11
a11 40
$OpenBSD: patch-dbus_dbus-sysdeps-unix_c,v 1.1 2009/04/24 15:06:05 kurt Exp $
--- dbus/dbus-sysdeps-unix.c.orig	Wed Apr 22 17:32:26 2009
+++ dbus/dbus-sysdeps-unix.c	Wed Apr 22 18:56:49 2009
@@@@ -2860,6 +2860,7 @@@@ _dbus_get_autolaunch_address (DBusString *address,
   int i;
   DBusString uuid;
   dbus_bool_t retval;
+  sigset_t new_set, old_set;
   
   _DBUS_ASSERT_ERROR_IS_CLEAR (error);
   retval = FALSE;
@@@@ -2869,6 +2870,10 @@@@ _dbus_get_autolaunch_address (DBusString *address,
       _DBUS_SET_OOM (error);
       return FALSE;
     }
+
+  sigemptyset(&new_set);
+  sigaddset(&new_set, SIGCHLD);
+  sigprocmask(SIG_BLOCK, &new_set, &old_set);
   
   if (!_dbus_get_local_machine_uuid_encoded (&uuid))
     {
@@@@ -2963,6 +2968,8 @@@@ _dbus_get_autolaunch_address (DBusString *address,
       for (i = 3; i < maxfds; i++)
         close (i);
 
+      sigprocmask(SIG_SETMASK, &old_set, NULL);
+
       execv (DBUS_BINDIR "/dbus-launch", argv);
 
       /* failed, try searching PATH */
@@@@ -3021,6 +3028,8 @@@@ _dbus_get_autolaunch_address (DBusString *address,
   retval = TRUE;
   
  out:
+  sigprocmask(SIG_SETMASK, &old_set, NULL);
+
   if (retval)
     _DBUS_ASSERT_ERROR_IS_CLEAR (error);
   else
@


1.1
log
@Prevent signal/waitpid races by blocking SIGCHLD in
_dbus_get_autolaunch_address(). This corrects the
pidgin + dbus plugin error dialog  "dbus: Failed to
get connection: Failed to execute dbus-launch to
autolaunch D-Bus session".

okay todd@@
@
text
@d1 1
a1 1
$OpenBSD$
@

