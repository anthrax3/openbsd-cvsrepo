head	1.9;
access;
symbols
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	jasper_20120205:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2013.03.08.10.23.13;	author jasper;	state dead;
branches;
next	1.8;

1.8
date	2012.10.16.10.40.21;	author jasper;	state Exp;
branches;
next	1.7;

1.7
date	2012.10.09.17.12.31;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2012.10.09.16.02.07;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2012.10.09.13.19.48;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2012.10.04.06.15.38;	author jasper;	state dead;
branches;
next	1.3;

1.3
date	2012.10.02.20.33.29;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.03.20.27.26;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2012.05.02.07.37.10;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.05.02.07.37.10;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.9
log
@- update to i3status-2.7
* all functional patches have been committed upstream.

tested by and ok rpe@@
@
text
@$OpenBSD: patch-include_i3status_h,v 1.8 2012/10/16 10:40:21 jasper Exp $

From ae4873bac793245e7dea4719c8e0d1c7bc990d5f Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@openbsd.org>
Date: Wed, 10 Oct 2012 07:57:32 +0000
Subject: i3status - More temperature related fixes for OpenBSD, and a general feature

From 1c2517a3998385dbfca0559aca3ba7e72b5c216c Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@openbsd.org>
Date: Wed, 10 Oct 2012 07:53:34 +0000
Subject: i3status - Default to acpitz(4) instead of cpu(4) for OpenBSD temperature readings

--- include/i3status.h.orig	Wed Oct  3 13:44:44 2012
+++ include/i3status.h	Tue Oct  9 20:36:02 2012
@@@@ -27,14 +27,8 @@@@ enum { O_DZEN2, O_XMOBAR, O_I3BAR, O_NONE } output_for
 #define BATT_STATE "hw.acpi.battery.state"
 
 #elif defined(__OpenBSD__)
-/*
- * Due to the fact there are various ways to obtain a temperature reading, THERMAL_ZONE will need
- * to be adjustable enough for those situations. As it can either be hw.sensors.cpu%d.temp0, or
- * hw.sensors.acpitz%d.temp0 or even something different entirely within hw.sensors.%s.temp0.
- * XXX: For now just check cpu%d.temp0. Adjust this later.
- */
-#define THERMAL_ZONE "cpu%d"
-
+/* Default to acpitz(4) if no path is set. */
+#define THERMAL_ZONE "acpitz%d"
 #endif
 
 #if defined(__FreeBSD_kernel__) && defined(__GLIBC__)
@@@@ -143,7 +137,7 @@@@ void print_ddate(yajl_gen json_gen, char *buffer, cons
 const char *get_ip_addr();
 void print_wireless_info(yajl_gen json_gen, char *buffer, const char *interface, const char *format_up, const char *format_down);
 void print_run_watch(yajl_gen json_gen, char *buffer, const char *title, const char *pidfile, const char *format);
-void print_cpu_temperature_info(yajl_gen json_gen, char *buffer, int zone, const char *path, const char *format);
+void print_cpu_temperature_info(yajl_gen json_gen, char *buffer, int zone, const char *path, const char *format, int);
 void print_cpu_usage(yajl_gen json_gen, char *buffer, const char *format);
 void print_eth_info(yajl_gen json_gen, char *buffer, const char *interface, const char *format_up, const char *format_down);
 void print_load(yajl_gen json_gen, char *buffer, const char *format);
@


1.8
log
@sync comments; everything is upstream now.
@
text
@d1 1
a1 1
$OpenBSD: patch-include_i3status_h,v 1.7 2012/10/09 17:12:31 jasper Exp $
@


1.7
log
@- Temperature sensors can now set a 'max_threshold' value to color the
  output red if exceeded.
@
text
@d1 1
a1 1
$OpenBSD: patch-include_i3status_h,v 1.6 2012/10/09 16:02:07 jasper Exp $
d3 4
a6 3
- Default to acpitz(4) for temperature readings, instead of cpu(4).
  The acpitz(4) values are eventually used by the kernel to determine if the machine
  is getting too hot.
d8 4
a11 5
  Other devices can be used by setting 'path' in the config file to the sysctl(3)
  device node.

- Temperature sensors can now set a 'max_threshold' value to color the
  output red if exceeded.
@


1.6
log
@make it possible to get temperature readings from devices other than acpitz.
use the 'path' option in your configuration's cpu_temperature block to e.g. cpu0.
@
text
@d1 1
a1 1
$OpenBSD: patch-include_i3status_h,v 1.5 2012/10/09 13:19:48 jasper Exp $
d3 3
a5 3
Default to acpitz(4) for temperature readings, instead of cpu(4).
The acpitz(4) values are eventually used by the kernel to determine if the machine
is getting too hot.
d7 5
a11 2
Other devices can be used by setting 'path' in the config file to the sysctl(3) 
device node.
d14 1
a14 1
+++ include/i3status.h	Tue Oct  9 19:39:37 2012
d32 9
@


1.5
log
@- change the default (and since the API is still limiting us here, only)
device from which we read temperature values from, from cpu(4) to acpitz(4).
@
text
@d1 1
a1 1
$OpenBSD$
d7 13
a19 6
--- include/i3status.h.orig	Tue Oct  9 17:10:15 2012
+++ include/i3status.h	Tue Oct  9 17:10:22 2012
@@@@ -31,9 +31,11 @@@@ enum { O_DZEN2, O_XMOBAR, O_I3BAR, O_NONE } output_for
  * Due to the fact there are various ways to obtain a temperature reading, THERMAL_ZONE will need
  * to be adjustable enough for those situations. As it can either be hw.sensors.cpu%d.temp0, or
  * hw.sensors.acpitz%d.temp0 or even something different entirely within hw.sensors.%s.temp0.
d21 1
a21 4
+ * XXX:
+ * Due to the fact the i3status API only allows to set the THERMAL_ZONE parameter to an integer,
+ * we can't make this fully configureable (yet?).
  */
d23 2
a25 1
 
d28 1
@


1.4
log
@- update to i3status 2.6

tested by dcoppa@@ also
@
text
@d1 1
a1 1
$OpenBSD: patch-include_i3status_h,v 1.3 2012/10/02 20:33:29 jasper Exp $
d3 3
a5 4
From cfaeba4df17397ac8d99155bc166bba90db0dbbf Mon Sep 17 00:00:00 2001
From: Michael Stapelberg <michael@@stapelberg.de>
Date: Sun, 12 Aug 2012 23:35:07 +0000
Subject: Bugfix: non-i3bar formats always used color_bad (Thanks hongy19)
d7 16
a22 11
--- include/i3status.h.orig	Tue Oct  2 22:22:30 2012
+++ include/i3status.h	Tue Oct  2 22:22:42 2012
@@@@ -99,7 +99,7 @@@@ enum { O_DZEN2, O_XMOBAR, O_I3BAR, O_NONE } output_for
 				yajl_gen_string(json_gen, (const unsigned char *)"color", strlen("color")); \
 				yajl_gen_string(json_gen, (const unsigned char *)val, strlen(val)); \
 			} else { \
-				outwalk += sprintf(outwalk, "%s", color("color_bad")); \
+				outwalk += sprintf(outwalk, "%s", color("colorstr")); \
 			} \
 		} \
 	} while (0)
@


1.3
log
@fix: non-i3bar formats always used color_bad


from upstream git
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@- update to 2.5
@
text
@d1 1
a1 1
$OpenBSD: patch-include_i3status_h,v 1.1 2012/05/02 07:37:10 jasper Exp $
d3 4
a6 1
Implement basic fetching of cpu temperature on OpenBSD (committed upstream).
d8 11
a18 18
--- include/i3status.h.orig	Sun Apr 29 16:55:04 2012
+++ include/i3status.h	Sun Apr 29 16:55:09 2012
@@@@ -26,6 +26,15 @@@@ enum { O_DZEN2, O_XMOBAR, O_I3BAR, O_NONE } output_for
 #define BATT_TIME "hw.acpi.battery.time"
 #define BATT_STATE "hw.acpi.battery.state"
 
+#elif defined(__OpenBSD__)
+/*
+ * Due to the fact there are various ways to obtain a temperature reading, THERMAL_ZONE will need
+ * to be adjustable enough for those situations. As it can either be hw.sensors.cpu%d.temp0, or
+ * hw.sensors.acpitz%d.temp0 or even something different entirely within hw.sensors.%s.temp0.
+ * XXX: For now just check cpu%d.temp0. Adjust this later.
+ */
+#define THERMAL_ZONE "cpu%d"
+
 #endif
 
 #if defined(__FreeBSD_kernel__) && defined(__GLIBC__)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import i3status 2.4.1 (git clone as of a few days ago, along with a load of
patches for OpenBSD support, which have all been committed upstream already)

i3status is a small program (about 1500 SLOC) for generating a status
bar for dzen2, xmobar or similar programs. It is designed to be very
efficient by issuing a very small number of system calls, as one
generally wants to update such a status line every second. This ensures
that even under high load, your status bar is updated correctly. Also,
it saves a bit of energy by not hogging your CPU as much as spawning the
corresponding amount of shell commands would.

ok dcoppa@@
@
text
@@
