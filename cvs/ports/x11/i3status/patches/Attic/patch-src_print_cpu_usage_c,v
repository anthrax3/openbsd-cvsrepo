head	1.8;
access;
symbols
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	jasper_20120205:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2016.01.04.22.31.17;	author jasper;	state dead;
branches;
next	1.7;
commitid	Vlzxck3cu5dH5A2T;

1.7
date	2015.04.02.18.33.35;	author jasper;	state Exp;
branches;
next	1.6;
commitid	2BHwufkDWYAL9fw9;

1.6
date	2014.09.17.18.26.59;	author jasper;	state Exp;
branches;
next	1.5;
commitid	t8CzWBwlGI3zexmm;

1.5
date	2014.09.16.19.03.33;	author espie;	state Exp;
branches;
next	1.4;
commitid	vICyj9OUxCtjcJ8e;

1.4
date	2012.10.04.06.15.38;	author jasper;	state dead;
branches;
next	1.3;

1.3
date	2012.07.07.09.43.54;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.03.20.27.26;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2012.05.02.07.37.10;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.05.02.07.37.10;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.8
log
@- update to i3status-2.10

tested by many, thanks!
@
text
@$OpenBSD: patch-src_print_cpu_usage_c,v 1.7 2015/04/02 18:33:35 jasper Exp $

https://github.com/i3/i3status/pull/18

--- src/print_cpu_usage.c.orig	Tue Sep 16 13:00:15 2014
+++ src/print_cpu_usage.c	Tue Sep 16 13:01:43 2014
@@@@ -10,7 +10,11 @@@@
 #include <sys/param.h>
 #include <sys/types.h>
 #include <sys/sysctl.h>
+#if defined(__OpenBSD__)
+#include <sys/sched.h>
+#else
 #include <sys/dkstat.h>
+#endif
 #endif
 
 #if defined(__DragonFly__)
@


1.7
log
@patch submitted to the Nth bugtracker of i3status
@
text
@d1 1
a1 1
$OpenBSD: patch-src_print_cpu_usage_c,v 1.6 2014/09/17 18:26:59 jasper Exp $
@


1.6
log
@submitted upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-src_print_cpu_usage_c,v 1.5 2014/09/16 19:03:33 espie Exp $
d3 1
a3 1
http://bugs.i3wm.org/query/ticket/1364
@


1.5
log
@fix build past dkstats.h removal
@
text
@d1 4
a4 1
$OpenBSD$
@


1.4
log
@- update to i3status 2.6

tested by dcoppa@@ also
@
text
@d1 15
a15 25
$OpenBSD: patch-src_print_cpu_usage_c,v 1.3 2012/07/07 09:43:54 jasper Exp $

Avoid division by zero when calculating CPU usage.
Upstream git 859a7690a6472ca6d700d29693d986125d11e4b6

--- src/print_cpu_usage.c.orig	Fri May 11 22:38:26 2012
+++ src/print_cpu_usage.c	Sat Jul  7 11:41:55 2012
@@@@ -40,7 +40,7 @@@@ void print_cpu_usage(yajl_gen json_gen, char *buffer, 
         curr_total = curr_user + curr_nice + curr_system + curr_idle;
         diff_idle  = curr_idle - prev_idle;
         diff_total = curr_total - prev_total;
-        diff_usage = (1000 * (diff_total - diff_idle)/diff_total + 5)/10;
+        diff_usage = (diff_total ? (1000 * (diff_total - diff_idle)/diff_total + 5)/10 : 0);
         prev_total = curr_total;
         prev_idle  = curr_idle;
 #elif defined(__FreeBSD__) || defined(__OpenBSD__)
@@@@ -71,7 +71,7 @@@@ void print_cpu_usage(yajl_gen json_gen, char *buffer, 
         curr_total = curr_user + curr_nice + curr_system + curr_idle;
         diff_idle  = curr_idle - prev_idle;
         diff_total = curr_total - prev_total;
-        diff_usage = (1000 * (diff_total - diff_idle)/diff_total + 5)/10;
+        diff_usage = (diff_total ? (1000 * (diff_total - diff_idle)/diff_total + 5)/10 : 0);
         prev_total = curr_total;
         prev_idle  = curr_idle;
 #else
@


1.3
log
@Avoid division by zero when calculating CPU usage.

from upstream git
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@- update to 2.5
@
text
@d1 1
a1 1
$OpenBSD: patch-src_print_cpu_usage_c,v 1.1 2012/05/02 07:37:10 jasper Exp $
d3 2
a4 2
Fix CPU usage on OpenBSD. Currently only takes the first cpu into account,
but works fine otherwise (committed upstream).
d6 8
a13 14
--- src/print_cpu_usage.c.orig	Fri Apr 27 16:00:41 2012
+++ src/print_cpu_usage.c	Fri Apr 27 17:31:08 2012
@@@@ -6,7 +6,8 @@@@
 #include <yajl/yajl_gen.h>
 #include <yajl/yajl_version.h>
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+#include <sys/param.h>
 #include <sys/types.h>
 #include <sys/sysctl.h>
 #include <sys/dkstat.h>
@@@@ -42,12 +43,26 @@@@ void print_cpu_usage(yajl_gen json_gen, char *buffer, 
         diff_usage = (1000 * (diff_total - diff_idle)/diff_total + 5)/10;
d16 10
a25 24
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD__) || defined(__OpenBSD__)
+
+#if defined(__FreeBSD__)
         size_t size;
         long cp_time[CPUSTATES];
         size = sizeof cp_time;
         if (sysctlbyname("kern.cp_time", &cp_time, &size, NULL, 0) < 0)
                 goto error;
+#else
+	/* This information is taken from the boot cpu, any other cpus are currently ignored. */
+	long cp_time[CPUSTATES];
+	int mib[2];
+	size_t size = sizeof(cp_time);
+
+	mib[0] = CTL_KERN;
+	mib[1] = KERN_CPTIME;
+
+	if (sysctl(mib, 2, cp_time, &size, NULL, 0))
+		goto error;
+#endif
 
         curr_user = cp_time[CP_USER];
         curr_nice = cp_time[CP_NICE];
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import i3status 2.4.1 (git clone as of a few days ago, along with a load of
patches for OpenBSD support, which have all been committed upstream already)

i3status is a small program (about 1500 SLOC) for generating a status
bar for dzen2, xmobar or similar programs. It is designed to be very
efficient by issuing a very small number of system calls, as one
generally wants to update such a status line every second. This ensures
that even under high load, your status bar is updated correctly. Also,
it saves a bit of energy by not hogging your CPU as much as spawning the
corresponding amount of shell commands would.

ok dcoppa@@
@
text
@@
