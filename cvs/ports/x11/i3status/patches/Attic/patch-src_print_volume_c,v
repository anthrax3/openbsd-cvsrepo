head	1.8;
access;
symbols
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	jasper_20120205:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2016.01.04.22.31.17;	author jasper;	state dead;
branches;
next	1.7;
commitid	Vlzxck3cu5dH5A2T;

1.7
date	2015.09.01.11.09.37;	author jasper;	state Exp;
branches;
next	1.6;
commitid	juiRcgOPsMrVgeDZ;

1.6
date	2015.07.30.08.11.53;	author robert;	state Exp;
branches;
next	1.5;
commitid	EGlrKHYY5qHd1brv;

1.5
date	2013.03.08.10.23.13;	author jasper;	state dead;
branches;
next	1.4;

1.4
date	2012.10.04.08.41.01;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2012.10.04.06.15.38;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.03.20.27.26;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2012.05.02.07.37.10;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.05.02.07.37.10;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.8
log
@- update to i3status-2.10

tested by many, thanks!
@
text
@$OpenBSD: patch-src_print_volume_c,v 1.7 2015/09/01 11:09:37 jasper Exp $

From 15f2279592032af1507de09ef31eba81aee53191 Mon Sep 17 00:00:00 2001
From: "Dmitrij D. Czarkoff" <czarkoff@@gmail.com>
Date: Fri, 31 Jul 2015 01:51:40 +0200
Subject: [PATCH] Use SndIO for volume module on OpenBSD

--- src/print_volume.c.orig	Wed Jul 29 15:31:44 2015
+++ src/print_volume.c	Wed Jul 29 15:31:47 2015
@@@@ -20,7 +20,8 @@@@
 #ifdef __OpenBSD__
 #include <fcntl.h>
 #include <unistd.h>
-#include <soundcard.h>
+#include <sys/audioio.h>
+#include <sys/ioctl.h>
 #endif
 
 #include "i3status.h"
@@@@ -145,6 +146,70 @@@@ void print_volume(yajl_gen json_gen, char *buffer, con
     if (mixer_idx > 0)
         free(mixerpath);
 
+#if defined(__OpenBSD__)
+    int oclass_idx = -1, master_idx = -1, master_mute_idx = -1;
+    mixer_devinfo_t devinfo, devinfo2;
+    mixer_ctrl_t vinfo;
+
+    devinfo.index = 0;
+    while (ioctl(mixfd, AUDIO_MIXER_DEVINFO, &devinfo) >= 0) {
+        if (devinfo.type != AUDIO_MIXER_CLASS) {
+            devinfo.index++;
+            continue;
+        }
+        if (strncmp(devinfo.label.name, AudioCoutputs, MAX_AUDIO_DEV_LEN) == 0)
+            oclass_idx = devinfo.index;
+
+        devinfo.index++;
+    }
+
+    devinfo2.index = 0;
+    while (ioctl(mixfd, AUDIO_MIXER_DEVINFO, &devinfo2) >= 0) {
+        if ((devinfo2.type == AUDIO_MIXER_VALUE)
+        &&  (devinfo2.mixer_class == oclass_idx)
+        &&  (strncmp(devinfo2.label.name, AudioNmaster, MAX_AUDIO_DEV_LEN) == 0))
+            master_idx = devinfo2.index;
+
+        if ((devinfo2.type == AUDIO_MIXER_ENUM)
+        &&  (devinfo2.mixer_class == oclass_idx)
+        &&  (strncmp(devinfo2.label.name, AudioNmute, MAX_AUDIO_DEV_LEN) == 0))
+            master_mute_idx = devinfo2.index;
+
+        devinfo2.index++;
+    }
+
+    if (master_idx == -1)
+        goto out;
+
+    devinfo.index = master_idx;
+    if (ioctl(mixfd, AUDIO_MIXER_DEVINFO, &devinfo) == -1)
+        goto out;
+
+    vinfo.dev = master_idx;
+    vinfo.type = AUDIO_MIXER_VALUE;
+    if (ioctl(mixfd, AUDIO_MIXER_READ, &vinfo) == -1)
+        goto out;
+
+    if (AUDIO_MAX_GAIN != 100) {
+        float avgf = ((float)vinfo.un.value.level[AUDIO_MIXER_LEVEL_MONO] / AUDIO_MAX_GAIN) * 100;
+        vol = (int)avgf;
+        vol = (avgf - vol < 0.5 ? vol : (vol + 1));
+    } else {
+        vol = (int)vinfo.un.value.level[AUDIO_MIXER_LEVEL_MONO];
+    }
+
+    vinfo.dev = master_mute_idx;
+    vinfo.type = AUDIO_MIXER_ENUM;
+    if (ioctl(mixfd, AUDIO_MIXER_READ, &vinfo) == -1)
+        goto out;
+
+    if (master_mute_idx != -1 && vinfo.un.ord) {
+        START_COLOR("color_degraded");
+        fmt = fmt_muted;
+        pbval = 0;
+    }
+
+#else
     if (ioctl(mixfd, SOUND_MIXER_READ_DEVMASK, &devmask) == -1)
         return;
     if (ioctl(mixfd, MIXER_READ(0), &vol) == -1)
@@@@ -154,6 +219,7 @@@@ void print_volume(yajl_gen json_gen, char *buffer, con
         START_COLOR("color_degraded");
         pbval = 0;
     }
+#endif
 
     const char *walk = fmt;
     for (; *walk != '\0'; walk++) {
@


1.7
log
@robert@@'s patches have been merged upstream thanks to czarkoff@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_print_volume_c,v 1.6 2015/07/30 08:11:53 robert Exp $
@


1.6
log
@move away from ossaudio and get the information from the mixer(4) directly
in order to get proper volume and mute information when there is no hardware
button for volume/mute available

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 4
a6 3
Use mixer(4) directly and move away from ossaudio.
This fixes the volume display where there is no hardware
button available and also fixes showing the mute status.
@


1.5
log
@- update to i3status-2.7
* all functional patches have been committed upstream.

tested by and ok rpe@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_print_volume_c,v 1.4 2012/10/04 08:41:01 jasper Exp $
d3 3
a5 4
From 7dcc961fa2d755ed47b29de778a2d2baf8dac7ba Mon Sep 17 00:00:00 2001
From: Michael Stapelberg <michael@@stapelberg.de>
Date: Wed, 03 Oct 2012 13:12:49 +0000
Subject: Bugfix: Move the pbval definition outside the ifdef
d7 10
a16 3
--- src/print_volume.c.orig	Wed Oct  3 13:44:44 2012
+++ src/print_volume.c	Thu Oct  4 08:30:22 2012
@@@@ -51,6 +51,7 @@@@ static void free_hdl(struct mixer_hdl *hdl) {
d18 4
a21 3
 void print_volume(yajl_gen json_gen, char *buffer, const char *fmt, const char *device, const char *mixer, int mixer_idx) {
         char *outwalk = buffer;
+	int pbval = 1;
d23 34
a56 6
         /* Printing volume only works with ALSA at the moment */
         if (output_format == O_I3BAR) {
@@@@ -173,6 +174,7 @@@@ void print_volume(yajl_gen json_gen, char *buffer, con
 			walk += strlen("volume");
 		}
 	}
d58 40
a97 3
 #endif
 #if defined(__FreeBSD__) || defined(__OpenBSD__)
         char mixerpath[] = "/dev/mixer";
@


1.4
log
@sync with upstream patch
@
text
@d1 1
a1 1
$OpenBSD: patch-src_print_volume_c,v 1.3 2012/10/04 06:15:38 jasper Exp $
@


1.3
log
@- update to i3status 2.6

tested by dcoppa@@ also
@
text
@d1 1
a1 1
$OpenBSD$
d3 4
a6 1
pbval is declared inside #ifdef __linux__
d8 11
a18 3
--- src/print_volume.c.orig	Wed Oct  3 15:31:04 2012
+++ src/print_volume.c	Wed Oct  3 15:31:13 2012
@@@@ -173,6 +173,10 @@@@ void print_volume(yajl_gen json_gen, char *buffer, con
a22 3
+        if (!pbval)
+		END_COLOR;
+
a25 8
@@@@ -201,7 +205,4 @@@@ void print_volume(yajl_gen json_gen, char *buffer, con
 
         *outwalk = '\0';
         OUTPUT_FULL_TEXT(buffer);
-
-        if (!pbval)
-		END_COLOR;
 }
@


1.2
log
@- update to 2.5
@
text
@d1 1
a1 1
$OpenBSD: patch-src_print_volume_c,v 1.1 2012/05/02 07:37:10 jasper Exp $
d3 1
a3 1
Print volume on OpenBSD and add missing library accordingly (committed upstream).
d5 4
a8 16
--- src/print_volume.c.orig	Fri Apr 27 19:04:24 2012
+++ src/print_volume.c	Fri Apr 27 19:04:30 2012
@@@@ -17,6 +17,12 @@@@
 #include <sys/soundcard.h>
 #endif
 
+#ifdef __OpenBSD__
+#include <fcntl.h>
+#include <unistd.h>
+#include <soundcard.h>
+#endif
+
 #include "i3status.h"
 #include "queue.h"
 
@@@@ -166,7 +172,7 @@@@ void print_volume(yajl_gen json_gen, char *buffer, con
d11 4
d16 1
a16 2
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
d18 1
a18 1
         int mixfd, vol, devmask = 0;
d20 6
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import i3status 2.4.1 (git clone as of a few days ago, along with a load of
patches for OpenBSD support, which have all been committed upstream already)

i3status is a small program (about 1500 SLOC) for generating a status
bar for dzen2, xmobar or similar programs. It is designed to be very
efficient by issuing a very small number of system calls, as one
generally wants to update such a status line every second. This ensures
that even under high load, your status bar is updated correctly. Also,
it saves a bit of energy by not hogging your CPU as much as spawning the
corresponding amount of shell commands would.

ok dcoppa@@
@
text
@@
