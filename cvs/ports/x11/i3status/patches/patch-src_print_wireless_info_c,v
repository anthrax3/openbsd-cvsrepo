head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.4
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.2
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.9.0.4
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5;
locks; strict;
comment	@# @;


1.12
date	2017.01.31.19.01.41;	author jasper;	state Exp;
branches;
next	1.11;
commitid	qn2391aDWpqaXV8K;

1.11
date	2017.01.29.15.12.42;	author jasper;	state Exp;
branches;
next	1.10;
commitid	EcvcDgTHpTpgl4IM;

1.10
date	2016.09.10.13.03.44;	author ajacoutot;	state Exp;
branches;
next	1.9;
commitid	4KcvAK91uGdTLejD;

1.9
date	2016.01.04.22.31.17;	author jasper;	state Exp;
branches;
next	1.8;
commitid	Vlzxck3cu5dH5A2T;

1.8
date	2015.04.04.16.07.16;	author jasper;	state Exp;
branches;
next	1.7;
commitid	FntsPEcvkCSZ6kSf;

1.7
date	2015.04.04.08.55.32;	author jasper;	state Exp;
branches;
next	1.6;
commitid	vDIQpFWud2Q55TdO;

1.6
date	2013.03.08.10.23.13;	author jasper;	state dead;
branches;
next	1.5;

1.5
date	2012.10.16.10.40.21;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2012.10.10.07.20.16;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2012.10.09.11.32.45;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2012.10.09.11.29.24;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2012.10.08.18.07.06;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.12
log
@submitted upstream
@
text
@$OpenBSD: patch-src_print_wireless_info_c,v 1.11 2017/01/29 15:12:42 jasper Exp $

https://github.com/i3/i3status/pull/198

--- src/print_wireless_info.c.orig	Sun Jan 29 13:00:06 2017
+++ src/print_wireless_info.c	Sun Jan 29 13:00:33 2017
@@@@ -49,6 +49,7 @@@@
 #include <sys/ioctl.h>
 #include <sys/socket.h>
 #include <net/if.h>
+#include <sys/select.h> /* fd_set */
 #include <sys/types.h>
 #include <netinet/in.h>
 #include <netinet/if_ether.h>
@


1.11
log
@update to i3status-2.11
@
text
@d1 4
a4 1
$OpenBSD: patch-src_print_wireless_info_c,v 1.10 2016/09/10 13:03:44 ajacoutot Exp $
@


1.10
log
@First pass at pre-entively fixing ports that would break once guenther's header
pollution diff is in.

lang/squeak/vm does not build but it's due to the recent audio changes
games/xbattle: also fixes some conflicting implicit decl
print/hplip: also fixes some conflicting implicit decl
@
text
@d1 4
a4 4
$OpenBSD: patch-src_print_wireless_info_c,v 1.9 2016/01/04 22:31:17 jasper Exp $
--- src/print_wireless_info.c.orig	Fri Jan  1 19:51:19 2016
+++ src/print_wireless_info.c	Sat Sep 10 13:02:08 2016
@@@@ -45,11 +45,13 @@@@
a11 6
 #include <net80211/ieee80211.h>
 #include <net80211/ieee80211_ioctl.h>
+#define IW_ESSID_MAX_SIZE IEEE80211_NWID_LEN
 #endif
 
 #include "i3status.h"
@


1.9
log
@- update to i3status-2.10

tested by many, thanks!
@
text
@d1 10
a10 4
$OpenBSD$
--- src/print_wireless_info.c.orig	Sun Jan  3 12:55:52 2016
+++ src/print_wireless_info.c	Sun Jan  3 12:58:06 2016
@@@@ -50,6 +50,7 @@@@
@


1.8
log
@merged upstream
@
text
@d1 9
a9 11
$OpenBSD: patch-src_print_wireless_info_c,v 1.7 2015/04/04 08:55:32 jasper Exp $

From e91891729e799e45561c707768269bb755ca34e9 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Sat, 4 Apr 2015 10:56:58 +0200
Subject: [PATCH] Use the maximum rssi, not the scaled percentage for the signal level.

--- src/print_wireless_info.c.orig	Sat Apr  4 10:51:30 2015
+++ src/print_wireless_info.c	Sat Apr  4 10:52:18 2015
@@@@ -308,10 +308,9 @@@@ static int get_wireless_info(const char *interface, wi
             strlcpy(nr.nr_ifname, interface, sizeof(nr.nr_ifname));
d11 1
a11 10
             if (ioctl(s, SIOCG80211NODE, &nr) == 0 && nr.nr_rssi) {
+                info->signal_level = nr.nr_rssi;
                 if (nr.nr_max_rssi)
-                    info->signal_level_max = IEEE80211_NODEREQ_RSSI(&nr);
-                else
-                    info->signal_level = nr.nr_rssi;
+                    info->signal_level_max = nr.nr_max_rssi;
 
                 info->flags |= WIRELESS_INFO_FLAG_HAS_SIGNAL;
             }
@


1.7
log
@Use the maximum rssi, not the scaled percentage for the signal level.

original issue reported by jcs@@, improved fix from sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 4
a6 1
Use the maximum rssi, not the scaled percentage for the signal level.
@


1.6
log
@- update to i3status-2.7
* all functional patches have been committed upstream.

tested by and ok rpe@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_print_wireless_info_c,v 1.5 2012/10/16 10:40:21 jasper Exp $
d3 1
a3 4
From 794151cfe76f80fb2c7eebb8d3fbbce8fc5ccb09 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@humppa.nl>
Date: Mon, 08 Oct 2012 20:15:14 +0000
Subject: Implement %essid and %signal for wireless on OpenBSD.
d5 12
a16 127
From ed03d2450ceae3cc7952b65d8349373bbb45a487 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@@openbsd.org>
Date: Wed, 10 Oct 2012 07:52:27 +0000
Subject: i3status - Handle down wireless interfaces just like ethernet interfaces (e.g. colors)

--- src/print_wireless_info.c.orig	Wed Oct  3 13:44:44 2012
+++ src/print_wireless_info.c	Tue Oct  9 15:25:03 2012
@@@@ -25,6 +25,17 @@@@
 #define IW_ESSID_MAX_SIZE IEEE80211_NWID_LEN
 #endif
 
+#ifdef __OpenBSD__
+#include <sys/ioctl.h>
+#include <sys/socket.h>
+#include <net/if.h>
+#include <sys/types.h>
+#include <netinet/in.h>
+#include <netinet/if_ether.h>
+#include <net80211/ieee80211.h>
+#include <net80211/ieee80211_ioctl.h>
+#endif
+
 #include "i3status.h"
 
 #define WIRELESS_INFO_FLAG_HAS_ESSID                    (1 << 0)
@@@@ -220,6 +231,70 @@@@ static int get_wireless_info(const char *interface, wi
 
         return 1;
 #endif
+#ifdef __OpenBSD__
+	struct ifreq ifr;
+	struct ieee80211_bssid bssid;
+	struct ieee80211_nwid nwid;
+	struct ieee80211_nodereq nr;
+
+	struct ether_addr ea;
+
+        int s, len, ibssid, inwid;
+	u_int8_t zero_bssid[IEEE80211_ADDR_LEN];
+
+	if ((s = socket(AF_INET, SOCK_DGRAM, 0)) == -1)
+		return (0);
+
+        memset(&ifr, 0, sizeof(ifr));
+        ifr.ifr_data = (caddr_t)&nwid;
+	(void)strlcpy(ifr.ifr_name, interface, sizeof(ifr.ifr_name));
+        inwid = ioctl(s, SIOCG80211NWID, (caddr_t)&ifr);
+
+	memset(&bssid, 0, sizeof(bssid));
+	strlcpy(bssid.i_name, interface, sizeof(bssid.i_name));
+	ibssid = ioctl(s, SIOCG80211BSSID, &bssid);
+
+	if (ibssid != 0 || inwid != 0) {
+		close(s);
+		return 0;
+	}
+
+	/* NWID */
+	{
+		if (nwid.i_len <= IEEE80211_NWID_LEN)
+			len = nwid.i_len + 1;
+		else
+			len = IEEE80211_NWID_LEN + 1;
+
+		strncpy(&info->essid[0], nwid.i_nwid, len);
+		info->essid[IW_ESSID_MAX_SIZE] = '\0';
+		info->flags |= WIRELESS_INFO_FLAG_HAS_ESSID;
+	}
+
+	/* Signal strength */
+	{
+		memset(&zero_bssid, 0, sizeof(zero_bssid));
+		if (ibssid == 0 && memcmp(bssid.i_bssid, zero_bssid, IEEE80211_ADDR_LEN) != 0) {
+			memcpy(&ea.ether_addr_octet, bssid.i_bssid, sizeof(ea.ether_addr_octet));
+
+			bzero(&nr, sizeof(nr));
+			bcopy(bssid.i_bssid, &nr.nr_macaddr, sizeof(nr.nr_macaddr));
+			strlcpy(nr.nr_ifname, interface, sizeof(nr.nr_ifname));
+
+			if (ioctl(s, SIOCG80211NODE, &nr) == 0 && nr.nr_rssi) {
+				if (nr.nr_max_rssi)
+					info->signal_level_max = IEEE80211_NODEREQ_RSSI(&nr);
+				else
+					info->signal_level = nr.nr_rssi;
+
+		                info->flags |= WIRELESS_INFO_FLAG_HAS_SIGNAL;
+			}
+		}
+	}
+
+	close(s);
+	return 1;
+#endif
 	return 0;
 }
 
@@@@ -230,6 +305,15 @@@@ void print_wireless_info(yajl_gen json_gen, char *buff
 
         INSTANCE(interface);
 
+	const char *ip_address = get_ip_addr(interface);
+	if (ip_address == NULL) {
+		START_COLOR("color_bad");
+		outwalk += sprintf(outwalk, "%s", format_down);
+		goto out;
+	} else {
+		START_COLOR("color_good");
+	}
+
         if (get_wireless_info(interface, &info)) {
                 walk = format_up;
                 if (info.flags & WIRELESS_INFO_FLAG_HAS_QUALITY)
@@@@ -291,9 +375,8 @@@@ void print_wireless_info(yajl_gen json_gen, char *buff
                 }
 
                 if (BEGINS_WITH(walk+1, "ip")) {
-                        const char *ip_address = get_ip_addr(interface);
-                        outwalk += sprintf(outwalk, "%s", (ip_address ? ip_address : "no IP"));
-                        walk += strlen("ip");
+			outwalk += sprintf(outwalk, "%s", ip_address);
+			walk += strlen("ip");
                 }
 
 #ifdef LINUX
@@@@ -308,6 +391,7 @@@@ void print_wireless_info(yajl_gen json_gen, char *buff
 #endif
         }
d18 2
a19 4
+out:
         END_COLOR;
         OUTPUT_FULL_TEXT(buffer);
 }
@


1.5
log
@sync comments; everything is upstream now.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_print_wireless_info_c,v 1.4 2012/10/10 07:20:16 jasper Exp $
@


1.4
log
@first patches merged upstream.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_print_wireless_info_c,v 1.3 2012/10/09 11:32:45 jasper Exp $
d8 4
a11 5


- handle down wireless interfaces just like ethernet interfaces (e.g. colors!)
  (added bonus of this approach is that you still get nwid and signal strength
  info of the interface, for example when it's part of a trunk device.)
@


1.3
log
@- honor color_good too.
@
text
@d1 8
a8 1
$OpenBSD: patch-src_print_wireless_info_c,v 1.2 2012/10/09 11:29:24 jasper Exp $
a9 1
- implement %signal and %essid
@


1.2
log
@- handle down wireless interfaces just like ethernet interfaces (e.g. colors!)
  (added bonus of this approach is that you still get nwid and signal strength
  info of the interface, for example when it's part of a trunk device.)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_print_wireless_info_c,v 1.1 2012/10/08 18:07:06 jasper Exp $
d9 1
a9 1
+++ src/print_wireless_info.c	Tue Oct  9 15:15:53 2012
d99 1
a99 1
@@@@ -230,6 +305,13 @@@@ void print_wireless_info(yajl_gen json_gen, char *buff
d108 2
d115 1
a115 1
@@@@ -291,9 +373,8 @@@@ void print_wireless_info(yajl_gen json_gen, char *buff
d127 1
a127 1
@@@@ -308,6 +389,7 @@@@ void print_wireless_info(yajl_gen json_gen, char *buff
@


1.1
log
@- implement getting the nwid and signal strength.
@
text
@d1 1
a1 1
$OpenBSD$
d4 3
d8 2
a9 2
--- src/print_wireless_info.c.orig	Mon Oct  8 22:01:00 2012
+++ src/print_wireless_info.c	Mon Oct  8 22:01:10 2012
d28 1
a28 2
@@@@ -219,6 +230,70 @@@@ static int get_wireless_info(const char *interface, wi
         }
d31 1
a31 1
+#endif
d95 31
d127 5
a131 1
 	return 0;
@

