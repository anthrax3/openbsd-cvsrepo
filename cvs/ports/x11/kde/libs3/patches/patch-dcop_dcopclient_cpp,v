head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.30
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.28
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.26
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.22
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.24
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.07.03.17.05.12;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.1
log
@fix SO_PEERCRED fallout
@
text
@$OpenBSD$
--- dcop/dcopclient.cpp.orig	Sat Jul  3 11:01:35 2010
+++ dcop/dcopclient.cpp	Sat Jul  3 11:02:07 2010
@@@@ -715,7 +715,7 @@@@ bool DCOPClient::isSuspended() const
 // Check whether the remote end is owned by the same user.
 static bool peerIsUs(int sockfd)
 {
-    struct ucred cred;
+    struct sockpeercred cred;
     socklen_t siz = sizeof(cred);
     if (getsockopt(sockfd, SOL_SOCKET, SO_PEERCRED, &cred, &siz) != 0)
         return false;
@
