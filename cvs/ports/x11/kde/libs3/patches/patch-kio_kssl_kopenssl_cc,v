head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.28
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.26
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.24
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.20
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.22
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.18
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.16
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.12
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.10
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.8
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_3_1:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2010.10.06.08.13.32;	author landry;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.01.08.25.26;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2002.08.16.19.49.27;	author brad;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.08.16.20.05.08;	author brad;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.08.16.23.21.45;	author brad;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Unbreak after openssl update, diff from kili@@, commiting on his behalf.
Similar diff from benoit@@ on ports..
@
text
@$OpenBSD$
--- kio/kssl/kopenssl.cc.orig	Sat Jul 22 10:16:39 2006
+++ kio/kssl/kopenssl.cc	Sun Oct  3 19:52:18 2010
@@@@ -96,9 +96,8 @@@@ static int  (*K_BIO_write) (BIO *b, const void *data, 
 static int (*K_PEM_ASN1_write_bio) (int (*)(),const char *,BIO *,char *,
                                    const EVP_CIPHER *,unsigned char *,int ,
                                             pem_password_cb *, void *) = 0L;
-static ASN1_METHOD* (*K_X509_asn1_meth) (void) = 0L;
-static int (*K_ASN1_i2d_fp)(int (*)(),FILE *,unsigned char *) = 0L;
-static int (*K_i2d_ASN1_HEADER)(ASN1_HEADER *, unsigned char **) = 0L;
+static int (*K_ASN1_item_i2d_fp)(ASN1_ITEM *,FILE *,unsigned char *) = 0L;
+static ASN1_ITEM *K_NETSCAPE_X509_it = 0L;
 static int (*K_X509_print_fp)  (FILE *, X509*) = 0L;
 static int (*K_i2d_PKCS12)  (PKCS12*, unsigned char**) = 0L;
 static int (*K_i2d_PKCS12_fp)  (FILE *, PKCS12*) = 0L;
@@@@ -404,9 +403,8 @@@@ KConfig *cfg;
       K_BIO_ctrl = (long (*) (BIO *,int,long,void *)) _cryptoLib->symbol("BIO_ctrl");
       K_BIO_write = (int (*) (BIO *b, const void *data, int len)) _cryptoLib->symbol("BIO_write");
       K_PEM_ASN1_write_bio = (int (*)(int (*)(), const char *,BIO*, char*, const EVP_CIPHER *, unsigned char *, int, pem_password_cb *, void *)) _cryptoLib->symbol("PEM_ASN1_write_bio");
-      K_X509_asn1_meth = (ASN1_METHOD* (*)(void)) _cryptoLib->symbol("X509_asn1_meth");
-      K_ASN1_i2d_fp = (int (*)(int (*)(), FILE*, unsigned char *)) _cryptoLib->symbol("ASN1_i2d_fp");
-      K_i2d_ASN1_HEADER = (int (*)(ASN1_HEADER *, unsigned char **)) _cryptoLib->symbol("i2d_ASN1_HEADER");
+      K_ASN1_item_i2d_fp = (int (*)(ASN1_ITEM *, FILE*, unsigned char *)) _cryptoLib->symbol("ASN1_item_i2d_fp");
+      K_NETSCAPE_X509_it = (ASN1_ITEM *) _cryptoLib->symbol("NETSCAPE_X509_it");
       K_X509_print_fp = (int (*)(FILE*, X509*)) _cryptoLib->symbol("X509_print_fp");
       K_i2d_PKCS12 = (int (*)(PKCS12*, unsigned char**)) _cryptoLib->symbol("i2d_PKCS12");
       K_i2d_PKCS12_fp = (int (*)(FILE *, PKCS12*)) _cryptoLib->symbol("i2d_PKCS12_fp");
@@@@ -568,7 +566,7 @@@@ KConfig *cfg;
       K_SSL_set_session = (int (*)(SSL*,SSL_SESSION*)) _sslLib->symbol("SSL_set_session");
       K_d2i_SSL_SESSION = (SSL_SESSION* (*)(SSL_SESSION**,unsigned char**, long)) _sslLib->symbol("d2i_SSL_SESSION");
       K_i2d_SSL_SESSION = (int (*)(SSL_SESSION*,unsigned char**)) _sslLib->symbol("i2d_SSL_SESSION");
-      K_SSL_get_ciphers = (STACK *(*)(const SSL*)) _sslLib->symbol("SSL_get_ciphers");
+      K_SSL_get_ciphers = (STACK_OF(SSL_CIPHER) *(*)(const SSL*)) _sslLib->symbol("SSL_get_ciphers");
 #endif
 
 
@@@@ -956,19 +954,11 @@@@ int KOpenSSLProxy::PEM_write_bio_X509(BIO *bp, X509 *x
    else return -1;
 }
 
-
-ASN1_METHOD *KOpenSSLProxy::X509_asn1_meth(void) {
-   if (K_X509_asn1_meth) return (K_X509_asn1_meth)();
-   else return 0L;
-}
-
-
 int KOpenSSLProxy::ASN1_i2d_fp(FILE *out,unsigned char *x) {
-   if (K_ASN1_i2d_fp && K_i2d_ASN1_HEADER)
-        return (K_ASN1_i2d_fp)((int (*)())K_i2d_ASN1_HEADER, out, x);
+   if (K_ASN1_item_i2d_fp && K_NETSCAPE_X509_it)
+        return (K_ASN1_item_i2d_fp)(K_NETSCAPE_X509_it, out, x);
    else return -1;
 }
-
 
 int KOpenSSLProxy::X509_print(FILE *fp, X509 *x) {
    if (K_X509_print_fp) return (K_X509_print_fp)(fp, x);
@


1.2
log
@kde 3.0.3, incorporated kssl changes...
@
text
@d1 34
a34 20
$OpenBSD: patch-kio_kssl_kopenssl_cc,v 1.1 2002/08/16 19:49:27 brad Exp $
--- kio/kssl/kopenssl.cc.orig	Wed Apr 10 18:00:44 2002
+++ kio/kssl/kopenssl.cc	Wed Aug 14 13:05:38 2002
@@@@ -105,6 +105,7 @@@@ static int (*K_SSL_CTX_use_certificate) 
 static int (*K_SSL_get_error) (SSL*, int) = NULL;
 static STACK_OF(X509)* (*K_SSL_get_peer_cert_chain) (SSL*) = NULL;
 static void (*K_X509_STORE_CTX_set_chain) (X509_STORE_CTX *, STACK_OF(X509)*) = NULL;
+static void (*K_X509_STORE_CTX_set_purpose) (X509_STORE_CTX *, int) = NULL;
 static void (*K_sk_free) (STACK*) = NULL;
 static int (*K_sk_num) (STACK*) = NULL;
 static char* (*K_sk_pop) (STACK*) = NULL;
@@@@ -348,6 +349,7 @@@@ KConfig *cfg;
       K_X509_REQ_free = (void (*)(X509_REQ*)) _cryptoLib->symbol("X509_REQ_free");
       K_X509_REQ_new = (X509_REQ* (*)()) _cryptoLib->symbol("X509_REQ_new");
       K_X509_STORE_CTX_set_chain = (void (*)(X509_STORE_CTX *, STACK_OF(X509)*)) _cryptoLib->symbol("X509_STORE_CTX_set_chain");
+      K_X509_STORE_CTX_set_purpose = (void (*)(X509_STORE_CTX *, int)) _cryptoLib->symbol("X509_STORE_CTX_set_purpose");
       K_sk_free = (void (*) (STACK *)) _cryptoLib->symbol("sk_free");
       K_sk_num = (int (*) (STACK *)) _cryptoLib->symbol("sk_num");
       K_sk_pop = (char* (*) (STACK *)) _cryptoLib->symbol("sk_pop");
@@@@ -930,6 +932,10 @@@@ char *KOpenSSLProxy::sk_value(STACK *s, 
d36 3
a38 6
 void KOpenSSLProxy::X509_STORE_CTX_set_chain(X509_STORE_CTX *v, STACK_OF(X509)* x) {
    if (K_X509_STORE_CTX_set_chain) (K_X509_STORE_CTX_set_chain)(v,x);
+}
+
+void KOpenSSLProxy::X509_STORE_CTX_set_purpose(X509_STORE_CTX *v, int purpose) {
+   if (K_X509_STORE_CTX_set_purpose) (K_X509_STORE_CTX_set_purpose)(v,purpose);
d41 15
d57 2
@


1.1
log
@Bring in fix for KSSL sub-system.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@MFC:
Bring in fix for KSSL sub-system.
@
text
@@


1.1.2.2
log
@fix offsets
@
text
@d1 4
a4 4
$OpenBSD: patch-kio_kssl_kopenssl_cc,v 1.1.2.1 2002/08/16 20:05:08 brad Exp $
--- kio/kssl/kopenssl.cc.orig	Thu Mar 21 21:25:46 2002
+++ kio/kssl/kopenssl.cc	Fri Aug 16 19:19:55 2002
@@@@ -104,6 +104,7 @@@@ static int (*K_SSL_CTX_use_certificate) 
d12 1
a12 1
@@@@ -346,6 +347,7 @@@@ KConfig *cfg;
d20 1
a20 1
@@@@ -920,6 +922,10 @@@@ char *KOpenSSLProxy::sk_value(STACK *s, 
@


