head	1.11;
access;
symbols
	OPENBSD_6_0:1.11.0.38
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.34
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.36
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.32
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.30
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.28
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.26
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.24
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.22
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.20
	OPENBSD_5_0:1.11.0.18
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.16
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.14
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.12
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.10
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.8
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.6
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.4
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.10.0.4
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4;
locks; strict;
comment	@# @;


1.11
date	2007.03.31.23.33.34;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2006.06.03.12.47.30;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.29.14.00.12;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2005.06.14.02.01.25;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2005.06.02.14.01.26;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.01.22.33.13;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2005.03.29.21.18.36;	author espie;	state dead;
branches;
next	1.4;

1.4
date	2005.02.27.07.25.51;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.12.11.33.24;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.26.19.13.01;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.19.00.26.46;	author espie;	state Exp;
branches;
next	;


desc
@@


1.11
log
@regen patches. fix long character decode.
@
text
@$OpenBSD: patch-kdecore_network_kresolver_cpp,v 1.10 2006/06/03 12:47:30 espie Exp $
--- kdecore/network/kresolver.cpp.orig	Sat Jul 22 10:16:40 2006
+++ kdecore/network/kresolver.cpp	Sat Mar 31 15:09:22 2007
@@@@ -66,6 +66,10 @@@@
 QMutex getXXbyYYmutex;
 #endif
 
+#ifdef __OpenBSD__
+#define USE_OPENBSD 1
+#endif
+
 using namespace KNetwork;
 using namespace KNetwork::Internal;
 
@@@@ -616,17 +620,28 @@@@ QStrList KResolver::protocolName(int protonum)
   pe = getprotobynumber(protonum);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct protoent protobuf;
+  struct protoent_data pdata;
+  ::memset(&pdata, 0, sizeof pdata);
+
+  if (getprotobynumber_r(protonum, &protobuf, &pdata) == 0)
+    pe = &protobuf;
+  else
+    pe = 0;
+
+# else
   size_t buflen = 1024;
   struct protoent protobuf;
   char *buf;
   do
     {
       buf = new char[buflen];
-# ifdef USE_SOLARIS // Solaris uses a 4 argument getprotobynumber_r which returns struct *protoent or NULL
+#  ifdef USE_SOLARIS // Solaris uses a 4 argument getprotobynumber_r which returns struct *protoent or NULL
       if ((pe = getprotobynumber_r(protonum, &protobuf, buf, buflen)) && (errno == ERANGE))
-# else
+#  else
       if (getprotobynumber_r(protonum, &protobuf, buf, buflen, &pe) == ERANGE)
-# endif
+#  endif
 	{
           pe = 0L;
 	  buflen += 1024;
@@@@ -636,6 +651,7 @@@@ QStrList KResolver::protocolName(int protonum)
 	break;
     }
   while (pe == 0L);
+# endif
 #endif
 
   // Do common processing
@@@@ -648,7 +664,9 @@@@ QStrList KResolver::protocolName(int protonum)
     }
 
 #ifdef HAVE_GETPROTOBYNAME_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return lst;
@@@@ -663,17 +681,27 @@@@ QStrList KResolver::protocolName(const char *protoname
   pe = getprotobyname(protoname);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct protoent protobuf;
+  struct protoent_data pdata;
+  ::memset(&pdata, 0, sizeof pdata);
+
+  if (getprotobyname_r(protoname, &protobuf, &pdata) == 0)
+    pe = &protobuf;
+  else
+    pe = 0;
+# else
   size_t buflen = 1024;
   struct protoent protobuf;
   char *buf;
   do
     {
       buf = new char[buflen];
-# ifdef USE_SOLARIS // Solaris uses a 4 argument getprotobyname_r which returns struct *protoent or NULL
+#  ifdef USE_SOLARIS // Solaris uses a 4 argument getprotobyname_r which returns struct *protoent or NULL
       if ((pe = getprotobyname_r(protoname, &protobuf, buf, buflen)) && (errno == ERANGE))
-# else
+#  else
       if (getprotobyname_r(protoname, &protobuf, buf, buflen, &pe) == ERANGE)
-# endif
+#  endif
 	{
           pe = 0L;
 	  buflen += 1024;
@@@@ -683,6 +711,7 @@@@ QStrList KResolver::protocolName(const char *protoname
 	break;
     }
   while (pe == 0L);
+# endif
 #endif
 
   // Do common processing
@@@@ -695,7 +724,9 @@@@ QStrList KResolver::protocolName(const char *protoname
     }
 
 #ifdef HAVE_GETPROTOBYNAME_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return lst;
@@@@ -710,17 +741,28 @@@@ int KResolver::protocolNumber(const char *protoname)
   pe = getprotobyname(protoname);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct protoent protobuf;
+  struct protoent_data pdata;
+  ::memset(&pdata, 0, sizeof pdata);
+
+  if (getprotobyname_r(protoname, &protobuf, &pdata) == 0)
+    pe = &protobuf;
+  else
+    pe = 0;
+
+# else
   size_t buflen = 1024;
   struct protoent protobuf;
   char *buf;
   do
     {
       buf = new char[buflen];
-# ifdef USE_SOLARIS // Solaris uses a 4 argument getprotobyname_r which returns struct *protoent or NULL
+#  ifdef USE_SOLARIS // Solaris uses a 4 argument getprotobyname_r which returns struct *protoent or NULL
       if ((pe = getprotobyname_r(protoname, &protobuf, buf, buflen)) && (errno == ERANGE))
-# else
+#  else
       if (getprotobyname_r(protoname, &protobuf, buf, buflen, &pe) == ERANGE)
-# endif
+#  endif
 	{
           pe = 0L;
 	  buflen += 1024;
@@@@ -730,6 +772,7 @@@@ int KResolver::protocolNumber(const char *protoname)
 	break;
     }
   while (pe == 0L);
+# endif
 #endif
 
   // Do common processing
@@@@ -738,7 +781,9 @@@@ int KResolver::protocolNumber(const char *protoname)
     protonum = pe->p_proto;
 
 #ifdef HAVE_GETPROTOBYNAME_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return protonum;
@@@@ -753,17 +798,27 @@@@ int KResolver::servicePort(const char *servname, const
   se = getservbyname(servname, protoname);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct servent servbuf;
+  struct servent_data sdata;
+  ::memset(&sdata, 0, sizeof sdata);
+  if (getservbyname_r(servname, protoname, &servbuf, &sdata) == 0)
+    se = &servbuf;
+  else
+    se = 0;
+
+# else
   size_t buflen = 1024;
   struct servent servbuf;
   char *buf;
   do
     {
       buf = new char[buflen];
-# ifdef USE_SOLARIS // Solaris uses a 5 argument getservbyname_r which returns struct *servent or NULL
+#  ifdef USE_SOLARIS // Solaris uses a 5 argument getservbyname_r which returns struct *servent or NULL
       if ((se = getservbyname_r(servname, protoname, &servbuf, buf, buflen)) && (errno == ERANGE))
-# else
+#  else
       if (getservbyname_r(servname, protoname, &servbuf, buf, buflen, &se) == ERANGE)
-# endif
+#  endif
 	{
           se = 0L;
 	  buflen += 1024;
@@@@ -781,7 +836,9 @@@@ int KResolver::servicePort(const char *servname, const
     servport = ntohs(se->s_port);
 
 #ifdef HAVE_GETSERVBYNAME_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return servport;
@@@@ -796,17 +853,27 @@@@ QStrList KResolver::serviceName(const char* servname, 
   se = getservbyname(servname, protoname);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct servent servbuf;
+  struct servent_data sdata;
+  ::memset(&sdata, 0, sizeof sdata);
+  if (getservbyname_r(servname, protoname, &servbuf, &sdata) == 0)
+    se = &servbuf;
+  else
+    se = 0;
+
+# else
   size_t buflen = 1024;
   struct servent servbuf;
   char *buf;
   do
     {
       buf = new char[buflen];
-# ifdef USE_SOLARIS // Solaris uses a 5 argument getservbyname_r which returns struct *servent or NULL
+#  ifdef USE_SOLARIS // Solaris uses a 5 argument getservbyname_r which returns struct *servent or NULL
       if ((se = getservbyname_r(servname, protoname, &servbuf, buf, buflen)) && (errno == ERANGE))
-# else
+#  else
       if (getservbyname_r(servname, protoname, &servbuf, buf, buflen, &se) == ERANGE)
-# endif
+#  endif
 	{
           se = 0L;
 	  buflen += 1024;
@@@@ -816,6 +883,7 @@@@ QStrList KResolver::serviceName(const char* servname, 
 	break;
     }
   while (se == 0L);
+# endif
 #endif
 
   // Do common processing
@@@@ -828,7 +896,9 @@@@ QStrList KResolver::serviceName(const char* servname, 
     }
 
 #ifdef HAVE_GETSERVBYNAME_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return lst;
@@@@ -843,17 +913,27 @@@@ QStrList KResolver::serviceName(int port, const char *
   se = getservbyport(port, protoname);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct servent servbuf;
+  struct servent_data sdata;
+  ::memset(&sdata, 0, sizeof sdata);
+  if (getservbyport_r(port, protoname, &servbuf, &sdata) == 0)
+    se = &servbuf;
+  else
+    se = 0;
+
+# else
   size_t buflen = 1024;
   struct servent servbuf;
   char *buf;
   do
     {
       buf = new char[buflen];
-# ifdef USE_SOLARIS // Solaris uses a 5 argument getservbyport_r which returns struct *servent or NULL
+#  ifdef USE_SOLARIS // Solaris uses a 5 argument getservbyport_r which returns struct *servent or NULL
       if ((se = getservbyport_r(port, protoname, &servbuf, buf, buflen)) && (errno == ERANGE))
-# else
+#  else
       if (getservbyport_r(port, protoname, &servbuf, buf, buflen, &se) == ERANGE)
-# endif
+#  endif
 	{
           se = 0L;
 	  buflen += 1024;
@@@@ -863,6 +943,8 @@@@ QStrList KResolver::serviceName(int port, const char *
 	break;
     }
   while (se == 0L);
+# endif
+# endif
 #endif
 
   // Do common processing
@@@@ -875,7 +957,9 @@@@ QStrList KResolver::serviceName(int port, const char *
     }
 
 #ifdef HAVE_GETSERVBYPORT_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return lst;
@


1.10
log
@minor update to 3.5.3, integrate libidn support (some more changes to come
to WANTLIB in packages dependent on KDE).
@
text
@d1 3
a3 3
$OpenBSD: patch-kdecore_network_kresolver_cpp,v 1.9 2005/11/29 14:00:12 espie Exp $
--- kdecore/network/kresolver.cpp.orig	Mon May 22 20:14:19 2006
+++ kdecore/network/kresolver.cpp	Sun May 28 13:22:11 2006
d15 1
a15 1
@@@@ -616,17 +620,28 @@@@ QStrList KResolver::protocolName(int pro
d47 1
a47 1
@@@@ -636,6 +651,7 @@@@ QStrList KResolver::protocolName(int pro
d55 1
a55 1
@@@@ -648,7 +664,9 @@@@ QStrList KResolver::protocolName(int pro
d65 1
a65 1
@@@@ -663,17 +681,27 @@@@ QStrList KResolver::protocolName(const c
d96 1
a96 1
@@@@ -683,6 +711,7 @@@@ QStrList KResolver::protocolName(const c
d104 1
a104 1
@@@@ -695,7 +724,9 @@@@ QStrList KResolver::protocolName(const c
d114 1
a114 1
@@@@ -710,17 +741,28 @@@@ int KResolver::protocolNumber(const char
d146 1
a146 1
@@@@ -730,6 +772,7 @@@@ int KResolver::protocolNumber(const char
d154 1
a154 1
@@@@ -738,7 +781,9 @@@@ int KResolver::protocolNumber(const char
d164 1
a164 1
@@@@ -753,17 +798,27 @@@@ int KResolver::servicePort(const char *s
d195 1
a195 1
@@@@ -781,7 +836,9 @@@@ int KResolver::servicePort(const char *s
d205 1
a205 1
@@@@ -796,17 +853,27 @@@@ QStrList KResolver::serviceName(const ch
d236 1
a236 1
@@@@ -816,6 +883,7 @@@@ QStrList KResolver::serviceName(const ch
d244 1
a244 1
@@@@ -828,7 +896,9 @@@@ QStrList KResolver::serviceName(const ch
d254 1
a254 1
@@@@ -843,17 +913,27 @@@@ QStrList KResolver::serviceName(int port
d285 1
a285 1
@@@@ -863,6 +943,8 @@@@ QStrList KResolver::serviceName(int port
d294 1
a294 1
@@@@ -875,7 +957,9 @@@@ QStrList KResolver::serviceName(int port
@


1.9
log
@KDE 3.5.0, the beginning...

(samba/cups subpackages to fix library issues)
@
text
@d1 3
a3 3
$OpenBSD: patch-kdecore_network_kresolver_cpp,v 1.8 2005/06/14 02:01:25 espie Exp $
--- kdecore/network/kresolver.cpp.orig	Mon Oct 10 17:06:02 2005
+++ kdecore/network/kresolver.cpp	Mon Nov 21 12:00:08 2005
d45 1
d47 1
a47 2
 	  delete [] buf;
@@@@ -635,6 +650,7 @@@@ QStrList KResolver::protocolName(int pro
d55 1
a55 1
@@@@ -647,7 +663,9 @@@@ QStrList KResolver::protocolName(int pro
d65 1
a65 1
@@@@ -662,17 +680,27 @@@@ QStrList KResolver::protocolName(const c
d94 1
d96 1
a96 2
 	  delete [] buf;
@@@@ -681,6 +709,7 @@@@ QStrList KResolver::protocolName(const c
d104 1
a104 1
@@@@ -693,7 +722,9 @@@@ QStrList KResolver::protocolName(const c
d114 1
a114 1
@@@@ -708,17 +739,28 @@@@ int KResolver::protocolNumber(const char
d144 1
d146 1
a146 2
 	  delete [] buf;
@@@@ -727,6 +769,7 @@@@ int KResolver::protocolNumber(const char
d154 1
a154 1
@@@@ -735,7 +778,9 @@@@ int KResolver::protocolNumber(const char
d164 1
a164 1
@@@@ -750,17 +795,27 @@@@ int KResolver::servicePort(const char *s
d193 1
d195 1
a195 2
 	  delete [] buf;
@@@@ -777,7 +832,9 @@@@ int KResolver::servicePort(const char *s
d205 1
a205 1
@@@@ -792,17 +849,27 @@@@ QStrList KResolver::serviceName(const ch
d234 1
d236 1
a236 2
 	  delete [] buf;
@@@@ -811,6 +878,7 @@@@ QStrList KResolver::serviceName(const ch
d244 1
a244 1
@@@@ -823,7 +891,9 @@@@ QStrList KResolver::serviceName(const ch
d254 1
a254 1
@@@@ -838,17 +908,27 @@@@ QStrList KResolver::serviceName(int port
d283 1
d285 1
a285 2
 	  delete [] buf;
@@@@ -857,6 +937,8 @@@@ QStrList KResolver::serviceName(int port
d294 1
a294 1
@@@@ -869,7 +951,9 @@@@ QStrList KResolver::serviceName(int port
@


1.8
log
@can't believe no-one noticed printing was foobar'ed.
dyslexia in memset, sigh...
@
text
@d1 4
a4 4
$OpenBSD: patch-kdecore_network_kresolver_cpp,v 1.7 2005/06/02 14:01:26 espie Exp $
--- kdecore/network/kresolver.cpp.orig	Mon May 23 14:16:17 2005
+++ kdecore/network/kresolver.cpp	Tue Jun 14 03:37:23 2005
@@@@ -64,6 +64,10 @@@@
d15 1
a15 1
@@@@ -614,17 +618,28 @@@@ QStrList KResolver::protocolName(int pro
d47 1
a47 1
@@@@ -633,6 +648,7 @@@@ QStrList KResolver::protocolName(int pro
d55 1
a55 1
@@@@ -645,7 +661,9 @@@@ QStrList KResolver::protocolName(int pro
d65 1
a65 1
@@@@ -660,17 +678,27 @@@@ QStrList KResolver::protocolName(const c
d96 1
a96 1
@@@@ -679,6 +707,7 @@@@ QStrList KResolver::protocolName(const c
d104 1
a104 1
@@@@ -691,7 +720,9 @@@@ QStrList KResolver::protocolName(const c
d114 1
a114 1
@@@@ -706,17 +737,28 @@@@ int KResolver::protocolNumber(const char
d146 1
a146 1
@@@@ -725,6 +767,7 @@@@ int KResolver::protocolNumber(const char
d154 1
a154 1
@@@@ -733,7 +776,9 @@@@ int KResolver::protocolNumber(const char
d164 1
a164 1
@@@@ -748,17 +793,27 @@@@ int KResolver::servicePort(const char *s
d195 1
a195 1
@@@@ -775,7 +830,9 @@@@ int KResolver::servicePort(const char *s
d205 1
a205 1
@@@@ -790,17 +847,27 @@@@ QStrList KResolver::serviceName(const ch
d236 1
a236 1
@@@@ -809,6 +876,7 @@@@ QStrList KResolver::serviceName(const ch
d244 1
a244 1
@@@@ -821,7 +889,9 @@@@ QStrList KResolver::serviceName(const ch
d254 1
a254 1
@@@@ -836,17 +906,27 @@@@ QStrList KResolver::serviceName(int port
d285 1
a285 1
@@@@ -855,6 +935,8 @@@@ QStrList KResolver::serviceName(int port
d294 1
a294 1
@@@@ -867,7 +949,9 @@@@ QStrList KResolver::serviceName(int port
@


1.7
log
@update to 3.4.1
@
text
@d1 1
a1 1
$OpenBSD: patch-kdecore_network_kresolver_cpp,v 1.6 2005/04/01 22:33:13 espie Exp $
d3 1
a3 1
+++ kdecore/network/kresolver.cpp	Wed May 25 20:39:11 2005
d22 1
a22 1
+  ::memset(&pdata, sizeof pdata, 0);
d72 1
a72 1
+  ::memset(&pdata, sizeof pdata, 0);
d121 1
a121 1
+  ::memset(&pdata, sizeof pdata, 0);
d171 1
a171 1
+  ::memset(&sdata, sizeof sdata, 0);
d212 1
a212 1
+  ::memset(&sdata, sizeof sdata, 0);
d261 1
a261 1
+  ::memset(&sdata, sizeof sdata, 0);
@


1.6
log
@oops, missed a patch (no need to bump package name since it didn't compile)
@
text
@d1 3
a3 3
$OpenBSD$
--- kdecore/network/kresolver.cpp.orig	Fri Mar  4 13:34:39 2005
+++ kdecore/network/kresolver.cpp	Wed Mar 23 09:51:08 2005
d15 1
a15 1
@@@@ -606,17 +610,28 @@@@ QStrList KResolver::protocolName(int pro
d47 1
a47 1
@@@@ -625,6 +640,7 @@@@ QStrList KResolver::protocolName(int pro
d55 1
a55 1
@@@@ -637,7 +653,9 @@@@ QStrList KResolver::protocolName(int pro
d65 1
a65 1
@@@@ -652,17 +670,27 @@@@ QStrList KResolver::protocolName(const c
d96 1
a96 1
@@@@ -671,6 +699,7 @@@@ QStrList KResolver::protocolName(const c
d104 1
a104 1
@@@@ -683,7 +712,9 @@@@ QStrList KResolver::protocolName(const c
d114 1
a114 1
@@@@ -698,17 +729,28 @@@@ int KResolver::protocolNumber(const char
d146 1
a146 1
@@@@ -717,6 +759,7 @@@@ int KResolver::protocolNumber(const char
d154 1
a154 1
@@@@ -725,7 +768,9 @@@@ int KResolver::protocolNumber(const char
d164 1
a164 1
@@@@ -740,17 +785,27 @@@@ int KResolver::servicePort(const char *s
d195 1
a195 1
@@@@ -767,7 +822,9 @@@@ int KResolver::servicePort(const char *s
d205 1
a205 1
@@@@ -782,17 +839,27 @@@@ QStrList KResolver::serviceName(const ch
d236 1
a236 1
@@@@ -801,6 +868,7 @@@@ QStrList KResolver::serviceName(const ch
d244 1
a244 1
@@@@ -813,7 +881,9 @@@@ QStrList KResolver::serviceName(const ch
d254 1
a254 1
@@@@ -828,17 +898,27 @@@@ QStrList KResolver::serviceName(int port
d285 1
a285 1
@@@@ -847,6 +927,8 @@@@ QStrList KResolver::serviceName(int port
d294 1
a294 1
@@@@ -859,7 +941,9 @@@@ QStrList KResolver::serviceName(int port
@


1.5
log
@most of kde 3.4, will finish getting fixed in tree... ;-)
@
text
@d1 6
a6 14
$OpenBSD: patch-kdecore_network_kresolver_cpp,v 1.4 2005/02/27 07:25:51 brad Exp $
--- kdecore/network/kresolver.cpp.orig	Sun Nov 28 12:30:44 2004
+++ kdecore/network/kresolver.cpp	Sun Feb 27 02:18:36 2005
@@@@ -32,6 +32,7 @@@@
 #include <time.h>
 #include <arpa/inet.h>
 #include <netinet/in.h>
+#include <stdlib.h>
 
 // Qt includes
 #include <qapplication.h>
@@@@ -58,6 +59,10 @@@@
 #include "kresolver_p.h"
 #include "ksocketaddress.h"
d15 1
a15 1
@@@@ -622,17 +627,28 @@@@ QStrList KResolver::protocolName(int pro
d47 1
a47 1
@@@@ -641,6 +657,7 @@@@ QStrList KResolver::protocolName(int pro
d55 1
a55 1
@@@@ -653,7 +670,9 @@@@ QStrList KResolver::protocolName(int pro
d65 1
a65 1
@@@@ -668,17 +687,27 @@@@ QStrList KResolver::protocolName(const c
d96 1
a96 1
@@@@ -687,6 +716,7 @@@@ QStrList KResolver::protocolName(const c
d104 1
a104 1
@@@@ -699,7 +729,9 @@@@ QStrList KResolver::protocolName(const c
d114 1
a114 1
@@@@ -714,17 +746,28 @@@@ int KResolver::protocolNumber(const char
d146 1
a146 1
@@@@ -733,6 +776,7 @@@@ int KResolver::protocolNumber(const char
d154 1
a154 1
@@@@ -741,7 +785,9 @@@@ int KResolver::protocolNumber(const char
d164 1
a164 1
@@@@ -756,17 +802,27 @@@@ int KResolver::servicePort(const char *s
d195 1
a195 9
@@@@ -775,6 +831,7 @@@@ int KResolver::servicePort(const char *s
 	break;
     }
   while (se == 0L);
+# endif
 #endif
 
   // Do common processing
@@@@ -783,7 +840,9 @@@@ int KResolver::servicePort(const char *s
d205 1
a205 1
@@@@ -798,17 +857,27 @@@@ QStrList KResolver::serviceName(const ch
d236 1
a236 1
@@@@ -817,6 +886,7 @@@@ QStrList KResolver::serviceName(const ch
d244 1
a244 1
@@@@ -829,7 +899,9 @@@@ QStrList KResolver::serviceName(const ch
d254 1
a254 1
@@@@ -844,17 +916,27 @@@@ QStrList KResolver::serviceName(int port
d285 1
a285 1
@@@@ -863,6 +945,7 @@@@ QStrList KResolver::serviceName(int port
d290 1
d294 1
a294 1
@@@@ -875,7 +958,9 @@@@ QStrList KResolver::serviceName(int port
d297 1
a297 1
 #ifdef HAVE_GETSERVBYNAME_R
a303 19
@@@@ -889,6 +974,9 @@@@ static QString ToUnicode(const QString& 
 // implement the ToAscii function, as described by IDN documents
 QCString KResolver::domainToAscii(const QString& unicodeDomain)
 {
+  if (getenv("KDE_USE_IDN") == 0L)
+    return unicodeDomain.latin1();
+
   QCString retval;
   // RFC 3490, section 4 describes the operation:
   // 1) this is a query, so don't allow unassigned
@@@@ -928,6 +1016,8 @@@@ QString KResolver::domainToUnicode(const
 {
   if (asciiDomain.isEmpty())
     return asciiDomain;
+  if (getenv("KDE_USE_IDN") == 0L)
+    return asciiDomain;;
 
   QString retval;
 
@


1.4
log
@- sync signal race fix
- disable IDN support by default

From: KDE CVS
@
text
@d1 1
a1 1
$OpenBSD: patch-kdecore_network_kresolver_cpp,v 1.3 2004/12/12 11:33:24 espie Exp $
@


1.3
log
@3.3.2 is out, rejoice.
minor update.
@
text
@d1 12
a12 4
$OpenBSD: patch-kdecore_network_kresolver_cpp,v 1.2 2004/10/26 19:13:01 espie Exp $
--- kdecore/network/kresolver.cpp.orig	Sun Nov 28 18:30:44 2004
+++ kdecore/network/kresolver.cpp	Mon Dec  6 11:59:15 2004
@@@@ -58,6 +58,10 @@@@
d23 1
a23 1
@@@@ -622,17 +626,28 @@@@ QStrList KResolver::protocolName(int pro
d55 1
a55 1
@@@@ -641,6 +656,7 @@@@ QStrList KResolver::protocolName(int pro
d63 1
a63 1
@@@@ -653,7 +669,9 @@@@ QStrList KResolver::protocolName(int pro
d73 1
a73 1
@@@@ -668,17 +686,27 @@@@ QStrList KResolver::protocolName(const c
d104 1
a104 1
@@@@ -687,6 +715,7 @@@@ QStrList KResolver::protocolName(const c
d112 1
a112 1
@@@@ -699,7 +728,9 @@@@ QStrList KResolver::protocolName(const c
d122 1
a122 1
@@@@ -714,17 +745,28 @@@@ int KResolver::protocolNumber(const char
d154 1
a154 1
@@@@ -733,6 +775,7 @@@@ int KResolver::protocolNumber(const char
d162 1
a162 1
@@@@ -741,7 +784,9 @@@@ int KResolver::protocolNumber(const char
d172 1
a172 1
@@@@ -756,17 +801,27 @@@@ int KResolver::servicePort(const char *s
d203 1
a203 1
@@@@ -775,6 +830,7 @@@@ int KResolver::servicePort(const char *s
d211 1
a211 1
@@@@ -783,7 +839,9 @@@@ int KResolver::servicePort(const char *s
d221 1
a221 1
@@@@ -798,17 +856,27 @@@@ QStrList KResolver::serviceName(const ch
d252 1
a252 1
@@@@ -817,6 +885,7 @@@@ QStrList KResolver::serviceName(const ch
d260 1
a260 1
@@@@ -829,7 +898,9 @@@@ QStrList KResolver::serviceName(const ch
d270 1
a270 1
@@@@ -844,17 +915,27 @@@@ QStrList KResolver::serviceName(int port
d301 1
a301 1
@@@@ -863,6 +944,7 @@@@ QStrList KResolver::serviceName(int port
d309 1
a309 1
@@@@ -875,7 +957,9 @@@@ QStrList KResolver::serviceName(int port
d319 19
@


1.2
log
@tweak code so it works with our new get*_r functions.
@
text
@d1 3
a3 3
$OpenBSD: patch-kdecore_network_kresolver_cpp,v 1.1 2004/10/19 00:26:46 espie Exp $
--- kdecore/network/kresolver.cpp.orig	Sun Oct  3 09:40:16 2004
+++ kdecore/network/kresolver.cpp	Tue Oct 26 20:04:49 2004
d262 1
a262 8
@@@@ -838,23 +909,33 @@@@ QStrList KResolver::serviceName(const ch
 QStrList KResolver::serviceName(int port, const char *protoname)
 {
   struct servent *se;
-#ifndef HAVE_GETSERVBYNAME_R
+#ifndef HAVE_GETSERVBYPORT_R
   QMutexLocker locker(&getXXbyYYmutex);
 
@


1.1
log
@and the 3 patches I forgot to add.
@
text
@d1 262
a262 4
$OpenBSD$
--- kdecore/network/kresolver.cpp.orig	Wed Oct 13 15:35:31 2004
+++ kdecore/network/kresolver.cpp	Wed Oct 13 15:47:46 2004
@@@@ -838,7 +838,7 @@@@ QStrList KResolver::serviceName(const ch
d271 47
@

