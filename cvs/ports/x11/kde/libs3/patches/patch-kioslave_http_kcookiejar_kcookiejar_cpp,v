head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.18
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.16
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.12
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.10
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2013.01.21.19.12.21;	author zhuk;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.18.09.46.36;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2004.08.25.21.48.39;	author robert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix a decade old KDE bug regarding cross-domain cookies handling:
http://paritynews.com/software/item/569-decade-old-kde-bug-fixed

"sure" ajacoutot@@
@
text
@$OpenBSD$
Fix lost cookies problem. Backported from upstream:
https://projects.kde.org/projects/kde/kdelibs/repository/revisions/794b14b8af5b610fc3eed6945f93f0c69dd49a9a
--- kioslave/http/kcookiejar/kcookiejar.cpp.orig	Mon Jan 21 22:47:42 2013
+++ kioslave/http/kcookiejar/kcookiejar.cpp	Mon Jan 21 22:48:09 2013
@@@@ -146,6 +146,7 @@@@ KHttpCookie::KHttpCookie(const QString &_host,
        mExpireDate(_expireDate),
        mProtocolVersion(_protocolVersion),
        mSecure(_secure),
+       mCrossDomain(false),
        mHttpOnly(_httpOnly),
        mExplicitPath(_explicitPath)
 {
@


1.2
log
@removed patches, better synched global patches.
@
text
@d1 12
a12 24
$OpenBSD: patch-kioslave_http_kcookiejar_kcookiejar_cpp,v 1.1 2004/08/25 21:48:39 robert Exp $
--- kioslave/http/kcookiejar/kcookiejar.cpp.orig	Sun May 30 16:24:43 2004
+++ kioslave/http/kcookiejar/kcookiejar.cpp	Tue Aug 24 00:15:39 2004
@@@@ -244,6 +244,14 @@@@
     m_globalAdvice = KCookieDunno;
     m_configChanged = false;
     m_cookiesChanged = false;
+
+    QString twoLevelTLD="name,ai,au,bd,bh,ck,eg,et,fk,il,in,kh,kr,mk,mt,na,np,nz,pg,pk,qa,sa,sb,sg,sv,ua,ug,uk,uy,vn,za,zw";
+    QStringList countries = QStringList::split(',', twoLevelTLD);
+    for(QStringList::ConstIterator it = countries.begin();
+        it != countries.end(); ++it)
+    {
+       m_twoLevelTLD.replace(*it, (int *) 1);
+    }
 }
 
 //
@@@@ -528,14 +536,14 @@@@
 
 }
 
-static void stripDomain(const QString &_fqdn, QString &_domain)
+void KCookieJar::stripDomain(const QString &_fqdn, QString &_domain)
a13 40
    QStringList domains;
-   KCookieJar::extractDomains(_fqdn, domains);
+   extractDomains(_fqdn, domains);
    _domain = domains[0];
 }
 
-static QString stripDomain( KHttpCookiePtr cookiePtr)
+QString KCookieJar::stripDomain( KHttpCookiePtr cookiePtr)
 {
     QString domain; // We file the cookie under this domain.
     if (cookiePtr->domain().isEmpty())
@@@@ -620,6 +628,13 @@@@
     {
        if (partList.count() == 1)
          break; // We only have a TLD left.
+       
+       if ((partList.count() == 2) && (m_twoLevelTLD[partList[1].lower()]))
+       {
+          // This domain uses two-level TLDs in the form xxxx.yy
+          break;
+       }
+       
        if ((partList.count() == 2) && (partList[1].length() == 2))
        {
           // If this is a TLD, we should stop. (e.g. co.uk)
@@@@ -633,14 +648,6 @@@@
           if ((t == "com") || (t == "net") || (t == "org") || (t == "gov") || (t == "edu") || (t == "mil") || (t == "int"))
               break;
        }
-
-       // The .name domain uses <name>.<surname>.name
-       // Although the TLD is striclty speaking .name, for our purpose
-       // it should be <surname>.name since people should not be able
-       // to set cookies for everyone with the same surname.
-       // Matches <surname>.name
-       if ((partList.count() == 2)&& (partList[1].lower() == L1("name")))
-          break;
 
        QString domain = partList.join(L1("."));
        _domains.append('.' + domain);
@


1.1
log
@SECURITY:
Web sites operating under the affected domains can set HTTP
cookies in such a way that the Konqueror web browser will send them
to all other web sites operating under the same domain.
A malicious website can use this as part of a session fixation attack.
http://www.kde.org/info/security/advisory-20040823-1.txt

ok pvalchev@@
@
text
@d1 1
a1 1
$OpenBSD$
@

