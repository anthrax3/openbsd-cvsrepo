head	1.3;
access;
symbols
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2004.02.01.14.59.23;	author espie;	state dead;
branches;
next	1.2;

1.2
date	2003.01.27.19.16.47;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.09.20.17.23;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@basic import of kde 3.1.95, still missing a few parts.

TODO:
- compile the missing packages.
- redo konsole fixes for our ttys.
- figure out why kuickshow is broken.
- make sure we get all dependencies.
- repair kscd.
- find out why nsplugins does not like the native jdk.
- figure out how to get kvim to work.
- change filenames or adjust check-lib-depends to cope.
@
text
@$OpenBSD: patch-kdecore_kprocess_cpp,v 1.2 2003/01/27 19:16:47 espie Exp $
--- kdecore/kprocess.cpp.orig	Fri Jan  3 05:56:52 2003
+++ kdecore/kprocess.cpp	Mon Jan 13 14:18:02 2003
@@@@ -293,7 +293,7 @@@@ bool KProcess::start(RunMode runmode, Co
   int fd[2];
   if (0 > pipe(fd))
   {
-     fd[0] = fd[1] = 0; // Pipe failed.. continue
+     fd[0] = fd[1] = -1; // Pipe failed.. continue
   }
 
   runs = true;
@@@@ -305,7 +305,7 @@@@ bool KProcess::start(RunMode runmode, Co
   pid_ = fork();
 
   if (0 == pid_) {
-        if (fd[0])
+        if (fd[0] >= 0)
            close(fd[0]);
         if (!runPrivileged())
         {
@@@@ -335,11 +335,11 @@@@ bool KProcess::start(RunMode runmode, Co
 
         // We set the close on exec flag.
         // Closing of fd[1] indicates that the execvp succeeded!
-        if (fd[1])
+        if (fd[1] >= 0)
           fcntl(fd[1], F_SETFD, FD_CLOEXEC);
         execvp(arglist[0], arglist);
         char resultByte = 1;
-        if (fd[1])
+        if (fd[1] >= 0)
           write(fd[1], &resultByte, 1);
         _exit(-1);
   } else if (-1 == pid_) {
@@@@ -349,7 +349,7 @@@@ bool KProcess::start(RunMode runmode, Co
         free(arglist);
         return false;
   } else {
-        if (fd[1])
+        if (fd[1] >= 0)
           close(fd[1]);
         // the parent continues here
 
@@@@ -357,7 +357,7 @@@@ bool KProcess::start(RunMode runmode, Co
         input_data = 0;
 
         // Check whether client could be started.
-        if (fd[0]) for(;;)
+        if (fd[0] >= 0) for(;;)
         {
            char resultByte;
            int n = ::read(fd[0], &resultByte, 1);
@@@@ -377,7 +377,7 @@@@ bool KProcess::start(RunMode runmode, Co
            }
            break; // success
         }
-        if (fd[0])
+        if (fd[0] >= 0)
            close(fd[0]);
 
         if (!commSetupDoneP())  // finish communication socket setup for the parent
@


1.2
log
@kdelibs-3.1: getaddrinfo is marked as non thread-safe in main archive now.
@
text
@d1 1
a1 1
$OpenBSD: patch-kdecore_kprocess_cpp,v 1.1 2003/01/09 20:17:23 espie Exp $
@


1.1
log
@fd neutral value is -1.
Probably not a bug, but this doesn't hurt.
@
text
@d1 4
a4 4
$OpenBSD$
--- kdecore/kprocess.cpp.orig	Thu Jan  9 21:07:01 2003
+++ kdecore/kprocess.cpp	Thu Jan  9 21:08:22 2003
@@@@ -261,7 +261,7 @@@@ bool KProcess::start(RunMode runmode, Co
d13 1
a13 1
@@@@ -273,7 +273,7 @@@@ bool KProcess::start(RunMode runmode, Co
d22 1
a22 1
@@@@ -303,11 +303,11 @@@@ bool KProcess::start(RunMode runmode, Co
d36 1
a36 1
@@@@ -317,7 +317,7 @@@@ bool KProcess::start(RunMode runmode, Co
d45 1
a45 1
@@@@ -325,7 +325,7 @@@@ bool KProcess::start(RunMode runmode, Co
d54 1
a54 1
@@@@ -345,7 +345,7 @@@@ bool KProcess::start(RunMode runmode, Co
@

