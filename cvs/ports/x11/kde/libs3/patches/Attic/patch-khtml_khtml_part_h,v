head	1.3;
access;
symbols
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_3:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2004.09.18.09.46.36;	author espie;	state dead;
branches;
next	1.2;

1.2
date	2004.08.14.18.03.48;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.06.14.23.02;	author brad;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.08.06.14.23.02;	author brad;	state Exp;
branches;
next	;


desc
@@


1.3
log
@removed patches, better synched global patches.
@
text
@$OpenBSD: patch-khtml_khtml_part_h,v 1.2 2004/08/14 18:03:48 brad Exp $
--- khtml/khtml_part.h.orig	Sun Apr  4 03:08:39 2004
+++ khtml/khtml_part.h	Fri Aug 13 16:04:22 2004
@@@@ -287,6 +287,7 @@@@ public:
    */
   KParts::BrowserExtension *browserExtension() const;
   KParts::LiveConnectExtension *liveConnectExtension( const khtml::RenderPart *) const;
+  KParts::BrowserHostExtension *browserHostExtension() const;
 
   /**
    * Returns a pointer to the HTML document's view.
@@@@ -812,6 +813,16 @@@@ public:
   KHTMLPart *findFrame( const QString &f );
 
   /**
+   * @@internal
+   * Recursively finds the part containing the frame with name @@p f 
+   * and checks if it is accessible by @@p callingPart
+   * Returns 0L if no suitable frame can't be found.
+   * Returns parent part if a suitable frame was found and
+   * frame info in @@p *childFrame
+   */
+  KHTMLPart *findFrameParent( KParts::ReadOnlyPart *callingPart, const QString &f, khtml::ChildFrame **childFrame=0 );
+
+  /**
    * Return the current frame (the one that has focus)
    * Not necessarily a direct child of ours, framesets can be nested.
    * Returns "this" if this part isn't a frameset.
@@@@ -1368,6 +1379,8 @@@@ private:
 
   bool restoreURL( const KURL &url );
   void emitSelectionChanged();
+  // Returns whether callingHtmlPart may access this part
+  bool checkFrameAccess(KHTMLPart *callingHtmlPart);
   bool openURLInFrame( const KURL &url, const KParts::URLArgs &urlArgs );
   void startAutoScroll();
   void stopAutoScroll();
@@@@ -1426,7 +1439,7 @@@@ private:
   DOM::DocumentImpl *xmlDocImpl() const;
   khtml::ChildFrame *frame( const QObject *obj );
 
-  khtml::ChildFrame *recursiveFrameRequest( const KURL &url, const KParts::URLArgs &args, bool callParent = true );
+  khtml::ChildFrame *recursiveFrameRequest( KHTMLPart *callingHtmlPart, const KURL &url, const KParts::URLArgs &args, bool callParent = true );
 
   bool checkLinkSecurity( const KURL &linkURL,const QString &message = QString::null, const QString &button = QString::null );
   QVariant executeScript( const QString& filename, int baseLine, const DOM::Node &n, const QString& script );
@


1.2
log
@fix 3 security issues.

http://www.kde.org/info/security/advisory-20040811-1.txt
http://www.kde.org/info/security/advisory-20040811-2.txt
http://www.kde.org/info/security/advisory-20040811-3.txt

ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@file patch-khtml_khtml_part_h was initially added on branch OPENBSD_3_3.
@
text
@d1 46
@


1.1.2.1
log
@Fix Konqueror Referer Leaking Website Authentication Credentials issue

http://marc.theaimsgroup.com/?l=bugtraq&m=105949563522672&w=2
@
text
@a0 15
$OpenBSD$
--- khtml/khtml_part.h.orig	Fri Jan  3 17:25:25 2003
+++ khtml/khtml_part.h	Sun Aug  3 21:41:55 2003
@@@@ -701,6 +701,11 @@@@ public:
   QString referrer() const;
 
   /**
+   * Referrer used to obtain this page.
+   */
+  QString pageReferrer() const;
+
+  /**
    * Last-modified date (in raw string format), if received in the [HTTP] headers.
    */
   QString lastModified() const;
@

