head	1.2;
access;
symbols
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.09.18.09.46.36;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2004.08.14.18.03.48;	author brad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@removed patches, better synched global patches.
@
text
@$OpenBSD: patch-kparts_browserextension_h,v 1.1 2004/08/14 18:03:48 brad Exp $
--- kparts/browserextension.h.orig	Sun Oct 26 03:54:24 2003
+++ kparts/browserextension.h	Fri Aug 13 16:04:22 2004
@@@@ -671,10 +671,16 @@@@ public:
    *
    * Note that this method does not query the child objects recursively.
    */
-
   virtual const QPtrList<KParts::ReadOnlyPart> frames() const;
 
   /**
+   * @@internal
+   * Returns the part that contains @@p frame and that may be accessed
+   * by @@p callingPart
+   */
+  BrowserHostExtension *findFrameParent(KParts::ReadOnlyPart *callingPart, const QString &frame);
+
+  /**
    * Opens the given url in a hosted child frame. The frame name is specified in the
    * frameName variable in the urlArgs argument structure (see KParts::URLArgs ) .
    */
@@@@ -687,6 +693,19 @@@@ public:
   static BrowserHostExtension *childObject( QObject *obj );
 
 protected:
+  /** This 'enum' along with the structure below is NOT part of the public API.
+   * It's going to disappear in KDE 4.0 and is likely to change inbetween.
+   *
+   * @@internal
+   */
+  enum { VIRTUAL_FIND_FRAME_PARENT = 0x10 };
+  struct FindFrameParentParams
+  {
+      BrowserHostExtension *parent;
+      KParts::ReadOnlyPart *callingPart;
+      QString frame;
+  };
+                                                    
   virtual void virtual_hook( int id, void* data );
 private:
   class BrowserHostExtensionPrivate;
@


1.1
log
@fix 3 security issues.

http://www.kde.org/info/security/advisory-20040811-1.txt
http://www.kde.org/info/security/advisory-20040811-2.txt
http://www.kde.org/info/security/advisory-20040811-3.txt

ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
@

