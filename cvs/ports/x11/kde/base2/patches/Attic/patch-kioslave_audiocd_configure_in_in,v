head	1.4;
access;
symbols
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2002.09.11.17.43.42;	author espie;	state dead;
branches;
next	1.3;

1.3
date	2001.09.19.14.13.28;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.26.12.04.44;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.23.22.25.49;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@ditch the files.
@
text
@--- kioslave/audiocd/configure.in.in.orig	Wed Sep  5 01:16:12 2001
+++ kioslave/audiocd/configure.in.in	Tue Sep 18 23:11:59 2001
@@@@ -38,6 +38,11 @@@@ if test "x$with_cdparanoia" = "xCHECK" ;
         break
       fi
     done
+    for dir in $kde_libraries /usr/lib /usr/local/lib; do
+	if ls $dir|grep "^libcdda_paranoia.so.*" 2>&1 >/dev/null; then
+	    ext=so
+	fi
+    done
     if test "$with_cdparanoia" = FOUND; then
       if test "$ext" = la; then
         grep "^library_names='*[a-z]*'" $para_libdir/libcdda_paranoia.$ext 2>&1 > /dev/null || with_cdparanoia=NOTFOUND
@@@@ -139,9 +144,11 @@@@ NOTFOUND) AC_MSG_RESULT(searched but not
   fi
   non_compile=no
   if test "x$enable_lametest" = xyes ; then
+    ac_save_CXXFLAGS="$CXXFLAGS"
     ac_save_CFLAGS="$CFLAGS"
     ac_save_LIBS="$LIBS"
     CFLAGS="$CFLAGS $all_includes $LAME_INCS"
+    CXXFLAGS="$CFLAGS $all_includes $LAME_INCS"
     LIBS="$LIBS $all_libraries $LAME_LIBS"
     rm -f conf.lametest conf.wrongver
     AC_TRY_RUN([
@@@@ -164,6 +171,7 @@@@ int main ()
 }
 ], , non_compile=yes , [echo $ac_n "cross compiling; assumed OK... $ac_c"])
     CFLAGS="$ac_save_CFLAGS"
+    CXXFLAGS="$ac_save_CXXFLAGS"
     LIBS="$ac_save_LIBS"
     # bogus return value, but it _did_ run correctly
     test -f conf.lametest && non_compile=no
@@@@ -181,6 +189,7 @@@@ int main ()
       # only do this test, if it really didn't run
       echo "*** Could not run Lame test program, checking why..."
       CFLAGS="$CFLAGS $all_includes $LAME_INCS"
+      CXXFLAGS="$CFLAGS $all_includes $LAME_INCS"
       LIBS="$LIBS $all_libraries $LAME_LIBS"
       AC_TRY_LINK([
 #include <stdio.h>
@@@@ -207,6 +216,7 @@@@ echo "*** or that you have moved Lame si
       # ac_save_* still set, because this else part is only entered if the
       # enable_lametest was yes, in which case also ac_save_* was set.
       CFLAGS="$ac_save_CFLAGS"
+      CXXFLAGS="$ac_save_CXXFLAGS"
       LIBS="$ac_save_LIBS"
     fi
     LAME_INCS=
@


1.3
log
@Update to 2.2.1.
Some patches folded back.
ksysguardd from Sebastian Stark. Doesn't work squeaky-clean yet, but at
least some people can look at it now...
@
text
@@


1.2
log
@lame support
Somewhat sneaky: link against a `stub' lame library so that the dependency
is a build dependency.

This allows us to put a lame-enabled kdebase on the CD: it will refer to
the stub library by default. When you grab a newer lame, it will have
a higher minor number, and be used instead (this is the old ssl/crypto
trick).
@
text
@d1 2
a2 2
--- kioslave/audiocd/configure.in.in.orig	Sun Jul 29 06:56:35 2001
+++ kioslave/audiocd/configure.in.in	Sat Aug 25 14:14:01 2001
a50 51
@@@@ -266,7 +276,7 @@@@ no) AC_MSG_RESULT(no) ;;
 NOTFOUND) AC_MSG_RESULT(searched but not found) ;;
 *)
   if test "x$with_vorbis" = "xFOUND" ; then
-    msg="incs=$vorbis_libdir libs=$vorbis_incdir"
+    msg="incs=$vorbis_incdir libs=$vorbis_libdir"
   else
     msg="$with_vorbis"
     VORBIS_ROOT="$with_vorbis"
@@@@ -280,8 +290,10 @@@@ NOTFOUND) AC_MSG_RESULT(searched but not
   non_compile=no
   if test "x$enable_vorbistest" = xyes ; then
     ac_save_CFLAGS="$CFLAGS"
+    ac_save_CXXFLAGS="$CXXFLAGS"
     ac_save_LIBS="$LIBS"
     CFLAGS="$CFLAGS $all_includes $VORBIS_INCS"
+    CXXFLAGS="$CXXFLAGS $all_includes $VORBIS_INCS"
     LIBS="$LIBS $all_libraries $VORBIS_LIBS"
     rm -f conf.vorbistest
     AC_TRY_RUN([
@@@@ -298,6 +310,7 @@@@ int main ()
 
 ], , non_compile=yes , [echo $ac_n "cross compiling; assumed OK... $ac_c"])
     CFLAGS="$ac_save_CFLAGS"
+    CXXFLAGS="$ac_save_CXXFLAGS"
     LIBS="$ac_save_LIBS"
     # bogus return value, but it _did_ run
     test -f conf.vorbistest && non_compile="no"
@@@@ -308,12 +321,13 @@@@ int main ()
      AC_MSG_RESULT($msg)
      AC_DEFINE_UNQUOTED(HAVE_VORBIS, 1, [Define if you have vorbis])
      VORBISFILE_LIBS="-lvorbisfile"
-     VORBISENC_LIBS="-lvorbisenc"
+     VORBISENC_LIBS="-lvorbisenc -lvorbis"
      KCM_AUDIOCD="kcmaudiocd"	
   else
      AC_MSG_RESULT(no (but first try gave $msg))
      echo "*** Could not run Vorbis test program, checking why..."
      CFLAGS="$CFLAGS $all_includes $VORBIS_INCS"
+     CXXFLAGS="$CXXFLAGS $all_includes $VORBIS_INCS"
      LIBS="$LIBS $all_libraries $VORBIS_LIBS"
      AC_TRY_LINK([
 #include <stdio.h>
@@@@ -332,6 +346,7 @@@@ int main ()
      echo "*** exact error that occured. This usually means Vorbis was incorrectly installed"
      echo "*** or that you have moved Vorbis since it was installed." ])
      CFLAGS="$ac_save_CFLAGS"
+     CXXFLAGS="$ac_save_CXXFLAGS"
      LIBS="$ac_save_LIBS"
      VORBIS_INCS=""
      VORBIS_LIBS=""
@


1.1
log
@Make it compile with cdparanoia, even though it doesn't quite work yet.

Move kdmrc creation to pkg_install time (fries@@)
@
text
@d2 1
a2 1
+++ kioslave/audiocd/configure.in.in	Thu Aug 23 22:38:05 2001
d15 37
a51 1
@@@@ -266,7 +271,7 @@@@ no) AC_MSG_RESULT(no) ;;
d60 1
a60 1
@@@@ -280,8 +285,10 @@@@ NOTFOUND) AC_MSG_RESULT(searched but not
d71 1
a71 1
@@@@ -298,6 +305,7 @@@@ int main ()
d79 1
a79 1
@@@@ -308,12 +316,13 @@@@ int main ()
d94 1
a94 1
@@@@ -332,6 +341,7 @@@@ int main ()
@

