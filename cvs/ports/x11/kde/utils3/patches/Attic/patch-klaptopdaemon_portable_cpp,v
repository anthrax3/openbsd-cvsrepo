head	1.12;
access;
symbols
	OPENBSD_5_9:1.11.0.30
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.32
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.28
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.26
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.24
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.22
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.20
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.18
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.16
	OPENBSD_5_0:1.11.0.14
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.12
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.10
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.8
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.6
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.4
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.2
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.12
date	2016.04.29.21.10.24;	author zhuk;	state dead;
branches;
next	1.11;
commitid	u9TvebbKy1wgQMr9;

1.11
date	2008.03.26.11.11.42;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2007.08.10.16.07.28;	author kurt;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.25.09.49.56;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2006.06.03.12.47.31;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.18.14.17.23;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.18.13.56.26;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.30.23.37.39;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2004.02.02.10.53.21;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.07.20.19.15;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.17.21.00.59;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.27.20.05.50;	author espie;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Remove KDE3 applications that have well-working KDE4+ counterparts.
@
text
@$OpenBSD: patch-klaptopdaemon_portable_cpp,v 1.11 2008/03/26 11:11:42 espie Exp $
--- klaptopdaemon/portable.cpp.orig	Wed Feb 13 10:38:14 2008
+++ klaptopdaemon/portable.cpp	Wed Mar 26 10:54:47 2008
@@@@ -40,6 +40,7 @@@@
 //	Linux 		(#if __linux__)
 //	FreeBSD		(#elif __FreeBSD__)
 //	NetBSD		(#elif __NetBSD_APM__)
+//	OpenBSD		(#elif __OpenBSD__)
 //	generic nothing	(#else)
 //
 //
@@@@ -2794,6 +2795,390 @@@@ laptop_portable::get_battery_status(int &num_batteries
 	values.append(s);
 }
 
+ 
+#elif	(__OpenBSD__ && (__i386__ || __powerpc__))
+	/* This tries to get OpenBSD i386 and MacPPC, but will 
+	 * cause some grumpies on other PPC-based arches.
+	 */
+
+/*
+ * OpenBSD support for klaptopdaemon by Ian Darwin
+ * based on my KDE2 "kapm" program; some error handling
+ * patterned on the FreeBSD code above.
+ *
+ * Note that you must NOT run apmd because this code uses the
+ * APM control device directly; maybe a later version
+ * will talk to apmd instead.
+ */
+
+#include <errno.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <fcntl.h>
+#include <err.h>
+#include <sys/types.h>
+#include <sys/ioctl.h>
+#include <machine/apmvar.h>
+
+#define _PATH_APM_NORMAL        "/dev/apm"
+#define _PATH_APM_CTLDEV        "/dev/apmctl"
+
+static struct apm_power_info bsdAPM;
+
+void
+laptop_portable::power_management_restart()
+{
+	// INSERT HERE
+}
+
+//
+//	returns 1 if we support power management
+//
+int
+laptop_portable::has_power_management()
+{
+	int fdd = open(_PATH_APM_NORMAL, O_RDONLY),
+		fdc = open(_PATH_APM_CTLDEV, O_RDWR);
+	if (fdd == -1) {
+		perror(_PATH_APM_NORMAL);	// debug only
+	} 
+	if (fdc == -1) {
+		perror(_PATH_APM_CTLDEV);	// debug only
+	} 
+	close(fdd);
+	close(fdc);
+	return fdd != -1 && fdc != -1;
+}
+//
+//	returns 1 if the BIOS returns time left in battery rather than % of full
+//	This version always uses % as IMHO it is more reliable than time.
+int laptop_portable::has_battery_time()
+{
+	return false;
+}
+
+//	returns 1 if we can perform a change-to-suspend-mode operation for the user
+//	(has_power_management() has already returned 1)
+//
+int laptop_portable::has_suspend()
+{
+	int fd = open(_PATH_APM_CTLDEV, O_RDWR);
+	close(fd);
+	return fd != -1;
+}
+
+//	returns 1 if we can perform a change-to-standby-mode operation for the user
+//	(has_power_management() has already returned 1)
+//
+int laptop_portable::has_standby()
+{
+	int fd = open(_PATH_APM_CTLDEV, O_RDWR);
+	close(fd);
+	return fd != -1;
+}
+
+//	returns 1 if we can perform a change-to-hibernate-mode for a user
+//      (has_power_management() has already returned 1)
+//		[hibernate is the save-to-disk mode -- not supported by linux]
+//
+int laptop_portable::has_hibernation()
+{
+	return false;
+}
+
+//
+//	explain what user needs to do if has_power_management() returned 0
+//	to get any software they lack
+//
+KActiveLabel *laptop_portable::no_power_management_explanation(QWidget *parent)
+{
+	int fdd, fdc;
+	KActiveLabel* explain = NULL;
+
+	if ((fdd = open(_PATH_APM_NORMAL, O_RDONLY)) == -1) {
+		switch (errno) {
+		case ENOENT:
+			explain = new KActiveLabel(i18n("There is no " _PATH_APM_NORMAL 
+			" file on this system. Use MAKEDEV or mknod to create one."), parent);
+			break;
+		case EPERM:
+			explain = new KActiveLabel(i18n("Your system has support for apm, but "
+			"you don't have permission to access it.  Check permissions on "
+			 _PATH_APM_NORMAL), parent);
+			break;
+		case ENXIO:
+			explain = new KActiveLabel(i18n("Your kernel lacks support for Advanced Power Managment."), parent);
+			break;
+		default:
+			explain = new KActiveLabel(i18n("There was an unknown error opening "
+			_PATH_APM_NORMAL), parent);
+			break;
+		}
+	}
+	if (explain != NULL)
+		goto out;
+
+	if ((fdc = open(_PATH_APM_CTLDEV, O_RDWR)) == -1)
+	switch(errno) {
+	case EPERM:
+			explain = new KActiveLabel(i18n("Your system has support for apm, but "
+			"you don't have permission to access it. Check permissions " 
+			"on " _PATH_APM_CTLDEV), parent);
+			break;
+	case EBUSY:
+		explain = new KActiveLabel(i18n("Your system has APM but you cannot open the "
+		"control device " _PATH_APM_CTLDEV " as it is in use "
+		"(possibly by apmd?)"), parent);
+		break;
+	default:
+		explain = new KActiveLabel(i18n("Other error opening "
+			"APM control device " _PATH_APM_CTLDEV), parent);
+		break;
+	}
+out:
+	close(fdd);
+	close(fdc);
+	if (explain == NULL)
+		explain = new KActiveLabel(i18n("Not sure why APM is not functioning??"), parent);
+	explain->setMinimumSize(explain->sizeHint());
+	return(explain);
+}
+
+//
+//	explain to the user what they need to do to get suspend/resume to work from user mode
+//
+QLabel *laptop_portable::how_to_do_suspend_resume(QWidget *parent)
+{
+	QLabel* note = new QLabel(i18n(" "), parent);
+
+	note->setMinimumSize(note->sizeHint());
+	return(note);
+}
+
+//	pcmcia support - this will be replaced by better - pcmcia support being worked on by
+//	others
+//
+QLabel *laptop_portable::pcmcia_info(int x, QWidget *parent)
+{
+		return(new QLabel(i18n("No PCMCIA controller detected"), parent));
+}
+
+//	puts the system into standby mode
+//
+void laptop_portable::invoke_standby()
+{
+	int fd = open(_PATH_APM_CTLDEV, O_RDWR);
+
+	if (ioctl(fd, APM_IOC_STANDBY) != 0) {
+		perror("APM_IOC_STANDBY");
+		close(fd);
+	} 
+	close(fd);
+}
+
+//	puts the system into suspend mode
+//
+void laptop_portable::invoke_suspend()
+{
+	int fd = open(_PATH_APM_CTLDEV, O_RDWR);
+
+	if (ioctl(fd, APM_IOC_SUSPEND) != 0) {
+		perror("APM_IOC_SUSPEND");
+		close(fd);
+	}
+	close(fd);
+}
+
+//	puts the system into hibernate mode
+//
+void laptop_portable::invoke_hibernation()
+{
+	// ???
+}
+
+//
+//ACPI specific - chances are you don't need to implement this one
+//
+void
+laptop_portable::acpi_set_mask(bool, bool, bool, bool, bool )
+{
+	// INSERT HERE
+}
+
+int laptop_portable::has_acpi(int)
+{
+	// INSERT HERE
+	return (0);
+}
+
+void
+laptop_portable::apm_set_mask(bool, bool)
+{
+	// INSERT HERE
+}
+
+int laptop_portable::has_apm(int)
+{
+	// INSERT HERE
+	return (0);
+}
+
+
+//
+//	adds extra widgets to the battery panel
+//
+void
+laptop_portable::extra_config(QWidget *parent, KConfig *config, QVBoxLayout *layout)
+{
+	// INSERT HERE
+}
+
+//	return current battery state
+//
+struct power_result laptop_portable::poll_battery_state()
+{
+	int fd;
+	static struct power_result p;
+
+	p.powered = 0;
+	p.percentage = 0;
+	p.time = 0;
+	if ((fd = open(_PATH_APM_CTLDEV, O_RDWR)) == -1)
+		return(p);
+	if (ioctl(fd, APM_IOC_GETPOWER, &bsdAPM) != 0) {
+		close(fd);
+		return p;
+	}
+	p.powered =    bsdAPM.ac_state == APM_AC_ON;
+	p.percentage = bsdAPM.battery_life;
+	p.time =       bsdAPM.minutes_left;
+	close(fd);
+
+	return p;
+}
+
+ 
+//
+//	return the system load 
+//	
+
+bool laptop_portable::has_lav() { return 0; }
+
+float laptop_portable::get_load_average()
+{
+	// INSERT HERE
+	return(-1);
+}
+
+int laptop_portable::has_cpufreq() {
+	// INSERT HERE
+	return 0;
+}
+
+QString laptop_portable::cpu_frequency() {
+	// INSERT HERE
+	return "";
+}
+
+int
+laptop_portable::has_brightness()
+{
+	// INSERT HERE
+	return 0;
+}
+
+void 
+laptop_portable::set_brightness(bool blank, int val)	// val = 0-255 255 brightest, 0 means dimmest (if !blank it must be still visible), 
+{
+	// INSERT HERE
+}
+
+int 
+laptop_portable::get_brightness()
+{
+	// INSERT HERE
+	return(-1);	// means can't extract it
+}
+
+bool
+laptop_portable::get_system_performance(bool, int &current, QStringList &s, bool *&)	 // do something to help get system profiles from places like ACPI
+{	
+	// INSERT HERE
+	current = 0;
+	s.clear();
+	return(0);	// if no profiles are available
+}
+
+bool
+laptop_portable::get_system_throttling(bool, int&current, QStringList&s, bool*&)
+{
+	// INSERT HERE
+	current = 0;
+	s.clear();
+	return(0);
+}
+
+void
+laptop_portable::set_system_performance(QString)
+{
+	// INSERT HERE
+}
+
+void
+laptop_portable::set_system_throttling(QString)
+{
+	// INSERT HERE
+}
+
+bool
+laptop_portable::has_button(LaptopButton)	// true if we have support for a particular button
+{
+	// INSERT HERE
+	return(0);
+}
+
+bool
+laptop_portable::get_button(LaptopButton)	// true if a button is pressed
+{
+	// INSERT HERE
+	return(0);
+}
+
+void
+laptop_portable::get_battery_status(int &num_batteries, QStringList &names, QStringList &state, QStringList &values) // get multiple battery status
+{
+	struct power_result r;
+
+	if (!has_power_management()) {
+		num_batteries = 0;
+		names.clear();
+		state.clear();
+		values.clear();
+		return;
+	}
+
+	// INSERT HERE
+	
+	num_batteries = 1;
+	r = poll_battery_state();
+	names.append("BAT1");
+	state.append("yes");
+	QString s;
+	s.setNum(r.percentage);
+	values.append(s);
+}
+
+bool
+laptop_portable::has_software_suspend(int type)
+{
+	return false; // (::has_software_suspend(type));
+}
+
+void
+laptop_portable::software_suspend_set_mask(bool hibernate)
+{
+	// software_suspend_is_preferred = hibernate;
+}
 #else
 
 /*
@


1.11
log
@3.5.9
tweak for statvfs
@
text
@d1 1
a1 1
$OpenBSD: patch-klaptopdaemon_portable_cpp,v 1.10 2007/08/10 16:07:28 kurt Exp $
@


1.10
log
@fix kded startup crash when launched from start_kdeinit due to undefined
symbols. okay espie@@
@
text
@d1 3
a3 3
$OpenBSD: patch-klaptopdaemon_portable_cpp,v 1.9 2007/05/25 09:49:56 espie Exp $
--- klaptopdaemon/portable.cpp.orig	Mon May 14 03:40:45 2007
+++ klaptopdaemon/portable.cpp	Wed Aug  8 16:20:57 2007
d12 1
a12 1
@@@@ -2792,6 +2793,390 @@@@ laptop_portable::get_battery_status(int &num_batteries
@


1.9
log
@update a large subset of kde 3 to 3.5.7.
Simplify the infrastructure a bit, and let it compile with libfam, now...
@
text
@d1 3
a3 3
$OpenBSD: patch-klaptopdaemon_portable_cpp,v 1.8 2006/06/03 12:47:31 espie Exp $
--- klaptopdaemon/portable.cpp.orig	Mon May 14 09:40:45 2007
+++ klaptopdaemon/portable.cpp	Thu May 24 02:31:07 2007
d12 2
a13 2
@@@@ -2768,6 +2769,323 @@@@ laptop_portable::get_button(LaptopButton)	// true if a
 	return(0);
a15 24
+void
+laptop_portable::get_battery_status(int &num_batteries, QStringList &names, QStringList &state, QStringList &values) // get multiple battery status
+{
+	struct power_result r;
+
+	if (!has_power_management()) {
+		num_batteries = 0;
+		names.clear();
+		state.clear();
+		values.clear();
+		return;
+	}
+
+	// INSERT HERE
+	
+	num_batteries = 1;
+	r = poll_battery_state();
+	names.append("BAT1");
+	state.append("yes");
+	QString s;
+	s.setNum(r.percentage);
+	values.append(s);
+}
+
d46 6
d217 36
d278 1
d280 6
a285 4
+//	adds extra widgets to the battery panel
+//
+void
+laptop_portable::extra_config(QWidget *parent, KConfig *config, QVBoxLayout *layout)
d287 7
d295 4
a298 5
+ 
+ 
+void
+laptop_portable::apm_set_mask(bool, bool)
+{
d301 2
a302 2
+void
+laptop_portable::software_suspend_set_mask(bool)
d304 2
d308 2
a309 2
+bool
+laptop_portable::get_system_performance(bool, int&current, QStringList&s, bool*&)
d311 1
a311 3
+	current = 0;
+	s.clear();
+	return(0);	// if no profiles are available
d314 2
a315 2
+int
+laptop_portable::has_brightness()
d317 2
a318 1
+	return(0);
d322 6
a327 3
+laptop_portable::has_button(laptop_portable::LaptopButton)
+{
+	return(0);
d333 1
d340 1
a340 1
+laptop_portable::acpi_set_mask(bool, bool, bool, bool, bool)
d342 1
d345 5
a349 1
+bool laptop_portable::has_lav() { return 0; }
d352 1
a352 1
+laptop_portable::has_software_suspend(int type)
d354 2
a355 1
+	return false; // (::has_software_suspend(type));
d358 2
a359 1
+int laptop_portable::has_apm(int)
d362 1
a362 1
+	return (0);
d365 2
a366 1
+int laptop_portable::has_acpi(int)
d368 10
d379 14
a392 1
+	return (0);
d395 8
a402 4
+ 
 void
 laptop_portable::get_battery_status(int &num_batteries, QStringList &names, QStringList &state, QStringList &values) // get multiple battery status
 {
@


1.8
log
@minor update to 3.5.3, integrate libidn support (some more changes to come
to WANTLIB in packages dependent on KDE).
@
text
@d1 3
a3 3
$OpenBSD: patch-klaptopdaemon_portable_cpp,v 1.7 2006/02/18 14:17:23 espie Exp $
--- klaptopdaemon/portable.cpp.orig	Mon May 22 20:08:33 2006
+++ klaptopdaemon/portable.cpp	Fri Jun  2 00:11:26 2006
d12 1
a12 1
@@@@ -2768,6 +2769,323 @@@@ laptop_portable::get_button(LaptopButton
@


1.7
log
@prevent kinfocenter from crashing on pcmcia
@
text
@d1 3
a3 3
$OpenBSD: patch-klaptopdaemon_portable_cpp,v 1.6 2006/02/18 13:56:26 espie Exp $
--- klaptopdaemon/portable.cpp.orig	Thu Jan 19 17:49:17 2006
+++ klaptopdaemon/portable.cpp	Sat Feb 18 15:15:11 2006
d12 1
a12 1
@@@@ -2769,6 +2770,323 @@@@ laptop_portable::get_button(LaptopButton
@


1.6
log
@minimal fixes for the klaptop_daemon, now kcenter no longer crashes.
@
text
@d1 1
a1 1
$OpenBSD: patch-klaptopdaemon_portable_cpp,v 1.5 2005/11/30 23:37:39 espie Exp $
d3 1
a3 1
+++ klaptopdaemon/portable.cpp	Sat Feb 18 14:52:52 2006
d12 1
a12 1
@@@@ -2769,6 +2770,326 @@@@ laptop_portable::get_button(LaptopButton
a198 1
+	if (x == 0)
a199 2
+	else
+		return 0;
@


1.5
log
@3.5
@
text
@d1 3
a3 3
$OpenBSD: patch-klaptopdaemon_portable_cpp,v 1.4 2004/02/02 10:53:21 espie Exp $
--- klaptopdaemon/portable.cpp.orig	Sat Sep 10 10:21:28 2005
+++ klaptopdaemon/portable.cpp	Wed Nov 23 13:30:14 2005
d12 2
a13 2
@@@@ -2793,6 +2794,283 @@@@ laptop_portable::get_battery_status(int 
 	values.append(s);
d16 24
d157 1
a157 1
+	if ((fdc = open(_PATH_APM_CTLDEV, O_RDONLY)) == -1)
d315 19
d336 3
a338 3
 #else
 
 /*
@


1.4
log
@compile 3.1.95.
@
text
@d1 3
a3 3
$OpenBSD: patch-klaptopdaemon_portable_cpp,v 1.3 2003/12/07 20:19:15 espie Exp $
--- klaptopdaemon/portable.cpp.orig	2003-11-30 10:50:47.000000000 +0100
+++ klaptopdaemon/portable.cpp	2004-02-02 11:38:29.000000000 +0100
d12 1
a12 1
@@@@ -2772,6 +2773,283 @@@@ laptop_portable::get_battery_status(int 
@


1.3
log
@update to 3.1.4
@
text
@d1 3
a3 3
$OpenBSD: patch-klaptopdaemon_portable_cpp,v 1.2 2003/03/17 21:00:59 ian Exp $
--- klaptopdaemon/portable.cpp.orig	2003-05-07 13:49:02.000000000 +0200
+++ klaptopdaemon/portable.cpp	2003-12-04 21:42:04.000000000 +0100
d12 2
a13 3
@@@@ -1336,6 +1337,248 @@@@ int laptop_portable::poll_activity()
 {
        return(1);
d15 2
a16 1
+
d240 12
a251 2
+//	returns true if any mouse or kdb activity has been detected
+//	
d253 2
a254 1
+int laptop_portable::poll_activity()
a255 1
+	return(1);
d258 28
a285 3
+//
+//	adds extra widgets to the battery panel
+//
d287 1
a287 1
+laptop_portable::extra_config(QWidget *parent, KConfig *config, QVBoxLayout *layout)
d292 1
a292 1
+
@


1.2
log
@s/_macppc_/_powerpc_/ so klaptopdaemon builds on MacPPC; fix comments.
Commented by drahn@@, ok pval@@.
@
text
@d1 3
a3 3
$OpenBSD: patch-klaptopdaemon_portable_cpp,v 1.1 2003/01/27 20:05:50 espie Exp $
--- klaptopdaemon/portable.cpp.orig	Fri Jan  3 00:07:53 2003
+++ klaptopdaemon/portable.cpp	Wed Feb 26 18:19:51 2003
d12 1
a12 1
@@@@ -1327,6 +1328,248 @@@@ int laptop_portable::poll_activity()
@


1.1
log
@update to 3.1
klaptop daemon code mostly from Ian Darwin.
@
text
@d1 12
a12 4
$OpenBSD$
--- klaptopdaemon/portable.cpp.orig	Sun Oct 27 00:23:22 2002
+++ klaptopdaemon/portable.cpp	Wed Jan  1 15:36:18 2003
@@@@ -1321,6 +1321,245 @@@@ int laptop_portable::poll_activity()
d17 4
a20 1
+#elif	(__OpenBSD__ && (__i386__ || __macppc__))
d27 1
a27 1
+ * Note that you must NOT run apmd as this code uses the
@

