head	1.5;
access;
symbols
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3;
locks; strict;
comment	@# @;


1.5
date	2004.02.01.14.59.22;	author espie;	state dead;
branches;
next	1.4;

1.4
date	2003.12.07.20.19.13;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.27.19.22.50;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.09.22.52.09;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2003.01.09.19.27.05;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@basic import of kde 3.1.95, still missing a few parts.

TODO:
- compile the missing packages.
- redo konsole fixes for our ttys.
- figure out why kuickshow is broken.
- make sure we get all dependencies.
- repair kscd.
- find out why nsplugins does not like the native jdk.
- figure out how to get kvim to work.
- change filenames or adjust check-lib-depends to cope.
@
text
@$OpenBSD: patch-konsole_konsole_konsole_grantpty_c,v 1.4 2003/12/07 20:19:13 espie Exp $
--- konsole/konsole/konsole_grantpty.c.orig	2003-09-01 13:32:01.000000000 +0200
+++ konsole/konsole/konsole_grantpty.c	2003-12-04 03:01:13.000000000 +0100
@@@@ -39,12 +39,66 @@@@
 #  include <paths.h>
 #  include <dirent.h>
 #endif
+#ifdef HAVE_LIBUTIL_H
+        #include <libutil.h>
+#elif defined(HAVE_UTIL_H)
+        #include <util.h>
+#endif
+#include <utmp.h>
+
 
 #define DEFAULT_PTY_FILENO 3 /* keep in sync with TEPty.cpp */
 int PTY_FILENO = DEFAULT_PTY_FILENO;
 
 #define TTY_GROUP "tty"
 
+int perform_login()
+{
+  char *str_ptr;
+  struct utmp l_struct;
+  memset(&l_struct, 0, sizeof(struct utmp));
+
+  if (dup2(PTY_FILENO, 0) == -1)
+  	return 1;
+  if (! (str_ptr=getlogin()) ) {
+    if ( ! (str_ptr=getenv("LOGNAME"))) {
+      return 1;
+    }
+  }
+  strncpy(l_struct.ut_name, str_ptr, UT_NAMESIZE);
+
+  if (gethostname(l_struct.ut_host, UT_HOSTSIZE) == -1) {
+     if (errno != ENOMEM)
+        return 1;
+     l_struct.ut_host[UT_HOSTSIZE]=0;
+  }
+
+  if (! (str_ptr=ttyname(PTY_FILENO)))
+    return 1;
+  if (strncmp(str_ptr, "/dev/", 5) == 0)
+       str_ptr += 5;
+  strncpy(l_struct.ut_line, str_ptr, UT_LINESIZE);
+  time(&l_struct.ut_time);
+
+  login(&l_struct);
+  return 0;
+}
+
+int perform_logout()
+{
+  char *tty_name=ttyname(PTY_FILENO);
+  if (tty_name)
+  {
+  	if (strncmp(tty_name, "/dev/", 5) == 0)
+	    tty_name += 5;
+	if (*tty_name == 'p')
+		*tty_name = 't';
+        logout(tty_name);
+	return 0;
+  }
+  return 1;
+}
+
 int main (int argc, char *argv[])
 {
   char*         pty;
@@@@ -58,7 +112,7 @@@@ int main (int argc, char *argv[])
 
   /* check preconditions **************************************************/
   if (( (argc != 3) && (argc != 2) /* optional third arg */ ) || 
-    (strcmp(argv[1],"--grant") && strcmp(argv[1],"--revoke")))
+    (strcmp(argv[1],"--grant") && strcmp(argv[1],"--revoke") && strcmp(argv[1], "--login") && strcmp(argv[1], "--logout")))
   {
     printf("usage: %s (--grant|--revoke) [fd]\n",argv[0]);
     printf("%s is a helper for\n",argv[0]);
@@@@ -75,6 +129,11 @@@@ int main (int argc, char *argv[])
     return 1; /* FAIL */
   }
 
+  if (!strcmp(argv[1], "--login"))
+  	return perform_login();
+  if (!strcmp(argv[1], "--logout"))
+  	return perform_logout();
+
   /* setup parameters for the operation ***********************************/
 
   if (!strcmp(argv[1],"--grant"))
@


1.4
log
@update to 3.1.4
@
text
@d1 1
a1 1
$OpenBSD: patch-konsole_konsole_konsole_grantpty_c,v 1.3 2003/01/27 19:22:50 espie Exp $
@


1.3
log
@kdebase 3.1:
- use kcontrol/nics/nic.cpp from kde-current to access getifaddrs...
IPv4 masks are not printed properly yet.
- konsole fixes for utmp
- ksysguardd mostly working. Should unify with Net/FreeBSD
- clock and timezone fixes mostly from Flinn Mueller.
- uses kxkb_pic lib, thanks to Matthieu.
@
text
@d1 4
a4 4
$OpenBSD$
--- konsole/konsole/konsole_grantpty.c.orig	Sun Jan 12 15:24:11 2003
+++ konsole/konsole/konsole_grantpty.c	Mon Jan 13 10:02:31 2003
@@@@ -39,10 +39,64 @@@@
d16 3
a18 1
 #define PTY_FILENO 3    /* keep in sync with grantpty */
d71 1
a71 2
@@@@ -54,7 +108,7 @@@@ int main (int argc, char *argv[])
   char*         tty;
d74 3
a76 2
-  if (argc != 2 || (strcmp(argv[1],"--grant") && strcmp(argv[1],"--revoke")))
+  if (argc != 2 || (strcmp(argv[1],"--grant") && strcmp(argv[1],"--revoke") && strcmp(argv[1], "--login") && strcmp(argv[1], "--logout")))
d78 1
a78 1
     printf("usage: %s (--grant|--revoke)\n",argv[0]);
d80 1
a80 2
@@@@ -70,6 +124,11 @@@@ int main (int argc, char *argv[])
     fprintf(stderr,"%s not installed root-suid\n",argv[0]);
d83 1
a83 1
+
d88 1
a88 1
 
d91 1
@


1.2
log
@kill those patches, they work, but it's a stupid idea.
There's no accounting security left if konsole_granpty works on a ttyname
without corresponding rights on a fd.
So, the proper fix will involve figuring out where kprocess/kpty loses that
fd after running the command.
@
text
@d1 5
a5 4
$OpenBSD: patch-konsole_konsole_konsole_grantpty_c,v 1.1 2003/01/09 19:27:05 espie Exp $
--- konsole/konsole/konsole_grantpty.c.orig	Sun Feb 17 18:37:04 2002
+++ konsole/konsole/konsole_grantpty.c	Thu Jan  9 20:17:35 2003
@@@@ -40,6 +40,12 @@@@
d8 4
a11 5
 
+#ifdef __OpenBSD__
+#  include <utmp.h>
+#  include <util.h>
+#  include <fcntl.h>
d13 1
d15 1
d19 51
a69 1
@@@@ -54,9 +60,9 @@@@ int main (int argc, char *argv[])
d74 1
a74 1
+  if (argc != 3 || (strcmp(argv[1],"--grant") && strcmp(argv[1],"--revoke")))
d76 1
a76 2
-    printf("usage: %s (--grant|--revoke)\n",argv[0]);
+    printf("usage: %s (--grant|--revoke) ttyname\n",argv[0]);
d78 2
a79 14
     printf("konsole and not intented to\n");
     printf("be called from the command\n");
@@@@ -82,6 +88,10 @@@@ int main (int argc, char *argv[])
   {
     uid = 0;        /* root */
     mod = S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH;
+#ifdef __OpenBSD__
+	logout(argv[2]+5);
+	exit(0);
+#endif
   }
   /* Get the group ID of the special `tty' group.  */
   p = getgrnam(TTY_GROUP);            /* posix */
@@@@ -176,5 +186,29 @@@@ int main (int argc, char *argv[])
d82 7
a89 26
+#ifdef __OpenBSD__
+  /* Make sure the tty is fd 0, to help login work */
+  dup2(open(tty, O_RDWR), 0);
+  {
+      char *str_ptr;
+      struct utmp l_struct;
+      memset(&l_struct, 0, sizeof(struct utmp));
+
+      if (! (str_ptr=getlogin()) ) {
+	return 1;
+      }
+      strncpy(l_struct.ut_name, str_ptr, UT_NAMESIZE);
+
+      if (gethostname(l_struct.ut_host, UT_HOSTSIZE) == -1) {
+	 if (errno != ENOMEM)
+	    return 1;
+	 l_struct.ut_host[UT_HOSTSIZE]=0;
+      }
+
+      strncpy(l_struct.ut_line, argv[2]+5, UT_LINESIZE);
+      time(&l_struct.ut_time); 
+      login(&l_struct);
+    }
+#endif
   return 0; /* OK */
 }
@


1.1
log
@Make konsole login/logout work.
(The code in kde-current is substantially different, so this won't go in
unchanged)

- use konsole_grantpty to do the login/logout, so that only this program
needs to be setgid utmp.
- pass the ttyname to konsole_grantpty explicitly.
- use openpty to get the ttyname in a simple way.
- deactivate USE_LOGIN on OpenBSD, as login/logout must occur in grantpty.
@
text
@d1 1
a1 1
$OpenBSD$
@

