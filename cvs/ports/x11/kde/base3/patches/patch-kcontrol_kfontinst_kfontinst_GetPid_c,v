head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.22
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.18
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.20
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.16
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.14
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.12
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.10
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.8
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.10
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.07.06.14.51.19;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2010.01.17.09.18.57;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.25.09.49.54;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.30.19.25.23;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Adapt to new OpenBSD kinfo_proc API.

ok jasper@@, sthen@@
@
text
@$OpenBSD: patch-kcontrol_kfontinst_kfontinst_GetPid_c,v 1.3 2010/01/17 09:18:57 espie Exp $
--- kcontrol/kfontinst/kfontinst/GetPid.c.orig	Mon May 14 09:55:38 2007
+++ kcontrol/kfontinst/kfontinst/GetPid.c	Wed Jul  6 16:22:03 2011
@@@@ -55,6 +55,7 @@@@
         Linux         Tested on Linux 2.4
         FreeBSD       Tested on FreeBSD 5.1 by Brian Ledbetter <brian@@shadowcom.net>
         NetBSD
+	OpenBSD
         Irix
         Solaris       Tested on Solaris 8 x86 by Torsten Kasch <tk@@Genetik.Uni-Bielefeld.DE>
         HP-UX         Tested on HP-UX B.11.11 U 9000/800
@@@@ -160,7 +161,7 @@@@ unsigned int kfi_getPid(const char *proc, unsigned int
     return error ? 0 : pid;
 }
 
-#elif defined OS_FreeBSD || defined OS_NetBSD || defined __FreeBSD__ || defined __NetBSD__ || defined OS_Darwin
+#elif defined OS_FreeBSD || defined OS_NetBSD || defined __FreeBSD__ || defined __NetBSD__ || defined OS_Darwin || defined OS_OpenBSD || defined __OpenBSD__
 
 #include <ctype.h>
 #include <dirent.h>
@@@@ -203,7 +204,7 @@@@ unsigned int kfi_getPid(const char *proc, unsigned int
 #elif defined(__DragonFly__) && __DragonFly_version >= 190000
         mib[3] = p[num].kp_pid;
 #else
-        mib[3] = p[num].kp_proc.p_pid;
+        mib[3] = p[num].p_pid;
 #endif
 
         len=sizeof(proc_p);
@@@@ -227,12 +228,12 @@@@ unsigned int kfi_getPid(const char *proc, unsigned int
 #if defined(__DragonFly__)
 	    if(proc_p.kp_eproc.e_ppid==ppid && p[num].kp_thread.td_comm && 0==strcmp(p[num].kp_thread.td_comm, proc))
 #else
-            if(proc_p.kp_eproc.e_ppid==ppid && p[num].kp_proc.p_comm && 0==strcmp(p[num].kp_proc.p_comm, proc))
+            if(proc_p.p_ppid==ppid && p[num].p_comm && 0==strcmp(p[num].p_comm, proc))
 #endif
                 if(pid)
                     error=true;
                 else
-                    pid=p[num].kp_proc.p_pid;
+                    pid=p[num].p_pid;
 #endif
         }
     }
@


1.3
log
@yet more KERN_PROC shit.
It's not complicated, just some time I would rather use doing important stuff,
like testing pkg_add...
@
text
@d1 1
a1 1
$OpenBSD: patch-kcontrol_kfontinst_kfontinst_GetPid_c,v 1.2 2007/05/25 09:49:54 espie Exp $
d3 1
a3 1
+++ kcontrol/kfontinst/kfontinst/GetPid.c	Sun Jan 17 10:17:19 2010
d21 1
a21 29
@@@@ -181,29 +182,29 @@@@ unsigned int kfi_getPid(const char *proc, unsigned int
     int               mib[4];
     size_t            len,
                       num;
-    struct kinfo_proc *p;
+    struct kinfo_proc2 *p;
 
     mib[0] = CTL_KERN;
-    mib[1] = KERN_PROC;
+    mib[1] = KERN_PROC2;
     mib[2] = KERN_PROC_ALL;
     sysctl(mib, 3, NULL, &len, NULL, 0);
-    p=(struct kinfo_proc*)malloc(len);
+    p=(struct kinfo_proc2*)malloc(len);
     sysctl(mib, 3, p, &len, NULL, 0);
 
-    for(num=0; num < len / sizeof(struct kinfo_proc)  && !error; num++)
+    for(num=0; num < len / sizeof(struct kinfo_proc2)  && !error; num++)
     {
-        struct kinfo_proc proc_p;
+        struct kinfo_proc2 proc_p;
         size_t            len;
 
         mib[0] = CTL_KERN;
-        mib[1] = KERN_PROC;
+        mib[1] = KERN_PROC2;
         mib[2] = KERN_PROC_PID;
 #if __FreeBSD_version >= 500015
         mib[3] = p[num].ki_pid;
@


1.2
log
@update a large subset of kde 3 to 3.5.7.
Simplify the infrastructure a bit, and let it compile with libfam, now...
@
text
@d1 1
a1 1
$OpenBSD: patch-kcontrol_kfontinst_kfontinst_GetPid_c,v 1.1 2005/03/30 19:25:23 espie Exp $
d3 1
a3 1
+++ kcontrol/kfontinst/kfontinst/GetPid.c	Mon May 14 19:06:23 2007
d21 52
@


1.1
log
@dependencies, dependencies...
don't rely on samba3 yet, need to check it.
use sasl2 and usb where applicable.
@
text
@d1 3
a3 3
$OpenBSD$
--- kcontrol/kfontinst/kfontinst/GetPid.c.orig	Wed Mar 30 12:59:19 2005
+++ kcontrol/kfontinst/kfontinst/GetPid.c	Wed Mar 30 13:00:11 2005
d12 1
a12 1
@@@@ -160,7 +161,7 @@@@ unsigned int kfi_getPid(const char *proc
@

