head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.42
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.40
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.36
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.38
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.34
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.32
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.30
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.28
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.26
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.24
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.22
	OPENBSD_5_0:1.6.0.20
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.18
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.16
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.14
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.12
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.10
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.8
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.6
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.4
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.5.0.12
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2006.10.12.23.12.18;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2004.02.01.14.59.22;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.07.20.19.13;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.27.19.22.50;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.09.22.52.09;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2003.01.09.19.27.05;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to 3.5.5
@
text
@$OpenBSD: patch-konsole_konsole_TEPty_cpp,v 1.5 2004/02/01 14:59:22 espie Exp $
--- konsole/konsole/TEPty.cpp.orig	Sun Oct  1 19:32:08 2006
+++ konsole/konsole/TEPty.cpp	Tue Oct  3 11:02:58 2006
@@@@ -73,6 +73,9 @@@@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+#ifdef __OpenBSD__
+#undef USE_LOGIN
+#endif
 
 #include <sys/types.h>
 #include <sys/stat.h>
@


1.5
log
@basic import of kde 3.1.95, still missing a few parts.

TODO:
- compile the missing packages.
- redo konsole fixes for our ttys.
- figure out why kuickshow is broken.
- make sure we get all dependencies.
- repair kscd.
- find out why nsplugins does not like the native jdk.
- figure out how to get kvim to work.
- change filenames or adjust check-lib-depends to cope.
@
text
@d1 4
a4 4
$OpenBSD: patch-konsole_konsole_TEPty_cpp,v 1.4 2003/12/07 20:19:13 espie Exp $
--- konsole/konsole/TEPty.cpp.orig	2003-07-21 09:32:26.000000000 +0200
+++ konsole/konsole/TEPty.cpp	2004-01-21 01:20:49.000000000 +0100
@@@@ -64,6 +64,9 @@@@
@


1.4
log
@update to 3.1.4
@
text
@d1 6
a6 6
$OpenBSD: patch-konsole_konsole_TEPty_cpp,v 1.3 2003/01/27 19:22:50 espie Exp $
--- konsole/konsole/TEPty.cpp.orig	2003-09-01 13:32:01.000000000 +0200
+++ konsole/konsole/TEPty.cpp	2003-12-04 02:59:16.000000000 +0100
@@@@ -137,6 +137,9 @@@@
         #include <errno.h>
         #include <utmp.h>
d12 2
a13 114
 #include <signal.h>
 
@@@@ -229,7 +232,13 @@@@ void TEPtyInit()
 #endif
 }
 
-int chownpty(int fd, bool grant)
+const int PTY_GRANT=0,
+	PTY_REVOKE=1,
+	PTY_LOGIN=2,
+	PTY_LOGOUT=3;
+	
+
+int chownpty(int fd, int mode)
 // param fd: the fd of a master pty.
 // param grant: true to grant, false to revoke
 // returns 1 on success 0 on fail
@@@@ -252,6 +261,7 @@@@ int chownpty(int fd, bool grant)
   }
   if (pid == 0)
   {
+    const char *arg;
     /* We pass the master pseudo terminal as file descriptor PTY_FILENO. */
     if (fd != PTY_FILENO && dup2(fd, PTY_FILENO) < 0) exit(1);
     QString path = locate("exe", BASE_CHOWN);
@@@@ -260,7 +270,21 @@@@ int chownpty(int fd, bool grant)
     ** to be constant, we need an additional parameter.
     */
     QString fdnumber = QString::number(PTY_FILENO);
-    execle(path.ascii(), BASE_CHOWN, grant?"--grant":"--revoke", fdnumber.ascii(), NULL, NULL);
+    switch(mode) {
+    case PTY_REVOKE:
+    	arg = "--revoke";
+	break;
+    case PTY_GRANT:
+    	arg = "--grant";
+	break;
+    case PTY_LOGIN:
+    	arg = "--login";
+	break;
+    case PTY_LOGOUT:
+    	arg = "--logout";
+	break;
+    }
+    execle(path.ascii(), BASE_CHOWN, arg, fdnumber.ascii(), NULL, NULL);
     exit(1); // should not be reached
   }
 
@@@@ -308,7 +332,7 @@@@ void TEPty::commClose()
      utmp.start(KProcess::Block);
   }
 #elif defined(USE_LOGIN)
-  char *tty_name=ttyname(0);
+  char *tty_name=ttynam;
   if (tty_name)
   {
   	if (strncmp(tty_name, "/dev/", 5) == 0)
@@@@ -316,7 +340,10 @@@@ void TEPty::commClose()
         logout(tty_name);
   }
 #endif
-  if (m_bNeedGrantPty) chownpty(m_MasterFd, false);
+#ifdef __OpenBSD__
+  chownpty(m_MasterFd, PTY_LOGOUT);
+#endif
+  if (m_bNeedGrantPty) chownpty(m_MasterFd, PTY_REVOKE);
 
   KProcess::commClose();
 }
@@@@ -392,7 +419,7 @@@@ void TEPty::openPty()
   // be opened by several different methods.
 
   // We try, as we know them, one by one.
-#if defined(HAVE_OPENPTY) //FIXME: some work needed.
+#if defined(HAVE_OPENPTY) && !defined(__OpenBSD__) //FIXME: some work needed.
   if (m_MasterFd < 0) {
     int master_fd, slave_fd;
     if (openpty(&master_fd, &slave_fd, NULL, NULL, NULL) == 0) {
@@@@ -488,7 +515,7 @@@@ void TEPty::openPty()
     return;
   }
 
-  if (m_bNeedGrantPty && !chownpty(m_MasterFd, true))
+  if (m_bNeedGrantPty && !chownpty(m_MasterFd, PTY_GRANT))
   {
     fprintf(stderr,"konsole: chownpty failed for device %s::%s.\n",ptynam,ttynam);
     fprintf(stderr,"       : This means the session can be eavesdroped.\n");
@@@@ -497,7 +524,6 @@@@ void TEPty::openPty()
             KGlobal::dirs()->findResourceDir("exe",
                                              "konsole").local8Bit().data());
   }
-
   fcntl(m_MasterFd,F_SETFL,O_NDELAY);
 }
 
@@@@ -603,7 +629,7 @@@@ int TEPty::makePty(bool _addutmp)
   }
 #endif
 
-  if (! (str_ptr=ttyname(tt)) ) {
+  if (! (str_ptr=ttyname(tt)) && !(str_ptr=ttynam)) {
 #ifdef Q_OS_FREEBSD
     /*
     ** In FreeBSD, the ttyname() call always returns NULL
@@@@ -628,6 +654,9 @@@@ int TEPty::makePty(bool _addutmp)
 
   login(&l_struct);
 #endif
+#ifdef __OpenBSD__
+  chownpty(tt, PTY_LOGIN);
+#endif
   return tt;
 }
 
@


1.3
log
@kdebase 3.1:
- use kcontrol/nics/nic.cpp from kde-current to access getifaddrs...
IPv4 masks are not printed properly yet.
- konsole fixes for utmp
- ksysguardd mostly working. Should unify with Net/FreeBSD
- clock and timezone fixes mostly from Flinn Mueller.
- uses kxkb_pic lib, thanks to Matthieu.
@
text
@d1 4
a4 4
$OpenBSD$
--- konsole/konsole/TEPty.cpp.orig	Sun Jan 12 15:09:42 2003
+++ konsole/konsole/TEPty.cpp	Mon Jan 13 10:04:37 2003
@@@@ -130,6 +130,9 @@@@
d14 3
a16 3
@@@@ -201,7 +204,13 @@@@ FILE* syslog_file = NULL; //stdout;
 #define PTY_FILENO 3
 #define BASE_CHOWN "konsole_grantpty"
d29 1
a29 1
@@@@ -222,10 +231,25 @@@@ int chownpty(int fd, bool grant)
d37 5
a41 1
-    execle(path.ascii(), BASE_CHOWN, grant?"--grant":"--revoke", NULL, NULL);
d56 1
a56 1
+    execle(path.ascii(), BASE_CHOWN, arg, NULL, NULL);
d60 1
a60 1
@@@@ -273,7 +297,7 @@@@ void TEPty::commClose()
d69 1
a69 1
@@@@ -281,7 +305,10 @@@@ void TEPty::commClose()
d81 1
a81 1
@@@@ -357,7 +384,7 @@@@ void TEPty::openPty()
d90 1
a90 1
@@@@ -453,7 +480,7 @@@@ void TEPty::openPty()
d99 1
a99 1
@@@@ -462,7 +489,6 @@@@ void TEPty::openPty()
d107 1
a107 2
@@@@ -530,7 +556,7 @@@@ int TEPty::makePty(bool _addutmp)
      l_struct.ut_host[UT_HOSTSIZE]=0;
d109 1
d113 4
a116 5
     abort();
   }
   if (strncmp(str_ptr, "/dev/", 5) == 0)
@@@@ -539,6 +565,9 @@@@ int TEPty::makePty(bool _addutmp)
   time(&l_struct.ut_time);
d119 1
a119 1
+#endif
d122 1
a122 1
 #endif
d125 1
@


1.2
log
@kill those patches, they work, but it's a stupid idea.
There's no accounting security left if konsole_granpty works on a ttyname
without corresponding rights on a fd.
So, the proper fix will involve figuring out where kprocess/kpty loses that
fd after running the command.
@
text
@d1 4
a4 4
$OpenBSD: patch-konsole_konsole_TEPty_cpp,v 1.1 2003/01/09 19:27:05 espie Exp $
--- konsole/konsole/TEPty.cpp.orig	Thu Jan  9 18:47:14 2003
+++ konsole/konsole/TEPty.cpp	Thu Jan  9 20:17:10 2003
@@@@ -120,6 +120,10 @@@@
a8 1
+#define HAVE_OPENPTY
d14 1
a14 1
@@@@ -179,7 +183,7 @@@@ FILE* syslog_file = NULL; //stdout;
d18 8
a25 2
-int chownpty(int fd, int grant)
+int chownpty(int fd, int grant, const char *name)
d27 1
a27 1
 // param grant: 1 to grant, 0 to revoke
d29 1
a29 1
@@@@ -200,10 +204,13 @@@@ int chownpty(int fd, int grant)
d33 1
a33 3
+    if (fd == -1)
+    	close(PTY_FILENO);
+    else
d35 1
a35 2
-    if (fd != PTY_FILENO && dup2(fd, PTY_FILENO) < 0) exit(1);
+	if (fd != PTY_FILENO && dup2(fd, PTY_FILENO) < 0) exit(1);
d38 15
a52 1
+    execle(path.ascii(), BASE_CHOWN, grant?"--grant":"--revoke", name, NULL, NULL);
d56 10
a65 1
@@@@ -259,7 +266,12 @@@@ void TEPty::donePty()
d69 1
a69 1
-  if (needGrantPty) chownpty(fd,FALSE);
d71 1
a71 3
+  	chownpty(-1, FALSE, ttynam);
+#else
+	chownpty(fd, FALSE, ttynam);
d73 3
a75 2
+
   emit done(status);
d77 2
a78 2
 
@@@@ -316,8 +328,8 @@@@ int TEPty::openPty()
d81 3
a83 7
 
-#if defined(HAVE_OPENPTY) && 0 //FIXME: some work needed.
-#warning wheee
+
+#if defined(HAVE_OPENPTY) //FIXME: some work needed.
   if (ptyfd < 0)
   {
d85 3
a87 10
@@@@ -327,6 +339,7 @@@@ int TEPty::openPty()
       strncpy(ptynam, name, 50);
       strncpy(ttynam, name, 50);
       ttynam[5]='t';
+      ptynam[5]='p';
       // one needs to look into who owns what to make sure chownpty is needed
       // FIXME: further, the logic of openPty has to adjusted to pass a file
       //        handle instead of a name.
@@@@ -421,7 +434,7 @@@@ int TEPty::openPty()
     fprintf(stderr,"Can't open a pseudo teletype\n"); exit(1);
d90 2
a91 2
-  if (needGrantPty && !chownpty(ptyfd,TRUE))
+  if (needGrantPty && !chownpty(ptyfd,TRUE, ttynam))
d95 27
@


1.1
log
@Make konsole login/logout work.
(The code in kde-current is substantially different, so this won't go in
unchanged)

- use konsole_grantpty to do the login/logout, so that only this program
needs to be setgid utmp.
- pass the ttyname to konsole_grantpty explicitly.
- use openpty to get the ttyname in a simple way.
- deactivate USE_LOGIN on OpenBSD, as login/logout must occur in grantpty.
@
text
@d1 1
a1 1
$OpenBSD$
@

