head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.12
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.10
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.09.16.20.13.49;	author espie;	state Exp;
branches;
next	1.2;
commitid	oZ6qBLeWe8Of0PTW;

1.2
date	2011.07.06.14.51.19;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.17.08.58.38;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@yet a bit more dkstat.h breakage.
@
text
@$OpenBSD: patch-kicker_applets_naughty_NaughtyProcessMonitor_cpp,v 1.2 2011/07/06 14:51:19 dcoppa Exp $
--- kicker/applets/naughty/NaughtyProcessMonitor.cpp.orig	Mon Oct 10 09:03:59 2005
+++ kicker/applets/naughty/NaughtyProcessMonitor.cpp	Tue Sep 16 14:10:59 2014
@@@@ -25,7 +25,7 @@@@
 #include <sys/proc.h>
 #include <sys/sysctl.h>
 #include <sys/ucred.h>
-#include <sys/dkstat.h>
+#include <sys/sched.h>
 #include <stdlib.h>
 #endif
 
@@@@ -409,12 +409,12 @@@@ NaughtyProcessMonitor::pidList() const
   d->cacheLoadMap_.clear () ;
   d->uidMap_.clear () ;
   for (i = 0; i < nentries; i++) {
-      l << (unsigned long) kp[i].kp_proc.p_pid ;
-      d->cacheLoadMap_.insert (kp[i].kp_proc.p_pid,
-			       (kp[i].kp_proc.p_uticks + 
-				kp[i].kp_proc.p_sticks)) ;
-      d->uidMap_.insert (kp[i].kp_proc.p_pid,
-			 kp[i].kp_eproc.e_ucred.cr_uid) ;
+      l << (unsigned long) kp[i].p_pid ;
+      d->cacheLoadMap_.insert (kp[i].p_pid,
+			       (kp[i].p_uticks + 
+				kp[i].p_sticks)) ;
+      d->uidMap_.insert (kp[i].p_pid,
+			 kp[i].p_uid) ;
   }
 
   free (kp) ;
@


1.2
log
@Adapt to new OpenBSD kinfo_proc API.

ok jasper@@, sthen@@
@
text
@d1 12
a12 3
$OpenBSD: patch-kicker_applets_naughty_NaughtyProcessMonitor_cpp,v 1.1 2010/01/17 08:58:38 espie Exp $
--- kicker/applets/naughty/NaughtyProcessMonitor.cpp.orig	Mon Oct 10 17:03:59 2005
+++ kicker/applets/naughty/NaughtyProcessMonitor.cpp	Wed Jul  6 16:08:25 2011
@


1.1
log
@grumble. fix build after KERN_PROC hiding
@
text
@d1 3
a3 38
$OpenBSD$
--- kicker/applets/naughty/NaughtyProcessMonitor.cpp.orig	Sun Jan 17 09:36:38 2010
+++ kicker/applets/naughty/NaughtyProcessMonitor.cpp	Sun Jan 17 09:53:33 2010
@@@@ -372,7 +372,7 @@@@ NaughtyProcessMonitor::pidList() const
   int mib[3] ;
   int nprocs = 0, nentries ;
   size_t size ;
-  struct kinfo_proc *kp ;
+  struct kinfo_proc2 *kp ;
   int i ;
   QValueList<ulong> l;
 
@@@@ -386,13 +386,13 @@@@ NaughtyProcessMonitor::pidList() const
   
   // magic size evaluation ripped from ps
 
-  size = (5 * nprocs * sizeof(struct kinfo_proc)) / 4 ;
-  kp = (struct kinfo_proc *)calloc (size, sizeof (char)) ;
+  size = (5 * nprocs * sizeof(struct kinfo_proc2)) / 4 ;
+  kp = (struct kinfo_proc2 *)calloc (size, sizeof (char)) ;
   
   // fetch process info
 
   mib[0] = CTL_KERN ;
-  mib[1] = KERN_PROC ;
+  mib[1] = KERN_PROC2 ;
   mib[2] = KERN_PROC_ALL ;
   
   if (-1 == sysctl (mib, 3, kp, &size, NULL, 0)) {
@@@@ -400,7 +400,7 @@@@ NaughtyProcessMonitor::pidList() const
       return l ;
   }
   
-  nentries = size / sizeof (struct kinfo_proc) ;
+  nentries = size / sizeof (struct kinfo_proc2) ;
   
   // time statistics and euid data are fetched only for processes in
   // the pidList, so, instead of doing one sysctl per process for
@

