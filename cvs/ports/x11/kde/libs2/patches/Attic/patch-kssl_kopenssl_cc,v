head	1.5;
access;
symbols
	OPENBSD_3_1:1.4.0.2;
locks; strict;
comment	@# @;


1.5
date	2002.09.11.17.43.43;	author espie;	state dead;
branches;
next	1.4;

1.4
date	2002.08.16.19.49.27;	author brad;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2001.09.19.14.13.28;	author espie;	state dead;
branches;
next	1.2;

1.2
date	2001.08.21.14.20.08;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.20.23.40.18;	author espie;	state Exp;
branches;
next	;

1.4.2.1
date	2002.08.16.20.05.08;	author brad;	state Exp;
branches;
next	;


desc
@@


1.5
log
@ditch the files.
@
text
@$OpenBSD: patch-kssl_kopenssl_cc,v 1.4 2002/08/16 19:49:27 brad Exp $
--- kssl/kopenssl.cc.orig	Tue Sep  4 19:08:18 2001
+++ kssl/kopenssl.cc	Wed Aug 14 20:42:04 2002
@@@@ -92,6 +92,7 @@@@ static int (*K_SSL_CTX_use_certificate) 
 static int (*K_SSL_get_error) (SSL*, int) = NULL;
 static STACK_OF(X509)* (*K_SSL_get_peer_cert_chain) (SSL*) = NULL;
 static void (*K_X509_STORE_CTX_set_chain) (X509_STORE_CTX *, STACK_OF(X509)*) = NULL;
+static void (*K_X509_STORE_CTX_set_purpose) (X509_STORE_CTX *, int) = NULL;
 static void (*K_sk_free) (STACK*) = NULL;
 static int (*K_sk_num) (STACK*) = NULL;
 static char* (*K_sk_value) (STACK*, int) = NULL;
@@@@ -254,6 +255,7 @@@@ KConfig *cfg;
                 X509**, STACK_OF(X509)**)) _cryptoLib->symbol("PKCS12_parse");
       K_EVP_PKEY_free = (void (*) (EVP_PKEY *)) _cryptoLib->symbol("EVP_PKEY_free");
       K_X509_STORE_CTX_set_chain = (void (*)(X509_STORE_CTX *, STACK_OF(X509)*)) _cryptoLib->symbol("X509_STORE_CTX_set_chain");
+      K_X509_STORE_CTX_set_purpose = (void (*)(X509_STORE_CTX *, int)) _cryptoLib->symbol("X509_STORE_CTX_set_purpose");
       K_sk_free = (void (*) (STACK *)) _cryptoLib->symbol("sk_free");
       K_sk_num = (int (*) (STACK *)) _cryptoLib->symbol("sk_num");
       K_sk_value = (char* (*) (STACK *, int)) _cryptoLib->symbol("sk_value");
@@@@ -742,6 +744,10 @@@@ char *KOpenSSLProxy::sk_value(STACK *s, 
 
 void KOpenSSLProxy::X509_STORE_CTX_set_chain(X509_STORE_CTX *v, STACK_OF(X509)* x) {
    if (K_X509_STORE_CTX_set_chain) (K_X509_STORE_CTX_set_chain)(v,x);
+}
+
+void KOpenSSLProxy::X509_STORE_CTX_set_purpose(X509_STORE_CTX *v, int purpose) {
+   if (K_X509_STORE_CTX_set_purpose) (K_X509_STORE_CTX_set_purpose)(v,purpose);
 }
 
 
@


1.4
log
@Bring in fix for KSSL sub-system.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4.2.1
log
@MFC:
Bring in fix for KSSL sub-system.
@
text
@@


1.3
log
@Update to 2.2.1.
Some patches folded back.
ksysguardd from Sebastian Stark. Doesn't work squeaky-clean yet, but at
least some people can look at it now...
@
text
@d1 20
a20 6
$OpenBSD: patch-kssl_kopenssl_cc,v 1.2 2001/08/21 14:20:08 espie Exp $
--- kssl/kopenssl.cc.orig	Sun Jul 29 06:55:41 2001
+++ kssl/kopenssl.cc	Tue Aug 21 16:11:26 2001
@@@@ -117,6 +117,51 @@@@ void KOpenSSLProxy::destroy() {
   _me = NULL;
 }
d22 2
a23 42
+#ifdef __OpenBSD__
+#include <qdir.h>
+#include <qstring.h>
+#include <qstringlist.h>
+
+static QString findMostRecentLib(QString dir, QString name)
+{
+	// Grab all shared libraries in the directory
+	QString filter = "lib"+name+".so.*";
+	QDir d(dir, filter);
+	if (!d.exists())
+		return NULL;
+	QStringList l = d.entryList();
+
+	// Find the best one
+	int bestmaj = -1;
+	int bestmin = -1;
+	QString best = NULL;
+	// where do we start
+	uint s = filter.length()-1;
+	for (QStringList::Iterator it = l.begin(); it != l.end(); ++it) {
+		QString numberpart = (*it).mid(s);
+		uint endmaj = numberpart.find('.');
+		if (endmaj == -1)
+			continue;
+		bool ok;
+		int maj = numberpart.left(endmaj).toInt(&ok);
+		if (!ok)
+			continue;
+		int min = numberpart.mid(endmaj+1).toInt(&ok);
+		if (!ok)
+			continue;
+		if (maj > bestmaj || (maj == bestmaj && min > bestmin)) {
+			bestmaj = maj;
+			bestmin = min;
+			best = (*it);
+		}
+	}
+	if (best.isNull())
+		return NULL;
+	else
+		return dir+"/"+best;
a24 1
+#endif
d26 3
a29 43
 KOpenSSLProxy::KOpenSSLProxy() {
 KLibLoader *ll = KLibLoader::self();
@@@@ -135,6 +180,13 @@@@ KConfig *cfg;
 
    delete cfg;
 
+#ifdef __OpenBSD__
+   {
+   QString libname = findMostRecentLib("/usr/lib", "crypto");
+   if (!libname.isNull())
+         _cryptoLib = ll->globalLibrary(libname.latin1());
+   }
+#else
    libpaths << "/usr/lib/"
             << "/usr/local/lib/"
             << "/usr/local/openssl/lib/"
@@@@ -163,6 +215,7 @@@@ KConfig *cfg;
       }
       if (_cryptoLib) break;
    }
+#endif
 
    if (_cryptoLib) {
 #ifdef HAVE_SSL 
@@@@ -210,6 +263,13 @@@@ KConfig *cfg;
 #endif
    }
 
+#ifdef __OpenBSD__
+   {
+   QString libname = findMostRecentLib("/usr/lib", "ssl");
+   if (!libname.isNull())
+         _sslLib = ll->globalLibrary(libname.latin1());
+   }
+#else
    for (QStringList::Iterator it = libpaths.begin();
                               it != libpaths.end();
                               ++it) {
@@@@ -222,6 +282,7 @@@@ KConfig *cfg;
       }
       if (_sslLib) break;
    }
+#endif
a30 2
    if (_sslLib) {
 #ifdef HAVE_SSL 
@


1.2
log
@Correct patch to detect most recent libcrypto/libssl
@
text
@d1 1
a1 1
$OpenBSD: patch-kssl_kopenssl_cc,v 1.1 2001/08/20 23:40:18 espie Exp $
@


1.1
log
@Update to 2.2. Not all parts done yet.
kssl hack is a gross kludge.
@
text
@d1 56
a56 4
$OpenBSD$
--- kssl/kopenssl.cc.orig	Mon Aug 20 01:49:42 2001
+++ kssl/kopenssl.cc	Mon Aug 20 01:50:16 2001
@@@@ -135,21 +135,12 @@@@ KConfig *cfg;
d60 15
a74 18
-   libpaths << "/usr/lib/"
-            << "/usr/local/lib/"
-            << "/usr/local/openssl/lib/"
-            << "/usr/local/ssl/lib/"
-            << "/opt/openssl/lib/"
-            << "";
+   libpaths << "/usr/lib/";
 
 // FIXME: #define here for the various OS types to optimize
-   libnamess << "libssl.so.0"
-             << "libssl.so"
-             << "libssl.sl";
+   libnamess << "libssl.so.5.1";
 
-   libnamesc << "libcrypto.so.0"
-             << "libcrypto.so"
-             << "libcrypto.sl";
+   libnamesc << "libcrypto.so.5.1";
d76 13
d91 9
@

