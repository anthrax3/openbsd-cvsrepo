head	1.6;
access;
symbols
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_2_9_TRACKING_SWITCH:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2002.09.11.17.43.43;	author espie;	state dead;
branches;
next	1.5;

1.5
date	2001.12.31.12.30.53;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.20.23.40.18;	author espie;	state dead;
branches;
next	1.3;

1.3
date	2001.03.12.16.15.20;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.29.22.53.53;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2000.11.27.20.41.59;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@ditch the files.
@
text
@$OpenBSD: patch-arts_flow_audiosubsys_cc,v 1.5 2001/12/31 12:30:53 espie Exp $
--- arts/flow/audiosubsys.cc.orig	Sun Mar  4 12:02:09 2001
+++ arts/flow/audiosubsys.cc	Fri Aug 17 00:02:41 2001
@@@@ -35,6 +35,12 @@@@
 
 #ifdef HAVE_SYS_SOUNDCARD_H
 #include <sys/soundcard.h>
+#define DEVICE_NAME "/dev/audio"
+#endif
+
+#ifdef HAVE_SOUNDCARD_H
+#include <soundcard.h>
+#define DEVICE_NAME "/dev/audio"
 #endif
 
 #include <assert.h>
@


1.5
log
@Update basic kde packages to 2.2.2.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@Update to 2.2. Not all parts done yet.
kssl hack is a gross kludge.
@
text
@d1 3
a3 3
$OpenBSD: patch-arts_flow_audiosubsys_cc,v 1.3 2001/03/12 16:15:20 espie Exp $
--- arts/flow/audiosubsys.cc.orig	Sat Mar 10 15:10:39 2001
+++ arts/flow/audiosubsys.cc	Sat Mar 10 15:11:47 2001
@


1.3
log
@Update to kdelibs 2.1
@
text
@d1 1
a1 1
$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
@


1.2
log
@Synch for kdelibs2.0.1.
@
text
@d1 5
a5 4
$OpenBSD: patch-arts_flow_audiosubsys_cc,v 1.1 2000/11/27 20:41:59 espie Exp $
--- arts/flow/audiosubsys.cc.orig	Sun Nov 26 17:35:31 2000
+++ arts/flow/audiosubsys.cc	Sun Dec 17 00:32:51 2000
@@@@ -36,6 +36,10 @@@@
d8 3
a10 1
 #endif
d14 1
a14 1
+#endif
a16 45
 #include <errno.h>
@@@@ -48,7 +52,9 @@@@
 #include "debug.h"
 #include "audiosubsys.h"
 
+#ifndef DEVICE_NAME
 #define DEVICE_NAME "/dev/dsp"
+#endif
 
 using namespace std;
 using namespace Arts;
@@@@ -204,7 +210,7 @@@@ bool AudioSubSystem::check()
 
 int AudioSubSystem::open()
 {
-#ifdef HAVE_SYS_SOUNDCARD_H
+#if defined(HAVE_SYS_SOUNDCARD_H) || defined(HAVE_SOUNDCARD_H)
 	int mode;
 
 	if(_fullDuplex)
@@@@ -386,6 +392,7 @@@@ int AudioSubSystem::open()
 	assert(fragment_buffer == 0);
 	fragment_buffer = new char[_fragmentSize];
 
+#ifndef HAVE_SOUNDCARD_H
 	/*
 	 * Workaround for broken kernel drivers: usually filling up the audio
 	 * buffer is _only_ required if _fullDuplex is true. However, there
@@@@ -400,6 +407,7 @@@@ int AudioSubSystem::open()
 		assert(len == _fragmentSize);
 	}
 	free(zbuffer);
+#endif
 
 	/*
 	 * Triggering - the original aRts code did this for full duplex:
@@@@ -460,7 +468,7 @@@@ bool AudioSubSystem::running()
 
 void AudioSubSystem::handleIO(int type)
 {
-#ifdef HAVE_SYS_SOUNDCARD_H
+#if defined(HAVE_SYS_SOUNDCARD_H) || defined(HAVE_SOUNDCARD_H)
 	if(type & ioRead)
 	{
 		int len = ::read(audio_fd,fragment_buffer,_fragmentSize);
@


1.1
log
@Patches based on Maurice Nonneke's work, to handle arts' audio subsystem
better.
@
text
@d1 3
a3 3
$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
--- arts/flow/audiosubsys.cc.orig	Sun Nov 26 16:53:50 2000
+++ arts/flow/audiosubsys.cc	Sun Nov 26 16:57:02 2000
d34 1
a34 1
@@@@ -376,6 +382,7 @@@@ int AudioSubSystem::open()
d42 1
a42 1
@@@@ -390,6 +397,7 @@@@ int AudioSubSystem::open()
d50 1
a50 1
@@@@ -450,7 +458,7 @@@@ bool AudioSubSystem::running()
@

