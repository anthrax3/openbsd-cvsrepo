head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.22
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.20
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.18
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.14
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.16
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.12
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.10
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.8
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.05.03.14.11.55;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add a patch to net/aggregate: don't ignore prefix length from input
stream when -t and -p are used together.  From FreeBSD PR ports/131259.
@
text
@$OpenBSD$

Don't ignore prefix length from input stream when -t and -p are used together.
From FreeBSD PR ports/131259

--- aggregate.c.orig	Wed Mar  6 16:59:37 2002
+++ aggregate.c	Thu May  3 15:08:40 2012
@@@@ -261,8 +261,18 @@@@ int main(int argc, char **argv)
           moanf(0, "[line %d] line too long; ignoring line", line);
         continue;
       }
+      if (buf[i] == '/') { 
+           masklen = atoi(buf + i + 1);
+         if (masklen < 1 || masklen > max_prefix_length)
+        {
+              if (!quiet)
+            moanf(0, "[line %d] mask length %d out of range; ignoring line", \
+                   line, masklen);
+          continue;
+          }
+      } else
+             masklen = default_prefix_length;
       buf[i] = 0;
-      masklen = default_prefix_length;
     } else {
       i = 0;
       while (buf[i] != '/' && i < MAX_buf) i++;
@
