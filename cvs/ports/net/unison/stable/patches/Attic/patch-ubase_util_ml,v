head	1.5;
access;
symbols
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2014.10.16.16.17.07;	author chrisz;	state dead;
branches;
next	1.4;
commitid	Ka7V2vYFkmZwdIoH;

1.4
date	2014.10.16.16.07.51;	author chrisz;	state Exp;
branches;
next	1.3;
commitid	mGO2cGc0l004hIow;

1.3
date	2014.09.19.12.56.23;	author chrisz;	state Exp;
branches;
next	1.2;
commitid	zbMOWkoQ21Ud5UJf;

1.2
date	2006.06.17.19.14.42;	author sturm;	state dead;
branches;
next	1.1;

1.1
date	2005.05.30.19.27.45;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@missing changes in last commit. Also note the changes were given OKs by

ok sthen@@, giovanni@@
@
text
@@


1.4
log
@* remove snapshot port, move net/unison/stable to net/unison
* patch to retain backtrace on uncaught exceptions
* add readme warning about incompadibilities between
  different OCaml versions.
@
text
@@


1.3
log
@Fix segfault in module UPrintf by using the stdlib instead.
@
text
@a0 18
$OpenBSD$

The Uprintf module is broken since OCaml 4.02.
The OCaml stdlib provides a similar function since 3.09.
Use this function instead.

--- ubase/util.ml.orig	Fri Sep 19 12:38:42 2014
+++ ubase/util.ml	Fri Sep 19 12:39:27 2014
@@@@ -62,7 +62,8 @@@@ let set_infos s =
   if s <> !infos then begin clear_infos (); infos := s; show_infos () end
 
 let msg f =
-  clear_infos (); Uprintf.eprintf (fun () -> flush stderr; show_infos ()) f
+  clear_infos ();
+  Printf.kfprintf (fun _ -> flush stderr; show_infos ()) stderr f
 
 let msg : ('a, out_channel, unit) format -> 'a = msg
 
@


1.2
log
@update stable/ to 2.13.16 and snapshot/ to 2.17.1

from maintainer Zvezdan Petkovic <zpetkovic at acm.org>
@
text
@d1 10
a10 10
$OpenBSD: patch-ubase_util_ml,v 1.1 2005/05/30 19:27:45 sturm Exp $
Post-release developer patch.
o Catch failure of localtime library call.
  See http://lists.seas.upenn.edu/pipermail/unison-hackers/2005-May/000092.html
o Fix the order of looking for home directory.
  See http://lists.seas.upenn.edu/pipermail/unison-hackers/2005-May/000088.html
--- ubase/util.ml.orig	Mon Sep  6 15:15:47 2004
+++ ubase/util.ml	Fri May 27 16:59:57 2005
@@@@ -244,14 +244,18 @@@@ let time () =
   convertUnixErrorsToTransient "time" Unix.time
d12 4
a15 21
 let time2string timef =
-  let time = localtime timef in
-  Printf.sprintf
-    "%2d:%.2d on %2d %3s, %4d"
-    time.Unix.tm_hour
-    time.Unix.tm_min
-    time.Unix.tm_mday
-    (monthname time.Unix.tm_mon)
-    (time.Unix.tm_year + 1900)
+  try
+    let time = localtime timef in
+    Printf.sprintf
+      "%2d:%.2d:%.2d on %2d %3s, %4d"
+      time.Unix.tm_hour
+      time.Unix.tm_min
+      time.Unix.tm_sec
+      time.Unix.tm_mday
+      (monthname time.Unix.tm_mon)
+      (time.Unix.tm_year + 1900)
+  with Transient _ ->
+    "(invalid date)"
d17 1
a17 4
 let percentageOfTotal current total =
   (int_of_float ((float current) *. 100.0 /. (float total)))
@@@@ -355,19 +359,20 @@@@ let padto n s = s ^ (String.make (max 0 
 (*****************************************************************************)
a18 31
 let fileInHomeDir n =
-  match osType with
-    `Win32 ->
-      let dirString =
-        try Unix.getenv "USERPROFILE" (* Windows NT/2K *)
-        with Not_found ->
-        try Unix.getenv "HOME" (* Windows 9x with Cygwin HOME set *)
-        with Not_found ->
-        try Unix.getenv "UNISON" (* Use UNISON dir if none of
-                                    the above are set *)
-        with Not_found -> "c:/" (* Default *) in
-      Filename.concat dirString n
-  | `Unix ->
-      Filename.concat (safeGetenv "HOME") n
+  if osType = `Unix || isCygwin then
+    Filename.concat (safeGetenv "HOME") n
+  else if osType = `Win32 then
+    let dirString =
+      try Unix.getenv "USERPROFILE" (* Windows NT/2K *)
+      with Not_found ->
+      try Unix.getenv "HOME" (* Windows 9x with Cygwin HOME set *)
+      with Not_found ->
+      try Unix.getenv "UNISON" (* Use UNISON dir if none of
+                                  the above are set *)
+      with Not_found -> "c:/" (* Default *) in
+    Filename.concat dirString n
+  else
+    assert false (* osType can't be anything else *)
 
 (*****************************************************************************)
 (*           "Upcall" for building pathnames in the .unison dir              *)
@


1.1
log
@a few patches from the unison cvs repo to improve stability

from maintainer Zvezdan Petkovic <zpetkovic at acm.org>
@
text
@d1 1
a1 1
$OpenBSD$
@

