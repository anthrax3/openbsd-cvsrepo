head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.6
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.40
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.38
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.36
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.34
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.32
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.30
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.28
	OPENBSD_5_0:1.2.0.26
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.24
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.22
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.20
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.18
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.16
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.14
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.12
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.10
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.8
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2015.05.01.17.40.58;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	J6UrblqNyWdPyLOl;

1.2
date	2005.07.07.08.25.15;	author aanriot;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.09.22.16.06;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Consistency in endian.h includes.
@
text
@$OpenBSD: patch-bytesex_h,v 1.2 2005/07/07 08:25:15 aanriot Exp $
--- bytesex.h.orig	Sat Jun 18 08:40:22 2005
+++ bytesex.h	Sat Jun 18 08:42:22 2005
@@@@ -4,20 +4,17 @@@@
 
 /* $Id: patch-bytesex_h,v 1.2 2005/07/07 08:25:15 aanriot Exp $ */
 
+#include <endian.h>
+
 #ifndef ARS_BYTESEX_H
 #define ARS_BYTESEX_H
 
-#if 	defined(__i386__) \
-	|| defined(__alpha__) \
-	|| (defined(__mips__) && (defined(MIPSEL) || defined (__MIPSEL__)))
+#if 	BYTE_ORDER == LITTLE_ENDIAN
 #define BYTE_ORDER_LITTLE_ENDIAN
-#elif 	defined(__mc68000__) \
-	|| defined (__sparc__) \
-	|| defined (__sparc) \
-	|| defined (__PPC__) \
-	|| defined (__BIG_ENDIAN__) \
-	|| (defined(__mips__) && (defined(MIPSEB) || defined (__MIPSEB__)))
+
+#elif 	BYTE_ORDER == BIG_ENDIAN
 #define BYTE_ORDER_BIG_ENDIAN
+
 #else
 # error can not find the byte order for this architecture, fix bytesex.h
 #endif
@


1.2
log
@add patch to let things work with all architectures.

approach advised by naddy@@, tested by Chris Kuethe, ok xsa@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 1
a6 1
 /* $Id: bytesex.h,v 1.3 2003/07/28 09:00:55 njombart Exp $ */
d8 1
a8 1
+#include <sys/endian.h>
@


1.1
log
@teach it that amd64 is little endian
@
text
@d2 3
a4 3
--- bytesex.h.orig	Thu Jun  9 15:36:20 2005
+++ bytesex.h	Thu Jun  9 15:36:29 2005
@@@@ -9,7 +9,8 @@@@
d6 9
a14 2
 #if 	defined(__i386__) \
 	|| defined(__alpha__) \
d16 1
a16 2
+	|| (defined(__mips__) && (defined(MIPSEL) || defined (__MIPSEL__))) \
+	|| defined(__amd64__)
d18 13
a30 2
 #elif 	defined(__mc68000__) \
 	|| defined (__sparc__) \
@

