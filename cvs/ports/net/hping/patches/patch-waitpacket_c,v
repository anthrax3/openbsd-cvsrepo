head	1.3;
access;
symbols
	OPENBSD_6_0:1.2.0.46
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.42
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.44
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.40
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.38
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.36
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.34
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.32
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.30
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.28
	OPENBSD_5_0:1.2.0.26
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.24
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.22
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.20
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.18
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.16
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.14
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.12
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.10
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.8
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.12.05.13.57.20;	author jca;	state Exp;
branches;
next	1.2;
commitid	j1Xx31JgbDY0L17Y;

1.2
date	2005.04.24.22.59.08;	author alek;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.21.00.16.12;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to hping3

- drop privs to a dedicated user
- in case of error, print a message regarding pf blocking pf blocking
  outgoing packets
- do not activate Tcl support (for now?)

Input and ok sthen@@
@
text
@$OpenBSD: patch-waitpacket_c,v 1.2 2005/04/24 22:59:08 alek Exp $
--- waitpacket.c.orig	Fri Dec 26 15:31:29 2014
+++ waitpacket.c	Sun Dec  4 20:55:11 2016
@@@@ -375,15 +375,15 @@@@ int recv_tcp(void *packet, size_t size)
 			goto out;
 
 		flags[0] = '\0';
-		if (tcp.th_flags & TH_RST)  strcat(flags, "R");
-		if (tcp.th_flags & TH_SYN)  strcat(flags, "S");
-		if (tcp.th_flags & TH_ACK)  strcat(flags, "A");
-		if (tcp.th_flags & TH_FIN)  strcat(flags, "F");
-		if (tcp.th_flags & TH_PUSH) strcat(flags, "P");
-		if (tcp.th_flags & TH_URG)  strcat(flags, "U");
-		if (tcp.th_flags & TH_X)    strcat(flags, "X");
-		if (tcp.th_flags & TH_Y)    strcat(flags, "Y");
-		if (flags[0] == '\0')    strcat(flags, "none");
+		if (tcp.th_flags & TH_RST)  strlcat(flags, "R", sizeof(flags));
+		if (tcp.th_flags & TH_SYN)  strlcat(flags, "S", sizeof(flags));
+		if (tcp.th_flags & TH_ACK)  strlcat(flags, "A", sizeof(flags));
+		if (tcp.th_flags & TH_FIN)  strlcat(flags, "F", sizeof(flags));
+		if (tcp.th_flags & TH_PUSH) strlcat(flags, "P", sizeof(flags));
+		if (tcp.th_flags & TH_URG)  strlcat(flags, "U", sizeof(flags));
+		if (tcp.th_flags & TH_X)    strlcat(flags, "X", sizeof(flags));
+		if (tcp.th_flags & TH_Y)    strlcat(flags, "Y", sizeof(flags));
+		if (flags[0] == '\0')    strlcat(flags, "none", sizeof(flags));
 
 		log_ip(status, sequence);
 		printf("sport=%d flags=%s seq=%d win=%d rtt=%.1f ms\n",
@


1.2
log
@Update to 2.0.0rc3

From new maintainer Alexandre Anriot <aanriot@@atlantilde.com>
@
text
@d1 4
a4 4
$OpenBSD$
--- waitpacket.c.orig	Fri Dec 13 16:01:57 2002
+++ waitpacket.c	Sun Apr 24 21:00:52 2005
@@@@ -361,15 +361,15 @@@@ int recv_tcp(void *packet, size_t size)
@


1.1
log
@Update to 2.0.0rc2 from Chris Kuethe <ckuethe@@ualberta.ca>:
"I've been running this for quite some time now, and it plays much
nicer with machines with multiple interfaces that come and go.
Also, the traceroute mode seems a lot more accurate."

LP64 fixes from yours truly.

ok maintainer
@
text
@d2 4
a5 10
--- waitpacket.c.orig	2004-04-20 22:20:56.000000000 +0200
+++ waitpacket.c	2004-04-20 22:21:06.000000000 +0200
@@@@ -179,7 +179,7 @@@@ void log_icmp_ts(void *ts)
 		(unsigned int) ntohl(icmp_tstamp.orig),
 		(unsigned int) ntohl(icmp_tstamp.recv),
 		(unsigned int) ntohl(icmp_tstamp.tran));
-	printf("ICMP timestamp RTT tsrtt=%lu\n\n",
+	printf("ICMP timestamp RTT tsrtt=%u\n\n",
 		(get_midnight_ut_ms() - ntohl(icmp_tstamp.orig)));
 }
d7 22
@

