head	1.2;
access;
symbols
	sthen_20091003:1.1.1.1 sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2009.10.30.21.33.49;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2009.10.03.18.54.44;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.03.18.54.44;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to 0.12.0rc3
@
text
@$OpenBSD: patch-src_net_aggr_c,v 1.1 2009/10/03 18:54:44 sthen Exp $

- missing prototypes cause pointer truncation on 64-bit arch

--- src/net_aggr.c.orig	Thu Sep 17 02:08:51 2009
+++ src/net_aggr.c	Thu Sep 17 02:09:00 2009
@@@@ -28,6 +28,7 @@@@
 #include "plugin_hooks.h"
 #include "net_aggr.h"
 #include "jhash.h"
+#include "addr.h"
 
 void load_networks(char *filename, struct networks_table *nt, struct networks_cache *nc)
 {
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@import net/pmacct, based on a submission from Manuel Pata.

pmacct is a set of passive network monitoring tools to measure, account,
classify, aggregate and export IPv4 and IPv6 traffic, suitable to ISP, IXP,
CDN, IP carrier, data-centre and hot-spot enviroments.

Being able to collect flow data through libpcap, NetFlow and sFlow and
optionally augment this by configuring peering with the included BGP
daemon, granularity is fine enough for essential network management
tasks such as billing, graphing network resource usage, analysing live
or historical traffic trends, steering BGP peerings, real-time alerting,
and certain SLA monitoring.

Aggregation, flexible filtering, sampling and renormalization capabilities
are provided to help cope with the large amounts of data produced by high-
speed networks. Using either memory or database tables (MySQL, PostgreSQL,
SQLite) as backend storage, pmacct can easily feed data into external
tools, including RRDtool, GNUPlot, Net-SNMP, MRTG and Cacti.

The default package provides SQLite support, available flavors are:

        threads       compile with threads, required for BGP integration
                      or running packet classification in parallel
        mysql         compile with support for MySQL
        postgresql    compile with support for PostgreSQL
@
text
@@
