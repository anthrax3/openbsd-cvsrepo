head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.2
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.08.30.12.42.34;	author sthen;	state Exp;
branches;
next	1.3;
commitid	K6jhnW3Ft5BDcEsv;

1.3
date	2017.06.02.01.52.01;	author sthen;	state Exp;
branches;
next	1.2;
commitid	AeqXp0aDrmgBm3vb;

1.2
date	2016.02.27.18.01.42;	author sthen;	state Exp;
branches
	1.2.4.1;
next	1.1;
commitid	Qrq4UgH6YXp0jska;

1.1
date	2015.11.19.21.33.36;	author sthen;	state Exp;
branches
	1.1.2.1;
next	;
commitid	Gzhsw2lwQs2UACtY;

1.1.2.1
date	2016.05.06.19.47.52;	author sthen;	state Exp;
branches;
next	1.1.2.2;
commitid	MKMz7xu0r9zTXGQb;

1.1.2.2
date	2016.06.07.21.40.09;	author sthen;	state Exp;
branches;
next	;
commitid	yaNQYUA2kuhg22SZ;

1.2.4.1
date	2017.07.19.11.44.53;	author sthen;	state Exp;
branches;
next	;
commitid	wyZ5AWyDFhFcvGRt;


desc
@@


1.4
log
@update wireshark to 2.4.1, getting -current onto the new branch before 6.2
to simplify future updates. follow upstream's default of not building -gtk.
@
text
@$OpenBSD: patch-ui_qt_capture_filter_syntax_worker_cpp,v 1.3 2017/06/02 01:52:01 sthen Exp $

cope with old libpcap

Index: ui/qt/capture_filter_syntax_worker.cpp
--- ui/qt/capture_filter_syntax_worker.cpp.orig
+++ ui/qt/capture_filter_syntax_worker.cpp
@@@@ -96,11 +96,14 @@@@ void CaptureFilterSyntaxWorker::start() {
 #ifdef HAVE_EXTCAP
                 if (device.if_info.extcap == NULL || strlen(device.if_info.extcap) == 0) {
 #endif
+#ifdef DLT_USER0
                     if (device.active_dlt >= DLT_USER0 && device.active_dlt <= DLT_USER15) {
                         // Capture filter for DLT_USER is unknown
                         state = SyntaxLineEdit::Deprecated;
                         err_str = "Unable to check capture filter";
-                    } else {
+                    } else
+#endif
+                    {
                         active_dlts.insert(device.active_dlt);
                     }
 #ifdef HAVE_EXTCAP
@@@@ -122,7 +125,7 @@@@ void CaptureFilterSyntaxWorker::start() {
 #ifdef PCAP_NETMASK_UNKNOWN
             pc_err = pcap_compile(pd, &fcode, filter.toUtf8().constData(), 1 /* Do optimize */, PCAP_NETMASK_UNKNOWN);
 #else
-            pc_err = pcap_compile(pd, &fcode, filter.toUtf8().constData(), 1 /* Do optimize */, 0);
+            pc_err = pcap_compile(pd, &fcode, (char *)filter.toUtf8().constData(), 1 /* Do optimize */, 0);
 #endif
 
 #if DEBUG_SLEEP_TIME > 0
@


1.3
log
@update to wireshark-2.2.7
@
text
@d1 1
a1 1
$OpenBSD: patch-ui_qt_capture_filter_syntax_worker_cpp,v 1.2 2016/02/27 18:01:42 sthen Exp $
d8 3
a10 3
@@@@ -89,11 +89,14 @@@@ void CaptureFilterSyntaxWorker::start() {
                 if (device.if_info.extcap == NULL || strlen(device.if_info.extcap) == 0)
                 {
d24 1
a24 1
@@@@ -117,7 +120,7 @@@@ void CaptureFilterSyntaxWorker::start() {
@


1.2
log
@update to wireshark-2.0.2
@
text
@d1 1
a1 1
$OpenBSD: patch-ui_qt_capture_filter_syntax_worker_cpp,v 1.1 2015/11/19 21:33:36 sthen Exp $
d5 7
a11 6
--- ui/qt/capture_filter_syntax_worker.cpp.orig	Fri Feb 26 19:58:22 2016
+++ ui/qt/capture_filter_syntax_worker.cpp	Sat Feb 27 17:29:02 2016
@@@@ -85,11 +85,14 @@@@ void CaptureFilterSyntaxWorker::start() {
 
             device = g_array_index(global_capture_opts.all_ifaces, interface_t, if_idx);
             if (!device.locked && device.selected) {
d13 6
a18 6
                 if (device.active_dlt >= DLT_USER0 && device.active_dlt <= DLT_USER15) {
                     // Capture filter for DLT_USER is unknown
                     state = SyntaxLineEdit::Deprecated;
                     err_str = "Unable to check capture filter";
-                } else {
+                } else
d20 5
a24 5
+		{
                     active_dlts.insert(device.active_dlt);
                 }
             }
@@@@ -101,7 +104,7 @@@@ void CaptureFilterSyntaxWorker::start() {
@


1.2.4.1
log
@MFC update to wireshark-2.2.8
@
text
@d1 1
a1 1
$OpenBSD: patch-ui_qt_capture_filter_syntax_worker_cpp,v 1.3 2017/06/02 01:52:01 sthen Exp $
d5 6
a10 7
Index: ui/qt/capture_filter_syntax_worker.cpp
--- ui/qt/capture_filter_syntax_worker.cpp.orig
+++ ui/qt/capture_filter_syntax_worker.cpp
@@@@ -89,11 +89,14 @@@@ void CaptureFilterSyntaxWorker::start() {
                 if (device.if_info.extcap == NULL || strlen(device.if_info.extcap) == 0)
                 {
 #endif
d12 6
a17 6
                     if (device.active_dlt >= DLT_USER0 && device.active_dlt <= DLT_USER15) {
                         // Capture filter for DLT_USER is unknown
                         state = SyntaxLineEdit::Deprecated;
                         err_str = "Unable to check capture filter";
-                    } else {
+                    } else
d19 5
a23 5
+                    {
                         active_dlts.insert(device.active_dlt);
                     }
 #ifdef HAVE_EXTCAP
@@@@ -117,7 +120,7 @@@@ void CaptureFilterSyntaxWorker::start() {
@


1.1
log
@update to Wireshark 2.0.0

The new Qt user interface segfaults at startup on OpenBSD, so currently
only the Gtk+ user interface is packaged.
@
text
@d1 1
a1 1
$OpenBSD$
d5 19
a23 3
--- ui/qt/capture_filter_syntax_worker.cpp.orig	Wed Oct 14 16:40:08 2015
+++ ui/qt/capture_filter_syntax_worker.cpp	Wed Oct 14 16:41:47 2015
@@@@ -92,7 +92,7 @@@@ void CaptureFilterSyntaxWorker::start() {
d31 1
a31 1
             if (pc_err) {
@


1.1.2.1
log
@MFC update to wireshark-2.0.3, dissector crashes etc as usual
@
text
@d1 1
a1 1
$OpenBSD: patch-ui_qt_capture_filter_syntax_worker_cpp,v 1.2 2016/02/27 18:01:42 sthen Exp $
d5 3
a7 19
--- ui/qt/capture_filter_syntax_worker.cpp.orig	Fri Feb 26 19:58:22 2016
+++ ui/qt/capture_filter_syntax_worker.cpp	Sat Feb 27 17:29:02 2016
@@@@ -85,11 +85,14 @@@@ void CaptureFilterSyntaxWorker::start() {
 
             device = g_array_index(global_capture_opts.all_ifaces, interface_t, if_idx);
             if (!device.locked && device.selected) {
+#ifdef DLT_USER0
                 if (device.active_dlt >= DLT_USER0 && device.active_dlt <= DLT_USER15) {
                     // Capture filter for DLT_USER is unknown
                     state = SyntaxLineEdit::Deprecated;
                     err_str = "Unable to check capture filter";
-                } else {
+                } else
+#endif
+		{
                     active_dlts.insert(device.active_dlt);
                 }
             }
@@@@ -101,7 +104,7 @@@@ void CaptureFilterSyntaxWorker::start() {
d15 1
a15 1
 #if DEBUG_SLEEP_TIME > 0
@


1.1.2.2
log
@MFC update to wireshark-2.0.4.

infinite loop and lots of crash fixes in dissectors, plus various other
issues.
@
text
@@


