head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	landry_20140714:1.1.1.1
	nigel:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.10.14.11.00.22;	author sthen;	state Exp;
branches;
next	1.2;
commitid	93Y9IZOrkkFlT9ZV;

1.2
date	2014.10.17.23.29.46;	author sthen;	state Exp;
branches;
next	1.1;
commitid	hwiUlloYdTkNo8pf;

1.1
date	2014.07.14.08.44.51;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	NIXbEl5IMDizAMxx;

1.1.1.1
date	2014.07.14.08.44.51;	author landry;	state Exp;
branches;
next	;
commitid	NIXbEl5IMDizAMxx;


desc
@@


1.3
log
@update to wireshark-2.2.1
@
text
@$OpenBSD: patch-epan_crypt_airpdcap_ccmp_c,v 1.2 2014/10/17 23:29:46 sthen Exp $

Compiler issues warning, copy 3 MAC as separate memcpy
change the structure to do as a single memcpy.

--- epan/crypt/airpdcap_ccmp.c.orig	Tue Oct  4 19:27:46 2016
+++ epan/crypt/airpdcap_ccmp.c	Thu Oct 13 10:59:39 2016
@@@@ -151,7 +151,9 @@@@ static void ccmp_init_blocks(
 		aad[2] = wh->fc[0];
 	aad[3] = (UINT8)(wh->fc[1] & 0xc7);    /* XXX magic #s */
 	/* NB: we know 3 addresses are contiguous */
-	memcpy(aad + 4, &wh->addr1[0], 3 * AIRPDCAP_MAC_LEN);
+	memcpy(aad + 4, &wh->addr1[0], AIRPDCAP_MAC_LEN);
+	memcpy(aad + 4 + AIRPDCAP_MAC_LEN, &wh->addr2[0], AIRPDCAP_MAC_LEN);
+	memcpy(aad + 4 + 2 * AIRPDCAP_MAC_LEN, &wh->addr3[0], AIRPDCAP_MAC_LEN);
 	aad[22] = (UINT8)(wh->seq[0] & AIRPDCAP_SEQ_FRAG_MASK);
 	aad[23] = 0; /* all bits masked */
 	/*
@


1.2
log
@major version update to wireshark-1.12.1
@
text
@d1 1
a1 1
$OpenBSD: patch-epan_crypt_airpdcap_ccmp_c,v 1.1.1.1 2014/07/14 08:44:51 landry Exp $
d6 4
a9 4
--- epan/crypt/airpdcap_ccmp.c.orig	Tue Sep 16 17:14:42 2014
+++ epan/crypt/airpdcap_ccmp.c	Fri Oct 17 23:17:35 2014
@@@@ -147,7 +147,9 @@@@ static void ccmp_init_blocks(
 	aad[2] = (UINT8)(wh->fc[0] & 0x8f);    /* XXX magic #s */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d6 3
a8 3
--- epan/crypt/airpdcap_ccmp.c.orig	Thu Jan 12 15:10:44 2012
+++ epan/crypt/airpdcap_ccmp.c	Thu Jan 12 16:24:35 2012
@@@@ -149,7 +149,9 @@@@ static void ccmp_init_blocks(
@


1.1.1.1
log
@Import wireshark 1.10.8, mostly from nigel@@
Has been in -wip for years, tested by lots of ppl there.

Wireshark is a network capture tool and protocol analyzer, including
decoders for very many common and less-common protocols.

Packet dissectors (here in Wireshark, and in other programs such as tcpdump)
have a long history of security problems (but so do other programs in the
portstree..). In wireshark, these are isolated from the packet capture
code (which must have root privileges) by using a separate program,
dumpcap, to run the capture. It is installed setuid root, with
read/execute access granted only to users in the _wireshark group.

Wireshark itself doesn't need privileges if you only plan to analyse
traces produced by tcpdump.

DO NOT RUN WIRESHARK AS ROOT.

ok zhuk@@, README/tweaks from sthen@@
@
text
@@
