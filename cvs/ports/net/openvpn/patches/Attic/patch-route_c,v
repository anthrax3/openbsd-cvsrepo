head	1.7;
access;
symbols
	OPENBSD_5_3:1.6.0.6
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2013.04.20.16.22.55;	author sthen;	state dead;
branches;
next	1.6;

1.6
date	2012.01.12.08.15.30;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2010.11.10.13.50.04;	author fkr;	state Exp;
branches;
next	1.4;

1.4
date	2010.08.30.18.32.20;	author fkr;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.10.13.35.34;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.22.05.27.07;	author fkr;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.11.15.09.14;	author claudio;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update to OpenVPN 2.31, from Bjorn Ketelaars, maintainer timeout
@
text
@$OpenBSD: patch-route_c,v 1.6 2012/01/12 08:15:30 sthen Exp $
--- route.c.orig	Mon Feb 21 16:38:10 2011
+++ route.c	Tue Mar 22 23:00:56 2011
@@@@ -1926,7 +1926,7 @@@@ get_default_gateway (in_addr_t *ret, in_addr_t *netmas
     }
 }
 
-#elif defined(TARGET_OPENBSD) || defined(TARGET_NETBSD)
+#elif defined(TARGET_NETBSD)
 
 #include <sys/types.h>
 #include <sys/socket.h>
@@@@ -1975,6 +1975,169 @@@@ struct rt_msghdr {
 	int	rtm_errno;	/* why failed */
 	int	rtm_use;	/* from rtentry */
 	u_long	rtm_inits;	/* which metrics we are initializing */
+	struct	rt_metrics rtm_rmx; /* metrics themselves */
+};
+
+struct {
+  struct rt_msghdr m_rtm;
+  char       m_space[512];
+} m_rtmsg;
+
+#define ROUNDUP(a) \
+        ((a) > 0 ? (1 + (((a) - 1) | (sizeof(long) - 1))) : sizeof(long))
+
+static bool
+get_default_gateway (in_addr_t *ret)
+{
+  struct gc_arena gc = gc_new ();
+  int s, seq, l, rtm_addrs, i;
+  pid_t pid;
+  struct sockaddr so_dst, so_mask;
+  char *cp = m_rtmsg.m_space; 
+  struct sockaddr *gate = NULL, *sa;
+  struct  rt_msghdr *rtm_aux;
+
+#define NEXTADDR(w, u) \
+        if (rtm_addrs & (w)) {\
+            l = ROUNDUP(u.sa_len); memmove(cp, &(u), l); cp += l;\
+        }
+
+#define ADVANCE(x, n) (x += ROUNDUP((n)->sa_len))
+
+#define rtm m_rtmsg.m_rtm
+
+  pid = getpid();
+  seq = 0;
+  rtm_addrs = RTA_DST | RTA_NETMASK;
+
+  bzero(&so_dst, sizeof(so_dst));
+  bzero(&so_mask, sizeof(so_mask));
+  bzero(&rtm, sizeof(struct rt_msghdr));
+
+  rtm.rtm_type = RTM_GET;
+  rtm.rtm_flags = RTF_UP | RTF_GATEWAY;
+  rtm.rtm_version = RTM_VERSION;
+  rtm.rtm_seq = ++seq;
+  rtm.rtm_addrs = rtm_addrs; 
+
+  so_dst.sa_family = AF_INET;
+  so_dst.sa_len = sizeof(struct sockaddr_in);
+  so_mask.sa_family = AF_INET;
+  so_mask.sa_len = sizeof(struct sockaddr_in);
+
+  NEXTADDR(RTA_DST, so_dst);
+  NEXTADDR(RTA_NETMASK, so_mask);
+
+  rtm.rtm_msglen = l = cp - (char *)&m_rtmsg;
+
+  s = socket(PF_ROUTE, SOCK_RAW, 0);
+
+  if (write(s, (char *)&m_rtmsg, l) < 0)
+    {
+      warn("writing to routing socket");
+      gc_free (&gc);
+      close(s);
+      return false;
+    }
+
+  do {
+    l = read(s, (char *)&m_rtmsg, sizeof(m_rtmsg));
+  } while (l > 0 && (rtm.rtm_seq != seq || rtm.rtm_pid != pid));
+                        
+  close(s);
+
+  rtm_aux = &rtm;
+
+  cp = ((char *)(rtm_aux + 1));
+  if (rtm_aux->rtm_addrs) {
+    for (i = 1; i; i <<= 1)
+      if (i & rtm_aux->rtm_addrs) {
+	sa = (struct sockaddr *)cp;
+	if (i == RTA_GATEWAY )
+	  gate = sa;
+	ADVANCE(cp, sa);
+      }
+  }
+  else
+    {
+      gc_free (&gc);
+      return false;
+    }
+
+
+  if (gate != NULL )
+    {
+      *ret = ntohl(((struct sockaddr_in *)gate)->sin_addr.s_addr);
+#if 1
+      msg (M_INFO, "gw %s",
+	   print_in_addr_t ((in_addr_t) *ret, 0, &gc));
+#endif
+
+      gc_free (&gc);
+      return true;
+    }
+  else
+    {
+      gc_free (&gc);
+      return false;
+    }
+}
+
+#elif defined(TARGET_OPENBSD)
+
+#include <sys/types.h>
+#include <sys/socket.h>
+#include <netinet/in.h>
+
+/* all of this is taken from <net/route.h> in OpenBSD 3.6 */
+#define RTA_DST		0x1	/* destination sockaddr present */
+#define RTA_GATEWAY	0x2	/* gateway sockaddr present */
+#define RTA_NETMASK	0x4	/* netmask sockaddr present */
+
+#define RTM_GET		0x4	/* Report Metrics */
+
+#define RTM_VERSION	4	/* Up the ante and ignore older versions */
+
+#define	RTF_UP		0x1		/* route usable */
+#define	RTF_GATEWAY	0x2		/* destination is a gateway */
+
+/*
+ * Huge version for userland compatibility.
+ */
+struct rt_metrics {
+	u_int64_t	rmx_pksent;	/* packets sent using this route */
+	u_int		rmx_locks;	/* Kernel must leave these values */
+	u_int		rmx_mtu;	/* MTU for this path */
+	u_int		rmx_expire;	/* lifetime for route, e.g. redirect */
+	u_int		rmx_refcnt;	/* # references hold */
+	/* some apps may still need these no longer used metrics */
+	u_int		rmx_hopcount;	/* max hops expected */
+	u_int		rmx_recvpipe;	/* inbound delay-bandwidth product */
+	u_int		rmx_sendpipe;	/* outbound delay-bandwidth product */
+	u_int		rmx_ssthresh;	/* outbound gateway buffer limit */
+	u_int		rmx_rtt;	/* estimated round trip time */
+	u_int		rmx_rttvar;	/* estimated rtt variance */
+};
+
+/*
+ * Structures for routing messages.
+ */
+struct rt_msghdr {
+	u_short	rtm_msglen;	/* to skip over non-understood messages */
+	u_char	rtm_version;	/* future binary compatibility */
+	u_char	rtm_type;	/* message type */
+	u_short	rtm_hdrlen;	/* sizeof(rt_msghdr) to skip over the header */
+	u_short	rtm_index;	/* index for associated ifp */
+	u_short rtm_tableid;	/* routing table id */
+	u_char	rtm_prio;	/* routing priority */
+	u_char	rtm_pad;
+	int	rtm_addrs;	/* bitmask identifying sockaddrs in msg */
+	int	rtm_flags;	/* flags, incl. kern & message, e.g. DONE */
+	int	rtm_fmask;	/* bitmask used in RTM_CHANGE message */
+	pid_t	rtm_pid;	/* identify sender */
+	int	rtm_seq;	/* for sender to identify action */
+	int	rtm_errno;	/* why failed */
+	u_int	rtm_inits;	/* which metrics we are initializing */
 	struct	rt_metrics rtm_rmx; /* metrics themselves */
 };
 
@


1.6
log
@update to OpenVPN 2.2.2, ok fkr@@
@
text
@d1 1
a1 1
$OpenBSD: patch-route_c,v 1.5 2010/11/10 13:50:04 fkr Exp $
@


1.5
log
@update to openvpn 2.1.4, which is a bug fix release only.

ok dcoppa@@, benoit@@
@
text
@d1 4
a4 4
$OpenBSD: patch-route_c,v 1.4 2010/08/30 18:32:20 fkr Exp $
--- route.c.orig	Thu Nov  4 20:29:40 2010
+++ route.c	Fri Nov  5 21:12:15 2010
@@@@ -1948,7 +1948,7 @@@@ get_default_gateway (in_addr_t *ret, in_addr_t *netmas
d13 1
a13 1
@@@@ -1997,6 +1997,169 @@@@ struct rt_msghdr {
@


1.4
log
@update to OpenVPN 2.1.2
while here, enable dropping to _openvpn user in the sample configs.
ok and feedback ajacoutot@@
@
text
@d1 4
a4 4
$OpenBSD: patch-route_c,v 1.3 2009/10/10 13:35:34 sthen Exp $
--- route.c.orig	Mon Jul 12 03:54:09 2010
+++ route.c	Sun Aug 22 16:10:24 2010
@@@@ -1946,7 +1946,7 @@@@ get_default_gateway (in_addr_t *ret, in_addr_t *netmas
d13 1
a13 1
@@@@ -1995,6 +1995,169 @@@@ struct rt_msghdr {
@


1.3
log
@Upstream rerolled the distfile (fixed a Makefile and removed some
junk files, .svn and so on); sync distinfo and a (slightly gratuitous)
package bump. Regen patches while there.

Noticed by naddy@@ and Viq. ok fkr@@
@
text
@d1 4
a4 4
$OpenBSD: patch-route_c,v 1.2 2008/10/22 05:27:07 fkr Exp $
--- route.c.orig	Thu Oct  1 20:02:18 2009
+++ route.c	Sat Oct 10 15:33:07 2009
@@@@ -1919,7 +1919,7 @@@@ get_default_gateway (in_addr_t *ret, in_addr_t *netmas
d13 1
a13 1
@@@@ -1968,6 +1968,169 @@@@ struct rt_msghdr {
@


1.2
log
@update to openvpn 2.1rc13
ok bernd@@
@
text
@d1 4
a4 4
$OpenBSD: patch-route_c,v 1.1 2007/09/11 15:09:14 claudio Exp $
--- route.c.orig	Sun Aug 10 20:35:25 2008
+++ route.c	Sun Sep 21 20:25:00 2008
@@@@ -1869,7 +1869,7 @@@@ get_default_gateway (in_addr_t *ret, in_addr_t *netmas
d13 1
a13 1
@@@@ -1918,6 +1918,169 @@@@ struct rt_msghdr {
@


1.1
log
@On -current OpenVPN no longer works because of their brain damaged way
to talk to the routing socket to get the default gateway.
Instead of pulling in net/route.h they copied parts of the contents into
their code. Update the needed bits to make it work again.
OK fkr@@, jasper@@ and Thomas Delaet (maintainer)
@
text
@d1 4
a4 4
$OpenBSD$
--- route.c.orig	Wed Apr  5 08:13:55 2006
+++ route.c	Thu Sep  6 09:35:31 2007
@@@@ -1622,7 +1622,7 @@@@ get_default_gateway (in_addr_t *ret)
d13 1
a13 1
@@@@ -1671,6 +1671,169 @@@@ struct rt_msghdr {
@

