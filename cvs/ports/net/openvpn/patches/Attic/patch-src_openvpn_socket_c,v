head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2013.04.23.09.31.33;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2013.04.20.16.22.55;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove the (minimal) rtable support; shortly after it was added to the
OpenVPN port, "exec" was added to route(8) which provides the same support
in a more general way. use a command like this instead:

"route -T <table#> exec openvpn -daemon ..."
@
text
@$OpenBSD: patch-src_openvpn_socket_c,v 1.1 2013/04/20 16:22:55 sthen Exp $
--- src/openvpn/socket.c.orig	Thu Dec 13 16:46:01 2012
+++ src/openvpn/socket.c	Thu Mar  7 14:25:07 2013
@@@@ -586,6 +586,20 @@@@ socket_set_mark (int sd, int mark)
 #endif
 }
 
+static void
+socket_set_rtable (int sd, int rtable)
+{
+#ifdef TARGET_OPENBSD
+  if (rtable > 0)
+  {
+    if (setsockopt (sd, IPPROTO_IP, SO_RTABLE, &rtable, sizeof(rtable)) == -1)
+      msg (M_WARN, "Socket flags: SO_RTABLE=%d failed, cannot bind on specified routing domain", rtable);
+    else
+      dmsg (D_SOCKET_DEBUG, "Socket flags: SO_RTABLE=%d succeeded", rtable);
+  }
+#endif
+}
+
 static bool
 socket_set_flags (int sd, unsigned int sockflags)
 {
@@@@ -1367,6 +1381,7 @@@@ link_socket_init_phase1 (struct link_socket *sock,
 			 int mtu_discover_type,
 			 int rcvbuf,
 			 int sndbuf,
+			 int rtable,
 			 int mark,
 			 unsigned int sockflags)
 {
@@@@ -1481,6 +1496,9 @@@@ link_socket_init_phase1 (struct link_socket *sock,
   else if (mode != LS_MODE_TCP_ACCEPT_FROM)
     {
       create_socket (sock);
+
+      /* set the routing domain for the socket */
+      socket_set_rtable (sock->sd, rtable);
 
       /* set socket buffers based on --sndbuf and --rcvbuf options */
       socket_set_buffers (sock->sd, &sock->socket_buffer_sizes);
@


1.1
log
@update to OpenVPN 2.31, from Bjorn Ketelaars, maintainer timeout
@
text
@d1 1
a1 1
$OpenBSD$
@

