head	1.5;
access;
symbols
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.04.20.16.22.55;	author sthen;	state dead;
branches;
next	1.4;

1.4
date	2012.01.12.08.15.30;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2010.08.30.18.32.20;	author fkr;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.08.09.18.25;	author fkr;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.26.22.55.27;	author fkr;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to OpenVPN 2.31, from Bjorn Ketelaars, maintainer timeout
@
text
@$OpenBSD: patch-socket_c,v 1.4 2012/01/12 08:15:30 sthen Exp $
--- socket.c.orig	Mon Feb 21 16:38:10 2011
+++ socket.c	Tue Mar 22 23:00:56 2011
@@@@ -532,6 +532,20 @@@@ socket_set_tcp_nodelay (int sd, int state)
 #endif
 }
 
+static void
+socket_set_rtable (int sd, int rtable)
+{
+#ifdef TARGET_OPENBSD
+  if (rtable > 0)
+  {
+    if (setsockopt (sd, IPPROTO_IP, SO_RTABLE, &rtable, sizeof(rtable)) == -1)
+      msg (M_SOCKERR, "Socket flags: SO_RTABLE=%d failed, cannot bind on specified routing domain", rtable);
+    else
+      dmsg (D_SOCKET_DEBUG, "Socket flags: SO_RTABLE=%d succeeded", rtable);
+  }
+#endif
+}
+
 static bool
 socket_set_flags (int sd, unsigned int sockflags)
 {
@@@@ -1210,6 +1224,7 @@@@ link_socket_init_phase1 (struct link_socket *sock,
 			 int mtu_discover_type,
 			 int rcvbuf,
 			 int sndbuf,
+			 int rtable,
 			 unsigned int sockflags)
 {
   ASSERT (sock);
@@@@ -1320,6 +1335,9 @@@@ link_socket_init_phase1 (struct link_socket *sock,
   else if (mode != LS_MODE_TCP_ACCEPT_FROM)
     {
       create_socket (sock);
+
+      /* set the routing domain for the socket */
+      socket_set_rtable (sock->sd, rtable);
 
       /* set socket buffers based on --sndbuf and --rcvbuf options */
       socket_set_buffers (sock->sd, &sock->socket_buffer_sizes);
@


1.4
log
@update to OpenVPN 2.2.2, ok fkr@@
@
text
@d1 1
a1 1
$OpenBSD: patch-socket_c,v 1.3 2010/08/30 18:32:20 fkr Exp $
@


1.3
log
@update to OpenVPN 2.1.2
while here, enable dropping to _openvpn user in the sample configs.
ok and feedback ajacoutot@@
@
text
@d1 4
a4 4
$OpenBSD: patch-socket_c,v 1.2 2010/07/08 09:18:25 fkr Exp $
--- socket.c.orig	Mon Jul 26 08:15:03 2010
+++ socket.c	Sun Aug 22 16:13:58 2010
@@@@ -533,6 +533,20 @@@@ socket_set_tcp_nodelay (int sd, int state)
d25 1
a25 1
@@@@ -1211,6 +1225,7 @@@@ link_socket_init_phase1 (struct link_socket *sock,
d33 1
a33 1
@@@@ -1321,6 +1336,9 @@@@ link_socket_init_phase1 (struct link_socket *sock,
@


1.2
log
@unbreak and adopt to the changes to rdomains/rtables in -current.
feedback and ok sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-socket_c,v 1.1 2009/11/26 22:55:27 fkr Exp $
--- socket.c.orig	Fri Dec 11 05:59:45 2009
+++ socket.c	Tue Jul  6 23:49:11 2010
@@@@ -503,6 +503,20 @@@@ socket_set_tcp_nodelay (int sd, int state)
d25 1
a25 1
@@@@ -1181,6 +1195,7 @@@@ link_socket_init_phase1 (struct link_socket *sock,
d33 1
a33 1
@@@@ -1291,6 +1306,10 @@@@ link_socket_init_phase1 (struct link_socket *sock,
d40 3
a42 4
+
       resolve_bind_local (sock);
       resolve_remote (sock, 1, NULL, NULL);
     }
@


1.1
log
@update to OpenVPN 2.1rc22.
rdomain support from Laurent Ghigonis.

tested by various.

ok bernd@@, benoit@@
@
text
@d1 3
a3 3
$OpenBSD$
--- socket.c.orig	Thu Oct  1 18:02:18 2009
+++ socket.c	Thu Oct 29 21:27:46 2009
d9 1
a9 1
+socket_set_rdomain (int sd, int rdomain)
d12 1
a12 1
+  if (rdomain > 0)
d14 2
a15 2
+    if (setsockopt (sd, IPPROTO_IP, SO_RDOMAIN, &rdomain, sizeof(rdomain)) == -1)
+      msg (M_SOCKERR, "Socket flags: SO_RDOMAIN=%d failed, cannot bind on specified routing domain", rdomain);
d17 1
a17 1
+      dmsg (D_SOCKET_DEBUG, "Socket flags: SO_RDOMAIN=%d succeeded", rdomain);
d29 1
a29 1
+			 int rdomain,
d39 1
a39 1
+      socket_set_rdomain (sock->sd, rdomain);
@

