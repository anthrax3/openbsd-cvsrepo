head	1.2;
access;
symbols
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.10.10.21.07.07;	author sthen;	state dead;
branches;
next	1.1;
commitid	EvH0l5FzP6VUpf6K;

1.1
date	2013.10.21.09.15.07;	author bluhm;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2014.12.01.21.44.53;	author sthen;	state dead;
branches;
next	;
commitid	r8kDyMxYmUU1ERGu;


desc
@@


1.2
log
@update to openvpn-2.3.4
@
text
@$OpenBSD: patch-src_openvpn_route_h,v 1.1 2013/10/21 09:15:07 bluhm Exp $
--- src/openvpn/route.h.orig	Wed Mar 20 09:28:14 2013
+++ src/openvpn/route.h	Sat Oct 19 15:54:29 2013
@@@@ -110,7 +110,7 @@@@ struct route_ipv6_option_list {
   struct route_ipv6_option routes_ipv6[EMPTY_ARRAY_SIZE];
 };
 
-struct route {
+struct route_base {
 # define RT_DEFINED        (1<<0)
 # define RT_ADDED          (1<<1)
 # define RT_METRIC_DEFINED (1<<2)
@@@@ -190,7 +190,7 @@@@ struct route_list {
   unsigned int flags;     /* RG_x flags */
   int capacity;
   int n;
-  struct route routes[EMPTY_ARRAY_SIZE];
+  struct route_base routes[EMPTY_ARRAY_SIZE];
 };
 
 #if P2MP
@@@@ -223,7 +223,7 @@@@ struct route_ipv6_list *new_route_ipv6_list (const int
 void add_route_ipv6 (struct route_ipv6 *r, const struct tuntap *tt, unsigned int flags, const struct env_set *es);
 void delete_route_ipv6 (const struct route_ipv6 *r, const struct tuntap *tt, unsigned int flags, const struct env_set *es);
 
-void add_route (struct route *r,
+void add_route (struct route_base *r,
 		const struct tuntap *tt,
 		unsigned int flags,
 		const struct route_gateway_info *rgi,
@@@@ -301,8 +301,8 @@@@ void print_routes (const struct route_list *rl, int le
 
 void show_routes (int msglev);
 bool test_routes (const struct route_list *rl, const struct tuntap *tt);
-bool add_route_ipapi (const struct route *r, const struct tuntap *tt, DWORD adapter_index);
-bool del_route_ipapi (const struct route *r, const struct tuntap *tt);
+bool add_route_ipapi (const struct route_base *r, const struct tuntap *tt, DWORD adapter_index);
+bool del_route_ipapi (const struct route_base *r, const struct tuntap *tt);
 
 #else
 static inline bool test_routes (const struct route_list *rl, const struct tuntap *tt) { return true; }
@


1.1
log
@OpenVPN copies part of the net/route.h header file into their route.c
source file.  They cannot include it, because the kernel route
structure has a name conflict with the openvpn route structure.
The obvious solution is to rename the openvpn route.  According to
the sources, NetBSD and FreeBSD and Dragonfly also suffer from that.

This change is needed for an upcoming routing message change.  We
do not want to patch the port each time when we change the system
header file.

Test and OK sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.4.1
log
@MFC - update to OpenVPN 2.3.6, fixing some assertion crashes (DoS)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_openvpn_route_h,v 1.1 2013/10/21 09:15:07 bluhm Exp $
@


