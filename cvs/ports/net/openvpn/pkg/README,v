head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.0.16
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.18
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.14
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.12
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2017.03.28.22.16.37;	author jca;	state Exp;
branches;
next	1.2;
commitid	8uDESXa8GYst7L1A;

1.2
date	2016.04.25.18.21.09;	author sthen;	state Exp;
branches;
next	1.1;
commitid	tQg3mI0Y5O7AxGPu;

1.1
date	2011.11.02.16.45.02;	author stsp;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to openvpn-2.4.1

ok danj@@
@
text
@$OpenBSD: README,v 1.2 2016/04/25 18:21:09 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Upgrading from OpenBSD 5.8 or earlier
-------------------------------------
Note that in previous versions of OpenBSD, the tun(4) interface was
used for both layer-3 (routed) connections, and also for layer-2
(bridged, using the "link0" flag). This was changed in OpenBSD 5.8,
layer-2 (bridged) connections should now use the tap(4) interface
instead as on other OS. Consult the upgrade guide for 5.9 for more
information.

Using an /etc/hostname.* file without persist-tun
-------------------------------------------------
OpenVPN normally re-creates the tun/tap interface at startup.
This has been reported to cause problems with some PF configurations
(especially with queueing), if you run into problems with this then
OpenVPN should be started from the hostname.* file, e.g.:

# cat << EOF > /etc/hostname.tun0
up
!${TRUEPREFIX}/sbin/openvpn --daemon \
    --config ${SYSCONFDIR}/openvpn/server.conf
EOF

(Or use hostname.tap0 for a layer-2 connection).

Using an /etc/hostname.* file with persist-tun
----------------------------------------------
When the persist-tun option is used, the tun(4) or tap(4) interface can
be configured before OpenVPN is started, just like any other interface.

The example below configures a point-to-point link between two sites
accross an OpenVPN tunnel. Site-1 has tunnel end point 10.1.1.1 and
local network 192.168.0.0/24. Site-2 has tunnel end point 10.1.1.2
and local network 192.168.1.1/24. The sites connect their local
networks via the tunnel.

Site-1:
# cat << EOF > /etc/hostname.tun0
inet 10.1.1.1 255.255.255.255 NONE
dest 10.1.1.2
!/sbin/route add -host 10.1.1.1 127.0.0.1
!/sbin/route add -net 192.168.1.1/24 10.1.1.2
EOF

Site-2:
# cat << EOF > /etc/hostname.tun0
inet 10.1.1.2 255.255.255.255 NONE
dest 10.1.1.1
!/sbin/route add -host 10.1.1.2 127.0.0.1
!/sbin/route add -net 192.168.0.0/24 10.1.1.1
EOF

In this case, there is no need to configure an IP address on the tun
interface from the OpenVPN configuration file. The tun interface will
become active when OpenVPN starts using it.

A suitable OpenVPN configuration file for site-1 might look as follows:

  daemon
  dev tun0
  persist-tun
  proto udp
  local site-1.example.com
  remote site-2.example.com
  secret /etc/openvpn/secret.key
  ping 10
  ping-restart 60

Running OpenVPN in chroot
-------------------------
OpenVPN can run as an unprivileged user inside chroot when the
persist-tun, persist-key, and persist-local-ip options are used.
Note that persist-local-ip requires that OpenVPN is listening on an
interface with a static IP address. To chroot OpenVPN, use the following
as part of your configuration file:

  persist-tun
  persist-key
  persist-local-ip
  user _openvpn
  group _openvpn
  chroot /var/empty
@


1.2
log
@mention tap in openvpn readme
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1 2011/11/02 16:45:02 stsp Exp $
d21 1
a21 1
then OpenVPN should be started from the hostname.* file, e.g.:
@


1.1
log
@Move MESSAGE to README. Explain how to configure tun devices with
/etc/hostname.if, and how to run openvpn in /var/empty chroot.
ok sthen
@
text
@d1 1
a1 1
$OpenBSD$
d7 15
a21 7
Using /etc/hostname.tun0 without persist-tun
============================================

OpenVPN re-creates the tun(4) interface at startup, unless the
persist-tun option is given in the configuration file. When not using
persist-tun, compatibility with PF is improved by starting OpenVPN from
hostname.if(5).  For example:
d29 1
a29 2
Using /etc/hostname.tun0 with persist-tun
=========================================
d31 4
a34 2
When the persist-tun option is used, the tun(4) interface can be
configured before OpenVPN is started, just like any other interface.
d75 1
a75 2
=========================

@

