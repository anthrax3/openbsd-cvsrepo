head	1.5;
access;
symbols
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3;
locks; strict;
comment	@# @;


1.5
date	2006.02.05.15.53.14;	author alek;	state dead;
branches;
next	1.4;

1.4
date	2005.10.21.15.59.54;	author naddy;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.23.21.26.27;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.16.21.24.15;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.16.15.37.31;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@- Update to 2.3.1
- Reformat DESCR
- Remove snprintf patches

From Moritz Grimm <gtgbr@@gmx.net> (MAINTAINER)
@
text
@$OpenBSD: patch-src_util_c,v 1.4 2005/10/21 15:59:54 naddy Exp $
--- src/util.c.orig	Fri Aug 19 04:01:58 2005
+++ src/util.c	Tue Aug 23 14:12:44 2005
@@@@ -229,12 +229,22 @@@@ char *util_get_path_from_normalised_uri(
     char *fullpath;
     char *webroot;
     ice_config_t *config = config_get_config();
+    size_t pathlen;
 
     webroot = config->webroot_dir;
 
-    fullpath = malloc(strlen(uri) + strlen(webroot) + 1);
-    if (fullpath)
-        sprintf (fullpath, "%s%s", webroot, uri);
+    pathlen = strlen(uri) + strlen(webroot) + 1;
+    fullpath = malloc(pathlen);
+    if (fullpath) {
+        int ret = snprintf(fullpath, pathlen, "%s%s", webroot, uri);
+        if (ret == -1 || ret >= pathlen) {
+            WARN0("Error generating full path name in util_get_path_from_normalised_uri()");
+            free(fullpath);
+            fullpath = NULL;
+        }
+    } else
+        WARN0("Failed to allocate memory for full path name");
+
     config_release_config();
 
     return fullpath;
@@@@ -572,24 +582,40 @@@@ char *util_dict_urlencode(util_dict *dic
     char *res, *tmp;
     char *enc;
     int start = 1;
+    size_t buflen;
 
     for (res = NULL; dict; dict = dict->next) {
         /* encode key */
         if (!dict->key)
             continue;
         if (start) {
-            if (!(res = malloc(strlen(dict->key) + 1))) {
+            int ret;
+            buflen = strlen(dict->key) + 1;
+            if (!(res = malloc(buflen))) {
                 return NULL;
             }
-            sprintf(res, "%s", dict->key);
+            ret = snprintf(res, buflen, "%s", dict->key);
+            if (ret == -1 || ret >= buflen) {
+                free(res);
+                return NULL;
+            }
             start = 0;
         } else {
-            if (!(tmp = realloc(res, strlen(res) + strlen(dict->key) + 2))) {
+            buflen = strlen(res) + strlen(dict->key) + 2;
+            if ((tmp = realloc(res, buflen)) == NULL) {
                 free(res);
                 return NULL;
-            } else
+            } else {
+                int ret;
+
                 res = tmp;
-            sprintf(res + strlen(res), "%c%s", delim, dict->key);
+                ret = snprintf(res + strlen(res), buflen - strlen(res),
+                    "%c%s", delim, dict->key);
+                if (ret == -1 || ret >= buflen - strlen(res)) {
+                    free(res);
+                    return NULL;
+                }
+            }
         }
 
         /* encode value */
@@@@ -600,14 +626,25 @@@@ char *util_dict_urlencode(util_dict *dic
             return NULL;
         }
 
-        if (!(tmp = realloc(res, strlen(res) + strlen(enc) + 2))) {
+        buflen = strlen(res) + strlen(enc) + 2;
+        if ((tmp = realloc(res, buflen)) == NULL) {
             free(enc);
             free(res);
             return NULL;
-        } else
+        } else {
+            int ret;
+            size_t reslen;
             res = tmp;
-        sprintf(res + strlen(res), "=%s", enc);
-        free(enc);
+            reslen = strlen(res);
+            ret = snprintf(res + reslen, buflen - reslen, "=%s", enc);
+            if (ret == -1 || ret >= buflen - reslen) {
+                free(enc);
+                free(res);
+                return NULL;
+            }
+            free(enc);
+            enc = NULL;
+        }
     }
 
     return res;
@


1.4
log
@Update to 2.3.0 from maintainer Moritz Grimm.

New features:
  * Support Ogg Speex, Ogg FLAC, Ogg Midi
  * Intro file support
  * On-demand relays
  * Improved mount-level settings
  * URL listener authenticator
  * Authentication for on-demand files
  * Updated admin/web interface
  * Various reliability bug fixes

Port changes:
  * Ogg Theora streaming is now enabled
  * Revamped README.OpenBSD file, tightened DESCR
  * <fileserve> directive not disabled any longer in icecast.xml.dist
@
text
@d1 1
a1 1
$OpenBSD: patch-src_util_c,v 1.2 2005/04/16 21:24:15 sturm Exp $
@


1.3
log
@another busted snprintf; maintainer Moritz Grimm
@
text
@d2 2
a3 2
--- src/util.c.orig	Mon Nov  8 02:21:54 2004
+++ src/util.c	Tue Aug 23 13:58:40 2005
d30 1
a30 1
@@@@ -568,24 +578,40 @@@@ char *util_dict_urlencode(util_dict *dic
d76 1
a76 1
@@@@ -596,14 +622,25 @@@@ char *util_dict_urlencode(util_dict *dic
@


1.2
log
@more cleanup from maintainer Moritz Grimm <gtgbr at gmx.net>
@
text
@d1 1
a1 1
$OpenBSD: patch-src_util_c,v 1.1 2005/04/16 15:37:31 sturm Exp $
d3 1
a3 1
+++ src/util.c	Sat Apr 16 22:43:26 2005
d76 1
a76 1
@@@@ -596,14 +622,23 @@@@ char *util_dict_urlencode(util_dict *dic
d89 1
d93 3
a95 2
+            ret = snprintf(res + strlen(res), buflen - strlen(res), "=%s", enc);
+            if (ret == -1 || ret >= buflen - strlen(res)) {
@


1.1
log
@convert simple sprintf() to snprintf()

from maintainer Moritz Grimm <gtgbr at gmx.net>
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 2
+++ src/util.c	Mon Mar  7 14:10:16 2005
@@@@ -229,12 +229,14 @@@@ char *util_get_path_from_normalised_uri(
d13 2
d17 10
a26 3
     if (fullpath)
-        sprintf (fullpath, "%s%s", webroot, uri);
+        snprintf(fullpath, pathlen, "%s%s", webroot, uri);
d30 1
a30 1
@@@@ -568,24 +570,29 @@@@ char *util_dict_urlencode(util_dict *dic
d42 1
d48 5
a52 1
+            snprintf(res, buflen, "%s", dict->key);
a58 1
+                res = NULL;
d62 2
d66 6
a71 1
+                snprintf(res + strlen(res), buflen - strlen(res), "%c%s", delim, dict->key);
d76 1
a76 1
@@@@ -596,14 +603,18 @@@@ char *util_dict_urlencode(util_dict *dic
a84 1
+            enc = res = NULL;
d88 1
d92 6
a97 1
+            snprintf(res + strlen(res), buflen - strlen(res), "=%s", enc);
@

