head	1.2;
access;
symbols
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2001.03.06.06.52.41;	author fgsch;	state dead;
branches;
next	1.1;

1.1
date	2000.08.29.03.40.36;	author fgsch;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.03.22.15.24.30;	author naddy;	state dead;
branches;
next	;


desc
@@


1.2
log
@Remove icepass; use encrypt(1) instead.
Regen patches and bump version.
@
text
@/*	$OpenBSD: icepass.c,v 1.1 2000/08/29 03:40:36 fgsch Exp $	*/

/*
 * Create an encrypted password to use in icecast.conf, users.aut and
 * command line when running the icecast server.
 * The encription algorithm is blowfish, with 8 rounds by default.
 *
 * The number of rounds might be specified in command line.
 *
 * Tue Aug 29 00:06:28 ART 2000, -fgsch
 */

#include <pwd.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>

int
main(argc, argv)
	int argc;
	char **argv;
{
	char *p, salt[_PASSWORD_LEN];
	int rounds = 8;

	if (argc > 1) {
		char *ep;

		if (!strcmp(argv[1], "-h")) {
			fprintf(stderr, "usage: icepass [rounds]\n");
			exit (1);
		}

		rounds = strtol(argv[1], &ep, 10);
		if (argv[1] == '\0' || *ep != '\0' || rounds < 4)
			rounds = 4;
	}

	strncpy(salt, bcrypt_gensalt(rounds), _PASSWORD_LEN - 1);
	salt[_PASSWORD_LEN - 1] = 0;

	p = crypt(getpass("Password:"), salt);
	if (p)
		printf("Encrypted password: %s\n", p);
	else
		printf("Error encrypting password\n");

	return (0);
}

@


1.1
log
@Add missing program to generate encrypted passwords using blowfish
with 8 rounds by default.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1.2.1
log
@MFC:
Security update to 1.3.10; fixes several problems reported
to BugTraq recently, plus some other issues.
@
text
@d1 1
a1 1
/*	$OpenBSD: icepass.c,v 1.1 2000/08/29 03:40:36 fgsch Exp $	*/
@


