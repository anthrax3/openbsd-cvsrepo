head	1.4;
access;
symbols
	OPENBSD_6_1:1.1.0.6
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.09.13.19.51.33;	author sthen;	state Exp;
branches;
next	1.3;
commitid	ohsN70BKF2VBQy4V;

1.3
date	2017.09.13.11.03.51;	author sthen;	state Exp;
branches;
next	1.2;
commitid	5KYrSeIwLpQ7cCKI;

1.2
date	2017.07.14.09.43.37;	author sthen;	state Exp;
branches;
next	1.1;
commitid	mtu0GYPVU1hHFrjm;

1.1
date	2015.09.24.15.14.11;	author sthen;	state Exp;
branches;
next	;
commitid	kjHgGFNPysEqXuT2;


desc
@@


1.4
log
@s/rtadvd_flags/rtadvd flags/ (typo), from Caspar Schutijser, thanks!
@
text
@$OpenBSD: README,v 1.3 2017/09/13 11:03:51 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

DHCPv6-PD (Prefix Delegation)
=============================
As OpenBSD doesn't yet support DHCPv6 in the base OS, one common use of
this package is to request Prefix Delegation from an ISP, which hands you
one or more routable IPv6 subnet that can be assigned to interfaces
facing your local network.

Here is a sample configuration achieving this, fetching addresses over the
pppoe0 interface and assigning it to multiple local networks.

-- -- -- -- -- --
ipv6only
duid
persistent
option rapid_commit
require dhcp_server_identifier

# disable running any hooks; not typically required for simple DHCPv6-PD setup
script /usr/bin/true

# Disable dhcpcd's own router solicitation support; allow the kernel
# to do this instead by setting "inet6 autoconf" in hostname.pppoe0
noipv6rs

# List interfaces explicitly so that dhcpcd doesn't touch others
allowinterfaces pppoe0 em0 vlan3 vlan5

interface pppoe0
	# request prefix delegation for downstream interfaces.
	ia_pd 2 em0/1 vlan3/2 vlan5/3
-- -- -- -- -- --

In normal cases, you would use rtadvd(8) to advertise these prefixes to
clients (e.g. "rcctl enable rtadvd; rcctl set rtadvd flags em0 vlan3 vlan5").
@


1.3
log
@Mention use of rtadvd(8) for handing addresses to clients.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.2 2017/07/14 09:43:37 sthen Exp $
d40 1
a40 1
clients (e.g. "rcctl enable rtadvd; rcctl set rtadvd_flags em0 vlan3 vlan5").
@


1.2
log
@Adjust the sample DHCPv6-PD configuration in dhcpcd's pkg-readme following
earlier feedback from naddy, and a reminder about rtsol from Ross L Richardson.

- convert some description into comments in the sample config

- disable all hooks in DHCPv6-PD sample by overriding "script", they're
often not needed in this situation (and disabling hooks individually with
nohook leaves you open to the potential for new ones being added later)

- rtsol -> "inet6 autoconf"
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1 2015/09/24 15:14:11 sthen Exp $
d38 3
@


1.1
log
@Add a README with simple example config for dhcpcd showing DHCPv6-PD use
over pppoe, fetching prefixes from upstream and assigning them to a couple
of local interfaces.
@
text
@d1 1
a1 1
$OpenBSD: README.template,v 1.4 2011/06/02 13:44:40 ajacoutot Exp $
d15 1
a15 6
pppoe0 interface and assigning it to multiple local networks. In this example,
dhcpcd's router solicitation support is disabled (noipv6rs) - the kernel's
support should be used instead ("rtsol" in /etc/hostname.pppoe0). It fetches
addresses over pppoe0 and assigns them to "downstream" interfaces em0, vlan3
and vlan5. These interfaces are listed explicitly so that dhcpcd doesn't
touch other interfaces at all.
d17 1
a17 1
noipv6rs
d23 9
a31 1
nohook lookup-hostname
d35 3
a37 2
  iaid 1
  ia_pd 2 em0/1 vlan3/2 vlan5/3
@

