head	1.3;
access;
symbols
	OPENBSD_5_8:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2016.04.21.22.09.53;	author sthen;	state dead;
branches;
next	1.2;
commitid	SbzAohRejR2wIAJC;

1.2
date	2016.04.18.09.10.23;	author sthen;	state Exp;
branches;
next	1.1;
commitid	FOAwDLqhJ2nGqi7n;

1.1
date	2016.01.08.12.59.38;	author jasper;	state dead;
branches
	1.1.2.1;
next	;
commitid	oPqvBU0fiXshZZm3;

1.1.2.1
date	2016.01.08.12.59.38;	author jasper;	state Exp;
branches;
next	;
commitid	oPqvBU0fiXshZZm3;


desc
@@


1.3
log
@update to dhcpcd-6.10.3
@
text
@$OpenBSD: patch-dhcp6_c,v 1.2 2016/04/18 09:10:23 sthen Exp $

"If sla is 0, just copy the prefix and don't set a blackhole route if end
prefix is the same as the delegated prefix."

http://roy.marples.name/projects/dhcpcd/info/7461677bd0
http://roy.marples.name/projects/dhcpcd/info/59cdbb6e777c4bec

--- dhcp6.c.orig	Fri Apr  8 22:54:04 2016
+++ dhcp6.c	Sun Apr 17 16:43:56 2016
@@@@ -437,7 +437,7 @@@@ dhcp6_delegateaddr(struct in6_addr *addr, struct inter
 		else {
 			asla.prefix_len = (uint8_t)(prefix->prefix_len + bits);
 
-			/* Make a 64 prefix by default, as this maks SLAAC
+			/* Make a 64 prefix by default, as this makes SLAAC
 			 * possible.
 			 * Otherwise round up to the nearest 4 bits. */
 			if (asla.prefix_len <= 64)
@@@@ -455,7 +455,9 @@@@ dhcp6_delegateaddr(struct in6_addr *addr, struct inter
 			    prefix->prefix_len);
 	}
 
-	if (ipv6_userprefix(&prefix->prefix, prefix->prefix_len,
+	if (sla->sla == 0) {
+		*addr = prefix->prefix;
+	} else if (ipv6_userprefix(&prefix->prefix, prefix->prefix_len,
 		sla->sla, addr, sla->prefix_len) == -1)
 	{
 		sa = inet_ntop(AF_INET6, &prefix->prefix,
@@@@ -2389,6 +2391,11 @@@@ dhcp6_ifdelegateaddr(struct interface *ifp, struct ipv
 	a->prefix = addr;
 	a->prefix_len = (uint8_t)pfxlen;
 
+	/* If sla is zero and the prefix length hasn't changed,
+	 * don't install a blackhole route. */
+	if (sla->sla_set && sla->sla == 0 && prefix->prefix_len == pfxlen)
+		prefix->flags |= IPV6_AF_DELEGATEDZERO;
+
 	/* Add our suffix */
 	if (sla->suffix) {
 		a->addr = addr;
@@@@ -2512,9 +2519,6 @@@@ dhcp6_delegate_prefix(struct interface *ifp)
 				}
 				for (j = 0; j < ia->sla_len; j++) {
 					sla = &ia->sla[j];
-					if (sla->sla_set && sla->sla == 0)
-						ap->flags |=
-						    IPV6_AF_DELEGATEDZERO;
 					if (strcmp(ifd->name, sla->ifname))
 						continue;
 					if (ifd->carrier != LINK_UP) {
@


1.2
log
@Fix dhcpcd regression in 6.10.2: "If sla is 0, just copy the prefix and don't
set a blackhole route if end prefix is the same as the delegated prefix."
Fix from upstream, diff from LÉVAI Dániel.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@file patch-dhcp6_c was initially added on branch OPENBSD_5_8.
@
text
@d1 52
@


1.1.2.1
log
@Security fixes for CVE-2016-1503 CVE-2016-1504
@
text
@a0 24
$OpenBSD$

Security fix for CVE-2016-1504
http://roy.marples.name/projects/dhcpcd/info/595883e2a431f65d8fabf33059aa4689cca17403

--- dhcp6.c.orig	Thu Jul  9 11:29:43 2015
+++ dhcp6.c	Fri Jan  8 13:52:03 2016
@@@@ -258,7 +258,7 @@@@ dhcp6_getoption(struct dhcpcd_ctx *ctx,
 		}
 		o = (const struct dhcp6_option *)od;
 		*len = ntohs(o->len);
-		if (*len > ol) {
+		if (*len > ol - *os) {
 			errno = EINVAL;
 			return NULL;
 		}
@@@@ -266,6 +266,7 @@@@ dhcp6_getoption(struct dhcpcd_ctx *ctx,
 	} else
 		o = NULL;
 
+	*oopt = NULL;
 	for (i = 0, opt = ctx->dhcp6_opts;
 	    i < ctx->dhcp6_opts_len; i++, opt++)
 	{
@

