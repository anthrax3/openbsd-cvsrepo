head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.14
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.08.30.22.42.04;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@fix for long long time_t (used to hold an uptime value); feedback from naddy@@
@
text
@$OpenBSD$

gloox's overloaded addAttribute() function doesn't have a variant to
handle long long. This value only holds the machine's uptime anyway so
int is sufficient.

--- src/statshandler.cpp.orig	Thu Aug 29 14:46:49 2013
+++ src/statshandler.cpp	Thu Aug 29 14:46:55 2013
@@@@ -172,7 +172,7 @@@@ Tag* GlooxStatsHandler::handleTag (Tag *stanzaTag){
 				t = new Tag("stat");
 				t->addAttribute("name","uptime");
 				t->addAttribute("units","seconds");
-				t->addAttribute("value",seconds - m_startTime);
+				t->addAttribute("value",(int)(seconds - m_startTime));
 				query->addChild(t);
 			} else if (name == "users/registered") {
 				t = new Tag("stat");
@
