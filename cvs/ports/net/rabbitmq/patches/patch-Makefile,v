head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.8
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.6
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.4
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.10
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.8
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.6
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.4
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	msf_20091112:1.1.1.1
	msf:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2015.11.05.10.49.03;	author jasper;	state Exp;
branches;
next	1.8;
commitid	av19uy3kiusu7oQR;

1.8
date	2014.12.29.09.28.22;	author jasper;	state Exp;
branches;
next	1.7;
commitid	zUi7VaiTOe5qi2IN;

1.7
date	2012.07.18.14.03.44;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2012.01.13.20.54.25;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2011.10.01.08.30.37;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2011.06.15.11.02.59;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2011.04.28.11.28.43;	author landry;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.16.09.11.07;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.12.13.10.33;	author msf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.11.12.13.10.33;	author msf;	state Exp;
branches;
next	;


desc
@@


1.9
log
@- update to rabbitmq-server-3.5.6
- sebastia@@ takes over maintainership

OK sebastia@@ and piotr sikori (previous MAINTAINER)
@
text
@$OpenBSD: patch-Makefile,v 1.8 2014/12/29 09:28:22 jasper Exp $
--- Makefile.orig	Wed Oct  7 14:45:15 2015
+++ Makefile	Wed Oct 28 19:23:44 2015
@@@@ -25,26 +25,11 @@@@ MANPAGES=$(patsubst %.xml, %.gz, $(wildcard $(DOCS_DIR
 WEB_MANPAGES=$(patsubst %.xml, %.man.xml, $(wildcard $(DOCS_DIR)/*.[0-9].xml) $(DOCS_DIR)/rabbitmq-service.xml $(DOCS_DIR)/rabbitmq-echopid.xml)
 USAGES_XML=$(DOCS_DIR)/rabbitmqctl.1.xml $(DOCS_DIR)/rabbitmq-plugins.1.xml
 USAGES_ERL=$(foreach XML, $(USAGES_XML), $(call usage_xml_to_erl, $(XML)))
+TARGET_DIR=$(PREFIX)/lib/rabbitmq
+SBIN_DIR=$(PREFIX)/sbin
+MAN_DIR=$(PREFIX)/man
+DOC_INSTALL_DIR=$(PREFIX)/share/doc/rabbitmq/
 
-ifeq ($(shell python -c 'import simplejson' 2>/dev/null && echo yes),yes)
-PYTHON=python
-else
-ifeq ($(shell python2.7 -c 'import json' 2>/dev/null && echo yes),yes)
-PYTHON=python2.7
-else
-ifeq ($(shell python2.6 -c 'import simplejson' 2>/dev/null && echo yes),yes)
-PYTHON=python2.6
-else
-ifeq ($(shell python2.5 -c 'import simplejson' 2>/dev/null && echo yes),yes)
-PYTHON=python2.5
-else
-# Hmm. Missing simplejson?
-PYTHON=python
-endif
-endif
-endif
-endif
-
 BASIC_PLT=basic.plt
 RABBIT_PLT=rabbit.plt
 
@@@@ -103,6 +88,10 @@@@ ERL_CALL=erl_call -sname $(RABBITMQ_NODENAME) -e
 
 ERL_EBIN=erl -noinput -pa $(EBIN_DIR)
 
+CHECK_NAME=rabbitmq-check
+CHECK_DIR=/tmp/$(CHECK_NAME)
+CHECK_CALL=HOME=$(CHECK_DIR) erl_call -sname $(CHECK_NAME) -e
+
 define usage_xml_to_erl
   $(subst __,_,$(patsubst $(DOCS_DIR)/rabbitmq%.1.xml, $(SOURCE_DIR)/rabbit_%_usage.erl, $(subst -,_,$(1))))
 endef
@@@@ -117,7 +106,7 @@@@ endef
 
 ifneq "$(SBIN_DIR)" ""
 ifneq "$(TARGET_DIR)" ""
-SCRIPTS_REL_PATH=$(shell ./calculate-relative $(TARGET_DIR)/sbin $(SBIN_DIR))
+SCRIPTS_REL_PATH="../lib/rabbitmq/sbin"
 endif
 endif
 
@@@@ -210,7 +199,7 @@@@ clean:
 	rm -f $(PLUGINS_DIR)/*.ez
 	[ -d "$(PLUGINS_SRC_DIR)" ] && PLUGINS_SRC_DIR="" PRESERVE_CLONE_DIR=1 make -C $(PLUGINS_SRC_DIR) clean || true
 	rm -f $(INCLUDE_DIR)/rabbit_framing.hrl $(SOURCE_DIR)/rabbit_framing_amqp_*.erl codegen.pyc
-	rm -f $(DOCS_DIR)/*.[0-9].gz $(DOCS_DIR)/*.man.xml $(DOCS_DIR)/*.erl $(USAGES_ERL)
+	rm -f $(DOCS_DIR)/*.[0-9] $(DOCS_DIR)/*.man.xml $(DOCS_DIR)/*.erl $(USAGES_ERL)
 	rm -f $(RABBIT_PLT)
 	rm -f $(DEPS_FILE)
 
@@@@ -261,6 +250,25 @@@@ run-qc: all
 	./quickcheck $(RABBITMQ_NODENAME) rabbit_backing_queue_qc 100 40
 	./quickcheck $(RABBITMQ_NODENAME) gm_qc 1000 200
 
+regress:
+	@@[ "`id -u`" != "0" ] || (echo "Don't run tests as a superuser." && false)
+	rm -rf $(CHECK_DIR)
+	mkdir -m 777 -p $(CHECK_DIR)
+	HOME=$(CHECK_DIR) \
+		RABBITMQ_NODENAME="$(CHECK_NAME)" \
+		RABBITMQ_NODE_PORT="45672" \
+		RABBITMQ_LOG_BASE="$(CHECK_DIR)/logs" \
+		RABBITMQ_MNESIA_BASE="$(CHECK_DIR)/mnesia" \
+		RABBITMQ_PLUGINS_EXPAND_DIR="$(CHECK_DIR)/plugins" \
+		RABBITMQ_ENABLED_PLUGINS_FILE="$(CHECK_DIR)/none" \
+		RABBITMQ_SERVER_START_ARGS="$(RABBITMQ_SERVER_START_ARGS) -detached" \
+		./scripts/rabbitmq-server
+	@@sleep 5
+	OUT=$$(echo "rabbit_tests:all_tests()." | $(CHECK_CALL)) ; \
+		echo $$OUT ; echo $$OUT | grep '^{ok, passed}$$' > /dev/null || \
+		($(CHECK_CALL) -q && rm -rf $(CHECK_DIR) && false)
+	$(CHECK_CALL) -q && rm -rf $(CHECK_DIR) && echo "Passed."
+
 start-background-node: all
 	-rm -f $(RABBITMQ_MNESIA_DIR).pid
 	mkdir -p $(RABBITMQ_MNESIA_DIR)
@@@@ -348,8 +356,7 @@@@ distclean: clean
 %.gz: %.xml $(DOCS_DIR)/examples-to-end.xsl
 	xmlto --version | grep -E '^xmlto version 0\.0\.([0-9]|1[1-8])$$' >/dev/null || opt='--stringparam man.indent.verbatims=0' ; \
 	    xsltproc --novalid $(DOCS_DIR)/examples-to-end.xsl $< > $<.tmp && \
-	    xmlto -o $(DOCS_DIR) $$opt man $<.tmp && \
-	    gzip -f $(DOCS_DIR)/`basename $< .xml`
+	    xmlto -o $(DOCS_DIR) $$opt man $<.tmp
 	rm -f $<.tmp
 
 # Use tmp files rather than a pipeline so that we get meaningful errors
@@@@ -393,7 +400,7 @@@@ install_bin: all install_dirs
 install_docs: docs_all install_dirs
 	for section in 1 5; do \
 		mkdir -p $(MAN_DIR)/man$$section; \
-		for manpage in $(DOCS_DIR)/*.$$section.gz; do \
+		for manpage in $(DOCS_DIR)/*.$$section; do \
 			cp $$manpage $(MAN_DIR)/man$$section; \
 		done; \
 	done
@


1.8
log
@- update to rabbitmq-3.4.2

ok MAINTAINER
@
text
@d1 4
a4 4
$OpenBSD: patch-Makefile,v 1.7 2012/07/18 14:03:44 jasper Exp $
--- Makefile.orig	Wed Nov 26 13:20:50 2014
+++ Makefile	Sun Dec 28 20:07:44 2014
@@@@ -25,22 +25,11 @@@@ MANPAGES=$(patsubst %.xml, %.gz, $(wildcard $(DOCS_DIR
d16 3
d30 1
d35 1
a35 1
@@@@ -81,6 +70,10 @@@@ ERL_CALL=erl_call -sname $(RABBITMQ_NODENAME) -e
d46 1
a46 1
@@@@ -95,7 +88,7 @@@@ endef
d55 1
a55 1
@@@@ -188,7 +181,7 @@@@ clean:
d64 1
a64 1
@@@@ -239,6 +232,25 @@@@ run-qc: all
d90 1
a90 1
@@@@ -317,8 +329,7 @@@@ distclean: clean
d100 1
a100 1
@@@@ -362,7 +373,7 @@@@ install_bin: all install_dirs
@


1.7
log
@- update to 2.8.4

from piotr sikora (MAINTAINER)
@
text
@d1 6
a6 4
$OpenBSD: patch-Makefile,v 1.6 2012/01/13 20:54:25 sthen Exp $
--- Makefile.orig	Fri Dec 16 12:24:15 2011
+++ Makefile	Tue Dec 20 18:50:37 2011
@@@@ -22,21 +22,10 @@@@ USAGES_XML=$(DOCS_DIR)/rabbitmqctl.1.xml $(DOCS_DIR)/r
a7 2
 QC_MODULES := rabbit_backing_queue_qc
 QC_TRIALS ?= 100
d11 1
d27 1
a27 1
 
d30 2
a31 1
@@@@ -71,6 +60,10 @@@@ ERL_CALL=erl_call -sname $(RABBITMQ_NODENAME) -e
d42 1
a42 1
@@@@ -85,7 +78,7 @@@@ endef
d51 1
a51 1
@@@@ -161,7 +154,7 @@@@ clean:
d60 3
a62 3
@@@@ -203,6 +196,25 @@@@ run-tests: all
 run-qc: all
 	$(foreach MOD,$(QC_MODULES),./quickcheck $(RABBITMQ_NODENAME) $(MOD) $(QC_TRIALS))
d86 1
a86 1
@@@@ -281,8 +293,7 @@@@ distclean: clean
d96 1
a96 1
@@@@ -326,7 +337,7 @@@@ install_bin: all install_dirs
@


1.6
log
@update RabbitMQ to 2.7.1

- disable unnecessary use of nmap/lsof
- from maintainer Piotr Sikora with small tweaks from me
@
text
@d1 1
a1 1
$OpenBSD$
a28 9
@@@@ -56,7 +45,7 @@@@ endif
 #other args: +native +"{hipe,[o3,verbose]}" -Ddebug=true +debug_info +no_strict_record_tests
 ERLC_OPTS=-I $(INCLUDE_DIR) -o $(EBIN_DIR) -Wall -v +debug_info $(call boolean_macro,$(USE_SPECS),use_specs) $(call boolean_macro,$(USE_PROPER_QC),use_proper_qc)
 
-VERSION=0.0.0
+VERSION?=0.0.0
 PLUGINS_SRC_DIR?=$(shell [ -d "plugins-src" ] && echo "plugins-src" || echo )
 PLUGINS_DIR=plugins
 TARBALL_NAME=rabbitmq-server-$(VERSION)
@


1.5
log
@- update to 2.6.1

from Piotr Sikora (MAINTAINER)
@
text
@d1 4
a4 3
--- Makefile.orig	Fri Sep  9 13:50:55 2011
+++ Makefile	Thu Sep 15 08:51:57 2011
@@@@ -22,21 +22,10 @@@@ USAGES_XML=$(DOCS_DIR)/rabbitmqctl.1.xml
d29 10
a38 1
@@@@ -69,6 +58,10 @@@@ ERL_CALL=erl_call -sname $(RABBITMQ_NODENAME) -e
d49 1
a49 1
@@@@ -83,7 +76,7 @@@@ endef
d58 3
a60 3
@@@@ -144,7 +137,7 @@@@ clean:
 	rm -f $(EBIN_DIR)/*.beam
 	rm -f $(EBIN_DIR)/rabbit.app $(EBIN_DIR)/rabbit.boot $(EBIN_DIR)/rabbit.script $(EBIN_DIR)/rabbit.rel
d67 1
a67 1
@@@@ -180,6 +173,23 @@@@ run-tests: all
d80 2
d90 4
a93 4
 start-background-node:
 	$(BASIC_SCRIPT_ENVIRONMENT_SETTINGS) \
 		RABBITMQ_NODE_ONLY=true \
@@@@ -250,8 +260,7 @@@@ distclean: clean
d103 1
a103 1
@@@@ -294,7 +303,7 @@@@ install_bin: all install_dirs
@


1.4
log
@Update to rabbitmq 2.5.0, from MAINTAINER Piotr Sikora.
Regress target still SIGBUSes on sparc64..
@
text
@d1 3
a3 5
--- Makefile.orig	Thu Jun  9 16:24:13 2011
+++ Makefile	Wed Jun 15 01:04:35 2011
@@@@ -20,21 +20,10 @@@@ MANPAGES=$(patsubst %.xml, %.gz, $(wildcard $(DOCS_DIR
 WEB_MANPAGES=$(patsubst %.xml, %.man.xml, $(wildcard $(DOCS_DIR)/*.[0-9].xml) $(DOCS_DIR)/rabbitmq-service.xml)
 USAGES_XML=$(DOCS_DIR)/rabbitmqctl.1.xml
d5 2
d28 1
a28 1
@@@@ -61,6 +50,10 @@@@ ERL_CALL=erl_call -sname $(RABBITMQ_NODENAME) -e
d39 1
a39 1
@@@@ -71,7 +64,7 @@@@ endef
d48 1
a48 1
@@@@ -132,7 +125,7 @@@@ clean:
d57 3
a59 3
@@@@ -165,6 +158,23 @@@@ run-tests: all
 	OUT=$$(echo "rabbit_tests:all_tests()." | $(ERL_CALL)) ; \
 	  echo $$OUT ; echo $$OUT | grep '^{ok, passed}$$' > /dev/null
d81 1
a81 1
@@@@ -235,8 +245,7 @@@@ distclean: clean
d91 1
a91 1
@@@@ -279,7 +288,7 @@@@ install_bin: all install_dirs
@


1.3
log
@Various fixes from Piotr Sikora (maintainer) :
- simplify rabbitmqctl diff, use su to make sure command is run as ${RABBITUSER}
- change _rabbitmq shell to /sbin/nologin,
- remove redundant setting of PYTHON,
- remove unnecessary SUBST_CMD calls,
- remove trailing space in MAKE_ENV.
discussed with maintainer and ajacoutot@@
@
text
@d1 2
a2 2
--- Makefile.orig	Thu Apr  7 15:55:08 2011
+++ Makefile	Thu Apr 21 03:20:20 2011
d28 1
a28 1
@@@@ -61,6 +50,9 @@@@ ERL_CALL=erl_call -sname $(RABBITMQ_NODENAME) -e
d32 3
a34 2
+REGRESS_DIR=/tmp/rabbitmq-regress
+REGRESS_EXEC=$(shell [ `id -u` = "0" ] && echo "HOME=$(REGRESS_DIR) su -m `id -u -n 1000` -c" || echo "HOME=$(REGRESS_DIR) sh -c")
d39 1
a39 1
@@@@ -71,7 +63,7 @@@@ endef
d48 1
a48 1
@@@@ -132,7 +124,7 @@@@ clean:
d57 3
a59 3
@@@@ -164,6 +156,21 @@@@ run-node: all
 run-tests: all
 	echo "rabbit_tests:all_tests()." | $(ERL_CALL)
d62 8
a69 6
+	rm -rf $(REGRESS_DIR)
+	mkdir -m 777 -p $(REGRESS_DIR)
+	RABBITMQ_NODENAME="rabbitmq-regress" \
+		RABBITMQ_NODE_PORT="55672" \
+		RABBITMQ_LOG_BASE="$(REGRESS_DIR)/logs" \
+		RABBITMQ_MNESIA_BASE="$(REGRESS_DIR)/mnesia" \
d71 1
a71 1
+		$(REGRESS_EXEC) ./scripts/rabbitmq-server
d73 4
a76 4
+	echo "rabbit_tests:all_tests()." | $(REGRESS_EXEC) "erl_call -sname rabbitmq-regress -e" | tee $(REGRESS_DIR)/result
+	[ "`cat $(REGRESS_DIR)/result | cut -b2-3`" = "ok" ] || \
+		($(REGRESS_EXEC) "erl_call -sname rabbitmq-regress -e -q" && rm -rf $(REGRESS_DIR) && false)
+	$(REGRESS_EXEC) "erl_call -sname rabbitmq-regress -e -q" && rm -rf $(REGRESS_DIR) && echo "Passed."
d81 1
a81 1
@@@@ -234,8 +241,7 @@@@ distclean: clean
d84 1
a84 1
 	    xsltproc $(DOCS_DIR)/examples-to-end.xsl $< > $<.tmp && \
d91 1
a91 1
@@@@ -278,7 +284,7 @@@@ install_bin: all install_dirs
@


1.2
log
@Update to rabbitMQ 2.4.1, joint work from viq & Piotr Sikora, with small
tweaks by me (don't silent SUBST_CMD, no need to cvs rm/add
files/rabbitmq.conf as it can be installed with the correct name)

- add rc script, remove pkg/MESSAGE
- fix rabbitmqctl args passing
- install config file as rabbitmq-env.conf

Needed by an upcoming erlang update..

Maintainer timeout, Piotr Sikora takes maintainership.
ok stuartslolbunny@@ (!?)
@
text
@d2 2
a3 2
+++ Makefile	Sun Apr 10 19:24:41 2011
@@@@ -20,21 +20,11 @@@@ MANPAGES=$(patsubst %.xml, %.gz, $(wildcard $(DOCS_DIR
a24 1
+PYTHON?=python${MODPY_VERSION}
d28 1
a28 1
@@@@ -61,6 +51,9 @@@@ ERL_CALL=erl_call -sname $(RABBITMQ_NODENAME) -e
d38 1
a38 1
@@@@ -71,7 +64,7 @@@@ endef
d47 1
a47 1
@@@@ -132,7 +125,7 @@@@ clean:
d56 1
a56 1
@@@@ -164,6 +157,21 @@@@ run-node: all
d78 1
a78 1
@@@@ -234,8 +242,7 @@@@ distclean: clean
d88 1
a88 1
@@@@ -278,7 +285,7 @@@@ install_bin: all install_dirs
@


1.1
log
@Initial revision
@
text
@d1 6
a6 13
$OpenBSD$

- OpenBSD has Erlang > R12B-3. So we can just set USE_SPECS=true instead
  of dealing with this shell stuff which is causing problems.

- Don't install .gz manpages.

--- Makefile.orig	Wed Jun 17 02:09:00 2009
+++ Makefile	Mon Sep 21 22:33:36 2009
@@@@ -11,15 +11,18 @@@@ BEAM_TARGETS=$(EBIN_DIR)/rabbit_framing.beam $(patsubs
 TARGETS=$(EBIN_DIR)/rabbit.app $(BEAM_TARGETS)
 WEB_URL=http://stage.rabbitmq.com/
 MANPAGES=$(patsubst %.pod, %.gz, $(wildcard docs/*.[0-9].pod))
d11 1
d13 19
a31 1
+PYTHON?=python
d33 13
a45 7
 ifndef USE_SPECS
 # our type specs rely on features / bug fixes in dialyzer that are
 # only available in R12B-3 upwards
 #
 # NB: the test assumes that version number will only contain single digits
-USE_SPECS=$(shell if [ $$(erl -noshell -eval 'io:format(erlang:system_info(version)), halt().') \> "5.6.2" ]; then echo "true"; else echo "false"; fi)
+USE_SPECS=true
d48 12
a59 7
 #other args: +native +"{hipe,[o3,verbose]}" -Ddebug=true +debug_info +no_strict_record_tests
@@@@ -154,7 +157,7 @@@@ distclean: clean
 		-c "RabbitMQ AMQP Server" \
 		-d "" \
 		-r "" \
-		$< | gzip --best > $@@
+		$< > `dirname $@@`/`basename $@@ .gz`
d61 26
a86 1
 docs_all: $(MANPAGES)
d88 3
a90 1
@@@@ -174,6 +177,6 @@@@ install: all docs_all
d93 3
a95 3
 		for manpage in docs/*.$$section.pod; do \
-			cp docs/`basename $$manpage .pod`.gz $(MAN_DIR)/man$$section; \
+			cp docs/`basename $$manpage .pod` $(MAN_DIR)/man$$section; \
@


1.1.1.1
log
@initial import of rabbitmq-1.6.0

RabbitMQ is a complete and highly reliable Enterprise Messaging 
System. The RabbitMQ client libraries and broker daemon can be used 
together to create an AMQP network, or used individually to bring 
the benefits of RabbitMQ to established networks. 

ok bernd@@
@
text
@@
