head	1.4;
access;
symbols
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_7:1.2.0.2;
locks; strict;
comment	@# @;


1.4
date	2011.04.25.10.02.43;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2011.03.03.10.18.53;	author jasper;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2010.07.17.14.12.38;	author ajacoutot;	state dead;
branches
	1.2.2.1;
next	1.1;

1.1
date	2010.07.07.18.57.38;	author ajacoutot;	state Exp;
branches;
next	;

1.2.2.1
date	2010.07.27.02.48.43;	author william;	state Exp;
branches;
next	;

1.3.2.1
date	2011.03.09.09.20.52;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to avahi-0.6.30.
@
text
@$OpenBSD: patch-avahi-core_socket_c,v 1.3 2011/03/03 10:18:53 jasper Exp $

Security fix for CVE-2011-0634, CVE-2011-1002.
Avahi Empty UDP Packet Denial of Service Vulnerability.

Fix from upstream git:
46109dfec75534fe270c0ab902576f685d5ab3a6#patch1

--- avahi-core/socket.c.orig	Thu Aug 26 02:51:38 2010
+++ avahi-core/socket.c	Thu Mar  3 10:58:55 2011
@@@@ -653,10 +653,6 @@@@ AvahiDnsPacket *avahi_recv_dns_packet_ipv4(
         goto fail;
     }
 
-    /* For corrupt packets FIONREAD returns zero size (See rhbz #607297) */
-    if (!ms)
-        goto fail;
-
     p = avahi_dns_packet_new(ms + AVAHI_DNS_PACKET_EXTRA_SIZE);
 
     io.iov_base = AVAHI_DNS_PACKET_DATA(p);
@@@@ -683,10 +679,14 @@@@ AvahiDnsPacket *avahi_recv_dns_packet_ipv4(
         goto fail;
     }
 
-    if (sa.sin_addr.s_addr == INADDR_ANY) {
+    /* For corrupt packets FIONREAD returns zero size (See rhbz #607297). So
+     * fail after having read them. */
+    if (!ms)
+        goto fail;
+
+    if (sa.sin_addr.s_addr == INADDR_ANY)
         /* Linux 2.4 behaves very strangely sometimes! */
         goto fail;
-    }
 
     assert(!(msg.msg_flags & MSG_CTRUNC));
     assert(!(msg.msg_flags & MSG_TRUNC));
@@@@ -810,10 +810,6 @@@@ AvahiDnsPacket *avahi_recv_dns_packet_ipv6(
         goto fail;
     }
 
-    /* For corrupt packets FIONREAD returns zero size (See rhbz #607297) */
-    if (!ms)
-        goto fail;
-
     p = avahi_dns_packet_new(ms + AVAHI_DNS_PACKET_EXTRA_SIZE);
 
     io.iov_base = AVAHI_DNS_PACKET_DATA(p);
@@@@ -840,6 +836,11 @@@@ AvahiDnsPacket *avahi_recv_dns_packet_ipv6(
 
         goto fail;
     }
+
+    /* For corrupt packets FIONREAD returns zero size (See rhbz #607297). So
+     * fail after having read them. */
+    if (!ms)
+        goto fail;
 
     assert(!(msg.msg_flags & MSG_CTRUNC));
     assert(!(msg.msg_flags & MSG_TRUNC));
@


1.3
log
@Security fix for CVE-2011-0634, CVE-2011-1002.
Avahi Empty UDP Packet Denial of Service Vulnerability.

From upstream git.

ok aja@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3.2.1
log
@Security fix for CVE-2011-0634, CVE-2011-1002.
Avahi Empty UDP Packet Denial of Service Vulnerability.

From upstream git.

ok aja@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-avahi-core_socket_c,v 1.3 2011/03/03 10:18:53 jasper Exp $
@


1.2
log
@Update to avahi-0.6.26.
Lots of bugfixes. Refer to HOMEPAGE for detail information.
@
text
@d1 1
a1 1
$OpenBSD: patch-avahi-core_socket_c,v 1.1 2010/07/07 18:57:38 ajacoutot Exp $
d3 2
a4 4
Fix for CVE-2010-2244: 2b2844b10d7b7e5c97f9c667d664d9418bb7769a
    zero size is reported for corrupt packets. recvmsg() later could
    nevertheless get data from a good packet that followed the bad one.
    So get out early to avoid hitting an assertion.
d6 17
a22 3
--- avahi-core/socket.c.orig	Wed Jun 18 01:13:44 2008
+++ avahi-core/socket.c	Wed Jul  7 20:53:39 2010
@@@@ -652,6 +652,10 @@@@ AvahiDnsPacket *avahi_recv_dns_packet_ipv4(
d26 3
a28 1
+    /* For corrupt packets FIONREAD returns zero size (See rhbz #607297) */
d32 15
d50 2
a51 2
@@@@ -804,6 +808,10 @@@@ AvahiDnsPacket *avahi_recv_dns_packet_ipv6(
         avahi_log_warn("FIONREAD returned negative value.");
d55 2
a56 1
+    /* For corrupt packets FIONREAD returns zero size (See rhbz #607297) */
d60 2
a61 2
     p = avahi_dns_packet_new(ms + AVAHI_DNS_PACKET_EXTRA_SIZE);
 
@


1.2.2.1
log
@MFC:

SECURITY FIX only

Resolves CVE-2010-2244

ok ajacoutot
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@SECURITY.
Fix for CVE-2010-2244:
    zero size is reported for corrupt packets. recvmsg() later could
    nevertheless get data from a good packet that followed the bad one.
    So get out early to avoid hitting an assertion.

Thanks to pea@@ for the heads up.
@
text
@d1 1
a1 1
$OpenBSD$
@

