head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_3_8:1.1.1.1.0.2
	OPENBSD_3_8_BASE:1.1.1.1
	fgsch_2005-06-07:1.1.1.1
	fgsch:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.01.29.14.46.28;	author dcoppa;	state Exp;
branches;
next	1.3;
commitid	eevPgJbZNUTfW3at;

1.3
date	2014.01.13.15.01.22;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.19.21.26.53;	author fgsch;	state dead;
branches;
next	1.1;

1.1
date	2005.06.07.17.24.49;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.06.07.17.24.49;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
Merge some fixes from upstream repo:

Fix always-true conditional

Remove unneeded conversion from CMD4Hash

Fix a shadow warning
@
text
@$OpenBSD: patch-src_amuleDlg_cpp,v 1.3 2014/01/13 15:01:22 dcoppa Exp $

commit eadb1a0fc4597d919aca00c7b32d8dc6f63a4ae2
Author: upstream svn <svn@@amule.org>
Date:   Sun Jan 18 09:44:36 2015 +0000

Fix a shadow warning

No need to declare variables that are only used once in a single function
as class member variables.


Fix the blasted DoNetworkRearrange()
upstream git commits:
 http://repo.or.cz/w/amule.git/commit/f2307fa12fb18688131962d11623ec776697b15f
 http://repo.or.cz/w/amule.git/commit/af9cec62ba0bf02e31ae316749234cbd31792db7
 http://repo.or.cz/w/amule.git/commit/85ea02a3abc784f415adadfb384c654057e13c01
 http://repo.or.cz/w/amule.git/commit/d41b28c86b2f07439928720971896dde1ae89bb1

--- src/amuleDlg.cpp.orig	Sat Oct  8 19:19:08 2011
+++ src/amuleDlg.cpp	Thu Jan 29 05:25:28 2015
@@@@ -1241,6 +1241,7 @@@@ bool CamuleDlg::Check_and_Init_Skin()
 
 	wxFFileInputStream in(m_skinFileName.GetFullPath());
 	wxZipInputStream zip(in);
+	wxZipEntry *entry;
 
 	while ((entry = zip.GetNextEntry()) != NULL) {
 		wxZipEntry*& current = cat[entry->GetInternalName()];
@@@@ -1262,7 +1263,7 @@@@ void CamuleDlg::Add_Skin_Icon(
 		wxFFileInputStream in(m_skinFileName.GetFullPath());
 		wxZipInputStream zip(in);
 
-		it = cat.find(wxZipEntry::GetInternalName(iconName + wxT(".png")));
+		ZipCatalog::iterator it = cat.find(wxZipEntry::GetInternalName(iconName + wxT(".png")));
 		if ( it != cat.end() ) {
 			zip.OpenEntry(*it->second);
 			if ( !new_image.LoadFile(zip,wxBITMAP_TYPE_PNG) ) {
@@@@ -1433,17 +1434,13 @@@@ void CamuleDlg::DoNetworkRearrange()
 
 	wxToolBarToolBase* toolbarTool = m_wndToolbar->RemoveTool(ID_BUTTONNETWORKS);
 
+	// set the log windows
 	wxNotebook* logs_notebook = CastChild( ID_SRVLOG_NOTEBOOK, wxNotebook);
-	wxNotebook* networks_notebook = CastChild( ID_NETNOTEBOOK, wxNotebook);
 
 	while (logs_notebook->GetPageCount() > 1) {
 		logs_notebook->RemovePage(logs_notebook->GetPageCount() - 1);
 	}
 
-	while (networks_notebook->GetPageCount() > 0) {
-		networks_notebook->RemovePage(networks_notebook->GetPageCount() - 1);
-	}
-
 	if (thePrefs::GetNetworkED2K()) {
 #ifndef CLIENT_GUI
 		logs_notebook->AddPage(m_logpages[1].page, m_logpages[1].name);
@@@@ -1451,57 +1448,88 @@@@ void CamuleDlg::DoNetworkRearrange()
 		logs_notebook->AddPage(m_logpages[2].page, m_logpages[2].name);
 	}
 
-	m_networkpages[0].page->Show(thePrefs::GetNetworkED2K());
-
 	if (thePrefs::GetNetworkKademlia()) {
 		logs_notebook->AddPage(m_logpages[3].page, m_logpages[3].name);
 	}
 
-	m_networkpages[1].page->Show(thePrefs::GetNetworkKademlia());
+	// Set the main window.
+	// If we have both networks active, activate a notebook to select between them.
+	// If only one is active, show the window directly without a surrounding one tab notebook.
 
-	networks_notebook->Show(thePrefs::GetNetworkED2K() && thePrefs::GetNetworkKademlia());
+	// States:
+	// 1: ED2K only
+	// 2: Kad only
+	// 3: both (in Notebook)
 
-	wxWindow* replacement = NULL;
-
-	m_networknotebooksizer->Clear();
-
+	static uint8 currentState = 3;		// on startup we have both enabled
+	uint8 newState;
 	if (thePrefs::GetNetworkED2K() && thePrefs::GetNetworkKademlia()) {
+		newState = 3;
 		toolbarTool->SetLabel(_("Networks"));
+	}
+	else if (thePrefs::GetNetworkED2K()) {
+		newState = 1;
+		toolbarTool->SetLabel(_("eD2k network"));
+	}
+	else {			// Kad only or no network
+		newState = 2;	// no network makes no sense anyway, so just show Kad there
+		toolbarTool->SetLabel(thePrefs::GetNetworkKademlia() ? _("Kad network") : _("No network"));
+	}
 
-		m_networkpages[0].page->Reparent(networks_notebook);
-		m_networkpages[1].page->Reparent(networks_notebook);
+	if (newState != currentState) {
+		wxNotebook* networks_notebook = CastChild(ID_NETNOTEBOOK, wxNotebook);
+		// First hide all windows
+		networks_notebook->Show(false);
+		m_networkpages[0].page->Show(false);
+		m_networkpages[1].page->Show(false);
+		m_networknotebooksizer->Clear();
 
-		networks_notebook->AddPage(m_networkpages[0].page, m_networkpages[0].name);
-		networks_notebook->AddPage(m_networkpages[1].page, m_networkpages[1].name);
+		wxWindow* replacement = NULL;
 
-		replacement = networks_notebook;
+		// Move both pages into the notebook if they aren't already there.
+		if (currentState == 1) {	// ED2K
+			m_networkpages[0].page->Reparent(networks_notebook);
+			networks_notebook->InsertPage(0, m_networkpages[0].page, m_networkpages[0].name);
+		} else if (currentState == 2) {	// Kad
+			m_networkpages[1].page->Reparent(networks_notebook);
+			networks_notebook->AddPage(m_networkpages[1].page, m_networkpages[1].name);
+		}
 
-	} else if (thePrefs::GetNetworkED2K()) {
-		toolbarTool->SetLabel(_("eD2k network"));
-		replacement = m_networkpages[0].page;
-		m_networkpages[1].page->Reparent(m_networknotebooksizer->GetContainingWindow());
-	} else if (thePrefs::GetNetworkKademlia()) {
-		toolbarTool->SetLabel(_("Kad network"));
-		m_networkpages[0].page->Reparent(m_networknotebooksizer->GetContainingWindow());
-		replacement = m_networkpages[1].page;
-	} else {
-		// No networks.
-		toolbarTool->SetLabel(_("No network"));
-	}
+		// Now both pages are in the notebook. If we want to show one of them outside, move it back out again.
+		// Windows that are part of a notebook can't be reparented.
+		if (newState == 3) {
+			// Since we messed with the notebook, we now have to show both pages, one after the other.
+			// Otherwise GTK gets confused and shows the first tab only.
+			// (So much for "platform independent".)
+			networks_notebook->SetSelection(1);
+			m_networkpages[1].page->Show();
+			networks_notebook->SetSelection(0);
+			m_networkpages[0].page->Show();
+			replacement = networks_notebook;
+		} else if (newState == 1) {
+			replacement = m_networkpages[0].page;
+			networks_notebook->RemovePage(0);
+		} else {
+			replacement = m_networkpages[1].page;
+			networks_notebook->RemovePage(1);
+		}
 
-	if (replacement) {
 		replacement->Reparent(m_networknotebooksizer->GetContainingWindow());
-		m_networknotebooksizer->Add( replacement, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxTOP, 5 );
+		replacement->Show();
+		m_networknotebooksizer->Add(replacement, 1, wxGROW | wxALIGN_CENTER_VERTICAL | wxTOP, 5);
 		m_networknotebooksizer->Layout();
+		currentState = newState;
 	}
 
-	m_wndToolbar->InsertTool(2, toolbarTool);
+	// Tool bar
 
+	m_wndToolbar->InsertTool(2, toolbarTool);
 	m_wndToolbar->EnableTool(ID_BUTTONNETWORKS, (thePrefs::GetNetworkED2K() || thePrefs::GetNetworkKademlia()));
 	m_wndToolbar->EnableTool(ID_BUTTONCONNECT, (thePrefs::GetNetworkED2K() || thePrefs::GetNetworkKademlia()) && theApp->ipfilter->IsReady());
 
 	m_wndToolbar->Realize();
 
+	ShowConnectionState();	// status in the bottom right
 	m_searchwnd->FixSearchTypes();
 }
 
@


1.3
log
@New round of fixes from upstream:

New download link for server list
(upstream git commit 458e2c2f0d245eca88e9fea48e66bd40036162f4)

If successfully downloaded a server list, and are not connected at
the moment, try to connect.
This happens when no server met is available on startup.
(upstream git commit 41e0edaed86c9be58ae372e419e2cc02cebfa243)

Fix the blasted DoNetworkRearrange()
upstream git commits:
 http://repo.or.cz/w/amule.git/commit/f2307fa12fb18688131962d11623ec776697b15f
 http://repo.or.cz/w/amule.git/commit/af9cec62ba0bf02e31ae316749234cbd31792db7
 http://repo.or.cz/w/amule.git/commit/85ea02a3abc784f415adadfb384c654057e13c01
 http://repo.or.cz/w/amule.git/commit/d41b28c86b2f07439928720971896dde1ae89bb1

mldonkey_importer.pl can import an unlimited number of files
(upstream git commit c7667a3e341c2499b0c9a7299f5b05096247556d)
@
text
@d1 11
a11 1
$OpenBSD$
d20 20
a39 3
--- src/amuleDlg.cpp.orig	Sun Oct  9 02:19:08 2011
+++ src/amuleDlg.cpp	Mon Jan 13 14:07:43 2014
@@@@ -1433,17 +1433,13 @@@@ void CamuleDlg::DoNetworkRearrange()
d58 1
a58 1
@@@@ -1451,57 +1447,88 @@@@ void CamuleDlg::DoNetworkRearrange()
@


1.2
log
@remove unneeded diff now that wxwidgets was fixed. tested by jolan@@.
@
text
@d1 132
a132 5
$OpenBSD: patch-src_amuleDlg_cpp,v 1.1 2005/06/07 17:24:49 fgsch Exp $
--- src/amuleDlg.cpp.orig	Sun Jun  5 15:53:03 2005
+++ src/amuleDlg.cpp	Sun Jun  5 15:55:58 2005
@@@@ -169,7 +169,10 @@@@ CamuleDlg::CamuleDlg(wxWindow* pParent, 
 		return;
d135 8
a142 4
+#ifndef __amd64__
+	/* This makes the app coredump later in amd64.. wxWidgets? */
 	SetIcon(wxICON(aMule));
+#endif
d144 3
a146 1
 	srand(time(NULL));
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@aMule is a peer to peer file sharing client, based on the well known eMule.

feedback and ok from jolan@@ and pedro@@; testing in sparc* and ppc would
be nice.
@
text
@@
