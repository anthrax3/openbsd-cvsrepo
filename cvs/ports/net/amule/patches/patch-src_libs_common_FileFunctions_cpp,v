head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.20
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.16
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.18
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.14
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.12
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2012.01.12.11.30.45;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Bugfix: CServerList::LoadStaticServers() failed on empty lines
(upstream git commit e298b38e9ce22e2861d34c5d7f6e7b2e009476b1)

Fix loading of zipped IP filter files
(upstream git commit ab24e8375c23c586de837a9cb7a405ca0499ffde)
@
text
@$OpenBSD$

Fix loading of zipped IP filter files
(upstream git commit ab24e8375c23c586de837a9cb7a405ca0499ffde)

--- src/libs/common/FileFunctions.cpp.orig	Mon Jun 13 10:50:25 2011
+++ src/libs/common/FileFunctions.cpp	Wed Jan 11 18:05:43 2012
@@@@ -133,39 +133,32 @@@@ EFileType GuessFiletype(const wxString& file)
  */
 bool UnpackZipFile(const wxString& file, const wxChar* files[])
 {
-	wxZipFSHandler archive; 
-	wxString filename = archive.FindFirst(
-		wxT("file:") + file + wxT("#zip:/*"), wxFILE);
-	
 	wxTempFile target(file);
-
-	while (!filename.IsEmpty() && !target.Length()) {
-		// Extract the filename part of the URI
-		filename = filename.AfterLast(wxT(':')).Lower();
-	
+	std::auto_ptr<wxZipEntry> entry;
+	wxFFileInputStream fileInputStream(file);
+	wxZipInputStream zip(fileInputStream);
+	bool run = true;
+	while (run) {
+		entry.reset(zip.GetNextEntry());
+		if (entry.get() == NULL) {
+			break;
+		}
+		// access meta-data
+		wxString name = entry->GetName();
 		// We only care about the files specified in the array
-		for (size_t i = 0; files[i] && !target.Length(); ++i) {
-			if (files[i] == filename) {
-				std::auto_ptr<wxZipEntry> entry;
-				wxFFileInputStream fileInputStream(file);
-				wxZipInputStream zip(fileInputStream);
-				while (entry.reset(zip.GetNextEntry()), entry.get() != NULL) {
-					// access meta-data
-					wxString name = entry->GetName();
-					// read 'zip' to access the entry's data
-					if (name == filename) {
-						char buffer[10240];
-						while (!zip.Eof()) {
-							zip.Read(buffer, sizeof(buffer));
-							target.Write(buffer, zip.LastRead());
-						}						
-						break;
-					}
+		// probably needed to weed out included nfos
+		for (int i = 0; run && files[i]; i++) {
+			if (name.CmpNoCase(files[i]) == 0) {
+				// we found the entry we want
+				// read 'zip' to access the entry's data
+				char buffer[10240];
+				while (!zip.Eof()) {
+					zip.Read(buffer, sizeof(buffer));
+					target.Write(buffer, zip.LastRead());
 				}
+				run = false;
 			}
 		}
-
-		filename = archive.FindNext();
 	}
 	
 	if (target.Length()) {
@
