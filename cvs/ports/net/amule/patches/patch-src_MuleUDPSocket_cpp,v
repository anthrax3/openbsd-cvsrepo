head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.20
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.16
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.18
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.14
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.12
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2011.12.11.18.31.13;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Apply some bugfixing patches from upstream:

Fix: first check our bool variable, then make some calculations if
it's false. Not the other way around
(upstream git commit 41090dfe3756396a8b4496f732ab8493aa51fe6c)

Fix: disabling protocol obfuscation broke Kad and triggered assertions
(upstream git commit ec2e66216738f92724a37fa030a79734e0e8b1ba)

Fix: disable the partfile importer's 'Add' button on the remote gui
unless using a localhost connection
(upstream git commit 004f3929d91e4b81f47235060d86686fff13e2d3)

Fix: "Prompt on exit" preference
(upstream git commit aea8d002b6446dcaf38db4d4ab222fcebce60948)

Fix: require restart when protocol obfuscation setting gets changed
(upstream git commit ec2e66216738f92724a37fa030a79734e0e8b1ba)

And fix libX11 '-lX11' linkage.
@
text
@$OpenBSD$

Fix: disabling protocol obfuscation broke Kad and triggered assertions
(upstream git commit ec2e66216738f92724a37fa030a79734e0e8b1ba)

--- src/MuleUDPSocket.cpp.orig	Fri Dec  9 15:08:25 2011
+++ src/MuleUDPSocket.cpp	Fri Dec  9 15:11:15 2011
@@@@ -40,6 +40,7 @@@@
 #include "OtherFunctions.h"
 #include "kademlia/kademlia/Prefs.h"
 #include "ClientList.h"
+#include "Preferences.h"
 
 
 CMuleUDPSocket::CMuleUDPSocket(const wxString& name, int id, const amuleIPV4Address& address, const CProxyData* ProxyData)
@@@@ -232,7 +233,8 @@@@ void CMuleUDPSocket::SendPacket(CPacket* packet, uint3
 	newpending.port = port;
 	newpending.packet = packet;
 	newpending.time = GetTickCount();
- 	newpending.bEncrypt = bEncrypt && (pachTargetClientHashORKadID != NULL || (bKad && nReceiverVerifyKey != 0));
+ 	newpending.bEncrypt = bEncrypt && (pachTargetClientHashORKadID != NULL || (bKad && nReceiverVerifyKey != 0))
+							&& thePrefs::IsClientCryptLayerSupported();
 	newpending.bKad = bKad;
 	newpending.nReceiverVerifyKey = nReceiverVerifyKey;   
 	if (newpending.bEncrypt && pachTargetClientHashORKadID != NULL) {
@
