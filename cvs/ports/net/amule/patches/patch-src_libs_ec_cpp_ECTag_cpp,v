head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.18
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.14
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.12
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2012.06.05.08.42.32;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2012.02.29.11.43.19;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Better fix for the endianness bug in EC
(upstream git commit ec79c81d6825b55ed826b6519287112056859735)
@
text
@$OpenBSD: patch-src_libs_ec_cpp_ECTag_cpp,v 1.1 2012/02/29 11:43:19 dcoppa Exp $

Fix endianness bug in EC
(upstream git commit ec79c81d6825b55ed826b6519287112056859735)

--- src/libs/ec/cpp/ECTag.cpp.orig	Mon Jun 13 10:50:25 2011
+++ src/libs/ec/cpp/ECTag.cpp	Tue Jun  5 09:16:23 2012
@@@@ -227,13 +227,13 @@@@ void CECTag::InitInt(uint64 data)
 			PokeUInt8( m_tagData, (uint8) data );
 			break;
 		case EC_TAGTYPE_UINT16:
-			PokeUInt16( m_tagData, wxUINT16_SWAP_ALWAYS((uint16) data ));
+			RawPokeUInt16( m_tagData, ENDIAN_HTONS((uint16) data ));
 			break;
 		case EC_TAGTYPE_UINT32:
-			PokeUInt32( m_tagData, wxUINT32_SWAP_ALWAYS((uint32) data ));
+			RawPokeUInt32( m_tagData, ENDIAN_HTONL((uint32) data ));
 			break;
 		case EC_TAGTYPE_UINT64:
-			PokeUInt64( m_tagData, wxUINT64_SWAP_ALWAYS(data) );
+			RawPokeUInt64( m_tagData, ENDIAN_HTONLL(data) );
 			break;
 	}
 }
@


1.1
log
@Fix endianness bug in EC.
Until now, a little-endian sender worked, regardless of the endianness
of the receiver, but a big-endian sender sent all integer data reversed.
(upstream git commit 07a5a373ff356166207438b5dffdf4eee30825d1)
@
text
@d1 1
a1 1
$OpenBSD$
d4 1
a4 1
(upstream git commit 07a5a373ff356166207438b5dffdf4eee30825d1)
d7 1
a7 1
+++ src/libs/ec/cpp/ECTag.cpp	Wed Feb 29 09:38:40 2012
d13 1
a13 1
+			PokeUInt16( m_tagData, ENDIAN_HTONS((uint16) data ));
d17 1
a17 1
+			PokeUInt32( m_tagData, ENDIAN_HTONL((uint32) data ));
d21 1
a21 1
+			PokeUInt64( m_tagData, ENDIAN_HTONLL(data) );
@

