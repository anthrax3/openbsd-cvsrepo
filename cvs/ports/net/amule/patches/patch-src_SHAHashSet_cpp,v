head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.16
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.12
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.14
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.10.25.07.59.45;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.1
log
@A couple of fixes from upstream:

Fix memory leak when AICH hashing already known files
(upstream git commit 9e62350fae9f24de64987a0cb002fdc15b5fa9af)

Like FAT, NTFS doesn't like special characters either
(upstream git commit 41113ecf15019301afea6cb35d9c35a7b8a0bdd1)
@
text
@$OpenBSD$

Fix memory leak when AICH hashing already known files
(upstream git commit 9e62350fae9f24de64987a0cb002fdc15b5fa9af)

--- src/SHAHashSet.cpp.orig	Thu Oct 25 11:20:28 2012
+++ src/SHAHashSet.cpp	Thu Oct 25 11:21:07 2012
@@@@ -622,7 +622,6 @@@@ bool CAICHHashSet::ReadRecoveryData(uint64 nPartStartP
 }
 
 // this function is only allowed to be called right after successfully calculating the hashset (!)
-// will delete the hashset, after saving to free the memory
 bool CAICHHashSet::SaveHashSet()
 {
 	if (m_eStatus != AICH_HASHSETCOMPLETE) {
@@@@ -702,7 +701,6 @@@@ bool CAICHHashSet::SaveHashSet()
 		return false;
 	}
 			
-	FreeHashSet();
 	return true;
 }
 
@
