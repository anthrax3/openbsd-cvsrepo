head	1.3;
access;
symbols
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.1.1.0.2
	OPENBSD_3_8_BASE:1.1.1.1
	fgsch_2005-06-07:1.1.1.1
	fgsch:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2007.07.08.18.09.58;	author espie;	state dead;
branches;
next	1.2;

1.2
date	2005.12.13.15.35.34;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.07.17.24.49;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.06.07.17.24.49;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.3
log
@take over amule as MAINTAINER, replaces mldonkey nicely for me
Activate a lot of useful stuff, like the amule daemon and the amulecmd
line tool, which makes it possible to run amule mostly unattended.
(you might need to run it with the gui to configure it at first).

Even the experimental amulegui appears to be mostly functional.
the webgui is included for reference, it works on i386, something fishy
on sparc64...

todo: figure out cross-platform issues. The people who write amule never
thought that the client and the server could run on distinct architectures,
and so they transfer binary data without even putting it in network format,
leading to interesting transfer times and sizes...
@
text
@aMule is a peer to peer file sharing client, based on the well known
eMule.

If you get `Bad file descriptor' errors, be sure to raise the file
descriptor limits.
@


1.2
log
@talk about `Bad file descriptor' errors; prompted by Zoran Ivanic.
@
text
@@


1.1
log
@Initial revision
@
text
@d3 3
@


1.1.1.1
log
@aMule is a peer to peer file sharing client, based on the well known eMule.

feedback and ok from jolan@@ and pedro@@; testing in sparc* and ppc would
be nice.
@
text
@@
