head	1.5;
access;
symbols
	OPENBSD_2_8:1.4.0.8
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.6
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	dhcp:1.1.1.1
	wide-dhcp:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2001.01.09.20.49.35;	author avsm;	state dead;
branches;
next	1.4;

1.4
date	98.12.22.03.24.20;	author form;	state Exp;
branches;
next	1.3;

1.3
date	98.08.17.11.43.31;	author form;	state Exp;
branches;
next	1.2;

1.2
date	98.07.17.12.23.17;	author form;	state Exp;
branches;
next	1.1;

1.1
date	98.05.03.00.49.49;	author angelos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.05.03.00.49.49;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.5
log
@commit this three-month old patch that was posted to ports@@ with no
response.  Does anyone out there use this port at all?  It was broken,
this unbreaks it by FAKEing it, but there's noone using it to test
it out....
@
text
@--- server/database.c.orig	Fri Feb 20 20:48:53 1998
+++ server/database.c	Tue Dec 22 09:16:55 1998
@@@@ -55,7 +55,6 @@@@
 #include "hash.h"
 #include "database.h"
 
-
 void
 dump_bind_db()
 {
@@@@ -122,8 +121,27 @@@@
 void
 dump_addrpool_db()
 {
+  int dump_fd;
+  char *dump_tmp = ADDRPOOL_DUMP ".XXXXXXXX";
   struct hash_member *resptr = NULL;
 
+#ifdef __OpenBSD__
+  if ((dump_fd = mkstemp(dump_tmp)) < 0) {
+    syslog(LOG_ERR, "Cannot open temporary resource dump file");
+    return;
+  }
+  unlink(ADDRPOOL_DUMP);
+  if (link(dump_tmp, ADDRPOOL_DUMP) < 0) {
+    syslog(LOG_ERR, "Cannot link \"%s\" to \"%s\"", dump_tmp, ADDRPOOL_DUMP);
+    close(dump_fd);
+    unlink(dump_tmp);
+    return;
+  }
+  close(dump_fd);
+  unlink(dump_tmp);
+#else
+  unlink(ADDRPOOL_DUMP);
+#endif
   if ((dump_fp = freopen(ADDRPOOL_DUMP, "w+", dump_fp)) == NULL) {
     syslog(LOG_WARNING,
 	   "Cannot reopen the address pool dump file \"%s\"", ADDRPOOL_DUMP);
@@@@ -250,7 +268,7 @@@@
   if (isset(rp->valid, S_SUBNET_MASK)) print_ip("snmk", rp->subnet_mask);
   if (isset(rp->active, S_TIME_OFFSET)) fprintf(dump_fp, "!");
   if (isset(rp->valid, S_TIME_OFFSET))
-      fprintf(dump_fp, "tmof=%ld:", ntohl(rp->time_offset));
+      fprintf(dump_fp, "tmof=%ld:", (long)ntohl(rp->time_offset));
   if (isset(rp->active, S_ROUTER)) fprintf(dump_fp, "!");
   if (isset(rp->valid, S_ROUTER)) print_ips("rout", rp->router);
   if (isset(rp->active, S_TIME_SERVER)) fprintf(dump_fp, "!");
@@@@ -299,7 +317,7 @@@@
       fprintf(dump_fp, "ditl=%u:", rp->default_ip_ttl);
   if (isset(rp->active, S_MTU_AGING_TIMEOUT)) fprintf(dump_fp, "!");
   if (isset(rp->valid, S_MTU_AGING_TIMEOUT))
-      fprintf(dump_fp, "mtat=%lu:", ntohl(rp->mtu_aging_timeout));
+      fprintf(dump_fp, "mtat=%lu:", (unsigned long)ntohl(rp->mtu_aging_timeout));
   if (isset(rp->active, S_MTU_PLATEAU_TABLE)) fprintf(dump_fp, "!");
   if (isset(rp->valid, S_MTU_PLATEAU_TABLE)) {
     fprintf(dump_fp, "mtpt=");
@@@@ -329,7 +347,7 @@@@
   if (isset(rp->valid, S_TRAILER)) print_bool("tril", rp->trailer);
   if (isset(rp->active, S_ARP_CACHE_TIMEOUT)) fprintf(dump_fp, "!");
   if (isset(rp->valid, S_ARP_CACHE_TIMEOUT))
-      fprintf(dump_fp, "apct=%lu:", ntohl(rp->arp_cache_timeout));
+      fprintf(dump_fp, "apct=%lu:", (unsigned long)ntohl(rp->arp_cache_timeout));
   if (isset(rp->active, S_ETHER_ENCAP)) fprintf(dump_fp, "!");
   if (isset(rp->valid, S_ETHER_ENCAP)) print_bool("encp", rp->ether_encap);
   if (isset(rp->active, S_DEFAULT_TCP_TTL)) fprintf(dump_fp, "!");
@@@@ -337,7 +355,7 @@@@
       fprintf(dump_fp, "dttl=%u:", rp->default_tcp_ttl);
   if (isset(rp->active, S_KEEPALIVE_INTER)) fprintf(dump_fp, "!");
   if (isset(rp->valid, S_KEEPALIVE_INTER))
-      fprintf(dump_fp, "kain=%lu:", ntohl(rp->keepalive_inter));
+      fprintf(dump_fp, "kain=%lu:", (unsigned long)ntohl(rp->keepalive_inter));
   if (isset(rp->active, S_KEEPALIVE_GARBA)) fprintf(dump_fp, "!");
   if (isset(rp->valid, S_KEEPALIVE_GARBA)) print_bool("kagb", rp->keepalive_garba);
   if (isset(rp->active, S_NIS_DOMAIN)) fprintf(dump_fp, "!");
@


1.4
log
@use mkstemp(); link(); fopen() to open /tmp/addrpool_dump
@
text
@@


1.3
log
@update to 1.4.0p2
@
text
@d1 74
a74 90
*** server/database.c.orig	Fri Feb 20 20:48:53 1998
--- server/database.c	Mon Aug 17 18:08:17 1998
***************
*** 55,61 ****
  #include "hash.h"
  #include "database.h"
  
- 
  void
  dump_bind_db()
  {
--- 55,60 ----
***************
*** 124,129 ****
--- 123,129 ----
  {
    struct hash_member *resptr = NULL;
  
+   unlink(ADDRPOOL_DUMP);
    if ((dump_fp = freopen(ADDRPOOL_DUMP, "w+", dump_fp)) == NULL) {
      syslog(LOG_WARNING,
  	   "Cannot reopen the address pool dump file \"%s\"", ADDRPOOL_DUMP);
***************
*** 250,256 ****
    if (isset(rp->valid, S_SUBNET_MASK)) print_ip("snmk", rp->subnet_mask);
    if (isset(rp->active, S_TIME_OFFSET)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_TIME_OFFSET))
!       fprintf(dump_fp, "tmof=%ld:", ntohl(rp->time_offset));
    if (isset(rp->active, S_ROUTER)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_ROUTER)) print_ips("rout", rp->router);
    if (isset(rp->active, S_TIME_SERVER)) fprintf(dump_fp, "!");
--- 250,256 ----
    if (isset(rp->valid, S_SUBNET_MASK)) print_ip("snmk", rp->subnet_mask);
    if (isset(rp->active, S_TIME_OFFSET)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_TIME_OFFSET))
!       fprintf(dump_fp, "tmof=%ld:", (long)ntohl(rp->time_offset));
    if (isset(rp->active, S_ROUTER)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_ROUTER)) print_ips("rout", rp->router);
    if (isset(rp->active, S_TIME_SERVER)) fprintf(dump_fp, "!");
***************
*** 299,305 ****
        fprintf(dump_fp, "ditl=%u:", rp->default_ip_ttl);
    if (isset(rp->active, S_MTU_AGING_TIMEOUT)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_MTU_AGING_TIMEOUT))
!       fprintf(dump_fp, "mtat=%lu:", ntohl(rp->mtu_aging_timeout));
    if (isset(rp->active, S_MTU_PLATEAU_TABLE)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_MTU_PLATEAU_TABLE)) {
      fprintf(dump_fp, "mtpt=");
--- 299,305 ----
        fprintf(dump_fp, "ditl=%u:", rp->default_ip_ttl);
    if (isset(rp->active, S_MTU_AGING_TIMEOUT)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_MTU_AGING_TIMEOUT))
!       fprintf(dump_fp, "mtat=%lu:", (unsigned long)ntohl(rp->mtu_aging_timeout));
    if (isset(rp->active, S_MTU_PLATEAU_TABLE)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_MTU_PLATEAU_TABLE)) {
      fprintf(dump_fp, "mtpt=");
***************
*** 329,335 ****
    if (isset(rp->valid, S_TRAILER)) print_bool("tril", rp->trailer);
    if (isset(rp->active, S_ARP_CACHE_TIMEOUT)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_ARP_CACHE_TIMEOUT))
!       fprintf(dump_fp, "apct=%lu:", ntohl(rp->arp_cache_timeout));
    if (isset(rp->active, S_ETHER_ENCAP)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_ETHER_ENCAP)) print_bool("encp", rp->ether_encap);
    if (isset(rp->active, S_DEFAULT_TCP_TTL)) fprintf(dump_fp, "!");
--- 329,335 ----
    if (isset(rp->valid, S_TRAILER)) print_bool("tril", rp->trailer);
    if (isset(rp->active, S_ARP_CACHE_TIMEOUT)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_ARP_CACHE_TIMEOUT))
!       fprintf(dump_fp, "apct=%lu:", (unsigned long)ntohl(rp->arp_cache_timeout));
    if (isset(rp->active, S_ETHER_ENCAP)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_ETHER_ENCAP)) print_bool("encp", rp->ether_encap);
    if (isset(rp->active, S_DEFAULT_TCP_TTL)) fprintf(dump_fp, "!");
***************
*** 337,343 ****
        fprintf(dump_fp, "dttl=%u:", rp->default_tcp_ttl);
    if (isset(rp->active, S_KEEPALIVE_INTER)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_KEEPALIVE_INTER))
!       fprintf(dump_fp, "kain=%lu:", ntohl(rp->keepalive_inter));
    if (isset(rp->active, S_KEEPALIVE_GARBA)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_KEEPALIVE_GARBA)) print_bool("kagb", rp->keepalive_garba);
    if (isset(rp->active, S_NIS_DOMAIN)) fprintf(dump_fp, "!");
--- 337,343 ----
        fprintf(dump_fp, "dttl=%u:", rp->default_tcp_ttl);
    if (isset(rp->active, S_KEEPALIVE_INTER)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_KEEPALIVE_INTER))
!       fprintf(dump_fp, "kain=%lu:", (unsigned long)ntohl(rp->keepalive_inter));
    if (isset(rp->active, S_KEEPALIVE_GARBA)) fprintf(dump_fp, "!");
    if (isset(rp->valid, S_KEEPALIVE_GARBA)) print_bool("kagb", rp->keepalive_garba);
    if (isset(rp->active, S_NIS_DOMAIN)) fprintf(dump_fp, "!");
@


1.2
log
@some security-related fixes
@
text
@d1 12
a12 2
*** server/database.c.orig	Tue Aug 19 14:00:36 1997
--- server/database.c	Fri Jul 17 18:34:25 1998
d15 1
a15 1
--- 124,130 ----
d32 1
a32 1
--- 251,257 ----
d49 1
a49 1
--- 300,306 ----
d66 1
a66 1
--- 330,336 ----
d83 1
a83 1
--- 338,344 ----
@


1.1
log
@Initial revision
@
text
@d2 11
a12 1
--- server/database.c	Wed Apr 29 15:32:21 1998
d22 1
a22 1
--- 250,256 ----
d39 1
a39 1
--- 299,305 ----
d56 1
a56 1
--- 329,335 ----
d73 1
a73 1
--- 337,343 ----
@


1.1.1.1
log
@Reimported wide-dhcp port, with correct paths, and fixed PLIST.
@
text
@@
