head	1.6;
access;
symbols
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.4
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	dhcp:1.1.1.1
	wide-dhcp:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2001.01.09.20.49.35;	author avsm;	state dead;
branches;
next	1.5;

1.5
date	98.12.22.03.24.21;	author form;	state Exp;
branches;
next	1.4;

1.4
date	98.08.17.11.43.33;	author form;	state Exp;
branches;
next	1.3;

1.3
date	98.07.17.12.23.18;	author form;	state Exp;
branches;
next	1.2;

1.2
date	98.06.05.02.30.28;	author form;	state Exp;
branches;
next	1.1;

1.1
date	98.05.03.00.49.49;	author angelos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.05.03.00.49.49;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.6
log
@commit this three-month old patch that was posted to ports@@ with no
response.  Does anyone out there use this port at all?  It was broken,
this unbreaks it by FAKEing it, but there's noone using it to test
it out....
@
text
@--- server/dhcps.c.orig	Sun Jul 19 09:16:53 1998
+++ server/dhcps.c	Tue Dec 22 09:19:18 1998
@@@@ -136,7 +136,7 @@@@
 int  nmacaddr;
 #endif
 
-void
+int
 main(argc, argv)
   int argc;
   char **argv;
@@@@ -146,7 +146,7 @@@@
   struct if_info *ifp = NULL;          /* pointer to interface */
   char *option = NULL;                 /* command line option */
   char msgtype;                        /* DHCP message type */
-  struct sockaddr_in my_addr, any_addr;
+  struct sockaddr_in my_addr;
   struct ifreq ifreq;
 
   bzero(&ifreq, sizeof(ifreq));
@@@@ -228,9 +228,19 @@@@
 #define LOG_PERROR	0	/* Don't bother if not defined... */
 #endif
   if (debug == 1) {
+#ifndef __OpenBSD__
     openlog("dhcps", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL0);
+#else
+    /* Using LOG_LOCAL1 to avoid OpenBSD ipmon log conflict */
+    openlog("dhcps", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL1);
+#endif
   } else {
+#ifndef __OpenBSD__
     openlog("dhcps", LOG_PID | LOG_CONS, LOG_LOCAL0);
+#else
+    /* Using LOG_LOCAL1 to avoid OpenBSD ipmon log conflict */
+    openlog("dhcps", LOG_PID | LOG_CONS, LOG_LOCAL1);
+#endif
   }
 
   init_db();               /* initialize databases */
@@@@ -540,6 +550,11 @@@@
 static void
 init_db()
 {
+#ifdef __OpenBSD__
+  int dump_fd;
+  char *dump_tmp = ADDRPOOL_DUMP ".XXXXXXXX";
+#endif
+
   if (addrpool_db[0] == '\0') strcpy(addrpool_db, ADDRPOOL_DB);
   if ((addrpool_dbfp = fopen(addrpool_db, "r")) == NULL) {
     syslog(LOG_ERR, "Cannot open the resource database \"%s\"", addrpool_db);
@@@@ -563,7 +578,23 @@@@
     syslog(LOG_ERR, "Cannot open the binding database \"%s\"", binding_db);
     exit(1);
   }
+#ifdef __OpenBSD__
+  if ((dump_fd = mkstemp(dump_tmp)) < 0) {
+    syslog(LOG_ERR, "Cannot open temporary resource dump file");
+    exit(1);
+  }
   unlink(ADDRPOOL_DUMP);
+  if (link(dump_tmp, ADDRPOOL_DUMP) < 0) {
+    syslog(LOG_ERR, "Cannot link \"%s\" to \"%s\"", dump_tmp, ADDRPOOL_DUMP);
+    close(dump_fd);
+    unlink(dump_tmp);
+    exit(1);
+  }
+  close(dump_fd);
+  unlink(dump_tmp);
+#else
+  unlink(ADDRPOOL_DUMP);
+#endif
   if ((dump_fp = fopen(ADDRPOOL_DUMP, "w+")) == NULL) {
     syslog(LOG_ERR, "Cannot open the resource dump file \"%s\"",ADDRPOOL_DUMP);
     exit(1);
@@@@ -1921,7 +1952,11 @@@@
     snd.dhcp->options[off_options] = END;
   } else if (off_extopt > 0 && off_extopt < maxoptlen - DFLTOPTLEN &&
 	     sbufvec[1].iov_base != NULL) {
+#ifndef __OpenBSD__
     sbufvec[1].iov_base[off_extopt++] = END;
+#else
+    *((char *)sbufvec[1].iov_base + off_extopt++) = END;
+#endif
   }
 
   if (off_extopt < sbufvec[1].iov_len) {
@@@@ -2378,7 +2413,11 @@@@
   char *inserted;
   char flag;
 {
+#ifdef __OpenBSD__
+  u_int32_t *addr = 0;
+#else
   u_Long *addr = 0;
+#endif
   char option[6];
   int symbol = 0;
   int retval = 0;
@@@@ -2939,7 +2978,11 @@@@
       len -= done;
       off_options += done; /* invalid offset, So, to access
 					    here will cause fatal error */
+#ifndef __OpenBSD__
       bcopy(&opt[done], &sbufvec[1].iov_base[off_extopt], len);
+#else
+      bcopy(&opt[done], (char *)sbufvec[1].iov_base + off_extopt, len);
+#endif
       off_extopt += len;
       return(0);
     }
@@@@ -3016,7 +3059,7 @@@@
     return(GOOD);
   }
 
-#if defined(__bsdi__) || (__FreeBSD__ >= 2)
+#if defined(__bsdi__) || (__FreeBSD__ >= 2) || defined(__OpenBSD__)
   delarp(ip);
 #else
   delarp(ip, sockfd);
@


1.5
log
@use mkstemp(); link(); fopen() to open /tmp/addrpool_dump
@
text
@@


1.4
log
@update to 1.4.0p2
@
text
@d1 121
a121 117
*** server/dhcps.c.orig	Sun Jul 19 09:16:53 1998
--- server/dhcps.c	Mon Aug 17 17:57:24 1998
***************
*** 136,142 ****
  int  nmacaddr;
  #endif
  
! void
  main(argc, argv)
    int argc;
    char **argv;
--- 136,142 ----
  int  nmacaddr;
  #endif
  
! int
  main(argc, argv)
    int argc;
    char **argv;
***************
*** 146,152 ****
    struct if_info *ifp = NULL;          /* pointer to interface */
    char *option = NULL;                 /* command line option */
    char msgtype;                        /* DHCP message type */
!   struct sockaddr_in my_addr, any_addr;
    struct ifreq ifreq;
  
    bzero(&ifreq, sizeof(ifreq));
--- 146,152 ----
    struct if_info *ifp = NULL;          /* pointer to interface */
    char *option = NULL;                 /* command line option */
    char msgtype;                        /* DHCP message type */
!   struct sockaddr_in my_addr;
    struct ifreq ifreq;
  
    bzero(&ifreq, sizeof(ifreq));
***************
*** 228,236 ****
--- 228,246 ----
  #define LOG_PERROR	0	/* Don't bother if not defined... */
  #endif
    if (debug == 1) {
+ #ifndef __OpenBSD__
      openlog("dhcps", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL0);
+ #else
+     /* Using LOG_LOCAL1 to avoid OpenBSD ipmon log conflict */
+     openlog("dhcps", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL1);
+ #endif
    } else {
+ #ifndef __OpenBSD__
      openlog("dhcps", LOG_PID | LOG_CONS, LOG_LOCAL0);
+ #else
+     /* Using LOG_LOCAL1 to avoid OpenBSD ipmon log conflict */
+     openlog("dhcps", LOG_PID | LOG_CONS, LOG_LOCAL1);
+ #endif
    }
  
    init_db();               /* initialize databases */
***************
*** 1921,1927 ****
--- 1931,1941 ----
      snd.dhcp->options[off_options] = END;
    } else if (off_extopt > 0 && off_extopt < maxoptlen - DFLTOPTLEN &&
  	     sbufvec[1].iov_base != NULL) {
+ #ifndef __OpenBSD__
      sbufvec[1].iov_base[off_extopt++] = END;
+ #else
+     *((char *)sbufvec[1].iov_base + off_extopt++) = END;
+ #endif
    }
  
    if (off_extopt < sbufvec[1].iov_len) {
***************
*** 2378,2384 ****
--- 2392,2402 ----
    char *inserted;
    char flag;
  {
+ #ifdef __OpenBSD__
+   u_int32_t *addr = 0;
+ #else
    u_Long *addr = 0;
+ #endif
    char option[6];
    int symbol = 0;
    int retval = 0;
***************
*** 2939,2945 ****
--- 2957,2967 ----
        len -= done;
        off_options += done; /* invalid offset, So, to access
  					    here will cause fatal error */
+ #ifndef __OpenBSD__
        bcopy(&opt[done], &sbufvec[1].iov_base[off_extopt], len);
+ #else
+       bcopy(&opt[done], (char *)sbufvec[1].iov_base + off_extopt, len);
+ #endif
        off_extopt += len;
        return(0);
      }
***************
*** 3016,3022 ****
      return(GOOD);
    }
  
! #if defined(__bsdi__) || (__FreeBSD__ >= 2)
    delarp(ip);
  #else
    delarp(ip, sockfd);
--- 3038,3044 ----
      return(GOOD);
    }
  
! #if defined(__bsdi__) || (__FreeBSD__ >= 2) || defined(__OpenBSD__)
    delarp(ip);
  #else
    delarp(ip, sockfd);
@


1.3
log
@some security-related fixes
@
text
@d1 2
a2 2
*** server/dhcps.c.orig	Tue Aug 19 14:14:39 1997
--- server/dhcps.c	Fri Jul 17 18:33:37 1998
d4 3
a6 3
*** 126,132 ****
  
  char **argv_orig;
d12 3
a14 3
--- 126,132 ----
  
  char **argv_orig;
d21 14
a34 8
*** 211,219 ****
  #define LOG_PERROR	0	/* Don't bother if not defined... */
  #endif
    if (debug == 1) {
!     openlog("dhcps", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL0);
    } else {
!     openlog("dhcps", LOG_PID | LOG_CONS, LOG_LOCAL0);
    }
d36 4
a39 2
    init_db();               /* initialize databases */
--- 211,219 ----
d43 6
a48 1
!     openlog("dhcps", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL1);
d50 6
a55 1
!     openlog("dhcps", LOG_PID | LOG_CONS, LOG_LOCAL1);
d60 2
a61 11
*** 526,531 ****
--- 526,532 ----
      syslog(LOG_ERR, "Cannot open the binding database \"%s\"", binding_db);
      exit(1);
    }
+   unlink(ADDRPOOL_DUMP);
    if ((dump_fp = fopen(ADDRPOOL_DUMP, "w+")) == NULL) {
      syslog(LOG_ERR, "Cannot open the resource dump file \"%s\"",ADDRPOOL_DUMP);
      exit(1);
***************
*** 1832,1838 ****
d65 5
a69 9
!     sbufvec[1].iov_base[off_extopt++] = END;
    }
  
    if (off_extopt < sbufvec[1].iov_len) {
--- 1833,1839 ----
      snd.dhcp->options[off_options] = END;
    } else if (off_extopt > 0 && off_extopt < maxoptlen - DFLTOPTLEN &&
  	     sbufvec[1].iov_base != NULL) {
!     *((char *)sbufvec[1].iov_base + off_extopt++) = END;
d74 2
a75 2
*** 2290,2296 ****
--- 2291,2301 ----
d79 1
a79 1
+ #if defined(__OpenBSD__)
d88 2
a89 1
*** 2851,2857 ****
d93 5
a97 9
!       bcopy(&opt[done], &sbufvec[1].iov_base[off_extopt], len);
        off_extopt += len;
        return(0);
      }
--- 2856,2862 ----
        len -= done;
        off_options += done; /* invalid offset, So, to access
  					    here will cause fatal error */
!       bcopy(&opt[done], (char *)sbufvec[1].iov_base + off_extopt, len);
d102 1
a102 1
*** 2927,2933 ****
d106 1
a106 1
! #if defined(__bsdi__) || defined(__FreeBSD__)
d110 1
a110 1
--- 2932,2938 ----
d114 1
a114 1
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
@


1.2
log
@fix compilation error
@
text
@d2 1
a2 1
--- server/dhcps.c	Fri Jun  5 09:27:41 1998
d42 10
d60 1
a60 1
--- 1832,1838 ----
d70 1
a70 1
--- 2290,2300 ----
d91 1
a91 1
--- 2855,2861 ----
d108 1
a108 1
--- 2931,2937 ----
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
--- server/dhcps.c	Wed Apr 29 15:39:18 1998
d42 17
d72 17
@


1.1.1.1
log
@Reimported wide-dhcp port, with correct paths, and fixed PLIST.
@
text
@@
