head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.0.50
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.48
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.46
	OPENBSD_5_0:1.1.0.44
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.42
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.40
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.38
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.36
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.34
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.32
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.30
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.28
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.26
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.24
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.22
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.20
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.18
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.16
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.14
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.12
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.10
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.8
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.6
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.05.10.09.56.45;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2001.01.09.20.49.36;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@normalise patches (context diffs -> unidiffs, and use standard filenames).
no pkg change.
@
text
@*** client/dhcpc_subr.c.orig	Thu Nov 13 21:39:55 1997
--- client/dhcpc_subr.c	Mon Aug 17 18:19:06 1998
***************
*** 1110,1116 ****
--- 1110,1121 ----
  #ifndef LOG_PERROR
  #define LOG_PERROR   0
  #endif
+ #ifndef __OpenBSD__
    openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL0);
+ #else
+   /* Using LOG_LOCAL1 to avoid OpenBSD ipmon log conflict */
+   openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL1);
+ #endif
  
    sprintf(pid_filename, "%s.%s.pid", PATH_PID_PREFIX, ifp->name);
    sprintf(cache_filename, "%s.%s", PATH_CACHE_PREFIX, ifp->name);
***************
*** 1314,1320 ****
--- 1319,1331 ----
  #ifndef LOG_PERROR
  #define LOG_PERROR   0
  #endif
+ 
+ #ifndef __OpenBSD__
    openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL0);
+ #else
+   /* Using LOG_LOCAL1 to avoid OpenBSD ipmon log conflict */
+   openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL1);
+ #endif
  
    sprintf(pid_filename, "%s.%s.pid", PATH_PID_PREFIX, ifp->name);
    sprintf(cache_filename, "%s.%s", PATH_CACHE_PREFIX, ifp->name);
***************
*** 1500,1506 ****
  /*
   * halt network, and reset the interface
   */
! #if defined(__bsdi__) || defined(__FreeBSD__)
  
  void
  reset_if(ifp, updown)
--- 1511,1517 ----
  /*
   * halt network, and reset the interface
   */
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
  
  void
  reset_if(ifp, updown)
***************
*** 1551,1557 ****
  #endif
  
  
! #if defined(__bsdi__) || defined(__FreeBSD__)
  /*
   * ifconfig up/down
   */
--- 1562,1568 ----
  #endif
  
  
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
  /*
   * ifconfig up/down
   */
***************
*** 1623,1629 ****
   * configure network interface
   *    address, netmask, and broadcast address
   */
! #if defined(__bsdi__) || defined(__FreeBSD__)
  
  int
  config_if(ifp, addr, mask, brdcst)
--- 1634,1640 ----
   * configure network interface
   *    address, netmask, and broadcast address
   */
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
  
  int
  config_if(ifp, addr, mask, brdcst)
***************
*** 1704,1710 ****
    return(0);
  }
  
! #else /* not __bsdi__ nor __FreeBSD__ */
  
  int
  config_if(ifp, addr, mask, brdcst)
--- 1715,1721 ----
    return(0);
  }
  
! #else /* not __bsdi__ not __FreeBSD__ nor __OpenBSD__ */
  
  int
  config_if(ifp, addr, mask, brdcst)
***************
*** 1780,1798 ****
    return(0);
  }
  
! #endif /* defined(__bsdi__) || defined(__FreeBSD__) */
  
  
  /*
   * set routing table
   */
! #if !defined(__bsdi__) && !defined(__FreeBSD__)
  void
  set_route(param)
    struct dhcp_param *param;
  {
    int sockfd = 0;
! #if !defined(__bsdi__) && !defined(__FreeBSD__) && !defined(__osf__)
  #define  ortentry  rtentry
  #endif
    struct ortentry rt;
--- 1791,1809 ----
    return(0);
  }
  
! #endif /* defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__) */
  
  
  /*
   * set routing table
   */
! #if !defined(__bsdi__) && !defined(__FreeBSD__) && !defined(__OpenBSD__)
  void
  set_route(param)
    struct dhcp_param *param;
  {
    int sockfd = 0;
! #if !defined(__bsdi__) && !defined(__FreeBSD__) && !defined(__OpenBSD__) && !defined(__osf__)
  #define  ortentry  rtentry
  #endif
    struct ortentry rt;
***************
*** 1816,1827 ****
      bzero(&dst, sizeof(struct sockaddr));
      bzero(&gateway, sizeof(struct sockaddr));
      rt.rt_flags = RTF_UP | RTF_GATEWAY;
! #if defined(__bsdi__) || defined(__FreeBSD__)
      ((struct sockaddr_in *) &dst)->sin_len = sizeof(struct sockaddr_in);
  #endif
      ((struct sockaddr_in *) &dst)->sin_family = AF_INET;
      ((struct sockaddr_in *) &dst)->sin_addr.s_addr = INADDR_ANY;
! #if defined(__bsdi__) || defined(__FreeBSD__)
      ((struct sockaddr_in *) &gateway)->sin_len = sizeof(struct sockaddr_in);
  #endif
      ((struct sockaddr_in *) &gateway)->sin_family = AF_INET;
--- 1827,1838 ----
      bzero(&dst, sizeof(struct sockaddr));
      bzero(&gateway, sizeof(struct sockaddr));
      rt.rt_flags = RTF_UP | RTF_GATEWAY;
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
      ((struct sockaddr_in *) &dst)->sin_len = sizeof(struct sockaddr_in);
  #endif
      ((struct sockaddr_in *) &dst)->sin_family = AF_INET;
      ((struct sockaddr_in *) &dst)->sin_addr.s_addr = INADDR_ANY;
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
      ((struct sockaddr_in *) &gateway)->sin_len = sizeof(struct sockaddr_in);
  #endif
      ((struct sockaddr_in *) &gateway)->sin_family = AF_INET;
***************
*** 2531,2537 ****
    struct msghdr msg;
    struct iovec bufvec[1];
    int bufsize = DFLTDHCPLEN;
! #if defined(__bsdi__) || defined(__FreeBSD__)
    int on;
  #endif
  
--- 2542,2548 ----
    struct msghdr msg;
    struct iovec bufvec[1];
    int bufsize = DFLTDHCPLEN;
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
    int on;
  #endif
  
***************
*** 3042,3048 ****
    }
  
    bcopy(OPTBODY(buf), str, OPTLEN(buf));
!   str[OPTLEN(buf)] = '\0';
    buf += OPTLEN(buf) + 1;
    return(0);
  }
--- 3053,3059 ----
    }
  
    bcopy(OPTBODY(buf), str, OPTLEN(buf));
!   str[(unsigned int)OPTLEN(buf)] = '\0';
    buf += OPTLEN(buf) + 1;
    return(0);
  }
@


1.1
log
@commit this three-month old patch that was posted to ports@@ with no
response.  Does anyone out there use this port at all?  It was broken,
this unbreaks it by FAKEing it, but there's noone using it to test
it out....
@
text
@@

