head	1.3;
access;
symbols
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	dhcp:1.1.1.1
	wide-dhcp:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2001.01.09.20.49.34;	author avsm;	state dead;
branches;
next	1.2;

1.2
date	98.08.17.11.43.28;	author form;	state Exp;
branches;
next	1.1;

1.1
date	98.05.03.00.49.49;	author angelos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.05.03.00.49.49;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.3
log
@commit this three-month old patch that was posted to ports@@ with no
response.  Does anyone out there use this port at all?  It was broken,
this unbreaks it by FAKEing it, but there's noone using it to test
it out....
@
text
@*** client/dhcpc_subr.c.orig	Thu Nov 13 21:39:55 1997
--- client/dhcpc_subr.c	Mon Aug 17 18:19:06 1998
***************
*** 1110,1116 ****
--- 1110,1121 ----
  #ifndef LOG_PERROR
  #define LOG_PERROR   0
  #endif
+ #ifndef __OpenBSD__
    openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL0);
+ #else
+   /* Using LOG_LOCAL1 to avoid OpenBSD ipmon log conflict */
+   openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL1);
+ #endif
  
    sprintf(pid_filename, "%s.%s.pid", PATH_PID_PREFIX, ifp->name);
    sprintf(cache_filename, "%s.%s", PATH_CACHE_PREFIX, ifp->name);
***************
*** 1314,1320 ****
--- 1319,1331 ----
  #ifndef LOG_PERROR
  #define LOG_PERROR   0
  #endif
+ 
+ #ifndef __OpenBSD__
    openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL0);
+ #else
+   /* Using LOG_LOCAL1 to avoid OpenBSD ipmon log conflict */
+   openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL1);
+ #endif
  
    sprintf(pid_filename, "%s.%s.pid", PATH_PID_PREFIX, ifp->name);
    sprintf(cache_filename, "%s.%s", PATH_CACHE_PREFIX, ifp->name);
***************
*** 1500,1506 ****
  /*
   * halt network, and reset the interface
   */
! #if defined(__bsdi__) || defined(__FreeBSD__)
  
  void
  reset_if(ifp, updown)
--- 1511,1517 ----
  /*
   * halt network, and reset the interface
   */
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
  
  void
  reset_if(ifp, updown)
***************
*** 1551,1557 ****
  #endif
  
  
! #if defined(__bsdi__) || defined(__FreeBSD__)
  /*
   * ifconfig up/down
   */
--- 1562,1568 ----
  #endif
  
  
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
  /*
   * ifconfig up/down
   */
***************
*** 1623,1629 ****
   * configure network interface
   *    address, netmask, and broadcast address
   */
! #if defined(__bsdi__) || defined(__FreeBSD__)
  
  int
  config_if(ifp, addr, mask, brdcst)
--- 1634,1640 ----
   * configure network interface
   *    address, netmask, and broadcast address
   */
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
  
  int
  config_if(ifp, addr, mask, brdcst)
***************
*** 1704,1710 ****
    return(0);
  }
  
! #else /* not __bsdi__ nor __FreeBSD__ */
  
  int
  config_if(ifp, addr, mask, brdcst)
--- 1715,1721 ----
    return(0);
  }
  
! #else /* not __bsdi__ not __FreeBSD__ nor __OpenBSD__ */
  
  int
  config_if(ifp, addr, mask, brdcst)
***************
*** 1780,1798 ****
    return(0);
  }
  
! #endif /* defined(__bsdi__) || defined(__FreeBSD__) */
  
  
  /*
   * set routing table
   */
! #if !defined(__bsdi__) && !defined(__FreeBSD__)
  void
  set_route(param)
    struct dhcp_param *param;
  {
    int sockfd = 0;
! #if !defined(__bsdi__) && !defined(__FreeBSD__) && !defined(__osf__)
  #define  ortentry  rtentry
  #endif
    struct ortentry rt;
--- 1791,1809 ----
    return(0);
  }
  
! #endif /* defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__) */
  
  
  /*
   * set routing table
   */
! #if !defined(__bsdi__) && !defined(__FreeBSD__) && !defined(__OpenBSD__)
  void
  set_route(param)
    struct dhcp_param *param;
  {
    int sockfd = 0;
! #if !defined(__bsdi__) && !defined(__FreeBSD__) && !defined(__OpenBSD__) && !defined(__osf__)
  #define  ortentry  rtentry
  #endif
    struct ortentry rt;
***************
*** 1816,1827 ****
      bzero(&dst, sizeof(struct sockaddr));
      bzero(&gateway, sizeof(struct sockaddr));
      rt.rt_flags = RTF_UP | RTF_GATEWAY;
! #if defined(__bsdi__) || defined(__FreeBSD__)
      ((struct sockaddr_in *) &dst)->sin_len = sizeof(struct sockaddr_in);
  #endif
      ((struct sockaddr_in *) &dst)->sin_family = AF_INET;
      ((struct sockaddr_in *) &dst)->sin_addr.s_addr = INADDR_ANY;
! #if defined(__bsdi__) || defined(__FreeBSD__)
      ((struct sockaddr_in *) &gateway)->sin_len = sizeof(struct sockaddr_in);
  #endif
      ((struct sockaddr_in *) &gateway)->sin_family = AF_INET;
--- 1827,1838 ----
      bzero(&dst, sizeof(struct sockaddr));
      bzero(&gateway, sizeof(struct sockaddr));
      rt.rt_flags = RTF_UP | RTF_GATEWAY;
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
      ((struct sockaddr_in *) &dst)->sin_len = sizeof(struct sockaddr_in);
  #endif
      ((struct sockaddr_in *) &dst)->sin_family = AF_INET;
      ((struct sockaddr_in *) &dst)->sin_addr.s_addr = INADDR_ANY;
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
      ((struct sockaddr_in *) &gateway)->sin_len = sizeof(struct sockaddr_in);
  #endif
      ((struct sockaddr_in *) &gateway)->sin_family = AF_INET;
***************
*** 2531,2537 ****
    struct msghdr msg;
    struct iovec bufvec[1];
    int bufsize = DFLTDHCPLEN;
! #if defined(__bsdi__) || defined(__FreeBSD__)
    int on;
  #endif
  
--- 2542,2548 ----
    struct msghdr msg;
    struct iovec bufvec[1];
    int bufsize = DFLTDHCPLEN;
! #if defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)
    int on;
  #endif
  
***************
*** 3042,3048 ****
    }
  
    bcopy(OPTBODY(buf), str, OPTLEN(buf));
!   str[OPTLEN(buf)] = '\0';
    buf += OPTLEN(buf) + 1;
    return(0);
  }
--- 3053,3059 ----
    }
  
    bcopy(OPTBODY(buf), str, OPTLEN(buf));
!   str[(unsigned int)OPTLEN(buf)] = '\0';
    buf += OPTLEN(buf) + 1;
    return(0);
  }
@


1.2
log
@update to 1.4.0p2
@
text
@@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
*** client/dhcpc_subr.c.orig	Thu Jul  3 03:19:01 1997
--- client/dhcpc_subr.c	Wed Apr 29 15:54:09 1998
d4 2
a5 1
*** 1109,1115 ****
d9 6
a14 1
!   openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL0);
d17 1
a17 9
    for (n = 0; n < 5; n++) {
--- 1109,1115 ----
  #ifndef LOG_PERROR
  #define LOG_PERROR   0
  #endif
!   openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL1);
  
    sprintf(pid_filename, "%s.%s.pid", PATH_PID_PREFIX, ifp->name);
    for (n = 0; n < 5; n++) {
d19 2
a20 1
*** 1312,1318 ****
d24 7
a30 1
!   openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL0);
d33 1
a33 9
    for (n = 0; n < 5; n++) {
--- 1312,1318 ----
  #ifndef LOG_PERROR
  #define LOG_PERROR   0
  #endif
!   openlog("dhcpc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_LOCAL1);
  
    sprintf(pid_filename, "%s.%s.pid", PATH_PID_PREFIX, ifp->name);
    for (n = 0; n < 5; n++) {
d35 1
a35 1
*** 1497,1503 ****
d43 1
a43 1
--- 1497,1503 ----
d52 1
a52 1
*** 1548,1554 ****
d60 1
a60 1
--- 1548,1554 ----
d69 1
a69 1
*** 1620,1626 ****
d77 1
a77 1
--- 1620,1626 ----
d86 1
a86 1
*** 1701,1707 ****
d94 1
a94 1
--- 1701,1707 ----
d103 1
a103 1
*** 1777,1795 ****
d123 1
a123 1
--- 1777,1795 ----
d127 1
a127 1
! #endif /* defined(__bsdi__) || defined(__FreeBSD__) || defined(__OpenBSD__)*/
d144 1
a144 1
*** 1813,1824 ****
d157 1
a157 1
--- 1813,1824 ----
d171 2
a172 18
*** 1836,1842 ****
    return;
  }
  
! #else  /* It's BSD/OS 2.* or FreeBSD */
  
  void
  set_route(param)
--- 1836,1842 ----
    return;
  }
  
! #else  /* It's BSD/OS 2.* or *BSD */
  
  void
  set_route(param)
***************
*** 2529,2535 ****
a174 1
  #if 0
d178 3
a180 2
  #endif
--- 2529,2535 ----
a182 1
  #if 0
d186 1
a186 1
  #endif
d188 1
a188 6
*** 3175,3181 ****
        return(-1);
      }
      for (i = 0; i < max; i++) {
!       param->mtu_plateau_table->shortnum[i] = GETHS(buf[i * 2 + 2]);
      }
d191 6
a196 6
--- 3175,3181 ----
        return(-1);
      }
      for (i = 0; i < max; i++) {
!       param->mtu_plateau_table->shortnum[i] = GETHS(&buf[i * 2 + 2]);
      }
d199 5
@


1.1.1.1
log
@Reimported wide-dhcp port, with correct paths, and fixed PLIST.
@
text
@@
