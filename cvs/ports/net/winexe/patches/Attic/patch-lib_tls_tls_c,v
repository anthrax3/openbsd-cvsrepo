head	1.3;
access;
symbols
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.0.14
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.16
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.12
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.10
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.8
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.05.06.14.43.44;	author sthen;	state dead;
branches;
next	1.2;
commitid	fprlVOyglz3GfRXo;

1.2
date	2016.03.06.12.17.40;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	WwJQ0U2iz6YXvmlS;

1.1
date	2012.07.09.09.10.13;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove winexe; this version doesn't work with any modern Windows version,
also fails with clang.

there's some slightly newer (though still old) devel code on sourceforge git
(building against separate samba4, rather than have chunks of it copied in)
which might be of interest if any waf fans want to revive this.
@
text
@$OpenBSD: patch-lib_tls_tls_c,v 1.2 2016/03/06 12:17:40 ajacoutot Exp $

Fix build with GnuTLS 3.4.

--- lib/tls/tls.c.orig	Wed Jul 30 21:44:55 2008
+++ lib/tls/tls.c	Sat Mar  5 15:24:04 2016
@@@@ -505,7 +505,6 @@@@ struct socket_context *tls_init_server(struct tls_para
 	gnutls_transport_set_ptr(tls->session, (gnutls_transport_ptr)tls);
 	gnutls_transport_set_pull_function(tls->session, (gnutls_pull_func)tls_pull);
 	gnutls_transport_set_push_function(tls->session, (gnutls_push_func)tls_push);
-	gnutls_transport_set_lowat(tls->session, 0);
 
 	tls->plain_chars = plain_chars;
 	if (plain_chars) {
@@@@ -576,7 +575,7 @@@@ struct socket_context *tls_init_client(struct socket_c
 	talloc_free(cafile);
 	TLSCHECK(gnutls_init(&tls->session, GNUTLS_CLIENT));
 	TLSCHECK(gnutls_set_default_priority(tls->session));
-	gnutls_certificate_type_set_priority(tls->session, cert_type_priority);
+	gnutls_priority_set_direct(tls->session, "NORMAL:+CTYPE-OPENPGP", NULL);
 	TLSCHECK(gnutls_credentials_set(tls->session, GNUTLS_CRD_CERTIFICATE, tls->xcred));
 
 	talloc_set_destructor(tls, tls_destructor);
@@@@ -584,7 +583,6 @@@@ struct socket_context *tls_init_client(struct socket_c
 	gnutls_transport_set_ptr(tls->session, (gnutls_transport_ptr)tls);
 	gnutls_transport_set_pull_function(tls->session, (gnutls_pull_func)tls_pull);
 	gnutls_transport_set_push_function(tls->session, (gnutls_push_func)tls_push);
-	gnutls_transport_set_lowat(tls->session, 0);
 	tls->tls_detect = False;
 
 	tls->output_pending  = False;
@


1.2
log
@Fix build with GnuTLS 3.4.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_tls_tls_c,v 1.1 2012/07/09 09:10:13 ajacoutot Exp $
@


1.1
log
@Unbreak with gnutls>=3.
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 2
The gnutls_transport_set_lowat function has been removed in gnutls>=3
(the lowat feature is always disabled now).
d5 3
a7 3
--- lib/tls/tls.c.orig	Mon Jul  9 11:06:30 2012
+++ lib/tls/tls.c	Mon Jul  9 11:06:50 2012
@@@@ -505,7 +505,9 @@@@ struct socket_context *tls_init_server(struct tls_para
d11 1
a11 3
+#if GNUTLS_VERSION_NUMBER < 0x020c00
 	gnutls_transport_set_lowat(tls->session, 0);
+#endif
d15 10
a24 1
@@@@ -584,7 +586,9 @@@@ struct socket_context *tls_init_client(struct socket_c
d28 1
a28 3
+#if GNUTLS_VERSION_NUMBER < 0x020c00
 	gnutls_transport_set_lowat(tls->session, 0);
+#endif
@

