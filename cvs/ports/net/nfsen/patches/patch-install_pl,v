head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.6
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.4
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.7.0.4
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	sthen_20100502:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2016.04.11.08.51.28;	author sthen;	state Exp;
branches;
next	1.7;
commitid	CiETL9FZU391CDDI;

1.7
date	2015.01.09.18.04.19;	author sthen;	state Exp;
branches
	1.7.4.1;
next	1.6;
commitid	litCaiKfK5Q5Wubp;

1.6
date	2014.09.17.09.20.01;	author sthen;	state Exp;
branches;
next	1.5;
commitid	9556sXFJBr6vsHaj;

1.5
date	2013.05.03.09.49.01;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2013.05.03.01.17.10;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.24.23.04.00;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.12.09.55.51;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.02.20.52.32;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.05.02.20.52.32;	author sthen;	state Exp;
branches;
next	;

1.7.4.1
date	2016.04.11.08.54.19;	author sthen;	state Exp;
branches;
next	;
commitid	E2IlqqXE1Km3L13i;


desc
@@


1.8
log
@Patch a problem with nfsen's install.pl that was introduced in the 1.3.7
update reported by mlnospam at yahoo.com

Garbage-collect pkg/MESSAGE while there. Most of the contents are already
in pkg/README and I've merged the other bit.
@
text
@$OpenBSD: patch-install_pl,v 1.7 2015/01/09 18:04:19 sthen Exp $
--- install.pl.orig	Mon Jun 23 20:27:50 2014
+++ install.pl	Mon Apr 11 09:23:26 2016
@@@@ -165,14 +165,14 @@@@ sub VerifyUser {
 	if ( !defined $gid_name ) {
 		die "Group '$user_gid' not found on this system\n";
 	}
-	# Check the members list
-	foreach my $member ( split /\s+/, $group_members ) {
-		if ( $member eq $user ) {
+#	# Check the members list
+#	foreach my $member ( split /\s+/, $group_members ) {
+#		if ( $member eq $user ) {
 			# user found
 			return $uid;
-		}
-	}
-	die "User '$user' not a member of group '$NfConf::WWWGROUP'\n";
+#		}
+#	}
+#	die "User '$user' not a member of group '$NfConf::WWWGROUP'\n";
 
 } # End of VerifyUser
 
@@@@ -553,7 +553,7 @@@@ sub UpgradeProfiles {
 				if( ! -f "$NfConf::PROFILEDATADIR/$profilepath/$channel/.nfstat") { 
 					# no shadow profile, but missing channel stat
 					print "Rebuilding profile stats for '$profilegroup/$profilename'\n";
-					NfProfile::DoRebuild(\%profileinfo, $profilename, $profilegroup, $profilepath, 1, 0);
+					NfProfile::DoRebuild("", \%profileinfo, $profilename, $profilegroup, $profilepath, 1, 0);
 					NfProfile::WriteProfile(\%profileinfo);
 				}
 				# make sure it's own by nfsen_uid after the rebuild
@@@@ -584,7 +584,6 @@@@ sub CopyAllFiles {
 	$CopyRecursive::UID 	 = 0;
 	$CopyRecursive::GID 	 = $www_gid;
 	$CopyRecursive::MODE 	 = 0755;
-	unlink "$NfConf::BINDIR/nfsen.rc";
 	CopyRecursive::dircopy("bin", "$NfConf::INSTPREFIX$NfConf::BINDIR");
 	CopyRecursive::dircopy("libexec", "$NfConf::INSTPREFIX$NfConf::LIBEXECDIR");
 	$CopyRecursive::MODE 	 = 0644;
@@@@ -592,11 +591,11 @@@@ sub CopyAllFiles {
 	CopyRecursive::dircopy("plugins/backend",  "$NfConf::INSTPREFIX$NfConf::BACKEND_PLUGINDIR");
 	CopyRecursive::dircopy("plugins/frontend", "$NfConf::INSTPREFIX$NfConf::FRONTEND_PLUGINDIR");
 
-	if ( $ConfigFile eq "$NfConf::CONFDIR/nfsen.conf" ) {
+	if ( $ConfigFile eq "$NfConf::INSTPREFIX$NfConf::CONFDIR/nfsen.conf" ) {
 		print "Keep config file '$ConfigFile'\n";
 	} else {
 		print "Copy config file '$ConfigFile'\n";
-		CopyRecursive::fcopy("$ConfigFile", "$NfConf::CONFDIR/nfsen.conf");
+		CopyRecursive::fcopy("$ConfigFile", "$NfConf::INSTPREFIX$NfConf::CONFDIR/nfsen.conf");
 	}
 	print "\n";
 
@@@@ -615,7 +614,7 @@@@ sub Cleanup {
 					);
 
 	foreach my $file ( @@OldFiles ) {
-		unlink $file if -f $file;
+#		unlink $file if -f $file;
 	}
 
 } # End of Cleanup
@@@@ -629,8 +628,13 @@@@ sub Cleanup {
 $| = 1;
 
 my $ConfigFile = shift @@ARGV;
+my $mode = shift @@ARGV;
+ 
+my $configure;
+my $copy;
+$configure=1 if $mode eq '';
+$copy=1 if $mode eq 'copy';
 
-
 # Load the required NfSen modules 
 unshift @@INC, "libexec";
 print "Check for required Perl modules: ";
@@@@ -652,7 +656,7 @@@@ if ( $@@ ) {
 
 # need to run as root
 if ( !NfSen::root_process() ) {
-	die "nfsen setup wants to run as root\n";
+	print "Warning: nfsen setup should normally be run as root\n";
 }
 
 # need a config file
@@@@ -702,7 +706,8 @@@@ print "Version: $nfsen_version: $VERSION\n\n";
 
 # Get Perl
 # Put this into a NfConf variable, so we can use the standard Patch Procedure
-$NfConf::PERL = GetPerl();
+#$NfConf::PERL = GetPerl();
+$NfConf::PERL = FindCommand("perl");
 $NfConf::INSTPREFIX = $ENV{'INSTPREFIX'};
 if ( defined $NfConf::INSTPREFIX ) {
 	if ( ! $NfConf::INSTPREFIX =~ /\/$/ ) {
@@@@ -716,7 +721,10 @@@@ if ( defined $NfConf::INSTPREFIX ) {
 
 my ($nfsen_uid, $www_gid ) = VerifyConfig();
 my $nfsen_run = 0;
+my $need_rrdlayout_upgrade = undef;
+my $rrdtool = undef;
 
+if ($configure) {
 # test for two files of old layout
 my $need_rrdlayout_upgrade = -f "$NfConf::PROFILESTATDIR/live/flows.rrd" && -f "$NfConf::PROFILESTATDIR/live/packets_other.rrd";
 
@@@@ -766,10 +774,14 @@@@ if ( -f "$NfConf::PIDDIR/$pid_name" ) {
 		}
 	}
 }
+}
 
+if ($copy) {
 SetupHTML($nfsen_uid, $www_gid);
 CopyAllFiles($ConfigFile, $nfsen_uid, $www_gid);
 PatchAllScripts();
+}
+if ($configure) {
 Cleanup();
 SetupEnv($nfsen_uid, $www_gid);
 
@@@@ -810,14 +822,17 @@@@ $$$hints{'version'} 		= $nfsen_version;
 $$$hints{'installed'} 		= time();
 NfSen::StoreHints();
 chown $nfsen_uid, $www_gid, "$NfConf::INSTPREFIX$NfConf::PROFILESTATDIR/hints" || die "Can't chown hints db: $!\n";
+}
 print "Setup done.\n\n";
 
+if ( $configure ) {
 if ( $nfsen_run == 2 ) {
 	print "Restart NfSen\n";
 	system("$NfConf::BINDIR/nfsen start");
 } elsif ( $nfsen_run == 1 ) {
 	print "Restart nfsend\n";
 	system("$NfConf::BINDIR/nfsend");
+} 
 } 
 
 print "* You may want to subscribe to the nfsen-discuss mailing list:\n";
@


1.7
log
@update to nfsen 1.3.7
@
text
@d1 1
a1 1
$OpenBSD: patch-install_pl,v 1.6 2014/09/17 09:20:01 sthen Exp $
d3 1
a3 1
+++ install.pl	Fri Jan  9 17:16:58 2015
d25 9
@


1.7.4.1
log
@MFC: Patch a problem with nfsen's install.pl that was introduced in the 1.3.7
update reported by mlnospam at yahoo.com

Garbage-collect pkg/MESSAGE while there. Most of the contents are already
in pkg/README and I've merged the other bit.
@
text
@d1 1
a1 1
$OpenBSD: patch-install_pl,v 1.8 2016/04/11 08:51:28 sthen Exp $
d3 1
a3 1
+++ install.pl	Mon Apr 11 09:23:26 2016
a24 9
@@@@ -553,7 +553,7 @@@@ sub UpgradeProfiles {
 				if( ! -f "$NfConf::PROFILEDATADIR/$profilepath/$channel/.nfstat") { 
 					# no shadow profile, but missing channel stat
 					print "Rebuilding profile stats for '$profilegroup/$profilename'\n";
-					NfProfile::DoRebuild(\%profileinfo, $profilename, $profilegroup, $profilepath, 1, 0);
+					NfProfile::DoRebuild("", \%profileinfo, $profilename, $profilegroup, $profilepath, 1, 0);
 					NfProfile::WriteProfile(\%profileinfo);
 				}
 				# make sure it's own by nfsen_uid after the rebuild
@


1.6
log
@patch install.pl to allow FAKE_AS_ROOT build
@
text
@d1 3
a3 3
$OpenBSD: patch-install_pl,v 1.5 2013/05/03 09:49:01 sthen Exp $
--- install.pl.orig	Mon Jan 23 16:36:02 2012
+++ install.pl	Wed Sep 17 10:18:50 2014
d71 1
a71 9
@@@@ -639,7 +643,6 @@@@ eval {
 	require RRDs; 			import RRDs;
 	require Mail::Header;	import Mail::Header;
 	require Mail::Internet;	import Mail::Internet;
-	require Socket6;		import Socket6;
 };
 if ( $@@ ) {
 	print "Failed\nRequired nfsen modules not found\n";
@@@@ -651,7 +654,7 @@@@ if ( $@@ ) {
d80 1
a80 1
@@@@ -701,7 +704,8 @@@@ print "Version: $nfsen_version: $VERSION\n\n";
d90 1
a90 1
@@@@ -715,7 +719,10 @@@@ if ( defined $NfConf::INSTPREFIX ) {
d101 1
a101 1
@@@@ -765,10 +772,14 @@@@ if ( -f "$NfConf::PIDDIR/$pid_name" ) {
d116 1
a116 1
@@@@ -809,14 +820,17 @@@@ $$$hints{'version'} 		= $nfsen_version;
@


1.5
log
@oh, socket6 isn't needed at all: inet_ntop was added to Socket in Perl 5.12
so we can use it from there.
@
text
@d1 1
a1 1
$OpenBSD: patch-install_pl,v 1.4 2013/05/03 01:17:10 sthen Exp $
d3 1
a3 1
+++ install.pl	Fri May  3 10:43:46 2013
d25 9
a33 1
@@@@ -592,11 +592,11 @@@@ sub CopyAllFiles {
d47 1
a47 1
@@@@ -615,7 +615,7 @@@@ sub Cleanup {
d56 1
a56 1
@@@@ -629,8 +629,13 @@@@ sub Cleanup {
d71 1
a71 1
@@@@ -639,7 +644,6 @@@@ eval {
d79 10
a88 1
@@@@ -701,7 +705,8 @@@@ print "Version: $nfsen_version: $VERSION\n\n";
d98 1
a98 1
@@@@ -715,7 +720,10 @@@@ if ( defined $NfConf::INSTPREFIX ) {
d109 1
a109 1
@@@@ -765,10 +773,14 @@@@ if ( -f "$NfConf::PIDDIR/$pid_name" ) {
d124 1
a124 1
@@@@ -809,14 +821,17 @@@@ $$$hints{'version'} 		= $nfsen_version;
@


1.4
log
@update to NfSen 1.3.6p1, to go with updated nfdump
@
text
@d1 1
a1 1
$OpenBSD: patch-install_pl,v 1.3 2011/03/24 23:04:00 sthen Exp $
d3 1
a3 1
+++ install.pl	Fri May  3 01:34:14 2013
d63 9
a71 1
@@@@ -701,7 +706,8 @@@@ print "Version: $nfsen_version: $VERSION\n\n";
d81 1
a81 1
@@@@ -715,7 +721,10 @@@@ if ( defined $NfConf::INSTPREFIX ) {
d92 1
a92 1
@@@@ -765,10 +774,14 @@@@ if ( -f "$NfConf::PIDDIR/$pid_name" ) {
d107 1
a107 1
@@@@ -809,14 +822,17 @@@@ $$$hints{'version'} 		= $nfsen_version;
@


1.3
log
@update NfSen to 1.3.5
@
text
@d1 4
a4 4
$OpenBSD$
--- install.pl.orig	Thu Sep  9 06:56:05 2010
+++ install.pl	Thu Mar 17 01:16:02 2011
@@@@ -162,14 +162,14 @@@@ sub VerifyUser {
d25 1
a25 1
@@@@ -585,11 +585,11 @@@@ sub CopyAllFiles {
d39 1
a39 1
@@@@ -608,7 +608,7 @@@@ sub Cleanup {
d48 1
a48 1
@@@@ -622,8 +622,13 @@@@ sub Cleanup {
d63 1
a63 1
@@@@ -693,7 +698,8 @@@@ print "Version: $nfsen_version: $VERSION\n\n";
d73 1
a73 1
@@@@ -707,7 +713,10 @@@@ if ( defined $NfConf::INSTPREFIX ) {
d84 1
a84 1
@@@@ -757,10 +766,14 @@@@ if ( -f "$NfConf::PIDDIR/$pid_name" ) {
d99 1
a99 1
@@@@ -801,14 +814,17 @@@@ $$$hints{'version'} 		= $nfsen_version;
@


1.2
log
@Don't try and syslog during build, it interferes with aja's bulk builds
inside a chroot. ok ajacoutot@@
@
text
@d1 4
a4 38
$OpenBSD: patch-install_pl,v 1.1.1.1 2010/05/02 20:52:32 sthen Exp $
--- install.pl.orig	Wed Jun 10 09:34:16 2009
+++ install.pl	Tue Oct 12 09:44:35 2010
@@@@ -60,6 +60,8 @@@@ my @@ProfileTag = ( 
 	"# \n",
 );
 
+my $instdir = $ENV{'INSTDIR'};
+
 my @@RequiredDirs = ( 'PREFIX', 'BINDIR', 'LIBEXECDIR', 'CONFDIR', 'DOCDIR', 
 					 'VARDIR', 'PROFILESTATDIR', 'PROFILEDATADIR', 
 					 'BACKEND_PLUGINDIR', 'FRONTEND_PLUGINDIR', 'HTMLDIR' );
@@@@ -87,11 +89,11 @@@@ sub GetPerl {
 	my $ans;
 	$whichperl = FindCommand("perl");
 	if ( defined $whichperl ) {
-		print "Perl to use: [$whichperl] ";
-		chomp($ans = <STDIN>);
-		if ( length $ans ) {
-			$whichperl = $ans;
-		}
+		print "Perl to use: [$whichperl]\n";
+#		chomp($ans = <STDIN>);
+#		if ( length $ans ) {
+#			$whichperl = $ans;
+#		}
 	} else {
 		print "No Perl found in your PATH. Please specify where to find perl [] ";
 		chomp($whichperl = <STDIN>);
@@@@ -116,6 +118,7 @@@@ sub GetPerl {
 sub CopyDir {
 	my $orig = shift;
 	my $dest = shift;
+	$dest = $instdir.$dest;
 
 	my $DIR;
 	mkdir $dest unless -d $dest;
@@@@ -160,14 +163,14 @@@@ sub VerifyUser {
a10 1
-			# user found
d14 1
a14 1
+#			# user found
d25 3
a27 102
@@@@ -192,7 +195,7 @@@@ sub VerifyConfig {
 	}
 
 	die "Missing PREFIX directory of nfdump tools!\n" unless defined $NfConf::PREFIX;
-	die "Configured PREFIX directory '$NfConf::PREFIX' not found!\n" unless -d  $NfConf::PREFIX;
+	die "Configured PREFIX directory '$instdir$NfConf::PREFIX' not found!\n" unless -d  $instdir.$NfConf::PREFIX;
 	foreach my $binary ( 'nfcapd', 'nfdump', 'nfprofile' ) {
 		die "nfdump tools installation error: '$binary' not found in '$NfConf::PREFIX'" unless -f "$NfConf::PREFIX/$binary";
 	}
@@@@ -283,8 +286,8 @@@@ sub PatchVars {
 sub PatchAllScripts {
 
 	my %GlobList = ( 
-		"bin/*"		=> 	"$NfConf::BINDIR",
-		"libexec/*"	=>	"$NfConf::LIBEXECDIR"
+		"bin/*"		=> 	"$instdir$NfConf::BINDIR",
+		"libexec/*"	=>	"$instdir$NfConf::LIBEXECDIR"
 	);
 
 	foreach my $glob_list ( keys %GlobList ) {
@@@@ -334,15 +337,15 @@@@ sub SetupHTML {
 	my ( $nfsen_uid, $www_gid ) = @@_;
 
 	print "Setup php and html files.\n";
-	mkdir "$NfConf::HTMLDIR" unless -d "$NfConf::HTMLDIR";
-	die "Could not create HTMl directory '$NfConf::HTMLDIR': $!\n"  unless -d $NfConf::HTMLDIR;
+	mkdir "$instdir$NfConf::HTMLDIR" unless -d "$instdir$NfConf::HTMLDIR";
+	die "Could not create HTMl directory '$instdir$NfConf::HTMLDIR': $!\n"  unless -d $instdir.$NfConf::HTMLDIR;
 
 	$CopyRecursive::CopyLink = 1;
 	$CopyRecursive::MODE 	 = 0644;
 	$CopyRecursive::UID 	 = 0;
 	$CopyRecursive::GID 	 = $www_gid;
-	CopyRecursive::dircopy("html", "$NfConf::HTMLDIR");
-	open CONF, ">$NfConf::HTMLDIR/conf.php" || die "Can't open conf.php for writing: $!\n";
+	CopyRecursive::dircopy("html", "$instdir$NfConf::HTMLDIR");
+	open CONF, ">$instdir$NfConf::HTMLDIR/conf.php" || die "Can't open conf.php for writing: $!\n";
 	print CONF "<?php\n";
 	print CONF "/* This file was automatically created by the NfSen install.pl script */\n\n";
 	print CONF "\$COMMSOCKET = \"$NfConf::COMMSOCKET\";\n";
@@@@ -376,6 +379,7 @@@@ sub SetupEnv {
 	print "\nUse UID/GID $nfsen_uid $www_gid\n";
 
 	foreach my $dir ( @@dirs ) {
+		$dir = $instdir.$dir;
 		if ( ! -d $dir ) {
 			print "Creating: ";
 			mkdir $dir || die "Can't mkdir '$dir': $!\n";
@@@@ -390,6 +394,7 @@@@ sub SetupEnv {
 	print "\nProfile live: spool directories:\n";
 	foreach my $ident ( keys %NfConf::sources ) {
 		my $dir = "$NfConf::PROFILEDATADIR/live/$ident";
+		$dir = $instdir.$dir;
 		if ( ! -d $dir ) {
 			print "Creating: ";
 			mkdir $dir || die "Can't mkdir '$dir': $!\n";
@@@@ -406,7 +411,7 @@@@ sub SetupEnv {
 	my $now = time();
 	my $tstart = $now - ( $now % 300 );
 	foreach my $db ( keys %NfConf::sources ) {
-		NfSenRRD::SetupRRD("$NfConf::PROFILESTATDIR/live", $db, $tstart - 300, 0);
+		NfSenRRD::SetupRRD("$instdir$NfConf::PROFILESTATDIR/live", $db, $tstart - 300, 0);
 	}
 	if ( $Log::ERROR ) {
 		die "Error setup RRD DBs: $Log::ERROR\n";
@@@@ -443,7 +448,7 @@@@ sub SetupEnv {
 		print "Use existing profile info for profile 'live'\n";
 	}
 
-	my $filelist = "$NfConf::PROFILESTATDIR/live/*rrd $NfConf::PROFILESTATDIR/live/profile.dat";
+	my $filelist = "$instdir$NfConf::PROFILESTATDIR/live/*rrd $instdir$NfConf::PROFILESTATDIR/live/profile.dat";
 	my @@AllFIles = glob($filelist);
 	chown $nfsen_uid, $www_gid, @@AllFIles;
 
@@@@ -480,8 +485,8 @@@@ sub UpgradeProfiles {
 
 	# fix permissions - all files/directories should ne $NfConf::USER and no longer WWW, as 
 	# no php script will no longer write anything
-	chown $nfsen_uid, $www_gid, "$NfConf::PROFILEDATADIR";
-	chown $nfsen_uid, $www_gid, "$NfConf::PROFILESTATDIR";
+	chown $nfsen_uid, $www_gid, "$instdir$NfConf::PROFILEDATADIR";
+	chown $nfsen_uid, $www_gid, "$instdir$NfConf::PROFILESTATDIR";
 
 	foreach my $profilename ( @@AllProfiles ) {
 		my %profileinfo = NfProfile::ReadProfile($profilename, '.');
@@@@ -586,19 +591,19 @@@@ sub CopyAllFiles {
 	$CopyRecursive::GID 	 = $www_gid;
 	$CopyRecursive::MODE 	 = 0755;
 	unlink "$NfConf::BINDIR/nfsen.rc";
-	CopyRecursive::dircopy("bin", "$NfConf::BINDIR");
-	CopyRecursive::dircopy("libexec", "$NfConf::LIBEXECDIR");
+	CopyRecursive::dircopy("bin", "$instdir$NfConf::BINDIR");
+	CopyRecursive::dircopy("libexec", "$instdir$NfConf::LIBEXECDIR");
 	$CopyRecursive::MODE 	 = 0644;
-	CopyRecursive::dircopy("etc", "$NfConf::CONFDIR");
-	CopyRecursive::dircopy("plugins/backend",  "$NfConf::BACKEND_PLUGINDIR");
-	CopyRecursive::dircopy("plugins/frontend", "$NfConf::FRONTEND_PLUGINDIR");
-	CopyRecursive::dircopy("doc", "$NfConf::DOCDIR");
+	CopyRecursive::dircopy("etc", "$instdir$NfConf::CONFDIR");
+	CopyRecursive::dircopy("plugins/backend",  "$instdir$NfConf::BACKEND_PLUGINDIR");
+	CopyRecursive::dircopy("plugins/frontend", "$instdir$NfConf::FRONTEND_PLUGINDIR");
+	CopyRecursive::dircopy("doc", "$instdir$NfConf::DOCDIR");
d30 1
a30 1
+	if ( $ConfigFile eq "$instdir$NfConf::CONFDIR/nfsen.conf" ) { # XXX??
d35 1
a35 1
+		CopyRecursive::fcopy("$ConfigFile", "$instdir$NfConf::CONFDIR/nfsen.conf");
d39 1
a39 1
@@@@ -617,7 +622,7 @@@@ sub Cleanup {
d48 1
a48 1
@@@@ -631,7 +636,12 @@@@ sub Cleanup {
d53 1
a53 1
 
d59 1
d62 2
a63 1
@@@@ -677,7 +687,9 @@@@ if ( -f "$NfConf::CONFDIR/nfsen.conf" && -f "etc/nfsen
d65 9
a73 18
 Log::LogInit();
 
-my $hints = NfSen::LoadHints();
+my $hints;
+if ($configure) {
+$hints = NfSen::LoadHints();
 if ( $$$hints{'version'} == -1 ) {
 	# initial NfSen install or upgrade from old version without hints
 	$$$hints{'version'} 		= $nfsen_version;
@@@@ -686,6 +698,7 @@@@ if ( $$$hints{'version'} == -1 ) {
 	print "Upgrade from version '$$$hints{'version'}' installed at " . scalar localtime $$$hints{'installed'};
 	print "\n";
 }
+}
 
 
 my $rrd_version = $RRDs::VERSION;
@@@@ -708,56 +721,63 @@@@ $NfConf::PERL = GetPerl();
a79 2
-# test for two files of old layout
-my $need_rrdlayout_upgrade = -f "$NfConf::PROFILESTATDIR/live/flows.rrd" && -f "$NfConf::PROFILESTATDIR/live/packets_other.rrd";
d81 2
a82 17
+	# test for two files of old layout
+	my $need_rrdlayout_upgrade = -f "$NfConf::PROFILESTATDIR/live/flows.rrd" && -f "$NfConf::PROFILESTATDIR/live/packets_other.rrd";
 
-my $rrdtool = undef;
-if ( $need_rrdlayout_upgrade ) {
-	$rrdtool = FindCommand("rrdtool");
-	if ( !defined $rrdtool ) {
-		print "\nERROR: command 'rrdtool' not found in your PATH: 'rrdtool' is needed to upgrade the DBs of your NfSen version\n";
-		exit 1;
+	if ( $need_rrdlayout_upgrade ) {
+		$rrdtool = FindCommand("rrdtool");
+		if ( !defined $rrdtool ) {
+			print "\nERROR: command 'rrdtool' not found in your PATH: 'rrdtool' is needed to upgrade the DBs of your NfSen version\n";
+			exit 1;
+		}
 	}
-}
d84 1
a84 56
-my $pid_name = "nfsend.pid";
-if ( -f "$NfConf::VARDIR/run/nfsen-run.pid" ) {
-	# from NfSen <= 1.2
-	$pid_name = "nfsen-run.pid";
-}
+	my $pid_name = "nfsend.pid";
+	if ( -f "$NfConf::VARDIR/run/nfsen-run.pid" ) {
+		# from NfSen <= 1.2
+		$pid_name = "nfsen-run.pid";
+	}
 
-if ( -f "$NfConf::VARDIR/run/$pid_name" ) {
-	open PID, "$NfConf::VARDIR/run/$pid_name" || die "Can't open pid file: $!\n";
-	my $pid = <PID>;
-	chomp($pid);
-	close PID;
-	die "Can't extract PID out of '$NfConf::VARDIR/run/$pid_name'. Stop upgrade" if !defined $pid;
-	if ( kill(0, $pid) == 1 ) {
-		print "Stop nfsend while upgrading .";
-		kill 15, $pid;
-		my $cnt = 0;
-		while ( -f "$NfConf::VARDIR/run/$pid_name" && $cnt < 300 ) {
-			print ".";
-			$cnt++;
-			sleep(1);
-		}
-		if ( -f "$NfConf::VARDIR/run/$pid_name" ) {
-			print "\nnfsend doesn't want to die! It's not save to upgrade NfSen!\n";
-			exit;
+	if ( -f "$NfConf::VARDIR/run/$pid_name" ) {
+		open PID, "$NfConf::VARDIR/run/$pid_name" || die "Can't open pid file: $!\n";
+		my $pid = <PID>;
+		chomp($pid);
+		close PID;
+		die "Can't extract PID out of '$NfConf::VARDIR/run/$pid_name'. Stop upgrade" if !defined $pid;
+		if ( kill(0, $pid) == 1 ) {
+			print "Stop nfsend while upgrading .";
+			kill 15, $pid;
+			my $cnt = 0;
+			while ( -f "$NfConf::VARDIR/run/$pid_name" && $cnt < 300 ) {
+				print ".";
+				$cnt++;
+				sleep(1);
+			}
+			if ( -f "$NfConf::VARDIR/run/$pid_name" ) {
+				print "\nnfsend doesn't want to die! It's not save to upgrade NfSen!\n";
+				exit;
+			} else {
+				print "done.\n";
+				$nfsen_run = 1;
+			}
 		} else {
-			print "done.\n";
-			$nfsen_run = 1;
+			print "nfsend pid file exists, but no process is running.\n";
+			unlink "$NfConf::VARDIR/run/$pid_name";
a85 3
-	} else {
-		print "nfsend pid file exists, but no process is running.\n";
-		unlink "$NfConf::VARDIR/run/$pid_name";
d88 1
a89 3
-SetupHTML($nfsen_uid, $www_gid);
-CopyAllFiles($ConfigFile, $nfsen_uid, $www_gid);
-PatchAllScripts();
d91 3
a93 3
+	SetupHTML($nfsen_uid, $www_gid);
+	CopyAllFiles($ConfigFile, $nfsen_uid, $www_gid);
+	PatchAllScripts();
d95 1
a95 2
+
+if ($configure) { # Not indented; cvs keywords in following block will break ports tree patches
d99 1
a99 1
@@@@ -787,9 +807,10 @@@@ $$$hints{'version'} 		= $nfsen_version;
d102 1
a102 1
 chown $nfsen_uid, $www_gid, "$NfConf::PROFILESTATDIR/hints" || die "Can't chown hints db: $!\n";
d106 5
a110 2
-if ( $nfsen_run ) {
+if ( $copy && $nfsen_run ) {
d113 4
a116 1
 }
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ install.pl	Fri Apr 30 23:05:08 2010
d195 20
a214 1
@@@@ -708,56 +718,63 @@@@ $NfConf::PERL = GetPerl();
d318 1
a318 1
@@@@ -787,9 +804,10 @@@@ $$$hints{'version'} 		= $nfsen_version;
@


1.1.1.1
log
@Import ports/net/nfsen, this companion to net/nfdump is a nice web-based
interface for working with netflow captures, including those from pflow(4).
See teamcymru episode 19 on youtube or the RIPE50 presentation slides to
get an idea of what it can do. Port requested by henning@@.

NfSen is a graphical web based front end for the nfdump netflow
tools, allowing you to:

* Display your netflow data:
  Flows, Packets and Bytes using RRD (Round Robin Database).
* Easily navigate through the netflow data.
* Process the netflow data within the specified time span.
* Create history as well as continuous profiles.
* Set alerts, based on various conditions.
* Write your own plugins to process netflow data on a regular interval.

Different tasks need different interfaces to your netflow data.
NfSen allows you to keep all the convenient advantages of the command
line using nfdump directly and gives you also a graphical overview
over your netflow data.
@
text
@@
