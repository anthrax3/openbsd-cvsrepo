head	1.4;
access;
symbols
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2015.03.24.13.36.20;	author dcoppa;	state dead;
branches;
next	1.3;
commitid	4c0Qy08NWflBMcat;

1.3
date	2012.07.15.10.20.07;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.02.14.06.31;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2011.12.01.17.10.40;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
Update to rtorrent-0.9.4, now that the (in)famous ipi storm problem
has been finally fixed.

Initial diff by Michael <gmail/lesniewskister>
@
text
@$OpenBSD: patch-src_rpc_scgi_cc,v 1.3 2012/07/15 10:20:07 dcoppa Exp $

SCGI m_task queue could overflow since the check was not working
(upstream git commit f5d4924b22f7ebbfef111668405987a1b893a412)

--- src/rpc/scgi.cc.orig	Tue Apr  5 12:26:10 2011
+++ src/rpc/scgi.cc	Thu Oct 20 12:32:42 2011
@@@@ -139,7 +139,7 @@@@ SCgi::event_read() {
   while ((fd = get_fd().accept(&sa)).is_valid()) {
     SCgiTask* task = std::find_if(m_task, m_task + max_tasks, std::mem_fun_ref(&SCgiTask::is_available));
 
-    if (task == task + max_tasks) {
+    if (task == m_task + max_tasks) {
       // Ergh... just closing for now.
       fd.close();
       continue;
@


1.3
log
@Back out the update to 0.13.2/0.9.2; too much problems to make
release.

OK sthen@@, naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to rtorrent-0.9.2
@
text
@d1 1
a1 1
$OpenBSD: patch-src_rpc_scgi_cc,v 1.1 2011/12/01 17:10:40 dcoppa Exp $
@


1.1
log
@Update to libtorrent-0.12.9 / rtorrent-0.8.9

I also take maintainership, as per naddy@@'s request
@
text
@d1 1
a1 1
$OpenBSD$
@

