head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.30
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.28
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.26
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.22
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.24
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.05.24.01.46.12;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@explicit ref to base class, fixes gcc4
@
text
@$OpenBSD$
--- libapp/tlist.h.orig	Mon May 24 03:43:14 2010
+++ libapp/tlist.h	Mon May 24 03:45:05 2010
@@@@ -93,8 +93,8 @@@@ class TSingleList (public)
         }
         T& operator*( void )
         {
-            assert( m_pList && m_pNode );
-            return m_pNode->GetData();
+            assert( this->m_pList && this->m_pNode );
+            return this->m_pNode->GetData();
         }
     protected:
         Iterator( TSingleList<T>* pList, TSingleNode* pNode ) :
@@@@ -113,8 +113,8 @@@@ class TSingleList (public)
         }
         const T& operator*( void ) const
         {
-            assert( m_pList && m_pNode );
-            return m_pNode->GetData();
+            assert( this->m_pList && this->m_pNode );
+            return this->m_pNode->GetData();
         }
     protected:
         ConstIterator( const TSingleList<T>* pList, TSingleNode* pNode ) :
@@@@ -281,8 +281,8 @@@@ class TDoubleList (public)
         }
         T& operator*( void )
         {
-            assert( m_pList && m_pNode );
-            return m_pNode->GetData();
+            assert( this->m_pList && this->m_pNode );
+            return this->m_pNode->GetData();
         }
     protected:
         Iterator( const TDoubleList<T>* pList, TDoubleNode* pNode ) :
@@@@ -301,8 +301,8 @@@@ class TDoubleList (public)
         }
         const T& operator*( void ) const
         {
-            assert( m_pList && m_pNode );
-            return m_pNode->GetData();
+            assert( this->m_pList && this->m_pNode );
+            return this->m_pNode->GetData();
         }
     protected:
         ConstIterator( const TDoubleList<T>* pList, TDoubleNode* pNode ) :
@
