head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.52
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.50
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.46
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.48
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.44
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.42
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.40
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.38
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.36
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.34
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.32
	OPENBSD_5_0:1.4.0.30
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.28
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.26
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.24
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.22
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.20
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.18
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.16
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.14
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.12
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.10
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.8
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.6
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	danh_2001-Feb-22:1.1.1.1
	danh:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2004.07.12.11.56.52;	author danh;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.15.21.55.11;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.12.15.38.58;	author danh;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.22.15.08.54;	author danh;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.02.22.15.08.54;	author danh;	state Exp;
branches
	1.1.1.1.6.1;
next	;

1.1.1.1.6.1
date	2003.01.02.16.50.51;	author danh;	state Exp;
branches;
next	;


desc
@@


1.4
log
@better formatting
@
text
@SING stands for 'Send ICMP Nasty Garbage.' It is a tool that sends ICMP
packets fully customized from command line.  It's main purpose is to
replace and complement the ping command, adding certain enhancements as
fragmentation; send and receive spoofed packets; send many ICMP
information types (echo as the old ping, address mask, timestamp, and
router discovery) and errors (redirect, unreach, and time exceeded); and
send monster packets.  It also supports loose and strict source routing
and record routing.
@


1.3
log
@remove WWW lines
@
text
@d1 8
a8 9
SING stands for 'Send ICMP Nasty Garbage.' It is a tool that
sends ICMP packets fully customized from command line.  It's
main  purpose is to replace and complement the ping command,
adding  certain  enhancements  as  fragmentation;  send  and
receive  spoofed  packets;  send many ICMP information types
(echo as the old ping, address mask, timestamp,  and  router
discovery)   and   errors   (redirect,   unreach,  and  time
exceeded); and send monster packets.  It also supports loose
and strict source routing and record routing.
@


1.2
log
@* add HOMEPAGE
* cleanup description
* drop NEED_VERSION
@
text
@a9 2

WWW: ${HOMEPAGE}
@


1.1
log
@Initial revision
@
text
@d1 9
a9 4
Sing  is  a  little  tool that sends ICMP packets fully cus-
tomized	 from  command	line.  The  main   purpose   is	  to
replace/complement  the	 niceful  ping	command with certain
enhancements as:
d11 1
a11 21
 o Send fragmented packets.

 o Send monster packets > 65534.

 o Send/read spoofed packets.

 o Send	 many ICMP Information types in addition to the ECHO
   REQUEST type sent by default	 as  Address  Mask  Request,
   Timestamp,  Information  Request, Router Solicitation and
   Router Advertisement.

 o Send many ICMP error types: Redirect, Source Quench, Time
   Exceeded, Destination Unreach and Parameter Problem.

 o Send to host with Loose or Strict Source Routing.

 o Use	little fingerprinting techniques to discover Window$
   or Solaris boxes.

 o Send ICMP packets emulating certain OS:  Cisco,  Solaris,
   Linux, Shiva, Unix and Window$ at the moment.
@


1.1.1.1
log
@import of sing 1.0

Sing is a little tool that sends ICMP packets fully customized from 
command line.  The main purpose is to replace/complement the niceful
ping command with certain enhancements as:

 o Send fragmented packets.
 o Send monster packets > 65534.
 o Send/read spoofed packets.
 o Send	many ICMP Information types in addition to the ECHO REQUEST
   type sent by default as Address Mask Request, Timestamp, Information
   Request, Router Solicitation and Router Advertisement.
 o Send many ICMP error types: Redirect, Source Quench, Time Exceeded, 
   Destination Unreach and Parameter Problem.
 o Send to host with Loose or Strict Source Routing.
 o Use little fingerprinting techniques to discover Window$ or Solaris
   boxes.
 o Send ICMP packets emulating certain OS: Cisco, Solaris, Linux, Shiva,
   Unix and Window$ at the moment.
@
text
@@


1.1.1.1.6.1
log
@(merge from current)
* fix byte order of packet length in IP header
* use autoconf and clean up a bit
* bump package patch level

ok brad@@
@
text
@d1 4
a4 9
SING stands for 'Send ICMP Nasty Garbage.' It is a tool that
sends ICMP packets fully customized from command line.  It's
main  purpose is to replace and complement the ping command,
adding  certain  enhancements  as  fragmentation;  send  and
receive  spoofed  packets;  send many ICMP information types
(echo as the old ping, address mask, timestamp,  and  router
discovery)   and   errors   (redirect,   unreach,  and  time
exceeded); and send monster packets.  It also supports loose
and strict source routing and record routing.
d6 21
a26 1
WWW: ${HOMEPAGE}
@

