head	1.3;
access;
symbols
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2009.03.17.15.35.37;	author sthen;	state dead;
branches;
next	1.2;

1.2
date	2009.01.23.11.01.06;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.12.00.31.45;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Upgrade to 1.1.16, fixes several major causes of crashes.
"Upgrading is highly recommended."

From Brad (maintainer).
@
text
@$OpenBSD: patch-apps_silcd_packet_receive_c,v 1.2 2009/01/23 11:01:06 sthen Exp $
--- apps/silcd/packet_receive.c.orig	Thu Jan  8 04:20:01 2009
+++ apps/silcd/packet_receive.c	Sat Jan 17 07:58:27 2009
@@@@ -186,6 +186,12 @@@@ static void silc_server_notify_process(SilcServer serv
 	}
 
 	client->data.status |= SILC_IDLIST_STATUS_REGISTERED;
+
+	if (idata->conn_type == SILC_CONN_SERVER)
+	  server->stat.cell_clients++;
+	SILC_LOG_DEBUG(("stat.clients %d->%d", server->stat.clients,
+			server->stat.clients + 1));
+	server->stat.clients++;
       }
     }
 
@@@@ -326,6 +332,8 @@@@ static void silc_server_notify_process(SilcServer serv
       tmp_len = 128;
 
     /* Update statistics */
+    SILC_LOG_DEBUG(("stat.clients %d->%d", server->stat.clients,
+		    server->stat.clients - 1));
     SILC_VERIFY(server->stat.clients > 0);
     server->stat.clients--;
     if (server->stat.cell_clients)
@@@@ -1246,6 +1254,8 @@@@ static void silc_server_notify_process(SilcServer serv
 	    }
 
 	    /* Update statistics */
+	    SILC_LOG_DEBUG(("stat.clients %d->%d", server->stat.clients,
+			    server->stat.clients - 1));
 	    SILC_VERIFY(server->stat.clients > 0);
 	    server->stat.clients--;
 	    if (server->stat.cell_clients)
@@@@ -1492,6 +1502,8 @@@@ static void silc_server_notify_process(SilcServer serv
       }
 
       /* Update statistics */
+      SILC_LOG_DEBUG(("stat.clients %d->%d", server->stat.clients,
+		      server->stat.clients - 1));
       SILC_VERIFY(server->stat.clients > 0);
       server->stat.clients--;
       if (server->stat.cell_clients)
@@@@ -2686,6 +2698,8 @@@@ static void silc_server_new_id_real(SilcServer server,
 
       if (idata->conn_type == SILC_CONN_SERVER)
 	server->stat.cell_clients++;
+      SILC_LOG_DEBUG(("stat.clients %d->%d", server->stat.clients,
+		      server->stat.clients + 1));
       server->stat.clients++;
 
       /* Check if anyone is watching this nickname */
@@@@ -3742,6 +3756,8 @@@@ void silc_server_resume_client(SilcServer server,
        we decremented the count already during detach, thus we'd be undoing
        that operation. */
     detached_client->local_detached = FALSE;
+    SILC_LOG_DEBUG(("stat.clients %d->%d", server->stat.clients,
+		    server->stat.clients - 1));
     SILC_VERIFY(server->stat.clients > 0);
     server->stat.clients--;
     if (server->stat.cell_clients)
@


1.2
log
@patch from upstream git via Brad; increment stat.clients statistics
whenever adding new client. Otherwise it is possible to go under zero
when removing clients from the server.
@
text
@d1 1
a1 1
$OpenBSD: patch-apps_silcd_packet_receive_c,v 1.1 2009/01/12 00:31:45 sthen Exp $
@


1.1
log
@add patches from upstream git;
- Added debug logs for updating stat.clients value
- Take stream reference correctly in packet error callback

from Brad (maintainer).
@
text
@d1 17
a17 4
$OpenBSD$
--- apps/silcd/packet_receive.c.orig	Fri Jan  9 22:23:46 2009
+++ apps/silcd/packet_receive.c	Fri Jan  9 22:27:18 2009
@@@@ -326,6 +326,8 @@@@ static void silc_server_notify_process(SilcServer serv
d26 1
a26 1
@@@@ -1246,6 +1248,8 @@@@ static void silc_server_notify_process(SilcServer serv
d35 1
a35 1
@@@@ -1492,6 +1496,8 @@@@ static void silc_server_notify_process(SilcServer serv
d44 1
a44 1
@@@@ -2686,6 +2692,8 @@@@ static void silc_server_new_id_real(SilcServer server,
d53 1
a53 1
@@@@ -3742,6 +3750,8 @@@@ void silc_server_resume_client(SilcServer server,
@

