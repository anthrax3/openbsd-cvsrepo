head	1.2;
access;
symbols
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.12
	OPENBSD_5_0:1.1.0.10
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.8
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.6
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.4
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.03.08.12.13.01;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2009.03.29.09.13.01;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Garbage collect the /dev/arandom patches.

from Brad
ok landry@@ sthen@@
@
text
@$OpenBSD: patch-lib_silccrypt_silcrng_c,v 1.1 2009/03/29 09:13:01 sthen Exp $
--- lib/silccrypt/silcrng.c.orig	Mon Mar 23 10:10:22 2009
+++ lib/silccrypt/silcrng.c	Mon Mar 23 10:11:11 2009
@@@@ -218,7 +218,7 @@@@ void silc_rng_init(SilcRng rng)
   silc_rng_get_hard_noise(rng);
   silc_rng_get_soft_noise(rng);
   silc_free(rng->devrandom);
-  rng->devrandom = strdup("/dev/urandom");
+  rng->devrandom = strdup("/dev/arandom");
 }
 
 /* This function gets 'soft' noise from environment. */
@@@@ -552,7 +552,7 @@@@ SilcUInt8 silc_rng_get_byte(SilcRng rng)
   return byte;
 }
 
-/* Return random byte as fast as possible. Reads from /dev/urandom if
+/* Return random byte as fast as possible. Reads from /dev/arandom if
    available. If not then return from normal RNG (not so fast). */
 
 SilcUInt8 silc_rng_get_byte_fast(SilcRng rng)
@@@@ -561,7 +561,7 @@@@ SilcUInt8 silc_rng_get_byte_fast(SilcRng rng)
   unsigned char buf[1];
 
   if (rng->fd_devurandom == -1) {
-    rng->fd_devurandom = open("/dev/urandom", O_RDONLY);
+    rng->fd_devurandom = open("/dev/arandom", O_RDONLY);
     if (rng->fd_devurandom < 0)
       return silc_rng_get_byte(rng);
     fcntl(rng->fd_devurandom, F_SETFL, O_NONBLOCK);
@@@@ -678,7 +678,7 @@@@ SilcUInt8 silc_rng_global_get_byte(void)
   return global_rng ? silc_rng_get_byte(global_rng) : 0;
 }
 
-/* Return random byte as fast as possible. Reads from /dev/urandom if
+/* Return random byte as fast as possible. Reads from /dev/arandom if
    available. If not then return from normal RNG (not so fast). */
 
 SilcUInt8 silc_rng_global_get_byte_fast(void)
@


1.1
log
@switch from /dev/urandom to /dev/arandom. ok jakemsr, Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
@

