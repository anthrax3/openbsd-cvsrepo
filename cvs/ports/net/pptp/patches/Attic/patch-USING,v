head	1.3;
access;
symbols
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2007.10.23.22.13.38;	author naddy;	state dead;
branches;
next	1.2;

1.2
date	2006.11.12.10.10.09;	author grunk;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.03.12.53.50;	author grunk;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* Update maintainer email address.
* Add detailed option descriptions to pptp(8) man page.
* Move OpenBSD configuration examples from text file
  ${PREFIX}/share/doc/pptp/USING into pptp(8) man page,
  and remove patch to ${WRKSRC}/USING. Extend and
  revise examples while at it.
* Add patch to ${WRKSRC}/util.c to make pptp log normal
  informational messages with level LOG_INFO instead of LOG_NOTICE.
* Update pkg/DESCR with a new description based on upstream web site.
* Fix URL to list of pptp security flaws in pkg/MESSAGE.
* [Re-]Create patches with `make update-patches'.
* Add patch to ${WRKSRC}/pptp_gre.c to automatically enable
  the net.inet.gre.allow sysctl before trying to bind
  the GRE socket.
* Remove '@@sysctl net.inet.gre.allow=1' from PLIST.

From: maintainer Stefan Sperling
@
text
@--- USING.orig	Sat Nov  4 15:37:29 2006
+++ USING	Thu Nov  9 14:17:25 2006
@@@@ -1,5 +1,10 @@@@
 Usage Notes
 
+[ Note by your friendly OpenBSD pptp port maintainer:
+Most examples in this file are quite Linux-centric. See the section
+EXAMPLE CONFIGURATION FOR OPENBSD below for an example that focuses
+on OpenBSD exclusively. ]
+
 pptp is started as a psuedo-tty child process using pppd's pty option:
 
 	pppd call provider [pppd-options] \
@@@@ -94,5 +99,96 @@@@
 
 test-multiple-tunnels-1.sh  creates multiple source interfaces
 test-multiple-tunnels-2.sh  creates multiple tunnels
+
+
+EXAMPLE CONFIGURATION FOR OPENBSD:
+
+On OpenBSD, pptp uses the userspace ppp(8) implementation
+by default, instead of using pppd(8). This is a compile-time option
+hardcoded in the port's Makefile, and it is not recommended that you
+change this unless you really have a reason to do so. If your VPN
+requires mppe/mppc in conjunction with pptp, ppp(8) is your
+only option anyway since pppd(8) does not support mppe/mppc.
+
+This example assumes that you want to configure a gateway running
+OpenBSD to provide PPTP VPN access to a remote network for all hosts
+on your internal LAN. While this may not match your situation at
+all, you will hopefully gather enough hints you can use for your
+own setup.
+
+Let us assume that the VPN server is called vpn-gateway.net,
+and that the default route of our OpenBSD box is 42.42.42.42.
+The remote network is 10.42.0/16; all traffic to this network
+should go through the VPN tunnel.
+
+Having ppp start pptp seems to be working much better than the
+other way round. So first, put something like this into /etc/ppp/ppp.conf
+to connect to the vpn gateway:
+
+  default:
+	set log Phase Chat LCP IPCP CCP tun command
+  vpn:
+	set device "!PREFIX/sbin/pptp --nolaunchpppd vpn-gateway.net"
+	set authname User
+	set authkey MySecret
+	set mppe 128 stateless
+
+Next, you need to configure routing in /etc/ppp/ppp.linkup.
+Assuming vpn-gateway.net resides inside 10.42.0/16, we have to add a host
+route pointing to vpn-gateway.net in order to avoid a chicken-and-egg
+problem once packets to 10.42.0/16 are routed through the tunnel.
+(Of course, this also applies if you need to configure the tunnel as
+your default route, but that is not covered in this example.)
+
+We also load packet filter anchors for the vpn interface here.
+More on that later.
+
+/etc/ppp/ppp.linkup:
+
+  vpn: 
+    ! sh -c "/sbin/route add -host vpn-gateway.net 42.42.42.42"
+    ! sh -c "/sbin/route add -net 10.42.0.0 -netmask 255.255.0.0 HISADDR"
+    ! sh -c "/sbin/pfctl -a vpn -f /etc/pf.conf.vpn"
+
+Commands in ppp.linkdown simply undo changes made in ppp.linkup.
+
+/etc/ppp/ppp.linkdown:
+
+  vpn:
+    ! sh -c "/sbin/pfctl -a vpn -F all"
+    ! sh -c "/sbin/route delete -net 10.42.0.0 -netmask 255.255.0.0 HISADDR"
+    ! sh -c "/sbin/route delete -host vpn-gateway.net 42.42.42.42"
+
+To make pf aware of the vpn anchors, put these lines into the
+nat and filter sections of /etc/pf.conf, respectively:
+
+  nat-anchor	vpn
+  anchor	vpn
+
+Now define vpn anchor rules in /etc/pf.conf.vpn:
+
+  int_if=xl0
+  vpn_if=tun0
+
+  nat on $vpn_if from $int_if:network to any -> ($vpn_if)
+
+  pass out on $vpn_if keep state
+
+  # Allow ping from remote, and explicitly make sure our replies are
+  # routed back through the tunnel.
+  pass in on $vpn_if reply-to ($vpn_if vpn-gateway.net) \
+	inet proto icmp icmp-type echoreq keep state
+
+  # Same for ssh.
+  pass in on $vpn_if reply-to ($vpn_if vpn-gateway.net) proto tcp \
+	from any to ($vpn_if) port ssh flags S/SA keep state
+
+
+Connect by running:
+
+	ppp -ddial vpn
+
+To terminate the connection, kill the ppp process. It creates a PID
+file in /var/run/tunX.pid, where X is the number of the tun device used.
 
 $Id: patch-USING,v 1.2 2006/11/12 10:10:09 grunk Exp $	
@


1.2
log
@Update to version 1.7.1, from new maintainer Stefan Sperling.
He also fixed wrong facts in the port's man page, updated MESSAGE accordingly,
removed an obsolete script, and improved the example configuration.

Thanks go to former maintainer Benoit LECOCQ, for having cared about the
port the time before.

ok sturm@@ and me
@
text
@d110 1
a110 1
 $Id: USING,v 1.6 2003/02/15 04:32:50 quozl Exp $	
@


1.1
log
@detailed explanation how to use pptp on OpenBSD, with example
another fine input from Stefan Sperling <stsp at stsp dot in-berlin dot de>

maintainer timeout, ok sturm@@
@
text
@d1 15
a15 4
$OpenBSD$
--- USING.orig	Sat Sep 30 22:51:56 2006
+++ USING	Sat Sep 30 22:51:58 2006
@@@@ -95,4 +95,90 @@@@ See also the following test scripts;
d18 1
a18 1
 
d23 5
a27 1
+instead of pppd(8). This is a compile-time option.
d29 1
a29 4
+Having ppp start pptp seems to be working much better
+than the other way round.
+
+This example assumes that we want to configure a gateway running
d31 3
a33 1
+on our internal LAN.
d40 3
a42 2
+First, put something like this into /etc/ppp/ppp.conf so we
+can connect to the vpn gateway:
a49 2
+	set mtu max 1490
+	set mru max 1490
d52 1
a52 1
+Next, we need to configure routing in /etc/ppp/ppp.linkup.
d56 3
d64 1
a64 1
+  MYADDR:
d73 1
a73 1
+  MYADDR:
d81 2
a82 2
+  nat-anchor	"vpn"
+  anchor	"vpn"
d109 1
a109 1
+
@

