head	1.10;
access;
symbols
	OPENBSD_5_6:1.9.0.18
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.16
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.14
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.12
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.10
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.8
	OPENBSD_5_0:1.9.0.6
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.4
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.2
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.2
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.6.0.6
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.4
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.3.0.10
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.1.1.1.0.8
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	reinhard_2000_Dec_21:1.1.1.1
	reinhard:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2014.10.08.16.44.58;	author stsp;	state dead;
branches;
next	1.9;
commitid	7jWfdOcvyxIGBB1b;

1.9
date	2010.04.24.12.09.43;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2009.08.14.00.02.54;	author stsp;	state Exp;
branches;
next	1.7;

1.7
date	2009.03.08.21.57.24;	author stsp;	state Exp;
branches;
next	1.6;

1.6
date	2007.10.23.22.13.38;	author naddy;	state Exp;
branches;
next	1.5;

1.5
date	2006.11.12.10.10.09;	author grunk;	state Exp;
branches;
next	1.4;

1.4
date	2006.09.30.20.40.10;	author grunk;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.30.21.54.03;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.24.13.12.38;	author reinhard;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.21.14.02.52;	author reinhard;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.21.14.02.52;	author reinhard;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Send net/pptp to the attic. It requires an MPPE-capable ppp client
which we don't have in base anymore. No objections from ports@@
@
text
@.\" $OpenBSD: pptp_8,v 1.9 2010/04/24 12:09:43 schwarze Exp $
.\" Manual page for pptp-1.1.0
.\" Information gleaned from USING file in the distribution
.\" SH section heading
.\" SS subsection heading
.\" LP paragraph
.\" IP indented paragraph
.\" TP hanging label
.Dd April 9, 2000
.Dt pptp 8
.Os
.Sh NAME
.Nm pptp
.Nd Point-to-Point Tunneling Protocol daemon
.Sh SYNOPSIS
.Nm
.Ar hostname
.Op Fl -version
.Op Fl -phone Ar number
.Op Fl -nolaunchpppd
.Op Fl -quirks Ar quirk
.Op Fl -debug
.Op Fl -sync
.Op Fl -timeout Ar secs
.Op Fl -nobuffer
.Op Fl -idle-wait Ar time
.Op Fl -max-echo-wait Ar time
.Op Fl -logstring Ar name
.Op Fl -localbind Ar addr
.Op Fl -loglevel Ar level
.Op Ar ppp options
.Sh DESCRIPTION
.Nm
manages
a virtual private network (VPN) connection using Microsoft
PPTP protocols using IP GRE tunneling protocols.
.Nm
uses
.Xr ppp 8
on a pseudo-tty
to negotiate the connection with MS-CHAP authentication.
.Pp
Because
.Nm
uses GRE, the net.inet.gre.allow sysctl needs to be enabled.
.Nm
will automatically try to enable this sysctl on startup.
.Pp
The
.Ar hostname
parameter specifies which host should be contacted as the PPTP server.
.Pp
.Op Ar ppp options
are passed on to
.Xr ppp 8
and typically include a remote username or a file containing options.
.Pp
.Nm
must be run as root.
.Pp
.Nm
accepts the following options:
.Bl -tag -width Ds
.It Fl -version
Display version number and exit.
.It Fl -phone Ar number
Pass
.Ar number
to remote host as phone number.
.It Fl -nolaunchpppd
Do not launch a ppp daemon, for use as a ppp daemon pty.
.It Fl -quirks Ar quirk
Some ADSL providers and some ADSL hardware are buggy or not conforming
to the RFC, and require special handling.
To this end,
.Nm
supports a 'quirks' mechanism.
Currently, only '--quirks BEZEQ_ISRAEL' is defined, for connecting to
Bezeq (the Israeli phone company) ADSL service.
Only some of the equipment used by Bezeq needs this option, but even
the equipment that does not need it works fine with it.
.It Fl -debug
Run in foreground (for debugging with gdb).
.It Fl -sync
Enable Synchronous HDLC.
.Xr ppp 8
must use it, too.
.It Fl -timeout Ar secs
Time to wait for reordered packets (0.01 to 10 secs).
.It Fl -nobuffer
Disable packet buffering and reordering completely
.It Fl -idle-wait Ar secs
Time to wait before sending echo request.
.It Fl -max-echo-wait Ar secs
Time to wait before giving up on lack of reply.
This option
seems to be unimplemented, because the flag can be set but is
never evaluated (look at pptp_ctrl.c) \(em dead, unused code?
.It Fl -logstring Ar name
Use
.Ar name
instead of
.Dq anon
in syslog messages.
.It Fl -localbind Ar addr
Bind to specified IP address instead of wildcard.
.It Fl -loglevel Ar level
Sets the debugging level (0=low, 1=default, 2=high).
.El
.Sh EXAMPLES
.Ss PPTP on a stand-alone VPN client
This example assumes that you want to use
.Nm
to connect
to a VPN and use the VPN connection as your default route.
Let us assume that the PPTP server is called pptp.example.net.
.Pp
First, edit
.Pa /etc/ppp/ppp.conf
and add an entry for the VPN connection.
See
.Xr ppp 8
for details on the format of this file.
.Bd -literal
  vpn:
	set device "!/usr/local/sbin/pptp --nolaunchpppd pptp.example.net"
	set authname User
	set authkey MySecret
	set mppe 128 stateless
.Ed
.Pp
Next, you need to configure routing in
.Pa /etc/ppp/ppp.linkup :
.Bd -literal
  vpn: 
    add! default HISADDR
.Ed
.Pp
If pptp.example.net does not reside on the local network,
we have to add a host route pointing to pptp.example.net in order to
avoid a chicken-and-egg problem once the default route is set to
the VPN tunnel.
Assuming the standard default route is 192.168.1.1:
.Pp
.Pa /etc/ppp/ppp.linkup :
.Bd -literal
  vpn: 
    add pptp.example.net 192.168.1.1
    add! default HISADDR
.Ed
.Pp
If your default route is not fixed, for example if you connect
to the VPN from many different networks while on the road,
use a script to figure out the current default route and add the
host route to the VPN gateway.
For example:
.Pp
.Pa /etc/ppp/vpn-default-route.sh :
.Bd -literal
	#!/bin/sh
        gw=`netstat -rn -f inet | grep ^default | awk '{print $2};'`
        /sbin/route add -host pptp.example.net ${gw}
.Ed
.Pp
Call the script from
.Pa /etc/ppp/ppp.linkup :
.Bd -literal
  vpn:
    ! sh /etc/ppp/vpn-default-route.sh
    add default HISADDR
.Ed
.Pp
Make sure the changes to the routing table are reversed in
.Pa /etc/ppp/ppp.linkdown :
.Bd -literal
  vpn:
    delete pptp.example.net
.Ed
.Pp
Restoring the previous default route in
.Pa /etc/ppp/ppp.linkdown
is left as an exercise for the reader.
On a laptop it is usually
enough to issue a DHCP request to restore the routing table
after the VPN connection is terminated.
.Pp
Connect by running:
.Dl ppp -ddial vpn
.Pp
To terminate the connection, kill the ppp process.
It creates a PID file in
.Pa /var/run/tunX.pid ,
where X is the number of the tun device used.
.Ss PPTP on a router
This example assumes that you want to configure a router running
OpenBSD to provide PPTP VPN access to a remote network for all hosts
on your internal network.
.Pp
Let us assume that the VPN server is called pptp.example.net,
and that the default route of our OpenBSD box is 192.168.1.1.
The remote network shall be 10.42.0.0/16; we want all traffic to
this network to go through the VPN tunnel.
.Pp
First, edit
.Pa /etc/ppp/ppp.conf
and add an entry for the VPN connection.
See
.Xr ppp 8
for details on the format of this file.
.Bd -literal
  default:
	set log Phase Chat LCP IPCP CCP tun command
  vpn:
	set device "!/usr/local/sbin/pptp --nolaunchpppd pptp.example.net"
	set authname User
	set authkey MySecret
	set mppe 128 stateless
.Ed
.Pp
Next, you need to configure routing in
.Pa /etc/ppp/ppp.linkup .
We also load
.Xr pf 4
anchors for the vpn interface here.
More on that later.
.Pp
.Pa /etc/ppp/ppp.linkup :
.Bd -literal
  vpn: 
    add 10.42.0.0/16 HISADDR
    ! sh -c "/sbin/pfctl -a vpn -f /etc/pf.conf.vpn"
.Ed
.Pp
If pptp.example.net resides inside 10.42.0.0/16, we have to add a host
route pointing to pptp.example.net in order to avoid a chicken-and-egg
problem once packets to 10.42.0.0/16 are routed through the tunnel.
.Pp
.Pa /etc/ppp/ppp.linkup :
.Bd -literal
  vpn: 
    add pptp.example.net 192.168.1.1
    add 10.42.0.0/16 HISADDR
    ! sh -c "/sbin/pfctl -a vpn -f /etc/pf.conf.vpn"
.Ed
.Pp
If your default route is not fixed, for example if your ISP does not
always assign the same gateway to you, use a script to figure out
the current default route and add the host route to the VPN gateway.
For example:
.Pp
.Pa /etc/ppp/vpn-default-route.sh :
.Bd -literal
	#!/bin/sh
        gw=`netstat -rn -f inet | grep ^default | awk '{print $2};'`
        /sbin/route add -host pptp.example.net ${gw}
.Ed
.Pp
Call the script from
.Pa /etc/ppp/ppp.linkup :
.Bd -literal
  vpn:
    ! sh /etc/ppp/vpn-default-route.sh
    add 10.42.0.0/16 HISADDR
    ! sh -c "/sbin/pfctl -a vpn -f /etc/pf.conf.vpn"
.Ed
.Pp
Make sure the changes to the routing table are
reversed when the VPN connection drops:
.Pp
.Pa /etc/ppp/ppp.linkdown:
.Bd -literal
  vpn:
    ! sh -c "/sbin/pfctl -a vpn -F all"
    delete 10.42.0.0/16
    delete pptp.example.net
.Ed
.Pp
To make
.Xr pf 4
aware of the vpn anchors, put the following line into the file
.Pa /etc/pf.conf :
.Bd -literal
  anchor	vpn
.Ed
.Pp
See
.Xr pf.conf 5
for details on the format of this file.
.Pp
Now define vpn anchor rules in
.Pa /etc/pf.conf.vpn ,
for example:
.Bd -literal
  int_if=xl0
  vpn_if=tun0

  # NAT packets from our internal network to the VPN interface address
  match out on $vpn_if from $int_if:network to any nat-to ($vpn_if)

  block drop on $vpn_if
  pass out on $vpn_if 

  # Allow ping from remote, and explicitly make sure our replies are
  # routed back through the tunnel.
  pass in on $vpn_if reply-to ($vpn_if pptp.example.net) \e
	inet proto icmp icmp-type echoreq keep state

  # Same for ssh.
  pass in on $vpn_if reply-to ($vpn_if pptp.example.net) proto tcp \e
	from any to ($vpn_if) port ssh flags S/SA keep state
.Ed
.Pp
Connect by running:
.Dl ppp -unit0 -ddial vpn
.Pp
The -unit0 option makes sure ppp configures tun0 as the VPN
connection end point, and not some other tun device.
The packet filter rules configured above assume tun0 as the
VPN connection end point.
.Pp
To terminate the connection, kill the ppp process.
It creates a PID file in
.Pa /var/run/tunX.pid ,
where X is the number of the tun device used.
.Sh FILES
.Pa /var/run/pptp/<ip-address>
is created as a socket.
It is used for communicating with an existing
PPTP call manager for a given remote server host.
.Sh CAVEATS
The PPTP protocol is insecure.
.Sh SEE ALSO
.Xr gre 4 ,
.Xr pf 4 ,
.Xr pf.conf 5 ,
.Xr ppp 8 ,
.Pa PREFIX/share/doc/pptp/PROTOCOL-SECURITY .
.Sh HISTORY
This man page appeared first in
.Nx Ns 's pptp package.
.Sh AUTHORS
.An Stefan Sperling Aq stsp@@openbsd.org ,
.An C. Scott Ananian Aq cananian@@alumni.princeton.edu ,
.An John Kohl Aq jtk@@NetBSD.org
(patches and original man page).
@


1.9
log
@basic cleanup of pptp.8;
while here, remove the reference to pf.conf(5) nat-anchor
and use the new match...nat-to syntax in an example;
contributions and ok  stsp@@ jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pptp_8,v 1.8 2009/08/14 00:02:54 stsp Exp $
@


1.8
log
@In the examples section of the pptp man page, use hostnames that
don't resolve, use private IP addresses, and force replacement
of default routes.

input and ok sobrado@@, jmc@@, naddy@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pptp_8,v 1.7 2009/03/08 21:57:24 stsp Exp $
d11 1
d20 1
a20 1
.Op Fl -nolaunchpppd 
d70 1
a70 1
.It Fl -nolaunchpppd 
d74 2
a75 1
to the RFC, and require special handling.  To this end,
d95 2
a96 1
Time to wait before giving up on lack of reply. This option
d109 1
d120 2
a121 2
and add an entry for the VPN
connection. See
d155 2
a156 1
host route to the VPN gateway. For example:
d171 1
d182 2
a183 1
is left as an exercise for the reader. On a laptop it is usually
d190 4
a193 2
To terminate the connection, kill the ppp process. It creates a PID
file in /var/run/tunX.pid, where X is the number of the tun device used.
d206 2
a207 2
and add an entry for the VPN
connection. See
d265 1
d280 2
a281 4
aware of the vpn anchors, put these lines into the
NAT and Filter sections of
.Pa /etc/pf.conf ,
respectively:
a282 1
  nat-anchor	vpn
d297 2
a298 3
  # NAT is of course optional. The remote network needs
  # a route to our network as well if we don't do NAT.
  nat on $vpn_if from $int_if:network to any -> ($vpn_if)
d321 4
a324 2
To terminate the connection, kill the ppp process. It creates a PID
file in /var/run/tunX.pid, where X is the number of the tun device used.
d327 2
a328 1
is created as a socket.  It is used for communicating with an existing
a332 1
.Xr ppp 8 ,
d336 1
d339 2
a340 3
This man page appeared first in 
.Nx
\'s pptp package.
d342 1
a342 1
.An Stefan Sperling Aq stsp@@openbsd.org
d344 1
a344 1
.An John Kohl Aq jtk@@NetBSD.org 
@


1.7
log
@Fix build with gcc-2.95 (tested on sparc, simh-vax was too slow).

Remove some useless linux-specific code which tried to modify
the routing table by running "/bin/ip". Because this code has
no error checking and failed silently, no one noticed it.
Noticed it now because it didn't compile with gcc-2.95.

Don't install useless documentation.
Install useful notes on protocol insecurity instead.

Tweak the man page a little. Dunno if anyone is still using
Bezeq ADSL modems that need the --quirks option, but move
the information here just in case.

Clean up MESSAGE; don't shout at everybody about security holes
in a particular kind of modem that's almost 10 years old.

ok naddy@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pptp_8,v 1.6 2007/10/23 22:13:38 naddy Exp $
d112 1
a112 1
Let us assume that the VPN server was called vpn-gateway.net.
d122 1
a122 1
	set device "!/usr/local/sbin/pptp --nolaunchpppd vpn-gateway.net"
d132 1
a132 1
    add default HISADDR
d135 2
a136 2
If vpn-gateway.net does not reside on the local network,
we have to add a host route pointing to vpn-gateway.net in order to
d139 1
a139 1
Assuming the standard default route is 42.42.42.42:
d144 2
a145 2
    add vpn-gateway.net 42.42.42.42
    add default HISADDR
d157 1
a157 1
        /sbin/route add -host vpn-gateway.net ${gw}
d171 1
a171 1
    delete vpn-gateway.net
d190 2
a191 2
Let us assume that the VPN server was called vpn-gateway.net,
and that the default route of our OpenBSD box was 42.42.42.42.
d205 1
a205 1
	set device "!/usr/local/sbin/pptp --nolaunchpppd vpn-gateway.net"
d225 2
a226 2
If vpn-gateway.net resides inside 10.42.0.0/16, we have to add a host
route pointing to vpn-gateway.net in order to avoid a chicken-and-egg
d232 1
a232 1
    add vpn-gateway.net 42.42.42.42
d246 1
a246 1
        /sbin/route add -host vpn-gateway.net ${gw}
d265 1
a265 1
    delete vpn-gateway.net
d299 1
a299 1
  pass in on $vpn_if reply-to ($vpn_if vpn-gateway.net) \e
d303 1
a303 1
  pass in on $vpn_if reply-to ($vpn_if vpn-gateway.net) proto tcp \e
@


1.6
log
@* Update maintainer email address.
* Add detailed option descriptions to pptp(8) man page.
* Move OpenBSD configuration examples from text file
  ${PREFIX}/share/doc/pptp/USING into pptp(8) man page,
  and remove patch to ${WRKSRC}/USING. Extend and
  revise examples while at it.
* Add patch to ${WRKSRC}/util.c to make pptp log normal
  informational messages with level LOG_INFO instead of LOG_NOTICE.
* Update pkg/DESCR with a new description based on upstream web site.
* Fix URL to list of pptp security flaws in pkg/MESSAGE.
* [Re-]Create patches with `make update-patches'.
* Add patch to ${WRKSRC}/pptp_gre.c to automatically enable
  the net.inet.gre.allow sysctl before trying to bind
  the GRE socket.
* Remove '@@sysctl net.inet.gre.allow=1' from PLIST.

From: maintainer Stefan Sperling
@
text
@d1 1
a1 1
.\" $OpenBSD: pptp_8,v 1.5 2006/11/12 10:10:09 grunk Exp $
d45 2
d72 8
a79 6
Work around a buggy PPTP implementation.
The only currently recognised value is
.Ar BEZEQ_ISRAEL .
See the file
.Pa PREFIX/share/doc/pptp/USING
for details.
d108 3
a110 1
This example assumes that you want to use pptp to connect
d157 1
a157 1
        route add -host vpn-gateway.net ${gw}
d246 1
a246 1
        route add -host vpn-gateway.net ${gw}
d321 2
d328 1
a328 1
.Pa PREFIX/share/doc/pptp/USING .
d334 1
a334 2
.An Stefan Sperling Aq stsp@@stsp.name
(detailed option description, EXAMPLES section),
@


1.5
log
@Update to version 1.7.1, from new maintainer Stefan Sperling.
He also fixed wrong facts in the port's man page, updated MESSAGE accordingly,
removed an obsolete script, and improved the example configuration.

Thanks go to former maintainer Benoit LECOCQ, for having cared about the
port the time before.

ok sturm@@ and me
@
text
@d1 1
a1 1
.\" $OpenBSD: pptp_8,v 1.4 2006/09/30 20:40:10 grunk Exp $
d17 13
a29 4
[
.Op Ar --phone <phone number>
.Op Ar --quirks ISP_NAME
-- ]
d49 4
a52 2
Additional parameters are passed on to
.Ic ppp
d57 226
d284 27
a310 4
.Sh EXAMPLE
.Nm
.Ar hostname
.Op Ar ppp options
a314 3
.Pp
.Pa PREFIX/sbin/pptp-reconnect
can be used to (re)establish a pptp connection.
d318 2
d323 2
a324 2
.Nx 
\'s pptp-package.
d326 2
@


1.4
log
@correct mentioning of ppp (instead of pppd, which is wrong) in pptp(8)
man page supplied by the port itself.

ok from maintainer and sturm@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pptp_8,v 1.3 2004/05/30 21:54:03 jmc Exp $
d35 1
a35 8
uses GRE by using a raw IP socket, it will not work if your kernel has
the
.Xr gre 4
pseudo-device
configured.
.Pp
Build a kernel without "GRE encapsulation interface" support.
(NB: look in /usr/src/sys/conf/GENERIC for "pseudo-device   gre".)
a61 7
.Sh BUGS
.Nm
does not work with a GENERIC kernel, because
.Xr gre 4
conflicts with
.Xr pptp 8
protocol ip (47).
@


1.3
log
@sync description of GRE w/ GENERIC;
ok reinhard@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pptp_8,v 1.2 2003/01/24 13:12:38 reinhard Exp $
d21 1
a21 1
.Op Ar pppd options
d29 1
a29 1
.Xr pppd 8
d48 1
a48 1
.Ic pppd
d57 1
a57 1
.Op Ar pppd options
d66 1
a66 1
.Xr pppd 8 ,
@


1.2
log
@*) -NO_REGRESS
*) honour CC/CFLAGS
*) update man page
as requested by fgs@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pptp_8,v 1.1.1.1 2000/12/21 14:02:52 reinhard Exp $
d42 1
a42 1
(NB: look in /usr/src/sys/conf/GENERIC for "pseudo-device   gre     1".)
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
.\" $OpenBSD$
.\" Manual page for pptp-1.0.2
d17 4
d40 4
d62 3
d68 1
a68 1
.Pa PREFIX/share/doc/pptp/USING
@


1.1.1.1
log
@pptp-linux is an implementation of the PPTP protocol for Linux and
other Unix systems.

port based on NetBSD package.

thanks karma@@altern.org and Alexander.Farber@@t-online.de for testing.
@
text
@@
