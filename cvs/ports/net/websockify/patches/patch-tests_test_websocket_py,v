head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	sthen_20151218:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.12.18.13.18.39;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	IxdWEV9ie2pH5Dqp;

1.1.1.1
date	2015.12.18.13.18.39;	author sthen;	state Exp;
branches;
next	;
commitid	IxdWEV9ie2pH5Dqp;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- tests/test_websocket.py.orig	Fri Jul 24 02:02:37 2015
+++ tests/test_websocket.py	Fri Dec 18 12:33:34 2015
@@@@ -313,38 +313,6 @@@@ class WebSocketServerTestCase(unittest.TestCase):
         self.stubs.Set(select, 'select', fake_select)
         server.start_server()
 
-    def test_socket_set_keepalive_options(self):
-        keepcnt = 12
-        keepidle = 34
-        keepintvl = 56
-
-        server = self._get_server(daemon=False, ssl_only=0, idle_timeout=1)
-        sock = server.socket('localhost',
-                             tcp_keepcnt=keepcnt,
-                             tcp_keepidle=keepidle,
-                             tcp_keepintvl=keepintvl)
-
-        self.assertEqual(sock.getsockopt(socket.SOL_TCP,
-                                         socket.TCP_KEEPCNT), keepcnt)
-        self.assertEqual(sock.getsockopt(socket.SOL_TCP,
-                                         socket.TCP_KEEPIDLE), keepidle)
-        self.assertEqual(sock.getsockopt(socket.SOL_TCP,
-                                         socket.TCP_KEEPINTVL), keepintvl)
-
-        sock = server.socket('localhost',
-                             tcp_keepalive=False,
-                             tcp_keepcnt=keepcnt,
-                             tcp_keepidle=keepidle,
-                             tcp_keepintvl=keepintvl)
-
-        self.assertNotEqual(sock.getsockopt(socket.SOL_TCP,
-                                            socket.TCP_KEEPCNT), keepcnt)
-        self.assertNotEqual(sock.getsockopt(socket.SOL_TCP,
-                                            socket.TCP_KEEPIDLE), keepidle)
-        self.assertNotEqual(sock.getsockopt(socket.SOL_TCP,
-                                            socket.TCP_KEEPINTVL), keepintvl)
-
-
 class HyBiEncodeDecodeTestCase(unittest.TestCase):
     def test_decode_hybi_text(self):
         buf = b'\x81\x85\x37\xfa\x21\x3d\x7f\x9f\x4d\x51\x58'
@


1.1.1.1
log
@import ports/net/websockify, ok czarkoff@@

Websockify (formerly named wsproxy) translates WebSockets traffic to
normal socket traffic. It accepts the WebSockets handshake, parses it,
and then begins forwarding traffic between the client and the target
in both directions.
@
text
@@
