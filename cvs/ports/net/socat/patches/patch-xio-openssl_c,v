head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.8
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.6
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2016.02.02.10.40.32;	author sthen;	state Exp;
branches;
next	1.3;
commitid	i2cO52qdHGGIhqfM;

1.3
date	2015.04.13.14.43.28;	author jasper;	state Exp;
branches
	1.3.4.1;
next	1.2;
commitid	ebTqXaMbwtnw5VPY;

1.2
date	2014.07.12.14.30.20;	author pascal;	state Exp;
branches
	1.2.2.1
	1.2.4.1;
next	1.1;
commitid	xrZ2mjDP8MWYPNS5;

1.1
date	2014.04.24.15.17.08;	author sthen;	state Exp;
branches;
next	;

1.2.2.1
date	2015.04.13.14.45.41;	author jasper;	state Exp;
branches;
next	;
commitid	2j9mC6Viekm0QKB1;

1.2.4.1
date	2015.04.13.14.44.17;	author jasper;	state Exp;
branches;
next	;
commitid	4siRpYlAYihHpWVN;

1.3.4.1
date	2016.02.02.10.41.06;	author sthen;	state Exp;
branches;
next	;
commitid	tHjkEaqereU9sY2D;


desc
@@


1.4
log
@security update to socat-1.7.3.1, ok jasper@@ nigel@@

- A stack overflow in vulnerability was found that can be triggered when
command line arguments (complete address specifications, host names,
file names) are longer than 512 bytes.

- In the OpenSSL address implementation the hard coded 1024 bit DH p
parameter was not prime. [..] Fix: generated a new 2048bit prime.
@
text
@$OpenBSD: patch-xio-openssl_c,v 1.3 2015/04/13 14:43:28 jasper Exp $
--- xio-openssl.c.orig	Fri Jan 29 10:28:38 2016
+++ xio-openssl.c	Mon Feb  1 16:30:57 2016
@@@@ -108,7 +108,6 @@@@ const struct optdesc opt_openssl_key         = { "open
 const struct optdesc opt_openssl_dhparam     = { "openssl-dhparam",     "dh",    OPT_OPENSSL_DHPARAM,     GROUP_OPENSSL, PH_SPEC, TYPE_FILENAME, OFUNC_SPEC };
 const struct optdesc opt_openssl_cafile      = { "openssl-cafile",     "cafile", OPT_OPENSSL_CAFILE,      GROUP_OPENSSL, PH_SPEC, TYPE_FILENAME, OFUNC_SPEC };
 const struct optdesc opt_openssl_capath      = { "openssl-capath",     "capath", OPT_OPENSSL_CAPATH,      GROUP_OPENSSL, PH_SPEC, TYPE_FILENAME, OFUNC_SPEC };
-const struct optdesc opt_openssl_egd         = { "openssl-egd",        "egd",    OPT_OPENSSL_EGD,         GROUP_OPENSSL, PH_SPEC, TYPE_FILENAME, OFUNC_SPEC };
 const struct optdesc opt_openssl_pseudo      = { "openssl-pseudo",     "pseudo", OPT_OPENSSL_PSEUDO,      GROUP_OPENSSL, PH_SPEC, TYPE_BOOL,     OFUNC_SPEC };
 #if OPENSSL_VERSION_NUMBER >= 0x00908000L
 const struct optdesc opt_openssl_compress    = { "openssl-compress",   "compress", OPT_OPENSSL_COMPRESS,  GROUP_OPENSSL, PH_SPEC, TYPE_STRING,   OFUNC_SPEC };
@@@@ -147,7 +146,7 @@@@ int xio_reset_fips_mode(void) {
 static void openssl_conn_loginfo(SSL *ssl) {
    Notice1("SSL connection using %s", SSL_get_cipher(ssl));
 
-#if OPENSSL_VERSION_NUMBER >= 0x00908000L
+#if (OPENSSL_VERSION_NUMBER >= 0x00908000L) && !defined(OPENSSL_NO_COMP)
    {
       const COMP_METHOD *comp, *expansion;
 
@@@@ -722,7 +721,6 @@@@ int
    char *opt_dhparam = NULL;	/* file name of DH params */
    char *opt_cafile = NULL;	/* certificate authority file */
    char *opt_capath = NULL;	/* certificate authority directory */
-   char *opt_egd = NULL;	/* entropy gathering daemon socket path */
 #if OPENSSL_VERSION_NUMBER >= 0x00908000L
    char *opt_compress = NULL;	/* compression method */
 #endif
@@@@ -741,7 +739,6 @@@@ int
    retropt_string(opts, OPT_OPENSSL_CAPATH, &opt_capath);
    retropt_string(opts, OPT_OPENSSL_KEY, &opt_key);
    retropt_string(opts, OPT_OPENSSL_DHPARAM, &opt_dhparam);
-   retropt_string(opts, OPT_OPENSSL_EGD, &opt_egd);
    retropt_bool(opts,OPT_OPENSSL_PSEUDO, &opt_pseudo);
 #if OPENSSL_VERSION_NUMBER >= 0x00908000L
    retropt_string(opts, OPT_OPENSSL_COMPRESS, &opt_compress);
@@@@ -877,10 +874,6 @@@@ int
       }
    }
 
-   if (opt_egd) {
-      sycRAND_egd(opt_egd);
-   }
-
    if (opt_pseudo) {
       long int randdata;
       /* initialize libc random from actual microseconds */
@@@@ -1105,7 +1098,7 @@@@ static int openssl_SSL_ERROR_SSL(int level, const char
       if (e == ((ERR_LIB_RAND<<24)|
 		(RAND_F_SSLEAY_RAND_BYTES<<12)|
 		(RAND_R_PRNG_NOT_SEEDED)) /*0x24064064*/) {
-	 Error("too few entropy; use options \"egd\" or \"pseudo\"");
+	 Error("too few entropy; use option \"pseudo\"");
 	 stat = STAT_NORETRY;
       } else {
 	 Msg2(level, "%s(): %s", funcname, ERR_error_string(e, buf));
@


1.3
log
@- security update to socat-1.7.3.0, addresses CVE-2015-1379
http://www.dest-unreach.org/socat/contrib/socat-secadv6.txt

ok nigel@@ (MAINTAINER)
@
text
@d1 3
a3 3
$OpenBSD: patch-xio-openssl_c,v 1.2 2014/07/12 14:30:20 pascal Exp $
--- xio-openssl.c.orig	Sat Jan 24 15:33:42 2015
+++ xio-openssl.c	Mon Apr 13 14:59:12 2015
d48 1
a48 1
@@@@ -1098,7 +1091,7 @@@@ static int openssl_SSL_ERROR_SSL(int level, const char
@


1.3.4.1
log
@MFC security update to socat-1.7.3.1

- A stack overflow in vulnerability was found that can be triggered when
command line arguments (complete address specifications, host names,
file names) are longer than 512 bytes.

- In the OpenSSL address implementation the hard coded 1024 bit DH p
parameter was not prime. [..] Fix: generated a new 2048bit prime.
@
text
@d1 3
a3 3
$OpenBSD: patch-xio-openssl_c,v 1.4 2016/02/02 10:40:32 sthen Exp $
--- xio-openssl.c.orig	Fri Jan 29 10:28:38 2016
+++ xio-openssl.c	Mon Feb  1 16:30:57 2016
d48 1
a48 1
@@@@ -1105,7 +1098,7 @@@@ static int openssl_SSL_ERROR_SSL(int level, const char
@


1.2
log
@Fix after COMP removal.

ok espie@@
@
text
@d1 4
a4 4
$OpenBSD: patch-xio-openssl_c,v 1.1 2014/04/24 15:17:08 sthen Exp $
--- xio-openssl.c.orig	Sun Mar  2 20:26:45 2014
+++ xio-openssl.c	Sat Jul 12 16:00:50 2014
@@@@ -102,7 +102,6 @@@@ const struct optdesc opt_openssl_key         = { "open
d12 1
a12 1
@@@@ -140,7 +139,7 @@@@ int xio_reset_fips_mode(void) {
d21 1
a21 1
@@@@ -697,7 +696,6 @@@@ int
d29 1
a29 1
@@@@ -716,7 +714,6 @@@@ int
d37 1
a37 1
@@@@ -796,10 +793,6 @@@@ int
d48 9
a56 9
@@@@ -979,7 +972,7 @@@@ static int openssl_SSL_ERROR_SSL(int level, const char
    if (e == ((ERR_LIB_RAND<<24)|
 	     (RAND_F_SSLEAY_RAND_BYTES<<12)|
 	     (RAND_R_PRNG_NOT_SEEDED)) /*0x24064064*/) {
-      Error("too few entropy; use options \"egd\" or \"pseudo\"");
+      Error("too few entropy; use options \"pseudo\"");
       return STAT_NORETRY;
    } else {
       Msg2(level, "%s(): %s", funcname, ERR_error_string(e, buf));
@


1.2.2.1
log
@- security update to socat-1.7.3.0, addresses CVE-2015-1379
http://www.dest-unreach.org/socat/contrib/socat-secadv6.txt

ok nigel@@ (MAINTAINER)
@
text
@d1 4
a4 4
$OpenBSD: patch-xio-openssl_c,v 1.2 2014/07/12 14:30:20 pascal Exp $
--- xio-openssl.c.orig	Sat Jan 24 15:33:42 2015
+++ xio-openssl.c	Mon Apr 13 14:59:12 2015
@@@@ -108,7 +108,6 @@@@ const struct optdesc opt_openssl_key         = { "open
d12 1
a12 1
@@@@ -147,7 +146,7 @@@@ int xio_reset_fips_mode(void) {
d21 1
a21 1
@@@@ -722,7 +721,6 @@@@ int
d29 1
a29 1
@@@@ -741,7 +739,6 @@@@ int
d37 1
a37 1
@@@@ -877,10 +874,6 @@@@ int
d48 9
a56 9
@@@@ -1098,7 +1091,7 @@@@ static int openssl_SSL_ERROR_SSL(int level, const char
       if (e == ((ERR_LIB_RAND<<24)|
 		(RAND_F_SSLEAY_RAND_BYTES<<12)|
 		(RAND_R_PRNG_NOT_SEEDED)) /*0x24064064*/) {
-	 Error("too few entropy; use options \"egd\" or \"pseudo\"");
+	 Error("too few entropy; use option \"pseudo\"");
 	 stat = STAT_NORETRY;
       } else {
 	 Msg2(level, "%s(): %s", funcname, ERR_error_string(e, buf));
@


1.2.4.1
log
@- security update to socat-1.7.3.0, addresses CVE-2015-1379
http://www.dest-unreach.org/socat/contrib/socat-secadv6.txt

ok nigel@@ (MAINTAINER)
@
text
@d1 4
a4 4
$OpenBSD: patch-xio-openssl_c,v 1.2 2014/07/12 14:30:20 pascal Exp $
--- xio-openssl.c.orig	Sat Jan 24 15:33:42 2015
+++ xio-openssl.c	Mon Apr 13 14:59:12 2015
@@@@ -108,7 +108,6 @@@@ const struct optdesc opt_openssl_key         = { "open
d12 1
a12 1
@@@@ -147,7 +146,7 @@@@ int xio_reset_fips_mode(void) {
d21 1
a21 1
@@@@ -722,7 +721,6 @@@@ int
d29 1
a29 1
@@@@ -741,7 +739,6 @@@@ int
d37 1
a37 1
@@@@ -877,10 +874,6 @@@@ int
d48 9
a56 9
@@@@ -1098,7 +1091,7 @@@@ static int openssl_SSL_ERROR_SSL(int level, const char
       if (e == ((ERR_LIB_RAND<<24)|
 		(RAND_F_SSLEAY_RAND_BYTES<<12)|
 		(RAND_R_PRNG_NOT_SEEDED)) /*0x24064064*/) {
-	 Error("too few entropy; use options \"egd\" or \"pseudo\"");
+	 Error("too few entropy; use option \"pseudo\"");
 	 stat = STAT_NORETRY;
       } else {
 	 Msg2(level, "%s(): %s", funcname, ERR_error_string(e, buf));
@


1.1
log
@patch socat for RAND_egd removal; from nigel@@ (OK'd by me a few days ago but
not yet committed)
@
text
@d1 3
a3 3
$OpenBSD$
--- xio-openssl.c.orig	Sun Mar  2 19:26:45 2014
+++ xio-openssl.c	Sat Apr 19 15:57:30 2014
d12 9
@

