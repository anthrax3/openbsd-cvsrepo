head	1.6;
access;
symbols
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.8
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2014.02.10.17.43.15;	author sthen;	state dead;
branches;
next	1.5;

1.5
date	2012.07.16.07.39.31;	author giovanni;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.28.09.01.24;	author giovanni;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.08.14.43.30;	author sebastia;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.22.10.00.57;	author giovanni;	state Exp;
branches;
next	1.1;

1.1
date	2008.01.25.01.21.17;	author okan;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update nmap to 6.40, and build with their bundled libpcap for now, bpf_timeval
patches are questionable and there's a timing-related problem to track down.
From giovanni@@ (maintainer) a while ago. Add a fix from jca@@ to fix a floating-
point related assertion failure seen on i386, reminded by zhuk@@. Committing the
update rather than the minimal assertion-fix diff as it has been more
extensively tested in the past (then slipped through the cracks), jasper@@
agrees. OK jasper@@ giovanni@@
@
text
@$OpenBSD: patch-nsock_src_nsock_pcap_c,v 1.5 2012/07/16 07:39:31 giovanni Exp $
--- nsock/src/nsock_pcap.c.orig	Thu Mar  1 07:32:23 2012
+++ nsock/src/nsock_pcap.c	Fri May 25 09:38:27 2012
@@@@ -76,7 +76,7 @@@@
 
 #include "nsock_pcap.h"
 
-extern struct timeval nsock_tod;
+extern struct bpf_timeval nsock_tod;
 
 #if HAVE_PCAP
 static int nsock_pcap_get_l3_offset(pcap_t *pt, int *dl);
@@@@ -375,7 +375,7 @@@@ int do_actual_pcap_read(msevent *nse) {
       npp.ts     = pkt_header->ts;
       #else
       /* on these platforms time received from pcap is invalid. It's better to set current time */
-      memcpy(&npp.ts, nsock_gettimeofday(), sizeof(struct timeval));
+      memcpy(&npp.ts, nsock_gettimeofday(), sizeof(struct bpf_timeval));
       #endif
       npp.len    = pkt_header->len;
       npp.caplen = pkt_header->caplen;
@@@@ -406,7 +406,7 @@@@ int do_actual_pcap_read(msevent *nse) {
 }
 
 void nse_readpcap(nsock_event nsee, const unsigned char **l2_data, size_t *l2_len,
-                  const unsigned char **l3_data, size_t *l3_len, size_t *packet_len, struct timeval *ts) {
+                  const unsigned char **l3_data, size_t *l3_len, size_t *packet_len, struct bpf_timeval *ts) {
   msevent *nse = (msevent *)nsee;
   msiod  *iod = nse->iod;
   mspcap *mp = (mspcap *)iod->pcap;
@


1.5
log
@
Major update to 6.01
tests & ok benoit@@, thanks
@
text
@d1 1
a1 1
$OpenBSD: patch-nsock_src_nsock_pcap_c,v 1.4 2011/03/28 09:01:24 giovanni Exp $
@


1.4
log
@
Update to version 5.51, lot of improvements since latest version,
full changelog available at http://nmap.org/changelog.html
Nping needs a very current libpcap to work as root
@
text
@d1 30
a30 12
$OpenBSD$
--- nsock/src/nsock_pcap.c.orig	Wed Feb  2 16:07:29 2011
+++ nsock/src/nsock_pcap.c	Wed Feb  2 16:08:16 2011
@@@@ -346,7 +346,7 @@@@ int do_actual_pcap_read(msevent *nse)
 void nse_readpcap(nsock_event nsee,
 	const unsigned char **l2_data, size_t *l2_len,
 	const unsigned char **l3_data, size_t *l3_len,
-	size_t *packet_len, struct timeval *ts) 
+	size_t *packet_len, struct bpf_timeval *ts) 
 {
 	msevent *nse = (msevent *)nsee;
 	msiod  *iod = nse->iod;
@


1.3
log
@fix build on gcc2 archs, also reported upstream to nmap-dev@@.
OK from giovanni@@, jasper@@, sthen@@, phessler@@
@
text
@d1 4
a4 85
$OpenBSD: patch-nsock_src_nsock_pcap_c,v 1.2 2009/10/22 10:00:57 giovanni Exp $
fix build on gcc2 archs
--- nsock/src/nsock_pcap.c.orig	Wed Mar  4 04:08:33 2009
+++ nsock/src/nsock_pcap.c	Thu Jul  8 10:46:21 2010
@@@@ -25,13 +25,12 @@@@ char* nsock_pcap_open(nsock_pool nsp, nsock_iod nsiod,
 	mspool *ms = (mspool *) nsp;
 	mspcap *mp = (mspcap *) nsi->pcap;
 	static char errorbuf[128];
-	
-	if(mp) return "nsock-pcap: this nsi already has pcap device opened";
-	
-	mp = (mspcap *)safe_malloc(sizeof(mspcap));
-	nsi->pcap = (void*)mp;
-	
 	char err0r[PCAP_ERRBUF_SIZE];
+	/* packet filter string */
+	char bpf[4096];
+	va_list ap;
+	int failed, datalink;
+	char *e;
 	
 	#ifdef PCAP_CAN_DO_SELECT
 	  #if PCAP_BSD_SELECT_HACK
@@@@ -45,10 +44,9 @@@@ char* nsock_pcap_open(nsock_pool nsp, nsock_iod nsiod,
 	#else
 	int to_ms = 1;
 	#endif
-
-	/* packet filter string */
-	char bpf[4096];
-	va_list ap;
+	if(mp) return "nsock-pcap: this nsi already has pcap device opened";
+	mp = (mspcap *)safe_malloc(sizeof(mspcap));
+	nsi->pcap = (void*)mp;
 	
 	va_start(ap, bpf_fmt);
 	if(Vsnprintf(bpf, sizeof(bpf), bpf_fmt, ap) >= (int) sizeof(bpf)){
@@@@ -61,7 +59,7 @@@@ char* nsock_pcap_open(nsock_pool nsp, nsock_iod nsiod,
   		nsock_trace(ms, "PCAP requested on device '%s' with berkeley filter '%s' (promisc=%i snaplen=%i to_ms=%i) (IOD #%li)", 
   		pcap_device,bpf, promisc, snaplen, to_ms, nsi->id);
 
-	int failed = 0;
+	failed = 0;
 	do {
 		mp->pt = pcap_open_live((char*)pcap_device, snaplen, promisc, to_ms, err0r);
 		if (mp->pt)	/* okay, opened!*/ 
@@@@ -84,7 +82,7 @@@@ char* nsock_pcap_open(nsock_pool nsp, nsock_iod nsiod,
 		sleep(4* failed);
 	}while(1);
 
-	char *e = nsock_pcap_set_filter(mp->pt, pcap_device, bpf);
+	e = nsock_pcap_set_filter(mp->pt, pcap_device, bpf);
 	if(e) return e;
 	
 	
@@@@ -96,7 +94,6 @@@@ char* nsock_pcap_open(nsock_pool nsp, nsock_iod nsiod,
 	PacketSetReadTimeout(mp->pt->adapter, to_ms);
 	#endif
 	
-	int datalink;
 	mp->l3_offset = nsock_pcap_get_l3_offset(mp->pt, &datalink);
 	mp->snaplen = snaplen;
 	mp->datalink = datalink;
@@@@ -280,6 +277,9 @@@@ int do_actual_pcap_read(msevent *nse)
 	
 	nsock_pcap npp;
 	nsock_pcap *n;
+	struct pcap_pkthdr *pkt_header;
+        const unsigned char *pkt_data = NULL;
+	int rc;
 	memset(&npp, 0, sizeof(nsock_pcap));
 	
 	if (nse->iod->nsp->tracelevel > 2)
@@@@ -288,9 +288,7 @@@@ int do_actual_pcap_read(msevent *nse)
 
 	assert( FILESPACE_LENGTH(&(nse->iobuf)) == 0 );
 	
-	struct pcap_pkthdr *pkt_header;
-        const unsigned char *pkt_data = NULL;
-	int rc = pcap_next_ex(mp->pt, &pkt_header, &pkt_data);
+	rc = pcap_next_ex(mp->pt, &pkt_header, &pkt_data);
 	switch(rc){
 	case 1: /* read good packet  */
 		#ifdef PCAP_RECV_TIMEVAL_VALID
@@@@ -325,11 +323,14 @@@@ int do_actual_pcap_read(msevent *nse)
a12 18
 	mspcap *mp = (mspcap *) iod->pcap;
+
+	size_t l2l;
+	size_t l3l;
 	
 	nsock_pcap *n = (nsock_pcap *) FILESPACE_STR(&(nse->iobuf));
 	if(FILESPACE_LENGTH(&(nse->iobuf)) < sizeof(nsock_pcap)){
@@@@ -341,8 +342,8 @@@@ void nse_readpcap(nsock_event nsee,
 		return;
 	}
 	
-	size_t l2l = MIN(mp->l3_offset, n->caplen);
-	size_t l3l = MAX(0, n->caplen-mp->l3_offset);
+	l2l = MIN(mp->l3_offset, n->caplen);
+	l3l = MAX(0, n->caplen-mp->l3_offset);
 	
 	if(l2_data) *l2_data = n->packet;
 	if(l2_len ) *l2_len  = l2l;
@


1.2
log
@
Update to nmap-5.00
diff made by Pawlowski Marcin Piotr with tweaks by me and others
"you have my okay" landry@@ on a similar diff
full changelog available at http://nmap.org/changelog.html
@
text
@d1 2
a2 1
$OpenBSD: patch-nsock_src_nsock_pcap_c,v 1.1 2008/01/25 01:21:17 okan Exp $
d4 82
a85 2
+++ nsock/src/nsock_pcap.c	Tue Jul 21 19:57:38 2009
@@@@ -325,7 +325,7 @@@@ int do_actual_pcap_read(msevent *nse)
d94 18
@


1.1
log
@- update to 4.53 from Giovanni Bechis (MAINTAINER)
- re-work port from FLAVORS to MULTI_PACKAGES (-main, -zenmap)

lots of feedback and help from kili@@, merdely@@ and Giovanni

ok merdely@@ kili@@
@
text
@d1 4
a4 4
$OpenBSD$
--- nsock/src/nsock_pcap.c.orig	Mon Jan 14 17:10:14 2008
+++ nsock/src/nsock_pcap.c	Mon Jan 14 17:10:31 2008
@@@@ -324,7 +324,7 @@@@ int do_actual_pcap_read(msevent *nse)
@

