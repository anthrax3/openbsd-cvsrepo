head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.2
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.8.0.2
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2017.09.27.09.50.00;	author dcoppa;	state Exp;
branches;
next	1.8;
commitid	sjRmCeXHu0pxXQ8c;

1.8
date	2016.12.22.21.58.40;	author sthen;	state Exp;
branches;
next	1.7;
commitid	a5cps34zmWstUXtx;

1.7
date	2016.10.06.05.47.35;	author giovanni;	state Exp;
branches;
next	1.6;
commitid	SMKs6eDgmpJSXPER;

1.6
date	2016.03.18.21.13.38;	author giovanni;	state Exp;
branches;
next	1.5;
commitid	zlRR6IJpSjr8N5kZ;

1.5
date	2016.01.07.13.23.47;	author giovanni;	state Exp;
branches;
next	1.4;
commitid	MbHWCjE1Ed0RmzSe;

1.4
date	2015.09.11.15.56.43;	author sthen;	state Exp;
branches;
next	1.3;
commitid	6ori6RE9u9QJKfBP;

1.3
date	2014.09.25.17.33.15;	author sthen;	state Exp;
branches;
next	1.2;
commitid	KCu37XOty6i3UyYW;

1.2
date	2014.05.16.15.08.54;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2014.02.10.17.43.15;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.9
log
@
Unbreak autoconf check with clang by not using nested functions
Regen patches while here
@
text
@$OpenBSD: patch-timing_cc,v 1.8 2016/12/22 21:58:40 sthen Exp $
Index: timing.cc
--- timing.cc.orig
+++ timing.cc
@@@@ -134,4 +134,6 @@@@
 
+#include <limits>
+
 #include "timing.h"
 #include "NmapOps.h"
 #include "utils.h"
@


1.8
log
@update to nmap-7.40, from maintainer David CARLIER
@
text
@d1 5
a5 6
$OpenBSD: patch-timing_cc,v 1.7 2016/10/06 05:47:35 giovanni Exp $
--- timing.cc.orig	Wed Dec 14 00:12:23 2016
+++ timing.cc	Thu Dec 22 05:45:12 2016
@@@@ -132,6 +132,8 @@@@
 
 /* $Id: timing.cc 36488 2016-12-14 00:12:23Z fyodor $ */
@


1.7
log
@Update to 7.30
from David Carlier with tweaks by me
@
text
@d1 4
a4 4
$OpenBSD: patch-timing_cc,v 1.6 2016/03/18 21:13:38 giovanni Exp $
--- timing.cc.orig	Mon Aug 22 20:50:06 2016
+++ timing.cc	Thu Sep 29 22:04:48 2016
@@@@ -125,6 +125,8 @@@@
d6 1
a6 1
 /* $Id: timing.cc 36172 2016-08-22 19:50:06Z dmiller $ */
a12 9
@@@@ -437,7 +439,7 @@@@ void RateMeter::update(double amount, const struct tim
     interval = MAX(current_rate_history, diff);
   else
     interval = TIMEVAL_SUBTRACT(*now, start_tv) / 1000000.0;
-  assert(diff <= interval);
+  assert(diff <= interval + std::numeric_limits<float>::epsilon());
   /* If we record an amount in the very same instant that the timer is started,
      there's no way to calculate meaningful rates. Ignore it. */
   if (interval == 0.0)
@


1.6
log
@update to 7.10 from maintainer David Carlier with tweaks by me
@
text
@d1 3
a3 3
$OpenBSD$
--- timing.cc.orig	Tue Jun 23 01:09:01 2015
+++ timing.cc	Thu Mar 17 20:44:33 2016
d6 1
a6 1
 /* $Id: timing.cc 34709 2015-06-23 00:09:01Z dmiller $ */
@


1.5
log
@Update to 7.01 and drop maintainership
new maintainer is David Carlier
ok jca@@
@
text
@d1 3
a3 7
$OpenBSD: patch-timing_cc,v 1.4 2015/09/11 15:56:43 sthen Exp $

Avoid float-related assertion triggered on i386, not triggered on
macppc/amd64/sparc64.

--- timing.cc.orig	Tue Jun 23 02:09:01 2015
+++ timing.cc	Tue Dec 29 10:47:48 2015
@


1.4
log
@hand-edit patch to avoid rcs id
@
text
@d1 1
a1 1
$OpenBSD: patch-timing_cc,v 1.3 2014/09/25 17:33:15 sthen Exp $
d6 5
a10 3
--- timing.cc.orig	Sat Aug 16 04:45:47 2014
+++ timing.cc	Fri Sep 11 17:55:26 2015
@@@@ -128,4 +128,6 @@@@
d17 1
a17 1
@@@@ -436,7 +438,7 @@@@ void RateMeter::update(double amount, const struct tim
@


1.3
log
@update to nmap 6.47, ok giovanni@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 3
a8 5
--- timing.cc.orig	Sat Aug 16 03:45:47 2014
+++ timing.cc	Wed Sep 24 13:01:27 2014
@@@@ -126,6 +126,8 @@@@
 
 /* $Id: timing.cc 33540 2014-08-16 02:45:47Z dmiller $ */
@


1.2
log
@update to nmap 6.46, tweak from / ok giovanni@@ (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: patch-timing_cc,v 1.1 2014/02/10 17:43:15 sthen Exp $
d3 2
a4 2
hunk 1-2: Avoid float-related assertion triggered on i386, not triggered
on macppc/amd64/sparc64.
d6 5
a10 6
hunk 3-5: Format changes for 64-bit time_t, should go upstream.


--- timing.cc.orig	Wed Feb 12 20:25:51 2014
+++ timing.cc	Thu May 15 20:12:32 2014
@@@@ -126,4 +126,6 @@@@
a25 32
@@@@ -715,10 +717,10 @@@@ bool ScanProgressMeter::printStats(double perc_done,
       floor(fmod(time_left_s, 60.0)));
   xml_open_start_tag("taskprogress");
   xml_attribute("task", "%s", scantypestr);
-  xml_attribute("time", "%lu", (unsigned long) now->tv_sec);
+  xml_attribute("time", "%lld", (long long) now->tv_sec);
   xml_attribute("percent", "%.2f", perc_done * 100);
-  xml_attribute("remaining", "%.f", time_left_s);
-  xml_attribute("etc", "%lu", (unsigned long) last_est.tv_sec);
+  xml_attribute("remaining", "%.lld", (long long) time_left_s);
+  xml_attribute("etc", "%lld", (long long) last_est.tv_sec);
   xml_close_empty_tag();
   xml_newline();
   log_flush(LOG_STDOUT|LOG_XML);
@@@@ -750,7 +752,7 @@@@ bool ScanProgressMeter::beginOrEndTask(const struct ti
     log_write(LOG_STDOUT, "Initiating %s at %02d:%02d", scantypestr, tm->tm_hour, tm->tm_min);
     xml_open_start_tag("taskbegin");
     xml_attribute("task", "%s", scantypestr);
-    xml_attribute("time", "%lu", (unsigned long) now->tv_sec);
+    xml_attribute("time", "%lld", (long long) now->tv_sec);
     if (additional_info) {
       log_write(LOG_STDOUT, " (%s)", additional_info);
       xml_attribute("extrainfo", "%s", additional_info);
@@@@ -762,7 +764,7 @@@@ bool ScanProgressMeter::beginOrEndTask(const struct ti
     log_write(LOG_STDOUT, "Completed %s at %02d:%02d, %.2fs elapsed", scantypestr, tm->tm_hour, tm->tm_min, TIMEVAL_MSEC_SUBTRACT(*now, begin) / 1000.0);
     xml_open_start_tag("taskend");
     xml_attribute("task", "%s", scantypestr);
-    xml_attribute("time", "%lu", (unsigned long) now->tv_sec);
+    xml_attribute("time", "%lld", (long long) now->tv_sec);
     if (additional_info) {
       log_write(LOG_STDOUT, " (%s)", additional_info);
       xml_attribute("extrainfo", "%s", additional_info);
@


1.1
log
@Update nmap to 6.40, and build with their bundled libpcap for now, bpf_timeval
patches are questionable and there's a timing-related problem to track down.
From giovanni@@ (maintainer) a while ago. Add a fix from jca@@ to fix a floating-
point related assertion failure seen on i386, reminded by zhuk@@. Committing the
update rather than the minimal assertion-fix diff as it has been more
extensively tested in the past (then slipped through the cracks), jasper@@
agrees. OK jasper@@ giovanni@@
@
text
@d1 1
a1 1
$OpenBSD$
d9 3
a11 5
--- timing.cc.orig	Sun Jul 28 23:08:48 2013
+++ timing.cc	Mon Feb 10 11:58:00 2014
@@@@ -126,6 +126,8 @@@@
 
 /* $Id: timing.cc 31563 2013-07-28 22:08:48Z fyodor $ */
d27 1
a27 1
@@@@ -715,10 +717,10 @@@@ bool ScanProgressMeter::printStats(double perc_done, 
@

