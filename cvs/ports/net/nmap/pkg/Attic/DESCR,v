head	1.4;
access;
symbols
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.14
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.12
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.10
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.1.1.0.6
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.4
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.2
	OPENBSD_2_5_BASE:1.1.1.1
	nmap-2_02:1.1.1.1
	angelos:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2008.01.25.01.21.17;	author okan;	state dead;
branches;
next	1.3;

1.3
date	2003.12.09.18.42.37;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.29.23.12.52;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	99.01.11.05.37.23;	author angelos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.01.11.05.37.23;	author angelos;	state Exp;
branches
	1.1.1.1.6.1;
next	;

1.1.1.1.6.1
date	2000.09.15.05.09.59;	author marc;	state Exp;
branches;
next	;


desc
@@


1.4
log
@- update to 4.53 from Giovanni Bechis (MAINTAINER)
- re-work port from FLAVORS to MULTI_PACKAGES (-main, -zenmap)

lots of feedback and help from kili@@, merdely@@ and Giovanni

ok merdely@@ kili@@
@
text
@Nmap is a utility for port scanning large networks, although it works
fine for single hosts. The guiding philosophy for the creation of nmap
was TMTOWTDI (There's More Than One Way To Do It). This is the Perl
slogan, but it is equally applicable to scanners. Sometimes you need
speed, other times you may need stealth. In some cases, bypassing
firewalls may be required. Not to mention the fact that you may want
to scan different protocols (UDP, TCP, ICMP, etc.). You just can't do
all this with one scanning mode. And you don't want to have 10
different scanners around, all with different interfaces and
capabilities. Thus I incorporated virtually every scanning technique I
know into nmap. Specifically, nmap supports:

     Vanilla TCP connect() scanning, 
     TCP SYN (half open) scanning, 
     TCP FIN, Xmas, or NULL (stealth) scanning, 
     TCP ftp proxy (bounce attack) scanning,
     SYN/FIN scanning using IP fragments (bypasses packet filters), 
     UDP raw ICMP port unreachable scanning, 
     ICMP scanning (ping-sweep),
     TCP Ping scanning,
     Remote OS Identification by TCP/IP Fingerprinting, and 
     Reverse-ident scanning. 

nmap also supports a number of performance and reliability features
such as dynamic delay time calculations, packet timeout and
retransmission, parallel port scanning, detection of down hosts via
parallel pings. Nmap also offers flexible target and port
specification, decoy scanning, determination of TCP sequence
predictability characteristics, and output to machine parseable or
human readable log files.
@


1.3
log
@upgrade to nmap 3.48
--
From: MAINTAINER
New MAINTAINER: Dan Weeks <danimal at danimal dot org>
@
text
@@


1.2
log
@- add HOMEPAGE
- remove FAKE=Yes
- HAS_CONFIGURE -> CONFIGURE_STYLE
@
text
@a30 2

WWW: ${HOMEPAGE}
@


1.1
log
@Initial revision
@
text
@d32 1
a32 1
For more details, see http://www.insecure.org/nmap/
@


1.1.1.1
log
@Nmap 2.02 port scanner.
@
text
@@


1.1.1.1.6.1
log
@bring net as of cut-over date into 2.7 branch
@
text
@d32 1
a32 1
WWW: ${HOMEPAGE}
@

