head	1.3;
access;
symbols
	OPENBSD_4_0:1.2.0.14
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.12
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.10
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.8
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.1.0.4
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2006.09.22.05.56.25;	author pvalchev;	state dead;
branches;
next	1.2;

1.2
date	2003.08.22.11.18.19;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.26.15.12.17;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to netatalk-2.0.3 and get rid of old directory structure.
A long due update with important features such as long filenames,
unicode, etc.
From new maintainer "Arnaud Bergeron" <abergeron@@gmail.com>
@
text
@$OpenBSD: patch-etc_afpd_unix_c,v 1.2 2003/08/22 11:18:19 naddy Exp $
--- etc/afpd/unix.c.orig	Mon Aug 18 14:38:03 2003
+++ etc/afpd/unix.c	Mon Aug 18 14:47:24 2003
@@@@ -289,7 +289,7 @@@@ const int dropbox;
 int setdeskmode( mode )
 const mode_t	mode;
 {
-    char		wd[ MAXPATHLEN + 1];
+    char		wd[MAXPATHLEN];
     struct stat         st;
     char		modbuf[ 12 + 1], *m;
     struct dirent	*deskp, *subp;
@@@@ -312,8 +312,8 @@@@ const mode_t	mode;
                 strcmp( deskp->d_name, ".." ) == 0 || strlen( deskp->d_name ) > 2 ) {
             continue;
         }
-        strcpy( modbuf, deskp->d_name );
-        strcat( modbuf, "/" );
+        (void)strlcpy(modbuf, deskp->d_name, sizeof(modbuf));
+        (void)strlcat(modbuf, "/", sizeof(modbuf));
         m = strchr( modbuf, '\0' );
         if (( sub = opendir( deskp->d_name )) == NULL ) {
             continue;
@@@@ -324,7 +324,7 @@@@ const mode_t	mode;
                 continue;
             }
             *m = '\0';
-            strcat( modbuf, subp->d_name );
+            (void)strlcat( modbuf, subp->d_name, sizeof(modbuf));
             /* XXX: need to preserve special modes */
             if (stat(modbuf, &st) < 0) {
                 LOG(log_error, logtype_afpd, "setdeskmode: stat %s: %s",
@@@@ -388,7 +388,7 @@@@ const mode_t mode;
 const int noadouble;
 const int dropbox;
 {
-    char		buf[ MAXPATHLEN + 1];
+    char		buf[MAXPATHLEN];
     struct stat		st;
     char		*m;
     struct dirent	*dirp;
@@@@ -436,8 +436,8 @@@@ const int dropbox;
         LOG(log_error, logtype_afpd, "setdirmode: opendir .AppleDouble: %s", strerror(errno) );
         return( -1 );
     }
-    strcpy( buf, ".AppleDouble" );
-    strcat( buf, "/" );
+    (void)strlcpy(buf, ".AppleDouble", sizeof(buf));
+    (void)strlcat(buf, "/" ,sizeof(buf));
     m = strchr( buf, '\0' );
     for ( dirp = readdir( dir ); dirp != NULL; dirp = readdir( dir )) {
         if ( strcmp( dirp->d_name, "." ) == 0 ||
@@@@ -445,7 +445,7 @@@@ const int dropbox;
             continue;
         }
         *m = '\0';
-        strcat( buf, dirp->d_name );
+        (void)strlcat(buf, dirp->d_name, sizeof(buf));
 
         if ( stat( buf, &st ) < 0 ) {
             LOG(log_error, logtype_afpd, "setdirmode: stat %s: %s", buf, strerror(errno) );
@@@@ -476,7 +476,7 @@@@ int setdeskowner( uid, gid )
 const uid_t	uid;
 const gid_t	gid;
 {
-    char		wd[ MAXPATHLEN + 1];
+    char		wd[MAXPATHLEN];
     char		modbuf[12 + 1], *m;
     struct dirent	*deskp, *subp;
     DIR			*desk, *sub;
@@@@ -499,8 +499,8 @@@@ const gid_t	gid;
                 strlen( deskp->d_name ) > 2 ) {
             continue;
         }
-        strcpy( modbuf, deskp->d_name );
-        strcat( modbuf, "/" );
+        (void)strlcpy(modbuf, deskp->d_name, sizeof(modbuf));
+        (void)strlcat(modbuf, "/", sizeof(modbuf));
         m = strchr( modbuf, '\0' );
         if (( sub = opendir( deskp->d_name )) == NULL ) {
             continue;
@@@@ -511,7 +511,7 @@@@ const gid_t	gid;
                 continue;
             }
             *m = '\0';
-            strcat( modbuf, subp->d_name );
+            (void)strlcat(modbuf, subp->d_name, sizeof(modbuf));
             /* XXX: add special any uid, ignore group bits */
             if ( chown( modbuf, uid, gid ) < 0 && errno != EPERM ) {
                 LOG(log_error, logtype_afpd, "setdeskown: chown %s: %s",
@@@@ -547,7 +547,7 @@@@ const uid_t	uid;
 const gid_t	gid;
 const int   noadouble;
 {
-    char		buf[ MAXPATHLEN + 1];
+    char		buf[MAXPATHLEN];
     struct stat		st;
     char		*m;
     struct dirent	*dirp;
@@@@ -579,8 +579,8 @@@@ const int   noadouble;
             goto setdirowner_noadouble;
         return( -1 );
     }
-    strcpy( buf, ".AppleDouble" );
-    strcat( buf, "/" );
+    (void)strlcpy(buf, ".AppleDouble", sizeof(buf));
+    (void)strlcat(buf, "/", sizeof(buf));
     m = strchr( buf, '\0' );
     for ( dirp = readdir( dir ); dirp != NULL; dirp = readdir( dir )) {
         if ( strcmp( dirp->d_name, "." ) == 0 ||
@@@@ -588,7 +588,7 @@@@ const int   noadouble;
             continue;
         }
         *m = '\0';
-        strcat( buf, dirp->d_name );
+        (void)strlcat(buf, dirp->d_name, sizeof(buf));
         if ( chown( buf, uid, gid ) < 0 && errno != EPERM ) {
             LOG(log_debug, logtype_afpd, "setdirowner: chown %d/%d %s: %s",
                 uid, gid, buf, strerror(errno) );
@


1.2
log
@update to 1.6.3; from Ian McWilliam <ianm@@cit.uws.edu.au>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Fix a lot of problem with afpd.
From maintainer Ian McWilliam <i.mcwilliam@@uws.edu.au>.
@
text
@d2 57
a58 3
--- etc/afpd/unix.c.orig	Wed Jul 24 16:22:55 2002
+++ etc/afpd/unix.c	Wed Jul 24 16:35:55 2002
@@@@ -132,11 +132,11 @@@@ struct maccess	*ma;
d60 43
a102 6
     if ( (uuid == stat->st_uid) || (uuid == 0)) {
         ma->ma_user = ma->ma_owner | AR_UOWN;
-    } else if ( gmem( stat->st_gid )) {
-        ma->ma_user = ma->ma_group;
-    } else {
-        ma->ma_user = ma->ma_world;
d104 16
a119 20
+    if ( gmem( stat->st_gid )) {
+        ma->ma_user |= ma->ma_group;
+    }
+    ma->ma_user |= ma->ma_world;
 
     /*
      * There are certain things the mac won't try if you don't have
@@@@ -202,10 +202,10 @@@@ struct maccess	*ma;
     mode_t		mode;
 
     mode = 0;
-    mode |= mtoubits( ma->ma_owner );
+    mode |= mtoubits( ma->ma_owner | ma->ma_world);
     mode = mode << 3;
 
-    mode |= mtoubits( ma->ma_group );
+    mode |= mtoubits( ma->ma_group | ma->ma_world);
     mode = mode << 3;
 
     mode |= mtoubits( ma->ma_world );
@

