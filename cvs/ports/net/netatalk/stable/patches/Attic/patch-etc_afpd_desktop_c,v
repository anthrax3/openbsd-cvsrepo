head	1.3;
access;
symbols
	OPENBSD_4_0:1.2.0.14
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.12
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.10
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.8
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.1.1.1.0.4
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.2
	OPENBSD_3_2_BASE:1.1.1.1
	naddy_20020723:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2006.09.22.05.56.25;	author pvalchev;	state dead;
branches;
next	1.2;

1.2
date	2003.08.22.11.18.19;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.23.11.52.12;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.07.23.11.52.12;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to netatalk-2.0.3 and get rid of old directory structure.
A long due update with important features such as long filenames,
unicode, etc.
From new maintainer "Arnaud Bergeron" <abergeron@@gmail.com>
@
text
@$OpenBSD: patch-etc_afpd_desktop_c,v 1.2 2003/08/22 11:18:19 naddy Exp $
--- etc/afpd/desktop.c.orig	Tue Nov 26 13:57:58 2002
+++ etc/afpd/desktop.c	Mon Aug 18 15:15:32 2003
@@@@ -572,12 +572,12 @@@@ geticon_exit:
 static char		hexdig[] = "0123456789abcdef";
 char *dtfile(const struct vol *vol, u_char creator[], char *ext )
 {
-    static char	path[ MAXPATHLEN + 1];
+    static char	path[MAXPATHLEN];
     char	*p;
     int		i;
 
-    strcpy( path, vol->v_path );
-    strcat( path, "/.AppleDesktop/" );
+    (void)strlcpy( path, vol->v_path, sizeof(path));
+    (void)strlcat( path, "/.AppleDesktop/", sizeof(path));
     for ( p = path; *p != '\0'; p++ )
         ;
 
@@@@ -599,14 +599,14 @@@@ char *dtfile(const struct vol *vol, u_ch
         }
     }
     *p = '\0';
-    strcat( path, ext );
+    (void)strlcat(path, ext, sizeof(path));
 
     return( path );
 }
 
 char *mtoupath(const struct vol *vol, char *mpath)
 {
-    static char  upath[ MAXPATHLEN + 1];
+    static char  upath[MAXPATHLEN];
     char	*m, *u;
     int		 i = 0;
 
@@@@ -681,7 +681,7 @@@@ char *mtoupath(const struct vol *vol, ch
 
 char *utompath(const struct vol *vol, char *upath)
 {
-    static char  mpath[ MAXPATHLEN + 1];
+    static char  mpath[MAXPATHLEN];
     char        *m, *u;
     int          h;
 
@@@@ -718,7 +718,7 @@@@ char *utompath(const struct vol *vol, ch
     *m = '\0';
 
 #ifdef FILE_MANGLING
-    strcpy(mpath,mangle(vol, mpath));
+    (void)strlcpy(mpath,mangle(vol, mpath),sizeof(mpath));
 #endif /* FILE_MANGLING */
 
 #ifdef DEBUG
@


1.2
log
@update to 1.6.3; from Ian McWilliam <ianm@@cit.uws.edu.au>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d2 17
a18 8
--- etc/afpd/desktop.c.orig	Thu Jan  3 08:03:37 2002
+++ etc/afpd/desktop.c	Sat Jun 15 05:09:57 2002
@@@@ -71,7 +71,7 @@@@ int		ibuflen, *rbuflen;
     return( AFP_OK );
 }
 
-struct savedt	si = { { 0, 0, 0, 0 }, -1, 0 };
+struct savedt	si = { { 0, 0, 0, 0 }, -1, 0, 0 };
d20 1
a20 15
 static int iconopen( vol, creator, flags, mode )
 struct vol	*vol;
@@@@ -80,7 +80,10 @@@@ u_char	creator[ 4 ];
     char	*dtf, *adt, *adts;
 
     if ( si.sdt_fd != -1 ) {
-        if ( memcmp( si.sdt_creator, creator, sizeof( CreatorType )) == 0 &&
+        if ( 		si.sdt_creator[0] == creator[0] &&
+			si.sdt_creator[1] == creator[1] &&
+			si.sdt_creator[2] == creator[2] &&
+			si.sdt_creator[3] == creator[3] &&
                 si.sdt_vid == vol->v_vid ) {
             return 0;
         }
@@@@ -114,7 +117,10 @@@@ u_char	creator[ 4 ];
d23 30
d54 1
a54 17
-    memcpy( si.sdt_creator, creator, sizeof( CreatorType ));
+	si.sdt_creator[0] == creator[0];
+	si.sdt_creator[1] == creator[1];
+	si.sdt_creator[2] == creator[2];
+	si.sdt_creator[3] == creator[3];
     si.sdt_vid = vol->v_vid;
     si.sdt_index = 1;
     return 0;
@@@@ -587,7 +593,7 @@@@ char *dtfile(const struct vol *vol, u_ch
 
     *p++ = '/';
 
-    for ( i = 0; i < sizeof( CreatorType ); i++ ) {
+    for ( i = 0; i <  4; i++ ) {
         if ( !isprint( creator[ i ] ) || creator[ i ] == '/' ) {
             *p++ = hexdig[ ( creator[ i ] & 0xf0 ) >> 4 ];
             *p++ = hexdig[ creator[ i ] & 0x0f ];
@


1.1.1.1
log
@Import netatalk 1.5.3.1.
Submitted by Ian McWilliam <i.mcwilliam@@uws.edu.au>.

AFP file and print services for AppleTalk/IP networks
@
text
@@
