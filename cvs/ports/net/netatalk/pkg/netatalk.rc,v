head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.6
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.4.0.8
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.7
date	2015.11.29.15.50.20;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	R4zDyQEPMusoKaj3;

1.6
date	2015.02.17.22.08.36;	author sthen;	state Exp;
branches;
next	1.5;
commitid	xaIHtCntkggL7CxN;

1.5
date	2014.12.08.10.57.09;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	pz71RdO0gxd0iylf;

1.4
date	2012.08.25.10.15.47;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2012.07.04.13.00.46;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2012.04.22.13.44.09;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2012.04.11.18.39.13;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.7
log
@daemon_timeout is not passed to the child scripts either.
@
text
@#!/bin/sh
#
# $OpenBSD: netatalk.rc,v 1.6 2015/02/17 22:08:36 sthen Exp $

# "meta" script running the following rc.d(8) scripts with the given argument;
# note that daemon_flags, daemon_user, daemon_timeout and daemon_class are not
# passed to the child scripts.
_pkg_scripts="cnid_metad afpd"

if [ "$1" = restart ]; then
	$0 stop && $0 start
	exit
fi

if [ "$1" = stop ]; then
	for _i in ${_pkg_scripts}; do _l="${_i} ${_l}"; done
	_pkg_scripts=${_l% }
fi

for _i in ${_pkg_scripts}; do
	if [[ -x ${RCDIR}/${_i} ]]; then
		${RCDIR}/${_i} $@@ || exit $?
	fi
done
@


1.6
log
@Adjust the "meta" rc-scripts (these are used in ports with multiple daemons
which should all be started/stopped together), previously "restart" would
restart each sub-daemon in turn, but actually it should stop all daemons
and only then start them again. Additionally, as suggested by ajacoutot,
stop the procedure and return an error if stopping one of the rc scripts
failed.  ok ajacoutot@@ rpe@@
@
text
@d3 1
a3 1
# $OpenBSD: netatalk.rc,v 1.5 2014/12/08 10:57:09 ajacoutot Exp $
d6 2
a7 2
# note that daemon_flags, daemon_user and daemon_class are not passed to
# the child scripts.
@


1.5
log
@Make all meta rc.d scripts consistent.
While here, unbreak when options are passed (e.g. /etc/rc.d/foobar -df start)

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: netatalk.rc,v 1.4 2012/08/25 10:15:47 ajacoutot Exp $
d10 5
d20 5
a24 1
for _i in ${_pkg_scripts}; do [[ -x ${RCDIR}/${_i} ]] && ${RCDIR}/${_i} $@@; done
@


1.4
log
@Simplify how the order of the _pkg_scripts entries get reversed on stop.

from rpe, ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: netatalk.rc,v 1.3 2012/07/04 13:00:46 ajacoutot Exp $
d15 1
a15 1
for _i in ${_pkg_scripts}; do ${RCDIR}/${_i} $1; done
@


1.3
log
@Add comment that daemon_flags, daemon_user and daemon_class are not passed
to the child scripts.
@
text
@d3 1
a3 1
# $OpenBSD: netatalk.rc,v 1.2 2012/04/22 13:44:09 ajacoutot Exp $
a9 2
set -A _s -- ${_pkg_scripts}

d11 2
a12 7
	i=$(echo ${_pkg_scripts} | wc -w)
	while [ $i -ne 0 ]; do
		i=$((i-1))
		${RCDIR}/${_s[$i]} $1
	done
else
	for i in ${_pkg_scripts}; do ${RCDIR}/$i $1; done
d14 2
@


1.2
log
@/etc/rc.d -> RCDIR
@
text
@d3 1
a3 1
# $OpenBSD: netatalk.rc,v 1.1 2012/04/11 18:39:13 sthen Exp $
d5 3
a7 1
# "meta" script running the following rc.d(8) scripts with the given argument
@


1.1
log
@update to netatalk 2.2.2, from Brad, tested by william@@ and Ian McWilliam
- support for MacOS X Lion and TimeMachine
- add rc scripts
@
text
@d3 1
a3 1
# $OpenBSD$
d14 1
a14 1
		/etc/rc.d/${_s[$i]} $1
d17 1
a17 1
	for i in ${_pkg_scripts}; do /etc/rc.d/$i $1; done
@

