head	1.2;
access;
symbols
	OPENBSD_3_1:1.1.0.10
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.8
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2002.07.23.11.54.37;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	99.12.15.02.56.53;	author kevlo;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Finish netatalk reorganization and update.
Submitted by maintainer Ian McWilliam <i.mcwilliam@@uws.edu.au>.
@
text
@--- libatalk/asp/asp_getsess.c.orig	Sun Aug 17 09:20:31 1997
+++ libatalk/asp/asp_getsess.c	Wed Nov 10 14:54:49 1999
@@@@ -6,7 +6,6 @@@@
 #include <sys/errno.h>
 #include <sys/time.h>
 #include <sys/types.h>
-#include <sys/signal.h>
 #include <sys/uio.h>
 #include <sys/wait.h>
 #include <sys/syslog.h>
@@@@ -16,8 +15,11 @@@@
 #include <atalk/compat.h>
 #include <atalk/atp.h>
 #include <atalk/asp.h>
+#include <signal.h>
 #include <stdio.h>
 #include <stdlib.h>
+#include <unistd.h>
+#include <string.h>
 
 #include "asp_child.h"
 
@@@@ -143,7 +145,7 @@@@
     ASP			aspret;
     char		rdata[ ATP_MAXDATA ];
     int			sid, csid, pid;
-    u_short		asperr;
+    u_int16_t		asperr;
     extern int		errno;
 
     if (( asp_ac =
@@@@ -180,7 +182,7 @@@@
     }
 
     for (;;) {
-	bzero( &sat, sizeof( struct sockaddr_at ));
+	memset( &sat, 0, sizeof( struct sockaddr_at ));
 #ifdef BSD4_4
 	sat.sat_len = sizeof( struct sockaddr_at );
 #endif BSD4_4
@@@@ -205,7 +207,7 @@@@
 #endif EBUG
 	    if ( asp->asp_slen > 0 ) {
 		rdata[ 0 ] = 0;
-		bcopy( asp->asp_status, &rdata[ 4 ], asp->asp_slen );
+		memcpy( &rdata[ 4 ], asp->asp_status, asp->asp_slen );
 		iov[ 0 ].iov_base = rdata;
 		iov[ 0 ].iov_len = 4 + asp->asp_slen;
 		atpb.atp_sresiov = iov;
@@@@ -284,7 +286,7 @@@@
 		    break;
 		}
 	    }
-	    bcopy( &asperr, &rdata[ 2 ], sizeof( u_short ));
+	    memcpy( &rdata[ 2 ], &asperr, sizeof( asperr ));
 	    iov[ 0 ].iov_base = rdata;
 	    iov[ 0 ].iov_len = 4;
 	    atpb.atp_sresiov = iov;
@@@@ -309,6 +311,7 @@@@
  * itself, since once asp_getsess() gets into control, it will never
  * return.
  */
+int
 asp_kill( signal )
     int		signal;
 {
@@@@ -326,6 +329,7 @@@@
     return( 0 );
 }
 
+int
 asp_attentionall( code )
     short	code;
 {
@@@@ -346,6 +350,7 @@@@
 /*
  * Note that code is passed in network byte-order (foolishly).
  */
+int
 asp_attention( code, sid )
     short	code, sid;
 {
@@@@ -354,7 +359,7 @@@@
     char		sdata[ 4 ], rdata[ 4 ];
 
     sdata[ 0 ] = ASPFUNC_ATTN;
-    bcopy( &code, &sdata[ 2 ], sizeof( short ));
+    memcpy( &sdata[ 2 ], &code, sizeof( code ));
     iov[ 0 ].iov_base = rdata;
     iov[ 0 ].iov_len = sizeof( rdata );
 
@


1.1
log
@95% of the warnings are fixed. Port no longer destroys /etc/netatalk/rc.atalk
if it exists.
@
text
@@

