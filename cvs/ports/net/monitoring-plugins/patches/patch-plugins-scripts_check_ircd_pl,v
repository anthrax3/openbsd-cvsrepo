head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2017.01.30.20.32.12;	author sthen;	state Exp;
branches;
next	1.1;
commitid	oEsOyKfdUZR7oFag;

1.1
date	2017.01.27.10.20.17;	author sthen;	state Exp;
branches;
next	;
commitid	jG7cRaf2I5gMKlKp;


desc
@@


1.2
log
@add pull request url
@
text
@$OpenBSD: patch-plugins-scripts_check_ircd_pl,v 1.1 2017/01/27 10:20:17 sthen Exp $

Fix unportable code which assumes sockaddr does not include a length field.
https://github.com/monitoring-plugins/monitoring-plugins/pull/1463

--- plugins-scripts/check_ircd.pl.orig	Fri Jan 27 10:13:26 2017
+++ plugins-scripts/check_ircd.pl	Fri Jan 27 10:13:57 2017
@@@@ -144,7 +144,6 @@@@ sub bindRemote ($$)
 {
 	my ($in_remotehost, $in_remoteport) = @@_;
 	my $proto = getprotobyname('tcp');
-	my $sockaddr;
 	my $that;
 	my ($name, $aliases,$type,$len,$thataddr) = gethostbyname($in_remotehost);
 
@@@@ -152,8 +151,7 @@@@ sub bindRemote ($$)
 	    print "IRCD UNKNOWN: Could not start socket ($!)\n";
 	    exit $ERRORS{"UNKNOWN"};
 	}
-	$sockaddr = 'S n a4 x8';
-	$that = pack($sockaddr, AF_INET, $in_remoteport, $thataddr);
+	$that = pack_sockaddr_in ($in_remoteport, $thataddr);
 	if (!connect(ClientSocket, $that)) { 
 	    print "IRCD UNKNOWN: Could not connect socket ($!)\n";
 	    exit $ERRORS{"UNKNOWN"};
@


1.1
log
@Replace handrolled pack with pack_sockaddr_in to fix check_ircd on systems
where sockaddr_storage includes a length. Diff from Alf Schlichting with one
minor tweak by me.
@
text
@d1 1
a1 1
$OpenBSD$
d4 1
@

