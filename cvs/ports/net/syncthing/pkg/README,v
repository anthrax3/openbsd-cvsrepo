head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.6
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	edd_20160421:1.1.1.1
	edd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.05.25.13.41.43;	author edd;	state Exp;
branches;
next	1.1;
commitid	QqlaKkWcotdkHCfC;

1.1
date	2016.04.21.19.01.31;	author edd;	state Exp;
branches
	1.1.1.1;
next	;
commitid	3G9c2dOBSVGttlPP;

1.1.1.1
date	2016.04.21.19.01.31;	author edd;	state Exp;
branches;
next	;
commitid	3G9c2dOBSVGttlPP;


desc
@@


1.2
log
@Update to syncthing-0.13.2.

OK awolk@@
@
text
@$OpenBSD: README,v 1.1.1.1 2016/04/21 19:01:31 edd Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Compatibility
=============

Please note that not all versions of Syncthing are compatible. The
second number in the release string must match. E.g. 0.12.x is not
compatible with 0.13.x. If you mismatch the versions, hosts will fail to
discover each other.

Starting Syncthing
==================

There are a couple of different ways to invoke Syncthing. Which is best
for you will depend upon how many users will run Syncthing concurrently.

Starting via RC script
----------------------

Syncthing can be started via the included RC script, thus running
Syncthing as a system service. This is fine for single user
configurations. Under this mode of operation, Syncthing will run as the
_syncthing user and store the default 'Sync' folder under
${VARBASE}/syncthing.

Starting Manually
-----------------

The other way is to simply invoke ${TRUEPREFIX}/bin/syncthing manually.
This is a better choice for situations where several users all want to
run their own instances of Syncthing. Under this mode, the default
'Sync' folder will be stored in the user's home directory. Users will
have to configure Syncthing to listen on different TCP ports for this
method to work.

It might be desirable to have Syncthing executed on system reboot for
each user individually. To achieve this a crontab entry can be created
on per-user basis:

@@reboot tmux new-session -d '${TRUEPREFIX}/bin/syncthing'

This will result in a new tmux(1) session being spawned each system
boot. The user can later use `tmux attach` to view and control their
Syncthing process.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: README.template,v 1.4 2011/06/02 13:44:40 ajacoutot Exp $
d6 8
@


1.1.1.1
log
@Import net/syncthing. A file synchroniser.

Based on work by czarkoff@@

Input from czarkoff@@, awolk@@ and sthen@@.

OK awolk@@ (and from czarkoff@@ for a slightly earlier version).

Thanks!
@
text
@@
