head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.42
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.40
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.38
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.34
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.36
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.32
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.30
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.28
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.26
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.24
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.22
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.20
	OPENBSD_5_0:1.1.0.18
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.16
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.14
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.12
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.10
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.8
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2007.03.15.07.56.33;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.1
log
@update p5-Net-Ping-External to 0.12
@
text
@$OpenBSD$
--- test.pl.orig	Wed Feb 14 14:36:12 2007
+++ test.pl	Wed Feb 14 14:36:50 2007
@@@@ -6,7 +6,7 @@@@
 # Change 1..1 below to 1..last_test_to_print .
 # (It may become useful if the test is moved to ./t subdirectory.)
 
-BEGIN { $| = 1; $num_tests = 6; print "1..$num_tests\n"; }
+BEGIN { $| = 1; $num_tests = 5; print "1..$num_tests\n"; }
 END {print "not ok 1\n" unless $loaded;}
 use Net::Ping::External qw(ping);
 $loaded = 1;
@@@@ -21,9 +21,8 @@@@ print "ok 1\n";
 %test_names = (1 => "use Net::Ping::External qw(ping)",
 	       2 => "ping(host => '127.0.0.1')",
 	       3 => "ping(host => '127.0.0.1', timeout => 5)",
-	       4 => "ping(host => 'some.non.existent.host')",
-	       5 => "ping(host => '127.0.0.1', count => 10)",
-	       6 => "ping(host => '127.0.0.1', size => 32)"
+	       4 => "ping(host => '127.0.0.1', count => 10)",
+	       5 => "ping(host => '127.0.0.1', size => 32)"
 	      );
 
 @@passed = ();
@@@@ -51,8 +50,8 @@@@ else {
   push @@failed, 3;
 }
 
-eval { $ret = ping(host => 'some.non.existent.host') };
-if (!$@@ && !$ret) {
+eval { $ret = ping(host => '127.0.0.1', count => 2) };
+if (!$@@ && $ret) {
   print "ok 4\n";
   push @@passed, 4;
 }
@@@@ -61,7 +60,7 @@@@ else {
   push @@failed, 4;
 }
 
-eval { $ret = ping(host => '127.0.0.1', count => 2) };
+eval { $ret = ping(host => '127.0.0.1', size => 32) };
 if (!$@@ && $ret) {
   print "ok 5\n";
   push @@passed, 5;
@@@@ -69,16 +68,6 @@@@ if (!$@@ && $ret) {
 else {
   print "not ok 5\n";
   push @@failed, 5;
-}
-
-eval { $ret = ping(host => '127.0.0.1', size => 32) };
-if (!$@@ && $ret) {
-  print "ok 6\n";
-  push @@passed, 6;
-}
-else {
-  print "not ok 6\n";
-  push @@failed, 6;
 }
 
 print "\nRunning a more verbose test suite.";
@
