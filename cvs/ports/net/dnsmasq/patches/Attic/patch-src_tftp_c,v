head	1.11;
access;
symbols
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.5.0.2
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2;
locks; strict;
comment	@# @;


1.11
date	2012.04.30.06.02.51;	author ajacoutot;	state dead;
branches;
next	1.10;

1.10
date	2011.09.07.10.34.26;	author jasper;	state Exp;
branches;
next	1.9;

1.9
date	2011.03.06.11.19.53;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2011.01.10.22.08.26;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2009.12.27.19.34.33;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2009.08.31.18.01.01;	author rui;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.14.17.07.25;	author kili;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2008.06.05.19.38.39;	author rui;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2007.09.26.19.51.33;	author rui;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.31.04.28.33;	author rui;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.17.21.55.54;	author jolan;	state Exp;
branches;
next	;

1.4.4.1
date	2009.09.15.02.40.22;	author william;	state Exp;
branches;
next	;

1.5.2.1
date	2009.11.10.03.42.49;	author william;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Update to dnsmasq 2.61.
Add rc.d(8) script.

from Brad
@
text
@$OpenBSD: patch-src_tftp_c,v 1.10 2011/09/07 10:34:26 jasper Exp $

gcc2 fixes to struct errmess, struct oackmess, struct datamess

--- src/tftp.c.orig	Tue Aug  9 08:41:48 2011
+++ src/tftp.c	Mon Aug 29 17:35:40 2011
@@@@ -611,7 +611,7 @@@@ static ssize_t tftp_err(int err, char *packet, char *m
 {
   struct errmess {
     unsigned short op, err;
-    char message[];
+    char message[0];
   } *mess = (struct errmess *)packet;
   ssize_t ret = 4;
   char *errstr = strerror(errno);
@@@@ -638,7 +638,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
       char *p;
       struct oackmess {
 	unsigned short op;
-	char data[];
+	char data[0];
       } *mess = (struct oackmess *)packet;
       
       p = mess->data;
@@@@ -661,7 +661,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
       /* send data packet */
       struct datamess {
 	unsigned short op, block;
-	unsigned char data[];
+	unsigned char data[0];
       } *mess = (struct datamess *)packet;
       
       size_t size = transfer->file->size - transfer->offset; 
@


1.10
log
@- update to 2.58

from brad
@
text
@d1 1
a1 1
$OpenBSD: patch-src_tftp_c,v 1.9 2011/03/06 11:19:53 sthen Exp $
@


1.9
log
@update dnsmasq to 2.57; from Brad, maintainer timeout
@
text
@d1 1
a1 1
$OpenBSD: patch-src_tftp_c,v 1.8 2011/01/10 22:08:26 ajacoutot Exp $
d3 1
a3 1
gcc2 fixes to struct errmess, struct oackmess, struct datamess from kili
d5 3
a7 3
--- src/tftp.c.orig	Tue Jan 18 17:23:57 2011
+++ src/tftp.c	Tue Feb 15 19:11:50 2011
@@@@ -606,7 +606,7 @@@@ static ssize_t tftp_err(int err, char *packet, char *m
d16 1
a16 1
@@@@ -633,7 +633,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
d25 1
a25 1
@@@@ -656,7 +656,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
@


1.8
log
@Update to dnsmasq 2.55.

From Brad, maintainer timeout
ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_tftp_c,v 1.7 2009/12/27 19:34:33 sthen Exp $
d5 3
a7 3
--- src/tftp.c.orig	Sun Jun  6 15:22:30 2010
+++ src/tftp.c	Tue Dec 28 18:55:44 2010
@@@@ -549,7 +549,7 @@@@ static ssize_t tftp_err(int err, char *packet, char *m
d16 1
a16 1
@@@@ -576,7 +576,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
d25 1
a25 1
@@@@ -599,7 +599,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
@


1.7
log
@Update to 2.51, various updates and rolls in the security fixes for
CVE-2009-2957 and CVE-2009-2958 relating to tftp (these were fixed in
2.50; we had them as patches in -current before).

ok rui@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_tftp_c,v 1.6 2009/08/31 18:01:01 rui Exp $
d5 3
a7 3
--- src/tftp.c.orig	Tue Aug 25 20:51:53 2009
+++ src/tftp.c	Thu Dec 24 14:21:01 2009
@@@@ -495,7 +495,7 @@@@ static ssize_t tftp_err(int err, char *packet, char *m
d16 1
a16 1
@@@@ -522,7 +522,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
d25 1
a25 1
@@@@ -545,7 +545,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
@


1.6
log
@Security fix for CVE-2009-2957,2958

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 2
CVE-2009-2957,2958
plus gcc2 fixes to struct errmess, struct oackmess, struct datamess from kili
d5 3
a7 69
--- src/tftp.c.orig	Mon Jun  8 22:12:43 2009
+++ src/tftp.c	Sun Aug 30 22:21:35 2009
@@@@ -192,20 +192,21 @@@@ void tftp_request(struct listener *listen, time_t now)
       
       while ((opt = next(&p, end)))
 	{
-	  if (strcasecmp(opt, "blksize") == 0 &&
-	      (opt = next(&p, end)) &&
-	      !(daemon->options & OPT_TFTP_NOBLOCK))
+	  if (strcasecmp(opt, "blksize") == 0)
 	    {
-	      transfer->blocksize = atoi(opt);
-	      if (transfer->blocksize < 1)
-		transfer->blocksize = 1;
-	      if (transfer->blocksize > (unsigned)daemon->packet_buff_sz - 4)
-		transfer->blocksize = (unsigned)daemon->packet_buff_sz - 4;
-	      transfer->opt_blocksize = 1;
-	      transfer->block = 0;
+	      if ((opt = next(&p, end)) &&
+		  !(daemon->options & OPT_TFTP_NOBLOCK))
+		{
+		  transfer->blocksize = atoi(opt);
+		  if (transfer->blocksize < 1)
+		    transfer->blocksize = 1;
+		  if (transfer->blocksize > (unsigned)daemon->packet_buff_sz - 4)
+		    transfer->blocksize = (unsigned)daemon->packet_buff_sz - 4;
+		  transfer->opt_blocksize = 1;
+		  transfer->block = 0;
+		}
 	    }
-	  
-	  if (strcasecmp(opt, "tsize") == 0 && next(&p, end) && !transfer->netascii)
+	  else if (strcasecmp(opt, "tsize") == 0 && next(&p, end) && !transfer->netascii)
 	    {
 	      transfer->opt_transize = 1;
 	      transfer->block = 0;
@@@@ -217,17 +218,17 @@@@ void tftp_request(struct listener *listen, time_t now)
 	{
 	  if (daemon->tftp_prefix[0] == '/')
 	    daemon->namebuff[0] = 0;
-	  strncat(daemon->namebuff, daemon->tftp_prefix, MAXDNAME);
+	  strncat(daemon->namebuff, daemon->tftp_prefix, (MAXDNAME-1) - strlen(daemon->namebuff));
 	  if (daemon->tftp_prefix[strlen(daemon->tftp_prefix)-1] != '/')
-	    strncat(daemon->namebuff, "/", MAXDNAME);
+	    strncat(daemon->namebuff, "/", (MAXDNAME-1) - strlen(daemon->namebuff));
 
 	  if (daemon->options & OPT_TFTP_APREF)
 	    {
 	      size_t oldlen = strlen(daemon->namebuff);
 	      struct stat statbuf;
 	      
-	      strncat(daemon->namebuff, inet_ntoa(peer.sin_addr), MAXDNAME);
-	      strncat(daemon->namebuff, "/", MAXDNAME);
+	      strncat(daemon->namebuff, inet_ntoa(peer.sin_addr), (MAXDNAME-1) - strlen(daemon->namebuff));
+	      strncat(daemon->namebuff, "/", (MAXDNAME-1) - strlen(daemon->namebuff));
 	      
 	      /* remove unique-directory if it doesn't exist */
 	      if (stat(daemon->namebuff, &statbuf) == -1 || !S_ISDIR(statbuf.st_mode))
@@@@ -245,8 +246,7 @@@@ void tftp_request(struct listener *listen, time_t now)
 	}
       else if (filename[0] == '/')
 	daemon->namebuff[0] = 0;
-      strncat(daemon->namebuff, filename, MAXDNAME);
-      daemon->namebuff[MAXDNAME-1] = 0;
+      strncat(daemon->namebuff, filename, (MAXDNAME-1) - strlen(daemon->namebuff));
 
       /* check permissions and open file */
       if ((transfer->file = check_tftp_fileperm(&len)))
@@@@ -481,7 +481,7 @@@@ static ssize_t tftp_err(int err, char *packet, char *m
d16 1
a16 1
@@@@ -508,7 +508,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
d25 1
a25 1
@@@@ -531,7 +531,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
@


1.5
log
@
Update to version 2.49.

Unbreak tftp, since converting the struct members from arrays to
pointers badly broke the code,

ok rui@@ (maintainer).
@
text
@d1 73
a73 3
$OpenBSD: patch-src_tftp_c,v 1.4 2008/06/05 19:38:39 rui Exp $
--- src/tftp.c.orig	Mon Jun  8 23:12:43 2009
+++ src/tftp.c	Sat Jun 13 12:05:54 2009
@


1.5.2.1
log
@MFC:

SECURITY FIX

Resolves CVE-2009-2957,2958
@
text
@d1 3
a3 73
$OpenBSD$

CVE-2009-2957,2958
plus gcc2 fixes to struct errmess, struct oackmess, struct datamess from kili

--- src/tftp.c.orig	Mon Jun  8 22:12:43 2009
+++ src/tftp.c	Sun Aug 30 22:21:35 2009
@@@@ -192,20 +192,21 @@@@ void tftp_request(struct listener *listen, time_t now)
       
       while ((opt = next(&p, end)))
 	{
-	  if (strcasecmp(opt, "blksize") == 0 &&
-	      (opt = next(&p, end)) &&
-	      !(daemon->options & OPT_TFTP_NOBLOCK))
+	  if (strcasecmp(opt, "blksize") == 0)
 	    {
-	      transfer->blocksize = atoi(opt);
-	      if (transfer->blocksize < 1)
-		transfer->blocksize = 1;
-	      if (transfer->blocksize > (unsigned)daemon->packet_buff_sz - 4)
-		transfer->blocksize = (unsigned)daemon->packet_buff_sz - 4;
-	      transfer->opt_blocksize = 1;
-	      transfer->block = 0;
+	      if ((opt = next(&p, end)) &&
+		  !(daemon->options & OPT_TFTP_NOBLOCK))
+		{
+		  transfer->blocksize = atoi(opt);
+		  if (transfer->blocksize < 1)
+		    transfer->blocksize = 1;
+		  if (transfer->blocksize > (unsigned)daemon->packet_buff_sz - 4)
+		    transfer->blocksize = (unsigned)daemon->packet_buff_sz - 4;
+		  transfer->opt_blocksize = 1;
+		  transfer->block = 0;
+		}
 	    }
-	  
-	  if (strcasecmp(opt, "tsize") == 0 && next(&p, end) && !transfer->netascii)
+	  else if (strcasecmp(opt, "tsize") == 0 && next(&p, end) && !transfer->netascii)
 	    {
 	      transfer->opt_transize = 1;
 	      transfer->block = 0;
@@@@ -217,17 +218,17 @@@@ void tftp_request(struct listener *listen, time_t now)
 	{
 	  if (daemon->tftp_prefix[0] == '/')
 	    daemon->namebuff[0] = 0;
-	  strncat(daemon->namebuff, daemon->tftp_prefix, MAXDNAME);
+	  strncat(daemon->namebuff, daemon->tftp_prefix, (MAXDNAME-1) - strlen(daemon->namebuff));
 	  if (daemon->tftp_prefix[strlen(daemon->tftp_prefix)-1] != '/')
-	    strncat(daemon->namebuff, "/", MAXDNAME);
+	    strncat(daemon->namebuff, "/", (MAXDNAME-1) - strlen(daemon->namebuff));
 
 	  if (daemon->options & OPT_TFTP_APREF)
 	    {
 	      size_t oldlen = strlen(daemon->namebuff);
 	      struct stat statbuf;
 	      
-	      strncat(daemon->namebuff, inet_ntoa(peer.sin_addr), MAXDNAME);
-	      strncat(daemon->namebuff, "/", MAXDNAME);
+	      strncat(daemon->namebuff, inet_ntoa(peer.sin_addr), (MAXDNAME-1) - strlen(daemon->namebuff));
+	      strncat(daemon->namebuff, "/", (MAXDNAME-1) - strlen(daemon->namebuff));
 	      
 	      /* remove unique-directory if it doesn't exist */
 	      if (stat(daemon->namebuff, &statbuf) == -1 || !S_ISDIR(statbuf.st_mode))
@@@@ -245,8 +246,7 @@@@ void tftp_request(struct listener *listen, time_t now)
 	}
       else if (filename[0] == '/')
 	daemon->namebuff[0] = 0;
-      strncat(daemon->namebuff, filename, MAXDNAME);
-      daemon->namebuff[MAXDNAME-1] = 0;
+      strncat(daemon->namebuff, filename, (MAXDNAME-1) - strlen(daemon->namebuff));
 
       /* check permissions and open file */
       if ((transfer->file = check_tftp_fileperm(&len)))
@


1.4
log
@- maintenance update to dnsmasq 2.42

feedback and ok okan@@
@
text
@d1 4
a4 4
$OpenBSD: patch-src_tftp_c,v 1.3 2007/09/26 19:51:33 rui Exp $
--- src/tftp.c.orig	Sat May 24 10:32:02 2008
+++ src/tftp.c	Wed Jun  4 09:32:56 2008
@@@@ -484,7 +484,7 @@@@ static ssize_t tftp_err(int err, char *packet, char *m
d9 1
a9 1
+    char *message;
d13 1
a13 1
@@@@ -512,7 +512,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
d18 1
a18 1
+	char *data;
d22 1
a22 1
@@@@ -535,7 +535,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
d27 1
a27 1
+	unsigned char *data;
@


1.4.4.1
log
@MFC:

SECURITY FIX

Resolves CVE-2009-2957,2958

ok jasper@@
@
text
@d1 3
a3 72
$OpenBSD: patch-src_tftp_c,v 1.4 2008/06/05 19:38:39 rui Exp $

First 3 hunks resolve CVE-2009-2957,2958

--- src/tftp.c.orig	Sun Jul 20 14:26:07 2008
+++ src/tftp.c	Sat Sep 12 18:37:45 2009
@@@@ -195,20 +195,21 @@@@ void tftp_request(struct listener *listen, time_t now)
       
       while ((opt = next(&p, end)))
 	{
-	  if (strcasecmp(opt, "blksize") == 0 &&
-	      (opt = next(&p, end)) &&
-	      !(daemon->options & OPT_TFTP_NOBLOCK))
+	  if (strcasecmp(opt, "blksize") == 0)
 	    {
-	      transfer->blocksize = atoi(opt);
-	      if (transfer->blocksize < 1)
-		transfer->blocksize = 1;
-	      if (transfer->blocksize > (unsigned)daemon->packet_buff_sz - 4)
-		transfer->blocksize = (unsigned)daemon->packet_buff_sz - 4;
-	      transfer->opt_blocksize = 1;
-	      transfer->block = 0;
+	      if ((opt = next(&p, end)) &&
+		  !(daemon->options & OPT_TFTP_NOBLOCK))
+		{
+		  transfer->blocksize = atoi(opt);
+		  if (transfer->blocksize < 1)
+		    transfer->blocksize = 1;
+		  if (transfer->blocksize > (unsigned)daemon->packet_buff_sz - 4)
+		    transfer->blocksize = (unsigned)daemon->packet_buff_sz - 4;
+		  transfer->opt_blocksize = 1;
+		  transfer->block = 0;
+		}
 	    }
-	  
-	  if (strcasecmp(opt, "tsize") == 0 && next(&p, end) && !transfer->netascii)
+	  else if (strcasecmp(opt, "tsize") == 0 && next(&p, end) && !transfer->netascii)
 	    {
 	      transfer->opt_transize = 1;
 	      transfer->block = 0;
@@@@ -220,17 +221,17 @@@@ void tftp_request(struct listener *listen, time_t now)
 	{
 	  if (daemon->tftp_prefix[0] == '/')
 	    daemon->namebuff[0] = 0;
-	  strncat(daemon->namebuff, daemon->tftp_prefix, MAXDNAME);
+	  strncat(daemon->namebuff, daemon->tftp_prefix, (MAXDNAME-1) - strlen(daemon->namebuff));
 	  if (daemon->tftp_prefix[strlen(daemon->tftp_prefix)-1] != '/')
-	    strncat(daemon->namebuff, "/", MAXDNAME);
+	    strncat(daemon->namebuff, "/", (MAXDNAME-1) - strlen(daemon->namebuff));
 
 	  if (daemon->options & OPT_TFTP_APREF)
 	    {
 	      size_t oldlen = strlen(daemon->namebuff);
 	      struct stat statbuf;
 	      
-	      strncat(daemon->namebuff, inet_ntoa(peer.sin_addr), MAXDNAME);
-	      strncat(daemon->namebuff, "/", MAXDNAME);
+	      strncat(daemon->namebuff, inet_ntoa(peer.sin_addr), (MAXDNAME-1) - strlen(daemon->namebuff));
+	      strncat(daemon->namebuff, "/", (MAXDNAME-1) - strlen(daemon->namebuff));
 	      
 	      /* remove unique-directory if it doesn't exist */
 	      if (stat(daemon->namebuff, &statbuf) == -1 || !S_ISDIR(statbuf.st_mode))
@@@@ -248,8 +249,7 @@@@ void tftp_request(struct listener *listen, time_t now)
 	}
       else if (filename[0] == '/')
 	daemon->namebuff[0] = 0;
-      strncat(daemon->namebuff, filename, MAXDNAME);
-      daemon->namebuff[MAXDNAME-1] = 0;
+      strncat(daemon->namebuff, filename, (MAXDNAME-1) - strlen(daemon->namebuff));
 
       /* check permissions and open file */
       if ((transfer->file = check_tftp_fileperm(&len)))
@


1.3
log
@update dnsmasq to 2.40 and take over maintainership.

ok merdely@@
@
text
@d1 4
a4 4
$OpenBSD$
--- src/tftp.c.orig	Mon Jul 23 19:33:37 2007
+++ src/tftp.c	Tue Sep 25 09:28:25 2007
@@@@ -448,7 +448,7 @@@@ static ssize_t tftp_err(int err, char *packet, char *m
d13 1
a13 1
@@@@ -476,7 +476,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
d22 1
a22 1
@@@@ -499,7 +499,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
d30 1
a30 1
       off_t offset = transfer->blocksize * (transfer->block - 1);
@


1.2
log
@update dnsmasq to 2.39

ok maintainer, "looks good" aanriot@@
@
text
@d2 3
a4 3
--- src/tftp.c.orig	Wed Mar 21 19:28:47 2007
+++ src/tftp.c	Sat May 26 18:26:21 2007
@@@@ -441,7 +441,7 @@@@ static ssize_t tftp_err(int err, char *packet, char *m
d13 1
a13 1
@@@@ -469,7 +469,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
d22 1
a22 1
@@@@ -492,7 +492,7 @@@@ static ssize_t get_block(char *packet, struct tftp_tra
@


1.1
log
@update to 2.38, from rui reis (maintainer timeout)
@
text
@d2 3
a4 3
--- src/tftp.c.orig	Sun Mar  4 15:26:58 2007
+++ src/tftp.c	Sun Mar  4 15:27:38 2007
@@@@ -432,7 +432,7 @@@@ static ssize_t tftp_err(int err, char *p
d13 1
a13 1
@@@@ -460,7 +460,7 @@@@ static ssize_t get_block(char *packet, s
d22 1
a22 1
@@@@ -483,7 +483,7 @@@@ static ssize_t get_block(char *packet, s
@

