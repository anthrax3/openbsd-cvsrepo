head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.2
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.8.0.8
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.10
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.6
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.2
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.12
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.10
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.8
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.6
	OPENBSD_5_0:1.7.0.4
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	pea_20091110:1.1.1.1
	pea:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2016.08.03.13.06.42;	author ajacoutot;	state Exp;
branches;
next	1.9;
commitid	Ayvq9GseHPYe2ZHi;

1.9
date	2016.03.20.19.56.50;	author naddy;	state Exp;
branches;
next	1.8;
commitid	WXJcpbKc0PauxEav;

1.8
date	2014.01.01.20.46.28;	author naddy;	state Exp;
branches;
next	1.7;

1.7
date	2010.12.03.11.45.41;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2010.10.18.18.36.49;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.13.21.08.00;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2009.11.13.12.00.07;	author pea;	state Exp;
branches;
next	1.3;

1.3
date	2009.11.11.16.46.43;	author pea;	state Exp;
branches;
next	1.2;

1.2
date	2009.11.10.15.10.00;	author pea;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.10.14.33.50;	author pea;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.11.10.14.33.50;	author pea;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Zap trailing spaces at EOL.
@
text
@# $OpenBSD: Makefile,v 1.9 2016/03/20 19:56:50 naddy Exp $

COMMENT =	perl module for mon

DISTNAME = 	mon-client-${V}

PKGNAME = 	p5-Mon-${V}
REVISION =	4

MODULES = 	cpan
PKG_ARCH = 	*

DISTFILES = 	mon-client-${V}.tar.gz \
		mon-${V}.tar.gz

post-install:
		${INSTALL_DATA_DIR} ${PREFIX}/lib/mon/
		${INSTALL_SCRIPT} ${WRKDIR}/mon-${V}/clients/mon.cgi \
			${PREFIX}/lib/mon/mon.cgi
		${INSTALL_SCRIPT} ${WRKDIR}/mon-${V}/clients/monshow \
			${PREFIX}/bin/
		${INSTALL_SCRIPT} ${WRKDIR}/mon-${V}/clients/moncmd \
			${PREFIX}/bin/
		${INSTALL_MAN} ${WRKDIR}/mon-${V}/doc/moncmd.1 \
			${PREFIX}/man/man1/
		${INSTALL_MAN} ${WRKDIR}/mon-${V}/doc/monshow.1 \
			${PREFIX}/man/man1/

.include <bsd.port.mk>
@


1.9
log
@Remove SHARED_ONLY from all CPAN Perl ports and the cpan and perl MODULES.
Add WANTLIB+=perl and PKG_ARCH=* as appropriate.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2014/01/01 20:46:28 naddy Exp $
d8 1
a8 1
REVISION =	3
@


1.8
log
@Drop USE_GROFF since groff and mandoc produce identical output.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2010/12/03 11:45:41 ajacoutot Exp $
d11 1
@


1.7
log
@Bump after recent cpan.port.mk change.
ok jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2010/10/18 18:36:49 espie Exp $
a10 1
USE_GROFF =	Yes
@


1.6
log
@USE_GROFF=Yes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2010/07/13 21:08:00 sthen Exp $
d8 1
a8 1
REVISION =	2
@


1.5
log
@use REVISION.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2009/11/13 12:00:07 pea Exp $
d11 1
@


1.4
log
@Fix PKGNAME
ok ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2009/11/11 16:46:43 pea Exp $
d7 2
a8 1
PKGNAME = 	p5-Mon-${V}p2
@


1.3
log
@Change PKGNAME and add @@pkgpath to handle the old module that
was in sysutils/p5-Mon.
Bump pkgname.

ok ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2009/11/10 15:10:00 pea Exp $
d7 1
a7 1
PKGNAME = 	p5-Monp1
@


1.2
log
@..and bump PKGNAME

No cookies for me today (thx jasper@@ and ajacoutot@@)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2009/11/10 14:33:50 pea Exp $
d7 1
a7 2
# To avoid the name p5-mon-client-${V}
PKGNAME = 	${DISTNAME}p0
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d8 1
a8 1
PKGNAME = 	${DISTNAME}
@


1.1.1.1
log
@First import of mon.

mon is a tool for monitoring the availability of services, and sending alerts
on prescribed events. Services are defined as anything tested by a "monitor"
program, which can be something as simple as pinging a system, or as complex
as analyzing the results of an application-level transaction. Alerts are
actions such as sending emails, making submissions to ticketing systems, or
triggering resource fail-over in a high-availability cluster.

ok jasper@@

@
text
@@
