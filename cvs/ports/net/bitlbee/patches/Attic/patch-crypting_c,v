head	1.3;
access;
symbols
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.1.0.8
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.6
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2008.04.09.22.13.12;	author merdely;	state dead;
branches;
next	1.2;

1.2
date	2006.04.11.15.11.33;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.20.16.27.49;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to 1.2.
V1.2 adds nice "account set #" feature to manage accounts.
Remove a lot of string handling patches.
Remove patches to rename bitlbee "root" user to "bitlbee".

tested by Andrew Dalgleish (MAINTAINER), James Turner and Wiktor Izdebski
ok martynas@@, simon@@, okan@@, wcmaier@@
@
text
@$OpenBSD: patch-crypting_c,v 1.2 2006/04/11 15:11:33 naddy Exp $
--- crypting.c.orig	Sun Jan 15 02:04:28 2006
+++ crypting.c	Sun Jan 29 03:27:22 2006
@@@@ -117,11 +117,15 @@@@ char *hashpass (irc_t *irc) {
 	int i;
 	char digits[3];
 	char *rv;
+	size_t rv_len;
 	
 	if (irc->password == NULL) return (NULL);
 	
-	rv = (char *)g_malloc (33);
-	memset (rv, 0, 33);
+	rv_len = 33;
+	rv = (char *)g_malloc (rv_len);
+	if (!rv) return NULL;
+
+	memset (rv, 0, rv_len);
 	
 	md5_init (&md5state);
 	md5_append (&md5state, (unsigned char *)irc->password, strlen (irc->password));
@@@@ -130,7 +134,7 @@@@ char *hashpass (irc_t *irc) {
 	for (i = 0; i < 16; i++) {
 		/* Build a hash of the pass */
 		g_snprintf (digits, sizeof (digits), "%02x", digest[i]);
-		strcat (rv, digits);
+		strlcat (rv, digits, rv_len);
 	}
 	
 	return (rv);
@@@@ -229,6 +233,7 @@@@ int main( int argc, char *argv[] )
 		return( main( 0, NULL ) );
 	}
 	
+	COMPILE_TIME_ASSERTION(255 < sizeof(s));
 	while( fscanf( stdin, "%[^\n]255s", line ) > 0 )
 	{
 		char *out;
@


1.2
log
@update to 1.0.2; from maintainer Andrew Dalgleish
@
text
@d1 1
a1 1
$OpenBSD: patch-crypting_c,v 1.1 2004/06/20 16:27:49 naddy Exp $
@


1.1
log
@Update to 0.90.
Partial audit for string handling.

From: Andrew Dalgleish <openbsd@@ajd.net.au>
@
text
@d1 4
a4 4
$OpenBSD$
--- crypting.c.orig	2004-05-05 00:25:36.000000000 +1000
+++ crypting.c	2004-06-08 20:08:19.000000000 +1000
@@@@ -111,11 +111,15 @@@@ char *hashpass (irc_t *irc) {
d21 2
a22 2
 	md5_append (&md5state, irc->password, strlen (irc->password));
@@@@ -124,7 +128,7 @@@@ char *hashpass (irc_t *irc) {
d31 1
a31 37
@@@@ -133,11 +137,15 @@@@ char *hashpass (irc_t *irc) {
 char *obfucrypt (irc_t *irc, char *line) {
 	int i, j;
 	char *rv;
+	size_t rv_len;
 	
 	if (irc->password == NULL) return (NULL);
 	
-	rv = (char *)g_malloc (strlen (line) + 1);
-	memset (rv, '\0', strlen (line) + 1);
+	rv_len = strlen (line) + 1;
+	rv = (char *)g_malloc (rv_len);
+	if (!rv) return NULL;
+
+	memset (rv, 0, rv_len);
 	
 	i = j = 0;
 	while (*line) {
@@@@ -158,11 +166,15 @@@@ char *obfucrypt (irc_t *irc, char *line)
 char *deobfucrypt (irc_t *irc, char *line) {
 	int i, j;
 	char *rv;
+	size_t rv_len;
 	
 	if (irc->password == NULL) return (NULL);
 	
-	rv = (char *)g_malloc (strlen (line) + 1);
-	memset (rv, '\0', strlen (line) + 1);
+	rv_len = strlen (line) + 1;
+	rv = (char *)g_malloc (rv_len);
+	if (!rv) return NULL;
+
+	memset (rv, 0, rv_len);
 	
 	i = j = 0;
 	while (*line) {
@@@@ -224,6 +236,7 @@@@ int main( int argc, char *argv[] )
@

