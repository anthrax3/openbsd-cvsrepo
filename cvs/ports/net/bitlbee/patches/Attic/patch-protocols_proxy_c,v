head	1.3;
access;
symbols
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.1.0.6
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.4
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.2
	OPENBSD_4_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2008.04.09.22.13.12;	author merdely;	state dead;
branches;
next	1.2;

1.2
date	2007.11.19.11.44.33;	author martynas;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.11.15.11.33;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to 1.2.
V1.2 adds nice "account set #" feature to manage accounts.
Remove a lot of string handling patches.
Remove patches to rename bitlbee "root" user to "bitlbee".

tested by Andrew Dalgleish (MAINTAINER), James Turner and Wiktor Izdebski
ok martynas@@, simon@@, okan@@, wcmaier@@
@
text
@$OpenBSD: patch-protocols_proxy_c,v 1.2 2007/11/19 11:44:33 martynas Exp $
--- protocols/proxy.c.orig	Mon Aug 20 16:27:14 2007
+++ protocols/proxy.c	Mon Nov 19 13:39:01 2007
@@@@ -25,6 +25,7 @@@@
  , 2nd provide an easy way to add socks support */
 
 #define BITLBEE_CORE
+#include <assert.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@@@ -82,6 +83,7 @@@@ static struct sockaddr_in *gaim_gethostbyname(const ch
 			return NULL;
 		}
 		memset(&sin, 0, sizeof(struct sockaddr_in));
+		assert(hp->h_length <= sizeof(sin.sin_addr.s_addr));
 		memcpy(&sin.sin_addr.s_addr, hp->h_addr, hp->h_length);
 		sin.sin_family = hp->h_addrtype;
 	} else
@@@@ -406,6 +408,7 @@@@ static void s5_sendconnect(gpointer data, gint source)
 	buf[2] = 0x00;		/* reserved */
 	buf[3] = 0x03;		/* address type -- host name */
 	buf[4] = hlen;
+	assert(hlen <= sizeof(buf)-5);
 	memcpy(buf + 5, phb->host, hlen);
 	buf[5 + strlen(phb->host)] = phb->port >> 8;
 	buf[5 + strlen(phb->host) + 1] = phb->port & 0xff;
@@@@ -474,8 +477,10 @@@@ static void s5_canread(gpointer data, gint source, Gai
 		unsigned int i = strlen(proxyuser), j = strlen(proxypass);
 		buf[0] = 0x01;	/* version 1 */
 		buf[1] = i;
+		assert(i <= sizeof(buf)-2);
 		memcpy(buf + 2, proxyuser, i);
 		buf[2 + i] = j;
+		assert(j <= sizeof(buf)-2-i-1);
 		memcpy(buf + 2 + i + 1, proxypass, j);
 		if (write(source, buf, 3 + i + j) < 3 + i + j) {
 			close(source);
@


1.2
log
@update to bitlbee-1.0.4
ok simon@@ and maintainer Andrew Dalgleish;  tested by Wiktor Izdebski
@
text
@d1 1
a1 1
$OpenBSD: patch-protocols_proxy_c,v 1.1 2006/04/11 15:11:33 naddy Exp $
@


1.1
log
@update to 1.0.2; from maintainer Andrew Dalgleish
@
text
@d1 3
a3 3
$OpenBSD$
--- protocols/proxy.c.orig	Fri Dec  9 22:59:55 2005
+++ protocols/proxy.c	Sun Jan 29 03:37:58 2006
d12 1
a12 1
@@@@ -82,6 +83,7 @@@@ static struct sockaddr_in *gaim_gethostb
d20 1
a20 1
@@@@ -406,6 +408,7 @@@@ static void s5_sendconnect(gpointer data
d28 1
a28 1
@@@@ -474,8 +477,10 @@@@ static void s5_canread(gpointer data, gi
@

