head	1.11;
access;
symbols
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.2
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.11
date	2010.11.15.08.11.17;	author jasper;	state dead;
branches;
next	1.10;

1.10
date	2009.09.07.04.34.54;	author todd;	state Exp;
branches;
next	1.9;

1.9
date	2009.06.18.16.18.12;	author todd;	state Exp;
branches;
next	1.8;

1.8
date	2009.03.28.16.11.48;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2009.03.26.21.28.47;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.24.19.59.18;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.21.02.57.51;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.12.17.31.17;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.12.00.12.07;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.08.15.45.55;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2008.07.21.03.13.01;	author todd;	state Exp;
branches;
next	;


desc
@@


1.11
log
@- switch to pkg-readmes

ok todd@@ (MAINTAINER)
@
text
@Using OpenAFS in an OpenBSD environment

Some knob twiddling you may find useful:

  1. Increase the default maximum number of open files in /etc/login.conf
     for daemon to at least a few thousand.

        :openfiles-cur=infinity:\

  2. If you increase #1 above the default then consider also updating
     kern.maxfiles in /etc/sysctl.conf:

	kern.maxfiles=102400            # increase maximum files

  3. Setting up kerberos authentication for users is accomplished by modifying
     /etc/login.conf's auth-defaults line:

	auth-defaults:auth=krb5-or-pwd,passwd,skey:

     Please note if you have a local password and wish to login using that
     instead of kerberos, you'll need to use 'username:passwd' to login.

To setup OpenAFS, you must first have a KerberosV realm setup.  Below
are brief instructions to do so.  See 'info heimdal' for further details.

Once the KerberosV realm is setup, run '${TRUEPREFIX}/sbin/openafs-setup'
to setup your first OpenAFS server in your cell.

Add the below to /etc/rc.local:

   if [ -x ${TRUEPREFIX}/sbin/bosserver ]; then
	echo -n " openafs"
	PATH=${TRUEPREFIX}/bin:${TRUEPREFIX}/sbin:$PATH

	# help this detach from console, proper fix is to properly daemonize!
	sh -c "bosserver -log -syslog > /dev/null 2>&1 &"

	# give the servers started by bosserver time to settle
	# before attacking it with salvaging activity
	sleep 10
	
        # to salvage automatically on startup, for the paranoid
        echo -n "(salvaging"
	set -A volumes $(
		vos listvol localhost -noauth 2> /dev/null| \
		awk '
		/ partition / { sub(":","",$9); part=$9; next; }
		/\?\?.* K Not attached/ { printf "%s %s\n",part,$2; }
		/R[OW].* K .*-line/ { printf "%s %s\n",part,$2; }'
	)

	# 20 dots total, adjust based on volume count
	freq=$((${#volumes[*]}/20))
	i=0
	while [ i -lt ${#volumes[*]} ]
	do
		# progress by volume count
		if [ $(((i/2)%freq)) -eq 0 ]; then
			echo -n .
		fi
		part=${volumes[$i]}
		let i=i+1
		vid=${volumes[$i]}
		let i=i+1
		bos salvage localhost $part $vid -orphans attach -localauth > /var/tmp/$vid.log 2>&1
	done

        echo -n ")"
   fi

Add the following to /etc/rc.shutdown:

   if [ -x ${TRUEPREFIX}/bin/bos ]; then
        ${TRUEPREFIX}/bin/bos shutdown localhost -localauth -wait
        sleep 1
        pkill bosserver
   fi


Quick Start Guide to KerberosV as needed by OpenAFS
---------------------------------------------------

For KerberosV setup, it is highly recommended to have some entries
in the DNS domain that you will use that is the lowercase equivalent
of your KerberosV realm name.  If, for example, you had the domain
'example.com' you would have a realm of 'EXAMPLE.COM' and add the
following to the 'example.com' zone file:

  _kerberos._udp      SRV 0 0 88 kdc0
  _kerberos._tcp      SRV 0 0 88 kdc0
  _kpasswd._udp       SRV 0 0 464 kdc0
  _kerberos-adm._tcp  SRV 0 0 749 kdc0
  _kerberos           TXT "EXAMPLE.COM"

Setting a default krb5.conf is useful on all AFS clients and servers.

  cd /etc/kerberosV
  REALM=EXAMPLE.COM
  cell=example.com
  host=kdc0
  sed 's/%host%/'$host'/g;s/%cell%/'$cell'/g;s/%REALM%/'$REALM'/g' \
	< ${TRUEPREFIX}/share/examples/openafs/krb5.conf > krb5.conf

Create the heimdal directory:

  mkdir -m 700 /var/heimdal

Initialize the basic key:

  kstash --random-key

Initialize the Kerberos realm:

  kadmin -l
   kadmin> init EXAMPLE.COM
   Max ticket life [1 day]:unlimited
   Max renewable life [1 week]:unlimited
   kadmin> add todd/admin
   Max ticket life [1 day]:
   Max renewable life [1 week]:
   Principal expiration time [never]:
   Password expiration time [never]:
   Attributes []:
   todd/admin@@EXAMPLE.COM's Password: 
   Verifying - todd/admin@@EXAMPLE.COM's Password: 

 .. do this last part per KerberosV client and server:
  
   kadmin> add --random-key host/kdc0.example.com
   Max ticket life [1 day]:unlimited
   Max renewable life [1 week]:unlimited
   Principal expiration time [never]:
   Password expiration time [never]:
   Attributes []:
   kadmin> ext host/kdc0.example.com
   kadmin> quit

On the server run:

   /usr/libexec/kdc &

Verify authentication works:

  kinit todd/admin
  todd/admin@@EXAMPLE.COM's Password: 
  klist
   Credentials cache: FILE:/tmp/krb5cc_1000
        Principal: todd/admin@@EXAMPLE.COM

     Issued           Expires          Principal
   Jul 20 22:10:41  Aug 30 22:10:41  krbtgt/EXAMPLE.COM@@EXAMPLE.COM

Permit network based kerberos administration:

  /usr/libexec/kadmind &

Setup the acl file:

 Put the following into /var/heimdal/kadmind.acl:

   todd/admin@@EXAMPLE.COM	all

Make sure things startup properly upon reboot:

 Put the following into /etc/rc.conf.local:

   krb5_master_kdc=YES
@


1.10
log
@o s/xfs/nnpfs/g
o attach orphan files dont nuke during salvage
o bump pkgname
@
text
@@


1.9
log
@o correct example output
o fix tyop
bump
@
text
@d48 1
d65 1
a65 1
		bos salvage localhost $part $vid -localauth > /var/tmp/$vid.log 2>&1
@


1.8
log
@- use TRUEPREFIX instead of LOCALBASE where it makes sense (following
previous commit)
- fix mkdir args (from todd@@)

ok todd@@ (maintainer)
@
text
@a116 5
   Principal expiration time [never]:
   Password expiration time [never]:
   Attributes []:
   todd@@EXAMPLE.COM's Password: 
   Verifying - todd@@EXAMPLE.COM's Password: 
d143 2
a144 2
  kinit todd
  todd@@EXAMPLE.COM's Password: 
d147 1
a147 1
        Principal: todd@@EXAMPLE.COM
@


1.7
log
@PREFIX -> LOCALBASE, my bad, caused installation ``fun''
.. found first by Josh Grosse josh at jgimi dot homeip dot net
.. reminded by Alexander Hall alexander at beard dot se
.. tested by Alexander
use $SUDO_USER if it exists instead of defaulting to 'todd'
use $defuser for example afs homedir
bump pkgname
@
text
@d26 1
a26 1
Once the KerberosV realm is setup, run '${LOCALBASE}/sbin/openafs-setup'
d31 1
a31 1
   if [ -x ${LOCALBASE}/sbin/bosserver ]; then
d33 1
a33 1
	PATH=${LOCALBASE}/bin:${LOCALBASE}/sbin:$PATH
d72 2
a73 2
   if [ -x ${LOCALBASE}/bin/bos ]; then
        ${LOCALBASE}/bin/bos shutdown localhost -localauth -wait
d101 1
a101 1
	< ${LOCALBASE}/share/examples/openafs/krb5.conf > krb5.conf
d105 1
a105 1
  mkdir -p 700 /var/heimdal
@


1.6
log
@Instead of commenting out an example full salvage of the server, suggest a
volume by volume salvage by default.  This way, servers with lots of files
can be up salvaging volume by volume instead of down until the last volume
is salvaged.
"if it works, go for it" ckuethe@@
@
text
@d26 1
a26 1
Once the KerberosV realm is setup, run '${PREFIX}/sbin/openafs-setup'
d31 1
a31 1
   if [ -x ${PREFIX}/sbin/bosserver ]; then
d33 1
a33 1
	PATH=${PREFIX}/bin:${PREFIX}/sbin:$PATH
d72 2
a73 2
   if [ -x ${PREFIX}/bin/bos ]; then
        ${PREFIX}/bin/bos shutdown localhost -localauth -wait
d101 1
a101 1
	< ${PREFIX}/share/examples/openafs/krb5.conf > krb5.conf
@


1.5
log
@o remove bogus vars in commented out suggested rc.local bit in README.OpenBSD
o function'ize openafs-setup and let it setup not just the 1st but also
  subsequent afs servers, letting admins choose which afs server programs to
  run on each, `works for me(tm)'
bump PKGNAME
@
text
@d29 1
a29 1
Finally, you should add the below to /etc/rc.local:
a33 1
	${PREFIX}/sbin/bosserver -log -syslog
d35 7
d43 25
a67 3
        #echo -n "(salvaging afs volumes ..."
        #${PREFIX}/bin/bos salvage localhost -all -orphans attach -localauth
        #echo -n " done)"
d70 1
a70 1
and add the following to /etc/rc.shutdown:
@


1.4
log
@- s/LOCALBASE/PREFIX
- s/%SYSCONFDIR%/etc where it makes sense (e.g. /etc/rc.conf.local will
always be /etc/rc.conf.local whatever value ${SYSCONFDIR} is set to)
- use SUBST_CMD
- don't hardcode /usr/local
- precise license marker
- s/definately/definitely/ (from sthen@@)

"looks good" sthen@@, ok todd@@
@
text
@d37 1
a37 1
        #echo -n "(salvaging afs volumes $start ..."
d39 1
a39 1
        #echo -n " $stop done)"
@


1.3
log
@o add autoconf to CONFIGURE_STYLE to fix autoconf depend
o no longer require kernel sources since not building lkm; if this changes,
  the attic can be raided
o typo in openafs-setup comments from sthen@@; thanks!
o obey CFLAGS and CC
o twiddle lwp.h patch to be OpenBSD specific
bump PKGNAME
@
text
@d26 1
a26 1
Once the KerberosV realm is setup, run '%LOCALBASE%/sbin/openafs-setup'
d31 1
a31 1
   if [ -x /usr/local/sbin/bosserver ]; then
d33 2
a34 2
	PATH=/usr/local/bin:/usr/local/sbin:$PATH
	/usr/local/sbin/bosserver -log -syslog
d38 1
a38 1
        #/usr/local/bin/bos salvage localhost -all -orphans attach -localauth
d44 2
a45 2
   if [ -x /usr/local/bin/bos ]; then
        /usr/local/bin/bos shutdown localhost -localauth -wait
d73 1
a73 1
	< %LOCALBASE%/share/examples/openafs/krb5.conf > krb5.conf
@


1.2
log
@o fix autoconf dependency; otherwise any autoconf-* would match then it would
  fail to exec autoconf-2.60
o update README.OpenBSD to include rc.local and rc.shutdown bits
o invade and cleanup openafs-setup
  - polish consistency
  - prompt for a sample general purpose user
  - backup CellServDB and restore on script failure
  - compact output
  - better cleanup incase it is restarted
  - show all afs commands as they are run
  - reorder various places to make more logical sense
  - DO NOT DO RECURSIVE MOUNTS, this leads to panics;
    (thanks bob/art for explaining).. i.e. no 'fs mkm /afs/.root.afs root.afs')
  - add a few gratuitous remote cells during setup as examples
  - add files of consequence to /etc/changelist
bump PKGNAME
@
text
@d10 1
a10 1
  2. If you increase #2 above 1772 then consider also updating
@


1.1
log
@o update openafs to 1.4.7
o add README.OpenBSD (includes heimdal setup instructions)
o rework openafs-setup to use arla's afsd in base, and heimdal
o fix a bug since 4.1 to not blow the thread stack on 64bit time functions in libc
@
text
@d27 1
a27 1
and follow the instructions there to setup OpenAFS.
d29 20
@

