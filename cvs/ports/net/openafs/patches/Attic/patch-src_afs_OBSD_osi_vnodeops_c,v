head	1.2;
access;
symbols
	OPENBSD_4_3:1.1.1.1.0.10
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.8
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.6
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.4
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.2
	OPENBSD_3_9_BASE:1.1.1.1
	openafs-2006_01_30:1.1.1.1
	openafs:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.07.21.03.13.01;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2006.01.31.02.49.24;	author marco;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.01.31.02.49.24;	author marco;	state Exp;
branches;
next	;


desc
@@


1.2
log
@o update openafs to 1.4.7
o add README.OpenBSD (includes heimdal setup instructions)
o rework openafs-setup to use arla's afsd in base, and heimdal
o fix a bug since 4.1 to not blow the thread stack on 64bit time functions in libc
@
text
@$OpenBSD: patch-src_afs_OBSD_osi_vnodeops_c,v 1.1 2006/01/31 02:49:24 marco Exp $
--- src/afs/OBSD/osi_vnodeops.c.orig	Sun Jan 30 22:18:25 2005
+++ src/afs/OBSD/osi_vnodeops.c	Wed Nov 30 15:03:35 2005
@@@@ -933,8 +933,7 @@@@ afs_nbsd_lock(void *v)
 
     if (!vc)
 	panic("afs_nbsd_lock: null vcache");
-    return lockmgr(&vc->rwlock, ap->a_flags | LK_CANRECURSE, &vp->v_interlock,
-		   ap->a_p);
+    return lockmgr(&vc->rwlock, ap->a_flags | LK_CANRECURSE, &vp->v_interlock);
 }
 
 int
@@@@ -950,8 +949,7 @@@@ afs_nbsd_unlock(void *v)
 
     if (!vc)
 	panic("afs_nbsd_unlock: null vcache");
-    return lockmgr(&vc->rwlock, ap->a_flags | LK_RELEASE, &vp->v_interlock,
-		   ap->a_p);
+    return lockmgr(&vc->rwlock, ap->a_flags | LK_RELEASE, &vp->v_interlock);
 }
 
 int
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@initial import of openafs
@
text
@@
