head	1.2;
access;
symbols
	OPENBSD_4_3:1.1.1.1.0.10
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.8
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.6
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.4
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.2
	OPENBSD_3_9_BASE:1.1.1.1
	openafs-2006_01_30:1.1.1.1
	openafs:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.07.21.03.13.01;	author todd;	state dead;
branches;
next	1.1;

1.1
date	2006.01.31.02.49.24;	author marco;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.01.31.02.49.24;	author marco;	state Exp;
branches;
next	;


desc
@@


1.2
log
@o update openafs to 1.4.7
o add README.OpenBSD (includes heimdal setup instructions)
o rework openafs-setup to use arla's afsd in base, and heimdal
o fix a bug since 4.1 to not blow the thread stack on 64bit time functions in libc
@
text
@$OpenBSD: patch-src_afs_OBSD_osi_machdep_h,v 1.1 2006/01/31 02:49:24 marco Exp $
--- src/afs/OBSD/osi_machdep.h.orig	Wed Nov 30 14:50:21 2005
+++ src/afs/OBSD/osi_machdep.h	Wed Nov 30 14:49:53 2005
@@@@ -114,7 +114,7 @@@@ extern struct lock afs_global_lock;
 #define AFS_GLOCK() \
     do { \
         osi_Assert(curproc); \
- 	lockmgr(&afs_global_lock, LK_EXCLUSIVE, 0, curproc); \
+ 	lockmgr(&afs_global_lock, LK_EXCLUSIVE, 0); \
         osi_Assert(afs_global_owner == NULL); \
    	afs_global_owner = curproc; \
     } while (0)
@@@@ -123,7 +123,7 @@@@ extern struct lock afs_global_lock;
         osi_Assert(curproc); \
  	osi_Assert(afs_global_owner == curproc); \
         afs_global_owner = NULL; \
-        lockmgr(&afs_global_lock, LK_RELEASE, 0, curproc); \
+        lockmgr(&afs_global_lock, LK_RELEASE, 0); \
     } while(0)
 #define ISAFS_GLOCK() (afs_global_owner == curproc && curproc)
 #else
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@initial import of openafs
@
text
@@
