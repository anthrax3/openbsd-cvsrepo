head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.26
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.24
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.22
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.18
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.20
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.16
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.12
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.03.02.10.40.16;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2008.07.21.03.13.01;	author todd;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- add missing rcs id'd
@
text
@$OpenBSD$
diff -u src/rx/rx_getaddr.c.orig src/rx/rx_getaddr.c
--- src/rx/rx_getaddr.c.orig	Wed Oct 11 06:29:02 2006
+++ src/rx/rx_getaddr.c	Tue Apr 22 17:22:55 2008
@@@@ -169,6 +169,12 @@@@ rx_getAllAddr_internal(afs_int32 buffer[], int maxSize
     next = buf;
     while (next < lim) {
 	ifm = (struct if_msghdr *)next;
+#if defined(AFS_OBSD42_ENV)
+	if (ifm->ifm_version != RTM_VERSION) {
+	    next += ifm->ifm_msglen;
+	    continue;
+	}
+#endif
 	if (ifm->ifm_type != RTM_IFINFO) {
 	    dpf(("out of sync parsing NET_RT_IFLIST\n"));
 	    free(buf);
@@@@ -180,6 +186,12 @@@@ rx_getAllAddr_internal(afs_int32 buffer[], int maxSize
 	addrcount = 0;
 	while (next < lim) {
 	    nextifm = (struct if_msghdr *)next;
+#if defined(AFS_OBSD42_ENV)
+	    if (nextifm->ifm_version != RTM_VERSION) {
+		next += nextifm->ifm_msglen;
+		continue;
+	    }
+#endif
 	    if (nextifm->ifm_type != RTM_NEWADDR)
 		break;
 	    if (ifam == NULL)
@@@@ -256,6 +268,12 @@@@ rxi_getAllAddrMaskMtu(afs_int32 addrBuffer[], afs_int3
     next = buf;
     while (next < lim) {
 	ifm = (struct if_msghdr *)next;
+#if defined(AFS_OBSD42_ENV)
+	if (ifm->ifm_version != RTM_VERSION) {
+	    next += ifm->ifm_msglen;
+	    continue;
+	}
+#endif
 	if (ifm->ifm_type != RTM_IFINFO) {
 	    dpf(("out of sync parsing NET_RT_IFLIST\n"));
 	    free(buf);
@@@@ -267,6 +285,12 @@@@ rxi_getAllAddrMaskMtu(afs_int32 addrBuffer[], afs_int3
 	addrcount = 0;
 	while (next < lim) {
 	    nextifm = (struct if_msghdr *)next;
+#if defined(AFS_OBSD42_ENV)
+	    if (nextifm->ifm_version != RTM_VERSION) {
+		next += nextifm->ifm_msglen;
+		continue;
+	    }
+#endif
 	    if (nextifm->ifm_type != RTM_NEWADDR)
 		break;
 	    if (ifam == NULL)
@


1.1
log
@o update openafs to 1.4.7
o add README.OpenBSD (includes heimdal setup instructions)
o rework openafs-setup to use arla's afsd in base, and heimdal
o fix a bug since 4.1 to not blow the thread stack on 64bit time functions in libc
@
text
@d1 1
@

