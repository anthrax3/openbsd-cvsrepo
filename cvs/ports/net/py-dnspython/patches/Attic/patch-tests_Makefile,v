head	1.2;
access;
symbols
	benoit_20090604:1.1.1.1 benoit:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2009.06.04.09.14.06;	author benoit;	state dead;
branches;
next	1.1;

1.1
date	2009.06.04.08.04.28;	author benoit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.04.08.04.28;	author benoit;	state Exp;
branches;
next	;


desc
@@


1.2
log
@resolve conflict
CVolve conflict: ----------------------------------------------------------------------
@
text
@$OpenBSD: patch-tests_Makefile,v 1.1 2009/06/04 08:04:28 benoit Exp $
--- tests/Makefile.orig	Wed Jun  3 14:49:40 2009
+++ tests/Makefile	Wed Jun  3 14:49:53 2009
@@@@ -15,7 +15,7 @@@@
 
 # $Id: patch-tests_Makefile,v 1.1 2009/06/04 08:04:28 benoit Exp $
 
-PYTHON=python
+PYTHON=${MODPY_BIN}
 
 check: test
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d6 1
a6 1
 # $Id: Makefile,v 1.5 2004/03/19 00:17:27 halley Exp $
@


1.1.1.1
log
@import py-dnspython

dnspython is a DNS toolkit for Python. It supports almost all record types.
It can be used for queries, zone transfers, and dynamic updates. It supports
TSIG authenticated messages and EDNS0.

dnspython provides both high and low level access to DNS. The high level
classes perform queries for data of a given name, type, and class, and
return an answer set. The low level classes allow direct manipulation of DNS
zones, messages, names, and records.

ok ajacoutot@@
@
text
@@
