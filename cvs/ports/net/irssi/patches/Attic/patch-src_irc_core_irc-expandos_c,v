head	1.2;
access;
symbols
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2014.06.02.16.50.42;	author sthen;	state dead;
branches;
next	1.1;
commitid	xrHPdyoqipq1W2DI;

1.1
date	2011.12.01.17.51.10;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to irssi 0.8.16, from viq (maintainer), and remove no-longer-used
function pointed out by viq but not in his original diff
@
text
@$OpenBSD: patch-src_irc_core_irc-expandos_c,v 1.1 2011/12/01 17:51:10 sthen Exp $
--- src/irc/core/irc-expandos.c.orig	Wed Nov 16 17:11:24 2011
+++ src/irc/core/irc-expandos.c	Wed Nov 16 17:11:37 2011
@@@@ -87,11 +87,13 @@@@ static char *expando_cumode(SERVER_REC *server, void *
 {
 	if (IS_IRC_CHANNEL(item) && CHANNEL(item)->ownnick) {
 		char prefix = NICK(CHANNEL(item)->ownnick)->prefixes[0];
-		char *cumode = g_malloc(2);
-		cumode[0] = prefix;
-		cumode[1] = '\0';
-		*free_ret = TRUE;
-		return cumode; /* will be "\0\0" = "" if there is no prefix */
+		if (prefix != '\0') {
+			char *cumode = g_malloc(2);
+			cumode[0] = prefix;
+			cumode[1] = '\0';
+			*free_ret = TRUE;
+			return cumode;
+		}
 	}
 	return "";
 }
@


1.1
log
@fixes from Irssi SVN, from Brad. "go ahead" viq (maintainer).

- Set window binds for channel items as sticky when re-creating window
binds as part of /layout save. This addresses the problem of previously
saved channel window items forgetting their windows upon reconnection,
which resulted in them being opened in new windows.

- Ensure that expando_cumode_space() doesn't free unallocated memory when no
prefix exists by conditionally allocating and marking to-be-freed the cumode
string inside of expando_cumode().
@
text
@d1 1
a1 1
$OpenBSD$
@

