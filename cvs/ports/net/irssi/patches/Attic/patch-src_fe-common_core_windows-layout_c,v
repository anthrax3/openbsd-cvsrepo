head	1.2;
access;
symbols
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2014.06.02.16.50.42;	author sthen;	state dead;
branches;
next	1.1;
commitid	xrHPdyoqipq1W2DI;

1.1
date	2011.12.01.17.51.10;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to irssi 0.8.16, from viq (maintainer), and remove no-longer-used
function pointed out by viq but not in his original diff
@
text
@$OpenBSD: patch-src_fe-common_core_windows-layout_c,v 1.1 2011/12/01 17:51:10 sthen Exp $
--- src/fe-common/core/windows-layout.c.orig	Wed Nov 16 17:10:37 2011
+++ src/fe-common/core/windows-layout.c	Wed Nov 16 17:10:50 2011
@@@@ -152,6 +152,7 @@@@ static void sig_layout_save_item(WINDOW_REC *window, W
 	CONFIG_NODE *subnode;
         CHAT_PROTOCOL_REC *proto;
 	const char *type;
+	WINDOW_BIND_REC *rec;
 
 	type = module_find_id_str("WINDOW ITEM TYPE", item->type);
 	if (type == NULL)
@@@@ -168,8 +169,11 @@@@ static void sig_layout_save_item(WINDOW_REC *window, W
 
 	if (item->server != NULL) {
 		iconfig_node_set_str(subnode, "tag", item->server->tag);
-		if (IS_CHANNEL(item))
-		    window_bind_add(window, item->server->tag, item->visible_name);
+		if (IS_CHANNEL(item)) {
+			rec = window_bind_add(window, item->server->tag, item->visible_name);
+			if (rec != NULL)
+				rec->sticky = TRUE;
+		}
 	} else if (IS_QUERY(item)) {
 		iconfig_node_set_str(subnode, "tag", QUERY(item)->server_tag);
 	}
@


1.1
log
@fixes from Irssi SVN, from Brad. "go ahead" viq (maintainer).

- Set window binds for channel items as sticky when re-creating window
binds as part of /layout save. This addresses the problem of previously
saved channel window items forgetting their windows upon reconnection,
which resulted in them being opened in new windows.

- Ensure that expando_cumode_space() doesn't free unallocated memory when no
prefix exists by conditionally allocating and marking to-be-freed the cumode
string inside of expando_cumode().
@
text
@d1 1
a1 1
$OpenBSD$
@

