head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.50
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.48
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.46
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.42
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.44
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.40
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.38
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.36
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.34
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.32
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.30
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.28
	OPENBSD_5_0:1.1.1.1.0.26
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.24
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.22
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.20
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.18
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.16
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.14
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.12
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.10
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.8
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.6
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.4
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.2
	OPENBSD_3_8_BASE:1.1.1.1
	msf_20050524:1.1.1.1
	msf:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.05.24.06.16.53;	author msf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.05.24.06.16.53;	author msf;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- NetPacket/ICMP.pm.orig	Wed Jan 29 13:25:03 2003
+++ NetPacket/ICMP.pm	Thu Apr 14 10:10:49 2005
@@@@ -62,7 +62,7 @@@@ BEGIN {
                     ICMP_REDIRECT ICMP_ECHO ICMP_ROUTERADVERT
                     ICMP_ROUTERSOLICIT ICMP_TIMXCEED ICMP_PARAMPROB
                     ICMP_TSTAMP ICMP_TSTAMPREPLY ICMP_IREQ ICMP_IREQREPLY
-                    ICMP_MASREQ ICMP_MASKREPLY
+                    ICMP_MASKREQ ICMP_MASKREPLY
     );
 
 # Tags:
@@@@ -73,7 +73,7 @@@@ BEGIN {
                        ICMP_REDIRECT ICMP_ECHO ICMP_ROUTERADVERT 
                        ICMP_ROUTERSOLICIT ICMP_TIMXCEED ICMP_PARAMPROB
                        ICMP_TSTAMP ICMP_TSTAMPREPLY ICMP_IREQ ICMP_IREQREPLY
-                       ICMP_MASREQ ICMP_MASKREPLY)],
+                       ICMP_MASKREQ ICMP_MASKREPLY)],
     strip       => [qw(icmp_strip)],
 );
 
@@@@ -266,12 +266,12 @@@@ none
 
 =item exportable
 
-Icmp message types: 
+ICMP message types: 
     ICMP_ECHOREPLY ICMP_UNREACH ICMP_SOURCEQUENCH
     ICMP_REDIRECT ICMP_ECHO ICMP_ROUTERADVERT
     ICMP_ROUTERSOLICIT ICMP_TIMXCEED ICMP_PARAMPROB
-    ICMP_TSTAMP ICMP_TSTAMPREPLY ICMP_IREQ ICMP_IREQREPLY
-    ICMP_MASREQ ICMP_MASKREPLY
+    ICMP_TSTAMP ICMP_TSTAMPREPLY ICMP_IREQ 
+    ICMP_IREQREPLY ICMP_MASKREQ ICMP_MASKREPLY
 
 
 =item tags
@@@@ -280,6 +280,14 @@@@ The following tags group together relate
 
 =over
 
+=item C<:types>
+
+  ICMP_ECHOREPLY ICMP_UNREACH ICMP_SOURCEQUENCH
+  ICMP_REDIRECT ICMP_ECHO ICMP_ROUTERADVERT
+  ICMP_ROUTERSOLICIT ICMP_TIMXCEED ICMP_PARAMPROB
+  ICMP_TSTAMP ICMP_TSTAMPREPLY ICMP_IREQ 
+  ICMP_IREQREPLY ICMP_MASKREQ ICMP_MASKREPLY
+
 =item C<:strip>
 
 Import the strip function C<icmp_strip>.
@@@@ -294,13 +302,35 @@@@ All the above exportable items.
 
 =head1 EXAMPLE
 
+The following example prints the ICMP type, code, and checksum 
+fields.
+
+  #!/usr/bin/perl -w
+
+  use strict;
+  use Net::PcapUtils;
+  use NetPacket::Ethernet qw(:strip);
+  use NetPacket::IP qw(:strip);
+  use NetPacket::ICMP;
+
+  sub process_pkt {
+      my ($user, $hdr, $pkt) = @@_;
+
+      my $ip_obj = NetPacket::IP->decode(eth_strip($pkt));
+      my $icmp_obj = NetPacket::ICMP->decode(ip_strip($ip_obj));
+
+      print("Type: $icmp_obj->{type}\n");
+      print("Code: $icmp_obj->{code}\n");
+      print("Checksum: $icmp_obj->{cksum}\n\n");
+  }
+
+  Net::PcapUtils::loop(\&process_pkt, FILTER => 'icmp');
+
 =head1 TODO
 
 =over
 
 =item Create constants
-
-=item Write example
 
 =back
 
@


1.1.1.1
log
@- initial import of NetPacket 0.04 with Joel Knight's patches 

"NetPacket" provides a base class for a cluster of modules related to
decoding and encoding of network protocols. Each "NetPacket" descendent
module knows how to encode and decode packets for the network protocol
it implements. Consult the documentation for the module in question for
protocol-specific implementation.
@
text
@@
