head	1.2;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.10
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.8
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	abieber_20141101:1.1.1.1
	abieber:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.07.13.13.24.03;	author sthen;	state Exp;
branches;
next	1.1;
commitid	MJ0RBAVp4A3jblLn;

1.1
date	2014.11.01.20.46.24;	author abieber;	state Exp;
branches
	1.1.1.1;
next	;
commitid	NjiZsDOLid8LriX0;

1.1.1.1
date	2014.11.01.20.46.24;	author abieber;	state Exp;
branches;
next	;
commitid	NjiZsDOLid8LriX0;


desc
@@


1.2
log
@add py3 support to net/py-netaddr, drop hard ipython dependency (it's
only used for the interactive shell), enable tests.  ok abieber@@
@
text
@A pure Python network address representation and manipulation library.

netaddr provides a Pythonic way of working with :-

IPv4 and IPv6 addresses and subnets
MAC addresses, OUI and IAB identifiers, IEEE EUI-64 identifiers
arbitrary (non-aligned) IP address ranges and IP address sets
various non-CIDR IP range formats such as nmap and glob-style formats

An interactive shell ("netaddr") is also available; ipython must be
available to use it.
@


1.1
log
@Initial revision
@
text
@d9 3
@


1.1.1.1
log
@Initial import of py-netaddr, a python lib for workin with ipv4/6 addys and
subnets.

OK sthen@@ tweaks from bcallah@@
@
text
@@
