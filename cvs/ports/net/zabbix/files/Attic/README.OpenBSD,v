head	1.9;
access;
symbols
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2010.11.06.09.01.07;	author ajacoutot;	state dead;
branches;
next	1.8;

1.8
date	2010.10.02.16.16.10;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2010.05.04.05.51.22;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.03.11.58.45;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.03.11.46.08;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.02.14.09.10;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2009.07.13.17.13.01;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2009.07.12.19.51.51;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.03.17.54.12;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Move to pkg-readmes.
@
text
@$OpenBSD: README.OpenBSD,v 1.8 2010/10/02 16:16:10 ajacoutot Exp $

Using ZABBIX on OpenBSD
=======================

The original documentation is available as a PDF file at
    ${HOMEPAGE}
(or via the -doc subpackage of the zabbix port) but may not be
redistributed. 

A manual is available at:
    http://www.zabbix.com/documentation/${MAJV}/complete

On OpenBSD, ZABBIX is packaged in four parts:

- the agent (in the zabbix-agent package) for installing onto a
monitored machine. To simplify installation from ports on client
machines, only this part is built by default.

- the server and proxy (in the database-dependent zabbix-server
package); this has heavier dependencies and is built by selecting
the FLAVOR for the database you use (currently mysql or pgsql).

- the web interface to run with the server (in the zabbix-web package).
This is also in a database-dependent package to ensure the correct
PHP modules are installed.

- the PDF document, a package which must be 'built' locally because it
can not be redistributed.

Next, you have to adapt the configuration files under
    ${SYSCONFDIR}/zabbix/
(make sure your webserver can resolve hostnames; otherwise use IP
addresses in the configuration files).

To have the ZABBIX server start at boot time, insert the following into
/etc/rc.local(8):

if [ -x ${TRUEPREFIX}/sbin/zabbix_server ]; then
	install -d -o _zabbix /var/run/zabbix
	echo -n ' zabbix_server'; ${TRUEPREFIX}/sbin/zabbix_server
fi

For the proxy and the client, follow the same procedure, replacing
zabbix_server with zabbix_proxy or zabbix_clientd.

The Zabbix Server or Proxy might fail due to lack of shared memory
("Can't allocate shared memory..." errors), in which case you should set
kern.shminfo.shmall to 32768 -- see sysctl(8) and sysctl.conf(5).

On a busy server, it may be advisable to put the _zabbix user and
processes in their own login(1) class with tuned resources, such as more
open file descriptors etc.
e.g. add this to the login.conf(5) file:

zabbix:\
	:openfiles-cur=1024:\
	:openfiles-max=2048:\
	:tc=daemon:

Then change the rc.local(8) zabbix_server start line with the following:
	echo -n ' zabbix_server'; su -c zabbix root -c '/usr/local/sbin/zabbix_server'

The web frontend works reasonably well with OpenBSD's chroot'ed
httpd (the "Status of ZABBIX" page uses /bin/ps and /dev/kmem to
check the process, so it erroneously reports it as not running).
Some changes from the default configuration are required -
you can do this by creating symbolic links as follows:

# ln -s ${PREFIX-web}/conf/modules.sample/zabbix.conf \
        ${PREFIX-web}/conf/modules

# ln -fs ${PREFIX-web}/conf/php5.sample/zabbix.ini \
        ${PREFIX-web}/conf/php5/zabbix.ini

ZABBIX requires a timezone to be configured in PHP; zabbix.ini
sets this to UTC, you may like to adjust this. After making these
changes, stop and start httpd.

Next you must create the database following the relevant set of
instructions below. When this is done you can proceed to configure
through the web interface at http://<hostname>/zabbix/setup.php.
(default user is 'Admin' with password 'zabbix')

== MySQL ==

MySQL users running with chroot'ed httpd might like to take the
following steps to place the mysql socket inside the chroot:

Create a directory for the mysql socket.

        mkdir -p /var/www/var/run/mysql

Adjust ${SYSCONFDIR}/my.cnf to put the mysql socket into the chroot,

        [client]
        socket = /var/www/var/run/mysql/mysql.sock

        [mysqld]
        socket = /var/www/var/run/mysql/mysql.sock

and set DBSocket in the ZABBIX configuration appropriately.

Connect to MySQL, and create a user and database for ZABBIX;

	$ mysql -u root -p
	mysql> create user zabbix@@localhost identified by 'password';
	mysql> create database zabbix;
	mysql> grant all on zabbix.* to zabbix@@localhost;
	mysql> quit

Then initialize the database from the files installed in
${TRUEPREFIX}/share/examples/zabbix:

	$ cd ${TRUEPREFIX}/share/zabbix/schema
	$ mysql -uzabbix -p[password] zabbix < mysql.sql
The following steps are not required for setting up a Zabbix Proxy.
	$ cd ../data
	$ mysql -uzabbix -p[password] zabbix < data.sql	     ## N.B. slow!!
	$ mysql -uzabbix -p[password] zabbix < images_mysql.sql

== PostgreSQL ==

Assuming you have an administrative account named `postgres',
you can create the 'zabbix' user and database like this:

	createuser -U postgres --pwprompt --no-superuser \
	    --createdb --no-createrole zabbix
	createdb -U zabbix zabbix

And initialize the database:

	$ cd ${TRUEPREFIX}/share/zabbix/schema
	$ cat postgresql.sql | psql -U zabbix zabbix
The following steps are not required for setting up a Zabbix Proxy.
	$ cd ../data
	$ cat data.sql | psql -U zabbix zabbix
	$ cat images_pgsql.sql | psql -U zabbix zabbix

== SQLite3 ==

	$ mkdir /var/db/zabbix
	$ chown _zabbix /var/db/zabbix

The following steps are optional as Zabbix will automatically create
and initialize the database if it does not exist.

	$ cd ${TRUEPREFIX}/share/zabbix/schema
	$ cat sqlite.sql | sudo -u _zabbix sqlite3 /var/db/zabbix/zabbix.db
The following steps are not required for setting up a Zabbix Proxy.
	$ cd ../data
	$ cat data.sql | sudo -u _zabbix sqlite3 /var/db/zabbix/zabbix.db
	$ cat images_sqlite3.sql | sudo -u _zabbix sqlite3 /var/db/zabbix/zabbix.db
@


1.8
log
@Advise to increase number of openfiles.
@
text
@d1 1
a1 1
$OpenBSD: README.OpenBSD,v 1.7 2010/05/04 05:51:22 ajacoutot Exp $
@


1.7
log
@Add an sqlite3 FLAVOR (usefull for proxies and testing).
Add corresponding documentation and rework some parts of README.OpenBSD.
Add FLAVORS description to DESCR-server.

input from and ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README.OpenBSD,v 1.6 2010/05/03 11:58:45 ajacoutot Exp $
d37 1
a37 1
/etc/rc.local:
d50 13
@


1.6
log
@Small blurb about shared memory.
@
text
@d1 4
a4 1
$OpenBSD: README.OpenBSD,v 1.5 2010/05/03 11:46:08 ajacoutot Exp $
a5 1
This document gives information relevant to using ZABBIX on OpenBSD.
d11 3
d47 2
a48 2
The Zabbix Server might fail due to lack of shared memory ("Can't
allocate shared memory..." errors), in which case you should set
d104 1
d122 1
d126 15
@


1.5
log
@* remove redundant step in README.OpenBSD
* fix default administrator username in README.OpenBSD
* add missing run_depends
* add recommended values in zabbix.ini so that it works out of the box

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README.OpenBSD,v 1.4 2009/10/02 14:09:10 ajacoutot Exp $
d41 4
@


1.4
log
@Add a small comment about name resolution in README.OpenBSD.

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD: README.OpenBSD,v 1.3 2009/07/13 17:13:01 ajacoutot Exp $
d61 1
a61 1
(default user is 'admin' with password 'zabbix')
a109 3
	$ psql -U zabbix
	psql> create database zabbix;
	psql> \q
@


1.3
log
@- -main and -doc subpackages do not change whatever flavor is used, so
use fullpkgname
"definitely" ok for sthen@@

- while here, fix some substitutions, ownerships and a typo (reported by
jdixon@@)
@
text
@d1 1
a1 1
$OpenBSD: README.OpenBSD,v 1.2 2009/07/12 19:51:51 ajacoutot Exp $
d28 2
@


1.2
log
@Clean up this port:
* add missing dependency on php5-gd
* remove all hardcoded paths
* rework README.OpenBSD
* add empty zabbix.conf.php file that is writable by the www user so
that the configuration wizard can tweak this file
* protect configuration files, they may contain passwords
* fix configuration so that it works by default which is the purpose of
porting these kinds of apps

ok sthen@@, ok jasper@@ on a previous version of the diff
@
text
@d1 1
a1 1
$OpenBSD: README.OpenBSD,v 1.1 2009/06/03 17:54:12 jasper Exp $
d26 1
a26 1
Next, you ou have to adapt the configuration files under
d89 1
a89 1
${PREFIX}/share/examples/zabbix:
@


1.1
log
@- lot's of zabbix luve by Matthew Weigel, now has flavors for the database backends
and more setup instructions. thanks.
@
text
@d1 1
a1 1
$OpenBSD$
d4 2
a5 1
The original documentation is available as a PDF file at ${HOMEPAGE}
d26 2
a27 4
To have the ZABBIX server start at boot time, you have to adapt
the configuration file in ${SYSCONFDIR}/zabbix/zabbix_server.conf,
create the directory /var/run/zabbix (owned by the _zabbix user),
and insert the following into /etc/rc.local.
d29 6
a34 2
if [ -x ${PREFIX}/bin/zabbix_server ]; then
        echo -n ' zabbix';      ${PREFIX}/bin/zabbix_server
d37 2
a38 2
For the proxy, follow the same procedure, replacing zabbix_server
with zabbix_proxy.
d58 2
a59 2
through the web interface at http://your_machine/zabbix/setup.php.

d83 4
a86 3
	create user zabbix@@localhost identified by 'password';
	create database zabbix;
	grant all on zabbix.* to zabbix@@localhost;
d91 1
a91 1
	$ cd ${PREFIX}/share/zabbix/schema
d111 1
a111 1
	$ cd ${PREFIX}/share/zabbix/schema
@

