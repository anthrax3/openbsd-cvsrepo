head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_0:1.1.0.4
	OPENBSD_5_9:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2017.02.24.21.08.28;	author naddy;	state dead;
branches
	1.3.2.1;
next	1.2;
commitid	7eCl78lmYodvXtPN;

1.2
date	2017.01.05.20.46.00;	author naddy;	state Exp;
branches;
next	1.1;
commitid	AMxkXkNm6pXF63uE;

1.1
date	2016.08.03.22.04.40;	author naddy;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;
commitid	w1tVN8qfx3AaO8h1;

1.1.2.1
date	2016.08.03.22.04.40;	author naddy;	state Exp;
branches;
next	1.1.2.2;
commitid	w1tVN8qfx3AaO8h1;

1.1.2.2
date	2016.11.04.15.20.52;	author naddy;	state dead;
branches;
next	;
commitid	woi9VmGflxdFUwos;

1.1.4.1
date	2016.08.04.10.48.03;	author naddy;	state Exp;
branches;
next	1.1.4.2;
commitid	Cdkz6qSFEO9MccH1;

1.1.4.2
date	2016.11.04.14.09.36;	author naddy;	state dead;
branches;
next	1.1.4.3;
commitid	j8vMfWnDLihMh9DN;

1.1.4.3
date	2017.01.05.21.10.17;	author naddy;	state Exp;
branches;
next	1.1.4.4;
commitid	0lFAERkZiYFPyRQh;

1.1.4.4
date	2017.02.24.21.09.11;	author naddy;	state dead;
branches;
next	1.1.4.5;
commitid	M944NTzYr6VGMugv;

1.1.4.5
date	2017.04.25.19.00.13;	author naddy;	state Exp;
branches;
next	;
commitid	Tip79GaOEgBUMxdB;

1.3.2.1
date	2017.04.25.16.51.23;	author naddy;	state Exp;
branches;
next	;
commitid	mz4zn4inwtI35Vir;


desc
@@


1.3
log
@SECURITY update to 7.53.1:
CVE-2017-2629: make SSL_VERIFYSTATUS work again
Also numerous other bug fixes.
@
text
@$OpenBSD: patch-lib_vtls_vtls_c,v 1.2 2017/01/05 20:46:00 naddy Exp $

https://github.com/curl/curl/commit/a7b38c9dc98481e4a5fc37e51a8690337c674dfb

--- lib/vtls/vtls.c.orig	Mon Dec 19 08:27:56 2016
+++ lib/vtls/vtls.c	Thu Jan  5 21:31:38 2017
@@@@ -484,7 +484,7 @@@@ void Curl_ssl_close_all(struct Curl_easy *data)
   curlssl_close_all(data);
 }
 
-#if defined(USE_SSLEAY) || defined(USE_GNUTLS) || defined(USE_SCHANNEL) || \
+#if defined(USE_OPENSSL) || defined(USE_GNUTLS) || defined(USE_SCHANNEL) || \
     defined(USE_DARWINSSL) || defined(USE_NSS)
 /* This function is for OpenSSL, GnuTLS, darwinssl, and schannel only. */
 int Curl_ssl_getsock(struct connectdata *conn, curl_socket_t *socks,
@@@@ -518,7 +518,7 @@@@ int Curl_ssl_getsock(struct connectdata *conn,
   (void)numsocks;
   return GETSOCK_BLANK;
 }
-/* USE_SSLEAY || USE_GNUTLS || USE_SCHANNEL || USE_DARWINSSL || USE_NSS */
+/* USE_OPENSSL || USE_GNUTLS || USE_SCHANNEL || USE_DARWINSSL || USE_NSS */
 #endif
 
 void Curl_ssl_close(struct connectdata *conn, int sockindex)
@


1.3.2.1
log
@CVE-2017-7468: TLS session resumption client cert bypass (again)
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
CVE-2017-7468: switch off SSL session id when client cert is used
d5 4
a8 10
--- lib/vtls/vtls.c.orig	Tue Feb 21 08:09:13 2017
+++ lib/vtls/vtls.c	Tue Apr 25 17:58:36 2017
@@@@ -120,6 +120,9 @@@@ Curl_clone_primary_ssl_config(struct ssl_primary_confi
   CLONE_STRING(egdsocket);
   CLONE_STRING(random_file);
   CLONE_STRING(clientcert);
+
+  /* Disable dest sessionid cache if a client cert is used, CVE-2016-5419. */
+  dest->sessionid = (dest->clientcert ? false : source->sessionid);
   return TRUE;
d11 12
a22 18
@@@@ -293,9 +296,9 @@@@ bool Curl_ssl_getsessionid(struct connectdata *conn,
   int port = isProxy ? (int)conn->port : conn->remote_port;
   *ssl_sessionid = NULL;
 
-  DEBUGASSERT(data->set.general_ssl.sessionid);
+  DEBUGASSERT(SSL_SET_OPTION(primary.sessionid));
 
-  if(!data->set.general_ssl.sessionid)
+  if(!SSL_SET_OPTION(primary.sessionid))
     /* session ID re-use is disabled */
     return TRUE;
 
@@@@ -397,7 +400,7 @@@@ CURLcode Curl_ssl_addsessionid(struct connectdata *con
     &conn->proxy_ssl_config :
     &conn->ssl_config;
 
-  DEBUGASSERT(data->set.general_ssl.sessionid);
+  DEBUGASSERT(SSL_SET_OPTION(primary.sessionid));
d24 1
a24 2
   clone_host = strdup(isProxy ? conn->http_proxy.host.name : conn->host.name);
   if(!clone_host)
@


1.2
log
@Upstream commit a7b38c9dc98481e4a5fc37e51a8690337c674dfb to fix a problem
that causes rtorrent to busy loop when announcing to the tracker.  ok tj@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@file patch-lib_vtls_vtls_c was initially added on branch OPENBSD_5_9.
@
text
@d1 24
@


1.1.4.1
log
@Security fixes:
CVE-2016-5419: TLS session resumption client cert bypass
CVE-2016-5420: Re-using connections with wrong client cert
CVE-2016-5421: use of connection struct after free
@
text
@a0 40
$OpenBSD$

CVE-2016-5420: Re-using connections with wrong client cert

CVE-2016-5419: TLS session resumption client cert bypass

--- lib/vtls/vtls.c.orig	Mon May 16 09:23:33 2016
+++ lib/vtls/vtls.c	Thu Aug  4 00:55:48 2016
@@@@ -99,6 +99,7 @@@@ Curl_ssl_config_matches(struct ssl_config_data* data,
      (data->verifyhost == needle->verifyhost) &&
      safe_strequal(data->CApath, needle->CApath) &&
      safe_strequal(data->CAfile, needle->CAfile) &&
+     safe_strequal(data->clientcert, needle->clientcert) &&
      safe_strequal(data->random_file, needle->random_file) &&
      safe_strequal(data->egdsocket, needle->egdsocket) &&
      safe_strequal(data->cipher_list, needle->cipher_list))
@@@@ -156,6 +157,15 @@@@ Curl_clone_ssl_config(struct ssl_config_data *source,
   else
     dest->random_file = NULL;
 
+  if(source->clientcert) {
+    dest->clientcert = strdup(source->clientcert);
+    if(!dest->clientcert)
+      return FALSE;
+    dest->sessionid = FALSE;
+  }
+  else
+    dest->clientcert = NULL;
+
   return TRUE;
 }
 
@@@@ -166,6 +176,7 @@@@ void Curl_free_ssl_config(struct ssl_config_data* sslc
   Curl_safefree(sslc->cipher_list);
   Curl_safefree(sslc->egdsocket);
   Curl_safefree(sslc->random_file);
+  Curl_safefree(sslc->clientcert);
 }
 
 
@


1.1.4.2
log
@Security update to 7.51.0.
CVE-2016-8615: cookie injection for other servers
CVE-2016-8616: case insensitive password comparison
CVE-2016-8617: OOB write via unchecked multiplication
CVE-2016-8618: double-free in curl_maprintf
CVE-2016-8619: double-free in krb5 code
CVE-2016-8620: glob parser write/read out of bounds
CVE-2016-8621: curl_getdate read out of bounds
CVE-2016-8622: URL unescape heap overflow via integer truncation
CVE-2016-8623: Use-after-free via shared cookies
CVE-2016-8624: invalid URL parsing with '#'
CVE-2016-8625: IDNA 2003 makes curl use wrong host

Note that this drops support for internationalized domain names.
ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_vtls_vtls_c,v 1.1.4.1 2016/08/04 10:48:03 naddy Exp $
@


1.1.4.3
log
@Upstream commit a7b38c9dc98481e4a5fc37e51a8690337c674dfb to fix a problem
that causes rtorrent to busy loop when announcing to the tracker.
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
https://github.com/curl/curl/commit/a7b38c9dc98481e4a5fc37e51a8690337c674dfb
d5 26
a30 4
--- lib/vtls/vtls.c.orig	Mon Dec 19 08:27:56 2016
+++ lib/vtls/vtls.c	Thu Jan  5 21:31:38 2017
@@@@ -484,7 +484,7 @@@@ void Curl_ssl_close_all(struct Curl_easy *data)
   curlssl_close_all(data);
d33 5
a37 8
-#if defined(USE_SSLEAY) || defined(USE_GNUTLS) || defined(USE_SCHANNEL) || \
+#if defined(USE_OPENSSL) || defined(USE_GNUTLS) || defined(USE_SCHANNEL) || \
     defined(USE_DARWINSSL) || defined(USE_NSS)
 /* This function is for OpenSSL, GnuTLS, darwinssl, and schannel only. */
 int Curl_ssl_getsock(struct connectdata *conn, curl_socket_t *socks,
@@@@ -518,7 +518,7 @@@@ int Curl_ssl_getsock(struct connectdata *conn,
   (void)numsocks;
   return GETSOCK_BLANK;
a38 3
-/* USE_SSLEAY || USE_GNUTLS || USE_SCHANNEL || USE_DARWINSSL || USE_NSS */
+/* USE_OPENSSL || USE_GNUTLS || USE_SCHANNEL || USE_DARWINSSL || USE_NSS */
 #endif
d40 1
a40 1
 void Curl_ssl_close(struct connectdata *conn, int sockindex)
@


1.1.4.4
log
@SECURITY update to 7.53.1:
CVE-2017-2629: make SSL_VERIFYSTATUS work again
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_vtls_vtls_c,v 1.1.4.3 2017/01/05 21:10:17 naddy Exp $
@


1.1.4.5
log
@CVE-2017-7468: TLS session resumption client cert bypass (again)
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
CVE-2017-7468: switch off SSL session id when client cert is used
d5 4
a8 10
--- lib/vtls/vtls.c.orig	Tue Feb 21 08:09:13 2017
+++ lib/vtls/vtls.c	Tue Apr 25 17:58:36 2017
@@@@ -120,6 +120,9 @@@@ Curl_clone_primary_ssl_config(struct ssl_primary_confi
   CLONE_STRING(egdsocket);
   CLONE_STRING(random_file);
   CLONE_STRING(clientcert);
+
+  /* Disable dest sessionid cache if a client cert is used, CVE-2016-5419. */
+  dest->sessionid = (dest->clientcert ? false : source->sessionid);
   return TRUE;
d11 12
a22 18
@@@@ -293,9 +296,9 @@@@ bool Curl_ssl_getsessionid(struct connectdata *conn,
   int port = isProxy ? (int)conn->port : conn->remote_port;
   *ssl_sessionid = NULL;
 
-  DEBUGASSERT(data->set.general_ssl.sessionid);
+  DEBUGASSERT(SSL_SET_OPTION(primary.sessionid));
 
-  if(!data->set.general_ssl.sessionid)
+  if(!SSL_SET_OPTION(primary.sessionid))
     /* session ID re-use is disabled */
     return TRUE;
 
@@@@ -397,7 +400,7 @@@@ CURLcode Curl_ssl_addsessionid(struct connectdata *con
     &conn->proxy_ssl_config :
     &conn->ssl_config;
 
-  DEBUGASSERT(data->set.general_ssl.sessionid);
+  DEBUGASSERT(SSL_SET_OPTION(primary.sessionid));
d24 1
a24 2
   clone_host = strdup(isProxy ? conn->http_proxy.host.name : conn->host.name);
   if(!clone_host)
@


1.1.2.1
log
@Security fixes:
CVE-2016-5419: TLS session resumption client cert bypass
CVE-2016-5420: Re-using connections with wrong client cert
CVE-2016-5421: use of connection struct after free
@
text
@a0 40
$OpenBSD$

CVE-2016-5420: Re-using connections with wrong client cert

CVE-2016-5419: TLS session resumption client cert bypass

--- lib/vtls/vtls.c.orig	Mon Dec 14 15:48:53 2015
+++ lib/vtls/vtls.c	Wed Aug  3 23:38:20 2016
@@@@ -99,6 +99,7 @@@@ Curl_ssl_config_matches(struct ssl_config_data* data,
      (data->verifyhost == needle->verifyhost) &&
      safe_strequal(data->CApath, needle->CApath) &&
      safe_strequal(data->CAfile, needle->CAfile) &&
+     safe_strequal(data->clientcert, needle->clientcert) &&
      safe_strequal(data->random_file, needle->random_file) &&
      safe_strequal(data->egdsocket, needle->egdsocket) &&
      safe_strequal(data->cipher_list, needle->cipher_list))
@@@@ -156,6 +157,15 @@@@ Curl_clone_ssl_config(struct ssl_config_data *source,
   else
     dest->random_file = NULL;
 
+  if(source->clientcert) {
+    dest->clientcert = strdup(source->clientcert);
+    if(!dest->clientcert)
+      return FALSE;
+    dest->sessionid = FALSE;
+  }
+  else
+    dest->clientcert = NULL;
+
   return TRUE;
 }
 
@@@@ -166,6 +176,7 @@@@ void Curl_free_ssl_config(struct ssl_config_data* sslc
   Curl_safefree(sslc->cipher_list);
   Curl_safefree(sslc->egdsocket);
   Curl_safefree(sslc->random_file);
+  Curl_safefree(sslc->clientcert);
 }
 
 
@


1.1.2.2
log
@Security update to 7.51.0.
CVE-2016-8615: cookie injection for other servers
CVE-2016-8616: case insensitive password comparison
CVE-2016-8617: OOB write via unchecked multiplication
CVE-2016-8618: double-free in curl_maprintf
CVE-2016-8619: double-free in krb5 code
CVE-2016-8620: glob parser write/read out of bounds
CVE-2016-8621: curl_getdate read out of bounds
CVE-2016-8622: URL unescape heap overflow via integer truncation
CVE-2016-8623: Use-after-free via shared cookies
CVE-2016-8624: invalid URL parsing with '#'
CVE-2016-8625: IDNA 2003 makes curl use wrong host

Note that this drops support for internationalized domain names.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_vtls_vtls_c,v 1.1.2.1 2016/08/03 22:04:40 naddy Exp $
@


