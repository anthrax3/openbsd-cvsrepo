head	1.1;
access;
symbols
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_5:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2015.01.11.22.53.15;	author naddy;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;
commitid	HTkqIXpPaz4yHqG6;

1.1.2.1
date	2015.01.11.22.53.15;	author naddy;	state Exp;
branches;
next	;
commitid	HTkqIXpPaz4yHqG6;

1.1.4.1
date	2015.01.12.02.17.10;	author naddy;	state Exp;
branches;
next	;
commitid	tJBKky4C4oSbqx2b;


desc
@@


1.1
log
@file patch-lib_strdup_c was initially added on branch OPENBSD_5_5.
@
text
@@


1.1.4.1
log
@Security fixes for
CVE-2014-3707: libcurl duphandle read out of bounds
CVE-2014-8150: URL request injection
@
text
@a0 51
$OpenBSD$

CVE-2014-3707: libcurl duphandle read out of bounds
http://curl.haxx.se/docs/adv_20141105.html

--- lib/strdup.c.orig	Fri Apr 25 14:01:03 2014
+++ lib/strdup.c	Mon Jan 12 02:03:37 2015
@@@@ -19,13 +19,13 @@@@
  * KIND, either express or implied.
  *
  ***************************************************************************/
-/*
- * This file is 'mem-include-scan' clean. See test 1132.
- */
 #include "curl_setup.h"
-
 #include "strdup.h"
+#include "curl_memory.h"
 
+/* The last #include file should be: */
+#include "memdebug.h"
+
 #ifndef HAVE_STRDUP
 char *curlx_strdup(const char *str)
 {
@@@@ -50,3 +50,25 @@@@ char *curlx_strdup(const char *str)
 
 }
 #endif
+
+/***************************************************************************
+ *
+ * Curl_memdup(source, length)
+ *
+ * Copies the 'source' data to a newly allocated buffer (that is
+ * returned). Copies 'length' bytes.
+ *
+ * Returns the new pointer or NULL on failure.
+ *
+ ***************************************************************************/
+char *Curl_memdup(const char *src, size_t length)
+{
+  char *buffer = malloc(length);
+  if(!buffer)
+    return NULL; /* fail */
+
+  memcpy(buffer, src, length);
+
+  /* if length unknown do null termination */
+  return buffer;
+}
@


1.1.2.1
log
@Security fixes for
CVE-2014-3707: libcurl duphandle read out of bounds
CVE-2014-8150: URL request injection
@
text
@a0 51
$OpenBSD$

CVE-2014-3707: libcurl duphandle read out of bounds 
http://curl.haxx.se/docs/adv_20141105.html

--- lib/strdup.c.orig	Mon Sep  9 00:11:15 2013
+++ lib/strdup.c	Sun Jan 11 21:51:13 2015
@@@@ -19,13 +19,13 @@@@
  * KIND, either express or implied.
  *
  ***************************************************************************/
-/*
- * This file is 'mem-include-scan' clean. See test 1132.
- */
 #include "curl_setup.h"
-
 #include "strdup.h"
+#include "curl_memory.h"
 
+/* The last #include file should be: */
+#include "memdebug.h"
+
 #ifndef HAVE_STRDUP
 char *curlx_strdup(const char *str)
 {
@@@@ -50,3 +50,25 @@@@ char *curlx_strdup(const char *str)
 
 }
 #endif
+
+/***************************************************************************
+ *
+ * Curl_memdup(source, length)
+ *
+ * Copies the 'source' data to a newly allocated buffer (that is
+ * returned). Copies 'length' bytes.
+ *
+ * Returns the new pointer or NULL on failure.
+ *
+ ***************************************************************************/
+char *Curl_memdup(const char *src, size_t length)
+{
+  char *buffer = malloc(length);
+  if(!buffer)
+    return NULL; /* fail */
+
+  memcpy(buffer, src, length);
+
+  /* if length unknown do null termination */
+  return buffer;
+}
@

