head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.16
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.12
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.10
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.18
	OPENBSD_5_0:1.1.1.1.0.16
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.12
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.10
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.8
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	djm_20070904:1.1.1.1
	djm:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.01.13.10.12.52;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2012.03.08.12.13.01;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.04.09.14.00;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.09.04.09.14.00;	author djm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to PuTTY 0.62.

ok djm@@
@
text
@$OpenBSD: patch-unix_uxnoise_c,v 1.2 2012/03/08 12:13:01 ajacoutot Exp $
--- unix/uxnoise.c.orig	Wed Sep 16 18:28:20 2009
+++ unix/uxnoise.c	Thu Dec 27 01:32:29 2012
@@@@ -49,38 +49,11 @@@@ static int read_dev_urandom(char *buf, int len)
 
 void noise_get_heavy(void (*func) (void *, int))
 {
-    char buf[512];
-    FILE *fp;
-    int ret;
-    int got_dev_urandom = 0;
+    char buf[32];
 
-    if (read_dev_urandom(buf, 32)) {
-	got_dev_urandom = 1;
-	func(buf, 32);
-    }
+    if (read_dev_urandom(buf, sizeof(buf)))
+	func(buf, sizeof(buf));
 
-    fp = popen("ps -axu 2>/dev/null", "r");
-    if (fp) {
-	while ( (ret = fread(buf, 1, sizeof(buf), fp)) > 0)
-	    func(buf, ret);
-	pclose(fp);
-    } else if (!got_dev_urandom) {
-	fprintf(stderr, "popen: %s\n"
-		"Unable to access fallback entropy source\n", strerror(errno));
-	exit(1);
-    }
-
-    fp = popen("ls -al /tmp 2>/dev/null", "r");
-    if (fp) {
-	while ( (ret = fread(buf, 1, sizeof(buf), fp)) > 0)
-	    func(buf, ret);
-	pclose(fp);
-    } else if (!got_dev_urandom) {
-	fprintf(stderr, "popen: %s\n"
-		"Unable to access fallback entropy source\n", strerror(errno));
-	exit(1);
-    }
-
     read_random_seed(func);
     random_save_seed();
 }
@@@@ -114,21 +87,13 @@@@ void noise_get_light(void (*func) (void *, int))
  */
 void noise_regular(void)
 {
-    int fd;
-    int ret;
-    char buf[512];
+    u_int32_t buf[8], i;
     struct rusage rusage;
 
-    if ((fd = open("/proc/meminfo", O_RDONLY)) >= 0) {
-	while ( (ret = read(fd, buf, sizeof(buf))) > 0)
-	    random_add_noise(buf, ret);
-	close(fd);
-    }
-    if ((fd = open("/proc/stat", O_RDONLY)) >= 0) {
-	while ( (ret = read(fd, buf, sizeof(buf))) > 0)
-	    random_add_noise(buf, ret);
-	close(fd);
-    }
+    for (i = 0; i < 8; i++)
+        buf[i] = arc4random();
+    random_add_noise(buf, sizeof(buf));
+
     getrusage(RUSAGE_SELF, &rusage);
     random_add_noise(&rusage, sizeof(rusage));
 }
@@@@ -141,6 +106,9 @@@@ void noise_regular(void)
 void noise_ultralight(unsigned long data)
 {
     struct timeval tv;
+    u_int32_t r;
+    r = arc4random();
+    random_add_noise(&r, sizeof(r));
     gettimeofday(&tv, NULL);
     random_add_noise(&tv, sizeof(tv));
     random_add_noise(&data, sizeof(data));
@


1.2
log
@Garbage collect the /dev/arandom patches.

from Brad
ok landry@@ sthen@@
@
text
@d1 4
a4 12
$OpenBSD: patch-unix_uxnoise_c,v 1.1.1.1 2007/09/04 09:14:00 djm Exp $
--- unix/uxnoise.c.orig	Tue Nov 16 10:27:00 2004
+++ unix/uxnoise.c	Tue Mar  6 08:56:51 2012
@@@@ -4,6 +4,7 @@@@
  */
 
 #include <stdio.h>
+#include <stdlib.h>
 #include <fcntl.h>
 #include <unistd.h>
 #include <sys/time.h>
@@@@ -44,23 +45,11 @@@@ static int read_dev_urandom(char *buf, int len)
d11 1
d14 2
a15 1
-    if (read_dev_urandom(buf, 32))
d17 1
d22 9
a30 3
-    while ( (ret = fread(buf, 1, sizeof(buf), fp)) > 0)
-	func(buf, ret);
-    pclose(fp);
d33 9
a41 3
-    while ( (ret = fread(buf, 1, sizeof(buf), fp)) > 0)
-	func(buf, ret);
-    pclose(fp);
d46 1
a46 1
@@@@ -94,21 +83,13 @@@@ void noise_get_light(void (*func) (void *, int))
d73 1
a73 1
@@@@ -121,6 +102,9 @@@@ void noise_regular(void)
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- unix/uxnoise.c.orig	Wed Nov 17 02:27:00 2004
+++ unix/uxnoise.c	Tue Sep  4 17:47:44 2007
d12 1
a12 16
@@@@ -18,7 +19,7 @@@@ static int read_dev_urandom(char *buf, int len)
     int fd;
     int ngot, ret;
 
-    fd = open("/dev/urandom", O_RDONLY);
+    fd = open("/dev/arandom", O_RDONLY);
     if (fd < 0)
 	return 0;
 
@@@@ -39,28 +40,16 @@@@ static int read_dev_urandom(char *buf, int len)
  * This function is called once, at PuTTY startup. It will do some
  * slightly silly things such as fetching an entire process listing
  * and scanning /tmp, load the saved random seed from disk, and
- * also read 32 bytes out of /dev/urandom.
+ * also read 32 bytes out of /dev/arandom.
  */
@


1.1.1.1
log
@initial import of putty-0.60 SSH/telnet client:

    PuTTY is a SSH and Telnet client implementation. This package
    contains the command-line clients and supporting utilities for
    key generation.

feedback steven@@ mbalmer@@; ok mbalmer@@
@
text
@@
