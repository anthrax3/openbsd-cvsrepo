head	1.1;
access;
symbols
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_6:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2015.03.25.11.48.28;	author jasper;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;
commitid	sxXdy0n5r6L8jNpC;

1.1.2.1
date	2015.03.25.11.48.28;	author jasper;	state Exp;
branches;
next	;
commitid	sxXdy0n5r6L8jNpC;

1.1.4.1
date	2015.03.25.11.48.39;	author jasper;	state Exp;
branches;
next	;
commitid	IyTdb3jO2JBAcCfI;


desc
@@


1.1
log
@file patch-sshpubk_c was initially added on branch OPENBSD_5_6.
@
text
@@


1.1.4.1
log
@Security fix for CVE-2015-2157, putty: failure to scrub private keys from memory after use

ok sthen@@
@
text
@a0 54
$OpenBSD$

Security fix for CVE-2015-2157, putty: failure to scrub private keys from memory after use
http://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/private-key-not-wiped-2.html
http://tartarus.org/~simon-git/gitweb/?p=putty.git;a=commit;h=65f69bca7363ceceeac515ae2a82b8f8adc6404d

--- sshpubk.c.orig	Sun Jul 14 12:46:55 2013
+++ sshpubk.c	Wed Mar 25 11:54:43 2015
@@@@ -844,6 +844,7 @@@@ struct ssh2_userkey *ssh2_load_userkey(const Filename 
 	goto error;
     }
     sfree(public_blob);
+    smemclr(private_blob, private_blob_len);
     sfree(private_blob);
     sfree(encryption);
     if (errorstr)
@@@@ -864,8 +865,10 @@@@ struct ssh2_userkey *ssh2_load_userkey(const Filename 
 	sfree(mac);
     if (public_blob)
 	sfree(public_blob);
-    if (private_blob)
-	sfree(private_blob);
+    if (private_blob) {
+        smemclr(private_blob, private_blob_len);
+        sfree(private_blob);
+    }
     if (errorstr)
 	*errorstr = error;
     return ret;
@@@@ -1154,8 +1157,14 @@@@ int ssh2_save_userkey(const Filename *filename, struct
     }
 
     fp = f_open(filename, "w", TRUE);
-    if (!fp)
-	return 0;
+    if (!fp) {
+        sfree(pub_blob);
+        smemclr(priv_blob, priv_blob_len);
+        sfree(priv_blob);
+        smemclr(priv_blob_encrypted, priv_blob_len);
+        sfree(priv_blob_encrypted);
+        return 0;
+    }
     fprintf(fp, "PuTTY-User-Key-File-2: %s\n", key->alg->name);
     fprintf(fp, "Encryption: %s\n", cipherstr);
     fprintf(fp, "Comment: %s\n", key->comment);
@@@@ -1172,6 +1181,7 @@@@ int ssh2_save_userkey(const Filename *filename, struct
     sfree(pub_blob);
     smemclr(priv_blob, priv_blob_len);
     sfree(priv_blob);
+    smemclr(priv_blob_encrypted, priv_blob_len);
     sfree(priv_blob_encrypted);
     return 1;
 }
@


1.1.2.1
log
@Security fix for CVE-2015-2157, putty: failure to scrub private keys from memory after use

ok sthen@@
@
text
@a0 54
$OpenBSD$

Security fix for CVE-2015-2157, putty: failure to scrub private keys from memory after use
http://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/private-key-not-wiped-2.html
http://tartarus.org/~simon-git/gitweb/?p=putty.git;a=commit;h=65f69bca7363ceceeac515ae2a82b8f8adc6404d

--- sshpubk.c.orig	Sun Jul 14 12:46:55 2013
+++ sshpubk.c	Wed Mar 25 11:54:43 2015
@@@@ -844,6 +844,7 @@@@ struct ssh2_userkey *ssh2_load_userkey(const Filename 
 	goto error;
     }
     sfree(public_blob);
+    smemclr(private_blob, private_blob_len);
     sfree(private_blob);
     sfree(encryption);
     if (errorstr)
@@@@ -864,8 +865,10 @@@@ struct ssh2_userkey *ssh2_load_userkey(const Filename 
 	sfree(mac);
     if (public_blob)
 	sfree(public_blob);
-    if (private_blob)
-	sfree(private_blob);
+    if (private_blob) {
+        smemclr(private_blob, private_blob_len);
+        sfree(private_blob);
+    }
     if (errorstr)
 	*errorstr = error;
     return ret;
@@@@ -1154,8 +1157,14 @@@@ int ssh2_save_userkey(const Filename *filename, struct
     }
 
     fp = f_open(filename, "w", TRUE);
-    if (!fp)
-	return 0;
+    if (!fp) {
+        sfree(pub_blob);
+        smemclr(priv_blob, priv_blob_len);
+        sfree(priv_blob);
+        smemclr(priv_blob_encrypted, priv_blob_len);
+        sfree(priv_blob_encrypted);
+        return 0;
+    }
     fprintf(fp, "PuTTY-User-Key-File-2: %s\n", key->alg->name);
     fprintf(fp, "Encryption: %s\n", cipherstr);
     fprintf(fp, "Comment: %s\n", key->comment);
@@@@ -1172,6 +1181,7 @@@@ int ssh2_save_userkey(const Filename *filename, struct
     sfree(pub_blob);
     smemclr(priv_blob, priv_blob_len);
     sfree(priv_blob);
+    smemclr(priv_blob_encrypted, priv_blob_len);
     sfree(priv_blob_encrypted);
     return 1;
 }
@

