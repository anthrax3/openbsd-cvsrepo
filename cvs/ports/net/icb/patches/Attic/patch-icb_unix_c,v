head	1.3;
access;
symbols
	OPENBSD_5_9:1.2.0.40
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.42
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.38
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.36
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.34
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.32
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.30
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.28
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.26
	OPENBSD_5_0:1.2.0.24
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.22
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.20
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.18
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.14
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.12
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.10
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.8
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.0.20
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.18
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.16
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.14
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.12
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.10
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.8
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.6
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1
	OPENBSD_2_9:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2016.03.18.23.25.21;	author naddy;	state dead;
branches;
next	1.2;
commitid	nSIbXztGa2UngBMO;

1.2
date	2005.12.31.02.09.46;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.14.16.42.54;	author millert;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.05.15.16.25.07;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove derelict ICB chat client; ok OpenBSD developer community
@
text
@$OpenBSD: patch-icb_unix_c,v 1.2 2005/12/31 02:09:46 fgsch Exp $
--- icb/unix.c.orig	Fri Feb 24 21:20:31 1995
+++ icb/unix.c	Sat Dec 31 01:54:33 2005
@@@@ -9,12 +9,36 @@@@
 #include "externs.h"
 #include <pwd.h>
 #include <sys/dir.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <unistd.h>
 
 #undef stty
 #undef gtty
 
-#ifndef SYSV
+#ifdef SYSV
 
+#define USE_TERMIO
+#include <termio.h>
+#define TTYSTRUCT termio
+#define stty(fd,buf) ioctl((fd),TCSETA,(buf))
+#define gtty(fd,buf) ioctl((fd),TCGETA,(buf))
+
+#else /* SYSV */
+
+# ifdef BSD4_4
+# define USE_TERMIO
+# include <termios.h>
+# define TTYSTRUCT termios
+# define stty(fd,buf) ioctl((fd),TIOCSETA,(buf))
+# define gtty(fd,buf) ioctl((fd),TIOCGETA,(buf))
+
+# endif /* BSD4_4 */
+
+#endif /* SYSV */
+
+#ifndef USE_TERMIO /* neither case above (SYSV or BSD4_4) */
+
 #ifdef linux
 #include <bsd/sgtty.h>
 #else
@@@@ -22,18 +46,15 @@@@
 #endif
 
 #define TTYSTRUCT sgttyb
-#define stty(fd,buf) ioctl((fd),TIOCSETN,(buf))
+#define stty(fd,buf) ioctl((fd),TIOCSETP,(buf))
 #define gtty(fd,buf) ioctl((fd),TIOCGETP,(buf))
-#else /* SYSV */
-#include <termio.h>
-#define TTYSTRUCT termio
-#define stty(fd,buf) ioctl((fd),TCSETA,(buf))
-#define gtty(fd,buf) ioctl((fd),TCGETA,(buf))
-#endif /* SYSV */
+#endif
 
 char *getlogin();
 
 struct TTYSTRUCT origtty;	/* holds the user's original term settings */
+struct stat origtty_stats;	/* holds termainal stats */
+char *mytty = NULL;		/* holds terminal name */
 
 int badttyinfo = 0;	/* used when running under some weird modes */
 
@@@@ -79,13 +100,13 @@@@ FILE *fp;
 pushback(c)
 char c;
 {
-#ifndef SYSV
+#ifndef USE_TERMIO
 	if (ioctl(0, TIOCSTI, &c) < 0)
 		perror("TIOCSTI ioctl failed");
-#else /* SYSV */
+#else /* USE_TERMIO */
 	if (ungetc(c,stdin) == EOF)
 		perror("ungetc() failed");
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 }
 
 
@@@@ -94,25 +115,30 @@@@ char c;
 
 getterm()
 {
-#ifndef SYSV
+	/* get terminal stats */
+	if ((mytty = ttyname(STDERR_FILENO))) {
+		if (stat(mytty, &origtty_stats)) mytty = NULL;
+	}
+
+#ifndef USE_TERMIO
 	struct ltchars lt;
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 	/* get tty settings */
 	if (gtty(0,&origtty) < 0) {
 		badttyinfo++;
 		ttyinfo.erase = '\b';	/* ^H */
 		ttyinfo.kill = '\025';	/* ^U */
 	} else {
-#ifndef SYSV
+#ifndef USE_TERMIO
 		ttyinfo.erase = origtty.sg_erase;
 		ttyinfo.kill = origtty.sg_kill;
-#else /* SYSV */
+#else /* USE_TERMIO */
 		ttyinfo.erase = origtty.c_cc[VERASE];
 		ttyinfo.kill = origtty.c_cc[VKILL];
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 	}
 
-#ifndef SYSV
+#ifndef USE_TERMIO
 	/* get local special chars */
  	if (ioctl(0, TIOCGLTC, &lt) < 0) {
 		ttyinfo.redraw = '\022'; /* ^R */
@@@@ -121,10 +147,10 @@@@ getterm()
 		ttyinfo.redraw = lt.t_rprntc;
 		ttyinfo.werase = lt.t_werasc;
 	}
-#else /* SYSV */
+#else /* USE_TERMIO */
 	ttyinfo.redraw = '\022'; /* ^R */
 	ttyinfo.werase = '\027'; /* ^W */
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 
 	/* get the current window size */
 	getwinsize();
@@@@ -138,21 +164,24 @@@@ icbterm()
 {
 	struct TTYSTRUCT tty;
 
+	/* disable biff/mesg */
+	if (mytty)
+		chmod(mytty, origtty_stats.st_mode & ~(S_IXUSR | S_IWGRP));
+
 	if (badttyinfo)
 		return;
 
-
 	bcopy((char *)&origtty, (char *)&tty, (unsigned)sizeof(struct TTYSTRUCT));
 
 	/* turn on cbreak - turn off echo */
-#ifndef SYSV
+#ifndef USE_TERMIO
 	tty.sg_flags |= CBREAK;
 	tty.sg_flags &= ~ECHO;
-#else /* SYSV */
+#else /* USE_TERMIO */
 	tty.c_lflag  &= ~ICANON;
 	tty.c_cc[VEOF] = 1;
 	tty.c_lflag &= ~ECHO;
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 
 	echomode = 0;
 	/* set the new flags */
@@@@ -167,6 +196,10 @@@@ icbterm()
 
 restoreterm()
 {
+	/* restore terminal stats */
+	if (mytty)
+		chmod(mytty, origtty_stats.st_mode);
+
 	if (badttyinfo)
 		return;
 
@@@@ -258,11 +291,11 @@@@ echo()
 	}
 
 	/* turn on echo */
-#ifndef SYSV
+#ifndef USE_TERMIO
 	tty.sg_flags |= ECHO;
-#else /* SYSV */
+#else /* USE_TERMIO */
 	tty.c_lflag  |= ECHO;
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 
 	echomode = 1;
 
@@@@ -287,11 +320,11 @@@@ noecho()
 	}
 
 	/* turn off echo */
-#ifndef SYSV
+#ifndef USE_TERMIO
 	tty.sg_flags &= ~ECHO;
-#else /* SYSV */
+#else /* USE_TERMIO */
 	tty.c_lflag  &= ~ECHO;
-#endif /* SYSV */
+#endif /* USE_TERMIO */
 
 	echomode = 0;
 
@


1.2
log
@make this works in amd64. bump package as well.
@
text
@d1 1
a1 1
$OpenBSD: patch-icb_unix_c,v 1.1 2001/05/14 16:42:54 millert Exp $
@


1.1
log
@Make paging *not* be the default.  Also regenerate patches with new naming
scheme while I'm at it.
@
text
@d1 4
a4 4
$OpenBSD: update-patches,v 1.4 2001/03/31 22:54:41 espie Exp $
--- icb/unix.c.orig	Fri Feb 24 14:20:31 1995
+++ icb/unix.c	Mon May 14 10:33:04 2001
@@@@ -9,11 +9,35 @@@@
d17 1
a17 1
+
d38 1
a38 1
 
d41 1
@


1.1.2.1
log
@MFC:
Make paging *not* be the default.  Regen patches.
Requested by espie@@
@
text
@d1 1
a1 1
$OpenBSD: patch-icb_unix_c,v 1.1 2001/05/14 16:42:54 millert Exp $
@

