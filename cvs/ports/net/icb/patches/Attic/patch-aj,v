head	1.4;
access;
symbols
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2001.05.14.16.42.51;	author millert;	state dead;
branches;
next	1.3;

1.3
date	2001.03.12.15.59.02;	author wilfried;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2000.01.16.09.26.46;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	98.05.19.01.36.36;	author mickey;	state Exp;
branches;
next	;

1.3.2.1
date	2001.05.15.16.25.04;	author naddy;	state dead;
branches;
next	;


desc
@@


1.4
log
@Make paging *not* be the default.  Also regenerate patches with new naming
scheme while I'm at it.
@
text
@--- tcl/tclProc.c.orig	Fri Feb 24 22:19:56 1995
+++ tcl/tclProc.c	Sun Feb 11 12:27:12 2001
@@@@ -124,8 +124,8 @@@@
 	    argPtr = (Var *) malloc(VAR_SIZE(nameLength, valueLength));
 	    procPtr->argPtr = argPtr;
 	} else {
-	    argPtr->nextPtr = (Var *) malloc(VAR_SIZE(nameLength, valueLength));
-	    argPtr = argPtr->nextPtr;
+	    procPtr->argPtr->nextPtr = (Var *) malloc(VAR_SIZE(nameLength, valueLength));
+	    argPtr = procPtr->argPtr->nextPtr;
 	}
 	strcpy(argPtr->name, fieldValues[0]);
 	if (fieldCount == 2) {
@@@@ -136,6 +136,7 @@@@
 	}
 	argPtr->valueLength = valueLength;
 	argPtr->flags = 0;
+	argPtr->globalPtr = NULL;
 	argPtr->nextPtr = NULL;
 	free((char *) fieldValues);
     }
@@@@ -793,11 +794,13 @@@@
      */
 
     procDone:
-    for (argPtr = frame.varPtr; argPtr != NULL; argPtr = argPtr->nextPtr) {
+    for (argPtr = frame.varPtr; argPtr != NULL;) {
+	void *tmp = argPtr;
 	if (argPtr->flags & VAR_DYNAMIC) {
 	    free(argPtr->value);
 	}
-	free((char *) argPtr);
+        argPtr = argPtr->nextPtr;
+	free(tmp);
     }
     iPtr->framePtr = frame.callerPtr;
     iPtr->varFramePtr = frame.callerVarPtr;
@@@@ -826,13 +829,14 @@@@
 ProcDeleteProc(procPtr)
     register Proc *procPtr;		/* Procedure to be deleted. */
 {
-    register Var *argPtr;
+    register Var *argPtr, *arg1Ptr;
 
     free((char *) procPtr->command);
-    for (argPtr = procPtr->argPtr; argPtr != NULL; argPtr = argPtr->nextPtr) {
+    for (argPtr = procPtr->argPtr; argPtr != NULL; argPtr = arg1Ptr) {
 	if (argPtr->flags & VAR_DYNAMIC) {
 	    free(argPtr->value);
 	}
+	arg1Ptr = argPtr->nextPtr;
 	free((char *) argPtr);
     }
     free((char *) procPtr);
@


1.3
log
@respect CFLAGS
fix memory bugs while I'm at it
@
text
@@


1.3.2.1
log
@MFC:
Make paging *not* be the default.  Regen patches.
Requested by espie@@
@
text
@@


1.2
log
@- convert patches to unified diffs
- merge contents of patch-ad and patch-an into patch-ad
@
text
@d1 22
a22 3
--- tcl/tclProc.c.orig	Fri Feb 24 16:19:56 1995
+++ tcl/tclProc.c	Sun Jan 16 01:53:10 2000
@@@@ -793,11 +793,13 @@@@
d38 17
@


1.1
log
@fix free()-related bug
@
text
@d1 18
a18 29
*** tcl/tclProc.c.orig	Mon May 18 03:13:18 1998
--- tcl/tclProc.c	Mon May 18 03:14:36 1998
***************
*** 793,803 ****
       */
  
      procDone:
!     for (argPtr = frame.varPtr; argPtr != NULL; argPtr = argPtr->nextPtr) {
  	if (argPtr->flags & VAR_DYNAMIC) {
  	    free(argPtr->value);
  	}
! 	free((char *) argPtr);
      }
      iPtr->framePtr = frame.callerPtr;
      iPtr->varFramePtr = frame.callerVarPtr;
--- 793,805 ----
       */
  
      procDone:
!     for (argPtr = frame.varPtr; argPtr != NULL;) {
! 	void *tmp = argPtr;
  	if (argPtr->flags & VAR_DYNAMIC) {
  	    free(argPtr->value);
  	}
!         argPtr = argPtr->nextPtr;
! 	free(tmp);
      }
      iPtr->framePtr = frame.callerPtr;
      iPtr->varFramePtr = frame.callerVarPtr;
@

