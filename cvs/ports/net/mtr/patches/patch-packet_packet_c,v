head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2017.06.02.16.50.16;	author sthen;	state Exp;
branches;
next	1.1;
commitid	vryk5nzj3ZeiwSrT;

1.1
date	2017.06.02.14.30.27;	author sthen;	state Exp;
branches;
next	;
commitid	Rk4qhQWEfdvDkBeC;


desc
@@


1.2
log
@mtr tweaks:
- fix displayed version string (problem from github tarball).
- add a new _mtr user
- drop mtr-packet to _mtr rather than to getgid()/getuid()
- chroot to /var/empty
@
text
@$OpenBSD: patch-packet_packet_c,v 1.1 2017/06/02 14:30:27 sthen Exp $

Index: packet/packet.c
--- packet/packet.c.orig
+++ packet/packet.c
@@@@ -23,6 +23,7 @@@@
 #include <stdlib.h>
 #include <string.h>
 #include <unistd.h>
+#include <pwd.h>
 
 #ifdef HAVE_LIBCAP
 #include <sys/capability.h>
@@@@ -38,11 +39,25 @@@@ int drop_elevated_permissions(
 #ifdef HAVE_LIBCAP
     cap_t cap;
 #endif
+    struct passwd *pw;
 
-    /*  Drop any suid permissions granted  */
-    if (setgid(getgid()) || setuid(getuid())) {
+    if ((pw = getpwnam("_mtr")) == NULL) {
         return -1;
     }
+    if (chroot("/var/empty") == -1) {
+        return -1;
+    }
+    if (chdir("/") == -1) {
+        return -1;
+    }
+    if (pw) {
+        if (setgroups(1, &pw->pw_gid) == -1 ||
+            setresgid(pw->pw_gid, pw->pw_gid, pw->pw_gid) == -1 ||
+            setresuid(pw->pw_uid, pw->pw_uid, pw->pw_uid) == -1) {
+                return -1;
+        }
+    }
+    endpwent();
 
     if (geteuid() != getuid() || getegid() != getgid()) {
         return -1;
@


1.1
log
@update to mtr-0.92, features include:

- shiny new DNS code that gets rid of the horrible libbind hack.

- the privileged packet sending code has been split out into a separate
"mtr-packet" process with a clear separation between init/main code, which
communicates with the main mtr process over a pipe.

Patch to add a pledge to mtr-packet, currently disabled; it works for
ICMP but requires additional sockopts to work with UDP.
@
text
@d1 1
a1 6
$OpenBSD$

Not yet enabled, requires additional sockopts:

SOL_SOCKET:	SO_REUSEADDR, SO_REUSEPORT
IPPROTO_IPV6:	IPV6_CHECKSUM
d6 11
a16 2
@@@@ -65,6 +65,12 @@@@ int drop_elevated_permissions(
     }
d18 1
d20 9
a28 2
+#ifdef __OpenBSD__
+    if (0 && pledge("stdio inet", NULL) == -1) {
d31 8
a38 4
+#endif
+
     return 0;
 }
d40 2
@

