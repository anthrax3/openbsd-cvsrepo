head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.2
	OPENBSD_6_0_BASE:1.1.1.1
	tb_2016-Apr-25:1.1.1.1
	tb:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.04.25.17.43.39;	author tb;	state Exp;
branches
	1.1.1.1;
next	;
commitid	DMayJbirX1wmGP8o;

1.1.1.1
date	2016.04.25.17.43.39;	author tb;	state Exp;
branches;
next	;
commitid	DMayJbirX1wmGP8o;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- configure.ac.orig	Tue Aug 18 23:07:06 2015
+++ configure.ac	Sun Dec 20 15:25:11 2015
@@@@ -10,13 +10,14 @@@@ PKG_PROG_PKG_CONFIG
 AC_CANONICAL_HOST
 AS_CASE([$host_os],
   [freebsd*], [PLATFORM="freebsd"],
+  [openbsd*], [PLATFORM="openbsd"],
   [PLATFORM="nix"])
 
-PKG_CHECK_MODULES([openssl], [openssl], [PC_REQUIRES+=(openssl)],
+PKG_CHECK_MODULES([openssl], [openssl], [PC_REQUIRES="openssl ${PC_REQUIRES}"],
             [AC_CHECK_HEADER([openssl/ssl.h],
                              [
                               openssl_LIBS="-lssl -lcrypto"
-                              PC_LIBS+=($openssl_LIBS)
+                              PC_LIBS="${openssl_LIBS} ${PC_LIBS}"
                              ],
                              [AC_MSG_ERROR([openssl not found; openssl required])]
                             )])
@@@@ -32,7 +33,7 @@@@ if test "x$with_libxml2" != xno; then
   PKG_CHECK_MODULES([libxml2], [libxml-2.0 >= 2.7],
                     [
                      with_libxml2=yes
-                     PC_REQUIRES+=(libxml-2.0)
+                     PC_REQUIRES="libxml-2.0 ${PC_REQUIRES}"
                     ],
                     [
                      old_CFLAGS=$CFLAGS
@@@@ -42,19 +43,19 @@@@ if test "x$with_libxml2" != xno; then
                                       with_libxml2=yes
                                       libxml2_CFLAGS="-I${includedir}/libxml2"
                                       libxml2_LIBS="-lxml2"
-                                      PC_LIBS+=($libxml2_LIBS)
-                                      PC_CFLAGS+=($libxml2_CFLAGS)
+                                      PC_LIBS="${libxml2_LIBS} ${PC_LIBS}"
+                                      PC_CFLAGS="${libxml2_CFLAGS} ${PC_CFLAGS}"
                                      ],
                                      [AC_MSG_ERROR([libxml2 not found.])])
                      CFLAGS=$old_CFLAGS
                     ])
 else
   PKG_CHECK_MODULES([expat], [expat >= 2.0.0],
-                    [PC_REQUIRES+=(expat)],
+                    [PC_REQUIRES="expat ${PC_REQUIRES} "],
                     [AC_CHECK_HEADER([expat.h],
                                      [
                                       expat_LIBS="-lexpat"
-                                      PC_LIBS+=($expat_LIBS)
+                                      PC_LIBS="${expat_LIBS} ${PC_LIBS}"
                                      ],
                                      [AC_MSG_ERROR([expat not found; expat required.])]
                                     )
@@@@ -76,15 +77,18 @@@@ fi
 AC_MSG_NOTICE([libstrophe will use the $with_parser XML parser])
 AC_SEARCH_LIBS([socket], [socket])
 
-if test "x$PLATFORM" != xfreebsd; then
-        AC_CHECK_LIB([resolv], [res_query], [],
+
+AS_IF([test "x$PLATFORM" = xfreebsd],
+      AC_MSG_NOTICE([skipping libresolv checks for freebsd]),
+      [test "x$PLATFORM" = xopenbsd],
+      AC_MSG_NOTICE([skipping libresolv checks for openbsd]),
+      [test "x$PLATFORM" = xnix],
+      [AC_CHECK_LIB([resolv], [res_query], [],
             [AC_CHECK_LIB([resolv], [__res_query], [],
                 [AC_MSG_ERROR([libresolv not found; libresolv required.])])])
-        PC_LIBS+=(-lresolv)
-else
-        AC_MSG_NOTICE([skipping libresolv checks for freebsd])
-fi
+        PC_LIBS="-lresolv ${PC_LIBS}"])
 
+
 AC_CHECK_HEADERS([arpa/nameser_compat.h])
 
 
@@@@ -97,9 +101,9 @@@@ m4_ifdef([PKG_INSTALLDIR], [PKG_INSTALLDIR],
 
 AM_CONDITIONAL([PARSER_EXPAT], [test x$with_parser != xlibxml2])
 
-AC_SUBST([PC_REQUIRES], [${PC_REQUIRES[[@@]]}])
-AC_SUBST([PC_CFLAGS], [${PC_CFLAGS[[@@]]}])
-AC_SUBST([PC_LIBS], [${PC_LIBS[[@@]]}])
+AC_SUBST([PC_REQUIRES], [${PC_REQUIRES}])
+AC_SUBST([PC_CFLAGS], [${PC_CFLAGS}])
+AC_SUBST([PC_LIBS], [${PC_LIBS}])
 
 AC_SUBST(PARSER_NAME)
 AC_SUBST(PARSER_CFLAGS)
@


1.1.1.1
log
@import libstrophe, a dependency for the profanity xmmp client.
from Rafael Sadowski with tweaks and ok sthen@@

libstrophe is a minimal XMPP library written in C. It has almost no
external dependencies, only an XML parsing library (expat or libxml are
both supported). It is designed for both POSIX and Windows systems.
@
text
@@
