head	1.4;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	sthen_20151103:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.10.04.20.51.36;	author rsadowski;	state Exp;
branches;
next	1.3;
commitid	LLVAbaAErlBr4DJ8;

1.3
date	2017.02.27.14.08.16;	author benoit;	state Exp;
branches;
next	1.2;
commitid	HIKdts0gwtMTDNT0;

1.2
date	2016.05.27.11.49.04;	author jca;	state Exp;
branches;
next	1.1;
commitid	juJ62atAgM9weuh6;

1.1
date	2015.11.03.20.07.47;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	8oVdhXeYH6wV080U;

1.1.1.1
date	2015.11.03.20.07.47;	author sthen;	state Exp;
branches;
next	;
commitid	8oVdhXeYH6wV080U;


desc
@@


1.4
log
@update tinc to 1.0.32
@
text
@$OpenBSD: patch-doc_tinc_texi,v 1.3 2017/02/27 14:08:16 benoit Exp $
Index: doc/tinc.texi
--- doc/tinc.texi.orig
+++ doc/tinc.texi
@@@@ -2071,7 +2071,7 @@@@ In switch or hub modes ARP does work so the sender alr
 In those modes every interface should have a unique MAC address, so make sure they are not the same.
 Because switch and hub modes rely on MAC addresses to function correctly,
 these modes cannot be used on the following operating systems which don't have a `tap' style virtual network device:
-OpenBSD, NetBSD, Darwin and Solaris.
+NetBSD, Darwin and Solaris.
 
 
 @@c ==================================================================
@@@@ -2498,8 +2498,6 @@@@ For IPv6 addresses:
 On some platforms, when running tinc in switch mode, the VPN interface must be set to tap mode with an ifconfig command:
 
 @@multitable {Darwin (Mac OS X)} {ifconfig route add -bla network address netmask netmask prefixlength interface}
-@@item OpenBSD
-@@tab @@code{ifconfig} @@var{interface} @@code{link0}
 @@end multitable
 
 On Linux, it is possible to create a persistent tun/tap interface which will
@


1.3
log
@Update to tinc-1.0.31.

from Rafael Sadowski (Maintainer) and tested by Uwe Werler
@
text
@d1 5
a5 4
$OpenBSD$
--- doc/tinc.texi.orig	Sat Oct 29 15:23:48 2016
+++ doc/tinc.texi	Mon Feb 27 14:47:22 2017
@@@@ -2071,7 +2071,7 @@@@
d14 1
a14 1
@@@@ -2498,8 +2498,6 @@@@
@


1.2
log
@Update to tinc-1.0.28

from Rafael Sadowski (maintainer)
@
text
@d1 4
a4 18
$OpenBSD: patch-doc_tinc_texi,v 1.1.1.1 2015/11/03 20:07:47 sthen Exp $
--- doc/tinc.texi.orig	Sun Apr 10 00:03:55 2016
+++ doc/tinc.texi	Mon May 23 18:13:04 2016
@@@@ -268,12 +268,7 @@@@ The tap driver can be loaded with @@code{kldload if_tap
 @@node       Configuration of OpenBSD kernels
 @@subsection Configuration of OpenBSD kernels
 
-For OpenBSD version 2.9 and higher,
-the tun driver is included in the default kernel configuration.
-There is also a kernel patch from @@uref{http://diehard.n-r-g.com/stuff/openbsd/}
-which adds a tap device to OpenBSD which should work with tinc,
-but with recent versions of OpenBSD,
-a tun device can act as a tap device by setting the link0 option with ifconfig.
+The tun and tap drivers are included in the default kernel configuration.
 
 
 @@c ==================================================================
@@@@ -2075,7 +2070,7 @@@@ In switch or hub modes ARP does work so the sender alr
d13 1
a13 1
@@@@ -2502,8 +2497,6 @@@@ For IPv6 addresses:
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- doc/tinc.texi.orig	Mon Nov  2 21:03:47 2015
+++ doc/tinc.texi	Mon Nov  2 21:05:57 2015
d18 1
a18 1
@@@@ -2054,7 +2049,7 @@@@ In switch or hub modes ARP does work so the sender alr
d27 1
a27 1
@@@@ -2481,8 +2476,6 @@@@ For IPv6 addresses:
@


1.1.1.1
log
@import ports/net/tinc, from Rafael Sadowski with tweaks from jca and myself
OK jca

tinc is a Virtual Private Network (VPN) daemon that uses tunnelling and
encryption to create a secure private network between hosts on the Internet.

Because the tunnel appears to the IP level network code as a normal network
device, there is no need to adapt any existing software.  This tunnelling
allows VPN sites to share information with each other over the Internet
without exposing any information to others.

A single tinc daemon can accept more than one connection at a time, thus
making it possible to create larger virtual networks, because some
limitations are circumvented.

Instead of most other VPN implementations, tinc encapsulates each network
packet in its own UDP packet, instead of encapsulating all into one TCP or
even PPP over TCP stream. This results in lower latencies, less overhead,
and in general better responsiveness and throughput.
@
text
@@
