head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	sthen_20151103:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.11.03.20.07.47;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	8oVdhXeYH6wV080U;

1.1.1.1
date	2015.11.03.20.07.47;	author sthen;	state Exp;
branches;
next	;
commitid	8oVdhXeYH6wV080U;


desc
@@



1.1
log
@Initial revision
@
text
@tinc is a Virtual Private Network (VPN) daemon that uses tunnelling and
encryption to create a secure private network between hosts on the Internet.

Because the tunnel appears to the IP level network code as a normal network
device, there is no need to adapt any existing software.  This tunnelling
allows VPN sites to share information with each other over the Internet
without exposing any information to others.

A single tinc daemon can accept more than one connection at a time, thus
making it possible to create larger virtual networks, because some
limitations are circumvented.

Instead of most other VPN implementations, tinc encapsulates each network
packet in its own UDP packet, instead of encapsulating all into one TCP or
even PPP over TCP stream. This results in lower latencies, less overhead,
and in general better responsiveness and throughput.
@


1.1.1.1
log
@import ports/net/tinc, from Rafael Sadowski with tweaks from jca and myself
OK jca

tinc is a Virtual Private Network (VPN) daemon that uses tunnelling and
encryption to create a secure private network between hosts on the Internet.

Because the tunnel appears to the IP level network code as a normal network
device, there is no need to adapt any existing software.  This tunnelling
allows VPN sites to share information with each other over the Internet
without exposing any information to others.

A single tinc daemon can accept more than one connection at a time, thus
making it possible to create larger virtual networks, because some
limitations are circumvented.

Instead of most other VPN implementations, tinc encapsulates each network
packet in its own UDP packet, instead of encapsulating all into one TCP or
even PPP over TCP stream. This results in lower latencies, less overhead,
and in general better responsiveness and throughput.
@
text
@@
