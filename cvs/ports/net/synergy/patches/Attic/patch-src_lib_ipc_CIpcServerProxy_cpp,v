head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.2
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2014.05.01.14.46.53;	author bcallah;	state dead;
branches;
next	1.5;

1.5
date	2013.11.18.23.56.35;	author bcallah;	state Exp;
branches;
next	1.4;

1.4
date	2013.07.04.14.49.26;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2013.05.12.16.09.04;	author bcallah;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.20.09.19.31;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.08.20.35.36;	author bcallah;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update Synergy to 1.4.17
ok abieber@@
@
text
@$OpenBSD: patch-src_lib_ipc_CIpcServerProxy_cpp,v 1.5 2013/11/18 23:56:35 bcallah Exp $

On loongson/sparc64/hppa:
CIpcServerProxy.cpp: In member function 'void CIpcServerProxy::send(const CIpcMessage&)':
CIpcServerProxy.cpp:93: ISO C++ says that these are ambiguous, even though the worst conversion for the first is better than the worst conversion for the second:
../synergy/CProtocolUtil.h:81: note: candidate 1: static void CProtocolUtil::writef(void*, const char*, void*)
../synergy/CProtocolUtil.h:53: note: candidate 2: static void CProtocolUtil::writef(synergy::IStream*, const char*, ...)
../synergy/CProtocolUtil.h:81: error: 'static void CProtocolUtil::writef(void*, const char*, void*)' is private
CIpcServerProxy.cpp:93: error: within this context

gcc bug fixed in 4.3.3

--- src/lib/ipc/CIpcServerProxy.cpp.orig	Sat Jun 29 10:17:49 2013
+++ src/lib/ipc/CIpcServerProxy.cpp	Sun Nov 17 15:00:17 2013
@@@@ -94,7 +94,11 @@@@ CIpcServerProxy::send(const CIpcMessage& message)
 	case kIpcCommand: {
 		const CIpcCommandMessage& cm = static_cast<const CIpcCommandMessage&>(message);
 		CString command = cm.command();
+#if defined(__mips64__) || defined(__sparc64__) || defined(__hppa__)
+		CProtocolUtil::writef(static_cast<void*>(&m_stream), static_cast<const char*>(kIpcMsgCommand), &command);
+#else
 		CProtocolUtil::writef(&m_stream, kIpcMsgCommand, &command);
+#endif
 		break;
 	}
 
@


1.5
log
@Update synergy to 1.4.15
testing and ok okan@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_lib_ipc_CIpcServerProxy_cpp,v 1.4 2013/07/04 14:49:26 landry Exp $
@


1.4
log
@Fix on hppa by using the same tweaks as sparc64/mips64el.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_lib_ipc_CIpcServerProxy_cpp,v 1.3 2013/05/12 16:09:04 bcallah Exp $
d13 3
a15 3
--- src/lib/ipc/CIpcServerProxy.cpp.orig	Mon Sep  3 22:09:56 2012
+++ src/lib/ipc/CIpcServerProxy.cpp	Thu Apr 18 10:50:31 2013
@@@@ -91,7 +91,11 @@@@ CIpcServerProxy::send(const CIpcMessage& message)
@


1.3
log
@Update net/synergy to 1.4.12
ok abieber@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_lib_ipc_CIpcServerProxy_cpp,v 1.2 2013/01/20 09:19:31 landry Exp $
d3 1
a3 1
On loongson/sparc64:
d19 1
a19 1
+#if defined(__mips64__) || defined(__sparc64__)
@


1.2
log
@Unbreak on sparc64: use the same workaround as on mips64/loongson
(gcc bug fixed in 4.3.3? other archs may be affected)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_lib_ipc_CIpcServerProxy_cpp,v 1.1 2013/01/08 20:35:36 bcallah Exp $
d13 3
a15 3
--- src/lib/ipc/CIpcServerProxy.cpp.orig	Fri Jul 13 11:34:59 2012
+++ src/lib/ipc/CIpcServerProxy.cpp	Sun Jan 20 02:09:02 2013
@@@@ -90,7 +90,11 @@@@ CIpcServerProxy::send(const CIpcMessage& message)
@


1.1
log
@Update to synergy 1.4.10 and take MAINTAINERSHIP.
CMakeLists.txt patch done by dcoppa@@
ok landry@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
On loongson:
d13 2
a14 2
--- src/lib/ipc/CIpcServerProxy.cpp.orig	Fri Jul 13 13:34:59 2012
+++ src/lib/ipc/CIpcServerProxy.cpp	Sun Jan  6 12:31:58 2013
d19 1
a19 1
+#if (__mips64__)
@

