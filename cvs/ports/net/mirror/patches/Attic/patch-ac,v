head	1.4;
access;
symbols
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	mirror2_8:1.1.1.1
	mirror:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2000.05.19.04.56.48;	author form;	state dead;
branches;
next	1.3;

1.3
date	98.06.30.06.49.04;	author form;	state Exp;
branches
	1.3.8.1;
next	1.2;

1.2
date	98.06.10.10.26.27;	author form;	state Exp;
branches;
next	1.1;

1.1
date	98.01.04.18.17.05;	author joey;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.04.18.17.05;	author joey;	state Exp;
branches;
next	;

1.3.8.1
date	2000.09.15.05.09.31;	author marc;	state dead;
branches;
next	;


desc
@@


1.4
log
@/usr/local -> PREFIX
fix network functions
remove scripts/configure
@
text
@*** mirror.pl.orig	Sat May 30 02:01:42 1998
--- mirror.pl	Tue Jun 30 13:43:08 1998
***************
*** 104,110 ****
  # Try to find the default location of various programs via
  # the users PATH then using $extra_path
  if( ! $on_win ){
! 	$extra_path = '/usr/local/bin:/usr/new/bin:/usr/public/bin:/usr/ucb:/usr/bin:/bin:/etc:/usr/etc:/usr/local/etc';
  }
  if( $extra_path ne '' ){
  	$ENV{ 'PATH' } .= $path_sep . $extra_path;
--- 104,110 ----
  # Try to find the default location of various programs via
  # the users PATH then using $extra_path
  if( ! $on_win ){
! 	$extra_path = '/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin';
  }
  if( $extra_path ne '' ){
  	$ENV{ 'PATH' } .= $path_sep . $extra_path;
***************
*** 159,177 ****
  $rm_prog = &find_prog( 'rm' );
  
  # Generate checksums
! $sum_prog = &find_prog( 'sum' );
  
  # SPECIAL NOTE: This is eval'd, so DONT put double-quotes (") in it.
  # You can get local variables to appear as in the second example:
! $mail_subject = '-s \'mirror update\'';
! # $mail_subject = ' -s \'mirror update of $package\'';
  
  # When scanning the local directory, how often to prod the remote
  # system to keep the connection alive
  $prod_interval = 60;
  
  # Put the directory that mirror is actually in at the start of PERLLIB.
! $dir = &real_dir_from_path( $0 );
  unshift( @@INC, $dir );
  
  # Debian GNU/Linux stores mirror.defaults in /etc/mirror
--- 159,178 ----
  $rm_prog = &find_prog( 'rm' );
  
  # Generate checksums
! $sum_prog = &find_prog( 'md5' );
  
  # SPECIAL NOTE: This is eval'd, so DONT put double-quotes (") in it.
  # You can get local variables to appear as in the second example:
! # $mail_subject = '-s \'mirror update\'';
! $mail_subject = ' -s \'mirror update of $package\'';
  
  # When scanning the local directory, how often to prod the remote
  # system to keep the connection alive
  $prod_interval = 60;
  
  # Put the directory that mirror is actually in at the start of PERLLIB.
! # $dir = &real_dir_from_path( $0 );
! $dir = "/usr/local/lib/mirror";
  unshift( @@INC, $dir );
  
  # Debian GNU/Linux stores mirror.defaults in /etc/mirror
@


1.3
log
@fix perl path
@
text
@@


1.3.8.1
log
@bring net as of cut-over date into 2.7 branch
@
text
@@


1.2
log
@update to 1.9
@
text
@d1 2
a2 13
*** mirror.pl.orig	Fri May 29 21:01:42 1998
--- mirror.pl	Mon Jun  8 14:36:52 1998
***************
*** 1,4 ****
! #!/usr/bin/perl
  # Make local directories mirror images of a remote sites
  #
  #
--- 1,4 ----
! #!/usr/local/bin/perl5
  # Make local directories mirror images of a remote sites
  #
  #
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
*** mirror.pl.orig	Sat Mar 16 15:46:09 1996
--- mirror.pl	Sat Mar 16 15:51:49 1996
d4 13
a16 3
*** 75,81 ****
  
  # Try to find the default localation of various programs via
d18 7
a24 7
! $extra_path = '/usr/local/bin:/usr/new/bin:/usr/public/bin:/usr/ucb:/usr/bin:/bin:/etc:/usr/etc:/usr/local/etc';
  $ENV{ 'PATH' } .= ':' . $extra_path;
  
  &trap_signals();
--- 75,81 ----
  
  # Try to find the default localation of various programs via
d26 5
a30 4
! $extra_path = '/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin';
  $ENV{ 'PATH' } .= ':' . $extra_path;
  
  &trap_signals();
d32 1
a32 1
*** 128,146 ****
d51 2
a52 2
  # Make sure that your PERLLIB environment variable can get you
--- 128,147 ----
d69 1
a69 1
! $dir = "!!PREFIX!!/lib/mirror";
d72 1
a72 1
  # Make sure that your PERLLIB environment variable can get you
@


1.1.1.1
log
@
mirror
@
text
@@
