head	1.5;
access;
symbols
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2006.10.31.19.32.51;	author brad;	state dead;
branches;
next	1.4;

1.4
date	2006.06.14.02.01.08;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.05.18.55.41;	author fgsch;	state Exp;
branches
	1.3.4.1
	1.3.6.1;
next	1.2;

1.2
date	2004.04.24.08.04.13;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2004.01.27.01.03.54;	author brad;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.03.27.15.16.43;	author sturm;	state dead;
branches;
next	;

1.3.4.1
date	2005.09.04.20.20.29;	author sturm;	state Exp;
branches;
next	;

1.3.6.1
date	2005.09.04.20.26.32;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@upgrade to gaim 2.0.0beta4

the audio flavor has been removed for now
as 2.x now requires gstreamer and the gstreamer
version we have in-tree is not new enough.

tested by ckuethe@@ alek@@ brad@@ and a few others.

ok alek@@
@
text
@Avoid a crash by leaving enough space for nul.

$OpenBSD: patch-src_util_c,v 1.4 2006/06/14 02:01:08 fgsch Exp $
--- src/util.c.orig	Thu Aug  4 16:46:10 2005
+++ src/util.c	Thu Aug  4 16:49:20 2005
@@@@ -2745,7 +2745,7 @@@@ url_fetched_cb(gpointer url_data, gint s
 
 		gfud->len++;
 
-		if (gfud->len == gfud->data_len + 1)
+		if (gfud->len == gfud->data_len)
 		{
 			gfud->data_len += (gfud->data_len) / 2;
 
@@@@ -2753,6 +2753,7 @@@@ url_fetched_cb(gpointer url_data, gint s
 		}
 
 		gfud->webdata[gfud->len - 1] = data;
+		gfud->webdata[gfud->len] = '\0';
 
 		if (!gfud->startsaving)
 		{
@


1.4
log
@and add an explanation for this as well.
@
text
@d3 1
a3 1
$OpenBSD: patch-src_util_c,v 1.3 2005/08/05 18:55:41 fgsch Exp $
@


1.3
log
@fixes a crash due to non terminated strings. submitted to gaim as well.
bump package.  maintainer ok.
@
text
@d1 3
a3 1
$OpenBSD$
@


1.3.6.1
log
@MFC:
SECURITY: upgrade to 1.5.0;
fixes several security vulnerabilities.
http://www.vuxml.org/openbsd/0dfcb310-0f38-11da-ba28-00065bd5b0b6.html

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_util_c,v 1.3 2005/08/05 18:55:41 fgsch Exp $
@


1.3.4.1
log
@MFC:
SECURITY: upgrade to 1.5.0;
fixes several security vulnerabilities
http://www.vuxml.org/openbsd/0dfcb310-0f38-11da-ba28-00065bd5b0b6.html

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_util_c,v 1.3 2005/08/05 18:55:41 fgsch Exp $
@


1.2
log
@upgrade to gaim 0.77
@
text
@d1 11
a11 13
$OpenBSD: patch-src_util_c,v 1.1 2004/01/27 01:03:54 brad Exp $
--- src/util.c.orig	2004-01-09 23:04:56.000000000 -0500
+++ src/util.c	2004-01-26 14:51:51.000000000 -0500
@@@@ -247,24 +247,71 @@@@ gaim_base64_decode(const char *text, cha
 /**************************************************************************
  * Quoted Printable Functions
  **************************************************************************/
-void
-gaim_quotedp_decode(const char *str, char **ret_str, int *ret_len)
+static void hex(const char **p, const char *end, unsigned char *n)
 {
-	char *p, *n, *new;
+	int i, c;
d13 2
a14 40
-	n = new = g_malloc(strlen (str) + 1);
+	for (i = 0, c = 0; i < 2 && *p < end; ++i, ++*p) {
+		c <<= 4;
+		switch (**p) {
+		case '0': break;
+		case '1': c += 1; break;
+		case '2': c += 2; break;
+		case '3': c += 3; break;
+		case '4': c += 4; break;
+		case '5': c += 5; break;
+		case '6': c += 6; break;
+		case '7': c += 7; break;
+		case '8': c += 8; break;
+		case '9': c += 9; break;
+		case 'a': c += 10; break;
+		case 'b': c += 11; break;
+		case 'c': c += 12; break;
+		case 'd': c += 13; break;
+		case 'e': c += 14; break;
+		case 'f': c += 15; break;
+		case 'A': c += 10; break;
+		case 'B': c += 11; break;
+		case 'C': c += 12; break;
+		case 'D': c += 13; break;
+		case 'E': c += 14; break;
+		case 'F': c += 15; break;
+		default:
+			  if (i == 0) {
+				  *n = **p;
+				  ++*p;
+				  return;
+			  }
+			  c >>= 4;
+			  goto done;
+		}
+	}
+done:
+	*n = (c > UCHAR_MAX) ? '?' : c;
+	return;
+}
d16 2
a17 28
-	for (p = (char *)str; *p; p++, n++) {
+void
+gaim_quotedp_decode(const char *str, char **ret_str, int *ret_len)
+{
+	const char *p, *end;
+	unsigned char *n, *new;
+	size_t len;
+
+	len = strlen (str);
+	n = new = g_malloc(len + 1);
+	p = str;
+	end = &p[len];
+	while (p < end) {
 		if (*p == '=') {
-			sscanf(p + 1, "%2x\n", (int *)n);
-			p += 2;
-		}
-		else if (*p == '_')
+			++p;
+			hex(&p, end, n);
+		} else if (*p == '_')
 			*n = ' ';
 		else
 			*n = *p;
+		++n;
 	}
-
 	*n = '\0';
d19 2
a20 51
 	if (ret_len)
@@@@ -1962,7 +2009,7 @@@@ gaim_url_parse(const char *url, char **r
 			   char **ret_path)
 {
 	char scan_info[255];
-	char port_str[5];
+	char port_str[6];
 	int f;
 	const char *turl;
 	char host[256], path[256];
@@@@ -1982,16 +2029,21 @@@@ gaim_url_parse(const char *url, char **r
 	}
 
 	g_snprintf(scan_info, sizeof(scan_info),
-			   "%%[%s]:%%[%s]/%%[%s]", addr_ctrl, port_ctrl, page_ctrl);
+			   "%%255[%s]:%%5[%s]/%%255[%s]", addr_ctrl, port_ctrl, page_ctrl);
+	addr_ctrl[sizeof(addr_ctrl)-1] = '\0';
+	port_ctrl[sizeof(port_ctrl)-1] = '\0';
+	page_ctrl[sizeof(page_ctrl)-1] = '\0';
 
 	f = sscanf(url, scan_info, host, port_str, path);
 
 	if (f == 1)
 	{
 		g_snprintf(scan_info, sizeof(scan_info),
-				   "%%[%s]/%%[%s]",
+				   "%%255[%s]/%%255[%s]",
 				   addr_ctrl, page_ctrl);
 		f = sscanf(url, scan_info, host, path);
+		addr_ctrl[sizeof(addr_ctrl)-1] = '\0';
+		page_ctrl[sizeof(page_ctrl)-1] = '\0';
 		g_snprintf(port_str, sizeof(port_str), "80");
 	}
 
@@@@ -2081,9 +2133,14 @@@@ parse_redirect(const char *data, size_t 
 static size_t
 parse_content_len(const char *data, size_t data_len)
 {
-	size_t content_len = 0;
+	int content_len = 0;
+	char *tmp;
 
-	sscanf(data, "Content-Length: %d", (int *)&content_len);
+	tmp = g_malloc(data_len + 1);
+	memcpy(tmp, data, data_len);
+	tmp[data_len] = '\0';
+	sscanf(tmp, "Content-Length: %d", &content_len);
+	g_free(tmp);
 
 	return content_len;
 }
@


1.1
log
@Fix a number of buffer overflows.

http://security.e-matters.de/advisories/012004.html

Thanks to Matthew Luckie for bringing this to my attention.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@update to gaim 1.1.4, fixes lots of bugs and a few security issues

ok brad@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_util_c,v 1.1 2004/01/27 01:03:54 brad Exp $
@


