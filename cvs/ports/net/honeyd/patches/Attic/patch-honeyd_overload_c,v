head	1.3;
access;
symbols
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	jolan_2003-jun-27:1.1.1.1
	jolan:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2005.07.23.14.24.52;	author aanriot;	state dead;
branches;
next	1.2;

1.2
date	2003.12.05.22.05.34;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.27.19.43.36;	author jolan;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.06.27.19.43.36;	author jolan;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to 1.0.

help, many tests and ok sturm@@
@
text
@$OpenBSD: patch-honeyd_overload_c,v 1.2 2003/12/05 22:05:34 sturm Exp $
--- honeyd_overload.c.orig	2003-06-26 00:04:01.000000000 +0200
+++ honeyd_overload.c	2003-12-05 22:51:39.000000000 +0100
@@@@ -595,7 +595,7 @@@@ poll(struct pollfd *fds, int nfds, int t
 ssize_t
 recv(int sock, void *buf, size_t len, int flags)
 {
-	ssize_t ret;
+	socklen_t ret;
 
 	INIT;
 
@@@@ -611,14 +611,14 @@@@ ssize_t
 recvfrom(int sock, void *buf, size_t len, int flags, struct sockaddr *from,
     socklen_t *fromlen)
 {
-	ssize_t ret;
+	socklen_t ret;
 	struct fd *nfd;
 	socklen_t flen = fromlen != NULL ? *fromlen : 0;
 
 	INIT;
 
-	DPRINTF((stderr, "%s: called on %d, %p,%d\n",
-		    __func__, sock, from, len));
+	DPRINTF((stderr, "%s: called on %d, %p,%ld\n",
+		    __func__, sock, from, (long)len));
 
 	ret = (*libc_recvfrom)(sock, buf, len, flags, from, fromlen);
 
@@@@ -640,7 +640,7 @@@@ sendto(int sock, const void *buf, size_t
     const struct sockaddr *to, socklen_t tolen)
 {
 	struct fd *nfd;
-	ssize_t ret;
+	socklen_t ret;
 
 	INIT;
 
@@@@ -780,7 +780,7 @@@@ accept(int sock, struct sockaddr *addr, 
 {
 	struct fd *nfd;
 	struct sockaddr_storage sa;
-	socklen_t salen;
+	size_t salen;
 	int fd;
 
 	INIT;
@@@@ -800,7 +800,7 @@@@ accept(int sock, struct sockaddr *addr, 
 	}
 
 	/* XXX - something good happened! */
-	DPRINTF((stderr, "%s: got %d (salen %d)\n", __func__, fd, salen));
+	DPRINTF((stderr, "%s: got %d (salen %ld)\n", __func__, fd, (long)salen));
 
 	/* Store for later */
 	nfd->rsalen = salen;
@


1.2
log
@update to honeyd 0.7a

based on a patch from Craig Barraclough <craigba at creative dot com dot au>
@
text
@d1 1
a1 1
$OpenBSD: patch-honeyd_overload_c,v 1.1.1.1 2003/06/27 19:43:36 jolan Exp $
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- honeyd_overload.c.orig	Sun Jun 22 14:00:47 2003
+++ honeyd_overload.c	Tue Jun 24 05:41:16 2003
d13 1
a13 1
@@@@ -611,7 +611,7 @@@@ ssize_t
d22 9
d40 18
@


1.1.1.1
log
@import of honeyd-0.6:

Honeyd is a small daemon that creates virtual hosts on a network.  The
hosts can be configured to run arbitrary services, and their personality
can be adapted so that they appear to be running certain operating
systems.  Honeyd enables a single host to claim multiple addresses on a
LAN for network simulation.

"looks ok" sturm@@
@
text
@@
