head	1.8;
access;
symbols
	OPENBSD_4_9:1.7.0.4
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.6.0.24
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.22
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.20
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.18
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.16
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.14
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.12
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.10
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.2;
locks; strict;
comment	@# @;


1.8
date	2011.04.17.18.23.19;	author jasper;	state dead;
branches;
next	1.7;

1.7
date	2010.05.23.16.30.03;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2004.07.12.13.32.11;	author danh;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.18.14.19.09;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.30.15.19.40;	author danh;	state Exp;
branches
	1.4.2.1
	1.4.4.1;
next	1.3;

1.3
date	2001.12.17.20.47.47;	author danh;	state dead;
branches;
next	1.2;

1.2
date	2000.09.06.19.05.25;	author danh;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	2000.07.13.00.25.52;	author danh;	state Exp;
branches;
next	;

1.2.6.1
date	2002.02.18.21.47.00;	author danh;	state dead;
branches;
next	;

1.4.2.1
date	2003.06.18.14.23.55;	author brad;	state Exp;
branches;
next	;

1.4.4.1
date	2003.06.18.14.22.20;	author brad;	state Exp;
branches;
next	;


desc
@@


1.8
log
@- remove unnecessary NULL casts
@
text
@$OpenBSD: patch-src_acct_c,v 1.7 2010/05/23 16:30:03 espie Exp $
--- src/acct.c.orig	Thu Jul  3 10:09:04 2003
+++ src/acct.c	Sat May 22 16:48:14 2010
@@@@ -958,11 +958,11 @@@@ static int rad_check_ts(struct radutmp *ut)
 
 	s = CHECKRAD2;
 	execl(CHECKRAD2, "checkrad", nas->nastype, address, port,
-		ut->login, session_id, framed_ip, NULL);
+		ut->login, session_id, framed_ip, (void *)NULL);
 	if (errno == ENOENT) {
 		s = CHECKRAD1;
 		execl(CHECKRAD1, "checkrad", nas->nastype, address, port,
-			ut->login, session_id, NULL);
+			ut->login, session_id, (void *)NULL);
 	}
 	log(L_ERR, "Check-TS: exec %s: %s", s, strerror(errno));
 
@


1.7
log
@fix build for gcc4
@
text
@d1 1
a1 1
$OpenBSD: patch-src_acct_c,v 1.6 2004/07/12 13:32:11 danh Exp $
@


1.6
log
@update to cistron radius 1.6.7
@
text
@d1 4
a4 4
$OpenBSD$
--- src/acct.c.orig	Thu Jul  3 04:09:04 2003
+++ src/acct.c	Mon Jul 12 08:29:22 2004
@@@@ -958,11 +958,11 @@@@ static int rad_check_ts(struct radutmp *
@


1.5
log
@fix buffer overflow with the NAS-Port attribute.

http://marc.theaimsgroup.com/?l=bugtraq&m=105552922304318&w=2

MAINTAINER ok
@
text
@d1 4
a4 44
$OpenBSD: patch-src_acct_c,v 1.4 2002/09/30 15:19:40 danh Exp $
--- src/acct.c.orig	Wed Jun 18 07:42:26 2003
+++ src/acct.c	Wed Jun 18 07:42:35 2003
@@@@ -119,9 +119,10 @@@@ char *uue(void *in)
  */
 static void make_wtmp(struct radutmp *ut, struct utmp *wt, int status)
 {
-	char		buf[32];
+	char		buf[48];
 	NAS		*cl;
 	char		*s;
+	int		len;
 
 	/*
 	 *	Fill out the UTMP struct for the radwtmp file.
@@@@ -143,11 +144,13 @@@@ static void make_wtmp(struct radutmp *ut
 		s = cl->shortname;
 	if (s == NULL || s[0] == 0) s = uue(&(ut->nas_address));
 #if UT_LINESIZE > 9
-	sprintf(buf, "%03d:%.20s", ut->nas_port, s);
+	sprintf(buf, "%03u:%.20s", ut->nas_port, s);
 #else
-	sprintf(buf, "%02d%.20s", ut->nas_port, s);
+	sprintf(buf, "%02u%.20s", ut->nas_port, s);
 #endif
-	strncpy(wt->ut_line, buf, UT_LINESIZE);
+	len = UT_LINESIZE;
+	if (len > sizeof(buf)) len = sizeof(buf);
+	strncpy(wt->ut_line, buf, len);
 
 	/*
 	 *	We store the dynamic IP address in the hostname field.
@@@@ -155,7 +158,9 @@@@ static void make_wtmp(struct radutmp *ut
 #ifdef UT_HOSTSIZE
 	if (ut->framed_address) {
 		ipaddr2str(buf, ntohl(ut->framed_address));
-		strncpy(wt->ut_host, buf, UT_HOSTSIZE);
+		len = UT_HOSTSIZE;
+		if (len > sizeof(buf)) len = sizeof(buf);
+		strncpy(wt->ut_host, buf, len);
 	}
 #endif
 #ifdef __svr4__
@@@@ -931,11 +936,11 @@@@ static int rad_check_ts(struct radutmp *
d8 2
a9 2
-		ut->login, session_id, NULL);
+		ut->login, session_id, (void *)NULL);
d12 1
a12 1
 		execl(CHECKRAD1, "checklogin", nas->nastype, address, port,
@


1.4
log
@unsigned long was assumed to be 32 bits.  fixes a crash on sparc64
originally reported by Matt Hess.

ok naddy@@
@
text
@d1 44
a44 4
$OpenBSD$
--- src/acct.c.orig	Wed Feb  6 08:44:35 2002
+++ src/acct.c	Sun Sep 29 23:43:18 2002
@@@@ -931,11 +931,11 @@@@ static int rad_check_ts(struct radutmp *
@


1.4.2.1
log
@MFC:
fix buffer overflow with the NAS-Port attribute.

http://marc.theaimsgroup.com/?l=bugtraq&m=105552922304318&w=2

MAINTAINER ok
@
text
@d1 4
a4 44
$OpenBSD: patch-src_acct_c,v 1.5 2003/06/18 14:19:09 brad Exp $
--- src/acct.c.orig	Wed Jun 18 07:42:26 2003
+++ src/acct.c	Wed Jun 18 07:42:35 2003
@@@@ -119,9 +119,10 @@@@ char *uue(void *in)
  */
 static void make_wtmp(struct radutmp *ut, struct utmp *wt, int status)
 {
-	char		buf[32];
+	char		buf[48];
 	NAS		*cl;
 	char		*s;
+	int		len;
 
 	/*
 	 *	Fill out the UTMP struct for the radwtmp file.
@@@@ -143,11 +144,13 @@@@ static void make_wtmp(struct radutmp *ut
 		s = cl->shortname;
 	if (s == NULL || s[0] == 0) s = uue(&(ut->nas_address));
 #if UT_LINESIZE > 9
-	sprintf(buf, "%03d:%.20s", ut->nas_port, s);
+	sprintf(buf, "%03u:%.20s", ut->nas_port, s);
 #else
-	sprintf(buf, "%02d%.20s", ut->nas_port, s);
+	sprintf(buf, "%02u%.20s", ut->nas_port, s);
 #endif
-	strncpy(wt->ut_line, buf, UT_LINESIZE);
+	len = UT_LINESIZE;
+	if (len > sizeof(buf)) len = sizeof(buf);
+	strncpy(wt->ut_line, buf, len);
 
 	/*
 	 *	We store the dynamic IP address in the hostname field.
@@@@ -155,7 +158,9 @@@@ static void make_wtmp(struct radutmp *ut
 #ifdef UT_HOSTSIZE
 	if (ut->framed_address) {
 		ipaddr2str(buf, ntohl(ut->framed_address));
-		strncpy(wt->ut_host, buf, UT_HOSTSIZE);
+		len = UT_HOSTSIZE;
+		if (len > sizeof(buf)) len = sizeof(buf);
+		strncpy(wt->ut_host, buf, len);
 	}
 #endif
 #ifdef __svr4__
@@@@ -931,11 +936,11 @@@@ static int rad_check_ts(struct radutmp *
@


1.4.4.1
log
@MFC:
fix buffer overflow with the NAS-Port attribute.

http://marc.theaimsgroup.com/?l=bugtraq&m=105552922304318&w=2

MAINTAINER ok
@
text
@d1 4
a4 44
$OpenBSD: patch-src_acct_c,v 1.5 2003/06/18 14:19:09 brad Exp $
--- src/acct.c.orig	Wed Jun 18 07:42:26 2003
+++ src/acct.c	Wed Jun 18 07:42:35 2003
@@@@ -119,9 +119,10 @@@@ char *uue(void *in)
  */
 static void make_wtmp(struct radutmp *ut, struct utmp *wt, int status)
 {
-	char		buf[32];
+	char		buf[48];
 	NAS		*cl;
 	char		*s;
+	int		len;
 
 	/*
 	 *	Fill out the UTMP struct for the radwtmp file.
@@@@ -143,11 +144,13 @@@@ static void make_wtmp(struct radutmp *ut
 		s = cl->shortname;
 	if (s == NULL || s[0] == 0) s = uue(&(ut->nas_address));
 #if UT_LINESIZE > 9
-	sprintf(buf, "%03d:%.20s", ut->nas_port, s);
+	sprintf(buf, "%03u:%.20s", ut->nas_port, s);
 #else
-	sprintf(buf, "%02d%.20s", ut->nas_port, s);
+	sprintf(buf, "%02u%.20s", ut->nas_port, s);
 #endif
-	strncpy(wt->ut_line, buf, UT_LINESIZE);
+	len = UT_LINESIZE;
+	if (len > sizeof(buf)) len = sizeof(buf);
+	strncpy(wt->ut_line, buf, len);
 
 	/*
 	 *	We store the dynamic IP address in the hostname field.
@@@@ -155,7 +158,9 @@@@ static void make_wtmp(struct radutmp *ut
 #ifdef UT_HOSTSIZE
 	if (ut->framed_address) {
 		ipaddr2str(buf, ntohl(ut->framed_address));
-		strncpy(wt->ut_host, buf, UT_HOSTSIZE);
+		len = UT_HOSTSIZE;
+		if (len > sizeof(buf)) len = sizeof(buf);
+		strncpy(wt->ut_host, buf, len);
 	}
 #endif
 #ifdef __svr4__
@@@@ -931,11 +936,11 @@@@ static int rad_check_ts(struct radutmp *
@


1.3
log
@update to radiusd-cistron 1.6.5
@
text
@d1 16
a16 11
$OpenBSD: patch-src_acct_c,v 1.2 2000/09/06 19:05:25 danh Exp $
--- src/acct.c.orig	Fri Aug 18 16:40:30 2000
+++ src/acct.c	Wed Sep  6 14:54:22 2000
@@@@ -596,7 +596,7 @@@@ int rad_accounting_orig(AUTH_REQ *authre
 	UINT4		nas;
 	NAS		*cl;
 	int		flat = 0;
-	long		curtime;
+	time_t		curtime;
 	int		ret = 0;
 	struct stat	st;
a17 9
@@@@ -686,7 +686,7 @@@@ int rad_accounting_orig(AUTH_REQ *authre
 		/*
 		 *	Add non-protocol attibutes.
 		 */
-		fprintf(outfd, "\tTimestamp = %ld\n", curtime);
+		fprintf(outfd, "\tTimestamp = %ld\n", (long) curtime);
 		switch(authtype) {
 		    case 0:
 			fputs("\tRequest-Authenticator = Verified\n", outfd);
@


1.2
log
@upgrade to radiusd-cistron 1.6.4
@
text
@d1 1
a1 1
$OpenBSD: patch-src_acct_c,v 1.1 2000/07/13 00:25:52 danh Exp $
@


1.2.6.1
log
@update to radiusd-cistron 1.6.6
* this contains security fixes over 1.6.4
* enable syslog and db support
@
text
@d1 1
a1 1
$OpenBSD: patch-src_acct_c,v 1.2 2000/09/06 19:05:25 danh Exp $
@


1.1
log
@general port clean up.  removed explicit FAKE and renamed patches.
@
text
@d1 4
a4 5
$OpenBSD: update-patches,v 1.3 2000/06/09 17:08:37 espie Exp $
--- src/acct.c.orig	Thu Mar  2 08:24:45 2000
+++ src/acct.c	Wed Jul 12 01:28:45 2000
@@@@ -598,7 +598,7 @@@@ int rad_accounting_orig(AUTH_REQ *authre
 	VALUE_PAIR	*pair;
d7 1
d13 1
a13 1
@@@@ -670,7 +670,7 @@@@ int rad_accounting_orig(AUTH_REQ *authre
@

