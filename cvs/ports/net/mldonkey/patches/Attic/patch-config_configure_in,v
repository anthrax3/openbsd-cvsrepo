head	1.3;
access;
symbols
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.03.01.09.05.33;	author dcoppa;	state dead;
branches;
next	1.2;
commitid	lb3VPc3oucs5KdPI;

1.2
date	2016.02.01.10.54.33;	author dcoppa;	state Exp;
branches;
next	1.1;
commitid	EGBJKrAYdni2rsG5;

1.1
date	2014.10.31.08.19.39;	author dcoppa;	state Exp;
branches;
next	;
commitid	UvUOBExHGCD0k5ZR;


desc
@@


1.3
log
@
Switch to CONFIGURE_STYLE=gnu

OK naddy@@ for after the unlock
@
text
@$OpenBSD: patch-config_configure_in,v 1.2 2016/02/01 10:54:33 dcoppa Exp $
--- config/configure.in.orig	Mon Feb  1 11:30:06 2016
+++ config/configure.in	Mon Feb  1 11:31:11 2016
@@@@ -1011,7 +1011,7 @@@@ if test "$GD" != "no"; then
       PNG_LDFLAGS=`$PNGLIBCONFIG --ldflags`
       LDFLAGS="$LDFLAGS $PNG_LDFLAGS"
     fi
-    AC_CHECK_LIB(png, png_create_read_struct , [LIBPNG=yes])
+    AC_CHECK_LIB(png, png_create_read_struct , [LIBPNG=yes],, -lz -lm)
 # restore variables
     LIBS=$SAVE_LIBS_PNG
     CFLAGS=$SAVE_CFLAGS_PNG
@@@@ -1040,7 +1040,7 @@@@ if test "$GD" != "no"; then
 	GD_PNG=yes
         GD_LIBS="$GD_LIBS $PNG_LIBS"
         AC_MSG_RESULT(yes)
-	AC_CHECK_LIB(png, png_access_version_number,[AC_DEFINE(HAVE_PNGVERSION, 1,)])
+	AC_CHECK_LIB(png, png_access_version_number,[AC_DEFINE(HAVE_PNGVERSION, 1,)],, -lz -lm)
         AC_DEFINE(HAVE_GD_PNG, 1, [Define to 1 if you have png support in libgd.])
       else
         AC_MSG_RESULT(no)
@@@@ -1501,7 +1501,7 @@@@ else
   MORE_TARGETS="$MORE_TARGETS $GUIS"
   AC_MSG_CHECKING(GToolbox.popup_menu args)
   GTOOLBOX="$OCAMLLIB/$LABLGTK_NAME/gToolbox.mli"
-  grep popup $GTOOLBOX | grep -i button 2> /dev/null && GTOOLBOX_ARGS=new
+  grep popup $GTOOLBOX | grep -q -i button && GTOOLBOX_ARGS=new
   if test "$GTOOLBOX_ARGS" = "new"; then
     GTOOLBOX_POPUPMENU=' ~button: button ~time: time '
     AC_MSG_RESULT(new)
@@@@ -1627,7 +1627,7 @@@@ cd ..
 
 echo ""
 echo "Building dependencies (if it blocks, try '$GNU_MAKE depend' to see the problem)"
-$GNU_MAKE depend 2> /dev/null > /dev/null || echo "Building dependencies fails: try: '$GNU_MAKE depend'"
+$GNU_MAKE depend || echo "Building dependencies fails: try: '$GNU_MAKE depend'"
 
 echo ""
 printf "Configuring MLDonkey %s" "$MLDONKEY_VERSION"
@


1.2
log
@
Do not redirect the output of "gmake depend" to /dev/null, so we
can have a better clue of what's going on
@
text
@d1 1
a1 1
$OpenBSD: patch-config_configure_in,v 1.1 2014/10/31 08:19:39 dcoppa Exp $
@


1.1
log
@
Move net/mldonkey/stable to net/mldonkey
@
text
@d1 3
a3 3
$OpenBSD: patch-config_configure_in,v 1.20 2014/03/13 21:21:48 dcoppa Exp $
--- config/configure.in.orig	Mon Mar 10 18:06:15 2014
+++ config/configure.in	Thu Mar 13 16:32:27 2014
d27 1
a27 1
+  grep popup $GTOOLBOX | grep -i button >/dev/null 2>&1 && GTOOLBOX_ARGS=new
d31 9
@

