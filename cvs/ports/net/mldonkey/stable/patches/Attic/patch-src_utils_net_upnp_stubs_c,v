head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.2
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2014.03.13.21.21.48;	author dcoppa;	state dead;
branches;
next	1.5;

1.5
date	2014.02.03.13.30.52;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2012.08.18.23.47.27;	author avsm;	state dead;
branches;
next	1.3;

1.3
date	2012.05.08.08.24.40;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2012.04.24.12.55.12;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2012.02.28.15.38.55;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.6
log
@
Update to mldonkey-3.1.4
@
text
@$OpenBSD: patch-src_utils_net_upnp_stubs_c,v 1.5 2014/02/03 13:30:52 dcoppa Exp $

Unbreak with miniupnpc>=1.9

--- src/utils/net/upnp_stubs.c.orig	Mon Feb  3 12:51:30 2014
+++ src/utils/net/upnp_stubs.c	Mon Feb  3 12:52:45 2014
@@@@ -680,7 +680,7 @@@@ upnpPulse( ml_upnpmp_t * map )
         snprintf( type, sizeof( type ), "%s", ( map->isTcp ? "TCP" : "UDP" ) );
         i = UPNP_GetSpecificPortMappingEntry( map->upnpUrls.controlURL,
                                               map->upnpData.first.servicetype, portStr,
-                                              type, intClient, intPort, NULL, NULL, NULL );
+                                              type, NULL, intClient, intPort, NULL, NULL, NULL );
         if( i != UPNPCOMMAND_SUCCESS )
         {
             dbg_printf( "Port %d isn't forwarded\n", map->extPort );
@


1.5
log
@
Update to miniupnpc-1.9 and fix dependant ports (games/megaglest
not affected)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@update to mldonkey-3.1.3 for the stable port
* replace MODOCAML_NATIVE by ocaml_native PROPERTY
* remove patches included upstream
ok espie@@
From Christopher Zimmermann <madroach@@gmerlin.de>
@
text
@d1 1
a1 1
$OpenBSD: patch-src_utils_net_upnp_stubs_c,v 1.3 2012/05/08 08:24:40 dcoppa Exp $
d3 1
a3 1
Fix build with latest libnatpmp/miniupnpc
d5 2
a6 22
Remove bogus call to pthread_mutex_unlock()

--- src/utils/net/upnp_stubs.c.orig	Mon Nov  1 18:19:23 2010
+++ src/utils/net/upnp_stubs.c	Tue May  8 09:24:59 2012
@@@@ -501,7 +501,7 @@@@ natpmpPulse( ml_upnpmp_t * map )
 
     if( map->enabled && ( map->natpmpState == ML_NATPMP_DISCOVER ) )
     {
-        int val = initnatpmp( &map->natpmp );
+        int val = initnatpmp( &map->natpmp, 0, 0 );
         dbg_printf( "initnatpmp = %d\n", val );
         val = sendpublicaddressrequest( &map->natpmp );
         dbg_printf( "sendpublicaddressrequest = %d\n", val );
@@@@ -639,7 +639,7 @@@@ upnpPulse( ml_upnpmp_t * map )
     {
         struct UPNPDev * devlist;
         errno = 0;
-        devlist = upnpDiscover( 2000, NULL, NULL, 0 );
+        devlist = upnpDiscover( 2000, NULL, NULL, 0, 0, 0 );
         if( devlist == NULL )
         {
             dbg_printf( "upnpDiscover failed (errno %d - %s)\n", errno,  str_errno( errno ) );
d11 2
a12 2
-                                              type, intClient, intPort );
+                                              type, intClient, intPort, NULL, NULL, NULL );
a15 17
@@@@ -730,7 +730,7 @@@@ upnpPulse( ml_upnpmp_t * map )
             err = UPNP_AddPortMapping( map->upnpUrls.controlURL,
                                        map->upnpData.first.servicetype,
                                        extPortStr, intPortStr, map->lanaddr,
-                                       desc, type, NULL );
+                                       desc, type, NULL, "0" );
             map->upnpMapped = !err;
         }
         dbg_printf( "Port forwarding through \"%s\", service \"%s\". (local address[%s:%d])\n", map->upnpUrls.controlURL, map->upnpData.first.servicetype, map->lanaddr, map->intPort );
@@@@ -901,7 +901,6 @@@@ upnp_thread_start( )
 	    //pthread_cond_init(&cond, NULL);
 	    pthread_mutex_init(&g_mutex, NULL);
 	    pthread_mutex_init(&g_delay_mutex, NULL);
-	    pthread_mutex_unlock(&g_mutex);
 
 	    err = pthread_create(&g_pthread, &attr, upnpNatpmpThread, NULL);
 
@


1.3
log
@
Remove excessive optimization

Fix install on non-native architectures

Proper fix for a thread related problem

Add comments to patches
@
text
@d1 1
a1 1
$OpenBSD: patch-src_utils_net_upnp_stubs_c,v 1.2 2012/04/24 12:55:12 dcoppa Exp $
@


1.2
log
@Bugfixing update to mldonkey-3.1.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_utils_net_upnp_stubs_c,v 1.1 2012/02/28 15:38:55 dcoppa Exp $
d5 2
d8 2
a9 10
+++ src/utils/net/upnp_stubs.c	Tue Apr 24 14:41:55 2012
@@@@ -164,7 +164,6 @@@@ static int g_inited = 0;
 static int g_running = 0;
 static int g_stop = 0;
 static pthread_t g_pthread;
-//static pthread_cond_t cond;
 static pthread_mutex_t g_mutex;
 static pthread_mutex_t g_delay_mutex;
 
@@@@ -501,7 +500,7 @@@@ natpmpPulse( ml_upnpmp_t * map )
d18 1
a18 1
@@@@ -639,7 +638,7 @@@@ upnpPulse( ml_upnpmp_t * map )
d27 1
a27 1
@@@@ -680,7 +679,7 @@@@ upnpPulse( ml_upnpmp_t * map )
d36 1
a36 1
@@@@ -730,7 +729,7 @@@@ upnpPulse( ml_upnpmp_t * map )
d45 2
a46 5
@@@@ -898,9 +897,9 @@@@ upnp_thread_start( )
 	    pthread_attr_init(&attr);
 	    pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);
 
-	    //pthread_cond_init(&cond, NULL);
d49 1
a49 2
+	    pthread_mutex_trylock(&g_mutex);
 	    pthread_mutex_unlock(&g_mutex);
d52 1
@


1.1
log
@Enable support for NAT-PMP and UPnP through libnatpmp/miniupnpc.

Disabled by default: set "upnp_port_forwarding = true" into
~/.mldonkey/downloads.ini to enable it.
@
text
@d1 1
a1 1
$OpenBSD$
d6 10
a15 2
+++ src/utils/net/upnp_stubs.c	Mon Feb 27 15:35:59 2012
@@@@ -501,7 +501,7 @@@@ natpmpPulse( ml_upnpmp_t * map )
d24 1
a24 1
@@@@ -639,7 +639,7 @@@@ upnpPulse( ml_upnpmp_t * map )
d33 1
a33 1
@@@@ -680,7 +680,7 @@@@ upnpPulse( ml_upnpmp_t * map )
d42 1
a42 1
@@@@ -730,7 +730,7 @@@@ upnpPulse( ml_upnpmp_t * map )
d51 11
@

