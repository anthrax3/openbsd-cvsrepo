head	1.3;
access;
symbols
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_3_9:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2007.04.19.23.04.53;	author espie;	state dead;
branches;
next	1.2;

1.2
date	2007.02.02.19.28.52;	author espie;	state Exp;
branches
	1.2.2.1
	1.2.4.1;
next	1.1;

1.1
date	2007.01.24.01.32.51;	author espie;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2007.01.31.14.27.28;	author sturm;	state Exp;
branches;
next	;

1.2.2.1
date	2007.02.03.16.25.14;	author sturm;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2007.08.01.06.12.53;	author ajacoutot;	state dead;
branches;
next	;

1.2.4.1
date	2007.08.01.06.13.22;	author ajacoutot;	state dead;
branches;
next	;


desc
@@


1.3
log
@update to newer version, after checking it works fine.
@
text
@$OpenBSD: patch-src_networks_donkey_donkeyClient_ml,v 1.2 2007/02/02 19:28:52 espie Exp $
--- src/networks/donkey/donkeyClient.ml.orig	Sun Nov 26 17:36:29 2006
+++ src/networks/donkey/donkeyClient.ml	Fri Feb  2 13:51:15 2007
@@@@ -442,15 +442,17 @@@@ let client_wants_file c md4 =
   
 let new_chunk up begin_pos end_pos =
   if begin_pos <> end_pos then
-    let pair = (begin_pos, end_pos) in
-    (match up.up_chunks with
-        [] ->
+    let chunk = (begin_pos, end_pos) in
+    (* the zone requested is already "in the pipe" *)
+    if not (List.mem chunk up.up_flying_chunks) then
+      match up.up_chunks with
+      | [] ->
           up.up_pos <- begin_pos;
           up.up_end_chunk <- end_pos;
-          up.up_chunks <- [pair];
-      | chunks ->
-          if not (List.mem pair chunks) then
-            up.up_chunks <- chunks @@ [pair])
+          up.up_chunks <- [chunk];
+      | up_chunks ->
+          if not (List.mem chunk up_chunks) then
+            up.up_chunks <- up_chunks @@ [chunk]
   
 let identify_client_brand c =
   if c.client_brand = Brand_unknown then
@@@@ -2039,13 +2041,21 @@@@ end else *)
         set_rtimeout sock !!upload_timeout;
         
         let up, waiting = match c.client_upload with
-            Some ({ up_file = f } as up) when f == file ->  up, up.up_waiting
+          | Some ({ up_file = f } as up) when f == file ->
+	      (* zones are received in the order they're sent, so we
+		 know that the oldest of the zones "in fly" must have
+		 been received when this QueryBlockReq was sent *)
+	      (match up.up_flying_chunks with
+	       | [] -> () 
+	       | _ :: q -> up.up_flying_chunks <- q);
+	      up, up.up_waiting
           | Some old_up ->
               {
                 up_file = file;
                 up_pos = Int64.zero;
                 up_end_chunk = Int64.zero;
                 up_chunks = [];
+		up_flying_chunks = [];
                 up_waiting = old_up.up_waiting;
               }, old_up.up_waiting
           | _ ->
@@@@ -2054,6 +2064,7 @@@@ end else *)
                 up_pos = Int64.zero;
                 up_end_chunk = Int64.zero;
                 up_chunks = [];
+		up_flying_chunks = [];
                 up_waiting = false;
               }, false
         in
@@@@ -2141,12 +2152,12 @@@@ make 1500 connections/10 minutes.  *)
 let init_client sock c =
   set_handler sock WRITE_DONE (fun s ->
       match c.client_upload with
-        None -> ()
-      | Some up ->
+      | Some ({ up_chunks = _ :: _ } as up) ->
           if not up.up_waiting && !CommonUploads.has_upload = 0 then begin
               up.up_waiting <- true;
               CommonUploads.ready_for_upload (as_client c)
             end
+      | _ -> ()
   );
 (*
   set_handler sock (BASIC_EVENT RTIMEOUT) (fun s ->
@


1.2
log
@update to 2.8.2, appears to work fine on both i386 and sparc64.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2.4.1
log
@MFC (origal commit rui@@):
- update mldonkey to 2.9.0 (fix MLDonkey Network Modules IP Blocking Weakness)
Reference: http://secunia.com/advisories/26230/

ok sturm@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_networks_donkey_donkeyClient_ml,v 1.2 2007/02/02 19:28:52 espie Exp $
@


1.2.2.1
log
@MFC:
fix a nasty bug, where emule clients receive twice (!) the data they want.
@
text
@d2 3
a4 3
--- src/networks/donkey/donkeyClient.ml.orig	Sat May 20 22:10:50 2006
+++ src/networks/donkey/donkeyClient.ml	Sat Feb  3 17:00:05 2007
@@@@ -436,15 +436,17 @@@@ let client_wants_file c md4 =
d29 1
a29 1
@@@@ -2002,13 +2004,21 @@@@ end else *)
d52 1
a52 1
@@@@ -2017,6 +2027,7 @@@@ end else *)
d60 1
a60 1
@@@@ -2104,12 +2115,12 @@@@ make 1500 connections/10 minutes.  *)
@


1.2.2.2
log
@MFC (origal commit rui@@):
- update mldonkey to 2.9.0 (fix MLDonkey Network Modules IP Blocking Weakness)
Reference: http://secunia.com/advisories/26230/

ok sturm@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_networks_donkey_donkeyClient_ml,v 1.2.2.1 2007/02/03 16:25:14 sturm Exp $
@


1.1
log
@fix a nasty bug, where emule clients receive twice (!) the data they want.
from spiralvoice, thx !
@
text
@d2 3
a4 3
--- src/networks/donkey/donkeyClient.ml.orig	Tue Sep  5 16:18:24 2006
+++ src/networks/donkey/donkeyClient.ml	Wed Jan 24 02:25:44 2007
@@@@ -438,15 +438,17 @@@@ let client_wants_file c md4 =
d29 1
a29 1
@@@@ -1989,13 +1991,21 @@@@ end else *)
d52 1
a52 1
@@@@ -2004,6 +2014,7 @@@@ end else *)
d60 1
a60 1
@@@@ -2091,12 +2102,12 @@@@ make 1500 connections/10 minutes.  *)
@


1.1.2.1
log
@MFC:
fix a nasty bug, where emule clients receive twice (!) the data they want.
@
text
@d2 3
a4 3
--- src/networks/donkey/donkeyClient.ml.orig	Thu Aug 18 14:58:14 2005
+++ src/networks/donkey/donkeyClient.ml	Wed Jan 31 15:18:34 2007
@@@@ -445,17 +445,17 @@@@ let client_wants_file c md4 =
a7 2
-    let len_requested = Int64.to_int (Int64.sub end_pos begin_pos) in
-    let len = Int64.to_int (Int64.sub end_pos begin_pos) in
d29 1
a29 1
@@@@ -1764,13 +1764,21 @@@@ end else *)
d52 1
a52 1
@@@@ -1779,6 +1787,7 @@@@ end else *)
d60 1
a60 1
@@@@ -1872,12 +1881,12 @@@@ make 1500 connections/10 minutes.  *)
@

