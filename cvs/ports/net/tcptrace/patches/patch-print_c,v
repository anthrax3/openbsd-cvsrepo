head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.34
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.32
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.28
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.30
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.26
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.24
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.22
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.20
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.18
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.16
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.14
	OPENBSD_5_0:1.2.0.12
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.10
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.8
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.0.24
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.22
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.20
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.18
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.16
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.14
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.12
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.10
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.8
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.6
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2009.01.08.09.03.15;	author giovanni;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.17.18.21.29;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
Update to 6.6.7, from Benoit Lecocq on ports@@.
ok kili@@
@
text
@--- print.c.orig	Wed Nov 19 15:38:05 2003
+++ print.c	Wed Jan  7 18:30:33 2009
@@@@ -137,8 +137,8 @@@@ static void
 printeth_packet(
     struct ether_header *pep)
 {
-    printf("\tETH Srce: %s\n", Ether_Ntoa((struct ether_addr *)&pep->ether_shost));
-    printf("\tETH Dest: %s\n", Ether_Ntoa((struct ether_addr *)&pep->ether_dhost));
+    printf("\tETH Srce: %s\n", ether_ntoa((struct ether_addr *)&pep->ether_shost));
+    printf("\tETH Dest: %s\n", ether_ntoa((struct ether_addr *)&pep->ether_dhost));
 
     printf(
 	hex?"\t    Type: 0x%x %s\n":"\t    Type: %d %s\n",
@@@@ -751,6 +751,7 @@@@ ipv6addr2str(
 /* Lots of machines HAVE this, but they give slightly different formats */
 /* and it messes up my cross-platform testing.  I'll just do it the */
 /* "one true" way!  :-)  */
+#if 0
 char *
 Ether_Ntoa (struct ether_addr *e)
 {
@@@@ -762,8 +763,7 @@@@ Ether_Ntoa (struct ether_addr *e)
 	    pe[0], pe[1], pe[2], pe[3], pe[4], pe[5]);
     return(buf);
 }
-
-
+#endif
 
 /* represent the sequence numbers absolute or relative to 0 */
 /* N.B.: will fail will sequence space wraps around more than once */
@


1.1
log
@Update to 6.2.0; from Dan Weeks <danimal@@danimal.org>.
@
text
@d1 2
a2 3
$OpenBSD$
--- print.c.orig	Mon Dec  3 10:58:49 2001
+++ print.c	Wed Oct 16 21:53:19 2002
a31 14
@@@@ -776,11 +776,11 @@@@ PrintSeqRep(
     
     if (ptcb && print_seq_zero && (ptcb->syn_count>0)) {
 	/* Relative form */
-	sprintf(buf,hex?"0x%08x(R)":"%d(R)",
+	snprintf(buf, sizeof(buf), hex?"0x%08x(R)":"%d(R)",
 		seq - ptcb->syn);
     } else {
 	/* Absolute form */
-	sprintf(buf,hex?"0x%08x":"%d",seq);
+	snprintf(buf, sizeof(buf), hex?"0x%08x":"%d", seq);
     }
     return(buf);
 }
@

