head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.20
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.16
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.18
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.14
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.12
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.10
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.8
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.6
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2011.08.25.22.40.21;	author bluhm;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.17.18.21.29;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2002.04.01.23.41.24;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Allow tcptrace to analyse pcap files sniffed on lo0 by using the
special openbsd dlt loop number.
ok naddy@@
@
text
@$OpenBSD$
--- tcpdump.c.orig	Thu Oct  7 22:07:30 2004
+++ tcpdump.c	Sun May 22 22:54:01 2011
@@@@ -189,6 +189,22 @@@@ static int callback(
 	memcpy((char*)ip_buf,buf+8,iplen-8);
 	callback_plast = ip_buf+iplen-8-1;
 	break;
+      case PCAP_DLT_LOOP:
+	/* loopback type (af header) */
+	switch (ntohl(*(u_int *)buf)) {
+	case AF_INET:
+		eth_header.ether_type = htons(ETHERTYPE_IP);
+		break;
+	case AF_INET6:
+		eth_header.ether_type = htons(ETHERTYPE_IPV6);
+		break;
+	default:
+		eth_header.ether_type = 0;
+	}
+	offset = 4;
+	memcpy((char *)ip_buf,buf+offset,iplen-offset);
+	callback_plast = ip_buf+iplen-offset-1;
+	break;
       case PCAP_DLT_RAW:
 	/* raw IP */
 	offset = 0;
@@@@ -363,6 +379,9 @@@@ pread_f *is_tcpdump(char *filename)
       case PCAP_DLT_ATM_RFC1483:
 	eth_header.ether_type = htons(ETHERTYPE_IP);
 	physname = "ATM, LLC/SNAP encapsulated";
+	break;
+      case PCAP_DLT_LOOP:
+	physname = "LOOP";
 	break;
       case PCAP_DLT_RAW:
 	eth_header.ether_type = htons(ETHERTYPE_IP);
@


1.2
log
@Update to 6.2.0; from Dan Weeks <danimal@@danimal.org>.
@
text
@d1 36
a36 23
$OpenBSD: patch-tcpdump_c,v 1.1 2002/04/01 23:41:24 pvalchev Exp $
--- tcpdump.c.orig	Mon Aug 30 09:52:51 1999
+++ tcpdump.c	Mon Apr  1 16:33:34 2002
@@@@ -176,7 +176,8 @@@@ pread_tcpdump(
 	*pphystype = PHYS_ETHER; /* everything assumed to be ethernet */
 	*ppip      = (struct ip *) ip_buf;
 	*pplast    = callback_plast; /* last byte in IP packet */
-	*ptime     = callback_phdr->ts;
+	ptime->tv_sec = callback_phdr->ts.tv_sec;
+	ptime->tv_usec = callback_phdr->ts.tv_usec;
 	*plen      = callback_phdr->len;
 	*ptlen     = callback_phdr->caplen;
 
@@@@ -311,7 +312,8 @@@@ PcapSavePacket(
     }
 
     /* create the packet header */
-    phdr.ts = current_time;
+    phdr.ts.tv_sec = current_time.tv_sec;
+    phdr.ts.tv_usec = current_time.tv_usec;
     phdr.caplen = (unsigned)plast - (unsigned)pip + 1;
     phdr.caplen += EH_SIZE;	/* add in the ether header */
     phdr.len = EH_SIZE + ntohs(PIP_LEN(pip));	/* probably this */
@


1.1
log
@fix for the timeval/bpf_timeval conflict
@
text
@d1 1
a1 1
$OpenBSD$
@

