head	1.3;
access;
symbols
	OPENBSD_4_4:1.2.0.16
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.14
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.12
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.0.10
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.8
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.4
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2008.08.31.19.46.40;	author naddy;	state dead;
branches;
next	1.2;

1.2
date	2004.10.13.01.58.14;	author danh;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.17.21.57.23;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove zebra, which is broken, dead, and superseded by net/quagga.
@
text
@$OpenBSD: patch-ospfd_ospf_snmp_c,v 1.2 2004/10/13 01:58:14 danh Exp $
--- ospfd/ospf_snmp.c.orig	Sat Jul  6 03:36:57 2002
+++ ospfd/ospf_snmp.c	Fri Oct  8 13:28:56 2004
@@@@ -24,9 +24,8 @@@@
 #include <zebra.h>
 
 #ifdef HAVE_SNMP
-#include <asn1.h>
-#include <snmp.h>
-#include <snmp_impl.h>
+#include <net-snmp/net-snmp-config.h>
+#include <net-snmp/net-snmp-includes.h>
 
 #include "if.h"
 #include "log.h"
@@@@ -1115,6 +1114,9 @@@@ ospfAreaRangeLookup (struct variable *v,
   int len;
   struct ospf_area *area;
   struct ospf_area_range *range;
+  struct prefix_ipv4 p;
+  p.family = AF_INET;
+  p.prefixlen = IPV4_MAX_BITLEN;
 
   if (exact) 
     {
@@@@ -1136,8 +1138,9 @@@@ ospfAreaRangeLookup (struct variable *v,
 
       /* Lookup area range. */
       oid2in_addr (offset, IN_ADDR_SIZE, range_net);
+      p.prefix = *range_net;
 
-      return ospf_area_range_lookup (area, range_net);
+      return ospf_area_range_lookup (area, &p);
     }
   else
     {
@@@@ -1201,7 +1204,6 @@@@ ospfAreaRangeEntry (struct variable *v, 
 {
   struct ospf_area_range *range;
   struct in_addr area_id;
-
   struct in_addr range_net;
   struct in_addr mask;
   
@@@@ -1217,7 +1219,7 @@@@ ospfAreaRangeEntry (struct variable *v, 
     return NULL;
 
   /* Convert prefixlen to network mask format. */
-  masklen2ip (range->node->p.prefixlen, &mask);
+  masklen2ip (range->subst_masklen, &mask);
 
   /* Return the current value of the variable */
   switch (v->magic) 
@@@@ -1268,7 +1270,7 @@@@ ospfHostLookup (struct variable *v, oid 
 
       oid2in_addr (name + v->namelen, IN_ADDR_SIZE, addr);
 
-      nbr_nbma = ospf_nbr_nbma_lookup_by_addr (*addr);
+      nbr_nbma = ospf_nbr_nbma_lookup (ospf_top, *addr);
 
       return nbr_nbma;
     }
@@@@ -1653,7 +1655,7 @@@@ ospfIfEntry (struct variable *v, oid *na
       return SNMP_INTEGER (OSPF_POLL_INTERVAL_DEFAULT);
       break;
     case OSPFIFSTATE:		/* 12 */
-      return SNMP_INTEGER (oi->status);
+      return SNMP_INTEGER (oi->state);
       break;
     case OSPFIFDESIGNATEDROUTER: /* 13 */
       return SNMP_IPADDRESS (DR (oi));
@@@@ -1662,7 +1664,7 @@@@ ospfIfEntry (struct variable *v, oid *na
       return SNMP_IPADDRESS (BDR (oi));
       break;
     case OSPFIFEVENTS:		/* 15 */
-      return SNMP_INTEGER (oi->status_change);
+      return SNMP_INTEGER (oi->state_change);
       break;
     case OSPFIFAUTHKEY:		/* 16 */
       *var_len = 0;
@@@@ -1993,10 +1995,10 @@@@ ospfVirtIfEntry (struct variable *v, oid
       return SNMP_INTEGER (OSPF_IF_PARAM (oi, v_wait));
       break;
     case OSPFVIRTIFSTATE:
-      return SNMP_INTEGER (oi->status);
+      return SNMP_INTEGER (oi->state);
       break;
     case OSPFVIRTIFEVENTS:
-      return SNMP_INTEGER (oi->status_change);
+      return SNMP_INTEGER (oi->state_change);
       break;
     case OSPFVIRTIFAUTHKEY:
       *var_len = 0;
@@@@ -2031,7 +2033,7 @@@@ ospf_snmp_nbr_lookup (struct in_addr *nb
       for (rn = route_top (oi->nbrs); rn; rn = route_next (rn))
 	if ((nbr = rn->info) != NULL
 	    && nbr != oi->nbr_self
-	    && nbr->status != NSM_Down
+	    && nbr->state != NSM_Down
 	    && nbr->src.s_addr != 0)
 	  {
 	    if (IPV4_ADDR_SAME (&nbr->src, nbr_addr))
@@@@ -2059,7 +2061,7 @@@@ ospf_snmp_nbr_lookup_next (struct in_add
       for (rn = route_top (oi->nbrs); rn; rn = route_next (rn))
 	if ((nbr = rn->info) != NULL
 	    && nbr != oi->nbr_self
-	    && nbr->status != NSM_Down
+	    && nbr->state != NSM_Down
 	    && nbr->src.s_addr != 0)
 	  {
 	    if (first)
@@@@ -2173,7 +2175,7 @@@@ ospfNbrEntry (struct variable *v, oid *n
       return SNMP_INTEGER (nbr->priority);
       break;
     case OSPFNBRSTATE:
-      return SNMP_INTEGER (nbr->status);
+      return SNMP_INTEGER (nbr->state);
       break;
     case OSPFNBREVENTS:
       return SNMP_INTEGER (nbr->state_change);
@


1.2
log
@convert snmp FLAVOR to use net-snmp.

Maintainer timeout.  I do not see how this worked in the first place
without smux support.
@
text
@d1 1
a1 1
$OpenBSD: patch-ospfd_ospf_snmp_c,v 1.1 2002/07/17 21:57:23 mickey Exp $
@


1.1
log
@fix compilation errors in ospfd w/ snmp flavour; from zebra's cvs repo; pt out by naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 14
a16 2
+++ ospfd/ospf_snmp.c	Wed Jul 17 17:50:35 2002
@@@@ -1115,6 +1115,9 @@@@ ospfAreaRangeLookup (struct variable *v,
d26 1
a26 1
@@@@ -1136,8 +1139,9 @@@@ ospfAreaRangeLookup (struct variable *v,
d37 1
a37 1
@@@@ -1201,7 +1205,6 @@@@ ospfAreaRangeEntry (struct variable *v, 
d45 1
a45 1
@@@@ -1217,7 +1220,7 @@@@ ospfAreaRangeEntry (struct variable *v, 
d54 1
a54 1
@@@@ -1268,7 +1271,7 @@@@ ospfHostLookup (struct variable *v, oid 
d63 1
a63 1
@@@@ -1653,7 +1656,7 @@@@ ospfIfEntry (struct variable *v, oid *na
d72 1
a72 1
@@@@ -1662,7 +1665,7 @@@@ ospfIfEntry (struct variable *v, oid *na
d81 1
a81 1
@@@@ -1993,10 +1996,10 @@@@ ospfVirtIfEntry (struct variable *v, oid
d94 1
a94 1
@@@@ -2031,7 +2034,7 @@@@ ospf_snmp_nbr_lookup (struct in_addr *nb
d103 1
a103 1
@@@@ -2059,7 +2062,7 @@@@ ospf_snmp_nbr_lookup_next (struct in_add
d112 1
a112 1
@@@@ -2173,7 +2176,7 @@@@ ospfNbrEntry (struct variable *v, oid *n
@

