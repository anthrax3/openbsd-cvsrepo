head	1.1;
access;
symbols
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_3:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2003.07.19.01.14.01;	author brad;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2003.07.19.01.14.01;	author brad;	state Exp;
branches;
next	;

1.1.4.1
date	2003.07.19.01.27.13;	author brad;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-apps_snmpnetstat_if_c was initially added on branch OPENBSD_3_3.
@
text
@@


1.1.4.1
log
@A remote heap overflow was discovered in snmpnetstat by Axioma Security
Research. When a list of interfaces is requested, a malicious server can
return information in a way that will cause a heap overflow in snmpnetstat.

A remote atacker able to control a snmp server can exploit this
vulnerability to execute arbitrary code with the privileges of the
user running snmpnetstat.

http://marc.theaimsgroup.com/?l=bugtraq&m=101008893718720&w=2
@
text
@a0 15
$OpenBSD: patch-apps_snmpnetstat_if_c,v 1.1.2.1 2003/07/19 01:14:01 brad Exp $
--- apps/snmpnetstat/if.c.orig	Fri Nov 16 05:54:02 2001
+++ apps/snmpnetstat/if.c	Fri Jul 18 20:49:31 2003
@@@@ -279,6 +279,11 @@@@ intpr(int interval)
 		    case IFINDEX:
 			ifindex = *var->val.integer;
 			for (cur_if = if_table; cur_if->ifindex != ifindex && cur_if->ifindex != 0; cur_if++) ;
+			if (cur_if >= (if_table + cfg_nnets))
+			{
+				fprintf (stderr, "Inconsistent reponse from server. Aborting\n");
+				exit (0);
+			}
 			cur_if->ifindex = ifindex;
 			break;
 		    case OUTQLEN:
@


1.1.2.1
log
@A remote heap overflow was discovered in snmpnetstat by Axioma Security
Research. When a list of interfaces is requested, a malicious server can
return information in a way that will cause a heap overflow in snmpnetstat.

A remote atacker able to control a snmp server can exploit this
vulnerability to execute arbitrary code with the privileges of the
user running snmpnetstat.

http://marc.theaimsgroup.com/?l=bugtraq&m=101008893718720&w=2
@
text
@a0 15
$OpenBSD$
--- apps/snmpnetstat/if.c.orig	Fri Nov 16 05:54:02 2001
+++ apps/snmpnetstat/if.c	Fri Jul 18 20:49:31 2003
@@@@ -279,6 +279,11 @@@@ intpr(int interval)
 		    case IFINDEX:
 			ifindex = *var->val.integer;
 			for (cur_if = if_table; cur_if->ifindex != ifindex && cur_if->ifindex != 0; cur_if++) ;
+			if (cur_if >= (if_table + cfg_nnets))
+			{
+				fprintf (stderr, "Inconsistent reponse from server. Aborting\n");
+				exit (0);
+			}
 			cur_if->ifindex = ifindex;
 			break;
 		    case OUTQLEN:
@

