head	1.1;
access;
symbols
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_8:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2006.05.07.10.50.05;	author sturm;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2006.05.07.10.50.05;	author sturm;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.06.19.21.21.05;	author sturm;	state Exp;
branches;
next	;

1.1.4.1
date	2006.05.07.12.30.53;	author sturm;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2006.06.19.05.48.35;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-cgi_getcgi_c was initially added on branch OPENBSD_3_8.
@
text
@@


1.1.4.1
log
@MFC:
backport a bug fix for negative HTTP content_length header in CGIs
@
text
@a0 12
$OpenBSD$
--- cgi/getcgi.c.orig	Sun May  7 06:21:08 2006
+++ cgi/getcgi.c	Sun May  7 06:21:31 2006
@@@@ -169,6 +169,8 @@@@ char **getcgivars(void){
 			printf("getcgivars(): No Content-Length was sent with the POST request.\n") ;
 			exit(1);
 		        }
+		if(content_length<0)
+			content_length=0;
 		if(!(cgiinput=(char *)malloc(content_length+1))){
 			printf("getcgivars(): Could not allocate memory for CGI input.\n");
 			exit(1);
@


1.1.4.2
log
@forgotten commit:
backport of bug fix for HTTP content_length header integer overflow in CGIs
@
text
@d1 4
a4 4
$OpenBSD: patch-cgi_getcgi_c,v 1.1.4.1 2006/05/07 12:30:53 sturm Exp $
--- cgi/getcgi.c.orig	Sat Nov  6 06:44:12 2004
+++ cgi/getcgi.c	Wed May 24 18:26:10 2006
@@@@ -169,6 +169,13 @@@@ char **getcgivars(void){
d8 2
a9 7
+
+		/* suspicious content length */
+		if((content_length<0) || (content_length>=INT_MAX-1)){
+			printf("getcgivars(): Suspicious Content-Length was sent with the POST request.\n");
+			exit(1);
+			}
+
@


1.1.2.1
log
@MFC:
backport a bug fix for negative HTTP content_length header in CGIs
@
text
@a0 12
$OpenBSD$
--- cgi/getcgi.c.orig	Sun May  7 10:23:41 2006
+++ cgi/getcgi.c	Sun May  7 10:24:31 2006
@@@@ -169,6 +169,8 @@@@ char **getcgivars(void){
 			printf("getcgivars(): No Content-Length was sent with the POST request.\n") ;
 			exit(1);
 		        }
+		if(content_length<0)
+			content_length=0;
 		if(!(cgiinput=(char *)malloc(content_length+1))){
 			printf("getcgivars(): Could not allocate memory for CGI input.\n");
 			exit(1);
@


1.1.2.2
log
@forgotten commit:
backport of bug fix for HTTP content_length header integer overflow in CGIs
@
text
@d1 4
a4 4
$OpenBSD: patch-cgi_getcgi_c,v 1.1.2.1 2006/05/07 10:50:05 sturm Exp $
--- cgi/getcgi.c.orig	Sat Nov  6 06:44:12 2004
+++ cgi/getcgi.c	Wed May 24 18:59:16 2006
@@@@ -169,6 +169,13 @@@@ char **getcgivars(void){
d8 2
a9 7
+
+		/* suspicious content length */
+		if((content_length<0) || (content_length>=INT_MAX-1)){
+			printf("getcgivars(): Suspicious Content-Length was sent with the POST request.\n");
+			exit(1);
+			}
+
@


