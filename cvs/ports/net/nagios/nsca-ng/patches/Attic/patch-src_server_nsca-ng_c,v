head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2014.07.15.22.25.21;	author sthen;	state dead;
branches;
next	1.3;
commitid	0R4XgyrB9CEBURMZ;

1.3
date	2013.11.07.10.34.12;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2013.04.12.21.44.53;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2013.03.14.10.19.38;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update nsca-ng to 1.3, rolling in patch-src_server_nsca-ng_c.

nsca-ng requires RFC4279 PSK ciphersuites, so use the new OpenSSL port to
unbreak this.
@
text
@$OpenBSD: patch-src_server_nsca-ng_c,v 1.3 2013/11/07 10:34:12 sthen Exp $

From 28d4dc879545e4a797c4dd14441e6f12992372ce Mon Sep 17 00:00:00 2001
From: Holger Wei√ü <holger@@weiss.in-berlin.de>
Date: Thu, 07 Nov 2013 09:21:05 +0100
Subject: Ignore errors when closing file descriptors

Don't check the return value of closefrom(3) or fcntl(3) when closing
open file descriptors on startup.  If there are no file descriptors to
close, closefrom(3) will fail with EBADF on NetBSD and OpenBSD.  On
FreeBSD and Solaris, closefrom(3) is actually declared to return void.

--- src/server/nsca-ng.c.orig	Thu Nov  7 10:30:02 2013
+++ src/server/nsca-ng.c	Thu Nov  7 10:30:21 2013
@@@@ -300,11 +300,9 @@@@ close_descriptors(void)
 	int min_fd = STDERR_FILENO + 1;
 
 #if HAVE_CLOSEFROM /* BSD and Solaris. */
-	if (closefrom(min_fd) == -1)
-		die("Cannot close file descriptors >= %d: %m", min_fd);
+	(void)closefrom(min_fd);
 #elif defined(F_CLOSEM) /* AIX and IRIX. */
-	if (fcntl(min_fd, F_CLOSEM, 0) == -1)
-		die("Cannot close file descriptors >= %d: %m", min_fd);
+	(void)fcntl(min_fd, F_CLOSEM, 0);
 #else
 	int max_fd = MIN(sysconf(_SC_OPEN_MAX), /* Arbitrary limit: */ 1048576);
 	int fd;
@


1.3
log
@update to nsca-ng 1.2
https://www.nsca-ng.org/list/developers/2013-November/000015.html
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to NSCA-ng 1.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_server_nsca-ng_c,v 1.1 2013/03/14 10:19:38 sthen Exp $
d3 4
a6 4
From 979cf50ed690221d2d4ee419cc0f4e67c34179a3 Mon Sep 17 00:00:00 2001
From: Stuart Henderson <stu@@spacehopper.org>
Date: Wed, 13 Mar 2013 12:16:40 +0100
Subject: Add a directive to chroot(2) at startup
d8 4
a11 2
Allow the user to specify a directory the server should chroot(2) into
on startup.
d13 16
a28 61
--- src/server/nsca-ng.c.orig	Tue Mar  5 20:58:00 2013
+++ src/server/nsca-ng.c	Thu Mar 14 10:18:28 2013
@@@@ -77,7 +77,7 @@@@ static ev_signal sighup_watcher, sigint_watcher, sigte
 
 static options *get_options(int, char **);
 static void free_options(options *);
-static void switch_user(const char *);
+static void drop_privileges(const char *, const char *);
 static void remove_pidfile(void);
 static void forget_config(void);
 static void signal_cb(EV_P_ ev_signal *, int __attribute__((__unused__)));
@@@@ -104,8 +104,11 @@@@ main(int argc, char **argv)
 	cfg = conf_parse(opt->conf_file != NULL ?
 	    opt->conf_file : DEFAULT_CONF_FILE);
 
-	if (cfg_size(cfg, "user") > 0)
-		switch_user(cfg_getstr(cfg, "user"));
+	if (cfg_size(cfg, "user") > 0 || cfg_size(cfg, "chroot") > 0)
+		drop_privileges(cfg_size(cfg, "user") > 0 ?
+		    cfg_getstr(cfg, "user") : NULL,
+		    cfg_size(cfg, "chroot") > 0 ?
+		    cfg_getstr(cfg, "chroot") : NULL);
 
 	if (opt->log_target == -1)
 		opt->log_target = opt->foreground ?
@@@@ -290,21 +293,25 @@@@ free_options(options *opt)
 }
 
 static void
-switch_user(const char *user)
+drop_privileges(const char *user, const char *new_root)
 {
 	struct passwd *pw;
 
 	errno = 0;
-	if ((pw = getpwnam(user)) == NULL) {
-		if (errno == 0)
-			die("Cannot find user %s in password database", user);
-		else
-			die("Cannot lookup user %s in password database: %m",
-			    user);
+	if (user != NULL) {
+		if ((pw = getpwnam(user)) == NULL) {
+			if (errno == 0)
+				die("Cannot find user %s", user);
+			else
+				die("Cannot lookup user %s: %m", user);
+		}
+		if (initgroups(user, pw->pw_gid) == -1)
+			die("Cannot set up group list for user %s: %m", user);
 	}
-	if (initgroups(user, pw->pw_gid) == -1
-	    || setgid(pw->pw_gid) == -1
-	    || setuid(pw->pw_uid) == -1)
+	if (new_root != NULL && (chroot(new_root) == -1 || chdir("/") == -1))
+		die("Cannot change root directory to %s: %m", new_root);
+	if (user != NULL
+	    && (setgid(pw->pw_gid) == -1 || setuid(pw->pw_uid) == -1))
 		die("Cannot switch to user %s: %m", user);
 }
 
@


1.1
log
@add chroot support; committed upstream (thanks Holger!)
@
text
@d1 1
a1 1
$OpenBSD$
@

