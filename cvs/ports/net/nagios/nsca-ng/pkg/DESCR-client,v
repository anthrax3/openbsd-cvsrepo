head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.18
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.16
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.14
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.8
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.6
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.4
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	sthen_20130311:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.03.11.19.27.31;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.11.19.27.31;	author sthen;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@NSCA-ng provides a client-server pair which makes the Nagios command file
accessible to remote systems. This allows for submitting passive check
results, downtimes, and many other commands to Nagios or compatible
monitoring solutions. The submitted data is queued by the NSCA-ng
server if Nagios goes down. Multiple check results or commands can be
submitted in one go, and multiline plugin output is fully supported.
NSCA-ng uses TLS encryption and shared-secret authentication with
per-client passwords, as well as fine-grained authorization control.

This package contains the NSCA-ng client ("send_nsca"), which accepts
all input, command line arguments, and configuration files accepted
by the send_nsca binary provided with the original NSCA package.

NSCA clients cannot talk to NSCA-ng servers (nor vice versa), but NSCA
and NSCA-ng servers can happily run side by side.
@


1.1.1.1
log
@Import ports/net/nagios/nsca-ng, a nicer BSD-licensed alternative to the
horrible Nagios NSCA passive check acceptor. Command lines are compatible
but the protocol is not - however the two servers can coexist to assist
during a migration.  Fix/ok rpe@@
@
text
@@
