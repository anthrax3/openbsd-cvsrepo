head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2014.07.11.20.08.04;	author sthen;	state dead;
branches;
next	1.3;
commitid	BLR9Q6pquFG0Vj7f;

1.3
date	2012.06.28.23.10.48;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2011.06.02.13.41.40;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.15.09.56.53;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to monitoring-plugins 2.0 and shuffle directory to match the package
name (this was renamed from nagios-plugins a while ago, it is now separate
from nagios-plugins development which is proceeding separately)
@
text
@$OpenBSD: README-main,v 1.3 2012/06/28 23:10:48 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

The check_dhcp and check_icmp plugins need elevated privileges to
run properly. As check_icmp drops privileges early, it is installed
suid root. check_dhcp normally runs entirely as root; as the code
quality of this plugin is not really good, it is not installed
suid root by default.

Instead of running the whole plugin as root, it is possible to run
it with systrace's privilege elevation feature. This way the plugin
runs as _nagios, but the individual system calls requiring privileges
are run as root.

1) Create a preliminary systrace policy for the plugin.

# cd ${TRUEPREFIX}/libexec/nagios
# systrace -A -d /tmp ./<plugin> <plugin arguments>

This creates a policy for the plugin <plugin> in /tmp.

2) Refine the policy and configure privilege elevation as required. This
is an example, permitting the bind(2) syscall as root.

native-bind: sockaddr eq "inet-[0.0.0.0]:68" then permit as root

3) Copy the systrace policy to /etc/systrace.

4) Run visudo as root and configure sudo for user _nagios like this.

_nagios ALL=NOPASSWD: /bin/systrace -a -c 550\:550 \
    ${TRUEPREFIX}/libexec/nagios/<plugin> <plugin arguments>

5) Configure the respective command in nagios.

define command {
	command_name check_dhcp
	command_line sudo /bin/systrace -a -c 550:550 $USER1$/<plugin> <plugin arguments>
}

6) In case of problems, systrace will log to /var/log/messages.
@


1.3
log
@update nagios-plugins to 1.4.16, various fixes/new features

- the new code in check_user wants utmpx so those parts are reverted
to the old popen("/usr/bin/who",...) code for now.
@
text
@d1 1
a1 1
$OpenBSD: README-main,v 1.2 2011/06/02 13:41:40 ajacoutot Exp $
@


1.2
log
@Add a consistent header that substitutes FULLPKGNAME for the READMEs.

ok jasper@@ sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README-main,v 1.1 2010/11/15 09:56:53 sthen Exp $
d7 5
a11 3
The check_icmp and check_dhcp Nagios plugins need elevated privileges to
run properly. As the code quality of these plugins is not really good,
they are not installed suid root by default.
d13 4
a16 5
If you have to use these plugins (note that check_fping could be used
in place of check_icmp), instead of running the whole plugin as root,
it is possible to run them with systrace's privilege elevation feature.
This way the plugin runs as _nagios, but the individual system calls
requiring privileges are run as root.
@


1.1
log
@move to pkg-readmes; mostly from jasper@@ with tweaks by me.
ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 2
Setting up Nagios' plugins on OpenBSD
-------------------------------------
@

