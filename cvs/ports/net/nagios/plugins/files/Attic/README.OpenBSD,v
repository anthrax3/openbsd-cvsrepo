head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.0.18
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.16
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.14
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.12
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.10
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.8
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.6
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.4
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.2
	OPENBSD_4_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2010.11.15.09.56.53;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2006.05.07.07.42.09;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@move to pkg-readmes; mostly from jasper@@ with tweaks by me.
ok jasper@@
@
text
@Some nagios plugins need elevated privileges to run properly. As the code
quality of these plugins is not really good, they are not installed suid
root by default, but instead I suggest running them with systrace's
privilege elevation feature. This way they are run as _nagios, but single
syscalls are run as root.

1) Create a preliminary systrace policy for the plugin.

# cd ${PREFIX}/libexec/nagios
# systrace -A -d /tmp ./<plugin> <plugin arguments>

This creates a policy for the plugin <plugin> in /tmp.

2) Refine the policy and configure privilege elevation as required. This
is an example, permitting the bind(2) syscall as root.

native-bind: sockaddr eq "inet-[0.0.0.0]:68" then permit as root

3) Copy the systrace policy to /etc/systrace.

4) Run visudo as root and configure sudo for user _nagios like this.

_nagios ALL=NOPASSWD: /bin/systrace -a -c 550\:550 \
    ${PREFIX}/libexec/nagios/<plugin> <plugin arguments>

5) Configure the respective command in nagios.

define command {
	command_name check_dhcp
	command_line sudo /bin/systrace -a -c 550:550 $USER1$/<plugin> <plugin arguments>
}

6) In case of problems, systrace will log to /var/log/messages.

@


1.1
log
@do not install check_dhcp and check_icmp suid root (this code is
too crappy), instead explain how to setup systrace with privilege
elevation
@
text
@@

