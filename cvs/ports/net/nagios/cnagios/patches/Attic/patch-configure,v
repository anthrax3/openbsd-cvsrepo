head	1.3;
access;
symbols
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	sthen_20080205:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2008.04.17.01.15.35;	author merdely;	state dead;
branches;
next	1.2;

1.2
date	2008.04.09.14.29.44;	author merdely;	state Exp;
branches;
next	1.1;

1.1
date	2008.02.05.23.00.22;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.02.05.23.00.22;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to cnagios 0.25.
 - Work properly with nagios-3.x status.dat
 - Removes need for patch-configure with --with-status-file
   configure argument.
Fixes from Steve Rader, cnagios author

ok sthen@@ (MAINTAINER)
@
text
@$OpenBSD: patch-configure,v 1.2 2008/04/09 14:29:44 merdely Exp $
--- configure.orig	Tue Apr  8 19:52:18 2008
+++ configure	Tue Apr  8 19:54:23 2008
@@@@ -1472,47 +1472,7 @@@@ fi
 #----------------------------------------
 # nagios status data file and it's format...
 
-NAGIOS_STATUS_LOG="$NAGIOS_VAR_DIR/status.log"
-NAGIOS_STATUS_DAT="$NAGIOS_VAR_DIR/status.dat"
-
-if test -f "$NAGIOS_STATUS_LOG" ; then
-  NAGIOS_STATUS_DATA_FILE=$NAGIOS_STATUS_LOG
-fi
-
-if test -f "$NAGIOS_STATUS_DAT" ; then
-  NAGIOS_STATUS_DATA_FILE=$NAGIOS_STATUS_DAT
-fi
-
-if test -f "$NAGIOS_STATUS_LOG" && test -f "$NAGIOS_STATUS_DAT" ; then
-  echo
-  echo "WARNING: detected status.log and status.dat in $NAGIOS_VAR_DIR"
-  echo "WARNING: using $NAGIOS_STATUS_DAT"
-  echo
-fi
-
-NAGIOS_STATUS_DATA_VERSION=`head -20 $NAGIOS_STATUS_DATA_FILE | perl -ane '
-  BEGIN { $v='UNKNOWN'; }
-  if ( $_ =~ /Nagios 1.*? Status File/ ) { $v="1"; last; }
-  if ( $_ =~ /version=(\d+)/ ) { $v="$1"; last; }
-  END { print $v; }
-'`
-
-if test "$NAGIOS_STATUS_DATA_VERSION" = "UNKNOWN" ; then
-  echo
-  echo "FATAL ERROR: failed to detect data version in $NAGIOS_STATUS_DATA_FILE"
-  echo "It appears you do not have a working Nagios installation."
-  echo
-  exit
-fi
-
-if test "$NAGIOS_STATUS_DATA_VERSION" -gt 3 ; then
-  echo
-  echo "FATAL ERROR: unsupported data version ($NAGIOS_STATUS_DATA_VERSION) in $NAGIOS_STATUS_DATA_VERSION"
-  echo "Currently supported versions are 1, 2 and 3."
-  echo
-  exit
-fi
-
+NAGIOS_STATUS_DATA_FILE="$NAGIOS_VAR_DIR/status.dat"
 
 # Check whether --with-nagios-data or --without-nagios-data was given.
 if test "${with_nagios_data+set}" = set; then
@


1.2
log
@Update to 0.23.  Make work with Nagios 3.x

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d2 5
a6 10
--- configure.orig	Tue Feb  5 12:53:01 2008
+++ configure	Tue Feb  5 14:27:53 2008
@@@@ -1480,6 +1480,9 @@@@ fi;
 if  test "X $DATA_VER" != "X " ; then
   echo "nagios data ver is $DATA_VER"
   NAGIOS_STATUS_DATA_VERSION=$DATA_VER
+  if test "${DATA_VER}" == "2" ; then
+    NAGIOS_STATUS_DATA_FILE="$NAGIOS_VAR_DIR/status.dat"
+  fi
 fi
d8 39
a46 15
 echo "nagios status file... $NAGIOS_STATUS_DATA_FILE"
@@@@ -1488,17 +1491,8 @@@@ echo "nagios data version... $NAGIOS_STATUS_DATA_VERSI
 
 
 
-if  test "X $HOSTNAME" = "X chive.hep.wisc.edu" ; then
-  SITE_NAME="TEST "
+  SITE_NAME="OpenBSD World: "
   echo "site name... $SITE_NAME"
-else
-  echo "enter terse site name (just return for none): "
-  read SITE_NAME
-  if  test "X $SITE_NAME" != "X " ; then
-    SITE_NAME="$SITE_NAME "
-  fi
d49 1
d51 2
a52 2
 
                     ac_config_files="$ac_config_files Makefile cnagios.h"
@


1.1.1.1
log
@import Cnagios, based on a submission from Julien TOUCHE.

Cnagios is a full-screen terminal interface for viewing Nagios
HOST and SERVICE objects, and the durations of their current states.

It's lightning fast because it's written in C using the curses
library. And it's super flexible because it uses hooks directly
into the perl C library to shorten plugin output and filter the
displayed HOSTs or SERVICEs.

ok ian (for an earlier version without a license, upstream added
a nice one when I asked, thanks!) "commit it dammit" henning
@
text
@@
