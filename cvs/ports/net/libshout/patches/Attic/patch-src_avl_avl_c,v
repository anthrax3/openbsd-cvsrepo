head	1.5;
access;
symbols
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_6:1.1.1.1.0.6
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.4
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	sturm_2003-Jul-26:1.1.1.1
	sturm:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2006.03.14.19.59.01;	author sturm;	state dead;
branches;
next	1.4;

1.4
date	2005.04.19.20.23.44;	author sturm;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.19.20.07.11;	author sturm;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.27.19.14.40;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2003.07.26.11.38.50;	author sturm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.07.26.11.38.50;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to libshout 2.2

from maintainer Moritz Grimm <gtgbr at gmx.net>
@
text
@$OpenBSD: patch-src_avl_avl_c,v 1.4 2005/04/19 20:23:44 sturm Exp $
--- src/avl/avl.c.orig	Mon Jul  5 22:44:13 2004
+++ src/avl/avl.c	Tue Apr 19 22:18:54 2005
@@@@ -35,6 +35,7 @@@@
 
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
 
 #include "avl.h"
 
@@@@ -1063,9 +1064,11 @@@@ typedef struct _link_node {
 static char balance_chars[3] = {'\\', '-', '/'};
 
 static int
-default_key_printer (char * buffer, void * key)
+default_key_printer (char * buffer, size_t size, void * key)
 {
-  return sprintf (buffer, "%p", key);
+  snprintf (buffer, size, "%p", key);
+
+  return strlen(buffer);
 }  
 
 /*
@@@@ -1108,8 +1111,8 @@@@ print_node (avl_key_printer_fun_type key
         link_node * link)
 {
   char buffer[256];
-  unsigned int width;
-  width = key_printer (buffer, node->key);
+  size_t width;
+  width = key_printer (buffer, sizeof(buffer), node->key);
 
   if (node->right) {
       link_node here;
@


1.4
log
@ups
@
text
@d1 1
a1 1
$OpenBSD: patch-src_avl_avl_c,v 1.3 2005/04/19 20:07:11 sturm Exp $
@


1.3
log
@fun with cvs again, here are the missing pieces:

snprintf() from maintainer Moritz Grimm <gtgbr at gmx.net>
@
text
@d1 12
a12 4
$OpenBSD$
--- src/avl/avl.c.orig	Sun Apr 17 02:44:43 2005
+++ src/avl/avl.c	Sun Apr 17 02:47:25 2005
@@@@ -1063,9 +1063,11 @@@@ typedef struct _link_node {
d26 1
a26 1
@@@@ -1108,8 +1110,8 @@@@ print_node (avl_key_printer_fun_type key
@


1.2
log
@Update to 2.1.  New features:
- bug fixes
- nonblocking I/O support

Port fixes:
- WANTLIB marker
- better MASTER_SITES
- correct LIB_DEPENDS
- improved DESCR

From: Moritz Grimm <gtgbr@@gmx.net>
@
text
@d1 9
a9 19
$OpenBSD: patch-src_avl_avl_c,v 1.1 2003/07/26 11:38:50 sturm Exp $
--- src/avl/avl.c.orig	2003-07-26 09:07:59.000000000 +0200
+++ src/avl/avl.c	2003-07-26 09:10:35.000000000 +0200
@@@@ -987,11 +987,11 @@@@ avl_verify_balance (avl_node * node)
     long lh = avl_verify_balance (node->left);
     long rh = avl_verify_balance (node->right);
     if ((rh - lh) != AVL_GET_BALANCE(node)) {
-      fprintf (stderr, "invalid balance at node %d\n", (int) node->key);
+      fprintf (stderr, "invalid balance at node %ld\n", (long) node->key);
       exit(1);
     }
     if (((lh - rh) > 1) || ((lh - rh) < -1)) {
-      fprintf (stderr, "unbalanced at node %d\n", (int) node->key);
+      fprintf (stderr, "unbalanced at node %ld\n", (long) node->key);
       exit(1);
     }
     return (1 + AVL_MAX (lh, rh));
@@@@ -1002,7 +1002,7 @@@@ static void
 avl_verify_parent (avl_node * node, avl_node * parent)
d11 18
a28 15
   if (node->parent != parent) {
-    fprintf (stderr, "invalid parent at node %d\n", (int) node->key);
+    fprintf (stderr, "invalid parent at node %ld\n", (long) node->key);
     exit(1);
   }
   if (node->left) {
@@@@ -1027,7 +1027,7 @@@@ avl_verify_rank (avl_node * node)
       num_right = avl_verify_rank (node->right);
     }
     if (AVL_GET_RANK (node) != num_left + 1) {
-      fprintf (stderr, "invalid rank at node %d\n", (int) node->key);
+      fprintf (stderr, "invalid rank at node %ld\n", (long) node->key);
       exit (1);
     }
     return (num_left + num_right + 1);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Initial import of libshout 2.0

Libshout is a library for communicating with and sending data to an
icecast server. It handles the socket connection, the timing of the
data, and prevents bad data from getting to the icecast server.

With just a few lines of code, a programmer can easily turn any
application into a streaming source for an icecast server. Libshout
also allows developers who want a specific feature set (database
access, request taking) to concentrate on that feature set, instead of
worrying about how server communication works.

from Moritz Grimm <gtgbr@@gmx.net>, cleanup and patches from me

WWW:  http://www.icecast.org/
@
text
@@
