head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2014.04.22.10.01.01;	author ajacoutot;	state dead;
branches;
next	1.4;

1.4
date	2013.11.02.15.55.53;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2013.03.19.22.06.44;	author landry;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.27.10.30.35;	author ajacoutot;	state dead;
branches;
next	1.1;

1.1
date	2010.03.23.21.13.37;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove opal. Nothing uses it anymore and it never played well with rthreads.
@
text
@$OpenBSD: patch-plugins_video_H_263-1998_h263-1998_cxx,v 1.4 2013/11/02 15:55:53 ajacoutot Exp $

Fix compilation/runtime with ffmpeg 0.11 (Arch Linux):
https://projects.archlinux.org/svntogit/packages.git/tree/trunk/opal-ffmpeg.patch?h=packages/opal

--- plugins/video/H.263-1998/h263-1998.cxx.orig	Thu Aug 15 01:22:47 2013
+++ plugins/video/H.263-1998/h263-1998.cxx	Sat Nov  2 16:28:49 2013
@@@@ -48,6 +48,10 @@@@
 #endif
 
 #include "h263-1998.h"
+extern "C"
+{
+#include <libavutil/opt.h>
+}
 #include <limits>
 #include <iomanip>
 #include <stdio.h>
@@@@ -203,7 +207,7 @@@@ H263_Base_EncoderContext::~H263_Base_EncoderContext()
   PTRACE(4, m_prefix, "Encoder closed");
 }
 
-bool H263_Base_EncoderContext::Init(CodecID codecId)
+bool H263_Base_EncoderContext::Init(AVCodecID codecId)
 {
   PTRACE(5, m_prefix, "Opening encoder");
 
@@@@ -317,9 +321,9 @@@@ void H263_Base_EncoderContext::SetOption(const char * 
     // Level 2+ 
     // works with eyeBeam, signaled via  non-standard "D"
     if (atoi(value) == 1)
-      m_context->flags |= CODEC_FLAG_H263P_UMV; 
+      av_opt_set_int(m_context->priv_data, "umv", 1, 0);
     else
-      m_context->flags &= ~CODEC_FLAG_H263P_UMV; 
+      av_opt_set_int(m_context->priv_data, "umv", 0, 0);
     return;
   }
 
@@@@ -328,9 +332,9 @@@@ void H263_Base_EncoderContext::SetOption(const char * 
     // Annex F: Advanced Prediction Mode
     // does not work with eyeBeam
     if (atoi(value) == 1)
-      m_context->flags |= CODEC_FLAG_OBMC; 
+      av_opt_set_int(m_context->priv_data, "obmc", 1, 0);
     else
-      m_context->flags &= ~CODEC_FLAG_OBMC; 
+      av_opt_set_int(m_context->priv_data, "obmc", 0, 0);
     return;
   }
 #endif
@@@@ -360,9 +364,9 @@@@ void H263_Base_EncoderContext::SetOption(const char * 
     // Annex K: Slice Structure
     // does not work with eyeBeam
     if (atoi(value) != 0)
-      m_context->flags |= CODEC_FLAG_H263P_SLICE_STRUCT; 
+      av_opt_set_int(m_context->priv_data, "structured_slices", 1, 0);
     else
-      m_context->flags &= ~CODEC_FLAG_H263P_SLICE_STRUCT; 
+      av_opt_set_int(m_context->priv_data, "structured_slices", 0, 0);
     return;
   }
 
@@@@ -370,9 +374,9 @@@@ void H263_Base_EncoderContext::SetOption(const char * 
     // Annex S: Alternative INTER VLC mode
     // does not work with eyeBeam
     if (atoi(value) == 1)
-      m_context->flags |= CODEC_FLAG_H263P_AIV; 
+      av_opt_set_int(m_context->priv_data, "aiv", 1, 0);
     else
-      m_context->flags &= ~CODEC_FLAG_H263P_AIV; 
+      av_opt_set_int(m_context->priv_data, "aiv", 0, 0);
     return;
   }
 
@@@@ -450,15 +454,6 @@@@ bool H263_Base_EncoderContext::OpenCodec()
   PTRACE(5, m_prefix, "qmax set to " << m_context->qmax);
   PTRACE(5, m_prefix, "payload size set to " << m_context->rtp_payload_size);
 
-  #define CODEC_TRACER_FLAG(tracer, flag) \
-    PTRACE(4, m_prefix, #flag " is " << ((m_context->flags & flag) ? "enabled" : "disabled"));
-  CODEC_TRACER_FLAG(tracer, CODEC_FLAG_H263P_UMV);
-  CODEC_TRACER_FLAG(tracer, CODEC_FLAG_OBMC);
-  CODEC_TRACER_FLAG(tracer, CODEC_FLAG_AC_PRED);
-  CODEC_TRACER_FLAG(tracer, CODEC_FLAG_H263P_SLICE_STRUCT)
-  CODEC_TRACER_FLAG(tracer, CODEC_FLAG_LOOP_FILTER);
-  CODEC_TRACER_FLAG(tracer, CODEC_FLAG_H263P_AIV);
-
   return FFMPEGLibraryInstance.AvcodecOpen(m_context, m_codec) == 0;
 }
 
@@@@ -521,7 +516,7 @@@@ bool H263_Base_EncoderContext::EncodeFrames(const BYTE
 
     // Need to copy to local buffer to guarantee 16 byte alignment
     memcpy(m_inputFrame->data[0], OPAL_VIDEO_FRAME_DATA_PTR(header), header->width*header->height*3/2);
-    m_inputFrame->pict_type = (flags & PluginCodec_CoderForceIFrame) ? FF_I_TYPE : AV_PICTURE_TYPE_NONE;
+    m_inputFrame->pict_type = (flags & PluginCodec_CoderForceIFrame) ? AV_PICTURE_TYPE_I : AV_PICTURE_TYPE_NONE;
 
     /*
     m_inputFrame->pts = (int64_t)srcRTP.GetTimestamp()*m_context->time_base.den/m_context->time_base.num/VIDEO_CLOCKRATE;
@@@@ -603,13 +598,13 @@@@ bool H263_RFC2190_EncoderContext::Init()
   m_context->rtp_callback = &H263_RFC2190_EncoderContext::RTPCallBack;
   m_context->opaque = this; // used to separate out packets from different encode threads
 
-  m_context->flags &= ~CODEC_FLAG_H263P_UMV;
+  av_opt_set_int(m_context->priv_data, "umv", 0, 0);
   m_context->flags &= ~CODEC_FLAG_4MV;
 #if LIBAVCODEC_RTP_MODE
   m_context->flags &= ~CODEC_FLAG_H263P_AIC;
 #endif
-  m_context->flags &= ~CODEC_FLAG_H263P_AIV;
-  m_context->flags &= ~CODEC_FLAG_H263P_SLICE_STRUCT;
+  av_opt_set_int(m_context->priv_data, "aiv", 0, 0);
+  av_opt_set_int(m_context->priv_data, "structured_slices", 0, 0);
 
   return true;
 }
@


1.4
log
@Fix unresolved symbols with newer FFmpeg (from Arch Linux).
@
text
@d1 1
a1 1
$OpenBSD: patch-plugins_video_H_263-1998_h263-1998_cxx,v 1.3 2013/03/19 22:06:44 landry Exp $
@


1.3
log
@Fix build after ffmpeg 1.1 update, since brad doesnt seem to care..

Adapted from https://projects.archlinux.org/svntogit/packages.git/commit/?h=packages/opal&id=278c8f93262ee8372b05c650a2e6456ad2d04950
@
text
@d1 8
a8 6
$OpenBSD$
fix with ffmpeg 1.1
https://projects.archlinux.org/svntogit/packages.git/commit/?h=packages/opal&id=278c8f93262ee8372b05c650a2e6456ad2d04950
--- plugins/video/H.263-1998/h263-1998.cxx.orig	Wed Feb 20 03:18:03 2013
+++ plugins/video/H.263-1998/h263-1998.cxx	Tue Mar 19 22:52:56 2013
@@@@ -48,6 +48,7 @@@@
d12 2
d15 1
d19 10
a28 1
@@@@ -317,9 +318,9 @@@@ void H263_Base_EncoderContext::SetOption(const char * 
d40 1
a40 1
@@@@ -328,9 +329,9 @@@@ void H263_Base_EncoderContext::SetOption(const char * 
d52 1
a52 1
@@@@ -360,9 +361,9 @@@@ void H263_Base_EncoderContext::SetOption(const char * 
d64 1
a64 1
@@@@ -370,9 +371,9 @@@@ void H263_Base_EncoderContext::SetOption(const char * 
d76 1
a76 1
@@@@ -450,15 +451,6 @@@@ bool H263_Base_EncoderContext::OpenCodec()
d92 1
a92 1
@@@@ -521,7 +513,7 @@@@ bool H263_Base_EncoderContext::EncodeFrames(const BYTE
d101 1
a101 1
@@@@ -603,13 +595,13 @@@@ bool H263_RFC2190_EncoderContext::Init()
@


1.2
log
@Remove now unneeded ffmpeg related patch.

from Brad.
@
text
@d1 7
a7 10
$OpenBSD: patch-plugins_video_H_263-1998_h263-1998_cxx,v 1.1 2010/03/23 21:13:37 ajacoutot Exp $

XXX FFmpeg is too old:
struct AVCodecContext has no member named error_recognition

--- plugins/video/H.263-1998/h263-1998.cxx.orig	Sun Jul  5 08:12:58 2009
+++ plugins/video/H.263-1998/h263-1998.cxx	Tue Jul  7 11:15:47 2009
@@@@ -59,6 +59,7 @@@@
 #include "dyna.h"
 #include "mpi.h"
d9 4
a12 1
+#include <cstdio>
d14 11
d26 23
a48 7
 #include "tracer.h"
@@@@ -278,7 +279,7 @@@@ bool H263_Base_EncoderContext::Open(CodecID codecId)
   _context->flags |= CODEC_FLAG_PASS1;
 
   _context->error_concealment = 3;
-  _context->error_recognition = 5;
+//  _context->error_recognition = 5;
d50 54
a103 2
   // debugging flags
   if (Trace::CanTraceUserPlane(4)) {
@


1.1
log
@Major update to opal-3.6.6.
@
text
@d1 1
a1 1
$OpenBSD$
@

