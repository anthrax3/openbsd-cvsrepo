head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.05.17.16.03.32;	author espie;	state Exp;
branches;
next	1.2;
commitid	hHiQ8fuG4Uo8aIy3;

1.2
date	2007.04.09.20.50.58;	author kili;	state dead;
branches;
next	1.1;

1.1
date	2006.11.01.21.13.19;	author kili;	state Exp;
branches;
next	;


desc
@@


1.3
log
@let it build with clang: fix depends line, const correct char*,
typedef nonsense, and delete vs new[]
@
text
@$OpenBSD$

Index: kismet_server.cc
--- kismet_server.cc.orig
+++ kismet_server.cc
@@@@ -114,7 +114,7 @@@@ FifoDumpFile fifodump;
 TcpServer ui_server;
 int sound = -1;
 packet_info last_info;
-int decay;
+int rdecay;
 channel_power channel_graph[CHANNEL_MAX];
 char *servername = NULL;
 
@@@@ -172,7 +172,7 @@@@ int filter_export_bssid_invert = -1, filter_export_sou
     filter_export_dest_invert = -1;
 
 // For alert enabling...
-typedef struct _alert_enable {
+struct _alert_enable {
     string alert_name;
     alert_time_unit limit_unit;
 	alert_time_unit burst_unit;
@@@@ -229,7 +229,7 @@@@ int retain_monitor;
 int netcryptdetect = 0;
 
 // Shutdown/restore networkmanager (if we can)
-int networkmanager_control(char *cmd) {
+int networkmanager_control(const char *cmd) {
 #ifdef HAVE_DBUS
 	DBusMessage* msg;
 	DBusConnection* conn;
@@@@ -759,7 +759,7 @@@@ void NetWriteInfo() {
     snprintf(tmpstr, 32, "%d", tracker.FetchNumPackets() - last_packnum);
     idata.rate = tmpstr;
 
-    if (time(0) - last_info.ts.tv_sec < decay && last_info.signal != -1)
+    if (time(0) - last_info.ts.tv_sec < rdecay && last_info.signal != -1)
         snprintf(tmpstr, 16, "%d %d" , last_info.signal, last_info.noise);
     else if (last_info.quality == -1)
         snprintf(tmpstr, 16, "-1 -1");
@@@@ -1543,7 +1543,7 @@@@ int ProcessBulkConf(ConfigFile *conf) {
     }
 
     if (conf->FetchOpt("decay") != "") {
-        if (sscanf(conf->FetchOpt("decay").c_str(), "%d", &decay) != 1) {
+        if (sscanf(conf->FetchOpt("decay").c_str(), "%d", &rdecay) != 1) {
             fprintf(stderr, "FATAL:  Illegal config file value for decay.\n");
             ErrorShutdown();
         }
@@@@ -2237,7 +2237,7 @@@@ int main(int argc,char *argv[]) {
         { 0, 0, 0, 0 }
     };
     int option_index;
-    decay = 5;
+    rdecay = 5;
 
     // Catch the interrupt handler to shut down
     signal(SIGINT, CatchShutdown);
@@@@ -2950,7 +2950,7 @@@@ int main(int argc,char *argv[]) {
         timetracker.RegisterTimer(datainterval * SERVER_TIMESLICES_SEC, NULL, 1, &ExportSyncEvent, NULL);
     // Write waypoints if requested
     if (waypoint)
-        timetracker.RegisterTimer(decay * SERVER_TIMESLICES_SEC, NULL, 1, &WaypointSyncEvent, NULL);
+        timetracker.RegisterTimer(rdecay * SERVER_TIMESLICES_SEC, NULL, 1, &WaypointSyncEvent, NULL);
     // Channel hop if requested
     if (channel_hop) {
         if (channel_dwell)
@@@@ -3175,7 +3175,7 @@@@ daemon_parent_cleanup:
                     num_networks = tracker.FetchNumNetworks();
 
                     if (tracker.FetchNumPackets() != num_packets) {
-                        if (cur_time - last_click >= decay && sound == 1) {
+                        if (cur_time - last_click >= rdecay && sound == 1) {
                             if (tracker.FetchNumPackets() - num_packets >
                                 tracker.FetchNumDropped() + localdropnum - num_dropped) {
                                 sound = PlaySound("traffic");
@


1.2
log
@
Update to 2007-01-R1b. Tested by many.

ok, robert@@
@
text
@d1 1
a1 1
$OpenBSD: patch-kismet_server_cc,v 1.1 2006/11/01 21:13:19 kili Exp $
d3 75
a77 49
# From upstream SVN.

--- kismet_server.cc.orig	Thu Apr 13 00:42:59 2006
+++ kismet_server.cc	Fri Oct 20 15:38:06 2006
@@@@ -1989,11 +1989,20 @@@@ int ProcessBulkConf(ConfigFile *conf) {
                                  &filter_export_dest_invert);
 
     // Push the packparms into each source...
-    packet_parm fuzzparms;
-    fuzzparms.fuzzy_crypt = 1;
+    packet_parm optparms;
 
-    sourcetracker.SetTypeParms(conf->FetchOpt("fuzzycrypt"), fuzzparms);
+	// Set the fuzzy options
+    optparms.fuzzy_crypt = 1;
+	optparms.fuzzy_decode = -1;
 
+    sourcetracker.SetTypeParms(conf->FetchOpt("fuzzycrypt"), optparms);
+
+	// Set the fuzzy decode to be forgiving on FCS
+    optparms.fuzzy_crypt = -1;
+	optparms.fuzzy_decode = 1;
+
+    sourcetracker.SetTypeParms(conf->FetchOpt("fuzzydecode"), optparms);
+
 	// Fetch the netcryptdetect value
 	if (conf->FetchOpt("netfuzzycrypt") == "true") {
 		fprintf(stderr, "Using network-classifier based data encryption detection\n");
@@@@ -2927,8 +2936,7 @@@@ int main(int argc,char *argv[]) {
                     }
 
                     if (gps_log == 1 && info.type != packet_noise && 
-                        info.type != packet_unknown && info.type != packet_phy && 
-                        info.corrupt == 0) {
+                        info.type != packet_unknown && info.type != packet_phy) {
                         if (gpsdump.DumpPacket(&info) < 0) {
                             snprintf(status, STATUS_MAX, "%s", gpsdump.FetchError());
                             if (!silent || NetWriteStatus(status) == 0)
@@@@ -3007,8 +3015,8 @@@@ int main(int argc,char *argv[]) {
                     if (fifo)
                         fifodump.DumpPacket(&info, &packet);
 
-                    if (data_log && !(info.type == packet_noise && noise_log == 1) &&
-                        !(info.corrupt != 0 && corrupt_log == 1)) {
+                    if (data_log && !(info.type == packet_noise && noise_log == 0) &&
+                        !(info.corrupt != 0 && corrupt_log == 0)) {
                         if (limit_logs && log_packnum > limit_logs) {
                             dumpfile->CloseDump();
 
@


1.1
log
@
Update to 2006-04-R1, with some patches from the upstream kismet SVN.

While here, update my mail address and comment most of
the patch files.

Some WANTLIB spanking and ok, sturm@@
@
text
@d1 1
a1 1
$OpenBSD$
@

