head	1.7;
access;
symbols
	OPENBSD_6_1:1.5.0.36
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.34
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.30
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.32
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.28
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.26
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.24
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.22
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.20
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.18
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.16
	OPENBSD_5_0:1.5.0.14
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.12
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.10
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.8
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.6
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2017.05.18.12.41.58;	author espie;	state Exp;
branches;
next	1.6;
commitid	LJlKusnv4n2xxL6R;

1.6
date	2017.05.17.16.03.32;	author espie;	state Exp;
branches;
next	1.5;
commitid	hHiQ8fuG4Uo8aIy3;

1.5
date	2008.06.27.22.10.14;	author kili;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.28.12.43.32;	author kili;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.09.20.50.58;	author kili;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.01.21.13.19;	author kili;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.07.14.13.57;	author bernd;	state Exp;
branches;
next	;


desc
@@


1.7
log
@there was already one const there. noticed by nigel, as stupid gcc dislikes
const const.
@
text
@$OpenBSD: patch-gpsmap_cc,v 1.6 2017/05/17 16:03:32 espie Exp $

# Disable map sources known to be broken.
# Use our ftp(1) instead of wget.
# Fix OSM map source (OSM already provides PNGs, not GIFs).
# If the first attempt to load the image fails, reset the exception,
# because ImageMagick would bail out on the second attempt (after the
# download).

Index: gpsmap.cc
--- gpsmap.cc.orig
+++ gpsmap.cc
@@@@ -90,24 +90,24 @@@@ const char *config_base = "kismet.conf";
 // Broken map sources...  Damn vendors changing.
 // Mappoint
 // const char url_template_mp[] = "http://msrvmaps.mappoint.net/isapi/MSMap.dll?ID=3XNsF.&C=%f,%f&L=USA&CV=1&A=%ld&S=%d,%d&O=0.000000,0.000000&MS=0&P=|5748|";
+// Terraserver photo-maps and topo maps
+// const char url_template_ts[] = "http://terraservice.net/GetImageArea.ashx?t=1&lat=%f&lon=%f&s=%ld&w=%d&h=%d";
+// const char url_template_tt[] = "http://terraservice.net/GetImageArea.ashx?t=2&lat=%f&lon=%f&s=%ld&w=%d&h=%d";
 
+// Earthamaps need a perl helper script to get data because of cookies
+// const char url_template_em[] = "gpsmap-helper-earthamaps %s %f %f %d %d %ld";
 // Mapblast
 const char url_template_mb[] = "http://go.vicinity.com/homedepotvd/MakeMap.d?&CT=%f:%f:%ld&IC=&W=%d&H=%d&FAM=mblast&LB=%s";
 
-// Terraserver photo-maps and topo maps
-const char url_template_ts[] = "http://terraservice.net/GetImageArea.ashx?t=1&lat=%f&lon=%f&s=%ld&w=%d&h=%d";
-const char url_template_tt[] = "http://terraservice.net/GetImageArea.ashx?t=2&lat=%f&lon=%f&s=%ld&w=%d&h=%d";
 // Tiger census vector maps
 const char url_template_ti[] = "http://tiger.census.gov/cgi-bin/mapper/map.gif?lat=%f&lon=%f&wid=0.001&ht=%f&iwd=%d&iht=%d&on=majroads&on=places&on=shorelin&on=streets&on=interstate&on=statehwy&on=ushwy&on=water&tlevel=-&tvar=-&tmeth=i";
-// Earthamaps need a perl helper script to get data because of cookies
-const char url_template_em[] = "gpsmap-helper-earthamaps %s %f %f %d %d %ld";
 
 const char url_template_euex[] = "http://www.expedia.de/pub/agent.dll?qscr=mrdt&ID=3XNsF.&CenP=%f,%f&Lang=%s&Alti=%ld&Size=%d,%d&Offs=0.000000,0.000000&BCheck=1";
 
 const char url_template_osm[] = "http://tah.openstreetmap.org/MapOf/?lat=%f&long=%f&z=%d&w=%d&h=%d&format=png";
 
-// Download template for sources that we fetch using wget
-const char download_template[] = "wget \"%s\" -O %s";
+// Download template for sources that we fetch using ftp
+const char download_template[] = "/usr/bin/ftp -o %s \"%s\"";
 
 // Image scales we try to autofetch
 long int scales[] = { 1000, 2000, 5000, 10000, 20000, 30000, 50000, 60000, 
@@@@ -182,7 +182,7 @@@@ char *channelcolors[] = {
     "#808080", "#CCCCCC"
 };
 */
-char *channelcolors[] = { 
+const char *channelcolors[] = { 
     "#FF0000", "#FF6000", "#A08000", 
     "#80A000", "#60FF00", "#00FF00", 
     "#00FF60", "#00A080", "#0080A0", 
@@@@ -191,7 +191,7 @@@@ char *channelcolors[] = { 
 int channelcolor_max = 14;
 
 // Origional
-char *powercolors_Orig[] = {
+const char *powercolors_Orig[] = {
     "#FF0000", "#FFD500", "#FFCC00",
     "#F2FF00", "#7BFF00", "#00FFB6",
     "#00FFFF", "#005DFF", "#A100FF",
@@@@ -199,7 +199,7 @@@@ char *powercolors_Orig[] = {
 };
 const int power_steps_Orig = 10;
 // Blue powercolors
-char *powercolors_Blue[] = {
+const char *powercolors_Blue[] = {
     "#A0A0FF",
     "#9B9BFA",
     "#9696F5",
@@@@ -236,7 +236,7 @@@@ char *powercolors_Blue[] = {
 const int power_steps_Blue = 32;
 
 // Math progression
-char *powercolors_Math[] = {
+const char *powercolors_Math[] = {
     "#FF0000", "#FF8000", "#FFFF00",
     "#80FF00", "#00FF00", "#00FF80",
     "#00FFFF", "#0080FF", "#0000FF",
@@@@ -244,7 +244,7 @@@@ char *powercolors_Math[] = {
 };
 const int power_steps_Math = 12;
 // Weather Radar
-char *powercolors_Radar[] = {
+const char *powercolors_Radar[] = {
     "#50E350", "#39C339", "#208420",
     "#145A14", "#C8C832", "#DC961E",
     "#811610", "#B31A17", "#E61E1E"
@@@@ -256,7 +256,7 @@@@ const int power_max = 255;
 int powercolor_index = 0;
 
 // Label gravity
-char *label_gravity_list[] = {
+const char *label_gravity_list[] = {
     "northwest", "north", "northeast",
     "west", "center", "east",
     "southwest", "south", "southeast"
@@@@ -297,7 +297,7 @@@@ bool hullPoint::operator() (const hullPoint& a, const 
 	return a.angle < b.angle;
 }
 
-typedef struct gps_network {
+struct gps_network {
 
     gps_network() {
         filtered = 0;
@@@@ -411,7 +411,7 @@@@ int mapsource = -1;
 int power_resolution = 5;
 // Interpolation colors
 // strength colors
-char **power_colors = NULL;
+const char **power_colors = NULL;
 int power_steps = 0;
 // Center resolution (size of circle)
 int center_resolution = 2;
@@@@ -1512,29 +1512,6 @@@@ int BestMapScale(long int *in_mapscale, long int *in_f
     double mapx, mapy;
     double map2x, map2y;
 
-    if ((mapsource == MAPSOURCE_TERRA) || (mapsource == MAPSOURCE_TERRATOPO)) {
-        for (int x = 0; terrascales[x] != -1; x++) {
-            calcxy(&mapx, &mapy, tlat, tlon, 
-                    (double) terrascales[x]/PIXELFACT, 
-                    map_avg_lat, map_avg_lon);
-            calcxy(&map2x, &map2y, blat, blon, 
-                    (double) terrascales[x]/PIXELFACT, 
-                    map_avg_lat, map_avg_lon);
-
-            if ((mapx < 0 || mapx > map_width || mapy < 0 || 
-                        mapy > map_height) ||
-                    (map2x < 0 || map2x > map_width || 
-                     map2y < 0 || map2y > map_height)) {
-                continue;
-            } else {
-                (*in_mapscale) = terrascales[x];
-                (*in_fetchscale) = x + 10;
-                return 1;
-            }
-        }
-        return -1;
-    }
-
     if (mapsource == MAPSOURCE_EUEX) {
         for (int x = 0; euexscales[x] != -1; x++) {
             calcxy(&mapx, &mapy, tlat, tlon, 
@@@@ -1581,35 +1558,6 @@@@ int BestMapScale(long int *in_mapscale, long int *in_f
         return -1;
     }
 
-    if (mapsource == MAPSOURCE_EARTHAMAPS) {
-        // Find how many scales we have
-        int nscales;
-        for (nscales = 0; earthamapscales[nscales] != -1; nscales++) 
-            ; // Nothing
-
-        for (int x = (nscales - 1); x > 1; x--) {
-            calcxy(&mapx, &mapy, tlat, tlon, 
-                    (double) earthamapscales[x]/PIXELFACT, 
-                    map_avg_lat, map_avg_lon);
-            calcxy(&map2x, &map2y, blat, blon, 
-                    (double) earthamapscales[x]/PIXELFACT, 
-                    map_avg_lat, map_avg_lon);
-
-            if ((mapx < 0 || mapx > map_width || mapy < 0 || 
-                        mapy > map_height) ||
-                    (map2x < 0 || map2x > map_width || 
-                     map2y < 0 || map2y > map_height)) {
-                continue;
-            } else {
-                (*in_mapscale) = earthamapscales[x];
-                (*in_fetchscale) = x;
-                return 1;
-            }
-        }
-
-        return -1;
-    }
-
     // Mapblast style scale finding
     for (int x = 0; scales[x] != -1; x++) {
         calcxy(&mapx, &mapy, tlat, tlon, (double) scales[x]/PIXELFACT, 
@@@@ -2154,7 +2102,7 @@@@ void DrawNetBoundRects(vector<gps_network *> in_nets, 
 
 // Thread function to compute a line of interpolated data
 
-typedef struct powerline_arg {
+struct powerline_arg {
 //    unsigned int y;
 //    unsigned int y_max;
     unsigned int in_res;
@@@@ -2397,8 +2345,8 @@@@ void DrawNetPower(vector<gps_network *> in_nets, Image
     delete[] power_map;
     delete[] power_input_map;
     delete[] colormap;
-    delete point_template;
-    delete rect_template;
+    delete[] point_template;
+    delete[] rect_template;
 }
 
 void DrawNetCenterDot(vector<gps_network *> in_nets, Image *in_img, DrawInfo *in_di) {
@@@@ -4016,30 +3964,6 @@@@ int main(int argc, char *argv[]) {
     // Some day this needs to get rewritten to not be using a source that doesn't
     // work anymore as the internal reference point.
     
-    if (((mapsource == MAPSOURCE_TERRA) || 
-         (mapsource == MAPSOURCE_TERRATOPO)) && user_scale != 0) {
-        // It's way too much of a kludge to muck with munging the scale around
-        if ((user_scale < 10) || (user_scale > 16)) {
-            fprintf(stderr, "FATAL: You must provide a scale with the -s "
-                    "option that is from 10 to 16\n");
-            exit(0);
-        }
-        fetch_scale = user_scale;
-        map_scale = user_scale = terrascales[(user_scale - 10)];
-    }
-
-    // Require the user to specify a scale between 2 and 15, then set
-    // {map,user}_scale to the cooresponding element in earthamapscales[].
-    if (mapsource == MAPSOURCE_EARTHAMAPS && user_scale != 0) {
-        if ((user_scale < 2) || (user_scale > 15)) {
-            fprintf(stderr, "FATAL: You must provide a scale with the -s "
-                    "option that is from 2 to 15\n");
-            exit(0);
-        }
-        fetch_scale = user_scale;
-        map_scale   = user_scale = earthamapscales[user_scale];
-    }
-
     if (ap_manuf_name != NULL) {
         char pathname[1024];
 
@@@@ -4181,8 +4105,9 @@@@ int main(int argc, char *argv[]) {
     }
 
     if (!usermap) {
-        snprintf(mapname, 1024, "map_%f_%f_%ld_%d_%d.gif", map_avg_lat, 
-                 map_avg_lon, map_scale, map_width, map_height);
+        snprintf(mapname, 1024, "map_%f_%f_%ld_%d_%d.%s", map_avg_lat, 
+                 map_avg_lon, map_scale, map_width, map_height,
+		 mapsource == MAPSOURCE_OSM ? "png" : "gif");
     }
 
     if (useroutmap == false)
@@@@ -4227,7 +4152,10 @@@@ int main(int argc, char *argv[]) {
             exit(1);
         }
 
-        if (mapsource == MAPSOURCE_MAPPOINT) {
+        if (mapsource == MAPSOURCE_MAPPOINT
+		|| mapsource == MAPSOURCE_TERRA
+		|| mapsource == MAPSOURCE_EARTHAMAPS
+		|| mapsource == MAPSOURCE_TERRATOPO) {
             fprintf(stderr, "The source you selected is known to be broken.  "
                     "Support remains for this source only if previously "
                     "downloaded maps are available, because the map vendor has "
@@@@ -4242,18 +4170,9 @@@@ int main(int argc, char *argv[]) {
             snprintf(url, 1024, url_template_mb, map_avg_lat, map_avg_lon, 
                      map_scale, map_width, map_height, 
                      metric ? "&DU=KM" : "");
-        } else if (mapsource == MAPSOURCE_TERRA) {
-            snprintf(url, 1024, url_template_ts, map_avg_lat, map_avg_lon, 
-                     fetch_scale, map_width, map_height);
-        } else if (mapsource == MAPSOURCE_TERRATOPO) {
-            snprintf(url, 1024, url_template_tt, map_avg_lat, map_avg_lon, 
-                     fetch_scale, map_width, map_height);
         } else if (mapsource == MAPSOURCE_TIGER) {
             snprintf(url, 1024, url_template_ti, map_avg_lat, map_avg_lon, 
                      (map_scale / 300000.0), map_width, map_height);
-        } else if (mapsource == MAPSOURCE_EARTHAMAPS) {
-            snprintf(url, 1024, url_template_em, mapname, map_avg_lat, 
-                     map_avg_lon, map_width, map_height, fetch_scale);
         } else if (mapsource == MAPSOURCE_EUEX) {
 	    fetch_scale = (long) (map_scale / 3950);
 	    char loc[8] = "USA0409";
@@@@ -4294,24 +4213,16 @@@@ int main(int argc, char *argv[]) {
 		printf("Map url: %s\n", url);
         printf("Fetching map...\n");
 
-        if (mapsource == MAPSOURCE_EARTHAMAPS) {
-            int retval	= system(url);
+        char geturl[1024];
+        snprintf(geturl, 1024, download_template, mapname, url);
+        if (system(geturl)!=0) {
+	    fprintf(stderr, "WARNING: failed to execute '%s'\n", geturl);
+	    exit(1);
+	}
 
-            if (retval != 0) {
-                fprintf(stderr, "Could not run %s: %s\n", url, strerror(retval));
-                exit(1);
-            }
-        } else {
-            char geturl[1024];
-            snprintf(geturl, 1024, download_template, url, mapname);
-            if (system(geturl)!=0) {
-	      fprintf(stderr, "WARNING: failed to execute '%s'\n", geturl);
-	      exit(1);
-	    }
-        }
-
         printf("Loading map into Imagemagick structures.\n");
         strcpy(img_info->filename, mapname);
+	ClearMagickException(&im_exception);
         img = ReadImage(img_info, &im_exception);
 
         if (img == (Image *) NULL) {
@


1.6
log
@let it build with clang: fix depends line, const correct char*,
typedef nonsense, and delete vs new[]
@
text
@d1 1
a1 1
$OpenBSD: patch-gpsmap_cc,v 1.5 2008/06/27 22:10:14 kili Exp $
a44 9
@@@@ -162,7 +162,7 @@@@ const uint8_t track_decay = 0x1F;
 const unsigned int horiz_throttle = 75000;
 
 // Image colors
-const char *netcolors[] = {
+const const char *netcolors[] = {
     "#000000",
     "#FF0000", "#FF0072", "#FF00E5", "#D400FF",
     "#5D00FF", "#0087FF", "#00F2FF", "#00FF94",
@


1.5
log
@
Update to 2008-05-R1.

Tests, feedback and corrections from Jim Razmus and sthen@@

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gpsmap_cc,v 1.4 2007/06/28 12:43:32 kili Exp $
d10 3
a12 2
--- gpsmap.cc.orig	Thu May  8 23:48:35 2008
+++ gpsmap.cc	Sat Jun 21 18:36:19 2008
d45 81
d192 20
@


1.4
log
@
Unbreak -gpsmap for 64 bit archs. Found by steven@@.
@
text
@d1 1
a1 1
$OpenBSD: patch-gpsmap_cc,v 1.3 2007/04/09 20:50:58 kili Exp $
d3 1
d5 4
a8 1
# Unbreak on 64bit archs (and just simplify).
d10 22
a31 3
--- gpsmap.cc.orig	Sat May 20 21:41:16 2006
+++ gpsmap.cc	Mon Jun 25 13:36:14 2007
@@@@ -99,8 +99,8 @@@@ const char url_template_em[] = "gpsmap-helper-earthama
d35 2
d44 3
a46 2
@@@@ -2242,11 +2242,8 @@@@ void DrawNetPower(vector<gps_network *> in_nets, Image
     pthread_attr_destroy(&attr);
d48 28
a75 7
     // Now wait for the threads to complete and come back
-    int thread_status;
     for (int t = 0; t < numthreads; t++) {
-        void *tmp;
-        pthread_join(mapthread[t], &tmp);
-	thread_status = reinterpret_cast<int>(tmp);
+        pthread_join(mapthread[t], NULL);
d77 126
a202 6
 #else
     // Run one instance of our "thread".  thread number 0, it should just crunch it all
@@@@ -4219,7 +4216,7 @@@@ int main(int argc, char *argv[]) {
             }
         } else {
             char geturl[1024];
d204 12
a215 4
+            snprintf(geturl, 1024, download_template, mapname, url);
             if (system(geturl)!=0) {
 	      fprintf(stderr, "WARNING: failed to execute '%s'\n", geturl);
 	      exit(1);
@


1.3
log
@
Update to 2007-01-R1b. Tested by many.

ok, robert@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gpsmap_cc,v 1.2 2006/11/01 21:13:19 kili Exp $
d4 1
d6 3
a8 3
--- gpsmap.cc.orig	Sat Aug 19 15:01:58 2006
+++ gpsmap.cc	Thu Dec 28 11:42:02 2006
@@@@ -99,8 +99,8 @@@@ const char url_template_em[] = "gpsmap-h
d19 14
a32 1
@@@@ -4219,7 +4219,7 @@@@ int main(int argc, char *argv[]) {
@


1.2
log
@
Update to 2006-04-R1, with some patches from the upstream kismet SVN.

While here, update my mail address and comment most of
the patch files.

Some WANTLIB spanking and ok, sturm@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gpsmap_cc,v 1.1 2005/10/07 14:13:57 bernd Exp $
a2 1
# New mapsource, from upstream SVN.
d5 3
a7 9
--- gpsmap.cc.orig	Wed Nov  2 22:16:07 2005
+++ gpsmap.cc	Sat Oct 21 12:42:56 2006
@@@@ -79,7 +79,8 @@@@ const char *config_base = "kismet.conf";
 #define MAPSOURCE_TIGER      3
 #define MAPSOURCE_EARTHAMAPS 4
 #define MAPSOURCE_TERRATOPO  5
-#define MAPSOURCE_MAX        5
+#define MAPSOURCE_EUEX	     6
+#define MAPSOURCE_MAX        6
d9 1
a9 5
 // Broken map sources...  Damn vendors changing.
 // Mappoint
@@@@ -96,9 +97,11 @@@@ const char url_template_ti[] = "http://t
 // Earthamaps need a perl helper script to get data because of cookies
 const char url_template_em[] = "gpsmap-helper-earthamaps %s %f %f %d %d %ld";
a12 2
+const char url_template_euex[] = "http://www.expedia.de/pub/agent.dll?qscr=mrdt&ID=3XNsF.&CenP=%f,%f&Lang=%s&Alti=%ld&Size=%d,%d&Offs=0.000000,0.000000&BCheck=1";
 
d15 1
a15 1
+
d18 1
a18 67
     70000, 75000, 80000, 85000, 90000, 95000, 100000, 125000, 150000, 200000, 
@@@@ -115,6 +118,12 @@@@ long int earthamapscales[] = {
     0, 0, 32393191, 16196595, 8098298, 4319092, 2159546, 1079773, 539887,
     215955, 107977, 53989, 26994, 14315, 7158, 3579, -1 };
 
+// Scales for Expedia
+long int euexscales[] = { 3950, 7900, 11850, 15800, 19750, 23700, 27650,
+	31600, 35550, 39500, 79000, 118500, 197500, 237000, 276500, 316000,
+	355500, 395000, 790000, 1580000, 237000, 3160000, 3950000, 19750000,
+	39500000, 47400000};
+
 // Decay from absolute blue for multiple tracks
 const uint8_t track_decay = 0x1F;
 // distance (in feet) before we throttle a network and discard it
@@@@ -1494,6 +1503,29 @@@@ int BestMapScale(long int *in_mapscale, 
         return -1;
     }
 
+    if (mapsource == MAPSOURCE_EUEX) {
+        for (int x = 0; euexscales[x] != -1; x++) {
+            calcxy(&mapx, &mapy, tlat, tlon, 
+                    (double) euexscales[x]/PIXELFACT, 
+                    map_avg_lat, map_avg_lon);
+            calcxy(&map2x, &map2y, blat, blon, 
+                    (double) euexscales[x]/PIXELFACT, 
+                    map_avg_lat, map_avg_lon);
+
+            if ((mapx < 0 || mapx > map_width || mapy < 0 || 
+                        mapy > map_height) ||
+                    (map2x < 0 || map2x > map_width || 
+                     map2y < 0 || map2y > map_height)) {
+                continue;
+            } else {
+                (*in_mapscale) = euexscales[x];
+                (*in_fetchscale) = x;
+                return 1;
+            }
+        }
+        return -1;
+    }
+
     if (mapsource == MAPSOURCE_EARTHAMAPS) {
         // Find how many scales we have
         int nscales;
@@@@ -3348,6 +3380,7 @@@@ int Usage(char* argv, int ec = 1) { 
            "                                  3 Tiger US Census (vector)\n"
            "                                  4 EarthaMaps (vector, UNAVAILABLE)\n"
            "                                  5 TerraServer (topo)\n"
+	   "                                  6 Expedia EU (vector)\n"
            "  -D, --keep-gif                 Keep the downloaded map\n"
            "  -V, --version                  GPSMap version\n"
            "\nImage options\n"
@@@@ -4163,6 +4196,13 @@@@ int main(int argc, char *argv[]) {
         } else if (mapsource == MAPSOURCE_EARTHAMAPS) {
             snprintf(url, 1024, url_template_em, mapname, map_avg_lat, 
                      map_avg_lon, map_width, map_height, fetch_scale);
+        } else if (mapsource == MAPSOURCE_EUEX) {
+	    fetch_scale = (long) (map_scale / 3950);
+	    char loc[8] = "USA0409";
+	    if (map_avg_lat > (-30.0))
+		strcpy(loc,"EUR0809");
+	    snprintf(url, 1024, url_template_euex, map_avg_lat, map_avg_lon,
+		 loc, fetch_scale, map_width, map_height);
         }
 
         printf("Map url: %s\n", url);
@@@@ -4177,8 +4217,11 @@@@ int main(int argc, char *argv[]) {
a22 1
-            system(geturl);
d24 3
a26 7
+            if (system(geturl)!=0) {
+	      fprintf(stderr, "WARNING: failed to execute '%s'\n", geturl);
+	      exit(1);
+	    }
         }
 
         printf("Loading map into Imagemagick structures.\n");
@


1.1
log
@New subpackage: kismet-gpsmap (suggestion and initial work by marcm@@,
some dependency fixes by MAINTAINER Matthias Kilian)

Provide some working examples for OpenBSD in kismet.conf and use some
better logdir defaults. (suggested by henning@@)

ok robert@@
@
text
@d1 19
a19 4
$OpenBSD$
--- gpsmap.cc.orig	Tue Aug 16 03:22:51 2005
+++ gpsmap.cc	Sat Sep 10 12:50:18 2005
@@@@ -97,7 +97,7 @@@@ const char url_template_ti[] = "http://t
d22 1
a22 1
 // Download template for sources that we fetch using wget
d24 3
d28 1
a28 1
 
d31 67
a97 1
@@@@ -4177,7 +4177,7 @@@@ int main(int argc, char *argv[]) {
d102 1
d104 4
a107 1
             system(geturl);
d110 1
@

