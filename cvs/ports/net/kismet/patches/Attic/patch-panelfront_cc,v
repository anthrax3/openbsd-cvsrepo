head	1.5;
access;
symbols
	OPENBSD_4_1:1.4.0.2
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	robert:1.1.1.1
	robert_20050627:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2007.04.09.20.50.58;	author kili;	state dead;
branches;
next	1.4;

1.4
date	2006.11.01.21.13.20;	author kili;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.16.20.35.59;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.06.19.11.47;	author sturm;	state Exp;
branches;
next	1.1;

1.1
date	2005.07.27.21.37.26;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.07.27.21.37.26;	author robert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@
Update to 2007-01-R1b. Tested by many.

ok, robert@@
@
text
@$OpenBSD: patch-panelfront_cc,v 1.4 2006/11/01 21:13:20 kili Exp $

# Make this work on archs without apm. Fix battery display.

--- panelfront.cc.orig	Wed Jun 29 20:04:43 2005
+++ panelfront.cc	Fri Oct 20 13:42:27 2006
@@@@ -22,7 +22,7 @@@@
 #include <sys/types.h>
 #include <dirent.h>
 
-#ifdef SYS_OPENBSD
+#if defined(SYS_OPENBSD) && defined(HAVE_MACHINE_APMVAR_H)
 #include <machine/apmvar.h>
 #endif
 
@@@@ -1398,16 +1398,14 @@@@ int PanelFront::Tick() {
             int ac_line_status, battery_status, flag, percentage, apm_time;
             char units[32];
 
-            if ((apm = fopen("/proc/apm", "r")) == NULL) {
+            if ((apm = fopen("/proc/apm", "r")) == NULL ||
+		fgets(buf, 128, apm) == NULL) {
                 bat_available = 0;
                 bat_ac = 0;
                 bat_percentage = 0;
                 bat_time = 0;
                 bat_charging = 0;
             } else {
-                fgets(buf, 128, apm);
-                fclose(apm);
-
                 sscanf(buf, "%*s %*d.%*d %*x %x %x %x %d%% %d %s\n", &ac_line_status,
                        &battery_status, &flag, &percentage, &apm_time, units);
 
@@@@ -1436,6 +1434,8 @@@@ int PanelFront::Tick() {
                 if (!strncmp(units, "min", 32))
                     bat_time *= 60;
             }
+	    if (apm!=NULL)
+	      fclose(apm);
         } else {
             DIR *batteries, *ac_adapters;
             struct dirent *this_battery, *this_adapter;
@@@@ -1535,7 +1535,7 @@@@ int PanelFront::Tick() {
                 closedir(batteries);
         }
 
-#elif defined(SYS_OPENBSD)
+#elif defined(SYS_OPENBSD) && defined(HAVE_MACHINE_APMVAR_H)
 
 		struct apm_power_info api;
 		int apmfd;
@@@@ -1561,7 +1561,7 @@@@ int PanelFront::Tick() {
 			}
 			if (bat_available == 1) {
 				bat_percentage = (int)api.battery_life;
-				bat_time = (int)api.minutes_left;
+				bat_time = (int)api.minutes_left * 60;
 				if (api.battery_state == APM_BATT_CHARGING) {
 					bat_ac = 1;
 					bat_charging = 1;
@


1.4
log
@
Update to 2006-04-R1, with some patches from the upstream kismet SVN.

While here, update my mail address and comment most of
the patch files.

Some WANTLIB spanking and ok, sturm@@
@
text
@d1 1
a1 1
$OpenBSD: patch-panelfront_cc,v 1.3 2005/08/16 20:35:59 robert Exp $
@


1.3
log
@SECURITY:
upgrade to version 200508R1;
This fixes several potential security problems, so everyone
should upgrade immidiately.

From Bernd Ahlers <bernd@@ba-net.org>, Matthias Kilian <kili@@outback.escape.de>
ok pvalchev@@
@
text
@d1 6
a6 3
$OpenBSD: patch-panelfront_cc,v 1.2 2005/08/06 19:11:47 sturm Exp $
--- panelfront.cc.orig	Tue Aug 16 03:22:51 2005
+++ panelfront.cc	Tue Aug 16 10:35:14 2005
d16 28
@


1.2
log
@build on archs w/o apm

from maintainer
@
text
@d1 3
a3 3
$OpenBSD: patch-panelfront_cc,v 1.1.1.1 2005/07/27 21:37:26 robert Exp $
--- panelfront.cc.orig	Wed Jul 27 12:56:28 2005
+++ panelfront.cc	Wed Jul 27 12:56:45 2005
d13 1
a13 1
@@@@ -1535,7 +1535,7 @@@@
d22 1
a22 1
@@@@ -1561,7 +1561,7 @@@@
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d4 18
@


1.1.1.1
log
@Import of kismet-2005-07-R1a.
Kismet is an 802.11 layer2 wireless network detector, sniffer, and
intrusion detection system.  Kismet will work with any wireless card
which supports raw monitoring (rfmon) mode, and can sniff 802.11b,
802.11a, and 802.11g traffic.

Kismet identifies networks by passively collecting packets and detecting
standard named networks, detecting (and given time, decloaking) hidden
networks, and infering the presence of nonbeaconing networks via data
traffic.

from Matthias Kilian <kili@@outback.escape.de> and from a lot of
other people.
@
text
@@
