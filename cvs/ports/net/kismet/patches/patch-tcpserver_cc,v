head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.05.17.16.03.32;	author espie;	state Exp;
branches;
next	1.2;
commitid	hHiQ8fuG4Uo8aIy3;

1.2
date	2007.11.10.21.10.42;	author kili;	state dead;
branches;
next	1.1;

1.1
date	2007.04.09.20.50.58;	author kili;	state Exp;
branches;
next	;


desc
@@


1.3
log
@let it build with clang: fix depends line, const correct char*,
typedef nonsense, and delete vs new[]
@
text
@$OpenBSD$

Index: tcpserver.cc
--- tcpserver.cc.orig
+++ tcpserver.cc
@@@@ -567,7 +567,7 @@@@ int TcpServer::SendMainProtocols(int in_fd, int in_ref
     return SendToClient(in_fd, in_ref, (void *) &protocol_map);
 }
 
-int TcpServer::RegisterProtocol(string in_header, int in_required, char **in_fields,
+int TcpServer::RegisterProtocol(string in_header, int in_required, const char **in_fields,
                                 int (*in_printer)(PROTO_PARMS),
                                 void (*in_enable)(int)) {
     // First, see if we're already registered and return a -1 if we are.  You can't
@


1.2
log
@
Update to kismet-2007-10-R1.

Tested by quite some people (after some pushing by sthen@@).

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-tcpserver_cc,v 1.1 2007/04/09 20:50:58 kili Exp $
d3 12
a14 52
# Always use int for file descriptors.

--- tcpserver.cc.orig	Mon Nov 13 06:21:20 2006
+++ tcpserver.cc	Wed Jan 17 23:19:53 2007
@@@@ -114,9 +114,9 @@@@ int TcpServer::Setup(unsigned int in_max
 // Make one useable fd_set from the fd's flagged for system-wide monitoring
 // and from the fd's flagged locally for clients connecting to us.  This lets
 // us do 1 big unified select().
-unsigned int TcpServer::MergeSet(fd_set in_set, unsigned int in_max,
+int TcpServer::MergeSet(fd_set in_set, int in_max,
                                  fd_set *out_set, fd_set *outw_set) {
-    unsigned int max;
+    int max;
 
     FD_ZERO(out_set);
     FD_ZERO(outw_set);
@@@@ -128,7 +128,7 @@@@ unsigned int TcpServer::MergeSet(fd_set 
         max_fd = max;
     }
 
-	for (unsigned int x = 0; x <= max; x++) {
+	for (int x = 0; x <= max; x++) {
 		if (FD_ISSET(x, &in_set) || FD_ISSET(x, &server_fds)) {
 			FD_SET(x, out_set);
 		}
@@@@ -155,7 +155,7 @@@@ int TcpServer::Poll(fd_set& in_rset, fd_
 
 // Accept an incoming connection
 int TcpServer::Accept() {
-    unsigned int new_fd;
+    int new_fd;
     struct sockaddr_in client_addr;
 #ifdef HAVE_SOCKLEN_T
     socklen_t client_len;
@@@@ -325,7 +325,7 @@@@ int TcpServer::SendToClient(int in_fd, i
 
 int TcpServer::SendToAll(int in_refnum, const void *in_data) {
     int nsent = 0;
-    for (unsigned int x = serv_fd; x <= max_fd; x++) {
+    for (int x = serv_fd; x <= max_fd; x++) {
         if (!FD_ISSET(x, &client_fds))
             continue;
 
@@@@ -659,7 +659,7 @@@@ void TcpServer::DelProtocolClient(int in
 int TcpServer::FetchNumClients() {
     int num = 0;
 
-    for (unsigned int x = serv_fd + 1; x <= max_fd; x++) {
+    for (int x = serv_fd + 1; x <= max_fd; x++) {
         if (FD_ISSET(x, &client_fds))
             num++;
     }
@


1.1
log
@
Update to 2007-01-R1b. Tested by many.

ok, robert@@
@
text
@d1 1
a1 1
$OpenBSD$
@

