head	1.2;
access;
symbols
	OPENBSD_4_0:1.1.1.1.0.6
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.4
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.2
	OPENBSD_3_8_BASE:1.1.1.1
	robert:1.1.1.1
	robert_20050627:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2006.11.20.20.54.08;	author bernd;	state dead;
branches;
next	1.1;

1.1
date	2005.07.27.21.37.26;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.07.27.21.37.26;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Convert to new MULTI_PACKAGES framework.

ok kili@@
@
text
@@@comment $OpenBSD: PLIST,v 1.1 2005/07/27 21:37:26 robert Exp $
@@newgroup _kismet:547
@@newuser _kismet:547:_kismet:daemon:Kismet WLAN detector:/nonexistent:/sbin/nologin
bin/kismet
bin/kismet_client
bin/kismet_drone
bin/kismet_server
@@man man/man1/kismet.1
@@man man/man1/kismet_drone.1
@@man man/man5/kismet.conf.5
@@man man/man5/kismet_drone.conf.5
@@man man/man5/kismet_ui.conf.5
share/doc/kismet/
share/doc/kismet/README
share/examples/kismet/
share/examples/kismet/ap_manuf
@@mode 770
@@sample ${CONFDIR}/
@@mode
@@sample ${CONFDIR}/ap_manuf
share/examples/kismet/client_manuf
@@sample ${CONFDIR}/client_manuf
share/examples/kismet/kismet.conf
@@sample ${CONFDIR}/kismet.conf
share/examples/kismet/kismet_drone.conf
@@sample ${CONFDIR}/kismet_drone.conf
share/examples/kismet/kismet_ui.conf
@@sample ${CONFDIR}/kismet_ui.conf
share/kismet/
share/kismet/wav/
share/kismet/wav/alert.wav
share/kismet/wav/junk_traffic.wav
share/kismet/wav/new_network.wav
share/kismet/wav/traffic.wav
@@mode 770
@@owner _kismet
@@group _kismet
@@sample /var/log/kismet/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@comment $OpenBSD$
@


1.1.1.1
log
@Import of kismet-2005-07-R1a.
Kismet is an 802.11 layer2 wireless network detector, sniffer, and
intrusion detection system.  Kismet will work with any wireless card
which supports raw monitoring (rfmon) mode, and can sniff 802.11b,
802.11a, and 802.11g traffic.

Kismet identifies networks by passively collecting packets and detecting
standard named networks, detecting (and given time, decloaking) hidden
networks, and infering the presence of nonbeaconing networks via data
traffic.

from Matthias Kilian <kili@@outback.escape.de> and from a lot of
other people.
@
text
@@
