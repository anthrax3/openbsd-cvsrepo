head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.20
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.16
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.18
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.14
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.12
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2011.09.18.08.32.56;	author bluhm;	state Exp;
branches;
next	;


desc
@@


1.1
log
@When using the dnet command-line tool, the fragment offset should
be limited to 0xfff8 but the actual limit was 0x1fff.  Add a missing
shift to support fragments for big IP packets.
ok naddy
@
text
@$OpenBSD$
http://code.google.com/p/libdnet/issues/detail?id=17

--- test/dnet/aton.c.orig	Mon Oct 14 17:42:10 2002
+++ test/dnet/aton.c	Thu Jan 20 03:26:57 2011
@@@@ -86,7 +86,7 @@@@ off_aton(char *string, uint16_t *off)
 	} else {
 		i = strtol(string, &p, 10);
 		if (*string == '\0' || (*p != '\0' && *p != '+') ||
-		    i > IP_OFFMASK)
+		    i > (IP_OFFMASK << 3))
 			return (-1);
 		*off = htons(((*p == '+') ? IP_MF : 0) | (i >> 3));
 	}
@
