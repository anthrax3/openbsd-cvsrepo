head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.18
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.16
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.05.10.11.40.02;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2012.11.16.17.05.13;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Do not issue SIOCSIFNETMASK before SIOCSIFADDR, it is not needed and will
fail after upcoming change.

ok sthen@@
@
text
@$OpenBSD: patch-src_intf_c,v 1.1 2012/11/16 17:05:13 sthen Exp $

Do not issue an SIOCSIFNETMASK before SIOCSIFADDR it is not
needed even if the XXX says otherwise.

--- src/intf.c.orig	Mon Jan  9 08:09:49 2006
+++ src/intf.c	Thu Apr 11 16:16:02 2013
@@@@ -66,7 +66,13 @@@@
 /* XXX - superset of ifreq, for portable SIOC{A,D}IFADDR */
 struct dnet_ifaliasreq {
 	char		ifra_name[IFNAMSIZ];
-	struct sockaddr ifra_addr;
+	union {
+		struct sockaddr ifrau_addr;
+		int		ifrau_align;
+		} ifra_ifrau;
+#ifndef ifra_addr
+#define ifra_addr	ifra_ifrau.ifrau_addr
+#endif
 	struct sockaddr ifra_brdaddr;
 	struct sockaddr ifra_mask;
 	int		ifra_cookie;	/* XXX - IRIX!@@#$ */
@@@@ -281,7 +287,7 @@@@ intf_set(intf_t *intf, const struct intf_entry *entry)
 	}
 	/* Set interface address. */
 	if (entry->intf_addr.addr_type == ADDR_TYPE_IP) {
-#ifdef BSD
+#if defined(BSD) && !defined(__OpenBSD__)
 		/* XXX - why must this happen before SIOCSIFADDR? */
 		if (addr_btos(entry->intf_addr.addr_bits,
 		    &ifr.ifr_addr) == 0) {
@


1.1
log
@cope with net/if.h struct changes.
@
text
@d1 7
a7 3
$OpenBSD$
--- src/intf.c.orig	Wed Nov 14 04:15:30 2012
+++ src/intf.c	Wed Nov 14 04:16:33 2012
d23 9
@

