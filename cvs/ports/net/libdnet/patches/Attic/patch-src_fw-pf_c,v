head	1.7;
access;
symbols
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2005.05.22.05.34.52;	author mjc;	state dead;
branches;
next	1.6;

1.6
date	2004.07.11.06.47.46;	author sturm;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.08.00.59.33;	author jsyn;	state dead;
branches;
next	1.4;

1.4
date	2003.01.27.17.07.51;	author naddy;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.21.17.55.31;	author dhartmei;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.02.12.28.49;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.20.10.29.16;	author jsyn;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update to 1.10 and take maintainer as discuess with
previous maintainer.

ok pvalchev@@
death threats msf@@
@
text
@$OpenBSD: patch-src_fw-pf_c,v 1.6 2004/07/11 06:47:46 sturm Exp $
--- src/fw-pf.c.orig	Sun Jul 11 08:37:15 2004
+++ src/fw-pf.c	Sun Jul 11 08:37:30 2004
@@@@ -32,7 +32,7 @@@@
  *     $OpenBSD: patch-src_fw-pf_c,v 1.6 2004/07/11 06:47:46 sturm Exp $
  *     $OpenBSD: patch-src_fw-pf_c,v 1.6 2004/07/11 06:47:46 sturm Exp $
  */
-#if defined(DIOCRINABEGIN)
+#if defined(DIOCXBEGIN)
 # define PFRA_ADDR(ra)	(ra)->addr.v.a.addr.v4.s_addr
 # define PFRA_MASK(ra)	(ra)->addr.v.a.mask.v4.s_addr
 # define pfioc_changerule	pfioc_rule
@


1.6
log
@deal with changes introduced in revision 1.197 of pfvar.h

fixes build
@
text
@d1 1
a1 1
$OpenBSD$
d5 2
a6 2
  *     $OpenBSD: pfvar.h,v 1.102 2002/11/23 05:16:58 mcbride Exp $
  *     $OpenBSD: pfvar.h,v 1.68 2002/04/24 18:10:25 dhartmei Exp $
@


1.5
log
@update to libdnet-1.7; from Srebrenko Sehic <haver@@insecure.dk>,
give MAINTAINER
@
text
@d1 12
a12 123
$OpenBSD: patch-src_fw-pf_c,v 1.4 2003/01/27 17:07:51 naddy Exp $
--- src/fw-pf.c.orig	Tue May 14 08:54:30 2002
+++ src/fw-pf.c	Mon Jan 27 17:40:39 2003
@@@@ -26,9 +26,29 @@@@
 
 #include "dnet.h"
 
-#ifdef PF_RULE_LABEL_SIZE
-/* XXX */
-#define addr		addr.addr
+/*
+ * XXX - cope with moving pf API
+ *     $OpenBSD: patch-src_fw-pf_c,v 1.4 2003/01/27 17:07:51 naddy Exp $
+ *     $OpenBSD: patch-src_fw-pf_c,v 1.4 2003/01/27 17:07:51 naddy Exp $
+ *     $OpenBSD: patch-src_fw-pf_c,v 1.4 2003/01/27 17:07:51 naddy Exp $
+ */
+#if defined(DIOCRINABEGIN)
+# define PFRA_ADDR(ra)	(ra)->addr.v.a.addr.v4.s_addr
+# define PFRA_MASK(ra)	(ra)->addr.v.a.mask.v4.s_addr
+# define pfioc_changerule	pfioc_rule
+# define oldrule	rule
+# define newrule	rule
+#elif defined(DIOCBEGINADDRS)
+# define PFRA_ADDR(ra)	(ra)->addr.addr.v4.s_addr
+# define PFRA_MASK(ra)	(ra)->addr.mask.v4.s_addr
+#elif defined(PFRULE_FRAGMENT)
+/* OpenBSD 3.2 */
+# define PFRA_ADDR(ra)	(ra)->addr.addr.v4.s_addr
+# define PFRA_MASK(ra)	(ra)->mask.v4.s_addr
+#else
+/* OpenBSD 3.1 */
+# define PFRA_ADDR(ra)	(ra)->addr.v4.s_addr
+# define PFRA_MASK(ra)	(ra)->mask.v4.s_addr
 #endif
 
 struct fw_handle {
@@@@ -47,11 +67,11 @@@@ fr_to_pr(const struct fw_rule *fr, struc
 	pr->proto = fr->fw_proto;
 
 	pr->af = AF_INET;
-	pr->src.addr.v4.s_addr = fr->fw_src.addr_ip;
-	addr_btom(fr->fw_src.addr_bits, &pr->src.mask.v4.s_addr, IP_ADDR_LEN);
+	PFRA_ADDR(&pr->src) = fr->fw_src.addr_ip;
+	addr_btom(fr->fw_src.addr_bits, &(PFRA_MASK(&pr->src)), IP_ADDR_LEN);
 	
-	pr->dst.addr.v4.s_addr = fr->fw_dst.addr_ip;
-	addr_btom(fr->fw_dst.addr_bits, &pr->dst.mask.v4.s_addr, IP_ADDR_LEN);
+	PFRA_ADDR(&pr->dst) = fr->fw_dst.addr_ip;
+	addr_btom(fr->fw_dst.addr_bits, &(PFRA_MASK(&pr->dst)), IP_ADDR_LEN);
 	
 	switch (fr->fw_proto) {
 	case IP_PROTO_ICMP:
@@@@ -102,12 +122,12 @@@@ pr_to_fr(const struct pf_rule *pr, struc
 		return (-1);
 	
 	fr->fw_src.addr_type = ADDR_TYPE_IP;
-	addr_mtob(&pr->src.mask.v4.s_addr, IP_ADDR_LEN, &fr->fw_src.addr_bits);
-	fr->fw_src.addr_ip = pr->src.addr.v4.s_addr;
+	addr_mtob(&(PFRA_MASK(&pr->src)), IP_ADDR_LEN, &fr->fw_src.addr_bits);
+	fr->fw_src.addr_ip = PFRA_ADDR(&pr->src);
 	
  	fr->fw_dst.addr_type = ADDR_TYPE_IP;
-	addr_mtob(&pr->dst.mask.v4.s_addr, IP_ADDR_LEN, &fr->fw_dst.addr_bits);
-	fr->fw_dst.addr_ip = pr->dst.addr.v4.s_addr;
+	addr_mtob(&(PFRA_MASK(&pr->dst)), IP_ADDR_LEN, &fr->fw_dst.addr_bits);
+	fr->fw_dst.addr_ip = PFRA_ADDR(&pr->dst);
 	
 	switch (fr->fw_proto) {
 	case IP_PROTO_ICMP:
@@@@ -155,9 +175,8 @@@@ fw_add(fw_t *fw, const struct fw_rule *r
 	struct pfioc_changerule pcr;
 	
 	assert(fw != NULL && rule != NULL);
-
+	memset(&pcr, 0, sizeof(pcr));
 	fr_to_pr(rule, &pcr.newrule);
-	
 	pcr.action = PF_CHANGE_ADD_TAIL;
 	
 	return (ioctl(fw->fd, DIOCCHANGERULE, &pcr));
@@@@ -169,9 +188,8 @@@@ fw_delete(fw_t *fw, const struct fw_rule
 	struct pfioc_changerule pcr;
 	
 	assert(fw != NULL && rule != NULL);
-
+	memset(&pcr, 0, sizeof(pcr));
 	fr_to_pr(rule, &pcr.oldrule);
-	
 	pcr.action = PF_CHANGE_REMOVE;
 
 	return (ioctl(fw->fd, DIOCCHANGERULE, &pcr));
@@@@ -183,24 +201,23 @@@@ fw_loop(fw_t *fw, fw_handler callback, v
 	struct pfioc_rule pr;
 	struct fw_rule fr;
 	uint32_t n, max;
-	int ret;
-	
+	int ret = 0;
+
+	memset(&pr, 0, sizeof(pr));
 	if (ioctl(fw->fd, DIOCGETRULES, &pr) < 0)
 		return (-1);
 	
 	for (n = 0, max = pr.nr; n < max; n++) {
 		pr.nr = n;
 		
-		if (ioctl(fw->fd, DIOCGETRULE, &pr) < 0)
-			return (-1);
-		
+		if ((ret = ioctl(fw->fd, DIOCGETRULE, &pr)) < 0)
+			break;
 		if (pr_to_fr(&pr.rule, &fr) < 0)
 			continue;
-		
 		if ((ret = callback(&fr, arg)) != 0)
-			return (ret);
+			break;
 	}
-	return (0);
+	return (ret);
 }
 
 fw_t *
@


1.4
log
@Update to 1.5, fix pf issues from libdnet's own cvs.
From: Srebrenko Sehic <haver@@insecure.dk>
@
text
@d1 1
a1 1
$OpenBSD$
d13 3
a15 3
+ *     $OpenBSD: pfvar.h,v 1.130 2003/01/09 10:40:45 cedric Exp $
+ *     $OpenBSD: pfvar.h,v 1.102 2002/11/23 05:16:58 mcbride Exp $
+ *     $OpenBSD: pfvar.h,v 1.68 2002/04/24 18:10:25 dhartmei Exp $
@


1.3
log
@adjust to pf changes (again)
@
text
@d1 37
a37 3
--- src/fw-pf.c.orig	Tue Jan 21 18:28:49 2003
+++ src/fw-pf.c	Tue Jan 21 18:30:33 2003
@@@@ -42,11 +42,11 @@@@
d43 2
a44 2
+	pr->src.addr.v.a.addr.v4.s_addr = fr->fw_src.addr_ip;
+	addr_btom(fr->fw_src.addr_bits, &pr->src.addr.v.a.mask.v4.s_addr, IP_ADDR_LEN);
d48 2
a49 2
+	pr->dst.addr.v.a.addr.v4.s_addr = fr->fw_dst.addr_ip;
+	addr_btom(fr->fw_dst.addr_bits, &pr->dst.addr.v.a.mask.v4.s_addr, IP_ADDR_LEN);
d53 1
a53 1
@@@@ -97,12 +97,12 @@@@
d59 2
a60 2
+	addr_mtob(&pr->src.addr.v.a.mask.v4.s_addr, IP_ADDR_LEN, &fr->fw_src.addr_bits);
+	fr->fw_src.addr_ip = pr->src.addr.v.a.addr.v4.s_addr;
d65 2
a66 2
+	addr_mtob(&pr->dst.addr.v.a.mask.v4.s_addr, IP_ADDR_LEN, &fr->fw_dst.addr_bits);
+	fr->fw_dst.addr_ip = pr->dst.addr.v.a.addr.v4.s_addr;
d70 2
a71 6
@@@@ -147,11 +147,12 @@@@
 int
 fw_add(fw_t *fw, const struct fw_rule *rule)
 {
-	struct pfioc_changerule pcr;
+	struct pfioc_rule pcr;
d74 1
a74 2
 
-	fr_to_pr(rule, &pcr.newrule);
d76 2
a77 2
+	fr_to_pr(rule, &pcr.rule);
 	
d80 3
a82 6
@@@@ -161,11 +162,12 @@@@
 int
 fw_delete(fw_t *fw, const struct fw_rule *rule)
 {
-	struct pfioc_changerule pcr;
+	struct pfioc_rule pcr;
d85 1
a85 2
 
-	fr_to_pr(rule, &pcr.oldrule);
d87 2
a88 2
+	fr_to_pr(rule, &pcr.rule);
 	
d91 4
a94 1
@@@@ -180,6 +182,7 @@@@
d96 4
a99 2
 	int ret;
 	
d104 20
@


1.2
log
@sync with -current pf; from dhartmei@@
@
text
@d1 3
a3 4
$OpenBSD$
--- src/fw-pf.c.orig	Sun Jan 20 22:23:28 2002
+++ src/fw-pf.c	Thu Jan  2 13:18:49 2003
@@@@ -42,11 +42,11 @@@@ fr_to_pr(const struct fw_rule *fr, struc
d9 2
a10 2
+	pr->src.addr.addr.v4.s_addr = fr->fw_src.addr_ip;
+	addr_btom(fr->fw_src.addr_bits, &pr->src.addr.mask.v4.s_addr, IP_ADDR_LEN);
d14 2
a15 2
+	pr->dst.addr.addr.v4.s_addr = fr->fw_dst.addr_ip;
+	addr_btom(fr->fw_dst.addr_bits, &pr->dst.addr.mask.v4.s_addr, IP_ADDR_LEN);
d19 1
a19 1
@@@@ -97,12 +97,12 @@@@ pr_to_fr(const struct pf_rule *pr, struc
d25 2
a26 2
+	addr_mtob(&pr->src.addr.mask.v4.s_addr, IP_ADDR_LEN, &fr->fw_src.addr_bits);
+	fr->fw_src.addr_ip = pr->src.addr.addr.v4.s_addr;
d31 2
a32 2
+	addr_mtob(&pr->dst.addr.mask.v4.s_addr, IP_ADDR_LEN, &fr->fw_dst.addr_bits);
+	fr->fw_dst.addr_ip = pr->dst.addr.addr.v4.s_addr;
d36 1
a36 1
@@@@ -147,11 +147,12 @@@@ fw_open(void)
d51 1
a51 1
@@@@ -161,11 +162,12 @@@@ fw_add(fw_t *fw, const struct fw_rule *r
d66 1
a66 1
@@@@ -180,6 +182,7 @@@@ fw_loop(fw_t *fw, fw_handler callback, v
@


1.1
log
@update to libdnet-1.4, plus patch for pf_addr_wrap change in pfvar.h

note that your /usr/include/net/pfvar.h must be >= 1.68, or this will
not work -- ports-current tracks -current.

tag-team with Srebrenko Sehic <haver@@insecure.dk>
@
text
@d2 4
a5 4
--- src/fw-pf.c.orig	Sun Jan 20 13:23:28 2002
+++ src/fw-pf.c	Mon May 13 23:54:30 2002
@@@@ -25,6 +25,11 @@@@
 #include <unistd.h>
d7 38
a44 6
 #include "dnet.h"
+
+#ifdef PF_RULE_LABEL_SIZE
+/* XXX */
+#define addr		addr.addr
+#endif
d46 29
a74 2
 struct fw_handle {
 	int	fd;
@

