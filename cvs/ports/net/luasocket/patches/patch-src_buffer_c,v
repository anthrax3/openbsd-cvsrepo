head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.16
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.14
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.12
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.8
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.16
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.14
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.12
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.10
	OPENBSD_5_0:1.3.0.8
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.1.0.16
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.14
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.12
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.10
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.8
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.6
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.11.25.15.27.56;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.06.13.46.58;	author jolan;	state Exp;
branches;
next	1.2;

1.2
date	2009.08.22.20.28.40;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.25.15.09.44;	author pedro;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to luasocket-3.0rc1 to unbreak lua52 flavor.
Reported by tedu@@
ok jasper@@
@
text
@$OpenBSD: patch-src_buffer_c,v 1.3 2009/09/06 13:46:58 jolan Exp $
--- src/buffer.c.orig	Fri Nov 15 10:51:53 2013
+++ src/buffer.c	Fri Nov 15 10:54:02 2013
@@@@ -31,7 +31,7 @@@@ static int sendraw(p_buffer buf, const char *data, siz
 /*-------------------------------------------------------------------------*\
 * Initializes module
 \*-------------------------------------------------------------------------*/
-int buffer_open(lua_State *L) {
+int ls_buffer_open(lua_State *L) {
     (void) L;
     return 0;
 }
@@@@ -39,7 +39,7 @@@@ int buffer_open(lua_State *L) {
 /*-------------------------------------------------------------------------*\
 * Initializes C structure 
 \*-------------------------------------------------------------------------*/
-void buffer_init(p_buffer buf, p_io io, p_timeout tm) {
+void ls_buffer_init(p_buffer buf, p_io io, p_timeout tm) {
     buf->first = buf->last = 0;
     buf->io = io;
     buf->tm = tm;
@@@@ -50,7 +50,7 @@@@ void buffer_init(p_buffer buf, p_io io, p_timeout tm) 
 /*-------------------------------------------------------------------------*\
 * object:getstats() interface
 \*-------------------------------------------------------------------------*/
-int buffer_meth_getstats(lua_State *L, p_buffer buf) {
+int ls_buffer_meth_getstats(lua_State *L, p_buffer buf) {
     lua_pushnumber(L, (lua_Number) buf->received);
     lua_pushnumber(L, (lua_Number) buf->sent);
     lua_pushnumber(L, timeout_gettime() - buf->birthday);
@@@@ -60,7 +60,7 @@@@ int buffer_meth_getstats(lua_State *L, p_buffer buf) {
 /*-------------------------------------------------------------------------*\
 * object:setstats() interface
 \*-------------------------------------------------------------------------*/
-int buffer_meth_setstats(lua_State *L, p_buffer buf) {
+int ls_buffer_meth_setstats(lua_State *L, p_buffer buf) {
     buf->received = (long) luaL_optnumber(L, 2, (lua_Number) buf->received); 
     buf->sent = (long) luaL_optnumber(L, 3, (lua_Number) buf->sent); 
     if (lua_isnumber(L, 4)) buf->birthday = timeout_gettime() - lua_tonumber(L, 4);
@@@@ -71,7 +71,7 @@@@ int buffer_meth_setstats(lua_State *L, p_buffer buf) {
 /*-------------------------------------------------------------------------*\
 * object:send() interface
 \*-------------------------------------------------------------------------*/
-int buffer_meth_send(lua_State *L, p_buffer buf) {
+int ls_buffer_meth_send(lua_State *L, p_buffer buf) {
     int top = lua_gettop(L);
     int err = IO_DONE;
     size_t size = 0, sent = 0;
@@@@ -106,7 +106,7 @@@@ int buffer_meth_send(lua_State *L, p_buffer buf) {
 /*-------------------------------------------------------------------------*\
 * object:receive() interface
 \*-------------------------------------------------------------------------*/
-int buffer_meth_receive(lua_State *L, p_buffer buf) {
+int ls_buffer_meth_receive(lua_State *L, p_buffer buf) {
     int err = IO_DONE, top = lua_gettop(L);
     luaL_Buffer b;
     size_t size;
@@@@ -157,7 +157,7 @@@@ int buffer_meth_receive(lua_State *L, p_buffer buf) {
 /*-------------------------------------------------------------------------*\
 * Determines if there is any data in the read buffer
 \*-------------------------------------------------------------------------*/
-int buffer_isempty(p_buffer buf) {
+int ls_buffer_isempty(p_buffer buf) {
     return buf->first >= buf->last;
 }
 
@@@@ -252,7 +252,7 @@@@ static int recvline(p_buffer buf, luaL_Buffer *b) {
 static void buffer_skip(p_buffer buf, size_t count) {
     buf->received += count;
     buf->first += count;
-    if (buffer_isempty(buf)) 
+    if (ls_buffer_isempty(buf)) 
         buf->first = buf->last = 0;
 }
 
@@@@ -264,7 +264,7 @@@@ static int buffer_get(p_buffer buf, const char **data,
     int err = IO_DONE;
     p_io io = buf->io;
     p_timeout tm = buf->tm;
-    if (buffer_isempty(buf)) {
+    if (ls_buffer_isempty(buf)) {
         size_t got;
         err = io->recv(io->ctx, buf->data, BUF_SIZE, &got, tm);
         buf->first = 0;
@


1.3
log
@update to 2.0.2
@
text
@d1 4
a4 4
$OpenBSD: patch-src_buffer_c,v 1.2 2009/08/22 20:28:40 robert Exp $
--- src/buffer.c.orig	Sun Oct 14 23:21:05 2007
+++ src/buffer.c	Sun Sep  6 08:17:20 2009
@@@@ -33,7 +33,7 @@@@ static int sendraw(p_buffer buf, const char *data, siz
d13 1
a13 1
@@@@ -41,7 +41,7 @@@@ int buffer_open(lua_State *L) {
d19 1
a19 1
 	buf->first = buf->last = 0;
d22 1
a22 1
@@@@ -52,7 +52,7 @@@@ void buffer_init(p_buffer buf, p_io io, p_timeout tm) 
d28 2
a29 2
     lua_pushnumber(L, buf->received);
     lua_pushnumber(L, buf->sent);
d31 1
a31 1
@@@@ -62,7 +62,7 @@@@ int buffer_meth_getstats(lua_State *L, p_buffer buf) {
d37 2
a38 2
     buf->received = (long) luaL_optnumber(L, 2, buf->received); 
     buf->sent = (long) luaL_optnumber(L, 3, buf->sent); 
d40 1
a40 1
@@@@ -73,7 +73,7 @@@@ int buffer_meth_setstats(lua_State *L, p_buffer buf) {
d58 1
a58 1
@@@@ -149,7 +149,7 @@@@ int buffer_meth_receive(lua_State *L, p_buffer buf) {
d67 1
a67 1
@@@@ -244,7 +244,7 @@@@ static int recvline(p_buffer buf, luaL_Buffer *b) {
d76 1
a76 1
@@@@ -256,7 +256,7 @@@@ static int buffer_get(p_buffer buf, const char **data,
@


1.2
log
@luasocket defines buffer_init(); which is common enough to be defined
elsewhere and it is defined in mod_magnet, so you end up with a SIGSEGV.
So rename buffer_* funcs to ls_buffer_*.
@
text
@d1 3
a3 3
$OpenBSD: patch-src_buffer_c,v 1.1 2005/11/25 15:09:44 pedro Exp $
--- src/buffer.c.orig	Sat Aug 22 22:18:38 2009
+++ src/buffer.c	Sat Aug 22 22:19:02 2009
d47 3
a49 3
 #ifdef LUASOCKET_DEBUG
     p_timeout tm = timeout_markstart(buf->tm);
@@@@ -108,7 +108,7 @@@@ int buffer_meth_send(lua_State *L, p_buffer buf) {
d56 3
a58 3
 #ifdef LUASOCKET_DEBUG
     p_timeout tm = timeout_markstart(buf->tm);
@@@@ -153,7 +153,7 @@@@ int buffer_meth_receive(lua_State *L, p_buffer buf) {
d67 1
a67 1
@@@@ -243,7 +243,7 @@@@ static int recvline(p_buffer buf, luaL_Buffer *b) {
d76 1
a76 1
@@@@ -255,7 +255,7 @@@@ static int buffer_get(p_buffer buf, const char **data,
@


1.1
log
@luasocket 2.0, okay jolan@@
@
text
@d1 6
a6 4
$OpenBSD$
--- src/buffer.c.orig	Tue Nov 22 19:19:38 2005
+++ src/buffer.c	Wed Nov 23 21:50:51 2005
@@@@ -75,7 +75,9 @@@@ int buffer_meth_setstats(lua_State *L, p
d8 38
a45 1
 int buffer_meth_send(lua_State *L, p_buffer buf) {
d47 1
a47 1
+#ifdef LUASOCKET_DEBUG
d49 3
a51 5
+#endif
     int err = IO_DONE;
     size_t size = 0, sent = 0;
     const char *data = luaL_checklstring(L, 2, &size);
@@@@ -108,7 +110,9 @@@@ int buffer_meth_send(lua_State *L, p_buf
d53 2
a54 1
 int buffer_meth_receive(lua_State *L, p_buffer buf) {
d56 1
a56 1
+#ifdef LUASOCKET_DEBUG
d58 27
a84 4
+#endif
     luaL_Buffer b;
     size_t size;
     const char *part = luaL_optlstring(L, 3, "", &size);
@

