head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.14
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.11.25.15.27.56;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to luasocket-3.0rc1 to unbreak lua52 flavor.
Reported by tedu@@
ok jasper@@
@
text
@$OpenBSD$
--- src/serial.c.orig	Fri Jun 14 13:27:32 2013
+++ src/serial.c	Fri Nov 15 11:22:38 2013
@@@@ -6,6 +6,7 @@@@
 
 #include "lua.h"
 #include "lauxlib.h"
+#include "luasocket.h"
 
 #include "auxiliar.h"
 #include "socket.h"
@@@@ -90,22 +91,22 @@@@ LUASOCKET_API int luaopen_socket_serial(lua_State *L) 
 \*-------------------------------------------------------------------------*/
 static int meth_send(lua_State *L) {
     p_unix un = (p_unix) auxiliar_checkclass(L, "serial{client}", 1);
-    return buffer_meth_send(L, &un->buf);
+    return ls_buffer_meth_send(L, &un->buf);
 }
 
 static int meth_receive(lua_State *L) {
     p_unix un = (p_unix) auxiliar_checkclass(L, "serial{client}", 1);
-    return buffer_meth_receive(L, &un->buf);
+    return ls_buffer_meth_receive(L, &un->buf);
 }
 
 static int meth_getstats(lua_State *L) {
     p_unix un = (p_unix) auxiliar_checkclass(L, "serial{client}", 1);
-    return buffer_meth_getstats(L, &un->buf);
+    return ls_buffer_meth_getstats(L, &un->buf);
 }
 
 static int meth_setstats(lua_State *L) {
     p_unix un = (p_unix) auxiliar_checkclass(L, "serial{client}", 1);
-    return buffer_meth_setstats(L, &un->buf);
+    return ls_buffer_meth_setstats(L, &un->buf);
 }
 
 /*-------------------------------------------------------------------------*\
@@@@ -126,7 +127,7 @@@@ static int meth_setfd(lua_State *L) {
 
 static int meth_dirty(lua_State *L) {
     p_unix un = (p_unix) auxiliar_checkgroup(L, "serial{any}", 1);
-    lua_pushboolean(L, !buffer_isempty(&un->buf));
+    lua_pushboolean(L, !ls_buffer_isempty(&un->buf));
     return 1;
 }
 
@@@@ -183,6 +184,6 @@@@ static int global_create(lua_State *L) {
     io_init(&un->io, (p_send) socket_write, (p_recv) socket_read, 
             (p_error) socket_ioerror, &un->sock);
     timeout_init(&un->tm, -1, -1);
-    buffer_init(&un->buf, &un->io, &un->tm);
+    ls_buffer_init(&un->buf, &un->io, &un->tm);
     return 1;
 }
@
