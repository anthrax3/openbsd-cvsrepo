head	1.4;
access;
symbols
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2013.04.18.20.29.08;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2012.12.08.18.42.43;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2012.03.31.10.51.47;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2012.03.20.20.56.26;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to quagga 0.99.22, merged from diffs from myself and Brad. Also:
- replace MESSAGE with some @@sample'd config files
- install rc.d scripts
- multicast code still ported from older version (new one needs RFC3678)
@
text
@$OpenBSD: patch-bgpd_bgp_open_c,v 1.3 2012/12/08 18:42:43 brad Exp $

DoS in bgp_capability_orf(). CVE-2012-1820

--- bgpd/bgp_open.c.orig	Sat Dec  8 03:33:55 2012
+++ bgpd/bgp_open.c	Sat Dec  8 03:35:17 2012
@@@@ -232,7 +232,7 @@@@ bgp_capability_orf_entry (struct peer *peer, struct ca
     }
   
   /* validate number field */
-  if (sizeof (struct capability_orf_entry) + (entry.num * 2) > hdr->length)
+  if (sizeof (struct capability_orf_entry) + (entry.num * 2) != hdr->length)
     {
       zlog_info ("%s ORF Capability entry length error,"
                  " Cap length %u, num %u",
@@@@ -336,28 +336,6 @@@@ bgp_capability_orf_entry (struct peer *peer, struct ca
 }
 
 static int
-bgp_capability_orf (struct peer *peer, struct capability_header *hdr)
-{
-  struct stream *s = BGP_INPUT (peer);
-  size_t end = stream_get_getp (s) + hdr->length;
-  
-  assert (stream_get_getp(s) + sizeof(struct capability_orf_entry) <= end);
-  
-  /* We must have at least one ORF entry, as the caller has already done
-   * minimum length validation for the capability code - for ORF there must
-   * at least one ORF entry (header and unknown number of pairs of bytes).
-   */
-  do
-    {
-      if (bgp_capability_orf_entry (peer, hdr) == -1)
-        return -1;
-    } 
-  while (stream_get_getp(s) + sizeof(struct capability_orf_entry) < end);
-  
-  return 0;
-}
-
-static int
 bgp_capability_restart (struct peer *peer, struct capability_header *caphdr)
 {
   struct stream *s = BGP_INPUT (peer);
@@@@ -575,7 +553,7 @@@@ bgp_capability_parse (struct peer *peer, size_t length
             break;
           case CAPABILITY_CODE_ORF:
           case CAPABILITY_CODE_ORF_OLD:
-            if (bgp_capability_orf (peer, &caphdr))
+            if (bgp_capability_orf_entry (peer, &caphdr))
               return -1;
             break;
           case CAPABILITY_CODE_RESTART:
@


1.3
log
@Fix a BGP DoS issue in bgp_capability_orf(). CVE-2012-1820

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to quagga 0.99.20.1 rolling in the security fixes which we had as
separate patches.

multicast support changed in 0.99.20 and not fully tested, no response to
my ports@@ call for testing, so if this breaks things send me a mail with
details.
@
text
@d1 1
a1 1
$OpenBSD: patch-bgpd_bgp_open_c,v 1.1 2012/03/20 20:56:26 sthen Exp $
d3 1
a3 1
CVE-2012-0255 - Quagga bgpd DoS on malformed OPEN message
d5 4
a8 16
--- bgpd/bgp_open.c.orig	Mon Sep 26 15:45:54 2011
+++ bgpd/bgp_open.c	Tue Mar 20 20:05:06 2012
@@@@ -433,13 +433,20 @@@@ bgp_capability_restart (struct peer *peer, struct capa
 static as_t
 bgp_capability_as4 (struct peer *peer, struct capability_header *hdr)
 {
+  SET_FLAG (peer->cap, PEER_CAP_AS4_RCV);
+  
+  if (hdr->length != CAPABILITY_CODE_AS4_LEN)
+    {
+      zlog_err ("%s AS4 capability has incorrect data length %d",
+                peer->host, hdr->length);
+      return 0;
+    }
+  
   as_t as4 = stream_getl (BGP_INPUT(peer));
d10 7
a16 6
   if (BGP_DEBUG (as4, AS4))
     zlog_debug ("%s [AS4] about to set cap PEER_CAP_AS4_RCV, got as4 %u",
                 peer->host, as4);
-  SET_FLAG (peer->cap, PEER_CAP_AS4_RCV);
-  
   return as4;
d19 35
a53 10
@@@@ -701,9 +708,6 @@@@ peek_for_as4_capability (struct peer *peer, u_char len
 
 	      if (hdr.code == CAPABILITY_CODE_AS4)
 	        {
-	          if (hdr.length != CAPABILITY_CODE_AS4_LEN)
-	            goto end;
-                  
 	          if (BGP_DEBUG (as4, AS4))
 	            zlog_info ("[AS4] found AS4 capability, about to parse");
 	          as4 = bgp_capability_as4 (peer, &hdr);
@


1.1
log
@add SECURITY patches from quagga 0.99.20.1

CVE-2012-0249 - Quagga ospfd DoS on malformed LS-Update packet
CVE-2012-0250 - Quagga ospfd DoS on malformed Network-LSA data
CVE-2012-0255 - Quagga bgpd DoS on malformed OPEN message
@
text
@d1 1
a1 1
$OpenBSD$
@

