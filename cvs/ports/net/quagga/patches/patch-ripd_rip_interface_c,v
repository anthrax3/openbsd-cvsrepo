head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.16
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.12
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.14
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.01.04.00.24.10;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@revert multicast changes in last upstream release, they do not work on OS
which require the interface IP address for IP_{ADD,DROP}_MEMBERSHIP

reported by Raphael Mazelier
@
text
@$OpenBSD$

Revert 69bf3a39; does not work on at least (Open/Net)BSD.
This can be put back if we get RFC3678 support.

--- ripd/rip_interface.c.orig	Tue Apr 17 14:56:26 2012
+++ ripd/rip_interface.c	Thu Jan  3 00:24:26 2013
@@@@ -78,8 +78,9 @@@@ ipv4_multicast_join (int sock, 
 {
   int ret;
 
-  ret = setsockopt_ipv4_multicast (sock,
+  ret = setsockopt_multicast_ipv4 (sock, 
 				   IP_ADD_MEMBERSHIP, 
+				   ifa, 
 				   group.s_addr, 
 				   ifindex); 
 
@@@@ -99,8 +100,9 @@@@ ipv4_multicast_leave (int sock, 
 {
   int ret;
 
-  ret = setsockopt_ipv4_multicast (sock,
+  ret = setsockopt_multicast_ipv4 (sock, 
 				   IP_DROP_MEMBERSHIP, 
+				   ifa, 
 				   group.s_addr, 
 				   ifindex);
 
@@@@ -136,13 +138,18 @@@@ rip_interface_new (void)
 void
 rip_interface_multicast_set (int sock, struct connected *connected)
 {
+  struct in_addr addr;
+  
   assert (connected != NULL);
   
-  if (setsockopt_ipv4_multicast_if (sock, connected->ifp->ifindex) < 0)
+  addr = CONNECTED_ID(connected)->u.prefix4;
+
+  if (setsockopt_multicast_ipv4 (sock, IP_MULTICAST_IF, addr, 0, 
+                                 connected->ifp->ifindex) < 0) 
     {
       zlog_warn ("Can't setsockopt IP_MULTICAST_IF on fd %d to "
-		 "ifindex %d for interface %s",
-		 sock, connected->ifp->ifindex,
+		 "source address %s for interface %s",
+		 sock, inet_ntoa(addr),
 		 connected->ifp->name);
     }
   
@
