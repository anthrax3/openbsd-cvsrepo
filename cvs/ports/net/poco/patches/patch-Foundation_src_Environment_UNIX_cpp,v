head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.12
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.8
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.12
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.10
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.8
	OPENBSD_5_0:1.1.1.1.0.6
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.4
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	sebastia_20100728:1.1.1.1
	sebastia:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.08.16.10.05.55;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2013.03.19.23.13.50;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.19.22.17.07;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2010.07.28.18.13.01;	author sebastia;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.07.28.18.13.01;	author sebastia;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to poco 1.4.6p1, tested by sebastia@@ on pre-64bit-time_t, probably
fixes this with 64bit time_t (though further testing needed)
@
text
@$OpenBSD: patch-Foundation_src_Environment_UNIX_cpp,v 1.1.1.1 2010/07/28 18:13:01 sebastia Exp $

prefer sysconf; we don't have sysctlbyname.
https://github.com/pocoproject/poco/issues/130

--- Foundation/src/Environment_UNIX.cpp.orig	Wed Mar  6 19:45:52 2013
+++ Foundation/src/Environment_UNIX.cpp	Tue Mar 19 17:14:38 2013
@@@@ -133,7 +133,11 @@@@ std::string EnvironmentImpl::nodeNameImpl()
 
 unsigned EnvironmentImpl::processorCountImpl()
 {
-#if defined(POCO_OS_FAMILY_BSD)
+#if defined(_SC_NPROCESSORS_ONLN)
+	int count = sysconf(_SC_NPROCESSORS_ONLN);
+	if (count <= 0) count = 1;
+	return static_cast<int>(count);
+#elif defined(POCO_OS_FAMILY_BSD)
 	unsigned count;
 	std::size_t size = sizeof(count);
 	if (sysctlbyname("hw.ncpu", &count, &size, 0, 0))
@@@@ -142,10 +146,6 @@@@ unsigned EnvironmentImpl::processorCountImpl()
 		return count;
 #elif POCO_OS == POCO_OS_HPUX
 	return pthread_num_processors_np();
-#elif defined(_SC_NPROCESSORS_ONLN)
-	int count = sysconf(_SC_NPROCESSORS_ONLN);
-	if (count <= 0) count = 1;
-	return static_cast<int>(count);
 #else
 	return 1;
 #endif
@


1.3
log
@Fix net/poco following the pcre update (broken for 2 weeks) by using
a patch from Gentoo.

While there clean up Makefile a bit (mixed whitespace format ugliness) and
simplify a patch (just use upstream's existing sysconf code, rather than
workaround the unportable use of sysctlbyname).
@
text
@d1 1
a1 1
$OpenBSD: patch-Foundation_src_Environment_UNIX_cpp,v 1.2 2013/03/19 22:17:07 sthen Exp $
d6 3
a8 3
--- Foundation/src/Environment_UNIX.cpp.orig	Thu Dec 16 05:43:25 2010
+++ Foundation/src/Environment_UNIX.cpp	Tue Mar 19 22:19:21 2013
@@@@ -128,7 +128,11 @@@@ std::string EnvironmentImpl::nodeNameImpl()
d21 1
a21 1
@@@@ -137,10 +141,6 @@@@ unsigned EnvironmentImpl::processorCountImpl()
@


1.2
log
@regen patches to fix line numbers
@
text
@d1 1
a1 1
$OpenBSD: patch-Foundation_src_Environment_UNIX_cpp,v 1.1.1.1 2010/07/28 18:13:01 sebastia Exp $
d3 2
a4 1
fix use of unavailable sysctlbyname
d7 3
a9 2
+++ Foundation/src/Environment_UNIX.cpp	Tue Mar 19 22:16:26 2013
@@@@ -129,12 +129,26 @@@@ std::string EnvironmentImpl::nodeNameImpl()
d12 6
a17 14
 #if defined(POCO_OS_FAMILY_BSD)
+#  if defined(__OpenBSD__)
+	int mib[2];
+	int ncpus = 0;
+	size_t len = 0;
+	mib[0] = CTL_HW;
+	mib[1] = HW_NCPU;	/* Get the number of CPU's present */
+	len = sizeof(ncpus);
+	if (sysctl(mib, 2, &ncpus, &len, NULL, 0) != 0) {
+		printf("Couldn't determine hw.ncpu.\n");
+		return 1; /* we have at least 1 cpu... */
+	}
+	return ncpus;
+#  else
d21 1
a21 2
 		return 1;
 	else
a22 1
+#  endif
d25 7
a31 1
 #elif defined(_SC_NPROCESSORS_ONLN)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- Foundation/src/Environment_UNIX.cpp.orig	Mon Jul 19 12:13:06 2010
+++ Foundation/src/Environment_UNIX.cpp	Mon Jul 19 12:22:52 2010
@@@@ -128,12 +128,26 @@@@ std::string EnvironmentImpl::nodeNameImpl()
@


1.1.1.1
log
@Import poco
POCO C++ libraries for network based applications

C++ class libraries for network-centric, portable applications, 
integrated perfectly with the C++ Standard Library. Includes 
network protocols (Sockets, HTTP, FTP, SMTP, POP3, etc.) and an 
XML parser.

With a lot of feedback from landry@@ 
Finally OK from dcoppa@@

@
text
@@
