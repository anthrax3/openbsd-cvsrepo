head	1.3;
access;
symbols
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2012.08.13.14.07.01;	author naddy;	state dead;
branches;
next	1.2;

1.2
date	2012.08.12.17.33.04;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.08.20.38.00;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@0.98.9 does not require access to private libpng data structures any longer
ok maintainer, jasper@@
@
text
@$OpenBSD: patch-utils_TkCximage_src_CxImage_ximapng_cpp,v 1.2 2012/08/12 17:33:04 jasper Exp $
--- utils/TkCximage/src/CxImage/ximapng.cpp.orig	Tue May 15 22:28:38 2012
+++ utils/TkCximage/src/CxImage/ximapng.cpp	Sat Jul 14 14:59:06 2012
@@@@ -15,7 +15,7 @@@@
 void CxImagePNG::ima_png_error(png_struct *png_ptr, char *message)
 {
 	strcpy(info.szLastError,message);
-	longjmp(png_jmpbuf(png_ptr), 1);
+	png_longjmp(png_ptr, 1);
 }
 ////////////////////////////////////////////////////////////////////////////////
 #if CXIMAGE_SUPPORT_DECODE
@@@@ -80,7 +80,7 @@@@ bool CxImagePNG::Decode(CxFile *hFile)
 		head.biWidth = png_get_image_width(png_ptr, info_ptr);
 		head.biHeight= png_get_image_height(png_ptr, info_ptr);
 		info.dwType = CXIMAGE_FORMAT_PNG;
-		longjmp(png_jmpbuf(png_ptr), 1);
+		png_longjmp(png_ptr, 1);
 	}
 
 	/* calculate new number of channels */
@@@@ -101,7 +101,7 @@@@ bool CxImagePNG::Decode(CxFile *hFile)
 		break;
 	default:
 		strcpy(info.szLastError,"unknown PNG color type");
-		longjmp(png_jmpbuf(png_ptr), 1);
+		png_longjmp(png_ptr, 1);
 	}
 
 	//find the right pixel depth used for cximage
@@@@ -114,7 +114,7 @@@@ bool CxImagePNG::Decode(CxFile *hFile)
 	if (!Create(png_get_image_width(png_ptr, info_ptr),
                     png_get_image_height(png_ptr, info_ptr),
                     pixel_depth, CXIMAGE_FORMAT_PNG)){
-		longjmp(png_jmpbuf(png_ptr), 1);
+		png_longjmp(png_ptr, 1);
 	}
 
 	/* get metrics */
@@@@ -198,7 +198,7 @@@@ bool CxImagePNG::Decode(CxFile *hFile)
 	}
 
 	// <vho> - handle cancel
-	if (info.nEscape) longjmp(png_jmpbuf(png_ptr), 1);
+	if (info.nEscape) png_longjmp(png_ptr, 1);
 
 	// row_bytes is the width x number of channels x (bit-depth / 8)
 	row_pointers = new BYTE[png_get_rowbytes(png_ptr,info_ptr) + 8];
@@@@ -221,7 +221,7 @@@@ bool CxImagePNG::Decode(CxFile *hFile)
 		do	{
 
 			// <vho> - handle cancel
-			if (info.nEscape) longjmp(png_jmpbuf(png_ptr), 1);
+			if (info.nEscape) png_longjmp(png_ptr, 1);
 
 #if CXIMAGE_SUPPORT_ALPHA	// <vho>
 			if (AlphaIsValid()) {
@


1.2
log
@- update to 0.98.9

from Azwaw OUSADOU (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Fix build with png-1.5.
All fixes by yours truly.
@
text
@d2 2
a3 5

Fix build with png-1.5.

--- utils/TkCximage/src/CxImage/ximapng.cpp.orig	Thu Jul  7 15:24:08 2011
+++ utils/TkCximage/src/CxImage/ximapng.cpp	Thu Jul  7 15:42:35 2011
d8 1
a8 1
-	longjmp(png_ptr->jmpbuf, 1);
a12 9
@@@@ -62,7 +62,7 @@@@ bool CxImagePNG::Decode(CxFile *hFile)
     /* Set error handling if you are using the setjmp/longjmp method (this is
     * the normal method of doing things with libpng).  REQUIRED unless you
     * set up your own error handlers in the png_create_read_struct() earlier. */
-	if (setjmp(png_ptr->jmpbuf)) {
+	if (setjmp(png_jmpbuf(png_ptr))) {
 		/* Free all of the memory associated with the png_ptr and info_ptr */
 		delete [] row_pointers;
 		png_destroy_read_struct(&png_ptr, &info_ptr, (png_infopp)NULL);
d14 2
a15 2
 		head.biWidth = info_ptr->width;
 		head.biHeight= info_ptr->height;
d17 1
a17 1
-		longjmp(png_ptr->jmpbuf, 1);
d26 1
a26 1
-		longjmp(png_ptr->jmpbuf, 1);
d31 5
a35 5
@@@@ -111,7 +111,7 @@@@ bool CxImagePNG::Decode(CxFile *hFile)
 	if (channels >= 3) pixel_depth=24;
 
 	if (!Create(info_ptr->width, info_ptr->height, pixel_depth, CXIMAGE_FORMAT_PNG)){
-		longjmp(png_ptr->jmpbuf, 1);
d40 1
a40 1
@@@@ -207,7 +207,7 @@@@ bool CxImagePNG::Decode(CxFile *hFile)
d44 1
a44 1
-	if (info.nEscape) longjmp(png_ptr->jmpbuf, 1);
d48 2
a49 2
 	row_pointers = new BYTE[info_ptr->rowbytes + 8];
@@@@ -230,7 +230,7 @@@@ bool CxImagePNG::Decode(CxFile *hFile)
d53 1
a53 1
-			if (info.nEscape) longjmp(png_ptr->jmpbuf, 1);
a57 9
@@@@ -362,7 +362,7 @@@@ bool CxImagePNG::Encode(CxFile *hFile)
    /* Set error handling.  REQUIRED if you aren't supplying your own
     * error hadnling functions in the png_create_write_struct() call.
     */
-	if (setjmp(png_ptr->jmpbuf)){
+	if (setjmp(png_jmpbuf(png_ptr))){
 		/* If we get here, we had a problem reading the file */
 		if (info_ptr->palette) free(info_ptr->palette);
 		png_destroy_write_struct(&png_ptr,  (png_infopp)&info_ptr);
@

