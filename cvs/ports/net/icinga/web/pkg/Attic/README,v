head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	sthen20110328:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2012.10.12.17.59.25;	author rpe;	state dead;
branches;
next	1.3;

1.3
date	2012.05.17.11.06.33;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2011.06.02.13.41.39;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.28.14.06.08;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.03.28.14.06.08;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@icinga:
- attach icinga-web to build

icinga-core:
- bump REVISION for -main, -cgi and -ido
- remove CFGDIR, MAKE_FLAGS from Makefile which are relics
- replace /var/www with ${PREFIX-cgi}
- add instructions for icinga-web to README
- choose mysql by default

icinga-web:
- bump REVISION
- remove README, all instructions are in the icinga-core README
- remove comments about w.i.p
- choose mysql by default
- tell configure where to find icinga binary, icinga.cfg and the
  icinga objects dir
- add icinga, icinga-idoutils and bash to RUN_DEPENDS
- patch shells scripts to use the correct path for bash
- patch databases.xml.in to have both DBs enabled by default

with help and ok from sthen aja
@
text
@$OpenBSD: README,v 1.3 2012/05/17 11:06:33 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Connect to the database as an administrative user, create the
icinga_web user and database, grant privileges and import the default
schema.

Example for MySQL:

$ myqsl -u root -p
[...]
SQL> CREATE DATABASE icinga_web;
SQL> GRANT USAGE ON *.* TO 'icinga_web'@@'localhost' IDENTIFIED BY 'icinga_web_password';
SQL> GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, INDEX ON icinga_web.* TO 'icinga_web'@@'localhost';
SQL> FLUSH PRIVILEGES;
SQL> \u icinga_web;
SQL> \. ${PREFIX}/etc/schema/mysql.sql



${PREFIX}/app/config/databases.xml
${PREFIX}/etc/conf.d/databases.xml ?!?!
        Change the credentials for your database connection
	N.B. app/config/databases.xml entries for icinga_web *and* icinga db's

....???.....
${PREFIX}/app/modules/Web/config/module.xml
        Go to the appkit.factories section and change the path and the
        credentials for the icinga-api

default
                User: root
                Pass: password




@


1.3
log
@sync, still not enabled by default though
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.2 2011/06/02 13:41:39 ajacoutot Exp $
@


1.2
log
@Add a consistent header that substitutes FULLPKGNAME for the READMEs.

ok jasper@@ sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1.1.1 2011/03/28 14:06:08 sthen Exp $
d7 10
a16 1
SQL> GRANT USAGE ON *.* TO 'icinga_web'@@'localhost' IDENTIFIED BY 'icinga_web';
d19 3
d23 3
a25 1
app/config/databases.xml
d27 1
d29 2
a30 1
app/modules/Web/config/module.xml
d37 2
@


1.1
log
@Initial revision
@
text
@d1 5
a5 1
$OpenBSD$
@


1.1.1.1
log
@Import ports/net/icinga (with -I !, so the 'core' directory doesn't
become cvs-food). See the README file for information about migrating
from Nagios with minimal config changes.

The icinga-web API-backed user interface is a work in progress
and not yet linked to the build; the core program and classic web
interface are perfectly usable.

Comments/ok from pea@@, thanks for testing!

-- -- --
Icinga monitors network resources such as servers, routers, switches,
applications and services and notifies administrators or responsible
persons. It's a fork of Nagios and supports its extensive pool of
monitoring plug-ins. Current status information, historical logs
and reports can all be accessed via a web browser.
-- -- --
@
text
@@
