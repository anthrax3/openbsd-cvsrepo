head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.8
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.6
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2016.02.02.01.29.05;	author sthen;	state Exp;
branches;
next	1.1;
commitid	4rlK6pnnwabuUN4Z;

1.1
date	2015.11.16.20.30.34;	author sthen;	state Exp;
branches;
next	;
commitid	QAgG6YJbVIsIcAYm;


desc
@@


1.2
log
@Remove patches from the icingaweb2 package that were hacking around the
mismatch between chrooted and non-chrooted paths (there are both CLI
scripts and a web app; both need to refer to the same paths and as well
as being complicated, the patches weren't quite working correctly,
as noticed by sebastia@@).

Now you must setup a symlink "/var/www/var/www -> .." instead as
described in the new version of the pkg-readme, allowing icingaweb2 to
always use /var/www paths whether inside or outside the jail.

Note: Existing users of this package will need to create that symlink too.
@
text
@$OpenBSD: README,v 1.1 2015/11/16 20:30:34 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Web User Interface
==================

The main Icinga 2 program should be configured first. Several features
are required for use with Icinga Web 2: either an "ido" database module
or "livestatus", and also "command". Consult Icinga documentation
about using "icinga2 feature enable" to do this, for configuration
details, database schema, etc.

The majority of Icinga Web 2 configuration is web-based and simple,
but a few things will need to be setup FIRST, in particular to cope
with the use of a chroot jail for OpenBSD webservers and PHP.

- OpenBSD's PHP packages use the Suhosin extension. Add the following
to ${SYSCONFDIR}/php-${MODPHP_VERSION}.ini:

   suhosin.executor.include.whitelist = zend.view

This is needed otherwise Suhosin will block "zend.view://" pseudo-URLs
from being used with PHP's "include" function.

- To cope with the chroot jail normally used with OpenBSD's PHP/web
servers, create a symlink:

   # mkdir -p /var/www/var
   # ln -s .. /var/www/var/www 
   # ls -l /var/www/var/www 
   lrwxr-xr-x  1 root  daemon  2 Feb  2 01:01 /var/www/var/www -> ..

(Icinga-web2 has CLI scripts which are run outside the chroot jail,
and PHP webpages which are run inside the jail; this allows paths like
"/var/www/icinga-web2" to work in both cases).

- If using php-fpm, configure it to run scripts as the _icingaweb2
user, and set the /tmp directory. You may add this to ${SYSCONFDIR}/php-fpm.conf:

   [icingaweb2]
   user = _icingaweb2
   group = _icingaweb2
   listen = ${PREFIX}/run/php-fpm-icingaweb2.sock
   listen.owner = www
   listen.group = www
   listen.mode = 0660
   pm = dynamic
   pm.max_children = 20
   pm.start_servers = 4
   pm.min_spare_servers = 2
   pm.max_spare_servers = 5
   chroot = /var/www
   env[TMP] = /icinga-web2/tmp
   env[TMPDIR] = /icinga-web2/tmp

(If instead of php-fpm you use Apache with mod_php, you will need to
add the userid running PHP scripts to the _icingaweb2 group).

- Configure your webserver to pass requests to icingaweb2's front
controller. An example for nginx (remember to "rcctl reload nginx"
after adding), using the above php-fpm section:

   location ~ ^/icingaweb2/index\.php(.*)$ {
       fastcgi_pass   unix:run/php-fpm-icingaweb2.sock;
       fastcgi_index index.php;
       include fastcgi_params;
       fastcgi_param SCRIPT_FILENAME /icinga-web2/public/index.php;
       fastcgi_param ICINGAWEB_CONFIGDIR /etc/icingaweb2;
       fastcgi_param REMOTE_USER $remote_user;
   }

   location ~ ^/icingaweb2(.+)? {
       alias /var/www/icinga-web2/public;
       index index.php;
       try_files $1 $uri $uri/ /icingaweb2/index.php$is_args$args;
   }

Using icingacli, create the config directory and a token to allow setup:

   # ${PREFIX}/icinga-web2/bin/icingacli setup config directory --group _icingaweb2
   # ${PREFIX}/icinga-web2/bin/icingacli setup token create

Open the web interface http://localhost/icingaweb2/. Paste in the token
that was displayed on-screen in the above step and proceed to the web-based
part of the configuration.
@


1.1
log
@Icinga Web 2 v2.1.0
@
text
@d1 1
a1 1
$OpenBSD: README-main,v 1.10 2015/07/07 14:44:59 sthen Exp $
d17 1
a17 1
but a few things will need to be setup first, in particular to cope
d20 2
a21 2
OpenBSD's PHP packages use the Suhosin extension. Permit zend.view://
inclusions by adding the following to ${SYSCONFDIR}/php-${MODPHP_VERSION}.ini:
d25 17
a41 1
For users of php-fpm, you may add this to ${SYSCONFDIR}/php-fpm.conf:
d62 3
a64 3
Your webserver will need to be configured to pass requests across
to icingaweb2's front controller. An example for nginx (remember to
"rcctl reload nginx" after adding), using the above php-fpm section:
d81 1
a81 3
Create a helper symlink (/icinga-web2 -> ${PREFIX}/www/icinga-web2) so that
icingacli can locate its modules from outside of the chroot jail, and use
icingacli to create the config directory and a token to allow setup:
d83 1
a83 2
   # ln -s /var/www/icinga-web2 /icinga-web2
   # ${PREFIX}/icinga-web2/bin/icingacli setup config directory --group _icingaweb2;
@

