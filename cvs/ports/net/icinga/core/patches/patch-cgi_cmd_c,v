head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.4
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.6
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3;
locks; strict;
comment	@# @;


1.5
date	2017.02.07.21.40.06;	author sthen;	state Exp;
branches;
next	1.4;
commitid	iQN16kzb5VyI2vSI;

1.4
date	2015.07.15.20.10.58;	author sthen;	state Exp;
branches
	1.4.6.1;
next	1.3;
commitid	hO5LZV7HnUgk3UjN;

1.3
date	2015.01.16.18.07.53;	author sthen;	state Exp;
branches;
next	1.2;
commitid	q2NJvo81Vp2JBe8l;

1.2
date	2011.07.01.16.57.41;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2011.06.28.06.34.33;	author sthen;	state Exp;
branches;
next	;

1.4.6.1
date	2017.02.07.21.40.55;	author sthen;	state Exp;
branches;
next	;
commitid	r8TFQ9HiWpm0NKrT;


desc
@@


1.5
log
@update to icinga 1.14.0

security fixes (also affecting nagios; icinga 1.x is the old nagios-derived
branch, whereas 2.x is all new) -

* Bug #13709: CVE-2016-9566: Root priviledge escalation during log file opening
* Bug #10453: Icinga Classic-UI 1.13.3 and older are vulnerable to XSS - CVE-2015-8010

notable changes -

* Classic UI: Remove attribute based authorization (cgiauth.cfg is not parsed
any more)
* IDO: Remove deprecated config options
@
text
@$OpenBSD: patch-cgi_cmd_c,v 1.4 2015/07/15 20:10:58 sthen Exp $
--- cgi/cmd.c.orig	Thu Dec 22 21:40:50 2016
+++ cgi/cmd.c	Tue Feb  7 21:30:12 2017
@@@@ -2671,7 +2671,7 @@@@ static int cmd_submitf(int id, const char *fmt, ...) {
 
 	command = extcmd_get_name(id);
 
-	len = snprintf(cmd, sizeof(cmd) - 1, "[%lu] %s;", time(NULL), command);
+	len = snprintf(cmd, sizeof(cmd) - 1, "[%lld] %s;", (long long)time(NULL), command);
 
 	if (len < 0 || len >= sizeof(cmd))
 		return ERROR;
@@@@ -2821,7 +2821,7 @@@@ int commit_command(int cmd) {
 			if (commands[x].host_name == NULL)
 				continue;
 			if (is_authorized[x])
-				submit_result[x] = cmd_submitf(cmd, "%s;%lu", commands[x].host_name, notification_time);
+				submit_result[x] = cmd_submitf(cmd, "%s;%lld", commands[x].host_name, (long long)notification_time);
 		}
 		break;
 
@@@@ -2830,7 +2830,7 @@@@ int commit_command(int cmd) {
 			if (commands[x].host_name == NULL)
 				continue;
 			if (is_authorized[x])
-				submit_result[x] = cmd_submitf(cmd, "%s;%s;%lu", commands[x].host_name, commands[x].description, notification_time);
+				submit_result[x] = cmd_submitf(cmd, "%s;%s;%lld", commands[x].host_name, commands[x].description, (long long)notification_time);
 		}
 		break;
 
@@@@ -2842,7 +2842,7 @@@@ int commit_command(int cmd) {
 			if (commands[x].host_name == NULL)
 				continue;
 			if (is_authorized[x])
-				submit_result[x] = cmd_submitf(cmd, "%s;%s;%lu", commands[x].host_name, commands[x].description, start_time);
+				submit_result[x] = cmd_submitf(cmd, "%s;%s;%lld", commands[x].host_name, commands[x].description, (long long)start_time);
 		}
 		break;
 
@@@@ -2850,7 +2850,7 @@@@ int commit_command(int cmd) {
 	case CMD_SHUTDOWN_PROCESS:
 	case CMD_RESTART_PROCESS:
 		if (is_authorized[x])
-			submit_result[x] = cmd_submitf(cmd, "%lu", scheduled_time);
+			submit_result[x] = cmd_submitf(cmd, "%lld", (long long)scheduled_time);
 		break;
 
 	case CMD_DISABLE_NOTIFICATIONS:
@@@@ -2858,10 +2858,10 @@@@ int commit_command(int cmd) {
 			/* we should expire the disabled notifications */
 			if(end_time > 0) {
 				cmd = CMD_DISABLE_NOTIFICATIONS_EXPIRE_TIME;
-				submit_result[x] = cmd_submitf(cmd, "%lu;%lu", scheduled_time, end_time);
+				submit_result[x] = cmd_submitf(cmd, "%lld;%lld", (long long)scheduled_time, (long long)end_time);
 				my_free(temp_buffer);
 			} else {
-				submit_result[x] = cmd_submitf(cmd, "%lu", scheduled_time);
+				submit_result[x] = cmd_submitf(cmd, "%lld", (long long)scheduled_time);
 			}
 		}
 		break;
@@@@ -2892,7 +2892,7 @@@@ int commit_command(int cmd) {
 			if (commands[x].host_name == NULL)
 				continue;
 			if (is_authorized[x])
-				submit_result[x] = cmd_submitf(cmd, "%s;%lu", commands[x].host_name, scheduled_time);
+				submit_result[x] = cmd_submitf(cmd, "%s;%lld", commands[x].host_name, (long long)scheduled_time);
 		}
 		break;
 
@@@@ -2941,7 +2941,7 @@@@ int commit_command(int cmd) {
 					} else {
 						asprintf(&temp_buffer, "%s", comment_data);
 					}
-					submit_result[x] = cmd_submitf(cmd, "%s;%d;%d;%d;%lu;%s;%s", commands[x].host_name, (sticky_ack == TRUE) ? ACKNOWLEDGEMENT_STICKY : ACKNOWLEDGEMENT_NORMAL, send_notification, persistent_comment, end_time, comment_author, temp_buffer);
+					submit_result[x] = cmd_submitf(cmd, "%s;%d;%d;%d;%llu;%s;%s", commands[x].host_name, (sticky_ack == TRUE) ? ACKNOWLEDGEMENT_STICKY : ACKNOWLEDGEMENT_NORMAL, send_notification, persistent_comment, (long long)end_time, comment_author, temp_buffer);
 					my_free(temp_buffer);
 				} else
 					submit_result[x] = cmd_submitf(cmd, "%s;%d;%d;%d;%s;%s", commands[x].host_name, (sticky_ack == TRUE) ? ACKNOWLEDGEMENT_STICKY : ACKNOWLEDGEMENT_NORMAL, send_notification, persistent_comment, comment_author, comment_data);
@@@@ -2957,7 +2957,7 @@@@ int commit_command(int cmd) {
 				if (end_time > 0) {
 					cmd = CMD_ACKNOWLEDGE_SVC_PROBLEM_EXPIRE;
 					asprintf(&temp_buffer, "%s - The acknowledgement expires at: %s.", comment_data, end_time_string);
-					submit_result[x] = cmd_submitf(cmd, "%s;%s;%d;%d;%d;%lu;%s;%s", commands[x].host_name, commands[x].description, (sticky_ack == TRUE) ? ACKNOWLEDGEMENT_STICKY : ACKNOWLEDGEMENT_NORMAL, send_notification, persistent_comment, end_time, comment_author, temp_buffer);
+					submit_result[x] = cmd_submitf(cmd, "%s;%s;%d;%d;%d;%lld;%s;%s", commands[x].host_name, commands[x].description, (sticky_ack == TRUE) ? ACKNOWLEDGEMENT_STICKY : ACKNOWLEDGEMENT_NORMAL, send_notification, persistent_comment, (long long)end_time, comment_author, temp_buffer);
 					my_free(temp_buffer);
 				} else
 					submit_result[x] = cmd_submitf(cmd, "%s;%s;%d;%d;%d;%s;%s", commands[x].host_name, commands[x].description, (sticky_ack == TRUE) ? ACKNOWLEDGEMENT_STICKY : ACKNOWLEDGEMENT_NORMAL, send_notification, persistent_comment, comment_author, comment_data);
@@@@ -2996,7 +2996,7 @@@@ int commit_command(int cmd) {
 			if (commands[x].host_name == NULL)
 				continue;
 			if (is_authorized[x])
-				submit_result[x] = cmd_submitf(cmd, "%s;%lu;%lu;%d;%lu;%lu;%s;%s", commands[x].host_name, start_time, end_time, fixed, triggered_by, duration, comment_author, comment_data);
+				submit_result[x] = cmd_submitf(cmd, "%s;%llu;%llu;%d;%lu;%lu;%s;%s", commands[x].host_name, (long long)start_time, (long long)end_time, fixed, triggered_by, duration, comment_author, comment_data);
 		}
 		break;
 
@@@@ -3005,7 +3005,7 @@@@ int commit_command(int cmd) {
 			if (commands[x].host_name == NULL)
 				continue;
 			if (is_authorized[x])
-				submit_result[x] = cmd_submitf(cmd, "%s;%lu;%lu;%d;%lu;%lu;%s;%s", commands[x].host_name, start_time, end_time, fixed, triggered_by, duration, comment_author, comment_data);
+				submit_result[x] = cmd_submitf(cmd, "%s;%lld;%lld;%d;%lu;%lu;%s;%s", commands[x].host_name, (long long)start_time, (long long)end_time, fixed, triggered_by, duration, comment_author, comment_data);
 		}
 		break;
 
@@@@ -3014,7 +3014,7 @@@@ int commit_command(int cmd) {
 			if (commands[x].host_name == NULL)
 				continue;
 			if (is_authorized[x])
-				submit_result[x] = cmd_submitf(cmd, "%s;%s;%lu;%lu;%d;%lu;%lu;%s;%s", commands[x].host_name, commands[x].description, start_time, end_time, fixed, triggered_by, duration, comment_author, comment_data);
+				submit_result[x] = cmd_submitf(cmd, "%s;%s;%lld;%lld;%d;%lu;%lu;%s;%s", commands[x].host_name, commands[x].description, (long long)start_time, (long long)end_time, fixed, triggered_by, duration, comment_author, comment_data);
 		}
 		break;
 
@@@@ -3025,7 +3025,7 @@@@ int commit_command(int cmd) {
 			if (commands[x].host_name == NULL)
 				continue;
 			if (is_authorized[x])
-				submit_result[x] = cmd_submitf(cmd, "%s;%lu", commands[x].host_name, start_time);
+				submit_result[x] = cmd_submitf(cmd, "%s;%lld", commands[x].host_name, (long long)start_time);
 		}
 		break;
 
@@@@ -3080,15 +3080,15 @@@@ int commit_command(int cmd) {
 
 	case CMD_SCHEDULE_HOSTGROUP_HOST_DOWNTIME:
 		if (is_authorized[x])
-			submit_result[x] = cmd_submitf(cmd, "%s;%lu;%lu;%d;0;%lu;%s;%s", hostgroup_name, start_time, end_time, fixed, duration, comment_author, comment_data);
+			submit_result[x] = cmd_submitf(cmd, "%s;%lld;%lld;%d;0;%lu;%s;%s", hostgroup_name, (long long)start_time, (long long)end_time, fixed, duration, comment_author, comment_data);
 		break;
 
 	case CMD_SCHEDULE_HOSTGROUP_SVC_DOWNTIME:
 		if (is_authorized[x])
-			submit_result[x] = cmd_submitf(cmd, "%s;%lu;%lu;%d;0;%lu;%s;%s", hostgroup_name, start_time, end_time, fixed, duration, comment_author, comment_data);
+			submit_result[x] = cmd_submitf(cmd, "%s;%lld;%lld;%d;0;%lu;%s;%s", hostgroup_name, (long long)start_time, (long long)end_time, fixed, duration, comment_author, comment_data);
 		if (affect_host_and_services == TRUE) {
 			if (is_authorized[x])
-				submit_result[x] |= cmd_submitf(CMD_SCHEDULE_HOSTGROUP_HOST_DOWNTIME, "%s;%lu;%lu;%d;0;%lu;%s;%s", hostgroup_name, start_time, end_time, fixed, duration, comment_author, comment_data);
+				submit_result[x] |= cmd_submitf(CMD_SCHEDULE_HOSTGROUP_HOST_DOWNTIME, "%s;%lld;%lld;%d;0;%lu;%s;%s", hostgroup_name, (long long)start_time, (long long)end_time, fixed, duration, comment_author, comment_data);
 		}
 		break;
 
@@@@ -3125,15 +3125,15 @@@@ int commit_command(int cmd) {
 
 	case CMD_SCHEDULE_SERVICEGROUP_HOST_DOWNTIME:
 		if (is_authorized[x])
-			submit_result[x] = cmd_submitf(cmd, "%s;%lu;%lu;%d;0;%lu;%s;%s", servicegroup_name, start_time, end_time, fixed, duration, comment_author, comment_data);
+			submit_result[x] = cmd_submitf(cmd, "%s;%lld;%lld;%d;0;%lu;%s;%s", servicegroup_name, (long long)start_time, (long long)end_time, fixed, duration, comment_author, comment_data);
 		break;
 
 	case CMD_SCHEDULE_SERVICEGROUP_SVC_DOWNTIME:
 		if (is_authorized[x])
-			submit_result[x] = cmd_submitf(cmd, "%s;%lu;%lu;%d;0;%lu;%s;%s", servicegroup_name, start_time, end_time, fixed, duration, comment_author, comment_data);
+			submit_result[x] = cmd_submitf(cmd, "%s;%lld;%lld;%d;0;%lu;%s;%s", servicegroup_name, (long long)start_time, (long long)end_time, fixed, duration, comment_author, comment_data);
 		if (affect_host_and_services == TRUE) {
 			if (is_authorized[x])
-				submit_result[x] |= cmd_submitf(CMD_SCHEDULE_SERVICEGROUP_HOST_DOWNTIME, "%s;%lu;%lu;%d;0;%lu;%s;%s", servicegroup_name, start_time, end_time, fixed, duration, comment_author, comment_data);
+				submit_result[x] |= cmd_submitf(CMD_SCHEDULE_SERVICEGROUP_HOST_DOWNTIME, "%s;%lld;%lld;%d;0;%lu;%s;%s", servicegroup_name, (long long)start_time, (long long)end_time, fixed, duration, comment_author, comment_data);
 		}
 		break;
 
@@@@ -3164,7 +3164,7 @@@@ int commit_command(int cmd) {
 			if (is_authorized[x]) {
 				submit_result[x] = cmd_submitf(CMD_CHANGE_NORMAL_HOST_CHECK_INTERVAL, "%s;%lf", commands[x].host_name, interval);
 				submit_result[x] = cmd_submitf(CMD_CHANGE_RETRY_HOST_CHECK_INTERVAL, "%s;%lf", commands[x].host_name, interval);
-				submit_result[x] = cmd_submitf(CMD_SCHEDULE_FORCED_HOST_CHECK, "%s;%lu", commands[x].host_name, time(NULL));
+				submit_result[x] = cmd_submitf(CMD_SCHEDULE_FORCED_HOST_CHECK, "%s;%lld", commands[x].host_name, (long long)time(NULL));
 			}
 		}
 		break;
@@@@ -3177,7 +3177,7 @@@@ int commit_command(int cmd) {
 				/* check interval, retry interval, forced rescheduled check */
 				submit_result[x] = cmd_submitf(CMD_CHANGE_NORMAL_SVC_CHECK_INTERVAL, "%s;%s;%lf", commands[x].host_name, commands[x].description, interval);
 				submit_result[x] = cmd_submitf(CMD_CHANGE_RETRY_SVC_CHECK_INTERVAL, "%s;%s;%lf", commands[x].host_name, commands[x].description, interval);
-				submit_result[x] = cmd_submitf(CMD_SCHEDULE_FORCED_SVC_CHECK, "%s;%s;%lu", commands[x].host_name, commands[x].description, time(NULL));
+				submit_result[x] = cmd_submitf(CMD_SCHEDULE_FORCED_SVC_CHECK, "%s;%s;%lld", commands[x].host_name, commands[x].description, (long long)time(NULL));
 			}
 		}
 		break;
@


1.4
log
@update to icinga 1.13.3
@
text
@d1 4
a4 4
$OpenBSD: patch-cgi_cmd_c,v 1.3 2015/01/16 18:07:53 sthen Exp $
--- cgi/cmd.c.orig	Wed Jul 15 12:04:09 2015
+++ cgi/cmd.c	Wed Jul 15 18:35:23 2015
@@@@ -2702,7 +2702,7 @@@@ static int cmd_submitf(int id, const char *fmt, ...) {
d13 1
a13 1
@@@@ -2852,7 +2852,7 @@@@ int commit_command(int cmd) {
d22 1
a22 1
@@@@ -2861,7 +2861,7 @@@@ int commit_command(int cmd) {
d31 1
a31 1
@@@@ -2873,7 +2873,7 @@@@ int commit_command(int cmd) {
d40 1
a40 1
@@@@ -2881,7 +2881,7 @@@@ int commit_command(int cmd) {
d49 1
a49 1
@@@@ -2889,10 +2889,10 @@@@ int commit_command(int cmd) {
d62 1
a62 1
@@@@ -2923,7 +2923,7 @@@@ int commit_command(int cmd) {
d71 4
a74 4
@@@@ -2966,7 +2966,7 @@@@ int commit_command(int cmd) {
 				if (end_time > 0) {
 					cmd = CMD_ACKNOWLEDGE_HOST_PROBLEM_EXPIRE;
 					asprintf(&temp_buffer, "%s - The acknowledgement expires at: %s.", comment_data, end_time_string);
d76 1
a76 1
+					submit_result[x] = cmd_submitf(cmd, "%s;%d;%d;%d;%lld;%s;%s", commands[x].host_name, (sticky_ack == TRUE) ? ACKNOWLEDGEMENT_STICKY : ACKNOWLEDGEMENT_NORMAL, send_notification, persistent_comment, (long long)end_time, comment_author, temp_buffer);
d80 1
a80 1
@@@@ -2982,7 +2982,7 @@@@ int commit_command(int cmd) {
d89 1
a89 1
@@@@ -3021,7 +3021,7 @@@@ int commit_command(int cmd) {
d94 1
a94 1
+				submit_result[x] = cmd_submitf(cmd, "%s;%lld;%lld;%d;%lu;%lu;%s;%s", commands[x].host_name, (long long)start_time, (long long)end_time, fixed, triggered_by, duration, comment_author, comment_data);
d98 1
a98 1
@@@@ -3030,7 +3030,7 @@@@ int commit_command(int cmd) {
d107 1
a107 1
@@@@ -3039,7 +3039,7 @@@@ int commit_command(int cmd) {
d116 1
a116 1
@@@@ -3050,7 +3050,7 @@@@ int commit_command(int cmd) {
d125 1
a125 1
@@@@ -3105,15 +3105,15 @@@@ int commit_command(int cmd) {
d144 1
a144 1
@@@@ -3150,15 +3150,15 @@@@ int commit_command(int cmd) {
d163 1
a163 1
@@@@ -3189,7 +3189,7 @@@@ int commit_command(int cmd) {
d172 1
a172 1
@@@@ -3202,7 +3202,7 @@@@ int commit_command(int cmd) {
@


1.4.6.1
log
@update to icinga 1.14.0

security fixes (also affecting nagios; icinga 1.x is the old nagios-derived
branch, whereas 2.x is all new) -

* Bug #13709: CVE-2016-9566: Root priviledge escalation during log file opening
* Bug #10453: Icinga Classic-UI 1.13.3 and older are vulnerable to XSS - CVE-2015-8010

notable changes -

* Classic UI: Remove attribute based authorization (cgiauth.cfg is not parsed
any more)
* IDO: Remove deprecated config options
@
text
@d1 4
a4 4
$OpenBSD: patch-cgi_cmd_c,v 1.5 2017/02/07 21:40:06 sthen Exp $
--- cgi/cmd.c.orig	Thu Dec 22 21:40:50 2016
+++ cgi/cmd.c	Tue Feb  7 21:30:12 2017
@@@@ -2671,7 +2671,7 @@@@ static int cmd_submitf(int id, const char *fmt, ...) {
d13 1
a13 1
@@@@ -2821,7 +2821,7 @@@@ int commit_command(int cmd) {
d22 1
a22 1
@@@@ -2830,7 +2830,7 @@@@ int commit_command(int cmd) {
d31 1
a31 1
@@@@ -2842,7 +2842,7 @@@@ int commit_command(int cmd) {
d40 1
a40 1
@@@@ -2850,7 +2850,7 @@@@ int commit_command(int cmd) {
d49 1
a49 1
@@@@ -2858,10 +2858,10 @@@@ int commit_command(int cmd) {
d62 1
a62 1
@@@@ -2892,7 +2892,7 @@@@ int commit_command(int cmd) {
d71 4
a74 4
@@@@ -2941,7 +2941,7 @@@@ int commit_command(int cmd) {
 					} else {
 						asprintf(&temp_buffer, "%s", comment_data);
 					}
d76 1
a76 1
+					submit_result[x] = cmd_submitf(cmd, "%s;%d;%d;%d;%llu;%s;%s", commands[x].host_name, (sticky_ack == TRUE) ? ACKNOWLEDGEMENT_STICKY : ACKNOWLEDGEMENT_NORMAL, send_notification, persistent_comment, (long long)end_time, comment_author, temp_buffer);
d80 1
a80 1
@@@@ -2957,7 +2957,7 @@@@ int commit_command(int cmd) {
d89 1
a89 1
@@@@ -2996,7 +2996,7 @@@@ int commit_command(int cmd) {
d94 1
a94 1
+				submit_result[x] = cmd_submitf(cmd, "%s;%llu;%llu;%d;%lu;%lu;%s;%s", commands[x].host_name, (long long)start_time, (long long)end_time, fixed, triggered_by, duration, comment_author, comment_data);
d98 1
a98 1
@@@@ -3005,7 +3005,7 @@@@ int commit_command(int cmd) {
d107 1
a107 1
@@@@ -3014,7 +3014,7 @@@@ int commit_command(int cmd) {
d116 1
a116 1
@@@@ -3025,7 +3025,7 @@@@ int commit_command(int cmd) {
d125 1
a125 1
@@@@ -3080,15 +3080,15 @@@@ int commit_command(int cmd) {
d144 1
a144 1
@@@@ -3125,15 +3125,15 @@@@ int commit_command(int cmd) {
d163 1
a163 1
@@@@ -3164,7 +3164,7 @@@@ int commit_command(int cmd) {
d172 1
a172 1
@@@@ -3177,7 +3177,7 @@@@ int commit_command(int cmd) {
@


1.3
log
@Patch some of the format problems in icinga 1 due to 64-bit time_t,
as reported by otto@@. Build with -wformat to make the other two hundred
and ten of them more obvious.

(icinga2 doesn't have these problems, but we are stuck with an older
version of icinga2 as current versions fail at runtime on OpenBSD,
and a number of these problems affect the icinga1 cgis which are still
useful with 2).
@
text
@d1 4
a4 4
$OpenBSD$
--- cgi/cmd.c.orig	Fri Jan 16 17:35:08 2015
+++ cgi/cmd.c	Fri Jan 16 17:50:35 2015
@@@@ -2689,7 +2689,7 @@@@ static int cmd_submitf(int id, const char *fmt, ...) {
d13 1
a13 1
@@@@ -2839,7 +2839,7 @@@@ int commit_command(int cmd) {
d22 1
a22 1
@@@@ -2848,7 +2848,7 @@@@ int commit_command(int cmd) {
d31 1
a31 1
@@@@ -2860,7 +2860,7 @@@@ int commit_command(int cmd) {
d40 1
a40 1
@@@@ -2868,7 +2868,7 @@@@ int commit_command(int cmd) {
d49 1
a49 1
@@@@ -2876,10 +2876,10 @@@@ int commit_command(int cmd) {
d62 1
a62 1
@@@@ -2910,7 +2910,7 @@@@ int commit_command(int cmd) {
d71 1
a71 1
@@@@ -2953,7 +2953,7 @@@@ int commit_command(int cmd) {
d80 1
a80 1
@@@@ -2969,7 +2969,7 @@@@ int commit_command(int cmd) {
d89 1
a89 1
@@@@ -3004,7 +3004,7 @@@@ int commit_command(int cmd) {
d98 1
a98 1
@@@@ -3013,7 +3013,7 @@@@ int commit_command(int cmd) {
d107 1
a107 1
@@@@ -3022,7 +3022,7 @@@@ int commit_command(int cmd) {
d116 1
a116 1
@@@@ -3033,7 +3033,7 @@@@ int commit_command(int cmd) {
d125 1
a125 1
@@@@ -3088,15 +3088,15 @@@@ int commit_command(int cmd) {
d144 1
a144 1
@@@@ -3133,15 +3133,15 @@@@ int commit_command(int cmd) {
d163 1
a163 1
@@@@ -3172,7 +3172,7 @@@@ int commit_command(int cmd) {
d172 1
a172 1
@@@@ -3185,7 +3185,7 @@@@ int commit_command(int cmd) {
@


1.2
log
@bugfix update to icinga 1.4.2
@
text
@d1 103
a103 18
$OpenBSD: patch-cgi_cmd_c,v 1.1 2011/06/28 06:34:33 sthen Exp $

Fix from upstream ed01c63

--- cgi/cmd.c.orig	Wed Jun  8 08:58:48 2011
+++ cgi/cmd.c	Mon Jun 27 23:47:45 2011
@@@@ -2175,11 +2175,11 @@@@ void commit_command_data(int cmd){
 		   cmd==CMD_ENABLE_HOSTGROUP_SVC_CHECKS		|| cmd==CMD_DISABLE_HOSTGROUP_SVC_CHECKS || \
 		   cmd==CMD_SCHEDULE_HOSTGROUP_HOST_DOWNTIME	|| cmd==CMD_SCHEDULE_HOSTGROUP_SVC_DOWNTIME ){
 			temp_hostgroup=find_hostgroup(hostgroup_name);
-			if(is_authorized_for_hostgroup(temp_hostgroup,&current_authdata)==TRUE)
+			if(is_authorized_for_hostgroup_commands(temp_hostgroup,&current_authdata)==TRUE)
 				is_authorized[x]=TRUE;
 		} else {
 			temp_servicegroup=find_servicegroup(servicegroup_name);
-			if(is_authorized_for_servicegroup(temp_servicegroup,&current_authdata)==TRUE)
+			if(is_authorized_for_servicegroup_commands(temp_servicegroup,&current_authdata)==TRUE)
 				is_authorized[x]=TRUE;
d105 1
d107 74
@


1.1
log
@In the cgi, only permit a user to execute commands on an entire
hostgroup/servicegroup if authorized for every member of the group.
From upstream repo.
@
text
@d1 1
a1 1
$OpenBSD$
@

