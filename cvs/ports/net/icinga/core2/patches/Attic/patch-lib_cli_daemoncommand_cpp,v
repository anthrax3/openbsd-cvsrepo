head	1.4;
access;
symbols
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.11.16.20.29.55;	author sthen;	state dead;
branches;
next	1.3;
commitid	qYlDtork3dGtChXG;

1.3
date	2015.10.21.09.03.22;	author sthen;	state Exp;
branches;
next	1.2;
commitid	v6t4YdicAu5d6Hs5;

1.2
date	2015.05.12.09.37.03;	author sthen;	state dead;
branches;
next	1.1;
commitid	HpfUcqYDCTjXHiXR;

1.1
date	2015.02.06.22.53.27;	author sthen;	state Exp;
branches;
next	;
commitid	ZHxyFilGE59NRuYF;


desc
@@


1.4
log
@update to Icinga 2 v2.4.0, featuring a new RESTful API using basic auth
or client certificates for:

- filters, types, permissions
- query/create/modify/delete config objects at runtime
- status queries for global stats
- actions (e.g. acknowledge all service problems)
- event streams
@
text
@$OpenBSD: patch-lib_cli_daemoncommand_cpp,v 1.3 2015/10/21 09:03:22 sthen Exp $

From 3c6f0e31d9177bf0736ad247df0bb3bf0696e969 Mon Sep 17 00:00:00 2001
From: Gunnar Beutner <gunnar@@beutner.name>
Date: Tue, 20 Oct 2015 22:55:16 +0200
Subject: [PATCH] Make sure the timer thread is gone when calling fork()

refs #10410

--- lib/cli/daemoncommand.cpp.orig	Tue Oct 20 22:13:39 2015
+++ lib/cli/daemoncommand.cpp	Tue Oct 20 22:14:21 2015
@@@@ -70,7 +70,7 @@@@ static void SigHupHandler(int)
 static bool Daemonize(void)
 {
 #ifndef _WIN32
-	Application::GetTP().Stop();
+	Application::UninitializeBase();
 
 	pid_t pid = fork();
 	if (pid == -1) {
@@@@ -103,7 +103,7 @@@@ static bool Daemonize(void)
 		_exit(EXIT_SUCCESS);
 	}
 
-	Application::GetTP().Start();
+	Application::InitializeBase();
 #endif /* _WIN32 */
 
 	return true;
@


1.3
log
@Adjust the icinga2 port:

- Replace previous backout with fixes from Gunnar Beutner (upstream):

 . Make sure the timer thread is gone when calling fork()
 . Ensure that the main thread pool gets re-initialized properly after fork()

- Add a check so that 'make test' fails early with a useful error if the
libconfig package is installed; the objects in the build directory don't
have a finalized rpath and they are looking in /usr/local/lib before the
build directory, so the wrong libconfig so is picked up.

I think this port should now be in good shape, please let me know if you're
using it and run into problems with forking etc.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to icinga2 2.3.4. mark BROKEN until I can get some handle on what's
going on with daemonization (not backgrounding when expected) and hangs seen
in some cases.
@
text
@d1 17
a17 6
$OpenBSD: patch-lib_cli_daemoncommand_cpp,v 1.1 2015/02/06 22:53:27 sthen Exp $
--- lib/cli/daemoncommand.cpp.orig	Fri Feb  6 09:17:06 2015
+++ lib/cli/daemoncommand.cpp	Fri Feb  6 09:19:38 2015
@@@@ -324,7 +324,7 @@@@ int DaemonCommand::Run(const po::variables_map& vm, co
 	if (!vm.count("validate"))
 		Logger::DisableTimestamp(false);
d19 11
a29 5
-#ifdef __APPLE__
+#if defined(__APPLE__) || defined(__OpenBSD__)
 	ScriptVariable::Set("UseVfork", false, false, true);
 #else /* __APPLE__ */
 	ScriptVariable::Set("UseVfork", true, false, true);
@


1.1
log
@Update to icinga2-2.2.4. Change rc script to use "icinga2 daemon" and rc_bg to
force running in the background; it was previously using "icinga2 daemon -d",
but since 2.2.2 this has been hanging on OpenBSD.

Disable vfork as was done upstream on MacOS (to stop a hang there) in the
hope it may also stop a runtime hang seen occasionally here.

There are still some odd things going on and I don't think this is production-
ready on OpenBSD yet, so the warning in DESCR-main remains, but I think this
is not worse than 2.2.1.
@
text
@d1 1
a1 1
$OpenBSD$
@

