head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2015.11.16.20.29.55;	author sthen;	state dead;
branches;
next	1.1;
commitid	qYlDtork3dGtChXG;

1.1
date	2015.10.21.09.03.22;	author sthen;	state Exp;
branches;
next	;
commitid	v6t4YdicAu5d6Hs5;


desc
@@


1.2
log
@update to Icinga 2 v2.4.0, featuring a new RESTful API using basic auth
or client certificates for:

- filters, types, permissions
- query/create/modify/delete config objects at runtime
- status queries for global stats
- actions (e.g. acknowledge all service problems)
- event streams
@
text
@$OpenBSD: patch-lib_base_threadpool_cpp,v 1.1 2015/10/21 09:03:22 sthen Exp $

From e93dd3cf15dab8c63d6510334b1b27b1e208f83a Mon Sep 17 00:00:00 2001
From: Gunnar Beutner <gunnar@@beutner.name>
Date: Wed, 21 Oct 2015 07:02:49 +0200
Subject: [PATCH] Ensure that the main thread pool gets re-initialized properly
 after fork()

refs #10410
---
 lib/base/application.cpp |  2 +-
 lib/base/threadpool.cpp  | 12 ++++++++++--
 2 files changed, 11 insertions(+), 3 deletions(-)

--- lib/base/threadpool.cpp.orig	Mon Oct 19 10:14:40 2015
+++ lib/base/threadpool.cpp	Wed Oct 21 09:23:30 2015
@@@@ -31,7 +31,7 @@@@ using namespace icinga;
 int ThreadPool::m_NextID = 1;
 
 ThreadPool::ThreadPool(size_t max_threads)
-	: m_ID(m_NextID++), m_MaxThreads(max_threads), m_Stopped(false)
+	: m_ID(m_NextID++), m_MaxThreads(max_threads), m_Stopped(true)
 {
 	if (m_MaxThreads != UINT_MAX && m_MaxThreads < sizeof(m_Queues) / sizeof(m_Queues[0]))
 		m_MaxThreads = sizeof(m_Queues) / sizeof(m_Queues[0]);
@@@@ -46,6 +46,11 @@@@ ThreadPool::~ThreadPool(void)
 
 void ThreadPool::Start(void)
 {
+	if (!m_Stopped)
+		return;
+
+	m_Stopped = false;
+
 	for (size_t i = 0; i < sizeof(m_Queues) / sizeof(m_Queues[0]); i++)
 		m_Queues[i].SpawnWorker(m_ThreadGroup);
 
@@@@ -54,6 +59,9 @@@@ void ThreadPool::Start(void)
 
 void ThreadPool::Stop(void)
 {
+	if (m_Stopped)
+		return;
+
 	{
 		boost::mutex::scoped_lock lock(m_MgmtMutex);
 		m_Stopped = true;
@@@@ -76,7 +84,7 @@@@ void ThreadPool::Stop(void)
 	for (size_t i = 0; i < sizeof(m_Queues) / sizeof(m_Queues[0]); i++)
 		m_Queues[i].Stopped = false;
 
-	m_Stopped = false;
+	m_Stopped = true;
 }
 
 /**
@


1.1
log
@Adjust the icinga2 port:

- Replace previous backout with fixes from Gunnar Beutner (upstream):

 . Make sure the timer thread is gone when calling fork()
 . Ensure that the main thread pool gets re-initialized properly after fork()

- Add a check so that 'make test' fails early with a useful error if the
libconfig package is installed; the objects in the build directory don't
have a finalized rpath and they are looking in /usr/local/lib before the
build directory, so the wrong libconfig so is picked up.

I think this port should now be in good shape, please let me know if you're
using it and run into problems with forking etc.
@
text
@d1 1
a1 1
$OpenBSD$
@

