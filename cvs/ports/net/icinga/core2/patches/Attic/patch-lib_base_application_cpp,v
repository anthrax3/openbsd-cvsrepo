head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2015.11.16.20.29.55;	author sthen;	state dead;
branches;
next	1.3;
commitid	qYlDtork3dGtChXG;

1.3
date	2015.10.21.09.03.22;	author sthen;	state Exp;
branches;
next	1.2;
commitid	v6t4YdicAu5d6Hs5;

1.2
date	2015.10.20.14.08.57;	author sthen;	state Exp;
branches;
next	1.1;
commitid	s0KTFQaFBWmkc1mb;

1.1
date	2015.10.20.13.54.13;	author sthen;	state Exp;
branches;
next	;
commitid	zYjt2ixUNz0c9XYu;


desc
@@


1.4
log
@update to Icinga 2 v2.4.0, featuring a new RESTful API using basic auth
or client certificates for:

- filters, types, permissions
- query/create/modify/delete config objects at runtime
- status queries for global stats
- actions (e.g. acknowledge all service problems)
- event streams
@
text
@$OpenBSD: patch-lib_base_application_cpp,v 1.3 2015/10/21 09:03:22 sthen Exp $

From e93dd3cf15dab8c63d6510334b1b27b1e208f83a Mon Sep 17 00:00:00 2001
From: Gunnar Beutner <gunnar@@beutner.name>
Date: Wed, 21 Oct 2015 07:02:49 +0200
Subject: [PATCH] Ensure that the main thread pool gets re-initialized properly
 after fork()

refs #10410
---
 lib/base/application.cpp |  2 +-
 lib/base/threadpool.cpp  | 12 ++++++++++--
 2 files changed, 11 insertions(+), 3 deletions(-)

--- lib/base/application.cpp.orig	Wed Oct 21 09:23:05 2015
+++ lib/base/application.cpp	Wed Oct 21 09:23:28 2015
@@@@ -142,7 +142,7 @@@@ void Application::InitializeBase(void)
 	Utility::ExecuteDeferredInitializers();
 
 	/* make sure the thread pool gets initialized */
-	GetTP();
+	GetTP().Start();
 
 	Timer::Initialize();
 }
@


1.3
log
@Adjust the icinga2 port:

- Replace previous backout with fixes from Gunnar Beutner (upstream):

 . Make sure the timer thread is gone when calling fork()
 . Ensure that the main thread pool gets re-initialized properly after fork()

- Add a check so that 'make test' fails early with a useful error if the
libconfig package is installed; the objects in the build directory don't
have a finalized rpath and they are looking in /usr/local/lib before the
build directory, so the wrong libconfig so is picked up.

I think this port should now be in good shape, please let me know if you're
using it and run into problems with forking etc.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@add ticket url to comment in patches.
@
text
@d1 1
a1 1
$OpenBSD: patch-lib_base_application_cpp,v 1.1 2015/10/20 13:54:13 sthen Exp $
d3 5
a7 2
Revert post-2.2.1 commit which causes hangs at startup on OpenBSD
https://github.com/Icinga/icinga2/commit/86819f446e20f6aa0efab45d1e9e7eb87a2bd2b1.patch
d9 5
a13 1
https://dev.icinga.org/issues/10410
d15 4
a18 13
--- lib/base/application.cpp.orig	Mon Oct 19 10:14:40 2015
+++ lib/base/application.cpp	Tue Oct 20 14:20:36 2015
@@@@ -117,7 +117,7 @@@@ void Application::Exit(int rc)
 		logger->Flush();
 	}
 
-	UninitializeBase();
+	Timer::Uninitialize();
 #ifdef I2_DEBUG
 	exit(rc);
 #else /* I2_DEBUG */
@@@@ -140,20 +140,8 @@@@ void Application::InitializeBase(void)
 #endif /* _WIN32 */
d20 1
a20 3
 	Utility::ExecuteDeferredInitializers();
-
-	/* make sure the thread pool gets initialized */
d22 1
a22 17
-
-	Timer::Initialize();
 }
 
-void Application::UninitializeBase(void)
-{
-	Timer::Uninitialize();
-
-	GetTP().Stop();
-}
-
 /**
  * Retrieves a pointer to the application singleton object.
  *
@@@@ -319,7 +307,12 @@@@ mainloop:
 	DynamicObject::StopObjects();
 	Application::GetInstance()->OnShutdown();
d24 1
a24 7
-	UninitializeBase();
+#ifdef _DEBUG
+	GetTP().Stop();
+	m_ShuttingDown = false;
+
+	Timer::Uninitialize();
+#endif /* _DEBUG */
a25 2
 
 void Application::OnShutdown(void)
@


1.1
log
@Update to icinga2-2.3.11 and unbreak by adding patches to revert oldish
upstream commit 86819f446e2 which broke daemon activation on OpenBSD.
Without this reversion ConfigItem::ActivateItems() doesn't get any
further after the call to DynamicObject::RestoreObjects().
@
text
@d1 1
a1 1
$OpenBSD$
d5 2
@

