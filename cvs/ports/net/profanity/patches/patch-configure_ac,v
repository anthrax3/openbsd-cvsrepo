head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.4
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.1.0.2
	OPENBSD_6_0_BASE:1.1.1.1
	tb_2016-Apr-25:1.1.1.1
	tb:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.11.29.22.26.57;	author tb;	state Exp;
branches;
next	1.1;
commitid	pp263dTJHJHbvCse;

1.1
date	2016.04.25.17.46.38;	author tb;	state Exp;
branches
	1.1.1.1;
next	;
commitid	U3YdPu8HUhVl8XfH;

1.1.1.1
date	2016.04.25.17.46.38;	author tb;	state Exp;
branches;
next	;
commitid	U3YdPu8HUhVl8XfH;


desc
@@


1.2
log
@update profanity to 0.5.0.  From Rafael Sadowski

ok feinerer
@
text
@$OpenBSD$
--- configure.ac.orig	Wed Sep 14 22:52:04 2016
+++ configure.ac	Sun Sep 25 21:17:03 2016
@@@@ -22,6 +22,7 @@@@ AC_CANONICAL_HOST
 PLATFORM="unknown"
 AS_CASE([$host_os],
     [freebsd*], [PLATFORM="freebsd"],
+    [openbsd*], [PLATFORM="openbsd"],
     [darwin*], [PLATFORM="osx"],
     [cygwin], [PLATFORM="cygwin"],
     [PLATFORM="nix"])
@@@@ -172,15 +173,22 @@@@ AS_IF([test "x$enable_icons" != xno],
             [AC_MSG_ERROR([gtk+-2.0 or higher is required for icons])],
             [AC_MSG_NOTICE([gtk+-2.0 not found, icons not enabled])])])])
 
-AS_IF([test "x$PLATFORM" != xosx],
-    [AC_CHECK_LIB([readline], [main], [],
-        [AC_MSG_ERROR([libreadline is required for profanity])])],
-    [AC_CHECK_FILE([/usr/local/opt/readline/lib],
-        [LIBS="-lreadline $LIBS"
-            AM_CPPFLAGS="-I/usr/local/opt/readline/include $AM_CPPFLAGS"
-            AM_LDFLAGS="-L/usr/local/opt/readline/lib $AM_LDFLAGS"
-            AC_SUBST(AM_LDFLAGS)],
-        [AC_MSG_ERROR([libreadline is required for profanity])])])
+AS_IF([test "x$PLATFORM" = xosx],
+      [AC_CHECK_FILE([/usr/local/opt/readline/lib],
+          [LIBS="-lreadline $LIBS"
+              AM_CPPFLAGS="-I/usr/local/opt/readline/include $AM_CPPFLAGS"
+              AM_LDFLAGS="-L/usr/local/opt/readline/lib $AM_LDFLAGS"
+              AC_SUBST(AM_LDFLAGS)])],
+      [test "x$PLATFORM" = xopenbsd],
+      [AC_CHECK_FILE([/usr/local/include/ereadline],
+          [LIBS="-lereadline $LIBS"
+              AM_CPPFLAGS="-I/usr/local/include/ereadline $AM_CPPFLAGS"
+              AM_LDFLAGS="-L/usr/local/lib $AM_LDFLAGS"
+              AC_SUBST(AM_LDFLAGS)])],
+      [test "x$PLATFORM" = xnix],
+      [AC_CHECK_LIB([readline],[main],[],
+              [AC_MSG_ERROR([libreadline is required for profanity])])],
+      [AC_MSG_ERROR([libreadline is required for profanity])])
 
 ### Check for desktop notification support
 ### Linux/FreeBSD require libnotify
@@@@ -196,7 +204,7 @@@@ AS_IF([test "x$PLATFORM" = xosx],
                     [AC_MSG_ERROR([terminal-notifier not found, required for desktop notifications.])],
                     [AC_MSG_NOTICE([Desktop notifications not supported.])])],
                 [AC_DEFINE([HAVE_OSXNOTIFY], [1], [terminal notifier])])])],
-    [test "x$PLATFORM" = xnix -o "x$PLATFORM" = xfreebsd],
+    [test "x$PLATFORM" = xnix -o "x$PLATFORM" = xfreebsd -o "x$PLATFORM" = xopenbsd],
         [AS_IF([test "x$enable_notifications" != xno],
             [PKG_CHECK_MODULES([libnotify], [libnotify],
                 [AC_DEFINE([HAVE_LIBNOTIFY], [1], [libnotify module])],
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
--- configure.ac.orig	Sun Sep 20 17:42:03 2015
+++ configure.ac	Sun Oct  4 23:13:15 2015
@@@@ -19,6 +19,7 @@@@ AC_CANONICAL_HOST
d12 3
a14 18
@@@@ -57,12 +58,12 @@@@ AC_ARG_WITH([themes],
 # Use the CFLAGS and libs provided by libstrophe.pc if libstrophe has pkg-config support.
 PKG_CHECK_MODULES([libstrophe], [libstrophe], [LIBS="$libstrophe_LIBS $LIBS"],
         [
-	 if test "x$PLATFORM" != xfreebsd; then
+	 if test "x$PLATFORM" != xfreebsd || test "x$PLATFORM" != xopenbsd; then
 		AC_CHECK_LIB([resolv], [res_query], [],
 		    [AC_CHECK_LIB([resolv], [__res_query], [],
 			[AC_MSG_ERROR([libresolv not found; libresolv required for profanity])])])
 	 else
-		AC_MSG_NOTICE([skipping libresolv checks for freebsd])
+		AC_MSG_NOTICE([skipping libresolv checks for FreeBSD and OpenBSD])
 	 fi
 
          ### Check for libstrophe dependencies
@@@@ -141,17 +142,24 @@@@ PKG_CHECK_MODULES([glib], [glib-2.0 >= 2.26], [],
 PKG_CHECK_MODULES([curl], [libcurl], [],
     [AC_MSG_ERROR([libcurl is required for profanity])])
d42 11
a52 5
-AC_CHECK_LIB([uuid], [uuid_generate], [],
+AC_CHECK_LIB([uuid], [uuid_generate], [LIBS="-luuid $LIBS"],
     [AC_MSG_ERROR([libuuid is required for profanity])])
 
 AS_IF([test "x$PLATFORM" = xosx], [LIBS="-lcurl $LIBS"])
@


1.1.1.1
log
@Import the profanity console client. From Rafael Sadowski with tweaks
from me and sthen.

ok sthen@@

Profanity is a console based XMPP client written in C using ncurses and
libstrophe, inspired by irssi.

Features:

* Supports XMPP chat services, including Google Talk and Facebook.
* Command driven user interface.
* Customizable functionality and user interface.
* OTR (Off The Record) message encryption.
* Chat room support.
* Roster management.
* Flexible resource and priority settings.
* Desktop notifications.
* Unicode support.
* Integrated DuckDuckGo searching.
* Send tiny URLs.
@
text
@@
