head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.8
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.6
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	sthen_20151127:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.11.27.12.16.06;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	yi4kJGSfUwxJhxbv;

1.1.1.1
date	2015.11.27.12.16.06;	author sthen;	state Exp;
branches;
next	;
commitid	yi4kJGSfUwxJhxbv;


desc
@@



1.1
log
@Initial revision
@
text
@#!/bin/sh
exec ${MODPY_BIN} -m exabgp.debug ${TRUEPREFIX}/lib/python${MODPY_VERSION}/site-packages/exabgp/application/bgp.py -c ${SYSCONFDIR}/exabgp
@


1.1.1.1
log
@import ports/net/exabgp, ok phessler@@

ExaBGP is software which can inject routes with arbitrary next-hops into
your network (i.e. source IPv4/IPv6 routes using both IPv4 and IPv6 BGP
connections, either from a configuration file or third party applications),
inject flowspec routes, or pass received routes in textual form to a
third-party application.

Potential uses include:

 - announce IPv4/IPv6 routes with arbitrary next-hops into your network
   * injection of service IPs like AS112 announcement
   * temporary route redirection (adding more specific routes with
     different next-hop)
   * injection of flow routes to handle DDOS
 - source flow routes.
 - track changes in the global routing table.
 - add the received default route to an host.
 - filter and/or modify routes using your own logic.

ExaBGP is for injecting or performing complex route mangling with BGP,
it is not intended to transform a server into a BGP router.
@
text
@@
