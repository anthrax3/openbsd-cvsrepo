head	1.2;
access;
symbols
	OPENBSD_3_0:1.1.1.1.0.8
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	kevlo_2000-Jan-21:1.1.1.1
	kevlo:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2002.03.21.20.05.20;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2000.01.21.15.39.59;	author kevlo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.01.21.15.39.59;	author kevlo;	state Exp;
branches;
next	;


desc
@@


1.2
log
@md5->distinfo
@
text
@MD5 (arpcatch.tar.gz) = 84efc3846cbac3f9d26fac3df58ab779
RMD160 (arpcatch.tar.gz) = cbbdb9677bd88bea8cd65bc0d62bfa307fd47a90
SHA1 (arpcatch.tar.gz) = 612fc70b2cd46a16852d0b7a8b128a31cca9d569
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@This is a 4.4BSD program that implements, in userland, third-party
proxy ARP. In a nutshell, this lets you proxy-ARP an arbitrary IP
address to an arbitrary MAC address, from any machine on the network.
This is useful if your router doesn't do proxy ARP, or does it only
in an all-or-none fashion.

This code will not work outside of 4.4BSD (it relies on BPF). Furthermore,
it won't run on most 4.4BSD operating systems, because a problem with the
standard BPF implementation (try spoofing your source ethernet frame
address on NetBSD).

See: http://www.enteract.com/~tqbf
@
text
@@
