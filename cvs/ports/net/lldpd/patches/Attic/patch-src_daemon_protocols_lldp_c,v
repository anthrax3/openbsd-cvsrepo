head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2015.10.18.10.37.06;	author sthen;	state dead;
branches;
next	1.1;
commitid	eorgMvIUo59LBlxy;

1.1
date	2015.10.16.10.27.41;	author sthen;	state Exp;
branches
	1.1.2.1;
next	;
commitid	TA9LMFq9FHe1ITXf;

1.1.2.1
date	2015.10.16.10.30.44;	author sthen;	state Exp;
branches;
next	;
commitid	HZn3v55bMab7A7yl;


desc
@@


1.2
log
@update to lldpd-0.7.19, rolling in management address TLV fix
@
text
@$OpenBSD: patch-src_daemon_protocols_lldp_c,v 1.1 2015/10/16 10:27:41 sthen Exp $

From dd4f16e7e816f2165fba76e3d162cd8d2978dcb2 Mon Sep 17 00:00:00 2001
From: Vincent Bernat <vincent@@bernat.im>
Date: Sun, 4 Oct 2015 01:50:38 +0200
Subject: [PATCH] lldp: fix a buffer overflow when handling management address
 TLV

When a remote device was advertising a too large management address
while still respecting TLV boundaries, lldpd would crash due to a buffer
overflow. However, the buffer being a static one, this buffer overflow
is not exploitable if hardening was not disabled. This bug exists since
version 0.5.6.

--- src/daemon/protocols/lldp.c.orig	Sat Jul 11 22:12:43 2015
+++ src/daemon/protocols/lldp.c	Fri Oct 16 11:18:13 2015
@@@@ -726,6 +726,11 @@@@ lldp_decode(struct lldpd *cfg, char *frame, int s,
 		case LLDP_TLV_MGMT_ADDR:
 			CHECK_TLV_SIZE(1, "Management address");
 			addr_str_length = PEEK_UINT8;
+			if (addr_str_length > sizeof(addr_str_buffer)) {
+				log_warnx("lldp", "too large management address on %s",
+				    hardware->h_ifname);
+				goto malformed;
+			}
 			CHECK_TLV_SIZE(1 + addr_str_length, "Management address");
 			PEEK_BYTES(addr_str_buffer, addr_str_length);
 			addr_length = addr_str_length - 1;
@@@@ -752,7 +757,7 @@@@ lldp_decode(struct lldpd *cfg, char *frame, int s,
 			TAILQ_INSERT_TAIL(&chassis->c_mgmt, mgmt, m_entries);
 			break;
 		case LLDP_TLV_ORG:
-			CHECK_TLV_SIZE(4, "Organisational");
+			CHECK_TLV_SIZE(1 + (int)sizeof(orgid), "Organisational");
 			PEEK_BYTES(orgid, sizeof(orgid));
 			tlv_subtype = PEEK_UINT8;
 			if (memcmp(dot1, orgid, sizeof(orgid)) == 0) {
@


1.1
log
@add an upstream patch to lldpd: avoid an overflow on a (static) buffer
when a remote device advertises a too-large management address while still
respecting TLV boundaries.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@MFC: add an upstream patch to lldpd: avoid an overflow on a (static) buffer
when a remote device advertises a too-large management address while still
respecting TLV boundaries.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_daemon_protocols_lldp_c,v 1.1 2015/10/16 10:27:41 sthen Exp $
@

