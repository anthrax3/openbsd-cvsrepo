head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.38
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.36
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.34
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.30
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.32
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.28
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.26
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.24
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.22
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.20
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.18
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.16
	OPENBSD_5_0:1.2.0.14
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.12
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.8
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.1.1.0.6
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.4
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.2
	OPENBSD_4_1_BASE:1.1.1.1
	fucked_up:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.03.15.10.35.54;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.18.14.39.56;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.12.18.14.39.56;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update to version 1.06.23

feedback and ok espie@@
@
text
@$OpenBSD: patch-src_registry_c,v 1.1.1.1 2006/12/18 14:39:56 espie Exp $
--- src/registry.c.orig	Wed Jan 16 14:15:43 2008
+++ src/registry.c	Wed Jan 16 14:17:38 2008
@@@@ -363,10 +363,13 @@@@ xmlrpc_dispatchCall(xmlrpc_env *      const envP, 
         if (!methodLookupEnv.fault_occurred)
             callNamedMethod(envP, methodInfoP, paramArrayP, resultPP);
         else if (methodLookupEnv.fault_code == XMLRPC_INDEX_ERROR) {
-            if (registryP->_default_method)
+            if (registryP->_default_method) {
+	    	xmlrpc_env_clean(envP);
+	    	xmlrpc_env_init(envP);
                 callDefaultMethod(envP, registryP->_default_method, 
                                   methodName, paramArrayP,
                                   resultPP);
+	    }
             else {
                 /* No matching method, and no default. */
                 xmlrpc_env_set_fault_formatted(
@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
$OpenBSD$
--- src/registry.c.orig	Mon Dec 18 11:53:48 2006
+++ src/registry.c	Mon Dec 18 12:56:41 2006
@@@@ -359,10 +359,13 @@@@ xmlrpc_dispatchCall(xmlrpc_env *      co
         if (!envP->fault_occurred)
d7 1
a7 1
         else if (envP->fault_code == XMLRPC_INDEX_ERROR) {
@


1.1.1.1
log
@xmlrpc C/C++ library, prereq for newer cmake.
Also, makes sense to take this code out, as some other stuff is bound
to want this at some point.

This library is incredibly sloppy engineering. Reasonably readable
code, looks sensible, but incredible lack of testing (doesn't even pass
its own testsuite on a stable release... and does a lot of things that
can't work outside of linux... makes you wonder who is actually using
this...)

@
text
@@
