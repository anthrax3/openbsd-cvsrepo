head	1.2;
access;
symbols
	akoshibe_20170821:1.1.1.1 akoshibe:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.09.02.23.10.52;	author akoshibe;	state dead;
branches;
next	1.1;
commitid	IR7wwU64SYEnEiRW;

1.1
date	2017.08.21.18.47.12;	author akoshibe;	state Exp;
branches
	1.1.1.1;
next	;
commitid	XUM07MlWkdhZnQC8;

1.1.1.1
date	2017.08.21.18.47.12;	author akoshibe;	state Exp;
branches;
next	;
commitid	XUM07MlWkdhZnQC8;


desc
@@


1.2
log
@removes the unneeded install notes and Linux and FreeBSD
-related files. Also do a bit of Makefile cleanup.

OK sthen@@ phessler@@
@
text
@$OpenBSD: patch-INSTALL_FreeBSD,v 1.1 2017/08/21 18:47:12 akoshibe Exp $

Index: INSTALL.FreeBSD
--- INSTALL.FreeBSD.orig
+++ INSTALL.FreeBSD
@@@@ -0,0 +1,73 @@@@
+Mininet installation notes for FreeBSD
+--------------------------------------
+
+Currently, the only option is native installation.
+
+### Prerequisites
+
+This Mininet port relies heavily on VIMAGE. VIMAGE is supported by FreeBSD 8.0
+and later, so anything past 8.0 should work - with the caveat that Mininet has
+only been tested so far on 10.3 and newer.
+
+First and foremost, If it hasn't been already, the kernel must be recompiled with
+the VIMAGE option in order for `jail` to be able to take advantage of virtual
+network stacks (`vnet`s). A sample kernel configuration file, `VIMAGEMOD`, can
+be found under `util/` of this repository. It also contains comments that describe
+the minimum steps for recompiling a kernel.
+
+To use resource limited hosts, `rctl` must be enabled. Add to /boot/loader.conf:
+
+    kern.racct.enable=1
+
+The system must be rebooted for this to take effect, so it's best to add this
+before building a VIMAGE kernel (as you're rebooting anyways).
+
+### Installation
+
+If they haven't been already, install `git` and `sudo`:
+
+    pkg install git-lite sudo
+
+Fetch the repo and checkout this branch:
+
+    git fetch https://github.com/akoshibe/mininet.git
+
+The install script, `install.sh`, can be used to install Mininet, Open
+vSwitch, and Ryu along with their dependencies. It must be generated first:
+
+    cd mininet
+    ./configure
+    util/install.sh -a #or with flags -nvy
+
+The script uses `pkg` to install the dependencies, so this should take just a
+minute or so (plus or minus confirming installation, and network speed).
+
+Next, start Open vSwitch (if not started):
+
+    sudo service ovsdb-server onestart
+    sudo service ovs-vswitchd onestart
+
+The following lines can be added to /etc/rc.conf so that they start with
+system startup/restart:
+
+    ovsdb_server_enable="YES"
+    ovs_vswitchd_enable="YES"
+
+Finally, test the installation:
+
+    sudo mn --test=pingall --controller=ryu
+
+This should take about five or six seconds, a good chunk of which is waiting
+for Ryu to start up. Alternatively, a `pingall` can be run from the CLI for a
+similar sanity check with less waiting:
+
+    sudo mn --controller=ryu
+    mininet> pingall
+
+### Removal
+
+The Mininet core files can be uninstalled with the same install script:
+
+    util/install.sh -u
+
+This essentially undoes `install.sh -n`, minus the package dependencies.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Mininet creates a realistic virtual network, running real kernel, switch
and application code, on a single machine (VM, cloud or native), in
seconds, with a single command

Because you can easily interact with your network using the Mininet CLI
(and API), customize it, share it with others, or deploy it on real
hardware, Mininet is useful for development, teaching, and research.

This port is not connected to the build yet.

OK sthen@@ jasper@@ phessler@@

@
text
@@
