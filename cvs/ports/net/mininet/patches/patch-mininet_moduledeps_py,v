head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	akoshibe_20170821:1.1.1.1
	akoshibe:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.09.02.23.10.52;	author akoshibe;	state Exp;
branches;
next	1.1;
commitid	IR7wwU64SYEnEiRW;

1.1
date	2017.08.21.18.47.12;	author akoshibe;	state Exp;
branches
	1.1.1.1;
next	;
commitid	XUM07MlWkdhZnQC8;

1.1.1.1
date	2017.08.21.18.47.12;	author akoshibe;	state Exp;
branches;
next	;
commitid	XUM07MlWkdhZnQC8;


desc
@@


1.2
log
@removes the unneeded install notes and Linux and FreeBSD
-related files. Also do a bit of Makefile cleanup.

OK sthen@@ phessler@@
@
text
@$OpenBSD: patch-mininet_moduledeps_py,v 1.1.1.1 2017/08/21 18:47:12 akoshibe Exp $
Pull out mod* commands to mininet/linux, map kld* to mod* to avoid
more changes
Index: mininet/moduledeps.py
--- mininet/moduledeps.py.orig
+++ mininet/moduledeps.py
@@@@ -4,19 +4,7 @@@@ from mininet.util import quietRun
 from mininet.log import info, error, debug
 from os import environ
 
-def lsmod():
-    "Return output of lsmod."
-    return quietRun( 'lsmod' )
-
-def rmmod( mod ):
-    """Return output of lsmod.
-       mod: module string"""
-    return quietRun( [ 'rmmod', mod ] )
-
-def modprobe( mod ):
-    """Return output of modprobe
-       mod: module string"""
-    return quietRun( [ 'modprobe', mod ] )
+from mininet.openbsd.util import ( lsmod, rmmod, modprobe )
 
 OF_KMOD = 'ofdatapath'
 OVS_KMOD = 'openvswitch_mod'  # Renamed 'openvswitch' in OVS 1.7+/Linux 3.5+
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d7 1
a7 3
@@@@ -2,21 +2,12 @@@@
 
 from mininet.util import quietRun
d9 1
a9 2
-from os import environ
+from os import environ, uname
d24 1
a24 4
+if uname()[ 0 ] == 'FreeBSD':
+    from mininet.freebsd.util import ( lsmod, rmmod, modprobe )
+else:
+    from mininet.linux.util import ( lsmod, rmmod, modprobe )
@


1.1.1.1
log
@Mininet creates a realistic virtual network, running real kernel, switch
and application code, on a single machine (VM, cloud or native), in
seconds, with a single command

Because you can easily interact with your network using the Mininet CLI
(and API), customize it, share it with others, or deploy it on real
hardware, Mininet is useful for development, teaching, and research.

This port is not connected to the build yet.

OK sthen@@ jasper@@ phessler@@

@
text
@@
