head     1.1;
branch   1.1.1;
access   ;
symbols  akoshibe_20170821:1.1.1.1 akoshibe:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2017.08.21.18.47.12;  author akoshibe;  state Exp;
branches 1.1.1.1;
next     ;
commitid        XUM07MlWkdhZnQC8;

1.1.1.1
date     2017.08.21.18.47.12;  author akoshibe;  state Exp;
branches ;
next     ;
commitid        XUM07MlWkdhZnQC8;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
Pull out mod* commands to mininet/linux, map kld* to mod* to avoid
more changes
Index: mininet/moduledeps.py
--- mininet/moduledeps.py.orig
+++ mininet/moduledeps.py
@@@@ -2,21 +2,12 @@@@
 
 from mininet.util import quietRun
 from mininet.log import info, error, debug
-from os import environ
+from os import environ, uname
 
-def lsmod():
-    "Return output of lsmod."
-    return quietRun( 'lsmod' )
-
-def rmmod( mod ):
-    """Return output of lsmod.
-       mod: module string"""
-    return quietRun( [ 'rmmod', mod ] )
-
-def modprobe( mod ):
-    """Return output of modprobe
-       mod: module string"""
-    return quietRun( [ 'modprobe', mod ] )
+if uname()[ 0 ] == 'FreeBSD':
+    from mininet.freebsd.util import ( lsmod, rmmod, modprobe )
+else:
+    from mininet.linux.util import ( lsmod, rmmod, modprobe )
 
 OF_KMOD = 'ofdatapath'
 OVS_KMOD = 'openvswitch_mod'  # Renamed 'openvswitch' in OVS 1.7+/Linux 3.5+
@


1.1.1.1
log
@Mininet creates a realistic virtual network, running real kernel, switch
and application code, on a single machine (VM, cloud or native), in
seconds, with a single command

Because you can easily interact with your network using the Mininet CLI
(and API), customize it, share it with others, or deploy it on real
hardware, Mininet is useful for development, teaching, and research.

This port is not connected to the build yet.

OK sthen@@ jasper@@ phessler@@

@
text
@@
