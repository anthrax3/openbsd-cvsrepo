head     1.1;
branch   1.1.1;
access   ;
symbols  akoshibe_20170821:1.1.1.1 akoshibe:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2017.08.21.18.47.12;  author akoshibe;  state Exp;
branches 1.1.1.1;
next     ;
commitid        XUM07MlWkdhZnQC8;

1.1.1.1
date     2017.08.21.18.47.12;  author akoshibe;  state Exp;
branches ;
next     ;
commitid        XUM07MlWkdhZnQC8;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

Index: examples/treeping64.py
--- examples/treeping64.py.orig
+++ examples/treeping64.py
@@@@ -1,10 +1,10 @@@@
-#!/usr/bin/python
+#!/usr/bin/env python
 
 "Create a 64-node tree network, and test connectivity using ping."
 
 
 from mininet.log import setLogLevel, info
-from mininet.node import UserSwitch, OVSKernelSwitch  # , KernelSwitch
+from mininet.node import UserSwitch, KernelSwitch  # , KernelSwitch
 from mininet.topolib import TreeNet
 
 def treePing64():
@@@@ -13,7 +13,7 @@@@ def treePing64():
     results = {}
     switches = {  # 'reference kernel': KernelSwitch,
                   'reference user': UserSwitch,
-                  'Open vSwitch kernel': OVSKernelSwitch }
+                  'kernel': KernelSwitch }
 
     for name in switches:
         info( "*** Testing", name, "datapath\n" )
@


1.1.1.1
log
@Mininet creates a realistic virtual network, running real kernel, switch
and application code, on a single machine (VM, cloud or native), in
seconds, with a single command

Because you can easily interact with your network using the Mininet CLI
(and API), customize it, share it with others, or deploy it on real
hardware, Mininet is useful for development, teaching, and research.

This port is not connected to the build yet.

OK sthen@@ jasper@@ phessler@@

@
text
@@
