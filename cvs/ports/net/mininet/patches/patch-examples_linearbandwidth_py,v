head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.2
	OPENBSD_6_2_BASE:1.1.1.1
	akoshibe_20170821:1.1.1.1
	akoshibe:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2017.08.21.18.47.12;	author akoshibe;	state Exp;
branches
	1.1.1.1;
next	;
commitid	XUM07MlWkdhZnQC8;

1.1.1.1
date	2017.08.21.18.47.12;	author akoshibe;	state Exp;
branches;
next	;
commitid	XUM07MlWkdhZnQC8;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
KernelSwitch is either OVS or if_switch
Index: examples/linearbandwidth.py
--- examples/linearbandwidth.py.orig
+++ examples/linearbandwidth.py
@@@@ -1,4 +1,4 @@@@
-#!/usr/bin/python
+#!/usr/bin/env python
 
 """
 Test bandwidth (using iperf) on linear networks of varying size,
@@@@ -25,7 +25,7 @@@@ of switches, this example demonstrates:
 
 
 from mininet.net import Mininet
-from mininet.node import UserSwitch, OVSKernelSwitch, Controller
+from mininet.node import UserSwitch, KernelSwitch, Controller
 from mininet.topo import Topo
 from mininet.log import lg, info
 from mininet.util import irange, quietRun
@@@@ -71,7 +71,7 @@@@ def linearBandwidthTest( lengths ):
     hostCount = switchCount + 1
 
     switches = { 'reference user': UserSwitch,
-                 'Open vSwitch kernel': OVSKernelSwitch }
+                 'Open vSwitch kernel': KernelSwitch }
 
     # UserSwitch is horribly slow with recent kernels.
     # We can reinstate it once its performance is fixed
@


1.1.1.1
log
@Mininet creates a realistic virtual network, running real kernel, switch
and application code, on a single machine (VM, cloud or native), in
seconds, with a single command

Because you can easily interact with your network using the Mininet CLI
(and API), customize it, share it with others, or deploy it on real
hardware, Mininet is useful for development, teaching, and research.

This port is not connected to the build yet.

OK sthen@@ jasper@@ phessler@@

@
text
@@
