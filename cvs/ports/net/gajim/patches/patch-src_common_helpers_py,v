head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.4
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.3.0.12
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.5
date	2017.03.17.08.33.16;	author pea;	state Exp;
branches;
next	1.4;
commitid	OQsCfBV0jJA23LAc;

1.4
date	2017.01.24.23.47.00;	author phessler;	state Exp;
branches;
next	1.3;
commitid	hjs09VOX0kUaXXb4;

1.3
date	2014.01.02.11.35.18;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2012.09.30.14.28.43;	author jasper;	state dead;
branches;
next	1.1;

1.1
date	2012.04.05.16.08.56;	author jasper;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2012.04.12.09.02.15;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to 0.16.7
Diff from Rafael Sadowski, thanks !
ok jca@@
@
text
@$OpenBSD: patch-src_common_helpers_py,v 1.4 2017/01/24 23:47:00 phessler Exp $
--- src/common/helpers.py.orig.port	Wed Feb  1 14:16:03 2017
+++ src/common/helpers.py	Thu Mar  2 21:46:21 2017
@@@@ -844,7 +844,7 @@@@ def play_sound_file(path_to_soundfile):
             def _oss_play():
                 sndfile = wave.open(path_to_soundfile, 'rb')
                 (nc, sw, fr, nf, comptype, compname) = sndfile.getparams()
-                dev = oss.open('/dev/dsp', 'w')
+                dev = oss.open('/dev/audio', 'w')
                 dev.setparameters(sw * 8, nc, fr)
                 dev.write(sndfile.readframes(nf))
                 sndfile.close()
@


1.4
log
@Update gajim to 0.16.6, from Rafael Sadowski.  Thanks!

OK czarkoff@@
@
text
@d1 4
a4 4
$OpenBSD: patch-src_common_helpers_py,v 1.3 2014/01/02 11:35:18 jasper Exp $
--- src/common/helpers.py.orig.port	Sun Oct  2 14:18:23 2016
+++ src/common/helpers.py	Sun Nov 27 10:00:11 2016
@@@@ -836,7 +836,7 @@@@ def play_sound_file(path_to_soundfile):
@


1.3
log
@- update to gajim-0.15.4
- add missing dependency needed for ssl cert verification

ok pea@@ (MAINTAINER)
@
text
@d1 4
a4 4
$OpenBSD$
--- src/common/helpers.py.orig	Tue Dec 31 12:36:38 2013
+++ src/common/helpers.py	Tue Dec 31 12:37:26 2013
@@@@ -809,7 +809,7 @@@@ def play_sound_file(path_to_soundfile):
@


1.2
log
@- update to gajim-0.15.1

ok pea@@ (MAINTNAINER)
@
text
@d1 12
a12 16
$OpenBSD: patch-src_common_helpers_py,v 1.1 2012/04/05 16:08:56 jasper Exp $

port Gajim to use Farstream instead of Farsight2.
from upstream changeset dfd58bb1ad06.

--- src/common/helpers.py.orig	Thu Apr  5 11:34:52 2012
+++ src/common/helpers.py	Thu Apr  5 11:35:01 2012
@@@@ -1330,7 +1330,7 @@@@ def update_optional_features(account = None):
             gajim.gajim_optional_features[a].append(xmpp.NS_ESESSION)
         if gajim.config.get_per('accounts', a, 'answer_receipts'):
             gajim.gajim_optional_features[a].append(xmpp.NS_RECEIPTS)
-        if gajim.HAVE_FARSIGHT:
+        if gajim.HAVE_FARSTREAM:
             gajim.gajim_optional_features[a].append(xmpp.NS_JINGLE)
             gajim.gajim_optional_features[a].append(xmpp.NS_JINGLE_RTP)
             gajim.gajim_optional_features[a].append(xmpp.NS_JINGLE_RTP_AUDIO)
@


1.1
log
@- switch for farsight2 to farstream. all patches taken from upstream repositories.

ok aja@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@    security fix for CVE-2012-2085/CVE-2012-2086.
	ok pea@@ (MAINTAINER)
@
text
@d3 2
a4 2
execute commands without use_shell=True to prevent remote code execution,
except for commands configured in triggers plugin (configured by user itself).
d6 11
a16 34
From upstream changeset: bc296e96ac10
Fixes CVE-2012-2086

--- src/common/helpers.py.orig	Tue Apr 10 10:49:58 2012
+++ src/common/helpers.py	Tue Apr 10 10:50:59 2012
@@@@ -39,6 +39,7 @@@@ import errno
 import select
 import base64
 import hashlib
+import shlex
 import caps_cache
 
 from encodings.punycode import punycode_encode
@@@@ -372,8 +373,18 @@@@ def is_in_path(command, return_abs_path=False):
             pass
     return False
 
-def exec_command(command):
-    subprocess.Popen('%s &' % command, shell=True).wait()
+def exec_command(command, use_shell=False):
+    """
+    execute a command. if use_shell is True, we run the command as is it was
+    typed in a console. So it may be dangerous if you are not sure about what
+    is executed.
+    """
+    if use_shell:
+        subprocess.Popen('%s &' % command, shell=True).wait()
+    else:
+        args = shlex.split(command.encode('utf-8'))
+        p = subprocess.Popen(args)
+        gajim.thread_interface(p.wait)
 
 def build_command(executable, parameter):
     # we add to the parameter (can hold path with spaces)
@

