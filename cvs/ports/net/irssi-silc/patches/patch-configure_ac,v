head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.28
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.24
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.26
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.22
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.20
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.18
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.16
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.14
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.12
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.8
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2009.08.03.21.29.47;	author martynas;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.18.17.36.18;	author martynas;	state Exp;
branches
	1.1.8.1;
next	;

1.1.8.1
date	2009.11.07.04.06.59;	author william;	state Exp;
branches;
next	;


desc
@@


1.2
log
@integrate silc-client 1.1.8 into irssi-silc.  contains a fix for
string format vulnerability in client entry handling.
@
text
@$OpenBSD: patch-configure_ac,v 1.7 2009/08/01 19:24:34 sthen Exp $
--- configure.ac.orig	Sat Aug  1 09:53:41 2009
+++ configure.ac	Sun Aug  2 22:20:58 2009
@@@@ -51,7 +51,7 @@@@ case "$target" in
     check_threads=true
     ;;
   *-*-openbsd*)
-    check_threads=true
+    check_threads=false
     ;;
   *-*-*bsd*)
     check_threads=false
@@@@ -97,9 +97,6 @@@@ AM_CONDITIONAL(SILC_X86_64, test x$cpu_x86_64 = xtrue)
 AM_CONDITIONAL(SILC_POWERPC, test x$cpu_ppc = xtrue)
 AM_CONDITIONAL(SILC_IA64, test x$cpu_ia64 = xtrue)
 
-# Control compiler optimizations
-CFLAGS=`echo $CFLAGS | sed 's/-O[ 0123456789s]*//g'`
-
 AC_PROG_CC
 AC_C_INLINE
 AC_C_CONST
@@@@ -471,59 +468,9 @@@@ fi
 ## Compiler and compiler flag checks
 ##
 
-if test "$GCC"; then
-  # GCC specific options
-  if test "x$summary_debug" = "xyes"; then
-    SILC_ADD_CFLAGS(-g)
-  else
-    SILC_ADD_CFLAGS(-g)
-  fi
-  SILC_ADD_CFLAGS(-Wall -finline-functions)
-  SILC_ADD_CFLAGS(-Wno-pointer-sign)
-else
-  # Other compilers
-  case "$target" in
-    alpha*-dec-osf*)
-      SILC_ADD_CFLAGS(-g3)
-      ;;
-    mips*-sgi-irix*)
-      SILC_ADD_CFLAGS(-g3)
-      ;;
-    *)
-      SILC_ADD_CFLAGS(-g)
-      ;;
-  esac
+SILC_ADD_CFLAGS(-Wall -finline-functions)
+SILC_ADD_CFLAGS(-Wno-pointer-sign)
 
-  # Intel C++ Compiler needs -restrict
-  if test "x$CC" = "xicc"; then
-    SILC_ADD_CFLAGS(-restrict)
-  fi
-fi
-
-if test x$want_cc_optimizations = xtrue; then
-  if test "$GCC"; then
-    # GCC specific options
-    if test "x$summary_debug" = "xyes"; then
-      SILC_ADD_CFLAGS(-O)
-    else
-      SILC_ADD_CFLAGS(-O2)
-    fi
-  else
-    # Other compilers
-    case "$target" in
-      alpha*-dec-osf*)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-      mips*-sgi-irix*)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-      *)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-    esac
-  fi
-fi
-
 #
 # Workaround a bug in GCC 2.x which causes memory exhaustion
 # when compiling sha1 with optimizations on UltraSPARC.
@@@@ -616,8 +563,8 @@@@ if test -n "$with_silc_includes" || test -n "$with_sil
 
 else
   # pkg-config check
-  PKG_CHECK_MODULES(SILC, [silc >= 1.1], compile_libs=false, compile_libs=true)
-  PKG_CHECK_MODULES(SILCCLIENT, [silcclient >= 1.1.1], compile_libs=false, compile_libs=true)
+  #PKG_CHECK_MODULES(SILC, [silc >= 1.1], compile_libs=false, compile_libs=true)
+  #PKG_CHECK_MODULES(SILCCLIENT, [silcclient >= 1.1.1], compile_libs=false, compile_libs=true)
 
   if test x$compile_libs = xfalse; then
     LIBSUBDIR=
@


1.1
log
@update to irssi-silc-1.1.3
tweaks, looks good steven@@;  tested by Wiktor Izdebski and Simon Kuhnle
@
text
@d1 85
a85 4
$OpenBSD$
--- configure.ac.orig	Tue Nov  6 16:45:06 2007
+++ configure.ac	Fri Nov 16 00:26:36 2007
@@@@ -613,8 +613,8 @@@@ if test -n "$with_silc_includes" || test -n "$with_sil
@


1.1.8.1
log
@MFC:

integrate silc-client 1.1.8 into irssi-silc.  contains a fix for
string format vulnerability in client entry handling.

ok jasper@@ sthen@@
@
text
@d1 4
a4 85
$OpenBSD: patch-configure_ac,v 1.2 2009/08/03 21:29:47 martynas Exp $
--- configure.ac.orig	Sat Aug  1 09:53:41 2009
+++ configure.ac	Sun Aug  2 22:20:58 2009
@@@@ -51,7 +51,7 @@@@ case "$target" in
     check_threads=true
     ;;
   *-*-openbsd*)
-    check_threads=true
+    check_threads=false
     ;;
   *-*-*bsd*)
     check_threads=false
@@@@ -97,9 +97,6 @@@@ AM_CONDITIONAL(SILC_X86_64, test x$cpu_x86_64 = xtrue)
 AM_CONDITIONAL(SILC_POWERPC, test x$cpu_ppc = xtrue)
 AM_CONDITIONAL(SILC_IA64, test x$cpu_ia64 = xtrue)
 
-# Control compiler optimizations
-CFLAGS=`echo $CFLAGS | sed 's/-O[ 0123456789s]*//g'`
-
 AC_PROG_CC
 AC_C_INLINE
 AC_C_CONST
@@@@ -471,59 +468,9 @@@@ fi
 ## Compiler and compiler flag checks
 ##
 
-if test "$GCC"; then
-  # GCC specific options
-  if test "x$summary_debug" = "xyes"; then
-    SILC_ADD_CFLAGS(-g)
-  else
-    SILC_ADD_CFLAGS(-g)
-  fi
-  SILC_ADD_CFLAGS(-Wall -finline-functions)
-  SILC_ADD_CFLAGS(-Wno-pointer-sign)
-else
-  # Other compilers
-  case "$target" in
-    alpha*-dec-osf*)
-      SILC_ADD_CFLAGS(-g3)
-      ;;
-    mips*-sgi-irix*)
-      SILC_ADD_CFLAGS(-g3)
-      ;;
-    *)
-      SILC_ADD_CFLAGS(-g)
-      ;;
-  esac
+SILC_ADD_CFLAGS(-Wall -finline-functions)
+SILC_ADD_CFLAGS(-Wno-pointer-sign)
 
-  # Intel C++ Compiler needs -restrict
-  if test "x$CC" = "xicc"; then
-    SILC_ADD_CFLAGS(-restrict)
-  fi
-fi
-
-if test x$want_cc_optimizations = xtrue; then
-  if test "$GCC"; then
-    # GCC specific options
-    if test "x$summary_debug" = "xyes"; then
-      SILC_ADD_CFLAGS(-O)
-    else
-      SILC_ADD_CFLAGS(-O2)
-    fi
-  else
-    # Other compilers
-    case "$target" in
-      alpha*-dec-osf*)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-      mips*-sgi-irix*)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-      *)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-    esac
-  fi
-fi
-
 #
 # Workaround a bug in GCC 2.x which causes memory exhaustion
 # when compiling sha1 with optimizations on UltraSPARC.
@@@@ -616,8 +563,8 @@@@ if test -n "$with_silc_includes" || test -n "$with_sil
@


