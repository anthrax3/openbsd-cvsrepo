head	1.5;
access;
symbols
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.4
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.1.1.1.0.24
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.22
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.20
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.18
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.16
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.14
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.12
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.10
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.8
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.6
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.4
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.2
	OPENBSD_3_1_BASE:1.1.1.1
	naddy_20020131:1.1.1.1
	naddy:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2011.07.04.11.10.57;	author jasper;	state dead;
branches;
next	1.4;

1.4
date	2010.05.20.09.21.17;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2008.08.25.15.14.43;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2007.12.11.11.04.58;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.31.12.21.53;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.01.31.12.21.53;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.5
log
@garbage collect these Direct Connect clients. they're old/unmaintained and
hardly working. users of Direct Connect can use mldonkey or valknut instead.

ok dcoppa@@ landry@@
@
text
@$OpenBSD: patch-src_main_c,v 1.4 2010/05/20 09:21:17 espie Exp $
--- src/main.c.orig	Sun Dec 28 09:12:38 2003
+++ src/main.c	Wed May 19 18:54:18 2010
@@@@ -43,7 +43,9 @@@@ $Id: patch-src_main_c,v 1.4 2010/05/20 09:21:17 espie Exp $
 #include <sys/sem.h>
 #endif
 #include <errno.h>
-#include <getopt.h>
+#ifdef HAVE_GETOPT_H
+# include <getopt.h>
+#endif
 #include <string.h>
 #include <db.h>
 #include <glib.h>
@@@@ -264,7 +266,7 @@@@ void display_cnx_status(void)
 	if(cnx_in_progress==0)
 		val+=2;
 
-	sprintf(buf,"%d",val);
+	snprintf(buf,sizeof(buf),"%d",val);
 	disp_msg(VAR_MSG,NULL,"cnx_status",buf,NULL);
 }
 
@@@@ -314,14 +316,14 @@@@ void hub_disconnect(HUBDISC_FLAG exit_flag)
 		disp_msg(INFO_MSG,"hub_disconnect","have xfer ?",NULL);
 		G_LOCK(waiting_action);
 		
-		sprintf(tmp,"%d xfer",waiting_action->len);
+		snprintf(tmp,sizeof(tmp),"%d xfer",waiting_action->len);
 		disp_msg(INFO_MSG,NULL,tmp,NULL);
 		while(waiting_action->len!=0)		/* all thread done ? */
 		{
 			G_UNLOCK(waiting_action);
 			sleep(1);
 			G_LOCK(waiting_action);
-			sprintf(tmp,"%d xfer",waiting_action->len);
+			snprintf(tmp,sizeof(tmp),"%d xfer",waiting_action->len);
 			disp_msg(INFO_MSG,NULL,tmp,NULL);
 
 			if(user_wants_to_quit)		/* wait except if the user wants to leave now */
@@@@ -1049,6 +1051,9 @@@@ static void display_usage(char *fname)
 						"Be careful, most of the information you provide can't contain the following\n"
 						"characters because Direct Connect uses them internally: | $\n"
 						,fname,dc_version);
+#ifndef HAVE_GETOPT_LONG
+	fprintf(stderr,"\nNOTE: Long options are not available on this platform\n");
+#endif
 }
 
 /************************************************************/
@@@@ -1175,7 +1180,9 @@@@ static void start_rebuild_db_thread(void)
 /* beginning of the code */
 int main(int argc,char **argv)
 {
-	static struct option optab[]=	{
+#ifdef HAVE_GETOPT_LONG
+  
+  static struct option optab[]=	{
 												{"help",no_argument,NULL,'h'},				/* get help */
 												{"nick",required_argument,NULL,'n'},		/* nickname */
 												{"info",required_argument,NULL,'i'},		/* user description */
@@@@ -1207,7 +1214,9 @@@@ int main(int argc,char **argv)
 												{"virtual_share_dir",required_argument,NULL,'D'},	/* directory containing files containing virtual shared files */
 												{NULL,0,NULL,'\0'}					/* last option */
 											};
-	static const char *short_opt="hn:i:c:e:d:s:o:a:p:g:fT:xwtlv:u:b:5kS:P:U:D:Z:mC:XK:";
+#endif
+
+	static const char *short_opt="hn:i:c:e:d:s:o:a:p:g:fxwtlv:u:m:b:5";
 										
 	int ch;
 	int detach_from_tty=0;
@@@@ -1262,7 +1271,11 @@@@ int main(int argc,char **argv)
 	pre_gsc=g_string_chunk_new(128);
 	pre_gpa=g_ptr_array_new();
 
-	while((ch=getopt_long(argc,argv,short_opt,optab,NULL))!=EOF)
+#ifdef HAVE_GETOPT_LONG
+ 	while((ch=getopt_long(argc,argv,short_opt,optab,NULL))!=EOF)
+#else
+	while((ch=getopt(argc,argv,short_opt))!= -1)
+#endif   
 	{
 		switch(ch)
 		{
@@@@ -1693,7 +1706,8 @@@@ int main(int argc,char **argv)
 			struct sockaddr_un name;
 
 			name.sun_family=AF_UNIX;
-			strcpy(name.sun_path,local_dctc_udp_sock_path->str);
+			strncpy(name.sun_path,local_dctc_sock_path->str,sizeof(name.sun_path) - 1);
+                        name.sun_path[sizeof(name.sun_path) - 1] = 0x0;
 			if(bind(local_sck_udp,(void *)&name,sizeof(struct sockaddr_un)))
 			{
 				perror("local_sck_udp - bind");
@@@@ -1780,7 +1794,7 @@@@ int main(int argc,char **argv)
 			if(p!=NULL)
 			{
 				char tmp_str[512];
-				sprintf(tmp_str,"%.2f",cur_pos);
+				snprintf(tmp_str,sizeof(tmp_str),"%.2f",cur_pos);
 				disp_msg(PROGRESS_BAR,"","init_share",tmp_str,"Initialize shared file database",p,NULL);
 				add_shared_directory(p);
 			}
@


1.4
log
@okay, I have no idea why they don't like gcc4.
make it compile, not fuck up the build.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.3 2008/08/25 15:14:43 jasper Exp $
d4 1
a4 1
@@@@ -43,7 +43,9 @@@@ $Id: main.c,v 1.29 2003/12/28 08:12:38 uid68112 Exp $
@


1.3
log
@- update dctc to a less ancient version 0.85.9
- merge parts of pkg/SECURITY into pkg/MESSAGE
- fix license marker

feedback and ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_main_c,v 1.2 2007/12/11 11:04:58 jakemsr Exp $
d3 1
a3 1
+++ src/main.c	Sun Aug 24 13:23:35 2008
@


1.2
log
@use -pthread instead of -lpthread for pthreads linkage

sync w/update-patches
@
text
@d1 8
a8 13
$OpenBSD: patch-src_main_c,v 1.1.1.1 2002/01/31 12:21:53 naddy Exp $
--- src/main.c.orig	Tue Jan 22 05:47:39 2002
+++ src/main.c	Tue Dec 11 00:04:50 2007
@@@@ -34,9 +34,16 @@@@
 #include <sys/param.h>
 #include <sys/utsname.h>
 #include <sys/un.h>
-#include <linux/sem.h>     /* for the value of SEMVMX */
+
+#ifdef HAVE_LINUX_SEM_H
+# include <linux/sem.h>     /* for the value of SEMVMX */
+#endif
+
a11 3
+
 #include <errno.h>
-#include <getopt.h>
d13 1
d15 1
a15 2
 #include <pthread.h>
@@@@ -204,7 +211,7 @@@@ void display_cnx_status(void)
d24 1
a24 1
@@@@ -247,14 +254,14 @@@@ void hub_disconnect(HUBDISC_FLAG exit_flag)
d41 1
a41 1
@@@@ -937,6 +944,10 @@@@ static void display_usage(char *fname)
a44 1
+
d51 1
a51 1
@@@@ -1061,7 +1072,9 @@@@ static void start_rebuild_db_thread(void)
d62 2
a63 2
@@@@ -1085,7 +1098,9 @@@@ int main(int argc,char **argv)
 												{"nomd5sum",no_argument,NULL,'5'},	/* don't compute md5 sum for each file of the database */
d66 1
a66 1
-	static const char *short_opt="hn:i:c:e:d:s:o:a:p:g:fxwtlv:u:m:b:5";
d69 1
a69 1
+  static const char *short_opt="hn:i:c:e:d:s:o:a:p:g:fxwtlv:u:m:b:5";
d73 1
a73 1
@@@@ -1129,7 +1144,11 @@@@ int main(int argc,char **argv)
d77 1
d79 1
a79 1
 	while((ch=getopt_long(argc,argv,short_opt,optab,NULL))!=EOF)
d82 1
a82 1
+#endif          
d86 1
a86 1
@@@@ -1448,7 +1467,8 @@@@ int main(int argc,char **argv)
d90 1
a90 1
-			strcpy(name.sun_path,local_dctc_sock_path->str);
d93 1
a93 1
 			if(bind(local_sck,(void *)&name,sizeof(struct sockaddr_un)))
d95 2
a96 2
 				perror("local_sck - bind");
@@@@ -1502,7 +1522,7 @@@@ int main(int argc,char **argv)
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- src/main.c.orig	Tue Jan 22 14:47:39 2002
+++ src/main.c	Mon Jan 28 17:05:52 2002
d32 1
a32 1
@@@@ -247,14 +254,14 @@@@ void hub_disconnect(HUBDISC_FLAG exit_fl
d60 1
a60 1
@@@@ -1061,7 +1072,9 @@@@ static void start_rebuild_db_thread(void
@


1.1.1.1
log
@Import dctc 0.68.0; submitted by Nils Nordman <nino@@nforced.com>.

DCTC is a Direct Connect clone, allowing users to share their files
and talk (like IRC but more software sharing oriented) using a
proprietary protocol. 
@
text
@@
