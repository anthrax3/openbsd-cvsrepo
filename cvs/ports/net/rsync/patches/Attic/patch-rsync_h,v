head	1.6;
access;
symbols
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_9:1.6.0.2
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.1.0.2;
locks; strict;
comment	@# @;


1.6
date	2004.05.11.13.39.17;	author naddy;	state dead;
branches
	1.6.2.1
	1.6.4.1;
next	1.5;

1.5
date	2003.12.04.17.54.17;	author espie;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2003.05.11.22.20.55;	author naddy;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2002.03.15.23.54.53;	author espie;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2002.01.29.21.02.17;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2002.01.24.23.25.32;	author naddy;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.01.24.23.31.37;	author naddy;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.03.17.18.20.59;	author naddy;	state Exp;
branches;
next	;

1.3.6.1
date	2003.12.04.22.08.54;	author margarida;	state Exp;
branches;
next	;

1.4.2.1
date	2003.12.04.22.04.03;	author margarida;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2004.05.26.09.50.40;	author robert;	state dead;
branches;
next	;

1.5.2.1
date	2004.05.26.09.47.22;	author robert;	state dead;
branches;
next	;

1.6.2.1
date	2011.04.10.17.17.54;	author jasper;	state Exp;
branches;
next	;

1.6.4.1
date	2011.04.11.09.16.52;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to 2.6.2: various bug fixes and minor enhancements.

SECURITY:
Paths sent to an rsync daemon are more thoroughly sanitized when
chroot is not used.  If you're running a non-read-only rsync daemon
with chroot disabled, *please upgrade*, especially if the user privs
you run rsync under is anything above "nobody".
@
text
@$OpenBSD: patch-rsync_h,v 1.5 2003/12/04 17:54:17 espie Exp $
--- rsync.h.orig	2003-12-04 05:23:30.000000000 +0100
+++ rsync.h	2003-12-04 09:32:51.000000000 +0100
@@@@ -114,10 +114,6 @@@@ enum logcode {FNONE=0, FERROR=1, FINFO=2
 #include <string.h>
 #endif
 
-#ifdef HAVE_MALLOC_H
-#include <malloc.h>
-#endif
-
 #ifdef TIME_WITH_SYS_TIME
 #include <sys/time.h>
 #include <time.h>
@@@@ -184,10 +180,6 @@@@ enum logcode {FNONE=0, FERROR=1, FINFO=2
 #include <glob.h>
 #endif
 
-#ifdef HAVE_MALLOC_H
-#  include <malloc.h>
-#endif
-
 /* these are needed for the uid/gid mapping code */
 #include <pwd.h>
 #include <grp.h>
@


1.6.4.1
log
@Security fix for CVE-2011-1097:
rsync Incremental Recursion Memory Corruption Vulnerability

(already fixed in current's 3.0.8, this is the same diff applied to OPENBSD_4_9)
tested by Simon Kuhnle, ok jasper@@
@
text
@d1 25
a25 41
$OpenBSD: patch-rsync_h,v 1.6.2.1 2011/04/10 17:17:54 jasper Exp $

Security fix for CVE-2011-1097:
rsync Incremental Recursion Memory Corruption Vulnerability

Patch from upstream git:
http://gitweb.samba.org/?p=rsync.git;a=patch;h=83b94efa6b60a3ff5eee4c5f7812c617a90a03f6;hp=c8255147b06b74dad940d32f9cef5fbe17595239

--- rsync.h.orig	Sat Apr  9 10:49:12 2011
+++ rsync.h	Sat Apr  9 10:49:09 2011
@@@@ -65,6 +65,7 @@@@
 /* These flags are used in the live flist data. */
 
 #define FLAG_TOP_DIR (1<<0)	/* sender/receiver/generator */
+#define FLAG_OWNED_BY_US (1<<0) /* generator: set by make_file() for aux flists only */
 #define FLAG_FILE_SENT (1<<1)	/* sender/receiver/generator */
 #define FLAG_DIR_CREATED (1<<1)	/* generator */
 #define FLAG_CONTENT_DIR (1<<2)	/* sender/receiver/generator */
@@@@ -83,8 +84,12 @@@@
 
 /* These flags are passed to functions but not stored. */
 
-#define FLAG_DIVERT_DIRS (1<<16)/* sender */
+#define FLAG_DIVERT_DIRS (1<<16)   /* sender, but must be unique */
 
+/* These flags are for get_dirlist(). */
+#define GDL_IGNORE_FILTER_RULES (1<<0)
+
+/* Some helper macros for matching bits. */
 #define BITS_SET(val,bits) (((val) & (bits)) == (bits))
 #define BITS_SETnUNSET(val,onbits,offbits) (((val) & ((onbits)|(offbits))) == (onbits))
 #define BITS_EQUAL(b1,b2,mask) (((unsigned)(b1) & (unsigned)(mask)) \
@@@@ -95,7 +100,7 @@@@
 
 /* This is used when working on a new protocol version in CVS, and should
  * be a new non-zero value for each CVS change that affects the protocol.
- * It must ALWAYS be 0 when the protocol goes final! */
+ * It must ALWAYS be 0 when the protocol goes final (and NEVER before)! */
 #define SUBPROTOCOL_VERSION 0
 
 /* We refuse to interoperate with versions that are not in this range.
@


1.6.2.1
log
@Security fix for CVE-2011-1097:
rsync Incremental Recursion Memory Corruption Vulnerability

(already fixed in current's 3.0.8)

ok espie@@ (MAINTAINER)
@
text
@d1 25
a25 41
$OpenBSD$

Security fix for CVE-2011-1097:
rsync Incremental Recursion Memory Corruption Vulnerability

Patch from upstream git:
http://gitweb.samba.org/?p=rsync.git;a=patch;h=83b94efa6b60a3ff5eee4c5f7812c617a90a03f6;hp=c8255147b06b74dad940d32f9cef5fbe17595239

--- rsync.h.orig	Sat Apr  9 10:49:12 2011
+++ rsync.h	Sat Apr  9 10:49:09 2011
@@@@ -65,6 +65,7 @@@@
 /* These flags are used in the live flist data. */
 
 #define FLAG_TOP_DIR (1<<0)	/* sender/receiver/generator */
+#define FLAG_OWNED_BY_US (1<<0) /* generator: set by make_file() for aux flists only */
 #define FLAG_FILE_SENT (1<<1)	/* sender/receiver/generator */
 #define FLAG_DIR_CREATED (1<<1)	/* generator */
 #define FLAG_CONTENT_DIR (1<<2)	/* sender/receiver/generator */
@@@@ -83,8 +84,12 @@@@
 
 /* These flags are passed to functions but not stored. */
 
-#define FLAG_DIVERT_DIRS (1<<16)/* sender */
+#define FLAG_DIVERT_DIRS (1<<16)   /* sender, but must be unique */
 
+/* These flags are for get_dirlist(). */
+#define GDL_IGNORE_FILTER_RULES (1<<0)
+
+/* Some helper macros for matching bits. */
 #define BITS_SET(val,bits) (((val) & (bits)) == (bits))
 #define BITS_SETnUNSET(val,onbits,offbits) (((val) & ((onbits)|(offbits))) == (onbits))
 #define BITS_EQUAL(b1,b2,mask) (((unsigned)(b1) & (unsigned)(mask)) \
@@@@ -95,7 +100,7 @@@@
 
 /* This is used when working on a new protocol version in CVS, and should
  * be a new non-zero value for each CVS change that affects the protocol.
- * It must ALWAYS be 0 when the protocol goes final! */
+ * It must ALWAYS be 0 when the protocol goes final (and NEVER before)! */
 #define SUBPROTOCOL_VERSION 0
 
 /* We refuse to interoperate with versions that are not in this range.
@


1.5
log
@Plug security hole (int overflow in rsync server).
@
text
@d1 1
a1 1
$OpenBSD: patch-rsync_h,v 1.4 2003/05/11 22:20:55 naddy Exp $
@


1.5.2.1
log
@update to 2.6.2;

SECURITY:
Paths sent to an rsync daemon are more thoroughly sanitized when
chroot is not used.  If you're running a non-read-only rsync daemon
with chroot disabled, *please upgrade*, especially if the user privs
you run rsync under is anything above "nobody".
@
text
@d1 1
a1 1
$OpenBSD: patch-rsync_h,v 1.5 2003/12/04 17:54:17 espie Exp $
@


1.4
log
@enable IPv6 support; from Hajimu UMEMOTO <ume@@FreeBSD.org>; ok espie@@
@
text
@d1 3
a3 3
$OpenBSD: patch-rsync_h,v 1.3 2002/03/15 23:54:53 espie Exp $
--- rsync.h.orig	Sun Jan 26 21:11:16 2003
+++ rsync.h	Mon Mar  3 23:46:33 2003
d15 3
a17 1
@@@@ -182,10 +178,6 @@@@ enum logcode {FNONE=0, FERROR=1, FINFO=2
d19 2
a20 2
 #ifdef HAVE_GLOB_H
 #include <glob.h>
a22 4
-#ifdef HAVE_MALLOC_H
-#  include <malloc.h>
 #endif
 
d24 2
@


1.4.2.1
log
@Security fix MFC:
Fixed by espie@@

Plug security hole (int overflow in rsync server).
@
text
@d1 3
a3 3
$OpenBSD: patch-rsync_h,v 1.4 2003/05/11 22:20:55 naddy Exp $
--- rsync.h.orig	2003-12-04 05:23:30.000000000 +0100
+++ rsync.h	2003-12-04 09:32:51.000000000 +0100
d15 3
a17 1
@@@@ -184,10 +180,6 @@@@ enum logcode {FNONE=0, FERROR=1, FINFO=2
d19 4
a24 4
-#ifdef HAVE_MALLOC_H
-#  include <malloc.h>
-#endif
-
a25 2
 #include <pwd.h>
 #include <grp.h>
@


1.4.2.2
log
@update to 2.6.2;

SECURITY:
Paths sent to an rsync daemon are more thoroughly sanitized when
chroot is not used.  If you're running a non-read-only rsync daemon
with chroot disabled, *please upgrade*, especially if the user privs
you run rsync under is anything above "nobody".
@
text
@d1 1
a1 1
$OpenBSD: patch-rsync_h,v 1.4.2.1 2003/12/04 22:04:03 margarida Exp $
@


1.3
log
@Update to 2.5.4, fix zlib issues.
@
text
@d1 4
a4 4
$OpenBSD$
--- rsync.h.orig	Sat Feb 23 01:17:50 2002
+++ rsync.h	Thu Mar 14 15:14:16 2002
@@@@ -113,10 +113,6 @@@@ enum logcode {FNONE=0, FERROR=1, FINFO=2
d15 1
a15 1
@@@@ -181,10 +177,6 @@@@ enum logcode {FNONE=0, FERROR=1, FINFO=2
@


1.3.6.1
log
@Security fix MFC:
Fixed by espie@@

Plug security hole (int overflow in rsync server).
@
text
@d1 4
a4 4
$OpenBSD: patch-rsync_h,v 1.3 2002/03/15 23:54:53 espie Exp $
--- rsync.h.orig	Thu Dec  4 04:23:30 2003
+++ rsync.h	Thu Dec  4 21:39:59 2003
@@@@ -114,10 +114,6 @@@@ enum logcode {FNONE=0, FERROR=1, FINFO=2
d15 1
a15 1
@@@@ -182,10 +178,6 @@@@ enum logcode {FNONE=0, FERROR=1, FINFO=2
@


1.2
log
@Update to 2.5.2.
@
text
@d1 6
a6 4
$OpenBSD: patch-rsync_h,v 1.1 2002/01/24 23:25:32 naddy Exp $
--- rsync.h.orig	Thu Jan  3 08:09:36 2002
+++ rsync.h	Thu Jan 24 23:35:43 2002
@@@@ -343,9 +343,9 @@@@ struct sum_buf {
d8 8
a15 10
 struct sum_struct {
   OFF_T flength;		/* total file length */
-  int count;			/* how many chunks */
-  int remainder;		/* flength % block_length */
-  int n;			/* block_length */
+  size_t count;			/* how many chunks */
+  size_t remainder;		/* flength % block_length */
+  size_t n;			/* block_length */
   struct sum_buf *sums;		/* points to info for each chunk */
 };
d17 9
@


1.1
log
@security fix from Sebastian Krahmer <krahmer@@suse.de>, taken from rsync CVS
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.2.1
log
@MFC:
update to 2.5.1
@
text
@d1 1
a1 1
$OpenBSD: patch-rsync_h,v 1.1 2002/01/24 23:25:32 naddy Exp $
@


1.1.2.2
log
@MFC:
Update to 2.5.4: fixes zlib and supplementary groups security issues.
@
text
@d1 4
a4 6
$OpenBSD$
--- rsync.h.orig	Sat Feb 23 01:17:50 2002
+++ rsync.h	Thu Mar 14 15:14:16 2002
@@@@ -113,10 +113,6 @@@@ enum logcode {FNONE=0, FERROR=1, FINFO=2
 #include <string.h>
 #endif
d6 10
a15 8
-#ifdef HAVE_MALLOC_H
-#include <malloc.h>
-#endif
-
 #ifdef TIME_WITH_SYS_TIME
 #include <sys/time.h>
 #include <time.h>
@@@@ -181,10 +177,6 @@@@ enum logcode {FNONE=0, FERROR=1, FINFO=2
a16 9
 #ifdef HAVE_GLOB_H
 #include <glob.h>
-#endif
-
-#ifdef HAVE_MALLOC_H
-#  include <malloc.h>
 #endif
 
 /* these are needed for the uid/gid mapping code */
@


