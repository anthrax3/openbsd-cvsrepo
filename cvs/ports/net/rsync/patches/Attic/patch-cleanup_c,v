head	1.2;
access;
symbols
	OPENBSD_3_2:1.2.0.2;
locks; strict;
comment	@# @;


1.2
date	2003.02.20.10.52.45;	author espie;	state dead;
branches
	1.2.2.1;
next	1.1;

1.1
date	2002.12.14.18.06.58;	author espie;	state Exp;
branches;
next	;

1.2.2.1
date	2003.02.23.18.33.14;	author brad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@2.5.6, since no-one reported problems.
New: can use ssh transport in server mode !
@
text
@$OpenBSD: patch-cleanup_c,v 1.1 2002/12/14 18:06:58 espie Exp $
--- cleanup.c.orig	Sat Dec 14 18:55:23 2002
+++ cleanup.c	Sat Dec 14 18:55:55 2002
@@@@ -43,6 +43,12 @@@@ void _exit_cleanup(int code, const char 
 	int ocode = code;
 	extern int keep_partial;
 	extern int log_got_error;
+	static int in_cleanup = 0;
+
+	/* forbid recursive calls */
+	if (in_cleanup)
+		return;
+	in_cleanup = 1;
 
 	signal(SIGUSR1, SIG_IGN);
 	signal(SIGUSR2, SIG_IGN);
@


1.2.2.1
log
@MFC:
disallow infinite call chains of exit_cleanup
(this happened when the pipe to rsync got broken, because rsync would
then try to write to stderr, find out it didn't work, and call exit_cleanup,
which would then try it all over again... oops.
--
From: David Krause <openbsd@@davidkrause.com>
@
text
@d1 4
a4 4
$OpenBSD$
--- cleanup.c.orig	Tue Mar 26 19:03:13 2002
+++ cleanup.c	Sun Feb 23 00:57:22 2003
@@@@ -43,6 +43,13 @@@@ void _exit_cleanup(int code, const char 
d8 1
a8 1
+	static int inside_cleanup = 0;
d10 2
a11 2
+	if (inside_cleanup > 10) {
+		/* prevent the occasional infinite recursion */
d13 1
a13 2
+	}
+	inside_cleanup++;
@


1.1
log
@disallow infinite call chains of exit_cleanup
(this happened when the pipe to rsync got broken, because rsync would
then try to write to stderr, find out it didn't work, and call exit_cleanup,
which would then try it all over again... oops.
@
text
@d1 1
a1 1
$OpenBSD$
@

