head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.6
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2016.01.10.21.36.22;	author naddy;	state Exp;
branches;
next	1.5;
commitid	Et6OMr902Is092WG;

1.5
date	2014.06.30.19.34.36;	author naddy;	state Exp;
branches
	1.5.8.1;
next	1.4;
commitid	M6fFKzjQEx6K3N6R;

1.4
date	2014.04.14.13.34.19;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2013.10.10.12.01.31;	author naddy;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2011.10.18.20.24.24;	author naddy;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.02.15.13.25;	author ajacoutot;	state Exp;
branches;
next	;

1.3.2.1
date	2014.05.22.08.05.27;	author jasper;	state Exp;
branches;
next	;

1.5.8.1
date	2016.01.29.21.44.37;	author naddy;	state Exp;
branches;
next	;
commitid	uxwOz74sHs2zimwF;


desc
@@


1.6
log
@Update to 3.1.2: This is a bug-fix release. It includes a security
fix for a transfer from a sender that you don't fully trust.

Originally gonzalo@@ submitted a broken update to espie@@ who passed
it around and then everybody forgot.
@
text
@$OpenBSD: patch-authenticate_c,v 1.5 2014/06/30 19:34:36 naddy Exp $
--- authenticate.c.orig	Mon Aug 24 20:54:00 2015
+++ authenticate.c	Tue Dec 22 21:23:23 2015
@@@@ -350,7 +350,7 @@@@ void auth_client(int fd, const char *user, const char 
 	char pass2[MAX_DIGEST_LEN*2];
 
 	if (!user || !*user)
-		user = "nobody";
+		user = "_rsync";
 
 	if (!(pass = getpassf(password_file))
 	 && !(pass = getenv("RSYNC_PASSWORD"))) {
@


1.5
log
@Update to rsync 3.1.1.  Notable enhancement:
Add support for a new-compression idiom that does not compress all the
matching data in a transfer.  This can help rsync to use less cpu when a
transfer has a lot of matching data,

Switch to bundled zlib in order to support both old and new compression.
ok sthen@@, espie@@
@
text
@d1 4
a4 4
$OpenBSD$
--- authenticate.c.orig	Sun Apr 13 22:51:36 2014
+++ authenticate.c	Fri Jun 27 18:59:01 2014
@@@@ -349,7 +349,7 @@@@ void auth_client(int fd, const char *user, const char 
@


1.5.8.1
log
@Update to 3.1.2: This is a bug-fix release. It includes a security
fix for a transfer from a sender that you don't fully trust.
@
text
@d1 4
a4 4
$OpenBSD: patch-authenticate_c,v 1.5 2014/06/30 19:34:36 naddy Exp $
--- authenticate.c.orig	Mon Aug 24 20:54:00 2015
+++ authenticate.c	Tue Dec 22 21:23:23 2015
@@@@ -350,7 +350,7 @@@@ void auth_client(int fd, const char *user, const char 
@


1.4
log
@Avoid infinite loop if "secrets file" is used in rsyncd server configuration
and a user attempts login with an invalid username. Bug was introduced in
rsync 3.0.5.  OK espie@@
@
text
@d1 4
a4 81
$OpenBSD: patch-authenticate_c,v 1.3 2013/10/10 12:01:31 naddy Exp $

Most hunks are this:-

From 0dedfbce2c1b851684ba658861fe9d620636c56a Mon Sep 17 00:00:00 2001
From: Wayne Davison <wayned@@samba.org>
Date: Sun, 13 Apr 2014 13:44:58 -0700
Subject: [PATCH] Avoid infinite wait reading secrets file.

Last hunk changes default privdrop uid from nobody to _rsync.

--- authenticate.c.orig	Mon Apr 14 14:13:45 2014
+++ authenticate.c	Mon Apr 14 14:13:38 2014
@@@@ -102,15 +102,16 @@@@ static const char *check_secret(int module, const char
 	char pass2[MAX_DIGEST_LEN*2];
 	const char *fname = lp_secrets_file(module);
 	STRUCT_STAT st;
-	int fd, ok = 1;
+	int ok = 1;
 	int user_len = strlen(user);
 	int group_len = group ? strlen(group) : 0;
 	char *err;
+	FILE *fh;
 
-	if (!fname || !*fname || (fd = open(fname, O_RDONLY)) < 0)
+	if (!fname || !*fname || (fh = fopen(fname, "r")) == NULL)
 		return "no secrets file";
 
-	if (do_fstat(fd, &st) == -1) {
+	if (do_fstat(fileno(fh), &st) == -1) {
 		rsyserr(FLOG, errno, "fstat(%s)", fname);
 		ok = 0;
 	} else if (lp_strict_modes(module)) {
@@@@ -123,29 +124,30 @@@@ static const char *check_secret(int module, const char
 		}
 	}
 	if (!ok) {
-		close(fd);
+		fclose(fh);
 		return "ignoring secrets file";
 	}
 
 	if (*user == '#') {
 		/* Reject attempt to match a comment. */
-		close(fd);
+		fclose(fh);
 		return "invalid username";
 	}
 
 	/* Try to find a line that starts with the user (or @@group) name and a ':'. */
 	err = "secret not found";
-	while ((user || group) && read_line_old(fd, line, sizeof line, 1)) {
-		const char **ptr, *s;
+	while ((user || group) && fgets(line, sizeof line, fh) != NULL) {
+		const char **ptr, *s = strtok(line, "\n\r");
 		int len;
-		if (*line == '@@') {
+		if (!s)
+			continue;
+		if (*s == '@@') {
 			ptr = &group;
 			len = group_len;
-			s = line+1;
+			s++;
 		} else {
 			ptr = &user;
 			len = user_len;
-			s = line;
 		}
 		if (!*ptr || strncmp(s, *ptr, len) != 0 || s[len] != ':')
 			continue;
@@@@ -158,7 +160,7 @@@@ static const char *check_secret(int module, const char
 		*ptr = NULL; /* Don't look for name again. */
 	}
 
-	close(fd);
+	fclose(fh);
 
 	memset(line, 0, sizeof line);
 	memset(pass2, 0, sizeof pass2);
@@@@ -347,7 +349,7 @@@@ void auth_client(int fd, const char *user, const char 
@


1.3
log
@Update to 3.1.0. This has various minor improvements, internal
changes, and now uses the system zlib.
https://rsync.samba.org/ftp/rsync/src/rsync-3.1.0-NEWS

Clean up some cruft:
* Dropped the -T from --with-rsh.  No tty allocation is the default
for ssh, and if somebody sets RequestTTY in .ssh/config, they should
get what they want.
* Removed pointless SECURITY file.
* Replaced the outdated DESCR text with the description from the man page.

ok espie@@
@
text
@d1 81
a81 4
$OpenBSD: patch-authenticate_c,v 1.2 2011/10/18 20:24:24 naddy Exp $
--- authenticate.c.orig	Sun Jun  9 21:11:53 2013
+++ authenticate.c	Thu Oct  3 15:52:41 2013
@@@@ -347,7 +347,7 @@@@ void auth_client(int fd, const char *user, const char 
@


1.3.2.1
log
@Security fix for CVE-2014-2855
@
text
@d1 4
a4 81
$OpenBSD: patch-authenticate_c,v 1.4 2014/04/14 13:34:19 sthen Exp $

Most hunks are this:-

From 0dedfbce2c1b851684ba658861fe9d620636c56a Mon Sep 17 00:00:00 2001
From: Wayne Davison <wayned@@samba.org>
Date: Sun, 13 Apr 2014 13:44:58 -0700
Subject: [PATCH] Avoid infinite wait reading secrets file.

Last hunk changes default privdrop uid from nobody to _rsync.

--- authenticate.c.orig	Mon Apr 14 14:13:45 2014
+++ authenticate.c	Mon Apr 14 14:13:38 2014
@@@@ -102,15 +102,16 @@@@ static const char *check_secret(int module, const char
 	char pass2[MAX_DIGEST_LEN*2];
 	const char *fname = lp_secrets_file(module);
 	STRUCT_STAT st;
-	int fd, ok = 1;
+	int ok = 1;
 	int user_len = strlen(user);
 	int group_len = group ? strlen(group) : 0;
 	char *err;
+	FILE *fh;
 
-	if (!fname || !*fname || (fd = open(fname, O_RDONLY)) < 0)
+	if (!fname || !*fname || (fh = fopen(fname, "r")) == NULL)
 		return "no secrets file";
 
-	if (do_fstat(fd, &st) == -1) {
+	if (do_fstat(fileno(fh), &st) == -1) {
 		rsyserr(FLOG, errno, "fstat(%s)", fname);
 		ok = 0;
 	} else if (lp_strict_modes(module)) {
@@@@ -123,29 +124,30 @@@@ static const char *check_secret(int module, const char
 		}
 	}
 	if (!ok) {
-		close(fd);
+		fclose(fh);
 		return "ignoring secrets file";
 	}
 
 	if (*user == '#') {
 		/* Reject attempt to match a comment. */
-		close(fd);
+		fclose(fh);
 		return "invalid username";
 	}
 
 	/* Try to find a line that starts with the user (or @@group) name and a ':'. */
 	err = "secret not found";
-	while ((user || group) && read_line_old(fd, line, sizeof line, 1)) {
-		const char **ptr, *s;
+	while ((user || group) && fgets(line, sizeof line, fh) != NULL) {
+		const char **ptr, *s = strtok(line, "\n\r");
 		int len;
-		if (*line == '@@') {
+		if (!s)
+			continue;
+		if (*s == '@@') {
 			ptr = &group;
 			len = group_len;
-			s = line+1;
+			s++;
 		} else {
 			ptr = &user;
 			len = user_len;
-			s = line;
 		}
 		if (!*ptr || strncmp(s, *ptr, len) != 0 || s[len] != ':')
 			continue;
@@@@ -158,7 +160,7 @@@@ static const char *check_secret(int module, const char
 		*ptr = NULL; /* Don't look for name again. */
 	}
 
-	close(fd);
+	fclose(fh);
 
 	memset(line, 0, sizeof line);
 	memset(pass2, 0, sizeof pass2);
@@@@ -347,7 +349,7 @@@@ void auth_client(int fd, const char *user, const char 
@


1.2
log
@Update to 3.0.9.
Drop USE_GROFF, the only formatting difference is some extra whitespace.

ok espie@@
@
text
@d1 4
a4 4
$OpenBSD: patch-authenticate_c,v 1.1 2011/04/02 15:13:25 ajacoutot Exp $
--- authenticate.c.orig	Sat Sep 10 22:38:17 2011
+++ authenticate.c	Tue Oct 18 16:51:20 2011
@@@@ -283,7 +283,7 @@@@ void auth_client(int fd, const char *user, const char 
@


1.1
log
@Use the "_rsync" user and group by default, instead of nobody.
Tweak man pages accordingly.
While here:
simplify @@extra marker in PLIST
set GPL version

"looks good" to naddy@@
with inputs from and ok schwarze@@, ok sthen@@
@
text
@d1 4
a4 4
$OpenBSD$
--- authenticate.c.orig	Mon Mar 28 13:59:40 2011
+++ authenticate.c	Mon Mar 28 13:59:55 2011
@@@@ -291,7 +291,7 @@@@ void auth_client(int fd, const char *user, const char 
@

