head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.50
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.48
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.46
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.42
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.44
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.40
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.38
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.36
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.34
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.32
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.30
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.28
	OPENBSD_5_0:1.1.0.26
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.24
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.22
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.20
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.18
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.16
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.14
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.12
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.10
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2005.05.24.00.00.11;	author mjc;	state Exp;
branches;
next	;


desc
@@


1.1
log
@update to cope with new libnet
and regen patches while here
ok pvalchev@@ msf@@
@
text
@$OpenBSD$
--- udptcpwalk.c.orig	Sat Dec  5 10:24:52 1998
+++ udptcpwalk.c	Mon May 23 09:50:51 2005
@@@@ -111,7 +111,7 @@@@ udptcpwalk(struct firepack *fp)
                  *  differentiate between probes.  The TTL is bumped up so we
                  *  can determine how many hops away the gateway is.
                  */
-                build_ip(t_size,
+                libnet_build_ip(t_size,
                         0,                      /* regular service */
                         ++fp->id,
                         0,                      /* No fragmentation bits set */
@@@@ -125,13 +125,13 @@@@ udptcpwalk(struct firepack *fp)
 
                 if (fp->protocol == IPPROTO_UDP)
                 {
-                    build_udp(fp->sport, cport, NULL, 0, IP_H + pak_buf);
+                    libnet_build_udp(fp->sport, cport, NULL, 0, IP_H + pak_buf);
                 }
                 else
                 {
-                    build_tcp(fp->sport,
+                    libnet_build_tcp(fp->sport,
                             cport,
-                            get_prand(PRu32),
+                            libnet_get_prand(PRu32),
                             0L,                 /* No ACK number */
                             TH_SYN,
                             1024,
@@@@ -140,7 +140,7 @@@@ udptcpwalk(struct firepack *fp)
                             0,
                             pak_buf + IP_H);
                 }
-                do_checksum(pak_buf, fp->protocol, t_size);
+                libnet_do_checksum(pak_buf, fp->protocol, t_size);
 
                 for (j = 0, fp->red_flag = 0; j < fp->red_cnt; j++)
                 {
@@@@ -148,7 +148,7 @@@@ udptcpwalk(struct firepack *fp)
                      *  Write the packet to the network.
                      */
                     usleep(fp->write_pause);
-                    c = write_ip(fp->sock, pak_buf, IP_H + t_size);
+                    c = libnet_write_ip(fp->sock, pak_buf, IP_H + t_size);
                     if (c < IP_H + t_size)
                     {
                         fprintf(stderr,
@
