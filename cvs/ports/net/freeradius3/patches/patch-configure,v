head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	sthen_20151112:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.05.23.14.35.04;	author sthen;	state Exp;
branches
	1.4.2.1;
next	1.3;
commitid	haky2UiYahIi3788;

1.3
date	2016.06.27.20.35.31;	author sthen;	state dead;
branches;
next	1.2;
commitid	cghGjBemClhHZNp9;

1.2
date	2016.01.25.20.32.15;	author sthen;	state Exp;
branches;
next	1.1;
commitid	6E63CfwovQ5qR6tA;

1.1
date	2015.11.12.12.59.37;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	evojWbexiQ2bkKAl;

1.1.1.1
date	2015.11.12.12.59.37;	author sthen;	state Exp;
branches;
next	;
commitid	evojWbexiQ2bkKAl;

1.4.2.1
date	2017.05.30.22.48.27;	author sthen;	state Exp;
branches;
next	;
commitid	4ba7g678hRBZqcIV;


desc
@@


1.4
log
@apply patch-configure_ac to configure; now freeradius3 is back on a normal
release it's not regenerating the autoconf scripts. fixes accidentally picking
up collectdclient.

use WANT_CXX and MODGCC4_LANGS=c; thread-local-storage.
@
text
@$OpenBSD$

Don't allow picking up collectdclient, freeradius autoconf's "smart"
library detection doesn't offer a nice way to do it.

Index: configure
--- configure.orig
+++ configure
@@@@ -7002,7 +7002,7 @@@@ if test "x$smart_lib" != "x"; then
   SMART_LIBS="$smart_ldflags $smart_lib $SMART_LIBS"
 fi
 
-if test "x$ac_cv_lib_collectdclient_lcc_connect" != "xyes"; then
+if true || test "x$ac_cv_lib_collectdclient_lcc_connect" != "xyes"; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: collectdclient library not found. Use --with-collectdclient-lib-dir=<path>." >&5
 $as_echo "$as_me: WARNING: collectdclient library not found. Use --with-collectdclient-lib-dir=<path>." >&2;}
 else
@


1.4.2.1
log
@MFC update to freeradius 3.0.14.

Security update for configurations with TLS; FreeRADIUS intentionally
skips inner authentication for TLS resumption, however it allows a
session to be resumed before the initial connection has authenticated,
allowing access without auth to a malicious supplicant. CVE-2017-9148,
See http://seclists.org/oss-sec/2017/q2/342

Workaround: set "enabled = no" in the cache section of raddb/mods-enabled/eap.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.4 2017/05/23 14:35:04 sthen Exp $
@


1.3
log
@switch to a 3.0.x snapshot of freeradius, it's fairly low risk and fixes
a few problems with 3.0.11 that are worth getting in before 6.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.2 2016/01/25 20:32:15 sthen Exp $
d3 2
a4 1
Don't pick up collectd if installed at build time.
d6 3
a8 2
--- configure.orig	Mon Jan 25 18:27:03 2016
+++ configure	Mon Jan 25 20:09:38 2016
@


1.2
log
@update to freeradius-3.0.11
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.1.1.1 2015/11/12 12:59:37 sthen Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- configure.orig	Wed Nov 11 17:16:18 2015
+++ configure	Wed Nov 11 17:19:35 2015
@@@@ -7005,7 +7005,7 @@@@ if test "x$smart_lib" != "x"; then
@


1.1.1.1
log
@Import ports/net/freeradius3, in parallel with net/freeradius (configuration
has changed and isn't directly compatible, additionally future 3.x releases
might well restrict arch support). Feedback gsoares, feedback/ok jca@@.
@
text
@@
