head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.11.29.15.50.20;	author ajacoutot;	state Exp;
branches;
next	1.9;
commitid	R4zDyQEPMusoKaj3;

1.9
date	2015.02.17.22.08.36;	author sthen;	state Exp;
branches;
next	1.8;
commitid	xaIHtCntkggL7CxN;

1.8
date	2014.12.08.10.57.09;	author ajacoutot;	state Exp;
branches;
next	1.7;
commitid	pz71RdO0gxd0iylf;

1.7
date	2013.05.03.18.43.28;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2012.08.25.10.14.37;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2012.07.04.13.00.46;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2012.04.22.13.44.09;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.08.02.14.59;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.03.18.07.52;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.01.17.17.58.04;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.10
log
@daemon_timeout is not passed to the child scripts either.
@
text
@#!/bin/sh
#
# $OpenBSD: samba.rc,v 1.9 2015/02/17 22:08:36 sthen Exp $

# "meta" script running the following rc.d(8) scripts with the given argument;
# note that daemon_flags, daemon_user, daemon_timeout and daemon_class are not
# passed to the child scripts.
_pkg_scripts="smbd nmbd"

if [ "$1" = restart ]; then
	$0 stop && $0 start
	exit
fi

if [ "$1" = stop ]; then
	for _i in ${_pkg_scripts}; do _l="${_i} ${_l}"; done
	_pkg_scripts=${_l% }
fi

for _i in ${_pkg_scripts}; do
	if [[ -x ${RCDIR}/${_i} ]]; then
		${RCDIR}/${_i} $@@ || exit $?
	fi
done
@


1.9
log
@Adjust the "meta" rc-scripts (these are used in ports with multiple daemons
which should all be started/stopped together), previously "restart" would
restart each sub-daemon in turn, but actually it should stop all daemons
and only then start them again. Additionally, as suggested by ajacoutot,
stop the procedure and return an error if stopping one of the rc scripts
failed.  ok ajacoutot@@ rpe@@
@
text
@d3 1
a3 1
# $OpenBSD: samba.rc,v 1.8 2014/12/08 10:57:09 ajacoutot Exp $
d6 2
a7 2
# note that daemon_flags, daemon_user and daemon_class are not passed to
# the child scripts.
@


1.8
log
@Make all meta rc.d scripts consistent.
While here, unbreak when options are passed (e.g. /etc/rc.d/foobar -df start)

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: samba.rc,v 1.7 2013/05/03 18:43:28 sthen Exp $
d10 5
d20 5
a24 1
for _i in ${_pkg_scripts}; do [[ -x ${RCDIR}/${_i} ]] && ${RCDIR}/${_i} $@@; done
@


1.7
log
@extra sanity checking, ensure that the rc.d scripts run by the meta script
are executable, I needed it for the bacula script which runs daemons split
between two packages, ajacoutot suggested applying to other similar scripts.
@
text
@d3 1
a3 1
# $OpenBSD: samba.rc,v 1.6 2012/08/25 10:14:37 ajacoutot Exp $
d15 1
a15 1
for _i in ${_pkg_scripts}; do [[ -x ${RCDIR}/${_i} ]] && ${RCDIR}/${_i} $1; done
@


1.6
log
@Simplify how the order of the _pkg_scripts entries get reversed on stop.

from rpe, ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: samba.rc,v 1.5 2012/07/04 13:00:46 ajacoutot Exp $
d15 1
a15 1
for _i in ${_pkg_scripts}; do ${RCDIR}/${_i} $1; done
@


1.5
log
@Add comment that daemon_flags, daemon_user and daemon_class are not passed
to the child scripts.
@
text
@d3 1
a3 1
# $OpenBSD: samba.rc,v 1.4 2012/04/22 13:44:09 ajacoutot Exp $
a9 2
set -A _s -- ${_pkg_scripts}

d11 2
a12 7
	i=$(echo ${_pkg_scripts} | wc -w)
	while [ $i -ne 0 ]; do
		i=$((i-1))
		${RCDIR}/${_s[$i]} $1
	done
else
	for i in ${_pkg_scripts}; do ${RCDIR}/$i $1; done
d14 2
@


1.4
log
@/etc/rc.d -> RCDIR
@
text
@d3 1
a3 1
# $OpenBSD: samba.rc,v 1.3 2011/07/08 02:14:59 ajacoutot Exp $
d5 3
a7 1
# "meta" script running the following rc.d(8) scripts with the given argument
@


1.3
log
@rc_scripts -> pkg_scripts
@
text
@d3 1
a3 1
# $OpenBSD: samba.rc,v 1.2 2011/04/03 18:07:52 ajacoutot Exp $
d14 1
a14 1
		/etc/rc.d/${_s[$i]} $1
d17 1
a17 1
	for i in ${_pkg_scripts}; do /etc/rc.d/$i $1; done
@


1.2
log
@Rewrite samba.rc and make it a wrapper script that calls the provided
rc.d(8) script. This is much more simple, makes much more sense and
allow for proper debugging.

discussed with robert@@
@
text
@d3 1
a3 1
# $OpenBSD: zarafa.rc,v 1.6 2010/12/27 14:50:23 ajacoutot Exp $
d6 1
a6 1
_rc_scripts="smbd nmbd"
d8 1
a8 1
set -A _s -- ${_rc_scripts}
d11 1
a11 1
	i=$(echo ${_rc_scripts} | wc -w)
d17 1
a17 1
	for i in ${_rc_scripts}; do /etc/rc.d/$i $1; done
@


1.1
log
@Add rc scripts.
While here, fix the LOCALBASE vs PREFIX and SYSCONFDIR vs /etc mess.

ok robert@@
@
text
@d3 1
a3 1
# $OpenBSD$
d5 2
a6 1
daemon="/bin/true"
d8 1
a8 1
. /etc/rc.d/rc.subr
d10 5
a14 19
_samba_daemons="smbd nmbd"

rc_start() {
	for i in ${_samba_daemons}; do /etc/rc.d/$i start; done
}

rc_check() {
	for i in ${_samba_daemons}; do /etc/rc.d/$i check || return; done
}

rc_reload() {
	for i in ${_samba_daemons}; do /etc/rc.d/$i reload; done
}

rc_stop() {
	set -A _s -- ${_samba_daemons}
	_s="${_s[1]} ${_s[0]}"
	for i in ${_s}; do
		/etc/rc.d/$i stop
d16 3
a18 3
}

rc_cmd $1
@

