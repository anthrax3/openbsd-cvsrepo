head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.6
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.04.22.11.48.36;	author jca;	state Exp;
branches;
next	1.2;
commitid	i7xEeasW0hmVMIQY;

1.2
date	2016.04.12.17.42.09;	author jca;	state Exp;
branches;
next	1.1;
commitid	UGRk8kk9vV3gDO72;

1.1
date	2015.08.25.11.04.39;	author jca;	state Exp;
branches
	1.1.2.1;
next	;
commitid	jWHBCzKs5xKamlhw;

1.1.2.1
date	2016.04.17.17.08.29;	author jca;	state Exp;
branches;
next	;
commitid	ZMnLkV4M50X9F3yT;


desc
@@


1.3
log
@Update to samba-4.4.2

Tests by Vijay Sankar and Ian, ok Ian

This release contains the security fixes introduced by 4.4.2, plus the
new features and improvements from 4.4.0:

  https://www.samba.org/samba/history/samba-4.4.0.html
@
text
@$OpenBSD: patch-buildtools_wafsamba_samba_install_py,v 1.2 2016/04/12 17:42:09 jca Exp $
Make Samba4 WAF respect OpenBSD shared libraries versioning conventions.
BUG: https://bugzilla.samba.org/show_bug.cgi?id=9774
--- buildtools/wafsamba/samba_install.py.orig	Wed Apr 13 17:18:35 2016
+++ buildtools/wafsamba/samba_install.py	Wed Apr 13 19:24:13 2016
@@@@ -117,11 +117,15 @@@@ def install_library(self):
             else:
                 inst_name    = bld.make_libname(t.target)
         elif self.vnum:
+            import sys
             vnum_base    = self.vnum.split('.')[0]
             install_name = bld.make_libname(target_name, version=self.vnum)
-            install_link = bld.make_libname(target_name, version=vnum_base)
-            inst_name    = bld.make_libname(t.target)
-            if not self.private_library:
+            if sys.platform.startswith('openbsd'):
+                install_link = install_name
+            else:
+                install_link = bld.make_libname(target_name, version=vnum_base)
+            inst_name    = bld.make_libname(t.target, version=self.vnum)
+            if not self.private_library and not sys.platform.startswith('openbsd'):
                 # only generate the dev link for non-bundled libs
                 dev_link     = bld.make_libname(target_name)
         elif getattr(self, 'soname', ''):
@@@@ -171,7 +175,7 @@@@ def apply_vscript(self):
     '''add version-script arguments to library build'''
 
     if self.env.HAVE_LD_VERSION_SCRIPT and getattr(self, 'version_script', ''):
-        self.env.append_value('LINKFLAGS', "-Wl,--version-script=%s" %
+        self.env.append_unique('LINKFLAGS', "-Wl,--version-script=%s" %
             self.version_script)
         self.version_script = None
 
@


1.2
log
@Update to samba-4.3.6

i386 build by danj@@, ok sthen@@

The changelog between 4.1.23 and 4.3.6 is too big to be described here.
The point of updating now is that 4.1.x won't receive updates for the
freshly published security advisories.  samba-4.3.8 will follow.
@
text
@d1 1
a1 1
$OpenBSD: patch-buildtools_wafsamba_samba_install_py,v 1.1 2015/08/25 11:04:39 jca Exp $
d4 5
a8 3
--- buildtools/wafsamba/samba_install.py.orig	Sun Apr 10 19:49:56 2016
+++ buildtools/wafsamba/samba_install.py	Sun Apr 10 21:06:05 2016
@@@@ -117,9 +117,12 @@@@ def install_library(self):
d10 1
d25 1
a25 1
@@@@ -169,7 +172,7 @@@@ def apply_vscript(self):
@


1.1
log
@Move samba4 to samba, and tweak the ports tree to use it.

ok ajacoutot@@

Upcoming commits will add additional tweaks.

Many thanks to Vadim Zhukov (who did most of the work), Ian McWilliam
(co-maintainer), Stuart Henderson who provided lots of support and
feedback, Antoine Jacoutot who patiently dealt with my broken diffs,
and more generally all the people involved.  Most of the recent work was
done during p2k15 and c2k15.
@
text
@d1 1
a1 1
$OpenBSD: patch-buildtools_wafsamba_samba_install_py,v 1.1.1.1 2014/05/04 16:08:29 zhuk Exp $
d4 20
a23 5
--- buildtools/wafsamba/samba_install.py.orig	Thu May  1 16:31:00 2014
+++ buildtools/wafsamba/samba_install.py	Thu May  1 16:31:00 2014
@@@@ -67,6 +67,11 @@@@ def install_library(self):
         self.env.RPATH = build_ldflags
         return
d25 5
a29 11
+    target_name = self.target
+
+    # OpenBSD-like library handling
+    osvnum = os.getenv('LIB' + target_name.replace('-', '_') + '_VERSION')
+
     # setup the install path, expanding variables
     install_path = getattr(self, 'samba_inst_path', None)
     if install_path is None:
@@@@ -76,8 +81,6 @@@@ def install_library(self):
             install_path = '${LIBDIR}'
     install_path = bld.EXPAND_VARIABLES(install_path)
a30 49
-    target_name = self.target
-
     if install_ldflags != build_ldflags:
         # we will be creating a new target name, and using that for the
         # install link. That stops us from overwriting the existing build
@@@@ -103,23 +106,37 @@@@ def install_library(self):
     if getattr(self, 'samba_realname', None):
         install_name = self.samba_realname
         install_link = None
-        if getattr(self, 'soname', ''):
+        if osvnum:
+            if getattr(self, 'soname', ''):
+                osname = self.soname
+            else:
+                osname = install_name
+            osname = re.sub(r'(\.[0-9]+)+$', '', osname) + '.' + osvnum
+            # OpenBSD requires "lib" prefix for all versioned shared libraries
+            osname = re.sub(r'^(.*/|)(?:lib)?(([^l]|l[^i]|li[^b])[^/]+)$', r'\1lib\2', osname)
+            install_name = osname
+            if getattr(self, 'soname', ''):
+                self.soname = osname
+        elif getattr(self, 'soname', ''):
             install_link = self.soname
         if getattr(self, 'samba_type', None) == 'PYTHON':
             inst_name    = bld.make_libname(t.target, nolibprefix=True, python=True)
         else:
             inst_name    = bld.make_libname(t.target)
     elif self.vnum:
-        vnum_base    = self.vnum.split('.')[0]
-        install_name = bld.make_libname(target_name, version=self.vnum)
-        install_link = bld.make_libname(target_name, version=vnum_base)
+        install_link     = None
+        if osvnum:
+            install_name = bld.make_libname(target_name, version=osvnum)
+        else:
+            install_name = bld.make_libname(target_name, version=self.vnum)
+            vnum_base    = self.vnum.split('.')[0]
         inst_name    = bld.make_libname(t.target)
-        if not self.private_library:
+        if not self.private_library and not osvnum:
             # only generate the dev link for non-bundled libs
             dev_link     = bld.make_libname(target_name)
     elif getattr(self, 'soname', ''):
         install_name = bld.make_libname(target_name)
-        install_link = self.soname
+        install_link = None
         inst_name    = bld.make_libname(t.target)
     else:
         install_name = bld.make_libname(target_name)
@


1.1.2.1
log
@Backport SECURITY update to samba-4.3.8

ok sthen@@

Fixes for:

CVE-2015-7560 (Incorrect ACL get/set allowed on symlink path)
CVE-2016-0771 (Out-of-bounds read in internal DNS server)

CVE-2015-5370 (Multiple errors in DCE-RPC code)
CVE-2016-2110 (Man in the middle attacks possible with NTLMSSP)
CVE-2016-2111 (NETLOGON Spoofing Vulnerability)
CVE-2016-2112 (LDAP client and server don't enforce integrity)
CVE-2016-2113 (Missing TLS certificate validation)
CVE-2016-2114 ("server signing = mandatory" not enforced)
CVE-2016-2115 (SMB IPC traffic is not integrity protected)
CVE-2016-2118 (SAMR and LSA man in the middle attacks possible)

CVE-2016-2118 is http://badlock.org/
@
text
@d1 1
a1 1
$OpenBSD: patch-buildtools_wafsamba_samba_install_py,v 1.2 2016/04/12 17:42:09 jca Exp $
d4 5
a8 20
--- buildtools/wafsamba/samba_install.py.orig	Sun Apr 10 19:49:56 2016
+++ buildtools/wafsamba/samba_install.py	Sun Apr 10 21:06:05 2016
@@@@ -117,9 +117,12 @@@@ def install_library(self):
         elif self.vnum:
             vnum_base    = self.vnum.split('.')[0]
             install_name = bld.make_libname(target_name, version=self.vnum)
-            install_link = bld.make_libname(target_name, version=vnum_base)
-            inst_name    = bld.make_libname(t.target)
-            if not self.private_library:
+            if sys.platform.startswith('openbsd'):
+                install_link = install_name
+            else:
+                install_link = bld.make_libname(target_name, version=vnum_base)
+            inst_name    = bld.make_libname(t.target, version=self.vnum)
+            if not self.private_library and not sys.platform.startswith('openbsd'):
                 # only generate the dev link for non-bundled libs
                 dev_link     = bld.make_libname(target_name)
         elif getattr(self, 'soname', ''):
@@@@ -169,7 +172,7 @@@@ def apply_vscript(self):
     '''add version-script arguments to library build'''
d10 11
a20 5
     if self.env.HAVE_LD_VERSION_SCRIPT and getattr(self, 'version_script', ''):
-        self.env.append_value('LINKFLAGS', "-Wl,--version-script=%s" %
+        self.env.append_unique('LINKFLAGS', "-Wl,--version-script=%s" %
             self.version_script)
         self.version_script = None
d22 49
@


