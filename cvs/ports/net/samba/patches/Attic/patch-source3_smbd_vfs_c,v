head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2017.04.05.14.52.13;	author jca;	state dead;
branches
	1.1.2.1;
next	;
commitid	HcQoZLewNeawlwNM;

1.1.2.1
date	2017.04.05.14.52.13;	author jca;	state Exp;
branches;
next	;
commitid	HcQoZLewNeawlwNM;


desc
@@


1.1
log
@file patch-source3_smbd_vfs_c was initially added on branch OPENBSD_6_0.
@
text
@@


1.1.2.1
log
@Fix a regression introduced by the fix for CVE-2017-2619

* BUG 12721: Fix regression with "follow symlinks = no"
Patch adapted from samba-4.4.13.  Tests & ok Ian
@
text
@a0 80
$OpenBSD$
--- source3/smbd/vfs.c.orig	Sat Apr  1 13:43:13 2017
+++ source3/smbd/vfs.c	Sat Apr  1 13:45:32 2017
@@@@ -1149,11 +1149,20 @@@@ NTSTATUS check_reduced_name_with_privilege(connection_
 /*******************************************************************
  Reduce a file name, removing .. elements and checking that
  it is below dir in the heirachy. This uses realpath.
+
+ If cwd_name == NULL then fname is a client given path relative
+ to the root path of the share.
+
+ If cwd_name != NULL then fname is a client given path relative
+ to cwd_name. cwd_name is relative to the root path of the share.
 ********************************************************************/
 
-NTSTATUS check_reduced_name(connection_struct *conn, const char *fname)
+NTSTATUS check_reduced_name(connection_struct *conn,
+				const char *cwd_name,
+				const char *fname)
 {
 	char *resolved_name = NULL;
+	char *new_fname = NULL;
 	bool allow_symlinks = true;
 	bool allow_widelinks = false;
 
@@@@ -1277,8 +1286,11 @@@@ NTSTATUS check_reduced_name(connection_struct *conn, c
 			/* fname can't have changed in resolved_path. */
 			const char *p = &resolved_name[rootdir_len];
 
-			/* *p can be '\0' if fname was "." */
-			if (*p == '\0' && ISDOT(fname)) {
+			/*
+			 * UNIX filesystem semantics, names consisting
+			 * only of "." or ".." CANNOT be symlinks.
+			 */
+			if (ISDOT(fname) || ISDOTDOT(fname)) {
 				goto out;
 			}
 
@@@@ -1292,11 +1304,32 @@@@ NTSTATUS check_reduced_name(connection_struct *conn, c
 			}
 
 			p++;
+
+			/*
+			 * If cwd_name is present and not ".",
+			 * then fname is relative to that, not
+			 * the root of the share. Make sure the
+			 * path we check is the one the client
+			 * sent (cwd_name+fname).
+			 */
+			if (cwd_name != NULL && !ISDOT(cwd_name)) {
+				new_fname = talloc_asprintf(talloc_tos(),
+							"%s/%s",
+							cwd_name,
+							fname);
+				if (new_fname == NULL) {
+					SAFE_FREE(resolved_name);
+					return NT_STATUS_NO_MEMORY;
+				}
+				fname = new_fname;
+			}
+
 			if (strcmp(fname, p)!=0) {
 				DEBUG(2, ("check_reduced_name: Bad access "
 					"attempt: %s is a symlink to %s\n",
 					  fname, p));
 				SAFE_FREE(resolved_name);
+				TALLOC_FREE(new_fname);
 				return NT_STATUS_ACCESS_DENIED;
 			}
 		}
@@@@ -1306,6 +1339,7 @@@@ NTSTATUS check_reduced_name(connection_struct *conn, c
 
 	DBG_INFO("%s reduced to %s\n", fname, resolved_name);
 	SAFE_FREE(resolved_name);
+	TALLOC_FREE(new_fname);
 	return NT_STATUS_OK;
 }
 
@

