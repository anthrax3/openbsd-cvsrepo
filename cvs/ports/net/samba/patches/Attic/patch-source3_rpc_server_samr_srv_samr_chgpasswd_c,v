head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.8
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.08.25.11.04.39;	author jca;	state dead;
branches;
next	1.3;
commitid	jWHBCzKs5xKamlhw;

1.3
date	2014.04.10.00.50.58;	author brad;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2013.03.28.15.26.48;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2012.12.17.00.52.58;	author brad;	state Exp;
branches;
next	;

1.3.2.1
date	2014.04.12.21.24.12;	author brad;	state Exp;
branches;
next	;

1.3.4.1
date	2014.04.18.06.10.37;	author brad;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Move samba4 to samba, and tweak the ports tree to use it.

ok ajacoutot@@

Upcoming commits will add additional tweaks.

Many thanks to Vadim Zhukov (who did most of the work), Ian McWilliam
(co-maintainer), Stuart Henderson who provided lots of support and
feedback, Antoine Jacoutot who patiently dealt with my broken diffs,
and more generally all the people involved.  Most of the recent work was
done during p2k15 and c2k15.
@
text
@$OpenBSD: patch-source3_rpc_server_samr_srv_samr_chgpasswd_c,v 1.3 2014/04/10 00:50:58 brad Exp $

Password lockout not enforced for SAMR password changes.
CVE-2013-4496

--- source3/rpc_server/samr/srv_samr_chgpasswd.c.orig	Wed May  8 04:16:26 2013
+++ source3/rpc_server/samr/srv_samr_chgpasswd.c	Wed Apr  9 17:29:56 2014
@@@@ -1106,6 +1106,8 @@@@ NTSTATUS pass_oem_change(char *user, const char *rhost
 	struct samu *sampass = NULL;
 	NTSTATUS nt_status;
 	bool ret = false;
+	bool updated_badpw = false;
+	NTSTATUS update_login_attempts_status;
 
 	if (!(sampass = samu_new(NULL))) {
 		return NT_STATUS_NO_MEMORY;
@@@@ -1121,6 +1123,13 @@@@ NTSTATUS pass_oem_change(char *user, const char *rhost
 		return NT_STATUS_NO_SUCH_USER;
 	}
 
+	/* Quit if the account was locked out. */
+	if (pdb_get_acct_ctrl(sampass) & ACB_AUTOLOCK) {
+		DEBUG(3,("check_sam_security: Account for user %s was locked out.\n", user));
+		TALLOC_FREE(sampass);
+		return NT_STATUS_ACCOUNT_LOCKED_OUT;
+	}
+
 	nt_status = check_oem_password(user,
 				       password_encrypted_with_lm_hash,
 				       old_lm_hash_encrypted,
@@@@ -1128,6 +1137,52 @@@@ NTSTATUS pass_oem_change(char *user, const char *rhost
 				       old_nt_hash_encrypted,
 				       sampass,
 				       &new_passwd);
+
+	/*
+	 * Notify passdb backend of login success/failure. If not
+	 * NT_STATUS_OK the backend doesn't like the login
+	 */
+	update_login_attempts_status = pdb_update_login_attempts(sampass,
+						NT_STATUS_IS_OK(nt_status));
+
+	if (!NT_STATUS_IS_OK(nt_status)) {
+		bool increment_bad_pw_count = false;
+
+		if (NT_STATUS_EQUAL(nt_status, NT_STATUS_WRONG_PASSWORD) &&
+		    (pdb_get_acct_ctrl(sampass) & ACB_NORMAL) &&
+		    NT_STATUS_IS_OK(update_login_attempts_status))
+		{
+			increment_bad_pw_count = true;
+		}
+
+		if (increment_bad_pw_count) {
+			pdb_increment_bad_password_count(sampass);
+			updated_badpw = true;
+		} else {
+			pdb_update_bad_password_count(sampass,
+						      &updated_badpw);
+		}
+	} else {
+
+		if ((pdb_get_acct_ctrl(sampass) & ACB_NORMAL) &&
+		    (pdb_get_bad_password_count(sampass) > 0)){
+			pdb_set_bad_password_count(sampass, 0, PDB_CHANGED);
+			pdb_set_bad_password_time(sampass, 0, PDB_CHANGED);
+			updated_badpw = true;
+		}
+	}
+
+	if (updated_badpw) {
+		NTSTATUS update_status;
+		become_root();
+		update_status = pdb_update_sam_account(sampass);
+		unbecome_root();
+
+		if (!NT_STATUS_IS_OK(update_status)) {
+			DEBUG(1, ("Failed to modify entry: %s\n",
+				  nt_errstr(update_status)));
+		}
+	}
 
 	if (!NT_STATUS_IS_OK(nt_status)) {
 		TALLOC_FREE(sampass);
@


1.3
log
@Fix a security issue with Samba..

Password lockout not enforced for SAMR password changes. CVE-2013-4496

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3.4.1
log
@Fix a security issue with Samba..

Password lockout not enforced for SAMR password changes. CVE-2013-4496

and

Fix WANTLIB/LDEP sysutils/e2fsprogs for ads FLAVOR
fix MASTER_SITES

ok MAINTAINER
@
text
@d1 1
a1 1
$OpenBSD: patch-source3_rpc_server_samr_srv_samr_chgpasswd_c,v 1.3 2014/04/10 00:50:58 brad Exp $
@


1.3.2.1
log
@Fix a security issue with Samba..

Password lockout not enforced for SAMR password changes. CVE-2013-4496

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-source3_rpc_server_samr_srv_samr_chgpasswd_c,v 1.3 2014/04/10 00:50:58 brad Exp $
@


1.2
log
@Update to Samba 3.6.13.

ok MAINTAINER sthen@@
@
text
@d1 13
a13 5
$OpenBSD: patch-source3_rpc_server_samr_srv_samr_chgpasswd_c,v 1.1 2012/12/17 00:52:58 brad Exp $
--- source3/rpc_server/samr/srv_samr_chgpasswd.c.orig	Sat Dec  8 23:53:28 2012
+++ source3/rpc_server/samr/srv_samr_chgpasswd.c	Sat Dec  8 23:54:49 2012
@@@@ -73,8 +73,12 @@@@ static int findpty(char **slave)
 	*slave = NULL;
d15 69
a83 10
 #if defined(HAVE_GRANTPT)
+#if defined(HAVE_POSIX_OPENPT)
+	if ((master = posix_openpt(O_RDWR|O_NOCTTY)) >= 0) {
+#else
 	/* Try to open /dev/ptmx. If that fails, fall through to old method. */
 	if ((master = sys_open("/dev/ptmx", O_RDWR, 0)) >= 0) {
+#endif
 		grantpt(master);
 		unlockpt(master);
 		line = (char *)ptsname(master);
@


1.1
log
@Update to Samba 3.6.10. Also add a patch from naddy@@ to make use
of posix_openpt().

From MAINTAINER

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@

