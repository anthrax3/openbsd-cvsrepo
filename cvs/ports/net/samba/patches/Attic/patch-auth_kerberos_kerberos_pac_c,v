head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2016.12.23.22.35.36;	author jca;	state dead;
branches
	1.1.2.1;
next	;
commitid	ROr0Ptf5whU2K9J8;

1.1.2.1
date	2016.12.23.22.35.36;	author jca;	state Exp;
branches;
next	;
commitid	ROr0Ptf5whU2K9J8;


desc
@@


1.1
log
@file patch-auth_kerberos_kerberos_pac_c was initially added on branch OPENBSD_6_0.
@
text
@@


1.1.2.1
log
@SECURITY update for 4.4.8 CVEs

CVE-2016-2123: Fix DNS vuln ZDI-CAN-3995.
CVE-2016-2125: Don't send delegated credentials to all servers.
CVE-2016-2126: auth/kerberos: Only allow known checksum types in check_pac_checksum().

Test by Ian MacWilliam
@
text
@a0 50
$OpenBSD$

commit ce31a69a32d2bd6975006e428afe4584f6b7bc43
Author: Stefan Metzmacher <metze@@samba.org>
Date:   Tue Nov 22 17:08:46 2016 +0100

    CVE-2016-2126: auth/kerberos: only allow known checksum types in check_pac_checksum()

    aes based checksums can only be checked with the
    corresponding aes based keytype.

    Otherwise we may trigger an undefined code path
    deep in the kerberos libraries, which can leed to
    segmentation faults.

    BUG: https://bugzilla.samba.org/show_bug.cgi?id=12446

    Signed-off-by: Stefan Metzmacher <metze@@samba.org>

--- auth/kerberos/kerberos_pac.c.orig	Wed Dec 21 12:14:39 2016
+++ auth/kerberos/kerberos_pac.c	Wed Dec 21 14:20:55 2016
@@@@ -39,6 +39,28 @@@@ krb5_error_code check_pac_checksum(DATA_BLOB pac_data,
 	krb5_boolean checksum_valid = false;
 	krb5_data input;
 
+	switch (sig->type) {
+	case CKSUMTYPE_HMAC_MD5:
+		/* ignores the key type */
+		break;
+	case CKSUMTYPE_HMAC_SHA1_96_AES_256:
+		if (KRB5_KEY_TYPE(keyblock) != ENCTYPE_AES256_CTS_HMAC_SHA1_96) {
+			return EINVAL;
+		}
+		/* ok */
+		break;
+	case CKSUMTYPE_HMAC_SHA1_96_AES_128:
+		if (KRB5_KEY_TYPE(keyblock) != ENCTYPE_AES128_CTS_HMAC_SHA1_96) {
+			return EINVAL;
+		}
+		/* ok */
+		break;
+	default:
+		DEBUG(2,("check_pac_checksum: Checksum Type %d is not supported\n",
+			(int)sig->type));
+		return EINVAL;
+	}
+
 #ifdef HAVE_CHECKSUM_IN_KRB5_CHECKSUM /* Heimdal */
 	cksum.cksumtype	= (krb5_cksumtype)sig->type;
 	cksum.checksum.length	= sig->signature.length;
@

