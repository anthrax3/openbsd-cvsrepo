head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2016.06.07.14.44.08;	author dcoppa;	state dead;
branches;
next	1.1;
commitid	KisfU5u0jvfhuBLw;

1.1
date	2016.06.06.21.24.57;	author sthen;	state Exp;
branches;
next	;
commitid	RXG2GvZyNGYv6JqC;


desc
@@


1.2
log
@
Instead of patching shell_integration/CMakeLists.txt, use
'-DCMAKE_DISABLE_FIND_PACKAGE_KF5=TRUE'.

ok kirby@@ (maintainer)
@
text
@$OpenBSD: patch-shell_integration_CMakeLists_txt,v 1.1 2016/06/06 21:24:57 sthen Exp $

hidden dep, and linking fails if it's picked up (using eg++ to link): 

/usr/lib/crtbeginS.o: In function `atexit':
(.text+0x1db): undefined reference to `__cxa_atexit'
shell_integration/dolphin/CMakeFiles/ownclouddolphinpluginhelper.dir/ownclouddolphinpluginhelper.cpp.o: In function `OwncloudDolphinPluginHelper::tryConnect()':
ownclouddolphinpluginhelper.cpp:(.text+0x1ad): undefined reference to `strlen'
ownclouddolphinpluginhelper.cpp:(.text+0x21d): undefined reference to `memcpy'
ownclouddolphinpluginhelper.cpp:(.text+0x2fb): undefined reference to `__stack_smash_handler'
[..]

--- shell_integration/CMakeLists.txt.orig	Tue Feb  9 08:07:08 2016
+++ shell_integration/CMakeLists.txt	Mon Jun  6 15:21:08 2016
@@@@ -8,10 +8,4 @@@@ if( UNIX AND NOT APPLE )
 
   find_package(ECM 1.2.0 NO_MODULE QUIET)
   set(CMAKE_MODULE_PATH ${ECM_MODULE_PATH} ${ECM_KDE_MODULE_DIR} "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
-  find_package(KF5 "5.16" COMPONENTS KIO)
-  if(KF5_FOUND)
-    add_subdirectory(dolphin)
-  else()
-    message("Dolphin plugin disabled: KDE Frameworks 5.16 not found")
-  endif()
 endif()
@


1.1
log
@disable kf5 integration, it's a hidden dep and breaks the build with
linker errors if present during configure.
@
text
@d1 1
a1 1
$OpenBSD$
@

