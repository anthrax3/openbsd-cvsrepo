head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.10
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.8
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.4
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.12.0.8
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.6
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.4
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.2
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.11.0.2
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.24
	OPENBSD_5_0:1.10.0.22
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.20
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.18
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.16
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.14
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.12
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.10
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.8
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.6
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.4
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.7.0.6
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_TRACKING_SWITCH:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	kevlo_2000-FEB-03:1.1.1.1
	kevlo:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2014.10.05.19.23.00;	author lteo;	state Exp;
branches;
next	1.12;
commitid	k5OvyZLutKSnVhx2;

1.12
date	2012.09.26.02.11.05;	author lteo;	state Exp;
branches;
next	1.11;

1.11
date	2012.07.09.12.58.16;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2006.06.28.19.27.42;	author aanriot;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.04.13.15.42;	author david;	state Exp;
branches;
next	1.8;

1.8
date	2006.01.25.04.14.39;	author david;	state Exp;
branches;
next	1.7;

1.7
date	2004.04.12.14.56.31;	author sturm;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.15.23.03.09;	author naddy;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.26.12.51.39;	author bmc;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.16.14.02.46;	author bmc;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.24.07.57.52;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.29.07.31.49;	author kevlo;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.03.03.58.54;	author kevlo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.03.03.58.54;	author kevlo;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	2000.09.15.05.10.19;	author marc;	state Exp;
branches;
next	;


desc
@@


1.13
log
@tcpdump is in section 8 on OpenBSD, not section 1.
@
text
@Snort is an open source network intrusion detection and prevention system.  It
is capable of performing real-time traffic analysis, alerting, blocking and
packet logging on IP networks.  It utilizes a combination of protocol analysis
and pattern matching in order to detect a anomalies, misuse and attacks.
Snort uses a flexible rules language to describe activity that can be considered
malicious or anomalous as well as an analysis engine that incorporates a
modular plugin architecture.  Snort is capable of detecting and responding in
real-time, sending alerts, performing session sniping, logging packets, or
dropping sessions/packets when deployed in-line.

Snort has three primary functional modes.  It can be used as a packet sniffer
like tcpdump(8), a packet logger (useful for network traffic
debugging, etc), or as a full blown network intrusion detection and prevention
system.
@


1.12
log
@Update Snort to 2.9.3.1.

Thank you to all who tested: Markus Lude (sparc64), abieber@@ (macppc),
and Adam Jeanguenat (i386); I also tested on amd64 and i386.  Thank you
to Rodolfo Gouveia for help/tests on earlier versions, and brad@@ for
comments on an earlier version.

From Markus Lude (maintainer), and includes changes done based on
feedback from sthen@@ and myself.

OK abieber@@ sthen@@
@
text
@d12 1
a12 1
like tcpdump(1), a packet logger (useful for network traffic
@


1.11
log
@tedu the prelude support, pointed out by naddy
@
text
@a14 5

Available flavors:
	postgresql - enable postgresql database logging support
	mysql	   - enable mysql database logging support
	flexresp   - enable dynamic connection killing support
@


1.10
log
@- add a "prelude" flavor, snort can be used as a sensor by prelude.
- bump PKGNAME .

inputs & ok alek@@, "I have no problem with this" david@@
@
text
@a19 1
	prelude	   - enable prelude-ids support
@


1.9
log
@update to snort-2.4.3; ok sturm@@
@
text
@d20 1
@


1.8
log
@remove dead smbalert flavor; it was removed from snort over 2 years ago
since then this flavor has been doing nothing
@
text
@d1 9
a9 1
Snort is a fairly intelligent sniffer/NIDS, with a very strong rule set.
d11 4
a14 9
Snort can perform protocol analysis, content searching/matching and can be used
to detect a variety of attacks and probes, such as buffer overflows, stealth
port scans, CGI attacks, SMB probes, OS fingerprinting attempts, and much more. 

Snort uses a flexible rules language to describe traffic that it should collect
or pass, as well as a detection engine that utilizes a modular plugin
architecture.  Snort has a real-time alerting capability as well, incorporating
alerting mechanisms for syslog, a user specified file, a UNIX socket, or
WinPopup messages to Windows clients using Samba's smbclient. 
@


1.7
log
@update to snort 2.1.2

from maintainer Brian Caswell <bmc at openbsd.org>, tweaks by yours truly
@
text
@a15 1
	smbalert   - enable samba logging support
@


1.6
log
@remove WWW lines
@
text
@d3 3
a5 4
Snort can perform protocol analysis, content searching/matching and can be 
used to detect a variety of attacks and probes, such as buffer overflows, 
stealth port scans, CGI attacks, SMB probes, OS fingerprinting attempts,
and much more. 
d7 5
a11 6
Snort uses a flexible rules language to describe traffic that it should 
collect or pass, as well as a detection engine that utilizes a modular 
plugin architecture.  Snort has a real-time alerting capability as well, 
incorporating alerting mechanisms for syslog, a user specified file, a 
UNIX socket, or WinPopup messages to Windows clients using Samba's 
smbclient. 
@


1.5
log
@Updated to snort-1.8.6
--
This update contains a ton of fixes and features.  Included is a small bit
from the ChangeLog:
* corrected big endian rpc decoding
* stop stream4 from clobbering itself
* fixed file rotation bug in spo_unified
* massive speed patch for multiple CIDR blocks
* corrected ICMP printing
* added a ton of new signatures
@
text
@a14 2
WWW: ${HOMEPAGE}

@


1.4
log
@* added information about avail flavors
* added useful infromation about snort
@
text
@d1 1
a1 2
Snort is a fairly intelligent sniffer/NIDS, with a very strong rule set
ability.
@


1.3
log
@upgrade to snort 1.6.3; from <obecian@@celerity.bartoli.org>

changes by me:
- add HOMEPAGE to DESCR
- remove license type
- add SEPARATE_BUILD option
- remove unnecessary re-installation of man page durring post-install
- move message from post-install to pkg/MESSAGE
@
text
@d4 12
d17 6
@


1.2
log
@Upgrade to version 1.6.

Submitted by the maintainer.
@
text
@d1 4
a4 2
Snort is a fairly intelligent sniffer/NIDS, with a
very strong rule set ability.
@


1.1
log
@Initial revision
@
text
@a2 2

WWW: http://www.clark.net/~roesch
@


1.1.1.1
log
@Initial import of snort version 1.5.1.
The snort is the Highly flexible sniffer/basic NIDS.

Submitted by:	Kyle Hargraves <halogen@@nol.net>
@
text
@@


1.1.1.1.2.1
log
@bring net as of cut-over date into 2.7 branch
@
text
@d1 2
a2 2
Snort is a fairly intelligent sniffer/NIDS, with a very strong rule set
ability.
d4 1
a4 1
WWW: ${HOMEPAGE}
@

