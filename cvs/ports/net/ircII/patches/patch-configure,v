head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.8
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.6
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2015.09.19.23.23.13;	author naddy;	state Exp;
branches;
next	1.2;
commitid	BhCGNyALqO7W3Eto;

1.2
date	2014.09.20.18.40.27;	author naddy;	state Exp;
branches;
next	1.1;
commitid	u0nGeNbhkzZ9UvDc;

1.1
date	2014.01.19.03.04.39;	author pascal;	state Exp;
branches;
next	;


desc
@@


1.3
log
@maintenance update to 20150903; ok Brad
@
text
@$OpenBSD: patch-configure,v 1.2 2014/09/20 18:40:27 naddy Exp $
--- configure.orig	Wed Nov 26 22:46:24 2014
+++ configure	Thu Sep 17 17:44:54 2015
@@@@ -1741,6 +1741,10 @@@@ else
 
 #undef $2
 
+#ifdef __OpenBSD__
+#define iconv_open libiconv_open
+#endif
+
 /* Override any GCC internal prototype to avoid an error.
    Use char because int might match the return type of a GCC
    builtin and then its argument prototype would still apply.  */
@@@@ -4531,14 +4535,14 @@@@ ssl_libs=""
 ssl_cflags=""
 if test "x$checkopenssl" != xno; then
   if test "x$ssl_path" = x; then
-    ssl_libs="-lcrypto -lssl"
+    ssl_libs="-lssl -lcrypto"
   else
     if test -d "$ssl_path"; then
       if test -d "$ssl_path/lib"; then
-        ssl_libs="-L$ssl_path/lib -lcrypto -lssl"
+        ssl_libs="-L$ssl_path/lib -lssl -lcrypto"
 	ssl_cflags="-I$ssl_path/include"
       else
-        ssl_libs="-L$ssl_path -lcrypto -lssl"
+        ssl_libs="-L$ssl_path -lssl -lcrypto"
 	ssl_cflags="-I$ssl_path/../include"
       fi
     fi
@


1.2
log
@update to 20140831: adds support for SSL; ok brad@@
@
text
@d1 3
a3 3
$OpenBSD$
--- configure.orig	Wed Aug  6 21:01:22 2014
+++ configure	Sat Sep 20 17:27:22 2014
d15 1
a15 1
@@@@ -4529,14 +4533,14 @@@@ ssl_libs=""
@


1.1
log
@Update to 20131230 snapshot.  Now depends on iconv; after feedback from aja@@,
make that dependency unconditional instead of adding a FLAVOR.

Also agreed with by naddy@@, brad@@ (maintainer) and David Hill.
@
text
@d2 6
a7 6
--- configure.orig	Mon Dec 30 17:42:37 2013
+++ configure	Fri Jan 17 18:54:23 2014
@@@@ -2322,6 +2322,9 @@@@ else
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char iconv_open(); below.  */
 #include <assert.h>
d11 22
a32 3
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
     builtin and then its argument prototype would still apply.  */
@

