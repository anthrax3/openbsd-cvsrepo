head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.6
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.03.19.20.03.46;	author sthen;	state Exp;
branches;
next	;
commitid	XcOsRdTLzmOZM0Hl;


desc
@@


1.1
log
@update to ocserv-0.11.1, mostly similar to part of a diff from Bjorn Ketelaars
@
text
@$OpenBSD$

time_t is 64 bits on all OpenBSD (and NetBSD) arch; cast time values
to a specific-width type to avoid problems on 32-bit arch

--- src/occtl/time.c.orig	Sun Mar  6 09:44:05 2016
+++ src/occtl/time.c	Sat Mar 19 14:25:48 2016
@@@@ -36,7 +36,7 @@@@ void print_time_ival7(char output[MAX_TMPSTR_SIZE], ti
 {
 	time_t t = t1 - t2;
 
-	if ((long)t < (long)0) {
+	if ((long long)t < (long long)0) {
 		/* system clock changed? */
 		snprintf(output, MAX_TMPSTR_SIZE, "   ?   ");
 		return;
@@@@ -44,17 +44,17 @@@@ void print_time_ival7(char output[MAX_TMPSTR_SIZE], ti
 	
 	if (t >= 48 * 60 * 60)
 		/* 2 days or more */
-		snprintf(output, MAX_TMPSTR_SIZE, _("%2ludays"), (long)t / (24 * 60 * 60));
+		snprintf(output, MAX_TMPSTR_SIZE, _("%2lludays"), (long long)t / (24 * 60 * 60));
 	else if (t >= 60 * 60)
 		/* 1 hour or more */
 	        /* Translation Hint: Hours:Minutes */
-		snprintf(output, MAX_TMPSTR_SIZE, _("%2luh:%02um"), (long)t / (60 * 60),
+		snprintf(output, MAX_TMPSTR_SIZE, _("%2lluh:%02um"), (long long)t / (60 * 60),
 			(unsigned)((t / 60) % 60));
 	else if (t > 60)
 		/* 1 minute or more */
 	        /* Translation Hint: Minutes:Seconds */
-		snprintf(output, MAX_TMPSTR_SIZE, "%2lum:%02us", (long)t / 60, (unsigned)t % 60);
+		snprintf(output, MAX_TMPSTR_SIZE, "%2llum:%02us", (long long)t / 60, (unsigned)t % 60);
 	else
 	        /* Translation Hint: Seconds:Centiseconds */
-		snprintf(output, MAX_TMPSTR_SIZE, _("%5lus"), (long)t);
+		snprintf(output, MAX_TMPSTR_SIZE, _("%5llus"), (long long)t);
 }
@
