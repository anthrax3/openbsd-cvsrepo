head	1.10;
access;
symbols
	OPENBSD_5_8:1.9.0.12
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.8
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.8.0.10
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.8
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.6
	OPENBSD_5_0:1.8.0.4
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.7.0.14
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.12
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.10
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.8
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.4.0.16
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.14
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.12
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3;
locks; strict;
comment	@# @;


1.10
date	2015.09.17.12.03.42;	author sthen;	state dead;
branches;
next	1.9;
commitid	vliXTwGDzGwuTcPI;

1.9
date	2013.04.18.18.52.50;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2010.11.24.15.14.45;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2007.07.13.08.13.22;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2007.02.20.20.33.23;	author naddy;	state Exp;
branches;
next	1.5;

1.5
date	2006.10.12.08.22.37;	author jakob;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.28.05.03.32;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.29.07.25.52;	author form;	state Exp;
branches;
next	1.2;

1.2
date	2001.12.06.06.25.32;	author form;	state Exp;
branches;
next	1.1;

1.1
date	2001.12.06.06.05.43;	author form;	state Exp;
branches;
next	;


desc
@@


1.10
log
@update fo fping 3.10
@
text
@$OpenBSD: patch-fping_c,v 1.9 2013/04/18 18:52:50 sthen Exp $
--- fping.c.orig	Thu Apr 18 19:45:15 2013
+++ fping.c	Thu Apr 18 19:49:21 2013
@@@@ -67,7 +67,7 @@@@ extern "C"
 
 /*** autoconf includes ***/
 
-
+#include <sys/types.h>
 #include <stdio.h>
 #include <errno.h>
 #include <time.h>
@@@@ -88,7 +88,6 @@@@ extern "C"
 #include <string.h>
 #include <stddef.h>
 
-#include <sys/types.h>
 #include <sys/time.h>
 #include <sys/socket.h>
 
@@@@ -118,10 +117,16 @@@@ extern "C"
 
 /*** externals ***/
 
+#ifndef __OpenBSD__
 extern char *optarg;
 extern int optind,opterr;
 extern int h_errno;
+#endif
 
+#ifdef HAVE_PROGNAME
+extern char *__progname;
+#endif
+
 #ifdef __cplusplus
 }
 #endif /* __cplusplus */
@@@@ -245,13 +250,13 @@@@ typedef struct host_entry
      struct timeval       last_send_time;     /* time of last packet sent */
      int                  num_sent;           /* number of ping packets sent */
      int                  num_recv;           /* number of pings received */
-     int                  max_reply;          /* longest response time */
-     int                  min_reply;          /* shortest response time */
+     long                 max_reply;          /* longest response time */
+     long                 min_reply;          /* shortest response time */
      int                  total_time;         /* sum of response times */
      int                  num_sent_i;         /* number of ping packets sent */
      int                  num_recv_i;         /* number of pings received */
-     int                  max_reply_i;        /* longest response time */
-     int                  min_reply_i;        /* shortest response time */
+     long                 max_reply_i;        /* longest response time */
+     long                 min_reply_i;        /* shortest response time */
      int                  total_time_i;       /* sum of response times */
      int                  *resp_times;        /* individual response times */
 #if defined( DEBUG ) || defined( _DEBUG )
@@@@ -319,6 +324,7 @@@@ int verbose_flag, quiet_flag, stats_flag, unreachable_
 int elapsed_flag, version_flag, count_flag, loop_flag;
 int per_recv_flag, report_all_rtts_flag, name_flag, addr_flag, backoff_flag;
 int multif_flag;
+int timestamp_flag = 0;
 #if defined( DEBUG ) || defined( _DEBUG )
 int randomly_lose_flag, sent_times_flag, trace_flag, print_per_system_flag;
 int lose_factor;
@@@@ -524,7 +530,11 @@@@ int main( int argc, char **argv )
 
 	}/* IF */
 
-	prog = argv[0];
+#ifdef HAVE_PROGNAME
+	prog = __progname;
+#else
+	prog = (prog = strrchr(argv[0], '/')) ? prog + 1 : argv[0];
+#endif
 	ident = getpid() & 0xFFFF;
 
 	verbose_flag = 1;
@@@@ -533,7 +543,7 @@@@ int main( int argc, char **argv )
 
 	/* get command line options */
 
-	while( ( c = getopt( argc, argv, "gedhlmnqusaAvz:t:i:p:f:r:c:b:C:Q:B:S:I:T:O:" ) ) != EOF )
+	while( ( c = getopt( argc, argv, "gedhlmnqusaAvDz:t:i:p:f:r:c:b:C:Q:B:S:I:T:O:" ) ) != EOF )
 	{
 		switch( c )
 		{
@@@@ -622,6 +632,10 @@@@ int main( int argc, char **argv )
 			
 			break;
 
+		case 'D':
+			timestamp_flag = 1;
+			break;
+
 		case 's':
 			stats_flag = 1;
 			break;
@@@@ -846,6 +860,7 @@@@ int main( int argc, char **argv )
 		if( loop_flag ) fprintf( stderr, "  loop_flag set\n" );
 		if( backoff_flag ) fprintf( stderr, "  backoff_flag set\n" );
 		if( per_recv_flag ) fprintf( stderr, "  per_recv_flag set\n" );
+		if( timestamp_flag ) fprintf( stderr, "  timestamp_flag set\n" );
 		if( report_all_rtts_flag ) fprintf( stderr, "  report_all_rtts_flag set\n" );
 		if( randomly_lose_flag ) fprintf( stderr, "  randomly_lose_flag set\n" );
 		if( sent_times_flag ) fprintf( stderr, "  sent_times_flag set\n" );
@@@@ -883,8 +898,13 @@@@ int main( int argc, char **argv )
 	else if( filename )
 	{
 		FILE *ping_file;
+#ifdef MAXHOSTNAMELEN
+		char line[MAXHOSTNAMELEN];
+		char host[MAXHOSTNAMELEN];
+#else
 		char line[132];
 		char host[132];
+#endif
 		char *p;
 		
 		if( strcmp( filename, "-" ) == 0 )
@@@@ -898,6 +918,7 @@@@ int main( int argc, char **argv )
 
 		while( fgets( line, sizeof(line), ping_file ) )
 		{
+			line[132-1] = '\0';
 			if( sscanf( line, "%s", host ) != 1 )
 				continue;
 			
@@@@ -1594,7 +1615,6 @@@@ void send_ping( int s, HOST_ENTRY *h )
 	memset( buffer, 0, ping_pkt_size * sizeof( char ) );
 	icp = ( FPING_ICMPHDR* )buffer;
 
-	gettimeofday( &h->last_send_time, &tz );
 	myseq = h->num_sent * num_hosts + h->i;
 	max_seq_sent = myseq > max_seq_sent ? myseq : max_seq_sent;
 
@@@@ -1606,6 +1626,8 @@@@ void send_ping( int s, HOST_ENTRY *h )
 	icp->icmp_id = htons(ident);
 
 	pdp = ( PING_DATA* )( buffer + SIZE_ICMP_HDR );
+	/* set the time at the very last possible point */
+	gettimeofday(&h->last_send_time,&tz);
 	pdp->ping_ts = h->last_send_time;
 	pdp->ping_count = h->num_sent;
 
@@@@ -1617,6 +1639,8 @@@@ void send_ping( int s, HOST_ENTRY *h )
 	icp->icmp6_id = htons(ident);
 
 	pdp = ( PING_DATA* )( buffer + SIZE_ICMP_HDR );
+	/* set the time at the very last possible point */
+	gettimeofday(&h->last_send_time,&tz);
 	pdp->ping_ts = h->last_send_time;
 	pdp->ping_count = h->num_sent;
 
@@@@ -1705,6 +1729,9 @@@@ int wait_for_reply( void )
 
 	result = recvfrom_wto( s, buffer, sizeof(buffer), &response_addr, select_time );
 
+	/* get time of receipt as close to the real time as possible */
+	gettimeofday(&current_time,&tz);
+
 	if( result < 0 )
 		return 0;	/* timeout */
   
@@@@ -1719,7 +1746,7 @@@@ int wait_for_reply( void )
 
 	ip = ( struct ip* )buffer;
 #ifndef IPV6
-#if defined( __alpha__ ) && __STDC__ && !defined( __GLIBC__ )
+#if defined( __alpha__ ) && defined(__osf1__) && __STDC__ && !defined( __GLIBC__ )
 	/* The alpha headers are decidedly broken.
 	 * Using an ANSI compiler, it provides ip_vhl instead of ip_hl and
 	 * ip_v.  So, to get ip_hl, we mask off the bottom four bits.
@@@@ -1727,7 +1754,7 @@@@ int wait_for_reply( void )
 	hlen = ( ip->ip_vhl & 0x0F ) << 2;
 #else
 	hlen = ip->ip_hl << 2;
-#endif /* defined(__alpha__) && __STDC__ */
+#endif /* defined(__alpha__) && defined(__osf1__) && __STDC__ */
 	if( result < hlen + ICMP_MINLEN )
 #else
 	if( result < sizeof(FPING_ICMPHDR) )
@@@@ -1784,7 +1811,6 @@@@ int wait_for_reply( void )
 	h = table[n];
 
 	/* received ping is cool, so process it */
-	gettimeofday( &current_time, &tz );
 	h->waiting = 0;
 	h->timeout = timeout;
 	h->num_recv++;
@@@@ -1885,6 +1911,11 @@@@ int wait_for_reply( void )
 
 	if( per_recv_flag )
 	{
+		if(timestamp_flag) {
+			printf("[%lu.%06lu] ",
+			    (unsigned long)current_time.tv_sec,
+			    (unsigned long)current_time.tv_usec);
+		}
 		avg = h->total_time / h->num_recv;
 		printf( "%s%s : [%d], %d bytes, %s ms",
 			h->host, h->pad, this_count, result, sprint_tm( this_reply ) );
@@@@ -2677,7 +2708,7 @@@@ char * sprint_tm( int t )
 	/* <= 0.99 ms */
 	if( t < 100 )
 	{
-		sprintf( buf, "0.%02d", t );
+		snprintf( buf, sizeof(buf), "0.%02d", t );
 		return( buf );
 
 	}/* IF */
@@@@ -2685,7 +2716,7 @@@@ char * sprint_tm( int t )
 	/* 1.00 - 9.99 ms */
 	if( t < 1000 )
 	{
-		sprintf( buf, "%d.%02d", t / 100, t % 100 );
+		snprintf( buf, sizeof(buf), "%d.%02d", t / 100, t % 100 );
 		return( buf );
 
 	}/* IF */
@@@@ -2693,13 +2724,13 @@@@ char * sprint_tm( int t )
 	/* 10.0 - 99.9 ms */
 	if( t < 10000 )
 	{
-		sprintf( buf, "%d.%d", t / 100, ( t % 100 ) / 10 );
+		snprintf( buf, sizeof(buf), "%d.%d", t / 100, ( t % 100 ) / 10 );
 		return( buf );
 	
 	}/* IF */
   
 	/* >= 100 ms */
-	sprintf( buf, "%d", t / 100 );
+	snprintf( buf, sizeof(buf), "%d", t / 100 );
 	return( buf );
 
 } /* sprint_tm() */
@@@@ -2825,6 +2856,7 @@@@ void usage( void )
 	fprintf( stderr, "   -B f       set exponential backoff factor to f\n" );
 	fprintf( stderr, "   -c n       count of pings to send to each target (default %d)\n", count );  
 	fprintf( stderr, "   -C n       same as -c, report results in verbose format\n" );
+	fprintf( stderr, "   -D         print timestamp before each output line\n" );
 	fprintf( stderr, "   -e         show elapsed time on return packets\n" );
 	fprintf( stderr, "   -f file    read list of targets from a file ( - means stdin) (only if no -g specified)\n" );
 	fprintf( stderr, "   -g         generate target list (only if no -f specified)\n" );
@


1.9
log
@add a patch from netperf-wrapper to allow printing timestamps.
@
text
@d1 1
a1 1
$OpenBSD: patch-fping_c,v 1.8 2010/11/24 15:14:45 sthen Exp $
@


1.8
log
@update fping to 2.4b2_to4 (great numbering scheme!) from the
smokeping MASTER_SITE.
@
text
@d1 3
a3 3
$OpenBSD: patch-fping_c,v 1.7 2007/07/13 08:13:22 djm Exp $
--- fping.c.orig	Thu Dec 31 15:57:28 2009
+++ fping.c	Wed Nov 24 15:07:47 2010
d56 9
a64 1
@@@@ -524,7 +529,11 @@@@ int main( int argc, char **argv )
d77 29
a105 1
@@@@ -883,8 +892,13 @@@@ int main( int argc, char **argv )
d119 1
a119 1
@@@@ -898,6 +912,7 @@@@ int main( int argc, char **argv )
d127 1
a127 1
@@@@ -1594,7 +1609,6 @@@@ void send_ping( int s, HOST_ENTRY *h )
d135 1
a135 1
@@@@ -1606,6 +1620,8 @@@@ void send_ping( int s, HOST_ENTRY *h )
d144 1
a144 1
@@@@ -1617,6 +1633,8 @@@@ void send_ping( int s, HOST_ENTRY *h )
d153 1
a153 1
@@@@ -1705,6 +1723,9 @@@@ int wait_for_reply( void )
d163 1
a163 1
@@@@ -1719,7 +1740,7 @@@@ int wait_for_reply( void )
d172 1
a172 1
@@@@ -1727,7 +1748,7 @@@@ int wait_for_reply( void )
d181 1
a181 1
@@@@ -1784,7 +1805,6 @@@@ int wait_for_reply( void )
d189 13
a201 1
@@@@ -2677,7 +2697,7 @@@@ char * sprint_tm( int t )
d210 1
a210 1
@@@@ -2685,7 +2705,7 @@@@ char * sprint_tm( int t )
d219 1
a219 1
@@@@ -2693,13 +2713,13 @@@@ char * sprint_tm( int t )
d235 8
@


1.7
log
@Add source address patch needed by recent smokeping, crank PKGNAME
from bew maintainer Stuart Henderson
@
text
@d1 4
a4 12
$OpenBSD: patch-fping_c,v 1.6 2007/02/20 20:33:23 naddy Exp $
--- fping.c.orig	Thu Jul 12 12:36:46 2007
+++ fping.c	Thu Jul 12 12:36:50 2007
@@@@ -42,7 +42,6 @@@@
  * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
  * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  */
-#define IPV6 1						/* This should be a compiler option, or even better be done from the Makefile... ;) */
 
 #ifndef _NO_PROTO
 #if !__STDC__ && !defined( __cplusplus ) && !defined( FUNCPROTO ) \
@@@@ -67,7 +66,7 @@@@ extern "C"
d13 1
a13 1
@@@@ -88,7 +87,6 @@@@ extern "C"
d21 1
a21 12
@@@@ -112,6 +110,10 @@@@ extern "C"
 #include <arpa/inet.h>
 #include <netdb.h>
 
+#if (defined(__unix__) || defined(unix)) && !defined(USG)
+#include <sys/param.h>
+#endif
+
 /* RS6000 has sys/select.h */
 #ifdef HAVE_SYS_SELECT_H
 #include <sys/select.h>
@@@@ -123,10 +125,16 @@@@ extern "C"
d38 1
a38 1
@@@@ -246,13 +254,13 @@@@ typedef struct host_entry
d56 1
a56 26
@@@@ -283,6 +291,12 @@@@ u_int ping_pkt_size;
 u_int count = 1;
 u_int trials;
 u_int report_interval = 0;
+int src_addr_present = 0;
+#ifndef IPV6
+struct in_addr src_addr;
+#else
+struct in6_addr src_addr;
+#endif
 
 /* global stats */
 long max_reply = 0;
@@@@ -408,6 +422,11 @@@@ int main( int argc, char **argv )
 	struct protoent *proto;
 	char *buf;
 	uid_t uid;
+#ifndef IPV6
+	struct sockaddr_in sa;
+#else
+	struct sockaddr_in6 sa;
+#endif
 	/* check if we are root */
 
 	if( geteuid() )
@@@@ -482,7 +501,11 @@@@ int main( int argc, char **argv )
d69 1
a69 39
@@@@ -491,7 +514,7 @@@@ int main( int argc, char **argv )
 
 	/* get command line options */
 
-	while( ( c = getopt( argc, argv, "gedhlmnqusaAvz:t:i:p:f:r:c:b:C:Q:B:" ) ) != EOF )
+	while( ( c = getopt( argc, argv, "gedhlmnqusaAvz:t:i:p:f:r:c:b:C:Q:B:S:" ) ) != EOF )
 	{
 		switch( c )
 		{
@@@@ -502,9 +525,9 @@@@ int main( int argc, char **argv )
 			break;
 		
 		case 'r':
-			if( !( retry = ( u_int )atoi( optarg ) ) )
-				usage();
+			retry = ( u_int )atoi( optarg );
 
+
 			break;
 		
 		case 'i':
@@@@ -639,6 +662,16 @@@@ int main( int argc, char **argv )
 			generate_flag = 1;
 			break;
 
+		case 'S':
+#ifndef IPV6
+			if( ! inet_pton( AF_INET, optarg, &src_addr ) )
+#else
+			if( ! inet_pton( AF_INET6, optarg, &src_addr ) )
+#endif
+				usage();
+			src_addr_present = 1;
+			break;
+
 		default:
 			usage();
 			break;
@@@@ -808,8 +841,13 @@@@ int main( int argc, char **argv )
d83 1
a83 1
@@@@ -823,6 +861,7 @@@@ int main( int argc, char **argv )
d85 1
a85 1
 		while( fgets( line, 132, ping_file ) )
d91 1
a91 24
@@@@ -962,6 +1001,22 @@@@ int main( int argc, char **argv )
 	if( !num_hosts )
 		exit( 2 );
 
+	/* set the source address */
+
+	if( src_addr_present )
+	{
+		memset( &sa, 0, sizeof( sa ) );
+#ifndef IPV6
+		sa.sin_family = AF_INET;
+		sa.sin_addr = src_addr;
+#else
+		sa.sin6_family = AF_INET6;
+		sa.sin6_addr = src_addr;
+#endif
+		if ( bind( s, (struct sockaddr *)&sa, sizeof( sa ) ) < 0 )
+			errno_crash_and_burn( "cannot bind source address" );
+	}
+
 	/* allocate array to hold outstanding ping requests */
 
 	table = ( HOST_ENTRY** )malloc( sizeof( HOST_ENTRY* ) * num_hosts );
@@@@ -1503,7 +1558,6 @@@@ void send_ping( int s, HOST_ENTRY *h )
d96 5
a100 5
 #ifndef IPV6
 	icp->icmp_type = ICMP_ECHO;
 	icp->icmp_code = 0;
@@@@ -1512,6 +1566,8 @@@@ void send_ping( int s, HOST_ENTRY *h )
 	icp->icmp_id = ident;
d108 2
a109 2
@@@@ -1523,6 +1579,8 @@@@ void send_ping( int s, HOST_ENTRY *h )
 	icp->icmp6_id = ident;
d117 1
a117 1
@@@@ -1611,6 +1669,9 @@@@ int wait_for_reply( void )
d127 1
a127 1
@@@@ -1625,7 +1686,7 @@@@ int wait_for_reply( void )
d136 1
a136 1
@@@@ -1633,7 +1694,7 @@@@ int wait_for_reply( void )
d145 1
a145 1
@@@@ -1690,7 +1751,6 @@@@ int wait_for_reply( void )
d153 1
a153 1
@@@@ -2570,7 +2630,7 @@@@ char * sprint_tm( int t )
d162 1
a162 1
@@@@ -2578,7 +2638,7 @@@@ char * sprint_tm( int t )
d171 1
a171 1
@@@@ -2586,13 +2646,13 @@@@ char * sprint_tm( int t )
a186 8
@@@@ -2732,6 +2792,7 @@@@ void usage( void )
 	fprintf( stderr, "   -Q n       same as -q, but show summary every n seconds\n" );
 	fprintf( stderr, "   -r n       number of retries (default %d)\n", retry );
 	fprintf( stderr, "   -s         print final stats\n" );
+	fprintf( stderr, "   -S addr    set source address\n" );
 	fprintf( stderr, "   -t n       individual target initial timeout (in millisec) (default %d)\n", timeout / 100 );
 	fprintf( stderr, "   -u         show targets that are unreachable\n" );
 	fprintf( stderr, "   -v         show version\n" );
@


1.6
log
@Undo broken strl* conversion.
Mostly from Stuart Henderson <stu@@spacehopper.org>; ok sturm@@
@
text
@d1 3
a3 3
$OpenBSD: patch-fping_c,v 1.5 2006/10/12 08:22:37 jakob Exp $
--- fping.c.orig	Mon Jan 21 02:06:30 2002
+++ fping.c	Mon Jun 19 22:22:42 2006
d75 26
a100 1
@@@@ -482,7 +490,11 @@@@ int main( int argc, char **argv )
d113 10
a122 1
@@@@ -502,9 +514,9 @@@@ int main( int argc, char **argv )
d134 18
a151 1
@@@@ -808,8 +820,13 @@@@ int main( int argc, char **argv )
d165 1
a165 1
@@@@ -823,6 +840,7 @@@@ int main( int argc, char **argv )
d173 24
a196 1
@@@@ -1503,7 +1521,6 @@@@ void send_ping( int s, HOST_ENTRY *h )
d204 1
a204 1
@@@@ -1512,6 +1529,8 @@@@ void send_ping( int s, HOST_ENTRY *h )
d213 1
a213 1
@@@@ -1523,6 +1542,8 @@@@ void send_ping( int s, HOST_ENTRY *h )
d222 1
a222 1
@@@@ -1611,6 +1632,9 @@@@ int wait_for_reply( void )
d232 1
a232 1
@@@@ -1625,7 +1649,7 @@@@ int wait_for_reply( void )
d241 1
a241 1
@@@@ -1633,7 +1657,7 @@@@ int wait_for_reply( void )
d250 1
a250 1
@@@@ -1690,7 +1714,6 @@@@ int wait_for_reply( void )
d258 1
a258 1
@@@@ -2570,7 +2593,7 @@@@ char * sprint_tm( int t )
d267 1
a267 1
@@@@ -2578,7 +2601,7 @@@@ char * sprint_tm( int t )
d276 1
a276 1
@@@@ -2586,13 +2609,13 @@@@ char * sprint_tm( int t )
d292 8
@


1.5
log
@fping 2.4b2
@
text
@d1 1
a1 1
$OpenBSD$
a121 9
@@@@ -864,7 +882,7 @@@@ int main( int argc, char **argv )
 			if( pCopy )
 			{
 				/* make a copy of the arg, so we don't damage the original */
-				strcpy( pCopy, pStart );
+				strncpy( pCopy, pStart, sizeof(pCopy) );
 
 				/* look for token '/' */
 				if( strtok( pCopy, "/" ) != NULL )
a183 24
@@@@ -2214,10 +2237,10 @@@@ char *na_cat( char *name, struct in_addr
 	if( !nm )
 		crash_and_burn( "can't allocate some space for a string" );
 	
-	strcpy( nm, name );
-	strcat( nm, " (" );
-	strcat( nm, as );
-	strcat( nm, ")" );
+	strlcpy( nm, name, sizeof(nm) );
+	strlcat( nm, " (", sizeof(nm) );
+	strlcat( nm, as, sizeof(nm) );
+	strlcat( nm, ")", sizeof(nm) );
 
 	return( nm );
 
@@@@ -2444,7 +2467,7 @@@@ char *cpystr( char *string )
 		if( !dst )
 			crash_and_burn( "can't allocate some space for a string" );
 		
-		strcpy( dst, string );
+		strlcpy( dst, string, sizeof(dst) );
 		return dst;
 	
 	}/* IF */
@


1.4
log
@fix bus errors; reported on comp.os.bsd.openbsd.misc via matthieu@@.
@
text
@d1 21
a21 5
$OpenBSD: patch-fping_c,v 1.3 2002/03/29 07:25:52 form Exp $
--- fping.c.orig	Wed Jan  8 17:29:43 1997
+++ fping.c	Tue Jan 28 01:55:42 2003
@@@@ -186,7 +186,11 @@@@ extern "C" {
 
d23 1
d25 1
a25 5
+#if (defined(__unix__) || defined(unix)) && !defined(USG)
+#include <sys/param.h>
+#else
 #include <sys/types.h>
+#endif
d29 3
a31 1
@@@@ -217,10 +221,19 @@@@ extern "C" {
d33 2
a34 4
 /* externals */
 
+#if !(defined(BSD) && (BSD >= 199103))
+extern char *sys_errlist[];
d37 7
a46 1
-extern char *sys_errlist[];
d49 1
a49 1
+
d53 1
a53 1
 
d56 22
a77 7
@@@@ -473,9 +486,14 @@@@ int main(int argc, char **argv)
   s = socket(AF_INET, SOCK_RAW, proto->p_proto);
   if (s<0) errno_crash_and_burn("can't create raw socket");
 
-  /*seteuid(getuid());*/
+  seteuid(getuid());
+  setuid(getuid());
d79 1
a79 1
-  prog = argv[0];
d81 1
a81 1
+  prog = __progname;
d83 1
a83 1
+  prog = (prog = strrchr(argv[0], '/')) ? prog + 1 : argv[0];
d85 1
a85 1
   ident = getpid() & 0xFFFF;
d87 17
a103 7
   verbose_flag = 1;
@@@@ -662,8 +680,12 @@@@ int main(int argc, char **argv)
              ++argv;
   } else if (filename) {
          FILE *ping_file;
-         char line[132];
-         char host[132],*p;
d105 2
a106 1
+         char line[MAXHOSTNAMELEN], host[MAXHOSTNAMELEN];
d108 2
a109 1
+         char line[256], char host[256];
d111 55
a165 11
+         char *p;
          if (strcmp(filename,"-")==0) {
              ping_file=fdopen(0,"r");
          } else {
@@@@ -1099,6 +1121,8 @@@@ int wait_for_reply()
 
   result=recvfrom_wto(s,buffer,4096,
                      (struct sockaddr *)&response_addr,select_time);
+  /* get time of receipt as close to the real time as possible */
+  gettimeofday(&current_time,&tz);
   if (result<0) { return 0; } /* timeout */
d167 84
a250 25
 #ifdef DEBUG
@@@@ -1107,7 +1131,7 @@@@ int wait_for_reply()
       return 0;
 #endif
   ip = (struct ip *) buffer;
-#if defined(__alpha__) && __STDC__
+#if defined(__FreeBSD__) && defined(__alpha__) && __STDC__
   /* The alpha headers are decidedly broken.
    * Using an ANSI compiler, it provides ip_vhl instead of ip_hl and
    * ip_v.  So, to get ip_hl, we mask off the bottom four bits.
@@@@ -1144,13 +1168,12 @@@@ int wait_for_reply()
   h=table[n];
 
   /* received ping is cool, so process it */
-  gettimeofday(&current_time,&tz);
   h->waiting = 0;
   h->timeout = timeout;
   h->num_recv++;  h->num_recv_i++;
 
   pdp = (PING_DATA *)icp->icmp_data;
-  sent_time = pdp->ping_ts;
+  memcpy(&sent_time, &(pdp->ping_ts), sizeof(struct timeval));                
   this_count = pdp->ping_count;
 #ifdef DEBUG
   if (trace_flag) 
@


1.3
log
@fix compilation on alpha
@
text
@d1 3
a3 3
$OpenBSD: patch-fping_c,v 1.2 2001/12/06 06:25:32 form Exp $
--- fping.c.orig	Thu Jan  9 02:29:43 1997
+++ fping.c	Fri Mar 29 13:17:47 2002
d87 1
a87 1
@@@@ -1144,7 +1168,6 @@@@ int wait_for_reply()
d95 7
@


1.2
log
@oops
@
text
@d1 1
a1 1
$OpenBSD: patch-fping_c,v 1.1 2001/12/06 06:05:43 form Exp $
d3 1
a3 1
+++ fping.c	Thu Dec  6 11:44:20 2001
d69 1
a69 1
@@@@ -1099,6 +1124,8 @@@@ int wait_for_reply()
d78 10
a87 1
@@@@ -1144,7 +1171,6 @@@@ int wait_for_reply()
@


1.1
log
@Upgrade to 2.2b1
@
text
@d1 1
a1 1
$OpenBSD$
a68 14
@@@@ -671,8 +693,11 @@@@ int main(int argc, char **argv)
          }
          if (!ping_file) errno_crash_and_burn("fopen");
          while(fgets(line,132,ping_file)) {
-           if (sscanf(line,"%s",host) != 1)
-	     continue;
+#ifdef HAVE_SNPRINTF
+           snprintf(host,sizeof(host),"%s",line);
+#else
+           sprintf(host,"%s",line);
+#endif
               if ((!*host) || (host[0]=='#'))  /* magic to avoid comments */
                 continue;
 	   p = cpystr(host);
@

