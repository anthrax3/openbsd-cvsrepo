head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2017.01.30.08.53.17;	author robert;	state dead;
branches
	1.1.2.1;
next	;
commitid	akYwpi0MgpQxagdR;

1.1.2.1
date	2017.01.30.08.53.17;	author robert;	state Exp;
branches;
next	;
commitid	akYwpi0MgpQxagdR;


desc
@@


1.1
log
@file patch-pdns_misc_cc was initially added on branch OPENBSD_6_0.
@
text
@@


1.1.2.1
log
@apply patches from upstream for CVE-2016-5426, CVE-2016-5427
@
text
@a0 83
$OpenBSD$
--- pdns/misc.cc.orig	Tue Jun  9 14:29:11 2015
+++ pdns/misc.cc	Mon Jan 30 09:45:11 2017
@@@@ -150,16 +150,27 @@@@ bool chopOff(string &domain) 
   if(domain.empty())
     return false;
 
-  string::size_type fdot=domain.find('.');
+  bool escaped = false;
+  const string::size_type domainLen = domain.length();
+  for (size_t fdot = 0; fdot < domainLen; fdot++)
+  {
+    if (domain[fdot] == '.' && !escaped) {
+      string::size_type remain = domainLen - (fdot + 1);
+      char tmp[remain];
+      memcpy(tmp, domain.c_str()+fdot+1, remain);
+      domain.assign(tmp, remain); // don't dare to do this w/o tmp holder :-)
 
-  if(fdot==string::npos) 
-    domain="";
-  else {
-    string::size_type remain = domain.length() - (fdot + 1);
-    char tmp[remain];
-    memcpy(tmp, domain.c_str()+fdot+1, remain);
-    domain.assign(tmp, remain); // don't dare to do this w/o tmp holder :-)
+      return true;
+    }
+    else if (domain[fdot] == '\\' && !escaped) {
+      escaped = true;
+    }
+    else {
+      escaped = false;
+    }
   }
+
+  domain = "";
   return true;
 }
 
@@@@ -169,19 +180,31 @@@@ bool chopOffDotted(string &domain)
   if(domain.empty() || (domain.size()==1 && domain[0]=='.'))
     return false;
 
-  string::size_type fdot=domain.find('.');
-  if(fdot == string::npos)
-    return false;
-
-  if(fdot==domain.size()-1) 
-    domain=".";
-  else  {
-    string::size_type remain = domain.length() - (fdot + 1);
-    char tmp[remain];
-    memcpy(tmp, domain.c_str()+fdot+1, remain);
-    domain.assign(tmp, remain);
+  bool escaped = false;
+  const string::size_type domainLen = domain.length();
+  for (size_t fdot = 0; fdot < domainLen; fdot++)
+  {
+    if (domain[fdot] == '.' && !escaped) {
+      if (fdot==domain.size()-1) {
+        domain=".";
+      }
+      else {
+        string::size_type remain = domainLen - (fdot + 1);
+        char tmp[remain];
+        memcpy(tmp, domain.c_str()+fdot+1, remain);
+        domain.assign(tmp, remain); // don't dare to do this w/o tmp holder :-)
+      }
+      return true;
+    }
+    else if (domain[fdot] == '\\' && !escaped) {
+      escaped = true;
+    }
+    else {
+      escaped = false;
+    }
   }
-  return true;
+
+  return false;
 }
 
 
@

