head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2017.05.27.06.21.43;	author espie;	state Exp;
branches;
next	;
commitid	Z2hqobR3xeP4K3lW;


desc
@@


1.1
log
@WANT_CXX
fix json11 (from freebsd)
@
text
@$OpenBSD$
nullptrs are non-comparable.
patch from freebsd

Index: ext/json11/json11.cpp
--- ext/json11/json11.cpp.orig
+++ ext/json11/json11.cpp
@@@@ -37,11 +37,21 @@@@ using std::make_shared;
 using std::initializer_list;
 using std::move;
 
+/* Helper for representing null - just a do-nothing struct, plus comparison
+ * operators so the helpers in JsonValue work. We can't use nullptr_t because
+ * it may not be orderable.
+*/
+
+struct NullStruct {
+    bool operator==(NullStruct) const { return true; }
+    bool operator<(NullStruct) const { return false; }
+};
+
 /* * * * * * * * * * * * * * * * * * * *
  * Serialization
  */
 
-static void dump(std::nullptr_t, string &out) {
+static void dump(NullStruct, string &out) {
     out += "null";
 }
 
@@@@ -204,9 +214,9 @@@@ class JsonObject final : public Value<Json::OBJECT, Js
     explicit JsonObject(Json::object &&value)      : Value(move(value)) {}
 };
 
-class JsonNull final : public Value<Json::NUL, std::nullptr_t> {
+class JsonNull final : public Value<Json::NUL, NullStruct> {
 public:
-    JsonNull() : Value(nullptr) {}
+    JsonNull() : Value({}) {}
 };
 
 /* * * * * * * * * * * * * * * * * * * *
@
