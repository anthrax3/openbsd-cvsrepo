head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.2.0.16
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.14
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.12
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.10
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.8
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	sthen_20091117:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.10.30.08.48.14;	author kirby;	state Exp;
branches;
next	1.3;
commitid	5Znei19dH3c4HkmY;

1.3
date	2014.08.12.13.58.41;	author kirby;	state Exp;
branches;
next	1.2;
commitid	GvAXdWihWOwMiH0k;

1.2
date	2010.10.07.11.01.06;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.17.11.11.21;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.11.17.11.11.21;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@bugfix update to munin-2.0.24
while here tweak sensors_ plugin to show human readable values for fans.
sensors_ patch from jasper@@, thanks!
@
text
@#!/bin/sh
#
# $OpenBSD: sensors_,v 1.3 2014/08/12 13:58:41 kirby Exp $
#
# Script to monitor OpenBSD sensors
# (c) 2007 Michael Knudsen <mk@@openbsd.org>
#
# Invoke as "volt", "temp", "fan" or "humidity" based on what is being monitored.

# Parameters understood:
#
# 	config   (required)
# 	autoconf (optional - used by munin-config)

# Magic markers (optional - used by munin-config and installation
# scripts):
#
#%# family=auto
#%# capabilities=autoconf suggest

mode=$(basename $0 | sed 's/sensors_//')

if [ "$1" = "autoconf" ]; then
	if [ "$(uname -s)" = "OpenBSD" ]; then
		echo yes
		exit 0
	else
		echo no
		exit 1
	fi
fi

if [ "$1" = "suggest" ]; then
    sysctl hw.sensors | awk '
/.temp/ { temp=1; }
/.fan/  { fan=1; }
/.volt/    { volt=1; }
/.humidity/ { humidity=1; }
END {
    if (temp) {
        print "temp";
    }
    if (fan) {
        print "fan";
    }
    if (volt) {
        print "volt";
    }
    if (humidity) {
	print "humidity";
    }
}'
    exit 0
fi

if [ "$mode" != "volt" -a "$mode" != "temp" -a "$mode" != "fan" -a "$mode" != "humidity" ]; then
	# error:  invoke as "temp" "volt" "fan" or "humidity"
	exit 1
fi

if [ "$1" = "config" ]; then

	echo 'graph_args --base 1000'

	if [ "$mode" = "temp" ]; then
		echo 'graph_title Temperature sensor values'
		echo 'graph_vlabel degC'
	elif [ "$mode" = "volt" ]; then
		echo 'graph_title Voltage sensor values'
		echo 'graph_vlabel V'
	elif [ "$mode" = "fan" ]; then
		echo 'graph_title Fan speed sensor values'
                echo 'graph_scale no'
                echo 'graph_printf %4.0lf'
		echo 'graph_vlabel RPM'
	elif [ "$mode" = "humidity" ]; then
		echo 'graph_title Relative Humidity sensor values (in %)'
		echo 'graph_args --upper-limit 100 -l 0'
		echo 'graph_vlabel %'
		echo 'graph_scale no'
	fi
	echo 'graph_category sensors'

	sysctl hw.sensors | cut -b 12- | fgrep $mode | while read s; do
		name=$(echo $s | cut -d= -f1 | sed 's/\./_/g')
		echo "$name.label $name"
	done
	exit 0
fi

sysctl hw.sensors | cut -b 12- | fgrep $mode | while read s; do
	name=$(echo $s | cut -d= -f1 | sed 's/\./_/g')
	value=$(echo $s | cut -d= -f2 | cut -d' ' -f1 | sed -e 's,\%$,,g')
	echo "$name.value  $value"
done

@


1.3
log
@switch sensors_ plugin graph category from system to sensors
request and ok jasper@@
@
text
@d3 1
a3 1
# $OpenBSD: sensors_,v 1.2 2010/10/07 11:01:06 jasper Exp $
d73 2
@


1.2
log
@- add support for reading humidity sensors

ok sthen@@ (MAINTAINER)
@
text
@d3 1
a3 1
# $OpenBSD: sensors_,v 1.1.1.1 2009/11/17 11:11:21 sthen Exp $
d80 1
a80 1
	echo 'graph_category system'
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
# $OpenBSD$
d8 1
a8 1
# Invoke as "volt", "temp" or "fan" based on what is being monitored.
d38 1
d49 3
d56 2
a57 2
if [ "$mode" != "volt" -a "$mode" != "temp" -a "$mode" != "fan" ]; then
	# error:  invoke as "temp" "volt" or "fan"
d74 5
d91 1
a91 1
	value=$(echo $s | cut -d= -f2 | cut -d' ' -f1)
@


1.1.1.1
log
@import ports/net/munin, this was joint work with mk@@ and includes
a couple of his OpenBSD-specific plugins.

Munin the monitoring tool surveys all your computers and
remembers what it saw. It presents all the information in graphs
through a web interface. Its emphasis is on plug and play
capabilities. After completing an installation a high number
of monitoring plugins will be playing with no more effort.

Using Munin you can easily monitor the performance of your
computers, networks, SANs, applications, weather measurements
and whatever comes to mind. It makes it easy to determine
"what's different today" when a performance problem crops up. It
makes it easy to see how you're doing capacity-wise on any
resources.
@
text
@@
