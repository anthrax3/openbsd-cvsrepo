head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.30
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.28
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.24
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.26
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.22
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.20
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.18
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.16
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.14
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.12
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.10
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.02.25.17.07.17;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@- update/add OpenBSD-specific plugins (interrupt and pf monitoring), from mk@@

- redo MESSAGE-main, making it a little more obvious how to get started,
following discussions with stephan@@ and jasper@@

ok jasper@@
(reminder, ports is not fully open, do not commit without specific permission)
@
text
@#!/bin/sh
#
# $OpenBSD$
#
# Script to monitor interrupt activity on OpenBSD
#
# (c) 2010 Michael Knudsen <mk@@openbsd.org>
#
# Parameters:
#
# 	config   (required)
# 	autoconf (optional - used by munin-config)
# 	suggest  (optional - used by munin-config)
#

if [ "$1" = "autoconf" ]; then
	if [ "$(uname -s)" = "OpenBSD" ]; then
		echo yes
		exit 0
	else
		echo no
		exit 1
	fi
fi

if [ "$1" = "suggest" ]; then
	exit 0
fi

if [ "$1" = "config" ]; then

	echo 'graph_title Interrupt activity'
	echo 'graph_args --base 1000'
	echo 'graph_category system'
	echo 'graph_vlabel Interrupt count'

	vmstat -i | grep "^irq" | while read s; do
		name=$(echo $s | cut -d/ -f 2 | cut -f 1 | cut -d' ' -f 1)
		irq=$(echo $s | cut -d/ -f 1)
		echo $name'.label '$name' ('$irq')';
		echo $name'.type DERIVE';
		echo $name'.min 0';
	done
	exit 0
fi

vmstat -i | grep "^irq" | while read s; do
	name=$(echo $s | cut -d/ -f 2 | cut -f 1 | cut -d' ' -f 1)
	irq=$(echo $s | cut -d/ -f 1)
	val=$(echo $s | awk '{ print $2 }')
	echo $name'.value '$val;
done

@
