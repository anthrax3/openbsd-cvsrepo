head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.32
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.30
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.28
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.24
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.26
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.22
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.20
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.18
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.16
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.14
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.12
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	sthen_20091117:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.02.25.17.07.17;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.17.11.11.21;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.11.17.11.11.21;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update/add OpenBSD-specific plugins (interrupt and pf monitoring), from mk@@

- redo MESSAGE-main, making it a little more obvious how to get started,
following discussions with stephan@@ and jasper@@

ok jasper@@
(reminder, ports is not fully open, do not commit without specific permission)
@
text
@#!/bin/sh
#
# $OpenBSD: if_pps_,v 1.1.1.1 2009/11/17 11:11:21 sthen Exp $
#
# (c) 2009-2010 Michael Knudsen <mk@@openbsd.org>
#
# Wildcard-plugin to monitor packet rates. To monitor an
# interface, link if_pps_<interface> to this file. E.g.
#
#  ln -s /usr/local/libexec/munin/plugins/if_pps_ \
#     /etc/munin/plugins/if_pps_bge0
#
# ...will monitor bge0.
#
# Any device found using netstat -i can be monitored.
#
# Magic markers (optional - used by munin-config and some installation
# scripts):
#
#%# family=auto
#%# capabilities=autoconf suggest


INTERFACE=`basename $0 | sed 's/^if_pps_//g'`

if [ "$1" = "autoconf" ]; then
	if [ -x /usr/bin/netstat ]; then
		echo yes
		exit 0
	else
		echo "no (/usr/bin/netstat not found)"
		exit 1
	fi
fi

if [ "$1" = "suggest" ]; then
	if [ -x /usr/bin/netstat ]; then
		netstat -i -n | sed -n -e '/^faith/d' -e '/^lo[0-9]/d' -e '/^pflog/d' -e '/<Link>/s/\** .*//p'
		exit 0
	else
		exit 1
	fi
fi

if [ "$1" = "config" ]; then
	echo "graph_order rpkt opkt"
	echo "graph_title $INTERFACE packets"
	echo 'graph_args --base 1000'
	echo 'graph_vlabel packets/${graph_period} in (-) out (+)'
	echo 'graph_category network'
	echo "graph_info This graph shows the traffic of the $INTERFACE network interface."
	echo 'rpkt.label received'
	echo 'rpkt.type DERIVE'
	echo 'rpkt.min 0'
	echo 'rpkt.graph no'
	echo 'opkt.label pps'
	echo 'opkt.type DERIVE'
	echo 'opkt.min 0'
	echo 'opkt.negative rpkt'
	echo "opkt.info Packets sent (+) and received (-)."
	exit 0
fi;

/usr/bin/netstat -i -n -I $INTERFACE | awk '
/<Link>/ {
	if (NF == 8) {
		print "rpkt.value", $4;
		print "opkt.value", $6;
	} else {
		print "rpkt.value", $5;
		print "opkt.value", $7;
	}
}'
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
# $OpenBSD$
d5 1
a5 2
# Wildcard-plugin to monitor network interfaces. To monitor an
# interface, link if_<interface> to this file. E.g.
d7 5
a11 2
#  ln -s ${PREFIX}/libexec/munin/plugins/if_pps_ \
#     ${SYSCONFDIR}/munin/plugins/if_bge0
d15 1
a15 1
# Any device found in /usr/bin/netstat can be monitored.
d53 8
a60 8
        echo 'rpkt.type DERIVE'
        echo 'rpkt.min 0'
        echo 'rpkt.graph no'
        echo 'opkt.label pps'
        echo 'opkt.type DERIVE'
        echo 'opkt.min 0'
        echo 'opkt.negative rpkt'
        echo "opkt.info Packets sent (+) and received (-)."
@


1.1.1.1
log
@import ports/net/munin, this was joint work with mk@@ and includes
a couple of his OpenBSD-specific plugins.

Munin the monitoring tool surveys all your computers and
remembers what it saw. It presents all the information in graphs
through a web interface. Its emphasis is on plug and play
capabilities. After completing an installation a high number
of monitoring plugins will be playing with no more effort.

Using Munin you can easily monitor the performance of your
computers, networks, SANs, applications, weather measurements
and whatever comes to mind. It makes it easy to determine
"what's different today" when a performance problem crops up. It
makes it easy to see how you're doing capacity-wise on any
resources.
@
text
@@
