head	1.4;
access;
symbols
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2004.06.30.16.09.49;	author jakob;	state dead;
branches;
next	1.3;

1.3
date	2004.05.18.11.33.09;	author jakob;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.14.18.43.54;	author jakob;	state dead;
branches;
next	1.1;

1.1
date	2004.02.18.19.25.38;	author jakob;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to nsd v2.1.1
@
text
@$OpenBSD: patch-zlexer_lex,v 1.3 2004/05/18 11:33:09 jakob Exp $
--- zlexer.lex.orig	2004-03-04 13:10:58.000000000 +0100
+++ zlexer.lex	2004-05-18 13:23:25.000000000 +0200
@@@@ -240,12 +240,14 @@@@ zrrtype (char *word) 
 	 * 'A' is first token defined in YACC. With this hack we
 	 * return the correct token based on our list of RR types
 	 */
-	int i,j;
-	/* known types */
+	int i,j,l;
+	const char *c;
+
+	l = strlen(word);
+
 	i = 0;
 	while ( RRtypes[i] != NULL ) {
-	/*for (i = 0; i < RRTYPES - 1; i++) {*/
-		if (strcasecmp(word, RRtypes[i]) == 0) {
+		if (strncasecmp(word, RRtypes[i],l) == 0) {
 			LEXOUT(("%s ", word));
 			return i + A;
 		}
@@@@ -256,18 +258,23 @@@@ zrrtype (char *word) 
 	j = intbytypexx(yytext);
 	
 	if ( j == 0 ) 
-		return 0; /* bail out here */
+		return 0; 
 
-	/* now it is TYPExxxx, and either we know it, or we don't */
-	LEXOUT(("TYPEx%d ", j));
-	
-	/* [XXX] need better handling here, this is not 100% tight */
-	if ( j < DNSKEY ) { /* last known type */
-		return j + A; /* now it's know, well does it? */
-	} else {
-		/* j == 0 is already handled */
-		LEXOUT(("UTYPE "));
+	/* is the unknown known? */
+	c = namebyint(j, ztypes);
+	if (c == NULL) {
+		LEXOUT(("TYPEx%d ", j));
 		return UTYPE;
+	} else {
+		/* re-check the known types again */
+		i = 0;
+		while ( RRtypes[i] != NULL ) {
+			if (strcasecmp(c, RRtypes[i]) == 0) {
+				LEXOUT(("%s ", c));
+				return i + A;
+			}
+			i++;	
+		}
 	}
 }
 
@


1.3
log
@fix unknown RRs (from miek)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to v2.1.0
@
text
@d1 56
a56 18
$OpenBSD: patch-zlexer_lex,v 1.1 2004/02/18 19:25:38 jakob Exp $
--- zlexer.lex.orig	2004-02-11 01:01:31.000000000 -0800
+++ zlexer.lex	2004-02-18 07:28:51.000000000 -0800
@@@@ -144,9 +144,11 @@@@ Q       \"
 			        BEGIN(INITIAL);
         		}	
 <<EOF>>			{	/* end of file is reached - check if we were including */
-        			if ( --include_stack_ptr < 0 )
-				            yyterminate();
-        			else {
+				if (include_stack_ptr == 0) {
+					yyterminate();
+        			} else {
+					--include_stack_ptr;
+					
 					/* pop (once you pop, you can not stop) */
 					current_parser->filename =
 						zparser_stack[include_stack_ptr].filename;
@


1.1
log
@fix broken lexer; from nlnetlabs via phessler
@
text
@d1 1
a1 1
$OpenBSD$
@

