head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.6
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.04.06.21.51.36;	author sthen;	state Exp;
branches;
next	;
commitid	St7zKOTrRpZXJZEQ;


desc
@@


1.1
log
@devel/gettext MODULES/LIB_DEPENDS conversion, and drop maintainer
@
text
@$OpenBSD$
--- jresolv.c.orig	Wed Apr 12 08:47:01 2006
+++ jresolv.c	Thu Dec 20 12:14:35 2012
@@@@ -23,6 +23,7 @@@@
 #include "jbase.h"
 #include "jconfig.h"
 #include <netinet/ip6.h>
+#include <stdint.h>
 
 static gboolean resolveStreamTCP(const gchar *data, guint len, jbase_stream *stream, jbase_payload_info *payloads) {
 	guint	hlen;
@@@@ -74,6 +75,19 @@@@ static gboolean resolveStreamIP(const gchar  *data, gu
 	hlen = IP_HL(ip) * 4;
 	if (hlen < sizeof(struct ip)) {
 		return FALSE;
+	}
+	if ((intptr_t)ip & (sizeof(long)-1)) {
+		static u_char *abuf = NULL;
+
+		if (abuf == NULL) {
+			abuf = (u_char *)malloc(1500);
+			if (abuf == NULL) {
+				printf("resolveStreamIP: malloc");
+				return TRUE;
+			}
+		}
+		memmove((char *)abuf, (char *)ip, len);
+		ip = (struct ip *)abuf;
 	}
 	memcpy(&stream->src.addr4, &ip->ip_src, sizeof(struct in_addr));
 	memcpy(&stream->dst.addr4, &ip->ip_dst, sizeof(struct in_addr));
@
