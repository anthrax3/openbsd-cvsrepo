head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.10
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.8
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	florian_20150102:1.1.1.1
	florian:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.01.02.14.29.01;	author florian;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Dr9uk4xwztLiP1Sp;

1.1.1.1
date	2015.01.02.14.29.01;	author florian;	state Exp;
branches;
next	;
commitid	Dr9uk4xwztLiP1Sp;


desc
@@



1.1
log
@Initial revision
@
text
@SHA256 (Net-IP-XS-0.13.tar.gz) = Py+M8QmR4E1OWBl1KA1yk5gPys2DbIRcrPF38aQlrMI=
SIZE (Net-IP-XS-0.13.tar.gz) = 64512
@


1.1.1.1
log
@Import net/p5-Net-IP-XS
input rpe@@, sthen@@
OK benoit@@ (earlier version), sthen@@

This module provides functions to deal with IPv4/IPv6 addresses. The
module can be used as a class, allowing the user to instantiate IP
objects, which can be single IP addresses, prefixes, or ranges of
addresses. There is also a procedural way of accessing most of the
functions. Most subroutines can take either IPv4 or IPv6 addresses              
transparently.
@
text
@@
