head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2017.09.13.01.16.00;	author jca;	state dead;
branches
	1.1.2.1;
next	;
commitid	OPlN0Df2c1JlrCuI;

1.1.2.1
date	2017.09.13.01.16.00;	author jca;	state Exp;
branches;
next	;
commitid	OPlN0Df2c1JlrCuI;


desc
@@


1.1
log
@file patch-ares_parse_naptr_reply_c was initially added on branch OPENBSD_6_1.
@
text
@@


1.1.2.1
log
@SECURITY fix for CVE-2017-1000381

CVE-2017-1000381: c-ares NAPTR parser out of bounds access

From upstream:
  https://c-ares.haxx.se/adv_20170620.html
  https://c-ares.haxx.se/CVE-2017-1000381.patch
@
text
@a0 34
$OpenBSD$

Fix for CVE-2017-1000381

From e1f43d4d7e89ef8db479d6efd0389c6b6ee1d116 Mon Sep 17 00:00:00 2001
From: David Drysdale <drysdale@@google.com>
Date: Mon, 22 May 2017 10:54:10 +0100
Subject: [PATCH 5/5] ares_parse_naptr_reply: check sufficient data

Check that there is enough data for the required elements
of an NAPTR record (2 int16, 3 bytes for string lengths)
before processing a record.

Index: ares_parse_naptr_reply.c
--- ares_parse_naptr_reply.c.orig
+++ ares_parse_naptr_reply.c
@@@@ -110,6 +110,12 @@@@ ares_parse_naptr_reply (const unsigned char *abuf, int
           status = ARES_EBADRESP;
           break;
         }
+      /* RR must contain at least 7 bytes = 2 x int16 + 3 x name */
+      if (rr_len < 7)
+        {
+          status = ARES_EBADRESP;
+          break;
+        }
 
       /* Check if we are really looking at a NAPTR record */
       if (rr_class == C_IN && rr_type == T_NAPTR)
@@@@ -185,4 +191,3 @@@@ ares_parse_naptr_reply (const unsigned char *abuf, int
 
   return ARES_SUCCESS;
 }
-
@

