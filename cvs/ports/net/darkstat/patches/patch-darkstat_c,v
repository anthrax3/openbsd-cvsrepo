head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.12
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.02.07.08.56.53;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.14.21.42.47;	author ckuethe;	state dead;
branches;
next	1.1;

1.1
date	2007.02.12.17.38.03;	author ckuethe;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to darkstat 3.0.718.

- Contains additional time_t related fixes.
- The author removed an assertion in timer_stop() I had run into and even
  though monotonic time is used somehow time went backwards.
- Change the rc.d script to use localhost instead of 127.0.0.1 to have
  darkstat also bind to the v6 address.

ok sthen@@
@
text
@$OpenBSD$

Re-instate the chroot by default code.

--- darkstat.c.orig	Thu Feb  6 02:48:20 2014
+++ darkstat.c	Thu Feb  6 02:56:07 2014
@@@@ -134,16 +134,44 @@@@ const char *opt_privdrop_user = NULL;
 static void cb_user(const char *arg) { opt_privdrop_user = arg; }
 
 const char *opt_daylog_fn = NULL;
-static void cb_daylog(const char *arg) { opt_daylog_fn = arg; }
+static void cb_daylog(const char *arg)
+{
+   if (opt_chroot_dir == NULL)
+      errx(1, "the daylog file is relative to the chroot.\n"
+      "You must specify a --chroot dir before you can use --daylog.");
+   else
+      opt_daylog_fn = arg;
+}
 
 const char *import_fn = NULL;
-static void cb_import(const char *arg) { import_fn = arg; }
+static void cb_import(const char *arg)
+{
+   if (opt_chroot_dir == NULL)
+      errx(1, "the import file is relative to the chroot.\n"
+      "You must specify a --chroot dir before you can use --import.");
+   else
+      import_fn = arg;
+}
 
 const char *export_fn = NULL;
-static void cb_export(const char *arg) { export_fn = arg; }
+static void cb_export(const char *arg)
+{
+   if ((opt_chroot_dir == NULL) && (opt_capfile == NULL))
+      errx(1, "the export file is relative to the chroot.\n"
+      "You must specify a --chroot dir before you can use --export.");
+   else
+      export_fn = arg;
+}
 
 static const char *pid_fn = NULL;
-static void cb_pidfile(const char *arg) { pid_fn = arg; }
+static void cb_pidfile(const char *arg)
+{
+   if (opt_chroot_dir == NULL)
+      errx(1, "the pidfile is relative to the chroot.\n"
+      "You must specify a --chroot dir before you can use --pidfile.");
+   else
+      pid_fn = arg;
+}
 
 unsigned int opt_hosts_max = 1000;
 static void cb_hosts_max(const char *arg)
@@@@ -306,7 +334,9 @@@@ static void parse_cmdline(const int argc, char * const
    if (opt_want_syslog)
       openlog("darkstat", LOG_NDELAY | LOG_PID, LOG_DAEMON);
 
-   /* default value */
+   /* some default values */
+   if (opt_chroot_dir == NULL)
+      opt_chroot_dir = CHROOT_DIR;
    if (opt_privdrop_user == NULL)
       opt_privdrop_user = PRIVDROP_USER;
 
@


1.2
log
@update to darkstat 3.0.619.
ok rui
@
text
@d1 65
a65 45
$OpenBSD: patch-darkstat_c,v 1.1 2007/02/12 17:38:03 ckuethe Exp $
--- darkstat.c.orig	Mon Jun 26 07:19:31 2006
+++ darkstat.c	Mon Feb 12 10:29:53 2007
@@@@ -54,7 +54,7 @@@@ parse_port(const char *str)
 static void
 usage(const char *arg0)
 {
-   printf("usage: %s [-d] -i interface [-p port] [-b bindaddr] [-f filter]\n",
+   printf("usage: %s [-d] [-n] -i interface [-p port] [-b bindaddr] [-f filter]\n",
       arg0);
    exit(EXIT_FAILURE);
 }
@@@@ -68,7 +68,7 @@@@ main(int argc, char **argv)
    int maxconn = -1;
    const char *interface = NULL;
    const char *filter = NULL;
-   int ch, want_daemonize = 0;
+   int ch, want_daemonize = 0, want_promisc = 1;
 
    printf(PACKAGE_STRING " using libpcap %d.%d\n",
       PCAP_VERSION_MAJOR, PCAP_VERSION_MINOR);
@@@@ -76,11 +76,14 @@@@ main(int argc, char **argv)
    if (close(STDIN_FILENO) == -1)
       warn("close(stdin)");
 
-   while ((ch = getopt(argc, argv, "di:p:b:f:")) != -1) {
+   while ((ch = getopt(argc, argv, "dni:p:b:f:")) != -1) {
    switch (ch) {
    case 'd':
       want_daemonize = 1;
       break;
+   case 'n':
+      want_promisc = 0;
+      break;
    case 'i':
       interface = optarg;
       break;
@@@@ -113,7 +116,7 @@@@ main(int argc, char **argv)
    dns_init(); /* do this first as it forks - minimize memory use */
 
    /* Need root privs for these: */
-   cap_init(interface, filter);
+   cap_init(interface, filter, want_promisc);
    http_init(bindaddr, bindport, maxconn);
    ncache_init(); /* don't need priv, but must do before chroot */
@


1.1
log
@Allow darkstat run without making the interface promiscuous. This was marked
as a FIXME in the source.
ok naddy
@
text
@d1 1
a1 1
$OpenBSD$
@

