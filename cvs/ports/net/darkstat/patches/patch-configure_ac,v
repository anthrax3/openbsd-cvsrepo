head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.14
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.12
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.02.07.08.56.53;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.14.21.42.47;	author ckuethe;	state dead;
branches;
next	1.1;

1.1
date	2006.11.11.18.11.09;	author ckuethe;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to darkstat 3.0.718.

- Contains additional time_t related fixes.
- The author removed an assertion in timer_stop() I had run into and even
  though monotonic time is used somehow time went backwards.
- Change the rc.d script to use localhost instead of 127.0.0.1 to have
  darkstat also bind to the v6 address.

ok sthen@@
@
text
@$OpenBSD$

Re-instate the chroot by default code.

--- configure.ac.orig	Thu Feb  6 02:47:13 2014
+++ configure.ac	Thu Feb  6 02:47:48 2014
@@@@ -6,6 +6,31 @@@@ AC_CONFIG_HEADER([config.h])
 
 RULE="------------------------------------------------------------"
 
+# Let user specify CHROOT_DIR, or else autodetect it, or else die.
+AC_ARG_WITH(chroot-dir, AS_HELP_STRING([--with-chroot-dir],
+ [specify the chroot directory (default: /var/empty)]),
+ [if test "x$withval" = "xyes"; then
+   AC_MSG_ERROR([please specify --with-chroot-dir=/path/to/darkstat/chroot])
+  fi
+  _chd="$withval"],
+ [# Find an "empty" directory to serve as the chroot.
+  _chd="/var/empty"
+  AC_MSG_CHECKING([for $_chd])
+  if test -d $_chd ; then
+   AC_MSG_RESULT(found it)
+  else
+   AC_MSG_RESULT(not there)
+   _chd="/var/lib/empty"
+   AC_MSG_CHECKING([for $_chd])
+   if test -d $_chd ; then
+    AC_MSG_RESULT(found it)
+   else
+    AC_MSG_RESULT(not there either)
+    AC_MSG_ERROR([please specify --with-chroot-dir=/path/to/darkstat/chroot])
+   fi
+  fi])
+AC_DEFINE_UNQUOTED(CHROOT_DIR, "$_chd", [Default chroot directory.])
+
 # Allow configure-time override of PRIVDROP_USER.
 AC_ARG_WITH(privdrop-user, AS_HELP_STRING([--with-privdrop-user],
  [specify which user to drop privileges to (default: nobody)]),
@


1.2
log
@update to darkstat 3.0.619.
ok rui
@
text
@d1 7
a7 4
$OpenBSD: patch-configure_ac,v 1.1 2006/11/11 18:11:09 ckuethe Exp $
--- configure.ac.orig	Sun Aug  6 20:20:54 2006
+++ configure.ac	Fri Nov  3 17:59:07 2006
@@@@ -114,27 +114,6 @@@@ fi
d9 1
d11 28
a38 25
 
-# Check for pcap_get_selectable_fd()
-AC_CHECK_LIB(pcap, pcap_get_selectable_fd,
- [AC_DEFINE(HAVE_PCAP_GET_SELECTABLE_FD, 1,
-  [Define to 1 if libpcap has pcap_get_selectable_fd().])],
- [cat <<END_MSG
-$RULE
-
-Your libpcap doesn't implement pcap_get_selectable_fd()
-This is indicative of an outdated libpcap.
-
-A workaround for this has been enabled (in cap.c) which may
-or may not work in your situation.  Either way, I would
-suggest that you upgrade the libpcap on your system and
-re-run configure.
-
-$RULE
-END_MSG
-])
-
-
-
 # A real OS will have err.h
 AC_CHECK_HEADERS(err.h)
 
@


1.1
log
@update to darkstat 3.0.540, plus the 3.0.553 patches.
ok jasper
@
text
@d1 1
a1 1
$OpenBSD$
@

