head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.10
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.22
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.20
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.18
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.16
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.14
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.12
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.8
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.6
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	jcs20090418:1.1.1.1
	jcs:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.01.10.17.29.14;	author jeremy;	state Exp;
branches;
next	1.1;
commitid	uXiYu5sMxq3eyYj3;

1.1
date	2009.04.18.19.34.34;	author jcs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.04.18.19.34.34;	author jcs;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to eventmachine 1.0.4
@
text
@$OpenBSD: patch-ext_ed_cpp,v 1.1.1.1 2009/04/18 19:34:34 jcs Exp $
--- ext/ed.cpp.orig	Wed Dec 31 16:00:00 1969
+++ ext/ed.cpp	Fri Nov 28 18:16:12 2014
@@@@ -1018,11 +1018,8 @@@@ void ConnectionDescriptor::_WriteOutboundData()
 	}
 	#endif
 
-	// We should never have gotten here if there were no data to write,
-	// so assert that as a sanity check.
-	// Don't bother to make sure nbytes is less than output_buffer because
-	// if it were we probably would have crashed already.
-	assert (nbytes > 0);
+	if (nbytes <= 0)
+		return;
 
 	assert (GetSocket() != INVALID_SOCKET);
 	#ifdef HAVE_WRITEV
@@@@ -1687,6 +1684,9 @@@@ void DatagramDescriptor::Write()
 	EpollEvent.events = (EPOLLIN | (SelectForWrite() ? EPOLLOUT : 0));
 	assert (MyEventMachine);
 	MyEventMachine->Modify (this);
+	#endif
+	#ifdef HAVE_KQUEUE
+	MyEventMachine->ArmKqueueWriter (this);
 	#endif
 	#ifdef HAVE_KQUEUE
 	if (SelectForWrite())
@


1.1
log
@Initial revision
@
text
@d1 4
a4 5
$OpenBSD$
--- ext/ed.cpp.orig	Wed Dec 31 18:00:00 1969
+++ ext/ed.cpp	Mon Mar 30 10:17:39 2009
@@@@ -643,11 +643,8 @@@@ void ConnectionDescriptor::_WriteOutboundData()
 		}
d6 1
d17 3
a19 3
 	int bytes_written = send (GetSocket(), output_buffer, nbytes, 0);
@@@@ -1294,6 +1291,9 @@@@ int DatagramDescriptor::SendOutboundData (const char *
 	EpollEvent.events = (EPOLLIN | EPOLLOUT);
d26 2
a27 2
 	return length;
 }
@


1.1.1.1
log
@import eventmachine-0.12.6, an event-driven i/o library for ruby
@
text
@@
