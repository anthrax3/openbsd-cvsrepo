head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.58
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.56
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.54
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.50
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.52
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.48
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.46
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.44
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.42
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.40
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.38
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.36
	OPENBSD_5_0:1.1.0.34
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.32
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.30
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.28
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.26
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.24
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.22
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.20
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.18
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.16
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.14
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.12
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.10
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.8
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2003.04.16.19.36.46;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.1
log
@correct a nasty little typo in a string bound which a gives wrong value
(sizeof(DEVBUF-1)) -> (sizeof(DEVBUF)-1)

brad@@ ok
@
text
@$OpenBSD$
--- queso.c.orig	Tue Sep 22 21:35:43 1998
+++ queso.c	Mon Apr 14 23:53:09 2003
@@@@ -58,19 +58,19 @@@@ char *DEVICE=NULL, DEVBUFF[255];
 static char CFGFILE[255] = DFLT_CONFIG_FILE;
 
 /*------------- Prototiping -----------------*/
-void debugtcp (unsigned long, tcprec);
+void debugtcp (u_int32_t, tcprec);
 void usage (const char *);
 int checkos (struct sockaddr_in, short);
 
 /*------------- Print TCP HDR ---------------*/
 void
-debugtcp (unsigned long myseq, tcprec tcp)
+debugtcp (u_int32_t myseq, tcprec tcp)
 {
   fprintf (stderr, "%d->%d S:%1d A:%s%lX W:%04X U:%X F: ",
 	   ntohs (tcp.sport), ntohs (tcp.dport),
 	   (tcp.seqnum?1:0),
 	   tcp.acknum?"+":" ",
-	   (tcp.acknum?(unsigned long) ntohl (tcp.acknum)-myseq:0),
+	   (unsigned long) (tcp.acknum?(u_int32_t) ntohl (tcp.acknum)-myseq:0),
 	   ntohs (tcp.window), ntohs (tcp.urgentptr));
 
   if (tcp.flags & URG)
@@@@ -142,12 +142,12 @@@@ usage (const char *progname)
 
 typedef struct
 {
-  unsigned short set;
-  unsigned long seq;
-  unsigned long ack;
-  unsigned short urg;
-  unsigned short win;
-  unsigned short flag;
+  u_int16_t set;
+  u_int32_t seq;
+  u_int32_t ack;
+  u_int16_t urg;
+  u_int16_t win;
+  u_int16_t flag;
 }
 OSRES;
 
@@@@ -158,12 +158,12 @@@@ check_os (struct sockaddr_in from, struc
 {
   spoofrec spoof;
   tcprec tcp;
-  unsigned short start, s;
+  u_int16_t start, s;
   int n;
   long timeout;
   FILE *f;
   char line[1024];
-  unsigned long myseq;
+  u_int32_t myseq;
 #ifdef PCAP
   char fromtxt[16], desttxt[16];
   char bpftxt[4096];
@@@@ -284,8 +284,8 @@@@ check_os (struct sockaddr_in from, struc
   if ((f = fopen (CFGFILE, "r")))
     {
       char osname[256];		/* should be smaller than line[], 256 should suffice */
-      unsigned short flag1 = 0, found = 0, linez = 0;
-      unsigned short pn = 0, ps = 0, pa = 0, pw = 0, pf = 0, pu = 0;
+      u_int16_t flag1 = 0, found = 0, linez = 0;
+      u_int16_t pn = 0, ps = 0, pa = 0, pw = 0, pf = 0, pu = 0;
       char *p;
 
       while (fgets (line, sizeof (osname) - 1, f))
@@@@ -412,7 +412,7 @@@@ check_os (struct sockaddr_in from, struc
 	      if (CONFIGDEBUG)
 		fprintf (stderr, " ** FAILED %d,%d,%d,%d,%02X != %ld,%ld,%d,%d,%02X\n", 
 			 ps, pa, pw, pu, pf, 
-			 r[pn].seq,r[pn].ack,r[pn].win,r[pn].urg,r[pn].flag);
+			 (unsigned long) r[pn].seq,(unsigned long) r[pn].ack,r[pn].win,r[pn].urg,r[pn].flag);
 	      found = 0;
 	      flag1 = 0;
 	      continue;
@@@@ -483,9 +483,9 @@@@ check_os (struct sockaddr_in from, struc
 	      if (r[pn].set) 
 		{
 		  fprintf ( f, "%d %ld %s",
-			   pn, r[pn].seq, (r[pn].ack==RANDOM_ACK?"R":((r[pn].ack>=ACK_HACK)?"+":"")) );
+			   pn, (long) r[pn].seq, (r[pn].ack==RANDOM_ACK?"R":((r[pn].ack>=ACK_HACK)?"+":"")) );
 		  if(r[pn].ack!=RANDOM_ACK) 
-		      fprintf ( f, "%ld", (r[pn].ack>=ACK_HACK)?r[pn].ack-ACK_HACK:r[pn].ack);
+		    fprintf ( f, "%ld", (long) /* shut up a warning */ ((r[pn].ack>=ACK_HACK)?r[pn].ack-ACK_HACK:r[pn].ack));
 		  fprintf ( f, " %d %s\n", r[pn].win ? 1 : 0, line);
 		}
 	      else
@@@@ -516,13 +516,13 @@@@ int
 main (int argc, char *argv[])
 {
   struct sockaddr_in dest, from;
-  unsigned short port;
+  u_int16_t port;
   char *s, *p;
   int c;
   int accuracy;
   int limit = 0;
   int bits = 32;		/* single host */
-  unsigned long firsthost, lasthost, netmask, host;
+  u_int32_t firsthost, lasthost, netmask, host;
   
   /*
    * Unbuffer stdout and stderr
@@@@ -576,7 +576,7 @@@@ main (int argc, char *argv[])
 	  Zzz = atoi (optarg);
 	  break;
 	case 'i':
-	  strncpy(DEVBUFF,optarg,sizeof(DEVBUFF-1));
+	  strncpy(DEVBUFF,optarg,sizeof(DEVBUFF)-1);
 	  DEVICE=DEVBUFF;
 	  break;
 	default:
@@@@ -652,7 +652,13 @@@@ main (int argc, char *argv[])
       }
     
     host = ntohl (dest.sin_addr.s_addr);
-    netmask = ~(0xFFFFFFFFL >> bits);
+    netmask = 0xFFFFFFFFL;
+    if(bits >= 1){
+       netmask >>= 1;
+       bits--;
+    }
+    netmask >>= bits;
+    netmask = ~netmask;
     /*-- WARNING: 32bit arquitectures have problems when bits==32 --*/
     firsthost = (host & netmask) + 1;
     lasthost = (host | ~(netmask)) - 1;
@
