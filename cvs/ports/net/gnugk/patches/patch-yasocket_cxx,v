head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.1.0.2
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.08.28.08.31.29;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	WosH3tVflD5ananQ;

1.2
date	2017.05.19.22.55.35;	author espie;	state Exp;
branches;
next	1.1;
commitid	durDEYmBtds8hNCx;

1.1
date	2016.12.05.10.01.13;	author ajacoutot;	state Exp;
branches;
next	;
commitid	rG1Oy2oMkFHXS4Hx;


desc
@@


1.3
log
@Update to gnugk-4.5.
@
text
@$OpenBSD: patch-yasocket_cxx,v 1.2 2017/05/19 22:55:35 espie Exp $

Index: yasocket.cxx
--- yasocket.cxx.orig
+++ yasocket.cxx
@@@@ -21,6 +21,7 @@@@
 #include "Toolkit.h"
 #include "snmp.h"
 #include "gk.h"
+#include <unistd.h>
 
 #ifdef _WIN32
 #	ifndef SHUT_RDWR
@


1.2
log
@use .beforesubst so that patch regen doesn't fuck up
missing headers for clang
@
text
@d1 1
a1 3
$OpenBSD: patch-yasocket_cxx,v 1.1 2016/12/05 10:01:13 ajacoutot Exp $

http://openh323gk.cvs.sourceforge.net/viewvc/openh323gk/openh323gk/yasocket.cxx?r1=1.100&r2=1.101
d6 1
a6 1
@@@@ -20,6 +20,7 @@@@
a13 16
@@@@ -636,7 +637,14 @@@@ int YaUDPSocket::os_recv(void * buf, int sz)
 
 int YaUDPSocket::os_send(const void * buf, int sz)
 {
-	return ::sendto(os_handle, buf, sz, 0, (struct sockaddr *)&sendaddr, sizeof(sendaddr));
+	// must pass short len when sending to IPv4 address on Solaris 11, OpenBSD and NetBSD
+	// sizeof(sockaddr) would OK on Linux and FreeBSD
+	size_t addr_len = sizeof(sockaddr_in);
+#ifdef hasIPV6
+	if (((struct sockaddr*)&sendaddr)->sa_family == AF_INET6)
+		addr_len = sizeof(sockaddr_in6);
+#endif  // hasIPV6
+	return ::sendto(os_handle, buf, sz, 0, (struct sockaddr *)&sendaddr, addr_len);
 }
 
 #else // LARGE_FDSET
@


1.1
log
@Fix UDP sending (from upstream).
@
text
@d1 1
a1 1
$OpenBSD$
d5 12
a16 3
--- yasocket.cxx.orig	Mon Jan 18 22:39:46 2016
+++ yasocket.cxx	Mon Dec  5 10:59:36 2016
@@@@ -636,7 +636,14 @@@@ int YaUDPSocket::os_recv(void * buf, int sz)
@

