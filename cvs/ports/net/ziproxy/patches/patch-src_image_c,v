head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.8
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.6
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.03.28.16.06.48;	author sthen;	state Exp;
branches;
next	1.3;
commitid	FQZhFx5o32GR3pY6;

1.3
date	2013.09.25.07.58.46;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2012.09.27.13.17.12;	author gonzalo;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.08.20.38.01;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@handle giflib api change, reported by naddy
@
text
@$OpenBSD: patch-src_image_c,v 1.3 2013/09/25 07:58:46 sthen Exp $

Fix build with giflib-5.1

--- src/image.c.orig	Wed Dec  3 11:58:33 2014
+++ src/image.c	Sat Mar 28 16:03:38 2015
@@@@ -905,7 +905,7 @@@@ int gif2bitmap(char *inbuf, int insize, raw_bitmap **o
 	desc.size=insize;
 	desc.x.pos=0;
 
-	if ((GifFile = DGifOpen((void*)&desc, &gif_mem_input)) == NULL) 
+	if ((GifFile = DGifOpen((void*)&desc, &gif_mem_input, NULL)) == NULL) 
     		return( IMG_RET_ERR_UNKNOWN + IMG_RET_FLG_WHILE_DECOMP);//more possible reasons
 
 	bmp = new_raw_bitmap();
@@@@ -1083,7 +1083,7 @@@@ int gif2bitmap(char *inbuf, int insize, raw_bitmap **o
 	}
 	bmp->pal_bpp = bmp->bpp;
 	
-	DGifCloseFile(GifFile);
+	DGifCloseFile(GifFile, NULL);
 	return IMG_RET_OK;
 }
 
@@@@ -1738,7 +1738,7 @@@@ static int bitmap2jp2 (raw_bitmap *bmp, float rate, ch
 		cmptparm->width = cwidth [cmptno];
 		cmptparm->height = cheight [cmptno];
 		cmptparm->prec = cbitlen [cmptno];
-		cmptparm->sgnd = false;	// we only generate unsigned components
+		cmptparm->sgnd = 0;	// we only generate unsigned components
 
 		cshiftR [cmptno] = 8 - cbitlen [cmptno]; // calculate the resampling shift for this component
 	}
@


1.3
log
@libungif->giflib and patch where necessary, ok jasper@@ aja@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_image_c,v 1.2 2012/09/27 13:17:12 gonzalo Exp $
d3 1
a3 1
Fix build with giflib-5.0
d5 2
a6 2
--- src/image.c.orig	Wed Feb  8 06:02:15 2012
+++ src/image.c	Thu Sep 19 05:01:14 2013
d16 9
@


1.2
log
@Update for Ziproxy to 3.2.1:

* Changed HTTP authentication code to a modular one.
* Added SASL support for HTTP authentication.
* Fixed compilation issues with libpng 1.5.x.

And other, while here GROFF is not needed, change
configure style, add rc.d(8) script, and edd@@ drop
maintership, I take care of this now.

Tested on amd64 and i386.

Ok edd@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_image_c,v 1.1 2011/07/08 20:38:01 naddy Exp $
d3 1
a3 1
Fix build with png-1.5.
d5 10
a14 3
--- src/image.c.orig	Fri Sep  7 09:48:04 2012
+++ src/image.c	Fri Sep  7 09:48:44 2012
@@@@ -557,7 +557,7 @@@@ int png2bitmap(char *inbuf, int insize, raw_bitmap **o
d16 6
a21 1
 	*out = bmp;
d23 2
a24 5
-	png_set_read_fn (png_ptr, (void *) &desc, mem_to_png);
+	png_set_read_fn(png_ptr,&desc,mem_to_png);
 	
 	png_read_info (png_ptr,info_ptr);
 	png_get_IHDR (png_ptr, info_ptr, &width_png_uint_32, &height_png_uint_32,
@


1.1
log
@Fix build with png-1.5.
All fixes by yours truly.
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 11
--- src/image.c.orig	Wed Jul  6 16:17:52 2011
+++ src/image.c	Wed Jul  6 17:09:51 2011
@@@@ -27,6 +27,7 @@@@
 #undef GLOBAL
 
 #include <png.h>
+#include <zlib.h>
 
 #ifdef JP2K
 #include <jasper/jasper.h>
@@@@ -407,7 +408,7 @@@@ int png2bitmap(char *inbuf, int insize, raw_bitmap **o
d11 1
a11 1
-	png_set_read_fn(png_ptr,(voidp)&desc,mem_to_png);
d14 2
a15 11
 	png_read_info(png_ptr,info_ptr);
 	png_get_IHDR(png_ptr,info_ptr,(png_uint_32*)&(bmp->width),
@@@@ -457,7 +458,7 @@@@ int png2bitmap(char *inbuf, int insize, raw_bitmap **o
 				color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
 	{
 		grayscale=1;	
-        if(bit_depth < 8) png_set_gray_1_2_4_to_8(png_ptr);
+        if(bit_depth < 8) png_set_expand_gray_1_2_4_to_8(png_ptr);
 	}else grayscale=0;
 	
 	if (bit_depth == 16)
@

