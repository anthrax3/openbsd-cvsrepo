head	1.1;
access;
symbols
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_5:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2004.08.19.02.12.03;	author brad;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2004.08.19.02.12.03;	author brad;	state Exp;
branches;
next	;

1.1.4.1
date	2004.08.19.03.00.44;	author brad;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-src_common_server_c was initially added on branch OPENBSD_3_5.
@
text
@@


1.1.4.1
log
@XChat's Socks-5 proxy code is vulnerable to a remote exploit. To
successfully exploit the code, you would need to enable socks5
traversal (default off) and connect to the attacker's own custom
proxy server.

If you never intend to use a Socks5 proxy, you are not affected at
all by this issue.

http://mail.nl.linux.org/xchat-announce/2004-04/msg00000.html
@
text
@a0 21
$OpenBSD: patch-src_common_server_c,v 1.1.2.1 2004/08/19 02:12:03 brad Exp $
--- src/common/server.c.orig	Sun Dec 14 06:14:17 2003
+++ src/common/server.c	Wed Aug 18 21:59:44 2004
@@@@ -1053,7 +1053,7 @@@@ traverse_socks5 (int sok, char *serverAd
 	struct sock5_connect1 sc1;
 	unsigned char *sc2;
 	unsigned int packetlen, addrlen;
-	unsigned char buf[10];
+	unsigned char buf[260];
 
 	sc1.version = 5;
 	sc1.nmethods = 1;
@@@@ -1094,7 +1094,7 @@@@ traverse_socks5 (int sok, char *serverAd
 	{
 		if (recv (sok, buf, 1, 0) != 1)
 			return 1;
-		packetlen = buf[0] + 2;
+		packetlen = buf[0] + 2; /* can't exceed 260 */
 		if (recv (sok, buf, packetlen, 0) != packetlen)
 			return 1;
 	}
@


1.1.2.1
log
@XChat's Socks-5 proxy code is vulnerable to a remote exploit. To
successfully exploit the code, you would need to enable socks5
traversal (default off) and connect to the attacker's own custom
proxy server.

If you never intend to use a Socks5 proxy, you are not affected at
all by this issue.

http://mail.nl.linux.org/xchat-announce/2004-04/msg00000.html
@
text
@a0 21
$OpenBSD$
--- src/common/server.c.orig	Sun Dec 14 06:14:17 2003
+++ src/common/server.c	Wed Aug 18 21:59:44 2004
@@@@ -1053,7 +1053,7 @@@@ traverse_socks5 (int sok, char *serverAd
 	struct sock5_connect1 sc1;
 	unsigned char *sc2;
 	unsigned int packetlen, addrlen;
-	unsigned char buf[10];
+	unsigned char buf[260];
 
 	sc1.version = 5;
 	sc1.nmethods = 1;
@@@@ -1094,7 +1094,7 @@@@ traverse_socks5 (int sok, char *serverAd
 	{
 		if (recv (sok, buf, 1, 0) != 1)
 			return 1;
-		packetlen = buf[0] + 2;
+		packetlen = buf[0] + 2; /* can't exceed 260 */
 		if (recv (sok, buf, packetlen, 0) != packetlen)
 			return 1;
 	}
@

