head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.10
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.8
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.4
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2014.12.09.15.20.06;	author sthen;	state Exp;
branches;
next	1.5;
commitid	GeM80Hk0rAfPyGK0;

1.5
date	2013.05.17.22.42.24;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2011.07.07.20.02.02;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2011.07.06.21.32.57;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.25.22.59.12;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.22.18.46.36;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.6
log
@update to Net-SNMP 5.7.3

- roll -perl subpackage into -main, this greatly simplifies PLIST handling
for package updates. bumps to dependent ports to follow after this commit.
@
text
@$OpenBSD: patch-agent_mibgroup_hardware_cpu_cpu_sysctl_c,v 1.5 2013/05/17 22:42:24 sthen Exp $

swapins/swapouts were removed from struct uvmexp in uvm_extern.h 1.105

--- agent/mibgroup/hardware/cpu/cpu_sysctl.c.orig	Tue Feb 25 20:50:16 2014
+++ agent/mibgroup/hardware/cpu/cpu_sysctl.c	Thu Mar 20 12:52:45 2014
@@@@ -127,6 +127,10 @@@@ void init_cpu_sysctl( void ) {
 #else /* VM_UVMEXP */                     /* OpenBSD 3+, NetBSD 1.6+ */
 #define NETSNMP_VM_STATS       VM_UVMEXP
 #define NETSNMP_VM_STATS_TYPE  struct uvmexp
+#if defined(openbsd5)
+    #undef NS_VM_SWAPIN
+    #undef NS_VM_SWAPOUT
+#endif  /* openbsd5 */
 #endif  /* VM_UVMEXP2 || VM_UVMEXP */
 
 #elif defined(__FreeBSD__)                /* FreeBSD */
@@@@ -209,8 +213,12 @@@@ int netsnmp_cpu_arch_load( netsnmp_cache *cache, void 
     sysctl(mem_mib, 2, &mem_stats, &mem_size, NULL, 0);
     cpu->nInterrupts  = mem_stats.NS_VM_INTR;
     cpu->nCtxSwitches = mem_stats.NS_VM_SWTCH;
+#ifdef NS_VM_SWAPIN
     cpu->swapIn       = mem_stats.NS_VM_SWAPIN;
+#endif
+#ifdef NS_VM_SWAPOUT
     cpu->swapOut      = mem_stats.NS_VM_SWAPOUT;
+#endif
 #ifdef NS_VM_PAGEIN
     cpu->pageIn       = mem_stats.NS_VM_PAGEIN;
 #endif
@@@@ -270,8 +278,12 @@@@ int netsnmp_cpu_arch_load( netsnmp_cache *cache, void 
 	 */
 	cpu->nInterrupts  = mem_stats.NS_VM_INTR;
 	cpu->nCtxSwitches = mem_stats.NS_VM_SWTCH;
+#ifdef NS_VM_SWAPIN
 	cpu->swapIn       = mem_stats.NS_VM_SWAPIN;
+#endif
+#ifdef NS_VM_SWAPOUT
 	cpu->swapOut      = mem_stats.NS_VM_SWAPOUT;
+#endif
 #ifdef NS_VM_PAGEIN
 	cpu->pageIn       = mem_stats.NS_VM_PAGEIN;
 #endif
@


1.5
log
@handle removal of swapins/swapouts from struct uvmexp in uvm_extern.h 1.105
similar to a diff from Pavel Korovin, also reported by Mark Patruck
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- agent/mibgroup/hardware/cpu/cpu_sysctl.c.orig	Tue Oct  9 16:28:58 2012
+++ agent/mibgroup/hardware/cpu/cpu_sysctl.c	Fri May 17 09:06:10 2013
@@@@ -115,6 +115,10 @@@@ void init_cpu_sysctl( void ) {
d18 1
a18 1
@@@@ -193,8 +197,12 @@@@ int netsnmp_cpu_arch_load( netsnmp_cache *cache, void 
d20 2
a21 2
     cpu->nInterrupts  = (unsigned long long)mem_stats.NS_VM_INTR;
     cpu->nCtxSwitches = (unsigned long long)mem_stats.NS_VM_SWTCH;
d23 1
a23 1
     cpu->swapIn       = (unsigned long long)mem_stats.NS_VM_SWAPIN;
d26 1
a26 1
     cpu->swapOut      = (unsigned long long)mem_stats.NS_VM_SWAPOUT;
d29 14
a42 1
     cpu->pageIn       = (unsigned long long)mem_stats.NS_VM_PAGEIN;
@


1.4
log
@update to Net-SNMP 5.7 and clean up the patches a lot.

- rc scripts added (names suggested by Nigel Taylor, I was having
a hard time coming up with something nice that avoid a conflict with
base snmpd now the rc.d namespace is shared).
@
text
@d1 15
a15 16
$OpenBSD: patch-agent_mibgroup_hardware_cpu_cpu_sysctl_c,v 1.3 2011/07/06 21:32:57 sthen Exp $
--- agent/mibgroup/hardware/cpu/cpu_sysctl.c.orig	Sat Jun 12 22:33:30 2010
+++ agent/mibgroup/hardware/cpu/cpu_sysctl.c	Wed Jul  6 15:07:21 2011
@@@@ -37,9 +37,10 @@@@ void _cpu_copy_stats( netsnmp_cpu_info *cpu );
      *   (including descriptions)
      */
 void init_cpu_sysctl( void ) {
-    int               i, n;
+    int               n;
     int               ncpu_mib[]  = { CTL_HW, HW_NCPU };
     int               model_mib[] = { CTL_HW, HW_MODEL };
+    size_t            i;
     char              descr[ SNMP_MAXBUF ];
     netsnmp_cpu_info  *cpu = netsnmp_cpu_get_byIdx( -1, 1 );
     strcpy(cpu->name, "Overall CPU statistics");
@@@@ -190,8 +191,9 @@@@ int netsnmp_cpu_arch_load( netsnmp_cache *cache, void 
d17 14
a30 9
 #ifdef NETSNMP_KERN_MCPU
     mcpu_stats = (NETSNMP_KERN_MCPU_TYPE *)malloc(cpu_num*sizeof(NETSNMP_KERN_MCPU_TYPE));
+    mcpu_size = sizeof(mcpu_stats);
     sysctl(mcpu_mib, 2, mcpu_stats,
-           cpu_num*sizeof(NETSNMP_KERN_MCPU_TYPE), NULL, 0);
+           &mcpu_size, NULL, 0);
     for ( i = 0; i < cpu_num; i++ ) {
         cpu = netsnmp_cpu_get_byIdx( i, 0 );
         /* XXX - per-CPU statistics - mcpu_mib[i].??? */
@


1.3
log
@- convert kinfo_proc2 -> kinfo_procs

- don't use "#if defined(openbsd3) || defined(openbsd4)" all over the place,
this is definitely not web scale

- zap some pointless ifdefs
@
text
@d1 1
a1 1
$OpenBSD: patch-agent_mibgroup_hardware_cpu_cpu_sysctl_c,v 1.2 2010/10/25 22:59:12 sthen Exp $
@


1.2
log
@update Net-SNMP to 5.6 and switch to kvm_getproc2, thanks landry for testing
"commit it!" landry@@
@
text
@d1 1
a1 5
$OpenBSD: patch-agent_mibgroup_hardware_cpu_cpu_sysctl_c,v 1.1 2008/09/22 18:46:36 sthen Exp $

the last chunk is probably not used yet, but what they have now
is plain wrong, so it may as well go in here so it's not lost.

d3 2
a4 2
+++ agent/mibgroup/hardware/cpu/cpu_sysctl.c	Wed Oct  6 23:34:18 2010
@@@@ -37,19 +37,20 @@@@ void _cpu_copy_stats( netsnmp_cpu_info *cpu );
a15 12
 
     i = sizeof(n);
-    sysctl(ncpu_mib, 2, &n, (void *)&i, NULL, 0);
+    sysctl(ncpu_mib, 2, &n, &i, NULL, 0);
     if ( n <= 0 )
         n = 1;   /* Single CPU system */
     i = sizeof(descr);
-    sysctl(model_mib, 2, descr, (void *)&i, NULL, 0);
+    sysctl(model_mib, 2, descr, &i, NULL, 0);
     for ( i = 0; i < n; i++ ) {
         cpu = netsnmp_cpu_get_byIdx( i, 1 );
         cpu->status = 2;  /* running */
@


1.1
log
@- re-enable kmem support, with 5.4.2 there don't seem to be
any problems on tested arch (including the ones that used to
have trouble).

- repair sysctl() use in cpu_sysctl.c, it was using the wrong
type and at least on some arch the system call was failing, so
because the code isn't careful about checking return codes and
thus used uninitialized space, it tried to allocate memory for
info structures for 128 million CPUs on one of my systems...

"definitely ok" rui@@
@
text
@d1 1
a1 1
$OpenBSD$
d6 2
a7 2
--- agent/mibgroup/hardware/cpu/cpu_sysctl.c.orig	Mon Sep 22 00:58:02 2008
+++ agent/mibgroup/hardware/cpu/cpu_sysctl.c	Mon Sep 22 01:06:11 2008
d32 1
a32 1
@@@@ -190,8 +191,8 @@@@ int netsnmp_cpu_arch_load( netsnmp_cache *cache, void 
d35 3
a37 2
     mcpu_stats = malloc(cpu_num*sizeof(NETSNMP_KERN_MCPU_TYPE));
-    sysctl(mcpu_mib, 2, mcpu_stats,
d39 1
a39 2
+    mcpu_size = sizeof(mcpu_stats);
+    sysctl(mcpu_mib, 2, mcpu_stats, &mcpu_size, NULL, 0);
@

