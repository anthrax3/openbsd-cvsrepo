head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2014.12.09.15.20.06;	author sthen;	state Exp;
branches;
next	1.4;
commitid	GeM80Hk0rAfPyGK0;

1.4
date	2013.12.20.02.20.00;	author krw;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.07.20.02.02;	author sthen;	state dead;
branches;
next	1.2;

1.2
date	2011.07.06.21.32.57;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.25.22.59.12;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to Net-SNMP 5.7.3

- roll -perl subpackage into -main, this greatly simplifies PLIST handling
for package updates. bumps to dependent ports to follow after this commit.
@
text
@$OpenBSD: patch-agent_mibgroup_mibII_udpTable_c,v 1.4 2013/12/20 02:20:00 krw Exp $
--- agent/mibgroup/mibII/udpTable.c.orig	Tue Feb 25 20:50:16 2014
+++ agent/mibgroup/mibII/udpTable.c	Thu Mar 20 12:41:29 2014
@@@@ -65,7 +65,7 @@@@ struct netsnmp_udpEntry_s {
 #define INP_NEXT_SYMBOL		inp_next
 #endif
 #ifdef openbsd4
-#define INP_NEXT_SYMBOL		inp_queue.cqe_next	/* or set via <net-snmp/system/openbsd.h> */
+#define INP_NEXT_SYMBOL		inp_queue.tqe_next	/* or set via <net-snmp/system/openbsd.h> */
 #endif
 
 #if defined(freebsd4) || defined(darwin) || defined(osf5)
@@@@ -706,7 +706,7 @@@@ udpTable_load(netsnmp_cache *cache, void *vmagic)
     /*
      *  Set up a linked list
      */
-    entry  = table.inpt_queue.cqh_first;
+    entry  = TAILQ_FIRST(&table.inpt_queue);
     while (entry) {
    
         nnew = SNMP_MALLOC_TYPEDEF(struct inpcb);
@@@@ -718,11 +718,11 @@@@ udpTable_load(netsnmp_cache *cache, void *vmagic)
             break;
         }
 
-        entry    = nnew->inp_queue.cqe_next;	/* Next kernel entry */
-	nnew->inp_queue.cqe_next = udp_head;
+        entry    = TAILQ_NEXT(nnew, inp_queue);	/* Next kernel entry */
+	nnew->inp_queue.tqe_next = udp_head;
 	udp_head = nnew;
 
-        if (entry == table.inpt_queue.cqh_first)
+        if (entry == NULL)
             break;
     }
 
@


1.4
log
@Adapt to change of inpt_queue to TAILQ from CIRCLEQ.

ok sthen@@
@
text
@d1 3
a3 3
$OpenBSD$
--- agent/mibgroup/mibII/udpTable.c.orig	Tue Oct  9 18:28:58 2012
+++ agent/mibgroup/mibII/udpTable.c	Fri Nov 29 14:52:47 2013
d13 1
a13 1
@@@@ -705,7 +705,7 @@@@ udpTable_load(netsnmp_cache *cache, void *vmagic)
d22 1
a22 1
@@@@ -717,11 +717,11 @@@@ udpTable_load(netsnmp_cache *cache, void *vmagic)
@


1.3
log
@update to Net-SNMP 5.7 and clean up the patches a lot.

- rc scripts added (names suggested by Nigel Taylor, I was having
a hard time coming up with something nice that avoid a conflict with
base snmpd now the rc.d namespace is shared).
@
text
@d1 4
a4 5
$OpenBSD: patch-agent_mibgroup_mibII_udpTable_c,v 1.2 2011/07/06 21:32:57 sthen Exp $
--- agent/mibgroup/mibII/udpTable.c.orig	Sun Oct 24 19:33:28 2010
+++ agent/mibgroup/mibII/udpTable.c	Sun Oct 24 19:34:04 2010
@@@@ -64,6 +64,10 @@@@ struct netsnmp_udpEntry_s {
 #ifdef linux
d7 4
a10 4
+#ifdef openbsd
+#undef INP_NEXT_SYMBOL
+#define INP_NEXT_SYMBOL		inp_queue.cqe_next
+#endif
d13 24
a36 1
 typedef struct netsnmp_inpcb_s netsnmp_inpcb;
@


1.2
log
@- convert kinfo_proc2 -> kinfo_procs

- don't use "#if defined(openbsd3) || defined(openbsd4)" all over the place,
this is definitely not web scale

- zap some pointless ifdefs
@
text
@d1 1
a1 1
$OpenBSD: patch-agent_mibgroup_mibII_udpTable_c,v 1.1 2010/10/25 22:59:12 sthen Exp $
@


1.1
log
@update Net-SNMP to 5.6 and switch to kvm_getproc2, thanks landry for testing
"commit it!" landry@@
@
text
@d1 1
a1 1
$OpenBSD$
d4 1
a4 1
@@@@ -64,6 +64,11 @@@@ struct netsnmp_udpEntry_s {
d8 1
a8 2
+#ifdef openbsd4
+/* XXX smelly hack */
@

