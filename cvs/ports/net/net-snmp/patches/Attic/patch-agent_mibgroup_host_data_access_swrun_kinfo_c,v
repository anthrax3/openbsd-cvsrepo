head	1.9;
access;
symbols
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.4
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.9
date	2014.12.09.15.20.06;	author sthen;	state dead;
branches;
next	1.8;
commitid	GeM80Hk0rAfPyGK0;

1.8
date	2012.12.18.21.38.12;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2012.10.18.14.01.45;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2011.11.18.12.39.06;	author sthen;	state Exp;
branches;
next	1.5;

1.5
date	2011.07.07.21.51.22;	author sthen;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2011.07.07.20.02.02;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.06.21.32.57;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.26.00.42.21;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.25.22.59.12;	author sthen;	state Exp;
branches;
next	;

1.5.2.1
date	2011.11.29.08.57.07;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.9
log
@update to Net-SNMP 5.7.3

- roll -perl subpackage into -main, this greatly simplifies PLIST handling
for package updates. bumps to dependent ports to follow after this commit.
@
text
@$OpenBSD: patch-agent_mibgroup_host_data_access_swrun_kinfo_c,v 1.8 2012/12/18 21:38:12 sthen Exp $
--- agent/mibgroup/host/data_access/swrun_kinfo.c.orig	Tue Oct  9 16:28:58 2012
+++ agent/mibgroup/host/data_access/swrun_kinfo.c	Thu Dec  6 15:32:14 2012
@@@@ -3,7 +3,7 @@@@
  *     hrSWRunTable data access:
  *     kvm_getprocs() interface - FreeBSD, NetBSD, OpenBSD
  *
- * NB: later FreeBSD uses a different kinfo_proc structure
+ * NB: later FreeBSD and OpenBSD use different kinfo_proc structures
  */
 #include <net-snmp/net-snmp-config.h>
 
@@@@ -29,6 +29,9 @@@@
 #ifdef HAVE_SYS_PARAM_H
 #include <sys/param.h>
 #endif
+#ifdef HAVE_SYS_PROC_H
+#include <sys/proc.h>
+#endif
 #ifdef HAVE_SYS_SYSCTL_H
 #include <sys/sysctl.h>
 #endif
@@@@ -59,11 +62,15 @@@@ extern kvm_t *kd;
 #define SWRUN_K_FLAG	ki_flag
 #define SWRUN_K_CLASS	ki_pri.pri_class
 
-#elif HAVE_KVM_GETPROC2
+#elif HAVE_KVM_GETPROC2 || defined(openbsd5)
     /*
      * newer NetBSD, OpenBSD kinfo_proc2 field names
      */
+#if defined(openbsd5)
+#define SWRUN_TABLE	kinfo_proc
+#else
 #define SWRUN_TABLE	kinfo_proc2
+#endif
 #define SWRUN_K_STAT	p_stat
 #define SWRUN_K_PID	p_pid
 #define SWRUN_K_COMM	p_comm
@@@@ -157,7 +164,9 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
         DEBUGMSGTL(("swrun:load:arch"," Can't query kvm info\n"));
         return 1;     /* No handle for retrieving process table */
     }
-#if HAVE_KVM_GETPROC2
+#if defined(openbsd5)
+    proc_table = kvm_getprocs(kd, KERN_PROC_ALL, 0, sizeof(struct kinfo_proc), &nprocs );
+#elif defined(HAVE_KVM_GETPROC2)
     proc_table = kvm_getproc2(kd, KERN_PROC_ALL, 0, sizeof(struct kinfo_proc2), &nprocs );
 #elif defined(KERN_PROC_PROC)
     proc_table = kvm_getprocs(kd, KERN_PROC_PROC, 0, &nprocs );
@@@@ -288,7 +297,7 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
 	 entry->hrSWRunPerfCPU += (proc_table[i].ki_rusage_ch.ru_utime.tv_sec*1000000 + proc_table[i].ki_rusage_ch.ru_utime.tv_usec) / 10000;
 	 entry->hrSWRunPerfCPU += (proc_table[i].ki_rusage_ch.ru_stime.tv_sec*1000000 + proc_table[i].ki_rusage_ch.ru_stime.tv_usec) / 10000;
 	 entry->hrSWRunPerfMem  = proc_table[i].ki_rssize * (getpagesize()/1024);  /* in kB */
-#elif defined(HAVE_KVM_GETPROC2)
+#elif defined(HAVE_KVM_GETPROC2) || defined(openbsd5)
         /*
          * newer NetBSD, OpenBSD
          */
@


1.8
log
@cope with sysctl.h changes
@
text
@d1 1
a1 1
$OpenBSD: patch-agent_mibgroup_host_data_access_swrun_kinfo_c,v 1.7 2012/10/18 14:01:45 sthen Exp $
@


1.7
log
@update to Net-SNMP 5.7.2; lots of fixes and improvements

- many of our local patches are now committed upstream
@
text
@d1 3
a3 3
$OpenBSD: patch-agent_mibgroup_host_data_access_swrun_kinfo_c,v 1.6 2011/11/18 12:39:06 sthen Exp $
--- agent/mibgroup/host/data_access/swrun_kinfo.c.orig	Wed Aug 29 22:10:31 2012
+++ agent/mibgroup/host/data_access/swrun_kinfo.c	Wed Aug 29 23:04:40 2012
d13 11
a23 1
@@@@ -59,11 +59,15 @@@@ extern kvm_t *kd;
d40 1
a40 1
@@@@ -157,7 +161,9 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
d51 1
a51 1
@@@@ -288,7 +294,7 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
@


1.6
log
@update net-snmp to 5.7.1
@
text
@d1 3
a3 3
$OpenBSD: patch-agent_mibgroup_host_data_access_swrun_kinfo_c,v 1.5 2011/07/07 21:51:22 sthen Exp $
--- agent/mibgroup/host/data_access/swrun_kinfo.c.orig	Wed Aug 31 03:21:51 2011
+++ agent/mibgroup/host/data_access/swrun_kinfo.c	Thu Sep  1 23:53:44 2011
d13 1
a13 1
@@@@ -58,11 +58,15 @@@@
d30 1
a30 1
@@@@ -156,7 +160,9 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
d39 6
a44 6
 #else
     proc_table = kvm_getprocs(kd, KERN_PROC_ALL, 0, &nprocs );
@@@@ -287,7 +293,7 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
 # endif
         entry->hrSWRunPerfCPU  = proc_table[i].ki_runtime / 100000;
         entry->hrSWRunPerfMem  = proc_table[i].ki_size / 1024;;
@


1.5
log
@zap pointless patch fragment
@
text
@d1 3
a3 3
$OpenBSD: patch-agent_mibgroup_host_data_access_swrun_kinfo_c,v 1.4 2011/07/07 20:02:02 sthen Exp $
--- agent/mibgroup/host/data_access/swrun_kinfo.c.orig	Fri Jul  1 23:35:46 2011
+++ agent/mibgroup/host/data_access/swrun_kinfo.c	Thu Jul  7 00:02:27 2011
d30 3
a32 1
@@@@ -158,6 +162,8 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
d34 4
a37 1
 #if HAVE_KVM_GETPROC2
a38 2
+#elif defined(openbsd5)
+    proc_table = kvm_getprocs(kd, KERN_PROC_ALL, 0, sizeof(struct kinfo_proc2), &nprocs );
a40 1
 #endif
@


1.5.2.1
log
@Update to net-snmp in -stable to 5.7.1 + patches from -current; the older
version was returning incorrect data for hrStorageUsed and sometimes
encountering segfaults when querying hrStorageTable. Problems reported
and fix tested by Joel Knight.
@
text
@d1 3
a3 3
$OpenBSD: patch-agent_mibgroup_host_data_access_swrun_kinfo_c,v 1.6 2011/11/18 12:39:06 sthen Exp $
--- agent/mibgroup/host/data_access/swrun_kinfo.c.orig	Wed Aug 31 03:21:51 2011
+++ agent/mibgroup/host/data_access/swrun_kinfo.c	Thu Sep  1 23:53:44 2011
d30 1
a30 3
@@@@ -156,7 +160,9 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
         DEBUGMSGTL(("swrun:load:arch"," Can't query kvm info\n"));
         return 1;     /* No handle for retrieving process table */
d32 1
a32 4
-#if HAVE_KVM_GETPROC2
+#if defined(openbsd5)
+    proc_table = kvm_getprocs(kd, KERN_PROC_ALL, 0, sizeof(struct kinfo_proc), &nprocs );
+#elif defined(HAVE_KVM_GETPROC2)
d34 2
d38 1
@


1.4
log
@update to Net-SNMP 5.7 and clean up the patches a lot.

- rc scripts added (names suggested by Nigel Taylor, I was having
a hard time coming up with something nice that avoid a conflict with
base snmpd now the rc.d namespace is shared).
@
text
@d1 1
a1 1
$OpenBSD: patch-agent_mibgroup_host_data_access_swrun_kinfo_c,v 1.3 2011/07/06 21:32:57 sthen Exp $
d30 1
a30 14
@@@@ -90,6 +94,12 @@@@
 #define SWRUN_K_COMM	kp_proc.p_comm
 #define SWRUN_K_FLAG	kp_proc.p_flag
 /*      SWRUN_K_CLASS	not defined     */
+#define SWRUN_K_UTICKS	kp_proc.p_uticks
+#define SWRUN_K_STICKS	kp_proc.p_sticks
+#define SWRUN_K_ITICKS	kp_proc.p_iticks
+#define SWRUN_K_TSIZE	kp_eproc.e_vm.vm_tsize
+#define SWRUN_K_SSIZE	kp_eproc.e_vm.vm_ssize
+#define SWRUN_K_DSIZE	kp_eproc.e_vm.vm_dsize
 #endif
 
 /*
@@@@ -158,6 +168,8 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
d39 1
a39 1
@@@@ -287,7 +299,7 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
@


1.3
log
@- convert kinfo_proc2 -> kinfo_procs

- don't use "#if defined(openbsd3) || defined(openbsd4)" all over the place,
this is definitely not web scale

- zap some pointless ifdefs
@
text
@d1 13
a13 5
$OpenBSD: patch-agent_mibgroup_host_data_access_swrun_kinfo_c,v 1.2 2010/10/26 00:42:21 sthen Exp $
--- agent/mibgroup/host/data_access/swrun_kinfo.c.orig	Mon Jun  1 16:37:18 2009
+++ agent/mibgroup/host/data_access/swrun_kinfo.c	Wed Jul  6 22:20:08 2011
@@@@ -56,7 +56,32 @@@@
 #define SWRUN_K_COMM	ki_comm
a15 9
+# ifdef NOT_DEFINED
+   Apparently following these pointers triggers a SIG10 error
+#define SWRUN_K_UTICKS	ki_paddr->p_uticks
+#define SWRUN_K_STICKS	ki_paddr->p_sticks
+#define SWRUN_K_ITICKS	ki_paddr->p_iticks
+#define SWRUN_K_TSIZE	ki_vmspace->vm_tsize
+#define SWRUN_K_SSIZE	ki_vmspace->vm_ssize
+#define SWRUN_K_DSIZE	ki_vmspace->vm_dsize
+# endif
d17 2
a18 17
+#elif defined(openbsd) /* XXX needs to check version number and fallback to old api for feeeding upstream */
+#define KINFO_NEWAPI
+    /*
+     * newer OpenBSD kinfo_proc field names (like NetBSD kinfo_proc2)
+     */
+#define SWRUN_K_STAT	p_stat
+#define SWRUN_K_PID	p_pid
+#define SWRUN_K_COMM	p_comm
+#define SWRUN_K_FLAG	p_flag
+/*      SWRUN_K_CLASS	not defined     */
+#define SWRUN_K_UTICKS	p_uticks
+#define SWRUN_K_STICKS	p_sticks
+#define SWRUN_K_ITICKS	p_iticks
+#define SWRUN_K_TSIZE	p_vm_tsize
+#define SWRUN_K_SSIZE	p_vm_ssize
+#define SWRUN_K_DSIZE	p_vm_dsize
 #else
d20 11
a30 2
      * early FreeBSD, NetBSD, OpenBSD kinfo_proc field names
@@@@ -66,6 +91,12 @@@@
d43 1
a43 12
@@@@ -110,7 +141,7 @@@@ netsnmp_arch_swrun_init(void)
 {
 #if NETSNMP_CAN_USE_SYSCTL && defined(CTL_KERN) && defined(KERN_MAXPROC)
     extern int _swrun_max;
-    int max_size = sizeof(_swrun_max);
+    size_t max_size = sizeof(_swrun_max);
     int maxproc_mib[] = { CTL_KERN, KERN_MAXPROC };
     sysctl(maxproc_mib, 2, &_swrun_max, &max_size, NULL, 0);
 #endif
@@@@ -133,7 +164,11 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
         DEBUGMSGTL(("swrun:load:arch"," Can't query kvm info\n"));
         return 1;     /* No handle for retrieving process table */
d45 5
a49 3
+#ifdef KINFO_NEWAPI
+    proc_table = kvm_getprocs(kd, KERN_PROC_ALL, 0, sizeof(struct kinfo_proc), &nprocs );
+#else
d51 3
a53 19
+#endif
     for ( i=0 ; i<nprocs; i++ ) {
         if ( 0 == proc_table[i].SWRUN_K_STAT )
             continue;
@@@@ -221,29 +256,15 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
         }
         
 #if defined(freebsd5) && __FreeBSD_version >= 500014
-# ifdef NOT_DEFINED
-   Apparently following these pointers triggers a SIG10 error
-
-        entry->hrSWRunPerfCPU  = proc_table[i].ki_paddr->p_uticks;
-        entry->hrSWRunPerfCPU += proc_table[i].ki_paddr->p_sticks;
-        entry->hrSWRunPerfCPU += proc_table[i].ki_paddr->p_iticks;
-        entry->hrSWRunPerfMem  = proc_table[i].ki_vmspace->vm_tsize;
-        entry->hrSWRunPerfMem += proc_table[i].ki_vmspace->vm_ssize;
-        entry->hrSWRunPerfMem += proc_table[i].ki_vmspace->vm_dsize;
-        entry->hrSWRunPerfMem *= (getpagesize()/1024);  /* in kB */
-# endif
d56 5
a60 19
 #else
-        /*
-         * early FreeBSD, NetBSD, OpenBSD
-         */
-        entry->hrSWRunPerfCPU  = proc_table[i].kp_proc.p_uticks;
-        entry->hrSWRunPerfCPU += proc_table[i].kp_proc.p_sticks;
-        entry->hrSWRunPerfCPU += proc_table[i].kp_proc.p_iticks;
-        entry->hrSWRunPerfMem  = proc_table[i].kp_eproc.e_vm.vm_tsize;
-        entry->hrSWRunPerfMem += proc_table[i].kp_eproc.e_vm.vm_ssize;
-        entry->hrSWRunPerfMem += proc_table[i].kp_eproc.e_vm.vm_dsize;
+        entry->hrSWRunPerfCPU  = proc_table[i].SWRUN_K_UTICKS;
+        entry->hrSWRunPerfCPU += proc_table[i].SWRUN_K_STICKS;
+        entry->hrSWRunPerfCPU += proc_table[i].SWRUN_K_ITICKS;
+        entry->hrSWRunPerfMem  = proc_table[i].SWRUN_K_TSIZE;
+        entry->hrSWRunPerfMem += proc_table[i].SWRUN_K_SSIZE;
+        entry->hrSWRunPerfMem += proc_table[i].SWRUN_K_DSIZE;
         entry->hrSWRunPerfMem *= (getpagesize() / 1024);
 #endif
     }
@


1.2
log
@feed the right size to kvm_getproc2
@
text
@d1 4
a4 10
$OpenBSD: patch-agent_mibgroup_host_data_access_swrun_kinfo_c,v 1.1 2010/10/25 22:59:12 sthen Exp $
--- agent/mibgroup/host/data_access/swrun_kinfo.c.orig	Mon Jun  1 17:37:18 2009
+++ agent/mibgroup/host/data_access/swrun_kinfo.c	Tue Oct 26 02:30:05 2010
@@@@ -51,16 +51,28 @@@@
     /*
      * later FreeBSD kinfo_proc field names
      */
+#define SWRUN_TABLE	kinfo_proc
 #define SWRUN_K_STAT	ki_stat
 #define SWRUN_K_PID	ki_pid
d8 9
d18 2
a19 1
+#elif defined(HAVE_KVM_GETPROC2)
d21 1
a21 1
+     * newer OpenBSD, NetBSD kinfo_proc2 field names
a22 1
+#define SWRUN_TABLE	kinfo_proc2
d28 6
d37 1
a37 4
      */
+#define SWRUN_TABLE	kinfo_proc
 #define SWRUN_K_STAT	kp_proc.p_stat
 #define SWRUN_K_PID	kp_proc.p_pid
d39 12
a50 3
@@@@ -123,7 +135,7 @@@@ netsnmp_arch_swrun_init(void)
 int
 netsnmp_arch_swrun_container_load( netsnmp_container *container, u_int flags)
d52 8
a59 6
-    struct kinfo_proc   *proc_table;
+    struct SWRUN_TABLE  *proc_table;
     int                  nprocs, i, rc;
     char                 buf[BUFSIZ], **argv, *cp;
     char                *name, *path;
@@@@ -133,7 +145,11 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
d63 2
a64 3
-    proc_table = kvm_getprocs(kd, KERN_PROC_ALL, 0, &nprocs );
+#ifdef HAVE_KVM_GETPROC2
+    proc_table = kvm_getproc2(kd, KERN_PROC_ALL, 0, sizeof(struct kinfo_proc2), &nprocs );
d66 1
a66 1
+    proc_table = kvm_getproc(kd, KERN_PROC_ALL, 0, &nprocs );
d71 15
a85 14
@@@@ -153,7 +169,11 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
          * We'll use SWRUN_K_COMM for hrSWRunName,
          *   and as an alternative for hrSWRunPath
          */
+#ifdef HAVE_KVM_GETPROC2
+        argv = kvm_getargv2( kd, &(proc_table[i]), 0);
+#else
         argv = kvm_getargv( kd, &(proc_table[i]), 0);
+#endif
 
         entry->hrSWRunName_len = snprintf(entry->hrSWRunName,
                                    sizeof(entry->hrSWRunName)-1,
@@@@ -234,6 +254,17 @@@@ netsnmp_arch_swrun_container_load( netsnmp_container *
 # endif
a87 11
+#elif defined(HAVE_KVM_GETPROC2)
+        /*
+         * new OpenBSD, NetBSD
+         */
+        entry->hrSWRunPerfCPU  = proc_table[i].p_uticks;
+        entry->hrSWRunPerfCPU += proc_table[i].p_sticks;
+        entry->hrSWRunPerfCPU += proc_table[i].p_iticks;
+        entry->hrSWRunPerfMem  = proc_table[i].p_vm_tsize;
+        entry->hrSWRunPerfMem += proc_table[i].p_vm_ssize;
+        entry->hrSWRunPerfMem += proc_table[i].p_vm_dsize;
+        entry->hrSWRunPerfMem *= (getpagesize() / 1024);
d89 18
a106 2
         /*
          * early FreeBSD, NetBSD, OpenBSD
@


1.1
log
@update Net-SNMP to 5.6 and switch to kvm_getproc2, thanks landry for testing
"commit it!" landry@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ agent/mibgroup/host/data_access/swrun_kinfo.c	Mon Oct 25 14:54:36 2010
d48 1
a48 1
+    proc_table = kvm_getproc2(kd, KERN_PROC_ALL, 0, sizeof(*proc_table), &nprocs );
@

