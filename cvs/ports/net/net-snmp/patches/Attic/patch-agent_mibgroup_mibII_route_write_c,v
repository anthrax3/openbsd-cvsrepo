head	1.5;
access;
symbols
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.12
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.10
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.8
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.6
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2011.07.07.20.02.02;	author sthen;	state dead;
branches;
next	1.4;

1.4
date	2010.10.25.22.59.12;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2007.09.26.20.03.42;	author rui;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.19.10.52.06;	author rui;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.13.22.42.00;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to Net-SNMP 5.7 and clean up the patches a lot.

- rc scripts added (names suggested by Nigel Taylor, I was having
a hard time coming up with something nice that avoid a conflict with
base snmpd now the rc.d namespace is shared).
@
text
@$OpenBSD: patch-agent_mibgroup_mibII_route_write_c,v 1.4 2010/10/25 22:59:12 sthen Exp $
--- agent/mibgroup/mibII/route_write.c.orig	Sat Mar 20 19:36:28 2010
+++ agent/mibgroup/mibII/route_write.c	Wed Oct  6 23:25:16 2010
@@@@ -93,7 +93,7 @@@@
 int
 addRoute(u_long dstip, u_long gwip, u_long iff, u_short flags)
 {
-#if defined SIOCADDRT && !defined(irix6)
+#if defined SIOCADDRT && !(defined irix6 || defined __OpenBSD__)
     struct sockaddr_in dst;
     struct sockaddr_in gateway;
     int             s, rc;
@@@@ -129,6 +129,50 @@@@ addRoute(u_long dstip, u_long gwip, u_long iff, u_shor
         snmp_log_perror("ioctl");
     return rc;
 
+#elif defined __OpenBSD__
+
+       int     s, rc;
+       struct {
+               struct  rt_msghdr hdr;
+               struct  sockaddr_in dst;
+               struct  sockaddr_in gateway;
+       } rtmsg;
+
+       s = socket(PF_ROUTE, SOCK_RAW, 0);
+       if (s < 0) {
+            snmp_log_perror("socket");
+            return -1;
+       }
+
+       shutdown(s, SHUT_RD);
+
+       /* possible panic otherwise */
+       flags |= (RTF_UP | RTF_GATEWAY);
+
+       bzero(&rtmsg, sizeof(rtmsg));
+
+       rtmsg.hdr.rtm_type = RTM_ADD;
+       rtmsg.hdr.rtm_version = RTM_VERSION;
+       rtmsg.hdr.rtm_addrs = RTA_DST | RTA_GATEWAY;
+       rtmsg.hdr.rtm_flags = RTF_GATEWAY;
+
+       rtmsg.dst.sin_len = sizeof(rtmsg.dst);
+       rtmsg.dst.sin_family = AF_INET;
+       rtmsg.dst.sin_addr.s_addr = htonl(dstip);
+
+       rtmsg.gateway.sin_len = sizeof(rtmsg.gateway);
+       rtmsg.gateway.sin_family = AF_INET;
+       rtmsg.gateway.sin_addr.s_addr = htonl(gwip);
+
+       rc = sizeof(rtmsg);
+       rtmsg.hdr.rtm_msglen = rc;
+
+       if ((rc = write(s, &rtmsg, rc)) < 0) {
+               snmp_log_perror("writing to routing socket");
+               return -1;
+       }
+       return (rc);
+
 #else                           /* SIOCADDRT */
     return -1;
 #endif
@@@@ -139,7 +183,7 @@@@ addRoute(u_long dstip, u_long gwip, u_long iff, u_shor
 int
 delRoute(u_long dstip, u_long gwip, u_long iff, u_short flags)
 {
-#if defined SIOCDELRT && !defined(irix6)
+#if defined SIOCDELRT && !(defined irix6 || defined __OpenBSD__)
 
     struct sockaddr_in dst;
     struct sockaddr_in gateway;
@@@@ -173,7 +217,49 @@@@ delRoute(u_long dstip, u_long gwip, u_long iff, u_shor
     rc = ioctl(s, SIOCDELRT, (caddr_t) & route);
     close(s);
     return rc;
+#elif defined __OpenBSD__
 
+       int     s, rc;
+       struct {
+               struct  rt_msghdr hdr;
+               struct  sockaddr_in dst;
+               struct  sockaddr_in gateway;
+       } rtmsg;
+
+       s = socket(PF_ROUTE, SOCK_RAW, 0);
+       if (s < 0) {
+            snmp_log_perror("socket");
+            return -1;
+       }
+
+       shutdown(s, SHUT_RD);
+
+       /* possible panic otherwise */
+       flags |= (RTF_UP | RTF_GATEWAY);
+
+       bzero(&rtmsg, sizeof(rtmsg));
+
+       rtmsg.hdr.rtm_type = RTM_DELETE;
+       rtmsg.hdr.rtm_version = RTM_VERSION;
+       rtmsg.hdr.rtm_addrs = RTA_DST | RTA_GATEWAY;
+       rtmsg.hdr.rtm_flags = RTF_GATEWAY;
+
+       rtmsg.dst.sin_len = sizeof(rtmsg.dst);
+       rtmsg.dst.sin_family = AF_INET;
+       rtmsg.dst.sin_addr.s_addr = htonl(dstip);
+
+       rtmsg.gateway.sin_len = sizeof(rtmsg.gateway);
+       rtmsg.gateway.sin_family = AF_INET;
+       rtmsg.gateway.sin_addr.s_addr = htonl(gwip);
+
+       rc = sizeof(rtmsg);
+       rtmsg.hdr.rtm_msglen = rc;
+
+       if ((rc = write(s, &rtmsg, rc)) < 0) {
+               snmp_log_perror("writing to routing socket");
+               return -1;
+       }
+       return (rc);
 #else                           /* SIOCDELRT */
     return 0;
 #endif
@


1.4
log
@update Net-SNMP to 5.6 and switch to kvm_getproc2, thanks landry for testing
"commit it!" landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-agent_mibgroup_mibII_route_write_c,v 1.3 2007/09/26 20:03:42 rui Exp $
@


1.3
log
@update net-snmp to 5.4.1, also adds a patch from claudio@@ to allow 64bit network counters.
Changelog: http://net-snmp.sourceforge.net/about/ChangeLog.html

tested by Graeme Lee, ok mbalmer@@
@
text
@d1 4
a4 4
$OpenBSD$
--- agent/mibgroup/mibII/route_write.c.orig	Sun Mar 25 20:03:40 2007
+++ agent/mibgroup/mibII/route_write.c	Sat Sep 15 23:12:28 2007
@@@@ -97,7 +97,7 @@@@
d13 1
a13 1
@@@@ -133,6 +133,50 @@@@ addRoute(u_long dstip, u_long gwip, u_long iff, u_shor
d64 1
a64 1
@@@@ -143,7 +187,7 @@@@ addRoute(u_long dstip, u_long gwip, u_long iff, u_shor
d73 1
a73 1
@@@@ -177,7 +221,49 @@@@ delRoute(u_long dstip, u_long gwip, u_long iff, u_shor
@


1.2
log
@update net-snmp to 5.4, maintainer timeout
- changelog: http://www.net-snmp.org/about/ChangeLog.html

ok steven@@
@
text
@d2 2
a3 2
--- agent/mibgroup/mibII/route_write.c.orig	Sat May  5 19:48:04 2007
+++ agent/mibgroup/mibII/route_write.c	Sat May  5 20:10:26 2007
@


1.1
log
@Fix for route addition/deletion.
Originally from Darwin, found by Alexandre Anriot.
@
text
@d2 3
a4 3
--- agent/mibgroup/mibII/route_write.c.orig	Fri Jul  9 02:34:30 2004
+++ agent/mibgroup/mibII/route_write.c	Mon Jun 13 23:14:23 2005
@@@@ -102,7 +102,7 @@@@
d8 2
a9 2
-#ifndef dynix
+#if !(defined dynix || defined darwin || defined __OpenBSD__)
d13 2
a14 1
@@@@ -141,6 +141,50 @@@@ addRoute(u_long dstip, u_long gwip, u_lo
a15 1
 #endif
d17 1
a17 1
+#elif defined darwin || defined __OpenBSD__
d19 6
a24 6
+	int	s, rc;
+	struct {
+		struct	rt_msghdr hdr;
+		struct	sockaddr_in dst;
+		struct	sockaddr_in gateway;
+	} rtmsg;
d26 2
a27 2
+	s = socket(PF_ROUTE, SOCK_RAW, 0);
+	if (s < 0) {
d30 1
a30 1
+	}
d32 1
a32 1
+	shutdown(s, SHUT_RD);
d34 2
a35 2
+	/* possible panic otherwise */
+	flags |= (RTF_UP | RTF_GATEWAY);
d37 1
a37 1
+	bzero(&rtmsg, sizeof(rtmsg));
d39 4
a42 4
+	rtmsg.hdr.rtm_type = RTM_ADD;
+	rtmsg.hdr.rtm_version = RTM_VERSION;
+	rtmsg.hdr.rtm_addrs = RTA_DST | RTA_GATEWAY;
+	rtmsg.hdr.rtm_flags = RTF_GATEWAY;
d44 3
a46 3
+	rtmsg.dst.sin_len = sizeof(rtmsg.dst);
+	rtmsg.dst.sin_family = AF_INET;
+	rtmsg.dst.sin_addr.s_addr = htonl(dstip);
d48 3
a50 3
+	rtmsg.gateway.sin_len = sizeof(rtmsg.gateway);
+	rtmsg.gateway.sin_family = AF_INET;
+	rtmsg.gateway.sin_addr.s_addr = htonl(gwip);
d52 2
a53 2
+	rc = sizeof(rtmsg);
+	rtmsg.hdr.rtm_msglen = rc;
d55 5
a59 5
+	if ((rc = write(s, &rtmsg, rc)) < 0) {
+		snmp_log_perror("writing to routing socket");
+		return -1;
+	}
+	return (rc);
d61 4
a64 4
 #else                           /* dynix */
     /*
      *  Throws up the following errors:
@@@@ -166,7 +210,7 @@@@ addRoute(u_long dstip, u_long gwip, u_lo
d68 2
a69 2
-#ifndef dynix
+#if !(defined dynix || defined darwin || defined __OpenBSD__)
d73 2
a74 1
@@@@ -204,6 +248,49 @@@@ delRoute(u_long dstip, u_long gwip, u_lo
d77 8
a84 9
 #endif
+#elif defined darwin || defined __OpenBSD__
+
+	int	s, rc;
+	struct {
+		struct	rt_msghdr hdr;
+		struct	sockaddr_in dst;
+		struct	sockaddr_in gateway;
+	} rtmsg;
d86 2
a87 2
+	s = socket(PF_ROUTE, SOCK_RAW, 0);
+	if (s < 0) {
d90 1
a90 1
+	}
d92 1
a92 1
+	shutdown(s, SHUT_RD);
d94 2
a95 2
+	/* possible panic otherwise */
+	flags |= (RTF_UP | RTF_GATEWAY);
d97 1
a97 1
+	bzero(&rtmsg, sizeof(rtmsg));
d99 24
a122 24
+	rtmsg.hdr.rtm_type = RTM_DELETE;
+	rtmsg.hdr.rtm_version = RTM_VERSION;
+	rtmsg.hdr.rtm_addrs = RTA_DST | RTA_GATEWAY;
+	rtmsg.hdr.rtm_flags = RTF_GATEWAY;
+
+	rtmsg.dst.sin_len = sizeof(rtmsg.dst);
+	rtmsg.dst.sin_family = AF_INET;
+	rtmsg.dst.sin_addr.s_addr = htonl(dstip);
+
+	rtmsg.gateway.sin_len = sizeof(rtmsg.gateway);
+	rtmsg.gateway.sin_family = AF_INET;
+	rtmsg.gateway.sin_addr.s_addr = htonl(gwip);
+
+	rc = sizeof(rtmsg);
+	rtmsg.hdr.rtm_msglen = rc;
+
+	if ((rc = write(s, &rtmsg, rc)) < 0) {
+		snmp_log_perror("writing to routing socket");
+		return -1;
+	}
+	return (rc);
 
 #else                           /* dynix */
     /*
@

