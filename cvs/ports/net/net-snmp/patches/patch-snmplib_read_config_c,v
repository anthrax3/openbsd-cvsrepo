head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.10.12.10.50.33;	author sthen;	state Exp;
branches;
next	1.2;
commitid	osjP0qv650QwrNjz;

1.2
date	2013.08.07.16.49.38;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2013.07.01.16.29.29;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@add patches to net-snmp, from upstream via afresh1, that will be needed for perl 5.24+
@
text
@$OpenBSD$

commit 477b4307ef12ddce3b6a9205e0bdddbfb2e0e9b6
Author: Bart Van Assche <bvanassche@@acm.org>
Date:   Sat Feb 20 18:58:18 2016 -0800

    Remove U64 typedef

    The U64 typedef conflicts with a typedef in a Perl header file. Hence
    remove the U64 typedef from the Net-SNMP header files. This patch does
    not modify the Net-SNMP ABI.

--- snmplib/read_config.c.orig	Mon Dec  8 20:23:22 2014
+++ snmplib/read_config.c	Wed Oct 12 10:50:36 2016
@@@@ -2270,10 +2270,10 @@@@ read_config_read_memory(int type, char *readfrom,
         return readfrom;
 
     case ASN_COUNTER64:
-        if (*len < sizeof(U64))
+        if (*len < sizeof(struct counter64))
             return NULL;
-        *len = sizeof(U64);
-        read64((U64 *) dataptr, readfrom);
+        *len = sizeof(struct counter64);
+        read64((struct counter64 *) dataptr, readfrom);
         readfrom = skip_token(readfrom);
         return readfrom;
     }
@


1.2
log
@remove some gcc2 workarounds
@
text
@d1 28
a28 18
$OpenBSD: patch-snmplib_read_config_c,v 1.1 2013/07/01 16:29:29 espie Exp $
--- snmplib/read_config.c.orig	Mon Jul  1 18:19:39 2013
+++ snmplib/read_config.c	Mon Jul  1 18:19:59 2013
@@@@ -536,13 +536,13 @@@@ run_config_handler(struct config_line *lptr,
     lptr = read_config_find_handler(lptr, token);
     if (lptr != NULL) {
         if (when == EITHER_CONFIG || lptr->config_time == when) {
+            char tmpbuf[1];
             DEBUGMSGTL(("read_config:parser",
                         "Found a parser.  Calling it: %s / %s\n", token,
                         cptr));
             /*
              * Make sure cptr is non-null
              */
-            char tmpbuf[1];
             if (!cptr) {
                 tmpbuf[0] = '\0';
                 cptr = tmpbuf;
@


1.1
log
@fix the one 'declaration after statement' that prevents vax from building this.
@
text
@d1 1
a1 1
$OpenBSD$
@

