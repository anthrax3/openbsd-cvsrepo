head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2017.05.19.12.26.43;	author espie;	state Exp;
branches;
next	;
commitid	9SbHAdnBSIganrF3;


desc
@@


1.1
log
@one of the more fun fixes for clang. I don't know where freebsd gets their
tr1, but we don't, so fix it by subsitution. Leaves us with a few nits to
fix. Conditionalize clang patches that interfere with tr1 substitution...
@
text
@$OpenBSD$
clang can't accept a "generic" void* allocator because value_type doesn't
match.  FreeBSD has the same patch.


Index: src/net/socket_set.h
--- src/net/socket_set.h.orig
+++ src/net/socket_set.h
@@@@ -53,12 +53,12 @@@@ namespace torrent {
 
 // Propably should rename to EventSet...
 
-class SocketSet : private std::vector<Event*, rak::cacheline_allocator<> > {
+class SocketSet : private std::vector<Event*, rak::cacheline_allocator<Event*> > {
 public:
   typedef uint32_t    size_type;
 
-  typedef std::vector<Event*, rak::cacheline_allocator<> > base_type;
-  typedef std::vector<size_type, rak::cacheline_allocator<> > Table;
+  typedef std::vector<Event*, rak::cacheline_allocator<Event*> > base_type;
+  typedef std::vector<size_type, rak::cacheline_allocator<size_type> > Table;
 
   static const size_type npos = static_cast<size_type>(-1);
 
@
