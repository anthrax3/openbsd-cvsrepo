head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2012.07.15.10.20.07;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2012.07.11.08.33.39;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Back out the update to 0.13.2/0.9.2; too much problems to make
release.

OK sthen@@, naddy@@
@
text
@$OpenBSD: patch-src_torrent_tracker_controller_cc,v 1.1 2012/07/11 08:33:39 dcoppa Exp $

Fix a bug where manual tracker update for a preferred tracker that
fails would end up rerequesting instantly
(upstream git commit 78f56ee74cecd8e82d39baaea10395301fbec4b8)

--- src/torrent/tracker_controller.cc.orig	Tue Apr 10 14:46:33 2012
+++ src/torrent/tracker_controller.cc	Tue Jul 10 16:33:20 2012
@@@@ -485,20 +485,12 @@@@ TrackerController::do_timeout() {
     if (itr == m_tracker_list->end())
       return;
 
-    if ((m_flags & flag_send_update)) {
-      // TODO: Also watch out for failed trackers requiring timeouts.
-      m_tracker_list->send_state_itr(itr, send_state);
+    int32_t next_timeout = (*itr)->activity_time_next();
 
-    } else {
-      TrackerList::iterator itr = m_tracker_list->find_next_to_request(m_tracker_list->begin());
-
-      int32_t next_timeout = (*itr)->activity_time_next();
-
-      if (next_timeout <= cachedTime.seconds())
-        m_tracker_list->send_state_itr(itr, send_state);
-      else
-        update_timeout(next_timeout - cachedTime.seconds());
-    }
+    if (next_timeout <= cachedTime.seconds())
+      m_tracker_list->send_state_itr(itr, send_state);
+    else
+      update_timeout(next_timeout - cachedTime.seconds());
   }
 
   if (m_slot_timeout)
@


1.1
log
@Fix a crash when total number of connections exceeds 1024
(from FreeBSD)

Fix a bug where manual tracker update for a preferred tracker that
fails would end up rerequesting instantly
(upstream git commit 78f56ee74cecd8e82d39baaea10395301fbec4b8)
@
text
@d1 1
a1 1
$OpenBSD$
@

