head	1.6;
access;
symbols
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.14
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.10
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2013.03.13.00.20.56;	author brad;	state dead;
branches;
next	1.5;

1.5
date	2012.12.10.15.05.12;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2012.07.15.10.20.07;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2012.05.02.14.06.03;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2012.04.06.14.33.41;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.25.16.21.28;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove a hack that was added to the autoconf script to workaround a test
not working properly when systrace was enabled now that the systrace filter
has been fixed so posix_openpt() works.

ok dcoppa@@
@
text
@$OpenBSD: patch-scripts_checks_m4,v 1.5 2012/12/10 15:05:12 dcoppa Exp $


When USE_SYSTRACE is set to Yes, systrace causes the check to fail
and KQUEUE_SOCKET_ONLY is wrongly set to 1:

---8<---

checking for kqueue support... yes
checking whether kqueue supports pipes and ptys... systrace: deny user: dcoppa, prog: /home/dcoppa/ports/pobj/libtorrent-0.12.9/libtorrent-0.12.9/conftest, pid: 17964(0)[16449], policy: /usr/bin/env, filters: 241, syscall: native-fswrite(5), filename: /dev/ptm
no
checking for fallocate... no

---8<---

$ grep KQUEUE_SOCKET_ONLY $(make show=WRKBUILD)/config.h
#define KQUEUE_SOCKET_ONLY 1


--- scripts/checks.m4.orig	Fri Apr  6 15:17:41 2012
+++ scripts/checks.m4	Fri Apr  6 15:19:11 2012
@@@@ -93,51 +93,12 @@@@ AC_DEFUN([TORRENT_CHECK_KQUEUE], [
     ])
 ])
 
-AC_DEFUN([TORRENT_CHECK_KQUEUE_SOCKET_ONLY], [
-  AC_MSG_CHECKING(whether kqueue supports pipes and ptys)
-
-  AC_RUN_IFELSE(
-    [[#include <fcntl.h>
-      #include <stdlib.h>
-      #include <unistd.h>
-      #include <sys/event.h>
-      #include <sys/time.h>
-      int main() {
-        struct kevent ev[2], ev_out[2];
-        struct timespec ts = { 0, 0 };
-        int pfd[2], pty[2], kfd, n;
-        char buffer[9001];
-        if (pipe(pfd) == -1) return 1;
-        if (fcntl(pfd[1], F_SETFL, O_NONBLOCK) == -1) return 2;
-        while ((n = write(pfd[1], buffer, sizeof(buffer))) == sizeof(buffer));
-        if ((pty[0]=posix_openpt(O_RDWR | O_NOCTTY)) == -1) return 3;
-        if ((pty[1]=grantpt(pty[0])) == -1) return 4;
-        EV_SET(ev+0, pfd[1], EVFILT_WRITE, EV_ADD | EV_ENABLE, 0, 0, NULL);
-        EV_SET(ev+1, pty[1], EVFILT_READ, EV_ADD | EV_ENABLE, 0, 0, NULL);
-        if ((kfd = kqueue()) == -1) return 5;
-        if ((n = kevent(kfd, ev, 2, NULL, 0, NULL)) == -1) return 6;
-        if (ev_out[0].flags & EV_ERROR) return 7;
-        if (ev_out[1].flags & EV_ERROR) return 8;
-        read(pfd[0], buffer, sizeof(buffer));
-        if ((n = kevent(kfd, NULL, 0, ev_out, 2, &ts)) < 1) return 9;
-        return 0;
-      }
-    ]],
-    [
-      AC_MSG_RESULT(yes)
-    ], [
-      AC_DEFINE(KQUEUE_SOCKET_ONLY, 1, kqueue only supports sockets.)
-      AC_MSG_RESULT(no)
-    ])
-])
-
 AC_DEFUN([TORRENT_WITH_KQUEUE], [
   AC_ARG_WITH(kqueue,
     [  --with-kqueue           enable kqueue. [[default=no]]],
     [
         if test "$withval" = "yes"; then
           TORRENT_CHECK_KQUEUE
-          TORRENT_CHECK_KQUEUE_SOCKET_ONLY
         fi
     ])
 ])
@


1.5
log
@Add a comment explaining why this patch is needed (for future
reference).
While here, fix pthread linking.

From a discussion with ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-scripts_checks_m4,v 1.4 2012/07/15 10:20:07 dcoppa Exp $
@


1.4
log
@Back out the update to 0.13.2/0.9.2; too much problems to make
release.

OK sthen@@, naddy@@
@
text
@d1 19
a19 1
$OpenBSD: patch-scripts_checks_m4,v 1.3 2012/05/02 14:06:03 dcoppa Exp $
@


1.3
log
@Update to libtorrent-0.13.2
@
text
@d1 3
a3 3
$OpenBSD: patch-scripts_checks_m4,v 1.2 2012/04/06 14:33:41 dcoppa Exp $
--- scripts/checks.m4.orig	Thu Mar 29 15:02:59 2012
+++ scripts/checks.m4	Thu Apr 12 12:39:26 2012
d11 2
a12 2
-  AC_RUN_IFELSE([AC_LANG_SOURCE([
-      #include <fcntl.h>
d37 1
a37 1
-      ])],
a55 12
@@@@ -149,11 +110,9 @@@@ AC_DEFUN([TORRENT_WITHOUT_KQUEUE], [
     [
       if test "$withval" = "yes"; then
         TORRENT_CHECK_KQUEUE
-        TORRENT_CHECK_KQUEUE_SOCKET_ONLY
       fi
     ], [
         TORRENT_CHECK_KQUEUE
-        TORRENT_CHECK_KQUEUE_SOCKET_ONLY
     ])
 ])
 
@


1.2
log
@Fix build with USE_SYSTRACE=Yes
@
text
@d1 3
a3 3
$OpenBSD: patch-scripts_checks_m4,v 1.1 2008/11/25 16:21:28 naddy Exp $
--- scripts/checks.m4.orig	Fri Apr  6 15:17:41 2012
+++ scripts/checks.m4	Fri Apr  6 15:19:11 2012
d11 2
a12 2
-  AC_RUN_IFELSE(
-    [[#include <fcntl.h>
d37 1
a37 1
-    ]],
d56 12
@


1.1
log
@Update to libtorrent 0.12.4/rtorrent 0.8.4.
- Adds support for DHT.
- Many ill-documented scripting changes.
- The session file format has changed.
@
text
@d1 5
a5 4
$OpenBSD$
--- scripts/checks.m4.orig	Tue Oct  7 14:48:07 2008
+++ scripts/checks.m4	Sun Nov 23 21:04:40 2008
@@@@ -94,14 +94,27 @@@@ AC_DEFUN([TORRENT_CHECK_KQUEUE], [
d8 4
a11 12
 AC_DEFUN([TORRENT_CHECK_KQUEUE_SOCKET_ONLY], [
+  save_LIBS=$LIBS
+  AC_CHECK_FUNCS(posix_openpt, , [
+    AC_SEARCH_LIBS(openpty, util,
+      AC_DEFINE(HAVE_OPENPTY, 1,
+        [Define to 1 if you have the `openpty' function.])
+    )
+  ])
+
   AC_MSG_CHECKING(whether kqueue supports pipes and ptys)
 
   AC_RUN_IFELSE(
d13 41
a53 31
+    [[#include "confdefs.h"
+      #include <fcntl.h>
       #include <stdlib.h>
       #include <unistd.h>
       #include <sys/event.h>
       #include <sys/time.h>
+      #if HAVE_OPENPTY
+      #include <termios.h>
+      #include <util.h>
+      #endif
       int main() {
         struct kevent ev[2], ev_out[2];
         struct timespec ts = { 0, 0 };
@@@@ -110,8 +123,14 @@@@ AC_DEFUN([TORRENT_CHECK_KQUEUE_SOCKET_ONLY], [
         if (pipe(pfd) == -1) return 1;
         if (fcntl(pfd[1], F_SETFL, O_NONBLOCK) == -1) return 2;
         while ((n = write(pfd[1], buffer, sizeof(buffer))) == sizeof(buffer));
+        #if HAVE_POSIX_OPENPT
         if ((pty[0]=posix_openpt(O_RDWR | O_NOCTTY)) == -1) return 3;
         if ((pty[1]=grantpt(pty[0])) == -1) return 4;
+        #elif HAVE_OPENPTY
+        if (openpty(&pty[0], &pty[1], NULL, NULL, NULL) == -1) return 3;
+        #else
+        return 3;
+        #endif
         EV_SET(ev+0, pfd[1], EVFILT_WRITE, EV_ADD | EV_ENABLE, 0, 0, NULL);
         EV_SET(ev+1, pty[1], EVFILT_READ, EV_ADD | EV_ENABLE, 0, 0, NULL);
         if ((kfd = kqueue()) == -1) return 5;
@@@@ -129,6 +148,7 @@@@ AC_DEFUN([TORRENT_CHECK_KQUEUE_SOCKET_ONLY], [
       AC_DEFINE(KQUEUE_SOCKET_ONLY, 1, kqueue only supports sockets.)
       AC_MSG_RESULT(no)
a54 1
+    LIBS=$save_LIBS
a55 2
 
 AC_DEFUN([TORRENT_WITH_KQUEUE], [
@

