head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_8:1.1.0.22
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.18
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.16
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.14
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.12
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.10
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.8
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.12.09.16.40.11;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	iFg48fUcJyxZ0TTG;

1.2
date	2016.01.31.23.21.37;	author sthen;	state dead;
branches;
next	1.1;
commitid	wpSH0OBFo4M2FAva;

1.1
date	2010.10.05.09.18.05;	author armani;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Allow to switch the interface to promiscuous mode during sndrcv().
Call the sr...() functions with parameter promisc=1 for that.  This
is needed for the src/sys/netinet/arp regress test and was backported
from secdev/scapy master at github.
OK danj@@ (maintainer)
@
text
@$OpenBSD$

https://github.com/secdev/scapy/commit/e41627769f6eba2dc54f102e8e7c0bc246090eec

--- scapy/arch/pcapdnet.py.orig	Tue Oct 18 14:56:50 2016
+++ scapy/arch/pcapdnet.py	Fri Dec  9 14:50:10 2016
@@@@ -229,11 +229,14 @@@@ if conf.use_winpcapy:
   conf.L2listen = L2pcapListenSocket
   class L2pcapSocket(SuperSocket):
       desc = "read/write packets at layer 2 using only libpcap"
-      def __init__(self, iface = None, type = ETH_P_ALL, filter=None, nofilter=0):
+      def __init__(self, iface = None, type = ETH_P_ALL, promisc=None, filter=None, nofilter=0):
           if iface is None:
               iface = conf.iface
           self.iface = iface
-          self.ins = open_pcap(iface, 1600, 0, 100)
+          if promisc is None:
+              promisc = 0
+          self.promisc = promisc
+          self.ins = open_pcap(iface, 1600, self.promisc, 100)
           try:
               ioctl(self.ins.fileno(),BIOCIMMEDIATE,struct.pack("I",1))
           except:
@@@@ -524,13 +527,16 @@@@ if conf.use_dnet:
 if conf.use_pcap and conf.use_dnet:
     class L3dnetSocket(SuperSocket):
         desc = "read/write packets at layer 3 using libdnet and libpcap"
-        def __init__(self, type = ETH_P_ALL, filter=None, promisc=None, iface=None, nofilter=0):
+        def __init__(self, type = ETH_P_ALL, promisc=None, filter=None, iface=None, nofilter=0):
             self.iflist = {}
             self.intf = dnet.intf()
             if iface is None:
                 iface = conf.iface
             self.iface = iface
-            self.ins = open_pcap(iface, 1600, 0, 100)
+            if promisc is None:
+                promisc = 0
+            self.promisc = promisc
+            self.ins = open_pcap(iface, 1600, self.promisc, 100)
             try:
                 ioctl(self.ins.fileno(),BIOCIMMEDIATE,struct.pack("I",1))
             except:
@@@@ -614,11 +620,14 @@@@ if conf.use_pcap and conf.use_dnet:
     
     class L2dnetSocket(SuperSocket):
         desc = "read/write packets at layer 2 using libdnet and libpcap"
-        def __init__(self, iface = None, type = ETH_P_ALL, filter=None, nofilter=0):
+        def __init__(self, iface = None, type = ETH_P_ALL, promisc=None, filter=None, nofilter=0):
             if iface is None:
                 iface = conf.iface
             self.iface = iface
-            self.ins = open_pcap(iface, 1600, 0, 100)
+            if promisc is None:
+                promisc = 0
+            self.promisc = promisc
+            self.ins = open_pcap(iface, 1600, self.promisc, 100)
             try:
                 ioctl(self.ins.fileno(),BIOCIMMEDIATE,struct.pack("I",1))
             except:
@


1.2
log
@update to scapy-2.3.2, from Daniel Jakots, earlier version ok armani@@
@
text
@d1 59
a59 12
$OpenBSD: patch-scapy_arch_pcapdnet_py,v 1.1 2010/10/05 09:18:05 armani Exp $
--- scapy/arch/pcapdnet.py.orig	Tue Oct  5 10:14:39 2010
+++ scapy/arch/pcapdnet.py	Tue Oct  5 10:16:27 2010
@@@@ -63,6 +63,8 @@@@ if conf.use_pcap:    
                     return ts,pkt
                 def __getattr__(self, attr):
                     return getattr(self.pcap, attr)
+                def __del__(self):
+                    os.close(self.pcap.fileno())
             open_pcap = lambda *args,**kargs: _PcapWrapper_libpcap(*args,**kargs)
         elif hasattr(pcap,"open_live"): # python-pcapy
             class _PcapWrapper_pcapy:
@


1.1
log
@Update to 2.1.0, change my email address and integrate 2 patches from
Laurent Ghigonis, one to properly detect the mac address and the other to close
the bpf after use (You don't need to create 40 bpf anymore), thanks !

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@

