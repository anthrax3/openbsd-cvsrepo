head	1.2;
access;
symbols
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.04.30.14.12.19;	author naddy;	state dead;
branches;
next	1.1;

1.1
date	2013.04.01.14.30.32;	author brad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@drop workarounds for missing AI_ADDRCONFIG
@
text
@$OpenBSD: patch-src_Socket_cpp,v 1.1 2013/04/01 14:30:32 brad Exp $
--- src/Socket.cpp.orig	Mon Apr  1 03:16:32 2013
+++ src/Socket.cpp	Mon Apr  1 03:16:52 2013
@@@@ -114,7 +114,9 @@@@ void CSockManager::DoDNS(TDNSArg *arg) {
 		hints.ai_family = AF_UNSPEC;
 		hints.ai_socktype = SOCK_STREAM;
 		hints.ai_protocol = IPPROTO_TCP;
+#ifdef AI_ADDRCONFIG
 		hints.ai_flags = AI_ADDRCONFIG;
+#endif
 		arg->iRes = getaddrinfo(arg->sHostname.c_str(), NULL, &hints, &arg->aiResult);
 		if (EAGAIN != arg->iRes) {
 			break;
@


1.1
log
@Enable the threaded DNS support for znc now that our getaddrinfo()
is thread-safe. Remove an incredibly stupid autoconf test which
assumes that the lack of the getaddrinfo() flag AI_ADDRCONFIG means
getaddrinfo() is not thread-safe. Although that was the case in the
past and properly resulted in the threaded DNS support not being
utilized on OpenBSD/NetBSD it is no longer true.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@

