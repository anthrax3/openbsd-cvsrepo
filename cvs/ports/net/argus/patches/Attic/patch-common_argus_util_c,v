head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.8
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.6
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.4
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.2
	OPENBSD_4_4_BASE:1.1.1.1
	steven-20080630:1.1.1.1
	steven:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.08.15.14.58.45;	author naddy;	state dead;
branches;
next	1.3;

1.3
date	2012.07.08.19.20.58;	author steven;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.15.19.15.19;	author steven;	state Exp;
branches;
next	1.1;

1.1
date	2008.06.30.05.19.33;	author steven;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.06.30.05.19.33;	author steven;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove (time_t)timeval.tv_sec casts now that tv_sec has type time_t
@
text
@$OpenBSD: patch-common_argus_util_c,v 1.3 2012/07/08 19:20:58 steven Exp $

work around reading the wrong piece of memory on sparc64.

--- common/argus_util.c.orig	Thu Mar 15 06:13:08 2012
+++ common/argus_util.c	Wed Jun 27 22:25:19 2012
@@@@ -2084,11 +2084,12 @@@@ print_time(struct timeval *tvp)
    char timeZoneBuf[32];
    char *retn = ArgusPrintTimeBuf, *ptr;
    struct tm *tm, tmbuf;
+   time_t sec = (time_t) tvp->tv_sec;
 
    bzero (timeZoneBuf, sizeof(timeZoneBuf));
    bzero (ArgusPrintTimeBuf, sizeof(ArgusPrintTimeBuf));
 
-   if ((tm = localtime_r ((time_t *)&tvp->tv_sec, &tmbuf)) != NULL) {
+   if ((tm = localtime_r (&sec, &tmbuf)) != NULL) {
 #if !defined(HAVE_STRFTIME)
       snprintf (retn, 32, "%9d", (int) tvp->tv_sec);
 #else
@


1.3
log
@update to 3.0.6.1
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to 3.0.2
@
text
@d5 3
a7 3
--- common/argus_util.c.orig	Mon Aug 17 16:35:18 2009
+++ common/argus_util.c	Sat Apr 10 12:33:38 2010
@@@@ -1916,11 +1916,12 @@@@ print_time(struct timeval *tvp)
@


1.1
log
@Initial revision
@
text
@d5 3
a7 3
--- common/argus_util.c.orig	Wed Jun 25 07:05:41 2008
+++ common/argus_util.c	Wed Jun 25 07:07:37 2008
@@@@ -1911,11 +1911,12 @@@@ print_time(struct timeval *tvp)
d18 3
a20 3
       if (uflag)
          snprintf (retn, 32, "%9d", (int) tvp->tv_sec);
       else
@


1.1.1.1
log
@import argus 3.0.0

Argus is a fixed-model real time flow monitor designed to track and
report on the status and performance of all network transactions seen in
a data network traffic stream. Argus provides a common data format for
reporting flow metrics such as connectivity, capacity, demand, loss,
delay, and jitter on a per transaction basis. The record format that
Argus uses is flexible and extensible, supporting generic flow
identifiers and metrics, as well as application/protocol specific
information.

ok naddy@@ sthen@@
@
text
@@
