head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.6
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.1.1.0.4
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.2
	OPENBSD_4_8_BASE:1.1.1.1
	dcoppa_20100428:1.1.1.1
	dcoppa:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2016.05.17.15.21.34;	author dcoppa;	state Exp;
branches;
next	1.4;
commitid	RA3BCOpD4FgWTLZ2;

1.4
date	2014.12.18.20.16.59;	author kili;	state Exp;
branches;
next	1.3;
commitid	Emf6OTiCc0C29my2;

1.3
date	2011.12.05.14.58.59;	author dcoppa;	state dead;
branches;
next	1.2;

1.2
date	2011.05.26.08.24.59;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2010.04.28.16.21.40;	author dcoppa;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.04.28.16.21.40;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.5
log
@
Zap bogus tab
@
text
@$OpenBSD: patch-Commands_Download_hs,v 1.4 2014/12/18 20:16:59 kili Exp $

port to ghc-7.8

--- Commands/Download.hs.orig	Tue Nov  8 16:49:38 2011
+++ Commands/Download.hs	Tue May 17 17:17:55 2016
@@@@ -150,7 +150,7 @@@@ watchTheFiles progressinterval watchFilesMV = 
 procEpisode gi meter dltok ep name r =
        case r of
          (Success, _) -> procSuccess gi ep (tokpath dltok)
-         (Failure, Terminated sigINT) -> 
+         (Failure, Terminated sigINT _) -> 
              do i "Ctrl-C hit; aborting!"
                 -- Do not consider Ctrl-C a trackable error
                 exitFailure
@@@@ -264,7 +264,7 @@@@ procSuccess gi ep tmpfp =
                                     "" -> return (eptype ep)
                                     x -> return x
                    _ -> return (eptype ep)
-	
+
           stripToken = takeWhile intoken
               where intoken c = not $ isSpace c || c == ';'
 
@@@@ -301,7 +301,7 @@@@ runHook fn script =
        case status of
          Nothing -> fail "No status unexpected."
          Just (Stopped _) -> fail "Stopped process unexpected."
-         Just (Terminated sig) -> fail (printf "Post-hook \"%s\" terminated by signal %s" script (show sig))
+         Just (Terminated sig _) -> fail (printf "Post-hook \"%s\" terminated by signal %s" script (show sig))
          Just (Exited (ExitFailure code)) -> fail (printf "Post-hook \"%s\" failed with exit code %s" script (show code))
          Just (Exited ExitSuccess) -> return ()
     where runScript =
@


1.4
log
@Unbreak with ghc-7.8 / unix-2.7.0.0.
@
text
@d1 1
a1 1
$OpenBSD$
d6 1
a6 1
+++ Commands/Download.hs	Thu Dec 18 20:59:53 2014
d16 9
@


1.3
log
@Bugfixing update to hpodder-1.1.6
@
text
@d1 1
a1 1
$OpenBSD: patch-Commands_Download_hs,v 1.2 2011/05/26 08:24:59 dcoppa Exp $
d3 1
a3 3
fix from upstream git:
add EPID to the per-podcast command options
make renaming of mp3 files work again (gettypecommand bug)
d5 20
a24 33
--- Commands/Download.hs.orig	Wed Jul  2 17:32:27 2008
+++ Commands/Download.hs	Tue May 24 13:32:57 2011
@@@@ -42,6 +42,7 @@@@ import Data.ConfigFile
 import Data.String.Utils
 import Data.Either.Utils
 import Data.List
+import Data.Char
 import System.Exit
 import Control.Exception
 import Data.Progress.Tracker
@@@@ -259,10 +260,13 @@@@ procSuccess gi ep tmpfp =
                  d $ "  gettypecommand sent to stdout: " ++ show c
                  d $ "  original type was: " ++ show (eptype ep)
                  case ec of
-                   ExitSuccess -> case (strip c) of
+                   ExitSuccess -> case (stripToken c) of
                                     "" -> return (eptype ep)
                                     x -> return x
                    _ -> return (eptype ep)
+	
+          stripToken = takeWhile intoken
+              where intoken c = not $ isSpace c || c == ';'
 
           getRenameTypes =
               case getList (gcp gi) idstr "renametypes" of
@@@@ -284,6 +288,7 @@@@ procSuccess gi ep tmpfp =
                          ("FEEDURL", feedurl . podcast $ ep),
                          ("SAFECASTTITLE", sanitize_fn . castname . podcast $ ep),
                          ("SAFEEPTITLE", sanitize_fn . eptitle $ ep),
+                         ("EPID", show . epid $ ep),
                          ("EPTITLE", eptitle ep)]
 
 -- | Runs a hook script.
@


1.2
log
@Make code compatible with HaXml 1.20.*

Various fixes.

Zap USE_GROFF.

Ok kili@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Commands_Download_hs,v 1.1.1.1 2010/04/28 16:21:40 dcoppa Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d5 1
d8 25
a32 2
+++ Commands/Download.hs	Tue Apr 13 11:46:07 2010
@@@@ -284,6 +284,7 @@@@ procSuccess gi ep tmpfp =
@


1.1.1.1
log
@Import hpodder, a podcast aggregator written in Haskell.

OK kili@@
@
text
@@
