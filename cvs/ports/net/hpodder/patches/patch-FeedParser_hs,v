head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.18
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.16
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.12
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.14
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.10
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2012.09.18.17.12.56;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.20.13.33.54;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2011.12.05.14.58.59;	author dcoppa;	state dead;
branches;
next	1.2;

1.2
date	2011.09.23.12.11.01;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.26.08.24.59;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Unbreak build with HaXml>=1.22
@
text
@$OpenBSD: patch-FeedParser_hs,v 1.4 2012/03/20 13:33:54 dcoppa Exp $

Fix the "Invalid or incomplete multibyte or wide character" error
caused by some feeds: set binary mode on the handle before hGetContents
(upstream git commit bd08d07cc29893177efe8ef0e8be368657d56bbf)

Unbreak build with HaXml>=1.22

--- FeedParser.hs.orig	Tue Nov  8 16:49:38 2011
+++ FeedParser.hs	Tue Sep 18 17:22:05 2012
@@@@ -39,6 +39,7 @@@@ import Data.Maybe.Utils
 import Data.Char
 import Data.Either.Utils
 import Data.List
+import System.IO
 
 data Item = Item {itemtitle :: String,
                   itemguid :: Maybe String,
@@@@ -68,7 +69,8 @@@@ item2ep pc item =
 
 parse :: FilePath -> String -> IO (Either String Feed)
 parse fp name = 
-    do c <- readFile fp
+    do h <- openBinaryFile fp ReadMode
+       c <- hGetContents h
        case xmlParse' name (unifrob c) of
          Left x -> return (Left x)
          Right y ->
@@@@ -125,7 +127,7 @@@@ channel =
 attrofelem :: String -> Content Posn -> Maybe AttValue
 attrofelem attrname (CElem inelem _) =
     case unesc inelem of
-      Elem name al _ -> lookup attrname al
+      Elem name al _ -> lookup (N attrname) al
 attrofelem _ _ =
     error "attrofelem: called on something other than a CElem"
 stratt :: String -> Content Posn -> Maybe [String]
@


1.4
log
@Fix the "Invalid or incomplete multibyte or wide character" error
caused by some feeds: set binary mode on the handle before hGetContents
(upstream git commit bd08d07cc29893177efe8ef0e8be368657d56bbf)
@
text
@d1 1
a1 1
$OpenBSD$
d7 2
d10 1
a10 1
+++ FeedParser.hs	Tue Mar 20 14:08:25 2012
d29 9
@


1.3
log
@Bugfixing update to hpodder-1.1.6
@
text
@d1 1
a1 1
$OpenBSD: patch-FeedParser_hs,v 1.2 2011/09/23 12:11:01 dcoppa Exp $
d3 3
a5 1
make code compatible with HaXml 1.20
d7 3
a9 12
fix stripping of unicode byte order mark
(maybe something has changed in GHC 7)

--- FeedParser.hs.orig	Wed Jul  2 17:32:27 2008
+++ FeedParser.hs	Fri Sep 23 13:24:38 2011
@@@@ -33,6 +33,7 @@@@ module FeedParser where
 import Types
 import Text.XML.HaXml
 import Text.XML.HaXml.Parse
+import Text.XML.HaXml.Posn
 import Utils
 import Data.Maybe.Utils
d11 16
a26 52
@@@@ -76,9 +77,9 @@@@ parse fp name = 
                 let feeditems = getEnclosures doc
                 return $ Right $
                            (Feed {channeltitle = title, items = feeditems})
-       where getContent (Document _ _ e _) = CElem e
+       where getContent (Document _ _ e _) = CElem e noPos
 
-unifrob ('\xef':'\xbb':'\xbf':x) = x -- Strip off unicode BOM
+unifrob ('\xfeff':x) = x -- Strip off unicode BOM
 unifrob x = x
 
 unesc = xmlUnEscape stdXmlEscaper
@@@@ -121,13 +122,13 @@@@ channel =
 -- Utilities
 --------------------------------------------------
 
-attrofelem :: String -> Content -> Maybe AttValue
-attrofelem attrname (CElem inelem) =
+attrofelem :: String -> Content Posn -> Maybe AttValue
+attrofelem attrname (CElem inelem _) =
     case unesc inelem of
       Elem name al _ -> lookup attrname al
 attrofelem _ _ =
     error "attrofelem: called on something other than a CElem"
-stratt :: String -> Content -> Maybe [String]
+stratt :: String -> Content Posn -> Maybe [String]
 stratt attrname content =
     case attrofelem attrname content of
       Just (AttValue x) -> Just (concat . map mapfunc $ x)
@@@@ -136,17 +137,18 @@@@ stratt attrname content =
           mapfunc (Right _) = []
 
 -- Finds the literal children of the named tag, and returns it/them
-tagof :: String -> CFilter
+tagof :: String -> CFilter Posn
 tagof x = keep /> tag x -- /> txt
 
 -- Retruns the literal string that tagof would find
-strof :: String -> Content -> String
+strof :: String -> Content Posn -> String
 strof x y = forceEither $ strof_either x y
 
-strof_either :: String -> Content -> Either String String
+strof_either :: String -> Content Posn -> Either String String
 strof_either x y =
     case tagof x $ y of
-      [CElem elem] -> Right $ verbatim $ tag x /> txt $ CElem (unesc elem)
+      [CElem elem pos] -> Right $ verbatim $ tag x /> txt
+           $ CElem (unesc elem) pos
       z -> Left $ "strof: expecting CElem in " ++ x ++ ", got "
            ++ verbatim z ++ " at " ++ verbatim y
 
@


1.2
log
@Fix stripping of unicode byte order mark (maybe something has changed
in GHC 7). Upstream git commit c1afaea3af917f857ee5ff5cbc0c963f96acc98f
@
text
@d1 1
a1 1
$OpenBSD: patch-FeedParser_hs,v 1.1 2011/05/26 08:24:59 dcoppa Exp $
@


1.1
log
@Make code compatible with HaXml 1.20.*

Various fixes.

Zap USE_GROFF.

Ok kili@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
d9 1
a9 1
+++ FeedParser.hs	Tue May 24 13:32:57 2011
d18 1
a18 1
@@@@ -76,7 +77,7 @@@@ parse fp name = 
d25 2
a26 1
 unifrob ('\xef':'\xbb':'\xbf':x) = x -- Strip off unicode BOM
d28 2
@

