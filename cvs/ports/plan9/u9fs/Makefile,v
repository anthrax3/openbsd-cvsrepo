head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.1.1.0.8
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.6
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.4
	OPENBSD_5_0:1.1.1.1.0.2
	OPENBSD_5_0_BASE:1.1.1.1
	jasper_20111603:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.09.14.11.10.53;	author czarkoff;	state Exp;
branches;
next	1.2;
commitid	4vNsF1SjZb2rFllw;

1.2
date	2013.03.11.11.37.53;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.16.08.44.49;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.03.16.08.44.49;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@New email for MAINTAINER
@
text
@# $OpenBSD: Makefile,v 1.2 2013/03/11 11:37:53 espie Exp $

COMMENT=	serve 9P from Unix

DISTNAME=	u9fs-20110118
REVISION=	0
CATEGORIES=	plan9

MASTER_SITES=	http://plan9.bell-labs.com/sources/contrib/sl/u9fs/ \
		http://openbsd.stanleylieber.com/u9fs/
EXTRACT_SUFX=	-src.tgz

MAINTAINER=	Stanley Lieber <sl@@stanleylieber.com>

# MIT
PERMIT_PACKAGE_CDROM=	Yes
WANTLIB=		c

WRKDIST=	${WRKDIR}

MAKE_FILE=	makefile

MAKE_FLAGS=	CC=${CC}

NO_TEST=	Yes

do-install:
	${INSTALL_PROGRAM} ${WRKDIST}/u9fs ${PREFIX}/bin/u9fs

.include <bsd.port.mk>
@


1.2
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2011/03/16 08:44:49 jasper Exp $
d6 1
d13 1
a13 1
MAINTAINER=	Stanley Lieber <stanley.lieber@@gmail.com>
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
a15 3
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes
d24 1
a24 1
NO_REGRESS=	Yes
@


1.1.1.1
log
@import u9fs

U9fs is a program that serves Unix files to Plan 9 machines using the 9P
protocol. Its standard input and output are connected to a network
connection, typically TCP on an Ethernet. It assumes Plan 9 uids match
Unix login names, and changes to the corresponding Unix effective uid
when processing requests. Characters in file and directory names
unacceptable to Plan 9 are translated into a three-character sequence:
followed by two hexadecimal digits. U9fs serves both 9P1 (the 9P
protocol as used by the second and third editions of Plan 9) and 9P2000.

from Stanley Lieber (MAINTAINER), with some tweaks by me.
ok sthen@@
@
text
@@
