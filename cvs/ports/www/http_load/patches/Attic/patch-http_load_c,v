head	1.6;
access;
symbols
	OPENBSD_5_6:1.5.0.28
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.26
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.24
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.22
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.20
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.18
	OPENBSD_5_0:1.5.0.16
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.14
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.12
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.10
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.6
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_1:1.1.1.1.0.4
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	brad_2001-08-05:1.1.1.1
	brad:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2014.12.10.10.47.34;	author benoit;	state dead;
branches;
next	1.5;
commitid	oyoqOrlh3AWrz8Sd;

1.5
date	2007.12.04.19.15.10;	author sturm;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.02.01.22.58;	author rui;	state dead;
branches;
next	1.3;

1.3
date	2006.03.05.21.12.13;	author sturm;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.16.02.04.53;	author avsm;	state dead;
branches;
next	1.1;

1.1
date	2001.08.06.00.35.05;	author brad;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.08.06.00.35.05;	author brad;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to http_load-20140814.

ok ajacoutot@@
@
text
@$OpenBSD: patch-http_load_c,v 1.5 2007/12/04 19:15:10 sturm Exp $
--- http_load.c.orig	Sun Mar 12 20:17:03 2006
+++ http_load.c	Mon Dec  3 22:13:42 2007
@@@@ -105,7 +105,11 @@@@ static int num_sips, max_sips;
 
 typedef struct {
     int url_num;
+#ifdef USE_IPV6
+    struct sockaddr_in6 sa;
+#else /* USE_IPV6 */
     struct sockaddr_in sa;
+#endif /* USE_IPV6 */
     int sa_len;
     int conn_fd;
 #ifdef USE_SSL
@


1.5
log
@fix ipv6 support

from Matthias Bauer <bauerm at pestilenz.org>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@update http_load to 12mar2006 version

ok aanriot@@
@
text
@d1 4
a4 38
$OpenBSD: patch-http_load_c,v 1.3 2006/03/05 21:12:13 sturm Exp $
--- http_load.c.orig	Fri May 20 21:10:23 2005
+++ http_load.c	Mon Feb 27 18:26:05 2006
@@@@ -655,11 +655,11 @@@@ lookup_address( int url_num )
     (void) memset( &hints, 0, sizeof(hints) );
     hints.ai_family = PF_UNSPEC;
     hints.ai_socktype = SOCK_STREAM;
-    (void) snprintf( portstr, sizeof(portstr), "%d", (int) urls[url_num].port );
-    if ( (gaierr = getaddrinfo( urls[url_num].hostname, portstr, &hints, &ai )) != 0 )
+    (void) snprintf( portstr, sizeof(portstr), "%d", (int) port );
+    if ( (gaierr = getaddrinfo( hostname, portstr, &hints, &ai )) != 0 )
 	{
 	(void) fprintf(
-	    stderr, "%s: getaddrinfo %s - %s\n", argv0, urls[url_num].hostname,
+	    stderr, "%s: getaddrinfo %s - %s\n", argv0, hostname,
 	    gai_strerror( gaierr ) );
 	exit( 1 );
 	}
@@@@ -689,7 +689,7 @@@@ lookup_address( int url_num )
 	    {
 	    (void) fprintf(
 		stderr, "%s - sockaddr too small (%lu < %lu)\n",
-		urls[url_num].hostname,
+		hostname,
 		(unsigned long) sizeof(urls[url_num].sa),
 		(unsigned long) aiv4->ai_addrlen );
 	    exit( 1 );
@@@@ -708,7 +708,7 @@@@ lookup_address( int url_num )
 	    {
 	    (void) fprintf(
 		stderr, "%s - sockaddr too small (%lu < %lu)\n",
-		urls[url_num].hostname,
+		hostname,
 		(unsigned long) sizeof(urls[url_num].sa),
 		(unsigned long) aiv6->ai_addrlen );
 	    exit( 1 );
@@@@ -723,16 +723,15 @@@@ lookup_address( int url_num )
 	}
d6 10
a15 17
     (void) fprintf(
-	stderr, "%s: no valid address found for host %s\n", argv0,
-	urls[url_num].hostname );
+	stderr, "%s: no valid address found for host %s\n", argv0, hostname );
     exit( 1 );
 
 #else /* USE_IPV6 */
 
-    he = gethostbyname( urls[url_num].hostname );
+    he = gethostbyname( hostname );
     if ( he == (struct hostent*) 0 )
 	{
-	(void) fprintf( stderr, "%s: unknown host - %s\n", argv0, urls[url_num].hostname );
+	(void) fprintf( stderr, "%s: unknown host - %s\n", argv0, hostname );
 	exit( 1 );
 	}
     urls[url_num].sock_family = urls[url_num].sa.sin_family = he->h_addrtype;
@


1.3
log
@honor -proxy parameter
from Alexander Bluhm <Alexander_Bluhm at genua.de>
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to http_load-2002010

Previous timeout patches now integrated into main distribution
@
text
@d1 38
a38 4
$OpenBSD: patch-http_load_c,v 1.1 2001/08/06 00:35:05 brad Exp $
--- http_load.c.orig	Thu Apr  5 21:07:27 2001
+++ http_load.c	Sun Aug  5 18:45:02 2001
@@@@ -137,6 +137,7 @@@@ static int max_connections, num_connecti
d40 17
a56 32
 static char* argv0;
 static int do_checksum, do_throttle, do_verbose, do_jitter, do_proxy;
+static int idle_secs = IDLE_SECS;
 static float throttle;
 static char* proxy_host;
 static int proxy_port;
@@@@ -309,6 +310,16 @@@@ main( int argc, char** argv )
 		*colon = '\0';
 		}
 	    }
+       else if ( strncmp( argv[argn], "-timeout", sizeof("-timeout") ) == 0 && argn + 1 < argc )
+           {
+           idle_secs = atoi( argv[++argn] );
+           if ( idle_secs < 1 )
+               {
+               (void) fprintf(
+                   stderr, "%s: timeout seconds must be at least 1\n", argv0 );
+               exit( 1 );
+               }
+           }
 	else
 	    usage();
 	++argn;
@@@@ -456,6 +467,8 @@@@ usage( void )
 	"usage:  %s [-checksum] [-throttle] [-proxy host:port] [-verbose]\n", argv0 );
     (void) fprintf( stderr,
 	"            -parallel N | -rate N [-jitter]\n" );
+    (void) fprintf( stderr,
+       "            -timeout N\n" );
     (void) fprintf( stderr,
 	"            -fetches N | -seconds N\n" );
     (void) fprintf( stderr,
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@add http_load port
--
http_load runs multiple HTTP fetches in parallel, to test the throughput
of a web server.

However unlike most such test clients, it runs in a single process, so it
doesn't bog down the client machine. It can be configured to do HTTPS
fetches as well.
@
text
@@
