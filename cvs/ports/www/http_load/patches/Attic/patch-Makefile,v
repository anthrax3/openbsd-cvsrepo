head	1.4;
access;
symbols
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	avsm_2000-Sep-12:1.1.1.1
	avsm:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2001.08.06.00.41.48;	author brad;	state dead;
branches;
next	1.3;

1.3
date	2000.09.28.22.26.26;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.28.22.25.05;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.12.18.08.58;	author avsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.09.12.18.08.58;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@- woops, since this was an existing port set MAINTAINER back to the
original one
- fix conflicts
- remove unnecessary patch
@
text
@$OpenBSD: patch-Makefile,v 1.3 2000/09/28 22:26:26 avsm Exp $
--- Makefile.orig	Wed Sep 13 19:57:07 2000
+++ Makefile	Thu Sep 28 23:18:02 2000
@@@@ -9,10 +9,10 @@@@
 # http://www.openssl.org/  Make sure the SSL_TREE definition points to the
 # tree with your OpenSSL installation - depending on how you installed it,
 # it may be in /usr/local instead of /usr/local/ssl.
-#SSL_TREE =	/usr/local/ssl
-#SSL_DEFS =	-DUSE_SSL
-#SSL_INC =	-I$(SSL_TREE)/include
-#SSL_LIBS =	-L$(SSL_TREE)/lib -lssl -lcrypto
+SSL_TREE =	/usr
+SSL_DEFS =	-DUSE_SSL
+SSL_INC =	-I$(SSL_TREE)/include/ssl
+SSL_LIBS =	-L$(SSL_TREE)/lib -lssl -lcrypto
 
 BINDIR =	/usr/local/bin
 MANDIR =	/usr/local/man/man1
@


1.3
log
@add RCS tag to patch file
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@- update to latest version http_load_17sep00
- add real name to MAINTAINER
- regenerate patches for new version
- remove DISTFILES override, set DISTNAME and WRKDIST instead
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 7
a7 8
--- Makefile.orig	Fri Sep 10 04:13:21 1999
+++ Makefile	Tue Sep 12 18:18:12 2000
@@@@ -8,11 +8,11 @@@@
 # definitions.  You will need to have already built OpenSSL, available at
 # http://www.openssl.org/  Make sure the SSL_INCDIR and SSL_LIBDIR
 # definitions point to your OpenSSL installation.
-#SSL_INCDIR =	/usr/local/include
-#SSL_LIBDIR =	/usr/local/lib
d9 3
a11 4
-#SSL_INC =	-I$(SSL_INCDIR)
-#SSL_LIBS =	-L$(SSL_LIBDIR) -lssl -lcrypto -lRSAglue -lrsaref
+SSL_INCDIR =	/usr/include/ssl
+SSL_LIBDIR =	/usr/lib
d13 2
a14 2
+SSL_INC =	-I$(SSL_INCDIR)
+SSL_LIBS =	-L$(SSL_LIBDIR) -lssl -lcrypto
@


1.1.1.1
log
@http_load-09jun00 added
--

http_load runs multiple http/https fetches in parallel, to test the
throughput of a web server.  However unlike most such test clients,
it runs in a single process, so it doesn't bog down the client
machine.

You give it a file containing a list of URLs that may be fetched,
a flag specifying how to start connections (either by rate or by
number of simulated users), and a flag specifying when to quit
(either after a given number of fetches or a given elapsed time).
There are also optional flags for checksums, throttling, and progress
reports.

@
text
@@
