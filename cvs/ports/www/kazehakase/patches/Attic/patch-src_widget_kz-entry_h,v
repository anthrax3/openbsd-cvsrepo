head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2010.05.06.19.25.51;	author landry;	state dead;
branches;
next	1.1;

1.1
date	2009.10.11.20.33.00;	author landry;	state Exp;
branches;
next	;


desc
@@


1.2
log
@WIP on unbreaking kazehakase:
- update to 0.5.8
- backport upstream svn r3871 to let it build with latest gtk+2
- switch to xulrunner 1.9.x (breaks gecko backend while here)
- don't try to create a dbus server socket in a non-existent dir
It is still badly broken, as upstream doesn't seem to care about
shipping working stuff... but at least it builds and packages.
@
text
@$OpenBSD: patch-src_widget_kz-entry_h,v 1.1 2009/10/11 20:33:00 landry Exp $
--- src/widget/kz-entry.h.orig	Tue Oct 28 16:09:13 2008
+++ src/widget/kz-entry.h	Sun Oct 11 21:34:08 2009
@@@@ -1,4 +1,4 @@@@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*- */
+/* -*- Mode: C; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
 
 /*
  *  Copyright (C) 2004 Hiroyuki Ikezoe
@@@@ -35,56 +35,32 @@@@ G_BEGIN_DECLS
 typedef struct _KzEntry           KzEntry;
 typedef struct _KzEntryClass      KzEntryClass;
 
-typedef enum
-{
-	KZ_ENTRY_ICON_EMPTY,
-	KZ_ENTRY_ICON_PIXBUF,
-	KZ_ENTRY_ICON_STOCK
-} KzEntryIconType;
-
-
 struct _KzEntry
 {
-	GtkEntry parent;
-	gchar *backtext;
-	
-	KzEntryIconType icon_type;
-  
-	GdkWindow *icon_area;
-	GdkPixbuf *pixbuf;
+    GtkEntry parent;
+    gchar *background_text;
 
-	gchar *stock_id;
-	GtkIconSize icon_size;
-	
-	gint icon_width;
-	gint icon_height;
-
-	gboolean with_arrow;
-	gboolean from_outside;
+    gboolean with_arrow;
 };
 
 struct _KzEntryClass
 {
-	GtkEntryClass parent_class;
-	/* signals */
-	void (*icon_pressed)   (KzEntry *entry, GdkEventButton *event);
+    GtkEntryClass parent_class;
 };
 
 GType      kz_entry_get_type                (void) G_GNUC_CONST;
 GtkWidget *kz_entry_new                     (void);
-GtkWidget *kz_entry_new_with_stock          (const gchar *stock_id, GtkIconSize size);
 
 void       kz_entry_set_arrow               (KzEntry      *entry,
-					     gboolean     arrow);
-void       kz_entry_set_backtext            (KzEntry      *entry,
-					     const gchar  *text);
-void       kz_entry_set_icon_from_stock     (KzEntry      *entry,
-					     const gchar  *stock_id,
-					     GtkIconSize   size);
-void       kz_entry_set_icon_from_pixbuf    (KzEntry      *entry,
-					     GdkPixbuf    *icon);
-G_CONST_RETURN gchar* kz_entry_get_backtext (KzEntry      *entry);
+                                             gboolean     arrow);
+void       kz_entry_set_backtext     (KzEntry      *entry,
+                                             const gchar  *text);
+G_CONST_RETURN gchar* kz_entry_get_backtext 
+                                            (KzEntry      *entry);
 
 G_END_DECLS
 
 #endif /* __KZ_ENTRY_H__ */
+/* 
+vi:ts=4:nowrap:ai:expandtab:sw=4
+*/
@


1.1
log
@Sigh.. since upstream doesn't care about providing tarballs that
compile, nor instructions on how to compile it, we can't update to
0.5.8, but at least we can backport gtk-entry code and callers from it.
This is ugly^Whackish^Whorrible, but at least it really works again.
While here, drop MAINTAINERship, i don't want to be responsible for that
pile of crap anymore.
@
text
@d1 1
a1 1
$OpenBSD$
@

