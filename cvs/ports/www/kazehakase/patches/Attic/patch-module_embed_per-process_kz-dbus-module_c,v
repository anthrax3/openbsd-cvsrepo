head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.09.18.22.44.18;	author landry;	state dead;
branches;
next	1.1;

1.1
date	2010.05.06.19.25.51;	author landry;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Die die old horrible unmaintained piece of code. Too much bad memories
in there.
prodded by aja@@
@
text
@$OpenBSD: patch-module_embed_per-process_kz-dbus-module_c,v 1.1 2010/05/06 19:25:51 landry Exp $
sure, let's create dbus socket in a non-existent dir..
--- module/embed/per-process/kz-dbus-module.c.orig	Thu May  6 20:32:57 2010
+++ module/embed/per-process/kz-dbus-module.c	Thu May  6 20:33:14 2010
@@@@ -63,7 +63,7 @@@@ setup_dbus (void)
     DBusError error;
 
     dbus_error_init(&error);
-    server = dbus_server_listen("unix:tmpdir=/tmp/kazehakase/dbus-server", &error);
+    server = dbus_server_listen("unix:tmpdir=/tmp", &error);
     if (!server) {
         g_print("%s\n", error.message);
         dbus_error_free(&error);
@


1.1
log
@WIP on unbreaking kazehakase:
- update to 0.5.8
- backport upstream svn r3871 to let it build with latest gtk+2
- switch to xulrunner 1.9.x (breaks gecko backend while here)
- don't try to create a dbus server socket in a non-existent dir
It is still badly broken, as upstream doesn't seem to care about
shipping working stuff... but at least it builds and packages.
@
text
@d1 1
a1 1
$OpenBSD$
@

