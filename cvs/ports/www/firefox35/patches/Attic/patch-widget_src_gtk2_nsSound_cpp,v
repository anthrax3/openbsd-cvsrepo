head	1.2;
access;
symbols
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	martynas_20090621:1.1.1.1
	martynas:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2009.07.19.15.30.16;	author martynas;	state dead;
branches;
next	1.1;

1.1
date	2009.06.21.01.31.26;	author martynas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.21.01.31.26;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@sndio backend for firefox 3.5 nssound.  uses (external) audio/libcanberra
for system events, if installed.  resulting package does not depend
on it though.
@
text
@$OpenBSD: patch-widget_src_gtk2_nsSound_cpp,v 1.1 2009/06/21 01:31:26 martynas Exp $
--- widget/src/gtk2/nsSound.cpp.orig	Thu Mar  5 23:32:52 2009
+++ widget/src/gtk2/nsSound.cpp	Fri Mar 13 17:25:23 2009
@@@@ -134,7 +134,7 @@@@ nsSound::Init()
            but we will if we want to do things like streams, etc */
         EsdOpenSoundType EsdOpenSound;
 
-        elib = PR_LoadLibrary("libesd.so.0");
+        elib = PR_LoadLibrary("libesd.so");
         if (elib) {
             EsdOpenSound = (EsdOpenSoundType) PR_FindFunctionSymbol(elib, "esd_open_sound");
             if (!EsdOpenSound) {
@@@@ -151,7 +151,7 @@@@ nsSound::Init()
     }
 
     if (!libcanberra) {
-        libcanberra = PR_LoadLibrary("libcanberra.so.0");
+        libcanberra = PR_LoadLibrary("libcanberra.so");
         if (libcanberra) {
             ca_context_create = (ca_context_create_fn) PR_FindFunctionSymbol(libcanberra, "ca_context_create");
             if (!ca_context_create) {
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-widget_src_gtk2_nsSound_cpp,v 1.4 2008/11/20 23:41:32 martynas Exp $
@


1.1.1.1
log
@import firefox35-3.5rc2, been using it for couple of months.
wip, not linked to the build yet.  needs nspr&nss updates.
@
text
@@
