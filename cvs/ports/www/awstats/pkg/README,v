head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.8
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.6
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.10
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	rpe_20121118:1.1.1.1
	rpe:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.10.24.09.13.18;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	IK7jITZGneLnzEtv;

1.3
date	2015.07.28.16.47.24;	author rpe;	state Exp;
branches;
next	1.2;
commitid	P5r0DiVWQvglPYKi;

1.2
date	2012.12.09.22.05.25;	author rpe;	state Exp;
branches;
next	1.1;

1.1
date	2012.11.18.10.53.30;	author rpe;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.11.18.10.53.30;	author rpe;	state Exp;
branches;
next	;


desc
@@


1.4
log
@typo: ngix -> nginx
@
text
@$OpenBSD: README,v 1.3 2015/07/28 16:47:24 rpe Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

The configuration is prepared to produce reports for localhost.
To generate reports execute either on the command line or from cron:

    # ${TRUEPREFIX}/awstats/wwwroot/cgi-bin/awstats.pl -config=localhost -update


To use awstats with nginx, create a symbolic link in the htdocs directory:

    # ln -s ../awstats/wwwroot awstats

Add this configuration example to ${SYSCONFDIR}/nginx/nginx.conf:

    location ~ ^/awstats/cgi-bin/(.+\.pl)(.*)$ {
        fastcgi_pass            unix:run/slowcgi.sock;
        fastcgi_split_path_info ^/awstats/cgi-bin/(.+\.pl)(.*)$;
        fastcgi_param           SCRIPT_FILENAME ${TRUEPREFIX}/awstats/wwwroot/cgi-bin/$fastcgi_script_name;
        fastcgi_param           PATH_INFO $fastcgi_path_info;
        include                 fastcgi_params;
    }

Enable and start nginx:

    # rcctl enable nginx
    # rcctl start nginx

Enable, set flags to disable chroot(2) and start slowcgi(8):

    # rcctl enable slowcgi
    # rcctl set slowcgi flags -p /
    # rcctl start slowcgi

To access the reports for localhost point your browser to:

    http://localhost/awstats/cgi-bin/awstats.pl?config=localhost
@


1.3
log
@Update www/awstats to 7.4
- use sed -i instead of perl
- make the port work with nginx
- change README to reflect that

feedback and OK aja@@
OK sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.2 2012/12/09 22:05:25 rpe Exp $
d30 1
a30 1
    # rcctl start ngix
@


1.2
log
@- set NO_REGRESS=Yes
- mark as arch independed
- make the pre-configure/do-install blocks more compact using vars
- adjust paths in docs/*.html too to reflect the installation
- mention in README, that the default config works for localhost
  httpd out of the box and how to access the reports
- bump REVISION

feedback from and ok kirby@@, sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1.1.1 2012/11/18 10:53:30 rpe Exp $
d7 5
a11 2
The configuration is prepared to produce reports for httpd on localhost
out of the box.
d13 1
d15 3
a17 1
To generate reports execute either on the command line or from cron:
d19 7
a25 1
    # ${TRUEPREFIX}/awstats/wwwroot/cgi-bin/awstats.pl -config=localhost -update
d27 1
d29 2
a30 2
If using Apache, you can make the reports accessible by enabling the
configuration file:
d32 1
a32 2
    # ln -s ../modules.sample/awstats.conf /var/www/conf/modules/
    # /etc/rc.d/httpd restart
d34 3
d38 1
a38 1
To access the report for localhost point your browser to
d40 1
a40 1
    http://localhost/awstats/awstats.pl?config=localhost
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d7 4
d21 5
@


1.1.1.1
log
@import awstats-7.0

AWStats is a free powerful and featureful tool that generates
advanced web, streaming, ftp or mail server statistics, graphically.

This log analyzer works as a CGI or from command line and shows you
all possible information your log contains, in few graphical web
pages. It uses a partial information file to be able to process
large log files, often and quickly. It can analyze log files from
all major server tools like Apache log files (NCSA combined/XLF/ELF
log format or common/CLF log format), WebStar, IIS (W3C log format)
and a lot of other web, proxy, wap, streaming servers, mail servers
and some ftp servers.

with help and ok ajacoutot@@ sthen@@
@
text
@@
