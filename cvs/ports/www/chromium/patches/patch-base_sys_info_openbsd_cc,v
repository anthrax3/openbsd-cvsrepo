head	1.10;
access;
symbols
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.6.0.8
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2;
locks; strict;
comment	@# @;


1.10
date	2016.09.01.16.28.11;	author robert;	state Exp;
branches;
next	1.9;
commitid	0duujWXlyOCBrehm;

1.9
date	2016.03.06.10.51.14;	author robert;	state Exp;
branches;
next	1.8;
commitid	Upms3IeOsaLsGxbP;

1.8
date	2016.01.06.21.46.44;	author robert;	state Exp;
branches;
next	1.7;
commitid	QCpbcWCjgKtMUGZ9;

1.7
date	2015.07.23.13.44.04;	author robert;	state Exp;
branches;
next	1.6;
commitid	vxhJdppNzKtP7lYz;

1.6
date	2013.07.15.14.59.30;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2013.04.03.08.19.10;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2012.11.07.06.59.45;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2012.02.17.10.19.50;	author robert;	state dead;
branches;
next	1.2;

1.2
date	2011.12.14.16.58.19;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.27.07.59.08;	author robert;	state Exp;
branches;
next	;


desc
@@


1.10
log
@update to 53.0.2785.89
@
text
@$OpenBSD: patch-base_sys_info_openbsd_cc,v 1.9 2016/03/06 10:51:14 robert Exp $
--- base/sys_info_openbsd.cc.orig.port	Thu Sep  1 00:03:26 2016
+++ base/sys_info_openbsd.cc	Thu Sep  1 11:44:07 2016
@@@@ -29,6 +29,8 @@@@ int64_t AmountOfMemory(int pages_name) {
 
 namespace base {
 
+int64_t aofpmem = 0;
+
 // static
 int SysInfo::NumberOfProcessors() {
   int mib[] = { CTL_HW, HW_NCPU };
@@@@ -43,24 +45,10 @@@@ int SysInfo::NumberOfProcessors() {
 
 // static
 int64_t SysInfo::AmountOfPhysicalMemory() {
-  return AmountOfMemory(_SC_PHYS_PAGES);
-}
-
-// static
-int64_t SysInfo::AmountOfAvailablePhysicalMemory() {
-  return AmountOfMemory(_SC_AVPHYS_PAGES);
-}
-
-// static
-uint64_t SysInfo::MaxSharedMemorySize() {
-  int mib[] = { CTL_KERN, KERN_SHMINFO, KERN_SHMINFO_SHMMAX };
-  size_t limit;
-  size_t size = sizeof(limit);
-  if (sysctl(mib, arraysize(mib), &limit, &size, NULL, 0) < 0) {
-    NOTREACHED();
-    return 0;
-  }
-  return static_cast<uint64_t>(limit);
+  // pledge(2)
+  if (!aofpmem)
+    aofpmem = AmountOfMemory(_SC_PHYS_PAGES);
+  return aofpmem;
 }
 
 // static
@


1.9
log
@update to 49.0.2623.75
@
text
@d1 3
a3 3
$OpenBSD$
--- base/sys_info_openbsd.cc.orig.port	Wed Feb 24 00:01:57 2016
+++ base/sys_info_openbsd.cc	Sat Mar  5 23:38:02 2016
d13 1
a13 1
@@@@ -43,12 +45,10 @@@@ int SysInfo::NumberOfProcessors() {
d23 12
@


1.8
log
@pledge(2) the chromium processes;

The renderer, gpu, plugin and utility processes are now using pledge(2)
Unfortunately the GPU process only requires an rpath pledge because of
Mesa trying to parse two configuration files, /etc/drirc and ${HOME}/.drirc
So currently the GPU process will use an rpath pledge in the next
week or so so that people can test, but this situation has to be
resolved because it is not acceptable that a mostly unused configuration
file is being parsed from a library and that stops us from using less
pledges and thus disallowing the GPU process to have read access
to the filsystem ... like your ssh keys.
@
text
@d1 4
a4 4
$OpenBSD: patch-base_sys_info_openbsd_cc,v 1.7 2015/07/23 13:44:04 robert Exp $
--- base/sys_info_openbsd.cc.orig.port	Tue Dec 15 21:05:04 2015
+++ base/sys_info_openbsd.cc	Sun Jan  3 22:19:58 2016
@@@@ -26,6 +26,8 @@@@ int64 AmountOfMemory(int pages_name) {
d8 1
a8 1
+int64 aofpmem = 0;
d13 1
a13 1
@@@@ -40,12 +42,11 @@@@ int SysInfo::NumberOfProcessors() {
d16 1
a16 1
 int64 SysInfo::AmountOfPhysicalMemory() {
d19 4
a25 4
 
-// static
-int64 SysInfo::AmountOfAvailablePhysicalMemory() {
-  return AmountOfMemory(_SC_AVPHYS_PAGES);
@


1.7
log
@update to 44.0.2403.89
@
text
@d1 13
a13 5
$OpenBSD$
--- base/sys_info_openbsd.cc.orig.port	Wed Jul 22 08:42:13 2015
+++ base/sys_info_openbsd.cc	Wed Jul 22 08:42:21 2015
@@@@ -44,11 +44,6 @@@@ int64 SysInfo::AmountOfPhysicalMemory() {
 }
d16 8
d26 4
a29 6
-}
-
-// static
 uint64 SysInfo::MaxSharedMemorySize() {
   int mib[] = { CTL_KERN, KERN_SHMINFO, KERN_SHMINFO_SHMMAX };
   size_t limit;
@


1.6
log
@update to 28.0.1500.45
@
text
@d1 3
a3 3
$OpenBSD: patch-base_sys_info_openbsd_cc,v 1.5 2013/04/03 08:19:10 robert Exp $
--- base/sys_info_openbsd.cc.orig.port	Wed Jun 12 09:28:39 2013
+++ base/sys_info_openbsd.cc	Sun Jul 14 10:59:41 2013
d13 1
a13 1
 size_t SysInfo::MaxSharedMemorySize() {
@


1.5
log
@- update to 26.0.1410.43
- switch chromium to use clang/llvm instead of gcc
- switch back to the internal libvpx because it's an unreleased version
  at this point
- re-enable SSE2 support
@
text
@d1 4
a4 23
$OpenBSD$
--- base/sys_info_openbsd.cc.orig.port	Fri Mar 22 02:13:44 2013
+++ base/sys_info_openbsd.cc	Tue Apr  2 21:05:17 2013
@@@@ -1,4 +1,4 @@@@
-// Copyright (c) 2011 The Chromium Authors. All rights reserved.
+// Copyright (c) 2012 The Chromium Authors. All rights reserved.
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
@@@@ -43,6 +43,16 @@@@ size_t SysInfo::MaxSharedMemorySize() {
     return 0;
   }
   return limit;
+}
+
+// static
+std::string SysInfo::CPUModelName() {
+  int mib[] = { CTL_HW, HW_MODEL };
+  char name[256];
+  size_t len = arraysize(name);
+  if (sysctl(mib, arraysize(mib), &name, &len, NULL, 0) == 0)
+    return name;
+  return std::string();
d7 9
a15 1
 }  // namespace base
@


1.4
log
@update to 23.0.1271.64
@
text
@d2 2
a3 2
--- base/sys_info_openbsd.cc.orig	Wed Nov  7 07:48:17 2012
+++ base/sys_info_openbsd.cc	Wed Nov  7 07:52:57 2012
@


1.3
log
@update to 17.0.963.56
@
text
@d1 8
a8 5
$OpenBSD: patch-base_sys_info_openbsd_cc,v 1.2 2011/12/14 16:58:19 robert Exp $
--- base/sys_info_openbsd.cc.orig	Wed Dec  7 09:01:59 2011
+++ base/sys_info_openbsd.cc	Tue Dec 13 22:25:24 2011
@@@@ -5,6 +5,7 @@@@
 #include "base/sys_info.h"
d10 2
a11 15
 #include <sys/param.h>
+#include <sys/shm.h>
 #include <sys/sysctl.h>
 
 #include "base/logging.h"
@@@@ -15,7 +16,7 @@@@ int SysInfo::NumberOfProcessors() {
   int mib[] = { CTL_HW, HW_NCPU };
   int ncpu;
   size_t size = sizeof(ncpu);
-  if (sysctl(mib, 2, &ncpu, &size, NULL, 0) == -1) {
+  if (sysctl(mib, arraysize(mib), &ncpu, &size, NULL, 0) == -1) {
     NOTREACHED();
     return 1;
   }
@@@@ -31,6 +32,17 @@@@ int64 SysInfo::AmountOfPhysicalMemory() {
d13 1
a13 2
 
   return static_cast<int64>(pages) * page_size;
d16 8
a23 9
+size_t SysInfo::MaxSharedMemorySize() {
+  int mib[] = { CTL_KERN, KERN_SHMINFO, KERN_SHMINFO_SHMMAX };
+  size_t limit;
+  size_t size = sizeof(limit);
+  if (sysctl(mib, arraysize(mib), &limit, &size, NULL, 0) < 0) {
+    NOTREACHED();
+    return 0;
+  }
+  return limit;
@


1.2
log
@update to 16.0.912.63
@
text
@d1 1
a1 1
$OpenBSD: patch-base_sys_info_openbsd_cc,v 1.1 2011/10/27 07:59:08 robert Exp $
@


1.1
log
@update to 15.0.874.102.

switch from using the hacked macosx transport dib to the linux one
which uses sysv shms.
make sure you also have a current kernel before using this version
@
text
@d1 4
a4 9
$OpenBSD$
--- base/sys_info_openbsd.cc.orig	Wed Oct 26 14:14:35 2011
+++ base/sys_info_openbsd.cc	Wed Oct 26 14:14:41 2011
@@@@ -1,10 +1,11 @@@@
-// Copyright (c) 2009 The Chromium Authors. All rights reserved.
+// Copyright (c) 2011 The Chromium Authors. All rights reserved.
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
d12 1
a12 1
@@@@ -15,11 +16,33 @@@@ int SysInfo::NumberOfProcessors() {
d21 4
a24 12
   return ncpu;
+}
+
+int64 SysInfo::AmountOfPhysicalMemory() {
+  long pages = sysconf(_SC_PHYS_PAGES);
+  long page_size = sysconf(_SC_PAGESIZE);
+  if (pages == -1 || page_size == -1) {
+    NOTREACHED();
+    return 0;
+  }
+
+  return static_cast<int64>(pages) * page_size;
@

