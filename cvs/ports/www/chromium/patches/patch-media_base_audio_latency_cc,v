head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.1.0.2
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.09.09.19.16.43;	author robert;	state Exp;
branches;
next	1.2;
commitid	o4y7MpMU3y8aR1pv;

1.2
date	2017.07.27.14.23.46;	author robert;	state Exp;
branches;
next	1.1;
commitid	UqlSU0wmYWtcPgqI;

1.1
date	2017.02.23.17.30.49;	author robert;	state Exp;
branches;
next	;
commitid	Xchfuy8J4FssXfjr;


desc
@@


1.3
log
@update to 61.0.3163.79
@
text
@$OpenBSD: patch-media_base_audio_latency_cc,v 1.2 2017/07/27 14:23:46 robert Exp $
Index: media/base/audio_latency.cc
--- media/base/audio_latency.cc.orig
+++ media/base/audio_latency.cc
@@@@ -89,7 +89,7 @@@@ int AudioLatency::GetRtcBufferSize(int sample_rate, in
     return frames_per_buffer;
   }
 
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_LINUX) || defined(OS_MACOSX) || defined(OS_BSD)
   // On Linux and MacOS, the low level IO implementations on the browser side
   // supports all buffer size the clients want. We use the native peer
   // connection buffer size (10ms) to achieve best possible performance.
@


1.2
log
@update to 60.0.3112.78
@
text
@d1 1
a1 1
$OpenBSD: patch-media_base_audio_latency_cc,v 1.1 2017/02/23 17:30:49 robert Exp $
d5 1
a5 1
@@@@ -84,7 +84,7 @@@@ int AudioLatency::GetRtcBufferSize(int sample_rate, in
@


1.1
log
@use more linux specific code for font handling and gpu
@
text
@d1 5
a5 4
$OpenBSD$
--- media/base/audio_latency.cc.orig.port	Sat Feb  4 11:46:23 2017
+++ media/base/audio_latency.cc	Sat Feb  4 12:20:45 2017
@@@@ -83,7 +83,7 @@@@ int AudioLatency::GetRtcBufferSize(int sample_rate, in
@

