head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3;
locks; strict;
comment	@# @;


1.3
date	2017.09.09.19.16.43;	author robert;	state Exp;
branches;
next	1.2;
commitid	o4y7MpMU3y8aR1pv;

1.2
date	2017.07.27.14.23.46;	author robert;	state Exp;
branches;
next	1.1;
commitid	UqlSU0wmYWtcPgqI;

1.1
date	2017.06.25.21.53.56;	author robert;	state Exp;
branches;
next	;
commitid	l6xAjqoVop0UE8Em;


desc
@@


1.3
log
@update to 61.0.3163.79
@
text
@$OpenBSD$

Index: ui/gfx/mojo/buffer_types_struct_traits.cc
--- ui/gfx/mojo/buffer_types_struct_traits.cc.orig
+++ ui/gfx/mojo/buffer_types_struct_traits.cc
@@@@ -12,7 +12,7 @@@@ void* StructTraits<gfx::mojom::NativePixmapHandleDataV
                    gfx::NativePixmapHandle>::
     SetUpContext(const gfx::NativePixmapHandle& pixmap_handle) {
   auto* handles = new std::vector<mojo::ScopedHandle>();
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   for (const base::FileDescriptor& fd : pixmap_handle.fds)
     handles->emplace_back(mojo::WrapPlatformFile(fd.fd));
 #endif  // defined(OS_LINUX)
@@@@ -36,7 +36,7 @@@@ bool StructTraits<
     gfx::mojom::NativePixmapHandleDataView,
     gfx::NativePixmapHandle>::Read(gfx::mojom::NativePixmapHandleDataView data,
                                    gfx::NativePixmapHandle* out) {
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   mojo::ArrayDataView<mojo::ScopedHandle> handles_data_view;
   data.GetFdsDataView(&handles_data_view);
   for (size_t i = 0; i < handles_data_view.size(); ++i) {
@@@@ -68,7 +68,7 @@@@ const gfx::NativePixmapHandle&
 StructTraits<gfx::mojom::GpuMemoryBufferHandleDataView,
              gfx::GpuMemoryBufferHandle>::
     native_pixmap_handle(const gfx::GpuMemoryBufferHandle& handle) {
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   return handle.native_pixmap_handle;
 #else
   static gfx::NativePixmapHandle pixmap_handle;
@@@@ -107,7 +107,7 @@@@ bool StructTraits<gfx::mojom::GpuMemoryBufferHandleDat
     out->offset = data.offset();
     out->stride = data.stride();
   }
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   if (out->type == gfx::NATIVE_PIXMAP &&
       !data.ReadNativePixmapHandle(&out->native_pixmap_handle))
     return false;
@


1.2
log
@update to 60.0.3112.78
@
text
@d1 1
a1 1
$OpenBSD: patch-ui_gfx_mojo_buffer_types_struct_traits_cc,v 1.1 2017/06/25 21:53:56 robert Exp $
d6 4
a9 4
@@@@ -25,7 +25,7 @@@@ std::vector<mojo::ScopedHandle> StructTraits<
     gfx::NativePixmapHandle>::fds(const gfx::NativePixmapHandle& pixmap_handle,
                                   void* context) {
   PixmapHandleFdList* handles = static_cast<PixmapHandleFdList*>(context);
d12 4
a15 4
   if (handles->empty()) {
     // Generate the handles here, but do not send them yet.
     for (const base::FileDescriptor& fd : pixmap_handle.fds) {
@@@@ -42,7 +42,7 @@@@ bool StructTraits<
d24 1
a24 1
@@@@ -74,7 +74,7 @@@@ const gfx::NativePixmapHandle&
d33 1
a33 1
@@@@ -113,7 +113,7 @@@@ bool StructTraits<gfx::mojom::GpuMemoryBufferHandleDat
@


1.1
log
@update to 59.0.3071.109
@
text
@d1 1
a1 1
$OpenBSD$
d24 1
a24 1
@@@@ -89,7 +89,7 @@@@ const gfx::NativePixmapHandle&
d33 1
a33 1
@@@@ -145,7 +145,7 @@@@ bool StructTraits<gfx::mojom::GpuMemoryBufferHandleDat
@

