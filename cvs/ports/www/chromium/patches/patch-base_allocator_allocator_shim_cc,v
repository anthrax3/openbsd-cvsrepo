head	1.4;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2017.06.25.21.53.56;	author robert;	state Exp;
branches;
next	1.3;
commitid	l6xAjqoVop0UE8Em;

1.3
date	2017.04.28.14.21.00;	author robert;	state Exp;
branches;
next	1.2;
commitid	XFDnyB7tGNawHUbl;

1.2
date	2017.03.14.12.18.53;	author robert;	state Exp;
branches;
next	1.1;
commitid	FgEdsLreTqAdn1i5;

1.1
date	2017.02.23.17.30.49;	author robert;	state Exp;
branches;
next	;
commitid	Xchfuy8J4FssXfjr;


desc
@@


1.4
log
@update to 59.0.3071.109
@
text
@$OpenBSD: patch-base_allocator_allocator_shim_cc,v 1.3 2017/04/28 14:21:00 robert Exp $
Index: base/allocator/allocator_shim.cc
--- base/allocator/allocator_shim.cc.orig
+++ base/allocator/allocator_shim.cc
@@@@ -83,7 +83,7 @@@@ inline const allocator::AllocatorDispatch* GetChainHea
   // Unfortunately due to that bug NoBarrier_Load() is mistakenly fully
   // barriered on Linux+Clang, and that causes visible perf regressons.
   return reinterpret_cast<const allocator::AllocatorDispatch*>(
-#if defined(OS_LINUX) && defined(__clang__)
+#if (defined(OS_BSD) || defined(OS_LINUX)) && defined(__clang__)
       *static_cast<const volatile subtle::AtomicWord*>(&g_chain_head)
 #else
       subtle::NoBarrier_Load(&g_chain_head)
@


1.3
log
@update to 58.0.3029.81
@
text
@d1 5
a5 4
$OpenBSD: patch-base_allocator_allocator_shim_cc,v 1.2 2017/03/14 12:18:53 robert Exp $
--- base/allocator/allocator_shim.cc.orig.port	Wed Apr 19 21:06:28 2017
+++ base/allocator/allocator_shim.cc	Thu Apr 27 19:55:58 2017
@@@@ -81,7 +81,7 @@@@ inline const allocator::AllocatorDispatch* GetChainHea
@


1.2
log
@update to 57.0.2987.98
@
text
@d1 4
a4 4
$OpenBSD: patch-base_allocator_allocator_shim_cc,v 1.1 2017/02/23 17:30:49 robert Exp $
--- base/allocator/allocator_shim.cc.orig.port	Thu Mar  9 21:04:26 2017
+++ base/allocator/allocator_shim.cc	Fri Mar 10 07:46:16 2017
@@@@ -77,7 +77,7 @@@@ inline const allocator::AllocatorDispatch* GetChainHea
@


1.1
log
@use more linux specific code for font handling and gpu
@
text
@d1 4
a4 4
$OpenBSD$
--- base/allocator/allocator_shim.cc.orig.port	Sat Feb  4 11:46:22 2017
+++ base/allocator/allocator_shim.cc	Sat Feb  4 11:48:16 2017
@@@@ -89,7 +89,7 @@@@ inline const allocator::AllocatorDispatch* GetChainHea
@

