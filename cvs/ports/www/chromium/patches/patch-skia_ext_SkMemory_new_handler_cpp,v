head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2016.10.26.06.22.08;	author robert;	state Exp;
branches;
next	1.4;
commitid	Dt81be1Osjz00Uwx;

1.4
date	2016.04.16.19.08.46;	author robert;	state Exp;
branches;
next	1.3;
commitid	SE10dvx9aTcZrjRO;

1.3
date	2016.03.06.10.51.14;	author robert;	state Exp;
branches;
next	1.2;
commitid	Upms3IeOsaLsGxbP;

1.2
date	2015.09.05.16.06.50;	author robert;	state Exp;
branches;
next	1.1;
commitid	rTmBXJaDIIWe1XKA;

1.1
date	2015.04.27.16.38.25;	author robert;	state Exp;
branches;
next	;
commitid	jwX00slFR1NY9xHC;


desc
@@


1.5
log
@update to 54.0.2840.71
@
text
@$OpenBSD: patch-skia_ext_SkMemory_new_handler_cpp,v 1.4 2016/04/16 19:08:46 robert Exp $
--- skia/ext/SkMemory_new_handler.cpp.orig.port	Wed Oct 12 21:03:02 2016
+++ skia/ext/SkMemory_new_handler.cpp	Wed Oct 19 12:56:08 2016
@@@@ -68,7 +68,7 @@@@ static void* sk_malloc_nothrow(size_t size) {
     // TODO(b.kelemen): we should always use UncheckedMalloc but currently it
     // doesn't work as intended everywhere.
     void* result;
-#if  defined(OS_IOS)
+#if  defined(OS_IOS) || defined(OS_BSD)
     result = malloc(size);
 #else
     // It's the responsibility of the caller to check the return value.
@


1.4
log
@update to 50.0.2661.75
@
text
@d1 4
a4 4
$OpenBSD: patch-skia_ext_SkMemory_new_handler_cpp,v 1.3 2016/03/06 10:51:14 robert Exp $
--- skia/ext/SkMemory_new_handler.cpp.orig.port	Fri Apr  8 18:02:10 2016
+++ skia/ext/SkMemory_new_handler.cpp	Thu Apr 14 08:25:13 2016
@@@@ -62,7 +62,7 @@@@ static void* sk_malloc_nothrow(size_t size) {
@


1.3
log
@update to 49.0.2623.75
@
text
@d1 4
a4 4
$OpenBSD: patch-skia_ext_SkMemory_new_handler_cpp,v 1.2 2015/09/05 16:06:50 robert Exp $
--- skia/ext/SkMemory_new_handler.cpp.orig.port	Wed Feb 24 21:01:33 2016
+++ skia/ext/SkMemory_new_handler.cpp	Thu Mar  3 09:43:26 2016
@@@@ -63,7 +63,7 @@@@ static void* sk_malloc_nothrow(size_t size) {
@


1.2
log
@update to 45.0.2454.85
@
text
@d1 4
a4 4
$OpenBSD$
--- skia/ext/SkMemory_new_handler.cpp.orig.port	Wed Sep  2 20:10:58 2015
+++ skia/ext/SkMemory_new_handler.cpp	Wed Sep  2 20:11:14 2015
@@@@ -62,7 +62,7 @@@@ static void* sk_malloc_nothrow(size_t size) {
@


1.1
log
@update to 42.0.2311.90
@
text
@d2 3
a4 4
--- skia/ext/SkMemory_new_handler.cpp.orig.port	Thu Apr 23 09:49:23 2015
+++ skia/ext/SkMemory_new_handler.cpp	Thu Apr 23 09:49:31 2015
@@@@ -53,7 +53,7 @@@@ void* sk_malloc_throw(size_t size) {
 static void* sk_malloc_nothrow(size_t size) {
d7 1
d10 1
a10 1
     return malloc(size);
d12 1
a12 1
     void* result;
@

