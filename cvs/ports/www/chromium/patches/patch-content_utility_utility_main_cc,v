head	1.4;
access;
symbols
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.03.14.12.18.54;	author robert;	state Exp;
branches;
next	1.3;
commitid	FgEdsLreTqAdn1i5;

1.3
date	2016.10.26.06.22.08;	author robert;	state Exp;
branches;
next	1.2;
commitid	Dt81be1Osjz00Uwx;

1.2
date	2016.03.06.10.51.14;	author robert;	state Exp;
branches;
next	1.1;
commitid	Upms3IeOsaLsGxbP;

1.1
date	2016.01.06.21.46.44;	author robert;	state Exp;
branches;
next	;
commitid	QCpbcWCjgKtMUGZ9;


desc
@@


1.4
log
@update to 57.0.2987.98
@
text
@$OpenBSD: patch-content_utility_utility_main_cc,v 1.3 2016/10/26 06:22:08 robert Exp $
--- content/utility/utility_main.cc.orig.port	Thu Mar  9 21:04:33 2017
+++ content/utility/utility_main.cc	Fri Mar 10 07:46:23 2017
@@@@ -13,6 +13,7 @@@@
 #include "build/build_config.h"
 #include "content/child/child_process.h"
 #include "content/common/sandbox_linux/sandbox_linux.h"
+#include "content/common/sandbox_init_openbsd.h"
 #include "content/public/common/content_switches.h"
 #include "content/public/common/main_function_params.h"
 #include "content/public/common/sandbox_init.h"
@@@@ -37,6 +38,8 @@@@ int UtilityMain(const MainFunctionParams& parameters) 
   // Seccomp-BPF policy.
   if (parameters.zygote_child)
     LinuxSandbox::InitializeSandbox();
+#elif defined(OS_BSD)
+  InitializeSandbox();
 #endif
 
   ChildProcess utility_process;
@


1.3
log
@update to 54.0.2840.71
@
text
@d1 4
a4 4
$OpenBSD: patch-content_utility_utility_main_cc,v 1.2 2016/03/06 10:51:14 robert Exp $
--- content/utility/utility_main.cc.orig.port	Wed Oct 12 21:02:59 2016
+++ content/utility/utility_main.cc	Wed Oct 19 12:56:05 2016
@@@@ -11,6 +11,7 @@@@
d12 1
a12 1
@@@@ -35,6 +36,8 @@@@ int UtilityMain(const MainFunctionParams& parameters) 
@


1.2
log
@update to 49.0.2623.75
@
text
@d1 4
a4 4
$OpenBSD: patch-content_utility_utility_main_cc,v 1.1 2016/01/06 21:46:44 robert Exp $
--- content/utility/utility_main.cc.orig.port	Wed Feb 24 00:02:00 2016
+++ content/utility/utility_main.cc	Thu Mar  3 09:43:26 2016
@@@@ -10,6 +10,7 @@@@
d12 1
a12 1
@@@@ -34,6 +35,8 @@@@ int UtilityMain(const MainFunctionParams& parameters) 
@


1.1
log
@pledge(2) the chromium processes;

The renderer, gpu, plugin and utility processes are now using pledge(2)
Unfortunately the GPU process only requires an rpath pledge because of
Mesa trying to parse two configuration files, /etc/drirc and ${HOME}/.drirc
So currently the GPU process will use an rpath pledge in the next
week or so so that people can test, but this situation has to be
resolved because it is not acceptable that a mostly unused configuration
file is being parsed from a library and that stops us from using less
pledges and thus disallowing the GPU process to have read access
to the filsystem ... like your ssh keys.
@
text
@d1 5
a5 5
$OpenBSD$
--- content/utility/utility_main.cc.orig.port	Sun Jan  3 19:17:08 2016
+++ content/utility/utility_main.cc	Sun Jan  3 21:03:30 2016
@@@@ -9,6 +9,7 @@@@
 #include "base/timer/hi_res_timer_manager.h"
d12 1
a12 1
@@@@ -33,6 +34,8 @@@@ int UtilityMain(const MainFunctionParams& parameters) 
@

