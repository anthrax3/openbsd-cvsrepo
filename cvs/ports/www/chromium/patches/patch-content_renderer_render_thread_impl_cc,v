head	1.17;
access;
symbols
	OPENBSD_6_1:1.17.0.2
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4;
locks; strict;
comment	@# @;


1.17
date	2017.03.14.12.18.54;	author robert;	state Exp;
branches;
next	1.16;
commitid	FgEdsLreTqAdn1i5;

1.16
date	2017.01.26.17.08.25;	author robert;	state Exp;
branches;
next	1.15;
commitid	SWz5LewWpip0ZZLw;

1.15
date	2016.12.10.15.35.25;	author robert;	state Exp;
branches;
next	1.14;
commitid	D24Pj03ujnweitOe;

1.14
date	2016.10.26.06.22.08;	author robert;	state Exp;
branches;
next	1.13;
commitid	Dt81be1Osjz00Uwx;

1.13
date	2016.09.01.16.28.11;	author robert;	state Exp;
branches;
next	1.12;
commitid	0duujWXlyOCBrehm;

1.12
date	2016.07.31.13.11.44;	author robert;	state Exp;
branches;
next	1.11;
commitid	dRegVegviFQGKQZc;

1.11
date	2016.05.27.06.28.21;	author robert;	state Exp;
branches;
next	1.10;
commitid	cpiCcJ3vjht5tEkH;

1.10
date	2016.04.16.19.08.46;	author robert;	state Exp;
branches;
next	1.9;
commitid	SE10dvx9aTcZrjRO;

1.9
date	2016.03.06.10.51.14;	author robert;	state Exp;
branches;
next	1.8;
commitid	Upms3IeOsaLsGxbP;

1.8
date	2016.01.23.18.49.31;	author robert;	state Exp;
branches;
next	1.7;
commitid	KVrkvcBYFue8N3VB;

1.7
date	2015.12.05.16.13.32;	author robert;	state Exp;
branches;
next	1.6;
commitid	D0GFSwUDbKAnIs1m;

1.6
date	2015.10.14.16.42.07;	author robert;	state Exp;
branches;
next	1.5;
commitid	iw6THZfJQngZlw1r;

1.5
date	2015.09.05.16.06.50;	author robert;	state Exp;
branches;
next	1.4;
commitid	rTmBXJaDIIWe1XKA;

1.4
date	2015.07.23.13.44.04;	author robert;	state Exp;
branches;
next	1.3;
commitid	vxhJdppNzKtP7lYz;

1.3
date	2015.05.24.15.51.53;	author robert;	state Exp;
branches;
next	1.2;
commitid	rFaYcWD2ntiXn5nr;

1.2
date	2015.04.27.16.38.25;	author robert;	state Exp;
branches;
next	1.1;
commitid	jwX00slFR1NY9xHC;

1.1
date	2015.03.18.19.26.29;	author robert;	state Exp;
branches;
next	;
commitid	aPwx9j7rbIsa650M;


desc
@@


1.17
log
@update to 57.0.2987.98
@
text
@$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.16 2017/01/26 17:08:25 robert Exp $
--- content/renderer/render_thread_impl.cc.orig.port	Thu Mar  9 21:04:32 2017
+++ content/renderer/render_thread_impl.cc	Fri Mar 10 07:46:23 2017
@@@@ -207,11 +207,13 @@@@
 #include "content/common/external_ipc_dumper.h"
 #endif
 
+#if !defined(OS_BSD)
 #if defined(OS_MACOSX)
 #include <malloc/malloc.h>
 #else
 #include <malloc.h>
 #endif
+#endif
 
 using base::ThreadRestrictions;
 using blink::WebDocument;
@@@@ -882,7 +884,7 @@@@ void RenderThreadImpl::Init(
   GetRemoteInterfaces()->GetInterface(
       mojo::MakeRequest(&storage_partition_service_));
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   ChildProcess::current()->SetIOThreadPriority(base::ThreadPriority::DISPLAY);
   ChildThreadImpl::current()->SetThreadPriority(
       categorized_worker_pool_->background_worker_thread_id(),
@@@@ -1080,7 +1082,7 @@@@ void RenderThreadImpl::InitializeCompositorThread() {
   compositor_task_runner_->PostTask(
       FROM_HERE,
       base::Bind(base::IgnoreResult(&ThreadRestrictions::SetIOAllowed), false));
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   ChildThreadImpl::current()->SetThreadPriority(compositor_thread_->threadId(),
                                                 base::ThreadPriority::DISPLAY);
 #endif
@@@@ -1386,7 +1388,7 @@@@ media::GpuVideoAcceleratorFactories* RenderThreadImpl:
   const bool enable_video_accelerator =
       !cmd_line->HasSwitch(switches::kDisableAcceleratedVideoDecode);
   const bool enable_gpu_memory_buffer_video_frames =
-#if defined(OS_MACOSX) || defined(OS_LINUX)
+#if defined(OS_MACOSX) || defined(OS_LINUX) || defined(OS_BSD)
       !cmd_line->HasSwitch(switches::kDisableGpuMemoryBufferVideoFrames) &&
       !cmd_line->HasSwitch(switches::kDisableGpuCompositing) &&
       !gpu_channel_host->gpu_info().software_rendering;
@@@@ -1729,6 +1731,8 @@@@ void RenderThreadImpl::GetRendererMemoryMetrics(
 #else
   size_t malloc_usage = minfo.hblkhd + minfo.arena;
 #endif
+#elif defined(OS_BSD)
+  size_t malloc_usage = 0;
 #else
   size_t malloc_usage = GetMallocUsage();
 #endif
@


1.16
log
@update to 56.0.2924.76
@
text
@d1 4
a4 4
$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.15 2016/12/10 15:35:25 robert Exp $
--- content/renderer/render_thread_impl.cc.orig.port	Wed Jan  4 21:04:18 2017
+++ content/renderer/render_thread_impl.cc	Wed Jan 11 17:09:34 2017
@@@@ -206,11 +206,13 @@@@
d18 1
a18 1
@@@@ -890,7 +892,7 @@@@ void RenderThreadImpl::Init(
d20 1
a20 1
       mojo::GetProxy(&storage_partition_service_));
d27 1
a27 1
@@@@ -1178,7 +1180,7 @@@@ void RenderThreadImpl::InitializeCompositorThread() {
d36 1
a36 1
@@@@ -1488,7 +1490,7 @@@@ media::GpuVideoAcceleratorFactories* RenderThreadImpl:
d45 1
a45 1
@@@@ -1846,6 +1848,8 @@@@ void RenderThreadImpl::RecordPurgeAndSuspendMetrics() 
@


1.15
log
@update to 55.0.2883.75; add lpr support to the system dialog while here
@
text
@d1 36
a36 4
$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.14 2016/10/26 06:22:08 robert Exp $
--- content/renderer/render_thread_impl.cc.orig.port	Fri Dec  2 00:02:13 2016
+++ content/renderer/render_thread_impl.cc	Fri Dec  2 17:44:54 2016
@@@@ -1492,7 +1492,7 @@@@ media::GpuVideoAcceleratorFactories* RenderThreadImpl:
d45 9
@


1.14
log
@update to 54.0.2840.71
@
text
@d1 4
a4 4
$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.13 2016/09/01 16:28:11 robert Exp $
--- content/renderer/render_thread_impl.cc.orig.port	Wed Oct 12 21:02:59 2016
+++ content/renderer/render_thread_impl.cc	Wed Oct 19 12:56:05 2016
@@@@ -1455,7 +1455,7 @@@@ media::GpuVideoAcceleratorFactories* RenderThreadImpl:
@


1.13
log
@update to 53.0.2785.89
@
text
@d1 4
a4 4
$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.12 2016/07/31 13:11:44 robert Exp $
--- content/renderer/render_thread_impl.cc.orig.port	Thu Sep  1 00:03:31 2016
+++ content/renderer/render_thread_impl.cc	Thu Sep  1 11:12:22 2016
@@@@ -1452,7 +1452,7 @@@@ media::GpuVideoAcceleratorFactories* RenderThreadImpl:
@


1.12
log
@update to 52.0.2743.82
@
text
@d1 4
a4 4
$OpenBSD$
--- content/renderer/render_thread_impl.cc.orig.port	Thu Jul 21 10:39:27 2016
+++ content/renderer/render_thread_impl.cc	Thu Jul 21 10:39:35 2016
@@@@ -1424,7 +1424,7 @@@@ media::GpuVideoAcceleratorFactories* RenderThreadImpl:
@


1.11
log
@update to 51.0.2704.63
@
text
@d2 6
a7 6
--- content/renderer/render_thread_impl.cc.orig.port	Thu May 26 08:29:50 2016
+++ content/renderer/render_thread_impl.cc	Thu May 26 08:29:56 2016
@@@@ -1468,7 +1468,7 @@@@ media::GpuVideoAcceleratorFactories* RenderThreadImpl:
     const bool enable_video_accelerator =
         !cmd_line->HasSwitch(switches::kDisableAcceleratedVideoDecode);
     const bool enable_gpu_memory_buffer_video_frames =
d10 3
a12 3
         !cmd_line->HasSwitch(switches::kDisableGpuMemoryBufferVideoFrames) &&
         !cmd_line->HasSwitch(switches::kDisableGpuCompositing) &&
         !gpu_channel_host->gpu_info().software_rendering;
@


1.10
log
@update to 50.0.2661.75
@
text
@d2 3
a4 3
--- content/renderer/render_thread_impl.cc.orig.port	Thu Apr 14 14:02:41 2016
+++ content/renderer/render_thread_impl.cc	Thu Apr 14 14:02:48 2016
@@@@ -1499,7 +1499,7 @@@@ media::GpuVideoAcceleratorFactories* RenderThreadImpl:
d10 3
a12 3
         !cmd_line->HasSwitch(switches::kDisableGpuMemoryBufferVideoFrames);
 #else
         cmd_line->HasSwitch(switches::kEnableGpuMemoryBufferVideoFrames);
@


1.9
log
@update to 49.0.2623.75
@
text
@d1 12
a12 12
$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.8 2016/01/23 18:49:31 robert Exp $
--- content/renderer/render_thread_impl.cc.orig.port	Wed Feb 24 21:01:32 2016
+++ content/renderer/render_thread_impl.cc	Thu Mar  3 09:43:26 2016
@@@@ -823,7 +823,7 @@@@ void RenderThreadImpl::Init() {
   are_image_decode_tasks_enabled_ = num_raster_threads > 1;
 
   base::SimpleThread::Options thread_options;
-#if defined(OS_ANDROID) || defined(OS_LINUX)
+#if defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_BSD)
   if (!command_line.HasSwitch(
           switches::kUseNormalPriorityForTileTaskWorkerThreads)) {
     thread_options.set_priority(base::ThreadPriority::BACKGROUND);
@


1.8
log
@update to 48.0.2564.82
@
text
@d1 4
a4 4
$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.7 2015/12/05 16:13:32 robert Exp $
--- content/renderer/render_thread_impl.cc.orig.port	Wed Jan 20 21:01:21 2016
+++ content/renderer/render_thread_impl.cc	Fri Jan 22 19:58:58 2016
@@@@ -788,7 +788,7 @@@@ void RenderThreadImpl::Init() {
@


1.7
log
@update to 47.0.2526.73
@
text
@d1 4
a4 4
$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.6 2015/10/14 16:42:07 robert Exp $
--- content/renderer/render_thread_impl.cc.orig.port	Tue Nov 24 21:00:55 2015
+++ content/renderer/render_thread_impl.cc	Wed Dec  2 08:18:32 2015
@@@@ -735,7 +735,7 @@@@ void RenderThreadImpl::Init() {
@


1.6
log
@update to 46.0.2490.71
@
text
@d1 5
a5 5
$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.5 2015/09/05 16:06:50 robert Exp $
--- content/renderer/render_thread_impl.cc.orig.port	Tue Oct 13 21:04:32 2015
+++ content/renderer/render_thread_impl.cc	Wed Oct 14 07:41:13 2015
@@@@ -737,7 +737,7 @@@@ void RenderThreadImpl::Init() {
   is_gather_pixel_refs_enabled_ = num_raster_threads > 1;
@


1.5
log
@update to 45.0.2454.85
@
text
@d1 4
a4 4
$OpenBSD$
--- content/renderer/render_thread_impl.cc.orig.port	Wed Sep  2 07:46:34 2015
+++ content/renderer/render_thread_impl.cc	Wed Sep  2 07:46:41 2015
@@@@ -768,7 +768,7 @@@@ void RenderThreadImpl::Init() {
@


1.4
log
@update to 44.0.2403.89
@
text
@d1 7
a7 7
$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.3 2015/05/24 15:51:53 robert Exp $
--- content/renderer/render_thread_impl.cc.orig.port	Wed Jul 15 22:30:03 2015
+++ content/renderer/render_thread_impl.cc	Wed Jul 22 08:37:30 2015
@@@@ -670,7 +670,7 @@@@ void RenderThreadImpl::Init() {
                   static_cast<unsigned>(compositor_raster_threads_.size() + 1))
                   .c_str()));
       raster_thread->Start();
d10 3
a12 3
       if (!command_line.HasSwitch(
               switches::kUseNormalPriorityForTileTaskWorkerThreads)) {
         raster_thread->SetThreadPriority(base::ThreadPriority::BACKGROUND);
@


1.3
log
@update to 43.0.2357.65
@
text
@d1 4
a4 4
$OpenBSD$
--- content/renderer/render_thread_impl.cc.orig.port	Wed May 20 10:12:51 2015
+++ content/renderer/render_thread_impl.cc	Wed May 20 10:13:21 2015
@@@@ -673,7 +673,7 @@@@ void RenderThreadImpl::Init() {
@


1.2
log
@update to 42.0.2311.90
@
text
@d1 7
a7 7
$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.1 2015/03/18 19:26:29 robert Exp $
--- content/renderer/render_thread_impl.cc.orig.port	Wed Apr 15 00:31:22 2015
+++ content/renderer/render_thread_impl.cc	Wed Apr 15 08:32:50 2015
@@@@ -671,7 +671,7 @@@@ void RenderThreadImpl::Init() {
       num_raster_threads = 1;
     cc::TileTaskWorkerPool::SetNumWorkerThreads(num_raster_threads);
 
d10 3
a12 3
     if (!command_line.HasSwitch(
             switches::kUseNormalPriorityForTileTaskWorkerThreads)) {
       cc::TileTaskWorkerPool::SetWorkerThreadPriority(
@


1.1
log
@update to 41.0.2272.89
@
text
@d1 5
a5 5
$OpenBSD$
--- content/renderer/render_thread_impl.cc.orig.port	Wed Mar 11 07:29:03 2015
+++ content/renderer/render_thread_impl.cc	Wed Mar 18 20:00:59 2015
@@@@ -638,7 +638,7 @@@@ void RenderThreadImpl::Init() {
     DCHECK_GT(num_raster_threads, 0);
@

