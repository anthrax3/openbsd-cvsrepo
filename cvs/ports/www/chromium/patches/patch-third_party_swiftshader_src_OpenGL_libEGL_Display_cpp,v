head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2017.09.09.19.16.43;	author robert;	state Exp;
branches;
next	1.1;
commitid	o4y7MpMU3y8aR1pv;

1.1
date	2017.06.25.21.53.56;	author robert;	state Exp;
branches;
next	;
commitid	l6xAjqoVop0UE8Em;


desc
@@


1.2
log
@update to 61.0.3163.79
@
text
@$OpenBSD: patch-third_party_swiftshader_src_OpenGL_libEGL_Display_cpp,v 1.1 2017/06/25 21:53:56 robert Exp $

Index: third_party/swiftshader/src/OpenGL/libEGL/Display.cpp
--- third_party/swiftshader/src/OpenGL/libEGL/Display.cpp.orig
+++ third_party/swiftshader/src/OpenGL/libEGL/Display.cpp
@@@@ -30,7 +30,7 @@@@
 #include <sys/ioctl.h>
 #include <linux/fb.h>
 #include <fcntl.h>
-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__OpenBSD__)
 #include "Main/libX11.hpp"
 #elif defined(__APPLE__)
 #include "OSXUtils.hpp"
@@@@ -64,7 +64,7 @@@@ Display *Display::get(EGLDisplay dpy)
 
 	static void *nativeDisplay = nullptr;
 
-	#if defined(__linux__) && !defined(__ANDROID__)
+	#if (defined(__linux__) || defined(__OpenBSD__)) && !defined(__ANDROID__)
 		// Even if the application provides a native display handle, we open (and close) our own connection
 		if(!nativeDisplay && dpy != HEADLESS_DISPLAY && libX11 && libX11->XOpenDisplay)
 		{
@@@@ -87,7 +87,7 @@@@ Display::~Display()
 {
 	terminate();
 
-	#if defined(__linux__) && !defined(__ANDROID__)
+	#if (defined(__linux__) || defined(__OpenBSD__)) && !defined(__ANDROID__)
 		if(nativeDisplay && libX11->XCloseDisplay)
 		{
 			libX11->XCloseDisplay((::Display*)nativeDisplay);
@@@@ -561,7 +561,7 @@@@ bool Display::isValidWindow(EGLNativeWindowType window
 			return false;
 		}
 		return true;
-	#elif defined(__linux__)
+	#elif defined(__linux__) || defined(__OpenBSD__)
 		if(nativeDisplay)
 		{
 			XWindowAttributes windowAttributes;
@@@@ -723,7 +723,7 @@@@ sw::Format Display::getDisplayFormat() const
 
 		// No framebuffer device found, or we're in user space
 		return sw::FORMAT_X8B8G8R8;
-	#elif defined(__linux__)
+	#elif defined(__linux__) || defined(__OpenBSD__)
 		if(nativeDisplay)
 		{
 			Screen *screen = libX11->XDefaultScreenOfDisplay((::Display*)nativeDisplay);
@


1.1
log
@update to 59.0.3071.109
@
text
@d1 1
a1 1
$OpenBSD$
d15 1
a15 1
@@@@ -53,7 +53,7 @@@@ Display *Display::get(EGLDisplay dpy)
d24 1
a24 1
@@@@ -76,7 +76,7 @@@@ Display::~Display()
d33 1
a33 1
@@@@ -550,7 +550,7 @@@@ bool Display::isValidWindow(EGLNativeWindowType window
d42 1
a42 1
@@@@ -707,7 +707,7 @@@@ sw::Format Display::getDisplayFormat() const
@

