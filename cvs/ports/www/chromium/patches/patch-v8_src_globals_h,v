head	1.16;
access;
symbols
	OPENBSD_6_1:1.15.0.2
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.10.0.2
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5;
locks; strict;
comment	@# @;


1.16
date	2017.06.25.21.53.56;	author robert;	state Exp;
branches;
next	1.15;
commitid	l6xAjqoVop0UE8Em;

1.15
date	2017.03.14.12.18.54;	author robert;	state Exp;
branches;
next	1.14;
commitid	FgEdsLreTqAdn1i5;

1.14
date	2017.01.26.17.08.26;	author robert;	state Exp;
branches;
next	1.13;
commitid	SWz5LewWpip0ZZLw;

1.13
date	2016.12.10.15.35.25;	author robert;	state Exp;
branches;
next	1.12;
commitid	D24Pj03ujnweitOe;

1.12
date	2016.09.01.16.28.11;	author robert;	state Exp;
branches;
next	1.11;
commitid	0duujWXlyOCBrehm;

1.11
date	2016.07.31.13.11.44;	author robert;	state Exp;
branches;
next	1.10;
commitid	dRegVegviFQGKQZc;

1.10
date	2016.05.27.06.28.21;	author robert;	state Exp;
branches;
next	1.9;
commitid	cpiCcJ3vjht5tEkH;

1.9
date	2015.10.14.16.42.07;	author robert;	state Exp;
branches;
next	1.8;
commitid	iw6THZfJQngZlw1r;

1.8
date	2015.09.25.13.43.04;	author robert;	state Exp;
branches;
next	1.7;
commitid	GlIMk3NkHbjuXlZ1;

1.7
date	2014.10.13.06.49.19;	author robert;	state dead;
branches;
next	1.6;
commitid	GAMY6AdJxC6cdD6g;

1.6
date	2014.09.11.19.04.53;	author robert;	state Exp;
branches;
next	1.5;
commitid	WrglT9ERNBhPArdd;

1.5
date	2014.07.20.17.22.34;	author robert;	state Exp;
branches;
next	1.4;
commitid	yFSQqywU9tg3Fhqe;

1.4
date	2014.05.24.15.27.34;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2014.03.11.14.52.01;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.02.08.09.48.26;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.46;	author espie;	state Exp;
branches;
next	;


desc
@@


1.16
log
@update to 59.0.3071.109
@
text
@$OpenBSD: patch-v8_src_globals_h,v 1.15 2017/03/14 12:18:54 robert Exp $
Index: v8/src/globals.h
--- v8/src/globals.h.orig
+++ v8/src/globals.h
@@@@ -184,7 +184,11 @@@@ const size_t kCodeRangeAreaAlignment = 256 * MB;
 const size_t kMaximalCodeRangeSize = 512 * MB;
 const size_t kCodeRangeAreaAlignment = 64 * KB;  // OS page on PPC Linux
 #else
+#if defined(__OpenBSD__)
+const size_t kMaximalCodeRangeSize = 256 * MB;
+#else
 const size_t kMaximalCodeRangeSize = 512 * MB;
+#endif
 const size_t kCodeRangeAreaAlignment = 4 * KB;  // OS page.
 #endif
 #if V8_OS_WIN
@


1.15
log
@update to 57.0.2987.98
@
text
@d1 5
a5 4
$OpenBSD: patch-v8_src_globals_h,v 1.14 2017/01/26 17:08:26 robert Exp $
--- v8/src/globals.h.orig.port	Thu Mar  9 21:05:30 2017
+++ v8/src/globals.h	Fri Mar 10 07:46:26 2017
@@@@ -183,7 +183,11 @@@@ const size_t kCodeRangeAreaAlignment = 256 * MB;
@


1.14
log
@update to 56.0.2924.76
@
text
@d1 4
a4 4
$OpenBSD: patch-v8_src_globals_h,v 1.13 2016/12/10 15:35:25 robert Exp $
--- v8/src/globals.h.orig.port	Thu Dec 15 00:03:10 2016
+++ v8/src/globals.h	Tue Jan  3 20:30:03 2017
@@@@ -182,7 +182,11 @@@@ const size_t kCodeRangeAreaAlignment = 256 * MB;
@


1.13
log
@update to 55.0.2883.75; add lpr support to the system dialog while here
@
text
@d1 4
a4 4
$OpenBSD: patch-v8_src_globals_h,v 1.12 2016/09/01 16:28:11 robert Exp $
--- v8/src/globals.h.orig.port	Fri Dec  2 00:03:17 2016
+++ v8/src/globals.h	Fri Dec  2 17:44:57 2016
@@@@ -181,7 +181,11 @@@@ const size_t kCodeRangeAreaAlignment = 256 * MB;
@


1.12
log
@update to 53.0.2785.89
@
text
@d1 4
a4 4
$OpenBSD$
--- v8/src/globals.h.orig.port	Thu Sep  1 11:40:44 2016
+++ v8/src/globals.h	Thu Sep  1 11:41:23 2016
@@@@ -155,7 +155,11 @@@@ const size_t kCodeRangeAreaAlignment = 256 * MB;
@


1.11
log
@update to 52.0.2743.82
@
text
@d1 6
a6 9
$OpenBSD: patch-v8_src_globals_h,v 1.10 2016/05/27 06:28:21 robert Exp $

Try to pre-allocate less memory on OpenBSD in the v8 engine.

--- v8/src/globals.h.orig.port	Wed Jul 20 21:05:13 2016
+++ v8/src/globals.h	Thu Jul 21 10:25:33 2016
@@@@ -151,7 +151,11 @@@@ const bool kRequiresCodeRange = true;
 // region. Used only for large object space.
 const size_t kMaximalCodeRangeSize = 256 * MB;
d13 1
a15 1
 const size_t kMinimumCodeRangeSize = 4 * MB;
@


1.10
log
@update to 51.0.2704.63
@
text
@d1 1
a1 1
$OpenBSD: patch-v8_src_globals_h,v 1.9 2015/10/14 16:42:07 robert Exp $
d5 3
a7 3
--- v8/src/globals.h.orig.port	Wed May 25 21:02:49 2016
+++ v8/src/globals.h	Thu May 26 08:09:50 2016
@@@@ -156,7 +156,11 @@@@ const bool kRequiresCodeRange = true;
@


1.9
log
@update to 46.0.2490.71
@
text
@d1 1
a1 1
$OpenBSD: patch-v8_src_globals_h,v 1.8 2015/09/25 13:43:04 robert Exp $
d5 3
a7 3
--- v8/src/globals.h.orig.port	Tue Oct 13 21:04:45 2015
+++ v8/src/globals.h	Wed Oct 14 07:41:14 2015
@@@@ -141,7 +141,11 @@@@ const bool kRequiresCodeRange = true;
@


1.8
log
@make v8 pre-allocate less memory on OpenBSD/amd64 to avoid v8 running out
of memory
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- v8/src/globals.h.orig.port	Fri Sep 25 15:11:43 2015
+++ v8/src/globals.h	Fri Sep 25 15:12:55 2015
@@@@ -164,7 +164,11 @@@@ const bool kRequiresCodeRange = true;
@


1.7
log
@update to 38.0.2125.101
@
text
@d1 18
a18 12
$OpenBSD: patch-v8_src_globals_h,v 1.6 2014/09/11 19:04:53 robert Exp $
--- v8/src/globals.h.orig.port	Wed Sep 10 01:48:33 2014
+++ v8/src/globals.h	Wed Sep 10 22:05:41 2014
@@@@ -85,7 +85,7 @@@@ typedef byte* Address;
 # define V8_INTPTR_C(x)   (x ## LL)
 # define V8_PTR_PREFIX    "I64"
 #elif V8_HOST_ARCH_64_BIT
-# if V8_OS_MACOSX
+# if V8_OS_MACOSX || defined(__OpenBSD__)
 #  define V8_UINT64_C(x)   (x ## ULL)
 #  define V8_INT64_C(x)    (x ## LL)
 # else
@


1.6
log
@update to 37.0.2062.120
@
text
@d1 1
a1 1
$OpenBSD: patch-v8_src_globals_h,v 1.5 2014/07/20 17:22:34 robert Exp $
@


1.5
log
@update to 36.0.1985.125;

from this release Chromium uses Aura instead of Gtk+ so the UI will look
a bit different, and that is completely normal.
@
text
@d1 4
a4 4
$OpenBSD: patch-v8_src_globals_h,v 1.4 2014/05/24 15:27:34 robert Exp $
--- v8/src/globals.h.orig.port	Tue Jul 15 13:05:20 2014
+++ v8/src/globals.h	Thu Jul 17 12:25:32 2014
@@@@ -187,7 +187,7 @@@@ typedef byte* Address;
@


1.4
log
@update to 35.0.1916.114
@
text
@d1 4
a4 4
$OpenBSD: patch-v8_src_globals_h,v 1.3 2014/03/11 14:52:01 robert Exp $
--- v8/src/globals.h.orig.port	Wed May 14 21:24:53 2014
+++ v8/src/globals.h	Thu May 22 21:42:27 2014
@@@@ -204,7 +204,7 @@@@ typedef byte* Address;
@


1.3
log
@update to 33.0.1750.146
@
text
@d1 4
a4 4
$OpenBSD$
--- v8/src/globals.h.orig.port	Sun Feb 23 16:51:36 2014
+++ v8/src/globals.h	Sun Feb 23 16:52:08 2014
@@@@ -187,7 +187,7 @@@@ typedef byte* Address;
@


1.2
log
@... and ditch older patches too
@
text
@d1 12
a12 12
$OpenBSD: patch-v8_src_globals_h,v 1.1 2010/12/13 09:51:46 espie Exp $
--- v8/src/globals.h.orig	Tue Mar 30 07:31:56 2010
+++ v8/src/globals.h	Sun Nov 28 00:11:32 2010
@@@@ -107,7 +107,7 @@@@ typedef byte* Address;
 #define V8PRIxPTR "lx"
 #endif
 
-#if defined(__APPLE__) && defined(__MACH__)
+#if (defined(__APPLE__) && defined(__MACH__)) || defined(__OpenBSD__)
 #define USING_MAC_ABI
 #endif
 
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d1 1
a1 1
$OpenBSD$
@

