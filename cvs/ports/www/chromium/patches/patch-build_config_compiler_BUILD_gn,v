head	1.10;
access;
symbols
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6;
locks; strict;
comment	@# @;


1.10
date	2017.09.09.19.16.43;	author robert;	state Exp;
branches;
next	1.9;
commitid	o4y7MpMU3y8aR1pv;

1.9
date	2017.07.27.14.23.46;	author robert;	state Exp;
branches;
next	1.8;
commitid	UqlSU0wmYWtcPgqI;

1.8
date	2017.06.25.21.53.56;	author robert;	state Exp;
branches;
next	1.7;
commitid	l6xAjqoVop0UE8Em;

1.7
date	2017.04.28.14.21.00;	author robert;	state Exp;
branches;
next	1.6;
commitid	XFDnyB7tGNawHUbl;

1.6
date	2017.03.14.12.18.53;	author robert;	state Exp;
branches;
next	1.5;
commitid	FgEdsLreTqAdn1i5;

1.5
date	2017.01.26.17.08.25;	author robert;	state Exp;
branches;
next	1.4;
commitid	SWz5LewWpip0ZZLw;

1.4
date	2016.12.10.15.35.25;	author robert;	state Exp;
branches;
next	1.3;
commitid	D24Pj03ujnweitOe;

1.3
date	2016.10.26.06.22.07;	author robert;	state Exp;
branches;
next	1.2;
commitid	Dt81be1Osjz00Uwx;

1.2
date	2016.09.01.16.28.11;	author robert;	state Exp;
branches;
next	1.1;
commitid	0duujWXlyOCBrehm;

1.1
date	2016.08.17.11.06.50;	author robert;	state Exp;
branches;
next	;
commitid	ho0WBaBoHvorC0o0;


desc
@@


1.10
log
@update to 61.0.3163.79
@
text
@$OpenBSD$

Index: build/config/compiler/BUILD.gn
--- build/config/compiler/BUILD.gn.orig
+++ build/config/compiler/BUILD.gn
@@@@ -46,7 +46,7 @@@@ declare_args() {
   # only two architectures that are currently checked in). Turn this off when
   # you are using a custom toolchain and need to control -B in cflags.
   linux_use_bundled_binutils =
-      linux_use_bundled_binutils_override && is_linux &&
+      linux_use_bundled_binutils_override && (is_linux && !is_openbsd) &&
       (current_cpu == "x64" || current_cpu == "x86")
   binutils_path = rebase_path("//third_party/binutils/Linux_x64/Release/bin",
                               root_build_dir)
@@@@ -222,7 +222,7 @@@@ config("compiler") {
     # Linker warnings.
     if (fatal_linker_warnings && !(is_chromeos && current_cpu == "arm") &&
         !(is_android && use_order_profiling) && !is_mac && !is_ios &&
-        current_os != "aix") {
+        current_os != "aix" && !is_openbsd) {
       # TODO(jochen): Enable this on chromeos on arm. http://crbug.com/356580
       # TODO(lizeb,pasko): Fix link errors when linking with order_profiling=1
       # crbug.com/485542
@@@@ -285,7 +285,7 @@@@ config("compiler") {
       }
     }
 
-    if (is_official_build) {
+    if (is_official_build && !is_openbsd) {
       # Explicitly pass --build-id to ld. Compilers used to always pass this
       # implicitly but don't any more (in particular clang when built without
       # ENABLE_LINKER_BUILD_ID=ON). The crash infrastructure does need a build
@@@@ -334,8 +334,6 @@@@ config("compiler") {
       "-Wl,-z,relro",
     ]
     if (!using_sanitizer) {
-      ldflags += [ "-Wl,-z,defs" ]
-
       # Functions interposed by the sanitizers can make ld think
       # that some libraries aren't needed when they actually are,
       # http://crbug.com/234010. As workaround, disable --as-needed.
@@@@ -1164,7 +1162,7 @@@@ config("default_warnings") {
         "-Wno-address-of-packed-member",
 
         # TODO(hans): https://crbug.com/681136
-        "-Wno-unused-lambda-capture",
+        # "-Wno-unused-lambda-capture",
 
         # TODO(thakis ): https://crbug.com/683349
         "-Wno-user-defined-warnings",
@@@@ -1734,7 +1732,7 @@@@ config("symbols") {
         # "-gdwarf-3" doesn't work with dump_syms in Chrome OS.
         cflags += [ "-gdwarf-3" ]
       }
-      cflags += [ "-g2" ]
+      cflags += [ "-g0" ]
     }
     if (use_debug_fission) {
       cflags += [ "-gsplit-dwarf" ]
@


1.9
log
@update to 60.0.3112.78
@
text
@d6 1
a6 1
@@@@ -45,7 +45,7 @@@@ declare_args() {
d15 1
a15 1
@@@@ -219,7 +219,7 @@@@ config("compiler") {
d24 1
a24 1
@@@@ -282,7 +282,7 @@@@ config("compiler") {
d33 1
a33 1
@@@@ -331,7 +331,7 @@@@ config("compiler") {
d37 6
a42 6
-      if (!use_cfi_diag) {
+      if (!use_cfi_diag && !is_openbsd) {
         ldflags += [ "-Wl,-z,defs" ]
       }
 
@@@@ -1111,7 +1111,7 @@@@ config("default_warnings") {
d51 6
a56 6
@@@@ -1669,7 +1669,7 @@@@ config("symbols") {
         "-g2",
       ]
     } else {
-      cflags = [ "-g2" ]
+      cflags = [ "-g0" ]
@


1.8
log
@update to 59.0.3071.109
@
text
@d1 2
a2 1
$OpenBSD: patch-build_config_compiler_BUILD_gn,v 1.7 2017/04/28 14:21:00 robert Exp $
d6 1
a6 1
@@@@ -37,7 +37,7 @@@@ declare_args() {
d15 1
a15 2
@@@@ -207,7 +207,7 @@@@ config("compiler") {
 
d18 3
a20 2
-        !(is_android && use_order_profiling) && !is_mac && !is_ios) {
+        !(is_android && use_order_profiling) && !is_mac && !is_ios && !is_openbsd) {
d24 1
a24 1
@@@@ -270,7 +270,7 @@@@ config("compiler") {
d33 1
a33 1
@@@@ -319,7 +319,7 @@@@ config("compiler") {
d42 1
a42 1
@@@@ -1097,7 +1097,7 @@@@ config("default_warnings") {
d51 1
a51 1
@@@@ -1644,7 +1644,7 @@@@ config("symbols") {
@


1.7
log
@update to 58.0.3029.81
@
text
@d1 5
a5 4
$OpenBSD$
--- build/config/compiler/BUILD.gn.orig.port	Thu Apr 27 19:58:01 2017
+++ build/config/compiler/BUILD.gn	Thu Apr 27 22:56:36 2017
@@@@ -36,7 +36,7 @@@@ declare_args() {
d14 1
a14 1
@@@@ -214,7 +214,7 @@@@ config("compiler") {
d23 10
a32 1
@@@@ -314,7 +314,7 @@@@ config("compiler") {
d41 2
a42 2
@@@@ -1104,7 +1104,7 @@@@ config("default_warnings") {
         "-Wno-block-capture-autoreleasing",
d50 1
a50 1
@@@@ -1647,7 +1647,7 @@@@ config("symbols") {
@


1.6
log
@update to 57.0.2987.98
@
text
@d1 3
a3 3
$OpenBSD: patch-build_config_compiler_BUILD_gn,v 1.5 2017/01/26 17:08:25 robert Exp $
--- build/config/compiler/BUILD.gn.orig.port	Thu Mar  9 21:04:27 2017
+++ build/config/compiler/BUILD.gn	Fri Mar 10 07:46:16 2017
d13 1
a13 1
@@@@ -215,7 +215,7 @@@@ config("compiler") {
d22 1
a22 1
@@@@ -295,7 +295,7 @@@@ config("compiler") {
d31 11
a41 10
@@@@ -1058,14 +1058,14 @@@@ config("default_warnings") {
     # Chrome's hermetic Clang compiler, NaCl's Clang compiler and Xcode's Clang
     # compiler will almost always have different versions. Certain flags may not
     # be recognized by one version or the other.
-    if (!is_nacl) {
+    if (!is_nacl && !is_openbsd) {
       # Flags NaCl (Clang 3.7) does not recognize.
       cflags += [
         # TODO(thakis): Enable this, crbug.com/507717
         "-Wno-shift-negative-value",
d43 3
d47 2
a48 5
-    if (!is_nacl && !use_xcode_clang) {
+    if (!is_nacl && !use_xcode_clang && !is_openbsd) {
       # Flags NaCl (Clang 3.7) and Xcode 7.3 (Clang clang-703.0.31) do not
       # recognize.
       cflags += [
@


1.5
log
@update to 56.0.2924.76
@
text
@d1 3
a3 3
$OpenBSD: patch-build_config_compiler_BUILD_gn,v 1.4 2016/12/10 15:35:25 robert Exp $
--- build/config/compiler/BUILD.gn.orig.port	Thu Dec 15 00:02:03 2016
+++ build/config/compiler/BUILD.gn	Tue Jan  3 20:29:54 2017
d13 1
a13 1
@@@@ -210,7 +210,7 @@@@ config("compiler") {
d22 1
a22 1
@@@@ -290,7 +290,7 @@@@ config("compiler") {
d31 1
a31 1
@@@@ -1020,14 +1020,14 @@@@ config("default_warnings") {
@


1.4
log
@update to 55.0.2883.75; add lpr support to the system dialog while here
@
text
@d1 4
a4 4
$OpenBSD$
--- build/config/compiler/BUILD.gn.orig.port	Fri Dec  2 17:56:07 2016
+++ build/config/compiler/BUILD.gn	Fri Dec  2 17:57:11 2016
@@@@ -39,7 +39,7 @@@@ declare_args() {
d13 1
a13 1
@@@@ -213,7 +213,7 @@@@ config("compiler") {
d22 1
a22 1
@@@@ -293,7 +293,7 @@@@ config("compiler") {
d31 1
a31 1
@@@@ -1032,14 +1032,14 @@@@ config("default_warnings") {
@


1.3
log
@update to 54.0.2840.71
@
text
@d2 3
a4 3
--- build/config/compiler/BUILD.gn.orig.port	Wed Oct 19 13:29:47 2016
+++ build/config/compiler/BUILD.gn	Wed Oct 19 13:30:51 2016
@@@@ -38,7 +38,7 @@@@ declare_args() {
d8 3
a10 2
-      is_linux && (current_cpu == "x64" || current_cpu == "x86")
+      (is_linux && !is_openbsd) && (current_cpu == "x64" || current_cpu == "x86")
d13 1
a13 2
 
@@@@ -201,7 +201,7 @@@@ config("compiler") {
d22 1
a22 2
@@@@ -283,7 +283,7 @@@@ config("compiler") {
       "-Wl,-z,now",
d25 7
a31 6
-    if (!using_sanitizer && !use_cfi_diag) {
+    if (!using_sanitizer && !use_cfi_diag && !is_openbsd) {
       ldflags += [ "-Wl,-z,defs" ]
     }
   }
@@@@ -1014,14 +1014,14 @@@@ config("default_warnings") {
@


1.2
log
@update to 53.0.2785.89
@
text
@d2 2
a3 2
--- build/config/compiler/BUILD.gn.orig.port	Thu Sep  1 11:16:53 2016
+++ build/config/compiler/BUILD.gn	Thu Sep  1 11:46:17 2016
d13 2
a14 1
@@@@ -210,7 +210,7 @@@@ config("compiler") {
d16 1
a16 2
     if ( fatal_linker_warnings &&
         !(is_chromeos && current_cpu == "arm") &&
d22 1
a22 1
@@@@ -292,7 +292,7 @@@@ config("compiler") {
d31 1
a31 1
@@@@ -1008,14 +1008,14 @@@@ config("default_warnings") {
@


1.1
log
@Move chromium to the new build system (gn - generate ninja)

This commit moves the chromium port to use gn to generate ninja files
which will hopefully resolve the random build errors. Gyp is dead so
this move has to be done anyway.

Also change the way how we handle openbsd. Let's assume we are running
on linux and only handle !linux cases where needed. This also ensures
that a change on linux will for sure end up in our builds as well.
@
text
@d2 3
a4 3
--- build/config/compiler/BUILD.gn.orig.port	Sun Aug 14 16:36:26 2016
+++ build/config/compiler/BUILD.gn	Sun Aug 14 23:12:50 2016
@@@@ -35,7 +35,7 @@@@ declare_args() {
d13 1
a13 2
@@@@ -206,7 +206,7 @@@@ config("compiler") {
 
d15 2
a16 1
     if (!(is_chromeos && current_cpu == "arm") &&
d22 1
a22 1
@@@@ -288,7 +288,7 @@@@ config("compiler") {
d31 4
a34 4
@@@@ -977,7 +977,7 @@@@ config("default_warnings") {
     # NaCl's Clang compiler and Chrome's hermetic Clang compiler will almost
     # always have different versions. Certain flags may not be recognized by
     # one version or the other.
d40 8
@

