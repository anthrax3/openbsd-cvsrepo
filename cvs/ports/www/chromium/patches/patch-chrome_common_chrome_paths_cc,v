head	1.37;
access;
symbols
	OPENBSD_6_1:1.37.0.2
	OPENBSD_6_1_BASE:1.37
	OPENBSD_6_0:1.33.0.2
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.31.0.2
	OPENBSD_5_9_BASE:1.31
	OPENBSD_5_8:1.27.0.4
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.24.0.2
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.22.0.2
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.19.0.2
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.12.0.2
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.8.0.2
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.37
date	2017.03.14.12.18.53;	author robert;	state Exp;
branches;
next	1.36;
commitid	FgEdsLreTqAdn1i5;

1.36
date	2017.01.26.17.08.25;	author robert;	state Exp;
branches;
next	1.35;
commitid	SWz5LewWpip0ZZLw;

1.35
date	2016.09.01.16.28.11;	author robert;	state Exp;
branches;
next	1.34;
commitid	0duujWXlyOCBrehm;

1.34
date	2016.07.31.13.11.44;	author robert;	state Exp;
branches;
next	1.33;
commitid	dRegVegviFQGKQZc;

1.33
date	2016.05.27.06.28.20;	author robert;	state Exp;
branches;
next	1.32;
commitid	cpiCcJ3vjht5tEkH;

1.32
date	2016.03.06.10.51.14;	author robert;	state Exp;
branches;
next	1.31;
commitid	Upms3IeOsaLsGxbP;

1.31
date	2015.12.12.20.20.01;	author robert;	state Exp;
branches;
next	1.30;
commitid	pICiE7sceSszB2d2;

1.30
date	2015.12.05.16.13.32;	author robert;	state Exp;
branches;
next	1.29;
commitid	D0GFSwUDbKAnIs1m;

1.29
date	2015.10.14.16.42.07;	author robert;	state Exp;
branches;
next	1.28;
commitid	iw6THZfJQngZlw1r;

1.28
date	2015.09.05.16.06.50;	author robert;	state Exp;
branches;
next	1.27;
commitid	rTmBXJaDIIWe1XKA;

1.27
date	2015.07.23.13.44.04;	author robert;	state Exp;
branches;
next	1.26;
commitid	vxhJdppNzKtP7lYz;

1.26
date	2015.05.24.15.51.53;	author robert;	state Exp;
branches;
next	1.25;
commitid	rFaYcWD2ntiXn5nr;

1.25
date	2015.04.27.16.38.25;	author robert;	state Exp;
branches;
next	1.24;
commitid	jwX00slFR1NY9xHC;

1.24
date	2014.10.13.06.49.19;	author robert;	state Exp;
branches;
next	1.23;
commitid	GAMY6AdJxC6cdD6g;

1.23
date	2014.09.11.19.04.52;	author robert;	state Exp;
branches;
next	1.22;
commitid	WrglT9ERNBhPArdd;

1.22
date	2014.07.20.17.22.34;	author robert;	state Exp;
branches;
next	1.21;
commitid	yFSQqywU9tg3Fhqe;

1.21
date	2014.04.17.16.27.53;	author robert;	state Exp;
branches;
next	1.20;

1.20
date	2014.03.11.14.52.01;	author robert;	state Exp;
branches;
next	1.19;

1.19
date	2014.01.18.11.42.04;	author robert;	state Exp;
branches;
next	1.18;

1.18
date	2013.10.29.06.51.34;	author robert;	state Exp;
branches;
next	1.17;

1.17
date	2013.09.29.19.04.02;	author robert;	state Exp;
branches;
next	1.16;

1.16
date	2013.07.15.14.59.30;	author robert;	state Exp;
branches;
next	1.15;

1.15
date	2013.05.30.18.42.18;	author robert;	state Exp;
branches;
next	1.14;

1.14
date	2013.04.03.08.19.10;	author robert;	state Exp;
branches;
next	1.13;

1.13
date	2013.03.15.08.30.33;	author robert;	state Exp;
branches;
next	1.12;

1.12
date	2013.01.18.21.38.02;	author robert;	state Exp;
branches;
next	1.11;

1.11
date	2012.11.07.06.59.45;	author robert;	state Exp;
branches;
next	1.10;

1.10
date	2012.10.12.16.46.10;	author robert;	state Exp;
branches;
next	1.9;

1.9
date	2012.08.26.18.47.01;	author robert;	state Exp;
branches;
next	1.8;

1.8
date	2012.07.10.09.22.34;	author robert;	state Exp;
branches;
next	1.7;

1.7
date	2012.02.17.10.19.50;	author robert;	state dead;
branches;
next	1.6;

1.6
date	2011.10.27.07.59.08;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2011.08.16.08.17.44;	author robert;	state dead;
branches;
next	1.4;

1.4
date	2011.06.08.20.36.56;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.04.29.13.18.01;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.02.08.09.43.02;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.45;	author espie;	state Exp;
branches;
next	;


desc
@@


1.37
log
@update to 57.0.2987.98
@
text
@$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.36 2017/01/26 17:08:25 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Thu Mar  9 21:04:29 2017
+++ chrome/common/chrome_paths.cc	Fri Mar 10 07:46:20 2017
@@@@ -51,14 +51,14 @@@@ const base::FilePath::CharType kPepperFlashSystemBaseD
 const base::FilePath::CharType kInternalNaClPluginFileName[] =
     FILE_PATH_LITERAL("internal-nacl-plugin");
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 // The path to the external extension <id>.json files.
 // /usr/share seems like a good choice, see: http://www.pathname.com/fhs/
 const base::FilePath::CharType kFilepathSinglePrefExtensions[] =
 #if defined(GOOGLE_CHROME_BUILD)
     FILE_PATH_LITERAL("/usr/share/google-chrome/extensions");
 #else
-    FILE_PATH_LITERAL("/usr/share/chromium/extensions");
+    FILE_PATH_LITERAL("/usr/local/share/chromium/extensions");
 #endif  // defined(GOOGLE_CHROME_BUILD)
 
 // The path to the hint file that tells the pepper plugin loader
@@@@ -197,7 +197,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
         return false;
       break;
     case chrome::DIR_DEFAULT_DOWNLOADS_SAFE:
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_BSD)
       if (!GetUserDownloadsDirectorySafe(&cur))
         return false;
       break;
@@@@ -426,7 +426,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
       break;
 #endif
 #if BUILDFLAG(ENABLE_SUPERVISED_USERS)
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
     case chrome::DIR_SUPERVISED_USERS_DEFAULT_APPS:
       if (!PathService::Get(chrome::DIR_STANDALONE_EXTERNAL_EXTENSIONS, &cur))
         return false;
@@@@ -474,7 +474,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
       if (!base::PathExists(cur))  // We don't want to create this
         return false;
       break;
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
     case chrome::DIR_POLICY_FILES: {
 #if defined(GOOGLE_CHROME_BUILD)
       cur = base::FilePath(FILE_PATH_LITERAL("/etc/opt/chrome/policies"));
@@@@ -485,7 +485,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
     }
 #endif
 #if defined(OS_CHROMEOS) || (defined(OS_LINUX) && defined(CHROMIUM_BUILD)) || \
-    defined(OS_MACOSX)
+    defined(OS_MACOSX) || defined(OS_BSD)
     case chrome::DIR_USER_EXTERNAL_EXTENSIONS: {
       if (!PathService::Get(chrome::DIR_USER_DATA, &cur))
         return false;
@@@@ -493,7 +493,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
       break;
     }
 #endif
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
     case chrome::DIR_STANDALONE_EXTERNAL_EXTENSIONS: {
       cur = base::FilePath(kFilepathSinglePrefExtensions);
       break;
@@@@ -528,7 +528,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
 #endif
       break;
 
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_LINUX) || defined(OS_MACOSX) || defined(OS_BSD)
     case chrome::DIR_NATIVE_MESSAGING:
 #if defined(OS_MACOSX)
 #if defined(GOOGLE_CHROME_BUILD)
@


1.36
log
@update to 56.0.2924.76
@
text
@d1 3
a3 3
$OpenBSD$
--- chrome/common/chrome_paths.cc.orig.port	Tue Jan  3 20:38:03 2017
+++ chrome/common/chrome_paths.cc	Wed Jan  4 09:14:23 2017
d30 1
a30 1
@@@@ -432,7 +432,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d39 1
a39 1
@@@@ -480,7 +480,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d48 1
a48 1
@@@@ -491,7 +491,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d57 1
a57 1
@@@@ -499,7 +499,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d66 1
a66 1
@@@@ -534,7 +534,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.35
log
@update to 53.0.2785.89
@
text
@d1 21
a21 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.34 2016/07/31 13:11:44 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Thu Sep  1 00:03:28 2016
+++ chrome/common/chrome_paths.cc	Thu Sep  1 11:12:21 2016
@@@@ -190,7 +190,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d30 1
a30 1
@@@@ -424,7 +424,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d33 1
a33 1
 #if defined(ENABLE_SUPERVISED_USERS)
d39 1
a39 1
@@@@ -472,7 +472,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d48 27
@


1.34
log
@update to 52.0.2743.82
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.33 2016/05/27 06:28:20 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Jul 20 21:03:21 2016
+++ chrome/common/chrome_paths.cc	Thu Jul 21 10:25:29 2016
@@@@ -189,7 +189,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -421,7 +421,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d22 1
a22 1
@@@@ -469,7 +469,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.33
log
@update to 51.0.2704.63
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.32 2016/03/06 10:51:14 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed May 25 21:00:58 2016
+++ chrome/common/chrome_paths.cc	Thu May 26 08:09:42 2016
@@@@ -170,7 +170,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -400,7 +400,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d22 1
a22 1
@@@@ -448,7 +448,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.32
log
@update to 49.0.2623.75
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.31 2015/12/12 20:20:01 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Feb 24 00:01:59 2016
+++ chrome/common/chrome_paths.cc	Thu Mar  3 09:43:26 2016
@@@@ -178,7 +178,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -422,7 +422,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d22 1
a22 1
@@@@ -470,7 +470,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.31
log
@remove unused patches up and enable some more functionalty like HiDPI support
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.30 2015/12/05 16:13:32 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Tue Dec  8 21:02:52 2015
+++ chrome/common/chrome_paths.cc	Sat Dec 12 11:26:09 2015
@@@@ -177,7 +177,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -419,7 +419,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d22 1
a22 1
@@@@ -467,7 +467,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.30
log
@update to 47.0.2526.73
@
text
@d1 3
a3 3
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.29 2015/10/14 16:42:07 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Tue Nov 24 21:00:54 2015
+++ chrome/common/chrome_paths.cc	Wed Dec  2 08:18:32 2015
d13 9
@


1.29
log
@update to 46.0.2490.71
@
text
@d1 3
a3 3
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.28 2015/09/05 16:06:50 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Tue Oct 13 21:04:32 2015
+++ chrome/common/chrome_paths.cc	Wed Oct 14 07:41:13 2015
d13 1
a13 1
@@@@ -460,7 +460,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.28
log
@update to 45.0.2454.85
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.27 2015/07/23 13:44:04 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Tue Sep  1 22:10:42 2015
+++ chrome/common/chrome_paths.cc	Wed Sep  2 07:31:55 2015
@@@@ -172,7 +172,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -455,7 +455,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.27
log
@update to 44.0.2403.89
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.26 2015/05/24 15:51:53 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Jul 15 22:29:59 2015
+++ chrome/common/chrome_paths.cc	Wed Jul 22 08:37:29 2015
@@@@ -179,7 +179,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -452,7 +452,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.26
log
@update to 43.0.2357.65
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.25 2015/04/27 16:38:25 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Thu May 14 00:35:46 2015
+++ chrome/common/chrome_paths.cc	Sat May 23 01:07:45 2015
@@@@ -198,7 +198,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -488,7 +488,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.25
log
@update to 42.0.2311.90
@
text
@d1 13
a13 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.24 2014/10/13 06:49:19 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Apr 15 00:31:22 2015
+++ chrome/common/chrome_paths.cc	Wed Apr 15 08:32:50 2015
@@@@ -460,7 +460,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.24
log
@update to 38.0.2125.101
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.23 2014/09/11 19:04:52 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Thu Oct  2 19:39:46 2014
+++ chrome/common/chrome_paths.cc	Fri Oct 10 16:10:30 2014
@@@@ -461,7 +461,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.23
log
@update to 37.0.2062.120
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.22 2014/07/20 17:22:34 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Sep 10 01:47:12 2014
+++ chrome/common/chrome_paths.cc	Wed Sep 10 22:05:41 2014
@@@@ -469,7 +469,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.22
log
@update to 36.0.1985.125;

from this release Chromium uses Aura instead of Gtk+ so the UI will look
a bit different, and that is completely normal.
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.21 2014/04/17 16:27:53 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Tue Jul 15 13:01:37 2014
+++ chrome/common/chrome_paths.cc	Thu Jul 17 12:25:31 2014
@@@@ -471,7 +471,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.21
log
@update to 34.0.1847.116 and disable Werror for the future clang update
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.20 2014/03/11 14:52:01 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Apr  2 21:04:09 2014
+++ chrome/common/chrome_paths.cc	Sat Apr 12 09:40:41 2014
@@@@ -440,7 +440,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.20
log
@update to 33.0.1750.146
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.19 2014/01/18 11:42:04 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Thu Feb 20 21:27:53 2014
+++ chrome/common/chrome_paths.cc	Fri Feb 21 19:39:55 2014
@@@@ -436,7 +436,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.19
log
@update to 32.0.1700.76
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.18 2013/10/29 06:51:34 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Mon Jan 13 22:00:43 2014
+++ chrome/common/chrome_paths.cc	Thu Jan 16 12:26:42 2014
@@@@ -444,7 +444,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.18
log
@update to 30.0.1599.101
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.17 2013/09/29 19:04:02 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Fri Oct 11 19:29:57 2013
+++ chrome/common/chrome_paths.cc	Fri Oct 18 20:47:20 2013
@@@@ -430,7 +430,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.17
log
@update to 29.0.1547.76
@
text
@d1 5
a5 5
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.16 2013/07/15 14:59:30 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Sep 18 10:14:02 2013
+++ chrome/common/chrome_paths.cc	Sun Sep 22 16:09:42 2013
@@@@ -412,7 +412,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
       if (!file_util::PathExists(cur))  // We don't want to create this
@


1.16
log
@update to 28.0.1500.45
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.15 2013/05/30 18:42:18 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Jun 12 09:29:41 2013
+++ chrome/common/chrome_paths.cc	Sun Jul  7 15:54:58 2013
@@@@ -448,7 +448,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.15
log
@update to 27.0.1453.93
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.14 2013/04/03 08:19:10 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Fri May 17 22:45:33 2013
+++ chrome/common/chrome_paths.cc	Thu May 30 00:10:48 2013
@@@@ -473,7 +473,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.14
log
@- update to 26.0.1410.43
- switch chromium to use clang/llvm instead of gcc
- switch back to the internal libvpx because it's an unreleased version
  at this point
- re-enable SSE2 support
@
text
@d1 4
a4 4
$OpenBSD$
--- chrome/common/chrome_paths.cc.orig.port	Fri Mar 22 02:14:32 2013
+++ chrome/common/chrome_paths.cc	Tue Apr  2 21:05:17 2013
@@@@ -441,7 +441,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.13
log
@update to 25.0.1364.160
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.12 2013/01/18 21:38:02 robert Exp $
--- chrome/common/chrome_paths.cc.orig	Thu Feb 21 04:37:05 2013
+++ chrome/common/chrome_paths.cc	Fri Feb 22 19:40:32 2013
@@@@ -425,7 +425,7 @@@@ bool PathProvider(int key, FilePath* result) {
d12 1
a12 1
       cur = FilePath(FILE_PATH_LITERAL("/etc/opt/chrome/policies"));
@


1.12
log
@update to 24.0.1312.52
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.11 2012/11/07 06:59:45 robert Exp $
--- chrome/common/chrome_paths.cc.orig	Tue Jan  8 03:46:05 2013
+++ chrome/common/chrome_paths.cc	Mon Jan 14 19:47:35 2013
@@@@ -408,7 +408,7 @@@@ bool PathProvider(int key, FilePath* result) {
@


1.11
log
@update to 23.0.1271.64
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.10 2012/10/12 16:46:10 robert Exp $
--- chrome/common/chrome_paths.cc.orig	Wed Oct 31 20:02:48 2012
+++ chrome/common/chrome_paths.cc	Tue Nov  6 22:45:22 2012
@@@@ -384,7 +384,7 @@@@ bool PathProvider(int key, FilePath* result) {
@


1.10
log
@update to 22.0.1229.94
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.9 2012/08/26 18:47:01 robert Exp $
--- chrome/common/chrome_paths.cc.orig	Tue Sep 25 15:02:43 2012
+++ chrome/common/chrome_paths.cc	Wed Oct 10 17:19:28 2012
@@@@ -367,7 +367,7 @@@@ bool PathProvider(int key, FilePath* result) {
@


1.9
log
@update to 21.0.1180.81
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.8 2012/07/10 09:22:34 robert Exp $
--- chrome/common/chrome_paths.cc.orig	Tue Aug 14 09:02:25 2012
+++ chrome/common/chrome_paths.cc	Wed Aug 15 23:14:34 2012
@@@@ -358,7 +358,7 @@@@ bool PathProvider(int key, FilePath* result) {
@


1.8
log
@update to 20.0.1132.47
@
text
@d1 4
a4 4
$OpenBSD$
--- chrome/common/chrome_paths.cc.orig	Thu Jun 28 15:02:23 2012
+++ chrome/common/chrome_paths.cc	Sat Jul  7 09:50:22 2012
@@@@ -341,7 +341,7 @@@@ bool PathProvider(int key, FilePath* result) {
@


1.7
log
@update to 17.0.963.56
@
text
@d1 5
a5 5
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.6 2011/10/27 07:59:08 robert Exp $
--- chrome/common/chrome_paths.cc.orig	Fri Oct 21 10:30:30 2011
+++ chrome/common/chrome_paths.cc	Wed Oct 26 14:10:40 2011
@@@@ -298,7 +298,7 @@@@ bool PathProvider(int key, FilePath* result) {
       if (!file_util::PathExists(cur))  // we don't want to create this
d8 2
a9 2
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
@


1.6
log
@update to 15.0.874.102.

switch from using the hacked macosx transport dib to the linux one
which uses sysv shms.
make sure you also have a current kernel before using this version
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@update to the next stable release (13.0.782.112)
@
text
@d1 6
a6 5
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.4 2011/06/08 20:36:56 robert Exp $
--- chrome/common/chrome_paths.cc.orig	Mon Jun  6 11:12:12 2011
+++ chrome/common/chrome_paths.cc	Wed Jun  8 09:58:36 2011
@@@@ -172,7 +172,7 @@@@ bool PathProvider(int key, FilePath* result) {
       cur = cur.Append(FILE_PATH_LITERAL("inspector"));
d8 5
a12 6
     case chrome::DIR_APP_DICTIONARIES:
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_POSIX)
       // We can't write into the EXE dir on Linux, so keep dictionaries
       // alongside the safe browsing database in the user data dir.
       // And we don't want to write into the bundle on the Mac, so push
@


1.4
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@d1 1
a1 1
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.3 2011/04/29 13:18:01 robert Exp $
@


1.3
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.2 2011/02/08 09:43:02 espie Exp $
--- chrome/common/chrome_paths.cc.orig	Tue Apr 26 10:01:59 2011
+++ chrome/common/chrome_paths.cc	Thu Apr 28 11:17:49 2011
@@@@ -185,7 +185,7 @@@@ bool PathProvider(int key, FilePath* result) {
@


1.2
log
@late update to chromium 9, robert@@ did the work, but he doesn't have the
time right now.
Tree is still locked!
Reasons for the update:
- good work that can be used now
- only builds on i386/amd64, and they're fast
- multiple security problems in old chrome
- old chrome half working, can't break it more than it was.

This one requires resources (see MESSAGE), but it's ways more stable.

Again, discussed with sthen@@, jasper@@, naddy@@, miod@@
@
text
@d1 4
a4 4
$OpenBSD$
--- chrome/common/chrome_paths.cc.orig	Fri Jan 21 10:20:41 2011
+++ chrome/common/chrome_paths.cc	Sun Jan 23 23:27:33 2011
@@@@ -164,7 +164,7 @@@@ bool PathProvider(int key, FilePath* result) {
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d2 3
a4 3
--- chrome/common/chrome_paths.cc.orig	Tue Mar 30 07:30:01 2010
+++ chrome/common/chrome_paths.cc	Sun Nov 28 00:11:31 2010
@@@@ -132,7 +132,7 @@@@ bool PathProvider(int key, FilePath* result) {
@

