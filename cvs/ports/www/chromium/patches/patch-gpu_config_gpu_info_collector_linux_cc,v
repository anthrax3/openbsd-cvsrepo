head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.2
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2016.10.26.06.22.08;	author robert;	state Exp;
branches;
next	1.6;
commitid	Dt81be1Osjz00Uwx;

1.6
date	2016.07.31.13.11.44;	author robert;	state Exp;
branches;
next	1.5;
commitid	dRegVegviFQGKQZc;

1.5
date	2016.03.06.10.51.14;	author robert;	state Exp;
branches;
next	1.4;
commitid	Upms3IeOsaLsGxbP;

1.4
date	2015.10.14.16.42.07;	author robert;	state Exp;
branches;
next	1.3;
commitid	iw6THZfJQngZlw1r;

1.3
date	2015.03.18.19.26.29;	author robert;	state Exp;
branches;
next	1.2;
commitid	aPwx9j7rbIsa650M;

1.2
date	2015.02.22.11.33.57;	author robert;	state Exp;
branches;
next	1.1;
commitid	5vSaT6ucdnz9y8nA;

1.1
date	2015.02.15.19.51.28;	author robert;	state Exp;
branches;
next	;
commitid	aXaFfxvdOjpKJO7H;


desc
@@


1.7
log
@update to 54.0.2840.71
@
text
@$OpenBSD: patch-gpu_config_gpu_info_collector_linux_cc,v 1.6 2016/07/31 13:11:44 robert Exp $
--- gpu/config/gpu_info_collector_linux.cc.orig.port	Wed Oct 12 21:03:00 2016
+++ gpu/config/gpu_info_collector_linux.cc	Wed Oct 19 12:56:05 2016
@@@@ -100,6 +100,10 @@@@ const uint32_t kVendorIDAMD = 0x1002;
 CollectInfoResult CollectPCIVideoCardInfo(GPUInfo* gpu_info) {
   DCHECK(gpu_info);
 
+#if defined(OS_BSD)
+  return (CollectMesaCardInfo(gpu_info));
+#endif
+
 #if !defined(USE_LIBPCI)
   return kCollectInfoNonFatalFailure;
 #else
@


1.6
log
@update to 52.0.2743.82
@
text
@d1 4
a4 4
$OpenBSD: patch-gpu_config_gpu_info_collector_linux_cc,v 1.5 2016/03/06 10:51:14 robert Exp $
--- gpu/config/gpu_info_collector_linux.cc.orig.port	Wed Jul 20 21:03:25 2016
+++ gpu/config/gpu_info_collector_linux.cc	Thu Jul 21 10:25:30 2016
@@@@ -80,6 +80,10 @@@@ const uint32_t kVendorIDAMD = 0x1002;
@


1.5
log
@update to 49.0.2623.75
@
text
@d1 4
a4 4
$OpenBSD: patch-gpu_config_gpu_info_collector_linux_cc,v 1.4 2015/10/14 16:42:07 robert Exp $
--- gpu/config/gpu_info_collector_linux.cc.orig.port	Wed Feb 24 00:02:01 2016
+++ gpu/config/gpu_info_collector_linux.cc	Thu Mar  3 09:43:26 2016
@@@@ -81,6 +81,10 @@@@ const uint32_t kVendorIDAMD = 0x1002;
@


1.4
log
@update to 46.0.2490.71
@
text
@d1 4
a4 4
$OpenBSD: patch-gpu_config_gpu_info_collector_linux_cc,v 1.3 2015/03/18 19:26:29 robert Exp $
--- gpu/config/gpu_info_collector_linux.cc.orig.port	Wed Oct  7 04:42:12 2015
+++ gpu/config/gpu_info_collector_linux.cc	Wed Oct 14 07:41:13 2015
@@@@ -78,6 +78,10 @@@@ const uint32 kVendorIDAMD = 0x1002;
@


1.3
log
@update to 41.0.2272.89
@
text
@d1 4
a4 4
$OpenBSD: patch-gpu_config_gpu_info_collector_linux_cc,v 1.2 2015/02/22 11:33:57 robert Exp $
--- gpu/config/gpu_info_collector_linux.cc.orig.port	Tue Mar 10 23:41:41 2015
+++ gpu/config/gpu_info_collector_linux.cc	Wed Mar 11 07:22:50 2015
@@@@ -77,6 +77,10 @@@@ const uint32 kVendorIDAMD = 0x1002;
@


1.2
log
@Rework how the GPU vendor and device id is detected by using direct calls
to Mesa. The current solution is based on a diff from jsg@@.
Also fix font redering issues with WebKit, with 3rd party TTFs with a
diff from Yoshihisa Matsushita.
@
text
@d1 4
a4 4
$OpenBSD: patch-gpu_config_gpu_info_collector_linux_cc,v 1.1 2015/02/15 19:51:28 robert Exp $
--- gpu/config/gpu_info_collector_linux.cc.orig.port	Sun Feb 15 15:25:13 2015
+++ gpu/config/gpu_info_collector_linux.cc	Wed Feb 18 20:23:51 2015
@@@@ -75,6 +75,10 @@@@ const uint32 kVendorIDAMD = 0x1002;
@


1.1
log
@use mesa to get the gpu vendor and device id and pass it to chromium because
we can't use libpci due to permission restrictions and use some more UI code
on BSD as well
@
text
@d1 1
a1 1
$OpenBSD$
d3 4
a6 2
+++ gpu/config/gpu_info_collector_linux.cc	Sun Feb 15 18:39:58 2015
@@@@ -31,6 +31,7 @@@@ namespace gpu {
d8 2
a9 10
 namespace {
 
+#if !defined(OS_BSD)
 // This checks if a system supports PCI bus.
 // We check the existence of /sys/bus/pci or /sys/bug/pci_express.
 bool IsPciSupported() {
@@@@ -39,6 +40,7 @@@@ bool IsPciSupported() {
   return (base::PathExists(pci_path) ||
           base::PathExists(pcie_path));
 }
d11 2
a12 4
 
 // Scan /etc/ati/amdpcsdb.default for "ReleaseVersion".
 // Return empty string on failing.
@@@@ -79,6 +81,7 @@@@ CollectInfoResult CollectPCIVideoCardInfo(GPUInfo* gpu
a14 23
 
+#if !defined(OS_BSD)
   if (IsPciSupported() == false) {
     VLOG(1) << "PCI bus scanning is not supported";
     return kCollectInfoNonFatalFailure;
@@@@ -148,6 +151,17 @@@@ CollectInfoResult CollectPCIVideoCardInfo(GPUInfo* gpu
   }
 
   (libpci_loader.pci_cleanup)(access);
+#else
+  unsigned int vendor_id = 0x0000, device_id = 0x0000;
+  char *vid, *did;
+  if ((vid = getenv("OPENBSD_GPU_VENDOR")) != NULL)
+    vendor_id = strtol(vid, NULL, 16);
+  if ((did = getenv("OPENBSD_GPU_DEVICE")) != NULL)
+    device_id = strtol(did, NULL, 16);
+  bool primary_gpu_identified = true;
+  gpu_info->gpu.vendor_id = vendor_id;
+  gpu_info->gpu.device_id = device_id;
+#endif
   if (!primary_gpu_identified)
     return kCollectInfoNonFatalFailure;
   return kCollectInfoSuccess;
@

