head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2017.04.28.14.21.00;	author robert;	state Exp;
branches;
next	;
commitid	XFDnyB7tGNawHUbl;


desc
@@


1.1
log
@update to 58.0.3029.81
@
text
@$OpenBSD$
--- services/catalog/public/cpp/manifest_parsing_util.cc.orig.port	Thu Apr 27 21:22:30 2017
+++ services/catalog/public/cpp/manifest_parsing_util.cc	Thu Apr 27 21:23:27 2017
@@@@ -15,7 +15,8 @@@@ bool IsValidPlatformName(const std::string& name) {
   return name == Store::kRequiredFilesKey_PlatformValue_Windows ||
          name == Store::kRequiredFilesKey_PlatformValue_Linux ||
          name == Store::kRequiredFilesKey_PlatformValue_MacOSX ||
-         name == Store::kRequiredFilesKey_PlatformValue_Android;
+         name == Store::kRequiredFilesKey_PlatformValue_Android ||
+         name == Store::kRequiredFilesKey_PlatformValue_OpenBSD;
 }
 
 bool IsCurrentPlatform(const std::string& name) {
@@@@ -27,6 +28,8 @@@@ bool IsCurrentPlatform(const std::string& name) {
   return name == Store::kRequiredFilesKey_PlatformValue_MacOSX;
 #elif defined(OS_ANDROID)
   return name == Store::kRequiredFilesKey_PlatformValue_Android;
+#elif defined(OS_OPENBSD)
+  return name == Store::kRequiredFilesKey_PlatformValue_OpenBSD;
 #else
 #error This architecture is not supported.
 #endif
@
