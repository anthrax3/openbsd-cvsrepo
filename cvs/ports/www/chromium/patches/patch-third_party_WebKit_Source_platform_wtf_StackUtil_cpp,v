head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2017.09.09.19.16.43;	author robert;	state Exp;
branches;
next	1.1;
commitid	o4y7MpMU3y8aR1pv;

1.1
date	2017.06.25.21.53.56;	author robert;	state Exp;
branches;
next	;
commitid	l6xAjqoVop0UE8Em;


desc
@@


1.2
log
@update to 61.0.3163.79
@
text
@$OpenBSD$

Index: third_party/WebKit/Source/platform/wtf/StackUtil.cpp
--- third_party/WebKit/Source/platform/wtf/StackUtil.cpp.orig
+++ third_party/WebKit/Source/platform/wtf/StackUtil.cpp
@@@@ -16,6 +16,11 @@@@
 extern "C" void* __libc_stack_end;  // NOLINT
 #endif
 
+#if defined(OS_OPENBSD)
+#include <sys/signal.h>
+#include <pthread_np.h>
+#endif
+
 namespace WTF {
 
 size_t GetUnderestimatedStackSize() {
@@@@ -61,6 +66,8 @@@@ size_t GetUnderestimatedStackSize() {
   //    low as 512k.
   //
   return 512 * 1024;
+#elif defined(OS_OPENBSD)
+  return 512 * 1024;
 #elif defined(OS_MACOSX)
   // pthread_get_stacksize_np() returns too low a value for the main thread on
   // OSX 10.9,
@@@@ -97,12 +104,18 @@@@ size_t GetUnderestimatedStackSize() {
 
 void* GetStackStart() {
 #if defined(__GLIBC__) || defined(OS_ANDROID) || defined(OS_FREEBSD) || \
-    defined(OS_FUCHSIA)
+    defined(OS_FUCHSIA) || defined(OS_OPENBSD)
   pthread_attr_t attr;
   int error;
 #if defined(OS_FREEBSD)
   pthread_attr_init(&attr);
   error = pthread_attr_get_np(pthread_self(), &attr);
+#elif defined(OS_OPENBSD)
+  stack_t ss;
+  void *base;
+  error = pthread_stackseg_np(pthread_self(), &ss);
+  base = (void*)((size_t) ss.ss_sp - ss.ss_size);
+  return reinterpret_cast<uint8_t*>(base) + ss.ss_size;
 #else
   error = pthread_getattr_np(pthread_self(), &attr);
 #endif
@


1.1
log
@update to 59.0.3071.109
@
text
@d10 1
a10 1
+#if OS(OPENBSD)
d18 1
a18 1
@@@@ -60,6 +65,8 @@@@ size_t GetUnderestimatedStackSize() {
d22 3
a24 3
+#elif OS(OPENBSD)
+  return 512*1024;
 #elif OS(MACOSX)
d27 1
a27 2
@@@@ -95,12 +102,18 @@@@ size_t GetUnderestimatedStackSize() {
 }
d30 3
a32 2
-#if defined(__GLIBC__) || OS(ANDROID) || OS(FREEBSD)
+#if defined(__GLIBC__) || OS(ANDROID) || OS(FREEBSD) || OS(OPENBSD)
d35 1
a35 1
 #if OS(FREEBSD)
d38 1
a38 1
+#elif OS(OPENBSD)
@

