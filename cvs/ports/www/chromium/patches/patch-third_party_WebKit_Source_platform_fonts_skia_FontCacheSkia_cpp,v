head	1.16;
access;
symbols
	OPENBSD_6_1:1.13.0.2
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@# @;


1.16
date	2017.09.09.19.16.43;	author robert;	state Exp;
branches;
next	1.15;
commitid	o4y7MpMU3y8aR1pv;

1.15
date	2017.06.25.21.53.56;	author robert;	state Exp;
branches;
next	1.14;
commitid	l6xAjqoVop0UE8Em;

1.14
date	2017.04.28.14.21.00;	author robert;	state Exp;
branches;
next	1.13;
commitid	XFDnyB7tGNawHUbl;

1.13
date	2017.03.14.12.18.54;	author robert;	state Exp;
branches;
next	1.12;
commitid	FgEdsLreTqAdn1i5;

1.12
date	2017.02.23.17.30.49;	author robert;	state Exp;
branches;
next	1.11;
commitid	Xchfuy8J4FssXfjr;

1.11
date	2017.01.26.17.08.26;	author robert;	state Exp;
branches;
next	1.10;
commitid	SWz5LewWpip0ZZLw;

1.10
date	2016.12.10.15.35.25;	author robert;	state Exp;
branches;
next	1.9;
commitid	D24Pj03ujnweitOe;

1.9
date	2016.10.26.06.22.08;	author robert;	state Exp;
branches;
next	1.8;
commitid	Dt81be1Osjz00Uwx;

1.8
date	2016.09.01.16.28.11;	author robert;	state Exp;
branches;
next	1.7;
commitid	0duujWXlyOCBrehm;

1.7
date	2016.07.31.13.11.44;	author robert;	state Exp;
branches;
next	1.6;
commitid	dRegVegviFQGKQZc;

1.6
date	2016.05.27.06.28.21;	author robert;	state Exp;
branches;
next	1.5;
commitid	cpiCcJ3vjht5tEkH;

1.5
date	2016.04.16.19.08.46;	author robert;	state Exp;
branches;
next	1.4;
commitid	SE10dvx9aTcZrjRO;

1.4
date	2016.01.23.18.49.31;	author robert;	state dead;
branches;
next	1.3;
commitid	KVrkvcBYFue8N3VB;

1.3
date	2015.04.27.16.38.25;	author robert;	state Exp;
branches;
next	1.2;
commitid	jwX00slFR1NY9xHC;

1.2
date	2015.02.22.11.33.57;	author robert;	state Exp;
branches;
next	1.1;
commitid	5vSaT6ucdnz9y8nA;

1.1
date	2015.01.22.11.16.41;	author robert;	state Exp;
branches;
next	;
commitid	yDb21GVFY5iIUXUw;


desc
@@


1.16
log
@update to 61.0.3163.79
@
text
@$OpenBSD$

Index: third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp
@@@@ -73,7 +73,7 @@@@ AtomicString ToAtomicString(const SkString& str) {
   return AtomicString::FromUTF8(str.c_str(), str.size());
 }
 
-#if defined(OS_ANDROID) || defined(OS_LINUX)
+#if defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_BSD)
 // Android special locale for retrieving the color emoji font
 // based on the proposed changes in UTR #51 for introducing
 // an Emoji script code:
@@@@ -258,7 +258,7 @@@@ sk_sp<SkTypeface> FontCache::CreateTypeface(
   }
 #endif
 
-#if defined(OS_LINUX) || defined(OS_WIN)
+#if defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_BSD)
   // On linux if the fontManager has been overridden then we should be calling
   // the embedder provided font Manager rather than calling
   // SkTypeface::CreateFromName which may redirect the call to the default font
@


1.15
log
@update to 59.0.3071.109
@
text
@d1 2
a2 1
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.14 2017/04/28 14:21:00 robert Exp $
d6 1
a6 1
@@@@ -68,7 +68,7 @@@@ AtomicString ToAtomicString(const SkString& str) {
d10 2
a11 2
-#if OS(ANDROID) || OS(LINUX)
+#if OS(ANDROID) || OS(LINUX) || OS(OPENBSD)
d15 1
a15 1
@@@@ -249,7 +249,7 @@@@ sk_sp<SkTypeface> FontCache::CreateTypeface(
d19 2
a20 2
-#if OS(LINUX) || OS(WIN)
+#if OS(LINUX) || OS(WIN) || OS(OPENBSD)
@


1.14
log
@update to 58.0.3029.81
@
text
@d1 6
a6 5
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.13 2017/03/14 12:18:54 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Wed Apr 19 21:06:50 2017
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Thu Apr 27 19:56:03 2017
@@@@ -68,7 +68,7 @@@@ AtomicString toAtomicString(const SkString& str) {
   return AtomicString::fromUTF8(str.c_str(), str.size());
d14 1
a14 1
@@@@ -240,7 +240,7 @@@@ sk_sp<SkTypeface> FontCache::createTypeface(
@


1.13
log
@update to 57.0.2987.98
@
text
@d1 3
a3 3
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.12 2017/02/23 17:30:49 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Thu Mar  9 21:04:45 2017
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Fri Mar 10 07:46:25 2017
d13 1
a13 1
@@@@ -235,7 +235,7 @@@@ sk_sp<SkTypeface> FontCache::createTypeface(
@


1.12
log
@use more linux specific code for font handling and gpu
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.11 2017/01/26 17:08:26 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Thu Feb  2 03:03:10 2017
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Thu Feb  2 15:40:34 2017
@@@@ -67,7 +67,7 @@@@ AtomicString toAtomicString(const SkString& str) {
d13 1
a13 1
@@@@ -234,7 +234,7 @@@@ sk_sp<SkTypeface> FontCache::createTypeface(
@


1.11
log
@update to 56.0.2924.76
@
text
@d1 6
a6 6
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.10 2016/12/10 15:35:25 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Thu Dec 15 00:02:25 2016
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Tue Jan  3 20:30:01 2017
@@@@ -63,7 +63,7 @@@@ static sk_sp<SkTypeface> typefaceForFontconfigInterfac
 
 namespace blink {
d13 1
a13 1
@@@@ -230,7 +230,7 @@@@ sk_sp<SkTypeface> FontCache::createTypeface(
@


1.10
log
@update to 55.0.2883.75; add lpr support to the system dialog while here
@
text
@d1 3
a3 3
$OpenBSD$
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Sat Dec  3 14:14:10 2016
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Sat Dec  3 14:14:21 2016
d13 1
a13 1
@@@@ -229,7 +229,7 @@@@ sk_sp<SkTypeface> FontCache::createTypeface(
@


1.9
log
@update to 54.0.2840.71
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.8 2016/09/01 16:28:11 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Wed Oct 12 21:03:14 2016
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Wed Oct 19 12:56:08 2016
@@@@ -62,7 +62,7 @@@@ static PassRefPtr<SkTypeface> typefaceForFontconfigInt
d13 2
a14 2
@@@@ -183,7 +183,7 @@@@ PassRefPtr<SkTypeface> FontCache::createTypeface(const
     }
d19 3
a21 3
     // On linux if the fontManager has been overridden then we should be calling the embedder
     // provided font Manager rather than calling SkTypeface::CreateFromName which may redirect the
     // call to the default font Manager.
@


1.8
log
@update to 53.0.2785.89
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.7 2016/07/31 13:11:44 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Thu Sep  1 00:03:48 2016
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Thu Sep  1 11:12:24 2016
@@@@ -63,7 +63,7 @@@@ static PassRefPtr<SkTypeface> typefaceForFontconfigInt
d13 1
a13 1
@@@@ -186,7 +186,7 @@@@ PassRefPtr<SkTypeface> FontCache::createTypeface(const
@


1.7
log
@update to 52.0.2743.82
@
text
@d1 4
a4 4
$OpenBSD$
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Thu Jul 21 10:40:46 2016
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Thu Jul 21 10:41:17 2016
@@@@ -60,7 +60,7 @@@@ static PassRefPtr<SkTypeface> typefaceForFontconfigInt
d13 1
a13 1
@@@@ -183,7 +183,7 @@@@ PassRefPtr<SkTypeface> FontCache::createTypeface(const
@


1.6
log
@update to 51.0.2704.63
@
text
@d2 2
a3 2
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Thu May 26 08:30:51 2016
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Thu May 26 08:31:15 2016
d13 1
a13 10
@@@@ -171,7 +171,7 @@@@ PassRefPtr<SimpleFontData> FontCache::getLastResortFal
     return fontDataFromFontPlatformData(fontPlatformData, shouldRetain);
 }
 
-#if OS(WIN) || OS(LINUX)
+#if OS(WIN) || OS(LINUX) || OS(OPENBSD)
 static inline SkFontStyle fontStyle(const FontDescription& fontDescription)
 {
     int width = static_cast<int>(fontDescription.stretch());
@@@@ -232,7 +232,7 @@@@ PassRefPtr<SkTypeface> FontCache::createTypeface(const
d17 2
a18 2
-#if OS(LINUX)
+#if OS(LINUX) || OS(OPENBSD)
@


1.5
log
@update to 50.0.2661.75
@
text
@d2 29
a30 11
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Thu Apr 14 20:07:25 2016
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Thu Apr 14 20:07:34 2016
@@@@ -65,7 +65,7 @@@@ const char* kColorEmojiFonts[] = { "56##fallback", "No
 const char* kTextEmojiFonts[] = { "Droid Sans Fallback" };
 const char* kSymbolsFonts[] = { "Droid Sans Fallback" };
 const char* kMathFonts[] = { "Droid Sans Fallback" };
-#elif OS(LINUX)
+#elif OS(LINUX) || OS(OPENBSD)
 const char* kColorEmojiFonts[] = { "Noto Color Emoji", "Noto Sans Symbols", "Symbola", "DejaVu Sans" };
 const char* kTextEmojiFonts[] = { "Noto Sans Symbols", "Symbola", "Droid Sans Fallback", "DejaVu Sans" };
 const char* kSymbolsFonts[] = { "FreeSerif", "FreeMono", "Droid Sans Fallback", "DejaVu Sans" };
@


1.4
log
@update to 48.0.2564.82
@
text
@d1 12
a12 33
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.3 2015/04/27 16:38:25 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Wed Apr 15 09:39:48 2015
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Wed Apr 15 09:40:36 2015
@@@@ -30,7 +30,7 @@@@
 
 #include "config.h"
 
-#if !OS(WIN) && !OS(ANDROID)
+#if !OS(WIN) && !OS(ANDROID) && !OS(OPENBSD)
 #include "SkFontConfigInterface.h"
 #endif
 #include "SkFontMgr.h"
@@@@ -48,7 +48,7 @@@@
 #include "wtf/text/CString.h"
 #include <unicode/locid.h>
 
-#if !OS(WIN) && !OS(ANDROID)
+#if !OS(WIN) && !OS(ANDROID) && !OS(OPENBSD)
 static SkStreamAsset* streamForFontconfigInterfaceId(int fontconfigInterfaceId)
 {
     SkAutoTUnref<SkFontConfigInterface> fci(SkFontConfigInterface::RefGlobal());
@@@@ -187,9 +187,11 @@@@ PassRefPtr<SkTypeface> FontCache::createTypeface(const
 #if !OS(WIN) && !OS(ANDROID)
     if (creationParams.creationType() == CreateFontByFciIdAndTtcIndex) {
         SkTypeface* typeface = nullptr;
+#if !OS(OPENBSD)
         if (Platform::current()->sandboxSupport())
             typeface = SkTypeface::CreateFromStream(streamForFontconfigInterfaceId(creationParams.fontconfigInterfaceId()), creationParams.ttcIndex());
         else
+#endif
             typeface = SkTypeface::CreateFromFile(creationParams.filename().data(), creationParams.ttcIndex());
 
         if (typeface)
@


1.3
log
@update to 42.0.2311.90
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Rework how the GPU vendor and device id is detected by using direct calls
to Mesa. The current solution is based on a diff from jsg@@.
Also fix font redering issues with WebKit, with 3rd party TTFs with a
diff from Yoshihisa Matsushita.
@
text
@d1 3
a3 3
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.1 2015/01/22 11:16:41 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Fri Feb 20 05:50:09 2015
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Sun Feb 22 12:21:03 2015
d19 1
a19 1
 static SkStream* streamForFontconfigInterfaceId(int fontconfigInterfaceId)
d22 3
a24 12
@@@@ -131,7 +131,7 @@@@ PassRefPtr<SimpleFontData> FontCache::fallbackFontForC
     return fontDataFromFontPlatformData(&platformData, DoNotRetain);
 }
 
-#endif // !OS(WIN) && !OS(ANDROID)
+#endif // !OS(WIN) && !OS(ANDROID) && !OS(OPENBSD)
 
 PassRefPtr<SimpleFontData> FontCache::getLastResortFallbackFont(const FontDescription& description, ShouldRetain shouldRetain)
 {
@@@@ -189,9 +189,11 @@@@ PassRefPtr<SkTypeface> FontCache::createTypeface(const
         // TODO(dro): crbug.com/381620 Use creationParams.ttcIndex() after
         // https://code.google.com/p/skia/issues/detail?id=1186 gets fixed.
d28 1
a28 1
             typeface = SkTypeface::CreateFromStream(streamForFontconfigInterfaceId(creationParams.fontconfigInterfaceId()));
d31 1
a31 1
             typeface = SkTypeface::CreateFromFile(creationParams.filename().data());
@


1.1
log
@update to 40.0.2214.91
@
text
@d1 3
a3 3
$OpenBSD$
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Thu Dec 18 10:59:05 2014
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Sun Dec 21 22:34:27 2014
d22 1
a22 1
@@@@ -131,8 +131,11 @@@@ PassRefPtr<SimpleFontData> FontCache::fallbackFontForC
a28 3
+#if OS(OPENBSD)
+#endif
+
d31 1
a31 8
     const FontFaceCreationParams fallbackCreationParams(getFallbackFontFamily(description));
@@@@ -184,7 +187,7 @@@@ COMPILE_ASSERT(static_cast<int>(FontStretchUltraExpand
 
 PassRefPtr<SkTypeface> FontCache::createTypeface(const FontDescription& fontDescription, const FontFaceCreationParams& creationParams, CString& name)
 {
-#if !OS(WIN) && !OS(ANDROID)
+#if !OS(WIN) && !OS(ANDROID) && !OS(OPENBSD)
     if (creationParams.creationType() == CreateFontByFciIdAndTtcIndex) {
d34 9
@

