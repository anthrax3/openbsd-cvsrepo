head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.09.01.16.28.11;	author robert;	state Exp;
branches;
next	1.2;
commitid	0duujWXlyOCBrehm;

1.2
date	2016.03.06.10.51.14;	author robert;	state Exp;
branches;
next	1.1;
commitid	Upms3IeOsaLsGxbP;

1.1
date	2015.04.27.16.38.25;	author robert;	state Exp;
branches;
next	;
commitid	jwX00slFR1NY9xHC;


desc
@@


1.3
log
@update to 53.0.2785.89
@
text
@$OpenBSD$
--- ui/gl/gl_bindings_autogen_glx.h.orig.port	Thu Sep  1 11:37:31 2016
+++ ui/gl/gl_bindings_autogen_glx.h	Thu Sep  1 13:52:17 2016
@@@@ -102,6 +102,8 @@@@ typedef bool(GL_BINDING_CALL* glXGetMscRateOMLProc)(Di
                                                     GLXDrawable drawable,
                                                     int32_t* numerator,
                                                     int32_t* denominator);
+typedef __GLXextFuncPtr(GL_BINDING_CALL* glXGetProcAddressARBProc)(
+    const GLubyte* procName);
 typedef void(GL_BINDING_CALL* glXGetSelectedEventProc)(Display* dpy,
                                                        GLXDrawable drawable,
                                                        unsigned long* mask);
@@@@ -164,6 +166,7 @@@@ typedef void(GL_BINDING_CALL* glXWaitXProc)(void);
 
 struct ExtensionsGLX {
   bool b_GLX_ARB_create_context;
+  bool b_GLX_ARB_get_proc_address;
   bool b_GLX_EXT_swap_control;
   bool b_GLX_EXT_texture_from_pixmap;
   bool b_GLX_MESA_copy_sub_buffer;
@@@@ -201,6 +204,7 @@@@ struct ProcsGLX {
   glXGetFBConfigFromVisualSGIXProc glXGetFBConfigFromVisualSGIXFn;
   glXGetFBConfigsProc glXGetFBConfigsFn;
   glXGetMscRateOMLProc glXGetMscRateOMLFn;
+  glXGetProcAddressARBProc glXGetProcAddressARBFn;
   glXGetSelectedEventProc glXGetSelectedEventFn;
   glXGetSyncValuesOMLProc glXGetSyncValuesOMLFn;
   glXGetVisualFromFBConfigProc glXGetVisualFromFBConfigFn;
@@@@ -306,6 +310,7 @@@@ class GL_EXPORT GLXApi {
                                   GLXDrawable drawable,
                                   int32_t* numerator,
                                   int32_t* denominator) = 0;
+  virtual __GLXextFuncPtr glXGetProcAddressARBFn(const GLubyte* procName) = 0;
   virtual void glXGetSelectedEventFn(Display* dpy,
                                      GLXDrawable drawable,
                                      unsigned long* mask) = 0;
@@@@ -390,6 +395,7 @@@@ class GL_EXPORT GLXApi {
   ::gl::g_current_glx_context->glXGetFBConfigFromVisualSGIXFn
 #define glXGetFBConfigs ::gl::g_current_glx_context->glXGetFBConfigsFn
 #define glXGetMscRateOML ::gl::g_current_glx_context->glXGetMscRateOMLFn
+#define glXGetProcAddressARB ::gl::g_current_glx_context->glXGetProcAddressARBFn
 #define glXGetSelectedEvent ::gl::g_current_glx_context->glXGetSelectedEventFn
 #define glXGetSyncValuesOML ::gl::g_current_glx_context->glXGetSyncValuesOMLFn
 #define glXGetVisualFromFBConfig \
@


1.2
log
@update to 49.0.2623.75
@
text
@d2 2
a3 2
--- ui/gl/gl_bindings_autogen_glx.h.orig.port	Thu Mar  3 10:17:26 2016
+++ ui/gl/gl_bindings_autogen_glx.h	Thu Mar  3 10:18:18 2016
d37 7
a43 8
@@@@ -394,6 +399,8 @@@@ class GL_EXPORT GLXApi {
   ::gfx::g_current_glx_context->glXGetFBConfigFromVisualSGIXFn
 #define glXGetFBConfigs ::gfx::g_current_glx_context->glXGetFBConfigsFn
 #define glXGetMscRateOML ::gfx::g_current_glx_context->glXGetMscRateOMLFn
+#define glXGetProcAddressARB \
+  ::gfx::g_current_glx_context->glXGetProcAddressARBFn
 #define glXGetSelectedEvent ::gfx::g_current_glx_context->glXGetSelectedEventFn
 #define glXGetSyncValuesOML ::gfx::g_current_glx_context->glXGetSyncValuesOMLFn
@


1.1
log
@update to 42.0.2311.90
@
text
@d2 2
a3 2
--- ui/gl/gl_bindings_autogen_glx.h.orig.port	Thu Apr 23 10:58:18 2015
+++ ui/gl/gl_bindings_autogen_glx.h	Thu Apr 23 10:58:25 2015
d6 2
a7 2
                                                     int32* numerator,
                                                     int32* denominator);
d31 2
a32 2
                                   int32* numerator,
                                   int32* denominator) = 0;
@

