head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.10
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.05.24.15.51.53;	author robert;	state Exp;
branches;
next	1.1;
commitid	rFaYcWD2ntiXn5nr;

1.1
date	2014.01.18.11.42.03;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to 43.0.2357.65
@
text
@$OpenBSD$
--- chrome/browser/media_galleries/fileapi/mtp_device_map_service.cc.orig.port	Wed May 20 10:03:54 2015
+++ chrome/browser/media_galleries/fileapi/mtp_device_map_service.cc	Wed May 20 10:04:12 2015
@@@@ -37,10 +37,12 @@@@ void MTPDeviceMapService::RegisterMTPFileSystem(
     // Note that this initializes the delegate asynchronously, but since
     // the delegate will only be used from the IO thread, it is guaranteed
     // to be created before use of it expects it to be there.
+#if !defined(OS_BSD)
     CreateMTPDeviceAsyncDelegate(
         device_location, read_only,
         base::Bind(&MTPDeviceMapService::AddAsyncDelegate,
                    base::Unretained(this), device_location, read_only));
+#endif
     mtp_device_usage_map_[key] = 0;
   }
 
@


1.1
log
@update to 32.0.1700.76
@
text
@d2 3
a4 3
--- chrome/browser/media_galleries/fileapi/mtp_device_map_service.cc.orig.port	Thu Jan 16 21:01:41 2014
+++ chrome/browser/media_galleries/fileapi/mtp_device_map_service.cc	Thu Jan 16 21:01:53 2014
@@@@ -33,9 +33,11 @@@@ void MTPDeviceMapService::RegisterMTPFileSystem(
d9 2
a10 1
     CreateMTPDeviceAsyncDelegate(device_location,
d12 1
a12 1
                    base::Unretained(this), device_location));
d14 1
a14 1
     mtp_device_usage_map_[device_location] = 0;
@

