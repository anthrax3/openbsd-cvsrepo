head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2017.04.28.14.21.00;	author robert;	state Exp;
branches;
next	;
commitid	XFDnyB7tGNawHUbl;


desc
@@


1.1
log
@update to 58.0.3029.81
@
text
@$OpenBSD$
--- base/threading/thread_task_runner_handle.cc.orig.port	Thu Apr 27 20:01:49 2017
+++ base/threading/thread_task_runner_handle.cc	Thu Apr 27 22:28:06 2017
@@@@ -7,6 +7,7 @@@@
 #include <utility>
 
 #include "base/bind.h"
+#include "base/callback_helpers.h"
 #include "base/lazy_instance.h"
 #include "base/logging.h"
 #include "base/memory/ptr_util.h"
@@@@ -34,6 +35,7 @@@@ bool ThreadTaskRunnerHandle::IsSet() {
   return !!lazy_tls_ptr.Pointer()->Get();
 }
 
+#if defined(OS_BSD)
 // static
 ScopedClosureRunner ThreadTaskRunnerHandle::OverrideForTesting(
     scoped_refptr<SingleThreadTaskRunner> overriding_task_runner) {
@@@@ -77,6 +79,7 @@@@ ScopedClosureRunner ThreadTaskRunnerHandle::OverrideFo
       base::Passed(&overriding_task_runner),
       base::Unretained(ttrh->task_runner_.get())));
 }
+#endif
 
 ThreadTaskRunnerHandle::ThreadTaskRunnerHandle(
     scoped_refptr<SingleThreadTaskRunner> task_runner)
@
