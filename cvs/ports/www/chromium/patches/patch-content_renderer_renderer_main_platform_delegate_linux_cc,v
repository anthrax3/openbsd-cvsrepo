head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.6
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.4
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.2
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.11.0.4
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.2
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.14
date	2016.04.16.19.08.46;	author robert;	state Exp;
branches;
next	1.13;
commitid	SE10dvx9aTcZrjRO;

1.13
date	2016.03.06.10.51.14;	author robert;	state Exp;
branches;
next	1.12;
commitid	Upms3IeOsaLsGxbP;

1.12
date	2016.01.06.21.46.44;	author robert;	state Exp;
branches;
next	1.11;
commitid	QCpbcWCjgKtMUGZ9;

1.11
date	2015.03.18.19.26.29;	author robert;	state Exp;
branches;
next	1.10;
commitid	aPwx9j7rbIsa650M;

1.10
date	2014.09.11.19.04.52;	author robert;	state Exp;
branches;
next	1.9;
commitid	WrglT9ERNBhPArdd;

1.9
date	2013.09.29.19.04.03;	author robert;	state Exp;
branches;
next	1.8;

1.8
date	2013.07.15.14.59.30;	author robert;	state Exp;
branches;
next	1.7;

1.7
date	2013.04.03.08.19.10;	author robert;	state Exp;
branches;
next	1.6;

1.6
date	2013.01.18.21.38.02;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2012.10.12.16.46.10;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2012.07.10.09.22.34;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.10.27.07.59.09;	author robert;	state dead;
branches;
next	1.2;

1.2
date	2011.09.19.08.55.26;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.08.20.36.56;	author robert;	state Exp;
branches;
next	;


desc
@@


1.14
log
@update to 50.0.2661.75
@
text
@$OpenBSD: patch-content_renderer_renderer_main_platform_delegate_linux_cc,v 1.13 2016/03/06 10:51:14 robert Exp $
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig.port	Fri Apr  8 18:02:09 2016
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Thu Apr 14 08:25:12 2016
@@@@ -10,7 +10,11 @@@@
 #include "base/command_line.h"
 #include "base/files/file_util.h"
 #include "base/logging.h"
+#if defined(OS_OPENBSD)
+#include "content/common/sandbox_init_openbsd.h"
+#else
 #include "content/common/sandbox_linux/sandbox_linux.h"
+#endif
 #include "content/public/common/content_switches.h"
 #include "content/public/common/sandbox_init.h"
 
@@@@ -33,6 +37,9 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
   // https://chromium.googlesource.com/chromium/src/+/master/docs/linux_suid_sandbox.md
   //
   // Anything else is started in InitializeSandbox().
+#if defined(OS_BSD)
+  InitializeSandbox();
+#else
   LinuxSandbox::InitializeSandbox();
   // about:sandbox uses a value returned from LinuxSandbox::GetStatus() before
   // any renderer has been started.
@@@@ -59,6 +66,7 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
     CHECK_EQ(errno, EPERM);
   }
 #endif  // __x86_64__
+#endif
 
   return true;
 }
@


1.13
log
@update to 49.0.2623.75
@
text
@d1 3
a3 3
$OpenBSD: patch-content_renderer_renderer_main_platform_delegate_linux_cc,v 1.12 2016/01/06 21:46:44 robert Exp $
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig.port	Wed Feb 24 21:01:32 2016
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Thu Mar  3 09:43:26 2016
d17 1
a17 1
   // http://code.google.com/p/chromium/wiki/LinuxSUIDSandbox
@


1.12
log
@pledge(2) the chromium processes;

The renderer, gpu, plugin and utility processes are now using pledge(2)
Unfortunately the GPU process only requires an rpath pledge because of
Mesa trying to parse two configuration files, /etc/drirc and ${HOME}/.drirc
So currently the GPU process will use an rpath pledge in the next
week or so so that people can test, but this situation has to be
resolved because it is not acceptable that a mostly unused configuration
file is being parsed from a library and that stops us from using less
pledges and thus disallowing the GPU process to have read access
to the filsystem ... like your ssh keys.
@
text
@d1 3
a3 3
$OpenBSD: patch-content_renderer_renderer_main_platform_delegate_linux_cc,v 1.11 2015/03/18 19:26:29 robert Exp $
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig.port	Fri Nov 13 12:04:18 2015
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Sun Jan  3 18:46:20 2016
d16 1
a16 1
@@@@ -35,6 +39,9 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
d26 1
a26 1
@@@@ -61,6 +68,7 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
@


1.11
log
@update to 41.0.2272.89
@
text
@d1 16
a16 4
$OpenBSD: patch-content_renderer_renderer_main_platform_delegate_linux_cc,v 1.10 2014/09/11 19:04:52 robert Exp $
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig.port	Tue Mar 10 23:29:11 2015
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Wed Mar 11 07:22:50 2015
@@@@ -35,6 +35,7 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
d20 3
a22 1
+#if !defined(OS_BSD)
d26 1
a26 1
@@@@ -61,6 +62,7 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
@


1.10
log
@update to 37.0.2062.120
@
text
@d1 4
a4 4
$OpenBSD$
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig.port	Wed Sep 10 22:19:32 2014
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Wed Sep 10 22:20:09 2014
@@@@ -44,6 +44,7 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
d12 1
a12 1
@@@@ -70,6 +71,7 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
@


1.9
log
@update to 29.0.1547.76
@
text
@d1 4
a4 4
$OpenBSD: patch-content_renderer_renderer_main_platform_delegate_linux_cc,v 1.8 2013/07/15 14:59:30 robert Exp $
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig.port	Wed Sep 18 10:13:04 2013
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Sun Sep 22 16:09:42 2013
@@@@ -50,7 +50,9 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
a9 9
+#endif
   return true;
 }
 
@@@@ -64,6 +66,7 @@@@ void RendererMainPlatformDelegate::RunSandboxTests(boo
   if (no_sandbox)
     return;
 
+#if !defined(OS_BSD)
d12 1
a12 2
   // Here, we test that the status of SeccompBpf in the renderer is consistent
@@@@ -89,6 +92,7 @@@@ void RendererMainPlatformDelegate::RunSandboxTests(boo
d17 2
a19 2
 
 }  // namespace content
@


1.8
log
@update to 28.0.1500.45
@
text
@d1 4
a4 4
$OpenBSD$
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig.port	Sun Jul  7 15:58:28 2013
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Sun Jul  7 15:59:08 2013
@@@@ -41,7 +41,9 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
d14 1
a14 1
@@@@ -55,6 +57,7 @@@@ void RendererMainPlatformDelegate::RunSandboxTests(boo
d22 1
a22 1
@@@@ -80,6 +83,7 @@@@ void RendererMainPlatformDelegate::RunSandboxTests(boo
@


1.7
log
@- update to 26.0.1410.43
- switch chromium to use clang/llvm instead of gcc
- switch back to the internal libvpx because it's an unreleased version
  at this point
- re-enable SSE2 support
@
text
@d2 4
a5 3
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig.port	Fri Mar 22 02:13:14 2013
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Tue Apr  2 21:05:17 2013
@@@@ -42,7 +42,9 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
d7 1
a7 2
   // The seccomp sandbox mode 1 (sandbox/linux/seccomp-legacy) and mode 2
   // (sandbox/linux/seccomp-bpf) are started in InitializeSandbox().
d9 1
a9 1
   InitializeSandbox();
d14 1
a14 1
@@@@ -56,6 +58,7 @@@@ void RendererMainPlatformDelegate::RunSandboxTests(boo
d22 1
a22 1
@@@@ -81,6 +84,7 @@@@ void RendererMainPlatformDelegate::RunSandboxTests(boo
@


1.6
log
@update to 24.0.1312.52
@
text
@d2 2
a3 2
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig	Mon Jan 14 19:51:40 2013
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Thu Jan 17 21:35:36 2013
@


1.5
log
@update to 22.0.1229.94
@
text
@d2 3
a4 3
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig	Wed Oct 10 22:54:20 2012
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Wed Oct 10 22:54:33 2012
@@@@ -34,7 +34,9 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
d9 1
a9 1
   content::InitializeSandbox();
d14 16
@


1.4
log
@update to 20.0.1132.47
@
text
@d2 7
a8 7
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig	Sat Jul  7 17:27:38 2012
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Sat Jul  7 17:27:45 2012
@@@@ -41,8 +41,8 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
   // a file descriptor for "/proc".
   if (SeccompSandboxEnabled() && SupportsSeccompSandbox(-1))
     StartSeccompSandbox();
-#endif
@


1.3
log
@update to 15.0.874.102.

switch from using the hacked macosx transport dib to the linux one
which uses sysv shms.
make sure you also have a current kernel before using this version
@
text
@d1 4
a4 11
$OpenBSD: patch-content_renderer_renderer_main_platform_delegate_linux_cc,v 1.2 2011/09/19 08:55:26 robert Exp $
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig	Fri Sep 16 18:23:49 2011
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Fri Sep 16 18:24:00 2011
@@@@ -35,7 +35,7 @@@@ bool RendererMainPlatformDelegate::EnableSandbox() {
   // The seccomp sandbox is started in the renderer.
   // http://code.google.com/p/seccompsandbox/
 #if defined(ARCH_CPU_X86_FAMILY) && !defined(CHROMIUM_SELINUX) && \
-    !defined(__clang__)
+    !defined(__clang__) && !defined(__OpenBSD__)
   // N.b. SupportsSeccompSandbox() returns a cached result, as we already
   // called it earlier in the zygote. Thus, it is OK for us to not pass in
d6 8
@


1.2
log
@update to 14.0.835.163
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@d2 2
a3 2
--- content/renderer/renderer_main_platform_delegate_linux.cc.orig	Mon Jun  6 11:11:28 2011
+++ content/renderer/renderer_main_platform_delegate_linux.cc	Wed Jun  8 12:11:29 2011
d9 1
a9 1
+    !defined(__clang__) && !defined(OS_OPENBSD)
@

