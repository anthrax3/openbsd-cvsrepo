head	1.6;
access;
symbols
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2011.10.27.07.59.08;	author robert;	state dead;
branches;
next	1.5;

1.5
date	2011.09.19.08.55.26;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2011.08.16.08.17.44;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.15.11.38.05;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.02.08.09.43.02;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.45;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@update to 15.0.874.102.

switch from using the hacked macosx transport dib to the linux one
which uses sysv shms.
make sure you also have a current kernel before using this version
@
text
@$OpenBSD: patch-base_i18n_number_formatting_cc,v 1.5 2011/09/19 08:55:26 robert Exp $
--- base/i18n/number_formatting.cc.orig	Wed Aug 24 10:57:42 2011
+++ base/i18n/number_formatting.cc	Wed Aug 24 10:57:51 2011
@@@@ -41,7 +41,7 @@@@ LazyInstance<NumberFormatWrapper> g_number_format_floa
 
 }  // namespace
 
-string16 FormatNumber(int64 number) {
+string16 FormatNumber(int64_t number) {
   icu::NumberFormat* number_format =
       g_number_format_int.Get().number_format.get();
 
@


1.5
log
@update to 14.0.835.163
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@update to the next stable release (13.0.782.112)
@
text
@d1 4
a4 4
$OpenBSD: patch-base_i18n_number_formatting_cc,v 1.3 2011/03/15 11:38:05 robert Exp $
--- base/i18n/number_formatting.cc.orig	Wed Jul 27 10:01:28 2011
+++ base/i18n/number_formatting.cc	Tue Aug  2 20:12:17 2011
@@@@ -36,7 +36,7 @@@@ struct NumberFormatWrapper {
d6 1
a6 1
 static LazyInstance<NumberFormatWrapper> g_number_format(LINKER_INITIALIZED);
d10 2
a11 1
   icu::NumberFormat* number_format = g_number_format.Get().number_format.get();
a12 1
   if (!number_format) {
@


1.3
log
@update to 10.0.648.133
@
text
@d1 4
a4 4
$OpenBSD$
--- base/i18n/number_formatting.cc.orig	Mon Mar 14 11:01:54 2011
+++ base/i18n/number_formatting.cc	Mon Mar 14 11:02:02 2011
@@@@ -35,7 +35,7 @@@@ struct NumberFormatWrapper {
@


1.2
log
@late update to chromium 9, robert@@ did the work, but he doesn't have the
time right now.
Tree is still locked!
Reasons for the update:
- good work that can be used now
- only builds on i386/amd64, and they're fast
- multiple security problems in old chrome
- old chrome half working, can't break it more than it was.

This one requires resources (see MESSAGE), but it's ways more stable.

Again, discussed with sthen@@, jasper@@, naddy@@, miod@@
@
text
@d2 3
a4 3
--- base/i18n/number_formatting.cc.orig	Fri Jan 21 10:20:15 2011
+++ base/i18n/number_formatting.cc	Mon Jan 24 10:51:18 2011
@@@@ -32,7 +32,7 @@@@ struct NumberFormatSingletonTraits
d6 1
a6 1
 }  // namespace
d10 1
a10 2
   icu::NumberFormat* number_format =
       Singleton<icu::NumberFormat, NumberFormatSingletonTraits>::get();
d12 1
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d2 10
a11 8
--- base/i18n/number_formatting.cc.orig	Tue Mar 30 07:28:39 2010
+++ base/i18n/number_formatting.cc	Sun Nov 28 00:11:25 2010
@@@@ -41,7 +41,7 @@@@ string16 FormatNumber(int64 number) {
     return UTF8ToUTF16(StringPrintf("%" PRId64, number));
   }
   icu::UnicodeString ustr;
-  number_format->format(number, ustr);
+  number_format->format((int64_t)number, ustr);
a12 2
   return string16(ustr.getBuffer(), static_cast<size_t>(ustr.length()));
 }
@

