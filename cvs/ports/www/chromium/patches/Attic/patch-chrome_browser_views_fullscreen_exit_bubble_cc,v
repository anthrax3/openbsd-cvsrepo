head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2011.02.08.09.48.26;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.45;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@... and ditch older patches too
@
text
@$OpenBSD: patch-chrome_browser_views_fullscreen_exit_bubble_cc,v 1.1 2010/12/13 09:51:45 espie Exp $
--- chrome/browser/views/fullscreen_exit_bubble.cc.orig	Tue Mar 30 07:29:37 2010
+++ chrome/browser/views/fullscreen_exit_bubble.cc	Sun Nov 28 00:11:31 2010
@@@@ -17,7 +17,7 @@@@
 #if defined(OS_WIN)
 #include "app/l10n_util_win.h"
 #include "views/widget/widget_win.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "views/widget/widget_gtk.h"
 #endif
 
@@@@ -114,7 +114,7 @@@@ class FullscreenExitBubble::FullscreenExitPopup : publ
     return MA_NOACTIVATE;
   }
 };
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 // TODO: figure out the equivalent of MA_NOACTIVATE for gtk.
 #endif
 
@@@@ -149,7 +149,7 @@@@ FullscreenExitBubble::FullscreenExitBubble(
   popup_->set_window_style(WS_POPUP);
   popup_->set_window_ex_style(WS_EX_LAYERED | WS_EX_TOOLWINDOW |
                               l10n_util::GetExtendedTooltipStyles());
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   popup_ = new views::WidgetGtk(views::WidgetGtk::TYPE_POPUP);
   popup_->MakeTransparent();
 #endif
@@@@ -197,7 +197,7 @@@@ void FullscreenExitBubble::AnimationProgressed(
 #if defined(OS_WIN)
     popup_->MoveWindow(popup_rect.x(), popup_rect.y(), popup_rect.width(),
                        popup_rect.height());
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
     popup_->SetBounds(popup_rect);
 #endif
     popup_->Show();
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d1 1
a1 1
$OpenBSD$
@

