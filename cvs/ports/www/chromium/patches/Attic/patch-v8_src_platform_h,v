head	1.8;
access;
symbols
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3;
locks; strict;
comment	@# @;


1.8
date	2013.01.18.21.38.02;	author robert;	state dead;
branches;
next	1.7;

1.7
date	2012.11.07.06.59.45;	author robert;	state Exp;
branches;
next	1.6;

1.6
date	2012.07.10.09.22.34;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2011.12.14.16.58.19;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.19.08.55.26;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.06.10.07.41.24;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.06.08.20.36.56;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.02.07.22.12;	author robert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@update to 24.0.1312.52
@
text
@$OpenBSD: patch-v8_src_platform_h,v 1.7 2012/11/07 06:59:45 robert Exp $
--- v8/src/platform.h.orig	Wed Oct 31 20:04:19 2012
+++ v8/src/platform.h	Tue Nov  6 22:45:41 2012
@@@@ -107,7 +107,11 @@@@ namespace internal {
 
 // Use AtomicWord for a machine-sized pointer. It is assumed that
 // reads and writes of naturally aligned values of this type are atomic.
+#if defined(__OpenBSD__) && defined(__i386__)
+typedef Atomic32 AtomicWord;
+#else
 typedef intptr_t AtomicWord;
+#endif
 
 class Semaphore;
 class Mutex;
@


1.7
log
@update to 23.0.1271.64
@
text
@d1 1
a1 1
$OpenBSD: patch-v8_src_platform_h,v 1.6 2012/07/10 09:22:34 robert Exp $
@


1.6
log
@update to 20.0.1132.47
@
text
@d1 4
a4 4
$OpenBSD: patch-v8_src_platform_h,v 1.5 2011/12/14 16:58:19 robert Exp $
--- v8/src/platform.h.orig	Wed May 23 03:52:53 2012
+++ v8/src/platform.h	Fri Jun  1 06:13:04 2012
@@@@ -89,7 +89,11 @@@@ namespace internal {
@


1.5
log
@update to 16.0.912.63
@
text
@d1 4
a4 4
$OpenBSD: patch-v8_src_platform_h,v 1.4 2011/09/19 08:55:26 robert Exp $
--- v8/src/platform.h.orig	Wed Dec  7 09:04:42 2011
+++ v8/src/platform.h	Tue Dec 13 21:23:12 2011
@@@@ -88,7 +88,11 @@@@ namespace internal {
@


1.4
log
@update to 14.0.835.163
@
text
@d1 4
a4 4
$OpenBSD: patch-v8_src_platform_h,v 1.3 2011/06/10 07:41:24 robert Exp $
--- v8/src/platform.h.orig	Tue Aug 23 10:46:25 2011
+++ v8/src/platform.h	Wed Aug 24 13:42:33 2011
@@@@ -123,7 +123,11 @@@@ namespace internal {
@


1.3
log
@fix AtomicWord definition on i386, no bump needed
@
text
@d1 3
a3 3
$OpenBSD: patch-v8_src_platform_h,v 1.2 2011/06/08 20:36:56 robert Exp $
--- v8/src/platform.h.orig	Mon Jun  6 11:43:03 2011
+++ v8/src/platform.h	Thu Jun  9 16:24:37 2011
a15 11
@@@@ -287,6 +291,10 @@@@ class OS {
   // of the CPU and the OS.  The bits in the answer correspond to the bit
   // positions indicated by the members of the CpuFeature enum from globals.h
   static uint64_t CpuFeaturesImpliedByPlatform();
+
+  // Maximum size of the virtual memory.  0 means there is no artificial
+  // limit.
+  static intptr_t MaxVirtualMemory();
 
   // Returns the double constant NAN
   static double nan_value();
@


1.2
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@d1 1
a1 1
$OpenBSD: patch-v8_src_platform_h,v 1.1 2011/06/02 07:22:12 robert Exp $
d3 15
a17 2
+++ v8/src/platform.h	Wed Jun  8 09:58:37 2011
@@@@ -288,6 +288,10 @@@@ class OS {
d20 1
a20 1
 
d24 1
a24 1
+
a26 1
 
@


1.1
log
@Instead of reserving 32MB of virtual memory let's reserve the quarter of
RLIMIT_DATA (ulimit -d) if RLIMIT_DATA is not 0 (unlimited).
If RLIMIT_DATA is 0 then the default 512MB reservation will be used.
Using 32MB made v8 use less memory for sure but it was a huge performance
loss too.
@
text
@d1 4
a4 4
$OpenBSD$
--- v8/src/platform.h.orig	Fri May 20 10:56:51 2011
+++ v8/src/platform.h	Wed Jun  1 13:43:18 2011
@@@@ -287,6 +287,10 @@@@ class OS {
@

