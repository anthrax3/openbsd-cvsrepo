head	1.4;
access;
symbols
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2016.03.06.10.51.14;	author robert;	state dead;
branches;
next	1.3;
commitid	Upms3IeOsaLsGxbP;

1.3
date	2016.01.23.18.49.31;	author robert;	state Exp;
branches;
next	1.2;
commitid	KVrkvcBYFue8N3VB;

1.2
date	2014.10.13.06.49.19;	author robert;	state Exp;
branches;
next	1.1;
commitid	GAMY6AdJxC6cdD6g;

1.1
date	2014.03.11.14.52.01;	author robert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to 49.0.2623.75
@
text
@$OpenBSD: patch-base_strings_safe_sprintf_cc,v 1.3 2016/01/23 18:49:31 robert Exp $
--- base/strings/safe_sprintf.cc.orig.port	Wed Jan 20 21:01:18 2016
+++ base/strings/safe_sprintf.cc	Fri Jan 22 19:58:58 2016
@@@@ -118,7 +118,7 @@@@ class Buffer {
 // doesn't really implement constexpr yet so it doesn't complain, but clang
 // does.
 #if __cplusplus >= 201103 && !defined(OS_ANDROID) && !defined(OS_MACOSX) && \
-    !defined(OS_IOS) && !(defined(__clang__) && defined(OS_WIN))
+    !defined(OS_IOS) && !(defined(__clang__) && defined(OS_WIN)) && !defined(OS_BSD)
     COMPILE_ASSERT(kSSizeMaxConst == \
                    static_cast<size_t>(std::numeric_limits<ssize_t>::max()),
                    kSSizeMax_is_the_max_value_of_an_ssize_t);
@


1.3
log
@update to 48.0.2564.82
@
text
@d1 1
a1 1
$OpenBSD: patch-base_strings_safe_sprintf_cc,v 1.2 2014/10/13 06:49:19 robert Exp $
@


1.2
log
@update to 38.0.2125.101
@
text
@d1 4
a4 4
$OpenBSD$
--- base/strings/safe_sprintf.cc.orig.port	Fri Oct 10 16:13:35 2014
+++ base/strings/safe_sprintf.cc	Fri Oct 10 16:13:44 2014
@@@@ -115,7 +115,7 @@@@ class Buffer {
@


1.1
log
@update to 33.0.1750.146
@
text
@d2 8
a9 8
--- base/strings/safe_sprintf.cc.orig.port	Sat Feb 22 12:25:40 2014
+++ base/strings/safe_sprintf.cc	Sat Feb 22 12:25:47 2014
@@@@ -111,7 +111,7 @@@@ class Buffer {
 // static_assert only works with compile-time constants, but mac uses
 // libstdc++4.2 and android uses stlport, which both don't mark
 // numeric_limits::max() as constexp.
-#if __cplusplus >= 201103 && !defined(OS_ANDROID) && !defined(OS_MACOSX) && !defined(OS_IOS)
+#if __cplusplus >= 201103 && !defined(OS_ANDROID) && !defined(OS_MACOSX) && !defined(OS_IOS) && !defined(OS_BSD)
@

