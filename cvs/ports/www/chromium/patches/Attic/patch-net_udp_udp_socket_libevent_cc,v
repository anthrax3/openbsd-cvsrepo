head	1.8;
access;
symbols
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3;
locks; strict;
comment	@# @;


1.8
date	2015.12.05.16.13.32;	author robert;	state dead;
branches;
next	1.7;
commitid	D0GFSwUDbKAnIs1m;

1.7
date	2015.07.23.13.44.04;	author robert;	state Exp;
branches;
next	1.6;
commitid	vxhJdppNzKtP7lYz;

1.6
date	2015.05.24.15.51.53;	author robert;	state Exp;
branches;
next	1.5;
commitid	rFaYcWD2ntiXn5nr;

1.5
date	2015.04.27.16.38.25;	author robert;	state Exp;
branches;
next	1.4;
commitid	jwX00slFR1NY9xHC;

1.4
date	2015.03.18.19.26.29;	author robert;	state Exp;
branches;
next	1.3;
commitid	aPwx9j7rbIsa650M;

1.3
date	2014.07.20.17.22.34;	author robert;	state Exp;
branches;
next	1.2;
commitid	yFSQqywU9tg3Fhqe;

1.2
date	2014.04.17.16.27.53;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2014.03.11.14.52.01;	author robert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@update to 47.0.2526.73
@
text
@$OpenBSD: patch-net_udp_udp_socket_libevent_cc,v 1.7 2015/07/23 13:44:04 robert Exp $
--- net/udp/udp_socket_libevent.cc.orig.port	Wed Jul 15 22:30:05 2015
+++ net/udp/udp_socket_libevent.cc	Wed Jul 22 08:37:30 2015
@@@@ -37,7 +37,7 @@@@ const int kBindRetries = 10;
 const int kPortStart = 1024;
 const int kPortEnd = 65535;
 
-#if defined(OS_MACOSX)
+#if defined(OS_MACOSX) || defined(OS_BSD)
 
 // Returns IPv4 address in network order.
 int GetIPv4AddressFromIndex(int socket, uint32 index, uint32* address){
@@@@ -548,7 +548,7 @@@@ int UDPSocketLibevent::SetMulticastOptions() {
   if (multicast_interface_ != 0) {
     switch (addr_family_) {
       case AF_INET: {
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
         ip_mreqn mreq;
         mreq.imr_ifindex = multicast_interface_;
         mreq.imr_address.s_addr = htonl(INADDR_ANY);
@@@@ -623,7 +623,7 @@@@ int UDPSocketLibevent::JoinGroup(const IPAddressNumber
       if (addr_family_ != AF_INET)
         return ERR_ADDRESS_INVALID;
 
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
       ip_mreqn mreq;
       mreq.imr_ifindex = multicast_interface_;
       mreq.imr_address.s_addr = htonl(INADDR_ANY);
@


1.7
log
@update to 44.0.2403.89
@
text
@d1 1
a1 1
$OpenBSD: patch-net_udp_udp_socket_libevent_cc,v 1.6 2015/05/24 15:51:53 robert Exp $
@


1.6
log
@update to 43.0.2357.65
@
text
@d1 4
a4 4
$OpenBSD: patch-net_udp_udp_socket_libevent_cc,v 1.5 2015/04/27 16:38:25 robert Exp $
--- net/udp/udp_socket_libevent.cc.orig.port	Thu May 14 00:35:47 2015
+++ net/udp/udp_socket_libevent.cc	Wed May 20 08:34:56 2015
@@@@ -43,7 +43,7 @@@@ const int kBindRetries = 10;
d13 1
a13 1
@@@@ -630,7 +630,7 @@@@ int UDPSocketLibevent::SetMulticastOptions() {
d22 1
a22 1
@@@@ -705,7 +705,7 @@@@ int UDPSocketLibevent::JoinGroup(const IPAddressNumber
@


1.5
log
@update to 42.0.2311.90
@
text
@d1 4
a4 4
$OpenBSD: patch-net_udp_udp_socket_libevent_cc,v 1.4 2015/03/18 19:26:29 robert Exp $
--- net/udp/udp_socket_libevent.cc.orig.port	Wed Apr 15 00:31:23 2015
+++ net/udp/udp_socket_libevent.cc	Wed Apr 15 08:32:50 2015
@@@@ -36,7 +36,7 @@@@ const int kBindRetries = 10;
d13 1
a13 1
@@@@ -547,7 +547,7 @@@@ int UDPSocketLibevent::SetMulticastOptions() {
d22 1
a22 1
@@@@ -622,7 +622,7 @@@@ int UDPSocketLibevent::JoinGroup(const IPAddressNumber
@


1.4
log
@update to 41.0.2272.89
@
text
@d1 4
a4 4
$OpenBSD: patch-net_udp_udp_socket_libevent_cc,v 1.3 2014/07/20 17:22:34 robert Exp $
--- net/udp/udp_socket_libevent.cc.orig.port	Tue Mar 10 23:41:42 2015
+++ net/udp/udp_socket_libevent.cc	Wed Mar 11 07:22:50 2015
@@@@ -37,7 +37,7 @@@@ const int kBindRetries = 10;
d13 1
a13 1
@@@@ -553,7 +553,7 @@@@ int UDPSocketLibevent::SetMulticastOptions() {
d22 1
a22 1
@@@@ -628,7 +628,7 @@@@ int UDPSocketLibevent::JoinGroup(const IPAddressNumber
@


1.3
log
@update to 36.0.1985.125;

from this release Chromium uses Aura instead of Gtk+ so the UI will look
a bit different, and that is completely normal.
@
text
@d1 4
a4 4
$OpenBSD: patch-net_udp_udp_socket_libevent_cc,v 1.2 2014/04/17 16:27:53 robert Exp $
--- net/udp/udp_socket_libevent.cc.orig.port	Tue Jul 15 13:02:58 2014
+++ net/udp/udp_socket_libevent.cc	Thu Jul 17 12:25:31 2014
@@@@ -36,7 +36,7 @@@@ const int kBindRetries = 10;
d13 1
a13 1
@@@@ -571,7 +571,7 @@@@ int UDPSocketLibevent::SetSocketOptions() {
d22 1
a22 1
@@@@ -646,7 +646,7 @@@@ int UDPSocketLibevent::JoinGroup(const IPAddressNumber
@


1.2
log
@update to 34.0.1847.116 and disable Werror for the future clang update
@
text
@d1 3
a3 3
$OpenBSD: patch-net_udp_udp_socket_libevent_cc,v 1.1 2014/03/11 14:52:01 robert Exp $
--- net/udp/udp_socket_libevent.cc.orig.port	Wed Apr  2 21:03:39 2014
+++ net/udp/udp_socket_libevent.cc	Sat Apr 12 09:40:41 2014
d13 1
a13 1
@@@@ -569,7 +569,7 @@@@ int UDPSocketLibevent::SetSocketOptions() {
d22 1
a22 1
@@@@ -644,7 +644,7 @@@@ int UDPSocketLibevent::JoinGroup(const IPAddressNumber
@


1.1
log
@update to 33.0.1750.146
@
text
@d1 3
a3 3
$OpenBSD$
--- net/udp/udp_socket_libevent.cc.orig.port	Fri Feb 21 23:57:24 2014
+++ net/udp/udp_socket_libevent.cc	Fri Feb 21 23:58:33 2014
d22 1
a22 1
@@@@ -637,7 +637,7 @@@@ int UDPSocketLibevent::JoinGroup(const IPAddressNumber
@

