head	1.4;
access;
symbols
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2011.04.29.13.18.01;	author robert;	state dead;
branches;
next	1.3;

1.3
date	2011.03.15.11.38.05;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.02.08.09.43.02;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.45;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@$OpenBSD: patch-chrome_browser_zygote_host_linux_cc,v 1.3 2011/03/15 11:38:05 robert Exp $
--- chrome/browser/zygote_host_linux.cc.orig	Fri Mar 11 10:01:43 2011
+++ chrome/browser/zygote_host_linux.cc	Mon Mar 14 10:55:37 2011
@@@@ -61,7 +61,12 @@@@ ZygoteHost::ZygoteHost()
 }
 
 ZygoteHost::~ZygoteHost() {
+    Pickle pickle;
   if (init_)
+#if defined(OS_OPENBSD)
+    pickle.WriteInt(kCmdEnd);
+    HANDLE_EINTR(write(control_fd_, pickle.data(), pickle.size()));
+#endif
     close(control_fd_);
 }
 
@@@@ -81,7 +86,12 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
   cmd_line.AppendSwitchASCII(switches::kProcessType, switches::kZygoteProcess);
 
   int fds[2];
+#if defined(OS_OPENBSD)
+  if (socketpair(PF_UNIX, SOCK_SEQPACKET, 0, fds) != 0)
+    CHECK(socketpair(PF_UNIX, SOCK_DGRAM, 0, fds) == 0);
+#else
   CHECK(socketpair(PF_UNIX, SOCK_SEQPACKET, 0, fds) == 0);
+#endif
   base::file_handle_mapping_vector fds_to_map;
   fds_to_map.push_back(std::make_pair(fds[1], 3));
 
@@@@ -149,6 +159,7 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
     // We need to look for it.
     // But first, wait for the zygote to tell us it's running.
     // The sending code is in chrome/browser/zygote_main_linux.cc.
+#if defined(OS_LINUX)
     std::vector<int> fds_vec;
     const int kExpectedLength = sizeof(kZygoteMagic);
     char buf[kExpectedLength];
@@@@ -179,6 +190,7 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
       // Reap the sandbox.
       ProcessWatcher::EnsureProcessGetsReaped(process);
     }
+#endif // defined(OS_LINUX)
   } else {
     // Not using the SUID sandbox.
     pid_ = process;
@@@@ -246,12 +258,15 @@@@ pid_t ZygoteHost::ForkRenderer(
       return base::kNullProcessHandle;
   }
 
+#if defined(OS_LINUX)
   const int kRendererScore = 5;
   AdjustRendererOOMScore(pid, kRendererScore);
+#endif
 
   return pid;
 }
 
+#if defined(OS_LINUX)
 void ZygoteHost::AdjustRendererOOMScore(base::ProcessHandle pid, int score) {
   // 1) You can't change the oom_adj of a non-dumpable process (EPERM) unless
   //    you're root. Because of this, we can't set the oom_adj from the browser
@@@@ -303,6 +318,7 @@@@ void ZygoteHost::AdjustRendererOOMScore(base::ProcessH
       PLOG(ERROR) << "Failed to adjust OOM score of renderer with pid " << pid;
   }
 }
+#endif  // defined(OS_LINUX)
 
 void ZygoteHost::EnsureProcessTerminated(pid_t process) {
   DCHECK(init_);
@


1.3
log
@update to 10.0.648.133
@
text
@d1 1
a1 1
$OpenBSD: patch-chrome_browser_zygote_host_linux_cc,v 1.2 2011/02/08 09:43:02 espie Exp $
@


1.2
log
@late update to chromium 9, robert@@ did the work, but he doesn't have the
time right now.
Tree is still locked!
Reasons for the update:
- good work that can be used now
- only builds on i386/amd64, and they're fast
- multiple security problems in old chrome
- old chrome half working, can't break it more than it was.

This one requires resources (see MESSAGE), but it's ways more stable.

Again, discussed with sthen@@, jasper@@, naddy@@, miod@@
@
text
@d1 4
a4 4
$OpenBSD$
--- chrome/browser/zygote_host_linux.cc.orig	Fri Jan 21 10:20:26 2011
+++ chrome/browser/zygote_host_linux.cc	Sun Jan 23 23:27:33 2011
@@@@ -62,7 +62,12 @@@@ ZygoteHost::ZygoteHost()
d17 1
a17 1
@@@@ -77,7 +82,12 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
d30 1
a30 1
@@@@ -148,6 +158,7 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
d38 1
a38 1
@@@@ -177,6 +188,7 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
d46 1
a46 1
@@@@ -242,12 +254,15 @@@@ pid_t ZygoteHost::ForkRenderer(
d62 1
a62 1
@@@@ -299,6 +314,7 @@@@ void ZygoteHost::AdjustRendererOOMScore(base::ProcessH
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d2 17
a18 4
--- chrome/browser/zygote_host_linux.cc.orig	Tue Mar 30 07:29:49 2010
+++ chrome/browser/zygote_host_linux.cc	Sun Nov 28 00:11:31 2010
@@@@ -70,7 +70,12 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
                                  switches::kZygoteProcess);
d30 19
a48 2
@@@@ -215,6 +220,7 @@@@ pid_t ZygoteHost::ForkRenderer(
     return base::kNullProcessHandle;
d50 1
d52 6
d59 5
a63 6
   if (using_suid_sandbox_) {
     base::ProcessHandle sandbox_helper_process;
     base::file_handle_mapping_vector dummy_map;
@@@@ -232,6 +238,7 @@@@ pid_t ZygoteHost::ForkRenderer(
   } else {
     base::AdjustOOMScore(pid, kRendererScore);
d65 1
d68 2
a69 2
   return pid;
 }
@

