head	1.6;
access;
symbols
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4;
locks; strict;
comment	@# @;


1.6
date	2015.08.16.20.42.46;	author robert;	state dead;
branches;
next	1.5;
commitid	UFytJBj1eg3jtj0e;

1.5
date	2015.08.12.05.55.16;	author robert;	state Exp;
branches;
next	1.4;
commitid	XfzSnOIYa9PRzMMq;

1.4
date	2015.07.23.13.44.04;	author robert;	state Exp;
branches;
next	1.3;
commitid	vxhJdppNzKtP7lYz;

1.3
date	2015.05.24.15.51.53;	author robert;	state Exp;
branches;
next	1.2;
commitid	rFaYcWD2ntiXn5nr;

1.2
date	2015.04.27.16.38.25;	author robert;	state Exp;
branches;
next	1.1;
commitid	jwX00slFR1NY9xHC;

1.1
date	2015.03.21.14.11.19;	author robert;	state Exp;
branches;
next	;
commitid	Kg1xuyx3ToAqDyEk;


desc
@@


1.6
log
@drop the dependency on libusb in favor of the internal libusb due to
extra functionality implemented in the bundled version
@
text
@$OpenBSD: patch-device_usb_usb_service_impl_cc,v 1.5 2015/08/12 05:55:16 robert Exp $
--- device/usb/usb_service_impl.cc.orig.port	Tue Aug 11 22:09:35 2015
+++ device/usb/usb_service_impl.cc	Wed Aug 12 07:52:18 2015
@@@@ -286,12 +286,15 @@@@ UsbServiceImpl::UsbServiceImpl(
     PlatformUsbContext context,
     scoped_refptr<base::SequencedTaskRunner> blocking_task_runner)
     : context_(new UsbContext(context)),
+#if !defined(OS_BSD)
       task_runner_(base::ThreadTaskRunnerHandle::Get()),
+#endif
       blocking_task_runner_(blocking_task_runner),
 #if defined(OS_WIN)
       device_observer_(this),
 #endif
       weak_factory_(this) {
+#if !defined(OS_BSD)
   base::MessageLoop::current()->AddDestructionObserver(this);
 
   int rv = libusb_hotplug_register_callback(
@@@@ -321,17 +324,20 @@@@ UsbServiceImpl::UsbServiceImpl(
     }
 #endif  // OS_WIN
   }
+#endif
 }
 
 UsbServiceImpl::~UsbServiceImpl() {
   base::MessageLoop::current()->RemoveDestructionObserver(this);
 
+#if !defined(OS_BSD)
   if (hotplug_enabled_) {
     libusb_hotplug_deregister_callback(context_->context(), hotplug_handle_);
   }
   for (const auto& map_entry : devices_) {
     map_entry.second->OnDisconnect();
   }
+#endif
 }
 
 scoped_refptr<UsbDevice> UsbServiceImpl::GetDeviceById(uint32 unique_id) {
@@@@ -572,6 +578,7 @@@@ void UsbServiceImpl::RemoveDevice(scoped_refptr<UsbDev
   device->OnDisconnect();
 }
 
+#if !defined(OS_BSD)
 // static
 int LIBUSB_CALL UsbServiceImpl::HotplugCallback(libusb_context* context,
                                                 PlatformUsbDevice device,
@@@@ -609,6 +616,7 @@@@ int LIBUSB_CALL UsbServiceImpl::HotplugCallback(libusb
 
   return 0;
 }
+#endif
 
 void UsbServiceImpl::OnPlatformDeviceAdded(PlatformUsbDevice platform_device) {
   DCHECK(CalledOnValidThread());
@


1.5
log
@update to 44.0.2403.155
@
text
@d1 1
a1 1
$OpenBSD: patch-device_usb_usb_service_impl_cc,v 1.4 2015/07/23 13:44:04 robert Exp $
@


1.4
log
@update to 44.0.2403.89
@
text
@d1 3
a3 3
$OpenBSD$
--- device/usb/usb_service_impl.cc.orig.port	Wed Jul 22 09:49:51 2015
+++ device/usb/usb_service_impl.cc	Wed Jul 22 10:05:18 2015
d41 1
a41 1
@@@@ -566,6 +572,7 @@@@ void UsbServiceImpl::RemoveDevice(scoped_refptr<UsbDev
d49 1
a49 1
@@@@ -603,6 +610,7 @@@@ int LIBUSB_CALL UsbServiceImpl::HotplugCallback(libusb
@


1.3
log
@update to 43.0.2357.65
@
text
@d1 14
a14 6
$OpenBSD: patch-device_usb_usb_service_impl_cc,v 1.2 2015/04/27 16:38:25 robert Exp $
--- device/usb/usb_service_impl.cc.orig.port	Thu May 14 00:35:46 2015
+++ device/usb/usb_service_impl.cc	Wed May 20 08:34:56 2015
@@@@ -183,6 +183,7 @@@@ UsbServiceImpl::UsbServiceImpl(
       next_unique_id_(0),
       hotplug_enabled_(false),
d17 2
a18 1
   task_runner_ = base::ThreadTaskRunnerHandle::Get();
d20 2
a21 3
       context_->context(),
@@@@ -201,9 +202,11 @@@@ UsbServiceImpl::UsbServiceImpl(
                                          base::Unretained(ui_thread_helper_)));
d28 2
a33 1
@@@@ -215,6 +218,7 @@@@ UsbServiceImpl::~UsbServiceImpl() {
d40 3
a42 3
 void UsbServiceImpl::RefreshDevices() {
@@@@ -336,6 +340,7 @@@@ scoped_refptr<UsbDeviceImpl> UsbServiceImpl::AddDevice
   }
d49 1
a49 1
@@@@ -373,6 +378,7 @@@@ int LIBUSB_CALL UsbServiceImpl::HotplugCallback(libusb
d55 1
a55 1
 void UsbServiceImpl::OnDeviceAdded(PlatformUsbDevice platform_device) {
@


1.2
log
@update to 42.0.2311.90
@
text
@d1 4
a4 4
$OpenBSD$
--- device/usb/usb_service_impl.cc.orig.port	Wed Apr 15 09:33:55 2015
+++ device/usb/usb_service_impl.cc	Wed Apr 22 21:25:53 2015
@@@@ -112,6 +112,7 @@@@ UsbServiceImpl::UsbServiceImpl(
d12 1
a12 1
@@@@ -130,9 +131,11 @@@@ UsbServiceImpl::UsbServiceImpl(
d24 1
a24 1
@@@@ -144,6 +147,7 @@@@ UsbServiceImpl::~UsbServiceImpl() {
d32 1
a32 1
@@@@ -219,6 +223,7 @@@@ scoped_refptr<UsbDeviceImpl> UsbServiceImpl::AddDevice
d40 1
a40 1
@@@@ -256,6 +261,7 @@@@ int LIBUSB_CALL UsbServiceImpl::HotplugCallback(libusb
@


1.1
log
@update to 41.0.2272.101 and add missing patches from last commit
@
text
@d2 3
a4 27
--- device/usb/usb_service_impl.cc.orig.port	Fri Mar 20 04:21:23 2015
+++ device/usb/usb_service_impl.cc	Sat Mar 21 12:29:48 2015
@@@@ -60,11 +60,13 @@@@ class UsbServiceImpl : public UsbService,
   // Adds a new UsbDevice to the devices_ map based on the given libusb device.
   scoped_refptr<UsbDeviceImpl> AddDevice(PlatformUsbDevice platform_device);
 
+#if !defined(OS_BSD)
   // Handle hotplug events from libusb.
   static int LIBUSB_CALL HotplugCallback(libusb_context* context,
                                          PlatformUsbDevice device,
                                          libusb_hotplug_event event,
                                          void* user_data);
+#endif
   // These functions release a reference to the provided platform device.
   void OnDeviceAdded(PlatformUsbDevice platform_device);
   void OnDeviceRemoved(PlatformUsbDevice platform_device);
@@@@ -85,7 +87,9 @@@@ class UsbServiceImpl : public UsbService,
   // connected instead of only when a full enumeration is requested.
   // TODO(reillyg): Support this on all platforms. crbug.com/411715
   bool hotplug_enabled_;
+#if !defined(OS_BSD)
   libusb_hotplug_callback_handle hotplug_handle_;
+#endif
 
   // The map from unique IDs to UsbDevices.
   typedef std::map<uint32, scoped_refptr<UsbDeviceImpl> > DeviceMap;
@@@@ -177,6 +181,9 @@@@ UsbServiceImpl::UsbServiceImpl(
d8 1
a8 4
+#if defined(OS_BSD)
+  hotplug_enabled_ = false;
+#else
   base::MessageLoop::current()->AddDestructionObserver(this);
d11 2
a12 1
@@@@ -196,9 +203,11 @@@@ UsbServiceImpl::UsbServiceImpl(
a20 1
   base::MessageLoop::current()->RemoveDestructionObserver(this);
d23 2
a24 1
@@@@ -211,6 +220,7 @@@@ UsbServiceImpl::~UsbServiceImpl() {
d32 1
a32 1
@@@@ -286,6 +296,7 @@@@ scoped_refptr<UsbDeviceImpl> UsbServiceImpl::AddDevice
d40 1
a40 1
@@@@ -323,6 +334,7 @@@@ int LIBUSB_CALL UsbServiceImpl::HotplugCallback(libusb
@

