head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.10.14.16.42.07;	author robert;	state dead;
branches;
next	1.3;
commitid	iw6THZfJQngZlw1r;

1.3
date	2015.05.24.15.51.53;	author robert;	state Exp;
branches;
next	1.2;
commitid	rFaYcWD2ntiXn5nr;

1.2
date	2015.03.18.19.26.29;	author robert;	state Exp;
branches;
next	1.1;
commitid	aPwx9j7rbIsa650M;

1.1
date	2014.09.11.19.04.52;	author robert;	state Exp;
branches;
next	;
commitid	WrglT9ERNBhPArdd;


desc
@@


1.4
log
@update to 46.0.2490.71
@
text
@$OpenBSD: patch-media_video_capture_video_capture_device_factory_cc,v 1.3 2015/05/24 15:51:53 robert Exp $
--- media/video/capture/video_capture_device_factory.cc.orig.port	Thu May 14 00:23:08 2015
+++ media/video/capture/video_capture_device_factory.cc	Sun May 24 17:45:34 2015
@@@@ -14,6 +14,10 @@@@ namespace media {
 // static
 scoped_ptr<VideoCaptureDeviceFactory> VideoCaptureDeviceFactory::CreateFactory(
     scoped_refptr<base::SingleThreadTaskRunner> ui_task_runner) {
+#if defined(OS_BSD)
+  return scoped_ptr<VideoCaptureDeviceFactory>(new
+      media::FakeVideoCaptureDeviceFactory());
+#else
   const base::CommandLine* command_line =
       base::CommandLine::ForCurrentProcess();
   // Use a Fake or File Video Device Factory if the command line flags are
@@@@ -32,6 +36,7 @@@@ scoped_ptr<VideoCaptureDeviceFactory> VideoCaptureDevi
     return scoped_ptr<VideoCaptureDeviceFactory>(
         CreateVideoCaptureDeviceFactory(ui_task_runner));
   }
+#endif
 }
 
 VideoCaptureDeviceFactory::VideoCaptureDeviceFactory() {
@


1.3
log
@update to 43.0.2357.65
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to 41.0.2272.89
@
text
@d2 18
a19 4
--- media/video/capture/video_capture_device_factory.cc.orig.port	Wed Mar 11 07:46:10 2015
+++ media/video/capture/video_capture_device_factory.cc	Wed Mar 11 07:46:27 2015
@@@@ -50,7 +50,7 @@@@ void VideoCaptureDeviceFactory::EnumerateDeviceNames(c
   callback.Run(device_names.Pass());
d22 1
a22 5
-#if !defined(OS_MACOSX) && !defined(OS_LINUX) && !defined(OS_ANDROID) && !defined(OS_WIN)
+#if !defined(OS_MACOSX) && !defined(OS_LINUX) && !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_BSD)
 // static
 VideoCaptureDeviceFactory*
 VideoCaptureDeviceFactory::CreateVideoCaptureDeviceFactory(
@


1.1
log
@update to 37.0.2062.120
@
text
@d2 5
a6 3
--- media/video/capture/video_capture_device_factory.cc.orig.port	Thu Sep 11 10:16:14 2014
+++ media/video/capture/video_capture_device_factory.cc	Thu Sep 11 10:16:31 2014
@@@@ -11,7 +11,7 @@@@
d8 5
a12 16
 #if defined(OS_MACOSX)
 #include "media/video/capture/mac/video_capture_device_factory_mac.h"
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_BSD)
 #include "media/video/capture/linux/video_capture_device_factory_linux.h"
 #elif defined(OS_ANDROID)
 #include "media/video/capture/android/video_capture_device_factory_android.h"
@@@@ -41,7 +41,7 @@@@ scoped_ptr<VideoCaptureDeviceFactory> VideoCaptureDevi
 #if defined(OS_MACOSX)
     return scoped_ptr<VideoCaptureDeviceFactory>(new
         VideoCaptureDeviceFactoryMac(ui_task_runner));
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_BSD) /* XXXROBERT */
     return scoped_ptr<VideoCaptureDeviceFactory>(new
         VideoCaptureDeviceFactoryLinux(ui_task_runner));
 #elif defined(OS_ANDROID)
@

