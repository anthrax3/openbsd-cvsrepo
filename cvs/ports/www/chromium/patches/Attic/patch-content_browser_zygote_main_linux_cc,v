head	1.7;
access;
symbols
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2012.02.17.10.19.51;	author robert;	state dead;
branches;
next	1.6;

1.6
date	2011.12.14.16.58.19;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2011.10.27.07.59.09;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.19.08.55.26;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.08.16.08.17.44;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.06.08.20.36.56;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.29.13.18.01;	author robert;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update to 17.0.963.56
@
text
@$OpenBSD: patch-content_browser_zygote_main_linux_cc,v 1.6 2011/12/14 16:58:19 robert Exp $
--- content/browser/zygote_main_linux.cc.orig	Wed Dec  7 09:01:17 2011
+++ content/browser/zygote_main_linux.cc	Tue Dec 13 21:23:12 2011
@@@@ -715,6 +715,7 @@@@ static bool EnterSandbox() {
     SkiaFontConfigSetImplementation(
         new FontConfigIPC(kMagicSandboxIPCDescriptor));
 
+#if defined(OS_LINUX)
     // Previously, we required that the binary be non-readable. This causes the
     // kernel to mark the process as non-dumpable at startup. The thinking was
     // that, although we were putting the renderers into a PID namespace (with
@@@@ -740,6 +741,7 @@@@ static bool EnterSandbox() {
         return false;
       }
     }
+#endif
 #if defined(SECCOMP_SANDBOX)
   } else if (SeccompSandboxEnabled()) {
     PreSandboxInit();
@


1.6
log
@update to 16.0.912.63
@
text
@d1 1
a1 1
$OpenBSD: patch-content_browser_zygote_main_linux_cc,v 1.5 2011/10/27 07:59:09 robert Exp $
@


1.5
log
@update to 15.0.874.102.

switch from using the hacked macosx transport dib to the linux one
which uses sysv shms.
make sure you also have a current kernel before using this version
@
text
@d1 4
a4 4
$OpenBSD$
--- content/browser/zygote_main_linux.cc.orig	Fri Oct 21 10:29:43 2011
+++ content/browser/zygote_main_linux.cc	Wed Oct 26 14:10:40 2011
@@@@ -711,6 +711,7 @@@@ static bool EnterSandbox() {
d12 1
a12 1
@@@@ -736,6 +737,7 @@@@ static bool EnterSandbox() {
@


1.4
log
@update to 14.0.835.163
@
text
@d2 3
a4 12
--- content/browser/zygote_main_linux.cc.orig	Fri Sep 16 18:22:38 2011
+++ content/browser/zygote_main_linux.cc	Fri Sep 16 18:23:42 2011
@@@@ -57,7 +57,7 @@@@
 #endif
 
 #if defined(ARCH_CPU_X86_FAMILY) && !defined(CHROMIUM_SELINUX) && \
-    !defined(__clang__)
+    !defined(__clang__) && !defined(__OpenBSD__)
 // The seccomp sandbox is enabled on all ia32 and x86-64 processor as long as
 // we aren't using SELinux or clang.
 #define SECCOMP_SANDBOX
@@@@ -701,6 +701,7 @@@@ static bool EnterSandbox() {
d8 1
a8 1
+#if !defined(OS_OPENBSD)
d12 1
a12 1
@@@@ -726,6 +727,7 @@@@ static bool EnterSandbox() {
d17 2
a18 2
   } else if (CommandLine::ForCurrentProcess()->HasSwitch(
         switches::kEnableSeccompSandbox)) {
@


1.3
log
@update to the next stable release (13.0.782.112)
@
text
@d2 3
a4 3
--- content/browser/zygote_main_linux.cc.orig	Wed Aug  3 12:04:51 2011
+++ content/browser/zygote_main_linux.cc	Wed Aug  3 12:06:57 2011
@@@@ -58,7 +58,7 @@@@
d9 1
a9 1
+    !defined(__clang__) && !defined(OS_OPENBSD)
d13 1
a13 1
@@@@ -668,6 +668,7 @@@@ static bool EnterSandbox() {
d21 1
a21 1
@@@@ -693,6 +694,7 @@@@ static bool EnterSandbox() {
@


1.2
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@d1 5
a5 24
$OpenBSD: patch-content_browser_zygote_main_linux_cc,v 1.1 2011/04/29 13:18:01 robert Exp $
--- content/browser/zygote_main_linux.cc.orig	Mon Jun  6 11:11:28 2011
+++ content/browser/zygote_main_linux.cc	Wed Jun  8 09:58:36 2011
@@@@ -2,12 +2,18 @@@@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
+#include "build/build_config.h"
+
 #include <dlfcn.h>
 #include <fcntl.h>
 #include <pthread.h>
+#if defined(OS_OPENBSD)
+#include <signal.h>
+#else
 #include <sys/epoll.h>
 #include <sys/prctl.h>
 #include <sys/signal.h>
+#endif
 #include <sys/socket.h>
 #include <sys/stat.h>
 #include <sys/types.h>
@@@@ -53,7 +59,7 @@@@
 #include "unicode/timezone.h"
d13 1
a13 13
@@@@ -176,6 +182,11 @@@@ class Zygote {
         case ZygoteHost::kCmdGetSandboxStatus:
           HandleGetSandboxStatus(fd, pickle, iter);
           return false;
+#if defined(OS_OPENBSD)
+        case ZygoteHost::kCmdEnd:
+          _exit(0);
+          return false;
+#endif
         default:
           NOTREACHED();
           break;
@@@@ -663,6 +674,7 @@@@ static bool EnterSandbox() {
d21 1
a21 1
@@@@ -688,6 +700,7 @@@@ static bool EnterSandbox() {
@


1.1
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@d1 3
a3 3
$OpenBSD$
--- content/browser/zygote_main_linux.cc.orig	Thu Apr 28 11:39:21 2011
+++ content/browser/zygote_main_linux.cc	Thu Apr 28 11:40:51 2011
d23 1
a23 1
@@@@ -51,7 +57,7 @@@@
d32 1
a32 1
@@@@ -174,6 +180,11 @@@@ class Zygote {
d44 1
a44 1
@@@@ -649,6 +660,7 @@@@ static bool EnterSandbox() {
d52 1
a52 1
@@@@ -674,6 +686,7 @@@@ static bool EnterSandbox() {
@

