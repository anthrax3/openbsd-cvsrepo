head	1.4;
access;
symbols
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.06.08.20.36.56;	author robert;	state dead;
branches;
next	1.3;

1.3
date	2011.04.29.13.18.01;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.15.11.38.05;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.02.08.09.43.02;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@$OpenBSD: patch-base_logging_h,v 1.3 2011/04/29 13:18:01 robert Exp $
--- base/logging.h.orig	Tue Apr 26 10:01:34 2011
+++ base/logging.h	Thu Apr 28 11:17:49 2011
@@@@ -141,6 +141,18 @@@@
 // There is also the special severity of DFATAL, which logs FATAL in
 // debug mode, ERROR in normal mode.
 
+// XXX better comment -- must be before we use << and in global namespace
+// These functions are provided as a convenience for logging, which is where we
+// use streams (it is against Google style to use streams in other places). It
+// is designed to allow you to emit non-ASCII Unicode strings to the log file,
+// which is normally ASCII. It is relatively slow, so try not to use it for
+// common cases. Non-ASCII characters will be converted to UTF-8 by these
+// operators.
+std::ostream& operator<<(std::ostream& out, const wchar_t* wstr);
+inline std::ostream& operator<<(std::ostream& out, const std::wstring& wstr) {
+  return out << wstr.c_str();
+}
+
 namespace logging {
 
 // Where to record logging output? A flat file and/or system debug log via
@@@@ -878,17 +890,6 @@@@ void RawLog(int level, const char* message);
   } while (0)
 
 }  // namespace logging
-
-// These functions are provided as a convenience for logging, which is where we
-// use streams (it is against Google style to use streams in other places). It
-// is designed to allow you to emit non-ASCII Unicode strings to the log file,
-// which is normally ASCII. It is relatively slow, so try not to use it for
-// common cases. Non-ASCII characters will be converted to UTF-8 by these
-// operators.
-std::ostream& operator<<(std::ostream& out, const wchar_t* wstr);
-inline std::ostream& operator<<(std::ostream& out, const std::wstring& wstr) {
-  return out << wstr.c_str();
-}
 
 // The NOTIMPLEMENTED() macro annotates codepaths which have
 // not been implemented yet.
@


1.3
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@d1 1
a1 1
$OpenBSD: patch-base_logging_h,v 1.2 2011/03/15 11:38:05 robert Exp $
@


1.2
log
@update to 10.0.648.133
@
text
@d1 3
a3 3
$OpenBSD: patch-base_logging_h,v 1.1 2011/02/08 09:43:02 espie Exp $
--- base/logging.h.orig	Fri Mar 11 10:01:33 2011
+++ base/logging.h	Mon Mar 14 10:55:37 2011
d23 1
a23 1
@@@@ -865,17 +877,6 @@@@ void RawLog(int level, const char* message);
@


1.1
log
@late update to chromium 9, robert@@ did the work, but he doesn't have the
time right now.
Tree is still locked!
Reasons for the update:
- good work that can be used now
- only builds on i386/amd64, and they're fast
- multiple security problems in old chrome
- old chrome half working, can't break it more than it was.

This one requires resources (see MESSAGE), but it's ways more stable.

Again, discussed with sthen@@, jasper@@, naddy@@, miod@@
@
text
@d1 3
a3 3
$OpenBSD$
--- base/logging.h.orig	Fri Jan 21 10:20:15 2011
+++ base/logging.h	Sun Jan 23 23:27:31 2011
d23 1
a23 1
@@@@ -856,17 +868,6 @@@@ void RawLog(int level, const char* message);
@

