head	1.5;
access;
symbols
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2012.02.17.10.19.51;	author robert;	state dead;
branches;
next	1.4;

1.4
date	2011.12.14.16.58.19;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.10.27.07.59.09;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.08.16.08.17.44;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.08.20.36.56;	author robert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to 17.0.963.56
@
text
@$OpenBSD: patch-crypto_nss_util_cc,v 1.4 2011/12/14 16:58:19 robert Exp $
--- crypto/nss_util.cc.orig	Wed Dec  7 09:01:18 2011
+++ crypto/nss_util.cc	Tue Dec 13 21:23:12 2011
@@@@ -16,6 +16,9 @@@@
 #if defined(OS_LINUX)
 #include <linux/nfs_fs.h>
 #include <sys/vfs.h>
+#elif defined(OS_OPENBSD)
+#include <sys/param.h>
+#include <sys/mount.h>
 #endif
 
 #include <vector>
@@@@ -156,17 +159,21 @@@@ char* PKCS11PasswordFunc(PK11SlotInfo* slot, PRBool re
 // Because this function sets an environment variable it must be run before we
 // go multi-threaded.
 void UseLocalCacheOfNSSDatabaseIfNFS(const FilePath& database_dir) {
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
   struct statfs buf;
   if (statfs(database_dir.value().c_str(), &buf) == 0) {
+#if defined(OS_LINUX)
     if (buf.f_type == NFS_SUPER_MAGIC) {
+#elif defined(OS_OPENBSD)
+    if (strcmp(buf.f_fstypename, MOUNT_NFS) == 0) {
+#endif
       scoped_ptr<base::Environment> env(base::Environment::Create());
       const char* use_cache_env_var = "NSS_SDB_USE_CACHE";
       if (!env->HasVar(use_cache_env_var))
         env->SetVar(use_cache_env_var, "yes");
     }
   }
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_LINUX) || defined(OS_OPENBSD)
 }
 
 PK11SlotInfo* FindSlotWithTokenName(const std::string& token_name) {
@


1.4
log
@update to 16.0.912.63
@
text
@d1 1
a1 1
$OpenBSD: patch-crypto_nss_util_cc,v 1.3 2011/10/27 07:59:09 robert Exp $
@


1.3
log
@update to 15.0.874.102.

switch from using the hacked macosx transport dib to the linux one
which uses sysv shms.
make sure you also have a current kernel before using this version
@
text
@d1 3
a3 3
$OpenBSD: patch-crypto_nss_util_cc,v 1.2 2011/08/16 08:17:44 robert Exp $
--- crypto/nss_util.cc.orig	Fri Oct 21 10:29:44 2011
+++ crypto/nss_util.cc	Wed Oct 26 13:37:46 2011
d14 1
a14 1
@@@@ -143,17 +146,21 @@@@ char* PKCS11PasswordFunc(PK11SlotInfo* slot, PRBool re
@


1.2
log
@update to the next stable release (13.0.782.112)
@
text
@d1 3
a3 3
$OpenBSD: patch-crypto_nss_util_cc,v 1.1 2011/06/08 20:36:56 robert Exp $
--- crypto/nss_util.cc.orig	Wed Jul 27 10:01:09 2011
+++ crypto/nss_util.cc	Tue Aug  2 20:12:17 2011
d14 1
a14 1
@@@@ -142,17 +145,21 @@@@ char* PKCS11PasswordFunc(PK11SlotInfo* slot, PRBool re
@


1.1
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@d1 3
a3 3
$OpenBSD$
--- crypto/nss_util.cc.orig	Wed Jun  8 10:16:52 2011
+++ crypto/nss_util.cc	Wed Jun  8 10:17:40 2011
d37 1
a37 1
 // A helper class that acquires the SECMOD list read lock while the
@

