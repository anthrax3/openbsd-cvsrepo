head	1.10;
access;
symbols
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.10
date	2012.07.10.09.22.34;	author robert;	state dead;
branches;
next	1.9;

1.9
date	2012.04.03.13.59.35;	author robert;	state Exp;
branches;
next	1.8;

1.8
date	2012.02.17.10.19.51;	author robert;	state dead;
branches;
next	1.7;

1.7
date	2011.12.14.16.58.19;	author robert;	state Exp;
branches;
next	1.6;

1.6
date	2011.09.19.08.55.26;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2011.05.20.08.35.24;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2011.04.29.13.18.01;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.15.11.38.05;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.02.08.09.43.02;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.46;	author espie;	state Exp;
branches;
next	;


desc
@@


1.10
log
@update to 20.0.1132.47
@
text
@$OpenBSD: patch-media_audio_openbsd_audio_manager_openbsd_h,v 1.9 2012/04/03 13:59:35 robert Exp $
--- media/audio/openbsd/audio_manager_openbsd.h.orig	Sun Apr  1 22:57:39 2012
+++ media/audio/openbsd/audio_manager_openbsd.h	Sun Apr  1 22:57:49 2012
@@@@ -34,7 +34,7 @@@@ class MEDIA_EXPORT AudioManagerOpenBSD : public AudioM
   virtual ~AudioManagerOpenBSD();
 
  private:
-  std::set<AudioOutputStream*> active_streams_;
+  size_t active_output_stream_count_;
 
   DISALLOW_COPY_AND_ASSIGN(AudioManagerOpenBSD);
 };
@


1.9
log
@update to 18.0.1025.142; requires gcc 4.6 from now on
@
text
@d1 1
a1 1
$OpenBSD$
@


1.8
log
@update to 17.0.963.56
@
text
@d1 4
a4 39
$OpenBSD: patch-media_audio_openbsd_audio_manager_openbsd_h,v 1.7 2011/12/14 16:58:19 robert Exp $
--- media/audio/openbsd/audio_manager_openbsd.h.orig	Tue Dec 13 21:35:44 2011
+++ media/audio/openbsd/audio_manager_openbsd.h	Tue Dec 13 23:29:24 2011
@@@@ -5,31 +5,37 @@@@
 #ifndef MEDIA_AUDIO_OPENBSD_AUDIO_MANAGER_OPENBSD_H_
 #define MEDIA_AUDIO_OPENBSD_AUDIO_MANAGER_OPENBSD_H_
 
+#include <set>
+
 #include "base/compiler_specific.h"
-#include "media/audio/audio_io.h"
+#include "media/audio/audio_manager_base.h"
 
-class AudioManagerOpenBSD : public AudioManagerBase {
+class MEDIA_EXPORT AudioManagerOpenBSD : public AudioManagerBase {
  public:
   AudioManagerOpenBSD();
 
   // Call before using a newly created AudioManagerOpenBSD instance.
-  virtual void Init();
+  virtual void Init() OVERRIDE;
 
   // Implementation of AudioManager.
   virtual bool HasAudioOutputDevices() OVERRIDE;
   virtual bool HasAudioInputDevices() OVERRIDE;
   virtual AudioOutputStream* MakeAudioOutputStream(
       const AudioParameters& params) OVERRIDE;
-  virtual AudioInputStream* MakeAudioInputStream(
-      const AudioParameters& params) OVERRIDE;
-  virtual bool IsRecordingInProgress() OVERRIDE;
+  virtual AudioInputStream* MakeAudioInputStream(const AudioParameters& params)
+      OVERRIDE;
+
   virtual void MuteAll() OVERRIDE;
   virtual void UnMuteAll() OVERRIDE;
 
+  virtual void ReleaseOutputStream(AudioOutputStream* stream);
+
  protected:
d8 3
a10 2
+  std::set<AudioOutputStream*> active_streams_;
+
a12 1
 
@


1.7
log
@update to 16.0.912.63
@
text
@d1 1
a1 1
$OpenBSD$
@


1.6
log
@update to 14.0.835.163
@
text
@d1 4
a4 4
$OpenBSD: patch-media_audio_openbsd_audio_manager_openbsd_h,v 1.5 2011/05/20 08:35:24 robert Exp $
--- media/audio/openbsd/audio_manager_openbsd.h.orig	Tue Aug 23 10:28:23 2011
+++ media/audio/openbsd/audio_manager_openbsd.h	Wed Aug 24 10:54:23 2011
@@@@ -5,15 +5,16 @@@@
d8 3
a11 1
+#include "base/basictypes.h"
d14 2
a15 4
+class PCMQueueInAudioInputStream;
+class PCMQueueOutAudioOutputStream;
+
 class AudioManagerOpenBSD : public AudioManagerBase {
d19 1
a19 1
-  // Call before using a newly created AudioManagerOpenBSD instance.
d21 2
a22 1
-
d24 17
a40 10
   virtual bool HasAudioOutputDevices();
   virtual bool HasAudioInputDevices();
@@@@ -24,10 +25,12 @@@@ class AudioManagerOpenBSD : public AudioManagerBase {
   virtual void MuteAll();
   virtual void UnMuteAll();
 
- protected:
-  virtual ~AudioManagerOpenBSD();
+  void ReleaseOutputStream(PCMQueueOutAudioOutputStream* stream);
+  void ReleaseInputStream(PCMQueueInAudioInputStream* stream);
d43 1
a43 1
+  virtual ~AudioManagerOpenBSD();
@


1.5
log
@Add WIP progress sndio support to chrome, developed by jakemsr@@ and
with modifications by me.
It is not working yet so you can only enable it by setting the
CHROME_SNDIO environment variable, so by default nothing changes.
I commit this so that other people can work on it too.
@
text
@d1 3
a3 3
$OpenBSD: patch-media_audio_openbsd_audio_manager_openbsd_h,v 1.4 2011/04/29 13:18:01 robert Exp $
--- media/audio/openbsd/audio_manager_openbsd.h.orig	Sat May  7 11:39:59 2011
+++ media/audio/openbsd/audio_manager_openbsd.h	Thu May 19 14:20:55 2011
d25 1
a25 1
@@@@ -22,10 +23,12 @@@@ class AudioManagerOpenBSD : public AudioManagerBase {
@


1.4
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@d1 4
a4 4
$OpenBSD: patch-media_audio_openbsd_audio_manager_openbsd_h,v 1.3 2011/03/15 11:38:05 robert Exp $
--- media/audio/openbsd/audio_manager_openbsd.h.orig	Tue Apr 26 10:01:05 2011
+++ media/audio/openbsd/audio_manager_openbsd.h	Fri Apr 29 09:48:16 2011
@@@@ -5,8 +5,16 @@@@
d9 2
a10 1
+#include <map>
d12 2
a13 7
+#include "base/ref_counted.h"
+#include "base/scoped_ptr.h"
+#include "base/synchronization/lock.h"
+#include "base/threading/thread.h"
+#include "media/audio/audio_manager_base.h"
+
+class AlsaPcmOutputStream;
d18 6
a23 1
@@@@ -19,6 +27,7 @@@@ class AudioManagerOpenBSD : public AudioManagerBase {
d25 1
a25 3
   virtual AudioOutputStream* MakeAudioOutputStream(AudioParameters params);
   virtual AudioInputStream* MakeAudioInputStream(AudioParameters params);
+
d28 11
@


1.3
log
@update to 10.0.648.133
@
text
@d1 3
a3 3
$OpenBSD: patch-media_audio_openbsd_audio_manager_openbsd_h,v 1.2 2011/02/08 09:43:02 espie Exp $
--- media/audio/openbsd/audio_manager_openbsd.h.orig	Fri Mar 11 10:01:05 2011
+++ media/audio/openbsd/audio_manager_openbsd.h	Mon Mar 14 14:21:49 2011
d22 1
a22 1
@@@@ -19,8 +27,11 @@@@ class AudioManagerOpenBSD : public AudioManagerBase {
a28 2
+
+  virtual void ReleaseOutputStream(AlsaPcmOutputStream* stream);
a29 2
  protected:
   virtual ~AudioManagerOpenBSD();
@


1.2
log
@late update to chromium 9, robert@@ did the work, but he doesn't have the
time right now.
Tree is still locked!
Reasons for the update:
- good work that can be used now
- only builds on i386/amd64, and they're fast
- multiple security problems in old chrome
- old chrome half working, can't break it more than it was.

This one requires resources (see MESSAGE), but it's ways more stable.

Again, discussed with sthen@@, jasper@@, naddy@@, miod@@
@
text
@d1 3
a3 3
$OpenBSD$
--- media/audio/openbsd/audio_manager_openbsd.h.orig	Fri Jan 21 10:19:46 2011
+++ media/audio/openbsd/audio_manager_openbsd.h	Mon Jan 24 11:23:50 2011
a10 1
+#include "base/lock.h"
d13 2
a14 1
+#include "base/thread.h"
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d2 32
a33 42
--- media/audio/openbsd/audio_manager_openbsd.h.orig	Sun Nov 28 00:11:32 2010
+++ media/audio/openbsd/audio_manager_openbsd.h	Sun Nov 28 00:11:32 2010
@@@@ -0,0 +1,39 @@@@
+// Copyright (c) 2009 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef MEDIA_AUDIO_OPENBSD_AUDIO_MANAGER_OPENBSD_H_
+#define MEDIA_AUDIO_OPENBSD_AUDIO_MANAGER_OPENBSD_H_
+
+//#include <map>
+
+//#include "base/ref_counted.h"
+//#include "base/scoped_ptr.h"
+//#include "base/thread.h"
+#include "media/audio/audio_output.h"
+
+class AudioManagerOpenBSD : public AudioManager {
+ public:
+  AudioManagerOpenBSD();
+
+  // Call before using a newly created AudioManagerOpenBSD instance.
+  virtual void Init();
+
+  // Implementation of AudioManager.
+  virtual bool HasAudioDevices();
+  virtual AudioOutputStream* MakeAudioStream(Format format, int channels,
+                                             int sample_rate,
+                                             char bits_per_sample);
+  virtual void MuteAll();
+  virtual void UnMuteAll();
+
+ protected:
+  // Friend function for invoking the destructor at exit.
+  friend void DestroyAudioManagerOpenBSD(void*);
+  virtual ~AudioManagerOpenBSD();
+
+ private:
+  DISALLOW_COPY_AND_ASSIGN(AudioManagerOpenBSD);
+};
+
+#endif  // MEDIA_AUDIO_OPENBSD_AUDIO_MANAGER_OPENBSD_H_
@

