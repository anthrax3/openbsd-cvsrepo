head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2011.10.27.07.59.09;	author robert;	state dead;
branches;
next	1.1;

1.1
date	2011.09.19.08.55.26;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to 15.0.874.102.

switch from using the hacked macosx transport dib to the linux one
which uses sysv shms.
make sure you also have a current kernel before using this version
@
text
@$OpenBSD: patch-third_party_webrtc_system_wrappers_source_cpu_cc,v 1.1 2011/09/19 08:55:26 robert Exp $
--- third_party/webrtc/system_wrappers/source/cpu.cc.orig	Wed Aug 24 17:26:48 2011
+++ third_party/webrtc/system_wrappers/source/cpu.cc	Wed Aug 24 17:56:26 2011
@@@@ -20,7 +20,7 @@@@
     #include "cpu_mac.h"
 #elif defined(WEBRTC_MAC_INTEL)
     #include "cpu_mac.h"
-#elif defined(ANDROID)
+#elif defined(ANDROID) || defined(__OpenBSD__)
     // Not implemented yet, might be possible to use Linux implementation
 #else // defined(WEBRTC_LINUX)
     #include <sys/sysinfo.h>
@@@@ -43,7 +43,7 @@@@ WebRtc_UWord32 CpuWrapper::DetectNumberOfCores()
         WEBRTC_TRACE(kTraceStateInfo, kTraceUtility, -1,
                      "Available number of cores:%d", _numberOfCores);
 
-#elif defined(WEBRTC_LINUX) && !defined(ANDROID)
+#elif defined(WEBRTC_LINUX) && !defined(ANDROID) && !defined(__OpenBSD__)
         _numberOfCores = get_nprocs();
         WEBRTC_TRACE(kTraceStateInfo, kTraceUtility, -1,
                      "Available number of cores:%d", _numberOfCores);
@@@@ -78,7 +78,7 @@@@ CpuWrapper* CpuWrapper::CreateCpu()
    return new CpuWindows();
 #elif (defined(WEBRTC_MAC) || defined(WEBRTC_MAC_INTEL))
     return new CpuWrapperMac();
-#elif defined(ANDROID)
+#elif defined(ANDROID) || defined(__OpenBSD__)
     return 0;
 #else
     return new CpuLinux();
@


1.1
log
@update to 14.0.835.163
@
text
@d1 1
a1 1
$OpenBSD$
@

