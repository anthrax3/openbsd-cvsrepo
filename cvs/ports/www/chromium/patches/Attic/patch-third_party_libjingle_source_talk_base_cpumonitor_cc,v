head	1.4;
access;
symbols
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2014.10.13.06.49.19;	author robert;	state dead;
branches;
next	1.3;
commitid	GAMY6AdJxC6cdD6g;

1.3
date	2014.09.11.19.04.52;	author robert;	state Exp;
branches;
next	1.2;
commitid	WrglT9ERNBhPArdd;

1.2
date	2014.01.18.11.42.04;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2013.07.15.14.59.30;	author robert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to 38.0.2125.101
@
text
@$OpenBSD: patch-third_party_libjingle_source_talk_base_cpumonitor_cc,v 1.3 2014/09/11 19:04:52 robert Exp $
--- third_party/libjingle/source/talk/base/cpumonitor.cc.orig.port	Wed Sep 10 01:47:33 2014
+++ third_party/libjingle/source/talk/base/cpumonitor.cc	Wed Sep 10 22:05:41 2014
@@@@ -53,7 +53,7 @@@@
 #include <mach/task.h>
 #endif  // defined(IOS) || defined(OSX)
 
-#if defined(LINUX) || defined(ANDROID)
+#if defined(LINUX) || defined(ANDROID) || defined(OS_BSD)
 #include <sys/resource.h>
 #include <errno.h>
 #include <stdio.h>
@@@@ -286,6 +286,9 @@@@ float CpuSampler::GetSystemLoad() {
   const uint64 total_times = cpu_times + idle;
 #endif  // defined(LINUX) || defined(ANDROID)
 
+#if defined(OPENBSD)
+  return 0;
+#else
 #if defined(__native_client__)
   // TODO(ryanpetrie): Implement this via PPAPI when it's available.
   const uint64 cpu_times = 0;
@@@@ -298,6 +301,7 @@@@ float CpuSampler::GetSystemLoad() {
                                      &system_.prev_total_times_,
                                      &system_.prev_cpu_times_);
   return system_.prev_load_;
+#endif
 }
 
 float CpuSampler::GetProcessLoad() {
@@@@ -359,7 +363,7 @@@@ float CpuSampler::GetProcessLoad() {
       TimeValueTToInt64(task_term_info.system_time));
 #endif  // defined(IOS) || defined(OSX)
 
-#if defined(LINUX) || defined(ANDROID)
+#if defined(LINUX) || defined(ANDROID) || defined(OS_BSD)
   rusage usage;
   if (getrusage(RUSAGE_SELF, &usage) < 0) {
     LOG_ERR(LS_ERROR) << "getrusage failed";
@


1.3
log
@update to 37.0.2062.120
@
text
@d1 1
a1 1
$OpenBSD: patch-third_party_libjingle_source_talk_base_cpumonitor_cc,v 1.2 2014/01/18 11:42:04 robert Exp $
@


1.2
log
@update to 32.0.1700.76
@
text
@d1 4
a4 4
$OpenBSD$
--- third_party/libjingle/source/talk/base/cpumonitor.cc.orig.port	Thu Jan 16 12:43:10 2014
+++ third_party/libjingle/source/talk/base/cpumonitor.cc	Thu Jan 16 12:44:52 2014
@@@@ -52,7 +52,7 @@@@
d13 1
a13 1
@@@@ -282,6 +282,9 @@@@ float CpuSampler::GetSystemLoad() {
d23 1
a23 1
@@@@ -294,6 +297,7 @@@@ float CpuSampler::GetSystemLoad() {
d31 1
a31 1
@@@@ -355,7 +359,7 @@@@ float CpuSampler::GetProcessLoad() {
@


1.1
log
@update to 28.0.1500.45
@
text
@d2 2
a3 2
--- third_party/libjingle/source/talk/base/cpumonitor.cc.orig.port	Wed Jun 12 09:30:45 2013
+++ third_party/libjingle/source/talk/base/cpumonitor.cc	Sat Jul 13 18:04:54 2013
d13 1
a13 2
@@@@ -281,12 +281,16 @@@@ float CpuSampler::GetSystemLoad() {
   const uint64 cpu_times = nice + system + user;
d16 1
d20 4
a23 3
   system_.prev_load_time_ = timenow;
   system_.prev_load_ = UpdateCpuLoad(total_times,
                                      cpu_times * cpus_,
d31 1
a31 1
@@@@ -348,7 +352,7 @@@@ float CpuSampler::GetProcessLoad() {
@

