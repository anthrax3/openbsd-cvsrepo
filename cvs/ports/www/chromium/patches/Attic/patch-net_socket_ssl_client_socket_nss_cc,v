head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2011.02.08.09.48.26;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.46;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@... and ditch older patches too
@
text
@$OpenBSD: patch-net_socket_ssl_client_socket_nss_cc,v 1.1 2010/12/13 09:51:46 espie Exp $
--- net/socket/ssl_client_socket_nss.cc.orig	Tue Mar 30 07:27:50 2010
+++ net/socket/ssl_client_socket_nss.cc	Sun Nov 28 00:11:27 2010
@@@@ -320,7 +320,19 @@@@ int SSLClientSocketNSS::InitializeSSLOptions() {
   if (err != OK)
     return err;
   const struct addrinfo* ai = peer_address.head();
+#if defined(OS_OPENBSD)
+//BSD ai_addr is implicitly cast to a PRNetAddr later on in nss_memio.c
+//BSD but it doesn't work on BSD cuz sockaddr is defined differently than on
+//BSD linux.  As a result, I hand unroll the data structure below.
+  PRNetAddr peername;
+  sockaddr_in* sockaccess = (struct sockaddr_in *) ai->ai_addr;
+  peername.inet.family = sockaccess->sin_family;
+  peername.inet.ip     = sockaccess->sin_addr.s_addr;
+  peername.inet.port   = sockaccess->sin_port;
+  memio_SetPeerName(nss_fd_, &peername, ai->ai_addrlen);
+#else
   memio_SetPeerName(nss_fd_, ai->ai_addr, ai->ai_addrlen);
+#endif
 
   // Grab pointer to buffers
   nss_bufs_ = memio_GetSecret(nss_fd_);
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d1 1
a1 1
$OpenBSD$
@

