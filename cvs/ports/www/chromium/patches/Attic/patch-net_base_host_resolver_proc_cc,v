head	1.5;
access;
symbols
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2012.02.17.10.19.51;	author robert;	state dead;
branches;
next	1.4;

1.4
date	2011.10.27.07.59.09;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.19.08.55.26;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.02.08.09.43.02;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.46;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to 17.0.963.56
@
text
@$OpenBSD: patch-net_base_host_resolver_proc_cc,v 1.4 2011/10/27 07:59:09 robert Exp $
--- net/base/host_resolver_proc.cc.orig	Fri Oct 21 10:29:46 2011
+++ net/base/host_resolver_proc.cc	Wed Oct 26 13:47:44 2011
@@@@ -12,8 +12,8 @@@@
 #include "net/base/net_errors.h"
 #include "net/base/sys_addrinfo.h"
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
-#include <resolv.h>
+#if defined(OS_OPENBSD)
+#define AI_ADDRCONFIG 0
 #endif
 
 namespace net {
@@@@ -143,7 +143,7 @@@@ int SystemHostResolverProc(const std::string& host,
       hints.ai_family = AF_UNSPEC;
   }
 
-#if defined(OS_WIN) || defined(OS_OPENBSD)
+#if defined(OS_WIN)
   // DO NOT USE AI_ADDRCONFIG ON WINDOWS.
   //
   // The following comment in <winsock2.h> is the best documentation I found
@@@@ -167,6 +167,7 @@@@ int SystemHostResolverProc(const std::string& host,
   //
   // OpenBSD does not support it, either.
   hints.ai_flags = 0;
+#define AI_ADDRCONFIG 0
 #else
   hints.ai_flags = AI_ADDRCONFIG;
 #endif
@


1.4
log
@update to 15.0.874.102.

switch from using the hacked macosx transport dib to the linux one
which uses sysv shms.
make sure you also have a current kernel before using this version
@
text
@d1 1
a1 1
$OpenBSD: patch-net_base_host_resolver_proc_cc,v 1.3 2011/09/19 08:55:26 robert Exp $
@


1.3
log
@update to 14.0.835.163
@
text
@d1 4
a4 4
$OpenBSD: patch-net_base_host_resolver_proc_cc,v 1.2 2011/02/08 09:43:02 espie Exp $
--- net/base/host_resolver_proc.cc.orig	Wed Sep 14 10:01:13 2011
+++ net/base/host_resolver_proc.cc	Fri Sep 16 18:17:23 2011
@@@@ -12,6 +12,12 @@@@
d8 2
d11 1
a11 7
+#include <sys/types.h>
+#include <sys/socket.h>
+#include <netinet/in.h>
+#endif
+
 #if defined(OS_POSIX) && !defined(OS_MACOSX)
 #include <resolv.h>
d13 12
a24 1
@@@@ -180,6 +186,7 @@@@ int SystemHostResolverProc(const std::string& host,
@


1.2
log
@late update to chromium 9, robert@@ did the work, but he doesn't have the
time right now.
Tree is still locked!
Reasons for the update:
- good work that can be used now
- only builds on i386/amd64, and they're fast
- multiple security problems in old chrome
- old chrome half working, can't break it more than it was.

This one requires resources (see MESSAGE), but it's ways more stable.

Again, discussed with sthen@@, jasper@@, naddy@@, miod@@
@
text
@d1 6
a6 6
$OpenBSD$
--- net/base/host_resolver_proc.cc.orig	Fri Jan 21 09:22:06 2011
+++ net/base/host_resolver_proc.cc	Fri Jan 21 09:24:19 2011
@@@@ -6,6 +6,12 @@@@
 
 #include "build/build_config.h"
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d2 3
a4 3
--- net/base/host_resolver_proc.cc.orig	Tue Mar 30 07:28:07 2010
+++ net/base/host_resolver_proc.cc	Sun Nov 28 00:11:27 2010
@@@@ -6,10 +6,6 @@@@
d8 6
a13 10
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
-#include <resolv.h>
-#endif
-
 #include "base/logging.h"
 #include "base/time.h"
 #include "net/base/address_list.h"
@@@@ -17,6 +13,7 @@@@
 #include "net/base/sys_addrinfo.h"
 
d15 9
a23 3
+#include <resolv.h>
 #include "base/singleton.h"
 #include "base/thread_local_storage.h"
@

