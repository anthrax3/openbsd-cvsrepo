head	1.8;
access;
symbols
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2014.04.28.22.04.21;	author sthen;	state dead;
branches;
next	1.7;

1.7
date	2014.04.17.16.27.53;	author robert;	state Exp;
branches;
next	1.6;

1.6
date	2013.04.03.08.19.10;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2012.08.26.18.47.01;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2012.02.17.10.19.51;	author robert;	state dead;
branches;
next	1.3;

1.3
date	2011.10.27.07.59.09;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.08.16.08.17.44;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.29.13.18.02;	author robert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@remove unguarded "#define AI_ADDRCONFIG 0"
@
text
@$OpenBSD: patch-third_party_libjingle_source_talk_base_nethelpers_cc,v 1.7 2014/04/17 16:27:53 robert Exp $
--- third_party/libjingle/source/talk/base/nethelpers.cc.orig.port	Wed Apr  2 21:06:30 2014
+++ third_party/libjingle/source/talk/base/nethelpers.cc	Sat Apr 12 09:40:41 2014
@@@@ -37,6 +37,8 @@@@
 #include "talk/base/logging.h"
 #include "talk/base/signalthread.h"
 
+#define AI_ADDRCONFIG 0
+
 namespace talk_base {
 
 int ResolveHostname(const std::string& hostname, int family,
@


1.7
log
@update to 34.0.1847.116 and disable Werror for the future clang update
@
text
@d1 1
a1 1
$OpenBSD: patch-third_party_libjingle_source_talk_base_nethelpers_cc,v 1.6 2013/04/03 08:19:10 robert Exp $
@


1.6
log
@- update to 26.0.1410.43
- switch chromium to use clang/llvm instead of gcc
- switch back to the internal libvpx because it's an unreleased version
  at this point
- re-enable SSE2 support
@
text
@d1 5
a5 5
$OpenBSD$
--- third_party/libjingle/source/talk/base/nethelpers.cc.orig.port	Fri Mar 22 02:15:28 2013
+++ third_party/libjingle/source/talk/base/nethelpers.cc	Tue Apr  2 21:05:18 2013
@@@@ -36,6 +36,8 @@@@
 #include "talk/base/byteorder.h"
@


1.5
log
@update to 21.0.1180.81
@
text
@d2 2
a3 2
--- third_party/libjingle/source/talk/base/nethelpers.cc.orig	Thu Aug 23 09:13:32 2012
+++ third_party/libjingle/source/talk/base/nethelpers.cc	Thu Aug 23 09:13:43 2012
@


1.4
log
@update to 17.0.963.56
@
text
@d1 6
a6 6
$OpenBSD: patch-third_party_libjingle_source_talk_base_nethelpers_cc,v 1.3 2011/10/27 07:59:09 robert Exp $
--- third_party/libjingle/source/talk/base/nethelpers.cc.orig	Wed Oct 26 14:51:30 2011
+++ third_party/libjingle/source/talk/base/nethelpers.cc	Wed Oct 26 14:52:05 2011
@@@@ -57,7 +57,7 @@@@ void AsyncResolver::OnWorkDone() {
   }
 }
d8 5
a12 19
-#if defined(WIN32) || defined(ANDROID)
+#if defined(WIN32) || defined(ANDROID) || defined(__OpenBSD__)
 static hostent* DeepCopyHostent(const hostent* ent) {
   // Get the total number of bytes we need to copy, and allocate our buffer.
   int num_aliases = 0, num_addrs = 0;
@@@@ -168,6 +168,13 @@@@ hostent* SafeGetHostByName(const char* hostname, int* 
 #elif defined(OSX) || defined(IOS)
   // Mac OS returns an object with everything allocated.
   result = getipnodebyname(hostname, AF_INET, AI_DEFAULT, herrno);
+#elif defined(__OpenBSD__)
+  hostent* ent = gethostbyname(hostname);
+  if (!ent) {
+    return NULL;
+  }
+  result = DeepCopyHostent(ent);
+  *herrno = 0;
 #else
 #error "I don't know how to do gethostbyname safely on your system."
 #endif
@


1.3
log
@update to 15.0.874.102.

switch from using the hacked macosx transport dib to the linux one
which uses sysv shms.
make sure you also have a current kernel before using this version
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@update to the next stable release (13.0.782.112)
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_libjingle_source_talk_base_nethelpers_cc,v 1.1 2011/04/29 13:18:02 robert Exp $
--- third_party/libjingle/source/talk/base/nethelpers.cc.orig	Wed Jul 27 10:04:28 2011
+++ third_party/libjingle/source/talk/base/nethelpers.cc	Tue Aug  2 20:12:19 2011
@@@@ -139,7 +139,7 @@@@ hostent* SafeGetHostByName(const char* hostname, int* 
d6 8
a13 8
   char* aux = static_cast<char*>(buf) + sizeof(hostent);
   size_t aux_len = size - sizeof(hostent);
-  while ((ret = gethostbyname_r(hostname, reinterpret_cast<hostent*>(buf), aux,
+  while ((ret = gethostbyname(hostname, reinterpret_cast<hostent*>(buf), aux,
       aux_len, &result, herrno)) == ERANGE) {
     size *= 2;
     if (size > kMaxHostentLen) {
@@@@ -168,6 +168,8 @@@@ hostent* SafeGetHostByName(const char* hostname, int* 
d18 6
a23 1
+  result = gethostbyname(hostname);
@


1.1
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@d1 4
a4 4
$OpenBSD$
--- third_party/libjingle/source/talk/base/nethelpers.cc.orig	Thu Apr 28 18:38:52 2011
+++ third_party/libjingle/source/talk/base/nethelpers.cc	Thu Apr 28 18:44:28 2011
@@@@ -133,7 +133,7 @@@@ hostent* SafeGetHostByName(const char* hostname, int* 
d13 1
a13 1
@@@@ -154,6 +154,8 @@@@ hostent* SafeGetHostByName(const char* hostname, int* 
@

