head	1.5;
access;
symbols
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2011.06.08.20.36.56;	author robert;	state dead;
branches;
next	1.4;

1.4
date	2011.04.29.13.18.01;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.15.11.38.05;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.02.08.09.43.02;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.46;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@$OpenBSD: patch-chrome_renderer_webplugin_delegate_pepper_cc,v 1.4 2011/04/29 13:18:01 robert Exp $
--- chrome/renderer/webplugin_delegate_pepper.cc.orig	Tue Apr 26 10:01:45 2011
+++ chrome/renderer/webplugin_delegate_pepper.cc	Thu Apr 28 14:33:04 2011
@@@@ -9,7 +9,7 @@@@
 #include <string>
 #include <vector>
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
 #include <unistd.h>
 #endif
 
@@@@ -53,7 +53,7 @@@@
 #if defined(OS_MACOSX)
 #include "base/mac/mac_util.h"
 #include "base/mac/scoped_cftyperef.h"
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_OPENBSD)
 #include "chrome/renderer/renderer_sandbox_support_linux.h"
 #include "printing/pdf_ps_metafile_cairo.h"
 #elif defined(OS_WIN)
@@@@ -414,7 +414,7 @@@@ bool WebPluginDelegatePepper::SetCursor(NPCursorType t
 NPError NPMatchFontWithFallback(NPP instance,
                                 const NPFontDescription* description,
                                 NPFontID* id) {
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
   int fd = renderer_sandbox_support::MatchFontWithFallback(
       description->face, description->weight >= 700, description->italic,
       description->charset);
@@@@ -433,7 +433,7 @@@@ NPError GetFontTable(NPP instance,
                      uint32_t table,
                      void* output,
                      size_t* output_length) {
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
   bool rv = renderer_sandbox_support::GetFontTable(
       id, table, static_cast<uint8_t*>(output), output_length);
   return rv ? NPERR_NO_ERROR : NPERR_GENERIC_ERROR;
@@@@ -444,7 +444,7 @@@@ NPError GetFontTable(NPP instance,
 }
 
 NPError NPDestroyFont(NPP instance, NPFontID id) {
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
   close(id);
   return NPERR_NO_ERROR;
 #else
@@@@ -823,7 +823,7 @@@@ int WebPluginDelegatePepper::PrintBegin(const gfx::Rec
       current_printer_dpi_ = printer_dpi;
     }
   }
-#if defined (OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
   num_pages_ = num_pages;
   pdf_output_done_ = false;
 #endif  // (OS_LINUX)
@@@@ -852,7 +852,7 @@@@ bool WebPluginDelegatePepper::VectorPrintPage(int page
   unsigned char* pdf_output = NULL;
   int32 output_size = 0;
   NPPrintPageNumberRange page_range;
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
   // On Linux we will try and output all pages as PDF in the first call to
   // PrintPage. This is a temporary hack.
   // TODO(sanjeevr): Remove this hack and fix this by changing the print
@@@@ -871,7 +871,7 @@@@ bool WebPluginDelegatePepper::VectorPrintPage(int page
     return false;
 
   bool ret = false;
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
   // On Linux we need to get the backing PdfPsMetafile and write the bits
   // directly.
   cairo_t* context = canvas->beginPlatformPaint();
@@@@ -1026,7 +1026,7 @@@@ void WebPluginDelegatePepper::PrintEnd() {
   current_printer_dpi_ = -1;
 #if defined(OS_MACOSX)
   last_printed_page_ = SkBitmap();
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_OPENBSD)
   num_pages_ = 0;
   pdf_output_done_ = false;
 #endif  // defined(OS_LINUX)
@@@@ -1039,7 +1039,7 @@@@ WebPluginDelegatePepper::WebPluginDelegatePepper(
       plugin_(NULL),
       instance_(instance),
       current_printer_dpi_(-1),
-#if defined (OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
       num_pages_(0),
       pdf_output_done_(false),
 #endif  // (OS_LINUX)
@


1.4
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@update to 10.0.648.133
@
text
@d1 3
a3 3
$OpenBSD: patch-chrome_renderer_webplugin_delegate_pepper_cc,v 1.2 2011/02/08 09:43:02 espie Exp $
--- chrome/renderer/webplugin_delegate_pepper.cc.orig	Fri Mar 11 10:01:44 2011
+++ chrome/renderer/webplugin_delegate_pepper.cc	Mon Mar 14 10:55:37 2011
d13 6
a18 6
@@@@ -39,7 +39,7 @@@@
 #include "chrome/renderer/pepper_widget.h"
 #include "chrome/renderer/render_thread.h"
 #include "chrome/renderer/render_view.h"
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d20 3
a22 3
 #endif
 #include "chrome/renderer/webplugin_delegate_proxy.h"
@@@@ -463,7 +463,7 @@@@ bool WebPluginDelegatePepper::SetCursor(NPCursorType t
d31 1
a31 1
@@@@ -482,7 +482,7 @@@@ NPError GetFontTable(NPP instance,
d40 1
a40 1
@@@@ -493,7 +493,7 @@@@ NPError GetFontTable(NPP instance,
d49 1
a49 1
@@@@ -1169,10 +1169,10 @@@@ int WebPluginDelegatePepper::PrintBegin(const gfx::Rec
d57 2
a58 6
-#endif  // (OS_LINUX)
+#endif  // OS_LINUX || OS_OPENBSD
   return num_pages;
 }
 
@@@@ -1198,7 +1198,7 @@@@ bool WebPluginDelegatePepper::VectorPrintPage(int page
d67 1
a67 13
@@@@ -1207,9 +1207,9 @@@@ bool WebPluginDelegatePepper::VectorPrintPage(int page
     return pdf_output_done_;
   page_range.firstPageNumber = 0;
   page_range.lastPageNumber = num_pages_ - 1;
-#else  // defined(OS_LINUX)
+#else  // defined(OS_LINUX) || defined(OS_OPENBSD)
   page_range.firstPageNumber = page_range.lastPageNumber = page_number;
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_LINUX) || defined(OS_OPENBSD)
   NPError err = print_extensions->printPagesAsPDF(instance()->npp(),
                                                   &page_range, 1,
                                                   &pdf_output, &output_size);
@@@@ -1217,7 +1217,7 @@@@ bool WebPluginDelegatePepper::VectorPrintPage(int page
d76 1
a76 1
@@@@ -1371,10 +1371,10 @@@@ void WebPluginDelegatePepper::PrintEnd() {
d84 3
a86 6
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_LINUX) || defined(OS_OPENBSD)
 }
 
 WebPluginDelegatePepper::WebPluginDelegatePepper(
@@@@ -1385,10 +1385,10 @@@@ WebPluginDelegatePepper::WebPluginDelegatePepper(
a87 1
       nested_delegate_(NULL),
d93 1
a93 5
-#endif  // (OS_LINUX)
+#endif  // OS_LINUX || OS_OPENBSD
 #if defined(ENABLE_GPU)
       command_buffer_(NULL),
       method_factory3d_(ALLOW_THIS_IN_INITIALIZER_LIST(this)),
@


1.2
log
@late update to chromium 9, robert@@ did the work, but he doesn't have the
time right now.
Tree is still locked!
Reasons for the update:
- good work that can be used now
- only builds on i386/amd64, and they're fast
- multiple security problems in old chrome
- old chrome half working, can't break it more than it was.

This one requires resources (see MESSAGE), but it's ways more stable.

Again, discussed with sthen@@, jasper@@, naddy@@, miod@@
@
text
@d1 3
a3 3
$OpenBSD$
--- chrome/renderer/webplugin_delegate_pepper.cc.orig	Fri Jan 21 10:20:27 2011
+++ chrome/renderer/webplugin_delegate_pepper.cc	Sun Jan 23 23:27:34 2011
d92 1
a92 1
@@@@ -1370,10 +1370,10 @@@@ void WebPluginDelegatePepper::PrintEnd() {
d105 1
a105 1
@@@@ -1384,10 +1384,10 @@@@ WebPluginDelegatePepper::WebPluginDelegatePepper(
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d2 82
a83 10
--- chrome/renderer/webplugin_delegate_pepper.cc.orig	Tue Mar 30 07:31:33 2010
+++ chrome/renderer/webplugin_delegate_pepper.cc	Sun Nov 28 00:11:31 2010
@@@@ -894,7 +894,7 @@@@ int WebPluginDelegatePepper::PrintBegin(const gfx::Rec
 
 bool WebPluginDelegatePepper::PrintPage(int page_number,
                                         WebKit::WebCanvas* canvas) {
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   NPPPrintExtensions* print_extensions = GetPrintExtensions();
   if (!print_extensions)
a84 2
@@@@ -969,10 +969,10 @@@@ bool WebPluginDelegatePepper::PrintPage(int page_numbe
     canvas->drawBitmapRect(committed, &src_rect, dest_rect);
d86 16
a101 7
   return true;
-#else  // defined(OS_WIN) || defined(OS_LINUX)
+#else  // defined(OS_WIN) || defined(OS_NIX)
   NOTIMPLEMENTED();
   return false;
-#endif  // defined(OS_WIN) || defined(OS_LINUX)
+#endif  // defined(OS_WIN) || defined(OS_NIX)
d104 14
a117 10
 void WebPluginDelegatePepper::PrintEnd() {
@@@@ -1028,7 +1028,7 @@@@ void WebPluginDelegatePepper::PluginDestroyed() {
 
 void WebPluginDelegatePepper::Paint(WebKit::WebCanvas* canvas,
                                     const gfx::Rect& rect) {
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_NIX)
   if (nested_delegate_) {
     // TODO(apatrick): The GPU plugin will render to an offscreen render target.
     //    Need to copy it to the screen here.
@

