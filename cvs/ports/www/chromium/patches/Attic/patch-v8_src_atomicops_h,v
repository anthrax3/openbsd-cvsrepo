head	1.5;
access;
symbols
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2014.05.28.20.55.28;	author sthen;	state dead;
branches;
next	1.4;

1.4
date	2014.05.24.15.27.34;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2013.04.03.08.19.10;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.18.21.38.02;	author robert;	state dead;
branches;
next	1.1;

1.1
date	2011.06.10.07.41.24;	author robert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove atomicops patch, which used to be needed on i386, but now breaks
the build there. No bump as it has no effect on other arch. ok robert@@
@
text
@$OpenBSD: patch-v8_src_atomicops_h,v 1.4 2014/05/24 15:27:34 robert Exp $
--- v8/src/atomicops.h.orig.port	Wed May 14 21:24:53 2014
+++ v8/src/atomicops.h	Thu May 22 21:42:27 2014
@@@@ -63,7 +63,12 @@@@
 namespace v8 {
 namespace internal {
 
+#if defined(__OpenBSD__) && defined(__i386__)
+typedef long int Atomic32;
+#else
 typedef int32_t Atomic32;
+#endif
+
 #ifdef V8_HOST_ARCH_64_BIT
 // We need to be able to go between Atomic64 and AtomicWord implicitly.  This
 // means Atomic64 and AtomicWord should be the same type on 64-bit.
@


1.4
log
@update to 35.0.1916.114
@
text
@d1 1
a1 1
$OpenBSD: patch-v8_src_atomicops_h,v 1.3 2013/04/03 08:19:10 robert Exp $
@


1.3
log
@- update to 26.0.1410.43
- switch chromium to use clang/llvm instead of gcc
- switch back to the internal libvpx because it's an unreleased version
  at this point
- re-enable SSE2 support
@
text
@d1 4
a4 4
$OpenBSD$
--- v8/src/atomicops.h.orig.port	Fri Mar 22 02:16:35 2013
+++ v8/src/atomicops.h	Tue Apr  2 21:05:18 2013
@@@@ -54,7 +54,12 @@@@
@


1.2
log
@update to 24.0.1312.52
@
text
@d1 6
a6 4
$OpenBSD: patch-v8_src_atomicops_h,v 1.1 2011/06/10 07:41:24 robert Exp $
--- v8/src/atomicops.h.orig	Thu Jun  9 16:26:26 2011
+++ v8/src/atomicops.h	Thu Jun  9 17:16:22 2011
@@@@ -69,7 +69,11 @@@@ typedef intptr_t Atomic64;
a7 2
 // Use AtomicWord for a machine-sized pointer.  It will use the Atomic32 or
 // Atomic64 routines below, depending on your architecture.
d9 1
a9 1
+typedef Atomic32 AtomicWord;
d11 1
a11 1
 typedef intptr_t AtomicWord;
d13 4
a16 3
 
 // Atomically execute:
 //      result = *ptr;
@


1.1
log
@fix AtomicWord definition on i386, no bump needed
@
text
@d1 1
a1 1
$OpenBSD$
@

