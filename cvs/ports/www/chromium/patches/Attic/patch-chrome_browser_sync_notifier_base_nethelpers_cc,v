head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2011.02.08.09.48.26;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.45;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@... and ditch older patches too
@
text
@$OpenBSD: patch-chrome_browser_sync_notifier_base_nethelpers_cc,v 1.1 2010/12/13 09:51:45 espie Exp $
--- chrome/browser/sync/notifier/base/nethelpers.cc.orig	Tue Mar 30 07:29:40 2010
+++ chrome/browser/sync/notifier/base/nethelpers.cc	Sun Nov 28 00:11:31 2010
@@@@ -16,11 +16,16 @@@@ hostent* SafeGetHostByName(const char* hostname, hoste
   if (!result) {
     *herrno = WSAGetLastError();
   }
-#elif OS_LINUX
-  gethostbyname_r(hostname, host, buffer, buffer_len, &result, herrno);
+#elif OS_POSIX
+#ifdef OS_OPENBSD
+  // OpenBSD does not have gethostbyname_r currently (as of 4.6)
+  result = gethostbyname(hostname);
 #elif OS_MACOSX
   result = getipnodebyname(hostname, AF_INET, AI_DEFAULT, herrno);
 #else
+  gethostbyname_r(hostname, host, buffer, buffer_len, &result, herrno);
+#endif
+#else
 #error "I don't know how to do gethostbyname safely on your system."
 #endif
   return result;
@@@@ -31,10 +36,10 @@@@ hostent* SafeGetHostByName(const char* hostname, hoste
 void FreeHostEnt(hostent* host) {
 #if WIN32
   // No need to free anything, struct returned is static memory.
-#elif OS_LINUX
-  // No need to free anything, we pass in a pointer to a struct.
 #elif OS_MACOSX
   freehostent(host);
+#elif OS_POSIX
+  // No need to free anything, we pass in a pointer to a struct.
 #else
 #error "I don't know how to free a hostent on your system."
 #endif
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d1 1
a1 1
$OpenBSD$
@

