head	1.3;
access;
symbols
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2011.03.15.11.38.05;	author robert;	state dead;
branches;
next	1.2;

1.2
date	2011.02.08.09.43.02;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.46;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to 10.0.648.133
@
text
@$OpenBSD: patch-third_party_WebKit_WebKit_chromium_src_WebViewImpl_cpp,v 1.2 2011/02/08 09:43:02 espie Exp $
--- third_party/WebKit/WebKit/chromium/src/WebViewImpl.cpp.orig	Fri Jan 14 12:42:28 2011
+++ third_party/WebKit/WebKit/chromium/src/WebViewImpl.cpp	Tue Feb  1 20:53:48 2011
@@@@ -128,7 +128,7 @@@@
 #if OS(WINDOWS)
 #include "RenderThemeChromiumWin.h"
 #else
-#if OS(LINUX) || OS(FREEBSD)
+#if OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
 #include "RenderThemeChromiumLinux.h"
 #endif
 #include "RenderTheme.h"
@@@@ -462,7 +462,7 @@@@ void WebViewImpl::mouseDown(const WebMouseEvent& event
         || (event.button == WebMouseEvent::ButtonLeft
             && event.modifiers & WebMouseEvent::ControlKey))
         mouseContextMenu(event);
-#elif OS(LINUX) || OS(FREEBSD)
+#elif OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
     if (event.button == WebMouseEvent::ButtonRight)
         mouseContextMenu(event);
 #endif
@@@@ -501,7 +501,7 @@@@ void WebViewImpl::mouseUp(const WebMouseEvent& event)
     if (!mainFrameImpl() || !mainFrameImpl()->frameView())
         return;
 
-#if OS(LINUX) || OS(FREEBSD)
+#if OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
     // If the event was a middle click, attempt to copy text into the focused
     // frame. We execute this before we let the page have a go at the event
     // because the page may change what is focused during in its event handler.
@@@@ -585,11 +585,11 @@@@ bool WebViewImpl::keyEvent(const WebKeyboardEvent& eve
     if (!handler)
         return keyEventDefault(event);
 
-#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD)
+#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
     const WebInputEvent::Type contextMenuTriggeringEventType =
 #if OS(WINDOWS)
         WebInputEvent::KeyUp;
-#elif OS(LINUX) || OS(FREEBSD)
+#elif OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
         WebInputEvent::RawKeyDown;
 #endif
 
@@@@ -599,7 +599,7 @@@@ bool WebViewImpl::keyEvent(const WebKeyboardEvent& eve
         sendContextMenuEvent(event);
         return true;
     }
-#endif // OS(WINDOWS) || OS(LINUX) || OS(FREEBSD)
+#endif // OS(WINDOWS) || OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
 
     // It's not clear if we should continue after detecting a capslock keypress.
     // I'll err on the side of continuing, which is the pre-existing behaviour.
@@@@ -733,7 +733,7 @@@@ bool WebViewImpl::touchEvent(const WebTouchEvent& even
 }
 #endif
 
-#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD)
+#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
 // Mac has no way to open a context menu based on a keyboard event.
 bool WebViewImpl::sendContextMenuEvent(const WebKeyboardEvent& event)
 {
@@@@ -2059,7 +2059,7 @@@@ void WebViewImpl::setDomainRelaxationForbidden(bool fo
 void WebViewImpl::setScrollbarColors(unsigned inactiveColor,
                                      unsigned activeColor,
                                      unsigned trackColor) {
-#if OS(LINUX) || OS(FREEBSD)
+#if OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
     PlatformThemeChromiumGtk::setScrollbarColors(inactiveColor,
                                                  activeColor,
                                                  trackColor);
@@@@ -2070,7 +2070,7 @@@@ void WebViewImpl::setSelectionColors(unsigned activeBa
                                      unsigned activeForegroundColor,
                                      unsigned inactiveBackgroundColor,
                                      unsigned inactiveForegroundColor) {
-#if OS(LINUX) || OS(FREEBSD)
+#if OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
     RenderThemeChromiumLinux::setSelectionColors(activeBackgroundColor,
                                                  activeForegroundColor,
                                                  inactiveBackgroundColor,
@@@@ -2146,7 +2146,7 @@@@ bool WebViewImpl::navigationPolicyFromMouseEvent(unsig
                                                  bool alt, bool meta,
                                                  WebNavigationPolicy* policy)
 {
-#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD) || OS(SOLARIS)
+#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD) || OS(SOLARIS) || OS(OPENBSD)
     const bool newTabModifier = (button == 1) || ctrl;
 #elif OS(DARWIN)
     const bool newTabModifier = (button == 1) || meta;
@


1.2
log
@late update to chromium 9, robert@@ did the work, but he doesn't have the
time right now.
Tree is still locked!
Reasons for the update:
- good work that can be used now
- only builds on i386/amd64, and they're fast
- multiple security problems in old chrome
- old chrome half working, can't break it more than it was.

This one requires resources (see MESSAGE), but it's ways more stable.

Again, discussed with sthen@@, jasper@@, naddy@@, miod@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d2 4
a5 4
--- third_party/WebKit/WebKit/chromium/src/WebViewImpl.cpp.orig	Tue Mar 30 07:35:48 2010
+++ third_party/WebKit/WebKit/chromium/src/WebViewImpl.cpp	Sun Nov 28 00:11:32 2010
@@@@ -103,7 +103,7 @@@@
 #include "KeyboardCodesWin.h"
d8 2
a9 2
-#if OS(LINUX)
+#if OS(LINUX) || OS(OPENBSD)
d12 2
a13 2
 #include "KeyboardCodesPosix.h"
@@@@ -371,7 +371,7 @@@@ void WebViewImpl::mouseDown(const WebMouseEvent& event
d17 2
a18 2
-#elif OS(LINUX)
+#elif OS(LINUX) || OS(OPENBSD)
d22 1
a22 1
@@@@ -410,7 +410,7 @@@@ void WebViewImpl::mouseUp(const WebMouseEvent& event)
d26 2
a27 2
-#if OS(LINUX)
+#if OS(LINUX) || OS(OPENBSD)
d31 1
a31 1
@@@@ -490,11 +490,11 @@@@ bool WebViewImpl::keyEvent(const WebKeyboardEvent& eve
d35 2
a36 2
-#if OS(WINDOWS) || OS(LINUX)
+#if OS(WINDOWS) || OS(LINUX) || OS(OPENBSD)
d40 2
a41 2
-#elif OS(LINUX)
+#elif OS(LINUX) || OS(OPENBSD)
d45 16
a60 7
@@@@ -636,7 +636,7 @@@@ bool WebViewImpl::touchEvent(const WebTouchEvent& even
 //
 // This function is an ugly copy/paste and should be cleaned up when the
 // WebKitWin version is cleaned: https://bugs.webkit.org/show_bug.cgi?id=20438
-#if OS(WINDOWS) || OS(LINUX)
+#if OS(WINDOWS) || OS(LINUX) || OS(OPENBSD)
 // FIXME: implement on Mac
d63 1
a63 1
@@@@ -1833,7 +1833,7 @@@@ bool WebViewImpl::isActive() const
d67 3
a69 3
-#if OS(LINUX)
+#if OS(LINUX) || OS(OPENBSD)
     RenderThemeChromiumLinux::setScrollbarColors(inactiveColor,
d72 1
a72 1
@@@@ -1844,7 +1844,7 @@@@ void WebViewImpl::setSelectionColors(unsigned activeBa
d76 2
a77 2
-#if OS(LINUX)
+#if OS(LINUX) || OS(OPENBSD)
d81 1
a81 1
@@@@ -1885,7 +1885,7 @@@@ bool WebViewImpl::navigationPolicyFromMouseEvent(unsig
d86 1
a86 1
+#if OS(WINDOWS) || OS(LINUX) || OS(OPENBSD) || OS(SOLARIS)
@

