head	1.6;
access;
symbols
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2;
locks; strict;
comment	@# @;


1.6
date	2012.07.10.09.22.34;	author robert;	state dead;
branches;
next	1.5;

1.5
date	2012.04.03.13.59.35;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.20.20.52.44;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2012.02.17.10.19.51;	author robert;	state dead;
branches;
next	1.2;

1.2
date	2011.12.14.16.58.19;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.27.07.59.08;	author robert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@update to 20.0.1132.47
@
text
@$OpenBSD: patch-content_app_content_main_cc,v 1.5 2012/04/03 13:59:35 robert Exp $
--- content/app/content_main.cc.orig	Tue Mar 27 03:01:20 2012
+++ content/app/content_main.cc	Sun Apr  1 20:04:43 2012
@@@@ -68,7 +68,7 @@@@ extern int PpapiBrokerMain(const content::MainFunction
 extern int RendererMain(const content::MainFunctionParams&);
 extern int WorkerMain(const content::MainFunctionParams&);
 extern int UtilityMain(const content::MainFunctionParams&);
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
 extern int ZygoteMain(const content::MainFunctionParams&,
                       content::ZygoteForkDelegate* forkdelegate);
 #endif
@@@@ -181,7 +181,7 @@@@ struct MainFunction {
   int (*function)(const content::MainFunctionParams&);
 };
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
 // On platforms that use the zygote, we have a special subset of
 // subprocesses that are launched via the zygote.  This function
 // fills in some process-launching bits around ZygoteMain().
@@@@ -264,7 +264,7 @@@@ int RunNamedProcessTypeMain(
       return kMainFunctions[i].function(main_function_params);
   }
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
   // Zygote startup is special -- see RunZygote comments above
   // for why we don't use ZygoteMain directly.
   if (process_type == switches::kZygoteProcess)
@


1.5
log
@update to 18.0.1025.142; requires gcc 4.6 from now on
@
text
@d1 1
a1 1
$OpenBSD: patch-content_app_content_main_cc,v 1.4 2012/03/20 20:52:44 robert Exp $
@


1.4
log
@Disable using the zygote process just like on macosx to make
chrome happy with rthreads.
This change is fine anyways because we are not using the setuid
sandboxing which would require the zygote process.
@
text
@d1 3
a3 3
$OpenBSD$
--- content/app/content_main.cc.orig	Tue Mar 20 15:27:41 2012
+++ content/app/content_main.cc	Tue Mar 20 15:28:24 2012
d22 1
a22 1
@@@@ -263,7 +263,7 @@@@ int RunNamedProcessTypeMain(
@


1.3
log
@update to 17.0.963.56
@
text
@d1 11
a11 11
$OpenBSD: patch-content_app_content_main_cc,v 1.2 2011/12/14 16:58:19 robert Exp $
--- content/app/content_main.cc.orig	Wed Dec  7 09:01:15 2011
+++ content/app/content_main.cc	Tue Dec 13 21:23:12 2011
@@@@ -314,7 +314,7 @@@@ int ContentMain(int argc,
   base::GlobalDescriptors* g_fds = base::GlobalDescriptors::GetInstance();
   g_fds->Set(kPrimaryIPCChannel,
              kPrimaryIPCChannel + base::GlobalDescriptors::kBaseDescriptor);
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
   g_fds->Set(kCrashDumpSignal,
              kCrashDumpSignal + base::GlobalDescriptors::kBaseDescriptor);
d13 18
@


1.2
log
@update to 16.0.912.63
@
text
@d1 1
a1 1
$OpenBSD: patch-content_app_content_main_cc,v 1.1 2011/10/27 07:59:08 robert Exp $
@


1.1
log
@update to 15.0.874.102.

switch from using the hacked macosx transport dib to the linux one
which uses sysv shms.
make sure you also have a current kernel before using this version
@
text
@d1 4
a4 4
$OpenBSD$
--- content/app/content_main.cc.orig	Fri Oct 21 10:29:36 2011
+++ content/app/content_main.cc	Wed Oct 26 14:10:40 2011
@@@@ -345,7 +345,7 @@@@ int ContentMain(int argc,
@

