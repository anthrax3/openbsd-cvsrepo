head	1.5;
access;
symbols
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4;
locks; strict;
comment	@# @;


1.5
date	2011.08.16.08.17.44;	author robert;	state dead;
branches;
next	1.4;

1.4
date	2011.06.08.20.36.56;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.05.17.08.35.31;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.29.13.18.02;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.15.11.38.05;	author robert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to the next stable release (13.0.782.112)
@
text
@$OpenBSD: patch-third_party_WebKit_Source_WebKit_chromium_src_WebViewImpl_cpp,v 1.4 2011/06/08 20:36:56 robert Exp $
--- third_party/WebKit/Source/WebKit/chromium/src/WebViewImpl.cpp.orig	Mon Jun  6 11:15:23 2011
+++ third_party/WebKit/Source/WebKit/chromium/src/WebViewImpl.cpp	Wed Jun  8 09:58:37 2011
@@@@ -134,7 +134,7 @@@@
 #if OS(WINDOWS)
 #include "RenderThemeChromiumWin.h"
 #else
-#if OS(LINUX) || OS(FREEBSD)
+#if OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
 #include "RenderThemeChromiumLinux.h"
 #endif
 #include "RenderTheme.h"
@@@@ -482,7 +482,7 @@@@ void WebViewImpl::mouseDown(const WebMouseEvent& event
         || (event.button == WebMouseEvent::ButtonLeft
             && event.modifiers & WebMouseEvent::ControlKey))
         mouseContextMenu(event);
-#elif OS(LINUX) || OS(FREEBSD)
+#elif OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
     if (event.button == WebMouseEvent::ButtonRight)
         mouseContextMenu(event);
 #endif
@@@@ -521,7 +521,7 @@@@ void WebViewImpl::mouseUp(const WebMouseEvent& event)
     if (!mainFrameImpl() || !mainFrameImpl()->frameView())
         return;
 
-#if OS(LINUX) || OS(FREEBSD)
+#if OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
     // If the event was a middle click, attempt to copy text into the focused
     // frame. We execute this before we let the page have a go at the event
     // because the page may change what is focused during in its event handler.
@@@@ -605,11 +605,11 @@@@ bool WebViewImpl::keyEvent(const WebKeyboardEvent& eve
     if (!handler)
         return keyEventDefault(event);
 
-#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD)
+#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
     const WebInputEvent::Type contextMenuTriggeringEventType =
 #if OS(WINDOWS)
         WebInputEvent::KeyUp;
-#elif OS(LINUX) || OS(FREEBSD)
+#elif OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
         WebInputEvent::RawKeyDown;
 #endif
 
@@@@ -619,7 +619,7 @@@@ bool WebViewImpl::keyEvent(const WebKeyboardEvent& eve
         sendContextMenuEvent(event);
         return true;
     }
-#endif // OS(WINDOWS) || OS(LINUX) || OS(FREEBSD)
+#endif // OS(WINDOWS) || OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
 
     PlatformKeyboardEventBuilder evt(event);
 
@@@@ -748,7 +748,7 @@@@ bool WebViewImpl::touchEvent(const WebTouchEvent& even
 }
 #endif
 
-#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD)
+#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
 // Mac has no way to open a context menu based on a keyboard event.
 bool WebViewImpl::sendContextMenuEvent(const WebKeyboardEvent& event)
 {
@@@@ -2083,7 +2083,7 @@@@ void WebViewImpl::setDomainRelaxationForbidden(bool fo
 void WebViewImpl::setScrollbarColors(unsigned inactiveColor,
                                      unsigned activeColor,
                                      unsigned trackColor) {
-#if OS(LINUX) || OS(FREEBSD)
+#if OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
     PlatformThemeChromiumGtk::setScrollbarColors(inactiveColor,
                                                  activeColor,
                                                  trackColor);
@@@@ -2094,7 +2094,7 @@@@ void WebViewImpl::setSelectionColors(unsigned activeBa
                                      unsigned activeForegroundColor,
                                      unsigned inactiveBackgroundColor,
                                      unsigned inactiveForegroundColor) {
-#if OS(LINUX) || OS(FREEBSD)
+#if OS(LINUX) || OS(FREEBSD) || OS(OPENBSD)
     RenderThemeChromiumLinux::setSelectionColors(activeBackgroundColor,
                                                  activeForegroundColor,
                                                  inactiveBackgroundColor,
@@@@ -2170,7 +2170,7 @@@@ bool WebViewImpl::navigationPolicyFromMouseEvent(unsig
                                                  bool alt, bool meta,
                                                  WebNavigationPolicy* policy)
 {
-#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD) || OS(SOLARIS)
+#if OS(WINDOWS) || OS(LINUX) || OS(FREEBSD) || OS(SOLARIS) || OS(OPENBSD)
     const bool newTabModifier = (button == 1) || ctrl;
 #elif OS(DARWIN)
     const bool newTabModifier = (button == 1) || meta;
@


1.4
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@d1 1
a1 1
$OpenBSD: patch-third_party_WebKit_Source_WebKit_chromium_src_WebViewImpl_cpp,v 1.3 2011/05/17 08:35:31 robert Exp $
@


1.3
log
@- use the same memory allocation values on amd64 and i386 too.
  this makes chrome use way less memory and since it does not hit
  datasize limits anymore, it is way more stable too
- remove the warning of datasize bumping from the wrapper script

tested by sthen@@, jasper@@ and me
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_WebKit_Source_WebKit_chromium_src_WebViewImpl_cpp,v 1.2 2011/04/29 13:18:02 robert Exp $
--- third_party/WebKit/Source/WebKit/chromium/src/WebViewImpl.cpp.orig	Sat May  7 11:42:23 2011
+++ third_party/WebKit/Source/WebKit/chromium/src/WebViewImpl.cpp	Mon May 16 16:10:05 2011
@@@@ -132,7 +132,7 @@@@
d13 1
a13 1
@@@@ -466,7 +466,7 @@@@ void WebViewImpl::mouseDown(const WebMouseEvent& event
d22 1
a22 1
@@@@ -505,7 +505,7 @@@@ void WebViewImpl::mouseUp(const WebMouseEvent& event)
d31 1
a31 1
@@@@ -589,11 +589,11 @@@@ bool WebViewImpl::keyEvent(const WebKeyboardEvent& eve
d45 1
a45 1
@@@@ -603,7 +603,7 @@@@ bool WebViewImpl::keyEvent(const WebKeyboardEvent& eve
d52 3
a54 3
     // It's not clear if we should continue after detecting a capslock keypress.
     // I'll err on the side of continuing, which is the pre-existing behaviour.
@@@@ -737,7 +737,7 @@@@ bool WebViewImpl::touchEvent(const WebTouchEvent& even
d63 1
a63 1
@@@@ -2063,7 +2063,7 @@@@ void WebViewImpl::setDomainRelaxationForbidden(bool fo
d72 1
a72 1
@@@@ -2074,7 +2074,7 @@@@ void WebViewImpl::setSelectionColors(unsigned activeBa
d81 1
a81 1
@@@@ -2150,7 +2150,7 @@@@ bool WebViewImpl::navigationPolicyFromMouseEvent(unsig
@


1.2
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@d1 3
a3 3
$OpenBSD: patch-third_party_WebKit_Source_WebKit_chromium_src_WebViewImpl_cpp,v 1.1 2011/03/15 11:38:05 robert Exp $
--- third_party/WebKit/Source/WebKit/chromium/src/WebViewImpl.cpp.orig	Tue Apr 26 10:03:27 2011
+++ third_party/WebKit/Source/WebKit/chromium/src/WebViewImpl.cpp	Thu Apr 28 11:17:49 2011
d63 1
a63 1
@@@@ -2062,7 +2062,7 @@@@ void WebViewImpl::setDomainRelaxationForbidden(bool fo
d72 1
a72 1
@@@@ -2073,7 +2073,7 @@@@ void WebViewImpl::setSelectionColors(unsigned activeBa
d81 1
a81 1
@@@@ -2149,7 +2149,7 @@@@ bool WebViewImpl::navigationPolicyFromMouseEvent(unsig
@


1.1
log
@update to 10.0.648.133
@
text
@d1 4
a4 4
$OpenBSD$
--- third_party/WebKit/Source/WebKit/chromium/src/WebViewImpl.cpp.orig	Fri Mar 11 10:17:35 2011
+++ third_party/WebKit/Source/WebKit/chromium/src/WebViewImpl.cpp	Mon Mar 14 10:57:25 2011
@@@@ -130,7 +130,7 @@@@
d13 1
a13 1
@@@@ -468,7 +468,7 @@@@ void WebViewImpl::mouseDown(const WebMouseEvent& event
d22 1
a22 1
@@@@ -507,7 +507,7 @@@@ void WebViewImpl::mouseUp(const WebMouseEvent& event)
d31 1
a31 1
@@@@ -591,11 +591,11 @@@@ bool WebViewImpl::keyEvent(const WebKeyboardEvent& eve
d45 1
a45 1
@@@@ -605,7 +605,7 @@@@ bool WebViewImpl::keyEvent(const WebKeyboardEvent& eve
d54 1
a54 1
@@@@ -739,7 +739,7 @@@@ bool WebViewImpl::touchEvent(const WebTouchEvent& even
d63 1
a63 1
@@@@ -2054,7 +2054,7 @@@@ void WebViewImpl::setDomainRelaxationForbidden(bool fo
d72 1
a72 1
@@@@ -2065,7 +2065,7 @@@@ void WebViewImpl::setSelectionColors(unsigned activeBa
d81 1
a81 1
@@@@ -2141,7 +2141,7 @@@@ bool WebViewImpl::navigationPolicyFromMouseEvent(unsig
@

