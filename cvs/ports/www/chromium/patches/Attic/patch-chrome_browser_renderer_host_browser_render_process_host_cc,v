head	1.5;
access;
symbols
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2011.06.08.20.36.56;	author robert;	state dead;
branches;
next	1.4;

1.4
date	2011.04.29.13.18.01;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.15.11.38.05;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.02.08.09.43.02;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.13.09.51.45;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@$OpenBSD: patch-chrome_browser_renderer_host_browser_render_process_host_cc,v 1.4 2011/04/29 13:18:01 robert Exp $
--- chrome/browser/renderer_host/browser_render_process_host.cc.orig	Tue Apr 26 10:01:43 2011
+++ chrome/browser/renderer_host/browser_render_process_host.cc	Thu Apr 28 11:17:49 2011
@@@@ -903,7 +903,7 @@@@ TransportDIB* BrowserRenderProcessHost::MapTransportDI
   HANDLE section = chrome::GetSectionFromProcess(
       dib_id.handle, GetHandle(), false /* read write */);
   return TransportDIB::Map(section);
-#elif defined(OS_MACOSX)
+#elif defined(OS_MACOSX) || defined(OS_OPENBSD)
   // On OSX, the browser allocates all DIBs and keeps a file descriptor around
   // for each.
   return widget_helper_->MapTransportDIB(dib_id);
@


1.4
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@d1 1
a1 1
$OpenBSD: patch-chrome_browser_renderer_host_browser_render_process_host_cc,v 1.3 2011/03/15 11:38:05 robert Exp $
@


1.3
log
@update to 10.0.648.133
@
text
@d1 5
a5 5
$OpenBSD: patch-chrome_browser_renderer_host_browser_render_process_host_cc,v 1.2 2011/02/08 09:43:02 espie Exp $
--- chrome/browser/renderer_host/browser_render_process_host.cc.orig	Fri Mar 11 10:01:42 2011
+++ chrome/browser/renderer_host/browser_render_process_host.cc	Mon Mar 14 10:55:37 2011
@@@@ -886,7 +886,7 @@@@ TransportDIB* BrowserRenderProcessHost::MapTransportDI
   HANDLE section = app::win::GetSectionFromProcess(
@


1.2
log
@late update to chromium 9, robert@@ did the work, but he doesn't have the
time right now.
Tree is still locked!
Reasons for the update:
- good work that can be used now
- only builds on i386/amd64, and they're fast
- multiple security problems in old chrome
- old chrome half working, can't break it more than it was.

This one requires resources (see MESSAGE), but it's ways more stable.

Again, discussed with sthen@@, jasper@@, naddy@@, miod@@
@
text
@d1 5
a5 5
$OpenBSD$
--- chrome/browser/renderer_host/browser_render_process_host.cc.orig	Fri Jan 21 10:20:21 2011
+++ chrome/browser/renderer_host/browser_render_process_host.cc	Sun Jan 23 23:27:31 2011
@@@@ -808,7 +808,7 @@@@ TransportDIB* BrowserRenderProcessHost::MapTransportDI
   HANDLE section = win_util::GetSectionFromProcess(
@


1.1
log
@cut the "monster patches" into small pieces. pval can fix it to his liking
if he comes back.
In the mean time, fix build of chromium by adding the required
-I/usr/local/includes to gyp glue where needed.
@
text
@d2 8
a9 17
--- chrome/browser/renderer_host/browser_render_process_host.cc.orig	Tue Mar 30 07:29:15 2010
+++ chrome/browser/renderer_host/browser_render_process_host.cc	Sun Nov 28 00:11:31 2010
@@@@ -310,11 +310,11 @@@@ bool BrowserRenderProcessHost::Init(bool is_extensions
     in_process_renderer_.reset(new RendererMainThread(channel_id));
 
     base::Thread::Options options;
-#if !defined(OS_LINUX)
+#if !defined(USE_X11)
     // In-process plugins require this to be a UI message loop.
     options.message_loop_type = MessageLoop::TYPE_UI;
 #else
-    // We can't have multiple UI loops on Linux, so we don't support
+    // We can't have multiple UI loops on X, so we don't support
     // in-process plugins.
     options.message_loop_type = MessageLoop::TYPE_DEFAULT;
 #endif
@@@@ -693,9 +693,9 @@@@ TransportDIB* BrowserRenderProcessHost::MapTransportDI
a12 8
-#elif defined(OS_LINUX)
+#elif defined(OS_NIX)
   return TransportDIB::Map(dib_id);
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_NIX)
 }
 
 TransportDIB* BrowserRenderProcessHost::GetTransportDIB(
@

