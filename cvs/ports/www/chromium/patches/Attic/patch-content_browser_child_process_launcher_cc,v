head	1.34;
access;
symbols
	OPENBSD_6_0:1.28.0.2
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.25.0.2
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.22.0.4
	OPENBSD_5_8_BASE:1.22
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.16.0.2
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.13.0.2
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@# @;


1.34
date	2017.03.14.12.18.54;	author robert;	state dead;
branches;
next	1.33;
commitid	FgEdsLreTqAdn1i5;

1.33
date	2017.01.26.17.08.25;	author robert;	state Exp;
branches;
next	1.32;
commitid	SWz5LewWpip0ZZLw;

1.32
date	2016.12.10.15.35.25;	author robert;	state Exp;
branches;
next	1.31;
commitid	D24Pj03ujnweitOe;

1.31
date	2016.10.26.06.22.08;	author robert;	state Exp;
branches;
next	1.30;
commitid	Dt81be1Osjz00Uwx;

1.30
date	2016.09.01.16.28.11;	author robert;	state Exp;
branches;
next	1.29;
commitid	0duujWXlyOCBrehm;

1.29
date	2016.07.31.13.11.44;	author robert;	state Exp;
branches;
next	1.28;
commitid	dRegVegviFQGKQZc;

1.28
date	2016.05.27.06.28.21;	author robert;	state Exp;
branches;
next	1.27;
commitid	cpiCcJ3vjht5tEkH;

1.27
date	2016.04.16.19.08.46;	author robert;	state Exp;
branches;
next	1.26;
commitid	SE10dvx9aTcZrjRO;

1.26
date	2016.03.06.10.51.14;	author robert;	state Exp;
branches;
next	1.25;
commitid	Upms3IeOsaLsGxbP;

1.25
date	2016.01.23.20.43.27;	author robert;	state Exp;
branches;
next	1.24;
commitid	858mkCBSSGIN9Szh;

1.24
date	2015.12.05.16.13.32;	author robert;	state Exp;
branches;
next	1.23;
commitid	D0GFSwUDbKAnIs1m;

1.23
date	2015.09.05.16.06.50;	author robert;	state Exp;
branches;
next	1.22;
commitid	rTmBXJaDIIWe1XKA;

1.22
date	2015.07.23.13.44.04;	author robert;	state Exp;
branches;
next	1.21;
commitid	vxhJdppNzKtP7lYz;

1.21
date	2015.05.24.15.51.53;	author robert;	state Exp;
branches;
next	1.20;
commitid	rFaYcWD2ntiXn5nr;

1.20
date	2015.04.27.16.38.25;	author robert;	state Exp;
branches;
next	1.19;
commitid	jwX00slFR1NY9xHC;

1.19
date	2015.03.18.19.26.29;	author robert;	state Exp;
branches;
next	1.18;
commitid	aPwx9j7rbIsa650M;

1.18
date	2015.01.22.11.16.41;	author robert;	state Exp;
branches;
next	1.17;
commitid	yDb21GVFY5iIUXUw;

1.17
date	2014.09.11.19.04.52;	author robert;	state Exp;
branches;
next	1.16;
commitid	WrglT9ERNBhPArdd;

1.16
date	2014.07.20.17.22.34;	author robert;	state Exp;
branches;
next	1.15;
commitid	yFSQqywU9tg3Fhqe;

1.15
date	2014.05.24.15.27.34;	author robert;	state Exp;
branches;
next	1.14;

1.14
date	2014.04.17.16.27.53;	author robert;	state Exp;
branches;
next	1.13;

1.13
date	2014.01.18.11.42.04;	author robert;	state Exp;
branches;
next	1.12;

1.12
date	2013.12.12.10.43.18;	author robert;	state Exp;
branches;
next	1.11;

1.11
date	2013.07.15.14.59.30;	author robert;	state Exp;
branches;
next	1.10;

1.10
date	2013.05.30.18.42.18;	author robert;	state Exp;
branches;
next	1.9;

1.9
date	2013.04.03.08.19.10;	author robert;	state Exp;
branches;
next	1.8;

1.8
date	2013.03.15.08.30.33;	author robert;	state Exp;
branches;
next	1.7;

1.7
date	2013.01.18.21.38.02;	author robert;	state Exp;
branches;
next	1.6;

1.6
date	2012.10.12.16.46.10;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2012.07.10.09.22.34;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.20.20.52.44;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.08.16.08.17.44;	author robert;	state dead;
branches;
next	1.2;

1.2
date	2011.06.08.20.36.56;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.29.13.18.01;	author robert;	state Exp;
branches;
next	;


desc
@@


1.34
log
@update to 57.0.2987.98
@
text
@$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.33 2017/01/26 17:08:25 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Thu Dec 15 00:02:09 2016
+++ content/browser/child_process_launcher.cc	Tue Jan  3 20:29:59 2017
@@@@ -249,7 +249,7 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
   // We need to close the client end of the IPC channel to reliably detect
   // child termination.
 
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
   ZygoteHandle* zygote_handle =
       !base::CommandLine::ForCurrentProcess()->HasSwitch(switches::kNoZygote)
           ? delegate->GetZygote()
@@@@ -358,7 +358,7 @@@@ void TerminateOnLauncherThread(ZygoteHandle zygote, ba
   process.Terminate(RESULT_CODE_NORMAL_EXIT, false);
   // On POSIX, we must additionally reap the child.
 #if defined(OS_POSIX)
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
   if (zygote) {
     // If the renderer was created via a zygote, we have to proxy the reaping
     // through the zygote process.
@@@@ -475,7 +475,7 @@@@ void ChildProcessLauncher::Launch(SandboxedProcessLaun
 
 void ChildProcessLauncher::UpdateTerminationStatus(bool known_dead) {
   DCHECK(CalledOnValidThread());
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
   if (zygote_) {
     termination_status_ = zygote_->GetTerminationStatus(
         process_.Handle(), known_dead, &exit_code_);
@@@@ -549,7 +549,7 @@@@ void ChildProcessLauncher::Notify(ZygoteHandle zygote,
                                     mojo_child_token_, process_error_callback_);
   }
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
   zygote_ = zygote;
 #endif
   if (process_.IsValid()) {
@


1.33
log
@update to 56.0.2924.76
@
text
@d1 1
a1 1
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.32 2016/12/10 15:35:25 robert Exp $
@


1.32
log
@update to 55.0.2883.75; add lpr support to the system dialog while here
@
text
@d1 4
a4 4
$OpenBSD$
--- content/browser/child_process_launcher.cc.orig.port	Sat Dec  3 11:14:43 2016
+++ content/browser/child_process_launcher.cc	Sat Dec  3 11:16:10 2016
@@@@ -258,7 +258,7 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
d13 1
a13 1
@@@@ -367,7 +367,7 @@@@ void TerminateOnLauncherThread(ZygoteHandle zygote, ba
d22 1
a22 1
@@@@ -488,7 +488,7 @@@@ void ChildProcessLauncher::Launch(
d31 1
a31 1
@@@@ -569,7 +569,7 @@@@ void ChildProcessLauncher::Notify(ZygoteHandle zygote,
@


1.31
log
@update to 54.0.2840.71
@
text
@d1 3
a3 3
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.30 2016/09/01 16:28:11 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed Oct 12 21:02:59 2016
+++ content/browser/child_process_launcher.cc	Wed Oct 19 12:56:03 2016
d10 4
a13 4
   ZygoteHandle* zygote_handle = delegate->GetZygote();
   // If |zygote_handle| is null, a zygote should not be used.
   if (zygote_handle) {
@@@@ -364,7 +364,7 @@@@ void TerminateOnLauncherThread(ZygoteHandle zygote, ba
d22 1
a22 1
@@@@ -485,7 +485,7 @@@@ void ChildProcessLauncher::Launch(
d31 1
a31 1
@@@@ -566,7 +566,7 @@@@ void ChildProcessLauncher::Notify(ZygoteHandle zygote,
@


1.30
log
@update to 53.0.2785.89
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.29 2016/07/31 13:11:44 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Thu Sep  1 00:03:31 2016
+++ content/browser/child_process_launcher.cc	Thu Sep  1 11:12:22 2016
@@@@ -256,7 +256,7 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
d13 1
a13 1
@@@@ -362,7 +362,7 @@@@ void TerminateOnLauncherThread(ZygoteHandle zygote, ba
d22 1
a22 1
@@@@ -481,7 +481,7 @@@@ void ChildProcessLauncher::Launch(
d31 2
a32 2
@@@@ -563,7 +563,7 @@@@ void ChildProcessLauncher::Notify(ZygoteHandle zygote,
                                     process_error_callback_);
@


1.29
log
@update to 52.0.2743.82
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.28 2016/05/27 06:28:21 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed Jul 20 21:03:24 2016
+++ content/browser/child_process_launcher.cc	Thu Jul 21 10:25:29 2016
@@@@ -258,7 +258,7 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
d13 1
a13 1
@@@@ -364,7 +364,7 @@@@ void TerminateOnLauncherThread(ZygoteHandle zygote, ba
d22 1
a22 1
@@@@ -468,7 +468,7 @@@@ void ChildProcessLauncher::Launch(
d31 2
a32 2
@@@@ -548,7 +548,7 @@@@ void ChildProcessLauncher::Notify(ZygoteHandle zygote,
                                     mojo_platform_channel_.PassServerHandle());
@


1.28
log
@update to 51.0.2704.63
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.27 2016/04/16 19:08:46 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed May 25 21:01:01 2016
+++ content/browser/child_process_launcher.cc	Thu May 26 08:09:46 2016
@@@@ -251,7 +251,7 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
d13 1
a13 1
@@@@ -355,7 +355,7 @@@@ void TerminateOnLauncherThread(ZygoteHandle zygote, ba
d22 1
a22 1
@@@@ -459,7 +459,7 @@@@ void ChildProcessLauncher::Launch(
d31 1
a31 1
@@@@ -536,7 +536,7 @@@@ void ChildProcessLauncher::Notify(ZygoteHandle zygote,
@


1.27
log
@update to 50.0.2661.75
@
text
@d1 4
a4 4
$OpenBSD$
--- content/browser/child_process_launcher.cc.orig.port	Thu Apr 14 13:59:42 2016
+++ content/browser/child_process_launcher.cc	Thu Apr 14 14:01:41 2016
@@@@ -229,7 +229,7 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
d13 1
a13 1
@@@@ -333,7 +333,7 @@@@ void TerminateOnLauncherThread(ZygoteHandle zygote, ba
d22 1
a22 1
@@@@ -435,7 +435,7 @@@@ void ChildProcessLauncher::Launch(
d31 3
a33 3
@@@@ -505,7 +505,7 @@@@ void ChildProcessLauncher::Notify(ZygoteHandle zygote,
   starting_ = false;
   process_ = std::move(process);
@


1.26
log
@update to 49.0.2623.75
@
text
@d1 4
a4 16
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.25 2016/01/23 20:43:27 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed Feb 24 21:01:32 2016
+++ content/browser/child_process_launcher.cc	Thu Mar  3 09:43:26 2016
@@@@ -116,7 +116,11 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
   base::EnvironmentMap env = delegate->GetEnvironment();
   base::ScopedFD ipcfd = delegate->TakeIpcFd();
 #elif defined(OS_POSIX) && !defined(OS_ANDROID)
+#if !defined(OS_BSD)
   bool use_zygote = delegate->ShouldUseZygote();
+#else
+  bool use_zygote = false;
+#endif
   base::EnvironmentMap env = delegate->GetEnvironment();
   base::ScopedFD ipcfd = delegate->TakeIpcFd();
 #endif
@@@@ -198,7 +202,7 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
d10 4
a13 4
   if (use_zygote) {
     base::ProcessHandle handle = ZygoteHostImpl::GetInstance()->ForkRequest(
         cmd_line->argv(), std::move(files_to_register), process_type);
@@@@ -296,7 +300,7 @@@@ void TerminateOnLauncherThread(bool zygote, base::Proc
d22 1
a22 1
@@@@ -398,7 +402,7 @@@@ void ChildProcessLauncher::Launch(
d29 3
a31 3
     termination_status_ = ZygoteHostImpl::GetInstance()->
         GetTerminationStatus(process_.Handle(), known_dead, &exit_code_);
@@@@ -469,7 +473,7 @@@@ void ChildProcessLauncher::Notify(
@


1.25
log
@use the ipc channel to replace fonts inside the sandbox that are not
available on the system, this fixes a lot of pdf viewer issues where
the text was missing
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.24 2015/12/05 16:13:32 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed Jan 20 21:01:21 2016
+++ content/browser/child_process_launcher.cc	Sat Jan 23 20:10:57 2016
@@@@ -114,7 +114,11 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
d16 1
a16 1
@@@@ -196,7 +200,7 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
d24 2
a25 2
         cmd_line->argv(), files_to_register.Pass(), process_type);
@@@@ -298,7 +302,7 @@@@ void TerminateOnLauncherThread(bool zygote, base::Proc
d34 1
a34 1
@@@@ -400,7 +404,7 @@@@ void ChildProcessLauncher::Launch(
d43 1
a43 1
@@@@ -482,7 +486,7 @@@@ void ChildProcessLauncher::Notify(
d45 1
a45 1
   process_ = process.Pass();
@


1.24
log
@update to 47.0.2526.73
@
text
@d1 3
a3 3
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.23 2015/09/05 16:06:50 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Tue Nov 24 21:00:54 2015
+++ content/browser/child_process_launcher.cc	Wed Dec  2 08:18:32 2015
a24 9
@@@@ -210,7 +214,7 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
         files_to_register->GetMappingWithIDAdjustment(
             base::GlobalDescriptors::kBaseDescriptor);
 
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
     if (process_type == switches::kRendererProcess) {
       const int sandbox_fd =
           RenderSandboxHostLinux::GetInstance()->GetRendererSocket();
@


1.23
log
@update to 45.0.2454.85
@
text
@d1 3
a3 3
$OpenBSD$
--- content/browser/child_process_launcher.cc.orig.port	Wed Sep  2 07:44:50 2015
+++ content/browser/child_process_launcher.cc	Wed Sep  2 07:46:27 2015
d34 1
a34 1
@@@@ -294,7 +298,7 @@@@ void TerminateOnLauncherThread(bool zygote, base::Proc
d43 1
a43 1
@@@@ -399,7 +403,7 @@@@ void ChildProcessLauncher::Launch(
d52 1
a52 1
@@@@ -481,7 +485,7 @@@@ void ChildProcessLauncher::Notify(
@


1.22
log
@update to 44.0.2403.89
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.21 2015/05/24 15:51:53 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed Jul 15 22:30:02 2015
+++ content/browser/child_process_launcher.cc	Wed Jul 22 08:37:29 2015
@@@@ -111,7 +111,11 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
d16 1
a16 1
@@@@ -157,7 +161,7 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
a21 2
   GetContentClient()->browser()->GetAdditionalMappedFilesForChildProcess(
       *cmd_line, child_process_id, files_to_register.get());
d23 3
a25 1
@@@@ -173,7 +177,7 @@@@ void LaunchOnLauncherThread(const NotifyCallback& call
d34 1
a34 1
@@@@ -254,7 +258,7 @@@@ void TerminateOnLauncherThread(bool zygote, base::Proc
d43 1
a43 1
@@@@ -359,7 +363,7 @@@@ void ChildProcessLauncher::Launch(
d52 1
a52 1
@@@@ -441,7 +445,7 @@@@ void ChildProcessLauncher::Notify(
@


1.21
log
@update to 43.0.2357.65
@
text
@d1 3
a3 3
$OpenBSD$
--- content/browser/child_process_launcher.cc.orig.port	Thu May 14 00:23:06 2015
+++ content/browser/child_process_launcher.cc	Sat May 23 00:51:33 2015
d43 1
a43 1
@@@@ -351,7 +355,7 @@@@ void ChildProcessLauncher::Launch(
d52 1
a52 1
@@@@ -433,7 +437,7 @@@@ void ChildProcessLauncher::Notify(
@


1.20
log
@update to 42.0.2311.90
@
text
@d1 4
a4 58
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.19 2015/03/18 19:26:29 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed Apr 15 00:31:22 2015
+++ content/browser/child_process_launcher.cc	Wed Apr 15 08:32:50 2015
@@@@ -120,7 +120,7 @@@@ class ChildProcessLauncher::Context
   // Notifies the client about the result of the operation.
   // Runs on the UI thread.
   void Notify(
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
       bool zygote,
 #endif
       base::Process process);
@@@@ -131,7 +131,7 @@@@ class ChildProcessLauncher::Context
                                              bool background);
 
   static void TerminateInternal(
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
       bool zygote,
 #endif
       base::Process process);
@@@@ -144,7 +144,7 @@@@ class ChildProcessLauncher::Context
 #if defined(OS_ANDROID)
   // The fd to close after creating the process.
   base::ScopedFD ipcfd_;
-#elif defined(OS_POSIX) && !defined(OS_MACOSX)
+#elif defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_BSD)
   bool zygote_;
 #endif
   bool starting_;
@@@@ -158,7 +158,7 @@@@ ChildProcessLauncher::Context::Context()
       client_thread_id_(BrowserThread::UI),
       termination_status_(base::TERMINATION_STATUS_NORMAL_TERMINATION),
       exit_code_(RESULT_CODE_NORMAL_EXIT),
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
       zygote_(false),
 #endif
       starting_(true),
@@@@ -238,7 +238,7 @@@@ void ChildProcessLauncher::Context::ResetClient() {
 }
 
 void ChildProcessLauncher::Context::UpdateTerminationStatus(bool known_dead) {
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
   if (zygote_) {
     termination_status_ = ZygoteHostImpl::GetInstance()->
         GetTerminationStatus(process_.Handle(), known_dead, &exit_code_);
@@@@ -246,7 +246,7 @@@@ void ChildProcessLauncher::Context::UpdateTerminationS
     termination_status_ =
         base::GetKnownDeadTerminationStatus(process_.Handle(), &exit_code_);
   } else {
-#elif defined(OS_MACOSX)
+#elif defined(OS_MACOSX) || defined(OS_BSD)
   if (known_dead) {
     termination_status_ =
         base::GetKnownDeadTerminationStatus(process_.Handle(), &exit_code_);
@@@@ -316,7 +316,9 @@@@ void ChildProcessLauncher::Context::LaunchInternal(
d7 1
a7 1
 #elif defined(OS_POSIX)
d10 2
d16 1
a16 1
@@@@ -366,7 +368,7 @@@@ void ChildProcessLauncher::Context::LaunchInternal(
d25 1
a25 1
@@@@ -382,7 +384,7 @@@@ void ChildProcessLauncher::Context::LaunchInternal(
d34 10
a43 11
@@@@ -446,7 +448,7 @@@@ void ChildProcessLauncher::Context::LaunchInternal(
       client_thread_id, FROM_HERE,
       base::Bind(&Context::Notify,
                  this_object.get(),
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_BSD)
                  use_zygote,
 #endif
                  base::Passed(&process)));
@@@@ -454,7 +456,7 @@@@ void ChildProcessLauncher::Context::LaunchInternal(
 }
d45 2
a46 1
 void ChildProcessLauncher::Context::Notify(
d49 6
a54 6
     bool zygote,
 #endif
     base::Process process) {
@@@@ -467,7 +469,7 @@@@ void ChildProcessLauncher::Context::Notify(
   if (!process_.IsValid())
     LOG(ERROR) << "Failed to launch child process";
d60 1
a60 28
   if (client_) {
@@@@ -493,7 +495,7 @@@@ void ChildProcessLauncher::Context::Terminate() {
   BrowserThread::PostTask(
       BrowserThread::PROCESS_LAUNCHER, FROM_HERE,
       base::Bind(&Context::TerminateInternal,
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
                 zygote_,
 #endif
                 base::Passed(&process_)));
@@@@ -511,7 +513,7 @@@@ void ChildProcessLauncher::Context::SetProcessBackgrou
 
 // static
 void ChildProcessLauncher::Context::TerminateInternal(
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
     bool zygote,
 #endif
     base::Process process) {
@@@@ -525,7 +527,7 @@@@ void ChildProcessLauncher::Context::TerminateInternal(
   process.Terminate(RESULT_CODE_NORMAL_EXIT);
   // On POSIX, we must additionally reap the child.
 #if defined(OS_POSIX)
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
   if (zygote) {
     // If the renderer was created via a zygote, we have to proxy the reaping
     // through the zygote process.
@


1.19
log
@update to 41.0.2272.89
@
text
@d1 4
a4 4
$OpenBSD$
--- content/browser/child_process_launcher.cc.orig.port	Wed Mar 11 07:35:16 2015
+++ content/browser/child_process_launcher.cc	Wed Mar 11 21:28:07 2015
@@@@ -121,7 +121,7 @@@@ class ChildProcessLauncher::Context
d13 1
a13 1
@@@@ -132,7 +132,7 @@@@ class ChildProcessLauncher::Context
d22 1
a22 1
@@@@ -145,7 +145,7 @@@@ class ChildProcessLauncher::Context
d31 1
a31 1
@@@@ -159,7 +159,7 @@@@ ChildProcessLauncher::Context::Context()
d40 1
a40 1
@@@@ -239,7 +239,7 @@@@ void ChildProcessLauncher::Context::ResetClient() {
d49 1
a49 1
@@@@ -247,7 +247,7 @@@@ void ChildProcessLauncher::Context::UpdateTerminationS
d58 1
a58 1
@@@@ -317,7 +317,9 @@@@ void ChildProcessLauncher::Context::LaunchInternal(
d68 1
a68 1
@@@@ -375,7 +377,7 @@@@ void ChildProcessLauncher::Context::LaunchInternal(
d77 1
a77 1
@@@@ -390,7 +392,7 @@@@ void ChildProcessLauncher::Context::LaunchInternal(
d86 1
a86 1
@@@@ -457,7 +459,7 @@@@ void ChildProcessLauncher::Context::LaunchInternal(
d95 1
a95 1
@@@@ -465,7 +467,7 @@@@ void ChildProcessLauncher::Context::LaunchInternal(
d104 1
a104 1
@@@@ -478,7 +480,7 @@@@ void ChildProcessLauncher::Context::Notify(
d113 1
a113 1
@@@@ -504,7 +506,7 @@@@ void ChildProcessLauncher::Context::Terminate() {
d122 1
a122 1
@@@@ -522,7 +524,7 @@@@ void ChildProcessLauncher::Context::SetProcessBackgrou
d131 1
a131 1
@@@@ -536,7 +538,7 @@@@ void ChildProcessLauncher::Context::TerminateInternal(
@


1.18
log
@update to 40.0.2214.91
@
text
@d2 9
a10 5
--- content/browser/child_process_launcher.cc.orig.port	Sat Dec  6 11:42:43 2014
+++ content/browser/child_process_launcher.cc	Sun Dec  7 14:53:20 2014
@@@@ -69,7 +69,7 @@@@ class ChildProcessLauncher::Context
 #else
         terminate_child_on_shutdown_(true)
d12 5
d19 10
a28 1
         , zygote_(false)
d30 23
a52 5
         {
@@@@ -190,7 +190,7 @@@@ class ChildProcessLauncher::Context
     bool launch_elevated = delegate->ShouldLaunchElevated();
 #elif defined(OS_ANDROID)
     // Uses |ipcfd_| instead of |ipcfd| on Android.
d55 6
a60 2
     base::EnvironmentMap env = delegate->GetEnvironment();
     base::ScopedFD ipcfd = delegate->TakeIpcFd();
d62 9
a70 3
@@@@ -253,7 +253,7 @@@@ class ChildProcessLauncher::Context
     // We need to close the client end of the IPC channel to reliably detect
     // child termination.
d74 6
a79 6
     GetContentClient()->browser()->GetAdditionalMappedFilesForChildProcess(
         *cmd_line, child_process_id, files_to_register.get());
     if (use_zygote) {
@@@@ -268,7 +268,7 @@@@ class ChildProcessLauncher::Context
           files_to_register->GetMappingWithIDAdjustment(
               base::GlobalDescriptors::kBaseDescriptor);
d83 7
a89 7
       if (process_type == switches::kRendererProcess) {
         const int sandbox_fd =
             RenderSandboxHostLinux::GetInstance()->GetRendererSocket();
@@@@ -335,7 +335,7 @@@@ class ChildProcessLauncher::Context
       base::Bind(
           &Context::Notify,
           this_object.get(),
d92 1
a92 1
           use_zygote,
d94 3
a96 3
           base::Passed(base::Process(handle))));
@@@@ -343,7 +343,7 @@@@ class ChildProcessLauncher::Context
   }
d98 1
a98 1
   void Notify(
d101 1
a101 1
       bool zygote,
d103 4
a106 4
       base::Process process) {
@@@@ -356,7 +356,7 @@@@ class ChildProcessLauncher::Context
     if (!process_.IsValid())
       LOG(ERROR) << "Failed to launch child process";
d110 1
a110 1
     zygote_ = zygote;
d112 5
a116 5
     if (client_) {
@@@@ -383,7 +383,7 @@@@ class ChildProcessLauncher::Context
         BrowserThread::PROCESS_LAUNCHER, FROM_HERE,
         base::Bind(
             &Context::TerminateInternal,
d119 1
a119 1
             zygote_,
d121 2
a122 3
             base::Passed(&process_)));
@@@@ -398,7 +398,7 @@@@ class ChildProcessLauncher::Context
   }
d124 2
a125 1
   static void TerminateInternal(
d128 1
a128 1
       bool zygote,
d130 4
a133 4
       base::Process process) {
@@@@ -412,7 +412,7 @@@@ class ChildProcessLauncher::Context
     process.Terminate(RESULT_CODE_NORMAL_EXIT);
     // On POSIX, we must additionally reap the child.
d137 3
a139 21
     if (zygote) {
       // If the renderer was created via a zygote, we have to proxy the reaping
       // through the zygote process.
@@@@ -438,7 +438,7 @@@@ class ChildProcessLauncher::Context
 #if defined(OS_ANDROID)
   // The fd to close after creating the process.
   base::ScopedFD ipcfd_;
-#elif defined(OS_POSIX) && !defined(OS_MACOSX)
+#elif defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_BSD)
   bool zygote_;
 #endif
 };
@@@@ -479,7 +479,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
       *exit_code = context_->exit_code_;
     return context_->termination_status_;
   }
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
   if (context_->zygote_) {
     context_->termination_status_ = ZygoteHostImpl::GetInstance()->
         GetTerminationStatus(context_->process_.Handle(), known_dead,
@


1.17
log
@update to 37.0.2062.120
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.16 2014/07/20 17:22:34 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed Sep 10 01:47:13 2014
+++ content/browser/child_process_launcher.cc	Wed Sep 10 22:05:41 2014
@@@@ -68,7 +68,7 @@@@ class ChildProcessLauncher::Context
d13 11
a23 1
@@@@ -234,7 +234,7 @@@@ class ChildProcessLauncher::Context
a24 1
     base::ScopedFD ipcfd_closer(ipcfd);
d28 6
a33 6
     GetContentClient()->browser()->
         GetAdditionalMappedFilesForChildProcess(*cmd_line, child_process_id,
                                                 &files_to_register);
@@@@ -255,7 +255,7 @@@@ class ChildProcessLauncher::Context
                 base::GlobalDescriptors::kBaseDescriptor));
       }
d40 1
a40 1
@@@@ -322,7 +322,7 @@@@ class ChildProcessLauncher::Context
d48 2
a49 2
           handle));
@@@@ -330,7 +330,7 @@@@ class ChildProcessLauncher::Context
d57 3
a59 3
       base::ProcessHandle handle) {
@@@@ -343,7 +343,7 @@@@ class ChildProcessLauncher::Context
     if (!handle)
d67 1
a67 1
@@@@ -370,7 +370,7 @@@@ class ChildProcessLauncher::Context
d75 2
a76 2
             process_.handle()));
@@@@ -387,7 +387,7 @@@@ class ChildProcessLauncher::Context
d84 2
a85 2
       base::ProcessHandle handle) {
@@@@ -401,7 +401,7 @@@@ class ChildProcessLauncher::Context
d94 1
a94 1
@@@@ -428,7 +428,7 @@@@ class ChildProcessLauncher::Context
d97 1
a97 1
   int ipcfd_;
d103 1
a103 1
@@@@ -470,7 +470,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
d111 1
a111 1
         GetTerminationStatus(handle, known_dead, &context_->exit_code_);
@


1.16
log
@update to 36.0.1985.125;

from this release Chromium uses Aura instead of Gtk+ so the UI will look
a bit different, and that is completely normal.
@
text
@d1 4
a4 4
$OpenBSD$
--- content/browser/child_process_launcher.cc.orig.port	Thu Jul 17 12:44:48 2014
+++ content/browser/child_process_launcher.cc	Thu Jul 17 12:48:25 2014
@@@@ -66,7 +66,7 @@@@ class ChildProcessLauncher::Context
d13 1
a13 1
@@@@ -232,7 +232,7 @@@@ class ChildProcessLauncher::Context
d22 1
a22 1
@@@@ -253,7 +253,7 @@@@ class ChildProcessLauncher::Context
d31 1
a31 1
@@@@ -307,7 +307,7 @@@@ class ChildProcessLauncher::Context
d40 1
a40 1
@@@@ -315,7 +315,7 @@@@ class ChildProcessLauncher::Context
d49 1
a49 1
@@@@ -328,7 +328,7 @@@@ class ChildProcessLauncher::Context
d58 1
a58 1
@@@@ -355,7 +355,7 @@@@ class ChildProcessLauncher::Context
d67 1
a67 1
@@@@ -372,7 +372,7 @@@@ class ChildProcessLauncher::Context
d76 1
a76 1
@@@@ -386,7 +386,7 @@@@ class ChildProcessLauncher::Context
d85 1
a85 1
@@@@ -413,7 +413,7 @@@@ class ChildProcessLauncher::Context
d94 1
a94 1
@@@@ -455,7 +455,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
@


1.15
log
@update to 35.0.1916.114
@
text
@d1 7
a7 7
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.14 2014/04/17 16:27:53 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed May 14 21:22:04 2014
+++ content/browser/child_process_launcher.cc	Thu May 22 21:42:27 2014
@@@@ -59,7 +59,7 @@@@ class ChildProcessLauncher::Context
         termination_status_(base::TERMINATION_STATUS_NORMAL_TERMINATION),
         exit_code_(RESULT_CODE_NORMAL_EXIT),
         starting_(true)
d13 1
a13 1
@@@@ -231,7 +231,7 @@@@ class ChildProcessLauncher::Context
d22 1
a22 1
@@@@ -252,7 +252,7 @@@@ class ChildProcessLauncher::Context
d31 1
a31 1
@@@@ -306,7 +306,7 @@@@ class ChildProcessLauncher::Context
d40 1
a40 1
@@@@ -314,7 +314,7 @@@@ class ChildProcessLauncher::Context
d49 1
a49 1
@@@@ -327,7 +327,7 @@@@ class ChildProcessLauncher::Context
d58 1
a58 1
@@@@ -354,7 +354,7 @@@@ class ChildProcessLauncher::Context
d67 1
a67 1
@@@@ -368,7 +368,7 @@@@ class ChildProcessLauncher::Context
d76 1
a76 1
@@@@ -382,7 +382,7 @@@@ class ChildProcessLauncher::Context
d85 1
a85 1
@@@@ -409,7 +409,7 @@@@ class ChildProcessLauncher::Context
d94 1
a94 1
@@@@ -451,7 +451,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
@


1.14
log
@update to 34.0.1847.116 and disable Werror for the future clang update
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.13 2014/01/18 11:42:04 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed Apr  2 21:03:33 2014
+++ content/browser/child_process_launcher.cc	Sat Apr 12 09:40:41 2014
@@@@ -58,7 +58,7 @@@@ class ChildProcessLauncher::Context
d13 1
a13 1
@@@@ -245,7 +245,7 @@@@ class ChildProcessLauncher::Context
d15 1
a15 1
     file_util::ScopedFD ipcfd_closer(&ipcfd);
d22 1
a22 1
@@@@ -266,7 +266,7 @@@@ class ChildProcessLauncher::Context
d31 1
a31 1
@@@@ -320,7 +320,7 @@@@ class ChildProcessLauncher::Context
d40 1
a40 1
@@@@ -328,7 +328,7 @@@@ class ChildProcessLauncher::Context
d49 1
a49 1
@@@@ -341,7 +341,7 @@@@ class ChildProcessLauncher::Context
d58 1
a58 1
@@@@ -368,7 +368,7 @@@@ class ChildProcessLauncher::Context
d67 1
a67 1
@@@@ -382,7 +382,7 @@@@ class ChildProcessLauncher::Context
d76 1
a76 1
@@@@ -396,7 +396,7 @@@@ class ChildProcessLauncher::Context
d85 1
a85 1
@@@@ -423,7 +423,7 @@@@ class ChildProcessLauncher::Context
d94 1
a94 1
@@@@ -481,7 +481,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
@


1.13
log
@update to 32.0.1700.76
@
text
@d1 3
a3 3
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.12 2013/12/12 10:43:18 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Mon Jan 13 21:59:58 2014
+++ content/browser/child_process_launcher.cc	Thu Jan 16 12:26:42 2014
d13 1
a13 1
@@@@ -235,7 +235,7 @@@@ class ChildProcessLauncher::Context
d22 1
a22 1
@@@@ -256,7 +256,7 @@@@ class ChildProcessLauncher::Context
d31 1
a31 1
@@@@ -310,7 +310,7 @@@@ class ChildProcessLauncher::Context
d40 1
a40 1
@@@@ -318,7 +318,7 @@@@ class ChildProcessLauncher::Context
d49 1
a49 1
@@@@ -331,7 +331,7 @@@@ class ChildProcessLauncher::Context
d58 1
a58 1
@@@@ -354,7 +354,7 @@@@ class ChildProcessLauncher::Context
d67 1
a67 1
@@@@ -368,7 +368,7 @@@@ class ChildProcessLauncher::Context
d76 1
a76 1
@@@@ -382,7 +382,7 @@@@ class ChildProcessLauncher::Context
d85 1
a85 1
@@@@ -409,7 +409,7 @@@@ class ChildProcessLauncher::Context
d94 1
a94 1
@@@@ -465,7 +465,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
@


1.12
log
@update to 31.0.1650.63
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.11 2013/07/15 14:59:30 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed Dec  4 21:54:49 2013
+++ content/browser/child_process_launcher.cc	Thu Dec  5 15:32:45 2013
@@@@ -56,7 +56,7 @@@@ class ChildProcessLauncher::Context
d13 3
a15 3
@@@@ -230,7 +230,7 @@@@ class ChildProcessLauncher::Context
         FileDescriptorInfo(kPrimaryIPCChannel,
                                     base::FileDescriptor(ipcfd, false)));
d22 1
a22 1
@@@@ -251,7 +251,7 @@@@ class ChildProcessLauncher::Context
d31 1
a31 1
@@@@ -305,7 +305,7 @@@@ class ChildProcessLauncher::Context
d40 1
a40 1
@@@@ -313,7 +313,7 @@@@ class ChildProcessLauncher::Context
d49 1
a49 1
@@@@ -326,7 +326,7 @@@@ class ChildProcessLauncher::Context
d58 1
a58 1
@@@@ -349,7 +349,7 @@@@ class ChildProcessLauncher::Context
d67 1
a67 1
@@@@ -363,7 +363,7 @@@@ class ChildProcessLauncher::Context
d76 1
a76 1
@@@@ -377,7 +377,7 @@@@ class ChildProcessLauncher::Context
d85 1
a85 1
@@@@ -404,7 +404,7 @@@@ class ChildProcessLauncher::Context
d94 1
a94 1
@@@@ -460,7 +460,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
@


1.11
log
@update to 28.0.1500.45
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.10 2013/05/30 18:42:18 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Wed Jun 12 09:28:05 2013
+++ content/browser/child_process_launcher.cc	Sun Jul 14 00:51:30 2013
@@@@ -55,7 +55,7 @@@@ class ChildProcessLauncher::Context
d13 1
a13 1
@@@@ -229,7 +229,7 @@@@ class ChildProcessLauncher::Context
d22 1
a22 1
@@@@ -250,7 +250,7 @@@@ class ChildProcessLauncher::Context
d31 1
a31 1
@@@@ -304,7 +304,7 @@@@ class ChildProcessLauncher::Context
d40 1
a40 1
@@@@ -312,7 +312,7 @@@@ class ChildProcessLauncher::Context
d49 1
a49 1
@@@@ -325,7 +325,7 @@@@ class ChildProcessLauncher::Context
d58 1
a58 1
@@@@ -348,7 +348,7 @@@@ class ChildProcessLauncher::Context
d67 1
a67 1
@@@@ -362,7 +362,7 @@@@ class ChildProcessLauncher::Context
d76 1
a76 1
@@@@ -376,7 +376,7 @@@@ class ChildProcessLauncher::Context
d85 1
a85 1
@@@@ -403,7 +403,7 @@@@ class ChildProcessLauncher::Context
d94 1
a94 1
@@@@ -459,7 +459,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
@


1.10
log
@update to 27.0.1453.93
@
text
@d1 3
a3 3
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.9 2013/04/03 08:19:10 robert Exp $
--- content/browser/child_process_launcher.cc.orig.port	Fri May 17 22:44:18 2013
+++ content/browser/child_process_launcher.cc	Thu May 30 00:10:49 2013
d22 9
@


1.9
log
@- update to 26.0.1410.43
- switch chromium to use clang/llvm instead of gcc
- switch back to the internal libvpx because it's an unreleased version
  at this point
- re-enable SSE2 support
@
text
@d1 4
a4 4
$OpenBSD$
--- content/browser/child_process_launcher.cc.orig.port	Fri Mar 22 02:13:14 2013
+++ content/browser/child_process_launcher.cc	Tue Apr  2 21:05:17 2013
@@@@ -53,7 +53,7 @@@@ class ChildProcessLauncher::Context
d13 1
a13 1
@@@@ -199,7 +199,7 @@@@ class ChildProcessLauncher::Context
d22 1
a22 1
@@@@ -272,7 +272,7 @@@@ class ChildProcessLauncher::Context
d31 1
a31 1
@@@@ -280,7 +280,7 @@@@ class ChildProcessLauncher::Context
d40 1
a40 1
@@@@ -293,7 +293,7 @@@@ class ChildProcessLauncher::Context
d49 1
a49 1
@@@@ -316,7 +316,7 @@@@ class ChildProcessLauncher::Context
d58 1
a58 1
@@@@ -330,7 +330,7 @@@@ class ChildProcessLauncher::Context
d67 1
a67 1
@@@@ -344,7 +344,7 @@@@ class ChildProcessLauncher::Context
d76 1
a76 1
@@@@ -371,7 +371,7 @@@@ class ChildProcessLauncher::Context
d85 1
a85 1
@@@@ -427,7 +427,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
@


1.8
log
@update to 25.0.1364.160
@
text
@d1 3
a3 3
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.7 2013/01/18 21:38:02 robert Exp $
--- content/browser/child_process_launcher.cc.orig	Thu Feb 21 04:26:28 2013
+++ content/browser/child_process_launcher.cc	Fri Feb 22 19:40:32 2013
d13 1
a13 1
@@@@ -196,7 +196,7 @@@@ class ChildProcessLauncher::Context
d22 1
a22 1
@@@@ -269,7 +269,7 @@@@ class ChildProcessLauncher::Context
d31 1
a31 1
@@@@ -277,7 +277,7 @@@@ class ChildProcessLauncher::Context
d40 1
a40 1
@@@@ -290,7 +290,7 @@@@ class ChildProcessLauncher::Context
d49 1
a49 1
@@@@ -313,7 +313,7 @@@@ class ChildProcessLauncher::Context
d58 1
a58 1
@@@@ -327,7 +327,7 @@@@ class ChildProcessLauncher::Context
d67 1
a67 1
@@@@ -341,7 +341,7 @@@@ class ChildProcessLauncher::Context
d76 1
a76 1
@@@@ -368,7 +368,7 @@@@ class ChildProcessLauncher::Context
d85 1
a85 1
@@@@ -424,7 +424,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
@


1.7
log
@update to 24.0.1312.52
@
text
@d1 3
a3 3
$OpenBSD$
--- content/browser/child_process_launcher.cc.orig	Mon Jan 14 19:49:36 2013
+++ content/browser/child_process_launcher.cc	Tue Jan 15 19:32:28 2013
d85 1
a85 1
@@@@ -423,7 +423,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
d93 1
a93 1
         GetTerminationStatus(handle, &context_->exit_code_);
@


1.6
log
@update to 22.0.1229.94
@
text
@d2 3
a4 3
--- content/browser/child_process_launcher.cc.orig	Thu Oct 11 23:31:56 2012
+++ content/browser/child_process_launcher.cc	Thu Oct 11 23:48:24 2012
@@@@ -52,7 +52,7 @@@@ class ChildProcessLauncher::Context
d6 1
a6 1
         exit_code_(content::RESULT_CODE_NORMAL_EXIT),
d13 4
a16 4
@@@@ -188,7 +188,7 @@@@ class ChildProcessLauncher::Context
     base::GlobalDescriptors::Mapping files_to_register;
     files_to_register.push_back(std::pair<base::GlobalDescriptors::Key, int>(
         kPrimaryIPCChannel, ipcfd));
d19 4
a22 4
     content::GetContentClient()->browser()->
         GetAdditionalMappedFilesForChildProcess(*cmd_line, &files_to_register);
     if (use_zygote) {
@@@@ -261,7 +261,7 @@@@ class ChildProcessLauncher::Context
d31 1
a31 1
@@@@ -269,7 +269,7 @@@@ class ChildProcessLauncher::Context
d40 1
a40 1
@@@@ -282,7 +282,7 @@@@ class ChildProcessLauncher::Context
d49 1
a49 1
@@@@ -305,7 +305,7 @@@@ class ChildProcessLauncher::Context
d58 1
a58 1
@@@@ -319,7 +319,7 @@@@ class ChildProcessLauncher::Context
d67 2
a68 2
@@@@ -333,7 +333,7 @@@@ class ChildProcessLauncher::Context
     process.Terminate(content::RESULT_CODE_NORMAL_EXIT);
d76 1
a76 1
@@@@ -360,7 +360,7 @@@@ class ChildProcessLauncher::Context
d85 1
a85 1
@@@@ -413,7 +413,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
@


1.5
log
@update to 20.0.1132.47
@
text
@d2 3
a4 3
--- content/browser/child_process_launcher.cc.orig	Sat Jul  7 15:53:55 2012
+++ content/browser/child_process_launcher.cc	Sat Jul  7 15:54:36 2012
@@@@ -49,7 +49,7 @@@@ class ChildProcessLauncher::Context
d13 16
a28 25
@@@@ -132,7 +132,7 @@@@ class ChildProcessLauncher::Context
     // to reliably detect child termination.
     file_util::ScopedFD ipcfd_closer(&ipcfd);
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
     // On Linux, we need to add some extra file descriptors for crash handling.
     std::string process_type =
         cmd_line->GetSwitchValueASCII(switches::kProcessType);
@@@@ -157,7 +157,7 @@@@ class ChildProcessLauncher::Context
           ipcfd,
           kPrimaryIPCChannel + base::GlobalDescriptors::kBaseDescriptor));
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
       if (crash_signal_fd >= 0) {
         fds_to_map.push_back(std::make_pair(
             crash_signal_fd,
@@@@ -214,14 +214,14 @@@@ class ChildProcessLauncher::Context
         base::Bind(
             &Context::Notify,
             this_object.get(),
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
             use_zygote,
d30 2
a31 1
             handle));
d40 1
a40 1
@@@@ -230,7 +230,7 @@@@ class ChildProcessLauncher::Context
d49 1
a49 1
@@@@ -253,7 +253,7 @@@@ class ChildProcessLauncher::Context
d58 1
a58 1
@@@@ -267,7 +267,7 @@@@ class ChildProcessLauncher::Context
d67 1
a67 1
@@@@ -277,7 +277,7 @@@@ class ChildProcessLauncher::Context
d71 2
a72 2
-#if !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
d76 6
a81 6
@@@@ -301,7 +301,7 @@@@ class ChildProcessLauncher::Context
   // shutdown. Default behavior is to terminate the child.
   bool terminate_child_on_shutdown_;
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
d85 1
a85 1
@@@@ -352,7 +352,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
@


1.4
log
@Disable using the zygote process just like on macosx to make
chrome happy with rthreads.
This change is fine anyways because we are not using the setuid
sandboxing which would require the zygote process.
@
text
@d2 4
a5 3
--- content/browser/child_process_launcher.cc.orig	Tue Mar 20 12:51:45 2012
+++ content/browser/child_process_launcher.cc	Tue Mar 20 12:57:28 2012
@@@@ -50,7 +50,7 @@@@ class ChildProcessLauncher::Context
d7 3
a9 4
         starting_(true),
         terminate_child_on_shutdown_(true)
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
d13 1
a13 1
@@@@ -127,7 +127,7 @@@@ class ChildProcessLauncher::Context
d17 2
a18 2
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
d22 1
a22 1
@@@@ -152,7 +152,7 @@@@ class ChildProcessLauncher::Context
d26 2
a27 2
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
d31 1
a31 1
@@@@ -209,14 +209,14 @@@@ class ChildProcessLauncher::Context
d35 2
a36 2
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
d43 2
a44 2
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
d48 1
a48 1
@@@@ -225,7 +225,7 @@@@ class ChildProcessLauncher::Context
d52 2
a53 2
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
d57 1
a57 1
@@@@ -248,7 +248,7 @@@@ class ChildProcessLauncher::Context
d61 2
a62 2
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
d66 1
a66 1
@@@@ -262,7 +262,7 @@@@ class ChildProcessLauncher::Context
d70 2
a71 2
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
d75 1
a75 1
@@@@ -272,7 +272,7 @@@@ class ChildProcessLauncher::Context
d79 2
a80 2
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_OPENBSD)
d84 1
a84 1
@@@@ -296,7 +296,7 @@@@ class ChildProcessLauncher::Context
d88 2
a89 2
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
d93 1
a93 1
@@@@ -347,7 +347,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
d97 2
a98 2
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
d100 1
a100 1
     context_->termination_status_ = ZygoteHost::GetInstance()->
@


1.3
log
@update to the next stable release (13.0.782.112)
@
text
@d1 9
a9 18
$OpenBSD: patch-content_browser_child_process_launcher_cc,v 1.2 2011/06/08 20:36:56 robert Exp $
--- content/browser/child_process_launcher.cc.orig	Wed Jun  8 12:16:03 2011
+++ content/browser/child_process_launcher.cc	Wed Jun  8 18:19:53 2011
@@@@ -20,7 +20,7 @@@@
 #if defined(OS_WIN)
 #include "base/file_path.h"
 #include "chrome/common/sandbox_policy.h"
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_OPENBSD)
 #include "base/memory/singleton.h"
 #include "chrome/browser/crash_handler_host_linux.h"
 #include "content/browser/zygote_host_linux.h"
@@@@ -45,7 +45,7 @@@@ class ChildProcessLauncher::Context
       : client_(NULL),
         client_thread_id_(BrowserThread::UI),
         starting_(true)
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d13 3
a15 3
@@@@ -110,7 +110,7 @@@@ class ChildProcessLauncher::Context
     handle = sandbox::StartProcessWithAccess(cmd_line, exposed_dir);
 #elif defined(OS_POSIX)
d17 2
a18 2
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d22 1
a22 1
@@@@ -151,7 +151,7 @@@@ class ChildProcessLauncher::Context
d26 2
a27 2
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d31 6
a36 6
@@@@ -200,20 +200,20 @@@@ class ChildProcessLauncher::Context
         NewRunnableMethod(
             this,
             &ChildProcessLauncher::Context::Notify,
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d43 2
a44 2
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d48 6
a53 4
     starting_ = false;
     process_.set_handle(handle);
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d57 1
a57 1
@@@@ -233,7 +233,7 @@@@ class ChildProcessLauncher::Context
d59 4
a62 4
         NewRunnableFunction(
             &ChildProcessLauncher::Context::TerminateInternal,
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d66 1
a66 1
@@@@ -246,7 +246,7 @@@@ class ChildProcessLauncher::Context
d70 2
a71 2
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d75 2
a76 2
@@@@ -256,7 +256,7 @@@@ class ChildProcessLauncher::Context
     process.Terminate(ResultCodes::NORMAL_EXIT);
d79 2
a80 2
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d84 3
a86 3
@@@@ -275,7 +275,7 @@@@ class ChildProcessLauncher::Context
   base::Process process_;
   bool starting_;
d88 2
a89 2
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d93 6
a98 6
@@@@ -321,7 +321,7 @@@@ base::TerminationStatus ChildProcessLauncher::GetChild
     int* exit_code) {
   base::TerminationStatus status;
   base::ProcessHandle handle = context_->process_.handle();
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
d100 2
a101 2
     status = ZygoteHost::GetInstance()->GetTerminationStatus(handle, exit_code);
   } else
@


1.2
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@d2 2
a3 2
--- content/browser/child_process_launcher.cc.orig	Thu Apr 28 11:23:09 2011
+++ content/browser/child_process_launcher.cc	Thu Apr 28 11:24:09 2011
d10 1
a10 1
 #include "base/singleton.h"
d28 4
a31 4
     if (use_zygote) {
       base::GlobalDescriptors::Mapping mapping;
       mapping.push_back(std::pair<uint32_t, int>(kPrimaryIPCChannel, ipcfd));
@@@@ -131,7 +131,7 @@@@ class ChildProcessLauncher::Context
d37 4
a40 4
       // On Linux, we need to add some extra file descriptors for crash handling
       // and the sandbox.
       bool is_renderer =
@@@@ -205,20 +205,20 @@@@ class ChildProcessLauncher::Context
d64 1
a64 1
@@@@ -238,7 +238,7 @@@@ class ChildProcessLauncher::Context
@

