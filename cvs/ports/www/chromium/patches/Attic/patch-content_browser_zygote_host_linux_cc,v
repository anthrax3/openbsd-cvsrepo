head	1.7;
access;
symbols
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2012.02.17.10.19.51;	author robert;	state dead;
branches;
next	1.6;

1.6
date	2011.12.14.16.58.19;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2011.10.27.07.59.09;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.19.08.55.26;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2011.08.16.08.17.44;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2011.06.08.20.36.56;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.29.13.18.01;	author robert;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update to 17.0.963.56
@
text
@$OpenBSD: patch-content_browser_zygote_host_linux_cc,v 1.6 2011/12/14 16:58:19 robert Exp $
--- content/browser/zygote_host_linux.cc.orig	Wed Dec  7 09:01:17 2011
+++ content/browser/zygote_host_linux.cc	Tue Dec 13 21:23:12 2011
@@@@ -273,6 +273,7 @@@@ pid_t ZygoteHost::ForkRequest(
       return base::kNullProcessHandle;
   }
 
+#if defined(OS_LINUX)
   // This is just a starting score for a renderer or extension (the
   // only types of processes that will be started this way).  It will
   // get adjusted as time goes on.  (This is the same value as
@@@@ -280,10 +281,12 @@@@ pid_t ZygoteHost::ForkRequest(
   // that's not something we can include here.)
   const int kLowestRendererOomScore = 300;
   AdjustRendererOOMScore(pid, kLowestRendererOomScore);
+#endif
 
   return pid;
 }
 
+#if defined(OS_LINUX)
 void ZygoteHost::AdjustRendererOOMScore(base::ProcessHandle pid, int score) {
   // 1) You can't change the oom_score_adj of a non-dumpable process
   //    (EPERM) unless you're root. Because of this, we can't set the
@@@@ -350,6 +353,7 @@@@ void ZygoteHost::AdjustRendererOOMScore(base::ProcessH
       PLOG(ERROR) << "Failed to adjust OOM score of renderer with pid " << pid;
   }
 }
+#endif
 
 void ZygoteHost::EnsureProcessTerminated(pid_t process) {
   DCHECK(init_);
@


1.6
log
@update to 16.0.912.63
@
text
@d1 1
a1 1
$OpenBSD: patch-content_browser_zygote_host_linux_cc,v 1.5 2011/10/27 07:59:09 robert Exp $
@


1.5
log
@update to 15.0.874.102.

switch from using the hacked macosx transport dib to the linux one
which uses sysv shms.
make sure you also have a current kernel before using this version
@
text
@d1 4
a4 4
$OpenBSD$
--- content/browser/zygote_host_linux.cc.orig	Fri Oct 21 10:29:43 2011
+++ content/browser/zygote_host_linux.cc	Wed Oct 26 14:10:40 2011
@@@@ -271,6 +271,7 @@@@ pid_t ZygoteHost::ForkRequest(
d12 1
a12 1
@@@@ -278,10 +279,12 @@@@ pid_t ZygoteHost::ForkRequest(
d25 1
a25 1
@@@@ -345,6 +348,7 @@@@ void ZygoteHost::AdjustRendererOOMScore(base::ProcessH
@


1.4
log
@update to 14.0.835.163
@
text
@d2 14
a15 8
--- content/browser/zygote_host_linux.cc.orig	Fri Sep 16 18:21:50 2011
+++ content/browser/zygote_host_linux.cc	Fri Sep 16 18:22:14 2011
@@@@ -301,7 +301,9 @@@@ void ZygoteHost::AdjustRendererOOMScore(base::ProcessH
   if (using_suid_sandbox_ && !selinux) {
     std::vector<std::string> adj_oom_score_cmdline;
     adj_oom_score_cmdline.push_back(sandbox_binary_);
+#if !defined(OS_OPENBSD)
     adj_oom_score_cmdline.push_back(base::kAdjustOOMScoreSwitch);
a16 2
     adj_oom_score_cmdline.push_back(base::Int64ToString(pid));
     adj_oom_score_cmdline.push_back(base::IntToString(score));
d18 8
a25 6
@@@@ -311,8 +313,10 @@@@ void ZygoteHost::AdjustRendererOOMScore(base::ProcessH
       ProcessWatcher::EnsureProcessGetsReaped(sandbox_helper_process);
     }
   } else if (!using_suid_sandbox_) {
+#if !defined(OS_OPENBSD)
     if (!base::AdjustOOMScore(pid, score))
a26 1
+#endif
d29 1
d31 2
@


1.3
log
@update to the next stable release (13.0.782.112)
@
text
@d2 2
a3 2
--- content/browser/zygote_host_linux.cc.orig	Wed Aug  3 12:02:53 2011
+++ content/browser/zygote_host_linux.cc	Wed Aug  3 12:04:23 2011
d5 1
a6 1
 
d13 2
a14 2
     CommandLine adj_oom_score_cmd(adj_oom_score_cmdline);
@@@@ -310,8 +312,10 @@@@ void ZygoteHost::AdjustRendererOOMScore(base::ProcessH
@


1.2
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@d1 9
a9 12
$OpenBSD: patch-content_browser_zygote_host_linux_cc,v 1.1 2011/04/29 13:18:01 robert Exp $
--- content/browser/zygote_host_linux.cc.orig	Mon Jun  6 11:11:28 2011
+++ content/browser/zygote_host_linux.cc	Wed Jun  8 18:13:20 2011
@@@@ -61,7 +61,12 @@@@ ZygoteHost::ZygoteHost()
 }
 
 ZygoteHost::~ZygoteHost() {
+  Pickle pickle;
   if (init_)
+#if defined(OS_OPENBSD)
+    pickle.WriteInt(kCmdEnd);
+    HANDLE_EINTR(write(control_fd_, pickle.data(), pickle.size()));
d11 5
a15 26
     close(control_fd_);
 }
 
@@@@ -81,7 +86,12 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
   cmd_line.AppendSwitchASCII(switches::kProcessType, switches::kZygoteProcess);
 
   int fds[2];
+#if defined(OS_OPENBSD)
+  if (socketpair(PF_UNIX, SOCK_SEQPACKET, 0, fds) != 0)
+    CHECK(socketpair(PF_UNIX, SOCK_DGRAM, 0, fds) == 0);
+#else
   CHECK(socketpair(PF_UNIX, SOCK_SEQPACKET, 0, fds) == 0);
+#endif
   base::file_handle_mapping_vector fds_to_map;
   fds_to_map.push_back(std::make_pair(fds[1], 3));
 
@@@@ -153,6 +163,7 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
     // We need to look for it.
     // But first, wait for the zygote to tell us it's running.
     // The sending code is in chrome/browser/zygote_main_linux.cc.
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
     std::vector<int> fds_vec;
     const int kExpectedLength = sizeof(kZygoteMagic);
     char buf[kExpectedLength];
@@@@ -184,6 +195,7 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
       ProcessWatcher::EnsureProcessGetsReaped(process);
d17 4
a20 1
   } else {
a21 21
     // Not using the SUID sandbox.
     pid_ = process;
   }
@@@@ -250,12 +262,15 @@@@ pid_t ZygoteHost::ForkRenderer(
       return base::kNullProcessHandle;
   }
 
+#if defined(OS_LINUX)
   const int kRendererScore = 5;
   AdjustRendererOOMScore(pid, kRendererScore);
+#endif
 
   return pid;
 }
 
+#if defined(OS_LINUX)
 void ZygoteHost::AdjustRendererOOMScore(base::ProcessHandle pid, int score) {
   // 1) You can't change the oom_adj of a non-dumpable process (EPERM) unless
   //    you're root. Because of this, we can't set the oom_adj from the browser
@@@@ -307,6 +322,7 @@@@ void ZygoteHost::AdjustRendererOOMScore(base::ProcessH
       PLOG(ERROR) << "Failed to adjust OOM score of renderer with pid " << pid;
a23 1
+#endif
a24 2
 void ZygoteHost::EnsureProcessTerminated(pid_t process) {
   DCHECK(init_);
@


1.1
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@d1 3
a3 3
$OpenBSD$
--- content/browser/zygote_host_linux.cc.orig	Thu Apr 28 11:35:54 2011
+++ content/browser/zygote_host_linux.cc	Thu Apr 28 11:38:09 2011
d30 1
a30 1
@@@@ -149,6 +159,7 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
d34 1
a34 1
+#if defined(OS_LINUX)
d38 1
a38 1
@@@@ -180,6 +191,7 @@@@ void ZygoteHost::Init(const std::string& sandbox_cmd) 
d46 1
a46 1
@@@@ -246,12 +258,15 @@@@ pid_t ZygoteHost::ForkRenderer(
d62 1
a62 1
@@@@ -303,6 +318,7 @@@@ void ZygoteHost::AdjustRendererOOMScore(base::ProcessH
@

