head	1.12;
access;
symbols
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@# @;


1.12
date	2013.12.12.10.43.18;	author robert;	state dead;
branches;
next	1.11;

1.11
date	2013.09.29.19.04.07;	author robert;	state Exp;
branches;
next	1.10;

1.10
date	2013.07.15.14.59.30;	author robert;	state Exp;
branches;
next	1.9;

1.9
date	2013.05.30.18.42.18;	author robert;	state Exp;
branches;
next	1.8;

1.8
date	2013.04.03.08.19.10;	author robert;	state Exp;
branches;
next	1.7;

1.7
date	2013.01.18.21.38.02;	author robert;	state Exp;
branches;
next	1.6;

1.6
date	2012.10.12.16.46.10;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2012.07.10.09.22.34;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.23.13.28.25;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2011.08.16.08.17.44;	author robert;	state dead;
branches;
next	1.2;

1.2
date	2011.06.08.20.36.56;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.29.13.18.02;	author robert;	state Exp;
branches;
next	;


desc
@@


1.12
log
@update to 31.0.1650.63
@
text
@$OpenBSD: patch-ui_base_l10n_l10n_util_cc,v 1.11 2013/09/29 19:04:07 robert Exp $
--- ui/base/l10n/l10n_util.cc.orig.port	Wed Sep 18 10:13:14 2013
+++ ui/base/l10n/l10n_util.cc	Sun Sep 22 16:09:42 2013
@@@@ -35,7 +35,7 @@@@
 #include "ui/base/l10n/l10n_util_android.h"
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 #include <glib.h>
 #endif
 
@@@@ -452,7 +452,7 @@@@ std::string GetApplicationLocale(const std::string& pr
   // On Android, query java.util.Locale for the default locale.
   candidates.push_back(GetDefaultLocale());
 
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_BSD)
   // If we're on a different Linux system, we have glib.
 
   // GLib implements correct environment variable parsing with
@


1.11
log
@update to 29.0.1547.76
@
text
@d1 1
a1 1
$OpenBSD: patch-ui_base_l10n_l10n_util_cc,v 1.10 2013/07/15 14:59:30 robert Exp $
@


1.10
log
@update to 28.0.1500.45
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_base_l10n_l10n_util_cc,v 1.9 2013/05/30 18:42:18 robert Exp $
--- ui/base/l10n/l10n_util.cc.orig.port	Wed Jun 12 09:29:54 2013
+++ ui/base/l10n/l10n_util.cc	Sun Jul  7 15:54:58 2013
d13 1
a13 1
@@@@ -465,7 +465,7 @@@@ std::string GetApplicationLocale(const std::string& pr
@


1.9
log
@update to 27.0.1453.93
@
text
@d1 5
a5 5
$OpenBSD: patch-ui_base_l10n_l10n_util_cc,v 1.8 2013/04/03 08:19:10 robert Exp $
--- ui/base/l10n/l10n_util.cc.orig.port	Fri May 17 22:45:37 2013
+++ ui/base/l10n/l10n_util.cc	Thu May 30 00:10:49 2013
@@@@ -33,7 +33,7 @@@@
 #include "base/android/locale_utils.h"
d13 1
a13 1
@@@@ -423,7 +423,7 @@@@ std::string GetApplicationLocale(const std::string& pr
d15 1
a15 1
   candidates.push_back(base::android::GetDefaultLocale());
@


1.8
log
@- update to 26.0.1410.43
- switch chromium to use clang/llvm instead of gcc
- switch back to the internal libvpx because it's an unreleased version
  at this point
- re-enable SSE2 support
@
text
@d1 3
a3 3
$OpenBSD$
--- ui/base/l10n/l10n_util.cc.orig.port	Fri Mar 22 02:14:36 2013
+++ ui/base/l10n/l10n_util.cc	Tue Apr  2 21:05:18 2013
d13 1
a13 1
@@@@ -415,7 +415,7 @@@@ std::string GetApplicationLocale(const std::string& pr
@


1.7
log
@update to 24.0.1312.52
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_base_l10n_l10n_util_cc,v 1.6 2012/10/12 16:46:10 robert Exp $
--- ui/base/l10n/l10n_util.cc.orig	Tue Jan  8 03:46:08 2013
+++ ui/base/l10n/l10n_util.cc	Mon Jan 14 19:47:35 2013
d13 1
a13 1
@@@@ -418,7 +418,7 @@@@ std::string GetApplicationLocale(const std::string& pr
@


1.6
log
@update to 22.0.1229.94
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_base_l10n_l10n_util_cc,v 1.5 2012/07/10 09:22:34 robert Exp $
--- ui/base/l10n/l10n_util.cc.orig	Tue Sep 25 15:02:45 2012
+++ ui/base/l10n/l10n_util.cc	Wed Oct 10 17:19:32 2012
d13 3
a15 3
@@@@ -419,7 +419,7 @@@@ std::string GetApplicationLocale(const std::string& pr
   if (!pref_locale.empty())
     candidates.push_back(pref_locale);
@


1.5
log
@update to 20.0.1132.47
@
text
@d1 3
a3 3
$OpenBSD$
--- ui/base/l10n/l10n_util.cc.orig	Sat Jul  7 12:46:25 2012
+++ ui/base/l10n/l10n_util.cc	Sat Jul  7 13:01:04 2012
d13 1
a13 1
@@@@ -417,7 +417,7 @@@@ std::string GetApplicationLocale(const std::string& pr
@


1.4
log
@Fix build with glib >= 2.31.20.
@
text
@d2 5
a6 7

error: #error "Only <glib.h> can be included directly."

--- ui/base/l10n/l10n_util.cc.orig	Tue Mar 20 12:03:16 2012
+++ ui/base/l10n/l10n_util.cc	Tue Mar 20 12:03:31 2012
@@@@ -5,7 +5,7 @@@@
 #include "ui/base/l10n/l10n_util.h"
d8 3
a10 3
 #if defined(USE_X11)
-#include <glib/gutils.h>
+#include <glib.h>
d13 9
a21 1
 #include <algorithm>
@


1.3
log
@update to the next stable release (13.0.782.112)
@
text
@d1 15
a15 12
$OpenBSD: patch-ui_base_l10n_l10n_util_cc,v 1.2 2011/06/08 20:36:56 robert Exp $
--- ui/base/l10n/l10n_util.cc.orig	Mon Jun  6 11:12:14 2011
+++ ui/base/l10n/l10n_util.cc	Wed Jun  8 09:58:37 2011
@@@@ -319,7 +319,7 @@@@ bool CheckAndResolveLocale(const std::string& locale,
 // if "foo bar" is RTL. So this function prepends the necessary RLM in such
 // cases.
 void AdjustParagraphDirectionality(string16* paragraph) {
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
   if (base::i18n::IsRTL() &&
       base::i18n::StringContainsStrongRTLChars(*paragraph)) {
     paragraph->insert(0, 1, static_cast<char16>(base::i18n::kRightToLeftMark));
@


1.2
log
@Update to the new stable branch: 12.0.742.91
http://googlechromereleases.blogspot.com/2011/06/chrome-stable-release.html
@
text
@d1 1
a1 1
$OpenBSD: patch-ui_base_l10n_l10n_util_cc,v 1.1 2011/04/29 13:18:02 robert Exp $
@


1.1
log
@update to the latest stable version which is now 11.0.696.60
+ switch from using system sqlite to the bundled one because they have
  many modifications that are needed
+ add a new mirror for the distfile because the google one is utterly slow
@
text
@d1 4
a4 4
$OpenBSD$
--- ui/base/l10n/l10n_util.cc.orig	Fri Apr 29 10:49:13 2011
+++ ui/base/l10n/l10n_util.cc	Fri Apr 29 10:49:22 2011
@@@@ -320,7 +320,7 @@@@ bool CheckAndResolveLocale(const std::string& locale,
@

