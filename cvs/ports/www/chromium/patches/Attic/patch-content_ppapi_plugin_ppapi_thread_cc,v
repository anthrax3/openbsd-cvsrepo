head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2016.01.23.18.49.31;	author robert;	state dead;
branches;
next	1.1;
commitid	KVrkvcBYFue8N3VB;

1.1
date	2016.01.06.21.46.44;	author robert;	state Exp;
branches;
next	;
commitid	QCpbcWCjgKtMUGZ9;


desc
@@


1.2
log
@update to 48.0.2564.82
@
text
@$OpenBSD: patch-content_ppapi_plugin_ppapi_thread_cc,v 1.1 2016/01/06 21:46:44 robert Exp $
--- content/ppapi_plugin/ppapi_thread.cc.orig.port	Sun Jan  3 21:02:51 2016
+++ content/ppapi_plugin/ppapi_thread.cc	Sun Jan  3 21:03:15 2016
@@@@ -56,6 +56,8 @@@@
 #include "sandbox/win/src/sandbox.h"
 #elif defined(OS_MACOSX)
 #include "content/common/sandbox_init_mac.h"
+#elif defined(OS_BSD)
+#include "content/common/sandbox_init_openbsd.h"
 #endif
 
 #if defined(OS_WIN)
@@@@ -442,7 +444,7 @@@@ void PpapiThread::OnLoadPlugin(const base::FilePath& p
       return;
     }
   } else {
-#if defined(OS_MACOSX)
+#if defined(OS_MACOSX) || defined(OS_BSD)
     // We need to do this after getting |PPP_GetInterface()| (or presumably
     // doing something nontrivial with the library), else the sandbox
     // intercedes.
@


1.1
log
@pledge(2) the chromium processes;

The renderer, gpu, plugin and utility processes are now using pledge(2)
Unfortunately the GPU process only requires an rpath pledge because of
Mesa trying to parse two configuration files, /etc/drirc and ${HOME}/.drirc
So currently the GPU process will use an rpath pledge in the next
week or so so that people can test, but this situation has to be
resolved because it is not acceptable that a mostly unused configuration
file is being parsed from a library and that stops us from using less
pledges and thus disallowing the GPU process to have read access
to the filsystem ... like your ssh keys.
@
text
@d1 1
a1 1
$OpenBSD$
@

