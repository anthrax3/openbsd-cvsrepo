head	1.19;
access;
symbols
	OPENBSD_5_8:1.18.0.4
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.15.0.8
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.13.0.8
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.6
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.4
	OPENBSD_5_0:1.13.0.2
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.11.0.2
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.6.0.10
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.8
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.4
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	jasper_20070626:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.19
date	2015.08.11.21.46.41;	author jasper;	state dead;
branches;
next	1.18;
commitid	0SVt6L1PpUZxrDUP;

1.18
date	2015.06.27.07.46.10;	author jasper;	state Exp;
branches;
next	1.17;
commitid	zdXx9hh9jQTtPxXf;

1.17
date	2015.04.06.16.05.03;	author schwarze;	state Exp;
branches;
next	1.16;
commitid	hITRP8zNzghzQgqq;

1.16
date	2015.03.16.18.07.58;	author naddy;	state Exp;
branches;
next	1.15;
commitid	IJdm3Zowcdkcxp5X;

1.15
date	2013.03.21.08.48.55;	author ajacoutot;	state Exp;
branches;
next	1.14;

1.14
date	2013.03.11.11.44.50;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2011.07.11.12.13.03;	author jasper;	state Exp;
branches;
next	1.12;

1.12
date	2011.03.14.09.15.34;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2011.01.15.01.07.45;	author naddy;	state Exp;
branches;
next	1.10;

1.10
date	2010.11.22.10.16.08;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2010.11.22.08.36.54;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2010.11.11.12.35.18;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2010.10.19.08.02.57;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.27.21.49.31;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2008.02.03.17.16.00;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2007.10.31.17.37.09;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2007.07.16.14.20.46;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2007.07.04.21.29.08;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.26.21.03.17;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.06.26.21.03.17;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.19
log
@remove unused and unmaintained ports; c++/asm web development didn't quite
work out with tntnet.

maintainer generously timed-out (though very much inactive too)
ok aja@@ landry@@
@
text
@# $OpenBSD: Makefile,v 1.18 2015/06/27 07:46:10 jasper Exp $

COMMENT=		modular webapplication server for C++

DISTNAME=		tntnet-2.2.1
CATEGORIES=		www devel

HOMEPAGE=		http://www.tntnet.org/

SHARED_LIBS +=  tntnet                    1.0 # 1.0
SHARED_LIBS +=  tntnet_sdk                1.0 # 1.0

# LGPLv2.1
PERMIT_PACKAGE_CDROM=	Yes

WANTLIB += c crypto cxxtools>=2 cxxtools-http m pthread ssl stdc++ z

MASTER_SITES=		${HOMEPAGE}download/

MODULES=		converters/libiconv

BUILD_DEPENDS=		archivers/zip
LIB_DEPENDS= 		devel/cxxtools>=2.2.1

USE_GMAKE=		Yes
CONFIGURE_STYLE=	gnu
CONFIGURE_ARGS= 	--with-ssl=openssl
CONFIGURE_ENV=		CPPFLAGS="-I${LOCALBASE}/include" \
			LDFLAGS="-L${LOCALBASE}/lib"

FAKE_FLAGS=		sysconfdir="${PREFIX}/share/examples/tntnet"

post-install:
	${INSTALL_DATA_DIR} ${PREFIX}/share/doc/tntnet/
	${INSTALL_DATA} ${WRKSRC}/doc/*.pdf ${PREFIX}/share/doc/tntnet/
	${INSTALL_DATA_DIR} ${PREFIX}/share/tntnet/
	${INSTALL_DATA} ${WRKSRC}/ecpp.vim ${PREFIX}/share/tntnet/

.include <bsd.port.mk>
@


1.18
log
@- update to tntnet-2.2.1
- reset MAINTAINER for address bounces
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2015/04/06 16:05:03 schwarze Exp $
@


1.17
log
@Drop USE_GROFF (minor differences, mandoc looks better).  No bump needed.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2015/03/16 18:07:58 naddy Exp $
d5 1
a5 2
DISTNAME=		tntnet-1.6.2
REVISION=		3
d10 2
a11 1
MAINTAINER=		Vijay Ramesh <vramesh2@@uiuc.edu>
d13 1
a13 8
SO_VERSION=	1.0
.for _lib in alldemos calc calcajax calci18n calcmvc chat comp config controls \
cookie extlib hello savepoint session sprintf strings tntnet tntnet_cgi \
tntnet_sdk upload
SHARED_LIBS+=	${_lib}	${SO_VERSION}
.endfor

# LGPL
d16 1
a16 1
WANTLIB += c crypto cxxtools>=2 m pthread ssl stdc++ z
d23 1
a23 1
LIB_DEPENDS= 		devel/cxxtools
d31 2
a37 4
	${INSTALL_DATA_DIR} ${PREFIX}/share/examples/tntnet/
.for e in mime.conf tntnet.conf tntnet.properties
	${INSTALL_DATA} ${WRKSRC}/etc/tntnet/$e ${PREFIX}/share/examples/tntnet/
.endfor
@


1.16
log
@fold lib-only PFRAG.shared into PLIST, regen PLIST, and bump
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2013/03/21 08:48:55 ajacoutot Exp $
a32 1
USE_GROFF =		Yes
@


1.15
log
@USE_LIBTOOL=Yes is the default now.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2013/03/11 11:44:50 espie Exp $
d6 1
a6 1
REVISION=		2
@


1.14
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2011/07/11 12:13:03 jasper Exp $
a31 1
USE_LIBTOOL=		Yes
@


1.13
log
@- no need to use the gcc3 module anymore on sparc

from brad
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2011/03/14 09:15:34 sthen Exp $
a21 3
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes
@


1.12
log
@fix various typos, from Anthony J. Bentley with a few tweaks by myself
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2011/01/15 01:07:45 naddy Exp $
d6 1
a6 1
REVISION=		1
a30 4

MODULES+=		gcc3
MODGCC3_ARCHES= 	sparc
MODGCC3_LANGS=		c++
@


1.11
log
@Epoch bump for lang/gcc/3.3 because the version number shouldn't
count as older than one from 2005.

Revision bump for all ports that depend on libstdc++-3 because the
package specs have changed.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2010/11/22 10:16:08 espie Exp $
d6 1
a6 1
REVISION=		0
@


1.10
log
@remaining WANTLIB go .>=   to >=
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2010/11/22 08:36:54 espie Exp $
d6 1
@


1.9
log
@new depends
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2010/11/11 12:35:18 sthen Exp $
d25 1
a25 1
WANTLIB += c crypto cxxtools.>=2 m pthread ssl stdc++ z
@


1.8
log
@new-style LIB_DEPENDS/REVISION/WANTLIB
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2010/10/19 08:02:57 espie Exp $
d35 2
a36 2
BUILD_DEPENDS=		::archivers/zip
LIB_DEPENDS= 		::devel/cxxtools
d40 1
a40 1
USE_GROFF =	Yes
@


1.7
log
@USE_GROFF=Yes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2008/05/27 21:49:31 jasper Exp $
d24 2
a25 1
WANTLIB=		c crypto m pthread ssl stdc++ z
d36 1
a36 1
LIB_DEPENDS= 		cxxtools.>=2::devel/cxxtools
@


1.6
log
@- update tntnet to 1.6.2

from vramesh2 at uiuc.edu (MAINTAINER)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2008/02/03 17:16:00 jasper Exp $
d39 1
@


1.5
log
@- update tntnet to 1.6.1

from new maintainer Vijay Ramesh <vramesh2 at uiuc.edu>
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2007/10/31 17:37:09 jasper Exp $
d5 1
a5 1
DISTNAME=		tntnet-1.6.1
d19 1
a19 1
# GPL
d24 1
a24 1
WANTLIB= c crypto m pthread ssl stdc++ z
d35 1
a35 1
LIB_DEPENDS= 		cxxtools::devel/cxxtools
@


1.4
log
@add dependency on zip
(still an issue with shlibs left though...)

spotted by naddy@@, thanks!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2007/07/16 14:20:46 jasper Exp $
d5 1
a5 2
DISTNAME=		tntnet-1.6.0.2
PKGNAME=		${DISTNAME}p0
d10 3
a12 1
SO_VERSION=	0.1
@


1.3
log
@update tntnet to 1.6.0.2
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2007/07/04 21:29:08 jasper Exp $
d6 1
d33 1
@


1.2
log
@update tntnet to 1.6.0.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2007/06/26 21:03:17 jasper Exp $
d5 1
a5 1
DISTNAME=		tntnet-1.6.0.1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d5 1
a5 1
DISTNAME=		tntnet-1.6.0
d10 1
a10 1
SO_VERSION=	0.0
@


1.1.1.1
log
@import tntnet 1.6.0

Tntnet is a web application server for web applications written in C++.
You can write a Web-page with HTML and with special tags you embed
C++-code into the page for active contents. These pages, called
components are compiled into C++-classes with the ecpp-compilier
"ecppc", then compiled into objectcode and linked into a shared library.
This shared library is loaded by the webserver "tntnet" on request and
executed.

ok martynas@@
@
text
@@
