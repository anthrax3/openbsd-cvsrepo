head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.34
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.36
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.16
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.14
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	Rose:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2007.04.16.20.31.28;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.04.16.20.31.28;	author espie;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@An URI class allowing easy and efficient manipulation of query
parameters and other URI components.

    use Rose::URI;

    $uri = Rose::URI->new('http://un:pw@@foo.com/bar/baz?a=1&b=two+3');

    $scheme = $uri->scheme;
    $user   = $uri->username;
    $pass   = $uri->password;
    $host   = $uri->host;
    $path   = $uri->path;

Rose::URI is an alternative to URI.  The important differences are
as follows.

Rose::URI provides a rich set of query string manipulation methods.
Query parameters can be added, removed, and checked for their
existence. URI allows the entire query to be set or returned as a
whole via the query_form|URI/query_form> or L<query|URI/query
methods, and the URI::QueryParam module provides a few more methods
for query string manipulation.

Rose::URI supports query parameters with multiple values (e.g.
"a=1&a=2"). URI has  limited support for this (through
query_form|URI/query_form's list return value.  Better methods are
available in URI::QueryParam.

Rose::URI uses Apache's C-based URI parsing and HTML escaping
functions when running in a mod_perl 1.x web server environment.
@


1.1.1.1
log
@Rose::URI: an URI module specifically tailored for use with Rose.
@
text
@@
