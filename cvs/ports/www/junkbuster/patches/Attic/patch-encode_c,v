head	1.5;
access;
symbols
	OPENBSD_5_9:1.4.0.22
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.24
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.20
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.18
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.16
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.14
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.12
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.10
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.34
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.32
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.30
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.28
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.26
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.24
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.22
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.20
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.18
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_TRACKING_SWITCH:1.2
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	lebel-2001-Apr-19:1.1.1.1
	lebel:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2016.03.18.15.25.31;	author mmcc;	state dead;
branches;
next	1.4;
commitid	DIsPE0FSUAHu96Db;

1.4
date	2010.05.24.22.17.03;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.20.23.26.07;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.09.02.36.48;	author angelos;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.04.19.15.46.34;	author lebel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.04.19.15.46.34;	author lebel;	state Exp;
branches;
next	;

1.2.2.1
date	2002.01.20.23.38.09;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove www/junkbuster.

The code is unmodified since 2001, there are a bunch of patches fixing
dangerous-looking buffer problems, it's very exposed code, and
www/privoxy is the obvious maintained alternative.

ok dickman@@, jacoutot@@, sthen@@, jca@@
@
text
@$OpenBSD: patch-encode_c,v 1.4 2010/05/24 22:17:03 espie Exp $
--- encode.c.orig	Sat Oct 31 04:58:47 1998
+++ encode.c	Sat May 22 16:47:47 2010
@@@@ -24,6 +24,7 @@@@ url_encode(char **code_map, unsigned char *s)
 	char *buf;
 	unsigned char c, *p;
 	char *m;
+	int len;
 
 	static int one_shot = 1;
 
@@@@ -43,17 +44,17 @@@@ url_encode(char **code_map, unsigned char *s)
 
 		cookie_code_map[' '] = "+";
 
-		sprintf(tmp, "%%%02X", ',');
+		snprintf(tmp, sizeof(tmp), "%%%02X", ',');
 		cookie_code_map[','] = strdup(tmp);
 
-		sprintf(tmp, "%%%02X", ';');
+		snprintf(tmp, sizeof(tmp), "%%%02X", ';');
 		cookie_code_map[';'] = strdup(tmp);
 
 		/* for url's, we do full URL encoding.		*/
 		/* non-alphanumerics get turned into hex ...	*/
 		for(i=0; i < 256; i++) {
 			if(isalnum(i) == 0) {
-				sprintf(tmp, "%%%02X", i);
+				snprintf(tmp, sizeof(tmp), "%%%02X", i);
 				url_code_map[i] = strdup(tmp);
 			}
 		}
@@@@ -78,14 +79,19 @@@@ url_encode(char **code_map, unsigned char *s)
 	}
 
 	/* each input char can expand to at most 6 chars */
-	buf = zalloc((strlen((char *) s) + 1) * 6);
+	len = (strlen((char *) s) + 1) * 6;
+	if ((buf = zalloc(len)) == NULL) {
+	   fprintf(stderr, "%s:%d malloc failed\n", __FILE__, __LINE__);
+	   exit(-1);
+	}
 
 	for(p = (unsigned char *) buf; (c = *s); s++) {
 		if((m = code_map[c])) {
-			strcpy((char *) p, m);
+			len -= strlcpy((char *) p, m, len);
 			p += strlen(m);
 		} else {
 			*p++ = c;
+			len--;
 		}
 	}
 
@


1.4
log
@fix for gcc4
@
text
@d1 1
a1 1
$OpenBSD: patch-encode_c,v 1.3 2002/01/20 23:26:07 naddy Exp $
@


1.3
log
@* Fix a typo that causes crashes during config file parsing.
  From Kenneth J. Hendrickson <Kenneth.Hendrickson@@Home.com>, PR #2285.
* md5 -> distinfo
* Remove a SECURITY file that doesn't document any security issues.
@
text
@d1 4
a4 4
$OpenBSD: patch-encode_c,v 1.2 2001/06/09 02:36:48 angelos Exp $
--- encode.c.orig	Fri Oct 30 22:58:47 1998
+++ encode.c	Fri Jun  8 22:23:38 2001
@@@@ -24,6 +24,7 @@@@ url_encode(char **code_map, unsigned cha
d12 1
a12 1
@@@@ -43,17 +44,17 @@@@ url_encode(char **code_map, unsigned cha
d33 1
a33 1
@@@@ -78,14 +79,19 @@@@ url_encode(char **code_map, unsigned cha
@


1.2
log
@Use strlcpy() and snprintf() with the right arguments (size of buffer).
@
text
@d1 1
a1 1
$OpenBSD$
d38 1
a38 1
+	len = strlen((char *) s + 1) * 6;
@


1.2.2.1
log
@MFC:
Fix a typo that causes crashes during config file parsing.
@
text
@d1 1
a1 1
$OpenBSD: patch-encode_c,v 1.3 2002/01/20 23:26:07 naddy Exp $
d38 1
a38 1
+	len = (strlen((char *) s) + 1) * 6;
@


1.1
log
@Initial revision
@
text
@d1 12
a12 4
$OpenBSD: update-patches,v 1.4 2001/03/31 22:54:41 espie Exp $
--- encode.c.orig	Sat Oct 31 03:58:47 1998
+++ encode.c	Fri Apr 13 20:54:40 2001
@@@@ -43,17 +43,17 @@@@ url_encode(char **code_map, unsigned cha
d17 1
a17 1
+		snprintf(tmp, sizeof(tmp)-1, "%%%02X", ',');
d21 1
a21 1
+		snprintf(tmp, sizeof(tmp)-1, "%%%02X", ';');
d29 1
a29 1
+				snprintf(tmp, sizeof(tmp)-1, "%%%02X", i);
d33 1
a33 1
@@@@ -78,11 +78,14 @@@@ url_encode(char **code_map, unsigned cha
d38 2
a39 1
+	if ((buf = zalloc((strlen((char *) s) + 1) * 6)) == NULL) {
d47 1
a47 1
+			strncpy((char *) p, m, sizeof(buf)-1);
d51 4
@


1.1.1.1
log
@initial import of Junkbuster 2.0.2:
--
Internet Junkbuster Proxy TM is free privacy-enhancing software
that can be run on your PC or by your ISP or company. It blocks
requests for URLs (typically banner ads) that match its blockfile.
It also deletes unauthorized cookies and other unwanted identifying
header information that is exchanged between web servers and browsers.

Submitted by Wynand van Dyk <wynand@@type01.com>

checked by reinhard@@ and wilfried@@ (thanks!)
@
text
@@
