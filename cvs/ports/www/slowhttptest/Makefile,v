head	1.9;
access;
symbols
	OPENBSD_6_1:1.5.0.14
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.12
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.8
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.10
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.2
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.1.1.0.4
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	sthen_20121104:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2017.07.26.22.45.32;	author sthen;	state Exp;
branches;
next	1.8;
commitid	tD4MFrpYYDDL2UFT;

1.8
date	2017.07.23.09.26.29;	author espie;	state Exp;
branches;
next	1.7;
commitid	FZPR2Emws5uDqXzb;

1.7
date	2017.07.16.19.19.04;	author espie;	state Exp;
branches;
next	1.6;
commitid	tt0GhWK5c4uf9ILG;

1.6
date	2017.04.10.11.46.35;	author sthen;	state Exp;
branches;
next	1.5;
commitid	HY6VNZxjJWzKQFDV;

1.5
date	2013.12.01.05.43.54;	author benoit;	state Exp;
branches;
next	1.4;

1.4
date	2013.10.26.13.25.12;	author benoit;	state Exp;
branches;
next	1.3;

1.3
date	2013.08.07.21.32.56;	author naddy;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.11.11.44.49;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2012.04.11.13.37.27;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.04.11.13.37.27;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.9
log
@bump LIBCXX/LIBECXX/COMPILER_LIBCXX ports.
@
text
@# $OpenBSD: Makefile,v 1.8 2017/07/23 09:26:29 espie Exp $

COMMENT=	test tool for slow HTTP reads/posts

DISTNAME =	slowhttptest-1.6
REVISION =	1

CATEGORIES=	www security

HOMEPAGE=	https://slowhttptest.googlecode.com/

# Apache 2.0
PERMIT_PACKAGE_CDROM=	Yes

WANTLIB += c crypto m ssl ${COMPILER_LIBCXX}

MASTER_SITES=	${HOMEPAGE}files/

SEPARATE_BUILD=	simple
CONFIGURE_STYLE=	gnu
LDFLAGS+=		-lcrypto
CONFIGURE_ENV=		LDFLAGS="${LDFLAGS}"
MAKE_FLAGS=		LDFLAGS="${LDFLAGS}"

.include <bsd.port.mk>
@


1.8
log
@add pthread to COMPILER_LIBCXX.
white lie, but it allows clang and gcc to be more similar
bump accordingly.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2017/07/16 19:19:04 espie Exp $
d6 1
a6 1
REVISION =	0
@


1.7
log
@use COMPILER_LIBCXX where applicable
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2017/04/10 11:46:35 sthen Exp $
d6 1
@


1.6
log
@use LIBCXX
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2013/12/01 05:43:54 benoit Exp $
d14 1
a14 1
WANTLIB += c crypto m ssl ${LIBCXX}
@


1.5
log
@Update to slowhttptest 1.6.

Ok jung@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/10/26 13:25:12 benoit Exp $
d14 1
a14 1
WANTLIB += c crypto m ssl stdc++
@


1.4
log
@Update to slowhttptest 1.5.

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/08/07 21:32:56 naddy Exp $
d5 1
a5 1
DISTNAME =	slowhttptest-1.5
@


1.3
log
@move http://code.google.com, *.googlecode.com, and sites.google.com to https
suggested by bentley@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/03/11 11:44:49 espie Exp $
d5 1
a5 2
DISTNAME=	slowhttptest-1.4
REVISION=	0
@


1.2
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2012/04/11 13:37:27 sthen Exp $
d6 1
d10 1
a10 1
HOMEPAGE=	http://slowhttptest.googlecode.com/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.template,v 1.54 2008/01/13 16:43:57 espie Exp $
a12 3
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes
@


1.1.1.1
log
@import www/slowhttptest, ok ajacoutot@@

SlowHTTPTest is a highly configurable tool that simulates some
Application Layer Denial of Service attacks.

It implements most common low-bandwidth Application Layer DoS attacks,
such as slowloris, Slow HTTP POST, Slow Read attack (based on TCP persist
timer exploit) by draining concurrent connections pool, as well as Apache
Range Header attack by causing very significant memory and CPU usage on the
server.

Slowloris and Slow HTTP POST DoS attacks rely on the fact that the HTTP
protocol, by design, requires requests to be completely received by the
server before they are processed. If an HTTP request is not complete, or if
the transfer rate is very low, the server keeps its resources busy waiting
for the rest of the data. If the server keeps too many resources busy, this
creates a denial of service. This tool is sending partial HTTP requests,
trying to get denial of service from target HTTP server.

Slow Read DoS attack aims the same resources as slowloris and slow POST,
but instead of prolonging the request, it sends legitimate HTTP request and
reads the response slowly.
@
text
@@
