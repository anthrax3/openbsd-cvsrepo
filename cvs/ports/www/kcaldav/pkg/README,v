head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	jturner_20160420:1.1.1.1
	jturner:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.05.06.19.08.52;	author jung;	state Exp;
branches;
next	1.2;
commitid	HgQHPMqrnxZlwspP;

1.2
date	2016.04.21.13.08.01;	author jturner;	state Exp;
branches;
next	1.1;
commitid	jOJYtNPiXi9M4vuw;

1.1
date	2016.04.20.15.06.08;	author jturner;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Aztt02WIqLD4SsF5;

1.1.1.1
date	2016.04.20.15.06.08;	author jturner;	state Exp;
branches;
next	;
commitid	Aztt02WIqLD4SsF5;


desc
@@


1.3
log
@add some hints on how to use kcaldav together with base httpd(8)

"looks good to me" sthen
@
text
@$OpenBSD: README,v 1.2 2016/04/21 13:08:01 jturner Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Administrator Quick Start
=========================
  Create users by running "kcaldav.passwd -C -u <user>".
  Read kcaldav.passwd(1) for more details about creating
  new calenders for users, changing email address and other
  options.

  With httpd(8) the kcaldav CGI can be run through slowcgi(8)
  using a configuration snippet like the following:

    server "default" {
        listen on * tls port 443

        tls {
            certificate "/etc/ssl/example.net.crt"
            key "/etc/ssl/private/example.net.key"
        }
        location "/cgi-bin/*" {
            fastcgi
            root "/"
        }
    }

  kcaldav.cgi uses http authentication for user security.
  Install a tls certificate to ensure privacy of connection.

User Quick Start
================
  Users can manage their account settings, create calendars
  and find the URL for use with their calendar application
  by browsing to: http://localhost/kcaldav/home.html

Porting Notes: Write Ahead Logging
==================================
  As implemented in the original source, kcaldav use sqlite3(3)
  Write Ahead Logging (WAL). WAL requires write access to /tmp.

  This port disables WAL due to the expectation kcaldav will be
  running in a chroot environment which may not have a /tmp dir.

  To re-enable WAL:

  Open the kcaldav.db:

  % doas sqlite3 caldav/kcaldav.db

  Type:

  sqlite> PRAGMA journal_mode=WAL;

  To disable WAL later open the kcaldav db and type:

  sqlite> PRAGMA journal_mode=DELETE;

  If you plan to run kcaldav in a chroot environment you must
  create a /tmp directory in the chroot and it must be writable
  by the httpd daemon account:

  % doas mkdir /var/www/tmp
  % doas chown www:daemon /var/www/tmp
  % doas chmod 755 /var/www/tmp

  For more details about WAL and temp directory requirements
  see:

  https://www.sqlite.org/wal.html
  https://www.sqlite.org/c3ref/temp_directory.html
@


1.2
log
@Remove stray ' in README, bump for safety. Spotted by sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1.1.1 2016/04/20 15:06:08 jturner Exp $
d14 19
a37 5

Security
========
  kcaldav.cgi uses http authentication for user security.
  Install a tls certificate to ensure privacy of connection.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d16 1
a16 1
  User's can manage their account settings, create calendars
@


1.1.1.1
log
@Import ports/www/kcaldav. ok jung@@

From Maintainer Aaron Poffenberger <akp at hypernote dot com>

kCalDAV is a simple, safe, and minimal CalDAV server depending only on
kcgi(3), SQLite, and expat(3). The ISO C source code is ISC licensed.
For the time being, it works only for simple setups, for example, a
calendar collection shared between Mozilla Lightning, Mac OS X iCal,
and iOS7 (iPhone4) clients.

@
text
@@
