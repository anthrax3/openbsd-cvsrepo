head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.16
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.14
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.12
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.10
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.8
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.12
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.10
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.8
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.6
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.2.0.20
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.18
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.16
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.14
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.12
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_1:1.1.0.4
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2015.01.03.09.11.22;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	lvEcilaAeU95kxn2;

1.4
date	2011.01.05.08.19.18;	author giovanni;	state Exp;
branches;
next	1.3;

1.3
date	2008.01.30.20.06.48;	author mbalmer;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.21.05.16.43;	author danh;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.17.16.17.45;	author danh;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2003.01.21.14.08.15;	author danh;	state Exp;
branches;
next	;

1.1.4.1
date	2002.12.10.15.20.56;	author brad;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.01.21.14.07.29;	author danh;	state Exp;
branches;
next	;


desc
@@


1.5
log
@memmove() to prevent a backwards copy.
@
text
@$OpenBSD: patch-preserve_c,v 1.4 2011/01/05 08:19:18 giovanni Exp $

- use memmove() instead of memcpy() to prevent a backwards copy

--- preserve.c.orig	Tue Apr  8 20:58:18 2014
+++ preserve.c	Sat Jan  3 09:51:46 2015
@@@@ -157,7 +157,7 @@@@ void put_history()
    char    timestamp[48];
 
    /* generate 'new' filename */
-   sprintf(new_fname, "%s.new", hist_fname);
+   snprintf(new_fname, sizeof(new_fname), "%s.new", hist_fname);
 
    /* stat the file */
    if ( !(lstat(new_fname, &hist_stat)) )
@@@@ -207,7 +207,7 @@@@ void put_history()
       /* if time-warp error detected, save old */
       if (hist_gap)
       {
-         sprintf(old_fname, "%s.sav", hist_fname);
+         snprintf(old_fname, sizeof(old_fname), "%s.sav", hist_fname);
          if ((rename(hist_fname,old_fname)==-1)&&(errno!=ENOENT)&&verbose)
             fprintf(stderr,"Failed renaming %s to %s: %s\n",
                hist_fname,old_fname,strerror(errno));
@@@@ -282,7 +282,7 @@@@ void update_history()
                   yr = hist[i].year;
                   mth= hist[i].month+1;
                   if (mth>12) { mth=1; yr++; }
-                  memcpy(&hist[0],&hist[1],sizeof(hist[0])*i);
+                  memmove(&hist[0],&hist[1],sizeof(hist[0])*i);
                   memset(&hist[i], 0, sizeof(struct hist_rec));
                   hist[i].year=yr; hist[i].month=mth; n--;
                }
@@@@ -329,7 +329,7 @@@@ int save_state()
    char new_fname[MAXKVAL+4];
 
    /* generate 'new' filename */
-   sprintf(new_fname, "%s.new", state_fname);
+   snprintf(new_fname, sizeof(new_fname), "%s.new", state_fname);
 
    /* stat the file */
    if ( !(lstat(new_fname, &state_stat)) )
@@@@ -350,7 +350,7 @@@@ int save_state()
    /* Saving current run data... */
    if (verbose>1)
    {
-      sprintf(buffer,"%02d/%02d/%04d %02d:%02d:%02d",
+      snprintf(buffer,sizeof buffer,"%02d/%02d/%04d %02d:%02d:%02d",
        cur_month,cur_day,cur_year,cur_hour,cur_min,cur_sec);
       printf("%s [%s]\n",msg_put_data,buffer);
    }
@@@@ -363,25 +363,25 @@@@ int save_state()
    if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
 
    /* Current date/time          */
-   sprintf(buffer,"%d %d %d %d %d %d\n",
+   snprintf(buffer, sizeof(buffer), "%d %d %d %d %d %d\n",
         cur_year, cur_month, cur_day, cur_hour, cur_min, cur_sec);
    if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
 
    /* Monthly totals for sites, urls, etc... */
-   sprintf(buffer,"%llu %llu %llu %llu %llu %llu %.0f %llu %llu %llu %.0f %.0f\n",
+   snprintf(buffer, sizeof(buffer), "%llu %llu %llu %llu %llu %llu %.0f %llu %llu %llu %.0f %.0f\n",
         t_hit, t_file, t_site, t_url,
         t_ref, t_agent, t_xfer, t_page, t_visit, t_user, t_ixfer, t_oxfer);
    if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
 
    /* Daily totals for sites, urls, etc... */
-   sprintf(buffer,"%llu %llu %llu %d %d\n",
+   snprintf(buffer, sizeof(buffer), "%llu %llu %llu %d %d\n",
         dt_site, ht_hit, mh_hit, f_day, l_day);
    if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
 
    /* Monthly (by day) total array */
    for (i=0;i<31;i++)
    {
-      sprintf(buffer,"%llu %llu %.0f %llu %llu %llu %.0f %.0f\n",
+      snprintf(buffer, sizeof(buffer), "%llu %llu %.0f %llu %llu %llu %.0f %.0f\n",
         tm_hit[i],tm_file[i],tm_xfer[i],tm_site[i],
         tm_page[i],tm_visit[i],tm_ixfer[i],tm_oxfer[i]);
       if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
@@@@ -390,7 +390,7 @@@@ int save_state()
    /* Daily (by hour) total array */
    for (i=0;i<24;i++)
    {
-      sprintf(buffer,"%llu %llu %.0f %llu %.0f %.0f\n",
+      snprintf(buffer, sizeof(buffer), "%llu %llu %.0f %llu %.0f %.0f\n",
         th_hit[i],th_file[i],th_xfer[i],th_page[i],th_ixfer[i],th_oxfer[i]);
       if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
    }
@@@@ -398,7 +398,7 @@@@ int save_state()
    /* Response codes */
    for (i=0;i<TOTAL_RC;i++)
    {
-      sprintf(buffer,"%llu\n",response[i].count);
+      snprintf(buffer, sizeof(buffer), "%llu\n",response[i].count);
       if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
    }
 
@@@@ -587,13 +587,13 @@@@ int restore_state()
    if (verbose>1) printf("%s %s\n",msg_get_data,state_fname);
 
    /* get easy stuff */
-   sprintf(tmp_buf,"# Webalizer V%s    ",version);
+   snprintf(tmp_buf,sizeof tmp_buf,"# Webalizer V%s    ",version);
    if ((fgets(buffer,BUFSIZE,fp)) != NULL)                 /* Header record */
    {
       if (strncmp(buffer,tmp_buf,16))
       {
          /* Kludge to allow 2.01 files also */
-         sprintf(tmp_buf,"# Webalizer V2.01-1");
+         snprintf(tmp_buf, sizeof(tmp_buf), "# Webalizer V2.01-1");
          if (strncmp(buffer,tmp_buf,19)) return 99; /* bad magic? */
       }
    }
@@@@ -687,7 +687,7 @@@@ int restore_state()
    while ((fgets(buffer,BUFSIZE,fp)) != NULL)
    {
       if (!strncmp(buffer,"# End Of Table ",15)) break;
-      strncpy(tmp_buf,buffer,MAXURLH);
+      strlcpy(tmp_buf,buffer,sizeof tmp_buf);
       tmp_buf[strlen(tmp_buf)-1]=0;
 
       if ((fgets(buffer,BUFSIZE,fp)) == NULL) return 10;  /* error exit */
@@@@ -724,7 +724,7 @@@@ int restore_state()
    {
       /* Check for end of table */
       if (!strncmp(buffer,"# End Of Table ",15)) break;
-      strncpy(tmp_buf,buffer,MAXHOST);
+      strlcpy(tmp_buf,buffer,sizeof tmp_buf);
       tmp_buf[strlen(buffer)-1]=0;
 
       if ((fgets(buffer,BUFSIZE,fp)) == NULL) return 8;  /* error exit */
@@@@ -769,7 +769,7 @@@@ int restore_state()
    {
       /* Check for end of table */
       if (!strncmp(buffer,"# End Of Table ",15)) break;
-      strncpy(tmp_buf,buffer,MAXHOST);
+      strlcpy(tmp_buf,buffer,sizeof tmp_buf);
       tmp_buf[strlen(buffer)-1]=0;
 
       if ((fgets(buffer,BUFSIZE,fp)) == NULL) return 9;  /* error exit */
@@@@ -813,7 +813,7 @@@@ int restore_state()
    while ((fgets(buffer,BUFSIZE,fp)) != NULL)
    {
       if (!strncmp(buffer,"# End Of Table ",15)) break;
-      strncpy(tmp_buf,buffer,MAXREFH);
+      strlcpy(tmp_buf,buffer,sizeof tmp_buf);
       tmp_buf[strlen(buffer)-1]=0;
 
       if ((fgets(buffer,BUFSIZE,fp)) == NULL) return 11;  /* error exit */
@@@@ -838,7 +838,7 @@@@ int restore_state()
    while ((fgets(buffer,BUFSIZE,fp)) != NULL)
    {
       if (!strncmp(buffer,"# End Of Table ",15)) break;
-      strncpy(tmp_buf,buffer,MAXAGENT);
+      strlcpy(tmp_buf,buffer,sizeof tmp_buf);
       tmp_buf[strlen(buffer)-1]=0;
 
       if ((fgets(buffer,BUFSIZE,fp)) == NULL) return 12;  /* error exit */
@@@@ -863,7 +863,7 @@@@ int restore_state()
    while ((fgets(buffer,BUFSIZE,fp)) != NULL)
    {
       if (!strncmp(buffer,"# End Of Table ",15)) break;
-      strncpy(tmp_buf,buffer,MAXSRCH);
+      strlcpy(tmp_buf,buffer,sizeof tmp_buf);
       tmp_buf[strlen(buffer)-1]=0;
 
       if ((fgets(buffer,BUFSIZE,fp)) == NULL) return 13;  /* error exit */
@@@@ -888,7 +888,7 @@@@ int restore_state()
    {
       /* Check for end of table */
       if (!strncmp(buffer,"# End Of Table ",15)) break;
-      strncpy(tmp_buf,buffer,MAXIDENT);
+      strncpy(tmp_buf,buffer,sizeof tmp_buf);
       tmp_buf[strlen(buffer)-1]=0;
 
       if ((fgets(buffer,BUFSIZE,fp)) == NULL) return 14;  /* error exit */
@


1.4
log
@
Update to 2.23.03.28 and take maintainership
ok benoit@@
@
text
@d1 6
a6 3
$OpenBSD: patch-preserve_c,v 1.3 2008/01/30 20:06:48 mbalmer Exp $
--- preserve.c.orig	Thu Dec 30 14:52:23 2010
+++ preserve.c	Mon Jan  3 11:42:14 2011
d25 9
@


1.3
log
@Switch to webalizer xtended by Patrick Frei, which adds IPv6 support and
detailed http 404 error reports.  Webalizer author hinted me at this,
he does not intend to update. danh@@ is ok with the maintainer change.

ok stehn, okan.
@
text
@d1 31
a31 12
$OpenBSD: patch-preserve_c,v 1.2 2003/01/21 05:16:43 danh Exp $
--- preserve.c.orig	Tue Jul  3 12:19:00 2007
+++ preserve.c	Wed Jan 30 13:41:34 2008
@@@@ -38,6 +38,7 @@@@
 #include <ctype.h>
 #include <sys/utsname.h>
 #include <sys/times.h>
+#include <sys/socket.h>
 
 /* ensure getopt */
 #ifdef HAVE_GETOPT_H
@@@@ -203,7 +204,7 @@@@ int save_state()
d40 1
a40 1
@@@@ -216,25 +217,25 @@@@ int save_state()
d45 1
a45 1
+   snprintf(buffer,sizeof(buffer),"%d %d %d %d %d %d\n",
d50 2
a51 2
-   sprintf(buffer,"%lu %lu %lu %lu %lu %lu %.0f %lu %lu %lu %.0f %.0f\n",
+   snprintf(buffer,sizeof buffer,"%lu %lu %lu %lu %lu %lu %.0f %lu %lu %lu %.0f %.0f\n",
d57 2
a58 2
-   sprintf(buffer,"%lu %lu %lu %d %d\n",
+   snprintf(buffer,sizeof buffer,"%lu %lu %lu %d %d\n",
d65 2
a66 2
-      sprintf(buffer,"%lu %lu %.0f %lu %lu %lu %.0f %.0f\n",
+      snprintf(buffer,sizeof buffer,"%lu %lu %.0f %lu %lu %lu %.0f %.0f\n",
d70 1
a70 1
@@@@ -243,7 +244,7 @@@@ int save_state()
d74 2
a75 2
-      sprintf(buffer,"%lu %lu %.0f %lu %.0f %.0f\n",
+      snprintf(buffer,sizeof buffer,"%lu %lu %.0f %lu %.0f %.0f\n",
d79 1
a79 1
@@@@ -251,7 +252,7 @@@@ int save_state()
d83 2
a84 2
-      sprintf(buffer,"%lu\n",response[i].count);
+      snprintf(buffer,sizeof buffer,"%lu\n",response[i].count);
d88 1
a88 80
@@@@ -263,7 +264,7 @@@@ int save_state()
       uptr=um_htab[i];
       while (uptr!=NULL)
       {
-         sprintf(buffer,"%s\n%d %lu %lu %.0f %lu %lu %.0f %.0f\n", uptr->string,
+         snprintf(buffer,sizeof buffer,"%s\n%d %lu %lu %.0f %lu %lu %.0f %.0f\n", uptr->string,
               uptr->flag, uptr->count, uptr->files, uptr->xfer,
               uptr->entry, uptr->exit,uptr->ixfer, uptr->oxfer);
          if (fputs(buffer,fp)==EOF) return 1;
@@@@ -280,7 +281,7 @@@@ int save_state()
       hptr=sm_htab[i];
       while (hptr!=NULL)
       {
-         sprintf(buffer,"%s\n%d %lu %lu %.0f %lu %lu %.0f %.0f\n%s\n",
+         snprintf(buffer,sizeof buffer,"%s\n%d %lu %lu %.0f %lu %lu %.0f %.0f\n%s\n",
               hptr->string,
               hptr->flag,
               hptr->count,
@@@@ -304,7 +305,7 @@@@ int save_state()
       hptr=sd_htab[i];
       while (hptr!=NULL)
       {
-         sprintf(buffer,"%s\n%d %lu %lu %.0f %lu %lu %.0f %.0f\n%s\n",
+         snprintf(buffer,sizeof buffer,"%s\n%d %lu %lu %.0f %lu %lu %.0f %.0f\n%s\n",
               hptr->string,
               hptr->flag,
               hptr->count,
@@@@ -330,7 +331,7 @@@@ int save_state()
          rptr=rm_htab[i];
          while (rptr!=NULL)
          {
-            sprintf(buffer,"%s\n%d %lu\n", rptr->string,
+            snprintf(buffer,sizeof buffer,"%s\n%d %lu\n", rptr->string,
                  rptr->flag, rptr->count);
             if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
             rptr=rptr->next;
@@@@ -348,7 +349,7 @@@@ int save_state()
          aptr=am_htab[i];
          while (aptr!=NULL)
          {
-            sprintf(buffer,"%s\n%d %lu\n", aptr->string,
+            snprintf(buffer,sizeof buffer,"%s\n%d %lu\n", aptr->string,
                  aptr->flag, aptr->count);
             if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
             aptr=aptr->next;
@@@@ -364,7 +365,7 @@@@ int save_state()
       sptr=sr_htab[i];
       while (sptr!=NULL)
       {
-         sprintf(buffer,"%s\n%lu\n", sptr->string,sptr->count);
+         snprintf(buffer,sizeof buffer,"%s\n%lu\n", sptr->string,sptr->count);
          if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
          sptr=sptr->next;
       }
@@@@ -379,7 +380,7 @@@@ int save_state()
       iptr=im_htab[i];
       while (iptr!=NULL)
       {
-         sprintf(buffer,"%s\n%d %lu %lu %.0f %lu %lu %.0f %.0f\n",
+         snprintf(buffer,sizeof buffer,"%s\n%d %lu %lu %.0f %lu %lu %.0f %.0f\n",
               iptr->string,
               iptr->flag,
               iptr->count,
@@@@ -396,13 +397,13 @@@@ int save_state()
    if (fputs("# End Of Table - usernames\n",fp)==EOF) return 1;
 
    /* 404 error list */
-   sprintf(buffer,"%lu\n",resp_counter); /* save total 404 counter */
+   snprintf(buffer,sizeof buffer,"%lu\n",resp_counter); /* save total 404 counter */
    if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
    
    if (fputs("# -notfounderrors- \n",fp)==EOF) return 1;  /* error exit */
    if (resp_counter>0) {
       for (i=0;i<resp_counter;i++) {
-      	sprintf(buffer,"%s\n%lu\n",respnotfound[i].respurl,respnotfound[i].count);
+      	snprintf(buffer,sizeof buffer,"%s\n%lu\n",respnotfound[i].respurl,respnotfound[i].count);
       	if (fputs(buffer,fp)==EOF) return 1;  /* error exit */
       }
    }
@@@@ -444,7 +445,7 @@@@ int restore_state()
d95 10
a104 3
      {if (strncmp(buffer,tmp_buf,17)) return 99;} /* bad magic? */
    else return 1;   /* error exit */
@@@@ -537,7 +538,7 @@@@ int restore_state()
d113 1
a113 1
@@@@ -574,7 +575,7 @@@@ int restore_state()
d122 1
a122 1
@@@@ -620,7 +621,7 @@@@ int restore_state()
d131 1
a131 1
@@@@ -664,7 +665,7 @@@@ int restore_state()
d140 1
a140 1
@@@@ -689,7 +690,7 @@@@ int restore_state()
d149 1
a149 1
@@@@ -714,7 +715,7 @@@@ int restore_state()
d158 1
a158 1
@@@@ -739,7 +740,7 @@@@ int restore_state()
@


1.2
log
@- Remove trailing new-line when reading preserved data from previous
  runs.  This was broken after the strlcpy/snprintf conversions.
- Bump package patch level.

Found by Dave Grier <dgrier@@wzrd.com>
@
text
@d1 12
a12 4
$OpenBSD: patch-preserve_c,v 1.1 2002/04/17 16:17:45 danh Exp $
--- preserve.c.orig	Wed Oct 24 02:22:42 2001
+++ preserve.c	Mon Jan 20 23:51:14 2003
@@@@ -196,38 +196,38 @@@@ int save_state()
d21 1
a21 7
 
    /* first, save the easy stuff */
    /* Header record */
-   sprintf(buffer,
+   snprintf(buffer,sizeof buffer,
      "# Webalizer V%s-%s Incremental Data - %02d/%02d/%04d %02d:%02d:%02d\n",
       version,editlvl,cur_month,cur_day,cur_year,cur_hour,cur_min,cur_sec);
d26 1
a26 1
+   snprintf(buffer,sizeof buffer,"%d %d %d %d %d %d\n",
d31 2
a32 2
-   sprintf(buffer,"%lu %lu %lu %lu %lu %lu %.0f %lu %lu %lu\n",
+   snprintf(buffer,sizeof buffer,"%lu %lu %lu %lu %lu %lu %.0f %lu %lu %lu\n",
d34 1
a34 1
         t_ref, t_agent, t_xfer, t_page, t_visit, t_user);
d46 4
a49 3
-      sprintf(buffer,"%lu %lu %.0f %lu %lu %lu\n",
+      snprintf(buffer,sizeof buffer,"%lu %lu %.0f %lu %lu %lu\n",
         tm_hit[i],tm_file[i],tm_xfer[i],tm_site[i],tm_page[i],tm_visit[i]);
d51 1
a51 2
    }
@@@@ -235,7 +235,7 @@@@ int save_state()
d55 3
a57 3
-      sprintf(buffer,"%lu %lu %.0f %lu\n",
+      snprintf(buffer,sizeof buffer,"%lu %lu %.0f %lu\n",
         th_hit[i],th_file[i],th_xfer[i],th_page[i]);
d60 1
a60 1
@@@@ -243,7 +243,7 @@@@ int save_state()
d69 1
a69 1
@@@@ -255,7 +255,7 @@@@ int save_state()
d73 2
a74 2
-         sprintf(buffer,"%s\n%d %lu %lu %.0f %lu %lu\n", uptr->string,
+         snprintf(buffer,sizeof buffer,"%s\n%d %lu %lu %.0f %lu %lu\n", uptr->string,
d76 1
a76 1
               uptr->entry, uptr->exit);
d78 1
a78 1
@@@@ -272,7 +272,7 @@@@ int save_state()
d82 2
a83 2
-         sprintf(buffer,"%s\n%d %lu %lu %.0f %lu %lu\n%s\n",
+         snprintf(buffer,sizeof buffer,"%s\n%d %lu %lu %.0f %lu %lu\n%s\n",
d87 1
a87 1
@@@@ -294,7 +294,7 @@@@ int save_state()
d91 2
a92 2
-         sprintf(buffer,"%s\n%d %lu %lu %.0f %lu %lu\n%s\n",
+         snprintf(buffer,sizeof buffer,"%s\n%d %lu %lu %.0f %lu %lu\n%s\n",
d96 1
a96 1
@@@@ -318,7 +318,7 @@@@ int save_state()
d105 1
a105 1
@@@@ -336,7 +336,7 @@@@ int save_state()
d114 1
a114 1
@@@@ -352,7 +352,7 @@@@ int save_state()
d123 1
a123 1
@@@@ -367,7 +367,7 @@@@ int save_state()
d127 2
a128 2
-         sprintf(buffer,"%s\n%d %lu %lu %.0f %lu %lu\n",
+         snprintf(buffer,sizeof buffer,"%s\n%d %lu %lu %.0f %lu %lu\n",
d132 17
a148 1
@@@@ -417,7 +417,7 @@@@ int restore_state()
d157 1
a157 1
@@@@ -493,7 +493,7 @@@@ int restore_state()
d166 1
a166 1
@@@@ -524,7 +524,7 @@@@ int restore_state()
d175 1
a175 1
@@@@ -564,7 +564,7 @@@@ int restore_state()
d184 1
a184 1
@@@@ -603,7 +603,7 @@@@ int restore_state()
d193 1
a193 1
@@@@ -628,7 +628,7 @@@@ int restore_state()
d202 1
a202 1
@@@@ -653,7 +653,7 @@@@ int restore_state()
d211 1
a211 1
@@@@ -678,7 +678,7 @@@@ int restore_state()
@


1.1
log
@update to webalizer 2.01-10
* bump NEED_VERSION
* security fix: buffer overflow in DNS resolver
* includes other bugfixes
* some strcpy/strncpy/sprintf calls changed to strlcpy/snprintf
@
text
@d1 3
a3 3
$OpenBSD$
--- preserve.c.orig	Wed Apr 17 11:52:17 2002
+++ preserve.c	Wed Apr 17 11:58:14 2002
d139 1
a139 1
@@@@ -493,8 +493,7 @@@@ int restore_state()
a143 1
-      tmp_buf[strlen(tmp_buf)-1]=0;
d145 1
d148 1
a148 2
       if (!isdigit((int)buffer[0])) return 10;  /* error exit */
@@@@ -524,8 +523,7 @@@@ int restore_state()
a152 1
-      tmp_buf[strlen(buffer)-1]=0;
d154 1
d157 1
a157 2
       if (!isdigit((int)buffer[0])) return 8;  /* error exit */
@@@@ -564,8 +562,7 @@@@ int restore_state()
a161 1
-      tmp_buf[strlen(buffer)-1]=0;
d163 1
d166 1
a166 2
       if (!isdigit((int)buffer[0])) return 9;  /* error exit */
@@@@ -603,8 +600,7 @@@@ int restore_state()
a170 1
-      tmp_buf[strlen(buffer)-1]=0;
d172 1
d175 1
a175 2
       if (!isdigit((int)buffer[0])) return 11;  /* error exit */
@@@@ -628,8 +624,7 @@@@ int restore_state()
a179 1
-      tmp_buf[strlen(buffer)-1]=0;
d181 1
d184 1
a184 2
       if (!isdigit((int)buffer[0])) return 12;  /* error exit */
@@@@ -653,8 +648,7 @@@@ int restore_state()
a188 1
-      tmp_buf[strlen(buffer)-1]=0;
d190 1
d193 1
a193 2
       if (!isdigit((int)buffer[0])) return 13;  /* error exit */
@@@@ -678,8 +672,7 @@@@ int restore_state()
a197 1
-      tmp_buf[strlen(buffer)-1]=0;
d199 1
a201 1
       if (!isdigit((int)buffer[0])) return 14;  /* error exit */
@


1.1.2.1
log
@(merge from -current)
- Remove trailing new-line when reading preserved data from previous
  runs.  This was broken after the strlcpy/snprintf conversions.
- Bump package patch level.

Found by Dave Grier <dgrier@@wzrd.com>
@
text
@d1 3
a3 3
$OpenBSD: patch-preserve_c,v 1.2 2003/01/21 05:16:43 danh Exp $
--- preserve.c.orig	Wed Oct 24 02:22:42 2001
+++ preserve.c	Mon Jan 20 23:51:14 2003
d139 1
a139 1
@@@@ -493,7 +493,7 @@@@ int restore_state()
d144 1
a145 1
       tmp_buf[strlen(tmp_buf)-1]=0;
d148 2
a149 1
@@@@ -524,7 +524,7 @@@@ int restore_state()
d154 1
a155 1
       tmp_buf[strlen(buffer)-1]=0;
d158 2
a159 1
@@@@ -564,7 +564,7 @@@@ int restore_state()
d164 1
a165 1
       tmp_buf[strlen(buffer)-1]=0;
d168 2
a169 1
@@@@ -603,7 +603,7 @@@@ int restore_state()
d174 1
a175 1
       tmp_buf[strlen(buffer)-1]=0;
d178 2
a179 1
@@@@ -628,7 +628,7 @@@@ int restore_state()
d184 1
a185 1
       tmp_buf[strlen(buffer)-1]=0;
d188 2
a189 1
@@@@ -653,7 +653,7 @@@@ int restore_state()
d194 1
a195 1
       tmp_buf[strlen(buffer)-1]=0;
d198 2
a199 1
@@@@ -678,7 +678,7 @@@@ int restore_state()
d204 1
a205 1
       tmp_buf[strlen(buffer)-1]=0;
d208 1
@


1.1.4.1
log
@MFC:
update to webalizer 2.01-10
* security fix: buffer overflow in DNS resolver
* includes other bugfixes
* some strcpy/strncpy/sprintf calls changed to strlcpy/snprintf
--
From: Nick Nauwelaerts <nick@@nauwelaerts.net>
@
text
@d1 1
a1 1
$OpenBSD: patch-preserve_c,v 1.1 2002/04/17 16:17:45 danh Exp $
@


1.1.4.2
log
@(merge from -current)
- Remove trailing new-line when reading preserved data from previous
  runs.  This was broken after the strlcpy/snprintf conversions.
- Bump package patch level.

Found by Dave Grier <dgrier@@wzrd.com>
@
text
@d1 1
a1 1
$OpenBSD: patch-preserve_c,v 1.1.4.1 2002/12/10 15:20:56 brad Exp $
d139 1
a139 1
@@@@ -493,7 +493,7 @@@@ int restore_state()
d144 1
a145 1
       tmp_buf[strlen(tmp_buf)-1]=0;
d148 2
a149 1
@@@@ -524,7 +524,7 @@@@ int restore_state()
d154 1
a155 1
       tmp_buf[strlen(buffer)-1]=0;
d158 2
a159 1
@@@@ -564,7 +564,7 @@@@ int restore_state()
d164 1
a165 1
       tmp_buf[strlen(buffer)-1]=0;
d168 2
a169 1
@@@@ -603,7 +603,7 @@@@ int restore_state()
d174 1
a175 1
       tmp_buf[strlen(buffer)-1]=0;
d178 2
a179 1
@@@@ -628,7 +628,7 @@@@ int restore_state()
d184 1
a185 1
       tmp_buf[strlen(buffer)-1]=0;
d188 2
a189 1
@@@@ -653,7 +653,7 @@@@ int restore_state()
d194 1
a195 1
       tmp_buf[strlen(buffer)-1]=0;
d198 2
a199 1
@@@@ -678,7 +678,7 @@@@ int restore_state()
d204 1
a205 1
       tmp_buf[strlen(buffer)-1]=0;
d208 1
@


