head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	sthen_20151105:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2017.02.14.13.55.13;	author fcambus;	state Exp;
branches;
next	1.4;
commitid	CaB23a6zwG2Tp6Bo;

1.4
date	2016.12.18.14.31.31;	author fcambus;	state Exp;
branches;
next	1.3;
commitid	nXDsliFC9QSvhyW4;

1.3
date	2016.03.11.20.03.06;	author awolk;	state Exp;
branches;
next	1.2;
commitid	XoHJcFAWB7RS5yqa;

1.2
date	2016.01.11.08.31.27;	author jasper;	state Exp;
branches;
next	1.1;
commitid	0oPSMr6p8tAov5qn;

1.1
date	2015.11.05.16.19.04;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	lQGND1wgXbSYSM5l;

1.1.1.1
date	2015.11.05.16.19.04;	author sthen;	state Exp;
branches;
next	;
commitid	lQGND1wgXbSYSM5l;


desc
@@


1.5
log
@Update logswan to 1.07.
@
text
@SHA256 (logswan-1.07.tar.gz) = guUD0vC6J2cUDYbK2j6buFo6ZleGdTKsfoTkoF8LyKE=
SIZE (logswan-1.07.tar.gz) = 18697
@


1.4
log
@Update logswan to 1.06.
@
text
@d1 2
a2 2
SHA256 (logswan-1.06.tar.gz) = zk9XV08lFSoIMlgFKV1s3X/uMMvuMxVXQ2JZU3fW+6o=
SIZE (logswan-1.06.tar.gz) = 17589
@


1.3
log
@Update to www/logswan-1.05 from Frederic Cambus (MAINTAINER)

OK sthen@@
@
text
@d1 2
a2 2
SHA256 (logswan-1.05.tar.gz) = 3f9WnBZtuByRG+49yHNnMER9tdzqczNy4nfVUf0GnTQ=
SIZE (logswan-1.05.tar.gz) = 17392
@


1.2
log
@- update to logswan-1.04

from maintainer Frederic Cambus
@
text
@d1 2
a2 2
SHA256 (logswan-1.04.tar.gz) = REXYxsulzUc/l7YE6kI7Qdf2CXQlYM45KFL1T5y1bRs=
SIZE (logswan-1.04.tar.gz) = 16913
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
SHA256 (logswan-1.02.tar.gz) = QYtiKg9CUMbqYkpqwBQyEj+NtstJuXCexlDHFr4/OI4=
SIZE (logswan-1.02.tar.gz) = 14931
@


1.1.1.1
log
@import ports/www/logswan, from Frederic Cambus, tweak from me, ok benoit@@,
earlier version ok jung@@

Logswan is a fast Web log analyzer using probabilistic data structures. It is
targeted at very large log files, typically APIs logs. It has constant memory
usage regardless of the log file size, and takes approximatively 4MB of RAM.

Unique visitors counting is performed using two HyperLogLog counters (one for
IPv4, and another one for IPv6), providing a relative accuracy of 0.10%.
@
text
@@
