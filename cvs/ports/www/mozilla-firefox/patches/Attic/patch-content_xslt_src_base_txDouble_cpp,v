head	1.6;
access;
symbols
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2012.08.07.08.55.40;	author landry;	state dead;
branches;
next	1.5;

1.5
date	2012.03.16.21.31.24;	author landry;	state Exp;
branches;
next	1.4;

1.4
date	2011.10.03.21.06.09;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.30.21.39.14;	author landry;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.26.19.55.58;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.20.23.41.32;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to firefox 14.0.1.

- see http://www.mozilla.org/en-US/firefox/14.0.1/releasenotes/
- enable H.264 video support through gstreamer. Mention that one needs to
  manually install gstreamer-ffmpeg. Not all videos/sites will work.
- backport cset from #776838 & #747257 for various gst fixes.
- backport cset from #750620 to fix ppc (and other exotic archs) build.
- backport cset from #752895 to fix packaging issues.
- remove patch-content_xslt_src_base_txDouble_cpp, useless since mozilla
  switched to mfbt/double-conversion.
- remove nss opening hack in Sync, it works fine without it.
- remove the -rpath hack, not needed since matthew's ld.so fix from 12/06
@
text
@$OpenBSD: patch-content_xslt_src_base_txDouble_cpp,v 1.5 2012/03/16 21:31:24 landry Exp $
alignment issue on some arch ? been there since ffx3
--- content/xslt/src/base/txDouble.cpp.orig	Thu Feb  2 00:38:56 2012
+++ content/xslt/src/base/txDouble.cpp	Tue Feb 14 18:44:42 2012
@@@@ -50,13 +50,13 @@@@
  */
 
 //-- Initialize Double related constants
-const dpun txDouble::NaN = DOUBLE_NaN;
+const dpun txDouble::NaN __attribute__ ((aligned (8))) = DOUBLE_NaN;
 #ifdef IS_BIG_ENDIAN
-const dpun txDouble::POSITIVE_INFINITY = {{DOUBLE_HI32_EXPMASK, 0}};
-const dpun txDouble::NEGATIVE_INFINITY = {{DOUBLE_HI32_EXPMASK | DOUBLE_HI32_SIGNBIT, 0}};
+const dpun txDouble::POSITIVE_INFINITY __attribute__ ((aligned (8))) = {{DOUBLE_HI32_EXPMASK, 0}};
+const dpun txDouble::NEGATIVE_INFINITY __attribute__ ((aligned (8))) = {{DOUBLE_HI32_EXPMASK | DOUBLE_HI32_SIGNBIT, 0}};
 #else
-const dpun txDouble::POSITIVE_INFINITY = {{0, DOUBLE_HI32_EXPMASK}};
-const dpun txDouble::NEGATIVE_INFINITY = {{0, DOUBLE_HI32_EXPMASK | DOUBLE_HI32_SIGNBIT}};
+const dpun txDouble::POSITIVE_INFINITY __attribute__ ((aligned (8))) = {{0, DOUBLE_HI32_EXPMASK}};
+const dpun txDouble::NEGATIVE_INFINITY __attribute__ ((aligned (8))) = {{0, DOUBLE_HI32_EXPMASK | DOUBLE_HI32_SIGNBIT}};
 #endif
 
 /*
@


1.5
log
@Update to firefox 11.0.
- Fixes MFSA 2012-12->19
- see http://www.mozilla.org/en-US/firefox/11.0/releasenotes/
- complete patchset for #691898, still fixes build on ppc (and hopefully
  commited in firefox 14...)
- add patchset from #706955, workarounds #669050 (xpcshell hangs during
  make install and chokes on CSPUtils.csm, threads related..)
- remove obsolete/commited patches
@
text
@d1 1
a1 1
$OpenBSD: patch-content_xslt_src_base_txDouble_cpp,v 1.4 2011/10/03 21:06:09 landry Exp $
@


1.4
log
@Update to firefox 7.0.1.
@
text
@d1 1
a1 1
$OpenBSD: patch-content_xslt_src_base_txDouble_cpp,v 1.3 2011/03/30 21:39:14 landry Exp $
d3 2
a4 2
--- content/xslt/src/base/txDouble.cpp.orig	Thu Aug 25 02:36:41 2011
+++ content/xslt/src/base/txDouble.cpp	Mon Aug 29 15:58:06 2011
d9 2
a10 2
-const dpun Double::NaN = DOUBLE_NaN;
+const dpun Double::NaN __attribute__ ((aligned (8))) = DOUBLE_NaN;
d12 4
a15 4
-const dpun Double::POSITIVE_INFINITY = {{DOUBLE_HI32_EXPMASK, 0}};
-const dpun Double::NEGATIVE_INFINITY = {{DOUBLE_HI32_EXPMASK | DOUBLE_HI32_SIGNBIT, 0}};
+const dpun Double::POSITIVE_INFINITY __attribute__ ((aligned (8))) = {{DOUBLE_HI32_EXPMASK, 0}};
+const dpun Double::NEGATIVE_INFINITY __attribute__ ((aligned (8))) = {{DOUBLE_HI32_EXPMASK | DOUBLE_HI32_SIGNBIT, 0}};
d17 4
a20 4
-const dpun Double::POSITIVE_INFINITY = {{0, DOUBLE_HI32_EXPMASK}};
-const dpun Double::NEGATIVE_INFINITY = {{0, DOUBLE_HI32_EXPMASK | DOUBLE_HI32_SIGNBIT}};
+const dpun Double::POSITIVE_INFINITY __attribute__ ((aligned (8))) = {{0, DOUBLE_HI32_EXPMASK}};
+const dpun Double::NEGATIVE_INFINITY __attribute__ ((aligned (8))) = {{0, DOUBLE_HI32_EXPMASK | DOUBLE_HI32_SIGNBIT}};
@


1.3
log
@Lo and behold, update to mozilla-firefox 4.0 !
Too much changes to list them, just enjoy it. Thanks to the ones who
tested the betas/rc.
ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-content_xslt_src_base_txDouble_cpp,v 1.2 2010/04/26 19:55:58 landry Exp $
d3 2
a4 2
--- content/xslt/src/base/txDouble.cpp.orig	Wed Dec 15 02:02:41 2010
+++ content/xslt/src/base/txDouble.cpp	Wed Dec 22 22:50:20 2010
d9 2
a10 2
-const txdpun Double::NaN = TX_DOUBLE_NaN;
+const txdpun Double::NaN __attribute__ ((aligned (8))) = TX_DOUBLE_NaN;
d12 4
a15 4
-const txdpun Double::POSITIVE_INFINITY = {{TX_DOUBLE_HI32_EXPMASK, 0}};
-const txdpun Double::NEGATIVE_INFINITY = {{TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT, 0}};
+const txdpun Double::POSITIVE_INFINITY __attribute__ ((aligned (8))) = {{TX_DOUBLE_HI32_EXPMASK, 0}};
+const txdpun Double::NEGATIVE_INFINITY __attribute__ ((aligned (8))) = {{TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT, 0}};
d17 4
a20 4
-const txdpun Double::POSITIVE_INFINITY = {{0, TX_DOUBLE_HI32_EXPMASK}};
-const txdpun Double::NEGATIVE_INFINITY = {{0, TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT}};
+const txdpun Double::POSITIVE_INFINITY __attribute__ ((aligned (8))) = {{0, TX_DOUBLE_HI32_EXPMASK}};
+const txdpun Double::NEGATIVE_INFINITY __attribute__ ((aligned (8))) = {{0, TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT}};
@


1.2
log
@Update www/mozilla-firefox from 3.0.19 to 3.6.3, merging the wip done in
www/firefox36 mostly by martynas@@ and naddy@@.
Note that the java plugin from devel/jdk currently doesn't work with this
version of firefox, in the meantime users really needed it will have to
use www/firefox35.
ok naddy@@
@
text
@d1 5
a5 5
$OpenBSD: patch-content_xslt_src_base_txDouble_cpp,v 1.1.1.1 2010/03/29 20:44:09 naddy Exp $
--- content/xslt/src/base/txDouble.cpp.orig	Fri Jan 25 10:02:04 2008
+++ content/xslt/src/base/txDouble.cpp	Thu Jun 19 22:39:42 2008
@@@@ -49,14 +49,16 @@@@
  * Utility class for doubles
a7 2
+#define STRICT_ALIGN __attribute__ ((aligned (8)))
+
d9 2
a10 2
-const txdpun nanMask =    TX_DOUBLE_NaN;
+const txdpun nanMask STRICT_ALIGN =    TX_DOUBLE_NaN;
d12 4
a15 4
-const txdpun infMask =    {{TX_DOUBLE_HI32_EXPMASK, 0}};
-const txdpun negInfMask = {{TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT, 0}};
+const txdpun infMask STRICT_ALIGN =    {{TX_DOUBLE_HI32_EXPMASK, 0}};
+const txdpun negInfMask STRICT_ALIGN = {{TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT, 0}};
d17 4
a20 4
-const txdpun infMask =    {{0, TX_DOUBLE_HI32_EXPMASK}};
-const txdpun negInfMask = {{0, TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT}};
+const txdpun infMask STRICT_ALIGN =    {{0, TX_DOUBLE_HI32_EXPMASK}};
+const txdpun negInfMask STRICT_ALIGN = {{0, TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT}};
d23 1
a23 1
 const double Double::NaN = nanMask.d;
@


1.1
log
@it is the right time to update to mozilla-firefox-3.0.4, which has
been tested good enough, and i've fixed all the issues i'm aware
of.  furthermore 2.0 branch has basically reached eol, since there
will be only one minor update (2.0.0.19)
discussed with kurt@@, naddy@@ and porters
pkgname change handling help naddy@@
ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-content_xslt_src_base_txDouble_cpp,v 1.1.1.1 2008/07/25 01:52:55 martynas Exp $
@

