head	1.3;
access;
symbols
	OPENBSD_4_0:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2010.06.16.19.05.40;	author landry;	state dead;
branches;
next	1.2;

1.2
date	2010.04.26.19.55.58;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.27.06.12.27;	author sturm;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2007.06.27.06.12.27;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove all patches applying to local copy of nss/nspr, as we now use the
systemwide on (which have all those patches). Don't call autoconf in
nsprpub/ while here, and bump PKGNAME to be on the safe side.
@
text
@$OpenBSD: patch-security_nss_lib_freebl_unix_rand_c,v 1.2 2010/04/26 19:55:58 landry Exp $
--- security/nss/lib/freebl/unix_rand.c.orig	Mon Nov  2 22:43:12 2009
+++ security/nss/lib/freebl/unix_rand.c	Wed Nov 25 22:04:30 2009
@@@@ -849,7 +849,6 @@@@ safe_pclose(FILE *fp)
 /* Fork netstat to collect its output by default. Do not unset this unless
  * another source of entropy is available
  */
-#define DO_NETSTAT 1
 
 void RNG_SystemInfoForRNG(void)
 {
@@@@ -916,7 +915,7 @@@@ void RNG_SystemInfoForRNG(void)
     GiveSystemInfo();
 
     /* grab some data from system's PRNG before any other files. */
-    bytes = RNG_FileUpdate("/dev/urandom", SYSTEM_RNG_SEED_COUNT);
+    bytes = RNG_FileUpdate(RAND_DEV, SYSTEM_RNG_SEED_COUNT);
 
     /* If the user points us to a random file, pass it through the rng */
     randfile = getenv("NSRANDFILE");
@@@@ -1159,7 +1158,7 @@@@ size_t RNG_SystemRNG(void *dest, size_t maxLen)
     size_t fileBytes = 0;
     unsigned char *buffer = dest;
 
-    file = fopen("/dev/urandom", "r");
+    file = fopen(RAND_DEV, "r");
     if (file == NULL) {
 	return rng_systemFromNoise(dest, maxLen);
     }
@


1.2
log
@Update www/mozilla-firefox from 3.0.19 to 3.6.3, merging the wip done in
www/firefox36 mostly by martynas@@ and naddy@@.
Note that the java plugin from devel/jdk currently doesn't work with this
version of firefox, in the meantime users really needed it will have to
use www/firefox35.
ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-security_nss_lib_freebl_unix_rand_c,v 1.1.1.1 2010/03/29 20:44:14 naddy Exp $
@


1.1
log
@file patch-security_nss_lib_freebl_unix_rand_c was initially added on branch OPENBSD_4_0.
@
text
@d1 29
@


1.1.2.1
log
@security update to firefox 1.5.0.12
set soft fd to 128
backport an nss fix for a deadlock
@
text
@a0 33
$OpenBSD: patch-security_nss_lib_freebl_unix_rand_c,v 1.1.4.1 2007/06/26 21:26:44 sturm Exp $
--- security/nss/lib/freebl/unix_rand.c.orig	Thu Jun 21 14:25:55 2007
+++ security/nss/lib/freebl/unix_rand.c	Thu Jun 21 14:41:25 2007
@@@@ -843,21 +843,19 @@@@ safe_popen(char *cmd)
 static int
 safe_pclose(FILE *fp)
 {
-    pid_t pid;
-    int count, status;
+    pid_t pid, ret;
+    int status;
 
     if ((pid = safe_popen_pid) == 0)
 	return -1;
     safe_popen_pid = 0;
 
-    /* if the child hasn't exited, kill it -- we're done with its output */
-    count = 0;
-    while (waitpid(pid, &status, WNOHANG) == 0) {
-    	if (kill(pid, SIGKILL) < 0 && errno == ESRCH)
-	    break;
-	if (++count == 1000)
-	    break;
-    }
+    /* kill the child in case it hasn't exited -- we're done with its output */
+    kill(pid, SIGKILL);
+
+    do {
+	ret = waitpid(pid, &status, 0);
+    } while (ret == (pid_t) -1 && errno == EINTR);
 
     /* Reset SIGCHLD signal hander before returning */
     sigaction(SIGCHLD, &oldact, NULL);
@

