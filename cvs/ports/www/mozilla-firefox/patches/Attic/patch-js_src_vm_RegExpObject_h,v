head	1.7;
access;
symbols
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5;
locks; strict;
comment	@# @;


1.7
date	2012.09.01.13.56.45;	author landry;	state dead;
branches;
next	1.6;

1.6
date	2012.08.07.08.55.40;	author landry;	state Exp;
branches;
next	1.5;

1.5
date	2012.06.11.15.29.56;	author landry;	state Exp;
branches;
next	1.4;

1.4
date	2012.05.09.20.36.40;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2012.04.30.15.28.42;	author landry;	state Exp;
branches;
next	1.2;

1.2
date	2012.03.16.21.31.24;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2012.02.20.20.15.04;	author landry;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to firefox 15.0.

- see http://www.mozilla.org/en-US/firefox/15.0/releasenotes/
- add -Os hack to fix a relocation error when linking on ppc (as was
  done in tb since 10..)
- garbage collect nsSound.cpp, the original one uses libcanberra
  properly and thus sndio.
- remove patch from #750620, merged upstream (mfbt/double-conversion)
- remove patches from #747257, merged upstream (gstreamer fix)
- remove patches from #691898, merged upstream (yarr jit ppc)
@
text
@$OpenBSD: patch-js_src_vm_RegExpObject_h,v 1.6 2012/08/07 08:55:40 landry Exp $
https://hg.mozilla.org/mozilla-central/rev/f5a3a7b9c6b0
--- js/src/vm/RegExpObject.h.orig	Wed Jun 13 01:46:48 2012
+++ js/src/vm/RegExpObject.h	Sun Jun 17 12:04:02 2012
@@@@ -52,10 +52,8 @@@@
 #include "yarr/Yarr.h"
 #if ENABLE_YARR_JIT
 #include "yarr/YarrJIT.h"
-#include "yarr/YarrSyntaxChecker.h"
-#else
-#include "yarr/pcre/pcre.h"
 #endif
+#include "yarr/YarrSyntaxChecker.h"
 
 /*
  * JavaScript Regular Expressions
@@@@ -113,68 +111,51 @@@@ namespace detail {
 
 class RegExpCode
 {
-#if ENABLE_YARR_JIT
     typedef JSC::Yarr::BytecodePattern BytecodePattern;
     typedef JSC::Yarr::ErrorCode ErrorCode;
+    typedef JSC::Yarr::YarrPattern YarrPattern;
+#if ENABLE_YARR_JIT
     typedef JSC::Yarr::JSGlobalData JSGlobalData;
     typedef JSC::Yarr::YarrCodeBlock YarrCodeBlock;
-    typedef JSC::Yarr::YarrPattern YarrPattern;
 
     /* Note: Native code is valid only if |codeBlock.isFallBack() == false|. */
     YarrCodeBlock   codeBlock;
-    BytecodePattern *byteCode;
-#else
-    JSRegExp        *compiled;
 #endif
+    BytecodePattern *byteCode;
 
   public:
     RegExpCode()
       :
 #if ENABLE_YARR_JIT
         codeBlock(),
-        byteCode(NULL)
-#else
-        compiled(NULL)
 #endif
+        byteCode(NULL)
     { }
 
     ~RegExpCode() {
 #if ENABLE_YARR_JIT
         codeBlock.release();
+#endif
         if (byteCode)
             Foreground::delete_<BytecodePattern>(byteCode);
-#else
-        if (compiled)
-            jsRegExpFree(compiled);
-#endif
     }
 
     static bool checkSyntax(JSContext *cx, TokenStream *tokenStream, JSLinearString *source) {
-#if ENABLE_YARR_JIT
         ErrorCode error = JSC::Yarr::checkSyntax(*source);
         if (error == JSC::Yarr::NoError)
             return true;
 
         reportYarrError(cx, tokenStream, error);
         return false;
-#else
-# error "Syntax checking not implemented for !ENABLE_YARR_JIT"
-#endif
     }
 
 #if ENABLE_YARR_JIT
     static inline bool isJITRuntimeEnabled(JSContext *cx);
-    static void reportYarrError(JSContext *cx, TokenStream *ts, JSC::Yarr::ErrorCode error);
-#else
-    static void reportPCREError(JSContext *cx, int error);
 #endif
+    static void reportYarrError(JSContext *cx, TokenStream *ts, JSC::Yarr::ErrorCode error);
 
     static size_t getOutputSize(size_t pairCount) {
-#if ENABLE_YARR_JIT
         return pairCount * 2;
-#else
-        return pairCount * 3; /* Should be x2, but PCRE has... needs. */
-#endif
     }
 
     bool compile(JSContext *cx, JSLinearString &pattern, unsigned *parenCount, RegExpFlag flags);
@


1.6
log
@Update to firefox 14.0.1.

- see http://www.mozilla.org/en-US/firefox/14.0.1/releasenotes/
- enable H.264 video support through gstreamer. Mention that one needs to
  manually install gstreamer-ffmpeg. Not all videos/sites will work.
- backport cset from #776838 & #747257 for various gst fixes.
- backport cset from #750620 to fix ppc (and other exotic archs) build.
- backport cset from #752895 to fix packaging issues.
- remove patch-content_xslt_src_base_txDouble_cpp, useless since mozilla
  switched to mfbt/double-conversion.
- remove nss opening hack in Sync, it works fine without it.
- remove the -rpath hack, not needed since matthew's ld.so fix from 12/06
@
text
@d1 1
a1 1
$OpenBSD: patch-js_src_vm_RegExpObject_h,v 1.5 2012/06/11 15:29:56 landry Exp $
@


1.5
log
@Update to firefox 13.0.

See https://www.mozilla.org/en-US/firefox/13.0/releasenotes/ for details
- set SEPARATE_BUILD (workarounds #736961)
- cleanup useless dirs (from #717616)
@
text
@d1 1
a1 1
$OpenBSD: patch-js_src_vm_RegExpObject_h,v 1.4 2012/05/09 20:36:40 landry Exp $
d3 3
a5 3
--- js/src/vm/RegExpObject.h.orig	Wed May  2 05:16:54 2012
+++ js/src/vm/RegExpObject.h	Wed May  9 23:24:14 2012
@@@@ -51,10 +51,8 @@@@
d17 1
a17 1
@@@@ -112,68 +110,51 @@@@ namespace detail {
@


1.4
log
@Sync patches with what has (finally _o/ \o/ \o_ !) been commited
upstream for bug #691898, fixing build on powerpc (and other non
yarr-jit archs..), see
https://hg.mozilla.org/mozilla-central/rev/f5a3a7b9c6b0
@
text
@d1 1
a1 1
$OpenBSD: patch-js_src_vm_RegExpObject_h,v 1.3 2012/04/30 15:28:42 landry Exp $
d3 4
a6 3
--- js/src/vm/RegExpObject.h.orig	Wed Apr 11 15:55:04 2012
+++ js/src/vm/RegExpObject.h	Wed Apr 18 22:09:15 2012
@@@@ -52,8 +52,6 @@@@
d9 1
a9 1
 #include "yarr/YarrSyntaxChecker.h"
d13 1
d15 5
a19 4
 namespace js {
@@@@ -242,40 +240,33 @@@@ static const jschar GreedyStarChars[] = {'.', '*'};
 /* Abstracts away the gross |RegExpPrivate| backend details. */
 class RegExpPrivateCode
d39 1
a39 1
     RegExpPrivateCode()
d50 1
a50 1
     ~RegExpPrivateCode() {
d63 5
a67 1
@@@@ -287,23 +278,17 @@@@ class RegExpPrivateCode
d70 1
a70 1
 #else
d72 1
a72 2
+        return true; /* XXX !*/
 #endif
d91 1
a91 1
     inline bool compile(JSContext *cx, JSLinearString &pattern, TokenStream *ts, uintN *parenCount,
@


1.3
log
@Update to firefox 12.0.

- see http://www.mozilla.org/en-US/firefox/12.0/releasenotes/ for details
- two patches moved (patch-widget_src_xpwidgets_nsPrintSettingsImpl_cpp
  and patch-widget_src_gtk2_Makefile_in)
- add two new patches for bug #691898 (patch-js_src_jsapi_cpp and
  /patch-js_src_jsprvtd_h)
- add patch-gfx_thebes_gfxPlatform_cpp to workaround regression
  introduced in bug #715658, which prevents one from building against
systemwide cairo.
- patch-extensions_auth_nsAuthGSSAPI_cpp from bug #667325 got merged
- patch-js_src_js-config_h_in and patch-js_src_jscpucfg_h from #714312 got
  merged
- patch-ipc_chromium_src_base_dir_reader_posix_ -from #714315 got merged
@
text
@d1 2
a2 3
$OpenBSD: patch-js_src_vm_RegExpObject_h,v 1.2 2012/03/16 21:31:24 landry Exp $
https://bug691898.bugzilla.mozilla.org/attachment.cgi?id=588391
use yarr interpreter on ppc
@


1.2
log
@Update to firefox 11.0.
- Fixes MFSA 2012-12->19
- see http://www.mozilla.org/en-US/firefox/11.0/releasenotes/
- complete patchset for #691898, still fixes build on ppc (and hopefully
  commited in firefox 14...)
- add patchset from #706955, workarounds #669050 (xpcshell hangs during
  make install and chokes on CSPUtils.csm, threads related..)
- remove obsolete/commited patches
@
text
@d1 1
a1 1
$OpenBSD: patch-js_src_vm_RegExpObject_h,v 1.1 2012/02/20 20:15:04 landry Exp $
d4 3
a6 3
--- js/src/vm/RegExpObject.h.orig	Thu Feb  2 00:39:11 2012
+++ js/src/vm/RegExpObject.h	Tue Feb 14 18:53:18 2012
@@@@ -50,8 +50,6 @@@@
d15 1
a15 1
@@@@ -240,40 +238,33 @@@@ static const jschar GreedyStarChars[] = {'.', '*'};
d61 1
a61 1
@@@@ -285,23 +276,17 @@@@ class RegExpPrivateCode
@


1.1
log
@Update to firefox-10.0.2.

- Fixes MFSA-2012-01..11
- remove patch-gfx_qcms_qcmstypes_h & patch-toolkit_xre_glxtest_cpp,
  were commited upstream (bugs #651444 & #687320)
- remove patch-js_src_xpconnect_src_Makefile_in, dom_quickstubs.cpp hack
  was apparently only needed with gcc3
- remove patch-xpcom_base_nsStackWalk_cpp, codepath not reached/solaris
  only.
- add https://bug691898.bugzilla.mozilla.org/attachment.cgi?id=588391 to
  use yarr interpreter on ppc, bug #691898 still being worked on
- backport https://hg.mozilla.org/mozilla-central/rev/9cfdb612a026, fixes
endianess detection on BSDs using machine/endian.h (bug #714312)
@
text
@d1 1
a1 1
$OpenBSD$
d4 3
a6 4
--- js/src/vm/RegExpObject.h.orig	Wed Jan 11 18:14:49 2012
+++ js/src/vm/RegExpObject.h	Mon Jan 16 17:07:48 2012
@@@@ -49,8 +49,6 @@@@
 #include "yarr/Yarr.h"
d9 1
d15 1
a15 1
@@@@ -153,48 +151,39 @@@@ ResetRegExpObject(JSContext *cx, AlreadyIncRefed<RegEx
d60 10
d72 1
a72 1
-    void reportYarrError(JSContext *cx, TokenStream *ts, JSC::Yarr::ErrorCode error);
d74 1
a74 1
-    void reportPCREError(JSContext *cx, int error);
d76 1
a76 6
+    void reportYarrError(JSContext *cx, TokenStream *ts, JSC::Yarr::ErrorCode error);
 
     inline bool compile(JSContext *cx, JSLinearString &pattern, TokenStream *ts, uintN *parenCount,
                         RegExpFlag flags);
@@@@ -205,11 +194,7 @@@@ class RegExpPrivateCode
                                  int *output, size_t outputCount);
a84 1
 };
d86 1
@

