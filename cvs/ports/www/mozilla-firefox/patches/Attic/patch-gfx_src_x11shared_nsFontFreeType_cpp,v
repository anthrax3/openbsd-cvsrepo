head	1.3;
access;
symbols
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2005.12.20.23.44.00;	author bernd;	state dead;
branches;
next	1.2;

1.2
date	2004.11.26.18.29.15;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.05.07.37.56;	author jolan;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to Firefox 1.5.

Team work by wilfried@@, kurt@@ and me.

Tested by many. Thanks a lot!

ok kurt@@ krw@@ jolan@@ ian@@ pvalchev@@
@
text
@$OpenBSD: patch-gfx_src_x11shared_nsFontFreeType_cpp,v 1.2 2004/11/26 18:29:15 pvalchev Exp $
--- gfx/src/x11shared/nsFontFreeType.cpp.orig	Thu Dec 25 09:24:52 2003
+++ gfx/src/x11shared/nsFontFreeType.cpp	Sat Nov  6 02:00:00 2004
@@@@ -177,7 +177,7 @@@@ nsFreeTypeFont::getFTFace()
   FTC_Manager mgr;
   nsresult rv;
   mFt2->GetFTCacheManager(&mgr);
-  rv = mFt2->ManagerLookupSize(mgr, &mImageDesc.font, &face, nsnull);
+  rv = mFt2->ManagerLookupFace(mgr, mImageDesc->face_id, &face);
   NS_ASSERTION(NS_SUCCEEDED(rv), "failed to get face/size");
   if (NS_FAILED(rv))
     return nsnull;
@@@@ -191,22 +191,15 @@@@ nsFreeTypeFont::nsFreeTypeFont(nsITrueTy
   PRBool embedded_bimap = PR_FALSE;
   mFaceID = aFaceID;
   mPixelSize = aPixelSize;
-  mImageDesc.font.face_id    = (void*)mFaceID;
-  mImageDesc.font.pix_width  = aPixelSize;
-  mImageDesc.font.pix_height = aPixelSize;
-  mImageDesc.image_type = 0;
+  mImageDesc->face_id = (FTC_FaceID)&mFaceID;
+  mImageDesc->width  = aPixelSize;
+  mImageDesc->height = aPixelSize;
+  mImageDesc->flags = 0;
 
   if (aPixelSize < nsFreeType2::gAntiAliasMinimum) {
-    mImageDesc.image_type |= ftc_image_mono;
     anti_alias = PR_FALSE;
   }
 
-  if (nsFreeType2::gFreeType2Autohinted)
-    mImageDesc.image_type |= ftc_image_flag_autohinted;
-
-  if (nsFreeType2::gFreeType2Unhinted)
-    mImageDesc.image_type |= ftc_image_flag_unhinted;
-
   PRUint32  num_embedded_bitmaps, i;
   PRInt32*  embedded_bitmapheights;
   mFaceID->GetEmbeddedBitmapHeights(&num_embedded_bitmaps,
@@@@ -218,7 +211,6 @@@@ nsFreeTypeFont::nsFreeTypeFont(nsITrueTy
         if (embedded_bitmapheights[i] == aPixelSize) {
           embedded_bimap = PR_TRUE;
           // unhinted must be set for embedded bitmaps to be used
-          mImageDesc.image_type |= ftc_image_flag_unhinted;
           break;
         }
       }
@@@@ -312,7 +304,7 @@@@ nsFreeTypeFont::doGetBoundingMetrics(con
   if (!face)
     return NS_ERROR_FAILURE;
 
-  FTC_Image_Cache icache;
+  FTC_ImageCache icache;
   mFt2->GetImageCache(&icache);
   if (!icache)
     return NS_ERROR_FAILURE;
@@@@ -401,7 +393,7 @@@@ nsFreeTypeFont::GetWidth(const PRUnichar
   if (!face)
     return 0;
 
-  FTC_Image_Cache icache;
+  FTC_ImageCache icache;
   mFt2->GetImageCache(&icache);
   if (!icache)
     return 0;
@@@@ -723,7 +715,7 @@@@ nsFreeTypeXImage::DrawString(nsRendering
     if (y%4==0) (*blendPixelFunc)(sub_image, y, ascent-1, black, 255/2);
 #endif
 
-  FTC_Image_Cache icache;
+  FTC_ImageCache icache;
   mFt2->GetImageCache(&icache);
   if (!icache)
     return 0;
@


1.2
log
@mozilla-firefox-1.0; based on work by wilfried/robert/naddy
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@fix building againt new freetype, sync w/update-patches
@
text
@d2 2
a3 2
--- gfx/src/x11shared/nsFontFreeType.cpp.orig	Fri May 23 17:18:07 2003
+++ gfx/src/x11shared/nsFontFreeType.cpp	Fri Nov  5 00:12:17 2004
d66 1
a66 1
@@@@ -725,7 +717,7 @@@@ nsFreeTypeXImage::DrawString(nsRendering
@

