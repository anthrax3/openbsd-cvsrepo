head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2017.04.20.19.44.46;	author landry;	state dead;
branches
	1.1.2.1;
next	;
commitid	FPZjxs6KRlLvhncc;

1.1.2.1
date	2017.04.20.19.44.46;	author landry;	state Exp;
branches;
next	;
commitid	FPZjxs6KRlLvhncc;


desc
@@


1.1
log
@file patch-nsprpub_pr_src_linking_prlink_c was initially added on branch OPENBSD_6_1.
@
text
@@


1.1.2.1
log
@MFC: update to firefox 53.0.

Over time i'll see if i keep doing this in -stable or give up.
"Stable" packages for i386 and amd64 available at https://packages.rhaalovely.net/
signed with https://packages.rhaalovely.net/landry-mozilla-pkg.pub

Changes from -current include:
- dont bump SO_VERSION
- build against bundled nss/nspr (53 wants nss 3.29.5)
- add selected patches from devel/nspr and security/nss
- build against bundled hunspell (53 wants 1.6)
- add BDEP on rust/cargo
@
text
@a0 58
$OpenBSD$
If dlopen() fails, retry with everything stripped after .so
https://bugzilla.mozilla.org/show_bug.cgi?id=650772
--- nsprpub/pr/src/linking/prlink.c.orig	Thu May 12 19:13:29 2016
+++ nsprpub/pr/src/linking/prlink.c	Thu Apr 20 15:36:24 2017
@@@@ -11,6 +11,10 @@@@
 #include <image.h>
 #endif
 
+#if defined(OPENBSD)
+#include <limits.h> /* for PATH_MAX */
+#endif
+
 #if defined(XP_MACOSX) && defined(USE_MACH_DYLD)
 #include <Carbon/Carbon.h>
 #include <CoreFoundation/CoreFoundation.h>
@@@@ -777,6 +781,10 @@@@ pr_LoadLibraryByPathname(const char *name, PRIntn flag
 #else
     int dl_flags = 0;
 #endif
+#if defined(OPENBSD)
+    char sname[PATH_MAX];
+    char *c;
+#endif
     void *h = NULL;
 
     if (flags & PR_LD_LAZY) {
@@@@ -801,7 +809,18 @@@@ pr_LoadLibraryByPathname(const char *name, PRIntn flag
         }
 #else
     h = dlopen(name, dl_flags);
+#if defined(OPENBSD)
+    /* On OpenBSD, we don't know what can be major.minor in libfoo.so.major.minor */
+    /* but ld.so is smart enough to open the correct lib when asked for libfoo.so */
+    /* so if the previous dlopen() failed, let's strip what's after .so and retry */
+    strncpy(sname, name, PATH_MAX);
+    if (!h) {
+        if ((c = strstr(sname,".so")) != NULL)
+            c[3] = '\0';
+        h = dlopen(sname, dl_flags);
+    }
 #endif
+#endif
 #elif defined(USE_HPSHL)
     int shl_flags = 0;
     shl_t h;
@@@@ -832,7 +851,11 @@@@ pr_LoadLibraryByPathname(const char *name, PRIntn flag
         PR_DELETE(lm);
         goto unlock;
     }
+#if defined(OPENBSD)
+    lm->name = strdup(sname);
+#else
     lm->name = strdup(name);
+#endif
     lm->dlh = h;
     lm->next = pr_loadmap;
     pr_loadmap = lm;
@

