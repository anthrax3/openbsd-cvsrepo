head	1.5;
access;
symbols
	OPENBSD_4_1:1.4.0.10
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.8
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2007.05.25.16.31.39;	author martynas;	state dead;
branches;
next	1.4;

1.4
date	2005.03.13.05.02.16;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.18.10.49.33;	author wilfried;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.18.11.07.55;	author wilfried;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.12.06.38.18;	author wilfried;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove unmaintained mozilla port; if you are still using it consider
switching to seamonkey
ok kurt@@ pval@@ espie@@ steven@@ jasper@@ alek@@
@
text
@$OpenBSD: patch-extensions_transformiix_source_base_Double_cpp,v 1.4 2005/03/13 05:02:16 kurt Exp $
--- extensions/transformiix/source/base/Double.cpp.orig	Tue Jan 11 23:47:29 2005
+++ extensions/transformiix/source/base/Double.cpp	Tue Jan 11 23:51:31 2005
@@@@ -114,17 +114,19 @@@@ typedef union txdpun {
 #define TX_DOUBLE_HI32_EXPMASK   0x7ff00000
 #define TX_DOUBLE_HI32_MANTMASK  0x000fffff
 
+#define STRICT_ALIGN __attribute__ ((aligned (8)))
+
 //-- Initialize Double related constants
 #ifdef IS_BIG_ENDIAN
-const PRUint32 nanMask[2] =    {TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_MANTMASK,
+const PRUint32 nanMask[2] STRICT_ALIGN =    {TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_MANTMASK,
                                 0xffffffff};
-const PRUint32 infMask[2] =    {TX_DOUBLE_HI32_EXPMASK, 0};
-const PRUint32 negInfMask[2] = {TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT, 0};
+const PRUint32 infMask[2] STRICT_ALIGN =    {TX_DOUBLE_HI32_EXPMASK, 0};
+const PRUint32 negInfMask[2] STRICT_ALIGN = {TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT, 0};
 #else
-const PRUint32 nanMask[2] =    {0xffffffff,
+const PRUint32 nanMask[2] STRICT_ALIGN =    {0xffffffff,
                                 TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_MANTMASK};
-const PRUint32 infMask[2] =    {0, TX_DOUBLE_HI32_EXPMASK};
-const PRUint32 negInfMask[2] = {0, TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT};
+const PRUint32 infMask[2] STRICT_ALIGN =    {0, TX_DOUBLE_HI32_EXPMASK};
+const PRUint32 negInfMask[2] STRICT_ALIGN = {0, TX_DOUBLE_HI32_EXPMASK | TX_DOUBLE_HI32_SIGNBIT};
 #endif
 
 const double Double::NaN = *((double*)nanMask);
@


1.4
log
@Upgrade to 1.7.5

Tested on i386/sparc64/macppc/alpha by myself and/or alek@@
One issue found with sparc64: fetching mail crashes.

okay pval@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@sync patches
@
text
@d1 4
a4 4
$OpenBSD: patch-extensions_transformiix_source_base_Double_cpp,v 1.2 2003/08/18 11:07:55 wilfried Exp $
--- extensions/transformiix/source/base/Double.cpp.orig	2004-01-13 01:59:28.000000000 +0100
+++ extensions/transformiix/source/base/Double.cpp	2004-01-17 22:46:21.000000000 +0100
@@@@ -108,17 +108,19 @@@@ typedef union {
@


1.2
log
@use strict alignment everywhere, from pval@@
@
text
@d1 4
a4 4
$OpenBSD: patch-extensions_transformiix_source_base_Double_cpp,v 1.1 2003/08/12 06:38:19 wilfried Exp $
--- extensions/transformiix/source/base/Double.cpp.orig	2003-01-30 09:26:46.000000000 +0100
+++ extensions/transformiix/source/base/Double.cpp	2003-08-18 09:03:26.000000000 +0200
@@@@ -75,17 +75,19 @@@@ fp_except_t oldmask = fpsetmask(~allmask
@


1.1
log
@data accessed as double on sparc64 absolutely, positively has to be 8 byte aligned
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 2
+++ extensions/transformiix/source/base/Double.cpp	2003-08-11 15:13:42.000000000 +0200
@@@@ -75,12 +75,16 @@@@ fp_except_t oldmask = fpsetmask(~allmask
a7 1
+#ifdef __sparc_v9__
a8 1
+#endif
d20 2
a21 1
 const PRUint32 nanMask[2] =    {0xffffffff,
d23 7
@

