head	1.3;
access;
symbols
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2007.05.25.16.31.39;	author martynas;	state dead;
branches;
next	1.2;

1.2
date	2005.03.13.05.02.17;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.07.00.46.10;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove unmaintained mozilla port; if you are still using it consider
switching to seamonkey
ok kurt@@ pval@@ espie@@ steven@@ jasper@@ alek@@
@
text
@$OpenBSD: patch-gfx_src_ps_nsFontMetricsPS_cpp,v 1.2 2005/03/13 05:02:17 kurt Exp $
--- gfx/src/ps/nsFontMetricsPS.cpp.orig	Wed Feb  4 20:57:05 2004
+++ gfx/src/ps/nsFontMetricsPS.cpp	Mon Jan 12 22:11:11 2004
@@@@ -1141,10 +1141,10 @@@@ nsFontPSFreeType::Init(nsITrueTypeFontCa
   
   mPixelSize = NSToIntRound(app2dev * mFont->size);
 
-  mImageDesc.font.face_id    = (void*)mEntry;
-  mImageDesc.font.pix_width  = mPixelSize;
-  mImageDesc.font.pix_height = mPixelSize;
-  mImageDesc.image_type = 0;
+  mImageDesc->face_id = (FTC_FaceID)&mEntry;
+  mImageDesc->width   = mPixelSize;
+  mImageDesc->height  = mPixelSize;
+  mImageDesc->flags   = 0;
 
   nsresult rv;
   mFt2 = do_GetService(NS_FREETYPE2_CONTRACTID, &rv);
@@@@ -1190,7 +1190,7 @@@@ nsFontPSFreeType::GetWidth(const PRUnich
   if (!face)
     return 0;
 
-  FTC_Image_Cache iCache;
+  FTC_ImageCache iCache;
   nsresult rv = mFt2->GetImageCache(&iCache);
   if (NS_FAILED(rv)) {
     NS_ERROR("Failed to get Image Cache");
@@@@ -1228,8 +1228,8 @@@@ nsFontPSFreeType::getFTFace()
   
   FTC_Manager cManager;
   mFt2->GetFTCacheManager(&cManager);
-  nsresult rv = mFt2->ManagerLookupSize(cManager, &mImageDesc.font,
-                                        &face, nsnull);
+  nsresult rv = mFt2->ManagerLookupFace(cManager, mImageDesc->face_id,
+                                        &face);
   NS_ASSERTION(rv==0, "failed to get face/size");
   if (rv)
     return nsnull;
@@@@ -1622,16 +1622,16 @@@@ void nsFT2Type8Generator::GeneratePSFont
   mEntry->GetFamilyName(fontName);
   mEntry->GetStyleName(styleName);
   
-  mImageDesc.font.face_id    = (void*)mEntry;
+  mImageDesc->face_id    = (FTC_FaceID)&mEntry;
   // TT glyph has no relation to size
-  mImageDesc.font.pix_width  = 16;
-  mImageDesc.font.pix_height = 16;
-  mImageDesc.image_type = 0;
+  mImageDesc->width  = 16;
+  mImageDesc->height = 16;
+  mImageDesc->flags = 0;
   FT_Face face = nsnull;
   FTC_Manager cManager;
   mFt2->GetFTCacheManager(&cManager);
-  nsresult rv = mFt2->ManagerLookupSize(cManager, &mImageDesc.font,
-                                        &face, nsnull);
+  nsresult rv = mFt2->ManagerLookupFace(cManager, mImageDesc->face_id,
+                                        &face);
   if (NS_FAILED(rv))
     return;
  
@


1.2
log
@Upgrade to 1.7.5

Tested on i386/sparc64/macppc/alpha by myself and/or alek@@
One issue found with sparc64: fetching mail crashes.

okay pval@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@freetype build fixes
@
text
@d2 3
a4 3
--- gfx/src/ps/nsFontMetricsPS.cpp.orig	Fri Oct 24 00:43:04 2003
+++ gfx/src/ps/nsFontMetricsPS.cpp	Sun Nov  7 00:08:54 2004
@@@@ -1126,10 +1126,10 @@@@ nsFontPSFreeType::Init(nsITrueTypeFontCa
d13 3
a15 3
+  mImageDesc->width  = mPixelSize;
+  mImageDesc->height = mPixelSize;
+  mImageDesc->flags = 0;
d19 1
a19 1
@@@@ -1175,7 +1175,7 @@@@ nsFontPSFreeType::GetWidth(const PRUnich
d28 1
a28 1
@@@@ -1213,8 +1213,8 @@@@ nsFontPSFreeType::getFTFace()
d39 1
a39 1
@@@@ -1609,16 +1609,16 @@@@ void nsFT2Type8Generator::GeneratePSFont
d44 1
a44 1
+  mImageDesc->face_id = (FTC_FaceID)&mEntry;
@

