head	1.3;
access;
symbols
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2007.05.25.16.31.39;	author martynas;	state dead;
branches;
next	1.2;

1.2
date	2005.03.13.05.02.17;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.07.00.46.10;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove unmaintained mozilla port; if you are still using it consider
switching to seamonkey
ok kurt@@ pval@@ espie@@ steven@@ jasper@@ alek@@
@
text
@$OpenBSD: patch-gfx_src_x11shared_nsFontFreeType_cpp,v 1.2 2005/03/13 05:02:17 kurt Exp $
--- gfx/src/x11shared/nsFontFreeType.cpp.orig	Thu Dec 25 03:24:52 2003
+++ gfx/src/x11shared/nsFontFreeType.cpp	Mon Jan 12 22:58:34 2004
@@@@ -177,7 +177,7 @@@@ nsFreeTypeFont::getFTFace()
   FTC_Manager mgr;
   nsresult rv;
   mFt2->GetFTCacheManager(&mgr);
-  rv = mFt2->ManagerLookupSize(mgr, &mImageDesc.font, &face, nsnull);
+  rv = mFt2->ManagerLookupFace(mgr, mImageDesc->face_id, &face);
   NS_ASSERTION(NS_SUCCEEDED(rv), "failed to get face/size");
   if (NS_FAILED(rv))
     return nsnull;
@@@@ -191,22 +191,15 @@@@ nsFreeTypeFont::nsFreeTypeFont(nsITrueTy
   PRBool embedded_bimap = PR_FALSE;
   mFaceID = aFaceID;
   mPixelSize = aPixelSize;
-  mImageDesc.font.face_id    = (void*)mFaceID;
-  mImageDesc.font.pix_width  = aPixelSize;
-  mImageDesc.font.pix_height = aPixelSize;
-  mImageDesc.image_type = 0;
+  mImageDesc->face_id = (FTC_FaceID)&mFaceID;
+  mImageDesc->width   = aPixelSize;
+  mImageDesc->height  = aPixelSize;
+  mImageDesc->flags   = 0;
 
   if (aPixelSize < nsFreeType2::gAntiAliasMinimum) {
-    mImageDesc.image_type |= ftc_image_mono;
     anti_alias = PR_FALSE;
   }
 
-  if (nsFreeType2::gFreeType2Autohinted)
-    mImageDesc.image_type |= ftc_image_flag_autohinted;
-
-  if (nsFreeType2::gFreeType2Unhinted)
-    mImageDesc.image_type |= ftc_image_flag_unhinted;
-
   PRUint32  num_embedded_bitmaps, i;
   PRInt32*  embedded_bitmapheights;
   mFaceID->GetEmbeddedBitmapHeights(&num_embedded_bitmaps,
@@@@ -218,7 +211,6 @@@@ nsFreeTypeFont::nsFreeTypeFont(nsITrueTy
         if (embedded_bitmapheights[i] == aPixelSize) {
           embedded_bimap = PR_TRUE;
           // unhinted must be set for embedded bitmaps to be used
-          mImageDesc.image_type |= ftc_image_flag_unhinted;
           break;
         }
       }
@@@@ -312,7 +304,7 @@@@ nsFreeTypeFont::doGetBoundingMetrics(con
   if (!face)
     return NS_ERROR_FAILURE;
 
-  FTC_Image_Cache icache;
+  FTC_ImageCache icache;
   mFt2->GetImageCache(&icache);
   if (!icache)
     return NS_ERROR_FAILURE;
@@@@ -401,7 +393,7 @@@@ nsFreeTypeFont::GetWidth(const PRUnichar
   if (!face)
     return 0;
 
-  FTC_Image_Cache icache;
+  FTC_ImageCache icache;
   mFt2->GetImageCache(&icache);
   if (!icache)
     return 0;
@@@@ -723,7 +715,7 @@@@ nsFreeTypeXImage::DrawString(nsRendering
     if (y%4==0) (*blendPixelFunc)(sub_image, y, ascent-1, black, 255/2);
 #endif
 
-  FTC_Image_Cache icache;
+  FTC_ImageCache icache;
   mFt2->GetImageCache(&icache);
   if (!icache)
     return 0;
@


1.2
log
@Upgrade to 1.7.5

Tested on i386/sparc64/macppc/alpha by myself and/or alek@@
One issue found with sparc64: fetching mail crashes.

okay pval@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@freetype build fixes
@
text
@d2 2
a3 2
--- gfx/src/x11shared/nsFontFreeType.cpp.orig	Sat May 24 00:18:07 2003
+++ gfx/src/x11shared/nsFontFreeType.cpp	Sun Nov  7 00:08:54 2004
d22 3
a24 3
+  mImageDesc->width  = aPixelSize;
+  mImageDesc->height = aPixelSize;
+  mImageDesc->flags = 0;
d66 1
a66 1
@@@@ -725,7 +717,7 @@@@ nsFreeTypeXImage::DrawString(nsRendering
@

