head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	zhuk_20141003:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.05.09.12.04.19;	author jasper;	state Exp;
branches;
next	1.1;
commitid	ecsmvgCeUoeLB31a;

1.1
date	2014.10.03.13.06.33;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;
commitid	j15ZAMZoKYGgBsZ8;

1.1.1.1
date	2014.10.03.13.06.33;	author zhuk;	state Exp;
branches;
next	;
commitid	j15ZAMZoKYGgBsZ8;


desc
@@


1.2
log
@update to httrack-3.48.21
@
text
@$OpenBSD: patch-src_webhttrack,v 1.1.1.1 2014/10/03 13:06:33 zhuk Exp $
1. Make it recognize SeaMonkey as a browser, too.
2. Get rid of some unnecessary bashisms.
3. Add a hack based on xmessage to avoid stopping WebHTTrack
   right after starting in case of browser already running.
--- src/webhttrack.ports.orig	Sun Mar 15 16:42:09 2015
+++ src/webhttrack	Sat May  9 13:55:56 2015
@@@@ -4,7 +4,7 @@@@
 # Initializes the htsserver GUI frontend and launch the default browser
 
 BROWSEREXE=
-SRCHBROWSEREXE="x-www-browser www-browser iceape mozilla firefox icecat iceweasel abrowser firebird galeon konqueror opera google-chrome chrome chromium chromium-browser netscape"
+SRCHBROWSEREXE="x-www-browser www-browser iceape seamonkey mozilla firefox icecat iceweasel abrowser firebird galeon konqueror opera google-chrome chrome chromium chromium-browser netscape"
 if test -n "${BROWSER}"; then
 # sensible-browser will f up if BROWSER is not set
 SRCHBROWSEREXE="xdg-open sensible-browser ${SRCHBROWSEREXE}"
@@@@ -103,7 +103,7 @@@@ TMPSRVFILE="$(mktemp ${TMPDIR:-/tmp}/.webhttrack.XXXXX
 SRVURL=
 MAXCOUNT=60
 while ! test -n "$SRVURL"; do
-MAXCOUNT=$[$MAXCOUNT - 1]
+MAXCOUNT=$((MAXCOUNT - 1))
 test $MAXCOUNT -gt 0 || exit 1
 test $MAXCOUNT -lt 50 && echo "waiting for server to reply.."
 SRVURL=`grep -E URL= ${TMPSRVFILE} | cut -f2- -d=`
@@@@ -126,7 +126,18 @@@@ return 0
 trap "cleanup now; exit" 1 2 3 4 5 6 7 8 9 11 13 14 15 16 19 24 25
 
 # Got SRVURL, launch browser
-launch_browser "${BROWSEREXE}" "${SRVURL}"
+SRVURL="http://127.0.0.1:8080/"
+launch_browser "${BROWSEREXE}" "$SRVURL"
+
+MSG="Happy browsing!
+
+The WebHTTrack is started on $SRVURL
+
+If you accidentally close browser window, just open a
+new one and point it to the same URL.
+
+Return to this window when you're done with WebHTTrack."
+xmessage -buttons "Stop WebHTTrack" "$MSG"
 
 # That's all, folks!
 trap "" 1 2 3 4 5 6 7 8 9 11 13 14 15 16 19 24 25
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d6 2
a7 2
--- src/webhttrack.ports.orig	Mon May 13 13:31:30 2013
+++ src/webhttrack	Thu Aug 21 17:32:33 2014
d12 2
a13 2
-SRCHBROWSEREXE="x-www-browser www-browser iceape mozilla firefox icecat iceweasel abrowser firebird galeon konqueror opera chrome chromium chromium-browser netscape"
+SRCHBROWSEREXE="x-www-browser www-browser iceape seamonkey mozilla firefox icecat iceweasel abrowser firebird galeon konqueror opera chrome chromium chromium-browser netscape"
d17 1
a17 19
@@@@ -33,6 +33,8 @@@@ function mozillabrowser {
 # returns 0, if the browser is mozilla type
 echo "$1" | grep -q "iceape"
 [ $? -eq 0 ] && return 0 
+echo "$1" | grep -q "seamonkey"
+[ $? -eq 0 ] && return 0 
 echo "$1" | grep -q "mozilla"
 [ $? -eq 0 ] && return 0 
 echo "$1" | grep -q "netscape"
@@@@ -90,7 +92,7 @@@@ fi
 # this loop is the only reliable solution AFAIK
 end_t=`date +%s`
 if test -n "$start_t" -a -n "$end_t"; then
-	int_t=$[$end_t-$start_t]
+	int_t=$((end_t - start_t))
 else
 	int_t=0
 fi
@@@@ -169,7 +171,7 @@@@ TMPSRVFILE="$(mktemp ${TMPDIR:-/tmp}/.webhttrack.XXXXX
d26 1
a26 1
@@@@ -191,7 +193,18 @@@@ return 0
@


1.1.1.1
log
@Import offline browser HTTrack.

HTTrack is an easy-to-use offline browser utility. It allows you to
download a World Wide Web site from the Internet to a local directory,
building recursively all directories, getting HTML, images, and other
files from the server to your computer. HTTrack arranges the original
site's relative link-structure. Simply open a page of the "mirrored"
website in your browser, and you can browse the site from link to link,
as if you were viewing it online. HTTrack can also update an existing
mirrored site, and resume interrupted downloads. HTTrack is fully
configurable, and has an integrated help system.

A lot of feedback from and okay kirby@@
@
text
@@
