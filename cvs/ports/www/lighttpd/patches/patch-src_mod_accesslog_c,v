head	1.5;
access;
symbols
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2016.10.12.08.09.26;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	RcsywKx0OmgVaY4K;

1.4
date	2012.06.01.08.20.50;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2012.04.28.09.25.25;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2010.08.18.11.16.55;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.07.06.17.17.50;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bring in a commit from upstream
- performance: use Linux extended syscalls and flags

from Brad (maintainer)
@
text
@$OpenBSD$

performance: use Linux extended syscalls and flags

--- src/mod_accesslog.c.orig	Sun Jul 31 08:42:39 2016
+++ src/mod_accesslog.c	Mon Oct 10 18:04:38 2016
@@@@ -663,13 +663,12 @@@@ SIGHUP_FUNC(log_access_cycle) {
 			if (-1 != s->log_access_fd) close(s->log_access_fd);
 
 			if (-1 == (s->log_access_fd =
-				   open(s->access_logfile->ptr, O_APPEND | O_WRONLY | O_CREAT | O_LARGEFILE, 0644))) {
+				   fdevent_open_cloexec(s->access_logfile->ptr, O_APPEND | O_WRONLY | O_CREAT | O_LARGEFILE, 0644))) {
 
 				log_error_write(srv, __FILE__, __LINE__, "ss", "cycling access-log failed:", strerror(errno));
 
 				return HANDLER_ERROR;
 			}
-			fd_close_on_exec(s->log_access_fd);
 		}
 	}
 
@


1.4
log
@update to lighttpd 1.4.31, rolling in the backported patches. ok brad
@
text
@d1 1
a1 1
$OpenBSD: patch-src_mod_accesslog_c,v 1.3 2012/04/28 09:25:25 sthen Exp $
d3 1
a3 2
- Fix access log escaping of " and \\.
- Fix splitting :port with IPv6.
d5 4
a8 4
--- src/mod_accesslog.c.orig	Mon Apr 23 00:14:44 2012
+++ src/mod_accesslog.c	Mon Apr 23 00:13:36 2012
@@@@ -165,7 +165,8 @@@@ static void accesslog_append_escaped(buffer *dest, buf
 	buffer_prepare_append(dest, str->used - 1);
d10 7
a16 8
 	for (ptr = start = str->ptr, end = str->ptr + str->used - 1; ptr < end; ptr++) {
-		if (*ptr >= ' ' && *ptr <= '~') {
+		char const c = *ptr;
+		if (c >= ' ' && c <= '~' && c != '"' && c != '\\') {
 			/* nothing to change, add later as one block */
 		} else {
 			/* copy previous part */
@@@@ -174,7 +175,7 @@@@ static void accesslog_append_escaped(buffer *dest, buf
d18 3
a20 1
 			start = ptr + 1;
a21 32
-			switch (*ptr) {
+			switch (c) {
 			case '"':
 				BUFFER_APPEND_STRING_CONST(dest, "\\\"");
 				break;
@@@@ -199,9 +200,9 @@@@ static void accesslog_append_escaped(buffer *dest, buf
 			default: {
 					/* non printable char => \xHH */
 					char hh[5] = {'\\','x',0,0,0};
-					char h = *ptr / 16;
+					char h = c / 16;
 					hh[2] = (h > 9) ? (h - 10 + 'A') : (h + '0');
-					h = *ptr % 16;
+					h = c % 16;
 					hh[3] = (h > 9) ? (h - 10 + 'A') : (h + '0');
 					buffer_append_string_len(dest, &hh[0], 4);
 				}
@@@@ -858,7 +859,13 @@@@ REQUESTDONE_FUNC(log_access_write) {
 				break;
 			case FORMAT_SERVER_PORT:
 				{
-					char *colon = strrchr(((server_socket*)(con->srv_socket))->srv_token->ptr, ':');
+					const char *colon;
+					buffer *srvtoken = ((server_socket*)(con->srv_socket))->srv_token;
+					if (srvtoken->ptr[0] == '[') {
+						colon = strstr(srvtoken->ptr, "]:");
+					} else {
+						colon = strchr(srvtoken->ptr, ':');
+					}
 					if (colon) {
 						buffer_append_string(b, colon+1);
 					} else {
@


1.3
log
@lighttpd fixes, from upstream via Brad.
- Fix handling of empty header list entries in http_request_split_value.
- Fix access log escaping of " and \\.
- Fix digest "md5-sess" implementation (Errata ID 1649, RFC 2617).
- Add "AUTH_TYPE" environment (for *cgi), remove fastcgi specific workaround.
- Fix splitting :port with IPv6.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@lighttpd 1.4.27; various fixes/cleanup. From Brad, small conf tweak from me.
@
text
@d1 9
a9 5
$OpenBSD: patch-src_mod_accesslog_c,v 1.1 2010/07/06 17:17:50 sthen Exp $
--- src/mod_accesslog.c.orig	Tue Jul  6 08:59:22 2010
+++ src/mod_accesslog.c	Tue Jul  6 09:01:04 2010
@@@@ -157,12 +157,14 @@@@ INIT_FUNC(mod_accesslog_init) {
 }
d11 10
a20 7
 static void accesslog_append_escaped(buffer *dest, buffer *str) {
+	unsigned int i;
+
 	/* replaces non-printable chars with \xHH where HH is the hex representation of the byte */
 	/* exceptions: " => \", \ => \\, whitespace chars => \n \t etc. */
 	if (str->used == 0) return;
 	buffer_prepare_append(dest, str->used - 1);
d22 32
a53 5
-	for (unsigned int i = 0; i < str->used - 1; i++) {
+	for (i = 0; i < str->used - 1; i++) {
 		if (str->ptr[i] >= ' ' && str->ptr[i] <= '~') {
 			/* printable chars */
 			buffer_append_string_len(dest, &str->ptr[i], 1);
@


1.1
log
@fix gcc2 build; from Brad, tested by Sevan who submitted a different
diff to fix the same problem.
@
text
@d1 1
a1 1
$OpenBSD$
@

