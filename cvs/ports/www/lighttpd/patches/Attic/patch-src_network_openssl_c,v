head	1.5;
access;
symbols
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2011.12.20.22.27.28;	author sthen;	state dead;
branches;
next	1.4;

1.4
date	2011.12.03.22.26.08;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2011.08.24.21.28.09;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.23.20.29.17;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2008.04.03.10.18.15;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to lighttpd 1.4.30, from Brad (maintainer).
@
text
@$OpenBSD: patch-src_network_openssl_c,v 1.4 2011/12/03 22:26:08 sthen Exp $
--- src/network_openssl.c.orig	Tue Aug 17 05:04:38 2010
+++ src/network_openssl.c	Fri Dec  2 04:44:24 2011
@@@@ -27,10 +27,9 @@@@
 # include <openssl/ssl.h>
 # include <openssl/err.h>
 
-int network_write_chunkqueue_openssl(server *srv, connection *con, SSL *ssl, chunkqueue *cq) {
+int network_write_chunkqueue_openssl(server *srv, connection *con, SSL *ssl, chunkqueue *cq, off_t max_bytes) {
 	int ssl_r;
 	chunk *c;
-	size_t chunks_written = 0;
 
 	/* this is a 64k sendbuffer
 	 *
@@@@ -59,13 +58,13 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
 		SSL_set_shutdown(ssl, SSL_RECEIVED_SHUTDOWN);
 	}
 
-	for(c = cq->first; c; c = c->next) {
+	for(c = cq->first; (max_bytes > 0) && (NULL != c); c = c->next) {
 		int chunk_finished = 0;
 
 		switch(c->type) {
 		case MEM_CHUNK: {
 			char * offset;
-			size_t toSend;
+			off_t toSend;
 			ssize_t r;
 
 			if (c->mem->used == 0 || c->mem->used == 1) {
@@@@ -75,6 +74,7 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
 
 			offset = c->mem->ptr + c->offset;
 			toSend = c->mem->used - 1 - c->offset;
+			if (toSend > max_bytes) toSend = max_bytes;
 
 			/**
 			 * SSL_write man-page
@@@@ -87,7 +87,14 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
 			 */
 
 			ERR_clear_error();
-			if ((r = SSL_write(ssl, offset, toSend)) <= 0) {
+			r = SSL_write(ssl, offset, toSend);
+
+			if (con->renegotiations > 1 && con->conf.ssl_disable_client_renegotiation) {
+				log_error_write(srv, __FILE__, __LINE__, "s", "SSL: renegotiation initiated by client");
+				return -1;
+			}
+
+			if (r <= 0) {
 				unsigned long err;
 
 				switch ((ssl_r = SSL_get_error(ssl, r))) {
@@@@ -139,6 +146,7 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
 			} else {
 				c->offset += r;
 				cq->bytes_out += r;
+				max_bytes -= r;
 			}
 
 			if (c->offset == (off_t)c->mem->used - 1) {
@@@@ -168,6 +176,7 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
 			do {
 				off_t offset = c->file.start + c->offset;
 				off_t toSend = c->file.length - c->offset;
+				if (toSend > max_bytes) toSend = max_bytes;
 
 				if (toSend > LOCAL_SEND_BUFSIZE) toSend = LOCAL_SEND_BUFSIZE;
 
@@@@ -190,7 +199,14 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
 				close(ifd);
 
 				ERR_clear_error();
-				if ((r = SSL_write(ssl, s, toSend)) <= 0) {
+				r = SSL_write(ssl, s, toSend);
+
+				if (con->renegotiations > 1 && con->conf.ssl_disable_client_renegotiation) {
+					log_error_write(srv, __FILE__, __LINE__, "s", "SSL: renegotiation initiated by client");
+					return -1;
+				}
+
+				if (r <= 0) {
 					unsigned long err;
 
 					switch ((ssl_r = SSL_get_error(ssl, r))) {
@@@@ -243,6 +259,7 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
 				} else {
 					c->offset += r;
 					cq->bytes_out += r;
+					max_bytes -= r;
 				}
 
 				if (c->offset == c->file.length) {
@@@@ -263,11 +280,9 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
 
 			break;
 		}
-
-		chunks_written++;
 	}
 
-	return chunks_written;
+	return 0;
 }
 #endif
 
@


1.4
log
@ssl-related fixes from lighttpd upstream via Brad
- [ssl] count renegotiations to prevent client renegotiations
- [ssl] add option to honor server cipher order, true by default
@
text
@d1 1
a1 1
$OpenBSD: patch-src_network_openssl_c,v 1.3 2011/08/24 21:28:09 sthen Exp $
@


1.3
log
@lighttpd bugfix: Limit amount of bytes we send in one go; fixes stalling in one
connection and timeouts on slow systems. From upstream via Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ src/network_openssl.c	Wed Aug 24 02:50:41 2011
d40 17
a56 1
@@@@ -139,6 +139,7 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
d64 1
a64 1
@@@@ -168,6 +169,7 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
d72 17
a88 1
@@@@ -243,6 +245,7 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
d96 1
a96 1
@@@@ -263,11 +266,9 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
@


1.2
log
@Upgrade to lighttpd 1.4.20. Large bug fix update.

Tested by a number of users.
@
text
@d1 75
a75 18
$OpenBSD: patch-src_network_openssl_c,v 1.1 2008/04/03 10:18:15 jasper Exp $
--- src/network_openssl.c.orig	Wed Apr  2 19:20:16 2008
+++ src/network_openssl.c	Wed Apr  2 19:21:18 2008
@@@@ -85,6 +85,7 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
 			 *
 			 */
 
+			ERR_clear_error();
 			if ((r = SSL_write(ssl, offset, toSend)) <= 0) {
 				unsigned long err;
 
@@@@ -187,6 +188,7 @@@@ int network_write_chunkqueue_openssl(server *srv, conn
 
 				close(ifd);
 
+				ERR_clear_error();
 				if ((r = SSL_write(ssl, s, toSend)) <= 0) {
 					unsigned long err;
@


1.1
log
@SECURITY FIX for http://secunia.com/advisories/29544/
lighttpd OpenSSL Error Queue Denial of Service Vulnerability

patches from upstream svn, via brad@@
@
text
@d1 1
a1 1
$OpenBSD$
@

