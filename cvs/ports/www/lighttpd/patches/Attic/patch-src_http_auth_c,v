head	1.10;
access;
symbols
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_0:1.3.0.2;
locks; strict;
comment	@# @;


1.10
date	2016.11.11.10.23.34;	author sthen;	state dead;
branches;
next	1.9;
commitid	zcSafSSsrSci3osM;

1.9
date	2016.09.17.20.22.41;	author ajacoutot;	state Exp;
branches;
next	1.8;
commitid	erqZjU8459iZzz15;

1.8
date	2013.09.30.19.26.05;	author brad;	state dead;
branches;
next	1.7;

1.7
date	2013.04.26.07.21.40;	author sthen;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2012.06.01.08.20.50;	author sthen;	state dead;
branches;
next	1.5;

1.5
date	2012.04.28.09.25.25;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2011.12.20.22.27.28;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2011.12.01.12.17.11;	author gsoares;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2007.07.25.21.31.46;	author rui;	state dead;
branches;
next	1.1;

1.1
date	2007.07.22.19.44.17;	author rui;	state Exp;
branches;
next	;

1.3.2.1
date	2011.12.01.12.18.20;	author gsoares;	state Exp;
branches;
next	;

1.7.2.1
date	2013.11.22.08.42.13;	author jasper;	state dead;
branches;
next	;


desc
@@


1.10
log
@update to lighttpd-1.4.43, from Brad
@
text
@$OpenBSD: patch-src_http_auth_c,v 1.9 2016/09/17 20:22:41 ajacoutot Exp $

[mod_auth] Digest auth fails after rewrite (fixes #2745)

--- src/http_auth.c.orig	Wed Sep 14 21:06:42 2016
+++ src/http_auth.c	Wed Sep 14 21:02:27 2016
@@@@ -985,14 +985,18 @@@@ int http_auth_digest_check(server *srv, connection *co
 	/* detect if attacker is attempting to reuse valid digest for one uri
 	 * on a different request uri.  Might also happen if intermediate proxy
 	 * altered client request line.  (Altered request would not result in
-	 * the same digest as that calculated by the client.) */
+	 * the same digest as that calculated by the client.)
+	 * Internal redirects such as with mod_rewrite will modify request uri.
+	 * Reauthentication is done to detect crossing auth realms, but this
+	 * uri validation step is bypassed.  con->request.orig_uri is original
+	 * uri sent in client request. */
 	{
 		const size_t ulen = strlen(uri);
-		const size_t rlen = buffer_string_length(con->request.uri);
-		if (!buffer_is_equal_string(con->request.uri, uri, ulen)
-		    && !(rlen < ulen && 0 == memcmp(con->request.uri->ptr, uri, rlen) && uri[rlen] == '?')) {
+		const size_t rlen = buffer_string_length(con->request.orig_uri);
+		if (!buffer_is_equal_string(con->request.orig_uri, uri, ulen)
+		    && !(rlen < ulen && 0 == memcmp(con->request.orig_uri->ptr, uri, rlen) && uri[rlen] == '?')) {
 			log_error_write(srv, __FILE__, __LINE__, "sbssss",
-					"digest: auth failed: uri mismatch (", con->request.uri, "!=", uri, "), IP:", inet_ntop_cache_get_ip(srv, &(con->dst_addr)));
+					"digest: auth failed: uri mismatch (", con->request.orig_uri, "!=", uri, "), IP:", inet_ntop_cache_get_ip(srv, &(con->dst_addr)));
 			buffer_free(b);
 			return -1;
 		}
@


1.9
log
@Update to lighttpd-1.4.41.

from Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.8
log
@Update to lighttpd 1.4.33.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_http_auth_c,v 1.7 2013/04/26 07:21:40 sthen Exp $
d3 1
a3 1
http://redmine.lighttpd.net/issues/2483
d5 24
a28 24
--- src/http_auth.c.orig	Wed Apr 24 20:34:34 2013
+++ src/http_auth.c	Wed Apr 24 21:23:34 2013
@@@@ -645,49 +645,13 @@@@ static int http_auth_basic_password_compare(server *sr
 			return (strcmp(sample, password->ptr) == 0) ? 0 : 1;
 		} else {
 #ifdef HAVE_CRYPT
-		char salt[32];
 		char *crypted;
-		size_t salt_len = 0;
-		/*
-		 * htpasswd format
-		 *
-		 * user:crypted password
-		 */
 
-		/*
-		 *  Algorithm      Salt
-		 *  CRYPT_STD_DES   2-character (Default)
-		 *  CRYPT_EXT_DES   9-character
-		 *  CRYPT_MD5       12-character beginning with $1$
-		 *  CRYPT_BLOWFISH  16-character beginning with $2$
-		 */
-
 		if (password->used < 13 + 1) {
a30 27
 
-		if (password->used == 13 + 1) {
-			/* a simple DES password is 2 + 11 characters */
-			salt_len = 2;
-		} else if (password->ptr[0] == '$' && password->ptr[2] == '$') {
-			char *dollar = NULL;
-
-			if (NULL == (dollar = strchr(password->ptr + 3, '$'))) {
-				return -1;
-			}
-
-			salt_len = dollar - password->ptr;
-		}
-
-		if (salt_len > sizeof(salt) - 1) {
-			return -1;
-		}
-
-		strncpy(salt, password->ptr, salt_len);
-
-		salt[salt_len] = '\0';
-
-		crypted = crypt(pw, salt);
+		crypted = crypt(pw, password->ptr);
 
 		if (0 == strcmp(password->ptr, crypted)) {
 			return 0;
@


1.7
log
@Fix crypt(3) support in lighttpd's htpasswd support; permits use with bcrypt
ok brad@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.7.2.1
log
@- update lighttpd to 1.4.33 and apply the security fixes for CVE-2013-4508

testing/ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_http_auth_c,v 1.7 2013/04/26 07:21:40 sthen Exp $
@


1.6
log
@update to lighttpd 1.4.31, rolling in the backported patches. ok brad
@
text
@d1 1
a1 1
$OpenBSD: patch-src_http_auth_c,v 1.5 2012/04/28 09:25:25 sthen Exp $
d3 1
a3 1
Fix digest "md5-sess" implementation (Errata ID 1649, RFC 2617).
d5 53
a57 13
--- src/http_auth.c.orig	Tue Nov 29 06:36:18 2011
+++ src/http_auth.c	Mon Apr 23 00:09:35 2012
@@@@ -1095,7 +1095,9 @@@@ int http_auth_digest_check(server *srv, connection *co
 	if (algorithm &&
 	    strcasecmp(algorithm, "md5-sess") == 0) {
 		li_MD5_Init(&Md5Ctx);
-		li_MD5_Update(&Md5Ctx, (unsigned char *)HA1, 16);
+		/* Errata ID 1649: http://www.rfc-editor.org/errata_search.php?rfc=2617 */
+		CvtHex(HA1, a1);
+		li_MD5_Update(&Md5Ctx, (unsigned char *)a1, 32);
 		li_MD5_Update(&Md5Ctx, (unsigned char *)":", 1);
 		li_MD5_Update(&Md5Ctx, (unsigned char *)nonce, strlen(nonce));
 		li_MD5_Update(&Md5Ctx, (unsigned char *)":", 1);
@


1.5
log
@lighttpd fixes, from upstream via Brad.
- Fix handling of empty header list entries in http_request_split_value.
- Fix access log escaping of " and \\.
- Fix digest "md5-sess" implementation (Errata ID 1649, RFC 2617).
- Add "AUTH_TYPE" environment (for *cgi), remove fastcgi specific workaround.
- Fix splitting :port with IPv6.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@update to lighttpd 1.4.30, from Brad (maintainer).
@
text
@d1 1
a1 1
$OpenBSD: patch-src_http_auth_c,v 1.3 2011/12/01 12:17:11 gsoares Exp $
d3 1
a3 1
Fixes CVE-2011-4362: out of bounds read due to a signedness error
d5 13
a17 11
--- src/http_auth.c.orig	Sun Apr 24 12:44:59 2011
+++ src/http_auth.c	Wed Nov 30 07:58:31 2011
@@@@ -95,7 +95,7 @@@@ static unsigned char * base64_decode(buffer *out, cons
 	ch = in[0];
 	/* run through the whole string, converting as we go */
 	for (i = 0; i < in_len; i++) {
-		ch = in[i];
+		ch = (unsigned char) in[i];
 
 		if (ch == '\0') break;
 
@


1.3
log
@SECURITY FIX for lighttpd:
(CVE-2011-4362: out of bounds read due to a signedness error)

OK jasper, brad(maintainer), sthen
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3.2.1
log
@SECURITY FIX for lighttpd:
(CVE-2011-4362: out of bounds read due to a signedness error)

OK jasper, brad(maintainer), sthen
@
text
@d6 1
a6 1
+++ src/http_auth.c	Wed Nov 30 07:49:27 2011
@


1.2
log
@update lighttpd to 1.4.16

ok brad (maintainer), simon@@
@
text
@d1 12
a12 4
$OpenBSD: patch-src_http_auth_c,v 1.1 2007/07/22 19:44:17 rui Exp $
--- src/http_auth.c.orig	Fri Apr 13 16:26:31 2007
+++ src/http_auth.c	Sat Jul 21 11:15:42 2007
@@@@ -830,8 +830,14 @@@@ int http_auth_basic_check(server *srv, connection *con
d14 1
a14 44
 	username = buffer_init();
 
-	base64_decode(username, realm_str);
+	if (!base64_decode(username, realm_str)) {
+		buffer_free(username);
 
+		log_error_write(srv, __FILE__, __LINE__, "sb", "decodeing base64-string failed", username);
+
+		return 0;
+	}
+
 	/* r2 == user:password */
 	if (NULL == (pw = strchr(username->ptr, ':'))) {
 		buffer_free(username);
@@@@ -967,7 +973,7 @@@@ int http_auth_digest_check(server *srv, connection *co
 	for (c = b->ptr; *c; c++) {
 		/* skip whitespaces */
 		while (*c == ' ' || *c == '\t') c++;
-		if (!c) break;
+		if (!*c) break;
 
 		for (i = 0; dkv[i].key; i++) {
 			if ((0 == strncmp(c, dkv[i].key, dkv[i].key_len))) {
@@@@ -1016,6 +1022,21 @@@@ int http_auth_digest_check(server *srv, connection *co
 
 		log_error_write(srv, __FILE__, __LINE__, "s",
 				"digest: missing field");
+
+		buffer_free(b);
+		return -1;
+	}
+
+	/**
+	 * protect the md5-sess against missing cnonce and nonce
+	 */
+	if (algorithm &&
+	    0 == strcasecmp(algorithm, "md5-sess") &&
+	    (!nonce || !cnonce)) {
+		log_error_write(srv, __FILE__, __LINE__, "s",
+				"digest: (md5-sess: missing field");
+
+		buffer_free(b);
 		return -1;
 	}
@


1.1
log
@roll in some distribution patches which fix multiple vulnerabilities.
Reference: http://secunia.com/advisories/26130/

ok kili@@, simon@@
@
text
@d1 1
a1 1
$OpenBSD$
@

