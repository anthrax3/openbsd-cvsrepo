head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2013.09.30.19.26.05;	author brad;	state dead;
branches;
next	1.3;

1.3
date	2013.01.25.08.00.23;	author brad;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2009.10.27.23.02.11;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2009.08.11.21.55.27;	author sthen;	state Exp;
branches;
next	;

1.3.4.1
date	2013.11.22.08.42.13;	author jasper;	state dead;
branches;
next	;


desc
@@


1.4
log
@Update to lighttpd 1.4.33.

ok sthen@@
@
text
@$OpenBSD: patch-src_http-header-glue_c,v 1.3 2013/01/25 08:00:23 brad Exp $

Fix handling of If-Modified-Since if If-None-Match is present (don't
return 412 for date parsing errors); follow current draft for HTTP/1.1,
which tells us to ignore If-Modified-Since if we have matching etags.

--- src/http-header-glue.c.orig	Thu Jan 24 22:54:11 2013
+++ src/http-header-glue.c	Thu Jan 24 22:57:17 2013
@@@@ -245,6 +245,7 @@@@ buffer * strftime_cache_get(server *srv, time_t last_m
 
 
 int http_response_handle_cachable(server *srv, connection *con, buffer *mtime) {
+	UNUSED(srv);
 	/*
 	 * 14.26 If-None-Match
 	 *    [...]
@@@@ -261,68 +262,18 @@@@ int http_response_handle_cachable(server *srv, connect
 			if (con->request.http_method == HTTP_METHOD_GET ||
 			    con->request.http_method == HTTP_METHOD_HEAD) {
 
-				/* check if etag + last-modified */
-				if (con->request.http_if_modified_since) {
-					size_t used_len;
-					char *semicolon;
+				con->http_status = 304;
+				return HANDLER_FINISHED;
 
-					if (NULL == (semicolon = strchr(con->request.http_if_modified_since, ';'))) {
-						used_len = strlen(con->request.http_if_modified_since);
-					} else {
-						used_len = semicolon - con->request.http_if_modified_since;
-					}
-
-					if (0 == strncmp(con->request.http_if_modified_since, mtime->ptr, used_len)) {
-						if ('\0' == mtime->ptr[used_len]) con->http_status = 304;
-						return HANDLER_FINISHED;
-					} else {
-						char buf[sizeof("Sat, 23 Jul 2005 21:20:01 GMT")];
-						time_t t_header, t_file;
-						struct tm tm;
-
-						/* check if we can safely copy the string */
-						if (used_len >= sizeof(buf)) {
-							log_error_write(srv, __FILE__, __LINE__, "ssdd",
-									"DEBUG: Last-Modified check failed as the received timestamp was too long:",
-									con->request.http_if_modified_since, used_len, sizeof(buf) - 1);
-
-							con->http_status = 412;
-							con->mode = DIRECT;
-							return HANDLER_FINISHED;
-						}
-
-
-						strncpy(buf, con->request.http_if_modified_since, used_len);
-						buf[used_len] = '\0';
-
-						if (NULL == strptime(buf, "%a, %d %b %Y %H:%M:%S GMT", &tm)) {
-							con->http_status = 412;
-							con->mode = DIRECT;
-							return HANDLER_FINISHED;
-						}
-						tm.tm_isdst = 0;
-						t_header = mktime(&tm);
-
-						strptime(mtime->ptr, "%a, %d %b %Y %H:%M:%S GMT", &tm);
-						tm.tm_isdst = 0;
-						t_file = mktime(&tm);
-
-						if (t_file > t_header) return HANDLER_GO_ON;
-
-						con->http_status = 304;
-						return HANDLER_FINISHED;
-					}
-				} else {
-					con->http_status = 304;
-					return HANDLER_FINISHED;
-				}
 			} else {
 				con->http_status = 412;
 				con->mode = DIRECT;
 				return HANDLER_FINISHED;
 			}
 		}
-	} else if (con->request.http_if_modified_since) {
+	} else if (con->request.http_if_modified_since &&
+		   (con->request.http_method == HTTP_METHOD_GET ||
+		    con->request.http_method == HTTP_METHOD_HEAD)) {
 		size_t used_len;
 		char *semicolon;
 
@


1.3
log
@Upstream bug fix:

Fix handling of If-Modified-Since if If-None-Match is present (don't
return 412 for date parsing errors); follow current draft for HTTP/1.1,
which tells us to ignore If-Modified-Since if we have matching etags.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3.4.1
log
@- update lighttpd to 1.4.33 and apply the security fixes for CVE-2013-4508

testing/ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_http-header-glue_c,v 1.3 2013/01/25 08:00:23 brad Exp $
@


1.2
log
@update to 1.4.24, from Brad (maintainer).
@
text
@d1 70
a70 7
$OpenBSD: patch-src_http-header-glue_c,v 1.1 2009/08/11 21:55:27 sthen Exp $
--- src/http-header-glue.c.orig	Sat Aug  8 21:37:20 2009
+++ src/http-header-glue.c	Sat Aug  8 21:41:59 2009
@@@@ -259,7 +259,7 @@@@ int http_response_handle_cachable(server *srv, connect
 					}
 
 					if (0 == strncmp(con->request.http_if_modified_since, mtime->ptr, used_len)) {
d72 11
a82 23
+						if ('\0' == mtime->ptr[used_len]) con->http_status = 304;
 						return HANDLER_FINISHED;
 					} else {
 						char buf[sizeof("Sat, 23 Jul 2005 21:20:01 GMT")];
@@@@ -281,15 +281,16 @@@@ int http_response_handle_cachable(server *srv, connect
 						strncpy(buf, con->request.http_if_modified_since, used_len);
 						buf[used_len] = '\0';
 
-						tm.tm_isdst = 0;
 						if (NULL == strptime(buf, "%a, %d %b %Y %H:%M:%S GMT", &tm)) {
 							con->http_status = 412;
 							con->mode = DIRECT;
 							return HANDLER_FINISHED;
 						}
+						tm.tm_isdst = 0;
 						t_header = mktime(&tm);
 
 						strptime(mtime->ptr, "%a, %d %b %Y %H:%M:%S GMT", &tm);
+						tm.tm_isdst = 0;
 						t_file = mktime(&tm);
 
 						if (t_file > t_header) return HANDLER_GO_ON;
@@@@ -318,7 +319,7 @@@@ int http_response_handle_cachable(server *srv, connect
d84 6
a90 26
 		if (0 == strncmp(con->request.http_if_modified_since, mtime->ptr, used_len)) {
-			con->http_status = 304;
+			if ('\0' == mtime->ptr[used_len]) con->http_status = 304;
 			return HANDLER_FINISHED;
 		} else {
 			char buf[sizeof("Sat, 23 Jul 2005 21:20:01 GMT")];
@@@@ -331,7 +332,6 @@@@ int http_response_handle_cachable(server *srv, connect
 			strncpy(buf, con->request.http_if_modified_since, used_len);
 			buf[used_len] = '\0';
 
-			tm.tm_isdst = 0;
 			if (NULL == strptime(buf, "%a, %d %b %Y %H:%M:%S GMT", &tm)) {
 				/**
 				 * parsing failed, let's get out of here 
@@@@ -340,9 +340,11 @@@@ int http_response_handle_cachable(server *srv, connect
 						"strptime() failed on", buf);
 				return HANDLER_GO_ON;
 			}
+			tm.tm_isdst = 0;
 			t_header = mktime(&tm);
 
 			strptime(mtime->ptr, "%a, %d %b %Y %H:%M:%S GMT", &tm);
+			tm.tm_isdst = 0;
 			t_file = mktime(&tm);
 
 			if (t_file > t_header) return HANDLER_GO_ON;
@


1.1
log
@Fix If-Modified-Since bug with daylight saving time; from upstream
repo via Brad.
@
text
@d1 1
a1 1
$OpenBSD$
@

