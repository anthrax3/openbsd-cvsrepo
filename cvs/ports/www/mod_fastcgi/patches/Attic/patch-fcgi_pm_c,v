head	1.3;
access;
symbols
	OPENBSD_5_9:1.2.0.26
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.28
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.24
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.22
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.20
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.18
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.16
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.14
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.12
	OPENBSD_5_0:1.2.0.10
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.1.0.18
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.16
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.14
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.12
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.10
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.8
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.6
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	mod_fastcgi_20050214:1.1.1.1
	mbalmer:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.04.28.16.04.18;	author sthen;	state dead;
branches;
next	1.2;
commitid	LxniR7hZxI8YCDpU;

1.2
date	2009.06.19.12.19.00;	author simon;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.14.06.23.23;	author mbalmer;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.14.06.23.23;	author mbalmer;	state Exp;
branches;
next	;


desc
@@


1.3
log
@drop mod_fastcgi
@
text
@--- fcgi_pm.c.orig	Tue Sep 23 00:24:45 2008
+++ fcgi_pm.c	Wed Jan 28 23:45:46 2009
@@@@ -26,7 +26,7 @@@@ time_t fcgi_dynamic_epoch = 0;            /* last time
                                            * invoked by process mgr */
 time_t fcgi_dynamic_last_analyzed = 0;    /* last time calculation was
                                            * made for the dynamic procs */
-
+int fcgi_is_chrooted = 0;                 /* If we run in a chrooted httpd */
 static time_t now = 0;
 
 #ifdef WIN32
@@@@ -1102,6 +1102,8 @@@@ static void dynamic_read_msgs(int read_ready)
             /* Create socket file's path */
             s->socket_path = fcgi_util_socket_hash_filename(tp, execName, user, group);
             s->socket_path = fcgi_util_socket_make_path_absolute(sp, s->socket_path, 1);
+			if (fcgi_is_chrooted)
+				ap_server_strip_chroot((char *) s->socket_path, 1);
 
             /* Create sockaddr, prealloc it so it won't get created in tp */
             s->socket_addr = ap_pcalloc(sp, sizeof(struct sockaddr_un));
@@@@ -1665,7 +1667,19 @@@@ void fcgi_pm_main(void *dummy)
     fcgi_config_set_env_var(fcgi_config_pool, dynamicEnvp, &i, "SystemRoot");
 
 #else
-
+	
+	if (ap_server_chroot_desired()) {
+		if (chroot(ap_server_root) < 0) {
+	    	ap_log_error(FCGI_LOG_NOTICE_NOERRNO, fcgi_apache_main_server,
+			"FastCGI: process manager unable to chroot into %s!", ap_server_root);
+	    	exit(1);
+		}
+		ap_log_error(FCGI_LOG_NOTICE_NOERRNO, 
+	    	fcgi_apache_main_server, "FastCGI: process manager chrooted in %s", ap_server_root);
+		chdir("/");
+		fcgi_is_chrooted = 1;
+	}
+	
     reduce_privileges();
     change_process_name("fcgi-pm");
 
@


1.2
log
@update to mod_fastcgi-SNAP-0811090952 in order to get http-auth
passthrough working among other fixes

running in production for a few months now
reads good to sthen@@
@
text
@@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
--- fcgi_pm.c.orig	Thu Oct 30 02:08:34 2003
+++ fcgi_pm.c	Mon Feb 14 06:57:49 2005
@@@@ -26,7 +26,7 @@@@ time_t fcgi_dynamic_epoch = 0;          
d12 1
a12 1
@@@@ -1092,6 +1092,8 @@@@ static void dynamic_read_msgs(int read_r
d21 1
a21 1
@@@@ -1649,7 +1651,19 @@@@ void fcgi_pm_main(void *dummy)
@


1.1.1.1
log
@mod_fastcgi is a module for the Apache webserver that implements
the FastCGI protocol.

ok alek@@
@
text
@@
