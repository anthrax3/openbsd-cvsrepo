head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.8
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.10
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.6
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	abieber_20131016:1.1.1.1
	abieber:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.09.17.17.04.52;	author tj;	state Exp;
branches
	1.3.2.1;
next	1.2;
commitid	O9HwY0ntYrJ8Tv4m;

1.2
date	2017.02.05.21.58.16;	author abieber;	state dead;
branches;
next	1.1;
commitid	SMBpPzDDc5o0V7FK;

1.1
date	2013.10.16.18.05.25;	author abieber;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.10.16.18.05.25;	author abieber;	state Exp;
branches;
next	;

1.3.2.1
date	2017.09.17.17.06.45;	author tj;	state Exp;
branches;
next	;
commitid	N5Q5YpnRsVnT6XRp;


desc
@@


1.3
log
@add two upstream patches to sanitize input in the bookmark command
and podbeuter feature.

ok abieber
@
text
@From 96e9506ae9e252c548665152d1b8968297128307 Mon Sep 17 00:00:00 2001
From: Alexander Batischev <eual.jp@@gmail.com>
Date: Sun, 13 Aug 2017 21:48:35 +0300
Subject: [PATCH] Sanitize inputs to bookmark-cmd (#591)

Newsbeuter didn't properly shell-escape the arguments passed to
bookmarking command, which allows a remote attacker to perform remote
code execution by crafting an RSS item whose title and/or URL contain
something interpretable by the shell (most notably subshell
invocations.)

This has been reported by Jeriko One <jeriko.one@@gmx.us>, complete with
PoC and a patch.

This vulnerability was assigned CVE-2017-12904.

--- src/controller.cpp
+++ src/controller.cpp
@@@@ -1275,9 +1275,10 @@@@ std::string controller::bookmark(const std::string& url, const std::string& titl
 	std::string bookmark_cmd = cfg.get_configvalue("bookmark-cmd");
 	bool is_interactive = cfg.get_configvalue_as_bool("bookmark-interactive");
 	if (bookmark_cmd.length() > 0) {
-		std::string cmdline = utils::strprintf("%s '%s' %s %s",
+		std::string cmdline = utils::strprintf("%s '%s' '%s' '%s'",
 		                                       bookmark_cmd.c_str(), utils::replace_all(url,"'", "%27").c_str(),
-		                                       stfl::quote(title).c_str(), stfl::quote(description).c_str());
+		                                       utils::replace_all(title,"'", "%27").c_str(),
+		                                       utils::replace_all(description,"'", "%27").c_str());
 
 		LOG(LOG_DEBUG, "controller::bookmark: cmd = %s", cmdline.c_str());
 
@


1.3.2.1
log
@add two upstream patches to sanitize input in the bookmark command
and podbeuter feature.

ok abieber
@
text
@@


1.2
log
@Update to 2.9

- remove MAINTAINER per their request.
- start using gcc4.
- remove devel/gettext module, still using it for building.
- remove upstreamed patches.
- add new patches for replacing wordexp with glob stuff.

OK fcambus@@, clue stick hitting from sthen@@
@
text
@d1 4
a4 1
$OpenBSD: patch-src_controller_cpp,v 1.1 2013/10/16 18:05:25 abieber Exp $
d6 5
a10 2
This is covered in the pull request sent upstream:
	https://github.com/akrennmair/newsbeuter/pull/97
d12 2
a13 1
If this pull request is merged, this patch will no longer apply.
d15 16
a30 31
--- src/controller.cpp.orig	Mon Oct 14 23:28:46 2013
+++ src/controller.cpp	Mon Oct 14 23:23:25 2013
@@@@ -434,10 +434,6 @@@@ void controller::run(int argc, char * argv[]) {
 	} else if (type == "opml") {
 		urlcfg = new opml_urlreader(&cfg);
 		real_offline_mode = offline_mode;
-	} else if (type == "googlereader") {
-		api = new googlereader_api(&cfg);
-		urlcfg = new googlereader_urlreader(&cfg, url_file, api);
-		real_offline_mode = offline_mode;
 	} else if (type == "ttrss") {
 		api = new ttrss_api(&cfg);
 		urlcfg = new ttrss_urlreader(&cfg, url_file, api);
@@@@ -472,19 +468,6 @@@@ void controller::run(int argc, char * argv[]) {
 		if (!do_export && !silent) {
 			std::cout << _("done.") << std::endl;
 		}
-		if (api && type == "googlereader") { // ugly hack!
-			std::vector<google_replay_pair> actions = rsscache->get_google_replay();
-			if (!actions.empty()) {
-				std::cout << _("Updating Google Reader unread states...");
-				std::cout.flush();
-
-				std::vector<std::string> successful_guids = dynamic_cast<googlereader_api *>(api)->bulk_mark_articles_read(actions);
-
-				rsscache->delete_google_replay_by_guid(successful_guids);
-
-				std::cout << _("done.") << std::endl;
-			}
-		}
 	}
a31 15
 	if (urlcfg->get_urls().size() == 0) {
@@@@ -669,12 +652,7 @@@@ void controller::catchup_all() {
 void controller::mark_article_read(const std::string& guid, bool read) {
 	if (api) {
 		if (offline_mode) {
-			if (dynamic_cast<googlereader_api *>(api) != NULL) {
-				LOG(LOG_DEBUG, "controller::mark_article_read: recording %s", guid.c_str());
-				record_google_replay(guid, read);
-			} else {
-				LOG(LOG_DEBUG, "not on googlereader_api");
-			}
+			LOG(LOG_DEBUG, "not on googlereader_api");
 		} else {
 			api->mark_article_read(guid, read);
 		}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Initial import of newsbeuter, a mutt like news reader. 

Thanks Kyle Isom <kyle@@tryfingr.is> for building the port!

OK juanfra@@, bcallah@@
@
text
@@
