head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.8
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.10
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.6
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	abieber_20131016:1.1.1.1
	abieber:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.10.16.18.05.25;	author abieber;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.10.16.18.05.25;	author abieber;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

This is covered in the pull request sent upstream:
	https://github.com/akrennmair/newsbeuter/pull/97

If this pull request is merged, this patch will no longer apply.

--- src/controller.cpp.orig	Mon Oct 14 23:28:46 2013
+++ src/controller.cpp	Mon Oct 14 23:23:25 2013
@@@@ -434,10 +434,6 @@@@ void controller::run(int argc, char * argv[]) {
 	} else if (type == "opml") {
 		urlcfg = new opml_urlreader(&cfg);
 		real_offline_mode = offline_mode;
-	} else if (type == "googlereader") {
-		api = new googlereader_api(&cfg);
-		urlcfg = new googlereader_urlreader(&cfg, url_file, api);
-		real_offline_mode = offline_mode;
 	} else if (type == "ttrss") {
 		api = new ttrss_api(&cfg);
 		urlcfg = new ttrss_urlreader(&cfg, url_file, api);
@@@@ -472,19 +468,6 @@@@ void controller::run(int argc, char * argv[]) {
 		if (!do_export && !silent) {
 			std::cout << _("done.") << std::endl;
 		}
-		if (api && type == "googlereader") { // ugly hack!
-			std::vector<google_replay_pair> actions = rsscache->get_google_replay();
-			if (!actions.empty()) {
-				std::cout << _("Updating Google Reader unread states...");
-				std::cout.flush();
-
-				std::vector<std::string> successful_guids = dynamic_cast<googlereader_api *>(api)->bulk_mark_articles_read(actions);
-
-				rsscache->delete_google_replay_by_guid(successful_guids);
-
-				std::cout << _("done.") << std::endl;
-			}
-		}
 	}
 
 	if (urlcfg->get_urls().size() == 0) {
@@@@ -669,12 +652,7 @@@@ void controller::catchup_all() {
 void controller::mark_article_read(const std::string& guid, bool read) {
 	if (api) {
 		if (offline_mode) {
-			if (dynamic_cast<googlereader_api *>(api) != NULL) {
-				LOG(LOG_DEBUG, "controller::mark_article_read: recording %s", guid.c_str());
-				record_google_replay(guid, read);
-			} else {
-				LOG(LOG_DEBUG, "not on googlereader_api");
-			}
+			LOG(LOG_DEBUG, "not on googlereader_api");
 		} else {
 			api->mark_article_read(guid, read);
 		}
@


1.1.1.1
log
@Initial import of newsbeuter, a mutt like news reader. 

Thanks Kyle Isom <kyle@@tryfingr.is> for building the port!

OK juanfra@@, bcallah@@
@
text
@@
