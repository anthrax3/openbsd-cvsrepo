head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	2012.05.23.15.13.41;	author jasper;	state dead;
branches;
next	1.7;

1.7
date	2012.05.10.13.17.30;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2012.05.10.08.39.47;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.09.15.32.25;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2012.05.09.06.39.04;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2012.05.08.17.10.43;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2012.04.04.05.48.15;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2012.04.03.18.32.12;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.8
log
@be gone, you belong in lang/ now.
@
text
@# $OpenBSD: node.port.mk,v 1.7 2012/05/10 13:17:30 jasper Exp $

# node module

CATEGORIES +=	www/node

BUILD_DEPENDS +=	www/node>=0.6.17p2
RUN_DEPENDS += 		www/node>=0.6.17p2

.if ${CONFIGURE_STYLE:L:Mnpm}
.  if ${CONFIGURE_STYLE:L:Mext}
# Node C++ extensions are specific to an arch and are loaded as
# shared libraries, so set SHARED_ONLY and make sure PKG_ARCH=* is
# not set.
.    if defined(PKG_ARCH) && ${PKG_ARCH} == *
ERRORS +=	"Fatal: Should not have PKG_ARCH=* when compiling extensions"
.    endif
SHARED_ONLY =	Yes
# All node extensions appear to link against these two libraries
WANTLIB +=	m stdc++
.  else
# Node libraries that don't contain C++ extensions should run on
# any arch.
PKG_ARCH ?=	*
.  endif

# The npm package repository separates packages in different directories,
# so to eliminate duplication, you need to set the NPM_NAME and NPM_VERSION
# variables so it can use the correct DISTNAME and MASTER_SITES.
# The NPM_NAME is required anyway during the install tasks, so it may as
# well be used here.
DISTNAME ?=	${NPM_NAME}-${NPM_VERSION}
MASTER_SITES ?=	${MASTER_SITE_NPM}${NPM_NAME}/-/
EXTRACT_SUFX ?=	.tgz
PKGNAME ?=	node-${DISTNAME:S/^node-//}

MODNODE_BIN_NPM =	${LOCALBASE}/bin/npm
NPM_INSTALL_FILE =	${WRKDIR}/${DISTNAME}.tgz
NPM_TAR_DIR =		package
WRKDIST =		${WRKDIR}/${NPM_TAR_DIR}

.if ${CONFIGURE_STYLE:L:Mexpresso}
REGRESS_DEPENDS += devel/node-expresso
MODNODE_REGRESS_TARGET = \
	cd ${WRKDIST} && ${LOCALBASE}/bin/expresso;
.if !defined(do-regress)
do-regress:
	${MODNODE_REGRESS_TARGET}
.endif
.else
REGRESS_TARGET ?=	test
.endif

# List of npm package names to depend on.  Only necessary
# if the current port depends on other node ports.
MODNODE_DEPENDS ?=

# Link all dependencies first so that npm will install without complaining.
# Then rebuild the distfile, since it may contain local patches.
# Then use npm install to install the package to a local node_modules dir.
MODNODE_BUILD_TARGET = \
	cd ${WRKDIST} && find . -type f -name '*.orig'  -print0 | \
		xargs -r0 rm; \
	for dep in ${MODNODE_DEPENDS}; do \
		cd ${WRKDIR} && ${MODNODE_BIN_NPM} link $$dep; \
	done; \
	cd ${WRKDIR} && tar -zcf ${NPM_INSTALL_FILE} ${NPM_TAR_DIR}; \
	cd ${WRKDIR} && HOME=${WRKDIR} ${MODNODE_BIN_NPM} install \
		${NPM_INSTALL_FILE}

# Move just this package from the local node_modules dir to the global
# node_modules dir.  If there are any binaries in the package, create
# symlinks in the default PATH that point to them.
MODNODE_INSTALL_TARGET = \
	mkdir ${PREFIX}/lib/node_modules; \
	mv ${WRKDIR}/node_modules/${NPM_NAME} ${PREFIX}/lib/node_modules; \
	chown -R ${SHAREOWN}:${SHAREGRP} ${PREFIX}/lib/node_modules; \
	if [ -d ${PREFIX}/lib/node_modules/${NPM_NAME}/bin ]; then \
		cd ${PREFIX}/lib/node_modules/${NPM_NAME}/bin && \
		for bin in *; do \
			ln -s ${TRUEPREFIX}/lib/node_modules/${NPM_NAME}/bin/$$bin \
				${PREFIX}/bin/$${bin%.js}; \
		done; \
	fi;

.  if !target(do-build)
do-build:
	${MODNODE_BUILD_TARGET}
.  endif
.  if !target(do-install)
do-install:
	${MODNODE_INSTALL_TARGET}
.  endif
.endif
@


1.7
log
@allow node ports to append 'expresso' to configure style and set up the bits
for regression tests to run

ok aaron bieber, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: node.port.mk,v 1.6 2012/05/10 08:39:47 jasper Exp $
@


1.6
log
@- don't set NO_REGRESS here as it's not picked up when set in a module.
- provide REGRESS_TARGET instead

ok sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: node.port.mk,v 1.5 2012/05/09 15:32:25 sthen Exp $
d42 9
d52 1
@


1.5
log
@when generating PKGNAME from NPM_NAME, strip a leading node- so we don't
double it. ok jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: node.port.mk,v 1.4 2012/05/09 06:39:04 jasper Exp $
d42 1
a42 1
NO_REGRESS ?= Yes
@


1.4
log
@- bump node requirement to the latest and greatest
@
text
@d1 1
a1 1
# $OpenBSD: node.port.mk,v 1.3 2012/05/08 17:10:43 jasper Exp $
d35 1
a35 1
PKGNAME ?=	node-${DISTNAME}
@


1.3
log
@- ensure the node version with fixed node-gyp is required
- fix some whitespace

ok MAINTAINER, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: node.port.mk,v 1.2 2012/04/04 05:48:15 ajacoutot Exp $
d7 2
a8 2
BUILD_DEPENDS +=	www/node>=0.6.17p1
RUN_DEPENDS += 		www/node>=0.6.17p1
@


1.2
log
@Pick a less generic variable for a MODULE: VERSION -> NPM_VERSION

no objection from jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: node.port.mk,v 1.1 2012/04/03 18:32:12 jeremy Exp $
d7 2
a8 2
BUILD_DEPENDS +=	www/node
RUN_DEPENDS += 		www/node
d46 1
a46 1
MODNODE_DEPENDS ?=		
d77 1
a77 1
do-build: 
d81 1
a81 1
do-install: 
@


1.1
log
@Add www/node module for packaging nodejs libraries that are typically
installed via npm install.

OK sthen@@, Aaron Bieber (www/node MAINTAINER)
@
text
@d1 1
a1 1
# $OpenBSD: ruby.port.mk,v 1.50 2011/12/09 21:41:43 jeremy Exp $
d28 1
a28 1
# so to eliminate duplication, you need to set the NPM_NAME and VERSION
d32 1
a32 1
DISTNAME ?=	${NPM_NAME}-${VERSION}
@

