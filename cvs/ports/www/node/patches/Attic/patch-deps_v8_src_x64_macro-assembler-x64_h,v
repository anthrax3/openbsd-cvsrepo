head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.12.07.12.18.01;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2011.03.30.19.54.29;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to node 0.6.3, parts from Aaron Bieber
(further update 0.6.5 to be done soonish, but let's get this in first)
@
text
@$OpenBSD: patch-deps_v8_src_x64_macro-assembler-x64_h,v 1.1 2011/03/30 19:54:29 jasper Exp $
--- deps/v8/src/x64/macro-assembler-x64.h.orig	Sat Mar 26 09:48:02 2011
+++ deps/v8/src/x64/macro-assembler-x64.h	Wed Mar 30 21:22:09 2011
@@@@ -263,8 +263,9 @@@@ class MacroAssembler: public Assembler {
                                            int power);
 
 
-  // Simple comparison of smis.
-  void SmiCompare(Register dst, Register src);
+  // Simple comparison of smis.  Both sides must be known smis to use these,
+  // otherwise use Cmp.
+  void SmiCompare(Register smi1, Register smi2);
   void SmiCompare(Register dst, Smi* src);
   void SmiCompare(Register dst, const Operand& src);
   void SmiCompare(const Operand& dst, Register src);
@@@@ -594,6 +595,8 @@@@ class MacroAssembler: public Assembler {
   void Move(const Operand& dst, Handle<Object> source);
   void Cmp(Register dst, Handle<Object> source);
   void Cmp(const Operand& dst, Handle<Object> source);
+  void Cmp(Register dst, Smi* src);
+  void Cmp(const Operand& dst, Smi* src);
   void Push(Handle<Object> source);
 
   // Emit code to discard a non-negative number of pointer-sized elements
@@@@ -667,6 +670,7 @@@@ class MacroAssembler: public Assembler {
 
   // Abort execution if argument is not a smi. Used in debug code.
   void AbortIfNotSmi(Register object);
+  void AbortIfNotSmi(const Operand& object);
 
   // Abort execution if argument is a string. Used in debug code.
   void AbortIfNotString(Register object);
@


1.1
log
@- update node to 0.4.4 with various patches from chrome to make this build
@
text
@d1 1
a1 1
$OpenBSD$
@

