head	1.3;
access;
symbols
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2012.05.23.15.13.41;	author jasper;	state dead;
branches;
next	1.2;

1.2
date	2011.12.07.12.18.01;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.02.07.21.14;	author robert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@be gone, you belong in lang/ now.
@
text
@$OpenBSD: patch-deps_v8_src_platform_h,v 1.2 2011/12/07 12:18:01 sthen Exp $
--- deps/v8/src/platform.h.orig	Tue Nov  8 18:35:23 2011
+++ deps/v8/src/platform.h	Tue Nov  8 18:39:05 2011
@@@@ -88,7 +88,11 @@@@ namespace internal {
 
 // Use AtomicWord for a machine-sized pointer. It is assumed that
 // reads and writes of naturally aligned values of this type are atomic.
+#if defined(__OpenBSD__) && defined(__i386__)
+typedef Atomic32 AtomicWord;
+#else
 typedef intptr_t AtomicWord;
+#endif
 
 class Semaphore;
 class Mutex;
@


1.2
log
@update to node 0.6.3, parts from Aaron Bieber
(further update 0.6.5 to be done soonish, but let's get this in first)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Instead of reserving 32MB of virtual memory let's reserve the quarter of
RLIMIT_DATA (ulimit -d) if RLIMIT_DATA is not 0 (unlimited).
If RLIMIT_DATA is 0 then the default 512MB reservation will be used.
Using 32MB made v8 use less memory for sure but it was a huge performance
loss too.
@
text
@d2 3
a4 5
--- deps/v8/src/platform.h.orig	Sat May 21 04:40:06 2011
+++ deps/v8/src/platform.h	Wed Jun  1 14:26:51 2011
@@@@ -287,6 +287,10 @@@@ class OS {
   // positions indicated by the members of the CpuFeature enum from globals.h
   static uint64_t CpuFeaturesImpliedByPlatform();
d6 7
a12 6
+  // Maximum size of the virtual memory.  0 means there is no artificial
+  // limit.
+  static intptr_t MaxVirtualMemory();
+
   // Returns the double constant NAN
   static double nan_value();
d14 2
@

