head	1.13;
access;
symbols
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	jasper_20102812:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2012.05.23.15.13.41;	author jasper;	state dead;
branches;
next	1.12;

1.12
date	2012.05.15.17.37.34;	author jasper;	state Exp;
branches;
next	1.11;

1.11
date	2012.05.07.18.11.29;	author jasper;	state Exp;
branches;
next	1.10;

1.10
date	2011.12.21.09.56.54;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2011.12.07.12.18.01;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2011.06.29.18.44.07;	author jasper;	state Exp;
branches;
next	1.7;

1.7
date	2011.05.21.20.32.54;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2011.04.29.07.41.15;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.28.22.02.44;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.30.19.54.29;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2011.01.03.10.50.51;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.03.10.22.29;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.28.18.19.28;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.12.28.18.19.28;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.13
log
@be gone, you belong in lang/ now.
@
text
@$OpenBSD: patch-wscript,v 1.12 2012/05/15 17:37:34 jasper Exp $
--- wscript.orig	Tue May 15 02:30:00 2012
+++ wscript	Tue May 15 19:17:28 2012
@@@@ -537,7 +537,7 @@@@ def configure(conf):
 
   # Configure default variant
   conf.setenv('Release')
-  default_compile_flags = ['-g', '-O3']
+  default_compile_flags = ['-g']
   conf.env.append_value('CCFLAGS', default_compile_flags)
   conf.env.append_value('CXXFLAGS', default_compile_flags)
   conf.write_config_header("config.h")
@


1.12
log
@- update to 0.6.18

ok MAINTAINER
@
text
@d1 1
a1 1
$OpenBSD: patch-wscript,v 1.11 2012/05/07 18:11:29 jasper Exp $
@


1.11
log
@regen patches
@
text
@d1 4
a4 4
$OpenBSD: patch-wscript,v 1.10 2011/12/21 09:56:54 sthen Exp $
--- wscript.orig	Fri May  4 22:12:52 2012
+++ wscript	Mon May  7 20:09:43 2012
@@@@ -540,7 +540,7 @@@@ def configure(conf):
@


1.10
log
@update to node 0.6.6, from maintainer Aaron Bieber
@
text
@d1 4
a4 4
$OpenBSD: patch-wscript,v 1.9 2011/12/07 12:18:01 sthen Exp $
--- wscript.orig	Tue Dec 20 14:55:21 2011
+++ wscript	Tue Dec 20 14:57:09 2011
@@@@ -537,7 +537,7 @@@@ def configure(conf):
@


1.9
log
@update to node 0.6.3, parts from Aaron Bieber
(further update 0.6.5 to be done soonish, but let's get this in first)
@
text
@d1 4
a4 13
$OpenBSD$
--- wscript.orig	Fri Nov 25 10:23:28 2011
+++ wscript	Fri Nov 25 13:45:49 2011
@@@@ -301,7 +301,7 @@@@ def configure(conf):
   if Options.options.efence:
     conf.check(lib='efence', libpath=['/usr/lib', '/usr/local/lib'], uselib_store='EFENCE')
 
-  if sys.platform.startswith("freebsd"):
+  if sys.platform.startswith("freebsd") or sys.platform.startswith("openbsd"):
      if not conf.check(lib="execinfo",
                        includes=['/usr/include', '/usr/local/include'],
                        libpath=['/usr/lib', '/usr/local/lib'],
@@@@ -534,7 +534,7 @@@@ def configure(conf):
@


1.8
log
@- bugfix update to 0.4.9
@
text
@d1 4
a4 11
$OpenBSD: patch-wscript,v 1.7 2011/05/21 20:32:54 sthen Exp $

- OpenBSD can also use libexecinfo.
- Don't append EV_MULTIPLICITY_EV was it breaks the build with using the
  shared libev with an undefined reference to ev_rt_now.
- Don't build with -O3.
- Adjust some paths.

--- wscript.orig	Wed Jun 29 13:24:02 2011
+++ wscript	Wed Jun 29 20:25:09 2011
@@@@ -276,7 +276,7 @@@@ def configure(conf):
d13 1
a13 13
@@@@ -463,8 +463,10 @@@@ def configure(conf):
   # LFS
   conf.env.append_value('CPPFLAGS',  '-D_LARGEFILE_SOURCE')
   conf.env.append_value('CPPFLAGS',  '-D_FILE_OFFSET_BITS=64')
-  conf.env.append_value('CPPFLAGS',  '-DEV_MULTIPLICITY=0')
 
+#  Disabled, see http://comments.gmane.org/gmane.comp.lang.javascript.nodejs/18924
+#  conf.env.append_value('CPPFLAGS',  '-DEV_MULTIPLICITY=0')
+
   # Makes select on windows support more than 64 FDs
   if sys.platform.startswith("win32"):
     conf.env.append_value('CPPFLAGS', '-DFD_SETSIZE=1024');
@@@@ -533,7 +535,7 @@@@ def configure(conf):
d16 1
a16 1
   conf.setenv('default')
a21 14
@@@@ -902,11 +904,10 @@@@ def build(bld):
   # Only install the man page if it exists.
   # Do 'make doc install' to build and install it.
   if os.path.exists('doc/node.1'):
-    bld.install_files('${PREFIX}/share/man/man1/', 'doc/node.1')
+    bld.install_files('${PREFIX}/man/man1/', 'doc/node.1')
 
   bld.install_files('${PREFIX}/bin/', 'tools/node-waf', chmod=0755)
-  bld.install_files('${LIBDIR}/node/wafadmin', 'tools/wafadmin/*.py')
-  bld.install_files('${LIBDIR}/node/wafadmin/Tools', 'tools/wafadmin/Tools/*.py')
+  bld.install_files('${LIBDIR}/node/wafadmin', 'tools/wafadmin/Node.py')
 
   # create a pkg-config(1) file
   node_conf = bld.new_task_gen('subst', before="cxx")
@


1.7
log
@- update node to 0.4.8

- pull across a patch from www/chromium to use the same memory allocation
policy on amd64 as is currently used on i386, this seriously reduces the
amount of virtual memory required
@
text
@d1 1
a1 1
$OpenBSD: patch-wscript,v 1.6 2011/04/29 07:41:15 jasper Exp $
d9 3
a11 3
--- wscript.orig	Sat May 21 03:40:06 2011
+++ wscript	Sat May 21 08:42:12 2011
@@@@ -269,7 +269,7 @@@@ def configure(conf):
d20 1
a20 1
@@@@ -451,8 +451,10 @@@@ def configure(conf):
d32 1
a32 1
@@@@ -521,7 +523,7 @@@@ def configure(conf):
d41 1
a41 1
@@@@ -890,11 +892,10 @@@@ def build(bld):
@


1.6
log
@Zap zoom zoom (-O3)

prompted by zthen@@
@
text
@d1 1
a1 1
$OpenBSD: patch-wscript,v 1.5 2011/04/28 22:02:44 jasper Exp $
d9 3
a11 3
--- wscript.orig	Sat Apr 23 02:06:25 2011
+++ wscript	Fri Apr 29 09:34:30 2011
@@@@ -280,7 +280,7 @@@@ def configure(conf):
d20 1
a20 1
@@@@ -462,8 +462,10 @@@@ def configure(conf):
d32 2
a33 1
@@@@ -533,7 +535,7 @@@@ def configure(conf):
a35 1
   conf.env.append_value('CPPFLAGS', '-DNDEBUG')
d41 1
a41 1
@@@@ -908,11 +910,10 @@@@ def build(bld):
@


1.5
log
@- update to 0.4.7

i386 build test by sthen@@, thanks
@
text
@d1 1
a1 1
$OpenBSD: patch-wscript,v 1.4 2011/03/30 19:54:29 jasper Exp $
d6 1
d10 1
a10 1
+++ wscript	Thu Apr 28 23:02:42 2011
d32 9
@


1.4
log
@- update node to 0.4.4 with various patches from chrome to make this build
@
text
@d1 1
a1 1
$OpenBSD: patch-wscript,v 1.3 2011/01/03 10:50:51 jasper Exp $
d8 2
a9 2
--- wscript.orig	Sat Mar 26 09:48:02 2011
+++ wscript	Wed Mar 30 21:39:43 2011
d19 1
a19 1
@@@@ -460,8 +460,10 @@@@ def configure(conf):
d31 1
a31 1
@@@@ -906,11 +908,10 @@@@ def build(bld):
@


1.3
log
@- and another chunk bites the dust
@
text
@d1 1
a1 1
$OpenBSD: patch-wscript,v 1.2 2011/01/03 10:22:29 jasper Exp $
d3 4
a6 1
- OpenBSD can also use libkvm and libexecinfo.
d8 3
a10 12
--- wscript.orig	Fri Dec 31 06:00:01 2010
+++ wscript	Mon Jan  3 11:03:56 2011
@@@@ -155,7 +155,7 @@@@ def configure(conf):
     conf.env.append_value("CCFLAGS", "-rdynamic")
     conf.env.append_value("LINKFLAGS_DL", "-rdynamic")
 
-  if sys.platform.startswith("freebsd"):
+  if sys.platform.startswith("freebsd") or sys.platform.startswith("openbsd"):
     conf.check(lib='kvm', uselib_store='KVM')
 
   #if Options.options.debug:
@@@@ -164,7 +164,7 @@@@ def configure(conf):
d19 13
a31 1
@@@@ -576,11 +577,10 @@@@ def build(bld):
d38 4
a41 4
   bld.install_files('${PREFIX}/bin/', 'bin/*', chmod=0755)
-  bld.install_files('${PREFIX}/lib/node/wafadmin', 'tools/wafadmin/*.py')
-  bld.install_files('${PREFIX}/lib/node/wafadmin/Tools', 'tools/wafadmin/Tools/*.py')
+  bld.install_files('${PREFIX}/lib/node/wafadmin', 'tools/wafadmin/Node.py')
d43 2
a44 2
 def shutdown():
   Options.options.debug
@


1.2
log
@- update node.js to 0.2.6
@
text
@d1 1
a1 1
$OpenBSD: patch-wscript,v 1.1.1.1 2010/12/28 18:19:28 jasper Exp $
a3 1
- The SSL tests fail as -lssl isn't appended to LDFLAGS, override it.
a24 8
@@@@ -321,6 +321,7 @@@@ def configure(conf):
   default_compile_flags = ['-g', '-O3']
   conf.env.append_value('CCFLAGS', default_compile_flags)
   conf.env.append_value('CXXFLAGS', default_compile_flags)
+  conf.env.append_value('${CFLAGS}', default_compile_flags)
   conf.write_config_header("config.h")
 
 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d6 2
a7 2
--- wscript.orig	Wed Nov 17 06:46:59 2010
+++ wscript	Fri Dec 10 16:38:54 2010
d34 1
a34 1
@@@@ -573,11 +574,10 @@@@ def build(bld):
@


1.1.1.1
log
@import WIP node.js 0.2.5

Node.js is an evented I/O framework for the V8 JavaScript engine. It is
intended for writing scalable network programs such as web servers.

As there are still some issues to resolve, this won't be hooked up yet.

ok landry@@ 
@
text
@@
