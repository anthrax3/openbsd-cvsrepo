head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.4
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.2
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.18.0.4
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.14.0.2
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.11.0.2
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	sebastia_20101124:1.1.1.1
	sebastia:1.1.1;
locks; strict;
comment	@# @;


1.20
date	2016.05.02.10.38.27;	author sebastia;	state Exp;
branches;
next	1.19;
commitid	47bXbd6W59aexb2J;

1.19
date	2015.09.26.14.29.22;	author sebastia;	state Exp;
branches;
next	1.18;
commitid	S9Qb6uAlmCorHjCl;

1.18
date	2015.07.17.21.23.08;	author ajacoutot;	state Exp;
branches;
next	1.17;
commitid	IE03QX0iL1TlY87a;

1.17
date	2015.04.29.09.15.28;	author giovanni;	state Exp;
branches;
next	1.16;
commitid	X9rbtCnXJNcAoito;

1.16
date	2014.12.14.17.04.50;	author sebastia;	state Exp;
branches;
next	1.15;
commitid	KNcT1mLpzkUKL7sF;

1.15
date	2014.11.21.18.23.45;	author sebastia;	state Exp;
branches;
next	1.14;
commitid	BmXNO3LCxjFWNlWp;

1.14
date	2014.06.12.06.16.35;	author sebastia;	state Exp;
branches;
next	1.13;
commitid	fBoWwCqEIjkHAE8J;

1.13
date	2014.05.22.09.50.07;	author sebastia;	state Exp;
branches;
next	1.12;

1.12
date	2014.05.16.17.00.21;	author sebastia;	state Exp;
branches;
next	1.11;

1.11
date	2014.01.11.12.56.41;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2014.01.03.18.39.51;	author sebastia;	state Exp;
branches;
next	1.9;

1.9
date	2012.12.16.16.36.26;	author sebastia;	state Exp;
branches;
next	1.8;

1.8
date	2012.11.15.10.25.50;	author giovanni;	state Exp;
branches;
next	1.7;

1.7
date	2012.10.30.15.09.54;	author sebastia;	state Exp;
branches;
next	1.6;

1.6
date	2012.08.17.09.59.08;	author sebastia;	state Exp;
branches;
next	1.5;

1.5
date	2012.07.08.14.21.02;	author sebastia;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.31.17.02.23;	author sebastia;	state Exp;
branches;
next	1.3;

1.3
date	2011.06.02.13.41.41;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.22.05.36.12;	author sebastia;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.24.18.16.03;	author sebastia;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.11.24.18.16.03;	author sebastia;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Update README now that apache-httpd-openbsd is gone, and refer to the
apache-httpd package. Simplify the README, since that setup is described
in the manual.
Further enhance some other wording.

pointed out by ajacoutot.
@
text
@# $OpenBSD: README,v 1.19 2015/09/26 14:29:22 sebastia Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

General setup and configuration information about SOGo can be found
in ${TRUEPREFIX}/share/doc/sogo/.

SOGo is designed with scalability in mind. All of the dependent components
like mail-, database-, or web server can run on different hosts, and
you can even choose to install your preferred software to fulfill those tasks.
You have to install those components manually on the servers where you
want to run them. An overview is given in the list below.

For your SOGo installation you would need the following components installed
somewhere. Either on the same host where you install SOGo, or distributed
over multiple systems, related to your needs:
- Memcached to speed up SOGo:
  * install the memcached package
- Web Server:
  * install the nginx or the apache-httpd package
- Database Server:
  * install postgresql-server package
  - or install mariadb-server package
- LDAP Server for user authentication shared addressbooks:
  * install openldap-server package
  - or use ldapd from base
- IMAP Server:
  * install cyrus-imapd package
  - or install dovecot package
  - or install courier-imap package
  - or install imap-uw package
- SMTP Server or local sendmail compatible binary:
  * install postfix package
  - or use smtpd from base
  - or install sendmail package
The alternatives marked with * are recommended. They are tested and verified
to work together by the SOGo port maintainer.
For the configuration of those components you should take a look at their
respective documentation.

The SOGo system user
====================
The system user and group intended to run the SOGo application server
is called _sogo. The users home directory is ${VARBASE}/sogo.

The SOPE database adaptor
=========================
The SOPE PostgreSQL database adaptor is automatically installed.
If you want to use a MySQL database as backend, you have to install
the sope-mysql package on the host where SOPE and SOGo are installed.

SOGo with nginx
===============
Since nginx configuration is not explained in the SOGo Manual, here is an example.
It's assumed that nginx(8) and SOGo run on the same host. Nginx(8) listens on port 80,
and SOGo is listening on its default port 20000.

Nginx runs in a chroot environment on OpenBSD, therefore you have to
copy some files into the server's chroot environment:

# mkdir -p ${VARBASE}/www/lib/sogo
# cp -R ${TRUEPREFIX}/lib/GNUstep/SOGo/WebServerResources ${VARBASE}/www/lib/sogo/www

Edit /etc/nginx/nginx.conf

server {

    listen 80;
    root ${VARBASE}/www/lib/sogo/www/;
    proxy_http_version 1.1;

    location = /
    {
        rewrite ^ http://$server_name/SOGo;
        allow all;
    }

    # For IOS 7
    location = /principals/
    {
        rewrite ^ http://$server_name/SOGo/dav;
        allow all;
    }

    location = /.well-known/caldav/
    {
        rewrite ^ http://$server_name/SOGo/dav;
    }

    location = /.well-known/carddav/
    {
        rewrite ^ http://$server_name/SOGo/dav;
        allow all;
    }

    location ^~/SOGo
    {
        proxy_pass http://127.0.0.1:20000;
        proxy_redirect http://127.0.0.1:20000 default;
        # forward user's IP address
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header x-webobjects-server-protocol HTTP/1.0;
        proxy_set_header x-webobjects-remote-host 127.0.0.1;
        proxy_set_header x-webobjects-server-name $server_name;
        proxy_set_header x-webobjects-server-url $scheme://$host;
        proxy_set_header x-webobjects-server-port $server_port;
        proxy_connect_timeout 90;
        proxy_send_timeout 90;
        proxy_read_timeout 90;
        proxy_buffer_size 4k;
        proxy_buffers 4 32k;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 64k;
        client_max_body_size 50m;
        client_body_buffer_size 128k;
        break;
    }

    location /SOGo.woa/WebServerResources/
    {
        alias ${VARBASE}/www/lib/sogo/www/;
        allow all;
    }

    location /SOGo/WebServerResources/
    {
        alias ${VARBASE}/www/lib/sogo/www/;
        allow all;
    }

    location ^/SOGo/so/ControlPanel/Products/([^/]*)/Resources/(.*)$
    {
        alias ${VARBASE}/www/lib/sogo/$1.SOGo/Resources/$2;
    }

    location ^/SOGo/so/ControlPanel/Products/[^/]*UI/Resources/.*\.(jpg|png|gif|css|js)$
    {
        alias ${VARBASE}/www/lib/sogo/$1.SOGo/Resources/$2;
    }
}

SOGo with apache-httpd package
==============================
The configuration of SOGo behind Apache is described in the manual.

A note on using CAS
===================
Using CAS is not tested by the maintainer. You have to copy
${TRUEPREFIX}/share/doc/sogo/cas-proxy-validate.py to
${VARBASE}/www/cgi-bin. Within the script, you have to edit the config
array and the path to your python to fit your configurtaion.
The script also requires Python memcached, provided by
the py-memcached package.

A note on using Thunderbird integrator
======================================
If you are going to use Thunderbird integrator you will need the php
script installed on ${TRUEPREFIX}/share/doc/sogo/updates.php.
You should copy it under ${VARBASE}/www/htdocs, install the php package and
follow the instuctions in the SOGo manual.

SOGo configuration example
==========================
Below you see an example SOGo configuration. The example assumes you have
the recommended server components installed as mentioned above.
You have to apply them as user _sogo using the defaults command, i.e:
defaults write sogod <key> <value>
In the example below it is assumed that all components run on the same host.
For details to each of the defaults consult the SOGo Administration manual.

sogod SOGoUserSources '(
    {
        CNFieldName = cn;
        IDFieldName = uid;
        IMAPHostFieldName = mailHost;
        UIDFieldName = uid;
        baseDN = "ou=people,dc=intern";
        bindDN = "cn=Manager,dc=intern";
        bindPassword = ManagerLDAPPassword;
        canAuthenticate = YES;
        displayName = "SOGo Accounts";
        hostname = localhost;
        id = public;
        isAddressBook = YES;
        port = 389;
    }
)'
sogod SOGoSMTPServer localhost
sogod SOGoIMAPServer localhost
sogod SOGoLanguage English
sogod SOGoTimeZone Europe/Berlin
sogod SOGoFoldersSendEMailNotifications YES
sogod SOGoMemcachedHost localhost
sogod SOGoMailingMechanism smtp
sogod WOLogFile ${VARBASE}/log/sogo/sogod.log
sogod WOPidFile ${VARBASE}/sogo/sogod.pid
sogod SOGoMailDomain my-domain.com
sogod OCSFolderInfoURL postgresql://_sogo:sogo@@localhost:5432/sogo/sogo_folder_info
sogod SOGoProfileURL postgresql://_sogo:sogo@@localhost:5432/sogo/sogo_user_profile
sogod OCSSessionsFolderURL postgresql://_sogo:sogo@@localhost:5432/sogo/sogo_sessions_folder
sogod SOGoACLsSendEMailNotifications YES
sogod SOGoAppointmentSendEMailNotifications YES
sogod WOWorkersCount 4
sogod SOGoDraftsFolderName INBOX.Drafts
sogod SOGoTrashFolderName INBOX.Trash
sogod SOGoSentFolderName INBOX.Sent
sogod SOGoZipPath ${LOCALBASE}/bin/zip

Upgrading from older SOGo versions
==================================
Update the files in the chroot environment of apache as root:

# rm -rf ${VARBASE}/www/lib/sogo
# mkdir -p ${VARBASE}/www/lib/sogo
# cp -R ${TRUEPREFIX}/lib/GNUstep/SOGo/WebServerResources ${VARBASE}/www/lib/sogo/www

Upgrade SOGo from < 1.3.5
=========================
Since version 1.3.5, SOGo requires to have a OCSSessionsFolderURL default set,
which you need to create. For example run the following command as user _sogo:

$ defaults write sogod OCSSessionsFolderURL \
postgresql://_sogo:sogo@@localhost:5432/sogo/sogo_sessions_folder

Upgrade SOGo from < 1.3.12
==========================
With version 1.3.12, the database schema got some enhancements, for example
to permit syncs of cards with big photos in them.

Run one of the following scripts as the SOGo system user _sogo. Depending on
the database you use, choose the postgres or mysql variant. The scripts
will ask you for the database credentials.

# su _sogo -c "${TRUEPREFIX}/share/doc/sogo/sql-update-1.3.11_to_1.3.12-postgres.sh"
# su _sogo -c "${TRUEPREFIX}/share/doc/sogo/sql-update-1.3.11_to_1.3.12-mysql.sh"

Upgrade SOGo from < 1.3.16
==========================
New password schemes were introduced. You may want to set the
userPasswordAlgorithm default, i.e.:

# su _sogo "defaults write sogod userPasswordAlgorithm ssha"

Upgrade SOGo from < 1.3.17
==========================
With version 1.3.17, the "cycle info" field of the calendar tables
was enlarged.

Run one of the following scripts as the SOGo system user _sogo. Depending on
the database you use, choose the postgres or mysql variant. The scripts
will ask you for the database credentials.

# su _sogo "${TRUEPREFIX}/share/doc/sogo/sql-update-1.3.16_to_1.3.17-postgres.sh"
# su _sogo "${TRUEPREFIX}/share/doc/sogo/sql-update-1.3.16_to_1.3.17-mysql.sh"

Upgrade SOGo from < 2.1.1
=========================
With version 2.1.0, the WOPort default changed from listening on *:20000
to 127.0.0.1:20000. To get back the old behaviour, run the following
command:

# su _sogo "defaults write sogod WOPort *:20000"

Upgrade SOGo from < 2.3.0
==========================
With version 2.3.0, the database schema needs to be extended.

Run one of the following scripts as the SOGo system user _sogo. Depending on
the database you use, choose the postgres or mysql variant. The scripts
will ask you for the database credentials.

# su _sogo "${TRUEPREFIX}/share/doc/sogo/sql-update-2.2.17_to_2.3.0-postgres.sh"
# su _sogo "${TRUEPREFIX}/share/doc/sogo/sql-update-2.2.17_to_2.3.0-mysql.sh"
@


1.19
log
@Update to 2.3.2

Major verion jump, on upgrade, which includes a DB schema change.
For additional upgrade instructions to the usual ones, check the README.

Enable a couple of tests that don't require a configuration, and DB etc.
Thought 3 are failing.

OK giovanni@@ (who also gave OK for www/sogo)
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.18 2015/07/17 21:23:08 ajacoutot Exp $
d22 1
a22 1
  * you can install nginx or the apache-httpd-openbsd package
d146 3
a148 69
SOGo with OpenBSD apache-httpd-openbsd package
==============================================
Since the httpd 1.3 configuration is slightly different than the Apache 2
configuration explained in the SOGo Manual, here is an example. It's assumed
that the httpd and SOGo run on the same host. The httpd listens on port 80,
and SOGo is listening on its default port 20000.

The OpenBSD httpd runs in a chroot environment, therefore you have to
copy some files into the server's chroot environment:

# mkdir -p ${VARBASE}/www/lib/sogo
# cp -R ${TRUEPREFIX}/lib/GNUstep/SOGo/WebServerResources ${VARBASE}/www/lib/sogo/www

Edit ${VARBASE}/www/conf/httpd.conf:
You should make sure the proxy and header modules are loaded:
LoadModule proxy_module ${TRUEPREFIX}/lib/apache/modules/libproxy.so
LoadModule headers_module ${TRUEPREFIX}/apache/modules/mod_headers.so

Alias /SOGo.woa/WebServerResources/ \
      /lib/sogo/www/
Alias /SOGo/WebServerResources/ \
      /lib/sogo/www/
AliasMatch /SOGo/so/ControlPanel/Products/(.*)/Resources/(.*) \
           /lib/sogo/$1.SOGo/Resources/$2

<LocationMatch "^/SOGo/so/ControlPanel/Products/.*UI/Resources/.*\.(jpg|png|gif|css|js)">
  SetHandler default-handler
</LocationMatch>

## Uncomment the following to enable proxy-side authentication, you will then
## need to set the "SOGoTrustProxyAuthentication" SOGo user default to YES and
## adjust the "x-webobjects-remote-user" proxy header in the "Proxy" section
## below.
#<Location /SOGo>
#  AuthType XXX
#  Require valid-user
#  SetEnv proxy-nokeepalive 1
#  Allow from all
#</Location>

ProxyRequests Off
SetEnv proxy-nokeepalive 1
ProxyPreserveHost On

# When using CAS, you should uncomment this and install cas-proxy-validate.py
# in ${VARBASE}/www/cgi-bin to reduce server overloading
#
# ProxyPass /SOGo/casProxy http://localhost/cgi-bin/cas-proxy-validate.py
# <Proxy http://localhost/app/cas-proxy-validate.py>
#   Order deny,allow
#   Allow from your-cas-host-addr
# </Proxy>

ProxyPass /SOGo http://127.0.0.1:20000/SOGo
ProxyPassReverse /SOGo http://127.0.0.1:20000/SOGo

RequestHeader set "x-webobjects-server-port" "443"
RequestHeader set "x-webobjects-server-name" "127.0.0.1"
RequestHeader set "x-webobjects-server-url" "http://127.0.0.1"
RequestHeader set "x-webobjects-server-protocol" "HTTP/1.0"
RequestHeader set "x-webobjects-remote-host" "127.0.0.1"

AddDefaultCharset UTF-8

# To be able to use iPhone a vhost on port 8800 should be
# configured and those redirects must be set
RedirectMatch ^/principals/users/(.*)$ http://127.0.0.1:8800/SOGo/dav/$1
RedirectMatch ^/principals/$ http://127.0.0.1:8800/SOGo/dav/
RedirectMatch ^/.well-known/(caldav|carddav)$ http://127.0.0.1:8800/SOGo/dav/
d152 2
a153 2
Using CAS with the base httpd is not tested by the maintainer. You
have to copy ${TRUEPREFIX}/share/doc/sogo/cas-proxy-validate.py to
d155 3
a157 6
array and the path to your python to fit your configurtaion. Since
the httpd runs in a chroot environment you at least have to copy Python
and its dependencies into the chroot environment. Further you have to
make sure the following python modules are also available in the
chroot environment: cgi, memcache, os, sys. For the memcache
module you have to install the py-memcached package.
d164 1
a164 1
follow the instuctions under ${TRUEPREFIX}/share/doc/sogo/SOGo_Mozilla_Thunderbird_Configuration.odt.
@


1.18
log
@sudo(8) -> su(1)
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.17 2015/04/29 09:15:28 giovanni Exp $
d336 11
@


1.17
log
@"proxy_http_version 1.1;" is needed in nginx.conf to support some third party
webdav plugins
fix readme: sendmail and nginx are no more in base
ok sebastia@@ (Maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.16 2014/12/14 17:04:50 sebastia Exp $
d63 2
a64 2
$ sudo mkdir -p ${VARBASE}/www/lib/sogo
$ sudo cp -R ${TRUEPREFIX}/lib/GNUstep/SOGo/WebServerResources ${VARBASE}/www/lib/sogo/www
d286 3
a288 3
$ sudo rm -rf ${VARBASE}/www/lib/sogo
$ sudo mkdir -p ${VARBASE}/www/lib/sogo
$ sudo cp -R ${TRUEPREFIX}/lib/GNUstep/SOGo/WebServerResources ${VARBASE}/www/lib/sogo/www
d307 2
a308 2
$ sudo -u _sogo ${TRUEPREFIX}/share/doc/sogo/sql-update-1.3.11_to_1.3.12-postgres.sh
$ sudo -u _sogo ${TRUEPREFIX}/share/doc/sogo/sql-update-1.3.11_to_1.3.12-mysql.sh
d315 1
a315 1
$ sudo -u _sogo defaults write sogod userPasswordAlgorithm ssha
d326 2
a327 2
$ sudo -u _sogo ${TRUEPREFIX}/share/doc/sogo/sql-update-1.3.16_to_1.3.17-postgres.sh
$ sudo -u _sogo ${TRUEPREFIX}/share/doc/sogo/sql-update-1.3.16_to_1.3.17-mysql.sh
d335 1
a335 1
$ sudo -u _sogo defaults write sogod WOPort *:20000
@


1.16
log
@Update to 2.2.11a

as usual, lots of bugs fixed, and enhancements
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.15 2014/11/21 18:23:45 sebastia Exp $
d22 1
a22 2
  * you can use nginx from the OpenBSD base system
  - or install the apache-httpd-openbsd package
d36 2
a37 1
  - or use smtpd or sendmail from base
d72 1
@


1.15
log
@bump revision after gnustep-base update, while there, change mysql-server
-> mariadb-server, as pointed out to me some time ago from Marcus MERIGHI
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.14 2014/06/12 06:16:35 sebastia Exp $
d160 2
a161 2
LoadModule proxy_module /usr/lib/apache/modules/libproxy.so
LoadModule headers_module /usr/lib/apache/modules/mod_headers.so
@


1.14
log
@Make the nginx configuration match the apache configuration example
in the README, incl. some minor style nits.

feedback and OK giovanni@@
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.13 2014/05/22 09:50:07 sebastia Exp $
d26 1
a26 1
  - or install mysql-server package
@


1.13
log
@bump revision due to gnustep.port.mk overhaul and portcheck fixes

feedback and OK aja@@
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.12 2014/05/16 17:00:21 sebastia Exp $
d63 2
a64 2
# mkdir -p ${VARBASE}/www/lib/sogo
# cp -R ${TRUEPREFIX}/lib/GNUstep/SOGo/WebServerResources ${VARBASE}/www/lib/sogo/www
d71 1
a71 1
    root ${VARBASE}/www/lib/GNUstep/SOGo/WebServerResources/;
d89 1
a89 1
            }
d97 2
a98 1
    location ^~/SOGo {
d121 4
a124 2
    location /SOGo.woa/WebServerResources/ {
        alias ${VARBASE}/www/lib/GNUstep/SOGo/WebServerResources/;
d128 3
a130 2
    location /SOGo/WebServerResources/ {
        alias ${VARBASE}/www/lib/GNUstep/SOGo/WebServerResources/;
d134 3
a136 2
    location ^/SOGo/so/ControlPanel/Products/([^/]*)/Resources/(.*)$ {
        alias ${VARBASE}/www/lib/GNUstep/SOGo/$1.SOGo/Resources/$2;
d141 1
a141 1
        alias ${VARBASE}/www/lib/GNUstep/SOGo/$1.SOGo/Resources/$2;
@


1.12
log
@Add nginx configuration example to pkg README, from giovanni@@, with
minor tweak from me.

Feel free to commit, giovanni@@
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.11 2014/01/11 12:56:41 ajacoutot Exp $
d7 1
a7 1
General setup and configuration information about SOGo can be found 
d11 1
a11 1
like mail-, database-, or web server can run on different hosts, and 
d39 1
a39 1
to work together by the SOGo port maintainer. 
d44 1
a44 1
======================================
d46 1
a46 1
is called _sogo. The users home directory is /var/sogo.
d49 2
a50 2
=====================================
The SOPE PostgreSQL database adaptor is automatically installed. 
d55 1
a55 1
======================================
d63 2
a64 2
# mkdir -p /var/www/lib/sogo
# cp -R ${TRUEPREFIX}/lib/GNUstep/SOGo/WebServerResources /var/www/lib/sogo/www
d71 1
a71 1
    root /var/www/lib/GNUstep/SOGo/WebServerResources/;
d121 1
a121 1
        alias /var/www/lib/GNUstep/SOGo/WebServerResources/;
d126 1
a126 1
        alias /var/www/lib/GNUstep/SOGo/WebServerResources/;
d131 1
a131 1
        alias /var/www/lib/GNUstep/SOGo/$1.SOGo/Resources/$2;
d136 1
a136 1
        alias /var/www/lib/GNUstep/SOGo/$1.SOGo/Resources/$2;
d141 2
a142 2
======================================
Since the httpd 1.3 configuration is slightly different than the Apache 2 
d150 2
a151 2
# mkdir -p /var/www/lib/sogo
# cp -R ${TRUEPREFIX}/lib/GNUstep/SOGo/WebServerResources /var/www/lib/sogo/www
d153 1
a153 1
Edit /var/www/conf/httpd.conf:
d185 1
a185 1
# in /var/www/cgi-bin to reduce server overloading
d204 2
a205 1
# To be able to use iPhone a vhost on port 8800 should be configured and those redirects must be set
d210 2
a211 2
A note on using CAS 
=======================
d214 1
a214 1
/var/www/cgi-bin. Within the script, you have to edit the config
d223 1
a223 1
=======================
d226 1
a226 1
You should copy it under /var/www/htdocs, install the php package and
d230 1
a230 1
===================================
d262 2
a263 2
sogod WOLogFile /var/log/sogo/sogod.log
sogod WOPidFile /var/sogo/sogod.pid
d277 1
a277 1
========================================
d280 3
a282 3
$ sudo rm -rf /var/www/lib/sogo
$ sudo mkdir -p /var/www/lib/sogo
$ sudo cp -R ${TRUEPREFIX}/lib/GNUstep/SOGo/WebServerResources /var/www/lib/sogo/www
d285 2
a286 2
========================================
Since version 1.3.5, SOGo requires to have a OCSSessionsFolderURL default set, 
d293 1
a293 1
========================================
d297 1
a297 1
Run one of the following scripts as the SOGo system user _sogo. Depending on 
d305 1
a305 1
=======================================
d312 1
a312 1
=======================================
d314 1
a314 1
was enlarged. 
d324 1
a324 1
=======================================
@


1.11
log
@Do not hardcode /usr/local.
Do not use SYSCONFDIR for base system etc files.
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.10 2014/01/03 18:39:51 sebastia Exp $
d22 2
a23 2
  * you can use httpd from the OpenBSD base system
  - or install the apache-httpd package
d54 87
a140 1
SGOo with httpd from OpenBSD base
@


1.10
log
@update SOGo to 2.1.1b

the default changed where the SOGo daemon listens on: now on 127.0.0.1:20000
If needed, to get back the old behaviour listening on *:20000 follow instructions in the
pkg README.

OK giovanni@@
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.9 2012/12/16 16:36:26 sebastia Exp $
d187 1
a187 1
sogod SOGoZipPath /usr/local/bin/zip
@


1.9
log
@update to 2.0.3a
based on initial patch, testing and ideas from giovanni@@

OK giovanni@@
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.8 2012/11/15 10:25:50 giovanni Exp $
d236 7
@


1.8
log
@
Install updates.php script and tell people how to configure it
together with Thinderbird Integrator plugin.
ok sebastia@@ (Maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.7 2012/10/30 15:09:54 sebastia Exp $
d117 5
@


1.7
log
@Major update to SOGo 2.0.2, essentially unfucking it on amd64.

Problem reported and tests from giovann@@ and Jean Gerard
(jg at rilk.com).

finally OK giovanni@@
same applies to the just updated SOPE, where I hit the go button
just too fast ;)
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.6 2012/08/17 09:59:08 sebastia Exp $
d129 7
@


1.6
log
@update sogo to latest release.

feedback and OK sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.5 2012/07/08 14:21:02 sebastia Exp $
d181 3
a183 3
# rm -rf /var/www/lib/sogo
# mkdir -p /var/www/lib/sogo
# cp -R ${TRUEPREFIX}/lib/GNUstep/SOGo/WebServerResources /var/www/lib/sogo/www
d214 1
a214 1
With version 1.2.17, the "cycle info" field of the calendar tables
@


1.5
log
@update SOGo to 1.3.16
minor SHLIB bump
introduce SOGOLIBDIR variable to be used in PLIST, update hint from README:

Upgrade SOGo from < 1.3.16
=======================================
New password schemes were introduced. You may want to set the
userPasswordAlgorithm default, i.e.:

$ defaults write sogod userPasswordAlgorithm ssha
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.4 2012/03/31 17:02:23 sebastia Exp $
d202 2
a203 2
$ ${TRUEPREFIX}/share/doc/sogo/sql-update-1.3.11_to_1.3.12-postgres.sh
$ ${TRUEPREFIX}/share/doc/sogo/sql-update-1.3.11_to_1.3.12-mysql.sh
d210 13
a222 1
$ defaults write sogod userPasswordAlgorithm ssha
@


1.4
log
@Update SOGo to 1.3.14, many new features. To allow large images in vCards,
people should upgrade the database schema. More info in the README.

OK ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.3 2011/06/02 13:41:41 ajacoutot Exp $
d204 7
@


1.3
log
@Add a consistent header that substitutes FULLPKGNAME for the READMEs.

ok jasper@@ sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.2 2011/04/22 05:36:12 sebastia Exp $
d192 12
@


1.2
log
@Update SOGo to 1.3.6.
People upgrading from 1.3.4 or earlier need a new configuration default called
OCSSessionsFolderURL. See the packages README for more details.

OK jasper@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: README,v 1.1.1.1 2010/11/24 18:16:03 sebastia Exp $
d3 3
a5 2
SOGo on OpenBSD
======================================
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d63 2
a64 2
mkdir -p /var/www/lib/sogo
cp -R ${TRUEPREFIX}/lib/GNUstep/SOGo/WebServerResources /var/www/lib/sogo/www
a157 1
sogod SOGoProfileURL postgresql://_sogo:sogo@@localhost:5432/sogo/sogo_user_profile
d166 2
d176 15
@


1.1.1.1
log
@Import SOGo: web based groupware server

DESCR:
SOGo is a groupware server built around OpenGroupware.org (OGo) and the
SOPE application server, with a focus on scalability. It provides the
usual groupware functionality as E-Mail, Calendaring, and Contacts
management.


Not yet linking it to the build, fixing last few things in the tree.

OK landry@@, sthen@@


@
text
@@
