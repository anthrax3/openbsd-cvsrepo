head	1.3;
access;
symbols
	OPENBSD_4_8:1.2.0.12
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.10
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.6
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.4
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.1.0.4
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2010.10.26.09.09.34;	author landry;	state dead;
branches;
next	1.2;

1.2
date	2007.11.13.21.24.48;	author martynas;	state Exp;
branches;
next	1.1;

1.1
date	2007.02.23.18.17.17;	author robert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Minimo 1.8.1.19 was released >2 years ago, its codebase is ffx-2.x,
unmaintained upstream, etc. Another mozilla port bites the dust.
(i'll port its descendant fennec once ffx4 works, if it works someday..)

no objections from zaurus/arm users (sthen, kili, deraadt, todd...)
agreed by stephan@@ & steven@@ at trofea
@
text
@$OpenBSD: patch-js_src_jsnum_h,v 1.2 2007/11/13 21:24:48 martynas Exp $
--- js/src/jsnum.h.orig	Thu Nov  1 22:52:24 2007
+++ js/src/jsnum.h	Fri Nov  9 15:33:55 2007
@@@@ -61,7 +61,7 @@@@ JS_BEGIN_EXTERN_C
  */
 
 #if defined(__arm) || defined(__arm32__) || defined(__arm26__) || defined(__arm__)
-#ifndef __QNXNTO__
+#if !defined(__QNXNTO__) && !defined(__OpenBSD__) /* Armel ABI */
 #define CPU_IS_ARM
 #endif
 #endif
@


1.2
log
@update to minimo-20071108;  testing on zaurus and ok kili@@
@
text
@d1 1
a1 1
$OpenBSD: patch-js_src_jsnum_h,v 1.1 2007/02/23 18:17:17 robert Exp $
@


1.1
log
@implement xptcinvoke and xptcstubs for arm based on the linux code,
and fix an endianess issue that makes minimo work on arm based
architectures;

the problem has been fixed by Martynas Venckus;
@
text
@d1 4
a4 5
$OpenBSD$
--- js/src/jsnum.h.orig	Thu Dec  9 02:32:19 2004
+++ js/src/jsnum.h	Fri Feb 23 17:12:12 2007
@@@@ -60,7 +60,7 @@@@ JS_BEGIN_EXTERN_C
  * are stored in big endian`s way.
d7 3
a9 2
-#if defined(__arm) || defined(__arm32__) || defined(__arm26__) || defined(__arm__)
+#if (defined(__arm) || defined(__arm32__) || defined(__arm26__) || defined(__arm__)) && !defined(__OpenBSD__) /* Armel ABI */
d12 1
a12 1
 
@

