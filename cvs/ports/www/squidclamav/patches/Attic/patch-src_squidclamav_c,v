head	1.5;
access;
symbols
	OPENBSD_5_8:1.3.0.2;
locks; strict;
comment	@# @;


1.5
date	2016.01.18.10.47.52;	author sthen;	state dead;
branches;
next	1.4;
commitid	scmtoiRybmDN1FlC;

1.4
date	2016.01.12.13.13.43;	author sthen;	state Exp;
branches;
next	1.3;
commitid	z1BL25nhbEQRrlR6;

1.3
date	2016.01.11.17.53.05;	author sthen;	state Exp;
branches
	1.3.2.1;
next	1.2;
commitid	1LIcOxdXeF5tG5rA;

1.2
date	2015.10.17.19.35.02;	author sthen;	state dead;
branches;
next	1.1;
commitid	nyQHKBvlUPyBfHoT;

1.1
date	2015.09.08.18.18.04;	author sthen;	state Exp;
branches;
next	;
commitid	bc78ED8xVbAl1EwL;

1.3.2.1
date	2016.01.11.17.55.26;	author sthen;	state Exp;
branches;
next	;
commitid	tBP8K8IHwHhVbDkt;


desc
@@


1.5
log
@update to squidclamav-6.15
@
text
@$OpenBSD: patch-src_squidclamav_c,v 1.4 2016/01/12 13:13:43 sthen Exp $

All the other buffers rx'ing data from clamav in this file use LBUFSIZ (32K).
Suspect this use of BUFSIZ from stdio.h (1K) is a typo. Trips the "backwards
memcpy" check but obviously isn't.

From b1b82e85c32435299446f7cf16c93318b815d32e Mon Sep 17 00:00:00 2001
From: Darold Gilles <gilles@@darold.net>
Date: Mon, 11 Jan 2016 19:34:51 +0100
Subject: [PATCH] Fix buffer overflow in squidclamav_safebrowsing(). 

--- src/squidclamav.c.orig	Sat Oct 17 10:35:42 2015
+++ src/squidclamav.c	Mon Jan 11 17:46:03 2016
@@@@ -1854,7 +1854,7 @@@@ int squidclamav_safebrowsing(ci_request_t * req, char 
     debugs(1, "DEBUG Ok connected to clamd socket.\n");
 
     debugs(1, "DEBUG: Scanning url for Malware now\n");
-    uint32_t buf[BUFSIZ/sizeof(uint32_t)];
+    uint32_t buf[LBUFSIZ/sizeof(uint32_t)];
     strcpy(cbuff, "From test\n\n<a href=");
     strncat(cbuff, url, MAX_URL_SIZE);
     strcat(cbuff, ">squidclamav-safebrowsing-test</a>\n");
@


1.4
log
@committed upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-src_squidclamav_c,v 1.3 2016/01/11 17:53:05 sthen Exp $
@


1.3
log
@Fix what looks like a typo (BUFSIZ/LBUFSIZ) in squidclamav with safebrowsing
checks enabled. Triggers the "backwards memcpy" checks but it's really an
overrun.

Found with this, it's not perfect but useful nonetheless.

#include <syslog.h>
#define memcpy(dst0, src0, length0) do {                                \
        char *dst = (char *)dst0;                                       \
        const char *src = (char *)src0;                                 \
        size_t length = (size_t) length0;                               \
                                                                        \
        if ((dst < src && dst + length > src) ||                        \
            (src < dst && src + length > dst))                          \
                syslog(LOG_CRIT, "backwards memcpy %s:%u len=%llu",     \
                    __FILE__, __LINE__, (uint64_t) length);             \
                memmove (dst, src, length); } while (0)
@
text
@d1 1
a1 1
$OpenBSD$
d6 5
@


1.3.2.1
log
@MFC patch-src_squidclamav_c r1.3
@
text
@d1 1
a1 1
$OpenBSD: patch-src_squidclamav_c,v 1.3 2016/01/11 17:53:05 sthen Exp $
d7 3
a9 3
--- src/squidclamav.c.orig	Mon Jun  1 21:18:41 2015
+++ src/squidclamav.c	Mon Jan 11 17:54:01 2016
@@@@ -1850,7 +1850,7 @@@@ int squidclamav_safebrowsing(ci_request_t * req, char 
@


1.2
log
@update to squidclamav-6.14
@
text
@d1 10
a10 5
$OpenBSD: patch-src_squidclamav_c,v 1.1 2015/09/08 18:18:04 sthen Exp $
--- src/squidclamav.c.orig	Tue Sep  8 19:00:45 2015
+++ src/squidclamav.c	Tue Sep  8 19:02:56 2015
@@@@ -1562,7 +1562,7 @@@@ void generate_template_page(ci_request_t *req, av_req_
     free(malware);
d12 6
a17 6
     data->error_page = ci_txt_template_build_content(req, "squidclamav", "MALWARE_FOUND", GlobalTable);
-    data->error_page->hasalldata = 1;
+    data->error_page->flags |= CI_MEMBUF_HAS_EOF;
 
     snprintf(buf, LOW_BUFF, "Content-Language: %s",
              (char *)ci_membuf_attr_get(data->error_page, "lang"));
@


1.1
log
@patch squidclamav to work with c_icap-0.4.1
@
text
@d1 1
a1 1
$OpenBSD$
@

