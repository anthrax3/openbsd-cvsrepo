head	1.6;
access;
symbols
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2012.03.26.14.41.51;	author dcoppa;	state dead;
branches;
next	1.5;

1.5
date	2012.03.06.13.39.29;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2010.11.08.15.06.31;	author dcoppa;	state dead;
branches;
next	1.3;

1.3
date	2010.07.08.06.35.13;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2010.03.29.12.17.42;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.01.20.34.20;	author landry;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update gecko-mediaplayer to 1.0.6beta1
@
text
@$OpenBSD: patch-src_plugin_list_cpp,v 1.5 2012/03/06 13:39:29 dcoppa Exp $

Suppress list display (upstream svn revision r495)

--- src/plugin_list.cpp.orig	Tue Mar  6 14:31:27 2012
+++ src/plugin_list.cpp	Tue Mar  6 14:33:09 2012
@@@@ -355,7 +355,6 @@@@ GList *list_parse_qt(GList * list, ListItem * item)
         } else {
             // printf("Unable to open %s \n",item->local); 
         }
-        list_dump(list);
 
     } else {
         // if file is over 16K it is probably not a playlist
@@@@ -429,7 +428,6 @@@@ GList *list_parse_qt2(GList * list, ListItem * item)
         } else {
             // printf("Unable to open %s \n",item->local); 
         }
-        list_dump(list);
 
     } else {
         // if file is over 256K it is probably not a playlist
@@@@ -516,7 +514,6 @@@@ GList *list_parse_asx(GList * list, ListItem * item)
             parser_item = NULL;
             parser_list = NULL;
         }
-        list_dump(list);
     }
     printf("Exiting list_parse_asx\n");
     return list;
@@@@ -672,7 +669,6 @@@@ GList *list_parse_qml(GList * list, ListItem * item)
             parser_item = NULL;
             parser_list = NULL;
         }
-        list_dump(list);
     }
     printf("Exiting list_parse_qml\n");
     return list;
@@@@ -803,7 +799,6 @@@@ GList *list_parse_ram(GList * list, ListItem * item)
                 parser_item = NULL;
             }
         }
-        list_dump(list);
     }
     printf("Exiting list_parse_ram\n");
     return list;
@


1.5
log
@Suppress list display
(upstream svn revision r495)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4
log
@Update to gecko-mediaplayer 1.0.0 and drop GConf dependency.

OK landry@@
"go ahead" jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_plugin_list_cpp,v 1.3 2010/07/08 06:35:13 dcoppa Exp $
d3 1
a3 3
fixes from upstream svn:
give each item in the RAM playlist a unique id
mark asx files with ENTRY in them as non-playable
d5 5
a9 11
--- src/plugin_list.cpp.orig	Tue Feb 23 17:12:37 2010
+++ src/plugin_list.cpp	Tue Mar 23 17:14:09 2010
@@@@ -215,6 +215,7 @@@@ void list_dump(GList * list)
                 printf("id = %i\n", item->id);
                 printf("hrefid = %i\n", item->hrefid);
                 printf("play = %i\n", item->play);
+                printf("played = %i\n", item->played);
                 printf("path = %s\n", item->path);
                 printf("controlid = %i\n", item->controlid);
                 printf("playerready = %i\n", item->playerready);
@@@@ -603,6 +604,7 @@@@ asx_start_element(GMarkupParseContext * context,
d11 17
d29 15
a43 3
     if (g_ascii_strcasecmp(element_name, "ENTRY") == 0) {
+        parser_item->play = 0;
         entry_id = entry_id + 100;
d45 2
a46 19
 }
@@@@ -713,7 +715,7 @@@@ GList *list_parse_ram(GList * list, ListItem * item)
     if (item->localsize < (16 * 1024)) {
         if (g_file_get_contents(item->local, &data, &datalen, NULL)) {
             if (data != NULL) {
-                output = g_strsplit(data, "\n", 0);
+                output = g_strsplit_set(data, "\n\r", 0);
                 parser_list = list;
                 parser_item = item;
                 i = 0;
@@@@ -755,7 +757,7 @@@@ GList *list_parse_ram(GList * list, ListItem * item)
                                 newitem->src[3] = g_ascii_tolower(newitem->src[3]);
                             }
                             newitem->play = TRUE;
-                            newitem->id = entry_id;
+                            newitem->id = ++entry_id;
                             newitem->controlid = parser_item->controlid;
                             g_strlcpy(newitem->path, parser_item->path, 1024);
                             parser_list = g_list_append(parser_list, newitem);
@


1.3
log
@Apply some small bugfixes from upstream: see patches for descriptions.
@
text
@d1 1
a1 1
$OpenBSD: patch-src_plugin_list_cpp,v 1.2 2010/03/29 12:17:42 dcoppa Exp $
@


1.2
log
@update to 0.9.9.2

OK landry@@, ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
fix from upstream svn:
d5 1
d17 9
a25 1
@@@@ -713,7 +714,7 @@@@ GList *list_parse_ram(GList * list, ListItem * item)
d34 1
a34 1
@@@@ -755,7 +756,7 @@@@ GList *list_parse_ram(GList * list, ListItem * item)
@


1.1
log
@Forgot to cvs add those two patches, reminded by David Coppa, thx!
@
text
@d3 2
a4 1
fix incorrect usage of memmem() vs. memmem_compat()
d6 28
a33 20
--- src/plugin_list.cpp.orig	Mon Oct 12 06:35:56 2009
+++ src/plugin_list.cpp	Mon Oct 12 06:36:40 2009
@@@@ -356,7 +356,7 @@@@ GList *list_parse_qt2(GList * list, ListItem * item)
                 return list;
             } else {
                 while (p != NULL) {
-                    urlptr = (gchar *) memmem(p,datalen - (p - data), "url ", 4);
+                    urlptr = (gchar *) memmem_compat(p,datalen - (p - data), "url ", 4);
                     
 
                     if (urlptr == NULL) {
@@@@ -385,7 +385,7 @@@@ GList *list_parse_qt2(GList * list, ListItem * item)
                             item->id = -1;
                             list = g_list_append(list, newitem);
                         }
-                        p = (gchar *) memmem(urlptr,datalen - (urlptr - data),"mmdr",4);
+                        p = (gchar *) memmem_compat(urlptr,datalen - (urlptr - data),"mmdr",4);
                     }
 
                 }
@

