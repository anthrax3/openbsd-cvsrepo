head	1.14;
access;
symbols
	OPENBSD_5_4:1.13.0.2
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.12.0.2
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.10.0.2
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	ajacoutot_20090316:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.14
date	2013.11.05.12.59.29;	author dcoppa;	state dead;
branches;
next	1.13;

1.13
date	2013.05.24.08.32.27;	author dcoppa;	state Exp;
branches;
next	1.12;

1.12
date	2012.10.31.13.23.04;	author dcoppa;	state Exp;
branches;
next	1.11;

1.11
date	2012.09.24.06.51.59;	author jasper;	state Exp;
branches;
next	1.10;

1.10
date	2012.03.26.14.41.51;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2012.01.09.12.12.44;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2011.07.12.08.12.29;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.04.13.33.30;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2011.04.28.11.49.56;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2010.11.08.15.06.31;	author dcoppa;	state Exp;
branches;
next	1.4;

1.4
date	2010.09.22.15.25.26;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2010.03.29.12.17.42;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2009.11.01.18.25.21;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.16.13.00.19;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.03.16.13.00.19;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Switch to xulrunner24.

ok landry@@
@
text
@$OpenBSD: patch-configure,v 1.13 2013/05/24 08:32:27 dcoppa Exp $

Remove -ldl

Fix GECKO_CFLAGS and GECKO_LIBS

--- configure.orig	Fri Mar  1 23:01:31 2013
+++ configure	Thu May 23 15:53:28 2013
@@@@ -7420,8 +7420,8 @@@@ fi
 if test "${with_xulrunner_sdk+set}" = set; then :
   withval=$with_xulrunner_sdk;
 	XULRUNNER_SDK_PREFIX=$with_xulrunner_sdk
-	GECKO_CFLAGS="-I$XULRUNNER_SDK_PREFIX/include -I$XULRUNNER_SDK_PREFIX/include/plugin -I$XULRUNNER_SDK_PREFIX/include/nspr -I$XULRUNNER_SDK_PREFIX/include/xpcom -I$XULRUNNER_SDK_PREFIX/include/string -I$XULRUNNER_SDK_PREFIX/include/java"
-	GECKO_LIBS="-L$XULRUNNER_SDK_PREFIX/lib -lxpcomglue_s -lxul -lxpcom -lplds4 -lplc4 -lnspr4 -lpthread -ldl"
+	GECKO_CFLAGS="-I$XULRUNNER_SDK_PREFIX/include -DOPENBSD"
+	GECKO_LIBS="-L$XULRUNNER_SDK_PREFIX -lxpcomglue_s -lxul -lxpcom -lplds4 -lplc4 -lnspr4 -lpthread"
 
 fi
 
@


1.13
log
@Update to gecko-mediaplayer-1.0.8
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.12 2012/10/31 13:23:04 dcoppa Exp $
@


1.12
log
@Update to gecko-mediaplayer-1.0.7
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.11 2012/09/24 06:51:59 jasper Exp $
d7 3
a9 3
--- configure.orig	Mon Oct  8 15:16:57 2012
+++ configure	Mon Oct 15 15:17:26 2012
@@@@ -7385,8 +7385,8 @@@@ fi
@


1.11
log
@- remove -lpthread vs. -pthread patches/chunks.
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.10 2012/03/26 14:41:51 dcoppa Exp $
d7 3
a9 3
--- configure.orig	Thu Mar 22 04:30:54 2012
+++ configure	Mon Mar 26 16:13:49 2012
@@@@ -7350,8 +7350,8 @@@@ fi
@


1.10
log
@Update gecko-mediaplayer to 1.0.6beta1
@
text
@d1 1
a1 3
$OpenBSD: patch-configure,v 1.9 2012/01/09 12:12:44 dcoppa Exp $

Use '-pthread' instead of '-lpthread' for libpthread linkage
d16 1
a16 1
+	GECKO_LIBS="-L$XULRUNNER_SDK_PREFIX -lxpcomglue_s -lxul -lxpcom -lplds4 -lplc4 -lnspr4 -pthread"
@


1.9
log
@Update to gecko-mediaplayer-1.0.5
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.8 2011/07/12 08:12:29 dcoppa Exp $
d9 3
a11 3
--- configure.orig	Thu Dec 29 15:32:00 2011
+++ configure	Mon Jan  9 12:42:11 2012
@@@@ -7352,8 +7352,8 @@@@ fi
d19 3
a21 3
 	# Check whether --enable-new-libxul was given.
 if test "${enable_new_libxul+set}" = set; then :
   enableval=$enable_new_libxul; usenewlibxul=$enableval
@


1.8
log
@Fix trailers.apple.com. It works well now (yay!)

From upstream svn
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.7 2011/07/04 13:33:30 dcoppa Exp $
d9 3
a11 3
--- configure.orig	Thu Apr 21 16:59:11 2011
+++ configure	Tue Apr 26 16:26:20 2011
@@@@ -7364,8 +7364,8 @@@@ fi
@


1.7
log
@Update to gecko-mediaplayer-1.0.4
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.6 2011/04/28 11:49:56 dcoppa Exp $
d4 1
d6 1
@


1.6
log
@Update to gecko-mediaplayer-1.0.3.

dconf clue stick by ajacoutot@@

Tested by Antti Harri on YouTube using the flashvideoreplacer
extension for firefox (thanks!)

please go ahead fgsch@@
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.5 2010/11/08 15:06:31 dcoppa Exp $
d3 3
a5 3
use -pthread instead of -lpthread for pthreads linkage
remove -ldl
fix GECKO_CFLAGS and GECKO_LIBS
@


1.5
log
@Update to gecko-mediaplayer 1.0.0 and drop GConf dependency.

OK landry@@
"go ahead" jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.4 2010/09/22 15:25:26 dcoppa Exp $
d7 3
a9 3
--- configure.orig	Fri Nov  5 17:13:48 2010
+++ configure	Mon Nov  8 12:27:11 2010
@@@@ -7206,8 +7206,8 @@@@ fi
@


1.4
log
@Tighten xulrunner-devel pkgspec.
Fix confusion with xulrunner include paths.
Adjust WANTLIB.
Minor style cleanups.

OK landry@@
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.3 2010/03/29 12:17:42 dcoppa Exp $
d7 4
a10 4
--- configure.orig	Wed Sep 22 16:12:14 2010
+++ configure	Wed Sep 22 16:14:37 2010
@@@@ -8710,8 +8710,8 @@@@ fi
 if test "${with_xulrunner_sdk+set}" = set; then
d18 1
a18 1
 if test "${enable_new_libxul+set}" = set; then
@


1.3
log
@update to 0.9.9.2

OK landry@@, ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 1
d7 4
a10 3
--- configure.orig	Tue Mar 23 16:44:27 2010
+++ configure	Tue Mar 23 16:45:20 2010
@@@@ -8711,7 +8711,7 @@@@ if test "${with_xulrunner_sdk+set}" = set; then
d13 1
a13 1
 	GECKO_CFLAGS="-I$XULRUNNER_SDK_PREFIX/include -I$XULRUNNER_SDK_PREFIX/include/plugin -I$XULRUNNER_SDK_PREFIX/include/nspr -I$XULRUNNER_SDK_PREFIX/include/xpcom -I$XULRUNNER_SDK_PREFIX/include/string -I$XULRUNNER_SDK_PREFIX/include/java"
d15 2
a16 1
+	GECKO_LIBS="-L$XULRUNNER_SDK_PREFIX/lib -lxpcomglue_s -lxul -lxpcom -lplds4 -lplc4 -lnspr4 -pthread"
@


1.2
log
@Update to gecko-mediaplayer 0.9.8, from MAINTAINER David Coppa, thanks!
@
text
@d1 1
a1 1
$OpenBSD: patch-configure,v 1.1.1.1 2009/03/16 13:00:19 ajacoutot Exp $
d3 2
a4 1
Remove unneeded checks related to xulrunner
d6 6
a11 11
--- configure.orig	Thu Sep  3 13:28:25 2009
+++ configure	Mon Oct 12 06:40:06 2009
@@@@ -8699,308 +8699,6 @@@@ fi
 
 
 
-# Check whether --with-xulrunner-sdk was given.
-if test "${with_xulrunner_sdk+set}" = set; then
-  withval=$with_xulrunner_sdk;
-	XULRUNNER_SDK_PREFIX=$with_xulrunner_sdk
-	GECKO_CFLAGS="-I$XULRUNNER_SDK_PREFIX/include -I$XULRUNNER_SDK_PREFIX/include/plugin -I$XULRUNNER_SDK_PREFIX/include/nspr -I$XULRUNNER_SDK_PREFIX/include/xpcom -I$XULRUNNER_SDK_PREFIX/include/string -I$XULRUNNER_SDK_PREFIX/include/java"
d13 4
a16 299
-
-fi
-
-
-if test "$GECKO_CFLAGS" = ""; then
-
-pkg_failed=no
-{ $as_echo "$as_me:$LINENO: checking for GECKO" >&5
-$as_echo_n "checking for GECKO... " >&6; }
-
-if test -n "$GECKO_CFLAGS"; then
-    pkg_cv_GECKO_CFLAGS="$GECKO_CFLAGS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"mozilla-plugin mozilla-xpcom\"") >&5
-  ($PKG_CONFIG --exists --print-errors "mozilla-plugin mozilla-xpcom") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GECKO_CFLAGS=`$PKG_CONFIG --cflags "mozilla-plugin mozilla-xpcom" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-if test -n "$GECKO_LIBS"; then
-    pkg_cv_GECKO_LIBS="$GECKO_LIBS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"mozilla-plugin mozilla-xpcom\"") >&5
-  ($PKG_CONFIG --exists --print-errors "mozilla-plugin mozilla-xpcom") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GECKO_LIBS=`$PKG_CONFIG --libs "mozilla-plugin mozilla-xpcom" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-
-
-
-if test $pkg_failed = yes; then
-
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi
-        if test $_pkg_short_errors_supported = yes; then
-	        GECKO_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "mozilla-plugin mozilla-xpcom" 2>&1`
-        else
-	        GECKO_PKG_ERRORS=`$PKG_CONFIG --print-errors "mozilla-plugin mozilla-xpcom" 2>&1`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$GECKO_PKG_ERRORS" >&5
-
-	{ $as_echo "$as_me:$LINENO: result: no" >&5
-$as_echo "no" >&6; }
-                { $as_echo "$as_me:$LINENO: WARNING: mozilla-plugin not found, trying another" >&5
-$as_echo "$as_me: WARNING: mozilla-plugin not found, trying another" >&2;}
-elif test $pkg_failed = untried; then
-	{ $as_echo "$as_me:$LINENO: WARNING: mozilla-plugin not found, trying another" >&5
-$as_echo "$as_me: WARNING: mozilla-plugin not found, trying another" >&2;}
-else
-	GECKO_CFLAGS=$pkg_cv_GECKO_CFLAGS
-	GECKO_LIBS=$pkg_cv_GECKO_LIBS
-        { $as_echo "$as_me:$LINENO: result: yes" >&5
-$as_echo "yes" >&6; }
-
-
-fi
-fi
-
-if test "$GECKO_CFLAGS" = ""; then
-
-pkg_failed=no
-{ $as_echo "$as_me:$LINENO: checking for GECKO" >&5
-$as_echo_n "checking for GECKO... " >&6; }
-
-if test -n "$GECKO_CFLAGS"; then
-    pkg_cv_GECKO_CFLAGS="$GECKO_CFLAGS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"firefox-plugin firefox-xpcom\"") >&5
-  ($PKG_CONFIG --exists --print-errors "firefox-plugin firefox-xpcom") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GECKO_CFLAGS=`$PKG_CONFIG --cflags "firefox-plugin firefox-xpcom" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-if test -n "$GECKO_LIBS"; then
-    pkg_cv_GECKO_LIBS="$GECKO_LIBS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"firefox-plugin firefox-xpcom\"") >&5
-  ($PKG_CONFIG --exists --print-errors "firefox-plugin firefox-xpcom") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GECKO_LIBS=`$PKG_CONFIG --libs "firefox-plugin firefox-xpcom" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-
-
-
-if test $pkg_failed = yes; then
-
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi
-        if test $_pkg_short_errors_supported = yes; then
-	        GECKO_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "firefox-plugin firefox-xpcom" 2>&1`
-        else
-	        GECKO_PKG_ERRORS=`$PKG_CONFIG --print-errors "firefox-plugin firefox-xpcom" 2>&1`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$GECKO_PKG_ERRORS" >&5
-
-	{ $as_echo "$as_me:$LINENO: result: no" >&5
-$as_echo "no" >&6; }
-                { $as_echo "$as_me:$LINENO: WARNING: firefox-plugin not found, trying another" >&5
-$as_echo "$as_me: WARNING: firefox-plugin not found, trying another" >&2;}
-elif test $pkg_failed = untried; then
-	{ $as_echo "$as_me:$LINENO: WARNING: firefox-plugin not found, trying another" >&5
-$as_echo "$as_me: WARNING: firefox-plugin not found, trying another" >&2;}
-else
-	GECKO_CFLAGS=$pkg_cv_GECKO_CFLAGS
-	GECKO_LIBS=$pkg_cv_GECKO_LIBS
-        { $as_echo "$as_me:$LINENO: result: yes" >&5
-$as_echo "yes" >&6; }
-
-
-fi
-fi
-
-if test "$GECKO_CFLAGS" = ""; then
-
-pkg_failed=no
-{ $as_echo "$as_me:$LINENO: checking for GECKO" >&5
-$as_echo_n "checking for GECKO... " >&6; }
-
-if test -n "$GECKO_CFLAGS"; then
-    pkg_cv_GECKO_CFLAGS="$GECKO_CFLAGS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"seamonkey-plugin seamonkey-xpcom\"") >&5
-  ($PKG_CONFIG --exists --print-errors "seamonkey-plugin seamonkey-xpcom") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GECKO_CFLAGS=`$PKG_CONFIG --cflags "seamonkey-plugin seamonkey-xpcom" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-if test -n "$GECKO_LIBS"; then
-    pkg_cv_GECKO_LIBS="$GECKO_LIBS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"seamonkey-plugin seamonkey-xpcom\"") >&5
-  ($PKG_CONFIG --exists --print-errors "seamonkey-plugin seamonkey-xpcom") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GECKO_LIBS=`$PKG_CONFIG --libs "seamonkey-plugin seamonkey-xpcom" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-
-
-
-if test $pkg_failed = yes; then
-
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi
-        if test $_pkg_short_errors_supported = yes; then
-	        GECKO_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "seamonkey-plugin seamonkey-xpcom" 2>&1`
-        else
-	        GECKO_PKG_ERRORS=`$PKG_CONFIG --print-errors "seamonkey-plugin seamonkey-xpcom" 2>&1`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$GECKO_PKG_ERRORS" >&5
-
-	{ $as_echo "$as_me:$LINENO: result: no" >&5
-$as_echo "no" >&6; }
-                { $as_echo "$as_me:$LINENO: WARNING: seamokey-plugin not found, trying another" >&5
-$as_echo "$as_me: WARNING: seamokey-plugin not found, trying another" >&2;}
-elif test $pkg_failed = untried; then
-	{ $as_echo "$as_me:$LINENO: WARNING: seamokey-plugin not found, trying another" >&5
-$as_echo "$as_me: WARNING: seamokey-plugin not found, trying another" >&2;}
-else
-	GECKO_CFLAGS=$pkg_cv_GECKO_CFLAGS
-	GECKO_LIBS=$pkg_cv_GECKO_LIBS
-        { $as_echo "$as_me:$LINENO: result: yes" >&5
-$as_echo "yes" >&6; }
-
-
-fi
-fi
-
-if test "$GECKO_CFLAGS" = ""; then
-
-pkg_failed=no
-{ $as_echo "$as_me:$LINENO: checking for GECKO" >&5
-$as_echo_n "checking for GECKO... " >&6; }
-
-if test -n "$GECKO_CFLAGS"; then
-    pkg_cv_GECKO_CFLAGS="$GECKO_CFLAGS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"xulrunner-plugin xulrunner-xpcom\"") >&5
-  ($PKG_CONFIG --exists --print-errors "xulrunner-plugin xulrunner-xpcom") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GECKO_CFLAGS=`$PKG_CONFIG --cflags "xulrunner-plugin xulrunner-xpcom" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-if test -n "$GECKO_LIBS"; then
-    pkg_cv_GECKO_LIBS="$GECKO_LIBS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"xulrunner-plugin xulrunner-xpcom\"") >&5
-  ($PKG_CONFIG --exists --print-errors "xulrunner-plugin xulrunner-xpcom") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GECKO_LIBS=`$PKG_CONFIG --libs "xulrunner-plugin xulrunner-xpcom" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-
-
-
-if test $pkg_failed = yes; then
-
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi
-        if test $_pkg_short_errors_supported = yes; then
-	        GECKO_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "xulrunner-plugin xulrunner-xpcom" 2>&1`
-        else
-	        GECKO_PKG_ERRORS=`$PKG_CONFIG --print-errors "xulrunner-plugin xulrunner-xpcom" 2>&1`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$GECKO_PKG_ERRORS" >&5
-
-	{ $as_echo "$as_me:$LINENO: result: no" >&5
-$as_echo "no" >&6; }
-                { $as_echo "$as_me:$LINENO: WARNING: xulrunner-plugin not found, trying another" >&5
-$as_echo "$as_me: WARNING: xulrunner-plugin not found, trying another" >&2;}
-elif test $pkg_failed = untried; then
-	{ $as_echo "$as_me:$LINENO: WARNING: xulrunner-plugin not found, trying another" >&5
-$as_echo "$as_me: WARNING: xulrunner-plugin not found, trying another" >&2;}
-else
-	GECKO_CFLAGS=$pkg_cv_GECKO_CFLAGS
-	GECKO_LIBS=$pkg_cv_GECKO_LIBS
-        { $as_echo "$as_me:$LINENO: result: yes" >&5
-$as_echo "yes" >&6; }
-
-
-fi
-fi
-
 if test "$GECKO_CFLAGS" = ""; then
 
 pkg_failed=no
@


1.1
log
@Initial revision
@
text
@d1 30
a30 7
$OpenBSD$
--- configure.orig	Wed Feb 11 15:49:36 2009
+++ configure	Mon Mar 16 12:44:52 2009
@@@@ -8375,225 +8375,6 @@@@ if test -n "$GECKO_CFLAGS"; then
     pkg_cv_GECKO_CFLAGS="$GECKO_CFLAGS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
d250 66
a315 3
     { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"xulrunner-plugin xulrunner-xpcom\"") >&5
   ($PKG_CONFIG --exists --print-errors "xulrunner-plugin xulrunner-xpcom") 2>&5
   ac_status=$?
@


1.1.1.1
log
@Import gecko-mediaplayer-0.9.5

Gecko Media Player is a browser plugin that uses GNOME MPlayer to play
media in a browser.  It should work with all browsers on Unix-like
systems that use the NS4 API (Seamonkey, Firefox, Epiphany, etc).

from David Coppa (MAINTAINER) with some tweaks
@
text
@@
