head	1.14;
access;
symbols
	OPENBSD_5_5:1.13.0.2
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.14
date	2014.04.29.13.39.54;	author dcoppa;	state dead;
branches;
next	1.13;

1.13
date	2014.01.13.11.36.29;	author dcoppa;	state Exp;
branches;
next	1.12;

1.12
date	2013.05.24.08.32.27;	author dcoppa;	state dead;
branches;
next	1.11;

1.11
date	2012.10.31.13.23.04;	author dcoppa;	state Exp;
branches;
next	1.10;

1.10
date	2012.03.26.14.41.51;	author dcoppa;	state dead;
branches;
next	1.9;

1.9
date	2012.01.09.12.12.44;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2011.09.21.14.19.16;	author dcoppa;	state Exp;
branches;
next	1.7;

1.7
date	2011.09.12.08.27.38;	author dcoppa;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.12.08.12.29;	author dcoppa;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.28.11.49.56;	author dcoppa;	state dead;
branches;
next	1.4;

1.4
date	2011.01.18.11.04.23;	author dcoppa;	state Exp;
branches;
next	1.3;

1.3
date	2010.11.08.15.06.31;	author dcoppa;	state dead;
branches;
next	1.2;

1.2
date	2010.03.29.12.17.42;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.01.20.34.20;	author landry;	state Exp;
branches;
next	;


desc
@@


1.14
log
@
Update to final 1.0.9 release.
@
text
@$OpenBSD: patch-src_plugin_cpp,v 1.13 2014/01/13 11:36:29 dcoppa Exp $

Drop useless code
(upstream svn revision r529)

--- src/plugin.cpp.orig	Mon Jan 13 11:51:13 2014
+++ src/plugin.cpp	Mon Jan 13 11:51:39 2014
@@@@ -56,14 +56,6 @@@@
 
 static NPObject *sWindowObj;
 
-//#include "nsIServiceManager.h"
-//#include "nsISupportsUtils.h"   // some usefule macros are defined here
-
-#define MIME_TYPES_HANDLED  "application/scriptable-plugin"
-#define PLUGIN_NAME         "Scriptable Example Plugin for Mozilla"
-#define MIME_TYPES_DESCRIPTION  MIME_TYPES_HANDLED":scr:"PLUGIN_NAME
-#define PLUGIN_DESCRIPTION  PLUGIN_NAME " (Plug-ins SDK sample)"
-
 int32 STREAMBUFSIZE = 0X0FFFFFFF;
 
 // methods
@


1.13
log
@Drop useless code
(upstream svn revision r529)
@
text
@d1 1
a1 1
$OpenBSD$
@


1.12
log
@Update to gecko-mediaplayer-1.0.8
@
text
@d1 1
a1 1
$OpenBSD: patch-src_plugin_cpp,v 1.11 2012/10/31 13:23:04 dcoppa Exp $
d3 2
a4 1
Too old XULRunner SDK
d6 17
a22 15
--- src/plugin.cpp.orig	Mon Oct 15 15:17:52 2012
+++ src/plugin.cpp	Mon Oct 15 15:18:20 2012
@@@@ -250,12 +250,6 @@@@ const gchar *NPErrorToString(NPError error)
     case NPERR_STREAM_NOT_SEEKABLE:
         return "Stream Not Seekable";
         break;
-    case NPERR_TIME_RANGE_NOT_SUPPORTED:
-        return "Time Range Not Supported";
-        break;
-    case NPERR_MALFORMED_SITE:
-        return "Malformed Site";
-        break;
     default:
         return "Unknown NPError Code";
         break;
@


1.11
log
@Update to gecko-mediaplayer-1.0.7
@
text
@d1 1
a1 1
$OpenBSD$
@


1.10
log
@Update gecko-mediaplayer to 1.0.6beta1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_plugin_cpp,v 1.9 2012/01/09 12:12:44 dcoppa Exp $
d3 1
a3 1
Remove useless printf's (upstream svn revision r491)
d5 15
a19 25
--- src/plugin.cpp.orig	Mon Jan  9 12:51:12 2012
+++ src/plugin.cpp	Mon Jan  9 12:52:15 2012
@@@@ -970,13 +970,10 @@@@ int32 CPlugin::Write(NPStream * stream, int32 offset, 
         }
         if (!item->opened) {
             if ((item->localsize >= (cache_size * 1024)) && (percent >= 0.2)) {
-                printf("Setting to play because %i > %i\n", item->localsize, cache_size * 1024);
                 ok_to_play = TRUE;
             }
             if (ok_to_play == FALSE && (item->localsize > (cache_size * 2 * 1024))
                 && (cache_size >= 512)) {
-                printf("Setting to play because %i > %i (double cache)\n", item->localsize,
-                       cache_size * 2 * 1024);
                 ok_to_play = TRUE;
             }
             if (ok_to_play == FALSE) {
@@@@ -987,8 +984,6 @@@@ int32 CPlugin::Write(NPStream * stream, int32 offset, 
                 }
                 if (item->bitrate > 0) {
                     if (item->localsize / item->bitrate >= 10 && (percent >= 0.2)) {
-                        printf("Setting to play becuase %i >= 10\n",
-                               item->localsize / item->bitrate);
                         ok_to_play = TRUE;
                         if (post_dom_events && this->id != NULL) {
                             postDOMEvent(mInstance, this->id, "qt_canplay");
@


1.9
log
@Update to gecko-mediaplayer-1.0.5
@
text
@d1 1
a1 1
$OpenBSD: patch-src_plugin_cpp,v 1.8 2011/09/21 14:19:16 dcoppa Exp $
@


1.8
log
@Bugfix: when the uri is a "file://" uri, just play it directly
(upstream svn revision r476)
@
text
@d1 1
a1 1
$OpenBSD: patch-src_plugin_cpp,v 1.7 2011/09/12 08:27:38 dcoppa Exp $
d3 1
a3 2
When the uri is a "file://" uri, just play it directly
(upstream svn revision r476)
d5 15
a19 39
Fix apple.com/trailers (upstream svn revisions r468 and r470)

Fix return value for the CURLGetURLNotify function (upstream svn r473)

--- src/plugin.cpp.orig	Wed Sep 21 15:46:40 2011
+++ src/plugin.cpp	Wed Sep 21 15:46:55 2011
@@@@ -887,8 +887,11 @@@@ int32 CPlugin::Write(NPStream * stream, int32 offset, 
         return -1;
     }
 
-    if (strstr((char *) buffer, "ICY 200 OK") != NULL || strstr((char *) buffer, "Content-length:") != NULL     // If item is a block of jpeg images, just stream it
-        || strstr((char *) buffer, "<HTML>") != NULL || item->streaming == TRUE) {
+    if (strstr((char *) buffer, "ICY 200 OK") != NULL
+        || strstr((char *) buffer, "Content-length:") != NULL
+        || strstr((char *) buffer, "<HTML>") != NULL || item->streaming == TRUE
+        || strstr(item->src, "file://") != NULL) {
+        // If item is a block of jpeg images, just stream it
         //   || stream->lastmodified == 0) {    this is not valid for many sites
 
         // printf("BUFFER='%s'\n", buffer);
@@@@ -1320,7 +1323,7 @@@@ int progress_callback(void *clientp, double dltotal, d
     ListItem *item = (ListItem *) clientp;
     gdouble percent, rate;
     gchar *text;
-    gboolean ok_to_play;
+    gboolean ok_to_play = FALSE;
     gint id;
     gboolean ready;
     gboolean newwindow;
@@@@ -1364,8 +1367,6 @@@@ int progress_callback(void *clientp, double dltotal, d
                                         rate);
                 }
                 send_signal_with_string(plugin, item, "SetProgressText", text);
-                if (!item->opened)
-                    send_signal_with_string(plugin, item, "SetURL", item->src);
                 if (plugin->post_dom_events && plugin->id != NULL) {
                     postDOMEvent(plugin->mInstance, plugin->id, "qt_progress");
                     postDOMEvent(plugin->mInstance, plugin->id, "qt_durationchange");
@@@@ -1391,7 +1392,6 @@@@ int progress_callback(void *clientp, double dltotal, d
d21 1
a21 4
                 if (item->bitrate == 0 && item->bitrate_requests < 5
                     && ((gint) (percent * 100) > item->bitrate_requests)) {
-                    item->bitrate = request_bitrate(plugin, item, item->local);
                     item->bitrate_requests++;
d24 6
a29 49
@@@@ -1418,6 +1418,7 @@@@ int progress_callback(void *clientp, double dltotal, d
             if (!item->streaming) {
                 printf("in progress_callback\n");
                 plugin->playlist = list_parse_qt(plugin->playlist, item);
+                plugin->playlist = list_parse_qt2(plugin->playlist, item);
                 plugin->playlist = list_parse_asx(plugin->playlist, item);
                 plugin->playlist = list_parse_qml(plugin->playlist, item);
                 plugin->playlist = list_parse_ram(plugin->playlist, item);
@@@@ -1493,13 +1494,14 @@@@ gpointer CURLGetURLNotify(gpointer data)
 
             }
             fclose(local);
-            printf("fetched %s to %s\n", item->src, item->local);
+            printf("fetched %s to %s opened = %i\n", item->src, item->local, item->opened);
+            send_signal_with_double(plugin, item, "SetCachePercent", 1.0);
             send_signal_with_double(plugin, item, "SetCachePercent", 0.0);
             item->retrieved = TRUE;
         }
 
 
-        if ((!item->opened)) {
+        if (!item->opened) {
             id = item->controlid;
             path = g_strdup(item->path);
             ready = item->playerready;
@@@@ -1509,13 +1511,14 @@@@ gpointer CURLGetURLNotify(gpointer data)
             if (!item->streaming) {
                 printf("in CURLGetURLNotify\n");
                 plugin->playlist = list_parse_qt(plugin->playlist, item);
+                plugin->playlist = list_parse_qt2(plugin->playlist, item);
                 plugin->playlist = list_parse_asx(plugin->playlist, item);
                 plugin->playlist = list_parse_qml(plugin->playlist, item);
                 plugin->playlist = list_parse_ram(plugin->playlist, item);
             }
             // printf("item->play = %i\n", item->play);
             // printf("item->src = %i\n", item->src);
-            // printf("calling open_location from Write\n");
+            // printf("calling open_location from CURLGetURLNotify\n");
             if (item->play) {
                 send_signal_with_integer(plugin, item, "SetGUIState", PLAYING);
                 open_location(plugin, item, TRUE);
@@@@ -1549,6 +1552,7 @@@@ gpointer CURLGetURLNotify(gpointer data)
 
         }
     }
+    return NULL;
 }
 
 
@


1.7
log
@Fix return value for the CURLGetURLNotify function (upstream svn r473)
@
text
@d1 4
a4 1
$OpenBSD: patch-src_plugin_cpp,v 1.6 2011/07/12 08:12:29 dcoppa Exp $
d7 1
d10 17
a26 3
--- src/plugin.cpp.orig	Mon Jun 20 17:00:33 2011
+++ src/plugin.cpp	Mon Sep 12 10:18:11 2011
@@@@ -1320,7 +1320,7 @@@@ int progress_callback(void *clientp, double dltotal, d
d35 1
a35 1
@@@@ -1364,8 +1364,6 @@@@ int progress_callback(void *clientp, double dltotal, d
d44 1
a44 1
@@@@ -1391,7 +1389,6 @@@@ int progress_callback(void *clientp, double dltotal, d
d52 1
a52 1
@@@@ -1418,6 +1415,7 @@@@ int progress_callback(void *clientp, double dltotal, d
d60 1
a60 1
@@@@ -1493,13 +1491,14 @@@@ gpointer CURLGetURLNotify(gpointer data)
d77 1
a77 1
@@@@ -1509,13 +1508,14 @@@@ gpointer CURLGetURLNotify(gpointer data)
d93 1
a93 1
@@@@ -1549,6 +1549,7 @@@@ gpointer CURLGetURLNotify(gpointer data)
@


1.6
log
@Fix trailers.apple.com. It works well now (yay!)

From upstream svn
@
text
@d1 1
a1 1
$OpenBSD$
d4 1
d7 1
a7 1
+++ src/plugin.cpp	Tue Jul 12 09:31:06 2011
d75 8
@


1.5
log
@Update to gecko-mediaplayer-1.0.3.

dconf clue stick by ajacoutot@@

Tested by Antti Harri on YouTube using the flashvideoreplacer
extension for firefox (thanks!)

please go ahead fgsch@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_plugin_cpp,v 1.4 2011/01/18 11:04:23 dcoppa Exp $
d3 1
a3 2
fix from upstream: bump QuickTime emulation to 7.6.9 (fix apple.com
movie trailers)
d5 69
a73 11
--- src/plugin.cpp.orig	Tue Jan 18 10:55:14 2011
+++ src/plugin.cpp	Tue Jan 18 10:56:13 2011
@@@@ -243,7 +243,7 @@@@ void clearPreference(CPlugin * instance, const gchar *
             if (instance->user_agent == NULL || strlen(instance->user_agent) == 0) {
                 prefBranch->ClearUserPref(name);
             } else {
-                if (g_strrstr(instance->user_agent, "QuickTime/7.6.4")) {
+                if (g_strrstr(instance->user_agent, "QuickTime/7.6.9")) {
                     prefBranch->ClearUserPref(name);
                 } else {
                     prefBranch->ClearUserPref(name);
@


1.4
log
@From upstream svn:

bump QuickTime emulation to 7.6.9 (fix apple.com movie trailers)
set width and height from the style attribute if present
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@Update to gecko-mediaplayer 1.0.0 and drop GConf dependency.

OK landry@@
"go ahead" jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-src_plugin_cpp,v 1.2 2010/03/29 12:17:42 dcoppa Exp $
d3 2
a4 2
fix from upstream svn:
if url has "stream" in it, mark the url as streaming
d6 11
a16 23
--- src/plugin.cpp.orig	Wed Feb 24 17:04:17 2010
+++ src/plugin.cpp	Wed Mar 24 12:09:35 2010
@@@@ -37,7 +37,6 @@@@
 
 
 #include "plugin.h"
-//#include "npupp.h"
 #include "plugin_list.h"
 #include "plugin_setup.h"
 #include "plugin_types.h"
@@@@ -921,8 +920,10 @@@@ int32 CPlugin::Write(NPStream * stream, int32 offset, 
         return -1;
     }
 
-    if (strstr((char *) buffer, "ICY 200 OK") != NULL || strstr((char *) buffer, "Content-length:") != NULL     // If item is a block of jpeg images, just stream it
-        || strstr((char *) buffer, "<HTML>") != NULL || item->streaming == TRUE) {
+    if (strstr((char *) buffer, "ICY 200 OK") != NULL
+        || strstr((char *) buffer, "Content-length:") != NULL     // If item is a block of jpeg images, just stream it
+        || strstr((char *) buffer, "<HTML>") != NULL
+        || item->streaming == TRUE) {
         //   || stream->lastmodified == 0) {    this is not valid for many sites
 
         // printf("BUFFER='%s'\n", buffer);
@


1.2
log
@update to 0.9.9.2

OK landry@@, ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Forgot to cvs add those two patches, reminded by David Coppa, thx!
@
text
@d3 2
a4 1
fix for includes from upstream svn
d6 8
a13 3
--- src/plugin.cpp.orig	Mon Oct 12 06:28:37 2009
+++ src/plugin.cpp	Mon Oct 12 06:28:54 2009
@@@@ -42,9 +42,9 @@@@
d16 11
a26 7
 #include "plugin_dbus.h"
-#include "nsIPrefBranch.h"
-#include "nsIPrefService.h"
-#include "nsIServiceManager.h"
+#include <nsIPrefBranch.h>
+#include <nsIPrefService.h>
+#include <nsIServiceManager.h>
d28 1
a28 2
 nsIPrefBranch *prefBranch = NULL;
 nsIPrefService *prefService = NULL;
@

