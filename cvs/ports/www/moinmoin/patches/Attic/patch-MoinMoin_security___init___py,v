head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.2
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_5:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2012.10.24.22.09.30;	author fgsch;	state dead;
branches;
next	1.2;

1.2
date	2012.10.22.17.52.39;	author jasper;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2009.08.14.03.29.19;	author william;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2009.08.14.03.29.19;	author william;	state Exp;
branches;
next	;

1.1.4.1
date	2009.12.05.23.41.27;	author william;	state Exp;
branches;
next	;

1.2.2.1
date	2012.10.22.17.52.48;	author jasper;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2013.01.10.05.28.33;	author rpointel;	state dead;
branches;
next	;


desc
@@


1.3
log
@Update to moinmoin 1.9.5.
jasper@@ ok.
@
text
@$OpenBSD: patch-MoinMoin_security___init___py,v 1.2 2012/10/22 17:52:39 jasper Exp $

CVE-2012-4404, moinmoin incorrect ACL evaluation for virtual groups
http://hg.moinmo.in/moin/1.9/rev/7b9f39289e16

--- MoinMoin/security/__init__.py.orig	Tue Feb  7 22:36:48 2012
+++ MoinMoin/security/__init__.py	Mon Oct 22 19:49:17 2012
@@@@ -320,11 +320,12 @@@@ class AccessControlList:
                 handler = getattr(self, "_special_"+entry, None)
                 allowed = handler(request, name, dowhat, rightsdict)
             elif entry in groups:
-                if name in groups[entry]:
+                this_group = groups[entry]
+                if name in this_group:
                     allowed = rightsdict.get(dowhat)
                 else:
                     for special in self.special_users:
-                        if special in entry:
+                        if special in this_group:
                             handler = getattr(self, "_special_" + special, None)
                             allowed = handler(request, name, dowhat, rightsdict)
                             break # order of self.special_users is important
@


1.2
log
@Security fix for
CVE-2012-4404, moinmoin incorrect ACL evaluation for virtual groups

patch from upstream mercurial
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2.2.1
log
@Security fix for
CVE-2012-4404, moinmoin incorrect ACL evaluation for virtual groups

patch from upstream mercurial
@
text
@@


1.2.2.2
log
@Update MoinMoin to 1.9.6 for -stable to fix few security issues.
Details: http://moinmo.in/SecurityFixes
ok sthen@@.
@
text
@d1 1
a1 1
$OpenBSD: patch-MoinMoin_security___init___py,v 1.2.2.1 2012/10/22 17:52:48 jasper Exp $
@


1.1
log
@file patch-MoinMoin_security___init___py was initially added on branch OPENBSD_4_5.
@
text
@d1 22
@


1.1.4.1
log
@SECURITY FIX

hierarchical acl processing

From upstream git

(This was previously committed to 4.5-stable and that was ok robert@@)
@
text
@a0 17
Security fix for hierarchical acl processing


$OpenBSD$
--- MoinMoin/security/__init__.py.orig	Sun Aug 31 15:00:52 2008
+++ MoinMoin/security/__init__.py	Tue Aug 11 22:44:50 2009
@@@@ -69,6 +69,10 @@@@ def _check(request, pagename, username, right):
                 allowed = acl.may(request, username, right)
                 if allowed is not None:
                     return allowed
+                # If the item has an acl (even one that doesn't match) we *do not*
+                # check the parents. We only check the parents if there's no acl on
+                # the item at all.
+                break
         if not some_acl:
             allowed = cache.acl_rights_default.may(request, username, right)
             if allowed is not None:
@


1.1.2.1
log
@SECURITY FIX

hierarchical acl processing

From upstream git

ok robert@@
@
text
@a0 17
Security fix for hierarchical acl processing


$OpenBSD$
--- MoinMoin/security/__init__.py.orig	Sun Aug 31 15:00:52 2008
+++ MoinMoin/security/__init__.py	Tue Aug 11 22:44:50 2009
@@@@ -69,6 +69,10 @@@@ def _check(request, pagename, username, right):
                 allowed = acl.may(request, username, right)
                 if allowed is not None:
                     return allowed
+                # If the item has an acl (even one that doesn't match) we *do not*
+                # check the parents. We only check the parents if there's no acl on
+                # the item at all.
+                break
         if not some_acl:
             allowed = cache.acl_rights_default.may(request, username, right)
             if allowed is not None:
@

