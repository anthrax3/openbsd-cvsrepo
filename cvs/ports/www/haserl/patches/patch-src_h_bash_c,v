head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.20
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.18
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.12
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.14
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.10
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	rpe_20121026:1.1.1.1
	rpe:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2012.10.26.16.32.10;	author rpe;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.10.26.16.32.10;	author rpe;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$

If somebody wants to use shell scripts in a chrooted /var/www, use a shell
builtin instead, to avoid forcing them to copy in ld.so, libc and printf.

--- src/h_bash.c.orig	Sat Dec 31 22:11:19 2011
+++ src/h_bash.c	Sat Dec 31 22:13:56 2011
@@@@ -138,7 +138,7 @@@@ bash_echo (buffer_t * buf, char *str, size_t len)
  * we will take the (ancient) POSIX1 standard of 4K, subtract 1K from it and use that
  * as the maxmimum.    The Linux limit appears to be 128K, so 3K will fit. */
 
-  static char echo_start[] = "printf '%s' '";
+  static char echo_start[] = "echo -n '";
   static char echo_quote[] = "'\\''";
   static char echo_end[] = "'\n";
   const size_t maxlen = 3096;
@


1.1.1.1
log
@add from openbsd-wip git repo

ok sthen@@ (Maintainer)
@
text
@@
