head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.18
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.12
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.14
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.10
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	rpe_20121026:1.1.1.1
	rpe:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2012.10.26.16.32.10;	author rpe;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.10.26.16.32.10;	author rpe;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@Haserl is a small program that uses shell or Lua script to create
cgi web scripts. It is intended for environments where PHP or Ruby
are too big. A typical use is to run cgi scripts in an embedded
environment using a small web server.

- Parses like other scripting languages: Anything that is not
enclosed in <% ... %> tags is sent verbatim to the client.

- Automatic FORM parsing: Form elements sent from the client are
automatically parsed and placed into environment variables. The
script can then reference the variables without any extra work.

- multipart/form-data decoding: Mime data sent via the
enctype="multipart/form-data" method is transparently decoded.
This method is used when uploading files from the client.
@


1.1.1.1
log
@add from openbsd-wip git repo

ok sthen@@ (Maintainer)
@
text
@@
