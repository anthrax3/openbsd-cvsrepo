head	1.15;
access;
symbols
	OPENBSD_6_1:1.11.0.2
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.6.0.8
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.4
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	sthen_20131220:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.15
date	2017.07.27.10.05.20;	author sthen;	state Exp;
branches;
next	1.14;
commitid	GaeX7RvWvJNgCIJE;

1.14
date	2017.07.14.22.15.31;	author sthen;	state Exp;
branches;
next	1.13;
commitid	dVF4PIluAouTmAYx;

1.13
date	2017.07.05.11.54.22;	author sthen;	state Exp;
branches;
next	1.12;
commitid	S8t3RgAhZPi5nc1y;

1.12
date	2017.04.10.11.46.35;	author sthen;	state Exp;
branches;
next	1.11;
commitid	HY6VNZxjJWzKQFDV;

1.11
date	2017.03.02.17.30.15;	author espie;	state Exp;
branches;
next	1.10;
commitid	GD33jwr9g6sp0jy8;

1.10
date	2016.12.10.14.12.21;	author sthen;	state Exp;
branches;
next	1.9;
commitid	8PtD0TKpMwShDk6g;

1.9
date	2016.09.10.13.03.43;	author ajacoutot;	state Exp;
branches;
next	1.8;
commitid	4KcvAK91uGdTLejD;

1.8
date	2016.08.19.19.36.01;	author sthen;	state Exp;
branches;
next	1.7;
commitid	yjZ1Aqm02qWxhoYp;

1.7
date	2016.08.19.09.49.24;	author sthen;	state Exp;
branches;
next	1.6;
commitid	NyrAmWbNMqhDdjVM;

1.6
date	2014.11.03.14.42.41;	author landry;	state Exp;
branches;
next	1.5;
commitid	US6NKmbTDL1g6ltb;

1.5
date	2014.03.18.14.19.54;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2014.01.28.11.37.52;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2014.01.15.08.41.37;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2014.01.11.11.47.20;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2013.12.20.00.54.05;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.12.20.00.54.05;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.15
log
@add COMPILER_LIBCXX to WANTLIB and bump
@
text
@# $OpenBSD: Makefile,v 1.14 2017/07/14 22:15:31 sthen Exp $

USE_WXNEEDED =		Yes

ONLY_FOR_ARCHS =	${CXX11_ARCHS}
# nojunk: qmake include parser is bogus, c.f. x11/qt4
DPB_PROPERTIES =	nojunk parallel

COMMENT =		headless WebKit scriptable with a JavaScript API

MASTER_SITES=		${_MASTER_SITE_FREEBSD}
DISTNAME =		phantomjs-2.1.1
REVISION =		1
DISTFILES =		ariya-${DISTNAME}_GH0.tar.gz \
			Vitallium-phantomjs-3rdparty-win-19051aa_GH0.tar.gz \
			Vitallium-qtbase-b5cc008_GH0.tar.gz \
			Vitallium-qtwebkit-e7b7433_GH0.tar.gz

CATEGORIES =		www
HOMEPAGE =		http://phantomjs.org/
MAINTAINER =		Francisco de Borja Lopez Rio <borja@@codigo23.net>

# BSD, but statically linked to patched LGPL'ed qt5 and webkit
PERMIT_PACKAGE_CDROM =	Yes

COMPILER =		gcc
MODULES =		devel/gettext lang/python lang/ruby

WANTLIB +=		${COMPILER_LIBCXX} X11 Xau Xdmcp c crypto \
			execinfo expat fontconfig glib-2.0 freetype \
			graphite2 harfbuzz iconv icudata icui18n icuuc \
			intl lzma m pcre proxy pthread pthread-stubs \
			sqlite3 ssl webp xml2 xcb xslt z

MODPY_RUNDEP =		No
MODRUBY_RUNDEP =	No

# MODGCC4_CPPLIBDEP will be empty unless gcc4.port.mk is pulled in (i.e.
# empty on a base=clang arch)
LIB_DEPENDS =		${MODGCC4_CPPLIBDEP} \
			databases/sqlite3 \
			devel/glib2 \
			devel/harfbuzz \
			devel/libexecinfo \
			devel/pcre \
			graphics/graphite2 \
			graphics/libwebp \
			net/libproxy \
			textproc/icu4c \
			textproc/libxml \
			textproc/libxslt

BUILD_DEPENDS =		devel/bison \
			devel/gperf \
			devel/libsoup \
			multimedia/gstreamer1/core \
			multimedia/gstreamer1/plugins-base \
			x11/xkbcommon

QT5_CONFIGURE_ARGS =	-c++11 \
			-no-journald \
			-rpath \
			-system-harfbuzz \
			-system-sqlite \
			-system-xcb \
			-verbose \
			-I${X11BASE}/include \
			-R${X11BASE}/lib \
			-L${X11BASE}/lib

.if ${MACHINE_ARCH} == "amd64" || ${MACHINE_ARCH} == "i386"
# AVX:    Sandy Bridge/Haswell, but not all models. AMD Bulldozer/Jaguar.
# SSE4.2: Nehalem, Silvermont Atom, AMD Bulldozer/Jaguar.
# SSE4.1: Core 2 (Penryn), Nehalem, Silvermont Atom, AMD Bulldozer/Jaguar.
# SSSE3:  Core 2 Duo, Atom, AMD Bulldozer/Bobcat.
# SSE3:   missing on very early 64-bit AMD.
QT5_CONFIGURE_ARGS +=	-no-sse4.1 -no-sse4.2 -no-avx -no-avx2
QT5_CONFIGURE_ARGS +=	-no-ssse3 -no-sse3
.endif

.if ${MACHINE_ARCH} == "i386"
QT5_CONFIGURE_ARGS +=	-no-sse2
.endif

.include <bsd.port.arch.mk>

post-extract:
	rmdir ${WRKSRC}/src/qt/{3rdparty,qtbase,qtwebkit}
	mv ${WRKDIR}/phantomjs-3rdparty-win-19051aa ${WRKSRC}/src/qt/3rdparty
	mv ${WRKDIR}/qtbase-b5cc008 ${WRKSRC}/src/qt/qtbase && \
	mv ${WRKDIR}/qtwebkit-e7b7433 ${WRKSRC}/src/qt/qtwebkit
	mkdir ${WRKSRC}/src/qt/qtbase/.git ${WRKSRC}/src/qt/qtwebkit/.git
	rm ${WRKSRC}/src/qt/qtwebkit/Source/WebCore/DerivedSources.cpp
	find ${WRKSRC} -name \*.orig -print0 | xargs -0 rm -f

post-patch:
	@@gccbasedir=`ecpp -print-search-dirs | awk '/^install:/{print $$2}'`; \
	perl ${PORTSDIR}/infrastructure/bin/pkg_subst \
		-D OPENBSD_INCDIR_PREPEND="$${gccbasedir}include" \
		${WRKSRC}/src/qt/qtbase/mkspecs/openbsd-g++/qmake.conf

MAKE_ENV += OSTYPE=openbsd \
	CC=cc CXX=c++ LINK_C=cc LINK=c++ \
	PYTHON=${MODPY_BIN} RUBY=${RUBY} \
	MAKE=make \
	MAKEFLAGS="-j ${MAKE_JOBS} PYTHON=${MODPY_BIN} RUBY=${RUBY}" \
	EXTRA_CPPFLAGS="-DLOCALBASE=\\\"${LOCALBASE}\\\" -DX11BASE=\\\"${X11BASE}\\\"" \

pre-build:
	ln -sf ${MODPY_BIN} ${WRKDIR}/bin/python
	ln -sf ${RUBY} ${WRKDIR}/bin/ruby

do-build:
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} \
		QT5_CONFIGURE_ARGS="${QT5_CONFIGURE_ARGS}" \
		${MODPY_BIN} build.py --confirm

do-install:
	${INSTALL_PROGRAM} ${WRKSRC}/bin/phantomjs ${PREFIX}/bin/phantomjs
	${INSTALL_DATA_DIR} ${PREFIX}/share/examples/phantomjs
	${INSTALL_DATA_DIR} ${PREFIX}/share/doc/phantomjs
	${INSTALL_DATA} ${WRKSRC}/examples/* ${PREFIX}/share/examples/phantomjs
	${INSTALL_DATA} ${WRKSRC}/LICENSE.BSD ${PREFIX}/share/doc/phantomjs

do-test:
	cd ${WRKSRC}/test && ${MODPY_BIN} run-tests.py

.include <bsd.port.mk>
@


1.14
log
@reinstate shared library suffix diff from before the phantomjs update.

create a separate configuration for openbsd-clang, similar to what's done
in qt5/qtbase. it doesn't build yet there though, there's a problem early on
when it detects STL..
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2017/07/05 11:54:22 sthen Exp $
d13 1
a13 1
REVISION =		0
d29 1
a29 1
WANTLIB +=		${MODGCC4_CPPWANTLIB} X11 Xau Xdmcp c crypto \
d38 2
@


1.13
log
@update to phantomjs-2.1.1, from Pavel Korovin
no reply from maintainer
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2017/04/10 11:46:35 sthen Exp $
d13 1
@


1.12
log
@use LIBCXX
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2017/03/02 17:30:15 espie Exp $
d5 1
a5 2
ONLY_FOR_ARCHS =	i386 amd64
DPB_PROPERTIES =	parallel nojunk
d7 1
d11 6
a16 2
DISTNAME =		phantomjs-1.9.8
REVISION =		3
d22 1
a22 1
# phantomjs: BSD, but statically linked to patched qt4 (LGPL) and webkit
d25 2
a26 2
WANTLIB +=		ICE SM X11 Xext Xi Xinerama Xrender c fontconfig \
			freetype m pthread ${LIBCXX}
d28 77
a104 2
MASTER_SITES = 		https://bitbucket.org/ariya/phantomjs/downloads/
EXTRACT_SUFX =		-source.zip
d106 3
a108 11
BUILD_DEPENDS =		shells/bash

MAKE_ENV =		C_INCLUDE_PATH=${X11BASE}/include/ \
			CPLUS_INCLUDE_PATH=${X11BASE}/include/ \
                        SUBLIBS=-L${WRKSRC}/src/qt/lib \
			MAKEFLAGS="-j${MAKE_JOBS}" \
			OSTYPE="openbsd"

do-configure:
	cd ${WRKSRC}/src/qt && env -i ${MAKE_ENV} \
		./preconfig.sh --jobs ${MAKE_JOBS} --qt-config
d110 4
a113 5
pre-build:
	cd ${WRKSRC}/src/qt && env -i ${MAKE_ENV} ${MAKE} -j${MAKE_JOBS}
	cd ${WRKSRC}/src/qt/src/plugins/codecs && \
		env -i ${MAKE_ENV} ${MAKE} -j${MAKE_JOBS}
	cd ${WRKSRC} && env -i ${MAKE_ENV} ./src/qt/bin/qmake
a121 1
# Tests fail as of version 1.9.2 (in different platforms and OSes)
d123 1
a123 1
	cd ${WRKSRC}/test && ${WRKSRC}/bin/phantomjs run-tests.js
@


1.11
log
@unhardcode g++
regen other patch, bump
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2016/12/10 14:12:21 sthen Exp $
d22 1
a22 1
			freetype m pthread stdc++
@


1.10
log
@Fix USE_WXNEEDED and bump. The contents of the variable had a trailing space
("USE_WXNEEDED = Yes # comment") and "Yes " doesn't match "Yes".
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2016/09/10 13:03:43 ajacoutot Exp $
d12 1
a12 1
REVISION =		2
@


1.9
log
@First pass at pre-entively fixing ports that would break once guenther's header
pollution diff is in.

lang/squeak/vm does not build but it's due to the recent audio changes
games/xbattle: also fixes some conflicting implicit decl
print/hplip: also fixes some conflicting implicit decl
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2016/08/19 19:36:01 sthen Exp $
d3 1
a3 1
USE_WXNEEDED =		Yes # bundled webkit
d12 1
a12 1
REVISION =		1
@


1.8
log
@add comment "bundled webkit", prompted by a mail from aja
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2016/08/19 09:49:24 sthen Exp $
d12 1
a12 1
REVISION =		0
@


1.7
log
@phantomjs needs wxneeded, from Caspar Schutijser
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2014/11/03 14:42:41 landry Exp $
d3 1
a3 1
USE_WXNEEDED =		Yes
@


1.6
log
@Update toh phantomjs 1.9.8.

From MAINTAINER Francisco de Borja Lopez Rio <borja /codigo23 /net>,
also tested by Eric Radman.
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.5 2014/03/18 14:19:54 ajacoutot Exp $
d12 1
@


1.5
log
@Drop uneeded substitution.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2014/01/28 11:37:52 sthen Exp $
d9 1
a9 1
DISTNAME =		phantomjs-1.9.7
@


1.4
log
@update to phantomjs 1.9.7, from maintainer Francisco de Borja Lopez Rio
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/01/15 08:41:37 sthen Exp $
a32 2
	perl -pi -e 's,^#!/usr/bin/env bash,#!${LOCALBASE}/bin/bash,g' \
		${WRKSRC}/src/qt/preconfig.sh
@


1.3
log
@build the bundled/patched copy of qt as part of the main build, not in
configure. reported by espie@@, ok Francisco de Borja Lopez Rio (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2014/01/11 11:47:20 sthen Exp $
d9 1
a9 1
DISTNAME =		phantomjs-1.9.2
d21 1
a21 1
MASTER_SITES =		http://phantomjs.googlecode.com/files/
@


1.2
log
@use DPB_PROPERTIES=nojunk, this has the usual problem with qmake where it
picks up installed headers even where they're not actually used
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2013/12/20 00:54:05 sthen Exp $
a31 3
# Passed via environment rather than on the command line to make
PARALLEL_BUILD =	No

d35 1
a35 1
	@@cd ${WRKSRC}/src/qt && env -i ${MAKE_ENV} \
d37 6
a42 1
	@@cd ${WRKSRC} && env -i ${MAKE_ENV} ./src/qt/bin/qmake
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.template,v 1.68 2013/10/02 07:34:45 ajacoutot Exp $
d4 2
a5 1
DPB_PROPERTIES =	parallel
@


1.1.1.1
log
@import ports/www/phantomjs, from maintainer Francisco de Borja Lopez Rio
<borja@@codigo23.net>, ok abieber@@ - apologies for the extra copies of
WebKit and Qt but they are stripped-down so not horribly slow to build,
and have various fixes that phantomjs upstream haven't been able to get
into the various libraries yet.

"PhantomJS is a headless WebKit scriptable with a JavaScript API.
It has fast and native support for various web standards: DOM
handling, CSS selector, JSON, Canvas, and SVG."

(useful for various things including automated testing of web sites,
and screen scraping of complex web apps)
@
text
@@
