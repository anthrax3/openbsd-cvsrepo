head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.14
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.8
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.10
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.6
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	sthen_20131220:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.12.20.00.54.06;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.12.20.00.54.06;	author sthen;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- src/qt/src/gui/painting/qcosmeticstroker.cpp.orig	Thu Sep  5 23:36:02 2013
+++ src/qt/src/gui/painting/qcosmeticstroker.cpp	Mon Nov 25 18:32:38 2013
@@@@ -133,10 +133,15 @@@@ struct NoDasher {
 
 };
 
+/*
+ * The return value is the result of the clipLine() call performed at the start
+ * of each of the two functions, aka "false" means completely outside the devices
+ * rect.
+ */
 template<DrawPixel drawPixel, class Dasher>
-static void drawLine(QCosmeticStroker *stroker, qreal x1, qreal y1, qreal x2, qreal y2, int caps);
+static bool drawLine(QCosmeticStroker *stroker, qreal x1, qreal y1, qreal x2, qreal y2, int caps);
 template<DrawPixel drawPixel, class Dasher>
-static void drawLineAA(QCosmeticStroker *stroker, qreal x1, qreal y1, qreal x2, qreal y2, int caps);
+static bool drawLineAA(QCosmeticStroker *stroker, qreal x1, qreal y1, qreal x2, qreal y2, int caps);
 
 inline void drawPixel(QCosmeticStroker *stroker, int x, int y, int coverage)
 {
@@@@ -702,10 +707,10 @@@@ static inline void capAdjust(int caps, int &x1, int &x
   the drawing shifts from horizontal to vertical or back.
   */
 template<DrawPixel drawPixel, class Dasher>
-static void drawLine(QCosmeticStroker *stroker, qreal rx1, qreal ry1, qreal rx2, qreal ry2, int caps)
+static bool drawLine(QCosmeticStroker *stroker, qreal rx1, qreal ry1, qreal rx2, qreal ry2, int caps)
 {
     if (stroker->clipLine(rx1, ry1, rx2, ry2))
-        return;
+        return false;
 
     static const int half = 31;
     int x1 = toF26Dot6(rx1) + half;
@@@@ -795,7 +800,7 @@@@ static void drawLine(QCosmeticStroker *stroker, qreal 
     } else {
         // horizontal
         if (!dx)
-            return;
+            return true;
 
         QCosmeticStroker::Direction dir = QCosmeticStroker::LeftToRight;
 
@@@@ -868,14 +873,15 @@@@ static void drawLine(QCosmeticStroker *stroker, qreal 
         }
     }
     stroker->lastPixel = last;
+    return true;
 }
 
 
 template<DrawPixel drawPixel, class Dasher>
-static void drawLineAA(QCosmeticStroker *stroker, qreal rx1, qreal ry1, qreal rx2, qreal ry2, int caps)
+static bool drawLineAA(QCosmeticStroker *stroker, qreal rx1, qreal ry1, qreal rx2, qreal ry2, int caps)
 {
     if (stroker->clipLine(rx1, ry1, rx2, ry2))
-        return;
+        return false;
 
     int x1 = toF26Dot6(rx1);
     int y1 = toF26Dot6(ry1);
@@@@ -949,7 +955,7 @@@@ static void drawLineAA(QCosmeticStroker *stroker, qrea
     } else {
         // horizontal
         if (!dx)
-            return;
+            return true;
 
         int yinc = F16Dot16FixedDiv(dy, dx);
 
@@@@ -1011,6 +1017,7 @@@@ static void drawLineAA(QCosmeticStroker *stroker, qrea
             drawPixel(stroker, x, (y>>16) + 1, alpha * alphaEnd >> 6);
         }
     }
+    return true;
 }
 
 QT_END_NAMESPACE
@


1.1.1.1
log
@import ports/www/phantomjs, from maintainer Francisco de Borja Lopez Rio
<borja@@codigo23.net>, ok abieber@@ - apologies for the extra copies of
WebKit and Qt but they are stripped-down so not horribly slow to build,
and have various fixes that phantomjs upstream haven't been able to get
into the various libraries yet.

"PhantomJS is a headless WebKit scriptable with a JavaScript API.
It has fast and native support for various web standards: DOM
handling, CSS selector, JSON, Canvas, and SVG."

(useful for various things including automated testing of web sites,
and screen scraping of complex web apps)
@
text
@@
