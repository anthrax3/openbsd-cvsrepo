head	1.2;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.14
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.8
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.10
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.6
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	sthen_20131220:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.07.05.11.54.23;	author sthen;	state Exp;
branches;
next	1.1;
commitid	S8t3RgAhZPi5nc1y;

1.1
date	2013.12.20.00.54.06;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.12.20.00.54.06;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to phantomjs-2.1.1, from Pavel Korovin
no reply from maintainer
@
text
@@


1.1
log
@Initial revision
@
text
@a0 40
$OpenBSD$
--- src/qt/src/corelib/codecs/qiconvcodec.cpp.orig	Thu Sep  5 23:36:02 2013
+++ src/qt/src/corelib/codecs/qiconvcodec.cpp	Mon Nov 25 18:29:12 2013
@@@@ -219,12 +219,7 @@@@ QString QIconvCodec::convertToUnicode(const char* char
     IconvState *state = *pstate;
     size_t inBytesLeft = len;
     // best case assumption, each byte is converted into one UTF-16 character, plus 2 bytes for the BOM
-#ifdef GNU_LIBICONV
-    // GNU doesn't disagree with POSIX :/
-    const char *inBytes = chars;
-#else
     char *inBytes = const_cast<char *>(chars);
-#endif
 
     QByteArray in;
     if (remainingCount) {
@@@@ -318,11 +313,7 @@@@ static bool setByteOrder(iconv_t cd)
     size_t outBytesLeft = sizeof buf;
     size_t inBytesLeft = sizeof bom;
 
-#if defined(GNU_LIBICONV)
-    const char **inBytesPtr = const_cast<const char **>(&inBytes);
-#else
     char **inBytesPtr = &inBytes;
-#endif
 
     if (iconv(cd, inBytesPtr, &inBytesLeft, &outBytes, &outBytesLeft) == (size_t) -1) {
         return false;
@@@@ -338,11 +329,7 @@@@ QByteArray QIconvCodec::convertFromUnicode(const QChar
     char *outBytes;
     size_t inBytesLeft;
 
-#if defined(GNU_LIBICONV)
-    const char **inBytesPtr = const_cast<const char **>(&inBytes);
-#else
     char **inBytesPtr = &inBytes;
-#endif
 
     IconvState *temporaryState = 0;
     QThreadStorage<QIconvCodec::IconvState *> *ts = fromUnicodeState();
@


1.1.1.1
log
@import ports/www/phantomjs, from maintainer Francisco de Borja Lopez Rio
<borja@@codigo23.net>, ok abieber@@ - apologies for the extra copies of
WebKit and Qt but they are stripped-down so not horribly slow to build,
and have various fixes that phantomjs upstream haven't been able to get
into the various libraries yet.

"PhantomJS is a headless WebKit scriptable with a JavaScript API.
It has fast and native support for various web standards: DOM
handling, CSS selector, JSON, Canvas, and SVG."

(useful for various things including automated testing of web sites,
and screen scraping of complex web apps)
@
text
@@
