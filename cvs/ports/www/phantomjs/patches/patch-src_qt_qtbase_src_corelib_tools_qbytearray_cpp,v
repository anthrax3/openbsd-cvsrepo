head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2017.07.05.11.54.22;	author sthen;	state Exp;
branches;
next	;
commitid	S8t3RgAhZPi5nc1y;


desc
@@


1.1
log
@update to phantomjs-2.1.1, from Pavel Korovin
no reply from maintainer
@
text
@$OpenBSD$

Index: src/qt/qtbase/src/corelib/tools/qbytearray.cpp
--- src/qt/qtbase/src/corelib/tools/qbytearray.cpp.orig
+++ src/qt/qtbase/src/corelib/tools/qbytearray.cpp
@@@@ -150,12 +150,15 @@@@ int qAllocMore(int alloc, int extra) Q_DECL_NOTHROW
 
 char *qstrdup(const char *src)
 {
+    size_t sz = strlen(src) + 1;
     if (!src)
         return 0;
-    char *dst = new char[strlen(src) + 1];
-    return qstrcpy(dst, src);
+    char *dst = new char[sz];
+    memcpy(dst, src, sz);
+    return dst;
 }
 
+#ifndef Q_OS_OPENBSD
 /*! \relates QByteArray
 
     Copies all the characters up to and including the '\\0' from \a
@@@@ -183,6 +186,7 @@@@ char *qstrcpy(char *dst, const char *src)
     return strcpy(dst, src);
 #endif
 }
+#endif
 
 /*! \relates QByteArray
 
@@@@ -199,8 +203,6 @@@@ char *qstrcpy(char *dst, const char *src)
     \note When compiling with Visual C++ compiler version 14.00
     (Visual C++ 2005) or later, internally the function strncpy_s
     will be used.
-
-    \sa qstrcpy()
 */
 
 char *qstrncpy(char *dst, const char *src, uint len)
@
