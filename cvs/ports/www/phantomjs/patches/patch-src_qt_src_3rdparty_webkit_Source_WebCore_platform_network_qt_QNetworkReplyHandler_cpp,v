head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2017.07.05.11.54.23;	author sthen;	state Exp;
branches;
next	1.1;
commitid	S8t3RgAhZPi5nc1y;

1.1
date	2017.04.27.23.02.11;	author espie;	state Exp;
branches;
next	;
commitid	7EPXcTIyHnhZLBwn;


desc
@@


1.2
log
@update to phantomjs-2.1.1, from Pavel Korovin
no reply from maintainer
@
text
@@


1.1
log
@final patches for clang on amd64. OwnPtr wants nullptr constants, 0 leads
to ambiguous messages.
@
text
@a0 72
$OpenBSD$
--- src/qt/src/3rdparty/webkit/Source/WebCore/platform/network/qt/QNetworkReplyHandler.cpp.orig	Thu Apr 27 23:01:42 2017
+++ src/qt/src/3rdparty/webkit/Source/WebCore/platform/network/qt/QNetworkReplyHandler.cpp	Thu Apr 27 23:26:50 2017
@@@@ -239,7 +239,7 @@@@ QNetworkReply* QNetworkReplyWrapper::release()
     m_reply->disconnect(this);
     QNetworkReply* reply = m_reply;
     m_reply = 0;
-    m_sniffer = 0;
+    m_sniffer = nullptr;
 
     return reply;
 }
@@@@ -302,7 +302,7 @@@@ void QNetworkReplyWrapper::receiveSniffedMIMEType()
     Q_ASSERT(m_sniffer);
 
     m_sniffedMIMEType = m_sniffer->mimeType();
-    m_sniffer = 0;
+    m_sniffer = nullptr;
 
     emitMetaDataChanged();
 }
@@@@ -320,7 +320,7 @@@@ void QNetworkReplyWrapper::setFinished()
 void QNetworkReplyWrapper::replyDestroyed()
 {
     m_reply = 0;
-    m_sniffer = 0;
+    m_sniffer = nullptr;
 }
 
 void QNetworkReplyWrapper::emitMetaDataChanged()
@@@@ -425,7 +425,7 @@@@ QNetworkReply* QNetworkReplyHandler::release()
         return 0;
 
     QNetworkReply* reply = m_replyWrapper->release();
-    m_replyWrapper = 0;
+    m_replyWrapper = nullptr;
     return reply;
 }
 
@@@@ -448,12 +448,12 @@@@ void QNetworkReplyHandler::finish()
 
     ResourceHandleClient* client = m_resourceHandle->client();
     if (!client) {
-        m_replyWrapper = 0;
+        m_replyWrapper = nullptr;
         return;
     }
 
     if (m_replyWrapper->wasRedirected()) {
-        m_replyWrapper = 0;
+        m_replyWrapper = nullptr;
         m_queue.push(&QNetworkReplyHandler::start);
         return;
     }
@@@@ -473,7 +473,7 @@@@ void QNetworkReplyHandler::finish()
         }
     }
 
-    m_replyWrapper = 0;
+    m_replyWrapper = nullptr;
 }
 
 void QNetworkReplyHandler::sendResponseIfNeeded()
@@@@ -547,7 +547,7 @@@@ void QNetworkReplyHandler::redirect(ResourceResponse& 
                             newUrl.toString(),
                             QCoreApplication::translate("QWebPage", "Redirection limit reached"));
         client->didFail(m_resourceHandle, error);
-        m_replyWrapper = 0;
+        m_replyWrapper = nullptr;
         return;
     }
 
@

