head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2017.07.13.13.31.45;	author sthen;	state dead;
branches;
next	1.2;
commitid	rMPcVYhW8sEE4TTc;

1.2
date	2017.07.05.11.54.23;	author sthen;	state Exp;
branches;
next	1.1;
commitid	S8t3RgAhZPi5nc1y;

1.1
date	2017.04.27.16.32.32;	author espie;	state Exp;
branches;
next	;
commitid	rytD2P0IYi50OjBy;


desc
@@


1.3
log
@remove phantomjs empty patches, spotted by espie. needs more work but this is a first step.
@
text
@@


1.2
log
@update to phantomjs-2.1.1, from Pavel Korovin
no reply from maintainer
@
text
@@


1.1
log
@auto-detection of nullptr fails with our libcxx right now, so just
hardcode that libcxx already defines the necessary bits
@
text
@a0 20
$OpenBSD$
--- src/qt/src/3rdparty/webkit/Source/JavaScriptCore/wtf/NullPtr.h.orig	Thu Apr 27 15:12:54 2017
+++ src/qt/src/3rdparty/webkit/Source/JavaScriptCore/wtf/NullPtr.h	Thu Apr 27 15:24:19 2017
@@@@ -35,12 +35,15 @@@@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH D
     #define __has_feature(feature) 0
 #endif
 
-#if __has_feature(cxx_nullptr) || (GCC_VERSION_AT_LEAST(4, 6, 0) && defined(__GXX_EXPERIMENTAL_CXX0X__)) || (defined(_MSC_VER) && _MSC_VER >= 1600 && !COMPILER(INTEL))
+#if __clang__ || __has_feature(cxx_nullptr) || (GCC_VERSION_AT_LEAST(4, 6, 0) && defined(__GXX_EXPERIMENTAL_CXX0X__)) || (defined(_MSC_VER) && _MSC_VER >= 1600 && !COMPILER(INTEL))
 
 #define HAVE_NULLPTR 1
 
 #else
 
+/* XXX clang does define nullptr_t in a weird way even when it doesn't have
+ * the constant nullptr
+ */
 namespace std {
     class nullptr_t { };
 }
@

