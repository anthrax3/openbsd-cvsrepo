head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2014.06.02.14.37.16;	author sthen;	state Exp;
branches;
next	1.1;
commitid	68WBotj6vDzXcNFI;

1.1
date	2014.04.19.17.59.38;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix patch to cope with RAND_egd being removed from libressl; uninitialized
variable use with the previous patch was causing writes to a file with an
incorrect name, as discovered by mlarkin@@. Thrashed out with / ok jca@@.
@
text
@$OpenBSD$
--- src/network/ssl/ssl.c.orig	Mon Jun  2 12:54:40 2014
+++ src/network/ssl/ssl.c	Mon Jun  2 12:55:46 2014
@@@@ -49,11 +49,16 @@@@ init_openssl(struct module *module)
 	 * cannot initialize the PRNG and so every attempt to use SSL fails.
 	 * It's actually an OpenSSL FAQ, and according to them, it's up to the
 	 * application coders to seed the RNG. -- William Yodlowsky */
-	if (RAND_egd(RAND_file_name(f_randfile, sizeof(f_randfile))) < 0) {
+	RAND_file_name(f_randfile, sizeof(f_randfile));
+#ifdef HAVE_RAND_EGD
+	if (RAND_egd(f_randfile) < 0) {
 		/* Not an EGD, so read and write to it */
+#endif
 		if (RAND_load_file(f_randfile, -1))
 			RAND_write_file(f_randfile);
+#ifdef HAVE_RAND_EGD
 	}
+#endif
 
 	SSLeay_add_ssl_algorithms();
 	context = SSL_CTX_new(SSLv23_client_method());
@


1.1
log
@unbreak after RAND_egd removal
@
text
@d2 3
a4 3
--- src/network/ssl/ssl.c.orig	Sat Apr 19 18:44:13 2014
+++ src/network/ssl/ssl.c	Sat Apr 19 18:45:12 2014
@@@@ -49,11 +49,8 @@@@ init_openssl(struct module *module)
d9 10
a18 6
-		/* Not an EGD, so read and write to it */
-		if (RAND_load_file(f_randfile, -1))
-			RAND_write_file(f_randfile);
-	}
+	if (RAND_load_file(f_randfile, -1))
+		RAND_write_file(f_randfile);
@

