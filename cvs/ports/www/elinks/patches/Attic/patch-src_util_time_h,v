head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.03.17.17.45.14;	author edd;	state dead;
branches;
next	1.1;
commitid	6g67nxcfi6y6Y3N6;

1.1
date	2013.10.10.20.10.51;	author edd;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove www/elinks from the ports tree.

The last release of elinks was in 2009, and it has since come to our attention
that it does not verify the authenticity of SSL certificates:
https://marc.info/?l=elinks-dev&m=148896031830582&w=2

We've not heard from upstream, so for now we are removing elinks from ports.

For a more modern text-based browser with SSL certificate verification, see
www/lynx.

OK jca@@
@
text
@$OpenBSD: patch-src_util_time_h,v 1.1 2013/10/10 20:10:51 edd Exp $

Elinks defines it's own timeval struct which is incompatible with OpenBSD's.
Further, the member names differ from the OpenBSD timeval struct.

It is easier to fix the types in their definition than to define timeval_T
to timeval_t and patch every use site.

--- src/util/time.h.orig	Tue Oct  8 23:46:40 2013
+++ src/util/time.h	Tue Oct  8 23:47:33 2013
@@@@ -23,7 +23,7 @@@@ typedef long milliseconds_T;
 /* Redefine a timeval that has all fields signed so calculations
  * will be simplified on rare systems that define timeval with
  * unsigned fields. */
-typedef struct { long sec; long usec; } timeval_T;
+typedef struct { time_t sec; long usec; } timeval_T;
 
 timeval_T *timeval_from_milliseconds(timeval_T *t, milliseconds_T milliseconds);
 timeval_T *timeval_from_seconds(timeval_T *t, long seconds);
@


1.1
log
@Unbreak elinks on arches using 4-byte longs.

Bug exposed by time64 changes.

OK sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@

