head	1.3;
access;
symbols
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	landry_20100421:1.1.1.1
	landry:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.01.02.14.02.17;	author landry;	state dead;
branches;
next	1.2;

1.2
date	2010.06.13.14.16.46;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2010.04.21.16.26.46;	author landry;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.04.21.16.26.46;	author landry;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Forgotten in previous
@
text
@$OpenBSD: patch-wscript,v 1.2 2010/06/13 14:16:46 landry Exp $
--- wscript.orig	Thu Apr 15 12:55:27 2010
+++ wscript	Thu Apr 15 12:55:43 2010
@@@@ -28,6 +28,6 @@@@ def build(ctx):
     ctx.env.shlib_PATTERN = "%s.so"
     obj = ctx.new_task_gen(features='cc cshlib', 
                            target=APPNAME,
-                           install_path="/usr/lib/mozilla/plugins",
+                           install_path="${LOCALBASE}/lib/mozilla/plugins",
                            uselib="vte gdk gtk")
     obj.find_sources_in_dirs(top)
@


1.2
log
@Install plugin in lib/mozilla/plugins instead of lib/mozilla-plugins
@
text
@d1 1
a1 1
$OpenBSD: patch-wscript,v 1.1.1.1 2010/04/21 16:26:46 landry Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d9 1
a9 1
+                           install_path="${LOCALBASE}/lib/mozilla-plugins",
@


1.1.1.1
log
@Import vteplugin 0.1.
Those days, the trend is to write/use minimal browsers that work in a
terminal. vteplugin takes the opposite direction and allows you to use
terminals in your npapi-compatible-bloated-web-browser, ie any
gecko/webkit web browser. It uses XEmbed to bundle a vte window in a
browser tab.
@
text
@@
