head	1.3;
access;
symbols
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	jeremy_2011-Dec-13:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.01.14.19.31.44;	author jeremy;	state dead;
branches;
next	1.2;

1.2
date	2012.09.23.16.57.35;	author jeremy;	state Exp;
branches;
next	1.1;

1.1
date	2011.12.13.17.38.07;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.12.13.17.38.07;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove www/ruby-rails and dependencies.  The current version is
out of date and subject to serious security vulnerabilities, updating
it causes a lot of ports churn for little benefit, and nobody has
offered to maintain it.

OK ajacoutot@@, jcs@@, jasper@@
@
text
@# $OpenBSD: Makefile,v 1.2 2012/09/23 16:57:35 jeremy Exp $

COMMENT =	HTTP Caching for Rack

DISTNAME =	rack-cache-1.1
REVISION =	0
CATEGORIES =	www

HOMEPAGE =	http://rtomayko.github.com/rack-cache/

# MIT License
PERMIT_PACKAGE_CDROM =		Yes
PERMIT_PACKAGE_FTP =		Yes
PERMIT_DISTFILES_CDROM =	Yes
PERMIT_DISTFILES_FTP =		Yes

MODULES =	lang/ruby

BUILD_DEPENDS =		${RUN_DEPENDS}
RUN_DEPENDS =		www/ruby-rack,${MODRUBY_FLAVOR}>=0.4

CONFIGURE_STYLE =	ruby gem

.include <bsd.port.mk>
@


1.2
log
@Bump revisions for ruby gem/extconf ports after the switch to ruby 1.9
by default, since the ruby 1.8 version now has a ruby18 explicit FLAVOR.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2011/12/13 17:38:07 jeremy Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2011/09/16 09:24:57 espie Exp $
d6 1
@


1.1.1.1
log
@Import ruby-rack-cache 1.1, a Rails 3.1 dependency

Rack::Cache is suitable as a quick drop-in component to enable HTTP
caching for Rack-based applications that produce freshness (Expires,
Cache-Control) and/or validation (Last-Modified, ETag) information.

    Standards-based (see RFC 2616 / Section 13).
    Freshness/expiration based caching
    Validation
    Vary support
    Portable: 100% Ruby / works with any Rack-enabled framework.
    Disk, memcached, and heap memory storage backends.

OK claudio@@
@
text
@@
