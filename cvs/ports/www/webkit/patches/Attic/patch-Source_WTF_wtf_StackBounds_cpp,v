head	1.3;
access;
symbols
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2013.10.06.14.03.44;	author landry;	state dead;
branches;
next	1.2;

1.2
date	2013.05.07.14.16.52;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2013.04.23.09.40.58;	author landry;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to webkit 2.2.0.

- Now depends on newer gcc, use 4.6 by default.
- Enable webkit2 api in the gtk3 FLAVOR. Still broken/erratic behaviour at
  runtime, but at least this will allow people to debug it, and it's
  required by newer GNOMEs anyway. Provide MiniBrowser for debugging purposes.
- add hack from bug #118732 to workaround the fact that our binutils
  doesnt support 'ar T'
- update patches from #103128 to tentatively fix powerpc runtime
- force-disable YARR_JIT & ASSEMBLE on archs without JIT (ie anything
  besides i386/amd64) via Platform.h patch instead of JSC_CPPFLAGS (which
  doesnt work anymore anyway)
- add a bunch of patches to fix build (missing includes etc) in the WebKit2
  source tree

Tested in an amd64 bulk build, runtime-tested previous betas on
i386/amd64, test-built on powerpc and sparc64. Things might still be
broken at runtime on powerpc, but at least it allows more GNOME things
to be updated.
@
text
@$OpenBSD: patch-Source_WTF_wtf_StackBounds_cpp,v 1.2 2013/05/07 14:16:52 ajacoutot Exp $
https://bugs.webkit.org/show_bug.cgi?id=114978
--- Source/WTF/wtf/StackBounds.cpp.orig	Thu Jun 14 12:23:17 2012
+++ Source/WTF/wtf/StackBounds.cpp	Tue May  7 09:48:59 2013
@@@@ -60,10 +60,10 @@@@ namespace WTF {
 // These platforms should now be working correctly:
 //     DARWIN, QNX, UNIX
 // These platforms are not:
-//     WINDOWS, SOLARIS, OPENBSD, WINCE
+//     WINDOWS, SOLARIS, WINCE
 //
 // FIXME: remove this! - this code unsafely guesses at stack sizes!
-#if OS(WINDOWS) || OS(SOLARIS) || OS(OPENBSD)
+#if OS(WINDOWS) || OS(SOLARIS)
 // Based on the current limit used by the JSC parser, guess the stack size.
 static const ptrdiff_t estimatedStackSize = 128 * sizeof(void*) * 1024;
 // This method assumes the stack is growing downwards.
@@@@ -125,7 +125,12 @@@@ void StackBounds::initialize()
     stack_t stack;
     pthread_stackseg_np(thread, &stack);
     m_origin = stack.ss_sp;
-    m_bound = estimateStackBound(m_origin);
+#if defined(__hppa__) || defined(__hppa64__)
+    // hppa's stack grows up
+    m_bound = static_cast<char*>(m_origin) + stack.ss_size;
+#else
+    m_bound = static_cast<char*>(m_origin) - stack.ss_size;
+#endif
 }
 
 #elif OS(UNIX)
@


1.2
log
@Initialize WebKitWebPlugin path to prevent double-free; from upstream

landry@@ (maintainer) is currently away, so ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_WTF_wtf_StackBounds_cpp,v 1.1 2013/04/23 09:40:58 landry Exp $
@


1.1
log
@Add a patch to fix stack bounds computation, from David Hill (also
pushed upstream as https://bugs.webkit.org/show_bug.cgi?id=114978)

Seems to fix xombrero/surf crashes on amd64, and seems to magically make
webkit sort-of usable (ie dead-slow, but js seems to work) on powerpc.
(symptom : ** Message: console message: undefined @@0: RangeError: Maximum
call stack size exceeded.)

Note : webkit still fails to build on mips64* and hppa. sigh.

ok jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 3
--- Source/WTF/wtf/StackBounds.cpp.orig	Thu Jun 14 06:23:17 2012
+++ Source/WTF/wtf/StackBounds.cpp	Mon Apr 22 11:13:12 2013
@@@@ -60,10 +60,10 @@@@
d18 1
a18 1
@@@@ -125,7 +125,12 @@@@
@

