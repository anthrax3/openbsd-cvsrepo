head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.10.06.14.03.43;	author landry;	state dead;
branches;
next	1.1;

1.1
date	2013.04.13.09.11.02;	author landry;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to webkit 2.2.0.

- Now depends on newer gcc, use 4.6 by default.
- Enable webkit2 api in the gtk3 FLAVOR. Still broken/erratic behaviour at
  runtime, but at least this will allow people to debug it, and it's
  required by newer GNOMEs anyway. Provide MiniBrowser for debugging purposes.
- add hack from bug #118732 to workaround the fact that our binutils
  doesnt support 'ar T'
- update patches from #103128 to tentatively fix powerpc runtime
- force-disable YARR_JIT & ASSEMBLE on archs without JIT (ie anything
  besides i386/amd64) via Platform.h patch instead of JSC_CPPFLAGS (which
  doesnt work anymore anyway)
- add a bunch of patches to fix build (missing includes etc) in the WebKit2
  source tree

Tested in an amd64 bulk build, runtime-tested previous betas on
i386/amd64, test-built on powerpc and sparc64. Things might still be
broken at runtime on powerpc, but at least it allows more GNOME things
to be updated.
@
text
@$OpenBSD: patch-Source_JavaScriptCore_llint_LowLevelInterpreter_cpp,v 1.1 2013/04/13 09:11:02 landry Exp $
https://bugs.webkit.org/show_bug.cgi?id=103128
http://trac.webkit.org/changeset/145551 fixes missing Double2Ints on ppc
https://bugs.webkit.org/show_bug.cgi?id=113638
tentative fix for ppc/sparc64/mips64el - LLIntAssembly.h uses isnan() without including math.h (or cmath?)
--- Source/JavaScriptCore/llint/LowLevelInterpreter.cpp.orig	Tue Mar 26 19:25:12 2013
+++ Source/JavaScriptCore/llint/LowLevelInterpreter.cpp	Sun Mar 31 11:47:48 2013
@@@@ -117,6 +117,17 @@@@ static double Ints2Double(uint32_t lo, uint32_t hi)
     u.ival64 = (static_cast<uint64_t>(hi) << 32) | lo;
     return u.dval;
 }
+
+static void Double2Ints(double val, uint32_t& lo, uint32_t& hi)
+{
+    union {
+        double dval;
+        uint64_t ival64;
+    } u;
+    u.dval = val;
+    hi = static_cast<uint32_t>(u.ival64 >> 32);
+    lo = static_cast<uint32_t>(u.ival64);
+}
 #endif // USE(JSVALUE32_64)
 
 } // namespace LLint
@


1.1
log
@Major update to webkit 2.0.0.

- add ruby to BDEPS. Webkit build system now uses autohell, python, ruby and perl \o/
- set MODRUBY_REV = 1.8 on sparc64 since 1.9 is broken there
- disable WebKit2 support, it needs shm_open()/shm_unlink()
- switch from gstreamer-0.10 to gstreamer1
- force-disable JIT/ASSEMBLER on non-jit archs, builds fails otherwise (bug #113638)
- only build NumberPrototype.cpp with -O0 on sparc64, not the damn whole thing
- use -Wl,--relax on ppc otherwise linking fails
- move some patches around since JavaScriptCore/wtf moved to WTF/wtf
- dont uselessly rerun make within make during install, gmake blows
- blindly backport upstream r144077 to fix mips64 build
- backport bits of #103128 & r145551 to fix powerpc build
- backport r147967 & more to fix bashisms in configure
- bug #109932 forced the use of gcc >= 4.7 or clang >= 3.0, but this is
  only for WebKit2 so loosen the check atm

Tested working fine on amd64 & i386, went in bulk builds, known broken
at runtime on ppc (being worked on. or not.) should build on mips64el
(and maybe even run!) and sparc64 (wont run! ever! nothing new here..),
but 'someone' will care about the poor exotic archs and fix'em, right ?

After too much prodding from the gnome maintainers who desperately need it
@
text
@d1 1
a1 1
$OpenBSD$
@

