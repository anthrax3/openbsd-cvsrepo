head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.10
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.5
date	2014.09.28.06.52.14;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	WG3T5X7WYzJwFEVR;

1.4
date	2014.03.25.06.25.45;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2013.04.13.09.11.02;	author landry;	state Exp;
branches;
next	1.2;

1.2
date	2012.04.03.15.39.35;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.13.06.52.49;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Cleanup to help future update and split; no pkg change.
@
text
@$OpenBSD: patch-Source_JavaScriptCore_heap_MachineStackMarker_cpp,v 1.4 2014/03/25 06:25:45 landry Exp $

https://bugs.webkit.org/show_bug.cgi?id=129965

--- Source/JavaScriptCore/heap/MachineStackMarker.cpp.orig	Tue Feb  4 17:38:03 2014
+++ Source/JavaScriptCore/heap/MachineStackMarker.cpp	Fri Feb 14 20:41:39 2014
@@@@ -352,8 +352,10 @@@@ static size_t getPlatformThreadRegisters(const Platfor
 #elif USE(PTHREADS)
     pthread_attr_init(&regs);
 #if HAVE(PTHREAD_NP_H) || OS(NETBSD)
+#  ifndef __OpenBSD__
     // e.g. on FreeBSD 5.4, neundorf@@kde.org
     pthread_attr_get_np(platformThread, &regs);
+#  endif
 #else
     // FIXME: this function is non-portable; other POSIX systems may have different np alternatives
     pthread_getattr_np(platformThread, &regs);
@@@@ -416,7 +418,14 @@@@ static inline void* otherThreadStackPointer(const Plat
 #elif USE(PTHREADS)
     void* stackBase = 0;
     size_t stackSize = 0;
+# if defined(__OpenBSD__)
+    stack_t ss;
+    int rc = pthread_stackseg_np(pthread_self(), &ss);
+    stackBase = (void*)((size_t) ss.ss_sp - ss.ss_size);
+    stackSize = ss.ss_size;
+#else
     int rc = pthread_attr_getstack(&regs, &stackBase, &stackSize);
+#endif
     (void)rc; // FIXME: Deal with error code somehow? Seems fatal.
     ASSERT(stackBase);
     return static_cast<char*>(stackBase) + stackSize;
@


1.4
log
@Update to webkit 2.4.0.

See http://webkitgtk.org/2014/03/24/webkitgtk2.4.0-released.html. Note
that Webkit2 API is still broken, on OpenBSD(and FreeBSD) and this might
be the last release shipping the Webkit1 API.
Pass -DLOG_DISABLED=0 to CPPFLAGS to somewhat allow debugging.
Use the same ruby version on sparc64 as other archs now that they're
more reliable.

Remove some patches merged upstream, and add links to upstream bz for
most of the remaining patches.

Note: this needs gnu/usr.bin/binutils/include/opcode/i386.h r1.15 to
build. And gcc 4.8 (and python, ruby & perl :)
Built numerous times on amd64/ppc/sparc64 (broken at runtime on the last
two, but that's not a regression from 2.2..) and went in a bunch of
bulks.
@
text
@d1 2
a2 1
$OpenBSD: patch-Source_JavaScriptCore_heap_MachineStackMarker_cpp,v 1.3 2013/04/13 09:11:02 landry Exp $
d4 1
@


1.3
log
@Major update to webkit 2.0.0.

- add ruby to BDEPS. Webkit build system now uses autohell, python, ruby and perl \o/
- set MODRUBY_REV = 1.8 on sparc64 since 1.9 is broken there
- disable WebKit2 support, it needs shm_open()/shm_unlink()
- switch from gstreamer-0.10 to gstreamer1
- force-disable JIT/ASSEMBLER on non-jit archs, builds fails otherwise (bug #113638)
- only build NumberPrototype.cpp with -O0 on sparc64, not the damn whole thing
- use -Wl,--relax on ppc otherwise linking fails
- move some patches around since JavaScriptCore/wtf moved to WTF/wtf
- dont uselessly rerun make within make during install, gmake blows
- blindly backport upstream r144077 to fix mips64 build
- backport bits of #103128 & r145551 to fix powerpc build
- backport r147967 & more to fix bashisms in configure
- bug #109932 forced the use of gcc >= 4.7 or clang >= 3.0, but this is
  only for WebKit2 so loosen the check atm

Tested working fine on amd64 & i386, went in bulk builds, known broken
at runtime on ppc (being worked on. or not.) should build on mips64el
(and maybe even run!) and sparc64 (wont run! ever! nothing new here..),
but 'someone' will care about the poor exotic archs and fix'em, right ?

After too much prodding from the gnome maintainers who desperately need it
@
text
@d1 5
a5 4
$OpenBSD: patch-Source_JavaScriptCore_heap_MachineStackMarker_cpp,v 1.2 2012/04/03 15:39:35 landry Exp $
--- Source/JavaScriptCore/heap/MachineStackMarker.cpp.orig	Mon Oct  1 15:06:17 2012
+++ Source/JavaScriptCore/heap/MachineStackMarker.cpp	Fri Mar  8 00:56:48 2013
@@@@ -372,8 +372,10 @@@@ static size_t getPlatformThreadRegisters(const Platfor
d16 1
a16 1
@@@@ -437,7 +439,14 @@@@ static inline void* otherThreadStackPointer(const Plat
@


1.2
log
@Major update to webkit 1.8.0.

- disable static libs, shrinks package size by a factor 3
- now depends on geoclue for geolocation purposes (of course its up to
  the browsers to enable the feature or not..)
- simplify Makefile/FLAVORS/SHARED_LIBS
- fold most of the PFRAGs to PLIST by using variables
- remove patch-Source_JavaScriptCore_runtime_JSValue_h, seems it was
  added for sparc64 but now it breaks the build there, and noone has been
able to justify the addition of that patch. Without it, GtkLauncher
shows simple html websites on sparc64 and crashes as soon as some js is
involved, but thats not much different from before
- remove patch-Source_JavaScriptCore_wtf_text_StringHash_h &
  patch-Source_JavaScriptCore_wtf_text_StringImpl_cpp, replaced by
patch-Source_JavaScriptCore_runtime_UString_h for mips64/sparc64
- add patch-Source_JavaScriptCore_wtf_NumberOfCores_cpp for #82585

tested on i386/amd64 by several, amd64 bulk build, ppc & sparc64 testing
by myself. mips64el in the works..
ok ajacoutot@@
@
text
@d1 4
a4 4
$OpenBSD: patch-Source_JavaScriptCore_heap_MachineStackMarker_cpp,v 1.1 2011/10/13 06:52:49 jasper Exp $
--- Source/JavaScriptCore/heap/MachineStackMarker.cpp.orig	Wed Dec 28 09:50:13 2011
+++ Source/JavaScriptCore/heap/MachineStackMarker.cpp	Mon Jan 16 17:54:07 2012
@@@@ -365,8 +365,10 @@@@ static size_t getPlatformThreadRegisters(const Platfor
d15 1
a15 1
@@@@ -430,7 +432,14 @@@@ static inline void* otherThreadStackPointer(const Plat
@


1.1
log
@- update to 1.6.1

tested in a bulk on amd64, as well as on sparc64 by myself
macppc testing by pea@@

ok aja@@
@
text
@d1 4
a4 4
$OpenBSD$
--- Source/JavaScriptCore/heap/MachineStackMarker.cpp.orig	Fri Oct  7 09:56:22 2011
+++ Source/JavaScriptCore/heap/MachineStackMarker.cpp	Fri Oct  7 09:57:12 2011
@@@@ -366,8 +366,10 @@@@ static size_t getPlatformThreadRegisters(const Platfor
d15 1
a15 1
@@@@ -431,7 +433,14 @@@@ static inline void* otherThreadStackPointer(const Plat
@

