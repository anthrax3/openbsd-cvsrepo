head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.36
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.34
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.32
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.28
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.30
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.26
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.24
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.22
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.20
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.18
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.16
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.14
	OPENBSD_5_0:1.2.0.12
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.10
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.8
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.10
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.8
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	bernd_2006-jul-14:1.1.1.1
	bernd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.10.01.20.15.04;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.14.16.12.14;	author bernd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.07.14.16.12.14;	author bernd;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to wml 2.0.11 and fix an assumption in configure that is
not valid for perl-5.10.0.  OK bernd@@
@
text
@$OpenBSD: patch-wml_frontend_wml_src,v 1.1.1.1 2006/07/14 16:12:14 bernd Exp $
--- wml_frontend/wml.src.orig	Thu Dec  1 12:50:13 2005
+++ wml_frontend/wml.src	Mon Sep 29 11:20:55 2008
@@@@ -49,7 +49,7 @@@@ if ($ENV{'PATH'} !~ m|@@bindir@@|) {
 }
 
 use Getopt::Long 2.13;
-use File::PathConvert;
+use File::Spec::Functions 0.87;
 use IO::File 1.06;
 use Term::ReadKey;
 use Cwd;
@@@@ -338,7 +338,7 @@@@ if (not $opt_r) {
             @@opt_I_NEW = @@opt_I_OLD;
 
             #   adjust -D options
-            $reldir = File::PathConvert::abs2rel("$dir", "$src");
+            $reldir = File::Spec::Functions::abs2rel("$dir", "$src");
             $reldir = "." if $reldir eq '';
             foreach $d (@@opt_D) {
                 if ($d =~ m|^([A-Za-z0-9_]+)~(.+)$|) {
@@@@ -363,7 +363,7 @@@@ if (not $opt_r) {
             }
 
             #   adjust -I options
-            $reldir = File::PathConvert::abs2rel("$dir");
+            $reldir = File::Spec::Functions::abs2rel("$dir");
             $reldir = "." if $reldir eq '';
             foreach $path (@@opt_I) {
                 if ($path !~ m|^/|) {
@@@@ -417,12 +417,11 @@@@ if ($opt_V) {
         print STDERR "Built Environment:\n";
         print STDERR "    Host: ".'@@built_system@@'."\n";
         print STDERR "    Perl: ".'@@perlvers@@ (@@perlprog@@)'."\n";
-        print STDERR "    User: ".'@@built_user@@'."\n";
         print STDERR "    Date: ".'@@built_date@@'."\n";
         print STDERR "Built Location:\n";
         print STDERR "    Prefix: ".'@@prefix@@'."\n";
         print STDERR "    BinDir: ".'@@bindir@@'."\n";
-        print STDERR "    LibDir: ".'@@libdir@@'."\n";
+        print STDERR "    LibDir: ".'@@datadir@@'."\n";
         print STDERR "    ManDir: ".'@@mandir@@'."\n";
     }
     if ($opt_V > 2) {
@@@@ -477,7 +476,7 @@@@ if (not $src_istmp) {
     $reldir = $src;
     $reldir =~ s,(:?/|^)[^/]+$,,;
     ($cwd = Cwd::cwd) =~ s|/$||;
-    $reldir = File::PathConvert::abs2rel($cwd, "$cwd/$reldir");
+    $reldir = File::Spec::Functions::abs2rel($cwd, "$cwd/$reldir");
     $reldir = "." if $reldir eq '';
 }
 else {
@@@@ -958,7 +957,7 @@@@ else {
     if ($src =~ m|/|) {
         $src_dirname = $src;
         $src_dirname =~ s|/+[^/]*$||;
-        $src_dirname = File::PathConvert::realpath("$src_dirname");
+        $src_dirname = Cwd::abs_path("$src_dirname");
     }
     else {
         $src_dirname  = $cwd;
@@@@ -1004,6 +1003,7 @@@@ unshift(@@opt_D, "WML_GEN_HOSTNAME=$gen_hostname");
 unshift(@@opt_D, "WML_LOC_PREFIX=@@prefix@@");
 unshift(@@opt_D, "WML_LOC_BINDIR=@@bindir@@");
 unshift(@@opt_D, "WML_LOC_LIBDIR=@@libdir@@");
+unshift(@@opt_D, "WML_LOC_LIBEXECDIR=@@libdir@@/exec");
 unshift(@@opt_D, "WML_LOC_MANDIR=@@mandir@@");
 unshift(@@opt_D, "WML_VERSION=$VERSION");
 unshift(@@opt_D, "WML_TMPDIR=$tmpdir");
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- wml_frontend/wml.src.orig	Sun Apr 21 01:04:28 2002
+++ wml_frontend/wml.src	Sun Jun 25 12:01:07 2006
d63 1
a63 1
@@@@ -1004,6 +1003,7 @@@@ unshift(@@opt_D, "WML_GEN_HOSTNAME=$gen_h
@


1.1.1.1
log
@Initial import of wml-2.0.9.

WML is a free and extensible Webdesigner's off-line HTML generation
toolkit. It consists of a control frontend driving up to nine backends
in a sequential pass-oriented filtering scheme.  Each backend provides
one particular core language.  For maximum power WML additionally ships
with a well-suited set of include files which provide higher-level
features built on top of the backend core languages.  While not trivial
and idiot proof WML provides most of the core features real hackers
always wanted for HTML generation.

Lots of testing and feedback from steven@@. Thanks!
@
text
@@
