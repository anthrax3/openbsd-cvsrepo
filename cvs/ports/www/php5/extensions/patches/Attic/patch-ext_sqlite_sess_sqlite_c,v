head	1.1;
access;
symbols
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2007.06.17.07.54.58;	author sturm;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2007.06.17.07.54.58;	author sturm;	state Exp;
branches;
next	;

1.1.4.1
date	2007.06.17.07.55.52;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-ext_sqlite_sess_sqlite_c was initially added on branch OPENBSD_4_1.
@
text
@@


1.1.4.1
log
@assorted security patches, from debian
@
text
@a0 24
$OpenBSD$
--- ext/sqlite/sess_sqlite.c.orig	Sun Jan  1 13:50:14 2006
+++ ext/sqlite/sess_sqlite.c	Sun Jun 10 16:14:39 2007
@@@@ -31,6 +31,11 @@@@
 extern int sqlite_encode_binary(const unsigned char *in, int n, unsigned char *out);
 extern int sqlite_decode_binary(const unsigned char *in, unsigned char *out);
 
+#define php_sqlite_decode_binary(in, out)    (	\
+	(!in || !*in) ? 0 : \
+		sqlite_decode_binary((const unsigned char *)in, (unsigned char *)out) \
+)
+
 PS_FUNCS(sqlite);
 
 ps_module ps_mod_sqlite = {
@@@@ -111,7 +116,7 @@@@ PS_READ_FUNC(sqlite) 
 			if (rowdata[0] != NULL) {
 				*vallen = strlen(rowdata[0]);
 				*val = emalloc(*vallen);
-				*vallen = sqlite_decode_binary(rowdata[0], *val);
+				*vallen = php_sqlite_decode_binary(rowdata[0], *val);
 				(*val)[*vallen] = '\0';
 			}
 			break;
@


1.1.2.1
log
@assorted security patches, from debian
@
text
@a0 24
$OpenBSD$
--- ext/sqlite/sess_sqlite.c.orig	Sun Jan  1 13:50:14 2006
+++ ext/sqlite/sess_sqlite.c	Sun Jun 10 16:14:39 2007
@@@@ -31,6 +31,11 @@@@
 extern int sqlite_encode_binary(const unsigned char *in, int n, unsigned char *out);
 extern int sqlite_decode_binary(const unsigned char *in, unsigned char *out);
 
+#define php_sqlite_decode_binary(in, out)    (	\
+	(!in || !*in) ? 0 : \
+		sqlite_decode_binary((const unsigned char *)in, (unsigned char *)out) \
+)
+
 PS_FUNCS(sqlite);
 
 ps_module ps_mod_sqlite = {
@@@@ -111,7 +116,7 @@@@ PS_READ_FUNC(sqlite) 
 			if (rowdata[0] != NULL) {
 				*vallen = strlen(rowdata[0]);
 				*val = emalloc(*vallen);
-				*vallen = sqlite_decode_binary(rowdata[0], *val);
+				*vallen = php_sqlite_decode_binary(rowdata[0], *val);
 				(*val)[*vallen] = '\0';
 			}
 			break;
@

