head	1.4;
access;
symbols
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.07.09.00.28.53;	author robert;	state dead;
branches;
next	1.3;

1.3
date	2011.06.18.19.49.22;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.03.15.03.03;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.10.22.07.22;	author robert;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2009.07.19.02.11.36;	author william;	state Exp;
branches;
next	;


desc
@@


1.4
log
@bye bye
@
text
@$OpenBSD: patch-sapi_cli_php_cli_c,v 1.3 2011/06/18 19:49:22 sthen Exp $
--- sapi/cli/php_cli.c.orig.port	Sat Jun 18 12:14:53 2011
+++ sapi/cli/php_cli.c	Sat Jun 18 12:14:57 2011
@@@@ -636,6 +636,7 @@@@ int main(int argc, char *argv[])
 	char *exec_direct=NULL, *exec_run=NULL, *exec_begin=NULL, *exec_end=NULL;
 	const char *param_error=NULL;
 	int hide_argv = 0;
+	char *ini;
 /* end of temporary locals */
 #ifdef ZTS
 	void ***tsrm_ls;
@@@@ -679,7 +680,11 @@@@ int main(int argc, char *argv[])
 #endif
 
 	cli_sapi_module.ini_defaults = sapi_cli_ini_defaults;
-	cli_sapi_module.php_ini_path_override = NULL;
+	if ((ini = getenv("PHP_INI_PATH"))) {
+		cli_sapi_module.php_ini_path_override = strdup(ini);
+	} else {
+		cli_sapi_module.php_ini_path_override = NULL;
+	}
 	cli_sapi_module.phpinfo_as_text = 1;
 	sapi_startup(&cli_sapi_module);
 
@


1.3
log
@Use PATCHORIG, regen patches and rename the files which didn't match the
normal update-patches filenames. This avoids update-patches picking up the
.orig files in PHP distfiles and make it easier to keep in-sync. ok robert@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to 5.2.16
@
text
@d1 3
a3 3
$OpenBSD: patch-sapi_cli_php_cli_c,v 1.1 2009/03/10 22:07:22 robert Exp $
--- sapi/cli/php_cli.c.orig	Mon Jan  3 14:34:43 2011
+++ sapi/cli/php_cli.c	Mon Jan  3 14:34:43 2011
@


1.1
log
@Add an environment variable called PHP_INI_PATH so people can set a path
to their php.ini file in a SAPI independent way. This way can easily run
more instances of httpd with different php configs.
Idea after a discussion with "L. V. Lammert" <lvl@@omnitec.net>
@
text
@d1 4
a4 4
$OpenBSD$
--- sapi/cli/php_cli.c.orig	Tue Mar 10 17:02:10 2009
+++ sapi/cli/php_cli.c	Tue Mar 10 19:32:00 2009
@@@@ -604,6 +604,7 @@@@ int main(int argc, char *argv[])
d12 1
a12 1
@@@@ -647,7 +648,11 @@@@ int main(int argc, char *argv[])
@


1.1.4.1
log
@MFC:

SECURITY FIX

php5-5.2.10

Resolves:

- bug #48378 (exif_read_data() segfaults on certain corrupted .jpeg files)
- in imagerotate(), background colour isn't validated correctly with a
non-truecolour image (CVE-2008-5498)
- crash on extract in zip when files or directories entry names contain a
relative path
- explode() behavior with empty string to respect negative limit
- segfault when malformed string is passed to json_decode()
- bug in xml_error_string() which resulted in messages being off by one

ok robert@@
@
text
@d1 1
a1 1
$OpenBSD: patch-sapi_cli_php_cli_c,v 1.1 2009/03/10 22:07:22 robert Exp $
@

