head	1.3;
access;
symbols
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2011.06.18.19.49.22;	author sthen;	state dead;
branches;
next	1.2;

1.2
date	2011.01.03.15.03.03;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.10.22.07.22;	author robert;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2009.07.19.02.11.36;	author william;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Use PATCHORIG, regen patches and rename the files which didn't match the
normal update-patches filenames. This avoids update-patches picking up the
.orig files in PHP distfiles and make it easier to keep in-sync. ok robert@@
@
text
@--- sapi/cgi/cgi_main.c.orig	Mon Jan  3 14:34:43 2011
+++ sapi/cgi/cgi_main.c	Mon Jan  3 14:34:43 2011
@@@@ -1327,7 +1327,7 @@@@ int main(int argc, char *argv[])
 	char *orig_optarg = php_optarg;
 	char *script_file = NULL;
 	int ini_entries_len = 0;
-
+	char *ini;
 /* end of temporary locals */
 #ifdef ZTS
 	void ***tsrm_ls;
@@@@ -1379,8 +1379,12 @@@@ int main(int argc, char *argv[])
 	tsrm_ls = ts_resource(0);
 #endif
 
+	if ((ini = getenv("PHP_INI_PATH"))) {
+		cgi_sapi_module.php_ini_path_override = ini;
+	} else {
+		cgi_sapi_module.php_ini_path_override = NULL;
+	}
 	sapi_startup(&cgi_sapi_module);
-	cgi_sapi_module.php_ini_path_override = NULL;
 
 #ifdef PHP_WIN32
 	_fmode = _O_BINARY; /* sets default for file streams to binary */
@


1.2
log
@Update to 5.2.16
@
text
@@


1.1
log
@Add an environment variable called PHP_INI_PATH so people can set a path
to their php.ini file in a SAPI independent way. This way can easily run
more instances of httpd with different php configs.
Idea after a discussion with "L. V. Lammert" <lvl@@omnitec.net>
@
text
@d1 3
a3 3
--- sapi/cgi/cgi_main.c.orig	Tue Mar 10 20:48:33 2009
+++ sapi/cgi/cgi_main.c	Tue Mar 10 21:02:07 2009
@@@@ -1323,7 +1323,7 @@@@ int main(int argc, char *argv[])
d12 1
a12 1
@@@@ -1375,8 +1375,12 @@@@ int main(int argc, char *argv[])
@


1.1.4.1
log
@MFC:

SECURITY FIX

php5-5.2.10

Resolves:

- bug #48378 (exif_read_data() segfaults on certain corrupted .jpeg files)
- in imagerotate(), background colour isn't validated correctly with a
non-truecolour image (CVE-2008-5498)
- crash on extract in zip when files or directories entry names contain a
relative path
- explode() behavior with empty string to respect negative limit
- segfault when malformed string is passed to json_decode()
- bug in xml_error_string() which resulted in messages being off by one

ok robert@@
@
text
@@

