head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2010.08.24.09.14.43;	author robert;	state dead;
branches;
next	1.1;

1.1
date	2010.08.08.10.46.34;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to 5.2.14
@
text
@$OpenBSD: patch-ext_spl_spl_observer_c,v 1.1 2010/08/08 10:46:34 sthen Exp $

CVE-2010-2225: fix SplObjectStorage unserialization, upstream r300843

--- ext/spl/spl_observer.c.orig	Sun Jan  3 09:23:27 2010
+++ ext/spl/spl_observer.c	Sat Aug  7 21:22:09 2010
@@@@ -182,6 +182,21 @@@@ SPL_METHOD(SplObjectStorage, detach)
 	intern->index = 0;
 } /* }}} */
 
+int spl_object_storage_contains(spl_SplObjectStorage *intern, zval *obj TSRMLS_DC) /* {{{ */
+{
+#if HAVE_PACKED_OBJECT_VALUE
+	return zend_hash_exists(&intern->storage, (char*)&Z_OBJVAL_P(obj), sizeof(zend_object_value));
+#else
+	{
+		zend_object_value zvalue;
+		memset(&zvalue, 0, sizeof(zend_object_value));
+		zvalue.handle = Z_OBJ_HANDLE_P(obj);
+		zvalue.handlers = Z_OBJ_HT_P(obj);
+		return zend_hash_exists(&intern->storage, (char*)&zvalue, sizeof(zend_object_value));
+	}
+#endif
+} /* }}} */
+
 /* {{{ proto bool SplObjectStorage::contains($obj)
  Determine whethe an object is contained in the storage */
 SPL_METHOD(SplObjectStorage, contains)
@@@@ -193,17 +208,7 @@@@ SPL_METHOD(SplObjectStorage, contains)
 		return;
 	}
 
-#if HAVE_PACKED_OBJECT_VALUE
-	RETURN_BOOL(zend_hash_exists(&intern->storage, (char*)&Z_OBJVAL_P(obj), sizeof(zend_object_value)));
-#else
-	{
-		zend_object_value zvalue;
-		memset(&zvalue, 0, sizeof(zend_object_value));
-		zvalue.handle = Z_OBJ_HANDLE_P(obj);
-		zvalue.handlers = Z_OBJ_HT_P(obj);
-		RETURN_BOOL(zend_hash_exists(&intern->storage, (char*)&zvalue, sizeof(zend_object_value)));
-	}
-#endif
+	RETURN_BOOL(spl_object_storage_contains(intern, obj TSRMLS_CC));
 } /* }}} */
 
 /* {{{ proto int SplObjectStorage::count()
@@@@ -362,10 +367,21 @@@@ SPL_METHOD(SplObjectStorage, unserialize)
 			goto outexcept;
 		}
 		++p;
+		if(*p != 'O' && *p != 'C' && *p != 'r') {
+			goto outexcept;
+		}
 		ALLOC_INIT_ZVAL(pentry);
 		if (!php_var_unserialize(&pentry, &p, s + buf_len, &var_hash TSRMLS_CC)) {
 			zval_ptr_dtor(&pentry);
 			goto outexcept;
+		}
+		if(Z_TYPE_P(pentry) != IS_OBJECT) {
+			zval_ptr_dtor(&pentry);
+			goto outexcept;
+		}
+		if(spl_object_storage_contains(intern, pentry TSRMLS_CC)) {
+			zval_ptr_dtor(&pentry);
+			continue;
 		}
 		spl_object_storage_attach(intern, pentry TSRMLS_CC);
 		zval_ptr_dtor(&pentry);
@


1.1
log
@SECURITY: limited fixes cherry picked from 5.2.14.  If upstream had
mentioned the release on their announcements list maybe we would have
had time to get the full update in but, as it is, we just found out
about it and there are too many changes to test properly at short
notice, so we are just fixing these for now.

CVE-2010-2225: fix SplObjectStorage unserialization, upstream r300843

CVE-2010-0397: null pointer dereference when processing invalid XML-RPC
requests, upstream r296152

ok espie@@
@
text
@d1 1
a1 1
$OpenBSD$
@

