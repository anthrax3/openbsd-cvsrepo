head	1.1;
access;
symbols
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2007.06.17.07.54.58;	author sturm;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2007.06.17.07.54.58;	author sturm;	state Exp;
branches;
next	;

1.1.4.1
date	2007.06.17.07.55.52;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-Zend_zend_hash_c was initially added on branch OPENBSD_4_1.
@
text
@@


1.1.4.1
log
@assorted security patches, from debian
@
text
@a0 23
$OpenBSD$
--- Zend/zend_hash.c.orig	Fri Apr  7 12:06:21 2006
+++ Zend/zend_hash.c	Sun Jun 10 19:41:35 2007
@@@@ -141,11 +141,16 @@@@ ZEND_API int _zend_hash_init(HashTable *
 
 	SET_INCONSISTENT(HT_OK);
 
-	while ((1U << i) < nSize) {
-		i++;
+	if (nSize >= 0x80000000) {
+		/* prevent overflow */
+		ht->nTableSize = 0x80000000;
+	} else {
+		while ((1U << i) < nSize) {
+			i++;
+		}
+		ht->nTableSize = 1 << i;
 	}
 
-	ht->nTableSize = 1 << i;
 	ht->nTableMask = ht->nTableSize - 1;
 	ht->pDestructor = pDestructor;
 	ht->arBuckets = NULL;
@


1.1.2.1
log
@assorted security patches, from debian
@
text
@a0 23
$OpenBSD$
--- Zend/zend_hash.c.orig	Sun Jun 10 18:10:52 2007
+++ Zend/zend_hash.c	Sun Jun 10 18:10:52 2007
@@@@ -324,11 +324,16 @@@@ ZEND_API int _zend_hash_init(HashTable *
 
 	SET_INCONSISTENT(HT_OK);
 
-	while ((1U << i) < nSize) {
-		i++;
+	if (nSize >= 0x80000000) {
+		/* prevent overflow */
+		ht->nTableSize = 0x80000000;
+	} else {
+		while ((1U << i) < nSize) {
+			i++;
+		}
+		ht->nTableSize = 1 << i;
 	}
 
-	ht->nTableSize = 1 << i;
 	ht->nTableMask = ht->nTableSize - 1;
 	ht->pDestructor = pDestructor;
 	zend_hash_add_destructor(pDestructor);
@

