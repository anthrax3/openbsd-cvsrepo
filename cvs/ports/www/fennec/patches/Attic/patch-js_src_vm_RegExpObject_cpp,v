head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.12.07.12.50.16;	author landry;	state dead;
branches;
next	1.1;

1.1
date	2012.02.20.20.21.43;	author landry;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove devel/xulrunner/1.9, www/fennec, www/firefox36 and productivity/sunbird

- nothing uses xulrunner 1.9 anymore, and that branch was EOL'd upstream
  20 months ago (firefox36 was already unlinked from the build)
- www/fennec as a xul app is dead upstream, since now firefox mobile is
  built on top of java android libs and thus unportable to regular OS.
The esr10 branch from which it was built upon was EOL'd upstream 10 months ago
- productivity/sunbird as a standalone app is dead upstream since 3
  years, hypothetical users should just use thunderbird+lightning which
is still supported/developed.

No complains from ports@@, this will allow for a serious mozilla ports
cleanup, and we're down to 5 mozillas in the ports tree.
@
text
@$OpenBSD: patch-js_src_vm_RegExpObject_cpp,v 1.1 2012/02/20 20:21:43 landry Exp $
https://bug691898.bugzilla.mozilla.org/attachment.cgi?id=588391
use yarr interpreter on ppc
--- js/src/vm/RegExpObject.cpp.orig	Wed Jan 11 18:14:49 2012
+++ js/src/vm/RegExpObject.cpp	Mon Jan 16 17:07:47 2012
@@@@ -251,7 +251,6 @@@@ Class js::RegExpClass = {
     NULL                     /* trace */
 };
 
-#if ENABLE_YARR_JIT
 void
 RegExpPrivateCode::reportYarrError(JSContext *cx, TokenStream *ts, ErrorCode error)
 {
@@@@ -282,41 +281,6 @@@@ RegExpPrivateCode::reportYarrError(JSContext *cx, Toke
         JS_NOT_REACHED("Unknown Yarr error code");
     }
 }
-
-#else /* !ENABLE_YARR_JIT */
-
-void
-RegExpPrivateCode::reportPCREError(JSContext *cx, int error)
-{
-#define REPORT(msg_) \
-    JS_ReportErrorFlagsAndNumberUC(cx, JSREPORT_ERROR, js_GetErrorMessage, NULL, msg_); \
-    return
-    switch (error) {
-      case -2: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 0: JS_NOT_REACHED("Precondition violation: an error must have occurred."); 
-      case 1: REPORT(JSMSG_TRAILING_SLASH);
-      case 2: REPORT(JSMSG_TRAILING_SLASH); 
-      case 3: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 4: REPORT(JSMSG_BAD_QUANTIFIER);
-      case 5: REPORT(JSMSG_BAD_QUANTIFIER);
-      case 6: REPORT(JSMSG_BAD_CLASS_RANGE);
-      case 7: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 8: REPORT(JSMSG_BAD_CLASS_RANGE);
-      case 9: REPORT(JSMSG_BAD_QUANTIFIER);
-      case 10: REPORT(JSMSG_UNMATCHED_RIGHT_PAREN);
-      case 11: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 12: REPORT(JSMSG_UNMATCHED_RIGHT_PAREN);
-      case 13: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 14: REPORT(JSMSG_MISSING_PAREN);
-      case 15: REPORT(JSMSG_BAD_BACKREF);
-      case 16: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      case 17: REPORT(JSMSG_REGEXP_TOO_COMPLEX);
-      default:
-        JS_NOT_REACHED("Precondition violation: unknown PCRE error code.");
-    }
-#undef REPORT
-}
-#endif /* ENABLE_YARR_JIT */
 
 bool
 js::ParseRegExpFlags(JSContext *cx, JSString *flagStr, RegExpFlag *flagsOut)
@


1.1
log
@Update to fennec/firefox mobile 10.0.2.
@
text
@d1 1
a1 1
$OpenBSD$
@

