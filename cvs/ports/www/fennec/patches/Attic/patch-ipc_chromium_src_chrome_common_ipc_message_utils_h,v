head	1.5;
access;
symbols
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.12.07.12.50.16;	author landry;	state dead;
branches;
next	1.4;

1.4
date	2012.02.20.20.21.43;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2012.01.11.02.17.13;	author nigel;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.28.13.09.26;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.28.22.01.18;	author landry;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove devel/xulrunner/1.9, www/fennec, www/firefox36 and productivity/sunbird

- nothing uses xulrunner 1.9 anymore, and that branch was EOL'd upstream
  20 months ago (firefox36 was already unlinked from the build)
- www/fennec as a xul app is dead upstream, since now firefox mobile is
  built on top of java android libs and thus unportable to regular OS.
The esr10 branch from which it was built upon was EOL'd upstream 10 months ago
- productivity/sunbird as a standalone app is dead upstream since 3
  years, hypothetical users should just use thunderbird+lightning which
is still supported/developed.

No complains from ports@@, this will allow for a serious mozilla ports
cleanup, and we're down to 5 mozillas in the ports tree.
@
text
@$OpenBSD: patch-ipc_chromium_src_chrome_common_ipc_message_utils_h,v 1.4 2012/02/20 20:21:43 landry Exp $
--- ipc/chromium/src/chrome/common/ipc_message_utils.h.orig	Wed Jan 11 18:14:43 2012
+++ ipc/chromium/src/chrome/common/ipc_message_utils.h	Sat Jan 14 20:21:44 2012
@@@@ -193,6 +193,29 @@@@ struct ParamTraits<unsigned long long> {
     l->append(StringPrintf(L"%ull", p));
   }
 };
+
+template <>
+struct ParamTraits<long long> {
+  typedef long long param_type;
+  static void Write(Message* m, const param_type& p) {
+    m->WriteData(reinterpret_cast<const char*>(&p), sizeof(param_type));
+ }
+  static bool Read(const Message* m, void** iter, param_type* r) {
+    const char *data;
+    int data_size = 0;
+    bool result = m->ReadData(iter, &data, &data_size);
+    if (result && data_size == sizeof(param_type)) {
+      memcpy(r, data, sizeof(param_type));
+    } else {
+      result = false;
+      NOTREACHED();
+    }
+    return result;
+  }
+  static void Log(const param_type& p, std::wstring* l) {
+    l->append(StringPrintf(L"%ull", p));
+  }
+};
 #endif
 
 #if !(defined(OS_MACOSX) || defined(OS_OPENBSD) || defined(OS_WIN) || (defined(OS_LINUX) && defined(ARCH_CPU_64_BITS)) || defined(ARCH_CPU_S390))
@


1.4
log
@Update to fennec/firefox mobile 10.0.2.
@
text
@d1 1
a1 1
$OpenBSD: patch-ipc_chromium_src_chrome_common_ipc_message_utils_h,v 1.3 2012/01/11 02:42:48 nigel Exp $
@


1.3
log
@Update fennec to 9.0
Change for macppc from mpi@@

Ok landry@@ stsp@@ mpi@@
@
text
@d1 3
a3 3
$OpenBSD: patch-ipc_chromium_src_chrome_common_ipc_message_utils_h,v 1.2 2011/10/28 13:09:26 robert Exp $
--- ipc/chromium/src/chrome/common/ipc_message_utils.h.orig	Wed Sep 28 22:24:48 2011
+++ ipc/chromium/src/chrome/common/ipc_message_utils.h	Fri Oct 28 14:46:29 2011
d33 1
a33 1
 #if !(defined(OS_MACOSX) || defined(OS_OPENBSD) || defined(OS_WIN) || (defined(OS_LINUX) && defined(ARCH_CPU_64_BITS)))
@


1.2
log
@fix after nspr fix and enable vswprintf support
@
text
@d1 1
a1 1
$OpenBSD: patch-ipc_chromium_src_chrome_common_ipc_message_utils_h,v 1.2 2011/10/28 13:01:13 robert Exp $
d4 2
a5 1
@@@@ -219,7 +219,7 @@@@ struct ParamTraits<unsigned long> {
d8 24
d33 1
a33 14
-#if !(defined(OS_MACOSX) || defined(OS_WIN) || (defined(CHROMIUM_MOZILLA_BUILD) && defined(OS_LINUX) && defined(ARCH_CPU_64_BITS)))
+#if !(defined(OS_MACOSX) || defined(OS_OPENBSD) || defined(OS_WIN) || (defined(CHROMIUM_MOZILLA_BUILD) && defined(OS_LINUX) && defined(ARCH_CPU_64_BITS)))
 // There size_t is a synonym for |unsigned long| ...
 template <>
 struct ParamTraits<size_t> {
@@@@ -272,7 +272,7 @@@@ struct ParamTraits<uint32> {
 };
 #endif  // defined(OS_MACOSX)
 
-#if !(defined(CHROMIUM_MOZILLA_BUILD) && defined(OS_LINUX) && defined(ARCH_CPU_64_BITS))
+#if !(defined(CHROMIUM_MOZILLA_BUILD) && defined(OS_LINUX) && defined(ARCH_CPU_64_BITS)) || defined(OS_OPENBSD)
 // int64 is |long int| on 64-bit systems, uint64 is |unsigned long|
 template <>
 struct ParamTraits<int64> {
@


1.1
log
@Update to fennec/firefox for mobile 5.0, sync patches from www/mozilla-firefox..
Tested on amd64 and macppc.
@
text
@d1 4
a4 4
$OpenBSD: patch-ipc_chromium_src_chrome_common_ipc_message_utils_h,v 1.1 2011/06/28 05:43:57 landry Exp $
--- ipc/chromium/src/chrome/common/ipc_message_utils.h.orig	Wed Jun 15 02:35:08 2011
+++ ipc/chromium/src/chrome/common/ipc_message_utils.h	Wed Jun 22 09:08:48 2011
@@@@ -219,7 +219,33 @@@@ struct ParamTraits<unsigned long> {
a8 26
+#if defined(OS_OPENBSD) && defined(ARCH_CPU_64_BITS)
+template <>
+struct ParamTraits<unsigned long long> {
+  typedef unsigned long long param_type;
+  static void Write(Message* m, const param_type& p) {
+    m->WriteData(reinterpret_cast<const char*>(&p), sizeof(param_type));
+  }
+  static bool Read(const Message* m, void** iter, param_type* r) {
+    const char *data;
+    int data_size = 0;
+    bool result = m->ReadData(iter, &data, &data_size);
+    if (result && data_size == sizeof(param_type)) {
+      memcpy(r, data, sizeof(param_type));
+    } else {
+      result = false;
+      NOTREACHED();
+    }
+
+    return result;
+  }
+  static void Log(const param_type& p, std::wstring* l) {
+    l->append(StringPrintf(L"%ull", p));
+  }
+};
+#endif
+
d13 9
@

