head	1.2;
access;
symbols
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.03.24.20.29.10;	author landry;	state dead;
branches;
next	1.1;
commitid	FxzszpQYc54YsvqM;

1.1
date	2014.04.21.20.46.57;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to icedtea-web 1.5.2.

Patches from kurt@@ merged upstream. Add shells/bash to bdep/rdep since the
launcher scripts are really too horrible.
See http://mail.openjdk.java.net/pipermail/distro-pkg-dev/2014-April/027133.html
for the 1.5.x first release and
http://mail.openjdk.java.net/pipermail/distro-pkg-dev/2014-November/030195.html
for this last one.

Tested with midori on http://javatester.org/version.html
@
text
@$OpenBSD: patch-plugin_icedteanp_IcedTeaPluginRequestProcessor_h,v 1.1 2014/04/21 20:46:57 kurt Exp $
--- plugin/icedteanp/IcedTeaPluginRequestProcessor.h.orig	Mon Apr 21 09:08:24 2014
+++ plugin/icedteanp/IcedTeaPluginRequestProcessor.h	Mon Apr 21 09:08:31 2014
@@@@ -69,15 +69,6 @@@@ void _loadURL(void* data);
 
 void* queue_processor(void* data);
 
-/* Mutex to ensure that the request queue is accessed synchronously */
-extern pthread_mutex_t message_queue_mutex;
-
-/* Mutex to ensure synchronized writes */
-extern pthread_mutex_t syn_write_mutex;
-
-/* Queue for holding messages that get processed in a separate thread */
-extern std::vector< std::vector<std::string*>* >* message_queue;
-
 /**
  * Processes requests made TO the plugin (by java or anyone else)
  */
@@@@ -85,9 +76,6 @@@@ class PluginRequestProcessor : public BusSubscriber
 {
     private:
 
-    	/* Requests that are still pending */
-    	std::map<pthread_t, uintmax_t>* pendingRequests;
-
     	/* Dispatch request processing to a new thread for asynch. processing */
     	void dispatch(void* func_ptr (void*), std::vector<std::string>* message, std::string* src);
 
@@@@ -124,6 +112,18 @@@@ class PluginRequestProcessor : public BusSubscriber
 
         /* Loads a URL into the specified target */
         void loadURL(std::vector<std::string*>* message_parts);
+
+        /* Mutex to ensure that the request queue is accessed synchronously */
+        pthread_mutex_t message_queue_mutex;
+
+        /* Condition on which the queue processor waits */
+        pthread_cond_t cond_message_available;
+
+        /* Queue for holding messages that get processed in a separate thread */
+        std::vector< std::vector<std::string*>* >* message_queue;
+
+        /* Mutex to ensure synchronized writes */
+        pthread_mutex_t syn_write_mutex;
 };
 
 #endif // __ICEDTEAPLUGINREQUESTPROCESSOR_H__
@


1.1
log
@- make the queue wait condition pthread_cancel(3) safe which fixes a
deadlock in webkit-gtk3 + icedtea-web
- further cleanups of related global mutexs and condition variables
okay ajacoutot@@, landry@@
@
text
@d1 1
a1 1
$OpenBSD$
@

