head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	jasper_20120309:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2016.01.07.21.35.29;	author jasper;	state Exp;
branches;
next	1.3;
commitid	yiDwkEx5qtLmvGpL;

1.3
date	2015.04.02.14.21.18;	author jasper;	state Exp;
branches;
next	1.2;
commitid	4Dkfcsk2uZtFDSwy;

1.2
date	2013.03.11.11.44.48;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2012.09.03.15.09.10;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.09.03.15.09.10;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.4
log
@bump ports that now have a pypi homepage
@
text
@# $OpenBSD: Makefile,v 1.3 2015/04/02 14:21:18 jasper Exp $

COMMENT =		high-level cross-protocol url-grabber

MODPY_EGG_VERSION =	3.9.1
DISTNAME =		urlgrabber-${MODPY_EGG_VERSION}
PKGNAME =		py-urlgrabber-${MODPY_EGG_VERSION}
REVISION =		0

CATEGORIES =		www

# LGPLv2.1
PERMIT_PACKAGE_CDROM =	Yes

MODPY_PI =		Yes

MODULES =		lang/python

BUILD_DEPENDS =		${RUN_DEPENDS}
RUN_DEPENDS =		net/py-curl

.include <bsd.port.mk>
@


1.3
log
@- switch to MODPY_PI
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/03/11 11:44:48 espie Exp $
d8 1
@


1.2
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2012/09/03 15:09:10 jasper Exp $
d14 1
a14 1
MASTER_SITES =		${MASTER_SITE_PYPI:=u/urlgrabber/}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
a12 3
PERMIT_PACKAGE_FTP =	Yes
PERMIT_DISTFILES_CDROM = Yes
PERMIT_DISTFILES_FTP =	Yes
@


1.1.1.1
log
@import py-urlgrabber 3.9.1

High-level cross-protocol url-grabber.

Using urlgrabber, data can be fetched in three basic ways:

  urlgrab(url) copy the file to the local filesystem
  urlopen(url) open the remote file and return a file object
     (like urllib2.urlopen)
  urlread(url) return the contents of the file as a string

ok aja@@
@
text
@@
