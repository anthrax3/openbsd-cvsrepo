head	1.4;
access;
symbols
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.11.25.17.00.47;	author stsp;	state dead;
branches
	1.4.2.1
	1.4.4.1;
next	1.3;

1.3
date	2013.10.09.12.54.17;	author stsp;	state Exp;
branches;
next	1.2;

1.2
date	2011.09.01.13.40.09;	author giovanni;	state dead;
branches;
next	1.1;

1.1
date	2011.02.12.21.05.38;	author pea;	state Exp;
branches;
next	;

1.4.2.1
date	2014.04.12.16.39.34;	author stsp;	state Exp;
branches;
next	;

1.4.4.1
date	2014.04.12.16.40.26;	author stsp;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to Apache HTTPD 2.2.26. Mostly rolls in patches we had already.
@
text
@$OpenBSD: patch-modules_dav_main_util_c,v 1.3 2013/10/09 12:54:17 stsp Exp $
https://issues.apache.org/bugzilla/show_bug.cgi?id=55306
http://svn.apache.org/viewvc?view=revision&revision=1528718
--- modules/dav/main/util.c.orig	Fri Jun 28 00:35:39 2013
+++ modules/dav/main/util.c	Wed Oct  9 14:24:32 2013
@@@@ -929,13 +929,16 @@@@ static dav_error * dav_validate_resource_state(apr_poo
         /*
         ** For methods other than LOCK:
         **
-        ** If we have no locks, then <seen_locktoken> can be set to true --
+        ** If we have no locks or if the resource is not being modified
+        ** (per RFC 4918 the lock token is not required on resources
+        ** we are not changing), then <seen_locktoken> can be set to true --
         ** pretending that we've already met the requirement of seeing one
         ** of the resource's locks in the If: header.
         **
         ** Otherwise, it must be cleared and we'll look for one.
         */
-        seen_locktoken = (lock_list == NULL);
+        seen_locktoken = (lock_list == NULL
+                          || flags & DAV_VALIDATE_NO_MODIFY);
     }
 
     /*
@


1.4.4.1
log
@For 5.5-stable, patch www/apache-httpd for CVE-2014-0098 and CVE-2013-6438.
ok jasper@@
@
text
@d1 3
a3 2
$OpenBSD$
CVE-2013-6438
d5 18
a22 2
+++ modules/dav/main/util.c	Thu Apr 10 00:52:21 2014
@@@@ -372,8 +372,10 @@@@ DAV_DECLARE(const char *) dav_xml_get_cdata(const apr_
d24 1
a24 10
     if (strip_white) {
         /* trim leading whitespace */
-        while (apr_isspace(*cdata))     /* assume: return false for '\0' */
+        while (apr_isspace(*cdata)) {     /* assume: return false for '\0' */
             ++cdata;
+            --len;
+        }
 
         /* trim trailing whitespace */
         while (len-- > 0 && apr_isspace(cdata[len]))
@


1.4.2.1
log
@For 5.4-stable, patch www/apache-httpd for CVE-2014-0098 and CVE-2013-6438.
ok jasper@@
@
text
@d1 3
a3 2
$OpenBSD$
CVE-2013-6438
d5 18
a22 2
+++ modules/dav/main/util.c	Thu Apr 10 00:52:21 2014
@@@@ -372,8 +372,10 @@@@ DAV_DECLARE(const char *) dav_xml_get_cdata(const apr_
d24 1
a24 10
     if (strip_white) {
         /* trim leading whitespace */
-        while (apr_isspace(*cdata))     /* assume: return false for '\0' */
+        while (apr_isspace(*cdata)) {     /* assume: return false for '\0' */
             ++cdata;
+            --len;
+        }
 
         /* trim trailing whitespace */
         while (len-- > 0 && apr_isspace(cdata[len]))
@


1.3
log
@Add patches from upstream to fix regressions in mod_dav since httpd-2.2.25.
Unbreaks 'svn copy URL1 URL2' and restores compliance with RFC 4918 (WebDAV).
See https://issues.apache.org/bugzilla/show_bug.cgi?id=55304
and https://issues.apache.org/bugzilla/show_bug.cgi?id=55306
ok sthen
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@
Update to latest version, fixes CVE-2011-3192
ok fkr@@
@
text
@d1 22
a22 7
$OpenBSD: patch-modules_dav_main_util_c,v 1.1 2011/02/12 21:05:38 pea Exp $

Fix CVE-2010-1452

--- modules/dav/main/util.c.orig	Sat Jan  5 10:45:07 2008
+++ modules/dav/main/util.c	Tue Feb  8 11:56:28 2011
@@@@ -624,7 +624,8 @@@@ static dav_error * dav_process_if_header(request_rec *
d24 1
a24 8
             /* 2518 specifies this must be an absolute URI; just take the
              * relative part for later comparison against r->uri */
-            if (apr_uri_parse(r->pool, uri, &parsed_uri) != APR_SUCCESS) {
+            if (apr_uri_parse(r->pool, uri, &parsed_uri) != APR_SUCCESS
+                || !parsed_uri.path) {
                 return dav_new_error(r->pool, HTTP_BAD_REQUEST,
                                      DAV_ERR_IF_TAGGED,
                                      "Invalid URI in tagged If-header.");
@


1.1
log
@Fix CVE-2010-1452

ok sthen@@, landry@@
@
text
@d1 1
a1 1
$OpenBSD$
@

