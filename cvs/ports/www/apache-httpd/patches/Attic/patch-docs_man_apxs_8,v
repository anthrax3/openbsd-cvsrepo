head	1.5;
access;
symbols
	OPENBSD_5_7:1.4.0.12
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.10
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.20
	OPENBSD_5_0:1.2.0.18
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.16
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.14
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.12
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.10
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2015.05.15.08.08.04;	author stsp;	state dead;
branches;
next	1.4;
commitid	Cjn8n79ocvk9kzM0;

1.4
date	2012.10.18.08.12.17;	author giovanni;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2012.07.18.08.45.42;	author sthen;	state dead;
branches;
next	1.2;

1.2
date	2007.03.25.17.40.55;	author deanna;	state Exp;
branches;
next	1.1;

1.1
date	2007.01.16.01.12.26;	author deanna;	state Exp;
branches;
next	;

1.4.2.1
date	2012.11.06.16.24.11;	author giovanni;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update www/apache-httpd to 2.4.12.
Manual configuration updates might be required, see
http://httpd.apache.org/docs/2.4/upgrading.html
MPMs can now be loaded at runtime. The default config keeps using 'prefork'.
Based on an initial diff by claudio@@
ok sthen@@ ajacoutot@@
@
text
@$OpenBSD: patch-docs_man_apxs_8,v 1.4 2012/10/18 08:12:17 giovanni Exp $
--- docs/man/apxs.8.orig	Thu Sep 20 10:02:17 2012
+++ docs/man/apxs.8	Thu Sep 20 10:04:53 2012
@@@@ -19,36 +19,36 @@@@
 .el .ne 3
 .IP "\\$1" \\$2
 ..
-.TH "APXS" 8 "2012-03-21" "Apache HTTP Server" "apxs"
+.TH "APXS2" 8 "2012-03-21" "Apache HTTP Server" "apxs2"
 
 .SH NAME
-apxs \- APache eXtenSion tool
+apxs2 \- APache eXtenSion tool
 
 .SH "SYNOPSIS"
  
 .PP
-\fBapxs\fR -\fBg\fR [ -\fBS\fR \fIname\fR=\fIvalue\fR ] -\fBn\fR \fImodname\fR
+\fBapxs2\fR -\fBg\fR [ -\fBS\fR \fIname\fR=\fIvalue\fR ] -\fBn\fR \fImodname\fR
  
 .PP
-\fBapxs\fR -\fBq\fR [ -\fBS\fR \fIname\fR=\fIvalue\fR ] \fIquery\fR \&.\&.\&.
+\fBapxs2\fR -\fBq\fR [ -\fBS\fR \fIname\fR=\fIvalue\fR ] \fIquery\fR \&.\&.\&.
  
 .PP
-\fBapxs\fR -\fBc\fR [ -\fBS\fR \fIname\fR=\fIvalue\fR ] [ -\fBo\fR \fIdsofile\fR ] [ -\fBI\fR \fIincdir\fR ] [ -\fBD\fR \fIname\fR=\fIvalue\fR ] [ -\fBL\fR \fIlibdir\fR ] [ -\fBl\fR \fIlibname\fR ] [ -\fBWc,\fR\fIcompiler-flags\fR ] [ -\fBWl,\fR\fIlinker-flags\fR ] \fIfiles\fR \&.\&.\&.
+\fBapxs2\fR -\fBc\fR [ -\fBS\fR \fIname\fR=\fIvalue\fR ] [ -\fBo\fR \fIdsofile\fR ] [ -\fBI\fR \fIincdir\fR ] [ -\fBD\fR \fIname\fR=\fIvalue\fR ] [ -\fBL\fR \fIlibdir\fR ] [ -\fBl\fR \fIlibname\fR ] [ -\fBWc,\fR\fIcompiler-flags\fR ] [ -\fBWl,\fR\fIlinker-flags\fR ] \fIfiles\fR \&.\&.\&.
  
 .PP
-\fBapxs\fR -\fBi\fR [ -\fBS\fR \fIname\fR=\fIvalue\fR ] [ -\fBn\fR \fImodname\fR ] [ -\fBa\fR ] [ -\fBA\fR ] \fIdso-file\fR \&.\&.\&.
+\fBapxs2\fR -\fBi\fR [ -\fBS\fR \fIname\fR=\fIvalue\fR ] [ -\fBn\fR \fImodname\fR ] [ -\fBa\fR ] [ -\fBA\fR ] \fIdso-file\fR \&.\&.\&.
  
 .PP
-\fBapxs\fR -\fBe\fR [ -\fBS\fR \fIname\fR=\fIvalue\fR ] [ -\fBn\fR \fImodname\fR ] [ -\fBa\fR ] [ -\fBA\fR ] \fIdso-file\fR \&.\&.\&.
+\fBapxs2\fR -\fBe\fR [ -\fBS\fR \fIname\fR=\fIvalue\fR ] [ -\fBn\fR \fImodname\fR ] [ -\fBa\fR ] [ -\fBA\fR ] \fIdso-file\fR \&.\&.\&.
  
 
 .SH "SUMMARY"
  
 .PP
-apxs is a tool for building and installing extension modules for the Apache HyperText Transfer Protocol (HTTP) server\&. This is achieved by building a dynamic shared object (DSO) from one or more source or object \fIfiles\fR which then can be loaded into the Apache server under runtime via the LoadModule directive from mod_so\&.
+apxs2 is a tool for building and installing extension modules for the Apache HyperText Transfer Protocol (HTTP) server\&. This is achieved by building a dynamic shared object (DSO) from one or more source or object \fIfiles\fR which then can be loaded into the Apache server under runtime via the LoadModule directive from mod_so\&.
  
 .PP
-So to use this extension mechanism your platform has to support the DSO feature and your Apache httpd binary has to be built with the mod_so module\&. The apxs tool automatically complains if this is not the case\&. You can check this yourself by manually running the command
+So to use this extension mechanism your platform has to support the DSO feature and your Apache httpd binary has to be built with the mod_so module\&. The apxs2 tool automatically complains if this is not the case\&. You can check this yourself by manually running the command
  
 .nf
 
@@@@ -57,26 +57,26 @@@@ So to use this extension mechanism your platform has t
 .fi
  
 .PP
-The module mod_so should be part of the displayed list\&. If these requirements are fulfilled you can easily extend your Apache server's functionality by installing your own modules with the DSO mechanism by the help of this apxs tool:
+The module mod_so should be part of the displayed list\&. If these requirements are fulfilled you can easily extend your Apache server's functionality by installing your own modules with the DSO mechanism by the help of this apxs2 tool:
  
 .nf
 
-      $ apxs -i -a -c mod_foo\&.c
+      $ apxs2 -i -a -c mod_foo\&.c
       gcc -fpic -DSHARED_MODULE -I/path/to/apache/include -c mod_foo\&.c
       ld -Bshareable -o mod_foo\&.so mod_foo\&.o
       cp mod_foo\&.so /path/to/apache/modules/mod_foo\&.so
       chmod 755 /path/to/apache/modules/mod_foo\&.so
       [activating module `foo' in /path/to/apache/etc/httpd\&.conf]
-      $ apachectl restart
-      /path/to/apache/sbin/apachectl restart: httpd not running, trying to start
+      $ apachectl2 restart
+      /path/to/apache/sbin/apachectl2 restart: httpd2 not running, trying to start
       [Tue Mar 31 11:27:55 1998] [debug] mod_so\&.c(303): loaded module foo_module
-      /path/to/apache/sbin/apachectl restart: httpd started
+      /path/to/apache/sbin/apachectl2 restart: httpd2 started
       $ _
     
 .fi
  
 .PP
-The arguments \fIfiles\fR can be any C source file (\&.c), a object file (\&.o) or even a library archive (\&.a)\&. The apxs tool automatically recognizes these extensions and automatically used the C source files for compilation while just using the object and archive files for the linking phase\&. But when using such pre-compiled objects make sure they are compiled for position independent code (PIC) to be able to use them for a dynamically loaded shared object\&. For instance with GCC you always just have to use -fpic\&. For other C compilers consult its manual page or at watch for the flags apxs uses to compile the object files\&.
+The arguments \fIfiles\fR can be any C source file (\&.c), a object file (\&.o) or even a library archive (\&.a)\&. The apxs2 tool automatically recognizes these extensions and automatically used the C source files for compilation while just using the object and archive files for the linking phase\&. But when using such pre-compiled objects make sure they are compiled for position independent code (PIC) to be able to use them for a dynamically loaded shared object\&. For instance with GCC you always just have to use -fpic\&. For other C compilers consult its manual page or at watch for the flags apxs2 uses to compile the object files\&.
  
 .PP
 For more details about DSO support in Apache read the documentation of mod_so or perhaps even read the src/modules/standard/mod_so\&.c source file\&.
@@@@ -89,28 +89,28 @@@@ For more details about DSO support in Apache read the 
  
 .TP
 -n \fImodname\fR
-This explicitly sets the module name for the -i (install) and -g (template generation) option\&. Use this to explicitly specify the module name\&. For option -g this is required, for option -i the apxs tool tries to determine the name from the source or (as a fallback) at least by guessing it from the filename\&.  
+This explicitly sets the module name for the -i (install) and -g (template generation) option\&. Use this to explicitly specify the module name\&. For option -g this is required, for option -i the apxs2 tool tries to determine the name from the source or (as a fallback) at least by guessing it from the filename\&.  
   
 .SS "Query Options"
  
  
 .TP
 -q
-Performs a query for apxs's knowledge about certain settings\&. The \fIquery\fR parameters can be one or more of the following strings: CC, CFLAGS, CFLAGS_SHLIB, INCLUDEDIR, LD_SHLIB, LDFLAGS_SHLIB, LIBEXECDIR, LIBS_SHLIB, SBINDIR, SYSCONFDIR, TARGET\&. .PP Use this for manually determining settings\&. For instance use INC=-I`apxs -q INCLUDEDIR` .PP inside your own Makefiles if you need manual access to Apache's C header files\&.  
+Performs a query for apxs2's knowledge about certain settings\&. The \fIquery\fR parameters can be one or more of the following strings: CC, CFLAGS, CFLAGS_SHLIB, INCLUDEDIR, LD_SHLIB, LDFLAGS_SHLIB, LIBEXECDIR, LIBS_SHLIB, SBINDIR, SYSCONFDIR, TARGET\&. .PP Use this for manually determining settings\&. For instance use INC=-I`apxs2 -q INCLUDEDIR` .PP inside your own Makefiles if you need manual access to Apache's C header files\&.  
   
 .SS "Configuration Options"
  
  
 .TP
 -S \fIname\fR=\fIvalue\fR
-This option changes the apxs settings described above\&.  
+This option changes the apxs2 settings described above\&.  
   
 .SS "Template Generation Options"
  
  
 .TP
 -g
-This generates a subdirectory \fIname\fR (see option -n) and there two files: A sample module source file named mod_\fIname\fR\&.c which can be used as a template for creating your own modules or as a quick start for playing with the apxs mechanism\&. And a corresponding Makefile for even easier build and installing of this module\&.  
+This generates a subdirectory \fIname\fR (see option -n) and there two files: A sample module source file named mod_\fIname\fR\&.c which can be used as a template for creating your own modules or as a quick start for playing with the apxs2 mechanism\&. And a corresponding Makefile for even easier build and installing of this module\&.  
   
 .SS "DSO Compilation Options"
  
@@@@ -163,7 +163,7 @@@@ Assume you have an Apache module named mod_foo\&.c ava
  
 .nf
 
-      $ apxs -c mod_foo\&.c
+      $ apxs2 -c mod_foo\&.c
       /path/to/libtool --mode=compile gcc \&.\&.\&. -c mod_foo\&.c
       /path/to/libtool --mode=link gcc \&.\&.\&. -o mod_foo\&.la mod_foo\&.slo
       $ _
@@@@ -171,11 +171,11 @@@@ Assume you have an Apache module named mod_foo\&.c ava
 .fi
  
 .PP
-Then you have to update the Apache configuration by making sure a LoadModule directive is present to load this shared object\&. To simplify this step apxs provides an automatic way to install the shared object in its "modules" directory and updating the httpd\&.conf file accordingly\&. This can be achieved by running:
+Then you have to update the Apache configuration by making sure a LoadModule directive is present to load this shared object\&. To simplify this step apxs2 provides an automatic way to install the shared object in its "modules" directory and updating the httpd\&.conf file accordingly\&. This can be achieved by running:
  
 .nf
 
-      $ apxs -i -a mod_foo\&.la
+      $ apxs2 -i -a mod_foo\&.la
       /path/to/instdso\&.sh mod_foo\&.la /path/to/apache/modules
       /path/to/libtool --mode=install cp mod_foo\&.la /path/to/apache/modules
       \&.\&.\&.
@@@@ -199,16 +199,16 @@@@ is added to the configuration file if still not presen
  
 .nf
 
-      $ apxs -i -A mod_foo\&.c
+      $ apxs2 -i -A mod_foo\&.c
     
 .fi
  
 .PP
-For a quick test of the apxs mechanism you can create a sample Apache module template plus a corresponding Makefile via:
+For a quick test of the apxs2 mechanism you can create a sample Apache module template plus a corresponding Makefile via:
  
 .nf
 
-      $ apxs -g -n foo
+      $ apxs2 -g -n foo
       Creating [DIR]  foo
       Creating [FILE] foo/Makefile
       Creating [FILE] foo/modules\&.mk
@@@@ -225,19 +225,19 @@@@ Then you can immediately compile this sample module in
 
       $ cd foo
       $ make all reload
-      apxs -c mod_foo\&.c
+      apxs2 -c mod_foo\&.c
       /path/to/libtool --mode=compile gcc \&.\&.\&. -c mod_foo\&.c
       /path/to/libtool --mode=link gcc \&.\&.\&. -o mod_foo\&.la mod_foo\&.slo
-      apxs -i -a -n "foo" mod_foo\&.la
+      apxs2 -i -a -n "foo" mod_foo\&.la
       /path/to/instdso\&.sh mod_foo\&.la /path/to/apache/modules
       /path/to/libtool --mode=install cp mod_foo\&.la /path/to/apache/modules
       \&.\&.\&.
       chmod 755 /path/to/apache/modules/mod_foo\&.so
       [activating module `foo' in /path/to/apache/conf/httpd\&.conf]
-      apachectl restart
-      /path/to/apache/sbin/apachectl restart: httpd not running, trying to start
+      apachectl2 restart
+      /path/to/apache/sbin/apachectl2 restart: httpd2 not running, trying to start
       [Tue Mar 31 11:27:55 1998] [debug] mod_so\&.c(303): loaded module foo_module
-      /path/to/apache/sbin/apachectl restart: httpd started
+      /path/to/apache/sbin/apachectl2 restart: httpd2 started
       $ _
     
 .fi
@


1.4
log
@
Update to 2.2.23, fixes CVE-2012-2687 and CVE-2012-0883.
ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.4.2.1
log
@
Update to 2.2.23, fixes CVE-2012-2687 and CVE-2012-0883.
ok sthen@@
Reminded by Rodolfo Gouveia
@
text
@@


1.3
log
@Update to the Apache HTTP server 2.2.22, the current release on the 2.2 branch.
Merged from diffs from myself, Rodolfo Gouveia and with an rc script from
giovanni@@.

This is a security update, fixing CVE-2011-3348, CVE-2011-3368, CVE-2011-3607,
CVE-2011-4317, CVE-2012-0021, CVE-2012-0031 and CVE-2012-0053.
@
text
@d1 4
a4 4
$OpenBSD: patch-docs_man_apxs_8,v 1.2 2007/03/25 17:40:55 deanna Exp $
--- docs/man/apxs.8.orig	Sat Nov 20 15:16:24 2004
+++ docs/man/apxs.8	Sun Mar 25 13:21:03 2007
@@@@ -19,64 +19,64 @@@@
d8 2
a9 2
-.TH "APXS" 8 "2004-10-01" "Apache HTTP Server" "apxs"
+.TH "APXS2" 8 "2004-10-01" "Apache HTTP Server" "apxs2"
d46 1
a46 1
+So to use this extension mechanism your platform has to support the DSO feature and your Apache httpd2 binary has to be built with the mod_so module\&. The apxs2 tool automatically complains if this is not the case\&. You can check this yourself by manually running the command
d50 1
a50 3
-      $ httpd -l
+      $ httpd2 -l
     
d65 1
a65 1
-      [activating module `foo' in /path/to/apache/etc/httpd\&.conf]
a67 1
+      [activating module `foo' in /path/to/apache/etc/httpd2\&.conf]
a115 16
@@@@ -148,13 +148,13 @@@@ This option passes \fIlinker-flags\fR as additional fl
 This indicates the installation operation and installs one or more dynamically shared objects into the server's \fImodules\fR directory\&.  
 .TP
 -a
-This activates the module by automatically adding a corresponding LoadModule line to Apache's httpd\&.conf configuration file, or by enabling it if it already exists\&.  
+This activates the module by automatically adding a corresponding LoadModule line to Apache's httpd2\&.conf configuration file, or by enabling it if it already exists\&.  
 .TP
 -A
 Same as option -a but the created LoadModule directive is prefixed with a hash sign (#), \fIi\&.e\&.\fR, the module is just prepared for later activation but initially disabled\&.  
 .TP
 -e
-This indicates the editing operation, which can be used with the -a and -A options similarly to the -i operation to edit Apache's httpd\&.conf configuration file without attempting to install the module\&.  
+This indicates the editing operation, which can be used with the -a and -A options similarly to the -i operation to edit Apache's httpd2\&.conf configuration file without attempting to install the module\&.  
   
 .SH "EXAMPLES"
  
d125 1
a125 1
@@@@ -171,16 +171,16 @@@@ Assume you have an Apache module named mod_foo\&.c ava
d130 1
a130 1
+Then you have to update the Apache configuration by making sure a LoadModule directive is present to load this shared object\&. To simplify this step apxs2 provides an automatic way to install the shared object in its "modules" directory and updating the httpd2\&.conf file accordingly\&. This can be achieved by running:
a138 6
       chmod 755 /path/to/apache/modules/mod_foo\&.so
-      [activating module `foo' in /path/to/apache/conf/httpd\&.conf]
+      [activating module `foo' in /path/to/apache/conf/httpd2\&.conf]
       $ _
     
 .fi
d173 1
a173 1
-      [activating module `foo' in /path/to/apache/conf/httpd\&.conf]
a175 1
+      [activating module `foo' in /path/to/apache/conf/httpd2\&.conf]
@


1.2
log
@Update to 2.2.4.  This is principally a bugfix release.  See
Changelog: http://www.apache.org/dist/httpd/CHANGES_2.2

While here, regen patches with the new diff.

ok dlg
@
text
@d1 1
a1 1
$OpenBSD: patch-docs_man_apxs_8,v 1.1 2007/01/16 01:12:26 deanna Exp $
@


1.1
log
@Append a 2 to every mention of anything that exists in both the base
httpd and this port.  Hopefully we got them all.

Requested by robert@@, ok dlg@@.
@
text
@d1 3
a3 3
$OpenBSD$
--- docs/man/apxs.8.orig	Sun Jan 14 19:01:44 2007
+++ docs/man/apxs.8	Sun Jan 14 19:08:27 2007
d86 1
a86 1
@@@@ -89,28 +89,28 @@@@ For more details about DSO support in Ap
d119 1
a119 1
@@@@ -148,13 +148,13 @@@@ This option passes \fIlinker-flags\fR as
d135 1
a135 1
@@@@ -163,7 +163,7 @@@@ Assume you have an Apache module named m
d144 1
a144 1
@@@@ -171,16 +171,16 @@@@ Assume you have an Apache module named m
d164 1
a164 1
@@@@ -199,16 +199,16 @@@@ is added to the configuration file if st
d184 1
a184 1
@@@@ -225,19 +225,19 @@@@ Then you can immediately compile this sa
@

