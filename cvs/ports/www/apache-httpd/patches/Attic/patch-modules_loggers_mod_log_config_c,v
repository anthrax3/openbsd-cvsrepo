head	1.1;
access;
symbols
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_4:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2014.04.12.16.39.34;	author stsp;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2014.04.12.16.39.34;	author stsp;	state Exp;
branches;
next	;

1.1.4.1
date	2014.04.12.16.40.26;	author stsp;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-modules_loggers_mod_log_config_c was initially added on branch OPENBSD_5_4.
@
text
@@


1.1.4.1
log
@For 5.5-stable, patch www/apache-httpd for CVE-2014-0098 and CVE-2013-6438.
ok jasper@@
@
text
@a0 43
$OpenBSD$
CVE-2014-0098
--- modules/loggers/mod_log_config.c.orig	Sat Aug 18 11:32:36 2012
+++ modules/loggers/mod_log_config.c	Thu Apr 10 00:52:21 2014
@@@@ -524,14 +524,24 @@@@ static const char *log_cookie(request_rec *r, char *a)
 
         while ((cookie = apr_strtok(cookies, ";", &last1))) {
             char *name = apr_strtok(cookie, "=", &last2);
-            if (name) {
-                char *value = name + strlen(name) + 1;
-                apr_collapse_spaces(name, name);
+            /* last2 points to the next char following an '=' delim,
+               or the trailing NUL char of the string */
+            char *value = last2;
+            if (name && *name &&  value && *value) {
+                char *last = value - 2;
+                /* Move past leading WS */
+                name += strspn(name, " \t");
+                while (last >= name && apr_isspace(*last)) {
+                    *last = '\0';
+                    --last;
+                }
 
                 if (!strcasecmp(name, a)) {
-                    char *last;
-                    value += strspn(value, " \t");  /* Move past leading WS */
-                    last = value + strlen(value) - 1;
+                    /* last1 points to the next char following the ';' delim,
+                       or the trailing NUL char of the string */
+                    last = last1 - (*last1 ? 2 : 1);
+                    /* Move past leading WS */
+                    value += strspn(value, " \t");
                     while (last >= value && apr_isspace(*last)) {
                        *last = '\0';
                        --last;
@@@@ -540,6 +550,7 @@@@ static const char *log_cookie(request_rec *r, char *a)
                     return ap_escape_logitem(r->pool, value);
                 }
             }
+            /* Iterate the remaining tokens using apr_strtok(NULL, ...) */
             cookies = NULL;
         }
     }
@


1.1.2.1
log
@For 5.4-stable, patch www/apache-httpd for CVE-2014-0098 and CVE-2013-6438.
ok jasper@@
@
text
@a0 43
$OpenBSD$
CVE-2014-0098
--- modules/loggers/mod_log_config.c.orig	Sat Aug 18 11:32:36 2012
+++ modules/loggers/mod_log_config.c	Thu Apr 10 00:52:21 2014
@@@@ -524,14 +524,24 @@@@ static const char *log_cookie(request_rec *r, char *a)
 
         while ((cookie = apr_strtok(cookies, ";", &last1))) {
             char *name = apr_strtok(cookie, "=", &last2);
-            if (name) {
-                char *value = name + strlen(name) + 1;
-                apr_collapse_spaces(name, name);
+            /* last2 points to the next char following an '=' delim,
+               or the trailing NUL char of the string */
+            char *value = last2;
+            if (name && *name &&  value && *value) {
+                char *last = value - 2;
+                /* Move past leading WS */
+                name += strspn(name, " \t");
+                while (last >= name && apr_isspace(*last)) {
+                    *last = '\0';
+                    --last;
+                }
 
                 if (!strcasecmp(name, a)) {
-                    char *last;
-                    value += strspn(value, " \t");  /* Move past leading WS */
-                    last = value + strlen(value) - 1;
+                    /* last1 points to the next char following the ';' delim,
+                       or the trailing NUL char of the string */
+                    last = last1 - (*last1 ? 2 : 1);
+                    /* Move past leading WS */
+                    value += strspn(value, " \t");
                     while (last >= value && apr_isspace(*last)) {
                        *last = '\0';
                        --last;
@@@@ -540,6 +550,7 @@@@ static const char *log_cookie(request_rec *r, char *a)
                     return ap_escape_logitem(r->pool, value);
                 }
             }
+            /* Iterate the remaining tokens using apr_strtok(NULL, ...) */
             cookies = NULL;
         }
     }
@

