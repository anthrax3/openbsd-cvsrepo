head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.10
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.0.34
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.32
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.30
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.28
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.26
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.24
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.22
	OPENBSD_5_0:1.1.0.20
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.18
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.16
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.14
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.12
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.10
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.8
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.6
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.4
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.05.15.08.08.04;	author stsp;	state Exp;
branches;
next	1.1;
commitid	Cjn8n79ocvk9kzM0;

1.1
date	2007.01.16.01.12.26;	author deanna;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update www/apache-httpd to 2.4.12.
Manual configuration updates might be required, see
http://httpd.apache.org/docs/2.4/upgrading.html
MPMs can now be loaded at runtime. The default config keeps using 'prefork'.
Based on an initial diff by claudio@@
ok sthen@@ ajacoutot@@
@
text
@$OpenBSD: patch-docs_man_dbmmanage_1,v 1.1 2007/01/16 01:12:26 deanna Exp $
--- docs/man/dbmmanage.1.orig	Wed Dec 12 17:32:22 2012
+++ docs/man/dbmmanage.1	Sat Jan 10 15:17:12 2015
@@@@ -19,27 +19,27 @@@@
 .el .ne 3
 .IP "\\$1" \\$2
 ..
-.TH "DBMMANAGE" 1 "2012-12-12" "Apache HTTP Server" "dbmmanage"
+.TH "DBMMANAGE2" 1 "2012-12-12" "Apache HTTP Server" "dbmmanage2"
 
 .SH NAME
-dbmmanage \- Manage user authentication files in DBM format
+dbmmanage2 \- Manage user authentication files in DBM format
 
 .SH "SYNOPSIS"
  
 .PP
-\fBdbmmanage\fR [ \fIencoding\fR ] \fIfilename\fR add|adduser|check|delete|update \fIusername\fR [ \fIencpasswd\fR [ \fIgroup\fR[,\fIgroup\fR\&.\&.\&.] [ \fIcomment\fR ] ] ]
+\fBdbmmanage2\fR [ \fIencoding\fR ] \fIfilename\fR add|adduser|check|delete|update \fIusername\fR [ \fIencpasswd\fR [ \fIgroup\fR[,\fIgroup\fR\&.\&.\&.] [ \fIcomment\fR ] ] ]
  
 .PP
-\fBdbmmanage\fR \fIfilename\fR view [ \fIusername\fR ]
+\fBdbmmanage2\fR \fIfilename\fR view [ \fIusername\fR ]
  
 .PP
-\fBdbmmanage\fR \fIfilename\fR import
+\fBdbmmanage2\fR \fIfilename\fR import
  
 
 .SH "SUMMARY"
  
 .PP
-dbmmanage is used to create and update the DBM format files used to store usernames and password for basic authentication of HTTP users via mod_authn_dbm\&. Resources available from the Apache HTTP server can be restricted to just the users listed in the files created by dbmmanage\&. This program can only be used when the usernames are stored in a DBM file\&. To use a flat-file database see htpasswd\&.
+dbmmanage2 is used to create and update the DBM format files used to store usernames and password for basic authentication of HTTP users via mod_authn_dbm\&. Resources available from the Apache HTTP server can be restricted to just the users listed in the files created by dbmmanage2\&. This program can only be used when the usernames are stored in a DBM file\&. To use a flat-file database see htpasswd\&.
  
 .PP
 Another tool to maintain a DBM password database is htdbm\&.
@@@@ -88,33 +88,33 @@@@ plaintext (\fInot recommended\fR)  
  
 .TP
 add
-Adds an entry for \fIusername\fR to \fIfilename\fR using the encrypted password \fIencpasswd\fR\&. dbmmanage passwords\&.dat add rbowen foKntnEF3KSXA  
+Adds an entry for \fIusername\fR to \fIfilename\fR using the encrypted password \fIencpasswd\fR\&. dbmmanage2 passwords\&.dat add rbowen foKntnEF3KSXA  
 .TP
 adduser
-Asks for a password and then adds an entry for \fIusername\fR to \fIfilename\fR\&. dbmmanage passwords\&.dat adduser krietz  
+Asks for a password and then adds an entry for \fIusername\fR to \fIfilename\fR\&. dbmmanage2 passwords\&.dat adduser krietz  
 .TP
 check
-Asks for a password and then checks if \fIusername\fR is in \fIfilename\fR and if it's password matches the specified one\&. dbmmanage passwords\&.dat check rbowen  
+Asks for a password and then checks if \fIusername\fR is in \fIfilename\fR and if it's password matches the specified one\&. dbmmanage2 passwords\&.dat check rbowen  
 .TP
 delete
-Deletes the \fIusername\fR entry from \fIfilename\fR\&. dbmmanage passwords\&.dat delete rbowen  
+Deletes the \fIusername\fR entry from \fIfilename\fR\&. dbmmanage2 passwords\&.dat delete rbowen  
 .TP
 import
 Reads \fIusername\fR:\fIpassword\fR entries (one per line) from STDIN and adds them to \fIfilename\fR\&. The passwords already have to be crypted\&.  
 .TP
 update
-Same as the adduser command, except that it makes sure \fIusername\fR already exists in \fIfilename\fR\&. dbmmanage passwords\&.dat update rbowen  
+Same as the adduser command, except that it makes sure \fIusername\fR already exists in \fIfilename\fR\&. dbmmanage2 passwords\&.dat update rbowen  
 .TP
 view
-Just displays the contents of the DBM file\&. If you specify a \fIusername\fR, it displays the particular record only\&. dbmmanage passwords\&.dat view  
+Just displays the contents of the DBM file\&. If you specify a \fIusername\fR, it displays the particular record only\&. dbmmanage2 passwords\&.dat view  
   
 .SH "BUGS"
  
 .PP
-One should be aware that there are a number of different DBM file formats in existence, and with all likelihood, libraries for more than one format may exist on your system\&. The three primary examples are SDBM, NDBM, the GNU project's GDBM, and Berkeley DB 2\&. Unfortunately, all these libraries use different file formats, and you must make sure that the file format used by \fIfilename\fR is the same format that dbmmanage expects to see\&. dbmmanage currently has no way of determining what type of DBM file it is looking at\&. If used against the wrong format, will simply return nothing, or may create a different DBM file with a different name, or at worst, it may corrupt the DBM file if you were attempting to write to it\&.
+One should be aware that there are a number of different DBM file formats in existence, and with all likelihood, libraries for more than one format may exist on your system\&. The three primary examples are SDBM, NDBM, the GNU project's GDBM, and Berkeley DB 2\&. Unfortunately, all these libraries use different file formats, and you must make sure that the file format used by \fIfilename\fR is the same format that dbmmanage2 expects to see\&. dbmmanage2 currently has no way of determining what type of DBM file it is looking at\&. If used against the wrong format, will simply return nothing, or may create a different DBM file with a different name, or at worst, it may corrupt the DBM file if you were attempting to write to it\&.
  
 .PP
-dbmmanage has a list of DBM format preferences, defined by the @@AnyDBM::ISA array near the beginning of the program\&. Since we prefer the Berkeley DB 2 file format, the order in which dbmmanage will look for system libraries is Berkeley DB 2, then NDBM, then GDBM and then SDBM\&. The first library found will be the library dbmmanage will attempt to use for all DBM file transactions\&. This ordering is slightly different than the standard @@AnyDBM::ISA ordering in Perl, as well as the ordering used by the simple dbmopen() call in Perl, so if you use any other utilities to manage your DBM files, they must also follow this preference ordering\&. Similar care must be taken if using programs in other languages, like C, to access these files\&.
+dbmmanage2 has a list of DBM format preferences, defined by the @@AnyDBM::ISA array near the beginning of the program\&. Since we prefer the Berkeley DB 2 file format, the order in which dbmmanage2 will look for system libraries is Berkeley DB 2, then NDBM, then GDBM and then SDBM\&. The first library found will be the library dbmmanage2 will attempt to use for all DBM file transactions\&. This ordering is slightly different than the standard @@AnyDBM::ISA ordering in Perl, as well as the ordering used by the simple dbmopen() call in Perl, so if you use any other utilities to manage your DBM files, they must also follow this preference ordering\&. Similar care must be taken if using programs in other languages, like C, to access these files\&.
  
 .PP
 One can usually use the file program supplied with most Unix systems to see what format a DBM file is in\&.
@


1.1
log
@Append a 2 to every mention of anything that exists in both the base
httpd and this port.  Hopefully we got them all.

Requested by robert@@, ok dlg@@.
@
text
@d1 4
a4 4
$OpenBSD$
--- docs/man/dbmmanage.1.orig	Sun Jan 14 19:01:44 2007
+++ docs/man/dbmmanage.1	Sun Jan 14 19:14:21 2007
@@@@ -19,30 +19,30 @@@@
d8 2
a9 2
-.TH "DBMMANAGE" 1 "2004-12-10" "Apache HTTP Server" "dbmmanage"
+.TH "DBMMANAGE2" 1 "2004-12-10" "Apache HTTP Server" "dbmmanage2"
d34 1
a34 1
+dbmmanage2 is used to create and update the DBM format files used to store usernames and password for basic authentication of HTTP users via mod_authn_dbm\&. Resources available from the Apache HTTP server can be restricted to just the users listed in the files created by dbmmanage2\&. This program can only be used when the usernames are stored in a DBM file\&. To use a flat-file database see htpasswd2\&.
d37 2
a38 6
-This manual page only lists the command line arguments\&. For details of the directives necessary to configure user authentication in httpd see the httpd manual, which is part of the Apache distribution or can be found at http://httpd\&.apache\&.org/\&.
+This manual page only lists the command line arguments\&. For details of the directives necessary to configure user authentication in httpd2 see the httpd2 manual, which is part of the Apache distribution or can be found at http://httpd\&.apache\&.org/\&.
  
 
 .SH "OPTIONS"
@@@@ -85,33 +85,33 @@@@ plaintext (\fInot recommended\fR)  
@

