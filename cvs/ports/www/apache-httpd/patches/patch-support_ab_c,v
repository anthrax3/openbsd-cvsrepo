head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.4
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.2
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.07.14.17.10.46;	author sthen;	state Exp;
branches
	1.4.2.1;
next	1.3;
commitid	0xBVF45DpIy5C6x1;

1.3
date	2015.10.27.18.18.17;	author sthen;	state dead;
branches;
next	1.2;
commitid	MeULVXlNLekuQ4rD;

1.2
date	2015.09.13.12.31.46;	author sthen;	state Exp;
branches;
next	1.1;
commitid	t0D4ENDlq7aA4rxf;

1.1
date	2015.07.18.04.59.42;	author sthen;	state Exp;
branches
	1.1.4.1;
next	;
commitid	mLuCknBdeZvWIxmS;

1.1.4.1
date	2015.10.24.16.41.37;	author sthen;	state Exp;
branches;
next	;
commitid	CaCLRJD4W0lC1G1J;

1.4.2.1
date	2017.07.14.18.32.13;	author sthen;	state Exp;
branches;
next	;
commitid	MEbuZd9kS5MbNvBV;


desc
@@


1.4
log
@additional patch for ab with earlier libressl (SSL_CTX_set_*_proto_version),
not needed for -current, but easier to keep in sync for -stable if it's here
@
text
@$OpenBSD$

Index: support/ab.c
--- support/ab.c.orig
+++ support/ab.c
@@@@ -2514,7 +2514,7 @@@@ int main(int argc, const char * const argv[])
         exit(1);
     }
     SSL_CTX_set_options(ssl_ctx, SSL_OP_ALL);
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && (!defined(LIBRESSL_VERSION_NUMBER) || LIBRESSL_VERSION_NUMBER >= 0x2060000fL)
     SSL_CTX_set_max_proto_version(ssl_ctx, max_prot);
     SSL_CTX_set_min_proto_version(ssl_ctx, min_prot);
 #endif
@


1.4.2.1
log
@MFC security update to Apache httpd-2.4.27

fixed in 2.4.26:

ap_get_basic_auth_pw() Authentication Bypass CVE-2017-3167
mod_ssl Null Pointer Dereference CVE-2017-3169
mod_http2 Null Pointer Dereference CVE-2017-7659
ap_find_token() Buffer Overread CVE-2017-7668
mod_mime Buffer Overread CVE-2017-7679

fixed in 2.4.27:

Read after free in mod_http2 CVE-2017-9789
Uninitialized memory reflection in mod_auth_digest CVE-2017-9788
@
text
@d1 1
a1 1
$OpenBSD: patch-support_ab_c,v 1.4 2017/07/14 17:10:46 sthen Exp $
@


1.3
log
@update to apache-httpd-2.4.17, and add scaffolding to use the same type of
modules.sample mechanism as apache-httpd-openbsd
@
text
@d1 1
a1 1
$OpenBSD: patch-support_ab_c,v 1.2 2015/09/13 12:31:46 sthen Exp $
d3 11
a13 30
https://bz.apache.org/bugzilla/attachment.cgi?id=33101
https://bz.apache.org/bugzilla/show_bug.cgi?id=58349

--- support/ab.c.orig	Mon Mar  2 20:31:16 2015
+++ support/ab.c	Sun Sep 13 14:00:17 2015
@@@@ -1961,6 +1961,12 @@@@ static void usage(const char *progname)
 #define SSL2_HELP_MSG ""
 #endif
 
+#ifndef OPENSSL_NO_SSL3
+#define SSL3_HELP_MSG "SSL3, "
+#else
+#define SSL3_HELP_MSG ""
+#endif
+
 #ifdef HAVE_TLSV1_X
 #define TLS1_X_HELP_MSG ", TLS1.1, TLS1.2"
 #else
@@@@ -1969,7 +1975,7 @@@@ static void usage(const char *progname)
 
     fprintf(stderr, "    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)\n");
     fprintf(stderr, "    -f protocol     Specify SSL/TLS protocol\n");
-    fprintf(stderr, "                    (" SSL2_HELP_MSG "SSL3, TLS1" TLS1_X_HELP_MSG " or ALL)\n");
+    fprintf(stderr, "                    (" SSL2_HELP_MSG SSL3_HELP_MSG "TLS1" TLS1_X_HELP_MSG " or ALL)\n");
 #endif
     exit(EINVAL);
 }
@@@@ -2314,8 +2320,10 @@@@ int main(int argc, const char * const argv[])
                 } else if (strncasecmp(opt_arg, "SSL2", 4) == 0) {
                     meth = SSLv2_client_method();
a14 7
+#ifndef OPENSSL_NO_SSL3
                 } else if (strncasecmp(opt_arg, "SSL3", 4) == 0) {
                     meth = SSLv3_client_method();
+#endif
 #ifdef HAVE_TLSV1_X
                 } else if (strncasecmp(opt_arg, "TLS1.1", 6) == 0) {
                     meth = TLSv1_1_client_method();
@


1.2
log
@Move to improved version of no_ssl3 patch for apache-httpd, thanks to
Kaspar Brand (https://bz.apache.org/bugzilla/show_bug.cgi?id=58349)
- small tweak from Kaspar's patch for 2.4 backport.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@cope with sslv3 being disabled
@
text
@d2 29
a30 3
--- support/ab.c.orig	Fri Jul 17 22:55:57 2015
+++ support/ab.c	Fri Jul 17 22:56:13 2015
@@@@ -2314,8 +2314,10 @@@@ int main(int argc, const char * const argv[])
@


1.1.4.1
log
@sync Apache httpd in 5.8-stable with -current:

- build mod_cgi.so, for CGI use with the default prefork mpm

- install mod_cgid.so (it was already built but not installed),
for CGI use with optional multi-threaded mpm

- add patches to guard SSLv3 (not required for 5.8 but doesn't hurt,
and simplifies any future syncs)
@
text
@d1 4
a4 30
$OpenBSD: patch-support_ab_c,v 1.2 2015/09/13 12:31:46 sthen Exp $

https://bz.apache.org/bugzilla/attachment.cgi?id=33101
https://bz.apache.org/bugzilla/show_bug.cgi?id=58349

--- support/ab.c.orig	Mon Mar  2 20:31:16 2015
+++ support/ab.c	Sun Sep 13 14:00:17 2015
@@@@ -1961,6 +1961,12 @@@@ static void usage(const char *progname)
 #define SSL2_HELP_MSG ""
 #endif
 
+#ifndef OPENSSL_NO_SSL3
+#define SSL3_HELP_MSG "SSL3, "
+#else
+#define SSL3_HELP_MSG ""
+#endif
+
 #ifdef HAVE_TLSV1_X
 #define TLS1_X_HELP_MSG ", TLS1.1, TLS1.2"
 #else
@@@@ -1969,7 +1975,7 @@@@ static void usage(const char *progname)
 
     fprintf(stderr, "    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)\n");
     fprintf(stderr, "    -f protocol     Specify SSL/TLS protocol\n");
-    fprintf(stderr, "                    (" SSL2_HELP_MSG "SSL3, TLS1" TLS1_X_HELP_MSG " or ALL)\n");
+    fprintf(stderr, "                    (" SSL2_HELP_MSG SSL3_HELP_MSG "TLS1" TLS1_X_HELP_MSG " or ALL)\n");
 #endif
     exit(EINVAL);
 }
@@@@ -2314,8 +2320,10 @@@@ int main(int argc, const char * const argv[])
@


