head	1.5;
access;
symbols
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4;
locks; strict;
comment	@# @;


1.5
date	2012.09.01.14.10.03;	author landry;	state dead;
branches;
next	1.4;

1.4
date	2012.06.11.15.38.33;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2012.04.30.15.38.09;	author landry;	state Exp;
branches;
next	1.2;

1.2
date	2012.03.16.21.38.33;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2012.02.20.20.20.00;	author landry;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to seamonkey 2.12.

- see http://www.seamonkey-project.org/releases/seamonkey2.12/
- garbage collect nsSound.cpp, the original one uses libcanberra
properly and thus sndio.
- remove patch from #750620, merged upstream (mfbt/double-conversion)
- remove patches from #691898, merged upstream (yarr jit ppc)
- remove useless crashreporter patch, we don't have breakpad
@
text
@$OpenBSD: patch-mozilla_js_src_vm_RegExpObject-inl_h,v 1.4 2012/06/11 15:38:33 landry Exp $
--- mozilla/js/src/vm/RegExpObject-inl.h.orig	Fri May 18 06:10:51 2012
+++ mozilla/js/src/vm/RegExpObject-inl.h	Fri May 18 09:31:55 2012
@@@@ -137,6 +137,7 @@@@ RegExpObject::setSticky(bool enabled)
     setSlot(STICKY_FLAG_SLOT, BooleanValue(enabled));
 }
 
+#if ENABLE_YARR_JIT
 /* This function should be deleted once bad Android platforms phase out. See bug 604774. */
 inline bool
 detail::RegExpCode::isJITRuntimeEnabled(JSContext *cx)
@@@@ -147,6 +148,7 @@@@ detail::RegExpCode::isJITRuntimeEnabled(JSContext *cx)
     return true;
 #endif
 }
+#endif
 
 inline bool
 RegExpToShared(JSContext *cx, JSObject &obj, RegExpGuard *g)
@


1.4
log
@Update to seamonkey 2.10.

See http://www.seamonkey-project.org/releases/seamonkey2.10/ for details
- Update lightning to 1.5b1 and enigmail to 1.4.2
- add the rpath hack to workaround #668869
- dont make packaging warnings errors (#763181)
@
text
@d1 1
a1 1
$OpenBSD: patch-mozilla_js_src_vm_RegExpObject-inl_h,v 1.3 2012/04/30 15:32:06 landry Exp $
@


1.3
log
@Update to seamonkey 2.9.1/lightning 1.4b1/enigmail 1.5pre.

- See http://www.seamonkey-project.org/releases/seamonkey2.9/
- add patch-suite_installer_Makefile_in to avoid installing the SDk
  (corollary of Tb's patch-mail_installer_Makefile_in)
- use MOZ_DEBUG_FLAGS="-Os" on ppc as done in Tb to avoid a
  relocation overflow when linking libxul on ppc (reminded by aja@@)
@
text
@d1 5
a5 5
$OpenBSD: patch-mozilla_js_src_vm_RegExpObject-inl_h,v 1.2 2012/03/16 21:35:25 landry Exp $
--- mozilla/js/src/vm/RegExpObject-inl.h.orig	Sat Apr 21 00:40:11 2012
+++ mozilla/js/src/vm/RegExpObject-inl.h	Wed Apr 25 17:50:16 2012
@@@@ -357,6 +357,7 @@@@ detail::RegExpPrivate::create(JSContext *cx, JSLinearS
     return RetType(priv);
d11 2
a12 2
 detail::RegExpPrivateCode::isJITRuntimeEnabled(JSContext *cx)
@@@@ -367,12 +368,12 @@@@ detail::RegExpPrivateCode::isJITRuntimeEnabled(JSConte
d19 1
a19 60
 detail::RegExpPrivateCode::compile(JSContext *cx, JSLinearString &pattern, TokenStream *ts,
                                    uintN *parenCount, RegExpFlag flags)
 {
-#if ENABLE_YARR_JIT
     /* Parse the pattern. */
     ErrorCode yarrError;
     YarrPattern yarrPattern(pattern, bool(flags & IgnoreCaseFlag), bool(flags & MultilineFlag),
@@@@ -389,7 +390,7 @@@@ detail::RegExpPrivateCode::compile(JSContext *cx, JSLi
      * case we have to bytecode compile it.
      */
 
-#ifdef JS_METHODJIT
+#if ENABLE_YARR_JIT && defined(JS_METHODJIT)
     if (isJITRuntimeEnabled(cx) && !yarrPattern.m_containsBackreferences) {
         JSC::ExecutableAllocator *execAlloc = cx->runtime->getExecutableAllocator(cx);
         if (!execAlloc) {
@@@@ -410,21 +411,11 @@@@ detail::RegExpPrivateCode::compile(JSContext *cx, JSLi
         return false;
     }
 
+#if ENABLE_YARR_JIT
     codeBlock.setFallBack(true);
+#endif
     byteCode = byteCompile(yarrPattern, bumpAlloc).get();
     return true;
-#else /* !defined(ENABLE_YARR_JIT) */
-    int error = 0;
-    compiled = jsRegExpCompile(pattern.chars(), pattern.length(),
-                  ignoreCase() ? JSRegExpIgnoreCase : JSRegExpDoNotIgnoreCase,
-                  multiline() ? JSRegExpMultiline : JSRegExpSingleLine,
-                  parenCount, &error);
-    if (error) {
-        reportPCREError(cx, error);
-        return false;
-    }
-    return true;
-#endif
 }
 
 inline bool
@@@@ -466,18 +457,11 @@@@ detail::RegExpPrivateCode::execute(JSContext *cx, cons
     else
         result = JSC::Yarr::execute(codeBlock, chars, start, length, output);
 #else
-    result = jsRegExpExecute(cx, compiled, chars, length, start, output, outputCount);
+    result = JSC::Yarr::interpret(byteCode, chars, start, length, output);
 #endif
 
     if (result == -1)
         return RegExpRunStatus_Success_NotFound;
-
-#if !ENABLE_YARR_JIT
-    if (result < 0) {
-        reportPCREError(cx, result);
-        return RegExpRunStatus_Error;
-    }
-#endif
 
     JS_ASSERT(result >= 0);
     return RegExpRunStatus_Success;
@


1.2
log
@Update to seamonkey 2.8. (and enigmail 1.4/lightning 1.3b1)
- Fixes MFSA 2012-12->19
- see http://www.seamonkey-project.org/releases/seamonkey2.8/
- complete patchset for #691898, still fixes build on ppc (and hopefully
commited in firefox 14...)
- add patchset from #706955, workarounds #669050 (xpcshell hangs during
make install and chokes on CSPUtils.csm, threads related..)
- remove obsolete/commited patches
@
text
@d1 4
a4 4
$OpenBSD: patch-mozilla_js_src_vm_RegExpObject-inl_h,v 1.1 2012/02/20 20:17:49 landry Exp $
--- mozilla/js/src/vm/RegExpObject-inl.h.orig	Fri Mar  9 21:29:07 2012
+++ mozilla/js/src/vm/RegExpObject-inl.h	Sat Mar 10 12:26:50 2012
@@@@ -367,6 +367,7 @@@@ detail::RegExpPrivate::create(JSContext *cx, JSLinearS
d12 1
a12 1
@@@@ -377,12 +378,12 @@@@ detail::RegExpPrivateCode::isJITRuntimeEnabled(JSConte
d26 1
a26 1
@@@@ -399,7 +400,7 @@@@ detail::RegExpPrivateCode::compile(JSContext *cx, JSLi
d33 1
a33 1
         JSC::ExecutableAllocator *execAlloc = cx->threadData()->getOrCreateExecutableAllocator(cx);
d35 1
a35 1
@@@@ -420,21 +421,11 @@@@ detail::RegExpPrivateCode::compile(JSContext *cx, JSLi
d59 1
a59 1
@@@@ -476,18 +467,11 @@@@ detail::RegExpPrivateCode::execute(JSContext *cx, cons
@


1.1
log
@Update to seamonkey 2.7.2.

Same comments as for thunderbird, and remove i18n xpis from the port,
they bring 20Mb to the package without reason and will be better as
no-arch in www/seamonkey-i18n.
@
text
@d1 5
a5 5
$OpenBSD$
--- mozilla/js/src/vm/RegExpObject-inl.h.orig	Wed Jan 18 10:43:17 2012
+++ mozilla/js/src/vm/RegExpObject-inl.h	Mon Jan 23 07:59:07 2012
@@@@ -327,6 +327,7 @@@@ RegExpPrivate::create(JSContext *cx, JSString *source,
     return RetType(self);
d11 2
a12 2
 RegExpPrivateCode::isJITRuntimeEnabled(JSContext *cx)
@@@@ -337,12 +338,12 @@@@ RegExpPrivateCode::isJITRuntimeEnabled(JSContext *cx)
d19 2
a20 2
 RegExpPrivateCode::compile(JSContext *cx, JSLinearString &pattern, TokenStream *ts,
                            uintN *parenCount, RegExpFlag flags)
d26 1
a26 1
@@@@ -359,7 +360,7 @@@@ RegExpPrivateCode::compile(JSContext *cx, JSLinearStri
d33 4
a36 3
         if (!cx->compartment->ensureJaegerCompartmentExists(cx))
             return false;
@@@@ -371,21 +372,11 @@@@ RegExpPrivateCode::compile(JSContext *cx, JSLinearStri
a37 1
 #endif
d42 1
a42 1
     byteCode = byteCompile(yarrPattern, cx->compartment->regExpAllocator).get();
d59 1
a59 1
@@@@ -431,18 +422,11 @@@@ RegExpPrivateCode::execute(JSContext *cx, const jschar
d68 1
a68 1
         return Success_NotFound;
d73 1
a73 1
-        return Error;
d78 1
a78 1
     return Success;
@

