head	1.5;
access;
symbols
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2012.05.09.17.16.01;	author landry;	state dead;
branches;
next	1.4;

1.4
date	2012.04.30.15.38.09;	author landry;	state Exp;
branches;
next	1.3;

1.3
date	2012.03.16.21.38.33;	author landry;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.20.20.20.00;	author landry;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.24.07.31.57;	author landry;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove useless patches which should have gone in the attic when updating
to mozilla 9. Better late than never.. Still from upstream bug #648735.
Revs https://hg.mozilla.org/mozilla-central/rev/ea33ddde6ade,
https://hg.mozilla.org/mozilla-central/rev/226136c5812e and
https://hg.mozilla.org/mozilla-central/rev/f78d9f4f5234.

While here add a comment stating the failure fixed by last two remaining
ipc patches.
@
text
@$OpenBSD: patch-mozilla_ipc_chromium_src_base_file_util_posix_cc,v 1.4 2012/04/30 15:38:09 landry Exp $
--- mozilla/ipc/chromium/src/base/file_util_posix.cc.orig	Thu Dec 15 01:22:33 2011
+++ mozilla/ipc/chromium/src/base/file_util_posix.cc	Mon Dec 19 22:30:24 2011
@@@@ -76,8 +76,8 @@@@ int CountFilesCreatedAfter(const FilePath& path,
           (strcmp(ent->d_name, "..") == 0))
         continue;
 
-      struct stat64 st;
-      int test = stat64(path.Append(ent->d_name).value().c_str(), &st);
+      struct stat st;
+      int test = stat(path.Append(ent->d_name).value().c_str(), &st);
       if (test != 0) {
         LOG(ERROR) << "stat64 failed: " << strerror(errno);
         continue;
@@@@ -111,8 +111,8 @@@@ int CountFilesCreatedAfter(const FilePath& path,
 // here.
 bool Delete(const FilePath& path, bool recursive) {
   const char* path_str = path.value().c_str();
-  struct stat64 file_info;
-  int test = stat64(path_str, &file_info);
+  struct stat file_info;
+  int test = stat(path_str, &file_info);
   if (test != 0) {
     // The Windows version defines this condition as success.
     bool ret = (errno == ENOENT || errno == ENOTDIR);
@@@@ -291,19 +291,19 @@@@ bool CopyDirectory(const FilePath& from_path,
 }
 
 bool PathExists(const FilePath& path) {
-  struct stat64 file_info;
-  return (stat64(path.value().c_str(), &file_info) == 0);
+  struct stat file_info;
+  return (stat(path.value().c_str(), &file_info) == 0);
 }
 
 bool PathIsWritable(const FilePath& path) {
   FilePath test_path(path);
-  struct stat64 file_info;
-  if (stat64(test_path.value().c_str(), &file_info) != 0) {
+  struct stat file_info;
+  if (stat(test_path.value().c_str(), &file_info) != 0) {
     // If the path doesn't exist, test the parent dir.
     test_path = test_path.DirName();
     // If the parent dir doesn't exist, then return false (the path is not
     // directly writable).
-    if (stat64(test_path.value().c_str(), &file_info) != 0)
+    if (stat(test_path.value().c_str(), &file_info) != 0)
       return false;
   }
   if (S_IWOTH & file_info.st_mode)
@@@@ -316,8 +316,8 @@@@ bool PathIsWritable(const FilePath& path) {
 }
 
 bool DirectoryExists(const FilePath& path) {
-  struct stat64 file_info;
-  if (stat64(path.value().c_str(), &file_info) == 0)
+  struct stat file_info;
+  if (stat(path.value().c_str(), &file_info) == 0)
     return S_ISDIR(file_info.st_mode);
   return false;
 }
@@@@ -454,8 +454,8 @@@@ bool CreateDirectory(const FilePath& full_path) {
 }
 
 bool GetFileInfo(const FilePath& file_path, FileInfo* results) {
-  struct stat64 file_info;
-  if (stat64(file_path.value().c_str(), &file_info) != 0)
+  struct stat file_info;
+  if (stat(file_path.value().c_str(), &file_info) != 0)
     return false;
   results->is_directory = S_ISDIR(file_info.st_mode);
   results->size = file_info.st_size;
@


1.4
log
@Update to seamonkey 2.9.1/lightning 1.4b1/enigmail 1.5pre.

- See http://www.seamonkey-project.org/releases/seamonkey2.9/
- add patch-suite_installer_Makefile_in to avoid installing the SDk
  (corollary of Tb's patch-mail_installer_Makefile_in)
- use MOZ_DEBUG_FLAGS="-Os" on ppc as done in Tb to avoid a
  relocation overflow when linking libxul on ppc (reminded by aja@@)
@
text
@d1 1
a1 1
$OpenBSD: patch-mozilla_ipc_chromium_src_base_file_util_posix_cc,v 1.2 2012/01/11 01:19:43 nigel Exp $
@


1.3
log
@Update to seamonkey 2.8. (and enigmail 1.4/lightning 1.3b1)
- Fixes MFSA 2012-12->19
- see http://www.seamonkey-project.org/releases/seamonkey2.8/
- complete patchset for #691898, still fixes build on ppc (and hopefully
commited in firefox 14...)
- add patchset from #706955, workarounds #669050 (xpcshell hangs during
make install and chokes on CSPUtils.csm, threads related..)
- remove obsolete/commited patches
@
text
@@


1.2
log
@Update to seamonkey 2.7.2.

Same comments as for thunderbird, and remove i18n xpis from the port,
they bring 20Mb to the package without reason and will be better as
no-arch in www/seamonkey-i18n.
@
text
@@


1.1
log
@Update to seamonkey 2.2, based on Firefox/Thunderbird/Gecko 5.
See http://www.seamonkey-project.org/releases/seamonkey2.2/ for details.
- sync ipc patches from Firefox
- remove a bunch of useless patches
- install under lib/seamonkey-2.2 instead of using our homegrown install
  target.
- install langpacks as plain xpi instead of unzipping them, greatly
  shrinking PLIST
@
text
@d1 4
a4 4
$OpenBSD$
--- mozilla/ipc/chromium/src/base/file_util_posix.cc.orig	Mon Jun 27 05:10:41 2011
+++ mozilla/ipc/chromium/src/base/file_util_posix.cc	Sun Jul  3 02:14:43 2011
@@@@ -71,8 +71,8 @@@@ int CountFilesCreatedAfter(const FilePath& path,
d15 1
a15 1
@@@@ -106,8 +106,8 @@@@ int CountFilesCreatedAfter(const FilePath& path,
d26 1
a26 1
@@@@ -286,19 +286,19 @@@@ bool CopyDirectory(const FilePath& from_path,
d51 1
a51 1
@@@@ -311,8 +311,8 @@@@ bool PathIsWritable(const FilePath& path) {
d62 1
a62 1
@@@@ -449,8 +449,8 @@@@ bool CreateDirectory(const FilePath& full_path) {
@

