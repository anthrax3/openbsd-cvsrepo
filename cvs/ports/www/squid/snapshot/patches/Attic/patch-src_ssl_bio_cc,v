head	1.5;
access;
symbols
	OPENBSD_5_8:1.5.0.2
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2015.09.10.13.00.10;	author sthen;	state dead;
branches
	1.5.2.1;
next	1.4;
commitid	vagA8GU9rOjsV69E;

1.4
date	2015.09.04.21.38.46;	author sthen;	state Exp;
branches;
next	1.3;
commitid	Y0p1claWaqsvZjCU;

1.3
date	2015.08.28.21.43.50;	author sthen;	state Exp;
branches;
next	1.2;
commitid	wjQiATHLnOEoRzTM;

1.2
date	2015.04.03.19.23.27;	author sthen;	state dead;
branches;
next	1.1;
commitid	rQgxkUdPEK9NDyT2;

1.1
date	2015.02.06.16.30.17;	author sthen;	state Exp;
branches;
next	;
commitid	FyfFFK75w7rNsk5i;

1.5.2.1
date	2015.09.30.08.55.17;	author sthen;	state Exp;
branches;
next	;
commitid	VN1IZQ0jgIF92Mmp;


desc
@@


1.5
log
@Currently Squid 3.5 is considered stable. Rather than moving snapshot/*
to stable/*, just drop back to a single version of squid in ports.
@
text
@$OpenBSD: patch-src_ssl_bio_cc,v 1.4 2015/09/04 21:38:46 sthen Exp $

Cope with SSLv3 removal.
https://marc.info/?l=openbsd-tech&m=144079285816974&w=2

--- src/ssl/bio.cc.orig	Tue Sep  1 20:52:00 2015
+++ src/ssl/bio.cc	Fri Sep  4 12:02:24 2015
@@@@ -1000,7 +1000,7 @@@@ Ssl::Bio::sslFeatures::parseV3Hello(const unsigned cha
 
         ciphers += 2;
         if (ciphersLen) {
-            const SSL_METHOD *method = SSLv3_method();
+            const SSL_METHOD *method = SSLv23_method();
             const int cs = method->put_cipher_by_char(NULL, NULL);
             assert(cs > 0);
             for (size_t i = 0; i < ciphersLen; i += cs) {
@


1.5.2.1
log
@Backport from -current: update to squid-3.5.9, fixes problems with
TLS/SSL parsing in configurations using SSL-Bump.

- int overflow with extension parsing: char << 8 into a short
http://www.squid-cache.org/Versions/v3/3.5/changesets/squid-3.5-13915.patch

- {Client,Server}Hello parsing; when checking for TLS extensions, don't
check for bytes following compression_method in the _whole_ message, only
in the *Hello part ("does not account for the fact that the message may
contain more than just ServerHello").
http://www.squid-cache.org/Versions/v3/3.5/changesets/squid-3.5-13915.patch
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ssl_bio_cc,v 1.2 2015/09/18 11:17:04 sthen Exp $
d6 3
a8 3
--- src/ssl/bio.cc.orig	Thu Sep 17 14:06:28 2015
+++ src/ssl/bio.cc	Fri Sep 18 10:09:11 2015
@@@@ -1009,7 +1009,7 @@@@ Ssl::Bio::sslFeatures::parseV3Hello(const unsigned cha
d10 7
a16 7
     ciphers += 2;
     if (ciphersLen) {
-        const SSL_METHOD *method = SSLv3_method();
+        const SSL_METHOD *method = SSLv23_method();
         const int cs = method->put_cipher_by_char(NULL, NULL);
         assert(cs > 0);
         for (size_t i = 0; i < ciphersLen; i += cs) {
@


1.4
log
@update to squid-3.5.8 and reenable -ntlm subpackage while there.
(I have no way to test ntlmauth but it builds ok, reports welcome).
@
text
@d1 1
a1 1
$OpenBSD: patch-src_ssl_bio_cc,v 1.3 2015/08/28 21:43:50 sthen Exp $
@


1.3
log
@fix squid-3.5 build with OPENSSL_NO_SSL3, with help from jsing and
the src/ssl/support.cc part is borrwed from jca's diff to squid-3.4
@
text
@d1 1
a1 1
$OpenBSD$
d6 3
a8 3
--- src/ssl/bio.cc.orig	Fri Aug 28 20:21:00 2015
+++ src/ssl/bio.cc	Fri Aug 28 20:21:06 2015
@@@@ -1007,7 +1007,7 @@@@ Ssl::Bio::sslFeatures::parseV3Hello(const unsigned cha
@


1.2
log
@update to squid-3.5.3, upstream have rolled in patches to build with libressl
@
text
@d1 8
a8 38
$OpenBSD: patch-src_ssl_bio_cc,v 1.1 2015/02/06 16:30:17 sthen Exp $
--- src/ssl/bio.cc.orig	Fri Feb  6 15:36:07 2015
+++ src/ssl/bio.cc	Fri Feb  6 15:47:15 2015
@@@@ -151,7 +151,10 @@@@ Ssl::Bio::stateChanged(const SSL *ssl, int where, int 
 bool
 Ssl::ClientBio::isClientHello(int state)
 {
-    return (state == SSL2_ST_GET_CLIENT_HELLO_A ||
+    return (
+#ifdef SSL2_ST_GET_CLIENT_HELLO_A
+            state == SSL2_ST_GET_CLIENT_HELLO_A ||
+#endif
             state == SSL3_ST_SR_CLNT_HELLO_A ||
             state == SSL23_ST_SR_CLNT_HELLO_A ||
             state == SSL23_ST_SR_CLNT_HELLO_B ||
@@@@ -325,7 +328,11 @@@@ adjustSSL(SSL *ssl, Ssl::Bio::sslFeatures &features)
 
     // If the client supports compression but our context does not support
     // we can not adjust.
+#ifdef OPENSSL_NO_COMP
+    if (features.compressMethod) {
+#else
     if (features.compressMethod && ssl->ctx->comp_methods == NULL) {
+#endif
         debugs(83, 5, "Client Hello Data supports compression, but we do not!");
         return false;
     }
@@@@ -669,9 +676,11 @@@@ Ssl::Bio::sslFeatures::get(const SSL *ssl)
     debugs(83, 7, "SNI server name: " << serverName);
 #endif
 
+#ifndef OPENSSL_NO_COMP
     if (ssl->session->compress_meth)
         compressMethod = ssl->session->compress_meth;
     else if (sslVersion >= 3) //if it is 3 or newer version then compression is disabled
+#endif
         compressMethod = 0;
     debugs(83, 7, "SSL compression: " << compressMethod);
d10 7
@


1.1
log
@update squid 3.5 branch to 3.5.1 and re-enable now that the horrible
*_cipher_by_char API has been added back to libssl.
@
text
@d1 1
a1 1
$OpenBSD$
@

