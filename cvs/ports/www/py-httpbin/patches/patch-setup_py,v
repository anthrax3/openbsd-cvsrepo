head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	shadchin_20160105:1.1.1.1
	shadchin:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.08.19.07.39.05;	author shadchin;	state Exp;
branches;
next	1.1;
commitid	I92Nh0itXVBL73EC;

1.1
date	2016.01.05.12.39.47;	author shadchin;	state Exp;
branches
	1.1.1.1;
next	;
commitid	C2X1I7s2sSbvlzEO;

1.1.1.1
date	2016.01.05.12.39.47;	author shadchin;	state Exp;
branches;
next	;
commitid	C2X1I7s2sSbvlzEO;


desc
@@


1.2
log
@Update to py-httpbin 0.5.0
@
text
@$OpenBSD: patch-setup_py,v 1.1.1.1 2016/01/05 12:39:47 shadchin Exp $
--- setup.py.orig	Thu Aug 11 05:49:19 2016
+++ setup.py	Thu Aug 18 10:14:50 2016
@@@@ -1,8 +1,9 @@@@
 from setuptools import setup, find_packages
 import os
+import codecs
 
-long_description = open(
-    os.path.join(os.path.dirname(__file__), 'README.rst')).read()
+long_description = codecs.open(
+    os.path.join(os.path.dirname(__file__), 'README.rst'), encoding='utf-8').read()
 
 setup(
     name="httpbin",
@


1.1
log
@Initial revision
@
text
@d1 5
a5 4
$OpenBSD$
--- setup.py.orig	Thu Dec 17 23:23:35 2015
+++ setup.py	Thu Dec 17 23:24:10 2015
@@@@ -3,8 +3,8 @@@@ import codecs
d7 1
a7 1
 import re
@


1.1.1.1
log
@Import www/py-httpbin, ok jca@@

Testing an HTTP Library can become difficult sometimes. RequestBin is
fantastic for testing POST requests, but doesn't let you control the
response. This exists to cover all kinds of HTTP scenarios. Additional
endpoints are being considered.

All endpoint responses are JSON-encoded.

@
text
@@
