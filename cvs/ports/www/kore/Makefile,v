head	1.3;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	fcambus_20161031:1.1.1.1
	fcambus:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.05.01.19.32.31;	author fcambus;	state Exp;
branches;
next	1.2;
commitid	UupWyptqpHHDucs8;

1.2
date	2016.12.29.14.15.15;	author jca;	state Exp;
branches;
next	1.1;
commitid	cOAakIX0PQqrI69U;

1.1
date	2016.10.31.10.24.52;	author fcambus;	state Exp;
branches
	1.1.1.1;
next	;
commitid	2xbUGN2V4OYqSNIT;

1.1.1.1
date	2016.10.31.10.24.52;	author fcambus;	state Exp;
branches;
next	;
commitid	2xbUGN2V4OYqSNIT;


desc
@@


1.3
log
@Honour CC and remove hardcoded optimization (-O2) flag.
@
text
@# $OpenBSD: Makefile,v 1.2 2016/12/29 14:15:15 jca Exp $

COMMENT =	web application framework for writing scalable web APIs in C

GH_ACCOUNT =	jorisvink
GH_PROJECT =	kore
GH_TAGNAME =	2.0.0-release

PKGNAME =	${DISTNAME:S/-release//}

CATEGORIES =	www

HOMEPAGE =	https://kore.io/

MAINTAINER =	Frederic Cambus <fcambus@@openbsd.org>

# ISC
PERMIT_PACKAGE_CDROM =	Yes

WANTLIB +=	c crypto pthread ssl

MODULES =	gcc4
# for __sync_bool_compare_and_swap
MODGCC4_ARCHS=	arm

FLAVORS =	debug pgsql
FLAVOR ?=

.if ${FLAVOR} == "debug"
MAKE_ENV +=	DEBUG=1
.endif

.if ${FLAVOR} == "pgsql"
MAKE_ENV +=	PGSQL=1
WANTLIB +=	pq
LIB_DEPENDS +=	databases/postgresql,-main
.endif

USE_GMAKE =	Yes

MAKE_ENV +=	CC="${CC}" TASKS=1

NO_TEST =	Yes

post-install:
	${INSTALL_DATA_DIR} ${PREFIX}/share/doc/kore
	${INSTALL_DATA} ${WRKSRC}/README.md ${PREFIX}/share/doc/kore
	${INSTALL_DATA_DIR} ${PREFIX}/share/examples/kore
	${INSTALL_DATA} ${WRKSRC}/conf/kore.conf.example ${PREFIX}/share/examples/kore

.include <bsd.port.mk>
@


1.2
log
@Needs atomic builtins, use lang/gcc on arm.

ok fcambus@@ (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2016/10/31 10:24:52 fcambus Exp $
d41 1
a41 1
MAKE_ENV +=	TASKS=1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.template,v 1.75 2016/03/20 17:19:49 naddy Exp $
d21 4
@


1.1.1.1
log
@Import www/kore

Kore is an easy to use web application framework for writing scalable
web APIs in C.

Its main goals are security, scalability and allowing rapid development
and deployment of such APIs. Because of this Kore is an ideal candidate
for building robust, scalable and secure web things.

OK juanfra@@

@
text
@@
