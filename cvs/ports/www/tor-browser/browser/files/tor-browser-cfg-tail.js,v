head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	landry_20161113:1.1.1.1
	attila:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.08.27.08.54.08;	author sthen;	state Exp;
branches;
next	1.2;
commitid	o1zNBipxNSPQ0yHi;

1.2
date	2017.07.26.20.50.39;	author sthen;	state Exp;
branches;
next	1.1;
commitid	OxSXcGZsgFNStKKE;

1.1
date	2016.11.13.21.15.43;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	3xth9IUho9fHyTWj;

1.1.1.1
date	2016.11.13.21.15.43;	author landry;	state Exp;
branches;
next	;
commitid	3xth9IUho9fHyTWj;


desc
@@


1.3
log
@update to tor-browser 7.0.4, from attila (maintainer)
@
text
@// c.f. https://mike.kaply.com/2016/05/24/default-profile-directory-doesnt-work-in-firefox-46/

const {classes: Cc, interfaces: Ci, utils: Cu} = Components;
Cu.import("resource://gre/modules/Services.jsm");
Cu.import("resource://gre/modules/FileUtils.jsm");

var profileDir = Services.dirsvc.get("ProfD", Ci.nsIFile);
var certDBFile = profileDir.clone();
certDBFile.append("cert8.db")
// If cert8.db isn't there, it's a new profile
if (!certDBFile.exists()) {
  var defaultProfileDir = Services.dirsvc.get("GreD", Ci.nsIFile);
  defaultProfileDir.append("browser");
  defaultProfileDir.append("defaults");
  defaultProfileDir.append("profile");
  try {
    copyDir(defaultProfileDir, profileDir);
  } catch (e) {
    Components.utils.reportError(e);
  }
}
 
function copyDir(aOriginal, aDestination) {
  var enumerator = aOriginal.directoryEntries;
  while (enumerator.hasMoreElements()) {
    var file = enumerator.getNext().QueryInterface(Components.interfaces.nsIFile);
    if (file.isDirectory()) {
      var subdir = aDestination.clone();
      subdir.append(file.leafName);
      try {
        subdir.create(Ci.nsIFile.DIRECTORY_TYPE, FileUtils.PERMS_DIRECTORY);
        copyDir(file, subdir);
      } catch (e) {
        Components.utils.reportError(e);
      }
    } else {
      try {
        file.copyTo(aDestination, null);
      } catch (e) {
        Components.utils.reportError(e);
      }
    }
  }
}

// OpenBSD: Initialize <ProfD>/torrc to an empty config.
// The first SAVECONF to the tor control socket will overwrite it.

// mimic the code in tl-util.jsm from tor-launcher
var dir = Cc["@@mozilla.org/file/directory_service;1"].
           getService(Ci.nsIProperties).get("ProfD", Ci.nsIFile);
var file = dir.parent.parent;
file.append("torrc");
if (!file.exists()) {
    var stream = Cc["@@mozilla.org/network/file-output-stream;1"].
                 createInstance(Ci.nsIFileOutputStream);
    stream.init(file, 0x04 | 0x08 | 0x20, 0600, 0);
    stream.write("#\n", 2);
    stream.close();
}
@


1.2
log
@update to tor-browser 7.0.2 and related extensions. from attila (maintainer).
also fixes build on a clang+libc++ system.

there's a possible issue where the bookmark toolbar uses firefox defaults -
to be investigated further, committing early as the previous version doesn't
package any more.
@
text
@d1 44
d48 1
a48 2
var Cc = Components.classes;
var Ci = Components.interfaces;
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
// OpenBSD: Initialize ~/.tor-browser/torrc to an empty config.
d6 4
a9 2
var file = Cc["@@mozilla.org/file/directory_service;1"].
           getService(Ci.nsIProperties).get("DefProfRt", Ci.nsIFile);
@


1.1.1.1
log
@Import (finally!) Tor Browser 6.0.5.

All the credit goes to Sean Levy - attila at stalphonsos dot com, from
the tor BSD diversity project, https://torbsd.github.io/ - who
spent countless hours polishing and improving this out of tree.

This bundles 5 ports:
* tb-browser, a Firefox ESR fork
* torbutton 1.9.5.7, a button to configure parameters
* tor-launcher 0.2.9.3, to manage a tor instance
* tb-noscript 2.9.0.14, a well known js blocker
* tb-https-everwhere 5.2.4, try to force https where possible

Note that the extensions are installed within tb-browser directory and
won't work as-is in a regular Firefox instance.

======================================================================
Tor Browser (TB) is a customized version of Firefox Extended Service
Release built specifically for internet browsing over the Tor
anonymity network.

TB's configuration aims to mitigate attacks on a client's anonymity,
including determining the client's actual IP address and browser
fingerprinting.  Other aspects of Firefox have also been patched
to plug privacy leaks in ways not possible any other way.

TB includes custom Firefox add-ons only meant for TB, including
NoScript, HTTPS Everywhere, TorButton and Tor-Launcher.  This package
provides merely the modified version of Firefox ESR.  Please install
the tor-browser meta-package to make sure you have everything installed
correctly.

Remember that there are no perfect privacy or anonymity solutions, and
this includes TB.  As always you must pay attention and in many cases
modify your behavior to ensure your privacy online.  Note that JS is
blocked everywhere by default in TB using NoScript.
======================================================================

On a personal note (as a Mozilla developer), i'll just add that Tor
Browser is heavily patched in various ways, so think before putting your
browsing habits in someone's hands - read
https://www.torproject.org/projects/torbrowser/design/ to make up your
mind.

Of course, having this in the ports tree doesn't mean that the OpenBSD
project specifically endorses or recommends usage of Tor or Tor Browser.
If you want to keep your privacy, *use your brain* or stay offline.

ok danj@@
@
text
@@
