head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	landry_20161113:1.1.1.1
	attila:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.12.02.08.18.19;	author landry;	state Exp;
branches;
next	1.1;
commitid	po04Vu95AMw6J5YA;

1.1
date	2016.11.13.21.15.43;	author landry;	state Exp;
branches
	1.1.1.1;
next	;
commitid	3xth9IUho9fHyTWj;

1.1.1.1
date	2016.11.13.21.15.43;	author landry;	state Exp;
branches;
next	;
commitid	3xth9IUho9fHyTWj;


desc
@@


1.2
log
@Update to tor-browser 6.0.7, patching CVE-2016-9079 (Use-after-free in
SVG Animation).
updates:
- https-everywhere to 5.2.7
- noscript to 2.9.5.2
- tor-launcher to 0.2.9.4
- torbutton to 1.9.5.12

From MAINTAINER attila // stalphonsos // com.
@
text
@$OpenBSD: patch-src_components_tl-process_js,v 1.1.1.1 2016/11/13 21:15:43 landry Exp $

Let geoip/geoip6 file paths be set by prefs like everything else.  Go
back to old way of munging relative paths, their new way is
effectively a no-op for us anyway.
--- src/components/tl-process.js.orig	Wed Nov  9 04:55:57 2016
+++ src/components/tl-process.js	Fri Nov 18 17:04:27 2016
@@@@ -309,6 +309,7 @@@@ TorProcessService.prototype =
   mIsQuitting: false,
   mObsSvc: null,
   mProtocolSvc: null,
+  mTorFileBaseDir: null,
   mTorProcess: null,    // nsIProcess
   mTorProcessStartTime: null, // JS Date.now()
   // mIsUserDataOutsideOfAppDir is true when TorBrowser-Data is used.
@@@@ -341,6 +342,8 @@@@ TorProcessService.prototype =
       var exeFile = this._getTorFile("tor", false);
       var torrcFile = this._getTorFile("torrc", true);
       var torrcDefaultsFile = this._getTorFile("torrc-defaults", false);
+      var geoipFile = this._getTorFile("geoip", false);
+      var geoip6File = this._getTorFile("geoip6", false);
       var hashedPassword = this.mProtocolSvc.TorGetPassword(true);
 
       var detailsKey;
@@@@ -364,18 +367,12 @@@@ TorProcessService.prototype =
       }
 
 
-      // The geoip and geoip6 files are in the same directory as torrc-defaults.
-      var geoipFile = torrcDefaultsFile.clone();
-      geoipFile.leafName = "geoip";
-
-      var geoip6File = torrcDefaultsFile.clone();
-      geoip6File.leafName = "geoip6";
-
       var args = [];
       if (torrcDefaultsFile)
       {
         args.push("--defaults-torrc");
         args.push(torrcDefaultsFile.path);
+        args.push("--ignore-missing-torrc");
       }
       args.push("-f");
       args.push(torrcFile.path);
@@@@ -684,10 +681,10 @@@@ TorProcessService.prototype =
       return null;
 
     let isRelativePath = true;
-    let isUserData = (aTorFileType != "tor") &&
-                     (aTorFileType != "torrc-defaults");
     let prefName = "extensions.torlauncher." + aTorFileType + "_path";
     let path = TorLauncherUtil.getCharPref(prefName);
+    // N.B. On OpenBSD, path will always be set via prefs.js
+    TorLauncherLogger.log(4, "_getTorFile("+aTorFileType+ ") "+prefName+" = "+path);
     if (path)
     {
       let re = (TorLauncherUtil.isWindows) ?  /^[A-Za-z]:\\/ : /^\//;
@@@@ -768,16 +765,13 @@@@ TorProcessService.prototype =
       if (isRelativePath)
       {
         // Turn 'path' into an absolute path.
-        if (this._isUserDataOutsideOfAppDir)
+        if (!this.mTorFileBaseDir)
         {
-          let baseDir = isUserData ? this._dataDir : this._appDir;
-          f = baseDir.clone();
+          this.mTorFileBaseDir = Cc["@@mozilla.org/file/directory_service;1"]
+                                   .getService(Ci.nsIProperties)
+                                   .get("DefProfRt", Ci.nsIFile);
         }
-        else
-        {
-          f = this._appDir.clone();
-          f.append("TorBrowser");
-        }
+        f = this.mTorFileBaseDir.clone();
         f.appendRelativePath(path);
       }
       else
@@@@ -805,6 +799,8 @@@@ TorProcessService.prototype =
       if (f.exists())
       {
         try { f.normalize(); } catch(e) {}
+
+        TorLauncherLogger.log(5,"_getTorFile: "+aTorFileType+" => "+f.path);
 
         return f;
       }
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d6 2
a7 2
--- src/components/tl-process.js.orig	Tue May 24 16:33:24 2016
+++ src/components/tl-process.js	Thu Jun 23 09:54:49 2016
d45 1
a45 1
@@@@ -679,10 +676,10 @@@@ TorProcessService.prototype =
d58 1
a58 1
@@@@ -763,16 +760,13 @@@@ TorProcessService.prototype =
d80 1
a80 1
@@@@ -800,6 +794,8 @@@@ TorProcessService.prototype =
@


1.1.1.1
log
@Import (finally!) Tor Browser 6.0.5.

All the credit goes to Sean Levy - attila at stalphonsos dot com, from
the tor BSD diversity project, https://torbsd.github.io/ - who
spent countless hours polishing and improving this out of tree.

This bundles 5 ports:
* tb-browser, a Firefox ESR fork
* torbutton 1.9.5.7, a button to configure parameters
* tor-launcher 0.2.9.3, to manage a tor instance
* tb-noscript 2.9.0.14, a well known js blocker
* tb-https-everwhere 5.2.4, try to force https where possible

Note that the extensions are installed within tb-browser directory and
won't work as-is in a regular Firefox instance.

======================================================================
Tor Browser (TB) is a customized version of Firefox Extended Service
Release built specifically for internet browsing over the Tor
anonymity network.

TB's configuration aims to mitigate attacks on a client's anonymity,
including determining the client's actual IP address and browser
fingerprinting.  Other aspects of Firefox have also been patched
to plug privacy leaks in ways not possible any other way.

TB includes custom Firefox add-ons only meant for TB, including
NoScript, HTTPS Everywhere, TorButton and Tor-Launcher.  This package
provides merely the modified version of Firefox ESR.  Please install
the tor-browser meta-package to make sure you have everything installed
correctly.

Remember that there are no perfect privacy or anonymity solutions, and
this includes TB.  As always you must pay attention and in many cases
modify your behavior to ensure your privacy online.  Note that JS is
blocked everywhere by default in TB using NoScript.
======================================================================

On a personal note (as a Mozilla developer), i'll just add that Tor
Browser is heavily patched in various ways, so think before putting your
browsing habits in someone's hands - read
https://www.torproject.org/projects/torbrowser/design/ to make up your
mind.

Of course, having this in the ports tree doesn't mean that the OpenBSD
project specifically endorses or recommends usage of Tor or Tor Browser.
If you want to keep your privacy, *use your brain* or stay offline.

ok danj@@
@
text
@@
