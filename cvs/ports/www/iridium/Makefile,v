head	1.65;
access;
symbols
	OPENBSD_6_2:1.65.0.2
	OPENBSD_6_2_BASE:1.65
	OPENBSD_6_1:1.56.0.2
	OPENBSD_6_1_BASE:1.56
	OPENBSD_6_0:1.54.0.2
	OPENBSD_6_0_BASE:1.54
	OPENBSD_5_9:1.44.0.2
	OPENBSD_5_9_BASE:1.44
	OPENBSD_5_8:1.18.0.4
	OPENBSD_5_8_BASE:1.18
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.65
date	2017.07.26.22.45.31;	author sthen;	state Exp;
branches;
next	1.64;
commitid	tD4MFrpYYDDL2UFT;

1.64
date	2017.07.23.19.03.33;	author robert;	state Exp;
branches;
next	1.63;
commitid	ibhCzbgSSxhgQLsG;

1.63
date	2017.07.16.19.19.03;	author espie;	state Exp;
branches;
next	1.62;
commitid	tt0GhWK5c4uf9ILG;

1.62
date	2017.05.31.08.08.17;	author espie;	state Exp;
branches;
next	1.61;
commitid	ij92FtFXiSiT1ani;

1.61
date	2017.05.26.09.52.16;	author espie;	state Exp;
branches;
next	1.60;
commitid	vgLvzNzPdcKkFXCg;

1.60
date	2017.04.28.22.22.36;	author robert;	state Exp;
branches;
next	1.59;
commitid	hEiDsbcK5ON7rnmo;

1.59
date	2017.04.22.11.53.55;	author naddy;	state Exp;
branches;
next	1.58;
commitid	GtSPwFFDMaooh9ga;

1.58
date	2017.04.22.07.47.35;	author robert;	state Exp;
branches;
next	1.57;
commitid	Sb3GZFqrZxoWV7S1;

1.57
date	2017.04.19.05.16.46;	author robert;	state Exp;
branches;
next	1.56;
commitid	jpW2BiKwA9H7U7d6;

1.56
date	2016.10.27.18.30.40;	author robert;	state Exp;
branches;
next	1.55;
commitid	lED1Oks5HVh03mCa;

1.55
date	2016.08.25.20.00.07;	author sthen;	state Exp;
branches;
next	1.54;
commitid	zcBP2Im9altB5c41;

1.54
date	2016.07.12.06.05.32;	author robert;	state Exp;
branches;
next	1.53;
commitid	ITZF1GxikKWpbxyb;

1.53
date	2016.06.02.16.34.50;	author robert;	state Exp;
branches;
next	1.52;
commitid	WNFxUrDcvX2EszKC;

1.52
date	2016.05.28.16.37.10;	author robert;	state Exp;
branches;
next	1.51;
commitid	aIKtUREkDKzrw5oq;

1.51
date	2016.05.28.14.49.39;	author robert;	state Exp;
branches;
next	1.50;
commitid	e1vpcgKLVeZdUbdR;

1.50
date	2016.05.20.15.36.05;	author robert;	state Exp;
branches;
next	1.49;
commitid	qC64HGNGQR4E2jxg;

1.49
date	2016.04.27.12.46.16;	author robert;	state Exp;
branches;
next	1.48;
commitid	yOrwVI71D7bLHmrO;

1.48
date	2016.03.23.20.13.06;	author robert;	state Exp;
branches;
next	1.47;
commitid	2hNT21XsdisESysQ;

1.47
date	2016.03.09.14.21.23;	author naddy;	state Exp;
branches;
next	1.46;
commitid	aFn6qYVcRMMqlPCE;

1.46
date	2016.03.09.13.18.10;	author naddy;	state Exp;
branches;
next	1.45;
commitid	GeZoh0hIoxe7MyDE;

1.45
date	2016.03.05.16.04.06;	author pascal;	state Exp;
branches;
next	1.44;
commitid	EJSWd5DpdfEFGBlM;

1.44
date	2016.02.23.11.53.30;	author robert;	state Exp;
branches;
next	1.43;
commitid	5GSMVHmOTWIH15ly;

1.43
date	2016.02.17.07.23.26;	author robert;	state Exp;
branches;
next	1.42;
commitid	QDPG5DeZit05LPlK;

1.42
date	2016.02.15.18.09.04;	author robert;	state Exp;
branches;
next	1.41;
commitid	K33bH5zePC7tv2nZ;

1.41
date	2016.02.15.18.07.52;	author robert;	state Exp;
branches;
next	1.40;
commitid	R0eKGRSW56iYyJ8K;

1.40
date	2016.02.01.15.09.01;	author robert;	state Exp;
branches;
next	1.39;
commitid	y13gJFCxfcrc1u7F;

1.39
date	2016.01.28.12.27.21;	author sthen;	state Exp;
branches;
next	1.38;
commitid	ddR8DsSTXWm8uOt7;

1.38
date	2016.01.18.11.41.50;	author sthen;	state Exp;
branches;
next	1.37;
commitid	6Ts2tdQvuCvhHsvD;

1.37
date	2016.01.17.17.29.12;	author sthen;	state Exp;
branches;
next	1.36;
commitid	bS2FIbTCCkF3XjOq;

1.36
date	2016.01.15.19.57.24;	author sthen;	state Exp;
branches;
next	1.35;
commitid	E468onXLCPTmHVpN;

1.35
date	2016.01.08.15.18.09;	author robert;	state Exp;
branches;
next	1.34;
commitid	GGnNyVdaRZkrDRcU;

1.34
date	2016.01.07.07.26.40;	author robert;	state Exp;
branches;
next	1.33;
commitid	TBD9NMbFa6lHNIhT;

1.33
date	2016.01.06.09.16.08;	author robert;	state Exp;
branches;
next	1.32;
commitid	HdtguHcJm0R7givZ;

1.32
date	2015.12.30.19.13.33;	author robert;	state Exp;
branches;
next	1.31;
commitid	jGrjPrGz0KKIQFry;

1.31
date	2015.12.28.09.53.27;	author robert;	state Exp;
branches;
next	1.30;
commitid	2TgUzHrA9onQRRf9;

1.30
date	2015.12.21.13.30.00;	author robert;	state Exp;
branches;
next	1.29;
commitid	Y6xshcrtkNFBK3TE;

1.29
date	2015.12.17.07.02.48;	author robert;	state Exp;
branches;
next	1.28;
commitid	ipujnT7CBcOVRvhV;

1.28
date	2015.11.20.11.24.04;	author sthen;	state Exp;
branches;
next	1.27;
commitid	xESrXKEQBEZ66Kvo;

1.27
date	2015.11.14.22.47.59;	author sthen;	state Exp;
branches;
next	1.26;
commitid	YeKtv0jyVCCYAayc;

1.26
date	2015.11.12.10.56.39;	author robert;	state Exp;
branches;
next	1.25;
commitid	uqiQnJEhQUSD6OSA;

1.25
date	2015.10.24.18.22.21;	author robert;	state Exp;
branches;
next	1.24;
commitid	HwRgK4asvw18PlFu;

1.24
date	2015.08.29.07.27.24;	author robert;	state Exp;
branches;
next	1.23;
commitid	0kfAzElZJCCTwEqW;

1.23
date	2015.08.27.14.24.32;	author robert;	state Exp;
branches;
next	1.22;
commitid	IOFT18Bgt40NG11Q;

1.22
date	2015.08.25.15.08.44;	author robert;	state Exp;
branches;
next	1.21;
commitid	5vqzVdzbz3NHbh1d;

1.21
date	2015.08.17.20.04.16;	author sthen;	state Exp;
branches;
next	1.20;
commitid	Yxo2r3gGS2UtmrOy;

1.20
date	2015.08.17.17.21.31;	author robert;	state Exp;
branches;
next	1.19;
commitid	yHF19P80QYcchxsK;

1.19
date	2015.08.12.10.56.13;	author robert;	state Exp;
branches;
next	1.18;
commitid	WokHnx1ONPqT4wiW;

1.18
date	2015.07.14.10.39.33;	author robert;	state Exp;
branches;
next	1.17;
commitid	O27jJHHMhfwdPodP;

1.17
date	2015.07.12.14.44.34;	author robert;	state Exp;
branches;
next	1.16;
commitid	a9yu3CIxpGZRzanV;

1.16
date	2015.06.22.16.42.14;	author robert;	state Exp;
branches;
next	1.15;
commitid	g2Ak9LY3oUKy1u0S;

1.15
date	2015.06.15.14.51.24;	author robert;	state Exp;
branches;
next	1.14;
commitid	sywBB9vxUGpbAaDv;

1.14
date	2015.06.09.18.50.45;	author ajacoutot;	state Exp;
branches;
next	1.13;
commitid	8TEQtGHxV6aE5V5V;

1.13
date	2015.06.07.16.00.38;	author robert;	state Exp;
branches;
next	1.12;
commitid	CkhQ471W2ygWkRcA;

1.12
date	2015.06.03.16.00.01;	author robert;	state Exp;
branches;
next	1.11;
commitid	xNbJSvhV0D7pjxeU;

1.11
date	2015.06.02.19.56.15;	author robert;	state Exp;
branches;
next	1.10;
commitid	bx6bppkQtoKJtRfA;

1.10
date	2015.05.26.17.37.39;	author robert;	state Exp;
branches;
next	1.9;
commitid	imvK5OAjfFzbGwip;

1.9
date	2015.05.22.22.31.05;	author robert;	state Exp;
branches;
next	1.8;
commitid	qQUYsylxrPHuslXa;

1.8
date	2015.05.19.07.27.17;	author dcoppa;	state Exp;
branches;
next	1.7;
commitid	EpMxUPYh8sw9Uwcb;

1.7
date	2015.05.15.10.47.55;	author dcoppa;	state Exp;
branches;
next	1.6;
commitid	Ala40gCJV8x3JQ0k;

1.6
date	2015.05.14.11.45.56;	author espie;	state Exp;
branches;
next	1.5;
commitid	v7FqxlkWKbHoeyOn;

1.5
date	2015.05.13.05.52.58;	author sthen;	state Exp;
branches;
next	1.4;
commitid	DazYjEXkNLIDuXte;

1.4
date	2015.05.07.12.26.20;	author robert;	state Exp;
branches;
next	1.3;
commitid	R02Bpwo8EB0x1ZRY;

1.3
date	2015.05.06.14.27.23;	author robert;	state Exp;
branches;
next	1.2;
commitid	0TVTUxEI0BYra21v;

1.2
date	2015.05.03.20.19.09;	author robert;	state Exp;
branches;
next	1.1;
commitid	5lEDU79trDpUIddR;

1.1
date	2015.05.03.15.35.35;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.35;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.65
log
@bump LIBCXX/LIBECXX/COMPILER_LIBCXX ports.
@
text
@# $OpenBSD: Makefile,v 1.64 2017/07/23 19:03:33 robert Exp $

.include <bsd.port.arch.mk>

USE_WXNEEDED=		Yes

ONLY_FOR_ARCHS=		i386 amd64
DPB_PROPERTIES=		parallel

COMMENT=		Iridium browser

V=			58.0
DISTNAME=		iridium-browser-${V}
PKGNAME=		iridium-${V}
DISTFILES=		${DISTNAME}${EXTRACT_SUFX}

REVISION=		1

CATEGORIES=		www

HOMEPAGE=		https://iridiumbrowser.de/

MAINTAINER=		Robert Nagy <robert@@openbsd.org>

EXTRACT_SUFX=		.tar.xz

FLAVORS=		debug
FLAVOR?=

# BSD-like
PERMIT_PACKAGE_CDROM=	patents
PERMIT_PACKAGE_FTP =	Yes

MASTER_SITES=		https://downloads.iridiumbrowser.de/source/ \
			http://nerd.hu/distfiles/

MODULES=	lang/python

COMPILER =	clang gcc

MODPY_RUNDEP=	No

.if ${PROPERTIES:Mclang}
PATCH_LIST=	patch-* clang-*
.endif

PATCHORIG=	.orig.port

# uses pledge()
WANTLIB += X11 Xext Xfixes Xrender Xss c cairo cups dbus-1 event
WANTLIB += execinfo expat fontconfig freetype gconf-2 gdk-x11-2.0
WANTLIB += gdk_pixbuf-2.0 glib-2.0 gobject-2.0 gtk-x11-2.0
WANTLIB += m pango-1.0 pangocairo-1.0
WANTLIB += png pthread
WANTLIB += xml2 xslt
WANTLIB += sndio
WANTLIB += Xcomposite
WANTLIB += ${COMPILER_LIBCXX}
WANTLIB += Xi Xtst
WANTLIB += Xdamage
WANTLIB += Xcursor Xrandr gio-2.0
WANTLIB += nspr4 nss3 nssutil3 smime3
WANTLIB += atk-1.0 gmodule-2.0
WANTLIB += X11-xcb xcb

RUN_DEPENDS=	devel/xdg-utils \
		devel/desktop-file-utils \
		fonts/noto/fonts \
		graphics/libexif \
		x11/gnome/libgnome-keyring \
		x11/gtk+3,-guic
BUILD_DEPENDS=	archivers/bzip2 \
		devel/gperf \
		devel/bison \
		lang/node \
		devel/yasm \
		shells/bash \
		sysutils/flock \
		sysutils/pciutils \
		x11/gnome/libgnome-keyring \
		devel/ninja \
		x11/gtk+3 \
		${MODGCC4_CPPDEP}
LIB_DEPENDS=	devel/libexecinfo \
		security/nss \
		devel/gconf2 \
		textproc/libxslt \
		x11/gtk+2 \
		print/cups,-libs \
		${MODGCC4_CPPLIBDEP}

.include <bsd.own.mk>

# Set BUILDTYPE to Debug for a debug build
.if ${FLAVOR:Mdebug}
BUILDTYPE=	Debug
.else
BUILDTYPE=	Release
.endif

ALL_TARGET=	chrome
TEST_TARGET=	base_unittests

CONFIGURE_STYLE=none # prevent python MODULE from overriding do-build

BUILDDIR=	${WRKSRC}/out/${BUILDTYPE}

# These libraries are used from the system and the build infrastructure
# removes them from the bundled third_party directory and replaces them
# with hooks to use them from the system.
GN_SYSTEM_LIBS=	libevent \
		libxml \
		libxslt \
		yasm

GN_ARGS=	enable_nacl=false \
		is_debug=false \
		enable_webrtc=false \
		enable_one_click_signin=true \
		use_kerberos=false \
		use_sndio=true \
		use_cups=true \
		use_experimental_allocator_shim=false \
		is_clang=true \
		use_sysroot=false \
		treat_warnings_as_errors=false \
		clang_use_chrome_plugins=false \
		use_allocator=\"none\" \
		is_official_build=true \
		fieldtrial_testing_like_official_build=true \
		extra_cppflags=\"-idirafter ${LOCALBASE}/include -idirafter ${X11BASE}/include\" \
		extra_ldflags=\"-L${LOCALBASE}/lib -L${X11BASE}/lib\"

# Note: these keys are for OpenBSD use ONLY. For your own distribution,
# please get your own set of keys. It's free!
GN_ARGS+=	google_api_key=\"AIzaSyA015yecfJyWi8UQpneQVrNzIKlxjv4MhI\" \
		google_default_client_id=\"451220141585.apps.googleusercontent.com\" \
		google_default_client_secret=\"nQcDyaBvDyCeDrsRqKIWSHJn\" \
		ffmpeg_branding=\"Chrome\" \
		proprietary_codecs=true

.if ${FLAVOR:Mdebug}
GN_ARGS+=	remove_webcore_debug_symbols=true
MAKE_ENV+=	V=1
.endif

pre-configure:
	@@ln -sf ${MODPY_BIN} ${WRKDIR}/bin/python
.for _arch in x64 ia32
.  for _dir in avcodec avformat avutil
	@@cp -pR ${WRKSRC}/third_party/ffmpeg/chromium/config/Chrome/linux/${_arch}/lib${_dir} \
		${WRKSRC}/third_party/ffmpeg/chromium/config/Chrome/openbsd/${_arch}/lib${_dir}
.  endfor
.endfor
	@@mkdir -p ${WRKSRC}/media/audio/sndio ${WRKSRC}/media/audio/openbsd
	@@cp ${FILESDIR}/sndio_{out,in}put.{cc,h} ${WRKSRC}/media/audio/sndio
	@@cp ${FILESDIR}/audio_manager_openbsd.{cc,h} ${WRKSRC}/media/audio/openbsd
	@@mkdir -p ${WRKSRC}/third_party/node/openbsd/node-openbsd/bin
	@@ln -sf ${TRUEPREFIX}/bin/node ${WRKSRC}/third_party/node/openbsd/node-openbsd/bin/node

# Configuration consists of three steps:
# 1. replace the specified bundled libraries with hooks to use the system libs
# 2. bootstrap gn, the tool to generate ninja files
# 3. run gn with the appropriate configuration arguments
do-configure:
	@@cd ${WRKSRC} && env -i ${MAKE_ENV} build/linux/unbundle/replace_gn_files.py \
		--system-libraries ${GN_SYSTEM_LIBS}
	@@cd ${WRKSRC}/tools/gn && env -i ${MAKE_ENV} ${MODPY_BIN} bootstrap/bootstrap.py \
		--no-clean -s --gn-gen-args "${GN_ARGS}"
	@@cd ${WRKSRC} && env -i ${CONFIGURE_ENV} ${WRKSRC}/out/${BUILDTYPE}/gn \
		gen --args="${GN_ARGS}" out/Release

do-build:
	@@cd ${WRKSRC} && env -i ${MAKE_ENV} ninja \
		-j ${MAKE_JOBS} -C out/${BUILDTYPE} ${ALL_TARGET}

do-install:
	${INSTALL_DATA_DIR} ${PREFIX}/iridium
	${INSTALL_PROGRAM} ${BUILDDIR}/chrome ${PREFIX}/iridium/iridium
	${SUBST_PROGRAM} ${FILESDIR}/iridium ${PREFIX}/bin/iridium
	${INSTALL_MAN} ${BUILDDIR}/chrome.1 ${PREFIX}/man/man1/iridium.1

	${INSTALL_DATA} ${BUILDDIR}/*.pak ${PREFIX}/iridium

	${INSTALL_DATA_DIR} ${PREFIX}/iridium/locales
	${INSTALL_DATA} ${BUILDDIR}/locales/* ${PREFIX}/iridium/locales
	${INSTALL_DATA} ${BUILDDIR}/*.png ${PREFIX}/iridium
	${INSTALL_DATA} ${BUILDDIR}/*.service ${PREFIX}/iridium
	${INSTALL_DATA_DIR} ${PREFIX}/iridium/resources
	@@cp -Rp ${BUILDDIR}/resources/* ${PREFIX}/iridium/resources
	@@chown -R ${SHAREOWN}:${SHAREGRP} ${PREFIX}/iridium/resources
.for f in protoc icudtl.dat mksnapshot natives_blob.bin snapshot_blob.bin
	${INSTALL_DATA} ${BUILDDIR}/${f} ${PREFIX}/iridium
.endfor
.for s in 22 24 48 64 128 256
	${INSTALL_DATA_DIR} ${PREFIX}/share/icons/hicolor/${s}x${s}/apps
	${INSTALL_DATA} ${WRKSRC}/chrome/app/theme/chromium/product_logo_${s}.png \
		${PREFIX}/share/icons/hicolor/${s}x${s}/apps/iridium.png
.endfor
	${INSTALL_DATA_DIR} ${PREFIX}/share/applications
	${INSTALL_DATA} ${FILESDIR}/iridium-browser.desktop \
		${PREFIX}/share/applications/iridium-browser.desktop

.include <bsd.port.mk>
@


1.64
log
@make iridium build with system clang as well by applying the same
patches as for chromium plus some extra due to the version differences
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.63 2017/07/16 19:19:03 espie Exp $
d17 1
a17 1
REVISION=		0
@


1.63
log
@use COMPILER_LIBCXX where applicable
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.62 2017/05/31 08:08:17 espie Exp $
d17 2
d42 4
@


1.62
log
@switch everything to new COMPILER idiom, even stuff that won't build with clang
yet, but at least that part is done.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.61 2017/05/26 09:52:16 espie Exp $
d50 1
a50 1
WANTLIB += ${LIBECXX}
@


1.61
log
@use the MODGCC4* variables instead of hardcoding dependencies.
convert to WANT_CXX even though it might not work yet.
bump the ports that didn't even the full spec
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.60 2017/04/28 22:22:36 robert Exp $
d35 1
a35 1
WANT_CXX =	base clang gcc
@


1.60
log
@update to 58.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.59 2017/04/22 11:53:55 naddy Exp $
d33 1
a33 1
MODULES=	lang/clang lang/python gcc4
d35 1
a35 2
MODCLANG_ARCHS=	*
MODCLANG_LANGS=	c++
d50 1
a50 1
WANTLIB += estdc++>=17
d75 1
a75 1
		lang/gcc/4.9,-c++>=4.9,<4.10
d82 1
a82 1
		lang/gcc/4.9,-libs>=4.9,<4.10
@


1.59
log
@stray whitespace breaks make syntax
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.58 2017/04/22 07:47:35 robert Exp $
d10 1
a10 1
V=			57.0
d21 1
a21 1
#EXTRACT_SUFX=		.tar.xz
d57 1
d68 1
d116 1
d122 1
a122 1
		is_official_build=false \
d151 2
@


1.58
log
@add missing build dependency for gtk+3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.57 2017/04/19 05:16:46 robert Exp $
d73 1
a73 1
		x11/gtk+3 \  
@


1.57
log
@update to 57.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.56 2016/10/27 18:30:40 robert Exp $
d73 1
@


1.56
log
@update to 54.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.309 2016/10/26 06:22:07 robert Exp $
d10 1
a10 1
V=			54.0
d21 1
a21 1
EXTRACT_SUFX=		.tar.xz
d118 2
d139 4
a142 2
	@@cp -pR ${WRKSRC}/third_party/ffmpeg/chromium/config/Chrome/linux/${_arch}/libavutil \
		${WRKSRC}/third_party/ffmpeg/chromium/config/Chrome/openbsd/${_arch}/libavutil
d175 1
@


1.55
log
@use USE_WXNEEDED for chromium/iridium now that it works with gcc4
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.54 2016/07/12 06:05:32 robert Exp $
d10 1
a10 1
V=			51.1
d13 1
a13 9
REVISION=		2

WRKDIST=		${WRKDIR}/${DISTNAME:S/rc1//}

# The update from 43.4 to 43.5 is released as a patch
# this time due to the size of the tarball.
# XXX keep these lines for further releases
#PATCHFILES+=		iridium-browser-44.0-rc1-final.diff
#PATCH_DIST_STRIP=	-p1
d30 2
a31 2
MASTER_SITES=	https://downloads.iridiumbrowser.de/source/ \
		http://nerd.hu/distfiles/
d91 1
a94 5
CONFIGURE_ENV=	CPPFLAGS="-idirafter ${LOCALBASE}/include -idirafter ${X11BASE}/include" \
		LDFLAGS="-L${LOCALBASE}/lib -L${X11BASE}/lib" \
		GYP_GENERATORS=ninja

ALL_TARGET=	chrome
d98 22
a119 30
GYP_DEFS=	-Duse_system_bzip2=1 \
		-Duse_system_libevent=1 \
		-Duse_system_libjpeg=0 \
		-Duse_system_libpng=1 \
		-Duse_system_libusb=0 \
		-Duse_system_libvpx=0 \
		-Duse_system_libxml=1 \
		-Duse_system_sqlite=0 \
		-Duse_system_yasm=1 \
		-Duse_system_zlib=0 \
		-Duse_system_ssl=0 \
		-Duse_system_icu=0 \
		-Ddisable_nacl=1 \
		-Dlinux_breakpad=0 \
		-Duse_allocator=none \
		-Dlinux_strip_binary=0 \
		-Dlinux_use_heapchecker=0 \
		-Denable_webrtc=0 \
		-Denable_one_click_signin=1 \
		-Duse_kerberos=0 \
		-Duse_sndio=1 \
		-Duse_aura=1 \
		-Dclang=1 \
		-Dclang_use_chrome_plugins=0 \
		-Dwerror= \
		-Dno_gc_sections=1 \
		-Ddisable_fatal_linker_warnings=1 \
		-Dv8_use_external_startup_data=0 \
		-Dlibraries_for_target='-lestdc++' \
		-DOS=openbsd
d123 5
a127 13
GYP_DEFS+=	-Dgoogle_api_key='AIzaSyA015yecfJyWi8UQpneQVrNzIKlxjv4MhI' \
		-Dgoogle_default_client_id='451220141585.apps.googleusercontent.com' \
		-Dgoogle_default_client_secret='nQcDyaBvDyCeDrsRqKIWSHJn' \
		-Dffmpeg_branding=Chrome \
		-Dproprietary_codecs=1

.if ${MACHINE_ARCH} == "i386"
CARCH=		i386
.elif ${MACHINE_ARCH} == "amd64"
CARCH=		x86_64
.endif

REL!=		uname -r
d130 1
a130 1
GYP_DEFS+=	-Dremove_webcore_debug_symbols=1
a133 2
MODPY_ADJ_FILES=build/linux/unbundle/replace_gyp_files.py

a142 2
	# XXX Create a missing html file to avoid a build failure (unused in the actual package)
	@@touch ${WRKSRC}/chrome/test/data/webui/i18n_process_css_test.html
d144 4
a147 1
# gyp_chromium generates all the Makefiles from gyp
d149 6
a154 4
	cd ${WRKSRC} && \
		build/linux/unbundle/replace_gyp_files.py ${GYP_DEFS} && \
		env -i ${CONFIGURE_ENV} ${MODPY_BIN} build/gyp_chromium \
		${GYP_DEFS} "--depth=${WRKSRC}"
a156 12
	# Build all the resources as the first step to avoid build failures
	# due to internal dependency issues.
	@@cd ${WRKSRC}/out/${BUILDTYPE} && \
	for _r in generate_version_info cloud_policy_proto net_interfaces suggestions \
	cacheinvalidation cacheinvalidation_proto_cpp gfx_vector_icons \
	data_reduction_proxy_proto cloud_policy_code_generate common_constants \
	profile_reset_report_proto autofill_server_proto \
	$$(ninja -t targets | grep -E '(bindings_mojom|mojo_bindings|resources): phony' | \
		grep -v test | cut -d ':' -f1); do \
		cd ${WRKSRC} && env -i ${MAKE_ENV} ninja \
			-j ${MAKE_JOBS} -C out/${BUILDTYPE} $${_r}; \
	done
a168 1
	${INSTALL_DATA_DIR} ${PREFIX}/iridium/pseudo_locales
a169 1
	${INSTALL_DATA} ${BUILDDIR}/pseudo_locales/* ${PREFIX}/iridium/pseudo_locales
d174 1
a174 1
.for f in protoc icudtl.dat mksnapshot
@


1.54
log
@add the required recvfd pledges
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.53 2016/06/02 16:34:50 robert Exp $
d13 1
a13 1
REVISION=		1
d103 1
a103 1
		LDFLAGS="-L${LOCALBASE}/lib -L${X11BASE}/lib -Wl,-z,wxneeded" \
@


1.53
log
@add the -Wl,-z,wxneeded flag here as well
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.52 2016/05/28 16:37:10 robert Exp $
d11 1
a11 1
REVISION=		0
@


1.52
log
@add more mojom prebuild targets
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.51 2016/05/28 14:49:39 robert Exp $
d11 1
d101 1
a101 1
		LDFLAGS="-L${LOCALBASE}/lib -L${X11BASE}/lib" \
@


1.51
log
@update to 51.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.50 2016/05/20 15:36:05 robert Exp $
d188 2
a189 1
	$$(ninja -t targets | grep -E '(mojo_bindings|resources): phony' | grep -v test | cut -d ':' -f1); do \
@


1.50
log
@pre-build the autofill_server_proto target as well
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.49 2016/04/27 12:46:16 robert Exp $
d8 1
a8 1
V=			50.0
d204 1
d206 1
d211 1
a211 1
.for f in libexif.so protoc icudtl.dat mksnapshot
@


1.49
log
@update to iridium-50.0 and sync recent changes with chromium
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.48 2016/03/23 20:13:06 robert Exp $
d187 1
a187 1
	profile_reset_report_proto \
@


1.48
log
@update to 49.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.47 2016/03/09 14:21:23 naddy Exp $
d8 1
a8 1
V=			49.0
d168 1
a168 1
	@@cp ${FILESDIR}/sndio_output.{cc,h} ${WRKSRC}/media/audio/sndio
d187 1
@


1.47
log
@oops
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.46 2016/03/09 13:18:10 naddy Exp $
d8 1
a8 1
V=			48.2
a10 1
REVISION=		1
a152 1
MAKE_ENV+=	CPATH=${LOCALBASE}/include/c++/${MODGCC4_VERSION}.3/bits/:${LOCALBASE}/include/c++/${MODGCC4_VERSION}.3/:${LOCALBASE}/include/c++/${MODGCC4_VERSION}.3/${CARCH}-unknown-openbsd${REL}/
d186 1
a186 1
	data_reduction_proxy_proto cloud_policy_code_generate \
@


1.46
log
@droid-fonts -> noto-fonts
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.45 2016/03/05 16:04:06 pascal Exp $
d66 1
a66 1
		fonts/noto-fonts \
@


1.45
log
@Bump REVISION for lang/clang MODULE changes.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.44 2016/02/23 11:53:30 robert Exp $
d11 1
a11 1
REVISION=		0
d66 1
a66 1
		fonts/droid-fonts \
@


1.44
log
@security update to 48.2; ok sthen@@ and naddy
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.43 2016/02/17 07:23:26 robert Exp $
d11 1
@


1.43
log
@fix plist after the previous commit, sorry
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.42 2016/02/15 18:09:04 robert Exp $
d8 1
a8 1
V=			48.1
a10 1
REVISION=		0
@


1.42
log
@oops i accidentally disabled the pre-build targets, let's re-enable them
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.41 2016/02/15 18:07:52 robert Exp $
d11 1
@


1.41
log
@update to 48.1 (based on the latest stable chromium which contains security
fixes as well)

ok naddy@@ sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.40 2016/02/01 15:09:01 robert Exp $
d184 8
a191 8
#	@@cd ${WRKSRC}/out/${BUILDTYPE} && \
#	for _r in generate_version_info cloud_policy_proto net_interfaces suggestions \
#	cacheinvalidation cacheinvalidation_proto_cpp gfx_vector_icons \
#	data_reduction_proxy_proto cloud_policy_code_generate \
#	$$(ninja -t targets | grep -E '(mojo_bindings|resources): phony' | grep -v test | cut -d ':' -f1); do \
#		cd ${WRKSRC} && env -i ${MAKE_ENV} ninja \
#			-j ${MAKE_JOBS} -C out/${BUILDTYPE} $${_r}; \
#	done
@


1.40
log
@switch to libjpeg_turbo and merge the sandbox font handling patches from
chromium
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.39 2016/01/28 12:27:21 sthen Exp $
d8 1
a8 1
V=			47.0
a9 1
DISTFILES=		${DISTNAME}-stripped${EXTRACT_SUFX}
a10 1
REVISION=		5
d184 8
a191 8
	@@cd ${WRKSRC}/out/${BUILDTYPE} && \
	for _r in generate_version_info cloud_policy_proto net_interfaces suggestions \
	cacheinvalidation cacheinvalidation_proto_cpp gfx_vector_icons \
	data_reduction_proxy_proto \
	$$(ninja -t targets | grep -E '(mojo_bindings|resources): phony' | grep -v test | cut -d ':' -f1); do \
		cd ${WRKSRC} && env -i ${MAKE_ENV} ninja \
			-j ${MAKE_JOBS} -C out/${BUILDTYPE} $${_r}; \
	done
@


1.39
log
@prebuild a missing dep that I ran into with chromium on a bulk build; ok robert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.38 2016/01/18 11:41:50 sthen Exp $
d12 1
a12 1
REVISION=		4
d58 1
a58 1
WANTLIB += stdc++ estdc++>=17
d62 1
a62 1
WANTLIB += jpeg nspr4 nss3 nssutil3 smime3
d111 1
a111 1
		-Duse_system_libjpeg=1 \
d187 2
a188 1
	for _r in net_interfaces suggestions cacheinvalidation cacheinvalidation_proto_cpp gfx_vector_icons \
@


1.38
log
@properly bump
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.37 2016/01/17 17:29:12 sthen Exp $
d188 1
@


1.37
log
@sync WANTLIB
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2016/01/15 19:57:24 sthen Exp $
a8 1
REVISION=		0
d12 1
a12 1
REVISION=		3
@


1.36
log
@add an easily-greppable marker for ports known to use pledge().
it's not so important while they're only in patches in the ports tree,
but for any which get upstreamed it saves a ~100GB grep to find them.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2016/01/08 15:18:09 robert Exp $
d9 1
d59 1
a59 1
WANTLIB += estdc++>=17
@


1.35
log
@remove rpath from the GPU process's pledge call now that mesa has been taken care of
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2016/01/07 07:26:40 robert Exp $
d49 1
@


1.34
log
@pledge(2) iridium as well by syncing with the chromium port
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2016/01/06 09:16:08 robert Exp $
d12 1
a12 1
REVISION=		2
@


1.33
log
@do not notify about tracker urls on the console and the browser
bar unless --trk is specified, it is just too much vomit for
a non-developer
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2015/12/30 19:13:33 robert Exp $
d12 1
a12 1
REVISION=		1
@


1.32
log
@pretty-print the tracking addresses on the console
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2015/12/28 09:53:27 robert Exp $
d12 1
a12 1
REVISION=		0
@


1.31
log
@add mojo bindings to the pre-build targets
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2015/12/21 13:30:00 robert Exp $
d12 1
@


1.30
log
@update to 47.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2015/12/17 07:02:48 robert Exp $
d186 1
a186 1
	$$(ninja -t targets | grep 'resources: phony' | cut -d ':' -f1); do \
@


1.29
log
@update to 47.0rc1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2015/11/20 11:24:04 sthen Exp $
d8 1
a8 1
V=			47.0rc1
d10 1
a10 1
DISTFILES=		iridium-browser-47.0~test1${EXTRACT_SUFX}
d36 2
a37 1
MASTER_SITES=	https://downloads.iridiumbrowser.de/source/
@


1.28
log
@remove devel/flex dep, these are ok with base flex
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2015/11/14 22:47:59 sthen Exp $
d8 1
a8 1
V=			46.0
d10 1
a10 1
DISTFILES=		${DISTNAME}${EXTRACT_SUFX}
d13 2
d167 1
a167 1
	@@mkdir -p ${WRKSRC}/media/audio/sndio
d169 1
d198 2
a199 3
.for p in chrome_100_percent content_resources keyboard_resources resources
	${INSTALL_DATA} ${BUILDDIR}/${p}.pak ${PREFIX}/iridium
.endfor
@


1.27
log
@pre-build gfx_vector_icons in chromium+iridium, ok robert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2015/11/12 10:56:39 robert Exp $
a68 1
		devel/flex \
@


1.26
log
@update to 46.0-final
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2015/10/24 18:22:21 robert Exp $
d182 1
a182 1
	for _r in net_interfaces suggestions cacheinvalidation cacheinvalidation_proto_cpp \
@


1.25
log
@update to 46.0rc1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2015/08/29 07:27:24 robert Exp $
d10 2
a11 2
DISTFILES=		${DISTNAME}~rc1${EXTRACT_SUFX}
PKGNAME=		iridium-${V}rc1
@


1.24
log
@unbreak build:
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2015/08/27 14:24:32 robert Exp $
d8 1
a8 1
V=			44.1
d10 2
a11 3
DISTFILES=		${DISTNAME}${EXTRACT_SUFX}
PKGNAME=		iridium-${V}
REVISION=		0
d36 1
a36 1
MODULES=	lang/clang lang/python
d49 1
a49 1
WANTLIB += png pthread speex
d53 1
a53 1
WANTLIB += stdc++
d57 2
a58 2
WANTLIB += jpeg nspr4 nss3 nssutil3 plc4 smime3
WANTLIB += atk-1.0 gmodule-2.0 z
d62 1
d74 3
a76 2
		x11/gnome/libgnome-keyring
BUILD_DEPENDS+=	devel/ninja
d82 2
a83 2
		audio/speex \
		print/cups,-libs
a111 1
		-Duse_system_speex=1 \
d133 1
d144 9
d168 2
d182 1
a182 1
	for _r in net_interfaces suggestions \
@


1.23
log
@detect *BSD in the javascript code of webui and sync the build hacks from chromium
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2015/08/25 15:08:44 robert Exp $
d194 1
a194 1
	${INSTALL_DATA} ${BUILDDIR}/${f} ${PREFIX}/chrome
@


1.22
log
@update to 44.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2015/08/17 20:04:16 sthen Exp $
d12 1
d167 8
d193 2
a194 2
.for f in libexif.so libffmpegsumo.so libpdf.so protoc icudtl.dat mksnapshot
	if [ -f ${BUILDDIR}/${f} ]; then ${INSTALL_DATA} ${BUILDDIR}/${f} ${PREFIX}/iridium; fi
@


1.21
log
@sync WANTLIB
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2015/08/17 17:21:31 robert Exp $
d8 3
a10 3
V=			44.0
DISTNAME=		iridium-browser-44.0
DISTFILES=		${DISTNAME}~rc1${EXTRACT_SUFX}
a11 1
REVISION=		1
d16 2
a17 2
PATCHFILES+=		iridium-browser-44.0-rc1-final.diff
PATCH_DIST_STRIP=	-p1
@


1.20
log
@merge the patches from chromium that make iridium use the internal
libusb as well
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2015/08/12 10:56:13 robert Exp $
d12 1
a12 1
REVISION=		0
d59 1
a59 1
WANTLIB += atk-1.0 gmodule-2.0
@


1.19
log
@update to iridium-44.0 and also incorporate a patch from dcoppa@@
for the startup script that still had references to chromium directories.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2015/07/14 10:39:33 robert Exp $
d12 1
d52 1
a52 1
WANTLIB += usb-1.0 sndio
a76 1
		devel/libusb1 \
d108 1
a108 1
		-Duse_system_libusb=1 \
@


1.18
log
@update to 43.8
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2015/07/12 14:44:34 robert Exp $
d8 3
a10 3
V=			43.8
DISTNAME=		iridium-browser-43.8
DISTFILES=		${DISTNAME}-rc1${EXTRACT_SUFX}
d16 1
a16 1
PATCHFILES+=		iridium-browser-43.8-final.diff
@


1.17
log
@allow iridium to restart itself when necessary after asking the user
for confirmation
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2015/06/22 16:42:14 robert Exp $
d8 3
a10 3
V=			43.5
DISTNAME=		iridium-browser-43.4
DISTFILES=		${DISTNAME}${EXTRACT_SUFX}
a11 1
REVISION=		0
d15 2
a16 1
PATCHFILES+=		iridium-browser-43.4-5.diff
d58 1
@


1.16
log
@update to 43.5
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2015/06/15 14:51:24 robert Exp $
d12 1
@


1.15
log
@update to 43.4
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2015/06/09 18:50:45 ajacoutot Exp $
d8 2
a9 2
V=			43.4
DISTNAME=		iridium-browser-${V}
d12 5
@


1.14
log
@Unbreak, REVISION cannot go backwards.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2015/06/07 16:00:38 robert Exp $
d8 2
a9 2
V=			43.2
DISTNAME=		iridium-browser-43.0
a11 9
REVISION=		1

# The update from 43.0 to 43.3 is released as a patch
# this time due to the size of the tarball.
PATCHFILES+=		iridium-browser-43.0-1.diff \
			iridium-browser-43.1-2.diff \
			iridium-browser-43.2-3.diff

PATCH_DIST_STRIP=	-p1
@


1.13
log
@update to 43.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2015/06/03 16:00:01 robert Exp $
d12 1
@


1.12
log
@add a patch to avoid a crash on startup
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2015/06/02 19:56:15 robert Exp $
d13 1
a13 3
REVISION=		0

# The update from 43.0 to 43.1 is released as a patch
d16 2
a17 1
			iridium-browser-43.1-2.diff
@


1.11
log
@update to 43.2
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2015/05/26 17:37:39 robert Exp $
d12 2
@


1.10
log
@update to 43.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2015/05/22 22:31:05 robert Exp $
d8 1
a8 1
V=			43.1
d15 3
a17 1
PATCHFILES+=		iridium-browser-43.0-1.diff
@


1.9
log
@remove binutils hack
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2015/05/19 07:27:17 dcoppa Exp $
d8 2
a9 2
V=			42.0
DISTNAME=		iridium-browser-${V}
d12 5
a16 1
REVISION=		1
d33 1
a33 3
MASTER_SITES=	https://downloads.iridiumbrowser.de/source/ \
		http://nerd.hu/distfiles/
MASTER_SITES0=	http://nerd.hu/distfiles/
@


1.8
log
@
Zap bogus '${SUBST_CMD}' line
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2015/05/15 10:47:55 dcoppa Exp $
a142 13

BB_VER=		20150502
.if ${MACHINE_ARCH} == "i386" || ${FLAVOR:Mdebug}
GYP_DEFS+=	-Dlinux_use_bundled_binutils=1
DISTFILES+=	binutils-2.17-${MACHINE_ARCH}-${BB_VER}.tar.gz:0

pre-patch:
	@@mkdir -p ${WRKSRC}/third_party/binutils/Linux_x64/Release
	@@ln -fs ${WRKDIR}/binutils-2.17-${MACHINE_ARCH}-${BB_VER}/bin \
		${WRKSRC}/third_party/binutils/Linux_x64/Release/bin
.endif
SUPDISTFILES+=	binutils-2.17-amd64-${BB_VER}.tar.gz:0 \
		binutils-2.17-i386-${BB_VER}.tar.gz:0
@


1.7
log
@
Our nm doesn't support neither '-D' nor '-f', hence some non-critical
errors occur during chromium and iridium builds:

---8<---

[2581/10537] CXX obj/components/policy/core/common/cloud/policy_component_common.cloud_external_data_manager.o
[2582/10537] CXX obj/components/policy/core/common/cloud/policy_component_common.external_policy_data_updater.o
[2583/10537] CXX obj/components/policy/core/common/cloud/policy_component_common.component_cloud_policy_service.o
[2584/10537] SOLINK(module) libffmpegsumo.so
nm: unknown option -- D
usage: nm [-aCegnoprsuw] [file ...]

[8618/16362] STAMP obj/extensions/extensions_browser.actions_depends.stamp
[8619/16362] AR obj/extensions/libextensions_browser.a
nm: unknown option -- D
usage: nm [-aCegnoprsuw] [file ...]

---8<---

Fix these errors by using llvm-nm instead.

While here, also fix a typo into iridium's pkg/DESCR (missing verb).

OK robert@@ (maintainer)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2015/05/14 11:45:56 espie Exp $
a159 1
	${SUBST_CMD} ${WRKSRC}/content/common/plugin_list_posix.cc
@


1.6
log
@fix DESCR to fit in 80 columns, bump
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2015/05/13 05:52:58 sthen Exp $
d12 1
a12 1
REVISION=		0
@


1.5
log
@explicitly set DISTFILES, needed on i386
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2015/05/07 12:26:20 robert Exp $
d12 1
@


1.4
log
@add missing master_site, noted by naddy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2015/05/06 14:27:23 robert Exp $
d10 1
@


1.3
log
@update to iridium-browser-42.0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2015/05/03 20:19:09 robert Exp $
d29 1
@


1.2
log
@add a backup master site
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2015/05/03 15:35:35 robert Exp $
d8 1
a8 1
V=			41.2
d125 1
d141 13
a202 8

.include <bsd.port.arch.mk>

.if ${ARCH} == i386
PKG_ARGS= -DI386_DISABLE="@@comment "
.else
PKG_ARGS= -DI386_DISABLE=""
.endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.209 2015/04/04 09:21:04 ajacoutot Exp $
d27 2
a28 1
MASTER_SITES=	https://downloads.iridiumbrowser.de/source/
@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
