head	1.4;
access;
symbols
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2016.10.27.18.30.40;	author robert;	state Exp;
branches;
next	1.3;
commitid	lED1Oks5HVh03mCa;

1.3
date	2016.03.23.20.13.06;	author robert;	state Exp;
branches;
next	1.2;
commitid	2hNT21XsdisESysQ;

1.2
date	2015.05.06.14.27.23;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.35;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.35;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.4
log
@update to 54.0
@
text
@$OpenBSD: patch-base_process_process_handle_openbsd_cc,v 1.2 2016/03/06 10:51:13 robert Exp $
--- base/process/process_handle_openbsd.cc.orig.port	Thu Mar  3 09:47:09 2016
+++ base/process/process_handle_openbsd.cc	Thu Mar  3 09:49:15 2016
@@@@ -6,6 +6,8 @@@@
 #include "base/process/process_handle.h"
 
 #include <stddef.h>
+#include <sys/param.h>
+#include <sys/proc.h>
 #include <sys/sysctl.h>
 #include <sys/types.h>
 #include <unistd.h>
@@@@ -13,39 +15,64 @@@@
 namespace base {
 
 ProcessId GetParentProcessId(ProcessHandle process) {
-  struct kinfo_proc info;
+  struct kinfo_proc *info;
   size_t length;
+  pid_t ppid;
   int mib[] = { CTL_KERN, KERN_PROC, KERN_PROC_PID, process,
                 sizeof(struct kinfo_proc), 0 };
 
   if (sysctl(mib, arraysize(mib), NULL, &length, NULL, 0) < 0)
     return -1;
 
-  mib[5] = (length / sizeof(struct kinfo_proc));
+  info = (struct kinfo_proc *)malloc(length);
 
-  if (sysctl(mib, arraysize(mib), &info, &length, NULL, 0) < 0)
+  if (sysctl(mib, arraysize(mib), NULL, &length, NULL, 0) < 0)
     return -1;
 
-  return info.p_ppid;
+  info = (struct kinfo_proc *)malloc(length);
+
+  mib[5] = (length / sizeof(struct kinfo_proc));
+
+  if (sysctl(mib, arraysize(mib), info, &length, NULL, 0) < 0) {
+    ppid = -1;
+    goto out;
+  }
+
+  ppid = info->p_ppid;
+
+out:
+  free(info);
+  return ppid;
 }
 
 FilePath GetProcessExecutablePath(ProcessHandle process) {
-  struct kinfo_proc kp;
-  size_t len;
+  struct kinfo_proc *info;
+  size_t length;
+  char *path = NULL;
   int mib[] = { CTL_KERN, KERN_PROC, KERN_PROC_PID, process,
                 sizeof(struct kinfo_proc), 0 };
 
-  if (sysctl(mib, arraysize(mib), NULL, &len, NULL, 0) == -1)
+  if (sysctl(mib, arraysize(mib), NULL, &length, NULL, 0) == -1)
     return FilePath();
-  mib[5] = (len / sizeof(struct kinfo_proc));
-  if (sysctl(mib, arraysize(mib), &kp, &len, NULL, 0) < 0)
-    return FilePath();
-  if ((kp.p_flag & P_SYSTEM) != 0)
-    return FilePath();
-  if (strcmp(kp.p_comm, "chrome") == 0)
-    return FilePath(kp.p_comm);
 
-  return FilePath();
+  info = (struct kinfo_proc *)malloc(length);
+
+  mib[5] = (length / sizeof(struct kinfo_proc));
+
+  if (sysctl(mib, arraysize(mib), info, &length, NULL, 0) < 0)
+    goto out;
+
+  if ((info->p_flag & P_SYSTEM) != 0)
+    goto out;
+
+  if (strcmp(info->p_comm, "chrome") == 0) {
+    path = info->p_comm;
+    goto out;
+  }
+
+out:
+  free(info);
+  return FilePath(path);
 }
 
 }  // namespace base
@


1.3
log
@update to 49.0
@
text
@@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 4
a4 5
$OpenBSD: patch-base_process_process_handle_openbsd_cc,v 1.1 2013/10/29 06:51:34 robert Exp $
--- base/process/process_handle_openbsd.cc.orig.port	Fri Oct 18 20:52:30 2013
+++ base/process/process_handle_openbsd.cc	Fri Oct 18 23:28:42 2013
@@@@ -4,6 +4,8 @@@@
 
d7 1
d13 1
a13 1
@@@@ -11,39 +13,64 @@@@
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
