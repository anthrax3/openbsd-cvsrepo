head	1.3;
access;
symbols
	OPENBSD_6_1:1.1.0.2
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.04.28.22.22.36;	author robert;	state Exp;
branches;
next	1.2;
commitid	hEiDsbcK5ON7rnmo;

1.2
date	2017.04.19.05.16.47;	author robert;	state Exp;
branches;
next	1.1;
commitid	jpW2BiKwA9H7U7d6;

1.1
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	;
commitid	lED1Oks5HVh03mCa;


desc
@@


1.3
log
@update to 58.0
@
text
@$OpenBSD: patch-third_party_angle_BUILD_gn,v 1.7 2017/04/28 14:21:00 robert Exp $
--- third_party/angle/BUILD.gn.orig.port	Wed Apr 19 21:07:43 2017
+++ third_party/angle/BUILD.gn	Thu Apr 27 19:56:03 2017
@@@@ -656,10 +656,6 @@@@ foreach(is_shared_library,
 
     if (is_linux) {
       sources += rebase_path(util_gypi.util_linux_sources, ".", "util")
-      libs = [
-        "rt",
-        "dl",
-      ]
     }
 
     if (is_mac) {
@


1.2
log
@update to 57.0
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_angle_BUILD_gn,v 1.6 2017/03/14 12:18:54 robert Exp $
--- third_party/angle/BUILD.gn.orig.port	Fri Mar 10 10:09:56 2017
+++ third_party/angle/BUILD.gn	Fri Mar 10 10:10:07 2017
@@@@ -574,10 +574,6 @@@@ foreach(is_shared_library,
@


1.1
log
@update to 54.0
@
text
@d1 12
a12 10
$OpenBSD: patch-third_party_angle_BUILD_gn,v 1.3 2016/10/26 06:22:08 robert Exp $
--- third_party/angle/BUILD.gn.orig.port	Wed Oct 12 21:05:04 2016
+++ third_party/angle/BUILD.gn	Thu Oct 20 13:25:59 2016
@@@@ -150,6 +150,8 @@@@ static_library("angle_common") {
     ":angle_release_asserts_config",
     ":angle_common_config",
   ]
+
+  cflags = [ "-I/usr/XXXX" ]
 }
d14 1
a14 45
 config("angle_image_util_config") {
@@@@ -214,6 +216,7 @@@@ static_library("translator_lib") {
     # For some reason this warning doesn't get triggered in Chromium
     cflags = [ "/wd4718" ]
   }
+  cflags = [ "-I/usr/XXXX" ]
 }
 
 static_library("translator_static") {
@@@@ -304,6 +307,7 @@@@ config("libANGLE_config") {
   if (is_win) {
     cflags += [ "/wd4530" ]  # C++ exception handler used, but unwind semantics are not enabled.
   }
+  cflags += [ "-I/usr/XXXX" ]
 }
 
 static_library("libANGLE") {
@@@@ -408,6 +412,8 @@@@ static_library("libANGLE") {
       ":copy_compiler_dll",
     ]
   }
+
+  cflags = [ "-I/usr/XXXX" ]
 }
 
 config("shared_library_public_config") {
@@@@ -451,6 +457,7 @@@@ shared_library("libGLESv2") {
     ":includes",
     ":libANGLE",
   ]
+  ldflags = [ "-L/usr/X11R6/lib" ]
 }
 
 shared_library("libEGL") {
@@@@ -506,10 +513,6 @@@@ static_library("angle_util") {
 
   if (is_linux) {
     sources += rebase_path(util_gypi.util_linux_sources, ".", "util")
-    libs = [
-      "rt",
-      "dl",
-    ]
   }
 
   if (is_mac) {
@

