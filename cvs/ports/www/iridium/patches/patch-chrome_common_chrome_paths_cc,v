head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.2
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.9.0.2
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2017.04.28.22.22.36;	author robert;	state Exp;
branches;
next	1.10;
commitid	hEiDsbcK5ON7rnmo;

1.10
date	2017.04.19.05.16.47;	author robert;	state Exp;
branches;
next	1.9;
commitid	jpW2BiKwA9H7U7d6;

1.9
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.8;
commitid	lED1Oks5HVh03mCa;

1.8
date	2016.05.28.14.49.39;	author robert;	state Exp;
branches;
next	1.7;
commitid	e1vpcgKLVeZdUbdR;

1.7
date	2016.03.23.20.13.07;	author robert;	state Exp;
branches;
next	1.6;
commitid	2hNT21XsdisESysQ;

1.6
date	2015.12.17.07.02.48;	author robert;	state Exp;
branches;
next	1.5;
commitid	ipujnT7CBcOVRvhV;

1.5
date	2015.10.24.18.22.21;	author robert;	state Exp;
branches;
next	1.4;
commitid	HwRgK4asvw18PlFu;

1.4
date	2015.08.12.10.56.13;	author robert;	state Exp;
branches;
next	1.3;
commitid	WokHnx1ONPqT4wiW;

1.3
date	2015.05.26.17.37.40;	author robert;	state Exp;
branches;
next	1.2;
commitid	imvK5OAjfFzbGwip;

1.2
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.36;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.36;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.11
log
@update to 58.0
@
text
@$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.38 2017/04/28 14:21:00 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Apr 19 21:06:30 2017
+++ chrome/common/chrome_paths.cc	Thu Apr 27 19:56:00 2017
@@@@ -51,14 +51,14 @@@@ const base::FilePath::CharType kPepperFlashSystemBaseD
 const base::FilePath::CharType kInternalNaClPluginFileName[] =
     FILE_PATH_LITERAL("internal-nacl-plugin");
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 // The path to the external extension <id>.json files.
 // /usr/share seems like a good choice, see: http://www.pathname.com/fhs/
 const base::FilePath::CharType kFilepathSinglePrefExtensions[] =
 #if defined(GOOGLE_CHROME_BUILD)
     FILE_PATH_LITERAL("/usr/share/google-chrome/extensions");
 #else
-    FILE_PATH_LITERAL("/usr/share/chromium/extensions");
+    FILE_PATH_LITERAL("/usr/local/share/chromium/extensions");
 #endif  // defined(GOOGLE_CHROME_BUILD)
 
 // The path to the hint file that tells the pepper plugin loader
@@@@ -190,7 +190,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
         return false;
       break;
     case chrome::DIR_DEFAULT_DOWNLOADS_SAFE:
-#if defined(OS_WIN) || defined(OS_LINUX)
+#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_BSD)
       if (!GetUserDownloadsDirectorySafe(&cur))
         return false;
       break;
@@@@ -426,7 +426,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
       break;
 #endif
 #if BUILDFLAG(ENABLE_SUPERVISED_USERS)
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
     case chrome::DIR_SUPERVISED_USERS_DEFAULT_APPS:
       if (!PathService::Get(chrome::DIR_STANDALONE_EXTERNAL_EXTENSIONS, &cur))
         return false;
@@@@ -474,7 +474,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
       if (!base::PathExists(cur))  // We don't want to create this
         return false;
       break;
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
     case chrome::DIR_POLICY_FILES: {
 #if defined(GOOGLE_CHROME_BUILD)
       cur = base::FilePath(FILE_PATH_LITERAL("/etc/opt/chrome/policies"));
@@@@ -485,7 +485,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
     }
 #endif
 #if defined(OS_CHROMEOS) || (defined(OS_LINUX) && defined(CHROMIUM_BUILD)) || \
-    defined(OS_MACOSX)
+    defined(OS_MACOSX) || defined(OS_BSD)
     case chrome::DIR_USER_EXTERNAL_EXTENSIONS: {
       if (!PathService::Get(chrome::DIR_USER_DATA, &cur))
         return false;
@@@@ -493,7 +493,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
       break;
     }
 #endif
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
     case chrome::DIR_STANDALONE_EXTERNAL_EXTENSIONS: {
       cur = base::FilePath(kFilepathSinglePrefExtensions);
       break;
@@@@ -528,7 +528,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
 #endif
       break;
 
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_LINUX) || defined(OS_MACOSX) || defined(OS_BSD)
     case chrome::DIR_NATIVE_MESSAGING:
 #if defined(OS_MACOSX)
 #if defined(GOOGLE_CHROME_BUILD)
@


1.10
log
@update to 57.0
@
text
@d1 3
a3 3
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.37 2017/03/14 12:18:53 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Thu Mar  9 21:04:29 2017
+++ chrome/common/chrome_paths.cc	Fri Mar 10 07:46:20 2017
d21 1
a21 1
@@@@ -197,7 +197,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.9
log
@update to 54.0
@
text
@d1 21
a21 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.35 2016/09/01 16:28:11 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Thu Sep  1 00:03:28 2016
+++ chrome/common/chrome_paths.cc	Thu Sep  1 11:12:21 2016
@@@@ -190,7 +190,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d30 1
a30 1
@@@@ -424,7 +424,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d33 1
a33 1
 #if defined(ENABLE_SUPERVISED_USERS)
d39 1
a39 1
@@@@ -472,7 +472,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d48 27
@


1.8
log
@update to 51.1
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.33 2016/05/27 06:28:20 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed May 25 21:00:58 2016
+++ chrome/common/chrome_paths.cc	Thu May 26 08:09:42 2016
@@@@ -170,7 +170,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -400,7 +400,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d22 1
a22 1
@@@@ -448,7 +448,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.7
log
@update to 49.0
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.32 2016/03/06 10:51:14 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Feb 24 00:01:59 2016
+++ chrome/common/chrome_paths.cc	Thu Mar  3 09:43:26 2016
@@@@ -178,7 +178,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -422,7 +422,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d22 1
a22 1
@@@@ -470,7 +470,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.6
log
@update to 47.0rc1
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.31 2015/12/12 20:20:01 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Tue Dec  8 21:02:52 2015
+++ chrome/common/chrome_paths.cc	Sat Dec 12 11:26:09 2015
@@@@ -177,7 +177,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -419,7 +419,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d22 1
a22 1
@@@@ -467,7 +467,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.5
log
@update to 46.0rc1
@
text
@d1 3
a3 3
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.29 2015/10/14 16:42:07 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Tue Oct 13 21:04:32 2015
+++ chrome/common/chrome_paths.cc	Wed Oct 14 07:41:13 2015
d13 10
a22 1
@@@@ -460,7 +460,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.4
log
@update to iridium-44.0 and also incorporate a patch from dcoppa@@
for the startup script that still had references to chromium directories.
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.27 2015/07/23 13:44:04 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Jul 15 22:29:59 2015
+++ chrome/common/chrome_paths.cc	Wed Jul 22 08:37:29 2015
@@@@ -179,7 +179,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -452,7 +452,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.3
log
@update to 43.1
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.26 2015/05/24 15:51:53 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Thu May 14 00:35:46 2015
+++ chrome/common/chrome_paths.cc	Sat May 23 01:07:45 2015
@@@@ -198,7 +198,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
d13 1
a13 1
@@@@ -488,7 +488,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 13
a13 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.25 2015/04/27 16:38:25 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Wed Apr 15 00:31:22 2015
+++ chrome/common/chrome_paths.cc	Wed Apr 15 08:32:50 2015
@@@@ -460,7 +460,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_common_chrome_paths_cc,v 1.24 2014/10/13 06:49:19 robert Exp $
--- chrome/common/chrome_paths.cc.orig.port	Thu Oct  2 19:39:46 2014
+++ chrome/common/chrome_paths.cc	Fri Oct 10 16:10:30 2014
@@@@ -461,7 +461,7 @@@@ bool PathProvider(int key, base::FilePath* result) {
@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
