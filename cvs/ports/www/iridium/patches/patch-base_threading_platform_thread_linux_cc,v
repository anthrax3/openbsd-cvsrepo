head	1.8;
access;
symbols
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2016.10.27.18.30.40;	author robert;	state Exp;
branches;
next	1.7;
commitid	lED1Oks5HVh03mCa;

1.7
date	2016.04.27.12.46.16;	author robert;	state Exp;
branches;
next	1.6;
commitid	yOrwVI71D7bLHmrO;

1.6
date	2016.03.23.20.13.06;	author robert;	state Exp;
branches;
next	1.5;
commitid	2hNT21XsdisESysQ;

1.5
date	2015.10.24.18.22.21;	author robert;	state Exp;
branches;
next	1.4;
commitid	HwRgK4asvw18PlFu;

1.4
date	2015.08.12.10.56.13;	author robert;	state Exp;
branches;
next	1.3;
commitid	WokHnx1ONPqT4wiW;

1.3
date	2015.05.26.17.37.39;	author robert;	state Exp;
branches;
next	1.2;
commitid	imvK5OAjfFzbGwip;

1.2
date	2015.05.06.14.27.23;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.35;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.35;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.8
log
@update to 54.0
@
text
@$OpenBSD: patch-base_threading_platform_thread_linux_cc,v 1.11 2016/10/26 06:22:07 robert Exp $
--- base/threading/platform_thread_linux.cc.orig.port	Wed Oct 19 13:23:29 2016
+++ base/threading/platform_thread_linux.cc	Wed Oct 19 14:18:22 2016
@@@@ -19,7 +19,9 @@@@
 
 #if !defined(OS_NACL)
 #include <pthread.h>
+#if !defined(OS_BSD)
 #include <sys/prctl.h>
+#endif
 #include <sys/resource.h>
 #include <sys/time.h>
 #include <sys/types.h>
@@@@ -110,7 +112,7 @@@@ void PlatformThread::SetName(const std::string& name) 
   ThreadIdNameManager::GetInstance()->SetName(CurrentId(), name);
   tracked_objects::ThreadData::InitializeThreadContext(name);
 
-#if !defined(OS_NACL)
+#if !defined(OS_NACL) && !defined(OS_BSD)
   // On linux we can get the thread names to show up in the debugger by setting
   // the process name for the LWP.  We don't want to do this for the main
   // thread because that would rename the process, causing tools like killall
@@@@ -130,7 +132,7 @@@@ void PlatformThread::SetName(const std::string& name) 
 #endif  //  !defined(OS_NACL)
 }
 
-#if !defined(OS_NACL)
+#if !defined(OS_NACL) && !defined(OS_BSD)
 // static
 void PlatformThread::SetThreadPriority(PlatformThreadId thread_id,
                                        ThreadPriority priority) {
@


1.7
log
@update to iridium-50.0 and sync recent changes with chromium
@
text
@d1 4
a4 4
$OpenBSD: patch-base_threading_platform_thread_linux_cc,v 1.10 2016/04/16 19:08:45 robert Exp $
--- base/threading/platform_thread_linux.cc.orig.port	Fri Apr  8 18:02:06 2016
+++ base/threading/platform_thread_linux.cc	Thu Apr 14 08:25:08 2016
@@@@ -17,7 +17,9 @@@@
d11 2
d14 1
a14 3
 #include <unistd.h>
 #endif
@@@@ -70,7 +72,7 @@@@ void PlatformThread::SetName(const std::string& name) 
d23 9
@


1.6
log
@update to 49.0
@
text
@d1 3
a3 3
$OpenBSD: patch-base_threading_platform_thread_linux_cc,v 1.9 2016/03/06 10:51:14 robert Exp $
--- base/threading/platform_thread_linux.cc.orig.port	Wed Feb 24 21:01:30 2016
+++ base/threading/platform_thread_linux.cc	Thu Mar  3 09:43:25 2016
d14 1
a14 1
@@@@ -81,7 +83,7 @@@@ void PlatformThread::SetName(const std::string& name) 
@


1.5
log
@update to 46.0rc1
@
text
@d1 4
a4 4
$OpenBSD: patch-base_threading_platform_thread_linux_cc,v 1.8 2015/10/14 16:42:07 robert Exp $
--- base/threading/platform_thread_linux.cc.orig.port	Wed Oct  7 04:42:07 2015
+++ base/threading/platform_thread_linux.cc	Wed Oct 14 07:41:12 2015
@@@@ -15,7 +15,9 @@@@
d14 1
a14 1
@@@@ -79,7 +81,7 @@@@ void PlatformThread::SetName(const std::string& name) 
@


1.4
log
@update to iridium-44.0 and also incorporate a patch from dcoppa@@
for the startup script that still had references to chromium directories.
@
text
@d1 3
a3 3
$OpenBSD: patch-base_threading_platform_thread_linux_cc,v 1.6 2015/07/23 13:44:04 robert Exp $
--- base/threading/platform_thread_linux.cc.orig.port	Wed Jul 15 22:29:55 2015
+++ base/threading/platform_thread_linux.cc	Wed Jul 22 08:37:29 2015
d14 1
a14 1
@@@@ -74,7 +76,7 @@@@ void PlatformThread::SetName(const std::string& name) 
@


1.3
log
@update to 43.1
@
text
@d1 3
a3 3
$OpenBSD: patch-base_threading_platform_thread_linux_cc,v 1.5 2015/05/24 15:51:52 robert Exp $
--- base/threading/platform_thread_linux.cc.orig.port	Wed May 20 10:02:25 2015
+++ base/threading/platform_thread_linux.cc	Wed May 20 11:56:24 2015
d14 1
a14 1
@@@@ -74,7 +76,7 @@@@ void PlatformThread::SetName(const char* name) {
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 4
a4 5
$OpenBSD: patch-base_threading_platform_thread_linux_cc,v 1.4 2015/03/18 19:26:29 robert Exp $
--- base/threading/platform_thread_linux.cc.orig.port	Tue Mar 10 23:29:06 2015
+++ base/threading/platform_thread_linux.cc	Wed Mar 11 07:22:49 2015
@@@@ -16,7 +16,9 @@@@
 #include "base/tracked_objects.h"
d7 1
d11 4
a14 4
 #include <sys/resource.h>
 #include <sys/syscall.h>
 #include <sys/time.h>
@@@@ -52,7 +54,7 @@@@ void PlatformThread::SetName(const char* name) {
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
