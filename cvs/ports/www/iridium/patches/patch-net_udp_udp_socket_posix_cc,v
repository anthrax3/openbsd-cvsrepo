head	1.5;
access;
symbols
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.4;
commitid	lED1Oks5HVh03mCa;

1.4
date	2016.05.28.14.49.39;	author robert;	state Exp;
branches;
next	1.3;
commitid	e1vpcgKLVeZdUbdR;

1.3
date	2016.03.23.20.13.07;	author robert;	state Exp;
branches;
next	1.2;
commitid	2hNT21XsdisESysQ;

1.2
date	2016.02.15.18.07.53;	author robert;	state Exp;
branches;
next	1.1;
commitid	R0eKGRSW56iYyJ8K;

1.1
date	2015.12.17.07.02.48;	author robert;	state Exp;
branches;
next	;
commitid	ipujnT7CBcOVRvhV;


desc
@@


1.5
log
@update to 54.0
@
text
@$OpenBSD: patch-net_udp_udp_socket_posix_cc,v 1.6 2016/10/26 06:22:08 robert Exp $
--- net/udp/udp_socket_posix.cc.orig.port	Wed Oct 12 21:03:01 2016
+++ net/udp/udp_socket_posix.cc	Wed Oct 19 12:56:07 2016
@@@@ -48,7 +48,7 @@@@ const int kBindRetries = 10;
 const int kPortStart = 1024;
 const int kPortEnd = 65535;
 
-#if defined(OS_MACOSX)
+#if defined(OS_MACOSX) || defined(OS_BSD)
 
 // Returns IPv4 address in network order.
 int GetIPv4AddressFromIndex(int socket, uint32_t index, uint32_t* address) {
@@@@ -672,7 +672,7 @@@@ int UDPSocketPosix::SetMulticastOptions() {
   if (multicast_interface_ != 0) {
     switch (addr_family_) {
       case AF_INET: {
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
         ip_mreqn mreq;
         mreq.imr_ifindex = multicast_interface_;
         mreq.imr_address.s_addr = htonl(INADDR_ANY);
@@@@ -747,7 +747,7 @@@@ int UDPSocketPosix::JoinGroup(const IPAddress& group_a
       if (addr_family_ != AF_INET)
         return ERR_ADDRESS_INVALID;
 
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
       ip_mreqn mreq;
       mreq.imr_ifindex = multicast_interface_;
       mreq.imr_address.s_addr = htonl(INADDR_ANY);
@


1.4
log
@update to 51.1
@
text
@d1 4
a4 4
$OpenBSD: patch-net_udp_udp_socket_posix_cc,v 1.4 2016/05/27 06:28:21 robert Exp $
--- net/udp/udp_socket_posix.cc.orig.port	Wed May 25 21:01:04 2016
+++ net/udp/udp_socket_posix.cc	Thu May 26 08:09:47 2016
@@@@ -45,7 +45,7 @@@@ const int kBindRetries = 10;
d13 1
a13 1
@@@@ -603,7 +603,7 @@@@ int UDPSocketPosix::SetMulticastOptions() {
d22 1
a22 1
@@@@ -678,7 +678,7 @@@@ int UDPSocketPosix::JoinGroup(const IPAddress& group_a
@


1.3
log
@update to 49.0
@
text
@d1 4
a4 4
$OpenBSD: patch-net_udp_udp_socket_posix_cc,v 1.3 2016/03/06 10:51:14 robert Exp $
--- net/udp/udp_socket_posix.cc.orig.port	Wed Feb 24 00:02:01 2016
+++ net/udp/udp_socket_posix.cc	Thu Mar  3 09:43:26 2016
@@@@ -43,7 +43,7 @@@@ const int kBindRetries = 10;
d13 1
a13 1
@@@@ -599,7 +599,7 @@@@ int UDPSocketPosix::SetMulticastOptions() {
d22 1
a22 1
@@@@ -674,7 +674,7 @@@@ int UDPSocketPosix::JoinGroup(const IPAddressNumber& g
@


1.2
log
@update to 48.1 (based on the latest stable chromium which contains security
fixes as well)

ok naddy@@ sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-net_udp_udp_socket_posix_cc,v 1.2 2016/01/23 18:49:31 robert Exp $
--- net/udp/udp_socket_posix.cc.orig.port	Wed Jan 20 21:01:22 2016
+++ net/udp/udp_socket_posix.cc	Fri Jan 22 19:58:58 2016
@@@@ -42,7 +42,7 @@@@ const int kBindRetries = 10;
d12 2
a13 2
 int GetIPv4AddressFromIndex(int socket, uint32 index, uint32* address){
@@@@ -590,7 +590,7 @@@@ int UDPSocketPosix::SetMulticastOptions() {
d22 1
a22 1
@@@@ -665,7 +665,7 @@@@ int UDPSocketPosix::JoinGroup(const IPAddressNumber& g
@


1.1
log
@update to 47.0rc1
@
text
@d1 4
a4 4
$OpenBSD: patch-net_udp_udp_socket_posix_cc,v 1.1 2015/12/05 16:13:32 robert Exp $
--- net/udp/udp_socket_posix.cc.orig.port	Wed Dec  2 13:50:13 2015
+++ net/udp/udp_socket_posix.cc	Wed Dec  2 13:51:05 2015
@@@@ -37,7 +37,7 @@@@ const int kBindRetries = 10;
d13 1
a13 1
@@@@ -549,7 +549,7 @@@@ int UDPSocketPosix::SetMulticastOptions() {
d22 1
a22 1
@@@@ -624,7 +624,7 @@@@ int UDPSocketPosix::JoinGroup(const IPAddressNumber& g
@

