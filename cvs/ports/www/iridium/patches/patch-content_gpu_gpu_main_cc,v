head	1.13;
access;
symbols
	OPENBSD_6_1:1.12.0.2
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2017.04.19.05.16.47;	author robert;	state Exp;
branches;
next	1.12;
commitid	jpW2BiKwA9H7U7d6;

1.12
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.11;
commitid	lED1Oks5HVh03mCa;

1.11
date	2016.05.28.14.49.39;	author robert;	state Exp;
branches;
next	1.10;
commitid	e1vpcgKLVeZdUbdR;

1.10
date	2016.04.27.12.46.16;	author robert;	state Exp;
branches;
next	1.9;
commitid	yOrwVI71D7bLHmrO;

1.9
date	2016.03.23.20.13.07;	author robert;	state Exp;
branches;
next	1.8;
commitid	2hNT21XsdisESysQ;

1.8
date	2016.02.15.18.07.53;	author robert;	state Exp;
branches;
next	1.7;
commitid	R0eKGRSW56iYyJ8K;

1.7
date	2016.01.07.07.26.40;	author robert;	state Exp;
branches;
next	1.6;
commitid	TBD9NMbFa6lHNIhT;

1.6
date	2015.12.17.07.02.48;	author robert;	state Exp;
branches;
next	1.5;
commitid	ipujnT7CBcOVRvhV;

1.5
date	2015.10.24.18.22.21;	author robert;	state Exp;
branches;
next	1.4;
commitid	HwRgK4asvw18PlFu;

1.4
date	2015.08.12.10.56.13;	author robert;	state Exp;
branches;
next	1.3;
commitid	WokHnx1ONPqT4wiW;

1.3
date	2015.05.26.17.37.40;	author robert;	state Exp;
branches;
next	1.2;
commitid	imvK5OAjfFzbGwip;

1.2
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.13
log
@update to 57.0
@
text
@$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.19 2017/03/14 12:18:54 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Thu Mar  9 21:04:32 2017
+++ content/gpu/gpu_main.cc	Fri Mar 10 07:46:23 2017
@@@@ -81,6 +81,10 @@@@
 #include "content/common/sandbox_mac.h"
 #endif
 
+#if defined(OS_BSD)
+#include "content/common/sandbox_init_openbsd.h"
+#endif
+
 #if defined(OS_CHROMEOS) && defined(ARCH_CPU_X86_FAMILY)
 #include "media/gpu/vaapi_wrapper.h"
 #endif
@@@@ -94,7 +98,7 @@@@ namespace content {
 
 namespace {
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
 bool StartSandboxLinux(gpu::GpuWatchdogThread*);
 #elif defined(OS_WIN)
 bool StartSandboxWindows(const sandbox::SandboxInterfaceInfo*);
@@@@ -148,7 +152,7 @@@@ class ContentSandboxHelper : public gpu::GpuSandboxHel
 
   bool EnsureSandboxInitialized(
       gpu::GpuWatchdogThread* watchdog_thread) override {
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
     return StartSandboxLinux(watchdog_thread);
 #elif defined(OS_WIN)
     return StartSandboxWindows(sandbox_info_);
@@@@ -310,12 +314,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
 
 namespace {
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_OPENBSD)
 bool StartSandboxLinux(gpu::GpuWatchdogThread* watchdog_thread) {
   TRACE_EVENT0("gpu,startup", "Initialize sandbox");
 
   bool res = false;
 
+#if !defined(OS_BSD)
   if (watchdog_thread) {
     // LinuxSandbox needs to be able to ensure that the thread
     // has really been stopped.
@@@@ -340,6 +345,9 @@@@ bool StartSandboxLinux(gpu::GpuWatchdogThread* watchdo
     options.timer_slack = base::TIMER_SLACK_MAXIMUM;
     watchdog_thread->StartWithOptions(options);
   }
+#else
+  res = InitializeSandbox();
+#endif
 
   return res;
 }
@


1.12
log
@update to 54.0
@
text
@d1 4
a4 4
$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.17 2016/10/26 06:22:08 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Wed Oct 12 21:02:59 2016
+++ content/gpu/gpu_main.cc	Wed Oct 19 12:56:04 2016
@@@@ -77,6 +77,10 @@@@
d15 1
a15 3
@@@@ -108,8 +112,8 @@@@ bool WarmUpSandbox(const base::CommandLine& command_li
 bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info);
 #endif
d17 1
a17 24
-#if defined(OS_LINUX)
-#if !defined(OS_CHROMEOS)
+#if defined(OS_LINUX) || defined(OS_BSD)
+#if !defined(OS_CHROMEOS) && !defined(OS_BSD)
 bool CanAccessNvidiaDeviceFile();
 #endif
 bool StartSandboxLinux(const gpu::GPUInfo&, GpuWatchdogThread*, bool);
@@@@ -195,13 +199,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
   // create child windows to render to.
   base::MessagePumpForGpu::InitFactory();
   base::MessageLoop main_message_loop(base::MessageLoop::TYPE_UI);
-#elif defined(OS_LINUX) && defined(USE_X11)
+#elif (defined(OS_BSD) || defined(OS_LINUX)) && defined(USE_X11)
   // We need a UI loop so that we can grab the Expose events. See GLSurfaceGLX
   // and https://crbug.com/326995.
   base::MessageLoop main_message_loop(base::MessageLoop::TYPE_UI);
   std::unique_ptr<ui::PlatformEventSource> event_source =
       ui::PlatformEventSource::CreateDefault();
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_BSD)
   base::MessageLoop main_message_loop(base::MessageLoop::TYPE_DEFAULT);
 #elif defined(OS_MACOSX)
   // This is necessary for CoreAnimation layers hosted in the GPU process to be
@@@@ -266,7 +270,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
a18 2
   // Warm up resources that don't need access to GPUInfo.
   if (WarmUpSandbox(command_line)) {
d20 5
a24 7
+#if defined(OS_LINUX) || defined(OS_BSD)
     bool initialized_sandbox = false;
     bool initialized_gl_context = false;
     bool should_initialize_gl_context = false;
@@@@ -329,9 +333,9 @@@@ int GpuMain(const MainFunctionParams& parameters) {
             gpu_info, const_cast<base::CommandLine*>(&command_line));
       }
d26 2
d29 5
a33 10
+#if defined(OS_LINUX) || defined(OS_BSD)
       initialized_gl_context = true;
-#if !defined(OS_CHROMEOS)
+#if !defined(OS_CHROMEOS) && !defined(OS_BSD)
       if (gpu_info.gpu.vendor_id == 0x10de &&  // NVIDIA
           gpu_info.driver_vendor == "NVIDIA" &&
           !CanAccessNvidiaDeviceFile())
@@@@ -368,7 +372,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
       watchdog_thread = NULL;
     }
d35 1
a35 16
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
     should_initialize_gl_context = !initialized_gl_context &&
                                    !dead_on_arrival;
 
@@@@ -376,6 +380,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
       gpu_info.sandboxed = StartSandboxLinux(gpu_info, watchdog_thread.get(),
                                              should_initialize_gl_context);
     }
+
 #elif defined(OS_WIN)
     gpu_info.sandboxed = StartSandboxWindows(parameters.sandbox_info);
 #elif defined(OS_MACOSX)
@@@@ -520,8 +525,8 @@@@ bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info) {
 }
 #endif
d38 3
a40 7
-#if !defined(OS_CHROMEOS)
+#if defined(OS_LINUX) || defined(OS_BSD)
+#if !defined(OS_CHROMEOS) && !defined(OS_BSD)
 bool CanAccessNvidiaDeviceFile() {
   bool res = true;
   base::ThreadRestrictions::AssertIOAllowed();
@@@@ -579,6 +584,7 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
d42 1
a42 1
   WarmUpSandboxNvidia(gpu_info, should_initialize_gl_context);
d48 1
a48 7
@@@@ -598,11 +604,15 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
   // LinuxSandbox::InitializeSandbox() must always be called
   // with only one thread.
   res = LinuxSandbox::InitializeSandbox();
+
   if (watchdog_thread) {
     base::Thread::Options options;
@


1.11
log
@update to 51.1
@
text
@d1 4
a4 4
$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.14 2016/05/27 06:28:21 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Wed May 25 21:01:01 2016
+++ content/gpu/gpu_main.cc	Thu May 26 08:09:46 2016
@@@@ -74,6 +74,10 @@@@
d13 1
a13 1
 #include "content/common/gpu/media/vaapi_wrapper.h"
d15 1
a15 1
@@@@ -101,8 +105,8 @@@@ bool WarmUpSandbox(const base::CommandLine& command_li
d26 1
a26 2
@@@@ -185,13 +189,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
   // Use a UI message loop because ANGLE and the desktop GL platform can
d28 1
d35 1
a35 1
   scoped_ptr<ui::PlatformEventSource> event_source =
d42 1
a42 1
@@@@ -256,7 +260,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d51 2
a52 1
@@@@ -321,9 +325,9 @@@@ int GpuMain(const MainFunctionParams& parameters) {
a53 1
 #endif
d63 1
a63 1
@@@@ -360,7 +364,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d72 1
a72 1
@@@@ -368,6 +372,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d80 1
a80 1
@@@@ -483,8 +488,8 @@@@ bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info) {
d91 1
a91 1
@@@@ -542,6 +547,7 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
d99 1
a99 1
@@@@ -561,11 +567,15 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
@


1.10
log
@update to iridium-50.0 and sync recent changes with chromium
@
text
@d1 4
a4 4
$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.13 2016/04/16 19:08:46 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Wed Apr 13 22:59:46 2016
+++ content/gpu/gpu_main.cc	Thu Apr 14 08:25:12 2016
@@@@ -76,6 +76,10 @@@@
d15 1
a15 1
@@@@ -103,8 +107,8 @@@@ bool WarmUpSandbox(const base::CommandLine& command_li
d26 1
a26 1
@@@@ -187,13 +191,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d42 1
a42 1
@@@@ -258,7 +262,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d51 1
a51 1
@@@@ -323,9 +327,9 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d63 1
a63 1
@@@@ -362,7 +366,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d72 1
a72 1
@@@@ -370,6 +374,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d80 1
a80 1
@@@@ -492,8 +497,8 @@@@ bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info) {
d91 1
a91 1
@@@@ -551,6 +556,7 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
d99 1
a99 1
@@@@ -570,11 +576,15 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
@


1.9
log
@update to 49.0
@
text
@d1 3
a3 3
$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.12 2016/03/06 10:51:14 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Wed Feb 24 21:01:32 2016
+++ content/gpu/gpu_main.cc	Thu Mar  3 09:43:26 2016
d42 1
a42 1
@@@@ -253,7 +257,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d51 1
a51 1
@@@@ -314,9 +318,9 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d63 1
a63 1
@@@@ -353,7 +357,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d72 1
a72 1
@@@@ -361,6 +365,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d80 1
a80 1
@@@@ -478,8 +483,8 @@@@ bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info) {
d91 1
a91 1
@@@@ -537,6 +542,7 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
d99 1
a99 1
@@@@ -556,11 +562,15 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
@


1.8
log
@update to 48.1 (based on the latest stable chromium which contains security
fixes as well)

ok naddy@@ sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.11 2016/01/23 18:49:31 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Wed Jan 20 21:01:21 2016
+++ content/gpu/gpu_main.cc	Fri Jan 22 19:58:58 2016
@@@@ -72,6 +72,10 @@@@
d15 1
a15 1
@@@@ -99,8 +103,8 @@@@ bool WarmUpSandbox(const base::CommandLine& command_li
d26 1
a26 1
@@@@ -177,13 +181,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d42 1
a42 1
@@@@ -243,7 +247,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d51 1
a51 1
@@@@ -304,9 +308,9 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d63 1
a63 1
@@@@ -343,7 +347,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d72 1
a72 1
@@@@ -351,6 +355,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d80 1
a80 1
@@@@ -468,8 +473,8 @@@@ bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info) {
d91 1
a91 1
@@@@ -527,6 +532,7 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
d99 1
a99 1
@@@@ -546,11 +552,15 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
@


1.7
log
@pledge(2) iridium as well by syncing with the chromium port
@
text
@d1 4
a4 4
$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.9 2015/12/05 16:13:32 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Tue Dec 15 21:05:11 2015
+++ content/gpu/gpu_main.cc	Sun Jan  3 20:50:31 2016
@@@@ -66,6 +66,10 @@@@
d15 1
a15 1
@@@@ -93,8 +97,8 @@@@ bool WarmUpSandbox(const base::CommandLine& command_li
d26 1
a26 1
@@@@ -171,13 +175,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d42 1
a42 1
@@@@ -237,7 +241,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d51 1
a51 1
@@@@ -296,9 +300,9 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d63 1
a63 1
@@@@ -335,7 +339,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d72 1
a72 1
@@@@ -343,6 +347,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d80 1
a80 1
@@@@ -447,8 +452,8 @@@@ bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info) {
d91 1
a91 1
@@@@ -506,6 +511,7 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
d99 1
a99 1
@@@@ -525,11 +531,15 @@@@ bool StartSandboxLinux(const gpu::GPUInfo& gpu_info,
@


1.6
log
@update to 47.0rc1
@
text
@d2 14
a15 3
--- content/gpu/gpu_main.cc.orig.port	Tue Nov 24 21:00:55 2015
+++ content/gpu/gpu_main.cc	Wed Dec  2 08:18:32 2015
@@@@ -93,7 +93,7 @@@@ bool WarmUpSandbox(const base::CommandLine& command_li
d20 1
d22 1
a22 1
 #if !defined(OS_CHROMEOS)
d25 2
a26 1
@@@@ -171,13 +171,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d42 1
a42 8
@@@@ -249,6 +249,10 @@@@ int GpuMain(const MainFunctionParams& parameters) {
       initialized_sandbox = true;
     }
 #endif  // defined(OS_LINUX)
+#if defined(OS_BSD)
+    bool initialized_gl_context = false;
+    bool should_initialize_gl_context = false;
+#endif
d44 8
a51 3
     base::TimeTicks before_initialize_one_off = base::TimeTicks::Now();
 
@@@@ -296,7 +300,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d58 2
a59 1
 #if !defined(OS_CHROMEOS)
d61 3
a63 1
@@@@ -335,14 +339,16 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d72 1
a72 2
+#if !defined(OS_BSD)
     if (!initialized_sandbox) {
d76 1
a76 1
+#endif
d80 1
a80 1
@@@@ -447,7 +453,7 @@@@ bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info) {
d85 1
d87 1
a87 1
 #if !defined(OS_CHROMEOS)
d90 25
@


1.5
log
@update to 46.0rc1
@
text
@d1 4
a4 4
$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.8 2015/10/14 16:42:07 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Tue Oct 13 21:04:32 2015
+++ content/gpu/gpu_main.cc	Wed Oct 14 07:41:13 2015
@@@@ -89,7 +89,7 @@@@ bool WarmUpSandbox(const base::CommandLine& command_li
d13 1
a13 1
@@@@ -167,13 +167,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d29 1
a29 1
@@@@ -245,6 +245,10 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d40 1
a40 1
@@@@ -292,7 +296,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d49 1
a49 1
@@@@ -331,14 +335,16 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d67 1
a67 1
@@@@ -443,7 +449,7 @@@@ bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info) {
@


1.4
log
@update to iridium-44.0 and also incorporate a patch from dcoppa@@
for the startup script that still had references to chromium directories.
@
text
@d1 4
a4 4
$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.6 2015/07/23 13:44:04 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Wed Jul 22 08:46:00 2015
+++ content/gpu/gpu_main.cc	Wed Jul 22 08:47:47 2015
@@@@ -85,7 +85,7 @@@@ bool WarmUpSandbox(const base::CommandLine& command_li
d13 1
a13 1
@@@@ -163,13 +163,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d29 1
a29 1
@@@@ -240,6 +240,10 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d40 1
a40 1
@@@@ -287,7 +291,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d49 1
a49 1
@@@@ -326,14 +330,16 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d67 1
a67 1
@@@@ -431,7 +437,7 @@@@ bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info) {
@


1.3
log
@update to 43.1
@
text
@d1 4
a4 4
$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.5 2015/05/24 15:51:53 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Thu May 14 00:35:46 2015
+++ content/gpu/gpu_main.cc	Wed May 20 08:34:56 2015
@@@@ -79,7 +79,7 @@@@ bool WarmUpSandbox(const base::CommandLine& command_li
d13 4
a16 4
@@@@ -164,13 +164,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
     message_loop_type = base::MessageLoop::TYPE_UI;
   }
   base::MessageLoop main_message_loop(message_loop_type);
d18 1
a18 1
+#elif defined(OS_BSD) && defined(USE_X11)
d25 1
a25 1
+#elif defined(OS_BSD)
d29 1
a29 1
@@@@ -237,6 +237,10 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d40 1
a40 1
@@@@ -284,7 +288,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d49 1
a49 1
@@@@ -322,14 +326,16 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d67 1
a67 1
@@@@ -425,7 +431,7 @@@@ bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info) {
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 4
a4 4
$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.4 2015/04/27 16:38:25 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Wed Apr 15 00:31:22 2015
+++ content/gpu/gpu_main.cc	Wed Apr 15 08:32:50 2015
@@@@ -77,7 +77,7 @@@@ bool WarmUpSandbox(const base::CommandLine& command_li
d13 1
a13 1
@@@@ -162,13 +162,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d29 1
a29 1
@@@@ -235,6 +235,10 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d40 1
a40 1
@@@@ -282,7 +286,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d49 1
a49 1
@@@@ -317,14 +321,16 @@@@ int GpuMain(const MainFunctionParams& parameters) {
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.3 2015/03/18 19:26:29 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Wed Mar 11 07:42:53 2015
+++ content/gpu/gpu_main.cc	Wed Mar 11 19:24:41 2015
@@@@ -76,7 +76,7 @@@@ bool WarmUpSandbox(const base::CommandLine& command_li
d13 1
a13 1
@@@@ -161,13 +161,13 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d29 1
a29 1
@@@@ -234,6 +234,10 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d40 1
a40 1
@@@@ -281,7 +285,7 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d49 1
a49 1
@@@@ -316,14 +320,16 @@@@ int GpuMain(const MainFunctionParams& parameters) {
d67 1
a67 1
@@@@ -424,7 +430,7 @@@@ bool CollectGraphicsInfo(gpu::GPUInfo& gpu_info) {
@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
