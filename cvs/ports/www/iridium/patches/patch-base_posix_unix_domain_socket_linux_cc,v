head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.2
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2017.04.19.05.16.46;	author robert;	state Exp;
branches;
next	1.5;
commitid	jpW2BiKwA9H7U7d6;

1.5
date	2016.10.27.18.30.40;	author robert;	state Exp;
branches;
next	1.4;
commitid	lED1Oks5HVh03mCa;

1.4
date	2015.10.24.18.22.21;	author robert;	state Exp;
branches;
next	1.3;
commitid	HwRgK4asvw18PlFu;

1.3
date	2015.05.26.17.37.39;	author robert;	state Exp;
branches;
next	1.2;
commitid	imvK5OAjfFzbGwip;

1.2
date	2015.05.06.14.27.23;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.35;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.35;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.6
log
@update to 57.0
@
text
@$OpenBSD: patch-base_posix_unix_domain_socket_linux_cc,v 1.5 2015/09/05 16:06:50 robert Exp $
--- base/posix/unix_domain_socket_linux.cc.orig.port	Sat Aug 22 21:01:50 2015
+++ base/posix/unix_domain_socket_linux.cc	Wed Sep  2 07:31:54 2015
@@@@ -5,7 +5,10 @@@@
 #include "base/posix/unix_domain_socket_linux.h"
 
 #include <errno.h>
+#include <sys/types.h>
+#include <sys/param.h>
 #include <sys/socket.h>
+#include <sys/ucred.h>
 #include <unistd.h>
 
 #include <vector>
@@@@ -25,6 +28,14 @@@@ namespace base {
 
 const size_t UnixDomainSocket::kMaxFileDescriptors = 16;
 
+#ifndef SCM_CREDENTIALS
+#  define SCM_CREDENTIALS      0x9001
+#endif
+
+#ifndef SO_PASSCRED
+#  define SO_PASSCRED  0x9002
+#endif
+
 #if !defined(OS_NACL_NONSFI)
 // Creates a connected pair of UNIX-domain SOCK_SEQPACKET sockets, and passes
 // ownership of the newly allocated file descriptors to |one| and |two|.
@@@@ -150,7 +161,7 @@@@ ssize_t UnixDomainSocket::RecvMsgWithFlags(int fd,
           cmsg->cmsg_type == SCM_CREDENTIALS) {
         DCHECK_EQ(payload_len, sizeof(struct ucred));
         DCHECK_EQ(pid, -1);
-        pid = reinterpret_cast<struct ucred*>(CMSG_DATA(cmsg))->pid;
+        pid = getpid();
       }
 #endif
     }
@


1.5
log
@update to 54.0
@
text
@@


1.4
log
@update to 46.0rc1
@
text
@@


1.3
log
@update to 43.1
@
text
@d1 3
a3 3
$OpenBSD: patch-base_posix_unix_domain_socket_linux_cc,v 1.4 2015/05/24 15:51:52 robert Exp $
--- base/posix/unix_domain_socket_linux.cc.orig.port	Wed May 20 09:59:28 2015
+++ base/posix/unix_domain_socket_linux.cc	Wed May 20 11:34:37 2015
d15 1
a15 1
@@@@ -23,6 +26,14 @@@@
d30 1
a30 1
@@@@ -148,7 +159,7 @@@@ ssize_t UnixDomainSocket::RecvMsgWithFlags(int fd,
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 3
a3 3
$OpenBSD: patch-base_posix_unix_domain_socket_linux_cc,v 1.3 2015/01/22 11:16:40 robert Exp $
--- base/posix/unix_domain_socket_linux.cc.orig.port	Sat Dec  6 12:35:07 2014
+++ base/posix/unix_domain_socket_linux.cc	Sun Dec  7 15:27:39 2014
d30 1
a30 1
@@@@ -148,7 +159,8 @@@@ ssize_t UnixDomainSocket::RecvMsgWithFlags(int fd,
d32 2
a33 2
         DCHECK(payload_len == sizeof(struct ucred));
         DCHECK(pid == -1);
a34 1
+//        pid = reinterpret_cast<struct ucred*>(CMSG_DATA(cmsg))->pid;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
