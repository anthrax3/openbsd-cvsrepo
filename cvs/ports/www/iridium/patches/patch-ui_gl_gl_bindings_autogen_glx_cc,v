head	1.8;
access;
symbols
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2017.04.28.22.22.36;	author robert;	state Exp;
branches;
next	1.7;
commitid	hEiDsbcK5ON7rnmo;

1.7
date	2017.04.19.05.16.47;	author robert;	state Exp;
branches;
next	1.6;
commitid	jpW2BiKwA9H7U7d6;

1.6
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.5;
commitid	lED1Oks5HVh03mCa;

1.5
date	2016.05.28.14.49.39;	author robert;	state Exp;
branches;
next	1.4;
commitid	e1vpcgKLVeZdUbdR;

1.4
date	2016.03.23.20.13.07;	author robert;	state Exp;
branches;
next	1.3;
commitid	2hNT21XsdisESysQ;

1.3
date	2016.02.15.18.07.53;	author robert;	state Exp;
branches;
next	1.2;
commitid	R0eKGRSW56iYyJ8K;

1.2
date	2015.10.24.18.22.22;	author robert;	state Exp;
branches;
next	1.1;
commitid	HwRgK4asvw18PlFu;

1.1
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	;
commitid	0TVTUxEI0BYra21v;


desc
@@


1.8
log
@update to 58.0
@
text
@$OpenBSD: patch-ui_gl_gl_bindings_autogen_glx_cc,v 1.7 2017/04/28 14:21:00 robert Exp $
--- ui/gl/gl_bindings_autogen_glx.cc.orig.port	Fri Apr 28 12:16:19 2017
+++ ui/gl/gl_bindings_autogen_glx.cc	Fri Apr 28 12:16:22 2017
@@@@ -73,6 +73,7 @@@@ void DriverGLX::InitializeStaticBindings() {
   fn.glXGetFBConfigsFn = reinterpret_cast<glXGetFBConfigsProc>(
       GetGLProcAddress("glXGetFBConfigs"));
   fn.glXGetMscRateOMLFn = 0;
+  fn.glXGetProcAddressARBFn = 0;
   fn.glXGetSelectedEventFn = reinterpret_cast<glXGetSelectedEventProc>(
       GetGLProcAddress("glXGetSelectedEvent"));
   fn.glXGetSyncValuesOMLFn = 0;
@@@@ -120,6 +121,8 @@@@ void DriverGLX::InitializeExtensionBindings() {
 
   ext.b_GLX_ARB_create_context =
       extensions.find("GLX_ARB_create_context ") != std::string::npos;
+  ext.b_GLX_ARB_get_proc_address =
+      extensions.find("GLX_ARB_get_proc_address ") != std::string::npos;
   ext.b_GLX_EXT_swap_control =
       extensions.find("GLX_EXT_swap_control ") != std::string::npos;
   ext.b_GLX_EXT_texture_from_pixmap =
@@@@ -162,6 +165,11 @@@@ void DriverGLX::InitializeExtensionBindings() {
         GetGLProcAddress("glXGetMscRateOML"));
   }
 
+  if (ext.b_GLX_ARB_get_proc_address) {
+    fn.glXGetProcAddressARBFn = reinterpret_cast<glXGetProcAddressARBProc>(
+        GetGLProcAddress("glXGetProcAddressARB"));
+  }
+
   if (ext.b_GLX_OML_sync_control) {
     fn.glXGetSyncValuesOMLFn = reinterpret_cast<glXGetSyncValuesOMLProc>(
         GetGLProcAddress("glXGetSyncValuesOML"));
@@@@ -352,6 +360,10 @@@@ bool GLXApiBase::glXGetMscRateOMLFn(Display* dpy,
   return driver_->fn.glXGetMscRateOMLFn(dpy, drawable, numerator, denominator);
 }
 
+__GLXextFuncPtr GLXApiBase::glXGetProcAddressARBFn(const GLubyte* procName) {
+  return driver_->fn.glXGetProcAddressARBFn(procName);
+}
+
 void GLXApiBase::glXGetSelectedEventFn(Display* dpy,
                                        GLXDrawable drawable,
                                        unsigned long* mask) {
@@@@ -652,6 +664,11 @@@@ bool TraceGLXApi::glXGetMscRateOMLFn(Display* dpy,
   return glx_api_->glXGetMscRateOMLFn(dpy, drawable, numerator, denominator);
 }
 
+__GLXextFuncPtr TraceGLXApi::glXGetProcAddressARBFn(const GLubyte* procName) {
+  TRACE_EVENT_BINARY_EFFICIENT0("gpu", "TraceGLAPI::glXGetProcAddressARB")
+  return glx_api_->glXGetProcAddressARBFn(procName);
+}
+
 void TraceGLXApi::glXGetSelectedEventFn(Display* dpy,
                                         GLXDrawable drawable,
                                         unsigned long* mask) {
@@@@ -1074,6 +1091,14 @@@@ bool DebugGLXApi::glXGetMscRateOMLFn(Display* dpy,
                  << static_cast<const void*>(denominator) << ")");
   bool result =
       glx_api_->glXGetMscRateOMLFn(dpy, drawable, numerator, denominator);
+  GL_SERVICE_LOG("GL_RESULT: " << result);
+  return result;
+}
+
+__GLXextFuncPtr DebugGLXApi::glXGetProcAddressARBFn(const GLubyte* procName) {
+  GL_SERVICE_LOG("glXGetProcAddressARB"
+                 << "(" << static_cast<const void*>(procName) << ")");
+  __GLXextFuncPtr result = glx_api_->glXGetProcAddressARBFn(procName);
   GL_SERVICE_LOG("GL_RESULT: " << result);
   return result;
 }
@


1.7
log
@update to 57.0
@
text
@d1 4
a4 4
$OpenBSD: patch-ui_gl_gl_bindings_autogen_glx_cc,v 1.6 2016/05/27 06:28:21 robert Exp $
--- ui/gl/gl_bindings_autogen_glx.cc.orig.port	Thu May 26 08:38:20 2016
+++ ui/gl/gl_bindings_autogen_glx.cc	Thu May 26 08:38:28 2016
@@@@ -74,6 +74,7 @@@@ void DriverGLX::InitializeStaticBindings() {
d12 1
a12 1
@@@@ -121,6 +122,8 @@@@ void DriverGLX::InitializeExtensionBindings() {
d21 1
a21 1
@@@@ -168,6 +171,12 @@@@ void DriverGLX::InitializeExtensionBindings() {
a24 1
+  debug_fn.glXGetProcAddressARBFn = 0;
a29 1
   debug_fn.glXGetSyncValuesOMLFn = 0;
d32 2
a33 30
@@@@ -541,6 +550,17 @@@@ static bool GL_BINDING_CALL Debug_glXGetMscRateOML(Dis
   return result;
 }
 
+static __GLXextFuncPtr GL_BINDING_CALL
+Debug_glXGetProcAddressARB(const GLubyte* procName) {
+  GL_SERVICE_LOG("glXGetProcAddressARB"
+                 << "(" << static_cast<const void*>(procName) << ")");
+  DCHECK(g_driver_glx.debug_fn.glXGetProcAddressARBFn != nullptr);
+  __GLXextFuncPtr result =
+      g_driver_glx.debug_fn.glXGetProcAddressARBFn(procName);
+  GL_SERVICE_LOG("GL_RESULT: " << result);
+  return result;
+}
+
 static void GL_BINDING_CALL Debug_glXGetSelectedEvent(Display* dpy,
                                                       GLXDrawable drawable,
                                                       unsigned long* mask) {
@@@@ -889,6 +909,10 @@@@ void DriverGLX::InitializeDebugBindings() {
     debug_fn.glXGetMscRateOMLFn = fn.glXGetMscRateOMLFn;
     fn.glXGetMscRateOMLFn = Debug_glXGetMscRateOML;
   }
+  if (!debug_fn.glXGetProcAddressARBFn) {
+    debug_fn.glXGetProcAddressARBFn = fn.glXGetProcAddressARBFn;
+    fn.glXGetProcAddressARBFn = Debug_glXGetProcAddressARB;
+  }
   if (!debug_fn.glXGetSelectedEventFn) {
     debug_fn.glXGetSelectedEventFn = fn.glXGetSelectedEventFn;
     fn.glXGetSelectedEventFn = Debug_glXGetSelectedEvent;
@@@@ -1140,6 +1164,10 @@@@ bool GLXApiBase::glXGetMscRateOMLFn(Display* dpy,
d44 1
a44 3
@@@@ -1438,6 +1466,11 @@@@ bool TraceGLXApi::glXGetMscRateOMLFn(Display* dpy,
                                      int32_t* denominator) {
   TRACE_EVENT_BINARY_EFFICIENT0("gpu", "TraceGLAPI::glXGetMscRateOML")
d46 2
a47 2
+}
+
d51 19
a70 2
 
 void TraceGLXApi::glXGetSelectedEventFn(Display* dpy,
@


1.6
log
@update to 54.0
@
text
@@


1.5
log
@update to 51.1
@
text
@@


1.4
log
@update to 49.0
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_gl_gl_bindings_autogen_glx_cc,v 1.5 2016/03/06 10:51:14 robert Exp $
--- ui/gl/gl_bindings_autogen_glx.cc.orig.port	Wed Feb 24 00:02:06 2016
+++ ui/gl/gl_bindings_autogen_glx.cc	Thu Mar  3 09:43:26 2016
d21 1
a21 1
@@@@ -168,6 +171,13 @@@@ void DriverGLX::InitializeExtensionBindings() {
a28 1
+    DCHECK(fn.glXGetProcAddressARBFn);
d34 1
a34 23
@@@@ -262,8 +272,8 @@@@ static void GL_BINDING_CALL Debug_glXCopySubBufferMESA
                  << "(" << static_cast<const void*>(dpy) << ", " << drawable
                  << ", " << x << ", " << y << ", " << width << ", " << height
                  << ")");
-  g_driver_glx.debug_fn.glXCopySubBufferMESAFn(dpy, drawable, x, y, width,
-                                               height);
+  g_driver_glx.debug_fn.glXCopySubBufferMESAFn(
+      dpy, drawable, x, y, width, height);
 }
 
 static GLXContext GL_BINDING_CALL Debug_glXCreateContext(Display* dpy,
@@@@ -471,8 +481,8 @@@@ static int GL_BINDING_CALL Debug_glXGetFBConfigAttrib(
                  << "(" << static_cast<const void*>(dpy) << ", " << config
                  << ", " << attribute << ", " << static_cast<const void*>(value)
                  << ")");
-  int result = g_driver_glx.debug_fn.glXGetFBConfigAttribFn(dpy, config,
-                                                            attribute, value);
+  int result = g_driver_glx.debug_fn.glXGetFBConfigAttribFn(
+      dpy, config, attribute, value);
   GL_SERVICE_LOG("GL_RESULT: " << result);
   return result;
 }
@@@@ -514,6 +524,16 @@@@ static bool GL_BINDING_CALL Debug_glXGetMscRateOML(Dis
d42 1
d52 1
a52 1
@@@@ -841,6 +861,10 @@@@ void DriverGLX::InitializeDebugBindings() {
d63 1
a63 34
@@@@ -928,9 +952,7 @@@@ void DriverGLX::InitializeDebugBindings() {
   g_debugBindingsInitialized = true;
 }
 
-void DriverGLX::ClearBindings() {
-  memset(this, 0, sizeof(*this));
-}
+void DriverGLX::ClearBindings() { memset(this, 0, sizeof(*this)); }
 
 void GLXApiBase::glXBindTexImageEXTFn(Display* dpy,
                                       GLXDrawable drawable,
@@@@ -980,8 +1002,8 @@@@ GLXContext GLXApiBase::glXCreateContextAttribsARBFn(Di
                                                     GLXContext share_context,
                                                     int direct,
                                                     const int* attrib_list) {
-  return driver_->fn.glXCreateContextAttribsARBFn(dpy, config, share_context,
-                                                  direct, attrib_list);
+  return driver_->fn.glXCreateContextAttribsARBFn(
+      dpy, config, share_context, direct, attrib_list);
 }
 
 GLXPixmap GLXApiBase::glXCreateGLXPixmapFn(Display* dpy,
@@@@ -995,8 +1017,8 @@@@ GLXContext GLXApiBase::glXCreateNewContextFn(Display* 
                                              int renderType,
                                              GLXContext shareList,
                                              int direct) {
-  return driver_->fn.glXCreateNewContextFn(dpy, config, renderType, shareList,
-                                           direct);
+  return driver_->fn.glXCreateNewContextFn(
+      dpy, config, renderType, shareList, direct);
 }
 
 GLXPbuffer GLXApiBase::glXCreatePbufferFn(Display* dpy,
@@@@ -1092,6 +1114,10 @@@@ bool GLXApiBase::glXGetMscRateOMLFn(Display* dpy,
d74 1
a74 45
@@@@ -1190,9 +1216,7 @@@@ void GLXApiBase::glXUseXFontFn(Font font, int first, i
   driver_->fn.glXUseXFontFn(font, first, count, list);
 }
 
-void GLXApiBase::glXWaitGLFn(void) {
-  driver_->fn.glXWaitGLFn();
-}
+void GLXApiBase::glXWaitGLFn(void) { driver_->fn.glXWaitGLFn(); }
 
 int GLXApiBase::glXWaitVideoSyncSGIFn(int divisor,
                                       int remainder,
@@@@ -1200,9 +1224,7 @@@@ int GLXApiBase::glXWaitVideoSyncSGIFn(int divisor,
   return driver_->fn.glXWaitVideoSyncSGIFn(divisor, remainder, count);
 }
 
-void GLXApiBase::glXWaitXFn(void) {
-  driver_->fn.glXWaitXFn();
-}
+void GLXApiBase::glXWaitXFn(void) { driver_->fn.glXWaitXFn(); }
 
 void TraceGLXApi::glXBindTexImageEXTFn(Display* dpy,
                                        GLXDrawable drawable,
@@@@ -1259,8 +1281,8 @@@@ GLXContext TraceGLXApi::glXCreateContextAttribsARBFn(D
                                                      int direct,
                                                      const int* attrib_list) {
   TRACE_EVENT_BINARY_EFFICIENT0("gpu", "TraceGLAPI::glXCreateContextAttribsARB")
-  return glx_api_->glXCreateContextAttribsARBFn(dpy, config, share_context,
-                                                direct, attrib_list);
+  return glx_api_->glXCreateContextAttribsARBFn(
+      dpy, config, share_context, direct, attrib_list);
 }
 
 GLXPixmap TraceGLXApi::glXCreateGLXPixmapFn(Display* dpy,
@@@@ -1276,8 +1298,8 @@@@ GLXContext TraceGLXApi::glXCreateNewContextFn(Display*
                                               GLXContext shareList,
                                               int direct) {
   TRACE_EVENT_BINARY_EFFICIENT0("gpu", "TraceGLAPI::glXCreateNewContext")
-  return glx_api_->glXCreateNewContextFn(dpy, config, renderType, shareList,
-                                         direct);
+  return glx_api_->glXCreateNewContextFn(
+      dpy, config, renderType, shareList, direct);
 }
 
 GLXPbuffer TraceGLXApi::glXCreatePbufferFn(Display* dpy,
@@@@ -1390,6 +1412,11 @@@@ bool TraceGLXApi::glXGetMscRateOMLFn(Display* dpy,
@


1.3
log
@update to 48.1 (based on the latest stable chromium which contains security
fixes as well)

ok naddy@@ sthen@@
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_gl_gl_bindings_autogen_glx_cc,v 1.4 2016/01/23 18:49:31 robert Exp $
--- ui/gl/gl_bindings_autogen_glx.cc.orig.port	Wed Jan 20 21:01:26 2016
+++ ui/gl/gl_bindings_autogen_glx.cc	Fri Jan 22 19:58:59 2016
d174 1
a174 1
                                      int32* denominator) {
@


1.2
log
@update to 46.0rc1
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_gl_gl_bindings_autogen_glx_cc,v 1.3 2015/10/14 16:42:07 robert Exp $
--- ui/gl/gl_bindings_autogen_glx.cc.orig.port	Tue Oct 13 21:04:35 2015
+++ ui/gl/gl_bindings_autogen_glx.cc	Wed Oct 14 07:41:14 2015
d21 2
a22 2
@@@@ -173,6 +176,13 @@@@ void DriverGLX::InitializeExtensionBindings() {
     DCHECK(fn.glXGetMscRateOMLFn);
d35 1
a35 1
@@@@ -272,8 +282,8 @@@@ static void GL_BINDING_CALL Debug_glXCopySubBufferMESA
d46 1
a46 1
@@@@ -481,8 +491,8 @@@@ static int GL_BINDING_CALL Debug_glXGetFBConfigAttrib(
d57 1
a57 1
@@@@ -524,6 +534,16 @@@@ static bool GL_BINDING_CALL Debug_glXGetMscRateOML(Dis
d74 1
a74 1
@@@@ -851,6 +871,10 @@@@ void DriverGLX::InitializeDebugBindings() {
d85 1
a85 1
@@@@ -938,9 +962,7 @@@@ void DriverGLX::InitializeDebugBindings() {
d96 1
a96 1
@@@@ -990,8 +1012,8 @@@@ GLXContext GLXApiBase::glXCreateContextAttribsARBFn(Di
d107 1
a107 1
@@@@ -1005,8 +1027,8 @@@@ GLXContext GLXApiBase::glXCreateNewContextFn(Display* 
d118 1
a118 1
@@@@ -1102,6 +1124,10 @@@@ bool GLXApiBase::glXGetMscRateOMLFn(Display* dpy,
d129 1
a129 1
@@@@ -1200,9 +1226,7 @@@@ void GLXApiBase::glXUseXFontFn(Font font, int first, i
d140 1
a140 1
@@@@ -1210,9 +1234,7 @@@@ int GLXApiBase::glXWaitVideoSyncSGIFn(int divisor,
d151 1
a151 1
@@@@ -1269,8 +1291,8 @@@@ GLXContext TraceGLXApi::glXCreateContextAttribsARBFn(D
d162 1
a162 1
@@@@ -1286,8 +1308,8 @@@@ GLXContext TraceGLXApi::glXCreateNewContextFn(Display*
d173 1
a173 1
@@@@ -1400,6 +1422,11 @@@@ bool TraceGLXApi::glXGetMscRateOMLFn(Display* dpy,
@


1.1
log
@update to iridium-browser-42.0
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_gl_gl_bindings_autogen_glx_cc,v 1.1 2015/04/27 16:38:25 robert Exp $
--- ui/gl/gl_bindings_autogen_glx.cc.orig.port	Thu Apr 23 10:58:18 2015
+++ ui/gl/gl_bindings_autogen_glx.cc	Thu Apr 23 10:58:25 2015
d12 1
a12 1
@@@@ -118,6 +119,8 @@@@ void DriverGLX::InitializeStaticBindings() {
d21 1
a21 1
@@@@ -170,6 +173,13 @@@@ void DriverGLX::InitializeStaticBindings() {
d35 1
a35 1
@@@@ -268,8 +278,8 @@@@ static void GL_BINDING_CALL Debug_glXCopySubBufferMESA
d46 1
a46 1
@@@@ -474,8 +484,8 @@@@ static int GL_BINDING_CALL Debug_glXGetFBConfigAttrib(
d57 1
a57 1
@@@@ -516,6 +526,16 @@@@ static bool GL_BINDING_CALL Debug_glXGetMscRateOML(Dis
d74 1
a74 1
@@@@ -831,6 +851,10 @@@@ void DriverGLX::InitializeDebugBindings() {
d85 1
a85 1
@@@@ -918,9 +942,7 @@@@ void DriverGLX::InitializeDebugBindings() {
d96 1
a96 1
@@@@ -970,8 +992,8 @@@@ GLXContext GLXApiBase::glXCreateContextAttribsARBFn(Di
d107 1
a107 1
@@@@ -985,8 +1007,8 @@@@ GLXContext GLXApiBase::glXCreateNewContextFn(Display* 
d118 1
a118 1
@@@@ -1082,6 +1104,10 @@@@ bool GLXApiBase::glXGetMscRateOMLFn(Display* dpy,
d129 1
a129 1
@@@@ -1180,9 +1206,7 @@@@ void GLXApiBase::glXUseXFontFn(Font font, int first, i
d140 1
a140 1
@@@@ -1190,9 +1214,7 @@@@ int GLXApiBase::glXWaitVideoSyncSGIFn(int divisor,
d151 1
a151 1
@@@@ -1249,8 +1271,8 @@@@ GLXContext TraceGLXApi::glXCreateContextAttribsARBFn(D
d162 1
a162 1
@@@@ -1266,8 +1288,8 @@@@ GLXContext TraceGLXApi::glXCreateNewContextFn(Display*
d173 1
a173 1
@@@@ -1380,6 +1402,11 @@@@ bool TraceGLXApi::glXGetMscRateOMLFn(Display* dpy,
@

