head	1.4;
access;
symbols
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2017.04.19.05.16.47;	author robert;	state Exp;
branches;
next	1.3;
commitid	jpW2BiKwA9H7U7d6;

1.3
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.2;
commitid	lED1Oks5HVh03mCa;

1.2
date	2016.05.28.14.49.39;	author robert;	state Exp;
branches;
next	1.1;
commitid	e1vpcgKLVeZdUbdR;

1.1
date	2016.04.27.12.46.16;	author robert;	state Exp;
branches;
next	;
commitid	yOrwVI71D7bLHmrO;


desc
@@


1.4
log
@update to 57.0
@
text
@$OpenBSD: patch-media_base_video_frame_cc,v 1.8 2017/03/14 12:18:54 robert Exp $
--- media/base/video_frame.cc.orig.port	Thu Mar  9 21:04:34 2017
+++ media/base/video_frame.cc	Fri Mar 10 07:46:24 2017
@@@@ -53,7 +53,7 @@@@ static std::string StorageTypeToString(
       return "OWNED_MEMORY";
     case VideoFrame::STORAGE_SHMEM:
       return "SHMEM";
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
     case VideoFrame::STORAGE_DMABUFS:
       return "DMABUFS";
 #endif
@@@@ -69,7 +69,7 @@@@ static std::string StorageTypeToString(
 // static
 static bool IsStorageTypeMappable(VideoFrame::StorageType storage_type) {
   return
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
       // This is not strictly needed but makes explicit that, at VideoFrame
       // level, DmaBufs are not mappable from userspace.
       storage_type != VideoFrame::STORAGE_DMABUFS &&
@@@@ -324,7 +324,7 @@@@ scoped_refptr<VideoFrame> VideoFrame::WrapExternalYuva
   return frame;
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 // static
 scoped_refptr<VideoFrame> VideoFrame::WrapExternalDmabufs(
     VideoPixelFormat format,
@@@@ -436,7 +436,7 @@@@ scoped_refptr<VideoFrame> VideoFrame::WrapVideoFrame(
     wrapping_frame->data_[i] = frame->data(i);
   }
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   // If there are any |dmabuf_fds_| plugged in, we should duplicate them.
   if (frame->storage_type() == STORAGE_DMABUFS) {
     std::vector<int> original_fds;
@@@@ -722,7 +722,7 @@@@ size_t VideoFrame::shared_memory_offset() const {
   return shared_memory_offset_;
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 int VideoFrame::dmabuf_fd(size_t plane) const {
   DCHECK_EQ(storage_type_, STORAGE_DMABUFS);
   DCHECK(IsValidPlane(plane, format_));
@


1.3
log
@update to 54.0
@
text
@d1 3
a3 3
$OpenBSD: patch-media_base_video_frame_cc,v 1.5 2016/10/26 06:22:08 robert Exp $
--- media/base/video_frame.cc.orig.port	Wed Oct 12 21:03:00 2016
+++ media/base/video_frame.cc	Wed Oct 19 12:56:06 2016
d13 1
a13 1
@@@@ -75,7 +75,7 @@@@ static std::string StorageTypeToString(
d22 1
a22 1
@@@@ -329,7 +329,7 @@@@ scoped_refptr<VideoFrame> VideoFrame::WrapExternalYuva
d31 1
a31 1
@@@@ -441,7 +441,7 @@@@ scoped_refptr<VideoFrame> VideoFrame::WrapVideoFrame(
d40 2
a41 2
@@@@ -750,7 +750,7 @@@@ VideoFrame::gpu_memory_buffer_handles() const {
   return gpu_memory_buffer_handles_;
@


1.2
log
@update to 51.1
@
text
@d1 4
a4 4
$OpenBSD: patch-media_base_video_frame_cc,v 1.2 2016/05/27 06:28:21 robert Exp $
--- media/base/video_frame.cc.orig.port	Wed May 25 21:01:03 2016
+++ media/base/video_frame.cc	Thu May 26 08:09:47 2016
@@@@ -49,7 +49,7 @@@@ static std::string StorageTypeToString(
d13 1
a13 1
@@@@ -71,7 +71,7 @@@@ static std::string StorageTypeToString(
d22 1
a22 1
@@@@ -311,7 +311,7 @@@@ scoped_refptr<VideoFrame> VideoFrame::WrapExternalYuvG
d31 1
a31 1
@@@@ -427,7 +427,7 @@@@ scoped_refptr<VideoFrame> VideoFrame::WrapVideoFrame(
d40 1
a40 1
@@@@ -712,7 +712,7 @@@@ VideoFrame::gpu_memory_buffer_handles() const {
@


1.1
log
@update to iridium-50.0 and sync recent changes with chromium
@
text
@d1 4
a4 4
$OpenBSD: patch-media_base_video_frame_cc,v 1.1 2016/04/26 14:22:24 robert Exp $
--- media/base/video_frame.cc.orig.port	Mon Apr 25 18:28:58 2016
+++ media/base/video_frame.cc	Mon Apr 25 18:29:16 2016
@@@@ -60,7 +60,7 @@@@ static std::string StorageTypeToString(
d13 1
a13 1
@@@@ -87,7 +87,7 @@@@ static bool IsValidPlane(size_t plane, VideoPixelForma
d22 1
a22 1
@@@@ -416,7 +416,7 @@@@ scoped_refptr<VideoFrame> VideoFrame::WrapExternalYuvG
d31 1
a31 1
@@@@ -526,7 +526,7 @@@@ scoped_refptr<VideoFrame> VideoFrame::WrapVideoFrame(
d40 1
a40 1
@@@@ -811,7 +811,7 @@@@ VideoFrame::gpu_memory_buffer_handles() const {
@

