head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.2
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.4.0.2
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2017.04.19.05.16.46;	author robert;	state Exp;
branches;
next	1.4;
commitid	jpW2BiKwA9H7U7d6;

1.4
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.3;
commitid	lED1Oks5HVh03mCa;

1.3
date	2016.03.23.20.13.07;	author robert;	state Exp;
branches;
next	1.2;
commitid	2hNT21XsdisESysQ;

1.2
date	2015.05.06.14.27.23;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.36;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.36;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.5
log
@update to 57.0
@
text
@$OpenBSD: patch-chrome_browser_extensions_api_music_manager_private_device_id_linux_cc,v 1.4 2016/03/06 10:51:14 robert Exp $
--- chrome/browser/extensions/api/music_manager_private/device_id_linux.cc.orig.port	Wed Feb 24 00:01:58 2016
+++ chrome/browser/extensions/api/music_manager_private/device_id_linux.cc	Sat Mar  5 19:12:21 2016
@@@@ -4,6 +4,15 @@@@
 
 #include "chrome/browser/extensions/api/music_manager_private/device_id.h"
 
+#include "build/build_config.h"
+
+#if defined(OS_BSD)
+#include <sys/types.h>
+#include <net/if_dl.h>
+#include <netinet/in.h>
+#include <sys/socket.h>
+#endif
+
 #include <ifaddrs.h>
 #include <net/if.h>
 #include <stddef.h>
@@@@ -105,11 +114,33 @@@@ class MacAddressProcessor {
                         const char* const prefixes[],
                         size_t prefixes_count) {
     const int MAC_LENGTH = 6;
+#if defined(OS_BSD)
+    struct ifaddrs *ifap, *ifinfo;
+#else
     struct ifreq ifinfo;
+#endif
 
     memset(&ifinfo, 0, sizeof(ifinfo));
-    strncpy(ifinfo.ifr_name, ifaddr->ifa_name, sizeof(ifinfo.ifr_name) - 1);
 
+#if defined(OS_BSD)
+    int result = getifaddrs(&ifap);
+    if (result != 0)
+      return true;
+    result = 1; // no MAC found yet
+    for (ifinfo = ifap; ifinfo != NULL; ifinfo = ifinfo->ifa_next) {
+      struct sockaddr* sa = ifinfo->ifa_addr;
+      if (sa->sa_family == AF_LINK &&
+        !strncmp(ifinfo->ifa_name, ifaddr->ifa_name,
+        sizeof(ifinfo->ifa_name) - 1)) { 
+          result = 0;
+	  break;
+      }
+    }
+
+    char mac_address[6];
+    strncpy(mac_address, (const char*)LLADDR((struct sockaddr_dl*)ifinfo->ifa_addr), sizeof(mac_address));
+#else
+    strncpy(ifinfo.ifr_name, ifaddr->ifa_name, sizeof(ifinfo.ifr_name) - 1);
     int sd = socket(AF_INET, SOCK_DGRAM, 0);
     int result = ioctl(sd, SIOCGIFHWADDR, &ifinfo);
     close(sd);
@@@@ -119,11 +150,17 @@@@ class MacAddressProcessor {
 
     const char* mac_address =
         static_cast<const char*>(ifinfo.ifr_hwaddr.sa_data);
+#endif
     if (!is_valid_mac_address_.Run(mac_address, MAC_LENGTH))
       return true;
 
+#if defined(OS_BSD)
+    if (!IsValidPrefix(ifinfo->ifa_name, prefixes, prefixes_count))
+      return true;
+#else
     if (!IsValidPrefix(ifinfo.ifr_name, prefixes, prefixes_count))
       return true;
+#endif
 
     // Got one!
     found_mac_address_ =
@


1.4
log
@update to 54.0
@
text
@@


1.3
log
@update to 49.0
@
text
@@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 4
a4 4
$OpenBSD: patch-chrome_browser_extensions_api_music_manager_private_device_id_linux_cc,v 1.3 2015/01/22 11:16:40 robert Exp $
--- chrome/browser/extensions/api/music_manager_private/device_id_linux.cc.orig.port	Wed Dec  3 03:13:20 2014
+++ chrome/browser/extensions/api/music_manager_private/device_id_linux.cc	Sat Dec  6 11:34:25 2014
@@@@ -4,6 +4,10 @@@@
d8 2
d13 2
d16 1
a16 1
 #include <sys/socket.h>  // Must be included before ifaddrs.h.
d19 2
a20 1
@@@@ -102,11 +106,33 @@@@ class MacAddressProcessor {
d55 1
a55 1
@@@@ -116,11 +142,17 @@@@ class MacAddressProcessor {
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
