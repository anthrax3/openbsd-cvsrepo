head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.2
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.10.0.2
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2017.04.28.22.22.36;	author robert;	state Exp;
branches;
next	1.11;
commitid	hEiDsbcK5ON7rnmo;

1.11
date	2017.04.19.05.16.47;	author robert;	state Exp;
branches;
next	1.10;
commitid	jpW2BiKwA9H7U7d6;

1.10
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.9;
commitid	lED1Oks5HVh03mCa;

1.9
date	2016.04.27.12.46.16;	author robert;	state Exp;
branches;
next	1.8;
commitid	yOrwVI71D7bLHmrO;

1.8
date	2016.03.23.20.13.07;	author robert;	state Exp;
branches;
next	1.7;
commitid	2hNT21XsdisESysQ;

1.7
date	2016.02.15.18.07.53;	author robert;	state Exp;
branches;
next	1.6;
commitid	R0eKGRSW56iYyJ8K;

1.6
date	2015.12.17.07.02.48;	author robert;	state Exp;
branches;
next	1.5;
commitid	ipujnT7CBcOVRvhV;

1.5
date	2015.10.24.18.22.22;	author robert;	state Exp;
branches;
next	1.4;
commitid	HwRgK4asvw18PlFu;

1.4
date	2015.08.12.10.56.13;	author robert;	state Exp;
branches;
next	1.3;
commitid	WokHnx1ONPqT4wiW;

1.3
date	2015.05.26.17.37.40;	author robert;	state Exp;
branches;
next	1.2;
commitid	imvK5OAjfFzbGwip;

1.2
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.38;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.38;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.12
log
@update to 58.0
@
text
@$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.22 2017/04/28 14:21:00 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Fri Apr 28 07:37:58 2017
+++ ui/views/controls/textfield/textfield.cc	Fri Apr 28 07:38:43 2017
@@@@ -54,7 +54,7 @@@@
 #include "ui/base/win/osk_display_manager.h"
 #endif
 
-#if defined(OS_LINUX) && !defined(OS_CHROMEOS)
+#if (defined(OS_BSD) || defined(OS_LINUX)) && !defined(OS_CHROMEOS)
 #include "base/strings/utf_string_conversions.h"
 #include "ui/base/ime/linux/text_edit_command_auralinux.h"
 #include "ui/base/ime/linux/text_edit_key_bindings_delegate_auralinux.h"
@@@@ -153,14 +153,14 @@@@ ui::TextEditCommand GetCommandForKeyEvent(const ui::Ke
     case ui::VKEY_BACK:
       if (!control)
         return ui::TextEditCommand::DELETE_BACKWARD;
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
       // Only erase by line break on Linux and ChromeOS.
       if (shift)
         return ui::TextEditCommand::DELETE_TO_BEGINNING_OF_LINE;
 #endif
       return ui::TextEditCommand::DELETE_WORD_BACKWARD;
     case ui::VKEY_DELETE:
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
       // Only erase by line break on Linux and ChromeOS.
       if (shift && control)
         return ui::TextEditCommand::DELETE_TO_END_OF_LINE;
@@@@ -221,7 +221,7 @@@@ bool IsControlKeyModifier(int flags) {
 // Control-modified key combination, but we cannot extend it to other platforms
 // as Control has different meanings and behaviors.
 // https://crrev.com/2580483002/#msg46
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   return flags & ui::EF_CONTROL_DOWN;
 #else
   return false;
@@@@ -606,7 +606,7 @@@@ bool Textfield::OnMousePressed(const ui::MouseEvent& e
     ShowImeIfNeeded();
   }
 
-#if defined(OS_LINUX) && !defined(OS_CHROMEOS)
+#if (defined(OS_BSD) || defined(OS_LINUX)) && !defined(OS_CHROMEOS)
   if (!handled && !had_focus && event.IsOnlyMiddleMouseButton())
     RequestFocus();
 #endif
@@@@ -645,7 +645,7 @@@@ bool Textfield::OnKeyPressed(const ui::KeyEvent& event
   if (!textfield)
     return handled;
 
-#if defined(OS_LINUX) && !defined(OS_CHROMEOS)
+#if (defined(OS_BSD) || defined(OS_LINUX)) && !defined(OS_CHROMEOS)
   ui::TextEditKeyBindingsDelegateAuraLinux* delegate =
       ui::GetTextEditKeyBindingsDelegate();
   std::vector<ui::TextEditCommandAuraLinux> commands;
@@@@ -785,7 +785,7 @@@@ void Textfield::AboutToRequestFocusFromTabTraversal(bo
 }
 
 bool Textfield::SkipDefaultKeyEventProcessing(const ui::KeyEvent& event) {
-#if defined(OS_LINUX) && !defined(OS_CHROMEOS)
+#if (defined(OS_BSD) || defined(OS_LINUX)) && !defined(OS_CHROMEOS)
   // Skip any accelerator handling that conflicts with custom keybindings.
   ui::TextEditKeyBindingsDelegateAuraLinux* delegate =
       ui::GetTextEditKeyBindingsDelegate();
@@@@ -1076,7 +1076,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
 
   SkBitmap bitmap;
   float raster_scale = ScaleFactorForDragFromWidget(GetWidget());
-#if defined(OS_LINUX) && !defined(OS_CHROMEOS)
+#if (defined(OS_BSD) || defined(OS_LINUX)) && !defined(OS_CHROMEOS)
   // Desktop Linux Aura does not yet support transparency in drag images.
   SkColor color = GetBackgroundColor();
 #else
@@@@ -1873,7 +1873,7 @@@@ bool Textfield::PasteSelectionClipboard() {
 }
 
 void Textfield::UpdateSelectionClipboard() {
-#if defined(OS_LINUX) && !defined(OS_CHROMEOS)
+#if (defined(OS_BSD) || defined(OS_LINUX)) && !defined(OS_CHROMEOS)
   if (text_input_type_ != ui::TEXT_INPUT_TYPE_PASSWORD) {
     ui::ScopedClipboardWriter(ui::CLIPBOARD_TYPE_SELECTION)
         .WriteText(GetSelectedText());
@


1.11
log
@update to 57.0
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.21 2017/03/14 12:18:54 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Thu Mar  9 21:04:49 2017
+++ ui/views/controls/textfield/textfield.cc	Fri Mar 10 07:46:26 2017
d9 1
a9 1
+#if (defined(OS_LINUX) || defined(OS_BSD)) && !defined(OS_CHROMEOS)
d30 10
a39 1
@@@@ -582,7 +582,7 @@@@ bool Textfield::OnMousePressed(const ui::MouseEvent& e
d44 2
a45 2
+#if (defined(OS_LINUX) || defined(OS_BSD)) && !defined(OS_CHROMEOS)
   if (!handled && !HasFocus() && event.IsOnlyMiddleMouseButton())
d48 1
a48 1
@@@@ -619,7 +619,7 @@@@ bool Textfield::OnKeyPressed(const ui::KeyEvent& event
d53 1
a53 1
+#if (defined(OS_LINUX) || defined(OS_BSD)) && !defined(OS_CHROMEOS)
d57 1
a57 1
@@@@ -759,7 +759,7 @@@@ void Textfield::AboutToRequestFocusFromTabTraversal(bo
d62 1
a62 1
+#if (defined(OS_LINUX) || defined(OS_BSD)) && !defined(OS_CHROMEOS)
d66 4
a69 4
@@@@ -1041,7 +1041,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
   std::unique_ptr<gfx::Canvas> canvas(
       GetCanvasForDragImage(GetWidget(), label.size()));
   label.SetEnabledColor(GetTextColor());
d71 1
a71 1
+#if (defined(OS_LINUX) || defined(OS_BSD)) && !defined(OS_CHROMEOS)
d73 3
a75 3
   canvas->DrawColor(GetBackgroundColor());
 #endif
@@@@ -1833,7 +1833,7 @@@@ bool Textfield::PasteSelectionClipboard() {
d80 1
a80 1
+#if (defined(OS_LINUX) || defined(OS_BSD)) && !defined(OS_CHROMEOS)
@


1.10
log
@update to 54.0
@
text
@d1 4
a4 4
$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.18 2016/10/26 06:22:08 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Wed Oct 12 21:03:17 2016
+++ ui/views/controls/textfield/textfield.cc	Wed Oct 19 12:56:13 2016
@@@@ -51,7 +51,7 @@@@
d13 1
a13 1
@@@@ -156,14 +156,14 @@@@ ui::TextEditCommand GetCommandForKeyEvent(const ui::Ke
d30 3
a32 3
@@@@ -596,7 +596,7 @@@@ bool Textfield::OnMousePressed(const ui::MouseEvent& e
       OnAfterUserAction();
     }
d36 4
a39 4
     if (event.IsOnlyMiddleMouseButton()) {
       if (GetRenderText()->IsPointInSelection(event.location())) {
         OnBeforeUserAction();
@@@@ -665,7 +665,7 @@@@ bool Textfield::OnKeyPressed(const ui::KeyEvent& event
d48 1
a48 1
@@@@ -805,7 +805,7 @@@@ void Textfield::AboutToRequestFocusFromTabTraversal(bo
d57 1
a57 1
@@@@ -1065,7 +1065,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
d66 1
a66 1
@@@@ -2004,7 +2004,7 @@@@ void Textfield::CreateTouchSelectionControllerAndNotif
d69 1
a69 1
 void Textfield::UpdateSelectionClipboard() const {
d72 3
a74 3
   if (performing_user_action_ && HasSelection()) {
     ui::ScopedClipboardWriter(
         ui::CLIPBOARD_TYPE_SELECTION).WriteText(GetSelectedText());
@


1.9
log
@update to iridium-50.0 and sync recent changes with chromium
@
text
@d1 5
a5 5
$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.15 2016/04/16 19:08:46 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Fri Apr  8 18:02:15 2016
+++ ui/views/controls/textfield/textfield.cc	Thu Apr 14 08:25:16 2016
@@@@ -47,7 +47,7 @@@@
 #include "base/win/win_util.h"
d11 3
a13 3
 #include "ui/events/linux/text_edit_command_auralinux.h"
 #include "ui/events/linux/text_edit_key_bindings_delegate_auralinux.h"
@@@@ -130,7 +130,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d15 2
a16 2
       if (!control || has_selection)
         return IDS_DELETE_BACKWARD;
d21 3
a23 2
         return IDS_DELETE_TO_BEGINNING_OF_LINE;
@@@@ -139,7 +139,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
a24 2
       if (!control || has_selection)
         return (shift && has_selection) ? IDS_APP_CUT : IDS_DELETE_FORWARD;
d28 3
a30 12
       if (shift)
         return IDS_DELETE_TO_END_OF_LINE;
@@@@ -154,7 +154,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
   }
 }
 
-#if defined(OS_LINUX) && !defined(OS_CHROMEOS)
+#if (defined(OS_LINUX) || defined(OS_BSD)) && !defined(OS_CHROMEOS)
 // Convert a custom text edit |command| to the equivalent views command ID.
 int GetViewsCommand(const ui::TextEditCommandAuraLinux& command, bool rtl) {
   const bool select = command.extend_selection();
@@@@ -642,7 +642,7 @@@@ bool Textfield::OnMousePressed(const ui::MouseEvent& e
d39 1
a39 1
@@@@ -711,7 +711,7 @@@@ bool Textfield::OnKeyPressed(const ui::KeyEvent& event
d48 1
a48 1
@@@@ -846,7 +846,7 @@@@ void Textfield::AboutToRequestFocusFromTabTraversal(bo
d57 2
a58 2
@@@@ -1105,7 +1105,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
   scoped_ptr<gfx::Canvas> canvas(
d66 1
a66 1
@@@@ -1880,7 +1880,7 @@@@ void Textfield::CreateTouchSelectionControllerAndNotif
@


1.8
log
@update to 49.0
@
text
@d1 4
a4 4
$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.14 2016/03/06 10:51:14 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Wed Feb 24 21:01:35 2016
+++ ui/views/controls/textfield/textfield.cc	Thu Mar  3 09:43:26 2016
@@@@ -45,7 +45,7 @@@@
d13 1
a13 1
@@@@ -128,7 +128,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d22 1
a22 1
@@@@ -137,7 +137,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d31 1
a31 1
@@@@ -152,7 +152,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d40 1
a40 1
@@@@ -634,7 +634,7 @@@@ bool Textfield::OnMousePressed(const ui::MouseEvent& e
d49 1
a49 1
@@@@ -703,7 +703,7 @@@@ bool Textfield::OnKeyPressed(const ui::KeyEvent& event
d58 1
a58 1
@@@@ -838,7 +838,7 @@@@ void Textfield::AboutToRequestFocusFromTabTraversal(bo
d67 1
a67 1
@@@@ -1097,7 +1097,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
d76 1
a76 1
@@@@ -1872,7 +1872,7 @@@@ void Textfield::CreateTouchSelectionControllerAndNotif
@


1.7
log
@update to 48.1 (based on the latest stable chromium which contains security
fixes as well)

ok naddy@@ sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.13 2016/01/23 18:49:31 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Wed Jan 20 21:01:26 2016
+++ ui/views/controls/textfield/textfield.cc	Fri Jan 22 19:58:59 2016
@@@@ -43,7 +43,7 @@@@
d13 1
a13 1
@@@@ -126,7 +126,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d22 1
a22 1
@@@@ -135,7 +135,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d31 1
a31 1
@@@@ -150,7 +150,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d40 1
a40 1
@@@@ -632,7 +632,7 @@@@ bool Textfield::OnMousePressed(const ui::MouseEvent& e
d49 1
a49 1
@@@@ -701,7 +701,7 @@@@ bool Textfield::OnKeyPressed(const ui::KeyEvent& event
d58 1
a58 1
@@@@ -836,7 +836,7 @@@@ void Textfield::AboutToRequestFocusFromTabTraversal(bo
d67 1
a67 1
@@@@ -1095,7 +1095,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
d76 1
a76 1
@@@@ -1870,7 +1870,7 @@@@ void Textfield::CreateTouchSelectionControllerAndNotif
@


1.6
log
@update to 47.0rc1
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.12 2015/12/05 16:13:32 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Tue Nov 24 21:01:01 2015
+++ ui/views/controls/textfield/textfield.cc	Wed Dec  2 08:18:33 2015
d67 1
a67 1
@@@@ -1094,7 +1094,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
d76 1
a76 1
@@@@ -1868,7 +1868,7 @@@@ void Textfield::CreateTouchSelectionControllerAndNotif
@


1.5
log
@update to 46.0rc1
@
text
@d1 4
a4 4
$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.11 2015/09/05 16:06:50 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Sat Aug 22 21:01:59 2015
+++ ui/views/controls/textfield/textfield.cc	Wed Sep  2 07:31:55 2015
@@@@ -42,7 +42,7 @@@@
d13 1
a13 1
@@@@ -125,7 +125,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d22 1
a22 1
@@@@ -134,7 +134,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d31 1
a31 1
@@@@ -149,7 +149,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d40 1
a40 1
@@@@ -631,7 +631,7 @@@@ bool Textfield::OnMousePressed(const ui::MouseEvent& e
d49 1
a49 1
@@@@ -700,7 +700,7 @@@@ bool Textfield::OnKeyPressed(const ui::KeyEvent& event
d58 1
a58 1
@@@@ -835,7 +835,7 @@@@ void Textfield::AboutToRequestFocusFromTabTraversal(bo
d67 1
a67 1
@@@@ -1093,7 +1093,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
d76 1
a76 1
@@@@ -1871,7 +1871,7 @@@@ void Textfield::CreateTouchSelectionControllerAndNotif
@


1.4
log
@update to iridium-44.0 and also incorporate a patch from dcoppa@@
for the startup script that still had references to chromium directories.
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.10 2015/07/23 13:44:04 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Wed Jul 15 22:30:11 2015
+++ ui/views/controls/textfield/textfield.cc	Wed Jul 22 08:37:30 2015
d40 1
a40 1
@@@@ -625,7 +625,7 @@@@ bool Textfield::OnMousePressed(const ui::MouseEvent& e
d49 1
a49 1
@@@@ -694,7 +694,7 @@@@ bool Textfield::OnKeyPressed(const ui::KeyEvent& event
d58 1
a58 1
@@@@ -833,7 +833,7 @@@@ void Textfield::AboutToRequestFocusFromTabTraversal(bo
d67 1
a67 1
@@@@ -1089,7 +1089,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
d76 1
a76 1
@@@@ -1888,7 +1888,7 @@@@ void Textfield::CreateTouchSelectionControllerAndNotif
@


1.3
log
@update to 43.1
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.9 2015/05/24 15:51:53 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Thu May 14 00:35:47 2015
+++ ui/views/controls/textfield/textfield.cc	Wed May 20 08:34:57 2015
d40 1
a40 1
@@@@ -618,7 +618,7 @@@@ bool Textfield::OnMousePressed(const ui::MouseEvent& e
d49 1
a49 1
@@@@ -684,7 +684,7 @@@@ bool Textfield::OnKeyPressed(const ui::KeyEvent& event
d58 1
a58 1
@@@@ -811,7 +811,7 @@@@ void Textfield::AboutToRequestFocusFromTabTraversal(bo
d67 1
a67 1
@@@@ -1067,7 +1067,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
d76 1
a76 1
@@@@ -1866,7 +1866,7 @@@@ void Textfield::CreateTouchSelectionControllerAndNotif
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 4
a4 4
$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.8 2015/04/27 16:38:25 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Wed Apr 15 00:31:23 2015
+++ ui/views/controls/textfield/textfield.cc	Wed Apr 15 08:32:50 2015
@@@@ -41,7 +41,7 @@@@
d13 1
a13 1
@@@@ -124,7 +124,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d22 1
a22 1
@@@@ -133,7 +133,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d31 1
a31 1
@@@@ -148,7 +148,7 @@@@ int GetCommandForKeyEvent(const ui::KeyEvent& event, b
d40 1
a40 1
@@@@ -612,7 +612,7 @@@@ bool Textfield::OnMousePressed(const ui::MouseEvent& e
d49 1
a49 1
@@@@ -678,7 +678,7 @@@@ bool Textfield::OnKeyPressed(const ui::KeyEvent& event
d58 1
a58 1
@@@@ -805,7 +805,7 @@@@ void Textfield::AboutToRequestFocusFromTabTraversal(bo
d67 1
a67 1
@@@@ -1061,7 +1061,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
d76 1
a76 1
@@@@ -1855,7 +1855,7 @@@@ void Textfield::CreateTouchSelectionControllerAndNotif
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_views_controls_textfield_textfield_cc,v 1.7 2015/03/18 19:26:29 robert Exp $
--- ui/views/controls/textfield/textfield.cc.orig.port	Tue Mar 10 23:41:42 2015
+++ ui/views/controls/textfield/textfield.cc	Wed Mar 11 07:22:50 2015
d40 1
a40 1
@@@@ -611,7 +611,7 @@@@ bool Textfield::OnMousePressed(const ui::MouseEvent& e
d49 1
a49 1
@@@@ -674,7 +674,7 @@@@ bool Textfield::OnKeyPressed(const ui::KeyEvent& event
d58 1
a58 1
@@@@ -799,7 +799,7 @@@@ void Textfield::AboutToRequestFocusFromTabTraversal(bo
d67 1
a67 1
@@@@ -1053,7 +1053,7 @@@@ void Textfield::WriteDragDataForView(View* sender,
d76 1
a76 1
@@@@ -1842,7 +1842,7 @@@@ void Textfield::CreateTouchSelectionControllerAndNotif
@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
