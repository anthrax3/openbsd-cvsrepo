head	1.4;
access;
symbols
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.04.19.05.16.47;	author robert;	state Exp;
branches;
next	1.3;
commitid	jpW2BiKwA9H7U7d6;

1.3
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.2;
commitid	lED1Oks5HVh03mCa;

1.2
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.4
log
@update to 57.0
@
text
@$OpenBSD: patch-gpu_config_gpu_info_collector_x11_cc,v 1.5 2017/03/14 12:18:54 robert Exp $
--- gpu/config/gpu_info_collector_x11.cc.orig.port	Thu Mar  9 21:04:33 2017
+++ gpu/config/gpu_info_collector_x11.cc	Fri Mar 10 19:44:33 2017
@@@@ -8,8 +8,19 @@@@
 #include "gpu/config/gpu_info_collector_linux.h"
 #include "third_party/libXNVCtrl/NVCtrl.h"
 #include "third_party/libXNVCtrl/NVCtrlLib.h"
+#include "ui/gl/gl_bindings.h"
+#include "ui/gl/gl_context.h"
+#include "ui/gl/gl_implementation.h"
+#include "ui/gl/gl_gl_api_implementation.h"
+#include "ui/gl/gl_surface.h"
+#include "ui/gl/init/gl_initializer.h"
 #include "ui/gfx/x/x11_types.h"
 
+typedef bool (*PFNGLXQUERYRENDERERINTEGERMESAPROC) (Display *dpy, int screen, int renderer, int attribute, unsigned int *value);
+
+#define GLX_RENDERER_VENDOR_ID_MESA     0x8183
+#define GLX_RENDERER_DEVICE_ID_MESA     0x8184
+
 namespace gpu {
 
 // Use NVCtrl extention to query NV driver version.
@@@@ -39,5 +50,42 @@@@ std::string CollectDriverVersionNVidia() {
   }
   return std::string();
 }
+
+CollectInfoResult CollectMesaCardInfo(GPUInfo* gpu_info) {
+  unsigned int vid[3], did[3];
+
+  Display* display = gfx::GetXDisplay();
+  if (!display) {
+    LOG(ERROR) << "XOpenDisplay failed.";
+    return kCollectInfoNonFatalFailure;
+  }
+
+  bool initialized =
+      gl::init::InitializeStaticGLBindings(gl::kGLImplementationDesktopGL);
+
+  if (!initialized)
+    return kCollectInfoNonFatalFailure;
+
+  PFNGLXQUERYRENDERERINTEGERMESAPROC queryInteger =
+      (PFNGLXQUERYRENDERERINTEGERMESAPROC) glXGetProcAddressARB((const GLubyte *)
+      "glXQueryRendererIntegerMESA");
+
+  bool vendor_ret =
+      queryInteger(display, 0, 0, GLX_RENDERER_VENDOR_ID_MESA, vid);
+  bool device_ret =
+      queryInteger(display, 0, 0, GLX_RENDERER_DEVICE_ID_MESA, did);
+
+  if (vendor_ret && device_ret) {
+    GPUInfo::GPUDevice gpu;
+    gpu.vendor_id = vid[0];
+    gpu.device_id = did[0];
+    gpu_info->gpu = gpu;
+  }
+
+  if (initialized)
+    gl::ClearBindingsGL();
+
+  return kCollectInfoSuccess;
+ }
 
 }  // namespace gpu
@


1.3
log
@update to 54.0
@
text
@d1 3
a3 3
$OpenBSD: patch-gpu_config_gpu_info_collector_x11_cc,v 1.4 2016/10/26 06:22:08 robert Exp $
--- gpu/config/gpu_info_collector_x11.cc.orig.port	Fri Oct 21 00:02:04 2016
+++ gpu/config/gpu_info_collector_x11.cc	Sun Oct 23 11:19:20 2016
d61 1
a61 1
+    gl::ClearGLBindingsGL();
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 4
a4 4
$OpenBSD: patch-gpu_config_gpu_info_collector_x11_cc,v 1.2 2015/04/27 16:38:25 robert Exp $
--- gpu/config/gpu_info_collector_x11.cc.orig.port	Wed Apr 15 00:18:55 2015
+++ gpu/config/gpu_info_collector_x11.cc	Wed Apr 15 15:34:00 2015
@@@@ -8,8 +8,17 @@@@
d11 1
d13 1
d24 1
a24 1
@@@@ -39,5 +48,42 @@@@ std::string CollectDriverVersionNVidia() {
d39 1
a39 1
+      gfx::InitializeStaticGLBindings(gfx::kGLImplementationDesktopGL);
d61 1
a61 1
+    gfx::ClearGLBindings();
@


1.1
log
@Initial revision
@
text
@d1 4
a4 9
$OpenBSD: patch-gpu_config_gpu_info_collector_x11_cc,v 1.1 2015/02/22 11:33:57 robert Exp $
--- gpu/config/gpu_info_collector_x11.cc.orig.port	Fri Feb 20 05:24:00 2015
+++ gpu/config/gpu_info_collector_x11.cc	Sun Feb 22 12:13:30 2015
@@@@ -4,12 +4,22 @@@@
 
 #include <X11/Xlib.h>
 
+#include "base/debug/trace_event.h"
 #include "base/logging.h"
d22 1
a22 1
@@@@ -39,5 +49,42 @@@@ std::string CollectDriverVersionNVidia() {
@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
