head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.2
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2017.04.19.05.16.46;	author robert;	state Exp;
branches;
next	1.5;
commitid	jpW2BiKwA9H7U7d6;

1.5
date	2016.10.27.18.30.40;	author robert;	state Exp;
branches;
next	1.4;
commitid	lED1Oks5HVh03mCa;

1.4
date	2016.03.23.20.13.06;	author robert;	state Exp;
branches;
next	1.3;
commitid	2hNT21XsdisESysQ;

1.3
date	2016.02.15.18.07.52;	author robert;	state Exp;
branches;
next	1.2;
commitid	R0eKGRSW56iYyJ8K;

1.2
date	2015.05.26.17.37.39;	author robert;	state Exp;
branches;
next	1.1;
commitid	imvK5OAjfFzbGwip;

1.1
date	2015.05.06.14.27.23;	author robert;	state Exp;
branches;
next	;
commitid	0TVTUxEI0BYra21v;


desc
@@


1.6
log
@update to 57.0
@
text
@$OpenBSD: patch-base_process_memory_cc,v 1.5 2016/10/26 06:22:07 robert Exp $
--- base/process/memory.cc.orig.port	Fri Oct 21 00:01:59 2016
+++ base/process/memory.cc	Sat Oct 22 15:54:28 2016
@@@@ -10,7 +10,7 @@@@
 namespace base {
 
 // Defined in memory_win.cc for Windows.
-#if !defined(OS_WIN)
+#if !defined(OS_WIN) && !defined(OS_BSD)
 
 namespace {
 
@@@@ -31,7 +31,7 @@@@ void TerminateBecauseOutOfMemory(size_t size) {
 #endif
 
 // Defined in memory_mac.mm for Mac.
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
 
 bool UncheckedCalloc(size_t num_items, size_t size, void** result) {
   const size_t alloc_size = num_items * size;
@


1.5
log
@update to 54.0
@
text
@@


1.4
log
@update to 49.0
@
text
@d1 14
a14 5
$OpenBSD: patch-base_process_memory_cc,v 1.4 2016/03/06 10:51:13 robert Exp $
--- base/process/memory.cc.orig.port	Wed Feb 24 00:01:57 2016
+++ base/process/memory.cc	Thu Mar  3 09:43:25 2016
@@@@ -26,7 +26,7 @@@@ void TerminateBecauseOutOfMemory(size_t size) {
 }
@


1.3
log
@update to 48.1 (based on the latest stable chromium which contains security
fixes as well)

ok naddy@@ sthen@@
@
text
@d1 4
a4 4
$OpenBSD: patch-base_process_memory_cc,v 1.3 2016/01/23 18:49:31 robert Exp $
--- base/process/memory.cc.orig.port	Sat Jan 23 10:35:17 2016
+++ base/process/memory.cc	Sat Jan 23 10:35:24 2016
@@@@ -25,7 +25,7 @@@@ void TerminateBecauseOutOfMemory(size_t size) {
@


1.2
log
@update to 43.1
@
text
@d1 5
a5 4
$OpenBSD: patch-base_process_memory_cc,v 1.2 2015/05/24 15:51:52 robert Exp $
--- base/process/memory.cc.orig.port	Thu May 14 00:23:01 2015
+++ base/process/memory.cc	Wed May 20 08:34:56 2015
@@@@ -45,4 +45,9 @@@@ bool UncheckedCalloc(size_t num_items, size_t size, vo
d7 3
a9 1
 #endif
d11 2
a12 6
+bool UncheckedMalloc(size_t size, void** result) {
+  *result = malloc(size);
+  return *result != NULL;
+}
+
 }  // namespace base
@


1.1
log
@update to iridium-browser-42.0
@
text
@d1 4
a4 4
$OpenBSD: patch-base_process_memory_cc,v 1.1 2015/04/27 16:38:25 robert Exp $
--- base/process/memory.cc.orig.port	Thu Apr 23 16:15:00 2015
+++ base/process/memory.cc	Thu Apr 23 16:15:41 2015
@@@@ -27,4 +27,9 @@@@ bool UncheckedCalloc(size_t num_items, size_t size, vo
d13 1
a13 1
 }
@

