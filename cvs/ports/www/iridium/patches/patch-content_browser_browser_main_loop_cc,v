head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.2
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.11;
commitid	lED1Oks5HVh03mCa;

1.11
date	2016.05.28.14.49.39;	author robert;	state Exp;
branches;
next	1.10;
commitid	e1vpcgKLVeZdUbdR;

1.10
date	2016.04.27.12.46.16;	author robert;	state Exp;
branches;
next	1.9;
commitid	yOrwVI71D7bLHmrO;

1.9
date	2016.03.23.20.13.07;	author robert;	state Exp;
branches;
next	1.8;
commitid	2hNT21XsdisESysQ;

1.8
date	2016.02.15.18.07.53;	author robert;	state Exp;
branches;
next	1.7;
commitid	R0eKGRSW56iYyJ8K;

1.7
date	2016.02.01.15.09.01;	author robert;	state Exp;
branches;
next	1.6;
commitid	y13gJFCxfcrc1u7F;

1.6
date	2015.12.17.07.02.48;	author robert;	state Exp;
branches;
next	1.5;
commitid	ipujnT7CBcOVRvhV;

1.5
date	2015.10.24.18.22.21;	author robert;	state Exp;
branches;
next	1.4;
commitid	HwRgK4asvw18PlFu;

1.4
date	2015.08.12.10.56.13;	author robert;	state Exp;
branches;
next	1.3;
commitid	WokHnx1ONPqT4wiW;

1.3
date	2015.05.26.17.37.40;	author robert;	state Exp;
branches;
next	1.2;
commitid	imvK5OAjfFzbGwip;

1.2
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.12
log
@update to 54.0
@
text
@$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.40 2016/10/26 06:22:08 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Wed Oct 12 21:02:59 2016
+++ content/browser/browser_main_loop.cc	Wed Oct 19 12:56:03 2016
@@@@ -196,6 +196,10 @@@@
 #include "gpu/vulkan/vulkan_implementation.h"
 #endif
 
+#if defined(OS_BSD)
+#include "content/common/child_process_sandbox_support_impl_linux.h"
+#endif
+
 // One of the linux specific headers defines this as a macro.
 #ifdef DestroyAll
 #undef DestroyAll
@@@@ -204,7 +208,7 @@@@
 namespace content {
 namespace {
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
 void SetupSandbox(const base::CommandLine& parsed_command_line) {
   TRACE_EVENT0("startup", "SetupSandbox");
 
@@@@ -432,10 +436,15 @@@@ void BrowserMainLoop::Init() {
 void BrowserMainLoop::EarlyInitialization() {
   TRACE_EVENT0("startup", "BrowserMainLoop::EarlyInitialization");
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
   // No thread should be created before this call, as SetupSandbox()
   // will end-up using fork().
   SetupSandbox(parsed_command_line_);
+#elif defined(OS_BSD)
+  RenderSandboxHostLinux::GetInstance()->Init();
+  base::FileHandleMappingVector fds_to_map;
+  const int sfd = RenderSandboxHostLinux::GetInstance()->GetRendererSocket();
+  fds_to_map.push_back(std::make_pair(sfd, GetSandboxFD()));
 #endif
 
 #if defined(USE_X11)
@


1.11
log
@update to 51.1
@
text
@d1 5
a5 5
$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.37 2016/05/27 06:28:21 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Wed May 25 21:01:01 2016
+++ content/browser/browser_main_loop.cc	Thu May 26 08:09:46 2016
@@@@ -183,6 +183,10 @@@@
 #include "ui/views/mus/window_manager_connection.h"
d15 1
a15 1
@@@@ -191,7 +195,7 @@@@
d23 3
a25 2
   base::FilePath sandbox_binary;
@@@@ -438,10 +442,15 @@@@ void BrowserMainLoop::EarlyInitialization() {
a26 1
   TRACK_SCOPED_REGION("Startup", "BrowserMainLoop::EarlyInitialization");
@


1.10
log
@update to iridium-50.0 and sync recent changes with chromium
@
text
@d1 3
a3 3
$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.36 2016/04/16 19:08:46 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Wed Apr 13 22:59:45 2016
+++ content/browser/browser_main_loop.cc	Sat Apr 16 14:46:41 2016
d24 1
a24 1
@@@@ -444,10 +448,15 @@@@ void BrowserMainLoop::EarlyInitialization() {
@


1.9
log
@update to 49.0
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.35 2016/03/06 10:51:14 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Thu Mar  3 10:05:58 2016
+++ content/browser/browser_main_loop.cc	Thu Mar  3 10:07:31 2016
@@@@ -181,6 +181,10 @@@@
d15 1
a15 1
@@@@ -189,7 +193,7 @@@@
d24 1
a24 1
@@@@ -440,10 +444,15 @@@@ void BrowserMainLoop::EarlyInitialization() {
d37 1
a37 1
+    fds_to_map.push_back(std::make_pair(sfd, GetSandboxFD()));
@


1.8
log
@update to 48.1 (based on the latest stable chromium which contains security
fixes as well)

ok naddy@@ sthen@@
@
text
@d1 5
a5 5
$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.34 2016/01/31 20:45:29 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Wed Jan 27 18:00:48 2016
+++ content/browser/browser_main_loop.cc	Sun Jan 31 21:39:34 2016
@@@@ -170,6 +170,10 @@@@
 #include "crypto/nss_util.h"
d15 1
a15 1
@@@@ -178,7 +182,7 @@@@
d24 1
a24 1
@@@@ -429,10 +433,15 @@@@ void BrowserMainLoop::EarlyInitialization() {
a40 9
@@@@ -1022,7 +1031,7 @@@@ void BrowserMainLoop::ShutdownThreadsAndCleanUp() {
   }
 #endif
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
   ZygoteHostImpl::GetInstance()->TearDownAfterLastChild();
 #endif  // defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID)
 
@


1.7
log
@switch to libjpeg_turbo and merge the sandbox font handling patches from
chromium
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.6 2015/12/17 07:02:48 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Tue Dec 15 21:05:10 2015
+++ content/browser/browser_main_loop.cc	Mon Feb  1 08:33:13 2016
@@@@ -167,6 +167,10 @@@@
d15 1
a15 1
@@@@ -175,7 +179,7 @@@@
d24 1
a24 1
@@@@ -431,12 +435,18 @@@@ void BrowserMainLoop::EarlyInitialization() {
a39 1
+
d41 1
a41 3
   if (UsingInProcessGpu()) {
     if (!gfx::InitializeThreadedX11()) {
@@@@ -983,7 +993,7 @@@@ void BrowserMainLoop::ShutdownThreadsAndCleanUp() {
@


1.6
log
@update to 47.0rc1
@
text
@d1 15
a15 4
$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.31 2015/12/05 16:13:32 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Tue Nov 24 21:00:54 2015
+++ content/browser/browser_main_loop.cc	Wed Dec  2 08:18:32 2015
@@@@ -175,7 +175,7 @@@@
d24 1
a24 1
@@@@ -431,7 +431,7 @@@@ void BrowserMainLoop::EarlyInitialization() {
d33 12
a44 1
@@@@ -983,7 +983,7 @@@@ void BrowserMainLoop::ShutdownThreadsAndCleanUp() {
@


1.5
log
@update to 46.0rc1
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.30 2015/10/14 16:42:07 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Tue Oct 13 21:04:32 2015
+++ content/browser/browser_main_loop.cc	Wed Oct 14 07:41:13 2015
@@@@ -167,7 +167,7 @@@@
d13 1
a13 1
@@@@ -419,7 +419,7 @@@@ void BrowserMainLoop::EarlyInitialization() {
d22 1
a22 1
@@@@ -957,7 +957,7 @@@@ void BrowserMainLoop::ShutdownThreadsAndCleanUp() {
@


1.4
log
@update to iridium-44.0 and also incorporate a patch from dcoppa@@
for the startup script that still had references to chromium directories.
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.28 2015/07/23 13:44:04 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Wed Jul 15 22:30:02 2015
+++ content/browser/browser_main_loop.cc	Wed Jul 22 08:37:29 2015
@@@@ -157,7 +157,7 @@@@
d13 1
a13 1
@@@@ -433,7 +433,7 @@@@ void BrowserMainLoop::EarlyInitialization() {
d22 1
a22 1
@@@@ -951,7 +951,7 @@@@ void BrowserMainLoop::ShutdownThreadsAndCleanUp() {
@


1.3
log
@update to 43.1
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.27 2015/05/24 15:51:53 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Thu May 14 00:35:46 2015
+++ content/browser/browser_main_loop.cc	Wed May 20 08:34:56 2015
@@@@ -145,7 +145,7 @@@@
d13 1
a13 2
@@@@ -390,7 +390,7 @@@@ void BrowserMainLoop::Init() {
 void BrowserMainLoop::EarlyInitialization() {
d15 1
d22 1
a22 1
@@@@ -875,7 +875,7 @@@@ void BrowserMainLoop::ShutdownThreadsAndCleanUp() {
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.26 2015/04/27 16:38:25 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Wed Apr 15 00:31:22 2015
+++ content/browser/browser_main_loop.cc	Wed Apr 15 08:32:50 2015
@@@@ -143,7 +143,7 @@@@
d13 1
a13 1
@@@@ -388,7 +388,7 @@@@ void BrowserMainLoop::Init() {
d22 1
a22 1
@@@@ -872,7 +872,7 @@@@ void BrowserMainLoop::ShutdownThreadsAndCleanUp() {
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_browser_main_loop_cc,v 1.25 2015/03/18 19:26:29 robert Exp $
--- content/browser/browser_main_loop.cc.orig.port	Tue Mar 10 23:41:41 2015
+++ content/browser/browser_main_loop.cc	Wed Mar 11 07:22:50 2015
@@@@ -142,7 +142,7 @@@@
d13 1
a13 1
@@@@ -387,7 +387,7 @@@@ void BrowserMainLoop::Init() {
d22 1
a22 1
@@@@ -851,7 +851,7 @@@@ void BrowserMainLoop::ShutdownThreadsAndCleanUp() {
@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
