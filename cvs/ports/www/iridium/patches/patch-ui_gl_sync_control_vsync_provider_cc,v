head	1.7;
access;
symbols
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2017.04.28.22.22.36;	author robert;	state Exp;
branches;
next	1.6;
commitid	hEiDsbcK5ON7rnmo;

1.6
date	2017.04.19.05.16.47;	author robert;	state Exp;
branches;
next	1.5;
commitid	jpW2BiKwA9H7U7d6;

1.5
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.4;
commitid	lED1Oks5HVh03mCa;

1.4
date	2016.03.23.20.13.07;	author robert;	state Exp;
branches;
next	1.3;
commitid	2hNT21XsdisESysQ;

1.3
date	2015.10.24.18.22.22;	author robert;	state Exp;
branches;
next	1.2;
commitid	HwRgK4asvw18PlFu;

1.2
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.38;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.38;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.7
log
@update to 58.0
@
text
@$OpenBSD: patch-ui_gl_sync_control_vsync_provider_cc,v 1.7 2017/04/28 14:21:00 robert Exp $
--- ui/gl/sync_control_vsync_provider.cc.orig.port	Fri Apr 28 07:37:08 2017
+++ ui/gl/sync_control_vsync_provider.cc	Fri Apr 28 07:37:21 2017
@@@@ -11,7 +11,7 @@@@
 #include "base/trace_event/trace_event.h"
 #include "build/build_config.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 // These constants define a reasonable range for a calculated refresh interval.
 // Calculating refreshes out of this range will be considered a fatal error.
 const int64_t kMinVsyncIntervalUs = base::Time::kMicrosecondsPerSecond / 400;
@@@@ -26,7 +26,7 @@@@ const double kRelativeIntervalDifferenceThreshold = 0.
 namespace gl {
 
 SyncControlVSyncProvider::SyncControlVSyncProvider() : gfx::VSyncProvider() {
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   // On platforms where we can't get an accurate reading on the refresh
   // rate we fall back to the assumption that we're displaying 60 frames
   // per second.
@@@@ -39,7 +39,7 @@@@ SyncControlVSyncProvider::~SyncControlVSyncProvider() 
 void SyncControlVSyncProvider::GetVSyncParameters(
     const UpdateVSyncCallback& callback) {
   TRACE_EVENT0("gpu", "SyncControlVSyncProvider::GetVSyncParameters");
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   base::TimeTicks timebase;
 
   // The actual clock used for the system time returned by glXGetSyncValuesOML
@


1.6
log
@update to 57.0
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_gl_sync_control_vsync_provider_cc,v 1.6 2017/01/26 17:08:26 robert Exp $
--- ui/gl/sync_control_vsync_provider.cc.orig.port	Tue Jan  3 20:51:20 2017
+++ ui/gl/sync_control_vsync_provider.cc	Tue Jan  3 20:52:13 2017
d8 2
a9 2
-#if defined(OS_LINUX) || defined(OS_WIN)
+#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_BSD)
d17 2
a18 2
-#if defined(OS_LINUX) || defined(OS_WIN)
+#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_BSD)
d26 2
a27 2
-#if defined(OS_LINUX) || defined(OS_WIN)
+#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_BSD)
d30 1
a30 10
   int64_t system_time;
@@@@ -132,7 +132,7 @@@@ void SyncControlVSyncProvider::GetVSyncParameters(
 #endif  // defined(OS_LINUX) || defined(OS_WIN)
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 bool SyncControlVSyncProvider::AdjustSyncValues(int64_t* system_time,
                                                 int64_t* media_stream_counter) {
   // Both Intel and Mali drivers will return TRUE for GetSyncValues
@


1.5
log
@update to 54.0
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_gl_sync_control_vsync_provider_cc,v 1.5 2016/09/01 16:28:11 robert Exp $
--- ui/gl/sync_control_vsync_provider.cc.orig.port	Thu Sep  1 11:38:47 2016
+++ ui/gl/sync_control_vsync_provider.cc	Thu Sep  1 11:39:07 2016
d8 2
a9 2
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
d17 2
a18 2
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
d26 9
d37 3
a39 3
   base::TimeTicks timebase;
 
   // The actual clock used for the system time returned by glXGetSyncValuesOML
@


1.4
log
@update to 49.0
@
text
@d1 3
a3 3
$OpenBSD: patch-ui_gl_sync_control_vsync_provider_cc,v 1.3 2016/03/06 10:51:14 robert Exp $
--- ui/gl/sync_control_vsync_provider.cc.orig.port	Wed Feb 24 00:02:06 2016
+++ ui/gl/sync_control_vsync_provider.cc	Thu Mar  3 09:43:26 2016
d13 10
a22 1
@@@@ -38,7 +38,7 @@@@ SyncControlVSyncProvider::~SyncControlVSyncProvider() 
@


1.3
log
@update to 46.0rc1
@
text
@d1 4
a4 5
$OpenBSD: patch-ui_gl_sync_control_vsync_provider_cc,v 1.2 2015/10/14 16:42:07 robert Exp $
--- ui/gl/sync_control_vsync_provider.cc.orig.port	Wed Oct 14 07:58:41 2015
+++ ui/gl/sync_control_vsync_provider.cc	Wed Oct 14 07:58:56 2015
@@@@ -10,7 +10,7 @@@@
 #include "base/time/time.h"
d6 1
d12 2
a13 2
 const int64 kMinVsyncIntervalUs = base::Time::kMicrosecondsPerSecond / 400;
@@@@ -37,7 +37,7 @@@@ SyncControlVSyncProvider::~SyncControlVSyncProvider() 
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 4
a4 5
$OpenBSD: patch-ui_gl_sync_control_vsync_provider_cc,v 1.1 2015/01/22 11:16:41 robert Exp $
--- ui/gl/sync_control_vsync_provider.cc.orig.port	Sat Dec 27 12:54:25 2014
+++ ui/gl/sync_control_vsync_provider.cc	Sat Dec 27 12:55:17 2014
@@@@ -9,7 +9,7 @@@@
 #include "base/logging.h"
d6 1
d13 1
a13 2
@@@@ -35,7 +35,7 @@@@ SyncControlVSyncProvider::~SyncControlVSyncProvider() 
 
d16 1
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
