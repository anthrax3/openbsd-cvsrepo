head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.2
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.1.0.2
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.07.23.19.03.33;	author robert;	state Exp;
branches;
next	1.3;
commitid	ibhCzbgSSxhgQLsG;

1.3
date	2017.04.28.22.22.36;	author robert;	state Exp;
branches;
next	1.2;
commitid	hEiDsbcK5ON7rnmo;

1.2
date	2017.04.19.05.16.46;	author robert;	state Exp;
branches;
next	1.1;
commitid	jpW2BiKwA9H7U7d6;

1.1
date	2016.10.27.18.30.40;	author robert;	state Exp;
branches;
next	;
commitid	lED1Oks5HVh03mCa;


desc
@@


1.4
log
@make iridium build with system clang as well by applying the same
patches as for chromium plus some extra due to the version differences
@
text
@$OpenBSD: patch-build_toolchain_gcc_toolchain_gni,v 1.3 2017/04/28 22:22:36 robert Exp $
Index: build/toolchain/gcc_toolchain.gni
--- build/toolchain/gcc_toolchain.gni.orig
+++ build/toolchain/gcc_toolchain.gni
@@@@ -12,6 +12,11 @@@@ import("//build/toolchain/clang_static_analyzer.gni")
 import("//build/toolchain/goma.gni")
 import("//build/toolchain/toolchain.gni")
 
+declare_args() {
+  extra_cppflags = ""
+  extra_ldflags = ""
+}
+
 # This template defines a toolchain for something that works like gcc
 # (including clang).
 #
@@@@ -476,16 +481,9 @@@@ template("gcc_toolchain") {
 # actually just be doing a native compile. The invoker can optionally override
 # use_gold too.
 template("clang_toolchain") {
-  if (defined(invoker.toolprefix)) {
-    toolprefix = invoker.toolprefix
-  } else {
-    toolprefix = ""
-  }
-
   gcc_toolchain(target_name) {
-    prefix = rebase_path("$clang_base_path/bin", root_build_dir)
-    cc = "$prefix/clang"
-    cxx = "$prefix/clang++"
+    cc = "cc"
+    cxx = "c++"
     ld = cxx
 
     if (use_clang_static_analyzer) {
@@@@ -507,9 +505,9 @@@@ template("clang_toolchain") {
                         root_build_dir)
     }
 
-    readelf = "${toolprefix}readelf"
-    ar = "${toolprefix}ar"
-    nm = "${toolprefix}nm"
+    readelf = "readelf"
+    ar = "ar"
+    nm = "nm"
 
     forward_variables_from(invoker, [ "strip" ])
 
@


1.3
log
@update to 58.0
@
text
@d1 4
a4 3
$OpenBSD: patch-build_toolchain_gcc_toolchain_gni,v 1.5 2017/04/28 14:21:00 robert Exp $
--- build/toolchain/gcc_toolchain.gni.orig.port	Wed Apr 19 21:06:28 2017
+++ build/toolchain/gcc_toolchain.gni	Thu Apr 27 19:55:58 2017
d17 10
a26 12
@@@@ -280,7 +285,7 @@@@ template("gcc_toolchain") {
       # POSIX-like toolchains such as NaCl on Windows).
       ar_wrapper =
           rebase_path("//build/toolchain/gcc_ar_wrapper.py", root_build_dir)
-      command = "$python_path \"$ar_wrapper\"$whitelist_flag --output={{output}} --ar=\"$ar\" {{arflags}} rcsD @@\"$rspfile\""
+      command = "$python_path \"$ar_wrapper\"$whitelist_flag --output={{output}} --ar=\"$ar\" {{arflags}} rcs @@\"$rspfile\""
       description = "AR {{output}}"
       rspfile_content = "{{inputs}}"
       outputs = [
@@@@ -483,7 +488,7 @@@@ template("clang_toolchain") {
   }
 
d29 4
a32 3
+    prefix = "/usr/local/bin"
     cc = "$prefix/clang"
     cxx = "$prefix/clang++"
d34 15
@


1.2
log
@update to 57.0
@
text
@d1 4
a4 4
$OpenBSD: patch-build_toolchain_gcc_toolchain_gni,v 1.4 2016/12/10 15:35:25 robert Exp $
--- build/toolchain/gcc_toolchain.gni.orig.port	Fri Dec  2 17:57:33 2016
+++ build/toolchain/gcc_toolchain.gni	Fri Dec  2 17:57:59 2016
@@@@ -11,6 +11,11 @@@@ import("//build/toolchain/cc_wrapper.gni")
d16 1
a16 1
@@@@ -279,7 +284,7 @@@@ template("gcc_toolchain") {
d25 1
a25 1
@@@@ -482,7 +487,7 @@@@ template("clang_toolchain") {
@


1.1
log
@update to 54.0
@
text
@d1 4
a4 4
$OpenBSD: patch-build_toolchain_gcc_toolchain_gni,v 1.3 2016/10/26 06:22:07 robert Exp $
--- build/toolchain/gcc_toolchain.gni.orig.port	Fri Oct 21 00:01:59 2016
+++ build/toolchain/gcc_toolchain.gni	Tue Oct 25 08:33:20 2016
@@@@ -10,6 +10,11 @@@@ import("//build/toolchain/cc_wrapper.gni")
d16 1
a16 1
@@@@ -258,7 +263,7 @@@@ template("gcc_toolchain") {
d20 2
a21 2
-      command = "$python_path \"$ar_wrapper\" --output={{output}} --ar=\"$ar\" {{arflags}} rcsD @@\"$rspfile\""
+      command = "$python_path \"$ar_wrapper\" --output={{output}} --ar=\"$ar\" {{arflags}} rcs @@\"$rspfile\""
d25 1
a25 1
@@@@ -453,7 +458,7 @@@@ template("clang_toolchain") {
@

