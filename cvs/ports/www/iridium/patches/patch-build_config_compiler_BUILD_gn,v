head	1.3;
access;
symbols
	OPENBSD_6_1:1.1.0.2
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.04.28.22.22.36;	author robert;	state Exp;
branches;
next	1.2;
commitid	hEiDsbcK5ON7rnmo;

1.2
date	2017.04.19.05.16.46;	author robert;	state Exp;
branches;
next	1.1;
commitid	jpW2BiKwA9H7U7d6;

1.1
date	2016.10.27.18.30.40;	author robert;	state Exp;
branches;
next	;
commitid	lED1Oks5HVh03mCa;


desc
@@


1.3
log
@update to 58.0
@
text
@$OpenBSD: patch-build_config_compiler_BUILD_gn,v 1.7 2017/04/28 14:21:00 robert Exp $
--- build/config/compiler/BUILD.gn.orig.port	Thu Apr 27 19:58:01 2017
+++ build/config/compiler/BUILD.gn	Thu Apr 27 22:56:36 2017
@@@@ -36,7 +36,7 @@@@ declare_args() {
   # only two architectures that are currently checked in). Turn this off when
   # you are using a custom toolchain and need to control -B in cflags.
   linux_use_bundled_binutils =
-      linux_use_bundled_binutils_override && is_linux &&
+      linux_use_bundled_binutils_override && (is_linux && !is_openbsd) &&
       (current_cpu == "x64" || current_cpu == "x86")
   binutils_path = rebase_path("//third_party/binutils/Linux_x64/Release/bin",
                               root_build_dir)
@@@@ -214,7 +214,7 @@@@ config("compiler") {
 
     # Linker warnings.
     if (fatal_linker_warnings && !(is_chromeos && current_cpu == "arm") &&
-        !(is_android && use_order_profiling) && !is_mac && !is_ios) {
+        !(is_android && use_order_profiling) && !is_mac && !is_ios && !is_openbsd) {
       # TODO(jochen): Enable this on chromeos on arm. http://crbug.com/356580
       # TODO(lizeb,pasko): Fix link errors when linking with order_profiling=1
       # crbug.com/485542
@@@@ -314,7 +314,7 @@@@ config("compiler") {
       "-Wl,-z,relro",
     ]
     if (!using_sanitizer) {
-      if (!use_cfi_diag) {
+      if (!use_cfi_diag && !is_openbsd) {
         ldflags += [ "-Wl,-z,defs" ]
       }
 
@@@@ -1104,7 +1104,7 @@@@ config("default_warnings") {
         "-Wno-block-capture-autoreleasing",
 
         # TODO(hans): https://crbug.com/681136
-        "-Wno-unused-lambda-capture",
+        # "-Wno-unused-lambda-capture",
 
         # TODO(thakis ): https://crbug.com/683349
         "-Wno-user-defined-warnings",
@@@@ -1647,7 +1647,7 @@@@ config("symbols") {
         "-g2",
       ]
     } else {
-      cflags = [ "-g2" ]
+      cflags = [ "-g0" ]
     }
     if (use_debug_fission) {
       cflags += [ "-gsplit-dwarf" ]
@


1.2
log
@update to 57.0
@
text
@d1 3
a3 3
$OpenBSD: patch-build_config_compiler_BUILD_gn,v 1.6 2017/03/14 12:18:53 robert Exp $
--- build/config/compiler/BUILD.gn.orig.port	Thu Mar  9 21:04:27 2017
+++ build/config/compiler/BUILD.gn	Fri Mar 10 07:46:16 2017
d13 1
a13 1
@@@@ -215,7 +215,7 @@@@ config("compiler") {
d22 1
a22 1
@@@@ -295,7 +295,7 @@@@ config("compiler") {
d31 11
a41 10
@@@@ -1058,14 +1058,14 @@@@ config("default_warnings") {
     # Chrome's hermetic Clang compiler, NaCl's Clang compiler and Xcode's Clang
     # compiler will almost always have different versions. Certain flags may not
     # be recognized by one version or the other.
-    if (!is_nacl) {
+    if (!is_nacl && !is_openbsd) {
       # Flags NaCl (Clang 3.7) does not recognize.
       cflags += [
         # TODO(thakis): Enable this, crbug.com/507717
         "-Wno-shift-negative-value",
d43 3
d47 2
a48 5
-    if (!is_nacl && !use_xcode_clang) {
+    if (!is_nacl && !use_xcode_clang && !is_openbsd) {
       # Flags NaCl (Clang 3.7) and Xcode 7.3 (Clang clang-703.0.31) do not
       # recognize.
       cflags += [
@


1.1
log
@update to 54.0
@
text
@d1 4
a4 4
$OpenBSD: patch-build_config_compiler_BUILD_gn,v 1.3 2016/10/26 06:22:07 robert Exp $
--- build/config/compiler/BUILD.gn.orig.port	Wed Oct 19 13:29:47 2016
+++ build/config/compiler/BUILD.gn	Wed Oct 19 13:30:51 2016
@@@@ -38,7 +38,7 @@@@ declare_args() {
d8 3
a10 2
-      is_linux && (current_cpu == "x64" || current_cpu == "x86")
+      (is_linux && !is_openbsd) && (current_cpu == "x64" || current_cpu == "x86")
d13 1
a13 2
 
@@@@ -201,7 +201,7 @@@@ config("compiler") {
d22 1
a22 2
@@@@ -283,7 +283,7 @@@@ config("compiler") {
       "-Wl,-z,now",
d25 7
a31 6
-    if (!using_sanitizer && !use_cfi_diag) {
+    if (!using_sanitizer && !use_cfi_diag && !is_openbsd) {
       ldflags += [ "-Wl,-z,defs" ]
     }
   }
@@@@ -1014,14 +1014,14 @@@@ config("default_warnings") {
@

