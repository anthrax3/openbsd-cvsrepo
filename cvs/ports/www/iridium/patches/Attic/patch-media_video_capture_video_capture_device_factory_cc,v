head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.10.24.18.22.21;	author robert;	state dead;
branches;
next	1.3;
commitid	HwRgK4asvw18PlFu;

1.3
date	2015.05.26.17.37.40;	author robert;	state Exp;
branches;
next	1.2;
commitid	imvK5OAjfFzbGwip;

1.2
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.4
log
@update to 46.0rc1
@
text
@$OpenBSD: patch-media_video_capture_video_capture_device_factory_cc,v 1.3 2015/05/26 17:37:40 robert Exp $
--- media/video/capture/video_capture_device_factory.cc.orig.port	Thu May 14 00:23:08 2015
+++ media/video/capture/video_capture_device_factory.cc	Sun May 24 17:45:34 2015
@@@@ -14,6 +14,10 @@@@ namespace media {
 // static
 scoped_ptr<VideoCaptureDeviceFactory> VideoCaptureDeviceFactory::CreateFactory(
     scoped_refptr<base::SingleThreadTaskRunner> ui_task_runner) {
+#if defined(OS_BSD)
+  return scoped_ptr<VideoCaptureDeviceFactory>(new
+      media::FakeVideoCaptureDeviceFactory());
+#else
   const base::CommandLine* command_line =
       base::CommandLine::ForCurrentProcess();
   // Use a Fake or File Video Device Factory if the command line flags are
@@@@ -32,6 +36,7 @@@@ scoped_ptr<VideoCaptureDeviceFactory> VideoCaptureDevi
     return scoped_ptr<VideoCaptureDeviceFactory>(
         CreateVideoCaptureDeviceFactory(ui_task_runner));
   }
+#endif
 }
 
 VideoCaptureDeviceFactory::VideoCaptureDeviceFactory() {
@


1.3
log
@update to 43.1
@
text
@d1 1
a1 1
$OpenBSD: patch-media_video_capture_video_capture_device_factory_cc,v 1.3 2015/05/24 15:51:53 robert Exp $
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 19
a19 5
$OpenBSD: patch-media_video_capture_video_capture_device_factory_cc,v 1.2 2015/03/18 19:26:29 robert Exp $
--- media/video/capture/video_capture_device_factory.cc.orig.port	Wed Mar 11 07:46:10 2015
+++ media/video/capture/video_capture_device_factory.cc	Wed Mar 11 07:46:27 2015
@@@@ -50,7 +50,7 @@@@ void VideoCaptureDeviceFactory::EnumerateDeviceNames(c
   callback.Run(device_names.Pass());
d22 1
a22 5
-#if !defined(OS_MACOSX) && !defined(OS_LINUX) && !defined(OS_ANDROID) && !defined(OS_WIN)
+#if !defined(OS_MACOSX) && !defined(OS_LINUX) && !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_BSD)
 // static
 VideoCaptureDeviceFactory*
 VideoCaptureDeviceFactory::CreateVideoCaptureDeviceFactory(
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
