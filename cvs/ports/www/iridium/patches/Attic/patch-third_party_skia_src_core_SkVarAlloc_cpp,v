head	1.5;
access;
symbols
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2016.03.23.20.13.07;	author robert;	state dead;
branches;
next	1.4;
commitid	2hNT21XsdisESysQ;

1.4
date	2015.08.12.10.56.13;	author robert;	state Exp;
branches;
next	1.3;
commitid	WokHnx1ONPqT4wiW;

1.3
date	2015.05.26.17.37.40;	author robert;	state Exp;
branches;
next	1.2;
commitid	imvK5OAjfFzbGwip;

1.2
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.38;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.38;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.5
log
@update to 49.0
@
text
@$OpenBSD: patch-third_party_skia_src_core_SkVarAlloc_cpp,v 1.4 2015/08/12 10:56:13 robert Exp $
--- third_party/skia/src/core/SkVarAlloc.cpp.orig.port	Wed Jul 22 08:53:04 2015
+++ third_party/skia/src/core/SkVarAlloc.cpp	Wed Jul 22 08:53:28 2015
@@@@ -11,7 +11,9 @@@@
 #if defined(SK_BUILD_FOR_MAC)
     #include <malloc/malloc.h>
 #elif defined(SK_BUILD_FOR_UNIX) || defined(SK_BUILD_FOR_WIN32)
+#if !defined(__OpenBSD__)
     #include <malloc.h>
+#endif
 #endif
 
 struct SkVarAlloc::Block {
@


1.4
log
@update to iridium-44.0 and also incorporate a patch from dcoppa@@
for the startup script that still had references to chromium directories.
@
text
@d1 1
a1 1
$OpenBSD: patch-third_party_skia_src_core_SkVarAlloc_cpp,v 1.3 2015/07/23 13:44:04 robert Exp $
@


1.3
log
@update to 43.1
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_skia_src_core_SkVarAlloc_cpp,v 1.2 2015/05/24 15:51:53 robert Exp $
--- third_party/skia/src/core/SkVarAlloc.cpp.orig.port	Wed May 20 10:18:03 2015
+++ third_party/skia/src/core/SkVarAlloc.cpp	Wed May 20 10:47:20 2015
@@@@ -4,8 +4,10 @@@@
d10 1
a11 1
+#endif
a13 10
     Block* prev;
@@@@ -56,7 +58,7 @@@@ void SkVarAlloc::makeSpace(size_t bytes, unsigned flag
 static size_t heap_size(void* p) {
 #if defined(SK_BUILD_FOR_MAC)
     return malloc_size(p);
-#elif defined(SK_BUILD_FOR_UNIX) && !defined(__UCLIBC__)
+#elif defined(SK_BUILD_FOR_UNIX) && !defined(__UCLIBC__) && !defined(__OpenBSD__)
     return malloc_usable_size(p);
 #elif defined(SK_BUILD_FOR_WIN32)
     return _msize(p);
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 3
a3 3
$OpenBSD: patch-third_party_skia_src_core_SkVarAlloc_cpp,v 1.1 2015/03/18 19:26:29 robert Exp $
--- third_party/skia/src/core/SkVarAlloc.cpp.orig.port	Wed Mar 11 08:55:27 2015
+++ third_party/skia/src/core/SkVarAlloc.cpp	Wed Mar 11 09:23:37 2015
d19 2
a20 2
-#elif defined(SK_BUILD_FOR_UNIX)
+#elif defined(SK_BUILD_FOR_UNIX) && !defined(__OpenBSD__)
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
