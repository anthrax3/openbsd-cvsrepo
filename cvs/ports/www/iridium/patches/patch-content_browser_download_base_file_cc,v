head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.5;
commitid	lED1Oks5HVh03mCa;

1.5
date	2016.05.28.14.49.39;	author robert;	state Exp;
branches;
next	1.4;
commitid	e1vpcgKLVeZdUbdR;

1.4
date	2016.03.23.20.13.07;	author robert;	state Exp;
branches;
next	1.3;
commitid	2hNT21XsdisESysQ;

1.3
date	2015.10.24.18.22.21;	author robert;	state Exp;
branches;
next	1.2;
commitid	HwRgK4asvw18PlFu;

1.2
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.6
log
@update to 54.0
@
text
@$OpenBSD: patch-content_browser_download_base_file_cc,v 1.9 2016/10/26 06:22:08 robert Exp $
--- content/browser/download/base_file.cc.orig.port	Wed Oct 12 21:02:59 2016
+++ content/browser/download/base_file.cc	Wed Oct 19 12:56:03 2016
@@@@ -193,7 +193,7 @@@@ std::unique_ptr<crypto::SecureHash> BaseFile::Finish()
 }
 
 // OS_WIN, OS_MACOSX and OS_LINUX have specialized implementations.
-#if !defined(OS_WIN) && !defined(OS_MACOSX) && !defined(OS_LINUX)
+#if !defined(OS_WIN) && !defined(OS_MACOSX) && !defined(OS_LINUX) && !defined(OS_BSD)
 DownloadInterruptReason BaseFile::AnnotateWithSourceInformation(
     const std::string& client_guid,
     const GURL& source_url,
@


1.5
log
@update to 51.1
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_download_base_file_cc,v 1.7 2016/05/27 06:28:21 robert Exp $
--- content/browser/download/base_file.cc.orig.port	Thu May 26 08:29:17 2016
+++ content/browser/download/base_file.cc	Thu May 26 08:29:24 2016
@@@@ -186,7 +186,7 @@@@ scoped_ptr<crypto::SecureHash> BaseFile::Finish() {
@


1.4
log
@update to 49.0
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_download_base_file_cc,v 1.6 2016/03/06 10:51:14 robert Exp $
--- content/browser/download/base_file.cc.orig.port	Wed Feb 24 00:02:00 2016
+++ content/browser/download/base_file.cc	Thu Mar  3 09:43:26 2016
@@@@ -216,7 +216,7 @@@@ void BaseFile::SetClientGuid(const std::string& guid) 
d10 3
a12 3
 DownloadInterruptReason BaseFile::AnnotateWithSourceInformation() {
   return DOWNLOAD_INTERRUPT_REASON_NONE;
 }
@


1.3
log
@update to 46.0rc1
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_download_base_file_cc,v 1.5 2015/09/05 16:06:50 robert Exp $
--- content/browser/download/base_file.cc.orig.port	Sat Aug 22 21:01:54 2015
+++ content/browser/download/base_file.cc	Wed Sep  2 07:31:55 2015
@@@@ -209,7 +209,7 @@@@ void BaseFile::SetClientGuid(const std::string& guid) 
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 4
a4 4
$OpenBSD: patch-content_browser_download_base_file_cc,v 1.4 2014/11/19 21:27:32 robert Exp $
--- content/browser/download/base_file.cc.orig.port	Wed Nov 19 05:53:03 2014
+++ content/browser/download/base_file.cc	Wed Nov 19 08:38:25 2014
@@@@ -208,7 +208,7 @@@@ void BaseFile::SetClientGuid(const std::string& guid) 
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
