head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.2
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.7;
commitid	lED1Oks5HVh03mCa;

1.7
date	2016.05.28.14.49.39;	author robert;	state Exp;
branches;
next	1.6;
commitid	e1vpcgKLVeZdUbdR;

1.6
date	2016.04.27.12.46.16;	author robert;	state Exp;
branches;
next	1.5;
commitid	yOrwVI71D7bLHmrO;

1.5
date	2016.03.23.20.13.07;	author robert;	state Exp;
branches;
next	1.4;
commitid	2hNT21XsdisESysQ;

1.4
date	2016.02.15.18.07.53;	author robert;	state Exp;
branches;
next	1.3;
commitid	R0eKGRSW56iYyJ8K;

1.3
date	2015.05.26.17.37.40;	author robert;	state Exp;
branches;
next	1.2;
commitid	imvK5OAjfFzbGwip;

1.2
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.38;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.38;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.8
log
@update to 54.0
@
text
@$OpenBSD: patch-third_party_webrtc_base_physicalsocketserver_cc,v 1.9 2016/09/01 16:28:11 robert Exp $
--- third_party/webrtc/base/physicalsocketserver.cc.orig.port	Thu Sep  1 00:05:08 2016
+++ third_party/webrtc/base/physicalsocketserver.cc	Thu Sep  1 14:11:35 2016
@@@@ -59,7 +59,7 @@@@ typedef void* SockOptArg;
 
 #endif  // WEBRTC_POSIX
 
-#if defined(WEBRTC_POSIX) && !defined(WEBRTC_MAC) && !defined(__native_client__)
+#if defined(WEBRTC_POSIX) && !defined(WEBRTC_MAC) && !defined(__native_client__) && !defined(WEBRTC_BSD)
 
 int64_t GetSocketRecvTimestamp(int socket) {
   struct timeval tv_ioctl;
@@@@ -276,7 +276,7 @@@@ int PhysicalSocket::GetOption(Option opt, int* value) 
   socklen_t optlen = sizeof(*value);
   int ret = ::getsockopt(s_, slevel, sopt, (SockOptArg)value, &optlen);
   if (ret != -1 && opt == OPT_DONTFRAGMENT) {
-#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID)
+#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID) && !defined(WEBRTC_BSD)
     *value = (*value != IP_PMTUDISC_DONT) ? 1 : 0;
 #endif
   }
@@@@ -289,7 +289,7 @@@@ int PhysicalSocket::SetOption(Option opt, int value) {
   if (TranslateOption(opt, &slevel, &sopt) == -1)
     return -1;
   if (opt == OPT_DONTFRAGMENT) {
-#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID)
+#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID) && !defined(WEBRTC_BSD)
     value = (value) ? IP_PMTUDISC_DO : IP_PMTUDISC_DONT;
 #endif
   }
@@@@ -571,7 +571,7 @@@@ int PhysicalSocket::TranslateOption(Option opt, int* s
       *slevel = IPPROTO_IP;
       *sopt = IP_DONTFRAGMENT;
       break;
-#elif defined(WEBRTC_MAC) || defined(BSD) || defined(__native_client__)
+#elif defined(WEBRTC_MAC) || defined(WEBRTC_BSD) || defined(__native_client__)
       LOG(LS_WARNING) << "Socket::OPT_DONTFRAGMENT not supported.";
       return -1;
 #elif defined(WEBRTC_POSIX)
@


1.7
log
@update to 51.1
@
text
@d1 13
a13 4
$OpenBSD: patch-third_party_webrtc_base_physicalsocketserver_cc,v 1.7 2016/05/27 06:28:21 robert Exp $
--- third_party/webrtc/base/physicalsocketserver.cc.orig.port	Wed May 25 21:02:41 2016
+++ third_party/webrtc/base/physicalsocketserver.cc	Thu May 26 08:09:49 2016
@@@@ -245,7 +245,7 @@@@ int PhysicalSocket::GetOption(Option opt, int* value) 
d22 1
a22 1
@@@@ -258,7 +258,7 @@@@ int PhysicalSocket::SetOption(Option opt, int value) {
d31 1
a31 1
@@@@ -533,7 +533,7 @@@@ int PhysicalSocket::TranslateOption(Option opt, int* s
@


1.6
log
@update to iridium-50.0 and sync recent changes with chromium
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_webrtc_base_physicalsocketserver_cc,v 1.6 2016/04/16 19:08:46 robert Exp $
--- third_party/webrtc/base/physicalsocketserver.cc.orig.port	Wed Apr 13 23:01:41 2016
+++ third_party/webrtc/base/physicalsocketserver.cc	Sat Apr 16 16:09:56 2016
@@@@ -250,7 +250,7 @@@@ int PhysicalSocket::GetOption(Option opt, int* value) 
d13 1
a13 1
@@@@ -263,7 +263,7 @@@@ int PhysicalSocket::SetOption(Option opt, int value) {
d22 1
a22 1
@@@@ -538,7 +538,7 @@@@ int PhysicalSocket::TranslateOption(Option opt, int* s
@


1.5
log
@update to 49.0
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_webrtc_base_physicalsocketserver_cc,v 1.5 2016/03/06 10:51:14 robert Exp $
--- third_party/webrtc/base/physicalsocketserver.cc.orig.port	Thu Mar  3 10:13:46 2016
+++ third_party/webrtc/base/physicalsocketserver.cc	Thu Mar  3 10:14:38 2016
@@@@ -241,7 +241,7 @@@@ int PhysicalSocket::GetOption(Option opt, int* value) 
d13 1
a13 1
@@@@ -254,7 +254,7 @@@@ int PhysicalSocket::SetOption(Option opt, int value) {
d22 1
a22 19
@@@@ -263,7 +263,7 @@@@ int PhysicalSocket::SetOption(Option opt, int value) {
 
 int PhysicalSocket::Send(const void* pv, size_t cb) {
   int sent = ::send(s_, reinterpret_cast<const char *>(pv), (int)cb,
-#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID)
+#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID) && !defined(WEBRTC_BSD)
       // Suppress SIGPIPE. Without this, attempting to send on a socket whose
       // other end is closed will result in a SIGPIPE signal being raised to
       // our process, which by default will terminate the process, which we
@@@@ -291,7 +291,7 @@@@ int PhysicalSocket::SendTo(const void* buffer,
   size_t len = addr.ToSockAddrStorage(&saddr);
   int sent = ::sendto(
       s_, static_cast<const char *>(buffer), static_cast<int>(length),
-#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID)
+#if defined(WEBRTC_LINUX) && !defined(WEBRTC_ANDROID) && !defined(WEBRTC_BSD)
       // Suppress SIGPIPE. See above for explanation.
       MSG_NOSIGNAL,
 #else
@@@@ -514,10 +514,10 @@@@ int PhysicalSocket::TranslateOption(Option opt, int* s
d30 1
a30 5
-#elif defined(WEBRTC_POSIX)
+#elif defined(WEBRTC_POSIX) && !defined(WEBRTC_BSD)
       *slevel = IPPROTO_IP;
       *sopt = IP_MTU_DISCOVER;
       break;
@


1.4
log
@update to 48.1 (based on the latest stable chromium which contains security
fixes as well)

ok naddy@@ sthen@@
@
text
@d1 7
a7 7
$OpenBSD: patch-third_party_webrtc_base_physicalsocketserver_cc,v 1.4 2016/01/23 18:49:31 robert Exp $
--- third_party/webrtc/base/physicalsocketserver.cc.orig.port	Wed Jan 20 21:02:39 2016
+++ third_party/webrtc/base/physicalsocketserver.cc	Fri Jan 22 19:58:59 2016
@@@@ -243,7 +243,7 @@@@ class PhysicalSocket : public AsyncSocket, public sigs
     socklen_t optlen = sizeof(*value);
     int ret = ::getsockopt(s_, slevel, sopt, (SockOptArg)value, &optlen);
     if (ret != -1 && opt == OPT_DONTFRAGMENT) {
d10 1
a10 1
       *value = (*value != IP_PMTUDISC_DONT) ? 1 : 0;
d12 5
a16 5
     }
@@@@ -256,7 +256,7 @@@@ class PhysicalSocket : public AsyncSocket, public sigs
     if (TranslateOption(opt, &slevel, &sopt) == -1)
       return -1;
     if (opt == OPT_DONTFRAGMENT) {
d19 1
a19 1
       value = (value) ? IP_PMTUDISC_DO : IP_PMTUDISC_DONT;
d21 23
a43 5
     }
@@@@ -508,10 +508,10 @@@@ class PhysicalSocket : public AsyncSocket, public sigs
         *slevel = IPPROTO_IP;
         *sopt = IP_DONTFRAGMENT;
         break;
d46 2
a47 2
         LOG(LS_WARNING) << "Socket::OPT_DONTFRAGMENT not supported.";
         return -1;
d50 3
a52 3
         *slevel = IPPROTO_IP;
         *sopt = IP_MTU_DISCOVER;
         break;
@


1.3
log
@update to 43.1
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_webrtc_base_physicalsocketserver_cc,v 1.3 2015/05/24 15:51:53 robert Exp $
--- third_party/webrtc/base/physicalsocketserver.cc.orig.port	Thu May 14 00:36:29 2015
+++ third_party/webrtc/base/physicalsocketserver.cc	Wed May 20 08:34:56 2015
@@@@ -242,7 +242,7 @@@@ class PhysicalSocket : public AsyncSocket, public sigs
d13 1
a13 1
@@@@ -255,7 +255,7 @@@@ class PhysicalSocket : public AsyncSocket, public sigs
d22 1
a22 1
@@@@ -507,10 +507,10 @@@@ class PhysicalSocket : public AsyncSocket, public sigs
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_webrtc_base_physicalsocketserver_cc,v 1.2 2015/01/22 11:16:41 robert Exp $
--- third_party/webrtc/base/physicalsocketserver.cc.orig.port	Wed Dec  3 03:32:47 2014
+++ third_party/webrtc/base/physicalsocketserver.cc	Sat Dec  6 11:34:27 2014
@@@@ -244,7 +244,7 @@@@ class PhysicalSocket : public AsyncSocket, public sigs
d13 1
a13 1
@@@@ -257,7 +257,7 @@@@ class PhysicalSocket : public AsyncSocket, public sigs
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
