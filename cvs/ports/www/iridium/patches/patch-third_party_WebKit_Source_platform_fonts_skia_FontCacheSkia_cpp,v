head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.2
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	robert_20150503:1.1.1.1
	robert:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2017.04.28.22.22.36;	author robert;	state Exp;
branches;
next	1.7;
commitid	hEiDsbcK5ON7rnmo;

1.7
date	2017.04.19.05.16.47;	author robert;	state Exp;
branches;
next	1.6;
commitid	jpW2BiKwA9H7U7d6;

1.6
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.5;
commitid	lED1Oks5HVh03mCa;

1.5
date	2016.05.28.14.49.39;	author robert;	state Exp;
branches;
next	1.4;
commitid	e1vpcgKLVeZdUbdR;

1.4
date	2016.04.27.12.46.16;	author robert;	state Exp;
branches;
next	1.3;
commitid	yOrwVI71D7bLHmrO;

1.3
date	2016.02.15.18.07.53;	author robert;	state dead;
branches;
next	1.2;
commitid	R0eKGRSW56iYyJ8K;

1.2
date	2015.05.06.14.27.24;	author robert;	state Exp;
branches;
next	1.1;
commitid	0TVTUxEI0BYra21v;

1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches
	1.1.1.1;
next	;
commitid	O1GeKHU5BcsYea8a;

1.1.1.1
date	2015.05.03.15.35.37;	author robert;	state Exp;
branches;
next	;
commitid	O1GeKHU5BcsYea8a;


desc
@@


1.8
log
@update to 58.0
@
text
@$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.14 2017/04/28 14:21:00 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Wed Apr 19 21:06:50 2017
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Thu Apr 27 19:56:03 2017
@@@@ -68,7 +68,7 @@@@ AtomicString toAtomicString(const SkString& str) {
   return AtomicString::fromUTF8(str.c_str(), str.size());
 }
 
-#if OS(ANDROID) || OS(LINUX)
+#if OS(ANDROID) || OS(LINUX) || OS(OPENBSD)
 // Android special locale for retrieving the color emoji font
 // based on the proposed changes in UTR #51 for introducing
 // an Emoji script code:
@@@@ -240,7 +240,7 @@@@ sk_sp<SkTypeface> FontCache::createTypeface(
   }
 #endif
 
-#if OS(LINUX) || OS(WIN)
+#if OS(LINUX) || OS(WIN) || OS(OPENBSD)
   // On linux if the fontManager has been overridden then we should be calling
   // the embedder provided font Manager rather than calling
   // SkTypeface::CreateFromName which may redirect the call to the default font
@


1.7
log
@update to 57.0
@
text
@d1 3
a3 3
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.13 2017/03/14 12:18:54 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Thu Mar  9 21:04:45 2017
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Fri Mar 10 07:46:25 2017
d13 1
a13 1
@@@@ -235,7 +235,7 @@@@ sk_sp<SkTypeface> FontCache::createTypeface(
@


1.6
log
@update to 54.0
@
text
@d1 6
a6 6
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.9 2016/10/26 06:22:08 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Wed Oct 12 21:03:14 2016
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Wed Oct 19 12:56:08 2016
@@@@ -62,7 +62,7 @@@@ static PassRefPtr<SkTypeface> typefaceForFontconfigInt
 
 namespace blink {
d13 2
a14 2
@@@@ -183,7 +183,7 @@@@ PassRefPtr<SkTypeface> FontCache::createTypeface(const
     }
d19 3
a21 3
     // On linux if the fontManager has been overridden then we should be calling the embedder
     // provided font Manager rather than calling SkTypeface::CreateFromName which may redirect the
     // call to the default font Manager.
@


1.5
log
@update to 51.1
@
text
@d1 4
a4 4
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.6 2016/05/27 06:28:21 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Thu May 26 08:30:51 2016
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Thu May 26 08:31:15 2016
@@@@ -60,7 +60,7 @@@@ static PassRefPtr<SkTypeface> typefaceForFontconfigInt
d13 1
a13 10
@@@@ -171,7 +171,7 @@@@ PassRefPtr<SimpleFontData> FontCache::getLastResortFal
     return fontDataFromFontPlatformData(fontPlatformData, shouldRetain);
 }
 
-#if OS(WIN) || OS(LINUX)
+#if OS(WIN) || OS(LINUX) || OS(OPENBSD)
 static inline SkFontStyle fontStyle(const FontDescription& fontDescription)
 {
     int width = static_cast<int>(fontDescription.stretch());
@@@@ -232,7 +232,7 @@@@ PassRefPtr<SkTypeface> FontCache::createTypeface(const
d17 2
a18 2
-#if OS(LINUX)
+#if OS(LINUX) || OS(OPENBSD)
@


1.4
log
@update to iridium-50.0 and sync recent changes with chromium
@
text
@d1 30
a30 12
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.5 2016/04/16 19:08:46 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Thu Apr 14 20:07:25 2016
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Thu Apr 14 20:07:34 2016
@@@@ -65,7 +65,7 @@@@ const char* kColorEmojiFonts[] = { "56##fallback", "No
 const char* kTextEmojiFonts[] = { "Droid Sans Fallback" };
 const char* kSymbolsFonts[] = { "Droid Sans Fallback" };
 const char* kMathFonts[] = { "Droid Sans Fallback" };
-#elif OS(LINUX)
+#elif OS(LINUX) || OS(OPENBSD)
 const char* kColorEmojiFonts[] = { "Noto Color Emoji", "Noto Sans Symbols", "Symbola", "DejaVu Sans" };
 const char* kTextEmojiFonts[] = { "Noto Sans Symbols", "Symbola", "Droid Sans Fallback", "DejaVu Sans" };
 const char* kSymbolsFonts[] = { "FreeSerif", "FreeMono", "Droid Sans Fallback", "DejaVu Sans" };
@


1.3
log
@update to 48.1 (based on the latest stable chromium which contains security
fixes as well)

ok naddy@@ sthen@@
@
text
@d1 12
a12 33
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.2 2015/05/06 14:27:24 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Wed Apr 15 09:39:48 2015
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Wed Apr 15 09:40:36 2015
@@@@ -30,7 +30,7 @@@@
 
 #include "config.h"
 
-#if !OS(WIN) && !OS(ANDROID)
+#if !OS(WIN) && !OS(ANDROID) && !OS(OPENBSD)
 #include "SkFontConfigInterface.h"
 #endif
 #include "SkFontMgr.h"
@@@@ -48,7 +48,7 @@@@
 #include "wtf/text/CString.h"
 #include <unicode/locid.h>
 
-#if !OS(WIN) && !OS(ANDROID)
+#if !OS(WIN) && !OS(ANDROID) && !OS(OPENBSD)
 static SkStreamAsset* streamForFontconfigInterfaceId(int fontconfigInterfaceId)
 {
     SkAutoTUnref<SkFontConfigInterface> fci(SkFontConfigInterface::RefGlobal());
@@@@ -187,9 +187,11 @@@@ PassRefPtr<SkTypeface> FontCache::createTypeface(const
 #if !OS(WIN) && !OS(ANDROID)
     if (creationParams.creationType() == CreateFontByFciIdAndTtcIndex) {
         SkTypeface* typeface = nullptr;
+#if !OS(OPENBSD)
         if (Platform::current()->sandboxSupport())
             typeface = SkTypeface::CreateFromStream(streamForFontconfigInterfaceId(creationParams.fontconfigInterfaceId()), creationParams.ttcIndex());
         else
+#endif
             typeface = SkTypeface::CreateFromFile(creationParams.filename().data(), creationParams.ttcIndex());
 
         if (typeface)
@


1.2
log
@update to iridium-browser-42.0
@
text
@d1 1
a1 1
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.3 2015/04/27 16:38:25 robert Exp $
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD: patch-third_party_WebKit_Source_platform_fonts_skia_FontCacheSkia_cpp,v 1.2 2015/02/22 11:33:57 robert Exp $
--- third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp.orig.port	Fri Feb 20 05:50:09 2015
+++ third_party/WebKit/Source/platform/fonts/skia/FontCacheSkia.cpp	Sun Feb 22 12:21:03 2015
d19 1
a19 1
 static SkStream* streamForFontconfigInterfaceId(int fontconfigInterfaceId)
d22 3
a24 12
@@@@ -131,7 +131,7 @@@@ PassRefPtr<SimpleFontData> FontCache::fallbackFontForC
     return fontDataFromFontPlatformData(&platformData, DoNotRetain);
 }
 
-#endif // !OS(WIN) && !OS(ANDROID)
+#endif // !OS(WIN) && !OS(ANDROID) && !OS(OPENBSD)
 
 PassRefPtr<SimpleFontData> FontCache::getLastResortFallbackFont(const FontDescription& description, ShouldRetain shouldRetain)
 {
@@@@ -189,9 +189,11 @@@@ PassRefPtr<SkTypeface> FontCache::createTypeface(const
         // TODO(dro): crbug.com/381620 Use creationParams.ttcIndex() after
         // https://code.google.com/p/skia/issues/detail?id=1186 gets fixed.
d28 1
a28 1
             typeface = SkTypeface::CreateFromStream(streamForFontconfigInterfaceId(creationParams.fontconfigInterfaceId()));
d31 1
a31 1
             typeface = SkTypeface::CreateFromFile(creationParams.filename().data());
@


1.1.1.1
log
@import of iridium-41.2:

Iridium is a free, open, and libre browser modification of the Chromium code base,
with privacy being enhanced in several key areas.
Automatic transmission of partial queries, keywords, metrics to central services
inhibited and only occurs with consent.
In addition, all our builds are reproducible, and modifications are auditable,
setting the project ahead of other secure browser providers.

For more information, visit: https://iridiumbrowser.de/about

ok ajacoutot@@
@
text
@@
