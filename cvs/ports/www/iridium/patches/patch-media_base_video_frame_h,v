head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.2
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.3.0.2
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2017.04.28.22.22.36;	author robert;	state Exp;
branches;
next	1.4;
commitid	hEiDsbcK5ON7rnmo;

1.4
date	2017.04.19.05.16.47;	author robert;	state Exp;
branches;
next	1.3;
commitid	jpW2BiKwA9H7U7d6;

1.3
date	2016.10.27.18.30.41;	author robert;	state Exp;
branches;
next	1.2;
commitid	lED1Oks5HVh03mCa;

1.2
date	2016.05.28.14.49.39;	author robert;	state Exp;
branches;
next	1.1;
commitid	e1vpcgKLVeZdUbdR;

1.1
date	2016.04.27.12.46.16;	author robert;	state Exp;
branches;
next	;
commitid	yOrwVI71D7bLHmrO;


desc
@@


1.5
log
@update to 58.0
@
text
@$OpenBSD: patch-media_base_video_frame_h,v 1.8 2017/04/28 14:21:00 robert Exp $
--- media/base/video_frame.h.orig.port	Wed Apr 19 21:06:35 2017
+++ media/base/video_frame.h	Thu Apr 27 19:56:02 2017
@@@@ -62,7 +62,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
     STORAGE_UNOWNED_MEMORY = 2,  // External, non owned data pointers.
     STORAGE_OWNED_MEMORY = 3,  // VideoFrame has allocated its own data buffer.
     STORAGE_SHMEM = 4,         // Pixels are backed by Shared Memory.
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
     // TODO(mcasas): Consider turning this type into STORAGE_NATIVE or another
     // meaningful name and handle it appropriately in all cases.
     STORAGE_DMABUFS = 5,  // Each plane is stored into a DmaBuf.
@@@@ -186,7 +186,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
       uint8_t* a_data,
       base::TimeDelta timestamp);
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   // Wraps provided dmabufs
   // (https://www.kernel.org/doc/Documentation/dma-buf-sharing.txt) with a
   // VideoFrame. The dmabuf fds are dup()ed on creation, so that the VideoFrame
@@@@ -336,7 +336,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
   // Returns the offset into the shared memory where the frame data begins.
   size_t shared_memory_offset() const;
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   // Returns backing DmaBuf file descriptor for given |plane|, if present, or
   // -1 if not.
   // TODO(mcasas): Rename to DmabufFd() to comply with Style Guide.
@@@@ -528,7 +528,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
   base::SharedMemoryHandle shared_memory_handle_;
   size_t shared_memory_offset_;
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   // Dmabufs for each plane. If set, this frame has DmaBuf backing in some way.
   base::ScopedFD dmabuf_fds_[kMaxPlanes];
 #endif
@


1.4
log
@update to 57.0
@
text
@d1 3
a3 3
$OpenBSD: patch-media_base_video_frame_h,v 1.7 2017/01/26 17:08:26 robert Exp $
--- media/base/video_frame.h.orig.port	Thu Dec 15 00:02:10 2016
+++ media/base/video_frame.h	Tue Jan  3 20:30:00 2017
d31 1
a31 1
@@@@ -519,7 +519,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
@


1.3
log
@update to 54.0
@
text
@d1 4
a4 4
$OpenBSD: patch-media_base_video_frame_h,v 1.5 2016/10/26 06:22:08 robert Exp $
--- media/base/video_frame.h.orig.port	Wed Oct 12 21:03:00 2016
+++ media/base/video_frame.h	Wed Oct 19 12:56:06 2016
@@@@ -63,7 +63,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
d13 1
a13 1
@@@@ -212,7 +212,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
d22 3
a24 3
@@@@ -371,7 +371,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
   const std::vector<gfx::GpuMemoryBufferHandle>& gpu_memory_buffer_handles()
       const;
d31 3
a33 3
@@@@ -557,7 +557,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
   // GpuMemoryBuffer handles attached to the video_frame.
   std::vector<gfx::GpuMemoryBufferHandle> gpu_memory_buffer_handles_;
@


1.2
log
@update to 51.1
@
text
@d1 4
a4 4
$OpenBSD: patch-media_base_video_frame_h,v 1.2 2016/05/27 06:28:21 robert Exp $
--- media/base/video_frame.h.orig.port	Wed May 25 21:01:03 2016
+++ media/base/video_frame.h	Thu May 26 08:09:47 2016
@@@@ -61,7 +61,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
d13 2
a14 2
@@@@ -207,7 +207,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
       const gfx::GpuMemoryBufferHandle& v_handle,
d22 1
a22 1
@@@@ -362,7 +362,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
d31 1
a31 1
@@@@ -543,7 +543,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
@


1.1
log
@update to iridium-50.0 and sync recent changes with chromium
@
text
@d1 3
a3 3
$OpenBSD: patch-media_base_video_frame_h,v 1.1 2016/04/26 14:22:24 robert Exp $
--- media/base/video_frame.h.orig.port	Mon Apr 25 18:29:18 2016
+++ media/base/video_frame.h	Mon Apr 25 18:29:38 2016
d13 1
a13 1
@@@@ -206,7 +206,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
d22 1
a22 1
@@@@ -360,7 +360,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
d31 1
a31 1
@@@@ -507,7 +507,7 @@@@ class MEDIA_EXPORT VideoFrame : public base::RefCounte
@

