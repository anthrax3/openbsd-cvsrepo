head	1.6;
access;
symbols
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	ajacoutot_20140930:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2017.03.29.13.25.52;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	LZozuPgYFurOX4C6;

1.5
date	2016.10.28.13.44.25;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	dmtpmxFMSxF4CjHO;

1.4
date	2016.04.19.06.05.36;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	rvyFmaCsfwn3SDW7;

1.3
date	2015.09.23.06.06.11;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	fzFz3YYijX0IIcsy;

1.2
date	2015.03.27.18.38.45;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	5SCjinShjLNIt1iQ;

1.1
date	2014.09.30.08.25.27;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;
commitid	vE55uuVrh0fHHclM;

1.1.1.1
date	2014.09.30.08.25.27;	author ajacoutot;	state Exp;
branches;
next	;
commitid	vE55uuVrh0fHHclM;


desc
@@


1.6
log
@Update to WebKitGTK4 2.16.0. This will allow us to properly keep it updated
during the stable cycle for once \o/
@
text
@$OpenBSD: patch-Source_JavaScriptCore_jit_ExecutableAllocator_h,v 1.5 2016/10/28 13:44:25 ajacoutot Exp $

https://bugs.webkit.org/show_bug.cgi?id=61137

--- Source/JavaScriptCore/jit/ExecutableAllocator.h.orig	Tue Feb 28 09:34:11 2017
+++ Source/JavaScriptCore/jit/ExecutableAllocator.h	Sun Mar 26 13:55:13 2017
@@@@ -66,7 +66,8 @@@@ static const size_t fixedExecutableMemoryPoolSize = FI
 static const size_t fixedExecutableMemoryPoolSize = 16 * 1024 * 1024;
 #elif CPU(ARM64)
 static const size_t fixedExecutableMemoryPoolSize = 32 * 1024 * 1024;
-#elif CPU(X86_64)
+// We don't want an initial allocation of 1GB, it's above the default ulimit
+#elif CPU(X86_64) && !defined(__OpenBSD__)
 static const size_t fixedExecutableMemoryPoolSize = 1024 * 1024 * 1024;
 #else
 static const size_t fixedExecutableMemoryPoolSize = 32 * 1024 * 1024;
@


1.5
log
@Update to webkitgtk4-2.14.1.
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_JavaScriptCore_jit_ExecutableAllocator_h,v 1.4 2016/04/19 06:05:36 ajacoutot Exp $
d5 3
a7 3
--- Source/JavaScriptCore/jit/ExecutableAllocator.h.orig	Mon Sep 19 14:18:06 2016
+++ Source/JavaScriptCore/jit/ExecutableAllocator.h	Wed Oct 26 14:42:08 2016
@@@@ -76,7 +76,8 @@@@ class DemandExecutableAllocator;
@


1.4
log
@Update to webkitgtk4-2.12.1.
With help from robert@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_JavaScriptCore_jit_ExecutableAllocator_h,v 1.3 2015/09/23 06:06:11 ajacoutot Exp $
d5 3
a7 3
--- Source/JavaScriptCore/jit/ExecutableAllocator.h.orig	Thu Apr 14 10:45:23 2016
+++ Source/JavaScriptCore/jit/ExecutableAllocator.h	Sat Apr 16 13:02:54 2016
@@@@ -78,7 +78,8 @@@@ class DemandExecutableAllocator;
@


1.3
log
@Update to webkitgtk4-2.10.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_JavaScriptCore_jit_ExecutableAllocator_h,v 1.2 2015/03/27 18:38:45 ajacoutot Exp $
d5 3
a7 3
--- Source/JavaScriptCore/jit/ExecutableAllocator.h.orig	Mon Sep 21 09:29:46 2015
+++ Source/JavaScriptCore/jit/ExecutableAllocator.h	Mon Sep 21 14:58:56 2015
@@@@ -83,7 +83,8 @@@@ class DemandExecutableAllocator;
@


1.2
log
@Update to webkitgtk4-2.8.0.
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_JavaScriptCore_jit_ExecutableAllocator_h,v 1.1.1.1 2014/09/30 08:25:27 ajacoutot Exp $
d5 2
a6 2
--- Source/JavaScriptCore/jit/ExecutableAllocator.h.orig	Wed Mar  4 15:25:16 2015
+++ Source/JavaScriptCore/jit/ExecutableAllocator.h	Fri Mar 27 10:17:17 2015
a7 2
 #if ENABLE(EXECUTABLE_ALLOCATOR_FIXED)
 #if CPU(ARM) || CPU(ARM64)
d9 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-Source_JavaScriptCore_jit_ExecutableAllocator_h,v 1.3 2014/03/25 06:25:45 landry Exp $
d5 3
a7 3
--- Source/JavaScriptCore/jit/ExecutableAllocator.h.orig	Tue Aug 26 09:37:13 2014
+++ Source/JavaScriptCore/jit/ExecutableAllocator.h	Sun Sep 28 10:08:58 2014
@@@@ -89,7 +89,8 @@@@ class DemandExecutableAllocator;
@


1.1.1.1
log
@Import webkitgtk4-2.6.0.

WebKitGTK+ is the GNOME platform port of the WebKit rendering engine.
Offering WebKit's full functionality through a set of GObject-based
APIs, it is suitable for projects requiring any kind of web integration,
from hybrid HTML/CSS applications to full-fledged web browsers.

Still somewhat WIP, nothing depends on it yet.
ok landry@@
@
text
@@
