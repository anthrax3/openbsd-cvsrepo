head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.4
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2016.11.30.19.42.15;	author fcambus;	state Exp;
branches;
next	1.4;
commitid	NRu1PLBE6wn1SU9Q;

1.4
date	2016.09.03.09.33.19;	author sthen;	state Exp;
branches;
next	1.3;
commitid	auD2Wj47t32igzry;

1.3
date	2015.10.06.22.43.50;	author sthen;	state Exp;
branches
	1.3.4.1;
next	1.2;
commitid	FnPcEut1xdxLzrHi;

1.2
date	2015.09.20.08.01.09;	author landry;	state Exp;
branches;
next	1.1;
commitid	kXfKQCgOzqGCZbQy;

1.1
date	2014.04.19.14.43.49;	author bcallah;	state Exp;
branches;
next	;

1.3.4.1
date	2016.12.01.19.32.02;	author jca;	state Exp;
branches;
next	;
commitid	qyKsWSVU4eNXBl9Z;


desc
@@


1.5
log
@Update links+ to 2.14.

From maintainer Tim Meunier.
@
text
@$OpenBSD: patch-https_c,v 1.4 2016/09/03 09:33:19 sthen Exp $
--- https.c.orig	Sat Nov 19 13:52:07 2016
+++ https.c	Mon Nov 28 22:16:21 2016
@@@@ -88,6 +88,11 @@@@ links_ssl *getSSL(void)
 					RAND_write_file(cast_const_char f_randfile);
 			}
 		}
+#elif defined(HAVE_RAND_FILE_NAME) && defined(HAVE_RAND_LOAD_FILE) && defined(HAVE_RAND_WRITE_FILE)
+		unsigned char f_randfile[PATH_MAX];
+		const unsigned char *f = (const unsigned char *)RAND_file_name(cast_char f_randfile, sizeof(f_randfile));
+		if (RAND_load_file(cast_const_char f_randfile, -1))
+			RAND_write_file(cast_const_char f_randfile);
 #endif
 
 #if defined(HAVE_RAND_ADD)
@


1.4
log
@update to links+ 2.13, from Tim Meunier who takes maintainer and says "Thanks
to Gerald Hanuer for getting the ball rolling".
@
text
@d1 4
a4 4
$OpenBSD: patch-https_c,v 1.3 2015/10/06 22:43:50 sthen Exp $
--- https.c.orig	Sun Jun 26 18:52:02 2016
+++ https.c	Thu Sep  1 20:15:20 2016
@@@@ -89,6 +89,11 @@@@ SSL *getSSL(void)
@


1.3
log
@update to links+-2.12, from trondd at kagu-tsuchi.com
@
text
@d1 6
a6 6
$OpenBSD: patch-https_c,v 1.2 2015/09/20 08:01:09 landry Exp $
--- https.c.orig	Thu Sep 17 18:28:56 2015
+++ https.c	Tue Oct  6 10:49:16 2015
@@@@ -87,6 +87,10 @@@@ SSL *getSSL(void)
 			if (RAND_load_file(cast_const_char f_randfile, -1))
 				RAND_write_file(cast_const_char f_randfile);
d9 1
@


1.3.4.1
log
@SECURITY update to links-2.14

Relevant changes:
* Limit keepalive of ciphers with 64-bit block size to mitigate
the SWEET32 attack
* Improved tor hardening - when the user toggles the "Only Proxies" option
(i.e. when connecting to tor), we reset certain other options to their
default values, so that it is not possible to identify user behind tor
based on the selected options.
* Security bug fixed: Don't load or render the content of
"407 Proxy Authentication Required" reply when using https proxy.
This avoids the FalseCONNECT attack.
Also, don't allow 401 and 407 responses to set cookies.

Tested on 6.0 by Tim Meunier (maintainer)
@
text
@d1 6
a6 6
$OpenBSD: patch-https_c,v 1.3 2015/10/06 22:43:50 sthen Exp $
--- https.c.orig	Sat Nov 19 19:52:07 2016
+++ https.c	Thu Dec  1 10:56:17 2016
@@@@ -88,6 +88,10 @@@@ links_ssl *getSSL(void)
 					RAND_write_file(cast_const_char f_randfile);
 			}
d8 1
a8 1
+#elif defined(HAVE_RAND_EGD) && defined(HAVE_RAND_FILE_NAME) && defined(HAVE_RAND_LOAD_FILE) && defined(HAVE_RAND_WRITE_FILE)
@


1.2
log
@Update to links+ 2.11, based on a diff from bcallah@@ for 2.10.
@
text
@d1 4
a4 4
$OpenBSD: patch-https_c,v 1.1 2014/04/19 14:43:49 bcallah Exp $
--- https.c.orig	Mon Aug 24 23:28:45 2015
+++ https.c	Sun Sep 20 09:36:31 2015
@@@@ -76,6 +76,10 @@@@ SSL *getSSL(void)
@


1.1
log
@Fix after RAND_egd removal.
ok sthen@@
@
text
@d1 9
a9 12
$OpenBSD$
--- https.c.orig	Sat Apr 19 10:12:04 2014
+++ https.c	Sat Apr 19 10:12:16 2014
@@@@ -36,11 +36,8 @@@@ SSL *getSSL(void)
 		unsigned os_pool_size;
 
 		const unsigned char *f = (const unsigned char *)RAND_file_name(cast_char f_randfile, sizeof(f_randfile));
-		if (f && RAND_egd(cast_const_char f) < 0) {
-			/* Not an EGD, so read and write to it */
-			if (RAND_load_file(cast_const_char f_randfile, -1))
-				RAND_write_file(cast_const_char f_randfile);
-		}
d12 1
d14 1
a14 2
 		os_seed_random(&os_pool, &os_pool_size);
 		if (os_pool_size) RAND_add(os_pool, os_pool_size, os_pool_size);
@

