head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.4
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.2
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.2
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.6
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.4
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.14
	OPENBSD_5_0:1.11.0.12
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.10
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.8
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.6
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.4
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.2
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.10.0.12
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.10
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.8
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.8.0.4
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.2
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3;
locks; strict;
comment	@# @;


1.16
date	2016.09.03.09.33.19;	author sthen;	state Exp;
branches;
next	1.15;
commitid	auD2Wj47t32igzry;

1.15
date	2015.09.20.08.01.09;	author landry;	state Exp;
branches
	1.15.4.1;
next	1.14;
commitid	kXfKQCgOzqGCZbQy;

1.14
date	2015.01.01.15.19.49;	author bcallah;	state Exp;
branches;
next	1.13;
commitid	arKwTw7WPiK2qYjt;

1.13
date	2013.10.22.16.50.39;	author bcallah;	state Exp;
branches;
next	1.12;

1.12
date	2012.04.10.11.59.44;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2008.10.10.23.08.26;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.12.04.02.22;	author fgsch;	state Exp;
branches
	1.10.2.1
	1.10.4.1;
next	1.9;

1.9
date	2005.09.28.05.59.36;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2005.02.24.22.24.55;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2004.12.04.01.01.42;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2003.11.17.22.59.32;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.23.06.35.33;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.07.19.30.21;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.16.04.55.24;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.16.04.11.23;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.05.23.32.24;	author fgsch;	state Exp;
branches;
next	;

1.10.2.1
date	2006.12.13.21.54.25;	author sturm;	state Exp;
branches;
next	;

1.10.4.1
date	2006.12.13.22.07.54;	author sturm;	state Exp;
branches;
next	;

1.15.4.1
date	2016.12.01.19.32.02;	author jca;	state Exp;
branches;
next	;
commitid	qyKsWSVU4eNXBl9Z;


desc
@@


1.16
log
@update to links+ 2.13, from Tim Meunier who takes maintainer and says "Thanks
to Gerald Hanuer for getting the ball rolling".
@
text
@$OpenBSD: patch-html_c,v 1.15 2015/09/20 08:01:09 landry Exp $
--- html.c.orig	Fri Jun 17 16:33:57 2016
+++ html.c	Thu Sep  1 20:13:58 2016
@@@@ -987,6 +987,7 @@@@ static void html_a(unsigned char *a)
 			format_.target = stracpy(format_.target_base);
 		}
 		/*format_.attr ^= AT_BOLD;*/
+		format_.attr |= AT_UNDERLINE;
 		set_link_attr();
 	} else if (!ev) kill_html_stack_item(&html_top);
 	if ((al = get_attr_val(a, cast_uchar "name"))) {
@


1.15
log
@Update to links+ 2.11, based on a diff from bcallah@@ for 2.10.
@
text
@d1 4
a4 4
$OpenBSD: patch-html_c,v 1.14 2015/01/01 15:19:49 bcallah Exp $
--- html.c.orig	Sat Jul 25 13:41:36 2015
+++ html.c	Sun Sep 20 09:33:31 2015
@@@@ -970,6 +970,7 @@@@ static void html_a(unsigned char *a)
@


1.15.4.1
log
@SECURITY update to links-2.14

Relevant changes:
* Limit keepalive of ciphers with 64-bit block size to mitigate
the SWEET32 attack
* Improved tor hardening - when the user toggles the "Only Proxies" option
(i.e. when connecting to tor), we reset certain other options to their
default values, so that it is not possible to identify user behind tor
based on the selected options.
* Security bug fixed: Don't load or render the content of
"407 Proxy Authentication Required" reply when using https proxy.
This avoids the FalseCONNECT attack.
Also, don't allow 401 and 407 responses to set cookies.

Tested on 6.0 by Tim Meunier (maintainer)
@
text
@d1 4
a4 4
$OpenBSD: patch-html_c,v 1.15 2015/09/20 08:01:09 landry Exp $
--- html.c.orig	Wed Nov 16 23:49:10 2016
+++ html.c	Thu Dec  1 10:53:25 2016
@@@@ -987,6 +987,7 @@@@ static void html_a(unsigned char *a)
@


1.14
log
@Update to 2.9 -- remove nonexistant sdl configure option and switch to
using upstream's configure file instead of using autoconf.
@
text
@d1 4
a4 4
$OpenBSD: patch-html_c,v 1.13 2013/10/22 16:50:39 bcallah Exp $
--- html.c.orig	Sun Dec  7 13:39:00 2014
+++ html.c	Fri Dec 26 11:41:31 2014
@@@@ -981,6 +981,7 @@@@ static void html_a(unsigned char *a)
@


1.13
log
@Update links+ to 2.8.
Take MAINTAINER.
ok lteo@@ landry@@
@
text
@d1 4
a4 4
$OpenBSD: patch-html_c,v 1.12 2012/04/10 11:59:44 sthen Exp $
--- html.c.orig	Tue Oct 22 01:26:16 2013
+++ html.c	Tue Oct 22 01:27:45 2013
@@@@ -961,6 +961,7 @@@@ static void html_a(unsigned char *a)
@


1.12
log
@Security update to links 2.6, fixes include:

- Buffer overflow when pasting too long text from clipboard to dialog
boxes (not remotely exploitable)
- A write out of allocated memory in the graphics renderer
(potentially exploitable)
- An infinite loop when parsing invalid usemap specification in text and
graphics mode (can cause browser lockup, but not otherwise exploitable)
- Accesses out of memory in the xbm decoder (potentially exploitable)

Also drop dip.c patch to resolve crashes with libpng 1.5, upstream
appears to have fixed this separately in the update to 2.5.
Thanks jasper@@ for additional testing.
@
text
@d1 5
a5 5
$OpenBSD: patch-html_c,v 1.11 2008/10/10 23:08:26 sthen Exp $
--- html.c.orig	Wed Apr  4 22:27:07 2012
+++ html.c	Tue Apr 10 11:55:43 2012
@@@@ -957,6 +957,7 @@@@ static void html_a(unsigned char *a)
 			format.target = stracpy(format.target_base);
d7 2
a8 2
 		/*format.attr ^= AT_BOLD;*/
+		format.attr |= AT_UNDERLINE;
d11 1
a11 1
 	if ((al = get_attr_val(a, "name"))) {
@


1.11
log
@update to 2.2, various fixes including portability (LP64 big-endian)
@
text
@d1 4
a4 4
$OpenBSD: patch-html_c,v 1.10 2005/10/12 04:02:22 fgsch Exp $
--- html.c.orig	Sat Jun 21 17:05:53 2008
+++ html.c	Sat Aug  2 21:42:40 2008
@@@@ -947,6 +947,7 @@@@ void html_a(unsigned char *a)
@


1.10
log
@update to links2.1pre19
@
text
@d1 4
a4 4
$OpenBSD: patch-html_c,v 1.9 2005/09/28 05:59:36 fgsch Exp $
--- html.c.orig	Sun Aug 21 21:15:07 2005
+++ html.c	Wed Oct 12 00:40:37 2005
@@@@ -925,6 +925,7 @@@@ void html_a(unsigned char *a)
@


1.10.4.1
log
@MFC:
Update to 2.1pre26. Fixes CVE-2006-5925 (smbclient command injection).
@
text
@d1 4
a4 4
$OpenBSD: patch-html_c,v 1.10 2005/10/12 04:02:22 fgsch Exp $
--- html.c.orig	Mon Sep 11 02:53:50 2006
+++ html.c	Wed Dec 13 23:02:23 2006
@@@@ -931,6 +931,7 @@@@ void html_a(unsigned char *a)
@


1.10.2.1
log
@MFC:
Update to 2.1pre26. Fixes CVE-2006-5925 (smbclient command injection).
@
text
@d1 4
a4 4
$OpenBSD: patch-html_c,v 1.10 2005/10/12 04:02:22 fgsch Exp $
--- html.c.orig	Mon Sep 11 02:53:50 2006
+++ html.c	Wed Dec 13 22:52:16 2006
@@@@ -931,6 +931,7 @@@@ void html_a(unsigned char *a)
@


1.9
log
@update to 2.1pre18. most of the patches were accepted one way or another.
tested by jolan and pedro.
@
text
@d1 4
a4 4
$OpenBSD$
--- html.c.orig	Tue Sep 27 20:38:17 2005
+++ html.c	Tue Sep 27 20:38:34 2005
@@@@ -909,6 +909,7 @@@@ void html_a(unsigned char *a)
d9 1
a9 1
 		memcpy(&format.fg, &format.clink, sizeof(struct rgb));
@


1.8
log
@update to 2.1pre16 and remove my shift fix since it causes troubles in
other areas. reported by Ray <ray at cyth dot net> and
Alex Holst <a at mongers dot org>. tested by jolan@@ and pedro@@
@
text
@d1 4
a4 4
$OpenBSD: patch-html_c,v 1.7 2004/12/04 01:01:42 fgsch Exp $
--- html.c.orig	Sat Jan 22 17:51:53 2005
+++ html.c	Mon Feb 21 12:06:25 2005
@@@@ -882,6 +882,7 @@@@ void html_a(unsigned char *a)
a11 26
@@@@ -1767,7 +1768,7 @@@@ void new_menu_item(unsigned char *name, 
 		item->rtext = data == -1 ? ">" : "";
 		item->hotkey = fullname ? "\000\001" : "\000\000"; /* dirty */
 		item->func = data == -1 ? MENU_FUNC do_select_submenu : MENU_FUNC selected_item;
-		item->data = data == -1 ? nmenu : (void *)data;
+		item->data = data == -1 ? nmenu : (void *)(intptr_t)data;
 		item->in_m = data == -1 ? 1 : 0;
 		item->free_i = 0;
 		item++;
@@@@ -1826,14 +1827,14 @@@@ void menu_labels(struct menu_item *m, un
 			}
 		} else {
 			if ((bs = stracpy(m->hotkey[1] ? (unsigned char *)"" : base))) add_to_strn(&bs, m->text);
-			lbls[(long)m->data] = bs;
+			lbls[(intptr_t)m->data] = bs;
 		}
 	}
 }
 
 int menu_contains(struct menu_item *m, int f)
 {
-	if (m->func != MENU_FUNC do_select_submenu) return (long)m->data == f;
+	if (m->func != MENU_FUNC do_select_submenu) return (intptr_t)m->data == f;
 	for (m = m->data; m->text; m++) if (menu_contains(m, f)) return 1;
 	return 0;
 }
@


1.7
log
@update to 2.1pre15. prompted some time ago by
Julian Leyh <oenone at oenone dot de>. sorry for the delay dude.
@
text
@d1 4
a4 4
$OpenBSD: patch-html_c,v 1.6 2003/11/17 22:59:32 fgsch Exp $
--- html.c.orig	Tue Apr 20 05:08:40 2004
+++ html.c	Fri Dec  3 20:35:31 2004
@@@@ -799,6 +799,7 @@@@ void html_a(unsigned char *a)
d12 1
a12 1
@@@@ -1681,7 +1682,7 @@@@ void new_menu_item(unsigned char *name, 
d21 1
a21 1
@@@@ -1741,14 +1742,14 @@@@ void menu_labels(struct menu_item *m, un
d25 1
a25 1
-			lbls[(int)m->data] = bs;
d33 1
a33 1
-	if (m->func != MENU_FUNC do_select_submenu) return (int)m->data == f;
@


1.6
log
@update to links2.1pre14; tested by jolan@@ and Pedro Bastos.
@
text
@d1 3
a3 3
$OpenBSD: patch-html_c,v 1.5 2003/09/23 06:35:33 fgsch Exp $
--- html.c.orig	2003-10-27 18:55:44.000000000 -0300
+++ html.c	2003-11-17 19:09:10.000000000 -0300
d12 1
a12 1
@@@@ -1679,7 +1680,7 @@@@ void new_menu_item(unsigned char *name, 
d21 1
a21 1
@@@@ -1739,14 +1740,14 @@@@ void menu_labels(struct menu_item *m, un
@


1.5
log
@update to links 2.1pre12.
@
text
@d1 3
a3 3
$OpenBSD: patch-html_c,v 1.4 2003/04/07 19:30:21 fgsch Exp $
--- html.c.orig	2003-08-29 14:05:17.000000000 -0300
+++ html.c	2003-09-23 02:55:15.000000000 -0300
d12 1
a12 1
@@@@ -1670,7 +1671,7 @@@@ void new_menu_item(unsigned char *name, 
d21 1
a21 1
@@@@ -1730,14 +1731,14 @@@@ void menu_labels(struct menu_item *m, un
@


1.4
log
@update to links 2.1pre9; tested by pvalchev@@ and Pedro Bastos.
@
text
@d1 3
a3 3
$OpenBSD: patch-html_c,v 1.3 2002/09/16 04:55:24 fgsch Exp $
--- html.c.orig	Tue Feb 11 18:55:00 2003
+++ html.c	Fri Apr  4 00:16:18 2003
d12 1
a12 1
@@@@ -1663,7 +1664,7 @@@@ void new_menu_item(unsigned char *name, 
d21 1
a21 1
@@@@ -1723,14 +1724,14 @@@@ void menu_labels(struct menu_item *m, un
@


1.3
log
@ops, add underline for hrefs back.
@
text
@d1 4
a4 4
$OpenBSD: patch-html_c,v 1.2 2002/09/16 04:11:23 fgsch Exp $
--- html.c.orig	Sat Jun 29 16:27:04 2002
+++ html.c	Mon Sep 16 01:49:37 2002
@@@@ -772,6 +772,7 @@@@ void html_a(unsigned char *a)
d12 1
a12 1
@@@@ -1636,7 +1637,7 @@@@ void new_menu_item(unsigned char *name, 
d21 1
a21 1
@@@@ -1696,14 +1697,14 @@@@ void menu_labels(struct menu_item *m, un
@


1.2
log
@use intptr_t where needed.  pvalchev@@ actually noticed this and provided
diffs but unfortunately they got lost in a hd crash.
pvalchev@@ ok.
@
text
@d1 12
a12 4
$OpenBSD: patch-html_c,v 1.1 2002/08/05 23:32:24 fgsch Exp $
--- html.c.orig	Sun Sep 15 10:07:09 2002
+++ html.c	Sun Sep 15 10:12:38 2002
@@@@ -1637,7 +1637,7 @@@@ void new_menu_item(unsigned char *name, 
d21 1
a21 1
@@@@ -1697,14 +1697,14 @@@@ void menu_labels(struct menu_item *m, un
@


1.1
log
@underline href's.
@
text
@d1 18
a18 5
$OpenBSD$
--- html.c.orig	Mon Aug  5 19:25:52 2002
+++ html.c	Mon Aug  5 19:26:12 2002
@@@@ -772,6 +772,7 @@@@ void html_a(unsigned char *a)
 			format.target = stracpy(format.target_base);
d20 10
a29 5
 		/*format.attr ^= AT_BOLD;*/
+		format.attr |= AT_UNDERLINE;
 		memcpy(&format.fg, &format.clink, sizeof(struct rgb));
 	} else if (!ev) kill_html_stack_item(&html_top);
 	if ((al = get_attr_val(a, "name"))) {
@

