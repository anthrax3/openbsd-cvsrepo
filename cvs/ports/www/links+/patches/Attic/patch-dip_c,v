head	1.3;
access;
symbols
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2012.04.10.11.59.44;	author sthen;	state dead;
branches;
next	1.2;

1.2
date	2012.02.27.18.21.41;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.21.18.36.36;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Security update to links 2.6, fixes include:

- Buffer overflow when pasting too long text from clipboard to dialog
boxes (not remotely exploitable)
- A write out of allocated memory in the graphics renderer
(potentially exploitable)
- An infinite loop when parsing invalid usemap specification in text and
graphics mode (can cause browser lockup, but not otherwise exploitable)
- Accesses out of memory in the xbm decoder (potentially exploitable)

Also drop dip.c patch to resolve crashes with libpng 1.5, upstream
appears to have fixed this separately in the update to 2.5.
Thanks jasper@@ for additional testing.
@
text
@$OpenBSD: patch-dip_c,v 1.2 2012/02/27 18:21:41 fgsch Exp $

From John Bowler <jbowler@@acm.org> via NetBSD pkg/44940:

There is *NO* error handling, no call to setjmp();
so when png_error is called the call stack ends up destroyed and,
apparently, the program dies in create_read_struct_2, right after
the comment that explains why libpng is about to call abort() ;-)

--- dip.c.orig	Sat Jul  7 23:23:39 2007
+++ dip.c	Thu Jul 21 20:31:14 2011
@@@@ -1436,6 +1436,8 @@@@ unsigned char *png_data, int png_length, struct style 
 	
 	png_ptr=png_create_read_struct(PNG_LIBPNG_VER_STRING,
 			NULL, my_png_error, my_png_warning);
+	if (setjmp(png_jmpbuf(png_ptr)))
+	    overalloc(); /* some error detected by libpng */
 	info_ptr=png_create_info_struct(png_ptr);
 	png_set_read_fn(png_ptr,&work,(png_rw_ptr)&read_stored_data);
 	png_read_info(png_ptr, info_ptr);
@


1.2
log
@Update to links 2.5.
ajacoutot@@ ok
@
text
@d1 1
a1 1
$OpenBSD: patch-dip_c,v 1.1 2011/07/21 18:36:36 jasper Exp $
@


1.1
log
@- add a patch from pkgsrc to prevent links+ (in gui mode) from crashing on
certain webpages after recent png update. though links was doing bad things, not png..
@
text
@d1 1
a1 1
$OpenBSD$
d4 2
a5 5
It's two bugs: one, the obvious one, in the two calls to
png_set_rgb_to_gray() in dip.c; that should be *DIVIDED* by 256,
not multiplied!
                                                                                                                                                                                                                    
The other is that there is *NO* error handling, no call to setjmp();
a8 3
                                                                                                                                                                                                                    
The attached patch fixes both problems, but links will still error
out on a png_error (just with an OOM message, not an abort()).
a20 18
@@@@ -1462,7 +1464,7 @@@@ unsigned char *png_data, int png_length, struct style 
 		if (color_type==PNG_COLOR_TYPE_PALETTE){
 			png_set_expand(png_ptr);
 #ifdef HAVE_PNG_SET_RGB_TO_GRAY
-			png_set_rgb_to_gray(png_ptr,1,54.0*256,183.0*256);
+			png_set_rgb_to_gray(png_ptr,1,54.0/256,183.0/256);
 #else
 			goto end;
 #endif
@@@@ -1473,7 +1475,7 @@@@ unsigned char *png_data, int png_length, struct style 
 		if (color_type==PNG_COLOR_TYPE_RGB ||
 			color_type==PNG_COLOR_TYPE_RGB_ALPHA){
 #ifdef HAVE_PNG_SET_RGB_TO_GRAY
-			png_set_rgb_to_gray(png_ptr, 1, 54.0*256, 183.0*256);
+			png_set_rgb_to_gray(png_ptr, 1, 54.0/256, 183.0/256);
 #else
 			goto end;
 #endif
@

