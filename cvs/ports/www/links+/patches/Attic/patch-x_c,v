head	1.10;
access;
symbols
	OPENBSD_3_8:1.9.0.4
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3;
locks; strict;
comment	@# @;


1.10
date	2005.09.28.05.59.36;	author fgsch;	state dead;
branches;
next	1.9;

1.9
date	2005.02.24.22.24.55;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2004.12.04.01.09.56;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2004.12.04.01.01.42;	author fgsch;	state dead;
branches;
next	1.6;

1.6
date	2003.04.07.19.30.21;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.17.05.50.51;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.14.05.46.54;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.15.07.29.55;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2002.07.29.23.46.35;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.29.14.41.49;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.10
log
@update to 2.1pre18. most of the patches were accepted one way or another.
tested by jolan and pedro.
@
text
@$OpenBSD: patch-x_c,v 1.9 2005/02/24 22:24:55 fgsch Exp $
--- x.c.orig	Sun Jan  2 17:17:26 2005
+++ x.c	Mon Feb 21 12:02:02 2005
@@@@ -326,6 +326,7 @@@@ static int x_translate_key(XKeyEvent *e,
 	/* alt, control, shift ... */
 	if (e->state&ControlMask)*flag|=KBD_CTRL;
 	if (e->state&Mod1Mask)*flag|=KBD_ALT;
+	/* if (e->state&ShiftMask)*flag|=KBD_SHIFT; */
 
 	/* alt-f4 */
 	if (((*flag)&KBD_ALT)&&(ks==XK_F4)){*key=KBD_CTRL_C;*flag=0;return 1;}
@


1.9
log
@update to 2.1pre16 and remove my shift fix since it causes troubles in
other areas. reported by Ray <ray at cyth dot net> and
Alex Holst <a at mongers dot org>. tested by jolan@@ and pedro@@
@
text
@d1 1
a1 1
$OpenBSD: patch-x_c,v 1.8 2004/12/04 01:09:56 fgsch Exp $
@


1.8
log
@fix a bug where shift is not set. should fix ins+shift paste.
@
text
@d1 4
a4 4
$OpenBSD$
--- x.c.orig	Fri Dec  3 22:04:59 2004
+++ x.c	Fri Dec  3 22:05:21 2004
@@@@ -314,6 +314,7 @@@@ static int x_translate_key(XKeyEvent *e,
d8 1
a8 1
+	if (e->state&ShiftMask)*flag|=KBD_SHIFT;
@


1.7
log
@update to 2.1pre15. prompted some time ago by
Julian Leyh <oenone at oenone dot de>. sorry for the delay dude.
@
text
@d1 8
a8 31
$OpenBSD: patch-x_c,v 1.6 2003/04/07 19:30:21 fgsch Exp $
--- x.c.orig	Fri Jan 10 19:13:49 2003
+++ x.c	Fri Apr  4 01:10:31 2003
@@@@ -611,7 +611,24 @@@@ static void x_process_events(void *data)
 				gd=x_find_gd(&(event.xkey.window));
 				if (!gd)break;
 				if (x_translate_key((XKeyEvent*)(&event),&k,&f))
-					gd->keyboard_handler(gd,k,f);
+				{
+ 					if (k == KBD_INS && event.xkey.state & ShiftMask)
+					{
+						Atom pty;
+						if ((pty = XInternAtom(x_display, "XCLIP_OUT", False)))
+						{
+							XConvertSelection(
+								x_display,
+								XA_PRIMARY,
+								XA_STRING,
+								pty,
+								event.xbutton.window,
+								CurrentTime);
+						}
+					
+					} else
+						gd->keyboard_handler(gd,k,f);
+				}
 			}
 			break;
 	
@@@@ -659,8 +676,7 @@@@ static void x_process_events(void *data)
 					break;
d10 2
a11 16
 					case 2:
-					if (event.xbutton.state & ShiftMask) return; /* paste */
-					a=B_MIDDLE;
+					return; /* paste */
 					break;
 
 					default:
@@@@ -699,8 +715,6 @@@@ static void x_process_events(void *data)
 					break;
 
 					case 2:
-					a=B_MIDDLE;
-					if (event.xbutton.state & ShiftMask) /* paste */
 					{
 						Atom pty;
 						if ((pty = XInternAtom(x_display, "XCLIP_OUT", False)))
@


1.6
log
@update to links 2.1pre9; tested by pvalchev@@ and Pedro Bastos.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.5
log
@Copy to clipboard support under X11; thanks to matthieu@@ for directions.
@
text
@d1 4
a4 33
$OpenBSD: patch-x_c,v 1.4 2002/11/14 05:46:54 fgsch Exp $
--- x.c.orig	Sat Nov  2 14:22:42 2002
+++ x.c	Tue Dec 17 02:21:56 2002
@@@@ -82,6 +82,7 @@@@
 
 #include <X11/Xlib.h>
 #include <X11/X.h>
+#include <X11/Xatom.h>
 #include <X11/Xutil.h>
 #include <X11/Xlocale.h>
 
@@@@ -168,6 +169,20 @@@@ x_hash_table[X_HASH_TABLE_SIZE];
 
 static int flush_in_progress=0;
 
+static void x_do_paste(struct graphics_device* gd)
+{
+	int num=0;
+	unsigned char *buffer,*p;
+				
+	buffer=XFetchBytes(x_display,&num);
+	for (p=buffer;num>0;num--,p++)
+	{
+		if (*p==10)gd->keyboard_handler(gd,KBD_ENTER,0);
+		else
+			if (*p>=32)gd->keyboard_handler(gd,*p,0);
+	}
+	if (buffer)XFree(buffer);
+}
 
 static void x_do_flush(void *ignore)
 {
@@@@ -607,7 +622,15 @@@@ static void x_process_events(void *data)
d11 14
a24 5
+ 					{
+ 						x_do_paste(gd);
+ 						return;
+ 					}
+					else
d30 2
a31 1
@@@@ -695,21 +718,8 @@@@ static void x_process_events(void *data)
d34 3
a36 18
 					a=B_MIDDLE;
-					if (event.xbutton.state & ShiftMask) /* paste */
-					{
-						int num=0;
-						unsigned char *buffer,*p;
-						
-						buffer=XFetchBytes(x_display,&num);
-						for (p=buffer;num>0;num--,p++)
-						{
-							if (*p==10)gd->keyboard_handler(gd,KBD_ENTER,0);
-							else
-								if (*p>=32)gd->keyboard_handler(gd,*p,0);
-						}
-						if (buffer)XFree(buffer);
-						return;
-					}
+ 					x_do_paste(gd);
+ 					return;
d39 3
a41 4
 					case 4:
@@@@ -1844,6 +1854,18 @@@@ void x_set_window_title(struct graphics_
 	mem_free(t);
 }
d43 6
a48 23
+void x_set_clipboard(unsigned char *text)
+{
+	Atom cb0, prim;
+
+	cb0 = XInternAtom(x_display, "CUT_BUFFER0", True);
+	XChangeProperty(x_display, x_root_window, cb0, XA_STRING, 8, PropModeReplace, text, strlen(text));
+	XSetSelectionOwner(x_display, cb0, x_root_window, CurrentTime);
+
+	prim = XInternAtom(x_display, "PRIMARY", True);
+	XSetSelectionOwner(x_display, prim, None, CurrentTime);
+}
+
 struct graphics_driver x_driver={
 	"x",
 	x_init_driver,
@@@@ -1869,6 +1891,7 @@@@ struct graphics_driver x_driver={
 	dummy_block,
 	dummy_unblock,
 	x_set_window_title,
+	x_set_clipboard,
 	0,				/* depth (filled in x_init_driver function) */
 	0, 0,				/* size (in X is empty) */
 	0,				/* flags */
@


1.4
log
@Update to version 2.1pre7.
@
text
@d1 1
a1 1
$OpenBSD: patch-x_c,v 1.3 2002/09/15 07:29:55 fgsch Exp $
d3 10
a12 2
+++ x.c	Mon Nov 11 14:10:02 2002
@@@@ -168,6 +168,20 @@@@ x_hash_table[X_HASH_TABLE_SIZE];
d33 1
a33 1
@@@@ -607,7 +621,15 @@@@ static void x_process_events(void *data)
d50 1
a50 1
@@@@ -695,21 +717,8 @@@@ static void x_process_events(void *data)
d74 27
@


1.3
log
@update to links-2.1pre3
@
text
@d1 3
a3 3
$OpenBSD: patch-x_c,v 1.2 2002/07/29 23:46:35 fgsch Exp $
--- x.c.orig	Thu Sep 12 04:31:03 2002
+++ x.c	Sun Sep 15 03:52:31 2002
d25 1
a25 1
@@@@ -598,6 +612,11 @@@@ static void x_process_events(void *data)
d28 2
a29 2
 				x_translate_key((XKeyEvent*)(&event),&k,&f);
+				if (k == KBD_INS && f == KBD_SHIFT)
d31 7
a37 2
+					x_do_paste(gd);
+					return;
a38 1
 				gd->keyboard_handler(gd,k,f);
d41 2
a42 1
@@@@ -686,21 +705,8 @@@@ static void x_process_events(void *data)
@


1.2
log
@make shift+ins paste as well. discussed with pvalchev@@.
@
text
@d1 4
a4 4
$OpenBSD: patch-x_c,v 1.1 2002/07/29 14:41:49 fgsch Exp $
--- x.c.orig	Mon Jun 17 05:22:20 2002
+++ x.c	Mon Jul 29 13:29:30 2002
@@@@ -169,6 +169,20 @@@@ x_hash_table[X_HASH_TABLE_SIZE];
d25 1
a25 1
@@@@ -606,6 +620,11 @@@@ static void x_process_events(void *data)
d37 1
a37 1
@@@@ -694,21 +713,8 @@@@ static void x_process_events(void *data)
d41 1
a41 1
-					if (shift_pressed) /* paste */
d56 2
a57 2
+					x_do_paste(gd);
+					return;
@


1.1
log
@Make middle mouse button to paste as well, as with xterm.
discussed with pvalchev.
@
text
@d1 37
a37 4
$OpenBSD$
--- x.c.orig	Mon Jul 29 00:07:39 2002
+++ x.c	Mon Jul 29 00:08:27 2002
@@@@ -694,7 +694,6 @@@@ static void x_process_events(void *data)
d42 19
a60 3
 					{
 						int num=0;
 						unsigned char *buffer,*p;
@

