head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2016.11.30.07.35.00;	author bentley;	state dead;
branches;
next	1.1;
commitid	xkQnr62KFHgvGxQB;

1.1
date	2016.09.08.03.52.24;	author bentley;	state Exp;
branches;
next	;
commitid	Uo540fCBvuzGX2mW;


desc
@@


1.2
log
@Update to netsurf-3.6 and its accompanying libraries.

Note: upstream has renamed the main executable from "netsurf" to
"netsurf-gtk".
@
text
@$OpenBSD: patch-src_plot_h,v 1.1 2016/09/08 03:52:24 bentley Exp $
--- src/plot.h.orig	Wed Sep  7 20:11:59 2016
+++ src/plot.h	Wed Sep  7 20:12:12 2016
@@@@ -1,5 +1,59 @@@@
+/*
+ * Copyright 2009 Vincent Sanders <vince@@simtec.co.uk>
+ *
+ * This file is part of libnsfb, http://www.netsurf-browser.org/
+ * Licenced under the MIT License,
+ *                http://www.opensource.org/licenses/mit-license.php
+ */
 
+/**
+ * \file internal plotter interace.
+ */
 
+#ifndef LIBNSFB_PLOT_H
+#define LIBNSFB_PLOT_H
+
+/*
+ * Do the best we can to determine integer byte ordering
+ *
+ * This series of tests attempts to determine, at compile time, if the integer
+ * ordering in memory is big or little endian. This allows the plotters to make
+ * assumptions about memory ordering to greatly improve software rendering
+ * performance.
+ *
+ * \note This utterly ignores PDP endianess
+ */
+#undef NSFB_BE_BYTE_ORDER
+#if defined(_WIN32)
+    /* windows does not have endian.h but uses these macros */
+    #if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
+        #define NSFB_BE_BYTE_ORDER
+    #endif
+#elif defined(__APPLE__)
+    /* mac os x has the include somewhere different */
+    #include <machine/endian.h>
+    #if __DARWIN_BYTE_ORDER == __DARWIN_BIG_ENDIAN
+        #define NSFB_BE_BYTE_ORDER
+    #endif
+#else
+    #include <endian.h>
+    #if defined(__BYTE_ORDER__)
+        #if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
+            #define NSFB_BE_BYTE_ORDER
+        #endif
+    #elif defined(__BYTE_ORDER)
+        #if __BYTE_ORDER == __BIG_ENDIAN
+            #define NSFB_BE_BYTE_ORDER
+        #endif
+    #elif defined(BYTE_ORDER)
+        #if BYTE_ORDER == BIG_ENDIAN
+            #define NSFB_BE_BYTE_ORDER
+        #endif
+    #else
+        #error "Endian determination failed"
+    #endif
+#endif
+
 /** Clears plotting area to a flat colour (if needed)
  */
 typedef bool (nsfb_plotfn_clg_t)(nsfb_t *nsfb, nsfb_colour_t c);
@@@@ -127,3 +181,4 @@@@ typedef struct nsfb_plotter_fns_s {
 
 bool select_plotters(nsfb_t *nsfb);
 
+#endif
@


1.1
log
@Sync patches with upstream.
@
text
@d1 1
a1 1
$OpenBSD$
@

