head	1.2;
access;
symbols
	naddy_20100329:1.1.1.1 naddy:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.04.26.20.29.14;	author landry;	state dead;
branches;
next	1.1;

1.1
date	2010.03.29.20.44.14;	author naddy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.03.29.20.44.14;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove www/firefox36 WIP, it was not linked to the build and has been
merged into www/mozilla-firefox
@
text
@$OpenBSD: patch-security_nss_lib_freebl_unix_rand_c,v 1.1 2010/03/29 20:44:14 naddy Exp $
--- security/nss/lib/freebl/unix_rand.c.orig	Mon Nov  2 22:43:12 2009
+++ security/nss/lib/freebl/unix_rand.c	Wed Nov 25 22:04:30 2009
@@@@ -849,7 +849,6 @@@@ safe_pclose(FILE *fp)
 /* Fork netstat to collect its output by default. Do not unset this unless
  * another source of entropy is available
  */
-#define DO_NETSTAT 1
 
 void RNG_SystemInfoForRNG(void)
 {
@@@@ -916,7 +915,7 @@@@ void RNG_SystemInfoForRNG(void)
     GiveSystemInfo();
 
     /* grab some data from system's PRNG before any other files. */
-    bytes = RNG_FileUpdate("/dev/urandom", SYSTEM_RNG_SEED_COUNT);
+    bytes = RNG_FileUpdate(RAND_DEV, SYSTEM_RNG_SEED_COUNT);
 
     /* If the user points us to a random file, pass it through the rng */
     randfile = getenv("NSRANDFILE");
@@@@ -1159,7 +1158,7 @@@@ size_t RNG_SystemRNG(void *dest, size_t maxLen)
     size_t fileBytes = 0;
     unsigned char *buffer = dest;
 
-    file = fopen("/dev/urandom", "r");
+    file = fopen(RAND_DEV, "r");
     if (file == NULL) {
 	return rng_systemFromNoise(dest, maxLen);
     }
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: patch-security_nss_lib_freebl_unix_rand_c,v 1.2 2009/11/27 21:18:52 naddy Exp $
@


1.1.1.1
log
@Import Firefox 3.6.2.  Work in progress, not linked to the build.
Builds and runs on amd64 and i386, needs work elsewhere.
From martynas@@ for 3.6; slightly updated by yours truly.
@
text
@@
