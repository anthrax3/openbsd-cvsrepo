head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.10
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.6
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2014.04.16.05.31.11;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2014.04.10.06.13.04;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2012.09.26.19.19.56;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.22.13.22.00;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2011.04.03.15.02.12;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Reinstate some macro removal from macros/ffmpeg.m4 that was blown away by
accident with the previous commit so as to not have an unnecessary and
hidden dependency on libdca (libdts).

Reported by and ok naddy@@
@
text
@$OpenBSD: patch-macros_ffmpeg_m4,v 1.4 2014/04/10 06:13:04 brad Exp $
--- macros/ffmpeg.m4.orig	Thu Jan 19 14:17:49 2012
+++ macros/ffmpeg.m4	Mon Apr 14 21:55:13 2014
@@@@ -43,7 +43,7 @@@@ AC_DEFUN([GNASH_PATH_FFMPEG],
       ffmpeg_top_incl=`dirname ${with_ffmpeg_incl}`
       if test -f ${with_ffmpeg_incl}/avcodec.h; then
         ac_cv_path_ffmpeg_incl="-I`(cd ${ffmpeg_top_incl}; pwd)`"
-        if test -f ${with_ffmpeg_incl}/version.h && $EGREP LIBAVCODEC_VERSION ${with_ffmpeg_incl}/version.h >/dev/null; then
+        if test -f ${with_ffmpeg_incl}/version.h && $EGREP LIBAVCODEC_VERSION ${with_ffmpeg_incl}/version.h 2>&1 >/dev/null; then
           avcodec_h=${with_ffmpeg_incl}/version.h
         else
           avcodec_h=${with_ffmpeg_incl}/avcodec.h
@@@@ -73,7 +73,7 @@@@ AC_DEFUN([GNASH_PATH_FFMPEG],
         for i in "" ffmpeg libavcodec ffmpeg/libavcodec; do
           if test -f ${ffmpeg_top_incl}/${i}/avcodec.h; then
             ac_cv_path_ffmpeg_incl="-I`(cd ${ffmpeg_top_incl}; pwd)`"
-            if test -f ${ffmpeg_top_incl}/${i}/version.h && $EGREP LIBAVCODEC_VERSION ${ffmpeg_top_incl}/${i}/version.h 2>/dev/null; then
+            if test -f ${ffmpeg_top_incl}/${i}/version.h && $EGREP LIBAVCODEC_VERSION ${ffmpeg_top_incl}/${i}/version.h  2>&1 >/dev/null; then
               avcodec_h="${ffmpeg_top_incl}/${i}/version.h"
             else
               avcodec_h="${ffmpeg_top_incl}/${i}/avcodec.h"
@@@@ -97,7 +97,7 @@@@ AC_DEFUN([GNASH_PATH_FFMPEG],
       for i in ffmpeg libavcodec ffmpeg/libavcodec; do
         if test -f ${ffmpeg_top_incl}/${i}/avcodec.h; then
           ac_cv_path_ffmpeg_incl="-I`(cd ${ffmpeg_top_incl}/${i}; pwd)`"
-          if test -f ${ffmpeg_top_incl}/${i}/version.h && $EGREP LIBAVCODEC_VERSION ${ffmpeg_top_incl}/${i}/version.h 2>/dev/null; then
+          if test -f ${ffmpeg_top_incl}/${i}/version.h && $EGREP LIBAVCODEC_VERSION ${ffmpeg_top_incl}/${i}/version.h  2>&1 >/dev/null; then
             avcodec_h=${ffmpeg_top_incl}/${i}/version.h
           else
             avcodec_h=${ffmpeg_top_incl}/${i}/avcodec.h
@@@@ -219,9 +219,9 @@@@ AC_DEFUN([GNASH_PATH_FFMPEG],
 
     AC_MSG_CHECKING([ffmpeg version])
 
-    ffmpeg_major_version=`$EGREP "define LIBAVCODEC_VERSION_MAJOR " ${versionfile} | sed -e "s%[[^0-9]]%%g"`
-    ffmpeg_minor_version=`$EGREP "define LIBAVCODEC_VERSION_MINOR " ${versionfile} | sed -e "s%[[^0-9]]%%g"`
-    ffmpeg_micro_version=`$EGREP "define LIBAVCODEC_VERSION_MICRO " ${versionfile} | sed -e "s%[[^0-9]]%%g"`
+    ffmpeg_major_version=`$EGREP "define LIBAVCODEC_VERSION_MAJOR " ${versionfile} 2>&1 | sed -e "s%[[^0-9]]%%g"`
+    ffmpeg_minor_version=`$EGREP "define LIBAVCODEC_VERSION_MINOR " ${versionfile} 2>&1 | sed -e "s%[[^0-9]]%%g"`
+    ffmpeg_micro_version=`$EGREP "define LIBAVCODEC_VERSION_MICRO " ${versionfile} 2>&1 | sed -e "s%[[^0-9]]%%g"`
 
     if test x"${ffmpeg_major_version}" != x ; then
 
@@@@ -230,15 +230,15 @@@@ AC_DEFUN([GNASH_PATH_FFMPEG],
     else
 
       dnl #define LIBAVCODEC_VERSION_TRIPLET 51,50,1
-      ffmpeg_version=`$EGREP "define LIBAVCODEC_VERSION_TRIPLET " ${versionfile} | awk '{print $'3'}' | sed -e "s%,%.%g"`
+      ffmpeg_version=`$EGREP "define LIBAVCODEC_VERSION_TRIPLET " ${versionfile}  2>&1 | awk '{print $'3'}' | sed -e "s%,%.%g"`
 
       if test x"${ffmpeg_version}" = x ; then
 
         dnl NOTE: the [0-9]*d. pattern discards deb-heads rubbish prefix
-        ffmpeg_version=`$EGREP "define LIBAVCODEC_VERSION " ${versionfile} | awk '{print $'3'}' | sed -e "s%^[[0-9]]d\.%%"` 
+        ffmpeg_version=`$EGREP "define LIBAVCODEC_VERSION " ${versionfile} | awk '{print $'3'}' 2>&1 | sed -e "s%^[[0-9]]d\.%%"` 
 
         if test x"${ffmpeg_version}" = x ; then
-          ffmpeg_version=`$EGREP "define LIBAVCODEC_BUILD " ${versionfile} | awk '{print $'3'}'`
+          ffmpeg_version=`$EGREP "define LIBAVCODEC_BUILD " ${versionfile} 2>&1  | awk '{print $'3'}'`
         fi
       fi
 
@@@@ -255,32 +255,34 @@@@ AC_DEFUN([GNASH_PATH_FFMPEG],
     AC_MSG_RESULT($ffmpeg_version ($ffmpeg_num_version))
 
 
-dnl   AC_EGREP_HEADER(avcodec_decode_audio2, ${avcodec_h}, [avfound=yes], [avfound=no])
-  
-    if test -z "$ffmpeg_num_version" -o "$ffmpeg_num_version" -lt 512800; then
-      AC_MSG_WARN([Wrong ffmpeg/libavcodec version! 51.28.0 or greater required, $ffmpeg_version detected.])
+dnl  minimum supported libavcodec version = Debian stable one = currently Wheezy 7.0 53.35.00
+
+    if test -z "$ffmpeg_num_version" -o "$ffmpeg_num_version" -lt 533500; then
+      AC_MSG_WARN([Wrong ffmpeg/libavcodec version! 53.35.0 or greater required, $ffmpeg_version detected.])
     else
       ffmpeg_version_check=ok
     fi
 
-    if test -z "$ffmpeg_num_version" -o "$ffmpeg_num_version" -lt 514900; then
-      dnl 51.49.0 or higher required
-      AC_MSG_WARN([This version of ffmpeg/libavcodec ($ffmpeg_version) is not able to play VP6A encoded video: 51.49.0 or higher required!])
-    else
-      AC_DEFINE(FFMPEG_VP6A, 1, [Define if ffmpeg can play VP6A.])
-    fi
-
-    if test -z "$ffmpeg_num_version" -o "$ffmpeg_num_version" -lt 514600; then
-      dnl 51.46.0 (r10741) or higher required for CODEC_ID_NELLYMOSER
-      AC_MSG_WARN([This version of ffmpeg/libavcodec ($ffmpeg_version) is not able to decode NELLYMOSER encoded audio: 51.46.0 (r10741) or higher required!])
-    else
-      AC_DEFINE(FFMPEG_NELLYMOSER, 1, [Define if ffmpeg can decode NELLYMOSER audio])
-    fi
   else
     AC_MSG_WARN([Could not check ffmpeg version (can't find avcodec.h file)])
     # ffmpeg_version_check=ok # this is NOT ok, why would it be ?! 
   fi
 
+dnl Check if installed ffmpeg/libav already switched aac decoding from S16 to
+dnl float planar format (FLTP). If recent enough, we'll recommend to install
+dnl a dedicate resampling library to get aac properly decoded.
+dnl Commit in question (3d3cf6745e2a5dc9c377244454c3186d75b177fa) corresponds
+dnl to libavcodec ffmpeg version 54.77.100 / libav version 54.33.0.
+dnl | ffmpeg | 1.0 (54.59.100) S16 | 1.1 (54.86.100) FLTP |
+dnl | libav  | 0.8 (53.35.0)   S16 | 9   (54.35.0)   FLTP |
+
+  if test ${ffmpeg_major_version} -ge 55 -o \
+    \( ${ffmpeg_major_version} -eq 54 -a ${ffmpeg_micro_version} -eq 0 \) -o \
+    \( ${ffmpeg_major_version} -eq 54 -a ${ffmpeg_minor_version} -ge 77 -a \
+    ${ffmpeg_micro_version} -ge 100 \); then
+      ffmpeg_aac_float_planar=yes
+  fi
+
   LIBAVCODEC_IDENT=${ffmpeg_version}
   FFMPEG_CFLAGS="-D__STDC_CONSTANT_MACROS ${ac_cv_path_ffmpeg_incl}"
 
@@@@ -319,6 +321,46 @@@@ dnl   AC_EGREP_HEADER(avcodec_decode_audio2, ${avcodec
      ffmpeg_version_check=
   fi
 
+  AC_MSG_CHECKING([for libavutil/opt.h])
+  have_ffmpeg_libavutil=no
+  if test -f "${ffmpeg_top_incl}/libavutil/opt.h"; then
+    have_ffmpeg_libavutil=yes
+    AC_DEFINE(HAVE_LIBAVUTIL_OPT_H, 1, [Define if libavutil/opt.h is found])
+  fi
+  AC_MSG_RESULT($have_ffmpeg_libavutil)
+
+  AC_MSG_CHECKING([for swresample.h])
+  have_ffmpeg_swresample=no
+  if test -f "${ffmpeg_top_incl}/ffmpeg/swresample.h"; then
+    have_ffmpeg_swresample=yes
+    AC_DEFINE(HAVE_FFMPEG_SWRESAMPLE_H, 1, [Define if swresample.h is found])
+  fi
+  if test -f "${ffmpeg_top_incl}/libswresample/swresample.h"; then
+    have_ffmpeg_swresample=yes
+    AC_DEFINE(HAVE_LIBSWRESAMPLE_SWRESAMPLE_H, 1, [Define if swresample.h is found])
+  fi
+  if test -f "${ffmpeg_top_incl}/swresample.h"; then
+    have_ffmpeg_swresample=yes
+    AC_DEFINE(HAVE_SWRESAMPLE_H, 1, [Define if swresample.h is found])
+  fi
+  AC_MSG_RESULT($have_ffmpeg_swresample)
+
+  AC_MSG_CHECKING([for avresample.h])
+  have_libav_avresample=no
+  if test -f "${ffmpeg_top_incl}/libav/avresample.h"; then
+    have_libav_avresample=yes
+    AC_DEFINE(HAVE_LIBAV_AVRESAMPLE_H, 1, [Define if avresample.h is found])
+  fi
+  if test -f "${ffmpeg_top_incl}/libavresample/avresample.h"; then
+    have_libav_avresample=yes
+    AC_DEFINE(HAVE_LIBAVRESAMPLE_AVRESAMPLE_H, 1, [Define if avresample.h is found])
+  fi
+  if test -f "${ffmpeg_top_incl}/avresample.h"; then
+    have_libav_avresample=yes
+    AC_DEFINE(HAVE_AVRESAMPLE_H, 1, [Define if avresample.h is found])
+  fi
+  AC_MSG_RESULT($have_libav_avresample)
+
   AC_MSG_CHECKING([for libavcodec/vaapi.h])
   have_ffmpeg_vaapi="no"
   if test -f "${ffmpeg_top_incl}/ffmpeg/vaapi.h"; then
@@@@ -416,56 +458,6 @@@@ dnl   AC_EGREP_HEADER(avcodec_decode_audio2, ${avcodec
   dnl
   if test x"${ac_cv_path_ffmpeg_lib}" != x; then
 
-    dnl Look for the DTS library, which is required on some systems. {
-    dnl
-    dnl TODO: skip this if -ldts is already in due to pkg-config 
-    dnl
-    AC_MSG_CHECKING([for libdts library])
-    if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
-      $PKG_CONFIG --exists libdts && libdts=`$PKG_CONFIG --libs-only-l libdts`
-    else
-      libdts=""
-    fi
-    if test x"${libdts}" = x; then
-      if test -f ${top_lib_dir}/libdts.a -o -f ${top_lib_dir}/libdts.${shlibext}; then
-        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ldts"
-        AC_MSG_RESULT(${top_lib_dir}/libdts)
-      else
-        AC_MSG_RESULT(no)
-        if test x${cross_compiling} = xno; then
-          AC_CHECK_LIB(dts, dts_init, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ldts"])
-        fi
-      fi
-    else
-      AC_MSG_RESULT(${libdts})
-      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libdts}"      
-    fi
-    dnl End of DTS library looking }
-	
-    dnl Look for the VORBISENC library, which is required on some systems. {
-    AC_MSG_CHECKING([for libvorbisenc library])
-    if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
-      $PKG_CONFIG --exists vorbisenc && libvorbisenc=`$PKG_CONFIG --libs-only-l vorbisenc`
-    else
-      libvorbisenc=""
-    fi
-    if test x"${libvorbisenc}" = x; then
-      if test -f ${top_lib_dir}/libvorbisenc.a -o -f ${top_lib_dir}/libvorbisenc.${shlibext}; then
-        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lvorbisenc"
-        AC_MSG_RESULT(${top_lib_dir}/libvorbisenc)
-      else
-        AC_MSG_RESULT(no)
-        if test x${cross_compiling} = xno; then
-          AC_CHECK_LIB(vorbisenc, vorbis_encode_init, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lvorbisenc"])
-        fi
-      fi
-    else
-      AC_MSG_RESULT(${libvorbisenc})
-      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libvorbisenc}"
-    fi
-    dnl End of VORBINSEC library looking }
-	
-
     dnl Look for the AVFORMAT library {
     dnl
     dnl TODO: libavformat be mandatory, thus linked in already ?
@@@@ -522,108 +514,77 @@@@ dnl   AC_EGREP_HEADER(avcodec_decode_audio2, ${avcodec
       ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libavutil}"
     fi
     dnl End of AVUTIL library looking }
-	
-    dnl Look for the THEORA library, which is required on some systems. {
+
+    dnl Look for the SWSCALE library {
     dnl
-    dnl TODO: skip this if -ltheora is already in due to pkg-config 
-    dnl
-    AC_MSG_CHECKING([for libtheora library])
+    dnl This is required on some system if ffmpeg is
+    dnl configured with --enable-gpl --enable-swscale.
+    AC_MSG_CHECKING([for libswscale library])
     if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
-      $PKG_CONFIG --exists theora && libtheora=`$PKG_CONFIG --libs-only-l theora`
+      $PKG_CONFIG --exists libswscale  && libsws=`$PKG_CONFIG --libs-only-l libswscale`
     else
-      libtheora=""
+      libsws=""
     fi
-    if test x"${libtheora}" = x; then
-      if test -f ${top_lib_dir}/libtheora.a -o -f ${top_lib_dir}/libtheora.${shlibext}; then
-        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ltheora"
-        AC_MSG_RESULT(${top_lib_dir}/libtheora)
+    if test x"${libsws}" = x; then
+      if test -f ${top_lib_dir}/libswscale.a -o -f ${top_lib_dir}/libswscale.${shlibext}; then
+        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lswscale"
+        AC_MSG_RESULT(yes)
       else
         AC_MSG_RESULT(no)
         if test x${cross_compiling} = xno; then
-          AC_CHECK_LIB(theora, theora_encode_init, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ltheora"])
+          AC_CHECK_LIB(swscale, sws_scale, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lswscale"])
         fi
       fi
     else
-      AC_MSG_RESULT(${libtheora})
-      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libtheora}"      
+      AC_MSG_RESULT(${libsws})
+      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libsws}"
     fi
-    dnl End of THEORA library looking }
+    dnl End of SWSCALE library looking }
 
-    dnl Look for the GSM library, which is required on some systems. {
-    AC_MSG_CHECKING([for libgsm library])
-    if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
-      $PKG_CONFIG --exists gsm && libgsm=`$PKG_CONFIG --libs-only-l gsm`
-    else
-      libgsm=""
-    fi
-
-    if test x"${libgsm}" = x; then
-      if test -f ${top_lib_dir}/libgsm.a -o -f ${top_lib_dir}/libgsm.${shlibext}; then
-        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lgsm"
-        AC_MSG_RESULT(${top_lib_dir}/libgsm)
-      else
-        AC_MSG_RESULT(no)
-        if test x${cross_compiling} = xno; then
-          AC_CHECK_LIB(gsm, gsm_destroy, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lgsm"])
-        fi
-      fi
-    fi
-
-    AC_MSG_RESULT(${libgsm})
-    ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libgsm}"
-    dnl End of GSM library looking }
-    
-    dnl Look for the DC1394 library, which is required on some systems. {
+    dnl Look for the {SW,AV}RESAMPLE libraries {
     dnl
-    dnl TODO: skip this if -ldc1394 is already in due to pkg-config 
-    dnl
-    AC_MSG_CHECKING([for libdc1394 library])
+    AC_MSG_CHECKING([for libswresample library])
     if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
-      $PKG_CONFIG --exists libdc  && libdc=`$PKG_CONFIG --libs-only-l libdc1394`
+      $PKG_CONFIG --exists libswresample  && libswresample=`$PKG_CONFIG --libs-only-l libswresample`
     else
-      libtdc=""
+      libswresample=""
     fi
-    if test x"${libdc}" = x; then
-      if test -f ${top_lib_dir}/libdc1394.a -o -f ${top_lib_dir}/libdc1394.${shlibext}; then
-        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ldc1394"
-        AC_MSG_RESULT(${top_lib_dir}/libdc1394)
+    if test x"${libswresample}" = x; then
+      if test -f ${top_lib_dir}/libswresample.a -o -f ${top_lib_dir}/libswresample.${shlibext}; then
+        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lswresample"
+        AC_MSG_RESULT(yes)
       else
         AC_MSG_RESULT(no)
         if test x${cross_compiling} = xno; then
-          AC_CHECK_LIB(dc1394_control, dc1394_is_camera, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ldc1394_control"])
+          AC_CHECK_LIB(swresample, swresample, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lswresample"])
         fi
       fi
     else
-      AC_MSG_RESULT(${libdc})
-      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libdc}"
+      AC_MSG_RESULT(${libswresample})
+      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libswresample}"
     fi
-    dnl End of DC1394 library looking }
 
-    dnl Look for the SWSCALE library {
-    dnl
-    dnl This is required on some system if ffmpeg is
-    dnl configured with --enable-gpl --enable-swscale.
-    AC_MSG_CHECKING([for libswscale library])
+    AC_MSG_CHECKING([for libavresample library])
     if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
-      $PKG_CONFIG --exists libswscale  && libsws=`$PKG_CONFIG --libs-only-l libswscale`
+      $PKG_CONFIG --exists libavresample  && libavresample=`$PKG_CONFIG --libs-only-l libavresample`
     else
-      libsws=""
+      libavresample=""
     fi
-    if test x"${libsws}" = x; then
-      if test -f ${top_lib_dir}/libswscale.a -o -f ${top_lib_dir}/libswscale.${shlibext}; then
-        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lswscale"
+    if test x"${libavresample}" = x; then
+      if test -f ${top_lib_dir}/libavresample.a -o -f ${top_lib_dir}/libavresample.${shlibext}; then
+        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lavresample"
         AC_MSG_RESULT(yes)
       else
         AC_MSG_RESULT(no)
         if test x${cross_compiling} = xno; then
-          AC_CHECK_LIB(swscale, sws_scale, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lswscale"])
+          AC_CHECK_LIB(avresample, avresample, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lavresample"])
         fi
       fi
     else
-      AC_MSG_RESULT(${libsws})
-      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libsws}"
+      AC_MSG_RESULT(${libavresample})
+      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libavresample}"
     fi
-    dnl End of SWSCALE library looking }
+    dnl End of {SW,AV}RESAMPLE libraries looking }
 
   fi
   dnl End of all optional library tests }
@


1.4
log
@Back port updated FFmpeg backend for Gnash to bring in some
bug fixes and deal with newer FFmpeg.

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: patch-macros_ffmpeg_m4,v 1.3 2012/09/26 19:19:56 brad Exp $
d3 1
a3 1
+++ macros/ffmpeg.m4	Mon Apr  7 06:45:17 2014
d162 59
a220 2
@@@@ -624,6 +666,51 @@@@ dnl   AC_EGREP_HEADER(avcodec_decode_audio2, ${avcodec
       ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libsws}"
d222 3
a224 1
     dnl End of SWSCALE library looking }
d226 64
d291 4
a294 1
+    dnl
d296 2
a297 1
+    if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
d299 2
a300 1
+    else
d302 5
a306 1
+    fi
d311 4
a314 3
+      else
+        AC_MSG_RESULT(no)
+        if test x${cross_compiling} = xno; then
d316 5
a320 3
+        fi
+      fi
+    else
d323 8
a330 2
+    fi
+
d332 2
a333 1
+    if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
d335 2
a336 1
+    else
d338 4
a341 1
+    fi
d345 5
a349 4
+        AC_MSG_RESULT(yes)
+      else
+        AC_MSG_RESULT(no)
+        if test x${cross_compiling} = xno; then
d351 5
a355 3
+        fi
+      fi
+    else
d358 2
a359 1
+    fi
@


1.3
log
@Rip out some autoconf checks which are intended to workaround
FFmpeg quirks with other OS's but result in hidden dependencies
on OpenBSD.

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 79
a81 48
+++ macros/ffmpeg.m4	Tue Sep 25 23:08:43 2012
@@@@ -416,56 +416,6 @@@@ dnl   AC_EGREP_HEADER(avcodec_decode_audio2, ${avcodec
   dnl
   if test x"${ac_cv_path_ffmpeg_lib}" != x; then
 
-    dnl Look for the DTS library, which is required on some systems. {
-    dnl
-    dnl TODO: skip this if -ldts is already in due to pkg-config 
-    dnl
-    AC_MSG_CHECKING([for libdts library])
-    if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
-      $PKG_CONFIG --exists libdts && libdts=`$PKG_CONFIG --libs-only-l libdts`
-    else
-      libdts=""
-    fi
-    if test x"${libdts}" = x; then
-      if test -f ${top_lib_dir}/libdts.a -o -f ${top_lib_dir}/libdts.${shlibext}; then
-        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ldts"
-        AC_MSG_RESULT(${top_lib_dir}/libdts)
-      else
-        AC_MSG_RESULT(no)
-        if test x${cross_compiling} = xno; then
-          AC_CHECK_LIB(dts, dts_init, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ldts"])
-        fi
-      fi
-    else
-      AC_MSG_RESULT(${libdts})
-      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libdts}"      
-    fi
-    dnl End of DTS library looking }
-	
-    dnl Look for the VORBISENC library, which is required on some systems. {
-    AC_MSG_CHECKING([for libvorbisenc library])
-    if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
-      $PKG_CONFIG --exists vorbisenc && libvorbisenc=`$PKG_CONFIG --libs-only-l vorbisenc`
-    else
-      libvorbisenc=""
-    fi
-    if test x"${libvorbisenc}" = x; then
-      if test -f ${top_lib_dir}/libvorbisenc.a -o -f ${top_lib_dir}/libvorbisenc.${shlibext}; then
-        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lvorbisenc"
-        AC_MSG_RESULT(${top_lib_dir}/libvorbisenc)
-      else
-        AC_MSG_RESULT(no)
-        if test x${cross_compiling} = xno; then
-          AC_CHECK_LIB(vorbisenc, vorbis_encode_init, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lvorbisenc"])
-        fi
-      fi
d83 1
a83 2
-      AC_MSG_RESULT(${libvorbisenc})
-      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libvorbisenc}"
a84 2
-    dnl End of VORBINSEC library looking }
-	
d86 78
a163 4
     dnl Look for the AVFORMAT library {
     dnl
     dnl TODO: libavformat be mandatory, thus linked in already ?
@@@@ -523,82 +473,6 @@@@ dnl   AC_EGREP_HEADER(avcodec_decode_audio2, ${avcodec
d165 49
a213 81
     dnl End of AVUTIL library looking }
 	
-    dnl Look for the THEORA library, which is required on some systems. {
-    dnl
-    dnl TODO: skip this if -ltheora is already in due to pkg-config 
-    dnl
-    AC_MSG_CHECKING([for libtheora library])
-    if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
-      $PKG_CONFIG --exists theora && libtheora=`$PKG_CONFIG --libs-only-l theora`
-    else
-      libtheora=""
-    fi
-    if test x"${libtheora}" = x; then
-      if test -f ${top_lib_dir}/libtheora.a -o -f ${top_lib_dir}/libtheora.${shlibext}; then
-        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ltheora"
-        AC_MSG_RESULT(${top_lib_dir}/libtheora)
-      else
-        AC_MSG_RESULT(no)
-        if test x${cross_compiling} = xno; then
-          AC_CHECK_LIB(theora, theora_encode_init, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ltheora"])
-        fi
-      fi
-    else
-      AC_MSG_RESULT(${libtheora})
-      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libtheora}"      
-    fi
-    dnl End of THEORA library looking }
-
-    dnl Look for the GSM library, which is required on some systems. {
-    AC_MSG_CHECKING([for libgsm library])
-    if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
-      $PKG_CONFIG --exists gsm && libgsm=`$PKG_CONFIG --libs-only-l gsm`
-    else
-      libgsm=""
-    fi
-
-    if test x"${libgsm}" = x; then
-      if test -f ${top_lib_dir}/libgsm.a -o -f ${top_lib_dir}/libgsm.${shlibext}; then
-        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lgsm"
-        AC_MSG_RESULT(${top_lib_dir}/libgsm)
-      else
-        AC_MSG_RESULT(no)
-        if test x${cross_compiling} = xno; then
-          AC_CHECK_LIB(gsm, gsm_destroy, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lgsm"])
-        fi
-      fi
-    fi
-
-    AC_MSG_RESULT(${libgsm})
-    ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libgsm}"
-    dnl End of GSM library looking }
-    
-    dnl Look for the DC1394 library, which is required on some systems. {
-    dnl
-    dnl TODO: skip this if -ldc1394 is already in due to pkg-config 
-    dnl
-    AC_MSG_CHECKING([for libdc1394 library])
-    if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
-      $PKG_CONFIG --exists libdc  && libdc=`$PKG_CONFIG --libs-only-l libdc1394`
-    else
-      libtdc=""
-    fi
-    if test x"${libdc}" = x; then
-      if test -f ${top_lib_dir}/libdc1394.a -o -f ${top_lib_dir}/libdc1394.${shlibext}; then
-        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ldc1394"
-        AC_MSG_RESULT(${top_lib_dir}/libdc1394)
-      else
-        AC_MSG_RESULT(no)
-        if test x${cross_compiling} = xno; then
-          AC_CHECK_LIB(dc1394_control, dc1394_is_camera, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -ldc1394_control"])
-        fi
-      fi
-    else
-      AC_MSG_RESULT(${libdc})
-      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libdc}"
-    fi
-    dnl End of DC1394 library looking }
-
     dnl Look for the SWSCALE library {
     dnl
     dnl This is required on some system if ffmpeg is
@


1.2
log
@Bugfixing update to gnash-0.8.10

from brad
@
text
@d1 4
a4 80
$OpenBSD: patch-macros_ffmpeg_m4,v 1.1 2011/04/03 15:02:12 dcoppa Exp $
--- macros/ffmpeg.m4.orig	Sat Feb 26 13:11:08 2011
+++ macros/ffmpeg.m4	Fri Apr  1 23:43:14 2011
@@@@ -22,6 +22,7 @@@@ AC_DEFUN([GNASH_PATH_FFMPEG],
   backupLIBS="$LIBS"
   backupCFLAGS="$CFLAGS"
   avcodec_h=""
+  avcodec_version_h=""
   ffmpeg_top_incl=""
 
   dnl If the user specify an path to include headers from, we assume it's the full
@@@@ -46,6 +47,9 @@@@ AC_DEFUN([GNASH_PATH_FFMPEG],
       else
         AC_MSG_ERROR([${with_ffmpeg_incl} directory does not contain the avcodec.h header])
       fi
+      if test -f ${with_ffmpeg_incl}/version.h; then
+        avcodec_version_h=${with_ffmpeg_incl}/version.h
+      fi
     fi
   ])
 
@@@@ -66,6 +70,9 @@@@ AC_DEFUN([GNASH_PATH_FFMPEG],
           if test -f ${ffmpeg_top_incl}/${i}/avcodec.h; then
             ac_cv_path_ffmpeg_incl="-I`(cd ${ffmpeg_top_incl}; pwd)`"
             avcodec_h="${ffmpeg_top_incl}/${i}/avcodec.h"
+            if test -f ${ffmpeg_top_incl}/${i}/version.h; then
+              avcodec_version_h=${ffmpeg_top_incl}/${i}/version.h
+            fi
             break
           fi
         done
@@@@ -182,14 +189,24 @@@@ AC_DEFUN([GNASH_PATH_FFMPEG],
   dnl a modified form of grepping may be better, making sure all old kinds of
   dnl version numbering fail gracefully.
 
+  versionfile=""
+
   dnl Check avcodec version number, if it was found
-  if test x"${avcodec_h}" != x; then
+  if test x"${avcodec_version_h}" != x; then
+    versionfile=${avcodec_version_h}
+  else
+    if test x"${avcodec_h}" != x; then
+      versionfile=${avcodec_h}
+    fi
+  fi
 
+  if test x"${versionfile}" != x; then
+
     AC_MSG_CHECKING([ffmpeg version])
 
-    ffmpeg_major_version=`$EGREP "define LIBAVCODEC_VERSION_MAJOR " ${avcodec_h} | sed -e "s%[[^0-9]]%%g"`
-    ffmpeg_minor_version=`$EGREP "define LIBAVCODEC_VERSION_MINOR " ${avcodec_h} | sed -e "s%[[^0-9]]%%g"`
-    ffmpeg_micro_version=`$EGREP "define LIBAVCODEC_VERSION_MICRO " ${avcodec_h} | sed -e "s%[[^0-9]]%%g"`
+    ffmpeg_major_version=`$EGREP "define LIBAVCODEC_VERSION_MAJOR " ${versionfile} | sed -e "s%[[^0-9]]%%g"`
+    ffmpeg_minor_version=`$EGREP "define LIBAVCODEC_VERSION_MINOR " ${versionfile} | sed -e "s%[[^0-9]]%%g"`
+    ffmpeg_micro_version=`$EGREP "define LIBAVCODEC_VERSION_MICRO " ${versionfile} | sed -e "s%[[^0-9]]%%g"`
 
     if test x"${ffmpeg_major_version}" != x ; then
 
@@@@ -198,15 +215,15 @@@@ AC_DEFUN([GNASH_PATH_FFMPEG],
     else
 
       dnl #define LIBAVCODEC_VERSION_TRIPLET 51,50,1
-      ffmpeg_version=`$EGREP "define LIBAVCODEC_VERSION_TRIPLET " ${avcodec_h} | awk '{print $'3'}' | sed -e "s%,%.%g"`
+      ffmpeg_version=`$EGREP "define LIBAVCODEC_VERSION_TRIPLET " ${versionfile} | awk '{print $'3'}' | sed -e "s%,%.%g"`
 
       if test x"${ffmpeg_version}" = x ; then
 
         dnl NOTE: the [0-9]*d. pattern discards deb-heads rubbish prefix
-        ffmpeg_version=`$EGREP "define LIBAVCODEC_VERSION " ${avcodec_h} | awk '{print $'3'}' | sed -e "s%^[[0-9]]d\.%%"` 
+        ffmpeg_version=`$EGREP "define LIBAVCODEC_VERSION " ${versionfile} | awk '{print $'3'}' | sed -e "s%^[[0-9]]d\.%%"` 
 
         if test x"${ffmpeg_version}" = x ; then
-          ffmpeg_version=`$EGREP "define LIBAVCODEC_BUILD " ${avcodec_h} | awk '{print $'3'}'`
+          ffmpeg_version=`$EGREP "define LIBAVCODEC_BUILD " ${versionfile} | awk '{print $'3'}'`
         fi
       fi
 
@@@@ -384,32 +401,6 @@@@ dnl   AC_EGREP_HEADER(avcodec_decode_audio2, ${avcodec
d34 28
a61 5
     dnl Look for the VORBISENC library, which is required on some systems. {
     AC_MSG_CHECKING([for libvorbisenc library])
     if test x"$PKG_CONFIG" != x -a x${cross_compiling} = xno; then
@@@@ -525,22 +516,16 @@@@ dnl   AC_EGREP_HEADER(avcodec_decode_audio2, ${avcodec
       libgsm=""
d63 72
a134 22
 
-    dnl OpenBSD seems to have a problem with libgsm.
-    if test x$openbsd_os != xopenbsd; then
-      if test x"${libgsm}" = x; then
-        if test -f ${top_lib_dir}/libgsm.a -o -f ${top_lib_dir}/libgsm.${shlibext}; then
-          ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lgsm"
-          AC_MSG_RESULT(${top_lib_dir}/libgsm)
-        else
-          AC_MSG_RESULT(no)
-          if test x${cross_compiling} = xno; then
-            AC_CHECK_LIB(gsm, gsm_destroy, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lgsm"])
-          fi
+    if test x"${libgsm}" = x; then
+      if test -f ${top_lib_dir}/libgsm.a -o -f ${top_lib_dir}/libgsm.${shlibext}; then
+        ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lgsm"
+        AC_MSG_RESULT(${top_lib_dir}/libgsm)
+      else
+        AC_MSG_RESULT(no)
+        if test x${cross_compiling} = xno; then
+          AC_CHECK_LIB(gsm, gsm_destroy, [ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} -lgsm"])
         fi
       fi
d136 8
a143 5
-      AC_MSG_RESULT(${libgsm})
-      ac_cv_path_ffmpeg_lib="${ac_cv_path_ffmpeg_lib} ${libgsm}"      
     fi
     dnl End of GSM library looking }
     
@


1.1
log
@Some fixes backported from upstream:

- Remove dependency on bzip2.
- Remove some OpenBSD build hacks which have been broken for quite
  awhile and are not necessary anyway.
- Update FFmpeg macro for newer versions.

From Brad.
@
text
@d1 1
a1 1
$OpenBSD$
@

