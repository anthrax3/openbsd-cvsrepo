head	1.3;
access;
symbols
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2007.07.07.10.47.04;	author deanna;	state dead;
branches;
next	1.2;

1.2
date	2007.05.11.20.20.23;	author deanna;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.20.04.06.41;	author jolan;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to gnash 0.8.0.

Tested by ajacoutot@@, Peter Hessler, RD Thrush, jufi@@, ian@@ and
others, thanks!

Help from and ok steven@@.
@
text
@$OpenBSD: patch-server_sprite_instance_cpp,v 1.2 2007/05/11 20:20:23 deanna Exp $
--- server/sprite_instance.cpp.orig	Fri Nov 17 14:08:21 2006
+++ server/sprite_instance.cpp	Fri May 11 12:38:37 2007
@@@@ -1210,12 +1210,12 @@@@ bool sprite_instance::on_event(event_id id)
 	// Keep m_as_environment alive during any method calls!
 	// Don't do this, make sure caller is keeping us alive instead
 	//smart_ptr<as_object>	this_ptr(this);
+	as_value		method;
 
 	bool called = false;
 			
 	// First, check for built-in event handler.
 	    {
-		as_value	method;
 		if (get_event_handler(id, &method))
 		    {
 			// Dispatch.
@@@@ -1235,7 +1235,6 @@@@ bool sprite_instance::on_event(event_id id)
 		const tu_stringi&	method_name = id.get_function_name();
 		if (method_name.length() > 0)
 		    {
-			as_value	method;
 			if (get_member(method_name, &method))
 			    {
 				call_method0(method, &m_as_environment, this);
@


1.2
log
@Security fix for CVE-2007-2500 - a vulnerability in the parser could
lead to remote code execution.  This patch was found in the gnash
bugtracker.

ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-server_sprite_instance_cpp,v 1.1 2006/11/20 04:06:41 jolan Exp $
@


1.1
log
@update to 0.7.2, from maintainer
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 2
+++ server/sprite_instance.cpp	Fri Nov 17 20:38:51 2006
@@@@ -1210,12 +1210,12 @@@@ bool sprite_instance::on_event(event_id 
d18 1
a18 1
@@@@ -1235,7 +1235,6 @@@@ bool sprite_instance::on_event(event_id 
@

