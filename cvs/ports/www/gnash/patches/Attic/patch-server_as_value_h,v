head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2010.10.12.09.38.16;	author dcoppa;	state dead;
branches;
next	1.1;

1.1
date	2008.07.29.18.46.08;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to gnash-0.8.8
From Brad, who also takes maintainership.

OK dcoppa@@, jasper@@
@
text
@$OpenBSD: patch-server_as_value_h,v 1.1 2008/07/29 18:46:08 martynas Exp $
--- server/as_value.h.orig	Tue Jul 29 01:25:32 2008
+++ server/as_value.h	Tue Jul 29 01:25:34 2008
@@@@ -65,6 +65,7 @@@@ class asName;
 // The following template works just like its C counterpart, with added
 // type safety (i.e., they will only compile for floating point arguments).
 
+#ifndef isnan
 template <typename T>
 inline bool
 isnan(const T& num, typename boost::enable_if<boost::is_floating_point<T> >::type* dummy = 0)
@@@@ -72,8 +73,11 @@@@ isnan(const T& num, typename boost::enable_if<boost::i
 	UNUSED(dummy);
 	return num != num;
 }
+#endif
 
+#ifndef isinf
 #define isinf(x) (isnan(x - x))
+#endif
 
 /// Use this methods to obtain a properly-formatted property name
 /// The methods will convert the name to lowercase if the current VM target
@


1.1
log
@don't redefine isnan and isinf.  from sthen@@
ok sthen@@, deanna@@, naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
@

