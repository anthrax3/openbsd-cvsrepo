head	1.4;
access;
symbols
	OPENBSD_5_7:1.3.0.26
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.24
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.22
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.20
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.18
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.16
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.14
	OPENBSD_5_0:1.3.0.12
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.10
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.8
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.1.0.20
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.18
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.16
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.14
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_6:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2015.07.20.00.50.27;	author naddy;	state dead;
branches;
next	1.3;
commitid	vxISeitLIhDE5xAy;

1.3
date	2008.12.09.16.00.18;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.09.15.23.55;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.11.19.12.42;	author naddy;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2005.02.12.12.12.26;	author robert;	state Exp;
branches;
next	;

1.1.4.1
date	2005.02.12.12.13.03;	author robert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@long overdue maintenance update to 1.6.6; ok jeremy@@
@
text
@$OpenBSD: patch-src_psgen_c,v 1.3 2008/12/09 16:00:18 jasper Exp $

Among the changes in this patch are security fixes for CVE-2008-3863
and CVE-2008-4306 . Patch by Werner Fink, Debian #506261

--- src/psgen.c.orig	Thu Jan 24 08:38:58 2002
+++ src/psgen.c	Tue Dec  9 16:54:50 2008
@@@@ -24,6 +24,7 @@@@
  * Boston, MA 02111-1307, USA.
  */
 
+#include <limits.h>
 #include "gsint.h"
 
 /*
@@@@ -124,7 +125,7 @@@@ struct gs_token_st
 	  double xscale;
 	  double yscale;
 	  int llx, lly, urx, ury; /* Bounding box. */
-	  char filename[512];
+	  char filename[PATH_MAX];
 	  char *skipbuf;
 	  unsigned int skipbuf_len;
 	  unsigned int skipbuf_pos;
@@@@ -135,11 +136,11 @@@@ struct gs_token_st
       Color bgcolor;
       struct
 	{
-	  char name[512];
+	  char name[PATH_MAX];
 	  FontPoint size;
 	  InputEncoding encoding;
 	} font;
-      char filename[512];
+      char filename[PATH_MAX];
     } u;
 };
 
@@@@ -248,7 +249,7 @@@@ static int do_print = 1;
 static int user_fontp = 0;
 
 /* The user ^@@font{}-defined font. */
-static char user_font_name[256];
+static char user_font_name[PATH_MAX];
 static FontPoint user_font_pt;
 static InputEncoding user_font_encoding;
 
@@@@ -978,7 +979,8 @@@@ large for page\n"),
 			FATAL ((stderr,
 				_("user font encoding can be only the system's default or `ps'")));
 
-		      strcpy (user_font_name, token.u.font.name);
+		      memset  (user_font_name, 0, sizeof(user_font_name));
+		      strncpy (user_font_name, token.u.font.name, sizeof(user_font_name) - 1);
 		      user_font_pt.w = token.u.font.size.w;
 		      user_font_pt.h = token.u.font.size.h;
 		      user_font_encoding = token.u.font.encoding;
@@@@ -1444,7 +1446,7 @@@@ read_special_escape (InputStream *is, Token *token)
 	  buf[i] = ch;
 	  if (i + 1 >= sizeof (buf))
 	    FATAL ((stderr, _("too long argument for %s escape:\n%.*s"),
-		    escapes[i].name, i, buf));
+		    escapes[e].name, i, buf));
 	}
       buf[i] = '\0';
 
@@@@ -1452,7 +1454,8 @@@@ read_special_escape (InputStream *is, Token *token)
       switch (escapes[e].escape)
 	{
 	case ESC_FONT:
-	  strcpy (token->u.font.name, buf);
+	  memset  (token->u.font.name, 0, sizeof(token->u.font.name));
+	  strncpy (token->u.font.name, buf, sizeof(token->u.font.name) - 1);
 
 	  /* Check for the default font. */
 	  if (strcmp (token->u.font.name, "default") == 0)
@@@@ -1465,7 +1468,8 @@@@ read_special_escape (InputStream *is, Token *token)
 		FATAL ((stderr, _("malformed font spec for ^@@font escape: %s"),
 			token->u.font.name));
 
-	      strcpy (token->u.font.name, cp);
+	      memset  (token->u.font.name, 0, sizeof(token->u.font.name));
+	      strncpy (token->u.font.name, cp, sizeof(token->u.font.name) - 1);
 	      xfree (cp);
 	    }
 	  token->type = tFONT;
@@@@ -1544,7 +1548,8 @@@@ read_special_escape (InputStream *is, Token *token)
 	  break;
 
 	case ESC_SETFILENAME:
-	  strcpy (token->u.filename, buf);
+	  memset  (token->u.filename, 0, sizeof(token->u.font.name));
+	  strncpy (token->u.filename, buf, sizeof(token->u.filename) - 1);
 	  token->type = tSETFILENAME;
 	  break;
 
@@@@ -2034,8 +2039,9 @@@@ dump_ps_page_header (char *fname, int empty)
   else
     {
       ftail++;
-      strncpy (buf, fname, ftail - fname);
-      buf[ftail - fname] = '\0';
+      i = ftail - fname >= sizeof (buf)-1 ? sizeof (buf)-1 : ftail - fname;
+      strncpy (buf, fname, i);
+      buf[i] = '\0';
     }
 
   if (nup > 1)
@@@@ -2385,9 +2391,10 @@@@ recognize_eps_file (Token *token)
   MESSAGE (2, (stderr, "^@@epsf=\"%s\"\n", token->u.epsf.filename));
 
   i = strlen (token->u.epsf.filename);
+  /*
   if (i > 0 && token->u.epsf.filename[i - 1] == '|')
     {
-      /* Read EPS data from pipe. */
+      / * Read EPS data from pipe. * /
       token->u.epsf.pipe = 1;
       token->u.epsf.filename[i - 1] = '\0';
       token->u.epsf.fp = popen (token->u.epsf.filename, "r");
@@@@ -2400,6 +2407,7 @@@@ recognize_eps_file (Token *token)
 	}
     }
   else
+  */
     {
       char *filename;
 
@


1.3
log
@- SECURITY FIX for CVE-2008-3863 and CVE-2008-4306 (buffer overflows)
* patch taken from debian's bugreport #506261.

- specify license version and regen PLIST while here
@
text
@d1 1
a1 1
$OpenBSD: patch-src_psgen_c,v 1.2 2008/12/09 15:23:55 jasper Exp $
@


1.2
log
@- regen patches so next diff will be cleaner
@
text
@d1 5
a5 1
$OpenBSD: patch-src_psgen_c,v 1.1 2005/02/11 19:12:42 naddy Exp $
d7 91
a97 2
+++ src/psgen.c	Tue Dec  9 16:23:25 2008
@@@@ -2034,8 +2034,9 @@@@ dump_ps_page_header (char *fname, int empty)
d109 1
a109 1
@@@@ -2385,9 +2386,10 @@@@ recognize_eps_file (Token *token)
d121 1
a121 1
@@@@ -2400,6 +2402,7 @@@@ recognize_eps_file (Token *token)
@


1.1
log
@SECURITY:
Erik Sjolund discovered several issues in enscript: it suffers from
several buffer overflows (CAN-2004-1186), quotes and shell escape
characters are insufficiently sanitized in filenames (CAN-2004-1185),
and it supported taking input from an arbitrary command pipe, with
unwanted side effects (CAN-2004-1184).

From/via Gentoo.
@
text
@d1 4
a4 4
$OpenBSD$
--- src/psgen.c.orig	Fri Feb 11 20:01:12 2005
+++ src/psgen.c	Fri Feb 11 20:01:25 2005
@@@@ -2034,8 +2034,9 @@@@ dump_ps_page_header (char *fname, int em
@


1.1.4.1
log
@SECURITY:
Erik Sjolund discovered several issues in enscript: it suffers from
several buffer overflows (CAN-2004-1186), quotes and shell escape
characters are insufficiently sanitized in filenames (CAN-2004-1185),
and it supported taking input from an arbitrary command pipe, with
unwanted side effects (CAN-2004-1184).

ok brad@@
@
text
@@


1.1.2.1
log
@SECURITY:
Erik Sjolund discovered several issues in enscript: it suffers from
several buffer overflows (CAN-2004-1186), quotes and shell escape
characters are insufficiently sanitized in filenames (CAN-2004-1185),
and it supported taking input from an arbitrary command pipe, with
unwanted side effects (CAN-2004-1184).

ok brad@@
@
text
@@

