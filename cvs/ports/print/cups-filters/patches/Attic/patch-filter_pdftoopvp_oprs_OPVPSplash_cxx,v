head	1.1;
access;
symbols
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_4:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2014.03.17.08.39.13;	author ajacoutot;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2014.03.17.08.39.13;	author ajacoutot;	state Exp;
branches;
next	;

1.1.4.1
date	2014.03.17.08.52.47;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file patch-filter_pdftoopvp_oprs_OPVPSplash_cxx was initially added on branch OPENBSD_5_4.
@
text
@@


1.1.4.1
log
@SECURITY FIX for CVE-2013-6474, CVE-2013-6475, and CVE-2013-6476.
@
text
@a0 75
$OpenBSD$

SECURITY FIX for CVE-2013-6474, CVE-2013-6475, and CVE-2013-6476.

--- filter/pdftoopvp/oprs/OPVPSplash.cxx.orig	Tue Dec 10 22:20:15 2013
+++ filter/pdftoopvp/oprs/OPVPSplash.cxx	Mon Mar 17 09:49:18 2014
@@@@ -1094,7 +1094,7 @@@@ void OPVPSplash::fillGlyph(SplashCoord x, SplashCoord 
     
     opvpbytes = (m+3)/4;
     opvpbytes *= 4;
-    bp = (Guchar *)gmalloc(opvpbytes*glyph->h);
+    bp = (Guchar *)gmallocn(glyph->h,opvpbytes);
     for (i = 0;i < glyph->h;i++) {
       memcpy(bp+i*opvpbytes,glyph->data+i*m,m);
     }
@@@@ -1238,8 +1238,8 @@@@ SplashError OPVPSplash::fillImageMaskFastWithCTM(Splas
   /* align 4 */
   opvpbytes = (opvpbytes+3)/4;
   opvpbytes *= 4;
-  buf = (Guchar *)gmalloc(opvpbytes*h);
-  lineBuf = (SplashColorPtr)gmalloc(opvpbytes*8);
+  buf = (Guchar *)gmallocn(h,opvpbytes);
+  lineBuf = (SplashColorPtr)gmallocn(8,opvpbytes);
 
   for (i = 0;i < h;i++) {
     int k;
@@@@ -1417,7 +1417,7 @@@@ SplashError OPVPSplash::fillImageMask(SplashImageMaskS
   imat[3] = mat[0]/det;
 
   /* read source image */
-  pixBuf = (SplashColorPtr)gmalloc(h * w);
+  pixBuf = (SplashColorPtr)gmallocn(h , w);
 
   p = pixBuf;
   for (i = 0; i < h; ++i) {
@@@@ -1571,8 +1571,8 @@@@ SplashError OPVPSplash::drawImageNotShear(SplashImageS
     hs = h-1;
     he = -1;
   }
-  buf = (Guchar *)gmalloc(opvpbytes*h);
-  lineBuf = (SplashColorPtr)gmalloc(lineBufSize);
+  buf = (Guchar *)gmallocn(h,opvpbytes);
+  lineBuf = (SplashColorPtr)gmallocn(lineBufSize,1);
   switch (colorMode) {
   case splashModeMono1:
   case splashModeMono8:
@@@@ -1734,7 +1734,7 @@@@ SplashError OPVPSplash::drawImageFastWithCTM(SplashIma
     return splashErrOPVP;
     break;
   }
-  buf = (Guchar *)gmalloc(opvpbytes*h);
+  buf = (Guchar *)gmallocn(h,opvpbytes);
 
   switch (colorMode) {
   case splashModeMono1:
@@@@ -1960,7 +1960,7 @@@@ SplashError OPVPSplash::drawImage(SplashImageSource sr
   }
 
   /* read source image */
-  pixBuf = (SplashColorPtr)gmalloc(h * linesize);
+  pixBuf = (SplashColorPtr)gmallocn(h , linesize);
 
   p = pixBuf;
   for (i = 0; i < h; ++i) {
@@@@ -1968,8 +1968,8 @@@@ SplashError OPVPSplash::drawImage(SplashImageSource sr
     p += linesize;
   }
   /* allocate line buffer */
-  Guchar *lineBuf = (Guchar *)gmalloc(opvpbytes);
-  Guchar *onBuf = (Guchar *)gmalloc(width);
+  Guchar *lineBuf = (Guchar *)gmallocn(opvpbytes,1);
+  Guchar *onBuf = (Guchar *)gmallocn(width,1);
   OPVPSplashClip *clip;
   opvpctm.a = 1.0;
   opvpctm.b = 0.0;
@


1.1.2.1
log
@SECURITY FIX for CVE-2013-6474, CVE-2013-6475, and CVE-2013-6476.
@
text
@a0 75
$OpenBSD$

SECURITY FIX for CVE-2013-6474, CVE-2013-6475, and CVE-2013-6476.

--- filter/pdftoopvp/oprs/OPVPSplash.cxx.orig	Thu Jul 19 15:57:36 2012
+++ filter/pdftoopvp/oprs/OPVPSplash.cxx	Mon Mar 17 09:25:33 2014
@@@@ -1094,7 +1094,7 @@@@ void OPVPSplash::fillGlyph(SplashCoord x, SplashCoord 
     
     opvpbytes = (m+3)/4;
     opvpbytes *= 4;
-    bp = (Guchar *)gmalloc(opvpbytes*glyph->h);
+    bp = (Guchar *)gmallocn(glyph->h,opvpbytes);
     for (i = 0;i < glyph->h;i++) {
       memcpy(bp+i*opvpbytes,glyph->data+i*m,m);
     }
@@@@ -1238,8 +1238,8 @@@@ SplashError OPVPSplash::fillImageMaskFastWithCTM(Splas
   /* align 4 */
   opvpbytes = (opvpbytes+3)/4;
   opvpbytes *= 4;
-  buf = (Guchar *)gmalloc(opvpbytes*h);
-  lineBuf = (SplashColorPtr)gmalloc(opvpbytes*8);
+  buf = (Guchar *)gmallocn(h,opvpbytes);
+  lineBuf = (SplashColorPtr)gmallocn(8,opvpbytes);
 
   for (i = 0;i < h;i++) {
     int k;
@@@@ -1417,7 +1417,7 @@@@ SplashError OPVPSplash::fillImageMask(SplashImageMaskS
   imat[3] = mat[0]/det;
 
   /* read source image */
-  pixBuf = (SplashColorPtr)gmalloc(h * w);
+  pixBuf = (SplashColorPtr)gmallocn(h , w);
 
   p = pixBuf;
   for (i = 0; i < h; ++i) {
@@@@ -1571,8 +1571,8 @@@@ SplashError OPVPSplash::drawImageNotShear(SplashImageS
     hs = h-1;
     he = -1;
   }
-  buf = (Guchar *)gmalloc(opvpbytes*h);
-  lineBuf = (SplashColorPtr)gmalloc(lineBufSize);
+  buf = (Guchar *)gmallocn(h,opvpbytes);
+  lineBuf = (SplashColorPtr)gmallocn(lineBufSize,1);
   switch (colorMode) {
   case splashModeMono1:
   case splashModeMono8:
@@@@ -1734,7 +1734,7 @@@@ SplashError OPVPSplash::drawImageFastWithCTM(SplashIma
     return splashErrOPVP;
     break;
   }
-  buf = (Guchar *)gmalloc(opvpbytes*h);
+  buf = (Guchar *)gmallocn(h,opvpbytes);
 
   switch (colorMode) {
   case splashModeMono1:
@@@@ -1960,7 +1960,7 @@@@ SplashError OPVPSplash::drawImage(SplashImageSource sr
   }
 
   /* read source image */
-  pixBuf = (SplashColorPtr)gmalloc(h * linesize);
+  pixBuf = (SplashColorPtr)gmallocn(h , linesize);
 
   p = pixBuf;
   for (i = 0; i < h; ++i) {
@@@@ -1968,8 +1968,8 @@@@ SplashError OPVPSplash::drawImage(SplashImageSource sr
     p += linesize;
   }
   /* allocate line buffer */
-  Guchar *lineBuf = (Guchar *)gmalloc(opvpbytes);
-  Guchar *onBuf = (Guchar *)gmalloc(width);
+  Guchar *lineBuf = (Guchar *)gmallocn(opvpbytes,1);
+  Guchar *onBuf = (Guchar *)gmallocn(width,1);
   OPVPSplashClip *clip;
   opvpctm.a = 1.0;
   opvpctm.b = 0.0;
@

