head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.08.19.07.45.35;	author ajacoutot;	state dead;
branches;
next	1.3;
commitid	fNBsQM404JPopwid;

1.3
date	2015.07.12.19.14.54;	author kili;	state Exp;
branches;
next	1.2;
commitid	xSzCTPGPhyNCLIMc;

1.2
date	2013.03.10.08.17.53;	author ajacoutot;	state dead;
branches
	1.2.2.1
	1.2.4.1;
next	1.1;

1.1
date	2013.01.21.19.08.49;	author kili;	state Exp;
branches;
next	;

1.2.2.1
date	2014.03.17.08.39.13;	author ajacoutot;	state Exp;
branches;
next	;

1.2.4.1
date	2014.03.17.08.52.47;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to cups-filters-1.0.73.
Add "ldap" FLAVOR for for browsing remote printer queues via LDAP.
@
text
@$OpenBSD: patch-filter_pdftoopvp_OPVPOutputDev_cxx,v 1.3 2015/07/12 19:14:54 kili Exp $

Let it build with poppler-0.34.

--- filter/pdftoopvp/OPVPOutputDev.cxx.orig	Fri Jun 26 17:45:26 2015
+++ filter/pdftoopvp/OPVPOutputDev.cxx	Sun Jul 12 17:35:33 2015
@@@@ -1811,8 +1811,12 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
 #if POPPLER_VERSION_MAJOR <= 0 && (POPPLER_VERSION_MINOR <= 20 || (POPPLER_VERSION_MINOR == 21 && POPPLER_VERSION_MICRO <= 2))
   maskSplash->drawImage(&imageSrc, &imgMaskData,
 			splashModeMono8, gFalse, maskWidth, maskHeight, mat);
-#else
+#elseif POPPLER_VERSION_MAJOR <= 0 && POPPLER_VERSION_MINOR <= 33
   maskSplash->drawImage(&imageSrc, &imgMaskData,
+			splashModeMono8, gFalse, maskWidth, maskHeight,
+                        mat,gFalse);
+#else
+  maskSplash->drawImage(&imageSrc, NULL, &imgMaskData,
 			splashModeMono8, gFalse, maskWidth, maskHeight,
                         mat,gFalse);
 #endif
@


1.3
log
@Let it build with upcoming poppler-0.34.

ok aja@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.2
log
@Update to cups-filters-1.0.30.
@
text
@d1 1
a1 1
$OpenBSD: patch-filter_pdftoopvp_OPVPOutputDev_cxx,v 1.1 2013/01/21 19:08:49 kili Exp $
d3 1
a3 2
Fix build with poppler-0.22. A similar fix was already in the snapshot
of january 19th and will probably be included in cups-filters-1.0.30.
d5 4
a8 5
--- filter/pdftoopvp/OPVPOutputDev.cxx.orig	Fri Jul 20 10:22:23 2012
+++ filter/pdftoopvp/OPVPOutputDev.cxx	Sat Jan 19 10:54:05 2013
@@@@ -1805,7 +1805,7 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
   maskColor[0] = 0;
   maskSplash->clear(maskColor);
d10 11
a20 5
-			splashModeMono8, gFalse, maskWidth, maskHeight, mat);
+			splashModeMono8, gFalse, maskWidth, maskHeight, mat, gFalse);
   delete imgMaskData.imgStr;
   maskStr->close();
   gfree(imgMaskData.lookup);
@


1.2.4.1
log
@SECURITY FIX for CVE-2013-6474, CVE-2013-6475, and CVE-2013-6476.
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 1
SECURITY FIX for CVE-2013-6474, CVE-2013-6475, and CVE-2013-6476.
d6 11
a16 130
--- filter/pdftoopvp/OPVPOutputDev.cxx.orig	Tue Dec 10 22:20:15 2013
+++ filter/pdftoopvp/OPVPOutputDev.cxx	Mon Mar 17 09:49:11 2014
@@@@ -147,8 +147,8 @@@@ T3FontCache::T3FontCache(Ref *fontIDA, double m11A, do
   } else {
     cacheSets = 1;
   }
-  cacheData = (Guchar *)gmalloc(cacheSets * cacheAssoc * glyphSize);
-  cacheTags = (T3FontCacheTag *)gmalloc(cacheSets * cacheAssoc *
+  cacheData = (Guchar *)gmallocn3(cacheSets , cacheAssoc , glyphSize);
+  cacheTags = (T3FontCacheTag *)gmallocn3(cacheSets , cacheAssoc ,
 					sizeof(T3FontCacheTag));
   for (i = 0; i < cacheSets * cacheAssoc; ++i) {
     cacheTags[i].mru = i & (cacheAssoc - 1);
@@@@ -1416,7 +1416,7 @@@@ void OPVPOutputDev::drawImage(GfxState *state, Object 
     switch (colorMode) {
     case splashModeMono1:
     case splashModeMono8:
-      imgData.lookup = (SplashColorPtr)gmalloc(n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,1);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getGray(&pix, &gray);
@@@@ -1424,7 +1424,7 @@@@ void OPVPOutputDev::drawImage(GfxState *state, Object 
       }
       break;
     case splashModeRGB8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1434,7 +1434,7 @@@@ void OPVPOutputDev::drawImage(GfxState *state, Object 
       }
       break;
     case splashModeBGR8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1445,7 +1445,7 @@@@ void OPVPOutputDev::drawImage(GfxState *state, Object 
       break;
 #if SPLASH_CMYK
     case splashModeCMYK8:
-      imgData.lookup = (SplashColorPtr)gmalloc(4 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,4);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getCMYK(&pix, &cmyk);
@@@@ -1672,7 +1672,7 @@@@ void OPVPOutputDev::drawMaskedImage(GfxState *state, O
     switch (colorMode) {
     case splashModeMono1:
     case splashModeMono8:
-      imgData.lookup = (SplashColorPtr)gmalloc(n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,1);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getGray(&pix, &gray);
@@@@ -1680,7 +1680,7 @@@@ void OPVPOutputDev::drawMaskedImage(GfxState *state, O
       }
       break;
     case splashModeRGB8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1690,7 +1690,7 @@@@ void OPVPOutputDev::drawMaskedImage(GfxState *state, O
       }
       break;
     case splashModeBGR8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1701,7 +1701,7 @@@@ void OPVPOutputDev::drawMaskedImage(GfxState *state, O
       break;
 #if SPLASH_CMYK
     case splashModeCMYK8:
-      imgData.lookup = (SplashColorPtr)gmalloc(4 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,4);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getCMYK(&pix, &cmyk);
@@@@ -1793,7 +1793,7 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
   imgMaskData.height = maskHeight;
   imgMaskData.y = 0;
   n = 1 << maskColorMap->getBits();
-  imgMaskData.lookup = (SplashColorPtr)gmalloc(n);
+  imgMaskData.lookup = (SplashColorPtr)gmallocn(n,1);
   for (i = 0; i < n; ++i) {
     pix = (Guchar)i;
     maskColorMap->getGray(&pix, &gray);
@@@@ -1839,7 +1839,7 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
     switch (colorMode) {
     case splashModeMono1:
     case splashModeMono8:
-      imgData.lookup = (SplashColorPtr)gmalloc(n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,1);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getGray(&pix, &gray);
@@@@ -1847,7 +1847,7 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
       }
       break;
     case splashModeRGB8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1857,7 +1857,7 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
       }
       break;
     case splashModeBGR8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1868,7 +1868,7 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
       break;
 #if SPLASH_CMYK
     case splashModeCMYK8:
-      imgData.lookup = (SplashColorPtr)gmalloc(4 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,4);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getCMYK(&pix, &cmyk);
@


1.2.2.1
log
@SECURITY FIX for CVE-2013-6474, CVE-2013-6475, and CVE-2013-6476.
@
text
@d1 1
a1 1
$OpenBSD$
d3 2
a4 1
SECURITY FIX for CVE-2013-6474, CVE-2013-6475, and CVE-2013-6476.
d6 11
a16 130
--- filter/pdftoopvp/OPVPOutputDev.cxx.orig	Wed Jan  9 11:34:42 2013
+++ filter/pdftoopvp/OPVPOutputDev.cxx	Mon Mar 17 09:25:24 2014
@@@@ -147,8 +147,8 @@@@ T3FontCache::T3FontCache(Ref *fontIDA, double m11A, do
   } else {
     cacheSets = 1;
   }
-  cacheData = (Guchar *)gmalloc(cacheSets * cacheAssoc * glyphSize);
-  cacheTags = (T3FontCacheTag *)gmalloc(cacheSets * cacheAssoc *
+  cacheData = (Guchar *)gmallocn3(cacheSets , cacheAssoc , glyphSize);
+  cacheTags = (T3FontCacheTag *)gmallocn3(cacheSets , cacheAssoc ,
 					sizeof(T3FontCacheTag));
   for (i = 0; i < cacheSets * cacheAssoc; ++i) {
     cacheTags[i].mru = i & (cacheAssoc - 1);
@@@@ -1416,7 +1416,7 @@@@ void OPVPOutputDev::drawImage(GfxState *state, Object 
     switch (colorMode) {
     case splashModeMono1:
     case splashModeMono8:
-      imgData.lookup = (SplashColorPtr)gmalloc(n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,1);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getGray(&pix, &gray);
@@@@ -1424,7 +1424,7 @@@@ void OPVPOutputDev::drawImage(GfxState *state, Object 
       }
       break;
     case splashModeRGB8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1434,7 +1434,7 @@@@ void OPVPOutputDev::drawImage(GfxState *state, Object 
       }
       break;
     case splashModeBGR8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1445,7 +1445,7 @@@@ void OPVPOutputDev::drawImage(GfxState *state, Object 
       break;
 #if SPLASH_CMYK
     case splashModeCMYK8:
-      imgData.lookup = (SplashColorPtr)gmalloc(4 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,4);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getCMYK(&pix, &cmyk);
@@@@ -1672,7 +1672,7 @@@@ void OPVPOutputDev::drawMaskedImage(GfxState *state, O
     switch (colorMode) {
     case splashModeMono1:
     case splashModeMono8:
-      imgData.lookup = (SplashColorPtr)gmalloc(n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,1);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getGray(&pix, &gray);
@@@@ -1680,7 +1680,7 @@@@ void OPVPOutputDev::drawMaskedImage(GfxState *state, O
       }
       break;
     case splashModeRGB8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1690,7 +1690,7 @@@@ void OPVPOutputDev::drawMaskedImage(GfxState *state, O
       }
       break;
     case splashModeBGR8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1701,7 +1701,7 @@@@ void OPVPOutputDev::drawMaskedImage(GfxState *state, O
       break;
 #if SPLASH_CMYK
     case splashModeCMYK8:
-      imgData.lookup = (SplashColorPtr)gmalloc(4 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,4);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getCMYK(&pix, &cmyk);
@@@@ -1793,7 +1793,7 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
   imgMaskData.height = maskHeight;
   imgMaskData.y = 0;
   n = 1 << maskColorMap->getBits();
-  imgMaskData.lookup = (SplashColorPtr)gmalloc(n);
+  imgMaskData.lookup = (SplashColorPtr)gmallocn(n,1);
   for (i = 0; i < n; ++i) {
     pix = (Guchar)i;
     maskColorMap->getGray(&pix, &gray);
@@@@ -1839,7 +1839,7 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
     switch (colorMode) {
     case splashModeMono1:
     case splashModeMono8:
-      imgData.lookup = (SplashColorPtr)gmalloc(n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,1);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getGray(&pix, &gray);
@@@@ -1847,7 +1847,7 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
       }
       break;
     case splashModeRGB8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1857,7 +1857,7 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
       }
       break;
     case splashModeBGR8:
-      imgData.lookup = (SplashColorPtr)gmalloc(3 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,3);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getRGB(&pix, &rgb);
@@@@ -1868,7 +1868,7 @@@@ void OPVPOutputDev::drawSoftMaskedImage(GfxState *stat
       break;
 #if SPLASH_CMYK
     case splashModeCMYK8:
-      imgData.lookup = (SplashColorPtr)gmalloc(4 * n);
+      imgData.lookup = (SplashColorPtr)gmallocn(n,4);
       for (i = 0; i < n; ++i) {
 	pix = (Guchar)i;
 	colorMap->getCMYK(&pix, &cmyk);
@


1.1
log
@Fix build with poppler-0.22.

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD$
@

