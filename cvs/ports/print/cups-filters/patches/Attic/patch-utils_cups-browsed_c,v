head	1.4;
access;
symbols
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_5:1.4.0.2;
locks; strict;
comment	@# @;


1.4
date	2013.05.13.08.21.44;	author ajacoutot;	state dead;
branches
	1.4.2.1
	1.4.4.1;
next	1.3;

1.3
date	2013.04.10.17.17.23;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2013.04.10.17.07.39;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2013.03.10.08.17.53;	author ajacoutot;	state Exp;
branches;
next	;

1.4.2.1
date	2014.04.03.10.10.50;	author ajacoutot;	state Exp;
branches;
next	;

1.4.4.1
date	2015.03.01.10.00.59;	author ajacoutot;	state Exp;
branches;
next	;
commitid	CkCrJdUmZYGKmywx;


desc
@@


1.4
log
@Update to cups-filters-1.0.34.
@
text
@$OpenBSD: patch-utils_cups-browsed_c,v 1.3 2013/04/10 17:17:23 ajacoutot Exp $

http://bzr.linuxfoundation.org/loggerhead/openprinting/cups-filters/revision/7062

--- utils/cups-browsed.c.orig	Thu Apr  4 17:23:07 2013
+++ utils/cups-browsed.c	Wed Apr 10 19:16:32 2013
@@@@ -24,6 +24,9 @@@@
 #include <ctype.h>
 #include <errno.h>
 #include <ifaddrs.h>
+#if defined(__OpenBSD__)
+#include <sys/socket.h>
+#endif /* __OpenBSD__ */
 #include <net/if.h>
 #include <netinet/in.h>
 #include <resolv.h>
@


1.4.4.1
log
@Merge uptream SECURITY FIX in remove_bad_chars() (Bug #1265).
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
http://bzr.linuxfoundation.org/loggerhead/openprinting/cups-filters/revision/7333#utils/cups-browsed.c
d5 12
a16 10
--- utils/cups-browsed.c.orig	Wed May  7 16:09:53 2014
+++ utils/cups-browsed.c	Sun Mar  1 10:45:17 2015
@@@@ -627,6 +627,7 @@@@ remove_bad_chars(const char *str_orig, /* I - Original
 		       str[i] == '.' || str[i] == ','))) {
       /* Letter or number, keep it */
       havedash = 0;
+      str[j] = str[i];
     } else {
       /* Replace all other characters by a single '-' */
       if (havedash == 1)
@


1.4.2.1
log
@SECURITY FIX to prevent arbitrary code injection.
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 5
https://bazaar.launchpad.net/~ubuntu-branches/ubuntu/trusty/cups-filters/trusty/revision/69?start_revid=69
cups-browsed: SECURITY FIX to prevent arbitrary code injection into the
System V interface scripts generated for queues for discovered native
IPP printers by a malicious IPP print service with forged make/model
and/or PDL string.
d5 12
a16 61
--- utils/cups-browsed.c.orig	Wed Jan 15 22:19:53 2014
+++ utils/cups-browsed.c	Thu Apr  3 12:01:14 2014
@@@@ -552,7 +552,28 @@@@ create_local_queue (const char *name,
   return NULL;
 }
 
-char *generate_queue_name(const char *str_orig)
+/*
+ * Remove all illegal characters and replace each group of such characters
+ * by a single dash
+ *
+ * mode = 0: Only allow letters, numbers, and dashes, for turning make/model
+ *           info into a valid print queue name or inro a string which can
+ *           be supplied as option value in a filter command line without
+ *           need of quoting
+ * mode = 1: Allow also '/', '.', ',', '_', for cleaning up MIME type
+ *           strings (here available Page Description Languages, PDLs) to
+ *           supply them on a filter command line without quoting
+ *
+ * Especially this prevents from arbitrary code execution by interface scripts
+ * generated for print queues to native IPP printers when a malicious IPP
+ * print service with forged PDL and/or make/model info gets broadcasted into
+ * the local network.
+ */
+
+char *                                 /* O - Cleaned string */
+remove_bad_chars(const char *str_orig, /* I - Original string */
+		 int mode)             /* I - 0: Make/Model, queue name */
+                                       /*     1: MIME types/PDLs */
 {
   int i, j;
   int havedash = 0;
@@@@ -565,7 +586,9 @@@@ char *generate_queue_name(const char *str_orig)
   for (i = 0, j = 0; i < strlen(str); i++, j++) {
     if (((str[i] >= 'A') && (str[i] <= 'Z')) ||
 	((str[i] >= 'a') && (str[i] <= 'z')) ||
-	((str[i] >= '0') && (str[i] <= '9'))) {
+	((str[i] >= '0') && (str[i] <= '9')) ||
+	(mode == 1 && (str[i] == '/' || str[i] == '_' ||
+		       str[i] == '.' || str[i] == ','))) {
       /* Letter or number, keep it */
       havedash = 0;
     } else {
@@@@ -939,7 +962,7 @@@@ void generate_local_queue(const char *host,
 	if (entry) {
 	  avahi_string_list_get_pair(entry, &key, &value, NULL);
 	  if (key && value && !strcmp(key, *f) && strlen(value) >= 3) {
-	    remote_queue = generate_queue_name(value);
+	    remote_queue = remove_bad_chars(value, 0);
 	    break;
 	  }
 	}
@@@@ -948,7 +971,7 @@@@ void generate_local_queue(const char *host,
       if (entry) {
 	avahi_string_list_get_pair(entry, &key, &value, NULL);
 	if (key && value && !strcmp(key, "pdl") && strlen(value) >= 3) {
-	  pdl = strdup(value);
+	  pdl = remove_bad_chars(value, 1);
 	}
       }
     }
@


1.3
log
@Forgot to sync the patch in previous.
@
text
@d1 1
a1 1
$OpenBSD: patch-utils_cups-browsed_c,v 1.2 2013/04/10 17:07:39 ajacoutot Exp $
@


1.2
log
@Committed upstream.
@
text
@d1 1
a1 1
$OpenBSD: patch-utils_cups-browsed_c,v 1.1 2013/03/10 08:17:53 ajacoutot Exp $
d5 3
a7 3
--- utils/cups-browsed.c.orig	Sun Mar 10 08:54:33 2013
+++ utils/cups-browsed.c	Sun Mar 10 08:54:56 2013
@@@@ -24,6 +24,7 @@@@
d11 1
d13 1
@


1.1
log
@Update to cups-filters-1.0.30.
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
https://bugs.linuxfoundation.org/show_bug.cgi?id=1103
@

