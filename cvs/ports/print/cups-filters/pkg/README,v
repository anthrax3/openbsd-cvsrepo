head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.6
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.2
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3;
locks; strict;
comment	@# @;


1.9
date	2015.04.04.09.36.37;	author ajacoutot;	state Exp;
branches;
next	1.8;
commitid	Dga8Cwfbantp8VkD;

1.8
date	2014.11.02.14.38.38;	author ajacoutot;	state Exp;
branches;
next	1.7;
commitid	dgqfV75rS4k9h8Bn;

1.7
date	2014.07.12.14.56.46;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	14MokEYFIEXs6es3;

1.6
date	2014.07.12.13.41.47;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	CC2Szyf2ZEuFbbEs;

1.5
date	2014.07.10.13.09.06;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	Xpirey71VpT09196;

1.4
date	2014.03.09.21.45.36;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2014.02.08.18.01.00;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2014.02.08.13.49.21;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2013.12.12.14.46.53;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.9
log
@dbus_daemon -> messagebus
@
text
@$OpenBSD: README,v 1.8 2014/11/02 14:38:38 ajacoutot Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Bonjour broadcasts of shared, remote printers
=============================================

The cups-browsed(8) daemon can be used to browse Bonjour (mDNS)
broadcasts of remote printers and create/remove local raw queues
pointing to these printers. This requires the avahi-daemon(8) to be
running first. To start it at boot time, the rc.conf.local(8)
pkg_scripts line can be edited as follow:

    pkg_scripts=[...] messagebus avahi_daemon cups_browsed [...]

lpd(8) using direct printing with foomatic-rip(1)
=================================================

The Foomatic framework supports direct printing which does not rely on
CUPS (nor any spooler) and can thus be used with lpd(8).

Complete documentation can be found at:
    http://www.linuxfoundation.org/collaborate/workgroups/openprinting/database/nospoolerdocumentation

Foomatic configuration
----------------------
A specific PPD file has to be created for the printer. Refer to the
documentation that comes with the foomatic-db-engine package to learn
how to generate PPD files
(cf. ${LOCALBASE}/share/doc/pkg-readmes/foomatic-db-engine-*).

# mkdir -p ${SYSCONFDIR}/foomatic/direct
# foomatic-ppdfile -p 'Samsung-ML-2850D' -d 'Postscript' > ${SYSCONFDIR}/foomatic/direct/samsung-ml2850d.ppd

Alternatively, you can look under
    ${LOCALBASE}/share/foomatic/db/source/PPD
for existing PPD files matching your printer (in which case the PPD file
can be copied and/or gunzip'd under ${SYSCONFDIR}/foomatic/direct).

Input filter script
-------------------
Non-postscript files must be converted before being sent to
foomatic-rip(1). Several packages can be used for that, a2ps being the
most complete.
Note that a2ps(1) requires external helper tools for converting files.
They can be configured under ${SYSCONFDIR}/a2ps{,-site}.cfg. By default,
converting images requires the ImageMagick package.

Here's a sample converter script:

---8<-------------------------------------------------------------------
#!/bin/sh

${LOCALBASE}/bin/a2ps -BRq --columns=1 -o - | \
	${PREFIX}/bin/foomatic-rip -P samsung-ml2850d
---8<-------------------------------------------------------------------

Additional options can be passed to foomatic-rip(1).
e.g.
- to print in duplex mode: -o duplex
- to set the page size to letter: -o pagesize=letter

Default options can be set by editing the PPD file.

To use the above script as an input filter for lpd(8), see the next
sections (make sure the script is executable).

lpd(8): USB printer printcap(5) example
---------------------------------------
lp|samsung|Samsung-ML-2850D:\
	:lp=/dev/ulpt0:\
	:if=/path/to/script.sh:\
	:sd=/var/spool/output:\
	:lf=/var/log/lpd-errs:\
	:sh:

lpd(8): network printer printcap(5) example
-------------------------------------------
rp|samsung|Samsung-ML-2850D:\
	:lp=9100@@1.2.3.4:\
	:if=/path/to/script.sh:\
	:sd=/var/spool/output:\
	:lf=/var/log/lpd-errs:\
	:sh:
(where 1.2.3.4 is the printer IP address and 9100 the printer stream port)

foomatic-rip(1) does *not* speak LPD (port 515).
If the printer does not support raw printing over port 9100, it must be
setup locally on a print server (see above for an example using USB)
then accessed over LPD by the clients (there is no need to setup any
print filter on the clients since it will run on the print server).
@


1.8
log
@dbus_daemon needed in pkg_scripts.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.7 2014/07/12 14:56:46 ajacoutot Exp $
d16 1
a16 1
    pkg_scripts=[...] dbus_daemon avahi_daemon cups_browsed [...]
@


1.7
log
@Tweak.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.6 2014/07/12 13:41:47 ajacoutot Exp $
d10 5
a14 5
The cups-browsed(8) daemon can be used to browse Bonjour broadcasts of
remote printers and create/remove local raw queues pointing to these
printers. This requires the avahi-daemon(8) to be running first. To
start it at boot time, the rc.conf.local(8) pkg_scripts line can be
edited as follow:
d16 1
a16 1
    pkg_scripts=[...] avahi_daemon cups_browsed [...]
@


1.6
log
@pkg_scripts is not a variable anymore.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.5 2014/07/10 13:09:06 ajacoutot Exp $
d16 1
a16 1
    pkg_scripts=... avahi_daemon cups_browsed ...
@


1.5
log
@rc.conf.local is in man(1) section 8, at least for now.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.4 2014/03/09 21:45:36 ajacoutot Exp $
d13 2
a14 2
start it at boot time, the following line can be added to
rc.conf.local(8):
d16 1
a16 1
    pkg_scripts="${pkg_scripts} avahi_daemon cups_browsed"
@


1.4
log
@Update cups-filters-1.0.46.
Rework documentation.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.3 2014/02/08 18:01:00 ajacoutot Exp $
d14 1
a14 1
rc.conf.local(5):
@


1.3
log
@remote printer -> network printer -- to unconfuse things.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.2 2014/02/08 13:49:21 ajacoutot Exp $
d7 11
d27 2
a28 2
Configuration
-------------
d34 2
a35 2
# mkdir -p /etc/foomatic/direct
# foomatic-ppdfile -p 'Samsung-ML-2850D' -d 'Postscript' > /etc/foomatic/direct/samsung-ml2850d.ppd
d37 15
a51 4
Non-postscript files can be printed after having been pre-processed and
converted. Several packages can be used for that, a2ps being the most
complete.
Here's a sample pre-process filter script:
d65 1
a65 3
a2ps(1) requires external helper tools for converting files, they can be
configured under ${SYSCONFDIR}/a2ps{,-site}.cfg.
By default, converting images requires the ImageMagick package.
d67 2
a68 2
To use the pre-process filter script as an input filter for lpd(8), the
corresponding printcap(5) entry can be used:
d70 2
a71 2
Locally connected printer (USB)
-------------------------------
d74 1
a74 1
	:if=/path/to/pre-process.sh:\
d79 2
a80 2
Network printer
---------------
d82 2
a83 2
	:lp=515@@1.2.3.4:\
	:if=/path/to/pre-process.sh:\
d87 7
a93 1
(where 1.2.3.4 is the printer IP address and 515 the spooler port)
@


1.2
log
@Better, faster, stronger (tm) steps to setup a local printer with lpd(8).
Mostly from stsp@@ (testing included).

I can't test a networked printer setup, Miod only has a serial banknote
plate available...
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1 2013/12/12 14:46:53 ajacoutot Exp $
d59 2
a60 2
Remote printer
--------------
@


1.1
log
@Major update to cups-filters-1.0.42.
- cups-filters is now the new upstream for foomatic-rip(1)
- create a readme to explain how to use lpd(8) with this since support
for all the non-CUPS printing environments has been discontinued.

Only slighly tested but putting it now to ease^force testing.
@
text
@d1 1
a1 1
$OpenBSD: README.template,v 1.4 2011/06/02 13:44:40 ajacoutot Exp $
d7 2
a8 2
Direct printing with foomatic-rip(1)
====================================
d11 1
a11 2
CUPS (nor any spooler) and can thus be used with lpd(8) or directly on
the command line.
d18 1
a18 1
A specific PPD file must be created for each printer. Refer to the
a25 29
The following line must be added to the top of the PPD file (preferably
just after the '*PPD-Adobe: "4.3"' line):
*FoomaticRIPPostPipe: "| /usr/bin/nc -w 1 $HOST $PORT"

Replace $HOST with the hostname (or IP address) of the printer and $PORT
with its listening raw print port (usually 9100).

For local printers, the following needs to be used instead:
- parallel:
*FoomaticRIPPostPipe: "| cat &gt; /dev/lpt0"
- USB:
*FoomaticRIPPostPipe: "| cat &gt; /dev/ulpt0"

Direct printing test
--------------------
Everything should now be set up for printing postscript files:
$ foomatic-rip -P samsung-ml2850d /path/to/postscript_file

A default printer can be setup so that the PPD file needs not to be
specified ("-P samsung-ml2850d"). It is setup with one line in:
	${SYSCONFDIR}/foomatic/direct/.config
e.g
default: samsung-ml2850d

Additional options can be passed to foomatic-rip(1).
e.g.
- to print in duplex mode: -o duplex
- to set the page size to letter: -o pagesize=letter

d29 1
a29 13
e.g.
$ cat /path/to/file | \
	${LOCALBASE}/bin/a2ps -BRq --columns=1 -o - | \
	${PREFIX}/bin/foomatic-rip -P samsung-ml2850d

a2ps(1) requires external helper tools for converting files, they can be
configured under ${SYSCONFDIR}/a2ps{,-site}.cfg.
By default, converting images requires the ImageMagick package.

lpd(8)
------
Putting it all together, it is now possible to hook it up with lpd(8) by
creating a script similar to this one:
d38 4
a41 1
Then adding the following printcap(5) entry:
d43 9
d53 11
a63 2
	:lp=/dev/null:\
	:if=/path/to/printfilter:\
d67 1
@

