head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.58
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.54
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.56
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.52
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.50
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.48
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.46
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.44
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.42
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.40
	OPENBSD_5_0:1.1.0.38
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.36
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.34
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.32
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.30
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.28
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.26
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.24
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.22
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.20
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.18
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.16
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.14
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.12
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.10
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.8
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.4
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2002.04.26.01.44.08;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@brute-force fixing of ghostview for sparc64: add prototypes everywhere,
and don't pass abuse-cast int to XtPointer.

pval@@ says it works.
@
text
@$OpenBSD$
--- main.c.orig	Sat Jul 24 04:29:12 1993
+++ main.c	Sun Apr 21 01:04:00 2002
@@@@ -53,6 +53,11 @@@@
 #include "gv.h"
 #include "ps.h"
 
+extern int OPEN_ACTION;
+extern int SAVE_ACTION;
+extern int PRINT_WHOLE_ACTION;
+extern int PRINT_MARKED_ACTION;
+
 extern char *getenv();
 
 static String version = "Ghostview, version 1.5";
@@@@ -623,7 +628,7 @@@@ char *argv[];
 
     openbutton = XtCreateManagedWidget("open", smeBSBObjectClass,
 				       filemenu, NULL, ZERO);
-    XtAddCallback(openbutton, XtNcallback, popup_dialog, (XtPointer)OPEN);
+    XtAddCallback(openbutton, XtNcallback, popup_dialog, (XtPointer)&OPEN_ACTION);
 
     reopenbutton = XtCreateManagedWidget("reopen", smeBSBObjectClass,
 				         filemenu, NULL, ZERO);
@@@@ -632,16 +637,16 @@@@ char *argv[];
     printwholebutton = XtCreateManagedWidget("printwhole", smeBSBObjectClass,
 				             filemenu, NULL, ZERO);
     XtAddCallback(printwholebutton, XtNcallback, popup_dialog,
-		  (XtPointer)PRINT_WHOLE);
+		  (XtPointer)&PRINT_WHOLE_ACTION);
 
     printmarkedbutton = XtCreateManagedWidget("printmarked", smeBSBObjectClass,
 				              filemenu, NULL, ZERO);
     XtAddCallback(printmarkedbutton, XtNcallback, popup_dialog,
-		  (XtPointer)PRINT_MARKED);
+		  (XtPointer)&PRINT_MARKED_ACTION);
 
     savebutton = XtCreateManagedWidget("save", smeBSBObjectClass,
 				       filemenu, NULL, ZERO);
-    XtAddCallback(savebutton, XtNcallback, popup_dialog, (XtPointer)SAVE);
+    XtAddCallback(savebutton, XtNcallback, popup_dialog, (XtPointer)&SAVE_ACTION);
 
     line = XtCreateManagedWidget("line", smeLineObjectClass,
 				 filemenu, NULL, ZERO);
@@@@ -706,12 +711,16 @@@@ char *argv[];
     XtSetArg(args[0], XtNleftMargin, 20);
     for (i = app_res.minimum_magstep; i <= app_res.maximum_magstep; i++) {
 	char buf[16];
+	int *box;
+	
 	sprintf(buf, "%d", i);
 	magstepentry[i-app_res.minimum_magstep] =
 		XtCreateManagedWidget(buf, smeBSBObjectClass,
 				      magstepmenu, args, 1);
+	box = XtNew(int);
+	*box = i;
 	XtAddCallback(magstepentry[i-app_res.minimum_magstep], XtNcallback,
-		      set_magstep, (XtPointer)i);
+		      set_magstep, (XtPointer)box);
     }
 
     XtSetArg(args[0], XtNresize, False);
@
