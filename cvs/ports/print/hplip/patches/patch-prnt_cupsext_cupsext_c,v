head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.6
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2015.04.17.04.18.13;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	bILtsWtTVnQjIsVx;

1.4
date	2015.02.22.14.46.43;	author sthen;	state Exp;
branches;
next	1.3;
commitid	vKR3Xp5ptAZm1LKG;

1.3
date	2013.07.12.08.07.05;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2012.09.11.10.52.16;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.05.06.46.10;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to hplip-3.15.4.
@
text
@$OpenBSD: patch-prnt_cupsext_cupsext_c,v 1.4 2015/02/22 14:46:43 sthen Exp $

Backwards memcpy, triggered by changing default page size in hp-toolbox

--- prnt/cupsext/cupsext.c.orig	Tue Apr 14 11:52:35 2015
+++ prnt/cupsext/cupsext.c	Fri Apr 17 05:53:22 2015
@@@@ -1163,7 +1163,7 @@@@ PyObject * removeOption( PyObject * self, PyObject * a
 
             if ( j < g_num_options )
             {
-                memcpy( (g_options + j), (g_options + j + 1),
+                memmove( (g_options + j), (g_options + j + 1),
                         sizeof(cups_option_t) * (g_num_options - j) );
 
                 r = 1;
@


1.4
log
@Replace an overlapping memcpy with memmove, ok ajacoutot@@ naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
d5 3
a7 3
--- prnt/cupsext/cupsext.c.orig	Sat Feb 21 20:39:07 2015
+++ prnt/cupsext/cupsext.c	Sat Feb 21 20:39:18 2015
@@@@ -1545,7 +1545,7 @@@@ PyObject * removeOption( PyObject * self, PyObject * a
@


1.3
log
@Update to hplip-3.13.6.
@
text
@d1 1
a1 1
$OpenBSD: patch-prnt_cupsext_cupsext_c,v 1.2 2012/09/11 10:52:16 ajacoutot Exp $
d3 1
a3 1
https://bugs.launchpad.net/hplip/+bug/1026666
d5 3
a7 5
--- prnt/cupsext/cupsext.c.orig	Tue Sep  4 14:31:10 2012
+++ prnt/cupsext/cupsext.c	Tue Sep 11 08:13:47 2012
@@@@ -87,7 +87,47 @@@@ typedef int Py_ssize_t;
 #define PY_SSIZE_T_MIN INT_MIN
 #endif
d9 1
a9 259
+#if (CUPS_VERSION_MAJOR > 1) || (CUPS_VERSION_MINOR > 5)
+#define HAVE_CUPS_1_6 1
+#endif
 
+#ifndef HAVE_CUPS_1_6
+#define ippGetCount(attr)     attr->num_values
+#define ippGetGroupTag(attr)  attr->group_tag
+#define ippGetValueTag(attr)  attr->value_tag
+#define ippGetName(attr)      attr->name
+#define ippGetBoolean(attr, element) attr->values[element].boolean
+#define ippGetInteger(attr, element) attr->values[element].integer
+#define ippGetStatusCode(ipp) ipp->request.status.status_code
+#define ippGetString(attr, element, language) attr->values[element].string.text
+
+static ipp_attribute_t * ippFirstAttribute( ipp_t *ipp )
+{
+    if (!ipp)
+        return (NULL);
+    return (ipp->current = ipp->attrs);
+}
+
+static ipp_attribute_t * ippNextAttribute( ipp_t *ipp )
+{
+    if (!ipp || !ipp->current)
+        return (NULL);
+    return (ipp->current = ipp->current->next);
+}
+
+static int ippSetOperation( ipp_t *ipp, ipp_op_t op )
+{
+    ipp->request.op.operation_id = op;
+    return (1);
+}
+
+static int ippSetRequestId( ipp_t *ipp, int request_id )
+{
+    ipp->request.any.request_id = request_id;
+    return (1);
+}
+#endif
+
 int g_num_options = 0;
 cups_option_t * g_options;
 
@@@@ -333,8 +373,8 @@@@ PyObject * getPrinters( PyObject * self, PyObject * ar
     request = ippNew();
     language = cupsLangDefault();
 
-    request->request.op.operation_id = CUPS_GET_PRINTERS;
-    request->request.any.request_id = 1;
+    ippSetOperation( request, CUPS_GET_PRINTERS );
+    ippSetRequestId ( request, 1);
 
     ippAddString( request, IPP_TAG_OPERATION, IPP_TAG_CHARSET,
                   "attributes-charset", NULL, cupsLangEncoding( language ) );
@@@@ -378,10 +418,10 @@@@ PyObject * getPrinters( PyObject * self, PyObject * ar
         ipp_pstate_t state;
         int i = 0;
 
-        for ( attr = response->attrs; attr != NULL; attr = attr->next )
+        for ( attr = ippFirstAttribute( response ); attr != NULL; attr = ippNextAttribute( response ) )
         {
-            while ( attr != NULL && attr->group_tag != IPP_TAG_PRINTER )
-                attr = attr->next;
+            while ( attr != NULL && ippGetGroupTag( attr ) != IPP_TAG_PRINTER )
+                attr = ippNextAttribute( response );
 
             if ( attr == NULL )
                 break;
@@@@ -390,41 +430,41 @@@@ PyObject * getPrinters( PyObject * self, PyObject * ar
             state = IPP_PRINTER_IDLE;
             accepting = 0;
 
-            while ( attr != NULL && attr->group_tag == IPP_TAG_PRINTER )
+            while ( attr != NULL && ippGetGroupTag( attr ) == IPP_TAG_PRINTER )
             {
-                if ( strcmp( attr->name, "printer-name" ) == 0 &&
-                        attr->value_tag == IPP_TAG_NAME )
-                    name = attr->values[ 0 ].string.text;
+                if ( strcmp( ippGetName( attr ), "printer-name" ) == 0 &&
+                        ippGetValueTag( attr ) == IPP_TAG_NAME )
+                    name = ippGetString( attr, 0, NULL );
 
-                else if ( strcmp( attr->name, "device-uri" ) == 0 &&
-                        attr->value_tag == IPP_TAG_URI )
-                    device_uri = attr->values[ 0 ].string.text;
+                else if ( strcmp( ippGetName( attr ), "device-uri" ) == 0 &&
+                        ippGetValueTag( attr ) == IPP_TAG_URI )
+                    device_uri = ippGetString( attr, 0, NULL );
 
-                else if ( strcmp( attr->name, "printer-uri-supported" ) == 0 &&
-                        attr->value_tag == IPP_TAG_URI )
-                    printer_uri = attr->values[ 0 ].string.text;
+                else if ( strcmp( ippGetName( attr ), "printer-uri-supported" ) == 0 &&
+                        ippGetValueTag( attr ) == IPP_TAG_URI )
+                    printer_uri = ippGetString( attr, 0, NULL );
 
-                else if ( strcmp( attr->name, "printer-info" ) == 0 &&
-                        attr->value_tag == IPP_TAG_TEXT )
-                    info = attr->values[ 0 ].string.text;
+                else if ( strcmp( ippGetName( attr ), "printer-info" ) == 0 &&
+                        ippGetValueTag( attr ) == IPP_TAG_TEXT )
+                    info = ippGetString( attr, 0, NULL );
 
-                else if ( strcmp( attr->name, "printer-location" ) == 0 &&
-                        attr->value_tag == IPP_TAG_TEXT )
-                    location = attr->values[ 0 ].string.text;
+                else if ( strcmp( ippGetName( attr ), "printer-location" ) == 0 &&
+                        ippGetValueTag( attr ) == IPP_TAG_TEXT )
+                    location = ippGetString( attr, 0, NULL );
 
-                else if ( strcmp( attr->name, "printer-make-and-model" ) == 0 &&
-                        attr->value_tag == IPP_TAG_TEXT )
-                    make_model = attr->values[ 0 ].string.text;
+                else if ( strcmp( ippGetName( attr ), "printer-make-and-model" ) == 0 &&
+                        ippGetValueTag( attr ) == IPP_TAG_TEXT )
+                    make_model = ippGetString( attr, 0, NULL );
 
-                else if ( strcmp( attr->name, "printer-state" ) == 0 &&
-                        attr->value_tag == IPP_TAG_ENUM )
-                    state = ( ipp_pstate_t ) attr->values[ 0 ].integer;
+                else if ( strcmp( ippGetName( attr ), "printer-state" ) == 0 &&
+                        ippGetValueTag( attr ) == IPP_TAG_ENUM )
+                    state = ( ipp_pstate_t ) ippGetInteger( attr, 0 );
 
-                else if (!strcmp(attr->name, "printer-is-accepting-jobs") &&
-                        attr->value_tag == IPP_TAG_BOOLEAN)
-                    accepting = attr->values[ 0 ].boolean;
+                else if (!strcmp(ippGetName( attr ), "printer-is-accepting-jobs") &&
+                        ippGetValueTag( attr ) == IPP_TAG_BOOLEAN)
+                    accepting = ippGetBoolean( attr, 0 );
 
-                attr = attr->next;
+                attr = ippNextAttribute( response );
             }
 
             if ( device_uri == NULL )
@@@@ -522,8 +562,8 @@@@ PyObject * addPrinter( PyObject * self, PyObject * arg
     request = ippNew();
     language = cupsLangDefault();
 
-    request->request.op.operation_id = CUPS_ADD_PRINTER;
-    request->request.any.request_id = 1;
+    ippSetOperation( request, CUPS_ADD_PRINTER );
+    ippSetRequestId ( request, 1 );
 
     ippAddString( request, IPP_TAG_OPERATION, IPP_TAG_CHARSET,
                   "attributes-charset", NULL, cupsLangEncoding( language ) );
@@@@ -568,7 +608,7 @@@@ PyObject * addPrinter( PyObject * self, PyObject * arg
     }
     else
     {
-        status = response->request.status.status_code;
+        status = ippGetStatusCode( response );
         //ippDelete( response );
         r = 1;
     }
@@@@ -631,8 +671,8 @@@@ PyObject * delPrinter( PyObject * self, PyObject * arg
        */
     request = ippNew();
 
-    request->request.op.operation_id = CUPS_DELETE_PRINTER;
-    request->request.op.request_id = 1;
+    ippSetOperation( request, CUPS_DELETE_PRINTER );
+    ippSetRequestId ( request, 1 );
 
     language = cupsLangDefault();
 
@@@@ -650,7 +690,7 @@@@ PyObject * delPrinter( PyObject * self, PyObject * arg
      */
     response = cupsDoRequest( http, request, "/admin/" );
 
-    if ( ( response != NULL ) && ( response->request.status.status_code <= IPP_OK_CONFLICT ) )
+    if ( ( response != NULL ) && ( ippGetStatusCode( response ) <= IPP_OK_CONFLICT ) )
     {
         r = 1;
     }
@@@@ -721,8 +761,8 @@@@ PyObject * setDefaultPrinter( PyObject * self, PyObjec
 
     request = ippNew();
 
-    request->request.op.operation_id = CUPS_SET_DEFAULT;
-    request->request.op.request_id = 1;
+    ippSetOperation( request, CUPS_SET_DEFAULT );
+    ippSetRequestId ( request, 1 );
 
     language = cupsLangDefault();
 
@@@@ -743,7 +783,7 @@@@ PyObject * setDefaultPrinter( PyObject * self, PyObjec
 
     response = cupsDoRequest( http, request, "/admin/" );
 
-    if ( ( response != NULL ) && ( response->request.status.status_code <= IPP_OK_CONFLICT ) )
+    if ( ( response != NULL ) && ( ippGetStatusCode( response ) <= IPP_OK_CONFLICT ) )
     {
         r = 1;
     }
@@@@ -797,8 +837,8 @@@@ PyObject * controlPrinter( PyObject * self, PyObject *
 
     request = ippNew();
 
-    request->request.op.operation_id = op;
-    request->request.op.request_id = 1;
+    ippSetOperation( request, op );
+    ippSetRequestId ( request, 1 );
 
     language = cupsLangDefault();
 
@@@@ -822,7 +862,7 @@@@ PyObject * controlPrinter( PyObject * self, PyObject *
 
     response = cupsDoRequest(http, request, "/admin/");
 
-    if (( response != NULL ) && (response->request.status.status_code <= IPP_OK_CONFLICT))
+    if (( response != NULL ) && (ippGetStatusCode( response ) <= IPP_OK_CONFLICT))
     {
         r = 1;
     }
@@@@ -837,7 +877,7 @@@@ abort:
     if ( response != NULL )
         ippDelete( response );
 
-    return Py_BuildValue( "i", r );;
+    return Py_BuildValue( "i", r );
 }
 
 
@@@@ -1116,8 +1156,8 @@@@ PyObject * getPPDList( PyObject * self, PyObject * arg
 
     request = ippNew();
 
-    request->request.op.operation_id = CUPS_GET_PPDS;
-    request->request.op.request_id   = 1;
+    ippSetOperation( request, CUPS_GET_PPDS );
+    ippSetRequestId ( request, 1 );
 
     language = cupsLangDefault();
 
@@@@ -1143,43 +1183,43 @@@@ PyObject * getPPDList( PyObject * self, PyObject * arg
     if ((response = cupsDoRequest(http, request, "/")) != NULL)
     {
 
-        for (attr = response->attrs; attr; attr = attr->next)
+        for (attr = ippFirstAttribute( response ); attr; attr = ippNextAttribute( response ))
         {
             PyObject *dict;
             char *ppdname = NULL;
 
-            while (attr && attr->group_tag != IPP_TAG_PRINTER)
-                attr = attr->next;
+            while (attr && ippGetGroupTag( attr ) != IPP_TAG_PRINTER)
+                attr = ippNextAttribute( response );
 
             if (!attr)
                 break;
 
             dict = PyDict_New ();
 
-            for (; attr && attr->group_tag == IPP_TAG_PRINTER; attr = attr->next)
+            for (; attr && ippGetGroupTag( attr ) == IPP_TAG_PRINTER; attr = ippNextAttribute( response ))
d11 3
a13 26
                 PyObject *val = NULL;
 
-                if (!strcmp (attr->name, "ppd-name") && attr->value_tag == IPP_TAG_NAME)
+                if (!strcmp (ippGetName( attr ), "ppd-name") && ippGetValueTag( attr ) == IPP_TAG_NAME)
                 {
-                    ppdname = attr->values[0].string.text;
+                    ppdname = ippGetString( attr, 0, NULL );
 
                     //sprintf( buf, "print '%s'", ppdname);
                     //PyRun_SimpleString( buf );
                 }
 
-                else if (attr->value_tag == IPP_TAG_TEXT || attr->value_tag == IPP_TAG_NAME || attr->value_tag == IPP_TAG_KEYWORD)
-                //else if ((!strcmp (attr->name, "ppd-natural-language") && attr->value_tag == IPP_TAG_LANGUAGE) ||
-                //    (!strcmp (attr->name, "ppd-make-and-model") && attr->value_tag == IPP_TAG_TEXT) ||
-                //    (!strcmp (attr->name, "ppd-make") && attr->value_tag == IPP_TAG_TEXT) ||
-                //    (!strcmp (attr->name, "ppd-device-id") && attr->value_tag == IPP_TAG_TEXT))
+                else if (ippGetValueTag( attr ) == IPP_TAG_TEXT || ippGetValueTag( attr ) == IPP_TAG_NAME || ippGetValueTag( attr ) == IPP_TAG_KEYWORD)
+                //else if ((!strcmp (ippGetName( attr ), "ppd-natural-language") && ippGetValueTag( attr ) == IPP_TAG_LANGUAGE) ||
+                //    (!strcmp (ippGetName( attr ), "ppd-make-and-model") && ippGetValueTag( attr ) == IPP_TAG_TEXT) ||
+                //    (!strcmp (ippGetName( attr ), "ppd-make") && ippGetValueTag( attr ) == IPP_TAG_TEXT) ||
+                //    (!strcmp (ippGetName( attr ), "ppd-device-id") && ippGetValueTag( attr ) == IPP_TAG_TEXT))
                 {
-                    val = PyObj_from_UTF8(attr->values[0].string.text);
+                    val = PyObj_from_UTF8(ippGetString( attr, 0, NULL ));
                 }
d15 1
a15 7
                 if (val)
                 {
-                    PyDict_SetItemString (dict, attr->name, val);
+                    PyDict_SetItemString (dict, ippGetName( attr ), val);
                     Py_DECREF (val);
                 }
             }
@


1.2
log
@Update to hplip-3.12.9.
@
text
@d1 1
a1 1
$OpenBSD: patch-prnt_cupsext_cupsext_c,v 1.1 2012/08/05 06:46:10 ajacoutot Exp $
@


1.1
log
@I forgot to cvs add the patches in my commit yesterday; spotted by ian@@, thanks!
While here, regen WANTLIB/depends.
@
text
@d1 1
a1 1
$OpenBSD$
d5 6
a10 6
--- prnt/cupsext/cupsext.c.orig	Sun Aug  5 08:28:22 2012
+++ prnt/cupsext/cupsext.c	Sun Aug  5 08:35:12 2012
@@@@ -87,6 +87,46 @@@@ typedef int Py_ssize_t;
 #define PY_SSIZE_T_MIN INT_MIN
 #endif
 
d14 1
a14 1
+
d51 4
a54 3
 
 int g_num_options = 0;
 cups_option_t * g_options;
d56 5
a60 5
     request = ippNew();
     language = cupsLangDefault();
 
-    request->request.op.operation_id = CUPS_GET_PRINTERS;
-    request->request.any.request_id = 1;
d63 3
a65 3
 
     ippAddString( request, IPP_TAG_OPERATION, IPP_TAG_CHARSET,
                   "attributes-charset", NULL, cupsLangEncoding( language ) );
d67 4
a70 4
         ipp_pstate_t state;
         int i = 0;
 
-        for ( attr = response->attrs; attr != NULL; attr = attr->next )
d72 3
a74 3
         {
-            while ( attr != NULL && attr->group_tag != IPP_TAG_PRINTER )
-                attr = attr->next;
d77 3
a79 3
 
             if ( attr == NULL )
                 break;
d81 4
a84 4
             state = IPP_PRINTER_IDLE;
             accepting = 0;
 
-            while ( attr != NULL && attr->group_tag == IPP_TAG_PRINTER )
d86 4
a89 4
             {
-                if ( strcmp( attr->name, "printer-name" ) == 0 &&
-                        attr->value_tag == IPP_TAG_NAME )
-                    name = attr->values[ 0 ].string.text;
d93 4
a96 1
+
d100 4
a103 1
+
d107 4
a110 1
+
d114 4
a117 1
+
d121 4
a124 1
+
d128 4
a131 1
+
d135 4
a138 1
+
d142 2
a143 30
 
-                else if ( strcmp( attr->name, "device-uri" ) == 0 &&
-                        attr->value_tag == IPP_TAG_URI )
-                    device_uri = attr->values[ 0 ].string.text;
-
-                else if ( strcmp( attr->name, "printer-uri-supported" ) == 0 &&
-                        attr->value_tag == IPP_TAG_URI )
-                    printer_uri = attr->values[ 0 ].string.text;
-
-                else if ( strcmp( attr->name, "printer-info" ) == 0 &&
-                        attr->value_tag == IPP_TAG_TEXT )
-                    info = attr->values[ 0 ].string.text;
-
-                else if ( strcmp( attr->name, "printer-location" ) == 0 &&
-                        attr->value_tag == IPP_TAG_TEXT )
-                    location = attr->values[ 0 ].string.text;
-
-                else if ( strcmp( attr->name, "printer-make-and-model" ) == 0 &&
-                        attr->value_tag == IPP_TAG_TEXT )
-                    make_model = attr->values[ 0 ].string.text;
-
-                else if ( strcmp( attr->name, "printer-state" ) == 0 &&
-                        attr->value_tag == IPP_TAG_ENUM )
-                    state = ( ipp_pstate_t ) attr->values[ 0 ].integer;
-
-                else if (!strcmp(attr->name, "printer-is-accepting-jobs") &&
-                        attr->value_tag == IPP_TAG_BOOLEAN)
-                    accepting = attr->values[ 0 ].boolean;
-
-                attr = attr->next;
d145 3
a147 3
             }
 
             if ( device_uri == NULL )
d149 5
a153 5
     request = ippNew();
     language = cupsLangDefault();
 
-    request->request.op.operation_id = CUPS_ADD_PRINTER;
-    request->request.any.request_id = 1;
d156 3
a158 3
 
     ippAddString( request, IPP_TAG_OPERATION, IPP_TAG_CHARSET,
                   "attributes-charset", NULL, cupsLangEncoding( language ) );
d160 4
a163 4
     }
     else
     {
-        status = response->request.status.status_code;
d165 3
a167 3
         //ippDelete( response );
         r = 1;
     }
d169 5
a173 5
        */
     request = ippNew();
 
-    request->request.op.operation_id = CUPS_DELETE_PRINTER;
-    request->request.op.request_id = 1;
d176 3
a178 3
 
     language = cupsLangDefault();
 
d180 4
a183 4
      */
     response = cupsDoRequest( http, request, "/admin/" );
 
-    if ( ( response != NULL ) && ( response->request.status.status_code <= IPP_OK_CONFLICT ) )
d185 3
a187 3
     {
         r = 1;
     }
d189 5
a193 5
 
     request = ippNew();
 
-    request->request.op.operation_id = CUPS_SET_DEFAULT;
-    request->request.op.request_id = 1;
d196 3
a198 3
 
     language = cupsLangDefault();
 
d200 4
a203 4
 
     response = cupsDoRequest( http, request, "/admin/" );
 
-    if ( ( response != NULL ) && ( response->request.status.status_code <= IPP_OK_CONFLICT ) )
d205 3
a207 3
     {
         r = 1;
     }
d209 5
a213 5
 
     request = ippNew();
 
-    request->request.op.operation_id = op;
-    request->request.op.request_id = 1;
d216 3
a218 3
 
     language = cupsLangDefault();
 
d220 4
a223 4
 
     response = cupsDoRequest(http, request, "/admin/");
 
-    if (( response != NULL ) && (response->request.status.status_code <= IPP_OK_CONFLICT))
d225 8
a232 8
     {
         r = 1;
     }
@@@@ -837,7 +877,7 @@@@ abort:
     if ( response != NULL )
         ippDelete( response );
 
-    return Py_BuildValue( "i", r );;
d234 3
a236 3
 }
 
 
d238 5
a242 5
 
     request = ippNew();
 
-    request->request.op.operation_id = CUPS_GET_PPDS;
-    request->request.op.request_id   = 1;
d245 3
a247 3
 
     language = cupsLangDefault();
 
d249 4
a252 4
     if ((response = cupsDoRequest(http, request, "/")) != NULL)
     {
 
-        for (attr = response->attrs; attr; attr = attr->next)
d254 6
a259 6
         {
             PyObject *dict;
             char *ppdname = NULL;
 
-            while (attr && attr->group_tag != IPP_TAG_PRINTER)
-                attr = attr->next;
d262 7
a268 7
 
             if (!attr)
                 break;
 
             dict = PyDict_New ();
 
-            for (; attr && attr->group_tag == IPP_TAG_PRINTER; attr = attr->next)
d270 4
a273 4
             {
                 PyObject *val = NULL;
 
-                if (!strcmp (attr->name, "ppd-name") && attr->value_tag == IPP_TAG_NAME)
d275 2
a276 2
                 {
-                    ppdname = attr->values[0].string.text;
d278 10
a287 10
 
                     //sprintf( buf, "print '%s'", ppdname);
                     //PyRun_SimpleString( buf );
                 }
 
-                else if (attr->value_tag == IPP_TAG_TEXT || attr->value_tag == IPP_TAG_NAME || attr->value_tag == IPP_TAG_KEYWORD)
-                //else if ((!strcmp (attr->name, "ppd-natural-language") && attr->value_tag == IPP_TAG_LANGUAGE) ||
-                //    (!strcmp (attr->name, "ppd-make-and-model") && attr->value_tag == IPP_TAG_TEXT) ||
-                //    (!strcmp (attr->name, "ppd-make") && attr->value_tag == IPP_TAG_TEXT) ||
-                //    (!strcmp (attr->name, "ppd-device-id") && attr->value_tag == IPP_TAG_TEXT))
d293 2
a294 2
                 {
-                    val = PyObj_from_UTF8(attr->values[0].string.text);
d296 5
a300 5
                 }
 
                 if (val)
                 {
-                    PyDict_SetItemString (dict, attr->name, val);
d302 3
a304 3
                     Py_DECREF (val);
                 }
             }
@

