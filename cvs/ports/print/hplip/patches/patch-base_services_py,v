head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.16
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.14
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.12
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.8
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.10.15.14.20.59;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2013.03.08.06.51.46;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to hplip-3.13.10.
@
text
@$OpenBSD: patch-base_services_py,v 1.1 2013/03/08 06:51:46 ajacoutot Exp $
--- base/services.py.orig	Fri Oct 11 11:40:14 2013
+++ base/services.py	Tue Oct 15 15:42:07 2013
@@@@ -67,6 +67,9 @@@@ def restart_cups():
     elif os.path.exists('/etc/init.d/cupsys'):
         return '/etc/init.d/cupsys restart'
 
+    elif os.path.exists('${RCDIR}/cupsd'):
+        return '${RCDIR}/cupsd restart'
+
     else:
         return 'killall -HUP cupsd'
 
@@@@ -186,6 +189,22 @@@@ def start_service( service_name, passwordObj):
         if sts ==0:
             if 'stop' in out or 'inactive' in out:
                 cmd_start = passwordObj.getAuthCmd()%('/etc/init.d/%s start'%service_name)
+                log.debug("cmd_start=%s"%cmd_start)
+                sts,out = utils.run(cmd_start, passwordObj)
+                if sts ==0:
+                    ret_Val = True
+            else:
+                ret_Val = True
+        else:
+            log.error("Fail to start %s service, please start %s service manually."%(service_name,service_name))
+
+    elif os.path.exists('${RCDIR}/%s'%service_name):
+        cmd_status = passwordObj.getAuthCmd()%('${RCDIR}/%s check'%service_name)
+        log.debug(cmd_status)
+        sts,out = utils.run(cmd_status, passwordObj)
+        if sts ==0:
+            if 'stop' in out or 'inactive' in out:
+                cmd_start = passwordObj.getAuthCmd()%('${RCDIR}/%s start'%service_name)
                 log.debug("cmd_start=%s"%cmd_start)
                 sts,out = utils.run(cmd_start, passwordObj, "Need authentication to start/restart %s service"%service_name)
                 if sts ==0:
@


1.1
log
@Update to hplip-3.13.2.

Some parts of the tools are still somewhat WIP; however, thanks to a
donation from linuxfund.org this has been successfully tested on a HP
OfficeJet 7500 e910, using STP discovery over WiFi with automatic PPD
generation. Scanning, printing, cartridge information... working.
@
text
@d1 3
a3 3
$OpenBSD$
--- base/services.py.orig	Fri Feb 22 15:29:34 2013
+++ base/services.py	Fri Feb 22 15:33:02 2013
d35 1
a35 1
                 sts,out = utils.run(cmd_start, passwordObj)
@

