head	1.3;
access;
symbols
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2005.02.21.21.36.07;	author sturm;	state dead;
branches;
next	1.2;

1.2
date	2003.06.18.13.53.33;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.18.16.04.50;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to tetex-3.0, see included ChangeLog for details
the texmf-doc SUBPACKAGE is not distributed via ftp due to size constraints
@
text
@$OpenBSD: patch-libs_libwww_HTInet_c,v 1.2 2003/06/18 13:53:33 avsm Exp $
--- libs/libwww/HTInet.c.orig	Thu Jan  6 10:48:50 2000
+++ libs/libwww/HTInet.c	Wed Jun 18 04:19:52 2003
@@@@ -599,71 +599,25 @@@@ PUBLIC time_t HTGetTimeZoneOffset (void)
 */
 PUBLIC char * HTGetTmpFileName (const char * abs_dir)
 {
-    char * result = NULL;
-#ifdef HAVE_TEMPNAM
-    static char * envtmpdir = NULL;
-    size_t len = 0;
-    if (abs_dir && *abs_dir) {
-      char * tmpdir = getenv("TMPDIR");
-      if (tmpdir)
-          len = strlen(tmpdir);
-      if (len) {
-          if (!(envtmpdir = (char *) HT_REALLOC(envtmpdir, len + 8)))
-              HT_OUTOFMEM("HTGetTmpFileName");
-          strcpy(envtmpdir, "TMPDIR=");
-          strcpy(envtmpdir + 7, tmpdir);
-          putenv("TMPDIR=");
-      }
-    }
-#ifdef __CYGWIN__
-    result = tempnam(abs_dir, "");
-#else
-    result = tempnam(abs_dir, NULL);
-#endif /* __CYGWIN__ */
-    if (len)
-      putenv(envtmpdir);
-#else
-    /*
-    **  This is only approx. as we don't know if this file exists or not.
-    **  Hopefully, tempnam() exists on enough platforms so that this is not
-    **  a problem.
-    */
-    char * offset = NULL;
-    if (!(result = (char *) HT_MALLOC((abs_dir ? strlen(abs_dir) : 0) +
-				      HT_MAX_TMPNAM + 2)))
-	HT_OUTOFMEM("HTGetTmpFileName");
+    char * temp_name;
+    size_t temp_len;
+    int temp_fd;
 
-#ifdef WWW_MSWINDOWS
-    if (abs_dir) {
-#else
-    if (abs_dir && *abs_dir==DIR_SEPARATOR_CHAR) {
-#endif /* WWW_MSWINDOWS */
-	strcpy(result, abs_dir);
-	offset = result+strlen(result);
-	if (*(offset-1) != DIR_SEPARATOR_CHAR) *offset++ = DIR_SEPARATOR_CHAR;
+    temp_len = (strlen(abs_dir) + HT_MAX_TMPNAM + 2) * sizeof(char); 
+    temp_name = malloc(temp_len);
+    if (abs_dir != NULL) {
+        strlcpy(temp_name, abs_dir, temp_len);
+        if (abs_dir[strlen(abs_dir) - 1] != DIR_SEPARATOR_CHAR)
+            strlcat(temp_name, "/HT_TMP.XXXXXXXXXX", temp_len);
+        else
+            strlcat(temp_name, "HT_TMP.XXXXXXXXXX", temp_len);
+    } else
+        strlcpy(temp_name, "HT_TMP.XXXXXXXXXX", temp_len);
 
-#ifdef HT_REENTRANT
-	tmpnam_r(offset);
-#else
-	tmpnam(offset);
-#endif
+    temp_fd = mkstemp(temp_name);
+    close(temp_fd);
 
-	{
-	    char * orig = strrchr(offset, DIR_SEPARATOR_CHAR);
-	    char * dest = offset;
-	    if (orig++) while ((*dest++ = *orig++));
-	}
-    } else {
-	offset = result;
-#ifdef HT_REENTRANT
-	tmpnam_r(offset);
-#else
-	tmpnam(offset);
-#endif
-	offset = result;
-    }
-#endif /* HAVE_TEMPNAM */
-    return result;
+    return temp_name;
 }
 
 /*
@


1.2
log
@correct mktemp patch - you can't sizeof(char *) for an array bound,
so save the bound in a temp variable and use that instead
sturm@@ ok
@
text
@d1 1
a1 1
$OpenBSD: patch-libs_libwww_HTInet_c,v 1.1 2003/02/18 16:04:50 sturm Exp $
@


1.1
log
@update to teTeX 2.0.1

The long awaited update:
- lots of updates to current packages
- lots of bugfixes
- lots of new packages
- cleanup of licenses, it's all free now (GPL, LPPL, ...)

see ${PREFIX}/share/texmf/ChangeLog for details
@
text
@d1 4
a4 4
$OpenBSD$
--- libs/libwww/HTInet.c.orig	Thu Jan  6 11:48:50 2000
+++ libs/libwww/HTInet.c	Mon Dec 16 23:22:50 2002
@@@@ -599,71 +599,23 @@@@ PUBLIC time_t HTGetTimeZoneOffset (void)
d42 1
a43 10
+ 
+    temp_name = malloc((strlen(abs_dir) + HT_MAX_TMPNAM + 2) * sizeof(char));
+    if (abs_dir != NULL) {
+        strlcpy(temp_name, abs_dir, sizeof temp_name);
+        if (abs_dir[strlen(abs_dir) - 1] != DIR_SEPARATOR_CHAR)
+            strlcat(temp_name, "/HT_TMP.XXXXXXXXXX", sizeof temp_name);
+        else
+            strlcat(temp_name, "HT_TMP.XXXXXXXXXX", sizeof temp_name);
+    } else
+        strlcpy(temp_name, "HT_TMP.XXXXXXXXXX", sizeof temp_name);
d53 10
a62 2
+    temp_fd = mkstemp(temp_name);
+    close(temp_fd);
d69 3
a71 1
-
@

