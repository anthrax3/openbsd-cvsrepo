head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	edd_20100820:1.1.1.1
	edd:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.01.11.18.46.52;	author edd;	state dead;
branches;
next	1.3;

1.3
date	2012.12.17.20.28.04;	author edd;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.08.00.09.42;	author edd;	state Exp;
branches;
next	1.1;

1.1
date	2010.08.20.12.04.30;	author edd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.08.20.12.04.30;	author edd;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to TeX Live 2013.

This incudes the new buildset texmf -- a smaller texmf tree used for
BUILD_DEPENDS. See the package README for more info on this.

OK espie@@
@
text
@#!/usr/bin/env ruby
# Copyright (c) 2008-2012, Edd Barrett <vext01@@gmail.com>
# 
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# 
# RBlatter
# $Id: pkgfilter.rb,v 1.3 2012/12/17 20:28:04 edd Exp $
#
# Filters package contents based upon a subsetconf

require "subsetconf"
require "spinner"
require "set"
require "pkgscanner"

class PkgFilter

	# Create a new subset shaper and index the tlpdb database
	def initialize()

		# tlpdb directives to remove
		@@@@noInterest = 
			["name", "category", "revision", "shortdesc",
			"longdesc", "catalogue", "catalogue-version",
			"catalogue-date", "catalogue-ctan",
			"catalogue-license", "postaction"]
		@@@@blocks = 
			["runfiles", "docfiles", "binfiles", "srcfiles"]
		@@@@leaveAlone = ["depend"]

		@@pass = 1
		@@@@spinner = Spinner.new
	end

	# Filter un-needed junk and un-needed doc/run/src/bin files
	# out of a index contents buffer.
	def filterContents(inBuf, subset)

		buf = ""

		ignoreFiles = nil

		blockType = nil # nil if not in block
		name = "<undefined>"

		for line in inBuf do

			if line =~ /^ / then

				# a filename inside a "block"
				if blockType == nil then
					puts "*error: syntax error: file not in block near #{name}"
					exit 1
				end

				# OK
				if ignoreFiles == false then
					line.strip!
					buf = buf + line.split(" ")[0]
					buf += "\n"
				end

			else

				# Can't be in a block anymore
				blockType = nil

				# Extract directive and value
				line =~ /^(.*?) (.*)/
				dir = $1
				val = $2

				# Cache the name for error messages
				if dir == "name" then
					name = val 
				end

				# Filter away uninteresting directives
				if @@@@noInterest.index dir then
					#ignore
				elsif @@@@blocks.index dir then 
					blockType = dir
					ignoreFiles = willIgnore?(
						blockType, subset)
				elsif @@@@leaveAlone.index dir then
					# Stuff you leave in place
					# like 'depend'
					buf = buf + line
				elsif dir == "execute"
					# formats hints, map hints
					parseExecute val, subset
				else
					printf "*error: unrecognised"
					printf " directive in tlpdb: '"
					puts "#{dir}': #{line}"
					exit 1
				end

			end #if
		end

		buf

	end

	private
	# Tell us if we should ignore these types of files 
	# in the subset +subsetConf+. Valid file types are
	# +runfiles+, +docfiles+, +binfiles+ and +srcfiles+.
	def willIgnore?(fileType, subsetConf)
		use = ""
		if fileType == "runfiles" then
			use = subsetConf.useRunFiles
		elsif fileType == "docfiles" then
			use = subsetConf.useDocFiles
		elsif fileType == "binfiles" then
			use = subsetConf.useBinFiles
		elsif fileType == "srcfiles" then
			use = subsetConf.useSrcFiles
		end

		use = !use

		use
	end

	private
	# Decides what to do with execute statements.
	# +str+ is the string following the +execute+ word.
	def parseExecute(str, conf)

		parts = str.split " "

		case parts[0]
		when "AddFormat":
			# Ignore
		when "BuildFormat":
			conf.formatHints << parts[1]
		when "BuildLanguageDat":
			# Ignore
		when "AddHyphen":
			# Ignore
		when "addKanjiMap":
			# Ignorer
		when "addMap":
			conf.mapHints << parts[0] + " " + parts[1]
		when "addMixedMap":
			conf.mapHints << parts[0] + " " + parts[1]
		else
			printf "*warning: unknown execute statement:"
			puts parts[0]
		end
	end
end
@


1.3
log
@Update to TeX Live 2012.

Many people have mailed me successful test reports and matthieu tells me he
has been running this for some time now.

Thanks to those that tested.

OK matthieu@@
@
text
@d17 1
a17 1
# $Id: pkgfilter.rb,v 1.2 2011/03/08 00:09:42 edd Exp $
@


1.2
log
@Update to TeX Live 2010.

This year we pre-generate format and maps as requested by kili.

Started adding test cases in the tests/ dir.

Upgrades from 2009 will cause a harmless warning regarding texlinks. Espie is
aware of this, it was not easily fixable.

Uninstalls of texlive 2010 which were previously upgraded from 2009 will make
lots of noise regarding non-empty directories which can not be deleted. This
is due to unregistered package directories in the old texlive 2009 pacakage and
has been fixed in the 2010 package (rblatter script was modified to register
*all* parent dirs in PLISTs).

Installs/uninstalls of texlive 2010 on a fresh system (which has never
seen texlive 2009) are squeaky clean.

This has been in use for a number of months on my work machine, so should be
pretty stable, but I am sure someone will find some obscure bugs. These can be
fixed in tree.

OK espie@@
@
text
@d2 1
a2 1
# Copyright (c) 2008-2010, Edd Barrett <vext01@@gmail.com>
d17 1
a17 1
# $Id: pkgfilter.rb,v 1.1.1.1 2010/10/08 22:08:06 edd Exp $
d153 2
d160 1
a160 1
			printf "*error: unknown execute statement:"
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
# $Id: pkgfilter.rb 18 2010-08-20 11:38:48Z eb771 $
@


1.1.1.1
log
@import rblatter - script used to generate packing lists for the texmfs based
upon TeX Live's tlpdb.

Imported at espie's request.

Note: This will need alterations for tl2010.

OK espie@@
@
text
@@
