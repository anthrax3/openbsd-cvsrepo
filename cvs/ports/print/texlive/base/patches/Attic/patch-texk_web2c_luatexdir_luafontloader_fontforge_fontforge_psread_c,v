head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2012.12.17.20.28.04;	author edd;	state dead;
branches;
next	1.1;

1.1
date	2011.11.23.12.00.45;	author edd;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to TeX Live 2012.

Many people have mailed me successful test reports and matthieu tells me he
has been running this for some time now.

Thanks to those that tested.

OK matthieu@@
@
text
@$OpenBSD: patch-texk_web2c_luatexdir_luafontloader_fontforge_fontforge_psread_c,v 1.1 2011/11/23 12:00:45 edd Exp $

luatex psread.c array size fix
http://tug.org/pipermail/tldistro/2011q4/000152.html

--- texk/web2c/luatexdir/luafontloader/fontforge/fontforge/psread.c.origy	Sun Apr  4 14:55:46 2010
+++ texk/web2c/luatexdir/luafontloader/fontforge/fontforge/psread.c	Sun Oct 23 21:22:57 2011
@@@@ -385,7 +385,7 @@@@ return;
     wrapper->top = io;
 }
 
-static int ioescapestopped(IO *wrapper, struct psstack *stack, int sp) {
+static int ioescapestopped(IO *wrapper, struct psstack *stack, int sp, const size_t bsize) {
     _IO *io = wrapper->top, *iop;
     int wasstopped;
 
@@@@ -396,7 +396,7 @@@@ static int ioescapestopped(IO *wrapper, struct psstack
 	free(io);
 	if ( wasstopped ) {
 	    wrapper->top = iop;
-	    if ( sp<(int)(sizeof(stack)/sizeof(stack[0])) ) {
+	    if ( sp<(int)bsize ) {
 		stack[sp].type = ps_bool;
 		stack[sp++].u.tf = true;
 	    }
@@@@ -1609,7 +1609,7 @@@@ static void _InterpretPS(IO *wrapper, EntityChar *ec, 
 	    }
 	  break;
 	  case pt_stop:
-	    sp = ioescapestopped(wrapper,stack,sp);
+	    sp = ioescapestopped(wrapper,stack,sp,sizeof(stack)/sizeof(stack[0]));
 	  break;
 	  case pt_load:
 	    if ( sp>=1 && stack[sp-1].type==ps_lit ) {
@


1.1
log
@update to texlive-2011, OK kili@@
@
text
@d1 1
a1 1
$OpenBSD$
@

