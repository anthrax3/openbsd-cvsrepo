head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.2
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.2.0.26
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.22
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.20
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.18
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.16
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.14
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.12
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.22
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.20
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.18
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.16
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.14
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.12
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.10
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.8
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.6
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.4
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	xsa_2004-Jul-27:1.1.1.1
	xsa:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2017.01.03.19.25.45;	author landry;	state Exp;
branches;
next	1.7;
commitid	DUQxrGal1j1UJq9W;

1.7
date	2016.01.16.19.49.34;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	31uhfHZLS7xqaqH2;

1.6
date	2016.01.05.22.12.02;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	4PkIeefbEdrVKoOQ;

1.5
date	2016.01.05.15.26.09;	author nigel;	state Exp;
branches;
next	1.4;
commitid	ta8GqftvCIftioJd;

1.4
date	2016.01.05.13.21.49;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	6Aq8FbmuAnxCBKFF;

1.3
date	2016.01.05.13.19.35;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	9Tzf4yGgFU1finfA;

1.2
date	2010.02.01.17.00.14;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.07.27.08.55.21;	author xsa;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.07.27.08.55.21;	author xsa;	state Exp;
branches;
next	;


desc
@@


1.8
log
@bump ports depending on python3 in print
@
text
@# $OpenBSD: Makefile,v 1.7 2016/01/16 19:49:34 ajacoutot Exp $

COMMENT=		PDF-generating toolkit for Python

MODPY_EGG_VERSION=	3.2.0
DISTNAME=		reportlab-${MODPY_EGG_VERSION}
PKGNAME=		py-${DISTNAME}
EPOCH=			0
REVISION=		2

# see patches/patch-setup_py
# grep 'archive =' reportlab-3.2.0/setup.py
PFBFER=			pfbfer-20070710.zip
SUBST_VARS=		FULLDISTDIR PFBFER WRKINST MODPY_SITEPKG
EXTRACT_ONLY=		${DISTNAME}${EXTRACT_SUFX}
DISTFILES=		${DISTNAME}${EXTRACT_SUFX} \
			${PFBFER}:0

CATEGORIES=		print graphics

HOMEPAGE=		http://www.reportlab.com

# BSD, LGPLv2, MPL1.0, MIT
PERMIT_PACKAGE_CDROM=	Yes

WANTLIB += ${MODPY_WANTLIB} art_lgpl_2 freetype pthread

MASTER_SITES0=		http://www.reportlab.com/ftp/

MODULES=		lang/python

MODPY_PI=		Yes
MODPY_PI_DIR=		r/reportlab
MODPY_SETUPTOOLS=	Yes

LIB_DEPENDS=		graphics/libart

RUN_DEPENDS=		graphics/py-Pillow${MODPY_FLAVOR}
BUILD_DEPENDS=		${RUN_DEPENDS}
TEST_DEPENDS=		${RUN_DEPENDS}

# requires network access
TEST_IS_INTERACTIVE=	Yes

FLAVORS=		python3
FLAVOR?=

pre-configure:
	${SUBST_CMD} ${WRKSRC}/setup.py \
		${WRKSRC}/docs/genAll.py \
		${WRKSRC}/docs/userguide/genuserguide.py

# XXX FLAVOR conflict
#post-install:
#	cd ${WRKSRC}/docs && ${MODPY_BIN} genAll.py
#	${INSTALL_DATA_DIR} ${PREFIX}/share/doc/py-reportlab
#	${INSTALL_DATA} ${WRKBUILD}/docs/reportlab-userguide.pdf \
#		${PREFIX}/share/doc/py-reportlab

do-test:
	cd ${WRKSRC}/tests && \
		${MAKE_ENV} PYTHONPATH=${WRKDIST}:${WRKINST}${MODPY_SITEPKG} \
		${MODPY_BIN} ./runAll.py

.include <bsd.port.mk>
@


1.7
log
@Don't ship the pdf documentation as it makes both FLAVORs conflict.
knock on wood from jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2016/01/05 22:12:02 ajacoutot Exp $
d9 1
a9 1
REVISION=		1
@


1.6
log
@Missing BDEP.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2016/01/05 15:26:09 nigel Exp $
d9 1
a9 1
REVISION=		0
d53 6
a58 5
post-install:
	cd ${WRKSRC}/docs && ${MODPY_BIN} genAll.py
	${INSTALL_DATA_DIR} ${PREFIX}/share/doc/py-reportlab
	${INSTALL_DATA} ${WRKBUILD}/docs/reportlab-userguide.pdf \
		${PREFIX}/share/doc/py-reportlab
d60 1
a60 1
do-test: fake
@


1.5
log
@Use MASTER_SITE0 for 2nd Download.

Ok aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2016/01/05 13:21:49 ajacoutot Exp $
d39 1
@


1.4
log
@Flatten.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2016/01/05 13:19:36 ajacoutot Exp $
d17 1
a17 1
			${PFBFER}
@


1.3
log
@Update to py-reportlab-3.2.0.
- remove plugins/renderPM, it's now part of reportlab
- add a python3 FLAVOR
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2010/02/01 17:00:14 espie Exp $
d3 1
a3 2
     SUBDIR =
     SUBDIR += reportlab
d5 59
a63 1
.include <bsd.port.subdir.mk>
@


1.2
log
@SUBDIR += is wrong: it means the makefile will pick up SUBDIR from env, thus
breaking cd /usr/ports && SUBDIR=some/path make something for
category makefiles. While there, also put spaces around += uniformously.
okay naddy@@, jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2004/07/27 08:55:21 xsa Exp $
a3 1
     SUBDIR += plugins
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d3 1
@


1.1.1.1
log
@
Initial import of py-reportlab-1.19 and plugins.

The ReportLab Toolkit is Open Source PDF library. This library
implements a flexible layout engine named Platypus that builds documents
from components like headlines, paragraphs, fonts, tables, bitmap
images, vector graphics, etc. These flowable elements are placed in a
document "story" following a set of templates for frames, pages and the
entire document itself. In addition to the standard 14 PostScript fonts
there is full support for custom embedded Type-1 as well as for Asian
fonts. The included graphics subpackage provides a set of primitive
shapes as well as reusable widgets building on them. Among the sample
collections is a very useful set of business chart diagrams, including
bar charts, line charts and pie charts.  Different renderers can be used
to create vector graphics (in fact, even full document pages) as
individual components not only in PDF, but also in EPS and in a variety
of bitmap formats including JPEG, PNG, GIF, BMP and PICT.

Submitted and maintained by <Aleksander.Piotrowski at nic.com.pl> 
@
text
@@
