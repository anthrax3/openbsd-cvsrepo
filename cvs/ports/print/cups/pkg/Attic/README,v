head	1.17;
access;
symbols
	OPENBSD_5_2:1.16.0.2
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.2
	OPENBSD_5_0:1.10.0.2
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5;
locks; strict;
comment	@# @;


1.17
date	2012.08.04.14.37.04;	author ajacoutot;	state dead;
branches;
next	1.16;

1.16
date	2012.06.20.14.54.40;	author ajacoutot;	state Exp;
branches;
next	1.15;

1.15
date	2012.04.22.11.41.55;	author ajacoutot;	state Exp;
branches;
next	1.14;

1.14
date	2012.02.16.22.12.08;	author ajacoutot;	state Exp;
branches;
next	1.13;

1.13
date	2012.02.02.07.11.19;	author ajacoutot;	state Exp;
branches;
next	1.12;

1.12
date	2011.10.02.14.41.48;	author ajacoutot;	state Exp;
branches;
next	1.11;

1.11
date	2011.09.08.10.33.12;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2011.07.06.16.03.08;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2011.06.02.13.41.40;	author ajacoutot;	state Exp;
branches;
next	1.8;

1.8
date	2011.05.26.12.52.49;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2011.04.16.14.59.54;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2011.03.09.13.05.20;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2011.01.17.23.24.40;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2011.01.16.23.03.10;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2010.12.30.12.55.03;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.20.14.43.42;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.20.11.39.48;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Major update to CUPS 1.6.1.
This package is now split between -main (the bloat) and -libs (i.e.
cups-libs; which only contains the base libraries which have no
external deps).
Most filters have moved to cups-filters, the split was needed because
cups depends on cups-filters which depends on cups

The nice side-effect is that this will simplify lots of things in tree.
@
text
@$OpenBSD: README,v 1.16 2012/06/20 14:54:40 ajacoutot Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Adding and/or configuring CUPS printers can be done with lpadmin(8), but
for a quick and easy (graphical) setup, after starting the CUPS daemon,
point your browser to:
    http://localhost:631

If you plan on printing non-Postscript files, the "ghostscript" package
must be installed.

By default, CUPS only supports a handful amount of printers -- you will
most probably want to install the "foomatic-filters" packages which
provides a universal filter script along with "foomatic-db-engine" which
will allow you to generate a PPD (Printer Postscript Description) file
for your printer.

Depending on your printer model you may also need to install some driver
package like (non-exhaustive list): hplip/hpijs, foo2zjs, splix,
gutenprint/foomatic-db-gutenprint...

To be able to use CUPS printers from GTK applications, the corresponding
package needs to be installed: "gtk+2-cups" and/or "gtk+3-cups".

USB
===
Since USB printing will be handled by libusb, you need to allow the
_cups user access to the corresponding USB endpoint. To do so, find
where your printer is attached to using `sudo usbdevs -vd` then change
the ownerships accordingly.

e.g.
Controller /dev/usb5:
addr 1: full speed, self powered, config 1, OHCI root hub(0x0000), ATI(0x1002), rev 1.00
  uhub5
 port 1 addr 2: full speed, self powered, config 1, USB MFP(0x082f), EPSON(0x04b8), rev 1.00, iSerialNumber L83010704250947490
   ugen0

$ sudo chown _cups /dev/ugen0.* /dev/usb3

Alternatively, hotplugd(4) attach/detach scripts can be used to automate
this.

The reason we are changing the user and not the group is that it will
allow for multi-function devices to work for both printing and scanning
(e.g. by being owned by _cups:_saned).

To preserve your changes after a system update, use rc.local(8).
e.g. for a multi-function printer/scanner add the following lines:
chown _cups:_saned /dev/ugen0.* /dev/usb1

*** WARNING ***
ulpt(4) needs to be disable in the kernel (see config(8)) or the printer
will not be available to libusb.

UPGRADING
=========
If you experience cups-driverd(8) crashes or printing issues after
upgrading, it may be necessary to remove the old CUPS cache and restart
cups(8):
    # rm /var/cache/cups/* 2>/dev/null
    # ${RCDIR}/cupsd restart
@


1.16
log
@Tweak README.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.15 2012/04/22 11:41:55 ajacoutot Exp $
@


1.15
log
@Use RCDIR instead of /etc/rc.d when refering to packages rc scripts.

discussed with espie and sthen
ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.14 2012/02/16 22:12:08 ajacoutot Exp $
d13 1
a13 1
needs to be installed.
d22 2
a23 2
package like (non-exhaustive list): hplip/hpijs, gutenprint, foo2zjs,
splix...
d62 2
a63 2
upgrading to a new major release (e.g. from 1.5 to 1.6), it may be
necessary to remove the old CUPS cache and restart cups(8):
@


1.14
log
@Update to cups-1.5.2.
While here, create cups's printcap under /etc/cups/ because we are
running unpriviledged so we cannot touch /etc/printcap.
Tweak rc script accordingly.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.13 2012/02/02 07:11:19 ajacoutot Exp $
d65 1
a65 1
    # /etc/rc.d/cupsd restart
@


1.13
log
@Remove bogus symlink which can make cups-driverd go into a loop.
Add a note about updating to a new major version (may require to revove
the cache).
Check the configuration file sanity in rc_pre().

ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.12 2011/10/02 14:41:48 ajacoutot Exp $
d12 6
a17 4
If you want to print to non-Postscript printers or use CUPS bundled PPD
files (i.e. drivers), you'll need to install gstoraster.  You will also
most probably want to install foomatic-filters which provides a
universal filter script along with the foomatic-db-engine package which
d26 1
a26 1
package needs to be installed: gtk+2-cups and/or gtk+3-cups.
d43 3
@


1.12
log
@Adapt documentation after the update to 1.5.0.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.11 2011/09/08 10:33:12 ajacoutot Exp $
d53 8
@


1.11
log
@Major update to cups-1.5.0.

Thanks to landry@@ for the bulk testing.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.10 2011/07/06 16:03:08 ajacoutot Exp $
d26 3
a28 10
CUPS supports both ulpt(4) and libusb for printing to USB devices.
ulpt(4) should work out of the box, however:
* ulpt(4) does not support select() which is used by CUPS to know when
the device can accept more data (http://www.cups.org/str.php?L3028)
* it won't be able to automatically detect the corresponding driver/PPD
* it is deprecated upstream in favor of libusb

Required steps for libusb based printing
========================================
If you choose to make your USB printer use libusb, you need to allow the
d34 4
a37 6
Controller /dev/usb3:
addr 1: full speed, self powered, config 1, UHCI root hub(0x0000), Intel(0x8086), rev 1.00
  uhub3
 port 1 powered
 port 2 addr 2: full speed, self powered, config 1, USB MFP(0x082f), EPSON(0x04b8), rev 1.00, iSerialNumber L83010704250947490
   ulpt0
d49 4
@


1.10
log
@Advise users to install gstoraster. We cannot make it a RUN_DEPENDS because
of a cyclic dependency:
cups -> gstoraster -> ghostscript -> cups
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.9 2011/06/02 13:41:40 ajacoutot Exp $
d26 2
a27 2
This package supports both ulpt(4) and libusb for printing to USB
devices. ulpt(4) should work out of the box, however:
@


1.9
log
@Add a consistent header that substitutes FULLPKGNAME for the READMEs.

ok jasper@@ sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.8 2011/05/26 12:52:49 ajacoutot Exp $
d13 1
a13 1
files (i.e. drivers), you'll need to install ghostscript.  You will also
@


1.8
log
@Adjust README for gtk+3.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.7 2011/04/16 14:59:54 ajacoutot Exp $
d3 3
a5 2
Using CUPS under OpenBSD
========================
d34 1
a34 1
----------------------------------------
@


1.7
log
@Extend README, after a discussion with oga@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.6 2011/03/09 13:05:20 ajacoutot Exp $
d22 2
a23 2
To be able to use CUPS printers from gtk+2 applications, the gtk+2-cups
package needs to be installed.
@


1.6
log
@Use the same trick as in nut to identify the /dev/{ugen,usb}* we want.

discussed with and ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.5 2011/01/17 23:24:40 ajacoutot Exp $
d6 5
d13 4
a16 2
most probably want to install the foomatic-filters package which
provides a universal filter script.
d18 3
a20 2
Depending on your printer model you may need to install some driver
package like (non-exhaustive list): hplip, gutenprint, foo2zjs, splix...
@


1.5
log
@Tweaks, from discussion with jakemsr@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.4 2011/01/16 23:03:10 ajacoutot Exp $
d28 2
a29 4
where your printer is attached to using dmesg(8) then change the
ownerships accordingly.
ugenX = /dev/ugenX
uhubX = /dev/usbX
d32 9
a40 3
$ dmesg | grep ugen
ugen0 at uhub1 port 1 "EPSON USB MFP" rev 1.10/1.00 addr 2
$ sudo chown _cups /dev/ugen0.* /dev/usb1
@


1.4
log
@Fix README after recent ugen(4) changes from jakemsr@@
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.3 2010/12/30 12:55:03 ajacoutot Exp $
d27 1
a27 1
_cups user rw access to the corresponding USB endpoint. To do so, find
@


1.3
log
@Mention gtk+2-cups.

prodded by Jiri B.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.2 2010/12/20 14:43:42 ajacoutot Exp $
a18 2
* it needs to claim the entire USB port, so it will not be possible to
access the scanner part of a multi-function device
d26 1
a26 5
If you choose to make your USB printer use libusb, you'll have to
disable ulpt(4) in your kernel - see config(8) - which will allow libusb
to claim your device.

Since USB printing will be handled by libusb, you need to allow the
@


1.2
log
@Some rewording a tweaks.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1 2010/12/20 11:39:48 ajacoutot Exp $
d13 3
@


1.1
log
@Unbreak ulpt(4) printing.

Add libusb support. Bring a patch from upstream bug DB that allows for
both ulpt(4) and libusb based devices to work without the need for
separate packages.

Remove the useless rc patch (we provide our own).

Move MESSAGE to README and extend it.
@
text
@d1 1
a1 1
$OpenBSD$
d17 3
a19 1
access the scanner part of multi-function devices
@

