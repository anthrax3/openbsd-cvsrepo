head	1.4;
access;
symbols
	OPENBSD_4_5:1.3.0.10
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.8
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.6
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.4
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_8:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2009.04.27.08.25.39;	author bernd;	state dead;
branches;
next	1.3;

1.3
date	2007.08.03.20.51.42;	author kili;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2006.10.01.10.43.38;	author mbalmer;	state dead;
branches;
next	1.1;

1.1
date	2005.12.06.23.23.44;	author mbalmer;	state Exp;
branches
	1.1.2.1
	1.1.4.1
	1.1.8.1;
next	;

1.1.2.1
date	2005.12.07.21.22.45;	author sturm;	state Exp;
branches;
next	;

1.1.4.1
date	2005.12.07.21.23.22;	author sturm;	state Exp;
branches;
next	;

1.1.8.1
date	2007.08.15.08.04.05;	author sturm;	state Exp;
branches;
next	;

1.3.2.1
date	2007.08.07.06.05.21;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to cups-1.3.10. With lots of help from ajacoutot@@.

There's an issue with the admin.cgi which will be fixed
in-tree.

ok ajacoutot@@, jasper@@
@
text
@$OpenBSD: patch-pdftops_Stream_cxx,v 1.3 2007/08/03 20:51:42 kili Exp $

Fix for CVE-2007-3387.

--- pdftops/Stream.cxx.orig	Mon Feb 13 04:08:11 2006
+++ pdftops/Stream.cxx	Fri Aug  3 21:53:53 2007
@@@@ -411,15 +411,13 @@@@ StreamPredictor::StreamPredictor(Stream *strA, int pre
   ok = gFalse;
 
   nVals = width * nComps;
-  if (width <= 0 || nComps <= 0 || nBits <= 0 ||
-      nComps >= INT_MAX / nBits ||
-      width >= INT_MAX / nComps / nBits ||
-      nVals * nBits + 7 < 0) {
-    return;
-  }
   pixBytes = (nComps * nBits + 7) >> 3;
   rowBytes = ((nVals * nBits + 7) >> 3) + pixBytes;
-  if (rowBytes <= 0) {
+  if (width <= 0 || nComps <= 0 || nBits <= 0 ||
+      nComps > gfxColorMaxComps ||
+      nBits > 16 ||
+      width >= INT_MAX / nComps ||      // check for overflow in nVals
+      nVals >= (INT_MAX - 7) / nBits) { // check for overflow in rowBytes
     return;
   }
   predLine = (Guchar *)gmalloc(rowBytes);
@


1.3
log
@
SECURITY: CVE-2007-3387.

ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3.2.1
log
@MFC (original commit kili@@):
- fixes CVE-2007-3387

ok sturm@@
@
text
@d2 3
d6 2
a7 2
+++ pdftops/Stream.cxx	Sun Aug  5 13:35:53 2007
@@@@ -411,15 +411,13 @@@@ StreamPredictor::StreamPredictor(Stream 
@


1.2
log
@Update to CUPS 1.2.4, which has lots of improvements over the old version
we had, like better support for foreign languages and the usual plethora
of bugfixes.

tested on various architectures and with various applications that use CUPS
as their printing system.  I verified that all ports that are depending on
CUPS still build.
@
text
@d1 8
a8 16
$OpenBSD: patch-pdftops_Stream_cxx,v 1.1 2005/12/06 23:23:44 mbalmer Exp $
--- pdftops/Stream.cxx.orig	Mon Feb  2 23:41:09 2004
+++ pdftops/Stream.cxx	Wed Dec  7 00:07:58 2005
@@@@ -404,18 +404,33 @@@@ void ImageStream::skipLine() {
 
 StreamPredictor::StreamPredictor(Stream *strA, int predictorA,
 				 int widthA, int nCompsA, int nBitsA) {
+  int totalBits;
+
   str = strA;
   predictor = predictorA;
   width = widthA;
   nComps = nCompsA;
   nBits = nBitsA;
+  predLine = NULL;
+  ok = gFalse;
d11 6
a16 6
+  totalBits = nVals * nBits;
+  if (totalBits == 0 ||
+      (totalBits / nBits) / nComps != width ||
+      totalBits + 7 < 0) {
+    return;
+  }
d18 9
a26 5
-  rowBytes = ((nVals * nBits + 7) >> 3) + pixBytes;
+  rowBytes = ((totalBits + 7) >> 3) + pixBytes;
+  if (rowBytes < 0) {
+    return;
+  }
a27 44
   memset(predLine, 0, rowBytes);
   predIdx = rowBytes;
+
+  ok = gTrue;
 }
 
 StreamPredictor::~StreamPredictor() {
@@@@ -991,6 +1006,10 @@@@ LZWStream::LZWStream(Stream *strA, int p
     FilterStream(strA) {
   if (predictor != 1) {
     pred = new StreamPredictor(this, predictor, columns, colors, bits);
+    if (!pred->isOk()) {
+      delete pred;
+      pred = NULL;
+    }
   } else {
     pred = NULL;
   }
@@@@ -2891,6 +2910,14 @@@@ GBool DCTStream::readBaselineSOF() {
   height = read16();
   width = read16();
   numComps = str->getChar();
+  if (numComps <= 0 || numComps > 4) {
+    error(getPos(), "Bad number of components in DCT stream", prec);
+    return gFalse;
+  }
+  if (numComps <= 0 || numComps > 4) {
+    error(getPos(), "Bad number of components in DCT stream", prec);
+    return gFalse;
+  }
   if (prec != 8) {
     error(getPos(), "Bad DCT precision %d", prec);
     return gFalse;
@@@@ -3249,6 +3276,10 @@@@ FlateStream::FlateStream(Stream *strA, i
     FilterStream(strA) {
   if (predictor != 1) {
     pred = new StreamPredictor(this, predictor, columns, colors, bits);
+    if (!pred->isOk()) {
+      delete pred;
+      pred = NULL;
+    }
   } else {
     pred = NULL;
   }
@


1.1
log
@Security:  Fix vulnerabilities in the PDF to PS rendering code
(iDefense advisories from 2005-12-05)
- DCTStream Baseline Heap Overflow Vulnerability
- DCTStream Progressive Heap Overflow
- StreamPredictor Heap Overflow Vulnerability
Patch provided by the Xpdf folks.
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.8.1
log
@MFC (original commit kili@@):
- fixes CVE-2007-3387
@
text
@d1 1
a1 1
$OpenBSD: patch-pdftops_Stream_cxx,v 1.1 2005/12/06 23:23:44 mbalmer Exp $
d3 9
a11 18
+++ pdftops/Stream.cxx	Sun Aug 12 13:46:17 2007
@@@@ -15,6 +15,7 @@@@
 #include <stdio.h>
 #include <stdlib.h>
 #include <stddef.h>
+#include <limits.h>
 #ifndef WIN32
 #include <unistd.h>
 #endif
@@@@ -28,6 +29,7 @@@@
 #ifndef NO_DECRYPTION
 #include "Decrypt.h"
 #endif
+#include "GfxState.h"
 #include "Stream.h"
 #include "JBIG2Stream.h"
 #include "Stream-CCITT.h"
@@@@ -409,13 +411,24 @@@@ StreamPredictor::StreamPredictor(Stream 
d19 6
d26 3
a28 6
   rowBytes = ((nVals * nBits + 7) >> 3) + pixBytes;
+  if (width <= 0 || nComps <= 0 || nBits <= 0 ||
+      nComps > gfxColorMaxComps ||
+      nBits > 16 ||
+      width >= INT_MAX / nComps ||      // check for overflow in nVals
+      nVals >= (INT_MAX - 7) / nBits) { // check for overflow in rowBytes
d39 1
a39 1
@@@@ -991,6 +1004,10 @@@@ LZWStream::LZWStream(Stream *strA, int p
d50 1
a50 1
@@@@ -2891,6 +2908,14 @@@@ GBool DCTStream::readBaselineSOF() {
d65 1
a65 1
@@@@ -3249,6 +3274,10 @@@@ FlateStream::FlateStream(Stream *strA, i
@


1.1.4.1
log
@MFC:
Security:  Fix vulnerabilities in the PDF to PS rendering code
(iDefense advisories from 2005-12-05)
- DCTStream Baseline Heap Overflow Vulnerability
- DCTStream Progressive Heap Overflow
- StreamPredictor Heap Overflow Vulnerability
Patch provided by the Xpdf folks.
@
text
@d1 1
a1 1
$OpenBSD: patch-pdftops_Stream_cxx,v 1.1 2005/12/06 23:23:44 mbalmer Exp $
@


1.1.2.1
log
@MFC:
Security:  Fix vulnerabilities in the PDF to PS rendering code
(iDefense advisories from 2005-12-05)
- DCTStream Baseline Heap Overflow Vulnerability
- DCTStream Progressive Heap Overflow
- StreamPredictor Heap Overflow Vulnerability
Patch provided by the Xpdf folks.
@
text
@d1 1
a1 1
$OpenBSD: patch-pdftops_Stream_cxx,v 1.1 2005/12/06 23:23:44 mbalmer Exp $
@

