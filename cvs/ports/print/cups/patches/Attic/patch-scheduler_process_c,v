head	1.6;
access;
symbols
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2015.02.10.08.29.33;	author ajacoutot;	state dead;
branches;
next	1.5;
commitid	9fRjFjnMfPJHQiVu;

1.5
date	2014.11.16.10.32.56;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	cR4QxfhxBZdN0BdB;

1.4
date	2014.11.15.10.22.23;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	20oo4Dj2S2v31rH3;

1.3
date	2009.07.12.19.58.19;	author ajacoutot;	state dead;
branches;
next	1.2;

1.2
date	2009.05.18.17.09.54;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.14.12.38.52;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to cups-2.0.2.
@
text
@$OpenBSD: patch-scheduler_process_c,v 1.5 2014/11/16 10:32:56 ajacoutot Exp $

https://www.cups.org/str.php?L4526

--- scheduler/process.c.orig	Fri Nov 14 18:14:45 2014
+++ scheduler/process.c	Sat Nov 15 10:10:58 2014
@@@@ -465,13 +465,12 @@@@ cupsdStartProcess(
 		nice_str[16];		/* FilterNice string */
   uid_t		user;			/* Command UID */
   cupsd_proc_t	*proc;			/* New process record */
-#if defined(HAVE_POSIX_SPAWN) && !defined(__OpenBSD__)
+#ifdef HAVE_POSIX_SPAWN
   posix_spawn_file_actions_t actions;	/* Spawn file actions */
   posix_spawnattr_t attrs;		/* Spawn attributes */
-  sigset_t	defsignals;		/* Default signals */
 #elif defined(HAVE_SIGACTION) && !defined(HAVE_SIGSET)
   struct sigaction action;		/* POSIX signal handler */
-#endif /* HAVE_POSIX_SPAWN && !__OpenBSD__ */
+#endif /* HAVE_POSIX_SPAWN */
 #if defined(__APPLE__)
   char		processPath[1024],	/* CFProcessPath environment variable */
 		linkpath[1024];		/* Link path for symlinks... */
@@@@ -535,9 +534,9 @@@@ cupsdStartProcess(
   * Use helper program when we have a sandbox profile...
   */
 
-#if !defined(HAVE_POSIX_SPAWN) || defined(__OpenBSD__)
+#ifndef HAVE_POSIX_SPAWN
   if (profile)
-#endif /* !HAVE_POSIX_SPAWN || __OpenBSD__ */
+#endif /* !HAVE_POSIX_SPAWN */
   {
     snprintf(cups_exec, sizeof(cups_exec), "%s/daemon/cups-exec", ServerBin);
     snprintf(user_str, sizeof(user_str), "%d", user);
@@@@ -573,21 +572,14 @@@@ cupsdStartProcess(
       cupsdLogMessage(CUPSD_LOG_DEBUG2, "cupsdStartProcess: argv[%d] = \"%s\"", i, argv[i]);
   }
 
-#if defined(HAVE_POSIX_SPAWN) && !defined(__OpenBSD__) /* OpenBSD posix_spawn is busted with SETSIGDEF */
+#ifdef HAVE_POSIX_SPAWN
  /*
   * Setup attributes and file actions for the spawn...
   */
 
   cupsdLogMessage(CUPSD_LOG_DEBUG2, "cupsdStartProcess: Setting spawn attributes.");
-  sigemptyset(&defsignals);
-  sigaddset(&defsignals, SIGTERM);
-  sigaddset(&defsignals, SIGCHLD);
-  sigaddset(&defsignals, SIGPIPE);
-
   posix_spawnattr_init(&attrs);
   posix_spawnattr_setflags(&attrs, POSIX_SPAWN_SETPGROUP | POSIX_SPAWN_SETSIGDEF);
-  posix_spawnattr_setpgroup(&attrs, 0);
-  posix_spawnattr_setsigdefault(&attrs, &defsignals);
 
   cupsdLogMessage(CUPSD_LOG_DEBUG2, "cupsdStartProcess: Setting file actions.");
   posix_spawn_file_actions_init(&actions);
@@@@ -796,7 +788,7 @@@@ cupsdStartProcess(
   }
 
   cupsdReleaseSignals();
-#endif /* HAVE_POSIX_SPAWN && !__OpenBSD__ */
+#endif /* HAVE_POSIX_SPAWN */
 
   if (*pid)
   {
@


1.5
log
@New bug.
@
text
@d1 1
a1 1
$OpenBSD: patch-scheduler_process_c,v 1.4 2014/11/15 10:22:23 ajacoutot Exp $
@


1.4
log
@Major update to cups-2.0.1.
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
https://www.cups.org/str.php?L4496 (REVERT)
@


1.3
log
@- update to cups-1.3.11
kurt@@'s patches are now upstream
@
text
@d1 25
a25 78
$OpenBSD: patch-scheduler_process_c,v 1.2 2009/05/18 17:09:54 ajacoutot Exp $
--- scheduler/process.c.orig	Tue Sep 25 17:44:07 2007
+++ scheduler/process.c	Mon May 18 18:57:16 2009
@@@@ -186,41 +186,51 @@@@ cupsdStartProcess(
 
     if (infd != 0)
     {
-      close(0);
-      if (infd > 0)
-        dup(infd);
-      else
-        open("/dev/null", O_RDONLY);
+      if (infd < 0)
+        infd = open("/dev/null", O_RDONLY);
+
+      if (infd != 0)
+      {
+        dup2(infd, 0);
+	close(infd);
+      }
     }
+
     if (outfd != 1)
     {
-      close(1);
-      if (outfd > 0)
-	dup(outfd);
-      else
-        open("/dev/null", O_WRONLY);
+      if (outfd < 0)
+        outfd = open("/dev/null", O_WRONLY);
+
+      if (outfd != 1)
+      {
+        dup2(outfd, 1);
+	close(outfd);
+      }
     }
+
     if (errfd != 2)
     {
-      close(2);
-      if (errfd > 0)
-        dup(errfd);
-      else
-        open("/dev/null", O_WRONLY);
+      if (errfd < 0)
+        errfd = open("/dev/null", O_WRONLY);
+
+      if (errfd != 2)
+      {
+        dup2(errfd, 2);
+	close(errfd);
+      }
     }
-    if (backfd != 3)
+
+    if (backfd != 3 && backfd >= 0)
     {
-      close(3);
-      if (backfd > 0)
-	dup(backfd);
-      else
-        open("/dev/null", O_RDWR);
+      dup2(backfd, 3);
+      close(backfd);
       fcntl(3, F_SETFL, O_NDELAY);
     }
-    if (sidefd != 4 && sidefd > 0)
+
+    if (sidefd != 4 && sidefd >= 0)
     {
-      close(4);
-      dup(sidefd);
+      dup2(sidefd, 4);
+      close(sidefd);
       fcntl(4, F_SETFL, O_NDELAY);
     }
d27 40
@


1.2
log
@- upstream integrated kurt@@'s patches with some small changes ; bring
them in as it will ease update to a new release
@
text
@d1 1
a1 1
$OpenBSD: patch-scheduler_process_c,v 1.1 2009/05/14 12:38:52 kurt Exp $
@


1.1
log
@Fix daemon mode by correcting non-portable code:
- close(0); open(...); is no guaranteed to open on file descriptor 0.
  Change to using dup2()
- Threaded applications that fork() may only call async-signal-safe
  functions in the child process until such time as one of the exec
  functions are called. Enable the APPLE code path that uses execlp()
  in child. Also close child fd's in such a way as to not trip on
  non-blocking fd design issues of libpthread.

okay ajacoutot@@
@
text
@d1 4
a4 12
$OpenBSD$
--- scheduler/process.c.orig	Tue Sep 25 11:44:07 2007
+++ scheduler/process.c	Tue May 12 11:01:25 2009
@@@@ -125,6 +125,7 @@@@ cupsdStartProcess(
 		linkpath[1024];		/* Link path for symlinks... */
   int		linkbytes;		/* Bytes for link path */
 #endif /* __APPLE__ */
+  int		dnfd;
 
 
   cupsdLogMessage(CUPSD_LOG_DEBUG2,
@@@@ -186,41 +187,56 @@@@ cupsdStartProcess(
d9 1
a9 1
       if (infd > 0)
d13 5
d19 1
a19 6
+      else {
+        dnfd = open("/dev/null", O_RDONLY);
+        if (dnfd != 0) {
+          dup2(dnfd, 0);
+          close(dnfd);
+        }
d22 1
d26 1
a26 1
       if (outfd > 0)
d30 7
a36 7
+	dup2(outfd, 1);
+      else {
+        dnfd = open("/dev/null", O_WRONLY);
+        if (dnfd != 1) {
+          dup2(dnfd, 1);
+          close(dnfd);
+        }
d39 1
d43 1
a43 1
       if (errfd > 0)
d47 5
d53 1
a53 6
+      else {
+        dnfd = open("/dev/null", O_WRONLY);
+        if (dnfd != 2) {
+          dup2(dnfd, 2);
+          close(dnfd);
+        }
d56 3
a58 1
     if (backfd != 3)
d61 1
a61 1
       if (backfd > 0)
d65 2
a66 8
+	dup2(backfd, 3);
+      else {
+        dnfd = open("/dev/null", O_RDWR);
+        if (dnfd != 3) {
+          dup2(dnfd, 3);
+          close(dnfd);
+        }
+      }
d69 3
a71 1
     if (sidefd != 4 && sidefd > 0)
d76 1
@

