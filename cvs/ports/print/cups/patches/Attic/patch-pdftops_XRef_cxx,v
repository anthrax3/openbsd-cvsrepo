head	1.3;
access;
symbols
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	cups_20050116:1.1.1.1
	mbalmer:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2006.10.01.10.43.38;	author mbalmer;	state dead;
branches;
next	1.2;

1.2
date	2005.01.22.17.12.43;	author mbalmer;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.16.12.36.51;	author mbalmer;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.16.12.36.51;	author mbalmer;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to CUPS 1.2.4, which has lots of improvements over the old version
we had, like better support for foreign languages and the usual plethora
of bugfixes.

tested on various architectures and with various applications that use CUPS
as their printing system.  I verified that all ports that are depending on
CUPS still build.
@
text
@$OpenBSD: patch-pdftops_XRef_cxx,v 1.2 2005/01/22 17:12:43 mbalmer Exp $
--- pdftops/XRef.cxx.orig	Wed Oct 13 22:55:53 2004
+++ pdftops/XRef.cxx	Sat Jan 22 17:42:31 2005
@@@@ -16,6 +16,7 @@@@
 #include <stddef.h>
 #include <string.h>
 #include <ctype.h>
+#include <sys/limits.h>
 #include "gmem.h"
 #include "Object.h"
 #include "Stream.h"
@@@@ -76,7 +77,7 @@@@ XRef::XRef(BaseStream *strA, GString *ow
 
   // trailer is ok - read the xref table
   } else {
-    if (size*sizeof(XRefEntry)/sizeof(XRefEntry) != size) {
+    if ((unsigned) size >= INT_MAX / sizeof(XRefEntry)) {
       error(-1, "Invalid 'size' inside xref table.");
       ok = gFalse;
       errCode = errDamaged;
@@@@ -291,7 +292,7 @@@@ GBool XRef::readXRef(Guint *pos) {
     // table size
     if (first + n > size) {
       newSize = first + n;
-      if (newSize*sizeof(XRefEntry)/sizeof(XRefEntry) != newSize) {
+      if ((unsigned) newSize >= INT_MAX / sizeof(XRefEntry)) {
         error(-1, "Invalid 'newSize'");
         goto err2;
       }
@@@@ -445,7 +446,7 @@@@ GBool XRef::constructXRef() {
 	    if (!strncmp(p, "obj", 3)) {
 	      if (num >= size) {
 		newSize = (num + 1 + 255) & ~255;
-	        if (newSize*sizeof(XRefEntry)/sizeof(XRefEntry) != newSize) {
+	        if ((unsigned ) newSize >= INT_MAX / sizeof(XRefEntry)) {
 	          error(-1, "Invalid 'obj' parameters.");
 	          return gFalse;
 	        }
@@@@ -470,7 +471,7 @@@@ GBool XRef::constructXRef() {
     } else if (!strncmp(p, "endstream", 9)) {
       if (streamEndsLen == streamEndsSize) {
 	streamEndsSize += 64;
-        if (streamEndsSize*sizeof(int)/sizeof(int) != streamEndsSize) {
+        if ((unsigned) streamEndsSize >= INT_MAX / sizeof(int)) {
           error(-1, "Invalid 'endstream' parameter.");
           return gFalse;
         }
@@@@ -526,6 +527,9 @@@@ GBool XRef::checkEncrypted(GString *owne
 	  keyLength = lengthObj.getInt() / 8;
 	} else {
 	  keyLength = 5;
+	}
+	if (keyLength > 16) {
+	  keyLength = 16;
 	}
 	permFlags = permissions.getInt();
 	if (encVersion >= 1 && encVersion <= 2 &&
@


1.2
log
@SECURITY:

Apply a security fix from xpdf, which is the base for pdftops and
bump the package name.

spotted by alek@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
+++ pdftops/XRef.cxx	Sat Dec 25 12:03:27 2004
d48 10
@


1.1.1.1
log
@CUPS, the Common Unix Printing System.

A cross-platform printing solution for Unix environments,
based on the "Internet Printing Protocol, IPP".

ok alek@@
@
text
@@
