head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.10
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2015.07.24.12.46.23;	author jasper;	state Exp;
branches
	1.1.2.1;
next	;
commitid	cYcMUQE9BNPkos92;

1.1.2.1
date	2015.07.24.12.47.44;	author jasper;	state Exp;
branches;
next	;
commitid	jrubmoKNGhGiMJOj;


desc
@@


1.1
log
@Security fix for CVE-2015-3228 ghostscript-core: out-of-bounbds read and write in gs_ttf.ps

ok kili@@ (MAINTAINER)
@
text
@$OpenBSD$

CVE-2015-3228 ghostscript-core: out-of-bounbds read and write in gs_ttf.ps
http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0c0b085

--- base/gsmalloc.c.orig	Fri Jul 24 10:12:58 2015
+++ base/gsmalloc.c	Fri Jul 24 10:20:28 2015
@@@@ -178,7 +178,7 @@@@ gs_heap_alloc_bytes(gs_memory_t * mem, uint size, clie
     } else {
         uint added = size + sizeof(gs_malloc_block_t);
 
-        if (mmem->limit - added < mmem->used)
+        if (added <= size || mmem->limit - added < mmem->used)
             set_msg("exceeded limit");
         else if ((ptr = (byte *) Memento_label(malloc(added), cname)) == 0)
             set_msg("failed");
@


1.1.2.1
log
@Security fix for CVE-2015-3228 ghostscript-core: out-of-bounbds read and write in gs_ttf.ps

ok kili@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD: patch-base_gsmalloc_c,v 1.1 2015/07/24 12:46:23 jasper Exp $
@

