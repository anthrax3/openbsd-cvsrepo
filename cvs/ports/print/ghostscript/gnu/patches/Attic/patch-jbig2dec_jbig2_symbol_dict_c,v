head	1.2;
access;
symbols
	OPENBSD_4_9:1.1.0.8
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.6
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.4
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.06.08.19.15.48;	author kili;	state dead;
branches;
next	1.1;

1.1
date	2009.04.16.19.53.38;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to ghostscript-9.00.

ok landry@@ (after putting it in a bulk build... thanks)
@
text
@$OpenBSD: patch-jbig2dec_jbig2_symbol_dict_c,v 1.1 2009/04/16 19:53:38 jasper Exp $

Security fix for CVE-2009-0196.
Patch from upstream.

--- jbig2dec/jbig2_symbol_dict.c.orig	Thu Apr 16 14:36:06 2009
+++ jbig2dec/jbig2_symbol_dict.c	Thu Apr 16 14:36:31 2009
@@@@ -699,6 +699,15 @@@@ jbig2_decode_symbol_dict(Jbig2Ctx *ctx,
         exrunlength = params->SDNUMEXSYMS;
       else
         code = jbig2_arith_int_decode(IAEX, as, &exrunlength);
+      if (exrunlength > params->SDNUMEXSYMS - j) {
+        jbig2_error(ctx, JBIG2_SEVERITY_FATAL, segment->number,
+          "runlength too large in export symbol table (%d > %d - %d)\n",
+          exrunlength, params->SDNUMEXSYMS, j);
+        jbig2_sd_release(ctx, SDEXSYMS);
+        /* skip to the cleanup code and return SDEXSYMS = NULL */
+        SDEXSYMS = NULL;
+        break;
+      }
       for(k = 0; k < exrunlength; k++)
         if (exflag) {
           SDEXSYMS->glyphs[j++] = (i < m) ? 
@


1.1
log
@- add security fix for CVE-2009-0196

ok kili@@ (MAINTAINER)
@
text
@d1 1
a1 1
$OpenBSD$
@

