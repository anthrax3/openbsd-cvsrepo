head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.8
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.6
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	abieber_20160126:1.1.1.1
	abieber:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.01.26.23.10.08;	author abieber;	state Exp;
branches
	1.1.1.1;
next	;
commitid	doImZbbUw9AwyVct;

1.1.1.1
date	2016.01.26.23.10.08;	author abieber;	state Exp;
branches;
next	;
commitid	doImZbbUw9AwyVct;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- printrun/settings.py.orig	Tue Jan 26 15:21:11 2016
+++ printrun/settings.py	Tue Jan 26 15:21:48 2016
@@@@ -271,8 +271,8 @@@@ class Settings(object):
         self._add(SpinSetting("xy_feedrate", 3000, 0, 50000, _("X && Y manual feedrate"), _("Feedrate for Control Panel Moves in X and Y (mm/min)"), "Printer"))
         self._add(SpinSetting("z_feedrate", 100, 0, 50000, _("Z manual feedrate"), _("Feedrate for Control Panel Moves in Z (mm/min)"), "Printer"))
         self._add(SpinSetting("e_feedrate", 100, 0, 1000, _("E manual feedrate"), _("Feedrate for Control Panel Moves in Extrusions (mm/min)"), "Printer"))
-        self._add(StringSetting("slicecommand", "python skeinforge/skeinforge_application/skeinforge_utilities/skeinforge_craft.py $s", _("Slice command"), _("Slice command"), "External"))
-        self._add(StringSetting("sliceoptscommand", "python skeinforge/skeinforge_application/skeinforge.py", _("Slicer options command"), _("Slice settings command"), "External"))
+        self._add(StringSetting("slicecommand", "python path/to/skeinforge/skeinforge_application/skeinforge_utilities/skeinforge_craft.py $s", _("Slice command"), _("Slice command"), "External"))
+        self._add(StringSetting("sliceoptscommand", "python path/to/skeinforge/skeinforge_application/skeinforge.py", _("Slicer options command"), _("Slice settings command"), "External"))
         self._add(StringSetting("start_command", "", _("Start command"), _("Executable to run when the print is started"), "External"))
         self._add(StringSetting("final_command", "", _("Final command"), _("Executable to run when the print is finished"), "External"))
         self._add(StringSetting("error_command", "", _("Error command"), _("Executable to run when an error occurs"), "External"))
@


1.1.1.1
log
@Import printrun, a set of tools (pronterface and pronsole being the main 
components) for using 3D printers!

OK and tweaks from zhuk@@
@
text
@@
