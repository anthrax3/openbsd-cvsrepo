head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.28
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.26
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.24
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.20
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.22
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.18
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.16
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.14
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.12
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.10
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.8
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.0.28
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.26
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.24
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.22
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.20
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.18
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.16
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.14
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2010.10.28.10.33.16;	author steven;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.10.08.36.28;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove some @@ in makefile, so we can see what is executed, e.g. libtool...

regen patches for v3 while here
@
text
@$OpenBSD$
--- tcl/tcl_compat.c.orig	Mon May 22 20:36:50 2000
+++ tcl/tcl_compat.c	Thu Oct 28 12:28:52 2010
@@@@ -74,7 +74,7 @@@@ bdb_HCommand(interp, objc, objv)
 	 * in the 'berkdb' command.
 	 */
 	if (Tcl_GetIndexFromObj(interp,
-	    objv[1], hcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
+	    objv[1], (CONST84 char **)hcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
 		return (IS_HELP(objv[1]));
 
 	res = NULL;
@@@@ -105,7 +105,7 @@@@ bdb_HCommand(interp, objc, objv)
 		item.key = Tcl_GetStringFromObj(objv[2], NULL);
 		item.data = Tcl_GetStringFromObj(objv[3], NULL);
 		action = 0;
-		if (Tcl_GetIndexFromObj(interp, objv[4], srchacts,
+		if (Tcl_GetIndexFromObj(interp, objv[4], (CONST84 char **)srchacts,
 		    "action", TCL_EXACT, &actindex) != TCL_OK)
 			return (IS_HELP(objv[4]));
 		switch ((enum srchacts)actindex) {
@@@@ -201,7 +201,7 @@@@ bdb_NdbmOpen(interp, objc, objv, dbpp)
 	 */
 	i = 2;
 	while (i < objc) {
-		if (Tcl_GetIndexFromObj(interp, objv[i], ndbopen, "option",
+		if (Tcl_GetIndexFromObj(interp, objv[i], (CONST84 char **)ndbopen, "option",
 		    TCL_EXACT, &optindex) != TCL_OK) {
 			arg = Tcl_GetStringFromObj(objv[i], NULL);
 			if (arg[0] == '-') {
@@@@ -345,7 +345,7 @@@@ bdb_DbmCommand(interp, objc, objv, flag, dbm)
 	 * in the 'berkdb' command.
 	 */
 	if (Tcl_GetIndexFromObj(interp,
-	    objv[1], dbmcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
+	    objv[1], (CONST84 char **)dbmcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
 		return (IS_HELP(objv[1]));
 
 	switch ((enum dbmcmds)cmdindex) {
@@@@ -433,7 +433,7 @@@@ bdb_DbmCommand(interp, objc, objv, flag, dbm)
 		if (flag == DBTCL_DBM)
 			ret = store(key, data);
 		else if (flag == DBTCL_NDBM) {
-			if (Tcl_GetIndexFromObj(interp, objv[4], stflag,
+			if (Tcl_GetIndexFromObj(interp, objv[4], (CONST84 char **)stflag,
 			    "flag", TCL_EXACT, &stindex) != TCL_OK)
 				return (IS_HELP(objv[4]));
 			switch ((enum stflag)stindex) {
@@@@ -606,7 +606,7 @@@@ ndbm_Cmd(clientData, interp, objc, objv)
 	 * defined above.
 	 */
 	if (Tcl_GetIndexFromObj(interp,
-	    objv[1], ndbcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
+	    objv[1], (CONST84 char **)ndbcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
 		return (IS_HELP(objv[1]));
 
 	res = NULL;
@@@@ -675,7 +675,7 @@@@ ndbm_Cmd(clientData, interp, objc, objv)
 		_debug_check();
 		ret = dbm_error(dbp);
 		Tcl_SetErrno(ret);
-		Tcl_SetResult(interp, Tcl_PosixError(interp), TCL_STATIC);
+		Tcl_SetResult(interp, (char *)Tcl_PosixError(interp), TCL_STATIC);
 		break;
 	case NDBRDONLY:
 		/*
@@@@ -733,7 +733,7 @@@@ bdb_RandCommand(interp, objc, objv)
 	 * in the 'berkdb' command.
 	 */
 	if (Tcl_GetIndexFromObj(interp,
-	    objv[1], rcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
+	    objv[1], (CONST84 char **)rcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
 		return (IS_HELP(objv[1]));
 
 	res = NULL;
@@@@ -965,7 +965,7 @@@@ mutex_Cmd(clientData, interp, objc, objv)
 	 * defined above.
 	 */
 	if (Tcl_GetIndexFromObj(interp,
-	    objv[1], mxcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
+	    objv[1], (CONST84 char **)mxcmds, "command", TCL_EXACT, &cmdindex) != TCL_OK)
 		return (IS_HELP(objv[1]));
 
 	res = NULL;
@


1.1
log
@use tcl 8.4
fix packaging on NO_SHARED_ARCHS
bump PKGNAME
@
text
@d2 2
a3 2
--- tcl/tcl_compat.c.orig	2004-01-08 23:18:45.000000000 +0100
+++ tcl/tcl_compat.c	2004-01-08 23:21:06.000000000 +0100
d31 1
a31 1
@@@@ -345,7 +345,7 @@@@ bdb_DbmCommand(interp, objc, objv, flag,
d40 1
a40 1
@@@@ -433,7 +433,7 @@@@ bdb_DbmCommand(interp, objc, objv, flag,
d76 1
a76 1
@@@@ -965,7 +965,7 @@@@ mutex_Cmd(clientData, interp, objc, objv
@

