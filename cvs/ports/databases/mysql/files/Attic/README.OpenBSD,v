head	1.6;
access;
symbols
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2010.11.09.09.55.56;	author ajacoutot;	state dead;
branches;
next	1.5;

1.5
date	2010.11.09.08.55.32;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2010.03.21.09.04.10;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2008.08.24.08.40.03;	author brad;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2008.05.23.12.05.47;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2007.08.08.21.33.51;	author robert;	state Exp;
branches;
next	;

1.3.6.1
date	2010.05.29.01.06.16;	author william;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Move to pkg-readmes.
@
text
@Using MySQL in an OpenBSD environment

If you are installing MySQL for the first time, you have to create
a default database first. In order to create the database, please run
${TRUEPREFIX}/bin/mysql_install_db

You will need to tune the values in the my.cnf file (examples
available in ${TRUEPREFIX}/share/mysql).

By default, the _mysql user, and so the mysqld processes run in
the login(1) class of "daemon". On a busy server, it may be advisable
to put the _mysql user and processes in their own login(1) class
with tuned resources, such as more open file descriptors etc.

For example, add this to the login.conf(5) file:

        mysql:\
                :openfiles-cur=1024:\
                :openfiles-max=2048:\
                :tc=daemon:

Rebuild the login.conf.db file if necessary:

	# cap_mkdb /etc/login.conf

And then modify the rc.d script accordingly.

mysqld_safe(1) is the recommended way to start a MySQL server,
it creates the directory for the socket and adds some safety
features such as restarting the server when an error occurs
and logging runtime information to an error log file. Options
may be passed in the [mysqld_safe] section of my.cnf.

Note that the classes in login.conf(5) are used by login(1);
they do not apply to normal process startup, hence the use of su(1).

For larger servers and dedicated database servers, these numbers
and memory limits (e.g. datasize and stacksize) may also need to be
increased. Please report any changes and experiences to the package
maintainers so that we can update this file for future versions.
@


1.5
log
@Add an rc script for mysqld
@
text
@@


1.4
log
@adjust sample rc.local lines to start the server after printing
the name, as is normal with other ports and daemons started from /etc/rc,
from jcs via Brad.
@
text
@d26 1
a26 6
And start the server like this:

	if [ -x ${TRUEPREFIX}/bin/mysqld_safe ] ; then
		echo -n ' mysql'
		su -c mysql root -c '${TRUEPREFIX}/bin/mysqld_safe >/dev/null 2>&1 &' 
	fi
@


1.3
log
@Upgrade to MySQL 5.0.67.

Tested by sthen@@ on amd64/sparc64.
@
text
@d29 1
a30 1
		echo -n ' mysql'
@


1.3.6.1
log
@MFC:

SECURITY UPDATE to mysql-5.1.47

http://dev.mysql.com/doc/refman/5.1/en/news-5-1-47.html

from Brad
@
text
@d29 1
a30 1
		su -c mysql root -c '${TRUEPREFIX}/bin/mysqld_safe >/dev/null 2>&1 &' 
@


1.2
log
@Since kern.maxfiles default changed, this file has told people to lower
it from the default. Remove the section, people running systems large
enough to need a higher value should already know about the sysctl.

Diff from Brad (MAINTAINER) after a suggestion from me.
@
text
@d5 1
a5 1
@@PREFIX@@/bin/mysql_install_db
d8 1
a8 1
available in @@PREFIX@@/share/mysql).
d28 2
a29 2
	if [ -x @@PREFIX@@/bin/mysqld_safe ] ; then
		su -c mysql root -c '@@PREFIX@@/bin/mysqld_safe >/dev/null 2>&1 &' 
d33 1
a33 1
mysqld_safe(1) is the recommended way to start a mysqld server,
@


1.1
log
@update to version 5.0.45 that includes bugfixes and a couple of security
fixes too;

move to a new way of documenting the usage of mysql,
based on the documentation that can found in postgresql port

the original diff was from Brad; fixes from Stuart Henderson and me;

ok naddy@@, espie@@, pvalchev@@
@
text
@d7 2
a8 11
The default limit in the GENERIC kernel for number of open
files is not large enough for a database with more than a handful
of tables, or a large number of connections. A server running
such a database should have at least the following in
/etc/sysctl.conf:

        kern.maxfiles=4096

This number should be tuned depending on system use. You will also
need to tune the values in the my.cnf file (examples available in
@@PREFIX@@/share/mysql).
@

