head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2001.01.21.17.09.13;	author brad;	state dead;
branches;
next	1.5;

1.5
date	2000.12.26.02.13.43;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.14.21.28.05;	author brad;	state dead;
branches;
next	1.3;

1.3
date	2000.02.11.07.43.32;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2000.01.13.20.24.58;	author brad;	state dead;
branches;
next	1.1;

1.1
date	2000.01.12.01.13.17;	author brad;	state Exp;
branches;
next	;


desc
@@


1.6
log
@upgrade to MySQL 3.23.31
@
text
@--- ltmain.sh.orig	Thu Dec 30 19:42:50 1999
+++ ltmain.sh	Wed Dec 13 09:25:00 2000
@@@@ -1789,6 +1789,9 @@@@
 	*-*-cygwin* | *-*-mingw* | *-*-os2* | *-*-beos*)
 	  # these systems don't actually have a c library (as such)!
 	  ;;
+	*-*-openbsd*)
+	  # do not include libc due to us having libc/libc_r.
+	  ;;
 	*)
 	  # Add libc to deplibs on all other systems.
 	  deplibs="$deplibs -lc"
@@@@ -3522,40 +3525,6 @@@@
     # Exit here if they wanted silent mode.
     test "$show" = : && exit 0
 
-    echo "----------------------------------------------------------------------"
-    echo "Libraries have been installed in:"
-    for libdir in $libdirs; do
-      echo "   $libdir"
-    done
-    echo
-    echo "If you ever happen to want to link against installed libraries"
-    echo "in a given directory, LIBDIR, you must either use libtool, and"
-    echo "specify the full pathname of the library, or use \`-LLIBDIR'"
-    echo "flag during linking and do at least one of the following:"
-    if test -n "$shlibpath_var"; then
-      echo "   - add LIBDIR to the \`$shlibpath_var' environment variable"
-      echo "     during execution"
-    fi
-    if test -n "$runpath_var"; then
-      echo "   - add LIBDIR to the \`$runpath_var' environment variable"
-      echo "     during linking"
-    fi
-    if test -n "$hardcode_libdir_flag_spec"; then
-      libdir=LIBDIR
-      eval flag=\"$hardcode_libdir_flag_spec\"
-
-      echo "   - use the \`$flag' linker flag"
-    fi
-    if test -n "$admincmds"; then
-      echo "   - have your system administrator run these commands:$admincmds"
-    fi
-    if test -f /etc/ld.so.conf; then
-      echo "   - have your system administrator add LIBDIR to \`/etc/ld.so.conf'"
-    fi
-    echo
-    echo "See any operating system documentation about shared libraries for"
-    echo "more information, such as the ld(1) and ld.so(8) manual pages."
-    echo "----------------------------------------------------------------------"
     exit 0
     ;;
 
@


1.5
log
@use "cc -shared" for 2.8 and up to create shared libraries.
@
text
@@


1.4
log
@upgrade to MySQL 3.22.32
@
text
@d1 15
a15 5
--- sql/sql_parse.cc.orig	Fri Feb 11 01:48:52 2000
+++ sql/sql_parse.cc	Fri Feb 11 01:53:47 2000
@@@@ -17,6 +17,8 @@@@
 #include <m_ctype.h>
 #include <thr_alarm.h>
d17 36
a52 4
+#define SCRAMBLE_LENGTH 8
+
 extern int yyparse(void);
 extern "C" pthread_mutex_t THR_LOCK_keycache;
a53 20
@@@@ -127,8 +129,8 @@@@
     end=strmov(buff,server_version)+1;
     int4store((uchar*) end,thd->thread_id);
     end+=4;
-    memcpy(end,thd->scramble,9);
-    end+=9;
+    memcpy(end,thd->scramble,SCRAMBLE_LENGTH+1);
+    end+=SCRAMBLE_LENGTH+1;
 #ifdef HAVE_COMPRESS
     int2store(end,CLIENT_LONG_FLAG | CLIENT_CONNECT_WITH_DB | CLIENT_COMPRESS);
 #else
@@@@ -153,6 +155,8 @@@@
   if (!(thd->user = my_strdup((char*) net->read_pos+5, MYF(MY_FAE))))
     return(ER_OUT_OF_RESOURCES);
   char *passwd= strend((char*) net->read_pos+5)+1;
+  if (passwd[0] && strlen(passwd) != SCRAMBLE_LENGTH)
+    return ER_HANDSHAKE_ERROR;
   thd->master_access=acl_getroot(thd->host, thd->ip, thd->user,
 				 passwd, thd->scramble, &thd->priv_user,
 				 protocol_version == 9 ||
@


1.3
log
@patch to fix a security hole that was posted to BugTraq in an advisory
@
text
@@


1.2
log
@upgrade to MySQL 3.22.30
@
text
@d1 7
a7 6
--- sql/sql_parse.cc.orig	Tue Jan 11 17:55:26 2000
+++ sql/sql_parse.cc	Tue Jan 11 18:05:46 2000
@@@@ -1102,6 +1102,25 @@@@
 		      tables ? &tables->grant.privilege : 0,
 		      tables ? 0 : 1))
        goto error;
d9 23
a31 21
+     /* Check that the user isn't trying to change a password for another
+        user if he doesn't have UPDATE privilege to the MySQL database */
+
+     List_iterator <LEX_USER> user_list(lex->users_list);
+     LEX_USER *user;
+     while ((user=user_list++))
+     {
+       if (user->password.str &&
+	 (strcmp(thd->user,user->user.str) ||
+	  user->host.str && my_strcasecmp(user->host.str,
+					  thd->host ? thd->host : thd->ip)))
+       {
+       if (check_access(thd, UPDATE_ACL, "mysql",0,1))
+	 goto error;
+       break;					// We are allowed to do changes
+       }
+     }
+
      if (tables)
      {
        if (grant_option && check_grant(thd,
@


1.1
log
@add patch for a password handling bug in MySQL
@
text
@@

