head	1.3;
access;
symbols
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2011.09.05.07.11.23;	author giovanni;	state dead;
branches;
next	1.2;

1.2
date	2011.01.11.11.03.03;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.10.21.03.38;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
Update to 5.1.58
help and ok Brad (Maintainer)
@
text
@$OpenBSD: patch-sql_set_var_cc,v 1.2 2011/01/11 11:03:03 ajacoutot Exp $
--- sql/set_var.cc.orig	Mon Nov 29 05:37:59 2010
+++ sql/set_var.cc	Fri Jan  7 20:05:58 2011
@@@@ -2718,7 +2718,11 @@@@ bool sys_var_timestamp::check(THD *thd, set_var *var)
   time_t val;
   var->save_result.ulonglong_value= var->value->val_int();
   val= (time_t) var->save_result.ulonglong_value;
-  if (val < (time_t) MY_TIME_T_MIN || val > (time_t) MY_TIME_T_MAX)
+  if ((val < TIMESTAMP_MIN_VALUE) 
+#if SIZEOF_TIME_T > 4
+      || (val > TIMESTAMP_MAX_VALUE)
+#endif
+    )
   {
     my_message(ER_UNKNOWN_ERROR, 
                "This version of MySQL doesn't support dates later than 2038",
@


1.2
log
@Revert local patches that reverted a commit that broken MySQL on OpenBSD
64-bit archs and apply a patch from upstream to properly fix the
regression.

from Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: patch-sql_set_var_cc,v 1.1 2010/11/10 21:03:38 sthen Exp $
@


1.1
log
@Update MySQL to 5.1.52, from Brad.
@
text
@d1 7
a7 12
$OpenBSD$
--- sql/set_var.cc.orig	Thu Oct 28 21:43:43 2010
+++ sql/set_var.cc	Thu Oct 28 21:44:56 2010
@@@@ -2713,26 +2713,10 @@@@ int set_var_collation_client::update(THD *thd)
 
 /****************************************************************************/
 
-bool sys_var_timestamp::check(THD *thd, set_var *var)
-{
-  time_t val;
-  var->save_result.ulonglong_value= var->value->val_int();
-  val= (time_t) var->save_result.ulonglong_value;
d9 8
a16 18
-  {
-    my_message(ER_UNKNOWN_ERROR, 
-               "This version of MySQL doesn't support dates later than 2038",
-               MYF(0));
-    return TRUE;
-  }
-  return FALSE;
-}
-
-
 bool sys_var_timestamp::update(THD *thd,  set_var *var)
 {
   thd->set_time((time_t) var->save_result.ulonglong_value);
-  return FALSE;
+  return 0;
 }
 
 
@

