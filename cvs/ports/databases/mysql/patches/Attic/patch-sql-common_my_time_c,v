head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.09.05.07.11.23;	author giovanni;	state dead;
branches;
next	1.1;

1.1
date	2011.01.11.11.03.03;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
Update to 5.1.58
help and ok Brad (Maintainer)
@
text
@$OpenBSD: patch-sql-common_my_time_c,v 1.1 2011/01/11 11:03:03 ajacoutot Exp $
--- sql-common/my_time.c.orig	Mon Nov 29 05:38:13 2010
+++ sql-common/my_time.c	Fri Jan  7 19:47:56 2011
@@@@ -991,8 +991,17 @@@@ my_system_gmt_sec(const MYSQL_TIME *t_src, long *my_ti
     So, tmp < TIMESTAMP_MIN_VALUE will be triggered. On platfroms
     with unsigned time_t tmp+= shift*86400L might result in a number,
     larger then TIMESTAMP_MAX_VALUE, so another check will work.
+
+    tmp being larger than TIMESTAMP_MAX_VALUE can only happen on
+    platforms where the size of time_t is larger than the size of
+    TIMESTAMP_MAX_VALUE (currently INT32 : 4 bytes).
+    #ifdef to avoid the compilation warnings on these platforms (OpenBSD).
   */
-  if ((tmp < TIMESTAMP_MIN_VALUE) || (tmp > TIMESTAMP_MAX_VALUE))
+  if ((tmp < TIMESTAMP_MIN_VALUE) 
+#if SIZEOF_TIME_T > 4
+      || (tmp > TIMESTAMP_MAX_VALUE)
+#endif
+      )
     tmp= 0;
 
   return (my_time_t) tmp;
@


1.1
log
@Revert local patches that reverted a commit that broken MySQL on OpenBSD
64-bit archs and apply a patch from upstream to properly fix the
regression.

from Brad (maintainer)
@
text
@d1 1
a1 1
$OpenBSD$
@

