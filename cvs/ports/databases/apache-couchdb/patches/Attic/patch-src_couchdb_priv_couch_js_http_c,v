head	1.2;
access;
symbols
	OPENBSD_5_6:1.1.0.14
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.12
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.10
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.12.28.19.54.58;	author jasper;	state dead;
branches;
next	1.1;
commitid	oNW2SYh1zX43IONa;

1.1
date	2011.04.10.17.28.38;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- update to apache-couchdb-1.6.1, tested with py-couchdb and to unbreak with erlang R16
@
text
@$OpenBSD: patch-src_couchdb_priv_couch_js_http_c,v 1.1 2011/04/10 17:28:38 jasper Exp $

"Starting in SpiderMonkey 1.8.5, jsval can store a full 32-bit integer, so this
check isn't needed any longer for 32-bit integers."

--- src/couchdb/priv/couch_js/http.c.orig	Fri Apr  1 09:35:22 2011
+++ src/couchdb/priv/couch_js/http.c	Fri Apr  1 09:37:23 2011
@@@@ -286,16 +286,8 @@@@ status(JSContext* cx, JSObject* obj, jsval idval, jsva
         return JS_FALSE;
     }
     
-    if(INT_FITS_IN_JSVAL(http->last_status))
-    {
-        *vp = INT_TO_JSVAL(http->last_status);
-        return JS_TRUE;
-    }
-    else
-    {
-        JS_ReportError(cx, "INTERNAL: Invalid last_status");
-        return JS_FALSE;
-    }
+    *vp = INT_TO_JSVAL(http->last_status);
+    return JS_TRUE;
 }
 
 JSClass CouchHTTPClass = {
@


1.1
log
@Adjust to the new spidermonkey API.

ok MAINTAINER, landry@@, martynas@@
@
text
@d1 1
a1 1
$OpenBSD$
@

