head	1.11;
access;
symbols
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.11
date	2016.06.20.10.49.38;	author dcoppa;	state dead;
branches;
next	1.10;
commitid	5Fle6QRUJ2xMCP8L;

1.10
date	2016.05.10.09.38.48;	author dcoppa;	state Exp;
branches;
next	1.9;
commitid	nsv8lxQo5Ys4l82d;

1.9
date	2015.06.05.16.29.09;	author dcoppa;	state Exp;
branches;
next	1.8;
commitid	nPEkLfZoLLLS18vj;

1.8
date	2015.04.27.08.53.17;	author dcoppa;	state Exp;
branches;
next	1.7;
commitid	pGdrb0WrxxvKsx1d;

1.7
date	2014.12.05.09.33.09;	author dcoppa;	state Exp;
branches
	1.7.2.1;
next	1.6;
commitid	WAOjA0U1BcrOo8q7;

1.6
date	2014.09.15.08.29.33;	author dcoppa;	state Exp;
branches;
next	1.5;
commitid	YucJy8DiOpyxCHA0;

1.5
date	2014.09.02.08.11.46;	author dcoppa;	state Exp;
branches;
next	1.4;
commitid	HKdKyVEglF8IzW03;

1.4
date	2014.06.06.11.52.49;	author dcoppa;	state Exp;
branches
	1.4.2.1;
next	1.3;
commitid	LfR3WLQVMAjSS9kj;

1.3
date	2013.11.29.08.32.24;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2013.07.02.06.03.35;	author dcoppa;	state Exp;
branches;
next	1.1;

1.1
date	2012.11.26.15.24.13;	author dcoppa;	state Exp;
branches;
next	;

1.4.2.1
date	2015.06.07.09.47.55;	author dcoppa;	state Exp;
branches;
next	;
commitid	6edVjleBOBpVMNai;

1.7.2.1
date	2015.06.06.18.16.19;	author dcoppa;	state Exp;
branches;
next	;
commitid	iLvvOSdUliVI6ENy;


desc
@@


1.11
log
@
Update to redis-3.2.1
@
text
@$OpenBSD: patch-src_scripting_c,v 1.10 2016/05/10 09:38:48 dcoppa Exp $

Remove dofile() from Redis Lua scripting, because it allows an
attacker to enumerate filesystem contents. See:
http://blog.liftsecurity.io/post/35714931664/filesystem-enumeration-using-redis-and-lua

--- src/scripting.c.orig	Fri May  6 09:11:36 2016
+++ src/scripting.c	Tue May 10 09:49:02 2016
@@@@ -834,11 +834,13 @@@@ void luaLoadLibraries(lua_State *lua) {
 #endif
 }
 
-/* Remove a functions that we don't want to expose to the Redis scripting
+/* Remove functions that we don't want to expose to the Redis scripting
  * environment. */
 void luaRemoveUnsupportedFunctions(lua_State *lua) {
     lua_pushnil(lua);
     lua_setglobal(lua,"loadfile");
+    lua_pushnil(lua);
+    lua_setglobal(lua,"dofile");
 }
 
 /* This function installs metamethods in the global table _G that prevent
@


1.10
log
@
Update to redis-3.2.0
@
text
@d1 1
a1 1
$OpenBSD: patch-src_scripting_c,v 1.9 2015/06/05 16:29:09 dcoppa Exp $
@


1.9
log
@
*Security* update to redis-3.0.2

http://benmmurphy.github.io/blog/2015/06/04/redis-eval-lua-sandbox-escape/
@
text
@d1 1
a1 1
$OpenBSD: patch-src_scripting_c,v 1.8 2015/04/27 08:53:17 dcoppa Exp $
d7 3
a9 3
--- src/scripting.c.orig	Thu Jun  4 11:35:56 2015
+++ src/scripting.c	Fri Jun  5 18:07:16 2015
@@@@ -593,11 +593,13 @@@@ void luaLoadLibraries(lua_State *lua) {
@


1.8
log
@
Update to redis-3.0.0
@
text
@d1 1
a1 1
$OpenBSD: patch-src_scripting_c,v 1.7 2014/12/05 09:33:09 dcoppa Exp $
d7 9
a15 3
--- src/scripting.c.orig	Wed Apr  1 16:01:44 2015
+++ src/scripting.c	Mon Apr 27 10:37:39 2015
@@@@ -598,6 +598,8 @@@@ void luaLoadLibraries(lua_State *lua) {
@


1.7
log
@
Update to redis-2.8.18
@
text
@d1 1
a1 1
$OpenBSD: patch-src_scripting_c,v 1.6 2014/09/15 08:29:33 dcoppa Exp $
d7 3
a9 3
--- src/scripting.c.orig	Thu Dec  4 04:36:52 2014
+++ src/scripting.c	Fri Dec  5 02:30:05 2014
@@@@ -560,6 +560,8 @@@@ void luaLoadLibraries(lua_State *lua) {
@


1.7.2.1
log
@
Security update to redis-2.8.21

Redis EVAL Lua Sandbox Escape: http://benmmurphy.github.io/blog/2015/06/04/redis-eval-lua-sandbox-escape/
@
text
@d1 1
a1 1
$OpenBSD: patch-src_scripting_c,v 1.7 2014/12/05 09:33:09 dcoppa Exp $
d7 3
a9 3
--- src/scripting.c.orig	Thu Jun  4 11:32:24 2015
+++ src/scripting.c	Sat Jun  6 14:53:49 2015
@@@@ -579,6 +579,8 @@@@ void luaLoadLibraries(lua_State *lua) {
@


1.6
log
@
Bugfixing update to redis-2.8.15
@
text
@d1 1
a1 1
$OpenBSD: patch-src_scripting_c,v 1.5 2014/09/02 08:11:46 dcoppa Exp $
d7 3
a9 3
--- src/scripting.c.orig	Fri Sep 12 16:16:58 2014
+++ src/scripting.c	Mon Sep 15 10:14:06 2014
@@@@ -558,6 +558,8 @@@@ void luaLoadLibraries(lua_State *lua) {
@


1.5
log
@
Update to redis-2.8.14
@
text
@d1 1
a1 1
$OpenBSD: patch-src_scripting_c,v 1.4 2014/06/06 11:52:49 dcoppa Exp $
d7 3
a9 3
--- src/scripting.c.orig	Mon Sep  1 17:00:38 2014
+++ src/scripting.c	Tue Sep  2 10:05:31 2014
@@@@ -560,6 +560,8 @@@@ void luaLoadLibraries(lua_State *lua) {
@


1.4
log
@
Bugfix update to redis-2.8.10
@
text
@d1 1
a1 1
$OpenBSD: patch-src_scripting_c,v 1.3 2013/11/29 08:32:24 dcoppa Exp $
d7 3
a9 3
--- src/scripting.c.orig	Thu Jun  5 11:02:23 2014
+++ src/scripting.c	Fri Jun  6 13:36:48 2014
@@@@ -559,6 +559,8 @@@@ void luaLoadLibraries(lua_State *lua) {
@


1.4.2.1
log
@
Fix for the Redis EVAL Lua sandbox escape
http://benmmurphy.github.io/blog/2015/06/04/redis-eval-lua-sandbox-escape/

from upstream
@
text
@d1 1
a1 1
$OpenBSD: patch-src_scripting_c,v 1.4 2014/06/06 11:52:49 dcoppa Exp $
d7 2
a8 8
commit 700b863f134ed02c6bfecc19f5d709d145335547
Author: Ben Murphy <benmmurphy@@gmail.com>
Date:   Mon May 11 23:24:37 2015 +0100

hide access to debug table

--- src/scripting.c.orig	Mon Jun 23 16:56:18 2014
+++ src/scripting.c	Sat Jun  6 17:10:10 2015
a17 44
@@@@ -573,11 +575,12 @@@@ void scriptingEnableGlobalsProtection(lua_State *lua) 
 
     /* strict.lua from: http://metalua.luaforge.net/src/lib/strict.lua.html.
      * Modified to be adapted to Redis. */
+    s[j++]="local dbg=debug\n";
     s[j++]="local mt = {}\n";
     s[j++]="setmetatable(_G, mt)\n";
     s[j++]="mt.__newindex = function (t, n, v)\n";
-    s[j++]="  if debug.getinfo(2) then\n";
-    s[j++]="    local w = debug.getinfo(2, \"S\").what\n";
+    s[j++]="  if dbg.getinfo(2) then\n";
+    s[j++]="    local w = dbg.getinfo(2, \"S\").what\n";
     s[j++]="    if w ~= \"main\" and w ~= \"C\" then\n";
     s[j++]="      error(\"Script attempted to create global variable '\"..tostring(n)..\"'\", 2)\n";
     s[j++]="    end\n";
@@@@ -585,11 +588,12 @@@@ void scriptingEnableGlobalsProtection(lua_State *lua) 
     s[j++]="  rawset(t, n, v)\n";
     s[j++]="end\n";
     s[j++]="mt.__index = function (t, n)\n";
-    s[j++]="  if debug.getinfo(2) and debug.getinfo(2, \"S\").what ~= \"C\" then\n";
+    s[j++]="  if dbg.getinfo(2) and dbg.getinfo(2, \"S\").what ~= \"C\" then\n";
     s[j++]="    error(\"Script attempted to access unexisting global variable '\"..tostring(n)..\"'\", 2)\n";
     s[j++]="  end\n";
     s[j++]="  return rawget(t, n)\n";
     s[j++]="end\n";
+    s[j++]="debug = nil\n";
     s[j++]=NULL;
 
     for (j = 0; s[j] != NULL; j++) code = sdscatlen(code,s[j],strlen(s[j]));
@@@@ -693,10 +697,11 @@@@ void scriptingInit(void) {
      * information about the caller, that's what makes sense from the point
      * of view of the user debugging a script. */
     {
-        char *errh_func =       "function __redis__err__handler(err)\n"
-                                "  local i = debug.getinfo(2,'nSl')\n"
+        char *errh_func =       "local dbg = debug\n"
+                                "function __redis__err__handler(err)\n"
+                                "  local i = dbg.getinfo(2,'nSl')\n"
                                 "  if i and i.what == 'C' then\n"
-                                "    i = debug.getinfo(3,'nSl')\n"
+                                "    i = dbg.getinfo(3,'nSl')\n"
                                 "  end\n"
                                 "  if i then\n"
                                 "    return i.source .. ':' .. i.currentline .. ': ' .. err\n"
@


1.3
log
@Update to redis-2.8.1
@
text
@d1 1
a1 1
$OpenBSD: patch-src_scripting_c,v 1.2 2013/07/02 06:03:35 dcoppa Exp $
d7 3
a9 3
--- src/scripting.c.orig	Mon Nov 25 11:21:49 2013
+++ src/scripting.c	Wed Nov 27 14:56:38 2013
@@@@ -492,6 +492,8 @@@@ void luaLoadLibraries(lua_State *lua) {
@


1.2
log
@Bugfix update to redis-2.6.14
@
text
@d1 1
a1 1
$OpenBSD: patch-src_scripting_c,v 1.1 2012/11/26 15:24:13 dcoppa Exp $
d7 3
a9 3
--- src/scripting.c.orig	Thu Jun 20 10:36:40 2013
+++ src/scripting.c	Tue Jul  2 07:37:57 2013
@@@@ -481,6 +481,8 @@@@ void luaLoadLibraries(lua_State *lua) {
@


1.1
log
@Remove dofile() from Redis Lua scripting, because it allows an
attacker to enumerate filesystem contents. See:
http://blog.liftsecurity.io/post/35714931664/filesystem-enumeration-using-redis-and-lua

While here, fix a pasto in redis.conf: "syslog-enabled no" where
"syslog-enabled yes" was intended.
@
text
@d1 1
a1 1
$OpenBSD$
d7 3
a9 3
--- src/scripting.c.orig	Mon Nov 26 16:45:10 2012
+++ src/scripting.c	Mon Nov 26 16:46:01 2012
@@@@ -480,6 +480,8 @@@@ void luaLoadLibraries(lua_State *lua) {
@

