head	1.2;
access;
symbols
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	dcoppa_20101010:1.1.1.1
	dcoppa:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2011.03.21.19.58.28;	author simon;	state dead;
branches;
next	1.1;

1.1
date	2010.10.10.15.50.06;	author dcoppa;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.10.10.15.50.06;	author dcoppa;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to version 2.2.2

with tweaks from dcoppa@@ (maintainer)
@
text
@$OpenBSD: patch-Makefile,v 1.1 2010/10/10 15:50:06 dcoppa Exp $
--- Makefile.orig	Fri Oct  8 14:23:50 2010
+++ Makefile	Fri Oct  8 14:24:24 2010
@@@@ -89,10 +89,10 @@@@ dep:
 	$(CC) -MM *.c
 
 staticsymbols:
-	tclsh utils/build-static-symbols.tcl > staticsymbols.h
+	${TCL_BIN} utils/build-static-symbols.tcl > staticsymbols.h
 
 test:
-	tclsh8.5 tests/test_helper.tcl --tags "${TAGS}"
+	${TCL_BIN} tests/test_helper.tcl --tags "${TAGS}"
 
 bench:
 	./redis-benchmark
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import databases/redis.

Redis is an advanced key-value store. It is similar to memcached
but the dataset is not volatile, and values can be strings, exactly
like in memcached, but also lists, sets, and ordered sets. All this
data types can be manipulated with atomic operations to push/pop
elements, add/remove elements, perform server side union, intersection,
difference between sets, and so forth.
In order to be very fast but at the same time persistent the whole
dataset is taken in memory, and from time to time saved on disc
asynchronously (semi persistent mode) or alternatively every change
is written into an append only file (fully persistent mode).

OK sthen@@, landry@@
@
text
@@
