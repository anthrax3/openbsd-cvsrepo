head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.16
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.14
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.10
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.12
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.8
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	giovanni-20120227:1.1.1.1
	giovanni:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2013.03.11.09.49.04;	author giovanni;	state Exp;
branches;
next	1.5;

1.5
date	2012.10.09.15.39.13;	author giovanni;	state Exp;
branches;
next	1.4;

1.4
date	2012.08.10.14.09.22;	author giovanni;	state Exp;
branches;
next	1.3;

1.3
date	2012.06.12.16.23.19;	author giovanni;	state dead;
branches;
next	1.2;

1.2
date	2012.04.18.13.24.21;	author giovanni;	state Exp;
branches;
next	1.1;

1.1
date	2012.02.27.10.18.12;	author giovanni;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.02.27.10.18.12;	author giovanni;	state Exp;
branches;
next	;


desc
@@


1.6
log
@
Bugfix update to 2.1.9
@
text
@$OpenBSD: patch-bin_pt-summary,v 1.5 2012/10/09 15:39:13 giovanni Exp $
--- bin/pt-summary.orig	Thu Feb 14 18:59:10 2013
+++ bin/pt-summary	Fri Feb 22 17:53:46 2013
@@@@ -2289,7 +2289,7 @@@@ sigtrap() { local PTFUNCNAME=sigtrap;
 # Execute the program if it was not included from another file.  This makes it
 # possible to include without executing, and thus test.
 if    [ "${0##*/}" = "$TOOL" ] \
-   || [ "${0##*/}" = "bash" -a "${_:-""}" = "$0" ]; then
+   || [ "${0##*/}" = "sh" -a "${_:-""}" = "$0" ]; then
 
    # Set up temporary dir.
    mk_tmpdir
@


1.5
log
@
Update to 2.1.4
@
text
@d1 4
a4 5
$OpenBSD: patch-bin_pt-summary,v 1.4 2012/08/10 14:09:22 giovanni Exp $
--- bin/pt-summary.orig	Tue Sep 25 17:35:54 2012
+++ bin/pt-summary	Tue Oct  9 16:54:29 2012
@@@@ -2279,8 +2279,9 @@@@ sigtrap() { local PTFUNCNAME=sigtrap;
 
a6 1
+set +u
d8 2
a9 2
-   || [ "${0##*/}" = "bash" -a "$_" = "$0" ]; then
+   || [ "${0##*/}" = "sh" -a "$_" = "$0" ]; then
@


1.4
log
@
Bugfix update to 2.1.3
@
text
@d1 4
a4 4
$OpenBSD$
--- bin/pt-summary.orig	Fri Aug  3 20:49:24 2012
+++ bin/pt-summary	Fri Aug 10 16:04:59 2012
@@@@ -2180,8 +2180,9 @@@@ sigtrap() { local PTFUNCNAME=sigtrap;
@


1.3
log
@
bash is no more needed, drop the dependency
@
text
@d1 4
a4 6
$OpenBSD: patch-bin_pt-summary,v 1.2 2012/04/18 13:24:21 giovanni Exp $
--- bin/pt-summary.orig	Tue Apr  3 21:51:38 2012
+++ bin/pt-summary	Wed Apr 18 15:08:55 2012
@@@@ -1,4 +1,4 @@@@
-#!/bin/sh
+#!${LOCALBASE}/bin/bash
d6 9
a14 2
 # This program is part of Percona Toolkit: http://www.percona.com/software/
 # See "COPYRIGHT, LICENSE, AND WARRANTY" at the end of this file for legal
@


1.2
log
@
Update to 2.1.1
@
text
@d1 1
a1 1
$OpenBSD: patch-bin_pt-summary,v 1.1.1.1 2012/02/27 10:18:12 giovanni Exp $
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- bin/pt-summary.orig	Mon Feb  6 21:52:31 2012
+++ bin/pt-summary	Fri Feb 24 09:22:49 2012
a9 55
@@@@ -219,6 +219,15 @@@@ parse_sysctl_cpu_freebsd() {
 }
 
 # ##############################################################################
+# Detect cpu info on OpenBSD, and format it as CPU info
+# ##############################################################################
+parse_sysctl_cpu_openbsd() {
+   name_val "Processors" "$(sysctl -n hw.ncpu)"
+   name_val "Speeds" "$(sysctl -n hw.cpuspeed)"
+   name_val "Models" "$(sysctl -n hw.model)"
+}
+
+# ##############################################################################
 # Parse CPU info from psrinfo -v
 # ##############################################################################
 parse_psrinfo_cpus() {
@@@@ -274,6 +283,17 @@@@ parse_memory_sysctl_freebsd() {
 }
 
 # ##############################################################################
+# Parse OpenBSD memory info from sysctl output.
+# ##############################################################################
+parse_memory_sysctl_openbsd() {
+   swap_mem=$(swapctl -s | awk '{print $2;}')
+   swap_mem=$(bc -e $swap_mem*512 -e quit)
+   name_val Total   $(shorten $(sysctl -n hw.physmem) 1)
+   name_val User    $(shorten $(sysctl -n hw.usermem) 1)
+   name_val Swap    $(shorten ${swap_mem} 1)
+}
+
+# ##############################################################################
 # Parse memory devices from the output of 'dmidecode'.
 # ##############################################################################
 parse_dmidecode_mem_devices () {
@@@@ -929,6 +949,9 @@@@ main () {
    elif [ "${platform}" = "FreeBSD" ]; then
       release="$(uname -r)"
       kernel="$(sysctl -n kern.osrevision)"
+   elif [ "${platform}" = "OpenBSD" ]; then
+      release="$(uname -r)"
+      kernel="$(sysctl -n kern.version | awk '{print $2;}')"
    elif [ "${platform}" = "SunOS" ]; then
       release="$(head -n1 /etc/release)"
       if [ -z "${release}" ]; then
@@@@ -947,6 +970,10 @@@@ main () {
       fi
    elif [ "${platform}" = "FreeBSD" ]; then
       if sysctl hw.machine_arch | grep -v 'i[36]86' >/dev/null; then
+         CPU_ARCH='64-bit'
+      fi
+   elif [ "${platform}" = "OpenBSD" ]; then
+      if arch -s | grep '64' >/dev/null; then
          CPU_ARCH='64-bit'
       fi
    elif [ "${platform}" = "SunOS" ]; then
@


1.1.1.1
log
@
Import Percona MySQL tools

Percona Toolkit is a collection of advanced command-line tools used
to perform a variety of MySQL and system tasks that are too difficult
or complex to perform manually.

ok okan@@ william@@
@
text
@@
