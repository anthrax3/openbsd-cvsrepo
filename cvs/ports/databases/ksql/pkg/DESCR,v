head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.6
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.4
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.2
	OPENBSD_6_0_BASE:1.1.1.1
	jturner_20160523:1.1.1.1
	jturner:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.05.24.00.19.43;	author jturner;	state Exp;
branches
	1.1.1.1;
next	;
commitid	RTupNCR0FyvAYG8G;

1.1.1.1
date	2016.05.24.00.19.43;	author jturner;	state Exp;
branches;
next	;
commitid	RTupNCR0FyvAYG8G;


desc
@@



1.1
log
@Initial revision
@
text
@ksql is a "lazy man's" wrapper for the SQLite C-language interface. It
is written to make sure sloppy programming won't cause your SQLite
database to be inconsistent (transactions and statements open on exit
and certain signals). Specifically, it exits on any database errors; and
upon exit (or signal), cleans up open statements, transactions, and
databases. See ksql(3) and friends for details.
@


1.1.1.1
log
@Import ports/databases/ksql. ok sthen@@

ksql is a "lazy man's" wrapper for the SQLite C-language interface. It
is written to make sure sloppy programming won't cause your SQLite
database to be inconsistent (transactions and statements open on exit
and certain signals). Specifically, it exits on any database errors; and
upon exit (or signal), cleans up open statements, transactions, and
databases. See ksql(3) and friends for details.
@
text
@@
