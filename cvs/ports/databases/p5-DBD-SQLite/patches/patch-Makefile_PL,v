head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.20
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.16
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.18
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.14
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.12
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.10
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.8
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.6
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.4
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.9.0.4
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.8.0.6
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.4
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.2
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_2:1.6.0.4
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	wilfried_2004-04-08:1.1.1.1
	wilfried:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2012.01.22.11.29.55;	author nigel;	state Exp;
branches;
next	1.9;

1.9
date	2010.08.22.16.55.48;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2009.05.12.23.26.26;	author simon;	state Exp;
branches;
next	1.7;

1.7
date	2007.09.21.21.33.26;	author simon;	state dead;
branches;
next	1.6;

1.6
date	2006.12.10.23.17.42;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2006.10.23.10.06.03;	author espie;	state dead;
branches;
next	1.4;

1.4
date	2006.05.10.11.38.08;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.23.15.50.30;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2004.11.24.20.32.23;	author robert;	state dead;
branches;
next	1.1;

1.1
date	2004.04.08.21.02.33;	author wilfried;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.04.08.21.02.33;	author wilfried;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Update to version 1.35

Ok sthen@@ robert@@ (Maintainer)
@
text
@Upstream forces use of bundled sqlite but we use the one from ports.

$OpenBSD: patch-Makefile_PL,v 1.9 2010/08/22 16:55:48 sthen Exp $
--- Makefile.PL.orig	Tue Nov 29 00:05:51 2011
+++ Makefile.PL	Sun Dec 18 14:06:22 2011
@@@@ -124,7 +124,7 @@@@ SCOPE: {
 # a system sqlite is also sophisticated enough to have a patching system
 # that can change the if ( 0 ) to if ( 1 )
 my ($sqlite_local, $sqlite_base, $sqlite_lib, $sqlite_inc);
-if ( 0 ) {
+if ( 1 ) {
 	require File::Spec;
 	if ( $sqlite_base = (grep(/SQLITE_LOCATION=.*/, @@ARGV))[0] ) {
 		$sqlite_base =~ /=(.*)/;
@


1.9
log
@update DBD::SQLite to 1.29, ok robert@@ (maintainer)
@
text
@d3 4
a6 4
$OpenBSD: patch-Makefile_PL,v 1.8 2009/05/12 23:26:26 simon Exp $
--- Makefile.PL.orig	Fri Jan  8 09:08:29 2010
+++ Makefile.PL	Mon May 24 10:39:17 2010
@@@@ -123,7 +123,7 @@@@ SCOPE: {
@


1.8
log
@update to version 1.25

tested by bernd@@ in a bulk build, thanks!
early test and late reminder by landry@@
@
text
@d1 1
a1 1
Upstream forces use of bundeled sqlite but we use the one from ports.
d3 7
a9 7
$OpenBSD$
--- Makefile.PL.orig	Thu Apr 23 12:12:04 2009
+++ Makefile.PL	Thu Apr 23 17:52:59 2009
@@@@ -79,7 +79,7 @@@@ if ( $@@ or DBI->VERSION < $DBI_required ) {
 # Let's find out the full story first, so we can make an informed
 # decision to whether to do this. -- ADAMK
 my ($force_local, $sqlite_base, $sqlite_lib, $sqlite_inc);
a14 14
@@@@ -141,8 +141,13 @@@@ if ( 0 ) {
 
 # Use always the bundled one.
 # XXX: ... and this message should be more informative.
+
+=for comment
+
 $force_local = 1;
 print "We're using the bundled sqlite library.\n" if $ENV{AUTOMATED_TESTING};
+
+=cut
 
 @@ARGV = grep( ! /SQLITE_LOCATION|USE_LOCAL_SQLITE/, @@ARGV );
 
@


1.7
log
@update to version 1.14 and remove duplicate category

ok robert@@ (maintainer)
@
text
@d1 28
a28 12
$OpenBSD: patch-Makefile_PL,v 1.6 2006/12/10 23:17:42 espie Exp $
--- Makefile.PL.orig	Wed May 10 11:35:05 2006
+++ Makefile.PL	Wed May 10 11:35:30 2006
@@@@ -115,7 +115,7 @@@@ WriteMakefile(
     'OBJECT'        => ($force_local) ? '$(O_FILES)' : 'SQLite.o dbdimp.o',
     'INC'           => '-I. -I$(DBI_INSTARCH_DIR)' .
                        (($sqlite_inc) ? " -I$sqlite_inc" : ''),
-    $force_local ? () : ('LIBS' => '-lsqlite3'),
+    $force_local ? () : ('LIBS' => "-L$sqlite_lib -lsqlite3"),
     $sqlite_lib  ? ('dynamic_lib' => { OTHERLDFLAGS => "-L$sqlite_lib" }) : (),
     'OPTIMIZE'      => "-O2",
     'DEFINE'        => "-DNDEBUG=1 -DSQLITE_PTR_SZ=$Config{ptrsize}" .
@


1.6
log
@go back to 1.12, as 1.13 has some really weird issues with Rose.
Okay robert@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Makefile_PL,v 1.4 2006/05/10 11:38:08 espie Exp $
@


1.5
log
@minor update. okay robert@@
@
text
@@


1.4
log
@use installed SQLite, okay robert@@
@
text
@d1 1
a1 1
$OpenBSD$
@


1.3
log
@do not try to pick up installed versions of sqlite3; use the included copy instead;
bump PKGNAME;

problem reported by naddy@@
@
text
@d2 11
a12 80
--- Makefile.PL.orig	Fri Aug  5 19:15:09 2005
+++ Makefile.PL	Thu Mar 23 16:39:18 2006
@@@@ -36,73 +36,12 @@@@
     }
 };
 
-# 2005/6/19, by rjray@@blackperl.com
 #
-# Determine if we are going to use the provided SQLite code, or an already-
-# installed copy. To this end, look for two command-line parameters:
+# Use the provided SQLite code, instead of picking up some installed copy.
 #
-#    USE_LOCAL_SQLITE -- If non-false, force use of the installed version
-#    SQLITE_LOCATION  -- If passed, look for headers and libs under this root
-#
-# In absense of either of those, expect SQLite 3.X.X libs and headers in the
-# common places known to Perl or the C compiler.
-require File::Spec;
-my ($force_local, $sqlite_base, $sqlite_lib, $sqlite_inc);
-if ($sqlite_base = (grep(/SQLITE_LOCATION=.*/, @@ARGV))[0]) {
-    $sqlite_base =~ /=(.*)/;
-    $sqlite_base = $1;
-    $sqlite_lib = File::Spec->catdir($sqlite_base, 'lib');
-    $sqlite_inc = File::Spec->catdir($sqlite_base, 'include');
-}
-if ($force_local = (grep(/USE_LOCAL_SQLITE=.*/, @@ARGV))[0]) {
-    $force_local =~ /=(.*)/;
-    $force_local = "$1" ? 1 : 0;
-    if ($force_local) {
-        undef $sqlite_lib; # Keep these from making into CFLAGS/LDFLAGS
-        undef $sqlite_inc;
-    }
-}
-
-# Now, check for a compatible sqlite3
-unless ($force_local) {
-    my ($dir, $file, $fh, $version);
-    print "Checking installed SQLite version...\n";
-    if ($sqlite_inc) {
-        open($fh, '< ' . File::Spec->catfile($sqlite_inc, 'sqlite3.h'))
-            or die "Error opening sqlite3.h in $sqlite_inc: $!";
-        while (defined($_ = <$fh>)) {
-            if (/\#define\s+SQLITE_VERSION_NUMBER\s+(\d+)/) {
-                $version = $1;
-                last;
-            }
-        }
-        close($fh);
-    } else {
-        # Go hunting for the file (Matt: Add more dirs here as you see fit)
-        for $dir ([ qw(usr include) ], [ qw(usr local include) ]) {
-            $file = File::Spec->catfile('', @@$dir, 'sqlite3.h');
-            next unless (-f $file);
-            open($fh, "< $file") or die "Error opening $file: $!";
-            while (defined($_ = <$fh>)) {
-                if (/\#define\s+SQLITE_VERSION_NUMBER\s+(\d+)/) {
-                    $version = $1;
-                    last;
-                }
-            }
-            close($fh);
-            last if $version;
-        }
-    }
-    unless ($version && ($version >= 3001003)) {
-        warn "SQLite version must be at least 3.1.3. No header file at that\n";
-        warn "version or higher was found. Using the local version instead.\n";
-        $force_local = 1;
-        undef $sqlite_lib;
-        undef $sqlite_inc;
-    } else {
-        print "Looks good\n";
-    }
-}
+my $force_local = 1;
+my $sqlite_lib = 0;
+my $sqlite_inc = 0;
 
 @@ARGV = grep(! /SQLITE_LOCATION|USE_LOCAL_SQLITE/, @@ARGV);
 
@


1.2
log
@upgrade to 1.07; respect ${CC} and ${LD}
@
text
@d1 80
a80 11
$OpenBSD: patch-Makefile_PL,v 1.1 2004/04/08 21:02:33 wilfried Exp $
--- Makefile.PL.orig	2004-01-06 09:07:49.000000000 +0100
+++ Makefile.PL	2004-04-08 22:30:09.000000000 +0200
@@@@ -13,7 +13,7 @@@@ WriteMakefile(
     'PREREQ_PM'     => {DBI => 1.21}, # e.g., Module::Name => 1.1
     'OBJECT'        => '$(O_FILES)',
     'INC'           => '-I$(DBI_INSTARCH_DIR)',
-    'OPTIMIZE'      => "-O6 -DNDEBUG=1 -DSQLITE_PTR_SZ=$Config{ptrsize}",
+    'OPTIMIZE'      => "-O2 -DNDEBUG=1 -DSQLITE_PTR_SZ=$Config{ptrsize}",
     'clean'         => { FILES => 'SQLite.xsi config.h' },
 );
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@Import of p5-DBD-SQLite-0.31, from Robert Nagy <thuglife@@bsd.hu>

DBD::SQLite is the Perl5 Database Interface driver for the SQLite
database.
@
text
@@
