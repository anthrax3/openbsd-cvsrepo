head	1.22;
access;
symbols
	OPENBSD_6_1:1.19.0.2
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.18.0.2
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.4
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.13.0.2
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.12.0.2
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3;
locks; strict;
comment	@# @;


1.22
date	2017.06.05.14.48.09;	author espie;	state Exp;
branches;
next	1.21;
commitid	yuJSn2fmRe2NrSlB;

1.21
date	2017.05.31.08.39.21;	author espie;	state Exp;
branches;
next	1.20;
commitid	8sib9AMqW5MhPNF0;

1.20
date	2017.05.12.18.18.09;	author espie;	state Exp;
branches;
next	1.19;
commitid	Uwx4APJXP8J8tEhx;

1.19
date	2016.08.18.12.28.53;	author sthen;	state Exp;
branches;
next	1.18;
commitid	B2FG0FaPmxcUfzwp;

1.18
date	2016.03.20.20.03.07;	author naddy;	state Exp;
branches;
next	1.17;
commitid	43tYUQxcFrr8eCa8;

1.17
date	2015.05.14.18.01.08;	author jasper;	state Exp;
branches;
next	1.16;
commitid	gbLQETikUH5bdInm;

1.16
date	2014.11.04.10.44.33;	author espie;	state Exp;
branches;
next	1.15;
commitid	aLXrBrnsEkjiD3Oy;

1.15
date	2014.09.05.14.45.02;	author jasper;	state Exp;
branches;
next	1.14;
commitid	f4VbjcUvEOJXzzBc;

1.14
date	2014.09.02.14.26.39;	author jasper;	state Exp;
branches;
next	1.13;
commitid	Ptx1R6NkkFWYpLmY;

1.13
date	2014.07.12.17.35.32;	author espie;	state Exp;
branches;
next	1.12;
commitid	g9GVMnSaykPGUXLd;

1.12
date	2013.11.25.14.13.33;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2013.11.01.14.50.11;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2013.06.23.08.58.07;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2013.06.21.10.48.38;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2013.03.31.09.43.13;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2013.03.11.11.53.51;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2013.03.08.10.05.31;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2013.01.14.13.09.54;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2013.01.06.21.20.58;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2012.06.18.12.18.45;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.22.12.04.02;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.18.12.11.28;	author espie;	state Exp;
branches;
next	;


desc
@@


1.22
log
@add COMPILER_LINKS. Tweak USE_WXNEEDED to support a 3rd option (special)
@
text
@# $OpenBSD: Info.pm,v 1.21 2017/05/31 08:39:21 espie Exp $
#
# Copyright (c) 2012 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# example script that shows how to store all variable values into a
# database, using SQLite for that purpose.
#
# usage: cd /usr/ports && make dump-vars |mksqlitedb

use strict;
use warnings;
use Var;

package Info;
our $vars = {
    AUTOCONF_VERSION => 'AutoVersionVar',
    AUTOMAKE_VERSION => 'AutoVersionVar',
    BROKEN => 'BrokenVar',
    BUILD_DEPENDS => 'BuildDependsVar',
    CATEGORIES => 'CategoriesVar',
    COMES_WITH => 'DefinedVar',
    COMMENT => 'AnyVar',
    COMPILER_LINKS => 'CompilerLinksVar',
    CONFIGURE_ARGS => 'ConfigureArgsVar',
    CONFIGURE_STYLE => 'ConfigureVar',
    DESCR => 'DescrVar',
    DISTFILES => 'AnyVar',
    DPB_PROPERTIES => 'DPBPropertiesVar',
    PATCHFILES => 'AnyVar',
    DISTNAME => 'AnyVar',
    DIST_SUBDIR => 'DefinedVar',
    EPOCH => 'AnyVar',
    FLAVORS => 'FlavorsVar',
    FULLPKGNAME => 'FullpkgnameVar',
    GH_ACCOUNT => 'DefinedVar',
    GH_COMMIT => 'DefinedVar',
    GH_PROJECT => 'DefinedVar',
    GH_TAGNAME => 'DefinedVar',
    HOMEPAGE => 'AnyVar',
    IGNORE => 'DefinedVar',
    IS_INTERACTIVE => 'AnyVar',
    LIB_DEPENDS => 'LibDependsVar',
    MAINTAINER=> 'EmailVar',
    MAKEFILE_LIST => 'FilesListVar',
    MASTER_SITES => 'MasterSitesVar',
    MASTER_SITES0 => 'MasterSitesVar',
    MASTER_SITES1 => 'MasterSitesVar',
    MASTER_SITES2 => 'MasterSitesVar',
    MASTER_SITES3 => 'MasterSitesVar',
    MASTER_SITES4=> 'MasterSitesVar',
    MASTER_SITES5 => 'MasterSitesVar',
    MASTER_SITES6 => 'MasterSitesVar',
    MASTER_SITES7 => 'MasterSitesVar',
    MASTER_SITES8 => 'MasterSitesVar',
    MASTER_SITES9=> 'MasterSitesVar',
    MODULES => 'ModulesVar',
    MULTI_PACKAGES => 'MultiVar',
    NO_BUILD => 'YesNoVar',
    NO_TEST => 'YesNoVar',
    NOT_FOR_ARCHS => 'NotForArchListVar',
    ONLY_FOR_ARCHS => 'OnlyForArchListVar',
    PERMIT_DISTFILES_FTP=> 'YesKeyVar',
    PERMIT_PACKAGE_CDROM => 'YesKeyVar',
    PERMIT_PACKAGE_FTP=> 'YesKeyVar',
    PKGNAME => 'AnyVar',
    PKGSPEC => 'AnyVar',
    PREFIX => 'PrefixKeyVar',
    PKG_ARCH => 'ArchKeyVar',
    PORTROACH => 'DefinedVar',
    PORTROACH_COMMENT => 'DefinedVar',
    PSEUDO_FLAVOR => 'AnyVar',
    PSEUDO_FLAVORS => 'PseudoFlavorsVar',
    TEST_DEPENDS => 'TestDependsVar',
    TEST_IS_INTERACTIVE => 'AnyVar',
    REVISION => 'AnyVar',
    README => 'ReadmeVar',
    RUN_DEPENDS => 'RunDependsVar',
    SEPARATE_BUILD => 'YesKeyVar',
    SHARED_LIBS => 'SharedLibsVar',
    STATIC_PLIST => 'StaticPlistVar',
    SUBPACKAGE => 'DefinedVar',
    SUPDISTFILES => 'AnyVar',
    TARGETS => 'TargetsVar',
    USE_GMAKE => 'YesNoVar',
    USE_GROFF => 'YesNoVar',
    USE_LIBTOOL => 'YesNoGnuVar',
    USE_WXNEEDED => 'YesNoSpecialVar',
    COMPILER => 'DefinedVar',
    COMPILER_LANGS => 'DefinedVar',
    WANTLIB => 'WantlibVar',
    # XXX those variables are part of the dump for dpb, but really should
    # not end up in sqlports. But make sure we know about them.
    BUILD_PACKAGES => 'IgnoredVar',
    CHECKSUM_FILE => 'IgnoredVar',
    FETCH_MANUALLY => 'IgnoredVar',
    FLAVOR => 'IgnoredVar',
    MISSING_FILES => 'IgnoredVar',
};

our $unknown = {};

sub new
{
	my ($class, $p) = @@_;
	bless {path => $p, vars => {}}, $class;
}

sub create
{
	my ($self, $var, $value, $arch, $path) = @@_;
	my $k = $var;
	if (defined $arch) {
		$k .= "-$arch";
	}
	if (defined $vars->{$var}) {
		$self->{vars}{$k} = $vars->{$var}->new($var, $value, $arch, 
		    $path);
	} else {
		$unknown->{$k} //= $path;
	}
}

sub variables
{
	my $self = shift;
	return values %{$self->{vars}};
}

sub value
{
	my ($self, $name) = @@_;
	if (defined $self->{vars}{$name}) {
		return $self->{vars}{$name}->value;
	} else {
		return "";
	}
}

sub reclaim
{
	my $self = shift;
	my $n = {};
	for my $k (qw(SUBPACKAGE FLAVOR)) {
		$n->{$k} = $self->{vars}{$k};
	}
	$self->{vars} = $n;
}

1;
@


1.21
log
@pass COMPILER/COMPILER_LANGS thru
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.20 2017/05/12 18:18:09 espie Exp $
d35 1
d99 1
a99 1
    USE_WXNEEDED => 'YesNoVar',
@


1.20
log
@support WANT_CXX and LIBECXX in sqlports
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.19 2016/08/18 12:28:53 sthen Exp $
d99 2
a100 1
    WANT_CXX => 'DefinedVar',
@


1.19
log
@Add an USE_WXNEEDED flag for ports, to write an ld wrapper script in
${WRKDIR}/bin that adds -z wxneeded to linker command lines. It won't work
everywhere but provides an easy (and easily identifiable) way to add this
flag without fiddling with build systems.

Feedback/ok jca@@ jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.18 2016/03/20 20:03:07 naddy Exp $
d99 1
@


1.18
log
@drop SHARED_ONLY from the variables available in the database; ok jca@@
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.17 2015/05/14 18:01:08 jasper Exp $
d98 1
@


1.17
log
@store PORTROACH_COMMENT

ok sthen@@ (previous bsd.port.mk commit was ok with stuart too)
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.16 2014/11/04 10:44:33 espie Exp $
a90 1
    SHARED_ONLY => 'YesNoVar',
@


1.16
log
@add support for MAKEFILE_LIST
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.15 2014/09/05 14:45:02 jasper Exp $
d81 1
@


1.15
log
@PORTSCOUT -> PORTROACH
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.14 2014/09/02 14:26:39 jasper Exp $
d55 1
@


1.14
log
@hookup PORTSCOUT

ok espie@@
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.13 2014/07/12 17:35:32 espie Exp $
d79 1
a79 1
    PORTSCOUT => 'DefinedVar',
@


1.13
log
@support GH_* variables
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.12 2013/11/25 14:13:33 sthen Exp $
d79 1
@


1.12
log
@Remove support for VMEM_WARNING, as it's manually "maintained" it isn't
very accurate, and isn't sensitive to differences between arches.
ok ajacoutot dcoppa zhuk espie
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.11 2013/11/01 14:50:11 espie Exp $
d46 4
@


1.11
log
@specialize FULLKPGNAME and STATIC_PLIST variable classes, to be able to
special-case them easily
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.10 2013/06/23 08:58:07 espie Exp $
a91 1
    VMEM_WARNING => 'YesNoVar',
@


1.10
log
@clean-up the business of variables we silently ignore.
no bump, doesn't affect the built packages at all.
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.9 2013/06/21 10:48:38 espie Exp $
d45 1
a45 1
    FULLPKGNAME => 'AnyVar',
d85 1
a85 1
    STATIC_PLIST => 'YesNoVar',
@


1.9
log
@also store PREFIX, which allows for useful statistics
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.8 2013/03/31 09:43:13 espie Exp $
a43 2
    FETCH_MANUALLY => 'IgnoredVar',
    FLAVOR => 'IgnoredVar',
a61 1
    MISSING_FILES => 'IgnoredVar',
d94 7
@


1.8
log
@add README support
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.7 2013/03/11 11:53:51 espie Exp $
d76 1
@


1.7
log
@REGRESS -> TEST, more fun here
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.6 2013/03/08 10:05:31 espie Exp $
d37 1
a37 1
    DESCR => 'FileVar',
d82 1
@


1.6
log
@remove PERMIT_DISTFILES_CDROM from the table
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.5 2013/01/14 13:09:54 espie Exp $
d68 1
a68 1
    NO_REGRESS => 'YesNoVar',
d79 2
a80 2
    REGRESS_DEPENDS => 'RegressDependsVar',
    REGRESS_IS_INTERACTIVE => 'AnyVar',
@


1.5
log
@integrate DPB_PROPERTIES
(noticed by nigel@@ if memory serves)
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.4 2013/01/06 21:20:58 espie Exp $
a70 1
    PERMIT_DISTFILES_CDROM => 'YesKeyVar',
@


1.4
log
@make it work even if dump-vars doesn't record empty vars
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.3 2012/06/18 12:18:45 espie Exp $
d39 1
@


1.3
log
@clean-up ports-readmes special-case
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.2 2012/05/22 12:04:02 espie Exp $
d129 5
a133 1
	return $self->{vars}{$name}->value;
@


1.2
log
@tweak: MULTI table now holds pointer to the corresponding subpackage path
@
text
@d1 1
a1 1
# $OpenBSD: Info.pm,v 1.1 2012/05/18 12:11:28 espie Exp $
d86 1
@


1.1
log
@bite the bullet, reuse dpb's algorithm to make sure we get correct
PkgPath.

This implies restructuring the database code, and the start of a
better separation between variables handling, and actual insertion
in the database.

bump version to 2.0: this changes the paths that actually get recorded,
and pkglocatedb will need to be aware of that.
@
text
@d1 1
a1 1
# $OpenBSD$
d106 1
a106 1
	my ($self, $var, $value, $arch) = @@_;
d112 2
a113 1
		$self->{vars}{$k} = $vars->{$var}->new($var, $value, $arch);
d115 1
a115 1
		$unknown->{$k} //= $self->{path};
@

