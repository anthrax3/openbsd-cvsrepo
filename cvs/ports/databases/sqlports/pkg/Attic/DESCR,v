head	1.5;
access;
symbols
	OPENBSD_4_4:1.4.0.10
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.8
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.6
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	marc:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2008.08.19.23.50.54;	author espie;	state dead;
branches;
next	1.4;

1.4
date	2006.08.01.16.22.22;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2006.07.10.14.34.01;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2006.07.10.11.44.30;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.10.10.57.59;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.07.10.10.57.59;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@new version, lots of code refactoring, and a new compact database.
@
text
@SQLite database of every port in the system. This can be queried through
e.g., sqlitebrowser, or any kind of programming interface.

Database Schema:
- Ports(FULLPKGPATH, ...)
holds all the information retrieved through various variables, e.g.,:
    AUTOCONF_VERSION 
    AUTOMAKE_VERSION 
    BROKEN 
    *DEPENDS 
    CATEGORIES
    COMMENT 
    CONFIGURE_STYLE 
    DESCR 
    PACKAGING 
    DISTFILES 
    DISTNAME 
    DIST_SUBDIR 
    FLAVORS 
    HOMEPAGE 
    IS_INTERACTIVE 
    MAINTAINER
    MASTER_SITES*
    MODULES 
    MULTI_PACKAGES 
    NO_*
    ONLY_FOR_ARCHS 
    PACKAGES 
    PERMIT_*
    PKGNAME 
    PKG_ARCH 
    PSEUDO_FLAVORS 
    REGRESS_IS_INTERACTIVE 
    RUN_DEPENDS 
    SEPARATE_BUILD 
    SHARED_LIBS 
    SHARED_ONLY 
    SUBPACKAGE 
    SUPDISTFILES 
    USE_*
    WANTLIB 
This information is mostly unchanged, except for replacing Yes/No variables
with 1/0. Variables not present in a given port are left undefined.

The FULLPKGPATH is complete, including flavors markers. For each port with
MULTI_PACKAGES setting, another entry is written with PACKAGING set, and
the correct SUBPACKAGE.  

- Paths (FULLPKGPATH, PKGPATH)
PKGPATH is the stripped down version or FULLPKGPATH, without flavors 
or subpackage markers.

- Flavors(FULLPKGPATH, VALUE)
- Categories(FULLPKGPATH, VALUE)
- Multi(FULLPKGPATH, VALUE)
- Modules(FULLPKGPATH, VALUE)
- Configure(FULLPKGPATH, VALUE)
- ConfigureArgs(FULLPKGPATH, VALUE)
All of these values are actually lists. After disassembling the list,
one can find many entries in these secondary tables.

- Depends(FULLPKGPATH, FULLDEPENDS, DEPENDSPATH, TYPE)
All depends are stored in a single table, including the type:
R -> run
L -> lib
B -> build
Regress -> regress
with FULLDEPENDS the full text of the dependency, and DEPENDSPATH the PKGPATH
we depend upon.
- Wantlib(FULLPKGPATH, VALUE)
All the libraries the FULLPKGPATH depends upon, with and without version number,
coming from either the WANTLIB variable or various LIB_DEPENDS.

- Shared_Libs(FULLPKGPATH, LIBNAME, VERSION)
@


1.4
log
@tweak for PKGPATH, name it correctly as FULLPKGPATH, and add a subsidiary
table to map FULLPKGPATH to PKGPATH, e.g.,

SELECT DISTINCT PKGPATH, VALUE FROM Wantlib,Paths WHERE Wantlib.FULLPKGPATH=Paths.FULLPKGPATH ORDER BY PKGPATH
@
text
@@


1.3
log
@Handle CONFIGURE_ARGS as a list, e.g.,
SELECT DISTINCT VALUE FROM ConfigureArgs
makes sense.
@
text
@d5 1
a5 1
- Ports(PKGPATH, ...)
d45 1
a45 1
The PKGPATH is complete, including flavors markers. For each port with
d47 1
a47 1
the correct SUBPACKAGE.
d49 10
a58 6
- Flavors(PKGPATH, VALUE)
- Categories(PKGPATH, VALUE)
- Multi(PKGPATH, VALUE)
- Modules(PKGPATH, VALUE)
- Configure(PKGPATH, VALUE)
- ConfigureArgs(PKGPATH, VALUE)
d62 1
a62 1
- Depends(PKGPATH, FULLDEPENDS, DEPENDSPATH, TYPE)
d70 2
a71 2
- Wantlib(PKGPATH, VALUE)
All the libraries the PKGPATH depends upon, with and without version number,
d74 1
a74 1
- Shared_Libs(PKGPATH, LIBNAME, VERSION)
@


1.2
log
@Really process SHARED_LIBS
@
text
@d54 1
@


1.1
log
@Initial revision
@
text
@d69 1
@


1.1.1.1
log
@package the database built from ports for any user.
@
text
@@
