head	1.18;
access;
symbols
	OPENBSD_6_0:1.18.0.2
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.17.0.4
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.2
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.12.0.4
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.2
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.18
date	2016.03.20.20.03.07;	author naddy;	state Exp;
branches;
next	1.17;
commitid	43tYUQxcFrr8eCa8;

1.17
date	2014.11.04.10.44.33;	author espie;	state Exp;
branches;
next	1.16;
commitid	aLXrBrnsEkjiD3Oy;

1.16
date	2014.07.12.17.35.32;	author espie;	state Exp;
branches;
next	1.15;
commitid	g9GVMnSaykPGUXLd;

1.15
date	2013.06.21.10.48.38;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2013.03.31.09.43.13;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2013.03.11.11.53.51;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2012.07.06.10.22.17;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2012.06.18.12.18.45;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2012.05.22.12.04.02;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2012.05.20.11.06.08;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2012.01.28.11.40.34;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2011.09.10.08.48.15;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2011.04.10.18.01.13;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2010.11.26.20.32.38;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.02.10.26.17;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2010.09.21.15.18.03;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.17.13.06.49;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2008.08.19.23.50.54;	author espie;	state Exp;
branches;
next	;


desc
@@


1.18
log
@drop SHARED_ONLY from the variables available in the database; ok jca@@
@
text
@SQLite database of every port in the system. This can be queried through
e.g., sqlitebrowser, or any kind of programming interface.

This schema is mostly optimized for tools, and cumbersome to query by
hand.

Database Schema:
- Paths (ID, FULLPKGPATH, PKGPATH, CANONICAL)
PKGPATH points to a PATHS entry corresponding to the stripped down version of 
FULLPKGPATH, without flavors or subpackage markers, or is null if FULLPKGPATH
is already stripped.  Every other FULLPKGPATH, PKGPATH, DEPENDSPATH entry
in the database points to this table.
The FULLPKGPATH is complete, including flavors and pseudo flavors markers. 
For every port with MULTI_PACKAGES settings, one entry is written 
for each SUBPACKAGE.
CANONICAL points to the actual ID to use as an entry in other tables, for
FULLPKGPATH which don't have their own entry.

- Ports(FULLPKGPATH, ...)
holds all the information retrieved through various variables that is not
stored in specialized tables, e.g.,:
    AUTOCONF_VERSION 
    AUTOMAKE_VERSION 
    BROKEN 
    COMMENT 
    DESCR 
    DISTFILES 
    DISTNAME 
    DIST_SUBDIR 
    EPOCH
    FLAVORS 
    FULLPKGNAME
    GH_*
    HOMEPAGE 
    IS_INTERACTIVE 
    MAINTAINER
    MULTI_PACKAGES 
    NO_*
    PERMIT_*
    PKGNAME 
    PKGSPEC
    PKG_ARCH 
    PREFIX
    PSEUDO_FLAVOR
    PSEUDO_FLAVORS 
    TEST_IS_INTERACTIVE 
    REVISION
    SEPARATE_BUILD 
    STATIC_PLIST
    SUBPACKAGE 
    SUPDISTFILES 
    USE_*
    README

This information is mostly unchanged, except for replacing Yes/No variables
with 1/0. Variables not present in a given port are left undefined.

README corresponds to README files (full text value) and only exists when
such files are present.

Note that USE_LIBTOOL is 3-valued: 2 is gnu, 1 is yes, undef is no.

MULTI_PACKAGES ports hold several entries with corresponding FULLPKGPATH

- Flavors(FULLPKGPATH, VALUE)
- PseudoFlavors(FULLPKGPATH, VALUE)
- Categories(FULLPKGPATH, VALUE)
- Multi(FULLPKGPATH, VALUE, SUBPKGPATH)	('-' values are not stored)
- Modules(FULLPKGPATH, VALUE)
- Configure(FULLPKGPATH, VALUE) 	(corresponds to CONFIGURE_STYLE)
- ConfigureArgs(FULLPKGPATH, VALUE)
- MasterSites(FULLPKGPATH, N, VALUE)
- Makefiles(FULLPKGPATH, VALUE)
- NotForArch(FULLPKGPATH, VALUE)
- OnlyForArch(FULLPKGPATH, VALUE)
All of these variable values are actually lists. These lists are taken apart
and result in many entries in these secondary tables (or none if the list
is completely empty)

The Makefiles table contains only Makefiles from MAKEFILE_LIST that are not
"default values" (always included makefiles).

Each keyword table follows the same scheme
TABLENAME(KEYREF, VALUE)


- Depends(FULLPKGPATH, FULLDEPENDS, PKGSPEC, REST, DEPENDSPATH, TYPE)
All depends are stored in a single table, including the type:
0 -> library
1 -> run
2 -> build
3 -> test
with FULLDEPENDS the full text of the dependency, DEPENDSPATH the PKGPATH
we depend upon, PKGSPEC the spec we depend upon (if explicit), and REST
the rest.
- Wantlib(FULLPKGPATH, VALUE, EXTRA)
All the libraries the FULLPKGPATH depends upon, with optional version 
number specification stored in EXTRA
coming from either the WANTLIB variable or various LIB_DEPENDS.

- Multi(FULLPKGPATH, VALUE, SUBPKGPATH)
also contains the normalized pkgpath for the corresponding subpackage.
- Broken(FULLPKGPATH, ARCH, TEXT)
This is stored both in the main table (for now) and in a separate table, with
keywords since it may be arch-dependent

- Shared_Libs(FULLPKGPATH, LIBNAME, VERSION)

- TARGETS(FULLPKGPATH, VALUE)

Some information, both in the main table and in secondary tables 
is stored as keyword references to other tables:
AUTOCONF_VERSION, AUTOMAKE_VERSION -> AUTOVERSION
MAINTAINER -> EMAIL
CATEGORIES -> CATEGORYKEYS
CONFIGURE -> CONFIGURE_KEYS
MAKEFILES -> FILENAMES
MODULES -> MODULEKEYS
PREFIX -> PREFIX
WANTLIB.VALUE, SHARED_LIBS.LIBNAME -> LIBRARY
PERMIT_*, SEPARATE_BUILD -> KEYWORDS2
FLAVORS, PSEUDO_FLAVORS -> KEYWORDS
NOT_FOR_ARCHS, ONLY_FOR_ARCHS, PKG_ARCH -> ARCH
TARGETS -> TARGETKEYS
@


1.17
log
@add support for MAKEFILE_LIST
@
text
@a48 1
    SHARED_ONLY 
@


1.16
log
@support GH_* variables
@
text
@d74 1
d81 2
d118 1
@


1.15
log
@also store PREFIX, which allows for useful statistics
@
text
@d33 1
@


1.14
log
@add README support
@
text
@d42 1
d115 1
@


1.13
log
@REGRESS -> TEST, more fun here
@
text
@d52 1
d56 3
@


1.12
log
@more stuff than the DESCR says, bump rev.
@
text
@d44 1
a44 1
    REGRESS_IS_INTERACTIVE 
d84 1
a84 1
3 -> regress
@


1.11
log
@clean-up ports-readmes special-case
@
text
@d32 1
@


1.10
log
@tweak: MULTI table now holds pointer to the corresponding subpackage path
@
text
@d47 1
@


1.9
log
@more surgery:
- don't ask the database about existing pathkeys, it's simpler to have
our hash.
- in dependencies, don't like for non normalized pathkeys
- add CANONICAL column, and fill it.
@
text
@d61 1
a61 1
- Multi(FULLPKGPATH, VALUE)		('-' values are not stored)
d91 2
@


1.8
log
@fix description of DEPENDS table.
@
text
@d8 1
a8 1
- Paths (ID, FULLPKGPATH, PKGPATH)
d13 5
a17 3
The FULLPKGPATH is complete, including flavors markers (but not pseudo 
flavors, tack on PSEUDO_FLAVOR for that). For every port with MULTI_PACKAGES 
settings, one entry is written for each SUBPACKAGE.
@


1.7
log
@store PSEUDO_FLAVOR along. tweak descriptions a bit.
@
text
@d81 3
a83 2
with FULLDEPENDS the full text of the dependency, and DEPENDSPATH the key to
the FULLPKGPATH we depend upon.
@


1.6
log
@adjust after recent lesstif removal

ok aja@@ sthen@@
@
text
@d13 3
d39 1
@


1.5
log
@handle USE_MOTIF, add PKGSPEC
@
text
@a49 3
Note that USE_MOTIF is 4-valued: 1 is openmotif, 2 is lestif, 3 is any/yes,
undef is no.

@


1.4
log
@USE_LIBTOOL is 3-valued.
register TARGETS
@
text
@d34 1
d49 3
@


1.3
log
@output EPOCH and REVISION in dump-vars, and use it in sqlports.
ok espie@@ (with a reminder to add EPOCH, my first diff just had REVISION).
@
text
@d47 2
d89 2
d102 1
@


1.2
log
@a few minor tidying.
commit to db only at end of port (referential integrity for later)
handle BROKEN-arch and create new table/view based on that.
@
text
@d25 1
d37 1
@


1.1
log
@new version, lots of code refactoring, and a new compact database.
@
text
@d79 4
@

