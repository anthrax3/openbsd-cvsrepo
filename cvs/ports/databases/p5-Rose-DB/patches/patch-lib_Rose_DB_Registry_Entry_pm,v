head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.6
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.26
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.22
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.20
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.18
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.16
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.14
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.12
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.12
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.10
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.8
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.6
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.4
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.2
	OPENBSD_4_1_BASE:1.1.1.1
	rose:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.12.12.19.58.39;	author jasper;	state Exp;
branches;
next	1.2;
commitid	TXBUpH2PYaZFpOL9;

1.2
date	2010.01.10.13.45.03;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.10.21.35.34;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.12.10.21.35.34;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to Rose-DB-0.777
@
text
@$OpenBSD: patch-lib_Rose_DB_Registry_Entry_pm,v 1.2 2010/01/10 13:45:03 espie Exp $
--- lib/Rose/DB/Registry/Entry.pm.orig	Wed Mar 18 00:30:03 2015
+++ lib/Rose/DB/Registry/Entry.pm	Sat Dec 12 20:41:36 2015
@@@@ -2,7 +2,7 @@@@ package Rose::DB::Registry::Entry;
 
 use strict;
 
-use Clone::PP();
+use Clone();
 
 use Rose::Object;
 our @@ISA = qw(Rose::Object);
@@@@ -189,7 +189,7 @@@@ sub dump
   {
     my $value = $self->$attr();
     next  unless(defined $value);
-    $dump{$attr} = Clone::PP::clone($value);
+    $dump{$attr} = Clone::clone($value);
   }
 
 
@@@@ -199,13 +199,13 @@@@ sub dump
   {
     my $value = $self->{$attr};
     next  unless(defined $value);
-    $dump{$attr} = Clone::PP::clone($value);
+    $dump{$attr} = Clone::clone($value);
   }
 
   return \%dump;
 }
 
-sub clone { Clone::PP::clone($_[0]) }
+sub clone { Clone::clone($_[0]) }
 
 1;
 
@


1.2
log
@update to more recent version, removes the waits during regress...
@
text
@d1 3
a3 3
$OpenBSD: patch-lib_Rose_DB_Registry_Entry_pm,v 1.1.1.1 2006/12/10 21:35:34 espie Exp $
--- lib/Rose/DB/Registry/Entry.pm.orig	Mon Sep 14 17:01:58 2009
+++ lib/Rose/DB/Registry/Entry.pm	Sun Jan 10 14:14:31 2010
d13 1
a13 1
@@@@ -186,7 +186,7 @@@@ sub dump
d22 1
a22 1
@@@@ -196,13 +196,13 @@@@ sub dump
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
$OpenBSD$
--- lib/Rose/DB/Registry/Entry.pm.orig	Sun Dec 10 20:48:30 2006
+++ lib/Rose/DB/Registry/Entry.pm	Sun Dec 10 20:48:45 2006
d13 1
a13 1
@@@@ -70,7 +70,7 @@@@ sub dump
d21 2
a22 2
   # These booleans have default, but we only want the ones 
@@@@ -79,13 +79,13 @@@@ sub dump
@


1.1.1.1
log
@DBI abstraction layer for Rose OO RDBMS. A few tweaks that I may change
later...
@
text
@@
