head	1.2;
access;
symbols
	OPENBSD_5_9:1.1.1.1.0.12
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.14
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.10
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	jeremy_2012-Dec-20:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.07.01.11.38.35;	author sthen;	state dead;
branches;
next	1.1;
commitid	b9EwCJzgO88Two1V;

1.1
date	2012.12.20.16.16.34;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.12.20.16.16.34;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove obsolete readme
@
text
@pl/v8 requires pthreads in order to work.  OpenBSD does not allow
shared objects that link to pthreads to be opened via dlopen if
the executable program does not link to pthreads.  So to use
pl/v8, you must ensure that PostgreSQL links to libpthread.
The easiest way to do this is adding the following login class
to login.conf:

postgresql:\
        :setenv=LD_PRELOAD=libpthread.so:\
        :tc=daemon: 
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Add postgresql-plv8 1.3.0

PLV8 is a shared library that provides a PostgreSQL procedual language
powered by V8 JavaScript Engine. With this program you can write in
JavaScript your function that is callable from SQL.

Supported features are:

* Functions can receive any arguments, and return a value or set of
  records.
* Execute any SQL commands with built-in plv8.execute() function.
* Automatic data conversion between PostgreSQL and JavaScript,
  including string, numbers, timestamps, arrays, and records.
* Records are converted to JSON which keys are column names.
* Other types are converted to strings.
* Partial support to write TRIGGER handlers.
* EXTENSION support.
* CoffeeScript and LiveScript support.

OK abieber@@
@
text
@@
