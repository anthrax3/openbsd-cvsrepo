head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.30
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.28
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.26
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.22
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.24
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.18
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.16
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	catalyst:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.04.15.13.56.34;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2007.04.16.19.39.24;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.04.16.19.39.24;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Consistency: remove the 1, 2 or even 3 empty blank lines.
@
text
@Sort::SQL is so simple it almost doesn't deserve to be on CPAN. But since I kept
finding myself copy/pasting this method into multiple places, I finally figured
it deserved to live in its own class.

Sort::SQL implements one method: string2array().

Takes a scalar string of the SQL C<ORDER BY> syntax and turns it into
an array of key/value pair hashrefs.

This method can be used e.g. in Template Toolkit applications, to create
re-sortable table columns.
@


1.1
log
@Initial revision
@
text
@a11 1

@


1.1.1.1
log
@very simple module, a prereq for some catalyst controller.
@
text
@@
