head	1.3;
access;
symbols
	OPENBSD_5_9:1.2.0.12
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.14
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.10
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2016.07.01.11.35.51;	author sthen;	state dead;
branches;
next	1.2;
commitid	7NNaQKSuTsgYtMPG;

1.2
date	2012.11.22.21.26.18;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2011.09.08.17.13.51;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove obsolete readme, LD_PRELOAD=/usr/lib/libpthread.so no longer needed
@
text
@$OpenBSD: README,v 1.2 2012/11/22 21:26:18 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

If you are using FreeTDS from a program which is not linked with the
thread library, you may find that the program fails, possibly reporting
errors like this:

undefined symbol 'pthread_mutex_unlock'

If this occurs, you will need to manually load the pthread shared
library; you can do this by setting "LD_PRELOAD=/usr/lib/libpthread.so"
in the environment before starting your program.
@


1.2
log
@update to FreeTDS 0.91.49 (minor bugfix update in stable branch) and
tweak the text dealing with LD_PRELOAD=libpthread.so.
@
text
@d1 1
a1 1
$OpenBSD: README,v 1.1 2011/09/08 17:13:51 sthen Exp $
@


1.1
log
@update to freetds 0.91; add an openssl flavour (see README for details),
remove msdblib flavour (with @@pkgpath to handle updates): this is not
really worth a separate flavour; just define MSDBLIB when building your
applications if you require this behaviour.
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.4 2011/06/22 07:28:17 sthen Exp $
d7 3
a9 4
The main FreeTDS package uses GnuTLS if making an encrypted connection.
This requires thread support; due to limitations of OpenBSD's current
userland threads implementation, it is not always possible to load the
correct library automatically.
d11 1
a11 4
If you see errors like "undefined symbol 'pthread_mutex_unlock'" or
processes exiting when making a connection to an encrypted server, you
will need to manually load the pthread shared library; you can do this
by setting "LD_PRELOAD=/usr/lib/libpthread.so" in the environment.
d13 3
a15 6
Alternatively you may use the "openssl" flavor of the port; the licenses
of FreeTDS and OpenSSL are incompatible, therefore compiled packages may not
be distributed, so you will need to build this yourself.

Note that this does not apply for cleartext connections; the problem is
only seen when the encryption library is initialized.
@

