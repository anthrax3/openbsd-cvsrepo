head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.2
	OPENBSD_6_1_BASE:1.4
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	djm_20041107:1.1.1.1
	djm:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2016.09.23.09.13.39;	author sthen;	state Exp;
branches;
next	1.3;
commitid	ZnhUnKcdMrVwUsU9;

1.3
date	2006.11.24.22.53.04;	author espie;	state dead;
branches;
next	1.2;

1.2
date	2005.09.16.09.51.26;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.07.00.10.17;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.11.07.00.10.17;	author djm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Re-enable the main sqlite3 library/binary in ports and update to 3.14.2.
Tcl support will move to databases/sqlite3-tcl, other ports will be adjusted
in a set of upcoming commits.
@
text
@@@comment $OpenBSD$
@@pkgpath databases/sqlite3,-main
@@bin bin/sqlite3
include/sqlite3.h
include/sqlite3ext.h
lib/libsqlite3.a
lib/libsqlite3.la
@@lib lib/libsqlite3.so.${LIBsqlite3_VERSION}
lib/pkgconfig/sqlite3.pc
@@man man/man1/sqlite3.1
@


1.3
log
@new MULTI_PACKAGES
@
text
@d1 3
a3 4
@@comment $OpenBSD: PLIST,v 1.2 2005/09/16 09:51:26 espie Exp $
@@pkgpath databases/sqlite3,no_tcl
%%SHARED%%
bin/sqlite3
d5 1
d8 1
a8 1
lib/pkgconfig/
d10 1
@


1.2
log
@Fix a buglet in bsd.port.mk where the PSEUDO_FLAVORS get encoded into
the FULLPKGPATH, thus providing changes to packing-lists which shouldn't
happen, and making update more difficult.

Accordingly, bump all pkgnames with PSEUDO_FLAVORS, and provide an
update @@pkgpath for the bug for most of them (left out the ones with 3
or 4 pseudo flavors for space constraints...)
@
text
@d1 1
a1 1
@@comment $OpenBSD: PLIST,v 1.1.1.1 2004/11/07 00:10:17 djm Exp $
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
@@comment $OpenBSD: PLIST,v 1.3 2004/09/14 23:31:47 espie Exp $
@


1.1.1.1
log
@Import of sqlite3, a public-domain in-process SQL engine:

    SQLite is a C library that implements an embeddable SQL database engine.
    Programs that link with the SQLite library can have SQL database access
    without running a separate RDBMS process. The distribution comes with a
    standalone command-line access program (sqlite) that can be used to
    administer an SQLite database and which serves as an example of how to
    use the SQLite library. SQLite is not a client library used to connect to
    a big database server. SQLite is the server. The SQLite library reads and
    writes directly to and from the database files on disk.

Note that sqlite3 is not backwards compatible with sqlite2, but they can be 
installed in parallel (thus the separate port). ok jolan@@

@
text
@@
