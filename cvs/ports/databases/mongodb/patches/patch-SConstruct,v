head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.1.1.0.2
	OPENBSD_5_0_BASE:1.1.1.1
	fgsch_20110602:1.1.1.1
	fgsch:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2016.05.06.15.33.37;	author sthen;	state Exp;
branches;
next	1.5;
commitid	5e1KALTAPXjZQxNY;

1.5
date	2014.12.10.19.59.29;	author dcoppa;	state Exp;
branches;
next	1.4;
commitid	aPcYIQCi12I5bhbB;

1.4
date	2014.09.16.17.28.07;	author jasper;	state Exp;
branches;
next	1.3;
commitid	xftZua1X95nEUSek;

1.3
date	2013.12.10.17.30.41;	author joshe;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.03.16.38.21;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.02.00.26.32;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.06.02.00.26.32;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.6
log
@update to MongoDB 3.2.6, from Andrew Aldridge, minor tweaks from me
@
text
@$OpenBSD$
--- SConstruct.orig	Sat Apr 30 18:18:21 2016
+++ SConstruct	Sat Apr 30 18:20:28 2016
@@@@ -831,6 +831,7 @@@@ envDict = dict(BUILD_ROOT=buildDir,
                INSTALL_DIR=installDir,
                CONFIG_HEADER_DEFINES={},
                LIBDEPS_TAG_EXPANSIONS=[],
+               ENV = {'PATH': os.environ['PATH']},
                )
 
 env = Environment(variables=env_vars, **envDict)
@


1.5
log
@
Switch mongodb to use devel/yaml-cpp instead of the bundled one.

With a fix from upstream:
https://github.com/mongodb/mongo/commit/44b0e3591839525a0c951319540488814e5c25fd

This should unbreak bulk builds.

OK sthen@@
@
text
@d1 9
a9 16
$OpenBSD: patch-SConstruct,v 1.4 2014/09/16 17:28:07 jasper Exp $

Fixup detection of yaml-cpp system library
https://github.com/mongodb/mongo/commit/44b0e3591839525a0c951319540488814e5c25fd

--- SConstruct.orig	Fri Aug  8 15:13:51 2014
+++ SConstruct	Wed Dec 10 09:28:50 2014
@@@@ -814,7 +814,6 @@@@ if nix:
     # -Winvalid-pch Warn if a precompiled header (see Precompiled Headers) is found in the search path but can't be used.
     env.Append( CCFLAGS=["-fPIC",
                          "-fno-strict-aliasing",
-                         "-ggdb",
                          "-pthread",
                          "-Wall",
                          "-Wsign-compare",
@@@@ -828,6 +827,7 @@@@ if nix:
d11 1
a11 31
     env.Append( CPPDEFINES=["_FILE_OFFSET_BITS=64"] )
     env.Append( CXXFLAGS=["-Wnon-virtual-dtor", "-Woverloaded-virtual"] )
+    env.Append( CXXFLAGS=os.environ['CXXFLAGS'] )
     env.Append( LINKFLAGS=["-fPIC", "-pthread"] )
 
     # SERVER-9761: Ensure early detection of missing symbols in dependent libraries at program
@@@@ -859,14 +859,9 @@@@ if nix:
         env.Append( CPPDEFINES=["MONGO_GCOV"] )
         env.Append( LINKFLAGS=" -fprofile-arcs -ftest-coverage " )
 
-    if optBuild:
-        env.Append( CCFLAGS=["-O3"] )
-    else:
-        env.Append( CCFLAGS=["-O0"] )
-
     if debugBuild:
         if not optBuild:
-            env.Append( CCFLAGS=["-fstack-protector"] )
+            env.Append( CCFLAGS=["-fstack-protector", "-ggdb"] )
             env.Append( LINKFLAGS=["-fstack-protector"] )
             env.Append( SHLINKFLAGS=["-fstack-protector"] )
         env['ENV']['GLIBCXX_FORCE_NEW'] = 1; # play nice with valgrind
@@@@ -1352,7 +1347,7 @@@@ def doConfigure(myenv):
         conf.FindSysLibDep("stemmer", ["stemmer"])
 
     if use_system_version_of_library("yaml"):
-        conf.FindSysLibDep("yaml", ["yaml"])
+        conf.FindSysLibDep("yaml", ["yaml-cpp"])
 
     if use_system_version_of_library("boost"):
         if not conf.CheckCXXHeader( "boost/filesystem/operations.hpp" ):
@


1.4
log
@- update to mongodb-2.6.4

based on an earlier diff by sthen@@, and ok sthen@@
@
text
@d1 7
a7 3
$OpenBSD: patch-SConstruct,v 1.3 2013/12/10 17:30:41 joshe Exp $
--- SConstruct.orig	Fri Aug  8 22:13:51 2014
+++ SConstruct	Tue Sep 16 16:08:02 2014
d40 9
@


1.3
log
@Update mongodb to 2.4.7. Still BROKEN, but a bit closer to working.

This also switches the javascript backend from spidermonkey to v8, as
support for the former has already been removed in the mongodb repo.

"since it's broken go ahead and commit that" fgsch@@
@
text
@d1 4
a4 4
$OpenBSD: patch-SConstruct,v 1.2 2011/10/03 16:38:21 fgsch Exp $
--- SConstruct.orig	Thu Oct 17 11:37:56 2013
+++ SConstruct	Mon Oct 28 20:07:16 2013
@@@@ -702,7 +702,6 @@@@ if nix:
d12 1
a12 1
@@@@ -716,6 +715,7 @@@@ if nix:
d17 1
a17 2
     env.Append( LINKFLAGS=["-fPIC", "-pthread",  "-rdynamic"] )
     env.Append( LIBS=[] )
d19 3
a21 1
@@@@ -731,10 +731,10 @@@@ if nix:
d24 5
d30 5
a34 2
-        env.Append( CCFLAGS=["-O0", "-fstack-protector"] )
+        env.Append( CCFLAGS=["-O0", "-fstack-protector", "-ggdb"] )
a35 7
-    else:
-        env.Append( CCFLAGS=["-O3"] )
+    #else:
+        #env.Append( CCFLAGS=["-O3"] )
 
     if debugLogging:
         env.Append( CPPDEFINES=["_DEBUG"] );
@


1.2
log
@Update to MongoDB 2.0.0.
benoit@@ rpointel@@ ok.
@
text
@d1 12
a12 13
$OpenBSD: patch-SConstruct,v 1.1.1.1 2011/06/02 00:26:32 fgsch Exp $
--- SConstruct.orig	Sun Sep 11 15:09:34 2011
+++ SConstruct	Sun Sep 18 21:38:08 2011
@@@@ -670,7 +670,7 @@@@ if nix:
         env["CXX"] = "distcc " + env["CXX"]
         
     # -Winvalid-pch Warn if a precompiled header (see Precompiled Headers) is found in the search path but can't be used. 
-    env.Append( CPPFLAGS="-fPIC -fno-strict-aliasing -ggdb -pthread -Wall -Wsign-compare -Wno-unknown-pragmas -Winvalid-pch" )
+    env.Append( CPPFLAGS="-fPIC -fno-strict-aliasing -pthread -Wall -Wsign-compare -Wno-unknown-pragmas -Winvalid-pch" )
     # env.Append( " -Wconversion" ) TODO: this doesn't really work yet
     if linux:
         env.Append( CPPFLAGS=" -Werror " )
@@@@ -679,6 +679,7 @@@@ if nix:
d14 2
a15 2
     env.Append( CPPDEFINES="_FILE_OFFSET_BITS=64" )
     env.Append( CXXFLAGS=" -Wnon-virtual-dtor " )
d17 1
a17 1
     env.Append( LINKFLAGS=" -fPIC -pthread -rdynamic" )
d20 2
a21 2
@@@@ -690,10 +691,10 @@@@ if nix:
         env.Append( LINKFLAGS=" -Wl,--as-needed -Wl,-zdefs " )
d24 2
a25 2
-        env.Append( CPPFLAGS=" -O0 -fstack-protector " );
+        env.Append( CPPFLAGS=" -O0 -fstack-protector -ggdb " );
d28 1
a28 1
-        env.Append( CPPFLAGS=" -O3 " )
d30 1
a30 12
+        #env.Append( CPPFLAGS=" -O3 " )
         #env.Append( CPPFLAGS=" -fprofile-generate" )
         #env.Append( LINKFLAGS=" -fprofile-generate" )
         # then:
@@@@ -1096,7 +1097,7 @@@@ mongos = env.Program( "mongos" , commonFiles + coreDbF
 # c++ library
 clientLibName = str( env.Library( "mongoclient" , allClientFiles )[0] )
 if has_option( "sharedclient" ):
-    sharedClientLibName = str( env.SharedLibrary( "mongoclient" , allClientFiles )[0] )
+    sharedClientLibName = str( env.SharedLibrary( "mongoclient" , allClientFiles, SHLIBSUFFIX=".so.%s" % os.environ["LIBmongoclient_VERSION"] )[0] )
 env.Library( "mongotestfiles" , commonFiles + coreDbFiles + coreServerFiles + serverOnlyFiles + ["client/gridfs.cpp"])
 env.Library( "mongoshellfiles" , allClientFiles + coreServerFiles )
d32 2
a33 9
@@@@ -1428,7 +1429,7 @@@@ def installBinary( e , name ):
     fullInstallName = installDir + "/bin/" + name
 
     allBinaries += [ name ]
-    if (solaris or linux) and (not has_option("nostrip")):
+    if (solaris or linux or openbsd) and (not has_option("nostrip")):
         e.AddPostAction( inst, e.Action( 'strip ' + fullInstallName ) )
 
     if linux and len( COMMAND_LINE_TARGETS ) == 1 and str( COMMAND_LINE_TARGETS[0] ) == "s3dist":
@


1.1
log
@Initial revision
@
text
@d1 4
a4 5
$OpenBSD$
--- SConstruct.orig	Wed Apr  6 05:40:13 2011
+++ SConstruct	Sun Apr 10 22:48:00 2011
@@@@ -668,12 +668,13 @@@@ if nix:
     if has_option( "distcc" ):
d7 1
d13 3
a15 1
         env.Append( CPPFLAGS=" -fno-builtin-memcmp " ) # glibc's memcmp is faster than gcc's
d17 1
a17 1
+    env.Append( CXXFLAGS = os.environ['CXXFLAGS'] )
d21 1
a21 1
@@@@ -685,10 +686,10 @@@@ if nix:
d29 1
a29 1
-        env.Append( CPPFLAGS=" -O3" )
d31 1
a31 1
+        #env.Append( CPPFLAGS=" -O3" )
d35 1
a35 10
@@@@ -911,8 +912,6 @@@@ def doConfigure( myenv , needPcre=True , shell=False )
                 
         myCheckLib( J , True )
         mozHeader = "js"
-        if bigLibString(myenv).find( "mozjs" ) >= 0:
-            mozHeader = "mozjs"
 
         if not conf.CheckHeader( mozHeader + "/jsapi.h" ):
             if conf.CheckHeader( "jsapi.h" ):
@@@@ -1118,7 +1117,7 @@@@ mongos = env.Program( "mongos" , commonFiles + coreDbF
d44 1
a44 1
@@@@ -1473,7 +1472,7 @@@@ def installBinary( e , name ):
@


1.1.1.1
log
@Import mongodb, a scalable, high-performance, open source, document-oriented
database.
with input from dcoppa and martynas, martynas ok some time ago.
@
text
@@
