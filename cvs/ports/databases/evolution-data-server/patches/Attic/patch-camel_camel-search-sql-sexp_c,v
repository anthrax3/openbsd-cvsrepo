head	1.13;
access;
symbols
	OPENBSD_5_4:1.8.0.4
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.13
date	2013.09.26.14.11.09;	author ajacoutot;	state dead;
branches;
next	1.12;

1.12
date	2013.09.11.14.02.54;	author ajacoutot;	state Exp;
branches;
next	1.11;

1.11
date	2013.09.11.09.24.57;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2013.08.15.16.07.27;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2013.08.15.14.49.35;	author ajacoutot;	state dead;
branches;
next	1.8;

1.8
date	2012.10.18.13.54.56;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2012.09.28.06.35.36;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2012.03.29.06.45.21;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2011.12.29.09.23.19;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.21.13.26.03;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.12.07.26.19;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.29.11.20.02;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.30.07.32.09;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Update to evolution-data-server-3.10.0.
@
text
@$OpenBSD: patch-camel_camel-search-sql-sexp_c,v 1.12 2013/09/11 14:02:54 ajacoutot Exp $

From fa37efaf26d366a3d0d5256283455a28025ddbde Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <antoine@@mtier.org>
Date: Wed, 11 Sep 2013 13:57:57 +0000
Subject: do not assume time_t is long

--- camel/camel-search-sql-sexp.c.orig	Sun Sep 16 17:05:39 2012
+++ camel/camel-search-sql-sexp.c	Thu Oct 18 14:40:10 2012
@@@@ -188,7 +188,7 @@@@ eval_eq (struct _CamelSExp *f,
 		if (r1->type == CAMEL_SEXP_RES_INT)
 			g_string_append_printf (str, "%d", r1->value.number);
 		else if (r1->type == CAMEL_SEXP_RES_TIME)
-			g_string_append_printf (str, "%ld", r1->value.time);
+			g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64) r1->value.time);
 		else if (r1->type == CAMEL_SEXP_RES_STRING)
 			g_string_append_printf (str, "%s", r1->value.string);
 
@@@@ -206,7 +206,7 @@@@ eval_eq (struct _CamelSExp *f,
 			if (r2->type == CAMEL_SEXP_RES_BOOL)
 				g_string_append_printf (str, "%d", r2->value.boolean);
 			else if (r2->type == CAMEL_SEXP_RES_TIME)
-				g_string_append_printf (str, "%ld", r2->value.time);
+				g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64) r2->value.time);
 			else if (r2->type == CAMEL_SEXP_RES_STRING) {
 				gchar *tmp = g_strdup_printf ("%c%s%c", ut ? '%':' ', r2->value.string, ut ? '%':' ');
 				gchar *safe = get_db_safe_string (tmp);
@@@@ -244,7 +244,7 @@@@ eval_lt (struct _CamelSExp *f,
 		if (r1->type == CAMEL_SEXP_RES_INT)
 			g_string_append_printf (str, "%d", r1->value.number);
 		else if (r1->type == CAMEL_SEXP_RES_TIME)
-			g_string_append_printf (str, "%ld", r1->value.time);
+			g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64) r1->value.time);
 		else if (r1->type == CAMEL_SEXP_RES_STRING)
 			g_string_append_printf (str, "%s", r1->value.string);
 
@@@@ -254,7 +254,7 @@@@ eval_lt (struct _CamelSExp *f,
 		if (r2->type == CAMEL_SEXP_RES_BOOL)
 			g_string_append_printf (str, "%d", r2->value.boolean);
 		else if (r2->type == CAMEL_SEXP_RES_TIME)
-			g_string_append_printf (str, "%ld", r2->value.time);
+			g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64) r2->value.time);
 		else if (r2->type == CAMEL_SEXP_RES_STRING)
 			g_string_append_printf (str, "%s", r2->value.string);
 		camel_sexp_result_free (f, r1);
@@@@ -286,7 +286,7 @@@@ eval_gt (struct _CamelSExp *f,
 		if (r1->type == CAMEL_SEXP_RES_INT)
 			g_string_append_printf (str, "%d", r1->value.number);
 		else if (r1->type == CAMEL_SEXP_RES_TIME)
-			g_string_append_printf (str, "%ld", r1->value.time);
+			g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64) r1->value.time);
 		else if (r1->type == CAMEL_SEXP_RES_STRING)
 			g_string_append_printf (str, "%s", r1->value.string);
 
@@@@ -296,7 +296,7 @@@@ eval_gt (struct _CamelSExp *f,
 		if (r2->type == CAMEL_SEXP_RES_BOOL)
 			g_string_append_printf (str, "%d", r2->value.boolean);
 		else if (r2->type == CAMEL_SEXP_RES_TIME)
-			g_string_append_printf (str, "%ld", r2->value.time);
+			g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64) r2->value.time);
 		else if (r2->type == CAMEL_SEXP_RES_STRING)
 			g_string_append_printf (str, "%s", r2->value.string);
 		camel_sexp_result_free (f, r1);
@


1.12
log
@Committed upstream with some tweaks.
@
text
@d1 1
a1 1
$OpenBSD: patch-camel_camel-search-sql-sexp_c,v 1.11 2013/09/11 09:24:57 ajacoutot Exp $
@


1.11
log
@Fixes for 64-bit time_t. Still a moving target but better than what we
currently have.
@
text
@d1 1
a1 1
$OpenBSD: patch-camel_camel-search-sql-sexp_c,v 1.10 2013/08/15 16:07:27 ajacoutot Exp $
d3 4
a6 1
https://bugzilla.gnome.org/show_bug.cgi?id=707900
d15 1
a15 1
+			g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64)r1->value.time);
d24 1
a24 1
+				g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64)r2->value.time);
d33 1
a33 1
+			g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64)r1->value.time);
d42 1
a42 1
+			g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64)r2->value.time);
d51 1
a51 1
+			g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64)r1->value.time);
d60 1
a60 1
+			g_string_append_printf (str, "%" G_GINT64_FORMAT, (gint64)r2->value.time);
@


1.10
log
@Revert previous on these 3 ports.
kettenis@@ says there is more work involved since we are different from the
others... I have no time to take care of it properly so put back whatever
was there before which seemed to work fine.
@
text
@d1 1
a1 1
$OpenBSD: patch-camel_camel-search-sql-sexp_c,v 1.8 2012/10/18 13:54:56 ajacoutot Exp $
d3 1
a3 1
XXX remove when we have a 64-bit time_t
d12 1
a12 1
+			g_string_append_printf (str, "%lld", (long long)r1->value.time);
d21 1
a21 1
+				g_string_append_printf (str, "%lld", (long long)r2->value.time);
d30 1
a30 1
+			g_string_append_printf (str, "%lld", (long long)r1->value.time);
d39 1
a39 1
+			g_string_append_printf (str, "%lld", (long long)r2->value.time);
d48 1
a48 1
+			g_string_append_printf (str, "%lld", (long long)r1->value.time);
d57 1
a57 1
+			g_string_append_printf (str, "%lld", (long long)r2->value.time);
@


1.9
log
@Remove these, we have 64-bit time_t now.
@
text
@@


1.8
log
@We are getting fucked by our 32-bits time_t :(
@
text
@d1 1
a1 1
$OpenBSD: patch-camel_camel-search-sql-sexp_c,v 1.7 2012/09/28 06:35:36 ajacoutot Exp $
@


1.7
log
@Update to evolution-data-server-3.6.0.
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
On OpenBSD, time_t is an int.
d5 2
a6 2
--- camel/camel-search-sql-sexp.c.orig	Fri Sep 28 07:53:54 2012
+++ camel/camel-search-sql-sexp.c	Fri Sep 28 07:54:44 2012
d12 1
a12 1
+			g_string_append_printf (str, "%d", r1->value.time);
d21 1
a21 1
+				g_string_append_printf (str, "%d", r2->value.time);
d30 1
a30 1
+			g_string_append_printf (str, "%d", r1->value.time);
d39 1
a39 1
+			g_string_append_printf (str, "%d", r2->value.time);
d48 1
a48 1
+			g_string_append_printf (str, "%d", r1->value.time);
d57 1
a57 1
+			g_string_append_printf (str, "%d", r2->value.time);
@


1.6
log
@Update to evolution-data-server-3.4.0.
@
text
@d5 2
a6 2
--- camel/camel-search-sql-sexp.c.orig	Fri Mar 23 23:14:46 2012
+++ camel/camel-search-sql-sexp.c	Fri Mar 23 23:15:37 2012
d9 1
a9 1
 			g_string_append_printf(str, "%d", r1->value.number);
d11 2
a12 2
-			g_string_append_printf(str, "%ld", r1->value.time);
+			g_string_append_printf(str, "%d", r1->value.time);
d14 1
a14 1
 			g_string_append_printf(str, "%s", r1->value.string);
d18 1
a18 1
 				g_string_append_printf(str, "%d", r2->value.boolean);
d20 2
a21 2
-				g_string_append_printf(str, "%ld", r2->value.time);
+				g_string_append_printf(str, "%d", r2->value.time);
d23 1
a23 1
 				gchar *tmp = g_strdup_printf("%c%s%c", ut ? '%':' ', r2->value.string, ut?'%':' ');
d27 1
a27 1
 			g_string_append_printf(str, "%d", r1->value.number);
d29 2
a30 2
-			g_string_append_printf(str, "%ld", r1->value.time);
+			g_string_append_printf(str, "%d", r1->value.time);
d32 1
a32 1
 			g_string_append_printf(str, "%s", r1->value.string);
d36 1
a36 1
 			g_string_append_printf(str, "%d", r2->value.boolean);
d38 2
a39 2
-			g_string_append_printf(str, "%ld", r2->value.time);
+			g_string_append_printf(str, "%d", r2->value.time);
d41 1
a41 1
 			g_string_append_printf(str, "%s", r2->value.string);
d45 1
a45 1
 			g_string_append_printf(str, "%d", r1->value.number);
d47 2
a48 2
-			g_string_append_printf(str, "%ld", r1->value.time);
+			g_string_append_printf(str, "%d", r1->value.time);
d50 1
a50 1
 			g_string_append_printf(str, "%s", r1->value.string);
d54 1
a54 1
 			g_string_append_printf(str, "%d", r2->value.boolean);
d56 2
a57 2
-			g_string_append_printf(str, "%ld", r2->value.time);
+			g_string_append_printf(str, "%d", r2->value.time);
d59 1
a59 1
 			g_string_append_printf(str, "%s", r2->value.string);
@


1.5
log
@Tweak patches to please our time_t.
@
text
@d1 1
a1 1
$OpenBSD: patch-camel_camel-search-sql-sexp_c,v 1.4 2011/09/21 13:26:03 jasper Exp $
d5 4
a8 4
--- camel/camel-search-sql-sexp.c.orig	Mon Sep 19 07:03:01 2011
+++ camel/camel-search-sql-sexp.c	Thu Dec 29 09:11:34 2011
@@@@ -188,7 +188,7 @@@@ eval_eq (struct _ESExp *f,
 		if (r1->type == ESEXP_RES_INT)
d10 1
a10 1
 		else if (r1->type == ESEXP_RES_TIME)
d13 1
a13 1
 		else if (r1->type == ESEXP_RES_STRING)
d16 2
a17 2
@@@@ -206,7 +206,7 @@@@ eval_eq (struct _ESExp *f,
 			if (r2->type == ESEXP_RES_BOOL)
d19 1
a19 1
 			else if (r2->type == ESEXP_RES_TIME)
d22 1
a22 1
 			else if (r2->type == ESEXP_RES_STRING) {
d25 2
a26 2
@@@@ -244,7 +244,7 @@@@ eval_lt (struct _ESExp *f,
 		if (r1->type == ESEXP_RES_INT)
d28 1
a28 1
 		else if (r1->type == ESEXP_RES_TIME)
d31 1
a31 1
 		else if (r1->type == ESEXP_RES_STRING)
d34 2
a35 2
@@@@ -254,7 +254,7 @@@@ eval_lt (struct _ESExp *f,
 		if (r2->type == ESEXP_RES_BOOL)
d37 1
a37 1
 		else if (r2->type == ESEXP_RES_TIME)
d40 1
a40 1
 		else if (r2->type == ESEXP_RES_STRING)
d42 3
a44 3
 		e_sexp_result_free (f, r1);
@@@@ -286,7 +286,7 @@@@ eval_gt (struct _ESExp *f,
 		if (r1->type == ESEXP_RES_INT)
d46 1
a46 1
 		else if (r1->type == ESEXP_RES_TIME)
d49 1
a49 1
 		else if (r1->type == ESEXP_RES_STRING)
d52 2
a53 2
@@@@ -296,7 +296,7 @@@@ eval_gt (struct _ESExp *f,
 		if (r2->type == ESEXP_RES_BOOL)
d55 1
a55 1
 		else if (r2->type == ESEXP_RES_TIME)
d58 1
a58 1
 		else if (r2->type == ESEXP_RES_STRING)
d60 1
a60 1
 		e_sexp_result_free (f, r1);
@


1.4
log
@- update to 3.1.92
- hardcode (but with XXX) 3.2 for now
@
text
@d1 6
a6 3
$OpenBSD: patch-camel_camel-search-sql-sexp_c,v 1.3 2011/09/12 07:26:19 ajacoutot Exp $
--- camel/camel-search-sql-sexp.c.orig	Sun Sep  4 00:50:05 2011
+++ camel/camel-search-sql-sexp.c	Sat Sep 17 09:57:03 2011
d12 1
a12 1
+			g_string_append_printf(str, "%lld", (long long)r1->value.time);
d21 1
a21 1
+				g_string_append_printf(str, "%lld", (long long)r2->value.time);
d30 1
a30 1
+			g_string_append_printf(str, "%lld", (long long)r1->value.time);
d39 1
a39 1
+			g_string_append_printf(str, "%lld", (long long)r2->value.time);
d48 1
a48 1
+			g_string_append_printf(str, "%lld", (long long)r1->value.time);
d57 1
a57 1
+			g_string_append_printf(str, "%lld", (long long)r2->value.time);
@


1.3
log
@Start the GNOME3 merge armageddon... breakage expected.
@
text
@d1 4
a4 4
$OpenBSD: patch-camel_camel-search-sql-sexp_c,v 1.1.1.1 2011/05/17 17:07:32 ajacoutot Exp $
--- camel/camel-search-sql-sexp.c.orig	Thu Sep 16 14:47:54 2010
+++ camel/camel-search-sql-sexp.c	Tue May 17 13:40:32 2011
@@@@ -176,7 +176,7 @@@@ eval_eq (struct _ESExp *f, gint argc, struct _ESExpTer
d13 1
a13 1
@@@@ -194,7 +194,7 @@@@ eval_eq (struct _ESExp *f, gint argc, struct _ESExpTer
d22 1
a22 1
@@@@ -229,7 +229,7 @@@@ eval_lt (struct _ESExp *f, gint argc, struct _ESExpTer
d31 1
a31 1
@@@@ -239,7 +239,7 @@@@ eval_lt (struct _ESExp *f, gint argc, struct _ESExpTer
d40 1
a40 1
@@@@ -268,7 +268,7 @@@@ eval_gt (struct _ESExp *f, gint argc, struct _ESExpTer
d49 1
a49 1
@@@@ -278,7 +278,7 @@@@ eval_gt (struct _ESExp *f, gint argc, struct _ESExpTer
@


1.2
log
@Tweak some patches and remove -DGTK_DISABLE_DEPRECATED to fix a crash in
evolution calendar.
@
text
@d1 4
a4 4
$OpenBSD$
--- camel/camel-search-sql-sexp.c.orig	Mon Sep 13 14:16:52 2010
+++ camel/camel-search-sql-sexp.c	Tue Mar 29 12:29:11 2011
@@@@ -176,7 +176,7 @@@@ eval_eq(struct _ESExp *f, gint argc, struct _ESExpTerm
d13 1
a13 1
@@@@ -194,7 +194,7 @@@@ eval_eq(struct _ESExp *f, gint argc, struct _ESExpTerm
d21 2
a22 2
 				gchar *safe = get_db_safe_string(tmp);
@@@@ -229,7 +229,7 @@@@ eval_lt(struct _ESExp *f, gint argc, struct _ESExpTerm
d31 1
a31 1
@@@@ -239,7 +239,7 @@@@ eval_lt(struct _ESExp *f, gint argc, struct _ESExpTerm
d39 2
a40 2
 		e_sexp_result_free(f, r1);
@@@@ -268,7 +268,7 @@@@ eval_gt(struct _ESExp *f, gint argc, struct _ESExpTerm
d49 1
a49 1
@@@@ -278,7 +278,7 @@@@ eval_gt(struct _ESExp *f, gint argc, struct _ESExpTerm
d57 1
a57 1
 		e_sexp_result_free(f, r1);
@


1.1
log
@Update to evolution-data-server-2.32.0.

ok jasper@@
@
text
@d2 2
a3 2
--- camel/camel-search-sql-sexp.c.orig	Tue Sep 28 07:45:42 2010
+++ camel/camel-search-sql-sexp.c	Tue Sep 28 07:46:29 2010
d9 1
a9 1
+			g_string_append_printf(str, "%d", r1->value.time);
d18 1
a18 1
+				g_string_append_printf(str, "%d", r2->value.time);
d27 1
a27 1
+			g_string_append_printf(str, "%d", r1->value.time);
d36 1
a36 1
+			g_string_append_printf(str, "%d", r2->value.time);
d45 1
a45 1
+			g_string_append_printf(str, "%d", r1->value.time);
d54 1
a54 1
+			g_string_append_printf(str, "%d", r2->value.time);
@

