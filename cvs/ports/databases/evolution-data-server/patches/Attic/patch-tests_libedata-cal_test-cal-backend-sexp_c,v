head	1.8;
access;
symbols
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2;
locks; strict;
comment	@# @;


1.8
date	2013.09.26.14.11.11;	author ajacoutot;	state dead;
branches;
next	1.7;

1.7
date	2013.09.11.14.02.55;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2013.09.11.09.24.57;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2013.08.15.16.07.27;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2013.08.15.14.49.35;	author ajacoutot;	state dead;
branches;
next	1.3;

1.3
date	2012.10.18.13.54.56;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.12.29.09.23.19;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.09.21.13.26.03;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to evolution-data-server-3.10.0.
@
text
@$OpenBSD: patch-tests_libedata-cal_test-cal-backend-sexp_c,v 1.7 2013/09/11 14:02:55 ajacoutot Exp $

From fa37efaf26d366a3d0d5256283455a28025ddbde Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <antoine@@mtier.org>
Date: Wed, 11 Sep 2013 13:57:57 +0000
Subject: do not assume time_t is long

--- tests/libedata-cal/test-cal-backend-sexp.c.orig	Mon Sep 19 07:03:01 2011
+++ tests/libedata-cal/test-cal-backend-sexp.c	Thu Dec 29 09:09:34 2011
@@@@ -9,7 +9,7 @@@@ test_query (const gchar *query)
 	gboolean generator = e_cal_backend_sexp_evaluate_occur_times (sexp, &start, &end);
 
 	if (generator) {
-		printf ("%s: %ld - %ld\n", query, start, end);
+		printf ("%s: %" G_GINT64_FORMAT "- %" G_GINT64_FORMAT "\n", query, (gint64) start, (gint64) end);
 	} else {
 		printf ("%s: no time prunning possible\n", query);
 	}
@


1.7
log
@Committed upstream with some tweaks.
@
text
@d1 1
a1 1
$OpenBSD: patch-tests_libedata-cal_test-cal-backend-sexp_c,v 1.6 2013/09/11 09:24:57 ajacoutot Exp $
@


1.6
log
@Fixes for 64-bit time_t. Still a moving target but better than what we
currently have.
@
text
@d1 1
a1 1
$OpenBSD: patch-tests_libedata-cal_test-cal-backend-sexp_c,v 1.5 2013/08/15 16:07:27 ajacoutot Exp $
d3 4
a6 1
https://bugzilla.gnome.org/show_bug.cgi?id=707900
d15 1
a15 1
+		printf ("%s: %" G_GINT64_FORMAT "- %" G_GINT64_FORMAT "\n", query, (long)start, (long)end);
@


1.5
log
@Revert previous on these 3 ports.
kettenis@@ says there is more work involved since we are different from the
others... I have no time to take care of it properly so put back whatever
was there before which seemed to work fine.
@
text
@d1 1
a1 1
$OpenBSD: patch-tests_libedata-cal_test-cal-backend-sexp_c,v 1.3 2012/10/18 13:54:56 ajacoutot Exp $
d3 1
a3 1
XXX remove when we have a 64-bit time_t
d12 1
a12 1
+		printf ("%s: %ld - %ld\n", query, (long)start, (long)end);
@


1.4
log
@Remove these, we have 64-bit time_t now.
@
text
@@


1.3
log
@We are getting fucked by our 32-bits time_t :(
@
text
@d1 1
a1 1
$OpenBSD: patch-tests_libedata-cal_test-cal-backend-sexp_c,v 1.2 2011/12/29 09:23:19 ajacoutot Exp $
@


1.2
log
@Tweak patches to please our time_t.
@
text
@d1 1
a1 1
$OpenBSD: patch-tests_libedata-cal_test-cal-backend-sexp_c,v 1.1 2011/09/21 13:26:03 jasper Exp $
d3 1
a3 1
On OpenBSD, time_t is an int.
d12 1
a12 1
+		printf ("%s: %d - %d\n", query, start, end);
@


1.1
log
@- update to 3.1.92
- hardcode (but with XXX) 3.2 for now
@
text
@d1 6
a6 3
$OpenBSD$
--- tests/libedata-cal/test-cal-backend-sexp.c.orig	Sat Sep 17 09:55:01 2011
+++ tests/libedata-cal/test-cal-backend-sexp.c	Sat Sep 17 09:55:26 2011
d12 1
a12 1
+		 printf ("%s: %ld - %ld\n", query, (long)start, (long)end);
@

