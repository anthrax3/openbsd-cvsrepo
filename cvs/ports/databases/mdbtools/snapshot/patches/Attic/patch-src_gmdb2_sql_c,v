head	1.2;
access;
symbols
	OPENBSD_5_7:1.1.1.1.0.36
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.34
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.32
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.30
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.28
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.26
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.24
	OPENBSD_5_0:1.1.1.1.0.22
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.20
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.18
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.16
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.14
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.12
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.10
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.8
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	mdb:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.03.20.16.07.08;	author czarkoff;	state dead;
branches;
next	1.1;
commitid	T0drc7lLVFtjLGSF;

1.1
date	2006.05.01.09.55.33;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.05.01.09.55.33;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to mdbtools-0.7.2

OK sthen@@
@
text
@--- src/gmdb2/sql.c.orig	Sat Jan 15 06:02:12 2005
+++ src/gmdb2/sql.c	Thu Apr 27 10:18:39 2006
@@@@ -390,6 +390,7 @@@@
 	GType *gtypes;
 	GtkTreeIter iter;
 	GtkTreeViewColumn *column;
+        GtkCellRenderer *renderer;
 	long row, maxrow;
 	/* GdkCursor *watch, *pointer; */
 
@@@@ -449,7 +450,6 @@@@
 
 	gtk_tree_view_set_model(GTK_TREE_VIEW(treeview), GTK_TREE_MODEL(store));
 	
-	GtkCellRenderer *renderer;
 	renderer = gtk_cell_renderer_text_new(); 
 
 	for (i=0;i<sql->num_columns;i++) { 
@@@@ -497,6 +497,12 @@@@
 	GtkWidget *mi, *but, *combo;
 	GladeXML *sqlwin_xml;
 	GValue value = {0, };
+	GtkCellRenderer *renderer;
+	GtkTreeViewColumn *column;
+	GtkWidget *tree;
+	GtkTreeStore *store;
+	GtkWidget *textview;
+	GtkTreeSelection *select;
 
 	/* load the interface */
 	sqlwin_xml = glade_xml_new(GMDB_GLADEDIR "gmdb-sql.glade", NULL, NULL);
@@@@ -570,19 +576,16 @@@@
 		G_CALLBACK (gmdb_sql_execute_cb), sqlwin_xml);
 
 	/* set up treeview, libglade only gives us the empty widget */
-	GtkWidget *tree = glade_xml_get_widget(sqlwin_xml, "sql_treeview");
-	GtkTreeStore *store = gtk_tree_store_new(1, G_TYPE_STRING);
+	tree = glade_xml_get_widget(sqlwin_xml, "sql_treeview");
+	store = gtk_tree_store_new(1, G_TYPE_STRING);
 	gtk_tree_view_set_model(GTK_TREE_VIEW(tree), GTK_TREE_MODEL(store));
 
-	GtkCellRenderer *renderer;
-	GtkTreeViewColumn *column;
 	renderer = gtk_cell_renderer_text_new();
 	column = gtk_tree_view_column_new_with_attributes("Name",
 		renderer, "text", 0, NULL);
 	gtk_tree_view_append_column(GTK_TREE_VIEW (tree), column);
 
-	GtkTreeSelection *select = 
-		gtk_tree_view_get_selection (GTK_TREE_VIEW (tree));
+	select = gtk_tree_view_get_selection (GTK_TREE_VIEW (tree));
 	gtk_tree_selection_set_mode (select, GTK_SELECTION_SINGLE);
 	//g_signal_connect (G_OBJECT (select), "changed",
 		//G_CALLBACK (gmdb_sql_select_cb), sqlwin_xml);
@@@@ -590,7 +593,7 @@@@
 	/* populate first level of tree */
 	gmdb_sql_tree_populate(mdb, sqlwin_xml);
 
-	GtkWidget *textview = glade_xml_get_widget(sqlwin_xml, "sql_textview");
+	textview = glade_xml_get_widget(sqlwin_xml, "sql_textview");
 	src.target = "table";
 	src.flags = 0;
 	src.info = 1;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@read access database files (jet format 3.0 and 4.0)
@
text
@@
