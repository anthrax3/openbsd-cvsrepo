head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.22
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.20
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.18
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.14
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.12
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2012.06.29.16.40.31;	author jeremy;	state Exp;
branches;
next	1.1;

1.1
date	2011.09.07.16.02.40;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update ruby-sqlite3 to 1.3.6.  Add a patch so it continues to work on
rubinius.
@
text
@$OpenBSD: patch-test_test_integration_pending_rb,v 1.1 2011/09/07 16:02:40 jeremy Exp $

Fix hang when running the test suite using rubinius.  skip would be
better but rubinius uses ruby 1.8 stdlib and doesn't support it.

--- test/test_integration_pending.rb.orig	Wed Dec 31 16:00:00 1969
+++ test/test_integration_pending.rb	Tue Jun 26 10:44:55 2012
@@@@ -21,6 +21,7 @@@@ class TC_Integration_Pending < SQLite3::TestCase
 
   def test_busy_handler_outwait
     skip("not working in 1.9") if RUBY_VERSION >= '1.9'
+    return if defined?(RUBY_ENGINE) && RUBY_ENGINE == 'rbx'
 
     busy = Mutex.new
     busy.lock
@


1.1
log
@Update to version 1.3.4.  Take maintainership.  Update regress
tests.
@
text
@d1 1
a1 1
$OpenBSD$
d6 3
a8 3
--- test/test_integration_pending.rb.orig	Wed Sep  7 08:27:23 2011
+++ test/test_integration_pending.rb	Wed Sep  7 08:29:07 2011
@@@@ -21,6 +21,7 @@@@ class TC_Integration_Pending < Test::Unit::TestCase
@

