head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.40
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.38
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.36
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.32
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.34
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.30
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.28
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.26
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.24
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.22
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.20
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.18
	OPENBSD_5_0:1.2.0.16
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.14
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.12
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.10
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.6
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.4
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.1.0.22
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.20
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.18
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.16
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.14
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.12
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.10
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.8
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_3:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2007.12.28.17.11.25;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.25.23.35.06;	author brad;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2003.08.26.00.33.35;	author brad;	state Exp;
branches;
next	;

1.1.4.1
date	2003.08.26.01.03.22;	author brad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@regen with a more recent diff.
Remove extra bogus target that breaks in parallel mode.
@
text
@$OpenBSD: patch-gnats_files_c,v 1.1 2003/08/25 23:35:06 brad Exp $
--- gnats/files.c.orig	Sun Feb 11 22:36:25 2001
+++ gnats/files.c	Fri Dec 28 18:00:24 2007
@@@@ -41,7 +41,7 @@@@ find_submitter (cptr, site)
   if (site == NULL)
     return -1;
 
-  sprintf (path, "%s/gnats-adm/%s", gnats_root, SUBMITTERS);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/%s", gnats_root, SUBMITTERS);
   err = get_adm_record (path, array, site);
 
   if (err == -1) 
@@@@ -87,7 +87,7 @@@@ find_category (cptr, category)
   char **array = (char **) alloca (NUM_CATEGORY_FIELDS * sizeof (char *));
   int err;
 
-  sprintf (path, "%s/gnats-adm/%s", gnats_root, CATEGORIES);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/%s", gnats_root, CATEGORIES);
   err = get_adm_record (path, array, category);
 
   if (err == -1)
@@@@ -143,7 +143,7 @@@@ find_responsible (responsible, person)
 	 we don't end up with garbage.  */
       memset (array, 0, NUM_RESPONSIBLE_FIELDS * sizeof (char *));
 
-      sprintf (path, "%s/gnats-adm/%s", gnats_root, RESPONSIBLE_FILE);
+      snprintf (path, PATH_MAX, "%s/gnats-adm/%s", gnats_root, RESPONSIBLE_FILE);
       err = get_adm_record (path, array, person);
       xfree (path);
       if (err == -1)
@@@@ -177,13 +177,15 @@@@ get_adm_record (fname, ptr, key)
   char line[STR_MAX], temp[STR_MAX];
   char *l, *l2;
   char *keyed;
+  size_t keyedsize;
   int err = -1, keyedlen;
 
   /* append a delimiting ':' to the end of sting to make sure the match
      is fully correct.  */
-  keyed = (char *) alloca (strlen(key) + 2);
-  /* which is slower - strcpy/strcat or sprintf? */
-  sprintf (keyed, "%s:", key);
+  keyedsize = strlen(key) + 2;
+  keyed = (char *) alloca (keyedsize);
+  /* which is slower - strlcpy/strlcat or snprintf? */
+  snprintf (keyed, keyedsize, "%s:", key);
   keyedlen = strlen(keyed); 
 
   fp = fopen (fname,"r");
@@@@ -271,7 +273,7 @@@@ init_responsibles ()
   char *path = (char *) alloca (PATH_MAX);
 
   memset (array, 0, NUM_RESPONSIBLE_FIELDS * sizeof (char *));
-  sprintf (path, "%s/gnats-adm/%s", gnats_root, RESPONSIBLE_FILE);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/%s", gnats_root, RESPONSIBLE_FILE);
   fp = fopen (path, "r");
   if (fp == NULL)
     return 0;
@@@@ -358,7 +360,7 @@@@ init_classes ()
   int  i, nerrs = 0;
 
   memset (array, 0, NUM_CLASS_FIELDS * sizeof (char *));
-  sprintf (path, "%s/gnats-adm/%s", gnats_root, CLASSES);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/%s", gnats_root, CLASSES);
   fp = fopen (path, "r");
 
   if (fp == NULL)
@@@@ -549,11 +551,11 @@@@ get_class_enum_field ()
   line = xmalloc (totlen * sizeof(char)); 
   line[0] = '\0';
   c = class_chain;
-  strcat (line, c->key);
+  strlcat (line, c->key, totlen);
   for (c = c->next; c; c = c->next)
     {
-      strcat (line,  " | ");
-      strcat (line, c->key);
+      strlcat (line,  " | ", totlen);
+      strlcat (line, c->key, totlen);
     }
   return line;
 }
@@@@ -593,7 +595,7 @@@@ init_states ()
   int  i, nerrs = 0;
 
   memset (array, 0, NUM_STATE_FIELDS * sizeof (char *));
-  sprintf (path, "%s/gnats-adm/%s", gnats_root, STATES);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/%s", gnats_root, STATES);
   fp = fopen (path, "r");
 
   if (fp == NULL)
@@@@ -779,11 +781,11 @@@@ get_state_enum_field ()
   char line[STR_MAX];
   line[0] = '\0';
   s = state_chain;
-  strcat (line, s->key);
+  strlcat (line, s->key, sizeof(line));
   for (s = s->next; s; s = s->next)
     {
-      strcat (line,  " | ");
-      strcat (line, s->key);
+      strlcat (line,  " | ", sizeof(line));
+      strlcat (line, s->key, sizeof(line));
     }
   return (strdup (line));
 }
@@@@ -901,7 +903,7 @@@@ get_responsible_addr (full, strict, name)
     {
       address = (char *) xmalloc (STR_MAX);
       if (full)
-	sprintf (address, "%s:%s:%s", r->key, r->fullname, r->alias);
+	snprintf (address, STR_MAX, "%s:%s:%s", r->key, r->fullname, r->alias);
       else
 	{
 	  if (r->alias[0]
@@@@ -909,9 +911,9 @@@@ get_responsible_addr (full, strict, name)
 		 added a space after the colon, we don't accept that as
 		 an address.  */
 	      && isalpha (r->alias[0]))
-	    sprintf (address, "%s", r->alias);
+	    snprintf (address, STR_MAX, "%s", r->alias);
 	  else
-	    sprintf (address, "%s", r->key);
+	    snprintf (address, STR_MAX, "%s", r->key);
 	}
     }
 
@


1.1
log
@Fix some security issues with gnats.

Some additional fixes from millert@@
sprintf -> snprintf
str{cat,cpy} -> strl{cat,cpy}

http://marc.theaimsgroup.com/?l=bugtraq&m=105638591907836&w=2

ok naddy@@
@
text
@d1 3
a3 3
$OpenBSD$
--- gnats/files.c.orig	Sun Feb 11 14:36:25 2001
+++ gnats/files.c	Wed Jul  2 13:23:13 2003
d107 1
a107 1
@@@@ -901,7 +903,7 @@@@ get_responsible_addr (full, strict, name
d116 1
a116 1
@@@@ -909,9 +911,9 @@@@ get_responsible_addr (full, strict, name
@


1.1.4.1
log
@MFC:
Fix some security issues with gnats.

Some additional fixes from millert@@
sprintf -> snprintf
str{cat,cpy} -> strl{cat,cpy}

http://marc.theaimsgroup.com/?l=bugtraq&m=105638591907836&w=2
@
text
@d1 1
a1 1
$OpenBSD: patch-gnats_files_c,v 1.1 2003/08/25 23:35:06 brad Exp $
@


1.1.2.1
log
@MFC:
Fix some security issues with gnats.

Some additional fixes from millert@@
sprintf -> snprintf
str{cat,cpy} -> strl{cat,cpy}

http://marc.theaimsgroup.com/?l=bugtraq&m=105638591907836&w=2
@
text
@d1 1
a1 1
$OpenBSD: patch-gnats_files_c,v 1.1 2003/08/25 23:35:06 brad Exp $
@

