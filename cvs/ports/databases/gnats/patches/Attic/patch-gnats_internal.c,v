head	1.6;
access;
symbols
	OPENBSD_4_9:1.5.0.14
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.12
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.10
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.6
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	dugsong_2000-Jan-12:1.1.1.1
	dugsong:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2011.07.08.11.32.17;	author jasper;	state dead;
branches;
next	1.5;

1.5
date	2007.12.28.17.11.25;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.25.23.33.56;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.09.16.16.02;	author millert;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2002.05.09.03.53.45;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.12.17.14.51;	author dugsong;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.01.12.17.14.51;	author dugsong;	state Exp;
branches;
next	;

1.3.2.1
date	2003.08.26.01.03.22;	author brad;	state Exp;
branches;
next	;

1.3.4.1
date	2003.08.26.00.33.35;	author brad;	state Exp;
branches;
next	;


desc
@@


1.6
log
@- fix patch names, no binary change
@
text
@$OpenBSD: patch-gnats_internal.c,v 1.5 2007/12/28 17:11:25 espie Exp $
--- gnats/internal.c.orig	Wed Mar  3 01:18:53 1999
+++ gnats/internal.c	Fri Dec 28 18:00:24 2007
@@@@ -32,28 +32,25 @@@@ write_index (index_start)
 
   FILE *fp;
   char *path, *workfile;
-#ifndef HAVE_MKTEMP
-  char name[L_tmpnam];
-#endif
+  int fd;
   Index *i;
+  size_t len;
 
-#ifdef HAVE_MKTEMP
-  workfile = (char *) xmalloc (strlen (gnats_root) +
-			       strlen ("/gnats-adm/indXXXXXX") +
-			       1 /* null */ );
-  sprintf (workfile, "%s/gnats-adm/indXXXXXX", gnats_root);
-  mktemp (workfile);
-#else
-  workfile = (char *) xmalloc (L_tmpnam);
-  tmpnam (name);
-  strcpy (workfile, name);
-#endif
+  len = strlen (gnats_root) + strlen ("/gnats-adm/indXXXXXX") + 1 /* null */;
+  workfile = (char *) xmalloc (len);
+  snprintf (workfile, len, "%s/gnats-adm/indXXXXXX", gnats_root);
 
-  fp = fopen (workfile, "w");
-  if (fp == NULL)
+  if ((fd = mkstemp (workfile)) < 0) {
+	  fprintf (stderr, "%s: can't open the temporary file %s\n",
+		   program_name, workfile);
+	  xfree (workfile);
+	  return;
+  }
+  if ((fp = fdopen (fd, "w")) == NULL)
     {
       fprintf (stderr, "%s: can't open the temporary file %s\n",
                program_name, workfile);
+      close(fd);
       xfree (workfile);
       return;
     }
@@@@ -83,15 +80,14 @@@@ write_index (index_start)
 #endif
     }
 
+  fchmod (fileno(fp), 0644);
   fclose (fp);
 
   block_signals ();
 
-  path = (char *) xmalloc (strlen (gnats_root) +
-			   strlen ("/gnats-adm/") +
-			   strlen (INDEX) +
-			   1 /* null*/ );
-  sprintf (path, "%s/gnats-adm/%s", gnats_root, INDEX);
+  len = strlen (gnats_root) + strlen ("/gnats-adm/") + strlen (INDEX) + 1;
+  path = (char *) xmalloc (len);
+  snprintf (path, len, "%s/gnats-adm/%s", gnats_root, INDEX);
 
   if ((rename (workfile, path)) < 0)
     {
@@@@ -124,14 +120,14 @@@@ add_to_index ()
 
   block_signals ();
 
-  sprintf (path, "%s/gnats-adm/%s", gnats_root, INDEX); 
+  snprintf (path, PATH_MAX, "%s/gnats-adm/%s", gnats_root, INDEX); 
 
   fp = fopen (path, "a+");
   if (fp == NULL) 
     punt (1, "Can't append to the GNATS index file (%s).", path);
 
   memset ((void *) buf, 0, sizeof (STR_MAXLONG));
-  create_index_entry (buf);
+  create_index_entry (buf, STR_MAXLONG);
   fputs (buf, fp);
 
   fclose (fp);
@@@@ -227,7 +223,7 @@@@ is_gnats_locked ()
 {
   char *path = (char *) alloca (PATH_MAX);
   struct stat buf;
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
   return stat (path, &buf) == 0;
 }
 
@@@@ -238,7 +234,7 @@@@ lock_gnats ()
   struct stat buf;
   int count;
 
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
 
 #define MAXWAIT 10
 #define GRANULARITY 1
@@@@ -287,7 +283,7 @@@@ unlock_gnats ()
   char *path = (char *) alloca (PATH_MAX);
   struct stat buf;
 
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
   
   if (stat (path, &buf) < 0)
     {
@@@@ -325,7 +321,7 @@@@ gnats_locked ()
   char *path = (char *) xmalloc (PATH_MAX);
   struct stat buf;
 
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
   
   if (stat (path, &buf) < 0)
     return 0;
@@@@ -460,7 +456,8 @@@@ get_lock_path (fname)
     return NULL;
 
   path = (char *) xmalloc (PATH_MAX);
-  sprintf (path, "%s/gnats-adm/locks/%s.lock", gnats_root, get_prid_from_path (fname));
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/%s.lock", gnats_root,
+	    get_prid_from_path (fname));
 
   return path;
 }
@


1.5
log
@regen with a more recent diff.
Remove extra bogus target that breaks in parallel mode.
@
text
@d1 1
a1 1
$OpenBSD: patch-gnats_internal.c,v 1.4 2003/08/25 23:33:56 brad Exp $
@


1.4
log
@Fix some security issues with gnats.

Some additional fixes from millert@@
sprintf -> snprintf
str{cat,cpy} -> strl{cat,cpy}

http://marc.theaimsgroup.com/?l=bugtraq&m=105638591907836&w=2

ok naddy@@
@
text
@d1 3
a3 3
$OpenBSD: patch-gnats_internal.c,v 1.3 2002/05/09 16:16:02 millert Exp $
--- gnats/internal.c.orig	Tue Mar  2 17:18:53 1999
+++ gnats/internal.c	Wed Jul  2 13:37:01 2003
a25 3
-
-  fp = fopen (workfile, "w");
-  if (fp == NULL)
d29 3
a31 1
+
@


1.3
log
@Update to gnats-3.113.1 and add OpenBSD tags on the patchs; dugsong@@ OK
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 1
+++ gnats/internal.c	Wed May  8 21:41:29 2002
d13 1
d16 4
a19 4
   workfile = (char *) xmalloc (strlen (gnats_root) +
 			       strlen ("/gnats-adm/indXXXXXX") +
 			       1 /* null */ );
   sprintf (workfile, "%s/gnats-adm/indXXXXXX", gnats_root);
d26 1
a26 1
 
d29 4
d47 1
a47 1
@@@@ -83,6 +80,7 @@@@ write_index (index_start)
d55 75
@


1.3.2.1
log
@MFC:
Fix some security issues with gnats.

Some additional fixes from millert@@
sprintf -> snprintf
str{cat,cpy} -> strl{cat,cpy}

http://marc.theaimsgroup.com/?l=bugtraq&m=105638591907836&w=2
@
text
@d1 1
a1 1
$OpenBSD: patch-gnats_internal.c,v 1.4 2003/08/25 23:33:56 brad Exp $
d3 1
a3 1
+++ gnats/internal.c	Wed Jul  2 13:37:01 2003
a12 1
+  size_t len;
d15 4
a18 4
-  workfile = (char *) xmalloc (strlen (gnats_root) +
-			       strlen ("/gnats-adm/indXXXXXX") +
-			       1 /* null */ );
-  sprintf (workfile, "%s/gnats-adm/indXXXXXX", gnats_root);
d25 1
a25 1
-
a27 4
+  len = strlen (gnats_root) + strlen ("/gnats-adm/indXXXXXX") + 1 /* null */;
+  workfile = (char *) xmalloc (len);
+  snprintf (workfile, len, "%s/gnats-adm/indXXXXXX", gnats_root);
+
d42 1
a42 1
@@@@ -83,15 +80,14 @@@@ write_index (index_start)
a49 75
 
-  path = (char *) xmalloc (strlen (gnats_root) +
-			   strlen ("/gnats-adm/") +
-			   strlen (INDEX) +
-			   1 /* null*/ );
-  sprintf (path, "%s/gnats-adm/%s", gnats_root, INDEX);
+  len = strlen (gnats_root) + strlen ("/gnats-adm/") + strlen (INDEX) + 1;
+  path = (char *) xmalloc (len);
+  snprintf (path, len, "%s/gnats-adm/%s", gnats_root, INDEX);
 
   if ((rename (workfile, path)) < 0)
     {
@@@@ -124,14 +120,14 @@@@ add_to_index ()
 
   block_signals ();
 
-  sprintf (path, "%s/gnats-adm/%s", gnats_root, INDEX); 
+  snprintf (path, PATH_MAX, "%s/gnats-adm/%s", gnats_root, INDEX); 
 
   fp = fopen (path, "a+");
   if (fp == NULL) 
     punt (1, "Can't append to the GNATS index file (%s).", path);
 
   memset ((void *) buf, 0, sizeof (STR_MAXLONG));
-  create_index_entry (buf);
+  create_index_entry (buf, STR_MAXLONG);
   fputs (buf, fp);
 
   fclose (fp);
@@@@ -227,7 +223,7 @@@@ is_gnats_locked ()
 {
   char *path = (char *) alloca (PATH_MAX);
   struct stat buf;
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
   return stat (path, &buf) == 0;
 }
 
@@@@ -238,7 +234,7 @@@@ lock_gnats ()
   struct stat buf;
   int count;
 
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
 
 #define MAXWAIT 10
 #define GRANULARITY 1
@@@@ -287,7 +283,7 @@@@ unlock_gnats ()
   char *path = (char *) alloca (PATH_MAX);
   struct stat buf;
 
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
   
   if (stat (path, &buf) < 0)
     {
@@@@ -325,7 +321,7 @@@@ gnats_locked ()
   char *path = (char *) xmalloc (PATH_MAX);
   struct stat buf;
 
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
   
   if (stat (path, &buf) < 0)
     return 0;
@@@@ -460,7 +456,8 @@@@ get_lock_path (fname)
     return NULL;
 
   path = (char *) xmalloc (PATH_MAX);
-  sprintf (path, "%s/gnats-adm/locks/%s.lock", gnats_root, get_prid_from_path (fname));
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/%s.lock", gnats_root,
+	    get_prid_from_path (fname));
 
   return path;
 }
@


1.3.4.1
log
@MFC:
Fix some security issues with gnats.

Some additional fixes from millert@@
sprintf -> snprintf
str{cat,cpy} -> strl{cat,cpy}

http://marc.theaimsgroup.com/?l=bugtraq&m=105638591907836&w=2
@
text
@d1 1
a1 1
$OpenBSD: patch-gnats_internal.c,v 1.4 2003/08/25 23:33:56 brad Exp $
d3 1
a3 1
+++ gnats/internal.c	Wed Jul  2 13:37:01 2003
a12 1
+  size_t len;
d15 4
a18 4
-  workfile = (char *) xmalloc (strlen (gnats_root) +
-			       strlen ("/gnats-adm/indXXXXXX") +
-			       1 /* null */ );
-  sprintf (workfile, "%s/gnats-adm/indXXXXXX", gnats_root);
d25 1
a25 1
-
a27 4
+  len = strlen (gnats_root) + strlen ("/gnats-adm/indXXXXXX") + 1 /* null */;
+  workfile = (char *) xmalloc (len);
+  snprintf (workfile, len, "%s/gnats-adm/indXXXXXX", gnats_root);
+
d42 1
a42 1
@@@@ -83,15 +80,14 @@@@ write_index (index_start)
a49 75
 
-  path = (char *) xmalloc (strlen (gnats_root) +
-			   strlen ("/gnats-adm/") +
-			   strlen (INDEX) +
-			   1 /* null*/ );
-  sprintf (path, "%s/gnats-adm/%s", gnats_root, INDEX);
+  len = strlen (gnats_root) + strlen ("/gnats-adm/") + strlen (INDEX) + 1;
+  path = (char *) xmalloc (len);
+  snprintf (path, len, "%s/gnats-adm/%s", gnats_root, INDEX);
 
   if ((rename (workfile, path)) < 0)
     {
@@@@ -124,14 +120,14 @@@@ add_to_index ()
 
   block_signals ();
 
-  sprintf (path, "%s/gnats-adm/%s", gnats_root, INDEX); 
+  snprintf (path, PATH_MAX, "%s/gnats-adm/%s", gnats_root, INDEX); 
 
   fp = fopen (path, "a+");
   if (fp == NULL) 
     punt (1, "Can't append to the GNATS index file (%s).", path);
 
   memset ((void *) buf, 0, sizeof (STR_MAXLONG));
-  create_index_entry (buf);
+  create_index_entry (buf, STR_MAXLONG);
   fputs (buf, fp);
 
   fclose (fp);
@@@@ -227,7 +223,7 @@@@ is_gnats_locked ()
 {
   char *path = (char *) alloca (PATH_MAX);
   struct stat buf;
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
   return stat (path, &buf) == 0;
 }
 
@@@@ -238,7 +234,7 @@@@ lock_gnats ()
   struct stat buf;
   int count;
 
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
 
 #define MAXWAIT 10
 #define GRANULARITY 1
@@@@ -287,7 +283,7 @@@@ unlock_gnats ()
   char *path = (char *) alloca (PATH_MAX);
   struct stat buf;
 
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
   
   if (stat (path, &buf) < 0)
     {
@@@@ -325,7 +321,7 @@@@ gnats_locked ()
   char *path = (char *) xmalloc (PATH_MAX);
   struct stat buf;
 
-  sprintf (path, "%s/gnats-adm/gnats.lock", gnats_root);
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/gnats.lock", gnats_root);
   
   if (stat (path, &buf) < 0)
     return 0;
@@@@ -460,7 +456,8 @@@@ get_lock_path (fname)
     return NULL;
 
   path = (char *) xmalloc (PATH_MAX);
-  sprintf (path, "%s/gnats-adm/locks/%s.lock", gnats_root, get_prid_from_path (fname));
+  snprintf (path, PATH_MAX, "%s/gnats-adm/locks/%s.lock", gnats_root,
+	    get_prid_from_path (fname));
 
   return path;
 }
@


1.2
log
@mkstemp() makes temp files mode 0600 so before renaming them to the
real name, fchmod to 0644.  Otherwise we end up with queue files and
the index file mode 0600 which is not the intention.

The original GNATS code makes queue files mode 0664 which seems excessively
open; 0644 should be fine.
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
--- gnats/internal.c.orig	Tue Mar  2 19:18:53 1999
+++ gnats/internal.c	Thu Jan 11 10:56:08 2001
@@@@ -32,28 +32,25 @@@@
d41 8
@


1.1.1.1
log
@GNATS, the GNU Problem Report Management System. FLAVOR=www adds the gnatsweb CGI interface.
@
text
@@
