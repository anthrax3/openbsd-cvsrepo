head	1.5;
access;
symbols
	OPENBSD_4_9:1.4.0.32
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.30
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.28
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.26
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.24
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_TRACKING_SWITCH:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	dugsong_2000-Jan-12:1.1.1.1
	dugsong:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2011.07.08.11.32.17;	author jasper;	state dead;
branches;
next	1.4;

1.4
date	2003.08.25.23.33.56;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.09.16.16.02;	author millert;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2002.05.09.03.53.45;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.12.17.14.52;	author dugsong;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.01.12.17.14.52;	author dugsong;	state Exp;
branches;
next	;

1.3.2.1
date	2003.08.26.01.03.22;	author brad;	state Exp;
branches;
next	;

1.3.4.1
date	2003.08.26.00.33.35;	author brad;	state Exp;
branches;
next	;


desc
@@


1.5
log
@- fix patch names, no binary change
@
text
@$OpenBSD: patch-gnats_queue-pr.c,v 1.4 2003/08/25 23:33:56 brad Exp $
--- gnats/queue-pr.c.orig	Wed Nov 25 07:15:20 1998
+++ gnats/queue-pr.c	Wed Jul  2 13:37:12 2003
@@@@ -78,9 +78,11 @@@@ fork_gnats (filename)
 
   int pid; /* pid_t */
   int status;
+  size_t len;
 
-  safe_env[0] = (char *) xmalloc (5 + strlen (gnats_user) + 1);
-  sprintf (safe_env[0], "USER=%s", gnats_user);
+  len = 5 + strlen (gnats_user) + 1;
+  safe_env[0] = (char *) xmalloc (len);
+  snprintf (safe_env[0], len, "USER=%s", gnats_user);
 
   errno = 0;
   pid = fork();
@@@@ -91,10 +93,11 @@@@ fork_gnats (filename)
     {
       char *gnats_bin;
       int fd;
+      size_t len = strlen (bindir) + 9;
 
-      gnats_bin = (char *) xmalloc (strlen (bindir) + 9);
-      strcpy (gnats_bin, bindir);
-      strcat (gnats_bin, "/file-pr");
+      gnats_bin = (char *) xmalloc (len);
+      strlcpy (gnats_bin, bindir, len);
+      strlcat (gnats_bin, "/file-pr", len);
 
       if (! flag_debug)
 	{
@@@@ -114,14 +117,14 @@@@ fork_gnats (filename)
       if (flag_debug)
 	{
 	  if (execle (gnats_bin, "file-pr", "-f", filename,
-		      "-D", "-d", gnats_root, NULL, safe_env) < 0)
+		      "-D", "-d", gnats_root, (char *)NULL, safe_env) < 0)
 	    punt (1, "%s: execle of gnats failed: %s\n", program_name,
 		  strerror (errno));
 	}
       else
 	{
 	  if (execle (gnats_bin, "file-pr", "-f", filename,
-		      "-d", gnats_root, NULL, safe_env) < 0)
+		      "-d", gnats_root, (char *)NULL, safe_env) < 0)
 	    punt (1, "%s: execle of gnats failed: %s\n", program_name,
 		  strerror (errno));
 	}
@@@@ -204,9 +207,10 @@@@ run_gnats ()
 	}
       else if (child_status == 2)
 	{
-	  char *name2 = xmalloc (strlen (files[i].name) + 2);
-	  strcpy (name2, ".");
-	  strcat (name2, files[i].name);
+	  size_t len = strlen (files[i].name) + 2;
+	  char *name2 = xmalloc (len);
+	  strlcpy (name2, ".", len);
+	  strlcat (name2, files[i].name, len);
 	  rename (files[i].name, name2);
 	  punt (0, "renamed `%s' to `%s' pending human intervention.\n",
 		files[i].name, name2);
@@@@ -226,13 +230,11 @@@@ drop_msg ()
 {
   int fd[2];
   char *tmpdir;
-  char *bug_file = (char *) xmalloc (PATH_MAX);
+  char bug_file[MAXPATHLEN];
   int r; /* XXX ssize_t */
   char *buf = (char *) xmalloc (MAXBSIZE);
   char *base, *new_name;
-#ifndef HAVE_MKTEMP
-  char name[L_tmpnam];
-#endif
+  size_t len;
 
   if (queue_file)
     {
@@@@ -247,18 +249,13 @@@@ drop_msg ()
   tmpdir = getenv ("TMPDIR");
   if (tmpdir == NULL)
     tmpdir = "/tmp"; /* FIXME */
-#ifdef HAVE_MKTEMP
-  sprintf (bug_file, "%s/gnatsXXXXXX", tmpdir);
-  mktemp (bug_file);
-#else
-  tmpnam (name);
-  strcpy (bug_file, name);
-#endif
+
+  snprintf (bug_file, sizeof(bug_file), "%s/gnatsXXXXXX", tmpdir);
   
-  fd[1] = open (bug_file, O_WRONLY|O_CREAT, 0664);
-  if (fd[1] < 0)
+  if ((fd[1] = mkstemp (bug_file)) < 0)
     punt (1, "%s: can't open queue file %s for writing: %s\n",
 	  program_name, bug_file, strerror (errno));
+  fchmod (fd[1], 0644);
   
   while ((r = read (fd[0], buf, MAXBSIZE)) > 0)
     if (write (fd[1], buf, r) < 0)
@@@@ -283,8 +280,9 @@@@ drop_msg ()
 
   errno = 0;
   base = basename (bug_file);
-  new_name = (char *) xmalloc (strlen (queue_dir) + 1 + strlen (bug_file) + 1);
-  sprintf (new_name, "%s/%s", queue_dir, base);
+  len = strlen (queue_dir) + 1 + strlen (bug_file) + 1;
+  new_name = (char *) xmalloc (len);
+  snprintf (new_name, len, "%s/%s", queue_dir, base);
   if (rename (bug_file, new_name) < 0)
     {
       if (errno != EXDEV)
@@@@ -308,6 +306,7 @@@@ main (argc, argv)
      char **argv;
 {
   int optc;
+  size_t len;
 
   program_name = basename (argv[0]);
 
@@@@ -372,10 +371,9 @@@@ main (argc, argv)
 	       program_name);
       exit (1);
     }
-  queue_dir = (char *) xmalloc (strlen (gnats_root)
-				+ strlen ("/gnats-queue")
-				+ 1 /* null char */);
-  sprintf (queue_dir, "%s/gnats-queue", gnats_root);
+  len = strlen (gnats_root) + strlen ("/gnats-queue") + 1 /* null char */;
+  queue_dir = (char *) xmalloc (len);
+  snprintf (queue_dir, len, "%s/gnats-queue", gnats_root);
 
   if (queue_msg)
     drop_msg ();
@


1.4
log
@Fix some security issues with gnats.

Some additional fixes from millert@@
sprintf -> snprintf
str{cat,cpy} -> strl{cat,cpy}

http://marc.theaimsgroup.com/?l=bugtraq&m=105638591907836&w=2

ok naddy@@
@
text
@d1 1
a1 1
$OpenBSD: patch-gnats_queue-pr.c,v 1.3 2002/05/09 16:16:02 millert Exp $
@


1.3
log
@Update to gnats-3.113.1 and add OpenBSD tags on the patchs; dugsong@@ OK
@
text
@d1 1
a1 1
$OpenBSD$
d3 62
a64 2
+++ gnats/queue-pr.c	Wed May  8 21:44:36 2002
@@@@ -226,13 +226,10 @@@@ drop_msg ()
d76 1
d80 1
a80 1
@@@@ -247,18 +244,13 @@@@ drop_msg ()
d103 34
@


1.3.2.1
log
@MFC:
Fix some security issues with gnats.

Some additional fixes from millert@@
sprintf -> snprintf
str{cat,cpy} -> strl{cat,cpy}

http://marc.theaimsgroup.com/?l=bugtraq&m=105638591907836&w=2
@
text
@d1 1
a1 1
$OpenBSD: patch-gnats_queue-pr.c,v 1.4 2003/08/25 23:33:56 brad Exp $
d3 2
a4 62
+++ gnats/queue-pr.c	Wed Jul  2 13:37:12 2003
@@@@ -78,9 +78,11 @@@@ fork_gnats (filename)
 
   int pid; /* pid_t */
   int status;
+  size_t len;
 
-  safe_env[0] = (char *) xmalloc (5 + strlen (gnats_user) + 1);
-  sprintf (safe_env[0], "USER=%s", gnats_user);
+  len = 5 + strlen (gnats_user) + 1;
+  safe_env[0] = (char *) xmalloc (len);
+  snprintf (safe_env[0], len, "USER=%s", gnats_user);
 
   errno = 0;
   pid = fork();
@@@@ -91,10 +93,11 @@@@ fork_gnats (filename)
     {
       char *gnats_bin;
       int fd;
+      size_t len = strlen (bindir) + 9;
 
-      gnats_bin = (char *) xmalloc (strlen (bindir) + 9);
-      strcpy (gnats_bin, bindir);
-      strcat (gnats_bin, "/file-pr");
+      gnats_bin = (char *) xmalloc (len);
+      strlcpy (gnats_bin, bindir, len);
+      strlcat (gnats_bin, "/file-pr", len);
 
       if (! flag_debug)
 	{
@@@@ -114,14 +117,14 @@@@ fork_gnats (filename)
       if (flag_debug)
 	{
 	  if (execle (gnats_bin, "file-pr", "-f", filename,
-		      "-D", "-d", gnats_root, NULL, safe_env) < 0)
+		      "-D", "-d", gnats_root, (char *)NULL, safe_env) < 0)
 	    punt (1, "%s: execle of gnats failed: %s\n", program_name,
 		  strerror (errno));
 	}
       else
 	{
 	  if (execle (gnats_bin, "file-pr", "-f", filename,
-		      "-d", gnats_root, NULL, safe_env) < 0)
+		      "-d", gnats_root, (char *)NULL, safe_env) < 0)
 	    punt (1, "%s: execle of gnats failed: %s\n", program_name,
 		  strerror (errno));
 	}
@@@@ -204,9 +207,10 @@@@ run_gnats ()
 	}
       else if (child_status == 2)
 	{
-	  char *name2 = xmalloc (strlen (files[i].name) + 2);
-	  strcpy (name2, ".");
-	  strcat (name2, files[i].name);
+	  size_t len = strlen (files[i].name) + 2;
+	  char *name2 = xmalloc (len);
+	  strlcpy (name2, ".", len);
+	  strlcat (name2, files[i].name, len);
 	  rename (files[i].name, name2);
 	  punt (0, "renamed `%s' to `%s' pending human intervention.\n",
 		files[i].name, name2);
@@@@ -226,13 +230,11 @@@@ drop_msg ()
a15 1
+  size_t len;
d19 1
a19 1
@@@@ -247,18 +249,13 @@@@ drop_msg ()
a41 34
@@@@ -283,8 +280,9 @@@@ drop_msg ()
 
   errno = 0;
   base = basename (bug_file);
-  new_name = (char *) xmalloc (strlen (queue_dir) + 1 + strlen (bug_file) + 1);
-  sprintf (new_name, "%s/%s", queue_dir, base);
+  len = strlen (queue_dir) + 1 + strlen (bug_file) + 1;
+  new_name = (char *) xmalloc (len);
+  snprintf (new_name, len, "%s/%s", queue_dir, base);
   if (rename (bug_file, new_name) < 0)
     {
       if (errno != EXDEV)
@@@@ -308,6 +306,7 @@@@ main (argc, argv)
      char **argv;
 {
   int optc;
+  size_t len;
 
   program_name = basename (argv[0]);
 
@@@@ -372,10 +371,9 @@@@ main (argc, argv)
 	       program_name);
       exit (1);
     }
-  queue_dir = (char *) xmalloc (strlen (gnats_root)
-				+ strlen ("/gnats-queue")
-				+ 1 /* null char */);
-  sprintf (queue_dir, "%s/gnats-queue", gnats_root);
+  len = strlen (gnats_root) + strlen ("/gnats-queue") + 1 /* null char */;
+  queue_dir = (char *) xmalloc (len);
+  snprintf (queue_dir, len, "%s/gnats-queue", gnats_root);
 
   if (queue_msg)
     drop_msg ();
@


1.3.4.1
log
@MFC:
Fix some security issues with gnats.

Some additional fixes from millert@@
sprintf -> snprintf
str{cat,cpy} -> strl{cat,cpy}

http://marc.theaimsgroup.com/?l=bugtraq&m=105638591907836&w=2
@
text
@d1 1
a1 1
$OpenBSD: patch-gnats_queue-pr.c,v 1.4 2003/08/25 23:33:56 brad Exp $
d3 2
a4 62
+++ gnats/queue-pr.c	Wed Jul  2 13:37:12 2003
@@@@ -78,9 +78,11 @@@@ fork_gnats (filename)
 
   int pid; /* pid_t */
   int status;
+  size_t len;
 
-  safe_env[0] = (char *) xmalloc (5 + strlen (gnats_user) + 1);
-  sprintf (safe_env[0], "USER=%s", gnats_user);
+  len = 5 + strlen (gnats_user) + 1;
+  safe_env[0] = (char *) xmalloc (len);
+  snprintf (safe_env[0], len, "USER=%s", gnats_user);
 
   errno = 0;
   pid = fork();
@@@@ -91,10 +93,11 @@@@ fork_gnats (filename)
     {
       char *gnats_bin;
       int fd;
+      size_t len = strlen (bindir) + 9;
 
-      gnats_bin = (char *) xmalloc (strlen (bindir) + 9);
-      strcpy (gnats_bin, bindir);
-      strcat (gnats_bin, "/file-pr");
+      gnats_bin = (char *) xmalloc (len);
+      strlcpy (gnats_bin, bindir, len);
+      strlcat (gnats_bin, "/file-pr", len);
 
       if (! flag_debug)
 	{
@@@@ -114,14 +117,14 @@@@ fork_gnats (filename)
       if (flag_debug)
 	{
 	  if (execle (gnats_bin, "file-pr", "-f", filename,
-		      "-D", "-d", gnats_root, NULL, safe_env) < 0)
+		      "-D", "-d", gnats_root, (char *)NULL, safe_env) < 0)
 	    punt (1, "%s: execle of gnats failed: %s\n", program_name,
 		  strerror (errno));
 	}
       else
 	{
 	  if (execle (gnats_bin, "file-pr", "-f", filename,
-		      "-d", gnats_root, NULL, safe_env) < 0)
+		      "-d", gnats_root, (char *)NULL, safe_env) < 0)
 	    punt (1, "%s: execle of gnats failed: %s\n", program_name,
 		  strerror (errno));
 	}
@@@@ -204,9 +207,10 @@@@ run_gnats ()
 	}
       else if (child_status == 2)
 	{
-	  char *name2 = xmalloc (strlen (files[i].name) + 2);
-	  strcpy (name2, ".");
-	  strcat (name2, files[i].name);
+	  size_t len = strlen (files[i].name) + 2;
+	  char *name2 = xmalloc (len);
+	  strlcpy (name2, ".", len);
+	  strlcat (name2, files[i].name, len);
 	  rename (files[i].name, name2);
 	  punt (0, "renamed `%s' to `%s' pending human intervention.\n",
 		files[i].name, name2);
@@@@ -226,13 +230,11 @@@@ drop_msg ()
a15 1
+  size_t len;
d19 1
a19 1
@@@@ -247,18 +249,13 @@@@ drop_msg ()
a41 34
@@@@ -283,8 +280,9 @@@@ drop_msg ()
 
   errno = 0;
   base = basename (bug_file);
-  new_name = (char *) xmalloc (strlen (queue_dir) + 1 + strlen (bug_file) + 1);
-  sprintf (new_name, "%s/%s", queue_dir, base);
+  len = strlen (queue_dir) + 1 + strlen (bug_file) + 1;
+  new_name = (char *) xmalloc (len);
+  snprintf (new_name, len, "%s/%s", queue_dir, base);
   if (rename (bug_file, new_name) < 0)
     {
       if (errno != EXDEV)
@@@@ -308,6 +306,7 @@@@ main (argc, argv)
      char **argv;
 {
   int optc;
+  size_t len;
 
   program_name = basename (argv[0]);
 
@@@@ -372,10 +371,9 @@@@ main (argc, argv)
 	       program_name);
       exit (1);
     }
-  queue_dir = (char *) xmalloc (strlen (gnats_root)
-				+ strlen ("/gnats-queue")
-				+ 1 /* null char */);
-  sprintf (queue_dir, "%s/gnats-queue", gnats_root);
+  len = strlen (gnats_root) + strlen ("/gnats-queue") + 1 /* null char */;
+  queue_dir = (char *) xmalloc (len);
+  snprintf (queue_dir, len, "%s/gnats-queue", gnats_root);
 
   if (queue_msg)
     drop_msg ();
@


1.2
log
@mkstemp() makes temp files mode 0600 so before renaming them to the
real name, fchmod to 0644.  Otherwise we end up with queue files and
the index file mode 0600 which is not the intention.

The original GNATS code makes queue files mode 0664 which seems excessively
open; 0644 should be fine.
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
--- gnats/queue-pr.c.orig	Wed Nov 25 09:15:20 1998
+++ gnats/queue-pr.c	Thu Jan 11 11:04:37 2001
@@@@ -226,13 +226,10 @@@@
d18 1
a18 1
@@@@ -247,16 +244,10 @@@@
d37 1
d39 2
@


1.1.1.1
log
@GNATS, the GNU Problem Report Management System. FLAVOR=www adds the gnatsweb CGI interface.
@
text
@@
