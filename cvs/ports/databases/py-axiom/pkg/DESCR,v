head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.34
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.30
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.32
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.28
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.26
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.24
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.22
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.20
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.18
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.16
	OPENBSD_5_0:1.1.1.1.0.14
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.12
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.10
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.8
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.6
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.4
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.2
	OPENBSD_4_4_BASE:1.1.1.1
	eric_2008-May-03:1.1.1.1
	eric:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2008.05.03.12.40.49;	author eric;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.05.03.12.40.49;	author eric;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@Axiom is an object database, or alternatively, an object-relational
mapper.  Its primary goal is to provide an object-oriented layer with
what we consider to be the key aspects of OO, i.e. polymorphism and
message dispatch, without hindering the power of an RDBMS. It is
designed to "feel pythonic", without encouraging the typical ORM
behavior such as potato programming. 

Axiom provides a full interface to the database, which strongly
suggests that you do not write any SQL of your own. Metaprogramming is
difficult and dangerous (as many, many SQL injection attacks amply
demonstrate). Writing your own SQL is still possible, however, and
Axiom does have several methods which return fragments of generated
schema if you wish to use them in your own queries. 
@


1.1.1.1
log
@Axiom is an object database, or alternatively, an object-relational
mapper.  Its primary goal is to provide an object-oriented layer with
what we consider to be the key aspects of OO, i.e. polymorphism and
message dispatch, without hindering the power of an RDBMS. It is
designed to "feel pythonic", without encouraging the typical ORM
behavior such as potato programming. 

Axiom provides a full interface to the database, which strongly
suggests that you do not write any SQL of your own. Metaprogramming is
difficult and dangerous (as many, many SQL injection attacks amply
demonstrate). Writing your own SQL is still possible, however, and
Axiom does have several methods which return fragments of generated
schema if you wish to use them in your own queries. 

ok martynas@@
@
text
@@
