head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.20
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.18
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.12
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.14
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.10
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	ajacoutot_20120829:1.1.1.1
	ajacoutot:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2012.08.29.14.32.51;	author ajacoutot;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.08.29.14.32.51;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- Makefile.in.orig	Wed Aug 29 08:51:46 2012
+++ Makefile.in	Wed Aug 29 08:57:25 2012
@@@@ -1029,23 +1029,15 @@@@ libkyotocabinet.a : $(LIBOBJFILES)
 	$(AR) $(ARFLAGS) $@@ $(LIBOBJFILES)
 
 
-libkyotocabinet.so.$(LIBVER).$(LIBREV).0 : $(LIBOBJFILES)
+libkyotocabinet.so.${LIBkyotocabinet_VERSION} : $(LIBOBJFILES)
 	if uname -a | egrep -i 'SunOS' > /dev/null ; \
 	  then \
-	    $(CXX) $(CXXFLAGS) -shared -Wl,-G,-h,libkyotocabinet.so.$(LIBVER) -o $@@ \
+	    $(CXX) $(CXXFLAGS) -shared -Wl,-G,-h,libkyotocabinet.so.${LIBkyotocabinet_VERSION} -o $@@ \
 	      $(LIBOBJFILES) $(LDFLAGS) $(LIBS) ; \
 	  else \
-	    $(CXX) $(CXXFLAGS) -shared -Wl,-soname,libkyotocabinet.so.$(LIBVER) -o $@@ \
+	    $(CXX) $(CXXFLAGS) -shared -Wl,-soname,libkyotocabinet.so.${LIBkyotocabinet_VERSION} -o $@@ \
 	      $(LIBOBJFILES) $(LDFLAGS) $(LIBS) ; \
 	  fi
-
-
-libkyotocabinet.so.$(LIBVER) : libkyotocabinet.so.$(LIBVER).$(LIBREV).0
-	ln -f -s libkyotocabinet.so.$(LIBVER).$(LIBREV).0 $@@
-
-
-libkyotocabinet.so : libkyotocabinet.so.$(LIBVER).$(LIBREV).0
-	ln -f -s libkyotocabinet.so.$(LIBVER).$(LIBREV).0 $@@
 
 
 libkyotocabinet.$(LIBVER).$(LIBREV).0.dylib : $(LIBOBJFILES)
@


1.1.1.1
log
@Import kyotocabinet-1.2.76.

Kyoto Cabinet is a library of routines for managing a database. The
database is a simple data file containing records, each is a pair of a
key and a value. Every key and value is serial bytes with variable
length. Both binary data and character string can be used as a key and a
value. Each key must be unique within a database. There is neither
concept of data tables nor data types. Records are organized in hash
table or B+ tree.

Available FLAVOR:
        optimized - build with optimizations for the local CPU


ok robert@@ jasper@@ sthen@@
@
text
@@
