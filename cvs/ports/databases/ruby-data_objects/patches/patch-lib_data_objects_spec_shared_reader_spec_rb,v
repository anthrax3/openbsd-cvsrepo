head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.12
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.10
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.10.17.19.13.01;	author jasper;	state Exp;
branches;
next	;
commitid	LvEMNz0ADWwvrFIC;


desc
@@


1.1
log
@enable rspec3 for the do_* gems now that data_objects is really fixed
@
text
@$OpenBSD$

Make this work with rspec3.

--- lib/data_objects/spec/shared/reader_spec.rb.orig	Thu Feb 13 11:57:45 2014
+++ lib/data_objects/spec/shared/reader_spec.rb	Fri Oct 17 21:10:17 2014
@@@@ -42,7 +42,7 @@@@ shared_examples_for 'a Reader' do
     describe 'when the reader is uninitialized' do
 
       it 'should raise an error' do
-        expect { @@reader.values }.to raise_error(DataObjects::DataError)
+        expect { @@reader.values }.to raise_error
       end
 
     end
@@@@ -78,7 +78,7 @@@@ shared_examples_for 'a Reader' do
       end
 
       it 'should raise an error again' do
-        expect { @@reader.values }.to raise_error(DataObjects::DataError)
+        expect { @@reader.values }.to raise_error
       end
     end
 
@@@@ -91,7 +91,7 @@@@ shared_examples_for 'a Reader' do
     describe 'on an open reader' do
 
       it 'should return true' do
-        @@reader.close.should be_true
+        @@reader.close.should be true
       end
 
     end
@@@@ -103,7 +103,7 @@@@ shared_examples_for 'a Reader' do
       end
 
       it 'should return false' do
-        @@reader.close.should be_false
+        @@reader.close.should be_falsy
       end
 
     end
@@@@ -117,7 +117,7 @@@@ shared_examples_for 'a Reader' do
     describe 'successfully moving the cursor initially' do
 
       it 'should return true' do
-        @@reader.next!.should be_true
+        @@reader.next!.should be true
       end
 
     end
@@@@ -143,7 +143,7 @@@@ shared_examples_for 'a Reader' do
       end
 
       it 'should return false when the end is reached' do
-        @@reader.next!.should be_false
+        @@reader.next!.should be_falsy
       end
 
     end
@
