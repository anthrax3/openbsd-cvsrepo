head	1.2;
access;
symbols
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.01.07.10.24.30;	author pea;	state dead;
branches
	1.2.2.1;
next	1.1;

1.1
date	2010.08.06.02.52.05;	author william;	state Exp;
branches;
next	;

1.2.2.1
date	2011.03.13.21.26.45;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*MAJOR UPGRADE*

Upgrade to OpenLDAP 2.4.23.
Important things to know:

+ ldbm backend has been removed
+ bdb is the default backend
+ slurp has been removed

Backup all your data before this upgrade !!

Tested in a bulk by landry@@
Lot of help/comments/ideas/tests from ajacoutot@@, jasper@@, landry@@, sthen@@, stephan@@

ok ajacoutot@@, landry@@, jasper@@, stephan@@
@
text
@$OpenBSD: patch-servers_slapd_modrdn_c,v 1.1 2010/08/06 02:52:05 william Exp $

SECURITY FIX

Resolves CVE-2010-0211 and CVE-2010-0212 (ITS#6570) 
from upstream


--- servers/slapd/modrdn.c.orig	Mon Feb 11 18:24:16 2008
+++ servers/slapd/modrdn.c	Tue Aug  3 10:26:21 2010
@@@@ -481,12 +481,19 @@@@ slap_modrdn2mods(
 			mod_tmp->sml_values[1].bv_val = NULL;
 			if( desc->ad_type->sat_equality->smr_normalize) {
 				mod_tmp->sml_nvalues = &mod_tmp->sml_values[2];
-				(void) (*desc->ad_type->sat_equality->smr_normalize)(
+				rs->sr_err = desc->ad_type->sat_equality->smr_normalize(
 					SLAP_MR_EQUALITY|SLAP_MR_VALUE_OF_ASSERTION_SYNTAX,
 					desc->ad_type->sat_syntax,
 					desc->ad_type->sat_equality,
 					&mod_tmp->sml_values[0],
 					&mod_tmp->sml_nvalues[0], op->o_tmpmemctx );
+			if (rs->sr_err != LDAP_SUCCESS) {
+				ch_free(mod_tmp->sml_nvalues);
+				ch_free(mod_tmp->sml_values[0].bv_val);
+				ch_free(mod_tmp->sml_values);
+				ch_free(mod_tmp);
+				goto done;
+			}
 				mod_tmp->sml_nvalues[1].bv_val = NULL;
 			} else {
 				mod_tmp->sml_nvalues = NULL;
@


1.2.2.1
log
@Security fixes for CVE-2011-1024, CVE-2011-1025 and CVE-2011-1081.
Backported from upstream CVS.

ok pea@@ sthen@@
@
text
@d1 1
a1 1
$OpenBSD$
d3 1
a3 2
Security fix for CVE-2011-1081
DoS when submitting special MODRDN request
d5 2
a6 2
Fix from upstream CVS:
http://www.openldap.org/devel/cvsweb.cgi/servers/slapd/modrdn.c.diff?r1=1.170.2.8&r2=1.170.2.9
d8 24
a31 19
--- servers/slapd/modrdn.c.orig	Thu Jun 10 19:48:07 2010
+++ servers/slapd/modrdn.c	Sun Mar 13 19:53:56 2011
@@@@ -1,4 +1,4 @@@@
-/* $OpenLDAP: pkg/ldap/servers/slapd/modrdn.c,v 1.170.2.8 2010/06/10 17:48:07 quanah Exp $ */
+/* $OpenLDAP: servers/slapd/modrdn.c,v 1.170.2.9 2011/01/04 19:44:44 quanah Exp $ */
 /* This work is part of OpenLDAP Software <http://www.openldap.org/>.
  *
  * Copyright 1998-2010 The OpenLDAP Foundation.
@@@@ -392,7 +392,9 @@@@ slap_modrdn2mods(
 	LDAPRDN		new_rdn = NULL;
 
 	assert( !BER_BVISEMPTY( &op->oq_modrdn.rs_newrdn ) );
-	assert( !op->orr_deleteoldrdn || !BER_BVISEMPTY( &op->o_req_dn ) );
+
+	/* if requestDN is empty, silently reset deleteOldRDN */
+	if ( BER_BVISEMPTY( &op->o_req_dn ) ) op->orr_deleteoldrdn = 0;
 
 	if ( ldap_bv2rdn_x( &op->oq_modrdn.rs_newrdn, &new_rdn,
 		(char **)&rs->sr_text, LDAP_DN_FORMAT_LDAP, op->o_tmpmemctx ) ) {
@


1.1
log
@SECURITY FIX

Resolves CVE-2010-0211 and CVE-2010-0212 (ITS#6570)
from upstream.  Also fixes a segfault in IA5StringNormalize() by
sync'ing that function with the same function from 2.4.23.

ok sthen
@
text
@d1 1
a1 1
$OpenBSD$
@

