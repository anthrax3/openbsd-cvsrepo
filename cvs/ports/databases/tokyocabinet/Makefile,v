head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	sthen_20151011:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.10.13.12.06.54;	author sthen;	state Exp;
branches;
next	1.1;
commitid	sDbfBML9nv8jkjBo;

1.1
date	2015.10.11.21.39.18;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	HVuqWHsS2HoihFbj;

1.1.1.1
date	2015.10.11.21.39.18;	author sthen;	state Exp;
branches;
next	;
commitid	HVuqWHsS2HoihFbj;


desc
@@


1.2
log
@tweaks to tokyocabinet port:
- regen PLIST
- use srand_deterministic for tests
- add a comment explaining about the test failures, which appear to
be possibly related to cache coherency (tokyocabinet has code for non-
UBC systems, but some of the failures suggest it may not be working
correctly).
@
text
@# $OpenBSD: Makefile,v 1.1.1.1 2015/10/11 21:39:18 sthen Exp $

SHARED_LIBS=	tokyocabinet	0.0 # .9.7

COMMENT=	key/value database library

DISTNAME=	tokyocabinet-1.4.48
REVISION=	0
CATEGORIES=	databases

HOMEPAGE=	http://fallabs.com/tokyocabinet/

# LGPLv2.1+
PERMIT_PACKAGE_CDROM=	Yes

WANTLIB += bz2 c m pthread z

MASTER_SITES=	${HOMEPAGE}

CONFIGURE_STYLE= gnu
USE_GMAKE=	Yes
LIB_DEPENDS=	archivers/bzip2

pre-configure:
	perl -pi -e 's,^MYLIBVER=.*,MYLIBVER=${LIBtokyocabinet_VERSION:R},;' \
	    -e 's,^MYLIBREV=.*,MYLIBREV=${LIBtokyocabinet_VERSION:E},;' \
	    ${WRKSRC}/configure
	perl -pi -e 's,srand\(,srand_deterministic(,' ${WRKSRC}/*test.c

# otherwise tcutest misc fails
TEST_FLAGS=		TZ=utc

# there are various other test failures, some of which indicate
# possible cache coherency problems. tokyocabinet has code which is
# supposed to work on non-UBC systems, however some of the failures
# suggest that this isn't working correctly on OpenBSD.

.include <bsd.port.mk>
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d8 1
d28 1
d32 5
@


1.1.1.1
log
@import ports/databases/tokyocabinet, ok landry@@

Tokyo Cabinet, developed as the successor of QDBM, is a library of
routines for managing a simple file-based key/value database.
Keys and values are serial bytes with variable length; both binary
data and character string can be used as key or value. Data are
organized in a hash table, B+ tree, or fixed-length array.
There is no concept of data tables or data types.
@
text
@@
