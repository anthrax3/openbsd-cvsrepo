head	1.3;
access;
symbols
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.09.01.17.23.36;	author giovanni;	state dead;
branches;
next	1.2;
commitid	sZfjcmOIfRoxd1AW;

1.2
date	2015.09.10.15.54.06;	author giovanni;	state Exp;
branches
	1.2.4.1;
next	1.1;
commitid	UjWKB8zcKiEZhihk;

1.1
date	2015.01.17.00.42.16;	author giovanni;	state Exp;
branches;
next	;
commitid	9IfCdfVXPjaxgaWm;

1.2.4.1
date	2016.10.07.20.36.18;	author kili;	state dead;
branches;
next	1.2.4.2;
commitid	XtoD4Q9NIhL7bDjn;

1.2.4.2
date	2016.12.02.15.50.34;	author giovanni;	state Exp;
branches;
next	;
commitid	CbR8YWZZOUwgf0Cj;


desc
@@


1.3
log
@bugfix update to 4.036
@
text
@$OpenBSD: patch-dbdimp_c,v 1.2 2015/09/10 15:54:06 giovanni Exp $

Fix a use-after-free if my_login fails

--- dbdimp.c.orig	Mon Jun 15 10:43:03 2015
+++ dbdimp.c	Thu Sep 10 05:09:34 2015
@@@@ -2086,8 +2086,11 @@@@ static int my_login(pTHX_ SV* dbh, imp_dbh_t *imp_dbh)
   result = mysql_dr_connect(dbh, imp_dbh->pmysql, mysql_socket, host, port, user,
 			  password, dbname, imp_dbh) ? TRUE : FALSE;
   if (fresh && !result) {
+      do_error(dbh, mysql_errno(imp_dbh->pmysql),
+              mysql_error(imp_dbh->pmysql) ,mysql_sqlstate(imp_dbh->pmysql));
       /* Prevent leaks, but do not free in case of a reconnect. See #97625 */
       Safefree(imp_dbh->pmysql);
+      imp_dbh->pmysql = NULL;
   }
   return result;
 }
@@@@ -5017,9 +5020,11 @@@@ int mysql_db_reconnect(SV* h)
    */
   if (!dbd_db_disconnect(h, imp_dbh) || !my_login(aTHX_ h, imp_dbh))
   {
-    do_error(h, mysql_errno(imp_dbh->pmysql), mysql_error(imp_dbh->pmysql),
+    if(!imp_dbh->pmysql) {
+    	do_error(h, mysql_errno(imp_dbh->pmysql), mysql_error(imp_dbh->pmysql),
              mysql_sqlstate(imp_dbh->pmysql));
-    memcpy (imp_dbh->pmysql, &save_socket, sizeof(save_socket));
+    	memcpy (imp_dbh->pmysql, &save_socket, sizeof(save_socket));
+    }
     ++imp_dbh->stats.auto_reconnects_failed;
     return FALSE;
   }
@


1.2
log
@Update to 4.032 from Brad
enable more regression tests
@
text
@d1 1
a1 1
$OpenBSD: patch-dbdimp_c,v 1.1 2015/01/17 00:42:16 giovanni Exp $
@


1.2.4.1
log
@Remove a patch that breaks the build and is no longer needed with
DBD-mysql-4.037.

ok giovanni@@ (maintainer)
@
text
@d1 1
a1 1
$OpenBSD: patch-dbdimp_c,v 1.2 2015/09/10 15:54:06 giovanni Exp $
@


1.2.4.2
log
@backport fix for CVE-2016-1251 to 4.037
ok afresh1@@
@
text
@d1 32
a32 12
$OpenBSD$
--- dbdimp.c.orig	Thu Dec  1 10:08:37 2016
+++ dbdimp.c	Thu Dec  1 10:10:28 2016
@@@@ -3979,6 +3979,8 @@@@ process:
           Renew(fbh->data, fbh->length, char);
           buffer->buffer_length= fbh->length;
           buffer->buffer= (char *) fbh->data;
+          imp_sth->stmt->bind[i].buffer_length = fbh->length;
+          imp_sth->stmt->bind[i].buffer = (char *)fbh->data;
 
           if (DBIc_TRACE_LEVEL(imp_xxh) >= 2) {
             int j;
@


1.1
log
@Update to 4.0.29 and fix a use-after-free
ok brad@@
@
text
@d1 2
a2 1
$OpenBSD$
d5 3
a7 3
--- dbdimp.c.orig	Mon Dec  8 09:44:50 2014
+++ dbdimp.c	Sun Dec 28 00:40:38 2014
@@@@ -2061,8 +2061,11 @@@@ static int my_login(pTHX_ SV* dbh, imp_dbh_t *imp_dbh)
d19 1
a19 1
@@@@ -4953,9 +4956,11 @@@@ int mysql_db_reconnect(SV* h)
@

