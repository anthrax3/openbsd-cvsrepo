head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.6
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	sthen_20150916:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.09.16.08.46.43;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	dTQkQRvTesvBUl8B;

1.1.1.1
date	2015.09.16.08.46.43;	author sthen;	state Exp;
branches;
next	;
commitid	dTQkQRvTesvBUl8B;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD$
--- Makefile.orig	Sat Aug 29 21:28:46 2015
+++ Makefile	Sat Aug 29 21:28:48 2015
@@@@ -9,10 +9,10 @@@@ TESTS=hiredis-test
 LIBNAME=libhiredis
 PKGCONFNAME=hiredis.pc
 
-HIREDIS_MAJOR=$(shell grep HIREDIS_MAJOR hiredis.h | awk '{print $$3}')
-HIREDIS_MINOR=$(shell grep HIREDIS_MINOR hiredis.h | awk '{print $$3}')
-HIREDIS_PATCH=$(shell grep HIREDIS_PATCH hiredis.h | awk '{print $$3}')
-HIREDIS_SONAME=$(shell grep HIREDIS_SONAME hiredis.h | awk '{print $$3}')
+_HIREDIS_MAJOR=$(shell grep HIREDIS_MAJOR hiredis.h | awk '{print $$3}')
+_HIREDIS_MINOR=$(shell grep HIREDIS_MINOR hiredis.h | awk '{print $$3}')
+_HIREDIS_PATCH=$(shell grep HIREDIS_PATCH hiredis.h | awk '{print $$3}')
+_HIREDIS_SONAME=$(shell grep HIREDIS_SONAME hiredis.h | awk '{print $$3}')
 
 # Installation related variables and target
 PREFIX?=/usr/local
@@@@ -176,7 +176,7 @@@@ $(PKGCONFNAME): hiredis.h
 	@@echo >> $@@
 	@@echo Name: hiredis >> $@@
 	@@echo Description: Minimalistic C client library for Redis. >> $@@
-	@@echo Version: $(HIREDIS_MAJOR).$(HIREDIS_MINOR).$(HIREDIS_PATCH) >> $@@
+	@@echo Version: $(_HIREDIS_MAJOR).$(_HIREDIS_MINOR).$(HIREDIS_PATCH) >> $@@
 	@@echo Libs: -L\$${libdir} -lhiredis >> $@@
 	@@echo Cflags: -I\$${includedir} -D_FILE_OFFSET_BITS=64 >> $@@
 
@


1.1.1.1
log
@import databases/libhiredis, req by claudio, ok dcoppa@@

Hiredis is a minimalistic C client library for the Redis database.

It is minimalistic because it just adds minimal support for the
protocol, but at the same time it uses a high level printf-alike API
in order to make it much higher level than otherwise suggested by its
minimal code base and the lack of explicit bindings for every Redis
command.

Apart from supporting sending commands and receiving replies, it comes
with a reply parser that is decoupled from the I/O layer. It is a stream
parser designed for easy reusability, which can for instance be used in
higher level language bindings for efficient reply parsing.

Hiredis only supports the binary-safe Redis protocol, so you can use it
with any Redis version >= 1.2.0.

The library comes with multiple APIs. There is the synchronous API, the
asynchronous API and the reply parsing API.
@
text
@@
