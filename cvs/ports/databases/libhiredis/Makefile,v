head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.6
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	sthen_20150916:1.1.1.1
	sthen:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.12.21.21.53.15;	author sthen;	state Exp;
branches;
next	1.1;
commitid	XvQo27Jlskf6ICTG;

1.1
date	2015.09.16.08.46.43;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;
commitid	dTQkQRvTesvBUl8B;

1.1.1.1
date	2015.09.16.08.46.43;	author sthen;	state Exp;
branches;
next	;
commitid	dTQkQRvTesvBUl8B;


desc
@@


1.2
log
@update to libhiredis-0.13.3, from David CARLIER
@
text
@# $OpenBSD: Makefile,v 1.1.1.1 2015/09/16 08:46:43 sthen Exp $

COMMENT=	minimalistic C client for Redis

V=		0.13.3
DISTNAME=	hiredis-$V
PKGNAME=	lib${DISTNAME}
DISTFILES=	${DISTNAME}{v$V}.tar.gz

SHARED_LIBS=	hiredis 0.0 # 0.13

CATEGORIES=	databases devel

HOMEPAGE=	https://github.com/redis/hiredis/

MAINTAINER=	Stuart Henderson <sthen@@openbsd.org>

# BSD
PERMIT_PACKAGE_CDROM=	Yes

MASTER_SITES=	https://github.com/redis/hiredis/archive/

LIBV=		HIREDIS_MAJOR=${LIBhiredis_VERSION:R} \
		HIREDIS_MINOR=${LIBhiredis_VERSION:E} \
		HIREDIS_SONAME=${LIBhiredis_VERSION}
MAKE_FLAGS=	OPTIMIZATION= DEBUG= ${LIBV}
FAKE_FLAGS=	INSTALL="cp -r" PREFIX="${TRUEPREFIX}" ${LIBV}

USE_GMAKE=	Yes

# needs redis to be running for some tests
TEST_IS_INTERACTIVE= Yes

post-install:
	rm -f ${PREFIX}/lib/libhiredis.so

.include <bsd.port.mk>
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d5 1
a5 1
V=		0.13.2
d30 3
a32 1
#NO_TEST=	Yes
@


1.1.1.1
log
@import databases/libhiredis, req by claudio, ok dcoppa@@

Hiredis is a minimalistic C client library for the Redis database.

It is minimalistic because it just adds minimal support for the
protocol, but at the same time it uses a high level printf-alike API
in order to make it much higher level than otherwise suggested by its
minimal code base and the lack of explicit bindings for every Redis
command.

Apart from supporting sending commands and receiving replies, it comes
with a reply parser that is decoupled from the I/O layer. It is a stream
parser designed for easy reusability, which can for instance be used in
higher level language bindings for efficient reply parsing.

Hiredis only supports the binary-safe Redis protocol, so you can use it
with any Redis version >= 1.2.0.

The library comes with multiple APIs. There is the synchronous API, the
asynchronous API and the reply parsing API.
@
text
@@
