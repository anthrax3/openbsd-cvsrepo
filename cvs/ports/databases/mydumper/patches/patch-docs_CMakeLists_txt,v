head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.16
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.14
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.12
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.8
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	giovanni_20130924:1.1.1.1
	giovanni:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.09.25.09.02.09;	author giovanni;	state Exp;
branches;
next	1.1;

1.1
date	2013.09.24.14.44.44;	author giovanni;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.09.24.14.44.44;	author giovanni;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
enable man pages
tweak descr (from sthen@@)
ok sthen@@ benoit@@
@
text
@$OpenBSD: patch-docs_CMakeLists_txt,v 1.1.1.1 2013/09/24 14:44:44 giovanni Exp $
--- docs/CMakeLists.txt.orig	Tue Sep 24 23:24:55 2013
+++ docs/CMakeLists.txt	Tue Sep 24 23:25:38 2013
@@@@ -112,43 +112,9 @@@@ if(GENERATE_DOC)
     doc_html
   )
   install(FILES "${SPHINX_MAN_DIR}/mydumper.1" "${SPHINX_MAN_DIR}/myloader.1"
-    DESTINATION "share/man/man1"
+    DESTINATION "man/man1"
   )
 
-  # This target builds PDF documentation using Sphinx and LaTeX.
-  if(PDFLATEX_COMPILER)
-    # PDF output directory
-    set(SPHINX_PDF_DIR "${CMAKE_CURRENT_BINARY_DIR}/pdf")
-
-    add_custom_target(doc_pdf ALL
-      ${SPHINX_EXECUTABLE}
-	-q -b latex
-	-c "${BINARY_BUILD_DIR}"
-	-d "${SPHINX_CACHE_DIR}"
-	"${SOURCES_DIR}"
-	"${SPHINX_PDF_DIR}"
-      COMMENT "Building PDF documentation with Sphinx"
-    )
-    add_custom_command(TARGET doc_pdf POST_BUILD
-      COMMAND ${CMAKE_MAKE_PROGRAM} LATEXOPTS=-interaction=batchmode
-      WORKING_DIRECTORY "${SPHINX_PDF_DIR}"
-    )
-    list(APPEND CLEAN_FILES
-      "${SPHINX_PDF_DIR}"
-    )
-    add_dependencies(doc_pdf
-      doc_sources
-    )
-    # serialize Sphinx targets to avoid cache conflicts in parallel builds
-    add_dependencies(doc_pdf
-      doc_man
-    )
-    install(FILES "${SPHINX_PDF_DIR}/mydumper.pdf"
-      DESTINATION "share/doc/mydumper"
-    )
-  endif(PDFLATEX_COMPILER)
-
-  # Add output directories to clean target.
   set_directory_properties(PROPERTIES
     ADDITIONAL_MAKE_CLEAN_FILES "${CLEAN_FILES}"
   )
@


1.1
log
@Initial revision
@
text
@d1 9
a9 6
$OpenBSD$
textproc/py-sphinx fails while generating man pages
--- docs/CMakeLists.txt.orig	Tue Sep 24 15:36:51 2013
+++ docs/CMakeLists.txt	Tue Sep 24 15:37:29 2013
@@@@ -88,66 +88,6 @@@@ if(GENERATE_DOC)
     DESTINATION "share/doc/mydumper"
a11 27
-  # HTML output directory
-  set(SPHINX_MAN_DIR "${CMAKE_CURRENT_BINARY_DIR}/man")
-  # This target builds a manual page using Sphinx.
-
-  add_custom_target(doc_man ALL
-    ${SPHINX_EXECUTABLE}
-      -q -b man
-      -c "${BINARY_BUILD_DIR}"
-      -d "${SPHINX_CACHE_DIR}"
-      "${SOURCES_DIR}"
-      "${SPHINX_MAN_DIR}"
-    COMMENT "Building manual page with Sphinx"
-  )
-  list(APPEND CLEAN_FILES
-    "${SPHINX_MAN_DIR}"
-  )
-  add_dependencies(doc_man
-    doc_sources
-  )
-  # serialize Sphinx targets to avoid cache conflicts in parallel builds
-  add_dependencies(doc_man
-    doc_html
-  )
-  install(FILES "${SPHINX_MAN_DIR}/mydumper.1" "${SPHINX_MAN_DIR}/myloader.1"
-    DESTINATION "share/man/man1"
-  )
-
d45 1
a45 1
   # Add output directories to clean target.
d48 1
@


1.1.1.1
log
@
mydumper is complement to mysqldump, for MySQL data dumping, providing
parallelism, performance and easier to manage output.

hints and ok sthen@@ benoit@@
@
text
@@
