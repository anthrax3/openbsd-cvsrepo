head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.6
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2015.09.24.20.35.31;	author zhuk;	state Exp;
branches;
next	1.5;
commitid	HJxmL4QDy9Jo9gOe;

1.5
date	2015.08.03.07.42.30;	author kirby;	state Exp;
branches;
next	1.4;
commitid	leKqd5zXWRuBEcQO;

1.4
date	2015.07.19.12.42.20;	author zhuk;	state Exp;
branches;
next	1.3;
commitid	AuPP6ZdeNA54Si13;

1.3
date	2015.07.19.12.34.41;	author zhuk;	state Exp;
branches;
next	1.2;
commitid	pqcQq9HPSzF52mxu;

1.2
date	2015.01.21.21.12.28;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	Gd76oGEE1o4kFUpK;

1.1
date	2015.01.12.20.54.09;	author zhuk;	state Exp;
branches;
next	;
commitid	zfxoGmUsyiacrlv2;


desc
@@


1.6
log
@Initialize test database clusters with UTF-8 encoding.

Initial idea from Patrick Keshishian on ports@@, okay landry@@.
@
text
@# $OpenBSD: postgresql.port.mk,v 1.5 2015/08/03 07:42:30 kirby Exp $
#
# Helps testing PostgreSQL-based software, no B/L/R-DEPS here.

MODPOSTGRESQL_TEST_CMD ?= \
	${MAKE_PROGRAM} ${ALL_TEST_FLAGS} -f ${MAKE_FILE} ${TEST_TARGET}

MODPOSTGRESQL_TEST_PGHOST ?=	${WRKDIR}
_MODPOSTGRESQL_TEST_PGDATA =	${WRKDIR}/testdb-pg

TEST_DEPENDS +=		databases/postgresql,-server
TEST_ENV +=		PGDATA=${_MODPOSTGRESQL_TEST_PGDATA} \
			PGHOST=${MODPOSTGRESQL_TEST_PGHOST}
.ifdef MODPOSTGRESQL_TEST_DBNAME
TEST_ENV +=		PGDATABASE=${MODPOSTGRESQL_TEST_DBNAME}
.endif

MODPOSTGRESQL_TEST_TARGET = \
	rm -Rf ${_MODPOSTGRESQL_TEST_PGDATA}; \
	export ${ALL_TEST_ENV}; \
	${LOCALBASE}/bin/initdb -D ${_MODPOSTGRESQL_TEST_PGDATA} \
	    -A trust --locale=C -E UTF8 --nosync; \
	${LOCALBASE}/bin/pg_ctl start -w -D ${_MODPOSTGRESQL_TEST_PGDATA} \
	    -l ${WRKDIR}/pg-test.log \
	    -o "-F -h '' -k ${MODPOSTGRESQL_TEST_PGHOST}";
.ifdef MODPOSTGRESQL_TEST_DBNAME
MODPOSTGRESQL_TEST_TARGET += \
	${LOCALBASE}/bin/createdb ${MODPOSTGRESQL_TEST_DBNAME} || \
	    (${LOCALBASE}/bin/pg_ctl stop -D ${_MODPOSTGRESQL_TEST_PGDATA} \
	     -m i && exit 1);
.endif
MODPOSTGRESQL_TEST_TARGET += \
	set +e; \
	cd ${WRKBUILD}; \
	( ${MODPOSTGRESQL_TEST_CMD} ); \
	Q=$$?; \
	${LOCALBASE}/bin/pg_ctl stop -D ${_MODPOSTGRESQL_TEST_PGDATA} -m i; \
	exit $$Q

.if !target(do-test)
do-test:
	${MODPOSTGRESQL_TEST_TARGET}
.endif
@


1.5
log
@ - remove trailing white spaces
 - add RSC id and header to README-plpython
OK jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: postgresql.port.mk,v 1.4 2015/07/19 12:42:20 zhuk Exp $
d22 1
a22 1
	    -A trust --locale=C --nosync; \
@


1.4
log
@Run test commands in a subshell to avoid potential clutter of variables
coming from those modules.
@
text
@d1 1
a1 1
# $OpenBSD: postgresql.port.mk,v 1.3 2015/07/19 12:34:41 zhuk Exp $ 
@


1.3
log
@Don't use same directory for both mariadb.port.mk and postgresql.port.mk:
they could be used at the same time, and each of them wipes the database
directory before running server.
@
text
@d1 1
a1 1
# $OpenBSD: postgresql.port.mk,v 1.2 2015/01/21 21:12:28 zhuk Exp $ 
d35 1
a35 1
	${MODPOSTGRESQL_TEST_CMD}; \
@


1.2
log
@Add --nosync to initdb(1) invocation to speed up test framework startup,
as suggested in private mail.
@
text
@d1 1
a1 1
# $OpenBSD: postgresql.port.mk,v 1.1 2015/01/12 20:54:09 zhuk Exp $ 
d9 1
a9 1
_MODPOSTGRESQL_TEST_PGDATA =	${WRKDIR}/testdb
@


1.1
log
@Add infrastructure for testing PostgreSQL-based apps. It sets up database
cluster, creates a database (optionally), starts server and then starts
actual test code. The server gets correctly shut down after testing.
Also, only Unix sockets are used for connections, minimizing side effects
on running system.

Man page to follow.

okay espie@@
@
text
@d1 1
a1 1
# $OpenBSD$ 
d22 1
a22 1
	    -A trust --locale=C; \
@

