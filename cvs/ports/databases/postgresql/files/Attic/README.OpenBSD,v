head	1.21;
access;
symbols
	OPENBSD_4_8:1.20.0.14
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.12
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.20.0.10
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.8
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.20.0.6
	OPENBSD_4_4_BASE:1.20
	OPENBSD_4_3:1.20.0.4
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.18.0.2
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.11.0.4
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.2
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.8
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.6
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.4
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_TRACKING_SWITCH:1.7
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_9_BASE:1.6;
locks; strict;
comment	@# @;


1.21
date	2010.11.08.14.12.24;	author pea;	state dead;
branches;
next	1.20;

1.20
date	2007.06.07.20.39.51;	author mbalmer;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.18.16.21.31;	author mbalmer;	state Exp;
branches;
next	1.18;

1.18
date	2006.10.31.06.50.24;	author mbalmer;	state Exp;
branches;
next	1.17;

1.17
date	2006.10.29.09.29.29;	author mbalmer;	state Exp;
branches;
next	1.16;

1.16
date	2006.10.29.08.27.05;	author mbalmer;	state Exp;
branches;
next	1.15;

1.15
date	2006.10.18.13.54.22;	author mbalmer;	state Exp;
branches;
next	1.14;

1.14
date	2006.10.15.16.00.11;	author mbalmer;	state Exp;
branches;
next	1.13;

1.13
date	2006.10.09.12.22.53;	author aanriot;	state Exp;
branches;
next	1.12;

1.12
date	2006.10.09.11.55.18;	author aanriot;	state Exp;
branches;
next	1.11;

1.11
date	2005.12.31.10.40.39;	author mbalmer;	state Exp;
branches;
next	1.10;

1.10
date	2005.04.06.06.23.46;	author sturm;	state Exp;
branches;
next	1.9;

1.9
date	2004.07.26.10.10.46;	author peter;	state Exp;
branches
	1.9.2.1
	1.9.4.1;
next	1.8;

1.8
date	2003.06.23.19.11.10;	author sturm;	state Exp;
branches;
next	1.7;

1.7
date	2001.07.25.08.16.46;	author peter;	state Exp;
branches;
next	1.6;

1.6
date	2001.04.23.21.58.44;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2001.04.22.09.35.00;	author peter;	state Exp;
branches;
next	1.4;

1.4
date	2001.04.21.18.25.45;	author peter;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.12.13.09.52;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.10.19.27.16;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.22.19.28.12;	author danh;	state Exp;
branches;
next	;

1.9.2.1
date	2005.06.06.22.00.47;	author sturm;	state Exp;
branches;
next	;

1.9.4.1
date	2005.06.06.20.43.04;	author sturm;	state Exp;
branches;
next	;


desc
@@


1.21
log
@* MAJOR UPGRADE *

+ upgrade to 9.0.1
+ move readme to new location
+ add a rc script

A dump / restore is needed for this upgrade.
See http://openbsd.raveland.org/ports/postgresql/UPGRADE_HOWTO.txt
if you need help for this.

ok jasper@@, eric@@
@
text
@Using PostgreSQL in an OpenBSD environment

At least two different accounts are involved when working with PostgreSQL:
One is an OpenBSD userid, '_postgresql', which is used as the userid of files
that are part of PostgreSQL.  The other, usually named 'postgres', is not an
OpenBSD userid, i.e. you will not find it in /etc/passwd, but an account
internal to the database system.  The 'postgres' account is called the dba
account (database administrator) and is created when a new database is
initialized using the initdb command.

If you are installing PostgreSQL for the first time, you have to create
a default database first.  In the following example we install a database
in /var/postgresql/data with a dba account 'postgres' and md5 authentication.
We will be prompted for a password to protect the dba account:

       # su - _postgresql
       $ mkdir /var/postgresql/data
       $ initdb -D /var/postgresql/data -U postgres -A md5 -W

It is strongly advised that you do not work with the postgres dba account
other than creating more users and/or databases or for administrative task.
Use the PostgreSQL permission system to make sure that a database is only
accessed by programs/users that have the right to do so.

Please consult the PostgreSQL website for more information, especially when
you are upgrading an existing database installation.

Auto Start and Stop

To start PostgreSQL at boot and shut it down when the system shuts down,
add the following lines to /etc/rc.local and /etc/rc.shutdown, respectively:

/etc/rc.local:

if [ -x !!PREFIX!!/bin/pg_ctl ]; then
	echo -n ' postgresql'
	su -l _postgresql -c "nohup !!PREFIX!!/bin/pg_ctl start \
	    -D /var/postgresql/data -l /var/postgresql/logfile \
	    -o '-D /var/postgresql/data' >/dev/null"
fi

/etc/rc.shutdown:

if [ -f /var/postgresql/data/postmaster.pid ]; then
	su -l _postgresql -c "!!PREFIX!!/bin/pg_ctl stop -m fast \
	     -D /var/postgresql/data"
	rm -f /var/postgresql/data/postmaster.pid
fi

Network Connections and Tuning

To allow connections over TCP (and other options) edit the file:

	/var/postgresql/data/postgresql.conf

and also edit the pg_hba.conf (in the same directory) making the
appropriate changes to allow connection from your network.

The default sizes in the GENERIC kernel for SysV semaphores
are not really large enough for a database with more than a
handful of connections. A server running such a database should
have at least the following in /etc/sysctl.conf:

	kern.seminfo.semmni=256
	kern.seminfo.semmns=2048

To serve a large number of connections (>250), you may also need
to increase the maximum shared memory segment size, on the i386
try:

	kern.shminfo.shmmax=50331648	# this is 48MB.
					# default on i386 is 32MB
					# other archs will vary

These numbers should be tuned depending on system use. You will also
need to tune the values in the postgresql.conf file to increase the
number of connections to the backend.

By default, the _postgresql user, and so the postmaster and backend
processes run in the login(1) class of "daemon". On a busy server,
it may be advisable to put the _postgresql user and processes in
their own login(1) class with tuned resources, such as more open
file descriptors etc.

For example, add this to the login.conf(5) file:

	postgresql:\
		:openfiles-cur=768:\
		:tc=daemon:

Rebuild the login.conf.db file if necessary:

	# cap_mkdb /etc/login.conf

Change the login class with either vipw(8) or chsh(8).

For more than about 250 connections, these numbers should be
increased. Please report any changes and experiences to the package
maintainers so that we can update this file for future versions.

Kerberos authentication

By default the postgresql server requires it's own krb5.keytab file.  It
should be readable only by the _postgresql user.  The default location of
the file is '/etc/postgresql/krb5.keytab' but is tunable by setting the
krb_server_keyfile line in postgresql.conf.

To generate the keytab:

	# mkdir /etc/postgresql
	# ktutil -k /etc/postgresql/krb5.keytab get postgres/server.domain
	# chown _postgresql:_postgresql /etc/postgresql/krb5.keytab

Clients/Frontends

Many applications can use the PostgreSQL database right away.  To faciliate
administration of a PostgreSQL database, two clients are notable:

www/phppgadmin		A web based user interface that uses PHP5
databases/pgadmin3	A graphical user interface that uses wxWidgets
@


1.20
log
@Fix a typo in the server README.OpenBSD file.
Noticed by Ingo Schwarze <schwarze@@usta.de>.
@
text
@@


1.19
log
@Give better advice on what to put in /etc/rc.local, unclutters output
at system startup time.
@
text
@d4 1
a4 1
One is an OpenBSD userid, '_posgresql', which is used as the userid of files
@


1.18
log
@Give slightly better advice on KerberosV usage.
From Bioern Sandell, <biorn@@chalmers.se>, thanks.
@
text
@d36 1
d39 1
a39 2
	    -o '-D /var/postgresql/data'"
	echo -n ' postgresql'
@


1.17
log
@Add a section on KerberosV support to the README.OpenBSD file.
From Tom McLaughlin <tmclaugh@@sdf.lonestar.org>, thanks!
@
text
@d111 1
a111 5
	# kadmin

	kadmin> add -r postgres/server.domain
	kadmin> ext --keytab=/etc/postgresql/krb5.keytab postgres/server.domain

@


1.16
log
@Add a section in the README file about the accounts involved in a PostgreSQL
database and point to two administrative user interfaces (phppgadmin and
pgadmin3).
@
text
@d101 17
@


1.15
log
@Do not install a default database when installing the -server subpackage,
instead give advice on how to install a dabase with proper protection.

ok pvalchev, bernd, krw
@
text
@d3 8
d20 5
d100 8
@


1.14
log
@Update to PostgreSQL 8.1.5.   As the file sizes of the libraries are not the
same in most cases, I bumped the minor version just to be on the safe side.
@
text
@a0 7
Requirements
------------

Please note that the OpenBSD port of the PostgreSQL server requires a
kernel compiled with SYSVSEM and SYSVSHM options for proper operation.
The GENERIC kernel has these settings.

a1 1
------------------------------------------
d3 4
a6 4
If you are installing PostgreSQL for the first time, a default database
will have been created for you. If this failed for any reason or if you
want to use non-default paramaters, you can do something similar to the
following steps manually:
d10 1
a10 1
       $ initdb -D /var/postgresql/data
d12 2
a13 2
If you are upgrading PostgreSQL then you may have a `pgsql' or `postgresql'
user. It is suggested that you follow the steps in
d15 1
a15 1
	!!PREFIX!!/share/doc/postgresql/INSTALL
d17 2
a18 7
for more information on how to upgrade your existing databases. See
also `Special notes for the OpenBSD port' below. Replace references to
the `postgresql' user below with `pgsql' or whatever other user you
have selected to be the database administration account.

Auto Start and Stop
-------------------
d20 1
a20 2
If you wish to start PostgreSQL automatically during system startup,
add the following lines to /etc/rc.local:
d24 2
a25 2
		-D /var/postgresql/data -l /var/postgresql/logfile \
		-o '-D /var/postgresql/data'"
d29 1
a29 2
To automatically shutdown the database as part of the system shutdown, 
add the following lines to /etc/rc.shutdown:
d33 1
a33 1
		-D /var/postgresql/data"
a37 1
------------------------------
@


1.13
log
@put back "nohup", I should have read also this history. PostgreSQL runs
fine without it but we are not sure if the signal race has been fixed or
not, sorry.

spotted by bernd@@
@
text
@d4 1
a4 1
Please note that OpenBSD port of the PostgreSQL server requires a
d11 1
a11 1
If you are installing PostgreSQL for the first time a default database
d26 1
a26 1
also `Special notes for OpenBSD port' below. Replace references to
@


1.12
log
@- remove "nohup" from the suggested rc script.
- get ride of INSTALL-server and move database init to PLIST-server.
- bump PKGNAME.

ok mbalmer@@
@
text
@d37 1
a37 1
	su -l _postgresql -c "!!PREFIX!!/bin/pg_ctl start \
@


1.11
log
@Fix a typo, from jk <dhv@@scurvy.org>.
@
text
@d37 1
a37 1
	su -l _postgresql -c "nohup !!PREFIX!!/bin/pg_ctl start \
@


1.10
log
@fix kerberos support (from Jesse Kempf <kempf at rpi.edu>) and
mention to start the server with nohup to prevent a signal race (from mpf@@)
@
text
@d84 1
a84 1
it may be advisable to put the _postgresql user and processed in
@


1.9
log
@Update to PostgreSQL 7.4.3

Changes in the package layout means that there is now a -client and
-server subpackage, and users no longer need to decide which, as
the -server depends on the -client, just like the sane cases in
mysql and openldap.

Other changes include:

* Removal of the tcl FLAVOR until someone with more tcl/tk knowledge
can make it work correctly.

* The INSTALL-server script now created a _postgresql user and group
if they don't already exist, and also a default database in
/var/postgresql if that directory also doesn't exist.

* The port is marked for NO_SHARED_ARCHS as the -server subpackage
needs shared lib support to build.

* The port will build with spinlocks disabled on hppa until someone
can check and test this problem more closely.

Built and checked on i386, sparc64, amd64, macppc (waiting for regress
test feedback).

Dependent packages will be updated after this commit, shortly.
@
text
@d37 1
a37 1
	su -l _postgresql -c "!!PREFIX!!/bin/pg_ctl start \
@


1.9.2.1
log
@MFC:
fix kerberos support (from Jesse Kempf <kempf at rpi.edu> and mention
to start the server with nohup to prevent a signal race (from mpf@@)

same diff as for 3.7
@
text
@d37 1
a37 1
	su -l _postgresql -c "nohup !!PREFIX!!/bin/pg_ctl start \
@


1.9.4.1
log
@MFC:
fix kerberos support (from Jesse Kempf <kempf at rpi.edu> and mention
to start the server with nohup to prevent a signal race (from mpf@@)

ok brad@@
@
text
@d37 1
a37 1
	su -l _postgresql -c "nohup !!PREFIX!!/bin/pg_ctl start \
@


1.8
log
@new user naming schema

bump PKGNAME where necessary

rohee@@ ok leafnode
"you don't have to wait for oks" pval@@
@
text
@d4 2
a5 2
Please note that OpenBSD port of PostgreSQL requires a kernel
compiled with SYSVSEM and SYSVSHM options for proper operation.
d11 4
a14 9
If you are installing PostgreSQL for the first time, the following
steps are required:

1. Create the PostgreSQL user and group:

	# useradd -c "PostgreSQL Admin User" -g =uid -m -d /var/postgresql \
		-s /bin/sh -u 503 _postgresql

2. su to the postgresql account and initialize the database:
d65 1
a65 1
have at least the following:
d67 2
a68 2
option          SEMMNI=256
option          SEMMNS=2048
d74 13
a86 7
option		SHMMAXPGS=4096		# default on i386 is 2048 = 8Mb
					# other archs may vary

These numbers should be tweaked depending on system use. See
options(4) and release(8) manual pages and the FAQ at
http://www.openbsd.org/faq/faq5.html describe how to compile
a new custom kernel.
d88 1
a88 2
The ulimit settings can also be a problem.  The following can be
added for the postgresql user in the /etc/login.conf file:
a90 2
		:maxproc-max=256:\
		:maxproc-cur=256:\
d92 7
a98 3
		:datasize-max=256M:\
		:datasize-cur=64M:\
		:stacksize-cur=4M:
@


1.7
log
@update to PostgreSQL 7.1.2

All the hard work (apart from a small amount of testing) is by
Brandon Palmer <bpalmer@@crimelabs.net>
@
text
@d17 1
a17 1
		-s /bin/sh postgresql
d21 1
a21 1
       # su - postgresql
d25 2
a26 2
If you are upgrading PostgreSQL then you may have a `pgsql' user.
It is suggested that you follow the steps in
d42 1
a42 1
	su -l postgresql -c "!!PREFIX!!/bin/pg_ctl start \
d52 1
a52 1
	su -l postgresql -c "!!PREFIX!!/bin/pg_ctl stop -m fast \
@


1.6
log
@Patches to fix dynamic libraries, especially on ppc which understands
only major/minor.

Add DYNLIBDIR where needed.

Some style issues.

From peter@@, brad@@ and peter_e@@gmx.net
@
text
@d1 9
a9 2
Using PostgreSQL in an OpenBSD environment:
-------------------------------------------
d43 2
a44 1
		-D /var/postgresql/data -l /var/postgresql/logfile"
d54 1
a54 1
	rm -f /var/portgresql/data/postmaster.pid
d67 4
a70 5
Please note that OpenBSD port of PostgreSQL requires a kernel
compiled with SYSVSEM and SYSVSHM options for proper operation.
The GENERIC kernel has these settings but the default sizes are not
really large enough for a database with more than a handful of
connections and should have at least the following:
d82 4
a85 1
These numbers should be tweaked depending on system use.
@


1.5
log
@add '-m fast' to rc.shutdown suggestion, as otherwise the shutdown process
will default to waiting for all clients to disconnect - which could be never
@
text
@d1 2
a2 2
Using PostgreSQL package in OpenBSD environment:
------------------------------------------------
d5 1
a5 1
steps required:
d7 1
a7 1
1. Create PostgreSQL user and group:
a90 2


@


1.4
log
@Upgrade to postgresql 7.1. ok'd espie@@

* The package is now called `postgresql' and not `pgsql'.

* The default user that is suggested for the admin account is also
  `postgresql'. This will work with OpenBSD-current with long username
  support. If anything breaks please report to the maintainers.

* pgwrap is no longer shipped or supported

* Please note, you will HAVE TO BACKUP your old data if you are
  upgrading from a previous release of postgresql. Do this before
  removing the old pgsql package.

From the announcement last weekend:

Key New Features and Capabilities of Version 7.1 Include:

* Write-ahead Log (WAL) increases data integrity and processing
speed. To maintain database consistency in case of an operating
system crash, previous releases of PostgreSQL have forced all all
data modifications to disk before each transaction commit. With
WAL, only one log file must be flushed to disk, greatly improving
performance. (Tech note: can eliminate use of -F in to disable disk
flushes)

* TOAST (The Oversized-Attribute Storage Technique) Past releases
had compiled-in row length limit typically between 8Kb & 32Kb. This
restriction made storage of long text fields difficult, cumbersome
and slow. TOAST enables rows of any length while maintaing the high
performance PostgreSQL users have come to expect.

* SQL92 Outer Joins are now supported. (Tech note: eliminates the
UNION/NOT IN workaround)

* 64-bit C Language Function Manager support The previous C function
manager did not handle support 64-bit CPU's (e.g. Alpha, Sun,
Itanium). (Tech note: This change should not impact existing custom
functions developed for past versions, but performance will be
improved through rewriting to use the new call interface.)

* Complex Queries that are better, stronger and faster Many complex
queries were unsupported in previous releases. With v7.1 combinations
of views, aggregates, UNION, LIMIT, cursors, subqueries, and inherited
tables are enabled. Inherited tables are now accessed by default,
and subqueries in FROM are now supported.
@
text
@d44 1
a44 1
	su -l postgresql -c "!!PREFIX!!/bin/pg_ctl stop \
@


1.3
log
@Remove reference to editing man.conf (not needed with new port layout),
and fix typo.

Maintainer ok'ed
@
text
@d4 2
a5 2
If you are installing PostgreSQL for the first time, the following steps
required:
d9 2
a10 2
	# adduser -batch pgsql "" "PostgreSQL pseudo-user" "*" \
		-home /var -noconfig -group pgsql -shell nologin
d12 1
a12 1
2. Initialize PostgreSQL databases:
d14 16
a29 8
	# install -d -o pgsql -g pgsql -m 755 /var/pgsql
	# install -d -o pgsql -g pgsql -m 700 /var/pgsql/data
	# pgwrap initdb

If you are upgrading PostgreSQL you don't need these steps. Read
!!PREFIX!!/share/doc/pgsql/INSTALL for more information on how to
upgrade your existing databases. See also `Special notes for OpenBSD
port' below.
d34 4
a37 5
if [ -x !!PREFIX!!/bin/pgwrap -a -x !!PREFIX!!/bin/postmaster ]; \
	then
	!!PREFIX!!/bin/pgwrap -o /var/pgsql/log \
		pg_ctl -w -o "-i -S -o -F" start
	echo -n ' pgsql'
d40 8
a47 2
Don't forget to add !!PREFIX!!/lib/pgsql directory to shared libraries path in
/etc/rc.conf (if your architecture supports shared libraries):
d49 2
a50 1
shlib_dirs="!!PREFIX!!/lib/pgsql"
d52 1
a52 3
Please note that OpenBSD port of PostgreSQL requires a kernel compiled
with SYSVMSG, SYSVSEM and SYSVSHM options for proper operation.
The GENERIC kernel contains these options.
d54 1
d56 2
a57 2
Special notes for OpenBSD port:
-------------------------------
d59 5
a63 8
OpenBSD port of PostgreSQL does NOT use shell startup files to
set up environment for postgres administrative programs (such as
initdb). This mean that you should use a wrapper program `pgwrap'
to run these programs instead of `su'. For example, you
should execute
	# pgwrap initdb
instead of
	# su -l pgsql -c 'exec initdb'
d65 2
a66 2
The `pgwrap' automatically sets up proper environment and permissions
for PostgreSQL programs. The syntax for `pgwrap' program is:
d68 3
a70 4
pgwrap [-n] [-o file] cmd [arg ...]
	-n	- Do not add PostgreSQL binary prefix to cmd.
	-o file	- Redirect stdout & stderr to file (write permissions
		  for PostgreSQL user required).
d72 2
a73 1
`pgwrap' automatically sets up the following environment variables:
d75 1
a75 1
System variables (these variables are always set to the following values):
d77 2
a78 5
	PATH=!!PREFIX!!/bin:/bin:/usr/bin
	USER=pgsql
	LOGNAME=pgsql
	SHELL=/bin/sh
	HOME=/var/pgsql
d80 7
a86 2
PostgreSQL variables (these variables are set to the following values,
unless already set):
d88 3
a90 2
	PGLIB=!!PREFIX!!/lib/pgsql
	PGDATA=/var/pgsql/data
a91 1
You must have root privileges to run `pgwrap'.
@


1.2
log
@do not hardcode path of /usr/local
@
text
@a37 7
Be shure to update your /etc/man.conf to read SQL functions manual pages:

	#PostgreSQL man pages
	_build		.l	/usr/bin/nroff -man %s
	l		!!PREFIX!!/pgsql/man/manl


d79 1
a79 1
You must have root privilegies to run `pgwrap'.
@


1.1
log
@upgrade to postgresql 7.0.3
@
text
@d19 1
a19 1
/usr/local/share/doc/pgsql/INSTALL for more information on how to
d26 1
a26 1
if [ -x /usr/local/bin/pgwrap -a -x /usr/local/bin/postmaster ]; \
d28 1
a28 1
	/usr/local/bin/pgwrap -o /var/pgsql/log \
d33 1
a33 1
Don't forget to add /usr/local/lib/pgsql directory to shared libraries path in
d36 1
a36 1
shlib_dirs="/usr/local/lib/pgsql"
d42 1
a42 1
	l		/usr/local/pgsql/man/manl
d74 1
a74 1
	PATH=/usr/local/bin:/bin:/usr/bin
d83 1
a83 1
	PGLIB=/usr/local/lib/pgsql
@

