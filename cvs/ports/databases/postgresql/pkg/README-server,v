head	1.23;
access;
symbols
	OPENBSD_6_1:1.21.0.2
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.19.0.6
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.4
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.2
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.15.0.2
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.13.0.4
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.2
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4;
locks; strict;
comment	@# @;


1.23
date	2017.09.13.14.24.08;	author pea;	state Exp;
branches;
next	1.22;
commitid	K1FMdoWHXoBuCqFb;

1.22
date	2017.05.23.14.17.00;	author sthen;	state Exp;
branches;
next	1.21;
commitid	9BDRYaJFcaNpLZq1;

1.21
date	2017.02.09.15.14.11;	author sthen;	state Exp;
branches;
next	1.20;
commitid	TFNZNNqUD3rBZOD1;

1.20
date	2016.12.18.18.18.27;	author jeremy;	state Exp;
branches;
next	1.19;
commitid	OHOlIBnsGwUOgKJV;

1.19
date	2015.08.03.07.42.30;	author kirby;	state Exp;
branches;
next	1.18;
commitid	leKqd5zXWRuBEcQO;

1.18
date	2015.07.18.15.32.47;	author ajacoutot;	state Exp;
branches;
next	1.17;
commitid	b7tHxDyCH6AdrH57;

1.17
date	2014.09.23.08.41.10;	author sthen;	state Exp;
branches;
next	1.16;
commitid	P942euuPnCJgHzGW;

1.16
date	2014.04.21.13.13.29;	author ajacoutot;	state Exp;
branches;
next	1.15;

1.15
date	2013.11.01.21.07.59;	author sthen;	state Exp;
branches;
next	1.14;

1.14
date	2013.10.15.02.18.19;	author jeremy;	state Exp;
branches;
next	1.13;

1.13
date	2012.11.22.10.52.38;	author sthen;	state Exp;
branches;
next	1.12;

1.12
date	2012.04.22.11.41.55;	author ajacoutot;	state Exp;
branches;
next	1.11;

1.11
date	2012.04.12.11.47.05;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2012.01.24.09.20.17;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2011.10.18.12.03.01;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2011.09.23.09.46.14;	author pea;	state Exp;
branches;
next	1.7;

1.7
date	2011.06.06.08.43.59;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2011.06.02.13.41.38;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.07.14.45.26;	author pea;	state Exp;
branches;
next	1.4;

1.4
date	2011.02.09.10.53.12;	author pea;	state Exp;
branches;
next	1.3;

1.3
date	2011.01.04.16.03.00;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2010.11.08.14.57.56;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.08.14.12.24;	author pea;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Bugfixes update to 9.6.5
Small changes to README-server (from sthen@@)

ok sthen@@
@
text
@$OpenBSD: README-server,v 1.22 2017/05/23 14:17:00 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

At least two different accounts are involved when working with PostgreSQL:
One is an OpenBSD userid, '_postgresql', which is used as the userid of files
that are part of PostgreSQL.  The other, usually named 'postgres', is not an
OpenBSD userid, i.e. you will not find it in /etc/passwd, but an account
internal to the database system.  The 'postgres' account is called the dba
account (database administrator) and is created when a new database is
initialized using the initdb command.

If you are installing PostgreSQL for the first time, you have to create
a default database first.  In the following example we install a database
in /var/postgresql/data with a dba account 'postgres' and md5 authentication.
We will be prompted for a password to protect the dba account:

       # su - _postgresql
       $ mkdir /var/postgresql/data
       $ initdb -D /var/postgresql/data -U postgres -A md5 -W

Please note that by default the cluster's encoding will be SQL_ASCII. If
you want to have another default encoding, use the option -E with initdb:

       $ initdb -D /var/postgresql/data -U postgres -E UTF8 -A md5 -W

If your cluster is already created, you can specify another encoding when
you create a new database with this command:
	CREATE DATABASE xxx TEMPLATE template0 ENCODING 'xxx' ;

It is strongly advised that you do not work with the postgres dba account
other than creating more users and/or databases or for administrative tasks.
Use the PostgreSQL permission system to make sure that a database is only
accessed by programs/users that have the right to do so.

Please consult the PostgreSQL website for more information, especially when
you are upgrading an existing database installation.


Network Connections
===================
To allow connections over TCP (and other options) edit the file:

	/var/postgresql/data/postgresql.conf

and also edit the pg_hba.conf (in the same directory) making the
appropriate changes to allow connection from your network.

To allow SSL connections, edit postgresql.conf and enable the
'ssl' keyword, and create keys and certificates:

       # su - _postgresql
       $ cd /var/postgresql/data
       $ umask 077
       $ openssl genrsa -out server.key 2048
       $ openssl req -new -key server.key -out server.csr

Either take the CSR to a Certifying Authority (CA) to sign your
certificate, or self-sign it:

       $ openssl x509 -req -days 365 -in server.csr \
         -signkey server.key -out server.crt

Restart PostgreSQL to allow these changes to take effect.

Tuning for busy servers
=======================
The default sizes in the GENERIC kernel for SysV semaphores are only
just large enough for a database with the default configuration
(max_connections 40) if no other running processes use semaphores.
In other cases you will need to increase the limits. Adding the
following in /etc/sysctl.conf will be reasonable for many systems:

	kern.seminfo.semmni=60
	kern.seminfo.semmns=1024

To serve a large number of connections (>250), you may need higher
values for the above.

You may also want to tune the max_connect value in the
postgresql.conf file to increase the number of connections to the
backend.

By default, the _postgresql user, and so the postmaster and backend
processes run in the login(1) class of "daemon". On a busy server,
it may be advisable to put the _postgresql user and processes in
their own login(1) class with tuned resources, such as more open
file descriptors (used for network connections as well as files),
possibly more memory, etc.

For example, add this to the login.conf(5) file:

	postgresql:\
		:openfiles=768:\
		:tc=daemon:

Rebuild the login.conf.db file if necessary:

	# [ -f /etc/login.conf.db ] && cap_mkdb /etc/login.conf

For more than about 250 connections, these numbers should be
increased. Please report any changes and experiences to the package
maintainers so that we can update this file for future versions.

Upgrade Howto (for a major upgrade)
===================================
If you didn't install PostgreSQL by following this README,
you must adapt these instructions to your setup.

Option 1: Dump and Restore
--------------------------

This will work for any upgrade from any major version of PostgreSQL
to the current version.

1) Backup all your data:
# su _postgresql -c "pg_dumpall -U postgres > /var/postgresql/full.sqldump"

2) Shutdown the server:
# rcctl stop postgresql

3) Upgrade your PostgreSQL package with pkg_add.
# pkg_add -ui postgresql-server

4) Backup your old data directory:
# mv /var/postgresql/data /var/postgresql/data-${PREV_MAJOR}

5) Create a new data directory (adding -E UTF8 to the initdb line if needed):
# su _postgresql -c "mkdir /var/postgresql/data"
# su _postgresql -c "initdb -D /var/postgresql/data -U postgres -A md5 -W"

6) Restore your old pg_hba.conf and (if used) SSL certificates
# su _postgresql -c \
    "cp /var/postgresql/data-${PREV_MAJOR}/pg_hba.conf /var/postgresql/data/"
# su _postgresql -c \
    "cp /var/postgresql/data-${PREV_MAJOR}/server.{crt,key} /var/postgresql/data/"

Some postgresql.conf settings changed or disappeared in this version.
Examine your old file for local changes and apply them to the new version.

7) Start PostgreSQL:
# rcctl start postgresql

8) Restore your data:
# su _postgresql -c "psql -U postgres < /var/postgresql/full.sqldump"

Option 2: pg_upgrade
--------------------

This will work for an upgrade from the previous major version of
PostgreSQL supported by OpenBSD to the current version, and should be
faster than a dump and reload, especially for large databases. 

1) Shutdown the server:
# rcctl stop postgresql

2) Upgrade your PostgreSQL package with pkg_add.
# pkg_add postgresql-pg_upgrade

3) Backup your old data directory:
# mv /var/postgresql/data /var/postgresql/data-${PREV_MAJOR}

4) Create a new data directory (adding -E UTF8 to the initdb line if needed):
# su _postgresql -c "mkdir /var/postgresql/data"
# su _postgresql -c "initdb -D /var/postgresql/data -U postgres -A md5 -W"

5) Restore your old pg_hba.conf and (if used) SSL certificates
# su _postgresql -c \
    "cp /var/postgresql/data-${PREV_MAJOR}/pg_hba.conf /var/postgresql/data/"
# su _postgresql -c \
    "cp /var/postgresql/data-${PREV_MAJOR}/server.{crt,key} /var/postgresql/data/"

Some postgresql.conf settings changed or disappeared in this version.
Examine your old file for local changes and apply them to the new version.

6) Temporarily support connecting without a password for local users by
   editing pg_hba.conf to include "local all postgres trust"
# su _postgresql -c "vi /var/postgresql/data/pg_hba.conf"
# su _postgresql -c "vi /var/postgresql/data-${PREV_MAJOR}/pg_hba.conf"

7) Run pg_upgrade:
# su _postgresql -c "cd /var/postgresql && \
    pg_upgrade -b /usr/local/bin/postgresql-${PREV_MAJOR}/ -B /usr/local/bin \
    -U postgres -d /var/postgresql/data-${PREV_MAJOR}/ -D /var/postgresql/data"

8) Remove "local all postgres trust" line from pg_hba.conf
# su _postgresql -c "vi /var/postgresql/data/pg_hba.conf"

9) Start PostgreSQL:
# rcctl start postgresql

Clients/Frontends
=================
Many applications can use the PostgreSQL database right away.  To facilitate
administration of a PostgreSQL database, two clients are notable:

www/phppgadmin		A web based user interface that uses PHP5
databases/pgadmin3	A graphical user interface that uses wxWidgets
@


1.22
log
@switch README to using rcctl, ok pea@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.21 2017/02/09 15:14:11 sthen Exp $
d130 1
a130 1
5) Create a new data directory (using -E UTF8 if appropriate):
d165 1
a165 1
4) Create a new data directory (using -E UTF8 if appropriate):
d181 1
@


1.21
log
@Adjust pg_upgrade docs. Written by jeremy@@ based on my notes, with small
tweaks by me to avoid hardcoding versions (both in this README and in the
@@ask-update in PLIST).  OK jeremy@@ pea@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.20 2016/12/18 18:18:27 jeremy Exp $
d122 1
a122 1
# ${RCDIR}/postgresql stop
d144 1
a144 1
# ${RCDIR}/postgresql start
d157 1
a157 1
# ${RCDIR}/postgresql stop
d191 1
a191 1
# ${RCDIR}/postgresql start
@


1.20
log
@Update to PostgreSQL 9.6.1

This moves pg_upgrade to a subpackage, and has that
subpackage depend on postgresql-previous.

pthread is removed from WANTLIB, as it is no longer
needed for suppoting threaded extensions.

This adds support for PostgreSQL 9.6's new BSD
authentication.

OK pea@@ landry@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.19 2015/08/03 07:42:30 kirby Exp $
d128 1
a128 1
# mv /var/postgresql/data /var/postgresql/data.old
d136 1
a136 1
    "cp /var/postgresql/data.old/pg_hba.conf /var/postgresql/data/"
d138 1
a138 1
    "cp /var/postgresql/data.old/server.{crt,key} /var/postgresql/data/"
d160 1
a160 1
# pkg_add -ui postgresql-pg_upgrade
d163 1
a163 1
# mv /var/postgresql/data /var/postgresql/data.old
d171 1
a171 1
    "cp /var/postgresql/data.old/pg_hba.conf /var/postgresql/data/"
d173 1
a173 1
    "cp /var/postgresql/data.old/server.{crt,key} /var/postgresql/data/"
d178 8
a185 4
6) Run pg_upgrade:
# su _postgresql -c "pg_upgrade -b /usr/local/bin/postgresql-9.5/
                     -B /usr/local/bin -U postgres
                     -d /var/postgresql/data.old/ -D /var/postgresql/data"
d187 4
a190 1
7) Start PostgreSQL:
@


1.19
log
@ - remove trailing white spaces
 - add RSC id and header to README-plpython
OK jasper@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.18 2015/07/18 15:32:47 ajacoutot Exp $
d112 6
d148 37
@


1.18
log
@sudo(8) -> su(1)
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.17 2014/09/23 08:41:10 sthen Exp $
d24 1
a24 1
Please note that by default the cluster's encoding will be SQL_ASCII. If 
d29 1
a29 1
If your cluster is already created, you can specify another encoding when 
d109 1
a109 1
If you didn't install PostgreSQL by following this README, 
@


1.17
log
@use -w when starting postgresql, to wait for startup to complete before
continuing. suggested by frantisek holop, ok ajacoutot@@

while there, s/an another/another/ in README
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.16 2014/04/21 13:13:29 ajacoutot Exp $
d113 1
a113 1
# sudo -u _postgresql pg_dumpall -U postgres > /var/postgresql/full.sqldump
d125 2
a126 2
# sudo -u _postgresql mkdir /var/postgresql/data
# sudo -u _postgresql initdb -D /var/postgresql/data -U postgres -A md5 -W
d129 4
a132 4
# sudo -u _postgresql cp /var/postgresql/data.old/pg_hba.conf \
    /var/postgresql/data/
# sudo -u _postgresql cp /var/postgresql/data.old/server.{crt,key} \
    /var/postgresql/data/
d141 1
a141 1
# sudo -u _postgresql psql -U postgres < /var/postgresql/full.sqldump
@


1.16
log
@Drop kerberos support.
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.15 2013/11/01 21:07:59 sthen Exp $
d25 1
a25 1
you want to have an another default encoding, use the option -E with initdb:
d29 1
a29 1
If your cluster is already created, you can specify an another encoding when 
@


1.15
log
@tweak login.conf fragment to use openfiles rather than openfiles-cur thus
avoiding any issues with it being higher than whatever value openfiles-max
ends up taking (which may be non-obvious as it may be inherited from
"openfiles" in "default"). ok ajacoutot@@ pea@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.14 2013/10/15 02:18:19 jeremy Exp $
a105 13

Kerberos authentication
=======================
By default the postgresql server requires it's own krb5.keytab file.  It
should be readable only by the _postgresql user.  The default location of
the file is '/etc/postgresql/krb5.keytab' but is tunable by setting the
krb_server_keyfile line in postgresql.conf.

To generate the keytab:

	# mkdir /etc/postgresql
	# ktutil -k /etc/postgresql/krb5.keytab get postgres/server.domain
	# chown _postgresql:_postgresql /etc/postgresql/krb5.keytab
@


1.14
log
@Major update to 9.3.0.  As usual, a dump/restore is required.

Add plpython subpackage. Move some contrib module .so files to the
contrib subpackage.

OK pea@@ (MAINTAINER), bulk testing by landry@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.13 2012/11/22 10:52:38 sthen Exp $
d90 2
a91 1
file descriptors etc.
d96 1
a96 1
		:openfiles-cur=768:\
@


1.13
log
@Lower the suggested increase to sysv semaphores to a level which is still
suitable for normal use, but is a bit lower (semmni=60, semmns=1024),
make it clear that the default in the kernel is *just* enough for the
default max_connections value, and point out the manual section
describing this in more detail.   ok pea@@ jeremy@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.12 2012/04/22 11:41:55 ajacoutot Exp $
d80 1
a80 2
values for the above, and may also need to increase the maximum shared
memory segment size. On i386 try:
d82 3
a84 10
	kern.shminfo.shmmax=50331648	# this is 48MB.
					# default on i386 is 32MB
					# other archs will vary

These numbers should be tuned depending on system use. You will also
need to tune the max_connect value in the postgresql.conf file to
increase the number of connections to the backend. See "Managing
Kernel Resources" in the "Server Setup and Operation" chapter of
the manual (however at the time of writing the OpenBSD section is
out-dated; a custom kernel has not been required).
@


1.12
log
@Use RCDIR instead of /etc/rc.d when refering to packages rc scripts.

discussed with espie and sthen
ok sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.11 2012/04/12 11:47:05 sthen Exp $
d70 12
a81 11
The default sizes in the GENERIC kernel for SysV semaphores
are not really large enough for a database with more than a
handful of connections. A server running such a database should
have at least the following in /etc/sysctl.conf:

	kern.seminfo.semmni=256
	kern.seminfo.semmns=2048

To serve a large number of connections (>250), you may also need
to increase the maximum shared memory segment size, on the i386
try:
d88 5
a92 2
need to tune the values in the postgresql.conf file to increase the
number of connections to the backend.
@


1.11
log
@Add steps to copy SSL certs and a reminder about UTF8 to postgresql-server's
upgrade notes.  ok pea@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.10 2012/01/24 09:20:17 sthen Exp $
d132 1
a132 1
# /etc/rc.d/postgresql stop
d154 1
a154 1
# /etc/rc.d/postgresql start
@


1.10
log
@- show an example command line for initializing the database with UTF8,
it's mentioned in text but this makes it clearer (and it's a pain to switch
it afterwards :)

- s/task/tasks

ok pea@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.9 2011/10/18 12:03:01 sthen Exp $
d140 1
a140 1
5) Create a new data directory:
d144 1
a144 1
6) Restore your old pg_hba.conf
d146 2
@


1.9
log
@tweak the pgsql major upgrade upgrade notes;

- use /etc/rc.d to stop and start the daemon.
- use sudo rather than keep jumping between root/_postgresql users.
- use pkg_add -ui rather than just -u (allow it to ask if you've backed
up, rather than just terminating).

ok pea@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.8 2011/09/23 09:46:14 pea Exp $
d25 4
a28 1
you want to have an another default encoding, use the option -E with initdb.
d34 1
a34 1
other than creating more users and/or databases or for administrative task.
@


1.8
log
@Major upgrade to PostgreSQL 9.1.0
A dump/restore is required.

Tested in a bulk by jasper@@, thanks !

ok jasper@@, jeremy@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.7 2011/06/06 08:43:59 sthen Exp $
a124 3
Most commands must be launched as the user _postgresql:
# su - _postgresql

d126 1
a126 1
$ pg_dumpall -U postgres > /var/postgresql/full.sqldump
d129 1
a129 1
$ pg_ctl -D /var/postgresql/data/ stop -m fast
d131 2
a132 2
3) As root, upgrade your PostgreSQL package with pkg_add.
# pkg_add -u postgresql-server
d135 1
a135 1
$ mv /var/postgresql/data /var/postgresql/data.old
d138 2
a139 2
$ mkdir /var/postgresql/data
$ initdb -D /var/postgresql/data -U postgres -A md5 -W
d142 2
a143 1
$ cp /var/postgresql/data.old/pg_hba.conf /var/postgresql/data/
d149 1
a149 1
$ pg_ctl -D /var/postgresql/data -l /var/postgresql/logfile start
d152 1
a152 1
$ psql -U postgres < /var/postgresql/full.sqldump
@


1.7
log
@- only suggest cap_mkdb if login.conf.db exists, ok aja@@ landry pea@@
- show people how to setup ssl and tweak headings, ok pea@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.6 2011/06/02 13:41:38 ajacoutot Exp $
d101 1
a101 1
	# [ -f /etc/login/conf.db ] && cap_mkdb /etc/login.conf
@


1.6
log
@Add a consistent header that substitutes FULLPKGNAME for the READMEs.

ok jasper@@ sthen@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.5 2011/04/07 14:45:26 pea Exp $
d39 2
a40 2
Network Connections and Tuning

d48 19
d101 1
a101 1
	# cap_mkdb /etc/login.conf
d108 1
a108 1

a118 1

@


1.5
log
@Add an explanation about cluster's encoding.
Spotted by ajacoutot@@

ok ajacoutot@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.4 2011/02/09 10:53:12 pea Exp $
d3 3
a5 2
Using PostgreSQL in an OpenBSD environment
==========================================
a103 1

a137 1

a139 1

@


1.4
log
@Add a small upgrade howto.

idea from sthen@@
ok sthen@@, landry@@
looks good espie@@
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.3 2011/01/04 16:03:00 ajacoutot Exp $
d22 6
@


1.3
log
@Cope with recent class handling in rc.subr.
@
text
@d1 1
a1 1
$OpenBSD: README-server,v 1.2 2010/11/08 14:57:56 ajacoutot Exp $
d94 39
d134 1
@


1.2
log
@Add missing RCS id.
@
text
@d1 1
a1 1
$OpenBSD$
d4 1
a75 2

Change the login class with either vipw(8) or chsh(8).
@


1.1
log
@* MAJOR UPGRADE *

+ upgrade to 9.0.1
+ move readme to new location
+ add a rc script

A dump / restore is needed for this upgrade.
See http://openbsd.raveland.org/ports/postgresql/UPGRADE_HOWTO.txt
if you need help for this.

ok jasper@@, eric@@
@
text
@d1 2
@

