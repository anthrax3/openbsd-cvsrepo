head	1.3;
access;
symbols
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2000.05.23.16.31.42;	author form;	state dead;
branches;
next	1.2;

1.2
date	99.11.11.02.02.18;	author kevlo;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	98.05.06.16.55.44;	author form;	state Exp;
branches;
next	;

1.2.2.1
date	2000.09.15.04.47.50;	author marc;	state dead;
branches;
next	;


desc
@@


1.3
log
@new postgresql 7.0 port from pvk@@openbsd.ru
@
text
@#	$OpsnBSD: $

--- bin/pg_passwd/pg_passwd.c.orig	Thu May 27 09:00:40 1999
+++ bin/pg_passwd/pg_passwd.c	Mon Jun 21 16:34:27 1999
@@@@ -26,11 +26,15 @@@@
 
 #endif
 
+#ifndef _POSIX_SOURCE
+# define	_PASSWORD_LEN	128	/* max length, not containing NULL */
+#endif
+
 char	   *comname;
 static void	usage(FILE *stream);
 static void	read_pwd_file(char *filename);
 static void	write_pwd_file(char *filename, char *bkname);
-static void	encrypt_pwd(char key[9], char salt[3], char passwd[14]);
+static void	encrypt_pwd(char key[9], char salt[3], char passwd[_PASSWORD_LEN+1]);
 static void	prompt_for_username(char *username);
 static void	prompt_for_password(char *prompt, char *password);
 
@@@@ -158,7 +162,7 @@@@
 
 		if (q != NULL)
 			*(q++) = '\0';
-		if (strlen(p) != 13)
+		if (strlen(p) > _PASSWORD_LEN)
 		{
 			fprintf(stderr, "WARNING: %s: line %d: illegal password length.\n",
 					filename, npwds + 1);
@@@@ -222,7 +226,7 @@@@
 }
 
 static void
-encrypt_pwd(char key[9], char salt[3], char passwd[14])
+encrypt_pwd(char key[9], char salt[3], char passwd[_PASSWORD_LEN+1])
 {
 	int			n;
 
@@@@ -254,9 +258,9 @@@@
 
 #ifdef NOT_USED
 static int
-check_pwd(char key[9], char passwd[14])
+check_pwd(char key[9], char passwd[_PASSWORD_LEN+1])
 {
-	char		shouldbe[14];
+	char		shouldbe[_PASSWORD_LEN+1];
 	char		salt[3];
 
 	salt[0] = passwd[0];
@@@@ -264,7 +268,7 @@@@
 	salt[2] = '\0';
 	encrypt_pwd(key, salt, shouldbe);
 
-	return strncmp(shouldbe, passwd, 13) == 0 ? 1 : 0;
+	return strncmp(shouldbe, passwd, _PASSWORD_LEN) == 0 ? 1 : 0;
 }
 #endif
 
@@@@ -339,7 +343,7 @@@@
 	char		salt[3];
 	char		key[9],
 				key2[9];
-	char		e_passwd[14];
+	char		e_passwd[_PASSWORD_LEN+1];
 	int			i;
 
 	comname = argv[0];
@


1.2
log
@Remove those patches.
@
text
@@


1.2.2.1
log
@bring databases as of cut-over date into 2.7 branch
@
text
@@


1.1
log
@update postgres to 6.3.2
@
text
@d1 5
a5 3
--- bin/pg_passwd/pg_passwd.c.orig	Sat Jan 31 19:09:26 1998
+++ bin/pg_passwd/pg_passwd.c	Sat Jan 31 19:15:43 1998
@@@@ -23,12 +23,16 @@@@
d14 7
a20 9
 void		usage(FILE *stream);
 void		read_pwd_file(char *filename);
 void		write_pwd_file(char *filename, char *bkname);
-void		encrypt_pwd(char key[9], char salt[3], char passwd[14]);
-int			check_pwd(char key[9], char passwd[14]);
+void		encrypt_pwd(char key[9], char salt[3], char passwd[_PASSWORD_LEN+1]);
+int			check_pwd(char key[9], char passwd[_PASSWORD_LEN+1]);
 void		prompt_for_username(char *username);
 void		prompt_for_password(char *prompt, char *password);
d22 1
a22 1
@@@@ -148,7 +152,7 @@@@
d31 1
a31 1
@@@@ -208,7 +212,7 @@@@
d34 1
a34 1
 void
d40 1
a40 2
@@@@ -242,9 +246,9 @@@@
 }
d42 2
a43 1
 int
d52 1
a52 1
@@@@ -252,7 +256,7 @@@@
d59 1
d61 1
a61 2
 void
@@@@ -326,7 +330,7 @@@@
@

