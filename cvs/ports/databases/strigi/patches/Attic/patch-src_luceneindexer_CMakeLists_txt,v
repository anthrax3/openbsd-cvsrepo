head	1.2;
access;
symbols
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	kde:1.1.1.1
	strigi:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2007.10.24.22.49.38;	author espie;	state dead;
branches;
next	1.1;

1.1
date	2007.06.10.21.46.27;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.06.10.21.46.27;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to 0.5.5, required to even try to build new kde snapshot
good surprise: a lot of patches have been integrated.

Doesn't mean it works nice (in fact, half the tests fail), but it's
getting better
@
text
@$OpenBSD: patch-src_luceneindexer_CMakeLists_txt,v 1.1 2007/06/10 21:46:27 espie Exp $
--- src/luceneindexer/CMakeLists.txt.orig	Thu May  3 23:08:10 2007
+++ src/luceneindexer/CMakeLists.txt	Thu Jun  7 21:09:55 2007
@@@@ -17,7 +17,11 @@@@ ENDIF(WIN32)
 # CLucene requires exception support and has no support for visibility=hidden
 # so we must use the default (i.e. public) value for -fvisibility
 IF(NOT WIN32)
+IF(__STRIGI_HAVE_GCC_VISIBILITY)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fexceptions -fvisibility=default")
+ELSE(__STRIGI_HAVE_GCC_VISIBILITY)
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fexceptions")
+ENDIF(__STRIGI_HAVE_GCC_VISIBILITY)
 ENDIF(NOT WIN32)
 
 set(cluceneindex_SRCS
@@@@ -36,7 +40,7 @@@@ set_target_properties(cluceneindex
     DEFINE_SYMBOL MAKE_CLUCENEINDEXER_LIB
 )
 
-target_link_libraries(cluceneindex streamanalyzer ${CLUCENE_LIBRARY})
+target_link_libraries(cluceneindex streamanalyzer ${CLUCENE_LIBRARY} pthread)
 
 add_executable(luceneindexer luceneindexer.cpp)
 target_link_libraries(luceneindexer cluceneindex)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
@


1.1.1.1
log
@strigi search engine, dependency of kde4.
compiles, probably doesn't run right yet.
@
text
@@
