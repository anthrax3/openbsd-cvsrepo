head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2016.07.15.14.43.40;	author pea;	state Exp;
branches;
next	1.2;
commitid	ICvGpNhRjK3Obg7U;

1.2
date	2015.09.02.10.03.34;	author landry;	state Exp;
branches;
next	1.1;
commitid	DAFTeYffcD8DEYUr;

1.1
date	2014.10.24.15.01.18;	author dcoppa;	state Exp;
branches
	1.1.2.1;
next	;
commitid	i1qMyebvs97ft08O;

1.1.2.1
date	2014.10.27.22.06.40;	author sthen;	state Exp;
branches;
next	;
commitid	4yzQJ0Q9Rk1f7ULx;


desc
@@


1.3
log
@Bugfix update to 1.22.1

Spotted / patch provided by Ryan Boggs ( boggsrm at gmail.com), thanks.
ok ajacoutot@@
@
text
@$OpenBSD: patch-pgadmin_frm_events_cpp,v 1.2 2015/09/02 10:03:34 landry Exp $
--- pgadmin/frm/events.cpp.orig	Thu Jan  7 04:47:32 2016
+++ pgadmin/frm/events.cpp	Sat Jul  2 17:19:34 2016
@@@@ -41,7 +41,7 @@@@
 
 // Mutex to protect the "currentObject" from race conditions.
 //
-static wxMutex s_currentObjectMutex;
+static wxMutex *currentObjectMutex = new wxMutex( wxMUTEX_RECURSIVE );
 
 // Event table
 BEGIN_EVENT_TABLE(frmMain, pgFrame)
@@@@ -424,9 +424,9 @@@@ void frmMain::execSelChange(wxTreeItemId item, bool cu
 	//
 	// Lock the assignment to prevent the race conditions between onSelRightClick and execSelChange.
 	//
-	s_currentObjectMutex.Lock();
+	currentObjectMutex->Lock();
 	currentObject = browser->GetObject(item);
-	s_currentObjectMutex.Unlock();
+	currentObjectMutex->Unlock();
 
 	// If we didn't get an object, then we may have a right click, or
 	// invalid click, so ignore.
@@@@ -747,9 +747,9 @@@@ void frmMain::OnSelRightClick(wxTreeEvent &event)
 
 		// Prevent changes to "currentObject" by "execSelchange" function by another
 		// thread. Will hold the lock until we have the actual object in hand.
-		s_currentObjectMutex.Lock();
+		currentObjectMutex->Lock();
 		currentObject = browser->GetObject(item);
-		s_currentObjectMutex.Unlock();
+		currentObjectMutex->Unlock();
 	}
 
 	if (currentObject)
@


1.2
log
@Update to pgadmin3 1.20, ok pea@@ (MAINTAINER)
@
text
@d1 3
a3 3
$OpenBSD: patch-pgadmin_frm_events_cpp,v 1.1 2014/10/24 15:01:18 dcoppa Exp $
--- pgadmin/frm/events.cpp.orig	Fri May 30 12:42:41 2014
+++ pgadmin/frm/events.cpp	Mon Aug 24 17:37:18 2015
d13 1
a13 1
@@@@ -418,9 +418,9 @@@@ void frmMain::execSelChange(wxTreeItemId item, bool cu
d25 4
a28 12
@@@@ -735,6 +735,7 @@@@ void frmMain::OnContextMenu(wxCommandEvent &event)
 void frmMain::OnSelRightClick(wxTreeEvent &event)
 {
 	wxTreeItemId item = event.GetItem();
+
 	if (item != browser->GetSelection())
 	{
 		browser->SelectItem(item);
@@@@ -742,13 +743,16 @@@@ void frmMain::OnSelRightClick(wxTreeEvent &event)
 		// Prevent changes to "currentObject" by "execSelchange" function by another thread.
 		// Will hold the lock until we do popup on the respective object.
 		//
d32 2
a34 2
+	else
+		currentObjectMutex->Lock();
a36 7
 		doPopup(browser, event.GetPoint(), currentObject);
-	s_currentObjectMutex.Unlock();
+
+	currentObjectMutex->Unlock();
 }
 
 
@


1.1
log
@
Unbreak mutex hell
Add missing bdep on textproc/py-sphinx
Fix another couple of crashers (from upstream git)
Regen patches; regen pkg/PLIST

ok sthen@@, pea@@ (maintainer)
@
text
@d1 3
a3 3
$OpenBSD$
--- pgadmin/frm/events.cpp.orig	Fri Sep 27 16:51:46 2013
+++ pgadmin/frm/events.cpp	Thu Oct 23 12:46:41 2014
d17 1
a17 3
-		s_currentObjectMutex.Lock();
-		currentObject = browser->GetObject(item);
-		s_currentObjectMutex.Unlock();
d19 2
a20 1
+	currentObject = browser->GetObject(item);
@


1.1.2.1
log
@backport pgadmin3 crash fix from -current
@
text
@d1 1
a1 1
$OpenBSD: patch-pgadmin_frm_events_cpp,v 1.1 2014/10/24 15:01:18 dcoppa Exp $
@

