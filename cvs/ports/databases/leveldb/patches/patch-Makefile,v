head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.16
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.14
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.10
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.8
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	jasper_20111908:1.1.1.1
	jasper:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.03.21.21.30.30;	author pascal;	state Exp;
branches;
next	1.2;

1.2
date	2012.08.21.00.28.34;	author jmatthew;	state Exp;
branches;
next	1.1;

1.1
date	2011.08.19.06.44.00;	author jasper;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.08.19.06.44.00;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* Do not use SONAME, ok brad@@ benoit@@
* Fold PFRAG.shared into PLIST, ok benoit@@
@
text
@$OpenBSD: patch-Makefile,v 1.2 2012/08/21 00:28:34 jmatthew Exp $

Allow SHARED_MAJOR and SHARED_MINOR to be overridden.
This doesn't affect kMajorVersion and kMinorVersion in db.h,
but nothing uses them anyway.

Do not use SONAME.

--- Makefile.orig	Wed May 30 18:56:59 2012
+++ Makefile	Tue Mar 19 14:06:40 2013
@@@@ -69,8 +69,8 @@@@ SHARED3 = $(SHARED1)
 SHARED = $(SHARED1)
 else
 # Update db.h if you change these.
-SHARED_MAJOR = 1
-SHARED_MINOR = 5
+SHARED_MAJOR ?= 1
+SHARED_MINOR ?= 5
 SHARED1 = libleveldb.$(PLATFORM_SHARED_EXT)
 SHARED2 = $(SHARED1).$(SHARED_MAJOR)
 SHARED3 = $(SHARED1).$(SHARED_MAJOR).$(SHARED_MINOR)
@@@@ -82,7 +82,7 @@@@ $(SHARED2): $(SHARED3)
 endif
 
 $(SHARED3):
-	$(CXX) $(LDFLAGS) $(PLATFORM_SHARED_LDFLAGS)$(SHARED2) $(CXXFLAGS) $(PLATFORM_SHARED_CFLAGS) $(SOURCES) -o $(SHARED3)
+	$(CXX) $(LDFLAGS) $(PLATFORM_SHARED_LDFLAGS) $(CXXFLAGS) $(PLATFORM_SHARED_CFLAGS) $(SOURCES) -o $(SHARED3)
 
 endif  # PLATFORM_SHARED_EXT
 
@


1.2
log
@update to leveldb 1.5.0

ok sthen@@
-lpthread patch for jasper@@
@
text
@d1 1
a1 1
$OpenBSD: patch-Makefile,v 1.1.1.1 2011/08/19 06:44:00 jasper Exp $
d7 4
a10 2
--- Makefile.orig	Fri Aug 17 22:08:25 2012
+++ Makefile	Fri Aug 17 22:08:04 2012
d22 9
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD$
d3 3
a5 2
- Allow ${CC} and ${OPT} to be overriden, to help packagers.
  http://code.google.com/p/leveldb/issues/detail?id=32
d7 13
a19 62
- Provide a shared library
  http://code.google.com/p/leveldb/issues/detail?id=27

--- Makefile.orig	Fri Aug  5 22:40:49 2011
+++ Makefile	Thu Aug 18 17:18:19 2011
@@@@ -2,13 +2,15 @@@@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file. See the AUTHORS file for names of contributors.
 
-CC = g++
+CC ?= g++
 
+SONAME_MAJOR?=0
+SONAME_MINOR?=0
 #-----------------------------------------------
 # Uncomment exactly one of the lines labelled (A), (B), and (C) below
 # to switch between compilation modes.
 
-OPT = -O2 -DNDEBUG       # (A) Production use (optimized mode)
+OPT ?= -O2 -DNDEBUG       # (A) Production use (optimized mode)
 # OPT = -g2              # (B) Debug mode, w/ full line-level debugging symbols
 # OPT = -O2 -g2 -DNDEBUG # (C) Profiling mode: opt, but w/debugging symbols
 #-----------------------------------------------
@@@@ -36,7 +38,7 @@@@ else
 GOOGLE_PERFTOOLS_LDFLAGS=
 endif
 
-CFLAGS = -c -I. -I./include $(PORT_CFLAGS) $(PLATFORM_CFLAGS) $(OPT) $(SNAPPY_CFLAGS)
+CFLAGS += -c -I. -I./include $(PORT_CFLAGS) $(PLATFORM_CFLAGS) $(OPT) $(SNAPPY_CFLAGS) -fPIC
 
 LDFLAGS=$(PLATFORM_LDFLAGS) $(SNAPPY_LDFLAGS) $(GOOGLE_PERFTOOLS_LDFLAGS)
 
@@@@ -102,20 +104,28 @@@@ PROGRAMS = db_bench $(TESTS)
 BENCHMARKS = db_bench_sqlite3 db_bench_tree_db
 
 LIBRARY = libleveldb.a
+SHARED_LIBRARY = libleveldb.so
 
-all: $(LIBRARY)
+all: $(LIBRARY) $(SHARED_LIBRARY)
 
 check: $(PROGRAMS) $(TESTS)
 	for t in $(TESTS); do echo "***** Running $$t"; ./$$t || exit 1; done
 
 clean:
 	-rm -f $(PROGRAMS) $(BENCHMARKS) $(LIBRARY) */*.o */*/*.o ios-x86/*/*.o ios-arm/*/*.o
+	-rm -f $(SHARED_LIBRARY).* $(SHARED_LIBRARY)
 	-rm -rf ios-x86/* ios-arm/*
 	-rm build_config.mk
 
 $(LIBRARY): $(LIBOBJECTS)
 	rm -f $@@
 	$(AR) -rs $@@ $(LIBOBJECTS)
+
+$(SHARED_LIBRARY): $(LIBOBJECTS)
+	rm -f $@@
+	$(CC) -shared -Wl,-soname -Wl,$@@.$(SONAME_MAJOR) $(LIBOBJECTS) $(LDFLAGS) -o $@@.$(SONAME_MAJOR).$(SONAME_MINOR)
+	ln -s $@@.$(SONAME_MAJOR).$(SONAME_MINOR) $@@.$(SONAME_MAJOR)
+	ln -s $@@.$(SONAME_MAJOR).$(SONAME_MINOR) $@@
 
 db_bench: db/db_bench.o $(LIBOBJECTS) $(TESTUTIL)
 	$(CC) $(LDFLAGS) db/db_bench.o $(LIBOBJECTS) $(TESTUTIL) -o $@@
@


1.1.1.1
log
@import leveldb, svn rev 48

LevelDB is a fast key-value storage library written at Google that
provides an ordered mapping from string keys to string values.

Features:
  - Keys and values are arbitrary byte arrays.
  - Data is stored sorted by key.
  - Callers can provide a custom comparison function to override
    the sort order.
  - The basic operations are Put(key,value), Get(key), Delete(key).
  - Multiple changes can be made in one atomic batch.
  - Users can create a transient snapshot to get a consistent view
    of data.
  - Forward and backward iteration is supported over the data.

ok sthen@@
@
text
@@
