head	1.2;
access;
symbols
	OPENBSD_6_1:1.1.0.18
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.16
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.12
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.14
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.08.22.06.03.10;	author jasper;	state dead;
branches;
next	1.1;
commitid	lvamVvfI1CKgrIz7;

1.1
date	2012.08.21.00.28.34;	author jmatthew;	state Exp;
branches;
next	;


desc
@@


1.2
log
@level this port to the ground; while upstream moved forward this one
never leveled up and stuck behind.

ok fcambus@@ jmatthew@@
@
text
@$OpenBSD: patch-util_coding_cc,v 1.1 2012/08/21 00:28:34 jmatthew Exp $

Use the endianness #define from port_posix.h
See http://code.google.com/p/leveldb/issues/detail?id=110

--- util/coding.cc.orig	Thu Aug 16 12:00:57 2012
+++ util/coding.cc	Thu Aug 16 12:01:16 2012
@@@@ -7,7 +7,7 @@@@
 namespace leveldb {
 
 void EncodeFixed32(char* buf, uint32_t value) {
-#if __BYTE_ORDER == __LITTLE_ENDIAN
+#if PLATFORM_IS_LITTLE_ENDIAN
   memcpy(buf, &value, sizeof(value));
 #else
   buf[0] = value & 0xff;
@@@@ -18,7 +18,7 @@@@ void EncodeFixed32(char* buf, uint32_t value) {
 }
 
 void EncodeFixed64(char* buf, uint64_t value) {
-#if __BYTE_ORDER == __LITTLE_ENDIAN
+#if PLATFORM_IS_LITTLE_ENDIAN
   memcpy(buf, &value, sizeof(value));
 #else
   buf[0] = value & 0xff;
@


1.1
log
@update to leveldb 1.5.0

ok sthen@@
-lpthread patch for jasper@@
@
text
@d1 1
a1 1
$OpenBSD$
@

