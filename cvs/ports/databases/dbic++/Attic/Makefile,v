head	1.19;
access;
symbols
	OPENBSD_6_0:1.17.0.2
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.16.0.4
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.6
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.15.0.4
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.2
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.8.0.2
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	jeremy_2010-Dec-20:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.19
date	2016.10.31.21.32.10;	author jeremy;	state dead;
branches;
next	1.18;
commitid	nMAMVcGCVqCphO7D;

1.18
date	2016.09.23.09.16.52;	author sthen;	state Exp;
branches;
next	1.17;
commitid	XLnI6AbHAmyVU5mO;

1.17
date	2016.03.18.23.12.15;	author naddy;	state Exp;
branches;
next	1.16;
commitid	KZAl4KEiw6a3Jixw;

1.16
date	2014.09.13.18.09.20;	author brad;	state Exp;
branches;
next	1.15;
commitid	PpbRjVZdAmlrmi8q;

1.15
date	2013.10.01.09.07.14;	author ajacoutot;	state Exp;
branches;
next	1.14;

1.14
date	2013.06.21.22.37.02;	author sthen;	state Exp;
branches;
next	1.13;

1.13
date	2013.06.12.20.36.33;	author brad;	state Exp;
branches;
next	1.12;

1.12
date	2013.05.25.00.33.09;	author brad;	state Exp;
branches;
next	1.11;

1.11
date	2013.03.11.02.52.04;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2012.09.28.07.52.14;	author dcoppa;	state Exp;
branches;
next	1.9;

1.9
date	2012.09.27.07.23.55;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2012.04.23.17.15.17;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2012.04.06.19.25.23;	author jeremy;	state Exp;
branches;
next	1.6;

1.6
date	2011.09.16.08.48.02;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2011.08.17.15.43.52;	author nigel;	state Exp;
branches;
next	1.4;

1.4
date	2011.07.05.21.25.04;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2011.04.02.16.56.42;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.14.18.30.33;	author jeremy;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.20.17.39.55;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.12.20.17.39.55;	author jeremy;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Remove dbic++

Originally added to support ruby-swift, which is also being removed. Dead
upstream for the last four years, and no known users.

OK ajacoutot@@
@
text
@# $OpenBSD: Makefile,v 1.18 2016/09/23 09:16:52 sthen Exp $

COMMENT=		C++ database API

DISTNAME=		deepfryed-dbicpp-v0.6.0
PKGNAME=		dbic++-0.6.0
REVISION=		7
CATEGORIES=		databases
HOMEPAGE=		https://github.com/deepfryed/dbicpp

SHARED_LIBS +=  dbdmysql                  2.0 # 1.0
SHARED_LIBS +=  dbdpg                     2.0 # 1.0
SHARED_LIBS +=  dbdsqlite3                1.0 # 1.0

# MIT
PERMIT_PACKAGE_CDROM=	Yes

# port-lib-depends-check says that uuid and pcrecpp are
# Extra, but they are used in a .a file that doesn't have a
# .so shared library equivalent.
WANTLIB =		uuid m mysqlclient pcrecpp pq stdc++ sqlite3

MASTER_SITES=		https://distfiles.bsdfrog.org/

MODULES =		devel/cmake

LIB_DEPENDS=		databases/mariadb \
			databases/postgresql \
			databases/sqlite3 \
			devel/pcre \
			sysutils/e2fsprogs>=1.42.7

CONFIGURE_ARGS+=	-DCMAKE_MYSQL_VERSION=${LIBdbdmysql_VERSION} \
			-DCMAKE_PG_VERSION=${LIBdbdpg_VERSION} \
			-DCMAKE_SQLITE3_VERSION=${LIBdbdsqlite3_VERSION}

WRKDIST=		${WRKDIR}/deepfryed-dbicpp

NO_TEST=		Yes

post-extract:
	mv ${WRKDIR}/deepfryed-dbicpp-* ${WRKDIR}/deepfryed-dbicpp

pre-configure:
	${SUBST_CMD} ${WRKSRC}/{inc/dbic++.h,src/dbic++.cc,pkgconfig/dbic++.pc}

.include <bsd.port.mk>
@


1.18
log
@Cope with moving sqlite3 back to ports.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2016/03/18 23:12:15 naddy Exp $
@


1.17
log
@remove SHARED_ONLY from ports that only use modules that neither set nor
read this variable
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2014/09/13 18:09:20 brad Exp $
d7 1
a7 1
REVISION=		6
d29 1
@


1.16
log
@Switch from using MySQL to using MariaDB attempt #2. MariaDB is a drop-in replacement.

ok sthen@@
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.15 2013/10/01 09:07:14 ajacoutot Exp $

SHARED_ONLY=		Yes
@


1.15
log
@distfiles.bsdfrog.org: http -> https
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2013/06/21 22:37:02 sthen Exp $
d9 1
a9 1
REVISION=		5
d29 1
a29 1
LIB_DEPENDS=		databases/mysql \
@


1.14
log
@sync WANTLIB and remove patches to handle e2fsprogs/libuuid changes. ok aja
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2013/06/12 20:36:33 brad Exp $
d25 1
a25 1
MASTER_SITES=		http://distfiles.bsdfrog.org/
@


1.13
log
@Revert back to using MySQL 5.1 for the time being. MariaDB 5.5 introduces
a new libmysqlclient non-blocking API which utilizes co-routines. The X86
specific GCC ASM co-routine support hid the fact that there was an issue.
The only fallback code so far is POSIX user contexts which OpenBSD does not
support.

Input from and Ok sthen@@ jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2013/05/25 00:33:09 brad Exp $
d9 1
a9 1
REVISION=		4
d20 1
a20 1
# port-lib-depends-check says that e2fs-uuid and pcrecpp are
d23 1
a23 1
WANTLIB =		e2fs-uuid m mysqlclient pcrecpp pq stdc++ sqlite3
d32 1
a32 1
			sysutils/e2fsprogs
@


1.12
log
@Switch from using MySQL to using MariaDB. MariaDB is a drop-in replacement.


ok sthen aja
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2013/03/11 02:52:04 espie Exp $
d9 1
a9 1
REVISION=		3
d29 1
a29 1
LIB_DEPENDS=		databases/mariadb \
@


1.11
log
@PERMIT_* / REGRESS->TEST sweep
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2012/09/28 07:52:14 dcoppa Exp $
d9 1
a9 1
REVISION =		2
d29 2
a30 2
LIB_DEPENDS=		mysql-client->=5:databases/mysql \
			postgresql-client->=8.4:databases/postgresql \
@


1.10
log
@Fix .pc file
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2012/09/27 07:23:55 dcoppa Exp $
a18 3
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes
d40 1
a40 1
NO_REGRESS=		Yes
@


1.9
log
@Fix misuse of CMake

OK jeremy@@, sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2012/04/23 17:15:17 espie Exp $
d9 1
a9 1
REVISION =		1
@


1.8
log
@first pass at handling sqlite3 move
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2012/04/06 19:25:23 jeremy Exp $
d9 1
a9 1
REVISION =		0
d30 2
a31 2
BUILD_DEPENDS=		devel/cmake \
			shells/bash
d37 4
a40 1
CONFIGURE_STYLE=	none
d49 1
a49 8
	${SUBST_CMD} ${WRKSRC}/{CMakeLists.txt,inc/dbic++.h,src/dbic++.cc,pkgconfig/dbic++.pc}

do-build:
	cd ${WRKSRC} && ${SET_ENV} ${MAKE_ENV} ${LOCALBASE}/bin/bash build

do-install:
	cd ${WRKSRC} && ${SET_ENV} ${MAKE_ENV} \
		${LOCALBASE}/bin/bash build -i
@


1.7
log
@Update to dbic++ 0.6.0. Minor Makefile cleanup so that
WRKDIST doesn't need to change.  Remove getline->fgenln
patch now that getline is natively supported.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2011/09/16 08:48:02 espie Exp $
d9 1
a33 1
			sqlite3->=3.7:databases/sqlite3 \
@


1.6
log
@normalize pkgpath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2011/08/17 15:43:52 nigel Exp $
d7 2
a8 2
DISTNAME=		deepfryed-dbicpp-g466860f
PKGNAME=		dbic++-0.5.6
a10 1
REVISION =		0
d12 3
a14 3
SHARED_LIBS +=  dbdmysql                  1.0 # 0.0
SHARED_LIBS +=  dbdpg                     1.0 # 0.0
SHARED_LIBS +=  dbdsqlite3                0.0 # 0.0
d38 1
a38 1
WRKDIST=		${WRKDIR}/deepfryed-dbicpp-4fe45f7
d42 3
d49 1
a49 1
	cd ${WRKSRC} && ${SET_ENV} ${MAKE_ENV} ${LOCALBASE}/bin/bash build.sh
d53 1
a53 1
		${LOCALBASE}/bin/bash build.sh -i
@


1.5
log
@remove unecessary ${SUDO} causes build failure with sudo

ok landry@@ sthen@@ aja@@ jeremy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2011/07/05 21:25:04 jasper Exp $
d11 1
@


1.4
log
@at least pretend to care about tabs
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2011/04/02 16:56:42 ajacoutot Exp $
d50 1
a50 1
		${SUDO} ${LOCALBASE}/bin/bash build.sh -i
@


1.3
log
@Simplify: use my distfiles subdomain.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2011/03/14 18:30:33 jeremy Exp $
d40 2
d43 1
a43 1
			${SUBST_CMD} ${WRKSRC}/{CMakeLists.txt,inc/dbic++.h,src/dbic++.cc,pkgconfig/dbic++.pc}
d46 1
a46 1
			cd ${WRKSRC} && ${SET_ENV} ${MAKE_ENV} ${LOCALBASE}/bin/bash build.sh
d49 2
a50 4
			cd ${WRKSRC} && ${SET_ENV} ${MAKE_ENV} \
				${SUDO} ${LOCALBASE}/bin/bash build.sh -i

NO_REGRESS=		Yes
@


1.2
log
@Bump version to 0.5.6, adding SQLite3 support.

OK landry@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2010/12/20 17:39:55 jeremy Exp $
d27 1
a27 1
MASTER_SITES=		http://www.bsdfrog.org/OpenBSD/distfiles/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2010/10/24 21:07:50 ajacoutot Exp $
d7 2
a8 2
DISTNAME=		deepfryed-dbicpp-74e3352
PKGNAME=		dbic++-0.4.1
d10 1
a10 1
HOMEPAGE=		http://github.com/deepfryed/dbicpp
d12 3
a14 2
SHARED_LIBS +=  dbdmysql                  0.0 # 0.0
SHARED_LIBS +=  dbdpg                     0.0 # 0.0
d25 1
a25 1
WANTLIB =		e2fs-uuid m mysqlclient pcrecpp pq stdc++ 
d33 1
d38 1
a38 1
WRKDIST=		${WRKDIR}/${PKGNAME}
d40 2
a41 2
post-extract:
			cd ${WRKDIR} && mv ${DISTNAME} ${PKGNAME}
d44 1
a44 1
			cd ${WRKSRC} && ${SET_ENV} ${MAKE_ENV} bash build.sh
d48 1
a48 1
				${SUDO} bash build.sh -i
a50 1

@


1.1.1.1
log
@Import dbic++ 0.4.1, dependency of ruby-swift

dbic++ is a database client library written in C++ which comes with
support for PostgreSQL and MySQL. It's main features are:
* Simple API to maximize cross database support.
* Supports nested transactions.
* Auto reconnect, re-prepare & execute statements again unless inside
  a transaction.
* Provides APIs for async queries and a simple reactor API built on
  libevent.
@
text
@@
