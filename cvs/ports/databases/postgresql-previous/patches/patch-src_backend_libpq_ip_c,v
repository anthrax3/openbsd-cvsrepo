head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.4
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	jeremy_2016-Dec-18:1.1.1.1
	jeremy:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.12.18.18.13.25;	author jeremy;	state Exp;
branches
	1.1.1.1;
next	;
commitid	tINvRpNtZF0xww69;

1.1.1.1
date	2016.12.18.18.13.25;	author jeremy;	state Exp;
branches;
next	;
commitid	tINvRpNtZF0xww69;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD: patch-src_backend_libpq_ip_c,v 1.2 2016/02/13 21:54:28 sthen Exp $

Use the address family from the address, not from the netmask,
since the latter is unreliable. Fixes "samenet"/"samehost".

--- src/backend/libpq/ip.c.orig	Mon Feb  8 21:15:19 2016
+++ src/backend/libpq/ip.c	Fri Feb 12 17:18:09 2016
@@@@ -423,17 +423,16 @@@@ run_ifaddr_callback(PgIfAddrCallback callback, void *c
 	/* Check that the mask is valid */
 	if (mask)
 	{
-		if (mask->sa_family != addr->sa_family)
+
+		/* mask->sa_family can be different from addr->sa_family. */
+
+		if (addr->sa_family == AF_INET)
 		{
-			mask = NULL;
-		}
-		else if (mask->sa_family == AF_INET)
-		{
 			if (((struct sockaddr_in *) mask)->sin_addr.s_addr == INADDR_ANY)
 				mask = NULL;
 		}
 #ifdef HAVE_IPV6
-		else if (mask->sa_family == AF_INET6)
+		else if (addr->sa_family == AF_INET6)
 		{
 			if (IN6_IS_ADDR_UNSPECIFIED(&((struct sockaddr_in6 *) mask)->sin6_addr))
 				mask = NULL;
@


1.1.1.1
log
@Import postgresql-previous 9.5.5

This imports the previous version of PostgreSQL supported
by the ports tree into a versioned directory.  It's
designed for use by pg_upgrade, which allows upgrading of
PostgreSQL databases without a dump and restore.

OK pea@@ landry@@

@
text
@@
