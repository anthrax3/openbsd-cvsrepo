head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.24
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.22
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.18
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.20
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.16
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.14
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.12
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	pea_20100708:1.1.1.1
	pea:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2011.03.14.09.17.26;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.08.16.23.54;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2010.07.08.16.18.06;	author pea;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.07.08.16.18.06;	author pea;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fix various typos, from Anthony J. Bentley with a few tweaks by myself
@
text
@PgBouncer is a lightweight connection pooler for PostgreSQL.

Features:
* Several levels of brutality when rotating connections:
  + Session pooling
Most polite method. When client connects, a server connection will
be assigned to it for the whole duration it stays connected. When
client disconnects, the server connection will be put back into
pool. This mode supports all PostgreSQL features.
  + Transaction pooling
Server connection is assigned to client only during a transaction.
When PgBouncer notices that transaction is over, the server will be
put back into pool.  This mode breaks few session-based features of
PostgreSQL. You can use it only when application cooperates by not
using features that break. See the table below for incompatible
features.
  + Statement pooling
Most aggressive method. This is transaction pooling with a twist -
multi-statement transactions are disallowed. This is meant to
enforce "autocommit" mode on client, mostly targeted for PL/Proxy.

* Low memory requirements (2k per connection by default). This is due to
the fact that PgBouncer does not need to see full packet at once.  
* It is not tied to one backend server, the destination databases can reside 
on different hosts.  
* Supports online reconfiguration for most of the settings.
* Supports online restart/upgrade without dropping client connections.  
* Supports protocol V3 only, so backend version must be >= 7.4.
@


1.2
log
@Remove trailing blank lines from DESCR.
Don't hardcode /etc, use SYSCONFDIR.
@
text
@d9 1
a9 1
pool. This mode supports all PostgeSQL features.
@


1.1
log
@Initial revision
@
text
@a28 2


@


1.1.1.1
log
@Import pgbouncer.
PgBouncer is a lightweight connection pooler for PostgreSQL.

With tweaks from jasper@@
ok jasper@@

@
text
@@
