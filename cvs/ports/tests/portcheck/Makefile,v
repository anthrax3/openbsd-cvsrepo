head	1.18;
access;
symbols
	OPENBSD_6_1:1.18.0.4
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.2
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.4
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.2
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7
	zhuk_20140204:1.1.1.1
	zhuk:1.1.1;
locks; strict;
comment	@# @;


1.18
date	2016.03.28.15.37.12;	author zhuk;	state Exp;
branches;
next	1.17;
commitid	nC5VoOO3Pif0PQFw;

1.17
date	2015.07.05.12.32.44;	author zhuk;	state Exp;
branches;
next	1.16;
commitid	b480wMyWGVRzcT4Q;

1.16
date	2015.04.15.08.19.48;	author zhuk;	state Exp;
branches;
next	1.15;
commitid	oh0EovC4qi5KX7S4;

1.15
date	2015.04.12.20.43.13;	author zhuk;	state Exp;
branches;
next	1.14;
commitid	WaxXEzqBhZQ8o1dI;

1.14
date	2014.07.10.10.04.34;	author zhuk;	state Exp;
branches;
next	1.13;
commitid	bi4VtzxZEMdRFORH;

1.13
date	2014.05.19.00.59.30;	author zhuk;	state Exp;
branches;
next	1.12;

1.12
date	2014.05.08.15.44.42;	author zhuk;	state Exp;
branches;
next	1.11;

1.11
date	2014.05.07.22.28.05;	author zhuk;	state Exp;
branches;
next	1.10;

1.10
date	2014.05.06.11.02.04;	author zhuk;	state Exp;
branches;
next	1.9;

1.9
date	2014.04.27.17.59.21;	author zhuk;	state Exp;
branches;
next	1.8;

1.8
date	2014.04.19.18.12.55;	author zhuk;	state Exp;
branches;
next	1.7;

1.7
date	2014.02.09.18.14.41;	author zhuk;	state Exp;
branches;
next	1.6;

1.6
date	2014.02.09.16.12.17;	author zhuk;	state Exp;
branches;
next	1.5;

1.5
date	2014.02.09.15.12.24;	author zhuk;	state Exp;
branches;
next	1.4;

1.4
date	2014.02.04.21.18.14;	author zhuk;	state Exp;
branches;
next	1.3;

1.3
date	2014.02.04.17.02.13;	author zhuk;	state Exp;
branches;
next	1.2;

1.2
date	2014.02.03.22.40.25;	author zhuk;	state Exp;
branches;
next	1.1;

1.1
date	2014.02.03.22.28.41;	author zhuk;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.02.03.22.28.41;	author zhuk;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Hook up recently added test.
@
text
@# $OpenBSD: Makefile,v 1.17 2015/07/05 12:32:44 zhuk Exp $

# To add a test named ${testname}:
#  1) If test should catch errors, add sample portcheck output to the
#     ${testname}.sample file in this directory. Otherwise, this file should
#     absent.
#  2) Create test port directory with ${testname} name.
#  3) Add the test to REGRESS_TARGETS.
#  4) If the test doesn't need running plist checks, add the -P to the
#     TEST_${testname}_ARGS variable. Do this in the "test-specific parameters"
#     section below.

# user-customizeable
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18
PORTCHECK ?=		${PORTSDIR}/infrastructure/bin/portcheck
PORTCHECK_ARGS ?=
SUBST_CMD ?=		${PORTSDIR}/infrastructure/bin/pkg_subst

# internal stuff, non-customizable
PORTCHECK_ROOT_DIR =	${.CURDIR:C,/[^/]+/*$,,}
CATEGORY =		${.CURDIR:C,^${PORTSDIR}/,,}
SUBST_ARGS =		-c -DCATEGORY=${CATEGORY}
SCANNING_MSG =		"scanning ports under the ${PORTSDIR}"

# test-specific parameters
TEST_t1_ARGS =	-N
TEST_t3_ARGS =	-A ${CATEGORY}/t3
TEST_t4_ARGS =	-A -P ${CATEGORY}/t4
TEST_t5_ARGS =	-N
TEST_t7_ARGS =	-P
TEST_t8_ARGS =	-P
TEST_t9_ARGS =	-P
TEST_t13_ARGS =	-P
TEST_t14_ARGS =	-P
TEST_t15_ARGS =	-P
TEST_t16_ARGS =	-P
TEST_t17_ARGS =	-P

# define tests
.for _t in ${REGRESS_TARGETS}
TEST_${_t}_ARGS ?=
TEST_${_t}_DIR =	${.CURDIR}/${_t}
TEST_${_t}_DIFF_OPTS =
. if ${TEST_${_t}_ARGS:M-A}
TEST_${_t}_DIFF_OPTS +=	-I ${SCANNING_MSG}
. endif

# will exist if and only if portcheck returned non-zero
TEST_${_t}_FAIL =	${_t}.failed

# output of portcheck's stdout and stderr
TEST_${_t}_OUT =	${_t}.pkgpath
TEST_${_t}_ERR =	${_t}.errors

CLEANFILES +=		${TEST_${_t}_FAIL} ${TEST_${_t}_ERR} ${TEST_${_t}_OUT}

# sample error list, to compare with actual portcheck output
TEST_${_t}_SAMPLE_SRC =	${.CURDIR}/${_t}.sample

# same as above but after substitution, needed for path independancy
TEST_${_t}_SAMPLE =	${_t}.sample.subst
CLEANFILES +=		${TEST_${_t}_SAMPLE}

. if exists(${TEST_${_t}_SAMPLE_SRC})
${TEST_${_t}_SAMPLE}: ${TEST_${_t}_SAMPLE_SRC}
	@@${SUBST_CMD} ${SUBST_ARGS} -DTEST=${_t} $> $@@
${_t}: ${TEST_${_t}_SAMPLE}
. endif

${_t}:
	@@echo '=> ${_t}'
	@@rm -f ${TEST_${_t}_FAIL}
	@@(cd ${TEST_${_t}_DIR}; ${PORTCHECK} ${TEST_${_t}_ARGS}) \
	  >${TEST_${_t}_OUT} 2>${TEST_${_t}_ERR} || touch ${TEST_${_t}_FAIL}

. if exists(${TEST_${_t}_SAMPLE_SRC})
# there should be errors printed and portcheck should exit with non-zero code
	@@test -e ${TEST_${_t}_FAIL} || echo "${_t}: portcheck did not fail"
	@@sort <${TEST_${_t}_ERR} | \
	    diff -u ${TEST_${_t}_DIFF_OPTS} ${TEST_${_t}_SAMPLE} -
. else
# there should be NO errors printed and portcheck should exit with zero code
	@@test ! -e ${TEST_${_t}_FAIL} || echo "${_t}: portcheck did not succeed"

# in -A mode, portcheck still prints to stderr ${SCANNING_MSG}
.  if ${TEST_${_t}_ARGS:M-A}
	@@echo ${SCANNING_MSG} | \
	   diff -u ${TEST_${_t}_DIFF_OPTS} - ${TEST_${_t}_ERR}
.  else
	@@test ! -s ${TEST_${_t}_ERR} || { \
		echo "${_t}: portcheck printed errors:"; \
		cat ${TEST_${_t}_ERR}; \
	}
.  endif
. endif

. if ${TEST_${_t}_ARGS:M-A}
	@@test ! -s ${TEST_${_t}_OUT} || { \
		echo "${_t}: portcheck printed on stdout:"; \
		cat ${TEST_${_t}_OUT}; \
	}
. else
	@@echo ${CATEGORY}/${_t} | \
	    diff -u ${TEST_${_t}_DIFF_OPTS} - ${TEST_${_t}_OUT}
. endif

.PHONY: ${_t}
.endfor

.include <bsd.regress.mk>
@


1.17
log
@Add a test of presence of user settings in port Makefiles.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2015/04/15 08:19:48 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17
@


1.16
log
@Hook up t16 (categories misspelling test).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2015/04/12 20:43:13 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16
d37 1
@


1.15
log
@Hook up GH_COMMIT test.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2014/07/10 10:04:34 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15
d36 1
@


1.14
log
@Add a test for stdc++ and gcc4.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2014/05/19 00:59:30 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14
d35 1
@


1.13
log
@Hook up new tests.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2014/05/08 15:44:42 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13
d34 1
@


1.12
log
@Adjust tests after recent changes, including separate tests for the case
of correct devel/dconf dependency.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2014/05/07 22:28:05 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12
d33 1
@


1.11
log
@Add tests for GLib2 XML schema handling.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2014/05/06 11:02:04 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11
@


1.10
log
@Tests for manual pages placement.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2014/04/27 17:59:21 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7 t8 t9 t10
@


1.9
log
@Add tests for PERMIT_* handling in portcheck.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2014/04/19 18:12:55 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7 t8 t9
@


1.8
log
@No need to use .PHONY twice: get rid of more offending one.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2014/02/09 18:14:41 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7 t8
d32 1
@


1.7
log
@Hook up new test.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2014/02/09 16:12:17 zhuk Exp $
d64 1
a64 1
${_t}: .PHONY
@


1.6
log
@Hook new test.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2014/02/09 15:12:24 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6 t7
d31 1
@


1.5
log
@Hook up gtk-update-icon-cache test.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2014/02/04 21:18:14 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5 t6
d30 1
@


1.4
log
@Face the reality: portcheck(1) is heavily used now, and not only for new
ports. Given that you import port once but update it a few times, make
the update mode (-CU) default for portcheck, and provide a "new port"
switch (-N) instead.

This commit updates portcheck(1) and portimport(1): code, documentation and
tests. The WWW stuff will be updated separately.

Note: regression suite fails now as it detected an actual misconsistence
in portcheck's output. This will be handled ASAP, too.

Initial prodding by naddy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/02/04 17:02:13 zhuk Exp $
d14 1
a14 1
REGRESS_TARGETS ?=	t1 t2 t3 t4 t5
@


1.3
log
@Avoid false positives due to the difference in which files are picked up by
portcheck, by sorting the error output and comparing with (pre-sorted)
samples instead.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2014/02/03 22:40:25 zhuk Exp $
d26 1
a26 2
TEST_t1_ARGS =	-C
TEST_t2_ARGS =	-C
d29 1
a29 1
TEST_t5_ARGS =	-C
@


1.2
log
@Avoid tests fail after import to CVS. One error still left, a totally
separate issue.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2014/02/03 22:28:41 zhuk Exp $
d72 2
a73 1
	@@diff -u ${TEST_${_t}_DIFF_OPTS} ${TEST_${_t}_SAMPLE} ${TEST_${_t}_ERR}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d26 2
d30 1
@


1.1.1.1
log
@Import regression tests suite for portcheck. With help support from espie@@
and suggestions from others. A few files need to be added manually in the
next commit.
@
text
@@
