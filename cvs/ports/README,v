head	1.22;
access;
symbols
	OPENBSD_6_0:1.21.0.10
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.6
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.8
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.4
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.2
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.20.0.10
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.8
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.6
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.4
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.2
	OPENBSD_5_0:1.19.0.4
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.19.0.2
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.18.0.6
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.18.0.4
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.18.0.2
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.17.0.20
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.18
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.16
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.14
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.17.0.12
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.10
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.8
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.17.0.6
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.17.0.4
	OPENBSD_3_7_BASE:1.17
	OPENBSD_3_6:1.17.0.2
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.16.0.2
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.14.0.2
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.10.0.4
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_TRACKING_SWITCH:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.8.0.6
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.4
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2;
locks; strict;
comment	@# @;


1.22
date	2016.10.17.16.26.52;	author danj;	state Exp;
branches;
next	1.21;
commitid	O3L1T6MV7a7HDJLi;

1.21
date	2014.07.11.10.38.01;	author ajacoutot;	state Exp;
branches;
next	1.20;
commitid	pZ3boOUrfmHW14KU;

1.20
date	2011.11.15.18.33.16;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	2010.08.31.03.28.43;	author lum;	state Exp;
branches;
next	1.18;

1.18
date	2009.03.13.10.03.29;	author giovanni;	state Exp;
branches;
next	1.17;

1.17
date	2004.07.25.00.15.32;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2003.09.23.01.40.26;	author pvalchev;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.15.21.09.31;	author avsm;	state Exp;
branches;
next	1.14;

1.14
date	2003.03.01.09.09.16;	author david;	state Exp;
branches;
next	1.13;

1.13
date	2002.08.18.17.44.01;	author fgsch;	state Exp;
branches;
next	1.12;

1.12
date	2002.04.21.03.59.37;	author pvalchev;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.01.22.59.37;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2001.04.11.15.57.50;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2001.02.21.23.23.13;	author avsm;	state Exp;
branches;
next	1.8;

1.8
date	99.10.07.16.44.28;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	99.10.07.14.35.52;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	99.09.26.10.52.55;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	99.09.25.14.45.27;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	98.10.09.00.15.35;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	98.10.09.00.13.06;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	98.03.29.18.29.45;	author joey;	state Exp;
branches;
next	1.1;

1.1
date	98.01.05.15.13.24;	author joey;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Mention bulk(8)
ok espie@@
@
text
@Documentation for the ports tree: ports(7), packages(7), mirroring-ports(7),
library-specs(7), bsd.port.mk(5), bsd.port.arch.mk(5), port-modules(5).

dpb(1), bulk(8) (manpages under ${PORTSDIR}/infrastructure/man) for bulk builds.

See also the OpenBSD Porter's Handbook http://www.openbsd.org/faq/ports/

$OpenBSD: README,v 1.21 2014/07/11 10:38:01 ajacoutot Exp $
@


1.21
log
@Fix path to dpb(1).
@
text
@d4 1
a4 1
dpb(1) (manpage under ${PORTSDIR}/infrastructure/man) for bulk builds.
d8 1
a8 1
$OpenBSD: README,v 1.20 2011/11/15 18:33:16 espie Exp $
@


1.20
log
@wee little additions
@
text
@d4 1
a4 1
dpb(1) (manpage under ${PORTSDIR}/man) for bulk builds.
d8 1
a8 1
$OpenBSD: README,v 1.19 2010/08/31 03:28:43 lum Exp $
@


1.19
log
@Repoint URL to OpenBSD Porters Handbook.

ok espie@@
@
text
@d2 3
a4 1
library-specs(7), bsd.port.mk(5), port-modules(5).
d8 1
a8 1
$OpenBSD: README,v 1.18 2009/03/13 10:03:29 giovanni Exp $
@


1.18
log
@
Mention port-modules(5) and library-specs(7)
Ok sthen@@
@
text
@d4 1
a4 1
See also http://www.openbsd.org/porting.html
d6 1
a6 1
$OpenBSD: README,v 1.17 2004/07/25 00:15:32 espie Exp $
@


1.17
log
@kill this. replace with a pointer to actual documentation.
Either it's redundant, or people are not going to look there.
and it's going to be out of date, all the time, anyways.

okay pvalchev@@
@
text
@d2 1
a2 1
bsd.port.mk(5).
d4 1
a4 1
See also http://www.openbsd.org/
d6 1
a6 1
$OpenBSD$
@


1.16
log
@change references to db/essentials and fix a typo in the process
@
text
@d1 2
d4 1
a4 5
		Welcome to the OpenBSD ports collection.  
	For more information on the OpenBSD ports tree please visit
        	   http://www.openbsd.org/ports.html
	For general information on the OpenBSD tree please visit
			http://www.openbsd.org
d6 1
a6 286

======================================================================

This file is mostly obsolete. You should refer to the corresponding
man-pages: ports(7), packages(7), mirroring-ports(7), packages-specs (7),
and bsd.port.mk(5) instead.

======================================================================

Contacts
========
* individual ports have a MAINTAINER.
Go to the port directory and use make show=MAINTAINER to see it.
* ports without explicit maintainers, and other general issues should
go to ports@@openbsd.org

Considering the size of the ports tree, and even though we strive to
eradicate all bugs, things may go wrong on individual ports.  
In such a case, as a general rule, try to contact the MAINTAINER first.  
If nothing happens after a reasonable delay, start plaguing him, 
or go to the next step.

Developers with a major investment in the ports tree include
Brad Smith <brad@@openbsd.org>, Christian Weisgerber <naddy@@openbsd.org>, 
Marc Espie <espie@@openbsd.org>.

Those people can be contacted to put some pressure on a lazy maintainer.
But we do read ports@@openbsd.org, so...

The ports tree
==============
The ports tree usually live under /usr/ports. It's a hierarchical
list of recipes to build various pieces of software.
We'll call that PORTSDIR in the following discussion.
Stuff that doesn't constitute a port proper, but rather paraphernalia,
is stored under /usr/ports/infrastructure, INFRA in the following
discussion.

The main Makefile, PORTSDIR/Makefile, can be used to obtain various
information.

* make search key=<keyword>
will locate ports that match the given keyword in the INDEX and print
information about them.

* make index
can be used to rebuild that INDEX, normally useful after you update your
ports dir through cvs.

* make readmes
will populate the ports tree with a set of html indices (currently somewhat
broken).

The script INFRA/build/out-of-date will find
discrepancies between your installed packages and the INDEX. This might
give you an hint as to what you would need to rebuild to update a machine.

Some useful `make' trivia
=========================
* if you always use some make variables, e.g., DISTDIR, CLEANDEPENDS, or
MASTER_SITE_OVERRIDE you can put this in your local make configuration 
file instead: /etc/mk.conf.
* starting with 2.6, make can deal with case issues, so CLEANDEPENDS=Yes
or CLEANDEPENDS=YES or even CLEANDEPENDS=yEs should be equivalent.
* the make process uses some subroutines out of /usr/share/mk. Starting
with 2.6, the `port' subroutines live in INFRA/mk.
The bsd.port.mk and bsd.port.subdir.mk in /usr/share/mk are only stubs
that redirect to those files.

Building a port
===============
It's usually as simple as 
cd category/portname && make && make install

That specific `make' will normally
* resolve dependencies and go out to install required ports recursively
* fetch the software source (`distfiles' and `distribution patches') 
from the available media into your repository
* extract the source
* apply distribution patches and OpenBSD patches
* build the program

`make install' will
* install the software in a special playpen directory (the fake area)
* create a binary package out of that fake-install
* install the package on your system

Some ports can have some options (flavors), or demand that you make some choice 
before building, e.g.,
cd /usr/ports/editors/vim/stable
env FLAVOR=no_x11 make all install

Some ports may give you some information about ways to build them.
Likewise, installing or uninstalling
a package may give you useful information. READ IT.

You can also use
* `make clean=install' to remove the installed software (calls pkg_delete)
* `make package' to create a binary package without necessarily installing
it.  Packages normally end up in /usr/ports/packages/${MACHINE_ARCH}, 
overridable with PACKAGES.
* `make clean=package' to remove a previously built package.
* `make clean' to remove all scaffolding after the port is built and
installed.
* `make clean=dist' to also remove distfiles and distribution patches 
from the repository
* `make clean=depends' will also remove sub ports that have been
recursively built.
* `make clean="depends dist"', guess what this does.

Please note that, in normal use, the OpenBSD ports tree will grow quite
a lot.  Starting with OpenBSD 3.0, working directories for packaged ports 
can be cleaned out. See the bulk-packages target. 
However, the distfiles and built
packages still can take a lot of space (over 1 Gb).
You can redirect ports activity elsewhere by making use of WRKOBJDIR, 
DISTDIR and PACKAGES.  `find /usr/ports -type d -name w-\* -print' 
can be useful to find out ports you forgot to clean out.

Where do the distfiles come from
================================
Retrieving distfiles is a subpart of `make' that can be invoked separately
as `make fetch'.

Starting with 2.6, the fetch process is configurable by editing 
INFRA/db/network.conf.

The ports tree does store files it retrieves in a repository area,
normally /usr/ports/distfiles (defined as DISTDIR=${PORTSDIR}/distfiles;
you can override this if you need; e.g., assuming you've got a cdrom
full of distfiles mounted under /cdrom, you can make stuff with 
DISTDIR=/cdrom/distfiles, provided all the distfiles are available on
the CD-Rom).

If the file is found in the repository, the build process continues.
In some rare cases, vendors change their archive contents without changing
the archive name, so the file in the repository may end up having a wrong
checksum. Or, if you aborted a network transfer, the file in the repository
may be truncated, and end up having a wrong checksum again. In such a case,
manual intervention is required (it was deemed that such problems may need
human expertise and that blindly removing distfiles was not a good idea).
It's usually as simple as deleting the offending file, or doing a 
make distclean.

To avoid building from corrupted archives, the ports tree holds checksums
for almost all files it retrieves from other media (a few ports ignore 
checksums from the files listed in IGNOREFILES).
Those are strong cryptographic checksums: sha1, rmd160, and md5, 
in that order.  See CIPHERS and PREFERRED_CIPHERS in 
INFRA/mk/bsd.port.mk for details.

If the directory /cdrom/distfiles exist, available distfiles are copied
off that directory to your repository.  You can avoid the copy overhead
by defining FETCH_SYMLINK_DISTFILES.  You can give another location for
the distfiles as CDROM_SITE.

OpenBSD `ftp' command is normally used to fetch distfiles off the net,
so all file addresses are given in URL format.
Each port uses its own set of sites, and there should also be backups of
the distribution files on ftp.openbsd.org.  MASTER_SITE_BACKUP holds an
overridable list of backup sites, normally
ftp://ftp.openbsd.org/pub/OpenBSD/distfiles/${DIST_SUBDIR}/
ftp://ftp.freebsd.org/pub/FreeBSD/distfiles/${DIST_SUBDIR}/

You can ask the fetch process to try to retrieve files from those sites first
by setting MASTER_SITE_OVERRIDE, e.g., 
make MASTER_SITE_OVERRIDE='${MASTER_SITE_BACKUP}'

You can retrieve file from the OpenBSD site only with
make MASTER_SITE_OPENBSD=Yes

Continuing our CD-Rom example, you could also fetch files off a CD-Rom into
your repository for safe-keeping by using the following incantation:
make fetch MASTER_SITE_OVERRIDE='file:/cdrom/${DIST_SUBDIR}/' 
This is equivalent to using CDROM_SITE.

Some common sites have their own variables. It is strongly recommended
that you edit the INFRA/db/network.conf file for
your site.

Please refer to that file for a complete list, and address lists 
(those are not exhaustive). Those include:
MASTER_SITE_GNU			FSF and other GPL programs
MASTER_SITE_XCONTRIB		X11 contributed software
MASTER_SITE_SUNSITE		Sunsite site and mirror, major linux archive
MASTER_SITE_GNOME		Gnome
MASTER_SITE_PERL_CPAN		Comprehensive perl archive network
MASTER_SITE_TEX_CTAN		Comprehensive TeX archive network
MASTER_SITE_KDE			KDE
MASTER_SITE_TCLTK		Tcl/Tk
MASTER_SITE_AFTERSTEP		AfterStep
MASTER_SITE_WINDOWMAKER		WindowMaker

There is a backup copy of that file in
INFRA/templates/network.conf.template.

In case you don't have a permanent network connection, you should read
mirroring-ports(7).

Building several ports
======================
Each category directory holds a Makefile that propagates commands to
its sub ports, e.g., if you cd /usr/ports/audio && make package, this should
build packages for all ports under /usr/ports/audio.

A more useful command is the
INFRA/package/check-plist script.
You normally prepare a list of the ports you want to build, in the same
format as INFRA/plist/i386, and pass it to that script.
This yields a sorted list of the required ports.

You can filter ports that require interaction out with
make BATCH=yes

Files Summary
=============
/usr/ports (PORTSDIR): 
	the whole port collection
/usr/ports/<category>/<portname>:
	where to find a given port
/usr/ports/INDEX:
	all distfiles, rebuilt with make index
/usr/ports/distfiles (DISTFILES):
	repository for distribution files and distribution patches
/cdrom/distfiles (CDROM_SITE):
	standard location for distfiles off a CD
/usr/ports/packages/${MACHINE_ARCH} (PACKAGES):
	where binary packages are built (by category. Normally everything
	ends up under All, with symlinks for each category)
/usr/ports/<category>/<portname>/w-${PKGNAME}:
	where the ports mechanism does the building. This is normally a
	real directory, but you can set WRKOBJDIR to point to another
	base which is not /usr/ports, and work/ will  be a link to
	${WRKOBJDIR}/category/portname/work.  This can be useful to
	mount a master /usr/ports directory by NFS on several
	architectures. Normally, you first 
	cd /usr/ports && make WRKOBJDIR=path obj 
	on the master machine, which creates the symbolic links, so that
	you can mount your master /usr/ports read-only.
/usr/ports/<category>/<portname>/pkg/SECURITY:
	information relative to a security audit of the port.  Usually
	missing.
/usr/ports/infrastructure:
	paraphernalia around the ports tree
/usr/ports/infrastructure/db/network.conf:
	your local network configuration (ftp sites)
/var/db/pkg:
	installed ports, see pkg_add(1).
/usr/local (LOCALBASE):
	where normal ports install themselves.

Other tweaks
============
NO_IGNORE: coerce fetch, build, install... into doing their job even though
there might be a good reason not to. Good reasons include BROKEN,
ONLY_FOR_ARCH, IS_INTERACTIVE in BATCH mode. This is a dangerous option.

Keeping up with the Jones, ports as a moving target
===================================================
The OpenBSD ports tree is growing from release to release. It needs
people to write and test new ports.
Like for src, you can choose to live on the bleeding edge by updating 
your ports dir thru cvs or ftp, and contribute bug-reports. You must
update both ports and src in synch.

If you prefer to stay with a stable release, we try to make sure
the distfiles for a given release stay on the OpenBSD site between
releases.

No matter how fast we update the tree it seems that we are always
behind.   There are always new versions of software out there, without
an existing port. Very often, no one had time to update the port yet,
or it is very likely that the new version has not been tested enough
yet to deem it reasonable to upgrade the port.

You may wish to contribute, by updating ports or creating new ports.
please visit

	http://www.openbsd.org/porting.html

and always remember to communicate with OpenBSD project members on 
ports@@openbsd.org.  Why create a brand new shiny port to discover that
someone was already working on it, and they committed their new version
ten minutes before you announced yours ?

$OpenBSD: README,v 1.15 2003/06/15 21:09:31 avsm Exp $
@


1.15
log
@correct network.conf path
@
text
@d216 1
a216 1
format as  INFRA/db/essentials, and pass it to that script.
d293 1
a293 1
$OpenBSD: README,v 1.14 2003/03/01 09:09:16 david Exp $
@


1.14
log
@fix spelling of naddy's last name: Weisgerber
ok pvalchev@@
@
text
@d252 1
a252 1
/usr/ports/db/network.conf:
d293 1
a293 1
$OpenBSD: README,v 1.13 2002/08/18 17:44:01 fgsch Exp $
@


1.13
log
@Fix some inconsistencies; from Margarida sequeira <niness@@devilness.org>.
pvalchev@@ ok.
@
text
@d31 1
a31 1
Brad Smith <brad@@openbsd.org>, Christian Weisberger <naddy@@openbsd.org>, 
d293 1
a293 1
$OpenBSD: README,v 1.12 2002/04/21 03:59:37 pvalchev Exp $
@


1.12
log
@some style fixes and typos; from openbsd@@davidkrause.com
@
text
@d49 2
a50 2
* make key=<keyword> describe
will locate ports that match the given keyword in the Index and print
d293 1
a293 1
$OpenBSD: README,v 1.11 2001/11/01 22:59:37 espie Exp $
@


1.11
log
@Update... still somewhat obsolete, but less inaccurate.
@
text
@d11 1
a11 1
This file is  mostly obsolete. You should refer to the corresponding
d204 1
a204 1
In case you don't have a permanent network connection,  you should read
d278 2
a279 2
behind.   There are always new version of software out there, without
an existing port. Very often, no-one had time to update the port yet,
d293 1
a293 1
$OpenBSD: README,v 1.10 2001/04/11 15:57:50 espie Exp $
@


1.10
log
@Mark as out-of-date, until I've merged the corresponding info elsewhere.
@
text
@d12 2
a13 1
man-pages: ports(7), packages(7), bsd.port.mk(5) instead.
d19 2
a20 5
* individual ports list a 
MAINTAINER=  
line in their Makefile.  
* specific issues related to the ports framework (e.g., bugs in
bsd.port.mk)  should go to ports-admin@@openbsd.org
d31 2
a32 1
brad@@cvs.openbsd.org, naddy@@cvs.openbsd.org, espie@@cvs.openbsd.org
d49 1
a49 1
* make search key=<keyword>
d58 2
a59 1
will populate the ports tree with a set of html indices.
d91 3
a93 3
* install the software on your system
* log the installation so that later pkg_info or pkg_delete can deal with
the software.
d95 1
a95 1
Some ports can have some options, or demand that you make some choice 
d97 2
a98 2
cd /usr/ports/security/ssh 
make all install USA_RESIDENT=no
d100 3
a102 3
Some ports may prompt you for more choice, or give you important
information about ports building.  Likewise, installing or uninstalling
a port may give you useful information. READ IT.
d105 5
a109 8
* `make uninstall' to remove the installed software (same as pkg_delete)
* `make package' to convert the installed software into a binary `package'
(a tar ball that you can share with other machines with the same
configuration, contribute to the ftp project, or that you can backup 
separately). Packages normally end up in /usr/ports/packages, overridable
with PACKAGE.
* `make fetch-list' to build a small shell-script that should be able to
retrieve the missing distfiles and distribution patches for the given port.
d112 1
a112 1
* `make distclean' to also remove distfiles and distribution patches 
d114 1
a114 1
* `make clean CLEANDEPENDS=Yes' will also remove sub ports that have been
d116 1
a116 1
* `make distclean CLEANDEPENDS=Yes', guess what this does.
d119 6
a124 3
a lot.  Careful use of make clean and make distclean will help you. You
can also redirect ports activity elsewhere by making use of WRKOBJDIR
and DISTDIR.  `find /usr/ports -type d -name work\* -print' 
a126 8
There are a few kinks in the building of ports with options yet. Namely,
all such ports should produce distinct package names if built with
different options.  Also, there is no check for consistency between
make and make install. Taking the ssh example again,
make USA_RESIDENT=No
make install USA_RESIDENT=Yes
won't be flagged as an error...

a169 1
ftp://ftp.openbsd.org/pub/OpenBSD/licensed/${DIST_SUBDIR}/
d204 2
a205 5
In case you don't have a permanent network connection, 
`make fetch-list' should provide you with a shell script you can use to
retrieve distfiles you're missing to build a given port.

(TODO: improve and systematize fetch-all)
d210 2
a211 2
its sub ports, e.g., if you cd /usr/ports/audio && make, this should
build all ports under /usr/ports/audio.
d214 1
a214 1
INFRA/build/find-build-order script.
d216 1
a216 4
format as  INFRA/db/essentials, and pass it to find-build-order like
this:
cd /usr/ports/infrastructure
cat db/essentials|build/find-build-order
a218 2
(Todo: provide for a script which builds everything we want)

a221 3
Likewise, make FOR_CDROM=yes, make NO_RESTRICTED=yes 
will yield only the ports with the required level of liberty.

a229 4
/usr/ports/README.html
/usr/ports/<category>/README.html
/usr/ports/<category>/<portname>/README.html:
	www indices produced by make readmes
d234 1
a234 1
/usr/ports/packages (PACKAGES):
d237 1
a237 1
/usr/ports/<category>/<portname>/work:
a257 2
/usr/X11R6 (X11BASE):
	where ports with a large dependency on X11 install themselves.
a260 14
FORCE_PACKAGE: force package building.  Some ports can't be distributed
as packages for legal reasons, but you may wish to build a package for
your private consumption.
HAVE_MOTIF: set in /etc/mk.conf if we own a copy of the real thing.
MOTIF_STATIC: set in /etc/mk.conf to use a static version of the Motif
library only.
NO_MTREE: don't run mtree before installing a port. This is a dangerous
option.
NO_PKG_REGISTER: used for make install, don't register port under
/var/db/pkg.   This is a dangerous option.
FORCE_PACKAGE_REGISTER: override an existing port (the <pkgname> is already
installed message). You will end up with several flavors of the same
package.  This is a dangerous option, as this will probably erase the other
port.
d263 1
a263 2
ONLY_FOR_ARCH, IS_INTERACTIVE in BATCH mode, NO_CDROM in FOR_CDROM... This
is a dangerous option.
d270 2
a271 1
your ports dir thru cvs or ftp, and contribute bug-reports.
d278 6
a283 18
behind.  For this reason you will sometimes find a port that is
marked as BROKEN.  If you try to build the port you will see a
message something like:

   ===> xxx-1.0 is marked as broken: newer version available.

This means we know there is a newer version of the application but
have not yet had time to update the port.  If you get this message
all may not be lost.  If the old sources are still available (and
this is often the case) you can force a build using the old sources
using the command:

	make NO_IGNORE=yes
	sudo make NO_IGNORE=yes install

If you're feeling generous a better solution is to update the port
to use the new sources and feed the changes back to the project.
If you are interested in contributing (or creating a new port)
d288 6
a293 1
$OpenBSD: README,v 1.9 2001/02/21 23:23:13 avsm Exp $
@


1.9
log
@fix some typos
@
text
@d9 7
d33 1
a33 1
brad@@cvs.openbsd.org, turan@@cvs.openbsd.org, espie@@cvs.openbsd.org
d340 1
a340 1
$OpenBSD: README,v 1.8 1999/10/07 16:44:28 espie Exp $
@


1.8
log
@More explicit instructions for moving ports files out of the way.
Fix typo.
@
text
@d20 1
a20 1
eradicate all bugs, things may go wrong on invidual ports.  
d25 1
a25 1
Developpers with a major investment in the ports tree include
d36 1
a36 1
Stuff that doesn't constitue a port proper, but rather paraphernalia,
d333 1
a333 1
$OpenBSD: README,v 1.7 1999/10/07 14:35:52 espie Exp $
@


1.7
log
@Leave the `Contacts' paragraph right at the top, but mellow a little bit,
as things tend to work, not to go wrong :)
@
text
@d115 4
a118 3
a lot.  Careful use of make clean and make distclean will help you.
`find /usr/ports -type d -name work\* -print' can be useful to find out
ports you forgot to clean out.
d183 1
a183 1
make fetch MASTER_SITE_OVERRIDE='file:/cdrom/{$DIST_SUBDIR}/' 
d333 1
a333 1
$OpenBSD: README,v 1.6 1999/09/26 10:52:55 espie Exp $
@


1.6
log
@work doesn't cover all work dirnames (from Marco)
@
text
@d9 2
a10 3
When things go wrong
====================
There are several contacts for the ports tree.
d13 1
a13 1
line in their Makefile.  Try to contact that person first.
d19 5
a23 2
As a general rule, try to contact the MAINTAINER first.  If nothing happens
after a reasonable delay, start plaguing him, or go to the next step.
d332 1
a332 1
$OpenBSD: README,v 1.5 1999/09/25 14:45:27 espie Exp $
@


1.5
log
@Flesh out significantly.

(A few details do depend on changes to bsd.port.mk which have not yet
been commited)
@
text
@d114 1
a114 1
`find /usr/ports -type d -name work -print' can be useful to find out
d330 1
a330 1
$OpenBSD: README,v 1.4 1998/10/09 00:15:35 marc Exp $
@


1.4
log
@Add OpenBSD cvs tag, fix typo
@
text
@d9 297
a305 2
The OpenBSD ports tree is always growing. Therefor it is essential
that you continue to update your ports dir thru cvs or ftp.
d330 1
a330 22
If you would like to search for a given port, you can do so easily
by saying:

	make search key="<keyword>"

Which will generate a list of all ports matching <keyword>.

NOTE:  This tree can GROW significantly in size during normal usage!
The distribution tar files can and do accumulate in /usr/ports/distfiles,
and the individual ports will also use up lots of space in their work
subdirectories unless you remember to "make clean" after you're done
building a given port.  /usr/ports/distfiles can also be periodically
cleaned without ill-effect, though if you don't have the original
distribution tarball(s) for something on CDROM then you will need to pull
it all over your network connection again if you ever try to build the
associated port.

For help or other information 
Please send mail to 
ports@@OpenBSD.ORG

$OpenBSD$
@


1.3
log
@checkpoint LICENCE file changes and update the README
with instruction on how to build a BROKEN port
@
text
@d1 1
d28 1
a28 1
If youre feeling generous a better solution is to update the port
d53 1
a53 1
Please sendmail to 
d55 2
@


1.2
log
@
spelling,make neat
@
text
@d11 21
a31 2
If you are interested in creating a new port or contributing please 
visit
d33 1
@


1.1
log
@new readme for ports.
@
text
@d1 5
a5 3
Welcome to the OpenBSD ports collection.  
For more information on the OpenBSD ports tree please visit
        http://www.openbsd.org/ports.html
a6 2
For general information on the OpenBSD tree please visit
	http://www.openbsd.org
d8 1
a8 2

The OpenBSD ports tree is always growing. Therefor if is essential
@

