head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.26
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.24
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.20
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.22
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.18
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.16
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.14
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.12
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.10
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.8
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2011.03.16.22.53.31;	author jasper;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2011.03.16.22.55.22;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.1
log
@- fix some crashers on LP64
- apply a security fix for CVE-2008-2383

from Todd Carson
ok maintainer
@
text
@$OpenBSD$

Fix crashes on LP64.

--- charproc.c.orig	Wed Mar  2 22:39:44 2011
+++ charproc.c	Wed Mar  2 23:01:35 2011
@@@@ -6979,12 +6979,12 @@@@ g_utf8_validate (const char  *str,
 }
 
 int
-from_utf8(char *utf8, int len, char *ksc)
+from_utf8(char *utf8, size_t len, char *ksc)
 {
     char * tmp = alloca(len);
     char *out = tmp;
-    int out_len = len;
-    int vlen;
+    size_t out_len = len;
+    size_t vlen;
     char *vs, *end;
 
     if (!from_utf8_cd) {
@@@@ -7004,7 +7004,7 @@@@ from_utf8(char *utf8, int len, char *ksc)
 
     do {
 	ICONV_CONST char *in_p = (ICONV_CONST char *) utf8;
-	int iconv_len = iconv(from_utf8_cd, &in_p, 
+	size_t iconv_len = iconv(from_utf8_cd, &in_p, 
 			      &len, &out, &out_len);
 	if (iconv_len < 0) {
 	    int utf8_bytes;
@@@@ -7037,10 +7037,10 @@@@ from_utf8(char *utf8, int len, char *ksc)
 }
 
 int
-to_utf8(char *ksc, int len, char *utf8)
+to_utf8(char *ksc, size_t len, char *utf8)
 {
     char *out = utf8;
-    int out_len = len * 2;
+    size_t out_len = len * 2;
     ICONV_CONST char *in_p;
 
     if (!to_utf8_cd) {
@@@@ -7049,7 +7049,7 @@@@ to_utf8(char *ksc, int len, char *utf8)
 	to_utf8_cd = iconv_open("UTF-8", "EUC-KR");
     }
     if (0) {
-	int i;
+	size_t i;
 	for(i=0;i<len;i++) {
 	    if (ksc[i] & 0x80) {
 		char c = ksc[i+1];
@


1.1.2.1
log
@- apply a security fix for CVE-2008-2383

from Todd Carson
ok maintainer
@
text
@d1 1
a1 1
$OpenBSD: patch-charproc_c,v 1.1 2011/03/16 22:53:31 jasper Exp $
@

